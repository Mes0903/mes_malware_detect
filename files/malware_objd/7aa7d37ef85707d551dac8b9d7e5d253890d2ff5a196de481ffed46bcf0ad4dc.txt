
7aa7d37ef85707d551dac8b9d7e5d253890d2ff5a196de481ffed46bcf0ad4dc.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	inc    esp
  4018d8:	mov    dl,0xa5
  4018da:	push   esp
  4018db:	add    DWORD PTR [ebx+0x5e4b8383],0xffffff83
  4018e2:	sub    DWORD PTR [eax],0x31
  4018e5:	es cmp al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	imul   esi,DWORD PTR [ecx+0x70],0xd84b7073
  4018f6:	loope  0x4018f4
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	sub    BYTE PTR [esi+0x1ac72d13],cl
  40198c:	mov    edx,0xe98b4eb2
  401991:	cmp    BYTE PTR [ebx-0x434b632d],dl
  401997:	adc    al,0x4f
  401999:	push   ecx
  40199a:	shl    cl,1
  40199c:	mov    dh,0xe4
  40199e:	(bad)  
  40199f:	retf   0xc296
  4019a2:	dec    edx
  4019a3:	pop    esi
  4019a4:	dec    esp
  4019a5:	fsub   DWORD PTR [edi+0x19]
  4019a8:	pushf  
  4019a9:	les    ebp,FWORD PTR [ecx+0x67]
  4019ac:	dec    edx
  4019ad:	cmp    edi,DWORD PTR [edi-0x7c]
  4019b0:	adc    al,0x19
  4019b2:	sub    eax,0x6dca2f5
  4019b7:	push   0xa6aac127
  4019bc:	pop    esp
  4019bd:	fdivr  DWORD PTR [edi+0x4ebdc5aa]
  4019c3:	aas    
  4019c4:	ins    BYTE PTR es:[edi],dx
  4019c5:	pop    esp
  4019c6:	fdiv   QWORD PTR [ebx]
  4019c8:	sub    DWORD PTR [edi],0x66370a21
  4019ce:	jge    0x401a2a
  4019d0:	jo     0x401a1f
  4019d2:	(bad)  
  4019d4:	inc    edx
  4019d5:	nop
  4019d6:	sbb    bh,BYTE PTR [ebx]
  4019d8:	adc    edx,ebp
  4019da:	or     BYTE PTR [ebp+0x12],0x1d
  4019de:	inc    esi
  4019df:	icebp  
  4019e0:	push   ebx
  4019e1:	iret   
  4019e2:	jmp    0x4019fa
  4019e4:	data16 clc 
  4019e6:	mov    ebp,0x831645d0
  4019eb:	adc    al,0xf9
  4019ed:	jnp    0x401a1c
  4019ef:	repz lds esi,FWORD PTR [edi]
  4019f2:	push   DWORD PTR [esi-0x5fc74e85]
  4019f8:	mov    ds:0xa7f37a63,eax
  4019fd:	jae    0x4019df
  4019ff:	mov    esp,0x33438cc4
  401a04:	cmp    ecx,esp
  401a06:	push   ss
  401a07:	pushf  
  401a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a09:	mov    al,0xd0
  401a0b:	or     al,0xd9
  401a0d:	jmp    0x6a84:0x8f53805a
  401a14:	cmp    ecx,DWORD PTR [eax+0x20659dd5]
  401a1a:	leave  
  401a1b:	push   cs
  401a1c:	call   0x35da:0x75532e30
  401a23:	(bad)  
  401a24:	push   esp
  401a25:	mov    DWORD PTR [edi-0x60d6e126],eax
  401a2b:	sub    eax,0x4733b59b
  401a30:	xor    BYTE PTR ds:[ebx-0x2d94bb78],dh
  401a37:	ins    DWORD PTR es:[edi],dx
  401a38:	and    DWORD PTR [ebx-0x4],0x5ad3fb35
  401a3f:	dec    eax
  401a40:	jg     0x401a72
  401a42:	xchg   ebp,eax
  401a43:	push   ds
  401a44:	cdq    
  401a45:	retf   0x930e
  401a48:	or     eax,DWORD PTR [edx+0x7b]
  401a4b:	mov    eax,ds:0xc07e4965
  401a50:	xchg   edx,eax
  401a51:	pop    ebp
  401a52:	push   es
  401a53:	dec    eax
  401a54:	(bad)  
  401a55:	push   ss
  401a56:	cs and ebx,ecx
  401a59:	xor    al,BYTE PTR [eax+eiz*1]
  401a5c:	iret   
  401a5d:	mov    ecx,0xacfabcfe
  401a62:	mov    ecx,0x18abec6a
  401a67:	xchg   DWORD PTR [edx+0x1bf0a001],edx
  401a6d:	sbb    BYTE PTR [ebx],ah
  401a6f:	ins    DWORD PTR es:[edi],dx
  401a70:	pushw  0xe9c4
  401a74:	or     dh,0x3f
  401a77:	xchg   edi,eax
  401a78:	in     al,dx
  401a79:	jae    0x401aa8
  401a7b:	ins    BYTE PTR es:[edi],dx
  401a7c:	xchg   ebx,eax
  401a7d:	inc    esp
  401a7e:	fdiv   DWORD PTR [edi-0x51]
  401a81:	aaa    
  401a82:	fldenv [ebx]
  401a84:	and    dl,BYTE PTR [ecx-0x55ddcd5a]
  401a8a:	mov    al,0x46
  401a8c:	or     ebp,DWORD PTR [edi]
  401a8e:	push   sp
  401a90:	xchg   edi,eax
  401a91:	(bad)  
  401a92:	add    BYTE PTR [edi+ecx*4-0x61f64adf],0x74
  401a9a:	inc    ebp
  401a9b:	xchg   ebp,eax
  401a9c:	jne    0x401a31
  401a9e:	mov    ds:0x5731f519,al
  401aa3:	adc    al,0xc7
  401aa5:	test   al,0x67
  401aa7:	dec    ecx
  401aa8:	jmp    0x22908efb
  401aad:	sub    eax,0x8a711046
  401ab2:	push   edx
  401ab3:	cmp    eax,0x811f8abc
  401ab8:	lods   eax,DWORD PTR ds:[esi]
  401ab9:	and    eax,0xa6dd1172
  401abe:	lds    esp,FWORD PTR [edx-0x1b7ba06d]
  401ac4:	mov    ebx,0xa1f08ea
  401ac9:	ss cmp dh,dh
  401acc:	cmp    dl,bl
  401ace:	dec    edx
  401acf:	inc    ecx
  401ad0:	test   DWORD PTR [ebx],ebp
  401ad2:	imul   edx,DWORD PTR [esi],0x73
  401ad5:	xchg   edi,eax
  401ad6:	in     al,0xa5
  401ad8:	mov    ah,0xca
  401ada:	es dec ecx
  401adc:	fbstp  TBYTE PTR [ebx+0x32224b0b]
  401ae2:	add    al,0x44
  401ae4:	mov    bl,dh
  401ae6:	pop    edx
  401ae7:	in     eax,0x1b
  401ae9:	fmul   st(4),st
  401aeb:	clc    
  401aec:	and    al,BYTE PTR [ebx+0x0]
  401aef:	xor    esp,DWORD PTR [eax+0x52b56fd6]
  401af5:	daa    
  401af6:	imul   esi,DWORD PTR [ebx+0x788ba8ac],0x5797eaa3
  401b00:	push   0x6a90771a
  401b05:	mov    dh,0x49
  401b07:	jl     0x401b41
  401b09:	in     eax,0x50
  401b0b:	sahf   
  401b0c:	pop    es
  401b0d:	and    dh,BYTE PTR [edx-0x26]
  401b10:	jbe    0x401af5
  401b12:	or     al,0x3a
  401b14:	and    al,0x65
  401b16:	repnz and al,0x20
  401b19:	jl     0x401aa3
  401b1b:	pop    es
  401b1c:	outs   dx,DWORD PTR ds:[esi]
  401b1d:	add    al,0x46
  401b1f:	lea    ebp,[esp+eiz*2-0x5c91a665]
  401b26:	pop    edx
  401b27:	leave  
  401b28:	pop    ecx
  401b29:	pop    ebp
  401b2a:	mov    es,WORD PTR [ecx-0x766a9c83]
  401b30:	shr    DWORD PTR [ebx],1
  401b32:	aaa    
  401b33:	in     al,dx
  401b34:	jae    0x401b79
  401b36:	sahf   
  401b37:	aad    0x22
  401b39:	inc    esp
  401b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b3b:	test   BYTE PTR [edx-0xe],dh
  401b3e:	add    al,0x42
  401b40:	neg    ch
  401b42:	lock ins BYTE PTR es:[edi],dx
  401b44:	or     dl,BYTE PTR [edx-0x2c]
  401b47:	and    BYTE PTR [ebx-0xd],dh
  401b4a:	cmp    al,0x75
  401b4c:	mov    WORD PTR [ebx],ds
  401b4e:	call   0x653c:0x6d51888
  401b55:	mov    ds:0xbb2d435e,al
  401b5a:	dec    ebx
  401b5b:	mov    esi,0x607ce2d6
  401b60:	fmul   QWORD PTR ss:[eax-0x5ab1b604]
  401b67:	jmp    0x401b03
  401b69:	mov    ebx,ds
  401b6b:	retf   
  401b6c:	sub    ebp,DWORD PTR [eax]
  401b6e:	sbb    eax,0x2e81ab4b
  401b73:	aaa    
  401b74:	retf   0x9331
  401b77:	idiv   BYTE PTR [edx+0x66f30196]
  401b7d:	sti    
  401b7e:	outs   dx,DWORD PTR ds:[esi]
  401b7f:	cmp    ebp,DWORD PTR [ebx-0x1a49ca4]
  401b85:	sbb    al,al
  401b87:	jp     0x401b1f
  401b89:	push   edx
  401b8a:	lods   eax,DWORD PTR ds:[esi]
  401b8b:	xchg   esi,eax
  401b8c:	shl    DWORD PTR [ecx+0x6b4ca20d],0x3e
  401b93:	mov    ecx,0xd3daabc
  401b98:	retf   0x7db2
  401b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b9c:	xor    BYTE PTR [ebp+ebx*8+0x2e],0x41
  401ba1:	jge    0x401beb
  401ba3:	mov    ah,0xfb
  401ba5:	push   eax
  401ba6:	mov    dl,0xbd
  401ba8:	add    eax,0x587c915a
  401bad:	addr16 sahf 
  401baf:	mov    ds:0x44a9cfcb,al
  401bb4:	sbb    al,0xbe
  401bb6:	ss dec ecx
  401bb8:	cmp    bh,BYTE PTR [esi]
  401bba:	jne    0x401b59
  401bbc:	jp     0x401b74
  401bbe:	mov    al,0x93
  401bc0:	jmp    0xd5e81aee
  401bc5:	pop    edx
  401bc6:	add    BYTE PTR [ebx],bh
  401bc8:	adc    al,0x93
  401bca:	inc    esi
  401bcb:	jb     0x401c1e
  401bcd:	sbb    dl,BYTE PTR [esi]
  401bcf:	pop    esp
  401bd0:	jmp    0x6f484038
  401bd5:	jmp    0x6b8d:0x4991d7a5
  401bdc:	fcomp  DWORD PTR [edx]
  401bde:	sub    dh,BYTE PTR [ebp+edi*8-0x7006655d]
  401be5:	out    0x3a,al
  401be7:	inc    ecx
  401be8:	xor    al,0x38
  401bea:	mov    al,0x93
  401bec:	fdiv   DWORD PTR [esi+eiz*8-0x2d]
  401bf0:	pop    ds
  401bf1:	ret    
  401bf2:	loopne 0x401c35
  401bf4:	outs   dx,BYTE PTR ds:[esi]
  401bf5:	push   ss
  401bf6:	test   DWORD PTR [ebx],0xae90c524
  401bfc:	xor    DWORD PTR [esi],esi
  401bfe:	xor    eax,0xc46e7e49
  401c03:	jns    0x401c83
  401c05:	sbb    al,0x8a
  401c07:	mov    DWORD PTR [ecx+0x55],ebx
  401c0a:	jae    0x401bac
  401c0c:	jle    0x401c6d
  401c0e:	in     al,dx
  401c0f:	out    dx,eax
  401c10:	add    esi,eax
  401c12:	enter  0x8d61,0x40
  401c16:	sub    BYTE PTR [ecx],0x7c
  401c19:	test   al,0xc8
  401c1b:	ja     0x401bde
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	or     esp,DWORD PTR [edx]
  401c21:	jo     0x401c48
  401c23:	mov    ch,0x77
  401c25:	xor    ebp,DWORD PTR [edx+edx*1-0x3d]
  401c29:	mov    eax,0xba4685bd
  401c2e:	jge    0x401c0d
  401c30:	ss mov edi,0x54fd0ce4
  401c36:	cmp    dh,BYTE PTR [ecx+0x2d]
  401c39:	mov    eax,ds:0x57186847
  401c3e:	xor    ebx,esp
  401c40:	cmp    eax,0x8dbbe44
  401c45:	jbe    0x401c9f
  401c47:	cmp    eax,DWORD PTR [ebp+0x56]
  401c4a:	and    al,0x7b
  401c4c:	pushf  
  401c4d:	fsub   QWORD PTR [ecx]
  401c4f:	lods   eax,DWORD PTR ds:[esi]
  401c50:	mov    BYTE PTR [esi+ebp*2-0x5b],dl
  401c54:	xchg   esi,eax
  401c55:	cdq    
  401c56:	in     al,0x60
  401c58:	xor    al,0xa7
  401c5a:	ret    
  401c5b:	fistp  WORD PTR [edi+0xf]
  401c5e:	lahf   
  401c5f:	imul   eax,DWORD PTR [eax+0x5e],0xa84b2cce
  401c66:	fwait
  401c67:	push   edi
  401c68:	lock imul edi,DWORD PTR [ecx],0xa39dd90
  401c6f:	pop    ebp
  401c70:	repz daa 
  401c72:	out    0x5c,eax
  401c74:	arpl   bx,si
  401c76:	ds dec edx
  401c78:	dec    esi
  401c79:	aam    0x52
  401c7b:	cmp    BYTE PTR ds:0x8b34a69c,ch
  401c81:	mov    esi,0xb084c9f0
  401c86:	mov    ebx,DWORD PTR [edx]
  401c88:	in     eax,dx
  401c89:	cli    
  401c8a:	shl    BYTE PTR [edi],0xd7
  401c8d:	icebp  
  401c8e:	mov    ds:0x48f61207,eax
  401c93:	sub    DWORD PTR [ebp-0x6c72feac],ebx
  401c99:	cs je  0x401c41
  401c9c:	(bad)  
  401c9d:	call   0x3066:0x8d5c610b
  401ca4:	test   al,0x48
  401ca6:	xlat   BYTE PTR ds:[ebx]
  401ca7:	fisttp DWORD PTR [edi-0x57b21aba]
  401cad:	jno    0x401d20
  401caf:	stc    
  401cb0:	fcomp  st(7)
  401cb2:	sub    DWORD PTR [edx],esp
  401cb4:	add    BYTE PTR [edx],0x88
  401cb7:	imul   esp,DWORD PTR [ebx],0x62
  401cba:	lock xlat BYTE PTR ds:[ebx]
  401cbc:	int3   
  401cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cbe:	inc    ecx
  401cbf:	(bad)  
  401cc0:	or     BYTE PTR [edi],bl
  401cc2:	pushf  
  401cc3:	mov    ecx,DWORD PTR [edx]
  401cc5:	ds pop es
  401cc7:	xchg   DWORD PTR [edi-0x34a06cd0],ebx
  401ccd:	ja     0x401c76
  401ccf:	stos   BYTE PTR es:[edi],al
  401cd0:	xchg   ebx,eax
  401cd1:	cmc    
  401cd2:	arpl   WORD PTR [eax],di
  401cd4:	loop   0x401cf9
  401cd6:	sbb    edx,DWORD PTR [ecx+0x38]
  401cd9:	sub    edx,ecx
  401cdb:	jbe    0x401c92
  401cdd:	add    edi,ecx
  401cdf:	test   al,0x72
  401ce1:	or     ebp,DWORD PTR [esi+ecx*2+0x29f96f3b]
  401ce8:	push   esp
  401ce9:	pop    edx
  401cea:	repnz sub al,al
  401ced:	or     BYTE PTR [ecx],bl
  401cef:	imul   esi,esi,0xa3ebbcf5
  401cf5:	leave  
  401cf6:	lds    ebx,FWORD PTR [ecx]
  401cf8:	out    0x81,eax
  401cfa:	cwde   
  401cfb:	adc    eax,0x4a28577a
  401d00:	jnp    0x401d3d
  401d02:	gs mov ecx,0x7966362e
  401d08:	and    DWORD PTR [esi-0x5ef28f62],ecx
  401d0e:	push   ds
  401d0f:	jnp    0x401ca0
  401d11:	or     eax,DWORD PTR [ecx-0x7ca69271]
  401d17:	xchg   DWORD PTR [edi-0x20],edx
  401d1a:	and    edx,DWORD PTR [ecx-0x32]
  401d1d:	push   eax
  401d1e:	hlt    
  401d1f:	and    DWORD PTR ss:[ebx],ecx
  401d22:	sub    edi,ebx
  401d24:	push   ebp
  401d25:	pop    edi
  401d26:	sahf   
  401d27:	cmp    eax,0x677e6155
  401d2c:	ins    DWORD PTR es:[edi],dx
  401d2d:	fldcw  WORD PTR [esi]
  401d2f:	pop    ds
  401d30:	mov    edx,0xa7e1eb3f
  401d35:	sbb    esi,esp
  401d37:	or     BYTE PTR ds:0xebbb579f,0xd2
  401d3e:	retf   
  401d3f:	inc    edx
  401d40:	sbb    DWORD PTR [eax],eax
  401d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d43:	mov    esp,0xb690db24
  401d48:	into   
  401d49:	fdivr  QWORD PTR [ebp+0x12]
  401d4c:	push   0xf17500ab
  401d51:	outs   dx,BYTE PTR ds:[esi]
  401d52:	mov    edi,DWORD PTR [edx-0xa]
  401d55:	xchg   ecx,eax
  401d56:	ret    0x3335
  401d59:	mov    ch,0x84
  401d5b:	jne    0x401d7d
  401d5d:	xlat   BYTE PTR ds:[ebx]
  401d5e:	rcr    BYTE PTR [edi],cl
  401d60:	mov    WORD PTR [ebx-0x1ffb691c],es
  401d66:	push   0x203d9fd2
  401d6b:	xchg   ebx,eax
  401d6c:	xor    DWORD PTR [ebx-0x66b2a3d2],edx
  401d72:	out    0x8f,eax
  401d74:	neg    DWORD PTR [edi]
  401d76:	std    
  401d77:	test   al,0x97
  401d79:	popf   
  401d7a:	jl     0x401dcf
  401d7c:	outs   dx,BYTE PTR ds:[esi]
  401d7d:	dec    esp
  401d7e:	inc    ebx
  401d7f:	inc    esi
  401d80:	(bad)  
  401d81:	test   eax,0x13f69772
  401d86:	add    eax,DWORD PTR [edx]
  401d88:	nop
  401d89:	ret    0x3b3f
  401d8c:	push   es
  401d8d:	or     ch,BYTE PTR [ebx+0x71f5ece4]
  401d93:	sbb    eax,0xa9c6627e
  401d98:	mov    ds:0x8cd0976b,al
  401d9d:	sub    al,0xed
  401d9f:	inc    esp
  401da0:	push   ds
  401da1:	sub    ebp,DWORD PTR [ebx-0x9ad0a56]
  401da7:	cmp    ebp,DWORD PTR [ecx+ebx*2]
  401daa:	sti    
  401dab:	clc    
  401dac:	push   ebx
  401dad:	mov    edx,0x14da9eb7
  401db2:	or     DWORD PTR [edi-0x1f],edi
  401db5:	cmp    esp,ebx
  401db7:	mov    ebp,0xb8ff8972
  401dbc:	loop   0x401dfa
  401dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dbf:	in     eax,0x43
  401dc1:	sbb    ebx,DWORD PTR [edi]
  401dc3:	std    
  401dc4:	dec    esp
  401dc5:	retf   0x7847
  401dc8:	mov    eax,0x3931b636
  401dcd:	mov    eax,0x62d270f9
  401dd2:	jp     0x401daf
  401dd4:	pop    es
  401dd5:	(bad)
  401dd8:	jle    0x401d76
  401dda:	and    al,BYTE PTR [edi+0x67]
  401ddd:	adc    DWORD PTR [ebx],edi
  401ddf:	ret    
  401de0:	in     al,0x76
  401de2:	adc    al,0x47
  401de4:	push   edx
  401de5:	push   ecx
  401de6:	and    DWORD PTR [ebx-0xa539c46],0x8c093e66
  401df0:	sbb    ch,BYTE PTR [edi-0x2e5a7442]
  401df6:	or     al,0xb2
  401df8:	jmp    0xdfcdf72c
  401dfd:	imul   edi,DWORD PTR [ebx+eiz*2-0x3b],0xf60fac2
  401e05:	and    eax,0xca9caf8b
  401e0a:	and    eax,0x87c752c6
  401e0f:	dec    edi
  401e10:	adc    BYTE PTR [edi],0x8b
  401e13:	xor    eax,0x3d5355d
  401e18:	ins    BYTE PTR es:[edi],dx
  401e19:	push   edi
  401e1a:	out    0x94,eax
  401e1c:	jns    0x401e5c
  401e1e:	and    DWORD PTR [edx-0x7f],0x57
  401e22:	outs   dx,BYTE PTR ds:[esi]
  401e23:	mov    esi,0x336c760a
  401e28:	mov    edx,0x8b587ef0
  401e2d:	inc    esi
  401e2e:	xor    BYTE PTR [edx-0x3a276f2d],0xcb
  401e35:	(bad)  
  401e36:	jmp    0xd5139000
  401e3b:	addr16 test al,0xa8
  401e3e:	stc    
  401e3f:	mov    edx,0xdfd2e2fe
  401e44:	push   ecx
  401e45:	and    eax,0x5afad93f
  401e4a:	sbb    ax,0xc7c3
  401e4e:	jge    0x401e60
  401e50:	mov    ebp,0xb1dcbb2d
  401e55:	push   0xffffff86
  401e57:	scas   eax,DWORD PTR es:[edi]
  401e58:	fidivr DWORD PTR [ecx]
  401e5a:	mov    BYTE PTR [ecx-0xab766bf],ch
  401e60:	int    0x92
  401e62:	into   
  401e63:	lods   eax,DWORD PTR ds:[esi]
  401e64:	fidiv  WORD PTR [ebp+0x365c1b46]
  401e6a:	dec    esp
  401e6b:	mov    gs,ecx
  401e6d:	mov    gs,edx
  401e6f:	dec    edx
  401e70:	call   ebp
  401e72:	into   
  401e73:	add    esi,ebp
  401e75:	and    ah,0x42
  401e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e79:	shr    BYTE PTR [esi],0x3d
  401e7c:	fs pop es
  401e7e:	xchg   edx,eax
  401e7f:	sub    BYTE PTR [ecx+0x791aea9b],0x9b
  401e86:	and    DWORD PTR [edi+0x49],ecx
  401e89:	cmp    DWORD PTR [eax+0xd388618],0x78
  401e90:	push   ds
  401e91:	repz dec esp
  401e93:	pushf  
  401e94:	(bad)  
  401e95:	jae    0x401eea
  401e97:	call   0xb27ea252
  401e9c:	xor    ebp,eax
  401e9e:	int3   
  401e9f:	out    dx,eax
  401ea0:	xchg   BYTE PTR [eax+ecx*2-0x21e94cc],ah
  401ea7:	pop    esi
  401ea8:	aam    0x50
  401eaa:	pop    ss
  401eab:	ret    0xcd81
  401eae:	dec    ebp
  401eaf:	retf   0xba99
  401eb2:	test   eax,0xebccbab3
  401eb7:	and    al,BYTE PTR [ebx]
  401eb9:	cli    
  401eba:	outs   dx,BYTE PTR ds:[esi]
  401ebb:	or     eax,0x6c4ef1e4
  401ec0:	frstor ds:0x9057bad4
  401ec6:	into   
  401ec7:	into   
  401ec8:	fnstcw WORD PTR [edx]
  401eca:	pop    esp
  401ecb:	or     bh,al
  401ecd:	cmc    
  401ece:	jbe    0x401eb1
  401ed0:	loopne 0x401e58
  401ed2:	fisttp QWORD PTR [edi]
  401ed4:	adc    DWORD PTR [ebx],edi
  401ed6:	cdq    
  401ed7:	call   0xa4ad:0xadabf480
  401ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401edf:	fnstsw ax
  401ee1:	jecxz  0x401e7c
  401ee3:	imul   esp,DWORD PTR [ecx+ebp*1],0xf15bd879
  401eea:	int3   
  401eeb:	jo     0x401f0a
  401eed:	cmp    dh,BYTE PTR ds:0x80b1e120
  401ef3:	jmp    0x4b44:0xd1519a23
  401efa:	cmp    DWORD PTR [esi+0x20],ebx
  401efd:	jo     0x401f65
  401eff:	sbb    al,0xd
  401f01:	mov    WORD PTR [edi-0x7f806d05],ds
  401f07:	setle  BYTE PTR [ecx]
  401f0a:	out    dx,eax
  401f0b:	add    al,0xea
  401f0d:	add    BYTE PTR [eax-0x4d],0x54
  401f11:	add    al,0x9d
  401f13:	ja     0x401f29
  401f15:	out    0x69,eax
  401f17:	dec    esi
  401f18:	imul   ebx,esp,0xc6703ead
  401f1e:	inc    ebp
  401f1f:	cmp    eax,0xc9a3fe36
  401f24:	icebp  
  401f25:	lds    ebp,FWORD PTR [esp+ebx*8]
  401f28:	adc    bl,ch
  401f2a:	and    ah,BYTE PTR [ebp+0x1e]
  401f2d:	adc    al,0x44
  401f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f31:	daa    
  401f32:	fmul   QWORD PTR [edx+0x66]
  401f35:	sbb    BYTE PTR [esi-0x24],ah
  401f38:	dec    esi
  401f39:	xor    eax,0x3ee051cf
  401f3e:	cmp    edx,esp
  401f40:	dec    ebx
  401f41:	push   esp
  401f42:	hlt    
  401f43:	xor    dh,BYTE PTR [edx-0xf7e547b]
  401f49:	ja     0x401efc
  401f4b:	xor    DWORD PTR [edi-0x7e],esi
  401f4e:	push   0x1537b25b
  401f53:	push   esp
  401f54:	(bad)  
  401f55:	iret   
  401f56:	push   ss
  401f57:	and    eax,0x25a1096c
  401f5c:	addr16 fs test eax,0x78d8a36d
  401f63:	and    dh,BYTE PTR [edi]
  401f65:	mov    dl,ah
  401f67:	mov    ebp,0xbf264a26
  401f6c:	popa   
  401f6d:	addr16 jge 0x401fce
  401f70:	mov    dh,0x96
  401f72:	xor    DWORD PTR [edi+0x59],eax
  401f75:	sbb    BYTE PTR [eax],dh
  401f77:	imul   esp,DWORD PTR [ecx+0x32],0xaa940a64
  401f7e:	rol    BYTE PTR [esi-0x1a],0x52
  401f82:	adc    DWORD PTR [ecx+0x59],edx
  401f85:	nop
  401f86:	or     eax,0x7afd24d9
  401f8b:	test   eax,ecx
  401f8d:	pop    esi
  401f8e:	iret   
  401f8f:	adc    BYTE PTR [eax+0x6e3f97ad],ch
  401f95:	fstp   TBYTE PTR ds:0xef3412c0
  401f9b:	outs   dx,BYTE PTR ds:[esi]
  401f9c:	retf   
  401f9d:	ins    DWORD PTR es:[edi],dx
  401f9e:	pop    eax
  401f9f:	aaa    
  401fa0:	xchg   ebx,eax
  401fa1:	inc    ebx
  401fa2:	sar    DWORD PTR [ebp+0x59efdea3],0xd3
  401fa9:	jl     0x401ff6
  401fab:	xchg   DWORD PTR [eax+0x69],ebx
  401fae:	mov    edi,0x8a307182
  401fb3:	mov    eax,0xac00bb70
  401fb8:	mov    edx,ebx
  401fba:	jle    0x401ff7
  401fbc:	xor    al,0xfa
  401fbe:	lods   al,BYTE PTR ds:[esi]
  401fbf:	test   al,0x31
  401fc1:	xor    eax,0x3d27d243
  401fc6:	cmp    esi,DWORD PTR [edx]
  401fc8:	cmp    eax,0x213904f5
  401fcd:	pop    ss
  401fce:	xor    ah,dl
  401fd0:	pushf  
  401fd1:	lock mov edi,DWORD PTR [edi+0x4d13f7e9]
  401fd8:	push   esp
  401fd9:	fidiv  WORD PTR [ebx+0x2]
  401fdc:	push   esi
  401fdd:	add    BYTE PTR [edi+esi*2+0x564d5252],0x8a
  401fe5:	test   BYTE PTR [edi+0x1c18fb2c],al
  401feb:	mov    ah,0xaa
  401fed:	add    DWORD PTR ds:[esi],edi
  401ff0:	or     dl,BYTE PTR [esp+edi*1-0x8]
  401ff4:	xlat   BYTE PTR ds:[ebx]
  401ff5:	or     edi,ebp
  401ff7:	sbb    dl,BYTE PTR [edx-0x26]
  401ffa:	mov    esp,0x33155758
  401fff:	enter  0xc56d,0x7a
  402003:	add    esp,DWORD PTR [esi-0x2e]
  402006:	push   es
  402007:	mov    dl,cl
  402009:	mov    dh,0x42
  40200b:	push   ecx
  40200c:	(bad)  
  40200d:	sbb    al,0x57
  40200f:	adc    eax,0x96a5b770
  402014:	add    al,0xd2
  402016:	jmp    0x402086
  402018:	cmc    
  402019:	push   es
  40201a:	push   edi
  40201b:	jne    0x40203c
  40201d:	scas   eax,DWORD PTR es:[edi]
  40201e:	mov    esi,0xa32ed3d9
  402023:	push   cs
  402024:	pop    esp
  402026:	jecxz  0x402044
  402028:	mov    ebp,0xa00c515b
  40202d:	push   cs
  40202e:	outs   dx,DWORD PTR ds:[esi]
  40202f:	rcr    DWORD PTR [edi],1
  402031:	sti    
  402032:	ins    BYTE PTR es:[edi],dx
  402033:	aam    0x36
  402035:	push   0x98e9d2e9
  40203a:	mov    edx,esi
  40203c:	or     eax,0xdafc1a15
  402041:	adc    eax,0x8d883e72
  402046:	fisttp QWORD PTR [ebp+0x5d3c50f9]
  40204c:	push   ebx
  40204d:	jae    0x402069
  40204f:	add    BYTE PTR [ebx+esi*1],ah
  402052:	iret   
  402053:	jl     0x4020ad
  402055:	retf   
  402056:	jno    0x402003
  402058:	je     0x401fe5
  40205a:	and    al,0x27
  40205c:	retf   
  40205d:	leave  
  40205e:	(bad)  
  40205f:	out    0x9c,eax
  402061:	mov    dh,BYTE PTR [esi-0x72]
  402064:	sub    ah,0x66
  402067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402068:	scas   eax,DWORD PTR es:[edi]
  402069:	mov    cl,bh
  40206b:	add    eax,0x9b0814e0
  402070:	pop    es
  402071:	or     al,0x41
  402073:	outs   dx,BYTE PTR ds:[esi]
  402074:	jl     0x4020ef
  402076:	ret    0x626f
  402079:	repnz out dx,al
  40207b:	(bad)  
  40207c:	mov    esi,0xa0698791
  402081:	jae    0x40205f
  402083:	sbb    bx,dx
  402086:	pop    ds
  402087:	sbb    cl,dl
  402089:	fld    DWORD PTR ds:0xab326797
  40208f:	sub    eax,0x51d228b3
  402094:	arpl   WORD PTR fs:[ebp+0x48a51d8a],cx
  40209b:	aaa    
  40209c:	(bad)  
  40209d:	fdivr  QWORD PTR [edi+0x2f]
  4020a0:	fld    QWORD PTR [edi-0x1d]
  4020a3:	dec    ecx
  4020a4:	pop    ss
  4020a5:	or     BYTE PTR [ecx],ch
  4020a7:	push   esp
  4020a8:	ins    DWORD PTR es:[edi],dx
  4020a9:	fwait
  4020aa:	pop    esi
  4020ab:	mov    al,ds:0xb3df53c8
  4020b0:	xchg   bl,al
  4020b2:	sti    
  4020b3:	es scas al,BYTE PTR es:[edi]
  4020b5:	add    DWORD PTR [ecx+0x1c3b04a9],edx
  4020bb:	adc    al,0x44
  4020bd:	mov    cl,0xdf
  4020bf:	cdq    
  4020c0:	add    ebx,DWORD PTR [esi]
  4020c2:	fwait
  4020c3:	sbb    esp,DWORD PTR [eax-0x4132f885]
  4020c9:	lock in eax,dx
  4020cb:	push   0x70
  4020cd:	jmp    0x2efc:0xf822ea19
  4020d4:	cmc    
  4020d5:	mov    ch,0xc5
  4020d7:	push   cs
  4020d8:	inc    ecx
  4020d9:	leave  
  4020da:	loopne 0x4020ed
  4020dc:	popa   
  4020dd:	jb     0x402118
  4020df:	xchg   ecx,eax
  4020e0:	sbb    DWORD PTR [ecx-0x233e6358],ebx
  4020e6:	sbb    eax,0x820c24ea
  4020eb:	pop    esp
  4020ec:	adc    esp,DWORD PTR [edi-0x14]
  4020ef:	cmp    eax,ebp
  4020f1:	retf   0xf93b
  4020f4:	shr    DWORD PTR [ecx-0x4148b7c4],cl
  4020fa:	outs   dx,BYTE PTR cs:[esi]
  4020fc:	test   BYTE PTR [ebp-0x16],0xb
  402100:	iret   
  402101:	push   es
  402102:	and    ecx,ebx
  402104:	jmp    0x1a10:0x921d229f
  40210b:	push   ecx
  40210c:	xor    al,0x8e
  40210e:	mov    dh,0x9
  402110:	mov    esp,0x84393518
  402115:	loop   0x4020aa
  402117:	pusha  
  402118:	pop    edi
  402119:	sub    BYTE PTR [ecx+0x10],dh
  40211c:	mov    ebp,0xa006b97e
  402121:	sbb    edx,DWORD PTR [edi]
  402123:	fwait
  402124:	rcr    DWORD PTR ds:0x465aa4b5,0xfb
  40212b:	jl     0x402126
  40212d:	push   edx
  40212e:	or     ebx,DWORD PTR [eax+0x58fbe733]
  402134:	mov    edx,0xb7fae5f7
  402139:	(bad)  
  40213b:	push   0xd189c585
  402140:	(bad)  
  402141:	jne    0x40210e
  402143:	test   al,0xc6
  402145:	mov    gs,WORD PTR [ebp-0x627a57d6]
  40214b:	ja     0x40213a
  40214d:	fsub   QWORD PTR [edi+edx*2+0x77c1ebc4]
  402154:	pop    ebp
  402155:	jecxz  0x40217e
  402157:	(bad)  
  402158:	cmp    al,0x84
  40215a:	inc    edi
  40215b:	xlat   BYTE PTR ds:[ebx]
  40215c:	jnp    0x40212d
  40215e:	bound  edi,QWORD PTR [di]
  402161:	and    cl,BYTE PTR ds:0xd83c042b
  402167:	cmp    ah,BYTE PTR [eax-0x1e]
  40216a:	mov    edi,esi
  40216c:	mov    ?,WORD PTR [edi+0x78f3f682]
  402172:	add    dh,BYTE PTR [esi+0x8183222]
  402178:	fidiv  WORD PTR [edx-0xae19de0]
  40217e:	adc    BYTE PTR [esi+0x50db0439],0x8e
  402185:	mov    dh,BYTE PTR [ebx-0x537e14ec]
  40218b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40218c:	mov    esi,0x5c38a5de
  402191:	sub    BYTE PTR [eax-0x5c],ah
  402194:	ret    0xbf7f
  402197:	adc    BYTE PTR [esi],bl
  402199:	cdq    
  40219a:	cld    
  40219b:	mov    ds:0x726081eb,al
  4021a0:	inc    esp
  4021a1:	push   eax
  4021a2:	pop    ebp
  4021a3:	xchg   ebp,eax
  4021a4:	call   DWORD PTR [ebp-0xb091d64]
  4021aa:	add    DWORD PTR [ebp-0x7d648522],edx
  4021b0:	push   ds
  4021b1:	(bad)  
  4021b2:	loopne 0x4021d5
  4021b4:	sti    
  4021b5:	jg     0x4021e5
  4021b7:	mov    ds:0xdc237ce9,al
  4021bc:	inc    edx
  4021bd:	pop    ecx
  4021be:	push   cs
  4021bf:	in     al,dx
  4021c0:	mov    eax,ds:0xbd7a6697
  4021c5:	push   edx
  4021c6:	rcr    DWORD PTR [ebp-0x488de06c],cl
  4021cc:	ret    0xca65
  4021cf:	(bad)  [edi-0x659aee52]
  4021d5:	lods   al,BYTE PTR ds:[esi]
  4021d6:	push   ds
  4021d7:	mov    edi,0x96e19e45
  4021dc:	sbb    DWORD PTR [eax-0xd],esi
  4021df:	mov    dl,0xb9
  4021e1:	imul   esp,DWORD PTR [ebp+0x4c],0xffffffef
  4021e5:	sbb    dh,BYTE PTR [ebx]
  4021e7:	out    dx,al
  4021e8:	or     eax,0x30f814f1
  4021ed:	(bad)  
  4021ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021ef:	mov    BYTE PTR [esi+0x2f],bl
  4021f2:	mov    esp,0xdfb49bc3
  4021f7:	inc    esp
  4021f8:	rcr    ebx,cl
  4021fa:	jns    0x4021db
  4021fc:	sbb    eax,0xf7371053
  402201:	xchg   ebp,eax
  402202:	sahf   
  402203:	xchg   ecx,eax
  402204:	aaa    
  402205:	push   es
  402206:	jmp    0x8bfe:0xe9ffe1a7
  40220d:	sar    BYTE PTR [ebp+0x77450359],cl
  402213:	cmp    al,0x85
  402215:	push   edx
  402216:	dec    ebp
  402217:	inc    ecx
  402218:	dec    edi
  402219:	daa    
  40221a:	leave  
  40221b:	pushf  
  40221c:	lahf   
  40221d:	popf   
  40221e:	mov    al,0xbc
  402220:	and    esp,DWORD PTR [esi]
  402222:	adc    eax,esp
  402224:	push   0x38c6bf11
  402229:	out    dx,al
  40222a:	int    0x6b
  40222c:	mov    esp,0xe92a5859
  402231:	inc    esi
  402232:	cmp    BYTE PTR [eax-0x15],ah
  402235:	test   BYTE PTR [eax+0x61],ch
  402238:	fs lds edx,FWORD PTR gs:[ecx+esi*4+0x2bfdd739]
  402241:	mov    esi,0x4590bf85
  402246:	ret    0xfdca
  402249:	inc    ecx
  40224a:	sbb    al,0x36
  40224c:	dec    edi
  40224d:	mov    al,ds:0xa6241b4
  402252:	and    BYTE PTR [ecx-0x30],0xc2
  402256:	dec    esi
  402257:	add    eax,0xb35319f6
  40225c:	pop    ds
  40225d:	dec    edx
  40225e:	ret    
  40225f:	in     al,dx
  402260:	pop    esi
  402261:	mov    ds:0x2d49b949,eax
  402266:	adc    DWORD PTR [ebx],ebp
  402268:	and    eax,0x30f44e21
  40226d:	pop    es
  40226e:	dec    esi
  40226f:	jae    0x40224a
  402271:	xchg   ebx,eax
  402272:	and    ecx,DWORD PTR [edx]
  402274:	popf   
  402275:	int    0x54
  402277:	mov    ecx,0xfd369399
  40227c:	div    DWORD PTR [esi+edx*8]
  40227f:	mov    eax,DWORD PTR [edx-0x2dcae505]
  402285:	lods   eax,DWORD PTR ds:[esi]
  402286:	cmp    BYTE PTR [ecx+0xd498256],0x72
  40228d:	lods   al,BYTE PTR ds:[esi]
  40228e:	leave  
  40228f:	imul   ecx
  402291:	ror    BYTE PTR [eax],0x4
  402294:	jae    0x4022ab
  402296:	shr    ebp,cl
  402298:	mov    ebp,0x4fe35f10
  40229d:	cmp    DWORD PTR [ebp+0x86a387f],0x3e
  4022a4:	mov    bl,0x13
  4022a6:	cwde   
  4022a7:	or     BYTE PTR [ebx-0x331f23ec],ch
  4022ad:	retf   0x1562
  4022b0:	out    0x36,eax
  4022b2:	fild   QWORD PTR [eax]
  4022b4:	lods   al,BYTE PTR ds:[esi]
  4022b5:	pop    edx
  4022b6:	xchg   esp,eax
  4022b7:	xor    DWORD PTR [eax-0x24d9602d],esi
  4022bd:	mov    al,0x94
  4022bf:	cmp    DWORD PTR [esi-0x4d8a9594],eax
  4022c5:	cmp    DWORD PTR [ebx+0x50106436],eax
  4022cb:	dec    esp
  4022cc:	xchg   ebx,eax
  4022cd:	dec    esi
  4022ce:	push   0x58b6ed4
  4022d3:	cmp    al,0xc2
  4022d5:	mov    eax,0x35925e6d
  4022da:	cmp    BYTE PTR [edx],ah
  4022dc:	shr    DWORD PTR es:[ecx],cl
  4022df:	aaa    
  4022e0:	push   esi
  4022e1:	fwait
  4022e2:	pop    ebx
  4022e3:	loope  0x402355
  4022e5:	icebp  
  4022e6:	and    eax,0xcbe36fb5
  4022eb:	dec    esp
  4022ec:	ds push ecx
  4022ee:	dec    ebx
  4022ef:	ret    0x2a7c
  4022f2:	in     eax,dx
  4022f3:	xor    eax,0x728838e3
  4022f8:	push   es
  4022f9:	sbb    BYTE PTR [eax+0x32b3f250],bl
  4022ff:	shl    edx,cl
  402301:	clc    
  402302:	jge    0x40228c
  402304:	icebp  
  402305:	int    0xf5
  402307:	or     ch,bl
  402309:	adc    eax,DWORD PTR [esi]
  40230b:	lock fdivr DWORD PTR [ebp+0x33]
  40230f:	sub    DWORD PTR [edi+0x6c5ab9ed],esp
  402315:	jmp    0xcb82d86c
  40231a:	pop    eax
  40231b:	pop    ds
  40231c:	fnsave [edi-0x42]
  40231f:	cmp    al,0x5e
  402321:	arpl   WORD PTR [edx-0x2dc06100],ax
  402327:	pop    ebp
  402328:	push   edi
  402329:	mov    cl,cl
  40232b:	mov    WORD PTR [edx+eiz*8],?
  40232e:	rcl    DWORD PTR [edi-0x484c8b44],1
  402334:	sbb    DWORD PTR [ecx-0x2f],0xf3496de3
  40233b:	mov    BYTE PTR [edx+0x6f68fe91],ch
  402341:	outs   dx,BYTE PTR ds:[esi]
  402342:	or     eax,0xf619b2dc
  402347:	aas    
  402348:	fldenv [esi-0x71]
  40234b:	imul   edi,DWORD PTR [esi],0xf460460
  402351:	xchg   ebx,eax
  402352:	mov    edx,0x2c79cf84
  402357:	addr16 pop ds
  402359:	arpl   sp,si
  40235b:	bound  edx,QWORD PTR [eax+ecx*2]
  40235e:	sbb    DWORD PTR [ebx-0x17d7b99e],0x934176ed
  402368:	and    eax,0x15f5174b
  40236d:	jp     0x4022f1
  40236f:	push   esi
  402370:	inc    edx
  402371:	push   0x6ffaa41d
  402376:	rol    dh,cl
  402378:	rol    BYTE PTR [ebp+ebp*1+0x3e],0xcd
  40237d:	test   BYTE PTR [ebx+0x13],al
  402380:	popf   
  402381:	test   BYTE PTR [eax+eax*8],dh
  402384:	pop    ss
  402385:	push   edi
  402386:	dec    ecx
  402387:	mov    ah,0xf6
  402389:	lock xchg ecx,eax
  40238b:	inc    edi
  40238c:	sbb    BYTE PTR [ebp+edx*4-0xf],ah
  402390:	inc    eax
  402391:	or     BYTE PTR [esi],dl
  402393:	scas   al,BYTE PTR es:[edi]
  402394:	xor    esi,esi
  402396:	jns    0x402404
  402398:	add    cl,al
  40239a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40239b:	xchg   ebx,eax
  40239c:	loope  0x402389
  40239e:	jnp    0x4023dd
  4023a0:	jp     0x402374
  4023a2:	rcr    DWORD PTR [ecx+eiz*4],1
  4023a5:	xchg   ebx,eax
  4023a6:	int    0x32
  4023a8:	add    al,0x26
  4023aa:	retf   0x4a1a
  4023ad:	or     DWORD PTR [ecx-0x62b99cba],ecx
  4023b3:	outs   dx,BYTE PTR ds:[esi]
  4023b4:	mov    ebp,0x97ec52c8
  4023b9:	nop
  4023ba:	jge    0x4023bf
  4023bc:	stc    
  4023bd:	jecxz  0x402411
  4023bf:	cmc    
  4023c0:	outs   dx,BYTE PTR ds:[esi]
  4023c1:	mov    DWORD PTR [esi],esi
  4023c3:	or     DWORD PTR [ebp+edi*2+0x6f],0xffffffba
  4023c8:	dec    edi
  4023ca:	or     al,0xba
  4023cc:	cmp    ebp,DWORD PTR [ebp+0x7c13145a]
  4023d2:	push   ss
  4023d3:	das    
  4023d4:	popa   
  4023d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023d6:	sub    bh,BYTE PTR [esi+edi*2+0x5b01b134]
  4023dd:	sub    al,0xaa
  4023df:	add    BYTE PTR [ebx+0x52],bh
  4023e2:	xchg   ebp,eax
  4023e3:	push   ecx
  4023e4:	cld    
  4023e5:	xor    eax,0x6f5901b8
  4023ea:	(bad)  
  4023eb:	sbb    BYTE PTR [esi+0x29999b62],dh
  4023f1:	ret    
  4023f2:	rep outs dx,BYTE PTR ds:[esi]
  4023f4:	push   es
  4023f5:	pop    esi
  4023f6:	sbb    DWORD PTR [edi-0x3a],esi
  4023f9:	and    al,0x99
  4023fb:	xor    ah,bl
  4023fd:	add    al,0xda
  4023ff:	imul   edx,DWORD PTR [esi],0x3341c628
  402405:	out    0x7c,eax
  402407:	(bad)  
  402408:	imul   edi,ebx,0x38ada0c7
  40240e:	into   
  40240f:	sbb    al,0x55
  402411:	xchg   esi,eax
  402412:	xchg   BYTE PTR [edx-0x50d096e0],cl
  402418:	and    DWORD PTR [ebp-0xf],edi
  40241b:	sbb    al,0xf1
  40241d:	adc    ecx,esp
  40241f:	out    dx,eax
  402420:	inc    ecx
  402421:	xchg   edx,eax
  402422:	cmp    DWORD PTR [ebp+0x82342c4],esp
  402428:	and    DWORD PTR [edx-0x232b4740],edx
  40242e:	push   0x3fd146f3
  402433:	adc    esi,DWORD PTR [edi]
  402435:	mov    esi,0x5e5c92ee
  40243a:	pop    ds
  40243b:	fadd   DWORD PTR [ebx+0x31]
  40243e:	aam    0x5d
  402440:	mov    ds:0xe79545c3,al
  402445:	adc    ebx,DWORD PTR [eax*4+0x193dfaa2]
  40244c:	(bad)  
  40244d:	aas    
  40244e:	adc    al,0xd
  402450:	xchg   esi,eax
  402451:	xchg   edx,eax
  402452:	test   eax,0x31eca3a7
  402457:	push   ss
  402458:	jbe    0x40243f
  40245a:	shr    BYTE PTR [ebx+0x44],0xe5
  40245e:	lods   eax,DWORD PTR ds:[esi]
  40245f:	mov    al,ds:0xa2c3460a
  402464:	shl    DWORD PTR [esi-0x44],cl
  402467:	jmp    0x402441
  402469:	or     eax,0x2e210ed6
  40246e:	mov    ah,0x61
  402470:	sbb    eax,0x6664c044
  402475:	add    bl,BYTE PTR [ebx]
  402477:	dec    edx
  402478:	(bad)  
  402479:	pop    ecx
  40247a:	add    DWORD PTR [ebp+0x7eb97d2a],esp
  402480:	inc    ebx
  402481:	loopne 0x402491
  402483:	ret    0xe48a
  402486:	jge    0x402504
  402488:	add    al,0x25
  40248a:	cmp    dh,BYTE PTR [edx]
  40248c:	mov    bl,0xa4
  40248e:	fldenv [ecx-0x5658d560]
  402494:	mov    eax,0x6eb0373a
  402499:	push   0x6af16627
  40249e:	cwde   
  40249f:	enter  0xf20,0xba
  4024a3:	popf   
  4024a4:	(bad)  
  4024a5:	(bad)  
  4024a7:	and    dl,dh
  4024a9:	out    0xfd,al
  4024ab:	loop   0x4024cf
  4024ad:	mov    ds:0x621a2d4d,al
  4024b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024b3:	xlat   BYTE PTR ds:[ebx]
  4024b4:	popf   
  4024b5:	adc    bh,bl
  4024b7:	push   eax
  4024b8:	adc    ch,BYTE PTR [edx]
  4024ba:	clc    
  4024bb:	scas   al,BYTE PTR es:[edi]
  4024bc:	xchg   esp,eax
  4024bd:	pop    esi
  4024be:	mov    ds:0x26911924,al
  4024c3:	mov    ds,WORD PTR [esi]
  4024c5:	xor    eax,0x93703e0b
  4024ca:	out    0x4f,eax
  4024cc:	push   ecx
  4024cd:	clc    
  4024ce:	dec    ecx
  4024cf:	mov    bh,0xf2
  4024d1:	mov    cl,0x4c
  4024d3:	dec    edx
  4024d4:	jle    0x40246f
  4024d6:	scas   eax,DWORD PTR es:[edi]
  4024d7:	dec    edi
  4024d8:	sbb    al,0xf3
  4024da:	outs   dx,DWORD PTR ds:[esi]
  4024db:	fdiv   QWORD PTR [eax+0x4c1392e9]
  4024e1:	add    bh,bh
  4024e3:	sub    ebx,DWORD PTR [ecx+0x60]
  4024e6:	stos   BYTE PTR es:[edi],al
  4024e7:	repz dec esp
  4024e9:	mov    cs,WORD PTR [eax-0xb]
  4024ec:	nop
  4024ed:	adc    eax,0xac90f888
  4024f2:	mov    dl,0x2d
  4024f4:	and    eax,0xcfc850e9
  4024f9:	cmp    bh,BYTE PTR [ecx+0x17]
  4024fc:	xor    DWORD PTR [ebx-0x68ce2d1],ebp
  402502:	jns    0x4024e4
  402504:	jns    0x4024b9
  402506:	sub    DWORD PTR [esi+0x9c62e84],eax
  40250c:	cmp    eax,0xaddd1a53
  402511:	daa    
  402512:	outs   dx,DWORD PTR ds:[esi]
  402513:	nop
  402514:	std    
  402515:	lea    ebp,[edi]
  402517:	inc    edi
  402518:	not    BYTE PTR [ecx+ebx*8]
  40251b:	into   
  40251c:	std    
  40251d:	stc    
  40251e:	mov    ecx,0x828569f8
  402523:	shr    BYTE PTR ds:0xf822cd53,1
  402529:	mov    WORD PTR [edi],?
  40252b:	aas    
  40252c:	gs and al,0xe2
  40252f:	in     eax,0xa2
  402531:	add    BYTE PTR [ecx-0x3f],al
  402534:	adc    ecx,DWORD PTR [edx+0x2e]
  402537:	aaa    
  402538:	jmp    0x60a5:0xce1f4a16
  40253f:	push   ss
  402540:	add    eax,0x641f895a
  402545:	mov    esp,0xe9004ba5
  40254a:	add    BYTE PTR [ecx],al
  40254c:	mov    al,ds:0xfea14efd
  402551:	call   0x5cd0:0xc76cccc
  402558:	inc    ebx
  402559:	icebp  
  40255a:	xchg   esp,eax
  40255b:	std    
  40255c:	push   esi
  40255d:	inc    eax
  40255e:	lock int 0x30
  402561:	dec    ebx
  402562:	sbb    eax,0xb057b2b5
  402567:	out    dx,al
  402568:	jne    0x40258e
  40256a:	fcomp  DWORD PTR [edi]
  40256c:	jae    0x402575
  40256e:	shl    eax,1
  402570:	out    dx,al
  402571:	xor    cl,BYTE PTR [edi+edi*1]
  402574:	push   esp
  402575:	test   eax,0x73e47dab
  40257a:	imul   BYTE PTR [edx-0x6f]
  40257d:	xlat   BYTE PTR ds:[ebx]
  40257e:	add    eax,0x61af932c
  402583:	pushf  
  402584:	and    eax,0x8a115b68
  402589:	stc    
  40258a:	repnz dec esi
  40258c:	inc    eax
  40258d:	mov    BYTE PTR [esi-0x26],bh
  402590:	inc    esp
  402591:	jnp    0x402575
  402593:	jecxz  0x402527
  402595:	out    0x18,al
  402597:	in     al,0x99
  402599:	leave  
  40259a:	cld    
  40259b:	fld    QWORD PTR [ebx]
  40259d:	xor    al,0xa4
  40259f:	loope  0x40261b
  4025a1:	mov    fs,WORD PTR [ebx]
  4025a3:	aam    0xcb
  4025a5:	xor    eax,0xfde122c2
  4025aa:	(bad)
  4025ad:	dec    eax
  4025ae:	sub    cl,bl
  4025b0:	push   ss
  4025b1:	(bad)  
  4025b2:	sub    esp,DWORD PTR [ebx]
  4025b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025b5:	ror    BYTE PTR [ecx+0x46],cl
  4025b8:	cmp    BYTE PTR [ebx],0x57
  4025bb:	stc    
  4025bc:	inc    esp
  4025bd:	inc    edx
  4025be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025bf:	scas   eax,DWORD PTR es:[edi]
  4025c0:	xchg   esi,eax
  4025c1:	fsub   DWORD PTR ds:[ecx+0x9]
  4025c5:	fidiv  DWORD PTR [edi+0x6c]
  4025c8:	jns    0x4025a7
  4025ca:	xchg   edx,eax
  4025cb:	or     eax,0x32e3cf8a
  4025d0:	inc    esp
  4025d1:	dec    ecx
  4025d2:	dec    edi
  4025d3:	rcl    BYTE PTR [edi-0x6aca3d65],cl
  4025d9:	jmp    FWORD PTR [ecx]
  4025db:	add    esp,DWORD PTR [edx+0x42]
  4025de:	jns    0x402592
  4025e0:	(bad)  
  4025e3:	cmp    DWORD PTR [edi-0x58fc6023],edx
  4025e9:	(bad)  
  4025ec:	push   0xc5e4ef4b
  4025f1:	inc    DWORD PTR [edx]
  4025f3:	adc    ch,ch
  4025f5:	mov    ecx,0x729f9a03
  4025fa:	add    BYTE PTR [ebp+0x7fc4e614],ch
  402600:	hlt    
  402601:	push   esi
  402602:	ds xchg esi,eax
  402604:	sbb    DWORD PTR [ecx+0x53],edx
  402607:	mov    ecx,0xcb9047c0
  40260c:	ins    DWORD PTR es:[edi],dx
  40260d:	dec    ecx
  40260e:	stc    
  40260f:	pop    ds
  402610:	jge    0x4025d0
  402612:	fwait
  402613:	xor    eax,0x71a14c4a
  402618:	add    cl,BYTE PTR [edi-0x414e0cc8]
  40261e:	in     al,0x9
  402620:	mov    BYTE PTR [ebx-0x7f],cl
  402623:	xor    DWORD PTR [eax],0xc656ece0
  402629:	setle  BYTE PTR [edx+0xe8e8b13]
  402630:	sbb    BYTE PTR [esi-0x29],0x4d
  402634:	push   eax
  402635:	out    0x44,eax
  402637:	gs out 0x3f,eax
  40263a:	out    dx,eax
  40263b:	paddd  mm0,QWORD PTR [ecx]
  40263e:	neg    esp
  402640:	sbb    bl,BYTE PTR [ebx+edx*8-0x63cb2baa]
  402647:	mov    BYTE PTR [ecx+0x742b32b4],al
  40264d:	mov    ecx,0xb643fe06
  402652:	dec    eax
  402653:	cmc    
  402654:	inc    ebp
  402655:	or     DWORD PTR [ebp+0x61],ebx
  402658:	cmp    ecx,DWORD PTR [edi+eax*2]
  40265b:	mov    cl,0x28
  40265d:	sub    ah,cl
  40265f:	add    al,0xb4
  402661:	mov    cl,0xc4
  402663:	es inc edx
  402665:	inc    ecx
  402666:	pop    eax
  402667:	in     al,dx
  402668:	stc    
  402669:	(bad)  
  40266a:	push   ss
  40266b:	jne    0x402622
  40266d:	scas   al,BYTE PTR es:[edi]
  40266e:	sbb    al,0xb0
  402670:	iret   
  402671:	xor    ebx,DWORD PTR [ecx+edx*4-0x492e5e71]
  402678:	imul   esi,edi,0xffffffa5
  40267b:	fadd   DWORD PTR [ebp-0x42]
  40267e:	(bad)  
  402680:	mov    ebx,0xc7fc169a
  402685:	inc    ebp
  402686:	jecxz  0x4026c7
  402688:	(bad)  
  402689:	jmp    0x402709
  40268b:	ds sahf 
  40268d:	sbb    ebx,0x1bb5bdc6
  402693:	inc    edx
  402694:	out    dx,al
  402695:	test   al,0xb
  402697:	leave  
  402698:	inc    ebx
  402699:	mov    WORD PTR [eax],ds
  40269b:	ret    
  40269c:	in     eax,dx
  40269d:	cli    
  40269e:	pop    ss
  40269f:	imul   ebx,DWORD PTR [edi-0x783629d0],0xffffffe1
  4026a6:	test   DWORD PTR [ecx],edx
  4026a8:	stos   BYTE PTR es:[edi],al
  4026a9:	mov    al,0x73
  4026ab:	data16 lock repz mul BYTE PTR [edi-0x1e]
  4026b1:	arpl   WORD PTR [ebp+0x11],si
  4026b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026b5:	push   0x4ddde04a
  4026ba:	xchg   edi,eax
  4026bb:	rcl    BYTE PTR [ecx+0x4d4537ab],1
  4026c1:	inc    edi
  4026c2:	pop    eax
  4026c3:	cli    
  4026c4:	inc    eax
  4026c5:	aaa    
  4026c6:	iret   
  4026c7:	mov    eax,ds:0xaa4cfeab
  4026cc:	mov    esp,0x5dcee69f
  4026d1:	jne    0x402704
  4026d3:	call   0x540e0aaf
  4026d8:	mov    esp,ecx
  4026da:	jp     0x4026fc
  4026dc:	lahf   
  4026dd:	and    BYTE PTR ds:0x9454948b,0xed
  4026e4:	xchg   ebx,eax
  4026e5:	fs dec edi
  4026e7:	call   0x4ba0b32e
  4026ec:	enter  0x2304,0x67
  4026f0:	add    al,BYTE PTR [ecx]
  4026f2:	stos   DWORD PTR es:[edi],eax
  4026f3:	inc    edx
  4026f4:	stos   DWORD PTR es:[edi],eax
  4026f5:	cmp    eax,0x97a642da
  4026fa:	xor    al,0x51
  4026fc:	repz xchg edx,eax
  4026fe:	les    esp,FWORD PTR [esi+0x1122d3af]
  402704:	lea    edx,[edx]
  402706:	sbb    BYTE PTR [edx-0x3ca35b00],0xa7
  40270d:	shr    BYTE PTR [ecx+0x50],1
  402710:	jno    0x402700
  402712:	or     al,0xe4
  402714:	stos   BYTE PTR es:[edi],al
  402715:	push   0x683caeb4
  40271a:	icebp  
  40271b:	mov    al,ds:0xdbd08a07
  402720:	loop   0x4026fa
  402722:	pushf  
  402723:	dec    ebx
  402724:	pop    ss
  402725:	add    al,0xf0
  402727:	fs loopne 0x40273e
  40272a:	and    DWORD PTR [eax],eax
  40272c:	rol    DWORD PTR [eax-0x3445208],0x66
  402733:	mov    ecx,0x75c63cbb
  402738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402739:	jns    0x4026ea
  40273b:	push   ebx
  40273c:	sub    al,0xac
  40273e:	(bad)  
  40273f:	fild   QWORD PTR [ebp+0x5d43952a]
  402745:	jne    0x40272d
  402747:	adc    ch,cl
  402749:	push   ebp
  40274a:	lds    ebp,FWORD PTR ds:0xb414f8c7
  402750:	in     eax,dx
  402751:	pop    ss
  402752:	test   BYTE PTR [ebx],ch
  402754:	addr16 (bad) 
  402756:	(bad)
  40275b:	scas   eax,DWORD PTR es:[edi]
  40275c:	fwait
  40275d:	je     0x40270f
  40275f:	lods   al,BYTE PTR ds:[esi]
  402760:	(bad)  
  402761:	push   ebx
  402762:	in     eax,0x53
  402764:	data16 xor ch,BYTE PTR [ebx-0x6a]
  402768:	(bad)  
  402769:	lds    esi,FWORD PTR [ebx-0x30]
  40276c:	mov    esp,0xc0e7a778
  402771:	dec    ecx
  402772:	mov    ebx,0x170e927f
  402777:	lock pop ebp
  402779:	pop    ebp
  40277a:	lahf   
  40277b:	push   ss
  40277c:	adc    DWORD PTR [edx+0x28027d8b],esp
  402782:	cdq    
  402783:	xor    esp,eax
  402785:	gs jo  0x4027f7
  402788:	xchg   edi,eax
  402789:	add    BYTE PTR [eax],bh
  40278b:	mov    cl,0xe1
  40278d:	fldcw  WORD PTR [ecx+0x32]
  402790:	or     BYTE PTR [edx+0x2d],0xeb
  402794:	loopne 0x4027ea
  402796:	es push cs
  402798:	sbb    ah,ah
  40279a:	pop    edi
  40279b:	xchg   ebp,eax
  40279c:	ret    0xbd61
  40279f:	push   esi
  4027a0:	jge    0x402792
  4027a2:	push   cs
  4027a3:	inc    esi
  4027a4:	dec    ecx
  4027a5:	call   0xaa74:0xf501c17a
  4027ac:	pop    ebp
  4027ad:	jge    0x402821
  4027af:	(bad)  
  4027b0:	jle    0x402769
  4027b2:	adc    cl,0xa4
  4027b5:	push   cs
  4027b6:	out    0xc,al
  4027b8:	lds    ecx,FWORD PTR [edx]
  4027ba:	cmc    
  4027bb:	shr    DWORD PTR [ebx+0x3b3cb212],cl
  4027c1:	jnp    0x402796
  4027c3:	sahf   
  4027c4:	mov    edx,0x6c1c468e
  4027c9:	cs retf 
  4027cb:	mov    edx,0x50f12c1
  4027d0:	sub    dh,BYTE PTR [ebx+0x34]
  4027d3:	daa    
  4027d4:	xchg   DWORD PTR [ecx+0x1a6bffc1],eax
  4027da:	imul   BYTE PTR [ebx+0x50]
  4027dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027de:	sub    eax,0x728e0fe6
  4027e3:	fs add ah,0x56
  4027e7:	and    dh,BYTE PTR [edi-0x69]
  4027ea:	sub    edx,DWORD PTR [ebx-0x5fab1332]
  4027f0:	pop    esp
  4027f1:	data16 mov dh,0xaa
  4027f4:	dec    ebp
  4027f5:	mov    dl,cl
  4027f7:	cwde   
  4027f8:	and    bh,BYTE PTR [eax-0x2]
  4027fb:	pop    esp
  4027fc:	and    ch,BYTE PTR [edi-0x12]
  4027ff:	xor    eax,0x800156e7
  402804:	loopne 0x402827
  402806:	inc    ebx
  402807:	sub    BYTE PTR [edi-0x177c0e6b],bh
  40280d:	sub    edx,0x70
  402810:	push   0xba0f5f43
  402815:	or     DWORD PTR [edx+ebx*2+0x56],ebp
  402819:	enter  0xc98d,0x1a
  40281d:	arpl   WORD PTR [edi],sp
  40281f:	jne    0x4027f2
  402821:	mov    ?,WORD PTR [ebx-0x40]
  402824:	aaa    
  402825:	dec    edi
  402826:	repnz fs inc edi
  402829:	and    DWORD PTR ds:0x8a43ec97,eax
  40282f:	and    al,0xde
  402831:	and    eax,0x6c7bb583
  402836:	jns    0x402868
  402838:	mov    ebx,DWORD PTR [ebx]
  40283a:	mov    DWORD PTR [eiz*2+0x7a8c6561],ebx
  402841:	xor    al,0x7a
  402843:	pushf  
  402844:	dec    edi
  402845:	lds    ebp,FWORD PTR [edi-0x3986385b]
  40284b:	or     BYTE PTR [edx],dh
  40284d:	adc    al,0x67
  40284f:	sub    al,0x4c
  402851:	mov    cl,0xd4
  402853:	mov    eax,ds:0x960f173c
  402858:	inc    edi
  402859:	dec    esp
  40285a:	push   ebp
  40285b:	sub    ebx,DWORD PTR [esi]
  40285d:	xor    edx,DWORD PTR [ebx]
  40285f:	es dec ebp
  402861:	not    BYTE PTR [ecx-0x55]
  402864:	xor    bh,BYTE PTR ds:0x458b8e56
  40286a:	xchg   DWORD PTR [ecx],ecx
  40286c:	dec    edx
  40286d:	mov    dl,0x8e
  40286f:	aas    
  402870:	fs mov bl,0x73
  402873:	mov    eax,0x94c7a4f2
  402878:	mov    cl,0x2b
  40287a:	int3   
  40287b:	pop    esi
  40287c:	ror    esi,cl
  40287e:	xchg   ecx,eax
  40287f:	xor    esi,edi
  402881:	mov    edi,0x5914a320
  402886:	fwait
  402887:	jbe    0x40281f
  402889:	xor    DWORD PTR [edx+0x5ce7d111],eax
  40288f:	loop   0x402835
  402891:	ins    BYTE PTR es:[edi],dx
  402892:	inc    edi
  402893:	cmp    esp,DWORD PTR [ecx]
  402895:	push   ss
  402896:	cs sbb eax,0xe01003f9
  40289c:	sbb    al,0x98
  40289e:	inc    edx
  40289f:	popa   
  4028a0:	cmp    al,0xec
  4028a2:	(bad)  
  4028a4:	sub    eax,0x9089d858
  4028a9:	sbb    DWORD PTR [ecx+0x3c],eax
  4028ac:	jb     0x4028ae
  4028ae:	mov    WORD PTR [esi-0x12d92dca],ss
  4028b4:	ins    BYTE PTR es:[edi],dx
  4028b5:	add    DWORD PTR [esi-0x10ccf1bf],0x31ea9aad
  4028bf:	rcl    DWORD PTR [esi-0x3a],cl
  4028c2:	test   DWORD PTR [eax-0x4e],0xec553e25
  4028c9:	clc    
  4028ca:	push   eax
  4028cb:	nop
  4028cc:	pop    ebx
  4028cd:	jecxz  0x4028c2
  4028cf:	pusha  
  4028d0:	rcl    BYTE PTR [esi+0x40818300],0x3e
  4028d7:	mov    dh,0xfe
  4028d9:	xor    esp,DWORD PTR [ecx+0x3]
  4028dc:	cmp    eax,0x8b69175a
  4028e1:	fdivr  st(0),st
  4028e3:	int    0xd4
  4028e5:	adc    ah,dh
  4028e7:	sub    ebx,ecx
  4028e9:	sub    al,0x4c
  4028eb:	cmp    bh,dl
  4028ed:	imul   edx,edi,0x1dc8bb8
  4028f3:	lock pop ebx
  4028f5:	addr16 pop esi
  4028f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028f8:	rcr    BYTE PTR [eax-0x42],1
  4028fb:	and    ebx,edi
  4028fd:	jb     0x4028e1
  4028ff:	ins    DWORD PTR es:[edi],dx
  402900:	adc    DWORD PTR [esi+0x66],esp
  402903:	sbb    al,0x23
  402905:	cmp    al,BYTE PTR [edx]
  402907:	or     ah,BYTE PTR [edi-0x55fcceea]
  40290d:	ficom  WORD PTR [edx+0x27c4f135]
  402913:	pop    ds
  402914:	push   esp
  402915:	jle    0x4028d6
  402917:	or     DWORD PTR [eax-0x7c42306],ebx
  40291d:	gs pop esi
  40291f:	push   0x8932d04a
  402924:	push   0xffffffe7
  402926:	ins    BYTE PTR es:[edi],dx
  402927:	or     al,0x89
  402929:	add    eax,0x394e100d
  40292e:	mov    al,0x48
  402930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402931:	mov    BYTE PTR [ebx-0x45],dl
  402934:	mov    ds:0xc5eb91c5,eax
  402939:	xchg   esi,eax
  40293a:	retf   0xbce4
  40293d:	jo     0x402929
  40293f:	adc    ecx,esp
  402941:	ss push ds
  402943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402944:	loop   0x4029ae
  402946:	push   ebp
  402947:	xor    al,0xfa
  402949:	out    dx,al
  40294a:	in     eax,dx
  40294b:	ret    0xffc4
  40294e:	or     ch,BYTE PTR ds:0xde749e62
  402954:	jno    0x4028eb
  402956:	cmp    al,0xeb
  402958:	pop    esi
  402959:	mov    ecx,0xaf9d4edc
  40295e:	mov    DWORD PTR [ebx],edi
  402960:	loope  0x40293a
  402962:	mov    ch,0xef
  402964:	push   es
  402965:	and    al,0xa
  402967:	in     al,0x26
  402969:	int    0xea
  40296b:	scas   al,BYTE PTR es:[edi]
  40296c:	xor    esp,DWORD PTR [ebx-0x78]
  40296f:	popf   
  402970:	call   0x867fed0
  402975:	lahf   
  402976:	jmp    0xd632cbbb
  40297b:	test   bh,dh
  40297d:	fsubr  QWORD PTR [ecx-0x28]
  402980:	inc    eax
  402981:	adc    dh,bl
  402983:	mov    eax,ds:0xb2dc2278
  402988:	mov    ecx,0xae4e9518
  40298d:	nop
  40298e:	add    ecx,DWORD PTR [ebx+0x27eb1195]
  402994:	pop    edi
  402995:	aam    0xb0
  402997:	cmp    bl,bl
  402999:	mov    ch,0x70
  40299b:	adc    DWORD PTR [edi+0x3d],ecx
  40299e:	scas   al,BYTE PTR es:[edi]
  40299f:	push   eax
  4029a0:	xchg   esp,eax
  4029a1:	stos   BYTE PTR es:[edi],al
  4029a2:	pop    ebx
  4029a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029a4:	repz lds eax,FWORD PTR [ebp+0xef89f8c]
  4029ab:	out    dx,eax
  4029ac:	jb     0x40294d
  4029ae:	fstp   DWORD PTR [edx]
  4029b0:	les    esp,FWORD PTR [esi+0x71]
  4029b3:	fs leave 
  4029b5:	dec    ebx
  4029b6:	mov    bl,0xd5
  4029b8:	popa   
  4029b9:	ja     0x4029dd
  4029bb:	repz in al,dx
  4029bd:	xchg   esp,eax
  4029be:	add    ebx,DWORD PTR [edi+0x430da124]
  4029c4:	ffree  st(6)
  4029c6:	shl    DWORD PTR [ebx],1
  4029c8:	mov    DWORD PTR [eax],esp
  4029ca:	das    
  4029cb:	mov    ebx,0x6b9a81d7
  4029d0:	push   0x7c
  4029d2:	jge    0x40297d
  4029d4:	jmp    0x9cb0:0x2b1f22c3
  4029db:	stc    
  4029dc:	mov    ecx,0xf69b7415
  4029e1:	xor    eax,0xda9c1b76
  4029e6:	xchg   bh,dl
  4029e8:	sbb    eax,0x8f7ba024
  4029ed:	xor    BYTE PTR [ebx+0x37f2aea4],ch
  4029f3:	pop    edi
  4029f4:	std    
  4029f5:	pop    edx
  4029f6:	add    DWORD PTR [edi-0x2695f9fa],esi
  4029fc:	xor    dh,BYTE PTR [esi]
  4029fe:	dec    ebx
  4029ff:	es push 0xf03ccc4b
  402a05:	mov    edi,0x1ef5cd68
  402a0a:	pusha  
  402a0b:	add    dl,BYTE PTR [eax]
  402a0d:	and    ch,al
  402a0f:	dec    ebp
  402a10:	fstp   DWORD PTR [ebx+0x51437c3]
  402a16:	jp     0x402a6f
  402a18:	jecxz  0x402a7d
  402a1a:	out    0xb1,al
  402a1c:	stc    
  402a1d:	sbb    eax,DWORD PTR [eax]
  402a1f:	add    cl,BYTE PTR [eax+esi*1+0x2]
  402a23:	dec    eax
  402a24:	retf   0x468a
  402a27:	nop
  402a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a29:	aaa    
  402a2a:	jb     0x4029c2
  402a2c:	rcr    BYTE PTR ds:0x5839c27b,0x4b
  402a33:	inc    ebx
  402a34:	xchg   ecx,eax
  402a35:	sbb    BYTE PTR ds:0x7e17e0e0,ah
  402a3b:	fld    TBYTE PTR [eax+0x1d]
  402a3e:	mov    ebx,DWORD PTR [eax]
  402a40:	fs add al,0x6a
  402a43:	out    dx,al
  402a44:	hlt    
  402a45:	ficomp DWORD PTR [esi+0x6a7744ee]
  402a4b:	sub    eax,0xab279f8e
  402a50:	popf   
  402a51:	sbb    eax,0x887ca7a7
  402a56:	push   ecx
  402a57:	cmp    BYTE PTR [eax+0x34],al
  402a5a:	aaa    
  402a5b:	std    
  402a5c:	jb     0x402ab4
  402a5e:	aad    0xd7
  402a60:	adc    ch,bh
  402a62:	cs mov ecx,0x742015e2
  402a68:	in     al,dx
  402a69:	jle    0x402aa9
  402a6b:	sbb    ebx,eax
  402a6d:	(bad)  
  402a6e:	cli    
  402a6f:	add    dl,BYTE PTR [ebx]
  402a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a72:	jge    0x402acc
  402a74:	cld    
  402a75:	repz mov edi,0x6abb5df7
  402a7b:	ss mov dh,0x54
  402a7e:	push   0x154fd132
  402a83:	pop    ecx
  402a84:	fld    TBYTE PTR [edi+0x3247f9f9]
  402a8a:	and    eax,0x57545784
  402a8f:	and    ebp,DWORD PTR [esi-0x2565f448]
  402a95:	ins    DWORD PTR es:[edi],dx
  402a96:	icebp  
  402a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a98:	rol    BYTE PTR es:[edi],1
  402a9b:	mov    ebp,ss
  402a9d:	outs   dx,DWORD PTR ds:[si]
  402a9f:	jnp    0x402a82
  402aa1:	in     al,dx
  402aa2:	mov    al,0x7
  402aa4:	fwait
  402aa5:	je     0x402a37
  402aa7:	iret   
  402aa8:	dec    esi
  402aa9:	cmc    
  402aaa:	jmp    0x6916:0x461fb476
  402ab1:	add    ah,BYTE PTR [ecx]
  402ab3:	dec    ebx
  402ab4:	jae    0x402b23
  402ab6:	lods   al,BYTE PTR ds:[esi]
  402ab7:	mov    bl,0x8a
  402ab9:	push   esp
  402aba:	dec    esi
  402abb:	xchg   edi,eax
  402abc:	mov    bl,0xd
  402abe:	and    eax,0x8024867c
  402ac3:	xor    al,0x55
  402ac5:	inc    ebx
  402ac6:	jb     0x402aee
  402ac8:	mov    ah,BYTE PTR [ebx+0x4d]
  402acb:	rol    ecx,cl
  402acd:	pop    edi
  402ace:	cdq    
  402acf:	xchg   esi,eax
  402ad0:	pop    ebx
  402ad1:	inc    edi
  402ad2:	dec    ebx
  402ad3:	xor    DWORD PTR [ebx+0x3b],ecx
  402ad6:	cmp    ch,BYTE PTR [ebp+0x4edda92c]
  402adc:	out    0x2b,al
  402ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402adf:	adc    eax,0x51966b0c
  402ae4:	imul   eax,DWORD PTR [ebx-0x562de1d5],0xffffffd3
  402aeb:	fadd   st,st(7)
  402aed:	mov    ah,0x4c
  402aef:	dec    ecx
  402af0:	sbb    ebp,DWORD PTR ds:0x2d8b3eef
  402af6:	lock and BYTE PTR [edi+0x40],0x8b
  402afb:	arpl   WORD PTR [eax-0x25],si
  402afe:	or     ah,BYTE PTR [esi-0x5a50ea53]
  402b04:	push   cs
  402b05:	popf   
  402b06:	rcr    DWORD PTR [ecx],0x33
  402b09:	jbe    0x402b58
  402b0b:	aam    0x93
  402b0d:	mov    edx,0xec73ece1
  402b12:	arpl   WORD PTR [edi+0x1fad9c0d],cx
  402b18:	adc    eax,0x32ef911b
  402b1d:	push   es
  402b1e:	cld    
  402b1f:	mov    cl,0x8d
  402b21:	mov    dl,0x64
  402b23:	sbb    esi,edi
  402b25:	mov    cs,eax
  402b27:	jge    0x402b29
  402b29:	(bad)  
  402b2a:	fnsave ds:0x9391a64a
  402b30:	repz sub DWORD PTR [edi],ebp
  402b33:	adc    edx,DWORD PTR [edi]
  402b35:	mov    al,ds:0x9dc8c457
  402b3a:	cli    
  402b3b:	xchg   ebx,eax
  402b3c:	cmp    bl,BYTE PTR [ebx]
  402b3e:	fnsave [eax]
  402b40:	out    dx,eax
  402b41:	out    0xb3,eax
  402b43:	add    DWORD PTR [esi-0x98d6363],edi
  402b49:	cmp    ch,BYTE PTR [ebx+0x5f]
  402b4c:	mov    eax,ds:0xf2734fe0
  402b51:	xchg   esp,eax
  402b52:	cmp    ebx,DWORD PTR [eax+0x1d]
  402b55:	sbb    DWORD PTR [eax-0x4c],ebp
  402b58:	mov    esp,0x442e2713
  402b5d:	shl    BYTE PTR [ecx-0xb],0x93
  402b61:	sub    esp,0x21
  402b64:	mov    cl,bl
  402b66:	loope  0x402bad
  402b68:	ins    BYTE PTR es:[edi],dx
  402b69:	sub    BYTE PTR [edi+0x66],dl
  402b6c:	pop    esp
  402b6d:	fwait
  402b6e:	inc    esp
  402b6f:	cmp    al,BYTE PTR [esi]
  402b71:	or     eax,0xe091effe
  402b76:	or     al,0xf
  402b78:	out    dx,al
  402b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b7a:	xor    eax,0xca68950b
  402b7f:	xor    eax,ecx
  402b81:	mov    eax,0x6664207b
  402b86:	jno    0x402b5f
  402b88:	shl    edi,0x76
  402b8b:	adc    DWORD PTR [ebp*8-0x6df95b99],esi
  402b92:	cs pop es
  402b94:	mov    bl,0xc6
  402b96:	jecxz  0x402c04
  402b98:	add    bl,BYTE PTR gs:[edi+0x15]
  402b9c:	mov    eax,0x58fc9dc4
  402ba1:	cwde   
  402ba2:	cmp    eax,DWORD PTR [ecx+0x2d]
  402ba5:	scas   al,BYTE PTR es:[edi]
  402ba6:	jp     0x402bf5
  402ba8:	xchg   edx,eax
  402ba9:	sbb    BYTE PTR [edx+esi*8-0x34],dh
  402bad:	add    BYTE PTR [edi],0xd5
  402bb0:	mov    edx,DWORD PTR gs:[edx+ebx*8+0x76b29f65]
  402bb8:	pop    eax
  402bb9:	and    ebx,0xffffffd3
  402bbc:	push   ds
  402bbd:	jp     0x402c22
  402bbf:	loope  0x402b89
  402bc1:	mov    cl,0xce
  402bc3:	mov    bh,0xe4
  402bc5:	sar    DWORD PTR [eax+0x54],cl
  402bc8:	inc    ecx
  402bc9:	pop    ss
  402bca:	ds jg  0x402c19
  402bcd:	mov    dh,0xcd
  402bcf:	cmp    bh,cl
  402bd1:	and    al,0xfa
  402bd4:	mov    esi,0xde8480b
  402bd9:	sub    al,0x3
  402bdb:	mov    edx,0xc5c0bdd2
  402be0:	mov    dl,bl
  402be2:	inc    edx
  402be3:	mov    eax,ds:0xcb3bd4d
  402be8:	push   edx
  402be9:	adc    ah,dl
  402beb:	mov    edi,0xe80ebcbb
  402bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf1:	popa   
  402bf2:	les    ecx,FWORD PTR [eax-0x21442017]
  402bf8:	mov    ch,0x8
  402bfa:	test   al,0xa6
  402bfc:	(bad)
  402bff:	test   ecx,0x4aa71d4a
  402c05:	and    cl,BYTE PTR [eax-0x4aa795f5]
  402c0b:	push   ebx
  402c0c:	jg     0x402bcb
  402c0e:	cmp    al,0xe1
  402c10:	aaa    
  402c11:	(bad)  
  402c12:	repz test eax,0xabe89005
  402c18:	aad    0x26
  402c1a:	lods   al,BYTE PTR ds:[esi]
  402c1b:	or     al,0x67
  402c1d:	push   esp
  402c1e:	retf   
  402c1f:	(bad)  
  402c20:	sti    
  402c21:	adc    DWORD PTR [esi-0x5c],0xd294f65f
  402c28:	push   ds
  402c29:	aaa    
  402c2a:	cmp    eax,0xec9e9653
  402c2f:	push   0x9d7851d7
  402c34:	leave  
  402c35:	repz out 0xb2,eax
  402c38:	jg     0x402c31
  402c3a:	cmp    al,0xc4
  402c3c:	test   BYTE PTR ds:0xdb79ed96,ah
  402c42:	jb     0x402cb7
  402c44:	fld    DWORD PTR [ecx-0x52]
  402c47:	aad    0x40
  402c49:	data16 int 0xf
  402c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c4d:	sti    
  402c4e:	mov    dh,0xdc
  402c50:	hlt    
  402c51:	pop    esp
  402c52:	addr16 mov ch,0x6d
  402c55:	js     0x402c54
  402c57:	iret   
  402c58:	rcr    DWORD PTR [edi+0x21],0x2c
  402c5c:	repz mov dh,0xb4
  402c5f:	iret   
  402c60:	mov    DWORD PTR [edi+0xd],ecx
  402c63:	xchg   esi,eax
  402c64:	add    eax,ebp
  402c66:	(bad)
  402c6a:	in     al,dx
  402c6b:	ret    
  402c6c:	xlat   BYTE PTR ds:[ebx]
  402c6d:	pop    ds
  402c6e:	jmp    0xe5d9c7e9
  402c73:	fidiv  DWORD PTR [ebx+0x284e63c]
  402c79:	push   cs
  402c7a:	icebp  
  402c7b:	fbld   TBYTE PTR [ebx+0x2d]
  402c7e:	push   esp
  402c7f:	cld    
  402c80:	fwait
  402c81:	iretw  
  402c83:	cdq    
  402c84:	xchg   ecx,eax
  402c85:	mov    ah,ah
  402c87:	push   eax
  402c88:	cmc    
  402c89:	jecxz  0x402ccf
  402c8b:	add    eax,0xc7fc27d4
  402c90:	xchg   edx,eax
  402c91:	daa    
  402c92:	iret   
  402c93:	sub    DWORD PTR [edi],ebp
  402c95:	retf   
  402c96:	lods   eax,DWORD PTR ds:[esi]
  402c97:	mov    dl,0x3
  402c99:	daa    
  402c9a:	jb     0x402d0e
  402c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c9d:	icebp  
  402c9e:	pop    ss
  402c9f:	jle    0x402c54
  402ca1:	add    bh,0x8d
  402ca4:	mul    DWORD PTR [esi+0x1f]
  402ca7:	(bad)  
  402ca8:	stc    
  402ca9:	or     esi,DWORD PTR [edi+eax*1-0x1a]
  402cad:	xchg   edi,eax
  402cae:	test   ah,0xba
  402cb1:	and    edi,DWORD PTR [edi+edi*1-0x351bf9d7]
  402cb8:	pop    ebp
  402cb9:	mov    esp,ebx
  402cbb:	les    ecx,FWORD PTR [eax]
  402cbd:	mov    edi,DWORD PTR [esi+edx*8]
  402cc0:	push   eax
  402cc1:	sub    eax,0x31a6bee
  402cc6:	push   esi
  402cc7:	ins    BYTE PTR es:[edi],dx
  402cc8:	jl     0x402cad
  402cca:	and    DWORD PTR [ebx],edx
  402ccc:	(bad)  
  402ccf:	fisttp WORD PTR ds:0x770cf196
  402cd5:	(bad)  
  402cd6:	sti    
  402cd7:	in     al,0xad
  402cd9:	loop   0x402cc2
  402cdb:	pop    ss
  402cdc:	(bad)  
  402cdd:	mov    edx,ecx
  402cdf:	xchg   DWORD PTR [edx],ebx
  402ce1:	lods   eax,DWORD PTR ds:[esi]
  402ce2:	adc    ecx,DWORD PTR [ebp+0x59f945b3]
  402ce8:	dec    esp
  402ce9:	fisttp DWORD PTR [ecx-0xc54e74]
  402cef:	jg     0x402c75
  402cf1:	xchg   edi,eax
  402cf2:	sub    DWORD PTR [edx+0x7d1fe6d5],0xd141cc0d
  402cfc:	sub    esp,eax
  402cfe:	pop    es
  402cff:	gs in  al,0x5b
  402d02:	jne    0x402cb4
  402d04:	pop    ss
  402d05:	retf   0x9930
  402d08:	jecxz  0x402cbd
  402d0a:	pop    edi
  402d0b:	(bad)  
  402d0c:	mov    bh,0xc8
  402d0e:	xor    bl,BYTE PTR [ebp-0x2f]
  402d11:	xor    al,bl
  402d13:	sahf   
  402d14:	imul   edx
  402d16:	inc    ebx
  402d17:	ins    DWORD PTR es:[edi],dx
  402d18:	inc    esp
  402d19:	inc    esp
  402d1a:	dec    eax
  402d1b:	(bad)  
  402d1c:	fcom   DWORD PTR [ebp+0x3d]
  402d1f:	dec    ebp
  402d20:	adc    BYTE PTR [eax+esi*8-0x26d9b0c],ah
  402d27:	bound  esi,QWORD PTR [ebx-0x78]
  402d2a:	fnstenv [ecx+0x5d]
  402d2d:	cdq    
  402d2e:	outs   dx,BYTE PTR ds:[esi]
  402d2f:	retf   
  402d30:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402d32:	cdq    
  402d33:	mov    ebp,0xeb96a31e
  402d38:	stos   DWORD PTR es:[edi],eax
  402d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d3a:	sub    ebx,edi
  402d3c:	jecxz  0x402d24
  402d3e:	aas    
  402d3f:	es mov esp,0x1572a6d0
  402d45:	in     al,0x9d
  402d47:	xor    eax,0x60e4f3f5
  402d4c:	out    0xfa,eax
  402d4e:	push   ss
  402d4f:	jb     0x402d54
  402d51:	dec    ebx
  402d52:	test   al,0xcf
  402d54:	outs   dx,DWORD PTR ds:[esi]
  402d55:	call   0xc27246f0
  402d5a:	and    eax,0x1f403924
  402d5f:	adc    esp,DWORD PTR [edx+0x4b]
  402d62:	test   eax,0x1726fb54
  402d67:	repz jl 0x402d13
  402d6a:	leave  
  402d6b:	dec    esp
  402d6c:	add    ecx,DWORD PTR [ecx+0x68]
  402d6f:	test   eax,0x19a65551
  402d74:	ins    DWORD PTR es:[edi],dx
  402d75:	sub    DWORD PTR [ebx+0x27],ecx
  402d78:	pop    esi
  402d79:	push   ebp
  402d7a:	xchg   ebx,eax
  402d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7c:	(bad)  
  402d7d:	call   0xfc2d704
  402d82:	and    bh,BYTE PTR [ebx]
  402d84:	mov    ecx,0xd8fc7c6f
  402d89:	call   0xfb8b34f1
  402d8e:	pop    edi
  402d8f:	xchg   ebp,eax
  402d90:	add    al,0x2c
  402d92:	sar    BYTE PTR [edi+edx*4],1
  402d95:	cdq    
  402d96:	pop    ecx
  402d97:	gs pop edi
  402d99:	mov    ss,WORD PTR [esi+0x1db870fd]
  402d9f:	sti    
  402da0:	call   0x7315a0a8
  402da5:	inc    ebp
  402da6:	ins    DWORD PTR es:[edi],dx
  402da7:	ins    DWORD PTR es:[edi],dx
  402da8:	sub    al,0xb4
  402daa:	test   al,0xae
  402dac:	xor    eax,0x81f470fd
  402db1:	mov    bl,0xa6
  402db3:	nop
  402db4:	mov    cl,0xaf
  402db6:	ret    
  402db7:	xor    BYTE PTR [edx+0x5c75b030],ch
  402dbd:	sbb    BYTE PTR [edx],0xf1
  402dc0:	dec    esi
  402dc1:	push   0x50d12590
  402dc6:	std    
  402dc7:	add    ebp,DWORD PTR [edx]
  402dc9:	int    0x7d
  402dcb:	ficom  WORD PTR [ebx+0xab86db2]
  402dd1:	add    al,bl
  402dd3:	add    ch,BYTE PTR [ebx+eax*2+0x39]
  402dd7:	adc    al,0x25
  402dd9:	pop    eax
  402dda:	sbb    dl,BYTE PTR [ebx]
  402ddc:	aaa    
  402ddd:	push   cs
  402dde:	repz hlt 
  402de0:	(bad)  
  402de1:	cmp    eax,DWORD PTR [ecx+0x53]
  402de4:	xor    DWORD PTR [edi],ecx
  402de6:	inc    BYTE PTR [ebp+0x46cac40d]
  402dec:	(bad)  
  402ded:	clc    
  402dee:	push   0xffffff83
  402df0:	mov    edi,ebx
  402df2:	loopne 0x402df9
  402df4:	add    eax,0xe9426af4
  402df9:	sti    
  402dfa:	(bad)  
  402dfb:	stos   DWORD PTR es:[edi],eax
  402dfc:	mov    eax,ds
  402dfe:	shl    DWORD PTR [ebp-0xd],0x25
  402e02:	aas    
  402e03:	pusha  
  402e04:	add    esp,DWORD PTR [ecx+0x23c6d68e]
  402e0a:	sti    
  402e0b:	xor    cl,BYTE PTR [ebp+ecx*4+0x11348b9c]
  402e12:	sti    
  402e13:	aaa    
  402e14:	jne    0x402e5a
  402e16:	popa   
  402e17:	aam    0x40
  402e19:	dec    edx
  402e1a:	dec    edx
  402e1b:	out    0xb3,eax
  402e1d:	inc    ebx
  402e1e:	push   ss
  402e1f:	mov    ebx,0x421b2648
  402e24:	fidivr DWORD PTR [edx-0x47f5b27]
  402e2a:	inc    edx
  402e2b:	fbld   TBYTE PTR [edi-0x1b]
  402e2e:	or     bl,BYTE PTR [esi-0x25]
  402e31:	scas   eax,DWORD PTR es:[edi]
  402e32:	mov    ebx,DWORD PTR [esi-0x206c7a2e]
  402e38:	or     ah,cl
  402e3a:	rol    cl,cl
  402e3c:	and    DWORD PTR [ecx+0x50],0xcf15a82
  402e43:	cmc    
  402e44:	jae    0x402e87
  402e46:	in     al,0xef
  402e48:	(bad)  
  402e49:	fistp  DWORD PTR [edi+ecx*1+0x17]
  402e4d:	adc    eax,0x572e6509
  402e52:	mul    BYTE PTR [esi+0x4058df98]
  402e58:	ins    DWORD PTR es:[edi],dx
  402e59:	cdq    
  402e5a:	fucomi st,st(6)
  402e5c:	dec    esp
  402e5d:	mov    eax,ds:0xcbe169c8
  402e62:	or     bl,BYTE PTR [ecx+eiz*8+0x3d788db8]
  402e69:	mov    cl,0xc5
  402e6b:	push   ss
  402e6c:	repnz retf 0x9be6
  402e70:	imul   edx,ebp,0xffffffe7
  402e73:	sbb    DWORD PTR [esi+0x0],ebx
  402e76:	dec    esi
  402e77:	punpcklwd mm5,DWORD PTR [eax+0x39]
  402e7b:	sahf   
  402e7c:	lahf   
  402e7d:	sub    cl,BYTE PTR [esi+0x51]
  402e80:	dec    esp
  402e81:	rcr    BYTE PTR [ecx+0x2f20c619],0x72
  402e88:	std    
  402e89:	sub    eax,0x25d3d800
  402e8e:	stc    
  402e8f:	rol    bh,0xd8
  402e92:	jl     0x402f12
  402e94:	stos   BYTE PTR es:[edi],al
  402e95:	jle    0x402ea5
  402e97:	loope  0x402e27
  402e99:	add    ebx,DWORD PTR [ecx]
  402e9b:	call   0x600b:0x3e5accfd
  402ea2:	enter  0x4343,0x62
  402ea6:	cmp    cl,dh
  402ea8:	aam    0x45
  402eaa:	pop    edi
  402eab:	in     eax,dx
  402eac:	je     0x402ee7
  402eae:	push   esi
  402eaf:	add    al,0xdf
  402eb1:	shr    esi,1
  402eb3:	pop    esp
  402eb4:	pusha  
  402eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eb6:	xchg   ebx,eax
  402eb7:	cmp    ch,ah
  402eb9:	pushf  
  402eba:	mov    DWORD PTR [eax],edi
  402ebc:	sub    eax,0x54abf597
  402ec1:	inc    edi
  402ec2:	pusha  
  402ec3:	sub    BYTE PTR [eax+0x39],bh
  402ec6:	daa    
  402ec7:	and    al,BYTE PTR [ebp-0x43979c7e]
  402ecd:	mov    ecx,0x6f0fa1d5
  402ed2:	mov    ds:0xbcc6198a,eax
  402ed7:	dec    ecx
  402ed8:	cmp    dl,BYTE PTR [eax+edi*8+0x6aff9de9]
  402edf:	xor    eax,0x3b3b213
  402ee4:	lock imul ebx,DWORD PTR [ebp+0x6efe93c3],0x3edb7b55
  402eef:	mov    ss,WORD PTR [ebx-0x72]
  402ef2:	dec    esp
  402ef3:	cld    
  402ef4:	mov    al,ds:0xc185cc85
  402ef9:	lock xchg esi,eax
  402efb:	or     bh,BYTE PTR [edi-0x1d9dad11]
  402f01:	je     0x402f1f
  402f03:	pop    edx
  402f04:	mov    cl,0x9f
  402f06:	stos   BYTE PTR es:[edi],al
  402f07:	(bad)  
  402f09:	sub    DWORD PTR [esi+0x4476ee21],0x7c
  402f10:	dec    ebx
  402f11:	push   0xfcdfed65
  402f16:	dec    ebp
  402f17:	and    eax,0x4f96ccf9
  402f1c:	xchg   ebp,eax
  402f1d:	retw   0x1fc4
  402f21:	inc    ebx
  402f22:	rcl    BYTE PTR [edi-0x2b],1
  402f25:	pop    ebx
  402f26:	in     al,dx
  402f27:	adc    ch,al
  402f29:	outs   dx,BYTE PTR ds:[esi]
  402f2a:	arpl   WORD PTR [ecx-0x6b],si
  402f2d:	xchg   DWORD PTR [edx+0x64],ebp
  402f30:	mov    edx,0xd07a4e9e
  402f35:	xchg   DWORD PTR ds:0xb0ed9218,edx
  402f3b:	stos   BYTE PTR es:[edi],al
  402f3c:	xchg   ecx,eax
  402f3d:	sub    eax,0x56aa8037
  402f42:	hlt    
  402f43:	ficomp DWORD PTR [ebx-0x108bc457]
  402f49:	or     eax,DWORD PTR [ebx]
  402f4b:	mov    ecx,0x9d6c1616
  402f50:	cmp    DWORD PTR [edi],ebp
  402f52:	mov    edx,0x9d934533
  402f57:	jns    0x402fc8
  402f59:	(bad)  
  402f5a:	pop    ebx
  402f5b:	in     eax,0x1d
  402f5d:	punpcklwd mm6,mm3
  402f60:	mov    cl,0xec
  402f62:	shl    BYTE PTR [ebx-0x3f],cl
  402f65:	xor    eax,0xf4667de
  402f6a:	add    edi,DWORD PTR [edi-0x42]
  402f6d:	aas    
  402f6e:	mov    DWORD PTR [ebx],eax
  402f70:	(bad)  
  402f71:	stos   DWORD PTR es:[edi],eax
  402f72:	in     al,dx
  402f73:	aam    0x92
  402f75:	adc    BYTE PTR [ebx+0x181d18f7],cl
  402f7b:	xor    DWORD PTR [edx-0x2a],0xffffffea
  402f7f:	mov    edx,0x453f4e53
  402f84:	xlat   BYTE PTR ds:[ebx]
  402f85:	int3   
  402f86:	hlt    
  402f87:	mov    eax,ds:0x8b268d37
  402f8c:	xchg   ebx,eax
  402f8d:	enter  0x41ee,0x69
  402f91:	imul   edx,ebx,0x89b62879
  402f97:	inc    ebx
  402f98:	push   es
  402f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f9a:	js     0x402f87
  402f9c:	fbstp  TBYTE PTR [ebp*4+0x793f7580]
  402fa3:	xchg   DWORD PTR ds:0xb5151340,esp
  402fa9:	shl    dh,0xba
  402fac:	retf   
  402fad:	in     al,dx
  402fae:	ret    0x229d
  402fb1:	mov    ?,esi
  402fb3:	ds out dx,al
  402fb5:	(bad)  
  402fb6:	and    al,0x35
  402fb8:	ret    
  402fb9:	mov    fs,WORD PTR ds:0x4ed76335
  402fbf:	jecxz  0x402f95
  402fc1:	leave  
  402fc2:	inc    eax
  402fc3:	repnz dec esi
  402fc6:	aad    0x57
  402fc8:	pushf  
  402fc9:	and    BYTE PTR [edx+0x79ea80a9],0x28
  402fd0:	data16 mov BYTE PTR [ebx-0x6],dh
  402fd4:	push   ecx
  402fd5:	sub    eax,0x442ad300
  402fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fdb:	jmp    0x2a60cc0c
  402fe0:	iret   
  402fe1:	xchg   edi,eax
  402fe2:	xchg   ebx,eax
  402fe3:	add    dl,BYTE PTR [esi]
  402fe5:	popf   
  402fe6:	or     DWORD PTR [ebx],ecx
  402fe8:	clc    
  402fe9:	sbb    eax,0xb11232e
  402fee:	mov    eax,ds:0xe902094a
  402ff3:	pop    esp
  402ff4:	repnz idiv DWORD PTR [ebp+0x7a]
  402ff8:	inc    esp
  402ff9:	std    
  402ffa:	mov    edi,0x846e6781
  402fff:	pop    ss
  403000:	cmp    ebx,eax
  403002:	sub    dh,BYTE PTR [edx]
  403004:	inc    edx
  403005:	mov    ch,0x56
  403007:	jae    0x402fd8
  403009:	std    
  40300a:	out    dx,eax
  40300b:	ds push 0x33
  40300e:	lea    eax,[edi-0x575c9325]
  403014:	leave  
  403015:	rol    BYTE PTR [ecx],0xfc
  403018:	xchg   esp,eax
  403019:	les    ebx,FWORD PTR [edx-0x18]
  40301c:	outs   dx,DWORD PTR ds:[esi]
  40301d:	push   esi
  40301e:	jge    0x403034
  403020:	pop    esi
  403021:	sbb    BYTE PTR [edx-0x68],0xc2
  403025:	aad    0x30
  403027:	and    al,0x24
  403029:	outs   dx,BYTE PTR ds:[esi]
  40302a:	aaa    
  40302b:	test   eax,0x18de9b43
  403030:	adc    ebx,DWORD PTR [ebx]
  403032:	gs cli 
  403034:	cli    
  403035:	adc    dl,BYTE PTR [ebp-0x7ead0abd]
  40303b:	jae    0x4030aa
  40303d:	xchg   edx,eax
  40303e:	cdq    
  40303f:	fnsave [ebp-0x3e]
  403042:	popf   
  403043:	fistp  DWORD PTR [ebp+eax*1+0x793a03e5]
  40304a:	jg     0x4030ae
  40304c:	mov    WORD PTR [edi-0x5504f05a],?
  403052:	add    DWORD PTR [edx+0x45],ebp
  403055:	pop    ss
  403056:	lods   eax,DWORD PTR ds:[esi]
  403057:	sbb    al,0x77
  403059:	loope  0x403061
  40305b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40305c:	inc    ebx
  40305d:	div    DWORD PTR [eax-0x56]
  403060:	xchg   ebp,eax
  403061:	inc    esp
  403062:	out    0x88,eax
  403064:	gs bound ecx,QWORD PTR gs:[eax-0xe14b579]
  40306c:	enter  0x8f7,0x86
  403070:	jno    0x4030b0
  403072:	jo     0x40301e
  403074:	jnp    0x403070
  403076:	ret    
  403077:	inc    edi
  403078:	and    BYTE PTR [ecx-0x44],dl
  40307b:	ins    DWORD PTR es:[edi],dx
  40307c:	jns    0x402ffe
  40307e:	test   BYTE PTR [esi+0x6d35643e],ah
  403084:	or     eax,0x306d29e2
  403089:	sbb    al,0x87
  40308b:	push   eax
  40308c:	js     0x4030a9
  40308e:	xlat   BYTE PTR ds:[ebx]
  40308f:	xchg   ebp,eax
  403090:	mov    ds:0x9b6ca76f,eax
  403095:	cmp    dl,BYTE PTR [eax-0x23]
  403098:	add    al,0xdc
  40309a:	sbb    dl,BYTE PTR [ecx]
  40309c:	repz ja 0x4030db
  40309f:	lea    esi,[edx]
  4030a1:	dec    eax
  4030a2:	push   ebp
  4030a3:	jmp    0x4a4f:0x19d521c0
  4030aa:	inc    eax
  4030ab:	jmp    0xf622:0xa2ceb25f
  4030b2:	jl     0x403104
  4030b4:	xor    ch,BYTE PTR [edi]
  4030b6:	pop    ebx
  4030b7:	pop    edi
  4030b8:	aas    
  4030b9:	cdq    
  4030ba:	and    DWORD PTR [esi+0x12350a61],esi
  4030c0:	in     al,0x81
  4030c2:	(bad)  
  4030c3:	aad    0x84
  4030c5:	cmc    
  4030c6:	pop    ebx
  4030c7:	scas   al,BYTE PTR es:[edi]
  4030c8:	das    
  4030c9:	mov    esp,0x7eecab08
  4030ce:	fsubr  QWORD PTR [edi+eax*1-0x6e]
  4030d2:	mov    al,bl
  4030d4:	inc    edi
  4030d5:	outs   dx,BYTE PTR ds:[esi]
  4030d6:	ds jnp 0x403083
  4030d9:	daa    
  4030da:	pop    esp
  4030db:	jmp    0x3fed497e
  4030e0:	and    eax,0xdab91f9c
  4030e5:	nop
  4030e6:	xor    ah,bh
  4030e8:	inc    ebp
  4030e9:	adc    eax,0x8c1eb8d0
  4030ee:	push   0x2a
  4030f0:	in     al,dx
  4030f1:	fbstp  TBYTE PTR [edx-0x6e]
  4030f4:	mov    gs,WORD PTR [ebp-0x4d]
  4030f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030f8:	sbb    ebp,ebx
  4030fa:	dec    eax
  4030fb:	dec    eax
  4030fc:	pop    ds
  4030fd:	call   0xd505:0x8f918a06
  403104:	stos   BYTE PTR es:[edi],al
  403105:	inc    esi
  403106:	jmp    0x5139411f
  40310b:	mov    ds:0x7301caa8,al
  403110:	dec    esi
  403111:	(bad)  
  403112:	fimul  DWORD PTR [edx-0x34]
  403115:	bnd jge 0x403125
  403118:	ficom  WORD PTR [edi+0x1ea61f4]
  40311e:	ss dec ecx
  403120:	fistp  WORD PTR [ebp+0x77]
  403123:	mul    DWORD PTR [ecx]
  403125:	pop    ebx
  403126:	mov    edi,0x88016b06
  40312b:	sahf   
  40312c:	daa    
  40312d:	add    eax,0xf6bb115a
  403132:	gs jecxz 0x4030c9
  403135:	sub    edx,DWORD PTR ds:0x3f2506f3
  40313b:	cmp    DWORD PTR [eax-0x61],ecx
  40313e:	mov    ds:0xc21193fd,al
  403143:	ffree  st(0)
  403145:	xchg   BYTE PTR [edi+0x4f],ah
  403148:	call   0xaa0a:0x55983ead
  40314f:	or     al,0xe5
  403151:	inc    esp
  403152:	lock mov cs,eax
  403155:	dec    edx
  403156:	mov    WORD PTR [ecx+esi*4+0x25],es
  40315a:	mov    ah,0x44
  40315c:	lods   al,BYTE PTR ds:[esi]
  40315d:	cdq    
  40315e:	add    BYTE PTR [ebp+esi*4+0x7d],cl
  403162:	sbb    cl,BYTE PTR [ecx-0x31]
  403165:	dec    ebp
  403166:	xchg   ecx,eax
  403167:	push   ss
  403168:	push   ebx
  403169:	cwde   
  40316a:	xlat   BYTE PTR ds:[ebx]
  40316b:	sbb    esi,esp
  40316d:	call   0x7f4e:0xd19f367b
  403174:	pop    esi
  403175:	ds add eax,0x7aed32fc
  40317b:	js     0x40319d
  40317d:	adc    DWORD PTR [eax+0x5d0cec31],esp
  403183:	and    bl,ch
  403185:	sbb    eax,0x884de065
  40318a:	xchg   ebp,eax
  40318b:	or     eax,DWORD PTR [ebp-0x67cc658e]
  403191:	sbb    eax,0xca65d606
  403196:	das    
  403197:	aas    
  403198:	ss pop esp
  40319a:	cwde   
  40319b:	out    0x6a,eax
  40319d:	loope  0x4031dd
  40319f:	mov    dh,0x52
  4031a1:	push   ds
  4031a2:	xor    eax,0x79f8520a
  4031a7:	mov    al,BYTE PTR [edx-0x6ea8248d]
  4031ad:	out    0x0,eax
  4031af:	push   edx
  4031b0:	inc    esp
  4031b1:	cmp    DWORD PTR [eax+0x44],ebp
  4031b4:	xlat   BYTE PTR ds:[ebx]
  4031b5:	bound  ebp,QWORD PTR [ebx-0x1ec2db61]
  4031bb:	data16 and bl,BYTE PTR [ebp+eax*1+0x39]
  4031c0:	mov    dl,0xa2
  4031c2:	mov    gs:0xcbb811e6,eax
  4031c8:	aas    
  4031c9:	mov    bh,0xed
  4031cb:	push   edi
  4031cc:	mov    ecx,0x19c79192
  4031d1:	and    DWORD PTR [ecx],ebx
  4031d3:	cmp    eax,0x6284b865
  4031d8:	sub    dl,BYTE PTR ds:0xee77979f
  4031de:	push   es
  4031df:	dec    edx
  4031e0:	jmp    0x99a880a7
  4031e5:	fimul  DWORD PTR [esp+ecx*1]
  4031e8:	jne    0x4031ed
  4031ea:	or     esp,eax
  4031ec:	jge    0x403188
  4031ee:	jp     0x4031e9
  4031f0:	(bad)  
  4031f1:	out    dx,eax
  4031f2:	inc    esi
  4031f3:	rcl    DWORD PTR [edi+0x5a],1
  4031f6:	call   0xae2f37a9
  4031fb:	int3   
  4031fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031fd:	mov    ah,dl
  4031ff:	push   eax
  403200:	push   edi
  403201:	pop    esp
  403202:	pop    ds
  403203:	shl    DWORD PTR [edi],1
  403205:	loopne 0x4031c3
  403207:	mov    al,ds:0x3807a2c
  40320c:	ret    
  40320d:	and    cl,bl
  40320f:	rcr    BYTE PTR [ebx+0x69],0x92
  403213:	test   BYTE PTR [ecx],al
  403215:	out    0x45,eax
  403217:	xchg   edi,eax
  403218:	ret    0x1950
  40321b:	pusha  
  40321c:	pop    ebp
  40321d:	fcomp  QWORD PTR [ebx-0x24]
  403220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403221:	shl    DWORD PTR [ecx+0x7a],0x8
  403225:	dec    ecx
  403226:	mov    cl,0xc4
  403229:	or     ebp,DWORD PTR [eax]
  40322b:	mov    edx,0x782cd260
  403230:	retf   
  403231:	not    esi
  403233:	int    0x17
  403235:	jecxz  0x403240
  403237:	outs   dx,BYTE PTR ds:[esi]
  403238:	mov    ecx,0x2c740d68
  40323d:	add    edx,DWORD PTR [ecx+0x7ac04e03]
  403243:	fistp  DWORD PTR [ebp+edx*2-0x13b44d62]
  40324a:	add    eax,0x8dc60a4d
  40324f:	out    0x3f,eax
  403251:	(bad)  [eax+0x4fa381f7]
  403257:	mov    ebx,0x161e12d7
  40325c:	into   
  40325d:	add    eax,ebx
  40325f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403260:	loop   0x4032b0
  403262:	xchg   BYTE PTR [ebx+0x9f9d82],dl
  403268:	js     0x403217
  40326a:	jb     0x403276
  40326c:	in     al,0xd3
  40326e:	cdq    
  40326f:	iret   
  403270:	sub    al,0x5
  403272:	xor    al,0xb2
  403274:	inc    edi
  403275:	fisubr DWORD PTR [esi]
  403277:	jle    0x40324d
  403279:	out    dx,eax
  40327a:	sub    BYTE PTR [ebx-0x3c],0x57
  40327e:	or     eax,0x3a695d8b
  403283:	adc    cl,BYTE PTR [edx-0x66428cd]
  403289:	or     edx,eax
  40328b:	pop    esp
  40328c:	push   ebp
  40328d:	hlt    
  40328e:	test   al,0xee
  403290:	push   ebx
  403291:	pop    es
  403292:	fbld   TBYTE PTR [ecx+0x20]
  403295:	addr16 dec edx
  403297:	ror    BYTE PTR [ecx+0x44555446],cl
  40329d:	loopne 0x403241
  40329f:	bound  esp,QWORD PTR [edx-0x262f5bb2]
  4032a5:	sbb    edx,ebp
  4032a7:	aam    0xa8
  4032a9:	stc    
  4032aa:	xor    dh,BYTE PTR [eax]
  4032ac:	mov    WORD PTR [edi+0x5ef12243],ds
  4032b2:	rol    BYTE PTR [esp],1
  4032b5:	fcmove st,st(6)
  4032b7:	in     al,0x81
  4032b9:	mov    dl,0x3f
  4032bc:	addr16 aam 0x9
  4032bf:	push   DWORD PTR [ebp+0x19b21fc9]
  4032c5:	enter  0x1fce,0xa9
  4032c9:	mov    ds:0x8b211f3e,al
  4032ce:	sar    DWORD PTR [ecx-0x5a43032c],0xa3
  4032d5:	outs   dx,DWORD PTR ds:[esi]
  4032d6:	shl    DWORD PTR [ebx-0x31fdd191],0xde
  4032dd:	test   DWORD PTR [edx],ecx
  4032df:	(bad)  
  4032e0:	push   0x3
  4032e2:	inc    edi
  4032e3:	dec    ecx
  4032e4:	or     ebp,DWORD PTR [bp+si]
  4032e7:	test   eax,0x7e1f93d6
  4032ec:	bound  eax,QWORD PTR [ebx]
  4032ee:	mov    ds:0xfcfd544a,eax
  4032f3:	push   ebp
  4032f4:	and    esi,DWORD PTR [edi]
  4032f6:	arpl   WORD PTR [edi-0x4c914ee1],bx
  4032fc:	es ret 
  4032fe:	xchg   edx,eax
  4032ff:	int3   
  403300:	sbb    al,0xe6
  403302:	and    BYTE PTR [edx-0x7b],dl
  403305:	in     al,dx
  403306:	(bad)  
  403307:	(bad)  
  403308:	(bad)  
  403309:	push   DWORD PTR [ebp+0x5c]
  40330c:	push   0xd6490f7b
  403311:	out    dx,al
  403312:	push   eax
  403313:	in     eax,dx
  403314:	mov    edx,0xc5b166dc
  403319:	dec    ebp
  40331a:	add    eax,0x41e0fef
  40331f:	adc    cl,cl
  403321:	fnstsw WORD PTR [esi]
  403323:	enter  0xc392,0xc9
  403327:	xchg   esp,eax
  403328:	mov    eax,DWORD PTR [edx-0x1a]
  40332b:	(bad)  
  40332c:	pop    ebp
  40332d:	jmp    0x4032e9
  40332f:	push   ds
  403330:	scas   eax,DWORD PTR es:[edi]
  403331:	mov    eax,0x4d920080
  403336:	push   ds
  403337:	and    bl,BYTE PTR [ecx+0x119bd7d8]
  40333d:	fnsave ds:0xed9f93df
  403343:	jno    0x4032f0
  403345:	fdiv   DWORD PTR [ebx-0x6f]
  403348:	or     BYTE PTR [edx+ebx*4],ch
  40334b:	les    esi,FWORD PTR [ecx+0x68]
  40334e:	cwde   
  40334f:	xor    ebp,DWORD PTR [esi+0x42659609]
  403355:	arpl   si,di
  403357:	dec    eax
  403358:	not    BYTE PTR ds:0xdae7e415
  40335e:	and    esp,edx
  403360:	sub    al,bl
  403362:	cdq    
  403363:	retf   0xf44f
  403366:	les    esi,FWORD PTR [ecx+0x7ea06a66]
  40336c:	ret    0x6331
  40336f:	jnp    0x4032f9
  403371:	lea    esi,[edi-0x21c1de44]
  403377:	sbb    bl,al
  403379:	cmc    
  40337a:	dec    edx
  40337b:	popf   
  40337c:	je     0x403332
  40337e:	pop    ecx
  40337f:	xlat   BYTE PTR ds:[ebx]
  403380:	push   es
  403381:	in     eax,dx
  403382:	push   esi
  403383:	(bad)  
  403384:	stc    
  403385:	lock sbb ebx,DWORD PTR [edi+0x39fceb1e]
  40338c:	sbb    DWORD PTR [edi+0x49ba5472],0x2b92cbeb
  403396:	in     eax,0x2d
  403398:	icebp  
  403399:	ja     0x403377
  40339b:	push   0xfbe7a11d
  4033a0:	idiv   BYTE PTR [edx]
  4033a2:	rcl    ah,1
  4033a4:	jmp    0xc0be:0x5048673c
  4033ab:	cld    
  4033ac:	leave  
  4033ad:	mov    ebp,0x73ed023b
  4033b2:	imul   edi,esp,0x59
  4033b5:	sub    DWORD PTR [edx],ecx
  4033b7:	jl     0x40339e
  4033b9:	sub    eax,esp
  4033bb:	mov    cl,0x4f
  4033bd:	bound  ebp,QWORD PTR [ecx]
  4033bf:	inc    ebx
  4033c0:	push   esp
  4033c1:	sahf   
  4033c2:	sub    al,0xd2
  4033c4:	mov    esp,0x235767d4
  4033c9:	mov    edi,0x43d949a0
  4033ce:	inc    edx
  4033cf:	inc    esi
  4033d0:	jns    0x403418
  4033d2:	mov    eax,ds:0x17868b0e
  4033d7:	xchg   BYTE PTR [ebx],dl
  4033d9:	cs repz adc al,BYTE PTR gs:[edi+0x43]
  4033df:	dec    edi
  4033e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033e1:	sbb    cl,cl
  4033e3:	mov    eax,0xce1a7897
  4033e8:	add    al,0xa2
  4033ea:	inc    ecx
  4033eb:	dec    ebp
  4033ec:	jp     0x40342d
  4033ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ef:	rol    DWORD PTR [edi],cl
  4033f1:	cwde   
  4033f2:	fbstp  TBYTE PTR [edi-0x3e]
  4033f5:	push   eax
  4033f6:	div    DWORD PTR [edi]
  4033f8:	inc    edi
  4033f9:	addr16 jae 0x6c4dee8c
  403400:	scas   eax,DWORD PTR es:[edi]
  403401:	bound  ebp,QWORD PTR ds:0x7a81eb9a
  403407:	sub    edx,DWORD PTR [ebx]
  403409:	mov    ah,0xbc
  40340b:	aad    0xed
  40340d:	(bad)  
  40340e:	ret    
  40340f:	inc    eax
  403410:	(bad)  
  403412:	push   edx
  403413:	jmp    0x98c:0xb361ac6a
  40341a:	in     al,0x7
  40341c:	inc    esp
  40341d:	(bad)  
  40341e:	shl    BYTE PTR [ecx+0x7efe77c3],cl
  403424:	add    BYTE PTR [edi+0x6d],dl
  403427:	enter  0xbab5,0x22
  40342b:	fmul   DWORD PTR [esi-0xa]
  40342e:	inc    DWORD PTR [edi+0x74]
  403431:	and    dl,BYTE PTR [ecx+0x5d]
  403434:	adc    DWORD PTR [edi+0x21],esi
  403437:	ins    BYTE PTR es:[edi],dx
  403438:	mov    dh,bh
  40343a:	jecxz  0x403477
  40343c:	inc    ebp
  40343d:	aam    0x5
  40343f:	shr    DWORD PTR [edi+ebp*8+0x7e70ed0f],1
  403446:	adc    DWORD PTR [esi],eax
  403448:	adc    cl,BYTE PTR [eax]
  40344a:	dec    ebp
  40344b:	ja     0x4034b4
  40344d:	icebp  
  40344e:	outs   dx,DWORD PTR ds:[esi]
  40344f:	mov    ds:0x87fac271,eax
  403454:	inc    edi
  403455:	enter  0x63a0,0x4d
  403459:	fidivr DWORD PTR [edx-0x578fe175]
  40345f:	daa    
  403460:	out    dx,al
  403461:	in     al,dx
  403462:	jp     0x4034cd
  403464:	xchg   edx,eax
  403465:	mov    eax,ds:0xfe884508
  40346a:	out    0xb3,eax
  40346c:	retf   0xdbfc
  40346f:	xor    edi,DWORD PTR [ecx-0x4e]
  403472:	test   DWORD PTR [edx+ebx*8-0x5a44ac1c],edi
  403479:	sub    al,0xf8
  40347b:	xchg   edx,eax
  40347d:	pop    esi
  40347e:	in     eax,dx
  40347f:	outs   dx,BYTE PTR ds:[esi]
  403480:	mov    ecx,0xf21379de
  403485:	outs   dx,DWORD PTR ds:[esi]
  403486:	out    0x3a,al
  403488:	jo     0x40345d
  40348a:	mov    dl,0x4b
  40348c:	popa   
  40348d:	shl    DWORD PTR [esp+eiz*8-0x75],1
  403491:	imul   ebx,DWORD PTR [esi-0x4f],0x34866463
  403498:	sbb    eax,0x6e84ab64
  40349d:	repz mov al,0xb4
  4034a0:	xor    ebp,DWORD PTR [ecx]
  4034a2:	pusha  
  4034a3:	cmp    eax,0x6ea35fd9
  4034a8:	in     eax,0xac
  4034aa:	bound  esp,QWORD PTR [ebp+0x7700adc6]
  4034b0:	mov    ch,0x8b
  4034b2:	dec    DWORD PTR [ecx]
  4034b4:	mov    ebp,0xa9fb12e3
  4034b9:	jl     0x403501
  4034bb:	arpl   dx,dx
  4034bd:	mov    bh,0x3b
  4034bf:	lods   eax,DWORD PTR ds:[esi]
  4034c0:	outs   dx,BYTE PTR ds:[esi]
  4034c1:	ds jge 0x40352b
  4034c4:	mov    al,0xc7
  4034c6:	out    0xd5,eax
  4034c8:	hlt    
  4034c9:	cld    
  4034ca:	cs nop
  4034cc:	xlat   BYTE PTR ds:[ebx]
  4034cd:	orps   xmm4,XMMWORD PTR [edi+0x17]
  4034d1:	pop    ebp
  4034d2:	mov    ebx,0xb089208d
  4034d7:	outs   dx,DWORD PTR ds:[esi]
  4034d8:	mov    edi,0x83eacd03
  4034dd:	pop    ebx
  4034df:	sbb    BYTE PTR [esi+0x54],bh
  4034e2:	xor    bh,BYTE PTR [esi]
  4034e4:	iret   
  4034e5:	jb     0x403562
  4034e7:	scas   al,BYTE PTR es:[edi]
  4034e8:	fsubp  st(2),st
  4034ea:	fs enter 0x4b06,0xd7
  4034ef:	in     eax,dx
  4034f0:	test   DWORD PTR [edx+0x3],ebp
  4034f3:	enter  0x88b6,0xef
  4034f7:	mov    ds:0x288176a4,eax
  4034fc:	imul   ecx,ecx,0x3d
  4034ff:	std    
  403500:	imul   eax,ecx,0xb5001cec
  403506:	xchg   esi,eax
  403507:	test   BYTE PTR ds:0xa26c9993,dl
  40350d:	sar    bh,cl
  40350f:	inc    ecx
  403510:	sbb    BYTE PTR [eax+0x1d5f8368],0x45
  403517:	mov    BYTE PTR ds:0x2b9ace40,0x4c
  40351e:	in     al,dx
  40351f:	idiv   BYTE PTR [eax-0x2bb32eb5]
  403525:	std    
  403526:	les    eax,FWORD PTR [ecx+ebx*1-0x1d1df479]
  40352d:	leave  
  40352e:	(bad)  
  40352f:	mov    DWORD PTR [esi+eiz*8+0x1f721737],esi
  403536:	or     edx,DWORD PTR [edx]
  403538:	out    dx,eax
  403539:	add    al,0x35
  40353b:	xchg   ecx,esp
  40353d:	mov    al,0x46
  40353f:	push   eax
  403540:	lock and dh,BYTE PTR [edi-0x24548ffe]
  403547:	or     al,0x3
  403549:	into   
  40354a:	sub    dh,BYTE PTR [eax]
  40354c:	popf   
  40354d:	cmp    BYTE PTR [ecx+ebx*1+0x3f],bl
  403551:	pop    ebx
  403552:	clc    
  403553:	neg    DWORD PTR [esi+edi*1]
  403556:	ins    BYTE PTR es:[edi],dx
  403557:	xlat   BYTE PTR cs:[ebx]
  403559:	imul   edi,DWORD PTR [edx+0x4e],0xffffffbc
  40355d:	sbb    al,0xdd
  40355f:	jnp    0x4035c8
  403561:	push   es
  403562:	or     eax,0xebcbce12
  403567:	rcl    DWORD PTR [ecx],1
  403569:	ins    BYTE PTR es:[edi],dx
  40356a:	int    0xcf
  40356c:	cld    
  40356d:	mov    dl,0x53
  40356f:	test   eax,0x97375ab9
  403574:	xchg   ecx,eax
  403575:	(bad)  
  403576:	neg    DWORD PTR [eax+0x38caca2d]
  40357c:	fisub  WORD PTR [di+0x48]
  403580:	jle    0x4035f1
  403582:	adc    eax,0x3a11cb5c
  403587:	in     al,0x62
  403589:	push   esi
  40358a:	lds    ebx,FWORD PTR [ebx+0x511c085f]
  403590:	fxch   st(4)
  403592:	rcr    ah,cl
  403594:	adc    al,0x73
  403596:	cli    
  403597:	jb     0x403557
  403599:	scas   al,BYTE PTR es:[edi]
  40359a:	test   al,0x47
  40359c:	xchg   ecx,eax
  40359d:	aad    0x54
  40359f:	cmp    DWORD PTR [esi-0x49],ebp
  4035a2:	leave  
  4035a3:	ins    DWORD PTR es:[edi],dx
  4035a4:	xlat   BYTE PTR ds:[ebx]
  4035a5:	fwait
  4035a6:	out    0x29,eax
  4035a8:	es cli 
  4035aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ab:	retf   0x9b85
  4035ae:	ja     0x403559
  4035b0:	jno    0x4035f7
  4035b2:	cmp    edx,0x24
  4035b5:	mov    esp,ebx
  4035b7:	in     eax,0x55
  4035b9:	mov    ch,0xe8
  4035bb:	leave  
  4035bc:	repz add ch,BYTE PTR [eax-0x70]
  4035c0:	call   0x8c8d02a4
  4035c5:	add    eax,0x883a319c
  4035ca:	add    DWORD PTR [esi],ecx
  4035cc:	mov    dh,0x75
  4035ce:	or     DWORD PTR [edi],0x55a68db6
  4035d4:	mov    ds:0x8133548b,eax
  4035d9:	(bad)  
  4035da:	js     0x4035dc
  4035dc:	inc    ebp
  4035dd:	push   edx
  4035de:	ds (bad) 
  4035e0:	aam    0xef
  4035e2:	in     eax,dx
  4035e3:	sbb    ah,BYTE PTR [ecx-0x2eea83fa]
  4035e9:	stos   DWORD PTR es:[edi],eax
  4035ea:	outs   dx,BYTE PTR ds:[esi]
  4035eb:	(bad)  
  4035ec:	pusha  
  4035ed:	push   ss
  4035ee:	fsubr  QWORD PTR [ecx+0xb]
  4035f1:	outs   dx,DWORD PTR ds:[esi]
  4035f2:	out    dx,al
  4035f3:	jnp    0x403592
  4035f5:	push   ecx
  4035f6:	mov    esp,0x68ef8a61
  4035fb:	mov    ebp,0xf178896e
  403600:	xchg   ebx,eax
  403601:	fsub   DWORD PTR [esi]
  403603:	mov    DWORD PTR [ebp+0x67ed1b72],edx
  403609:	sub    bl,ch
  40360b:	scas   al,BYTE PTR es:[edi]
  40360c:	push   esi
  40360d:	mov    es,WORD PTR fs:[ebx]
  403610:	rcr    BYTE PTR [ecx],0x9e
  403613:	int3   
  403614:	push   ds
  403615:	pop    edx
  403616:	jl     0x403652
  403618:	mov    dl,0xa7
  40361b:	aam    0xf3
  40361d:	push   ebx
  40361e:	mov    bl,0x90
  403620:	mov    WORD PTR [edx+ebx*4],ds
  403623:	sub    BYTE PTR [edi+0xda80b2d],bl
  403629:	imul   DWORD PTR [ecx-0x6527d0ad]
  40362f:	push   es
  403630:	mov    eax,?
  403632:	out    dx,al
  403633:	pop    esp
  403634:	lods   eax,DWORD PTR ds:[esi]
  403635:	cwde   
  403636:	and    eax,0x6dfdd87a
  40363b:	fmul   DWORD PTR [eax+0x45]
  40363e:	dec    eax
  40363f:	pop    esp
  403640:	adc    eax,0xc3117320
  403645:	and    eax,0x4cc50bb2
  40364a:	icebp  
  40364b:	aas    
  40364c:	rcr    DWORD PTR [ebx],1
  40364e:	sbb    al,0xa
  403650:	shr    ch,0x8d
  403653:	ffreep st(5)
  403655:	in     al,dx
  403656:	mov    ds:0x3db78c4a,eax
  40365b:	sub    BYTE PTR [esi+0x23703d4c],dh
  403661:	fwait
  403662:	add    eax,0x5a17b39e
  403667:	aaa    
  403668:	xchg   esp,eax
  403669:	mov    ecx,0x4ae86668
  40366e:	pop    ebx
  40366f:	sub    esp,ebx
  403671:	mov    al,ds:0xea9ab56c
  403676:	fst    QWORD PTR [edx]
  403678:	jo     0x40362d
  40367a:	and    BYTE PTR [edi-0x36],bh
  40367d:	or     ecx,DWORD PTR [edx]
  40367f:	dec    ecx
  403680:	jmp    0x7882:0x592a36d8
  403687:	xchg   edi,eax
  403688:	or     al,0xcf
  40368a:	sub    ebx,DWORD PTR [ebx-0x75]
  40368d:	xchg   ebp,eax
  40368e:	cmp    al,0xa1
  403690:	mov    al,ds:0x49561454
  403695:	mov    edx,?
  403697:	shl    DWORD PTR [eax+0x6f8213a3],0x88
  40369e:	dec    esi
  40369f:	ffree  st(0)
  4036a1:	pop    ebx
  4036a2:	dec    ebp
  4036a3:	sub    al,0xaa
  4036a5:	sar    BYTE PTR [edx+0x14d0e7b2],cl
  4036ab:	call   0xd865:0x430b4b66
  4036b2:	push   esi
  4036b3:	or     ebp,DWORD PTR [ecx-0x2215c55b]
  4036b9:	sbb    dh,dh
  4036bb:	add    esp,DWORD PTR [ecx+eax*8]
  4036be:	jecxz  0x4036a5
  4036c0:	mov    ds:0xe44604b9,al
  4036c5:	adc    bl,bl
  4036c7:	xlat   BYTE PTR ds:[ebx]
  4036c8:	add    bl,BYTE PTR [edx+0x76]
  4036cb:	aas    
  4036cc:	and    DWORD PTR [ebx+edx*4-0x41],edx
  4036d0:	cmc    
  4036d1:	into   
  4036d2:	repz sbb al,0x9d
  4036d5:	jne    0x40374d
  4036d7:	dec    edx
  4036d8:	repz scas al,BYTE PTR es:[edi]
  4036da:	ins    DWORD PTR es:[edi],dx
  4036db:	(bad)  
  4036dc:	push   esi
  4036dd:	adc    BYTE PTR [edx+edi*4+0x15],ch
  4036e1:	test   eax,0xdb369458
  4036e6:	adc    edi,DWORD PTR [ecx-0x42]
  4036e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ea:	sbb    ah,BYTE PTR [ecx]
  4036ec:	arpl   WORD PTR ds:0x4985d30a,di
  4036f2:	sub    BYTE PTR [edi+0x6c],ah
  4036f5:	pop    eax
  4036f6:	and    ecx,0x67
  4036f9:	(bad)  
  4036fa:	dec    esi
  4036fb:	pop    ecx
  4036fc:	mov    WORD PTR [ecx],?
  4036fe:	push   ss
  4036ff:	iret   
  403700:	leave  
  403701:	push   eax
  403702:	retf   
  403703:	ins    BYTE PTR es:[edi],dx
  403704:	std    
  403705:	ins    DWORD PTR es:[edi],dx
  403706:	les    eax,FWORD PTR [edi+0xf]
  403709:	sbb    BYTE PTR [esi-0x72],ah
  40370c:	stos   DWORD PTR es:[edi],eax
  40370d:	push   esi
  40370e:	add    cl,ch
  403710:	es xchg edx,eax
  403712:	push   edx
  403713:	jb     0x4036c2
  403715:	fnsave fs:[esi+eiz*1]
  403719:	js     0x40374c
  40371b:	rcr    dh,1
  40371d:	jp     0x4036c8
  40371f:	not    DWORD PTR [ebx+eax*4+0x68]
  403723:	fnsave [eax]
  403725:	push   0xd07d3100
  40372a:	and    esi,DWORD PTR [eax+edx*1+0x30ca984e]
  403731:	in     eax,dx
  403732:	in     eax,0x5e
  403734:	add    BYTE PTR [ecx+0x12fe1be2],dh
  40373a:	ja     0x403757
  40373c:	call   0x17b0:0xfadc8d89
  403743:	jle    0x40371a
  403745:	push   cx
  403747:	in     eax,0x84
  403749:	icebp  
  40374a:	push   esi
  40374b:	add    al,0xcc
  40374d:	sub    DWORD PTR [ebp-0x5634c573],edi
  403753:	and    ebp,DWORD PTR [eax]
  403755:	dec    ecx
  403756:	xor    ecx,DWORD PTR [esi+0x14706a11]
  40375c:	mov    DWORD PTR [ebx+0x4d6b0544],esp
  403762:	xor    edi,DWORD PTR [esi+eax*8]
  403765:	mov    DWORD PTR [esi-0x7f],ecx
  403768:	mov    cl,BYTE PTR [eax]
  40376a:	shr    DWORD PTR [edx+0x61f6701c],1
  403770:	ja     0x8c510797
  403776:	mov    edx,0x823d8e68
  40377b:	out    0xb9,eax
  40377d:	icebp  
  40377e:	call   0xbefa:0x38769bb5
  403785:	loop   0x40371f
  403787:	les    esi,FWORD PTR [ebp+0xa]
  40378a:	int    0x25
  40378c:	mov    DWORD PTR [ecx+ebp*4+0x74c5ef14],edx
  403793:	add    al,0xbf
  403795:	mov    al,cl
  403797:	xchg   esi,eax
  403798:	cmp    BYTE PTR [ecx-0x75],al
  40379b:	sbb    BYTE PTR [eax-0x7a],0x30
  40379f:	jno    0x4037e8
  4037a1:	pop    esi
  4037a2:	(bad)  
  4037a4:	inc    eax
  4037a5:	and    al,0x11
  4037a7:	test   DWORD PTR [edi+0x6049f9ae],edi
  4037ad:	imul   esi
  4037af:	adc    eax,DWORD PTR [ebp+0x9]
  4037b2:	xlat   BYTE PTR ds:[ebx]
  4037b3:	mov    ch,0x58
  4037b5:	push   DWORD PTR [eax]
  4037b7:	mov    ebp,0x5424ff5
  4037bc:	fadd   QWORD PTR [edi+esi*1]
  4037bf:	pop    ebx
  4037c0:	bnd jg 0x4037d8
  4037c3:	in     eax,dx
  4037c4:	adc    DWORD PTR [edx+0x69139fa3],0x6d7e2bff
  4037ce:	sahf   
  4037cf:	(bad)  
  4037d0:	mov    ebp,0x151f923a
  4037d5:	in     al,0xb0
  4037d7:	mov    esp,0xfa34c843
  4037dc:	enter  0xfcda,0x3e
  4037e0:	and    eax,0xd4f8e88
  4037e5:	mov    ah,0x14
  4037e7:	mov    bl,0xc4
  4037e9:	leave  
  4037ea:	cmp    al,0x71
  4037ec:	retf   
  4037ed:	cmp    dh,BYTE PTR [edi]
  4037ef:	test   al,0x6c
  4037f1:	mov    bh,0x5a
  4037f3:	pushf  
  4037f4:	cmp    ebx,DWORD PTR [edi]
  4037f6:	cs in  eax,0xe7
  4037f9:	lock pop ebx
  4037fb:	lds    eax,FWORD PTR [ebp+0x16b7b2e8]
  403801:	dec    eax
  403802:	into   
  403803:	lock imul edi,DWORD PTR [edx+0x6c],0x59
  403808:	je     0x40380e
  40380a:	fs xor eax,0x243d418c
  403810:	iret   
  403811:	lea    eax,[edi-0x22de2096]
  403817:	xchg   edx,eax
  403818:	cmp    eax,DWORD PTR [edx-0x26]
  40381b:	nop
  40381c:	imul   ebx,DWORD PTR [eax-0x5fc712b0],0x42
  403823:	(bad)  
  403824:	push   ss
  403825:	mov    eax,0xcbfd24d4
  40382a:	fs std 
  40382c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40382d:	pop    ebp
  40382e:	sbb    dl,ah
  403830:	aam    0x5e
  403832:	and    BYTE PTR ds:[ecx+0x1a],bh
  403836:	sbb    eax,DWORD PTR [eax]
  403838:	and    ch,BYTE PTR [eax-0x16]
  40383b:	dec    ecx
  40383c:	push   ebx
  40383d:	mov    ch,0xcf
  40383f:	ret    
  403840:	xor    DWORD PTR [edx+0x13a3aaa9],edi
  403846:	aam    0xa0
  403848:	(bad)  
  40384a:	jne    0x4037f1
  40384c:	or     BYTE PTR ds:0xeadfd20b,ch
  403852:	jp     0x4037fa
  403854:	add    ecx,DWORD PTR [ebp+0x7dbd8272]
  40385a:	push   eax
  40385b:	ds jb  0x4038d6
  40385e:	dec    esp
  40385f:	mov    esp,0xb682c217
  403864:	jae    0x4038ca
  403866:	sar    BYTE PTR [ecx-0x1f],cl
  403869:	repnz gs mov cl,0x44
  40386d:	cli    
  40386e:	pop    eax
  40386f:	jmp    0x40387a
  403871:	jle    0x40386d
  403873:	xor    eax,0xb195bc5f
  403878:	jae    0x403884
  40387a:	jmp    0xf50:0xd7a6a5d9
  403881:	lea    esp,[esp+esi*8+0x7b2034f8]
  403888:	lods   eax,DWORD PTR ds:[esi]
  403889:	sar    ebx,0x95
  40388c:	xchg   ecx,eax
  40388d:	sbb    ch,0x50
  403890:	imul   esi,edi,0xffffffbf
  403893:	push   ecx
  403894:	scas   al,BYTE PTR es:[edi]
  403895:	test   esp,ecx
  403897:	outs   dx,BYTE PTR ds:[esi]
  403898:	jg     0x4038d4
  40389a:	call   0x4e3087e2
  40389f:	adc    al,0xe9
  4038a1:	pusha  
  4038a2:	mov    dh,0xca
  4038a4:	mov    al,0x9a
  4038a6:	nop
  4038a7:	lods   al,BYTE PTR ds:[esi]
  4038a8:	sub    edi,ecx
  4038aa:	mov    ah,0x5a
  4038ac:	pop    eax
  4038ad:	mov    ds:0x5f236318,eax
  4038b2:	mov    ?,WORD PTR [ecx+edi*1+0x26ff5164]
  4038b9:	(bad)
  4038bd:	mov    cl,0x70
  4038bf:	pop    ebp
  4038c0:	and    eax,ebx
  4038c2:	jmp    0x518da6c9
  4038c7:	test   BYTE PTR [esi+0x1d],ah
  4038ca:	fwait
  4038cb:	xor    ebx,DWORD PTR [ebp-0x68]
  4038ce:	stos   DWORD PTR es:[edi],eax
  4038cf:	or     ah,bh
  4038d1:	cmp    al,0xaf
  4038d3:	in     al,0x6a
  4038d5:	lods   al,BYTE PTR ds:[esi]
  4038d6:	adc    bh,BYTE PTR [ecx+0x75]
  4038d9:	ds inc eax
  4038db:	les    ecx,FWORD PTR [eax-0x53daeb8a]
  4038e1:	jo     0x4038bb
  4038e3:	cmp    al,BYTE PTR ds:0x4605bceb
  4038e9:	cld    
  4038ea:	cmp    al,0xaf
  4038ec:	mov    dl,0x92
  4038ee:	cmp    DWORD PTR [eax+ebp*8-0x20],esi
  4038f2:	data16 mov WORD PTR [eax],es
  4038f5:	mov    dl,0xe6
  4038f7:	out    0x85,eax
  4038f9:	cld    
  4038fa:	cmc    
  4038fb:	inc    eax
  4038fc:	imul   cx,bx,0xd035
  403901:	test   eax,0xa0246fd3
  403906:	daa    
  403907:	jnp    0x40389c
  403909:	jecxz  0x4038d7
  40390b:	stos   BYTE PTR es:[edi],al
  40390c:	shl    BYTE PTR [eax+0x19],cl
  40390f:	iret   
  403910:	arpl   si,dx
  403912:	mov    dh,0x90
  403914:	ret    
  403915:	int    0x68
  403917:	xchg   ecx,eax
  403918:	lahf   
  403919:	sbb    al,0x23
  40391b:	inc    ebp
  40391c:	mov    ch,dh
  40391e:	sti    
  40391f:	mov    eax,0x70ddf4be
  403924:	and    BYTE PTR ds:0xc4caca33,0xa5
  40392b:	lock and al,0x9f
  40392e:	sahf   
  40392f:	sub    eax,0xa78ec7b3
  403934:	inc    esp
  403935:	out    0x41,eax
  403937:	adc    esi,esp
  403939:	icebp  
  40393a:	mov    ds,WORD PTR [ebp+0x26]
  40393d:	(bad)  
  40393e:	xchg   esp,eax
  40393f:	xor    dh,BYTE PTR [si-0x73]
  403943:	mov    WORD PTR [esi+0x682804d1],ds
  403949:	mov    bh,0xe1
  40394b:	mov    bh,0xa5
  40394d:	cmc    
  40394e:	call   0x4d41:0x78cd4fcd
  403955:	mov    ecx,DWORD PTR [esi]
  403957:	lods   eax,DWORD PTR ds:[esi]
  403958:	call   0xf02d:0xee99d19
  40395f:	and    ebx,ecx
  403961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403962:	mov    ebp,0xab728903
  403967:	test   BYTE PTR [edx],cl
  403969:	mov    dl,0x6e
  40396b:	stos   DWORD PTR es:[edi],eax
  40396c:	mov    esi,0xf20a9222
  403971:	jmp    0x403929
  403973:	cs (bad) 
  403975:	adc    eax,DWORD PTR [eax]
  403977:	sar    BYTE PTR [ecx],0x2a
  40397a:	test   ch,bh
  40397c:	push   eax
  40397d:	popf   
  40397e:	idiv   BYTE PTR [edi-0x52b0e189]
  403984:	sbb    ebx,DWORD PTR [esp+eiz*8+0x70]
  403988:	mov    BYTE PTR [esi+0x486cfe6e],bl
  40398e:	mov    BYTE PTR [eax-0x48ebc15b],dh
  403994:	lea    esi,[ebx+edi*8]
  403997:	repnz arpl bp,di
  40399a:	popf   
  40399b:	test   bh,cl
  40399d:	clc    
  40399e:	js     0x403988
  4039a0:	js     0x4039d5
  4039a2:	xchg   ebx,eax
  4039a3:	mov    cl,0xf6
  4039a5:	mov    edx,DWORD PTR [eax+edi*1]
  4039a8:	pop    ebp
  4039a9:	sub    ch,0x2a
  4039ac:	mov    bh,0x46
  4039ae:	in     al,0xf2
  4039b0:	push   ebp
  4039b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b2:	xor    al,BYTE PTR [bp+di-0x7b]
  4039b6:	xchg   DWORD PTR [ebx+0x453b8136],edx
  4039bc:	cli    
  4039bd:	push   esi
  4039be:	shl    edi,1
  4039c0:	daa    
  4039c1:	push   esp
  4039c2:	cmp    DWORD PTR [esi+0x43],esi
  4039c5:	jbe    0x4039de
  4039c7:	es hlt 
  4039c9:	imul   ecx,DWORD PTR [ebx+eax*1+0x6f],0x3e7a0cd1
  4039d1:	mov    ds:0x5f5ccb93,eax
  4039d6:	retf   0x5236
  4039d9:	lods   eax,DWORD PTR ds:[esi]
  4039da:	test   DWORD PTR [edi+esi*1],0xfd538c8c
  4039e1:	add    BYTE PTR [ebx],al
  4039e3:	test   DWORD PTR [edi+eiz*2-0x45a1e801],edi
  4039ea:	add    edx,ebp
  4039ec:	jg     0x403979
  4039ee:	add    bh,ah
  4039f0:	dec    edi
  4039f1:	fisub  WORD PTR [edi]
  4039f3:	mov    dh,0x58
  4039f5:	jnp    0x4039d6
  4039f7:	dec    ecx
  4039f8:	jns    0x403a2a
  4039fa:	(bad)  
  4039fb:	sbb    al,0x30
  4039fd:	inc    esi
  4039fe:	inc    esp
  4039ff:	xchg   DWORD PTR [ebx],edi
  403a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a02:	sub    DWORD PTR [edx+0x50],esi
  403a05:	sub    dh,BYTE PTR [ebp-0x66]
  403a08:	xchg   edx,eax
  403a09:	pop    es
  403a0a:	leave  
  403a0b:	or     BYTE PTR [eax+0x25],bh
  403a0e:	shl    DWORD PTR [edi-0xb5f8cdd],cl
  403a14:	fdivrp st(1),st
  403a16:	outs   dx,BYTE PTR ds:[esi]
  403a17:	lds    edx,FWORD PTR [esi]
  403a19:	fwait
  403a1a:	pop    ebx
  403a1b:	js     0x403a79
  403a1d:	outs   dx,DWORD PTR ds:[esi]
  403a1e:	popf   
  403a1f:	dec    ebx
  403a20:	fild   WORD PTR [ecx-0x7e25839c]
  403a26:	in     eax,dx
  403a27:	nop
  403a28:	jb     0x403a1b
  403a2a:	inc    ebp
  403a2b:	scas   eax,DWORD PTR es:[edi]
  403a2c:	pushf  
  403a2d:	add    ah,ch
  403a2f:	mov    dl,0xb3
  403a31:	fnstenv [edi]
  403a33:	mov    eax,ds:0x516aea71
  403a38:	pop    esp
  403a39:	xchg   DWORD PTR [edx-0x1d],edi
  403a3c:	fisubr DWORD PTR [edi-0x9986f49]
  403a42:	(bad)  
  403a43:	xor    eax,0x738bd08b
  403a48:	or     bh,BYTE PTR [edi+esi*2+0x5c]
  403a4c:	dec    bx
  403a4e:	xchg   edx,eax
  403a4f:	ds xchg cx,ax
  403a53:	sbb    eax,0xa6135216
  403a58:	push   es
  403a59:	cwde   
  403a5a:	inc    esi
  403a5b:	pop    ecx
  403a5c:	sub    dh,BYTE PTR [esi]
  403a5e:	nop
  403a5f:	mov    ss,WORD PTR [esi-0x6c59d6dc]
  403a65:	jmp    0x3b87:0x229b1b17
  403a6c:	push   edx
  403a6d:	jbe    0x403aa5
  403a6f:	or     cl,BYTE PTR [ecx+0x34d73543]
  403a75:	inc    eax
  403a76:	rol    BYTE PTR [edi+ebx*8],1
  403a79:	arpl   WORD PTR [esp+eiz*8+0x5065a0bb],cx
  403a80:	adc    BYTE PTR [ebx+0x25],bh
  403a83:	jb     0x403a3c
  403a85:	push   esi
  403a86:	mov    ecx,0x70ea5149
  403a8b:	and    al,BYTE PTR [edx+0x89a96e6]
  403a91:	stc    
  403a92:	sti    
  403a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a94:	pop    es
  403a95:	mov    ds:0xb80dab1d,al
  403a9a:	mov    es,WORD PTR [edx+0x3c4561ff]
  403aa0:	adc    edi,DWORD PTR [eax-0x69]
  403aa3:	(bad)  
  403aa4:	out    dx,al
  403aa5:	inc    eax
  403aa6:	pop    ecx
  403aa7:	outs   dx,DWORD PTR ds:[esi]
  403aa8:	mov    ch,bh
  403aaa:	(bad)  
  403aac:	fwait
  403aad:	sbb    bl,BYTE PTR [eax+0xb1b73f7]
  403ab3:	loopne 0x403a65
  403ab5:	je     0x403aa6
  403ab7:	jne    0x403b1f
  403ab9:	cli    
  403aba:	test   al,0xce
  403abc:	inc    ecx
  403abd:	ds add eax,0xc3e0a452
  403ac3:	out    dx,eax
  403ac4:	ins    DWORD PTR es:[edi],dx
  403ac5:	or     eax,0xa8baeff6
  403aca:	inc    edi
  403acb:	mov    edx,0xa5a7072c
  403ad0:	mov    dh,0x75
  403ad2:	ret    
  403ad3:	mov    ebx,0xaa56d70
  403ad8:	jno    0x403af9
  403ada:	repz jne 0x403a86
  403add:	cmc    
  403ade:	push   ds
  403adf:	fcom   QWORD PTR [eax]
  403ae1:	cmp    BYTE PTR [edx-0x21416e50],bh
  403ae7:	adc    cl,ch
  403ae9:	adc    ecx,DWORD PTR [edx+0x60]
  403aec:	int    0xb6
  403aee:	(bad)  
  403aef:	mov    eax,ds:0x781a5fe
  403af4:	cld    
  403af5:	inc    bx
  403af7:	ret    
  403af8:	fcomi  st,st(4)
  403afa:	jmp    0x403b34
  403afc:	daa    
  403afd:	xlat   BYTE PTR ds:[ebx]
  403afe:	xchg   ecx,eax
  403aff:	and    BYTE PTR [esi-0x3b8a19e1],0x7c
  403b06:	pushf  
  403b07:	call   0xbafe:0x8ec03667
  403b0e:	out    dx,eax
  403b0f:	dec    esi
  403b10:	sbb    DWORD PTR [edx+0x5],esp
  403b13:	pusha  
  403b14:	cmp    ebp,edi
  403b16:	inc    ebx
  403b17:	cmp    eax,0xe91ba6bd
  403b1c:	(bad)  
  403b1d:	xchg   BYTE PTR [edi+0x53],cl
  403b20:	sub    eax,0x82255c0
  403b25:	int    0x7c
  403b27:	xchg   esp,eax
  403b28:	jbe    0x403b6e
  403b2a:	mov    al,0xc6
  403b2d:	xor    bl,BYTE PTR [ecx]
  403b2f:	inc    esi
  403b30:	adc    al,0x46
  403b32:	sahf   
  403b33:	fld    DWORD PTR [edi+0xe]
  403b36:	lea    esp,[ecx]
  403b38:	sbb    bl,BYTE PTR [esi+0x7a]
  403b3b:	adc    DWORD PTR [esi],eax
  403b3d:	mov    eax,0x8beb2aca
  403b42:	pop    ecx
  403b43:	adc    eax,0x98eb3eaa
  403b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b49:	xlat   BYTE PTR ds:[ebx]
  403b4a:	xor    ebx,DWORD PTR [esi+0x591b9912]
  403b50:	daa    
  403b51:	cmp    eax,0xc1a62582
  403b56:	lds    esp,FWORD PTR [bp+di-0x6e]
  403b5a:	jmp    0xa6f2:0x44e70efd
  403b61:	imul   edi,DWORD PTR [esi-0x1d65d948],0xb5a3fb25
  403b6b:	(bad)  
  403b6c:	pop    edx
  403b6d:	jle    0x403b93
  403b6f:	pop    ebp
  403b70:	xor    bh,BYTE PTR [edi-0x7]
  403b73:	arpl   cx,cx
  403b75:	sbb    ecx,ebx
  403b77:	push   ds
  403b78:	xchg   ebx,eax
  403b79:	cli    
  403b7a:	idiv   BYTE PTR [edx+ecx*2+0x783a3ce1]
  403b81:	cs adc eax,0x219ed11
  403b87:	xchg   esp,eax
  403b88:	pop    es
  403b89:	cmp    eax,0x1121e4a7
  403b8e:	adc    BYTE PTR [ebx-0x76],al
  403b91:	jnp    0x403bbc
  403b93:	mov    esi,0x459d6ee6
  403b98:	test   BYTE PTR [edx-0x5b],ch
  403b9b:	xchg   ebx,eax
  403b9c:	adc    bh,BYTE PTR [esi+0x51]
  403b9f:	lods   al,BYTE PTR ds:[esi]
  403ba0:	enter  0x7bfb,0x21
  403ba4:	mov    al,0x9e
  403ba6:	ret    0xc21d
  403ba9:	iret   
  403baa:	(bad)
  403bad:	cli    
  403bae:	mov    ebp,?
  403bb0:	loope  0x403ba5
  403bb2:	mov    DWORD PTR [eax],esi
  403bb4:	adc    DWORD PTR [edi-0x6fa208eb],eax
  403bba:	pushf  
  403bbb:	jle    0x403be9
  403bbd:	ss aam 0xf0
  403bc0:	dec    edi
  403bc1:	lods   al,BYTE PTR ds:[esi]
  403bc2:	mov    al,0x75
  403bc4:	xlat   BYTE PTR ds:[ebx]
  403bc5:	or     BYTE PTR [ecx+ebx*1-0x7f],0xf4
  403bca:	repnz mov ebx,0x6543713d
  403bd0:	xchg   ebp,eax
  403bd1:	pop    eax
  403bd2:	mov    al,ds:0xa11236ac
  403bd7:	mov    ebp,ds
  403bd9:	test   DWORD PTR [edx+ebx*2],esp
  403bdc:	adc    ch,BYTE PTR [ebx+0x26]
  403bdf:	jecxz  0x403c4c
  403be1:	sbb    BYTE PTR [esi-0x7a6ae70f],ah
  403be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403be8:	push   0xffffff80
  403bea:	xchg   edx,eax
  403beb:	jo     0x403bab
  403bed:	jmp    0x403bed
  403bef:	cmp    dh,dl
  403bf1:	adc    dl,BYTE PTR [eax+0x56]
  403bf4:	cli    
  403bf5:	ins    BYTE PTR es:[edi],dx
  403bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bf7:	and    cl,ch
  403bf9:	rcr    edi,1
  403bfb:	(bad)  
  403bfc:	xchg   DWORD PTR [eax-0x4f],edi
  403bff:	(bad)  
  403c00:	fwait
  403c01:	adc    al,0xf9
  403c03:	call   0x3644df5b
  403c08:	loope  0x403bf6
  403c0a:	mov    al,0x1e
  403c0c:	xor    BYTE PTR [esi],ch
  403c0e:	leave  
  403c0f:	pusha  
  403c10:	or     ebx,DWORD PTR [edx+edx*2-0x568b1be1]
  403c17:	mov    ch,0xe9
  403c19:	scas   eax,DWORD PTR es:[edi]
  403c1a:	mov    cl,0xc7
  403c1c:	inc    ebp
  403c1d:	mov    esp,0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0xcddd8915
  403dc4:	pop    esp
  403dc5:	push   esp
  403dc6:	dec    edi
  403dc7:	dec    ebx
  403dc8:	pop    esi
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0x3a
  403dd0:	pop    esp
  403dd1:	xchg   DWORD PTR [ecx+ecx*8],esp
  403dd4:	mov    WORD PTR [ebx+0x24],ds
  403dd7:	nop
  403dd8:	inc    eax
  403dd9:	xlat   BYTE PTR ds:[ebx]
  403dda:	test   eax,0x6d0b6bda
  403ddf:	sbb    esp,DWORD PTR [esp+edi*1]
  403de2:	pop    ecx
  403de3:	stos   BYTE PTR es:[edi],al
  403de4:	push   es
  403de5:	cli    
  403de6:	in     eax,dx
  403de7:	sbb    DWORD PTR [ebp*4+0x38c7fb3],esp
  403dee:	and    ebp,esp
  403df0:	jns    0x403dad
  403df2:	loope  0x403dd0
  403df4:	pop    esi
  403df5:	fidivr WORD PTR [edx+0x61]
  403df8:	mov    eax,0xb4638d9d
  403dfd:	scas   al,BYTE PTR es:[edi]
  403dfe:	gs push edx
  403e00:	or     esp,DWORD PTR [edx]
  403e02:	and    BYTE PTR [edx-0x55],al
  403e05:	jle    0x403e13
  403e07:	stc    
  403e08:	or     al,0x49
  403e0a:	(bad)
  403e0d:	or     eax,0x415fe85d
  403e12:	mov    ds:0xf3b8bdc9,eax
  403e17:	shr    BYTE PTR [edx],cl
  403e19:	pop    ds
  403e1a:	ja     0x403e66
  403e1c:	mov    ah,0x6
  403e1e:	jnp    0x403e32
  403e20:	inc    eax
  403e21:	das    
  403e22:	push   0x3f49950b
  403e27:	jge    0x403dd5
  403e29:	imul   edi,DWORD PTR [edx-0xa],0x84882f70
  403e30:	sbb    bh,BYTE PTR [eax-0x52d93473]
  403e36:	mov    esp,DWORD PTR [ecx]
  403e38:	stos   DWORD PTR es:[edi],eax
  403e39:	in     al,dx
  403e3a:	loopne 0x403e7e
  403e3c:	mov    ebp,0xe8d612fd
  403e41:	or     al,0xc5
  403e43:	dec    esi
  403e44:	fdivr  DWORD PTR [eax+0x5a690328]
  403e4a:	mov    ebx,0x861393fb
  403e4f:	jmp    0x51627bb9
  403e54:	cmc    
  403e55:	inc    ebx
  403e56:	mov    bl,0xcc
  403e58:	lods   eax,DWORD PTR ds:[esi]
  403e59:	stos   DWORD PTR es:[edi],eax
  403e5a:	es jl  0x403def
  403e5d:	adc    eax,0x7eceded9
  403e62:	jg     0x403e8f
  403e64:	jg     0x403eda
  403e66:	sub    DWORD PTR [eax],ecx
  403e68:	cld    
  403e69:	popa   
  403e6a:	sahf   
  403e6b:	mov    ah,BYTE PTR [edx]
  403e6d:	sbb    DWORD PTR [ecx],esi
  403e6f:	lock test DWORD PTR [bp+di+0x75c0],ebx
  403e75:	rol    DWORD PTR [esp+esi*2],0xf7
  403e79:	cmp    BYTE PTR [eax+0x11],bh
  403e7c:	loopne 0x403e5f
  403e7e:	lahf   
  403e7f:	ss inc edx
  403e81:	call   0x5779:0x14dd3296
  403e88:	lock stos BYTE PTR es:[edi],al
  403e8a:	jecxz  0x403ed1
  403e8c:	mov    ch,0xa0
  403e8e:	xchg   eax,ebp
  403e90:	aam    0xbd
  403e92:	in     al,0x6b
  403e94:	inc    edi
  403e95:	gs jg  0x403e81
  403e98:	nop
  403e99:	pop    ebp
  403e9a:	mov    edi,eax
  403e9c:	cmp    ecx,DWORD PTR [ecx]
  403e9e:	outs   dx,BYTE PTR ds:[esi]
  403e9f:	enter  0x2330,0xc9
  403ea3:	out    dx,al
  403ea4:	fcomp  QWORD PTR [ecx+0x70]
  403ea7:	sar    DWORD PTR [edi],1
  403ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eaa:	retf   
  403eab:	sbb    BYTE PTR [ebx+eax*2-0x24d3e325],ch
  403eb2:	in     al,0x26
  403eb4:	cli    
  403eb5:	frstor [eax]
  403eb7:	cs ret 0x43e4
  403ebb:	jno    0x403ee5
  403ebd:	mov    ah,0x6f
  403ebf:	cld    
  403ec0:	and    eax,0xf636feba
  403ec5:	inc    ebp
  403ec6:	xor    BYTE PTR [esi+0x2e6fec36],bh
  403ecc:	inc    ebp
  403ecd:	mov    ds:0xa1a6c553,eax
  403ed2:	and    al,0x33
  403ed4:	sbb    al,0xf0
  403ed6:	dec    edx
  403ed7:	push   ebx
  403ed8:	bound  ebp,QWORD PTR [ebp+0x67]
  403edb:	and    BYTE PTR [edi],ah
  403edd:	sub    eax,0xc88cfe6d
  403ee2:	lods   eax,DWORD PTR ds:[esi]
  403ee3:	jmp    0x403eed
  403ee5:	mov    dl,0x4d
  403ee7:	test   DWORD PTR [esi],ebx
  403ee9:	inc    ecx
  403eea:	jnp    0x403f59
  403eec:	sub    eax,0xbaf38c93
  403ef1:	xor    DWORD PTR [edi+ebx*4-0x7b763ea6],ebx
  403ef8:	jns    0x403ee5
  403efa:	push   cs
  403efb:	ret    
  403efc:	fwait
  403efd:	div    BYTE PTR [ecx+0x26f06984]
  403f03:	call   0x94d2:0xc6bac04d
  403f0a:	repz clc 
  403f0c:	mov    ch,0xb0
  403f0e:	fsub   QWORD PTR [ecx-0x3a]
  403f11:	lahf   
  403f12:	push   ecx
  403f13:	push   edx
  403f14:	xchg   ebx,eax
  403f15:	out    0x2c,eax
  403f17:	adc    DWORD PTR [ebp+0x75],ecx
  403f1a:	ins    DWORD PTR es:[edi],dx
  403f1b:	xor    al,0x35
  403f1d:	rcl    DWORD PTR [edx-0x22be491a],cl
  403f23:	je     0x403f84
  403f25:	xor    cl,dl
  403f27:	jl     0x403ec3
  403f29:	adc    bh,al
  403f2b:	push   edx
  403f2c:	pop    ecx
  403f2d:	in     eax,dx
  403f2e:	jg     0x403f92
  403f30:	lods   eax,DWORD PTR ds:[esi]
  403f31:	mov    dh,cl
  403f33:	imul   ebx,DWORD PTR [esi-0x7a],0x8f9ec4be
  403f3a:	and    eax,0xe444b671
  403f3f:	fsub   QWORD PTR [edi+0x7b]
  403f42:	iret   
  403f43:	dec    edi
  403f44:	iret   
  403f45:	adc    DWORD PTR [edi+0xf7f4ee8],0x71
  403f4c:	std    
  403f4d:	add    BYTE PTR [ebx-0x46],dl
  403f50:	add    eax,0x1847e131
  403f55:	call   0xcb7d:0x2070f098
  403f5c:	sbb    DWORD PTR [eax+0x32],eax
  403f5f:	sub    cl,BYTE PTR [esi+0x49]
  403f62:	or     dl,BYTE PTR [ebx+0x2f]
  403f65:	shr    DWORD PTR [ecx-0x4ddc8d68],1
  403f6b:	sub    eax,0x77456b9e
  403f70:	addr16 jmp 0x5df0:0xcf1b
  403f77:	enterw 0x4c9f,0x91
  403f7c:	push   cs
  403f7d:	daa    
  403f7e:	ror    BYTE PTR [eax],cl
  403f80:	cmp    al,0x1a
  403f82:	push   ebx
  403f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f84:	jp     0x403fb2
  403f86:	inc    eax
  403f87:	mov    edi,0xee9c161d
  403f8c:	ins    DWORD PTR es:[edi],dx
  403f8d:	jecxz  0x403f2f
  403f8f:	sub    al,0x69
  403f91:	in     eax,0x74
  403f93:	and    dh,dl
  403f95:	es cld 
  403f97:	cmp    al,0xb
  403f99:	fsub   DWORD PTR [ecx]
  403f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f9c:	mov    esp,0x55e0e69d
  403fa1:	xchg   ebp,eax
  403fa2:	sub    ebp,DWORD PTR [esi]
  403fa4:	sbb    BYTE PTR [eax+eax*8-0x12768e42],0xe1
  403fac:	(bad)  
  403fad:	je     0x403fab
  403faf:	cwde   
  403fb0:	adc    eax,0xc3db0068
  403fb5:	stos   DWORD PTR es:[edi],eax
  403fb6:	push   edi
  403fb7:	jg     0x403fb7
  403fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fba:	mov    al,0x45
  403fbc:	adc    DWORD PTR [edi-0x5b],ecx
  403fbf:	cmp    eax,0x4964d8f
  403fc4:	outs   dx,DWORD PTR ds:[esi]
  403fc5:	pop    edi
  403fc6:	jnp    0x403f58
  403fc8:	ss daa 
  403fca:	and    ebp,edi
  403fcc:	ds sbb dl,bh
  403fcf:	push   ss
  403fd0:	ds jl  0x404017
  403fd3:	sub    BYTE PTR [ebx-0x25],al
  403fd6:	pop    esi
  403fd7:	mov    dl,0x9d
  403fd9:	arpl   cx,bp
  403fdb:	enter  0x1a03,0xa6
  403fdf:	or     ebp,esp
  403fe1:	dec    ebp
  403fe2:	xchg   DWORD PTR [si+0x1821],ecx
  403fe7:	cmp    esi,esi
  403fe9:	out    0x8f,eax
  403feb:	xchg   ebp,eax
  403fec:	aam    0x1a
  403fee:	xchg   ebp,eax
  403fef:	jo     0x403fdd
  403ff1:	ror    BYTE PTR [edx],0xe4
  403ff4:	in     eax,dx
  403ff5:	inc    ebp
  403ff6:	cmp    dh,al
  403ff8:	(bad)  
  403ffa:	xor    al,bh
  403ffc:	or     BYTE PTR [eax+0x68],dl
  403fff:	push   edi
  404000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404001:	outs   dx,BYTE PTR ds:[esi]
  404002:	xchg   esi,eax
  404003:	stos   BYTE PTR es:[edi],al
  404004:	cdq    
  404005:	test   al,0xf0
  404007:	jae    0x403f89
  404009:	loope  0x404035
  40400b:	bound  ebx,QWORD PTR [esi-0x7ac0956e]
  404011:	mov    eax,0x8eb90bd5
  404016:	popa   
  404017:	or     edx,esi
  404019:	lds    esi,FWORD PTR [esi-0x741294b2]
  40401f:	dec    ebp
  404020:	jbe    0x40409a
  404022:	adc    eax,0xc9fe9285
  404027:	scas   al,BYTE PTR es:[edi]
  404028:	scas   al,BYTE PTR es:[edi]
  404029:	call   0x71268fee
  40402e:	dec    ecx
  40402f:	repnz imul ebp,DWORD PTR [edi],0x4
  404033:	mov    ds:0x3e54801c,eax
  404038:	mov    bh,0x3
  40403a:	jl     0x403fca
  40403c:	jecxz  0x404042
  40403e:	imul   edx,DWORD PTR [ebx-0x340c56ae],0xced49939
  404048:	leave  
  404049:	jecxz  0x40406a
  40404b:	xchg   edx,eax
  40404c:	mov    ss,WORD PTR [ebx]
  40404e:	jge    0x404071
  404050:	xor    bl,BYTE PTR [ecx+0x3ac59a83]
  404056:	pop    esp
  404057:	fidivr WORD PTR [ecx]
  404059:	push   esp
  40405a:	ret    
  40405b:	ficomp DWORD PTR [eax+0x58317b6f]
  404061:	es (bad) 
  404063:	out    dx,al
  404064:	in     al,dx
  404065:	popa   
  404066:	mov    esp,0xb4bb2e05
  40406b:	(bad)  
  40406c:	arpl   WORD PTR ds:0xd23fba28,di
  404072:	mul    BYTE PTR [edx]
  404074:	mov    edx,0xf1f9a3b9
  404079:	push   0xfffffff9
  40407b:	ds push ds
  40407d:	into   
  40407e:	mov    al,ds:0x77323252
  404083:	adc    DWORD PTR [edx],ecx
  404085:	xor    eax,0x7b0dd28f
  40408a:	test   eax,0x98583ae4
  40408f:	leave  
  404090:	xchg   BYTE PTR [eax-0x14],dh
  404093:	jns    0x4040c2
  404095:	sbb    DWORD PTR [eax],edi
  404097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404098:	adc    edx,DWORD PTR [ebp+0x3c1976a5]
  40409e:	pop    ebp
  40409f:	ret    
  4040a0:	call   0x287b:0x407ad1fa
  4040a7:	in     eax,dx
  4040a8:	in     al,0x75
  4040aa:	retf   
  4040ab:	pop    ss
  4040ac:	pop    ebp
  4040ad:	push   ecx
  4040ae:	fptan  
  4040b0:	test   eax,0x829d3a5c
  4040b5:	jge    0x40407f
  4040b7:	out    0x6c,al
  4040b9:	repz retf 
  4040bb:	popf   
  4040bc:	stc    
  4040bd:	js     0x4040f8
  4040bf:	push   eax
  4040c0:	inc    ebx
  4040c1:	xor    DWORD PTR [esi],0xe195c8c3
  4040c7:	cmp    eax,0x3a42a914
  4040cc:	fimul  WORD PTR [ebp-0x30]
  4040cf:	repz sub al,0x7c
  4040d2:	call   0xb477593a
  4040d7:	or     eax,0xeb61b7bd
  4040dc:	(bad)  
  4040dd:	fincstp 
  4040df:	xchg   esp,eax
  4040e0:	test   BYTE PTR [edx],dl
  4040e2:	mov    eax,0x1cd1a07e
  4040e7:	in     eax,0x22
  4040e9:	(bad)  [esi]
  4040eb:	and    BYTE PTR [edx+eax*4],0xfe
  4040ef:	jae    0x404121
  4040f1:	ss dec ecx
  4040f3:	fisubr DWORD PTR [ebx+eax*4-0x3b7f981c]
  4040fa:	xchg   ebp,eax
  4040fb:	aas    
  4040fc:	icebp  
  4040fd:	ss dec eax
  4040ff:	adc    DWORD PTR [edx-0xef342a5],edx
  404105:	xchg   esp,eax
  404106:	dec    eax
  404107:	sar    DWORD PTR [eax+eax*2],0xda
  40410b:	lods   eax,DWORD PTR ds:[esi]
  40410c:	mov    ebx,0xb7270e37
  404111:	or     eax,0x73eac891
  404116:	or     eax,0xf17ccdbc
  40411b:	add    eax,0xa28fbbe4
  404120:	jmp    0xd94a:0x76fcf7ee
  404127:	pop    esi
  404128:	(bad)  
  404129:	out    dx,eax
  40412a:	jecxz  0x4040b3
  40412c:	push   edx
  40412d:	mov    ds:0x5d3eedc1,al
  404132:	cwde   
  404133:	ror    DWORD PTR [ebp+ebp*4+0x67],1
  404137:	pop    es
  404138:	bound  ebp,QWORD PTR [eax+0xc]
  40413b:	push   esi
  40413c:	popa   
  40413d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40413e:	and    dl,bl
  404140:	adc    BYTE PTR [ebp+0xd5c2b20],ah
  404146:	sar    DWORD PTR [ecx+0x6e],1
  404149:	mov    dl,0x46
  40414b:	rcl    dl,cl
  40414d:	cmp    ch,cl
  40414f:	dec    ecx
  404150:	add    dh,cl
  404152:	dec    eax
  404153:	popf   
  404154:	sbb    ecx,DWORD PTR [edx-0x8dda1d1]
  40415a:	sub    edx,DWORD PTR [edx+0x3c]
  40415d:	shr    BYTE PTR ds:0x7ef47d60,0xef
  404164:	dec    edx
  404165:	push   ebp
  404166:	jp     0x40417a
  404168:	inc    esi
  404169:	mov    bh,0x8a
  40416b:	mov    ah,0x80
  40416d:	out    0x24,eax
  40416f:	sbb    al,0x38
  404171:	cmc    
  404172:	repnz push cs
  404174:	jecxz  0x404177
  404176:	inc    esp
  404177:	mov    BYTE PTR [ebx],ah
  404179:	dec    eax
  40417a:	dec    edi
  40417b:	sbb    al,0xdd
  40417d:	cmp    BYTE PTR [esi],0x6d
  404180:	icebp  
  404181:	inc    esp
  404182:	cmp    ah,BYTE PTR cs:[edx-0x64]
  404186:	push   0x8fa2eb2a
  40418b:	or     eax,0xbb0dcb58
  404190:	pop    esi
  404191:	loopne 0x4041b1
  404193:	and    DWORD PTR [edi+0x2],ebp
  404196:	mov    bh,0x7d
  404198:	jle    0x4041b5
  40419a:	mov    ecx,DWORD PTR [ebp+0x2e]
  40419d:	xor    DWORD PTR [edx+ecx*2+0x42],edi
  4041a1:	pop    es
  4041a2:	sub    bl,BYTE PTR [edi+0x270469fe]
  4041a8:	fiadd  WORD PTR [esi+0x26]
  4041ab:	push   ebx
  4041ac:	jo     0x404179
  4041ae:	sub    BYTE PTR [edi-0x7],bl
  4041b1:	push   edi
  4041b2:	data16 je 0x404177
  4041b5:	sub    al,0xc0
  4041b7:	mov    dh,0x98
  4041b9:	lds    eax,FWORD PTR [eax+edx*4+0x62]
  4041bd:	pop    edx
  4041be:	sahf   
  4041bf:	cmp    DWORD PTR [esi-0xf],edx
  4041c2:	ja     0x404146
  4041c4:	push   cs
  4041c5:	dec    ch
  4041c7:	cmp    bh,BYTE PTR [esi+eiz*2]
  4041ca:	xchg   bl,ch
  4041cc:	mov    edi,0x44a62eaf
  4041d1:	jg     0x4041d6
  4041d3:	scas   al,BYTE PTR es:[edi]
  4041d4:	push   esp
  4041d5:	fs dec esi
  4041d7:	(bad)  
  4041d8:	in     eax,dx
  4041d9:	cmp    bl,BYTE PTR ds:0x6a696259
  4041df:	dec    esp
  4041e0:	bound  ebp,QWORD PTR [esi+0x67]
  4041e3:	cmp    ah,BYTE PTR ds:0x5da9dc1a
  4041e9:	je     0x404243
  4041eb:	js     0x404242
  4041ed:	push   ecx
  4041ee:	idiv   DWORD PTR [ecx-0x33]
  4041f1:	cmc    
  4041f2:	icebp  
  4041f3:	mov    eax,0x385db926
  4041f8:	daa    
  4041f9:	pop    eax
  4041fa:	dec    edx
  4041fb:	jb     0x404193
  4041fd:	push   0x19
  4041ff:	lds    eax,FWORD PTR [edx]
  404201:	ins    BYTE PTR es:[edi],dx
  404202:	xlat   BYTE PTR ds:[ebx]
  404203:	out    0x77,al
  404205:	test   BYTE PTR [ecx-0xee0770a],0xa
  40420c:	(bad)  
  40420d:	aas    
  40420e:	sbb    ebx,DWORD PTR [ebx-0x42]
  404211:	jp     0x404209
  404213:	loope  0x404227
  404215:	add    edi,DWORD PTR [eax+0x26]
  404218:	or     eax,0x7f3c5c28
  40421d:	(bad)  
  40421e:	test   al,0x7
  404220:	dec    edi
  404221:	pop    ds
  404222:	enter  0x4140,0x45
  404226:	sub    BYTE PTR [ebx],0x2e
  404229:	dec    edi
  40422a:	or     al,0x46
  40422c:	clc    
  40422d:	imul   ebx,esi,0x4b9838d5
  404233:	(bad)
  404236:	cmp    BYTE PTR [ecx+0x6c],al
  404239:	add    eax,0x950d3a0a
  40423e:	adc    esp,ebp
  404240:	mov    ebp,0x11bbc44a
  404245:	ins    BYTE PTR es:[edi],dx
  404246:	mov    bl,0xd5
  404248:	mov    dl,BYTE PTR [ebp-0x4a]
  40424b:	cmp    BYTE PTR [ecx+0x6558415f],al
  404251:	cmp    bl,bh
  404253:	adc    BYTE PTR [edi],bl
  404255:	xor    eax,DWORD PTR [edx+0x72]
  404258:	dec    edi
  404259:	xchg   ecx,eax
  40425a:	mov    ebx,DWORD PTR [ecx+0x31]
  40425d:	and    ebx,DWORD PTR [eax+0x5e418346]
  404263:	adc    BYTE PTR [ebx],dh
  404265:	fdivr  QWORD PTR [edx-0x2a35bf35]
  40426b:	sub    al,0x2
  40426d:	out    dx,al
  40426e:	inc    edx
  40426f:	rcl    DWORD PTR [ebp+0x2f33fbf9],cl
  404275:	mov    esp,DWORD PTR [ebx]
  404277:	(bad)  
  404278:	test   eax,0x74fe0d47
  40427d:	dec    esi
  40427e:	push   es
  40427f:	sbb    esi,DWORD PTR [eax]
  404281:	mov    cl,0xd5
  404283:	mov    dh,0xa9
  404285:	adc    BYTE PTR [edx+0x5ea81342],ch
  40428b:	mov    esp,DWORD PTR ds:0x7b703c56
  404291:	pop    ds
  404292:	mov    WORD PTR [ebp-0x76],?
  404295:	jl     0x404306
  404297:	push   es
  404298:	test   DWORD PTR [ebp-0x9],edi
  40429b:	dec    ebp
  40429c:	jo     0x404275
  40429e:	xchg   DWORD PTR [esi],ebp
  4042a0:	dec    BYTE PTR [edx]
  4042a2:	xchg   ebx,eax
  4042a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042a4:	arpl   WORD PTR [edi-0x3de15a07],bx
  4042aa:	add    esi,DWORD PTR [esi+0x21]
  4042ad:	push   ebx
  4042ae:	test   BYTE PTR [ecx+eiz*4-0x13210999],ch
  4042b5:	xor    al,0x48
  4042b7:	push   ebp
  4042b8:	icebp  
  4042b9:	(bad)  
  4042ba:	(bad)  
  4042bb:	mov    eax,0x8b8c4540
  4042c0:	in     al,dx
  4042c1:	sbb    eax,0xd6ed3211
  4042c6:	push   ecx
  4042c7:	mov    ebx,0x50932e2d
  4042cc:	sti    
  4042cd:	sti    
  4042ce:	mov    WORD PTR [edx+0x31fdd4c3],ss
  4042d4:	or     ah,BYTE PTR [edx-0x1c]
  4042d7:	(bad)  
  4042d8:	jp     0x404261
  4042da:	adc    cl,BYTE PTR [ebx+0x52b4e92f]
  4042e0:	inc    edi
  4042e1:	mov    esp,0xec4b2e4e
  4042e6:	mov    ds:0xdd1cc523,al
  4042eb:	cmc    
  4042ec:	inc    esp
  4042ed:	jg     0x4042af
  4042ef:	mov    al,ds:0x2fcd80d1
  4042f4:	lods   eax,DWORD PTR ds:[esi]
  4042f5:	sbb    eax,0xc894d3ec
  4042fa:	out    dx,al
  4042fb:	shl    DWORD PTR [esi],1
  4042fd:	xchg   ecx,eax
  4042fe:	test   BYTE PTR [esi],dh
  404300:	add    cl,BYTE PTR [esi-0x36]
  404303:	mov    cl,0x75
  404305:	jle    0x404332
  404307:	or     esi,edi
  404309:	stos   BYTE PTR es:[edi],al
  40430a:	fadd   QWORD PTR [ecx-0x7b]
  40430d:	sbb    al,BYTE PTR [edx]
  40430f:	in     eax,dx
  404310:	arpl   sp,di
  404312:	push   ebx
  404313:	xchg   edx,eax
  404314:	pop    ds
  404315:	fs xor eax,0x9babd9f0
  40431b:	sub    eax,0xdbdc2777
  404320:	add    dh,BYTE PTR [ecx+edx*8+0x1f]
  404324:	pop    ebx
  404325:	push   0xb30806cd
  40432a:	in     al,dx
  40432b:	(bad)  
  40432c:	push   ds
  40432d:	loope  0x40439f
  40432f:	(bad)  
  404330:	lock mov DWORD PTR [edi+0x53],edi
  404334:	jmp    0x7a3e:0xd305479d
  40433b:	dec    eax
  40433c:	push   esi
  40433d:	adc    al,0xa5
  40433f:	mov    eax,0xf5661adf
  404344:	or     al,0xbc
  404346:	pop    ecx
  404347:	loop   0x404345
  404349:	cwde   
  40434a:	mov    al,0xf0
  40434c:	mov    bh,0x8b
  40434e:	cwde   
  40434f:	sbb    DWORD PTR [esi+0x15],ebp
  404352:	neg    DWORD PTR [eax-0x24dbfdf4]
  404358:	cmp    al,0xf1
  40435a:	push   ebx
  40435b:	push   cs
  40435c:	loope  0x4043bd
  40435e:	xchg   ebx,eax
  40435f:	jg     0x404303
  404361:	fisub  DWORD PTR [esi]
  404363:	enter  0x1f0,0x1f
  404367:	xor    DWORD PTR [esi+0x2556e60c],ebx
  40436d:	nop
  40436e:	mov    esp,0x92c2e594
  404373:	je     0x404306
  404375:	repnz lods al,BYTE PTR ds:[esi]
  404377:	mov    bh,0x67
  404379:	inc    esp
  40437a:	sbb    DWORD PTR [edx+0x5],ecx
  40437d:	addr16 loopne 0x40436b
  404380:	adc    BYTE PTR [eax+ebp*4],0xba
  404384:	mov    bh,0x2a
  404386:	jmp    0xc18705fd
  40438b:	(bad)  [ecx+0x5f5b87e5]
  404391:	xchg   DWORD PTR [eax],esi
  404393:	in     eax,dx
  404394:	cli    
  404395:	push   edi
  404396:	cmp    eax,ebp
  404398:	sbb    DWORD PTR [edx-0x7b25a3d9],0xffffffc7
  40439f:	push   edi
  4043a0:	das    
  4043a1:	(bad)  
  4043a2:	jns    0x40439b
  4043a4:	sub    eax,0x8d96bd3f
  4043a9:	aam    0xed
  4043ab:	int    0x6e
  4043ad:	push   0x30
  4043af:	dec    esp
  4043b0:	xor    eax,0xd80cda0b
  4043b5:	and    al,0x61
  4043b7:	dec    esp
  4043b8:	push   esp
  4043b9:	test   al,0xcb
  4043bb:	jb     0x4043d2
  4043bd:	fadd   QWORD PTR [edx-0x4d]
  4043c0:	adc    dl,ch
  4043c2:	push   edx
  4043c3:	pop    edx
  4043c4:	inc    BYTE PTR [esi]
  4043c6:	(bad)  
  4043c7:	repnz aaa 
  4043c9:	inc    eax
  4043ca:	jae    0x404419
  4043cc:	shl    DWORD PTR [ebx-0x4492e234],0xc5
  4043d3:	ja     0x404422
  4043d5:	sbb    ch,dh
  4043d7:	push   esi
  4043d8:	in     al,dx
  4043d9:	mov    dl,0x44
  4043db:	jmp    0x1265fe6f
  4043e0:	push   edi
  4043e1:	sub    DWORD PTR [esi-0x69108c0e],edi
  4043e7:	sub    eax,DWORD PTR [esp+edx*2+0x76]
  4043eb:	out    0xb1,al
  4043ed:	mov    dl,al
  4043ef:	shl    BYTE PTR [ebx-0x2b502658],cl
  4043f5:	fst    QWORD PTR [ebx]
  4043f7:	push   edx
  4043f8:	jo     0x40437a
  4043fa:	inc    edi
  4043fb:	jge    0x4043c2
  4043fd:	leave  
  4043fe:	arpl   cx,ax
  404400:	hlt    
  404401:	fs mov ch,0x4d
  404404:	scas   eax,DWORD PTR es:[edi]
  404405:	jl     0x4043d0
  404407:	dec    BYTE PTR [edx-0x25]
  40440a:	jmp    0x4fce29a
  40440f:	pop    ebp
  404410:	test   eax,0xa97d1618
  404415:	arpl   WORD PTR [esi-0x7bee93d0],ax
  40441b:	mov    edx,eax
  40441d:	jne    0x40440f
  40441f:	setae  BYTE PTR [edi-0x5b]
  404423:	ret    0x571e
  404426:	(bad)  
  404428:	sub    al,0x8d
  40442a:	push   ebp
  40442b:	xchg   ecx,eax
  40442c:	inc    esp
  40442d:	xor    ecx,DWORD PTR [esi+0x7aed910e]
  404433:	nop
  404434:	ret    0x2073
  404437:	loopne 0x40440c
  404439:	cmp    BYTE PTR [ebp-0x38b3fcd9],al
  40443f:	adc    ch,bh
  404441:	cmp    ah,bh
  404443:	mov    edi,0xc15265f5
  404448:	xor    al,0x20
  40444a:	(bad)  
  40444c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40444d:	out    0x1,al
  40444f:	mov    bl,0xa8
  404451:	adc    al,0xb8
  404453:	pusha  
  404454:	in     eax,dx
  404455:	jecxz  0x40448f
  404457:	mov    ebp,gs
  404459:	pop    ecx
  40445a:	sbb    DWORD PTR [edi-0x5214879],ebx
  404460:	imul   eax,DWORD PTR [ecx+edi*2],0x77
  404464:	or     DWORD PTR [edx],edx
  404466:	inc    ebx
  404467:	jmp    0x6e2:0xc4bc7f88
  40446e:	test   al,0x90
  404470:	or     DWORD PTR [ecx],esi
  404472:	dec    ebx
  404473:	imul   ecx,DWORD PTR [edi-0xfe74aff],0x3e
  40447a:	add    BYTE PTR [eax-0x2cd37bff],bh
  404480:	ins    DWORD PTR es:[edi],dx
  404481:	dec    edi
  404482:	pusha  
  404483:	popf   
  404484:	mov    esp,0xc85aa172
  404489:	dec    ebp
  40448a:	icebp  
  40448b:	sub    BYTE PTR [edx],ah
  40448d:	push   eax
  40448e:	sub    eax,0x4d4cb25f
  404493:	adc    BYTE PTR [ebp+0x2],ah
  404496:	xchg   dl,bh
  404498:	and    al,0x96
  40449a:	xlat   BYTE PTR ds:[ebx]
  40449b:	ins    BYTE PTR es:[edi],dx
  40449c:	mov    al,0x9f
  40449e:	in     eax,dx
  40449f:	jbe    0x404445
  4044a1:	cmp    DWORD PTR [ebp-0x1e],edi
  4044a4:	pushf  
  4044a5:	cmp    edi,DWORD PTR [ecx+0x167b9af3]
  4044ab:	ins    BYTE PTR es:[edi],dx
  4044ac:	sub    al,BYTE PTR [ebp+0x4e7e352d]
  4044b2:	neg    dh
  4044b4:	dec    esi
  4044b5:	mov    dl,0xa5
  4044b7:	mov    ecx,0xba3a3c54
  4044bc:	ds push 0xffffffc1
  4044bf:	mov    cl,0xb6
  4044c1:	mov    dh,BYTE PTR [ebx]
  4044c3:	push   ss
  4044c4:	xchg   edi,eax
  4044c5:	scas   eax,DWORD PTR es:[edi]
  4044c6:	test   DWORD PTR [ecx-0x52a510a9],esi
  4044cc:	shl    esp,cl
  4044ce:	shr    ecx,1
  4044d0:	fs in  eax,dx
  4044d2:	loop   0x4044d9
  4044d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d5:	mul    dl
  4044d7:	sbb    ch,BYTE PTR [ebx]
  4044d9:	fsub   DWORD PTR [ecx-0x3f]
  4044dc:	inc    edx
  4044dd:	mov    bl,0x75
  4044df:	gs inc edi
  4044e1:	imul   edi,edi,0x17e2c1ee
  4044e7:	call   0xea44:0x180b3147
  4044ee:	push   ds
  4044ef:	in     al,dx
  4044f0:	xchg   edi,eax
  4044f1:	add    edi,DWORD PTR [edx-0x68]
  4044f4:	mov    al,ds:0xe6bebc48
  4044f9:	push   esi
  4044fa:	cmp    BYTE PTR [edi-0x65],cl
  4044fd:	sbb    esp,DWORD PTR [eax]
  4044ff:	aad    0xeb
  404501:	loop   0x40452a
  404503:	in     al,dx
  404504:	mov    esp,0x2569b8bb
  404509:	lods   al,BYTE PTR ds:[esi]
  40450a:	mov    DWORD PTR [esi-0x3a],0xe884fe7d
  404511:	inc    edi
  404512:	mov    ds:0x1d266786,eax
  404517:	cwde   
  404518:	sub    DWORD PTR [edi],0xae2a560a
  40451e:	mov    ds:0x7c6f45ab,al
  404523:	daa    
  404524:	dec    esi
  404525:	faddp  st(7),st
  404527:	and    DWORD PTR ds:0x5f508925,esi
  40452d:	loope  0x404552
  40452f:	xchg   ecx,eax
  404530:	cmp    al,bh
  404532:	xchg   BYTE PTR [ebx-0x5f],cl
  404535:	push   cs
  404536:	mov    al,0xe1
  404538:	push   ecx
  404539:	(bad)  
  40453a:	adc    ebp,eax
  40453c:	adc    al,0xf3
  40453e:	jecxz  0x40455b
  404540:	and    DWORD PTR [ecx+0x449985d2],edi
  404546:	scas   al,BYTE PTR es:[edi]
  404547:	fld    st(7)
  404549:	xchg   ebp,eax
  40454a:	(bad)  
  40454d:	sti    
  40454e:	jp     0x4044e3
  404550:	enter  0x6a1c,0xc2
  404554:	retf   0xf7b2
  404557:	mov    es,WORD PTR [ecx]
  404559:	and    ch,ah
  40455b:	popa   
  40455c:	(bad)  
  40455d:	xchg   ecx,eax
  40455e:	mov    bh,0x99
  404560:	ss push cs
  404562:	jecxz  0x4045a5
  404564:	pop    edx
  404565:	lahf   
  404566:	imul   eax,esi,0x27471639
  40456c:	stos   DWORD PTR es:[edi],eax
  40456d:	js     0x4045a8
  40456f:	push   esp
  404570:	and    eax,0xc530f74
  404575:	dec    esi
  404576:	cmp    al,0xbc
  404578:	cmp    eax,0x6eee091d
  40457d:	adc    bh,BYTE PTR [esi+0x641ceff9]
  404583:	call   0xaf34f64d
  404588:	push   ebx
  404589:	pop    edx
  40458a:	add    al,0x2e
  40458c:	test   al,0x1f
  40458e:	jo     0x40458d
  404590:	(bad)  
  404591:	(bad)  
  404592:	jo     0x4045df
  404594:	dec    ebp
  404595:	clc    
  404596:	inc    esi
  404597:	add    DWORD PTR [edi+0x21287746],0xb3acd7
  4045a1:	mov    ebx,0x5776be77
  4045a6:	(bad)  
  4045a7:	lock addr16 pop edi
  4045aa:	adc    ecx,DWORD PTR [ecx-0x2c]
  4045ad:	fucomp st(3)
  4045af:	cmp    al,0xb1
  4045b2:	pop    es
  4045b3:	out    dx,eax
  4045b4:	pop    ebp
  4045b5:	sub    ebx,DWORD PTR ds:0x69f10d89
  4045bb:	nop
  4045bc:	les    esi,FWORD PTR [edi+0x72b7df20]
  4045c2:	mov    ebp,0x2abfc8aa
  4045c7:	xchg   DWORD PTR [ecx+ebx*4],eax
  4045ca:	test   eax,0x1ba549e2
  4045cf:	mov    ebx,0xbdb2ff3
  4045d4:	mov    bh,0x96
  4045d6:	xor    eax,0x15822da6
  4045db:	push   ecx
  4045dc:	lea    dx,[ecx]
  4045df:	jp     0x404578
  4045e1:	or     eax,ebx
  4045e3:	aas    
  4045e4:	(bad)  
  4045e5:	adc    ah,BYTE PTR [ebx]
  4045e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045e8:	push   ss
  4045e9:	mov    edx,0x3e76ffbd
  4045ee:	cwde   
  4045ef:	(bad)  
  4045f0:	pop    esp
  4045f1:	inc    ecx
  4045f2:	sbb    eax,0xdf178648
  4045f8:	and    ebp,DWORD PTR [esp+edx*1+0x4a]
  4045fc:	retf   0x30b9
  4045ff:	bound  esi,QWORD PTR [ebx]
  404601:	xchg   DWORD PTR [ebx+0x2d21e093],ecx
  404607:	xor    dh,BYTE PTR [esi-0x18]
  40460a:	call   0x267e:0xbde66559
  404611:	add    dl,BYTE PTR [esp+eiz*2+0x18]
  404615:	mul    BYTE PTR [esi-0x2f086e01]
  40461b:	dec    ecx
  40461c:	jl     0x40468f
  40461e:	dec    eax
  40461f:	cli    
  404620:	pop    eax
  404621:	push   ds
  404622:	outs   dx,DWORD PTR ds:[esi]
  404623:	sub    DWORD PTR [esi],ecx
  404625:	leave  
  404626:	add    edx,DWORD PTR [ebp+0x65]
  404629:	jecxz  0x4045ca
  40462b:	push   ecx
  40462c:	or     DWORD PTR [ecx+0x29943689],edi
  404632:	adc    BYTE PTR [edx+0x7b610d8c],dh
  404638:	or     eax,0xc69624
  40463d:	rcl    BYTE PTR [edi-0x3b],0x2b
  404641:	loope  0x40463c
  404643:	xlat   BYTE PTR ds:[ebx]
  404644:	in     eax,0x58
  404646:	ret    
  404647:	fiadd  WORD PTR [edx-0x22]
  40464a:	enter  0xde47,0x6a
  40464e:	add    eax,0x998b51ea
  404653:	jae    0x404667
  404655:	mov    edi,DWORD PTR [edi+edx*4+0x420eb841]
  40465c:	sbb    DWORD PTR [esp+edx*8+0xa],esi
  404660:	iret   
  404661:	dec    eax
  404662:	xor    ebp,ecx
  404664:	jns    0x4046ad
  404666:	test   BYTE PTR [ecx-0x7fc907c8],bl
  40466c:	cli    
  40466d:	lods   al,BYTE PTR ds:[esi]
  40466e:	aas    
  40466f:	cld    
  404670:	dec    ebp
  404671:	fdiv   QWORD PTR [edx-0x1e94ee9b]
  404677:	pinsrw mm5,edx,0x33
  40467b:	inc    esi
  40467c:	pop    ecx
  40467d:	daa    
  40467e:	xchg   edi,eax
  40467f:	outs   dx,DWORD PTR ds:[esi]
  404680:	clc    
  404681:	sub    DWORD PTR [ecx],edx
  404683:	fsub   QWORD PTR [ebx-0x2d]
  404686:	pop    eax
  404687:	sub    al,0x8e
  404689:	inc    eax
  40468a:	in     al,0x6c
  40468c:	jl     0x40470a
  40468e:	xchg   BYTE PTR [ebx-0x50800073],bl
  404694:	and    ebx,ebp
  404696:	push   0x1f51a330
  40469b:	in     eax,dx
  40469c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40469d:	sub    al,0xaa
  40469f:	lods   al,BYTE PTR ds:[esi]
  4046a0:	arpl   WORD PTR [ebx-0x33e79b4],si
  4046a6:	mov    ch,0xd8
  4046a8:	xchg   DWORD PTR [eax+0x7a],edx
  4046ab:	fsubr  QWORD PTR [edx+ecx*4]
  4046ae:	data16 arpl bp,sp
  4046b1:	push   ebx
  4046b2:	test   eax,0x86d447a4
  4046b7:	jge    0x40469c
  4046b9:	lock inc ebp
  4046bb:	jecxz  0x404676
  4046bd:	fs int3 
  4046bf:	out    0xb4,eax
  4046c1:	sbb    ch,BYTE PTR [eax-0x276544ed]
  4046c7:	nop
  4046c8:	inc    esp
  4046c9:	inc    ebx
  4046ca:	inc    edi
  4046cb:	xchg   ebx,eax
  4046cc:	cmp    DWORD PTR ss:[eax],ebx
  4046cf:	out    dx,eax
  4046d0:	xchg   ebp,eax
  4046d1:	or     ebp,DWORD PTR [esi]
  4046d3:	dec    esi
  4046d4:	ss retf 0x91d8
  4046d8:	(bad)  
  4046d9:	cdq    
  4046da:	xor    dl,BYTE PTR [edx+ebp*4]
  4046dd:	adc    eax,0xd8ee0630
  4046e2:	ror    ch,0xdf
  4046e5:	(bad)  
  4046e6:	int    0x18
  4046e8:	lock cmp ah,bh
  4046eb:	push   ecx
  4046ec:	sub    eax,DWORD PTR [eax-0x7f]
  4046ef:	mov    dl,0xa8
  4046f1:	or     ch,bl
  4046f3:	xchg   ebx,eax
  4046f4:	push   0x45731972
  4046f9:	or     DWORD PTR [edx-0x207daa88],esp
  4046ff:	mov    DWORD PTR [ebx-0x60],eax
  404702:	or     BYTE PTR [esi],ch
  404704:	dec    ecx
  404705:	or     ecx,ebx
  404707:	cwde   
  404708:	arpl   WORD PTR ds:0xf8517be9,bx
  40470e:	scas   al,BYTE PTR es:[edi]
  40470f:	add    eax,0x5db4446a
  404714:	cmp    al,0xc2
  404716:	cmp    DWORD PTR [ebx],esi
  404718:	and    BYTE PTR [eax],ah
  40471a:	xchg   ebx,eax
  40471b:	loopne 0x4046e8
  40471d:	push   ebp
  40471e:	sbb    DWORD PTR [esi-0x1b],eax
  404721:	push   edx
  404722:	pusha  
  404723:	jecxz  0x4046c6
  404725:	idiv   edi
  404727:	(bad)  
  404729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40472a:	fild   QWORD PTR [ebp+0x1c9887ac]
  404730:	or     eax,0x1bcafc5c
  404735:	jg     0x4047b3
  404737:	xchg   esp,eax
  404738:	push   0xffffff98
  40473a:	add    DWORD PTR [ebx+eiz*4],ebx
  40473d:	cmp    edx,DWORD PTR [ebx]
  40473f:	pop    ebx
  404740:	or     BYTE PTR [esi],cl
  404742:	int    0x9f
  404744:	stos   DWORD PTR es:[edi],eax
  404745:	dec    edi
  404746:	std    
  404747:	mov    dl,0x0
  404749:	or     BYTE PTR [ebx+0x1456b5a6],0xe7
  404750:	scas   al,BYTE PTR es:[edi]
  404751:	pop    ds
  404752:	push   0xbbb13fd1
  404757:	jo     0x40473b
  404759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40475a:	xchg   edi,eax
  40475b:	or     eax,0x3a4003e2
  404760:	lods   eax,DWORD PTR ds:[esi]
  404761:	outs   dx,DWORD PTR ds:[esi]
  404762:	cwde   
  404763:	mov    eax,ds:0x7be7e368
  404768:	cmp    al,0x73
  40476a:	sahf   
  40476b:	adc    ch,BYTE PTR [ecx-0x61]
  40476e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40476f:	or     al,BYTE PTR [ebx-0x709fc757]
  404775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404776:	das    
  404777:	pop    ebp
  404778:	or     eax,0x2d824053
  40477d:	push   edx
  40477e:	mov    al,0x7f
  404780:	xor    ecx,ebx
  404782:	clc    
  404783:	(bad)  
  404784:	xor    esi,esi
  404786:	mov    BYTE PTR [ebx-0x19555f5c],dl
  40478c:	jno    0x40475f
  40478e:	push   ss
  40478f:	shl    edx,1
  404791:	rol    BYTE PTR [ebp-0x28],1
  404794:	mov    DWORD PTR [esi-0x7c],ebp
  404797:	sti    
  404798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404799:	xor    ch,BYTE PTR [ecx]
  40479b:	dec    ebp
  40479c:	pop    edi
  40479d:	imul   esi,DWORD PTR [eax+0x14fb2d45],0xffffffe3
  4047a4:	sub    eax,0x6bc70e58
  4047a9:	cli    
  4047aa:	xchg   ebp,eax
  4047ab:	ja     0x4047b1
  4047ad:	nop
  4047ae:	lods   al,BYTE PTR ds:[esi]
  4047af:	repnz out dx,al
  4047b1:	xchg   edi,eax
  4047b2:	popf   
  4047b3:	pop    ebp
  4047b4:	add    DWORD PTR [ebx+0x7e6685ef],ebx
  4047ba:	xlat   BYTE PTR ds:[ebx]
  4047bb:	out    dx,eax
  4047bc:	push   esi
  4047bd:	sar    DWORD PTR [edx-0x3ef3122f],1
  4047c3:	loopne 0x404816
  4047c5:	loopne 0x4047e8
  4047c7:	pusha  
  4047c8:	cmp    BYTE PTR ds:[edi-0x6fc3444a],cl
  4047cf:	jmp    0x4f735c93
  4047d4:	(bad)  
  4047d5:	mov    eax,0xa7680fe0
  4047da:	ss dec esp
  4047dc:	cs mov ebx,0xc18aed40
  4047e2:	sub    edx,DWORD PTR [ebx-0x33dd9677]
  4047e8:	cmp    DWORD PTR [edi-0x44],0xffffff98
  4047ec:	fs (bad) 
  4047ef:	pop    edi
  4047f0:	push   edi
  4047f1:	or     bh,dh
  4047f3:	xchg   ecx,eax
  4047f4:	cmp    edx,ebx
  4047f6:	js     0x404851
  4047f8:	pushf  
  4047f9:	dec    ebp
  4047fa:	repnz mov eax,0x86f6e97d
  404800:	mov    eax,DWORD PTR [edx-0x4cd07084]
  404806:	or     ch,BYTE PTR [edi]
  404808:	ja     0x404836
  40480a:	xor    ebp,DWORD PTR [edi+0x1c364b66]
  404810:	xor    DWORD PTR [ecx],edi
  404812:	aad    0xa7
  404814:	dec    edi
  404815:	imul   BYTE PTR [edi]
  404817:	and    BYTE PTR [ebx+0x4f],bl
  40481a:	rol    ah,cl
  40481c:	xchg   ebp,eax
  40481d:	test   DWORD PTR [ebx+0x5bd2d785],ebp
  404823:	push   ecx
  404824:	es adc esi,eax
  404827:	sbb    esi,eax
  404829:	leave  
  40482a:	mov    al,0xb
  40482c:	fstp   TBYTE PTR [esi]
  40482e:	sbb    esp,DWORD PTR [edx]
  404830:	sub    BYTE PTR [ebp*4-0x696e92ac],0xcd
  404838:	xor    DWORD PTR [esp+eax*1+0x53f17d9e],ebx
  40483f:	mov    ecx,eax
  404841:	(bad)  
  404842:	push   ebp
  404843:	sub    DWORD PTR [edx],ebp
  404845:	mov    ebp,0xd2c243f7
  40484a:	adc    al,0x13
  40484c:	mov    al,ds:0x60e34306
  404851:	test   al,0x54
  404853:	cwde   
  404854:	lds    ebp,FWORD PTR [ebx-0xd0bd434]
  40485a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40485b:	into   
  40485c:	mov    eax,ds:0x4c48093
  404861:	xchg   BYTE PTR [esi],ch
  404863:	into   
  404864:	(bad)  
  404865:	pusha  
  404866:	bound  ebp,QWORD PTR [ebp+0x35bff168]
  40486c:	cmp    DWORD PTR [eax],0xffffffa9
  40486f:	(bad)
  404872:	(bad)  
  404873:	into   
  404874:	sub    BYTE PTR [ecx+0x71],bh
  404877:	arpl   bx,bx
  404879:	or     al,ah
  40487b:	pop    ebx
  40487c:	sub    al,0xe1
  40487e:	(bad)  
  40487f:	loope  0x4048a7
  404881:	xor    esp,DWORD PTR [eax+0x76]
  404884:	iret   
  404885:	mov    ebp,0xff54244e
  40488a:	test   BYTE PTR [eax+0x69],bl
  40488d:	jg     0x404882
  40488f:	outs   dx,DWORD PTR ds:[esi]
  404890:	pop    esi
  404891:	loop   0x4048b8
  404893:	push   esp
  404894:	stc    
  404895:	std    
  404896:	mov    ecx,0x70cb59aa
  40489b:	gs xchg edx,eax
  40489d:	jno    0x4048aa
  40489f:	push   eax
  4048a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048a1:	mov    al,ds:0xd0793b73
  4048a6:	add    bh,bl
  4048a8:	mov    esi,DWORD PTR [ebx]
  4048aa:	xchg   DWORD PTR [edi-0x35ad8242],esi
  4048b0:	fmul   DWORD PTR [edx+0x4422fa5d]
  4048b6:	fistp  DWORD PTR [esi+0x1c76d8c4]
  4048bc:	pop    esp
  4048bd:	lods   eax,DWORD PTR ds:[esi]
  4048be:	scas   eax,DWORD PTR es:[edi]
  4048bf:	add    ecx,DWORD PTR [esi+eiz*8+0x5]
  4048c3:	push   eax
  4048c4:	ss js  0x404905
  4048c7:	push   ebx
  4048c8:	mov    gs,WORD PTR ds:0xda20715c
  4048ce:	adc    al,0x34
  4048d0:	mov    eax,0x1d4faa39
  4048d5:	mov    esi,0x9fa91ba1
  4048da:	cdq    
  4048db:	test   DWORD PTR [edx+esi*4],eax
  4048de:	fnstsw WORD PTR [esi-0x74]
  4048e1:	xor    al,0xc7
  4048e3:	in     al,dx
  4048e4:	lods   al,BYTE PTR ds:[esi]
  4048e5:	(bad)  
  4048e7:	inc    ebp
  4048e8:	inc    edi
  4048e9:	ror    BYTE PTR [ebp+eax*4+0x719da0e5],0x3b
  4048f1:	adc    dl,BYTE PTR [esi]
  4048f3:	sub    BYTE PTR [ebp-0x69eaf65],0x31
  4048fa:	or     al,0xa2
  4048fc:	cld    
  4048fd:	push   ebp
  4048fe:	mov    al,ds:0xa070b7c7
  404903:	loopne 0x404970
  404905:	in     eax,0xc9
  404907:	or     al,0xf2
  404909:	mov    al,0x2d
  40490b:	and    ebx,eax
  40490d:	(bad)
  404910:	fld    QWORD PTR [edi-0x7ac336a8]
  404916:	jmp    0x4048bb
  404918:	push   esp
  404919:	pop    ecx
  40491a:	ja     0x404955
  40491c:	dec    ecx
  40491d:	daa    
  40491e:	adc    DWORD PTR [ebx+0x2d80797],ebp
  404924:	mov    bh,0x85
  404926:	fisub  WORD PTR [edx-0x71c56bd7]
  40492c:	fxch   st(4)
  40492e:	aad    0x7b
  404930:	sahf   
  404931:	push   ds
  404932:	push   ecx
  404933:	inc    ebp
  404934:	lods   eax,DWORD PTR ds:[esi]
  404935:	pop    eax
  404936:	xor    ebx,ebp
  404938:	xchg   edi,eax
  404939:	xchg   ebp,eax
  40493a:	or     esi,eax
  40493c:	xchg   esp,eax
  40493d:	rcl    al,cl
  40493f:	retf   
  404940:	push   ebx
  404941:	jb     0x4049be
  404943:	rcr    BYTE PTR [eax-0x45],cl
  404946:	enter  0x3caf,0x77
  40494a:	mov    eax,ds:0xb0321fa6
  40494f:	test   al,0x7f
  404951:	xchg   ebx,eax
  404952:	popa   
  404953:	shl    DWORD PTR [ebx+0x4f],0x4d
  404957:	pop    eax
  404958:	pop    esi
  404959:	push   eax
  40495a:	mov    ah,0x1c
  40495c:	repnz cli 
  40495e:	in     eax,0x0
  404960:	or     bl,BYTE PTR [edx+0x2dce43bc]
  404966:	cld    
  404967:	xlat   BYTE PTR ds:[ebx]
  404968:	ret    0x4201
  40496b:	das    
  40496c:	inc    ebx
  40496d:	xchg   ecx,eax
  40496e:	jno    0x4049d9
  404970:	push   ebp
  404971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404972:	mov    ds:0xd1f75ad9,eax
  404977:	xor    ebx,DWORD PTR [edx+ebx*1+0x18b822fd]
  40497e:	repz xchg al,ch
  404981:	and    esp,edi
  404983:	les    edi,FWORD PTR [ecx+0x1b]
  404986:	imul   ebx,DWORD PTR [edx+ebp*4],0xa26f3b5c
  40498d:	dec    ebp
  40498e:	inc    esi
  40498f:	push   eax
  404990:	mov    WORD PTR [edi+ebp*4-0x120a3e99],ds
  404997:	les    esi,FWORD PTR [edi+0x5e]
  40499a:	jo     0x404a01
  40499c:	mov    al,ds:0x3b9024c8
  4049a1:	sti    
  4049a2:	into   
  4049a3:	out    0x6a,eax
  4049a5:	out    0xc5,al
  4049a7:	push   0x995a9374
  4049ac:	mov    al,0x31
  4049ae:	imul   edx,DWORD PTR [edx],0xffffffd9
  4049b1:	lock enter 0xe8d9,0xc6
  4049b6:	xchg   DWORD PTR [eax+0x463a2e59],edi
  4049bc:	scas   al,BYTE PTR es:[edi]
  4049bd:	pop    ecx
  4049be:	outs   dx,DWORD PTR ds:[esi]
  4049bf:	shl    bh,cl
  4049c1:	xor    al,0x2c
  4049c3:	dec    ebp
  4049c4:	dec    DWORD PTR [ebx]
  4049c6:	sub    BYTE PTR [ecx],ah
  4049c8:	xlat   BYTE PTR ds:[ebx]
  4049c9:	ins    DWORD PTR es:[edi],dx
  4049ca:	test   BYTE PTR [ebx],cl
  4049cc:	rol    BYTE PTR [esi+0x66],1
  4049cf:	dec    esp
  4049d0:	or     BYTE PTR [ebx-0x56],dh
  4049d3:	sbb    edx,DWORD PTR [ebp-0x4f6e2aa]
  4049d9:	xchg   BYTE PTR [ecx+0x25],ch
  4049dc:	add    al,0xe8
  4049de:	sub    ebp,DWORD PTR [ecx+0x2900b247]
  4049e4:	mov    ds:0x369d0bf1,eax
  4049e9:	mov    dl,0xf1
  4049eb:	retf   
  4049ec:	push   0xffffff97
  4049ee:	sbb    DWORD PTR [ebp+0x60],eax
  4049f1:	and    al,0x9e
  4049f3:	or     eax,0x7434cc66
  4049f8:	shl    BYTE PTR [edx+0x1c911e91],cl
  4049fe:	pop    esp
  4049ff:	cmp    ecx,ebx
  404a01:	or     ch,BYTE PTR [ebp-0x56f69533]
  404a07:	(bad)  
  404a08:	xlat   BYTE PTR ds:[ebx]
  404a09:	outs   dx,DWORD PTR ds:[esi]
  404a0a:	ret    
  404a0b:	arpl   WORD PTR [ebx],di
  404a0d:	push   ebp
  404a0e:	mov    BYTE PTR [ebp+0x1a],bl
  404a11:	pop    eax
  404a12:	(bad)  
  404a13:	fdivrp st(5),st
  404a15:	pop    ebx
  404a16:	imul   esi,edi,0xae908425
  404a1c:	ret    0xe94d
  404a1f:	arpl   WORD PTR [ebx-0x76],di
  404a22:	pop    ecx
  404a23:	shl    BYTE PTR [esi+0x1cbe9e69],1
  404a29:	or     BYTE PTR [edi+eax*4-0x53],bh
  404a2d:	mov    al,BYTE PTR [esp+ebp*2+0x24]
  404a31:	jo     0x404a09
  404a33:	mov    ds:0x239ccfc9,al
  404a38:	adc    ah,ch
  404a3a:	dec    eax
  404a3b:	jg     0x404a13
  404a3d:	mov    edx,DWORD PTR ds:0xc82c4ac7
  404a43:	inc    esp
  404a44:	popa   
  404a45:	mov    DWORD PTR [esi-0x19],esp
  404a48:	cmp    BYTE PTR [esi-0x29],dl
  404a4b:	(bad)  
  404a4d:	sub    eax,0x987c25d9
  404a52:	scas   al,BYTE PTR es:[edi]
  404a53:	call   DWORD PTR [edi+0xd439ee5]
  404a59:	push   edi
  404a5a:	dec    esp
  404a5b:	adc    eax,DWORD PTR [ebx-0x41]
  404a5e:	ins    BYTE PTR es:[edi],dx
  404a5f:	jne    0x404a08
  404a61:	in     eax,0xf6
  404a63:	cmp    ebx,edx
  404a65:	and    al,0x3e
  404a67:	iret   
  404a68:	pop    edi
  404a69:	dec    edx
  404a6a:	mov    eax,0xb575a0c9
  404a6f:	fnstenv [ebx+eax*2-0x5fa11dec]
  404a76:	sub    DWORD PTR [ecx-0x46be3c1f],ebx
  404a7c:	popf   
  404a7d:	pop    ecx
  404a7e:	sbb    BYTE PTR [esp+eax*8],ah
  404a81:	shl    DWORD PTR [ecx-0x5],1
  404a84:	jle    0x404a98
  404a86:	mov    ecx,0x359bf278
  404a8b:	mul    DWORD PTR [ebp-0x6]
  404a8e:	adc    DWORD PTR [edx+0x17f65291],ecx
  404a94:	lahf   
  404a95:	adc    eax,ecx
  404a97:	sahf   
  404a98:	pop    ebp
  404a99:	sbb    DWORD PTR [ebx-0x537ca9d],ebp
  404a9f:	or     al,BYTE PTR [ebp+0x12]
  404aa2:	jae    0x404aa9
  404aa4:	mov    dl,0x5
  404aa6:	hlt    
  404aa7:	add    DWORD PTR ds:0x4192d4a9,esi
  404aad:	xchg   BYTE PTR [ebx-0x192a709],ah
  404ab3:	mov    ch,0x9a
  404ab5:	push   esp
  404ab6:	jae    0x404aa3
  404ab8:	adc    dl,BYTE PTR [edi-0x625de03b]
  404abe:	xor    DWORD PTR ds:0x1ab769a6,esp
  404ac4:	sbb    eax,0x42dbc840
  404ac9:	xchg   ebx,eax
  404aca:	inc    BYTE PTR [edi+0x1d]
  404acd:	adc    BYTE PTR [eax+0x60],al
  404ad0:	jg     0x404a7c
  404ad2:	ins    DWORD PTR es:[edi],dx
  404ad3:	mov    esp,0x54123752
  404ad8:	mov    esi,0xf64faa20
  404add:	cli    
  404ade:	(bad)  
  404adf:	cld    
  404ae0:	retf   
  404ae1:	push   0x2297a50a
  404ae6:	sti    
  404ae7:	sbb    BYTE PTR [ecx],al
  404ae9:	(bad)  
  404aea:	mov    dh,0xf7
  404aec:	inc    ebp
  404aed:	pop    esp
  404aee:	(bad)  
  404aef:	mov    DWORD PTR [ebx+0x227aad45],esp
  404af5:	mov    ds:0xff547b69,eax
  404afa:	or     dh,dl
  404afc:	adc    bh,dl
  404afe:	lds    esi,FWORD PTR [eax-0x49]
  404b01:	fst    QWORD PTR [ecx+eiz*4+0x7116807b]
  404b08:	aam    0xbc
  404b0a:	mov    ecx,0x1851639
  404b0f:	test   ah,bh
  404b11:	add    eax,0x88d85444
  404b16:	rol    BYTE PTR ds:0x95f4057f,1
  404b1c:	into   
  404b1d:	jge    0x404aea
  404b1f:	(bad)  
  404b21:	fisub  WORD PTR [edi+0x79]
  404b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b26:	out    dx,eax
  404b27:	push   0xffffffd0
  404b29:	mov    bh,0x96
  404b2b:	mov    esp,0x41205d00
  404b30:	out    dx,ax
  404b32:	adc    ch,BYTE PTR [ebx]
  404b34:	jmp    0x404b0c
  404b36:	xor    ah,0x10
  404b39:	out    dx,al
  404b3a:	push   ebp
  404b3b:	inc    ebp
  404b3c:	xchg   DWORD PTR [edi+0x1100eb34],eax
  404b42:	fs mov bl,0x2d
  404b45:	cmp    dh,BYTE PTR [ebx]
  404b47:	test   al,0xe5
  404b49:	jae    0x404b43
  404b4b:	add    DWORD PTR [eax],edi
  404b4d:	(bad)  
  404b4e:	cmp    eax,0x2ab98483
  404b53:	and    eax,0xcf3057fe
  404b58:	lods   al,BYTE PTR ds:[esi]
  404b59:	test   edi,esp
  404b5b:	pushf  
  404b5c:	mov    ch,0xb3
  404b5e:	inc    eax
  404b5f:	ins    DWORD PTR es:[edi],dx
  404b60:	retf   
  404b61:	out    dx,al
  404b62:	xor    edi,DWORD PTR [ebp+0x3c735a96]
  404b68:	sub    al,0x6b
  404b6a:	xor    ecx,ebx
  404b6c:	or     BYTE PTR [ecx-0x17],al
  404b6f:	mov    ebp,0x213aebdf
  404b74:	das    
  404b75:	mov    dl,0x7f
  404b77:	dec    edx
  404b78:	or     al,0xec
  404b7a:	rcr    BYTE PTR [edi],cl
  404b7c:	and    DWORD PTR [esp+eax*4],edi
  404b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b80:	inc    eax
  404b81:	loope  0x404bd9
  404b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b84:	add    al,0x9c
  404b86:	dec    edx
  404b87:	jae    0x404bd8
  404b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b8a:	popf   
  404b8b:	xchg   ebx,eax
  404b8c:	mov    ?,WORD PTR [eax]
  404b8e:	pop    ss
  404b8f:	sub    al,0x24
  404b91:	and    eax,0xea6e0fdd
  404b96:	jnp    0x404b82
  404b98:	test   eax,0x5a850183
  404b9d:	jo     0x404bb0
  404b9f:	fmulp  st(6),st
  404ba1:	cmp    BYTE PTR [esi],bh
  404ba3:	mov    ebp,0xe67b1c0e
  404ba8:	and    BYTE PTR [esi],bl
  404baa:	aad    0xcf
  404bac:	retf   
  404bad:	rcr    edi,1
  404baf:	int3   
  404bb0:	enter  0x71a8,0x56
  404bb4:	cld    
  404bb5:	cmp    DWORD PTR [esi],0xffffff87
  404bb8:	dec    edx
  404bb9:	dec    edi
  404bba:	bound  ebx,QWORD PTR [eax+ebp*2-0x7b2519d6]
  404bc1:	or     cl,BYTE PTR [edi+eiz*4]
  404bc4:	pop    eax
  404bc5:	push   es
  404bc6:	jp     0x404bfc
  404bc8:	loop   0x404b71
  404bca:	(bad)  
  404bcb:	into   
  404bcc:	mov    ecx,0x6c49249c
  404bd1:	jle    0x404bc4
  404bd3:	dec    edx
  404bd4:	daa    
  404bd5:	push   esi
  404bd6:	xchg   edi,eax
  404bd7:	cdq    
  404bd8:	cmp    DWORD PTR ds:0x2f4d6571,esi
  404bde:	pop    ebp
  404bdf:	repnz xchg esi,eax
  404be1:	(bad)  
  404be2:	fmul   QWORD PTR [edi+edi*1-0x6d]
  404be6:	inc    eax
  404be7:	aam    0x4
  404be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bea:	cmp    dl,dh
  404bec:	dec    ebp
  404bed:	jmp    0x404bb9
  404bef:	repz pop ebx
  404bf1:	in     al,0xaf
  404bf3:	or     eax,0x46d4aeda
  404bf8:	mov    ds:0x56baeb03,eax
  404bfd:	jne    0x404bfe
  404bff:	arpl   WORD PTR [ecx-0x6a],bx
  404c02:	test   edi,edi
  404c04:	shl    BYTE PTR [ebx],0x95
  404c07:	xlat   BYTE PTR ds:[ebx]
  404c08:	adc    al,BYTE PTR [esi+0x7b]
  404c0b:	mov    ss,WORD PTR [ebp-0x2d421563]
  404c11:	or     ch,bl
  404c13:	outs   dx,BYTE PTR ds:[esi]
  404c14:	cmp    al,0xa7
  404c16:	fwait
  404c17:	ins    DWORD PTR es:[edi],dx
  404c18:	xchg   edi,eax
  404c19:	mov    al,0x86
  404c1b:	ret    
  404c1c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  404c1e:	mov    bh,0x10
  404c20:	jbe    0x404bc9
  404c22:	je     0x404c0b
  404c24:	jb     0x404bdc
  404c26:	xor    dh,BYTE PTR [edi+0x56]
  404c29:	ret    0xa3bd
  404c2c:	mov    edi,0x2dafe938
  404c31:	xor    DWORD PTR [edx+0x2e],edx
  404c34:	jns    0x404bfd
  404c36:	add    eax,0xc5b51176
  404c3b:	mov    esp,0x6c74426f
  404c40:	scas   al,BYTE PTR es:[edi]
  404c41:	aaa    
  404c42:	fld    TBYTE PTR [esi]
  404c44:	mov    cl,0xed
  404c46:	inc    ebp
  404c47:	push   ecx
  404c48:	adc    esp,eax
  404c4a:	push   0x7d
  404c4c:	daa    
  404c4d:	bound  edi,QWORD PTR [edx]
  404c4f:	push   ebp
  404c50:	push   ebx
  404c51:	adc    eax,DWORD PTR [ebx+0x3b]
  404c54:	cs push ebx
  404c56:	cmp    DWORD PTR [esp+eiz*8-0x6a912059],esi
  404c5d:	push   es
  404c5e:	add    BYTE PTR [eax+0x2ae57ad],0x21
  404c65:	add    edi,DWORD PTR [ebx+0x760bfc05]
  404c6b:	cmp    dh,cl
  404c6d:	jb     0x404c10
  404c6f:	adc    ebp,ecx
  404c71:	call   0x4e3fec0f
  404c76:	in     eax,0x72
  404c78:	xchg   DWORD PTR [ecx+0x5d],esp
  404c7b:	xor    al,0xb4
  404c7d:	mov    dl,0xa6
  404c7f:	xor    bl,BYTE PTR [eax-0x2f29920d]
  404c85:	xchg   edi,eax
  404c86:	xor    eax,0x7a5bf013
  404c8b:	hlt    
  404c8c:	rcl    ebp,1
  404c8e:	(bad)  
  404c8f:	mov    eax,ds:0xa3641ef4
  404c94:	into   
  404c95:	std    
  404c96:	stc    
  404c97:	add    eax,0x243c0f8a
  404c9c:	dec    eax
  404c9d:	(bad)
  404ca1:	push   ss
  404ca2:	ds mov ecx,0xf145c43b
  404ca8:	mov    bh,0xca
  404caa:	push   ebx
  404cab:	pop    ebp
  404cac:	aas    
  404cad:	outs   dx,BYTE PTR ds:[esi]
  404cae:	xchg   esi,eax
  404caf:	pop    esi
  404cb0:	aad    0x3d
  404cb2:	push   eax
  404cb3:	sbb    ch,bh
  404cb5:	scas   eax,DWORD PTR es:[edi]
  404cb6:	in     eax,0x7a
  404cb8:	and    esi,DWORD PTR [eax+0x42]
  404cbb:	lods   al,BYTE PTR ds:[esi]
  404cbc:	inc    edx
  404cbd:	rol    DWORD PTR [ecx],1
  404cbf:	xchg   esi,eax
  404cc0:	mov    ds:0xe41045f1,al
  404cc5:	into   
  404cc6:	mov    esi,0x60fb7485
  404ccb:	mov    ds:0xfbc7f687,eax
  404cd0:	xor    DWORD PTR [eax+0x524bb200],esi
  404cd6:	clc    
  404cd7:	fsub   QWORD PTR [edi-0x6f3be445]
  404cdd:	pop    ebp
  404cde:	push   0x593a669d
  404ce3:	loope  0x404d61
  404ce5:	ins    DWORD PTR es:[edi],dx
  404ce6:	loop   0x404d2c
  404ce8:	add    edi,DWORD PTR [ebx-0x68]
  404ceb:	mov    esi,DWORD PTR [edi+0x76]
  404cee:	(bad)  
  404cef:	cli    
  404cf0:	sub    BYTE PTR [ecx+eiz*1-0x7f],0xeb
  404cf5:	adc    al,0x61
  404cf7:	fwait
  404cf8:	stos   BYTE PTR es:[edi],al
  404cf9:	sbb    dl,BYTE PTR [edi+0x7484c40c]
  404cff:	aad    0xf8
  404d01:	xor    ebx,DWORD PTR [ecx-0x556fee7b]
  404d07:	lock push edi
  404d09:	into   
  404d0a:	int    0x35
  404d0c:	push   ss
  404d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d0e:	retf   0x7726
  404d11:	push   ebp
  404d12:	push   eax
  404d13:	(bad)  
  404d16:	and    al,0xc3
  404d18:	imul   esp,DWORD PTR [edi+0x35322d72],0xffffffb7
  404d1f:	int    0x32
  404d21:	adc    ch,dh
  404d23:	push   esp
  404d24:	xor    ah,bl
  404d26:	dec    edx
  404d27:	add    al,0xeb
  404d29:	icebp  
  404d2a:	dec    esi
  404d2b:	pop    es
  404d2c:	jne    0x404cc7
  404d2e:	in     al,0xa9
  404d30:	mov    ecx,esp
  404d32:	in     al,dx
  404d33:	mov    bl,0xf2
  404d35:	daa    
  404d36:	pop    edi
  404d37:	ins    DWORD PTR es:[edi],dx
  404d38:	ficomp DWORD PTR [eax+0x548d1142]
  404d3e:	xchg   edx,eax
  404d40:	outs   dx,BYTE PTR fs:[esi]
  404d42:	inc    esp
  404d43:	ds push es
  404d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d46:	add    al,0x91
  404d48:	jmp    0x55a:0xf7892c15
  404d4f:	outs   dx,DWORD PTR ds:[esi]
  404d50:	jo     0x404d77
  404d52:	mov    al,ds:0x832ad537
  404d57:	push   0xd21451e2
  404d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d5d:	call   0x6817cc73
  404d62:	outs   dx,DWORD PTR ds:[esi]
  404d63:	cmp    DWORD PTR [edi],ebx
  404d65:	imul   ebx,DWORD PTR [eax+0x384b37c8],0x67
  404d6c:	xor    eax,0x2257ea6b
  404d71:	lds    esp,FWORD PTR [eax+0x3a]
  404d74:	inc    ecx
  404d75:	out    dx,al
  404d76:	push   ebx
  404d77:	xchg   ah,ah
  404d79:	xor    ch,BYTE PTR [eax-0x49b0db2d]
  404d7f:	fwait
  404d80:	int3   
  404d81:	pop    es
  404d82:	mov    dl,0x5
  404d84:	dec    esp
  404d85:	hlt    
  404d86:	rol    BYTE PTR [ebx],0x3f
  404d89:	hlt    
  404d8a:	ret    0xce7e
  404d8d:	frstor [ecx+0x40]
  404d90:	test   DWORD PTR [ecx+0x6523c661],ebx
  404d96:	mov    ecx,DWORD PTR [bx+si-0x5c8e]
  404d9b:	bound  edi,QWORD PTR [ebx+0x19]
  404d9e:	pop    ss
  404d9f:	and    al,0xd0
  404da1:	mul    DWORD PTR es:[ebx]
  404da4:	js     0x404db1
  404da6:	lahf   
  404da7:	shl    bh,1
  404da9:	adc    eax,0xd2da2a40
  404dae:	cs adc al,0x53
  404db1:	fld    DWORD PTR [ebp-0x70]
  404db4:	ret    
  404db5:	iret   
  404db6:	gs jle 0x404db6
  404db9:	fiadd  DWORD PTR [ebx]
  404dbb:	jns    0x404dbf
  404dbd:	or     eax,0xf84bdf76
  404dc2:	mov    esp,0x503febf
  404dc7:	sub    eax,0xb80a6259
  404dcc:	cwde   
  404dcd:	sub    BYTE PTR [ecx],ah
  404dcf:	out    dx,eax
  404dd0:	pop    edi
  404dd1:	in     al,dx
  404dd2:	add    DWORD PTR [edx+0x2d371ef8],0x80532fee
  404ddc:	aaa    
  404ddd:	repnz test DWORD PTR [edi],edi
  404de0:	xchg   BYTE PTR [esi],al
  404de2:	inc    ecx
  404de3:	lods   al,BYTE PTR ds:[esi]
  404de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404de5:	aas    
  404de6:	dec    eax
  404de7:	xchg   ebx,eax
  404de8:	push   ss
  404de9:	mov    edi,eax
  404deb:	int    0x84
  404ded:	out    0xd3,al
  404def:	in     eax,0x94
  404df1:	push   cs
  404df2:	push   0x2
  404df4:	sbb    cl,ah
  404df6:	and    dl,dh
  404df8:	jne    0x404e39
  404dfa:	setne  bl
  404dfd:	jmp    DWORD PTR [ebp-0x7a49b64b]
  404e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e04:	mov    al,0xa8
  404e06:	pop    ebx
  404e07:	pop    edi
  404e08:	or     eax,edi
  404e0a:	sub    eax,0x98af012d
  404e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e10:	fs hlt 
  404e12:	mov    al,ds:0xf5a44e50
  404e17:	cmp    DWORD PTR [ebx-0x4a714954],ebx
  404e1d:	jnp    0x404e35
  404e1f:	sbb    al,0x78
  404e21:	mov    WORD PTR [ecx-0x2d3fd97c],?
  404e27:	push   0x6c9b638a
  404e2c:	push   esi
  404e2d:	jge    0x404e41
  404e2f:	pop    es
  404e30:	inc    esp
  404e31:	fnsave [edi+ebx*2-0x1ab4f072]
  404e38:	jae    0x404e0c
  404e3a:	jnp    0x404e36
  404e3c:	lahf   
  404e3d:	sar    BYTE PTR [ecx],0x56
  404e40:	pop    eax
  404e41:	jle    0x404e61
  404e43:	pusha  
  404e44:	(bad)  
  404e45:	jo     0x404e8b
  404e47:	stos   BYTE PTR es:[edi],al
  404e48:	adc    al,0x67
  404e4a:	mov    ebp,0xd8f8c3ec
  404e4f:	in     eax,0x6a
  404e51:	jns    0x404e99
  404e53:	push   edi
  404e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e55:	lahf   
  404e56:	out    dx,eax
  404e57:	cmp    eax,0x14936a26
  404e5c:	bound  edi,QWORD PTR [ebp+0x9]
  404e5f:	repz push ss
  404e61:	inc    ebx
  404e62:	pusha  
  404e63:	xchg   ecx,eax
  404e64:	sti    
  404e65:	inc    edi
  404e66:	retf   0xd61d
  404e69:	dec    edi
  404e6a:	push   cs
  404e6b:	test   eax,0xf03e9301
  404e70:	cwde   
  404e71:	stc    
  404e72:	sub    al,0x48
  404e74:	mov    ah,0x8a
  404e76:	push   ecx
  404e77:	or     ebx,DWORD PTR [ebp*4-0x69105f5c]
  404e7e:	cs dec ecx
  404e80:	mov    eax,ds:0x4b053cf2
  404e85:	xchg   ebx,eax
  404e86:	add    ax,0xe365
  404e8a:	xor    DWORD PTR [esp+esi*1+0x5b786959],edi
  404e91:	and    BYTE PTR [edi+0x71],0x41
  404e95:	mov    al,ds:0xb6503e23
  404e9a:	sub    al,0xe9
  404e9c:	pop    es
  404e9d:	lods   eax,DWORD PTR ds:[esi]
  404e9e:	ds jmp 0xcdb7:0x85c38227
  404ea6:	mov    bh,0x91
  404ea8:	sahf   
  404ea9:	std    
  404eaa:	or     eax,DWORD PTR [ebx+0x1c]
  404ead:	and    BYTE PTR [edx-0x5f],bl
  404eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eb1:	push   es
  404eb2:	adc    al,0x8a
  404eb4:	dec    esi
  404eb5:	popa   
  404eb6:	call   0x4317:0xe73c4de5
  404ebd:	jmp    0x94fe4b38
  404ec2:	test   DWORD PTR [ecx+eiz*2-0x7ab2ccd8],edi
  404ec9:	add    eax,0x43347baf
  404ece:	cmp    DWORD PTR [esi+0x627712bd],edx
  404ed4:	mov    edx,0x4938cb0f
  404ed9:	test   DWORD PTR [edi-0x45bc9bb3],ebx
  404edf:	dec    eax
  404ee0:	adc    BYTE PTR [edx+0x66c67afe],ch
  404ee6:	xchg   esi,eax
  404ee7:	dec    ecx
  404ee8:	mov    ebp,0x77025911
  404eed:	ja     0x404f20
  404eef:	xor    edx,edx
  404ef1:	popa   
  404ef2:	push   ss
  404ef3:	mov    ds:0x93316bcd,eax
  404ef8:	xchg   edx,eax
  404ef9:	add    bl,BYTE PTR [edi+eax*4]
  404efc:	jge    0x404f67
  404efe:	sbb    edx,edx
  404f00:	retf   0xc95a
  404f03:	mov    eax,ds:0x17f88432
  404f08:	pushf  
  404f09:	pushf  
  404f0a:	add    cl,dl
  404f0c:	push   ecx
  404f0d:	enter  0x6ef4,0xe3
  404f11:	(bad)  
  404f12:	mov    bh,0x40
  404f14:	push   ds
  404f15:	(bad)
  404f18:	fcom   QWORD PTR [esi]
  404f1b:	jno    0x404f61
  404f1d:	arpl   WORD PTR [esi+0x60ab721e],di
  404f23:	jbe    0x404ecf
  404f25:	mov    ah,0x6d
  404f27:	inc    ebx
  404f28:	repnz cdq 
  404f2a:	jecxz  0x404f12
  404f2c:	and    al,0x17
  404f2e:	jo     0x404ee3
  404f30:	add    eax,0xb84ab68
  404f35:	popf   
  404f36:	push   edx
  404f37:	popa   
  404f38:	lods   al,BYTE PTR ds:[esi]
  404f3a:	sbb    DWORD PTR [eax],esi
  404f3c:	hlt    
  404f3d:	inc    edx
  404f3e:	mov    eax,0xee1dc5e0
  404f43:	hlt    
  404f44:	je     0x404faa
  404f46:	mov    ah,0xe2
  404f48:	in     al,0xbc
  404f4a:	(bad)  
  404f4b:	sahf   
  404f4c:	(bad)  
  404f4d:	and    ebx,esi
  404f4f:	repnz dec edx
  404f51:	push   0x70f4f331
  404f56:	sub    eax,0x74296227
  404f5b:	mov    ebx,0x34e04f8
  404f60:	xchg   BYTE PTR [ecx-0x373b2dc1],al
  404f66:	or     edx,DWORD PTR [esi-0xb]
  404f69:	inc    edi
  404f6a:	inc    esp
  404f6b:	mov    al,0x29
  404f6d:	dec    ebx
  404f6e:	push   ecx
  404f6f:	daa    
  404f70:	adc    dl,BYTE PTR [edx-0x68]
  404f73:	sbb    BYTE PTR [ebp+0x28e7e051],ch
  404f79:	adc    BYTE PTR [ebp-0x27d838d5],0xc0
  404f80:	sbb    al,cl
  404f82:	and    DWORD PTR [ebx+0x43],eax
  404f85:	mov    eax,ds:0xf7140273
  404f8a:	(bad)  
  404f8b:	jmp    0x8c61:0xaf3d04d6
  404f92:	fmul   st(4),st
  404f94:	pop    eax
  404f95:	icebp  
  404f96:	add    eax,0x5f86e875
  404f9b:	fsubr  QWORD PTR [eax+0x281a8c31]
  404fa1:	jge    0x405015
  404fa3:	mov    ebp,0xff77d8c4
  404fa8:	sti    
  404fa9:	fldcw  WORD PTR [esp+ebp*1+0x10ec9238]
  404fb0:	popa   
  404fb1:	aaa    
  404fb2:	push   edi
  404fb3:	jmp    0x40501b
  404fb5:	aas    
  404fb6:	out    dx,al
  404fb7:	es jbe 0x404f6c
  404fba:	cmp    DWORD PTR [ebp+0x35],eax
  404fbd:	gs leave 
  404fbf:	hlt    
  404fc0:	fcmovu st,st(5)
  404fc2:	mov    ch,0xe
  404fc4:	addr16 pop ds
  404fc6:	in     al,0x25
  404fc8:	mov    esp,0x1b1def93
  404fcd:	cmp    al,BYTE PTR [ebp+0xc]
  404fd0:	mov    DWORD PTR [edi+0x56065104],eax
  404fd6:	lahf   
  404fd7:	jle    0x404ff8
  404fd9:	popf   
  404fda:	inc    edx
  404fdb:	test   al,0x9d
  404fdd:	repnz or DWORD PTR [ecx-0x7d],edi
  404fe1:	push   es
  404fe2:	dec    edx
  404fe3:	int3   
  404fe4:	or     al,0xe
  404fe6:	out    dx,al
  404fe7:	and    al,0x77
  404fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fea:	loope  0x404ff4
  404fec:	push   esi
  404fed:	gs push ebx
  404fef:	mov    ch,0xfd
  404ff1:	test   al,0x8e
  404ff3:	cmp    eax,0x8391328d
  404ff8:	mov    ch,0x3a
  404ffa:	pusha  
  404ffb:	sbb    DWORD PTR [ebx],ebp
  404ffd:	mov    ss,WORD PTR [ebx-0x1e0d3211]
  405003:	adc    al,0xb6
  405005:	popf   
  405006:	jbe    0x404fb6
  405008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405009:	fiadd  DWORD PTR [edx+0x16e729dc]
  40500f:	fiadd  DWORD PTR [ebp-0x8]
  405012:	dec    esp
  405013:	add    edi,DWORD PTR [ecx-0x1d534614]
  405019:	mov    ds:0x5330425,eax
  40501e:	mov    ebx,0x5ee943f3
  405023:	mov    bl,0x94
  405025:	in     al,dx
  405026:	fincstp 
  405028:	or     DWORD PTR ds:0x85aa705e,edi
  40502e:	jmp    0x44e6:0xf9a5cd
  405035:	es add eax,0x228e3761
  40503b:	fsub   DWORD PTR [edi+0x6bb21d8f]
  405041:	inc    ecx
  405042:	xor    esi,DWORD PTR [ecx+0x44]
  405045:	and    BYTE PTR ss:[edi],0x73
  405049:	mov    ds,WORD PTR [eax-0x3679fe57]
  40504f:	ss inc edx
  405051:	sbb    DWORD PTR ds:0xbeb1e13f,0x1d271b00
  40505b:	inc    esi
  40505c:	dec    ecx
  40505d:	xchg   DWORD PTR [ecx],esi
  40505f:	loop   0x4050b4
  405061:	sbb    al,0x6
  405063:	arpl   WORD PTR [esi+0x6d],di
  405066:	stos   BYTE PTR es:[edi],al
  405067:	jge    0x405035
  405069:	fidivr DWORD PTR [ecx-0x2b66bc74]
  40506f:	inc    ebp
  405070:	sub    al,0xb9
  405072:	retf   0xb344
  405075:	add    ah,cl
  405077:	lods   al,BYTE PTR ds:[esi]
  405078:	cmc    
  405079:	outs   dx,DWORD PTR ds:[esi]
  40507a:	or     BYTE PTR [edi],0xff
  40507d:	fbld   TBYTE PTR [esi]
  40507f:	mov    dh,0x25
  405081:	jmp    0x405030
  405083:	and    DWORD PTR ds:0x7a1bd79f,esi
  405089:	pop    edx
  40508a:	sbb    al,0x6b
  40508c:	call   0xf743:0xab6fa2b8
  405093:	scas   al,BYTE PTR es:[edi]
  405094:	nop
  405095:	or     DWORD PTR [ebx],eax
  405097:	outs   dx,BYTE PTR ds:[esi]
  405098:	cmp    BYTE PTR [esi],al
  40509a:	push   ds
  40509b:	arpl   WORD PTR [ebx+0x19],sp
  40509e:	xchg   ebp,eax
  40509f:	pop    esi
  4050a0:	inc    esp
  4050a1:	pop    ebx
  4050a2:	sub    al,0x49
  4050a4:	repz (bad) 
  4050a6:	pop    ecx
  4050a7:	inc    ebx
  4050a8:	sub    DWORD PTR [esi+0x6b],ecx
  4050ab:	js     0x40511c
  4050ad:	add    al,BYTE PTR [edi+0x25]
  4050b0:	and    al,0xdb
  4050b2:	pop    esp
  4050b3:	out    dx,al
  4050b4:	mov    ebp,0xa64a6b0e
  4050b9:	mov    dl,0x90
  4050bb:	iret   
  4050bc:	pusha  
  4050bd:	jb     0x4050ea
  4050bf:	xor    BYTE PTR [eax],ch
  4050c1:	inc    edi
  4050c2:	(bad)  
  4050c3:	mov    bh,0x10
  4050c5:	data16 fdivr DWORD PTR gs:[edx-0x79]
  4050ca:	jno    0x405051
  4050cc:	dec    edi
  4050cd:	inc    esp
  4050ce:	pop    ss
  4050cf:	aaa    
  4050d0:	mov    dh,0xd8
  4050d2:	sbb    ah,BYTE PTR [ebx+0x74]
  4050d5:	fnstsw WORD PTR [ecx-0x5d]
  4050d8:	sbb    eax,0xe2efa560
  4050dd:	inc    ebx
  4050de:	sahf   
  4050df:	sbb    esi,DWORD PTR [ecx+0x5cd1d6]
  4050e5:	mov    dl,0x60
  4050e7:	sub    BYTE PTR [edx],dl
  4050e9:	adc    al,0x7
  4050eb:	scas   eax,DWORD PTR es:[edi]
  4050ec:	sub    DWORD PTR fs:[ebp-0x706a1a75],ecx
  4050f3:	cmc    
  4050f4:	mov    edx,0x65e6d6c9
  4050f9:	(bad)  
  4050fa:	jmp    0x405151
  4050fc:	push   es
  4050fd:	out    0xfb,al
  4050ff:	mov    ch,0x27
  405101:	add    DWORD PTR [esi-0x36],edx
  405104:	(bad)  
  405105:	in     al,dx
  405106:	shl    DWORD PTR [ebp+0x59],cl
  405109:	sub    ebx,DWORD PTR [esi+0x2af96bd4]
  40510f:	call   0x1ade:0x57468f06
  405116:	inc    edi
  405117:	xor    BYTE PTR [edi-0x5c249d34],dh
  40511d:	enter  0xe4b6,0x3b
  405121:	mov    eax,0x2b9438d9
  405126:	jmp    0x405164
  405128:	sub    eax,0x3fb38de1
  40512d:	rcr    edx,1
  40512f:	adc    DWORD PTR [eax],eax
  405131:	shl    dh,cl
  405133:	inc    ecx
  405134:	outs   dx,DWORD PTR ds:[esi]
  405135:	push   ss
  405136:	adc    edx,DWORD PTR [edx+0x4c]
  405139:	cs aaa 
  40513b:	bound  edx,QWORD PTR ds:0xce091df9
  405141:	in     eax,dx
  405142:	adc    dh,BYTE PTR [esi+0x11]
  405145:	fimul  DWORD PTR [esp+eax*8]
  405148:	sbb    bl,BYTE PTR [esi]
  40514a:	inc    ebp
  40514b:	xchg   ebx,eax
  40514c:	outs   dx,DWORD PTR ds:[esi]
  40514e:	fldenv [esi-0x305d043d]
  405154:	xor    DWORD PTR [edi+0x28],0xb695ddb1
  40515b:	retf   
  40515c:	xchg   ecx,eax
  40515d:	stos   BYTE PTR es:[edi],al
  40515e:	mov    esp,0x7ad2b5d1
  405163:	scas   eax,DWORD PTR es:[edi]
  405164:	cmp    eax,0x22d85c71
  405169:	dec    ecx
  40516a:	or     esp,ebx
  40516c:	pop    es
  40516d:	out    dx,al
  40516e:	daa    
  40516f:	xor    eax,0x9cc0b94d
  405174:	shl    DWORD PTR [ecx+0x66],cl
  405177:	inc    esp
  405178:	mov    BYTE PTR [esi+0x67f8521b],ah
  40517e:	sub    edi,DWORD PTR [edi-0x71309419]
  405184:	push   edx
  405185:	std    
  405186:	mov    BYTE PTR [ebp-0x56],bh
  405189:	and    eax,ecx
  40518b:	sbb    eax,0x2a72a051
  405190:	add    al,0xdb
  405192:	in     al,0x74
  405194:	pushf  
  405195:	daa    
  405196:	adc    DWORD PTR [ebp-0x2b72b727],esp
  40519c:	loop   0x405185
  40519e:	lods   al,BYTE PTR ds:[esi]
  40519f:	leave  
  4051a0:	xor    dl,BYTE PTR [eax-0x70747d7e]
  4051a6:	jnp    0x4051c6
  4051a8:	fbstp  TBYTE PTR [eax+0x65c2b82c]
  4051ae:	jne    0x4051f9
  4051b0:	into   
  4051b1:	dec    esi
  4051b2:	pop    edi
  4051b3:	pop    eax
  4051b4:	dec    ebx
  4051b5:	clc    
  4051b6:	scas   al,BYTE PTR es:[edi]
  4051b7:	(bad)  
  4051b8:	out    0xc3,eax
  4051ba:	inc    eax
  4051bb:	dec    edx
  4051bc:	push   esi
  4051bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051be:	aam    0xc7
  4051c0:	push   eax
  4051c1:	push   0x33
  4051c3:	and    eax,0x59139fde
  4051c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051c9:	add    esp,DWORD PTR [eax+0x28c346da]
  4051cf:	pushf  
  4051d0:	jmp    0x4051f8
  4051d2:	cmp    ebx,esi
  4051d4:	jle    0x405219
  4051d6:	cmc    
  4051d7:	push   esp
  4051d8:	fcmove st,st(3)
  4051da:	outs   dx,BYTE PTR ds:[esi]
  4051db:	dec    ebx
  4051dc:	sbb    DWORD PTR [edx],ebp
  4051de:	fs mov dh,0x28
  4051e1:	adc    edx,DWORD PTR [edx-0x104aa806]
  4051e7:	in     al,dx
  4051e8:	jecxz  0x405210
  4051ea:	test   al,0xaf
  4051ec:	cmp    cl,BYTE PTR [edx-0x53]
  4051ef:	inc    esp
  4051f0:	adc    BYTE PTR ds:[edi-0x4f],ah
  4051f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f5:	lods   al,BYTE PTR ds:[esi]
  4051f6:	pop    ss
  4051f7:	xlat   BYTE PTR ds:[ebx]
  4051f8:	inc    esi
  4051f9:	out    dx,eax
  4051fa:	adc    al,0xb3
  4051fc:	dec    esp
  4051fd:	cmc    
  4051fe:	sub    edi,DWORD PTR [ebx]
  405200:	dec    esi
  405201:	out    dx,eax
  405202:	stc    
  405203:	mov    al,0x6f
  405205:	aaa    
  405206:	mov    esi,0x9fd10b1
  40520b:	xchg   ebp,eax
  40520c:	sbb    cl,BYTE PTR [esi-0xa1d465b]
  405212:	push   ebp
  405213:	mov    cl,0xc7
  405215:	or     eax,0xd92ec82d
  40521a:	inc    edx
  40521b:	and    al,0xa2
  40521d:	xor    ch,bh
  40521f:	test   BYTE PTR [ecx],dl
  405221:	xor    BYTE PTR [edi+0x16fbdac3],cl
  405227:	mov    edi,0x698bc99e
  40522c:	cmc    
  40522d:	add    esi,DWORD PTR [esi-0x34]
  405230:	aam    0xd9
  405232:	or     al,bl
  405234:	pop    esp
  405235:	ret    
  405236:	ins    BYTE PTR es:[edi],dx
  405237:	out    0x67,eax
  405239:	cld    
  40523a:	sbb    DWORD PTR [esi-0x6a3226b8],edi
  405240:	sbb    al,0x93
  405242:	cmp    dl,BYTE PTR [eax+0x17]
  405245:	test   eax,0xb075a4e3
  40524a:	jge    0x4051fc
  40524c:	and    eax,0x159646c5
  405251:	fimul  DWORD PTR fs:0x259ba74f
  405258:	adc    cl,al
  40525a:	ds mov ch,0xc9
  40525d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40525e:	mov    dh,BYTE PTR [esi]
  405260:	dec    eax
  405261:	imul   edi,DWORD PTR [esi-0x183d0cdb],0xa12ab415
  40526b:	rcr    BYTE PTR [edi-0x41],cl
  40526e:	sbb    eax,0x3c5a2340
  405273:	sub    al,0x98
  405275:	dec    edx
  405276:	popf   
  405277:	arpl   bx,cx
  405279:	inc    edx
  40527a:	mov    cl,0xb3
  40527c:	aad    0xe0
  40527e:	out    dx,al
  40527f:	and    BYTE PTR [ebx+0x6c1bc1db],al
  405285:	xor    esp,edi
  405287:	jecxz  0x405255
  405289:	pop    esp
  40528a:	repnz cdq 
  40528c:	out    dx,al
  40528d:	pop    eax
  40528e:	sub    eax,0xcdeba23f
  405293:	push   ebx
  405294:	xchg   ebp,eax
  405295:	and    al,0x78
  405297:	aad    0x0
  405299:	div    BYTE PTR [edx]
  40529b:	sub    DWORD PTR [edx-0x5314f500],ebp
  4052a1:	push   edx
  4052a2:	mov    dh,0x85
  4052a4:	sbb    al,0x95
  4052a6:	jns    0x4052c5
  4052a8:	in     eax,0x70
  4052aa:	addr16 pop es
  4052ac:	sub    al,cl
  4052ae:	inc    eax
  4052af:	(bad)
  4052b3:	iret   
  4052b4:	mov    bh,0xb2
  4052b6:	out    dx,al
  4052b7:	push   ebp
  4052b8:	rcr    BYTE PTR [edx],0x8a
  4052bb:	pop    edi
  4052bc:	push   es
  4052bd:	or     dh,BYTE PTR [edx+0x4a105f62]
  4052c3:	cmp    BYTE PTR [edx],al
  4052c5:	lock pop edx
  4052c7:	stos   BYTE PTR es:[edi],al
  4052c8:	push   eax
  4052c9:	dec    ebp
  4052ca:	inc    edx
  4052cb:	aas    
  4052cc:	adc    al,0x72
  4052ce:	(bad)  
  4052cf:	(bad)  
  4052d0:	and    BYTE PTR [edx+0x76],cl
  4052d3:	inc    ecx
  4052d4:	inc    ebp
  4052d5:	pop    ecx
  4052d6:	call   0xdae:0x7b851c5e
  4052dd:	inc    esp
  4052de:	imul   edx,DWORD PTR [edi],0x28ca508c
  4052e4:	iret   
  4052e5:	outs   dx,BYTE PTR ds:[esi]
  4052e6:	inc    edi
  4052e7:	mov    WORD PTR [edi-0x47],ds
  4052ea:	cmp    BYTE PTR [ecx+0x402ffe1f],bl
  4052f0:	scas   eax,DWORD PTR es:[edi]
  4052f1:	sbb    al,0x8c
  4052f3:	(bad)  
  4052f4:	jnp    0x4052c4
  4052f6:	xchg   esi,eax
  4052f7:	add    esp,DWORD PTR [ecx-0x11]
  4052fa:	outs   dx,DWORD PTR ds:[esi]
  4052fb:	jmp    esp
  4052fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052fe:	(bad)  
  4052ff:	repnz retf 
  405301:	push   0xb521988b
  405306:	mov    eax,ds:0x23109631
  40530b:	outs   dx,DWORD PTR ds:[esi]
  40530c:	mov    ds:0xa2c1c105,eax
  405311:	aaa    
  405312:	dec    eax
  405313:	push   es
  405314:	mov    cl,0xc4
  405316:	fistp  WORD PTR [edx]
  405318:	or     eax,0x2e80d7d1
  40531d:	aas    
  40531e:	and    esi,edi
  405320:	(bad)  
  405321:	gs xor ecx,eax
  405324:	outs   dx,BYTE PTR ds:[esi]
  405325:	mov    bh,0x4
  405327:	or     ebx,DWORD PTR [ecx-0x51]
  40532a:	add    BYTE PTR [ebp+0x594e8dbe],dl
  405330:	shl    DWORD PTR [ebp+0x4c],cl
  405333:	mov    al,ds:0xbd88ec72
  405338:	mov    edi,0x1aea20dd
  40533d:	dec    ecx
  40533e:	jmp    0x543d:0xc611117
  405345:	ins    BYTE PTR es:[edi],dx
  405346:	sbb    al,0x4
  405348:	sub    DWORD PTR [ecx],0xfa472050
  40534e:	cmp    BYTE PTR [ebx+0x25],dl
  405351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405352:	mov    BYTE PTR [ebx+edx*2+0x5f132632],ah
  405359:	adc    esp,DWORD PTR [edi-0x2106f7d7]
  40535f:	or     eax,0x7e8eeb64
  405364:	sahf   
  405365:	fistp  DWORD PTR [edi-0x70850f59]
  40536b:	call   0x9718:0x4f4f5c1b
  405372:	cmp    DWORD PTR ds:0x14dfab88,edx
  405378:	loopne 0x405373
  40537a:	out    0x96,eax
  40537c:	and    BYTE PTR [edi-0x2],cl
  40537f:	call   0x39e209ac
  405384:	vorps  xmm5,xmm2,XMMWORD PTR [ebp+0x14]
  405389:	mov    dl,0x8
  40538b:	push   esp
  40538c:	push   0x7e
  40538e:	inc    edi
  40538f:	jge    0x40533d
  405391:	ja     0x70270dad
  405397:	xchg   ebx,eax
  405398:	cdq    
  405399:	or     ecx,esp
  40539b:	leave  
  40539c:	cld    
  40539d:	mov    esi,0x50f177f3
  4053a2:	and    DWORD PTR [ebx-0x37f132c5],0x7b
  4053a9:	(bad)  
  4053aa:	out    0x8b,al
  4053ac:	xor    BYTE PTR [ecx],0x8
  4053af:	cld    
  4053b0:	jmp    0x405362
  4053b2:	adc    DWORD PTR [esp+eax*4+0x32],esi
  4053b6:	not    BYTE PTR [ebx-0x4b8848f4]
  4053bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053bd:	retf   0x42a6
  4053c0:	sbb    al,BYTE PTR [ebx+0x39b409ff]
  4053c6:	(bad)  
  4053c7:	xor    eax,0xda66412
  4053cc:	and    al,0xba
  4053ce:	fs inc ecx
  4053d0:	shl    DWORD PTR [esi+0x5d],cl
  4053d3:	lods   eax,DWORD PTR ds:[esi]
  4053d4:	fwait
  4053d5:	ror    DWORD PTR [ebx-0x36ee1c7c],1
  4053db:	imul   esp,esi,0xffffff8e
  4053de:	in     eax,0xfb
  4053e0:	mov    cl,0xc3
  4053e2:	mov    edx,0x8db25af4
  4053e7:	lea    ebx,[esi]
  4053e9:	sbb    BYTE PTR ds:0xf408a871,bh
  4053ef:	push   ecx
  4053f0:	add    eax,0x7b90e1d1
  4053f5:	fidiv  WORD PTR [ebx+0x2e]
  4053f8:	pop    esp
  4053f9:	lea    esp,[ebx+0x14]
  4053fc:	fwait
  4053fd:	retf   0x5573
  405400:	pop    esp
  405401:	sub    dl,bl
  405403:	pusha  
  405404:	and    ecx,esp
  405406:	mov    al,BYTE PTR [eax+0x6b]
  405409:	or     ebp,esi
  40540b:	or     esp,ecx
  40540d:	outs   dx,DWORD PTR ds:[esi]
  40540e:	loopne 0x4053c8
  405410:	cmp    bl,BYTE PTR [eax]
  405412:	pushf  
  405413:	add    BYTE PTR [ecx+0x5b],cl
  405416:	jns    0x405410
  405418:	cmp    BYTE PTR [ecx-0x13b87525],dh
  40541e:	aad    0xba
  405420:	pusha  
  405421:	mov    WORD PTR [ebp-0x6],?
  405424:	stc    
  405425:	in     eax,dx
  405426:	mov    esi,0x780fcc5
  40542b:	sbb    DWORD PTR [esi],ebx
  40542d:	or     ebp,ebp
  40542f:	jae    0x405444
  405431:	repnz adc eax,0x6c0dfa52
  405437:	push   ss
  405438:	pop    es
  405439:	push   es
  40543a:	mov    ebp,0x622bc140
  40543f:	call   0xe415:0x5fa4d82f
  405446:	mov    cl,0x79
  405448:	inc    ebx
  405449:	mov    ah,0xe8
  40544b:	sahf   
  40544c:	mov    BYTE PTR [edx],ch
  40544e:	mov    ?,WORD PTR [esi]
  405450:	retf   0xece2
  405453:	mov    ds:0xe40ca429,al
  405458:	test   al,0x65
  40545a:	ret    
  40545b:	(bad)  
  40545c:	pop    eax
  40545d:	dec    ebp
  40545e:	out    dx,al
  40545f:	pusha  
  405460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405461:	test   BYTE PTR [eax+edi*8-0x1352c454],dl
  405468:	jg     0x405406
  40546a:	shl    DWORD PTR [eax],1
  40546c:	add    ebp,DWORD PTR [edx]
  40546e:	in     eax,0x6e
  405470:	jnp    0x4054ca
  405472:	iret   
  405473:	or     ch,BYTE PTR [esi-0x3fe651fd]
  405479:	adc    dh,dl
  40547b:	stos   DWORD PTR es:[edi],eax
  40547c:	xor    dh,BYTE PTR [eax]
  40547e:	rcl    BYTE PTR [ecx],1
  405480:	xchg   ecx,ebp
  405482:	js     0x405412
  405484:	mov    fs,esp
  405486:	jg     0x4054f8
  405488:	or     cl,BYTE PTR [esi-0x2f]
  40548b:	test   BYTE PTR [ebx+0x15],dh
  40548e:	sti    
  40548f:	sti    
  405490:	retf   0x5f42
  405493:	cmc    
  405494:	or     al,0x47
  405496:	popa   
  405497:	push   ss
  405498:	lock idiv ebx
  40549b:	call   0xe7a7:0x532b7048
  4054a2:	shl    BYTE PTR [ebp+ebp*2-0x55743021],1
  4054a9:	mov    ebx,0x3ddb344d
  4054ae:	iret   
  4054af:	add    edi,DWORD PTR [eax-0x7a]
  4054b2:	test   bl,bh
  4054b4:	mov    ah,0x5d
  4054b6:	push   cs
  4054b7:	jns    0x4054f2
  4054b9:	les    ebx,FWORD PTR [ecx]
  4054bb:	xor    al,0x33
  4054bd:	lahf   
  4054be:	lea    esp,ds:0xc4c60f4
  4054c4:	push   ds
  4054c5:	sbb    eax,0xb0082bde
  4054ca:	cmp    eax,0xaa6a0ce8
  4054cf:	inc    ebp
  4054d0:	mov    ds:0x49e28df8,al
  4054d5:	dec    esi
  4054d6:	push   esp
  4054d7:	push   eax
  4054d8:	les    esi,FWORD PTR [esi]
  4054da:	bnd ret 
  4054dc:	dec    ebp
  4054dd:	pop    eax
  4054de:	call   0x49517d5f
  4054e3:	push   ds
  4054e4:	sbb    dh,BYTE PTR [ebx-0x675e59bb]
  4054ea:	aad    0xd
  4054ec:	sahf   
  4054ed:	repz and ah,BYTE PTR [ecx-0x7928c8cf]
  4054f4:	imul   ecx,DWORD PTR [edx-0x68],0x1214c9f5
  4054fb:	sbb    eax,0x8223457e
  405500:	mov    bh,0x88
  405502:	add    ch,bl
  405504:	and    DWORD PTR [ecx+ecx*4-0x50],esi
  405508:	test   eax,0xf5570ae2
  40550d:	and    bh,BYTE PTR cs:0x135714be
  405514:	push   cs
  405515:	test   BYTE PTR [ebx+0x1],ch
  405518:	aam    0xd4
  40551a:	ret    
  40551b:	(bad)  
  40551c:	fisttp QWORD PTR [esi+0x1]
  40551f:	jg     0x4054a6
  405521:	sbb    eax,0xe0dd2769
  405526:	xlat   BYTE PTR ds:[ebx]
  405527:	cs dec eax
  405529:	push   0xb4989f0c
  40552e:	pop    esi
  40552f:	jne    0x4054e1
  405531:	jno    0x4054e0
  405533:	mov    esp,0x88206a6b
  405538:	xchg   ebx,eax
  405539:	dec    esp
  40553a:	push   es
  40553b:	inc    ah
  40553d:	or     bh,BYTE PTR [esi-0x21]
  405540:	les    ebx,FWORD PTR [ebx+0x35]
  405543:	dec    esp
  405544:	mov    ah,0xf5
  405546:	sub    edx,DWORD PTR ds:0x93d5bb59
  40554c:	and    eax,0xb71c6465
  405551:	sahf   
  405552:	pop    edx
  405553:	push   ss
  405554:	inc    esi
  405555:	and    eax,ebp
  405557:	pop    ecx
  405558:	push   edx
  405559:	call   0x6f13:0x59fd991a
  405560:	cli    
  405561:	inc    ecx
  405562:	stc    
  405563:	jno    0x405546
  405565:	sub    al,0x1d
  405567:	aad    0x7d
  405569:	arpl   WORD PTR [ecx+0x54e7619a],bx
  40556f:	fsubr  QWORD PTR [esi]
  405571:	sti    
  405572:	das    
  405573:	nop
  405574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405575:	cli    
  405576:	cmp    dh,BYTE PTR [ecx+0x643fcff8]
  40557c:	jb     0x405559
  40557e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40557f:	push   ebp
  405580:	pushf  
  405581:	inc    esp
  405582:	jns    0x405589
  405584:	push   cs
  405585:	bound  edi,QWORD PTR [ecx-0x80]
  405588:	aaa    
  405589:	pop    eax
  40558a:	in     eax,dx
  40558b:	int    0x6b
  40558d:	xchg   edi,eax
  40558e:	lods   al,BYTE PTR ds:[esi]
  40558f:	mov    ecx,gs
  405591:	sub    ch,bh
  405593:	inc    eax
  405594:	xor    dl,BYTE PTR [edi-0x66dec466]
  40559a:	hlt    
  40559b:	fdivr  st(7),st
  40559d:	jge    0x405531
  40559f:	sub    esi,DWORD PTR [ebp+ebx*4+0x4c4afd46]
  4055a6:	imul   ebx,DWORD PTR [ecx+0x27],0x76
  4055aa:	stos   DWORD PTR es:[edi],eax
  4055ab:	cmp    dl,BYTE PTR [edi+0x6159b128]
  4055b1:	cwde   
  4055b2:	out    dx,al
  4055b3:	pusha  
  4055b4:	mov    al,0x91
  4055b6:	sub    al,0xaa
  4055b8:	adc    ebp,ecx
  4055ba:	push   ebp
  4055bb:	jmp    0x3516:0xffa246de
  4055c2:	sbb    bh,bh
  4055c4:	push   edi
  4055c5:	mov    ecx,0x84881271
  4055ca:	jno    0x405580
  4055cc:	xor    eax,0xc6012024
  4055d1:	inc    ebx
  4055d2:	ret    
  4055d3:	pop    esp
  4055d4:	test   eax,0xb0241bcc
  4055d9:	aad    0xaa
  4055db:	and    BYTE PTR [ecx],cl
  4055dd:	jmp    0x4055bb
  4055df:	dec    ebp
  4055e0:	rcl    DWORD PTR [edi+0x40],1
  4055e3:	jmp    0x405645
  4055e5:	mov    esi,0xd13f9607
  4055ea:	stos   DWORD PTR es:[edi],eax
  4055eb:	cmp    edi,DWORD PTR [esp]
  4055ee:	sub    DWORD PTR [edi+0xa9e397b],edi
  4055f4:	test   eax,0xd3fdb248
  4055f9:	jl     0x4055f4
  4055fb:	xchg   esi,eax
  4055fc:	xchg   esi,eax
  4055fd:	lds    ecx,FWORD PTR [edx+0x2b]
  405600:	(bad)  
  405602:	test   eax,0x3af393c2
  405607:	clc    
  405608:	mov    edi,0xf6ec8255
  40560d:	(bad)  
  40560e:	repz mov edi,0x42e689b3
  405614:	popa   
  405615:	mov    al,0xc1
  405617:	pop    edx
  405618:	mov    eax,DWORD PTR [eax-0x753356d2]
  40561e:	mov    WORD PTR [esi+0x34],es
  405621:	pushf  
  405622:	or     BYTE PTR [ebx-0xd],ch
  405625:	and    BYTE PTR [eax+eiz*8-0x37],bl
  405629:	(bad)  
  40562a:	mov    cl,0x22
  40562c:	mov    edx,DWORD PTR [ebp+0x684e369a]
  405632:	outs   dx,DWORD PTR ds:[esi]
  405633:	mov    ebp,0x30568286
  405638:	inc    ecx
  405639:	lds    ebx,FWORD PTR [esi-0x11]
  40563c:	adc    eax,0x195d921
  405641:	push   edi
  405642:	pushf  
  405643:	mov    gs,WORD PTR [esi+0x78074092]
  405649:	fnstenv [ecx]
  40564b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40564c:	ja     0x405689
  40564e:	mov    eax,ds:0x35205f1d
  405653:	mov    ebp,0x9f2c9e81
  405658:	sub    DWORD PTR [esi+edi*1-0x524d3913],0x3d494fb1
  405663:	add    dl,BYTE PTR [ecx+eiz*4+0x31ed2edc]
  40566a:	es lock int 0x85
  40566e:	rcr    DWORD PTR [ebp-0x3b],0x63
  405672:	ds push ebx
  405674:	push   es
  405675:	dec    ebp
  405676:	fbld   TBYTE PTR [edx-0x7f]
  405679:	scas   eax,DWORD PTR es:[edi]
  40567a:	stc    
  40567b:	(bad)  
  40567d:	bound  esp,QWORD PTR [ecx+0x7e]
  405680:	pop    ebp
  405681:	adc    DWORD PTR [edi+0x4922000d],0xfffffffe
  405688:	mov    ah,0x20
  40568a:	mov    eax,ds:0x688ee31f
  40568f:	pop    esi
  405690:	enter  0xcc0e,0xfe
  405694:	ds cld 
  405696:	pop    ecx
  405697:	push   ecx
  405698:	into   
  405699:	(bad)  
  40569a:	iret   
  40569b:	fcmovnbe st,st(6)
  40569d:	and    cl,cl
  40569f:	sub    eax,0xbb9f5493
  4056a4:	loopne 0x4056e3
  4056a6:	sub    al,0x8d
  4056a8:	lea    eax,[ebx]
  4056aa:	or     BYTE PTR [edx+0x284dbf68],cl
  4056b0:	dec    ecx
  4056b1:	test   BYTE PTR [edi],dl
  4056b3:	jbe    0x4056b4
  4056b5:	sub    bh,BYTE PTR [eax+edx*1-0x599b04e7]
  4056bc:	shl    DWORD PTR [ebp+0xf],cl
  4056bf:	push   0xfffffff9
  4056c1:	pop    esp
  4056c2:	faddp  st(5),st
  4056c4:	xlat   BYTE PTR ds:[ebx]
  4056c5:	popa   
  4056c6:	test   al,0x78
  4056c8:	sti    
  4056c9:	out    0x30,al
  4056cb:	inc    ecx
  4056cc:	mov    ebx,edx
  4056ce:	stc    
  4056cf:	mov    DWORD PTR [edx],0x28e040ed
  4056d5:	jge    0x40573c
  4056d7:	leave  
  4056d8:	xlat   BYTE PTR ds:[ebx]
  4056d9:	leave  
  4056da:	inc    edx
  4056db:	push   esi
  4056dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056dd:	dec    edi
  4056de:	xchg   ebx,eax
  4056df:	arpl   WORD PTR [edx+0x8],sp
  4056e2:	popa   
  4056e3:	addr16 mov bl,0xe7
  4056e6:	js     0x4056e4
  4056e8:	pop    ds
  4056e9:	mov    ecx,0xf69a6c8c
  4056ee:	or     eax,0x935a3c54
  4056f3:	mov    dh,dl
  4056f5:	test   BYTE PTR [edx+0xb],al
  4056f8:	cmp    eax,DWORD PTR [ebx+esi*4]
  4056fb:	or     DWORD PTR [edi-0x42],0xffffffca
  4056ff:	push   es
  405700:	ss xchg ecx,eax
  405702:	test   dl,ah
  405704:	fwait
  405705:	ja     0x405757
  405707:	adc    al,0xfe
  405709:	je     0x4056a2
  40570b:	test   eax,0xeb90cda2
  405710:	push   0x1f85e14
  405715:	stc    
  405716:	inc    ecx
  405717:	inc    edx
  405718:	rcl    cl,0x23
  40571b:	mov    ecx,0x284c5748
  405720:	xchg   ebx,eax
  405721:	adc    eax,DWORD PTR [ebx-0x686f159e]
  405727:	ja     0x405702
  405729:	xor    ch,BYTE PTR [edx+0x33c327de]
  40572f:	rcl    edi,cl
  405731:	aaa    
  405732:	inc    esi
  405733:	movsx  ebx,BYTE PTR [edi-0x6b440322]
  40573a:	mov    ebp,0xed43314
  40573f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405740:	mov    dl,0x63
  405742:	aad    0xd9
  405744:	push   esp
  405745:	fcom   DWORD PTR [eax+0xf]
  405748:	stos   BYTE PTR es:[edi],al
  405749:	add    eax,0x8f02ae26
  40574e:	lock dec edi
  405750:	ins    BYTE PTR es:[edi],dx
  405751:	mov    dh,0x31
  405753:	fild   QWORD PTR [ecx+0x21]
  405756:	and    esp,DWORD PTR [eax-0x31844e75]
  40575c:	fs jg  0x40573d
  40575f:	or     al,0x33
  405761:	push   ebx
  405762:	xchg   DWORD PTR [edx],ebx
  405764:	sbb    dh,al
  405766:	and    eax,0xfa352728
  40576b:	push   es
  40576c:	scas   al,BYTE PTR es:[edi]
  40576d:	add    bl,ch
  40576f:	mul    BYTE PTR [ecx+esi*8-0x3c36de08]
  405776:	pop    edi
  405777:	leave  
  405778:	sbb    dh,BYTE PTR [esi-0xc]
  40577b:	loopne 0x4057e4
  40577d:	test   DWORD PTR [eax],ecx
  40577f:	clc    
  405780:	add    eax,0xdec3f6cc
  405785:	sar    esp,0x11
  405788:	ja     0x4057e9
  40578a:	pop    ds
  40578b:	mov    bl,0xfc
  40578d:	and    esi,0xffffffd8
  405790:	mov    esi,0x15246094
  405795:	xchg   ebp,eax
  405796:	repnz add ebp,DWORD PTR ss:[esi-0x6906fa1d]
  40579e:	cmp    DWORD PTR [esi],esp
  4057a0:	pop    ss
  4057a1:	repnz into 
  4057a3:	and    ebp,0xa4333b9e
  4057a9:	fistp  WORD PTR [edx-0x9]
  4057ac:	in     al,dx
  4057ad:	cmc    
  4057ae:	push   ecx
  4057af:	jecxz  0x405768
  4057b1:	or     eax,0xd629f086
  4057b6:	mov    ebp,0x2343efa6
  4057bb:	fmulp  st(4),st
  4057bd:	push   ebp
  4057be:	ins    BYTE PTR es:[edi],dx
  4057bf:	xor    al,0x24
  4057c1:	shr    DWORD PTR [edx+0x20145866],cl
  4057c7:	lahf   
  4057c8:	push   ecx
  4057c9:	jge    0x4057c6
  4057cb:	dec    eax
  4057cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057cd:	outs   dx,DWORD PTR ds:[esi]
  4057ce:	jne    0x4057a5
  4057d0:	(bad)  
  4057d1:	push   esp
  4057d2:	std    
  4057d3:	xchg   ebx,eax
  4057d4:	sub    al,0x7b
  4057d6:	jmp    0xdeb0f399
  4057db:	pop    esp
  4057dd:	pusha  
  4057de:	in     al,0x86
  4057e0:	add    al,0x4
  4057e2:	push   esi
  4057e3:	push   ss
  4057e4:	cli    
  4057e5:	loop   0x405775
  4057e7:	sbb    al,bl
  4057e9:	in     al,0x27
  4057eb:	call   0xd8fcc198
  4057f0:	sbb    eax,0x59ff85d1
  4057f5:	ret    0xdedc
  4057f8:	int3   
  4057f9:	fadd   QWORD PTR [ecx]
  4057fb:	jecxz  0x405793
  4057fd:	adc    eax,0x57927ebe
  405802:	into   
  405803:	(bad)  
  405804:	stos   DWORD PTR es:[edi],eax
  405805:	out    dx,al
  405806:	rol    BYTE PTR [esi+0x148e2f2a],0x21
  40580d:	ret    0x3b48
  405810:	push   edi
  405811:	loope  0x40588e
  405813:	add    eax,0xd5dc63db
  405818:	es push ds
  40581a:	nop
  40581b:	adc    DWORD PTR [eax-0x23],0x69554d21
  405822:	or     bh,BYTE PTR [ebx+edi*1+0x19acd178]
  405829:	je     0x4058a4
  40582b:	and    ebp,eax
  40582d:	fiadd  DWORD PTR [edx+ecx*2-0x2ce3412c]
  405834:	xchg   ebp,eax
  405835:	add    eax,0x225a2d3f
  40583a:	mov    bl,0xd1
  40583c:	fs adc edx,esp
  40583f:	mov    ecx,0x9a36d4a5
  405844:	out    0xee,al
  405846:	and    cl,BYTE PTR ds:0x12c8d9b0
  40584c:	into   
  40584d:	lahf   
  40584e:	data16 jns 0x4058af
  405851:	inc    ebp
  405852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405853:	dec    esi
  405854:	sti    
  405855:	cmp    ah,BYTE PTR [edi]
  405857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405858:	mov    cl,0x76
  40585a:	fstp   QWORD PTR [edi-0x61]
  40585d:	cmp    eax,0x9913c04e
  405862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405863:	loop   0x40585e
  405865:	mov    edi,0x649a9eef
  40586a:	ja     0x4058e1
  40586c:	call   0xff31ac03
  405871:	cmp    esp,ebx
  405873:	dec    edx
  405874:	mov    bh,0x3a
  405876:	mov    bh,0xff
  405878:	pusha  
  405879:	bound  esp,QWORD PTR [edi+0x64]
  40587c:	std    
  40587d:	fs xchg ebx,eax
  40587f:	or     al,0x2a
  405881:	lock pushf 
  405883:	mov    eax,ds:0xc9fd6114
  405888:	xchg   DWORD PTR [eax],ecx
  40588a:	lahf   
  40588b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40588c:	xor    eax,0xc7deeacb
  405891:	pop    es
  405892:	cmp    al,BYTE PTR ds:0xc1a222f9
  405898:	lods   eax,DWORD PTR ds:[esi]
  405899:	loopne 0x405851
  40589b:	pop    edi
  40589c:	xor    eax,0x4dbcef0
  4058a1:	fidiv  WORD PTR [esi-0x199e0ce5]
  4058a7:	push   es
  4058a8:	mov    ds:0x574ec0cd,al
  4058ad:	ja     0x40585e
  4058af:	xchg   DWORD PTR [ebx-0x59d9b23d],ebp
  4058b5:	cs adc eax,0x7eacb88e
  4058bb:	gs fwait
  4058bd:	mov    ds:0x3283b1db,eax
  4058c2:	mov    cs,WORD PTR [edi+0x378ac045]
  4058c8:	mov    eax,ds:0x1a87dd8d
  4058cd:	cmp    DWORD PTR [ebx-0x18],ebx
  4058d0:	and    al,0xad
  4058d2:	cmp    BYTE PTR [edi],0x6f
  4058d5:	jp     0x4058d2
  4058d7:	pop    esp
  4058d8:	xor    BYTE PTR [ebx],0xe6
  4058db:	add    BYTE PTR [ecx],dl
  4058dd:	sub    DWORD PTR [edx],esp
  4058df:	stos   DWORD PTR es:[edi],eax
  4058e0:	dec    edx
  4058e1:	xchg   esi,eax
  4058e2:	addr16 aas 
  4058e4:	inc    eax
  4058e5:	fld    QWORD PTR [ebx+ebx*2+0x3e]
  4058e9:	(bad)  
  4058ea:	mov    edi,0xc1aef9a6
  4058ef:	or     edi,DWORD PTR [ebx-0x68c67b00]
  4058f5:	das    
  4058f6:	xor    DWORD PTR [ecx],edx
  4058f8:	arpl   bx,dx
  4058fa:	fiadd  WORD PTR [ebx-0x37]
  4058fd:	jno    0x4058d4
  4058ff:	mov    al,0xb2
  405901:	mov    eax,0xe0a0d6b4
  405906:	out    0x14,eax
  405908:	clc    
  405909:	adc    ah,dl
  40590b:	jns    0x405931
  40590d:	popa   
  40590e:	test   ebp,0x819bda44
  405914:	aad    0x38
  405916:	cmp    dh,BYTE PTR [esi+esi*8]
  405919:	push   ecx
  40591a:	mov    ds:0x7391fd05,al
  40591f:	or     ebx,eax
  405921:	ja     0x4058d3
  405923:	out    dx,eax
  405924:	fcmovu st,st(7)
  405926:	mov    edi,0xddd38c3
  40592b:	nop
  40592c:	add    BYTE PTR [ebp+ebx*1+0x38154017],cl
  405933:	cmp    ecx,DWORD PTR [edx+esi*4]
  405936:	push   ss
  405937:	fadd   DWORD PTR [ecx+0x56caf99b]
  40593d:	xchg   DWORD PTR [ebx-0x1a],edi
  405940:	jmp    0xb9974bf1
  405945:	inc    eax
  405946:	cmp    BYTE PTR [edi+0x10],0x23
  40594a:	mov    eax,ds:0xf3c9dc26
  40594f:	cdq    
  405950:	lahf   
  405951:	push   ds
  405952:	add    dl,ch
  405954:	stos   DWORD PTR es:[edi],eax
  405955:	aam    0xac
  405957:	mov    ebp,0x44c655b6
  40595c:	mov    bl,0xfa
  40595e:	dec    ecx
  40595f:	push   esi
  405960:	adc    BYTE PTR [ecx+0x60],ch
  405963:	and    edx,DWORD PTR ds:0xaeb9618d
  405969:	(bad)  
  40596a:	call   0xee827b02
  40596f:	sbb    dh,ch
  405971:	sbb    eax,0xf15bb80
  405976:	neg    BYTE PTR [ebp-0x39]
  405979:	jmp    0x734257ec
  40597e:	ret    0x7264
  405981:	mov    edx,0x80baefbb
  405986:	push   edx
  405987:	sbb    al,0x1c
  405989:	cwde   
  40598a:	mov    ecx,0x825ef185
  40598f:	add    BYTE PTR [esi],cl
  405991:	cwde   
  405992:	loope  0x4059e8
  405994:	enter  0x23e7,0xc9
  405998:	rol    BYTE PTR [eax+0x3af28e3d],cl
  40599e:	stos   DWORD PTR es:[edi],eax
  40599f:	js     0x4059be
  4059a1:	iret   
  4059a2:	fidiv  DWORD PTR [ebx-0x6]
  4059a5:	shl    DWORD PTR [ecx+0x3a],cl
  4059a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a9:	js     0x405a1e
  4059ab:	daa    
  4059ac:	ffreep st(4)
  4059ae:	push   ecx
  4059af:	push   ebx
  4059b0:	std    
  4059b1:	js     0x405a32
  4059b3:	es stc 
  4059b5:	sbb    DWORD PTR [eax],ecx
  4059b7:	jge    0x40599c
  4059b9:	outs   dx,DWORD PTR ds:[esi]
  4059ba:	adc    ebp,DWORD PTR [eax]
  4059bc:	and    esp,DWORD PTR [ecx+edx*4]
  4059bf:	inc    esi
  4059c0:	mov    eax,0x8b07fdf
  4059c5:	pop    edi
  4059c6:	and    eax,0xeecd5c22
  4059cb:	iret   
  4059cc:	lods   al,BYTE PTR ds:[esi]
  4059cd:	cdq    
  4059ce:	scas   eax,DWORD PTR es:[edi]
  4059cf:	scas   eax,DWORD PTR es:[edi]
  4059d0:	js     0x405993
  4059d2:	por    mm7,QWORD PTR [edx-0x59a2f0b4]
  4059d9:	push   ss
  4059da:	lahf   
  4059db:	outs   dx,DWORD PTR ds:[esi]
  4059dc:	in     al,dx
  4059dd:	(bad)  
  4059de:	ss sahf 
  4059e0:	sub    DWORD PTR [edi],edx
  4059e2:	sub    cl,BYTE PTR [edx-0x49]
  4059e5:	loopne 0x405a5e
  4059e7:	call   0x70c54e12
  4059ec:	ret    
  4059ed:	or     esp,eax
  4059ef:	fwait
  4059f0:	pop    ebp
  4059f1:	stos   BYTE PTR es:[edi],al
  4059f2:	jns    0x405a2b
  4059f4:	mov    esp,esp
  4059f6:	sub    dh,ah
  4059f8:	jbe    0x405a68
  4059fa:	adc    edx,DWORD PTR [edi]
  4059fc:	mov    al,ds:0x2a3076f0
  405a01:	pop    eax
  405a02:	call   DWORD PTR [edi-0x63]
  405a05:	cmp    esi,0x7ccf182e
  405a0b:	mov    ecx,0x7a8a1d86
  405a10:	cs push ebx
  405a12:	jle    0x4059da
  405a14:	outs   dx,DWORD PTR ds:[esi]
  405a15:	mov    esp,0x34a27f81
  405a1a:	mov    bl,0xb1
  405a1c:	mov    ecx,0x9bfa5828
  405a21:	imul   edi,DWORD PTR [ecx],0x67
  405a24:	or     ebp,DWORD PTR [ebx+0x20]
  405a27:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  405a29:	or     BYTE PTR [edi+0x4f],0xa9
  405a2d:	cmp    bl,dl
  405a2f:	sti    
  405a30:	int3   
  405a31:	xchg   edi,eax
  405a32:	sub    DWORD PTR [eax+edi*4-0x5c],edx
  405a36:	inc    BYTE PTR [ecx]
  405a38:	inc    eax
  405a39:	lahf   
  405a3a:	xor    BYTE PTR [ebx],dh
  405a3c:	out    dx,al
  405a3d:	iret   
  405a3e:	push   edi
  405a3f:	sbb    eax,0x977015f4
  405a44:	dec    edx
  405a45:	push   edi
  405a46:	pop    ebp
  405a47:	inc    esi
  405a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a49:	jg     0x405a38
  405a4b:	test   DWORD PTR [ebp+0x3c],eax
  405a4e:	bswap  ebx
  405a50:	gs xor eax,0x1a2db80e
  405a56:	add    ebp,DWORD PTR [eax]
  405a58:	loop   0x405a1a
  405a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a5b:	imul   edx,DWORD PTR [eax+0x2],0x1
  405a5f:	popf   
  405a60:	or     eax,0xb0d54f44
  405a65:	mov    ?,WORD PTR [ebx+eiz*2+0xa709f0e]
  405a6c:	cli    
  405a6d:	das    
  405a6e:	fdiv   QWORD PTR [esi]
  405a70:	push   ecx
  405a71:	mov    edx,edx
  405a73:	xor    ebx,0xf2d6a95
  405a79:	pop    ss
  405a7a:	inc    ebp
  405a7b:	les    ecx,FWORD PTR [eax]
  405a7d:	mov    bl,BYTE PTR [ecx-0x64]
  405a80:	loope  0x405abe
  405a82:	add    bh,ch
  405a84:	xchg   edx,eax
  405a85:	stos   BYTE PTR es:[edi],al
  405a86:	cmp    bh,BYTE PTR [ebp+0x52]
  405a89:	sub    DWORD PTR [ebp-0x400d585e],ebp
  405a8f:	pop    bx
  405a91:	test   eax,0xe42bfa72
  405a96:	loope  0x405a9d
  405a98:	jmp    0x18f62ded
  405a9d:	cmp    eax,edx
  405a9f:	into   
  405aa0:	add    al,0x8e
  405aa2:	dec    ecx
  405aa3:	push   0xffffff8a
  405aa5:	loope  0x405b0a
  405aa7:	inc    esi
  405aa8:	icebp  
  405aa9:	or     BYTE PTR ss:[edi],0x66
  405aad:	sbb    BYTE PTR [ebx+0x2b],0x12
  405ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab2:	iret   
  405ab3:	mov    WORD PTR ds:0xa35986ea,es
  405ab9:	adc    eax,0x1a1b3719
  405abe:	sub    bh,BYTE PTR [ebx+eax*4+0x19]
  405ac2:	test   eax,0x3b787b3c
  405ac7:	push   eax
  405ac8:	imul   dh
  405aca:	cmp    BYTE PTR [edi-0x1b7d6834],dl
  405ad0:	adc    eax,0x948ff014
  405ad5:	push   ss
  405ad6:	pusha  
  405ad7:	mov    ch,bh
  405ad9:	jae    0x405b23
  405adb:	ins    DWORD PTR es:[edi],dx
  405adc:	aas    
  405add:	jmp    0x39d0:0xc1d6f674
  405ae4:	enter  0x14fb,0xaf
  405ae8:	sbb    BYTE PTR [edx-0x64f8a1b6],bl
  405aee:	xchg   edi,eax
  405aef:	dec    eax
  405af0:	xlat   BYTE PTR ds:[ebx]
  405af1:	push   ecx
  405af2:	das    
  405af3:	stos   DWORD PTR es:[edi],eax
  405af4:	inc    ebx
  405af5:	inc    edi
  405af6:	mov    dh,0x3b
  405af8:	sub    DWORD PTR [ecx],edi
  405afa:	sbb    al,BYTE PTR [edi+0x43bc37ce]
  405b00:	lods   al,BYTE PTR ds:[esi]
  405b01:	cmp    DWORD PTR [edx+0x49],edx
  405b04:	sbb    al,0xda
  405b06:	cmp    al,0xde
  405b08:	hlt    
  405b09:	lock (bad) 
  405b0b:	clc    
  405b0c:	sub    DWORD PTR [ecx+0x13],edi
  405b0f:	xchg   esp,eax
  405b10:	in     eax,0xa5
  405b12:	jle    0x405b70
  405b14:	push   edx
  405b15:	xchg   edx,eax
  405b16:	mov    ah,0x2d
  405b18:	jae    0x405b38
  405b1a:	jp     0x405aa0
  405b1c:	mov    al,ds:0xa77da4f1
  405b21:	jbe    0x405b74
  405b23:	and    al,ch
  405b25:	inc    eax
  405b26:	and    ebx,DWORD PTR [eax+0x8611244]
  405b2c:	iret   
  405b2d:	mov    esi,0xc7001bca
  405b32:	imul   edx,DWORD PTR [edx],0xffffffc4
  405b35:	jp     0x405b7a
  405b37:	xchg   BYTE PTR [esp+edx*1-0x6a],ah
  405b3b:	adc    DWORD PTR [esi-0x5afd093f],0x52
  405b42:	and    eax,0x49f98dbd
  405b47:	ror    ah,cl
  405b49:	inc    esi
  405b4a:	jp     0x405b3a
  405b4c:	jmp    0xe97d:0x65c05912
  405b53:	fsubr  QWORD PTR [esi]
  405b55:	(bad)  
  405b56:	jbe    0x405b4a
  405b58:	jecxz  0x405b6f
  405b5a:	inc    ecx
  405b5b:	aad    0x38
  405b5d:	mov    BYTE PTR [eax+0x2416da89],bh
  405b63:	outs   dx,DWORD PTR ds:[esi]
  405b64:	dec    esi
  405b65:	jle    0x405b2d
  405b67:	popa   
  405b68:	cmc    
  405b69:	stos   DWORD PTR es:[edi],eax
  405b6a:	dec    eax
  405b6b:	in     al,0x1
  405b6d:	scas   al,BYTE PTR es:[edi]
  405b6e:	ins    DWORD PTR es:[edi],dx
  405b6f:	push   eax
  405b70:	into   
  405b71:	sbb    esp,DWORD PTR [ecx]
  405b73:	ret    
  405b74:	push   edi
  405b75:	pop    ebp
  405b76:	push   ecx
  405b77:	pop    esp
  405b78:	mov    cl,ah
  405b7a:	cwde   
  405b7b:	mov    dh,0x84
  405b7d:	cmp    eax,0x97d90b1f
  405b82:	shl    edi,0xd6
  405b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b86:	pop    esi
  405b87:	mov    bh,0x79
  405b89:	add    DWORD PTR [edi],ebx
  405b8b:	push   ebx
  405b8c:	leave  
  405b8d:	rcl    BYTE PTR [edi+edx*4+0x5f],1
  405b91:	or     eax,0x311478df
  405b96:	nop
  405b97:	mov    esi,0xc5604e34
  405b9c:	adc    BYTE PTR [edi-0x4bb7b491],bh
  405ba2:	xor    DWORD PTR [edi+0x7c],ecx
  405ba5:	mov    al,ds:0xf1d961b5
  405baa:	mov    esp,0x4ec803e2
  405baf:	fldenv [eax+0x696961f8]
  405bb5:	xlat   BYTE PTR ds:[ebx]
  405bb6:	je     0x405b51
  405bb8:	mov    edi,0xbd5b0a82
  405bbd:	xchg   esi,eax
  405bbe:	clc    
  405bbf:	fsubr  QWORD PTR [eax+0x52]
  405bc2:	inc    esi
  405bc3:	jnp    0x405c43
  405bc5:	jns    0x405bae
  405bc7:	jo     0x405c02
  405bc9:	mov    BYTE PTR [ecx+0x75c2bf29],al
  405bcf:	fidiv  DWORD PTR [esi-0x67]
  405bd2:	fld    QWORD PTR [ebx+0x6a]
  405bd5:	push   ecx
  405bd6:	dec    ecx
  405bd7:	ret    0xec94
  405bda:	xchg   esp,eax
  405bdb:	mov    bh,0x3a
  405bdd:	call   0x9c382d3e
  405be2:	dec    BYTE PTR [edi+0x55490a59]
  405be8:	xor    ecx,DWORD PTR ss:[edx+0x3813a7f8]
  405bef:	jmp    0x5468e8db
  405bf4:	fst    QWORD PTR [edx-0x50e087fc]
  405bfa:	mov    al,ds:0x553f588b
  405bff:	(bad)  
  405c00:	fnsave [ebx]
  405c02:	jecxz  0x405c6c
  405c04:	and    ah,ah
  405c06:	push   ebp
  405c07:	pop    esp
  405c08:	sub    BYTE PTR [ecx-0x8],bl
  405c0b:	daa    
  405c0c:	or     BYTE PTR [eax+0x4],dh
  405c0f:	inc    edx
  405c10:	shl    DWORD PTR [esi],1
  405c12:	xor    eax,0xa2b47b27
  405c17:	fnstcw WORD PTR [ebx+0x4ff0a153]
  405c1d:	mov    fs,ebx
  405c1f:	push   edx
  405c20:	sar    esi,0x55
  405c23:	cs in  eax,0xd
  405c26:	jl     0x405bae
  405c28:	jg     0x405c0c
  405c2a:	popa   
  405c2b:	into   
  405c2c:	xor    DWORD PTR [esi-0x32eb39ca],ebp
  405c32:	loopne 0x405c05
  405c34:	ins    DWORD PTR es:[edi],dx
  405c35:	xor    BYTE PTR [eax+0x6a],al
  405c38:	popa   
  405c39:	cmp    al,BYTE PTR ds:0xf8ec
  405c3e:	mov    bh,0x52
  405c40:	jle    0x405c38
  405c42:	jecxz  0x405c4f
  405c44:	stc    
  405c45:	push   eax
  405c46:	ret    
  405c47:	outs   dx,DWORD PTR ds:[esi]
  405c48:	cmp    BYTE PTR [edx+0x540bff35],al
  405c4e:	imul   edi,DWORD PTR [eax],0xffffffba
  405c51:	push   0x7b895d14
  405c56:	jg     0x405cc2
  405c58:	cmp    ch,BYTE PTR [edx+edx*8]
  405c5b:	psadbw mm1,mm2
  405c5e:	call   0x78460226
  405c63:	out    dx,al
  405c64:	fwait
  405c65:	pushf  
  405c66:	loope  0x405c0a
  405c68:	dec    eax
  405c69:	jg     0x405c6b
  405c6b:	cmp    edx,edx
  405c6d:	pop    ecx
  405c6e:	enter  0xb680,0x1a
  405c72:	arpl   dx,ax
  405c74:	or     DWORD PTR ss:[edi+0x66],0xffffffb2
  405c79:	xor    dl,BYTE PTR [edx+0x6470bb9a]
  405c7f:	pop    ebp
  405c80:	jg     0x405c24
  405c82:	(bad)  
  405c83:	les    esp,FWORD PTR [ebp+eax*4-0x9b44e7e]
  405c8a:	ja     0x405d04
  405c8c:	inc    ebx
  405c8d:	daa    
  405c8e:	arpl   WORD PTR [ebp-0x25021e79],sp
  405c94:	mov    al,0x2d
  405c96:	loopne 0x405cee
  405c98:	mov    ch,0x2d
  405c9a:	cmp    BYTE PTR [ebx+0x6b],0x96
  405c9e:	int    0x68
  405ca0:	shl    DWORD PTR [ebx-0x695bf13d],1
  405ca6:	mov    edx,gs
  405ca8:	enter  0x3c86,0xf2
  405cac:	mov    fs,WORD PTR [ebx]
  405cae:	sar    BYTE PTR [ebx+0x4e],cl
  405cb1:	pop    es
  405cb2:	inc    esp
  405cb3:	in     eax,0xf7
  405cb5:	imul   esi,DWORD PTR ds:0x8e92b2e1,0xffffff97
  405cbc:	popa   
  405cbd:	push   ss
  405cbe:	loop   0x405caa
  405cc0:	test   BYTE PTR [edx-0x5d3eda77],ch
  405cc6:	aam    0xda
  405cc8:	pop    eax
  405cc9:	xchg   ebx,eax
  405cca:	add    BYTE PTR [ebx+eiz*1-0x3b],dl
  405cce:	sbb    esp,DWORD PTR [edi+0x62]
  405cd1:	xor    ah,dl
  405cd3:	repz test eax,0xcea3354a
  405cd9:	popa   
  405cda:	push   ecx
  405cdb:	das    
  405cdc:	sub    al,dh
  405cde:	inc    ebx
  405cdf:	aas    
  405ce0:	adc    al,0x31
  405ce2:	cmp    bl,BYTE PTR [ecx+0x3e]
  405ce5:	sub    eax,DWORD PTR [ebx+0x3d7c2909]
  405ceb:	or     edx,esi
  405ced:	xchg   esi,eax
  405cee:	imul   ebp,DWORD PTR [edx+0x325739ca],0xa8431e08
  405cf8:	adc    edx,edi
  405cfa:	test   DWORD PTR [edi],edi
  405cfc:	clc    
  405cfd:	and    eax,0xfdf009aa
  405d02:	sub    DWORD PTR [ebx],edx
  405d04:	mov    ds:0x1bccd89a,al
  405d09:	popf   
  405d0a:	int3   
  405d0b:	stc    
  405d0c:	sub    edi,ecx
  405d0e:	out    dx,al
  405d0f:	push   ebp
  405d10:	and    eax,0x6f76489f
  405d15:	mov    BYTE PTR [ebx],0x2
  405d18:	ja     0x405d2b
  405d1a:	sahf   
  405d1b:	sub    bl,0x34
  405d1e:	mov    eax,0x9e93cb4e
  405d23:	adc    DWORD PTR [ecx-0x5acd3406],ebx
  405d29:	mov    eax,ds:0x1489098a
  405d2e:	cmp    al,BYTE PTR [edi-0x3edfff0]
  405d34:	mov    esi,0xfb332c1a
  405d39:	jp     0x405d1a
  405d3b:	nop
  405d3c:	jae    0x405d71
  405d3e:	outs   dx,DWORD PTR ds:[esi]
  405d3f:	mov    eax,ds:0x58fa5dd9
  405d44:	xlat   BYTE PTR ds:[ebx]
  405d45:	cs rcr cl,1
  405d48:	data16 clc 
  405d4a:	nop
  405d4b:	in     eax,0xc
  405d4d:	cmp    al,BYTE PTR [ebx]
  405d4f:	add    eax,0x21b2499e
  405d54:	jbe    0x405dc0
  405d56:	add    BYTE PTR [ebx+0x9],bl
  405d59:	xor    DWORD PTR [ebx],0x1f224c8a
  405d5f:	aaa    
  405d60:	add    edi,ebp
  405d62:	lods   eax,DWORD PTR ds:[esi]
  405d63:	loope  0x405dd4
  405d65:	and    al,0xcb
  405d67:	jo     0x405cf5
  405d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d6a:	in     al,0xae
  405d6c:	dec    eax
  405d6d:	out    dx,eax
  405d6e:	xchg   edi,eax
  405d6f:	rcl    DWORD PTR [edx-0x275823c3],0x6c
  405d76:	pop    ebp
  405d77:	test   DWORD PTR [ebx+0x49],ecx
  405d7a:	jne    0x405d9c
  405d7c:	jns    0x405df3
  405d7e:	inc    edi
  405d7f:	jg     0x405d23
  405d81:	clc    
  405d82:	in     eax,dx
  405d83:	int    0xc2
  405d85:	add    DWORD PTR [ebp+eiz*2-0x70],edx
  405d89:	xchg   ecx,eax
  405d8a:	dec    esi
  405d8b:	daa    
  405d8c:	jnp    0x405dea
  405d8e:	icebp  
  405d8f:	in     eax,0xc9
  405d91:	mov    ebp,0x99c80794
  405d96:	(bad)
  405d9a:	push   0xffffff8b
  405d9c:	dec    ecx
  405d9d:	jno    0x405d78
  405d9f:	das    
  405da0:	cmc    
  405da1:	sbb    edx,esi
  405da3:	jne    0x405d41
  405da5:	xor    DWORD PTR [edi],edx
  405da7:	int3   
  405da8:	test   esp,eax
  405daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dab:	fst    DWORD PTR [esi]
  405dad:	rep ins BYTE PTR es:[edi],dx
  405daf:	rol    DWORD PTR [eax+0x5226f3f1],cl
  405db5:	push   esp
  405db6:	mov    bh,0x1d
  405db8:	outs   dx,DWORD PTR ds:[esi]
  405db9:	sbb    ah,dh
  405dbb:	out    0x8,eax
  405dbd:	xor    BYTE PTR [ebx],al
  405dbf:	xlat   BYTE PTR ds:[ebx]
  405dc0:	repnz mov dh,0x7d
  405dc3:	test   BYTE PTR [ecx],dl
  405dc5:	dec    esp
  405dc6:	inc    esp
  405dc7:	and    DWORD PTR [ebx-0x973e158],0xbe0e506a
  405dd1:	pop    ss
  405dd2:	push   ds
  405dd3:	mov    WORD PTR [eax+0x3b0f9090],?
  405dd9:	jne    0x405dc9
  405ddb:	(bad)  [edx]
  405ddd:	call   0x6359429
  405de2:	loopne 0x405dc5
  405de4:	jle    0x405e26
  405de6:	jns    0x405dc7
  405de8:	and    edx,esi
  405dea:	outs   dx,DWORD PTR ds:[esi]
  405deb:	jge    0x405e67
  405ded:	aad    0xb2
  405def:	and    DWORD PTR ds:0x180baef3,0x23
  405df6:	in     eax,0xc4
  405df8:	pop    ebp
  405df9:	xor    ch,BYTE PTR [edx]
  405dfb:	push   ds
  405dfc:	int3   
  405dfd:	or     ebx,ecx
  405dff:	xor    eax,0xfc7fd0d8
  405e04:	xchg   ebp,eax
  405e05:	push   es
  405e06:	daa    
  405e07:	mov    ah,0x8b
  405e09:	push   edx
  405e0a:	xchg   edx,eax
  405e0b:	addr16 icebp 
  405e0d:	outs   dx,DWORD PTR ds:[esi]
  405e0e:	dec    ebp
  405e0f:	inc    ecx
  405e10:	cmp    eax,0x7d5fafc2
  405e15:	outs   dx,DWORD PTR ds:[esi]
  405e16:	mov    al,0x6d
  405e18:	jecxz  0x405dfa
  405e1a:	xchg   edx,eax
  405e1b:	mov    dl,bl
  405e1d:	mov    dh,0x40
  405e1f:	xchg   ebp,eax
  405e20:	jmp    FWORD PTR [edi-0x40b21467]
  405e26:	mov    ebp,0xe2d90cd5
  405e2b:	imul   ebx,ecx,0x1f
  405e2e:	jae    0x405eaf
  405e30:	scas   al,BYTE PTR es:[edi]
  405e31:	cdq    
  405e32:	ret    
  405e33:	out    dx,eax
  405e34:	and    al,0xf8
  405e36:	add    BYTE PTR [edx+ebp*1-0x6cd46e7f],bh
  405e3d:	push   ds
  405e3e:	jno    0x405e54
  405e40:	in     eax,0x50
  405e42:	dec    edi
  405e43:	sub    DWORD PTR [ebp-0x6d9e7f2c],0xc21681a7
  405e4d:	mov    ch,BYTE PTR [esi]
  405e4f:	out    dx,al
  405e50:	adc    DWORD PTR [ecx+0x100863bd],esi
  405e56:	push   ebx
  405e57:	cmp    bh,BYTE PTR [edx-0x3]
  405e5a:	ins    DWORD PTR es:[edi],dx
  405e5b:	mov    cl,0xbb
  405e5d:	cmp    ebx,ebp
  405e5f:	lahf   
  405e60:	jb     0x405e00
  405e62:	retf   
  405e63:	out    0x29,al
  405e65:	ss pop ebx
  405e67:	lock push 0xffffffe0
  405e6a:	push   edi
  405e6b:	mov    eax,0xff388032
  405e70:	ret    
  405e71:	pop    ebp
  405e72:	loope  0x405ea7
  405e74:	sbb    BYTE PTR [eax+0x37],cl
  405e77:	in     al,dx
  405e78:	lahf   
  405e79:	scas   eax,DWORD PTR es:[edi]
  405e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e7b:	add    DWORD PTR [ecx-0x5edbaad2],0x72631302
  405e85:	mov    esi,0xaa495144
  405e8a:	and    cl,BYTE PTR [edi+0x38]
  405e8d:	stos   BYTE PTR es:[edi],al
  405e8e:	or     DWORD PTR [ecx-0x32d69bd6],esp
  405e94:	ret    
  405e95:	xchg   esp,eax
  405e96:	pop    ds
  405e97:	jmp    0x929e:0xc3903f38
  405e9e:	sbb    al,0x2b
  405ea0:	push   es
  405ea1:	mov    ds:0x23bca865,al
  405ea6:	int    0x14
  405ea8:	mov    dh,0x6b
  405eaa:	hlt    
  405eab:	das    
  405eac:	jecxz  0x405eae
  405eae:	fcmove st,st(7)
  405eb0:	pop    ds
  405eb1:	test   eax,0x339a8f7e
  405eb6:	mov    ebp,0xd9d54f48
  405ebb:	xchg   si,ax
  405ebd:	stc    
  405ebe:	add    al,dl
  405ec0:	dec    esp
  405ec1:	and    ebp,ebp
  405ec3:	into   
  405ec4:	xor    eax,0x82b2bf77
  405ec9:	lahf   
  405eca:	daa    
  405ecb:	addr16 clc 
  405ecd:	loop   0x405eec
  405ecf:	fucomi st,st(1)
  405ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ed2:	sbb    edi,ebp
  405ed4:	sub    cl,BYTE PTR [ebx-0x6fddb5b]
  405eda:	test   DWORD PTR [edi+eax*8],ebx
  405edd:	push   esi
  405ede:	mov    ecx,0x48a693bf
  405ee3:	add    BYTE PTR [ebx-0x3c],cl
  405ee6:	ins    DWORD PTR es:[edi],dx
  405ee7:	sahf   
  405ee8:	(bad)  
  405ee9:	enter  0x825d,0x92
  405eed:	xor    DWORD PTR [edi+0x222e0c51],ecx
  405ef3:	cwde   
  405ef4:	adc    eax,0xe9d38c67
  405ef9:	imul   ebx,DWORD PTR [ebp+0x14d2ffab],0xffffff8c
  405f00:	rcl    DWORD PTR [edi*4-0x7260849b],0x8e
  405f08:	push   ss
  405f09:	mov    DWORD PTR [edx-0x35],ecx
  405f0c:	pop    esi
  405f0d:	xchg   ebp,eax
  405f0e:	lods   eax,DWORD PTR ds:[esi]
  405f0f:	sub    BYTE PTR [ecx],ah
  405f11:	lods   eax,DWORD PTR ds:[esi]
  405f12:	push   cs
  405f13:	cld    
  405f14:	sbb    DWORD PTR [ecx-0x4a],0x56
  405f18:	jmp    0xafeaedd5
  405f1d:	xor    BYTE PTR es:[ebx+ebp*4],0xcb
  405f22:	inc    esi
  405f23:	dec    eax
  405f24:	xchg   ecx,eax
  405f25:	xor    esp,eax
  405f27:	add    dh,BYTE PTR [edi+0x7d]
  405f2a:	push   es
  405f2b:	jne    0x405f88
  405f2d:	xchg   ebp,eax
  405f2e:	shl    ebx,0x99
  405f31:	frndint 
  405f33:	scas   al,BYTE PTR es:[edi]
  405f34:	push   ebx
  405f35:	(bad)  
  405f36:	mov    eax,0xba8caba1
  405f3b:	loope  0x405f96
  405f3d:	inc    esp
  405f3e:	pop    esi
  405f3f:	xor    al,0xcb
  405f41:	es fwait
  405f43:	sub    ebp,ebx
  405f45:	and    eax,0xd27ce48f
  405f4a:	dec    ebx
  405f4b:	loop   0x405f1e
  405f4d:	and    cl,BYTE PTR [edx]
  405f4f:	sbb    eax,0x3d46e74f
  405f54:	push   ebp
  405f55:	jmp    0xcd8bfcbd
  405f5a:	pop    esi
  405f5b:	out    0x8b,eax
  405f5d:	add    DWORD PTR [edi],ebx
  405f5f:	test   DWORD PTR [ecx*8-0x4eda76f1],esp
  405f66:	and    dl,ah
  405f68:	loope  0x405fde
  405f6a:	stc    
  405f6b:	xchg   ebx,eax
  405f6c:	(bad)  
  405f6d:	xchg   ebp,eax
  405f6e:	sahf   
  405f6f:	cmp    DWORD PTR [ecx+0x35],esp
  405f72:	scas   al,BYTE PTR es:[edi]
  405f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f74:	xchg   edi,eax
  405f75:	fld    TBYTE PTR [ecx]
  405f77:	enter  0x5510,0x20
  405f7b:	sbb    eax,0x29b936ab
  405f80:	ins    DWORD PTR es:[edi],dx
  405f81:	push   0xca4c5eed
  405f86:	cdq    
  405f87:	adc    DWORD PTR [ebp+0x74c27627],esp
  405f8d:	aaa    
  405f8e:	mov    esp,0x61101a04
  405f93:	pop    edi
  405f94:	mov    al,0xa5
  405f96:	mov    DWORD PTR [edx],eax
  405f98:	pop    esi
  405f99:	aaa    
  405f9a:	and    BYTE PTR [edi-0xbbba138],al
  405fa0:	adc    dl,dh
  405fa2:	loopne 0x405fa5
  405fa4:	push   esi
  405fa5:	retf   
  405fa6:	xlat   BYTE PTR ds:[ebx]
  405fa7:	out    dx,al
  405fa8:	mov    al,ds:0x17fc46d4
  405fad:	cmc    
  405fae:	cld    
  405faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb0:	adc    DWORD PTR [esi],ecx
  405fb2:	xor    eax,0x6c7d4d31
  405fb7:	lods   al,BYTE PTR ds:[esi]
  405fb8:	push   edi
  405fb9:	inc    edx
  405fba:	xchg   DWORD PTR [eax+0x4c],ecx
  405fbd:	or     dh,BYTE PTR [ebx-0x7c]
  405fc0:	sub    eax,0xf0c7e0be
  405fc5:	inc    eax
  405fc6:	inc    ecx
  405fc7:	add    DWORD PTR [eax-0x2534dd44],edi
  405fcd:	call   0x3696:0xbf612750
  405fd4:	lock push ebp
  405fd6:	sub    esp,DWORD PTR [edx+edx*2+0x16373a83]
  405fdd:	push   ebp
  405fde:	mov    ch,0xbf
  405fe0:	les    ecx,FWORD PTR [ebx-0x64583568]
  405fe6:	mov    ecx,0xf9687b2d
  405feb:	div    esp
  405fed:	xor    al,0x78
  405fef:	stos   BYTE PTR es:[edi],al
  405ff0:	sbb    BYTE PTR [edx+ebp*2-0x283c765c],ah
  405ff7:	popf   
  405ff8:	add    eax,0xd609cd4e
  405ffd:	(bad)  
  405ffe:	gs addr16 pop ebx
  406001:	sbb    ecx,DWORD PTR [edx*4+0x3570fd08]
  406008:	add    ch,BYTE PTR [eax-0x5b]
  40600b:	jbe    0x406053
  40600d:	inc    ecx
  40600e:	mov    eax,ds:0xa51c9a9
  406013:	jp     0x405f9c
  406015:	pop    es
  406016:	mov    ebp,0x5fdd567e
  40601b:	cmp    eax,0x1cfcf1a1
  406020:	inc    edx
  406021:	addr16 shl eax,1
  406024:	xchg   edx,eax
  406025:	mov    bl,0x32
  406027:	cmp    DWORD PTR [edx-0x34b082bb],ecx
  40602d:	popa   
  40602e:	in     eax,dx
  40602f:	fisub  WORD PTR [ebx+eax*1-0x32637c48]
  406036:	ret    0x6878
  406039:	push   es
  40603a:	sar    ch,0x1a
  40603d:	or     BYTE PTR [edx+ecx*2+0x7],al
  406041:	push   esi
  406042:	adc    al,0x44
  406044:	(bad)  
  406045:	jmp    0xbe9d:0x72aa6ab9
  40604c:	and    dl,BYTE PTR [ebp-0x4f]
  40604f:	inc    ebx
  406050:	rol    BYTE PTR [ebp-0x59],1
  406053:	push   esp
  406054:	out    dx,eax
  406055:	stc    
  406056:	out    0x65,al
  406058:	sbb    eax,0x58770e24
  40605d:	mov    BYTE PTR [ebx],ah
  40605f:	mov    cl,0x50
  406061:	sbb    al,0xb6
  406063:	mov    cl,0x17
  406065:	int    0x7f
  406067:	inc    ebx
  406068:	pop    ss
  406069:	rcl    BYTE PTR [ecx+0x8b0014c],1
  40606f:	fist   DWORD PTR [edx+0x7e44ee38]
  406075:	mov    ah,ah
  406077:	cdq    
  406078:	xchg   esi,eax
  406079:	dec    esp
  40607a:	add    cl,ch
  40607c:	pop    edx
  40607d:	mov    ebp,0x2a3bbe70
  406082:	jns    0x4060b3
  406084:	dec    ebx
  406085:	adc    eax,0x9e132b6c
  40608a:	xchg   DWORD PTR [esi+0x1b374108],ecx
  406090:	lds    esp,FWORD PTR [edx+ecx*1]
  406093:	fidivr DWORD PTR [ecx-0x62]
  406096:	jnp    0x406038
  406098:	push   cs
  406099:	jmp    0x95af:0x8b221e32
  4060a0:	fadd   QWORD PTR [edx+0x7e]
  4060a3:	push   cs
  4060a4:	mov    ecx,0xeb023954
  4060a9:	and    edi,DWORD PTR [edi-0x1319f451]
  4060af:	cli    
  4060b0:	inc    ebx
  4060b1:	mov    ebp,0xe8c5a661
  4060b6:	call   0xb7d6:0x32013748
  4060bd:	inc    esp
  4060be:	mov    bl,BYTE PTR [edx+ebx*8-0x39]
  4060c2:	add    BYTE PTR [edi+0x1c0fad74],bh
  4060c8:	jne    0x4060a8
  4060ca:	call   0x28fdac77
  4060cf:	and    DWORD PTR [ebx],esi
  4060d1:	cli    
  4060d2:	ret    
  4060d3:	sahf   
  4060d4:	lock or ch,dh
  4060d7:	(bad)  
  4060d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060d9:	cmp    eax,0x22dbd073
  4060de:	and    al,0x8e
  4060e0:	xchg   ecx,eax
  4060e1:	shr    edx,cl
  4060e3:	inc    edi
  4060e4:	inc    edx
  4060e5:	mov    cl,0x28
  4060e7:	adc    al,0x5b
  4060e9:	adc    ebp,DWORD PTR [edi]
  4060eb:	adc    eax,0x39bd55dd
  4060f0:	push   ss
  4060f1:	mov    ds:0x402f84d2,eax
  4060f6:	xlat   BYTE PTR ds:[ebx]
  4060f7:	(bad)  
  4060f8:	in     al,dx
  4060f9:	and    ebx,DWORD PTR ss:[eax+eiz*2]
  4060fd:	lds    edx,FWORD PTR [edi+0x15]
  406100:	mov    ds:0xd933a49e,eax
  406105:	ins    BYTE PTR es:[edi],dx
  406106:	cmp    cl,BYTE PTR [eax+0x458b1a04]
  40610c:	ror    BYTE PTR [ebx-0x39cc27ab],0x33
  406113:	(bad)  
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	lea    edx,ss:[esi+0x64]
  406890:	adc    edi,DWORD PTR ds:0x5e0c8383
  406896:	add    DWORD PTR [ebx-0x2e366ac],0xffffffcf
  40689d:	mov    ch,0x42
  40689f:	xor    BYTE PTR [edi-0x29f7e15],bh
  4068a5:	int    0xb8
  4068a7:	mov    BYTE PTR [eax],cl
  4068a9:	mov    dl,0xfe
  4068ab:	and    eax,DWORD PTR [ecx]
  4068ad:	jmp    0x406896
  4068af:	aas    
  4068b0:	pop    ebp
  4068b1:	iret   
  4068b2:	adc    BYTE PTR [eax+ebp*4],0xe2
  4068b6:	xchg   esi,eax
  4068b7:	mov    BYTE PTR [ebx-0x56],al
  4068ba:	(bad)  
  4068bb:	push   esp
  4068bc:	or     esp,0x65
  4068bf:	push   es
  4068c0:	jo     0x406898
  4068c2:	loopne 0x4068e2
  4068c4:	test   al,0xa2
  4068c6:	push   0x8925fb7a
  4068cb:	rol    BYTE PTR [ebp-0x457d0a2],cl
  4068d1:	jge    0x406938
  4068d3:	popf   
  4068d4:	and    edi,DWORD PTR [ebx-0x1c]
  4068d7:	xchg   DWORD PTR [edi],ecx
  4068d9:	sbb    eax,0x6631ecc2
  4068de:	jne    0x4068f5
  4068e0:	xchg   edx,edx
  4068e2:	ret    0x720b
  4068e5:	cmp    eax,0xccb10005
  4068ea:	stc    
  4068eb:	stc    
  4068ec:	xchg   ebp,eax
  4068ed:	mov    ecx,0xb871fde
  4068f2:	cs (bad) 
  4068f4:	mov    ebx,eax
  4068f6:	cmp    eax,0xaaceb01d
  4068fb:	push   ebx
  4068fc:	add    al,0x22
  4068fe:	daa    
  4068ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406900:	adc    BYTE PTR [edi],cl
  406902:	mov    ebx,0x1c984462
  406907:	call   0x5614:0x4f401bf0
  40690e:	(bad)  
  40690f:	pop    eax
  406910:	(bad)  
  406911:	mov    dl,0xb0
  406913:	adc    ecx,DWORD PTR [eax]
  406915:	pop    esp
  406916:	sub    al,0x12
  406918:	sbb    bh,BYTE PTR [ecx-0x298f6525]
  40691e:	pop    ebx
  40691f:	shl    DWORD PTR [esi+esi*4-0x4d76e93],0xeb
  406927:	or     ecx,DWORD PTR [edx]
  406929:	add    DWORD PTR [esi+0x30],ebx
  40692c:	out    0x39,eax
  40692e:	push   0x8839622a
  406933:	and    esp,esi
  406935:	dec    esi
  406936:	add    DWORD PTR [esi-0x16],edx
  406939:	sti    
  40693a:	popf   
  40693b:	lds    eax,FWORD PTR [edx-0x22]
  40693e:	loop   0x4068e2
  406940:	fdivr  QWORD PTR [edi-0x1e1c9002]
  406946:	jno    0x4068fa
  406948:	adc    BYTE PTR [ebp+0x31aed656],bl
  40694e:	jmp    0x6d5ce8fd
  406953:	lods   al,BYTE PTR ds:[esi]
  406954:	(bad)  
  406955:	cmp    DWORD PTR [edi+0x11],esi
  406958:	pop    ebx
  406959:	mov    dh,0xc6
  40695b:	je     0x4069cf
  40695d:	(bad)  
  40695e:	fld    TBYTE PTR [edx]
  406960:	pop    ebp
  406961:	xor    BYTE PTR [esi-0x73],0xaf
  406965:	pop    esi
  406966:	or     cl,ah
  406968:	out    dx,al
  406969:	xchg   esp,eax
  40696a:	push   ebx
  40696b:	dec    ebp
  40696c:	inc    edi
  40696d:	lods   al,BYTE PTR ds:[esi]
  40696e:	mov    ch,0x20
  406970:	add    al,0x62
  406972:	sub    BYTE PTR [edi-0x37bda3ce],dl
  406978:	stos   BYTE PTR es:[edi],al
  406979:	jns    0x406916
  40697b:	jo     0x406996
  40697d:	push   edx
  40697e:	dec    edx
  40697f:	enter  0x18fd,0x29
  406983:	shr    bh,1
  406985:	ds xor ch,dh
  406988:	push   ebp
  406989:	fs test ch,bl
  40698c:	inc    ebx
  40698d:	jbe    0x4069a1
  40698f:	imul   esp,DWORD PTR [edx-0x55],0x7a
  406993:	lods   al,BYTE PTR ds:[esi]
  406994:	pop    es
  406995:	pop    esp
  406996:	jno    0x40699c
  406998:	and    edi,edx
  40699a:	sub    cl,BYTE PTR ds:0x37423a57
  4069a0:	and    eax,0x3c79d9e
  4069a5:	gs arpl cx,dx
  4069a8:	or     bl,dl
  4069aa:	sub    ebp,ebx
  4069ac:	inc    ebx
  4069ad:	cwde   
  4069ae:	mov    WORD PTR [ebp+0x470c6bc1],?
  4069b4:	jb     0x40697e
  4069b6:	ds xchg edx,eax
  4069b8:	(bad)  
  4069b9:	or     edi,ebp
  4069bb:	and    eax,DWORD PTR [ebp-0x6f]
  4069be:	test   DWORD PTR [ecx+0x47],eax
  4069c1:	xor    BYTE PTR [ebx+esi*2],dl
  4069c4:	sub    al,0x9a
  4069c6:	ficom  DWORD PTR ds:0xd1108085
  4069cc:	adc    eax,0x1eebfb91
  4069d1:	lods   eax,DWORD PTR ds:[esi]
  4069d2:	lds    ebx,FWORD PTR ds:0x5513933c
  4069d8:	aam    0xf6
  4069da:	pop    es
  4069db:	xlat   BYTE PTR ds:[ebx]
  4069dc:	das    
  4069dd:	fstp   DWORD PTR [ebx+0x56]
  4069e0:	inc    esp
  4069e1:	in     al,dx
  4069e2:	mov    ecx,0xfc65362d
  4069e7:	out    0x3a,al
  4069e9:	pop    ebx
  4069ea:	iret   
  4069eb:	mov    esi,0x87464266
  4069f0:	stos   BYTE PTR es:[edi],al
  4069f1:	jb     0x406a31
  4069f3:	jl     0x406a28
  4069f5:	pop    ds
  4069f6:	cmc    
  4069f7:	xor    DWORD PTR [ebp+0x53e71ca1],0x795e512b
  406a01:	dec    esi
  406a02:	loope  0x406990
  406a04:	fiadd  DWORD PTR [ecx]
  406a06:	nop
  406a07:	fld    QWORD PTR [esi]
  406a09:	or     al,0x4d
  406a0b:	cmp    ecx,DWORD PTR [edx]
  406a0d:	cmp    bh,BYTE PTR [ecx-0x3c]
  406a10:	jns    0x406a52
  406a12:	outs   dx,BYTE PTR ds:[esi]
  406a13:	sti    
  406a14:	adc    eax,0x7320050b
  406a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a1a:	mov    ch,BYTE PTR [esi+eax*2-0x74]
  406a1e:	mov    edi,0xc87e1a4a
  406a23:	pop    es
  406a24:	jge    0x4069d5
  406a26:	sbb    ah,BYTE PTR [ebx-0x3b5bfe1c]
  406a2c:	neg    DWORD PTR [edx-0x58]
  406a2f:	pop    edx
  406a30:	inc    ebp
  406a31:	xchg   edx,eax
  406a32:	pop    ss
  406a33:	push   ebx
  406a34:	(bad)  
  406a35:	mov    esi,0x6653f7e3
  406a3a:	jbe    0x4069d1
  406a3c:	pop    eax
  406a3d:	pop    ss
  406a3e:	push   ebp
  406a3f:	pop    ecx
  406a40:	retf   0x3425
  406a43:	inc    edx
  406a44:	dec    ebp
  406a45:	pop    esp
  406a46:	js     0x406a85
  406a48:	mov    bl,0x54
  406a4a:	push   0xdf5016fb
  406a4f:	push   0xf9a20443
  406a54:	mov    esp,cs
  406a56:	retf   0x6abb
  406a59:	out    dx,al
  406a5a:	pusha  
  406a5b:	add    ch,ch
  406a5d:	push   ebx
  406a5e:	xor    esi,DWORD PTR [edx-0x469b2b90]
  406a64:	xor    eax,0xd3bfba1f
  406a69:	neg    BYTE PTR [edi-0x3078add1]
  406a6f:	mov    ebx,0xa967baa4
  406a74:	push   0x7b
  406a76:	mov    esp,0xe4962d55
  406a7b:	push   ecx
  406a7c:	sar    DWORD PTR [ebx-0x61592f3],1
  406a82:	push   0x5d4aecc7
  406a87:	adc    dl,al
  406a89:	pop    ds
  406a8a:	sub    ah,BYTE PTR [ebx]
  406a8c:	and    dl,bl
  406a8e:	sbb    ebp,ecx
  406a90:	and    eax,0x93f396ed
  406a95:	sbb    edx,edx
  406a97:	pop    esi
  406a98:	sub    al,BYTE PTR [edx]
  406a9a:	fld    TBYTE PTR [ebx]
  406a9c:	ja     0x406a20
  406a9e:	or     esp,DWORD PTR [esp+esi*2]
  406aa1:	retf   0x8183
  406aa4:	xchg   ecx,eax
  406aa5:	xlat   BYTE PTR ds:[ebx]
  406aa6:	(bad)
  406aaa:	jmp    0x7c2f:0x930fa16a
  406ab1:	not    DWORD PTR [esp+ebp*4+0x24]
  406ab5:	pusha  
  406ab6:	jl     0x406ab7
  406ab8:	in     al,0xc
  406aba:	aad    0x20
  406abc:	dec    esi
  406abd:	pop    eax
  406abe:	(bad)  
  406abf:	or     DWORD PTR [ecx+0xabb73c],ebx
  406ac5:	inc    ebx
  406ac6:	addr16 jno 0x406a81
  406ac9:	int    0xdd
  406acb:	sar    ecx,1
  406acd:	inc    ebx
  406ace:	dec    eax
  406acf:	cdq    
  406ad0:	cmp    esp,DWORD PTR [eax+ebp*2]
  406ad3:	mov    ecx,0xa4130bf5
  406ad8:	imul   ebx,DWORD PTR [eax],0x1e037d7e
  406ade:	add    al,0xc0
  406ae0:	xchg   esp,eax
  406ae1:	push   esp
  406ae2:	xor    cl,BYTE PTR ds:0x7d33d486
  406ae8:	xlat   BYTE PTR ds:[ebx]
  406ae9:	jns    0x406a8d
  406aeb:	aaa    
  406aec:	imul   edi,DWORD PTR [eax-0x15734225],0xfffffff3
  406af3:	rol    al,cl
  406af5:	xchg   ecx,eax
  406af6:	mov    esp,0x64528ed7
  406afb:	cli    
  406afc:	lds    esi,FWORD PTR [ebx-0x7a4888e3]
  406b02:	fisub  DWORD PTR [eax+0x74]
  406b05:	ins    DWORD PTR es:[edi],dx
  406b06:	retf   
  406b07:	bound  edi,QWORD PTR ds:0xab6342da
  406b0d:	je     0x406b8d
  406b0f:	repnz dec eax
  406b11:	test   eax,0xebbcb468
  406b16:	sar    BYTE PTR [ebx-0x45],cl
  406b19:	jecxz  0x406b43
  406b1b:	jae    0x406b4c
  406b1d:	inc    edi
  406b1e:	and    DWORD PTR [edi+0x71d9292c],0x1b5757ce
  406b28:	cmp    ebx,esi
  406b2a:	jb     0x406abf
  406b2c:	daa    
  406b2d:	cmp    esi,ecx
  406b2f:	inc    edx
  406b30:	mov    eax,0x160bd7da
  406b35:	sti    
  406b36:	inc    ebp
  406b37:	icebp  
  406b38:	ins    BYTE PTR es:[edi],dx
  406b39:	test   al,0xc3
  406b3b:	(bad)  [ecx]
  406b3d:	es fld1 
  406b40:	inc    edx
  406b41:	scas   eax,DWORD PTR es:[edi]
  406b42:	shl    DWORD PTR [ebx+0x4e9e3b19],cl
  406b48:	jnp    0x406b09
  406b4a:	sub    BYTE PTR [ebx+0x45],dl
  406b4d:	cdq    
  406b4e:	retf   
  406b4f:	lea    ebx,[edx-0x7a9e99ca]
  406b55:	push   ebp
  406b56:	sub    eax,0xbffbe14d
  406b5b:	retf   0xf29e
  406b5e:	push   ss
  406b5f:	add    edx,eax
  406b61:	adc    BYTE PTR [ebp+0x22],ah
  406b64:	push   ebp
  406b65:	cmp    eax,0xc5826c58
  406b6a:	push   edx
  406b6b:	lahf   
  406b6c:	sub    eax,0x73e27672
  406b71:	and    edx,DWORD PTR [eax]
  406b73:	xchg   BYTE PTR [esi-0x4b579a8e],ah
  406b79:	inc    edx
  406b7a:	mov    al,0x15
  406b7c:	(bad)
  406b80:	push   ss
  406b81:	pop    edi
  406b82:	sbb    al,0x25
  406b84:	xor    BYTE PTR [esi-0x51],dl
  406b87:	and    al,0xc
  406b89:	xchg   ecx,eax
  406b8a:	xor    BYTE PTR [ebx],ch
  406b8c:	pop    ds
  406b8d:	adc    ebp,DWORD PTR [eax]
  406b8f:	sub    bh,BYTE PTR [eax-0x56357a1c]
  406b95:	and    al,0x14
  406b97:	rol    DWORD PTR [ecx],0x7d
  406b9a:	push   cs
  406b9b:	lods   al,BYTE PTR ds:[esi]
  406b9c:	cmp    edx,DWORD PTR [ebx+0x22]
  406b9f:	inc    edi
  406ba0:	(bad)  
  406ba1:	pop    edi
  406ba2:	and    eax,0x80c09fec
  406ba7:	pop    ecx
  406ba8:	scas   eax,DWORD PTR es:[edi]
  406ba9:	dec    ecx
  406baa:	mov    bh,0xd2
  406bac:	adc    DWORD PTR [esi],esi
  406bae:	xor    ebx,DWORD PTR [esi+edx*2+0x57]
  406bb2:	leave  
  406bb3:	out    dx,al
  406bb4:	loope  0x406bcb
  406bb6:	xchg   edx,eax
  406bb7:	pop    es
  406bb8:	outs   dx,BYTE PTR ds:[esi]
  406bb9:	rcl    BYTE PTR [ecx],cl
  406bbb:	sbb    eax,0xcfdde9cd
  406bc0:	mov    bh,cl
  406bc2:	xor    DWORD PTR [ecx-0x39],edi
  406bc5:	(bad)  
  406bc6:	(bad)  
  406bc7:	mov    eax,0x30c4166
  406bcc:	les    eax,FWORD PTR [ebx]
  406bce:	cmp    ch,cl
  406bd0:	(bad)  
  406bd1:	xchg   ebp,eax
  406bd2:	test   eax,0xc5935788
  406bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd8:	sbb    esp,eax
  406bda:	add    BYTE PTR [ebp-0x4],0x7
  406bde:	sub    al,0x35
  406be0:	and    ebp,DWORD PTR [edi+0x2f2b50fc]
  406be6:	mov    dl,0xc6
  406be8:	fidivr DWORD PTR [esi-0x56be0faf]
  406bee:	sub    al,0xf
  406bf0:	mov    cl,0xf8
  406bf2:	or     al,0xa8
  406bf4:	cmp    cl,dh
  406bf6:	jae    0x406bc2
  406bf8:	cmp    al,0xb
  406bfa:	shr    BYTE PTR [esi],1
  406bfc:	in     eax,dx
  406bfd:	cmc    
  406bfe:	mov    ebp,0xfcdb938c
  406c03:	xchg   ebp,eax
  406c04:	mov    BYTE PTR [ebx],bh
  406c06:	neg    DWORD PTR [eax]
  406c08:	push   0x11a15191
  406c0d:	fst    QWORD PTR [ecx+0x31947ed2]
  406c13:	push   0x2a62cab2
  406c18:	push   ebp
  406c19:	jmp    0xd13a:0xfa0aa163
  406c20:	cdq    
  406c21:	sub    bl,bl
  406c23:	pop    es
  406c24:	mov    dl,0x96
  406c26:	or     eax,0xb2a628d
  406c2b:	cdq    
  406c2c:	adc    al,BYTE PTR [ebx]
  406c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c2f:	es ins BYTE PTR es:[edi],dx
  406c31:	add    eax,0x7a4cf28d
  406c36:	shl    DWORD PTR [eax-0x7906f752],cl
  406c3c:	ja     0x406cb2
  406c3e:	sbb    edx,edi
  406c40:	adc    DWORD PTR [esp+esi*2+0x7c23dd23],eax
  406c47:	or     al,0x34
  406c49:	enter  0x1707,0x3e
  406c4d:	lea    edx,ds:[esp+eax*1]
  406c51:	dec    esi
  406c52:	inc    ecx
  406c53:	sub    esp,DWORD PTR fs:[ebp-0x26]
  406c57:	add    DWORD PTR [esi+0x265cbd6d],ebp
  406c5d:	sti    
  406c5e:	aas    
  406c5f:	ficomp DWORD PTR [ecx+0x23adb3db]
  406c65:	mov    edx,0x8ecdcfa9
  406c6b:	mov    ecx,0xebbaa73f
  406c70:	scas   eax,DWORD PTR es:[edi]
  406c71:	lods   al,BYTE PTR ds:[esi]
  406c72:	(bad)  
  406c73:	sub    esi,ecx
  406c75:	out    dx,al
  406c76:	outs   dx,DWORD PTR ds:[esi]
  406c77:	adc    DWORD PTR ds:0x45cdc3f7,ebp
  406c7d:	loope  0x406cae
  406c7f:	aas    
  406c80:	cmp    BYTE PTR [esi+ebp*8+0x79],al
  406c84:	jmp    DWORD PTR ds:0x86c42935
  406c8a:	cmp    al,0xb1
  406c8c:	fs loop 0x406ca3
  406c8f:	sahf   
  406c90:	dec    edi
  406c91:	pop    esp
  406c92:	pop    eax
  406c93:	mov    eax,0x2f822c2b
  406c98:	push   es
  406c99:	sub    eax,0x755cdc6c
  406c9e:	lods   al,BYTE PTR ds:[esi]
  406c9f:	jecxz  0x406cf0
  406ca1:	pop    ss
  406ca2:	adc    DWORD PTR [edx+0x3e247cc8],eax
  406ca8:	aas    
  406ca9:	mov    al,0xdb
  406cab:	sbb    DWORD PTR [esp+ebx*8-0x75d3aa80],esi
  406cb2:	fdivr  st,st(2)
  406cb4:	leave  
  406cb5:	sbb    eax,0x5c96ae72
  406cba:	mul    edx
  406cbc:	cwde   
  406cbd:	stc    
  406cbe:	or     eax,DWORD PTR [esi]
  406cc0:	lods   al,BYTE PTR ds:[esi]
  406cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cc2:	(bad)  
  406cc3:	mov    esp,0x7f785ef8
  406cc8:	or     DWORD PTR [esi+0x3b],esi
  406ccb:	aaa    
  406ccc:	stos   DWORD PTR es:[edi],eax
  406ccd:	pop    ebx
  406cce:	in     eax,0xe5
  406cd0:	std    
  406cd1:	ffreep st(2)
  406cd3:	sbb    dh,0x1c
  406cd6:	add    BYTE PTR [edi-0x6d],bh
  406cd9:	jmp    0xe479:0x11c31163
  406ce0:	ins    DWORD PTR es:[edi],dx
  406ce1:	xor    ch,BYTE PTR [eax-0x55]
  406ce4:	sub    bh,BYTE PTR [ecx+edx*8+0x4ada407d]
  406ceb:	xor    cl,BYTE PTR [edi+0x55]
  406cee:	les    eax,FWORD PTR [ebx+0x326143f]
  406cf4:	enter  0x9f3f,0x83
  406cf8:	cmp    eax,0x9baa591
  406cfd:	scas   al,BYTE PTR es:[edi]
  406cfe:	pop    ebx
  406cff:	out    dx,eax
  406d00:	std    
  406d01:	push   cs
  406d02:	jno    0x406cdd
  406d04:	mov    esp,0xb3efbe40
  406d09:	enter  0x5826,0x71
  406d0d:	dec    ebx
  406d0e:	dec    eax
  406d0f:	push   edx
  406d10:	inc    esp
  406d11:	mov    esi,0xc44d371c
  406d16:	mov    eax,0x909eab7f
  406d1b:	cld    
  406d1c:	fwait
  406d1d:	jno    0x406d20
  406d1f:	mov    edx,esi
  406d21:	sbb    eax,0xa230bb36
  406d26:	jbe    0x406d96
  406d28:	cmc    
  406d29:	pop    edx
  406d2a:	xchg   edi,eax
  406d2b:	aam    0x1c
  406d2d:	into   
  406d2e:	(bad)  
  406d2f:	mov    es,WORD PTR [ebp-0x78]
  406d32:	dec    eax
  406d33:	lea    esi,[ebx]
  406d35:	pushf  
  406d36:	(bad)  
  406d37:	(bad)  
  406d38:	out    0xd2,al
  406d3a:	xor    al,0x13
  406d3c:	adc    esp,DWORD PTR [ecx-0x7de8b4d6]
  406d42:	mov    eax,ebp
  406d44:	pop    edx
  406d45:	xor    eax,0x6c212ee5
  406d4a:	mov    esp,ebp
  406d4c:	ds xchg esi,eax
  406d4e:	xor    bh,0xa8
  406d51:	fwait
  406d52:	mov    ecx,0x802004fa
  406d57:	lds    eax,FWORD PTR [ebx]
  406d59:	mov    ah,0xa7
  406d5c:	daa    
  406d5d:	xor    edi,ebp
  406d5f:	pop    edx
  406d60:	add    eax,DWORD PTR [eax]
  406d62:	xchg   edx,eax
  406d63:	or     ah,BYTE PTR [ebx-0x6b9ea152]
  406d69:	and    ebp,DWORD PTR [eax-0x32776519]
  406d6f:	mov    edi,0xbb89313c
  406d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d76:	mov    eax,ds:0x6d32a1ae
  406d7b:	sub    eax,0x95f91896
  406d80:	push   ds
  406d81:	call   0x51a3:0x7ee860dd
  406d88:	cmp    eax,0xa18f7262
  406d8d:	mov    ebp,0x4a3d47f7
  406d92:	sbb    al,0x15
  406d94:	fistp  QWORD PTR [ebp+0x5f]
  406d97:	ror    DWORD PTR [edi+0x69],0x55
  406d9b:	adc    esi,esp
  406d9d:	mov    cl,0xb1
  406d9f:	mov    ds:0xd9297abf,al
  406da4:	inc    ebx
  406da5:	cmp    al,0x63
  406da7:	imul   esp,DWORD PTR [eax-0x77],0x5c30e2a2
  406dae:	xor    DWORD PTR [edx-0x5b],ecx
  406db1:	jo     0x406d76
  406db3:	pop    ds
  406db4:	xor    DWORD PTR [edi-0x22eb2cbb],ecx
  406dba:	dec    esi
  406dbb:	ret    
  406dbc:	dec    edi
  406dbd:	add    ecx,eax
  406dbf:	mov    DWORD PTR [ebx+0x5b],edx
  406dc2:	ins    DWORD PTR es:[edi],dx
  406dc3:	lahf   
  406dc4:	leave  
  406dc5:	(bad)  
  406dc6:	fadd   st,st(1)
  406dc8:	ror    BYTE PTR ds:0x51539d40,0xb8
  406dcf:	push   cs
  406dd0:	mov    ebx,0xb6e6475b
  406dd5:	adc    BYTE PTR [edx+0x6c],bl
  406dd8:	sti    
  406dd9:	add    al,0x96
  406ddb:	pop    eax
  406ddc:	mov    dl,0x2e
  406dde:	push   cs
  406ddf:	int    0x3a
  406de1:	jae    0x406e4a
  406de3:	mov    esi,0x78b5dd3b
  406de8:	inc    esp
  406de9:	push   ebx
  406deb:	dec    ebx
  406dec:	xor    eax,0x39f1c0be
  406df1:	aad    0xf0
  406df3:	mov    eax,ds:0x94df3a98
  406df8:	sti    
  406df9:	int    0xc9
  406dfb:	pushf  
  406dfc:	int    0xbc
  406dfe:	mov    ch,0x89
  406e00:	jge    0x406e4b
  406e02:	inc    eax
  406e03:	aas    
  406e04:	arpl   dx,sp
  406e06:	iret   
  406e07:	mov    eax,0x1b7f6c79
  406e0c:	jb     0x406dc4
  406e0e:	cmp    BYTE PTR [ebx],0xff
  406e11:	or     ch,BYTE PTR [edx+0x7]
  406e14:	sbb    dl,BYTE PTR [ebp+eax*8-0x70c59784]
  406e1b:	scas   eax,DWORD PTR es:[edi]
  406e1c:	leave  
  406e1d:	and    al,0xb1
  406e1f:	adc    DWORD PTR ds:0xc3725ad1,0xffffffd2
  406e26:	dec    ebp
  406e27:	test   DWORD PTR [edi],0x63589416
  406e2d:	sub    DWORD PTR [ebp+0xc],eax
  406e30:	mov    ds:0x21e61bf7,al
  406e35:	and    bh,BYTE PTR [esi-0x72]
  406e38:	mov    ecx,DWORD PTR [esi+ecx*2]
  406e3b:	daa    
  406e3c:	and    al,BYTE PTR [esp+ecx*1-0x64313dbe]
  406e43:	pop    edi
  406e44:	stc    
  406e45:	shr    BYTE PTR [ebp-0x45],1
  406e48:	stos   BYTE PTR es:[edi],al
  406e49:	bound  ebp,QWORD PTR [edi-0x52]
  406e4c:	fs dec ecx
  406e4e:	mov    BYTE PTR [eax+0x39],ch
  406e51:	(bad)  
  406e52:	scas   eax,DWORD PTR es:[edi]
  406e53:	mov    ecx,ebx
  406e55:	or     DWORD PTR [ebx+ebp*4-0x40],ebp
  406e59:	test   DWORD PTR [esi+edi*2-0x11],edi
  406e5d:	push   ebx
  406e5e:	pusha  
  406e5f:	hlt    
  406e60:	and    bl,BYTE PTR ds:0xe00dedb8
  406e66:	lock mov al,0xfa
  406e69:	xor    DWORD PTR [ebx+0x1a],0x60
  406e6d:	jmp    0x406ebf
  406e6f:	jp     0x406e39
  406e71:	pop    ebx
  406e72:	inc    esp
  406e73:	push   esi
  406e74:	nop
  406e75:	ficomp DWORD PTR [edx+edi*8+0x4967e7b1]
  406e7c:	fdivrp st(7),st
  406e7e:	rol    DWORD PTR [edx],cl
  406e80:	cmp    bl,BYTE PTR ds:0x740b2952
  406e86:	pop    ds
  406e87:	add    ebx,0xffffffc0
  406e8a:	and    dl,BYTE PTR [eax]
  406e8c:	add    eax,0x9e864021
  406e91:	pushf  
  406e92:	retf   
  406e93:	retf   
  406e94:	ror    eax,1
  406e96:	pop    esp
  406e97:	sbb    al,BYTE PTR [ebx]
  406e99:	out    0xba,eax
  406e9b:	jae    0x406e48
  406e9d:	jge    0x406e48
  406e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea0:	leave  
  406ea1:	int    0x11
  406ea3:	jnp    0x406eec
  406ea5:	dec    edx
  406ea6:	sar    BYTE PTR ds:0xc1ffcf41,1
  406eac:	popa   
  406ead:	sti    
  406eae:	int    0x42
  406eb0:	mov    bl,0x46
  406eb2:	mov    dh,0xd6
  406eb4:	repz push edx
  406eb6:	adc    bl,dl
  406eb8:	xlat   BYTE PTR ds:[ebx]
  406eb9:	xchg   DWORD PTR [esi+0x2f],edx
  406ebc:	retf   0x948c
  406ebf:	pusha  
  406ec0:	and    DWORD PTR [esi+0x6f],ebx
  406ec3:	scas   eax,DWORD PTR es:[edi]
  406ec4:	das    
  406ec5:	sub    BYTE PTR [edx+0x1e6817f3],dh
  406ecb:	push   esp
  406ecc:	popa   
  406ecd:	cld    
  406ece:	sbb    bl,BYTE PTR [ecx+0x21]
  406ed1:	ret    0xe8a
  406ed4:	(bad)  [edi]
  406ed6:	retf   
  406ed7:	mov    cl,0xab
  406ed9:	addr16 aas 
  406edb:	push   0x9fc6ee4
  406ee0:	je     0x406f05
  406ee2:	pop    eax
  406ee3:	jmp    0x406f2f
  406ee5:	cwde   
  406ee6:	dec    esi
  406ee7:	sub    esp,DWORD PTR [eax]
  406ee9:	test   bh,bl
  406eeb:	ret    
  406eec:	loopne 0x406f26
  406eee:	std    
  406eef:	add    al,0x78
  406ef1:	jecxz  0x406eff
  406ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ef4:	loope  0x406f5e
  406ef6:	bound  esp,QWORD PTR [edi+0x4]
  406ef9:	mov    cl,0x9e
  406efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406efc:	mov    dh,0x9f
  406efe:	imul   BYTE PTR [ebp+0x45]
  406f01:	mov    cx,0x6680
  406f05:	mov    edx,DWORD PTR [edx+0x34]
  406f08:	loope  0x406ede
  406f0a:	dec    eax
  406f0b:	xor    BYTE PTR [edx],0x81
  406f0e:	sub    al,0xdb
  406f10:	mov    DWORD PTR [edi],0xcb1ee56a
  406f16:	cmp    esi,0xf73d0c7d
  406f1c:	pushf  
  406f1d:	popa   
  406f1e:	push   ss
  406f1f:	lods   al,BYTE PTR ds:[esi]
  406f20:	sub    eax,0x2735710a
  406f25:	dec    edx
  406f26:	cmp    al,0x23
  406f28:	outs   dx,BYTE PTR ds:[esi]
  406f29:	ret    0xc076
  406f2c:	push   0x6f5a00b1
  406f31:	dec    esp
  406f32:	mov    edi,0x8852a8ad
  406f37:	cmp    cl,bl
  406f39:	neg    DWORD PTR [edi-0x32]
  406f3c:	xchg   ecx,eax
  406f3d:	test   al,0xb2
  406f3f:	jnp    0x406f6f
  406f41:	sub    edx,DWORD PTR [edx+0x5c0421c2]
  406f47:	sbb    esi,DWORD PTR [eax-0x4e12c00c]
  406f4d:	sbb    DWORD PTR [eax+0x309c0aae],esi
  406f53:	push   0xb8f05dc3
  406f58:	lock call 0xebfd:0x94f6470e
  406f60:	push   eax
  406f61:	fcomp  QWORD PTR [esi-0x1c]
  406f64:	lsl    ebx,WORD PTR [ebp-0x79]
  406f68:	jns    0x406f66
  406f6a:	mov    ds,esi
  406f6c:	mov    ecx,0xe30338f
  406f71:	inc    edx
  406f72:	xchg   ebp,eax
  406f73:	push   eax
  406f74:	adc    al,0x13
  406f76:	add    edi,DWORD PTR [edi]
  406f78:	xlat   BYTE PTR ds:[ebx]
  406f79:	sub    al,0xc0
  406f7b:	jne    0x406fa8
  406f7d:	pop    edi
  406f7e:	push   edi
  406f7f:	fcos   
  406f81:	(bad)  
  406f82:	iret   
  406f83:	push   edi
  406f84:	mov    dl,0x35
  406f86:	les    edi,FWORD PTR [ebp+0x5ca49061]
  406f8c:	adc    ecx,DWORD PTR [ecx+0x60b053b]
  406f92:	mov    edx,0x42a87cec
  406f97:	cld    
  406f98:	cdq    
  406f99:	stc    
  406f9a:	mov    ecx,0xc094997a
  406f9f:	mov    edx,0x67644772
  406fa4:	lahf   
  406fa5:	push   ebx
  406fa6:	adc    DWORD PTR [ebp-0x5],0x43
  406faa:	int    0x56
  406fac:	adc    DWORD PTR [edx-0x76],edx
  406faf:	(bad)  
  406fb0:	stc    
  406fb1:	push   edi
  406fb2:	pusha  
  406fb3:	clc    
  406fb4:	cmp    eax,0xa9633ec1
  406fb9:	pop    esp
  406fba:	inc    BYTE PTR [esi+ebp*1-0x34376b2e]
  406fc1:	dec    edx
  406fc2:	into   
  406fc3:	mov    dl,0x3e
  406fc5:	not    BYTE PTR [ecx+eiz*2]
  406fc8:	retf   0x1837
  406fcb:	hlt    
  406fcc:	pop    eax
  406fcd:	add    BYTE PTR [edx-0x523876b2],dh
  406fd3:	inc    edx
  406fd4:	adc    BYTE PTR [ecx-0x27],bl
  406fd7:	retf   0xa12b
  406fda:	iret   
  406fdb:	ins    BYTE PTR es:[edi],dx
  406fdc:	or     ah,BYTE PTR [ebx-0x1e81fd2]
  406fe2:	and    eax,0x6885ada3
  406fe7:	dec    edx
  406fe8:	xor    edi,DWORD PTR [ecx+eax*4-0x78a7f3c4]
  406fef:	adc    eax,0x2313aadd
  406ff4:	inc    eax
  406ff5:	mov    ebp,0xa1ed6f83
  406ffa:	div    BYTE PTR [eax]
  406ffc:	retf   0x8029
  406fff:	outs   dx,DWORD PTR ds:[esi]
  407000:	loopne 0x406fc0
  407002:	or     al,0x57
  407004:	ds es pop esp
  407007:	les    edx,FWORD PTR [ebp-0x80]
  40700a:	dec    edx
  40700b:	pop    ecx
  40700c:	pop    ebp
  40700d:	mov    ds:0xc8a0cabe,al
  407012:	shr    BYTE PTR [esi+0x398b28de],cl
  407018:	inc    eax
  407019:	xchg   esi,eax
  40701a:	(bad)  
  40701b:	adc    BYTE PTR [ebx+0x51],bl
  40701e:	das    
  40701f:	adc    ecx,DWORD PTR [eax+0x6a]
  407022:	or     DWORD PTR [ebp+0x4a666eab],ecx
  407028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407029:	arpl   si,sp
  40702b:	arpl   bx,bx
  40702d:	pop    eax
  40702e:	mov    ebp,0xe072eac3
  407033:	or     eax,0x2724ca53
  407038:	jg     0x40709c
  40703a:	xor    al,0x82
  40703c:	inc    esi
  40703d:	adc    dh,BYTE PTR [ebx-0x499fbb36]
  407043:	add    eax,esi
  407045:	inc    ebx
  407046:	(bad)  
  407048:	ds ja  0x407062
  40704b:	or     DWORD PTR [esi-0x41cfb3c5],ebp
  407051:	repnz int3 
  407053:	mov    al,0x5
  407055:	xchg   BYTE PTR [edi+0x1b],dl
  407058:	outs   dx,BYTE PTR ds:[esi]
  407059:	inc    eax
  40705a:	adc    BYTE PTR [eax-0x30],cl
  40705d:	scas   eax,DWORD PTR es:[edi]
  40705e:	out    0x4e,al
  407060:	test   esp,esp
  407062:	mov    edx,0xecfec0f1
  407067:	retf   
  407068:	cmp    ecx,ebx
  40706a:	sub    DWORD PTR [ebx],ecx
  40706c:	sub    BYTE PTR [edx],0xba
  40706f:	lock fidivr WORD PTR [ebx+0x5]
  407073:	pop    ebp
  407074:	sbb    DWORD PTR [edx+0x57],edx
  407077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407078:	add    dl,BYTE PTR [ebp+0x44]
  40707b:	scas   eax,DWORD PTR es:[edi]
  40707c:	scas   eax,DWORD PTR es:[edi]
  40707d:	call   0xac8657cf
  407082:	sbb    al,0xc
  407084:	ret    
  407085:	mov    bl,0x5c
  407087:	je     0x4070d5
  407089:	jmp    0xeba043e4
  40708e:	mov    bl,0xd5
  407090:	lahf   
  407091:	or     esi,DWORD PTR [ebx]
  407093:	sub    al,0xe0
  407095:	dec    ecx
  407096:	and    al,0x4d
  407098:	jge    0x407060
  40709a:	xchg   ebx,eax
  40709b:	and    DWORD PTR [esi+ebx*1+0x33e342bd],edi
  4070a2:	les    ebp,FWORD PTR [ebx+0x4e2796a7]
  4070a8:	dec    ebx
  4070a9:	gs jo  0x407094
  4070ac:	test   al,0x7e
  4070ae:	mov    esp,0x267b9b1c
  4070b3:	mov    WORD PTR [edi+esi*2-0x39],cs
  4070b7:	aam    0x8d
  4070b9:	(bad)  
  4070ba:	xlat   BYTE PTR ds:[ebx]
  4070bb:	xchg   edi,eax
  4070bc:	das    
  4070bd:	mov    DWORD PTR [esi-0x872b9ae],ebp
  4070c3:	loope  0x407122
  4070c5:	mov    cl,0x4
  4070c7:	jns    0x407115
  4070c9:	data16 mov ch,0xfa
  4070cc:	mov    ecx,0x1d1efa82
  4070d1:	mov    ah,0xb
  4070d4:	sahf   
  4070d5:	jge    0x407144
  4070d7:	sbb    al,0x7e
  4070d9:	fld    QWORD PTR [ebp-0x41]
  4070dc:	sub    edx,DWORD PTR [edi+0x48]
  4070df:	cmp    eax,0xf4a7abdb
  4070e4:	or     BYTE PTR [eax-0x53],0x8e
  4070e8:	cli    
  4070e9:	sbb    edx,ebx
  4070eb:	test   al,0xf5
  4070ed:	xchg   edx,eax
  4070ee:	das    
  4070ef:	call   0xbcec7530
  4070f4:	sbb    BYTE PTR [eax-0x2b],ah
  4070f7:	sub    eax,0x17ad91b5
  4070fc:	fiadd  DWORD PTR [edx+0x5f4e08b7]
  407102:	ror    DWORD PTR [bp+di-0x4b],0x43
  407107:	enter  0xcb47,0x1f
  40710b:	popf   
  40710c:	cmp    BYTE PTR [ecx+ebp*8],al
  40710f:	fs mov eax,0x323b9707
  407115:	out    0x65,al
  407117:	and    DWORD PTR [edx],edi
  407119:	push   eax
  40711a:	sub    BYTE PTR [esi-0x8],dl
  40711d:	ja     0x407188
  40711f:	sub    esi,DWORD PTR [ebp-0x80]
  407122:	push   ss
  407123:	add    eax,0xd1218dae
  407128:	stos   BYTE PTR es:[edi],al
  407129:	(bad)
  40712c:	aam    0xdb
  40712e:	mov    ah,0x63
  407130:	mov    esi,0x6ca8ec14
  407135:	repz fild QWORD PTR [edx-0x46]
  407139:	mov    BYTE PTR [esp+edi*1-0x6845b3a5],ah
  407140:	add    DWORD PTR [ecx],edx
  407142:	aad    0x8d
  407144:	pop    ebp
  407145:	xor    al,0x21
  407147:	dec    esp
  407148:	std    
  407149:	rcr    cl,1
  40714b:	not    DWORD PTR [ebx-0x59]
  40714e:	bound  edi,QWORD PTR [ebx]
  407150:	mov    esp,0x1f909228
  407155:	push   0xffffffff
  407157:	inc    edx
  407158:	test   eax,0xc9b3cf91
  40715d:	xchg   BYTE PTR [ebp+0xf2ca77c],cl
  407163:	cmp    ebx,DWORD PTR [ecx+0x50]
  407166:	push   cx
  407168:	sub    DWORD PTR [edi],ecx
  40716a:	pop    edx
  40716b:	out    dx,al
  40716c:	ins    DWORD PTR es:[edi],dx
  40716d:	enter  0x5ca8,0x54
  407171:	cmp    ebp,DWORD PTR [edi+ebx*4]
  407174:	cmp    ebx,DWORD PTR [ebx]
  407176:	aam    0xe0
  407178:	jmp    0xfcbf159b
  40717d:	cli    
  40717e:	and    DWORD PTR [eax+0x6eec2028],0x8ae6bbf7
  407188:	cmp    DWORD PTR [eax+edi*4],ebx
  40718b:	test   eax,0x3a863ae9
  407190:	ror    eax,1
  407192:	test   al,0xf
  407194:	fmul   QWORD PTR [ebp-0x20]
  407197:	xchg   ecx,eax
  407198:	mov    WORD PTR [esi+0x5],gs
  40719b:	mov    ds:0xa5ad1276,al
  4071a0:	pop    edi
  4071a1:	arpl   WORD PTR ds:0x97ceaeca,di
  4071a7:	out    dx,eax
  4071a8:	retf   0xd841
  4071ab:	pop    ebx
  4071ac:	adc    BYTE PTR [esi+edi*2-0x3c4607ab],cl
  4071b3:	mov    bl,0x26
  4071b5:	cmp    BYTE PTR [eax-0x44],dl
  4071b8:	sar    DWORD PTR [eax-0xf],cl
  4071bb:	push   ebx
  4071bc:	in     eax,0x6d
  4071be:	add    eax,0x9ecf9f89
  4071c3:	dec    ebx
  4071c4:	xchg   esi,eax
  4071c5:	lock rcr esp,0x6c
  4071c9:	jb     0x407204
  4071cb:	mov    bh,0xba
  4071cd:	ret    0x29a3
  4071d0:	mov    al,ds:0x51459770
  4071d5:	ds pop ebp
  4071d7:	push   DWORD PTR ds:0xfc2a3fd0
  4071dd:	clc    
  4071de:	imul   eax,DWORD PTR [esi-0x49eff63],0xb
  4071e5:	aaa    
  4071e6:	loop   0x4071bf
  4071e8:	inc    esi
  4071e9:	mov    WORD PTR [eax-0x62],gs
  4071ec:	ins    DWORD PTR es:[edi],dx
  4071ed:	ins    DWORD PTR es:[edi],dx
  4071ee:	pop    ss
  4071ef:	xchg   ebp,eax
  4071f0:	dec    edi
  4071f1:	fidivr DWORD PTR [ecx+0x11b480d0]
  4071f7:	mov    bl,0xb1
  4071f9:	push   ss
  4071fa:	dec    esp
  4071fb:	lods   al,BYTE PTR ds:[esi]
  4071fc:	pop    eax
  4071fd:	mov    bh,0x51
  4071ff:	inc    ebp
  407200:	es aas 
  407202:	popf   
  407203:	jmp    0xb92a3955
  407208:	jo     0x4071a9
  40720a:	mov    ds:0xd41e6d47,al
  40720f:	or     cl,cl
  407211:	repz fs mov ch,0x44
  407215:	push   edx
  407216:	fstp   st(5)
  407218:	gs aas 
  40721a:	mov    cl,0x6a
  40721c:	test   al,0xe1
  40721e:	xor    cl,ah
  407220:	mov    WORD PTR [ebx-0x3e],ss
  407223:	jae    0x4071b9
  407225:	inc    ecx
  407226:	mov    ebp,0x5618db4a
  40722b:	and    al,0xc8
  40722d:	cs inc ecx
  40722f:	add    cl,BYTE PTR [esi-0xf23a8d5]
  407235:	sti    
  407236:	mov    ebp,0x210b12a5
  40723b:	adc    eax,0xa830b13d
  407240:	xchg   ebx,eax
  407241:	xor    eax,0x66764240
  407246:	mov    edx,DWORD PTR [ecx+0x607639fc]
  40724c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40724d:	push   ds
  40724e:	jg     0x40726e
  407250:	xchg   BYTE PTR [edi+0x3c2c328c],bl
  407256:	inc    ebp
  407257:	lds    esp,FWORD PTR [edx-0x4bfa6f9]
  40725d:	pop    esp
  40725e:	ds cld 
  407260:	aaa    
  407261:	add    bl,dh
  407263:	ret    0x8390
  407266:	xlat   BYTE PTR ds:[ebx]
  407267:	dec    edi
  407268:	add    eax,edi
  40726a:	daa    
  40726b:	imul   BYTE PTR [edi]
  40726d:	dec    ecx
  40726e:	icebp  
  40726f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407271:	xor    ecx,ebp
  407273:	inc    edx
  407274:	outs   dx,DWORD PTR ds:[esi]
  407275:	lds    edi,FWORD PTR [edx+0x2a]
  407278:	push   ss
  407279:	push   ss
  40727a:	cwde   
  40727b:	jbe    0x407230
  40727d:	add    cl,cl
  40727f:	icebp  
  407280:	dec    edi
  407281:	cmp    dh,0xb2
  407284:	rcl    eax,1
  407286:	fldenv [esi+0x44ae2a22]
  40728c:	xchg   esp,eax
  40728d:	pop    esi
  40728e:	shl    BYTE PTR [ebp-0x14897a13],cl
  407294:	out    0x38,eax
  407296:	jnp    0x407310
  407298:	dec    ebp
  407299:	popf   
  40729a:	jecxz  0x4072e0
  40729c:	mov    ah,BYTE PTR [edi+0x75]
  40729f:	mov    ss,WORD PTR [eax+edx*2-0x2ac57429]
  4072a6:	stos   BYTE PTR es:[edi],al
  4072a7:	adc    eax,0x9475a07d
  4072ac:	dec    ebx
  4072ad:	in     eax,0x74
  4072af:	pop    ebx
  4072b0:	retf   
  4072b1:	sub    dl,BYTE PTR [edx]
  4072b3:	and    DWORD PTR [ecx],edx
  4072b5:	mov    edx,0xf19beef8
  4072ba:	ins    BYTE PTR es:[edi],dx
  4072bb:	stos   BYTE PTR es:[edi],al
  4072bc:	mov    al,ds:0xdb344566
  4072c1:	test   eax,0xb422c80d
  4072c6:	lahf   
  4072c7:	xchg   ecx,eax
  4072c8:	jnp    0x407334
  4072ca:	in     eax,0xc5
  4072cc:	jne    0x407282
  4072ce:	fld    QWORD PTR [esi+0x76]
  4072d1:	add    eax,0x3a82b297
  4072d6:	mov    bh,0xf1
  4072d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072d9:	adc    eax,DWORD PTR [edi-0x5d]
  4072dc:	and    eax,0xafd529f8
  4072e1:	dec    esp
  4072e2:	xor    DWORD PTR [edi-0x79],0x37d6f513
  4072e9:	xlat   BYTE PTR ds:[ebx]
  4072ea:	shr    DWORD PTR ds:[esi+0x234d3104],1
  4072f1:	add    bl,bh
  4072f3:	fdivr  QWORD PTR [ebx-0x50]
  4072f6:	xor    al,0xfd
  4072f8:	out    0x13,eax
  4072fa:	push   ebp
  4072fb:	and    DWORD PTR [edx-0x37a2d1ac],eax
  407301:	xchg   ebx,eax
  407302:	xchg   esp,eax
  407303:	out    0x1a,al
  407305:	out    dx,al
  407306:	sti    
  407307:	sti    
  407308:	sbb    ah,0x71
  40730b:	rcr    dh,cl
  40730d:	adc    eax,DWORD PTR [ebx+ecx*4]
  407310:	adc    BYTE PTR ss:[ecx+0x43],cl
  407314:	out    0xb,eax
  407316:	dec    ecx
  407317:	xchg   esi,eax
  407318:	jmp    DWORD PTR [ecx]
  40731a:	push   esi
  40731b:	xor    bl,BYTE PTR [ebx+0x1e7ccd50]
  407321:	cmp    BYTE PTR [edi+0x70],0xa1
  407325:	test   dh,ah
  407327:	retf   
  407328:	(bad)  
  407329:	fwait
  40732a:	push   edx
  40732b:	sbb    al,0x29
  40732d:	jbe    0x40732b
  40732f:	mov    edi,0x84b6aa7c
  407334:	fwait
  407335:	pop    ss
  407336:	mov    WORD PTR [edx-0x6f],gs
  407339:	iret   
  40733a:	fwait
  40733b:	scas   eax,DWORD PTR es:[edi]
  40733c:	add    BYTE PTR [edx-0xc],al
  40733f:	dec    edi
  407340:	pop    esp
  407341:	aam    0xf5
  407343:	inc    esi
  407344:	xor    eax,0x5d6e5209
  407349:	pop    eax
  40734a:	pusha  
  40734b:	jle    0x407332
  40734d:	sti    
  40734e:	sub    BYTE PTR [ecx],ah
  407350:	retf   
  407351:	sub    cl,cl
  407353:	inc    esp
  407354:	xchg   esp,eax
  407355:	mov    ah,0xe5
  407357:	sahf   
  407358:	add    eax,edx
  40735a:	(bad)  
  40735b:	sub    esp,edi
  40735d:	out    dx,al
  40735e:	les    eax,FWORD PTR [ebx]
  407360:	pushf  
  407361:	jnp    0x407345
  407363:	addr16 rol edi,1
  407366:	mov    ds:0x19d3385f,eax
  40736b:	outs   dx,BYTE PTR ds:[esi]
  40736c:	push   es
  40736d:	sbb    al,0x5f
  40736f:	fsub   DWORD PTR [ecx+0x1091f505]
  407375:	cmp    dl,BYTE PTR [ebx+0x45]
  407378:	shl    DWORD PTR [edi],0x6e
  40737b:	shl    BYTE PTR [ebx],1
  40737d:	add    DWORD PTR ds:0xfa2ebf19,eax
  407383:	outs   dx,DWORD PTR ds:[esi]
  407384:	mov    esp,0x62c813d1
  407389:	ror    DWORD PTR [edx*4-0x4b311bfe],1
  407390:	arpl   WORD PTR [edi+0x74],cx
  407393:	jmp    0x7be3:0xe7ef035f
  40739a:	in     al,dx
  40739b:	lds    ebx,FWORD PTR [edx-0x7]
  40739e:	scas   al,BYTE PTR es:[edi]
  40739f:	adc    al,0xe7
  4073a1:	xchg   edi,eax
  4073a2:	mov    bl,0x36
  4073a4:	nop
  4073a5:	xchg   edi,eax
  4073a6:	fisttp WORD PTR [ecx-0x48]
  4073a9:	lods   al,BYTE PTR ds:[esi]
  4073aa:	outs   dx,DWORD PTR ds:[esi]
  4073ab:	je     0x4073f0
  4073ad:	jmp    0xcaec:0x1ce9345b
  4073b4:	mov    ch,0x48
  4073b6:	stc    
  4073b7:	adc    al,0x2e
  4073b9:	scas   eax,DWORD PTR es:[edi]
  4073ba:	outs   dx,DWORD PTR ds:[esi]
  4073bb:	push   cs
  4073bc:	cmc    
  4073bd:	or     esi,DWORD PTR ds:0xa9e4f813
  4073c3:	mov    cl,0xec
  4073c5:	(bad)  
  4073c6:	lock sahf 
  4073c8:	mov    edx,0x95fc0379
  4073cd:	dec    ecx
  4073ce:	stos   DWORD PTR es:[edi],eax
  4073cf:	stos   DWORD PTR es:[edi],eax
  4073d0:	adc    BYTE PTR [edi],bl
  4073d2:	mov    cl,0x53
  4073d4:	xchg   edi,eax
  4073d5:	mov    dh,0x77
  4073d7:	scas   al,BYTE PTR es:[edi]
  4073d8:	mov    ds:0x152f3889,al
  4073dd:	pop    ss
  4073de:	arpl   cx,bp
  4073e0:	int3   
  4073e1:	dec    edi
  4073e2:	stos   DWORD PTR es:[edi],eax
  4073e3:	push   eax
  4073e4:	sbb    dh,dl
  4073e6:	in     eax,dx
  4073e7:	jl     0x407399
  4073e9:	inc    esi
  4073ea:	push   ecx
  4073eb:	add    BYTE PTR [ecx+eiz*1+0x51],ah
  4073ef:	mov    ecx,0x868860d3
  4073f4:	lea    edx,[esi+edx*2+0x49f11e39]
  4073fb:	inc    ebp
  4073fc:	xor    al,0x11
  4073fe:	xlat   BYTE PTR ds:[ebx]
  4073ff:	jo     0x4073d2
  407401:	jmp    0xe414b4f3
  407406:	dec    esp
  407407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407408:	mul    bh
  40740a:	push   si
  40740c:	in     al,dx
  40740d:	push   eax
  40740e:	(bad)  
  40740f:	retf   
  407410:	dec    ebx
  407411:	pop    es
  407412:	mov    ax,0x25fb
  407416:	cs jmp 0xa7d4:0x5dab2c1d
  40741e:	popf   
  40741f:	pop    edx
  407420:	mov    edx,0xb980beba
  407425:	or     dl,BYTE PTR [edx]
  407427:	gs adc edi,edi
  40742a:	nop
  40742b:	sbb    esi,DWORD PTR [ebp-0xe826db1]
  407431:	mov    al,0x3
  407433:	es int 0x6a
  407436:	and    eax,0x6472a9b0
  40743b:	or     al,0xb4
  40743d:	xchg   bl,al
  40743f:	mov    eax,ds:0x85b88905
  407444:	and    eax,0xc255d8e8
  407449:	retf   0x6799
  40744c:	pusha  
  40744d:	mov    cl,0x34
  40744f:	mov    edx,0x84d3f672
  407454:	add    ebp,DWORD PTR [eax+0x1a]
  407457:	dec    edx
  407458:	adc    eax,0x491586a0
  40745d:	pop    ebp
  40745e:	(bad)  
  40745f:	xchg   edx,eax
  407460:	les    edi,FWORD PTR ds:0xe54ad9ca
  407466:	ja     0x407479
  407468:	out    dx,eax
  407469:	enter  0x8f23,0x7e
  40746d:	sbb    al,BYTE PTR [ecx]
  40746f:	pop    es
  407470:	jmp    0xe57e:0x2ceefa68
  407477:	jg     0x4074d9
  407479:	mov    bh,0xcf
  40747b:	in     eax,dx
  40747c:	mov    bh,0x8b
  40747e:	fwait
  40747f:	cmp    esi,DWORD PTR [edi+ebp*4]
  407482:	jne    0x40745d
  407484:	inc    esp
  407485:	cli    
  407486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407487:	dec    esi
  407488:	push   edi
  407489:	cdq    
  40748a:	or     DWORD PTR [edx-0x18],edx
  40748d:	pop    edx
  40748e:	xchg   ebx,eax
  40748f:	popf   
  407490:	cmp    BYTE PTR [edx+esi*4],bh
  407493:	dec    esp
  407494:	sub    ah,ah
  407496:	fisttp WORD PTR [esi*2-0x3b696750]
  40749d:	push   ds
  40749e:	addr16 add ch,cl
  4074a1:	sahf   
  4074a2:	or     eax,0x55adc5e4
  4074a7:	out    0x6c,al
  4074a9:	rol    ecx,1
  4074ab:	add    eax,DWORD PTR [eax+0x34481033]
  4074b1:	mov    eax,0x40ecbb33
  4074b6:	push   ecx
  4074b7:	sahf   
  4074b8:	pop    ebx
  4074b9:	mov    ch,cl
  4074bb:	lahf   
  4074bc:	mov    esi,0xabeefe07
  4074c1:	std    
  4074c2:	cmp    eax,0xbc53756b
  4074c7:	out    dx,eax
  4074c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074c9:	add    edi,DWORD PTR [edx]
  4074cb:	scas   eax,DWORD PTR es:[edi]
  4074cc:	xor    esi,ebp
  4074ce:	cmp    ah,dl
  4074d0:	mov    ds:0xed7e88b7,al
  4074d5:	adc    BYTE PTR [edx],dh
  4074d7:	pop    esp
  4074d8:	inc    esp
  4074d9:	push   edi
  4074da:	inc    ecx
  4074db:	xchg   DWORD PTR [esi-0x38],eax
  4074de:	mov    ds:0x48d00f74,eax
  4074e3:	(bad)  
  4074e4:	daa    
  4074e5:	jo     0x407480
  4074e7:	mov    edx,DWORD PTR [esi]
  4074e9:	push   0xffffffd5
  4074eb:	call   0xc169:0xadcee434
  4074f2:	imul   edx,DWORD PTR [edx+0x1],0x4d
  4074f6:	data16 jnp 0x4074f0
  4074f9:	mov    bl,0xf0
  4074fb:	cli    
  4074fc:	fnsave [ebx-0x518788cb]
  407502:	popa   
  407503:	push   edi
  407504:	daa    
  407505:	cmp    eax,0x8c3aed97
  40750a:	jl     0x407545
  40750c:	ficomp WORD PTR [edx+0x17]
  40750f:	dec    edx
  407510:	in     eax,0x27
  407512:	clc    
  407513:	cli    
  407514:	add    edi,DWORD PTR [esi-0x1f]
  407517:	push   es
  407518:	xchg   BYTE PTR [edi+0x6a6b7e10],bh
  40751e:	shl    ch,cl
  407520:	dec    esi
  407521:	lods   eax,DWORD PTR ds:[esi]
  407522:	jecxz  0x4074bb
  407524:	mov    al,0x16
  407526:	push   ecx
  407527:	sub    ebp,DWORD PTR [eax-0x22]
  40752a:	jbe    0x40759d
  40752c:	aam    0xbe
  40752e:	adc    BYTE PTR [edi+0x1c],bh
  407531:	dec    ebp
  407532:	ja     0x40750f
  407534:	pop    edi
  407535:	loopne 0x4074c1
  407537:	inc    edi
  407538:	push   ss
  407539:	xor    eax,0xb279b23e
  40753e:	push   esi
  40753f:	and    DWORD PTR [ebp+0x4403016],0xbcde5318
  407549:	and    BYTE PTR [ecx],al
  40754b:	cdq    
  40754c:	add    eax,0x75d1a43f
  407551:	mov    BYTE PTR [eax],bh
  407553:	pop    ss
  407554:	sub    edi,DWORD PTR [ebx-0x2d]
  407557:	mov    edi,0xd646b347
  40755c:	push   edi
  40755d:	lods   al,BYTE PTR ds:[esi]
  40755e:	popf   
  40755f:	xchg   esp,eax
  407560:	push   esi
  407561:	xor    al,0xb3
  407563:	mov    edx,0x43fe6e92
  407568:	push   ebp
  407569:	xor    DWORD PTR gs:[ecx-0x3294d8f8],ecx
  407570:	jmp    0xf7b1b9bb
  407575:	add    BYTE PTR [ebp+0x0],bh
  407578:	sbb    dl,al
  40757a:	sbb    eax,0xd3a39110
  40757f:	sbb    dl,BYTE PTR [eax]
  407581:	neg    DWORD PTR [esi+0x5a]
  407584:	aas    
  407585:	or     dl,0xae
  407588:	jl     0x407514
  40758a:	fimul  DWORD PTR [edx]
  40758c:	xchg   esp,eax
  40758d:	or     al,0x6f
  40758f:	lods   al,BYTE PTR ds:[esi]
  407590:	std    
  407591:	fpatan 
  407593:	mov    edi,DWORD PTR [ebx]
  407595:	jge    0x4075de
  407597:	sahf   
  407598:	pop    ecx
  407599:	clc    
  40759a:	ret    
  40759b:	cmp    al,0xd9
  40759d:	lods   al,BYTE PTR ds:[esi]
  40759e:	je     0x4075a4
  4075a0:	(bad)  
  4075a1:	iret   
  4075a2:	daa    
  4075a3:	(bad)  
  4075a4:	cwde   
  4075a5:	add    ah,BYTE PTR [ebx+0x29]
  4075a8:	mov    DWORD PTR [edi],0xad0ec64
  4075ae:	jb     0x40759a
  4075b0:	out    dx,al
  4075b1:	inc    edi
  4075b2:	fsub   DWORD PTR ds:0xfb8aa297
  4075b8:	push   ebp
  4075b9:	xchg   esp,eax
  4075ba:	mov    edx,0x6dba135d
  4075bf:	jmp    0x620f:0x48a42d3a
  4075c6:	es call 0xb7114aa1
  4075cc:	inc    eax
  4075cd:	or     al,0x7b
  4075cf:	mov    ch,0x5
  4075d1:	push   0x4a
  4075d3:	inc    ecx
  4075d4:	push   ecx
  4075d5:	jge    0x40760a
  4075d7:	aas    
  4075d8:	dec    esp
  4075d9:	jg     0x407637
  4075db:	loopne 0x40763a
  4075dd:	push   esi
  4075de:	outs   dx,DWORD PTR ds:[esi]
  4075df:	inc    DWORD PTR [edi]
  4075e1:	xchg   ebp,eax
  4075e2:	adc    DWORD PTR [edi+0x4f],edx
  4075e5:	xlat   BYTE PTR ds:[ebx]
  4075e6:	out    dx,al
  4075e7:	mov    ds:0x59be094e,al
  4075ec:	xchg   ebp,eax
  4075ed:	mov    dl,0xe7
  4075ef:	aad    0xc7
  4075f1:	pop    edx
  4075f2:	not    BYTE PTR [edi]
  4075f4:	jmp    0xb43eb55c
  4075f9:	retf   0xa9cd
  4075fc:	xchg   DWORD PTR [ebp+0x2c57330d],esi
  407602:	sbb    al,0x46
  407604:	dec    esp
  407605:	push   edx
  407606:	pop    ebx
  407607:	inc    ebp
  407608:	cmc    
  407609:	xlat   BYTE PTR ds:[ebx]
  40760a:	ret    0xe0c2
  40760d:	push   edx
  40760e:	(bad)  
  40760f:	outs   dx,BYTE PTR ds:[esi]
  407610:	add    eax,0xc3c0f113
  407615:	adc    esp,DWORD PTR [ebp+0x2c]
  407618:	ins    BYTE PTR es:[edi],dx
  407619:	(bad)  
  40761a:	mov    ah,0xe9
  40761c:	xor    ch,0x6e
  40761f:	in     eax,dx
  407620:	inc    ebp
  407621:	loope  0x40761e
  407623:	adc    DWORD PTR [ebx+eax*2],esp
  407626:	sbb    ah,BYTE PTR [ecx+eax*1-0x60]
  40762a:	push   eax
  40762b:	or     DWORD PTR [edi+ebp*2+0x2d49096f],edi
  407632:	jle    0x407691
  407634:	loopne 0x4075fd
  407636:	add    eax,0x6b6c9be1
  40763b:	mov    cl,0x3c
  40763d:	(bad)  
  40763e:	ins    BYTE PTR es:[edi],dx
  40763f:	pop    eax
  407640:	jle    0x407662
  407642:	sbb    ecx,ebx
  407644:	mov    bh,0xed
  407646:	pop    eax
  407647:	push   cs
  407648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407649:	dec    eax
  40764a:	data16 outs dx,BYTE PTR ss:[esi]
  40764d:	and    eax,0xb6438ab6
  407652:	add    al,0xe6
  407654:	sub    eax,0x1a849759
  407659:	and    al,0x62
  40765b:	bound  ebp,QWORD PTR [edx+0x32]
  40765e:	ror    dh,1
  407660:	xor    al,0x2e
  407662:	std    
  407663:	adc    al,0x78
  407665:	adc    DWORD PTR [edx+0x27],ebx
  407668:	(bad)  
  407669:	pop    esi
  40766a:	in     al,dx
  40766b:	xchg   ebp,eax
  40766c:	call   0xd90c93c1
  407671:	sbb    esp,eax
  407673:	jo     0x4076cb
  407675:	sbb    ch,ah
  407677:	xor    ah,BYTE PTR [edi+ebp*8]
  40767a:	sbb    bl,BYTE PTR [edx-0x36791e35]
  407680:	mov    DWORD PTR [ecx-0x1c],edx
  407683:	nop
  407684:	(bad)  
  407685:	mov    al,ds:0x4792b3c1
  40768a:	cld    
  40768b:	(bad)  
  40768c:	stos   BYTE PTR es:[edi],al
  40768d:	fisubr DWORD PTR [eax-0x7]
  407690:	lahf   
  407691:	mov    dh,0xec
  407693:	push   ss
  407694:	and    bl,0xc2
  407697:	stos   BYTE PTR es:[edi],al
  407698:	jp     0x4076af
  40769a:	(bad)  
  40769c:	mov    esp,0xba0dd5ef
  4076a1:	fist   DWORD PTR [eax]
  4076a3:	shr    DWORD PTR [eax],1
  4076a5:	adc    edx,0x9925c3fa
  4076ab:	popf   
  4076ac:	ss jmp 0x7976:0x1f8d049b
  4076b4:	imul   ecx,DWORD PTR [edx+0x7efe72bc],0xfffffffb
  4076bb:	jne    0x40768a
  4076bd:	pop    esi
  4076be:	pop    edi
  4076bf:	js     0x407671
  4076c1:	ins    BYTE PTR es:[edi],dx
  4076c2:	popf   
  4076c3:	add    eax,0x8997ce87
  4076c8:	mov    al,ds:0x649eed15
  4076cd:	xchg   edx,eax
  4076ce:	dec    ecx
  4076cf:	pop    ebx
  4076d0:	cmp    eax,edi
  4076d2:	jb     0x40773a
  4076d4:	xor    BYTE PTR [esi],ah
  4076d6:	inc    esp
  4076d7:	sbb    eax,0x8cb0b2c
  4076dc:	dec    eax
  4076dd:	xchg   BYTE PTR [ebp+0x4e9d15ae],cl
  4076e3:	add    al,bl
  4076e5:	mov    DWORD PTR [ebp-0x6847767c],eax
  4076eb:	fistp  DWORD PTR [ebx]
  4076ed:	cwde   
  4076ee:	add    BYTE PTR [esi+eax*1+0x40c7ccc3],dl
  4076f5:	xor    al,0xcb
  4076f7:	loope  0x4076ae
  4076f9:	hlt    
  4076fa:	add    al,0xe3
  4076fc:	inc    edx
  4076fd:	jnp    0x4076d5
  4076ff:	aaa    
  407700:	pop    ecx
  407701:	imul   ecx,ebx,0xffffffd9
  407704:	xchg   esp,eax
  407705:	rcr    BYTE PTR [ebp+0x497f84eb],0xed
  40770c:	push   cs
  40770d:	mov    ebx,?
  40770f:	daa    
  407710:	cmp    al,0xf7
  407712:	sbb    al,0xae
  407714:	in     al,dx
  407715:	mov    ah,0xab
  407717:	lock repnz fisubr WORD PTR [edx]
  40771b:	inc    ebx
  40771c:	(bad)  
  40771d:	mov    esi,0x8561a95e
  407722:	stos   DWORD PTR es:[edi],eax
  407723:	jg     0x407766
  407725:	or     dh,bh
  407727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407728:	rcr    BYTE PTR [edx],1
  40772a:	xor    BYTE PTR [ebx],bl
  40772c:	or     esp,esi
  40772e:	dec    esi
  40772f:	pop    es
  407730:	mov    esp,DWORD PTR [ebx+0x2c]
  407733:	pop    esi
  407734:	add    esp,DWORD PTR [edi+0x1d]
  407737:	or     al,BYTE PTR [eax+0xf55785]
  40773d:	outs   dx,DWORD PTR ds:[esi]
  40773e:	aad    0x56
  407740:	jmp    0xcaed6b80
  407745:	sub    al,0x11
  407747:	mov    cl,BYTE PTR [ebx+0x1d]
  40774a:	sti    
  40774b:	outs   dx,BYTE PTR ds:[esi]
  40774c:	ins    BYTE PTR es:[edi],dx
  40774d:	(bad)  
  40774e:	int3   
  40774f:	mov    dl,0x21
  407751:	int3   
  407752:	pusha  
  407753:	push   cs
  407754:	jnp    0x407788
  407756:	mov    dl,BYTE PTR [esi+0x5b99db49]
  40775c:	xor    al,0x74
  40775e:	(bad)  
  40775f:	fld    TBYTE PTR [esi-0x5d215e31]
  407765:	clc    
  407766:	fbstp  TBYTE PTR [esi+0x475e2c7b]
  40776c:	les    eax,FWORD PTR [esi]
  40776e:	mov    bl,0x9e
  407770:	jne    0x407788
  407772:	imul   ecx,DWORD PTR [ebx],0x54
  407775:	xchg   ebp,eax
  407776:	adc    eax,0x7109a79a
  40777b:	xchg   edi,eax
  40777c:	add    eax,0xc430c3b1
  407781:	ins    DWORD PTR es:[edi],dx
  407782:	stc    
  407783:	xor    eax,DWORD PTR [edx]
  407785:	into   
  407786:	and    eax,0xdb88b2a8
  40778b:	push   edi
  40778c:	mov    ebp,0x20d2b334
  407791:	mov    ebp,0x941abaa6
  407796:	repnz inc edx
  407798:	outs   dx,BYTE PTR ds:[esi]
  407799:	outs   dx,BYTE PTR ds:[esi]
  40779a:	clc    
  40779b:	or     bh,BYTE PTR [ecx-0xd]
  40779e:	xor    eax,0x78f78702
  4077a3:	push   edx
  4077a4:	push   edi
  4077a5:	jnp    0x40779c
  4077a7:	or     BYTE PTR [edx-0x1319dfa8],dh
  4077ad:	sub    ah,BYTE PTR [eax]
  4077af:	push   ebp
  4077b0:	int3   
  4077b1:	jecxz  0x407829
  4077b3:	add    eax,0x4e6ff3aa
  4077b8:	cmp    cl,BYTE PTR [ebp-0x3f0efa45]
  4077be:	jne    0x4077bf
  4077c0:	adc    BYTE PTR [edi-0x2b],bh
  4077c3:	push   ebx
  4077c4:	scas   al,BYTE PTR es:[edi]
  4077c5:	xor    BYTE PTR [eax+0x6f22bc77],bl
  4077cb:	test   al,0xe6
  4077cd:	sbb    al,0xe
  4077cf:	leave  
  4077d0:	fimul  WORD PTR [edi-0xe]
  4077d3:	pop    ebp
  4077d4:	jl     0x407842
  4077d6:	mov    ds:0xf58d7936,al
  4077db:	nop
  4077dc:	aam    0x12
  4077de:	lahf   
  4077df:	fcomp  QWORD PTR [edi+0x3d]
  4077e2:	stos   BYTE PTR es:[edi],al
  4077e3:	out    0x69,eax
  4077e5:	ret    0x46d7
  4077e8:	shr    sp,cl
  4077eb:	test   edi,ecx
  4077ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ee:	push   ecx
  4077ef:	jb     0xf93e127
  4077f5:	aaa    
  4077f6:	fld    QWORD PTR ds:0xa7d03232
  4077fc:	sbb    eax,DWORD PTR [edi+ebp*4-0x54]
  407800:	dec    esi
  407801:	cdq    
  407802:	fcomp  QWORD PTR [ecx-0x2c]
  407805:	imul   BYTE PTR [ebx]
  407807:	stos   DWORD PTR es:[edi],eax
  407808:	icebp  
  407809:	aam    0x3d
  40780b:	fnstsw WORD PTR [eax+0x54]
  40780e:	xor    eax,0xc45318b3
  407813:	push   esp
  407814:	xor    esi,DWORD PTR [edx+0x20]
  407817:	data16 sbb al,0xaa
  40781a:	xor    BYTE PTR [edx-0x3be6b5c0],ah
  407820:	outs   dx,BYTE PTR ds:[esi]
  407821:	pop    edx
  407822:	aaa    
  407823:	retf   
  407824:	xor    eax,0x870a441d
  407829:	dec    ecx
  40782a:	(bad)  
  40782b:	mov    ds:0xac841486,eax
  407830:	jno    0x40787a
  407832:	out    0xc9,eax
  407834:	pushf  
  407835:	mov    edx,0xc0f8de27
  40783a:	inc    esp
  40783b:	test   dl,bh
  40783d:	nop
  40783e:	pop    ecx
  40783f:	arpl   WORD PTR [edx],sp
  407841:	push   esp
  407842:	lds    ecx,FWORD PTR [esi+0x751db517]
  407848:	test   eax,0xb681eb5c
  40784d:	fsub   DWORD PTR [edx+0x6c]
  407850:	add    eax,0x733fcbca
  407855:	pop    ss
  407856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407857:	jbe    0x4078c7
  407859:	div    bl
  40785b:	jge    0x4078c9
  40785d:	nop
  40785e:	aas    
  40785f:	cwde   
  407860:	mov    ebp,0x5d5b3e81
  407865:	sub    esp,DWORD PTR [ecx-0x57]
  407868:	sahf   
  407869:	inc    ecx
  40786a:	mov    edi,0x6e887d75
  40786f:	mov    al,ds:0x9fdd5990
  407874:	adc    BYTE PTR [ecx+0x175b533a],dh
  40787a:	outs   dx,BYTE PTR ds:[esi]
  40787b:	jp     0x407872
  40787d:	int    0xdc
  40787f:	cmp    eax,0x766915c2
  407884:	ja     0x407838
  407886:	lods   al,BYTE PTR ds:[esi]
  407887:	cmp    BYTE PTR [ebp+0x5a],dl
  40788a:	mov    esi,0xb35d322c
  40788f:	pavgw  mm4,QWORD PTR [eax-0x3bdc0952]
  407896:	rcr    ebx,1
  407898:	lea    esi,[ecx+0x5a]
  40789b:	inc    ebp
  40789c:	fld    QWORD PTR [edi-0x16]
  40789f:	inc    ebp
  4078a0:	inc    ebx
  4078a1:	or     al,BYTE PTR [ebx-0x30428a4c]
  4078a7:	xchg   BYTE PTR [ecx],dh
  4078a9:	fisttp WORD PTR [ebx-0x3ef816bb]
  4078af:	and    BYTE PTR [ebp-0x71],bl
  4078b2:	aas    
  4078b3:	xchg   BYTE PTR [edi],bl
  4078b5:	daa    
  4078b6:	popf   
  4078b7:	xchg   edi,eax
  4078b8:	dec    edi
  4078b9:	test   ecx,0x94d4e2f0
  4078bf:	and    eax,0x6d3afd87
  4078c4:	cdq    
  4078c5:	in     eax,0x44
  4078c7:	icebp  
  4078c8:	popf   
  4078c9:	enter  0x9203,0x9c
  4078cd:	iret   
  4078ce:	shr    bl,1
  4078d0:	mov    ebx,0x12f48efb
  4078d5:	pop    ebp
  4078d6:	cli    
  4078d7:	dec    ebp
  4078d8:	xchg   esp,eax
  4078d9:	push   cs
  4078da:	xor    ebp,edx
  4078dc:	dec    ecx
  4078dd:	into   
  4078de:	fisttp WORD PTR [ebp-0x1beebbe7]
  4078e4:	mov    ah,0xd8
  4078e6:	pop    esp
  4078e7:	xchg   DWORD PTR [ebx+ebx*8],edi
  4078ea:	xor    DWORD PTR [edi+0x4f],ebx
  4078ed:	jmp    0x40790c
  4078ef:	inc    ebp
  4078f0:	jo     0x407958
  4078f2:	and    dl,cl
  4078f4:	push   ebx
  4078f5:	retf   0xf2
  4078f8:	push   edi
  4078f9:	or     ch,BYTE PTR [eax-0x30820087]
  4078ff:	jae    0x4078fa
  407901:	sti    
  407902:	aas    
  407903:	xchg   bl,cl
  407905:	sbb    esp,DWORD PTR [eax-0x74]
  407908:	xchg   ebp,eax
  407909:	mov    esi,0x10f7481c
  40790e:	or     al,BYTE PTR [ebp+0x43b7daf9]
  407914:	sahf   
  407915:	je     0x40791e
  407917:	stc    
  407918:	xchg   esp,eax
  407919:	pushf  
  40791a:	mov    edi,0x9c49b9ac
  40791f:	adc    ebx,DWORD PTR [edx+0xed614be]
  407925:	xchg   BYTE PTR [ebx-0x222c6bde],bl
  40792b:	js     0x407985
  40792d:	in     al,0x73
  40792f:	imul   ecx,DWORD PTR [esp+eiz*2],0x3b
  407933:	push   eax
  407934:	out    0xa7,al
  407936:	test   eax,esp
  407938:	dec    esi
  407939:	adc    bh,dh
  40793b:	shl    dl,1
  40793d:	sahf   
  40793e:	dec    ebp
  40793f:	jge    0x40799b
  407941:	xor    DWORD PTR [ecx],edi
  407943:	mov    ds:0xda25db5a,al
  407948:	lahf   
  407949:	retf   0x1750
  40794c:	mov    esi,0x42693d35
  407951:	popa   
  407952:	sub    edx,DWORD PTR [ebp+0x21]
  407955:	cmp    eax,0xb659fea5
  40795a:	pop    ds
  40795b:	push   cs
  40795c:	and    BYTE PTR [ecx],cl
  40795e:	xor    bl,ah
  407960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407961:	fldz   
  407963:	sbb    eax,0x6c1959e9
  407968:	aaa    
  407969:	mov    dh,0x1f
  40796b:	xor    eax,0x602f0902
  407970:	pop    esi
  407971:	add    ch,BYTE PTR ds:0xcb9ad75c
  407977:	les    eax,FWORD PTR [ebx-0x28]
  40797a:	dec    esp
  40797b:	push   ecx
  40797c:	pop    ebx
  40797d:	fwait
  40797e:	add    BYTE PTR [ebp-0x4b],cl
  407981:	inc    ebp
  407982:	and    BYTE PTR gs:[ebp+0x3f48e83f],dh
  407989:	or     al,0xed
  40798b:	arpl   si,cx
  40798d:	pop    esi
  40798e:	inc    edi
  40798f:	bnd jl 0x4079df
  407992:	sub    DWORD PTR [edi-0x69b58aad],edi
  407998:	mov    eax,edi
  40799a:	sahf   
  40799b:	mov    WORD PTR [ebx],gs
  40799d:	sbb    DWORD PTR [edx],0xd858357a
  4079a3:	pop    edi
  4079a4:	ins    BYTE PTR es:[edi],dx
  4079a5:	xchg   DWORD PTR [ebx+0x7e3ac9e5],ecx
  4079ab:	(bad)  
  4079ac:	rcr    BYTE PTR ds:0x9da3ffa9,cl
  4079b2:	lock and cl,dl
  4079b5:	je     0x40794e
  4079b7:	jae    0x407a12
  4079b9:	adc    ecx,DWORD PTR [edi*8-0x387a8488]
  4079c0:	pop    ds
  4079c1:	xchg   ecx,eax
  4079c2:	push   ss
  4079c3:	sbb    al,BYTE PTR [edi]
  4079c5:	(bad)  
  4079c6:	xchg   ecx,eax
  4079c7:	inc    eax
  4079c8:	xor    ah,BYTE PTR [eax+0x6c18af1d]
  4079ce:	jae    0x4079c7
  4079d0:	add    al,0x9b
  4079d2:	out    0xeb,eax
  4079d4:	xchg   esi,eax
  4079d5:	mov    ebx,0xf4f3c878
  4079da:	gs sub al,0x38
  4079dd:	loopne 0x4079de
  4079df:	cmp    al,0x19
  4079e1:	inc    BYTE PTR [esi]
  4079e3:	mov    eax,ds:0xe7be5fc9
  4079e8:	mov    dh,0xb2
  4079ea:	inc    esi
  4079eb:	dec    edx
  4079ec:	cs dec esp
  4079ee:	mov    dl,0x7c
  4079f0:	dec    ebx
  4079f1:	(bad)  
  4079f2:	std    
  4079f3:	push   ebp
  4079f4:	mov    ds:0x8d47611d,al
  4079f9:	dec    ebx
  4079fa:	mov    ah,ah
  4079fc:	pusha  
  4079fd:	cmp    esp,DWORD PTR [esi+0x19]
  407a00:	mov    esi,0x4e7de158
  407a05:	xchg   BYTE PTR [ecx-0x4e],dl
  407a08:	and    al,0xa7
  407a0a:	pop    edx
  407a0b:	lock ds enter 0x277,0xe5
  407a11:	xor    BYTE PTR [esi],ah
  407a13:	fdiv   QWORD PTR [ecx+0x19f7963]
  407a19:	bound  esp,QWORD PTR [esi+esi*8+0x6cb3400f]
  407a20:	clc    
  407a21:	out    0xb5,eax
  407a23:	sub    BYTE PTR [eax],ch
  407a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a26:	sbb    DWORD PTR [ecx],ebx
  407a28:	cs pop es
  407a2a:	jecxz  0x407a67
  407a2c:	enter  0x32da,0x5c
  407a30:	push   esi
  407a31:	pop    eax
  407a32:	jp     0x4079de
  407a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a35:	cmp    DWORD PTR [ebx],edi
  407a37:	shl    DWORD PTR [ebx-0x25],0xa9
  407a3b:	dec    eax
  407a3c:	cld    
  407a3d:	add    al,0xe2
  407a3f:	sbb    ah,ah
  407a41:	push   ebp
  407a42:	repnz adc BYTE PTR [ecx+0x719cf33b],cl
  407a49:	outs   dx,BYTE PTR ds:[esi]
  407a4b:	add    eax,0xb7e5e96a
  407a50:	pop    ebx
  407a51:	aas    
  407a52:	dec    esp
  407a53:	dec    ecx
  407a54:	push   es
  407a55:	pusha  
  407a56:	rcl    BYTE PTR fs:[esi+0x41],0xde
  407a5b:	mov    esp,ds
  407a5d:	mov    al,BYTE PTR [edx]
  407a5f:	sub    edx,DWORD PTR [esp+eax*4]
  407a62:	sbb    al,0xd6
  407a64:	dec    edx
  407a65:	out    0xe7,al
  407a67:	jo     0x407ae8
  407a69:	push   ebp
  407a6a:	or     al,0x83
  407a6c:	or     eax,0xe6531b5a
  407a71:	pop    eax
  407a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a73:	je     0x407aa6
  407a75:	mov    bl,0xdc
  407a77:	outs   dx,DWORD PTR ds:[esi]
  407a78:	loop   0x407a2d
  407a7a:	jl     0x407ae9
  407a7c:	inc    ebx
  407a7d:	add    BYTE PTR [esi-0xf56cc16],ch
  407a83:	fsubr  QWORD PTR [esi+0x43]
  407a86:	test   al,0x66
  407a88:	inc    esp
  407a89:	jnp    0x407a61
  407a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a8c:	call   0xec31:0x9911724c
  407a93:	cs mov dh,0x75
  407a96:	(bad)  
  407a97:	call   0xe398775e
  407a9c:	dec    ebp
  407a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a9e:	mov    BYTE PTR [ecx+0xd],bl
  407aa1:	shl    DWORD PTR [edx+0x4f],cl
  407aa4:	cmp    edi,DWORD PTR [edx-0x3bdf2eb4]
  407aaa:	sub    ch,BYTE PTR [esi-0x29d9e059]
  407ab0:	jae    0x407a6f
  407ab2:	xor    DWORD PTR [ebp+0x72f0ae80],edi
  407ab8:	ds clc 
  407aba:	and    DWORD PTR [ebp+0xf],0x37db9f7d
  407ac1:	or     BYTE PTR [esi],al
  407ac3:	push   eax
  407ac4:	fiadd  WORD PTR [edx+0x22a6fc4]
  407aca:	jecxz  0x407b3a
  407acc:	jo     0x407a6d
  407ace:	hlt    
  407acf:	jae    0x407ac1
  407ad1:	loope  0x407b42
  407ad3:	call   0xbf2a:0xa3e40e44
  407ada:	mov    BYTE PTR [eax],bh
  407adc:	jmp    0xc68c0e8d
  407ae1:	pusha  
  407ae2:	push   ss
  407ae3:	or     dh,BYTE PTR [edx+0x47082228]
  407ae9:	arpl   WORD PTR [ebp+ebx*4-0xc],bp
  407aed:	test   BYTE PTR [esi-0x74de08b2],0x2a
  407af4:	dec    ebp
  407af5:	imul   edx,DWORD PTR [esi+0x60b540c8],0x2551aee0
  407aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b00:	push   ebx
  407b01:	inc    ebp
  407b02:	call   0x47a2:0x82171f08
  407b09:	jns    0x407b52
  407b0b:	pop    ecx
  407b0c:	mov    esi,0x8a9a2cdd
  407b11:	je     0x407a96
  407b13:	ror    DWORD PTR [esi+0x67328488],1
  407b19:	sti    
  407b1a:	mov    edx,0x1e2707a0
  407b1f:	pusha  
  407b20:	push   edi
  407b21:	xlat   BYTE PTR ds:[ebx]
  407b22:	adc    eax,0x692fea3e
  407b27:	push   ds
  407b28:	jmp    0x8e52:0x17426c09
  407b2f:	dec    esi
  407b30:	dec    edi
  407b31:	repz cmp eax,0x8fa07c35
  407b37:	inc    edi
  407b38:	(bad)  
  407b39:	cmc    
  407b3a:	inc    esp
  407b3b:	mov    cl,0x77
  407b3d:	xor    eax,DWORD PTR [eax+ecx*4+0x0]
  407b41:	ins    BYTE PTR es:[edi],dx
  407b42:	add    BYTE PTR [ecx+0x22c9e111],cl
  407b48:	jo     0x407b74
  407b4a:	dec    edi
  407b4b:	xor    DWORD PTR [ecx-0x3e],0x74897a75
  407b52:	into   
  407b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b54:	inc    esi
  407b55:	int3   
  407b56:	pop    ss
  407b57:	aad    0x95
  407b59:	sbb    al,0xe5
  407b5b:	in     al,0x1a
  407b5d:	pop    eax
  407b5e:	add    al,BYTE PTR [ebx-0x48]
  407b61:	call   0x41ee:0x42ccd48d
  407b68:	cdq    
  407b69:	neg    BYTE PTR [esi+0x4e]
  407b6c:	inc    ebp
  407b6d:	sub    edi,DWORD PTR [edi-0x48]
  407b70:	lods   eax,DWORD PTR ds:[esi]
  407b71:	and    al,BYTE PTR [edx+0x4af30f08]
  407b77:	fnstsw WORD PTR [eax+0x7e]
  407b7a:	and    eax,0xb533bff6
  407b7f:	jbe    0x407b4e
  407b81:	dec    ebp
  407b82:	add    ebx,DWORD PTR [ebx]
  407b84:	cld    
  407b85:	mov    ebp,0xfc5dc8fb
  407b8a:	loop   0x407bc6
  407b8c:	pop    edx
  407b8d:	and    eax,0xc933f806
  407b92:	jb     0x407bbe
  407b94:	mov    ds:0xe20ca8d9,eax
  407b99:	daa    
  407b9a:	mov    ds:0xfedb2482,al
  407b9f:	mov    ebp,0x52a0c49f
  407ba4:	and    ch,0x38
  407ba7:	push   ebx
  407ba8:	call   0x5163a4b5
  407bad:	lahf   
  407bae:	fistp  WORD PTR [esi-0x441f5383]
  407bb4:	xor    eax,0x8e058f5b
  407bb9:	imul   edx,ecx,0x1c6afeca
  407bbf:	retf   
  407bc0:	mov    dh,0xd7
  407bc2:	dec    ecx
  407bc3:	les    edi,FWORD PTR ds:0x650e6c97
  407bc9:	xchg   ecx,eax
  407bca:	ret    
  407bcb:	(bad)
  407bce:	rcr    DWORD PTR [edi-0x4e],1
  407bd1:	in     al,0xf7
  407bd3:	mov    eax,ds:0x446cf800
  407bd8:	cmp    dh,BYTE PTR [edi+0x10]
  407bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bdd:	push   esp
  407bde:	fnstsw WORD PTR [ebx+0x48]
  407be1:	(bad)  
  407be2:	adc    cl,BYTE PTR [edx-0x26]
  407be5:	imul   edi,DWORD PTR [ecx-0x2a0d20b5],0xffffffc3
  407bec:	fsub   QWORD PTR [ebx+ebx*1+0x2f96cf2d]
  407bf3:	sub    eax,0xe8a9e5b1
  407bf8:	or     ah,BYTE PTR [eax]
  407bfa:	in     eax,dx
  407bfb:	test   eax,0xc6ea0d1e
  407c00:	push   ds
  407c01:	outs   dx,DWORD PTR ds:[esi]
  407c02:	jo     0x407c13
  407c04:	test   eax,0x8e4c3702
  407c09:	pop    edx
  407c0a:	mov    bl,0x2b
  407c0c:	sti    
  407c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c0e:	fs xchg ecx,eax
  407c10:	ret    
  407c11:	cmp    DWORD PTR [ebp-0x41],edx
  407c14:	dec    edi
  407c15:	or     BYTE PTR [ecx-0x47cc91a5],al
  407c1b:	mov    eax,ds:0x35e2ae51
  407c20:	in     eax,0x9f
  407c22:	xchg   edx,eax
  407c23:	mov    edi,0x3e080e84
  407c28:	push   eax
  407c29:	push   0xab913cc4
  407c2e:	jmp    0x407be7
  407c30:	retf   0x3fd
  407c33:	aas    
  407c34:	pop    ebp
  407c35:	call   0xfaf8:0x750ed566
  407c3c:	(bad)  [ecx+0x7a7e7c3c]
  407c42:	repz mov dl,0x90
  407c45:	stos   BYTE PTR es:[edi],al
  407c46:	cmp    edi,DWORD PTR [ecx]
  407c48:	or     BYTE PTR [esi],ch
  407c4a:	aad    0x7c
  407c4c:	xchg   edx,eax
  407c4d:	sbb    al,0xb1
  407c4f:	mov    cl,0x9a
  407c51:	shl    BYTE PTR [ecx],cl
  407c53:	in     al,0xc9
  407c55:	aad    0x1
  407c57:	cmp    BYTE PTR [edi+0xe],0x99
  407c5b:	add    eax,0x8d0b9a8e
  407c60:	pop    esi
  407c61:	int    0xb7
  407c63:	sub    BYTE PTR [esi+0x39],dl
  407c66:	inc    esi
  407c67:	jb     0x407bfe
  407c69:	sti    
  407c6a:	and    BYTE PTR [esi],dh
  407c6c:	pop    ebx
  407c6d:	xor    al,0xa0
  407c6f:	nop
  407c70:	mov    esp,0x2107a9a1
  407c75:	lods   al,BYTE PTR ds:[esi]
  407c76:	sbb    BYTE PTR [ecx],dl
  407c78:	dec    ebx
  407c7a:	mov    ds:0xaa295b81,eax
  407c7f:	sbb    al,0x85
  407c81:	enter  0x321,0xc7
  407c85:	sbb    ebx,DWORD PTR [edx]
  407c87:	cs inc esi
  407c89:	aad    0xd1
  407c8b:	jmp    0x407c5b
  407c8d:	pop    ss
  407c8e:	int3   
  407c8f:	mov    eax,0x3d728514
  407c94:	fist   WORD PTR [ecx-0xf]
  407c97:	hlt    
  407c98:	clc    
  407c99:	add    eax,0xfcad34da
  407c9e:	mov    dh,0x73
  407ca0:	popa   
  407ca1:	jmp    FWORD PTR [edx-0x4920ab29]
  407ca7:	adc    esi,edx
  407ca9:	cmp    eax,0x1c91e058
  407cae:	xchg   ebx,eax
  407caf:	pop    ebp
  407cb0:	push   ds
  407cb1:	jge    0x407d04
  407cb3:	jbe    0x407cfd
  407cb5:	repnz lea eax,[eax+0x12]
  407cb9:	leave  
  407cba:	and    edi,DWORD PTR [ecx]
  407cbc:	and    eax,0x35b065e4
  407cc1:	shl    BYTE PTR [ebx],0x3e
  407cc4:	jbe    0x407c91
  407cc6:	ja     0x407ca1
  407cc8:	sbb    dh,ch
  407cca:	jmp    0x407c81
  407ccc:	xor    dl,BYTE PTR [edx]
  407cce:	ins    BYTE PTR es:[edi],dx
  407ccf:	fs out dx,eax
  407cd1:	mov    edx,cs
  407cd3:	(bad)  
  407cd4:	fs dec esp
  407cd6:	pushf  
  407cd7:	push   esi
  407cd8:	clc    
  407cd9:	scas   al,BYTE PTR es:[edi]
  407cda:	sub    dl,al
  407cdc:	in     eax,0xd
  407cde:	jg     0x407c88
  407ce0:	div    BYTE PTR [edi+0x63]
  407ce3:	push   es
  407ce4:	mov    esp,0xfbd56db
  407ce9:	pop    DWORD PTR [ecx+ebx*4]
  407cec:	ror    DWORD PTR [ecx-0x36],0xa1
  407cf0:	xor    bh,BYTE PTR [eax-0x65]
  407cf3:	addr16 js 0x407cf5
  407cf6:	dec    ebx
  407cf7:	jmp    edi
  407cf9:	xchg   ebx,eax
  407cfa:	jmp    0x66bb8c0a
  407cff:	aas    
  407d00:	daa    
  407d01:	pushf  
  407d02:	dec    ebx
  407d03:	mov    esi,DWORD PTR [ecx+edx*8]
  407d06:	pop    eax
  407d07:	imul   ebp,DWORD PTR [ebp+0x7b736e8],0xffffffe1
  407d0e:	pop    ss
  407d0f:	cld    
  407d10:	xchg   edi,eax
  407d11:	push   ebp
  407d12:	mov    esi,0x9468e075
  407d17:	(bad)  
  407d18:	jne    0x407c9f
  407d1a:	test   eax,0xa0c89fbd
  407d1f:	inc    eax
  407d20:	add    DWORD PTR [edx+0x7455ef1b],0x90ff9b3c
  407d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d2b:	fld    DWORD PTR [edx-0x1d]
  407d2e:	rol    BYTE PTR [edi+0x4bb3c54a],0x2a
  407d35:	mov    eax,esi
  407d37:	inc    edi
  407d38:	int3   
  407d39:	rcr    DWORD PTR fs:[eax+0x18],1
  407d3d:	push   ss
  407d3e:	mov    ch,0x7
  407d40:	aam    0x7d
  407d42:	dec    bx
  407d44:	or     BYTE PTR [ebx+0x50],ah
  407d47:	ja     0x407d5f
  407d49:	sub    BYTE PTR [esi+0x547b1fd9],ah
  407d4f:	mov    bh,dh
  407d51:	js     0x407d23
  407d53:	out    dx,eax
  407d54:	lahf   
  407d55:	shr    BYTE PTR [ebx+ecx*2],0xb4
  407d59:	push   eax
  407d5a:	es clc 
  407d5c:	out    0x8a,al
  407d5e:	dec    esi
  407d5f:	leave  
  407d60:	in     al,dx
  407d61:	stc    
  407d62:	dec    ebp
  407d63:	push   eax
  407d64:	ja     0x407dc5
  407d66:	pushf  
  407d67:	shr    BYTE PTR [edx+0x5307350a],cl
  407d6d:	std    
  407d6e:	xor    ch,cl
  407d70:	lock cmp DWORD PTR [esi+0x6b],ebx
  407d74:	add    DWORD PTR [ecx+0xcc3285f],eax
  407d7a:	add    al,0xdb
  407d7c:	jb     0x407d0f
  407d7e:	cmp    esi,DWORD PTR [edi-0x3f0ee11c]
  407d84:	and    DWORD PTR [edi-0x66cb1b9c],ecx
  407d8a:	xor    esi,DWORD PTR [edi+eax*8-0x767105d9]
  407d91:	div    BYTE PTR [esi-0x6ad519b6]
  407d97:	push   ebp
  407d98:	dec    eax
  407d99:	mov    al,ds:0xd54391d9
  407d9e:	sub    al,0xf7
  407da0:	sub    al,BYTE PTR [ecx-0x7331a499]
  407da6:	xor    cl,BYTE PTR ds:0x507ece42
  407dac:	sti    
  407dad:	jae    0x407d32
  407daf:	dec    BYTE PTR [ebp+0x43]
  407db2:	xlat   BYTE PTR ds:[ebx]
  407db3:	mov    edi,0x2421176
  407db8:	jns    0x407d57
  407dba:	aas    
  407dbb:	pop    eax
  407dbc:	shr    dl,cl
  407dbe:	mov    ds:0x3c284355,eax
  407dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dc4:	pop    ds
  407dc5:	and    edi,ecx
  407dc7:	xchg   DWORD PTR [eax],esp
  407dc9:	mov    ebp,0xdae7e730
  407dce:	mov    ds:0x74bbd3c,al
  407dd3:	mov    bh,0x7a
  407dd5:	dec    esi
  407dd6:	test   al,0xac
  407dd8:	mov    ?,WORD PTR [ebx]
  407dda:	push   0xf
  407ddc:	jnp    0x407dbc
  407dde:	or     eax,0x16422d1a
  407de3:	and    BYTE PTR [edx+0x57],bl
  407de6:	test   dl,0x24
  407de9:	sbb    ch,ah
  407deb:	jge    0x407db9
  407ded:	push   esp
  407dee:	inc    esi
  407def:	aaa    
  407df0:	mov    WORD PTR [edi+edx*8-0x7912bb57],es
  407df7:	dec    ch
  407df9:	nop
  407dfa:	dec    ecx
  407dfb:	mov    eax,ds:0x828f8ee7
  407e00:	pop    ecx
  407e01:	retf   
  407e02:	retf   0x15ab
  407e05:	fs retf 
  407e07:	clc    
  407e08:	sbb    esp,DWORD PTR [ecx-0x3566b81b]
  407e0e:	jns    0x407e2c
  407e10:	arpl   dx,di
  407e12:	pusha  
  407e13:	sbb    eax,0xde590514
  407e18:	jnp    0x407dca
  407e1a:	dec    esp
  407e1b:	sets   BYTE PTR [ebp-0x44]
  407e1f:	pop    edx
  407e20:	test   DWORD PTR [esp+ebx*8],ebp
  407e23:	retf   0x4225
  407e26:	mov    ebx,0x7f2c34d3
  407e2b:	mov    ebp,0x505a3de3
  407e30:	ret    
  407e31:	xchg   BYTE PTR [edi+0x2ecc50c5],bl
  407e37:	add    dh,bh
  407e39:	cmp    dh,0x4f
  407e3c:	shr    BYTE PTR [ecx+0x50],0x99
  407e40:	fs shl ch,0x9d
  407e44:	adc    DWORD PTR [edx+0x68],esi
  407e47:	hlt    
  407e48:	cmp    al,bl
  407e4a:	lods   eax,DWORD PTR ds:[esi]
  407e4b:	push   ecx
  407e4c:	and    ebp,DWORD PTR ds:0x24700b39
  407e52:	adc    ebp,esi
  407e54:	js     0x407e94
  407e56:	cwde   
  407e57:	aam    0xe7
  407e59:	mov    eax,0x9250957f
  407e5e:	loope  0x407e1d
  407e60:	fsub   QWORD PTR [edi+ebx*8+0x3c]
  407e64:	xor    BYTE PTR [eax],0x7d
  407e67:	stos   BYTE PTR es:[edi],al
  407e68:	mov    ds:0xda673763,eax
  407e6d:	add    ebx,DWORD PTR [ebx+eiz*8]
  407e70:	dec    ebp
  407e71:	test   eax,0xc9d8d7e8
  407e76:	mov    esi,0xe4b18f0c
  407e7b:	jo     0x407e11
  407e7d:	stos   BYTE PTR es:[edi],al
  407e7e:	xchg   ecx,eax
  407e7f:	push   edi
  407e80:	icebp  
  407e81:	ss out 0x40,eax
  407e84:	enter  0xb7d7,0x86
  407e88:	push   0x8dbee470
  407e8d:	pop    ebx
  407e8e:	fst    QWORD PTR [ecx]
  407e90:	cld    
  407e91:	pop    ds
  407e92:	and    eax,0xac7e4619
  407e97:	adc    edi,DWORD PTR [eax+0x50]
  407e9a:	mov    edi,DWORD PTR [esp+edi*8]
  407e9d:	mov    edi,0x6959cf0d
  407ea2:	inc    esi
  407ea3:	inc    esi
  407ea5:	popf   
  407ea6:	pop    ebp
  407ea7:	ins    BYTE PTR es:[edi],dx
  407ea8:	test   al,0x65
  407eaa:	jmp    0x407f15
  407eac:	xor    BYTE PTR [edx],0xb0
  407eaf:	push   0x6e
  407eb1:	test   DWORD PTR [ebx],eax
  407eb3:	jbe    0x407eb1
  407eb5:	and    eax,0xb40c454b
  407eba:	push   es
  407ebb:	xor    DWORD PTR [edx],edx
  407ebd:	xor    esi,eax
  407ebf:	daa    
  407ec0:	cmp    DWORD PTR [esp+edi*1+0xbc74f2e],0xec153d6b
  407ecb:	outs   dx,DWORD PTR ds:[esi]
  407ecc:	dec    ebp
  407ecd:	mov    bl,0x5f
  407ecf:	adc    ah,BYTE PTR [edx+0x7d]
  407ed2:	xor    al,0x16
  407ed4:	inc    edx
  407ed5:	(bad)  
  407ed6:	std    
  407ed7:	in     al,dx
  407ed8:	inc    eax
  407ed9:	push   eax
  407eda:	cli    
  407edb:	loope  0x407e8e
  407edd:	mov    ebp,0xa3d252b3
  407ee2:	rol    eax,cl
  407ee4:	(bad)  [ecx-0x26]
  407ee7:	(bad)  
  407ee8:	aad    0x6b
  407eea:	mov    al,ds:0xa05e35cf
  407eef:	ins    DWORD PTR es:[edi],dx
  407ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ef1:	mov    dx,WORD PTR [edx+0x5b]
  407ef5:	push   0xffffff8a
  407ef7:	aaa    
  407ef8:	push   eax
  407ef9:	dec    edx
  407efa:	outs   dx,BYTE PTR ds:[esi]
  407efb:	sti    
  407efc:	aas    
  407efd:	test   DWORD PTR [eax],edi
  407eff:	cmp    al,0x22
  407f01:	test   al,0xff
  407f03:	sub    edi,0xef2f00a4
  407f09:	out    dx,al
  407f0a:	cmp    BYTE PTR [esi+ebp*1+0x45],ah
  407f0e:	sbb    esp,0xf391888a
  407f14:	mov    BYTE PTR [eax],cl
  407f16:	test   BYTE PTR [ebx-0x37],ch
  407f19:	stos   BYTE PTR es:[edi],al
  407f1a:	pop    ecx
  407f1b:	ins    BYTE PTR es:[edi],dx
  407f1c:	push   edi
  407f1d:	add    al,0xfd
  407f1f:	pushf  
  407f20:	jle    0x407ecb
  407f22:	dec    ecx
  407f23:	inc    esi
  407f24:	pop    ecx
  407f25:	js     0x407f09
  407f27:	inc    edx
  407f28:	out    0x13,al
  407f2a:	mov    eax,0xc69dc2c2
  407f2f:	adc    esp,DWORD PTR [ebp-0x41]
  407f32:	add    bl,BYTE PTR [edx]
  407f34:	adc    BYTE PTR [eax+esi*4-0x3bd6d71c],dh
  407f3b:	in     eax,0x3f
  407f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f3f:	mov    ds:0x4ef6c565,al
  407f44:	sub    al,0x3e
  407f46:	aas    
  407f47:	enter  0x8ef2,0x7e
  407f4b:	jp     0x407fc0
  407f4d:	add    eax,0x1b2d46be
  407f52:	dec    edi
  407f53:	sar    DWORD PTR [ecx+edx*1],1
  407f56:	imul   ebp,DWORD PTR [esi-0x32],0xffffff98
  407f5a:	dec    ecx
  407f5b:	sbb    eax,0x16b28461
  407f60:	add    ax,0x9225
  407f64:	shufps xmm2,xmm3,0x80
  407f68:	cdq    
  407f69:	push   es
  407f6a:	and    BYTE PTR [ecx],bl
  407f6c:	test   BYTE PTR [edi-0x3891fff3],0x38
  407f73:	sub    DWORD PTR [esi+0x2f87d9],0x53
  407f7a:	push   esp
  407f7b:	sti    
  407f7c:	xor    BYTE PTR [edi+eiz*1],al
  407f7f:	call   0x907e:0xf6571a98
  407f86:	ins    DWORD PTR es:[edi],dx
  407f87:	aaa    
  407f88:	dec    eax
  407f89:	adc    ah,dl
  407f8b:	pop    es
  407f8c:	loope  0x407f58
  407f8e:	outs   dx,BYTE PTR ds:[esi]
  407f8f:	dec    edi
  407f90:	int    0x27
  407f92:	and    ah,BYTE PTR cs:[esi+ebp*2]
  407f96:	sub    BYTE PTR [ebp+0x23],dl
  407f99:	daa    
  407f9a:	push   0xf4e8c3a4
  407f9f:	mov    ah,0x5e
  407fa1:	repnz or bl,dh
  407fa4:	int3   
  407fa5:	add    edi,esp
  407fa7:	lock leave 
  407fa9:	test   cl,cl
  407fab:	xor    BYTE PTR [ecx+0x5a0f04c4],bl
  407fb1:	test   eax,0xb70d2359
  407fb6:	dec    ebp
  407fb7:	add    esi,DWORD PTR [edi+0x2f1d8bc]
  407fbd:	mov    esi,0xd162c78b
  407fc2:	pushf  
  407fc3:	push   esi
  407fc4:	mov    DWORD PTR [ecx],0xca05ee96
  407fca:	cmp    DWORD PTR [edx+0x4b085022],ebx
  407fd0:	dec    edi
  407fd1:	jns    0x407f75
  407fd3:	pusha  
  407fd4:	pop    ebx
  407fd5:	cmp    dl,BYTE PTR [ecx]
  407fd7:	or     DWORD PTR [ecx-0xa],edx
  407fda:	jbe    0x407ff6
  407fdc:	out    dx,al
  407fdd:	sub    al,BYTE PTR [ebx-0x4eb52029]
  407fe3:	jle    0x407ff7
  407fe5:	pop    ecx
  407fe6:	mov    al,0xb0
  407fe8:	xchg   edx,esi
  407fea:	xchg   ebp,eax
  407feb:	xchg   edi,eax
  407fec:	int3   
  407fed:	imul   ebx,DWORD PTR [eax],0x772309d3
  407ff3:	arpl   cx,bp
  407ff5:	(bad)  
  407ff6:	mov    ?,WORD PTR [ebp+ebp*8-0x27]
  407ffa:	gs dec ebx
  407ffc:	shl    BYTE PTR ds:0xbb41079b,1
  408002:	mov    ch,0x50
  408004:	aam    0xfc
  408006:	fdivr  QWORD PTR [eax+0x0]
  408009:	stos   BYTE PTR es:[edi],al
  40800a:	or     al,0x27
  40800c:	or     al,0x90
  40800e:	(bad)  
  40800f:	ret    0xbf35
  408012:	fmul   DWORD PTR [edx+0x6926a6d]
  408018:	push   ecx
  408019:	jmp    0xc5bf9b9f
  40801e:	pop    edi
  40801f:	shl    DWORD PTR [ebx],cl
  408021:	retf   0x73b6
  408024:	adc    dl,BYTE PTR [edi-0x2]
  408027:	fimul  DWORD PTR ds:0x43d8f3ae
  40802d:	lea    edi,[ebx]
  40802f:	call   0x467ce556
  408034:	repnz mov DWORD PTR gs:[eax],edx
  408038:	test   ax,0x9b2e
  40803c:	lahf   
  40803d:	and    eax,0x53a88d5b
  408042:	mov    ecx,0xcba9172
  408047:	rcl    DWORD PTR [eax],cl
  408049:	adc    al,0x7b
  40804b:	mov    esi,eax
  40804d:	dec    ebx
  40804e:	adc    dl,BYTE PTR [edx+0x42342b5]
  408054:	rol    DWORD PTR [esi+0x1d6be9f2],0xbc
  40805b:	mov    ebx,0x6f47fa81
  408060:	mov    dl,0xc2
  408062:	or     esi,esp
  408064:	gs push edi
  408066:	cmp    al,0x1
  408068:	jno    0x407feb
  40806a:	cdq    
  40806b:	mov    ds:0xfa9238a9,al
  408070:	out    dx,eax
  408071:	add    eax,0xa4db0095
  408076:	cmp    ebx,ebp
  408078:	pushf  
  408079:	dec    edx
  40807a:	cdq    
  40807b:	adc    eax,0xc63b1622
  408080:	and    DWORD PTR [edx+0x5],0x78
  408084:	pop    ebp
  408085:	ret    
  408086:	iret   
  408087:	test   DWORD PTR [edx+0x62],esp
  40808a:	loopne 0x40803c
  40808c:	out    0x79,eax
  40808e:	or     edi,eax
  408090:	pop    esp
  408091:	or     ebx,DWORD PTR [ebp+eax*4-0x44]
  408095:	repz adc esp,DWORD PTR [esi+ebp*2+0x3f]
  40809a:	ss popa 
  40809c:	leave  
  40809d:	jbe    0x40806a
  40809f:	push   edi
  4080a0:	inc    ebp
  4080a1:	xchg   edx,eax
  4080a2:	mov    bl,0xc9
  4080a4:	shr    ch,1
  4080a6:	jg     0x4080d8
  4080a8:	test   ebp,edi
  4080aa:	outs   dx,DWORD PTR ds:[esi]
  4080ab:	lods   eax,DWORD PTR ds:[esi]
  4080ac:	aad    0x86
  4080ae:	ror    BYTE PTR [ebx+0x52e2ff7f],cl
  4080b4:	sti    
  4080b5:	loope  0x408085
  4080b7:	(bad)  
  4080b8:	jp     0x4080fa
  4080ba:	dec    edx
  4080bb:	mov    ecx,DWORD PTR [ecx+eax*1-0x63c0edef]
  4080c2:	and    ebp,DWORD PTR ds:[eax+0x5c095f12]
  4080c9:	and    BYTE PTR [ecx],dl
  4080cb:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4080cd:	mov    bh,0x4d
  4080cf:	(bad)  
  4080d1:	in     eax,0xbb
  4080d3:	cmp    DWORD PTR ds:0x7250cb3f,ebp
  4080d9:	and    bl,0xb7
  4080dc:	mov    ds:0x9a6defde,al
  4080e1:	pop    ds
  4080e2:	fst    DWORD PTR [ebx]
  4080e4:	pusha  
  4080e5:	or     BYTE PTR [eax-0x4a],bh
  4080e8:	adc    eax,0x162eab0
  4080ed:	ret    0x14f9
  4080f0:	cmp    BYTE PTR [eax+0x16d932e2],dh
  4080f6:	add    al,0x26
  4080f8:	xlat   BYTE PTR ds:[ebx]
  4080f9:	(bad)  
  4080fa:	sbb    BYTE PTR [ecx],al
  4080fc:	vunpckhpd ymm6,ymm5,ymm5
  408100:	mov    esp,0xb66a89a8
  408105:	retf   0x7092
  408108:	jmp    0x99b47f39
  40810d:	inc    esi
  40810e:	sbb    esi,ecx
  408110:	ds (bad) 
  408112:	pop    ebp
  408113:	mov    edx,0xc47ac205
  408118:	std    
  408119:	push   ebp
  40811a:	push   ds
  40811b:	xchg   esp,eax
  40811c:	push   es
  40811d:	mov    ebp,0x32d1464f
  408122:	dec    esi
  408123:	inc    ebp
  408124:	(bad)  
  408125:	ss xchg ecx,eax
  408127:	sub    al,0xf0
  408129:	push   cs
  40812a:	aad    0x35
  40812c:	out    dx,al
  40812d:	xchg   esi,eax
  40812e:	test   ecx,ecx
  408130:	adc    ebx,ebx
  408132:	ret    
  408133:	popa   
  408134:	cmp    dh,BYTE PTR [eax+0x4]
  408137:	mov    dh,BYTE PTR [ecx]
  408139:	jmp    0x408162
  40813b:	sbb    edi,eax
  40813d:	jbe    0x4081a1
  40813f:	push   es
  408140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408141:	bound  esp,QWORD PTR [edx-0x1a]
  408144:	push   ecx
  408145:	add    BYTE PTR [edi+0x579e8f06],dh
  40814b:	ss (bad) 
  40814e:	xchg   ebx,eax
  40814f:	(bad)  
  408150:	and    al,0xe5
  408152:	icebp  
  408153:	dec    ebp
  408154:	xlat   BYTE PTR ds:[ebx]
  408155:	ficomp WORD PTR [ebp+0x6408f086]
  40815b:	test   BYTE PTR [ebx-0x2b],al
  40815e:	retf   
  40815f:	gs dec ebp
  408161:	iret   
  408162:	test   eax,0x948c61a2
  408167:	sub    eax,0xf6d9fa78
  40816c:	cmc    
  40816d:	stc    
  40816e:	xchg   DWORD PTR [eax-0xb],ebp
  408171:	or     ebp,ecx
  408173:	call   0xf13b12a5
  408178:	and    dh,dl
  40817a:	pmulhw mm3,mm6
  40817d:	sub    ecx,DWORD PTR [ebx]
  40817f:	lods   eax,DWORD PTR ds:[esi]
  408180:	mov    ah,ah
  408182:	rol    BYTE PTR [esi],0x8
  408185:	imul   esi,DWORD PTR [edi+0x7fc12502],0x21f4e710
  40818f:	(bad)  
  408190:	shr    BYTE PTR [ecx-0x34a95f6d],1
  408196:	loopne 0x408206
  408198:	lahf   
  408199:	popf   
  40819a:	push   ebp
  40819b:	cmp    cl,0x94
  40819e:	imul   DWORD PTR [ebx-0x64]
  4081a1:	and    eax,0x8128ecdb
  4081a6:	pop    esi
  4081a7:	or     BYTE PTR [edi-0x66],dl
  4081aa:	ds jo  0x408215
  4081ad:	sbb    dh,dl
  4081af:	fcmovbe st,st(1)
  4081b1:	inc    esp
  4081b2:	fld    DWORD PTR [edx]
  4081b4:	jns    0x4081f9
  4081b6:	leave  
  4081b7:	sub    dl,BYTE PTR [ebx+0x19]
  4081ba:	xor    BYTE PTR [esi-0x39dc6f22],ah
  4081c0:	xchg   ecx,eax
  4081c1:	rcl    BYTE PTR [edi],cl
  4081c3:	dec    eax
  4081c4:	xlat   BYTE PTR ds:[ebx]
  4081c5:	inc    esp
  4081c6:	or     DWORD PTR [edx],eax
  4081c8:	pop    ecx
  4081c9:	or     ebx,esi
  4081cb:	dec    eax
  4081cc:	mov    ds:0xfd774e33,al
  4081d1:	cld    
  4081d2:	into   
  4081d3:	jmp    0x55b5f329
  4081d8:	fisubr DWORD PTR [edx]
  4081da:	inc    ebp
  4081db:	int3   
  4081dc:	std    
  4081dd:	nop
  4081de:	ds test al,0xc1
  4081e1:	push   ebx
  4081e2:	mov    DWORD PTR [eax-0x6b3f576d],ebp
  4081e8:	jg     0x408237
  4081ea:	js     0x408269
  4081ec:	mov    bl,0xbf
  4081ee:	pop    esi
  4081ef:	(bad)  
  4081f0:	sub    BYTE PTR [ebx+eiz*8-0x7781547c],ch
  4081f7:	push   ss
  4081f8:	jmp    0x7629:0x1fc015a7
  4081ff:	and    bh,BYTE PTR [edi+0x5c04031b]
  408205:	popf   
  408206:	cmc    
  408207:	sti    
  408208:	push   eax
  408209:	or     eax,0xcb6710e4
  40820e:	ficom  WORD PTR [eax+0x30]
  408211:	push   edi
  408212:	mov    BYTE PTR [ebp-0x49],bh
  408215:	xor    ebp,DWORD PTR [eax+0x7d]
  408218:	jmp    0x4081e7
  40821a:	pop    ds
  40821b:	test   edx,ebp
  40821d:	inc    ebx
  40821e:	std    
  40821f:	pop    esi
  408220:	cmp    ebx,DWORD PTR ds:0xabe093de
  408226:	ficomp WORD PTR ds:0x6c149415
  40822c:	push   edi
  40822d:	ss xchg edx,eax
  40822f:	sbb    ebp,DWORD PTR [esi]
  408231:	pop    ecx
  408232:	add    DWORD PTR [esi-0x7d],ecx
  408235:	loopne 0x408209
  408237:	icebp  
  408238:	clc    
  408239:	xchg   edx,eax
  40823a:	in     eax,0x2a
  40823c:	ss out dx,al
  40823e:	dec    ebp
  40823f:	sbb    al,0xe4
  408241:	jp     0x4082b2
  408243:	ins    DWORD PTR es:[edi],dx
  408244:	test   dl,bh
  408246:	jecxz  0x4082c1
  408248:	fs mov ah,0xf9
  40824b:	mov    fs,WORD PTR [edx]
  40824d:	and    DWORD PTR [edx-0x48],eax
  408250:	ror    DWORD PTR [eax+eiz*1+0x6181d7f2],0xe8
  408258:	ds jl  0x40823d
  40825b:	cmc    
  40825c:	cmp    esp,eax
  40825e:	adc    al,BYTE PTR [esi-0xa1528a7]
  408264:	mov    esi,0x27f95a97
  408269:	sbb    eax,0x8affe8f1
  40826e:	cmc    
  40826f:	cmc    
  408270:	ins    BYTE PTR es:[edi],dx
  408271:	pop    edi
  408272:	das    
  408273:	mov    gs,edx
  408275:	shr    BYTE PTR [edx-0x240a9796],0xbc
  40827c:	push   esp
  40827d:	ret    
  40827e:	jmp    0x40822f
  408280:	(bad)  
  408281:	out    dx,eax
  408282:	ins    BYTE PTR es:[edi],dx
  408283:	dec    esi
  408284:	adc    BYTE PTR [eax+0xac3dc04],bh
  40828a:	jbe    0x4082c4
  40828c:	fwait
  40828d:	pop    es
  40828e:	sbb    ecx,DWORD PTR [edx+0x49368c72]
  408294:	hlt    
  408295:	call   0xbca7:0x31207f89
  40829c:	push   ebp
  40829d:	jnp    0x408236
  40829f:	sbb    edx,DWORD PTR [ebx-0x58ca160]
  4082a5:	nop
  4082a6:	fdivr  DWORD PTR [eax]
  4082a8:	inc    esp
  4082a9:	nop
  4082aa:	fs inc ecx
  4082ac:	pop    esi
  4082ad:	mov    edi,0x91e7b844
  4082b2:	ins    BYTE PTR es:[edi],dx
  4082b3:	push   cs
  4082b4:	scas   eax,DWORD PTR es:[edi]
  4082b5:	jnp    0x40828e
  4082b7:	sbb    DWORD PTR [eax+0x48026688],ebx
  4082bd:	sub    eax,0x2e299f40
  4082c2:	dec    eax
  4082c3:	leave  
  4082c4:	cs cmp eax,0x53cc17b7
  4082ca:	nop
  4082cb:	sbb    DWORD PTR [edx+0x47],0xc31dfd43
  4082d2:	scas   eax,DWORD PTR es:[edi]
  4082d3:	xorps  xmm5,XMMWORD PTR [ecx]
  4082d6:	adc    edx,ecx
  4082d8:	mov    eax,ds:0x40094e74
  4082dd:	maxps  xmm4,XMMWORD PTR [esi]
  4082e0:	out    0xb1,eax
  4082e2:	enter  0x25dd,0xcd
  4082e6:	jle    0x408345
  4082e8:	dec    ebp
  4082e9:	dec    edx
  4082ea:	adc    eax,0x73d43a43
  4082ef:	pushf  
  4082f0:	mov    cl,0x52
  4082f2:	xor    DWORD PTR [edx-0x3b],edx
  4082f5:	dec    eax
  4082f6:	cmp    eax,0x1a586e21
  4082fb:	pop    ebx
  4082fc:	or     eax,0x5aad8012
  408301:	mov    dl,BYTE PTR [esi]
  408303:	mov    edx,0xe4b141cd
  408309:	bound  esp,QWORD PTR [ebp+0x3e]
  40830c:	inc    edi
  40830d:	or     esp,DWORD PTR [ecx]
  40830f:	push   ss
  408310:	mov    ah,0x92
  408312:	and    DWORD PTR [eax-0x76aaf81a],ebp
  408318:	ret    
  408319:	sbb    esi,DWORD PTR [ecx+0x26]
  40831c:	sbb    eax,0x5e001b1a
  408321:	mov    ecx,0xaaeb89e3
  408326:	retf   0x2b85
  408329:	nop
  40832a:	(bad)  
  40832b:	loope  0x40832b
  40832d:	das    
  40832e:	sti    
  40832f:	xlat   BYTE PTR ds:[ebx]
  408330:	jmp    0xdf20:0xd92fa0ef
  408337:	xlat   BYTE PTR ds:[ebx]
  408338:	scas   al,BYTE PTR es:[edi]
  408339:	jno    0x408391
  40833b:	icebp  
  40833c:	int3   
  40833d:	inc    edx
  40833e:	gs cwde 
  408340:	cdq    
  408341:	mov    bh,0x79
  408343:	sbb    eax,0x7787c0ed
  408348:	test   DWORD PTR [ebp-0x26],ebx
  40834b:	loopne 0x408326
  40834d:	mov    esi,0xd686978b
  408352:	adc    edx,DWORD PTR [ecx-0x23]
  408355:	aas    
  408356:	ins    DWORD PTR es:[edi],dx
  408357:	xor    eax,0xbf13b29f
  40835c:	xchg   edx,eax
  40835d:	dec    ecx
  40835e:	pop    esp
  40835f:	add    dl,BYTE PTR [ebx-0x3d]
  408362:	jae    0x408364
  408364:	jp     0x408324
  408366:	(bad)  
  408367:	cli    
  408368:	add    al,0xd0
  40836a:	or     BYTE PTR [esi+0x50f1009d],ch
  408370:	mov    cl,0xa3
  408372:	push   ebp
  408373:	ss jno 0x40839b
  408376:	cwde   
  408377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408378:	jbe    0x408351
  40837a:	lds    esp,FWORD PTR [eax]
  40837c:	sbb    BYTE PTR [ecx-0x65],bh
  40837f:	xchg   ecx,eax
  408380:	jno    0x408352
  408382:	out    0xd,al
  408384:	jne    0x40838a
  408386:	push   esi
  408387:	add    esp,DWORD PTR [edx-0x36bc1db]
  40838d:	aaa    
  40838e:	addr16 mov edx,0x3c1ada92
  408394:	or     ch,BYTE PTR [edi]
  408396:	int    0xa6
  408398:	retf   0x5411
  40839b:	pop    ecx
  40839c:	fiadd  WORD PTR [eax+0x31]
  40839f:	push   0x46
  4083a1:	out    0x3f,al
  4083a3:	and    eax,0xc9c4647
  4083a8:	ret    
  4083a9:	sub    eax,0xedc375dc
  4083ae:	jmp    0x4083c7
  4083b0:	out    dx,eax
  4083b1:	mul    ecx
  4083b3:	inc    edx
  4083b4:	loope  0x40838c
  4083b6:	bound  esp,QWORD PTR [ebx]
  4083b8:	adc    BYTE PTR [edx+0x14a5ade2],0xd9
  4083bf:	pop    esi
  4083c0:	inc    esp
  4083c1:	out    0xe9,eax
  4083c3:	mov    eax,ds:0xf240749e
  4083c8:	xchg   edx,eax
  4083c9:	mov    ecx,DWORD PTR [edi]
  4083cb:	jmp    0x9806:0x6cfc4a55
  4083d2:	add    esi,ebx
  4083d4:	ret    
  4083d5:	scas   al,BYTE PTR es:[edi]
  4083d6:	dec    bl
  4083d8:	fidiv  WORD PTR [edi+0x28c03db2]
  4083de:	ffree  st(3)
  4083e0:	or     DWORD PTR [ebx+eiz*1+0x3b],0x69
  4083e5:	push   0x68d8de21
  4083ea:	mov    bl,0x8a
  4083ec:	outs   dx,DWORD PTR ds:[esi]
  4083ed:	inc    edx
  4083ee:	imul   esp,DWORD PTR [ebx+0x28bd244f],0xffffffb8
  4083f5:	mov    bh,BYTE PTR [eax-0x5d]
  4083f8:	inc    eax
  4083f9:	adc    eax,0xf0a4029c
  4083fe:	popf   
  4083ff:	pop    es
  408400:	inc    esp
  408401:	ins    BYTE PTR es:[edi],dx
  408402:	fisttp DWORD PTR [ebx]
  408404:	(bad)  
  408405:	mov    cl,0x2a
  408407:	xlat   BYTE PTR ds:[ebx]
  408408:	mov    dl,ch
  40840a:	xchg   esi,eax
  40840b:	in     al,dx
  40840c:	ja     0x4083f3
  40840e:	dec    esi
  40840f:	dec    ebp
  408410:	nop
  408411:	mov    eax,0x83c597f8
  408416:	inc    eax
  408417:	outs   dx,DWORD PTR ds:[esi]
  408418:	jp     0x4083a8
  40841a:	ins    DWORD PTR es:[edi],dx
  40841b:	loop   0x4083a7
  40841d:	or     DWORD PTR [eax+0x48739e0e],0xe
  408424:	add    edi,DWORD PTR [edi]
  408426:	retf   0x887c
  408429:	lods   al,BYTE PTR ds:[esi]
  40842a:	sub    DWORD PTR [edx],ebx
  40842c:	pushf  
  40842d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40842e:	sar    BYTE PTR [edx],1
  408430:	stos   DWORD PTR es:[edi],eax
  408431:	pop    esp
  408432:	fstp   st(7)
  408434:	loope  0x408421
  408436:	fnsave [ecx+eax*4-0x37]
  40843a:	push   cs
  40843b:	dec    eax
  40843c:	das    
  40843d:	aam    0x1d
  40843f:	inc    ebp
  408440:	je     0x4083fb
  408442:	ins    BYTE PTR es:[edi],dx
  408443:	mov    al,0x5f
  408445:	loop   0x4084b7
  408447:	ffree  st(2)
  408449:	inc    esp
  40844a:	aaa    
  40844b:	aam    0x5
  40844d:	arpl   WORD PTR [ebx],si
  40844f:	mov    al,ds:0xb8367381
  408454:	mov    bl,0xdf
  408456:	cli    
  408457:	cmp    BYTE PTR [edi+eax*1],0x77
  40845b:	cmp    bl,dl
  40845d:	mov    ah,0xd0
  40845f:	imul   ebp,DWORD PTR [edi+0x53af8659],0x4381c8c
  408469:	push   ebp
  40846a:	mov    al,ds:0x9d71df5e
  40846f:	pop    ds
  408470:	sbb    ecx,DWORD PTR [ecx+0xd4a70a9]
  408476:	cmp    DWORD PTR [esi],edx
  408478:	into   
  408479:	push   esp
  40847a:	push   0x96519f86
  40847f:	daa    
  408480:	shl    DWORD PTR [edx-0x19],0x4a
  408484:	das    
  408485:	jns    0x408489
  408487:	adc    BYTE PTR [esi+0x7cd49aa8],ah
  40848d:	retf   
  40848e:	aad    0xb1
  408490:	inc    ah
  408492:	ins    BYTE PTR es:[edi],dx
  408493:	jl     0x408429
  408495:	dec    edx
  408496:	xor    al,0x2
  408498:	lods   eax,DWORD PTR ds:[esi]
  408499:	xor    DWORD PTR [ecx-0x6f],edx
  40849c:	rcr    bl,0xda
  40849f:	jne    0x40846b
  4084a1:	scas   al,BYTE PTR es:[edi]
  4084a2:	and    DWORD PTR [edi+0x155515ed],0xc78fd32b
  4084ac:	or     DWORD PTR [ebx+0x34ae5781],edi
  4084b2:	fcom   QWORD PTR [edx]
  4084b4:	pop    ss
  4084b5:	cs xor al,0x5b
  4084b8:	and    BYTE PTR [edi+0x4d020d1f],bl
  4084be:	pop    es
  4084bf:	retf   0xf4c3
  4084c2:	adc    ebp,0x70adc8f0
  4084c8:	dec    eax
  4084c9:	push   0x51
  4084cb:	pop    ebx
  4084cc:	jmp    0xf53d8d79
  4084d1:	ret    
  4084d2:	lea    ebx,[eax]
  4084d4:	or     eax,0xeee423e5
  4084d9:	mov    al,0x4e
  4084db:	jnp    0x4084ff
  4084dd:	push   0x63f2a16
  4084e2:	dec    esi
  4084e3:	dec    edx
  4084e4:	jecxz  0x408486
  4084e6:	inc    esi
  4084e7:	cld    
  4084e8:	ffree  st(5)
  4084ea:	mov    eax,0x35b1e0b6
  4084ef:	pop    edx
  4084f0:	adc    eax,0xd468b297
  4084f5:	xchg   edx,eax
  4084f6:	push   eax
  4084f7:	dec    edx
  4084f8:	jns    0x40851a
  4084fa:	adc    edx,eax
  4084fc:	out    dx,eax
  4084fd:	iret   
  4084fe:	pop    ebx
  4084ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408500:	out    0x6c,al
  408502:	or     esi,DWORD PTR [ebp-0x37]
  408505:	bound  eax,QWORD PTR [ebx+0x5b7d975]
  40850b:	jmp    DWORD PTR [esi-0x15]
  40850e:	sub    edi,ebp
  408510:	inc    ebp
  408511:	sub    BYTE PTR [ebx-0x61],bl
  408514:	mov    cl,0x36
  408516:	mov    ebp,0xa81045db
  40851b:	(bad)  
  40851c:	and    bl,cl
  40851e:	outs   dx,BYTE PTR ds:[esi]
  40851f:	adc    al,0xbd
  408521:	adc    al,0xd0
  408523:	jmp    0x408544
  408525:	pop    edi
  408526:	pop    ecx
  408527:	gs in  eax,dx
  408529:	xchg   DWORD PTR [edx-0x5775761b],esi
  40852f:	shl    DWORD PTR [edx],cl
  408531:	mov    ebp,0x8d63350d
  408536:	pand   mm5,QWORD PTR [edi-0x7449a94e]
  40853d:	jne    0x40858c
  40853f:	mov    ds:0x9f82d0a2,eax
  408544:	inc    edx
  408545:	jle    0x408539
  408547:	sar    BYTE PTR ds:0xbbd03967,0x41
  40854e:	mov    al,0x54
  408550:	outs   dx,BYTE PTR ds:[esi]
  408551:	into   
  408552:	sub    eax,0xcc5e0ebf
  408557:	call   0x80af:0xee85441a
  40855e:	mov    ebp,0x7ea03676
  408563:	(bad)  
  408564:	pop    ecx
  408565:	clc    
  408566:	into   
  408567:	and    DWORD PTR [eax+0x75b75049],eax
  40856d:	icebp  
  40856e:	lahf   
  40856f:	cmc    
  408570:	xor    BYTE PTR [ebp+edi*4-0x1fe0131d],0x9d
  408578:	pop    es
  408579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40857a:	inc    edi
  40857b:	in     eax,dx
  40857c:	(bad)  
  40857d:	push   edx
  40857e:	(bad)  
  40857f:	cs mov dl,0x20
  408582:	push   ebp
  408583:	in     al,dx
  408584:	shl    DWORD PTR [ecx],1
  408586:	daa    
  408587:	xchg   ebx,eax
  408588:	aas    
  408589:	xrelease xchg BYTE PTR [edi+0x2d8baeb6],ch
  408590:	js     0x40860f
  408592:	push   0xffffffce
  408594:	xlat   BYTE PTR ds:[ebx]
  408595:	inc    esi
  408596:	lods   eax,DWORD PTR ds:[esi]
  408597:	lock mov ecx,0x7ba6f83d
  40859d:	xor    al,0x3c
  40859f:	and    edx,edi
  4085a1:	jl     0x4085c1
  4085a3:	xor    al,0x4e
  4085a5:	pop    eax
  4085a6:	jnp    0x40858a
  4085a8:	dec    eax
  4085a9:	jno    0x408540
  4085ab:	fdiv   st,st(2)
  4085ad:	loopne 0x40860e
  4085af:	add    eax,0xe584d4e3
  4085b4:	sub    eax,0x100c14b
  4085b9:	addr16 repnz loop 0x4085e4
  4085bd:	mov    DWORD PTR [ecx],edx
  4085bf:	sbb    eax,0x8a579fa5
  4085c4:	lahf   
  4085c5:	dec    ebx
  4085c6:	xchg   esi,eax
  4085c7:	jg     0x408605
  4085c9:	push   es
  4085ca:	push   ecx
  4085cb:	ja     0x40863f
  4085cd:	in     eax,dx
  4085ce:	xchg   esi,eax
  4085cf:	mov    al,ds:0x50ff0162
  4085d4:	rcl    DWORD PTR [ebx-0x5bd2b874],0x2c
  4085db:	lahf   
  4085dc:	adc    eax,0x9aa02a5f
  4085e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085e2:	rcl    DWORD PTR [edx-0x446dfb51],1
  4085e8:	pop    edi
  4085e9:	cmc    
  4085ea:	push   0x40
  4085ec:	fcomp  st(2)
  4085ee:	in     eax,dx
  4085ef:	sahf   
  4085f0:	add    al,0x78
  4085f2:	mov    ?,WORD PTR [esi+0x2b]
  4085f5:	mov    eax,0xc77e2c7e
  4085fa:	inc    edx
  4085fb:	or     al,0xff
  4085fd:	rol    edx,cl
  4085ff:	pop    esi
  408600:	sub    dh,bh
  408602:	mov    bh,0xcf
  408604:	add    al,0xac
  408606:	xchg   esi,eax
  408607:	fldcw  WORD PTR [ebp+0x61]
  40860a:	cmp    dh,BYTE PTR [edx-0x2aec9c37]
  408610:	xor    DWORD PTR [edx-0x60f2df17],edx
  408616:	mov    ebp,edi
  408618:	jle    0x408623
  40861a:	dec    ecx
  40861b:	outs   dx,BYTE PTR ds:[esi]
  40861c:	rcr    DWORD PTR [ebx+0x7a0ab21c],0xf9
  408623:	popf   
  408624:	add    al,0xc5
  408626:	ficomp DWORD PTR [esi+0x4e833241]
  40862c:	in     eax,0x5d
  40862e:	mov    BYTE PTR [ebx],0x62
  408631:	or     dh,ah
  408633:	lds    edi,FWORD PTR [edx-0x7c8c170d]
  408639:	jg     0x4085bc
  40863b:	jmp    0x57b2:0xdc797b14
  408642:	mov    WORD PTR [esi-0x18ffd0c1],fs
  408648:	pop    edx
  408649:	retf   0x7991
  40864c:	div    BYTE PTR [ebx]
  40864e:	popa   
  40864f:	mov    eax,fs:0xffe20bb8
  408655:	(bad)  
  408657:	int    0x96
  408659:	push   cs
  40865a:	ss (bad) 
  40865d:	and    ah,BYTE PTR [ebx]
  40865f:	je     0x408672
  408661:	ja     0x40861d
  408663:	add    DWORD PTR [esi-0x2f],esi
  408666:	nop    eax
  408669:	fcomip st,st(0)
  40866b:	lods   eax,DWORD PTR ds:[esi]
  40866c:	cmp    dh,BYTE PTR [edi]
  40866e:	stos   DWORD PTR es:[edi],eax
  40866f:	stos   BYTE PTR es:[edi],al
  408670:	sti    
  408671:	sbb    al,0x1f
  408673:	ret    
  408674:	ins    BYTE PTR es:[edi],dx
  408675:	cs cs sub dh,dh
  408679:	fistp  DWORD PTR [ecx+eax*1]
  40867c:	rcr    BYTE PTR [ebx+0x13baa956],cl
  408682:	pop    edx
  408683:	mov    esi,0xf77d4e25
  408688:	add    eax,DWORD PTR [edx+ebp*4]
  40868b:	jmp    0x9e7b:0xb6dcc6bb
  408692:	fwait
  408693:	pusha  
  408694:	hlt    
  408695:	cmp    eax,0xda38678e
  40869a:	lock and al,0xee
  40869d:	sbb    al,0xbf
  40869f:	rol    BYTE PTR [edi-0x5b74f586],0x6d
  4086a6:	jecxz  0x408647
  4086a8:	xor    esi,DWORD PTR [eax-0x2b]
  4086ab:	push   ebp
  4086ac:	jmp    0x787dd3a0
  4086b1:	xchg   BYTE PTR [eax],dl
  4086b3:	std    
  4086b4:	cmp    ebx,esi
  4086b6:	hlt    
  4086b7:	js     0x408708
  4086b9:	mov    DWORD PTR [esi+0xb994fd7],ecx
  4086bf:	fist   DWORD PTR [ecx]
  4086c1:	add    al,0x51
  4086c3:	cli    
  4086c4:	xlat   BYTE PTR ds:[ebx]
  4086c5:	sub    esi,esp
  4086c7:	jle    0x408650
  4086c9:	adc    edi,ecx
  4086cb:	jle    0x4086a2
  4086cd:	call   0xb768390
  4086d2:	aaa    
  4086d3:	dec    ebx
  4086d4:	mov    edx,0x4fb03f7
  4086d9:	xchg   BYTE PTR [esi],ah
  4086db:	(bad)
  4086de:	mov    dh,0x63
  4086e0:	out    0x46,al
  4086e2:	mov    WORD PTR ds:0x1e3b7623,ds
  4086e8:	ret    0x601c
  4086eb:	fmul   DWORD PTR [eax]
  4086ed:	mov    dl,BYTE PTR [edi]
  4086ef:	popf   
  4086f0:	adc    al,0x94
  4086f2:	xor    al,0xf7
  4086f4:	shl    BYTE PTR [ebx-0x26],cl
  4086f7:	cli    
  4086f8:	retf   
  4086f9:	jns    0x408776
  4086fb:	inc    esp
  4086fc:	cdq    
  4086fd:	jo     0x4086e7
  4086ff:	imul   esi,edx,0x2e75b7b4
  408705:	mov    ebx,0x516983fd
  40870a:	and    cl,BYTE PTR [esi]
  40870c:	adc    al,0x43
  40870e:	shl    DWORD PTR [eax+esi*4],cl
  408711:	das    
  408712:	sbb    BYTE PTR [ebp+0xc],ah
  408715:	sbb    al,0xce
  408717:	mov    ds:0xf18d75c8,eax
  40871c:	cmp    BYTE PTR [ebx-0x75],al
  40871f:	add    ah,dh
  408721:	stc    
  408722:	push   cs
  408723:	out    dx,al
  408724:	mov    ecx,0x2b2acb3d
  408729:	loop   0x408794
  40872b:	fdivr  st(0),st
  40872d:	mov    ds:0x1f7928aa,al
  408732:	xchg   DWORD PTR [ebp-0x618c82c9],ebp
  408738:	mov    esp,DWORD PTR [edx+0x69]
  40873b:	enter  0xf5e5,0x16
  40873f:	loop   0x40874a
  408741:	mul    BYTE PTR [edi+0x38569352]
  408747:	bound  ebx,QWORD PTR [edi]
  408749:	push   esp
  40874a:	popf   
  40874b:	mov    bl,0x85
  40874d:	xor    eax,0x7e5f7d7d
  408752:	sub    DWORD PTR [esi-0x67915a0b],0xefcb775b
  40875c:	fmul   QWORD PTR [ecx]
  40875e:	inc    edi
  40875f:	aas    
  408760:	or     ah,BYTE PTR [ebp+0x5d27c445]
  408766:	lods   al,BYTE PTR ds:[esi]
  408767:	mov    dh,0xcc
  408769:	mov    esi,0x636d0538
  40876e:	(bad)  
  40876f:	sti    
  408770:	inc    eax
  408771:	les    esi,FWORD PTR [ecx+0x57]
  408774:	call   0xcabc8a6e
  408779:	out    0x73,al
  40877b:	ins    DWORD PTR es:[edi],dx
  40877c:	cmp    DWORD PTR [edx],esi
  40877e:	mov    dl,BYTE PTR [edx]
  408780:	ja     0x408758
  408782:	push   edi
  408784:	outs   dx,DWORD PTR ds:[esi]
  408785:	mov    cl,0xbc
  408787:	jge    0x4087cd
  408789:	repnz pop ss
  40878b:	sub    ch,ah
  40878d:	add    DWORD PTR [eax+0x78e7050b],0x1
  408794:	cli    
  408795:	add    al,0xea
  408797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408798:	mov    cl,BYTE PTR [edi]
  40879a:	cmp    eax,0x5ff3323
  40879f:	inc    ebx
  4087a0:	cmp    BYTE PTR [edi+esi*1],ah
  4087a3:	in     al,0xbc
  4087a5:	aas    
  4087a6:	cmp    al,0x7b
  4087a8:	add    DWORD PTR [ebp-0x68],ebx
  4087ab:	neg    BYTE PTR [ebx]
  4087ad:	fwait
  4087ae:	adc    BYTE PTR [esp],cl
  4087b1:	xchg   ebp,eax
  4087b2:	sbb    al,al
  4087b4:	sbb    BYTE PTR [edx],bh
  4087b6:	adc    BYTE PTR [eax-0x2d],dl
  4087b9:	xor    BYTE PTR [esp+ebx*1],bl
  4087bc:	mov    dh,0x4
  4087be:	mov    al,0x8
  4087c0:	mov    ds:0x98c800cc,eax
  4087c5:	push   edi
  4087c6:	inc    eax
  4087c7:	inc    ecx
  4087c8:	jl     0x8ad6ce31
  4087ce:	push   eax
  4087cf:	pop    esi
  4087d0:	psrad  mm4,QWORD PTR [esi+0x666098ad]
  4087d7:	iret   
  4087d8:	jg     0x408831
  4087da:	shl    DWORD PTR [eax],1
  4087dc:	pop    ss
  4087dd:	xor    eax,0xbd5306f8
  4087e2:	pop    edi
  4087e3:	sbb    BYTE PTR [eax-0x8756],dh
  4087e9:	sbb    ecx,DWORD PTR [ebp-0x76d05e9f]
  4087ef:	retf   0xf6f4
  4087f2:	mov    cl,0x7a
  4087f4:	jne    0x408829
  4087f6:	pushf  
  4087f7:	xchg   ebp,ebx
  4087f9:	jl     0x4087c4
  4087fb:	js     0x408796
  4087fd:	imul   ecx,DWORD PTR [edi+0x65343548],0x80a6bc47
  408807:	pop    ebp
  408808:	rcl    BYTE PTR [ebx+0x44eb16d],cl
  40880e:	out    0x9,eax
  408810:	movsx  esi,cl
  408813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408814:	add    eax,0x2635cad
  408819:	or     esp,0xcc2c75a1
  40881f:	hlt    
  408820:	and    ah,BYTE PTR [ebx-0x2]
  408823:	das    
  408824:	repnz push eax
  408826:	jo     0x4087b5
  408828:	adc    esi,DWORD PTR [esi+0x61aadbb8]
  40882e:	cmp    al,0xb7
  408830:	mov    ecx,0xfca1cb17
  408835:	add    edx,DWORD PTR es:[edx]
  408838:	imul   ebp,DWORD PTR [ebx-0x58b98744],0xd289b979
  408842:	test   al,0x9d
  408844:	icebp  
  408845:	aad    0xf9
  408847:	mov    DWORD PTR [edx+0x4a],eax
  40884a:	and    BYTE PTR [ecx+eiz*4],ah
  40884d:	jmp    0x541f:0xcbfb5e7d
  408854:	clc    
  408855:	sub    edi,ecx
  408857:	fwait
  408858:	inc    esp
  408859:	mov    ebx,0x6dc71604
  40885e:	or     bl,bh
  408860:	adc    ebx,DWORD PTR [eax-0x58]
  408863:	sbb    edx,DWORD PTR [eax]
  408865:	jmp    0x149:0x25fd4f8d
  40886c:	cmp    DWORD PTR [ebp-0x297d8ac5],edx
  408872:	xchg   edx,eax
  408873:	mov    ch,0xe7
  408875:	xor    ah,bl
  408877:	inc    edx
  408878:	lods   al,BYTE PTR ds:[esi]
  408879:	sbb    al,0x49
  40887b:	jle    0x4088c8
  40887d:	in     eax,0x2e
  40887f:	call   FWORD PTR [ebx-0xfb4b1a]
  408885:	mov    edi,0x9ac0290d
  40888a:	sub    BYTE PTR [ebp-0x389f2ed3],dl
  408890:	sahf   
  408891:	jns    0x408847
  408893:	(bad)  
  408894:	pop    ss
  408895:	lock or al,0x6b
  408898:	cmp    DWORD PTR [eax],esp
  40889a:	scas   al,BYTE PTR es:[edi]
  40889b:	popf   
  40889c:	cmp    eax,0x4d3b98ed
  4088a1:	inc    BYTE PTR [ebx+0x672e105b]
  4088a7:	mov    BYTE PTR [ebp-0x234d87c9],al
  4088ad:	jae    0x4088dc
  4088af:	mov    bh,0x1f
  4088b1:	inc    ebp
  4088b2:	popf   
  4088b3:	jno    0x408870
  4088b5:	xor    DWORD PTR [ebx+0x53fef709],ebp
  4088bb:	inc    ebp
  4088bc:	scas   eax,DWORD PTR es:[edi]
  4088bd:	loope  0x40884b
  4088bf:	push   cs
  4088c0:	inc    esi
  4088c1:	push   ebx
  4088c2:	cmp    BYTE PTR [ebp-0x49],bl
  4088c5:	sbb    dh,BYTE PTR [eax-0x177e6f44]
  4088cb:	xor    eax,0xebe378a7
  4088d0:	gs sub eax,0x201f5649
  4088d6:	pop    ebp
  4088d7:	mov    eax,ds:0xe8a05536
  4088dc:	test   eax,0xa4171545
  4088e1:	call   DWORD PTR [esi-0x40398941]
  4088e7:	cmp    al,0x5d
  4088e9:	repnz adc al,0xa3
  4088ec:	jecxz  0x4088eb
  4088ee:	fiadd  WORD PTR ds:0x3f69a3df
  4088f4:	aad    0x3a
  4088f6:	mov    dl,0x54
  4088f8:	mov    eax,0x1b919dbb
  4088fd:	cmp    al,0xae
  4088ff:	adc    ch,BYTE PTR [edx-0x4ebaeec3]
  408905:	sbb    ch,dh
  408907:	and    esi,ecx
  408909:	aad    0x8c
  40890b:	sbb    eax,0x7a6fae6a
  408910:	jmp    0x771e:0xe4bc458f
  408917:	mov    esi,0xf9b812cf
  40891c:	push   esi
  40891d:	mov    eax,0xf7ca3e0f
  408922:	out    0xee,al
  408924:	out    0x44,eax
  408926:	in     al,0xdd
  408928:	jno    0x408927
  40892a:	ret    
  40892b:	xchg   ebx,eax
  40892c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40892d:	test   BYTE PTR [edx],0x74
  408930:	jns    0x4088c6
  408932:	sti    
  408933:	sbb    dl,BYTE PTR [esi]
  408935:	or     bh,al
  408937:	and    dl,BYTE PTR [eax]
  408939:	push   esp
  40893a:	mov    esi,0xade2c3e8
  40893f:	sub    BYTE PTR [eax],al
  408941:	(bad)  
  408942:	sbb    DWORD PTR [ebx-0x43],edi
  408945:	enter  0xb8be,0x77
  408949:	mov    ebp,0x86af3004
  40894e:	dec    ebp
  40894f:	cmp    BYTE PTR [ecx],cl
  408951:	(bad)  
  408952:	and    dh,bh
  408954:	ret    0xf341
  408957:	mov    dl,0xaf
  408959:	test   BYTE PTR [eax],cl
  40895b:	adc    edx,DWORD PTR [edi-0x3d]
  40895e:	push   ecx
  40895f:	daa    
  408960:	je     0x4089bd
  408962:	out    dx,al
  408963:	enter  0xfb52,0x8d
  408967:	fld    TBYTE PTR [ecx]
  408969:	ja     0x408948
  40896b:	cmp    BYTE PTR [ebp+esi*4+0x21],0x9f
  408970:	jns    0x408943
  408972:	jmp    DWORD PTR [edx+0x73c0d364]
  408978:	ds inc esp
  40897a:	cmc    
  40897b:	jp     0x40893a
  40897d:	mov    BYTE PTR [ecx+0x5d4e25fa],dl
  408983:	adc    DWORD PTR [eax],edi
  408985:	jno    0x4089d1
  408987:	aas    
  408988:	mov    dh,0x83
  40898a:	rol    DWORD PTR [ecx*1+0x48a5db42],cl
  408991:	xchg   ebp,eax
  408992:	mov    bl,0xbe
  408994:	sbb    al,0x81
  408996:	adc    ebp,ebx
  408998:	enter  0x4f64,0x83
  40899c:	and    eax,0x27d281ec
  4089a1:	mov    WORD PTR [edi],ss
  4089a3:	stos   BYTE PTR es:[edi],al
  4089a4:	mov    ss,WORD PTR [ebp+0x7715e067]
  4089aa:	xchg   BYTE PTR [ecx],bh
  4089ac:	in     al,dx
  4089ad:	neg    DWORD PTR [ebp+0x5425bdc4]
  4089b3:	xor    ecx,DWORD PTR [edx]
  4089b5:	stc    
  4089b6:	cmp    bh,cl
  4089b8:	mov    bl,0x45
  4089ba:	xchg   ebp,eax
  4089bb:	out    dx,eax
  4089bc:	fisubr DWORD PTR [ebp-0x1fbd465a]
  4089c2:	jb     0x40896d
  4089c4:	sbb    ebp,DWORD PTR [edi]
  4089c6:	inc    ecx
  4089c7:	jns    0x408a1e
  4089c9:	adc    al,0xee
  4089cb:	add    DWORD PTR [ecx-0x474128a1],0xc3b491e6
  4089d5:	(bad)  
  4089d6:	mov    bh,0xac
  4089d8:	retf   0x9d7a
  4089db:	ins    DWORD PTR es:[edi],dx
  4089dc:	push   ecx
  4089dd:	xor    al,0x99
  4089df:	shr    BYTE PTR [eax],1
  4089e1:	jecxz  0x4089d8
  4089e3:	push   ss
  4089e4:	sahf   
  4089e5:	jns    0x4089a8
  4089e7:	dec    ebx
  4089e8:	outs   dx,DWORD PTR ds:[esi]
  4089e9:	sbb    al,0x55
  4089eb:	lds    esp,FWORD PTR [edx+0x6b]
  4089ee:	push   ecx
  4089ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f0:	sar    esi,1
  4089f2:	loopne 0x4089b5
  4089f4:	push   ds
  4089f5:	mov    ss,WORD PTR [esi-0x3b636f77]
  4089fb:	loop   0x408990
  4089fd:	fdivr  QWORD PTR [ecx+0x21]
  408a00:	aad    0x11
  408a02:	(bad)  
  408a03:	adc    eax,0x84202c3e
  408a08:	repz (bad) 
  408a0a:	push   0xb1da9885
  408a0f:	mov    es,esp
  408a11:	out    dx,eax
  408a12:	push   ss
  408a13:	pop    ss
  408a14:	ret    0xf21
  408a17:	or     al,0x9e
  408a19:	cdq    
  408a1a:	jmp    0xc611:0x65068f66
  408a21:	xor    ebp,DWORD PTR [edi+0x1]
  408a24:	xchg   esi,eax
  408a25:	outs   dx,DWORD PTR ds:[esi]
  408a26:	mov    eax,0xb62b3f6
  408a2b:	test   al,0xc3
  408a2d:	pop    edi
  408a2e:	dec    esp
  408a2f:	mov    dl,0xd5
  408a31:	sub    eax,0x65b0c233
  408a36:	popa   
  408a37:	jge    0x408aab
  408a39:	dec    ecx
  408a3a:	mov    ebx,0xb256718d
  408a3f:	xor    eax,0x72cf31ef
  408a44:	test   eax,0x6e9d9a17
  408a49:	or     eax,0xe13c8e5b
  408a4e:	pop    eax
  408a4f:	push   edi
  408a50:	data16 test BYTE PTR [ebx],ah
  408a53:	or     eax,0x550ac070
  408a58:	loopne 0x408abb
  408a5a:	jp     0x408a4d
  408a5c:	retf   0x6423
  408a5f:	icebp  
  408a60:	in     eax,0xf1
  408a62:	call   0xbb91:0x64fa3d42
  408a69:	pop    ecx
  408a6a:	jnp    0x408a67
  408a6c:	mov    edi,0xfd536c38
  408a71:	xor    eax,0xe57bbb29
  408a76:	cmp    ch,ch
  408a78:	ret    0xfea7
  408a7b:	enter  0xfbe0,0x9e
  408a7f:	push   0xffffff85
  408a81:	push   0xffffffea
  408a83:	sbb    edx,DWORD PTR [ebx+0x12]
  408a86:	or     ebp,DWORD PTR [esi+0x61a85f0d]
  408a8c:	idiv   bh
  408a8e:	pop    eax
  408a8f:	inc    ebx
  408a90:	pop    ebx
  408a91:	dec    esp
  408a92:	popa   
  408a93:	int3   
  408a94:	jmp    0xafc8:0xa14a3d58
  408a9b:	fs hlt 
  408a9d:	mov    al,ds:0xd94d857b
  408aa2:	fnstcw WORD PTR [ecx]
  408aa4:	jne    0x408a56
  408aa6:	inc    ebp
  408aa7:	push   esi
  408aa8:	jns    0x408a5d
  408aaa:	cmp    BYTE PTR [eax+ebp*8-0x1b],bh
  408aae:	sbb    ch,ah
  408ab0:	leave  
  408ab1:	cmp    eax,0xcfbea35c
  408ab6:	aas    
  408ab7:	inc    ebx
  408ab8:	test   BYTE PTR [ecx],dh
  408aba:	dec    ebx
  408abb:	push   0x934543fa
  408ac0:	shr    DWORD PTR [ebp+0x5b],1
  408ac3:	or     al,0xce
  408ac5:	out    0x8c,eax
  408ac7:	inc    edi
  408ac8:	add    al,0x51
  408aca:	enter  0xfb10,0xcb
  408ace:	call   0x2e676fdf
  408ad3:	test   edx,esp
  408ad5:	jb     0x408af8
  408ad7:	rcr    BYTE PTR [edx+0x32],cl
  408ada:	xchg   esp,eax
  408adb:	or     BYTE PTR [ecx+0x5c],0x1a
  408adf:	pop    esi
  408ae0:	pop    esp
  408ae1:	or     al,BYTE PTR [edx-0x2e]
  408ae4:	ds sub al,0xe3
  408ae7:	push   eax
  408ae8:	jo     0x408b03
  408aea:	lods   al,BYTE PTR ds:[esi]
  408aeb:	sbb    eax,0xcf23b65f
  408af0:	retf   0xa63b
  408af3:	pop    esi
  408af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408af5:	xor    esp,eax
  408af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408af8:	xor    BYTE PTR [edi+0x7d0b87da],bh
  408afe:	rol    BYTE PTR [ebx-0x11],cl
  408b01:	inc    ecx
  408b02:	lods   eax,DWORD PTR ds:[esi]
  408b03:	call   0x8830:0x851bb241
  408b0a:	dec    esp
  408b0b:	daa    
  408b0c:	mov    dl,0x3d
  408b0e:	mov    DWORD PTR [ecx-0x5dce9ac2],ecx
  408b14:	retf   0x960
  408b17:	mov    bl,BYTE PTR [eax+0x21]
  408b1a:	xchg   esp,eax
  408b1b:	les    ebp,FWORD PTR [eax]
  408b1d:	pop    ebp
  408b1e:	test   eax,0x1ac6c8c6
  408b23:	inc    ebx
  408b24:	fist   DWORD PTR [ebx-0x7faa3100]
  408b2a:	shl    BYTE PTR [ecx-0xa],1
  408b2d:	mov    ebx,DWORD PTR [edx-0x4]
  408b30:	inc    edi
  408b31:	mov    ecx,DWORD PTR [esi-0x1c9c9f51]
  408b37:	push   edx
  408b38:	xor    dl,dh
  408b3a:	ja     0x408b86
  408b3c:	sti    
  408b3d:	jl     0x408ba1
  408b3f:	mov    dl,0xaa
  408b41:	dec    eax
  408b42:	or     BYTE PTR [ecx-0x5c284677],dh
  408b48:	out    0x40,ax
  408b4b:	or     al,BYTE PTR [esi]
  408b4d:	push   ds
  408b4e:	push   edx
  408b4f:	push   eax
  408b50:	add    al,0xda
  408b52:	pusha  
  408b53:	and    edx,DWORD PTR [edi+eax*4+0x34]
  408b57:	pop    ecx
  408b58:	inc    DWORD PTR [esp+edi*2+0x17bd934b]
  408b5f:	cwde   
  408b60:	clc    
  408b61:	lahf   
  408b62:	fld    TBYTE PTR [esi+0x78]
  408b65:	lahf   
  408b66:	not    DWORD PTR [esp+ebp*8]
  408b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b6a:	dec    ebp
  408b6b:	inc    ebx
  408b6c:	pusha  
  408b6d:	adc    al,0xd6
  408b6f:	or     al,0xb7
  408b71:	mov    edi,0x5879ffc8
  408b76:	jns    0x408b06
  408b78:	repz retf 0x127e
  408b7c:	rcl    BYTE PTR [ebx],cl
  408b7e:	cli    
  408b7f:	retf   
  408b80:	xchg   esi,eax
  408b81:	jno    0x408bb5
  408b83:	dec    esp
  408b84:	add    eax,0x235007d3
  408b89:	jmp    0xcdc68c3e
  408b8e:	iret   
  408b8f:	(bad)  
  408b90:	(bad)  
  408b92:	adc    edi,DWORD PTR [ecx]
  408b94:	inc    ebp
  408b95:	dec    eax
  408b96:	gs push ds
  408b98:	into   
  408b99:	pop    es
  408b9a:	cwde   
  408b9b:	lock outs dx,DWORD PTR ds:[esi]
  408b9d:	out    0xd2,al
  408b9f:	mov    dl,0x26
  408ba1:	inc    esi
  408ba2:	in     al,dx
  408ba3:	or     eax,0x7571ff90
  408ba8:	inc    ebp
  408ba9:	loope  0x408b3b
  408bab:	in     eax,dx
  408bac:	push   ss
  408bad:	popa   
  408bae:	int    0x58
  408bb0:	mov    bl,BYTE PTR [edx+0x6a]
  408bb3:	int3   
  408bb4:	pop    edx
  408bb5:	mov    edx,0x7c466649
  408bba:	stc    
  408bbb:	xchg   ecx,eax
  408bbc:	test   eax,0xecc4b974
  408bc1:	xor    ch,bh
  408bc3:	shl    DWORD PTR [eax],1
  408bc5:	pusha  
  408bc6:	jnp    0x408c38
  408bc8:	xor    BYTE PTR [eax-0x4f],dh
  408bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bcc:	jns    0x408bbc
  408bce:	adc    bl,BYTE PTR [edx]
  408bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bd1:	sbb    DWORD PTR [esp+edx*4],esp
  408bd4:	aad    0xd0
  408bd6:	ds scas al,BYTE PTR es:[edi]
  408bd8:	cmp    ah,BYTE PTR [eax+0xc5f6078]
  408bde:	mov    ch,0xcd
  408be0:	aaa    
  408be1:	test   DWORD PTR [ecx+0x1c],esi
  408be4:	les    ecx,FWORD PTR [ebp+0x3b]
  408be7:	xor    ch,bl
  408be9:	mov    bh,0x72
  408beb:	imul   ebp,DWORD PTR [eax+0x5b],0xffffffbb
  408bef:	jbe    0x408c36
  408bf1:	jmp    0x408bb4
  408bf3:	or     ebx,edi
  408bf5:	(bad)  
  408bf6:	call   0xdc5272a1
  408bfb:	jle    0x408c66
  408bfd:	popa   
  408bfe:	jp     0x3d390c5f
  408c04:	shr    BYTE PTR [ebx],1
  408c06:	imul   ebp,DWORD PTR [esi-0x4b2ec652],0x8848d99
  408c10:	cmc    
  408c11:	jb     0x408c45
  408c13:	add    BYTE PTR [ecx+0x458b0845],cl
  408c19:	hlt    
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0x30fd9b2a
  408c4f:	rcr    DWORD PTR [eax+ebx*1+0x5e0c8383],1
  408c56:	add    DWORD PTR [ebx+0x59f8fdc4],0xffffffc5
  408c5d:	cld    
  408c5e:	add    eax,0x3daac24b
  408c63:	and    al,0x25
  408c65:	xchg   DWORD PTR [ebp+0x2d10a9d4],ecx
  408c6b:	imul   eax,esi,0xa87dbe00
  408c71:	push   ebx
  408c72:	jno    0x408cc1
  408c74:	sub    ch,BYTE PTR [ebp-0x20]
  408c77:	lea    ebp,[eax]
  408c79:	push   edx
  408c7a:	out    dx,al
  408c7b:	mov    ebp,0x83eae304
  408c80:	popa   
  408c81:	or     edx,DWORD PTR [ecx]
  408c83:	and    al,0xc5
  408c85:	pop    edx
  408c86:	fisttp DWORD PTR [ecx+ecx*8]
  408c89:	xchg   edx,eax
  408c8a:	mov    esp,0x1a7bd929
  408c8f:	ins    BYTE PTR es:[edi],dx
  408c90:	inc    edx
  408c91:	sbb    dh,BYTE PTR [ebp+0x4be72702]
  408c97:	rol    BYTE PTR [edx-0x31537f10],0x84
  408c9e:	inc    edx
  408c9f:	cmp    al,0xfb
  408ca1:	mov    cl,0xea
  408ca3:	fistp  DWORD PTR [eax]
  408ca5:	pop    ds
  408ca6:	(bad)  
  408ca7:	xor    esi,esp
  408ca9:	push   0x79f34090
  408cae:	pop    ebx
  408caf:	into   
  408cb0:	adc    ebp,DWORD PTR [ebx-0x15]
  408cb3:	or     dl,BYTE PTR [ecx-0x7e]
  408cb6:	xor    DWORD PTR [edi+edi*4-0x23dc3fa2],ecx
  408cbd:	es jnp 0x408c90
  408cc0:	jae    0x408c45
  408cc2:	lock pusha 
  408cc4:	cld    
  408cc5:	xor    dh,BYTE PTR ss:[esp+esi*4]
  408cc9:	popf   
  408cca:	ja     0x408d26
  408ccc:	test   bh,cl
  408cce:	inc    esp
  408ccf:	jne    0x408ccc
  408cd1:	dec    edx
  408cd2:	test   esp,ebp
  408cd4:	ins    DWORD PTR es:[edi],dx
  408cd5:	fistp  WORD PTR [eax]
  408cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cd8:	dec    ebx
  408cd9:	jae    0x408d55
  408cdb:	arpl   WORD PTR [eax],bp
  408cdd:	dec    edi
  408cde:	out    0xf4,al
  408ce0:	jo     0x408d55
  408ce2:	cmp    al,0x82
  408ce4:	mov    dl,cl
  408ce6:	pop    esi
  408ce7:	dec    edx
  408ce8:	rol    BYTE PTR [ebp+0x6c],0x69
  408cec:	adc    ch,bh
  408cee:	push   0xffffff84
  408cf0:	pop    esi
  408cf1:	xchg   ah,cl
  408cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf4:	xchg   BYTE PTR [ebp+0x4f],cl
  408cf7:	pusha  
  408cf8:	pusha  
  408cf9:	jmp    0x408d3b
  408cfb:	mov    ah,0xaa
  408cfd:	call   0x4fc0cf35
  408d02:	fld    QWORD PTR [edx-0x6be4d1b5]
  408d08:	sub    cl,BYTE PTR ds:0x9bf248ab
  408d0e:	push   cs
  408d0f:	jge    0x408cc3
  408d11:	int3   
  408d12:	dec    esp
  408d13:	lahf   
  408d14:	pop    ecx
  408d15:	inc    esi
  408d16:	add    DWORD PTR [ebx],ecx
  408d18:	jb     0x408cba
  408d1a:	push   edi
  408d1b:	pcmpeqb mm0,mm5
  408d1e:	inc    esp
  408d1f:	or     BYTE PTR [edi],bh
  408d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d22:	inc    ecx
  408d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d24:	dec    edx
  408d25:	add    ebx,0x3c7d8fc9
  408d2b:	ror    DWORD PTR [ecx-0x7272936f],0xee
  408d32:	cmp    esp,DWORD PTR [eax-0x2a153652]
  408d38:	pop    eax
  408d39:	jo     0x408d6d
  408d3b:	adc    BYTE PTR ds:0xc0fd0545,0x46
  408d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d43:	ret    0x2c8
  408d46:	sahf   
  408d47:	fidivr DWORD PTR [edx+0x70166968]
  408d4d:	cmp    dl,bh
  408d4f:	repnz sbb bl,0xe1
  408d53:	pop    ds
  408d54:	lds    edx,FWORD PTR [ebx+ebp*8+0x4f3d570a]
  408d5b:	div    edi
  408d5d:	lea    ecx,es:[eax]
  408d60:	dec    edi
  408d61:	jno    0x408dbc
  408d63:	es jns 0x408d4b
  408d66:	jmp    0xc14a310e
  408d6b:	test   BYTE PTR [ebp+0x6b],dh
  408d6e:	lds    ecx,FWORD PTR [esi-0x1]
  408d71:	mov    eax,ds:0xd543ab5d
  408d76:	xor    eax,0x75fc5e68
  408d7b:	popf   
  408d7c:	xchg   edx,eax
  408d7d:	ffreep st(3)
  408d7f:	cmp    al,0xfd
  408d81:	idiv   esi
  408d83:	test   al,0xec
  408d85:	retf   
  408d86:	push   esi
  408d87:	ja     0x408d74
  408d89:	and    ch,BYTE PTR [edx-0x76b78500]
  408d8f:	stc    
  408d90:	loopne 0x408dde
  408d92:	ds popa 
  408d94:	imul   ecx,DWORD PTR [edi],0x50da678c
  408d9a:	jg     0x408d38
  408d9c:	(bad)  
  408d9d:	push   ss
  408d9e:	and    al,0xe7
  408da0:	xchg   ecx,eax
  408da1:	sub    BYTE PTR [edx+0x2d],cl
  408da4:	(bad)  
  408da5:	aaa    
  408da6:	xor    ch,BYTE PTR [ebp+0x1be48864]
  408dac:	inc    ecx
  408dad:	aam    0xbf
  408daf:	or     eax,0xe08fcc38
  408db4:	or     al,0x69
  408db6:	xchg   esp,eax
  408db7:	inc    ecx
  408db8:	xor    eax,0xc6684aaa
  408dbd:	xor    ebp,DWORD PTR [edx+ebp*4-0x40]
  408dc1:	test   DWORD PTR [edi],0xa88f97bd
  408dc7:	lahf   
  408dc8:	or     BYTE PTR [eax],0x4
  408dcb:	dec    edx
  408dcc:	in     eax,dx
  408dcd:	arpl   bx,sp
  408dcf:	out    dx,eax
  408dd0:	mov    eax,ds:0xb0c10a75
  408dd5:	adc    eax,0xdbac0730
  408dda:	dec    ebp
  408ddb:	ffree  st(1)
  408ddd:	imul   ebx,DWORD PTR [esi],0xfd703528
  408de3:	repz push ecx
  408de5:	mov    al,bl
  408de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de8:	sub    DWORD PTR ds:0x4c826d51,edx
  408dee:	push   edi
  408def:	xchg   esi,eax
  408df0:	cli    
  408df1:	cmp    ah,BYTE PTR [ebx]
  408df3:	add    eax,0xe80c2339
  408df8:	cmc    
  408df9:	shl    DWORD PTR [ecx+0x5933688d],cl
  408dff:	xchg   ebx,eax
  408e00:	in     al,dx
  408e01:	mov    edx,0x5e2ac03f
  408e06:	stos   BYTE PTR es:[edi],al
  408e07:	test   DWORD PTR [eax-0x5f097e2c],esp
  408e0d:	rol    BYTE PTR [edx-0x18],cl
  408e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e11:	add    al,0x3d
  408e13:	pop    ss
  408e14:	mov    dl,0xb2
  408e16:	enter  0x9a87,0x17
  408e1a:	das    
  408e1b:	pop    edi
  408e1c:	pop    eax
  408e1d:	in     eax,dx
  408e1e:	test   eax,0x7f6f16fe
  408e23:	push   ds
  408e24:	mov    dh,0x45
  408e26:	rcl    BYTE PTR [edi*4-0x6167ad50],0x9a
  408e2e:	outs   dx,BYTE PTR ds:[esi]
  408e2f:	jecxz  0x408e57
  408e31:	jne    0x408e99
  408e33:	pushf  
  408e34:	ja     0x408e10
  408e36:	adc    ecx,0xfb30d11e
  408e3c:	xor    eax,0x2c1fe6bb
  408e41:	sbb    eax,0x73b06603
  408e46:	nop
  408e47:	js     0x408dcb
  408e49:	lock fwait
  408e4b:	test   eax,0xb8264d94
  408e50:	out    dx,eax
  408e51:	int    0xd9
  408e53:	inc    eax
  408e54:	ins    BYTE PTR es:[edi],dx
  408e55:	retf   0xff92
  408e58:	ficomp DWORD PTR [ecx+0x819140e]
  408e5e:	arpl   WORD PTR [edx+eiz*1+0x2c],dx
  408e62:	or     cl,ah
  408e64:	repz or BYTE PTR [eax-0x69022593],al
  408e6b:	icebp  
  408e6c:	sbb    DWORD PTR [edx-0x3c],esp
  408e6f:	mov    al,0xef
  408e71:	push   edx
  408e72:	jae    0x408ee5
  408e74:	shl    dl,cl
  408e76:	inc    eax
  408e77:	mov    ch,0xc6
  408e79:	hlt    
  408e7a:	and    eax,0x2f9d74a4
  408e7f:	in     eax,dx
  408e80:	adc    eax,0xc67058f2
  408e85:	jb     0x408e97
  408e87:	sar    BYTE PTR [edi],cl
  408e89:	jo     0x408e85
  408e8b:	mov    eax,cs:0xb68231b8
  408e91:	inc    eax
  408e92:	es xchg ebx,eax
  408e94:	mov    DWORD PTR [eax+ebx*4],edi
  408e97:	gs xchg ecx,eax
  408e99:	dec    edi
  408e9a:	xchg   ebx,eax
  408e9b:	cwde   
  408e9c:	mov    ecx,db1
  408e9f:	rep stos DWORD PTR es:[edi],eax
  408ea1:	adc    DWORD PTR [esi+0x48],esi
  408ea4:	mov    ch,0xfd
  408ea6:	or     BYTE PTR [edx+0xecc56ef],al
  408eac:	rol    BYTE PTR [edx+0x41850de6],0x2e
  408eb3:	dec    ebx
  408eb4:	scas   al,BYTE PTR es:[edi]
  408eb5:	ins    DWORD PTR es:[edi],dx
  408eb6:	out    dx,al
  408eb7:	push   eax
  408eb8:	js     0x408eec
  408eba:	dec    eax
  408ebb:	(bad)  
  408ebc:	add    DWORD PTR [edi],eax
  408ebe:	mov    ebp,0x93993009
  408ec3:	retf   0x5ae9
  408ec6:	in     eax,dx
  408ec7:	dec    ecx
  408ec8:	or     DWORD PTR [eax+0x32],0xdff55c64
  408ecf:	pop    ebp
  408ed0:	xchg   ch,dh
  408ed2:	and    al,0x9f
  408ed4:	mov    esi,0x1a1b83bc
  408ed9:	adc    eax,0x80410a3d
  408ede:	jns    0x408f3a
  408ee0:	leave  
  408ee1:	or     bh,BYTE PTR [edi-0x2d]
  408ee4:	sub    dh,BYTE PTR [edx+eiz*8]
  408ee7:	sub    esi,DWORD PTR [ecx-0x79b50e04]
  408eed:	dec    ebx
  408eee:	gs das 
  408ef0:	cmp    ecx,DWORD PTR [esi]
  408ef2:	ds dec ebp
  408ef4:	push   edi
  408ef5:	sub    eax,0xa1696aa
  408efa:	js     0x408f55
  408efc:	cmp    DWORD PTR [ecx+0x8],esp
  408eff:	pop    ds
  408f00:	lds    edi,FWORD PTR [ecx+ebx*4]
  408f03:	cmp    eax,0x1a7ba5e3
  408f08:	mov    bl,0x29
  408f0a:	xor    al,0xfb
  408f0c:	dec    esp
  408f0d:	out    dx,al
  408f0e:	and    BYTE PTR [ebp+0x1691cc5e],0xc6
  408f15:	sbb    ebx,DWORD PTR [edx+0x34f58f0b]
  408f1b:	cmp    ebx,DWORD PTR [ecx+0x5d3d11e9]
  408f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f22:	inc    eax
  408f23:	call   0x8bf4:0x2b3ad260
  408f2a:	adc    BYTE PTR [esi],0x7d
  408f2d:	pushf  
  408f2e:	sub    ebx,DWORD PTR [esi+0x38f13e03]
  408f34:	adc    eax,0x97969003
  408f39:	out    0xe5,eax
  408f3b:	pop    esi
  408f3c:	adc    DWORD PTR [eax-0x29],esp
  408f3f:	adc    al,0xd5
  408f42:	mov    eax,cs:0x6a23d4fa
  408f48:	fwait
  408f49:	inc    edi
  408f4a:	stos   BYTE PTR es:[edi],al
  408f4b:	bound  esp,QWORD PTR [esi+0x2c]
  408f4e:	bound  eax,QWORD PTR [eax-0x79]
  408f51:	add    edi,ebx
  408f53:	loope  0x408eee
  408f55:	(bad)  
  408f56:	lahf   
  408f57:	xchg   esi,eax
  408f58:	push   ecx
  408f59:	test   BYTE PTR [edi+0x1c],cl
  408f5c:	shufps xmm5,XMMWORD PTR [ecx+ecx*2+0x18],0x7e
  408f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f63:	xchg   ebp,eax
  408f64:	pop    ecx
  408f65:	mov    dh,0x24
  408f67:	adc    eax,0x8f0e4d28
  408f6c:	jle    0x408fb2
  408f6e:	ja     0x408f53
  408f70:	les    esi,FWORD PTR [ebx-0x7e3a511]
  408f76:	pop    es
  408f77:	nop
  408f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f79:	mov    esp,fs
  408f7b:	pop    esp
  408f7c:	test   BYTE PTR [ebx+0x6572141d],bh
  408f82:	retf   0x8a2b
  408f85:	mov    cl,0xc1
  408f87:	add    ah,BYTE PTR [ecx-0x360c32f3]
  408f8d:	cmp    al,0x33
  408f8f:	or     BYTE PTR [edx+0x6ae3dbbb],ah
  408f95:	cs dec esi
  408f97:	hlt    
  408f98:	fs jb  0x409001
  408f9b:	shl    DWORD PTR [edx-0x57],cl
  408f9e:	jae    0x408f24
  408fa0:	ja     0x408f55
  408fa2:	sbb    eax,0x4b266ea8
  408fa7:	xchg   edi,eax
  408fa8:	(bad)  
  408fa9:	xchg   BYTE PTR [eax+0x12],cl
  408fac:	mov    eax,0x9ff85f46
  408fb1:	jl     0x408ff6
  408fb3:	xchg   BYTE PTR [ebx+0x5c],bh
  408fb6:	lock iret 
  408fb8:	jmp    0x40902f
  408fba:	mov    esi,0x45bacd95
  408fbf:	jae    0x409039
  408fc1:	into   
  408fc2:	(bad)  
  408fc3:	in     eax,0x47
  408fc5:	clc    
  408fc6:	ror    DWORD PTR [edx],0x62
  408fc9:	dec    eax
  408fca:	fisttp QWORD PTR [ebp-0x20385076]
  408fd0:	(bad)  
  408fd1:	push   esp
  408fd2:	jns    0x408fb8
  408fd4:	faddp  st(1),st
  408fd6:	add    DWORD PTR [esi+0x48],esp
  408fd9:	inc    esi
  408fda:	into   
  408fdb:	push   eax
  408fdc:	and    BYTE PTR [edi+edi*4],ch
  408fdf:	mov    WORD PTR [edi-0xa783c7d],es
  408fe5:	nop
  408fe6:	push   edx
  408fe7:	in     eax,0x64
  408fe9:	dec    edx
  408fea:	out    0x3b,eax
  408fec:	or     ecx,DWORD PTR ds:0x56edcfe0
  408ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ff3:	mov    esi,0x1ab779d4
  408ff8:	fimul  DWORD PTR [ebx]
  408ffa:	xor    BYTE PTR [ebp+0x76],0x74
  408ffe:	mov    ebp,0x4cf9a417
  409003:	pop    ds
  409004:	mov    ds:0x1a2e3252,eax
  409009:	outs   dx,BYTE PTR ds:[esi]
  40900a:	fild   WORD PTR [ebp-0x56]
  40900d:	add    ecx,esi
  40900f:	cmp    ebp,edi
  409011:	pop    es
  409012:	pop    ebp
  409013:	aaa    
  409014:	(bad)  
  409015:	stos   DWORD PTR es:[edi],eax
  409016:	sbb    BYTE PTR [ebp-0x2237637b],cl
  40901c:	enter  0x435,0xfa
  409020:	and    BYTE PTR [eax-0x69],al
  409023:	in     eax,0xbc
  409025:	imul   ecx,DWORD PTR [eax+0x27],0x2a
  409029:	add    DWORD PTR [edi-0x3a],edx
  40902c:	cli    
  40902d:	out    dx,al
  40902e:	dec    edi
  40902f:	mov    eax,0x80cb827c
  409034:	pop    es
  409035:	sub    dl,al
  409037:	sub    al,0x8b
  409039:	xchg   esp,eax
  40903a:	inc    ebp
  40903b:	hlt    
  40903c:	aam    0x88
  40903e:	cli    
  40903f:	repnz adc edx,DWORD PTR [edx]
  409042:	pushf  
  409043:	arpl   WORD PTR [esi-0x2e],si
  409046:	cmp    eax,0x64263bdc
  40904b:	lock idiv BYTE PTR [edi-0x72201edf]
  409052:	mov    bl,0xaf
  409054:	lahf   
  409055:	push   esi
  409056:	std    
  409057:	and    eax,0x571a3de4
  40905c:	dec    edi
  40905d:	rcr    DWORD PTR [ebx],0x5a
  409060:	repz sbb ecx,esp
  409063:	mov    ah,al
  409065:	adc    al,0x72
  409067:	in     eax,0x37
  409069:	pop    ss
  40906a:	inc    ebx
  40906b:	sub    ah,dl
  40906d:	xor    DWORD PTR [esi],eax
  40906f:	mov    dl,0x2b
  409071:	xchg   ecx,eax
  409072:	fld    TBYTE PTR [esi+eax*8-0x8]
  409076:	xchg   BYTE PTR [ebx+0xf],bl
  409079:	push   edi
  40907a:	pop    ds
  40907b:	mov    ss,WORD PTR [ecx-0x3342deca]
  409081:	in     eax,dx
  409082:	pcmpgtd mm2,QWORD PTR [edx]
  409085:	outs   dx,BYTE PTR ds:[esi]
  409086:	arpl   WORD PTR [esi+0x145aa1d2],si
  40908c:	imul   BYTE PTR [ebx*8+0x1fa47f89]
  409093:	mov    esp,0x2c8fbe88
  409098:	pop    ebx
  409099:	pop    esp
  40909a:	or     BYTE PTR [esi-0xf8e70b5],ch
  4090a0:	and    eax,0x557229c9
  4090a5:	jecxz  0x4090bf
  4090a7:	mov    ds:0xfdb60fe2,al
  4090ac:	jo     0x4090a1
  4090ae:	or     DWORD PTR [edx],edi
  4090b0:	sbb    BYTE PTR [edi+0x6a],ch
  4090b3:	fwait
  4090b4:	sub    DWORD PTR [esp+edi*8],eax
  4090b7:	test   eax,0xbe46f832
  4090bc:	jle    0x4090f4
  4090be:	loope  0x4090cf
  4090c0:	cmp    bl,BYTE PTR [ecx]
  4090c2:	sbb    ah,dl
  4090c4:	fwait
  4090c5:	cmp    dh,ah
  4090c7:	nop
  4090c8:	lea    esi,[ebx-0x14fdd206]
  4090ce:	fimul  DWORD PTR [ebx-0x66]
  4090d1:	outs   dx,BYTE PTR ds:[esi]
  4090d2:	fcom   DWORD PTR [eax-0x6af47ab]
  4090d8:	inc    edx
  4090d9:	test   DWORD PTR [eax],esi
  4090db:	cmp    cl,bh
  4090dd:	adc    ah,bl
  4090df:	stc    
  4090e0:	and    esi,DWORD PTR [ecx]
  4090e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090e3:	js     0x409161
  4090e5:	cmp    ch,BYTE PTR [edi-0x53d26f47]
  4090eb:	in     eax,0x34
  4090ed:	sbb    al,0xe2
  4090ef:	and    al,0x40
  4090f1:	or     ah,BYTE PTR [edi+esi*1]
  4090f4:	cmp    ah,BYTE PTR [ebx]
  4090f6:	loop   0x40915e
  4090f8:	inc    eax
  4090f9:	out    0xd5,al
  4090fb:	push   ss
  4090fc:	(bad)  
  4090fe:	jl     0x409138
  409100:	dec    ebp
  409101:	int    0x42
  409103:	retf   
  409104:	add    DWORD PTR [edx-0x64],ecx
  409107:	or     eax,0x39d8feb1
  40910c:	dec    edx
  40910d:	js     0x409118
  40910f:	pop    esp
  409110:	(bad)  [edx-0x4ae2296]
  409116:	xor    al,0xd8
  409118:	xchg   edx,eax
  409119:	rcl    BYTE PTR [eax+0x3933ee59],1
  40911f:	popf   
  409120:	dec    edx
  409121:	xor    al,0xd0
  409123:	pop    esp
  409124:	hlt    
  409125:	mov    eax,0x8c79e760
  40912a:	push   ds
  40912b:	adc    esp,edi
  40912d:	xor    ebp,edi
  40912f:	int    0x40
  409131:	arpl   WORD PTR ds:0x94e967c3,dx
  409137:	pop    esp
  409138:	xchg   ebp,eax
  409139:	hlt    
  40913a:	retf   
  40913b:	mov    ebp,0x408781a7
  409140:	mov    BYTE PTR [edi+0x5a053436],0x36
  409147:	das    
  409148:	aaa    
  409149:	add    eax,0x502851bd
  40914e:	mov    bl,0xf2
  409150:	xchg   ecx,eax
  409151:	out    dx,al
  409152:	xor    esp,esp
  409154:	mov    eax,ds:0x4ad353fa
  409159:	inc    esp
  40915a:	repnz push 0xffffffb5
  40915d:	enter  0xdb60,0xc9
  409161:	imul   eax,edi,0xfffffffd
  409164:	push   esp
  409165:	add    eax,DWORD PTR [esp+esi*8-0x13]
  409169:	xor    ch,BYTE PTR [esi+edi*4+0x8]
  40916d:	xor    DWORD PTR [ebp+0x22],ebx
  409170:	(bad)  
  409171:	xchg   esi,eax
  409172:	adc    bh,ch
  409174:	ja     0x409167
  409176:	sbb    al,0x5b
  409178:	ds pop edx
  40917a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917b:	sub    DWORD PTR [ebx],ecx
  40917d:	mov    al,ds:0xa4c4d750
  409182:	jmp    0x4091af
  409184:	lea    edx,[ecx]
  409186:	cdq    
  409187:	pop    ss
  409188:	pop    es
  409189:	dec    esi
  40918a:	mov    ah,0x74
  40918c:	fadd   st(1),st
  40918e:	js     0x40917e
  409190:	or     ch,bh
  409192:	mov    ebx,0x53ea2595
  409197:	lods   eax,DWORD PTR ds:[esi]
  409198:	push   ds
  409199:	popa   
  40919a:	jns    0x4091cd
  40919c:	or     ah,BYTE PTR [edi+eax*2+0x56]
  4091a0:	retf   0x82c
  4091a3:	fldenv [ecx+eiz*8+0x40]
  4091a7:	cwde   
  4091a8:	jns    0x409155
  4091aa:	dec    ecx
  4091ab:	push   eax
  4091ac:	pop    ds
  4091ad:	mov    ebp,0xde0d2de3
  4091b2:	icebp  
  4091b3:	loop   0x409141
  4091b5:	xlat   BYTE PTR ds:[ebx]
  4091b6:	ret    
  4091b7:	leave  
  4091b8:	adc    eax,0xd0713448
  4091bd:	sbb    al,0xc3
  4091bf:	mov    al,ds:0xd8b61db1
  4091c4:	setg   BYTE PTR [ebx+0x10b748ea]
  4091cb:	sti    
  4091cc:	ins    DWORD PTR es:[edi],dx
  4091cd:	jno    0x409214
  4091cf:	dec    edx
  4091d0:	mov    ds,WORD PTR ds:0xbb38b96
  4091d6:	loope  0x409220
  4091d8:	pop    edi
  4091d9:	(bad)
  4091dd:	mov    cl,ch
  4091df:	mov    eax,0x317fae3
  4091e4:	mov    esp,DWORD PTR [edx]
  4091e6:	test   ah,ch
  4091e8:	dec    edx
  4091e9:	lock addr16 (bad) 
  4091ec:	leave  
  4091ed:	xor    DWORD PTR [eax+0x24],esi
  4091f0:	pop    esi
  4091f1:	out    0x35,eax
  4091f3:	(bad)  
  4091f4:	mov    WORD PTR [bp+si],gs
  4091f7:	dec    esp
  4091f8:	imul   ebx,ebx,0x46
  4091fb:	in     al,dx
  4091fc:	scas   al,BYTE PTR es:[edi]
  4091fd:	inc    esi
  4091fe:	xor    ch,BYTE PTR [eax+0x24]
  409201:	adc    eax,0x80b110a2
  409206:	pop    edi
  409207:	sti    
  409208:	aaa    
  409209:	jle    0x40923c
  40920b:	(bad)  
  40920c:	fdiv   DWORD PTR [edi]
  40920e:	sbb    ecx,0xffffff91
  409211:	inc    edi
  409212:	int3   
  409213:	(bad)  
  409214:	pop    eax
  409215:	or     al,0x50
  409217:	xor    al,0x94
  409219:	jmp    0x409287
  40921b:	pop    ebx
  40921c:	jbe    0x409278
  40921e:	xor    edx,DWORD PTR [edi-0x1290715f]
  409224:	jge    0x409259
  409226:	adc    cl,BYTE PTR [eax-0x113cdf24]
  40922c:	(bad)  
  40922d:	rcl    BYTE PTR [eax-0x6f],1
  409230:	dec    esp
  409231:	fldenv ds:[edx+edx*1-0x7812c0ed]
  409239:	jo     0x40922e
  40923b:	stos   BYTE PTR es:[edi],al
  40923c:	lds    ebx,FWORD PTR [ebp+0x24]
  40923f:	mov    al,ds:0xc1860873
  409244:	rcl    DWORD PTR [esi],0xa9
  409247:	pushf  
  409248:	and    eax,0x6d6e57a0
  40924d:	aad    0x61
  40924f:	mov    ds:0xec72fd65,eax
  409254:	jb     0x40927a
  409256:	push   cs
  409257:	fidiv  WORD PTR [esi-0x291658bb]
  40925d:	add    esp,DWORD PTR [edi]
  40925f:	test   DWORD PTR [ecx+0x5247a86d],edx
  409265:	and    ah,BYTE PTR [edx]
  409267:	mov    ebx,0x1163252d
  40926c:	ficom  DWORD PTR ds:0x68de3359
  409272:	icebp  
  409273:	lods   al,BYTE PTR ds:[esi]
  409274:	frstor [ebx]
  409276:	fistp  QWORD PTR [ecx+0x56fc42d4]
  40927c:	jmp    0xd4fe86ed
  409281:	mov    al,ds:0x9e64a4fb
  409286:	std    
  409287:	xor    BYTE PTR [eax],0x34
  40928a:	stc    
  40928b:	fld    TBYTE PTR [esi-0x68]
  40928e:	call   0x47359645
  409293:	jb     0x40927a
  409295:	test   DWORD PTR [ebp-0x7ef538b],eax
  40929b:	retf   
  40929c:	mov    bl,0xfb
  40929e:	int3   
  40929f:	jge    0x409257
  4092a1:	push   esi
  4092a2:	sahf   
  4092a3:	sub    DWORD PTR [ebp+0x1e104bc1],eax
  4092a9:	ja     0x409279
  4092ab:	mov    DWORD PTR [esi+0x176b76ad],ecx
  4092b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b2:	cmp    DWORD PTR [esi+ebp*2],edx
  4092b5:	cmp    dh,BYTE PTR [ecx]
  4092b7:	cmp    BYTE PTR [edx-0x2b068f52],bh
  4092bd:	mov    ds:0x8596be67,al
  4092c2:	pop    ss
  4092c3:	push   esi
  4092c4:	xlat   BYTE PTR ds:[ebx]
  4092c5:	retf   
  4092c6:	jo     0x40927e
  4092c8:	or     eax,0x78217a72
  4092cd:	mov    cl,0xec
  4092cf:	pop    esi
  4092d0:	dec    ebx
  4092d2:	xor    eax,0xafbf8761
  4092d7:	mov    al,ah
  4092d9:	jg     0x4092ef
  4092db:	pop    eax
  4092dc:	popf   
  4092dd:	inc    edi
  4092de:	mov    eax,0x9f818266
  4092e3:	dec    esi
  4092e4:	out    0x7,eax
  4092e6:	ret    
  4092e7:	push   cs
  4092e8:	mov    ds:0x1c8a3688,al
  4092ed:	rcr    BYTE PTR [edi+0x5],0x2c
  4092f1:	mov    DWORD PTR [ecx+0x4b],0x30f26386
  4092f8:	jg     0x4092cf
  4092fa:	xchg   ecx,eax
  4092fb:	mov    cl,0x74
  4092fd:	gs lock xchg edi,eax
  409300:	outs   dx,BYTE PTR ds:[esi]
  409301:	xor    ebx,DWORD PTR [edi-0x4a0314e0]
  409307:	dec    esp
  409308:	cmp    eax,0x2b03aea
  40930d:	mov    dh,0xad
  40930f:	mov    bh,0x7c
  409311:	mov    BYTE PTR [edi],ch
  409313:	lds    ebp,FWORD PTR [ebx+0x1f]
  409316:	sub    DWORD PTR [edx-0x10],0x9
  40931a:	push   esi
  40931b:	in     eax,dx
  40931c:	scas   eax,DWORD PTR es:[edi]
  40931d:	call   0xc7de40
  409322:	repnz out 0x87,eax
  409325:	out    dx,al
  409326:	jno    0x40938c
  409328:	pop    ebp
  409329:	scas   al,BYTE PTR es:[edi]
  40932a:	addr16 push ebp
  40932c:	out    dx,al
  40932d:	add    ebp,DWORD PTR [ebx-0x39]
  409330:	loop   0x409301
  409332:	inc    edi
  409333:	js     0x40936a
  409335:	aas    
  409336:	sub    al,0xea
  409338:	retf   
  409339:	push   ecx
  40933a:	mov    esp,0xbc266aa5
  40933f:	adc    al,BYTE PTR [edx+edx*4+0x7bf33d0b]
  409346:	adc    bl,BYTE PTR [esp+ebp*2-0xd]
  40934a:	mov    ah,0xdf
  40934c:	jmp    0xb5cbd0fd
  409351:	inc    ebx
  409352:	int3   
  409353:	jno    0x409393
  409355:	inc    eax
  409356:	or     eax,0xa77bb1bc
  40935b:	mov    edx,0x90970e23
  409360:	loopne 0x4092f3
  409362:	daa    
  409363:	test   eax,0xc315eb4d
  409368:	jb     0x409349
  40936a:	push   0xa969494e
  40936f:	cdq    
  409370:	xor    al,0x67
  409372:	cld    
  409373:	inc    BYTE PTR ds:0x81389e1
  409379:	and    DWORD PTR [ecx-0x14d80435],edi
  40937f:	mov    ds,WORD PTR [eax]
  409381:	mov    edi,DWORD PTR [edx+ecx*2]
  409384:	sbb    BYTE PTR [ebp+0xf],ch
  409387:	fmul   DWORD PTR [edx-0x5ab25be7]
  40938d:	arpl   WORD PTR [edi],cx
  40938f:	sbb    al,0x43
  409391:	sbb    al,0x7d
  409393:	or     dh,bl
  409395:	dec    ebp
  409396:	or     al,0xea
  409398:	adc    bl,BYTE PTR [ecx]
  40939a:	pop    eax
  40939b:	pop    edi
  40939c:	pushf  
  40939d:	xchg   edi,eax
  40939e:	mov    edx,0xd07c6efa
  4093a3:	xchg   esi,eax
  4093a4:	push   ecx
  4093a5:	in     al,dx
  4093a6:	xor    al,0x3a
  4093a8:	and    esp,DWORD PTR [ebx-0x3932f522]
  4093ae:	cli    
  4093af:	sub    esi,DWORD PTR [edx]
  4093b1:	sti    
  4093b2:	dec    ebp
  4093b3:	cmp    ebx,ebp
  4093b5:	add    dl,BYTE PTR [edi]
  4093b7:	ss mov ebx,0xbe155843
  4093bd:	push   ebx
  4093be:	psubsw mm0,mm3
  4093c1:	pop    es
  4093c2:	adc    esp,DWORD PTR [edi+esi*8]
  4093c5:	stos   BYTE PTR es:[edi],al
  4093c6:	jbe    0x4093d6
  4093c8:	cdq    
  4093c9:	ja     0x4093f9
  4093cb:	je     0x409442
  4093cd:	xor    DWORD PTR [eax+ebp*1],eax
  4093d0:	ficom  WORD PTR [edi-0x1ee51405]
  4093d6:	out    dx,eax
  4093d7:	shr    BYTE PTR [ecx-0x60],cl
  4093da:	jg     0x4093c0
  4093dc:	cmp    ebx,DWORD PTR [ebp+0xf]
  4093df:	xchg   ebx,eax
  4093e0:	cmp    DWORD PTR [ebx-0xe46d01],eax
  4093e6:	std    
  4093e7:	and    eax,0xf594ab30
  4093ec:	xor    ebp,edi
  4093ee:	jnp    0x40938a
  4093f0:	(bad)  
  4093f1:	(bad)  
  4093f2:	pushf  
  4093f3:	bound  edx,QWORD PTR [ebp+eiz*1+0x6a698110]
  4093fa:	inc    edi
  4093fb:	int3   
  4093fc:	jg     0x4093c4
  4093fe:	push   cs
  4093ff:	inc    edi
  409400:	int    0x2a
  409402:	mov    edi,0x9f610060
  409407:	sub    BYTE PTR [edx*8-0x3d21a552],ah
  40940e:	gs push es
  409410:	js     0x4093db
  409412:	or     dh,BYTE PTR [ebp-0x3f]
  409415:	mul    al
  409417:	adc    DWORD PTR [ebx-0x67],esi
  40941a:	lahf   
  40941b:	clc    
  40941c:	adc    eax,0x8965d223
  409421:	add    DWORD PTR [esp+ecx*8],0x7f88e83d
  409428:	test   bl,dl
  40942a:	nop
  40942b:	hlt    
  40942c:	push   cs
  40942d:	mov    cl,ch
  40942f:	mov    esp,0x716551f
  409434:	dec    eax
  409435:	jmp    0x409487
  409437:	pop    edx
  409438:	inc    edx
  409439:	xchg   esp,eax
  40943a:	inc    edi
  40943b:	cmp    cl,BYTE PTR [edx-0x1b]
  40943e:	ds (bad) 
  409440:	sub    eax,0xbc55b7d8
  409445:	add    al,0xb9
  409447:	dec    ecx
  409448:	mov    ah,0x42
  40944a:	mov    ds:0x342861ff,eax
  40944f:	rcr    BYTE PTR [ebx-0x58],cl
  409452:	int    0x67
  409454:	xor    al,0x94
  409456:	inc    edx
  409457:	sub    BYTE PTR [esi+eax*4+0x530843dc],al
  40945e:	xchg   esi,eax
  40945f:	push   edx
  409460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409461:	inc    ecx
  409462:	jp     0x4094bd
  409464:	aaa    
  409465:	shr    BYTE PTR [esi+0x61d6ad82],1
  40946b:	mov    al,ds:0xd6aa2aaf
  409470:	ins    BYTE PTR es:[edi],dx
  409471:	cmc    
  409472:	repz adc eax,0xf4cfb22f
  409478:	cdq    
  409479:	ins    BYTE PTR es:[edi],dx
  40947a:	or     ebp,ecx
  40947c:	gs sbb edx,ebp
  40947f:	pop    es
  409480:	fcomi  st,st(5)
  409482:	add    BYTE PTR [esi+ecx*2+0x24],0xd8
  409487:	fsubrp st(4),st
  409489:	jbe    0x4094d3
  40948b:	sub    BYTE PTR [ecx],dh
  40948d:	or     DWORD PTR [esi+ecx*2],edx
  409490:	ja     0x4094af
  409492:	ins    BYTE PTR es:[edi],dx
  409493:	push   edi
  409494:	in     al,dx
  409495:	repz data16 loope 0x409450
  409499:	ds push esp
  40949b:	mov    cl,0x33
  40949d:	fwait
  40949e:	inc    eax
  40949f:	out    dx,al
  4094a0:	inc    esp
  4094a1:	xchg   DWORD PTR [eax-0x79],eax
  4094a4:	fs push ebx
  4094a6:	xlat   BYTE PTR ds:[ebx]
  4094a7:	pop    ebp
  4094a8:	pop    ss
  4094a9:	je     0x4094ef
  4094ab:	xchg   ebx,eax
  4094ac:	ja     0x4094c6
  4094ae:	lods   eax,DWORD PTR ds:[esi]
  4094af:	dec    edx
  4094b0:	je     0x4094a9
  4094b2:	push   0x2e
  4094b4:	sbb    dh,0xe3
  4094b7:	jno    0x40945b
  4094b9:	inc    esi
  4094ba:	jp     0x409472
  4094bc:	call   0xaf654e00
  4094c1:	sahf   
  4094c2:	je     0x409531
  4094c4:	dec    ecx
  4094c5:	cmp    ecx,DWORD PTR [ecx+0x6f]
  4094c8:	loop   0x4094ea
  4094ca:	std    
  4094cb:	push   ss
  4094cc:	cmp    bh,bl
  4094ce:	cmp    eax,edx
  4094d0:	xchg   BYTE PTR [ebp+0x38],dl
  4094d3:	test   BYTE PTR [ebx+0x5],bh
  4094d6:	aaa    
  4094d7:	scas   eax,DWORD PTR es:[edi]
  4094d8:	scas   eax,DWORD PTR es:[edi]
  4094d9:	pop    eax
  4094da:	or     cl,dh
  4094dc:	lds    esi,FWORD PTR gs:[ecx-0x54]
  4094e0:	mov    ch,0xcf
  4094e2:	test   eax,0xcbee45bc
  4094e7:	fdivr  DWORD PTR [edi+0x5f5e83e9]
  4094ed:	mov    WORD PTR [eax+0x2b],fs
  4094f0:	in     al,dx
  4094f1:	inc    eax
  4094f2:	test   DWORD PTR [edi+0x4e9107e7],ebx
  4094f8:	jmp    0x4094af
  4094fa:	dec    ebp
  4094fb:	scas   eax,DWORD PTR es:[edi]
  4094fc:	or     BYTE PTR [ebp-0x55],ch
  4094ff:	fst    DWORD PTR [edx-0x44]
  409502:	aas    
  409503:	out    0xed,al
  409505:	icebp  
  409506:	call   0x1602a1c2
  40950b:	and    al,al
  40950d:	les    esi,FWORD PTR [esi-0x6c]
  409510:	rcl    DWORD PTR [edx],cl
  409512:	in     al,0x12
  409514:	pop    ss
  409515:	xchg   ah,ah
  409517:	dec    eax
  409518:	stos   BYTE PTR es:[edi],al
  409519:	xchg   ebp,eax
  40951a:	push   edi
  40951b:	inc    ecx
  40951c:	clc    
  40951d:	out    0xb2,eax
  40951f:	or     al,0x80
  409521:	pop    ss
  409522:	add    al,0x5d
  409524:	dec    ebp
  409525:	mov    esi,DWORD PTR [ebp*8+0x2e1b1bbf]
  40952c:	xor    dh,BYTE PTR [esi-0x67]
  40952f:	(bad)  [esi]
  409531:	and    al,0x3
  409533:	adc    bh,bl
  409535:	loope  0x409537
  409537:	push   ebp
  409538:	sahf   
  409539:	ds mov edi,ebx
  40953c:	neg    BYTE PTR [edx-0x3fb4ff03]
  409542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409543:	fcomp  DWORD PTR [esi]
  409545:	and    BYTE PTR [edx],ch
  409547:	fdivr  QWORD PTR [ecx]
  409549:	mov    bl,0x7b
  40954b:	and    bl,ch
  40954d:	sbb    eax,0x207cda44
  409552:	cdq    
  409553:	dec    ebp
  409554:	outs   dx,DWORD PTR ds:[esi]
  409555:	xchg   edi,eax
  409556:	retf   0x249e
  409559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40955a:	sbb    edx,esi
  40955c:	int3   
  40955d:	pushf  
  40955e:	enter  0xeef,0x3f
  409562:	mov    ds:0x4ce41248,eax
  409567:	and    DWORD PTR [esi-0x52],ecx
  40956a:	lods   eax,DWORD PTR ds:[esi]
  40956b:	pushf  
  40956c:	ins    DWORD PTR es:[edi],dx
  40956d:	xchg   DWORD PTR [ebp+0x10],edx
  409570:	sbb    al,0x25
  409572:	add    ebp,DWORD PTR [esi+0x49239b10]
  409578:	pop    eax
  409579:	mov    dh,0x37
  40957b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40957c:	scas   al,BYTE PTR es:[edi]
  40957d:	adc    DWORD PTR [edi],ecx
  40957f:	add    edi,DWORD PTR [esi+0x65]
  409582:	cmc    
  409583:	push   esi
  409584:	mov    edi,0xe016eba5
  409589:	or     eax,edx
  40958b:	inc    esi
  40958c:	outs   dx,DWORD PTR ds:[esi]
  40958d:	bound  esp,QWORD PTR ds:0x6fbea28d
  409593:	and    al,0x55
  409595:	mov    al,ds:0xdb46e667
  40959a:	outs   dx,BYTE PTR ds:[esi]
  40959b:	addr16 ret 0x14e2
  40959f:	mov    ds:0x19e3b8c9,al
  4095a4:	cmp    ebp,DWORD PTR [ebx]
  4095a6:	jnp    0x4095b4
  4095a8:	dec    ebp
  4095a9:	push   esi
  4095aa:	daa    
  4095ab:	or     al,0x1a
  4095ad:	dec    esi
  4095ae:	mov    edx,0xfcb76b32
  4095b3:	cmp    DWORD PTR [ebx-0x222fdb7f],0xffffffa9
  4095ba:	pop    edx
  4095bb:	push   eax
  4095bc:	fsubr  DWORD PTR [ebx-0x69]
  4095bf:	add    DWORD PTR [ecx+0x410b2286],edi
  4095c5:	xor    eax,0xef83ee8f
  4095ca:	jnp    0x409628
  4095cc:	push   edx
  4095cd:	jmp    0x409576
  4095cf:	ret    
  4095d0:	lds    ebp,FWORD PTR [edx+0x74]
  4095d3:	in     al,dx
  4095d4:	pop    esp
  4095d5:	ins    DWORD PTR es:[edi],dx
  4095d6:	ja     0x4095a9
  4095d8:	retf   0xf06a
  4095db:	call   FWORD PTR [esi+ebx*1-0x38]
  4095df:	jg     0x409613
  4095e1:	push   esp
  4095e2:	mov    eax,0x33f8fd96
  4095e7:	cli    
  4095e8:	xchg   ebp,eax
  4095e9:	xchg   ebx,eax
  4095ea:	imul   edx,DWORD PTR [esi-0x22e8d2e3],0x39
  4095f1:	push   esi
  4095f2:	fnstenv [edi+eax*4-0x2921033c]
  4095f9:	das    
  4095fa:	pop    eax
  4095fb:	sub    dl,BYTE PTR [ecx-0x5f]
  4095fe:	inc    ebp
  4095ff:	pop    edx
  409600:	xor    DWORD PTR [edi-0x62c9db10],edi
  409606:	cmp    eax,0x49146537
  40960b:	(bad)  
  40960c:	(bad)  
  40960d:	lds    ecx,FWORD PTR [ebp-0x43ae2365]
  409613:	pop    edx
  409614:	in     al,dx
  409615:	(bad)  
  409616:	jge    0x4095a0
  409618:	lods   al,BYTE PTR ds:[esi]
  409619:	mov    bl,0x56
  40961b:	jno    0x40968b
  40961d:	and    al,0xaf
  40961f:	xchg   ecx,eax
  409620:	fwait
  409621:	inc    eax
  409622:	rol    ecx,1
  409624:	dec    esp
  409625:	pop    ebp
  409626:	pushf  
  409627:	and    edi,0x8
  40962a:	mov    ebp,0x3ed018f6
  40962f:	inc    esi
  409630:	sbb    eax,esp
  409632:	popa   
  409633:	mov    esi,DWORD PTR [ebx-0x51764864]
  409639:	mov    BYTE PTR [eax],0x4a
  40963c:	or     eax,0x514477f6
  409641:	mov    ds:0x7e9367fc,eax
  409646:	jge    0x4095d0
  409648:	ret    0xb290
  40964b:	jecxz  0x40960d
  40964d:	aam    0x5e
  40964f:	push   cs
  409650:	jne    0x4096c3
  409652:	adc    ebx,DWORD PTR [esi-0x192738f6]
  409658:	cmp    al,0x0
  40965b:	push   0xc
  40965d:	imul   esp,DWORD PTR [eax+edx*1],0x6c3c22b4
  409664:	jle    0x4096a0
  409666:	popf   
  409667:	push   0xffffff9c
  409669:	cmp    BYTE PTR [esi-0x7d],0x55
  40966d:	add    al,0xf1
  40966f:	inc    edi
  409670:	out    dx,al
  409671:	daa    
  409672:	xor    eax,0x374ae423
  409677:	fld    TBYTE PTR [eax]
  409679:	icebp  
  40967a:	nop
  40967b:	sub    DWORD PTR [ebx-0x431d233b],edx
  409681:	ja     0x40966c
  409683:	inc    esp
  409684:	adc    al,0x97
  409686:	daa    
  409687:	dec    ebp
  409688:	iret   
  409689:	and    DWORD PTR [ecx-0x20c53adf],0x8
  409690:	cmp    dh,BYTE PTR [ecx+0x4c]
  409693:	jo     0x4096dc
  409695:	xor    BYTE PTR ds:0x7548cd79,al
  40969b:	push   ss
  40969c:	dec    eax
  40969d:	cmp    eax,0x643d5a84
  4096a2:	rcr    DWORD PTR [edx-0x4d0b799e],0xab
  4096a9:	add    ch,cl
  4096ab:	lea    ebx,[edi+eiz*8]
  4096ae:	xchg   edi,eax
  4096af:	out    dx,eax
  4096b0:	cmp    dh,BYTE PTR [edi+0x3f]
  4096b3:	dec    ecx
  4096b4:	scas   al,BYTE PTR es:[edi]
  4096b5:	stos   BYTE PTR es:[edi],al
  4096b6:	lods   al,BYTE PTR ds:[esi]
  4096b7:	xchg   esp,eax
  4096b8:	ror    DWORD PTR [ecx],0xe7
  4096bb:	and    eax,0x86f33c28
  4096c0:	jo     0x409644
  4096c2:	sub    ch,dh
  4096c4:	mov    BYTE PTR [edi+ecx*8+0x8af282b],bh
  4096cb:	xor    ebp,eax
  4096cd:	inc    ebx
  4096ce:	shl    DWORD PTR [edi],0xd9
  4096d1:	cmp    esp,DWORD PTR [ebp+0x5b]
  4096d4:	imul   ecx,DWORD PTR [ecx+edx*2],0xb2d40cf5
  4096db:	sahf   
  4096dc:	pop    edx
  4096dd:	cmp    BYTE PTR [ecx+0x4a896de],0xcb
  4096e4:	shl    BYTE PTR ds:0x3b55ca57,cl
  4096ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096eb:	stos   BYTE PTR es:[edi],al
  4096ec:	repnz xchg ebp,eax
  4096ee:	ja     0x40969d
  4096f0:	fcmovne st,st(1)
  4096f2:	repnz and eax,0x5f4719a9
  4096f8:	nop
  4096f9:	mov    edi,0xa6ab9b03
  4096fe:	jno    0x40969a
  409700:	dec    esi
  409701:	call   0xe43b:0x2d138278
  409708:	retf   0xdc69
  40970b:	mov    bl,0x70
  40970d:	std    
  40970e:	es mov bl,0x3e
  409711:	or     esi,ebx
  409713:	popa   
  409714:	inc    ecx
  409715:	xchg   ebx,eax
  409716:	outs   dx,DWORD PTR ds:[esi]
  409717:	into   
  409718:	ret    
  409719:	mov    DWORD PTR [edx],ecx
  40971b:	je     0x4096e4
  40971d:	test   al,0x9b
  40971f:	cmp    DWORD PTR [edi+0x3],ebx
  409722:	and    al,0x68
  409724:	arpl   WORD PTR [edi],di
  409726:	pop    ds
  409727:	mov    esp,0xa3c8c12c
  40972c:	and    eax,0xa86268e9
  409731:	dec    ebp
  409732:	shl    BYTE PTR [edx+0x447257ce],0x30
  409739:	pop    ss
  40973a:	mov    ah,0xa0
  40973c:	sbb    eax,0xb8155240
  409741:	mov    dl,0x37
  409743:	sub    al,0xad
  409745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409746:	popf   
  409747:	sar    cl,cl
  409749:	mov    esp,0x502a772e
  40974e:	in     al,0xad
  409750:	out    dx,al
  409751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409752:	push   0x4a
  409754:	icebp  
  409755:	lahf   
  409756:	push   ebp
  409757:	lahf   
  409758:	push   esi
  409759:	xor    eax,DWORD PTR [edx+0x48]
  40975c:	xchg   esi,eax
  40975d:	lods   al,BYTE PTR ds:[esi]
  40975e:	push   es
  40975f:	jbe    0x409715
  409761:	ror    cl,cl
  409763:	leave  
  409764:	push   edx
  409765:	pushf  
  409766:	daa    
  409767:	inc    esp
  409768:	jae    0x40971c
  40976a:	jp     0x409775
  40976c:	push   es
  40976d:	xor    bh,BYTE PTR ds:0xba8683c7
  409773:	(bad)  [ecx]
  409775:	test   al,0x23
  409777:	sbb    esi,0x67c4d704
  40977d:	test   edx,edx
  40977f:	push   esi
  409780:	mov    ebx,0x16df1fcc
  409785:	adc    ebx,DWORD PTR [esi-0x288792e1]
  40978b:	pop    ecx
  40978c:	hlt    
  40978d:	into   
  40978e:	adc    dl,0xaa
  409791:	mov    ch,0x4f
  409793:	(bad)  
  409794:	push   edi
  409795:	je     0x409743
  409797:	scas   al,BYTE PTR es:[edi]
  409798:	push   edx
  409799:	ret    0xf853
  40979c:	inc    esi
  40979d:	loopne 0x409756
  40979f:	jo     0x409747
  4097a1:	cld    
  4097a2:	sub    DWORD PTR [ebx-0x533a0d73],edi
  4097a8:	(bad)  
  4097a9:	adc    DWORD PTR [ecx],ecx
  4097ab:	add    al,0x62
  4097ad:	sahf   
  4097ae:	xchg   ebx,eax
  4097af:	jecxz  0x4097d0
  4097b1:	lods   al,BYTE PTR ds:[esi]
  4097b3:	pop    ebp
  4097b4:	push   esp
  4097b5:	repz xchg esi,eax
  4097b7:	cmp    cl,cl
  4097b9:	iret   
  4097ba:	aaa    
  4097bb:	aaa    
  4097bc:	rol    BYTE PTR [edi+0x7e],cl
  4097bf:	sub    ebp,DWORD PTR [eax+0x7aedc49e]
  4097c5:	sbb    al,0x75
  4097c7:	inc    ebp
  4097c8:	add    esi,DWORD PTR cs:[ecx+0x23]
  4097cc:	cli    
  4097cd:	pop    esi
  4097ce:	cli    
  4097cf:	push   ebp
  4097d0:	test   eax,0x4d9c57c0
  4097d5:	int3   
  4097d6:	repz bnd jge 0x409771
  4097da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097db:	stc    
  4097dc:	aaa    
  4097dd:	sbb    BYTE PTR [ebx-0x1a],bl
  4097e0:	or     DWORD PTR [ecx*4+0x6803c248],ecx
  4097e7:	scas   eax,DWORD PTR es:[edi]
  4097e8:	test   DWORD PTR [edi-0x1902ffff],0x99398c19
  4097f2:	es enter 0x6d2e,0x5a
  4097f7:	xor    eax,0x58ad59f3
  4097fc:	sar    BYTE PTR [ebp+0x2e],cl
  4097ff:	jne    0x4097fd
  409801:	dec    DWORD PTR [edi+0x529a1a9f]
  409807:	add    dh,bl
  409809:	repnz retf 0xbcd3
  40980d:	jno    0x4097de
  40980f:	lods   eax,DWORD PTR ds:[esi]
  409810:	iret   
  409811:	out    dx,eax
  409812:	cmp    DWORD PTR [edx],esp
  409814:	sbb    al,0xc5
  409816:	and    ebp,esp
  409818:	push   ebp
  409819:	mov    DWORD PTR [eax-0x6a],edi
  40981c:	cdq    
  40981d:	inc    edx
  40981e:	jmp    0x4097d3
  409820:	mov    dh,0x22
  409822:	in     al,0x65
  409824:	std    
  409825:	test   eax,0x7acbc8ed
  40982a:	fwait
  40982b:	pusha  
  40982c:	sbb    eax,0xa618b8b4
  409831:	jmp    0x383a7390
  409836:	dec    edi
  409837:	aaa    
  409838:	or     esi,DWORD PTR [ecx]
  40983a:	push   es
  40983b:	fsubr  DWORD PTR [edx+0x2ee049a8]
  409841:	loop   0x409873
  409843:	xor    BYTE PTR [ebp-0x4c3fe024],ah
  409849:	or     BYTE PTR [esi],0xd0
  40984c:	call   0xb0f381a9
  409851:	xlat   BYTE PTR ds:[ebx]
  409852:	pop    edi
  409853:	bound  ebx,QWORD PTR [ebp+edi*1+0x33]
  409857:	jns    0x409864
  409859:	or     ebp,DWORD PTR [edi+0x7]
  40985c:	push   0xb3309b49
  409861:	sbb    BYTE PTR [edi+0x5b],0x6e
  409865:	mov    edi,0x970622c0
  40986a:	ja     0x4098af
  40986c:	sbb    BYTE PTR [eax+edi*1-0x7e],dl
  409870:	mov    esp,0x91122ea9
  409875:	in     al,dx
  409876:	cwde   
  409877:	popf   
  409878:	and    DWORD PTR [eax-0x80],esp
  40987b:	popa   
  40987c:	mov    cs,edx
  40987e:	pop    ecx
  40987f:	fwait
  409880:	arpl   cx,ax
  409882:	cmp    eax,0xa8762053
  409887:	iret   
  409888:	iret   
  409889:	test   ah,ah
  40988b:	pusha  
  40988c:	and    ecx,ecx
  40988e:	cld    
  40988f:	ret    
  409890:	inc    edx
  409891:	scas   eax,DWORD PTR es:[edi]
  409892:	dec    esp
  409893:	and    al,0x5d
  409895:	scas   al,BYTE PTR es:[edi]
  409896:	pop    edi
  409897:	push   ds
  409898:	push   ecx
  409899:	arpl   WORD PTR [ecx+0x65b51af9],ax
  40989f:	(bad)  
  4098a0:	mov    al,ds:0x9242a2d3
  4098a5:	push   0x91ccdd48
  4098aa:	mov    edx,DWORD PTR [ecx+0x1d]
  4098ad:	sbb    BYTE PTR [eax-0x79],ch
  4098b0:	in     eax,dx
  4098b1:	adc    eax,DWORD PTR [edx]
  4098b3:	sbb    esi,DWORD PTR [edx+0x7a]
  4098b6:	or     eax,0xae4f06f6
  4098bb:	add    al,0x19
  4098bd:	aaa    
  4098be:	in     al,dx
  4098bf:	fnstsw WORD PTR [ecx]
  4098c1:	xchg   DWORD PTR [ebp+0x491f95e3],esp
  4098c7:	ins    DWORD PTR es:[edi],dx
  4098c8:	repnz cwde 
  4098ca:	inc    ecx
  4098cb:	mov    esp,0xf6e29a9b
  4098d0:	outs   dx,BYTE PTR ds:[esi]
  4098d1:	xor    bl,BYTE PTR [ebp+0x73]
  4098d4:	int    0x1b
  4098d6:	inc    ebp
  4098d7:	xor    ch,0xbf
  4098da:	add    DWORD PTR [eax+0x16],esi
  4098dd:	fadd   DWORD PTR [eax+0x3d45f258]
  4098e3:	cmp    DWORD PTR [ecx],esp
  4098e5:	mov    ebp,ecx
  4098e7:	nop
  4098e8:	cmp    dh,ah
  4098ea:	mov    ds:0x11b93f73,al
  4098ef:	or     al,0xb7
  4098f1:	dec    ebp
  4098f2:	(bad)  
  4098f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098f5:	cmc    
  4098f6:	xchg   ecx,eax
  4098f7:	popf   
  4098f8:	lods   eax,DWORD PTR ds:[esi]
  4098f9:	add    eax,0xb4738325
  4098fe:	aaa    
  4098ff:	fadd   DWORD PTR [eax-0x35]
  409902:	sbb    al,0x3e
  409904:	aam    0x8b
  409906:	les    ebx,FWORD PTR ds:0x8d261d64
  40990c:	arpl   bx,si
  40990e:	xor    eax,0xaafa1c64
  409913:	xchg   ebx,ebx
  409915:	mov    es,WORD PTR [ebp-0x34]
  409918:	pusha  
  409919:	xchg   edx,eax
  40991a:	mov    cl,0xf3
  40991c:	jp     0x4098af
  40991e:	xchg   edx,eax
  40991f:	data16 hlt 
  409921:	ja     0x4098d8
  409923:	mov    ecx,0xa4fe64bc
  409928:	outs   dx,BYTE PTR ds:[esi]
  409929:	outs   dx,DWORD PTR ds:[esi]
  40992a:	sbb    DWORD PTR [edx],ecx
  40992c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40992d:	in     eax,0x67
  40992f:	mov    BYTE PTR [esi-0x2f],dh
  409932:	or     esp,DWORD PTR [ecx+0x25]
  409935:	cdq    
  409936:	xor    BYTE PTR [esp+edx*4],bl
  409939:	jae    0x409956
  40993b:	daa    
  40993c:	aaa    
  40993d:	cmp    al,0xd7
  40993f:	sub    eax,0x570433d7
  409944:	cmp    DWORD PTR ss:0xd5db000b,esi
  40994b:	adc    BYTE PTR [ebx+0x2920e6a1],bl
  409951:	pushf  
  409952:	shl    DWORD PTR [edi],cl
  409954:	popf   
  409955:	out    0x7,al
  409957:	inc    esp
  409958:	sub    al,0xae
  40995a:	(bad)  
  40995b:	enter  0x8522,0xde
  40995f:	dec    edx
  409960:	mov    BYTE PTR [ebp+0x38d53c4f],dh
  409966:	xchg   ebp,eax
  409967:	arpl   cx,si
  409969:	int3   
  40996a:	int3   
  40996b:	sti    
  40996c:	push   edx
  40996d:	test   DWORD PTR [eax+0x2b],edx
  409970:	(bad)  
  409971:	out    0x46,al
  409973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409974:	mov    eax,ds:0xbb669906
  409979:	es repz push esp
  40997c:	hlt    
  40997d:	mov    ds:0x1f49c977,al
  409982:	stc    
  409983:	pop    ebx
  409984:	mov    ebp,0x35f8b25
  409989:	scas   eax,DWORD PTR es:[edi]
  40998a:	mov    esi,cs
  40998c:	clc    
  40998d:	pop    ebp
  40998e:	cmp    edx,DWORD PTR [edi-0x6a]
  409991:	daa    
  409992:	mov    DWORD PTR [ebx],edi
  409994:	fdivr  DWORD PTR [eax-0x1f2fb80b]
  40999a:	cmp    ecx,edi
  40999c:	in     eax,dx
  40999d:	cmp    edx,DWORD PTR [esi]
  40999f:	push   ecx
  4099a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a1:	add    eax,0x6505fc18
  4099a6:	add    al,0xca
  4099a8:	xlat   BYTE PTR ds:[ebx]
  4099a9:	xor    ch,BYTE PTR [eax-0x76e9ef4]
  4099af:	lds    ecx,FWORD PTR [edi]
  4099b1:	fisttp DWORD PTR [ecx]
  4099b3:	or     al,0xc0
  4099b5:	in     al,0x39
  4099b7:	mov    fs,WORD PTR [ebp-0x16]
  4099ba:	sub    ecx,DWORD PTR [edx+0x4d83371c]
  4099c0:	push   ss
  4099c1:	ins    BYTE PTR es:[edi],dx
  4099c2:	fstp   TBYTE PTR [ecx]
  4099c4:	hlt    
  4099c5:	push   ebx
  4099c6:	jecxz  0x40996d
  4099c8:	inc    ebx
  4099c9:	(bad)  [esp+eax*4-0x53bc6dd1]
  4099d0:	sbb    ecx,ebp
  4099d2:	in     al,dx
  4099d3:	push   ebp
  4099d4:	xor    al,BYTE PTR [ecx+0x39]
  4099d7:	mov    gs,WORD PTR [edx-0x62]
  4099da:	stos   DWORD PTR es:[edi],eax
  4099db:	and    BYTE PTR [ebx+0x80ef09a],bh
  4099e1:	add    al,0x49
  4099e3:	addr16 jmp 0x4099b1
  4099e6:	adc    ch,BYTE PTR [ecx+0x13cfb9c0]
  4099ec:	xchg   edx,eax
  4099ed:	ins    DWORD PTR es:[edi],dx
  4099ee:	neg    DWORD PTR [esi]
  4099f0:	leave  
  4099f1:	and    al,0x2d
  4099f3:	mov    ah,BYTE PTR [eax*2+0x117f0574]
  4099fa:	idiv   DWORD PTR ds:0xba730b0d
  409a00:	dec    eax
  409a01:	add    BYTE PTR [ecx],0xae
  409a04:	push   ds
  409a05:	adc    DWORD PTR [ecx],0xe61497b1
  409a0b:	mov    esi,0xde698abd
  409a10:	push   esi
  409a11:	inc    eax
  409a12:	test   ecx,0x5130f787
  409a18:	ret    
  409a19:	mov    edi,0x41ea9f13
  409a1e:	(bad)  
  409a20:	xchg   edx,eax
  409a21:	push   0xc2c783ab
  409a26:	adc    eax,0x53c96ab5
  409a2b:	dec    edi
  409a2c:	jle    0x409a06
  409a2e:	add    DWORD PTR [eax+0x31f20d96],esp
  409a34:	rol    BYTE PTR [edx-0x1efd8f99],cl
  409a3a:	call   0x376f:0x54b0e823
  409a41:	dec    ebx
  409a42:	lea    edi,[ecx-0x51]
  409a45:	jmp    0x8c8b:0x46ec356d
  409a4c:	dec    esp
  409a4d:	fdiv   QWORD PTR ds:0x8d313327
  409a53:	sub    dh,bl
  409a55:	bnd ja 0x409a21
  409a58:	lods   al,BYTE PTR ds:[esi]
  409a59:	in     al,0x82
  409a5b:	jmp    0xdc94f0b5
  409a60:	mov    ds:0xe14e1e63,eax
  409a65:	(bad)  
  409a66:	sub    al,0x12
  409a68:	xor    eax,0xc4b866a
  409a6d:	repnz mov edi,DWORD PTR [ebp+esi*1+0xb]
  409a72:	push   cs
  409a73:	and    eax,DWORD PTR [eax+0x33820b8d]
  409a79:	loopne 0x409aa6
  409a7b:	in     eax,0x95
  409a7d:	dec    esp
  409a7e:	adc    BYTE PTR [esi-0x39],bh
  409a81:	jmp    0xb17c:0x69e1c786
  409a88:	stc    
  409a89:	add    ch,dl
  409a8b:	xchg   ebp,eax
  409a8c:	into   
  409a8d:	cmp    eax,0x5e1df7b9
  409a92:	outs   dx,BYTE PTR ds:[esi]
  409a93:	scas   al,BYTE PTR es:[edi]
  409a94:	lods   eax,DWORD PTR ds:[esi]
  409a95:	lds    edx,FWORD PTR [esi]
  409a97:	mov    ah,0x29
  409a99:	mov    dl,0x9a
  409a9b:	pop    ecx
  409a9c:	dec    eax
  409a9d:	xchg   edi,eax
  409a9e:	sbb    BYTE PTR [ecx],bl
  409aa0:	mov    ebp,DWORD PTR [ecx]
  409aa2:	sbb    ebx,DWORD PTR [edi]
  409aa4:	push   edx
  409aa5:	push   ebx
  409aa6:	in     eax,dx
  409aa7:	and    BYTE PTR [edx-0x3cfdd532],cl
  409aad:	cmp    esp,DWORD PTR [ebx+0x6f381fd3]
  409ab3:	adc    BYTE PTR [edx-0xea0c3d9],ch
  409ab9:	in     eax,0xe0
  409abb:	xchg   ecx,eax
  409abc:	in     al,dx
  409abd:	shr    bh,0x11
  409ac0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ac2:	and    eax,0x1edc5a37
  409ac7:	gs mov ebx,0x265b8c41
  409acd:	xor    ebx,DWORD PTR [edi+0x1a]
  409ad0:	sahf   
  409ad1:	cmp    al,0x76
  409ad3:	call   0xe25a:0x131f04dc
  409ada:	popa   
  409adb:	push   esp
  409adc:	lods   eax,DWORD PTR ds:[esi]
  409add:	mov    bl,0x1
  409adf:	popf   
  409ae0:	aas    
  409ae1:	add    ebx,DWORD PTR [edx]
  409ae3:	add    eax,DWORD PTR [eax]
  409ae5:	lods   eax,DWORD PTR ds:[esi]
  409ae6:	inc    ecx
  409ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ae8:	xchg   DWORD PTR [esi+0x75],eax
  409aeb:	and    eax,0x923cbc57
  409af0:	jle    0x409ac4
  409af2:	out    0xb3,eax
  409af4:	dec    ecx
  409af5:	sub    eax,0xe947f04
  409afa:	iret   
  409afb:	scas   eax,DWORD PTR es:[edi]
  409afc:	push   esp
  409afd:	or     BYTE PTR [ecx+0x28],bl
  409b00:	sbb    DWORD PTR [eax+0x4b],esp
  409b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b05:	jne    0x409ae9
  409b07:	adc    eax,0x6017f575
  409b0c:	mov    ah,0x42
  409b0e:	push   0x4bfc4936
  409b13:	fiadd  DWORD PTR gs:[ebp-0x73e06b6c]
  409b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b1c:	add    ecx,eax
  409b1e:	inc    ebp
  409b1f:	push   es
  409b20:	and    ebp,DWORD PTR [esi+0x65]
  409b23:	sbb    eax,0xf5561739
  409b28:	sbb    BYTE PTR [ebp-0x74212cd9],dh
  409b2e:	xor    al,0x4
  409b30:	and    edx,DWORD PTR [esi-0x39]
  409b33:	mov    dh,0x4c
  409b35:	(bad)  
  409b36:	aad    0xff
  409b38:	iret   
  409b39:	inc    esi
  409b3a:	int3   
  409b3b:	jno    0x409b9d
  409b3d:	lods   al,BYTE PTR ds:[esi]
  409b3e:	mov    eax,0xcbdaa94
  409b43:	pop    esi
  409b44:	ret    
  409b45:	std    
  409b46:	test   al,0xa1
  409b48:	inc    esp
  409b49:	mov    edx,0x54d4d595
  409b4e:	push   edx
  409b4f:	pop    ebx
  409b50:	cmp    eax,0x5356b81e
  409b55:	stos   DWORD PTR es:[edi],eax
  409b56:	xchg   esi,eax
  409b57:	mov    dh,0x7
  409b59:	es jge 0x409b0d
  409b5c:	push   ecx
  409b5d:	sar    ebx,cl
  409b5f:	push   ebp
  409b60:	mov    ebx,0xf43eb4f8
  409b65:	imul   ecx,DWORD PTR [edx],0xe9376bb4
  409b6b:	or     BYTE PTR [esi-0x1eef334e],bh
  409b71:	std    
  409b72:	popa   
  409b73:	fisub  WORD PTR [ecx]
  409b75:	pop    ds
  409b76:	(bad)  
  409b77:	repz pusha 
  409b79:	lock adc BYTE PTR [edi],bh
  409b7c:	loope  0x409bd0
  409b7e:	(bad)  
  409b7f:	fisub  WORD PTR [edx+0x61c305d]
  409b85:	stos   BYTE PTR es:[edi],al
  409b86:	xchg   DWORD PTR [eax],esi
  409b88:	imul   esp,DWORD PTR [esi+0x4e],0xe1896460
  409b8f:	in     eax,dx
  409b90:	mov    bl,0x55
  409b92:	dec    ebp
  409b93:	xor    eax,0xca00ae80
  409b98:	aaa    
  409b99:	stos   BYTE PTR es:[edi],al
  409b9a:	fs pop edi
  409b9c:	pop    edi
  409b9d:	mov    edx,0x70a77a25
  409ba2:	and    eax,0x39502ed
  409ba7:	dec    ecx
  409ba8:	xor    DWORD PTR [esi],0xd24696de
  409bae:	lods   al,BYTE PTR ds:[esi]
  409baf:	mov    al,ds:0xcffaec0f
  409bb4:	in     al,dx
  409bb5:	int3   
  409bb6:	sub    al,0xb5
  409bb8:	ror    BYTE PTR [ecx+0x3e14c87],0x4a
  409bbf:	pop    edi
  409bc0:	xchg   esp,eax
  409bc1:	adc    BYTE PTR [edx-0x9],bl
  409bc4:	int    0x85
  409bc6:	mov    ds:0xc926cbad,eax
  409bcb:	mov    ah,BYTE PTR [esi+0x32]
  409bce:	dec    ebp
  409bcf:	sbb    eax,0x652c6d22
  409bd4:	push   edx
  409bd5:	outs   dx,DWORD PTR ds:[esi]
  409bd6:	fisub  WORD PTR [ebx-0x29360200]
  409bdc:	cli    
  409bdd:	sub    dh,BYTE PTR [ebp-0x57]
  409be0:	clc    
  409be1:	xchg   edi,eax
  409be2:	cmp    ebx,DWORD PTR [edx]
  409be4:	std    
  409be5:	in     eax,0x5a
  409be7:	xchg   esp,eax
  409be8:	or     eax,0x45a77cf7
  409bed:	test   BYTE PTR [esi+0x14e386a4],0x51
  409bf4:	xchg   ecx,eax
  409bf5:	scas   eax,DWORD PTR es:[edi]
  409bf6:	add    eax,0xc345ed81
  409bfb:	jo     0x409b84
  409bfd:	pop    esi
  409bfe:	repnz out dx,al
  409c00:	aas    
  409c01:	rcl    DWORD PTR [eax+0x2211a8aa],0xb7
  409c08:	fdivr  DWORD PTR [esi]
  409c0a:	or     BYTE PTR [eax],0xad
  409c0d:	jno    0x409c8a
  409c0f:	js     0x409c89
  409c11:	xchg   esi,eax
  409c12:	jecxz  0x409c40
  409c14:	and    ah,ch
  409c16:	or     ah,bl
  409c18:	mov    dh,0x27
  409c1a:	hlt    
  409c1b:	test   DWORD PTR [ebx-0x1cb3c589],edi
  409c21:	fild   WORD PTR [eax-0xd84ec72]
  409c27:	pop    edi
  409c28:	iret   
  409c29:	bound  edx,QWORD PTR [eax]
  409c2b:	popa   
  409c2c:	ror    BYTE PTR [edx-0x94c685f],cl
  409c32:	mov    bl,0x5c
  409c34:	je     0x409bf6
  409c36:	retf   
  409c37:	sbb    ecx,DWORD PTR [edx]
  409c39:	loope  0x409cb9
  409c3b:	add    BYTE PTR [edi+0x1a],dh
  409c3e:	jge    0x409c94
  409c40:	dec    edi
  409c41:	mov    bl,0x5c
  409c43:	mov    ebx,0x183f63a
  409c48:	sbb    DWORD PTR [ebx+0x7d],esi
  409c4b:	sbb    BYTE PTR [edx+ebx*4+0x1d680645],dl
  409c52:	jle    0x409c73
  409c54:	daa    
  409c55:	test   al,0x3f
  409c57:	pop    eax
  409c58:	adc    DWORD PTR [ebx+0x6d],esp
  409c5b:	pop    eax
  409c5c:	ss push edx
  409c5e:	xchg   ebp,eax
  409c5f:	dec    esp
  409c60:	jle    0x409c4b
  409c62:	add    eax,0xaab88986
  409c67:	ret    0xb800
  409c6a:	rol    BYTE PTR [edi],1
  409c6c:	rcr    ah,cl
  409c6e:	add    eax,0xbc2c84c9
  409c73:	retf   0x2a3a
  409c76:	daa    
  409c77:	add    bh,BYTE PTR [bp+si+0x4e]
  409c7b:	popa   
  409c7c:	mov    ds:0x5568b514,eax
  409c81:	inc    ebp
  409c82:	push   ebx
  409c83:	inc    ebx
  409c84:	in     eax,0xd1
  409c86:	or     eax,0x89e1441a
  409c8b:	das    
  409c8c:	popf   
  409c8d:	das    
  409c8e:	mov    edx,0x8c9c7dc9
  409c93:	sahf   
  409c94:	pop    edx
  409c95:	sbb    al,0x61
  409c97:	in     al,dx
  409c98:	and    esi,DWORD PTR [ebx-0x54]
  409c9b:	hlt    
  409c9c:	out    dx,al
  409c9d:	fst    st(5)
  409c9f:	call   0x7ec0:0xc402c443
  409ca6:	mov    esp,?
  409ca8:	out    0xde,al
  409caa:	mov    ebx,0xc40a8497
  409caf:	popa   
  409cb0:	jae    0x409c95
  409cb2:	mov    bh,cl
  409cb4:	sbb    eax,DWORD PTR [ecx-0x73]
  409cb7:	rol    dl,0xcb
  409cba:	lahf   
  409cbb:	cs fs jns 0x409ca0
  409cbf:	inc    ebp
  409cc0:	mov    ebp,0x3eb42adc
  409cc5:	mov    bh,0xf8
  409cc7:	push   esi
  409cc8:	ds retf 
  409cca:	lea    esp,[esp+esi*2+0x29a4403a]
  409cd1:	in     al,dx
  409cd2:	xor    cl,BYTE PTR [esi]
  409cd4:	inc    eax
  409cd5:	push   edx
  409cd6:	push   edx
  409cd7:	shl    bl,0x66
  409cda:	icebp  
  409cdb:	stos   DWORD PTR es:[edi],eax
  409cdc:	sbb    cl,BYTE PTR [esi-0x73]
  409cdf:	pop    es
  409ce0:	lods   al,BYTE PTR ds:[esi]
  409ce1:	aam    0xec
  409ce3:	push   ebp
  409ce4:	ret    
  409ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ce6:	sub    BYTE PTR [edx+edx*1],ah
  409ce9:	jne    0x409d17
  409ceb:	jle    0x409c96
  409ced:	adc    al,0x17
  409cef:	add    DWORD PTR [esi-0x6ce4ff13],eax
  409cf5:	cmp    edi,DWORD PTR [edx+0x30e2d84b]
  409cfb:	sbb    DWORD PTR [edx+esi*8+0x638a81ad],esi
  409d02:	push   esi
  409d03:	mov    al,ds:0x58da48de
  409d08:	je     0x409d03
  409d0a:	(bad)  
  409d0c:	pop    esp
  409d0d:	push   ecx
  409d0e:	pop    esi
  409d0f:	adc    DWORD PTR [edi-0x26],eax
  409d12:	dec    eax
  409d13:	pushf  
  409d14:	in     al,0x5a
  409d16:	out    dx,eax
  409d17:	add    al,0x0
  409d19:	jb     0x409cf8
  409d1b:	(bad)  
  409d1c:	fadd   DWORD PTR [ebp-0x35]
  409d1f:	add    DWORD PTR [ecx+0x61ea4d8],edx
  409d25:	pop    ebx
  409d26:	push   ds
  409d27:	push   ss
  409d28:	cmp    DWORD PTR [edi+0x29],edx
  409d2b:	lds    edx,FWORD PTR [edx]
  409d2d:	jge    0x409d88
  409d2f:	(bad)  
  409d30:	pop    edi
  409d31:	or     ebp,DWORD PTR [ebx]
  409d33:	cwde   
  409d34:	xchg   esp,eax
  409d35:	cmp    BYTE PTR [edi-0x31],al
  409d38:	packssdw mm2,QWORD PTR [eax]
  409d3b:	and    BYTE PTR [ecx+0x2fbcdbf8],dl
  409d41:	mov    al,ds:0xb40414a7
  409d46:	in     eax,0x75
  409d48:	nop
  409d49:	jp     0x409d55
  409d4b:	out    dx,al
  409d4c:	ret    
  409d4d:	nop
  409d4e:	mov    dl,0xc3
  409d50:	sbb    eax,0x619952ef
  409d55:	pop    ebx
  409d56:	xor    esp,DWORD PTR [ebx+0x314bf694]
  409d5c:	imul   bh
  409d5e:	repz dec eax
  409d60:	push   0x15
  409d62:	and    ch,BYTE PTR [eax+0x26ff7452]
  409d68:	sbb    BYTE PTR [edx],0x21
  409d6b:	push   edx
  409d6c:	sub    DWORD PTR [eax+0x54c79e4],eax
  409d72:	imul   BYTE PTR [eax]
  409d74:	(bad)
  409d7a:	pop    edi
  409d7b:	js     0x409d82
  409d7d:	push   ebp
  409d7e:	(bad)
  409d81:	fild   DWORD PTR [eax+0x1579cbbf]
  409d87:	sbb    al,0xfc
  409d89:	shl    DWORD PTR [ebx+ecx*8-0x7c],0x2
  409d8e:	or     eax,0xd6982457
  409d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d94:	xlat   BYTE PTR ds:[ebx]
  409d95:	inc    ebx
  409d96:	out    0x46,eax
  409d98:	je     0x409d4b
  409d9a:	add    edx,DWORD PTR [ebx+0x3e]
  409d9d:	stos   BYTE PTR es:[edi],al
  409d9e:	jp     0x409d5f
  409da0:	cmp    al,0x84
  409da2:	and    DWORD PTR [ebp-0x53],edi
  409da5:	push   ebx
  409da6:	xor    eax,DWORD PTR [esi+0x70]
  409da9:	dec    ecx
  409daa:	bound  ebx,QWORD PTR [esi-0x7c]
  409dad:	and    cl,BYTE PTR [ebp-0x6f]
  409db0:	mov    ds:0xe6f268e3,al
  409db5:	dec    edi
  409db6:	xchg   DWORD PTR [ebp-0x4c],ecx
  409db9:	xor    esp,DWORD PTR [edx+0x2dbd4c39]
  409dbf:	fadd   st,st(4)
  409dc1:	(bad)  
  409dc3:	repz fldcw WORD PTR [esi-0x48]
  409dc7:	mov    ch,0x16
  409dc9:	mov    ah,BYTE PTR [ecx+ebx*2]
  409dcc:	cdq    
  409dcd:	xor    esp,DWORD PTR [bp+di-0x2693]
  409dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd3:	xchg   ebx,eax
  409dd4:	xchg   ebp,eax
  409dd5:	or     bl,BYTE PTR [edx+0x1]
  409dd8:	mov    edx,0xabd2e1e6
  409ddd:	pop    edx
  409dde:	sbb    dh,BYTE PTR [edx+ecx*4+0x23]
  409de2:	inc    ecx
  409de3:	imul   edi,DWORD PTR [ebx],0xda59d850
  409de9:	dec    ebp
  409dea:	daa    
  409deb:	inc    esi
  409dec:	push   cs
  409ded:	cli    
  409dee:	dec    eax
  409def:	sbb    DWORD PTR es:[eax+0x18],ebp
  409df3:	pop    ebp
  409df4:	pop    esi
  409df5:	mov    edx,0x4fd389a8
  409dfa:	or     ch,bh
  409dfc:	aad    0xfc
  409dfe:	inc    edx
  409dff:	adc    eax,0xbb8dd4b0
  409e04:	pop    eax
  409e05:	in     eax,dx
  409e06:	xchg   edx,eax
  409e07:	mov    ebp,0x43a06c2f
  409e0c:	(bad)  
  409e0d:	adc    al,0xd3
  409e0f:	fisttp DWORD PTR [edx+0x24f8ff93]
  409e15:	sub    eax,0x3c8ea5f5
  409e1a:	shr    BYTE PTR [eax-0x6884f967],1
  409e20:	cmp    al,0x79
  409e22:	push   ebx
  409e23:	xlat   BYTE PTR ds:[ebx]
  409e24:	test   BYTE PTR [eax+0x53],ch
  409e27:	push   esp
  409e28:	inc    DWORD PTR [ebx-0x1b9fce6e]
  409e2e:	dec    edi
  409e2f:	push   esi
  409e30:	into   
  409e31:	xor    bh,al
  409e33:	push   es
  409e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e35:	fsubr  QWORD PTR [edi]
  409e37:	rol    DWORD PTR [ecx],cl
  409e39:	or     eax,0x6536e8ea
  409e3e:	jno    0x409e56
  409e40:	xor    dh,BYTE PTR [ebx+0x78]
  409e43:	call   0x591cde1b
  409e48:	fdiv   DWORD PTR [edi-0x12620194]
  409e4e:	aaa    
  409e4f:	jo     0x409e21
  409e51:	inc    ebx
  409e52:	and    BYTE PTR [esp+edx*2],0x16
  409e56:	or     eax,0xc3c1e3f0
  409e5b:	test   DWORD PTR [edx-0x37],0x88ed4428
  409e62:	in     al,dx
  409e63:	and    DWORD PTR ds:0x6d36b96e,esp
  409e69:	add    ch,BYTE PTR [eax-0x4a]
  409e6c:	js     0x409e11
  409e6e:	push   cs
  409e6f:	push   es
  409e70:	jecxz  0x409e75
  409e72:	sbb    bh,bl
  409e74:	jo     0x409ee2
  409e76:	sbb    eax,0xb7c23266
  409e7b:	ins    DWORD PTR es:[edi],dx
  409e7c:	xchg   esp,eax
  409e7d:	or     DWORD PTR [edi],0xa3241af7
  409e83:	or     al,0xf2
  409e85:	mov    eax,0x3970782f
  409e8a:	rcl    BYTE PTR [eax*4+0x34ef2901],1
  409e91:	and    dl,BYTE PTR [edx-0x24]
  409e94:	jge    0x409e7a
  409e96:	mov    WORD PTR [ebx+0x29],ss
  409e99:	popa   
  409e9a:	xchg   ebp,eax
  409e9b:	xor    BYTE PTR [edx],0x8e
  409e9e:	popa   
  409e9f:	das    
  409ea0:	xchg   ebx,eax
  409ea1:	dec    eax
  409ea2:	ins    BYTE PTR es:[edi],dx
  409ea3:	add    al,0xd1
  409ea5:	test   esp,ebp
  409ea7:	push   esp
  409ea8:	dec    ecx
  409ea9:	pop    ebp
  409eaa:	lods   al,BYTE PTR ds:[esi]
  409eab:	rcl    al,1
  409ead:	dec    esp
  409eae:	cmp    al,0x14
  409eb0:	or     eax,0x912058a6
  409eb5:	xchg   DWORD PTR [ecx+0x6f6d9f36],edx
  409ebb:	push   esp
  409ebc:	inc    ebx
  409ebd:	xchg   ebx,eax
  409ebe:	pop    edi
  409ebf:	and    al,0x13
  409ec1:	in     al,dx
  409ec2:	dec    ebp
  409ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec4:	pop    esp
  409ec5:	and    dh,BYTE PTR [edi+ebx*8+0x2f8980d6]
  409ecc:	hlt    
  409ecd:	lods   eax,DWORD PTR ds:[esi]
  409ece:	add    edi,edi
  409ed0:	push   0xd31000dd
  409ed5:	mov    dl,0xa8
  409ed7:	in     al,dx
  409ed8:	sub    al,0xd
  409eda:	adc    ebp,DWORD PTR [edx+ecx*2+0x7f4f377d]
  409ee1:	and    esp,DWORD PTR [ebx-0x4e]
  409ee4:	pop    esp
  409ee5:	imul   ebx,eax,0x4631021f
  409eeb:	xchg   ebp,eax
  409eed:	pop    edx
  409eee:	and    eax,0x67e042dc
  409ef3:	mov    ebx,0x2bad9d51
  409ef8:	fiadd  WORD PTR [eax+0x40]
  409efb:	test   al,0xfd
  409efd:	ins    DWORD PTR es:[edi],dx
  409efe:	push   eax
  409eff:	xor    DWORD PTR ds:[edi+0x4a6d208d],edx
  409f06:	xor    eax,0x10e50178
  409f0b:	repz shr DWORD PTR [esp+eax*8],1
  409f0f:	dec    ebx
  409f10:	sub    cl,ah
  409f12:	adc    DWORD PTR [eax],0xffffffd8
  409f15:	test   eax,0x4742ea88
  409f1a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  409f1c:	push   ebp
  409f1d:	sbb    BYTE PTR [edi],al
  409f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f20:	(bad)  
  409f21:	push   eax
  409f22:	push   ecx
  409f23:	fstp   QWORD PTR [eax+0x67]
  409f26:	clc    
  409f27:	mov    dh,0x49
  409f29:	cdq    
  409f2a:	mov    ds:0xe1cbfb13,eax
  409f2f:	fidivr WORD PTR [esp+ebx*8-0x6e0e9ad0]
  409f36:	add    al,0x8c
  409f38:	mov    ds:0x23773b77,al
  409f3d:	ss sbb al,0x77
  409f40:	fldcw  WORD PTR ds:0x83200b46
  409f46:	push   esp
  409f47:	pop    ebp
  409f48:	lods   eax,DWORD PTR ds:[esi]
  409f49:	jmp    0xd5aa:0xec1ee194
  409f50:	es int 0xf4
  409f53:	loopne 0x409f0b
  409f55:	xor    al,cl
  409f57:	push   0x495a9dc6
  409f5c:	jmp    0x26778f90
  409f61:	inc    edi
  409f62:	jmp    0x22517a18
  409f67:	(bad)
  409f6a:	shl    BYTE PTR [ebx],cl
  409f6c:	mov    ds:0xccaa942,eax
  409f71:	sub    al,0x52
  409f73:	adc    cl,BYTE PTR [ecx]
  409f75:	adc    BYTE PTR [ebp+0x4f],bh
  409f78:	out    dx,al
  409f79:	xor    dl,BYTE PTR [ecx]
  409f7b:	mov    ?,WORD PTR [edx+0x7]
  409f7e:	popf   
  409f7f:	(bad)  
  409f80:	push   DWORD PTR [esi-0x7a]
  409f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f84:	mov    al,0x0
  409f86:	sti    
  409f87:	inc    ecx
  409f88:	es sbb edi,0xd003ecaf
  409f8f:	mov    cl,0x13
  409f91:	cmp    BYTE PTR ds:[esi+0x56],dl
  409f95:	pop    ebx
  409f96:	xor    eax,0x381a13b8
  409f9b:	ret    
  409f9c:	addr16 js 0x409f50
  409f9f:	cmp    DWORD PTR [ebx],eax
  409fa1:	jno    0x409fe4
  409fa3:	ds dec edx
  409fa5:	inc    ebx
  409fa6:	cwde   
  409fa7:	mov    edx,0x4ee4346a
  409fac:	test   edi,eax
  409fae:	jmp    0x409f7a
  409fb0:	mov    eax,esp
  409fb2:	add    ah,al
  409fb4:	in     eax,dx
  409fb5:	inc    edx
  409fb6:	cmc    
  409fb7:	jp     0x409fc8
  409fb9:	jns    0x40a011
  409fbb:	pop    edi
  409fbc:	sub    edx,DWORD PTR [ebx]
  409fbe:	shl    BYTE PTR [esi+0x75],0x8f
  409fc2:	xchg   DWORD PTR [ecx-0x2e1ab3fb],esp
  409fc8:	adc    eax,eax
  409fca:	arpl   WORD PTR [edi+ebx*4],sp
  409fcd:	std    
  409fce:	fs push ebx
  409fd0:	out    0x9b,eax
  409fd2:	and    DWORD PTR [ecx],esi
  409fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd5:	sub    al,0x70
  409fd7:	add    BYTE PTR [eax+ecx*8-0x67f0dfcb],dh
  409fde:	jmp    0x555babfa
  409fe3:	mov    dh,0x6c
  409fe5:	add    ah,dl
  409fe7:	ret    
  409fe8:	xor    ebp,edx
  409fea:	push   0x1
  409fec:	iret   
  409fed:	xchg   ebp,eax
  409fee:	retf   0x5b50
  409ff1:	and    edx,DWORD PTR [edx]
  409ff3:	ins    BYTE PTR es:[edi],dx
  409ff4:	or     BYTE PTR [edx+0x4cf30b3b],dh
  409ffa:	push   ebp
  409ffb:	push   eax
  409ffc:	inc    esi
  409ffd:	pop    esp
  409ffe:	cwde   
  409fff:	push   ds
  40a000:	adc    esp,eax
  40a002:	fs mov esp,0xb295aad9
  40a008:	clc    
  40a009:	mov    dl,BYTE PTR [ecx+eiz*4]
  40a00c:	mov    al,ds:0x9c3fb3b3
  40a011:	mov    ebp,0x4ec863e2
  40a016:	xor    eax,0x1566b69e
  40a01b:	inc    edx
  40a01c:	pop    esi
  40a01d:	mov    ecx,0xc40958e8
  40a022:	sub    ah,BYTE PTR [ebx]
  40a024:	aas    
  40a025:	sbb    DWORD PTR [ebx],ecx
  40a027:	fucomp st(6)
  40a029:	mov    eax,0xa49bc265
  40a02e:	inc    ecx
  40a02f:	mov    bl,0xde
  40a031:	ja     0x409fcc
  40a033:	push   ecx
  40a034:	js     0x40a08d
  40a036:	xor    BYTE PTR [edi],ah
  40a038:	mov    ebx,0x3dd7b3eb
  40a03d:	push   esp
  40a03e:	pop    ss
  40a03f:	inc    edx
  40a040:	pushf  
  40a041:	adc    esp,eax
  40a043:	ret    0x9415
  40a046:	mov    dh,0xa1
  40a048:	mov    edx,0x5cacc5c0
  40a04d:	mov    bl,0xdb
  40a04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a050:	(bad)  
  40a052:	sahf   
  40a053:	and    BYTE PTR [eax],bh
  40a055:	add    al,0xaa
  40a057:	test   BYTE PTR [edx-0x1b06b7d1],cl
  40a05d:	lock mov edi,eax
  40a060:	xor    DWORD PTR [edi],esi
  40a062:	hlt    
  40a063:	rcr    cl,0xf9
  40a066:	mov    bl,0xbd
  40a068:	repz jp 0x40a0de
  40a06b:	add    DWORD PTR [esi+0x558aeba5],edx
  40a071:	outs   dx,BYTE PTR ds:[esi]
  40a072:	daa    
  40a073:	jle    0x40a03b
  40a075:	rcr    BYTE PTR [edx+0x7fe0bd00],cl
  40a07b:	rcl    BYTE PTR [edi+0x74fb3be8],cl
  40a081:	(bad)  
  40a082:	mov    bl,0x50
  40a084:	jl     0x40a014
  40a086:	lock jae 0x40a0ea
  40a089:	bound  edi,QWORD PTR [esi-0x6c]
  40a08c:	std    
  40a08d:	int    0x6f
  40a08f:	adc    DWORD PTR [ebp-0x26f5fa80],ebp
  40a095:	and    BYTE PTR [ebx-0x228971f7],bh
  40a09b:	and    al,0x0
  40a09d:	mov    ebp,0x2aab2cce
  40a0a2:	lea    ebx,[eax+0x70037bdd]
  40a0a8:	sub    al,0x5d
  40a0aa:	sti    
  40a0ab:	sbb    eax,0xa7f7cf38
  40a0b0:	inc    ebx
  40a0b1:	scas   al,BYTE PTR es:[edi]
  40a0b2:	and    DWORD PTR [esi+0x1d],ebp
  40a0b5:	adc    al,0xdf
  40a0b7:	sti    
  40a0b8:	je     0x40a075
  40a0ba:	mov    eax,ds:0x38be2c17
  40a0bf:	test   al,0xa7
  40a0c1:	pop    edi
  40a0c2:	test   eax,0xddb2482b
  40a0c7:	scas   eax,DWORD PTR es:[edi]
  40a0c8:	rcl    BYTE PTR [ebx],0x40
  40a0cb:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0cd:	repz icebp 
  40a0cf:	jbe    0x40a0ce
  40a0d1:	jge    0x40a138
  40a0d3:	into   
  40a0d4:	sub    BYTE PTR [edi-0x3992e79f],dl
  40a0da:	adc    dh,al
  40a0dc:	test   eax,0x2af3c1cd
  40a0e1:	call   FWORD PTR [eax]
  40a0e3:	push   ecx
  40a0e4:	xor    edi,DWORD PTR [edx]
  40a0e6:	sbb    eax,0xf23688b
  40a0eb:	jmp    0x1c42:0x6fcfd38f
  40a0f2:	mov    ss,WORD PTR [edi-0x21]
  40a0f5:	out    dx,al
  40a0f6:	mov    eax,0xcc63b701
  40a0fb:	(bad)
  40a0ff:	int3   
  40a100:	out    0x92,eax
  40a102:	test   eax,0x219af7fc
  40a107:	pop    ecx
  40a108:	out    dx,al
  40a109:	imul   esp,DWORD PTR [ebx-0x38],0x814cd07c
  40a110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a111:	dec    ecx
  40a112:	or     al,0xc8
  40a114:	adc    eax,0xa72f15d4
  40a119:	call   0x730e9a41
  40a11e:	repnz jecxz 0x40a15f
  40a121:	js     0x40a179
  40a123:	aaa    
  40a124:	mov    ebp,0x6ba862ed
  40a129:	and    al,0xeb
  40a12b:	pop    eax
  40a12c:	bound  esi,QWORD PTR [esi]
  40a12e:	mov    ch,0xe1
  40a130:	loop   0x40a102
  40a132:	imul   esi,DWORD PTR [ecx-0x75],0xfffffff9
  40a136:	inc    esp
  40a137:	push   cs
  40a138:	add    edx,eax
  40a13a:	pop    esp
  40a13b:	(bad)
  40a13e:	scas   eax,DWORD PTR es:[edi]
  40a13f:	jno    0x40a1a3
  40a141:	ja     0x40a195
  40a143:	test   eax,0xf7dc9428
  40a148:	out    0xe0,eax
  40a14a:	ds push edx
  40a14c:	lea    ebp,[eax-0x27]
  40a14f:	push   cs
  40a150:	out    dx,al
  40a151:	mov    ds,WORD PTR ds:0x320e6009
  40a157:	shr    BYTE PTR [edi-0x44327e1b],1
  40a15d:	(bad)  
  40a15e:	cmc    
  40a15f:	or     DWORD PTR [edi+0x56b8ba1d],eax
  40a165:	les    eax,FWORD PTR [ecx-0x2c65ec8e]
  40a16b:	or     BYTE PTR [edx+0x1c655e73],bh
  40a171:	subps  xmm3,xmm3
  40a174:	das    
  40a175:	cwde   
  40a176:	push   0x24fc03d
  40a17b:	adc    ch,bh
  40a17d:	sub    edx,DWORD PTR [ebp-0xb]
  40a180:	mov    al,ds:0xf4b85a17
  40a185:	jl     0x40a206
  40a187:	xor    ch,BYTE PTR [edi]
  40a189:	xor    DWORD PTR [ebp-0x6ffcdd32],0x9eddfed1
  40a193:	popf   
  40a194:	test   ch,cl
  40a196:	inc    ecx
  40a197:	adc    eax,0x52d69af6
  40a19c:	sahf   
  40a19d:	push   0xffffff93
  40a19f:	jae    0x40a13c
  40a1a1:	fsub   QWORD PTR [ecx-0x13da512c]
  40a1a7:	push   ebp
  40a1a8:	sub    DWORD PTR [eax+0x625bf979],ecx
  40a1ae:	jecxz  0x40a171
  40a1b0:	xchg   BYTE PTR [ebx],bl
  40a1b2:	ds mov esp,0x2163d6e5
  40a1b8:	cmp    BYTE PTR [edi+0x1c444d96],al
  40a1be:	jg     0x40a1c4
  40a1c0:	(bad)  
  40a1c2:	cs add eax,0x2a983ede
  40a1c8:	stos   DWORD PTR es:[edi],eax
  40a1c9:	retf   0xd1eb
  40a1cc:	push   esp
  40a1cd:	inc    edx
  40a1ce:	aas    
  40a1cf:	out    0xa5,al
  40a1d1:	bound  ebp,QWORD PTR [ecx-0x758a43b0]
  40a1d7:	in     al,0xb8
  40a1d9:	sbb    DWORD PTR [eax-0x2e],ebx
  40a1dc:	add    ebp,DWORD PTR [eax]
  40a1de:	retf   
  40a1df:	outs   dx,BYTE PTR ds:[esi]
  40a1e0:	daa    
  40a1e1:	cmp    cl,al
  40a1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1e4:	cmp    BYTE PTR [ecx-0x60],bl
  40a1e7:	out    dx,eax
  40a1e8:	xor    edi,esp
  40a1ea:	mov    BYTE PTR [esi],ch
  40a1ec:	iret   
  40a1ed:	bound  esp,QWORD PTR [esi+edx*2]
  40a1f0:	inc    esp
  40a1f1:	rcl    DWORD PTR [esi],cl
  40a1f3:	test   BYTE PTR [ecx+0x47c6bf83],0xe
  40a1fa:	dec    edi
  40a1fb:	clc    
  40a1fc:	imul   esi,esp,0x3
  40a1ff:	adc    BYTE PTR [esi],al
  40a201:	jge    0x40a1c7
  40a203:	mov    edi,0x5adf91ce
  40a208:	ins    BYTE PTR es:[edi],dx
  40a209:	ds gs (bad) 
  40a20c:	test   BYTE PTR [ebx-0x1afe71f8],0x4b
  40a213:	nop
  40a214:	xchg   ebp,eax
  40a215:	push   ecx
  40a216:	es enter 0x4469,0xb4
  40a21b:	pop    eax
  40a21c:	sahf   
  40a21d:	cwde   
  40a21e:	out    dx,eax
  40a21f:	dec    edi
  40a220:	mov    al,ds:0x35730785
  40a225:	mov    cl,0x30
  40a227:	sub    edi,DWORD PTR [edi-0x6468158b]
  40a22d:	retf   0xce5d
  40a230:	pop    edi
  40a231:	das    
  40a232:	in     eax,0xe1
  40a234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a235:	pop    ss
  40a236:	push   esp
  40a237:	jmp    0x3bc90981
  40a23c:	cwde   
  40a23d:	(bad)  
  40a23e:	mov    esi,0x6d0384a9
  40a243:	xor    edx,DWORD PTR [ebx+0x1725196e]
  40a249:	cmp    bh,cl
  40a24b:	sti    
  40a24c:	ds lock jbe 0x40a260
  40a250:	mov    dh,BYTE PTR ds:0x41bbf085
  40a256:	bound  edx,QWORD PTR [eax+0x58]
  40a259:	xor    ch,al
  40a25b:	arpl   WORD PTR [ebp-0x1f7019fe],sp
  40a261:	jg     0x40a273
  40a263:	mov    bl,0x5e
  40a265:	cld    
  40a266:	and    ebp,DWORD PTR [ebp-0x28]
  40a269:	push   ecx
  40a26a:	xor    esp,esp
  40a26c:	push   es
  40a26d:	(bad)  
  40a26e:	std    
  40a26f:	(bad)  
  40a270:	lods   eax,DWORD PTR ds:[esi]
  40a271:	inc    esi
  40a272:	repz xor eax,0x242aa510
  40a278:	jecxz  0x40a280
  40a27a:	call   DWORD PTR [ebx]
  40a27c:	adc    eax,0x1daa1c8
  40a281:	or     eax,0x6eb822be
  40a286:	push   esp
  40a287:	and    al,0xc1
  40a289:	xchg   ebp,eax
  40a28a:	hlt    
  40a28b:	push   esi
  40a28c:	xchg   DWORD PTR [ecx],esi
  40a28e:	loopne 0x40a2dd
  40a290:	hlt    
  40a291:	push   eax
  40a292:	(bad)  
  40a294:	out    0xa8,al
  40a296:	push   0xffffff9d
  40a298:	jns    0x40a2d2
  40a29a:	or     eax,0xde42a66c
  40a29f:	inc    ebp
  40a2a0:	dec    edi
  40a2a1:	repnz xchg ebp,eax
  40a2a3:	(bad)  
  40a2a4:	ins    DWORD PTR es:[edi],dx
  40a2a5:	cli    
  40a2a6:	lods   al,BYTE PTR ds:[esi]
  40a2a7:	xchg   edi,eax
  40a2a8:	cmc    
  40a2a9:	mov    BYTE PTR [esi],ch
  40a2ab:	outs   dx,BYTE PTR ds:[esi]
  40a2ac:	jecxz  0x40a237
  40a2ae:	je     0x40a23d
  40a2b0:	lock mov edx,0xcde35dda
  40a2b6:	scas   al,BYTE PTR es:[edi]
  40a2b7:	and    BYTE PTR [edx-0x6666388b],0x70
  40a2be:	leave  
  40a2bf:	sbb    esp,DWORD PTR ds:0xcb116edc
  40a2c5:	cmp    dl,ch
  40a2c7:	stos   BYTE PTR es:[edi],al
  40a2c8:	inc    esp
  40a2c9:	jg     0x40a2bb
  40a2cb:	inc    edi
  40a2cc:	je     0x40a2f7
  40a2ce:	xchg   esp,eax
  40a2cf:	iret   
  40a2d0:	(bad)  
  40a2d1:	lods   eax,DWORD PTR ds:[esi]
  40a2d2:	and    BYTE PTR [esi-0x525acfce],0xe7
  40a2d9:	add    ecx,DWORD PTR [esp+edi*1-0x12]
  40a2dd:	std    
  40a2de:	mov    al,0x87
  40a2e0:	pop    ss
  40a2e1:	xchg   esp,eax
  40a2e2:	push   0x1
  40a2e4:	or     esi,edi
  40a2e6:	jno    0x40a32f
  40a2e8:	xchg   edi,ebx
  40a2ea:	cli    
  40a2eb:	sbb    ah,bl
  40a2ed:	push   esp
  40a2ee:	js     0x40a2a1
  40a2f0:	(bad)  
  40a2f1:	aas    
  40a2f2:	enter  0x3044,0xb5
  40a2f6:	in     al,0xb6
  40a2f8:	cmc    
  40a2f9:	ins    DWORD PTR es:[edi],dx
  40a2fa:	sub    ebx,DWORD PTR [ebx-0x34]
  40a2fd:	cmp    BYTE PTR [ecx-0x72],dl
  40a300:	lahf   
  40a301:	test   BYTE PTR [edx-0x25e6c544],bh
  40a307:	adc    ch,cl
  40a309:	xor    ah,bh
  40a30b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a30c:	aas    
  40a30d:	inc    eax
  40a30e:	call   0xe034:0xaee4d2e4
  40a315:	stos   BYTE PTR es:[edi],al
  40a316:	xchg   edx,eax
  40a317:	ja     0x40a396
  40a319:	dec    esp
  40a31a:	div    BYTE PTR [edx+edx*1]
  40a31d:	mov    esi,0xd950f9d1
  40a322:	les    ecx,FWORD PTR [edi-0xab3b47e]
  40a328:	dec    DWORD PTR [esi]
  40a32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a32b:	leave  
  40a32c:	push   ecx
  40a32d:	sbb    DWORD PTR [ecx],0x8f99cfde
  40a333:	pop    esi
  40a334:	retf   
  40a335:	xchg   esi,eax
  40a336:	enter  0x6783,0x4f
  40a33a:	retf   
  40a33b:	(bad)  
  40a33c:	leave  
  40a33d:	scas   eax,DWORD PTR es:[edi]
  40a33e:	push   cs
  40a33f:	jnp    0x40a347
  40a341:	ins    BYTE PTR es:[edi],dx
  40a342:	or     DWORD PTR [ebp-0x7e7a020b],edi
  40a348:	aam    0xc8
  40a34a:	mov    esp,0xa50185e5
  40a34f:	les    ebp,FWORD PTR [ecx+eiz*4]
  40a352:	sbb    al,0x86
  40a354:	jae    0x40a364
  40a356:	add    edi,DWORD PTR [ecx-0x34]
  40a359:	cmc    
  40a35a:	(bad)  
  40a35b:	ret    0x441c
  40a35e:	sbb    DWORD PTR [ebx+0x94c2d30],0x21c96a7d
  40a368:	or     ch,dl
  40a36a:	jmp    0xebb0819f
  40a36f:	popa   
  40a370:	sbb    edx,DWORD PTR [ebx-0x1daa4ce0]
  40a376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a377:	xor    eax,0xfb3203b0
  40a37c:	xor    al,BYTE PTR [esi-0x1f]
  40a37f:	jmp    ebx
  40a381:	jp     0x40a315
  40a383:	outs   dx,DWORD PTR ds:[esi]
  40a384:	ret    0x2371
  40a387:	aaa    
  40a388:	shr    edi,1
  40a38a:	frstor [edi]
  40a38c:	inc    esi
  40a38d:	test   al,0x39
  40a38f:	and    DWORD PTR [eax+0x50],ebx
  40a392:	pop    eax
  40a394:	xor    esi,esp
  40a396:	(bad)  
  40a397:	jge    0x40a37d
  40a399:	cmp    ch,ah
  40a39b:	pop    DWORD PTR [ebx+ebp*1+0x66]
  40a39f:	push   0x4c1b8
  40a3a4:	ffree  st(2)
  40a3a6:	call   edx
  40a3a8:	cmp    al,0x53
  40a3aa:	inc    edx
  40a3ab:	jae    0x40a370
  40a3ad:	sbb    DWORD PTR [edx-0x1fa4e393],0xa
  40a3b4:	out    dx,al
  40a3b5:	mov    edi,0x6b50592c
  40a3ba:	sub    esi,DWORD PTR [ebx]
  40a3bc:	mov    al,ds:0x8c7a5cef
  40a3c1:	lds    esp,FWORD PTR [esi]
  40a3c3:	cmp    edx,edi
  40a3c5:	push   ecx
  40a3c6:	fucomi st,st(4)
  40a3c8:	ins    BYTE PTR es:[edi],dx
  40a3c9:	cmp    eax,0x2e5b4b7b
  40a3ce:	in     eax,0x29
  40a3d0:	fisub  WORD PTR [eax-0x6d]
  40a3d3:	sub    al,ch
  40a3d5:	sahf   
  40a3d6:	jnp    0x40a3fe
  40a3d8:	ds pop ebx
  40a3da:	add    al,0xde
  40a3dc:	stc    
  40a3dd:	cs jb  0x40a386
  40a3e0:	enter  0x87ae,0xf6
  40a3e4:	mov    ebx,0x2c19471f
  40a3e9:	pop    ecx
  40a3ea:	ja     0x40a43c
  40a3ec:	pusha  
  40a3ed:	push   edi
  40a3ee:	hlt    
  40a3ef:	js     0x40a391
  40a3f1:	icebp  
  40a3f2:	jmp    0x49a9:0xd6d15f91
  40a3f9:	mov    eax,ss
  40a3fb:	ins    DWORD PTR es:[edi],dx
  40a3fc:	fcom   QWORD PTR [ebx-0x2d]
  40a3ff:	pusha  
  40a400:	jo     0x40a44a
  40a402:	call   0x8589a55b
  40a407:	div    ah
  40a409:	cmp    eax,0x4e473744
  40a40e:	nop
  40a40f:	shr    DWORD PTR [esi+0x15],1
  40a412:	pop    edi
  40a413:	daa    
  40a414:	in     al,dx
  40a415:	cli    
  40a416:	lods   eax,DWORD PTR ds:[esi]
  40a417:	jmp    ecx
  40a419:	in     al,0x8e
  40a41b:	fistp  WORD PTR ds:0x87e4257
  40a421:	clc    
  40a422:	cdq    
  40a423:	push   eax
  40a424:	in     eax,0xdd
  40a426:	(bad)  
  40a427:	shl    BYTE PTR [ebx],cl
  40a429:	scas   al,BYTE PTR es:[edi]
  40a42a:	pop    ebp
  40a42b:	xchg   edx,eax
  40a42c:	cli    
  40a42d:	mov    DWORD PTR ds:0x47dc4822,ebx
  40a433:	add    DWORD PTR [eax],esp
  40a435:	ret    0x8829
  40a438:	mov    edx,0x3f6beb26
  40a43d:	dec    ebp
  40a43e:	fistp  WORD PTR [esi+0x1abd0718]
  40a444:	mov    bh,0x9
  40a446:	fldenv [ebx-0x69db45a3]
  40a44c:	pop    ebx
  40a44d:	stos   BYTE PTR es:[edi],al
  40a44e:	lahf   
  40a44f:	in     al,dx
  40a450:	popa   
  40a451:	or     al,0xda
  40a453:	leave  
  40a454:	stos   DWORD PTR es:[edi],eax
  40a455:	sub    bl,BYTE PTR [ecx]
  40a457:	cmp    bh,bh
  40a459:	not    BYTE PTR [edx+0x4b]
  40a45c:	adc    al,0x7b
  40a45e:	lods   eax,DWORD PTR ds:[esi]
  40a45f:	jl     0x40a47a
  40a461:	pop    ds
  40a462:	stos   BYTE PTR es:[edi],al
  40a463:	cmp    dh,BYTE PTR [ebp+0x6d7603dc]
  40a469:	popa   
  40a46a:	sbb    BYTE PTR ds:0x4b21c8ba,dl
  40a470:	loope  0x40a4b6
  40a472:	cmp    DWORD PTR [edx-0x62a9c238],ebx
  40a478:	push   edi
  40a479:	retf   0x6fdc
  40a47c:	add    bl,BYTE PTR [esi+0x39]
  40a47f:	out    0x91,eax
  40a481:	les    ebx,FWORD PTR ds:0xb7948de7
  40a487:	sbb    DWORD PTR [edi],edx
  40a489:	gs jno 0x40a4c9
  40a48c:	push   es
  40a48d:	loopne 0x40a415
  40a48f:	ins    BYTE PTR es:[edi],dx
  40a490:	mov    ah,0x6d
  40a492:	pop    ecx
  40a493:	mov    BYTE PTR [edx],0xf0
  40a496:	outs   dx,DWORD PTR ds:[esi]
  40a497:	mov    edi,DWORD PTR [edx-0x6e832d6b]
  40a49d:	shl    BYTE PTR [ebx-0x5defe13b],0xe4
  40a4a4:	adc    BYTE PTR [esi],bh
  40a4a6:	mov    eax,0xafc87e14
  40a4ab:	stc    
  40a4ac:	dec    BYTE PTR ds:[esi+0x77]
  40a4b0:	or     dl,dl
  40a4b2:	adc    ah,cl
  40a4b4:	lock mov edi,0xe1849094
  40a4ba:	bound  ebx,QWORD PTR [ecx+edi*4]
  40a4bd:	sbb    eax,ebx
  40a4bf:	pop    ebp
  40a4c0:	aad    0xad
  40a4c2:	sbb    DWORD PTR [ebx+0x7cf247a8],ecx
  40a4c8:	sub    DWORD PTR ds:0x45537d3a,edi
  40a4ce:	jle    0x40a463
  40a4d0:	jl     0x40a52d
  40a4d2:	lds    ecx,FWORD PTR [esi-0x33]
  40a4d5:	jbe    0x40a4b4
  40a4d7:	push   esp
  40a4d8:	ror    BYTE PTR [ebx],0x28
  40a4db:	enter  0xb0d0,0x91
  40a4df:	inc    eax
  40a4e0:	call   0x20989015
  40a4e5:	stos   DWORD PTR es:[edi],eax
  40a4e6:	outs   dx,DWORD PTR ds:[esi]
  40a4e7:	jge    0x40a4f2
  40a4e9:	mov    esp,0x7401edbc
  40a4ee:	mov    edi,0xe9ea9e32
  40a4f3:	pop    es
  40a4f4:	mov    ecx,0xf5f4398c
  40a4f9:	mov    ch,0x19
  40a4fb:	xor    eax,0x226316cc
  40a500:	in     al,dx
  40a501:	mov    ebp,0x80d83b6c
  40a506:	mov    esi,0xbd419749
  40a50b:	jecxz  0x40a54a
  40a50d:	lds    eax,FWORD PTR [edx-0x3abf3517]
  40a513:	ins    BYTE PTR es:[edi],dx
  40a514:	mov    ebp,gs
  40a516:	inc    eax
  40a517:	jge    0x40a51f
  40a519:	mov    dl,0x66
  40a51b:	pop    ecx
  40a51c:	sahf   
  40a51d:	mov    dl,BYTE PTR [esi+eiz*4+0x7c]
  40a521:	test   eax,0xac994a75
  40a526:	and    ecx,DWORD PTR [ebp+0x2bc707]
  40a52c:	rcr    ebx,0xe0
  40a52f:	leave  
  40a530:	test   al,0x64
  40a532:	push   es
  40a533:	xor    eax,DWORD PTR ds:[ebx-0x48]
  40a537:	cmp    al,0x17
  40a53a:	mov    al,ds:0x1cf7b0ee
  40a53f:	pusha  
  40a540:	out    0xd1,eax
  40a542:	cmp    eax,0xe66af067
  40a547:	push   ebx
  40a548:	pop    ebp
  40a549:	add    cl,BYTE PTR [ebx-0x33a3e7d4]
  40a54f:	es scas eax,DWORD PTR es:[edi]
  40a551:	mov    al,0x7c
  40a553:	ret    
  40a554:	nop
  40a555:	pop    es
  40a556:	out    dx,eax
  40a557:	pushf  
  40a558:	jae    0x40a539
  40a55a:	stos   DWORD PTR es:[edi],eax
  40a55b:	add    al,0x3
  40a55d:	loop   0x40a50e
  40a55f:	sahf   
  40a560:	test   cl,al
  40a562:	and    bl,bh
  40a564:	add    eax,0x465c6b75
  40a569:	mov    ecx,DWORD PTR [eax-0x1a]
  40a56c:	cwde   
  40a56d:	bound  ebp,QWORD PTR [ecx+esi*4-0x783da1b4]
  40a574:	sti    
  40a575:	outs   dx,DWORD PTR ds:[esi]
  40a576:	jl     0x40a5ea
  40a578:	and    ecx,ebp
  40a57a:	adc    eax,0x6d7437da
  40a57f:	and    BYTE PTR [ebp-0x9],al
  40a582:	jp     0x40a598
  40a584:	pop    esp
  40a585:	or     al,0xea
  40a587:	push   ss
  40a588:	mov    al,ds:0x522e4902
  40a58d:	xchg   ecx,eax
  40a58e:	and    BYTE PTR [edx-0x380757ac],ah
  40a594:	cld    
  40a595:	sahf   
  40a596:	and    bl,BYTE PTR [ebx]
  40a598:	sti    
  40a599:	out    0x3d,al
  40a59b:	int    0xc1
  40a59d:	pop    ecx
  40a59e:	add    bh,dl
  40a5a0:	or     eax,0x45c4858a
  40a5a5:	add    eax,0xed9535a9
  40a5aa:	xchg   esi,eax
  40a5ab:	fcmove st,st(5)
  40a5ad:	inc    esp
  40a5ae:	and    BYTE PTR [esp+edx*8-0x396da302],dh
  40a5b5:	ins    DWORD PTR es:[edi],dx
  40a5b6:	add    ah,dl
  40a5b8:	push   es
  40a5b9:	jmp    0x40a57f
  40a5bb:	outs   dx,DWORD PTR ds:[esi]
  40a5bc:	cmp    ah,BYTE PTR [ebx-0x58]
  40a5bf:	pop    DWORD PTR fs:[edx-0x39]
  40a5c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5c4:	aas    
  40a5c5:	cdq    
  40a5c6:	xchg   esi,eax
  40a5c7:	dec    esi
  40a5c8:	dec    ebp
  40a5c9:	cmp    eax,0x7c57ac30
  40a5ce:	loope  0x40a643
  40a5d0:	push   ebp
  40a5d1:	gs push edx
  40a5d3:	(bad)  
  40a5d4:	mov    dl,0x9a
  40a5d6:	repnz adc ecx,edx
  40a5d9:	sahf   
  40a5da:	cdq    
  40a5db:	push   esi
  40a5dc:	retf   0x578d
  40a5df:	mov    esp,0x7e444c25
  40a5e4:	mov    esp,0x6292d934
  40a5e9:	inc    ebx
  40a5ea:	mov    edi,ebp
  40a5ec:	jo     0x40a643
  40a5ee:	in     al,dx
  40a5ef:	test   al,0x5a
  40a5f1:	push   ss
  40a5f2:	mov    edx,0x6987c139
  40a5f7:	jae    0x40a5bf
  40a5f9:	and    al,dh
  40a5fb:	popf   
  40a5fc:	sub    BYTE PTR [edx-0x34],cl
  40a5ff:	add    BYTE PTR [edx-0x73f3a3d3],ch
  40a605:	sbb    dl,BYTE PTR [edi+edi*8-0x3]
  40a609:	popf   
  40a60a:	push   esp
  40a60b:	inc    edi
  40a60c:	test   eax,0x54da4656
  40a611:	jecxz  0x40a62f
  40a613:	nop
  40a614:	shl    BYTE PTR [ebx],1
  40a616:	push   edi
  40a617:	pop    ebp
  40a618:	lods   eax,DWORD PTR ds:[esi]
  40a619:	ret    
  40a61a:	imul   esp,DWORD PTR [edi+0x70],0x95277eb4
  40a621:	adc    dl,bl
  40a623:	call   0x8e10e8b9
  40a628:	push   cs
  40a629:	push   esp
  40a62a:	and    BYTE PTR [eax],bh
  40a62c:	pusha  
  40a62d:	in     al,0x37
  40a62f:	jbe    0x40a5de
  40a631:	push   edx
  40a632:	cdq    
  40a633:	into   
  40a634:	aas    
  40a635:	add    BYTE PTR [esi+esi*8],0x0
  40a639:	and    eax,0x8b7f5c5
  40a63e:	add    al,0x93
  40a640:	pop    ds
  40a641:	add    al,BYTE PTR [ecx]
  40a643:	xchg   edi,eax
  40a644:	dec    edi
  40a645:	push   edx
  40a646:	mov    bl,bl
  40a648:	popa   
  40a649:	popf   
  40a64a:	cld    
  40a64b:	or     eax,0xe46eb707
  40a650:	dec    esi
  40a651:	xchg   DWORD PTR [ecx+0xa],edx
  40a654:	push   es
  40a655:	xor    DWORD PTR [edx+0x73],0xe2402382
  40a65c:	or     DWORD PTR [eax-0x5b],edi
  40a65f:	test   edx,ecx
  40a661:	(bad)  
  40a662:	and    cl,BYTE PTR [esi+0x4e9948ae]
  40a668:	repz fidivr WORD PTR [ebx+0x64ba6933]
  40a66f:	push   0xce02c2e5
  40a674:	shr    DWORD PTR ds:0x2caeb45c,1
  40a67a:	mov    al,0xfc
  40a67c:	jne    0x40a6cc
  40a67e:	adc    edx,ecx
  40a680:	xor    eax,ecx
  40a682:	in     al,0xe8
  40a684:	mov    dl,0x84
  40a686:	outs   dx,BYTE PTR ds:[esi]
  40a687:	sahf   
  40a688:	xchg   esi,eax
  40a689:	leave  
  40a68a:	mov    dh,0x8e
  40a68c:	dec    BYTE PTR es:[eax+0x15]
  40a690:	aad    0x3d
  40a692:	cld    
  40a693:	or     ebp,DWORD PTR [ecx+edi*1]
  40a696:	std    
  40a697:	bound  edx,QWORD PTR [ebx]
  40a699:	push   edx
  40a69a:	bswap  esp
  40a69c:	mov    DWORD PTR ds:0x7bf10e4f,0x2f78f041
  40a6a6:	aas    
  40a6a7:	fdivrp st(6),st
  40a6a9:	mov    ah,0x41
  40a6ab:	push   edx
  40a6ac:	fild   WORD PTR [ebp+0x51]
  40a6af:	(bad)  
  40a6b0:	cld    
  40a6b1:	fnstcw WORD PTR [ecx-0x1932f5d]
  40a6b7:	fldcw  WORD PTR [ebp-0x23]
  40a6ba:	mov    ds:0x939c974f,eax
  40a6bf:	aam    0x9c
  40a6c1:	cmp    BYTE PTR [edx+0x26],ch
  40a6c4:	out    0xca,al
  40a6c6:	xchg   ebp,eax
  40a6c7:	xchg   edx,eax
  40a6c8:	rcr    DWORD PTR [ebp+ebx*4+0x46e5c02f],0x78
  40a6d0:	lods   al,BYTE PTR ds:[esi]
  40a6d1:	xchg   DWORD PTR [eax-0x19],eax
  40a6d4:	shl    BYTE PTR [edi],cl
  40a6d6:	shr    esi,1
  40a6d8:	mov    dl,0x39
  40a6da:	ficom  DWORD PTR [edx+0x2ce52364]
  40a6e0:	test   BYTE PTR [ebp+0x5b950522],dl
  40a6e6:	mov    bl,0x5c
  40a6e8:	sbb    DWORD PTR [ecx],ecx
  40a6ea:	clc    
  40a6eb:	lods   eax,DWORD PTR ds:[esi]
  40a6ec:	je     0x40a747
  40a6ee:	mov    al,ds:0x46a8c224
  40a6f3:	xor    ebx,edx
  40a6f5:	add    ah,dh
  40a6f7:	jmp    0xc503a126
  40a6fc:	push   ds
  40a6fd:	cwde   
  40a6fe:	sbb    ah,dl
  40a700:	sub    BYTE PTR ds:0x3f84a933,bl
  40a706:	div    DWORD PTR [esi+0x49]
  40a709:	pop    edx
  40a70a:	repz mov dh,0x3d
  40a70d:	xchg   BYTE PTR [eax+0x73],bl
  40a710:	pop    ecx
  40a711:	icebp  
  40a712:	fdiv   DWORD PTR [ecx+0x616fbdcf]
  40a718:	jno    0x40a70d
  40a71a:	adc    al,0x95
  40a71c:	xlat   BYTE PTR ds:[ebx]
  40a71d:	in     al,dx
  40a71e:	cmp    ecx,DWORD PTR [eax+0x21]
  40a721:	mov    BYTE PTR [edi+0x2f],bh
  40a724:	loope  0x40a72a
  40a726:	push   edi
  40a727:	jg     0x40a7a0
  40a729:	outs   dx,DWORD PTR ds:[esi]
  40a72a:	xor    dl,BYTE PTR [edi]
  40a72c:	or     al,0x3a
  40a72e:	sbb    dh,BYTE PTR [esi]
  40a730:	into   
  40a731:	jmp    0x4758ec08
  40a736:	cmp    ebx,0x39ef1533
  40a73c:	je     0x40a73b
  40a73e:	pop    edx
  40a73f:	pop    ds
  40a740:	mov    cl,0xe2
  40a742:	sub    al,0xa3
  40a744:	mov    dl,BYTE PTR [ebp-0x77]
  40a747:	cdq    
  40a748:	out    dx,eax
  40a749:	pop    esi
  40a74a:	das    
  40a74b:	xchg   ebp,eax
  40a74c:	xor    al,0xd9
  40a74e:	pop    ds
  40a74f:	cwde   
  40a750:	sbb    ch,cl
  40a752:	push   ebx
  40a753:	xor    BYTE PTR [esi+esi*4-0x53],dl
  40a757:	add    BYTE PTR [edx],0x69
  40a75a:	adc    DWORD PTR [esp+edi*4+0x24],edx
  40a75e:	or     BYTE PTR [ebp+0x8788948],ah
  40a764:	sub    BYTE PTR [edi-0x9f0328a],0x34
  40a76b:	(bad)  
  40a76c:	dec    esi
  40a76d:	xlat   BYTE PTR ds:[ebx]
  40a76e:	(bad)  
  40a76f:	and    eax,0xe81b3b76
  40a774:	push   0xffffffc7
  40a776:	test   eax,0x1a879ab8
  40a77b:	add    eax,0x4743556a
  40a780:	into   
  40a781:	push   ebp
  40a782:	(bad)  
  40a783:	lock cmp al,0xcb
  40a786:	out    0xf3,eax
  40a788:	arpl   bp,dx
  40a78a:	lods   al,BYTE PTR ds:[esi]
  40a78b:	push   0x5481a698
  40a790:	jnp    0x40a75b
  40a792:	jno    0x40a7c4
  40a794:	pop    edx
  40a795:	or     BYTE PTR [edx],dl
  40a797:	or     bl,BYTE PTR [edi+0x25]
  40a79a:	jmp    0x40a75b
  40a79c:	enter  0xa386,0x40
  40a7a0:	xchg   esi,eax
  40a7a1:	das    
  40a7a2:	jmp    0x40a7f3
  40a7a4:	sub    DWORD PTR [ecx+0x14d273a0],edx
  40a7aa:	jg     0x40a7eb
  40a7ac:	imul   ecx,DWORD PTR [edx],0x7cbb5223
  40a7b2:	shr    DWORD PTR [eax-0x78c84ea2],cl
  40a7b8:	ss sbb eax,0x4def7d8d
  40a7be:	pop    edx
  40a7bf:	push   edx
  40a7c0:	pop    ecx
  40a7c2:	push   DWORD PTR [eax+0x6a]
  40a7c5:	jnp    0x40a7d5
  40a7c7:	popf   
  40a7c8:	push   ss
  40a7c9:	adc    eax,0x24c4cac6
  40a7ce:	cwde   
  40a7cf:	ds jecxz 0x40a794
  40a7d2:	xor    ecx,DWORD PTR [ebx-0x6bf28ba8]
  40a7d8:	pop    ecx
  40a7d9:	fild   DWORD PTR [esi+0x1c097c38]
  40a7df:	mov    edi,0x4b2a144f
  40a7e4:	bound  ecx,QWORD PTR [esi-0x4d]
  40a7e7:	stos   BYTE PTR es:[edi],al
  40a7e8:	mov    ds:0x5fd2aaf1,eax
  40a7ed:	aam    0x4d
  40a7ef:	mov    edx,DWORD PTR [ebp-0x130a669d]
  40a7f5:	ror    DWORD PTR [edi-0x22],1
  40a7f8:	mov    eax,ds:0xeb4e93a0
  40a7fd:	add    ecx,DWORD PTR [eax]
  40a7ff:	adc    esp,ebp
  40a801:	je     0x40a7c6
  40a803:	jno    0x40a7b1
  40a805:	jb     0x40a85c
  40a807:	jbe    0x40a841
  40a809:	jnp    0x40a843
  40a80b:	aas    
  40a80c:	mov    ds:0x9cb95fc4,eax
  40a811:	mov    ebp,edx
  40a813:	in     al,0x4e
  40a815:	ror    BYTE PTR [edi+0x4dd5876c],0xb0
  40a81c:	pusha  
  40a81d:	dec    ebp
  40a81e:	out    dx,eax
  40a81f:	je     0x40a861
  40a821:	repnz xchg esi,ecx
  40a824:	push   edi
  40a825:	add    BYTE PTR ds:0x17a70440,dh
  40a82b:	std    
  40a82c:	ffreep st(5)
  40a82e:	pop    edi
  40a82f:	pop    ss
  40a830:	sbb    eax,0x1aebbf28
  40a835:	adc    eax,0xd9b2096f
  40a83a:	popa   
  40a83b:	cmc    
  40a83c:	add    ch,BYTE PTR [eax-0x5b]
  40a83f:	cmp    eax,0x864d5bf3
  40a844:	push   0x6c6d5159
  40a849:	rcr    BYTE PTR [esi],cl
  40a84b:	sar    BYTE PTR ds:0x5887eda7,cl
  40a851:	xchg   ecx,eax
  40a852:	loopne 0x40a7f7
  40a854:	push   edi
  40a855:	bound  eax,QWORD PTR [eax-0x51]
  40a858:	xor    ah,BYTE PTR [edi-0x724ffd63]
  40a85e:	xchg   esi,eax
  40a85f:	mov    ecx,DWORD PTR [ecx+0x4022ea56]
  40a865:	cmp    ah,BYTE PTR [edx-0x77]
  40a868:	out    dx,al
  40a869:	pusha  
  40a86a:	push   edi
  40a86b:	mov    al,bl
  40a86d:	add    BYTE PTR [ecx-0x5c],0xd8
  40a871:	jno    0x40a853
  40a873:	pushf  
  40a874:	out    dx,al
  40a875:	popa   
  40a876:	sbb    eax,0x8d688ede
  40a87b:	nop
  40a87c:	nop
  40a87d:	push   ebp
  40a87e:	es aaa 
  40a880:	adc    eax,DWORD PTR [edx]
  40a882:	lods   eax,DWORD PTR ds:[esi]
  40a883:	jmp    0x40a880
  40a885:	pop    edx
  40a886:	stos   DWORD PTR es:[edi],eax
  40a887:	iret   
  40a888:	push   0x7d
  40a88a:	mov    eax,DWORD PTR [esi+0x5b]
  40a88d:	xor    cl,BYTE PTR [edi+0x5b]
  40a890:	xchg   ecx,eax
  40a891:	fdiv   st(0),st
  40a893:	inc    eax
  40a894:	xlat   BYTE PTR ds:[ebx]
  40a895:	pop    edx
  40a896:	fcom   QWORD PTR [esi+0x57]
  40a899:	push   0xffffffcc
  40a89b:	cmp    al,0x9
  40a89d:	dec    ebp
  40a89e:	scas   eax,DWORD PTR es:[edi]
  40a89f:	lods   al,BYTE PTR ds:[esi]
  40a8a0:	call   0x8b867898
  40a8a5:	inc    esp
  40a8a6:	adc    dh,bl
  40a8a8:	jo     0x40a917
  40a8aa:	jg     0x40a91d
  40a8ac:	mov    al,0xdf
  40a8ae:	adc    dh,BYTE PTR [edx]
  40a8b0:	pop    ecx
  40a8b1:	arpl   WORD PTR [ebp+0x7d7bc489],sp
  40a8b7:	or     eax,0x5105c3b8
  40a8bc:	mov    edx,0xe9985ba6
  40a8c1:	out    0x11,al
  40a8c3:	clc    
  40a8c4:	leave  
  40a8c5:	pop    ss
  40a8c6:	mov    ebx,0x9128faae
  40a8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8cc:	mov    ah,0x5e
  40a8ce:	lds    ebp,FWORD PTR [edi+0x59]
  40a8d1:	pop    ds
  40a8d2:	mov    edi,0x1781d901
  40a8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8d8:	int3   
  40a8d9:	and    DWORD PTR [eax-0x66f4e43],edi
  40a8df:	dec    ecx
  40a8e0:	repnz cld 
  40a8e2:	cwde   
  40a8e3:	xor    al,0x5e
  40a8e5:	or     cl,bh
  40a8e7:	or     BYTE PTR [ecx],ah
  40a8e9:	jns    0x40a967
  40a8eb:	sar    BYTE PTR [ecx+0x3f],cl
  40a8ee:	pop    eax
  40a8ef:	lahf   
  40a8f0:	and    bh,dl
  40a8f2:	sbb    BYTE PTR [ebp-0x4f],0xe1
  40a8f6:	inc    eax
  40a8f7:	shl    bh,0x3
  40a8fa:	dec    cx
  40a8fc:	mov    al,ds:0xc5e0a773
  40a901:	cmp    DWORD PTR [ecx+eax*1-0x51713d2e],esi
  40a908:	sub    BYTE PTR ds:0xfa3fae6d,ah
  40a90e:	push   ss
  40a90f:	inc    ebx
  40a910:	jne    0x40a98c
  40a912:	scas   eax,DWORD PTR es:[edi]
  40a913:	je     0x40a8c0
  40a915:	mov    bl,BYTE PTR gs:[ebx-0x73]
  40a919:	retf   
  40a91a:	add    dh,BYTE PTR [ecx-0x3600007b]
  40a920:	sbb    BYTE PTR [eax+0x4f],al
  40a923:	push   ecx
  40a924:	mov    ds,eax
  40a926:	nop
  40a927:	ins    BYTE PTR es:[edi],dx
  40a928:	inc    edx
  40a929:	loope  0x40a948
  40a92b:	or     ecx,ebx
  40a92d:	mov    esi,0xdd0ba6a0
  40a932:	les    esi,FWORD PTR [edx+0x7469aadd]
  40a938:	dec    ecx
  40a939:	cmp    eax,0x9970e138
  40a93e:	imul   eax,ebp,0xe369b99d
  40a944:	fdiv   QWORD PTR [esi]
  40a946:	imul   esi,DWORD PTR [edi-0x5b],0x46dceb8c
  40a94d:	push   edi
  40a94e:	jmp    0x40a92f
  40a950:	sub    dh,dl
  40a952:	fild   WORD PTR [esi+0x16]
  40a955:	into   
  40a956:	jae    0x7d032695
  40a95c:	enter  0xb7e,0xab
  40a960:	jne    0x40a94f
  40a962:	mov    eax,0x727db588
  40a967:	lahf   
  40a968:	push   ebp
  40a969:	dec    edx
  40a96a:	adc    dl,BYTE PTR [ebp-0xc]
  40a96d:	aad    0xf1
  40a96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a970:	dec    DWORD PTR [esi-0x27]
  40a973:	dec    esi
  40a974:	add    edi,ebp
  40a976:	sbb    BYTE PTR [esi],dl
  40a978:	sar    DWORD PTR [ecx+0x28681598],0x9
  40a97f:	push   0x41
  40a981:	arpl   WORD PTR ss:[eax-0x3095511a],sp
  40a988:	mov    al,0x81
  40a98a:	jae    0x40a9fe
  40a98c:	sub    BYTE PTR [ebx+0x1a],dl
  40a98f:	out    0x47,eax
  40a991:	cli    
  40a992:	test   dl,cl
  40a994:	dec    esp
  40a995:	pop    ds
  40a996:	jp     0x40a94d
  40a998:	into   
  40a999:	cmp    BYTE PTR ds:0x19c93b3b,0x3d
  40a9a0:	out    0x1f,eax
  40a9a2:	or     al,0x62
  40a9a4:	xchg   ebx,eax
  40a9a5:	leave  
  40a9a6:	rcl    DWORD PTR [esi],cl
  40a9a8:	add    bl,BYTE PTR [edx+0x4f]
  40a9ab:	ficom  DWORD PTR [edi-0x5e6cf348]
  40a9b1:	mov    bl,0xf0
  40a9b3:	mov    dl,0x5e
  40a9b5:	lahf   
  40a9b6:	mov    ebp,DWORD PTR [eax]
  40a9b8:	jg     0x40a9df
  40a9ba:	or     DWORD PTR [eax-0x444729c8],edi
  40a9c0:	mov    bl,0x8d
  40a9c2:	xor    DWORD PTR [ecx+eax*4],edx
  40a9c5:	shr    ebx,0x56
  40a9c8:	int    0x53
  40a9ca:	push   esp
  40a9cb:	lahf   
  40a9cc:	ins    BYTE PTR es:[edi],dx
  40a9cd:	aad    0x17
  40a9cf:	(bad)  
  40a9d0:	jne    0x40a9ad
  40a9d2:	inc    esp
  40a9d3:	or     al,0x8a
  40a9d5:	dec    ecx
  40a9d6:	add    BYTE PTR [ebp-0x7885f75e],bh
  40a9dc:	dec    edi
  40a9de:	aam    0xff
  40a9e0:	xor    eax,0x4d6aa38f
  40a9e5:	inc    esi
  40a9e6:	push   es
  40a9e7:	jl     0x40a977
  40a9e9:	aam    0x7d
  40a9eb:	inc    eax
  40a9ec:	(bad)  
  40a9ed:	outs   dx,DWORD PTR ds:[esi]
  40a9ee:	inc    ecx
  40a9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f0:	iret   
  40a9f1:	push   eax
  40a9f2:	mov    ds:0xdb2c8734,eax
  40a9f7:	and    DWORD PTR [eax-0x6225e3b8],esp
  40a9fd:	sub    ecx,DWORD PTR ss:[esi+0x1e4a607]
  40aa04:	pop    ecx
  40aa05:	inc    ebx
  40aa06:	aaa    
  40aa07:	aam    0xe6
  40aa09:	dec    esp
  40aa0a:	sbb    eax,ebp
  40aa0c:	sbb    eax,0xcc3e83d2
  40aa11:	mov    ds:0xf583991f,al
  40aa16:	push   ecx
  40aa17:	push   edi
  40aa18:	fs push es
  40aa1a:	xlat   BYTE PTR ds:[ebx]
  40aa1b:	cdq    
  40aa1c:	mov    dh,0x35
  40aa1e:	test   DWORD PTR [esp+ebx*4],0x3ac8befb
  40aa25:	sub    BYTE PTR [edx+edx*1-0x360aedef],bl
  40aa2c:	mov    edi,0x52bccd7b
  40aa31:	inc    eax
  40aa32:	ret    0xf899
  40aa35:	inc    ecx
  40aa36:	call   0x912213c3
  40aa3b:	inc    edx
  40aa3c:	scas   al,BYTE PTR es:[edi]
  40aa3d:	mov    al,ds:0xf0e355b3
  40aa42:	mov    al,ds:0x9f3b5dfe
  40aa47:	jo     0x40aaa5
  40aa49:	pop    esi
  40aa4a:	hlt    
  40aa4b:	cwde   
  40aa4c:	xchg   ebp,eax
  40aa4d:	retf   
  40aa4e:	xor    esp,DWORD PTR [edx+edi*8-0x42c6b4c6]
  40aa55:	aas    
  40aa56:	xor    BYTE PTR [edx],cl
  40aa58:	mov    dl,0x50
  40aa5a:	leave  
  40aa5b:	jmp    0x40aa79
  40aa5d:	test   eax,0x4fd47d9c
  40aa62:	retf   
  40aa63:	sub    cl,BYTE PTR [ebp-0x7f]
  40aa66:	mov    ds:0x5a49bc88,eax
  40aa6b:	pop    ds
  40aa6c:	add    DWORD PTR [esi+0x702ad8f7],0xb94be3db
  40aa76:	icebp  
  40aa77:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40aa79:	or     edx,DWORD PTR [eax+0x5e4a5e3]
  40aa7f:	sahf   
  40aa80:	fwait
  40aa81:	jmp    0x40aa78
  40aa83:	inc    eax
  40aa84:	mov    edx,0x363c8f6f
  40aa89:	dec    ebx
  40aa8a:	add    ebx,esp
  40aa8c:	icebp  
  40aa8d:	mov    dl,0xca
  40aa8f:	das    
  40aa90:	cmp    BYTE PTR [eax+0x26b5feac],dh
  40aa96:	int3   
  40aa97:	adc    ebx,eax
  40aa99:	pop    eax
  40aa9a:	dec    ebp
  40aa9b:	pop    esi
  40aa9c:	adc    eax,ebx
  40aa9e:	mov    DWORD PTR [edx],edi
  40aaa0:	sub    DWORD PTR [eax-0x46ec023c],eax
  40aaa6:	inc    ebx
  40aaa7:	pop    es
  40aaa8:	dec    esp
  40aaa9:	dec    ebp
  40aaaa:	les    ebp,FWORD PTR [esi]
  40aaac:	cmp    esi,DWORD PTR [edx-0x27]
  40aaaf:	sbb    eax,0xd9d93a32
  40aab4:	enter  0x2eef,0x22
  40aab8:	imul   ebp,DWORD PTR [ecx-0x7b],0x5d731997
  40aabf:	cdq    
  40aac0:	adc    BYTE PTR [edx],ah
  40aac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aac3:	test   eax,0x57251511
  40aac8:	jno    0x40aac7
  40aaca:	(bad)
  40aace:	push   ecx
  40aacf:	add    edi,DWORD PTR [ebx+0x108ef2e4]
  40aad5:	jecxz  0x40aaab
  40aad7:	pcmpeqb mm3,QWORD PTR [eax-0x23]
  40aadb:	mov    esi,0x5e9b4e86
  40aae0:	ja     0x40ab01
  40aae2:	jae    0x40aaad
  40aae4:	nop
  40aae5:	stc    
  40aae6:	loop   0x40aab6
  40aae8:	fs xchg ebx,eax
  40aaea:	xchg   ebx,eax
  40aaeb:	jo     0x40aab8
  40aaed:	aaa    
  40aaee:	mov    dh,BYTE PTR [esi-0x5b]
  40aaf1:	icebp  
  40aaf2:	inc    ebx
  40aaf3:	add    edi,DWORD PTR [edx+0x5]
  40aaf6:	retf   0x50ed
  40aaf9:	inc    esp
  40aafa:	push   cs
  40aafb:	pushf  
  40aafc:	retf   
  40aafd:	xor    ah,dh
  40aaff:	cdq    
  40ab00:	sub    DWORD PTR [edi-0x22],0xffffffee
  40ab04:	retf   0xd673
  40ab07:	les    ecx,FWORD PTR [eax-0x5d]
  40ab0a:	enter  0xd0bc,0x2c
  40ab0e:	jae    0x40aa9e
  40ab10:	idiv   eax
  40ab12:	shl    DWORD PTR [ecx-0x1d4b3f6b],0x5b
  40ab19:	sub    dl,ch
  40ab1b:	arpl   WORD PTR [edi-0x4cb1d585],sp
  40ab21:	jnp    0x40ab58
  40ab23:	pop    es
  40ab24:	mov    BYTE PTR [edx-0x1cfef53a],ah
  40ab2a:	ins    BYTE PTR es:[edi],dx
  40ab2b:	adc    edx,ecx
  40ab2d:	pusha  
  40ab2e:	jae    0x40ab21
  40ab30:	scas   al,BYTE PTR es:[edi]
  40ab31:	mov    al,ds:0xccf2a41f
  40ab36:	mov    dh,0x89
  40ab38:	popf   
  40ab39:	adc    eax,0x46beb4f8
  40ab3e:	mov    ebp,0x660a229c
  40ab43:	add    BYTE PTR [esi+0x38810bec],cl
  40ab49:	xchg   edi,eax
  40ab4a:	mov    bl,0x5b
  40ab4c:	leave  
  40ab4d:	dec    edi
  40ab4e:	inc    esp
  40ab4f:	xchg   ecx,eax
  40ab50:	mov    edx,0x93263c9d
  40ab55:	aad    0x83
  40ab57:	mov    dh,0x19
  40ab59:	jge    0x40abbc
  40ab5b:	das    
  40ab5c:	data16 and BYTE PTR [eax-0x4b],al
  40ab60:	mov    ecx,0x68f2d1e1
  40ab65:	out    dx,al
  40ab66:	pop    eax
  40ab67:	mov    ah,0xef
  40ab69:	fdivr  QWORD PTR [edi+0x1b]
  40ab6c:	push   cs
  40ab6d:	dec    ecx
  40ab6e:	and    DWORD PTR [ebx+0x15],esp
  40ab71:	fimul  WORD PTR [ebp-0x3a3be2e0]
  40ab77:	cmc    
  40ab78:	dec    eax
  40ab79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab7a:	xor    BYTE PTR [edx+0x2649dd57],0xcb
  40ab81:	jo     0x40ab28
  40ab83:	pop    edx
  40ab84:	outs   dx,BYTE PTR ds:[esi]
  40ab85:	or     esi,DWORD PTR [ebx-0x363fb011]
  40ab8b:	sbb    esp,DWORD PTR [edx-0x36]
  40ab8e:	retf   0xa8fc
  40ab91:	sbb    bl,BYTE PTR [ebx]
  40ab93:	outs   dx,DWORD PTR ds:[esi]
  40ab94:	pop    esp
  40ab95:	ficomp DWORD PTR [eax-0x2fb63590]
  40ab9b:	cmp    ch,ch
  40ab9d:	xor    DWORD PTR [eax-0x3fadccee],ebx
  40aba3:	sub    eax,DWORD PTR [edx+0x599ef40c]
  40aba9:	sahf   
  40abaa:	mov    dl,0xa0
  40abac:	aas    
  40abad:	xor    DWORD PTR [ecx-0x2d],edx
  40abb0:	push   cs
  40abb1:	push   ss
  40abb2:	xchg   cl,cl
  40abb4:	inc    edx
  40abb5:	pop    ds
  40abb6:	out    dx,al
  40abb7:	and    bl,cl
  40abb9:	xchg   ecx,eax
  40abba:	mov    esi,0x86b1e563
  40abbf:	add    DWORD PTR [edi-0x29],ebx
  40abc2:	sub    al,0x28
  40abc4:	pavgw  mm3,mm0
  40abc7:	and    bl,BYTE PTR [edi+0x52]
  40abca:	xchg   esp,eax
  40abcb:	jp     0x40abdf
  40abcd:	nop
  40abce:	fs fwait
  40abd0:	xchg   esp,eax
  40abd1:	rol    ecx,1
  40abd3:	mov    bh,0x4c
  40abd5:	outs   dx,BYTE PTR ds:[esi]
  40abd6:	jbe    0x40ab87
  40abd8:	leave  
  40abd9:	js     0x40ac22
  40abdb:	and    BYTE PTR [eax+0x755ef86b],ah
  40abe1:	retf   0xdd90
  40abe4:	push   ss
  40abe5:	sub    BYTE PTR [esi-0x29b0673e],dh
  40abeb:	aam    0x82
  40abed:	rol    BYTE PTR [ebx],cl
  40abef:	(bad)  
  40abf0:	xlat   BYTE PTR ds:[ebx]
  40abf1:	(bad)  
  40abf2:	ins    DWORD PTR es:[edi],dx
  40abf3:	loopne 0x40abca
  40abf5:	mov    ah,BYTE PTR fs:[esi-0x4d738d65]
  40abfc:	xchg   ebx,eax
  40abfd:	dec    edi
  40abfe:	adc    al,0x12
  40ac00:	add    BYTE PTR [ebx+ebp*8+0x69],0x1a
  40ac05:	push   edx
  40ac06:	mov    ds,WORD PTR [edx+eiz*4-0x132e1427]
  40ac0d:	mov    esp,0x8942597e
  40ac12:	retf   
  40ac13:	pusha  
  40ac14:	retf   
  40ac15:	rcl    ebp,cl
  40ac17:	and    ebp,DWORD PTR [ebx+0x3f98dc81]
  40ac1d:	xchg   ebp,eax
  40ac1e:	pop    eax
  40ac1f:	add    cl,al
  40ac21:	push   esi
  40ac22:	cmc    
  40ac23:	mov    esi,0x24c41032
  40ac28:	fwait
  40ac29:	sbb    DWORD PTR [ecx],edi
  40ac2b:	mov    ah,0x3d
  40ac2d:	loopne 0x40ac5a
  40ac2f:	repz pop ebx
  40ac31:	xor    BYTE PTR [esi-0x36],bl
  40ac34:	sbb    DWORD PTR [eax+0x56],ebx
  40ac37:	out    dx,al
  40ac38:	fucomip st,st(1)
  40ac3a:	mov    esi,0xa8d79312
  40ac3f:	(bad)  
  40ac41:	cwde   
  40ac42:	outs   dx,BYTE PTR ds:[esi]
  40ac43:	and    ebp,esi
  40ac45:	inc    edi
  40ac46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac47:	pop    ss
  40ac48:	adc    BYTE PTR [ebp+0x4c],bh
  40ac4b:	push   esi
  40ac4c:	pop    ss
  40ac4d:	out    0xa0,al
  40ac4f:	cli    
  40ac50:	dec    eax
  40ac51:	add    eax,0x16bbb0a9
  40ac56:	aaa    
  40ac57:	out    0x18,eax
  40ac59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac5a:	push   ss
  40ac5b:	scas   eax,DWORD PTR es:[edi]
  40ac5c:	fiadd  WORD PTR [edx]
  40ac5e:	jb     0x40ac88
  40ac60:	pop    esi
  40ac61:	cmp    dl,BYTE PTR ds:0x5ba13a7
  40ac67:	add    DWORD PTR [ecx+eiz*4+0x6b0dc9a3],ecx
  40ac6e:	shl    edx,cl
  40ac70:	jecxz  0x40ac2c
  40ac72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac73:	xor    DWORD PTR [ebx-0x75],0xf56f02e6
  40ac7a:	push   cs
  40ac7b:	ficomp DWORD PTR [ebx-0x4c]
  40ac7e:	mov    si,0x6739
  40ac82:	out    0x60,eax
  40ac84:	xor    eax,0x31c91bdc
  40ac89:	ror    DWORD PTR [esi+0x4],cl
  40ac8c:	pop    es
  40ac8d:	sub    eax,DWORD PTR [eax+0x2c]
  40ac90:	int    0x1d
  40ac92:	push   0xe2806a43
  40ac97:	ja     0x40ac38
  40ac99:	pusha  
  40ac9a:	sbb    DWORD PTR [ecx+0x7c],ebx
  40ac9d:	call   0xe6f11423
  40aca2:	mov    eax,0xa313d68a
  40aca7:	leave  
  40aca8:	mov    al,ds:0xd4570f77
  40acad:	int3   
  40acae:	and    eax,DWORD PTR [eax]
  40acb0:	jp     0x40ad02
  40acb2:	push   esi
  40acb3:	nop
  40acb4:	in     al,0xa6
  40acb6:	pop    edx
  40acb7:	jmp    DWORD PTR [bx+si]
  40acba:	nop
  40acbb:	pop    ebp
  40acbc:	dec    esp
  40acbd:	push   ebx
  40acbe:	mov    dh,0x9
  40acc0:	icebp  
  40acc1:	pop    ebp
  40acc2:	mov    ds:0xd3143572,eax
  40acc7:	push   ebx
  40acc8:	mov    edi,0x735fc663
  40accd:	aad    0xf4
  40accf:	or     dh,ch
  40acd1:	sahf   
  40acd2:	pop    ecx
  40acd3:	push   0xeb5564f4
  40acd8:	jno    0x40ad2a
  40acda:	cld    
  40acdb:	into   
  40acdc:	xor    BYTE PTR [esi+0x68],dl
  40acdf:	xchg   edi,eax
  40ace0:	cwde   
  40ace1:	sbb    al,0x9d
  40ace3:	mov    ebp,0x19328d16
  40ace8:	js     0x40acd9
  40acea:	retf   0x334e
  40aced:	cld    
  40acee:	xor    eax,DWORD PTR [edx]
  40acf0:	icebp  
  40acf1:	int    0xc9
  40acf3:	retf   
  40acf4:	clc    
  40acf5:	xchg   edx,eax
  40acf6:	mov    WORD PTR [ebp-0x56921b8d],fs
  40acfc:	and    dl,cl
  40acfe:	xchg   ebx,eax
  40acff:	out    0xac,eax
  40ad01:	test   BYTE PTR [edi-0x48],0xb5
  40ad05:	push   edi
  40ad06:	neg    BYTE PTR [eax-0x6d55980]
  40ad0c:	mov    BYTE PTR [edx-0x57aa9f82],0x2c
  40ad13:	xor    ah,dh
  40ad15:	rol    BYTE PTR ds:0xd283c2f3,cl
  40ad1b:	das    
  40ad1c:	test   al,0xce
  40ad1e:	lds    ecx,FWORD PTR [edi]
  40ad20:	int    0x88
  40ad22:	or     eax,0xe5efc89f
  40ad27:	push   es
  40ad28:	(bad)  
  40ad29:	outs   dx,DWORD PTR ds:[esi]
  40ad2a:	push   es
  40ad2b:	xor    eax,0xec5b6772
  40ad30:	adc    eax,0x67bcb799
  40ad35:	adc    ah,BYTE PTR [esi-0x6f99d794]
  40ad3b:	stc    
  40ad3c:	cli    
  40ad3d:	mov    edx,0x24ea0e49
  40ad42:	and    dh,BYTE PTR [ecx]
  40ad44:	and    eax,0x45f1724c
  40ad49:	pop    ebp
  40ad4a:	fld    QWORD PTR [edx-0x1b66dfab]
  40ad50:	fld    DWORD PTR [ebp-0x32]
  40ad53:	sub    ah,BYTE PTR [ecx+0x5b004be7]
  40ad59:	nop
  40ad5a:	inc    edi
  40ad5b:	push   cs
  40ad5c:	inc    ebp
  40ad5d:	stos   BYTE PTR es:[edi],al
  40ad5e:	push   edx
  40ad5f:	push   ebp
  40ad60:	and    bh,al
  40ad62:	add    DWORD PTR [eax-0x641b645f],esp
  40ad68:	xlat   BYTE PTR ds:[ebx]
  40ad69:	xchg   BYTE PTR [edx],ah
  40ad6b:	xchg   edi,eax
  40ad6c:	sub    eax,edi
  40ad6e:	mov    al,ds:0x5d2f86a7
  40ad73:	xchg   esp,eax
  40ad74:	push   ebp
  40ad75:	in     eax,0x5
  40ad77:	mov    edx,gs
  40ad79:	dec    eax
  40ad7a:	test   eax,0x3c83f75
  40ad7f:	inc    esi
  40ad80:	or     ah,bl
  40ad82:	daa    
  40ad83:	in     eax,dx
  40ad84:	inc    edi
  40ad85:	mov    ds:0xa0a3af76,eax
  40ad8a:	mov    edx,ebx
  40ad8c:	out    dx,eax
  40ad8d:	jp     0x40ad62
  40ad8f:	ins    BYTE PTR es:[edi],dx
  40ad90:	in     eax,dx
  40ad91:	mul    ch
  40ad93:	in     al,0xf5
  40ad95:	lea    eax,[esi-0x19f4d2d6]
  40ad9b:	cmp    BYTE PTR [esi],al
  40ad9d:	push   esi
  40ad9e:	sbb    cl,BYTE PTR [ebp-0x7e]
  40ada1:	mov    ds:0x4e1c6f02,al
  40ada6:	jge    0x40ad93
  40ada8:	in     eax,0x2d
  40adaa:	push   0x5d
  40adac:	xchg   edi,eax
  40adad:	push   ebp
  40adae:	mov    BYTE PTR ss:[eax+ebx*2],cl
  40adb2:	das    
  40adb3:	mov    bl,0x99
  40adb5:	retf   
  40adb6:	add    DWORD PTR [ebx],ecx
  40adb8:	imul   edx,DWORD PTR [ebx-0x1e2f2b80],0x36
  40adbf:	ficomp WORD PTR [esi]
  40adc1:	xor    ch,BYTE PTR [edi+0x2b]
  40adc4:	les    ebp,FWORD PTR [eax+ebx*8-0x7c59d54a]
  40adcb:	and    cl,BYTE PTR [edi+0x47998642]
  40add1:	fistp  DWORD PTR [ecx+0x54]
  40add4:	push   edx
  40add5:	ret    0x2c34
  40add8:	not    ecx
  40adda:	lahf   
  40addb:	dec    esi
  40addc:	or     eax,0x90271868
  40ade1:	popf   
  40ade2:	cmp    edi,ebx
  40ade4:	mov    ebx,0x905b4169
  40ade9:	test   eax,0x89cdc568
  40adee:	retf   
  40adef:	popf   
  40adf0:	xchg   ebp,eax
  40adf1:	add    BYTE PTR [ebx-0x367df535],dl
  40adf7:	jecxz  0x40addd
  40adf9:	push   0x6e234152
  40adfe:	push   ecx
  40adff:	or     DWORD PTR [ebx+ecx*2],edx
  40ae02:	add    ch,dl
  40ae04:	scas   eax,DWORD PTR es:[edi]
  40ae05:	dec    edx
  40ae06:	imul   eax,DWORD PTR [ecx-0x6813585a],0xac32b9b3
  40ae10:	je     0x40adde
  40ae12:	or     DWORD PTR [esi+0x47c1f8a1],0xb1aa1c05
  40ae1c:	scas   eax,DWORD PTR es:[edi]
  40ae1d:	sbb    esi,DWORD PTR [ecx+0x4a]
  40ae20:	daa    
  40ae21:	outs   dx,BYTE PTR ds:[esi]
  40ae22:	adc    BYTE PTR ds:0x795c8a0f,bl
  40ae28:	xchg   edx,eax
  40ae29:	mov    ah,0xbc
  40ae2b:	shr    DWORD PTR [ecx-0x3874223c],cl
  40ae31:	xchg   ecx,ebx
  40ae33:	(bad)  
  40ae35:	lods   eax,DWORD PTR ds:[esi]
  40ae36:	cmp    BYTE PTR [eax+ecx*2+0x57],0xbf
  40ae3b:	outs   dx,DWORD PTR ds:[esi]
  40ae3c:	jmp    0xd6b6cd4e
  40ae41:	push   esi
  40ae42:	or     al,0x16
  40ae44:	sub    cl,BYTE PTR [ecx]
  40ae46:	es enter 0x5c2f,0xe6
  40ae4b:	or     edx,DWORD PTR fs:[ebp-0x23f4181e]
  40ae52:	mov    dl,0xa0
  40ae54:	jg     0x40aebc
  40ae56:	jge    0x40aeb1
  40ae58:	stc    
  40ae59:	in     al,0x8c
  40ae5b:	pop    ebx
  40ae5c:	and    ebx,DWORD PTR [ecx+0x46b8eebe]
  40ae62:	ret    
  40ae63:	outs   dx,DWORD PTR ds:[esi]
  40ae64:	es cdq 
  40ae66:	add    cl,BYTE PTR [edx]
  40ae68:	aaa    
  40ae69:	jp     0x40ae7a
  40ae6b:	mov    ebx,0x4b374fc8
  40ae70:	xor    esp,DWORD PTR [ebp-0x14]
  40ae73:	loop   0x40ae3f
  40ae75:	aaa    
  40ae76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae77:	popa   
  40ae78:	or     ebp,ebp
  40ae7a:	lods   eax,DWORD PTR ds:[esi]
  40ae7b:	add    eax,0xf8dd9f0f
  40ae80:	jnp    0x40aeec
  40ae82:	out    dx,al
  40ae83:	das    
  40ae84:	jl     0x40aed3
  40ae86:	and    DWORD PTR [eax-0x27443cd],esi
  40ae8c:	lahf   
  40ae8d:	adc    BYTE PTR [edx-0xee3c242],bl
  40ae93:	outs   dx,BYTE PTR ds:[esi]
  40ae94:	in     al,dx
  40ae95:	and    DWORD PTR [edi+0x6a],ebx
  40ae98:	clc    
  40ae99:	add    al,bl
  40ae9b:	dec    edi
  40ae9c:	popa   
  40ae9d:	mov    bl,0xc2
  40ae9f:	sar    DWORD PTR ds:0x1967ec63,cl
  40aea5:	(bad)  
  40aea6:	fild   QWORD PTR [ebp-0x46]
  40aea9:	jns    0x40aefa
  40aeab:	push   0x78
  40aead:	sub    DWORD PTR [edi+0x5],edx
  40aeb0:	jg     0x40aea2
  40aeb2:	pop    ds
  40aeb3:	call   0x2eed:0x6ab6e2ce
  40aeba:	xchg   BYTE PTR [edx-0x2e9fefd0],dh
  40aec0:	push   0x2d0d9b7b
  40aec5:	aas    
  40aec6:	jmp    0xe993:0x665c4859
  40aecd:	or     al,0xa7
  40aecf:	cmp    bh,BYTE PTR [ebx+ecx*8+0x17]
  40aed3:	and    DWORD PTR [eax-0x73a91a83],0xffffffee
  40aeda:	pop    ebx
  40aedb:	mov    eax,ds:0xac3c987c
  40aee0:	adc    DWORD PTR [ebp-0x25],ebp
  40aee3:	push   edi
  40aee4:	imul   esi,DWORD PTR ss:[ebx+0x516fd3a4],0x4ff68a9a
  40aeef:	scas   al,BYTE PTR es:[edi]
  40aef0:	sub    BYTE PTR [esi-0x41755bd3],ah
  40aef6:	jmp    0x6346:0x79bf6501
  40aefd:	repnz mov WORD PTR es:[ecx],?
  40af01:	push   ss
  40af02:	bnd jne 0x40af78
  40af05:	ret    0x108d
  40af08:	ds pop edi
  40af0a:	ins    DWORD PTR es:[edi],dx
  40af0b:	pop    esi
  40af0c:	(bad)  
  40af0d:	sub    ah,bh
  40af0f:	pop    ss
  40af10:	cdq    
  40af11:	and    eax,0xade6d372
  40af16:	pop    edi
  40af17:	arpl   WORD PTR [eax+0xb],dx
  40af1a:	pop    ss
  40af1b:	ror    DWORD PTR [eax+edi*4],1
  40af1e:	call   0x7fb8:0x7a23694b
  40af25:	jo     0x40af71
  40af27:	cwde   
  40af28:	mov    bh,0x56
  40af2a:	loop   0x40aef3
  40af2c:	ret    0x9d62
  40af2f:	sbb    al,0xc4
  40af31:	lods   eax,DWORD PTR ds:[esi]
  40af32:	mov    ecx,0x71084dc8
  40af37:	fcmovb st,st(6)
  40af39:	ins    BYTE PTR es:[edi],dx
  40af3a:	sub    eax,0xafe74210
  40af3f:	or     DWORD PTR [edi+0x789fb2c1],esi
  40af45:	out    0x74,al
  40af47:	jmp    0x40af02
  40af49:	xchg   ebx,eax
  40af4a:	cmp    ebp,DWORD PTR [edi+0x26]
  40af4d:	push   ecx
  40af4e:	jle    0x40aeed
  40af50:	fist   WORD PTR [edx-0x7da06d97]
  40af56:	adc    al,0xd9
  40af58:	outs   dx,BYTE PTR ds:[esi]
  40af59:	cmc    
  40af5a:	xchg   ebx,eax
  40af5b:	sbb    ebx,DWORD PTR [ebx-0x545af22f]
  40af61:	cld    
  40af62:	int3   
  40af63:	jg     0x40af5a
  40af65:	dec    edi
  40af66:	arpl   WORD PTR [edi+0x48],sp
  40af69:	neg    BYTE PTR [ecx]
  40af6b:	scas   al,BYTE PTR es:[edi]
  40af6c:	sbb    DWORD PTR [edx],edi
  40af6e:	push   es
  40af6f:	jbe    0x40af6a
  40af71:	ds cld 
  40af73:	ja     0x40af1f
  40af75:	leave  
  40af76:	in     al,dx
  40af77:	ds xchg ecx,eax
  40af79:	inc    ebp
  40af7a:	popf   
  40af7b:	mov    ch,0x2
  40af7d:	ret    0x5880
  40af80:	add    DWORD PTR [edi-0x7575ec18],0x20423b9d
  40af8a:	scas   eax,DWORD PTR es:[edi]
  40af8b:	fldcw  WORD PTR [ebp-0x2b]
  40af8e:	sbb    al,BYTE PTR [eax-0x24fe6cd3]
  40af94:	xchg   edx,eax
  40af95:	leave  
  40af96:	xor    cl,BYTE PTR [ebp+0x18d9dcb0]
  40af9c:	dec    ecx
  40af9d:	sbb    eax,0x191d4a66
  40afa2:	ja     0x40afe1
  40afa4:	test   al,0xa5
  40afa6:	cmp    BYTE PTR [edx-0x13d7508b],ah
  40afac:	in     al,dx
  40afad:	std    
  40afae:	mov    al,0x73
  40afb0:	xchg   ebx,eax
  40afb1:	adc    DWORD PTR [edx],0x62795316
  40afb7:	xchg   edx,eax
  40afb8:	or     eax,0x7e227219
  40afbd:	cs push edx
  40afbf:	push   esi
  40afc0:	(bad)  
  40afc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afc2:	push   0x76
  40afc4:	pop    ebp
  40afc5:	sub    al,0x5
  40afc7:	dec    esp
  40afc8:	clc    
  40afc9:	mov    edx,0x8bbaa16b
  40afce:	inc    ebp
  40afcf:	cld    
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0x3329b0d0,0xd5
  40afff:	sti    
  40b000:	out    dx,eax
  40b001:	sub    esp,esi
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffff95
  40b00a:	sub    DWORD PTR [esi+0x71],ecx
  40b00d:	iret   
  40b00e:	jae    0x40b074
  40b010:	fwait
  40b011:	enter  0x6a66,0x5f
  40b015:	mov    bl,0xf2
  40b017:	popa   
  40b018:	outs   dx,BYTE PTR ds:[esi]
  40b019:	(bad)  
  40b01a:	mov    ds:0xee463dd2,al
  40b01f:	xlat   BYTE PTR ds:[ebx]
  40b020:	loop   0x40afc4
  40b022:	and    ax,0x51a7
  40b026:	std    
  40b027:	inc    edx
  40b028:	inc    esp
  40b029:	cli    
  40b02a:	xchg   esi,eax
  40b02b:	push   ebp
  40b02c:	test   BYTE PTR [esi+0x28],al
  40b02f:	sbb    eax,0x5f956d4a
  40b034:	push   0x2a
  40b036:	fimul  WORD PTR [ebp-0x1da2c9d]
  40b03c:	das    
  40b03d:	sub    al,0xba
  40b03f:	mov    ch,0x8f
  40b041:	pusha  
  40b042:	and    DWORD PTR [ecx],ebx
  40b044:	das    
  40b045:	sub    al,0xe5
  40b047:	or     DWORD PTR [ebx*2+0x149b82a6],ecx
  40b04e:	stc    
  40b04f:	inc    edx
  40b050:	aam    0x33
  40b052:	div    BYTE PTR ds:0x6d21a21b
  40b058:	fsubr  st,st(6)
  40b05a:	add    DWORD PTR [eax],eax
  40b05c:	add    eax,0xa2371afa
  40b061:	les    edi,FWORD PTR [ebx-0x5cb883c2]
  40b067:	loop   0x40b094
  40b069:	out    dx,al
  40b06a:	dec    edi
  40b06b:	call   FWORD PTR [ecx-0x6c]
  40b06e:	cmp    BYTE PTR [edx+0x7b3ddba6],0xc8
  40b075:	or     cl,ch
  40b077:	and    al,0x35
  40b079:	nop
  40b07a:	call   DWORD PTR [ebp-0x4ddb7a75]
  40b080:	inc    edi
  40b081:	in     eax,dx
  40b082:	bound  ebx,QWORD PTR [ebx+0x72]
  40b085:	sbb    al,0xc0
  40b087:	cld    
  40b088:	pushf  
  40b089:	cli    
  40b08a:	inc    eax
  40b08b:	xlat   BYTE PTR ds:[ebx]
  40b08c:	mov    dh,ah
  40b08e:	jno    0x40b0ed
  40b090:	inc    esp
  40b091:	inc    esp
  40b092:	mov    ah,dh
  40b094:	mov    ds:0xcab9fbf,al
  40b099:	push   ds
  40b09a:	xchg   esp,eax
  40b09b:	pop    edx
  40b09c:	call   0xb85e:0x513e7661
  40b0a3:	jge    0x40b0f7
  40b0a5:	mov    edx,0xc0223363
  40b0aa:	(bad)  
  40b0ab:	rcr    BYTE PTR [edi],1
  40b0ad:	add    eax,0xfb06e781
  40b0b2:	pop    esp
  40b0b3:	pop    ebp
  40b0b4:	sub    al,0xba
  40b0b6:	aad    0xc0
  40b0b8:	jge    0x40b139
  40b0ba:	sahf   
  40b0bb:	cmp    eax,0x832f8939
  40b0c0:	adc    al,0xe5
  40b0c2:	xor    al,0x62
  40b0c4:	inc    ebp
  40b0c5:	hlt    
  40b0c6:	sbb    edi,DWORD PTR [ecx-0x31]
  40b0c9:	rcr    BYTE PTR [edi+0xf83a505],1
  40b0cf:	(bad)  
  40b0d0:	pop    ebp
  40b0d1:	jnp    0x40b05d
  40b0d3:	lods   al,BYTE PTR ds:[esi]
  40b0d4:	(bad)  
  40b0d5:	mov    ch,0x55
  40b0d7:	mov    ebx,0x41da2c50
  40b0dc:	call   0xd56da42f
  40b0e1:	jo     0x40b0c4
  40b0e3:	dec    esi
  40b0e4:	call   0xe963:0x8eaedb01
  40b0eb:	sbb    eax,0xddb4b162
  40b0f0:	mov    cl,0x3e
  40b0f2:	add    eax,0xeec4dfdf
  40b0f7:	inc    ebx
  40b0f8:	xor    DWORD PTR [esi+0x1512ad09],edi
  40b0fe:	jbe    0x40b13d
  40b100:	push   esi
  40b101:	add    eax,0xcedff744
  40b106:	stos   DWORD PTR es:[edi],eax
  40b107:	sahf   
  40b108:	neg    DWORD PTR [esi+edi*8]
  40b10b:	add    BYTE PTR [edi+0x0],0x1d
  40b10f:	hlt    
  40b110:	jnp    0x40b103
  40b112:	xchg   esi,eax
  40b113:	inc    edx
  40b114:	pushf  
  40b115:	repz (bad) 
  40b117:	mov    dl,0x5
  40b119:	pop    es
  40b11a:	ja     0x40b141
  40b11c:	xor    ebx,0x6d
  40b11f:	mov    bl,0xc6
  40b121:	push   edi
  40b122:	push   ebx
  40b123:	setnp  BYTE PTR [edi]
  40b126:	jecxz  0x40b118
  40b128:	inc    esi
  40b129:	(bad)  
  40b12a:	mov    ebp,0x419cb679
  40b12f:	dec    esp
  40b130:	not    ch
  40b132:	leave  
  40b133:	mov    WORD PTR [esi+0x48],?
  40b136:	(bad)  
  40b137:	stos   DWORD PTR es:[edi],eax
  40b138:	push   0x2b739164
  40b13d:	gs aad 0x9f
  40b140:	and    esi,esp
  40b142:	shl    al,cl
  40b144:	inc    esp
  40b145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b146:	push   esp
  40b147:	fldenv [edx+0x5dbc5f6f]
  40b14d:	inc    esp
  40b14e:	ja     0x40b138
  40b150:	rcr    BYTE PTR [ebp-0x52ffdde2],1
  40b156:	sar    bh,0xbd
  40b159:	mov    ebx,0x22e1a03d
  40b15e:	imul   al
  40b160:	sbb    eax,0x4509d9d8
  40b165:	cdq    
  40b166:	ins    DWORD PTR es:[edi],dx
  40b167:	in     al,0xf6
  40b169:	ror    ebp,cl
  40b16b:	inc    ebx
  40b16c:	adc    eax,0xf099a4ce
  40b171:	outs   dx,DWORD PTR ds:[esi]
  40b172:	push   ecx
  40b173:	div    esi
  40b175:	xlat   BYTE PTR ds:[ebx]
  40b176:	adc    al,0x10
  40b178:	imul   esi,DWORD PTR [eax+0x6585f703],0xd00b6319
  40b182:	sub    al,0x80
  40b184:	fiadd  DWORD PTR [ebx]
  40b186:	sahf   
  40b187:	pop    ss
  40b188:	mov    ebp,0xcfd74747
  40b18d:	(bad)  
  40b18e:	pop    ebp
  40b18f:	das    
  40b190:	jne    0x40b1cc
  40b192:	mov    dh,bh
  40b194:	push   0xa01c3ea5
  40b199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b19a:	loopne 0x40b19d
  40b19c:	cmp    al,dh
  40b19e:	call   0x8b33:0xc53284a3
  40b1a5:	push   edi
  40b1a6:	xor    ecx,ecx
  40b1a8:	and    bh,BYTE PTR [edi+0xf]
  40b1ab:	sbb    eax,0x26dab62a
  40b1b0:	xlat   BYTE PTR ds:[ebx]
  40b1b1:	or     al,BYTE PTR [ebx]
  40b1b3:	out    0xbe,al
  40b1b5:	ss in  eax,0xd5
  40b1b8:	daa    
  40b1b9:	sbb    al,0xcd
  40b1bb:	int    0xf0
  40b1bd:	add    BYTE PTR [ebp+0x5a],bl
  40b1c0:	ja     0x40b1ee
  40b1c2:	mov    ah,0xe3
  40b1c4:	mov    dh,0xf3
  40b1c6:	adc    eax,0xbaae7a3e
  40b1cb:	jmp    0x2e64a8b0
  40b1d0:	push   eax
  40b1d1:	mov    ecx,0x2cc70f93
  40b1d6:	pusha  
  40b1d7:	shr    BYTE PTR [eax+0x44],0x4b
  40b1db:	jge    0x40b162
  40b1dd:	jne    0x40b164
  40b1df:	retf   0xc439
  40b1e2:	jmp    0xf199858b
  40b1e7:	sar    BYTE PTR [ebp+0x128d6676],cl
  40b1ed:	enter  0xa535,0xd4
  40b1f1:	adc    BYTE PTR [edi-0x3c6673cd],dh
  40b1f7:	sbb    BYTE PTR [esi],bl
  40b1f9:	jmp    0xaac6680c
  40b1fe:	push   eax
  40b1ff:	aaa    
  40b200:	pop    esp
  40b201:	(bad)  
  40b202:	pusha  
  40b203:	cmp    BYTE PTR [ebx],bl
  40b205:	ja     0x40b1e2
  40b207:	retf   0x9e3c
  40b20a:	adc    DWORD PTR [eax-0x45],edx
  40b20d:	xchg   ecx,eax
  40b20e:	fnstsw WORD PTR [eax]
  40b210:	add    BYTE PTR [edx+esi*4+0x1b28519],0xa8
  40b218:	pusha  
  40b219:	sub    ah,BYTE PTR ds:0x9f63efd9
  40b21f:	mov    ds:0x62b5c5ad,al
  40b224:	push   edx
  40b225:	or     DWORD PTR [edx+0x4c4b95a8],0xffffffbb
  40b22c:	(bad)  
  40b22e:	xchg   esp,eax
  40b22f:	in     al,dx
  40b230:	iret   
  40b231:	daa    
  40b232:	test   ch,dl
  40b234:	int    0x8a
  40b236:	scas   al,BYTE PTR es:[edi]
  40b237:	out    0x25,al
  40b239:	test   DWORD PTR [edi+edi*1-0x37],edx
  40b23d:	push   edi
  40b23e:	ins    BYTE PTR es:[edi],dx
  40b23f:	popa   
  40b240:	hlt    
  40b241:	lods   al,BYTE PTR ds:[esi]
  40b242:	loopne 0x40b2ac
  40b244:	or     ah,BYTE PTR [esi+edx*2+0x72]
  40b248:	mov    bh,0xe9
  40b24a:	test   BYTE PTR [ecx+ebx*2],dl
  40b24d:	aam    0x2c
  40b24f:	push   edi
  40b250:	sbb    al,0x92
  40b252:	fwait
  40b253:	out    dx,al
  40b254:	cmp    cl,BYTE PTR [edi]
  40b256:	mov    bh,cl
  40b258:	jle    0x40b204
  40b25a:	dec    edx
  40b25b:	xchg   ebp,eax
  40b25c:	cmp    esp,esp
  40b25e:	xor    BYTE PTR [ecx],bl
  40b260:	mov    ecx,0x20a09455
  40b265:	dec    edx
  40b266:	xchg   ecx,eax
  40b267:	mov    edx,0x95a07930
  40b26c:	imul   esp,DWORD PTR [ecx-0x22349ef7],0x6b95f593
  40b276:	xlat   BYTE PTR ds:[ebx]
  40b277:	or     eax,0x9991a6a2
  40b27c:	cli    
  40b27d:	leave  
  40b27e:	and    bl,BYTE PTR cs:[edx]
  40b281:	hlt    
  40b282:	hlt    
  40b283:	rol    DWORD PTR [ebp-0x43],0xc7
  40b287:	xor    eax,0x113df93
  40b28c:	add    BYTE PTR [eax+eiz*1-0x53a83a22],bh
  40b293:	xor    DWORD PTR [edx-0x5b],ecx
  40b296:	ins    DWORD PTR es:[edi],dx
  40b297:	inc    ebx
  40b298:	push   esp
  40b299:	sbb    bh,BYTE PTR ds:0xd1481ff
  40b29f:	push   ebx
  40b2a0:	mov    ah,0x24
  40b2a2:	daa    
  40b2a3:	sbb    eax,0xd0f3c3d5
  40b2a8:	jnp    0x40b27a
  40b2aa:	(bad)  
  40b2ab:	jge    0x40b2ff
  40b2ad:	ins    BYTE PTR es:[edi],dx
  40b2ae:	in     eax,dx
  40b2af:	mov    DWORD PTR [edi],esp
  40b2b1:	and    DWORD PTR [edx],ebp
  40b2b3:	inc    edx
  40b2b4:	dec    esi
  40b2b5:	jbe    0x40b2ba
  40b2b7:	xchg   DWORD PTR [ebx],edx
  40b2b9:	call   0x9ba5cec5
  40b2be:	adc    bl,al
  40b2c0:	mov    esp,0x78372287
  40b2c5:	dec    ebx
  40b2c6:	out    0xbc,eax
  40b2c8:	inc    eax
  40b2c9:	cmp    eax,0x34682a8b
  40b2ce:	mov    bl,al
  40b2d0:	sar    BYTE PTR [esi-0x147ae1ea],1
  40b2d6:	push   esp
  40b2d7:	or     al,0xeb
  40b2d9:	fucomip st,st(6)
  40b2db:	call   FWORD PTR fs:[ebx]
  40b2de:	stos   DWORD PTR es:[edi],eax
  40b2df:	or     eax,0xbae31cd8
  40b2e4:	jecxz  0x40b2d3
  40b2e6:	adc    BYTE PTR [ebx-0x4e],0x59
  40b2ea:	xchg   ecx,eax
  40b2eb:	jge    0x40b2d4
  40b2ed:	in     al,0xde
  40b2ef:	mov    DWORD PTR [eax+0x69bae74a],edi
  40b2f5:	test   al,0xac
  40b2f7:	inc    edx
  40b2f8:	(bad)
  40b2fb:	gs xchg ecx,eax
  40b2fd:	(bad)  
  40b2fe:	rol    BYTE PTR [edi-0x7],cl
  40b301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b302:	push   ebx
  40b303:	adc    dl,0x4a
  40b306:	mov    dh,0x69
  40b308:	cld    
  40b309:	cdq    
  40b30a:	or     eax,0xc43c286e
  40b30f:	or     DWORD PTR [ebx-0x314b0d9d],ebp
  40b315:	mov    al,0xb7
  40b317:	call   0x9064:0xf1275bcf
  40b31e:	test   al,0x72
  40b320:	jmp    0xf2d6:0x77b4d0d8
  40b327:	dec    ecx
  40b328:	nop
  40b329:	push   0x57
  40b32b:	ins    DWORD PTR es:[edi],dx
  40b32c:	jp     0x40b2d4
  40b32e:	push   esi
  40b32f:	nop
  40b330:	fwait
  40b331:	test   al,0xb9
  40b333:	adc    BYTE PTR [eax+ecx*1+0x636c78e0],bh
  40b33a:	or     ch,BYTE PTR [edx]
  40b33c:	and    ah,BYTE PTR [ebx-0x3d42fca5]
  40b342:	in     al,dx
  40b343:	ret    
  40b344:	jno    0x40b316
  40b346:	and    eax,0x34e35dbc
  40b34b:	push   edx
  40b34d:	cmp    al,0x9d
  40b34f:	mov    ebx,0xb9c382b3
  40b354:	mov    cl,0x5c
  40b356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b357:	and    DWORD PTR [edi-0x3c],esi
  40b35a:	cmp    DWORD PTR [ecx+0x10a6564],eax
  40b360:	or     eax,0x44d01532
  40b365:	push   edx
  40b366:	push   edi
  40b367:	push   edx
  40b368:	xor    eax,DWORD PTR [edi]
  40b36a:	outs   dx,BYTE PTR ds:[esi]
  40b36b:	in     eax,dx
  40b36c:	stc    
  40b36d:	xor    DWORD PTR [ebx+0x3b],0xa505dfb1
  40b374:	mov    al,0x4e
  40b376:	mov    cl,0x5f
  40b378:	sbb    al,0x9f
  40b37a:	pop    edi
  40b37b:	fsqrt  
  40b37d:	and    BYTE PTR [edx-0x798d16ce],dh
  40b383:	imul   edi,DWORD PTR [edx],0xcae78eb1
  40b389:	int3   
  40b38a:	mov    bh,BYTE PTR [ecx+0x34]
  40b38d:	outs   dx,DWORD PTR ds:[esi]
  40b38e:	imul   eax,DWORD PTR [eax+0x4],0x74
  40b392:	jb     0x40b399
  40b394:	xchg   esp,eax
  40b395:	in     al,dx
  40b396:	lods   eax,DWORD PTR ds:[esi]
  40b397:	cvtpi2ps xmm2,mm5
  40b39a:	cmp    dh,BYTE PTR [ebp+0x26]
  40b39d:	pop    ss
  40b39e:	test   ecx,0x8beee6ff
  40b3a4:	pop    edi
  40b3a5:	out    dx,al
  40b3a6:	jl     0x40b419
  40b3a8:	rol    BYTE PTR [esi+ebx*8+0x24],0xd7
  40b3ad:	mov    al,ds:0xa1da3cb
  40b3b2:	xor    ebx,eax
  40b3b4:	cld    
  40b3b5:	jp     0x40b3a6
  40b3b7:	fwait
  40b3b8:	sub    eax,0x414f6d7d
  40b3bd:	les    edi,FWORD PTR [ebp+0x59]
  40b3c0:	in     al,dx
  40b3c1:	add    al,0x82
  40b3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c4:	(bad)  
  40b3c5:	aad    0x11
  40b3c7:	mov    ebp,0x882dda2c
  40b3cc:	add    BYTE PTR [edx+0x7a],bl
  40b3cf:	mov    gs,WORD PTR [ebp-0x7ba733b4]
  40b3d5:	and    edx,eax
  40b3d7:	lahf   
  40b3d8:	sub    BYTE PTR [ebx],bh
  40b3da:	leave  
  40b3db:	push   edi
  40b3dc:	retf   0x636d
  40b3df:	in     al,0x2e
  40b3e1:	scas   eax,DWORD PTR es:[edi]
  40b3e2:	mov    dl,0x7c
  40b3e4:	inc    esp
  40b3e5:	(bad)  
  40b3e6:	pop    esi
  40b3e7:	ins    BYTE PTR es:[edi],dx
  40b3e8:	sub    eax,0xd817c995
  40b3ed:	and    BYTE PTR [ecx],0x6a
  40b3f0:	jns    0x40b464
  40b3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f3:	mov    ds:0xb184c3a6,eax
  40b3f8:	lahf   
  40b3f9:	sub    eax,DWORD PTR [eax-0x24]
  40b3fc:	xor    eax,0xeb2b6053
  40b401:	cmp    cl,BYTE PTR [edx+0x60]
  40b404:	cdq    
  40b405:	add    ch,dl
  40b407:	scas   eax,DWORD PTR es:[edi]
  40b408:	push   0x2b0474a9
  40b40d:	sahf   
  40b40e:	add    esp,DWORD PTR [edi+0x61]
  40b411:	inc    edi
  40b412:	retf   0x2df9
  40b415:	scas   al,BYTE PTR es:[edi]
  40b416:	jg     0x40b456
  40b418:	sub    eax,0x74fa9eb0
  40b41d:	into   
  40b41e:	and    eax,0xa69a7a68
  40b423:	xchg   ebx,eax
  40b424:	arpl   WORD PTR [eax-0x3b],bp
  40b427:	or     al,0x5f
  40b429:	out    dx,eax
  40b42a:	push   edi
  40b42b:	fisttp WORD PTR [edi+0x48]
  40b42e:	into   
  40b42f:	ins    BYTE PTR es:[edi],dx
  40b430:	hlt    
  40b431:	push   edi
  40b432:	xchg   edi,eax
  40b433:	push   DWORD PTR [esi]
  40b435:	mov    eax,ds:0x6b36d6fb
  40b43a:	cs xor al,0x73
  40b43d:	adc    ecx,DWORD PTR [ebp+0x29]
  40b440:	jl     0x40b3fc
  40b442:	ins    BYTE PTR es:[edi],dx
  40b443:	mov    ebp,0xf56210db
  40b448:	adc    al,0xcd
  40b44a:	push   0xf916a745
  40b44f:	jecxz  0x40b4a9
  40b451:	jmp    FWORD PTR [ebx]
  40b453:	scas   eax,DWORD PTR es:[edi]
  40b454:	dec    esi
  40b455:	cld    
  40b456:	push   esi
  40b457:	daa    
  40b458:	sub    eax,0x11472019
  40b45d:	dec    esp
  40b45e:	stc    
  40b45f:	cld    
  40b460:	or     al,0xd6
  40b462:	clc    
  40b463:	jecxz  0x40b43a
  40b465:	shr    BYTE PTR [eax],0x90
  40b468:	gs adc eax,0xff484b7c
  40b46e:	cs inc edi
  40b470:	inc    edi
  40b471:	adc    ebp,edx
  40b473:	xchg   esp,eax
  40b474:	jne    0x40b4be
  40b476:	sub    DWORD PTR [edi+eax*1-0x37],esi
  40b47a:	into   
  40b47b:	iret   
  40b47c:	add    BYTE PTR [edx],al
  40b47e:	fcmovb st,st(0)
  40b480:	cs jmp 0x672:0xdb19bdfb
  40b488:	out    0xf2,eax
  40b48a:	push   edi
  40b48b:	or     eax,0xaea23530
  40b490:	call   0xff8e:0xa67bd214
  40b497:	into   
  40b498:	(bad)  
  40b499:	scas   eax,DWORD PTR es:[edi]
  40b49a:	jno    0x40b47c
  40b49c:	xor    eax,DWORD PTR [eax+eiz*8]
  40b49f:	push   ds
  40b4a0:	xchg   edx,eax
  40b4a1:	mov    eax,ds:0x8889afcc
  40b4a6:	ret    
  40b4a7:	outs   dx,BYTE PTR ds:[esi]
  40b4a8:	adc    bx,WORD PTR [edi+0x40a812cc]
  40b4af:	mov    edi,0xcee4242
  40b4b4:	push   ss
  40b4b5:	push   ebp
  40b4b6:	fwait
  40b4b7:	mov    eax,0x93358fb2
  40b4bc:	mov    esp,0xce1075e9
  40b4c1:	sbb    ch,ch
  40b4c3:	and    eax,0xa8dbbb18
  40b4c8:	mov    ds:0xb87258d4,al
  40b4cd:	xchg   ebp,eax
  40b4ce:	call   0xbe4c:0x1f2b282a
  40b4d5:	cli    
  40b4d6:	sbb    al,0x82
  40b4d8:	ins    DWORD PTR es:[edi],dx
  40b4d9:	imul   esi,eax,0x11bf1807
  40b4df:	call   0x925c524a
  40b4e4:	sbb    al,0x30
  40b4e6:	sbb    BYTE PTR [esi],0xaa
  40b4e9:	adc    BYTE PTR [bp+si-0x2e],dl
  40b4ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4ee:	push   ebp
  40b4ef:	cld    
  40b4f0:	push   edx
  40b4f1:	idiv   DWORD PTR [edx]
  40b4f3:	in     al,dx
  40b4f4:	retf   
  40b4f5:	adc    dh,0x9a
  40b4f8:	nop
  40b4f9:	fadd   DWORD PTR [edi+0xe]
  40b4fc:	mov    ds,WORD PTR [ecx+ecx*4+0x7b]
  40b500:	sub    esp,edx
  40b502:	mov    ebx,0x55b7f71f
  40b507:	js     0x40b4dc
  40b509:	cmp    dh,BYTE PTR [ecx+0x18]
  40b50c:	push   es
  40b50d:	mov    al,ds:0x53ab8530
  40b512:	rcl    DWORD PTR [edx-0x35],cl
  40b515:	or     al,0xd0
  40b517:	push   eax
  40b518:	std    
  40b519:	mov    eax,ds:0x3066d165
  40b51e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b51f:	hlt    
  40b520:	mov    ds:0x2637de78,al
  40b525:	je     0x40b4bb
  40b527:	xchg   ebx,eax
  40b528:	test   BYTE PTR [eax],bh
  40b52a:	inc    ecx
  40b52b:	add    BYTE PTR [esi],dh
  40b52d:	sub    DWORD PTR [edi+0x4911629d],edx
  40b533:	mov    dh,BYTE PTR ds:[ecx-0x39]
  40b537:	or     eax,0xaa43c2cb
  40b53c:	xchg   edx,eax
  40b53d:	ds (bad) 
  40b53f:	idiv   BYTE PTR [edx]
  40b541:	cwde   
  40b542:	jge    0x40b4d2
  40b544:	js     0x40b593
  40b546:	fst    DWORD PTR [esi]
  40b548:	push   ebx
  40b549:	xchg   esp,eax
  40b54a:	push   es
  40b54b:	pop    ebp
  40b54c:	push   edx
  40b54d:	outs   dx,DWORD PTR ds:[esi]
  40b54e:	jl     0x40b5b6
  40b550:	pushf  
  40b551:	xchg   ebp,eax
  40b552:	sbb    al,0x9a
  40b554:	jmp    0x7fe4c686
  40b559:	scas   al,BYTE PTR es:[edi]
  40b55a:	popf   
  40b55b:	adc    esi,DWORD PTR [esi]
  40b55d:	cmp    al,0xf2
  40b55f:	aam    0x19
  40b561:	aaa    
  40b562:	xchg   ebp,eax
  40b563:	push   edi
  40b564:	xchg   ebp,eax
  40b565:	shr    DWORD PTR [eax-0x6e8271c],1
  40b56b:	sbb    ebp,edx
  40b56d:	inc    ecx
  40b56e:	add    BYTE PTR [ecx-0x39],dh
  40b571:	cwde   
  40b572:	mov    ebp,0xec202408
  40b577:	cli    
  40b578:	push   edx
  40b579:	or     eax,0x670972d3
  40b57e:	jbe    0x40b52b
  40b580:	fstp   TBYTE PTR [ebx+0x62]
  40b583:	rcr    BYTE PTR [edx],cl
  40b585:	xor    BYTE PTR [eax+ebp*1],dl
  40b588:	and    BYTE PTR [esi],cl
  40b58a:	jno    0x40b511
  40b58c:	dec    DWORD PTR [ebx-0x4b]
  40b58f:	sub    esp,DWORD PTR [eax+0x7034419d]
  40b595:	push   0x49
  40b597:	push   edi
  40b598:	sub    DWORD PTR [ecx+eax*2],0xffffffcb
  40b59c:	fisub  WORD PTR [eax]
  40b59e:	dec    edx
  40b59f:	push   ecx
  40b5a0:	cdq    
  40b5a1:	(bad)  
  40b5a2:	(bad)  
  40b5a4:	int3   
  40b5a5:	push   esi
  40b5a6:	push   0x75156e30
  40b5ab:	scas   eax,DWORD PTR es:[edi]
  40b5ac:	jp     0x40b608
  40b5ae:	pop    eax
  40b5af:	and    eax,edi
  40b5b1:	imul   edi,ebp,0xb0ff44ee
  40b5b7:	mov    edx,0x8330a122
  40b5bc:	inc    esi
  40b5bd:	add    BYTE PTR [ebp-0x73],ah
  40b5c0:	and    BYTE PTR [ecx-0x13],bh
  40b5c3:	js     0x40b5e6
  40b5c5:	cmp    ebp,ebp
  40b5c7:	mov    DWORD PTR [eax+0x11a1af4a],ebx
  40b5cd:	in     eax,0xca
  40b5cf:	pop    ebx
  40b5d0:	inc    ebx
  40b5d1:	jmp    FWORD PTR [ebp-0x75]
  40b5d4:	ins    DWORD PTR es:[edi],dx
  40b5d5:	or     BYTE PTR [edx+esi*2],cl
  40b5d8:	int    0x3b
  40b5da:	sub    DWORD PTR [ebp+0x57],edi
  40b5dd:	(bad)  
  40b5de:	inc    esi
  40b5df:	rcr    BYTE PTR [esi],1
  40b5e1:	xor    eax,0xf4598640
  40b5e6:	inc    edx
  40b5e7:	mov    al,0x46
  40b5e9:	push   es
  40b5ea:	(bad)
  40b5ed:	or     ebx,DWORD PTR [edi+0x39]
  40b5f0:	pop    ss
  40b5f1:	(bad)  
  40b5f2:	test   dh,0xc7
  40b5f5:	mov    edi,0x8170c826
  40b5fa:	pop    edi
  40b5fb:	mov    esi,0x8de9a9d0
  40b600:	push   esi
  40b601:	shr    BYTE PTR ds:0xfc6f78a8,1
  40b607:	adc    BYTE PTR [edx+0x62],dh
  40b60a:	imul   ebp,DWORD PTR [edx+0x4512eb69],0xc915bbae
  40b614:	aas    
  40b615:	popf   
  40b616:	call   0x55779b29
  40b61b:	(bad)  
  40b61c:	ds jno 0x40b654
  40b61f:	jno    0x40b650
  40b621:	xor    BYTE PTR [edx+0x3de8d9eb],al
  40b627:	add    eax,0xed7f3bd
  40b62c:	fwait
  40b62d:	lods   eax,DWORD PTR ds:[esi]
  40b62e:	arpl   WORD PTR [edi-0x4d],sp
  40b631:	push   ds
  40b632:	mov    cl,0x66
  40b634:	xchg   ebx,eax
  40b635:	retf   0x8de3
  40b638:	sar    DWORD PTR [ecx-0x1],cl
  40b63b:	mov    edx,0x896ef281
  40b640:	cmp    ebp,DWORD PTR [ecx-0x37bc7f92]
  40b646:	sbb    al,0xf3
  40b648:	push   edx
  40b649:	sub    ebx,DWORD PTR [ebx+ebx*4+0x16f66c52]
  40b650:	push   es
  40b651:	popf   
  40b652:	pop    ss
  40b653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b654:	xchg   ebp,eax
  40b655:	jmp    0x78a6:0x4e787b64
  40b65c:	xchg   edx,eax
  40b65d:	sahf   
  40b65e:	mov    esp,0xe18bdecc
  40b663:	out    dx,eax
  40b664:	test   eax,0x60459d74
  40b669:	or     edi,DWORD PTR cs:0xe1829bc6
  40b670:	jns    0x40b646
  40b672:	sbb    eax,0xea1f3aa2
  40b677:	addr16 (bad) 
  40b679:	adc    eax,edx
  40b67b:	cwde   
  40b67c:	fnstsw WORD PTR [ebx+0xbf684f5]
  40b682:	push   es
  40b683:	sub    al,0xeb
  40b685:	mov    ch,0xfd
  40b687:	pop    esp
  40b688:	lahf   
  40b689:	cli    
  40b68a:	test   DWORD PTR [ebx],edi
  40b68c:	js     0x40b703
  40b68e:	inc    esp
  40b68f:	xchg   esp,ecx
  40b691:	inc    esi
  40b692:	(bad)  [ebx+edi*1]
  40b695:	(bad)  
  40b696:	bound  eax,QWORD PTR [eax]
  40b698:	ins    DWORD PTR es:[edi],dx
  40b699:	fistp  DWORD PTR ds:0xf41f2509
  40b69f:	test   DWORD PTR [edi],esi
  40b6a1:	add    DWORD PTR [edx+0x4d],eax
  40b6a4:	ret    
  40b6a5:	add    ecx,DWORD PTR [ebp+0x19]
  40b6a8:	cmp    al,BYTE PTR [eax]
  40b6aa:	jno    0x40b673
  40b6ac:	and    bh,cl
  40b6ae:	mov    ecx,ebx
  40b6b0:	les    edi,FWORD PTR [edi]
  40b6b2:	cmc    
  40b6b3:	and    eax,0x2c7c0ce4
  40b6b8:	xor    eax,0x2c7c927e
  40b6bd:	imul   ecx,DWORD PTR [edx-0x8],0xffffff9e
  40b6c1:	ror    DWORD PTR [edi+0x76],0x40
  40b6c5:	mov    dh,0x75
  40b6c7:	sbb    eax,0x76f5c502
  40b6cc:	aam    0xe3
  40b6ce:	iret   
  40b6cf:	daa    
  40b6d0:	add    eax,0x59104651
  40b6d5:	mov    ah,0x9d
  40b6d7:	scas   eax,DWORD PTR es:[edi]
  40b6d8:	cs or  esi,ebp
  40b6db:	aad    0xdf
  40b6dd:	add    al,0xf9
  40b6df:	mov    bh,0x25
  40b6e1:	jnp    0x40b6fc
  40b6e3:	xor    DWORD PTR [eax],ecx
  40b6e5:	jg     0x40b6ec
  40b6e7:	jo     0x40b768
  40b6e9:	(bad)  
  40b6ea:	lods   eax,DWORD PTR ds:[esi]
  40b6eb:	or     ch,BYTE PTR [ecx]
  40b6ed:	dec    eax
  40b6ee:	cmc    
  40b6ef:	cmp    ch,ah
  40b6f1:	lods   eax,DWORD PTR ds:[esi]
  40b6f2:	sbb    eax,0xce63dc18
  40b6f7:	fyl2x  
  40b6f9:	mov    esp,es
  40b6fb:	daa    
  40b6fc:	mov    eax,ds:0xa646dac
  40b701:	pop    ss
  40b702:	and    DWORD PTR [ebp-0x2],ebp
  40b705:	and    ecx,edi
  40b707:	arpl   si,cx
  40b709:	xchg   DWORD PTR [ebp-0x293d63b9],edx
  40b70f:	dec    eax
  40b710:	mul    DWORD PTR [eax-0x22625687]
  40b716:	jmp    0x98c54d45
  40b71b:	sti    
  40b71c:	ins    DWORD PTR es:[edi],dx
  40b71d:	test   al,0x2f
  40b71f:	in     al,0xc1
  40b721:	(bad)  
  40b722:	sub    edx,DWORD PTR [esi]
  40b724:	mov    ds:0x638003f0,eax
  40b729:	or     bh,BYTE PTR [edi-0x265e917f]
  40b72f:	or     al,0x7a
  40b731:	push   eax
  40b732:	addr16 add edi,esi
  40b735:	cwde   
  40b736:	sbb    dl,BYTE PTR [ebp-0x5dbdcaf4]
  40b73c:	xor    BYTE PTR [ebx-0x52],0x8d
  40b740:	ss loopne 0x40b756
  40b743:	out    dx,eax
  40b744:	rcl    BYTE PTR [edx],1
  40b746:	and    eax,0x2b26e2dc
  40b74b:	sbb    eax,esi
  40b74d:	push   es
  40b74e:	call   DWORD PTR [eax-0x2d]
  40b751:	das    
  40b752:	mov    esi,0x1d1db755
  40b757:	cli    
  40b758:	call   0xd62e:0x318a1b83
  40b75f:	push   ds
  40b760:	ror    DWORD PTR [eax],cl
  40b762:	or     eax,0x812f0f61
  40b767:	pushf  
  40b768:	(bad)  
  40b769:	stc    
  40b76a:	xor    ebx,DWORD PTR [ebp+0x30192f59]
  40b770:	adc    BYTE PTR [edx],al
  40b772:	das    
  40b773:	enter  0xa6c3,0x89
  40b777:	mov    WORD PTR [eax+edi*8],ss
  40b77a:	mov    dl,bh
  40b77c:	jg     0x40b76a
  40b77e:	arpl   WORD PTR [ebx],ax
  40b780:	jmp    0x7e72:0x6ac980db
  40b787:	sub    bl,BYTE PTR [ebx+0xc409b0f]
  40b78d:	(bad)  
  40b78e:	call   0xe75ab365
  40b793:	mov    WORD PTR [esp+ebx*4+0x1cede289],cs
  40b79a:	test   eax,0x6bb896b8
  40b79f:	pop    ebp
  40b7a0:	jae    0x40b7b9
  40b7a2:	shl    DWORD PTR [ebx-0x1e],1
  40b7a5:	outs   dx,DWORD PTR ds:[esi]
  40b7a6:	test   DWORD PTR [ebx],ebx
  40b7a8:	(bad)  
  40b7a9:	sub    DWORD PTR [ebx-0x2137cff6],edi
  40b7af:	shl    BYTE PTR [ecx+ecx*4-0x53a5ddf5],0x1d
  40b7b7:	push   ecx
  40b7b8:	jl     0x40b795
  40b7ba:	es cs push ds
  40b7bd:	jo     0x40b7fc
  40b7bf:	inc    ebx
  40b7c0:	push   edx
  40b7c1:	and    al,0xa0
  40b7c3:	add    esp,DWORD PTR [ecx+eax*8]
  40b7c6:	stos   DWORD PTR es:[edi],eax
  40b7c7:	push   edi
  40b7c8:	and    al,0xf3
  40b7ca:	dec    edi
  40b7cb:	pushf  
  40b7cc:	outs   dx,DWORD PTR ds:[esi]
  40b7cd:	aas    
  40b7ce:	cdq    
  40b7cf:	stos   BYTE PTR es:[edi],al
  40b7d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d1:	pusha  
  40b7d2:	jnp    0x40b795
  40b7d4:	inc    ebp
  40b7d5:	fprem  
  40b7d7:	pop    ebx
  40b7d8:	sbb    eax,0xdbdf7b10
  40b7dd:	add    DWORD PTR [ebx+0x4b],ecx
  40b7e0:	xor    BYTE PTR [ecx],0xe5
  40b7e3:	jae    0x40b7c6
  40b7e5:	lock mov db1,edx
  40b7e9:	xor    ch,BYTE PTR ds:0xf5b0090f
  40b7ef:	jle    0x40b78c
  40b7f1:	test   al,0x6a
  40b7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f4:	stos   DWORD PTR es:[edi],eax
  40b7f5:	pop    es
  40b7f6:	cmp    al,0x91
  40b7f8:	adc    eax,0x26bd4cc
  40b7fd:	and    DWORD PTR fs:[esi+0x394b58fc],eax
  40b804:	adc    dh,BYTE PTR [ebx+0x77d88e3]
  40b80a:	mov    ds:0x44f52636,al
  40b80f:	or     bl,BYTE PTR [edi]
  40b811:	dec    ebp
  40b812:	hlt    
  40b813:	xacquire xchg BYTE PTR [eax],ah
  40b816:	jp     0x40b7a8
  40b818:	push   ds
  40b819:	inc    ebx
  40b81a:	pop    ss
  40b81b:	ficomp WORD PTR [eax]
  40b81d:	test   DWORD PTR [esi+0x66f2a231],edx
  40b823:	xchg   edi,eax
  40b824:	ss out dx,al
  40b826:	scas   al,BYTE PTR es:[edi]
  40b827:	imul   DWORD PTR ss:[eax]
  40b82a:	(bad)  
  40b82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b82c:	and    DWORD PTR [ebx+0x38],ebp
  40b82f:	xor    BYTE PTR [edx-0x66],ah
  40b832:	pop    eax
  40b833:	push   ecx
  40b834:	and    edx,edi
  40b836:	jae    0x40b7bc
  40b838:	push   es
  40b839:	cmp    al,BYTE PTR [edi+0x17244738]
  40b83f:	push   edx
  40b840:	and    al,0xe7
  40b842:	dec    ebx
  40b843:	xchg   edi,eax
  40b844:	adc    edi,edx
  40b846:	and    DWORD PTR [ecx],esi
  40b848:	cli    
  40b849:	daa    
  40b84a:	push   esp
  40b84b:	fimul  DWORD PTR [ecx+0x2d2e51fc]
  40b851:	xor    eax,0xf3552a5d
  40b856:	ss inc eax
  40b858:	dec    ebx
  40b859:	cs ins BYTE PTR es:[edi],dx
  40b85b:	shl    DWORD PTR [esi-0x58],0x67
  40b85f:	jae    0x40b886
  40b861:	pop    ebx
  40b862:	sbb    DWORD PTR [ecx+0x61],0xceb15f81
  40b869:	mov    ss,WORD PTR [edx+esi*4]
  40b86c:	dec    edx
  40b86d:	push   ebx
  40b86e:	loope  0x40b818
  40b870:	xchg   edx,eax
  40b871:	scas   al,BYTE PTR es:[edi]
  40b872:	adc    al,bh
  40b874:	xlat   BYTE PTR ds:[ebx]
  40b875:	or     esp,DWORD PTR [ebp-0x537c439c]
  40b87b:	into   
  40b87c:	cs mov edi,0xfec43952
  40b882:	lea    esi,[ecx-0x396db843]
  40b888:	loop   0x40b888
  40b88a:	cmp    DWORD PTR [edx],edi
  40b88c:	inc    eax
  40b88d:	(bad)  
  40b88f:	pop    ecx
  40b890:	jge    0x40b909
  40b892:	fisttp DWORD PTR [edx+0xd]
  40b895:	not    BYTE PTR [edx+0x2e]
  40b898:	xor    ah,BYTE PTR [edx+0x2b]
  40b89b:	dec    eax
  40b89c:	inc    edx
  40b89d:	aam    0x7d
  40b89f:	or     eax,DWORD PTR [edx+0xf16cbde]
  40b8a5:	cmp    ebp,DWORD PTR [ecx]
  40b8a7:	loop   0x40b855
  40b8a9:	mov    ds:0x9b14b79a,eax
  40b8ae:	sbb    eax,0xb153aad9
  40b8b3:	cs leave 
  40b8b5:	push   0xffffff96
  40b8b7:	ror    esp,0xe6
  40b8ba:	outs   dx,BYTE PTR ds:[esi]
  40b8bb:	xlat   BYTE PTR ds:[ebx]
  40b8bc:	or     BYTE PTR [edx-0x13],ah
  40b8bf:	test   al,0x19
  40b8c1:	and    esi,ecx
  40b8c3:	push   ecx
  40b8c4:	xor    edx,edi
  40b8c6:	cdq    
  40b8c7:	imul   ecx,ebp,0xacdf3d70
  40b8cd:	cmp    ecx,edx
  40b8cf:	(bad)  
  40b8d0:	xor    eax,0x8563c618
  40b8d5:	call   0xcb02:0xb51d2382
  40b8dc:	lahf   
  40b8dd:	and    esi,ecx
  40b8df:	add    bl,0xbd
  40b8e2:	icebp  
  40b8e3:	mov    edi,0x3fefcc85
  40b8e8:	jecxz  0x40b8a3
  40b8ea:	mov    eax,ds:0xf32743b
  40b8ef:	ins    DWORD PTR es:[edi],dx
  40b8f0:	and    ch,BYTE PTR [ecx+0x337a877d]
  40b8f6:	ins    BYTE PTR es:[edi],dx
  40b8f7:	mov    bh,0xca
  40b8f9:	inc    edx
  40b8fa:	sub    eax,0x6685410
  40b8ff:	xchg   edi,eax
  40b900:	shl    DWORD PTR [esi+eax*4],0x2a
  40b904:	or     ebx,DWORD PTR [ebx+ecx*8-0x758af8d9]
  40b90b:	or     BYTE PTR [ebx],0xdc
  40b90e:	es das 
  40b910:	in     al,0x43
  40b912:	test   al,0x3b
  40b914:	push   esi
  40b915:	ja     0x40b90f
  40b917:	jne    0x40b8b9
  40b919:	cmp    DWORD PTR [ebp-0x41],0x4f
  40b91d:	(bad)  
  40b91e:	fs daa 
  40b920:	sbb    bl,BYTE PTR [edx-0x5a]
  40b923:	lahf   
  40b924:	retf   
  40b925:	fisub  WORD PTR [ecx+0x13625e9a]
  40b92b:	pop    eax
  40b92c:	or     dh,BYTE PTR [ebp-0x41]
  40b92f:	scas   eax,DWORD PTR es:[edi]
  40b930:	addr16 push ebp
  40b932:	pop    esi
  40b933:	div    DWORD PTR [edi]
  40b935:	xor    BYTE PTR [eax+0x60],ah
  40b938:	sub    DWORD PTR [edi-0x6e],edi
  40b93b:	mov    ebp,0x650f8b13
  40b940:	xor    al,0xf4
  40b942:	mov    WORD PTR [ecx-0x3f893b71],ds
  40b948:	shl    DWORD PTR [ecx-0x6d6a2fdc],cl
  40b94e:	pop    esi
  40b94f:	fild   DWORD PTR [ecx+0x7c]
  40b952:	and    al,0xcb
  40b954:	mov    dh,0x8b
  40b956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b957:	jge    0x40b989
  40b959:	out    dx,eax
  40b95a:	shr    BYTE PTR [ebx],0x3c
  40b95d:	mov    ch,0xb2
  40b95f:	aad    0x12
  40b961:	cmp    cl,0xa1
  40b964:	inc    esi
  40b965:	mov    dl,dl
  40b967:	fdiv   st(7),st
  40b969:	call   0xe334:0xe6d5f494
  40b970:	in     eax,0x70
  40b972:	mov    bh,0xe3
  40b974:	mov    bl,0xb0
  40b976:	(bad)  
  40b977:	clc    
  40b978:	sub    DWORD PTR [esp+ecx*8],0xdf006240
  40b97f:	jl     0x40b910
  40b981:	test   al,0x49
  40b983:	fbstp  TBYTE PTR [esi+0x64]
  40b986:	xor    esp,0xfb329a23
  40b98c:	or     dh,cl
  40b98e:	leave  
  40b98f:	call   0xeb6e:0x6c9829ec
  40b996:	xlat   BYTE PTR ds:[ebx]
  40b997:	sub    bl,bh
  40b999:	inc    BYTE PTR [edi+ebp*4-0x2767f614]
  40b9a0:	pop    edx
  40b9a1:	pop    ebx
  40b9a2:	mov    bl,dh
  40b9a4:	or     DWORD PTR [edi+edi*2-0x58],eax
  40b9a8:	hlt    
  40b9a9:	out    dx,eax
  40b9aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9ab:	hlt    
  40b9ac:	pusha  
  40b9ad:	call   0xc78d221d
  40b9b2:	jno    0x40b9cf
  40b9b4:	cld    
  40b9b5:	arpl   WORD PTR [ebp+edx*4+0x3f5d677c],di
  40b9bc:	bound  edi,QWORD PTR [edx]
  40b9be:	mov    edi,0x751727a0
  40b9c3:	imul   esp,ecx,0xf8335be2
  40b9c9:	iret   
  40b9ca:	retf   0x5832
  40b9cd:	xchg   ebp,eax
  40b9ce:	mov    edi,0xcd9520f2
  40b9d3:	out    0x52,eax
  40b9d5:	xchg   ebp,eax
  40b9d6:	bound  ebp,QWORD PTR ds:0x18b385a5
  40b9dc:	scas   al,BYTE PTR es:[edi]
  40b9dd:	call   0xdb1b:0x3565747
  40b9e4:	xor    bl,BYTE PTR [edi+0x4ff4faec]
  40b9ea:	push   ds
  40b9eb:	adc    DWORD PTR [eax+0x2e],esi
  40b9ee:	popf   
  40b9ef:	adc    al,0xfd
  40b9f1:	imul   edx,DWORD PTR [edx+0x2c441292],0x2ca73b56
  40b9fb:	scas   eax,DWORD PTR es:[edi]
  40b9fc:	dec    edi
  40b9fd:	dec    esp
  40b9fe:	lds    eax,FWORD PTR [ebx-0x4de39ddb]
  40ba04:	sub    BYTE PTR [edx+0x305c1bd8],cl
  40ba0a:	hlt    
  40ba0b:	xor    BYTE PTR [edx],dl
  40ba0d:	mov    ecx,0x93d76203
  40ba12:	js     0x40b9f4
  40ba14:	repz imul ecx,DWORD PTR [ecx+eax*4],0x74
  40ba19:	outs   dx,BYTE PTR ss:[esi]
  40ba1b:	sub    BYTE PTR [esi],dh
  40ba1d:	minps  xmm3,xmm2
  40ba20:	push   esp
  40ba21:	adc    eax,0x56969921
  40ba26:	mov    edi,0xbc7e83ad
  40ba2b:	daa    
  40ba2c:	jle    0x40ba3e
  40ba2e:	xchg   DWORD PTR [ebp-0x5a],ebx
  40ba31:	cmp    dl,BYTE PTR [eax]
  40ba33:	rcr    DWORD PTR [eax-0x42],cl
  40ba36:	repnz sub ebx,DWORD PTR [esi]
  40ba39:	cs dec ebx
  40ba3b:	and    edx,DWORD PTR [ecx]
  40ba3d:	xor    ah,BYTE PTR [ecx+edi*8]
  40ba40:	mov    eax,0x2dfdf4cd
  40ba45:	loop   0x40b9cb
  40ba47:	cmp    DWORD PTR [esi],eax
  40ba49:	inc    ecx
  40ba4a:	or     BYTE PTR [ebx+0x4c7377cd],0x9d
  40ba51:	jge    0x40ba13
  40ba53:	outs   dx,DWORD PTR ds:[esi]
  40ba54:	repz adc eax,0x3c5d294e
  40ba5a:	mov    ds:0x4b4f1253,al
  40ba5f:	add    al,0xd2
  40ba61:	xchg   ecx,eax
  40ba62:	test   BYTE PTR [eax-0x73],dh
  40ba65:	fcomp  DWORD PTR ds:0x31175811
  40ba6b:	lods   eax,DWORD PTR ds:[esi]
  40ba6c:	test   DWORD PTR [edx-0x19],eax
  40ba6f:	inc    esp
  40ba70:	test   DWORD PTR [ecx+0x293534bf],eax
  40ba76:	push   eax
  40ba77:	add    eax,0x87f5f96
  40ba7c:	sub    bl,BYTE PTR [ecx]
  40ba7e:	(bad)  
  40ba80:	jno    0x40bab8
  40ba82:	clc    
  40ba83:	or     ebx,DWORD PTR [ecx-0x23e4a8b6]
  40ba89:	xor    ebx,DWORD PTR [edi-0xa63fe85]
  40ba8f:	sbb    eax,0xaed1916a
  40ba94:	jae    0x40ba99
  40ba96:	mov    al,ds:0x35e6441b
  40ba9b:	(bad)  
  40ba9c:	fidiv  WORD PTR [ecx]
  40ba9e:	mov    edx,0x5319caf4
  40baa3:	pop    esi
  40baa4:	sbb    al,0x52
  40baa6:	scas   al,BYTE PTR es:[edi]
  40baa7:	out    dx,al
  40baa8:	mov    dh,0xee
  40baaa:	xchg   ebp,eax
  40baab:	cmovo  edi,DWORD PTR [ebx+eax*1+0x2d]
  40bab0:	clc    
  40bab1:	(bad)  
  40bab2:	in     al,0x33
  40bab4:	mov    DWORD PTR [esi],eax
  40bab6:	mov    dh,0x1f
  40bab8:	rcr    DWORD PTR [ebx+0x190e21a9],1
  40babe:	mov    esi,0x85123b8e
  40bac3:	mov    esp,0xe3360988
  40bac8:	aad    0xe8
  40baca:	jne    0x40ba63
  40bacc:	add    eax,0x696aceb8
  40bad1:	sub    ebx,DWORD PTR [ebx]
  40bad3:	inc    esp
  40bad4:	dec    dh
  40bad6:	out    dx,eax
  40bad7:	shr    BYTE PTR [esi],0xcd
  40bada:	mov    bl,BYTE PTR [ebx+0x6e]
  40badd:	(bad)  
  40bade:	and    esi,DWORD PTR [ebp-0x56d6c4cc]
  40bae4:	xor    al,ah
  40bae6:	cmp    DWORD PTR [edi-0x11],ecx
  40bae9:	dec    ebx
  40baea:	jns    0x40bb65
  40baec:	es or  al,ah
  40baef:	les    edi,FWORD PTR [esi+esi*8]
  40baf2:	ror    DWORD PTR [esi],cl
  40baf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baf5:	icebp  
  40baf6:	adc    esp,DWORD PTR [eax-0xc]
  40baf9:	jg     0x40bb4e
  40bafb:	mov    ah,0xfe
  40bafd:	xor    ebx,esp
  40baff:	jne    0x40bae9
  40bb01:	nop
  40bb02:	push   esp
  40bb03:	loopne 0x40bb28
  40bb05:	jno    0x40baf9
  40bb07:	jmp    0xd5f3:0x5062185d
  40bb0e:	xchg   BYTE PTR [ecx],ch
  40bb10:	ins    DWORD PTR es:[edi],dx
  40bb11:	xchg   BYTE PTR [ecx],bh
  40bb13:	xor    al,0x6d
  40bb15:	cdq    
  40bb16:	or     DWORD PTR ds:0xd555b4c9,edi
  40bb1c:	push   0x35557886
  40bb21:	(bad)  
  40bb22:	xor    DWORD PTR [ebx-0x11a452eb],edx
  40bb28:	add    DWORD PTR [ebx],0xb17b7f41
  40bb2e:	adc    al,BYTE PTR [ebx+0x7b]
  40bb31:	pop    ebp
  40bb32:	jnp    0x40bafa
  40bb34:	mov    ds,WORD PTR [esi+esi*8+0x4458f920]
  40bb3b:	add    DWORD PTR [edi-0x35],ebx
  40bb3e:	inc    esp
  40bb3f:	push   esi
  40bb40:	cmp    eax,0xd3ca3170
  40bb45:	js     0x40bb18
  40bb47:	jno    0x40bada
  40bb49:	inc    esi
  40bb4a:	xchg   esp,eax
  40bb4b:	inc    edi
  40bb4c:	bound  edx,QWORD PTR [ebp+0x30]
  40bb4f:	ds inc esp
  40bb51:	mov    dh,0xb4
  40bb53:	cmp    DWORD PTR [ecx+0x19],0x292117e1
  40bb5a:	xchg   edx,eax
  40bb5b:	jbe    0x40bbbc
  40bb5d:	xchg   edi,eax
  40bb5e:	in     al,dx
  40bb5f:	fnstenv ds:0xe698057d
  40bb65:	(bad)  
  40bb66:	mov    ds:0xdb2295dc,al
  40bb6b:	neg    ah
  40bb6d:	xchg   BYTE PTR [edx],cl
  40bb6f:	jl     0x40baff
  40bb71:	dec    edi
  40bb72:	pop    ebx
  40bb73:	popa   
  40bb74:	mov    esi,0x14003217
  40bb79:	add    DWORD PTR [esi],eax
  40bb7b:	sbb    dh,bh
  40bb7d:	enter  0x6fad,0xe9
  40bb81:	call   0x7daa09f8
  40bb86:	std    
  40bb87:	das    
  40bb88:	fdivr  QWORD PTR [ecx+0x2c76c76e]
  40bb8e:	in     eax,0xe8
  40bb90:	loopne 0x40bc00
  40bb92:	dec    esp
  40bb93:	mov    ecx,0xd128bf93
  40bb98:	cmp    DWORD PTR [ecx+0x4d],ecx
  40bb9b:	mov    bl,0xb
  40bb9d:	loop   0x40bb77
  40bb9f:	test   DWORD PTR [edx-0x4299e325],ecx
  40bba5:	inc    esp
  40bba6:	test   eax,0x4ee4a5b1
  40bbab:	adc    al,0x44
  40bbad:	or     bh,ah
  40bbaf:	aas    
  40bbb0:	popa   
  40bbb1:	or     al,0xc8
  40bbb3:	stos   BYTE PTR es:[edi],al
  40bbb4:	pop    esp
  40bbb5:	bound  edi,QWORD PTR [ebx]
  40bbb7:	clc    
  40bbb8:	es pushf 
  40bbba:	mov    edx,0xee58b31e
  40bbbf:	or     eax,0xc4c7f476
  40bbc4:	add    al,0xd7
  40bbc6:	add    DWORD PTR [edx],0x38
  40bbc9:	jle    0x40bb54
  40bbcb:	nop
  40bbcc:	loop   0x40bc43
  40bbce:	jb     0x40bc0e
  40bbd0:	jle    0x40bb6b
  40bbd2:	in     eax,dx
  40bbd3:	stos   DWORD PTR es:[edi],eax
  40bbd4:	inc    ecx
  40bbd5:	mov    edi,0x68db78d
  40bbda:	adc    al,0x4
  40bbdc:	fsubr  st(5),st
  40bbde:	sbb    ah,0xed
  40bbe1:	pop    ds
  40bbe2:	jns    0x40bc2f
  40bbe4:	cmp    al,0x47
  40bbe6:	cmp    edi,DWORD PTR [esi+0x5f]
  40bbe9:	sti    
  40bbea:	ss sub al,0x99
  40bbed:	les    edi,FWORD PTR ds:0x87a35ca1
  40bbf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbf4:	imul   esi,DWORD PTR [edi+ebx*4+0x78222c2a],0xaa9a1dbb
  40bbff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc00:	fisub  WORD PTR [ebp-0x5cf1f651]
  40bc06:	mov    ebx,0xd8c1a88e
  40bc0b:	das    
  40bc0c:	cmp    al,0xda
  40bc0e:	cdq    
  40bc0f:	(bad)  
  40bc10:	repnz pop esp
  40bc12:	sub    BYTE PTR [esi-0x551329e5],cl
  40bc18:	bound  edi,QWORD PTR [esi]
  40bc1a:	dec    eax
  40bc1b:	call   0x2181e54f
  40bc20:	push   0x94d3e277
  40bc25:	mov    al,ds:0x2e5503d4
  40bc2a:	dec    ebp
  40bc2b:	push   edi
  40bc2c:	fwait
  40bc2d:	mov    esi,0xbb65cf70
  40bc32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc33:	pop    edx
  40bc34:	sub    al,0xdf
  40bc36:	mov    bl,0x16
  40bc38:	lea    esp,[esi-0x47]
  40bc3b:	aam    0x5e
  40bc3d:	sbb    eax,0xbf1bd266
  40bc42:	out    dx,al
  40bc43:	and    eax,0xc4a55b0c
  40bc48:	sub    ch,cl
  40bc4a:	push   ds
  40bc4b:	mov    edi,0x3e70088f
  40bc50:	mov    ecx,0x7c5b91f1
  40bc55:	sbb    DWORD PTR [ebp+0x4c],edx
  40bc58:	outs   dx,DWORD PTR ds:[esi]
  40bc59:	xor    al,0xd5
  40bc5b:	jmp    0xd59d:0xa87a5dd3
  40bc62:	sti    
  40bc63:	(bad)  [esi+0x19]
  40bc66:	mov    al,0x7
  40bc68:	iret   
  40bc69:	pop    edi
  40bc6a:	jp     0x40bcbe
  40bc6c:	or     ch,BYTE PTR [esi-0x11cf623]
  40bc72:	and    DWORD PTR [edi],ebx
  40bc74:	lahf   
  40bc75:	mov    eax,0x8f98c53a
  40bc7a:	imul   eax,ebx,0x29
  40bc7d:	pusha  
  40bc7e:	imul   DWORD PTR [edi]
  40bc80:	aam    0xac
  40bc82:	cmp    al,0x75
  40bc84:	ds cmp bh,bh
  40bc87:	mov    al,ds:0x589e0ebc
  40bc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc8d:	iret   
  40bc8e:	mov    ch,0x33
  40bc90:	and    edx,ecx
  40bc92:	call   FWORD PTR [edx-0x2b2c17d4]
  40bc98:	and    esi,DWORD PTR [esi-0x70345ec4]
  40bc9e:	or     dl,BYTE PTR [ecx-0x79]
  40bca1:	leave  
  40bca2:	popf   
  40bca3:	sbb    esp,DWORD PTR [eax+0xe510208]
  40bca9:	outs   dx,BYTE PTR ds:[esi]
  40bcaa:	iret   
  40bcab:	cmp    DWORD PTR [ebp-0x6b672c89],0x12fbb225
  40bcb5:	adc    al,BYTE PTR [eax]
  40bcb7:	mov    ch,0xc5
  40bcb9:	clc    
  40bcba:	dec    ebx
  40bcbb:	lds    edx,FWORD PTR [eax-0x10]
  40bcbe:	sbb    bl,ah
  40bcc0:	xchg   ecx,eax
  40bcc1:	mov    al,ds:0x32b28fd5
  40bcc6:	cmp    eax,0xfb8c5b7e
  40bccb:	lock dec ebx
  40bcce:	imul   edi,DWORD PTR [esi],0xffffffdd
  40bcd1:	outs   dx,BYTE PTR ds:[esi]
  40bcd2:	xchg   ebx,eax
  40bcd3:	arpl   WORD PTR [esp+ecx*1],di
  40bcd6:	test   esp,esp
  40bcd8:	popf   
  40bcd9:	adc    DWORD PTR [ebx+0x74],edx
  40bcdc:	stos   BYTE PTR es:[edi],al
  40bcdd:	int3   
  40bcde:	retf   0xec22
  40bce1:	dec    esi
  40bce2:	add    eax,0x84f30af9
  40bce7:	lods   eax,DWORD PTR ds:[esi]
  40bce8:	cld    
  40bce9:	jmp    0x90823a60
  40bcee:	mov    gs,WORD PTR [edx-0x3bfe3c2]
  40bcf4:	push   esp
  40bcf5:	fs aaa 
  40bcf7:	mov    esi,DWORD PTR [ecx-0x47]
  40bcfa:	jns    0x40bcf4
  40bcfc:	leave  
  40bcfd:	mov    ds:0x603d507b,al
  40bd02:	jbe    0x40bcd3
  40bd04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd05:	call   0x2478a050
  40bd0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd0b:	dec    ebx
  40bd0c:	sub    DWORD PTR [esi-0x1fb6afa],esp
  40bd12:	mov    bl,0xd1
  40bd14:	dec    ebp
  40bd15:	mov    ch,0x96
  40bd17:	inc    ebp
  40bd18:	inc    esp
  40bd19:	(bad)  
  40bd1a:	addr16 jb 0x40bca5
  40bd1d:	adc    eax,0xe38334d2
  40bd22:	test   bl,ah
  40bd24:	pand   mm2,QWORD PTR [edx+0x4f]
  40bd28:	push   0x1f6eeed3
  40bd2d:	inc    edx
  40bd2e:	fldcw  WORD PTR [ecx+0x68f693dd]
  40bd34:	xor    dl,dh
  40bd36:	adc    edx,DWORD PTR [edx+esi*2+0x279759f2]
  40bd3d:	pop    ebx
  40bd3e:	fimul  DWORD PTR [esp+ebp*2-0x1055be04]
  40bd45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd46:	les    eax,FWORD PTR [edi-0x4]
  40bd49:	and    cl,BYTE PTR [esi-0x2d]
  40bd4c:	pop    es
  40bd4d:	cs retf 
  40bd4f:	imul   ebp,DWORD PTR ds:0xc3f9f3c6,0xffffffcc
  40bd56:	jecxz  0x40bdca
  40bd58:	test   al,0xca
  40bd5a:	xchg   DWORD PTR [ecx+0x1d],ebp
  40bd5d:	mov    dh,0x56
  40bd5f:	and    eax,0x69927df9
  40bd64:	cmp    cl,BYTE PTR [edx+ebx*8+0x14ca548f]
  40bd6b:	fistp  WORD PTR [eax]
  40bd6d:	mov    ds:0xe52d48fd,al
  40bd72:	add    DWORD PTR [edx-0x6],esi
  40bd75:	mov    eax,ebx
  40bd77:	push   ebp
  40bd78:	shr    al,cl
  40bd7a:	out    dx,al
  40bd7b:	pop    eax
  40bd7c:	test   ebp,ebp
  40bd7e:	and    ch,0x57
  40bd81:	mov    eax,ds:0x68b807f6
  40bd86:	xor    BYTE PTR [ebx],dh
  40bd88:	cmp    eax,0xb6948760
  40bd8d:	lea    ebx,ds:0xe9f5bd3a
  40bd93:	int3   
  40bd94:	jg     0x40bd3c
  40bd96:	cmp    al,0x7e
  40bd98:	xchg   edi,eax
  40bd99:	out    0xf3,eax
  40bd9b:	es lock mov dh,0x9d
  40bd9f:	repz add BYTE PTR [eax-0x58ec15f],ch
  40bda6:	in     eax,dx
  40bda7:	rol    BYTE PTR [ebx-0x24],cl
  40bdaa:	out    0xe7,al
  40bdac:	mov    dh,0x9e
  40bdae:	loopne 0x40bd91
  40bdb0:	in     eax,dx
  40bdb1:	and    eax,0x53b052da
  40bdb6:	push   es
  40bdb7:	mov    dl,0x1d
  40bdb9:	pushf  
  40bdba:	mov    esi,0xe107ee04
  40bdbf:	sbb    ah,BYTE PTR [ebp+eiz*4-0x1edaa9c6]
  40bdc6:	clc    
  40bdc7:	or     eax,0x35bfda63
  40bdcc:	xor    DWORD PTR [eax+0x7b],0x6425a88b
  40bdd3:	sbb    bl,ch
  40bdd5:	sub    esp,esp
  40bdd7:	in     al,0x6a
  40bdd9:	adc    al,0x5e
  40bddb:	xor    edi,edi
  40bddd:	aad    0x23
  40bddf:	and    DWORD PTR [edx+ebp*8-0x68],edi
  40bde3:	pop    cx
  40bde5:	xor    al,0xf1
  40bde7:	int    0xe7
  40bde9:	pop    ebx
  40bdea:	sbb    cl,ah
  40bdec:	retf   0x20e
  40bdef:	mov    edi,0x6244c595
  40bdf4:	or     dh,cl
  40bdf6:	dec    ebp
  40bdf7:	pop    edi
  40bdf8:	ins    DWORD PTR es:[edi],dx
  40bdf9:	xchg   ebx,eax
  40bdfa:	mov    ebx,0xbbea11a4
  40bdff:	(bad)  
  40be00:	lds    esp,FWORD PTR [esi-0x35]
  40be03:	icebp  
  40be04:	mov    eax,ds:0xa001d16a
  40be09:	gs jns 0x40be4f
  40be0c:	mov    eax,0xe0eb1b3d
  40be11:	xor    DWORD PTR [ebx-0x512d25c6],edi
  40be17:	xchg   edx,eax
  40be18:	xchg   BYTE PTR [ebp+0x5c],bl
  40be1b:	jl     0x40be2b
  40be1d:	sbb    ch,BYTE PTR [ebp-0x39]
  40be20:	pop    eax
  40be21:	push   ds
  40be22:	mov    ch,0x2f
  40be24:	addr16 xchg edi,eax
  40be26:	push   eax
  40be27:	adc    al,0xd5
  40be29:	mov    ds:0x6c037a73,eax
  40be2e:	cmp    eax,0xb69828d1
  40be33:	hlt    
  40be34:	leave  
  40be35:	pop    ecx
  40be36:	mov    esi,0xaf0c34f1
  40be3b:	mov    bh,0x13
  40be3d:	sbb    ebx,ebp
  40be3f:	add    dl,cl
  40be41:	push   edi
  40be42:	jmp    0x740e:0xd88c68f6
  40be49:	cmp    BYTE PTR [edi+0x63b47e68],al
  40be4f:	jb     0x40bde5
  40be51:	jl     0x40be5e
  40be53:	ret    
  40be54:	dec    edi
  40be55:	jmp    0x40bdd7
  40be57:	sar    bh,0x3e
  40be5a:	adc    ch,bl
  40be5c:	loope  0x40bea1
  40be5e:	push   ecx
  40be5f:	int    0x51
  40be61:	adc    BYTE PTR [ebp+0x3d],0x50
  40be65:	sbb    ah,cl
  40be67:	shr    eax,1
  40be69:	loopne 0x40be68
  40be6b:	repnz mov ch,0x86
  40be6e:	mov    ecx,0x996b06c2
  40be73:	or     esp,DWORD PTR [edx+ecx*8+0x36727623]
  40be7a:	mov    ah,0x55
  40be7c:	mov    ch,0xb
  40be7e:	sbb    dl,BYTE PTR [edx+0x60e617f9]
  40be84:	aam    0x8a
  40be86:	arpl   WORD PTR [ebp+0x2e],si
  40be89:	push   cs
  40be8a:	aad    0xa7
  40be8c:	sub    eax,DWORD PTR [esp+eax*4+0x7902ba10]
  40be93:	sub    BYTE PTR [edi+0x5a91d27a],al
  40be99:	or     al,0xbb
  40be9b:	mov    esi,0x5060c78a
  40bea0:	sbb    bh,ch
  40bea2:	sbb    esi,ebp
  40bea4:	mov    BYTE PTR [edx],dh
  40bea6:	icebp  
  40bea7:	mov    al,0x19
  40bea9:	scas   al,BYTE PTR es:[edi]
  40beaa:	lods   eax,DWORD PTR ds:[esi]
  40beab:	add    BYTE PTR [edx-0x36],bl
  40beae:	ret    
  40beaf:	jmp    0xaa1c:0xf93fd24f
  40beb6:	jmp    0x4dac:0x7039826e
  40bebd:	lea    eax,[esi]
  40bebf:	lock sub DWORD PTR [edx],esp
  40bec2:	mov    ch,0xb9
  40bec4:	sub    bh,dl
  40bec6:	add    al,BYTE PTR [esp+eax*8]
  40bec9:	je     0x40bf1c
  40becb:	dec    edi
  40becc:	mov    edx,0xdb8a3797
  40bed1:	pusha  
  40bed2:	(bad)  
  40bed4:	jns    0x40bf09
  40bed6:	dec    eax
  40bed7:	jmp    0x40bea4
  40bed9:	cdq    
  40beda:	xchg   ebx,eax
  40bedb:	push   esi
  40bedc:	and    DWORD PTR [ebx+0x2cf3a6d5],0x1a
  40bee3:	inc    ebx
  40bee4:	push   esp
  40bee5:	imul   esi,DWORD PTR [edi],0x51366a8
  40beeb:	fsub   DWORD PTR [ebx+0x4c]
  40beee:	add    BYTE PTR [ecx],dh
  40bef0:	call   0xfc15:0xaab74153
  40bef7:	and    edi,DWORD PTR [ecx]
  40bef9:	stos   DWORD PTR es:[edi],eax
  40befa:	xchg   edx,eax
  40befb:	add    BYTE PTR [esi-0x87feb54],bh
  40bf01:	ud1    edx,DWORD PTR [eax-0x35]
  40bf05:	call   0xe09db4a7
  40bf0a:	push   0xf6f211a0
  40bf0f:	shl    BYTE PTR [eax-0x54],cl
  40bf12:	jle    0x40becc
  40bf14:	ins    DWORD PTR es:[edi],dx
  40bf15:	pop    eax
  40bf16:	(bad)  
  40bf17:	ret    
  40bf18:	mov    eax,0x6102c447
  40bf1d:	mov    ch,0x80
  40bf1f:	fstp   TBYTE PTR [esp+esi*4-0xf3ed5e9]
  40bf26:	xor    BYTE PTR [edi],0x60
  40bf29:	gs in  eax,dx
  40bf2b:	jbe    0x40bfa0
  40bf2d:	jecxz  0x40bf5c
  40bf2f:	in     al,0xd4
  40bf31:	retf   
  40bf32:	mov    ds:0x95b54163,eax
  40bf37:	idiv   dl
  40bf39:	push   ds
  40bf3a:	mov    eax,ds:0xa225159a
  40bf3f:	mov    al,ds:0x3869ecd2
  40bf44:	aad    0xd5
  40bf46:	(bad)  
  40bf47:	fninit 
  40bf49:	das    
  40bf4a:	clc    
  40bf4b:	popa   
  40bf4c:	ss std 
  40bf4e:	push   eax
  40bf4f:	or     DWORD PTR [esp+esi*2-0x1022ee56],ebx
  40bf56:	sbb    al,BYTE PTR [ecx]
  40bf58:	cmp    bl,BYTE PTR [esi+eax*8]
  40bf5b:	cmp    ebp,DWORD PTR [ecx-0x34]
  40bf5e:	cmp    esi,DWORD PTR [esi+eiz*8+0x35bc8247]
  40bf65:	fstp   TBYTE PTR [esi+0x5c2cff8e]
  40bf6b:	xchg   BYTE PTR [edi],cl
  40bf6d:	jne    0x40bfaf
  40bf6f:	aad    0x23
  40bf71:	sahf   
  40bf72:	jne    0x40bef5
  40bf74:	xchg   esp,eax
  40bf75:	mov    ebx,0xe206080c
  40bf7a:	jb     0x40bf65
  40bf7c:	sti    
  40bf7d:	cmp    al,BYTE PTR [ecx]
  40bf7f:	(bad)  
  40bf80:	loopne 0x40bf2b
  40bf82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf83:	mov    bh,0xbb
  40bf85:	push   esi
  40bf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf87:	cmp    al,0x50
  40bf89:	stos   DWORD PTR es:[di],eax
  40bf8b:	xor    BYTE PTR [ebx-0x5b54bcf1],cl
  40bf91:	pop    ecx
  40bf92:	mov    dh,0x2e
  40bf94:	mov    ds:0xa6a5a8c3,eax
  40bf99:	mov    ebp,0x3746da0d
  40bf9e:	ret    0x734e
  40bfa1:	fnstenv [edx-0x514d07f7]
  40bfa7:	or     al,0x25
  40bfa9:	fdiv   st(2),st
  40bfab:	dec    eax
  40bfac:	jne    0x40bf92
  40bfae:	stos   DWORD PTR es:[edi],eax
  40bfaf:	rcr    BYTE PTR [ecx],cl
  40bfb1:	sbb    al,0xfd
  40bfb3:	jl     0x40bfd0
  40bfb5:	xor    ecx,DWORD PTR [esi-0x3afacc24]
  40bfbb:	mov    esp,DWORD PTR [ebx-0x5c]
  40bfbe:	ror    cl,cl
  40bfc0:	cld    
  40bfc1:	jl     0x40bfff
  40bfc3:	xchg   esi,eax
  40bfc4:	pop    esp
  40bfc5:	mov    esi,edx
  40bfc7:	xor    al,0x9c
  40bfc9:	inc    edi
  40bfca:	mov    edi,0x727a5fca
  40bfcf:	(bad)  
  40bfd0:	int3   
  40bfd1:	add    DWORD PTR [ebx],edx
  40bfd3:	lock jnp 0x40c040
  40bfd6:	mov    es,WORD PTR [esi-0x10]
  40bfd9:	in     al,dx
  40bfda:	stc    
  40bfdb:	push   esp
  40bfdc:	sbb    al,0xd4
  40bfde:	dec    ebx
  40bfdf:	add    eax,0x4a97b3e8
  40bfe4:	sub    eax,0xd4dbf7a2
  40bfe9:	sbb    BYTE PTR [edi+0x1efd233f],ch
  40bfef:	arpl   WORD PTR [ecx-0x5a5d0a68],sp
  40bff5:	inc    esp
  40bff6:	mov    cl,0xbe
  40bff8:	lds    ecx,FWORD PTR [ebp-0x2fc4e382]
  40bffe:	push   edx
  40bfff:	dec    ecx
  40c000:	or     esp,ebp
  40c002:	mov    WORD PTR [edi-0x748b0774],es
  40c008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c009:	sbb    dl,bh
  40c00b:	std    
  40c00c:	pop    ebp
  40c00d:	ja     0x12ec067f
  40c013:	and    BYTE PTR [edx],0x67
  40c016:	xchg   ebp,eax
  40c017:	mov    eax,ds:0xff420af7
  40c01c:	xchg   esp,eax
  40c01d:	jmp    0x82fbb6d
  40c022:	rcr    DWORD PTR ds:0xaef7a898,0x32
  40c029:	dec    edi
  40c02a:	fdivr  DWORD PTR [esi-0x748e6e12]
  40c030:	clc    
  40c031:	sbb    edi,ebx
  40c033:	cmp    eax,0xdcf654b2
  40c038:	jnp    0x40bfc0
  40c03a:	icebp  
  40c03b:	scas   eax,DWORD PTR es:[edi]
  40c03c:	fiadd  WORD PTR [eax]
  40c03e:	(bad)  
  40c03f:	hlt    
  40c040:	out    dx,al
  40c041:	ds jle 0x40bfd7
  40c044:	cmp    BYTE PTR [ecx+0x31],0x8b
  40c048:	aad    0xbe
  40c04a:	pop    esi
  40c04b:	sbb    ch,dl
  40c04d:	mov    DWORD PTR [ecx-0x52254a3d],esi
  40c053:	xchg   ecx,eax
  40c054:	(bad)  
  40c055:	mov    es,WORD PTR [ecx+eax*4]
  40c058:	mov    dl,0xf4
  40c05a:	mov    dh,0x56
  40c05c:	jge    0x40c0a8
  40c05e:	lods   eax,DWORD PTR ds:[esi]
  40c05f:	jbe    0x40c0a6
  40c061:	jecxz  0x40c019
  40c063:	dec    ecx
  40c064:	push   edi
  40c065:	(bad)  
  40c066:	lods   eax,DWORD PTR ds:[esi]
  40c067:	fisub  WORD PTR ds:[ecx+0x18]
  40c06b:	add    edx,DWORD PTR [ebx+0x70]
  40c06e:	ret    
  40c06f:	jns    0x40c0c9
  40c071:	sti    
  40c072:	test   BYTE PTR [ecx+0x1f],dl
  40c075:	xlat   BYTE PTR ds:[ebx]
  40c076:	loop   0x40c004
  40c078:	push   eax
  40c079:	mov    eax,0x4c7c90d4
  40c07e:	out    0x5a,al
  40c080:	xchg   esi,eax
  40c081:	fsubr  QWORD PTR [ebp+0x65]
  40c084:	or     DWORD PTR [eax+0x41],esp
  40c087:	stc    
  40c088:	add    DWORD PTR [ebp+0x3e],0x2d648407
  40c08f:	push   esp
  40c090:	cwde   
  40c091:	fisttp WORD PTR [ebp-0x28]
  40c094:	fst    QWORD PTR [edi+0x683662e6]
  40c09a:	inc    ecx
  40c09b:	dec    eax
  40c09c:	test   BYTE PTR [eax+0x51],al
  40c09f:	mov    ebx,0xcce258
  40c0a4:	sbb    eax,0xbbcdf1a9
  40c0a9:	mov    esp,0x5d8c892d
  40c0ae:	xchg   esi,eax
  40c0af:	icebp  
  40c0b0:	mov    ebp,0xc69484ad
  40c0b5:	inc    eax
  40c0b6:	sbb    BYTE PTR es:[ebx-0x27],cl
  40c0ba:	in     al,dx
  40c0bb:	dec    esp
  40c0bc:	mov    al,ds:0x4cc2fbdc
  40c0c1:	daa    
  40c0c2:	stos   BYTE PTR es:[edi],al
  40c0c3:	xchg   DWORD PTR [ebp-0x1d],edi
  40c0c6:	xchg   esi,eax
  40c0c7:	aad    0x84
  40c0c9:	inc    ecx
  40c0ca:	and    cl,BYTE PTR [edx-0x7966865]
  40c0d0:	or     eax,0x4a0dc92a
  40c0d5:	xor    ebp,DWORD PTR [eax+esi*8+0x1165cc31]
  40c0dc:	and    DWORD PTR ds:0x290e49cb,edi
  40c0e2:	xor    ah,BYTE PTR [edi-0x6b44015f]
  40c0e8:	sahf   
  40c0e9:	ret    
  40c0ea:	out    0x64,al
  40c0ec:	lea    edi,[edi+0x35]
  40c0ef:	repz jmp 0xdc1b257e
  40c0f5:	fimul  DWORD PTR [eax-0x25]
  40c0f8:	test   BYTE PTR [ecx-0x771a5c3e],bh
  40c0fe:	push   esi
  40c0ff:	cli    
  40c100:	mov    ecx,ds
  40c102:	jl     0x40c14f
  40c104:	adc    eax,0x74fff132
  40c109:	xchg   esi,eax
  40c10a:	cmp    al,0xdc
  40c10c:	jno    0x40c16f
  40c10e:	jecxz  0x40c098
  40c110:	test   ch,ah
  40c112:	pop    eax
  40c113:	sub    BYTE PTR [ecx],dh
  40c115:	out    0x7c,al
  40c117:	hlt    
  40c118:	in     al,dx
  40c119:	aad    0xa1
  40c11b:	fwait
  40c11c:	mov    eax,0x3aeb753e
  40c121:	dec    edx
  40c122:	pop    ecx
  40c123:	scas   al,BYTE PTR es:[edi]
  40c124:	aam    0xa5
  40c126:	add    BYTE PTR [esi-0x49],ah
  40c129:	aam    0x49
  40c12b:	cmp    edx,DWORD PTR [ebp+0x61]
  40c12e:	rol    BYTE PTR [edx+0x28848f48],1
  40c134:	mov    dl,0x4d
  40c136:	bound  esi,QWORD PTR [edi+0x7f]
  40c139:	jo     0x40c138
  40c13b:	or     dh,0xd2
  40c13e:	ins    BYTE PTR es:[edi],dx
  40c13f:	cmp    dl,ah
  40c141:	ins    DWORD PTR es:[edi],dx
  40c142:	mov    ds:0xf794c78a,eax
  40c147:	js     0x40c1b1
  40c149:	jb     0x40c0da
  40c14b:	or     BYTE PTR [edi-0x7e24395e],al
  40c151:	jno    0x40c1ce
  40c153:	nop
  40c154:	mov    ch,0x73
  40c156:	mov    es:0x9904b31,al
  40c15c:	dec    ebx
  40c15d:	sbb    eax,0x7adb9cc2
  40c162:	sbb    eax,0xa69fa957
  40c167:	sub    edx,DWORD PTR [edx]
  40c169:	dec    esp
  40c16a:	mov    ebx,0xdb5dc90b
  40c16f:	jne    0x40c193
  40c171:	sbb    DWORD PTR [esi-0x4f48ca77],ecx
  40c177:	lods   eax,DWORD PTR ds:[esi]
  40c178:	cmp    cl,BYTE PTR ds:0x51e5428e
  40c17e:	add    eax,0x21a4b4f5
  40c183:	mov    ch,0x1b
  40c185:	repnz and DWORD PTR [ebx+0x1a],eax
  40c189:	pop    eax
  40c18a:	mov    eax,0x49d9e800
  40c18f:	je     0x40c122
  40c191:	fs mov esp,0x251dde53
  40c197:	and    dh,0x9a
  40c19a:	cdq    
  40c19b:	xchg   esp,eax
  40c19c:	lahf   
  40c19d:	rcr    BYTE PTR [esi-0x19],0xea
  40c1a1:	jl     0x40c1d9
  40c1a3:	cld    
  40c1a4:	inc    edi
  40c1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1a6:	repnz dec edx
  40c1a8:	dec    eax
  40c1a9:	cdq    
  40c1aa:	pop    ss
  40c1ab:	arpl   bp,cx
  40c1ad:	outs   dx,BYTE PTR ds:[esi]
  40c1ae:	mov    cl,BYTE PTR es:[esi+esi*8+0x5c]
  40c1b3:	push   eax
  40c1b4:	in     al,dx
  40c1b5:	call   FWORD PTR ds:[edi]
  40c1b8:	sbb    BYTE PTR ds:0xe0a73a8f,bl
  40c1be:	pushf  
  40c1bf:	(bad)  
  40c1c0:	stos   DWORD PTR es:[edi],eax
  40c1c1:	iret   
  40c1c2:	push   esi
  40c1c3:	jmp    0x77c8:0x2195d2f9
  40c1ca:	cmp    al,0xde
  40c1cc:	cmc    
  40c1cd:	push   esi
  40c1ce:	popa   
  40c1cf:	sub    eax,0xb445c51c
  40c1d4:	out    dx,al
  40c1d5:	pop    ds
  40c1d6:	in     al,dx
  40c1d7:	add    al,0x84
  40c1d9:	std    
  40c1da:	jecxz  0x40c188
  40c1dc:	(bad)  
  40c1dd:	stos   DWORD PTR es:[edi],eax
  40c1de:	scas   eax,DWORD PTR es:[edi]
  40c1df:	(bad)  
  40c1e1:	iret   
  40c1e2:	add    DWORD PTR [ebx-0x20f6ced2],edx
  40c1e8:	in     al,dx
  40c1e9:	ins    DWORD PTR es:[edi],dx
  40c1ea:	lahf   
  40c1eb:	push   es
  40c1ec:	xchg   ecx,eax
  40c1ed:	pop    ds
  40c1ee:	lock dec ebp
  40c1f0:	or     ebx,esp
  40c1f2:	and    ebx,DWORD PTR [esi+edi*8-0x42]
  40c1f6:	adc    ebx,DWORD PTR [edi-0x34]
  40c1f9:	or     DWORD PTR [ebx],edx
  40c1fb:	cmp    cl,BYTE PTR [edi+0x4e]
  40c1fe:	xor    ch,BYTE PTR [edx]
  40c200:	and    eax,0x587aeb04
  40c205:	mov    edi,DWORD PTR [esi-0x357097b3]
  40c20b:	(bad)  
  40c20c:	cmc    
  40c20d:	sar    DWORD PTR [esi-0x2c13cfb7],cl
  40c213:	jmp    0xf3f2bdd3
  40c218:	outs   dx,DWORD PTR ds:[esi]
  40c219:	and    esi,DWORD PTR [edi]
  40c21b:	(bad)  
  40c21c:	out    dx,al
  40c21d:	jb     0x40c282
  40c21f:	iret   
  40c220:	cmp    ch,BYTE PTR [edi-0x4a]
  40c223:	clc    
  40c224:	adc    BYTE PTR [ebp-0x1f5e6ce8],bh
  40c22a:	add    edx,ebx
  40c22c:	femms  
  40c22e:	hlt    
  40c22f:	in     eax,0x6e
  40c231:	sub    ebx,DWORD PTR [ebp-0x21]
  40c234:	push   0x70
  40c236:	jmp    0x681b3033
  40c23b:	mov    dh,0x60
  40c23d:	xor    al,0x82
  40c23f:	adc    BYTE PTR [eax-0x3bd27b2f],bl
  40c245:	sub    al,0x5e
  40c247:	call   0xa769019c
  40c24c:	or     edx,ecx
  40c24e:	out    0x7a,eax
  40c250:	and    al,0xec
  40c252:	(bad)  
  40c253:	push   edi
  40c254:	jecxz  0x40c29c
  40c256:	hlt    
  40c257:	fidiv  DWORD PTR [eax-0x6bc6ad80]
  40c25d:	inc    eax
  40c25e:	jp     0x40c2d4
  40c260:	jecxz  0x40c293
  40c262:	in     al,dx
  40c263:	sar    DWORD PTR [edi+0x3a],cl
  40c266:	inc    ebp
  40c267:	jo     0x40c293
  40c269:	jmp    0x6758ad52
  40c26e:	fdivr  st(7),st
  40c270:	popa   
  40c271:	add    eax,0x16df9077
  40c276:	inc    edi
  40c277:	(bad)  
  40c278:	pop    ebp
  40c279:	xor    al,0xf0
  40c27b:	mov    dh,0xc8
  40c27d:	fmul   QWORD PTR [edi-0x3fe43979]
  40c283:	xor    al,0xda
  40c285:	sub    al,dl
  40c287:	das    
  40c288:	jmp    0xf1b8:0xc080ba8e
  40c28f:	jmp    0x76d3:0xf1ac1700
  40c296:	ins    DWORD PTR es:[edi],dx
  40c297:	adc    dl,dh
  40c299:	add    dh,BYTE PTR [esp]
  40c29c:	inc    esi
  40c29d:	in     eax,dx
  40c29e:	cs cwde 
  40c2a0:	dec    esi
  40c2a1:	mov    esp,0x98026437
  40c2a6:	imul   ebp,DWORD PTR [edi],0x27
  40c2a9:	pop    esi
  40c2aa:	test   al,0x94
  40c2ac:	lods   eax,DWORD PTR ds:[esi]
  40c2ad:	inc    eax
  40c2ae:	mov    eax,ds:0xc1d44096
  40c2b3:	dec    ecx
  40c2b4:	inc    esp
  40c2b5:	pop    ebp
  40c2b6:	(bad)  
  40c2b8:	inc    esp
  40c2b9:	jbe    0x40c2e1
  40c2bb:	ret    0x697b
  40c2be:	icebp  
  40c2bf:	jo     0x40c2d6
  40c2c1:	pop    ecx
  40c2c2:	jbe    0x40c324
  40c2c4:	xchg   esp,eax
  40c2c5:	(bad)  
  40c2c6:	lahf   
  40c2c7:	mov    esp,0xaaa01d9e
  40c2cc:	clc    
  40c2cd:	jmp    0xf171:0xce29770a
  40c2d4:	(bad)  
  40c2d5:	mov    eax,ds:0x50d1e475
  40c2da:	mov    ds:0x739a0cc,eax
  40c2df:	into   
  40c2e0:	and    ebx,edi
  40c2e2:	dec    eax
  40c2e3:	inc    ebx
  40c2e4:	test   eax,0x9c0afa5d
  40c2e9:	leave  
  40c2ea:	bound  esp,QWORD PTR [ecx+0x15]
  40c2ed:	shl    BYTE PTR [edx+0x20123718],cl
  40c2f3:	dec    edi
  40c2f4:	je     0x40c35b
  40c2f6:	shl    ebx,cl
  40c2f8:	and    eax,0xd55748e8
  40c2fd:	cmp    edi,esi
  40c2ff:	jbe    0x40c2ff
  40c301:	lds    esi,FWORD PTR [edi-0x48f8ff8d]
  40c307:	lods   al,BYTE PTR ds:[esi]
  40c308:	add    dl,dl
  40c30a:	jp     0x40c335
  40c30c:	cli    
  40c30d:	idiv   BYTE PTR [eax-0x277e0917]
  40c313:	lock push es
  40c315:	rcl    BYTE PTR [edx+0x32eed81],0xf
  40c31c:	pushf  
  40c31d:	das    
  40c31e:	fprem  
  40c320:	sti    
  40c321:	dec    esi
  40c322:	mov    eax,ds:0xcfa43c54
  40c327:	in     al,0xc
  40c329:	les    esp,FWORD PTR [edx]
  40c32b:	push   ebp
  40c32c:	lea    eax,[edi]
  40c32e:	xor    eax,0xa1738a56
  40c333:	xchg   bh,ch
  40c335:	cmp    esi,DWORD PTR [edx]
  40c337:	fmulp  st(1),st
  40c339:	mov    dl,0xeb
  40c33b:	jb     0x40c308
  40c33d:	pop    esp
  40c33e:	sbb    eax,edx
  40c340:	cmp    eax,0x284e137b
  40c345:	push   edi
  40c346:	sbb    bh,0x4b
  40c349:	shr    esp,0x98
  40c34c:	add    eax,0xedd42711
  40c351:	into   
  40c352:	stos   DWORD PTR es:[edi],eax
  40c353:	push   esi
  40c354:	xchg   ebp,eax
  40c355:	add    al,0x3e
  40c357:	ds push esi
  40c359:	pop    ss
  40c35a:	push   edx
  40c35b:	bound  ebp,QWORD PTR [eax-0x2f]
  40c35e:	xor    edx,DWORD PTR [ecx]
  40c360:	dec    eax
  40c361:	lds    ecx,FWORD PTR [edx]
  40c363:	inc    edi
  40c364:	sahf   
  40c365:	(bad)  
  40c366:	jecxz  0x40c341
  40c368:	mov    dl,0x65
  40c36a:	dec    ebx
  40c36b:	lds    edx,FWORD PTR [edi+0x1]
  40c36e:	daa    
  40c36f:	pop    ecx
  40c370:	les    ebx,FWORD PTR [esi-0x15]
  40c373:	sub    al,0x5b
  40c375:	pop    es
  40c376:	dec    edx
  40c377:	mov    edi,0xee111792
  40c37c:	jo     0x40c397
  40c37e:	scas   eax,DWORD PTR es:[edi]
  40c37f:	int3   
  40c380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c381:	adc    DWORD PTR [edi+0x60],esp
  40c384:	jecxz  0x40c397
  40c386:	les    edi,FWORD PTR ds:0x32270616
  40c38c:	push   es
  40c38d:	std    
  40c38e:	xchg   edx,eax
  40c38f:	add    dh,BYTE PTR [edx]
  40c391:	jg     0x40c3eb
  40c393:	xor    eax,0xff6905eb
  40c398:	xor    DWORD PTR [edi],edx
  40c39a:	lds    ecx,FWORD PTR [ecx-0x15c63040]
  40c3a0:	jbe    0x40c32b
  40c3a2:	jo     0x40c3af
  40c3a4:	out    0x6,eax
  40c3a6:	fcmove st,st(6)
  40c3a8:	pop    esp
  40c3a9:	push   esi
  40c3aa:	xchg   edx,eax
  40c3ab:	xchg   edx,eax
  40c3ac:	fnstenv [eax-0x455d9061]
  40c3b2:	jns    0x40c36c
  40c3b4:	push   edx
  40c3b5:	jb     0x40c41d
  40c3b7:	out    dx,eax
  40c3b8:	dec    esi
  40c3b9:	add    edi,DWORD PTR [ecx-0x61044ce8]
  40c3bf:	lods   eax,DWORD PTR ds:[esi]
  40c3c0:	mov    ds:0x13f8310d,eax
  40c3c5:	add    edi,DWORD PTR [eax+0x75]
  40c3c8:	js     0x40c361
  40c3ca:	or     eax,0xcb679575
  40c3cf:	sub    DWORD PTR [edi+0x7c],0x6d
  40c3d3:	fild   WORD PTR [esi]
  40c3d5:	js     0x40c3c4
  40c3d7:	push   ecx
  40c3d8:	dec    eax
  40c3d9:	lds    esi,FWORD PTR [edi+0x6c28c16e]
  40c3df:	pushf  
  40c3e0:	out    dx,al
  40c3e1:	popa   
  40c3e2:	(bad)  
  40c3e4:	push   ss
  40c3e5:	fwait
  40c3e6:	js     0x40c3d9
  40c3e8:	js     0x40c3d9
  40c3ea:	sbb    eax,0x60a105f2
  40c3ef:	inc    eax
  40c3f0:	and    eax,0x7e241c62
  40c3f5:	jmp    0x40c460
  40c3f7:	lds    ecx,FWORD PTR ss:[edi]
  40c3fa:	pop    ebx
  40c3fb:	into   
  40c3fc:	sbb    al,0x20
  40c3fe:	sar    DWORD PTR [edi],1
  40c400:	lods   al,BYTE PTR ds:[esi]
  40c401:	cmp    BYTE PTR [edx],ch
  40c403:	mov    al,0x56
  40c405:	lds    ebx,FWORD PTR [edx+0xa781266]
  40c40b:	sbb    esp,DWORD PTR [esi-0x76]
  40c40e:	mov    edx,0x2e1361fe
  40c413:	cmp    eax,0xd194d966
  40c418:	jns    0x40c448
  40c41a:	mov    dh,0x6e
  40c41c:	loopne 0x40c3a0
  40c41e:	mov    eax,0x1f47f5ef
  40c423:	js     0x40c462
  40c425:	adc    cl,dh
  40c427:	xchg   ebx,edx
  40c429:	dec    ebp
  40c42a:	repz inc edi
  40c42c:	inc    ebx
  40c42d:	dec    esi
  40c42e:	outs   dx,DWORD PTR ds:[esi]
  40c42f:	push   esi
  40c430:	sub    bh,BYTE PTR [edi]
  40c432:	jnp    0x40c47b
  40c434:	ins    BYTE PTR es:[edi],dx
  40c435:	ins    DWORD PTR es:[edi],dx
  40c436:	lods   eax,DWORD PTR ds:[esi]
  40c437:	sahf   
  40c438:	hlt    
  40c439:	xchg   edx,eax
  40c43a:	jae    0x40c49a
  40c43c:	aam    0x18
  40c43e:	jp     0x40c3de
  40c440:	fisubr WORD PTR [eax+0x21]
  40c443:	data16 jns 0x40c41d
  40c446:	mov    dl,0x89
  40c448:	jb     0x40c42a
  40c44a:	pop    eax
  40c44b:	mov    ch,0x28
  40c44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c44e:	sub    edi,DWORD PTR [edx+esi*4+0xbefe329]
  40c455:	add    dh,BYTE PTR [ebx+0x2c]
  40c458:	fadd   DWORD PTR [esp+ecx*4-0x1e924ad9]
  40c45f:	ds ins DWORD PTR es:[edi],dx
  40c461:	push   ss
  40c462:	cmc    
  40c463:	repz imul edi,DWORD PTR [ebx+edi*4],0xde73995b
  40c46b:	cmc    
  40c46c:	call   0xc50caaae
  40c471:	pop    es
  40c472:	push   0xffffff8a
  40c474:	sar    DWORD PTR [ebx+0x4b],0x2c
  40c478:	and    eax,0x5592495b
  40c47d:	cli    
  40c47e:	xchg   esp,eax
  40c47f:	jo     0x40c420
  40c481:	pop    ecx
  40c482:	cmp    eax,0x600d74f2
  40c487:	dec    esi
  40c488:	xlat   BYTE PTR ds:[ebx]
  40c489:	shl    DWORD PTR ds:0xc9f34305,1
  40c48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c490:	adc    BYTE PTR [ecx],ch
  40c492:	rdtsc  
  40c494:	fidivr WORD PTR [ebp-0x2ca102ab]
  40c49a:	stc    
  40c49b:	add    BYTE PTR [eax+0x6c],0xff
  40c49f:	and    esi,edx
  40c4a1:	pop    eax
  40c4a2:	test   BYTE PTR [ebp+eiz*4+0x22],ch
  40c4a6:	dec    esp
  40c4a7:	and    al,0x84
  40c4a9:	sbb    dh,ah
  40c4ab:	cmc    
  40c4ac:	das    
  40c4ad:	ficomp WORD PTR [ebx]
  40c4af:	mov    ch,0x79
  40c4b1:	cdq    
  40c4b2:	std    
  40c4b3:	lahf   
  40c4b4:	jmp    0x463f:0x35549a02
  40c4bb:	or     DWORD PTR [ebx+0x6f],esp
  40c4be:	das    
  40c4bf:	popa   
  40c4c0:	loopne 0x40c4b7
  40c4c2:	imul   edx,DWORD PTR [eax],0x6da4242d
  40c4c8:	jecxz  0x40c4b5
  40c4ca:	jno    0x40c4f3
  40c4cc:	fstp   TBYTE PTR [edx]
  40c4ce:	clc    
  40c4cf:	sbb    eax,DWORD PTR [eax+0x4a]
  40c4d2:	xor    BYTE PTR [ebx+edi*1+0x15],dl
  40c4d6:	iret   
  40c4d7:	jecxz  0x40c557
  40c4d9:	add    DWORD PTR [esi-0xe],ebx
  40c4dc:	ds mov bh,0x86
  40c4df:	cmp    ebx,ebp
  40c4e1:	pop    eax
  40c4e2:	xchg   BYTE PTR [eax],ah
  40c4e4:	es stc 
  40c4e6:	(bad)  
  40c4e7:	nop
  40c4e8:	add    eax,0x1dfeb428
  40c4ed:	jmp    0x66ef:0x26230c33
  40c4f4:	pop    es
  40c4f5:	mov    edi,0x25e5a7e
  40c4fa:	xchg   edi,eax
  40c4fb:	cmp    dl,BYTE PTR [esi+0xe]
  40c4fe:	push   ebp
  40c4ff:	push   ebp
  40c500:	addr16 cld 
  40c502:	fstp   TBYTE PTR [ecx]
  40c504:	and    BYTE PTR [ecx+ebx*1-0x27],cl
  40c508:	les    eax,FWORD PTR [eax-0x1a]
  40c50b:	scas   al,BYTE PTR es:[edi]
  40c50c:	test   eax,0xd52efc95
  40c511:	and    BYTE PTR [edi+0x51c22740],bl
  40c517:	test   BYTE PTR [ebp+0x5a],cl
  40c51a:	dec    edx
  40c51b:	mov    al,0x41
  40c51d:	mov    dl,BYTE PTR [ebx-0x115d9a11]
  40c523:	retf   
  40c524:	js     0x40c4b2
  40c526:	pop    esi
  40c527:	mov    ds:0x37305389,eax
  40c52c:	mov    edi,0x5cd19b23
  40c531:	test   al,0x11
  40c533:	fldpi  
  40c535:	rcl    BYTE PTR [esi],0xd6
  40c538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c539:	pop    esi
  40c53a:	lds    edi,FWORD PTR [edi-0x605472da]
  40c540:	out    dx,al
  40c541:	or     ah,BYTE PTR [ebp-0x5d]
  40c544:	add    BYTE PTR [edx+0x792a2aaf],al
  40c54a:	xor    eax,0x658cda5a
  40c54f:	mov    ds:0x65cbb393,al
  40c554:	jl     0x40c525
  40c556:	pop    ebp
  40c557:	frstor [eax-0x2064166a]
  40c55d:	aad    0x71
  40c55f:	mov    bl,0x7e
  40c561:	std    
  40c562:	call   0xc24c6d15
  40c567:	sub    DWORD PTR [ebx+eax*1+0x1e],edi
  40c56b:	cld    
  40c56c:	adc    BYTE PTR [eax+edx*4],bh
  40c56f:	int    0x60
  40c571:	shl    DWORD PTR [esi+0x4d81a893],cl
  40c577:	fnsave [esi]
  40c579:	or     DWORD PTR [ecx],0xe1bea9b1
  40c57f:	in     al,0x46
  40c581:	ret    0x60ad
  40c584:	jb     0x40c58d
  40c586:	xchg   ecx,eax
  40c587:	(bad)  
  40c589:	pushf  
  40c58a:	fild   DWORD PTR [edx+ebp*2+0x336f994f]
  40c591:	call   0x6040:0x37335a0b
  40c598:	push   ds
  40c599:	mov    ch,0xe1
  40c59b:	stos   BYTE PTR es:[edi],al
  40c59c:	pop    edx
  40c59d:	cmp    ecx,eax
  40c59f:	jns    0x40c56a
  40c5a1:	and    ecx,DWORD PTR [esi+0xc]
  40c5a4:	add    al,0x67
  40c5a6:	mov    edx,ecx
  40c5a8:	in     eax,dx
  40c5a9:	dec    edx
  40c5aa:	inc    eax
  40c5ab:	fnstsw WORD PTR [edi-0x25]
  40c5ae:	inc    ebp
  40c5af:	add    BYTE PTR [ebx-0x6],bh
  40c5b2:	xor    BYTE PTR [ecx-0x49],cl
  40c5b5:	cs call edi
  40c5b8:	ror    edi,1
  40c5ba:	mov    edx,0x9b97338d
  40c5bf:	test   eax,0xee6f964
  40c5c4:	scas   eax,DWORD PTR es:[edi]
  40c5c5:	stos   DWORD PTR es:[edi],eax
  40c5c6:	push   edi
  40c5c7:	and    eax,0xf3d9db62
  40c5cc:	xor    BYTE PTR [eax+0x39],dl
  40c5cf:	ins    BYTE PTR es:[edi],dx
  40c5d0:	arpl   WORD PTR [edi+0x53],bx
  40c5d3:	inc    esi
  40c5d4:	fisub  DWORD PTR [eax-0xe8a5662]
  40c5da:	(bad)  
  40c5db:	jle    0x40c5d0
  40c5dd:	dec    eax
  40c5de:	xchg   edx,eax
  40c5df:	aam    0x35
  40c5e1:	fisttp QWORD PTR [ebx+0x6dae21be]
  40c5e7:	jecxz  0x40c5df
  40c5e9:	mov    bh,dl
  40c5eb:	aaa    
  40c5ec:	ds (bad) 
  40c5ee:	test   eax,0xd69356a8
  40c5f3:	rcl    DWORD PTR [edi],1
  40c5f5:	inc    ebp
  40c5f6:	push   ss
  40c5f7:	or     dh,BYTE PTR [ebx-0x3631e0a8]
  40c5fd:	push   esi
  40c5fe:	push   edx
  40c5ff:	fs mov ebx,0xa216cf52
  40c605:	aam    0xb3
  40c607:	sbb    DWORD PTR [ebx+0x15],0x4237af19
  40c60e:	sbb    ecx,ecx
  40c610:	cld    
  40c611:	push   edi
  40c612:	arpl   WORD PTR [edi],di
  40c614:	test   DWORD PTR [ecx+eax*1-0x77ef9959],edi
  40c61b:	jnp    0x40c5c6
  40c61d:	jl     0x40c5d2
  40c61f:	or     ah,BYTE PTR [eax]
  40c621:	ins    DWORD PTR es:[edi],dx
  40c622:	inc    esi
  40c623:	inc    edx
  40c624:	sbb    eax,0xee815e94
  40c629:	jbe    0x40c636
  40c62b:	in     al,dx
  40c62c:	stos   BYTE PTR es:[edi],al
  40c62d:	xor    BYTE PTR [ecx],bh
  40c62f:	hlt    
  40c630:	mov    edi,db0
  40c633:	test   BYTE PTR [edx+0x41e36bbf],ah
  40c639:	jo     0x40c61d
  40c63b:	mov    al,0x37
  40c63d:	sbb    eax,edx
  40c63f:	ss jb  0x40c5d3
  40c642:	dec    ebx
  40c643:	or     esp,ebx
  40c645:	ror    DWORD PTR [ebp+0x55],1
  40c648:	push   ebx
  40c649:	daa    
  40c64a:	jne    0x40c671
  40c64c:	pop    eax
  40c64d:	test   al,0x5
  40c64f:	sbb    eax,0xe975c6db
  40c654:	sub    ah,BYTE PTR [edi-0x4bf11a30]
  40c65a:	out    dx,al
  40c65b:	xor    BYTE PTR [ebp+0x5b],dh
  40c65e:	ret    
  40c65f:	or     BYTE PTR [ebp+esi*8-0x73cc90e2],0xc3
  40c667:	sub    eax,0x2ad5193e
  40c66c:	adc    eax,0xfaabf0ba
  40c671:	and    cl,BYTE PTR [ebx-0x597fd426]
  40c677:	ret    0x78d6
  40c67a:	mov    DWORD PTR [ebx+0x23],ebx
  40c67d:	in     al,dx
  40c67e:	xchg   ebx,eax
  40c67f:	pop    es
  40c680:	dec    ebp
  40c681:	imul   ecx
  40c683:	popf   
  40c684:	adc    edx,DWORD PTR ds:0xfa5d5b1a
  40c68a:	mov    ebp,0x1e0d9bf8
  40c68f:	lahf   
  40c690:	xchg   DWORD PTR [ecx+0x5],eax
  40c693:	inc    sp
  40c695:	das    
  40c696:	adc    ah,BYTE PTR [esi+0x68]
  40c699:	push   0x4c58caa0
  40c69e:	pop    ds
  40c69f:	push   ds
  40c6a0:	push   ebx
  40c6a1:	(bad)  
  40c6a2:	ffree  st(1)
  40c6a4:	dec    eax
  40c6a5:	(bad)  
  40c6a6:	or     al,0xdf
  40c6a8:	cmp    ah,BYTE PTR [edx+eiz*4]
  40c6ab:	fcomip st,st(6)
  40c6ad:	dec    ebp
  40c6ae:	outs   dx,BYTE PTR ds:[esi]
  40c6af:	push   ds
  40c6b0:	jne    0x40c721
  40c6b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6b3:	and    BYTE PTR [ebx+0x6ef62870],al
  40c6b9:	popf   
  40c6ba:	xchg   esp,eax
  40c6bb:	pop    edi
  40c6bc:	pusha  
  40c6bd:	mov    esp,0xe4ae911b
  40c6c2:	cmp    eax,0x5f43b583
  40c6c7:	retf   
  40c6c8:	xchg   edx,eax
  40c6c9:	fs repz jp 0x40c70b
  40c6cd:	xchg   ebx,eax
  40c6ce:	jmp    0x40c74c
  40c6d0:	div    DWORD PTR [edx-0x12]
  40c6d3:	push   cs
  40c6d4:	stc    
  40c6d5:	mov    al,ds:0x6d4e878f
  40c6da:	(bad)  
  40c6db:	adc    DWORD PTR [esi-0x79],ebp
  40c6de:	ja     0x40c66d
  40c6e0:	mov    ebp,0x9003b807
  40c6e5:	sub    ah,bh
  40c6e7:	or     DWORD PTR [eax+0x67f5f200],esi
  40c6ed:	pop    edx
  40c6ee:	sub    DWORD PTR [edi+0x4f],edx
  40c6f1:	sub    DWORD PTR [esi+0x42],0xffffffab
  40c6f5:	mov    edi,0x840c6aa3
  40c6fa:	push   esi
  40c6fb:	adc    BYTE PTR [esi+0x7ff16e54],0x7b
  40c702:	lds    ebx,FWORD PTR [edx+0x64]
  40c705:	mov    eax,ds:0xae9f6142
  40c70a:	daa    
  40c70b:	arpl   WORD PTR [eax],bx
  40c70d:	fild   QWORD PTR [eax]
  40c70f:	or     DWORD PTR [ebp+0x2db37b35],eax
  40c715:	sub    dl,BYTE PTR [ebx]
  40c717:	(bad)  
  40c718:	repnz xchg edi,eax
  40c71a:	jno    0x40c735
  40c71c:	mov    cs,WORD PTR [edx+0x37]
  40c71f:	and    eax,DWORD PTR [esi]
  40c721:	into   
  40c722:	arpl   WORD PTR [edx-0x5171d41],di
  40c728:	fwait
  40c729:	add    edx,ecx
  40c72b:	mov    ds:0x717cee10,al
  40c730:	push   cs
  40c731:	ins    BYTE PTR es:[edi],dx
  40c732:	sbb    BYTE PTR [eax+0x71cc82ce],ch
  40c738:	retf   0xe489
  40c73b:	adc    BYTE PTR [edx+0x39],cl
  40c73e:	ins    BYTE PTR es:[edi],dx
  40c73f:	cmp    eax,ebp
  40c741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c742:	shl    DWORD PTR [esi-0x28],1
  40c745:	add    DWORD PTR [ebx],0xffffffb6
  40c748:	jg     0x40c741
  40c74a:	cmp    bh,ch
  40c74c:	xor    cl,BYTE PTR [esi+0x7d00e542]
  40c752:	dec    eax
  40c753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c754:	sbb    al,0x5e
  40c756:	clc    
  40c757:	outs   dx,BYTE PTR ds:[esi]
  40c758:	push   edi
  40c759:	jmp    0x88ba6286
  40c75e:	and    al,0x31
  40c760:	out    dx,al
  40c761:	add    ecx,DWORD PTR [ebx-0x37]
  40c764:	or     eax,0xc982cc46
  40c769:	jo     0x40c752
  40c76b:	push   edx
  40c76c:	test   BYTE PTR [ecx+0x5a],cl
  40c76f:	gs jnp 0x40c75e
  40c772:	xor    DWORD PTR [esp+edi*2+0xd65cf3c],ebp
  40c779:	mov    eax,ds:0xf5f6aa59
  40c77e:	(bad)  [eax-0x5c4ae983]
  40c784:	inc    edx
  40c785:	sahf   
  40c786:	push   ss
  40c787:	mov    cs,WORD PTR [eax+0x287f479f]
  40c78d:	rcl    BYTE PTR [ebx],0x38
  40c790:	retf   
  40c791:	lods   al,BYTE PTR ds:[esi]
  40c792:	and    ecx,ecx
  40c794:	push   edi
  40c795:	push   esp
  40c796:	jle    0x40c76a
  40c798:	mov    ecx,0x5a98b0e
  40c79d:	push   eax
  40c79e:	push   ecx
  40c79f:	sbb    cl,ch
  40c7a1:	popf   
  40c7a2:	in     eax,0x2
  40c7a4:	jnp    0x40c7f0
  40c7a6:	xor    DWORD PTR [ebx-0x80],0x98d3d50b
  40c7ad:	jecxz  0x40c79b
  40c7af:	or     BYTE PTR [edi+0x1f7957a7],ah
  40c7b5:	jmp    DWORD PTR [eax-0x3df58245]
  40c7bb:	stos   BYTE PTR es:[edi],al
  40c7bc:	mov    ecx,DWORD PTR ds:0x2b99f9b2
  40c7c2:	outs   dx,BYTE PTR ds:[esi]
  40c7c3:	inc    esp
  40c7c4:	pushf  
  40c7c5:	sub    BYTE PTR [edi+0x16],bh
  40c7c8:	or     ah,BYTE PTR [edi-0x49]
  40c7cb:	sbb    BYTE PTR [bp+di],dh
  40c7ce:	dec    ebx
  40c7cf:	pusha  
  40c7d0:	push   eax
  40c7d1:	(bad)  
  40c7d2:	std    
  40c7d3:	jo     0x40c83b
  40c7d5:	push   edx
  40c7d6:	add    dh,BYTE PTR [eax+0x484cab6f]
  40c7dc:	in     eax,0xf2
  40c7de:	imul   edx,DWORD PTR [esi+0x5be8910d],0x41
  40c7e5:	xlat   BYTE PTR ds:[ebx]
  40c7e6:	dec    ecx
  40c7e7:	mov    bl,0xc2
  40c7e9:	mov    ?,WORD PTR [edi-0x6f]
  40c7ec:	es out 0x80,eax
  40c7ef:	sti    
  40c7f0:	icebp  
  40c7f1:	addr16 mov al,0xba
  40c7f4:	add    DWORD PTR ds:0x45d127fa,esp
  40c7fa:	sahf   
  40c7fb:	push   edx
  40c7fc:	jge    0x40c794
  40c7fe:	stc    
  40c7ff:	outs   dx,DWORD PTR ds:[esi]
  40c800:	ret    
  40c801:	jl     0x40c87b
  40c803:	push   0x3b290e37
  40c808:	pusha  
  40c809:	inc    ebx
  40c80a:	jmp    0xff7e:0xf579af95
  40c811:	fs pop ebx
  40c813:	popf   
  40c814:	jnp    0x40c84b
  40c816:	dec    ebp
  40c817:	out    0xc4,al
  40c819:	adc    al,0xd
  40c81b:	push   ecx
  40c81c:	ficomp WORD PTR [ebx+0x36cb11ba]
  40c822:	lea    edi,[esi]
  40c824:	cmp    al,0x44
  40c826:	adc    ebx,esp
  40c828:	clc    
  40c829:	daa    
  40c82a:	add    DWORD PTR [edi+0x299656b7],ecx
  40c830:	mov    ah,0xd6
  40c832:	sahf   
  40c833:	sbb    ah,dh
  40c835:	mov    dl,0x38
  40c837:	push   esp
  40c838:	(bad)  
  40c839:	push   ebx
  40c83a:	xor    eax,0xbdcac13d
  40c83f:	add    bh,BYTE PTR [edi+ecx*1]
  40c842:	add    bh,ch
  40c844:	sbb    BYTE PTR [ebx],bh
  40c846:	popf   
  40c847:	mov    esi,0x7245e0d3
  40c84c:	inc    esi
  40c84d:	cld    
  40c84e:	ror    BYTE PTR [edi+0x2c],1
  40c851:	or     eax,0x345091ad
  40c856:	push   edx
  40c857:	pop    ebp
  40c858:	add    eax,0x8858ad68
  40c85d:	xchg   DWORD PTR [ecx+0x42],ebp
  40c860:	imul   ebp,DWORD PTR [edx-0x1a],0xffffffbd
  40c864:	fld    st(4)
  40c866:	push   eax
  40c867:	out    0xb7,al
  40c869:	repnz fs pop ebp
  40c86c:	seto   BYTE PTR [edx-0x28da252]
  40c873:	repnz nop
  40c875:	or     DWORD PTR [edx+eax*4+0x10c54955],ecx
  40c87c:	fimul  DWORD PTR [ebx+0x57bd438]
  40c882:	add    BYTE PTR [edi],dl
  40c884:	mov    bh,0x44
  40c886:	xor    eax,ecx
  40c888:	test   ah,cl
  40c88a:	jns    0x40c867
  40c88c:	gs cmp eax,0xb5cc2502
  40c892:	scas   eax,DWORD PTR es:[edi]
  40c893:	loop   0x40c8de
  40c895:	jecxz  0x40c84d
  40c897:	or     eax,0x2ca31f4d
  40c89c:	or     edx,DWORD PTR [eax]
  40c89e:	mov    dl,0x3a
  40c8a0:	push   0x8e1f59b3
  40c8a5:	js     0x40c8f5
  40c8a7:	outs   dx,BYTE PTR ds:[esi]
  40c8a8:	popf   
  40c8a9:	adc    esi,DWORD PTR [edi+0x3e1130ab]
  40c8af:	and    eax,0x3e5ba2c8
  40c8b4:	ss adc ecx,ebx
  40c8b7:	mov    ds:0x7c8206ea,eax
  40c8bc:	pop    esp
  40c8bd:	std    
  40c8be:	jmp    0x40c880
  40c8c0:	mov    ch,0xae
  40c8c2:	popa   
  40c8c3:	adc    eax,0x4506c311
  40c8c8:	xor    BYTE PTR [ebx-0x20],cl
  40c8cb:	jg     0x40c857
  40c8cd:	and    eax,0x31978362
  40c8d2:	clc    
  40c8d3:	mov    cl,0xf
  40c8d5:	add    edx,DWORD PTR [edx+0xceaab81]
  40c8db:	idiv   DWORD PTR [eax-0x5aae6d0c]
  40c8e1:	xor    al,BYTE PTR [esi+0x40]
  40c8e4:	xchg   ecx,eax
  40c8e5:	ss js  0x40c8e2
  40c8e8:	repz jge 0x40c8f2
  40c8eb:	lods   al,BYTE PTR ds:[esi]
  40c8ec:	daa    
  40c8ed:	or     DWORD PTR [edx+0x6708f1a8],0x7c3a6127
  40c8f7:	pop    ebp
  40c8f8:	pop    DWORD PTR [ebx]
  40c8fa:	outs   dx,DWORD PTR cs:[esi]
  40c8fc:	xlat   BYTE PTR ds:[ebx]
  40c8fd:	cs push es
  40c8ff:	test   eax,0x6a818040
  40c904:	fisub  WORD PTR [ebp-0x780bc9d6]
  40c90a:	inc    ebp
  40c90b:	cli    
  40c90c:	neg    BYTE PTR ds:0x7b3c49b
  40c912:	dec    ebp
  40c913:	and    eax,DWORD PTR [edx]
  40c915:	ja     0x40c95b
  40c917:	inc    bl
  40c919:	test   ecx,0x97b080ee
  40c91f:	pop    esp
  40c920:	and    eax,0x8c480092
  40c925:	clc    
  40c926:	sub    dl,BYTE PTR [edx+0x510ffb95]
  40c92c:	jb     0x40c8ee
  40c92e:	push   ss
  40c92f:	xchg   esp,eax
  40c930:	jns    0x40c914
  40c932:	xor    al,0x6
  40c934:	xor    DWORD PTR [edx+0x21],edi
  40c937:	add    esp,DWORD PTR [eax-0x534eb5cb]
  40c93d:	push   cs
  40c93e:	sbb    BYTE PTR [edx+esi*2-0x6b29f1f7],bh
  40c945:	mov    dh,0xe2
  40c947:	push   0x64
  40c949:	lock mov al,ds:0xcafb911f
  40c94f:	xchg   edi,eax
  40c950:	sar    edi,cl
  40c952:	mov    esi,0x6aa56f0c
  40c957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c958:	(bad)  
  40c959:	xchg   ecx,eax
  40c95a:	sahf   
  40c95b:	sbb    eax,0x60abcd10
  40c960:	jmp    0x33f7:0xf4a3b94d
  40c967:	mov    edi,0xe64f5326
  40c96c:	int3   
  40c96d:	cli    
  40c96e:	xchg   ecx,eax
  40c96f:	jns    0x40c93a
  40c971:	pusha  
  40c972:	mov    ch,0x4
  40c974:	idiv   ebx
  40c976:	fisub  WORD PTR [eax+edx*8+0x4a]
  40c97a:	stos   DWORD PTR es:[edi],eax
  40c97b:	cmp    BYTE PTR [ebx-0x62],0xbc
  40c97f:	inc    edx
  40c980:	rol    BYTE PTR [ebx-0x2907e707],cl
  40c986:	or     esp,eax
  40c988:	mov    dl,0x76
  40c98a:	lock xchg edx,eax
  40c98c:	push   eax
  40c98d:	mov    edi,0x5760e23d
  40c992:	les    ebx,FWORD PTR [edi+0xd620c1]
  40c998:	jo     0x40c9bc
  40c99a:	pusha  
  40c99b:	jb     0x40c965
  40c99d:	xchg   edi,eax
  40c99e:	lock and al,BYTE PTR [ebx]
  40c9a1:	ror    DWORD PTR [edx],1
  40c9a3:	jecxz  0x40c9b4
  40c9a5:	push   ecx
  40c9a6:	inc    eax
  40c9a7:	ret    0xd6
  40c9aa:	ins    BYTE PTR es:[edi],dx
  40c9ab:	push   cs
  40c9ac:	mov    bh,0x7e
  40c9ae:	sahf   
  40c9af:	test   eax,0x79bc8293
  40c9b4:	popf   
  40c9b5:	out    0x9c,al
  40c9b7:	mov    ds:0xc15b31c2,eax
  40c9bc:	aaa    
  40c9bd:	hlt    
  40c9be:	mov    edi,0x17bf5ab0
  40c9c3:	data16 ds (bad) 
  40c9c7:	out    0x35,al
  40c9c9:	mov    ebp,0x4f257b76
  40c9ce:	stc    
  40c9cf:	dec    ebx
  40c9d0:	lods   eax,DWORD PTR ds:[esi]
  40c9d1:	stos   DWORD PTR es:[edi],eax
  40c9d2:	pushf  
  40c9d3:	call   0x8e38590c
  40c9d8:	popa   
  40c9d9:	jp     0x40ca53
  40c9db:	(bad)  
  40c9dc:	in     al,0x76
  40c9de:	sti    
  40c9df:	mov    al,0xf5
  40c9e1:	mov    eax,ds:0xaddea4a3
  40c9e6:	inc    ebx
  40c9e7:	pop    es
  40c9e8:	xor    BYTE PTR [edx+0x73fc738b],ah
  40c9ee:	pusha  
  40c9ef:	cdq    
  40c9f0:	stos   BYTE PTR es:[edi],al
  40c9f1:	push   cs
  40c9f2:	dec    DWORD PTR ds:0x6f32e699
  40c9f8:	xor    cl,bh
  40c9fa:	inc    ebp
  40c9fb:	mov    esp,0x17c37b90
  40ca00:	mov    ?,eax
  40ca02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca03:	(bad)
  40ca06:	jbe    0x40ca05
  40ca08:	ins    DWORD PTR es:[edi],dx
  40ca09:	pop    es
  40ca0a:	or     edx,DWORD PTR [esi+ebx*8+0x36]
  40ca0e:	pusha  
  40ca0f:	jl     0x40ca6c
  40ca11:	pop    es
  40ca12:	or     eax,DWORD PTR [edi-0x1]
  40ca15:	daa    
  40ca16:	dec    esi
  40ca17:	pop    ecx
  40ca18:	or     DWORD PTR [esp+edi*8-0x66],edx
  40ca1c:	dec    ebp
  40ca1d:	pusha  
  40ca1e:	xor    BYTE PTR [ecx+0x1d],bl
  40ca21:	mov    eax,0xbc479645
  40ca26:	(bad)  
  40ca27:	pushf  
  40ca28:	adc    BYTE PTR [edx-0x3fabb642],dl
  40ca2e:	push   ebp
  40ca2f:	aas    
  40ca30:	jns    0x40c9bd
  40ca32:	push   esp
  40ca33:	xchg   edx,eax
  40ca34:	cmp    dh,ch
  40ca36:	lods   eax,DWORD PTR ds:[esi]
  40ca37:	shl    BYTE PTR [edi-0x5e],0xb0
  40ca3b:	mov    ebx,0x1afdd391
  40ca40:	dec    ebp
  40ca41:	repz cwde 
  40ca43:	and    BYTE PTR [edi+0xbadb24e],bl
  40ca49:	ins    DWORD PTR es:[edi],dx
  40ca4a:	std    
  40ca4b:	jns    0x40ca34
  40ca4d:	popf   
  40ca4e:	or     esi,DWORD PTR [ebp+0x4a]
  40ca51:	xchg   edx,eax
  40ca52:	test   BYTE PTR [ebx+0x6d],dl
  40ca55:	jno    0x40c9da
  40ca57:	mov    ds:0xe76da14d,eax
  40ca5c:	inc    esp
  40ca5d:	fistp  DWORD PTR [ecx-0x19]
  40ca60:	test   eax,0xba457be4
  40ca65:	mov    ah,BYTE PTR ds:0x785efc88
  40ca6b:	hlt    
  40ca6c:	in     al,dx
  40ca6d:	push   edx
  40ca6e:	ins    DWORD PTR es:[edi],dx
  40ca6f:	daa    
  40ca70:	std    
  40ca71:	cli    
  40ca72:	xor    cl,bh
  40ca74:	(bad)  
  40ca75:	or     ah,BYTE PTR gs:[ebp-0x6f2e3715]
  40ca7c:	fmul   st,st(5)
  40ca7e:	pop    ebx
  40ca7f:	(bad)  
  40ca81:	jle    0x40ca4d
  40ca83:	cmp    esp,DWORD PTR [ecx]
  40ca85:	leave  
  40ca86:	(bad)  
  40ca87:	je     0x40cade
  40ca89:	iret   
  40ca8a:	add    DWORD PTR [edx-0x2eebda92],0x5d7c70a6
  40ca94:	cmp    eax,0x8f2b4e9f
  40ca99:	mov    edi,0x64adaeb5
  40ca9e:	js     0x40ca21
  40caa0:	sbb    ebx,esp
  40caa2:	outs   dx,BYTE PTR ds:[esi]
  40caa3:	adc    dl,bh
  40caa5:	jb     0x40cacd
  40caa7:	(bad)  
  40caa8:	iret   
  40caa9:	pop    ds
  40caaa:	lahf   
  40caab:	aad    0x4f
  40caad:	mov    edx,0xda655bff
  40cab2:	mov    esp,0x47ee6436
  40cab7:	dec    ebx
  40cab8:	xor    ah,BYTE PTR [ebx-0x76a13d08]
  40cabe:	out    dx,al
  40cabf:	enter  0x928a,0x24
  40cac3:	retf   0x804
  40cac6:	scas   al,BYTE PTR es:[edi]
  40cac7:	ins    BYTE PTR es:[edi],dx
  40cac8:	mov    eax,ds:0x95fcf7a0
  40cacd:	mov    eax,ds:0xfd42f34b
  40cad2:	xor    BYTE PTR [eax-0x3ef6264c],bh
  40cad8:	adc    al,0xed
  40cada:	and    BYTE PTR [esp+eiz*2-0x77],bh
  40cade:	mov    al,ds:0xd94bcd83
  40cae3:	out    0xef,al
  40cae5:	into   
  40cae6:	ins    DWORD PTR es:[edi],dx
  40cae7:	jns    0x40cb08
  40cae9:	pop    ebx
  40caea:	mov    dl,0x8
  40caec:	mov    ds:0x6a71edb9,eax
  40caf1:	mov    ebp,esi
  40caf3:	cmp    edi,esi
  40caf5:	jge    0x40cab9
  40caf7:	les    eax,FWORD PTR [esi+0x1b10dbff]
  40cafd:	in     eax,dx
  40cafe:	jne    0x40cb42
  40cb00:	imul   eax,DWORD PTR [edx+0x7e68c851],0x2a
  40cb07:	add    ebp,eax
  40cb09:	push   esi
  40cb0a:	xor    al,0x14
  40cb0c:	cli    
  40cb0d:	cdq    
  40cb0e:	xchg   edx,eax
  40cb0f:	ja     0x40cb5d
  40cb11:	loope  0x40cb88
  40cb13:	xor    al,0xc5
  40cb15:	mov    ds:0xe3c4bd5c,eax
  40cb1a:	push   edx
  40cb1b:	dec    edx
  40cb1c:	and    edx,ecx
  40cb1e:	jb     0x40cac7
  40cb20:	mov    BYTE PTR [edi],0x86
  40cb23:	leave  
  40cb24:	cli    
  40cb25:	mov    eax,ds:0x4019b8ec
  40cb2a:	call   DWORD PTR [eax-0x388f0591]
  40cb30:	or     al,0x81
  40cb32:	push   ebp
  40cb33:	enter  0xa025,0x4b
  40cb37:	clc    
  40cb38:	aaa    
  40cb39:	iret   
  40cb3a:	test   eax,0xaed55d98
  40cb3f:	rcr    DWORD PTR [edx-0x641c7f7f],1
  40cb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb46:	gs adc eax,0x131214ea
  40cb4c:	out    dx,al
  40cb4d:	cli    
  40cb4e:	addr16 push ss
  40cb50:	xor    al,0x5f
  40cb52:	hlt    
  40cb53:	sub    BYTE PTR [eax+0x50d13800],0xa4
  40cb5a:	les    esp,FWORD PTR [ecx]
  40cb5c:	xor    ebp,ecx
  40cb5e:	in     al,dx
  40cb5f:	imul   eax,DWORD PTR [ebx-0x22],0xf9430c43
  40cb66:	(bad)  
  40cb67:	scas   al,BYTE PTR es:[edi]
  40cb68:	inc    eax
  40cb69:	shl    DWORD PTR [edi],0xf1
  40cb6c:	push   ds
  40cb6d:	or     eax,DWORD PTR [esi]
  40cb6f:	pop    es
  40cb70:	addr16 shl ah,1
  40cb73:	cmc    
  40cb74:	or     al,0x2b
  40cb76:	leave  
  40cb77:	cli    
  40cb78:	loop   0x40cb61
  40cb7a:	imul   edx,ebx,0x7cb7d3e3
  40cb80:	sbb    bh,BYTE PTR [eiz*1+0x79738148]
  40cb87:	sub    al,0xa7
  40cb89:	retf   0x2e32
  40cb8c:	rcl    BYTE PTR [eax],cl
  40cb8e:	and    dl,BYTE PTR [eax-0x120dc6d0]
  40cb94:	in     al,0x7a
  40cb96:	in     al,dx
  40cb97:	rol    BYTE PTR [eax],0xa9
  40cb9a:	add    BYTE PTR [esi+0xa],0x25
  40cb9e:	adc    al,0xa9
  40cba0:	jecxz  0x40cbca
  40cba2:	xchg   ecx,eax
  40cba3:	and    al,0x4d
  40cba5:	sti    
  40cba6:	std    
  40cba7:	lock rol DWORD PTR [edi+0x1781ccb9],cl
  40cbae:	sar    DWORD PTR [ecx-0x4ba33175],0x8c
  40cbb5:	scas   eax,DWORD PTR es:[edi]
  40cbb6:	(bad)  
  40cbb8:	pop    ecx
  40cbb9:	das    
  40cbba:	xchg   esp,eax
  40cbbb:	sub    eax,0x681daec6
  40cbc0:	cmp    ebx,0x8d6b4c4d
  40cbc6:	inc    esp
  40cbc7:	cld    
  40cbc8:	fiadd  WORD PTR [esi]
  40cbca:	mov    ecx,0xc83f3a16
  40cbcf:	fs rcl ch,1
  40cbd2:	lock jmp 0x5ab5e9d0
  40cbd8:	sti    
  40cbd9:	(bad)  
  40cbda:	arpl   WORD PTR ds:0x56d64bf8,si
  40cbe0:	scas   al,BYTE PTR es:[edi]
  40cbe1:	aaa    
  40cbe2:	frstor [esi]
  40cbe4:	sahf   
  40cbe5:	add    edx,DWORD PTR [edi+0x397d1ebd]
  40cbeb:	repnz in al,dx
  40cbed:	sub    DWORD PTR [esi-0x5f],ecx
  40cbf0:	aas    
  40cbf1:	inc    eax
  40cbf2:	pop    ss
  40cbf3:	xor    edi,DWORD PTR [edx+0x2e]
  40cbf6:	adc    al,0x45
  40cbf8:	shl    DWORD PTR [ebx],1
  40cbfa:	mov    ch,0xe3
  40cbfc:	test   BYTE PTR [edx+ebx*1],dh
  40cbff:	inc    ebx
  40cc00:	cmp    esi,DWORD PTR [ebx-0x4b9a27f0]
  40cc06:	push   0x68ea21c6
  40cc0b:	mov    dl,0x27
  40cc0d:	sti    
  40cc0e:	hlt    
  40cc0f:	(bad)  
  40cc10:	or     BYTE PTR [ecx],al
  40cc12:	leave  
  40cc13:	int    0xc9
  40cc15:	lahf   
  40cc16:	inc    edx
  40cc17:	pusha  
  40cc18:	inc    eax
  40cc19:	fsubr  QWORD PTR [ebp+0x4a]
  40cc1c:	cmp    eax,0x9c127e22
  40cc21:	xchg   DWORD PTR [ebp+eax*1-0x7b],edx
  40cc25:	jmp    0x40cc6e
  40cc27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc28:	cwde   
  40cc29:	mov    edi,0xf94e4ecf
  40cc2e:	and    DWORD PTR [ebx+0x19],0x1f
  40cc32:	inc    ecx
  40cc33:	rcr    bh,1
  40cc35:	cmp    BYTE PTR [esi+0x3fc8c9bd],0xe2
  40cc3c:	dec    eax
  40cc3d:	mov    ds:0x26d8b60c,eax
  40cc42:	xor    ecx,ecx
  40cc44:	cmp    DWORD PTR ds:0x6da1587d,0x19
  40cc4b:	xchg   ecx,eax
  40cc4c:	xor    ecx,DWORD PTR [esi-0x56]
  40cc4f:	imul   ebx,DWORD PTR [esi-0x6d],0x666c367b
  40cc56:	ror    BYTE PTR [edx],1
  40cc58:	(bad)  
  40cc59:	xchg   ebp,eax
  40cc5a:	je     0x40cca6
  40cc5c:	cmp    cl,BYTE PTR [eax+0x36]
  40cc5f:	jo     0x40cc15
  40cc61:	out    0xa9,al
  40cc63:	je     0x40cc09
  40cc65:	sub    eax,0xf1b25337
  40cc6a:	popa   
  40cc6b:	xor    DWORD PTR [eax-0x583e5fec],ebp
  40cc71:	push   0xea7c9d77
  40cc76:	call   0x3b36:0xcd8d53dd
  40cc7d:	xchg   DWORD PTR [eax],ebp
  40cc7f:	out    dx,al
  40cc80:	mov    ds:0xfd18908a,al
  40cc85:	jmp    0x40ccc6
  40cc87:	repz std 
  40cc89:	mov    edx,0x742e7a16
  40cc8e:	mov    edx,0xc962d312
  40cc93:	xor    eax,0xbec53ccb
  40cc98:	jmp    0x40cc6d
  40cc9a:	add    BYTE PTR [edx+ecx*1+0x6a84a0d],ah
  40cca1:	inc    edx
  40cca2:	cmc    
  40cca3:	mov    ah,0xb6
  40cca5:	sbb    dh,dl
  40cca7:	lock or edx,ebp
  40ccaa:	int3   
  40ccab:	gs (bad) 
  40ccad:	aam    0x90
  40ccaf:	inc    esp
  40ccb0:	cmp    eax,0xe249d4da
  40ccb5:	cmp    ebp,0x10
  40ccb8:	jb     0x40cc9b
  40ccba:	sub    ch,BYTE PTR [esi-0x6f392d3f]
  40ccc0:	mov    ebp,0x41881151
  40ccc5:	push   edi
  40ccc6:	das    
  40ccc7:	popf   
  40ccc8:	int    0x63
  40ccca:	test   eax,0xc2992ae0
  40cccf:	xor    al,0x5c
  40ccd1:	aad    0x70
  40ccd3:	xchg   esi,eax
  40ccd4:	pop    es
  40ccd5:	pop    esi
  40ccd6:	mov    ds:0x9e6910d7,eax
  40ccdb:	adc    eax,0x91e0863f
  40cce0:	outs   dx,BYTE PTR ds:[esi]
  40cce1:	imul   esi,DWORD PTR ss:[ebp-0x99f71cb],0xd78c0852
  40ccec:	psubw  mm7,QWORD PTR [ecx+0x61]
  40ccf0:	cmp    edi,DWORD PTR [ebx+edx*2-0x78]
  40ccf4:	(bad)  
  40ccf5:	sahf   
  40ccf6:	pop    ss
  40ccf7:	aaa    
  40ccf8:	retf   
  40ccf9:	sub    al,0x89
  40ccfb:	(bad)  
  40ccfc:	xchg   esi,eax
  40ccfd:	mov    ebp,0x12ecbe03
  40cd02:	jecxz  0x40cc8b
  40cd04:	pop    es
  40cd05:	mov    ds:0x1638812,al
  40cd0a:	sahf   
  40cd0b:	xor    eax,0xc5225046
  40cd10:	lods   al,BYTE PTR ds:[esi]
  40cd11:	lods   al,BYTE PTR ds:[esi]
  40cd12:	adc    BYTE PTR [ebx],0x3
  40cd15:	das    
  40cd16:	fimul  DWORD PTR [edx-0x9]
  40cd19:	js     0x40cca0
  40cd1b:	je     0x40cd2f
  40cd1d:	in     al,0x2
  40cd1f:	retf   
  40cd20:	mov    edi,ebp
  40cd22:	and    BYTE PTR [edi+ecx*8+0x555811e8],ah
  40cd29:	cmp    esi,ebx
  40cd2b:	or     edi,DWORD PTR [ebx-0x7f7ea7c8]
  40cd31:	mov    al,ds:0x4e56b4ff
  40cd36:	ja     0x40cd85
  40cd38:	repz retf 
  40cd3a:	inc    ebp
  40cd3b:	mov    ecx,esi
  40cd3d:	in     eax,0x83
  40cd3f:	mov    dh,0x27
  40cd41:	push   es
  40cd42:	nop
  40cd43:	out    dx,al
  40cd44:	(bad)  
  40cd45:	lds    edx,FWORD PTR [edi]
  40cd47:	rcl    DWORD PTR [esi-0x3b],0x5d
  40cd4b:	shl    BYTE PTR [ecx+0x16],cl
  40cd4e:	inc    ecx
  40cd4f:	push   ds
  40cd50:	in     al,dx
  40cd51:	add    eax,0xc3363865
  40cd56:	add    ecx,ebp
  40cd58:	mov    bl,bl
  40cd5a:	add    al,0x46
  40cd5c:	loopne 0x40cd31
  40cd5e:	out    0x2,eax
  40cd60:	pop    eax
  40cd61:	and    ah,BYTE PTR [ecx+0x721474e7]
  40cd67:	pop    ebp
  40cd68:	pop    ebp
  40cd69:	test   eax,0xb6cc9fca
  40cd6e:	repnz lods eax,DWORD PTR ds:[esi]
  40cd70:	xor    eax,0x4d6f1513
  40cd75:	inc    edi
  40cd76:	mov    esp,0xb3f63881
  40cd7b:	mov    DWORD PTR ds:0x731bb2d,0x1f967faa
  40cd85:	xor    eax,DWORD PTR es:[edx]
  40cd88:	xor    ecx,DWORD PTR [eax+0xf7c5f0b]
  40cd8e:	push   ds
  40cd8f:	sbb    ah,dl
  40cd91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd92:	mov    al,ds:0xac61735e
  40cd97:	and    al,0x6c
  40cd99:	cmp    BYTE PTR [ebx-0x60],ah
  40cd9c:	vdivss xmm2,xmm7,DWORD PTR [eax+0x698afbdb]
  40cda4:	aad    0x42
  40cda6:	dec    ebx
  40cda7:	call   0xd7c26fa1
  40cdac:	je     0x40cd47
  40cdae:	(bad)  [esp+esi*1-0x2be5a747]
  40cdb5:	loope  0x40cdb5
  40cdb7:	mov    ebp,0x1e33785c
  40cdbc:	shl    DWORD PTR [edx+0x5d42f3a8],0xbf
  40cdc3:	sti    
  40cdc4:	bound  ecx,QWORD PTR [ebx-0x2c]
  40cdc7:	(bad)  
  40cdc8:	fdiv   QWORD PTR [eax-0x25]
  40cdcb:	icebp  
  40cdcc:	into   
  40cdcd:	ins    BYTE PTR es:[edi],dx
  40cdce:	shl    DWORD PTR [ebx-0x11],1
  40cdd1:	pop    ebp
  40cdd2:	xor    edi,ecx
  40cdd4:	in     al,0x48
  40cdd6:	add    BYTE PTR [ecx],ah
  40cdd8:	stc    
  40cdd9:	and    edi,ecx
  40cddb:	dec    edx
  40cddc:	loope  0x40cd8d
  40cdde:	mov    esi,0x6f5fcb2f
  40cde3:	fwait
  40cde4:	xlat   BYTE PTR ds:[ebx]
  40cde5:	lahf   
  40cde6:	push   ecx
  40cde7:	jno    0x40ce1c
  40cde9:	js     0x40cdac
  40cdeb:	xlat   BYTE PTR ds:[ebx]
  40cdec:	mov    al,0xee
  40cdee:	fadd   DWORD PTR [edi+0x66]
  40cdf1:	adc    al,0xbb
  40cdf3:	dec    esi
  40cdf4:	cmp    bh,BYTE PTR [ecx+edi*8-0x27]
  40cdf8:	push   eax
  40cdf9:	and    dl,BYTE PTR [esi]
  40cdfb:	(bad)  
  40cdfc:	dec    ebp
  40cdfd:	lods   eax,DWORD PTR ds:[esi]
  40cdfe:	add    ch,BYTE PTR [ebx+0x3e]
  40ce01:	pop    esp
  40ce02:	dec    ebp
  40ce03:	mov    bl,0xdf
  40ce05:	fsubr  st,st(2)
  40ce07:	out    0xe5,al
  40ce09:	xor    esi,0xc4da3b5b
  40ce0f:	or     esp,DWORD PTR [ecx]
  40ce11:	ds jno 0x40cdd5
  40ce14:	adc    edx,ebp
  40ce16:	jno    0x40cdb0
  40ce18:	mov    al,ds:0xaf758126
  40ce1d:	pop    ecx
  40ce1e:	dec    ebp
  40ce1f:	outs   dx,DWORD PTR ds:[esi]
  40ce20:	hlt    
  40ce21:	in     eax,dx
  40ce22:	shl    dl,cl
  40ce24:	shr    ecx,0x5c
  40ce27:	dec    ebp
  40ce28:	fwait
  40ce29:	mov    bh,0x43
  40ce2b:	adc    al,0x94
  40ce2d:	push   ds
  40ce2e:	lock mov ch,0xf5
  40ce31:	add    BYTE PTR [eax],bl
  40ce33:	std    
  40ce34:	push   0xf4f4dbd4
  40ce39:	sub    dl,BYTE PTR [esi+0x120b8182]
  40ce3f:	ja     0x40ce67
  40ce41:	sbb    DWORD PTR [ecx+0x34],ebp
  40ce44:	icebp  
  40ce45:	cdq    
  40ce46:	mov    ds:0xd2cc076a,al
  40ce4b:	je     0x40ce13
  40ce4d:	stc    
  40ce4e:	aad    0x35
  40ce50:	sub    BYTE PTR [edx],dl
  40ce52:	sbb    eax,0xce549f7
  40ce57:	div    DWORD PTR [edx+0x71]
  40ce5a:	cmp    eax,0x1828084f
  40ce5f:	xor    DWORD PTR [ecx-0x8b16990],0x2c
  40ce66:	add    ecx,esi
  40ce68:	clc    
  40ce69:	mov    ah,0xa6
  40ce6b:	sti    
  40ce6c:	and    BYTE PTR [esi-0x6d97a6cd],ch
  40ce72:	push   0xf458e4ae
  40ce77:	outs   dx,BYTE PTR ds:[esi]
  40ce78:	jmp    0x4c83:0x2abd9c5a
  40ce7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce80:	jle    0x40cee8
  40ce82:	into   
  40ce83:	rcr    BYTE PTR [esp+eiz*2],0xe8
  40ce87:	in     al,0xd0
  40ce89:	pop    edx
  40ce8a:	mov    dl,0xcb
  40ce8c:	invlpg BYTE PTR [eax+esi*1+0x10551cb3]
  40ce94:	(bad)  
  40ce95:	pop    ss
  40ce96:	ins    BYTE PTR es:[edi],dx
  40ce97:	imul   eax,DWORD PTR [esi],0x17a3487b
  40ce9d:	add    BYTE PTR [ecx],bl
  40ce9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cea0:	mov    ch,0x40
  40cea2:	cmp    esi,DWORD PTR [edx+0x26]
  40cea5:	inc    ecx
  40cea6:	aam    0x48
  40cea8:	(bad)  
  40cea9:	dec    edx
  40ceaa:	ficomp WORD PTR [edx]
  40ceac:	mov    edi,DWORD PTR [edx-0x4d005cc7]
  40ceb2:	jmp    0xa8cc06e7
  40ceb7:	dec    ecx
  40ceb8:	in     al,dx
  40ceb9:	push   ss
  40ceba:	fucompp 
  40cebc:	imul   ecx,DWORD PTR [esi+edi*8+0x3b],0x1e
  40cec1:	leave  
  40cec2:	xor    al,0x81
  40cec4:	mov    ds:0xa4a035b0,eax
  40cec9:	pop    ebp
  40ceca:	xadd   BYTE PTR [esi+0x61],dl
  40cece:	adc    bh,BYTE PTR [ebx+0x77]
  40ced1:	sbb    edx,0x28
  40ced4:	add    DWORD PTR [esi+ebp*2+0x1dfdd1a7],0x56
  40cedc:	lods   al,BYTE PTR ds:[esi]
  40cedd:	push   ebx
  40cede:	push   eax
  40cedf:	and    eax,0x7dc872bc
  40cee4:	sbb    eax,0x61251896
  40cee9:	outs   dx,BYTE PTR ds:[esi]
  40ceea:	cmc    
  40ceeb:	ja     0x40cf5d
  40ceed:	pop    ecx
  40ceee:	mov    ecx,0x1beeb59f
  40cef3:	popa   
  40cef4:	xchg   esi,eax
  40cef5:	outs   dx,DWORD PTR ds:[esi]
  40cef6:	enter  0xd56f,0xb1
  40cefa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cefb:	mov    ebx,0x7cebe546
  40cf00:	icebp  
  40cf01:	(bad)  
  40cf02:	das    
  40cf03:	inc    eax
  40cf04:	ret    
  40cf05:	pop    ebx
  40cf06:	ins    BYTE PTR es:[edi],dx
  40cf07:	jmp    0x3b1a:0x4c9f16bf
  40cf0e:	xor    al,0xda
  40cf10:	(bad)  
  40cf11:	mov    dl,0x9a
  40cf13:	adc    BYTE PTR [ebp+0x47],ch
  40cf16:	cwde   
  40cf17:	cmp    ah,BYTE PTR ds:0x1b9d5bfb
  40cf1d:	sbb    DWORD PTR [eax+0x59],ebp
  40cf20:	xlat   BYTE PTR ds:[ebx]
  40cf21:	add    eax,ecx
  40cf23:	fimul  DWORD PTR [edx+0x58]
  40cf26:	aad    0xe8
  40cf28:	or     eax,0xaa39141a
  40cf2d:	sahf   
  40cf2e:	js     0x40cf15
  40cf30:	cmp    dl,BYTE PTR [ebx-0x30]
  40cf33:	fmul   DWORD PTR [eax+0x394f823d]
  40cf39:	out    dx,al
  40cf3a:	xchg   DWORD PTR [esi],esp
  40cf3c:	sti    
  40cf3d:	jp     0x40cf38
  40cf3f:	test   DWORD PTR [ecx+0x38a769ad],ecx
  40cf45:	retf   
  40cf46:	(bad)  
  40cf47:	fbstp  TBYTE PTR [eax-0x36f80d64]
  40cf4d:	repnz pop eax
  40cf4f:	cmp    eax,DWORD PTR [ecx-0x21]
  40cf52:	sub    edi,edi
  40cf54:	add    cl,BYTE PTR [ebp-0x102a0805]
  40cf5a:	mov    ebx,0x590b83a9
  40cf5f:	jge    0x40cfb1
  40cf61:	xor    ebp,esp
  40cf63:	xchg   BYTE PTR [edi+0x78],bl
  40cf66:	xor    BYTE PTR [edx-0x306db3df],cl
  40cf6c:	shl    BYTE PTR [edi+0x761231a9],cl
  40cf72:	inc    edi
  40cf73:	adc    bh,dl
  40cf75:	push   ebx
  40cf76:	mov    eax,0x4eed2b03
  40cf7b:	pop    eax
  40cf7c:	mov    ecx,0xefea2346
  40cf81:	push   es
  40cf82:	(bad)  
  40cf83:	ins    BYTE PTR es:[edi],dx
  40cf84:	add    BYTE PTR [eax+0x31],bl
  40cf87:	cld    
  40cf88:	(bad)  
  40cf89:	test   BYTE PTR [edi+0x57],ah
  40cf8c:	rcr    BYTE PTR [eax],1
  40cf8e:	popa   
  40cf8f:	pop    eax
  40cf90:	xor    edx,DWORD PTR [esp+ebx*1]
  40cf93:	jnp    0x40cf5d
  40cf95:	imul   esp,DWORD PTR [edx+0x6bd033c8],0x4dadda8e
  40cf9f:	adc    eax,0xcfb3729
  40cfa4:	ret    0xe071
  40cfa7:	aam    0x34
  40cfa9:	int    0x54
  40cfab:	lods   eax,DWORD PTR ds:[esi]
  40cfac:	mov    ebx,0x50160e7c
  40cfb1:	test   BYTE PTR [esi-0x569c0639],cl
  40cfb7:	pushf  
  40cfb8:	retf   0xd5e6
  40cfbb:	repnz ins DWORD PTR es:[edi],dx
  40cfbd:	inc    edi
  40cfbe:	pusha  
  40cfbf:	pop    ebp
  40cfc0:	std    
  40cfc1:	iret   
  40cfc2:	cmp    eax,0xf8b1eea
  40cfc7:	mov    esp,DWORD PTR [eax+0x2bdf4727]
  40cfcd:	sbb    ch,BYTE PTR [eax-0x3e]
  40cfd0:	and    dh,BYTE PTR [ecx-0xc]
  40cfd3:	mov    al,ds:0xa4ead49d
  40cfd8:	retf   0x3e5f
  40cfdb:	mov    bl,0x6e
  40cfdd:	imul   ebp,DWORD PTR [ebx],0xb9e8423e
  40cfe3:	stc    
  40cfe4:	mov    al,0x87
  40cfe6:	adc    edx,DWORD PTR [ecx-0x34b6054e]
  40cfec:	rcl    BYTE PTR [esi+0x5f],cl
  40cfef:	ins    DWORD PTR es:[edi],dx
  40cff0:	adc    esp,DWORD PTR [esi]
  40cff2:	cmp    eax,ebx
  40cff4:	xchg   edi,eax
  40cff5:	stos   DWORD PTR es:[edi],eax
  40cff6:	rol    DWORD PTR [edi-0x2f],cl
  40cff9:	scas   al,BYTE PTR es:[edi]
  40cffa:	int    0x26
  40cffc:	(bad)  
  40cffd:	fbld   TBYTE PTR [ebx-0x19c39d3e]
  40d003:	push   0xf49ec0e7
  40d008:	mov    esp,0x847a05a2
  40d00d:	cli    
  40d00e:	stos   BYTE PTR es:[edi],al
  40d00f:	jecxz  0x40cf99
  40d011:	pop    ds
  40d012:	enter  0xb29f,0xa6
  40d016:	push   ebp
  40d017:	iret   
  40d018:	(bad)  
  40d019:	das    
  40d01a:	lea    esp,[edi-0xd]
  40d01d:	daa    
  40d01e:	out    dx,al
  40d01f:	lahf   
  40d020:	xor    al,0x57
  40d022:	add    esi,ebx
  40d024:	cmp    al,BYTE PTR ds:0x34e5546c
  40d02a:	lds    ebx,FWORD PTR ds:0x8d31b1df
  40d030:	imul   edi,esi,0x9f8507be
  40d036:	pop    ebp
  40d037:	es mov ebp,ebp
  40d03a:	sti    
  40d03b:	and    DWORD PTR [ebp+0x58779968],ebx
  40d041:	setle  BYTE PTR [ecx+0x6a]
  40d045:	pop    ecx
  40d046:	add    ebx,esp
  40d048:	inc    esi
  40d049:	es popa 
  40d04b:	add    esi,DWORD PTR [edi]
  40d04d:	pop    ds
  40d04e:	outs   dx,BYTE PTR ds:[esi]
  40d04f:	inc    esp
  40d050:	adc    DWORD PTR [ebx+0x7b1c1ed3],ebp
  40d056:	in     eax,0x55
  40d058:	lds    edi,FWORD PTR [ebp-0x2605ef1f]
  40d05e:	mov    ds:0xdcddfa4a,eax
  40d063:	stc    
  40d064:	mov    eax,ecx
  40d066:	cs inc ebx
  40d068:	in     eax,dx
  40d069:	xchg   edi,eax
  40d06a:	and    cl,dh
  40d06c:	jns    0x40d06c
  40d06e:	ds loope 0x40cff2
  40d071:	pop    ecx
  40d072:	push   eax
  40d073:	popf   
  40d074:	push   edx
  40d075:	dec    edx
  40d076:	cmc    
  40d077:	add    ch,ch
  40d079:	jbe    0x40d01d
  40d07b:	sub    DWORD PTR [ebp+ebp*2+0x58],edi
  40d07f:	mov    gs,edx
  40d081:	pop    ds
  40d082:	push   ebp
  40d083:	(bad)  [ebx+0x19]
  40d086:	dec    esp
  40d087:	mov    cl,0x76
  40d089:	loopne 0x40d0da
  40d08b:	mov    ch,0xf4
  40d08d:	retf   
  40d08e:	js     0x40d012
  40d090:	dec    esp
  40d091:	popf   
  40d092:	mov    esi,0x63d46e21
  40d097:	aas    
  40d098:	lds    ecx,FWORD PTR [edi]
  40d09a:	add    BYTE PTR [edi+0x2d],0x3b
  40d09e:	inc    ebx
  40d09f:	or     eax,0x298b03a1
  40d0a4:	xlat   BYTE PTR ds:[ebx]
  40d0a5:	mov    edi,0x97fdf5c1
  40d0aa:	jb     0x40d07a
  40d0ac:	push   edi
  40d0ad:	(bad)  [ecx]
  40d0af:	pop    ecx
  40d0b0:	inc    esi
  40d0b1:	jl     0x40d0e5
  40d0b3:	test   eax,0xce9e7365
  40d0b8:	fwait
  40d0b9:	lds    ebx,FWORD PTR [edi+eiz*4+0x132a75d8]
  40d0c0:	jmp    0x40d074
  40d0c2:	push   ecx
  40d0c3:	mov    esp,DWORD PTR [esi+0x1759b3fb]
  40d0c9:	push   esi
  40d0ca:	xor    ch,ch
  40d0cc:	jno    0x40d11e
  40d0ce:	outs   dx,DWORD PTR ds:[esi]
  40d0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d0:	jmp    0x40d14d
  40d0d2:	in     al,0x6c
  40d0d4:	mov    ebp,0x62c287fd
  40d0d9:	sub    BYTE PTR [ebp+0x42],0xd3
  40d0dd:	aam    0xf0
  40d0df:	arpl   cx,di
  40d0e1:	leave  
  40d0e2:	mov    esi,DWORD PTR [edi+0x2bdb4ae6]
  40d0e8:	adc    edx,DWORD PTR [ecx+0x76]
  40d0eb:	sbb    BYTE PTR [esi-0x58],ch
  40d0ee:	mov    al,ds:0x9a8b56a
  40d0f3:	xor    eax,0x22ee5363
  40d0f8:	scas   eax,DWORD PTR es:[edi]
  40d0f9:	(bad)  
  40d0fa:	retf   
  40d0fb:	ins    DWORD PTR es:[edi],dx
  40d0fc:	jg     0x40d0d9
  40d0fe:	jmp    0x40d135
  40d100:	iret   
  40d101:	in     eax,0xc5
  40d103:	xor    bl,BYTE PTR [esi+0x5c]
  40d106:	pop    esp
  40d107:	dec    edi
  40d108:	jns    0x40d14f
  40d10a:	jns    0x40d125
  40d10c:	adc    edi,DWORD PTR gs:[ecx+0x4e7a1265]
  40d113:	cmp    BYTE PTR [si-0x7f],dh
  40d117:	xchg   edi,eax
  40d118:	inc    ebx
  40d119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d11a:	dec    ebx
  40d11b:	mov    ds:0xbacca17a,eax
  40d120:	ds cmp al,0x4
  40d123:	push   ecx
  40d124:	jmp    0x40d0dd
  40d126:	or     DWORD PTR cs:[edi],ebp
  40d129:	jae    0x40d0ba
  40d12b:	pop    ecx
  40d12c:	fisubr DWORD PTR [esi+0x267fac99]
  40d132:	adc    cl,dh
  40d134:	cmc    
  40d135:	adc    DWORD PTR ds:0xb115f3c7,esp
  40d13b:	out    0xb4,al
  40d13d:	loopne 0x40d168
  40d13f:	sbb    ah,BYTE PTR [esi]
  40d141:	cwde   
  40d142:	jmp    0x40d0f6
  40d144:	xor    eax,0x689f9800
  40d149:	cmp    al,0x2e
  40d14b:	xchg   edi,eax
  40d14c:	pop    es
  40d14d:	scas   al,BYTE PTR es:[edi]
  40d14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d14f:	jo     0x40d1a6
  40d151:	fimul  DWORD PTR [edx]
  40d153:	fcom   st(2)
  40d155:	(bad)  
  40d156:	jbe    0x40d1b3
  40d158:	or     DWORD PTR [ecx+0x748b8c08],esp
  40d15e:	push   ss
  40d15f:	bound  ecx,QWORD PTR [eax]
  40d161:	js     0x40d19e
  40d163:	fwait
  40d164:	pop    esi
  40d165:	xor    al,0xc9
  40d167:	xor    bh,BYTE PTR [esi]
  40d169:	sar    BYTE PTR [ecx+0x512f6b78],1
  40d16f:	pop    ds
  40d170:	pop    ss
  40d171:	mov    DWORD PTR [ebp-0x52],edi
  40d174:	push   ebp
  40d175:	jno    0x40d0f7
  40d177:	out    dx,al
  40d178:	ins    BYTE PTR es:[edi],dx
  40d179:	jle    0x40d18d
  40d17b:	push   ss
  40d17c:	sbb    BYTE PTR [eax-0x7371785a],al
  40d182:	sti    
  40d183:	inc    eax
  40d184:	mov    cl,cl
  40d186:	pop    es
  40d187:	jg     0x40d184
  40d189:	dec    ebp
  40d18a:	mov    bl,ch
  40d18c:	sbb    eax,DWORD PTR [edi-0x20]
  40d18f:	dec    esi
  40d190:	fwait
  40d191:	inc    esi
  40d192:	lds    esp,FWORD PTR [ebx]
  40d194:	popa   
  40d195:	push   ebx
  40d196:	aas    
  40d197:	mov    dh,0x12
  40d199:	xchg   DWORD PTR ds:0x23050fb3,ebx
  40d19f:	leave  
  40d1a0:	fwait
  40d1a1:	add    al,0x92
  40d1a3:	dec    ecx
  40d1a4:	pop    edx
  40d1a5:	xchg   edx,eax
  40d1a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a7:	into   
  40d1a8:	sbb    eax,0xb8f60379
  40d1ad:	add    BYTE PTR [eax+eax*8+0x2c1848cc],cl
  40d1b4:	jbe    0x40d231
  40d1b6:	ins    BYTE PTR es:[edi],dx
  40d1b7:	lods   eax,DWORD PTR gs:[esi]
  40d1b9:	fcomp  QWORD PTR [esi-0x1d65c99e]
  40d1bf:	mov    eax,DWORD PTR [ebx+0x51c303ca]
  40d1c5:	xchg   DWORD PTR [ebx+0x2e],esi
  40d1c8:	adc    dl,BYTE PTR [ebx]
  40d1ca:	ret    0xaa1d
  40d1cd:	mul    BYTE PTR [edx]
  40d1cf:	ins    BYTE PTR es:[edi],dx
  40d1d0:	push   0xfffffff9
  40d1d2:	jns    0x40d176
  40d1d4:	inc    ebx
  40d1d5:	adc    cl,BYTE PTR [ecx+0x1d8a3c09]
  40d1db:	dec    edi
  40d1dc:	sbb    cl,BYTE PTR [edx-0x3499bca6]
  40d1e2:	mov    ebx,0x67e89af3
  40d1e7:	xor    eax,0x149a223e
  40d1ec:	pop    esp
  40d1ed:	ss jns 0x40d22a
  40d1f0:	shl    BYTE PTR [edx],1
  40d1f2:	add    BYTE PTR [edx],0xe
  40d1f5:	les    edi,FWORD PTR [edx-0x6d]
  40d1f8:	jp     0x40d239
  40d1fa:	push   0x25
  40d1fc:	(bad)  
  40d1fd:	je     0x40d21a
  40d1ff:	sar    DWORD PTR [edi+0x36],0x19
  40d203:	loope  0x40d238
  40d205:	test   BYTE PTR [esp+ecx*4+0x6d91125d],dh
  40d20c:	jg     0x40d1a3
  40d20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d20f:	ror    DWORD PTR [ebp+0x73],0x65
  40d213:	hlt    
  40d214:	dec    edx
  40d215:	inc    edi
  40d216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d217:	add    BYTE PTR [edx+0x63],al
  40d21a:	mov    al,0x53
  40d21c:	stos   DWORD PTR es:[edi],eax
  40d21d:	aad    0xa1
  40d21f:	es enter 0xccea,0x6d
  40d224:	das    
  40d225:	jmp    0xcfc1:0x2ede3a72
  40d22c:	lods   al,BYTE PTR ds:[esi]
  40d22d:	xor    al,0x19
  40d22f:	ret    
  40d230:	jge    0x40d1d4
  40d232:	adc    al,0x97
  40d234:	mov    esp,0x663175f8
  40d239:	xchg   BYTE PTR [edx-0x534d8755],al
  40d23f:	push   esi
  40d240:	scas   al,BYTE PTR es:[edi]
  40d241:	outs   dx,DWORD PTR ds:[esi]
  40d242:	sub    DWORD PTR [ebx+edi*2+0x3],edi
  40d246:	ret    0x9f23
  40d249:	mov    ebp,esp
  40d24b:	daa    
  40d24c:	jecxz  0x40d26c
  40d24e:	and    ecx,DWORD PTR [ecx-0x7]
  40d251:	push   ebx
  40d252:	jg     0x40d22e
  40d254:	popf   
  40d255:	or     BYTE PTR [edi-0x5c],al
  40d258:	add    DWORD PTR [esi],ecx
  40d25a:	mov    ah,BYTE PTR [esp+ebx*2+0x54]
  40d25e:	(bad)  
  40d25f:	lock fst QWORD PTR [eax]
  40d262:	retf   0xffe2
  40d265:	push   ecx
  40d266:	jbe    0x40d28a
  40d268:	call   0xd439232d
  40d26d:	sbb    eax,0x9880bf5d
  40d272:	lods   eax,DWORD PTR ds:[esi]
  40d273:	sbb    DWORD PTR [edi+0x5131ee87],0xffffffdf
  40d27a:	ja     0x40d213
  40d27c:	xchg   esp,eax
  40d27d:	pusha  
  40d27e:	push   ds
  40d27f:	std    
  40d280:	cld    
  40d281:	sahf   
  40d282:	xor    eax,0x576bf169
  40d287:	pop    edi
  40d288:	fsubrp st(2),st
  40d28a:	cmp    ch,BYTE PTR [ebx-0x66c3dc94]
  40d290:	cli    
  40d291:	ss scas al,BYTE PTR es:[edi]
  40d293:	sub    ebp,DWORD PTR ds:0x313dbdc9
  40d299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d29a:	push   ebp
  40d29b:	cs xchg ebx,eax
  40d29d:	les    ebx,FWORD PTR [esp+esi*4]
  40d2a0:	retf   0xc84a
  40d2a3:	mov    ds:0x6bed8e51,al
  40d2a8:	xor    dh,bl
  40d2aa:	sbb    ch,BYTE PTR ds:0x2787514d
  40d2b0:	iret   
  40d2b1:	pop    esi
  40d2b2:	xor    BYTE PTR [esi],ah
  40d2b4:	ss (bad) 
  40d2b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2b7:	ret    0xebb
  40d2ba:	out    dx,al
  40d2bb:	and    al,BYTE PTR [ecx-0x36]
  40d2be:	ret    
  40d2bf:	ret    
  40d2c0:	jp     0x40d2b4
  40d2c2:	dec    esp
  40d2c3:	pusha  
  40d2c4:	shr    DWORD PTR [ebx],cl
  40d2c6:	out    dx,al
  40d2c7:	scas   eax,DWORD PTR es:[edi]
  40d2c8:	cmc    
  40d2c9:	in     eax,0x3
  40d2cb:	jp     0x40d28a
  40d2cd:	xchg   ecx,eax
  40d2ce:	mov    ebp,0x3100e4f0
  40d2d3:	stos   DWORD PTR es:[edi],eax
  40d2d4:	pop    ebx
  40d2d5:	leave  
  40d2d6:	xor    BYTE PTR [ecx],bh
  40d2d8:	xchg   DWORD PTR [eax],esi
  40d2da:	mov    al,0x55
  40d2dc:	fidiv  DWORD PTR [ebx]
  40d2de:	inc    ebx
  40d2df:	jl     0x40d2cb
  40d2e1:	or     BYTE PTR [eax+0x7611e1c],ch
  40d2e7:	dec    edx
  40d2e8:	jmp    0x40d2cf
  40d2ea:	xor    al,0xb4
  40d2ec:	es retf 
  40d2ee:	aam    0x7d
  40d2f0:	mov    esi,0xa1f49989
  40d2f5:	mov    dl,0xb5
  40d2f7:	mov    bl,0xb6
  40d2f9:	pop    ds
  40d2fa:	mov    ebp,0x35811678
  40d2ff:	mov    eax,0x2bcd3a74
  40d304:	sbb    edx,esp
  40d306:	aas    
  40d307:	out    0x99,eax
  40d309:	pop    ds
  40d30a:	retf   0x43c5
  40d30d:	or     BYTE PTR [edi],ah
  40d30f:	ins    BYTE PTR es:[edi],dx
  40d310:	cmp    eax,0x1862e061
  40d315:	int3   
  40d316:	push   cs
  40d317:	adc    ah,BYTE PTR [ebx]
  40d319:	nop
  40d31a:	and    eax,0x8f67828b
  40d31f:	adc    DWORD PTR [esi+0x4a],ecx
  40d322:	add    ah,ch
  40d324:	clc    
  40d325:	js     0x40d351
  40d327:	test   ebp,edi
  40d329:	mov    edi,DWORD PTR [eax]
  40d32b:	imul   eax,DWORD PTR [ebx-0x16],0x5a
  40d32f:	jle    0x40d2fd
  40d331:	popf   
  40d332:	sbb    al,0x61
  40d334:	inc    esi
  40d335:	in     al,dx
  40d336:	call   0xc8e5:0x7c9da205
  40d33d:	mov    esp,0x256bb8a2
  40d342:	test   DWORD PTR [eax],0x6371b63d
  40d348:	mov    al,ds:0x452506a6
  40d34d:	push   ebx
  40d34e:	inc    ecx
  40d34f:	mul    DWORD PTR [ebp+0x1a]
  40d352:	addr16 (bad) 
  40d355:	xchg   ebp,eax
  40d356:	ins    BYTE PTR es:[edi],dx
  40d357:	cmc    
  40d358:	inc    esi
  40d359:	jno    0x40d3aa
  40d35b:	sub    al,0xb5
  40d35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d35e:	push   ebx
  40d35f:	inc    esi
  40d360:	jns    0x40d3b7
  40d362:	jmp    0x2ef6:0xda861629
  40d369:	sbb    eax,0x5075c2e2
  40d36e:	test   ebx,esi
  40d370:	repz sub eax,edx
  40d373:	xchg   edi,eax
  40d374:	inc    eax
  40d375:	pop    es
  40d376:	je     0x40d315
  40d378:	cli    
  40d379:	jb     0x40d321
  40d37b:	inc    DWORD PTR [edi]
  40d37d:	inc    ebp
  40d37e:	add    ebx,0x1002
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	aaa    
  40d3d1:	inc    eax
  40d3d2:	sub    DWORD PTR [eax-0x4e],esp
  40d3d5:	rol    DWORD PTR [ebx-0x7ca1f37d],cl
  40d3db:	cmp    DWORD PTR [edx+0x36],0x3
  40d3df:	and    BYTE PTR [edx+edi*8-0x367770a0],dh
  40d3e6:	jae    0x40d41c
  40d3e8:	iret   
  40d3e9:	das    
  40d3ea:	addr16 imul edx,ebp,0x31
  40d3ee:	xor    BYTE PTR [esi+0x7],cl
  40d3f1:	(bad)  
  40d3f2:	(bad)  
  40d3f4:	(bad)  
  40d3f5:	adc    BYTE PTR [edx-0x46],dh
  40d3f8:	push   eax
  40d3f9:	pop    esp
  40d3fa:	jmp    0x233a3b94
  40d3ff:	xchg   ebx,eax
  40d400:	jb     0x40d425
  40d402:	fisttp DWORD PTR [eax+0x242a9fee]
  40d408:	icebp  
  40d409:	lock xchg edi,eax
  40d40b:	out    0xb2,eax
  40d40d:	push   ebp
  40d40e:	sti    
  40d40f:	dec    edi
  40d410:	repnz test BYTE PTR [edi],cl
  40d413:	lds    ebx,FWORD PTR [edi+0x1]
  40d416:	clc    
  40d417:	loopne 0x40d3b2
  40d419:	xchg   ecx,eax
  40d41a:	pop    eax
  40d41b:	(bad)  
  40d41c:	outs   dx,BYTE PTR ds:[esi]
  40d41d:	xor    esp,DWORD PTR [eax]
  40d41f:	push   ecx
  40d420:	and    eax,0x6b92af28
  40d425:	ret    0x8e33
  40d428:	sahf   
  40d429:	jb     0x40d49d
  40d42b:	inc    edi
  40d42c:	cmc    
  40d42d:	(bad)  
  40d42e:	mov    edi,0x346e176
  40d433:	and    DWORD PTR [edi-0x7f],ebp
  40d436:	mov    gs,WORD PTR [ebp-0x31]
  40d439:	mov    eax,0x73bd20e9
  40d43e:	inc    ebx
  40d43f:	xchg   ecx,eax
  40d440:	enter  0xf86a,0x1e
  40d444:	pop    eax
  40d445:	jnp    0x40d45d
  40d447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d448:	sub    bh,ch
  40d44a:	daa    
  40d44b:	push   ss
  40d44c:	dec    ebp
  40d44d:	pop    ebp
  40d44e:	dec    edi
  40d44f:	and    esi,DWORD PTR [eax+0x7a24dabe]
  40d455:	retf   0xb302
  40d458:	pop    ds
  40d459:	loopne 0x40d413
  40d45b:	shl    DWORD PTR [ebp-0x7f],1
  40d45e:	ja     0x40d470
  40d460:	sbb    bl,BYTE PTR [ebx]
  40d462:	pop    es
  40d463:	mov    eax,0x77ec0cb2
  40d468:	xlat   BYTE PTR ds:[ebx]
  40d469:	mov    WORD PTR [bx+si],?
  40d46c:	jbe    0x40d4ba
  40d46e:	pushw  cs
  40d470:	je     0x40d4ed
  40d472:	mov    eax,ds:0x6fa76ec3
  40d477:	(bad)  
  40d478:	fdiv   QWORD PTR [esi-0x16]
  40d47b:	adc    BYTE PTR [edx+0x5b],ch
  40d47e:	sub    DWORD PTR [edx-0x5],esi
  40d481:	jge    0x40d4ae
  40d483:	scas   eax,DWORD PTR es:[edi]
  40d484:	xchg   esi,eax
  40d485:	sub    BYTE PTR [edi+0x9],ah
  40d488:	fwait
  40d489:	mov    ds:0xb4e025e7,eax
  40d48e:	inc    ebx
  40d48f:	(bad)  
  40d490:	clc    
  40d491:	pop    ecx
  40d492:	(bad)  
  40d493:	das    
  40d494:	xchg   DWORD PTR [ebx],edi
  40d496:	mul    BYTE PTR [esi-0xf]
  40d499:	jnp    0x40d441
  40d49b:	xchg   BYTE PTR [esi+ecx*1+0x1a3c8927],bh
  40d4a2:	(bad)  
  40d4a3:	test   DWORD PTR [ebx],esi
  40d4a5:	mov    esi,0x2d93a349
  40d4aa:	adc    bh,al
  40d4ac:	sub    ecx,ebx
  40d4ae:	(bad)  
  40d4af:	sahf   
  40d4b0:	aad    0x49
  40d4b2:	int3   
  40d4b3:	mov    ds:0xb0925d5,eax
  40d4b8:	add    bh,BYTE PTR [edx-0x4a3dd19e]
  40d4be:	pop    ds
  40d4bf:	mov    ecx,0xcb8d746d
  40d4c4:	sub    dl,BYTE PTR [ebp+0xe]
  40d4c7:	lods   eax,DWORD PTR ds:[esi]
  40d4c8:	retf   
  40d4c9:	xlat   BYTE PTR ds:[ebx]
  40d4ca:	popf   
  40d4cb:	fld    QWORD PTR [esi-0x28]
  40d4ce:	xchg   esi,eax
  40d4cf:	stos   DWORD PTR es:[edi],eax
  40d4d0:	cmp    al,0xa9
  40d4d3:	xchg   esi,eax
  40d4d4:	mov    cl,dh
  40d4d6:	jae    0x40d494
  40d4d8:	push   eax
  40d4d9:	dec    eax
  40d4da:	repz jb 0x40d52c
  40d4dd:	mov    bh,0x1
  40d4df:	add    eax,0xd2e743c0
  40d4e4:	mov    ah,0x3b
  40d4e6:	out    0xa8,al
  40d4e8:	js     0x40d4ce
  40d4ea:	ror    BYTE PTR [eax],cl
  40d4ec:	imul   ebp,DWORD PTR [ebp-0x1e8e660b],0xfffffffb
  40d4f3:	jg     0x40d551
  40d4f5:	rep ins BYTE PTR es:[edi],dx
  40d4f7:	scas   eax,DWORD PTR es:[edi]
  40d4f8:	shl    DWORD PTR [esi-0x24eab552],cl
  40d4fe:	xchg   ebp,eax
  40d4ff:	cwde   
  40d500:	xor    bh,bl
  40d502:	pop    ebp
  40d503:	leave  
  40d504:	psubq  mm5,QWORD PTR ds:0xeb290ea1
  40d50b:	cmp    eax,0xfa023027
  40d510:	in     al,0x7c
  40d512:	stos   DWORD PTR es:[edi],eax
  40d513:	pusha  
  40d514:	mov    ebp,0x18098699
  40d519:	push   ss
  40d51a:	cli    
  40d51b:	data16 int3 
  40d51d:	push   eax
  40d51e:	lock inc ebx
  40d520:	xor    BYTE PTR ds:0x3549c75c,bl
  40d526:	push   ds
  40d527:	mov    al,0x9c
  40d529:	cmp    BYTE PTR [ecx+edx*2],ah
  40d52c:	jecxz  0x40d521
  40d52e:	ins    BYTE PTR es:[edi],dx
  40d52f:	mov    dh,0xc5
  40d531:	in     al,dx
  40d532:	cdq    
  40d533:	mov    ecx,0x4cb6ed5f
  40d538:	or     al,0x2b
  40d53a:	idiv   DWORD PTR [esi]
  40d53c:	ja     0x40d595
  40d53e:	je     0x40d5ac
  40d540:	xchg   ebx,eax
  40d541:	xchg   esp,eax
  40d542:	sbb    DWORD PTR [esi+eax*8+0x470169b],ebp
  40d549:	out    dx,eax
  40d54a:	lock xor eax,0x81fd7ad6
  40d550:	rol    DWORD PTR [esp+ebp*1+0x58],1
  40d554:	add    BYTE PTR [eax-0x2f],0xec
  40d558:	pop    edx
  40d559:	scas   eax,DWORD PTR es:[edi]
  40d55a:	ins    DWORD PTR es:[edi],dx
  40d55b:	mov    bh,0x75
  40d55d:	xchg   edx,eax
  40d55e:	out    0x3a,al
  40d560:	sub    cl,cl
  40d562:	int3   
  40d563:	xor    al,0x77
  40d565:	jno    0x40d549
  40d567:	repnz mov es,edx
  40d56a:	std    
  40d56b:	mov    esp,0xe379d152
  40d570:	lock cs popa 
  40d573:	push   esp
  40d574:	in     al,0x17
  40d576:	mov    bh,0xa8
  40d578:	and    BYTE PTR [ebx+0x51cde8d0],dh
  40d57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d57f:	xchg   DWORD PTR [edi-0x7c],esi
  40d582:	mov    ecx,0x8e514ff8
  40d587:	enter  0x4ab9,0x4
  40d58b:	cmp    eax,0xa9ae3306
  40d590:	jns    0x40d5bc
  40d592:	pusha  
  40d593:	dec    ebx
  40d594:	clc    
  40d595:	outs   dx,BYTE PTR ds:[esi]
  40d596:	popa   
  40d597:	inc    ebx
  40d598:	aam    0x5b
  40d59a:	push   eax
  40d59b:	push   esi
  40d59c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d59d:	xor    esp,DWORD PTR [eax+0x629226cb]
  40d5a3:	loop   0x40d570
  40d5a5:	into   
  40d5a6:	mov    eax,ds:0x558ae0c0
  40d5ab:	(bad)  
  40d5ac:	jle    0x40d600
  40d5ae:	sub    eax,0xe61e540b
  40d5b3:	jne    0x40d5f4
  40d5b5:	mov    ah,0xd2
  40d5b7:	test   BYTE PTR cs:[edi+0x5c019580],0xac
  40d5bf:	sbb    bl,BYTE PTR [esi+0x211bf95a]
  40d5c5:	jl     0x40d5f1
  40d5c7:	inc    edi
  40d5c8:	cmc    
  40d5c9:	push   cs
  40d5ca:	inc    edi
  40d5cb:	xor    DWORD PTR [edx],esi
  40d5cd:	cmp    DWORD PTR [esi],edx
  40d5cf:	mov    bh,0x7c
  40d5d1:	stos   DWORD PTR es:[edi],eax
  40d5d2:	and    esi,DWORD PTR [edx]
  40d5d4:	add    bl,BYTE PTR [ecx+0x4cb20b9a]
  40d5da:	aad    0xc7
  40d5dc:	cld    
  40d5dd:	and    al,0x51
  40d5df:	stc    
  40d5e0:	aaa    
  40d5e1:	push   ds
  40d5e2:	stos   DWORD PTR es:[edi],eax
  40d5e3:	xchg   ebp,eax
  40d5e4:	icebp  
  40d5e5:	jbe    0x40d61f
  40d5e7:	jae    0x40d5ad
  40d5e9:	mov    esp,0x4e448e2b
  40d5ee:	dec    edi
  40d5ef:	test   al,0xb4
  40d5f1:	inc    eax
  40d5f2:	sbb    ebp,ebx
  40d5f4:	repz mov esi,0xeb590319
  40d5fa:	jns    0x40d66b
  40d5fc:	mov    eax,0x5b75e1b9
  40d601:	cmp    esi,DWORD PTR [edx]
  40d603:	shl    bl,cl
  40d605:	inc    DWORD PTR [edx-0x5a]
  40d608:	lods   eax,DWORD PTR ds:[esi]
  40d609:	cdq    
  40d60a:	and    bl,BYTE PTR [ecx+0x52]
  40d60d:	popf   
  40d60e:	mov    ebx,0x12f66500
  40d613:	addr16 mov edx,0x4a0d89f7
  40d619:	and    ebx,0xffffffe1
  40d61c:	mov    ah,0xe9
  40d61e:	pop    eax
  40d61f:	fst    QWORD PTR [ecx-0x11069699]
  40d625:	repnz das 
  40d627:	sbb    cl,BYTE PTR [edx-0x4cc0c2e8]
  40d62d:	xor    bl,bh
  40d62f:	out    0xc8,al
  40d631:	aaa    
  40d632:	push   edx
  40d633:	mov    ebp,0xde890938
  40d639:	mov    esp,0x18461208
  40d63e:	test   BYTE PTR [esp+esi*2-0x46],dh
  40d642:	sub    DWORD PTR [eax-0x66524431],0xfffffff5
  40d649:	mov    eax,ds:0x80d49d35
  40d64e:	call   0x18239dd5
  40d653:	je     0x40d5ec
  40d655:	push   0xffffff92
  40d657:	lea    edi,[ebp+0x3c4965f1]
  40d65d:	jo     0x40d5fd
  40d65f:	dec    BYTE PTR [esi]
  40d661:	mov    ebp,0xf5afaccf
  40d666:	mov    al,ds:0x65f17bb5
  40d66b:	add    al,0x5c
  40d66d:	sub    al,0xde
  40d66f:	pop    ebp
  40d670:	mov    BYTE PTR [ecx-0x4f36838d],cl
  40d676:	outs   dx,DWORD PTR ds:[esi]
  40d677:	cmp    DWORD PTR [eax-0x8],esi
  40d67a:	ins    DWORD PTR es:[edi],dx
  40d67b:	sub    BYTE PTR [eax],bl
  40d67d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d67e:	stos   BYTE PTR es:[edi],al
  40d67f:	enter  0x4f9a,0xd
  40d683:	jg     0x40d639
  40d685:	mov    edi,0xdf377ea2
  40d68a:	or     DWORD PTR [ebp+0x78399523],esi
  40d690:	test   eax,0x210b4038
  40d695:	fs out dx,eax
  40d697:	mov    edi,0xca07f873
  40d69c:	cs mov bl,0x90
  40d69f:	mov    ah,0xbc
  40d6a1:	mov    edx,0x4745ce97
  40d6a6:	in     al,0xbc
  40d6a8:	ja     0x40d6bc
  40d6aa:	clc    
  40d6ab:	ds lock (bad) 
  40d6ae:	in     al,0xfd
  40d6b0:	cmp    BYTE PTR [ebx],bh
  40d6b2:	(bad)  
  40d6b3:	mov    es,WORD PTR [ecx-0x77]
  40d6b6:	aaa    
  40d6b7:	dec    ebp
  40d6b8:	sub    BYTE PTR [ebp-0x7e21fca9],ch
  40d6be:	stos   DWORD PTR es:[edi],eax
  40d6bf:	addr16 je 0x40d6f3
  40d6c2:	mov    dh,0xef
  40d6c4:	fild   QWORD PTR [ebx+eax*4+0x4d]
  40d6c8:	gs fst st(6)
  40d6cb:	push   esp
  40d6cc:	add    al,0xf2
  40d6ce:	add    esp,edx
  40d6d0:	pop    esp
  40d6d1:	sbb    al,0xad
  40d6d3:	lods   al,BYTE PTR ds:[esi]
  40d6d4:	push   ss
  40d6d5:	sti    
  40d6d6:	jl     0x40d6b7
  40d6d8:	pop    eax
  40d6d9:	arpl   dx,di
  40d6db:	shr    DWORD PTR [ebx],0x38
  40d6de:	pop    ss
  40d6df:	sub    DWORD PTR [ecx],esp
  40d6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6e2:	stc    
  40d6e3:	cld    
  40d6e4:	dec    DWORD PTR [ebx-0x6d]
  40d6e7:	sub    dh,cl
  40d6e9:	(bad)  
  40d6ea:	push   eax
  40d6eb:	fcomp  st(0)
  40d6ed:	xor    dh,bl
  40d6ef:	les    edi,FWORD PTR [esi]
  40d6f1:	shld   DWORD PTR [edx-0x1e],ebx,cl
  40d6f5:	(bad)  
  40d6f6:	push   ebp
  40d6f7:	(bad)  
  40d6f8:	fwait
  40d6f9:	outs   dx,BYTE PTR ds:[esi]
  40d6fa:	xor    DWORD PTR [ecx-0x70763cc],esp
  40d700:	jecxz  0x40d6c3
  40d702:	enter  0x629d,0xdf
  40d706:	jb     0x40d68a
  40d708:	xchg   edx,eax
  40d709:	mov    es,WORD PTR [eax+esi*8+0x63535a00]
  40d710:	cmp    ebx,edx
  40d712:	jbe    0x40d713
  40d714:	xor    dh,BYTE PTR [ecx+esi*8-0x3a7640fe]
  40d71b:	test   al,0xd4
  40d71d:	mov    ds:0x5b03086e,al
  40d722:	std    
  40d723:	jns    0x40d75e
  40d725:	lock mov bh,BYTE PTR [edx+0x18]
  40d729:	test   eax,0xad4763e9
  40d72e:	or     BYTE PTR [edx+0xa],0x22
  40d732:	pop    esp
  40d733:	lods   eax,DWORD PTR ds:[esi]
  40d734:	sbb    eax,0xd85d5f53
  40d739:	push   ebp
  40d73a:	(bad)  
  40d73b:	adc    BYTE PTR [ebx+0x19],cl
  40d73e:	mov    esi,0xe60e0d75
  40d743:	sbb    al,0xc9
  40d745:	mov    dl,0xa2
  40d747:	dec    edi
  40d748:	xchg   ecx,eax
  40d749:	or     ebp,DWORD PTR [esi+0x34]
  40d74c:	mov    ch,0x6f
  40d74e:	inc    edx
  40d74f:	add    eax,0x4451c7bf
  40d754:	push   0xffffff9b
  40d756:	retf   
  40d757:	and    edx,DWORD PTR [edi+0x7]
  40d75a:	dec    ebp
  40d75b:	xchg   ebp,eax
  40d75c:	mov    ecx,0xfd9770e3
  40d761:	push   eax
  40d762:	sub    eax,0x524a1e97
  40d767:	jo     0x40d75d
  40d769:	jmp    0x40d7df
  40d76b:	dec    esi
  40d76c:	jae    0x40d6f4
  40d76e:	or     esi,DWORD PTR [ecx-0x6b7d33fc]
  40d774:	cs jnp 0x40d795
  40d777:	push   0xffffffb5
  40d779:	add    ecx,eax
  40d77b:	or     ebp,DWORD PTR [esi]
  40d77d:	cdq    
  40d77e:	shl    DWORD PTR [edx],0x7f
  40d781:	pop    ebx
  40d782:	shl    BYTE PTR [eax],1
  40d784:	jo     0x40d78c
  40d786:	jge    0x40d7ef
  40d788:	push   edi
  40d789:	or     BYTE PTR [esp+esi*1+0x9],0x1
  40d78e:	sub    BYTE PTR [ebp-0x4f],cl
  40d791:	test   DWORD PTR [ebx],edx
  40d793:	xor    eax,0x20e2dd0a
  40d798:	popf   
  40d799:	leave  
  40d79a:	mov    eax,ds:0xc847c231
  40d79f:	js     0x40d75d
  40d7a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a2:	inc    esi
  40d7a3:	mov    esi,0xdf8f756c
  40d7a8:	hlt    
  40d7a9:	mov    bh,0x17
  40d7ab:	leave  
  40d7ac:	mov    cs,ebp
  40d7ae:	or     ecx,DWORD PTR [ebp+eax*4-0xe]
  40d7b2:	iret   
  40d7b3:	das    
  40d7b4:	test   BYTE PTR [ecx+0x3000b265],0xfe
  40d7bb:	push   0xffffffec
  40d7bd:	jmp    0x6018b678
  40d7c2:	fild   QWORD PTR [eax-0x30d6bdf2]
  40d7c8:	add    esp,esp
  40d7ca:	je     0x40d79f
  40d7cc:	jne    0x40d7d4
  40d7ce:	sahf   
  40d7cf:	or     ebx,ebx
  40d7d1:	push   eax
  40d7d2:	push   esp
  40d7d3:	outs   dx,DWORD PTR ds:[esi]
  40d7d4:	xchg   edx,eax
  40d7d5:	retf   0x4b98
  40d7d8:	into   
  40d7d9:	ins    BYTE PTR es:[edi],dx
  40d7da:	retf   
  40d7db:	lock es adc DWORD PTR cs:[esi+0x2b8806f5],esp
  40d7e4:	fild   QWORD PTR [ecx+0x3f]
  40d7e7:	stos   BYTE PTR es:[edi],al
  40d7e8:	in     al,0x8e
  40d7ea:	jge    0x40d82b
  40d7ec:	je     0x40d773
  40d7ee:	sub    eax,0xb2a6aead
  40d7f3:	and    ecx,DWORD PTR [esp+edx*8]
  40d7f6:	jns    0x40d854
  40d7f8:	mov    esi,0xe1f9e56b
  40d7fd:	xchg   esi,eax
  40d7fe:	pop    es
  40d7ff:	lods   eax,DWORD PTR ds:[esi]
  40d800:	cld    
  40d801:	fstp   QWORD PTR [ebx-0x2a6d6ff4]
  40d807:	sub    edx,ebp
  40d809:	or     ch,BYTE PTR [edi-0x38421e59]
  40d80f:	mov    edx,0xd3065eb7
  40d814:	adc    al,0x57
  40d816:	xor    edx,esi
  40d818:	sbb    cl,ch
  40d81a:	clc    
  40d81b:	xchg   ebx,eax
  40d81c:	jp     0x40d7e6
  40d81e:	pop    eax
  40d81f:	test   eax,0x1383678d
  40d824:	or     al,0xac
  40d826:	mov    ah,0xdf
  40d828:	int    0x84
  40d82a:	dec    esi
  40d82b:	push   ebp
  40d82c:	scas   al,BYTE PTR es:[edi]
  40d82d:	push   ss
  40d82e:	ja     0x40d862
  40d830:	nop
  40d831:	repnz xchg esp,eax
  40d833:	sti    
  40d834:	or     esi,DWORD PTR [ebx+0x5]
  40d837:	push   cs
  40d838:	mov    ebp,0xcaf6b78a
  40d83d:	ds push ecx
  40d83f:	(bad)  
  40d841:	shl    BYTE PTR [ebx],0xb9
  40d844:	push   es
  40d845:	inc    esp
  40d846:	repnz arpl WORD PTR [edi],di
  40d849:	sbb    al,0x23
  40d84b:	sub    al,0x47
  40d84d:	push   esi
  40d84e:	pop    ebx
  40d84f:	xchg   ecx,eax
  40d850:	mov    bl,0x5f
  40d852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d853:	mov    eax,0x306ffc8d
  40d858:	(bad)  
  40d859:	fcmovne st,st(5)
  40d85b:	inc    eax
  40d85c:	popf   
  40d85d:	test   al,0x72
  40d85f:	cmp    DWORD PTR [ebx+0x51f5b9eb],esi
  40d865:	xlat   BYTE PTR ds:[ebx]
  40d866:	inc    edi
  40d867:	sahf   
  40d868:	sub    DWORD PTR [ebx+0x717e869d],esi
  40d86e:	and    BYTE PTR [edx+ebp*2],al
  40d871:	loopne 0x40d848
  40d873:	in     eax,0x81
  40d875:	fcomp  st(6)
  40d877:	and    bl,BYTE PTR [ecx+0x46157bff]
  40d87d:	mov    dl,BYTE PTR [ebp-0x50]
  40d880:	jp     0x40d838
  40d882:	sub    eax,0x97e11582
  40d887:	xchg   esi,eax
  40d888:	enter  0x89d0,0x72
  40d88c:	clc    
  40d88d:	mov    eax,0x1238f9cc
  40d892:	pop    edx
  40d893:	push   cs
  40d894:	iret   
  40d895:	es dec edx
  40d897:	xor    BYTE PTR [edx+eiz*4],ah
  40d89a:	imul   DWORD PTR ds:0x21cc729e
  40d8a0:	adc    al,0x22
  40d8a2:	adc    ecx,edx
  40d8a4:	adc    al,0x3d
  40d8a6:	icebp  
  40d8a7:	lock sbb eax,0x8594ad55
  40d8ad:	xchg   ecx,eax
  40d8ae:	and    eax,0xa91e5feb
  40d8b3:	mov    dh,0x8f
  40d8b5:	js     0x40d8b5
  40d8b7:	ror    DWORD PTR [edx+0x53c51125],0xd0
  40d8be:	dec    ebp
  40d8bf:	mov    ds:0x1dba0235,al
  40d8c4:	lods   eax,DWORD PTR ds:[esi]
  40d8c5:	push   ebp
  40d8c6:	pop    ds
  40d8c7:	inc    edi
  40d8c8:	icebp  
  40d8c9:	fnstenv [ebx+0x764de7df]
  40d8cf:	mov    esp,0xf5a7fa45
  40d8d4:	imul   esi,DWORD PTR ss:[esi+0x601b1f0f],0xb701edc9
  40d8df:	mov    cs,WORD PTR [eax-0x45]
  40d8e2:	out    0x8e,al
  40d8e4:	lds    eax,FWORD PTR ds:0xf9faaf63
  40d8ea:	mov    bh,0x9c
  40d8ec:	outs   dx,BYTE PTR ss:[esi]
  40d8ee:	add    DWORD PTR [esi+0x3549fd1f],esi
  40d8f4:	jg     0x40d8a6
  40d8f6:	scas   al,BYTE PTR es:[edi]
  40d8f7:	mov    edx,0xb71ad677
  40d8fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8fd:	pop    esp
  40d8fe:	fcomp  QWORD PTR [edx]
  40d900:	jo     0x40d895
  40d902:	jae    0x40d936
  40d904:	cld    
  40d905:	in     al,dx
  40d906:	push   ecx
  40d907:	nop
  40d908:	aam    0xa
  40d90a:	inc    ecx
  40d90b:	outs   dx,DWORD PTR ds:[esi]
  40d90c:	push   ecx
  40d90d:	jecxz  0x40d98c
  40d90f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d910:	pop    es
  40d911:	xchg   edi,eax
  40d912:	add    DWORD PTR [edi+0x2854e322],0xf1b919d4
  40d91c:	in     al,dx
  40d91d:	test   BYTE PTR [ebp-0x5c],dl
  40d920:	jae    0x40d8bd
  40d922:	mov    esp,0x5852dc7a
  40d927:	adc    esi,DWORD PTR [edx+edx*2+0x2c]
  40d92b:	mov    al,0xa5
  40d92d:	add    dh,dh
  40d92f:	pop    ds
  40d930:	push   edi
  40d931:	jno    0x40d986
  40d933:	imul   eax,DWORD PTR [esi-0x26],0x0
  40d937:	or     esp,DWORD PTR [ecx]
  40d939:	aam    0x3f
  40d93b:	fstp   DWORD PTR [ebp-0x42afd211]
  40d941:	stos   BYTE PTR es:[edi],al
  40d942:	sub    ah,BYTE PTR [edx+0xd]
  40d945:	in     al,0xe5
  40d947:	stc    
  40d948:	int    0xad
  40d94a:	popa   
  40d94b:	cmc    
  40d94c:	push   ds
  40d94d:	outs   dx,BYTE PTR ds:[esi]
  40d94e:	xor    DWORD PTR [esp+edi*8],ebx
  40d951:	sub    al,0xe8
  40d953:	fucom  st(7)
  40d955:	jo     0x40d971
  40d957:	loop   0x40d962
  40d959:	sbb    eax,0x63d79d0d
  40d95e:	in     al,dx
  40d95f:	mov    ebp,0x15b1c8ba
  40d964:	in     al,0x7a
  40d966:	jg     0x40d9ca
  40d968:	mov    DWORD PTR [edi+eiz*8],eax
  40d96b:	mov    ds:0x5cef2fa,al
  40d970:	dec    ecx
  40d971:	xchg   edi,eax
  40d972:	xor    BYTE PTR ds:0xa3274b80,dh
  40d978:	push   esp
  40d979:	mov    esp,0x2c9c7f4c
  40d97e:	jno    0x40d94d
  40d980:	jmp    0x2223c5d4
  40d985:	add    DWORD PTR [esi-0xee6848a],edi
  40d98b:	add    al,0x3c
  40d98d:	inc    ecx
  40d98e:	shl    BYTE PTR [edx+0x2674ea17],0xec
  40d995:	cmp    bh,cl
  40d997:	out    dx,eax
  40d998:	mov    eax,DWORD PTR [ebx+0x75]
  40d99b:	sub    edi,DWORD PTR [edi+0x42870370]
  40d9a1:	int    0xb1
  40d9a3:	iret   
  40d9a4:	mov    BYTE PTR [edx-0x760fdd0f],ah
  40d9aa:	xor    ch,BYTE PTR [ebx]
  40d9ac:	push   ebp
  40d9ad:	sar    bl,cl
  40d9af:	xchg   DWORD PTR [esi+0x2c070589],ecx
  40d9b5:	xchg   ebp,eax
  40d9b6:	cmp    bh,BYTE PTR [edi+eax*8+0x68]
  40d9ba:	xchg   ebx,eax
  40d9bb:	adc    esp,ebp
  40d9bd:	into   
  40d9be:	into   
  40d9bf:	jmp    FWORD PTR [esp+esi*8]
  40d9c2:	arpl   WORD PTR [edx+edx*4-0x2031ec90],si
  40d9c9:	inc    ebp
  40d9ca:	mov    fs,edx
  40d9cc:	sub    BYTE PTR [ebx],0x7
  40d9cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d0:	sti    
  40d9d1:	or     BYTE PTR [esi-0x4fdc959c],al
  40d9d7:	push   cs
  40d9d8:	fmul   DWORD PTR [esi+0x15]
  40d9db:	bound  esp,QWORD PTR cs:[eax+0x324eb77b]
  40d9e2:	and    BYTE PTR [ebx-0x4f3d9591],al
  40d9e8:	sub    DWORD PTR [esi+0x43],ebp
  40d9eb:	mov    edi,0x7b0f2b4e
  40d9f0:	call   0xc66bc9cf
  40d9f5:	sub    DWORD PTR [eax],esp
  40d9f7:	jo     0x40d9d5
  40d9f9:	jp     0x40d9c3
  40d9fb:	pop    ds
  40d9fc:	mov    eax,ds:0xe766a27d
  40da01:	repnz cli 
  40da03:	jmp    0x40d9ac
  40da05:	mov    eax,0xf73b0c6d
  40da0a:	dec    ebx
  40da0b:	inc    eax
  40da0c:	push   ebp
  40da0d:	sbb    esi,DWORD PTR [eax-0x49]
  40da10:	repnz cwde 
  40da12:	js     0x40d9fd
  40da14:	rcl    esp,1
  40da16:	push   ss
  40da17:	in     al,0x6c
  40da19:	add    BYTE PTR ds:0x1b940474,cl
  40da1f:	out    dx,eax
  40da20:	neg    BYTE PTR [edi+0x6]
  40da23:	call   0x22e5eb5d
  40da28:	sub    bh,bh
  40da2a:	lods   al,BYTE PTR ds:[esi]
  40da2b:	repz imul esi,DWORD PTR [esi-0x7b],0x2
  40da30:	dec    esi
  40da31:	pop    ebx
  40da32:	push   ss
  40da33:	add    DWORD PTR [esi-0x7c],ecx
  40da36:	psubb  mm6,QWORD PTR [eax+0x79e0f4c9]
  40da3d:	(bad)  
  40da3e:	mov    ch,0x7e
  40da40:	pop    ebx
  40da41:	push   esp
  40da42:	sub    al,0xe
  40da44:	or     BYTE PTR [ebp-0xf],dl
  40da47:	fisubr DWORD PTR [esp+edx*2-0x1e80f858]
  40da4e:	xchg   ecx,eax
  40da4f:	fcom   DWORD PTR [ecx]
  40da51:	(bad)  
  40da52:	in     eax,dx
  40da53:	rcr    BYTE PTR [ebx],cl
  40da55:	and    BYTE PTR [ebx+0x17],ah
  40da58:	xchg   ecx,eax
  40da59:	pop    ds
  40da5a:	in     al,dx
  40da5b:	popa   
  40da5c:	xchg   ebp,eax
  40da5d:	ret    0x4d21
  40da60:	xor    ebx,DWORD PTR [esi]
  40da62:	iret   
  40da63:	retf   0x75c8
  40da66:	or     eax,0x7dc1a1bd
  40da6b:	lock pushf 
  40da6d:	int    0xb2
  40da6f:	jp     0x40da8a
  40da71:	inc    ebx
  40da72:	out    0x86,al
  40da74:	mov    ds,WORD PTR [eax-0x2552d109]
  40da7a:	sbb    al,0x19
  40da7d:	jnp    0x40dab5
  40da7f:	or     BYTE PTR [esp+ebx*2-0x6f],cl
  40da83:	push   0xa799c6a6
  40da88:	jp     0x40dac2
  40da8a:	sbb    eax,DWORD PTR [ecx-0x6292f5f]
  40da90:	and    dh,BYTE PTR [ecx-0x38]
  40da93:	cmp    BYTE PTR [edi],0x6a
  40da96:	xchg   ebp,eax
  40da97:	test   BYTE PTR [edi+0x2a4ddd9f],ch
  40da9d:	and    DWORD PTR cs:[edi],0xffffffc5
  40daa1:	mov    dl,0x34
  40daa3:	pop    ebx
  40daa4:	jge    0x40da8a
  40daa6:	data16 fist DWORD PTR [eax+edx*2]
  40daaa:	fcmovnu st,st(1)
  40daac:	(bad)  
  40daad:	push   cs
  40daae:	test   DWORD PTR [edx+0x2c96c6d8],ecx
  40dab4:	pop    edx
  40dab5:	je     0x40dab6
  40dab7:	inc    ebx
  40dab8:	mov    al,fs:0xb810b449
  40dabe:	cmp    BYTE PTR [ecx+0x58d02deb],bh
  40dac4:	repz mov ecx,0x553a06b
  40daca:	xchg   dl,bl
  40dacc:	add    BYTE PTR [ecx+0x3f],ah
  40dacf:	dec    ecx
  40dad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dad1:	das    
  40dad2:	in     al,dx
  40dad3:	(bad)  
  40dad4:	loopne 0x40da83
  40dad6:	enter  0x2705,0x22
  40dada:	repz inc edx
  40dadc:	call   0x7651:0x90ca61e2
  40dae3:	pop    ebp
  40dae4:	inc    edx
  40dae5:	mov    ebx,0xd69ffe39
  40daea:	or     BYTE PTR [ecx],dh
  40daec:	mov    ah,0x56
  40daee:	xchg   BYTE PTR [ecx+0x18],dl
  40daf1:	lods   al,BYTE PTR ds:[esi]
  40daf2:	test   BYTE PTR [edi+0x79],ch
  40daf5:	lock push esp
  40daf7:	mov    ebp,ebp
  40daf9:	dec    ecx
  40dafa:	add    dl,ah
  40dafc:	out    0x1d,al
  40dafe:	add    DWORD PTR [edi],0x5196c3b2
  40db04:	jge    0x40db15
  40db06:	dec    ecx
  40db07:	push   edx
  40db08:	jp     0x40db06
  40db0a:	arpl   WORD PTR [ecx+0x2c],di
  40db0d:	aas    
  40db0e:	adc    DWORD PTR [eax],0x4fe024e9
  40db14:	dec    eax
  40db15:	xor    dh,BYTE PTR [ecx+ebp*8+0x6a]
  40db19:	cmp    al,0xb
  40db1b:	ins    DWORD PTR es:[edi],dx
  40db1c:	jecxz  0x40dac1
  40db1e:	mov    dl,0xba
  40db20:	push   edi
  40db21:	pop    edi
  40db22:	test   BYTE PTR [ebx],ch
  40db24:	repnz mov fs,WORD PTR [ebp+0x31]
  40db28:	mov    edx,0x4844d333
  40db2d:	adc    bh,BYTE PTR [ebp+0x15de2749]
  40db33:	outs   dx,BYTE PTR ds:[esi]
  40db34:	fiadd  DWORD PTR [eax]
  40db36:	fidiv  WORD PTR [eax+0x7d1b8879]
  40db3c:	pop    ss
  40db3d:	cmp    DWORD PTR [edi],edi
  40db3f:	rol    BYTE PTR [ecx+ebx*8],cl
  40db42:	mov    edx,0xd45def96
  40db47:	jp     0x40db51
  40db49:	je     0x40db3d
  40db4b:	xchg   edx,eax
  40db4c:	jb     0x40db4f
  40db4e:	inc    edi
  40db4f:	out    0x93,eax
  40db51:	mov    ds,WORD PTR [ebp+0x1]
  40db54:	rcr    BYTE PTR [edi],1
  40db56:	sbb    BYTE PTR [ecx-0x3d2d257d],dl
  40db5c:	add    dh,dl
  40db5e:	xchg   edx,eax
  40db5f:	dec    ecx
  40db60:	push   eax
  40db61:	mov    eax,0x8eeb0b3e
  40db66:	rol    DWORD PTR [edx+edi*8-0x64c8a0b3],cl
  40db6d:	rcr    cl,0x1a
  40db70:	call   0x7f3f:0xb0be313c
  40db77:	jmp    0x48e6:0x614693e2
  40db7e:	in     eax,0xf1
  40db80:	aad    0xae
  40db82:	call   0xef02ef12
  40db87:	cs out 0x81,al
  40db8a:	pop    ds
  40db8b:	jbe    0x40db6e
  40db8d:	nop
  40db8e:	outs   dx,DWORD PTR ds:[esi]
  40db8f:	neg    DWORD PTR [edi+0x60]
  40db92:	mov    bl,0x8c
  40db94:	rol    edi,1
  40db96:	imul   ebx,ecx,0x17c65dbf
  40db9c:	stos   BYTE PTR es:[edi],al
  40db9d:	ja     0x40dbe2
  40db9f:	aas    
  40dba0:	ds loopne 0x40dbc3
  40dba3:	scas   al,BYTE PTR es:[edi]
  40dba4:	nop
  40dba5:	dec    ecx
  40dba6:	mov    ch,0x90
  40dba8:	aam    0x63
  40dbaa:	(bad)  
  40dbac:	jp     0x40dbf1
  40dbae:	retf   0x8692
  40dbb1:	test   al,0x9c
  40dbb3:	sbb    ah,bl
  40dbb5:	dec    esp
  40dbb6:	outs   dx,DWORD PTR ds:[esi]
  40dbb7:	imul   eax,DWORD PTR [edi+0x15],0x9be512fb
  40dbbe:	jbe    0x40db8b
  40dbc0:	sahf   
  40dbc1:	not    edx
  40dbc3:	pusha  
  40dbc4:	push   esi
  40dbc5:	jl     0x40dc3d
  40dbc7:	or     esi,DWORD PTR [eax-0x4a8ba61d]
  40dbcd:	or     eax,eax
  40dbcf:	lds    edx,FWORD PTR [edx]
  40dbd1:	loopne 0x40dc3a
  40dbd3:	push   ds
  40dbd4:	jnp    0x40db5f
  40dbd6:	mov    esp,0x57b8aa81
  40dbdb:	stos   DWORD PTR es:[edi],eax
  40dbdc:	shr    DWORD PTR [ecx+eiz*2],1
  40dbdf:	push   cs
  40dbe0:	mov    BYTE PTR [ecx-0x80],bl
  40dbe3:	mov    dl,0x66
  40dbe5:	mov    ebp,0x4a339e5f
  40dbea:	xlat   BYTE PTR ds:[ebx]
  40dbeb:	xor    ebx,DWORD PTR [ebp+ebx*2-0x1e]
  40dbef:	fcomp  QWORD PTR [edi+0x4eb32947]
  40dbf5:	je     0x40dbb8
  40dbf7:	pop    esi
  40dbf8:	repz sub eax,0xb9e84edb
  40dbfe:	cmp    BYTE PTR [edx-0x684da81e],bh
  40dc04:	sbb    DWORD PTR [ecx-0x67],edi
  40dc07:	lods   eax,DWORD PTR ds:[esi]
  40dc08:	push   0xffffff92
  40dc0a:	push   0x9e683de8
  40dc0f:	xor    al,0x84
  40dc11:	mov    al,ds:0xa1446ea8
  40dc16:	mov    ss,WORD PTR [eax]
  40dc18:	jnp    0x40dbc4
  40dc1a:	pop    ecx
  40dc1b:	adc    BYTE PTR [ebp+0x3cfc4618],0x4e
  40dc22:	mov    dh,0x5
  40dc25:	inc    esp
  40dc26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc27:	mov    ebp,0x43cd3a3d
  40dc2c:	cs cdq 
  40dc2e:	(bad)  
  40dc2f:	int    0x1d
  40dc31:	imul   BYTE PTR [ebx-0x4622e60c]
  40dc37:	sbb    BYTE PTR [edi+0x32],ah
  40dc3a:	xor    ebp,DWORD PTR [edi-0xaa18544]
  40dc40:	out    0xc2,eax
  40dc42:	adc    DWORD PTR gs:[edx-0x2af18a6f],ecx
  40dc49:	loope  0x40dc3a
  40dc4b:	push   ss
  40dc4c:	jb     0x40dc81
  40dc4e:	iret   
  40dc4f:	jp     0x40dc41
  40dc51:	pop    ebx
  40dc52:	cli    
  40dc53:	fisttp WORD PTR [esi-0x59]
  40dc56:	inc    ebp
  40dc57:	mov    eax,0xcb15dcc9
  40dc5c:	cmp    eax,0x796ce1c3
  40dc61:	sbb    esi,ebp
  40dc63:	fcomp  QWORD PTR [ebx+ebx*1-0x45e352ad]
  40dc6a:	mov    al,0x8
  40dc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc6d:	push   edi
  40dc6e:	dec    ecx
  40dc6f:	dec    ecx
  40dc70:	pop    ebp
  40dc71:	fisubr DWORD PTR [eax+eiz*1+0x3a]
  40dc75:	mov    eax,ds:0x3261674c
  40dc7a:	jno    0x40dcdf
  40dc7c:	lea    edx,[edi]
  40dc7e:	mov    al,0xf
  40dc80:	mov    ch,0x16
  40dc82:	lahf   
  40dc83:	ror    BYTE PTR [ebp-0x6eb02c7d],0x6f
  40dc8a:	mov    ch,0xbc
  40dc8c:	imul   edx,esi,0x6dce718d
  40dc92:	xor    BYTE PTR [ecx],ah
  40dc94:	js     0x40dc20
  40dc96:	call   0xc04a:0x6db935ae
  40dc9d:	cmp    al,0x44
  40dc9f:	(bad)  
  40dca0:	jmp    0x40dc3c
  40dca2:	aaa    
  40dca3:	js     0x40dc56
  40dca5:	fs push esp
  40dca7:	test   DWORD PTR [edx-0xd9dd82d],0xe952317f
  40dcb1:	inc    esp
  40dcb2:	mov    DWORD PTR [ebp+ebx*4-0x43],edx
  40dcb6:	sub    al,BYTE PTR [esi+ebx*1]
  40dcb9:	mov    ebp,db5
  40dcbc:	fldenv gs:[eax+0x5d26185c]
  40dcc3:	mov    ah,0x7a
  40dcc5:	out    dx,eax
  40dcc6:	rol    BYTE PTR ds:0x731c4d8,1
  40dccc:	mov    eax,ds:0xf6d54d8c
  40dcd1:	pop    esi
  40dcd2:	std    
  40dcd3:	push   esp
  40dcd4:	xchg   ecx,eax
  40dcd5:	loop   0x40dce1
  40dcd7:	push   ebx
  40dcd8:	gs pusha 
  40dcda:	sbb    eax,eax
  40dcdc:	push   edx
  40dcdd:	jno    0x40dd10
  40dcdf:	xchg   ebx,eax
  40dce0:	add    ch,ah
  40dce2:	test   DWORD PTR [ebp+0x190c9ff5],edx
  40dce8:	pop    edx
  40dce9:	data16 (bad) 
  40dceb:	mov    ebx,0x523dedf9
  40dcf0:	adc    al,0x96
  40dcf2:	jbe    0x40dd46
  40dcf4:	mov    ecx,0xd7633899
  40dcf9:	es pop edx
  40dcfb:	sub    ebx,edx
  40dcfd:	add    BYTE PTR [ebx+0x1e21f341],dl
  40dd03:	cmp    esi,eax
  40dd05:	and    cl,BYTE PTR [eax-0x47]
  40dd08:	sbb    eax,0xa8807f3f
  40dd0d:	stc    
  40dd0e:	out    dx,al
  40dd0f:	xchg   esp,eax
  40dd10:	or     eax,0x21aae565
  40dd15:	rol    DWORD PTR [ebp-0x74],cl
  40dd18:	dec    edi
  40dd19:	jp     0x40dd39
  40dd1b:	fbstp  TBYTE PTR [ebp+0x77]
  40dd1e:	shl    BYTE PTR [edi-0x39af643d],0xcd
  40dd25:	idiv   DWORD PTR [ebp+0x7db53f0d]
  40dd2b:	sbb    BYTE PTR ss:[ecx+0x7e],al
  40dd2f:	out    dx,al
  40dd30:	scas   al,BYTE PTR es:[edi]
  40dd31:	out    0x25,al
  40dd33:	shl    BYTE PTR [edi],cl
  40dd35:	mov    BYTE PTR [edi],bh
  40dd37:	add    esi,DWORD PTR gs:[ecx+eiz*1-0x2b]
  40dd3c:	sbb    edi,0xee25f26f
  40dd42:	sub    BYTE PTR [ebx],ah
  40dd44:	daa    
  40dd45:	mov    bh,BYTE PTR [esi]
  40dd47:	sbb    DWORD PTR [edi+0x42],0xb387865f
  40dd4e:	icebp  
  40dd4f:	or     bl,BYTE PTR [edi]
  40dd51:	sub    al,0xde
  40dd53:	dec    esp
  40dd54:	jno    0x40dd0a
  40dd56:	pop    ebx
  40dd57:	loop   0x40dcee
  40dd59:	add    eax,0xb1505318
  40dd5e:	cmp    al,0x1
  40dd60:	adc    BYTE PTR [ebx+0x67],dl
  40dd63:	inc    edx
  40dd64:	pop    ss
  40dd65:	(bad)  
  40dd66:	jbe    0x40dd9c
  40dd68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd69:	fnstsw WORD PTR [eax]
  40dd6b:	clc    
  40dd6c:	aaa    
  40dd6d:	jo     0x40dd59
  40dd6f:	lea    esp,[ecx]
  40dd71:	shl    BYTE PTR [ebx-0xb],1
  40dd74:	inc    ebp
  40dd75:	pop    ds
  40dd76:	in     al,0xb3
  40dd78:	aaa    
  40dd79:	push   es
  40dd7a:	(bad)  
  40dd7c:	mov    al,0xec
  40dd7e:	daa    
  40dd7f:	xchg   ebp,eax
  40dd80:	xor    esp,edi
  40dd82:	push   eax
  40dd83:	xor    eax,DWORD PTR [esi+0x685c13ed]
  40dd89:	mov    edx,0xb4b796ff
  40dd8e:	test   DWORD PTR [edi+ebx*4],edi
  40dd91:	(bad)  
  40dd92:	fcomp  DWORD PTR [edx]
  40dd94:	inc    esi
  40dd95:	and    bl,BYTE PTR [edx+0x45]
  40dd98:	mov    edx,0x47bdbcdb
  40dd9d:	adc    ch,cl
  40dd9f:	je     0x40dd5b
  40dda1:	xchg   ecx,eax
  40dda2:	bound  edx,QWORD PTR [ebp+0x7b]
  40dda5:	or     al,0x99
  40dda7:	les    ecx,FWORD PTR [edx-0x11d14440]
  40ddad:	ds out dx,al
  40ddaf:	shr    bh,cl
  40ddb1:	mov    al,ds:0x5f24e1e
  40ddb6:	idiv   BYTE PTR [eax+0x48]
  40ddb9:	fisub  WORD PTR [eax+0x78]
  40ddbc:	push   ecx
  40ddbd:	in     al,dx
  40ddbe:	mov    es,WORD PTR [ecx+0x2f]
  40ddc1:	mov    ecx,0x72df2e08
  40ddc6:	cmp    BYTE PTR [esi+edi*8],bh
  40ddc9:	icebp  
  40ddca:	inc    ebp
  40ddcb:	push   0x4b
  40ddcd:	sbb    esp,ebx
  40ddcf:	shl    DWORD PTR [edx-0x11cd64a3],0x76
  40ddd6:	or     al,0xf8
  40ddd8:	mov    esi,0x87bd2030
  40dddd:	lock dec eax
  40dddf:	rcr    BYTE PTR [ebx-0x4cdbfbc],cl
  40dde5:	fdivp  st(2),st
  40dde7:	adc    edx,DWORD PTR [edx]
  40dde9:	jg     0x40de48
  40ddeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddec:	dec    edi
  40dded:	mov    ebx,DWORD PTR [ebp-0x1a]
  40ddf0:	adc    DWORD PTR [eax-0x6a2923b3],ebx
  40ddf6:	and    bl,BYTE PTR [ecx-0x12ff610]
  40ddfc:	push   esp
  40ddfd:	(bad)  
  40ddfe:	test   al,0x75
  40de00:	pop    esi
  40de01:	mov    ah,0x60
  40de03:	and    ebp,ebx
  40de05:	add    al,0x43
  40de07:	mov    esp,0x3176b3b8
  40de0c:	xchg   DWORD PTR ds:0x51f72f68,ecx
  40de12:	ret    
  40de13:	mov    edi,0x33e24e0a
  40de18:	or     DWORD PTR [ecx-0x65],0xfffffffc
  40de1c:	outs   dx,DWORD PTR ds:[esi]
  40de1d:	sub    edi,DWORD PTR [ecx]
  40de1f:	shl    DWORD PTR [ecx+0x48],0x21
  40de23:	add    DWORD PTR [ebp-0x20],ebp
  40de26:	push   eax
  40de27:	xchg   edi,eax
  40de28:	xchg   DWORD PTR [edi+edx*8],ebp
  40de2b:	not    BYTE PTR [esi+0x64e8b452]
  40de31:	adc    eax,0xf2bfad17
  40de36:	xchg   ebp,eax
  40de37:	lods   al,BYTE PTR ds:[esi]
  40de38:	mov    al,0xce
  40de3a:	les    edi,FWORD PTR ds:0x2ee4e842
  40de40:	adc    eax,0x235791f4
  40de45:	xor    DWORD PTR [esi+0x9cecbf0],esi
  40de4b:	repnz icebp 
  40de4d:	mov    ds:0xe7762716,al
  40de52:	inc    edi
  40de53:	cmp    al,BYTE PTR ss:[edx]
  40de56:	imul   bh
  40de58:	stos   BYTE PTR es:[edi],al
  40de59:	add    eax,0xe56ed8ea
  40de5e:	mov    al,0xcf
  40de60:	adc    bh,BYTE PTR [edi]
  40de62:	mov    eax,ds:0x4c160a44
  40de67:	xlat   BYTE PTR ds:[ebx]
  40de68:	scas   eax,DWORD PTR es:[edi]
  40de69:	sub    eax,0xe0405038
  40de6e:	xor    al,0xa8
  40de70:	es cmc 
  40de72:	sbb    al,0x42
  40de74:	cmp    BYTE PTR [edi-0x4592cbcf],ah
  40de7a:	fldcw  WORD PTR [eax-0x756a71d8]
  40de80:	out    dx,eax
  40de81:	test   eax,0xa51526d0
  40de86:	pop    ebx
  40de87:	sahf   
  40de88:	jo     0x40de0a
  40de8a:	leave  
  40de8b:	push   0x465546f9
  40de90:	push   cs
  40de91:	sub    BYTE PTR [edx+0x34],0xef
  40de95:	sbb    dl,cl
  40de97:	sbb    al,0x21
  40de99:	stc    
  40de9a:	sbb    BYTE PTR [esi],ah
  40de9c:	and    DWORD PTR [ebp+0x6d],esp
  40de9f:	loope  0x40de58
  40dea1:	sbb    BYTE PTR [esi+0x67637104],cl
  40dea7:	sbb    al,bl
  40dea9:	adc    ah,dl
  40deab:	scas   al,BYTE PTR es:[edi]
  40deac:	(bad)  
  40dead:	and    ecx,ebx
  40deaf:	xchg   ebx,eax
  40deb0:	pop    ebx
  40deb1:	ret    0x78ec
  40deb4:	cld    
  40deb5:	pop    ebp
  40deb6:	fldenv [edx+ecx*4]
  40deb9:	xor    DWORD PTR ds:0xe80a65e4,edx
  40debf:	call   0x9a9:0x4c9428d5
  40dec6:	mov    edx,0xa19dd395
  40decb:	and    DWORD PTR [eax+0x690a5e20],ecx
  40ded1:	adc    eax,DWORD PTR es:[edx-0x310cd43f]
  40ded8:	mov    dl,cl
  40deda:	or     BYTE PTR [edx],dl
  40dedc:	retf   0xfc5d
  40dedf:	outs   dx,BYTE PTR ds:[esi]
  40dee0:	cmp    al,0xed
  40dee2:	into   
  40dee3:	pusha  
  40dee4:	in     eax,dx
  40dee5:	xor    DWORD PTR [eax+0x2823a39e],esi
  40deeb:	imul   al
  40deed:	ja     0x40df0c
  40deef:	mov    esp,0x5d23e7ff
  40def4:	dec    ebp
  40def5:	cli    
  40def6:	out    0x5e,eax
  40def8:	repz mov ebp,0x96b46877
  40defe:	in     eax,dx
  40deff:	cli    
  40df00:	add    dh,BYTE PTR [edi-0x36]
  40df03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df04:	enter  0xdf1f,0xed
  40df08:	push   0x88fc4a93
  40df0d:	arpl   WORD PTR [edx+esi*8],si
  40df10:	aad    0xea
  40df12:	jb     0x40df2a
  40df14:	popa   
  40df15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df16:	jbe    0x40df59
  40df18:	xchg   ebx,eax
  40df19:	sbb    esp,DWORD PTR [ebx+0x21]
  40df1c:	adc    DWORD PTR ss:[ebx+0x6b],eax
  40df20:	xor    eax,0xf208b15f
  40df25:	das    
  40df26:	aam    0x46
  40df28:	dec    eax
  40df29:	ja     0x40dead
  40df2b:	sbb    DWORD PTR [edi+0x54],0x5c
  40df2f:	mov    bh,0x16
  40df31:	jge    0x40df48
  40df33:	fsub   DWORD PTR [ecx+ecx*4-0x56ab1bad]
  40df3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df3b:	shl    DWORD PTR [esi],1
  40df3d:	pushf  
  40df3e:	xor    eax,0x432233d1
  40df43:	loop   0x40df64
  40df45:	mov    DWORD PTR [eax+0x51d5373c],esp
  40df4b:	xchg   esi,eax
  40df4c:	neg    DWORD PTR [edx]
  40df4e:	aaa    
  40df4f:	or     eax,0xe45086ee
  40df54:	push   esp
  40df55:	test   BYTE PTR [edi],0x67
  40df58:	push   ebp
  40df59:	mov    eax,0xfc853718
  40df5e:	adc    ebx,DWORD PTR [edx-0x35]
  40df61:	stos   DWORD PTR es:[edi],eax
  40df62:	pop    eax
  40df63:	bnd jle 0x40def2
  40df66:	in     al,0x5a
  40df68:	call   0xa778:0xaa5b6648
  40df6f:	xor    esp,esi
  40df71:	bnd jne 0x40dfa1
  40df74:	xor    edi,DWORD PTR [edx+0x1c]
  40df77:	push   0x21
  40df79:	mov    ds:0xe58c59bb,eax
  40df7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df7f:	xchg   DWORD PTR [ebp+0x31],edi
  40df82:	cs into 
  40df84:	pop    edi
  40df85:	add    esp,DWORD PTR [edx]
  40df87:	sar    eax,0x8c
  40df8a:	fsubr  QWORD PTR [eax]
  40df8c:	mov    ?,ebp
  40df8e:	lahf   
  40df8f:	lds    ebx,FWORD PTR [eiz*4-0x5f41fd7e]
  40df96:	popa   
  40df97:	mov    al,0x98
  40df99:	mov    ecx,0xec509cc3
  40df9e:	shr    DWORD PTR [edx*1+0x68018e70],0x72
  40dfa6:	aas    
  40dfa7:	out    0xb8,eax
  40dfa9:	in     al,0xc2
  40dfab:	lods   al,BYTE PTR ds:[esi]
  40dfac:	fdivr  QWORD PTR [eax]
  40dfae:	mov    edi,0x63a08dc6
  40dfb3:	cmp    al,0x3
  40dfb5:	mov    al,0xa3
  40dfb7:	push   ecx
  40dfb8:	cmp    al,0xa9
  40dfba:	cmp    BYTE PTR [ebx+0x4df2895c],bh
  40dfc0:	xchg   ebx,ebp
  40dfc2:	lods   eax,DWORD PTR ds:[esi]
  40dfc3:	pop    ds
  40dfc4:	mov    edi,0xf06bbf89
  40dfc9:	bound  ebp,QWORD PTR [esp+edx*2]
  40dfcc:	(bad)  [ecx+ecx*8-0x5f1a1a66]
  40dfd3:	jmp    0xf711:0xbf2c75c0
  40dfda:	(bad)  [ebx]
  40dfdc:	aas    
  40dfdd:	mov    cl,0x10
  40dfdf:	push   ds
  40dfe0:	xor    al,0xaf
  40dfe2:	add    al,BYTE PTR [eax]
  40dfe4:	aad    0x54
  40dfe6:	jnp    0x40df6f
  40dfe8:	jb     0x40e067
  40dfea:	retf   0x2d27
  40dfed:	inc    ebp
  40dfee:	leave  
  40dfef:	xor    DWORD PTR [esi],ecx
  40dff1:	jecxz  0x40e009
  40dff3:	and    bh,BYTE PTR [ebx+edx*2+0x14]
  40dff7:	xor    DWORD PTR [ecx+0x4c],ebp
  40dffa:	retf   
  40dffb:	mov    edi,0x6cbfb70d
  40e000:	repnz in eax,0x1c
  40e003:	push   ss
  40e004:	out    0xf9,al
  40e006:	pop    ebp
  40e007:	rcr    edx,0xb5
  40e00a:	xchg   DWORD PTR [eax+0x71],ebp
  40e00d:	mov    WORD PTR [ebp+0x724cd7b4],gs
  40e013:	fcomp  DWORD PTR [ecx]
  40e015:	xchg   ebx,eax
  40e016:	mov    edi,0x70afa3b5
  40e01b:	js     0x40e07d
  40e01d:	pop    ds
  40e01e:	scas   al,BYTE PTR es:[edi]
  40e01f:	enter  0x10bc,0x96
  40e023:	jns    0x40e04c
  40e025:	adc    dl,bl
  40e027:	pop    ecx
  40e028:	retf   
  40e029:	mov    ebp,DWORD PTR [eax]
  40e02b:	add    al,0x7d
  40e02d:	cmc    
  40e02e:	inc    esi
  40e02f:	xlat   BYTE PTR ds:[ebx]
  40e030:	push   esi
  40e031:	push   cs
  40e032:	jb     0x40e0a5
  40e034:	dec    ebx
  40e035:	call   0xf98:0xb8e3ca86
  40e03c:	inc    edi
  40e03d:	les    ebp,FWORD PTR [eax+0x7d]
  40e040:	addr16 cmc 
  40e042:	xlat   BYTE PTR ds:[ebx]
  40e043:	test   al,0x9e
  40e045:	in     eax,0xd7
  40e047:	cmp    eax,0xf85c2572
  40e04c:	cmp    ch,0xf5
  40e04f:	push   es
  40e050:	stos   DWORD PTR es:[edi],eax
  40e051:	fistp  DWORD PTR [edi+0x57]
  40e054:	cmp    cl,ah
  40e056:	nop
  40e057:	or     cl,ch
  40e059:	mov    eax,0xcd1f962f
  40e05e:	bound  eax,QWORD PTR ds:0x274bc0d4
  40e064:	dec    ebp
  40e065:	test   al,0xbf
  40e067:	retf   
  40e068:	sub    edi,DWORD PTR ds:0x15329b67
  40e06e:	loop   0x40e06d
  40e070:	dec    ebp
  40e071:	mov    esp,cs
  40e073:	pop    edi
  40e074:	pop    edx
  40e075:	hlt    
  40e076:	sbb    eax,0xf279e2d9
  40e07b:	xchg   DWORD PTR ds:0xcb696953,esp
  40e081:	lods   eax,DWORD PTR ds:[esi]
  40e082:	push   ss
  40e083:	push   ss
  40e084:	enter  0x9f71,0xeb
  40e088:	sub    eax,0x99866ec3
  40e08d:	or     edi,DWORD PTR [edi+0x404ab0df]
  40e093:	pop    ds
  40e094:	inc    edx
  40e095:	push   ss
  40e096:	adc    al,0x58
  40e098:	dec    eax
  40e099:	sub    cl,BYTE PTR [esi+ebx*1+0x51]
  40e09d:	sbb    esp,DWORD PTR [eax+0x23]
  40e0a0:	xlat   BYTE PTR ds:[ebx]
  40e0a1:	loope  0x40e03b
  40e0a3:	ss xchg edx,eax
  40e0a6:	or     bl,ch
  40e0a8:	cdq    
  40e0a9:	jp     0x40e0a6
  40e0ab:	add    edx,DWORD PTR [esi-0x7f]
  40e0ae:	inc    edi
  40e0af:	sahf   
  40e0b0:	push   ebx
  40e0b2:	ja     0x40e0e0
  40e0b4:	mov    esi,0xbb4b0f79
  40e0b9:	adc    eax,0xf64fab35
  40e0be:	cmp    eax,0xcc3e34d9
  40e0c3:	aad    0x8a
  40e0c5:	iret   
  40e0c6:	jg     0x40e0c6
  40e0c8:	mov    esp,DWORD PTR [ecx+edx*4]
  40e0cb:	addr16 add eax,0xee7a3bc2
  40e0d1:	ret    0xa37d
  40e0d4:	push   ecx
  40e0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0d6:	loop   0x40e152
  40e0d8:	retf   0x7c81
  40e0db:	mov    ecx,0xf79a766f
  40e0e0:	sbb    al,0x8f
  40e0e2:	ret    
  40e0e3:	int3   
  40e0e4:	inc    ecx
  40e0e5:	sar    DWORD PTR [esp+edi*2+0x34a0957b],1
  40e0ec:	arpl   dx,ax
  40e0ee:	push   0xc9c63e3e
  40e0f3:	adc    ebp,DWORD PTR [ebp+0x4f]
  40e0f6:	push   0x28
  40e0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0f9:	ss dec ebp
  40e0fb:	in     al,dx
  40e0fc:	jno    0x40e154
  40e0fe:	retf   
  40e0ff:	push   ds
  40e100:	sbb    BYTE PTR [ebx],bh
  40e102:	xchg   ecx,eax
  40e103:	dec    esi
  40e104:	adc    eax,0xeb1c239
  40e109:	or     al,0x9
  40e10b:	cmp    BYTE PTR [esi],0x5c
  40e10e:	sub    bl,BYTE PTR [eax]
  40e110:	popf   
  40e111:	and    BYTE PTR [edx+0x71],ah
  40e114:	lahf   
  40e115:	inc    ebp
  40e116:	add    DWORD PTR [esi-0x5f9d8d4c],ecx
  40e11c:	mov    esi,0xeaded870
  40e121:	jg     0x40e15b
  40e123:	mov    dh,0xf0
  40e125:	mov    esi,0x65464421
  40e12a:	mov    al,0xb1
  40e12c:	sub    BYTE PTR [esi],ah
  40e12e:	das    
  40e12f:	add    eax,0x2384076c
  40e134:	(bad)  
  40e136:	jne    0x40e10b
  40e138:	lods   al,BYTE PTR ds:[esi]
  40e139:	jle    0x40e13a
  40e13b:	imul   ecx,DWORD PTR [ebx+0x5f],0xe47ab8de
  40e142:	sbb    eax,0xcb9011bd
  40e147:	mov    esi,DWORD PTR [eax-0x63]
  40e14a:	daa    
  40e14b:	outs   dx,BYTE PTR ds:[esi]
  40e14c:	inc    ecx
  40e14d:	sbb    al,0x19
  40e14f:	into   
  40e150:	icebp  
  40e151:	mov    bl,0x8b
  40e153:	imul   esi,esp,0xab6b438e
  40e159:	dec    esi
  40e15a:	dec    eax
  40e15b:	lods   al,BYTE PTR ds:[esi]
  40e15c:	mov    cl,0xa2
  40e15e:	out    dx,eax
  40e15f:	cmp    DWORD PTR [ebp+0x74],edi
  40e162:	cs xor eax,0xb8581be0
  40e168:	ds icebp 
  40e16a:	(bad)  
  40e16b:	pop    edi
  40e16c:	cld    
  40e16d:	shl    sp,1
  40e170:	out    dx,al
  40e171:	(bad)  
  40e172:	(bad)  
  40e173:	jmp    0x139:0x6ce84535
  40e17a:	test   al,0x8a
  40e17c:	loope  0x40e12b
  40e17e:	xchg   BYTE PTR ds:0x24f29d35,bl
  40e184:	faddp  st(7),st
  40e186:	loope  0x40e1a8
  40e188:	in     al,dx
  40e189:	dec    esi
  40e18a:	pusha  
  40e18b:	add    DWORD PTR [ecx],0x33
  40e18e:	and    ecx,DWORD PTR [ebx+0x70b8b176]
  40e194:	pop    ebp
  40e195:	pop    esp
  40e196:	stos   DWORD PTR es:[edi],eax
  40e197:	mov    ah,0xa2
  40e199:	(bad)  
  40e19a:	or     edx,edx
  40e19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e19e:	(bad)
  40e1a2:	fs (bad) 
  40e1a4:	shl    BYTE PTR [esi+0x78],1
  40e1a7:	test   eax,edi
  40e1a9:	cmp    ecx,DWORD PTR [esi+0x6b]
  40e1ac:	mov    ds:0xb911dabe,eax
  40e1b1:	lods   eax,DWORD PTR ds:[esi]
  40e1b2:	stos   BYTE PTR es:[edi],al
  40e1b3:	push   edx
  40e1b4:	dec    eax
  40e1b5:	dec    esi
  40e1b6:	test   al,0x9d
  40e1b8:	inc    ebx
  40e1b9:	add    edx,DWORD PTR [edx-0x364d214a]
  40e1bf:	push   ecx
  40e1c0:	pop    ecx
  40e1c1:	stos   BYTE PTR es:[edi],al
  40e1c2:	not    BYTE PTR [edx+0x5]
  40e1c5:	inc    ecx
  40e1c6:	fdivr  QWORD PTR [ebp-0x1b7d1afc]
  40e1cc:	imul   ecx,DWORD PTR [eax],0x15
  40e1cf:	loope  0x40e208
  40e1d1:	call   0xac36:0x4d56ab1b
  40e1d8:	jg     0x40e1e8
  40e1da:	push   ebp
  40e1db:	sar    DWORD PTR [edi-0x3a991895],1
  40e1e1:	jo     0x40e1fb
  40e1e3:	fsub   DWORD PTR [ebx]
  40e1e5:	adc    eax,ebp
  40e1e7:	out    dx,al
  40e1e8:	aad    0xaa
  40e1ea:	cmc    
  40e1eb:	push   ds
  40e1ec:	les    edi,FWORD PTR [eax+eax*2+0x33]
  40e1f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f1:	lahf   
  40e1f2:	aas    
  40e1f3:	mov    dl,al
  40e1f5:	jmp    0x2a96:0xd643b9db
  40e1fc:	mov    ch,0xcc
  40e1fe:	jmp    0x40e1f0
  40e200:	dec    ecx
  40e201:	lds    ebx,FWORD PTR [ebp+0x5d0fffba]
  40e207:	inc    ebp
  40e208:	div    DWORD PTR [edx-0x7b94081a]
  40e20e:	mov    al,ds:0xf766ac22
  40e213:	outs   dx,BYTE PTR ds:[esi]
  40e214:	inc    ebx
  40e215:	push   ds
  40e216:	daa    
  40e217:	xlat   BYTE PTR ds:[ebx]
  40e219:	jecxz  0x40e255
  40e21b:	xchg   esp,eax
  40e21c:	cmc    
  40e21d:	or     al,0xb1
  40e21f:	lods   eax,DWORD PTR ds:[esi]
  40e220:	ret    0xeade
  40e223:	push   ss
  40e224:	cwde   
  40e225:	bound  esp,QWORD PTR [edi-0x27acb577]
  40e22b:	inc    DWORD PTR [ecx-0x6705dfb7]
  40e231:	fnsave [edi-0x75246b24]
  40e237:	pop    edi
  40e238:	data16 aad 0xd4
  40e23b:	ins    BYTE PTR es:[edi],dx
  40e23c:	inc    esp
  40e23d:	jo     0x40e207
  40e23f:	outs   dx,BYTE PTR cs:[esi]
  40e241:	das    
  40e242:	mov    al,ds:0xde817fd4
  40e247:	or     BYTE PTR [ecx],ch
  40e249:	jne    0x40e227
  40e24b:	sub    dl,al
  40e24d:	arpl   WORD PTR [ebx+0x72f37e2],cx
  40e253:	dec    esi
  40e254:	jmp    0x40e269
  40e256:	inc    edx
  40e257:	gs js  0x40e27a
  40e25a:	mov    esi,0xb68635a5
  40e25f:	aad    0x30
  40e261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e262:	aaa    
  40e263:	(bad)  
  40e264:	jg     0x40e2bf
  40e266:	sub    BYTE PTR [ebx-0x42],dl
  40e269:	pop    eax
  40e26a:	into   
  40e26b:	lds    ecx,FWORD PTR cs:[edx]
  40e26e:	mov    BYTE PTR [ecx-0x45],bh
  40e271:	pop    edx
  40e272:	jo     0x40e2ce
  40e274:	inc    eax
  40e275:	xor    bh,bh
  40e277:	fld    QWORD PTR [eax+0x2]
  40e27a:	or     al,0x7f
  40e27c:	inc    edx
  40e27d:	xor    DWORD PTR [edi+0x6a2d127c],ebp
  40e283:	fidivr DWORD PTR [edi-0x2fceff10]
  40e289:	fldcw  WORD PTR [esi-0x26]
  40e28c:	jle    0x40e251
  40e28e:	(bad)  
  40e28f:	fist   DWORD PTR [edi+esi*8-0x71]
  40e293:	xchg   BYTE PTR [esi],cl
  40e295:	xor    al,0xe4
  40e297:	sub    esp,DWORD PTR [edi]
  40e299:	jl     0x40e2e0
  40e29b:	addr16 inc esp
  40e29d:	inc    ecx
  40e29e:	les    edx,FWORD PTR [edi+0x45]
  40e2a1:	outs   dx,BYTE PTR ds:[esi]
  40e2a2:	and    edi,edx
  40e2a4:	add    DWORD PTR ds:0x22f5bf21,eax
  40e2aa:	jb     0x40e298
  40e2ac:	xchg   esi,eax
  40e2ad:	test   eax,0x85018c0e
  40e2b2:	(bad)
  40e2b5:	cli    
  40e2b6:	cmp    ebx,0xcbe332af
  40e2bc:	or     eax,0x733f2b4f
  40e2c1:	(bad)  
  40e2c2:	ins    BYTE PTR es:[edi],dx
  40e2c3:	sub    bh,cl
  40e2c5:	push   ss
  40e2c6:	or     eax,0xf7e90724
  40e2cb:	call   0x954d3301
  40e2d0:	sub    eax,0x42b62caf
  40e2d5:	lds    ebx,FWORD PTR [ebp-0x6306a27a]
  40e2db:	sub    al,0xd3
  40e2dd:	ds or  ebp,esp
  40e2e0:	adc    DWORD PTR [edi+0x5b89328],eax
  40e2e6:	ins    BYTE PTR es:[edi],dx
  40e2e7:	jns    0x40e281
  40e2e9:	add    dh,dl
  40e2eb:	cmp    BYTE PTR [ebp-0x4e],ch
  40e2ee:	scas   al,BYTE PTR es:[edi]
  40e2ef:	dec    edx
  40e2f0:	push   ebx
  40e2f1:	jl     0x40e2d6
  40e2f3:	repnz std 
  40e2f5:	test   DWORD PTR [edi-0x7731f836],edx
  40e2fb:	add    bh,BYTE PTR [edi]
  40e2fd:	jne    0x40e361
  40e2ff:	outs   dx,DWORD PTR ds:[esi]
  40e300:	fidivr WORD PTR [edx+0x3472f51b]
  40e306:	aaa    
  40e307:	stos   BYTE PTR es:[edi],al
  40e308:	outs   dx,BYTE PTR ds:[esi]
  40e309:	pusha  
  40e30a:	xchg   esp,eax
  40e30b:	or     dl,dl
  40e30d:	jnp    0x40e342
  40e30f:	push   0x25
  40e311:	jle    0x40e296
  40e313:	popf   
  40e314:	or     eax,0xad76fd0d
  40e319:	stos   DWORD PTR es:[edi],eax
  40e31a:	retf   0xbd40
  40e31d:	sbb    al,0xb7
  40e31f:	jno    0x40e33a
  40e321:	push   edi
  40e322:	out    0x77,al
  40e324:	inc    ebp
  40e325:	sub    DWORD PTR fs:[eax],esi
  40e328:	or     DWORD PTR [esi*2+0x3d610d87],eax
  40e32f:	cmp    BYTE PTR ds:0xa8403feb,ah
  40e335:	test   eax,0x38419aaf
  40e33a:	pop    ebx
  40e33b:	fsub   QWORD PTR [esi-0x4c518c31]
  40e341:	(bad)  
  40e342:	(bad)  
  40e343:	push   DWORD PTR [ebx+0x756219ff]
  40e349:	pop    esp
  40e34a:	leave  
  40e34b:	out    0xaa,al
  40e34d:	jno    0x40e38d
  40e34f:	jnp    0x40e362
  40e351:	sub    al,0x17
  40e353:	repz cld 
  40e355:	enter  0x4785,0x26
  40e359:	mov    eax,gs:0x6fda7988
  40e35f:	sahf   
  40e360:	add    ebx,DWORD PTR [ecx+ebx*4]
  40e363:	scas   al,BYTE PTR es:[edi]
  40e364:	mov    dl,0xe0
  40e366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e367:	out    dx,eax
  40e368:	sar    BYTE PTR [esi+0x2176e75d],0x3e
  40e36f:	sar    DWORD PTR [ecx+0x7b],cl
  40e372:	cmp    DWORD PTR [ebp+0x20],0x4bd98995
  40e379:	dec    esi
  40e37a:	fisubr DWORD PTR [eax]
  40e37c:	mov    BYTE PTR [edi],ah
  40e37e:	cli    
  40e37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e380:	test   DWORD PTR [edi],0xf3b07922
  40e386:	xchg   DWORD PTR ds:0x21b4c41b,ecx
  40e38c:	aaa    
  40e38d:	xchg   ah,dh
  40e38f:	fidiv  WORD PTR [ebx]
  40e391:	xchg   ecx,eax
  40e392:	sbb    BYTE PTR [ecx+0x7],dh
  40e395:	outs   dx,BYTE PTR ds:[esi]
  40e396:	dec    esi
  40e397:	pop    ecx
  40e398:	xchg   edx,eax
  40e399:	aad    0x10
  40e39b:	sahf   
  40e39c:	cmp    DWORD PTR [esi+0x1d],eax
  40e39f:	dec    eax
  40e3a0:	dec    ebp
  40e3a1:	xchg   BYTE PTR [ebx-0x4aa87713],ch
  40e3a7:	or     BYTE PTR [eax-0x66],bh
  40e3aa:	inc    edi
  40e3ab:	lods   al,BYTE PTR ds:[esi]
  40e3ac:	xchg   ebp,eax
  40e3ad:	bound  ecx,QWORD PTR [edx-0x2b01c1ae]
  40e3b3:	xor    ah,BYTE PTR [ebx]
  40e3b5:	xor    dl,ch
  40e3b7:	bound  edi,QWORD PTR [ebx+esi*1+0x3f]
  40e3bb:	inc    ebx
  40e3bc:	fwait
  40e3bd:	ins    DWORD PTR es:[edi],dx
  40e3be:	sbb    DWORD PTR [eax+0x1f7c3f84],0xffffff8c
  40e3c5:	call   0x4788800f
  40e3ca:	inc    edi
  40e3cb:	adc    DWORD PTR [eax+0x51bc801d],esi
  40e3d1:	ret    0xa7dc
  40e3d4:	cwde   
  40e3d5:	stos   BYTE PTR es:[edi],al
  40e3d6:	xor    ah,BYTE PTR [eax-0x60927594]
  40e3dc:	rol    BYTE PTR [edi-0x593f360b],cl
  40e3e2:	push   edx
  40e3e3:	jae    0x40e424
  40e3e5:	out    0x27,al
  40e3e7:	push   ss
  40e3e8:	retf   0xcc74
  40e3eb:	mov    esi,0x7658e5ec
  40e3f0:	dec    ebp
  40e3f1:	xor    DWORD PTR gs:[edx],edi
  40e3f4:	sbb    BYTE PTR [ecx],bl
  40e3f6:	out    dx,eax
  40e3f7:	bound  esp,QWORD PTR [ebx]
  40e3f9:	call   0x28a6:0x69479e69
  40e400:	sbb    ebp,DWORD PTR [edx+0x0]
  40e403:	xchg   edx,eax
  40e404:	sahf   
  40e405:	adc    DWORD PTR [ebx],eax
  40e407:	shr    al,1
  40e409:	mov    dl,0xcc
  40e40b:	bnd jbe 0x40e44a
  40e40e:	cmp    bh,al
  40e410:	shl    DWORD PTR [esi-0x46],1
  40e413:	je     0x40e435
  40e415:	push   0xffffff8b
  40e417:	adc    eax,0x76eeb8bd
  40e41c:	jne    0x40e411
  40e41e:	mov    dh,0xd
  40e420:	out    dx,al
  40e421:	push   esi
  40e422:	(bad)  
  40e423:	cld    
  40e424:	mov    BYTE PTR [esi],ah
  40e426:	fimul  DWORD PTR [eax+esi*2]
  40e429:	mov    bh,0x27
  40e42b:	jns    0x40e409
  40e42d:	dec    edx
  40e42e:	sbb    al,0x66
  40e430:	ret    0x6394
  40e433:	xor    al,0xbe
  40e435:	cs jne 0x40e47a
  40e438:	mov    edx,ebx
  40e43a:	fimul  WORD PTR [ebp+0x7a]
  40e43d:	nop
  40e43e:	(bad)  
  40e43f:	pop    esi
  40e440:	ds in  al,0xbf
  40e443:	and    cl,BYTE PTR [eax]
  40e445:	sbb    BYTE PTR [ecx+0x4786326c],dh
  40e44b:	cmp    BYTE PTR [esi-0x1],0x7f
  40e44f:	test   ch,ch
  40e451:	pop    ecx
  40e452:	in     al,0xdc
  40e454:	int3   
  40e455:	pop    edi
  40e456:	addr16 pop ecx
  40e458:	sbb    eax,esp
  40e45a:	cdq    
  40e45b:	mov    ebp,0x6ae1fa7c
  40e460:	cmc    
  40e461:	mov    cs,WORD PTR [edi+edx*4+0x5c1b92ae]
  40e468:	mov    edi,0xb125b9f0
  40e46d:	xor    ah,bh
  40e46f:	clc    
  40e470:	sbb    dh,al
  40e472:	add    eax,0x67cc6e07
  40e477:	ins    BYTE PTR es:[edi],dx
  40e478:	fldcw  WORD PTR [edx+esi*2-0x626c544a]
  40e47f:	ror    ebp,1
  40e481:	pop    esp
  40e482:	fisttp WORD PTR [esp+ebp*1]
  40e485:	shr    BYTE PTR [edx],cl
  40e487:	dec    ecx
  40e488:	popf   
  40e489:	jmp    0xfd783cf1
  40e48e:	mov    edi,0x9786a1c1
  40e493:	push   eax
  40e494:	xchg   BYTE PTR [ecx+0x12],al
  40e497:	imul   esi,DWORD PTR [edi-0x7daf2d2b],0xffffff82
  40e49e:	push   edi
  40e49f:	push   ebx
  40e4a0:	das    
  40e4a1:	nop
  40e4a2:	repnz mov al,ds:0x6c1be799
  40e4a8:	push   ecx
  40e4a9:	sbb    DWORD PTR [edx-0x5f84f572],ebp
  40e4af:	jg     0x40e456
  40e4b1:	jbe    0x40e487
  40e4b3:	xchg   ebp,eax
  40e4b5:	mov    ds:0x1286f0e6,eax
  40e4ba:	dec    edx
  40e4bb:	pop    ebp
  40e4bc:	sbb    BYTE PTR [ebx+ecx*2+0x20],dl
  40e4c0:	add    dl,BYTE PTR [edi+0x24]
  40e4c3:	lods   al,BYTE PTR ds:[esi]
  40e4c4:	jne    0x40e4ee
  40e4c6:	fstp   st(2)
  40e4c8:	pop    ecx
  40e4c9:	pop    eax
  40e4ca:	pop    eax
  40e4cb:	rcr    esi,0xcc
  40e4ce:	pop    esp
  40e4cf:	inc    ebx
  40e4d0:	cmp    DWORD PTR ds:0x8125fd91,edx
  40e4d6:	test   DWORD PTR [edi+eax*4+0x34ebf2ba],edi
  40e4dd:	ss dec esp
  40e4df:	ss fwait
  40e4e1:	mov    bl,0xea
  40e4e3:	mov    esi,0xaee9b24d
  40e4e8:	call   0x6ffa9a32
  40e4ed:	out    0xd5,eax
  40e4ef:	or     dh,al
  40e4f1:	lock cmp eax,0xbffa0eaa
  40e4f7:	(bad)  
  40e4f8:	mov    BYTE PTR [edi-0x64d9b0af],al
  40e4fe:	sub    esi,DWORD PTR ds:0x41c6db04
  40e504:	add    ch,BYTE PTR [edx+0x2b]
  40e507:	sbb    ch,cl
  40e509:	jecxz  0x40e4ac
  40e50b:	inc    ebp
  40e50c:	shr    BYTE PTR [ecx+0x628ac07f],1
  40e512:	out    0x81,eax
  40e514:	mov    ecx,0xc1370a7
  40e519:	pop    es
  40e51a:	or     DWORD PTR [eax-0x3f9da818],ebx
  40e520:	jb     0x40e576
  40e522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e523:	or     bh,BYTE PTR [ebp+ebx*2-0x2]
  40e527:	fld    TBYTE PTR [edx+0x352cd6a0]
  40e52d:	into   
  40e52e:	mov    dh,al
  40e530:	sub    bh,bh
  40e532:	xchg   ebp,eax
  40e533:	nop
  40e534:	gs js  0x40e4be
  40e537:	lock arpl WORD PTR [esi+edi*8-0x23c9dd1c],cx
  40e53f:	shr    BYTE PTR [ecx+edx*2],1
  40e542:	jle    0x40e539
  40e544:	fadd   QWORD PTR [ebx+eax*2-0x758296ee]
  40e54b:	call   0x571de93b
  40e550:	mov    esi,0x567269d6
  40e555:	cdq    
  40e556:	out    0xbf,eax
  40e558:	(bad)  
  40e559:	fiadd  DWORD PTR [ebx+0x5a221f79]
  40e55f:	nop
  40e560:	pusha  
  40e561:	xchg   ebp,eax
  40e562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e563:	fimul  DWORD PTR [ecx+0x6b]
  40e566:	pop    edx
  40e567:	rol    DWORD PTR [ebx-0x2],0xfd
  40e56b:	xor    cl,BYTE PTR [ebx-0x2f9506ec]
  40e571:	out    0x63,eax
  40e573:	xchg   ebx,eax
  40e574:	cmp    DWORD PTR [ecx],0x27cce40d
  40e57a:	cmp    al,0x3c
  40e57c:	push   eax
  40e57d:	(bad)  
  40e57e:	outs   dx,BYTE PTR ds:[esi]
  40e57f:	sbb    esi,DWORD PTR [esi-0x7ae60637]
  40e585:	repz call FWORD PTR [esi+ebx*8+0x216b0fde]
  40e58d:	jl     0x40e56e
  40e58f:	and    ch,0xe0
  40e592:	loop   0x40e590
  40e594:	outs   dx,DWORD PTR ds:[esi]
  40e595:	rol    DWORD PTR [ebp+0x272d4a24],cl
  40e59b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e59d:	sahf   
  40e59e:	int    0x8b
  40e5a0:	jle    0x40e5a9
  40e5a2:	call   0x5591:0x17322897
  40e5a9:	fdivr  st,st(5)
  40e5ab:	mov    edx,0xbedd6c55
  40e5b0:	ret    0xc408
  40e5b3:	sub    bl,ah
  40e5b5:	clc    
  40e5b6:	imul   BYTE PTR [ebp*8-0x554acb6e]
  40e5bd:	bswap  edi
  40e5bf:	jae    0x40e58a
  40e5c1:	ins    DWORD PTR es:[edi],dx
  40e5c2:	inc    ecx
  40e5c3:	icebp  
  40e5c4:	pusha  
  40e5c5:	enter  0x271,0x44
  40e5c9:	push   ecx
  40e5ca:	sahf   
  40e5cb:	scas   eax,DWORD PTR es:[edi]
  40e5cc:	cmp    al,0x19
  40e5ce:	bound  ebp,QWORD PTR [edx-0x1d]
  40e5d1:	ret    0xfdcd
  40e5d4:	xchg   esi,eax
  40e5d5:	dec    edi
  40e5d6:	outs   dx,DWORD PTR ds:[esi]
  40e5d7:	jl     0x40e604
  40e5d9:	xchg   edx,eax
  40e5da:	pop    esp
  40e5db:	call   0x8257cbdc
  40e5e0:	sub    eax,0xd5426fe6
  40e5e5:	and    BYTE PTR [esp+ebx*2+0x62],dl
  40e5e9:	leave  
  40e5ea:	or     ah,BYTE PTR [ebp+0x62]
  40e5ed:	pop    ecx
  40e5ee:	mov    al,0xd3
  40e5f0:	and    dl,BYTE PTR [esi+0x31]
  40e5f3:	xor    DWORD PTR [esi+0x54],ebx
  40e5f6:	add    ebp,DWORD PTR [esi+ecx*8+0x2a8c3bb0]
  40e5fd:	adc    BYTE PTR [ecx],dl
  40e5ff:	call   0x610a7a1d
  40e604:	xor    dh,bh
  40e606:	sbb    BYTE PTR [ebx],0x29
  40e609:	jge    0x40e601
  40e60b:	addr16 lahf 
  40e60d:	leave  
  40e60e:	js     0x40e661
  40e610:	popa   
  40e611:	cmc    
  40e612:	loop   0x40e637
  40e614:	ret    0x9aae
  40e617:	ss sbb al,0xa0
  40e61a:	addr16 xchg edx,eax
  40e61c:	lea    ebp,[eax+0x55]
  40e61f:	cmp    dl,BYTE PTR [edx+ebx*1+0x2c]
  40e623:	cmc    
  40e624:	jge    0x40e696
  40e626:	enter  0x1202,0xb6
  40e62a:	lods   eax,DWORD PTR ds:[esi]
  40e62b:	shr    DWORD PTR [ecx+0x47],0x23
  40e62f:	lock ret 0x79f7
  40e633:	inc    eax
  40e634:	ins    DWORD PTR es:[edi],dx
  40e635:	pusha  
  40e636:	ins    BYTE PTR es:[edi],dx
  40e637:	mov    al,ds:0xa28cda9
  40e63c:	xor    cl,al
  40e63e:	imul   edx,DWORD PTR [ecx+0x9],0x61a6f79e
  40e645:	int    0x94
  40e647:	push   ebp
  40e648:	pop    ds
  40e649:	sbb    eax,0x5d721632
  40e64e:	ins    BYTE PTR es:[edi],dx
  40e64f:	xchg   cl,bl
  40e651:	sahf   
  40e652:	into   
  40e653:	sub    edi,ebx
  40e655:	jmp    0xdf71:0xf6bbdc03
  40e65c:	xor    BYTE PTR [edx-0x5f411d96],bl
  40e662:	ja     0x40e605
  40e664:	pop    ebx
  40e665:	addr16 dec ebx
  40e667:	jbe    0x40e661
  40e669:	lods   eax,DWORD PTR ds:[esi]
  40e66a:	jno    0x40e6a1
  40e66c:	sub    cl,dl
  40e66e:	push   eax
  40e66f:	cmp    dl,dl
  40e671:	inc    ebx
  40e672:	adc    ch,BYTE PTR [edx-0x29f77b86]
  40e678:	in     al,dx
  40e679:	ret    0xf6a1
  40e67c:	pop    esi
  40e67d:	int3   
  40e67e:	xchg   ebp,eax
  40e67f:	mov    edi,0x7c4ae8e0
  40e684:	dec    ecx
  40e685:	xlat   BYTE PTR ds:[ebx]
  40e686:	repz xchg ebx,eax
  40e688:	lods   al,BYTE PTR ds:[esi]
  40e689:	jmp    0x40e66d
  40e68b:	or     eax,0xc92987a6
  40e690:	adc    bl,0xe8
  40e693:	jb     0x40e69a
  40e695:	and    bl,BYTE PTR [edi+eax*4+0x56da2b10]
  40e69c:	test   BYTE PTR [esi+edi*8],0xe5
  40e6a0:	mov    ds:0xd881e344,al
  40e6a5:	cmp    DWORD PTR [edx],0xf086cad4
  40e6ab:	xchg   edi,eax
  40e6ac:	push   0xffffffa2
  40e6ae:	popa   
  40e6af:	or     BYTE PTR [ebx+0x1f3af78f],0x83
  40e6b6:	fcomp  QWORD PTR [edx-0x1f]
  40e6b9:	leave  
  40e6ba:	ss in  al,0xb2
  40e6bd:	mov    ebp,0x856b87d3
  40e6c2:	loop   0x40e68f
  40e6c4:	icebp  
  40e6c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6c6:	icebp  
  40e6c7:	enter  0xbfff,0x3c
  40e6cb:	fidiv  WORD PTR [ebx]
  40e6cd:	fcom   DWORD PTR [edi]
  40e6cf:	es (bad) 
  40e6d1:	fmul   DWORD PTR [edx+0x73b3b46b]
  40e6d7:	sbb    dh,dh
  40e6d9:	loopne 0x40e6b5
  40e6db:	out    0x36,al
  40e6dd:	addr16 push cs
  40e6df:	mov    al,0x1b
  40e6e1:	aaa    
  40e6e2:	mov    esi,0x14d79469
  40e6e7:	rcl    DWORD PTR [ecx],1
  40e6e9:	pop    ebp
  40e6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6eb:	out    0x25,al
  40e6ed:	rcr    DWORD PTR [esi],1
  40e6ef:	add    al,0x10
  40e6f1:	gs sbb eax,0xfa220e6b
  40e6f7:	cld    
  40e6f8:	or     dh,dh
  40e6fa:	xor    al,0x6d
  40e6fc:	pop    ebp
  40e6fd:	xor    al,0x91
  40e6ff:	fistp  WORD PTR [ecx]
  40e701:	inc    ecx
  40e702:	push   ds
  40e703:	mov    DWORD PTR [eax],ebp
  40e705:	mov    es,ecx
  40e707:	jge    0x40e70e
  40e709:	imul   edx,DWORD PTR [ebx+0x2ceb98aa],0x356b0389
  40e713:	stc    
  40e714:	icebp  
  40e715:	imul   esp,esp,0x11
  40e718:	xchg   esp,eax
  40e719:	pop    edx
  40e71a:	mov    ch,0x6b
  40e71c:	addr16 mov ah,cl
  40e71f:	cmp    cl,BYTE PTR [ecx+0x1b59ee85]
  40e725:	xor    DWORD PTR [esi],0x72
  40e728:	sub    ebx,DWORD PTR [edx]
  40e72a:	sbb    edx,ecx
  40e72c:	jbe    0x40e72e
  40e72e:	repnz out 0xbc,al
  40e731:	xchg   BYTE PTR [edi-0x4],ah
  40e734:	mov    eax,0xebc70b6b
  40e739:	std    
  40e73a:	jl     0x40e776
  40e73c:	gs sahf 
  40e73e:	sbb    esi,edi
  40e740:	mov    dh,0x83
  40e742:	leave  
  40e743:	mov    eax,DWORD PTR [eax-0x74]
  40e746:	adc    ebx,edi
  40e748:	dec    esp
  40e749:	push   ebp
  40e74a:	inc    ebx
  40e74b:	je     0x40e78e
  40e74d:	lea    edx,ds:0x59882994
  40e753:	cwde   
  40e754:	retf   
  40e755:	jmp    0x40e7c7
  40e757:	rcr    DWORD PTR [ebx+0x17c92b70],cl
  40e75d:	call   0x401c:0xb791c744
  40e764:	(bad)  
  40e765:	(bad)  
  40e766:	pop    ebx
  40e767:	retf   
  40e768:	lahf   
  40e769:	imul   ebx,DWORD PTR [edi-0x63077b3d],0x57
  40e770:	fs out dx,al
  40e772:	push   esi
  40e773:	popf   
  40e774:	sar    BYTE PTR [ebp-0x78eda28d],cl
  40e77a:	retf   0x785
  40e77d:	pop    eax
  40e77e:	xchg   ebp,eax
  40e77f:	xchg   esp,eax
  40e780:	push   edx
  40e781:	jo     0x40e7ca
  40e783:	das    
  40e784:	xchg   ebx,eax
  40e785:	in     al,0xef
  40e787:	pusha  
  40e788:	xchg   BYTE PTR [ebp-0x5bd85c8],al
  40e78e:	cmp    edx,DWORD PTR [eax]
  40e790:	xor    eax,0x1de0e1fd
  40e795:	dec    esi
  40e796:	xor    ebp,DWORD PTR [edx-0x30]
  40e799:	arpl   WORD PTR [ecx],dx
  40e79b:	sbb    al,BYTE PTR [edi+0x4c]
  40e79e:	mov    eax,ds:0x569ee487
  40e7a3:	outs   dx,DWORD PTR ds:[esi]
  40e7a4:	std    
  40e7a5:	ror    BYTE PTR [ecx],1
  40e7a7:	inc    esp
  40e7a8:	scas   eax,DWORD PTR es:[edi]
  40e7a9:	lods   al,BYTE PTR ds:[esi]
  40e7aa:	mov    dl,0x82
  40e7ac:	xchg   ebx,eax
  40e7ad:	(bad)  
  40e7ae:	adc    eax,0x448b7b22
  40e7b3:	(bad)  
  40e7b5:	mov    ebx,0x351765b1
  40e7ba:	mov    edi,0x2b8aab87
  40e7bf:	data16 (bad) 
  40e7c1:	shr    DWORD PTR [eax+edi*1-0x2a78127c],cl
  40e7c8:	into   
  40e7c9:	mov    al,ds:0xe6a46ecd
  40e7ce:	push   edx
  40e7cf:	mov    al,ds:0xacac7aef
  40e7d4:	mov    edi,0xf4da1b1d
  40e7d9:	imul   esi,DWORD PTR [ebx-0x7a],0x1
  40e7dd:	inc    esi
  40e7de:	pop    ebp
  40e7df:	enter  0x71df,0x29
  40e7e3:	inc    ebp
  40e7e4:	and    ch,BYTE PTR [eax+0x3c]
  40e7e7:	xchg   esp,eax
  40e7e8:	ds ss repz (bad) 
  40e7ec:	imul   ecx,DWORD PTR [edi+0x2a],0x17
  40e7f0:	jb     0x40e78f
  40e7f2:	push   esi
  40e7f3:	rcr    BYTE PTR [ecx-0x3],cl
  40e7f6:	adc    BYTE PTR [ecx-0x191463d0],0xe0
  40e7fd:	fld    DWORD PTR [ecx]
  40e7ff:	add    ecx,edx
  40e801:	add    edi,DWORD PTR [edi]
  40e803:	ret    0xa2e4
  40e806:	mov    al,0x8b
  40e808:	aaa    
  40e809:	pop    edi
  40e80a:	pop    edi
  40e80b:	daa    
  40e80c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e80d:	jns    0x40e7d2
  40e80f:	dec    cx
  40e811:	jl     0x40e87b
  40e813:	mov    al,0xd3
  40e815:	mov    ch,0x6f
  40e817:	rcl    BYTE PTR [edx-0x1a],0xfe
  40e81b:	addr16 push edx
  40e81d:	popf   
  40e81e:	inc    ecx
  40e81f:	adc    al,0xb3
  40e821:	xor    al,0xcf
  40e823:	mov    ecx,0x4f6353f1
  40e828:	push   ebx
  40e829:	leave  
  40e82a:	and    esp,edi
  40e82c:	pop    esi
  40e82d:	fld    TBYTE PTR [eax-0x5c76bf7f]
  40e833:	cdq    
  40e834:	sti    
  40e835:	push   edi
  40e836:	inc    ebx
  40e837:	mov    dl,0xf0
  40e839:	cli    
  40e83a:	dec    ebx
  40e83b:	scas   al,BYTE PTR es:[edi]
  40e83c:	call   0x591c0a17
  40e841:	or     eax,0xbd9d4dc7
  40e846:	pop    esp
  40e847:	mov    ds:0xd2a20c79,eax
  40e84c:	mov    eax,ds:0x1c8b5222
  40e851:	add    edi,esi
  40e853:	mov    ecx,0x2fe1f38f
  40e858:	adc    al,0x83
  40e85a:	std    
  40e85b:	cli    
  40e85c:	lods   eax,DWORD PTR ds:[esi]
  40e85d:	pop    esi
  40e85e:	cdq    
  40e85f:	stos   DWORD PTR es:[edi],eax
  40e860:	mov    ecx,0x16e6d689
  40e865:	mov    ecx,0xd644a0c3
  40e86a:	les    edi,FWORD PTR [ebp-0x2f]
  40e86d:	daa    
  40e86e:	mov    cl,0x40
  40e870:	dec    ebp
  40e871:	(bad)  
  40e872:	cmp    edi,esp
  40e874:	cmp    BYTE PTR [edx],ch
  40e876:	repz xchg ebx,eax
  40e878:	mov    dh,dh
  40e87a:	inc    eax
  40e87b:	sbb    al,BYTE PTR [ebx+ebp*4+0x6]
  40e87f:	pop    ss
  40e880:	xchg   esp,eax
  40e881:	inc    ecx
  40e882:	mov    dl,0x8e
  40e884:	hlt    
  40e885:	push   eax
  40e886:	js     0x40e858
  40e888:	retf   0x186
  40e88b:	lods   al,BYTE PTR ds:[esi]
  40e88c:	imul   DWORD PTR [ebx+0x5073e951]
  40e892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e893:	push   ss
  40e894:	out    dx,eax
  40e895:	push   esi
  40e896:	(bad)  
  40e897:	xlat   BYTE PTR ds:[ebx]
  40e898:	sub    ah,BYTE PTR [ebp-0x49]
  40e89b:	xchg   edx,eax
  40e89c:	cli    
  40e89d:	leave  
  40e89e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e89f:	and    esp,DWORD PTR [eax]
  40e8a1:	cmp    cl,BYTE PTR ds:0xba9fca1
  40e8a7:	and    eax,0x217e69fa
  40e8ac:	cmp    ebp,DWORD PTR [edx-0x15]
  40e8af:	xchg   ebp,eax
  40e8b0:	adc    bh,BYTE PTR [ebx-0x6c992f22]
  40e8b6:	lods   al,BYTE PTR ds:[esi]
  40e8b7:	cmp    eax,0x359bd020
  40e8bc:	dec    ebp
  40e8bd:	ja     0x40e8e0
  40e8bf:	leave  
  40e8c0:	push   ds
  40e8c1:	cld    
  40e8c2:	cld    
  40e8c3:	push   ebp
  40e8c4:	mov    bl,0x7c
  40e8c6:	adc    eax,0x48f556be
  40e8cb:	inc    ebx
  40e8cc:	js     0x40e8e4
  40e8ce:	fstp   DWORD PTR ds:0xb48cc3b3
  40e8d4:	pop    es
  40e8d5:	inc    ecx
  40e8d6:	pop    edx
  40e8d8:	sub    eax,0x22a8e8e7
  40e8dd:	or     esp,ebp
  40e8df:	mov    dh,0x74
  40e8e1:	adc    BYTE PTR [ebx-0x4],0x45
  40e8e5:	sbb    al,0xbf
  40e8e7:	mov    dl,0x91
  40e8e9:	inc    eax
  40e8ea:	out    dx,eax
  40e8eb:	xor    ebx,edx
  40e8ed:	mov    cl,0xda
  40e8ef:	xor    al,0x6c
  40e8f1:	cmp    DWORD PTR [ebx-0x33af712c],ebx
  40e8f7:	clc    
  40e8f8:	ret    
  40e8f9:	pop    ebx
  40e8fa:	cmp    eax,0xa1e0f67d
  40e8ff:	dec    eax
  40e900:	sysret 
  40e902:	mov    esi,0x792e722e
  40e907:	jb     0x40e8fb
  40e909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e90a:	pop    ss
  40e90b:	mov    edx,DWORD PTR [ebx]
  40e90d:	addr16 in al,dx
  40e90f:	mov    esi,0x9206e276
  40e914:	add    bl,cl
  40e916:	and    BYTE PTR [edx],0x33
  40e919:	nop
  40e91a:	jmp    0xa9e8:0x19b745c
  40e921:	xor    BYTE PTR [edi+edx*4+0x72],0x7e
  40e926:	mov    al,0x70
  40e928:	pop    ebp
  40e929:	in     al,dx
  40e92a:	ins    BYTE PTR es:[edi],dx
  40e92b:	pop    esp
  40e92c:	sub    al,0x22
  40e92e:	ss pop es
  40e930:	aad    0x59
  40e932:	inc    esp
  40e933:	sbb    al,0x83
  40e935:	(bad)  
  40e936:	sbb    al,0x5
  40e938:	inc    ebx
  40e939:	dec    esi
  40e93a:	sbb    eax,0x3102cebd
  40e93f:	mov    edx,0xca3d56f7
  40e944:	xchg   BYTE PTR [ecx+eiz*8-0x1c],ah
  40e948:	clc    
  40e949:	fbstp  TBYTE PTR ds:0x85d2bc3
  40e94f:	(bad)  
  40e950:	mov    esp,ecx
  40e952:	in     al,dx
  40e953:	inc    eax
  40e954:	int    0x60
  40e956:	cmp    al,0xfb
  40e958:	out    dx,al
  40e959:	xchg   esi,eax
  40e95a:	in     eax,dx
  40e95b:	call   0x5e40cf57
  40e960:	adc    BYTE PTR [esi-0x30ad0ca3],dh
  40e966:	int3   
  40e967:	inc    edx
  40e968:	retf   
  40e969:	div    DWORD PTR [ecx]
  40e96b:	cmp    dh,BYTE PTR [edi]
  40e96d:	push   ss
  40e96e:	call   0x429d:0xd8ecb535
  40e975:	out    dx,al
  40e976:	and    al,0x56
  40e978:	xor    dl,dl
  40e97a:	loopne 0x40e97a
  40e97c:	out    0x94,eax
  40e97e:	fs ret 0xdd3c
  40e982:	loopne 0x40e917
  40e984:	jmp    0x40e98b
  40e986:	pop    eax
  40e987:	rsm    
  40e989:	stc    
  40e98a:	call   0xb1be:0x9f7481e0
  40e991:	sbb    al,0xcf
  40e993:	gs pop ebx
  40e995:	out    dx,eax
  40e996:	adc    DWORD PTR [bp+si],edi
  40e999:	pop    ebp
  40e99a:	hlt    
  40e99b:	jo     0x40e9f3
  40e99d:	pop    esi
  40e99e:	sub    al,0x1d
  40e9a0:	retf   0x5c75
  40e9a3:	push   ecx
  40e9a4:	aam    0xdb
  40e9a6:	mov    ch,0x64
  40e9a8:	ins    DWORD PTR es:[edi],dx
  40e9a9:	cwde   
  40e9aa:	inc    edi
  40e9ab:	mov    al,0xa8
  40e9ad:	mov    DWORD PTR [ebx-0x78],edi
  40e9b0:	or     eax,0xb777f9ad
  40e9b5:	push   0xa7699ee9
  40e9ba:	mov    dl,BYTE PTR [ebx]
  40e9bc:	repz scas eax,DWORD PTR es:[edi]
  40e9be:	add    al,BYTE PTR [esi+0x79]
  40e9c1:	mov    cl,0xc8
  40e9c3:	xor    DWORD PTR [ebx+0x74],edx
  40e9c6:	inc    edx
  40e9c7:	sub    dh,BYTE PTR [ebx-0x6d5046f5]
  40e9cd:	or     al,0x88
  40e9cf:	or     BYTE PTR [ecx-0x302a7c31],ah
  40e9d5:	pop    ss
  40e9d6:	aad    0x13
  40e9d8:	xor    ebp,ecx
  40e9da:	bnd jb 0x40e966
  40e9dd:	or     eax,0xe13f4d8e
  40e9e2:	ins    DWORD PTR es:[edi],dx
  40e9e3:	lahf   
  40e9e4:	ss push esi
  40e9e6:	push   edx
  40e9e7:	(bad)  ds:0xdf0429db
  40e9ed:	lds    eax,FWORD PTR [esi+0x38c3f331]
  40e9f3:	add    ebx,DWORD PTR [ebx+edx*8+0x2]
  40e9f7:	lea    edx,[esi]
  40e9f9:	fadd   st,st(3)
  40e9fb:	cmp    DWORD PTR ss:[edx-0x409dd7ee],esp
  40ea02:	ja     0x40e996
  40ea04:	nop    ebp
  40ea07:	xlat   BYTE PTR ds:[ebx]
  40ea08:	inc    edi
  40ea09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea0a:	shl    BYTE PTR [edx],cl
  40ea0c:	lods   eax,DWORD PTR ds:[esi]
  40ea0d:	test   eax,0xe8331f89
  40ea12:	mov    al,0x36
  40ea14:	xchg   esp,eax
  40ea15:	fs jle 0x40ea25
  40ea18:	and    DWORD PTR [eax-0x36],eax
  40ea1b:	adc    eax,0x3ebcc95f
  40ea20:	and    edi,esi
  40ea22:	sbb    edi,DWORD PTR [ebp+0x62]
  40ea25:	xchg   ecx,eax
  40ea26:	cld    
  40ea27:	pop    ebp
  40ea28:	retf   
  40ea29:	cmp    ah,BYTE PTR [ecx+0x70]
  40ea2c:	stos   DWORD PTR es:[edi],eax
  40ea2d:	cmp    dl,BYTE PTR [edi]
  40ea2f:	sub    DWORD PTR [ecx],ebp
  40ea31:	je     0x40ea90
  40ea33:	cmc    
  40ea34:	retf   
  40ea35:	sar    BYTE PTR [esi-0x5a429111],1
  40ea3b:	fcomp  DWORD PTR [edx]
  40ea3d:	loope  0x40e9ec
  40ea3f:	(bad)  
  40ea40:	int    0x10
  40ea42:	test   BYTE PTR [eax+0x73],al
  40ea45:	std    
  40ea46:	jmp    0x76a2829f
  40ea4b:	sub    DWORD PTR [edi-0x22bee464],esp
  40ea51:	push   0xffffffb2
  40ea53:	rcr    BYTE PTR [edx+eax*4+0x3ce05c8d],1
  40ea5a:	mov    al,0x42
  40ea5c:	dec    esi
  40ea5d:	(bad)  
  40ea5f:	jns    0x40ea2a
  40ea61:	test   DWORD PTR [eax+ecx*1],edx
  40ea64:	fstp   TBYTE PTR [edi]
  40ea66:	cmp    eax,0x12b0256
  40ea6b:	cmp    eax,0x58d5ef55
  40ea70:	jbe    0x40ea5a
  40ea72:	xlat   BYTE PTR ds:[ebx]
  40ea73:	push   es
  40ea74:	les    esp,FWORD PTR [edx+0xce212bb]
  40ea7a:	mov    dl,0x2f
  40ea7c:	repnz retf 
  40ea7e:	push   esp
  40ea7f:	int    0x82
  40ea81:	and    DWORD PTR ds:0xe5f91be2,edi
  40ea87:	push   0xc0fee512
  40ea8c:	cs push ecx
  40ea8e:	es pop eax
  40ea90:	xchg   ecx,eax
  40ea91:	int    0x34
  40ea93:	or     dl,BYTE PTR [esi+0x15]
  40ea96:	fwait
  40ea97:	nop
  40ea98:	or     DWORD PTR [eax-0x32bebd55],0x97b41555
  40eaa2:	mov    edi,0x349c28c0
  40eaa7:	jecxz  0x40ead7
  40eaa9:	mov    DWORD PTR [edi+0x3d],esp
  40eaac:	cld    
  40eaad:	inc    ecx
  40eaae:	clc    
  40eaaf:	out    0x6d,eax
  40eab1:	(bad)  ds:0xf80a5593
  40eab7:	pop    eax
  40eab8:	leave  
  40eab9:	sub    DWORD PTR [ebp+0x41636431],edx
  40eabf:	xchg   esi,eax
  40eac0:	inc    esp
  40eac1:	outs   dx,BYTE PTR ds:[esi]
  40eac2:	in     al,0xf8
  40eac4:	jmp    0xb894:0x1624227f
  40eacb:	dec    edx
  40eacc:	les    edx,FWORD PTR [ecx]
  40eace:	imul   esp,ebp,0x86af84f7
  40ead4:	push   ebp
  40ead5:	dec    edi
  40ead6:	cmp    eax,0x9c6fa387
  40eadb:	push   0x8c431c60
  40eae0:	mov    esi,0x57f442e8
  40eae5:	mov    edx,0xf1311941
  40eaea:	push   es
  40eaeb:	mov    ah,0x4f
  40eaed:	add    bh,bl
  40eaef:	push   esi
  40eaf0:	adc    cl,0x85
  40eaf3:	ja     0x40eb2a
  40eaf5:	sbb    eax,0xd5e7d69f
  40eafa:	jg     0x40eb46
  40eafc:	or     DWORD PTR [ebx+0x60],edx
  40eaff:	cmp    DWORD PTR ds:0x4a7d13ff,eax
  40eb05:	in     al,0xb2
  40eb07:	dec    ebp
  40eb08:	xchg   ecx,eax
  40eb09:	pusha  
  40eb0a:	fisubr DWORD PTR [edi+0x2361e6ac]
  40eb10:	mov    ebx,0xaea6c95b
  40eb15:	clc    
  40eb16:	(bad)  
  40eb17:	add    DWORD PTR [esi],edx
  40eb19:	and    ecx,DWORD PTR [esi+0x65]
  40eb1c:	sub    edi,DWORD PTR [ecx+0x44e6cca6]
  40eb22:	sub    al,0x35
  40eb24:	push   esp
  40eb25:	mov    ecx,DWORD PTR [edx-0x37]
  40eb28:	rol    DWORD PTR [ebp+0x2ce64a86],0xe5
  40eb2f:	int3   
  40eb30:	cmp    al,0x6f
  40eb32:	dec    eax
  40eb33:	enter  0x8215,0xe
  40eb37:	sbb    ah,BYTE PTR [ecx]
  40eb39:	or     BYTE PTR [esi],al
  40eb3b:	call   0x4e85a4a4
  40eb40:	comiss xmm3,DWORD PTR [ecx+ebp*8]
  40eb44:	adc    edx,eax
  40eb46:	pusha  
  40eb47:	cli    
  40eb48:	sbb    dh,ah
  40eb4a:	mov    ebp,0x4054a252
  40eb4f:	pusha  
  40eb50:	add    eax,0xec8f0af6
  40eb55:	icebp  
  40eb56:	mov    ch,0xb8
  40eb58:	pop    ds
  40eb59:	call   0xa366:0x26ff0f21
  40eb60:	rol    DWORD PTR [ebp-0x52],0x51
  40eb64:	jbe    0x40eb8e
  40eb66:	pop    ecx
  40eb67:	xchg   ebp,eax
  40eb68:	aad    0xdf
  40eb6a:	(bad)  
  40eb6b:	fild   WORD PTR [eax+esi*8+0xd]
  40eb6f:	shr    DWORD PTR [ecx-0x34100773],cl
  40eb75:	and    BYTE PTR [edi],cl
  40eb77:	and    al,0xfe
  40eb79:	pop    fs
  40eb7b:	into   
  40eb7c:	adc    BYTE PTR cs:[edx],dh
  40eb7f:	jmp    0xc91f8add
  40eb84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb85:	pushf  
  40eb86:	mov    ebp,0xa248f48f
  40eb8b:	jecxz  0x40ebcd
  40eb8d:	(bad)  
  40eb8f:	sub    bl,BYTE PTR [ecx+esi*8]
  40eb92:	dec    ebp
  40eb93:	lahf   
  40eb94:	inc    esi
  40eb95:	pop    edi
  40eb96:	div    DWORD PTR [ebp-0x1]
  40eb99:	xor    dl,BYTE PTR [ebx]
  40eb9b:	or     dl,dh
  40eb9d:	leave  
  40eb9e:	out    0xb2,eax
  40eba0:	push   ss
  40eba1:	repz sar eax,0x4a
  40eba5:	pop    ebp
  40eba6:	iret   
  40eba7:	dec    edx
  40eba8:	test   al,0x66
  40ebaa:	aam    0x77
  40ebac:	and    DWORD PTR [ecx+0x4e6d4840],0x9ee776bf
  40ebb6:	jle    0x40ec05
  40ebb8:	mov    gs,WORD PTR [esi]
  40ebba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebbb:	fwait
  40ebbc:	push   ss
  40ebbd:	sbb    esi,DWORD PTR [edx-0x4b]
  40ebc0:	out    0xed,al
  40ebc2:	lahf   
  40ebc3:	ds xchg esp,eax
  40ebc5:	das    
  40ebc6:	mov    edx,0x19aabad
  40ebcb:	or     eax,0xcdb1ffc0
  40ebd0:	fisubr DWORD PTR ds:0x61dbf254
  40ebd6:	je     0x40ec4b
  40ebd8:	js     0x40eb99
  40ebda:	inc    edx
  40ebdb:	jns    0x40ebac
  40ebdd:	dec    ebx
  40ebde:	sti    
  40ebdf:	lea    esp,[edi+0x1599577b]
  40ebe5:	mov    WORD PTR [ebp-0x26],ds
  40ebe8:	pop    es
  40ebe9:	mov    al,ds:0xd2c88d30
  40ebee:	int    0x53
  40ebf0:	push   es
  40ebf1:	xlat   BYTE PTR ds:[ebx]
  40ebf2:	jae    0x40eb88
  40ebf4:	mov    ecx,0x6855cbe2
  40ebf9:	out    dx,al
  40ebfa:	jge    0x40ec73
  40ebfc:	jnp    0x40ec02
  40ebfe:	mov    edi,0x8cfaa69a
  40ec03:	out    0xfd,al
  40ec05:	loop   0x40ebec
  40ec07:	push   esp
  40ec08:	ret    
  40ec09:	pop    edi
  40ec0a:	jae    0x40ebf7
  40ec0c:	cld    
  40ec0d:	clc    
  40ec0e:	call   0xe5da6536
  40ec13:	cs and al,0x4e
  40ec16:	sub    DWORD PTR [esi-0x40],ebx
  40ec19:	dec    edx
  40ec1a:	inc    ebx
  40ec1b:	pop    ebx
  40ec1c:	in     eax,dx
  40ec1d:	outs   dx,DWORD PTR ds:[esi]
  40ec1e:	add    al,0xe8
  40ec20:	and    bh,BYTE PTR [ebx]
  40ec22:	gs cs test al,0x35
  40ec26:	push   ds
  40ec27:	hlt    
  40ec28:	mov    BYTE PTR [ecx-0x280d90bb],dh
  40ec2e:	add    al,0x38
  40ec30:	fiadd  DWORD PTR [edx+0x19]
  40ec33:	push   cs
  40ec34:	sub    eax,0x3bc2115d
  40ec39:	leave  
  40ec3a:	je     0x40ebe5
  40ec3c:	inc    ebx
  40ec3d:	shufps xmm4,XMMWORD PTR [ecx-0x1c],0x57
  40ec42:	sbb    bl,cl
  40ec44:	bound  edi,QWORD PTR [esi+0x11]
  40ec47:	fidiv  DWORD PTR [ebp+0x4a3dbcc5]
  40ec4d:	adc    BYTE PTR [ebx+ecx*1-0x11],al
  40ec51:	fmulp  st(4),st
  40ec53:	xchg   ebx,eax
  40ec54:	(bad)  
  40ec55:	jb     0x40ebf9
  40ec57:	inc    ecx
  40ec58:	sub    edi,DWORD PTR [esi]
  40ec5a:	lds    edx,FWORD PTR [edi+eiz*4+0x50c6980e]
  40ec61:	push   ds
  40ec62:	por    mm4,QWORD PTR [eax-0x5]
  40ec66:	push   ds
  40ec67:	sbb    ecx,DWORD PTR [edx]
  40ec69:	push   0x8f61064d
  40ec6e:	ss dec esp
  40ec70:	mov    esp,DWORD PTR [eax]
  40ec72:	shl    DWORD PTR [edx],cl
  40ec74:	inc    esp
  40ec75:	mov    ?,WORD PTR [ebp-0x5e329dd3]
  40ec7b:	jmp    0x2bcc:0x3938438a
  40ec82:	inc    ecx
  40ec83:	push   es
  40ec84:	cwde   
  40ec85:	ret    0x2ad2
  40ec88:	dec    esi
  40ec89:	or     BYTE PTR [ecx],dl
  40ec8b:	cli    
  40ec8c:	daa    
  40ec8d:	sbb    DWORD PTR [edi+0x212c3973],0xa99aad19
  40ec97:	xlat   BYTE PTR ds:[ebx]
  40ec98:	and    esi,DWORD PTR [ebx-0x268cc38]
  40ec9e:	pop    ds
  40ec9f:	and    al,0xcb
  40eca1:	ret    
  40eca2:	add    al,0x24
  40eca4:	std    
  40eca5:	mov    BYTE PTR [edi+0x22],0x92
  40eca9:	mov    ds:0x9fe62672,al
  40ecae:	pop    esp
  40ecaf:	jns    0x40ecb5
  40ecb1:	mov    al,0x2a
  40ecb3:	dec    ebp
  40ecb4:	xor    al,BYTE PTR [edi+ebp*4]
  40ecb7:	rol    ebx,cl
  40ecb9:	add    eax,0x65eb84a9
  40ecbe:	dec    ecx
  40ecbf:	(bad)  
  40ecc0:	pop    esi
  40ecc1:	push   ecx
  40ecc2:	int    0x9a
  40ecc4:	adc    eax,0xbab4f51f
  40ecc9:	pop    edi
  40ecca:	sbb    ecx,DWORD PTR [eax+ecx*4-0x1f]
  40ecce:	aad    0x82
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	sahf   
  40ecd2:	mov    ecx,0xb35d55ac
  40ecd7:	adc    al,0x1b
  40ecd9:	dec    edx
  40ecda:	add    esi,DWORD PTR [ebx+0x33]
  40ecdd:	add    edx,0x8838c359
  40ece3:	sub    eax,0x385ecbd0
  40ece8:	xchg   esp,ecx
  40ecea:	add    al,0x4a
  40ecec:	je     0x40ecea
  40ecee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecef:	sub    al,0x9b
  40ecf1:	or     ch,0x50
  40ecf4:	out    dx,eax
  40ecf5:	out    dx,al
  40ecf6:	imul   eax,DWORD PTR [edx],0x59
  40ecf9:	fldln2 
  40ecfb:	jb     0x40ed4f
  40ecfd:	mov    dl,0xb4
  40ecff:	jmp    0x6a75:0x4d6709e9
  40ed06:	cmp    BYTE PTR [edi+0x61],ch
  40ed09:	and    DWORD PTR [esi+eiz*8+0x1d],ecx
  40ed0d:	add    dl,dl
  40ed0f:	not    DWORD PTR [esi-0x3a]
  40ed12:	mov    bh,0xbd
  40ed14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed15:	scas   eax,DWORD PTR es:[edi]
  40ed16:	pop    esi
  40ed17:	inc    ebx
  40ed18:	int    0xfb
  40ed1a:	and    BYTE PTR [ecx-0x6],ch
  40ed1d:	adc    ebp,DWORD PTR [edi]
  40ed1f:	xchg   ecx,eax
  40ed20:	dec    esi
  40ed21:	or     al,0x42
  40ed23:	add    esi,0x75
  40ed26:	fucompp 
  40ed28:	loopne 0x40ecdc
  40ed2a:	fistp  QWORD PTR [esi+ebx*1+0x7891bde]
  40ed31:	ds je  0x40ed2d
  40ed34:	pop    es
  40ed35:	into   
  40ed36:	shr    DWORD PTR [ecx+eax*8+0x76],1
  40ed3a:	push   ds
  40ed3b:	(bad)  
  40ed3c:	aas    
  40ed3d:	inc    ebx
  40ed3e:	adc    al,0xc9
  40ed40:	scas   al,BYTE PTR es:[edi]
  40ed41:	loope  0x40ed02
  40ed43:	test   al,0xc1
  40ed45:	cwde   
  40ed46:	jbe    0x40ed1a
  40ed48:	mov    ebx,0x6ba3cffe
  40ed4d:	je     0x40edae
  40ed4f:	sbb    cl,0xf5
  40ed52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed53:	imul   ebp,esi,0xffffffa0
  40ed56:	inc    bh
  40ed58:	xor    DWORD PTR [esi-0x6b8436ba],eax
  40ed5e:	shl    DWORD PTR [ecx-0x663fcf65],1
  40ed64:	or     cl,BYTE PTR [edx+esi*1-0x13]
  40ed68:	jns    0x40ed0d
  40ed6a:	leave  
  40ed6b:	stos   BYTE PTR es:[edi],al
  40ed6c:	fwait
  40ed6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed6e:	icebp  
  40ed6f:	or     eax,0x64ffa347
  40ed74:	aad    0xf5
  40ed76:	add    DWORD PTR [eax-0x46],esp
  40ed79:	xor    ebp,esi
  40ed7b:	and    al,0x1a
  40ed7d:	in     eax,dx
  40ed7e:	enter  0x8fe3,0x1d
  40ed82:	jg     0x40edd6
  40ed84:	aas    
  40ed85:	pusha  
  40ed86:	push   es
  40ed87:	mov    al,ds:0x4847156a
  40ed8c:	xor    DWORD PTR [edi+eiz*2-0x20d813a],edi
  40ed93:	cld    
  40ed94:	adc    eax,0x14d6888d
  40ed99:	add    BYTE PTR [eax+ebp*8+0x47ed65c0],ah
  40eda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eda1:	jo     0x40ed9a
  40eda3:	xchg   esp,eax
  40eda4:	jge    0x40ede2
  40eda6:	dec    eax
  40eda7:	mov    esp,0xb12071bc
  40edac:	lahf   
  40edad:	adc    al,0x2a
  40edaf:	mov    ah,0x5
  40edb1:	dec    edx
  40edb2:	xor    esp,edi
  40edb4:	mov    esi,DWORD PTR ds:0x2a624960
  40edba:	imul   ebp,DWORD PTR [edi],0x648f314
  40edc0:	loop   0x40ee14
  40edc2:	adc    eax,DWORD PTR [edi+0x5e]
  40edc5:	es pop eax
  40edc7:	mov    edi,0x62b9eeb5
  40edcc:	mov    al,ds:0xf52097e9
  40edd1:	fnstcw WORD PTR [ebx]
  40edd3:	mov    WORD PTR [ecx+0x183b6ef0],ss
  40edd9:	imul   ebx,DWORD PTR [ebx-0x38],0xffffff84
  40eddd:	out    0x34,eax
  40eddf:	outs   dx,BYTE PTR ds:[esi]
  40ede0:	popf   
  40ede1:	xor    eax,0x83d6bc81
  40ede6:	jmp    0x40edfa
  40ede8:	imul   ebp,DWORD PTR [eax-0x5d],0x34fb838a
  40edef:	pop    ebp
  40edf0:	jne    0x40ee41
  40edf2:	jg     0x40ee39
  40edf4:	into   
  40edf5:	pop    esp
  40edf6:	xchg   BYTE PTR gs:[edx-0x5ec3f31a],dl
  40edfd:	repz mov al,ds:0xb39f89f
  40ee03:	repnz push ds
  40ee05:	fs fxam 
  40ee08:	push   esp
  40ee09:	mov    bl,0xb1
  40ee0b:	inc    edi
  40ee0c:	push   cs
  40ee0d:	sub    BYTE PTR ds:0xd3cb0c4a,bh
  40ee13:	sub    edx,DWORD PTR [esi]
  40ee15:	xor    dh,BYTE PTR [ebx]
  40ee17:	inc    ecx
  40ee18:	call   0x57b3183f
  40ee1d:	xchg   edx,esp
  40ee1f:	and    bh,BYTE PTR [eax-0x47]
  40ee22:	xchg   edi,eax
  40ee23:	into   
  40ee24:	jle    0x40ee87
  40ee26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee27:	ins    DWORD PTR es:[edi],dx
  40ee28:	jmp    0x2ba168b9
  40ee2d:	add    ecx,eax
  40ee2f:	xchg   ecx,eax
  40ee30:	mov    edx,0x427080ff
  40ee35:	pop    es
  40ee36:	inc    ebx
  40ee37:	pop    ds
  40ee38:	call   0xd6d4d5b5
  40ee3d:	xor    eax,0x22a2c0d7
  40ee42:	sti    
  40ee43:	cdq    
  40ee44:	cmp    eax,DWORD PTR [edx-0x2b]
  40ee47:	or     ebx,DWORD PTR [ebp-0x109f88ac]
  40ee4d:	inc    edx
  40ee4e:	sub    ch,bh
  40ee50:	inc    edi
  40ee51:	into   
  40ee52:	mov    dl,BYTE PTR [ecx+0x53]
  40ee55:	ds std 
  40ee57:	mov    ah,0xa3
  40ee59:	imul   esp,esp,0xbe2bdd29
  40ee5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee60:	hlt    
  40ee61:	popf   
  40ee62:	mov    ah,0xb8
  40ee64:	dec    esp
  40ee65:	jmp    0xa921:0x520c820a
  40ee6c:	xchg   BYTE PTR [ecx],dl
  40ee6e:	adc    al,0x47
  40ee70:	mov    eax,0xf9f7f46b
  40ee75:	sub    ecx,DWORD PTR [edi-0x41e6c637]
  40ee7b:	sub    eax,0x74b5bb5f
  40ee80:	adc    al,0xf3
  40ee82:	icebp  
  40ee83:	and    BYTE PTR [ecx],0x7d
  40ee86:	push   esi
  40ee87:	mov    cs,WORD PTR [esi+eax*4]
  40ee8a:	(bad)  
  40ee8b:	cmp    al,dl
  40ee8d:	iret   
  40ee8e:	cmp    DWORD PTR [edx+0x1d2ac172],ebp
  40ee94:	test   DWORD PTR [ebx+0x53579095],0x8fa6b760
  40ee9e:	loope  0x40ee25
  40eea0:	mov    cl,0x8
  40eea2:	pop    ecx
  40eea3:	dec    esi
  40eea4:	jge    0x40eeba
  40eea6:	lods   eax,DWORD PTR ds:[esi]
  40eea7:	fidiv  DWORD PTR [edi]
  40eea9:	mov    ah,0xad
  40eeab:	adc    al,0xd7
  40eead:	lds    esp,FWORD PTR [ecx+0x57c5607f]
  40eeb3:	jo     0x40eea8
  40eeb5:	mov    ds:0x9f1a15be,al
  40eeba:	f2xm1  
  40eebc:	sbb    esi,DWORD PTR [ebx+0x1b]
  40eebf:	repz cs (bad) 
  40eec2:	repz arpl WORD PTR [ebx+ebx*8+0x69a34d0b],dx
  40eeca:	xchg   DWORD PTR [ecx+0x11bdec6a],ecx
  40eed0:	xchg   esp,eax
  40eed1:	inc    ebp
  40eed2:	jge    0x40ef2c
  40eed4:	les    edi,FWORD PTR [ebx+0x403ee50]
  40eeda:	js     0x40eea2
  40eedc:	sbb    DWORD PTR [esi],0xf2c93a55
  40eee2:	xchg   ebx,eax
  40eee3:	pop    es
  40eee4:	cmp    al,0x86
  40eee6:	mov    esp,0xb9aadbf6
  40eeeb:	adc    ecx,ebp
  40eeed:	cmp    dl,BYTE PTR [esp+ecx*1+0x63]
  40eef1:	out    dx,al
  40eef2:	pop    ecx
  40eef3:	(bad)  
  40eef4:	out    dx,eax
  40eef5:	ins    BYTE PTR es:[edi],dx
  40eef6:	rcr    bl,1
  40eef8:	mov    DWORD PTR [ecx-0x15],esi
  40eefb:	inc    ebx
  40eefc:	scas   eax,DWORD PTR es:[edi]
  40eefd:	std    
  40eefe:	mov    eax,0x1896392
  40ef03:	pop    ebx
  40ef04:	xor    al,0x6a
  40ef06:	dec    ebx
  40ef07:	adc    al,0x99
  40ef09:	ja     0x40ef17
  40ef0b:	loopne 0x40ef76
  40ef0d:	jmp    0xa3be8835
  40ef12:	cwde   
  40ef13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef14:	mov    bl,0x48
  40ef16:	xchg   ebx,eax
  40ef17:	xor    BYTE PTR [edx+ebx*1-0x27246b7c],dl
  40ef1e:	inc    eax
  40ef1f:	arpl   si,sp
  40ef21:	pop    ds
  40ef22:	mov    dh,0x22
  40ef24:	popf   
  40ef25:	fidivr DWORD PTR ds:0x1d4f96ad
  40ef2b:	push   ds
  40ef2c:	sbb    al,0xdc
  40ef2e:	into   
  40ef2f:	pushf  
  40ef30:	aas    
  40ef31:	or     BYTE PTR [ebp+0x2af68a73],0x47
  40ef38:	inc    edi
  40ef39:	fisubr DWORD PTR [edx-0x22]
  40ef3c:	fist   DWORD PTR [ebp-0x4a]
  40ef3f:	mov    edi,0x45950783
  40ef44:	mul    esp
  40ef46:	mov    BYTE PTR [ebx-0x2a],bh
  40ef49:	aas    
  40ef4a:	mov    WORD PTR [esi-0x45dcafe8],ss
  40ef50:	xlat   BYTE PTR ds:[ebx]
  40ef51:	sbb    eax,0x17cfa66b
  40ef56:	enter  0xeb29,0x91
  40ef5a:	push   ecx
  40ef5b:	xchg   edx,eax
  40ef5c:	push   esp
  40ef5d:	xor    BYTE PTR [edx+esi*4-0x1e],bh
  40ef61:	aas    
  40ef62:	cmp    eax,DWORD PTR [esi+0x29]
  40ef65:	xor    al,0x98
  40ef67:	sub    DWORD PTR [ebp-0x29bcee3d],ecx
  40ef6d:	xor    BYTE PTR [ecx],0xb4
  40ef70:	ins    DWORD PTR es:[edi],dx
  40ef71:	popa   
  40ef72:	popa   
  40ef73:	in     eax,dx
  40ef74:	scas   al,BYTE PTR es:[edi]
  40ef75:	xchg   esp,eax
  40ef76:	adc    eax,DWORD PTR ds:[ebp-0x37]
  40ef7a:	fnstenv [edi]
  40ef7c:	cli    
  40ef7d:	and    DWORD PTR [esi-0x21],ebp
  40ef80:	sbb    eax,0x401d6ad3
  40ef85:	aaa    
  40ef86:	xor    al,bh
  40ef88:	mov    ds:0xc4791d59,al
  40ef8d:	fst    DWORD PTR [edx-0x3c]
  40ef90:	dec    ecx
  40ef91:	inc    ebx
  40ef92:	sbb    cl,cl
  40ef94:	add    ebp,ebx
  40ef96:	adc    BYTE PTR [esi+0x6],0x9d
  40ef9a:	inc    eax
  40ef9b:	mov    ds:0x4df80266,eax
  40efa0:	sahf   
  40efa1:	(bad)  
  40efa3:	lea    ecx,[ebx]
  40efa5:	add    al,0x7
  40efa7:	dec    edx
  40efa8:	jecxz  0x40ef41
  40efaa:	jg     0x40efa1
  40efac:	out    0x9e,al
  40efae:	lahf   
  40efaf:	bound  eax,QWORD PTR [edx]
  40efb1:	in     al,dx
  40efb2:	call   0x879f:0x2017a4d2
  40efb9:	dec    ebx
  40efba:	test   edx,esp
  40efbc:	sbb    BYTE PTR [ebx+0x8df93ce],ch
  40efc2:	test   BYTE PTR [ebx],bl
  40efc4:	add    eax,0xbaa2aa76
  40efc9:	xor    DWORD PTR ds:0x197436e4,ebp
  40efcf:	xor    BYTE PTR [esi+0x2caf6ad3],ch
  40efd5:	mov    dl,0x1c
  40efd7:	mov    edi,0x407e95af
  40efdc:	pushf  
  40efdd:	fwait
  40efde:	jl     0x40f01a
  40efe0:	in     al,dx
  40efe1:	ds adc al,0x60
  40efe4:	clc    
  40efe5:	lods   al,BYTE PTR ds:[esi]
  40efe6:	(bad)  
  40efe8:	fld    QWORD PTR [esi+ecx*4-0x14]
  40efec:	sub    al,0xf9
  40efee:	dec    esi
  40efef:	xchg   ecx,eax
  40eff0:	jae    0x40ef8e
  40eff2:	mov    ds:0xbe1018fa,eax
  40eff7:	imul   ebx,DWORD PTR [ecx],0xffffff9e
  40effa:	or     al,0x5b
  40effc:	mov    ch,0x6f
  40effe:	mov    eax,0xa6c437e
  40f003:	out    0xc6,al
  40f005:	mov    al,0x55
  40f007:	mov    bl,0x48
  40f009:	jae    0x40f077
  40f00b:	aam    0x59
  40f00d:	call   0xaf3b837e
  40f012:	js     0x40effd
  40f014:	jg     0x40f069
  40f016:	test   al,0xab
  40f018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f019:	imul   esp,DWORD PTR [edi-0x22],0x60
  40f01d:	mov    eax,0xaefec7b
  40f022:	jge    0x40efa5
  40f024:	jecxz  0x40f07e
  40f026:	dec    esp
  40f027:	xor    al,BYTE PTR [ebx-0x7d]
  40f02a:	outs   dx,DWORD PTR ds:[esi]
  40f02b:	lds    esi,FWORD PTR [esi+edx*2-0x1f]
  40f02f:	ret    
  40f030:	adc    eax,DWORD PTR [ebp+0x17]
  40f033:	adc    DWORD PTR [edi+0x1d],esi
  40f036:	jmp    0xaaa40389
  40f03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f03c:	mov    DWORD PTR [edi+0x3bca7a2],0xd75b0297
  40f046:	or     al,0x2c
  40f048:	enter  0xe5b0,0x1d
  40f04c:	add    DWORD PTR [ecx],edi
  40f04e:	add    ah,BYTE PTR [edx-0x17]
  40f051:	(bad)  
  40f052:	(bad)  
  40f053:	out    0xf7,eax
  40f055:	inc    edx
  40f056:	push   ebp
  40f057:	xchg   ebp,eax
  40f058:	mov    ah,0x61
  40f05a:	shl    BYTE PTR [ebp-0x1d53f81f],0xb4
  40f061:	sti    
  40f062:	sbb    eax,0x90f8af89
  40f067:	push   ebx
  40f068:	retf   0x2159
  40f06b:	fsub   st,st(6)
  40f06d:	jmp    0x40eff8
  40f06f:	xor    DWORD PTR [eax-0x32],edx
  40f072:	xor    ah,BYTE PTR es:[esi]
  40f075:	push   ds
  40f076:	xchg   esp,eax
  40f077:	push   edi
  40f078:	je     0x40f0dd
  40f07a:	jp     0x8e95ceb7
  40f080:	jo     0x40f0cc
  40f082:	add    dl,BYTE PTR [esi+0x28659778]
  40f088:	mov    ah,0x79
  40f08a:	out    dx,eax
  40f08b:	outs   dx,BYTE PTR ds:[esi]
  40f08c:	xchg   ebp,eax
  40f08d:	cli    
  40f08e:	or     BYTE PTR [edi],bh
  40f090:	mov    eax,ds:0x8cafe604
  40f095:	add    bl,BYTE PTR ds:0xe403dc2e
  40f09b:	and    al,0x76
  40f09d:	or     cl,BYTE PTR [edi+eiz*1+0x224ac818]
  40f0a4:	jno    0x40f10c
  40f0a6:	add    BYTE PTR ds:0x23fe5a98,dh
  40f0ac:	mov    ebp,0xc8c0f211
  40f0b1:	jg     0x40f09a
  40f0b3:	jnp    0x40f128
  40f0b5:	jp     0x40f03b
  40f0b7:	fwait
  40f0b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b9:	in     eax,0xdd
  40f0bb:	into   
  40f0bc:	mov    edi,ebx
  40f0be:	mov    ebp,0x9c54db7e
  40f0c3:	aam    0x65
  40f0c5:	fdiv   QWORD PTR [ebx-0x76]
  40f0c8:	push   ebx
  40f0c9:	or     DWORD PTR fs:[edx+0x33],edx
  40f0cd:	or     BYTE PTR ss:[ebx+0x15],ch
  40f0d1:	bound  esp,QWORD PTR [esi-0x5c]
  40f0d4:	or     BYTE PTR [esi-0xca04465],bl
  40f0da:	stos   DWORD PTR es:[edi],eax
  40f0db:	iret   
  40f0dc:	mov    WORD PTR [eax+ecx*4+0x52],?
  40f0e0:	call   0x2238:0xd47c945e
  40f0e7:	push   cs
  40f0e8:	clc    
  40f0e9:	mov    esp,0xec9abc41
  40f0ee:	clc    
  40f0ef:	test   esi,esi
  40f0f1:	xlat   BYTE PTR ds:[ebx]
  40f0f2:	pop    ebp
  40f0f3:	fidivr DWORD PTR [ecx]
  40f0f5:	aad    0x36
  40f0f7:	imul   edi,DWORD PTR [ebx-0x41],0xffffffdf
  40f0fb:	jl     0x40f0b1
  40f0fd:	fild   WORD PTR [ecx-0x53b69f5a]
  40f103:	scas   al,BYTE PTR es:[edi]
  40f104:	(bad)  
  40f105:	cmp    eax,0x943b967d
  40f10a:	mov    eax,ds:0x191f7c55
  40f10f:	adc    ebp,esi
  40f111:	(bad)  
  40f112:	mov    edx,0xcbb4d988
  40f117:	mov    ecx,0x228790ff
  40f11c:	cli    
  40f11d:	xor    ebx,DWORD PTR [edi+0x47cb7f04]
  40f123:	(bad)  
  40f124:	sub    al,0xf
  40f126:	xchg   esi,ebx
  40f128:	popf   
  40f129:	js     0x40f0d7
  40f12b:	jno    0x40f0c9
  40f12d:	(bad)  
  40f12e:	pop    esi
  40f12f:	mov    ebp,0x3f765ccb
  40f134:	sar    DWORD PTR [edx+ebx*2-0x721fcaa1],1
  40f13b:	das    
  40f13c:	xlat   BYTE PTR ds:[ebx]
  40f13d:	pop    ds
  40f13e:	mov    bl,0xe4
  40f140:	mov    ds:0x49412e4c,al
  40f145:	cwde   
  40f146:	push   0x6c
  40f148:	cmp    eax,0x5730ff14
  40f14d:	jne    0x40f16e
  40f14f:	push   edi
  40f150:	adc    eax,0xf149f5ac
  40f155:	loop   0x40f121
  40f157:	push   0x2b
  40f159:	ret    
  40f15a:	mov    ebp,DWORD PTR [edx]
  40f15c:	or     DWORD PTR [edi-0x1],ecx
  40f15f:	data16 stc 
  40f161:	mov    BYTE PTR [ebx-0x78d3d06],dl
  40f167:	mov    cl,0x6
  40f169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f16a:	lea    esp,ds:[eax+0x138838ac]
  40f171:	mov    ds:0x62032883,eax
  40f176:	xchg   esi,eax
  40f177:	xor    cl,ah
  40f179:	jge    0x40f154
  40f17b:	mov    ds:0x7ce8d01,al
  40f180:	mov    dh,0x9d
  40f182:	push   0x58
  40f184:	pop    ecx
  40f185:	sub    eax,0xe20d0ee7
  40f18a:	test   al,0x50
  40f18c:	cmp    BYTE PTR ds:0x928ee8e9,ch
  40f192:	ret    
  40f193:	xor    ebp,esp
  40f195:	push   ecx
  40f196:	and    al,0x69
  40f198:	sahf   
  40f199:	stos   DWORD PTR es:[edi],eax
  40f19a:	mov    eax,ds:0x7fedd06f
  40f19f:	sub    esp,esp
  40f1a1:	out    dx,eax
  40f1a2:	ror    ebx,cl
  40f1a4:	pextrw ebx,(bad),0xc5
  40f1a6:	cwde   
  40f1a7:	cmp    al,0xd3
  40f1a9:	xor    al,0x6d
  40f1ab:	push   eax
  40f1ac:	scas   al,BYTE PTR es:[edi]
  40f1ad:	cmc    
  40f1ae:	mov    eax,0xed3cf91e
  40f1b3:	test   BYTE PTR [ebp+0x6ae44e77],bh
  40f1b9:	or     eax,DWORD PTR [ebp-0x78]
  40f1bc:	inc    edx
  40f1bd:	ds push ebx
  40f1bf:	xchg   esi,eax
  40f1c0:	inc    ebx
  40f1c1:	test   al,0x8b
  40f1c3:	rol    BYTE PTR [eax],0xdb
  40f1c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1c7:	jb     0x40f1bf
  40f1c9:	mov    ah,0x66
  40f1cb:	mov    cl,0xf1
  40f1cd:	or     BYTE PTR [ebx-0x24],bh
  40f1d0:	lods   al,BYTE PTR ds:[esi]
  40f1d1:	lods   al,BYTE PTR ds:[esi]
  40f1d2:	mov    esp,0x7afc0ad5
  40f1d7:	or     bl,BYTE PTR [ebx*4+0x26804360]
  40f1de:	mov    ds:0x65084cb2,al
  40f1e3:	test   BYTE PTR [ebp*8+0x655bed1a],ch
  40f1ea:	adc    esi,DWORD PTR [esp+edi*8]
  40f1ed:	sbb    eax,0x6a543dba
  40f1f2:	pop    edx
  40f1f4:	xchg   esp,eax
  40f1f5:	(bad)  
  40f1f6:	lock jecxz 0x40f1de
  40f1f9:	jge    0x40f22e
  40f1fb:	jg     0x40f1ca
  40f1fd:	cs fcmovb st,st(5)
  40f200:	and    bl,BYTE PTR ds:0x661a54d4
  40f206:	cmp    edi,esp
  40f208:	test   eax,0xbfd1ab9
  40f20d:	xor    al,0xdc
  40f20f:	scas   al,BYTE PTR es:[edi]
  40f210:	dec    edi
  40f211:	not    BYTE PTR [edx-0x4d]
  40f214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f215:	inc    esi
  40f216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f217:	push   cs
  40f218:	cwde   
  40f219:	fcom   QWORD PTR [edx+ebp*1-0x62]
  40f21d:	push   edx
  40f21e:	stc    
  40f21f:	or     eax,0xc1ca9288
  40f224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f225:	mov    ch,cl
  40f227:	(bad)
  40f22a:	push   es
  40f22b:	test   eax,0x31ad9d92
  40f230:	lock adc BYTE PTR [edi],0xe5
  40f234:	loopne 0x40f1bb
  40f236:	into   
  40f237:	cmc    
  40f238:	retf   0x5e1b
  40f23b:	and    BYTE PTR [edx-0x4a],dh
  40f23e:	push   eax
  40f23f:	mov    dl,0xc8
  40f241:	out    0x4c,eax
  40f243:	push   0x44
  40f245:	int    0x8a
  40f247:	xchg   ebx,eax
  40f248:	cs jae 0x40f278
  40f24b:	jmp    0x6822c7bd
  40f250:	rcl    BYTE PTR [edi],1
  40f252:	adc    edx,eax
  40f254:	add    DWORD PTR [ebp+0x12a3a555],ebp
  40f25a:	mov    al,0x48
  40f25c:	inc    eax
  40f25d:	and    al,BYTE PTR ds:0x56cf969e
  40f263:	gs cmp eax,0x6fc4d145
  40f269:	jl     0x40f280
  40f26b:	test   ecx,esp
  40f26d:	pop    DWORD PTR [esp+ebp*2+0x7c5f66f6]
  40f274:	popa   
  40f275:	and    DWORD PTR [eax+ecx*4+0x59],edi
  40f279:	pop    edx
  40f27a:	out    0x96,eax
  40f27c:	add    DWORD PTR [esi-0x78],0x19
  40f280:	pop    esp
  40f281:	popa   
  40f282:	push   esp
  40f283:	outs   dx,BYTE PTR ds:[esi]
  40f284:	es (bad) 
  40f286:	push   ebx
  40f287:	imul   edx,DWORD PTR [ebx],0x394f5b68
  40f28d:	mov    al,0xbe
  40f28f:	out    dx,eax
  40f290:	bound  esi,QWORD PTR [edi-0x7]
  40f293:	mov    dl,0xe5
  40f295:	add    DWORD PTR [ecx-0x48],esi
  40f298:	das    
  40f299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29a:	jecxz  0x40f2fc
  40f29c:	icebp  
  40f29d:	(bad)  
  40f29e:	mov    ds:0xc80ecd28,eax
  40f2a3:	mov    dl,0x7c
  40f2a5:	adc    eax,0x9ba26f8c
  40f2aa:	add    al,0xf1
  40f2ac:	inc    eax
  40f2ad:	adc    ebp,eax
  40f2af:	daa    
  40f2b0:	mov    eax,0xbb9e60bf
  40f2b5:	aam    0x71
  40f2b7:	arpl   WORD PTR [eax+0x18],di
  40f2ba:	inc    edi
  40f2bb:	push   0xffffffb9
  40f2bd:	mov    BYTE PTR [ebx],al
  40f2bf:	mov    bh,0xac
  40f2c1:	je     0x40f247
  40f2c3:	cdq    
  40f2c4:	pop    ds
  40f2c5:	cwde   
  40f2c6:	loop   0x40f27b
  40f2c8:	dec    ebx
  40f2c9:	pop    es
  40f2ca:	out    dx,al
  40f2cb:	(bad)  
  40f2cc:	pop    esi
  40f2cd:	dec    ebx
  40f2ce:	not    DWORD PTR [eax+0x79]
  40f2d1:	mov    cl,0x37
  40f2d3:	xchg   edi,eax
  40f2d4:	mov    eax,0x246cb43a
  40f2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2da:	cmp    al,0x8a
  40f2dc:	xchg   ebp,eax
  40f2dd:	ror    BYTE PTR [esi],cl
  40f2df:	xchg   DWORD PTR [esi],esi
  40f2e1:	pusha  
  40f2e2:	call   0x9094f717
  40f2e7:	mov    bl,0x3
  40f2e9:	xrstor [eax]
  40f2ec:	sub    dh,BYTE PTR [bx+0x4adb]
  40f2f1:	cmp    DWORD PTR [ebx+0x56],eax
  40f2f4:	push   ds
  40f2f5:	or     DWORD PTR [edx],eax
  40f2f7:	stos   DWORD PTR es:[edi],eax
  40f2f8:	add    BYTE PTR [eax-0x5a],ch
  40f2fb:	jmp    0x9b7919a9
  40f300:	push   edi
  40f301:	and    DWORD PTR [edx],eax
  40f303:	out    0x59,al
  40f305:	std    
  40f306:	cmp    DWORD PTR [edx-0x70],ebx
  40f309:	daa    
  40f30a:	ins    DWORD PTR es:[edi],dx
  40f30b:	rcr    BYTE PTR [edi],1
  40f30d:	test   DWORD PTR [ecx+0x20e65b5a],ebp
  40f313:	cmp    BYTE PTR [ebp+0x17],0xc2
  40f317:	lods   al,BYTE PTR ds:[esi]
  40f318:	mov    ds:0xb69d2117,al
  40f31d:	adc    edx,esi
  40f31f:	cmp    eax,0x1232ca00
  40f324:	cdq    
  40f325:	test   al,0xc4
  40f327:	daa    
  40f328:	sub    eax,ecx
  40f32a:	nop
  40f32b:	sti    
  40f32c:	inc    esp
  40f32d:	cli    
  40f32e:	jbe    0x40f2d9
  40f330:	mov    ds:0x672ed65,al
  40f335:	cmp    edx,edx
  40f337:	jne    0x40f2e4
  40f339:	pop    edx
  40f33a:	iret   
  40f33b:	jg     0x40f305
  40f33d:	(bad)  
  40f33e:	aaa    
  40f33f:	cmp    DWORD PTR [ebp-0x44],edi
  40f342:	pop    esi
  40f343:	push   ecx
  40f344:	mov    eax,0x981c741d
  40f349:	xor    al,0xb
  40f34b:	outs   dx,BYTE PTR ds:[esi]
  40f34c:	jbe    0x40f325
  40f34e:	das    
  40f34f:	out    0x17,eax
  40f351:	pop    es
  40f352:	add    edi,DWORD PTR [ebx]
  40f354:	jb     0x40f371
  40f356:	and    BYTE PTR [ecx+eax*8+0x5cc78781],dh
  40f35d:	jne    0x40f3b0
  40f35f:	ss push ss
  40f361:	jl     0x40f33e
  40f363:	hlt    
  40f364:	shl    BYTE PTR [ecx],1
  40f366:	hlt    
  40f367:	and    DWORD PTR [ecx+ebp*8-0x1025aecc],esi
  40f36e:	iret   
  40f36f:	mov    ebx,0x3446bb07
  40f374:	sbb    al,0xe6
  40f376:	lods   al,BYTE PTR ds:[esi]
  40f377:	js     0x40f37a
  40f379:	dec    ebx
  40f37b:	pushf  
  40f37c:	push   es
  40f37d:	jg     0x40f306
  40f37f:	cdq    
  40f380:	mov    ecx,0xbd5e0ae2
  40f385:	jge    0x40f343
  40f387:	xchg   ecx,eax
  40f388:	mov    cl,0x3f
  40f38a:	cmc    
  40f38b:	in     al,dx
  40f38c:	adc    al,0x8d
  40f38e:	mov    ebp,0xf7f254f7
  40f393:	sbb    esp,DWORD PTR [ebx]
  40f395:	add    esp,0x19fc3b70
  40f39b:	jp     0x40f324
  40f39d:	sbb    DWORD PTR [edi-0x7299c63a],edx
  40f3a3:	cmp    DWORD PTR [esp+esi*4-0xb],edx
  40f3a7:	jne    0x40f3a2
  40f3a9:	dec    ecx
  40f3aa:	scas   al,BYTE PTR es:[edi]
  40f3ab:	arpl   WORD PTR [ebx+0x3e],cx
  40f3ae:	adc    al,dh
  40f3b0:	pusha  
  40f3b1:	inc    eax
  40f3b2:	fdivp  st(2),st
  40f3b4:	xchg   edi,eax
  40f3b5:	and    al,0xb1
  40f3b7:	push   ebx
  40f3b8:	push   ebx
  40f3b9:	ins    BYTE PTR es:[edi],dx
  40f3ba:	cli    
  40f3bb:	hlt    
  40f3bc:	xor    eax,0xe5c3ebc5
  40f3c1:	stos   DWORD PTR es:[edi],eax
  40f3c2:	push   edi
  40f3c3:	dec    ebx
  40f3c4:	adc    DWORD PTR [ecx-0x1d],0x92aa6d69
  40f3cb:	std    
  40f3cc:	pop    ds
  40f3cd:	repnz xor eax,0x4946bc11
  40f3d3:	ja     0x40f388
  40f3d5:	sti    
  40f3d6:	dec    edi
  40f3d7:	or     al,bh
  40f3d9:	inc    ecx
  40f3da:	and    eax,0x3fe86fd1
  40f3df:	jo     0x40f42f
  40f3e1:	fsubr  st(4),st
  40f3e3:	dec    ecx
  40f3e4:	stc    
  40f3e5:	scas   al,BYTE PTR es:[edi]
  40f3e6:	inc    edx
  40f3e7:	lahf   
  40f3e8:	jmp    0x40f3ed
  40f3ea:	call   0x6c2a9a4
  40f3ef:	pop    ebx
  40f3f0:	in     al,dx
  40f3f1:	xchg   DWORD PTR [edi],esi
  40f3f3:	jle    0x40f38b
  40f3f5:	inc    ebp
  40f3f6:	pop    ss
  40f3f7:	test   eax,0xb4ce174
  40f3fc:	sti    
  40f3fd:	repz jl 0x40f437
  40f400:	cmp    dh,BYTE PTR ds:0x9500138c
  40f406:	mov    ds:0x474f375e,al
  40f40b:	retf   0x6a0e
  40f40e:	lock jbe 0x40f44b
  40f411:	push   esi
  40f412:	push   ebp
  40f413:	pusha  
  40f414:	xchg   edi,eax
  40f415:	int    0x3a
  40f417:	pop    ebp
  40f418:	shl    BYTE PTR [edx],0x1b
  40f41b:	cmc    
  40f41c:	scas   al,BYTE PTR es:[edi]
  40f41d:	mov    ebx,0x9e6946fb
  40f422:	or     eax,0xefc814d5
  40f427:	jmp    0x97c6:0x32a38562
  40f42e:	mov    al,0xce
  40f430:	loope  0x40f45c
  40f432:	push   ebx
  40f433:	out    0x6b,al
  40f435:	repnz mov al,ds:0xd5f6de3b
  40f43b:	retf   0x97d3
  40f43e:	mul    DWORD PTR [esi-0x68d07c13]
  40f444:	add    dl,BYTE PTR [edi+edi*8-0x6b4fb362]
  40f44b:	sbb    DWORD PTR [edx-0x64f7240c],esp
  40f451:	sub    al,0xce
  40f453:	mov    esi,esp
  40f455:	mov    edi,0x537e78de
  40f45a:	(bad)  
  40f45b:	int3   
  40f45c:	sub    al,0xce
  40f45e:	lahf   
  40f45f:	fdivr  st,st(0)
  40f461:	mov    ds:0xda4782ae,eax
  40f466:	sbb    al,0xaf
  40f468:	push   ebp
  40f469:	mov    ds:0x800630d9,eax
  40f46e:	pop    ds
  40f46f:	in     eax,dx
  40f470:	jno    0x40f492
  40f472:	fild   WORD PTR [eax]
  40f474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f475:	iret   
  40f476:	sbb    eax,0xfcd20207
  40f47b:	adc    BYTE PTR [edi],ah
  40f47d:	pop    es
  40f47e:	fst    QWORD PTR [esi]
  40f480:	xor    edx,DWORD PTR [ecx]
  40f482:	femms  
  40f484:	lods   al,BYTE PTR ds:[esi]
  40f485:	call   0x8950:0x16671869
  40f48c:	adc    al,0xa
  40f48e:	jl     0x40f475
  40f490:	xchg   BYTE PTR [esi-0x14],ah
  40f493:	js     0x40f4ce
  40f495:	add    al,0x29
  40f497:	ror    BYTE PTR [edi+esi*2+0x21bf21b2],1
  40f49e:	test   eax,0x5c72fe34
  40f4a3:	lock sbb al,0x5f
  40f4a6:	jmp    0x40f50d
  40f4a8:	fwait
  40f4a9:	ret    
  40f4aa:	imul   eax,ebp,0x69
  40f4ad:	pop    es
  40f4ae:	pusha  
  40f4af:	dec    eax
  40f4b0:	inc    edx
  40f4b1:	sub    ebx,esp
  40f4b3:	in     eax,dx
  40f4b4:	mov    edx,esi
  40f4b6:	stos   DWORD PTR es:[edi],eax
  40f4b7:	mov    esi,0x2c558c0e
  40f4bc:	and    BYTE PTR [ecx],cl
  40f4be:	inc    edx
  40f4bf:	mov    ecx,0x7c7454fb
  40f4c4:	inc    esp
  40f4c5:	div    DWORD PTR [edi]
  40f4c7:	xchg   edx,eax
  40f4c8:	js     0x40f4b8
  40f4ca:	or     DWORD PTR [ebx-0x39],ecx
  40f4cd:	inc    edi
  40f4ce:	sbb    BYTE PTR [eax],dl
  40f4d0:	std    
  40f4d1:	mov    ch,0x47
  40f4d3:	and    al,0x58
  40f4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4d7:	push   ds
  40f4d8:	mov    edx,0x53ca456a
  40f4dd:	scas   al,BYTE PTR es:[edi]
  40f4de:	les    ecx,FWORD PTR [edx+0x17]
  40f4e1:	push   ebx
  40f4e2:	(bad)  
  40f4e4:	jge    0x40f4f7
  40f4e6:	sbb    BYTE PTR [edi+0x21cdccd4],ah
  40f4ec:	inc    edx
  40f4ed:	pop    esi
  40f4ee:	aas    
  40f4ef:	lahf   
  40f4f0:	rcl    DWORD PTR [ebx+0xf8fb3e3],cl
  40f4f6:	out    0x49,al
  40f4f8:	ror    DWORD PTR ds:0x89337bd5,1
  40f4fe:	not    ebx
  40f500:	in     eax,0x2b
  40f502:	cdq    
  40f503:	lahf   
  40f504:	xchg   ecx,eax
  40f505:	int    0xc0
  40f507:	fsubr  QWORD PTR [eax+ebx*1-0x76]
  40f50b:	ja     0x40f4ea
  40f50d:	jge    0x40f524
  40f50f:	imul   edi,ecx,0x75f880f6
  40f515:	ret    
  40f516:	xchg   BYTE PTR [eax+eiz*8-0x8fc568d],ah
  40f51d:	xlat   BYTE PTR ds:[ebx]
  40f51e:	aas    
  40f51f:	popa   
  40f520:	lock (bad) 
  40f522:	call   0xc4c5:0xa4483550
  40f529:	mov    ds:0xb3533514,eax
  40f52e:	jle    0x40f4d9
  40f530:	add    edi,ebp
  40f532:	pop    es
  40f533:	enter  0x9d06,0xf1
  40f537:	xchg   esp,eax
  40f538:	add    BYTE PTR [ecx-0x5af58b9b],0x43
  40f53f:	or     eax,0xef5be0da
  40f544:	dec    eax
  40f545:	sbb    eax,0xc551ebb1
  40f54a:	mov    al,0x5c
  40f54c:	std    
  40f54d:	adc    BYTE PTR [edi],0x6e
  40f550:	xor    ch,BYTE PTR [eax-0x37878136]
  40f556:	(bad)  
  40f557:	les    edi,FWORD PTR [eax-0x1875912e]
  40f55d:	inc    edx
  40f55e:	pop    ss
  40f55f:	adc    al,0x11
  40f561:	xchg   ebp,eax
  40f562:	pop    ebp
  40f563:	xchg   ebp,eax
  40f564:	mov    eax,0x982cc8b9
  40f569:	(bad)  
  40f56a:	leave  
  40f56b:	mov    esp,0x80cf56ba
  40f570:	sbb    DWORD PTR [esp+edi*2-0xab3abb9],edx
  40f577:	and    BYTE PTR [edi],al
  40f579:	adc    ch,BYTE PTR [edi-0x46]
  40f57c:	dec    ecx
  40f57d:	popa   
  40f57e:	dec    esi
  40f57f:	sbb    BYTE PTR [edi],0x28
  40f582:	mov    ah,0x47
  40f584:	repnz xchg esi,eax
  40f586:	mov    DWORD PTR [ebx+0x2],esp
  40f589:	adc    dh,dh
  40f58b:	cmp    eax,0x273dac72
  40f590:	repz add BYTE PTR [ecx+eiz*4+0x1d],0xa4
  40f596:	scas   eax,DWORD PTR es:[edi]
  40f597:	mov    dh,BYTE PTR [ebx+0x1efa88c0]
  40f59d:	stc    
  40f59e:	adc    edx,ebp
  40f5a0:	xchg   esi,eax
  40f5a1:	and    cl,BYTE PTR [eax+0x406a6dbe]
  40f5a7:	or     DWORD PTR [edi-0x2fe81404],0x792d5c7a
  40f5b1:	call   0x2647:0xce47106d
  40f5b8:	sub    BYTE PTR [eax-0x20872fdd],bl
  40f5be:	or     DWORD PTR [esp+esi*2+0x57a12476],edi
  40f5c5:	mov    edi,edi
  40f5c7:	mov    ebx,DWORD PTR [ebx]
  40f5c9:	fstp   DWORD PTR [eax+0x1e9b9088]
  40f5cf:	imul   edx,DWORD PTR [ecx+0x11ef54fb],0x9ebe797a
  40f5d9:	stos   BYTE PTR es:[edi],al
  40f5da:	inc    ebp
  40f5db:	mov    ds:0x2f5f3908,al
  40f5e0:	push   esi
  40f5e1:	mov    eax,ds:0x3783ca42
  40f5e6:	xor    edi,ecx
  40f5e8:	pop    ebp
  40f5e9:	or     BYTE PTR [eax],0x71
  40f5ec:	mov    DWORD PTR [ebx+0x5d],esp
  40f5ef:	(bad)  
  40f5f0:	sbb    al,BYTE PTR [esi+0x442064c0]
  40f5f6:	or     eax,0xdc28cd9c
  40f5fb:	stos   BYTE PTR es:[edi],al
  40f5fc:	sbb    BYTE PTR [ebp+0x7373d417],dl
  40f602:	xchg   BYTE PTR [edx+eax*2],dh
  40f605:	push   cs
  40f606:	shl    BYTE PTR [esi],1
  40f608:	loop   0x40f689
  40f60a:	(bad)  
  40f60b:	nop
  40f60c:	sbb    ebx,ebp
  40f60e:	cmc    
  40f60f:	mov    ah,0x4c
  40f611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f612:	jae    0x40f5bd
  40f614:	lods   al,BYTE PTR ds:[esi]
  40f615:	call   0xc34fe14f
  40f61a:	retf   0x8b33
  40f61d:	mov    edi,0x4c76b376
  40f622:	jns    0x40f69a
  40f624:	inc    eax
  40f625:	xchg   ebp,eax
  40f626:	(bad)
  40f629:	adc    edi,DWORD PTR [edx-0x1d]
  40f62c:	jmp    0x9e5e:0xb1f8be2d
  40f633:	mov    ebp,0x8375248e
  40f638:	mov    ebx,0x1524221b
  40f63d:	push   0xb5a8bd75
  40f642:	jnp    0x40f6a4
  40f644:	ins    BYTE PTR es:[edi],dx
  40f645:	xor    ecx,DWORD PTR [esi+0x38]
  40f648:	psubq  mm4,QWORD PTR [edi]
  40f64b:	(bad)  
  40f64c:	aam    0xae
  40f64e:	stc    
  40f64f:	pop    ecx
  40f650:	adc    al,0x32
  40f652:	call   0x8008:0x1ecde802
  40f659:	test   eax,0x435cc242
  40f65e:	dec    esi
  40f65f:	dec    ecx
  40f660:	pop    ecx
  40f661:	or     eax,0xd5878959
  40f666:	ins    BYTE PTR es:[edi],dx
  40f667:	(bad)  
  40f668:	push   esi
  40f669:	jmp    0xf86d55c0
  40f66e:	sbb    dl,bl
  40f670:	push   ss
  40f671:	lock mov ebx,0xd710f79c
  40f677:	sbb    al,0x55
  40f679:	adc    DWORD PTR [esi+esi*1+0x7ee37b77],edi
  40f680:	push   0x35
  40f682:	test   bh,cl
  40f684:	cmp    DWORD PTR [esi],esi
  40f686:	mov    ch,0x20
  40f688:	xchg   ecx,eax
  40f689:	sbb    DWORD PTR [ebx+0x66dcc8a4],0x1b
  40f690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f691:	test   eax,0x4d8e5c44
  40f696:	sub    ecx,DWORD PTR [eax+0x2a]
  40f699:	inc    ecx
  40f69a:	dec    eax
  40f69b:	push   ss
  40f69c:	fnstsw WORD PTR [ecx]
  40f69e:	pop    ecx
  40f69f:	adc    al,0xd
  40f6a1:	inc    esi
  40f6a2:	inc    ecx
  40f6a3:	inc    esi
  40f6a4:	or     al,0x24
  40f6a6:	xchg   esi,eax
  40f6a7:	sbb    ebp,DWORD PTR [ebx]
  40f6a9:	xchg   edx,eax
  40f6aa:	pusha  
  40f6ab:	pop    eax
  40f6ac:	mov    ebx,0xa7c2f15b
  40f6b1:	dec    esi
  40f6b2:	iret   
  40f6b3:	inc    ebx
  40f6b4:	cmc    
  40f6b5:	push   0x5854166
  40f6ba:	mov    WORD PTR [esp+ebx*4-0x43],cs
  40f6be:	dec    ebx
  40f6bf:	aad    0x72
  40f6c1:	rol    BYTE PTR [eax-0x68cf0d58],1
  40f6c7:	cmc    
  40f6c8:	adc    BYTE PTR [ebx+0x5],bl
  40f6cb:	sbb    dl,BYTE PTR [ebx+0x51758e71]
  40f6d1:	push   ecx
  40f6d2:	sub    bh,BYTE PTR [edi+0x2baeaf5c]
  40f6d8:	add    DWORD PTR [esi+eax*2],0xffffff83
  40f6dc:	add    al,0xd0
  40f6de:	fisubr DWORD PTR [edi+ebx*2-0x47]
  40f6e2:	jbe    0x40f6f2
  40f6e4:	xor    eax,0x1b2f29c8
  40f6e9:	adc    eax,0xdee27490
  40f6ee:	xchg   esi,eax
  40f6ef:	dec    edx
  40f6f0:	jmp    0xf04:0xb20c193e
  40f6f7:	mov    eax,0x759d520a
  40f6fc:	mov    bl,BYTE PTR [edx-0x54bd72af]
  40f702:	inc    ebp
  40f703:	xor    BYTE PTR [ecx+0x15],dl
  40f706:	add    DWORD PTR [edi-0x63],0xffffff9c
  40f70a:	mov    ah,0xe0
  40f70c:	xor    dl,BYTE PTR [esi+edx*2+0x11e3c509]
  40f713:	inc    ebx
  40f714:	imul   DWORD PTR [edi]
  40f716:	pop    esi
  40f717:	xor    eax,0x1cac82c0
  40f71c:	pop    ecx
  40f71d:	xchg   ebx,eax
  40f71e:	aad    0x67
  40f720:	inc    eax
  40f721:	pushw  es
  40f723:	fs mov esp,0x567fb479
  40f729:	dec    DWORD PTR [ebp-0xa]
  40f72c:	fst    QWORD PTR [edi]
  40f72e:	mov    bl,0xc
  40f730:	into   
  40f731:	ficomp WORD PTR [edx+0x57]
  40f734:	sbb    eax,0xc7ef45f0
  40f739:	xchg   ebp,eax
  40f73a:	pop    ds
  40f73b:	data16 (bad) 
  40f73d:	lea    edi,[esp+ebx*4]
  40f740:	inc    ecx
  40f741:	and    DWORD PTR [ecx-0x6c],esi
  40f744:	mov    dh,0xb6
  40f746:	pop    es
  40f747:	inc    ebx
  40f748:	lods   eax,DWORD PTR ds:[esi]
  40f749:	jl     0x40f728
  40f74b:	or     DWORD PTR [ecx],ebp
  40f74d:	and    BYTE PTR [eax+0xf],dl
  40f750:	call   0x50d3d758
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0xd0b0
  41000c:	stos   BYTE PTR es:[edi],al
  41000d:	outs   dx,DWORD PTR ds:[esi]
  41000e:	aas    
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0xfffffff8
  410017:	mov    esi,0xaab79478
  41001c:	jae    0x41001f
  41001e:	call   0xc3bd2c86
  410023:	inc    ebx
  410024:	xor    al,0x88
  410026:	sub    ch,BYTE PTR [ecx+0x38]
  410029:	outs   dx,BYTE PTR ds:[esi]
  41002a:	pop    edi
  41002b:	and    ch,BYTE PTR ds:0x490e970e
  410031:	inc    ecx
  410032:	jnp    0x41002b
  410034:	sbb    al,BYTE PTR fs:[edi+eax*1-0x7d]
  410039:	cwde   
  41003a:	repnz retf 
  41003c:	and    al,BYTE PTR [edx]
  41003e:	sahf   
  41003f:	cli    
  410040:	enter  0x1509,0xfe
  410044:	cmp    eax,DWORD PTR [edx]
  410046:	xchg   DWORD PTR [edx-0x71180dfb],ebp
  41004c:	in     al,0xb8
  41004e:	inc    ecx
  41004f:	or     eax,0x173e7bba
  410054:	xchg   edi,eax
  410055:	std    
  410056:	and    cl,0x46
  410059:	mov    ds:0x5d788e2c,al
  41005e:	xchg   ebx,eax
  41005f:	sahf   
  410060:	stos   DWORD PTR es:[edi],eax
  410061:	inc    esi
  410062:	nop
  410063:	aas    
  410064:	or     eax,0x2d6f6726
  410069:	sti    
  41006a:	sbb    dh,BYTE PTR [ecx+0x6]
  41006d:	sub    ah,BYTE PTR [ebx+esi*4+0x28]
  410071:	or     eax,0x65a67203
  410076:	jns    0x410057
  410078:	(bad)  
  410079:	jg     0x410091
  41007b:	popf   
  41007c:	aas    
  41007d:	test   eax,0x9b9c2a68
  410082:	add    edi,DWORD PTR [ebp+0x312bef68]
  410088:	rcl    BYTE PTR [eax-0x2b],1
  41008b:	and    al,0xb4
  41008d:	shl    BYTE PTR [edi],0x9d
  410090:	cld    
  410091:	ja     0x410060
  410093:	cmc    
  410094:	ret    
  410095:	ins    DWORD PTR es:[edi],dx
  410096:	outs   dx,BYTE PTR ds:[esi]
  410097:	dec    eax
  410098:	dec    edi
  410099:	mov    dl,0x3e
  41009b:	jge    0x410031
  41009d:	push   esp
  41009e:	mov    edi,esi
  4100a0:	xchg   ebp,eax
  4100a1:	mov    ah,0xe6
  4100a3:	mov    ds:0xa4e5bb41,eax
  4100a8:	into   
  4100a9:	inc    esi
  4100aa:	mov    bh,0x30
  4100ac:	es inc ebx
  4100ae:	fistp  QWORD PTR [edx+0x1f]
  4100b1:	inc    BYTE PTR [eax]
  4100b3:	inc    ebp
  4100b4:	ja     0x4100ab
  4100b6:	jo     0x410040
  4100b8:	adc    eax,0x8262aa99
  4100bd:	push   edi
  4100be:	mov    ds:0x3d478a8e,eax
  4100c3:	dec    esp
  4100c4:	sub    al,0xda
  4100c6:	jecxz  0x4100d0
  4100c8:	add    BYTE PTR [ebx-0x5f1e214f],al
  4100ce:	fmul   QWORD PTR [ecx]
  4100d0:	sahf   
  4100d1:	addr16 inc ebp
  4100d3:	addr16 and esi,ecx
  4100d6:	ins    BYTE PTR es:[edi],dx
  4100d7:	pushf  
  4100d8:	pop    ds
  4100d9:	mov    ebp,DWORD PTR [ebx+edi*8]
  4100dc:	mov    WORD PTR [edi+0x3c],fs
  4100df:	push   ds
  4100e0:	pushf  
  4100e1:	jg     0x4100b6
  4100e3:	in     eax,0x8c
  4100e5:	stc    
  4100e6:	push   esi
  4100e7:	sbb    BYTE PTR fs:[eax+0x1a],ch
  4100eb:	ror    DWORD PTR [edi+0x34],cl
  4100ee:	push   ebp
  4100ef:	push   ss
  4100f0:	test   al,0x2
  4100f2:	and    al,0x8a
  4100f4:	daa    
  4100f5:	push   ss
  4100f6:	inc    ecx
  4100f7:	ret    
  4100f8:	gs out 0xb0,eax
  4100fb:	pop    edi
  4100fc:	fsub   QWORD PTR [ecx]
  4100fe:	adc    al,0x1a
  410100:	xchg   esi,eax
  410101:	pop    ecx
  410102:	dec    eax
  410103:	or     ebp,DWORD PTR [ecx+0x5129cd5]
  410109:	das    
  41010a:	sub    al,BYTE PTR [edx]
  41010c:	mov    al,ds:0xdececfbf
  410111:	xchg   DWORD PTR ds:0x1e0cba91,ebp
  410117:	loope  0x410123
  410119:	sbb    BYTE PTR [eax],ch
  41011b:	enter  0x6000,0xff
  41011f:	mov    edx,0x44ceebb
  410124:	sbb    DWORD PTR [eax+0x15],esp
  410127:	pop    esp
  410128:	inc    esi
  410129:	xchg   esp,eax
  41012a:	ins    BYTE PTR es:[edi],dx
  41012b:	and    DWORD PTR [esi+0x71],edx
  41012e:	pusha  
  41012f:	xchg   edi,eax
  410130:	cmp    al,0xdc
  410132:	xchg   ebp,eax
  410133:	mov    ds:0xc931f881,al
  410138:	(bad)  
  410139:	mov    eax,0x9be1de3c
  41013e:	stc    
  41013f:	scas   al,BYTE PTR es:[edi]
  410140:	dec    ebp
  410141:	xchg   ebp,eax
  410142:	scas   eax,DWORD PTR es:[edi]
  410143:	inc    ebp
  410144:	out    dx,al
  410145:	loop   0x410155
  410147:	or     eax,esi
  410149:	push   esp
  41014a:	into   
  41014b:	push   edi
  41014c:	sbb    edi,ecx
  41014e:	mov    ch,0x59
  410150:	dec    edi
  410151:	add    eax,ebx
  410153:	mov    cl,0xb3
  410155:	or     eax,0xfe87edc1
  41015a:	lahf   
  41015b:	ffreep st(1)
  41015d:	loop   0x410191
  41015f:	retf   
  410160:	pop    ebx
  410161:	int3   
  410162:	pop    ebp
  410163:	fdiv   QWORD PTR ds:0xbbc253e0
  410169:	pop    edi
  41016a:	stc    
  41016b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41016c:	test   BYTE PTR [ebx+0x30],dh
  41016f:	cmp    esp,DWORD PTR [esi]
  410171:	pushf  
  410172:	hlt    
  410173:	and    al,0x6b
  410175:	xchg   ebp,eax
  410176:	lock sub al,0xf5
  410179:	jge    0x4101be
  41017b:	(bad)  
  41017c:	fstp   TBYTE PTR [ebp+0x227b892b]
  410182:	fist   WORD PTR [ebp-0x5d82dc15]
  410188:	popf   
  410189:	xchg   edx,eax
  41018a:	sbb    eax,0x6cd3b888
  41018f:	dec    eax
  410190:	mov    esi,0xd265692
  410195:	repnz and BYTE PTR [esi-0x22cbecba],ch
  41019c:	push   esp
  41019d:	imul   ebx,DWORD PTR [esi-0x4fcd19f2],0xffffff95
  4101a4:	outs   dx,BYTE PTR ds:[esi]
  4101a5:	cld    
  4101a6:	mov    ecx,0xbe2aa0cc
  4101ab:	jno    0x4101c0
  4101ad:	xchg   ebp,eax
  4101ae:	aas    
  4101af:	sar    BYTE PTR [edi+0x59],1
  4101b2:	add    dh,ch
  4101b4:	cmp    al,0x9d
  4101b6:	ret    
  4101b7:	ja     0x41016b
  4101b9:	fild   WORD PTR [ebp+0x61]
  4101bc:	fimul  WORD PTR [esi]
  4101be:	pop    ds
  4101bf:	cmp    ah,BYTE PTR [eax]
  4101c1:	ficomp WORD PTR [edx-0x485160d7]
  4101c7:	jg     0x410200
  4101c9:	jo     0x4101d1
  4101cb:	pop    ebx
  4101cc:	xlat   BYTE PTR ds:[ebx]
  4101cd:	dec    ebp
  4101ce:	mov    ecx,0x68fb18aa
  4101d3:	jo     0x410249
  4101d5:	cmp    ecx,DWORD PTR [eax]
  4101d7:	add    dl,BYTE PTR [edx+ecx*8+0x7039671e]
  4101de:	mov    cl,al
  4101e0:	sub    dl,cl
  4101e2:	jb     0x41020e
  4101e4:	or     eax,0x56c0c3f0
  4101e9:	dec    esp
  4101ea:	loop   0x410210
  4101ec:	iret   
  4101ed:	or     al,0x31
  4101ef:	jmp    0x19e7:0x99c6aa77
  4101f6:	loope  0x410223
  4101f8:	cmp    ch,0xc6
  4101fb:	inc    edx
  4101fc:	call   0xc6d9:0x46ec8151
  410203:	fcomp  st(5)
  410205:	jne    0x410233
  410207:	es stos DWORD PTR es:[edi],eax
  410209:	cmp    eax,0x8e39329a
  41020e:	or     dh,BYTE PTR [esi+edx*2-0x7b]
  410212:	inc    edx
  410213:	idiv   BYTE PTR [ecx+0x198b103f]
  410219:	test   BYTE PTR [edx+0x1e8810a2],dl
  41021f:	js     0x4101b2
  410221:	sub    BYTE PTR [ebp+0x58],0xf3
  410225:	jns    0x4102a4
  410227:	xchg   esp,eax
  410228:	or     al,0x96
  41022a:	dec    ecx
  41022b:	push   ebp
  41022c:	or     ecx,esp
  41022e:	dec    eax
  41022f:	hlt    
  410230:	ret    
  410231:	hlt    
  410232:	loopne 0x4101b4
  410234:	inc    esi
  410235:	or     ebx,DWORD PTR [ebp-0x24]
  410238:	mov    esp,DWORD PTR [edi+0x5d]
  41023b:	mov    ebx,0x53acb093
  410240:	jg     0x4102bf
  410242:	mov    al,0x1f
  410244:	lods   al,BYTE PTR ds:[esi]
  410245:	gs stc 
  410247:	xchg   DWORD PTR [ebp+0x49],esp
  41024a:	jmp    0x4101fa
  41024c:	out    dx,al
  41024d:	mov    bl,0xd6
  41024f:	add    al,0xf8
  410251:	lahf   
  410252:	call   0xfcbe6a34
  410257:	adc    al,0xc5
  410259:	inc    ecx
  41025a:	test   DWORD PTR [ebp-0x4a],eax
  41025d:	cld    
  41025e:	jns    0x41025d
  410260:	test   BYTE PTR [ecx+0x19131d7b],ch
  410266:	jg     0x41026c
  410268:	push   0x3c
  41026a:	cmc    
  41026b:	je     0x410283
  41026d:	ret    0x13b7
  410270:	call   0x1acc:0xa9078206
  410277:	sbb    ch,BYTE PTR [ecx+0x74]
  41027a:	rcl    dh,1
  41027c:	(bad)  
  41027d:	xor    ebx,DWORD PTR [edx-0x53]
  410280:	sti    
  410281:	push   esi
  410282:	ds hlt 
  410284:	sbb    BYTE PTR [ebp+edi*4-0x498005c3],dl
  41028b:	inc    esp
  41028c:	sub    al,0xd8
  41028e:	bound  esp,QWORD PTR [ebp+0x1a]
  410291:	test   ah,cl
  410293:	jae    0x41025a
  410295:	repz mov ecx,0x7167b3e6
  41029b:	int3   
  41029c:	cli    
  41029d:	out    dx,eax
  41029e:	inc    edx
  41029f:	sub    eax,0x36ed8b0f
  4102a4:	adc    al,0xf6
  4102a6:	mov    esi,edx
  4102a8:	jnp    0x4102c4
  4102aa:	push   ecx
  4102ab:	in     al,dx
  4102ac:	push   0x29
  4102ae:	stc    
  4102af:	xchg   ebp,eax
  4102b0:	mov    dh,bh
  4102b2:	adc    eax,0x2d8f6956
  4102b7:	mov    ?,WORD PTR [eax-0x1efa177d]
  4102bd:	cwde   
  4102be:	cmp    DWORD PTR [edx-0x33],0x34b35949
  4102c5:	dec    eax
  4102c6:	pop    esp
  4102c7:	lock mov ah,0x56
  4102ca:	xor    bh,al
  4102cc:	mov    esi,0xcf868320
  4102d1:	(bad)  
  4102d2:	js     0x410312
  4102d4:	out    0xaf,al
  4102d6:	fsubr  DWORD PTR [ebx+0xc42303a]
  4102dc:	in     al,dx
  4102dd:	mov    WORD PTR [edi-0x44],?
  4102e0:	neg    bl
  4102e2:	xchg   edi,eax
  4102e3:	push   esi
  4102e4:	add    al,0x9b
  4102e6:	pop    ds
  4102e7:	dec    edi
  4102e8:	ret    
  4102e9:	xchg   esp,eax
  4102ea:	(bad)  
  4102eb:	lods   eax,DWORD PTR ds:[esi]
  4102ec:	(bad)  
  4102ee:	jae    0x4102ca
  4102f0:	lea    ebx,[eax+0x255a582b]
  4102f6:	into   
  4102f7:	lock fxch st(7)
  4102fa:	sub    dh,BYTE PTR [ebp-0x77a50dca]
  410300:	rcr    bl,1
  410302:	fld    DWORD PTR [esi-0x64739a4a]
  410308:	bound  edi,QWORD PTR [edx+0x10]
  41030b:	idiv   DWORD PTR [edx]
  41030d:	inc    esi
  41030e:	cmp    ch,BYTE PTR [eax+0x22]
  410311:	add    dl,BYTE PTR [edi-0x4a981dbf]
  410317:	retf   0xea30
  41031a:	lods   eax,DWORD PTR ds:[esi]
  41031b:	jbe    0x410365
  41031d:	mov    ah,0xc4
  41031f:	adc    al,0x43
  410321:	int3   
  410322:	pop    ebx
  410323:	sbb    ah,ah
  410325:	sar    DWORD PTR [ecx],1
  410327:	inc    esp
  410328:	dec    esp
  410329:	xor    al,0x93
  41032b:	fwait
  41032c:	ds sub eax,0xa83a1675
  410332:	clc    
  410333:	jl     0x410313
  410335:	jno    0x41035b
  410337:	sbb    dl,BYTE PTR [ebp+0x17d41982]
  41033d:	pop    edx
  41033e:	sub    BYTE PTR [esi-0x61],ah
  410341:	xchg   edx,eax
  410342:	and    al,0x65
  410344:	es aas 
  410346:	rcl    BYTE PTR [ebx+0x5a0d9536],cl
  41034c:	sub    DWORD PTR [ebx],ecx
  41034e:	sub    DWORD PTR [eax-0x79],esp
  410351:	in     eax,0x6a
  410353:	mov    al,BYTE PTR [eax+0x7a]
  410356:	inc    esi
  410357:	in     al,0xe5
  410359:	mov    esp,ecx
  41035b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41035c:	cmp    al,0xa5
  41035e:	retf   
  41035f:	shl    esp,cl
  410361:	push   esp
  410362:	and    eax,0x28084366
  410367:	shr    DWORD PTR [esi+eax*8],0x16
  41036b:	es dec ebx
  41036d:	jae    0x4103a3
  41036f:	lahf   
  410370:	sub    edx,ecx
  410372:	(bad)  
  410373:	ins    DWORD PTR es:[edi],dx
  410374:	push   cs
  410375:	std    
  410376:	fist   DWORD PTR [esi+0x7968f5fc]
  41037c:	mov    eax,0x7d37f40b
  410381:	loopne 0x410352
  410383:	cmp    cl,BYTE PTR [edx+edx*4-0x51a700bc]
  41038a:	push   esi
  41038b:	cmp    esp,esi
  41038d:	mov    bh,0x19
  41038f:	push   edi
  410390:	jae    0x4103f5
  410392:	loop   0x41032d
  410394:	jmp    0xa7b777b
  410399:	sub    ecx,DWORD PTR [ebx]
  41039b:	xchg   edx,eax
  41039c:	dec    ebx
  41039d:	or     eax,0x105c0d96
  4103a2:	aaa    
  4103a3:	daa    
  4103a4:	fistp  WORD PTR [ecx+ebx*1+0x10101663]
  4103ab:	cs or  dl,bl
  4103ae:	cs xchg ecx,ebx
  4103b1:	and    DWORD PTR [esi],0x7568f34b
  4103b7:	fnstsw WORD PTR [ecx+esi*8+0x1a]
  4103bb:	cwde   
  4103bc:	sbb    eax,0xe953587f
  4103c1:	jmp    0x7b5a:0x552c7d2d
  4103c8:	pop    ebp
  4103c9:	mov    eax,0x39422e3
  4103ce:	int    0xe5
  4103d0:	cmp    bl,al
  4103d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d3:	lods   eax,DWORD PTR ds:[esi]
  4103d4:	mov    ds:0x6d01b265,al
  4103d9:	jmp    0x79ca:0x62d01b82
  4103e0:	cmp    DWORD PTR [eax+edx*4+0x40899610],0x5b69777b
  4103eb:	push   cs
  4103ec:	mov    bl,0xc7
  4103ee:	sub    DWORD PTR [esi-0x7e],eax
  4103f1:	jge    0x4103f1
  4103f3:	sub    DWORD PTR [ecx+0x4c],esp
  4103f6:	inc    esp
  4103f7:	int3   
  4103f8:	std    
  4103f9:	sbb    BYTE PTR [ebx+0x30],bh
  4103fc:	stc    
  4103fd:	out    0xca,eax
  4103ff:	jmp    FWORD PTR [ecx+0x40337fab]
  410405:	(bad)  
  410406:	jns    0x4103ac
  410408:	xor    bl,BYTE PTR [ecx-0x7529e4b4]
  41040e:	outs   dx,BYTE PTR ds:[esi]
  41040f:	push   es
  410410:	add    DWORD PTR fs:0xd653d67f,ecx
  410417:	adc    BYTE PTR [edi+0x60f5ebd2],dl
  41041d:	sub    ecx,DWORD PTR [ebp-0x6efd9edf]
  410423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410424:	stos   BYTE PTR es:[edi],al
  410425:	cmp    ebx,eax
  410427:	in     al,0x9c
  410429:	pop    esp
  41042a:	imul   esp,DWORD PTR [eax-0x911d562],0x75ae51ee
  410434:	cdq    
  410435:	arpl   si,sp
  410437:	jp     0x4103f9
  410439:	xor    al,0x14
  41043b:	icebp  
  41043c:	mov    bh,bh
  41043e:	xor    DWORD PTR [ecx],eax
  410440:	cmc    
  410441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410442:	push   es
  410443:	int    0x24
  410445:	retf   
  410446:	mov    al,0x77
  410448:	cmp    esp,DWORD PTR cs:[ecx+0x71475cc0]
  41044f:	jecxz  0x410423
  410451:	loopne 0x4104a9
  410453:	pop    edi
  410454:	scas   al,BYTE PTR es:[edi]
  410455:	inc    ecx
  410456:	pop    ds
  410457:	dec    ebp
  410458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410459:	dec    esp
  41045a:	test   DWORD PTR [edi-0x50136f4a],0x1e00d9e7
  410464:	inc    eax
  410465:	inc    ebp
  410466:	jmp    0x410429
  410468:	jle    0x4104e8
  41046a:	sbb    BYTE PTR [esi+0x234706b5],al
  410470:	(bad)  
  410471:	xlat   BYTE PTR ds:[ebx]
  410472:	loope  0x410417
  410474:	rol    DWORD PTR [edi-0x7923ff29],0x4b
  41047b:	adc    ch,bl
  41047d:	add    edx,eax
  41047f:	fwait
  410480:	xchg   esp,eax
  410481:	bound  ecx,QWORD PTR [edx+0x6afdfaab]
  410487:	retf   0x8772
  41048a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41048b:	ins    DWORD PTR es:[edi],dx
  41048c:	push   ebp
  41048d:	and    dl,BYTE PTR [ebp-0x33c779c4]
  410493:	lods   eax,DWORD PTR ds:[esi]
  410494:	(bad)  
  410495:	xchg   edi,eax
  410496:	(bad)  
  410497:	push   ss
  410498:	pushf  
  410499:	pop    es
  41049a:	push   cs
  41049b:	pop    es
  41049c:	or     BYTE PTR [edx-0x11],0xc6
  4104a0:	aaa    
  4104a1:	cmp    ch,ch
  4104a3:	xor    BYTE PTR [edi+ebp*1],ch
  4104a6:	push   cs
  4104a7:	and    cl,BYTE PTR [eax-0x1f]
  4104aa:	mov    ecx,esp
  4104ac:	lods   eax,DWORD PTR ds:[esi]
  4104ad:	xchg   ebx,eax
  4104ae:	sub    al,0xb2
  4104b0:	sbb    eax,0x7f6c0070
  4104b5:	stos   BYTE PTR es:[edi],al
  4104b6:	mov    bl,cl
  4104b8:	lods   al,BYTE PTR ds:[esi]
  4104b9:	icebp  
  4104ba:	mov    ch,0xb5
  4104bc:	and    al,0xbd
  4104be:	in     eax,0xb5
  4104c0:	adc    bl,cl
  4104c2:	(bad)  
  4104c3:	repz int3 
  4104c5:	mov    eax,0x3721d091
  4104ca:	mov    ds:0xa837bdc9,al
  4104cf:	clc    
  4104d0:	lahf   
  4104d1:	lods   eax,DWORD PTR ds:[esi]
  4104d2:	lahf   
  4104d3:	out    dx,eax
  4104d4:	sub    ebx,esp
  4104d6:	cmp    dl,bh
  4104d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104d9:	ss je  0x4104db
  4104dc:	stos   BYTE PTR es:[edi],al
  4104dd:	repnz adc bh,cl
  4104e0:	retf   
  4104e1:	mov    ecx,0x84019d06
  4104e6:	pop    eax
  4104e7:	xchg   eax,edi
  4104e9:	jnp    0x4104f0
  4104eb:	cmp    eax,0x64112cf8
  4104f0:	pusha  
  4104f1:	test   eax,0x30187d22
  4104f6:	clc    
  4104f7:	mov    ebp,es
  4104f9:	mov    eax,0x480de0bb
  4104fe:	outs   dx,DWORD PTR ds:[esi]
  4104ff:	or     DWORD PTR [ecx],0xc7fcb9ac
  410505:	push   ds
  410506:	dec    eax
  410507:	add    bh,BYTE PTR [edx+edx*4+0x6ab3a032]
  41050e:	dec    ecx
  41050f:	inc    eax
  410510:	push   esp
  410511:	dec    ebx
  410512:	(bad)  
  410513:	mov    ds:0xbcdc1894,al
  410518:	lods   eax,DWORD PTR ds:[esi]
  410519:	mov    eax,ds:0xc6e36ac3
  41051e:	dec    eax
  41051f:	mov    BYTE PTR [edi+0x6c],0x2b
  410523:	inc    ecx
  410524:	adc    DWORD PTR [eax],edi
  410526:	jb     0x410534
  410528:	inc    ebx
  410529:	cmp    eax,0x573e538a
  41052e:	pop    ds
  41052f:	fimul  WORD PTR [ebp-0x58a0ef92]
  410535:	inc    esi
  410536:	and    dh,BYTE PTR [edx-0x5]
  410539:	fild   DWORD PTR [ecx]
  41053b:	cmp    al,0x76
  41053d:	call   0x185e:0xf7544093
  410544:	push   ebx
  410545:	cmp    BYTE PTR [edx],ah
  410547:	mov    cl,0x3b
  410549:	mov    ds:0xb3ead4d1,al
  41054e:	push   cs
  41054f:	cmp    BYTE PTR [ebx-0x5a7d77c2],0xbd
  410556:	inc    edx
  410557:	mov    ds:0xfa4dea0e,eax
  41055c:	mov    ah,0xad
  41055e:	lods   eax,DWORD PTR ds:[esi]
  41055f:	dec    esi
  410560:	mov    edx,DWORD PTR [eax]
  410562:	les    ecx,FWORD PTR [ecx+0x6f]
  410565:	sti    
  410566:	div    DWORD PTR [ebx+0x7d]
  410569:	mov    ds:0xc7f9acb2,eax
  41056e:	out    dx,al
  41056f:	jle    0x41057a
  410571:	dec    edi
  410572:	fidivr WORD PTR ds:0x3bb3cab4
  410578:	pop    ss
  410579:	scas   eax,DWORD PTR es:[edi]
  41057a:	scas   eax,DWORD PTR es:[edi]
  41057b:	sbb    BYTE PTR [eax+0xb30cfcd],bl
  410581:	push   ecx
  410582:	jno    0x410548
  410584:	and    eax,0x2bceeee
  410589:	test   al,0x39
  41058b:	mov    ch,0xc4
  41058d:	pop    edx
  41058e:	scas   al,BYTE PTR es:[edi]
  41058f:	out    dx,eax
  410590:	xchg   esp,eax
  410591:	adc    eax,0x2f6637ff
  410596:	jp     0x4105a8
  410598:	xor    BYTE PTR [ebp+0x2f],bl
  41059b:	popa   
  41059c:	dec    ebp
  41059d:	aas    
  41059e:	and    eax,DWORD PTR ds:0x4759b6ad
  4105a4:	iret   
  4105a5:	mov    dh,0xa4
  4105a7:	jmp    0x41052e
  4105a9:	xchg   DWORD PTR [ecx-0x18],edi
  4105ac:	fsub   st(1),st
  4105ae:	add    eax,0xf76dea72
  4105b3:	jmp    0x6c2219fa
  4105b8:	or     eax,0xf3eb1c6a
  4105bd:	push   0x12
  4105bf:	div    eax
  4105c1:	ja     0x4105ad
  4105c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105c4:	and    eax,0x480b80d8
  4105c9:	loop   0x4105a4
  4105cb:	lds    esp,FWORD PTR [edi]
  4105cd:	jmp    0xc05b:0x1fba70f7
  4105d4:	ins    BYTE PTR es:[edi],dx
  4105d5:	inc    edi
  4105d6:	in     eax,0x43
  4105d8:	jne    0x410602
  4105da:	sbb    DWORD PTR [ecx],edx
  4105dc:	or     BYTE PTR ss:[eax],ch
  4105df:	jge    0x4105fb
  4105e1:	xchg   ecx,ebp
  4105e3:	fidiv  DWORD PTR fs:[ebx-0x4a012eb7]
  4105ea:	and    ax,0x400d
  4105ee:	sub    DWORD PTR [ebx],edx
  4105f0:	push   esp
  4105f1:	xchg   ebx,eax
  4105f2:	and    DWORD PTR [edi+edi*4+0x70651e4a],esp
  4105f9:	bound  edi,QWORD PTR [edi-0x6fff8366]
  4105ff:	mov    WORD PTR [esi-0x5c],ss
  410602:	sub    DWORD PTR [esi+ecx*4-0x6f56eb39],ebp
  410609:	jmp    0x8e03:0x74642336
  410610:	out    0xbb,al
  410612:	mov    eax,0x24223185
  410617:	xchg   edx,eax
  410618:	mov    edx,0x21d11b48
  41061d:	dec    ebx
  41061e:	je     0x4105aa
  410620:	push   edi
  410621:	retf   
  410622:	add    bl,al
  410624:	rcl    DWORD PTR [edx+0x52],0xf7
  410628:	leave  
  410629:	xor    DWORD PTR [esi+eax*4],eax
  41062c:	jg     0x4105f7
  41062e:	daa    
  41062f:	in     eax,dx
  410630:	adc    BYTE PTR [eax+0x42],cl
  410633:	addr16 daa 
  410635:	repz jp 0x4105e4
  410638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410639:	lods   eax,DWORD PTR ds:[si]
  41063b:	cmp    DWORD PTR [ebp+edi*1-0x685467aa],eax
  410642:	add    DWORD PTR ds:0x8c616543,eax
  410648:	jp     0x4105d8
  41064a:	aas    
  41064b:	adc    al,0x67
  41064d:	fwait
  41064e:	into   
  41064f:	cwde   
  410650:	mov    WORD PTR [ebx-0x51],ds
  410653:	les    ebp,FWORD PTR [eax-0x44889c44]
  410659:	les    edi,FWORD PTR [edi-0x75]
  41065c:	in     eax,dx
  41065d:	cli    
  41065e:	fs pop ebx
  410660:	pop    edx
  410661:	mov    ds:0xb52216ea,al
  410666:	lock sbb eax,0xb85826a4
  41066c:	bnd jno 0x410678
  41066f:	mov    ebp,0x4fcbb41a
  410674:	and    al,0xe
  410676:	loope  0x41068c
  410678:	mov    ds:0x551bbfcc,al
  41067d:	pushf  
  41067e:	jno    0x4106dc
  410680:	mov    esp,0x1dcd320f
  410685:	dec    edx
  410686:	lock xchg DWORD PTR ds:0x4eb98204,eax
  41068d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41068e:	and    BYTE PTR [ecx],0x16
  410691:	mov    dh,0xf2
  410693:	sub    ebp,esi
  410695:	jmp    0x410700
  410697:	mov    cl,0x65
  410699:	pop    ecx
  41069a:	ror    DWORD PTR [esp+ebp*4+0x6ac734e],1
  4106a1:	(bad)
  4106a4:	out    dx,al
  4106a5:	(bad)  
  4106a6:	pusha  
  4106a7:	dec    edx
  4106a8:	inc    DWORD PTR [edi-0x3f]
  4106ab:	pusha  
  4106ac:	push   ds
  4106ad:	fadd   DWORD PTR [ebx-0x49]
  4106b0:	xor    ah,BYTE PTR [eax]
  4106b2:	fist   DWORD PTR [edx+0x0]
  4106b5:	and    al,0xa3
  4106b7:	sub    eax,DWORD PTR [edi]
  4106b9:	popf   
  4106ba:	out    0x87,eax
  4106bc:	and    DWORD PTR [edx+0x34859d2b],edx
  4106c2:	pop    es
  4106c3:	cld    
  4106c4:	or     edi,edi
  4106c6:	jne    0x4106a9
  4106c8:	adc    eax,0xd01c5af7
  4106cd:	daa    
  4106ce:	popa   
  4106cf:	push   edx
  4106d0:	and    esi,esi
  4106d2:	or     al,0xdd
  4106d4:	add    eax,0x13c2af52
  4106d9:	ror    BYTE PTR [eax],cl
  4106db:	inc    edx
  4106dc:	ds fucom st(5)
  4106df:	push   es
  4106e0:	fs test ax,0x7da5
  4106e5:	xchg   ebx,eax
  4106e6:	int    0x8b
  4106e8:	mov    dl,BYTE PTR ds:0xa93781f0
  4106ee:	xor    DWORD PTR [eax+0x29],esi
  4106f1:	and    ebp,ebp
  4106f3:	xor    ebx,DWORD PTR [esi+0x71]
  4106f6:	test   al,0xb0
  4106f8:	scas   al,BYTE PTR es:[edi]
  4106f9:	cmp    BYTE PTR [edi],bh
  4106fb:	mov    ebx,0x700548d6
  410700:	cmp    ah,BYTE PTR [ecx-0x6]
  410703:	repz test al,0x18
  410706:	jmp    0x2b6f3143
  41070b:	rol    ch,cl
  41070d:	das    
  41070e:	icebp  
  41070f:	ins    BYTE PTR es:[edi],dx
  410710:	inc    ebx
  410711:	xor    al,0x97
  410713:	adc    BYTE PTR [esp+ebp*4-0x3902208d],ah
  41071a:	pop    esi
  41071b:	nop
  41071c:	in     eax,0x78
  41071e:	jb     0x410720
  410720:	nop
  410721:	jmp    0x244f:0x59af8098
  410728:	cld    
  410729:	aaa    
  41072a:	lods   al,BYTE PTR ds:[esi]
  41072b:	cmp    esp,DWORD PTR [edi]
  41072d:	stos   DWORD PTR es:[edi],eax
  41072e:	pop    es
  41072f:	xor    eax,DWORD PTR [esi]
  410731:	mov    DWORD PTR [ecx],edx
  410733:	dec    ebx
  410734:	push   ecx
  410735:	pop    es
  410736:	and    bh,al
  410738:	xchg   ebp,eax
  410739:	adc    bh,BYTE PTR [esi+0x318ed394]
  41073f:	aam    0xd3
  410741:	jge    0x4106c5
  410743:	adc    esi,DWORD PTR [ecx+eiz*8+0x72c96aaf]
  41074a:	inc    edx
  41074b:	and    bh,ah
  41074d:	out    0xfc,eax
  41074f:	xchg   edx,eax
  410750:	in     eax,0x9
  410752:	jbe    0x4106e3
  410754:	fstp   TBYTE PTR [edx-0x55]
  410757:	out    dx,al
  410758:	js     0x410790
  41075a:	mov    esp,0xbf040d26
  41075f:	xor    BYTE PTR [ecx-0x4ede54b],al
  410765:	jo     0x410776
  410767:	imul   esp,DWORD PTR [ebx+0x68],0xffffff9c
  41076b:	cmp    eax,0xa75f24ac
  410770:	dec    eax
  410771:	shr    BYTE PTR [ebx-0x41],cl
  410774:	mov    cl,ch
  410776:	mov    ds,WORD PTR [esi+esi*4+0x43]
  41077a:	dec    ecx
  41077b:	mov    dl,0xfb
  41077d:	pop    esi
  41077e:	push   es
  41077f:	outs   dx,BYTE PTR ds:[esi]
  410780:	cmp    DWORD PTR [eax-0x1a],0xc0136773
  410787:	daa    
  410788:	or     eax,0xde21f2d5
  41078d:	push   0xffffffa1
  41078f:	(bad)  
  410790:	lea    esp,[edi+0x298cccbc]
  410796:	pop    ds
  410797:	push   esi
  410798:	mov    dh,BYTE PTR [ecx]
  41079a:	pop    es
  41079b:	add    DWORD PTR ds:0x84efb531,edx
  4107a1:	aam    0x6c
  4107a3:	cdq    
  4107a4:	data16 or ch,BYTE PTR [edi+edx*8]
  4107a8:	dec    esi
  4107a9:	nop
  4107aa:	aaa    
  4107ab:	add    DWORD PTR [edx+eiz*8-0x4a6b0b5],eax
  4107b2:	pop    es
  4107b3:	int    0xc7
  4107b5:	les    ecx,FWORD PTR [eax+edx*1-0x27]
  4107b9:	ja     0x410783
  4107bb:	lock outs dx,DWORD PTR ds:[esi]
  4107bd:	jae    0x410810
  4107bf:	push   ebp
  4107c0:	sub    cl,dl
  4107c2:	mov    cl,0xb
  4107c4:	outs   dx,DWORD PTR ds:[esi]
  4107c5:	pushf  
  4107c6:	cmp    eax,0xddfc28c2
  4107cb:	sbb    ecx,esi
  4107cd:	cld    
  4107ce:	popa   
  4107cf:	mov    edx,0xfeeb449b
  4107d4:	mov    edx,0x39f815a5
  4107d9:	imul   ebx,DWORD PTR [ebx-0xc0b38a3],0x2e4bf6b5
  4107e3:	mov    DWORD PTR [ebx+0x1d],edi
  4107e6:	push   cs
  4107e7:	pusha  
  4107e8:	mov    ecx,0xe6932851
  4107ed:	ds cli 
  4107ef:	test   DWORD PTR [ebp-0x4d],esp
  4107f2:	mov    esi,0xd4f45616
  4107f7:	or     ah,BYTE PTR [edi-0x753a2a7a]
  4107fd:	mov    ss,WORD PTR [ebp+edx*4+0x6e]
  410801:	outs   dx,DWORD PTR ds:[esi]
  410802:	(bad)  
  410803:	frstor [edx+0x1a0731bc]
  410809:	mov    ecx,0x13813086
  41080e:	xchg   ebx,eax
  41080f:	je     0x4107fd
  410811:	and    dl,BYTE PTR [ebx]
  410813:	jmp    0x115a:0xd624306a
  41081a:	or     esp,DWORD PTR [esi+0x5c]
  41081d:	popf   
  41081e:	pusha  
  41081f:	xor    ah,ch
  410821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410822:	mov    dl,0x3f
  410824:	loope  0x41084f
  410826:	jmp    0x410889
  410828:	and    bl,BYTE PTR [ebp-0x9]
  41082b:	gs pop ecx
  41082d:	jne    0x410895
  41082f:	xchg   esi,eax
  410830:	pusha  
  410831:	mov    esp,0x5d26083f
  410836:	mov    ecx,0x56698123
  41083b:	push   esp
  41083c:	cli    
  41083d:	or     cl,cl
  41083f:	jne    0x410877
  410841:	out    dx,al
  410842:	fwait
  410843:	daa    
  410844:	js     0x4108a0
  410846:	jmp    0x12efca85
  41084b:	pop    ecx
  41084c:	pusha  
  41084d:	cmp    ecx,DWORD PTR [eax]
  41084f:	retf   0xde3d
  410852:	sti    
  410853:	out    dx,eax
  410854:	or     ecx,ecx
  410856:	cdq    
  410857:	scas   al,BYTE PTR es:[edi]
  410858:	inc    eax
  410859:	inc    ebp
  41085a:	inc    esp
  41085b:	stos   BYTE PTR es:[edi],al
  41085c:	sub    al,0x4e
  41085e:	xchg   edx,edi
  410860:	inc    ebx
  410861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410862:	es fwait
  410864:	outs   dx,DWORD PTR ds:[esi]
  410865:	inc    edi
  410866:	fwait
  410867:	pop    ds
  410868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410869:	lea    edi,[ecx+0x3a]
  41086c:	mov    bh,0x17
  41086e:	push   0x48
  410870:	fs dec esp
  410872:	imul   edi,DWORD PTR [ebx],0x9097833d
  410878:	xchg   edx,eax
  410879:	pop    ebx
  41087a:	ret    
  41087b:	imul   BYTE PTR [ebx+eiz*1-0x1dc2ba35]
  410882:	push   esp
  410883:	jp     0x41083a
  410885:	push   ecx
  410886:	popa   
  410887:	imul   DWORD PTR [ebx+0x69]
  41088a:	or     ecx,DWORD PTR [eax+0x16a99064]
  410890:	push   0x84856ad
  410895:	lahf   
  410896:	ins    DWORD PTR es:[edi],dx
  410897:	push   es
  410898:	daa    
  410899:	(bad)  
  41089a:	dec    esp
  41089b:	imul   edi,DWORD PTR [esi-0x75],0xfffffff5
  41089f:	pop    ss
  4108a0:	xor    DWORD PTR [eax+0x6e],ebp
  4108a3:	std    
  4108a4:	imul   ebx,DWORD PTR [edx-0x6dc99d6d],0x9
  4108ab:	fisttp QWORD PTR [ebp+0x3d7af9bc]
  4108b1:	dec    eax
  4108b2:	repz gs retf 
  4108b5:	jecxz  0x410895
  4108b7:	dec    esi
  4108b8:	stc    
  4108b9:	cmp    al,BYTE PTR [ecx+0x60fa41f7]
  4108bf:	lock xchg edi,eax
  4108c1:	mov    cl,0x5d
  4108c3:	jge    0x4108ed
  4108c5:	ins    BYTE PTR es:[edi],dx
  4108c6:	mov    ecx,0x8b078e42
  4108cb:	repnz div DWORD PTR [ebx]
  4108ce:	out    0x9a,eax
  4108d0:	ret    0xe44d
  4108d3:	mov    al,ds:0x47aa9243
  4108d8:	xor    ch,BYTE PTR [esp+ebp*4+0x329dc6ed]
  4108df:	aam    0xf1
  4108e1:	jmp    0x4108d6
  4108e3:	mov    BYTE PTR [eax],bh
  4108e5:	in     eax,dx
  4108e6:	pop    ss
  4108e7:	mov    esi,0xcf954a1f
  4108ec:	mov    ecx,0x2e25105b
  4108f1:	ja     0x41092b
  4108f3:	mov    ebp,0xc26d9993
  4108f8:	js     0x410901
  4108fa:	imul   esi,DWORD PTR [edi],0x259da51e
  410900:	dec    ecx
  410901:	jge    0x410955
  410903:	shr    DWORD PTR [ecx-0x21],0xac
  410907:	pop    ds
  410908:	stos   BYTE PTR es:[edi],al
  410909:	mov    WORD PTR [edx],ds
  41090b:	push   esi
  41090c:	sub    al,0xa3
  41090e:	aaa    
  41090f:	ret    
  410910:	dec    BYTE PTR [ebx]
  410912:	xchg   ebp,eax
  410913:	xchg   BYTE PTR [eax-0x7a],dl
  410916:	xchg   esp,eax
  410917:	scas   eax,DWORD PTR es:[edi]
  410918:	inc    esp
  410919:	dec    ebx
  41091a:	mov    DWORD PTR [edx],esi
  41091c:	add    ebp,ebp
  41091e:	test   DWORD PTR ds:[edi+0x77],0x18f82fea
  410926:	ror    DWORD PTR [edi+esi*4+0x631cf02a],cl
  41092d:	mov    bh,0xf5
  41092f:	cli    
  410930:	jmp    FWORD PTR [esi-0x6c]
  410933:	rcl    DWORD PTR [ebp-0x23664c82],0x9b
  41093a:	dec    esp
  41093b:	out    0xad,eax
  41093d:	push   es
  41093e:	push   esp
  41093f:	adc    ebx,ebx
  410941:	test   eax,0xc8b12e0b
  410946:	push   eax
  410947:	mov    ecx,0x883cc232
  41094c:	inc    esi
  41094d:	inc    ebp
  41094e:	mov    ah,0xa4
  410950:	sbb    edx,DWORD PTR [ecx+0xe]
  410953:	test   ch,bl
  410955:	mov    esi,0x5173fba6
  41095a:	(bad)
  41095e:	mov    ds:0x6f06be71,al
  410963:	ret    0xdb56
  410966:	jg     0x41095d
  410968:	popf   
  410969:	arpl   WORD PTR [esi],sp
  41096b:	jmp    0x410972
  41096d:	repz in eax,dx
  41096f:	ja     0x410911
  410971:	(bad)
  410974:	pushf  
  410975:	cmp    bl,ah
  410977:	test   al,0xf8
  410979:	dec    edi
  41097a:	test   DWORD PTR [eax-0x48628662],ecx
  410980:	shl    BYTE PTR [ecx],1
  410982:	outs   dx,DWORD PTR ds:[esi]
  410983:	xchg   ebx,eax
  410984:	fsub   DWORD PTR [edi]
  410986:	inc    esi
  410987:	(bad)
  41098a:	cld    
  41098b:	mov    esi,edx
  41098d:	lahf   
  41098e:	cmp    eax,0xa0456964
  410993:	aam    0x7d
  410995:	sbb    eax,0x8eb0f727
  41099a:	shr    DWORD PTR [edx+0x4d],cl
  41099d:	sbb    eax,0xd611948d
  4109a2:	adc    ebp,DWORD PTR [ecx+0x40]
  4109a5:	mov    bl,0xa8
  4109a7:	in     eax,0x3e
  4109a9:	or     al,0x6a
  4109ab:	mov    edx,DWORD PTR [edx-0x38]
  4109ae:	jne    0x4109e7
  4109b0:	es (bad) 
  4109b2:	stc    
  4109b3:	fucomip st,st(3)
  4109b5:	and    cl,BYTE PTR [edi+ecx*1]
  4109b8:	ret    
  4109b9:	call   0xa651:0x2e0afb0
  4109c0:	sar    DWORD PTR [ebp+ebp*1+0x2c4abdbc],0x1c
  4109c8:	arpl   WORD PTR [eax+ebx*8-0x6ed87b59],bx
  4109cf:	mov    dl,ch
  4109d1:	data16 xor BYTE PTR [ebp+0x40],0xb
  4109d6:	mov    ecx,0x55941052
  4109db:	lds    edi,FWORD PTR [esi+0x5b]
  4109de:	out    dx,al
  4109df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109e0:	xchg   esi,eax
  4109e1:	xchg   ebx,eax
  4109e2:	mov    cl,0x53
  4109e4:	addr16 aam 0xb0
  4109e7:	mov    bh,0xc8
  4109e9:	stc    
  4109ea:	fisub  WORD PTR [edx+esi*1]
  4109ed:	pop    ds
  4109ee:	pop    eax
  4109ef:	mov    ecx,0xd1997fe6
  4109f4:	ins    BYTE PTR es:[edi],dx
  4109f5:	dec    edi
  4109f6:	test   eax,0xf38febd4
  4109fb:	xchg   ecx,eax
  4109fc:	sbb    al,BYTE PTR [ebp+0x7c]
  4109ff:	xor    ch,dl
  410a01:	fisubr WORD PTR [edx+ebp*4+0x71206677]
  410a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a09:	js     0x410a01
  410a0b:	inc    edi
  410a0c:	jae    0x4109e8
  410a0e:	sub    BYTE PTR [esi+esi*1],cl
  410a11:	loop   0x410a1a
  410a13:	push   es
  410a14:	imul   edi,DWORD PTR [edi],0xbe4f1c62
  410a1a:	xchg   edi,eax
  410a1b:	repz addr16 call 0x22dd0498
  410a22:	pop    ds
  410a23:	mov    edx,0x1cb60193
  410a28:	loop   0x410a72
  410a2a:	xchg   esp,eax
  410a2b:	test   al,0xf8
  410a2d:	les    edi,FWORD PTR [edx]
  410a2f:	and    esi,DWORD PTR [ecx-0xc]
  410a32:	aam    0xe5
  410a34:	cmp    BYTE PTR [esi],al
  410a36:	fcmovnbe st,st(2)
  410a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a39:	fmul   st,st(4)
  410a3b:	dec    eax
  410a3c:	xchg   ecx,eax
  410a3d:	add    edx,DWORD PTR [eax+0x18]
  410a40:	cld    
  410a41:	sub    esp,DWORD PTR [ebx-0x22]
  410a44:	jecxz  0x410a1c
  410a46:	sbb    ebx,esp
  410a48:	inc    ecx
  410a49:	or     BYTE PTR [eax-0x29af3d57],0x4a
  410a50:	jle    0x410a9d
  410a52:	dec    eax
  410a53:	pop    ebx
  410a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a56:	and    BYTE PTR [ecx],bh
  410a58:	icebp  
  410a59:	jl     0x410ac0
  410a5b:	shl    DWORD PTR [edx-0x37],1
  410a5e:	bnd jp 0x410a94
  410a61:	rcl    DWORD PTR [edi],0xe8
  410a64:	jno    0x410ad6
  410a66:	push   ecx
  410a67:	test   DWORD PTR [ecx-0x38],0x7850f68c
  410a6e:	fs es mov edi,0x314ff9dd
  410a75:	js     0x410a63
  410a77:	das    
  410a78:	xor    cl,BYTE PTR [ebx-0x354b113]
  410a7e:	ret    
  410a7f:	xor    ch,BYTE PTR [ecx]
  410a81:	rcr    BYTE PTR [edi],1
  410a83:	xor    ecx,esp
  410a85:	pop    ebp
  410a86:	jmp    0x410a0a
  410a88:	in     al,dx
  410a89:	mov    esp,edx
  410a8b:	sub    BYTE PTR [edi-0x70],dl
  410a8e:	mov    edx,0xaee036bb
  410a93:	push   edi
  410a94:	cmp    eax,0x1ac98c8d
  410a99:	mov    al,0xcf
  410a9b:	rol    esp,1
  410a9d:	adc    al,0x25
  410a9f:	scas   al,BYTE PTR es:[edi]
  410aa0:	arpl   WORD PTR [eax+ecx*4],dx
  410aa3:	sahf   
  410aa4:	scas   eax,DWORD PTR es:[edi]
  410aa5:	(bad)  
  410aa6:	xor    eax,0x145c4858
  410aab:	loopne 0x410a43
  410aad:	sub    esp,edx
  410aaf:	shl    DWORD PTR [ecx],0x2c
  410ab2:	mov    ecx,0x68db9260
  410ab7:	shl    BYTE PTR [ebx-0x4c64c94b],cl
  410abd:	mov    bh,0xc3
  410abf:	inc    edi
  410ac0:	stos   DWORD PTR es:[edi],eax
  410ac1:	stos   DWORD PTR es:[edi],eax
  410ac2:	pusha  
  410ac3:	mov    edx,0x53d3b9a1
  410ac8:	jo     0x410b16
  410aca:	sub    esi,DWORD PTR [eax+0x616b8d5a]
  410ad0:	aaa    
  410ad1:	out    0x22,al
  410ad3:	pop    edx
  410ad4:	dec    esi
  410ad5:	pop    ds
  410ad6:	retf   0xce24
  410ad9:	xor    al,0x9
  410adb:	adc    al,0x18
  410add:	inc    edx
  410ade:	push   0x991e233
  410ae3:	push   ecx
  410ae4:	add    BYTE PTR [ebp-0xf],cl
  410ae7:	or     BYTE PTR [ebx+0x5cd2cb99],cl
  410aed:	mov    DWORD PTR [ecx+0x65],eax
  410af0:	ss jo  0x410b2d
  410af3:	add    al,0x5c
  410af5:	mov    ch,0xc
  410af7:	inc    ebx
  410af8:	jmp    0xb0b7b2c0
  410afd:	and    eax,0xa7036ba6
  410b02:	std    
  410b03:	leave  
  410b04:	int3   
  410b05:	jae    0x410aa8
  410b07:	mov    eax,0xd23c058b
  410b0c:	inc    edx
  410b0d:	cdq    
  410b0e:	adc    bh,dh
  410b10:	xchg   edi,eax
  410b11:	stos   BYTE PTR es:[edi],al
  410b12:	fisub  WORD PTR [ebp-0x5e644e4b]
  410b18:	fisubr WORD PTR ds:[edi+0x58235525]
  410b1f:	leave  
  410b20:	sub    DWORD PTR [ebx-0x1c],esp
  410b23:	mov    ah,0x15
  410b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b26:	add    eax,0x9435e6d2
  410b2b:	xor    al,0xe
  410b2d:	gs ror eax,cl
  410b30:	jmp    0x8f8e:0x1b1635e2
  410b37:	mov    dh,0xa6
  410b39:	leave  
  410b3a:	stos   DWORD PTR es:[edi],eax
  410b3b:	retf   
  410b3c:	and    eax,0xeb0a267f
  410b41:	xchg   BYTE PTR [edx],dh
  410b43:	dec    eax
  410b44:	adc    cl,BYTE PTR ss:[ebp+0x9993f54]
  410b4b:	ins    DWORD PTR es:[edi],dx
  410b4c:	les    ebx,FWORD PTR [edx]
  410b4e:	(bad)  
  410b50:	mov    DWORD PTR [ecx],0xd049ae7
  410b56:	jnp    0x410b60
  410b58:	jp     0x410af0
  410b5a:	jne    0x410b34
  410b5c:	repz pop edx
  410b5e:	xor    ax,0xb2d1
  410b62:	and    eax,0x1e711597
  410b67:	mov    ecx,0xf464e73d
  410b6c:	ret    
  410b6d:	aas    
  410b6e:	adc    ch,ah
  410b70:	(bad)  
  410b71:	clc    
  410b72:	fnsave [ecx-0xd]
  410b75:	js     0x410b52
  410b77:	inc    esp
  410b78:	mov    BYTE PTR [ebx],bh
  410b7a:	sub    dl,BYTE PTR [edi-0x6933f2a5]
  410b80:	sahf   
  410b81:	fild   DWORD PTR [edi-0x79]
  410b84:	dec    ebp
  410b85:	sub    bl,BYTE PTR [eax]
  410b87:	add    edi,esp
  410b89:	movq   QWORD PTR [ebx+eiz*4],mm2
  410b8d:	aas    
  410b8e:	not    DWORD PTR [ebp+0x204c8477]
  410b94:	push   ebx
  410b95:	xor    al,0xf7
  410b97:	leave  
  410b98:	retf   
  410b99:	cli    
  410b9a:	sbb    DWORD PTR [esi+0x52200693],ebx
  410ba0:	push   ds
  410ba1:	cmp    BYTE PTR [edx-0x54],ch
  410ba4:	call   0x4729:0xd0402a62
  410bab:	clc    
  410bac:	sub    edx,0x3
  410baf:	mov    dh,0xc7
  410bb1:	pop    ebp
  410bb2:	mov    ebp,0xeae909ee
  410bb7:	mov    dl,0x2d
  410bb9:	outs   dx,BYTE PTR ds:[esi]
  410bba:	pop    edi
  410bbb:	outs   dx,BYTE PTR ds:[esi]
  410bbc:	and    BYTE PTR ds:0x70a85c83,al
  410bc2:	test   eax,0x4c190f0f
  410bc7:	fisub  DWORD PTR [ebx-0x7d14ad1]
  410bcd:	mov    edx,0x4db5fbca
  410bd2:	shl    BYTE PTR [edi+ebx*4+0x2cd64d24],0xac
  410bda:	sbb    dh,ah
  410bdc:	cmp    al,BYTE PTR [edx]
  410bde:	fdivr  QWORD PTR [esi]
  410be0:	mov    ecx,0xe0b74da4
  410be5:	sbb    BYTE PTR [eax],0xb8
  410be8:	popa   
  410be9:	xor    ah,BYTE PTR [eax-0x76]
  410bec:	mov    eax,0xf5e4eef4
  410bf1:	arpl   WORD PTR es:[edi+0x4ace286b],bx
  410bf8:	je     0x410c0d
  410bfa:	in     eax,dx
  410bfb:	mov    edx,0x6cf1e147
  410c00:	(bad)
  410c03:	dec    edi
  410c04:	mov    cl,0x56
  410c06:	push   ds
  410c07:	sahf   
  410c08:	sub    ecx,esp
  410c0a:	mov    bh,0xa6
  410c0c:	loop   0x410c08
  410c0e:	xchg   ebp,eax
  410c0f:	mov    dh,0x81
  410c11:	popf   
  410c12:	xor    esp,0xac57e156
  410c18:	sub    eax,0x1b1112e9
  410c1d:	jbe    0x410c7d
  410c1f:	mov    dh,0x5c
  410c21:	xchg   ebp,eax
  410c22:	sub    esi,ebp
  410c24:	mov    eax,ds:0x24ea016c
  410c29:	xor    BYTE PTR [esi],cl
  410c2b:	aaa    
  410c2c:	stc    
  410c2d:	xchg   ebp,eax
  410c2e:	nop
  410c2f:	shr    BYTE PTR [edx+ebp*2-0x1761345b],1
  410c36:	je     0x410c9b
  410c38:	or     edx,DWORD PTR [edi-0x4d5a501f]
  410c3e:	mov    esi,?
  410c40:	mov    bl,0x31
  410c42:	dec    esp
  410c43:	mov    bh,0x41
  410c45:	jp     0x410c50
  410c47:	ret    
  410c48:	(bad)  
  410c49:	repnz div edi
  410c4c:	test   eax,0xd16dc23d
  410c51:	ja     0x410c6f
  410c53:	mov    esi,0x60d1ed3b
  410c58:	iret   
  410c59:	pop    edx
  410c5a:	push   edi
  410c5b:	mov    eax,ds:0x820dfe
  410c60:	sub    DWORD PTR [ebx-0x2f],ebp
  410c63:	jo     0x410cdb
  410c65:	add    al,0xe8
  410c67:	daa    
  410c68:	add    DWORD PTR [ecx],eax
  410c6a:	in     eax,0x36
  410c6c:	ficom  DWORD PTR [esp+ecx*4+0x12f67861]
  410c73:	jg     0x410c9d
  410c75:	jl     0x410cee
  410c77:	adc    BYTE PTR [ecx+0x10f48342],cl
  410c7d:	pop    ds
  410c7e:	jnp    0x410c7a
  410c80:	arpl   WORD PTR [ebx+0x18],bp
  410c83:	jmp    0xd956b7fe
  410c88:	out    dx,eax
  410c89:	scas   al,BYTE PTR es:[edi]
  410c8a:	inc    ebx
  410c8b:	mov    ch,0xfb
  410c8d:	daa    
  410c8e:	pop    ebp
  410c8f:	cwde   
  410c90:	jae    0x410c84
  410c92:	cmp    BYTE PTR [edx+ecx*2+0x328cdd6b],ch
  410c99:	ret    0xed22
  410c9c:	inc    ecx
  410c9d:	nop
  410c9e:	jp     0x410c71
  410ca0:	(bad)  
  410ca1:	int    0x57
  410ca3:	das    
  410ca4:	ror    DWORD PTR [edi],1
  410ca6:	jmp    0x410ca8
  410ca8:	scas   eax,DWORD PTR es:[edi]
  410ca9:	xor    eax,0xe0ea2a1
  410cae:	in     al,dx
  410caf:	cs xchg ebp,edx
  410cb2:	pushf  
  410cb3:	sub    eax,0x9af122e6
  410cb8:	test   DWORD PTR [edi-0x3a553fc8],esp
  410cbe:	sub    BYTE PTR [ebp+0x2],bh
  410cc1:	enter  0xa981,0xe2
  410cc5:	xor    esi,esi
  410cc7:	mov    esi,0x6e256429
  410ccc:	test   DWORD PTR [eax+ebx*4-0x76],edx
  410cd0:	mov    edx,DWORD PTR [ebp-0x1038141d]
  410cd6:	dec    esi
  410cd7:	jnp    0x410d0e
  410cd9:	imul   esp,DWORD PTR [esi+0x2546b48a],0x88130a03
  410ce3:	xor    al,0xca
  410ce5:	sahf   
  410ce6:	sbb    al,0x74
  410ce8:	mov    dh,0xb1
  410cea:	pop    eax
  410ceb:	aas    
  410cec:	lahf   
  410ced:	inc    dx
  410cef:	pusha  
  410cf0:	arpl   WORD PTR [edx-0x32253b3],di
  410cf6:	jo     0x410d1f
  410cf8:	shl    al,cl
  410cfa:	mov    edi,0x1a563de6
  410cff:	sbb    BYTE PTR [edx+eax*8-0x5],dl
  410d03:	mov    esi,0x566036af
  410d08:	test   eax,0xc1615edb
  410d0d:	daa    
  410d0e:	mov    al,0xbc
  410d10:	into   
  410d11:	mov    ch,0xef
  410d13:	fsin   
  410d15:	icebp  
  410d16:	mov    ah,0xe2
  410d18:	cmp    DWORD PTR [edi],ebp
  410d1a:	push   ds
  410d1b:	fcom   QWORD PTR [ebx+ebx*4]
  410d1e:	push   esp
  410d1f:	(bad)  [esi]
  410d21:	outs   dx,DWORD PTR ds:[esi]
  410d22:	mov    cl,0x9f
  410d24:	and    DWORD PTR [ebp+eiz*1-0x6e],ebp
  410d28:	test   al,0x79
  410d2a:	repnz add esi,esp
  410d2d:	mov    al,ds:0xe07e4166
  410d32:	fwait
  410d33:	sub    al,0x3d
  410d35:	sar    DWORD PTR ds:0x7ea743ee,0xd2
  410d3c:	lds    esp,FWORD PTR [ebp+0x54183acd]
  410d42:	jmp    0x410d85
  410d44:	das    
  410d45:	add    BYTE PTR [edi-0x28],bl
  410d48:	jnp    0x410d09
  410d4a:	rol    BYTE PTR [ebx+0x2d],0x42
  410d4e:	adc    edx,ecx
  410d50:	int3   
  410d51:	and    DWORD PTR [edx-0x23b7445],edi
  410d57:	imul   ebp,ebx,0x46
  410d5a:	jnp    0x410cf3
  410d5c:	ja     0x410d97
  410d5e:	or     BYTE PTR [esi-0x2],al
  410d61:	mov    ebp,0x8fcaca05
  410d66:	and    DWORD PTR [edx-0x50],eax
  410d69:	call   0xc474:0xea207dff
  410d70:	dec    edi
  410d71:	mov    ds:0xc5d0b946,al
  410d76:	lea    edx,[esi+0x24]
  410d79:	ss pop edi
  410d7b:	dec    edi
  410d7c:	adc    ebp,ecx
  410d7e:	and    BYTE PTR ds:0x1b35b0d0,dl
  410d84:	dec    ecx
  410d85:	call   0xef0b:0xbc3cdd36
  410d8c:	jns    0x410d5b
  410d8e:	mov    WORD PTR [edi+0x53b856a9],ss
  410d94:	xchg   edx,eax
  410d95:	jmp    0x8b8f:0x1dbf2a05
  410d9c:	stos   BYTE PTR es:[edi],al
  410d9d:	sub    al,0xe
  410d9f:	mov    ?,WORD PTR [ebp+0x6d0ee03e]
  410da5:	enter  0x6417,0xf
  410da9:	add    edi,esp
  410dab:	inc    ebp
  410dac:	test   al,0xb6
  410dae:	sahf   
  410daf:	cwde   
  410db0:	in     eax,dx
  410db1:	clc    
  410db2:	sbb    eax,0xc1c2da5d
  410db7:	int3   
  410db8:	fst    DWORD PTR [edx+0x76bf39de]
  410dbe:	imul   eax,DWORD PTR [ebp+0x4b2668ce],0xffffffb2
  410dc5:	out    0xfb,eax
  410dc7:	mov    eax,ds:0xd7142cca
  410dcc:	lods   eax,DWORD PTR ds:[esi]
  410dcd:	mov    dl,0xc9
  410dcf:	xor    eax,0x7d925da7
  410dd4:	arpl   WORD PTR [ebx-0x6728c663],bx
  410dda:	imul   BYTE PTR [edx+0x187c2be8]
  410de0:	lods   al,BYTE PTR ds:[esi]
  410de1:	rcl    DWORD PTR [ebx-0x34931cd2],cl
  410de7:	mov    ebp,DWORD PTR [esp+ebp*8]
  410dea:	(bad)  
  410deb:	xor    eax,0xe85dda14
  410df0:	or     DWORD PTR [ebx+eax*8],edi
  410df3:	mov    edx,0x1b312284
  410df8:	loop   0x410da6
  410dfa:	sub    DWORD PTR [eax+0x61],0x2d
  410dfe:	retf   0x2559
  410e01:	pop    ss
  410e02:	out    dx,eax
  410e03:	cmp    al,0x95
  410e05:	lods   eax,DWORD PTR ds:[esi]
  410e06:	jecxz  0x410e4d
  410e08:	jmp    0x69f5:0xc59ad
  410e0f:	leave  
  410e10:	mov    DWORD PTR [edx+0x727b164b],0xbbba3f6b
  410e1a:	or     al,BYTE PTR [ebp+eiz*8-0x6]
  410e1e:	jo     0x410e6b
  410e20:	mov    dl,0x4f
  410e22:	and    BYTE PTR [edx-0x80],al
  410e25:	pop    edi
  410e26:	sub    eax,0xfb531931
  410e2b:	inc    ebx
  410e2c:	ret    
  410e2d:	es (bad) 
  410e2f:	xor    edx,DWORD PTR [ebp+0x67]
  410e32:	test   eax,0x6a3ff222
  410e37:	add    eax,edx
  410e39:	loope  0x410dd8
  410e3b:	std    
  410e3c:	loope  0x410e6c
  410e3e:	push   0x7d
  410e40:	inc    esp
  410e41:	imul   ecx,DWORD PTR [esi-0x6e],0x668a8f95
  410e48:	xor    eax,0x9f6dc563
  410e4d:	sti    
  410e4e:	shl    DWORD PTR [ebx+0x52],cl
  410e51:	inc    esi
  410e52:	stos   BYTE PTR es:[edi],al
  410e53:	push   esi
  410e54:	push   edx
  410e55:	loope  0x410ec2
  410e57:	and    BYTE PTR [ecx],ch
  410e59:	and    esi,DWORD PTR [ecx-0x4f]
  410e5c:	ins    BYTE PTR es:[edi],dx
  410e5d:	mov    eax,ds:0xa77df441
  410e62:	jle    0x410dea
  410e64:	loope  0x410ed9
  410e66:	stos   DWORD PTR es:[edi],eax
  410e67:	add    eax,0x5a648d96
  410e6c:	xor    esi,DWORD PTR ds:0xb2311fb8
  410e72:	fstp   DWORD PTR [esi]
  410e74:	repz scas al,BYTE PTR es:[edi]
  410e76:	and    DWORD PTR [esi-0x12],ebx
  410e79:	and    cl,dh
  410e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e7c:	mov    edi,0xd5ec1ed6
  410e81:	mov    eax,0x853199db
  410e86:	out    dx,al
  410e87:	dec    BYTE PTR [edi]
  410e89:	out    dx,al
  410e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e8b:	pop    edx
  410e8c:	test   BYTE PTR [edx],dl
  410e8e:	jge    0x410ea3
  410e90:	jmp    0x410ebb
  410e92:	out    0x27,al
  410e94:	dec    edi
  410e95:	inc    edx
  410e96:	sahf   
  410e97:	test   eax,0xe0f0e7b7
  410e9c:	fimul  WORD PTR [edi]
  410e9e:	xor    DWORD PTR ds:0x46b68aa9,edi
  410ea4:	ficom  WORD PTR [eax-0x7c]
  410ea7:	int    0xa2
  410ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eaa:	and    ecx,DWORD PTR [esi]
  410eac:	pop    ss
  410ead:	sti    
  410eae:	adc    eax,0x6de0a575
  410eb3:	ins    BYTE PTR es:[edi],dx
  410eb4:	dec    eax
  410eb5:	xchg   DWORD PTR [esi+0x23a53469],ebx
  410ebb:	dec    esp
  410ebc:	mov    esi,0x9277afda
  410ec1:	fsub   st,st(7)
  410ec3:	add    al,0x13
  410ec5:	arpl   WORD PTR [esp+ebp*8-0x642221f],si
  410ecc:	neg    DWORD PTR [ecx-0x1c]
  410ecf:	inc    esi
  410ed0:	dec    esi
  410ed1:	xchg   BYTE PTR [esi-0x4a],dl
  410ed4:	fsubr  DWORD PTR [edx+eax*2-0x1d724a03]
  410edb:	cwde   
  410edc:	mov    ebx,0xe5f7017f
  410ee1:	adc    DWORD PTR [edi-0x8],0x1a
  410ee5:	retf   
  410ee6:	loope  0x410f02
  410ee8:	inc    ecx
  410ee9:	ins    BYTE PTR es:[edi],dx
  410eea:	xchg   ebx,eax
  410eeb:	gs push cs
  410eed:	dec    esi
  410eee:	pop    ds
  410eef:	leave  
  410ef0:	xor    ah,BYTE PTR [ebp+0xd]
  410ef3:	rcr    BYTE PTR [eax],1
  410ef5:	(bad)  
  410ef6:	arpl   bx,dx
  410ef8:	adc    al,0x5
  410efa:	push   edi
  410efb:	mov    cl,0x47
  410efd:	ins    BYTE PTR es:[edi],dx
  410efe:	add    ebp,DWORD PTR [edx]
  410f00:	sbb    al,0xe4
  410f02:	mov    dl,0x6a
  410f04:	cmc    
  410f05:	jo     0x410ea4
  410f07:	sar    esi,cl
  410f09:	mov    ds:0x3b16e3ed,eax
  410f0e:	in     eax,0xec
  410f10:	arpl   WORD PTR [ebp-0x67f98b06],di
  410f16:	ror    esp,0x60
  410f19:	jmp    0x71b8f380
  410f1e:	stos   BYTE PTR es:[edi],al
  410f1f:	cmp    BYTE PTR [ecx+eiz*2],0x97
  410f23:	rcr    ebp,1
  410f25:	test   ah,bh
  410f27:	mov    al,ds:0xa8b2528a
  410f2c:	sub    dh,BYTE PTR [edi-0x35624c61]
  410f32:	xchg   esi,eax
  410f33:	or     BYTE PTR [edx+0x54],bl
  410f36:	mov    bh,0x64
  410f38:	in     al,0x9d
  410f3a:	pop    ebx
  410f3b:	aad    0x18
  410f3d:	rcl    DWORD PTR [eax],1
  410f3f:	inc    esp
  410f40:	inc    dh
  410f42:	iret   
  410f43:	loop   0x410f9e
  410f45:	jmp    0x410f06
  410f47:	cmp    DWORD PTR [edx+0x33b4a1b7],0xffffff91
  410f4e:	jne    0x410fbb
  410f50:	jge    0x410f89
  410f52:	mov    dh,0xbb
  410f54:	jge    0x410f9c
  410f56:	scas   eax,DWORD PTR es:[edi]
  410f57:	out    dx,al
  410f58:	cmp    al,0xae
  410f5a:	adc    BYTE PTR [eax],0xe1
  410f5d:	cmp    ah,BYTE PTR [edx-0x2b]
  410f60:	ret    
  410f61:	push   eax
  410f62:	shl    DWORD PTR [eax],0x82
  410f65:	fist   WORD PTR [ecx-0x7a]
  410f69:	mov    edi,0x5aa0c380
  410f6e:	jmp    esp
  410f70:	add    al,0x6c
  410f72:	outs   dx,BYTE PTR ds:[esi]
  410f73:	outs   dx,DWORD PTR ds:[esi]
  410f74:	sub    al,BYTE PTR [edx]
  410f76:	jne    0x410f58
  410f78:	ins    BYTE PTR es:[edi],dx
  410f79:	int3   
  410f7a:	sbb    DWORD PTR [edx+0x1c],edx
  410f7d:	xor    al,0x7e
  410f7f:	adc    al,0x35
  410f81:	loope  0x410fda
  410f83:	mov    BYTE PTR [ebp-0x1c],dh
  410f86:	mov    ds:0x97818502,al
  410f8b:	pop    edx
  410f8c:	aaa    
  410f8d:	gs pop ebx
  410f8f:	mov    BYTE PTR [edx-0x5b],bh
  410f92:	les    esi,FWORD PTR [ebp+ebp*8+0x78]
  410f96:	call   FWORD PTR [ebx+esi*2]
  410f99:	scas   al,BYTE PTR es:[edi]
  410f9a:	imul   ebp,ecx,0x3f
  410f9d:	and    eax,DWORD PTR [ebp-0x47fe2410]
  410fa3:	fisub  WORD PTR [esi+edi*8]
  410fa6:	add    eax,0xae985377
  410fab:	jne    0x410fb3
  410fad:	add    eax,0x12889c3b
  410fb2:	inc    edx
  410fb3:	or     al,0xc4
  410fb5:	clc    
  410fb6:	inc    esp
  410fb7:	sub    eax,DWORD PTR [eax+0x33]
  410fba:	ds pop ds
  410fbc:	test   al,0x78
  410fbe:	pop    edi
  410fbf:	xor    BYTE PTR [edi+0x3a5d2be9],bl
  410fc5:	mov    esp,0x6402d987
  410fca:	icebp  
  410fcb:	(bad)  
  410fcc:	shr    BYTE PTR [ecx-0x1b],cl
  410fcf:	adc    al,BYTE PTR [edx-0x27]
  410fd2:	(bad)  
  410fd3:	push   0xedb1e593
  410fd8:	and    dl,BYTE PTR [ebx]
  410fda:	jnp    0x410f90
  410fdc:	popf   
  410fdd:	fchs   
  410fdf:	xor    eax,0xdd77882
  410fe4:	inc    esp
  410fe5:	adc    BYTE PTR [eax+0x7d],dh
  410fe8:	outs   dx,BYTE PTR ds:[esi]
  410fe9:	lods   al,BYTE PTR ds:[esi]
  410fea:	or     BYTE PTR ds:0x6b997938,0x48
  410ff1:	imul   edx,edx,0xbc67efc9
  410ff7:	mov    ds:0x84de4c9,al
  410ffc:	xchg   edi,eax
  410ffd:	adc    esp,DWORD PTR [esi]
  410fff:	dec    edi
  411000:	push   ss
  411001:	inc    ecx
  411002:	pop    esi
  411003:	enter  0x61ef,0x32
  411007:	xor    DWORD PTR [esi+0x7a],0x97a79b50
  41100e:	imul   ecx,edi,0x4bd7173b
  411014:	retf   
  411015:	clc    
  411016:	inc    esp
  411017:	rol    BYTE PTR [eax+0x5a],1
  41101a:	cwde   
  41101b:	cmc    
  41101c:	ja     0x410fc8
  41101e:	inc    edx
  41101f:	inc    esp
  411020:	ret    
  411021:	(bad)
  411025:	mov    ebx,0x68a1f21d
  41102a:	shl    ch,cl
  41102c:	fsub   DWORD PTR [eax-0x8059553]
  411032:	inc    edx
  411033:	or     al,0x1b
  411035:	cwde   
  411036:	loopne 0x41100d
  411038:	leave  
  411039:	cli    
  41103a:	unpcklps xmm6,XMMWORD PTR [edx+ebp*2-0x75539f4d]
  411042:	mov    ah,0xc4
  411044:	scas   al,BYTE PTR es:[edi]
  411045:	test   ebp,eax
  411047:	push   eax
  411048:	popf   
  411049:	jmp    0x36057dbb
  41104e:	repnz inc esp
  411050:	popf   
  411051:	call   0xefc3:0x3ee7c605
  411058:	sbb    BYTE PTR [edx+0x5d],cl
  41105b:	pop    ebp
  41105c:	sub    al,0x1c
  41105e:	aad    0x82
  411060:	std    
  411061:	call   0x3dd9:0xa5742a35
  411068:	mov    gs,esp
  41106a:	fld    DWORD PTR [ecx+0x1469bc22]
  411070:	aaa    
  411071:	add    al,0xa1
  411073:	test   edx,edi
  411075:	mov    bh,0x8f
  411077:	pop    edi
  411078:	xchg   ebx,eax
  411079:	sbb    al,0x71
  41107b:	aas    
  41107c:	test   al,0xf
  41107e:	xchg   edx,eax
  41107f:	repnz mov bl,BYTE PTR [eax+0x3a25fae5]
  411086:	mov    ebx,DWORD PTR [esi-0x3ded8f9e]
  41108c:	ja     0x41103a
  41108e:	jecxz  0x4110df
  411090:	cmovns esp,DWORD PTR [esi+ecx*8-0x1b74e195]
  411098:	out    dx,al
  411099:	pop    edi
  41109a:	cmc    
  41109b:	pop    eax
  41109c:	sahf   
  41109d:	dec    edi
  41109e:	in     al,dx
  41109f:	mov    dl,0xc0
  4110a1:	mov    al,ds:0x4074eae6
  4110a6:	mov    cl,0x15
  4110a8:	icebp  
  4110a9:	xchg   ecx,eax
  4110aa:	jbe    0x4110f7
  4110ac:	fiadd  WORD PTR [ebx]
  4110ae:	das    
  4110af:	loop   0x411063
  4110b1:	xchg   edi,eax
  4110b2:	pop    es
  4110b3:	or     al,0xf3
  4110b5:	pop    esp
  4110b6:	sub    eax,DWORD PTR [ebx+0x4082fc37]
  4110bc:	and    cl,BYTE PTR [eax-0x18]
  4110bf:	add    esi,edx
  4110c1:	mov    ebp,0xf60ac2dc
  4110c6:	pop    ss
  4110c7:	daa    
  4110c8:	mov    ss,WORD PTR [esi+0x26]
  4110cb:	pop    edx
  4110cc:	test   BYTE PTR [edi-0xb0cdaf9],cl
  4110d2:	shl    DWORD PTR [ecx+0xdc81c95],1
  4110d8:	cmp    ebp,DWORD PTR [ecx+ebp*1+0x5f731d07]
  4110df:	jg     0x411093
  4110e1:	adc    dh,BYTE PTR [edi-0x26]
  4110e4:	sbb    al,BYTE PTR [eax+0x136d8a3b]
  4110ea:	in     eax,0x2a
  4110ec:	mul    dh
  4110ee:	ror    BYTE PTR [esi],cl
  4110f0:	xor    ebx,0x1e0cd68a
  4110f6:	push   es
  4110f7:	lock jne 0x4110a8
  4110fa:	stc    
  4110fb:	rol    DWORD PTR [eax+0x6fa5fdc],1
  411101:	icebp  
  411102:	mov    ebx,0x173eef3e
  411107:	loopne 0x4110e0
  411109:	outs   dx,BYTE PTR ds:[esi]
  41110a:	jb     0x411167
  41110c:	ja     0x4110ba
  41110e:	int    0x1d
  411110:	lahf   
  411111:	xchg   DWORD PTR [edi+ecx*4+0x1b6b7dd2],esp
  411118:	loop   0x411119
  41111a:	cmp    BYTE PTR [ebx-0x2],bl
  41111d:	rol    BYTE PTR [esi-0x2c7d25f3],1
  411123:	lahf   
  411124:	sub    BYTE PTR [edx+edx*8+0x44],bl
  411128:	fadd   st,st(0)
  41112a:	scas   eax,DWORD PTR es:[edi]
  41112b:	aas    
  41112c:	cmp    DWORD PTR [esi],ebp
  41112e:	(bad)  
  41112f:	mov    dl,0xd4
  411131:	jle    0x41115c
  411133:	(bad)  [ecx]
  411135:	mov    edx,0x1dee8be
  41113a:	push   ebp
  41113b:	loop   0x411129
  41113d:	and    bl,BYTE PTR [edx]
  41113f:	jno    0x411164
  411141:	pop    ebx
  411142:	or     edi,DWORD PTR [ebp+0x26]
  411145:	ffree  st(5)
  411147:	mov    ch,0xc6
  411149:	inc    esi
  41114a:	(bad)  
  41114b:	in     eax,0x88
  41114d:	into   
  41114e:	scas   al,BYTE PTR es:[edi]
  41114f:	push   ds
  411150:	xor    cl,BYTE PTR [eax-0x1ec400f]
  411156:	lock pop esi
  411158:	popa   
  411159:	push   DWORD PTR [ebx-0x1d61146]
  41115f:	inc    esi
  411160:	pusha  
  411161:	jmp    0x5b40:0xcbae172
  411168:	and    BYTE PTR [edi+0x33],ch
  41116b:	jbe    0x4111ca
  41116d:	add    al,0xbd
  41116f:	jo     0x41113e
  411171:	xchg   edx,eax
  411172:	fs inc edi
  411174:	in     eax,dx
  411175:	(bad)  
  411176:	outs   dx,BYTE PTR ds:[esi]
  411177:	xchg   ebx,eax
  411178:	mov    esp,0x76574081
  41117d:	adc    al,0xce
  41117f:	jge    0x411197
  411181:	out    dx,eax
  411182:	push   DWORD PTR [ecx+eiz*1]
  411185:	test   BYTE PTR [ecx],bl
  411187:	and    al,0xa8
  411189:	sahf   
  41118a:	daa    
  41118b:	inc    ebx
  41118c:	out    dx,eax
  41118d:	lock mov dh,0xcf
  411190:	push   ebx
  411192:	out    dx,eax
  411193:	pop    ecx
  411194:	add    al,0x4a
  411196:	iret   
  411197:	out    dx,eax
  411198:	xor    eax,0xdb7fe284
  41119d:	rol    DWORD PTR [edi+0x75],cl
  4111a0:	pop    esp
  4111a1:	jns    0x4111dc
  4111a3:	mov    ch,0x7f
  4111a5:	int    0xdd
  4111a7:	inc    edi
  4111a8:	fucomi st,st(7)
  4111aa:	mov    al,0x76
  4111ac:	int    0xec
  4111ae:	scas   al,BYTE PTR es:[edi]
  4111af:	pop    esi
  4111b0:	mov    eax,0xfca59d3
  4111b5:	pusha  
  4111b6:	shl    DWORD PTR [ecx+0x4f],0xc6
  4111ba:	lea    ebp,[edi]
  4111bc:	push   ds
  4111bd:	dec    edx
  4111be:	out    0xe6,eax
  4111c0:	and    esi,0x6e3b23a1
  4111c6:	xchg   ebx,eax
  4111c7:	popa   
  4111c8:	dec    edi
  4111c9:	mov    al,ds:0xb4ecf6eb
  4111ce:	ins    BYTE PTR es:[edi],dx
  4111cf:	mov    al,ds:0x3f36d957
  4111d4:	inc    esp
  4111d5:	stos   DWORD PTR es:[edi],eax
  4111d6:	rol    DWORD PTR [si+0x6778],cl
  4111db:	mov    edi,0xf572295f
  4111e0:	sbb    ecx,DWORD PTR [esi+0x7e9cf294]
  4111e6:	js     0x4111f7
  4111e8:	jbe    0x41122e
  4111ea:	shr    DWORD PTR [ebp-0x17909393],0x61
  4111f1:	xchg   DWORD PTR cs:[ebp-0x46],ebp
  4111f5:	inc    ecx
  4111f6:	push   ebx
  4111f7:	mov    esi,0x822d895
  4111fc:	(bad)  
  4111fe:	arpl   WORD PTR [edx-0x44],si
  411201:	pop    eax
  411202:	inc    ebp
  411203:	or     bh,BYTE PTR [ebx+0x4]
  411206:	xor    DWORD PTR [eax+0x3ce5b026],0x1b8aa5d7
  411210:	ja     0x411242
  411212:	xchg   ebx,eax
  411213:	add    BYTE PTR [ebx+0x1427526b],bh
  411219:	push   bx
  41121b:	xlat   BYTE PTR ds:[ebx]
  41121c:	push   ecx
  41121d:	and    al,0xa7
  41121f:	enter  0xac46,0x8c
  411223:	retf   0x9045
  411226:	lock adc DWORD PTR [esi+eiz*4],ebx
  41122a:	jl     0x4111bc
  41122c:	rol    BYTE PTR [ebp-0x18e1a625],cl
  411232:	(bad)  [esi+0x63]
  411235:	in     eax,0xe5
  411237:	call   0xdf83f560
  41123c:	xor    DWORD PTR [ebp-0x2152b9ba],ecx
  411242:	and    al,dl
  411244:	in     al,dx
  411245:	(bad)
  411248:	mov    ecx,0x1aa24b3e
  41124d:	push   cs
  41124e:	and    cl,BYTE PTR [edi+ebx*1+0x6b]
  411252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411253:	repz xchg edi,eax
  411255:	cmp    al,0xcd
  411257:	je     0x411211
  411259:	imul   edx,DWORD PTR [edi-0x32],0x10
  41125d:	arpl   WORD PTR [eax+0x22],dx
  411260:	mov    al,0xd5
  411262:	ins    BYTE PTR es:[edi],dx
  411263:	jp     0x411254
  411265:	daa    
  411266:	jbe    0x411253
  411268:	call   0xf4e72243
  41126d:	push   0x994ade1b
  411272:	push   cs
  411273:	jmp    0xf370:0xdb47fc9a
  41127a:	daa    
  41127b:	inc    esp
  41127c:	jae    0x41127f
  41127e:	push   ecx
  41127f:	loope  0x41129f
  411281:	push   ds
  411282:	icebp  
  411283:	sbb    DWORD PTR [ecx+0xe],ecx
  411286:	nop
  411287:	add    BYTE PTR [edi+0xf0376a],al
  41128d:	ret    0xd01e
  411290:	aas    
  411291:	add    BYTE PTR [edi-0x74],dl
  411294:	out    dx,al
  411295:	ins    DWORD PTR es:[edi],dx
  411296:	jle    0x411266
  411298:	lods   al,BYTE PTR ds:[esi]
  411299:	sub    al,0xd7
  41129b:	add    BYTE PTR [edx],cl
  41129d:	dec    ecx
  41129e:	ficomp WORD PTR [esi-0x36]
  4112a1:	imul   ebx,DWORD PTR [eax-0x2fd5211],0x47
  4112a8:	aad    0x57
  4112aa:	and    edi,DWORD PTR ds:[edi]
  4112ad:	test   BYTE PTR [ebp+eiz*4-0xb78e8f8],ch
  4112b4:	mov    ecx,DWORD PTR [eax-0x6c]
  4112b7:	mov    cl,0xd0
  4112b9:	or     esi,eax
  4112bb:	sub    al,0x8
  4112bd:	bound  eax,QWORD PTR [edx+0x4d]
  4112c0:	cmp    al,0xef
  4112c2:	dec    ecx
  4112c3:	adc    dh,BYTE PTR [esi-0x5b]
  4112c6:	xlat   BYTE PTR ds:[ebx]
  4112c7:	jns    0x411249
  4112c9:	inc    ebp
  4112ca:	and    ecx,edx
  4112cc:	ret    
  4112cd:	lods   al,BYTE PTR ds:[esi]
  4112ce:	dec    esp
  4112cf:	neg    BYTE PTR [eax]
  4112d1:	imul   ebp,DWORD PTR [esi+0x25a817cf],0x3
  4112d8:	adc    ah,BYTE PTR [edx+edx*4+0x69a05b5e]
  4112df:	jecxz  0x4112b5
  4112e1:	xlat   BYTE PTR ds:[ebx]
  4112e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e3:	and    BYTE PTR [ebp-0x6c475883],dh
  4112e9:	mov    esp,0x8de49ccf
  4112ee:	scas   eax,DWORD PTR es:[edi]
  4112ef:	or     DWORD PTR [ecx-0x43],ebp
  4112f2:	pop    ebp
  4112f3:	nop
  4112f4:	dec    esp
  4112f5:	pop    ds
  4112f6:	xor    BYTE PTR [esi+eiz*4-0x7072f329],cl
  4112fd:	pop    edi
  4112fe:	xor    eax,0x5d55e333
  411303:	aad    0xd8
  411305:	xlat   BYTE PTR ds:[ebx]
  411306:	sub    esp,ebx
  411308:	out    dx,eax
  411309:	lea    esp,[edx]
  41130b:	cdq    
  41130c:	imul   ecx,DWORD PTR [edi+0x54],0x45f66650
  411313:	test   DWORD PTR [ecx],edi
  411315:	fistp  WORD PTR cs:[ecx]
  411318:	in     al,0x66
  41131a:	jge    0x41137a
  41131c:	add    eax,0x456358
  411321:	fisubr WORD PTR [ebx+0x7bf876ec]
  411327:	pop    edx
  411328:	jne    0x411310
  41132a:	(bad)  
  41132b:	in     eax,dx
  41132c:	(bad)  
  41132d:	mov    ds:0x30288579,al
  411332:	out    0x7,al
  411334:	dec    ebx
  411335:	shr    ebp,1
  411337:	xor    ecx,DWORD PTR [edx+0x1fca552a]
  41133d:	fisub  DWORD PTR [ecx]
  41133f:	pop    edx
  411340:	push   ebx
  411341:	fadd   QWORD PTR [ecx+0x78]
  411344:	push   edx
  411345:	ja     0x411324
  411347:	push   esp
  411348:	cmp    edx,DWORD PTR [ebx+0x45]
  41134b:	or     esi,DWORD PTR [ebp+0x3bf9504f]
  411351:	loopne 0x411361
  411353:	hlt    
  411354:	pop    esp
  411355:	fldenv [ecx+0x49cdb5a9]
  41135b:	mov    esp,0xec15ddb
  411360:	pop    esi
  411361:	xchg   ebp,eax
  411362:	xchg   dh,cl
  411364:	out    0xf5,al
  411366:	loope  0x41138e
  411368:	xchg   esi,eax
  411369:	adc    al,0x9e
  41136b:	jno    0x41132a
  41136d:	sbb    edi,ebp
  41136f:	adc    dl,BYTE PTR [edx+edx*4+0x1b29f0fa]
  411376:	call   esp
  411378:	dec    esi
  411379:	(bad)  [ecx+ecx*2]
  41137c:	xchg   esp,eax
  41137d:	repz fcomp QWORD PTR cs:[ecx+0x1cee2d83]
  411385:	mov    eax,ds:0x55bace43
  41138a:	xchg   ebp,eax
  41138b:	xlat   BYTE PTR ds:[ebx]
  41138c:	mov    ebp,0xc796fafb
  411391:	xor    edi,DWORD PTR [ebx+0x43ccfa6c]
  411397:	adc    al,0x11
  411399:	mov    edi,es
  41139b:	jmp    0x411358
  41139d:	jmp    0x4113f6
  41139f:	loope  0x41134c
  4113a1:	cwde   
  4113a2:	retf   
  4113a3:	bound  esp,QWORD PTR [ebp+0x6de54752]
  4113a9:	stc    
  4113aa:	mov    eax,0xc83ae156
  4113af:	psrld  mm4,QWORD PTR [ecx+0xaac5f05]
  4113b6:	cmp    BYTE PTR [ecx+eiz*8-0x7d9ffc61],0xa6
  4113be:	loopne 0x411384
  4113c0:	mov    dl,BYTE PTR [edi+0x61e9b53b]
  4113c6:	xor    edx,esi
  4113c8:	out    0xe7,al
  4113ca:	pop    ebp
  4113cb:	pop    ebp
  4113cc:	outs   dx,DWORD PTR ds:[esi]
  4113cd:	add    esi,ebp
  4113cf:	sahf   
  4113d0:	aam    0x4d
  4113d2:	rol    DWORD PTR [esi],0x48
  4113d5:	mov    ecx,0xc9dc3d46
  4113da:	into   
  4113db:	adc    BYTE PTR [ebp-0x10],ch
  4113de:	push   0x1a7c7d0c
  4113e3:	mov    eax,ds:0x6a21bf9e
  4113e8:	scas   al,BYTE PTR es:[edi]
  4113e9:	fisubr DWORD PTR [ebx]
  4113eb:	(bad)  
  4113ec:	cmp    eax,0x5b38671
  4113f1:	mov    DWORD PTR [edi],esi
  4113f3:	(bad)
  4113f7:	test   cl,dh
  4113f9:	(bad)  [ebx+0x0]
  4113fc:	scas   al,BYTE PTR es:[edi]
  4113fd:	call   0xda067dcb
  411402:	push   0x71
  411404:	sbb    eax,0xf4480c24
  411409:	push   esp
  41140a:	inc    ebx
  41140b:	mov    dl,dl
  41140d:	pop    edx
  41140e:	stos   BYTE PTR es:[edi],al
  41140f:	xor    ah,BYTE PTR [edx]
  411411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411412:	fxch   st(0)
  411414:	hlt    
  411415:	push   0x1df263db
  41141a:	(bad)  
  41141b:	mov    al,ds:0x75a44248
  411420:	cmp    dl,al
  411422:	int    0x69
  411424:	lds    eax,FWORD PTR [edi+0x21]
  411427:	add    eax,0x8a341c9
  41142c:	stos   BYTE PTR es:[edi],al
  41142d:	or     ah,BYTE PTR [edi+0x51]
  411430:	push   ebp
  411431:	je     0x411435
  411433:	add    DWORD PTR [ebx+eiz*8-0x5a],esp
  411437:	dec    ebx
  411438:	cdq    
  411439:	and    esp,DWORD PTR [ebx-0x2723a8fd]
  41143f:	mov    ebp,0x998b4a23
  411444:	jne    0x41146f
  411446:	shl    BYTE PTR [ebp+0x29],1
  411449:	loopne 0x411402
  41144b:	nop
  41144c:	xlat   BYTE PTR ds:[ebx]
  41144d:	jecxz  0x411447
  41144f:	aad    0x26
  411451:	into   
  411452:	loop   0x411457
  411454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411455:	or     eax,DWORD PTR [ebx+0x19]
  411458:	mul    esi
  41145a:	mov    dl,0x37
  41145c:	jo     0x41146d
  41145e:	cld    
  41145f:	dec    esp
  411460:	jns    0x41144b
  411462:	enter  0x59d7,0x7a
  411466:	aaa    
  411467:	cmp    ebp,esp
  411469:	push   esp
  41146a:	aas    
  41146b:	jp     0x4114a1
  41146d:	fstp   TBYTE PTR ds:0x882fd86
  411473:	(bad)  [edx+0x24]
  411476:	add    DWORD PTR [ecx+0x75ca52d8],ebp
  41147c:	jmp    0xe58f5f25
  411481:	adc    BYTE PTR [edx+esi*8],0x7f
  411485:	add    al,0xb3
  411487:	lea    ebx,[esi+0x5d60d199]
  41148d:	jae    0x411427
  41148f:	push   0x118375ae
  411494:	test   DWORD PTR [ebx-0x39],ebp
  411497:	enter  0x8449,0xec
  41149b:	rcr    DWORD PTR [edi],0x4
  41149e:	push   ebp
  41149f:	shl    DWORD PTR [ebx+0x48],1
  4114a2:	sub    esp,0x4823ffa8
  4114a8:	mov    bl,0xf6
  4114aa:	stos   DWORD PTR es:[edi],eax
  4114ab:	and    BYTE PTR [ebp+0x70c88740],0xf5
  4114b2:	push   0xffffff97
  4114b4:	rol    DWORD PTR [edx],cl
  4114b6:	idiv   BYTE PTR [ecx+0x6a4e1acf]
  4114bc:	call   FWORD PTR [edx]
  4114be:	outs   dx,BYTE PTR ds:[esi]
  4114bf:	icebp  
  4114c0:	ja     0x411527
  4114c2:	test   DWORD PTR [esi-0x6bccb04b],esp
  4114c8:	pusha  
  4114c9:	mov    edi,edi
  4114cb:	mov    ch,0xa2
  4114cd:	(bad)  
  4114cf:	mov    dl,0x9d
  4114d1:	pop    ds
  4114d2:	cwde   
  4114d3:	push   ebx
  4114d4:	push   ecx
  4114d5:	xor    BYTE PTR [eax+edi*2-0x61],dl
  4114d9:	push   ebx
  4114da:	cli    
  4114db:	aaa    
  4114dc:	ror    dh,cl
  4114de:	stos   DWORD PTR es:[edi],eax
  4114df:	data16 cld 
  4114e1:	push   ds
  4114e2:	shr    DWORD PTR [edi+eax*8-0x75063b72],1
  4114e9:	adc    dl,BYTE PTR [ecx]
  4114eb:	loope  0x411496
  4114ed:	add    BYTE PTR [eax-0x3e],bh
  4114f0:	mov    ecx,0xe1075081
  4114f5:	jg     0x41152e
  4114f7:	adc    dh,BYTE PTR [eax-0x6fb38eff]
  4114fd:	inc    esp
  4114fe:	sub    ch,BYTE PTR [edx+0x8]
  411501:	pop    eax
  411502:	push   esp
  411503:	push   eax
  411504:	js     0x41148f
  411506:	in     eax,dx
  411507:	xchg   edi,eax
  411508:	ds push esi
  41150a:	xchg   esp,eax
  41150b:	shl    BYTE PTR ds:0x814362ca,cl
  411511:	xor    eax,0x1c20b495
  411516:	repz int 0x68
  411519:	pop    ds
  41151a:	mov    esp,0xffe4b55b
  41151f:	adc    ah,0x50
  411522:	jne    0x411527
  411524:	pop    es
  411525:	sbb    BYTE PTR [eax-0x3c402410],bl
  41152b:	mov    bh,0x34
  41152d:	call   0x9155ea68
  411532:	mov    ebp,0x1f7751a8
  411537:	inc    edx
  411538:	mov    edi,0x1ecfb5b5
  41153d:	push   esi
  41153e:	imul   ebx,DWORD PTR [esi],0xffffffe1
  411541:	mov    ah,0x60
  411543:	retf   0x77bd
  411546:	in     al,dx
  411547:	fiadd  DWORD PTR [ecx+0x59b6eb30]
  41154d:	and    DWORD PTR [ebx-0x7ca0f468],esp
  411553:	cmc    
  411554:	in     al,0x4b
  411556:	push   cs
  411557:	mov    ds:0xc5fbd55,al
  41155c:	mov    ds:0x5d8ca5a2,eax
  411561:	adc    al,al
  411563:	xchg   ebx,eax
  411564:	div    ebx
  411566:	(bad)  
  411567:	outs   dx,BYTE PTR ds:[esi]
  411568:	push   ebp
  411569:	mov    edi,0xdb37d29e
  41156e:	icebp  
  41156f:	xchg   ebp,esi
  411571:	retf   0x7b00
  411574:	pushf  
  411575:	shl    DWORD PTR [eax],1
  411577:	inc    ecx
  411578:	shr    BYTE PTR [edi-0x2ae8eac4],cl
  41157e:	les    ebx,FWORD PTR [ecx+0x1a]
  411581:	fnsave [edx+0x1ad1f2c6]
  411587:	inc    edi
  411588:	mov    al,0xac
  41158a:	adc    DWORD PTR [edi],0x15c83207
  411590:	out    0x85,eax
  411592:	adc    ah,BYTE PTR [esi+eax*4]
  411595:	shl    DWORD PTR [ecx],cl
  411597:	jg     0x411618
  411599:	not    DWORD PTR [eax-0x55]
  41159c:	pop    edx
  41159d:	push   0x363255cb
  4115a2:	imul   ecx,DWORD PTR [ecx+0x28],0x3b
  4115a6:	cmp    dh,0x68
  4115a9:	cmp    eax,0x91b1cdf4
  4115ae:	adc    edi,DWORD PTR [eax+0x3a6cb32]
  4115b4:	pop    esp
  4115b5:	and    cl,BYTE PTR [esi]
  4115b7:	dec    eax
  4115b8:	test   al,0x6e
  4115ba:	push   edx
  4115bb:	in     al,0xc0
  4115bd:	sbb    eax,0x1b5be305
  4115c2:	int3   
  4115c3:	add    eax,0xc80c6220
  4115c8:	cli    
  4115c9:	xchg   BYTE PTR [edi+0x68a4c38],ch
  4115cf:	das    
  4115d0:	add    DWORD PTR [edi],edi
  4115d2:	pop    edi
  4115d3:	mov    esp,0x902cfc24
  4115d8:	std    
  4115d9:	retf   0x7dfd
  4115dc:	lea    esi,ds:0x4ee1ef5f
  4115e2:	shl    DWORD PTR [edi+0x6d],cl
  4115e5:	out    0x51,eax
  4115e7:	mov    dh,BYTE PTR [esi-0x75]
  4115ea:	out    dx,al
  4115eb:	enter  0x64b2,0x9e
  4115ef:	dec    ebp
  4115f0:	fsub   QWORD PTR [ecx-0x61408c14]
  4115f6:	imul   ecx,DWORD PTR [eax-0x60f459ad],0xffffff92
  4115fd:	in     eax,0xb5
  4115ff:	(bad)  
  411600:	cmc    
  411601:	push   DWORD PTR [edi+0x15ae9cd]
  411607:	pusha  
  411608:	repz retf 
  41160a:	pop    ebx
  41160b:	arpl   WORD PTR [esi],dx
  41160d:	xor    al,bh
  41160f:	mov    WORD PTR [ebx-0x6d],ss
  411612:	push   DWORD PTR [esi-0x47]
  411615:	psraw  mm2,mm5
  411618:	mov    ebp,0x616370c6
  41161d:	fild   WORD PTR ss:[edx]
  411620:	rcl    BYTE PTR [eax+0x30],0x4d
  411624:	repz cmp DWORD PTR [edi+0x69],0xac926d33
  41162c:	jmp    0xe29d:0xce9b4a40
  411633:	push   ecx
  411634:	(bad)  
  411635:	daa    
  411636:	xor    al,ah
  411638:	dec    esp
  411639:	dec    esi
  41163a:	sti    
  41163b:	addr16 or bl,cl
  41163e:	sbb    ah,ch
  411640:	fnstenv [esi+0x4a]
  411643:	push   0x8999660e
  411648:	int3   
  411649:	adc    BYTE PTR [ebx],al
  41164b:	pop    ss
  41164c:	les    esp,FWORD PTR [eax-0x80]
  41164f:	sub    eax,0x2626e412
  411654:	push   ss
  411655:	fisubr WORD PTR [eax-0x51d283e7]
  41165b:	sub    DWORD PTR [edx-0x77],0xffffff8f
  41165f:	out    dx,eax
  411660:	mov    ecx,0x3e1b6a35
  411665:	mov    cl,0xa
  411667:	ss icebp 
  411669:	ja     0x4116e2
  41166b:	popf   
  41166c:	fst    QWORD PTR [esi]
  41166e:	in     eax,0x98
  411670:	add    eax,0xfc067126
  411675:	add    ecx,DWORD PTR [ecx]
  411677:	push   ss
  411678:	mov    eax,0x592182bd
  41167d:	les    ebx,FWORD PTR [edx-0x714ba6de]
  411683:	jecxz  0x4116f5
  411685:	sbb    ecx,DWORD PTR [edi]
  411687:	retf   0xbb4b
  41168a:	rcr    DWORD PTR [esi+0x58c795ca],0x28
  411691:	xor    eax,0xb1022574
  411696:	fmul   DWORD PTR [edx+0x4a]
  411699:	sub    BYTE PTR [edx-0x3f],al
  41169c:	rcr    BYTE PTR [esi+ecx*8+0x45],cl
  4116a0:	dec    esp
  4116a1:	xchg   esp,eax
  4116a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116a3:	je     0x4116fd
  4116a5:	add    BYTE PTR [ebp+0x2ca616a9],bh
  4116ab:	adc    ecx,esp
  4116ad:	pop    esi
  4116ae:	fcomp  DWORD PTR [ecx+0x63]
  4116b1:	adc    eax,0xd8663068
  4116b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b7:	xchg   esp,eax
  4116b8:	jnp    0x41169e
  4116ba:	inc    DWORD PTR [ecx-0x78]
  4116bd:	xchg   edx,eax
  4116be:	fcmovnbe st,st(1)
  4116c0:	jae    0x411729
  4116c2:	retf   0x876
  4116c5:	nop
  4116c6:	gs mov edi,0x9ecb1733
  4116cc:	mov    esi,0x2f878c7d
  4116d1:	movsx  esp,ch
  4116d4:	(bad)  
  4116d5:	rcr    DWORD PTR [bx+0x562c],0x2b
  4116db:	pop    ebp
  4116dc:	(bad)  
  4116dd:	mov    al,0x7e
  4116df:	push   ds
  4116e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e1:	cwde   
  4116e2:	push   ds
  4116e3:	mov    cl,0xb7
  4116e5:	push   esi
  4116e6:	add    dh,ah
  4116e8:	mov    al,ds:0x66292c02
  4116ed:	jle    0x411726
  4116ef:	sbb    ah,cl
  4116f1:	mov    ecx,0x20999c3b
  4116f6:	xchg   ebp,eax
  4116f7:	and    DWORD PTR ds:0x47093197,ebx
  4116fd:	outs   dx,DWORD PTR ds:[esi]
  4116fe:	fiadd  WORD PTR [edx+0x76]
  411701:	xor    DWORD PTR [esi+0x1f],0x4e3e6e98
  411708:	mov    ah,0x55
  41170a:	sbb    BYTE PTR [ebp-0x70],cl
  41170d:	or     BYTE PTR [ecx],ch
  41170f:	loope  0x4116db
  411711:	jmp    0x6fb19675
  411716:	sbb    eax,0x5fde58f4
  41171b:	jg     0x4116ee
  41171d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41171e:	cld    
  41171f:	and    BYTE PTR [esi-0x24],bh
  411722:	stos   BYTE PTR es:[edi],al
  411723:	cdq    
  411724:	mov    cl,0x2e
  411726:	icebp  
  411727:	push   0xa3de5246
  41172c:	ficomp WORD PTR [eax*8-0x7fa07d71]
  411733:	pop    ebp
  411734:	pop    ds
  411735:	fidivr DWORD PTR [esi-0x52]
  411738:	mov    ecx,0xd02d6155
  41173d:	int3   
  41173e:	xchg   esp,eax
  41173f:	rcr    bh,1
  411741:	mov    ch,0x85
  411743:	add    eax,0xcbb4946a
  411748:	arpl   bx,bp
  41174a:	inc    eax
  41174b:	sub    BYTE PTR [ebp-0x3e7b19be],bh
  411751:	daa    
  411752:	push   ebp
  411753:	imul   ebp,edx,0x69ed3418
  411759:	ins    DWORD PTR es:[edi],dx
  41175a:	add    ecx,ebp
  41175c:	(bad)  
  41175d:	das    
  41175e:	cli    
  41175f:	cmp    BYTE PTR ds:0xeea0c33e,ch
  411765:	test   al,0x28
  411767:	jge    0x411721
  411769:	and    DWORD PTR [esi+0x22e3f821],eax
  41176f:	lods   eax,DWORD PTR ds:[esi]
  411770:	jae    0x411782
  411772:	mov    edi,ds
  411774:	jp     0x4117a4
  411776:	mov    edi,0x14a8e427
  41177b:	bound  ecx,QWORD PTR [esi]
  41177d:	ss aad 0x92
  411780:	add    BYTE PTR [ebx],al
  411782:	mov    dh,0x5b
  411784:	enter  0x8dbc,0x20
  411788:	(bad)  
  411789:	(bad)  
  41178a:	jmp    0x1fa6:0xc1de8c41
  411791:	add    al,0xcd
  411793:	xchg   ecx,eax
  411794:	enter  0xc1c2,0x41
  411798:	sub    bl,bh
  41179a:	retf   
  41179b:	addr16 inc esp
  41179d:	mov    edx,0xd4e4dd16
  4117a2:	cs jle 0x4117e2
  4117a5:	xchg   ebx,eax
  4117a6:	icebp  
  4117a7:	cld    
  4117a8:	clc    
  4117a9:	inc    ebx
  4117aa:	mov    ds:0xd4cadf95,eax
  4117af:	pop    esi
  4117b0:	xchg   edi,eax
  4117b1:	sbb    al,0x76
  4117b3:	jmp    0x4117c9
  4117b5:	in     al,0xde
  4117b7:	xchg   edx,eax
  4117b8:	and    eax,DWORD PTR [ecx+esi*8]
  4117bb:	xchg   edx,eax
  4117bc:	popf   
  4117bd:	das    
  4117be:	rcl    BYTE PTR [ebp-0x68],0xdf
  4117c2:	inc    ebx
  4117c3:	and    DWORD PTR [eax+0x2f207580],0xffffff9c
  4117ca:	push   0x4b
  4117cc:	and    BYTE PTR [edx+0x40169241],al
  4117d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117d3:	dec    ebx
  4117d4:	dec    eax
  4117d5:	sub    dl,BYTE PTR [ecx-0x12]
  4117d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117d9:	mov    al,0x71
  4117db:	out    dx,al
  4117dc:	ror    DWORD PTR [edx+edi*4-0x6],1
  4117e0:	arpl   sp,sp
  4117e2:	bound  esi,QWORD PTR [esi]
  4117e4:	loop   0x4117b6
  4117e6:	add    ebx,0xffffffef
  4117e9:	(bad)  
  4117eb:	inc    ebp
  4117ec:	inc    esi
  4117ed:	adc    BYTE PTR [ebx+esi*4-0x30],ah
  4117f1:	stc    
  4117f2:	scas   eax,DWORD PTR es:[edi]
  4117f3:	dec    ebx
  4117f4:	or     ebx,DWORD PTR [ebp-0x60]
  4117f7:	push   eax
  4117f8:	adc    DWORD PTR [eax*4-0x3449269d],esp
  4117ff:	enter  0x4d97,0x4f
  411803:	loop   0x41186e
  411805:	test   eax,0x24195aa4
  41180a:	call   FWORD PTR [edx-0x8]
  41180d:	(bad)  
  41180e:	jp     0x4117ca
  411810:	mov    eax,0x26e12767
  411815:	fdiv   QWORD PTR [esp+edi*2-0x10]
  411819:	lock imul eax,edx,0xf
  41181d:	jl     0x4117d0
  41181f:	sub    DWORD PTR [edi],esi
  411821:	fisub  WORD PTR [ebp-0x30]
  411824:	adc    ebx,DWORD PTR [esi]
  411826:	inc    ebx
  411827:	cmp    ecx,DWORD PTR [eax]
  411829:	mov    bl,0xb3
  41182b:	ja     0x411835
  41182d:	fisttp QWORD PTR [esi]
  41182f:	jp     0x4117d8
  411831:	outs   dx,DWORD PTR ds:[esi]
  411832:	fmulp  st(3),st
  411834:	jmp    0x3bf2:0xd8409388
  41183b:	aas    
  41183c:	jnp    0x4118ab
  41183e:	loope  0x41187e
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	jns    0x4118a3
  411843:	mov    es,WORD PTR [ecx+0x14780382]
  411849:	or     BYTE PTR [ecx],bh
  41184b:	call   0x7da17458
  411850:	sub    DWORD PTR [eax],ecx
  411852:	addr16 push ebp
  411854:	add    BYTE PTR [ebx-0x6e4c213a],ch
  41185a:	mov    ebx,0xb1fd3b7a
  41185f:	test   al,0xbf
  411861:	test   BYTE PTR [ebx+0x1c],al
  411864:	push   ebp
  411865:	dec    ecx
  411866:	sbb    DWORD PTR [edi-0x196eefed],esi
  41186c:	out    0x63,eax
  41186e:	imul   edi,DWORD PTR [edx],0xffffffdc
  411871:	sbb    ah,BYTE PTR [esi-0x6ca63e60]
  411877:	clc    
  411878:	ins    DWORD PTR es:[edi],dx
  411879:	popf   
  41187a:	sub    ah,dl
  41187c:	dec    ecx
  41187d:	dec    esi
  41187e:	xchg   ebx,eax
  41187f:	lods   al,BYTE PTR ds:[esi]
  411880:	inc    esi
  411881:	and    eax,DWORD PTR [edx]
  411883:	fistp  DWORD PTR [esi+0x3c]
  411886:	mov    esp,0x60ae33e0
  41188b:	ins    BYTE PTR es:[edi],dx
  41188c:	nop
  41188d:	fs cli 
  41188f:	cmp    al,0x8c
  411891:	jne    0x41186f
  411893:	jmp    0x4118d0
  411895:	fild   WORD PTR [ecx-0x520525e]
  41189b:	jne    0x411834
  41189d:	pop    eax
  41189e:	enter  0xd2b5,0xbf
  4118a2:	dec    ebx
  4118a3:	mov    ebx,0x9f457389
  4118a8:	sahf   
  4118a9:	sbb    al,0x9
  4118ab:	cmp    al,0xef
  4118ad:	je     0x411909
  4118af:	pop    ecx
  4118b0:	adc    ch,BYTE PTR [ebx]
  4118b2:	xor    DWORD PTR [eax],ecx
  4118b4:	pop    ecx
  4118b5:	enter  0x44b7,0x65
  4118b9:	mov    gs,WORD PTR [edi+0x659daa98]
  4118bf:	adc    eax,0x928852e0
  4118c4:	mov    WORD PTR [ecx-0x45c49865],fs
  4118ca:	inc    edi
  4118cb:	fdiv   DWORD PTR [eax-0x69751da5]
  4118d1:	cli    
  4118d2:	mov    dl,0x80
  4118d4:	fs (bad) 
  4118d6:	xchg   esp,eax
  4118d7:	push   ecx
  4118d8:	and    DWORD PTR [bx+di+0x20],ebp
  4118dc:	and    al,0x40
  4118de:	push   ss
  4118df:	shl    cl,0x1f
  4118e2:	adc    al,0x71
  4118e4:	addr16 pushf 
  4118e6:	aas    
  4118e7:	dec    esi
  4118e8:	cmc    
  4118e9:	dec    eax
  4118ea:	call   0xd15:0xa25be30f
  4118f1:	xor    al,0xac
  4118f3:	push   cs
  4118f4:	(bad)  
  4118f5:	fcomip st,st(5)
  4118f7:	inc    edi
  4118f8:	dec    eax
  4118f9:	cld    
  4118fa:	iret   
  4118fb:	lods   eax,DWORD PTR ds:[esi]
  4118fc:	and    ch,BYTE PTR [ecx-0x4607aa3f]
  411902:	or     ebx,ecx
  411904:	frstor [ecx+0x3d8ec921]
  41190a:	int3   
  41190b:	shl    BYTE PTR [ecx],cl
  41190d:	jnp    0x411940
  41190f:	jg     0x4118ce
  411911:	fucomi st,st(4)
  411913:	call   0xafc7dfde
  411918:	push   ss
  411919:	xor    eax,0xf5abc3e1
  41191e:	(bad)  [edi+ebx*1+0x3e]
  411922:	mov    ds:0x1886e571,eax
  411927:	adc    BYTE PTR [edi-0x63],ch
  41192a:	and    ebp,DWORD PTR [esi-0x9]
  41192d:	push   0x6a
  41192f:	out    dx,al
  411930:	cdq    
  411931:	test   al,0x5b
  411933:	mov    ds:0xb268f27d,al
  411938:	inc    edx
  411939:	inc    esp
  41193a:	add    eax,0x70c56c3d
  41193f:	jo     0x4118f8
  411941:	iret   
  411942:	and    al,0xfb
  411944:	and    BYTE PTR [edx+0x67],al
  411947:	pop    es
  411948:	and    DWORD PTR fs:[ecx+0x2d5fb6df],esi
  41194f:	ret    
  411950:	jb     0x4118fb
  411952:	sub    DWORD PTR [eax+0x1fcae8d5],eax
  411958:	mov    al,ds:0xe2b71360
  41195d:	mov    eax,0x2c3fbea6
  411962:	jbe    0x4118f8
  411964:	addr16 xchg esp,eax
  411966:	repnz xor cl,bh
  411969:	imul   esp,DWORD PTR [eax+0x23],0xffffff9d
  41196d:	push   esp
  41196e:	or     ebp,eax
  411970:	shr    DWORD PTR [eax+eiz*4-0x78b72be8],0x18
  411978:	(bad)  
  411979:	push   0x9098f029
  41197e:	dec    ebx
  41197f:	add    edi,DWORD PTR [ebx]
  411981:	sbb    WORD PTR [ebx+0x57],dx
  411985:	mov    esi,0x89e81f37
  41198a:	pop    edi
  41198b:	retf   
  41198c:	adc    DWORD PTR [edi-0x3],ebp
  41198f:	retf   0x9ad
  411992:	jmp    0x4119c2
  411994:	test   eax,0x81163397
  411999:	xchg   ebp,eax
  41199a:	xor    bl,BYTE PTR [ecx-0x60]
  41199d:	dec    esp
  41199e:	jmp    0xd63c:0xc6339545
  4119a5:	popa   
  4119a6:	jns    0x4119e1
  4119a8:	jbe    0x411958
  4119aa:	aas    
  4119ab:	cmp    DWORD PTR [edx-0x5d7479e1],0x2722f339
  4119b5:	push   ss
  4119b6:	jns    0x4119de
  4119b8:	and    cl,BYTE PTR [eax]
  4119ba:	out    0xe0,eax
  4119bc:	jl     0x4119e1
  4119be:	shr    esp,cl
  4119c0:	pop    gs
  4119c2:	adc    DWORD PTR [edx],0x44a13730
  4119c8:	pop    es
  4119c9:	ja     0x411a37
  4119cb:	fist   WORD PTR [edx]
  4119cd:	loopne 0x411a19
  4119cf:	dec    ebp
  4119d0:	fsub   DWORD PTR [eax+0xb4207db]
  4119d6:	out    0x4f,eax
  4119d8:	pop    es
  4119d9:	sub    eax,0x34f8817a
  4119de:	or     bh,0x6a
  4119e1:	cmp    al,0x63
  4119e3:	cmp    BYTE PTR [edi+0x48125198],ah
  4119e9:	push   ecx
  4119ea:	loopne 0x4119bf
  4119ec:	pop    ds
  4119ed:	jae    0x411a4b
  4119ef:	pop    ebx
  4119f0:	jg     0x41199c
  4119f2:	stc    
  4119f3:	out    dx,eax
  4119f4:	add    al,0xe2
  4119f6:	add    eax,0x96c6d59c
  4119fb:	das    
  4119fc:	addr16 pop eax
  4119fe:	pop    edi
  4119ff:	mul    ah
  411a01:	inc    DWORD PTR [ebp-0x32ed10ba]
  411a07:	adc    DWORD PTR [ebp+eiz*8+0x7f],esp
  411a0b:	mov    edx,0x8d7996ed
  411a10:	mov    DWORD PTR [ebx+0x65],esi
  411a13:	(bad)  
  411a14:	adc    eax,ecx
  411a16:	cmp    cl,al
  411a18:	and    eax,0x7bdeb0f9
  411a1d:	jg     0x411a4c
  411a1f:	jmp    0x72fd8aa7
  411a24:	into   
  411a25:	je     0x411a1a
  411a27:	xor    DWORD PTR [ecx+0x42],ebp
  411a2a:	inc    ebx
  411a2b:	adc    DWORD PTR [ebx-0x3113ec75],ebx
  411a31:	and    DWORD PTR [edi-0x71],edi
  411a34:	mov    dl,0x82
  411a36:	cmp    DWORD PTR [ecx+edi*8+0x2b537652],eax
  411a3d:	retf   
  411a3e:	sbb    BYTE PTR [eax-0x1bcd97b6],cl
  411a44:	shl    BYTE PTR [ebp+0x3f03b7c3],0x83
  411a4b:	lahf   
  411a4c:	inc    esi
  411a4d:	mov    ch,0xfc
  411a4f:	js     0x411a0a
  411a51:	in     eax,dx
  411a52:	jp     0x411ab6
  411a54:	sti    
  411a55:	fwait
  411a56:	sub    BYTE PTR [eax-0x1e],ch
  411a59:	add    ah,bh
  411a5b:	push   ebp
  411a5c:	fucom  st(0)
  411a5e:	xchg   esp,eax
  411a5f:	push   ds
  411a60:	or     eax,0xff3b805c
  411a65:	pop    ebp
  411a66:	jp     0x411a43
  411a68:	iret   
  411a69:	dec    edi
  411a6a:	test   al,0x3
  411a6c:	cmp    edx,esi
  411a6e:	clc    
  411a6f:	xor    al,0x1b
  411a71:	outs   dx,BYTE PTR ds:[esi]
  411a72:	push   es
  411a73:	(bad)  
  411a74:	jnp    0x411a72
  411a76:	scas   al,BYTE PTR es:[edi]
  411a77:	in     eax,0xec
  411a79:	mov    ah,0x36
  411a7b:	jbe    0x411a84
  411a7d:	xchg   esi,eax
  411a7e:	lock ds push ebp
  411a81:	adc    ebp,DWORD PTR [edx+esi*2]
  411a84:	add    DWORD PTR [ecx],0x4e
  411a87:	cwde   
  411a88:	call   0xeba444db
  411a8d:	sub    al,ch
  411a8f:	(bad)  
  411a90:	adc    DWORD PTR [eax+0x343e9217],esp
  411a96:	sar    DWORD PTR [eax+0x600c4039],cl
  411a9c:	std    
  411a9d:	sub    al,0xdd
  411a9f:	scas   al,BYTE PTR es:[edi]
  411aa0:	shld   DWORD PTR [eax],ebp,cl
  411aa3:	aas    
  411aa4:	fidiv  DWORD PTR [esi+0x62]
  411aa7:	mov    al,ds:0x2cdff0f
  411aac:	sbb    eax,DWORD PTR [edx]
  411aae:	je     0x411ad2
  411ab0:	add    eax,0xcf018cd3
  411ab5:	xchg   esi,eax
  411ab6:	mov    BYTE PTR [edi-0x6fccd63b],bh
  411abc:	xchg   ecx,eax
  411abd:	mov    esi,0xaf91b426
  411ac2:	aas    
  411ac3:	xor    BYTE PTR [ebx],ch
  411ac5:	in     eax,dx
  411ac6:	pushf  
  411ac7:	sub    BYTE PTR [edx+0x43a0e086],dh
  411acd:	fisub  DWORD PTR [esi]
  411acf:	or     eax,0x8c82feec
  411ad4:	sbb    edx,DWORD PTR [ebp-0xf]
  411ad7:	and    edi,edi
  411ad9:	ror    BYTE PTR [esi],cl
  411adb:	loope  0x411ae5
  411add:	push   edx
  411ade:	xor    al,0xf9
  411ae0:	jp     0x411b37
  411ae2:	sti    
  411ae3:	popa   
  411ae4:	icebp  
  411ae5:	fadd   st,st(0)
  411ae7:	push   ebx
  411ae8:	xor    edx,DWORD PTR [ecx+0x3d3d1291]
  411aee:	inc    esp
  411aef:	push   edx
  411af0:	xchg   ebx,eax
  411af1:	and    edx,DWORD PTR [esi]
  411af3:	ret    0xd64f
  411af6:	bound  edx,QWORD PTR [eax+0x24c88579]
  411afc:	ss stos BYTE PTR es:[edi],al
  411afe:	xchg   esp,eax
  411aff:	pop    ebp
  411b00:	cmp    BYTE PTR [ebp+0x6ce9e4f4],bl
  411b06:	mov    bh,0x37
  411b08:	jecxz  0x411b08
  411b0a:	adc    eax,0xd7a12c98
  411b0f:	xchg   esi,eax
  411b10:	shr    BYTE PTR [ecx+eiz*4+0x13],cl
  411b14:	pop    esi
  411b15:	or     eax,0xc505d6b1
  411b1a:	push   ebx
  411b1b:	mov    bh,0x4a
  411b1d:	fisttp DWORD PTR [ecx+0x42bc9076]
  411b23:	popa   
  411b24:	adc    esi,0xfdceb57
  411b2a:	shl    DWORD PTR [edx-0x6c4c4e1e],1
  411b30:	xor    DWORD PTR [edi-0x71],edx
  411b33:	data16 hlt 
  411b35:	pop    ecx
  411b36:	jmp    0x411ae1
  411b38:	pop    esi
  411b39:	ja     0x411ad4
  411b3b:	add    dh,dl
  411b3d:	out    0x2a,al
  411b3f:	push   esp
  411b40:	loopne 0x411b4a
  411b42:	dec    ebp
  411b43:	out    dx,eax
  411b44:	push   eax
  411b45:	popf   
  411b46:	pusha  
  411b47:	add    al,0x4e
  411b49:	xlat   BYTE PTR ds:[ebx]
  411b4a:	(bad)  
  411b4b:	popf   
  411b4c:	in     al,dx
  411b4d:	or     DWORD PTR [ebp+0x51430024],0xffffff9c
  411b54:	inc    ebx
  411b55:	stos   BYTE PTR es:[edi],al
  411b56:	jge    0x411aeb
  411b58:	adc    al,0x99
  411b5a:	inc    edx
  411b5b:	lahf   
  411b5c:	(bad)  
  411b5d:	jne    0x411bbc
  411b5f:	mov    bl,0x8b
  411b61:	fwait
  411b62:	mov    cl,0xaa
  411b64:	jl     0x411ae6
  411b66:	or     ah,bl
  411b68:	dec    eax
  411b69:	and    DWORD PTR [esi],eax
  411b6b:	neg    BYTE PTR [ebx+0x1d]
  411b6e:	mov    edi,0xe183f826
  411b73:	daa    
  411b74:	mov    al,0xca
  411b76:	mov    BYTE PTR [edx-0x62],bh
  411b79:	std    
  411b7a:	call   0xd484fbf8
  411b7f:	or     bl,BYTE PTR [ecx]
  411b81:	cmp    BYTE PTR [eax-0x44e0f914],0x52
  411b88:	pop    esi
  411b89:	call   0x844b:0xe863cbba
  411b90:	and    ebp,DWORD PTR [eax+0x16259d4f]
  411b96:	stos   BYTE PTR es:[edi],al
  411b97:	and    al,0x82
  411b99:	inc    edi
  411b9a:	aaa    
  411b9b:	cwde   
  411b9c:	(bad)  
  411b9d:	out    0x36,al
  411b9f:	shl    BYTE PTR [edx+0x12],0xee
  411ba3:	jae    0x411baa
  411ba5:	retf   
  411ba6:	xchg   edx,eax
  411ba7:	jnp    0x411b54
  411ba9:	sar    DWORD PTR [eax-0x7c126988],cl
  411baf:	mov    eax,ds:0xa9ca0a5b
  411bb4:	imul   eax,DWORD PTR [edx+0x318bd940],0xfe02d76f
  411bbe:	cmp    BYTE PTR [ebp+0x29],ah
  411bc1:	adc    esi,DWORD PTR [ebx-0x4]
  411bc4:	push   ss
  411bc5:	test   al,0xfd
  411bc7:	cld    
  411bc8:	test   esi,edx
  411bca:	mov    dh,0xb6
  411bcc:	add    al,0x5f
  411bce:	ins    BYTE PTR es:[edi],dx
  411bcf:	or     BYTE PTR [eax+0x41],dl
  411bd2:	xchg   ebp,eax
  411bd3:	imul   eax,DWORD PTR [ecx-0x60b723b9],0x47617387
  411bdd:	mov    ds:0x4c90a1f0,al
  411be2:	xor    DWORD PTR [eax-0x5d0b4b24],esi
  411be8:	xor    BYTE PTR [esi+0x31],al
  411beb:	cmp    bl,BYTE PTR [edx]
  411bed:	ret    
  411bee:	dec    esi
  411bef:	sub    DWORD PTR [esi-0x354ae90d],ebp
  411bf5:	arpl   WORD PTR [edi],ax
  411bf7:	pop    ss
  411bf8:	xchg   ebp,eax
  411bf9:	jmp    0xd061:0x16b45bf9
  411c00:	inc    edi
  411c01:	jmp    0x411bf5
  411c03:	and    ah,BYTE PTR [edi+0x5eb4aab0]
  411c09:	cwde   
  411c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c0b:	lahf   
  411c0c:	mov    ebp,0x7e2dceb4
  411c11:	mov    ds:0x69d82c78,eax
  411c16:	sbb    al,0x18
  411c18:	cdq    
  411c19:	int    0x25
  411c1b:	mov    esi,0xc828b19c
  411c20:	and    ebx,DWORD PTR [esi+edi*4-0x68]
  411c24:	ds pop ecx
  411c26:	and    al,0x83
  411c28:	fdiv   QWORD PTR [esi-0x71602a88]
  411c2e:	sbb    DWORD PTR [ecx+0x3fd161a9],0xffffff96
  411c35:	sbb    esi,DWORD PTR [esi+ebx*2+0x45]
  411c39:	in     al,0x72
  411c3b:	test   al,0xa3
  411c3d:	inc    edx
  411c3e:	ins    DWORD PTR es:[edi],dx
  411c3f:	arpl   dx,bx
  411c41:	mov    tr5,eax
  411c44:	push   esp
  411c45:	cmp    al,BYTE PTR [esi]
  411c47:	xchg   ebx,eax
  411c48:	mov    eax,0x8d4b45c4
  411c4d:	inc    edx
  411c4e:	dec    edx
  411c4f:	pop    ecx
  411c50:	retf   0x53bb
  411c53:	lea    edi,[edx-0x4b78e2cb]
  411c59:	xrelease mov DWORD PTR [eax+ebx*2+0x71],ebp
  411c5e:	push   edi
  411c5f:	ja     0x411c4c
  411c61:	popf   
  411c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c63:	out    0x39,al
  411c65:	adc    BYTE PTR [edi+0x4380d3da],al
  411c6b:	push   eax
  411c6c:	xchg   DWORD PTR [edi-0x119f9a57],eax
  411c72:	iret   
  411c73:	cmp    al,0x2d
  411c75:	dec    edi
  411c76:	retf   
  411c77:	pop    eax
  411c78:	arpl   WORD PTR [eax+0x31],cx
  411c7b:	mul    esp
  411c7d:	test   al,0x2c
  411c80:	push   es
  411c81:	sub    DWORD PTR [ecx],esp
  411c83:	mov    eax,0x79b1e62e
  411c88:	nop
  411c89:	not    ecx
  411c8b:	int3   
  411c8c:	xchg   DWORD PTR [esi+edi*1],edi
  411c8f:	adc    BYTE PTR [edx],cl
  411c91:	bound  ecx,QWORD PTR [edx]
  411c93:	imul   esp,eax,0x1a9c7492
  411c99:	and    eax,0x2610aae9
  411c9e:	sub    bh,BYTE PTR [edx-0x68]
  411ca1:	sbb    edi,ecx
  411ca3:	ins    BYTE PTR es:[edi],dx
  411ca4:	and    al,0xb2
  411ca6:	js     0x411d1a
  411ca8:	jno    0x411d12
  411caa:	adc    DWORD PTR [eax+0x17e65a46],eax
  411cb0:	fmul   DWORD PTR [esi]
  411cb2:	lds    eax,FWORD PTR [ebp+0x10]
  411cb5:	inc    ebx
  411cb6:	retf   
  411cb7:	mov    ds:0x36305840,eax
  411cbc:	test   DWORD PTR [ebp+0x17],esi
  411cbf:	mov    cl,0xab
  411cc1:	pop    ss
  411cc2:	pusha  
  411cc3:	adc    DWORD PTR [ebp+0x17],edi
  411cc6:	xor    eax,0x25f2ab0d
  411ccb:	pop    ebp
  411ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ccd:	mov    eax,0xfc073a06
  411cd2:	jle    0x411cc3
  411cd4:	je     0x411d39
  411cd6:	gs push ebp
  411cd8:	mov    dh,0xa4
  411cda:	push   edx
  411cdb:	pusha  
  411cdc:	push   eax
  411cdd:	cwde   
  411cde:	fisttp QWORD PTR ds:0x1aaa2f15
  411ce4:	pop    ds
  411ce5:	xlat   BYTE PTR ds:[ebx]
  411ce6:	mov    ah,dh
  411ce8:	mov    bh,0xab
  411cea:	call   0xb7262b76
  411cef:	sti    
  411cf0:	push   ebp
  411cf1:	add    esp,edx
  411cf3:	es test esi,edx
  411cf6:	std    
  411cf7:	inc    ebx
  411cf8:	inc    edx
  411cf9:	or     BYTE PTR [edx],al
  411cfb:	pop    es
  411cfc:	inc    ebx
  411cfd:	sub    al,0xb5
  411cff:	sar    DWORD PTR [edi-0x7b],0x95
  411d03:	stc    
  411d04:	cmp    ebx,DWORD PTR [ebx]
  411d06:	loopne 0x411cfd
  411d08:	mov    eax,0xc2a4d75f
  411d0d:	xchg   esi,eax
  411d0e:	rcr    DWORD PTR [edi-0x532d7569],0x8c
  411d15:	pop    ebx
  411d16:	mov    ds:0xad55dd0d,eax
  411d1b:	rol    DWORD PTR [ecx],cl
  411d1d:	fsubr  QWORD PTR [edi]
  411d1f:	stc    
  411d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d21:	icebp  
  411d22:	repnz cmp al,0x8b
  411d25:	jo     0x411ccc
  411d27:	mov    ebx,0xc990aa7f
  411d2c:	xor    ch,BYTE PTR [ecx]
  411d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d2f:	inc    ebx
  411d30:	xchg   esp,eax
  411d31:	mov    ebp,0x37f201b
  411d36:	fld    TBYTE PTR [ecx-0x5b]
  411d39:	sbb    ebp,ebx
  411d3b:	pop    edi
  411d3c:	loopne 0x411da2
  411d3e:	stos   DWORD PTR es:[edi],eax
  411d3f:	mov    WORD PTR [esi-0x7e],?
  411d42:	shl    DWORD PTR [ebp-0x57],0xfa
  411d46:	out    0x34,eax
  411d48:	test   eax,0xf23e42f0
  411d4d:	inc    ebp
  411d4e:	push   ecx
  411d4f:	cs shl ebp,1
  411d52:	push   edi
  411d53:	das    
  411d54:	mov    eax,ds:0x9cd77026
  411d59:	fmul   DWORD PTR [eax+ebx*2]
  411d5c:	loope  0x411d7d
  411d5e:	out    dx,eax
  411d5f:	call   0xfc2287f8
  411d64:	mov    edx,0x6cfaea91
  411d69:	retf   
  411d6a:	add    DWORD PTR [edx+0x677f03eb],edx
  411d70:	add    ebx,DWORD PTR [ebx+edi*1+0x70157bfa]
  411d77:	xchg   edx,eax
  411d78:	cmp    ah,BYTE PTR [edx-0x5d]
  411d7b:	pop    ss
  411d7c:	pop    ds
  411d7d:	scas   al,BYTE PTR es:[edi]
  411d7e:	loop   0x411da4
  411d80:	cmp    ch,dh
  411d82:	mov    eax,0x8116062b
  411d87:	or     eax,eax
  411d89:	mov    edi,esp
  411d8b:	jb     0x411ddc
  411d8d:	pop    fs
  411d8f:	xchg   edx,eax
  411d90:	int3   
  411d91:	aas    
  411d92:	xor    ebx,DWORD PTR [edi-0x5100847a]
  411d98:	fstp   st(2)
  411d9a:	sar    BYTE PTR [eax+0x5fbb97ac],1
  411da0:	dec    edx
  411da1:	enter  0xa227,0xf1
  411da5:	int    0x5b
  411da7:	fdivr  DWORD PTR [ebx+0x41c0b3af]
  411dad:	cld    
  411dae:	ins    DWORD PTR es:[edi],dx
  411daf:	add    esp,DWORD PTR [ebp+0x79]
  411db2:	mov    BYTE PTR [edi+0x5d],0x64
  411db6:	enter  0xe68d,0xe0
  411dba:	(bad)  [esi+edx*4]
  411dbd:	and    eax,DWORD PTR [ebp+0x2109bdda]
  411dc3:	lea    ebp,[ecx-0x7e1d84d0]
  411dc9:	mov    ch,BYTE PTR [esi-0x23]
  411dcc:	or     eax,0xbca827d
  411dd1:	fs ins BYTE PTR es:[di],dx
  411dd4:	mov    edx,0xd47308b9
  411dd9:	fadd   QWORD PTR [edx]
  411ddb:	std    
  411ddc:	fstp   DWORD PTR [esp+ecx*4]
  411ddf:	cmp    bh,BYTE PTR [edi]
  411de1:	or     BYTE PTR [edi],dh
  411de3:	fst    DWORD PTR [edi+0x421db1e6]
  411de9:	and    eax,0x51aa4080
  411dee:	pop    ebx
  411def:	test   BYTE PTR [ecx-0x66],bl
  411df2:	add    BYTE PTR [edx],bh
  411df4:	mov    ch,0xa3
  411df6:	push   ecx
  411df7:	and    al,0x57
  411df9:	mov    bh,0x2b
  411dfb:	es popa 
  411dfd:	inc    edx
  411dfe:	retf   
  411dff:	scas   al,BYTE PTR es:[edi]
  411e00:	mov    bl,0x28
  411e02:	in     eax,dx
  411e03:	(bad)  
  411e04:	xchg   ebx,eax
  411e05:	dec    esp
  411e06:	repz shl BYTE PTR [edx-0x70],cl
  411e0a:	push   ecx
  411e0b:	aad    0x74
  411e0d:	push   eax
  411e0e:	jge    0x411e25
  411e10:	jl     0x411e1e
  411e12:	ja     0x411e31
  411e14:	in     al,0xd5
  411e16:	xor    cl,bl
  411e18:	ret    0x84bd
  411e1b:	push   esp
  411e1c:	xchg   DWORD PTR [ebx+0x5a6cb54f],esi
  411e22:	mov    bh,0xeb
  411e24:	ds (bad) 
  411e27:	ds push esp
  411e29:	test   eax,0xf1be0863
  411e2e:	cmp    BYTE PTR [eax],cl
  411e30:	cwde   
  411e31:	mov    bh,0xc5
  411e33:	(bad)  
  411e35:	dec    edx
  411e36:	aaa    
  411e37:	aam    0x9d
  411e39:	cld    
  411e3a:	bound  esp,QWORD PTR [edi-0x7c]
  411e3d:	fcom   DWORD PTR [edi+0x36]
  411e40:	cmp    al,0xe5
  411e42:	add    BYTE PTR [edx+edi*2+0x6e7137c1],cl
  411e49:	xlat   BYTE PTR ds:[ebx]
  411e4a:	in     eax,0x47
  411e4c:	lock mov ch,BYTE PTR [ebp-0x35]
  411e50:	aas    
  411e51:	fs mov cl,0xe6
  411e54:	dec    ch
  411e56:	adc    dl,dl
  411e58:	mov    BYTE PTR [eax-0x608e9a95],cl
  411e5e:	and    cl,bh
  411e60:	popf   
  411e61:	mov    cl,BYTE PTR [esi+esi*1]
  411e64:	sbb    bl,cl
  411e66:	pushf  
  411e67:	jl     0x411e74
  411e69:	mov    bl,0x6e
  411e6b:	mov    esi,0x751e497
  411e70:	xor    cl,BYTE PTR [edi]
  411e72:	in     al,0x62
  411e74:	addr16 mov ebx,eax
  411e77:	mov    esi,0xc546f0f0
  411e7c:	fsubp  st(1),st
  411e7e:	cmp    al,0x46
  411e80:	mov    esi,0x6e6161e
  411e85:	adc    DWORD PTR [edi+0x54],edi
  411e88:	aam    0xf
  411e8a:	mov    esi,0xeac2d16a
  411e8f:	cli    
  411e90:	inc    esi
  411e91:	out    0x16,al
  411e93:	and    bl,BYTE PTR cs:[ebp-0x2a]
  411e97:	mov    ah,0xb0
  411e99:	fiadd  WORD PTR [edx+edi*8+0x5e2ae2d0]
  411ea0:	or     edi,DWORD PTR [esi]
  411ea2:	push   esp
  411ea3:	aam    0x97
  411ea5:	push   esi
  411ea6:	cmp    eax,0xf76c0ce7
  411eab:	ja     0x411f15
  411ead:	addr16 and eax,0x52e16700
  411eb3:	add    al,0xdc
  411eb5:	into   
  411eb6:	lahf   
  411eb7:	daa    
  411eb8:	adc    DWORD PTR [ebx+0x4ba610aa],ebx
  411ebe:	call   0x95c045c1
  411ec3:	(bad)  
  411ec5:	add    DWORD PTR [ecx-0x6cdd1e99],0xfdc50c5a
  411ecf:	dec    edx
  411ed0:	adc    eax,0x42c76ca1
  411ed5:	xor    edi,DWORD PTR [ecx-0x61]
  411ed8:	fsubr  st(7),st
  411eda:	jnp    0x411f14
  411edc:	shl    BYTE PTR [edx],cl
  411ede:	aaa    
  411edf:	cmp    DWORD PTR [ecx+0x2a33e9ed],0xffffff85
  411ee6:	or     edi,DWORD PTR [edx-0x42]
  411ee9:	or     edi,ebp
  411eeb:	dec    edx
  411eec:	xor    ebp,DWORD PTR [ecx]
  411eee:	imul   ebx,DWORD PTR [ecx+ecx*2],0xa077419
  411ef5:	into   
  411ef6:	mov    eax,ds:0xf79e252b
  411efb:	stos   DWORD PTR es:[edi],eax
  411efc:	sub    ch,al
  411efe:	stc    
  411eff:	sbb    al,0x54
  411f01:	lea    eax,[ebp+edi*4+0x1302d7b5]
  411f08:	mov    edx,0x3748c453
  411f0d:	les    edi,FWORD PTR [edi-0x2]
  411f10:	sahf   
  411f11:	sbb    ebp,DWORD PTR [eax-0xe]
  411f14:	push   ss
  411f15:	mov    edi,0x3bf84535
  411f1a:	and    al,0x11
  411f1c:	push   eax
  411f1d:	mov    dl,0x8f
  411f1f:	paddd  mm1,QWORD PTR [eax-0x347485d7]
  411f26:	and    bl,BYTE PTR [ebp+0x52049182]
  411f2c:	fisttp DWORD PTR [edi]
  411f2e:	mov    esi,0xc83175e9
  411f33:	cmp    eax,0x9513cf2c
  411f38:	bound  edx,QWORD PTR [eax+eax*8-0xf]
  411f3c:	stc    
  411f3d:	sub    eax,0x21cf7d69
  411f42:	pop    ebp
  411f43:	ins    DWORD PTR es:[edi],dx
  411f44:	hlt    
  411f45:	mov    cl,0x46
  411f47:	and    DWORD PTR [edx+0x40],ebx
  411f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f4b:	retf   0x2cd4
  411f4e:	imul   edx,DWORD PTR [ebx],0x69
  411f51:	pop    eax
  411f52:	mov    ebp,ecx
  411f54:	inc    ebx
  411f55:	jg     0x411f8e
  411f57:	inc    esi
  411f58:	dec    ebp
  411f59:	gs xchg edx,eax
  411f5b:	inc    eax
  411f5c:	dec    eax
  411f5d:	mov    ds:0xdc9a2ba1,al
  411f62:	mov    BYTE PTR [edx-0x5cd145e4],dh
  411f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f69:	in     al,0x1c
  411f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f6c:	shl    BYTE PTR [esi],cl
  411f6e:	cmc    
  411f6f:	std    
  411f70:	mov    edx,0x4db89d4f
  411f75:	jmp    0x51e916ef
  411f7a:	mov    bh,0x8e
  411f7c:	jge    0x411fa9
  411f7e:	int    0x9d
  411f80:	push   edi
  411f81:	ins    DWORD PTR es:[edi],dx
  411f82:	pop    eax
  411f83:	and    BYTE PTR [edi+0x6b],dl
  411f86:	sbb    al,0x9b
  411f88:	adc    al,0x31
  411f8a:	adc    eax,0x2f14505b
  411f8f:	xchg   esi,eax
  411f90:	mov    esp,0x7bddb24
  411f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f96:	ret    0xb9b3
  411f99:	jo     0x411fae
  411f9b:	pop    ecx
  411f9c:	dec    edx
  411f9d:	(bad)  
  411f9e:	(bad)  [edx-0x5ce16b88]
  411fa4:	frstor [eax+0x464b89c]
  411faa:	dec    esp
  411fab:	(bad)  
  411fac:	push   esp
  411fad:	and    eax,0x4ab05130
  411fb2:	jp     0x411f43
  411fb4:	push   ebp
  411fb5:	mov    BYTE PTR [esi*1-0x6bae3ffd],bl
  411fbc:	in     eax,0x3c
  411fbe:	xchg   ecx,eax
  411fbf:	lds    cx,DWORD PTR [edx-0x59]
  411fc3:	xchg   DWORD PTR [edi+0x4a],esi
  411fc6:	ret    
  411fc7:	xchg   ecx,eax
  411fc8:	pop    edx
  411fc9:	adc    al,0x56
  411fcb:	test   DWORD PTR [edx],ecx
  411fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fce:	mov    al,ds:0xd6100d3e
  411fd3:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9b
  411fd7:	mov    dl,0x74
  411fd9:	xchg   edx,eax
  411fda:	sbb    al,0x20
  411fdc:	mov    dl,0x6c
  411fde:	ret    0x83cc
  411fe1:	add    al,0x93
  411fe3:	and    esp,ebx
  411fe5:	mov    bh,0xc8
  411fe7:	xlat   BYTE PTR ds:[ebx]
  411fe8:	sub    DWORD PTR [ebp+0x6c],edi
  411feb:	inc    ecx
  411fec:	pshufw mm4,QWORD PTR [edi],0xd2
  411ff0:	in     eax,0xf9
  411ff2:	or     BYTE PTR [esi-0x152d520],ch
  411ff8:	jns    0x412049
  411ffa:	sbb    BYTE PTR [ecx+0x66d6e723],ch
  412000:	ds retf 0x44a7
  412004:	xor    eax,0xf17bef34
  412009:	shr    DWORD PTR [esi],cl
  41200b:	inc    edi
  41200c:	test   BYTE PTR [ebx-0x61],0xc
  412010:	pop    ecx
  412011:	cmp    eax,0xcb593739
  412016:	ret    
  412017:	mov    edx,0x6e35dee
  41201c:	scas   al,BYTE PTR es:[edi]
  41201d:	cli    
  41201e:	xchg   esp,eax
  41201f:	push   cs
  412020:	xchg   esp,eax
  412021:	add    BYTE PTR [eax],0xb0
  412024:	adc    esi,edx
  412026:	in     al,dx
  412027:	jnp    0x411ffd
  412029:	mov    esp,0xfbb98c38
  41202e:	xchg   esp,eax
  41202f:	xchg   esi,eax
  412030:	scas   eax,DWORD PTR es:[edi]
  412031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412032:	and    eax,0x2c6eeb1c
  412037:	push   ds
  412038:	push   ebx
  412039:	and    ah,BYTE PTR [eax-0x47]
  41203c:	cmp    ch,al
  41203e:	sub    al,al
  412040:	addr16 fs stc 
  412043:	imul   eax,DWORD PTR [esi+0x72351928],0xffffff98
  41204a:	push   ebp
  41204b:	xor    al,0x1
  41204d:	ins    DWORD PTR es:[edi],dx
  41204e:	pop    ecx
  41204f:	(bad)  
  412051:	adc    ebx,esi
  412053:	jmp    0x411fee
  412055:	std    
  412056:	pop    ebx
  412057:	pop    ecx
  412058:	clc    
  412059:	jnp    0x4120ab
  41205b:	pop    ds
  41205c:	sbb    DWORD PTR [eax],eax
  41205e:	dec    ecx
  41205f:	jbe    0x4120de
  412061:	mov    esp,0xba263ddd
  412066:	in     al,dx
  412067:	xchg   DWORD PTR [eax+0x4a],esp
  41206a:	rcl    DWORD PTR [ebx+0x6f4cd339],1
  412070:	out    dx,eax
  412071:	sub    DWORD PTR [ecx+0x1b],edi
  412074:	std    
  412075:	jl     0x412057
  412077:	lock pop ds
  412079:	aaa    
  41207a:	sub    eax,0x85f1a8b4
  41207f:	pushf  
  412080:	xor    esi,edi
  412082:	loop   0x4120b0
  412084:	in     al,dx
  412085:	daa    
  412086:	sti    
  412087:	fldcw  WORD PTR [eax]
  412089:	iret   
  41208a:	js     0x4120a2
  41208c:	xlat   BYTE PTR ds:[ebx]
  41208d:	stos   DWORD PTR es:[edi],eax
  41208e:	aas    
  41208f:	inc    esi
  412090:	cdq    
  412091:	rol    cl,0x5
  412094:	mov    bh,0x13
  412096:	and    BYTE PTR [ebx+0x714db0f0],ch
  41209c:	xchg   esi,eax
  41209d:	inc    ebp
  41209e:	xchg   ecx,eax
  41209f:	ret    0x8d9b
  4120a2:	fnstenv [edi]
  4120a4:	xor    esi,DWORD PTR ds:0x9f7a9c68
  4120aa:	dec    ecx
  4120ab:	jne    0x4120a1
  4120ad:	in     eax,0x57
  4120af:	mov    ds:0x92107847,eax
  4120b4:	out    0xc8,al
  4120b6:	push   edx
  4120b7:	mov    al,0x62
  4120b9:	(bad)  
  4120ba:	scas   eax,DWORD PTR es:[edi]
  4120bb:	retf   
  4120bc:	(bad)  
  4120bd:	push   edi
  4120be:	shl    BYTE PTR [esi+ebx*4+0x3f],1
  4120c2:	inc    esp
  4120c3:	lods   al,BYTE PTR ds:[esi]
  4120c4:	mov    cl,BYTE PTR [ebx]
  4120c6:	hlt    
  4120c7:	sub    DWORD PTR [ebx-0x3c],edi
  4120ca:	sbb    ebx,DWORD PTR [edi+0x4]
  4120cd:	inc    esi
  4120ce:	add    DWORD PTR [esi+0x3acef244],eax
  4120d4:	popa   
  4120d5:	sbb    cl,BYTE PTR [edi-0x41]
  4120d8:	aam    0x89
  4120da:	jne    0x4120bd
  4120dc:	add    ecx,DWORD PTR [eax-0x5b7993c1]
  4120e2:	(bad)  
  4120e3:	(bad)  
  4120e4:	xor    DWORD PTR [edi+0x1adb2b6f],0x8
  4120eb:	sub    eax,0xe9e100b7
  4120f0:	add    DWORD PTR [eax],edi
  4120f2:	mov    esp,0xced5f5fd
  4120f7:	xchg   DWORD PTR [esi],ebp
  4120f9:	fisttp DWORD PTR [ebp+0x79a705c]
  4120ff:	adc    eax,0x911406a1
  412104:	push   esp
  412105:	outs   dx,BYTE PTR ds:[esi]
  412106:	push   esi
  412107:	mov    DWORD PTR ds:0xc3b49543,edx
  41210d:	dec    edx
  41210e:	fs xor ebp,esi
  412111:	cli    
  412112:	adc    DWORD PTR [ebx+0xb],esi
  412115:	sub    ebp,esi
  412117:	jmp    0xc2b2f270
  41211c:	cmp    BYTE PTR [ebp-0x5a9a39e3],0x5d
  412123:	in     eax,0x85
  412125:	daa    
  412126:	mov    dh,0x3b
  412128:	lea    ebx,[edx-0x6f782a0f]
  41212e:	aad    0x1c
  412130:	(bad)  
  412131:	(bad)  
  412133:	stc    
  412134:	imul   edi,DWORD PTR [ebp+0x2d],0x2f10271c
  41213b:	adc    al,0xe7
  41213d:	pop    ss
  41213e:	add    BYTE PTR [edi-0x7f],ch
  412141:	loope  0x4120eb
  412143:	leave  
  412144:	mov    ebx,DWORD PTR [esi-0x52526883]
  41214a:	xor    al,0x62
  41214c:	cmp    esi,ecx
  41214e:	cs add dl,ch
  412151:	jns    0x412193
  412153:	or     DWORD PTR [esi-0xd3375eb],0x97eadbd7
  41215d:	test   eax,edx
  41215f:	sbb    ebp,DWORD PTR [edx+0x2c77a805]
  412165:	bound  ebx,QWORD PTR [ebx+0x69]
  412168:	repz sub edx,DWORD PTR es:[ebx-0x7295e1e2]
  412170:	jp     0x412107
  412172:	jne    0x4121e3
  412174:	mov    ecx,0xeb17e294
  412179:	sahf   
  41217a:	inc    esi
  41217b:	push   eax
  41217c:	test   eax,0xaffec510
  412181:	ret    0x3d2d
  412184:	jmp    0xa1b81af9
  412189:	aam    0x60
  41218b:	std    
  41218c:	out    0x6,al
  41218e:	xchg   ebx,eax
  41218f:	ret    
  412190:	sub    eax,esi
  412192:	and    al,0xca
  412194:	adc    BYTE PTR [esi+0x294b4a65],0x7a
  41219b:	lods   eax,DWORD PTR ds:[esi]
  41219c:	add    DWORD PTR [eax],esp
  41219e:	jmp    0x8f714c4a
  4121a3:	leave  
  4121a4:	mov    eax,?
  4121a6:	test   BYTE PTR [edi+0x6a],0x7f
  4121aa:	sbb    BYTE PTR [edx-0x65f7a9bd],ch
  4121b0:	sbb    BYTE PTR [edx*1-0x2994db3b],cl
  4121b7:	aad    0xd1
  4121b9:	dec    ecx
  4121ba:	mov    bl,0x7c
  4121bc:	or     ah,BYTE PTR [ebp+0x6]
  4121bf:	in     eax,dx
  4121c0:	mov    ebp,0x3ac07be5
  4121c5:	dec    esi
  4121c6:	jno    0x41221e
  4121c8:	ins    BYTE PTR es:[edi],dx
  4121c9:	stos   BYTE PTR es:[edi],al
  4121ca:	dec    esp
  4121cb:	ret    
  4121cc:	xchg   ebx,eax
  4121cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121ce:	inc    esi
  4121cf:	fcmovnbe st,st(3)
  4121d1:	test   eax,0x8f5baeb1
  4121d6:	jo     0x412188
  4121d8:	jae    0x412213
  4121da:	cld    
  4121db:	push   ebp
  4121dc:	jmp    0xc06a0e89
  4121e1:	mov    WORD PTR [ebx-0x51],?
  4121e4:	xchg   ecx,eax
  4121e5:	adc    al,0x6d
  4121e7:	dec    edx
  4121e8:	fsub   DWORD PTR [edi]
  4121ea:	inc    eax
  4121eb:	mov    bh,BYTE PTR ds:0xc6ffd4d2
  4121f1:	aad    0x22
  4121f3:	out    0x0,eax
  4121f5:	cmp    DWORD PTR [edx-0x18],0xb56f934e
  4121fc:	mov    al,ds:0x5e49b550
  412201:	popa   
  412202:	or     dh,BYTE PTR [esp+ecx*1-0x125d23f7]
  412209:	test   bh,0x50
  41220c:	or     eax,0xdccd8e0c
  412211:	js     0x4121c7
  412213:	fcomp  st(5)
  412215:	sbb    esi,DWORD PTR [edi-0x6c8bec95]
  41221b:	adc    al,0x4c
  41221d:	test   eax,0xdc4251b4
  412222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412223:	stos   DWORD PTR es:[edi],eax
  412224:	jmp    0xcd4e:0xd049b85e
  41222b:	jnp    0x41222c
  41222d:	cs push edx
  41222f:	jge    0x412220
  412231:	sub    eax,0x58912b40
  412236:	xchg   esi,eax
  412237:	sti    
  412238:	push   cs
  412239:	add    BYTE PTR [ebx+0x6432808b],ch
  41223f:	jne    0x41226a
  412241:	pop    ebp
  412242:	push   ebp
  412243:	jnp    0x412280
  412245:	test   DWORD PTR [eax+ebx*8],ebx
  412248:	pop    ecx
  412249:	push   edi
  41224a:	stos   BYTE PTR es:[edi],al
  41224b:	iret   
  41224c:	je     0x4122a1
  41224e:	loope  0x412254
  412250:	pop    eax
  412251:	and    DWORD PTR [ebp+0x48],edi
  412254:	mov    ebp,0x6599e890
  412259:	xor    dl,ch
  41225b:	cmp    esi,DWORD PTR [eax]
  41225d:	add    ah,ch
  41225f:	cmp    BYTE PTR [ecx+edx*8+0x78e7b4bd],al
  412266:	sub    al,0x33
  412268:	cli    
  412269:	push   edx
  41226a:	add    eax,0x2060af9e
  41226f:	neg    DWORD PTR [edx]
  412271:	mov    eax,ds:0xd6da4791
  412276:	loope  0x412205
  412278:	pop    ds
  412279:	pop    edx
  41227a:	push   edi
  41227b:	push   edi
  41227c:	mov    al,ds:0x7ec27a26
  412281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412282:	dec    ecx
  412283:	cmp    al,0x22
  412285:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412287:	dec    ebx
  412288:	add    al,ch
  41228a:	mov    edx,0xc23ea4e1
  41228f:	and    eax,0x7b14fe3a
  412294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412295:	(bad)  
  412296:	jecxz  0x41230c
  412298:	(bad)  
  412299:	outs   dx,DWORD PTR ds:[esi]
  41229a:	enter  0xcc7d,0x87
  41229e:	jmp    0x1cbb8536
  4122a3:	(bad)  
  4122a4:	mov    eax,0x48c2ae9e
  4122a9:	test   ebx,0x6bb7e8dd
  4122af:	mov    eax,ds:0xa95b346d
  4122b4:	fisttp WORD PTR [esi]
  4122b6:	aas    
  4122b7:	dec    edi
  4122b8:	cdq    
  4122b9:	call   FWORD PTR [ebx]
  4122bb:	sbb    eax,0x20b6f1d8
  4122c0:	dec    ebp
  4122c1:	fnstsw WORD PTR [edi+0x4e]
  4122c4:	mov    eax,esi
  4122c6:	sbb    bl,BYTE PTR [eax]
  4122c8:	retf   
  4122c9:	adc    ecx,DWORD PTR [ecx]
  4122cb:	(bad)  
  4122cc:	test   dh,dh
  4122ce:	fdiv   DWORD PTR [bx+di-0x5d5c]
  4122d3:	pop    ds
  4122d4:	cmp    eax,ebx
  4122d6:	sar    DWORD PTR [ecx+eiz*1],0xbf
  4122da:	dec    eax
  4122db:	dec    esp
  4122dc:	les    ecx,FWORD PTR [edx+0x4cda917f]
  4122e2:	scas   al,BYTE PTR es:[edi]
  4122e3:	and    BYTE PTR [esp+ecx*4-0x6af69e84],ch
  4122ea:	or     al,0xdb
  4122ec:	sub    dl,BYTE PTR [edx]
  4122ee:	ror    esi,cl
  4122f0:	scas   eax,DWORD PTR es:[edi]
  4122f1:	inc    BYTE PTR [ebx-0x74604fe]
  4122f7:	sub    DWORD PTR [ebx-0x2f],esi
  4122fa:	cwde   
  4122fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122fc:	(bad)  
  4122fd:	pop    esp
  4122fe:	inc    esp
  4122ff:	inc    eax
  412300:	sub    bl,bh
  412302:	stc    
  412303:	sbb    al,0xa5
  412305:	xchg   edi,eax
  412306:	leave  
  412307:	fmul   DWORD PTR [edx-0x78]
  41230a:	jg     0x412302
  41230c:	mov    ebp,0xea1eb629
  412311:	mov    WORD PTR [esi+0x18],cs
  412314:	ficomp WORD PTR [eax-0x22a98467]
  41231a:	push   ds
  41231b:	dec    eax
  41231c:	xchg   esi,eax
  41231d:	dec    edx
  41231e:	(bad)  
  412320:	ficomp WORD PTR [edi+esi*8-0x77062a1c]
  412327:	add    BYTE PTR [esi+0x4619c45],ch
  41232d:	jg     0x412309
  41232f:	xor    dh,BYTE PTR [ecx]
  412331:	in     al,0xd8
  412333:	adc    dh,BYTE PTR ds:0xaa5fd74d
  412339:	dec    esi
  41233a:	push   esi
  41233b:	rcl    DWORD PTR ds:0xa15ed635,cl
  412341:	jp     0x4122c5
  412343:	or     al,BYTE PTR [esi]
  412345:	xchg   BYTE PTR [ebx],bh
  412347:	and    eax,0x2f173769
  41234c:	or     esi,esp
  41234e:	xchg   edi,eax
  41234f:	imul   esp,DWORD PTR [esp+ecx*2-0x5ed52cf4],0x8b6924a4
  41235a:	push   ebp
  41235b:	or     BYTE PTR [ecx+0x42b21a25],al
  412361:	add    BYTE PTR [eax],al
  412363:	add    BYTE PTR [eax],al
  412365:	add    cl,ch
  412367:	sldt   WORD PTR [eax]
  41236a:	add    BYTE PTR [ebx],dh
  41236c:	(bad)  [ebx]
  41236e:	sbb    eax,0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	test   dh,0xb6
  412568:	dec    edx
  412569:	or     bh,dl
  41256b:	mov    al,BYTE PTR [ebx-0x7ca1c17d]
  412571:	cmp    esp,0x78
  412574:	cmp    bh,BYTE PTR [ebp+0x11bd7a4c]
  41257a:	fwait
  41257b:	dec    ecx
  41257c:	push   esi
  41257d:	xchg   ebp,eax
  41257e:	mov    eax,DWORD PTR ds:0x60e2ad91
  412584:	jg     0x41254a
  412586:	add    DWORD PTR [edi+ecx*2-0x16],esi
  41258a:	mov    edi,0x2174469e
  41258f:	fisttp WORD PTR [esi-0x8906d48]
  412595:	cmp    cl,BYTE PTR [eax-0x28472872]
  41259b:	retf   
  41259c:	(bad)  
  41259d:	lods   eax,DWORD PTR ds:[esi]
  41259e:	mov    al,0xe2
  4125a0:	mov    DWORD PTR [esi-0x61],edi
  4125a3:	out    dx,eax
  4125a4:	or     bl,dl
  4125a6:	sub    ebx,ecx
  4125a8:	jl     0x4125e2
  4125aa:	jbe    0x4125c0
  4125ac:	cmp    eax,0x827403ff
  4125b1:	jge    0x41256c
  4125b3:	and    al,0x45
  4125b5:	addr16 jp 0x412574
  4125b8:	xor    eax,ebp
  4125ba:	js     0x4125fa
  4125bc:	add    BYTE PTR [ebx+0x3b618f85],ch
  4125c2:	repnz stos BYTE PTR es:[edi],al
  4125c4:	outs   dx,BYTE PTR ds:[esi]
  4125c5:	enter  0xea23,0xef
  4125c9:	jl     0x41255c
  4125cb:	shr    al,1
  4125cd:	sar    BYTE PTR [eax+0x6ee9d4a0],0x7e
  4125d4:	rol    BYTE PTR [ecx],1
  4125d6:	shr    BYTE PTR [edx-0x5fa0a60f],cl
  4125dc:	xor    eax,0x5093c7fe
  4125e1:	xchg   edx,edi
  4125e3:	pop    ds
  4125e4:	ds jbe 0x412616
  4125e7:	mov    ds,WORD PTR [ebx+0x7334b860]
  4125ed:	loop   0x41260c
  4125ef:	ja     0x4125e7
  4125f1:	std    
  4125f2:	mov    eax,ds:0x5cd2d598
  4125f7:	mov    DWORD PTR [ecx],0xab3a739c
  4125fd:	(bad)  
  4125fe:	call   0x1e84099f
  412603:	xlat   BYTE PTR ds:[ebx]
  412604:	ud2    
  412606:	xchg   ecx,eax
  412607:	dec    esi
  412608:	jnp    0x412617
  41260a:	add    BYTE PTR [ebp-0x6f],al
  41260d:	in     al,dx
  41260e:	sub    ecx,0x41
  412611:	lds    edi,FWORD PTR [ebp+0x3c]
  412614:	pop    ebx
  412615:	and    edx,0xf6d88835
  41261b:	hlt    
  41261c:	cmp    esp,DWORD PTR [edx-0x5cdcb235]
  412622:	jns    0x412625
  412624:	sub    edi,DWORD PTR [ecx+eiz*8-0xf]
  412628:	xchg   esi,eax
  412629:	popf   
  41262a:	ins    BYTE PTR es:[edi],dx
  41262b:	fdivr  QWORD PTR [ecx]
  41262d:	addr16 loop 0x41268b
  412630:	xlat   BYTE PTR ds:[ebx]
  412631:	popa   
  412632:	test   DWORD PTR [ecx+0x5e],ebx
  412635:	aas    
  412636:	fmul   QWORD PTR [ecx+0x708e6efd]
  41263c:	mov    bh,0x91
  41263e:	push   ss
  41263f:	aas    
  412640:	xor    DWORD PTR [eax+0x49],ecx
  412643:	out    dx,al
  412644:	out    0x53,al
  412646:	mov    ?,WORD PTR [ebp+0x1b]
  412649:	imul   ebp,ebp,0x4
  41264c:	add    al,0xad
  41264e:	out    0xb0,eax
  412650:	int    0x95
  412652:	test   al,0x78
  412654:	pop    ss
  412655:	imul   esi,eax,0xffffffb9
  412658:	cmp    BYTE PTR [esi],ah
  41265a:	xchg   ebx,eax
  41265b:	das    
  41265c:	js     0x412619
  41265e:	xor    eax,0xe09b98d3
  412663:	inc    edi
  412664:	pop    edx
  412665:	xchg   edi,eax
  412666:	or     ebx,DWORD PTR [esi]
  412668:	fmul   DWORD PTR [edx+0x795b3296]
  41266e:	mov    eax,ds:0x29e95153
  412673:	int    0x41
  412675:	and    ebx,esp
  412677:	push   es
  412678:	sub    al,0x70
  41267a:	pushf  
  41267b:	sbb    DWORD PTR [eiz*2-0x1e4c938c],eax
  412682:	inc    edx
  412683:	add    ch,al
  412685:	push   ecx
  412686:	arpl   WORD PTR [edx+0x43],si
  412689:	dec    ebx
  41268a:	cmp    al,0xc6
  41268c:	mov    eax,ds:0x3415c01a
  412691:	add    DWORD PTR [ecx+eax*1],eax
  412694:	push   ebx
  412695:	(bad)  
  412696:	shr    ebx,cl
  412698:	and    eax,0xabe6afda
  41269d:	push   esi
  41269e:	lds    edi,FWORD PTR [edx+0x38]
  4126a1:	jmp    0x41267d
  4126a3:	imul   eax,DWORD PTR [edx+ecx*8-0x2c3a9012],0xffffffac
  4126ab:	addr16 adc cl,cl
  4126ae:	out    dx,eax
  4126af:	sbb    al,0x23
  4126b1:	aaa    
  4126b2:	adc    ah,BYTE PTR [eax]
  4126b4:	mov    ecx,0xef6c4021
  4126b9:	jge    0x4126ce
  4126bb:	adc    DWORD PTR [esi+0x12],0x26590323
  4126c2:	mov    dh,0x23
  4126c4:	rcr    DWORD PTR [eax+0x49],1
  4126c7:	ss js  0x4126e0
  4126ca:	sbb    BYTE PTR [eax-0x30f95afe],ah
  4126d0:	xchg   edx,eax
  4126d1:	push   0xffffffa8
  4126d3:	aam    0xaf
  4126d5:	add    DWORD PTR [edi+0x7d],eax
  4126d8:	cmp    edi,DWORD PTR [ebp-0x3f6c56a9]
  4126de:	out    dx,eax
  4126df:	sub    edi,DWORD PTR [ebx+0x5487eb5e]
  4126e5:	ror    DWORD PTR [edx],0x4e
  4126e8:	or     BYTE PTR [ebp-0x9],al
  4126eb:	jp     0x4126ec
  4126ed:	mov    edx,0x8f171053
  4126f2:	in     al,dx
  4126f3:	arpl   WORD PTR [edi],si
  4126f5:	jmp    0xec3c65f3
  4126fa:	enter  0xf24f,0xc6
  4126fe:	(bad)  
  4126ff:	addr16 sbb al,0x6e
  412702:	cmp    bh,al
  412704:	(bad)  
  412705:	or     bh,BYTE PTR [edx-0x3c608d46]
  41270b:	imul   esi,DWORD PTR [esi-0x43],0x5b739a2e
  412712:	mov    edi,DWORD PTR [edx-0x1a]
  412715:	sbb    eax,0x609eb7c6
  41271a:	and    BYTE PTR [edx-0x6ead030e],dl
  412720:	cmp    bl,dh
  412722:	cmp    al,0xb0
  412724:	stc    
  412725:	inc    esp
  412726:	sbb    ebp,DWORD PTR [edx+ebp*4]
  412729:	push   0x1f
  41272b:	and    ebp,0x78
  41272e:	call   0x2ec30ef3
  412733:	dec    edi
  412734:	(bad)  
  412735:	xor    ch,cl
  412737:	jl     0x4126ef
  412739:	enter  0xe313,0xc5
  41273d:	iret   
  41273e:	inc    edi
  41273f:	mov    DWORD PTR [eax+0x57c037b8],0x50d297ed
  412749:	aas    
  41274a:	dec    edi
  41274b:	mov    esi,0x7a88c150
  412750:	out    dx,al
  412751:	stos   BYTE PTR es:[edi],al
  412752:	loop   0x4126ea
  412754:	add    al,0x8a
  412756:	mov    es,edx
  412758:	sub    al,BYTE PTR [ebp-0x6e]
  41275b:	retf   0x920d
  41275e:	xchg   ecx,eax
  41275f:	push   ebp
  412760:	cwde   
  412761:	jle    0x4126f9
  412763:	leave  
  412764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412765:	cmp    eax,edi
  412767:	jo     0x41275c
  412769:	adc    eax,0x766efbeb
  41276e:	add    esp,DWORD PTR [ebx+0x7d]
  412771:	(bad)  
  412772:	hlt    
  412773:	dec    eax
  412774:	(bad)  
  412775:	jle    0x412717
  412777:	pop    esp
  412778:	into   
  412779:	inc    ecx
  41277a:	or     BYTE PTR ds:0x6f61,ch
  41277f:	jae    0x412791
  412781:	imul   eax,DWORD PTR [edi],0x463310c5
  412787:	mov    dh,0xcd
  412789:	cwde   
  41278a:	xchg   esi,eax
  41278b:	ficomp DWORD PTR [esi-0x32]
  41278e:	bound  esi,QWORD PTR [eax]
  412790:	fld    DWORD PTR [eax+0x2d4ed0a5]
  412796:	push   edi
  412797:	pop    eax
  412798:	sub    dl,dh
  41279a:	out    0x40,eax
  41279c:	arpl   WORD PTR [ebx],si
  41279e:	gs data16 sbb al,0x13
  4127a2:	dec    esi
  4127a3:	pop    edi
  4127a4:	(bad)  
  4127a5:	loope  0x4127f2
  4127a7:	cli    
  4127a8:	lahf   
  4127a9:	cmp    BYTE PTR [ecx],ch
  4127ab:	xor    BYTE PTR [ebp-0x5b7bb2e3],cl
  4127b1:	es aad 0x89
  4127b4:	ins    BYTE PTR es:[edi],dx
  4127b5:	mov    eax,ds:0xb9067826
  4127ba:	or     esp,DWORD PTR [ebx+ebx*2]
  4127bd:	dec    edx
  4127be:	popa   
  4127bf:	mov    es,WORD PTR [esp+edi*4+0x343e99d8]
  4127c6:	mov    esi,es
  4127c8:	and    eax,0x3751ccd1
  4127cd:	pop    esi
  4127ce:	mov    ebp,0x68234588
  4127d3:	jmp    0xa99a9c7
  4127d8:	(bad)  
  4127da:	pusha  
  4127db:	jmp    0xb9740c51
  4127e0:	mov    ecx,0x6da432e9
  4127e5:	mov    ds:0x6b0d5108,eax
  4127ea:	push   edx
  4127eb:	pop    edx
  4127ec:	adc    esp,esp
  4127ee:	call   0x8223:0x122c83ed
  4127f5:	add    edi,ebx
  4127f7:	xchg   esi,eax
  4127f8:	jmp    0x5a0d:0xddaa6db2
  4127ff:	(bad)  
  412800:	push   ss
  412801:	add    ecx,DWORD PTR [ebx]
  412803:	adc    al,0xb7
  412805:	out    0x9f,eax
  412807:	add    al,0x77
  412809:	inc    eax
  41280a:	bound  edx,QWORD PTR [edx-0x4d5a7e1]
  412810:	pusha  
  412811:	jmp    0x7276e1c2
  412816:	outs   dx,DWORD PTR ds:[esi]
  412817:	mov    edi,0x44471af4
  41281c:	jae    0x412854
  41281e:	mov    ah,0x70
  412820:	scas   eax,DWORD PTR es:[edi]
  412821:	inc    ebx
  412822:	hlt    
  412823:	mov    edx,0x37ab44d6
  412828:	adc    DWORD PTR [edx+0x42],0x1776e81c
  41282f:	push   ds
  412830:	jg     0x412833
  412832:	sub    dl,ah
  412834:	fs dec ecx
  412836:	ins    DWORD PTR es:[edi],dx
  412837:	stc    
  412838:	xchg   ebx,eax
  412839:	outs   dx,BYTE PTR ds:[esi]
  41283a:	mov    al,0x4a
  41283c:	push   ss
  41283d:	icebp  
  41283e:	mov    eax,DWORD PTR [edi]
  412840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412841:	and    BYTE PTR [ebx+0x2538821c],bh
  412847:	jg     0x412822
  412849:	mov    eax,ds:0x6e78384a
  41284e:	inc    esp
  41284f:	mov    bh,0x12
  412851:	lea    ebx,[ecx]
  412853:	aaa    
  412854:	mov    ch,0x23
  412856:	xorps  xmm6,XMMWORD PTR [ebx+0x8]
  41285a:	rol    DWORD PTR [ecx+0x2a1a9a13],cl
  412860:	sub    edx,ecx
  412862:	lea    ebx,[edi]
  412864:	sbb    cl,BYTE PTR [ecx-0x7b]
  412867:	jecxz  0x41284c
  412869:	outs   dx,BYTE PTR ds:[esi]
  41286a:	fsub   st,st(0)
  41286c:	popf   
  41286d:	inc    eax
  41286e:	push   ss
  41286f:	loope  0x4128a6
  412871:	je     0x4127f4
  412873:	in     eax,dx
  412874:	out    dx,al
  412875:	fdivr  DWORD PTR [eax]
  412877:	test   DWORD PTR [esi-0x3c],ebp
  41287a:	jle    0x412890
  41287c:	mov    DWORD PTR [edi],ebp
  41287e:	adc    BYTE PTR [eax+0x4445dbe3],cl
  412884:	popa   
  412885:	test   BYTE PTR [ebp+0x106e66e8],bl
  41288b:	repnz mov bl,0x56
  41288e:	cmp    al,0xc3
  412890:	push   edx
  412891:	jle    0x412873
  412893:	or     al,BYTE PTR [edi]
  412895:	mov    ds:0x6cd239cc,eax
  41289a:	push   DWORD PTR [edx+0x39]
  41289d:	xchg   esi,eax
  41289e:	cmp    DWORD PTR [ebx-0x54],esp
  4128a1:	repnz fcom QWORD PTR ds:[eax-0xc]
  4128a6:	sahf   
  4128a7:	jae    0x412850
  4128a9:	xchg   BYTE PTR [ebx+0x5ca6b312],al
  4128af:	adc    al,0x10
  4128b1:	jae    0x4128d5
  4128b3:	pop    edx
  4128b4:	mov    ebx,0xcbe21f4b
  4128b9:	js     0x4128aa
  4128bb:	mov    ebp,0xdbd1091e
  4128c0:	sub    al,0xd1
  4128c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128c3:	sbb    eax,0x50ff5a0f
  4128c8:	and    DWORD PTR [edi],ecx
  4128ca:	test   al,ch
  4128cc:	outs   dx,DWORD PTR ds:[esi]
  4128cd:	repz mov al,ds:0x60fdc53
  4128d3:	add    dl,ch
  4128d5:	das    
  4128d6:	and    BYTE PTR [edx],cl
  4128d8:	pop    esi
  4128d9:	leave  
  4128da:	imul   edi,DWORD PTR [edi+0x3f],0xffffffed
  4128de:	add    DWORD PTR [ecx+0xc],ebx
  4128e1:	sahf   
  4128e2:	cmp    eax,0x6a04e3fb
  4128e7:	mov    ebp,0xf1af80cf
  4128ec:	sub    eax,0x90f45f01
  4128f1:	sub    BYTE PTR [eax+0x692a301b],al
  4128f7:	in     eax,0xe0
  4128f9:	mov    dl,0xf8
  4128fb:	(bad)  
  4128fc:	lods   eax,DWORD PTR ds:[esi]
  4128fd:	stos   DWORD PTR es:[edi],eax
  4128fe:	pop    esp
  4128ff:	jnp    0x4128e4
  412901:	mov    ch,0xdb
  412903:	test   esi,0xe3e5e1d9
  412909:	ds loopne 0x4128e5
  41290c:	shl    esi,0x77
  41290f:	xor    al,0x6
  412911:	adc    ah,0x94
  412914:	dec    ecx
  412915:	sub    eax,0xd05211c1
  41291a:	push   eax
  41291b:	fdiv   QWORD PTR [edx]
  41291d:	rcl    edi,0xd6
  412920:	cmp    edi,edx
  412922:	push   edx
  412923:	fistp  DWORD PTR [ebp-0x3770c948]
  412929:	sbb    DWORD PTR [ebp+eax*4-0x4d0f18bb],ecx
  412930:	lock shl DWORD PTR fs:[edx-0x3131f9ef],0x7a
  412939:	ins    DWORD PTR es:[edi],dx
  41293a:	mov    eax,esp
  41293c:	imul   ebp,DWORD PTR [esi],0x6d479d35
  412942:	pusha  
  412943:	mov    ds:0x9faa07c1,al
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	pop    edx
  41294a:	mov    edi,0x286c48b4
  41294f:	dec    eax
  412950:	xchg   BYTE PTR [esi],bl
  412952:	daa    
  412953:	and    DWORD PTR [edi+ecx*8],esp
  412956:	das    
  412957:	stos   BYTE PTR es:[edi],al
  412958:	aad    0xce
  41295a:	test   al,0x49
  41295c:	loopne 0x412919
  41295e:	nop
  41295f:	dec    ecx
  412960:	xchg   ebx,eax
  412961:	mov    WORD PTR [ecx-0x3f],gs
  412964:	push   cs
  412965:	sbb    eax,0xbaf7b0d4
  41296a:	sub    eax,0x52b18736
  41296f:	add    ah,dh
  412971:	push   esp
  412972:	xor    al,0xfb
  412974:	cmp    eax,0x9e58613
  412979:	pusha  
  41297a:	adc    al,0x4d
  41297c:	inc    ebp
  41297d:	aad    0x29
  41297f:	jne    0x4129b4
  412981:	or     ebp,DWORD PTR cs:[ecx+0x4d4528b5]
  412988:	pop    ebp
  412989:	in     eax,0x96
  41298b:	pop    ebx
  41298c:	or     al,0x5b
  41298e:	lea    esi,[edx-0x7490fb03]
  412994:	push   0x54afae41
  412999:	nop
  41299a:	add    DWORD PTR [ebx-0x75296b00],esp
  4129a0:	test   DWORD PTR [bx+di+0x18],esp
  4129a4:	add    bh,ch
  4129a6:	(bad)  
  4129a7:	clc    
  4129a8:	sbb    eax,0xf2ad9735
  4129ad:	and    BYTE PTR [ecx-0x4b],bh
  4129b0:	mov    ch,0x82
  4129b2:	mov    ebp,0x27d8ad8c
  4129b7:	cmp    al,0xc5
  4129b9:	and    al,0x68
  4129bb:	push   edi
  4129bc:	lds    esp,FWORD PTR [eax]
  4129be:	cli    
  4129bf:	and    BYTE PTR [esi-0x5540871a],0x63
  4129c6:	mov    ebx,0x67e15e69
  4129cb:	psrlq  mm0,QWORD PTR ds:0xe56ddeca
  4129d2:	lock (bad) 
  4129d4:	pop    eax
  4129d5:	es mov ebp,0x8594396
  4129db:	sub    ah,dl
  4129dd:	xchg   edx,eax
  4129de:	das    
  4129df:	mov    BYTE PTR [edx-0x652f28e5],al
  4129e5:	retf   0xe325
  4129e8:	push   ds
  4129e9:	xor    DWORD PTR [ebx-0x50],ebp
  4129ec:	outs   dx,BYTE PTR ds:[esi]
  4129ed:	mov    ch,0x1e
  4129ef:	bound  esp,QWORD PTR [esi-0x6cdde6b]
  4129f5:	xor    BYTE PTR [ebx-0x58],dh
  4129f8:	or     eax,0xefe227e9
  4129fd:	fidiv  DWORD PTR [ecx+0x0]
  412a00:	fimul  DWORD PTR [edx+0x6e61aef8]
  412a06:	push   0xffffffb0
  412a08:	mov    eax,ds:0x97698083
  412a0d:	cmp    DWORD PTR [eax+0x42],eax
  412a10:	dec    esp
  412a11:	mov    al,BYTE PTR [ebx]
  412a13:	jne    0x90056d12
  412a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a1a:	icebp  
  412a1b:	pcmpgtd mm4,mm0
  412a1e:	push   ss
  412a1f:	adc    al,0x6e
  412a21:	push   ecx
  412a22:	cli    
  412a23:	inc    edi
  412a24:	xor    dl,BYTE PTR [ecx-0x5b]
  412a27:	or     BYTE PTR [ebp-0x2c],cl
  412a2a:	sub    al,0x69
  412a2c:	je     0x412a7d
  412a2e:	mov    bh,0xb2
  412a30:	mov    esi,0xb09593e0
  412a35:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a38:	mul    BYTE PTR [eax+0x65]
  412a3b:	mul    bl
  412a3d:	neg    BYTE PTR [edi]
  412a3f:	clc    
  412a40:	mov    ebp,cs
  412a42:	test   al,0xe1
  412a44:	inc    ebp
  412a45:	inc    ecx
  412a46:	mov    dl,0xea
  412a48:	xchg   bh,bl
  412a4a:	mov    dl,0x1c
  412a4c:	adc    edi,ebx
  412a4e:	push   ecx
  412a4f:	xor    BYTE PTR [edi],bl
  412a51:	fstp   st(4)
  412a53:	fidivr DWORD PTR [edi-0x6c99f9b0]
  412a59:	stos   DWORD PTR es:[edi],eax
  412a5a:	xchg   BYTE PTR [esi],bh
  412a5c:	loop   0x412a82
  412a5e:	inc    eax
  412a5f:	sub    dl,cl
  412a61:	mov    ebp,0x8cce148a
  412a66:	cwde   
  412a67:	clc    
  412a68:	inc    ebp
  412a69:	inc    edx
  412a6a:	stos   DWORD PTR es:[edi],eax
  412a6b:	xchg   BYTE PTR [esi],ah
  412a6d:	sub    esi,ecx
  412a6f:	daa    
  412a70:	outs   dx,BYTE PTR ds:[esi]
  412a71:	mov    dh,0xce
  412a73:	mov    ah,0xba
  412a75:	es inc edx
  412a77:	int3   
  412a78:	(bad)  
  412a79:	clc    
  412a7a:	std    
  412a7b:	sub    BYTE PTR [ecx],dl
  412a7d:	fpatan 
  412a7f:	arpl   WORD PTR [edi+eiz*1],cx
  412a82:	jmp    0x6156d7d9
  412a87:	sub    bh,BYTE PTR [edx-0x2e]
  412a8a:	push   0x5984bc5b
  412a8f:	mov    ds,edi
  412a91:	xchg   edx,eax
  412a92:	inc    esi
  412a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a94:	mov    bl,0xe8
  412a96:	stos   DWORD PTR es:[edi],eax
  412a97:	loop   0x412a42
  412a99:	adc    eax,0x25492ea2
  412a9e:	lock adc eax,0x70fcb46a
  412aa4:	add    dl,BYTE PTR [ebp-0x2991772]
  412aaa:	popf   
  412aab:	or     al,0x98
  412aad:	mov    ch,0xae
  412aaf:	clc    
  412ab0:	dec    edi
  412ab1:	leave  
  412ab2:	out    dx,al
  412ab3:	sub    esp,0x4ab65bf0
  412ab9:	xor    DWORD PTR [eax],0x13f22db
  412abf:	mov    ss,WORD PTR [eax]
  412ac1:	fldcw  WORD PTR [eax-0x21]
  412ac4:	test   ch,dh
  412ac6:	cld    
  412ac7:	test   DWORD PTR [ecx-0x73],eax
  412aca:	and    edi,0x2228b1b8
  412ad0:	adc    BYTE PTR [ecx],dh
  412ad2:	and    ebp,DWORD PTR [ebx-0x22]
  412ad5:	dec    edi
  412ad6:	inc    edx
  412ad7:	inc    esi
  412ad8:	lahf   
  412ad9:	jl     0x412afb
  412adb:	clc    
  412adc:	aam    0xde
  412ade:	push   ebp
  412adf:	clc    
  412ae0:	xchg   edi,eax
  412ae1:	pushf  
  412ae2:	je     0x412abe
  412ae4:	arpl   WORD PTR [edx+0x3e45219],si
  412aea:	mov    edi,DWORD PTR [ebx]
  412aec:	aaa    
  412aed:	shl    DWORD PTR [eax+ebp*8-0x4c13f253],0xd6
  412af5:	les    eax,FWORD PTR [edx+edi*2+0x40]
  412af9:	mov    ch,0xc1
  412afb:	jecxz  0x412a8d
  412afd:	pusha  
  412afe:	push   es
  412aff:	sub    dh,BYTE PTR [esi-0x5]
  412b02:	stos   DWORD PTR es:[edi],eax
  412b03:	inc    esp
  412b04:	clc    
  412b05:	xor    ebx,DWORD PTR [eax+0x35]
  412b08:	mov    eax,0x475aa61
  412b0d:	dec    ecx
  412b0e:	cmp    al,0xe5
  412b10:	push   ebp
  412b11:	pushf  
  412b12:	out    0xb5,al
  412b14:	pop    esp
  412b15:	add    BYTE PTR [eax+0x5f],bh
  412b18:	loope  0x412b82
  412b1a:	push   cs
  412b1b:	jae    0x412b5b
  412b1d:	push   es
  412b1e:	adc    al,0xe4
  412b20:	aaa    
  412b21:	test   DWORD PTR ds:0x5817c7e,ecx
  412b27:	and    DWORD PTR [ebx],ecx
  412b29:	outs   dx,DWORD PTR ds:[esi]
  412b2a:	jg     0x412b9d
  412b2c:	dec    ecx
  412b2d:	pop    esi
  412b2e:	xor    eax,0xe0212781
  412b33:	mov    DWORD PTR [edx-0x27e4379],ebx
  412b39:	shl    BYTE PTR [eax-0x275d4791],0x69
  412b40:	cwde   
  412b41:	dec    BYTE PTR [ebx]
  412b43:	aas    
  412b44:	iret   
  412b45:	inc    esp
  412b46:	rol    dl,0x8c
  412b49:	or     eax,0xb37b8f30
  412b4e:	into   
  412b4f:	pushfw 
  412b51:	mov    ds:0xbd562934,eax
  412b56:	aas    
  412b57:	inc    esi
  412b58:	(bad)  
  412b59:	fisubr DWORD PTR [eax]
  412b5b:	inc    edx
  412b5c:	cmc    
  412b5d:	mov    cl,0x2f
  412b5f:	xchg   ecx,eax
  412b60:	scas   eax,DWORD PTR es:[edi]
  412b61:	cmp    eax,0xd0f4d20e
  412b66:	ffree  st(5)
  412b68:	inc    edx
  412b69:	pop    ds
  412b6a:	imul   edx,DWORD PTR [ebp+0x1c71dbc6],0x4b
  412b71:	push   ebx
  412b72:	sbb    DWORD PTR [ebx-0x8],0xd8f5a2ec
  412b79:	jp     0x412bc0
  412b7b:	lods   eax,DWORD PTR ds:[esi]
  412b7c:	dec    edx
  412b7d:	xchg   BYTE PTR [ecx+eiz*2+0x76],al
  412b81:	xchg   esi,eax
  412b82:	shr    BYTE PTR [edx-0x3],1
  412b85:	jg     0x412b90
  412b87:	xor    eax,DWORD PTR [ebp-0x72]
  412b8a:	out    0x20,eax
  412b8c:	clc    
  412b8d:	push   0x678c90e
  412b92:	xchg   ebp,eax
  412b93:	je     0x412b2c
  412b95:	nop
  412b96:	jmp    0x536b:0x55d932b0
  412b9d:	xchg   edi,eax
  412b9e:	popf   
  412b9f:	mov    al,BYTE PTR [eax]
  412ba1:	sar    BYTE PTR [bx-0x6c],cl
  412ba5:	sbb    eax,ebx
  412ba7:	jne    0x412c09
  412ba9:	mov    ecx,0x6abff44b
  412bae:	xor    dh,BYTE PTR [edi-0x2aadefad]
  412bb4:	jno    0x412b8e
  412bb6:	lds    eax,FWORD PTR [eax]
  412bb8:	jns    0x412b71
  412bba:	sub    edx,edi
  412bbc:	mov    cl,0x54
  412bbe:	sub    al,0x2
  412bc0:	dec    edi
  412bc1:	mov    ds:0xa7a503c1,eax
  412bc6:	into   
  412bc7:	pop    ss
  412bc8:	fimul  DWORD PTR [ebx-0x39]
  412bcb:	shl    BYTE PTR [edi-0x43f27bcf],cl
  412bd1:	inc    edi
  412bd2:	sub    BYTE PTR [eax-0x61afa493],0xe8
  412bd9:	inc    ebx
  412bda:	inc    ebx
  412bdb:	shr    DWORD PTR [esi-0x2b],0x53
  412bdf:	pop    ebp
  412be0:	xchg   edi,eax
  412be1:	outs   dx,DWORD PTR ds:[esi]
  412be2:	sahf   
  412be3:	jle    0x412b6d
  412be5:	enter  0x3335,0x2d
  412be9:	mov    edx,DWORD PTR [edx]
  412beb:	call   0x7ebf:0xf2f3f763
  412bf2:	fld    DWORD PTR [edx+0x26]
  412bf5:	mov    cl,0xc8
  412bf7:	cmp    esp,ecx
  412bf9:	push   esp
  412bfa:	ds xchg ecx,eax
  412bfc:	pop    edx
  412bfd:	cmp    DWORD PTR [ecx-0x79],ebx
  412c00:	sbb    BYTE PTR [ebp+0x3dd07e35],dl
  412c06:	or     ebp,DWORD PTR [esi-0x80]
  412c09:	xor    eax,0xdfa7aefe
  412c0e:	inc    eax
  412c0f:	in     eax,0x16
  412c11:	dec    esi
  412c12:	xor    DWORD PTR [ebx-0x2e],ebx
  412c15:	push   ds
  412c16:	aam    0x37
  412c18:	repnz mov dh,0x4f
  412c1b:	pusha  
  412c1c:	add    DWORD PTR [ecx-0x77],esi
  412c1f:	loope  0x412bd5
  412c21:	loope  0x412bb2
  412c23:	push   edi
  412c24:	and    eax,0x23f26c3b
  412c29:	(bad)  
  412c2a:	sbb    eax,0x99fb0c2
  412c2f:	aas    
  412c30:	sbb    eax,esp
  412c32:	push   ds
  412c33:	xchg   esp,eax
  412c34:	mov    WORD PTR [ebp+0x32],?
  412c37:	pop    edi
  412c38:	pop    es
  412c39:	test   al,0x88
  412c3b:	and    al,0xa7
  412c3d:	imul   ecx,esi,0x40
  412c40:	jecxz  0x412c2b
  412c42:	repz out dx,al
  412c44:	or     al,0xb6
  412c46:	ins    BYTE PTR es:[edi],dx
  412c47:	int    0x82
  412c49:	xchg   ecx,eax
  412c4a:	pop    edx
  412c4b:	or     al,0x97
  412c4d:	mov    bl,0xde
  412c4f:	push   es
  412c50:	(bad)  
  412c51:	dec    DWORD PTR [ecx+0x48508683]
  412c57:	addr16 js 0x412c26
  412c5a:	pop    ebp
  412c5b:	jmp    0xc2d6b819
  412c60:	add    DWORD PTR [ebx],0xfffffffd
  412c63:	lods   al,BYTE PTR ds:[esi]
  412c64:	neg    esp
  412c66:	jae    0x412c45
  412c68:	js     0x412c7d
  412c6a:	xchg   edi,eax
  412c6b:	dec    eax
  412c6c:	out    dx,eax
  412c6d:	lods   al,BYTE PTR ds:[esi]
  412c6e:	imul   esi,eax,0xcd560e18
  412c74:	cs jp  0x412cd6
  412c77:	xchg   ecx,eax
  412c78:	sbb    dl,BYTE PTR [edi+0x3c]
  412c7b:	lods   al,BYTE PTR ds:[esi]
  412c7c:	jo     0x412c95
  412c7e:	ret    
  412c7f:	fcomp  st(7)
  412c81:	lds    edi,FWORD PTR ds:0x1be03a64
  412c87:	cmc    
  412c88:	and    bl,dl
  412c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c8b:	xlat   BYTE PTR ds:[ebx]
  412c8c:	xor    ch,bl
  412c8e:	push   0x86f0245e
  412c93:	mov    ebx,0xd36df164
  412c98:	cmp    DWORD PTR [ebx-0x33e65c52],ebp
  412c9e:	mov    ds:0x45a8b267,eax
  412ca3:	jle    0x412c64
  412ca5:	enter  0xfaef,0x7e
  412ca9:	mov    BYTE PTR es:[ecx],ch
  412cac:	jmp    0x412c41
  412cae:	(bad)  
  412caf:	fwait
  412cb0:	out    dx,al
  412cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cb2:	repz sar BYTE PTR [esi],cl
  412cb5:	sbb    DWORD PTR [edx],eax
  412cb7:	aam    0x8b
  412cb9:	fstp   QWORD PTR [edx-0x222c3389]
  412cbf:	xlat   BYTE PTR ds:[ebx]
  412cc0:	pop    esi
  412cc1:	mov    dh,0x13
  412cc3:	jle    0x412ccd
  412cc5:	lock push ss
  412cc7:	stos   DWORD PTR es:[edi],eax
  412cc8:	data16 fmul st,st(5)
  412ccb:	xchg   edx,eax
  412ccc:	sub    dh,dl
  412cce:	(bad)  
  412ccf:	bound  esi,QWORD PTR [esi-0xd]
  412cd2:	mov    al,0x13
  412cd4:	icebp  
  412cd5:	icebp  
  412cd6:	and    ecx,esi
  412cd8:	ss push edx
  412cda:	push   ds
  412cdb:	std    
  412cdc:	inc    eax
  412cdd:	loop   0x412ccf
  412cdf:	aas    
  412ce0:	or     edx,esp
  412ce2:	sub    eax,0x36e1d49e
  412ce7:	inc    esi
  412ce8:	clc    
  412ce9:	mov    edx,ebp
  412ceb:	int    0x4e
  412ced:	adc    ah,ch
  412cef:	(bad)  
  412cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf1:	sbb    dh,BYTE PTR [ebp+edx*2-0xbae4247]
  412cf8:	outs   dx,BYTE PTR ds:[esi]
  412cf9:	stos   BYTE PTR es:[edi],al
  412cfa:	(bad)  
  412cfb:	jmp    0x412d49
  412cfd:	nop
  412cfe:	sti    
  412cff:	xor    BYTE PTR [ebp+0x922ae0c],0x2f
  412d06:	xor    DWORD PTR [edi+0x7f52bbbb],eax
  412d0c:	pop    ebp
  412d0d:	int3   
  412d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d0f:	(bad)  [edi]
  412d11:	push   ebp
  412d12:	jmp    0x76a67eb0
  412d17:	cld    
  412d18:	mov    WORD PTR [edi+0x3c],?
  412d1b:	cmp    al,BYTE PTR [di]
  412d1e:	idiv   cl
  412d20:	(bad)  
  412d21:	xor    al,0xf0
  412d23:	mov    eax,ds:0xf17a105d
  412d28:	sbb    DWORD PTR [eax+0x5e58d641],edx
  412d2e:	add    ebx,DWORD PTR [ecx+0x58de4033]
  412d34:	into   
  412d35:	outs   dx,DWORD PTR ds:[esi]
  412d36:	test   bl,al
  412d38:	jl     0x412cfa
  412d3a:	int    0xe0
  412d3c:	xor    DWORD PTR [ecx-0x711c61fb],esi
  412d42:	retf   
  412d43:	int3   
  412d44:	loopne 0x412dbd
  412d46:	mov    dh,BYTE PTR [ebp+0x1c4672fb]
  412d4c:	dec    edi
  412d4d:	pop    ss
  412d4e:	(bad)  
  412d50:	js     0x412d6b
  412d52:	mov    bl,0xc1
  412d54:	cmp    eax,0xc771829
  412d59:	jbe    0x412d50
  412d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d5c:	inc    ebp
  412d5d:	in     eax,dx
  412d5e:	push   0x1158178a
  412d63:	cmc    
  412d64:	fimul  DWORD PTR [eax]
  412d66:	xchg   esp,eax
  412d67:	sbb    eax,0x11316290
  412d6c:	push   cs
  412d6d:	push   ds
  412d6e:	les    ebx,FWORD PTR [edi+0x59]
  412d71:	pop    ebx
  412d72:	scas   al,BYTE PTR es:[edi]
  412d73:	jg     0x412ddd
  412d75:	sbb    eax,0x7711dc1b
  412d7a:	arpl   WORD PTR [ebx-0x1b7c413f],ax
  412d80:	cwde   
  412d81:	inc    esi
  412d82:	push   ebp
  412d83:	popa   
  412d84:	inc    edx
  412d85:	jmp    0x563e:0x8c554086
  412d8c:	push   ss
  412d8d:	sbb    al,0xf8
  412d8f:	mov    al,ds:0x8d2a931e
  412d94:	in     al,dx
  412d95:	jbe    0x412da8
  412d97:	mov    eax,ds:0xc40eada7
  412d9c:	mov    dh,0xe
  412d9e:	outs   dx,DWORD PTR ds:[esi]
  412d9f:	or     BYTE PTR [edi-0x3fd54e46],bh
  412da5:	test   DWORD PTR [edi+eax*8],ebp
  412da8:	shr    BYTE PTR es:[ebp-0x184f06f4],1
  412daf:	ficom  WORD PTR [ebx+esi*1-0xc57e1c2]
  412db6:	sub    edi,ecx
  412db8:	(bad)  
  412db9:	call   0x162dc761
  412dbe:	xchg   ebp,eax
  412dbf:	push   cs
  412dc0:	jl     0x412d87
  412dc2:	in     al,dx
  412dc3:	hlt    
  412dc4:	inc    esp
  412dc5:	xchg   esi,ecx
  412dc7:	xchg   edi,edx
  412dc9:	iret   
  412dca:	out    dx,eax
  412dcb:	push   edi
  412dcc:	or     DWORD PTR [ebp-0xf],ecx
  412dcf:	xchg   DWORD PTR ds:[eax+0x6144e002],ebp
  412dd6:	or     eax,0x62c7a2c0
  412ddb:	sub    ch,dl
  412ddd:	std    
  412dde:	inc    edi
  412ddf:	mov    DWORD PTR [edx],eax
  412de1:	out    0x5f,eax
  412de3:	push   0x38b3a43f
  412de8:	ja     0x412de0
  412dea:	jb     0x412db4
  412dec:	mov    eax,ds:0x405b9dd
  412df1:	cmp    esp,edi
  412df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df4:	popa   
  412df5:	(bad)
  412df8:	stc    
  412df9:	sub    ecx,DWORD PTR [eax+0x22]
  412dfc:	repz sub eax,0x2cfc30c1
  412e02:	xchg   ebx,eax
  412e03:	inc    eax
  412e04:	cmp    bl,0xc5
  412e07:	inc    edx
  412e08:	xlat   BYTE PTR ds:[ebx]
  412e09:	push   esi
  412e0a:	mov    ebp,0x3e89214e
  412e0f:	jno    0x412dac
  412e11:	inc    ecx
  412e12:	lods   al,BYTE PTR ds:[esi]
  412e13:	cmc    
  412e14:	outs   dx,DWORD PTR ds:[esi]
  412e15:	ss sti 
  412e17:	retf   
  412e18:	nop
  412e19:	jno    0x412d9f
  412e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e1c:	xchg   edi,eax
  412e1d:	mov    cl,0x37
  412e1f:	call   FWORD PTR [edi]
  412e21:	lahf   
  412e22:	int    0x39
  412e24:	mov    cl,0xe9
  412e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e28:	sar    edi,cl
  412e2a:	ja     0x412e66
  412e2c:	adc    BYTE PTR [ebx+0x4cb9dd14],ch
  412e32:	mov    eax,0xbaef853e
  412e37:	shl    BYTE PTR [edi],0x54
  412e3a:	mov    dl,0x88
  412e3c:	ins    DWORD PTR es:[edi],dx
  412e3d:	pop    ebp
  412e3e:	xor    ah,0x9
  412e41:	add    BYTE PTR [edx-0x31e21ca3],bl
  412e47:	push   0xffffffe0
  412e49:	dec    edx
  412e4a:	jp     0x412ea0
  412e4c:	mov    ch,0x9f
  412e4e:	fidiv  DWORD PTR [edx-0x4e]
  412e51:	pslld  mm2,QWORD PTR [ebp+0x51821048]
  412e58:	or     BYTE PTR [eax+0x62],bl
  412e5b:	retf   0x8988
  412e5e:	inc    ebp
  412e5f:	fucomp st(5)
  412e61:	repnz xor cl,bh
  412e64:	jmp    0x4de02ba9
  412e69:	mov    ah,0xdb
  412e6b:	shl    DWORD PTR [edx],0x2a
  412e6e:	inc    ecx
  412e6f:	fnstcw WORD PTR [edi+0x6e]
  412e72:	shl    DWORD PTR [esi+0x17adc6a5],1
  412e78:	push   ebx
  412e79:	sub    DWORD PTR [ecx],ebp
  412e7b:	xor    ch,BYTE PTR [edx]
  412e7d:	push   ds
  412e7e:	cmp    bh,cl
  412e80:	mov    eax,0x35f82225
  412e85:	aam    0xeb
  412e87:	getsec 
  412e89:	or     ah,dh
  412e8b:	retf   
  412e8c:	mov    ch,0x23
  412e8e:	cmp    dh,al
  412e90:	fs pop esi
  412e92:	xlat   BYTE PTR ds:[ebx]
  412e93:	lods   al,BYTE PTR cs:[esi]
  412e95:	loop   0x412e64
  412e97:	mov    DWORD PTR [eax+0x1c79fd76],esi
  412e9d:	(bad)  
  412e9e:	loope  0x412e3d
  412ea0:	mov    ebx,0x6513b0c2
  412ea5:	sub    esi,DWORD PTR [edx+ecx*4]
  412ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ea9:	or     esp,eax
  412eab:	in     al,dx
  412eac:	aas    
  412ead:	pop    esi
  412eae:	fwait
  412eaf:	mov    dl,0xe4
  412eb1:	mov    ds:0xb4927e51,eax
  412eb6:	cld    
  412eb7:	jns    0x412ecd
  412eb9:	stc    
  412eba:	cmp    dl,BYTE PTR [eiz*4-0x12037b7d]
  412ec1:	fwait
  412ec2:	mov    ds:0x465abc5,eax
  412ec7:	pop    ds
  412ec8:	shl    DWORD PTR [eax-0x3a81b043],0x64
  412ecf:	repnz inc esp
  412ed1:	jge    0x412eee
  412ed3:	xchg   esi,eax
  412ed4:	cmp    cl,BYTE PTR [ecx-0x5414db50]
  412eda:	stos   BYTE PTR es:[edi],al
  412edb:	jcxz   0x412eb8
  412ede:	push   ss
  412edf:	xlat   BYTE PTR ds:[ebx]
  412ee0:	or     cl,BYTE PTR [ebx-0x69]
  412ee3:	and    ebp,esi
  412ee5:	sbb    al,0x2a
  412ee7:	jb     0x412f03
  412ee9:	(bad)  
  412eea:	outs   dx,DWORD PTR ds:[esi]
  412eeb:	int    0x5c
  412eed:	imul   edi,DWORD PTR [ebx+eax*2+0x65a603ed],0x43
  412ef5:	xor    cl,bl
  412ef7:	cwde   
  412ef8:	or     al,0xdd
  412efa:	ror    BYTE PTR [edi-0x1a7ac886],0x59
  412f01:	fdivr  QWORD PTR [eax-0x5cb9c45d]
  412f07:	push   ds
  412f08:	addr16 dec edx
  412f0a:	clc    
  412f0b:	into   
  412f0c:	xor    al,0x39
  412f0e:	cmp    eax,0x93ab1df3
  412f13:	sub    al,0x92
  412f15:	cdq    
  412f16:	cld    
  412f17:	in     eax,0xb5
  412f19:	into   
  412f1a:	mov    ds:0x18e2ef19,eax
  412f1f:	push   ecx
  412f20:	sub    eax,0x2ff7c51d
  412f25:	cmp    DWORD PTR [edx],edi
  412f27:	aas    
  412f28:	dec    esp
  412f29:	jl     0x412ef1
  412f2b:	xchg   edi,eax
  412f2c:	out    dx,eax
  412f2d:	das    
  412f2e:	ss dec eax
  412f30:	push   esi
  412f31:	push   cs
  412f32:	scas   eax,DWORD PTR es:[edi]
  412f33:	xlat   BYTE PTR ds:[ebx]
  412f34:	pop    ds
  412f35:	mov    BYTE PTR [eax],dh
  412f37:	sahf   
  412f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f39:	inc    esp
  412f3a:	clc    
  412f3b:	mov    eax,0xfdc9c2e5
  412f40:	in     eax,0x4b
  412f42:	cwde   
  412f43:	loope  0x412f2d
  412f45:	repz cmp eax,0xf4f309ac
  412f4b:	pmulhw mm2,QWORD PTR [ebp+0x24]
  412f4f:	aaa    
  412f50:	add    eax,0x5c7022d8
  412f55:	loopne 0x412f14
  412f57:	arpl   WORD PTR [ecx+0x53],bx
  412f5a:	inc    edx
  412f5b:	int3   
  412f5c:	sub    DWORD PTR [eax+ebp*4+0x73806096],eax
  412f63:	aas    
  412f64:	out    0x45,eax
  412f66:	in     eax,0x8b
  412f68:	xor    al,0xfb
  412f6a:	(bad)  
  412f6b:	or     ch,BYTE PTR [ebp-0x69f1c679]
  412f71:	shr    BYTE PTR [ebx+edx*2+0xdd067ea],1
  412f78:	cmp    eax,DWORD PTR [eax+edx*4+0x37]
  412f7c:	lahf   
  412f7d:	jle    0x412fb2
  412f7f:	or     ch,BYTE PTR [ecx+0x663c7374]
  412f85:	test   eax,0xe2b9725
  412f8a:	mov    ebx,0x5a3076fe
  412f8f:	or     ecx,DWORD PTR [edx]
  412f91:	fwait
  412f92:	and    dl,al
  412f94:	sbb    eax,0xcdb68923
  412f99:	(bad)  
  412f9a:	outs   dx,BYTE PTR ds:[esi]
  412f9b:	jne    0x413002
  412f9d:	sbb    DWORD PTR [ecx+0x28],eax
  412fa0:	fstp   st(0)
  412fa2:	jmp    0x412fad
  412fa4:	mov    esi,0x85b32d15
  412fa9:	mov    DWORD PTR [edi],ecx
  412fab:	loopne 0x412fc4
  412fad:	retf   
  412fae:	hlt    
  412faf:	push   edi
  412fb0:	je     0x412fab
  412fb2:	lds    edx,FWORD PTR [edi]
  412fb4:	aas    
  412fb5:	inc    esi
  412fb6:	stos   BYTE PTR es:[edi],al
  412fb7:	shl    dl,cl
  412fb9:	and    ebp,ebx
  412fbb:	or     DWORD PTR [esi],0x187dd56d
  412fc1:	dec    eax
  412fc2:	mul    DWORD PTR [esi+0x7e]
  412fc5:	mov    bl,ch
  412fc7:	iret   
  412fc8:	and    BYTE PTR [esi+0x22],0xf1
  412fcc:	xor    BYTE PTR [esi-0x27b5768d],cl
  412fd2:	push   ss
  412fd3:	pop    edx
  412fd4:	or     BYTE PTR ss:[ecx-0x30],ch
  412fd8:	std    
  412fd9:	cmp    al,0x61
  412fdb:	push   esi
  412fdc:	and    al,0x2a
  412fde:	ficomp DWORD PTR [esi+0xa367deb]
  412fe4:	test   BYTE PTR [esi],bh
  412fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fe7:	retf   
  412fe8:	(bad)  
  412fea:	xchg   edx,eax
  412feb:	xchg   ebx,eax
  412fec:	sbb    BYTE PTR [ebp+0xc],al
  412fef:	enter  0x8eef,0xb8
  412ff3:	inc    edx
  412ff4:	(bad)
  412ff7:	xchg   esp,eax
  412ff8:	sub    BYTE PTR [edx],al
  412ffa:	call   0x435fd7b5
  412fff:	jne    0x41304b
  413001:	cmc    
  413002:	repnz pushf 
  413004:	xchg   ch,ch
  413006:	jmp    0x413087
  413008:	aad    0x4c
  41300a:	call   0xa504d924
  41300f:	mov    ds:0x99859922,eax
  413014:	cli    
  413015:	aam    0x63
  413017:	push   cs
  413018:	cmp    al,0x3e
  41301a:	in     eax,0xbd
  41301c:	fadd   DWORD PTR ds:0xe7d41c02
  413022:	xor    edx,esp
  413024:	push   esi
  413025:	loopne 0x41300c
  413027:	mov    bl,BYTE PTR [esi+0x585f7d62]
  41302d:	sub    ebp,DWORD PTR [eax+0x77]
  413030:	in     eax,dx
  413031:	out    dx,eax
  413032:	mov    es,WORD PTR [ebx-0x5b814fc0]
  413038:	mov    ss,WORD PTR [esi+0x4e82c7b0]
  41303e:	shr    DWORD PTR [ecx+0x53],1
  413041:	sbb    edx,DWORD PTR ds:0xe3ad1ccb
  413047:	jp     0x41300a
  413049:	xchg   ecx,eax
  41304a:	add    bl,BYTE PTR [ebp-0x6e4f619d]
  413050:	sub    eax,0x43559fc2
  413055:	out    dx,eax
  413056:	lea    ecx,[edi-0x55]
  413059:	cmp    eax,0x2d5f8bb9
  41305e:	push   cs
  41305f:	cwde   
  413060:	fwait
  413061:	in     eax,0xc7
  413063:	jmp    0x705c187d
  413068:	adc    eax,0x168eaa75
  41306d:	pop    es
  41306e:	push   cs
  41306f:	jp     0x413070
  413071:	xor    cl,BYTE PTR [edx-0x408314a7]
  413077:	pop    es
  413078:	mov    ch,0x76
  41307a:	hlt    
  41307b:	and    dh,ah
  41307d:	mov    cl,0x28
  41307f:	and    al,0x36
  413081:	lea    ebp,[ebx]
  413083:	lds    ebx,FWORD PTR [eax]
  413085:	mov    ds:0xc6b8a445,al
  41308a:	(bad)  
  41308b:	mov    bl,0x4a
  41308d:	jmp    0x4130f9
  41308f:	push   eax
  413090:	cmp    al,0x70
  413092:	push   eax
  413093:	mov    ds:0x85cc51b0,al
  413098:	jl     0x41302a
  41309a:	sti    
  41309b:	sbb    esi,ecx
  41309d:	adc    edi,DWORD PTR [ecx+0x27624ba4]
  4130a3:	sbb    esp,DWORD PTR [edx+0x41]
  4130a6:	cmc    
  4130a7:	clc    
  4130a8:	fwait
  4130a9:	mov    bh,BYTE PTR [eax-0x73]
  4130ac:	repnz loopne 0x413070
  4130af:	rcl    DWORD PTR [ebp-0x4c],0x16
  4130b3:	jmp    0x8324:0xc8105239
  4130ba:	mov    al,0xce
  4130bc:	clc    
  4130bd:	and    dl,BYTE PTR [eax+0xcdb3d11]
  4130c3:	lods   eax,DWORD PTR ds:[esi]
  4130c4:	imul   BYTE PTR [esi-0x2f]
  4130c7:	hlt    
  4130c8:	aam    0xe9
  4130ca:	outs   dx,BYTE PTR ds:[esi]
  4130cb:	call   0x4b89e3f6
  4130d0:	add    DWORD PTR [edi],esi
  4130d2:	xchg   esp,eax
  4130d3:	mov    bh,0xab
  4130d5:	in     al,dx
  4130d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d7:	nop
  4130d8:	or     al,BYTE PTR [ecx-0x8]
  4130db:	push   esp
  4130dc:	inc    esi
  4130dd:	mov    ecx,0xc570b89c
  4130e2:	mov    WORD PTR [esi],es
  4130e4:	mov    edx,0xf7e3bab5
  4130e9:	mov    al,0x59
  4130eb:	mov    bh,0x95
  4130ed:	push   edx
  4130ee:	pop    ebx
  4130ef:	mov    eax,ds:0xcae63a8
  4130f4:	push   ds
  4130f5:	xchg   esi,eax
  4130f6:	pop    ecx
  4130f7:	push   edx
  4130f8:	sahf   
  4130f9:	icebp  
  4130fa:	pop    ecx
  4130fb:	(bad)  
  4130fc:	sar    DWORD PTR [eax-0x78db5f01],cl
  413102:	call   0xfb94c183
  413107:	lea    ebp,[esi+0x1d]
  41310a:	mov    ah,0x8e
  41310c:	dec    ebx
  41310d:	pop    ss
  41310e:	jg     0x4130f4
  413110:	or     DWORD PTR [eax-0xf167648],0xaff1f6f7
  41311a:	pop    ebp
  41311b:	inc    edx
  41311c:	jo     0x413167
  41311e:	mov    eax,ds:0x3ee12510
  413123:	data16 loop 0x413181
  413126:	daa    
  413127:	add    dl,ch
  413129:	pusha  
  41312a:	xchg   ebx,eax
  41312b:	add    ebp,ebp
  41312d:	push   eax
  41312e:	xchg   edx,eax
  41312f:	aad    0x1d
  413131:	retf   0x9a7e
  413134:	mov    al,0xe1
  413136:	xor    bl,BYTE PTR [eax-0xd56b74e]
  41313c:	cmp    DWORD PTR [ecx],0x97a833cc
  413142:	inc    ebp
  413143:	stos   DWORD PTR es:[edi],eax
  413144:	or     ah,BYTE PTR [edx-0x14a287da]
  41314a:	inc    ebp
  41314b:	je     0x41312a
  41314d:	sti    
  41314e:	xchg   esi,eax
  41314f:	adc    eax,0xbe926370
  413154:	add    al,BYTE PTR [edi+0x1d0bc4b9]
  41315a:	adc    eax,0x1aa01aa4
  41315f:	push   es
  413160:	scas   al,BYTE PTR es:[edi]
  413161:	das    
  413162:	xchg   DWORD PTR [ecx],esp
  413164:	popa   
  413165:	adc    edx,DWORD PTR [esi-0x77452bc1]
  41316b:	jae    0x41317b
  41316d:	sub    BYTE PTR [ebx-0x3025d07],al
  413173:	lahf   
  413174:	dec    eax
  413175:	xchg   ecx,eax
  413176:	jnp    0x4131a6
  413178:	das    
  413179:	fsubr  st,st(6)
  41317b:	repnz pop ds
  41317d:	mov    edx,0x221b8749
  413182:	hlt    
  413183:	sbb    esp,DWORD PTR [ecx]
  413185:	pusha  
  413186:	jnp    0x413119
  413188:	sbb    esp,DWORD PTR [edx]
  41318a:	xor    al,0x6c
  41318c:	mov    dl,0xa2
  41318e:	or     dh,dh
  413190:	(bad)  
  413191:	push   ds
  413192:	xchg   edx,eax
  413193:	dec    ebx
  413194:	lahf   
  413195:	call   0x66a5:0x6e290789
  41319c:	jae    0x413178
  41319e:	cmp    esi,esp
  4131a0:	mov    BYTE PTR [ebx-0x21],bh
  4131a3:	xor    BYTE PTR [ebp-0x3bda2ff8],bl
  4131a9:	lea    edx,[ebx]
  4131ab:	fs add eax,0x1b487d6c
  4131b1:	pop    edi
  4131b2:	rcr    BYTE PTR [ebx-0x165144d9],cl
  4131b8:	mov    dl,0xf5
  4131ba:	sar    DWORD PTR [ebx+0x7b],1
  4131bd:	xlat   BYTE PTR ds:[ebx]
  4131be:	push   ds
  4131bf:	jl     0x413232
  4131c1:	pop    ebx
  4131c2:	outs   dx,BYTE PTR ds:[esi]
  4131c3:	jmp    0xdb0ad5c7
  4131c8:	dec    edi
  4131c9:	pushf  
  4131ca:	sub    edi,ebp
  4131cc:	xchg   edx,eax
  4131cd:	adc    BYTE PTR [ecx+0x780672d3],dh
  4131d3:	ss xchg edx,eax
  4131d5:	or     ch,cl
  4131d7:	inc    esp
  4131d8:	mov    bl,0x3e
  4131da:	inc    ebx
  4131db:	(bad)  
  4131dc:	es mov bh,0xa6
  4131df:	cmp    ecx,edx
  4131e1:	adc    bl,0x47
  4131e4:	fmul   DWORD PTR [ebp+0x4f]
  4131e7:	fild   WORD PTR [ebp-0x54]
  4131ea:	push   gs
  4131ec:	push   cs
  4131ed:	cmp    DWORD PTR [ebp-0x9],0xffffffdd
  4131f1:	ins    BYTE PTR es:[edi],dx
  4131f2:	mov    ecx,DWORD PTR [ecx-0xa4b4bd1]
  4131f8:	and    BYTE PTR [eax],dl
  4131fa:	ror    BYTE PTR [ecx+0x52ace455],cl
  413200:	sub    eax,0xf6bfe25c
  413205:	push   es
  413206:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  413208:	pop    ds
  413209:	inc    esi
  41320a:	or     eax,0x3b5eae20
  41320f:	xchg   edx,eax
  413210:	xor    dl,al
  413212:	mov    dh,0x8d
  413214:	fsubrp st(1),st
  413216:	add    BYTE PTR [edi+eax*2+0x15d4df5a],0x34
  41321e:	int    0x96
  413220:	gs mov esi,0xda4ef64e
  413226:	jnp    0x413220
  413228:	jo     0x4131cc
  41322a:	icebp  
  41322b:	dec    ebp
  41322c:	jecxz  0x41328b
  41322e:	cmp    eax,0xf565796a
  413233:	cmp    BYTE PTR [edi+0x720e180f],0x97
  41323a:	sub    BYTE PTR [edi],bl
  41323c:	(bad)  
  41323d:	pop    edi
  41323e:	push   edx
  41323f:	pop    ds
  413240:	popa   
  413241:	xchg   esp,eax
  413242:	cld    
  413243:	jb     0x4132ac
  413245:	out    0xc5,al
  413247:	dec    esi
  413248:	(bad)  
  413249:	rcr    DWORD PTR [esi+0x20],cl
  41324c:	fld    TBYTE PTR [edx-0x2deabaf1]
  413252:	push   0x56de345
  413257:	mov    ch,0xc7
  413259:	out    0x51,eax
  41325b:	adc    al,0x2f
  41325d:	(bad)  [edi]
  41325f:	std    
  413260:	mov    ch,0xfd
  413262:	push   ebx
  413263:	fbstp  TBYTE PTR [edx+0x4610fd22]
  413269:	inc    esi
  41326a:	ret    0x6415
  41326d:	xor    bh,bl
  41326f:	sbb    DWORD PTR [edi-0x1b],ebp
  413272:	(bad)  
  413273:	dec    ecx
  413274:	inc    eax
  413275:	jmp    0xd590:0x336d0bda
  41327c:	test   DWORD PTR [ecx*8+0x478d752b],esp
  413283:	mov    ds:0x32c0df98,eax
  413288:	jbe    0x413279
  41328a:	pop    ss
  41328b:	bound  edi,QWORD PTR ds:0xc345b026
  413291:	mov    ds:0x8d55ff1e,al
  413296:	adc    eax,0xa79e9582
  41329b:	(bad)  
  41329c:	loope  0x4132be
  41329e:	(bad)  
  4132a0:	sbb    al,0x7
  4132a2:	(bad)
  4132a5:	std    
  4132a6:	(bad)  
  4132a7:	cmp    al,0x74
  4132a9:	ret    
  4132aa:	mov    ecx,0x3ca30ff9
  4132af:	lock iret 
  4132b1:	mov    BYTE PTR [esi-0x67],bh
  4132b4:	mov    esp,0x2adb38e1
  4132b9:	and    eax,0x262642ef
  4132be:	pop    ds
  4132bf:	xor    al,BYTE PTR ds:0x7220a073
  4132c5:	out    0x2,al
  4132c7:	lea    ecx,[edx-0x38]
  4132ca:	or     dl,BYTE PTR [edx-0x65]
  4132cd:	push   cs
  4132ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132cf:	xor    DWORD PTR [edi+0x1a3fb60b],esi
  4132d5:	pop    ebp
  4132d6:	mov    bl,dh
  4132d8:	test   DWORD PTR [ecx-0x2c773ffd],0x3b4216aa
  4132e2:	call   0xb6f8bc4d
  4132e7:	adc    al,0xb9
  4132e9:	cmp    al,0xfa
  4132eb:	dec    ebp
  4132ec:	or     ebx,DWORD PTR [eax]
  4132ee:	fwait
  4132ef:	mov    eax,0xa6c450ce
  4132f4:	and    BYTE PTR [esi-0x1b41736d],ch
  4132fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132fb:	lea    ebp,[edi-0xcbc6820]
  413301:	(bad)  
  413302:	dec    esp
  413303:	inc    si
  413305:	loop   0x4132b4
  413307:	jp     0x41334c
  413309:	arpl   WORD PTR [ebp-0x25f84b8d],ax
  41330f:	inc    ebp
  413310:	jbe    0x413370
  413312:	out    0xe3,eax
  413314:	mov    es,WORD PTR [eax-0x7b228228]
  41331a:	jecxz  0x4132f5
  41331c:	inc    ebx
  41331d:	in     eax,dx
  41331e:	imul   ebp,DWORD PTR [ebx-0x75181e4c],0xdc40bff8
  413328:	(bad)  
  413329:	mov    ds:0x84ffbc2,eax
  41332e:	add    al,0x28
  413330:	cmp    DWORD PTR [edi+0x1a37c577],edi
  413336:	pop    ds
  413337:	cmp    eax,0x6b873b2
  41333c:	xchg   DWORD PTR [eax+0x27],ebp
  41333f:	repnz pop eax
  413341:	mov    cl,0x12
  413343:	add    DWORD PTR [edi+0x530ec638],esi
  413349:	lock push ss
  41334b:	pop    edx
  41334c:	pop    es
  41334d:	xor    ch,BYTE PTR [ebp+0x74d767df]
  413353:	pushf  
  413354:	sub    BYTE PTR [edx+edx*1-0x51],0x74
  413359:	stos   BYTE PTR es:[edi],al
  41335a:	xchg   ebp,eax
  41335b:	sbb    DWORD PTR [ebx-0x43f68aae],esi
  413361:	(bad)  [edi]
  413363:	ror    DWORD PTR [ebp+0x3c],cl
  413366:	mov    al,ds:0x71b6b2a9
  41336b:	retf   0x5d5c
  41336e:	inc    edx
  41336f:	jo     0x41333c
  413371:	stc    
  413372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413373:	scas   eax,DWORD PTR es:[edi]
  413374:	neg    DWORD PTR [ebx+0x7e]
  413377:	adc    BYTE PTR [ecx+ebp*2-0x15846958],bh
  41337e:	xlat   BYTE PTR ds:[ebx]
  41337f:	ficom  DWORD PTR [ecx-0x471eba3f]
  413385:	ja     0x413351
  413387:	jmp    0x160f367
  41338c:	lods   eax,DWORD PTR ds:[esi]
  41338d:	dec    ebx
  41338e:	daa    
  41338f:	loop   0x4133dc
  413391:	xor    BYTE PTR [edi-0x3ce212af],dh
  413397:	add    BYTE PTR [ecx+ecx*4+0x7244e8df],dh
  41339e:	pop    esp
  41339f:	clc    
  4133a0:	xchg   esp,eax
  4133a1:	jg     0x4133f2
  4133a3:	sub    al,0x46
  4133a5:	jns    0x413348
  4133a7:	pop    ss
  4133a8:	or     al,0x76
  4133aa:	xor    DWORD PTR ds:0x7d8383,edx
  4133b0:	mov    esi,0x3dd2479e
  4133b5:	mov    eax,0x31f9e0fb
  4133ba:	push   eax
  4133bb:	xchg   edx,eax
  4133bc:	sbb    ebp,DWORD PTR [esi+eiz*1-0x80]
  4133c0:	push   edx
  4133c1:	push   esi
  4133c2:	and    eax,0x48e4bf55
  4133c7:	push   esp
  4133c8:	mov    cl,0x15
  4133ca:	jl     0x413406
  4133cc:	ins    BYTE PTR es:[edi],dx
  4133cd:	es sbb al,0x6
  4133d0:	lahf   
  4133d1:	(bad)  
  4133d2:	repz mov ds:0xd68cc722,eax
  4133d8:	xchg   edi,eax
  4133d9:	sti    
  4133da:	and    ch,ch
  4133dc:	fadd   st,st(6)
  4133de:	mov    cl,0x60
  4133e0:	adc    DWORD PTR [ebp-0x65],edx
  4133e3:	pop    eax
  4133e4:	ds or  al,0x7c
  4133e7:	sub    esp,DWORD PTR [ecx+0x4206be12]
  4133ed:	cmp    eax,0xe7380b9a
  4133f2:	ins    DWORD PTR es:[edi],dx
  4133f3:	stos   DWORD PTR es:[edi],eax
  4133f4:	lods   eax,DWORD PTR ds:[esi]
  4133f5:	cwde   
  4133f6:	popa   
  4133f7:	add    BYTE PTR [ebx+ebp*1-0x33],0xa0
  4133fc:	mov    eax,ds:0x1e205192
  413401:	call   0x7c0766fb
  413406:	xchg   edi,eax
  413407:	inc    ebp
  413408:	add    al,0xef
  41340a:	jg     0x41341e
  41340c:	stos   BYTE PTR es:[edi],al
  41340d:	pop    esp
  41340e:	xchg   edx,eax
  41340f:	repnz and BYTE PTR [ebp+0x130065c9],0xa2
  413417:	sub    bh,dl
  413419:	cmp    edx,DWORD PTR [ebx-0x2]
  41341c:	xor    eax,0xb2ada81f
  413421:	mul    ebp
  413423:	je     0x41340f
  413425:	(bad)  [ebp-0x52]
  413428:	aam    0xdc
  41342a:	mov    eax,0x1d21aa95
  41342f:	pop    ss
  413430:	ror    DWORD PTR [ecx+edi*1],0x74
  413434:	cld    
  413435:	sbb    BYTE PTR [eax+0x2e0d8e62],bl
  41343b:	arpl   WORD PTR [ebx],sp
  41343d:	ds jb  0x413496
  413440:	imul   ebx,DWORD PTR ds:0x5678ac14,0xffffffe2
  413447:	push   edi
  413448:	nop
  413449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41344a:	xor    eax,0xa97c4e6b
  41344f:	aad    0xbd
  413451:	adc    DWORD PTR [eax],edi
  413453:	cmp    BYTE PTR [ecx],bl
  413455:	mov    eax,ds:0xf56bc5a4
  41345a:	or     al,BYTE PTR [ebp+esi*4+0xdfc8557]
  413461:	dec    ecx
  413462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413463:	loope  0x413488
  413465:	arpl   WORD PTR [edi+0x159d4704],sp
  41346b:	add    BYTE PTR [eax+0x56],0xef
  41346f:	jne    0x41343c
  413471:	ins    DWORD PTR es:[edi],dx
  413472:	fst    QWORD PTR [ecx]
  413474:	jnp    0x4134f3
  413476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413477:	or     dh,dh
  413479:	and    al,0x3b
  41347b:	or     eax,0x302114fe
  413480:	sub    esi,edx
  413482:	mov    DWORD PTR [edx],ebp
  413484:	adc    ebp,DWORD PTR [ebx+0x52]
  413487:	mov    ecx,0x99cba3eb
  41348c:	(bad)  
  41348d:	fisubr WORD PTR [ebx]
  41348f:	lock push edx
  413491:	jmp    DWORD PTR [eax-0x69]
  413494:	(bad)  
  413495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413496:	loop   0x4134f3
  413498:	or     ecx,DWORD PTR [ebx+0x172260cd]
  41349e:	jne    0x4134b7
  4134a0:	sbb    eax,ebx
  4134a2:	pop    esi
  4134a3:	mov    ebx,0xf395636e
  4134a8:	xor    BYTE PTR [edi-0x504d7b94],bh
  4134ae:	mov    al,ds:0x83543f4a
  4134b3:	dec    ebp
  4134b4:	mov    ecx,0x1feb18ac
  4134b9:	mov    dh,BYTE PTR [eax+0x37]
  4134bc:	push   es
  4134bd:	and    eax,0x91f8794b
  4134c2:	mov    ds:0x3b61d04f,eax
  4134c7:	call   0xfeef:0x897b016e
  4134ce:	pop    edx
  4134cf:	push   ds
  4134d0:	dec    ebp
  4134d1:	adc    al,cl
  4134d3:	bound  esp,QWORD PTR ds:0x493e2b8
  4134d9:	and    eax,0xe7d1fcff
  4134de:	push   es
  4134df:	(bad)  
  4134e0:	sub    ecx,ecx
  4134e2:	mov    dh,BYTE PTR [eax+0x2b5d5f1e]
  4134e8:	fst    DWORD PTR [ebx]
  4134ea:	test   al,0xb4
  4134ec:	mov    edi,0x99528251
  4134f1:	lea    edi,[ebp-0x401a6777]
  4134f7:	xchg   ebp,eax
  4134f8:	fisubr WORD PTR [esi+0x4b]
  4134fb:	pop    edi
  4134fc:	leave  
  4134fd:	add    al,0x87
  4134ff:	mov    al,0x55
  413501:	add    DWORD PTR [ebp+0x67],ecx
  413504:	and    DWORD PTR [eax+0x75],ebx
  413507:	jecxz  0x4134b5
  413509:	xchg   edi,eax
  41350a:	pop    ebp
  41350b:	lods   al,BYTE PTR ds:[esi]
  41350c:	add    esi,DWORD PTR [eax+0x1c2f5907]
  413512:	add    ch,BYTE PTR [eax]
  413514:	mov    bl,0xfe
  413516:	ins    BYTE PTR es:[edi],dx
  413517:	add    eax,0x76d5d1ec
  41351c:	xchg   edi,eax
  41351d:	pop    eax
  41351e:	imul   ebx,DWORD PTR [ebx],0xffffffb1
  413521:	sahf   
  413522:	fcomip st,st(5)
  413524:	leave  
  413525:	push   es
  413526:	rcl    DWORD PTR [ebp+0x48],1
  413529:	xchg   esp,eax
  41352a:	bound  ebp,QWORD PTR [eax]
  41352c:	pop    ebx
  41352d:	stc    
  41352e:	std    
  41352f:	ins    DWORD PTR es:[edi],dx
  413530:	pop    ebx
  413531:	cmp    ecx,DWORD PTR [ebp+0x642948f0]
  413537:	add    esi,ebp
  413539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41353a:	dec    ebp
  41353b:	xchg   edx,eax
  41353c:	mov    ebx,0xbb0fba4f
  413541:	not    DWORD PTR [ebx-0x6e]
  413544:	test   al,0xff
  413546:	(bad)  
  413547:	clc    
  413548:	test   eax,0x8292e784
  41354d:	cli    
  41354e:	ds or  al,0x8a
  413551:	adc    al,0xdd
  413553:	or     al,0xde
  413555:	(bad)  
  413556:	(bad)  
  413557:	stc    
  413558:	xchg   DWORD PTR [esi+0x5143af85],edx
  41355e:	mov    al,0xe2
  413560:	push   ebp
  413561:	shl    BYTE PTR [eax+0x15],1
  413564:	mov    bl,0xd9
  413566:	mov    ah,0xc4
  413568:	outs   dx,BYTE PTR ds:[esi]
  413569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41356a:	add    BYTE PTR [eax+0x211b6817],0x35
  413571:	sar    DWORD PTR [ebx],cl
  413573:	mov    ebx,0x60c6fac4
  413578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413579:	ror    DWORD PTR ds:0x7bc70390,cl
  41357f:	pop    es
  413580:	in     al,dx
  413581:	addr16 out 0xd2,eax
  413584:	xchg   edi,eax
  413585:	cmovs  ebp,ecx
  413588:	dec    ecx
  413589:	sbb    esi,edi
  41358b:	(bad)  
  41358c:	ins    BYTE PTR es:[edi],dx
  41358d:	loop   0x4135c2
  41358f:	push   ebx
  413590:	ret    
  413591:	rol    edi,0xcf
  413594:	mov    dh,0xad
  413596:	jbe    0x4135f7
  413598:	inc    ebp
  413599:	je     0x413567
  41359b:	lods   eax,DWORD PTR ds:[esi]
  41359c:	push   DWORD PTR [eax]
  41359e:	jp     0x413579
  4135a0:	(bad)  
  4135a1:	jo     0x413547
  4135a3:	xchg   edi,eax
  4135a4:	fidiv  DWORD PTR [edi+eax*8-0x17]
  4135a8:	mov    ebp,0x9c0b2668
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	cli    
  4135af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b0:	sbb    ch,cl
  4135b2:	icebp  
  4135b3:	or     dh,BYTE PTR [esi+0x7833eee5]
  4135b9:	lock mov cl,0x9d
  4135bc:	push   ebp
  4135bd:	cmp    dl,BYTE PTR [ecx-0x2d]
  4135c0:	add    DWORD PTR [esi-0x68],esi
  4135c3:	int    0xb3
  4135c5:	xchg   ecx,eax
  4135c6:	shl    BYTE PTR [ecx+edx*2],cl
  4135c9:	cld    
  4135ca:	(bad)  
  4135cb:	and    BYTE PTR [bx+si+0x6f4f],dl
  4135d0:	inc    esp
  4135d1:	sub    ecx,ebp
  4135d3:	jmp    DWORD PTR [ebx]
  4135d5:	mov    esi,0xd9f9fcaf
  4135da:	jmp    0x413597
  4135dc:	inc    edi
  4135dd:	sar    DWORD PTR [edi+ebp*4],cl
  4135e0:	jecxz  0x413611
  4135e2:	stos   DWORD PTR es:[edi],eax
  4135e3:	inc    edi
  4135e4:	enter  0xda55,0x8b
  4135e8:	and    BYTE PTR [eax],bl
  4135ea:	or     al,0x4e
  4135ec:	fadd   QWORD PTR [eax-0x32]
  4135ef:	(bad)
  4135f3:	and    eax,DWORD PTR [ebx]
  4135f5:	jmp    0x93757604
  4135fa:	imul   edi,DWORD PTR [edi+0x38],0x1f
  4135fe:	outs   dx,DWORD PTR ds:[esi]
  4135ff:	adc    ebp,DWORD PTR [ebx-0x4b]
  413602:	jg     0x4135d3
  413604:	sub    cl,BYTE PTR [esi-0x3296506d]
  41360a:	pop    esi
  41360b:	ret    
  41360c:	outs   dx,DWORD PTR ds:[esi]
  41360d:	ror    ah,0x10
  413610:	gs jo  0x413671
  413613:	push   esp
  413614:	sub    ch,BYTE PTR [esi-0x18]
  413617:	xchg   esi,eax
  413618:	mov    bh,0xb2
  41361a:	sbb    BYTE PTR [eax-0x49],0xc6
  41361e:	add    al,0x7a
  413620:	inc    edx
  413621:	into   
  413622:	lds    ecx,FWORD PTR [edi-0x6bbd9bf5]
  413628:	and    al,0xe0
  41362a:	sbb    esi,0x5b
  41362d:	jge    0x413662
  41362f:	xor    BYTE PTR [ebp+0x4945de3a],ah
  413635:	repz jg 0x4136a3
  413638:	sbb    DWORD PTR [edx+0x20e2364a],eax
  41363e:	jmp    0xe4acd873
  413643:	(bad)  
  413644:	ins    DWORD PTR es:[edi],dx
  413645:	cmp    ecx,DWORD PTR [esi-0x277386ca]
  41364b:	pop    es
  41364c:	fcomp  DWORD PTR [edi+0x74f301c6]
  413652:	xchg   BYTE PTR [edx-0x5c],bh
  413655:	xor    BYTE PTR [edx],0xcf
  413658:	push   edx
  413659:	jle    0x413665
  41365b:	rep ins BYTE PTR es:[edi],dx
  41365d:	push   ebx
  41365e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365f:	add    eax,0x6568199
  413664:	inc    ebx
  413665:	mov    ds:0xca103951,eax
  41366a:	in     eax,dx
  41366b:	rcl    BYTE PTR [edi],cl
  41366d:	data16 out dx,al
  41366f:	cmp    edx,DWORD PTR [ecx+ecx*2-0x59]
  413673:	mov    ecx,0xe6de9d4f
  413678:	push   eax
  413679:	les    eax,FWORD PTR [edi-0x63]
  41367c:	xor    al,0x6
  41367e:	dec    edi
  41367f:	aam    0x39
  413681:	outs   dx,BYTE PTR ds:[esi]
  413682:	gs inc esp
  413684:	adc    BYTE PTR [esi+0x7b593ed9],ah
  41368a:	loop   0x41365b
  41368c:	push   ds
  41368d:	scas   al,BYTE PTR es:[edi]
  41368e:	sti    
  41368f:	mov    ah,BYTE PTR [ebx-0x2a9d184c]
  413695:	loope  0x4136bf
  413697:	pop    esi
  413698:	aam    0x4f
  41369a:	push   edi
  41369b:	call   0x7a3df34a
  4136a0:	cld    
  4136a1:	cmp    dl,ch
  4136a3:	(bad)  
  4136a4:	repz mov ds:0xb02433e2,eax
  4136aa:	cmp    al,0x95
  4136ac:	cmp    eax,0x109693d7
  4136b1:	mov    WORD PTR [esi+edi*4+0x2e],?
  4136b5:	mov    ebx,DWORD PTR [eax]
  4136b7:	dec    esi
  4136b8:	lahf   
  4136b9:	mov    ch,0xbc
  4136bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136bc:	fs push esp
  4136be:	inc    ebp
  4136bf:	sti    
  4136c0:	xchg   edi,eax
  4136c1:	xchg   DWORD PTR [edx+edi*2+0x73],ecx
  4136c5:	xchg   edi,eax
  4136c6:	cmp    DWORD PTR [ebx-0x68],esi
  4136c9:	sub    DWORD PTR [edx-0x35],eax
  4136cc:	or     DWORD PTR [ebp+0x2e684a85],esp
  4136d2:	pop    ds
  4136d3:	es xor eax,0x4ef13a68
  4136d9:	ret    0x476c
  4136dc:	push   esi
  4136dd:	and    eax,0x543ec04e
  4136e2:	ret    
  4136e3:	pop    ss
  4136e4:	test   DWORD PTR [eax],ecx
  4136e6:	sbb    eax,0x7d592e89
  4136eb:	lods   eax,DWORD PTR ds:[esi]
  4136ec:	add    DWORD PTR [ebx+0x74],esp
  4136ef:	(bad)  
  4136f0:	cld    
  4136f1:	pop    eax
  4136f2:	cwde   
  4136f3:	and    dh,bh
  4136f5:	cmp    al,0x57
  4136f7:	and    DWORD PTR [ebp-0x44],ecx
  4136fa:	in     eax,dx
  4136fb:	adc    dx,WORD PTR [esi-0x2d]
  4136ff:	clc    
  413700:	(bad)  
  413701:	mov    al,0x90
  413703:	rcl    DWORD PTR [ecx+ebp*1-0x7d],cl
  413707:	or     DWORD PTR [ecx+0x7a7d2df4],esp
  41370d:	fcomi  st,st(7)
  41370f:	and    BYTE PTR [edi-0xd],ah
  413712:	test   eax,0x4a90ed94
  413717:	cmp    BYTE PTR [eax+0x183f64f7],bl
  41371d:	sub    ebp,DWORD PTR [edx-0x3c]
  413720:	xor    BYTE PTR [edx-0x24],ch
  413723:	xor    BYTE PTR [ebx-0x10b14b01],al
  413729:	inc    bh
  41372b:	(bad)  
  41372c:	out    0xfc,al
  41372e:	fwait
  41372f:	std    
  413730:	dec    edx
  413731:	(bad)  
  413732:	aad    0xd9
  413734:	adc    edx,edi
  413736:	mov    esi,0xe93cb884
  41373b:	jge    0x4137b2
  41373d:	xchg   edx,eax
  41373e:	mov    bl,0x8b
  413740:	mul    BYTE PTR [ebx]
  413742:	loop   0x4136ee
  413744:	sbb    eax,0x96519146
  413749:	mov    edi,0x2b0b80ec
  41374e:	fwait
  41374f:	pop    ebx
  413750:	add    al,0x27
  413752:	test   ebp,edx
  413754:	popf   
  413755:	xchg   ecx,eax
  413756:	sbb    eax,0xd3762dc7
  41375b:	mov    ch,dl
  41375d:	ror    DWORD PTR [ebx-0x6c],1
  413760:	ins    BYTE PTR es:[edi],dx
  413761:	scas   al,BYTE PTR es:[edi]
  413762:	mov    esp,0x7659e4f7
  413767:	sahf   
  413768:	mov    ds:0x96607ce2,al
  41376d:	clc    
  41376e:	fdiv   DWORD PTR [ebp-0x1a5409d6]
  413774:	popa   
  413775:	inc    edx
  413776:	sti    
  413777:	cmp    ah,BYTE PTR [ebp-0x6e]
  41377a:	pop    ecx
  41377b:	push   edi
  41377c:	dec    edx
  41377d:	push   es
  41377e:	lahf   
  41377f:	or     edi,esp
  413781:	pusha  
  413782:	jmp    0xb20da8d2
  413787:	int3   
  413788:	push   esi
  413789:	and    ch,BYTE PTR ds:0x3d4bce7a
  41378f:	xor    esp,DWORD PTR [edi]
  413791:	or     BYTE PTR [esi+0x399c1d1f],0x2e
  413798:	clc    
  413799:	out    dx,al
  41379a:	add    ebx,esp
  41379c:	dec    edx
  41379d:	call   0xee22:0xd6a89339
  4137a4:	cmp    DWORD PTR [esi],ebx
  4137a6:	add    BYTE PTR [ebp+0x27047d35],cl
  4137ac:	push   0xfffffff2
  4137ae:	dec    edi
  4137af:	ins    DWORD PTR es:[edi],dx
  4137b0:	in     al,0x1c
  4137b2:	add    eax,0xbefb036d
  4137b7:	xchg   BYTE PTR [edx+0x4d],al
  4137ba:	xchg   dh,dh
  4137bc:	mov    dh,0xe3
  4137be:	lods   al,BYTE PTR ds:[esi]
  4137bf:	and    ebx,DWORD PTR [edi+eiz*2+0x7ed120df]
  4137c6:	mov    ebp,0xd65cc91a
  4137cb:	out    dx,eax
  4137cc:	popf   
  4137cd:	xchg   BYTE PTR [ebp-0x47],ch
  4137d0:	popa   
  4137d1:	pop    esp
  4137d2:	push   ebp
  4137d3:	lahf   
  4137d4:	(bad)  
  4137d5:	or     bl,ah
  4137d7:	fwait
  4137d8:	xchg   ebx,eax
  4137d9:	cdq    
  4137da:	cmp    BYTE PTR [edx+0x79],0x15
  4137de:	push   cs
  4137df:	and    BYTE PTR ds:0x6d3f18cd,dl
  4137e5:	mov    dl,0xa9
  4137e7:	inc    eax
  4137e8:	sti    
  4137e9:	clc    
  4137ea:	dec    eax
  4137eb:	cmp    ecx,DWORD PTR [esi+0x19]
  4137ee:	pop    es
  4137ef:	leave  
  4137f0:	sbb    al,cl
  4137f2:	mov    DWORD PTR [eax],esi
  4137f4:	pop    ebp
  4137f5:	or     DWORD PTR [ebx+0x4237d78d],edi
  4137fb:	rcl    edx,cl
  4137fd:	cmc    
  4137fe:	cwde   
  4137ff:	sti    
  413800:	lds    ebp,FWORD PTR [edx]
  413802:	ins    DWORD PTR es:[edi],dx
  413803:	pop    es
  413804:	jmp    0x9ff0:0x4e8abc96
  41380b:	in     eax,0xa0
  41380d:	mov    ds:0x1fed82e4,al
  413812:	inc    ecx
  413813:	pusha  
  413814:	pop    ss
  413815:	es inc ebp
  413817:	sbb    eax,0x91579ea4
  41381c:	and    esi,esp
  41381e:	push   0x150e1cf3
  413823:	sub    dl,BYTE PTR [ebx+eax*4-0x70]
  413827:	repnz fs (bad) 
  41382a:	sub    BYTE PTR [ecx+0x35],cl
  41382d:	add    al,0x61
  41382f:	or     DWORD PTR [ebx-0x42],ebx
  413832:	aam    0xf8
  413834:	mov    ebp,0xa8d0d64c
  413839:	fnsave [ebx]
  41383b:	ret    
  41383c:	popa   
  41383d:	and    ebx,DWORD PTR [esi-0x16]
  413840:	repz popa 
  413842:	pop    edx
  413843:	push   es
  413844:	lods   eax,DWORD PTR ds:[esi]
  413846:	aaa    
  413847:	add    eax,0x5c6fbc1b
  41384c:	shl    BYTE PTR [ebp-0x36],0x82
  413850:	sbb    BYTE PTR [ebx],dl
  413852:	das    
  413853:	mov    esp,0x1a13368c
  413858:	mov    al,ds:0xf21ad37c
  41385d:	les    esp,FWORD PTR [esi+0x69]
  413860:	dec    edx
  413861:	fdivr  st(3),st
  413863:	dec    eax
  413864:	or     DWORD PTR [eax],0x74
  413867:	mov    al,0x90
  413869:	xchg   ebx,eax
  41386a:	(bad)  
  41386c:	jbe    0x413811
  41386e:	and    ah,BYTE PTR [ebp+0x7c]
  413871:	push   ecx
  413872:	mov    al,0x8c
  413874:	jbe    0x41387e
  413876:	jbe    0x413878
  413878:	fwait
  413879:	lea    ebx,[ebp-0x25]
  41387c:	xchg   esi,eax
  41387d:	fisttp QWORD PTR [ecx-0x20b9d3a8]
  413883:	mov    dl,0x80
  413885:	clc    
  413886:	bound  esp,QWORD PTR [ebp+0x5906d4e2]
  41388c:	(bad)  
  41388e:	in     eax,dx
  41388f:	mov    ah,0xf9
  413891:	dec    ecx
  413892:	mov    cl,dh
  413894:	fbld   TBYTE PTR [ebx+eax*8-0x1f]
  413898:	sbb    ah,BYTE PTR [ebp+eax*4+0x14]
  41389c:	fdivr  QWORD PTR [esi-0x4d]
  41389f:	es push esi
  4138a1:	fnstcw WORD PTR [edx+0x15]
  4138a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138a5:	outs   dx,BYTE PTR ds:[esi]
  4138a6:	push   es
  4138a7:	stos   DWORD PTR es:[edi],eax
  4138a8:	mov    dh,0x97
  4138aa:	pushf  
  4138ab:	cmp    BYTE PTR [edx+0x57665856],cl
  4138b1:	inc    edx
  4138b2:	cmp    BYTE PTR [ecx-0x58246625],dl
  4138b8:	or     eax,0x97259fd1
  4138bd:	aaa    
  4138be:	xchg   edx,edi
  4138c0:	sahf   
  4138c1:	dec    eax
  4138c2:	pop    ds
  4138c3:	cmp    ah,BYTE PTR [ebp-0x2ed2e75d]
  4138c9:	push   edi
  4138ca:	je     0x41387b
  4138cc:	push   ebx
  4138cd:	mov    cl,0x8b
  4138cf:	push   ss
  4138d0:	xchg   edx,eax
  4138d1:	and    ecx,ecx
  4138d3:	sbb    BYTE PTR [eax+edx*2-0x22468880],ah
  4138da:	or     eax,0xf24e4454
  4138df:	inc    edi
  4138e0:	push   0xc003af39
  4138e5:	or     DWORD PTR [eax+0x4b],edx
  4138e8:	mov    edi,0x504b26cc
  4138ed:	add    DWORD PTR [edx+0x190aebfe],esi
  4138f3:	inc    edx
  4138f4:	jmp    0x2f70:0x71b4224d
  4138fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138fc:	not    BYTE PTR [ebp+0xfebfa94]
  413902:	mov    esp,0x937fb4e9
  413907:	push   ebp
  413908:	xchg   ebx,eax
  413909:	cmp    eax,0xddb68f31
  41390e:	cmp    eax,0x1c7851db
  413913:	or     DWORD PTR [edx+0x10d9b83c],esi
  413919:	xor    BYTE PTR [ebp-0x64f711e6],0xbe
  413920:	lods   al,BYTE PTR ds:[esi]
  413921:	aaa    
  413922:	or     al,0xf8
  413924:	inc    esp
  413925:	jne    0xc1f8fb98
  41392b:	jp     0x4138f8
  41392d:	jmp    0x6209:0x3bf9daee
  413934:	enter  0xf837,0x7d
  413938:	push   esi
  413939:	push   edi
  41393a:	in     al,0x6a
  41393c:	icebp  
  41393d:	jae    0x413903
  41393f:	(bad)  
  413940:	sbb    ah,cl
  413942:	cmc    
  413943:	int3   
  413944:	mov    dl,BYTE PTR [edi-0x7a]
  413947:	das    
  413948:	cmp    BYTE PTR [edx-0x59],0xce
  41394c:	popa   
  41394d:	cli    
  41394e:	pop    ecx
  41394f:	push   0x4aae5b72
  413954:	mov    edi,0xb5463120
  413959:	jns    0x4139d3
  41395b:	or     eax,0xdae6a609
  413960:	lods   eax,DWORD PTR ds:[esi]
  413961:	hlt    
  413962:	in     al,dx
  413963:	arpl   si,ax
  413965:	lahf   
  413966:	or     eax,0x85864ac9
  41396b:	retf   
  41396c:	inc    esi
  41396d:	or     eax,0x293364e5
  413972:	out    0x71,eax
  413974:	xor    dh,ch
  413976:	sub    eax,0x69601b93
  41397b:	mov    WORD PTR [ebx-0x7c01133c],ds
  413981:	xchg   ecx,eax
  413982:	add    DWORD PTR [ebx-0x43c4970d],0xb
  413989:	xor    edx,esi
  41398b:	cmp    esp,DWORD PTR [ebx-0x7b8700ca]
  413991:	mov    DWORD PTR [ecx+0x6d],eax
  413994:	mov    al,ds:0x3ed26412
  413999:	jge    0x41396e
  41399b:	arpl   ax,dx
  41399d:	push   0x5024efa4
  4139a2:	sbb    edx,DWORD PTR [ebx-0x52]
  4139a5:	dec    edx
  4139a6:	aaa    
  4139a7:	sub    ebx,DWORD PTR [eax+0x69]
  4139aa:	xor    al,0xbc
  4139ac:	shr    DWORD PTR [esi+0x5b],0xf6
  4139b0:	jnp    0x413974
  4139b2:	jns    0x413979
  4139b4:	inc    ebx
  4139b5:	inc    edi
  4139b6:	xchg   ecx,eax
  4139b7:	stc    
  4139b8:	ficom  WORD PTR [edi+0xe]
  4139bb:	xchg   esp,eax
  4139bd:	mov    ebp,0x3fc20456
  4139c2:	stc    
  4139c3:	fnstcw WORD PTR [eax+0x25]
  4139c6:	and    DWORD PTR [esi+0x10e6b71e],ecx
  4139cc:	jmp    0xe767a27
  4139d1:	dec    esi
  4139d2:	int    0x24
  4139d4:	inc    esp
  4139d5:	dec    eax
  4139d6:	or     cl,BYTE PTR [edi]
  4139d8:	or     edi,ebp
  4139da:	lahf   
  4139db:	and    bl,BYTE PTR [edi-0x6e]
  4139de:	js     0x4139cb
  4139e0:	aaa    
  4139e1:	push   es
  4139e2:	stc    
  4139e3:	fld    st(3)
  4139e5:	outs   dx,BYTE PTR ds:[esi]
  4139e6:	ror    DWORD PTR [eax+0x545591c1],cl
  4139ec:	repz neg ecx
  4139ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f0:	into   
  4139f1:	bound  edi,QWORD PTR [edx-0x1b41a5c8]
  4139f7:	pop    ecx
  4139f8:	test   eax,0xab084a0b
  4139fd:	stos   BYTE PTR es:[edi],al
  4139fe:	push   esi
  4139ff:	or     DWORD PTR [ebp-0x7c860478],ebx
  413a05:	(bad)  
  413a07:	mov    edx,0xb500fb3b
  413a0c:	je     0x413a00
  413a0e:	xor    DWORD PTR [ecx+0x23],eax
  413a11:	sub    eax,0x444f2dd
  413a16:	mov    ?,WORD PTR [ebp+0x13c36125]
  413a1c:	daa    
  413a1d:	xor    DWORD PTR [edx+0x2fd29085],edi
  413a23:	mov    ebx,0xe72a3081
  413a28:	and    cl,BYTE PTR [edi+0x46]
  413a2b:	or     eax,0x458377e1
  413a30:	jnp    0x4139e9
  413a32:	nop
  413a33:	rol    BYTE PTR [ebp+eax*4-0x79],0x1d
  413a38:	mov    ds:0x91a512f4,eax
  413a3d:	sar    al,1
  413a3f:	xor    ebx,DWORD PTR [edx-0x1c]
  413a42:	xchg   ebp,eax
  413a43:	loope  0x413a84
  413a45:	dec    edx
  413a46:	inc    eax
  413a47:	pop    edi
  413a48:	mov    ds:0xfc120a54,eax
  413a4d:	(bad)  
  413a4e:	or     dh,ah
  413a50:	sub    ecx,DWORD PTR [eax+edx*2+0x1f]
  413a54:	pop    edx
  413a55:	add    al,0xf8
  413a57:	mov    ch,0xa3
  413a59:	and    eax,0xf4e135ad
  413a5e:	retf   0xbb47
  413a61:	inc    edi
  413a62:	ins    BYTE PTR es:[edi],dx
  413a63:	std    
  413a64:	sti    
  413a65:	pop    edi
  413a66:	pop    ebp
  413a67:	sbb    DWORD PTR [eax-0x66],0x25
  413a6b:	aaa    
  413a6c:	stos   BYTE PTR es:[edi],al
  413a6d:	dec    eax
  413a6e:	cs rcl bx,1
  413a72:	js     0x413a5e
  413a74:	int3   
  413a75:	and    bl,ch
  413a77:	lods   al,BYTE PTR ds:[esi]
  413a78:	sbb    DWORD PTR [esi],edx
  413a7a:	mov    eax,ds:0x24fccd1b
  413a7f:	enter  0xe636,0x49
  413a83:	dec    ebx
  413a84:	fst    DWORD PTR ds:[ecx-0x1f]
  413a88:	dec    esi
  413a89:	int    0x5b
  413a8b:	mov    eax,ds:0x9cb22751
  413a90:	cmp    eax,0xe7604c4
  413a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a96:	and    dl,BYTE PTR [ecx-0x5a4b33db]
  413a9c:	repz ror DWORD PTR [bx+si+0x46],0xe7
  413aa2:	and    eax,0x824735ef
  413aa7:	outs   dx,BYTE PTR ds:[esi]
  413aa8:	xor    DWORD PTR [edi+0x55ef65cf],ecx
  413aae:	xchg   esp,eax
  413aaf:	add    eax,0xaf52960b
  413ab4:	mov    cl,BYTE PTR [edx-0x1852f4c7]
  413aba:	cmp    BYTE PTR [ecx],ch
  413abc:	mov    cl,0xee
  413abe:	push   edi
  413abf:	push   0x42
  413ac1:	add    dh,BYTE PTR [ebp+edx*4-0x5c36ff6f]
  413ac8:	enter  0x1106,0x1c
  413acc:	mov    cs,WORD PTR [eax+0x77]
  413acf:	xor    ah,bh
  413ad1:	ss loope 0x413adf
  413ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad5:	int    0x40
  413ad7:	test   al,0xce
  413ad9:	inc    esi
  413ada:	arpl   WORD PTR [edi],bp
  413adc:	(bad)  
  413add:	push   ss
  413ade:	aad    0xf3
  413ae0:	repz push esp
  413ae2:	stos   BYTE PTR es:[edi],al
  413ae3:	test   eax,0x2f4adec
  413ae8:	scas   al,BYTE PTR es:[edi]
  413ae9:	jle    0x413acd
  413aeb:	pop    ds
  413aec:	and    eax,0xf19928bc
  413af1:	cmp    BYTE PTR [edi-0x2d9d344c],cl
  413af7:	adc    bl,BYTE PTR [edi+ecx*8]
  413afa:	mov    BYTE PTR [ecx+0x1a],bl
  413afd:	imul   eax,DWORD PTR [ecx+0x3c],0x15
  413b01:	std    
  413b02:	std    
  413b03:	gs mov esi,0x1103b83d
  413b09:	inc    edx
  413b0a:	push   esp
  413b0b:	xchg   esi,eax
  413b0c:	jne    0x413b29
  413b0e:	mov    ss,WORD PTR [edi+esi*2]
  413b11:	dec    edx
  413b12:	mov    ecx,0xcf05037a
  413b17:	stos   BYTE PTR es:[edi],al
  413b18:	mov    BYTE PTR [ebp+0x213c63d1],ch
  413b1e:	ins    BYTE PTR es:[edi],dx
  413b1f:	shl    al,0xf8
  413b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b23:	aaa    
  413b24:	dec    edi
  413b25:	mov    bh,0x78
  413b27:	jae    0x413acd
  413b29:	jmp    0xaa322078
  413b2e:	cmp    eax,0x6e540de6
  413b33:	fldcw  WORD PTR [ebp+0x5f2d549b]
  413b39:	xor    ch,BYTE PTR [edi-0x75c16581]
  413b3f:	mov    fs,esi
  413b41:	popa   
  413b42:	or     al,0x5e
  413b44:	sbb    ah,BYTE PTR [ebx-0x2d]
  413b47:	sub    edi,DWORD PTR [ecx]
  413b49:	push   ecx
  413b4a:	stos   BYTE PTR es:[edi],al
  413b4b:	scas   eax,DWORD PTR es:[edi]
  413b4c:	pop    es
  413b4d:	ss inc eax
  413b4f:	ret    0x2001
  413b52:	nop
  413b53:	lods   al,BYTE PTR ds:[esi]
  413b54:	xchg   esp,eax
  413b55:	xchg   edi,eax
  413b56:	outs   dx,DWORD PTR ds:[esi]
  413b57:	jo     0x413b28
  413b59:	leave  
  413b5a:	and    edi,ebx
  413b5c:	jle    0x413b72
  413b5e:	xor    bl,BYTE PTR [esi+0x4]
  413b61:	ds and ebp,edi
  413b64:	(bad)
  413b69:	inc    esp
  413b6a:	pop    eax
  413b6b:	adc    al,bh
  413b6d:	xchg   edx,eax
  413b6e:	cwde   
  413b6f:	adc    eax,0xdebb09ec
  413b74:	outs   dx,BYTE PTR ds:[esi]
  413b75:	or     BYTE PTR ds:0xfea42c2e,bh
  413b7b:	lock stos BYTE PTR es:[edi],al
  413b7d:	test   al,0x58
  413b7f:	inc    esp
  413b80:	pop    es
  413b81:	fs mov esi,0x5396fa1
  413b87:	and    eax,0xc1fc4a45
  413b8c:	sbb    edi,edx
  413b8e:	cwde   
  413b8f:	cli    
  413b90:	sbb    al,dh
  413b92:	pop    ebx
  413b93:	imul   esp,DWORD PTR ds:0x79e162f3,0xffffffcf
  413b9a:	xchg   esi,eax
  413b9b:	xchg   ecx,eax
  413b9c:	adc    cl,dl
  413b9e:	mov    esi,0xe1a077e6
  413ba3:	loope  0x413b9d
  413ba5:	xchg   DWORD PTR [edx-0x64],edi
  413ba8:	push   es
  413ba9:	pop    ebp
  413baa:	push   ebx
  413bab:	retf   0xda02
  413bae:	sar    BYTE PTR [edi+edx*2+0x51],cl
  413bb2:	aaa    
  413bb3:	xchg   ecx,eax
  413bb4:	mov    al,ds:0xda77aacb
  413bb9:	sub    DWORD PTR [ebp-0x51],ecx
  413bbc:	sti    
  413bbd:	lods   eax,DWORD PTR ds:[esi]
  413bbe:	ret    0x3522
  413bc1:	inc    esi
  413bc2:	ret    0xacd0
  413bc5:	push   esp
  413bc6:	popa   
  413bc7:	mov    al,0xfb
  413bc9:	cmp    bh,BYTE PTR [ebx]
  413bcb:	mov    bl,0x8
  413bcd:	dec    esp
  413bce:	data16 sbb al,0xa
  413bd1:	lahf   
  413bd2:	pop    ss
  413bd3:	mov    al,BYTE PTR fs:[edx+esi*8+0x49f482ae]
  413bdb:	fucomi st,st(3)
  413bdd:	add    eax,0x72a1813d
  413be2:	imul   edi,DWORD PTR [edx-0x3],0x3cf4b250
  413be9:	and    edi,DWORD PTR [edi]
  413beb:	rol    al,0xe0
  413bee:	jl     0x413c4b
  413bf0:	std    
  413bf1:	push   ebx
  413bf2:	pop    edx
  413bf3:	leave  
  413bf4:	imul   eax,DWORD PTR [esi-0x2badeceb],0x2e
  413bfb:	inc    ecx
  413bfc:	jne    0x413c40
  413bfe:	push   ss
  413bff:	mov    ecx,0x6bdbfbd1
  413c04:	(bad)  
  413c06:	into   
  413c07:	pop    esp
  413c08:	mov    al,ds:0x1662861e
  413c0d:	imul   BYTE PTR [esp+edi*1+0x10]
  413c11:	push   eax
  413c12:	push   eax
  413c13:	mov    bl,0x69
  413c15:	jne    0x413bcf
  413c17:	std    
  413c18:	icebp  
  413c19:	adc    DWORD PTR [ebx+0x22dee9f7],ecx
  413c1f:	retf   0x9879
  413c22:	sub    DWORD PTR [esi+0x5b],0xffffffc5
  413c26:	push   ss
  413c27:	push   ebx
  413c28:	or     bh,BYTE PTR [eax+0x13]
  413c2b:	dec    esp
  413c2c:	or     DWORD PTR fs:[ebp+0x737a4b13],eax
  413c33:	ds fwait
  413c35:	sbb    eax,0xa5f1801e
  413c3a:	and    al,0xf4
  413c3c:	push   ebp
  413c3d:	sub    esp,DWORD PTR [ebx+0x0]
  413c40:	add    BYTE PTR ds:[eax-0x7a],ah
  413c44:	fwait
  413c45:	(bad)  
  413c46:	mov    edx,0xc0431691
  413c4b:	arpl   WORD PTR [edx+eiz*1+0x48],dx
  413c4f:	jmp    0x413c44
  413c51:	out    0xcd,al
  413c53:	and    dl,BYTE PTR ds:0xb6082bff
  413c59:	cmp    cl,ch
  413c5b:	int    0x2f
  413c5d:	mov    edi,0x98739356
  413c62:	lahf   
  413c63:	dec    edx
  413c64:	mov    cl,0x31
  413c66:	lods   al,BYTE PTR ds:[esi]
  413c67:	mov    edx,edx
  413c69:	clc    
  413c6a:	imul   BYTE PTR [edx+0x76]
  413c6d:	mov    ebx,0x5a413571
  413c72:	(bad)  
  413c74:	xor    eax,edi
  413c76:	jecxz  0x413ce9
  413c78:	call   FWORD PTR [edi-0x3ef5540f]
  413c7e:	adc    BYTE PTR [eax-0x3c3ec74b],ah
  413c84:	imul   esi
  413c86:	(bad)  
  413c88:	xchg   esp,edx
  413c8a:	inc    edi
  413c8b:	in     al,0xf2
  413c8d:	jle    0x413ce2
  413c8f:	push   edi
  413c90:	lods   eax,DWORD PTR ds:[esi]
  413c91:	popf   
  413c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c93:	pop    esp
  413c94:	jmp    0x413c30
  413c96:	ins    BYTE PTR es:[edi],dx
  413c97:	push   es
  413c98:	ins    DWORD PTR es:[edi],dx
  413c99:	out    0xc4,eax
  413c9b:	in     eax,0x67
  413c9d:	lods   eax,DWORD PTR ds:[esi]
  413c9e:	lahf   
  413c9f:	fcmovbe st,st(0)
  413ca1:	xchg   esp,eax
  413ca2:	mov    ebx,?
  413ca4:	loop   0x413c8c
  413ca6:	ret    
  413ca7:	xor    eax,0xc4dffbe2
  413cac:	adc    BYTE PTR [ecx-0x5033cf72],0x61
  413cb3:	dec    esi
  413cb4:	or     DWORD PTR ds:0x29a03905,esp
  413cba:	ret    0x1c33
  413cbd:	shl    DWORD PTR [ebp+0x73],1
  413cc0:	out    dx,eax
  413cc1:	out    dx,al
  413cc2:	imul   BYTE PTR [ebx+0x29]
  413cc5:	out    0x83,al
  413cc7:	shr    bh,cl
  413cc9:	cld    
  413cca:	adc    BYTE PTR [edi-0x36],bh
  413ccd:	add    eax,DWORD PTR [ebx+0x25]
  413cd0:	clc    
  413cd1:	ret    0x8629
  413cd4:	iret   
  413cd5:	xchg   DWORD PTR [esi-0x6],eax
  413cd8:	popf   
  413cd9:	sbb    edx,DWORD PTR [edi]
  413cdb:	js     0x413cb3
  413cdd:	cmp    bl,bl
  413cdf:	sub    eax,0xc358d566
  413ce4:	loop   0x413c73
  413ce6:	lods   al,BYTE PTR ds:[esi]
  413ce7:	jns    0x413d22
  413ce9:	daa    
  413cea:	mov    bl,0xc9
  413cec:	dec    esp
  413ced:	addr16 xchg esi,eax
  413cef:	test   BYTE PTR [ecx-0x3e62544c],bh
  413cf5:	mov    eax,0xc12ec858
  413cfa:	jb     0x413cfd
  413cfc:	jb     0x413cc1
  413cfe:	push   es
  413cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d00:	mov    cl,0xe6
  413d02:	xor    al,0x23
  413d04:	lods   ax,WORD PTR ds:[esi]
  413d06:	sub    dh,BYTE PTR [ebx]
  413d08:	call   0x82ab:0x371854cc
  413d0f:	fimul  WORD PTR [ecx+0x15]
  413d12:	sub    DWORD PTR [edi+0x1d],esp
  413d15:	out    dx,al
  413d16:	retf   
  413d17:	push   edx
  413d18:	int    0x70
  413d1a:	mov    ds:0xeff4b439,al
  413d1f:	pop    esp
  413d20:	sahf   
  413d21:	fstp   QWORD PTR [ebx+0x3e0a8069]
  413d27:	rcl    BYTE PTR [edi],1
  413d29:	mov    dl,0xd6
  413d2b:	ror    BYTE PTR [edi],0xb6
  413d2e:	mov    al,0x23
  413d30:	add    esp,DWORD PTR [eax]
  413d32:	inc    eax
  413d33:	in     al,dx
  413d34:	rol    bl,cl
  413d36:	push   es
  413d37:	fs cmp eax,0xf49c6c64
  413d3d:	jecxz  0x413d15
  413d3f:	shr    DWORD PTR [esi-0x58],1
  413d42:	xchg   esp,eax
  413d43:	push   eax
  413d44:	sub    esp,ebx
  413d46:	lahf   
  413d47:	mov    DWORD PTR [ebx+0x78887bb0],ebp
  413d4d:	jbe    0x413d38
  413d4f:	mov    esp,0x95baf8e2
  413d54:	jo     0x413d66
  413d56:	sbb    BYTE PTR [eax],0x95
  413d59:	fs into 
  413d5b:	push   edi
  413d5c:	sahf   
  413d5d:	repz retf 
  413d5f:	jne    0x413cff
  413d61:	and    ah,BYTE PTR [edx-0x76d574c2]
  413d67:	sti    
  413d68:	sti    
  413d69:	test   BYTE PTR [ebx+0x5],dl
  413d6c:	jne    0x413d2f
  413d6e:	or     al,0x9e
  413d70:	pop    ds
  413d71:	xor    esp,ebp
  413d73:	into   
  413d74:	and    eax,0xb386a77e
  413d79:	(bad)  
  413d7a:	fadd   QWORD PTR [ebx-0x15]
  413d7d:	popa   
  413d7e:	loopne 0x413d65
  413d80:	test   eax,0x3f253da3
  413d85:	shl    bl,1
  413d87:	fstp   DWORD PTR ds:0x67ace5e1
  413d8d:	leave  
  413d8e:	mov    ecx,0xc7840b46
  413d93:	test   DWORD PTR [edx-0x6da0dd1a],ecx
  413d99:	shl    al,0xd
  413d9c:	(bad)
  413da0:	inc    ecx
  413da1:	stos   DWORD PTR es:[edi],eax
  413da2:	lahf   
  413da3:	ins    DWORD PTR es:[edi],dx
  413da4:	popf   
  413da5:	cli    
  413da6:	push   eax
  413da7:	pop    ebx
  413da8:	xor    ecx,0xffffff8c
  413dab:	cmp    eax,0x56084e42
  413db0:	fsubr  QWORD PTR [ebp-0x8677347]
  413db6:	sub    dl,BYTE PTR [ecx+0x26]
  413db9:	mov    bl,BYTE PTR [ecx+0x4fa85f12]
  413dbf:	pop    ds
  413dc0:	leave  
  413dc1:	jo     0x413de6
  413dc3:	jmp    0x413d47
  413dc5:	pusha  
  413dc6:	into   
  413dc7:	arpl   WORD PTR [eax],ax
  413dc9:	pusha  
  413dca:	sbb    bl,BYTE PTR [esi-0x5c16ddc2]
  413dd0:	outs   dx,BYTE PTR ds:[esi]
  413dd1:	test   eax,0x204b77ff
  413dd7:	dec    edi
  413dd8:	shl    BYTE PTR [ebx+0x65],0xc3
  413ddc:	adc    eax,0x79fd2bd5
  413de1:	fwait
  413de2:	cs loop 0x413d97
  413de5:	ins    DWORD PTR es:[edi],dx
  413de6:	ins    DWORD PTR es:[edi],dx
  413de7:	mov    ebx,0x5744af9b
  413dec:	mov    DWORD PTR [ecx],esp
  413dee:	xlat   BYTE PTR ds:[ebx]
  413def:	inc    eax
  413df0:	rcr    ecx,0xe4
  413df3:	xor    eax,0xabaa5503
  413df8:	clc    
  413df9:	into   
  413dfa:	aaa    
  413dfb:	call   0xd351:0xf3b64f7d
  413e02:	xchg   ebp,eax
  413e03:	push   ecx
  413e04:	lock fwait
  413e06:	test   eax,0x38fd8e7
  413e0b:	jp     0x413e47
  413e0d:	clc    
  413e0e:	sbb    DWORD PTR ds:0xc39b11e7,ecx
  413e14:	lahf   
  413e15:	cmp    DWORD PTR [ebx+0x56],ecx
  413e18:	jg     0x413e11
  413e1a:	xchg   edi,eax
  413e1b:	sub    DWORD PTR [ecx-0x587fb18f],0x1f8a9c13
  413e25:	dec    ecx
  413e26:	add    eax,0xfff45b32
  413e2b:	sub    DWORD PTR [ecx],0xad2cf3c8
  413e31:	adc    DWORD PTR ds:0xcb03bca4,ebp
  413e37:	push   esi
  413e38:	fild   QWORD PTR [ecx-0x653ab9cd]
  413e3e:	nop
  413e3f:	mov    ?,WORD PTR [esi+0x3fed69cf]
  413e45:	(bad)  
  413e46:	popa   
  413e47:	dec    eax
  413e49:	test   BYTE PTR [esi],ch
  413e4b:	pop    edx
  413e4c:	sub    DWORD PTR ds:0x5152a484,edi
  413e52:	xlat   BYTE PTR ds:[ebx]
  413e53:	dec    ebp
  413e54:	add    eax,0x1e4d782e
  413e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e5a:	mov    edi,0x3397c86a
  413e5f:	jnp    0x413e0d
  413e61:	aas    
  413e62:	lock popf 
  413e64:	cmc    
  413e65:	jg     0x413eb3
  413e67:	sbb    eax,0xb5ccba6b
  413e6c:	stos   DWORD PTR es:[edi],eax
  413e6d:	cdq    
  413e6e:	push   0xa8b19dea
  413e73:	mov    bh,bl
  413e75:	mov    al,0x31
  413e77:	pop    esi
  413e78:	scas   al,BYTE PTR es:[edi]
  413e79:	dec    ebx
  413e7a:	dec    esi
  413e7b:	fsubp  st(7),st
  413e7d:	not    BYTE PTR [ebp-0x64]
  413e80:	mov    ch,0x6f
  413e82:	stos   BYTE PTR es:[edi],al
  413e83:	push   esp
  413e84:	xor    BYTE PTR [ecx+0x7e],0xf6
  413e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e89:	out    0x2b,al
  413e8b:	imul   DWORD PTR [ebp+0x3e93fbe4]
  413e91:	je     0x413eee
  413e93:	push   0xffffff8f
  413e95:	push   ds
  413e96:	pop    esp
  413e97:	jnp    0x413f11
  413e99:	popa   
  413e9a:	clc    
  413e9b:	mov    ebp,gs
  413e9d:	cmc    
  413e9e:	mov    ds:0x41422403,al
  413ea3:	mov    eax,0xa9568942
  413ea8:	or     BYTE PTR [ebx],bl
  413eaa:	and    dl,bl
  413eac:	jmp    0x8a8a154
  413eb1:	mov    ecx,0x633228c
  413eb6:	jnp    0x413f37
  413eb8:	icebp  
  413eb9:	xchg   ebp,eax
  413eba:	sbb    BYTE PTR [eax-0x2b],ch
  413ebd:	or     dh,ah
  413ebf:	ja     0x413f2c
  413ec1:	mov    al,0xff
  413ec3:	mov    cl,0xbc
  413ec5:	mov    WORD PTR [ebp-0x3],?
  413ec8:	jl     0x413e7c
  413eca:	sub    BYTE PTR [ebp+0x8],cl
  413ecd:	mov    ds:0xcfbaf2c9,al
  413ed2:	pop    ecx
  413ed3:	or     edx,DWORD PTR [edx-0x5e]
  413ed6:	int3   
  413ed7:	nop
  413ed8:	xchg   ebp,eax
  413ed9:	sbb    bh,bl
  413edb:	gs into 
  413edd:	jmp    0xf32f:0x181bb5f3
  413ee4:	jne    0x413f55
  413ee6:	jp     0x413eb4
  413ee8:	inc    ebp
  413ee9:	test   eax,0x2424223
  413eee:	add    BYTE PTR [ebx-0x34d76fea],cl
  413ef4:	in     eax,0xdc
  413ef6:	mov    al,ds:0xd477d41f
  413efb:	in     al,dx
  413efc:	mov    ss,WORD PTR [edx-0xa]
  413eff:	(bad)  
  413f00:	and    al,0xa4
  413f02:	test   DWORD PTR [edi],esp
  413f04:	js     0x413f6a
  413f06:	push   ds
  413f07:	pushf  
  413f08:	fisubr DWORD PTR [edi-0x28]
  413f0b:	mov    ah,0x68
  413f0d:	cmp    esi,DWORD PTR [eax+eiz*1+0x691139ff]
  413f14:	mov    ds:0xf0bfa812,al
  413f19:	pop    ebp
  413f1a:	mov    ch,0x4e
  413f1c:	mov    ch,0xc6
  413f1e:	jbe    0x413f25
  413f20:	arpl   WORD PTR [edx+edx*4],cx
  413f23:	cmp    al,0x3b
  413f25:	(bad)  
  413f26:	xor    eax,0xbc2a24c5
  413f2b:	xchg   BYTE PTR [edi],ch
  413f2d:	pusha  
  413f2e:	pop    edi
  413f2f:	or     eax,0xf79ef934
  413f34:	test   eax,0x791eab72
  413f39:	xchg   esp,edx
  413f3b:	test   DWORD PTR [edi+edx*4+0x5071f15a],ecx
  413f42:	inc    ecx
  413f43:	mov    edx,DWORD PTR [edi+0x3fefde4f]
  413f49:	and    DWORD PTR [ecx-0x7e],ebx
  413f4c:	mov    esi,0x92965641
  413f51:	xor    edx,0x7
  413f54:	in     al,dx
  413f55:	pushf  
  413f56:	loop   0x413fbf
  413f58:	ins    DWORD PTR es:[edi],dx
  413f59:	pop    eax
  413f5a:	jecxz  0x413f51
  413f5c:	and    dl,0xc1
  413f5f:	adc    eax,0xd1cdc429
  413f64:	gs loope 0x413f67
  413f67:	(bad)  
  413f68:	jp     0x413f24
  413f6a:	xor    al,0xf0
  413f6c:	aaa    
  413f6d:	dec    ecx
  413f6e:	push   esp
  413f6f:	fistp  DWORD PTR [esi]
  413f71:	jge    0x413fce
  413f73:	xchg   edi,eax
  413f74:	cdq    
  413f75:	xlat   BYTE PTR ds:[ebx]
  413f76:	inc    eax
  413f77:	pop    bx
  413f79:	mov    dl,0xe9
  413f7b:	pushf  
  413f7c:	into   
  413f7d:	cmp    eax,0xef5fb5cc
  413f82:	inc    edx
  413f83:	ror    DWORD PTR [eax+0xef796da],1
  413f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f8a:	add    ecx,DWORD PTR [ebx]
  413f8c:	xchg   DWORD PTR [edi+0x76faf1fb],esi
  413f92:	daa    
  413f93:	jmp    FWORD PTR [eax-0x41]
  413f96:	mov    ds:0x74698454,eax
  413f9b:	adc    edi,ecx
  413f9d:	add    BYTE PTR [edi],dh
  413f9f:	jnp    0x413fba
  413fa1:	mov    esi,0x25eb657b
  413fa6:	je     0x413f42
  413fa8:	mov    edx,0x1029faed
  413fad:	daa    
  413fae:	xchg   esi,eax
  413faf:	xchg   edx,eax
  413fb1:	scas   al,BYTE PTR es:[edi]
  413fb2:	dec    esi
  413fb3:	data16 mov al,ds:0x7627a19a
  413fb9:	mov    esi,0x794050a5
  413fbe:	adc    edx,edi
  413fc0:	retf   0xf6d3
  413fc3:	fiadd  DWORD PTR [edx-0x54]
  413fc6:	test   eax,0xc27ae21b
  413fcb:	push   ds
  413fcc:	xor    ebx,DWORD PTR [edi]
  413fce:	adc    BYTE PTR [edx-0x6462f0c4],ch
  413fd4:	(bad)  
  413fd5:	ja     0x413fcb
  413fd7:	and    dl,dl
  413fd9:	shl    DWORD PTR [esi-0x1c],0x1
  413fdd:	jp     0x414053
  413fdf:	mov    ebp,0xc53bd56c
  413fe4:	je     0x414040
  413fe6:	shld   DWORD PTR ds:0x18f590c8,ebp,cl
  413fed:	jns    0x41404d
  413fef:	aas    
  413ff0:	mov    al,0xc9
  413ff2:	cli    
  413ff3:	ins    BYTE PTR es:[edi],dx
  413ff4:	inc    ebp
  413ff5:	adc    al,BYTE PTR [ebx]
  413ff7:	lods   al,BYTE PTR ds:[esi]
  413ff8:	enter  0x62a1,0x7d
  413ffc:	cmp    DWORD PTR [esi+0x29],0xffffffdf
  414000:	mov    esi,0x76a20c47
  414005:	enter  0x9397,0xf3
  414009:	lds    ebp,FWORD PTR [esi]
  41400b:	fsin   
  41400d:	jge    0x413fa9
  41400f:	js     0x413fff
  414011:	mov    esp,0x19a21a81
  414016:	sbb    al,BYTE PTR [eax+0x5f32d6c8]
  41401c:	sub    bh,bh
  41401e:	lock gs ss call 0xb6b325a2
  414026:	sbb    al,BYTE PTR [edi-0x15]
  414029:	push   ecx
  41402a:	jbe    0x413fe6
  41402c:	jns    0x413fd9
  41402e:	dec    ebp
  41402f:	(bad)  
  414030:	inc    eax
  414032:	lods   al,BYTE PTR ds:[esi]
  414033:	jle    0x414096
  414035:	inc    ecx
  414036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414037:	int3   
  414038:	inc    DWORD PTR [edx-0x6e2eea14]
  41403e:	or     DWORD PTR [eax],ebx
  414040:	jp     0x413fc8
  414042:	popf   
  414043:	cmp    edi,DWORD PTR [esi+0x5f]
  414046:	push   esp
  414047:	dec    ebp
  414048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414049:	pop    es
  41404a:	cmp    al,BYTE PTR [eax]
  41404c:	(bad)  
  41404e:	pushf  
  41404f:	sti    
  414050:	pop    esp
  414051:	loopne 0x4140b4
  414053:	mul    ecx
  414055:	fsubr  st,st(4)
  414057:	not    BYTE PTR [edx+0x5e1413c7]
  41405d:	icebp  
  41405e:	arpl   WORD PTR [edx],si
  414060:	jmp    DWORD PTR [ebx+0x52]
  414063:	cmp    eax,0xa7bdac9b
  414068:	jle    0x4140c5
  41406a:	sub    al,0x36
  41406c:	je     0x41400e
  41406e:	daa    
  41406f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414070:	push   es
  414071:	aad    0x1d
  414073:	in     al,0x6c
  414075:	icebp  
  414076:	push   esi
  414077:	or     ebp,ebp
  414079:	or     al,0xc
  41407b:	mov    al,ds:0x86a5089b
  414080:	ffreep st(0)
  414082:	lock je 0x4140f3
  414085:	xchg   esi,eax
  414086:	icebp  
  414087:	lds    edx,FWORD PTR [edi]
  414089:	pusha  
  41408a:	inc    edi
  41408b:	adc    eax,0xedad9574
  414090:	dec    ebx
  414091:	out    0xab,al
  414093:	xlat   BYTE PTR ds:[ebx]
  414094:	inc    esp
  414095:	fsubr  st,st(6)
  414097:	(bad)  
  414098:	fst    DWORD PTR [edi]
  41409a:	sbb    al,0x13
  41409c:	and    al,0xfd
  41409e:	out    0xb8,eax
  4140a0:	(bad)  
  4140a1:	fcom   DWORD PTR [ebp+0x698f129b]
  4140a7:	das    
  4140a8:	sbb    al,0x37
  4140aa:	mov    esp,0x226ad411
  4140af:	and    al,cl
  4140b1:	add    DWORD PTR [edi+eax*4],edx
  4140b4:	repnz push ds
  4140b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140b7:	ret    0xd4f4
  4140ba:	int    0xd2
  4140bc:	jl     0x4140aa
  4140be:	or     eax,0x52ee263a
  4140c3:	jne    0x41411a
  4140c5:	cmp    eax,0xb8316b23
  4140ca:	nop
  4140cb:	inc    edx
  4140cc:	call   0x559e655d
  4140d1:	or     DWORD PTR ss:[eax+0x6],esp
  4140d5:	jne    0x414107
  4140d7:	mov    cl,BYTE PTR [esi+0x54991d24]
  4140dd:	mov    fs,WORD PTR [eax-0x73]
  4140e0:	xchg   ecx,eax
  4140e1:	or     BYTE PTR [esi],dl
  4140e3:	pop    ebp
  4140e4:	or     al,ch
  4140e6:	imul   ecx,eax,0x64
  4140e9:	lds    edi,FWORD PTR [ecx]
  4140eb:	out    0x12,al
  4140ed:	fild   DWORD PTR [ebx]
  4140ef:	or     al,0x16
  4140f1:	in     al,dx
  4140f2:	aas    
  4140f3:	outs   dx,BYTE PTR ds:[esi]
  4140f4:	cli    
  4140f5:	cmp    BYTE PTR gs:[edi+0x1f9e229c],al
  4140fc:	sti    
  4140fd:	lea    edx,[esi]
  4140ff:	adc    eax,DWORD PTR [esi]
  414101:	ins    BYTE PTR es:[edi],dx
  414102:	fsubr  QWORD PTR [edx]
  414104:	push   ebp
  414105:	test   BYTE PTR [eax],0x15
  414108:	mov    esp,0x5a5e4025
  41410d:	jae    0x414170
  41410f:	imul   BYTE PTR [edi]
  414111:	shl    DWORD PTR [esp+edi*8+0x12e52e40],cl
  414118:	into   
  414119:	pop    ebp
  41411a:	ret    
  41411b:	cmp    eax,0x937623f1
  414121:	inc    eax
  414122:	int    0xb2
  414124:	ror    edi,1
  414126:	ret    
  414127:	push   ecx
  414128:	test   al,0xa5
  41412a:	xchg   edx,eax
  41412b:	in     al,0x55
  41412d:	repz jle 0x414123
  414130:	inc    ecx
  414131:	sbb    eax,0x8985e5a6
  414136:	lahf   
  414137:	rcr    DWORD PTR [edi-0x31],cl
  41413a:	rcr    DWORD PTR ds:0x19ed8c80,1
  414140:	xchg   BYTE PTR [esi],dh
  414142:	pop    esi
  414143:	xchg   DWORD PTR [ecx],edx
  414145:	mov    DWORD PTR [ebx-0x3e],edi
  414148:	dec    eax
  414149:	inc    esp
  41414a:	call   0x77788661
  41414f:	pop    esp
  414150:	leave  
  414151:	sub    DWORD PTR [edx],ebp
  414153:	fst    DWORD PTR [ecx-0x23]
  414156:	repz test BYTE PTR [esi+0x692034bd],ah
  41415d:	mov    ebx,0xf950b2b0
  414162:	lahf   
  414163:	stos   DWORD PTR es:[edi],eax
  414164:	imul   eax,DWORD PTR [ecx-0x4d6b193c],0x414d339a
  41416e:	and    DWORD PTR [edi],esi
  414170:	add    bl,bl
  414172:	inc    ebx
  414173:	push   esi
  414174:	iret   
  414175:	je     0x414106
  414177:	fdiv   QWORD PTR [ebx-0x49]
  41417a:	fwait
  41417b:	mov    DWORD PTR [eax-0x2a2b1f4e],edx
  414181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414182:	push   esi
  414183:	xor    DWORD PTR [ebp-0x683af79d],0x6abfef6c
  41418d:	lea    edi,[ecx]
  41418f:	shr    BYTE PTR [eax+0x6cbe8b5c],0x36
  414196:	or     ch,dh
  414198:	cmp    BYTE PTR [edi+0x47],ch
  41419b:	adc    BYTE PTR ds:0xcac8403c,ch
  4141a1:	icebp  
  4141a2:	not    DWORD PTR [ecx+0x28]
  4141a5:	js     0x41413c
  4141a7:	xchg   edi,eax
  4141a8:	jl     0x41421d
  4141aa:	std    
  4141ab:	scas   eax,DWORD PTR es:[edi]
  4141ac:	inc    ebp
  4141ad:	jl     0x414132
  4141af:	push   eax
  4141b0:	jl     0x414214
  4141b2:	xor    esi,ecx
  4141b4:	jmp    0xd12d394f
  4141b9:	adc    bl,cl
  4141bb:	mov    edx,0xe2890377
  4141c0:	pop    esp
  4141c1:	clc    
  4141c2:	call   0xa2a72860
  4141c7:	dec    ebp
  4141c8:	jbe    0x4141b9
  4141ca:	mov    ebp,0xfaeb956c
  4141cf:	mov    WORD PTR [edx+0x7e8eed5d],cs
  4141d5:	cmp    eax,0x61dc1f4b
  4141da:	popf   
  4141db:	mov    al,ds:0xcace1c32
  4141e0:	jns    0x4141ad
  4141e2:	cmp    eax,0x72014433
  4141e7:	mov    dh,ch
  4141e9:	sbb    eax,0xfa8871d6
  4141ee:	(bad)  
  4141ef:	or     dl,BYTE PTR fs:[ecx]
  4141f2:	sub    BYTE PTR [ecx-0x74],ah
  4141f5:	push   0x93c4253f
  4141fa:	rcl    DWORD PTR [ebx],0xa5
  4141fd:	xchg   ecx,eax
  4141fe:	jmp    0x111fce7c
  414203:	cli    
  414204:	add    bl,BYTE PTR [esi+ebx*1]
  414207:	imul   esi,ebx,0x38a6ba5c
  41420d:	pop    esi
  41420e:	(bad)
  414211:	retf   0xe06b
  414214:	or     eax,ecx
  414216:	rol    DWORD PTR [ecx+0x749be1d3],cl
  41421c:	jl     0x414261
  41421e:	lock pop ss
  414220:	retf   
  414221:	ja     0x414210
  414223:	ds inc esp
  414225:	pop    ebx
  414226:	scas   eax,DWORD PTR es:[edi]
  414227:	cwde   
  414228:	in     eax,dx
  414229:	sub    al,0xa0
  41422b:	inc    edx
  41422c:	xor    eax,0x15b3828
  414231:	stos   DWORD PTR es:[edi],eax
  414232:	lahf   
  414233:	pop    ss
  414234:	jnp    0x4141e9
  414236:	ret    0xf986
  414239:	jmp    0xcdc5:0x6430afe1
  414240:	sbb    al,BYTE PTR [ecx-0x6e]
  414243:	aam    0x31
  414245:	inc    ebx
  414246:	xor    ecx,ebx
  414248:	ret    
  414249:	or     al,0xe1
  41424b:	fwait
  41424c:	std    
  41424d:	cmp    eax,0x8465db7
  414252:	cld    
  414253:	mov    BYTE PTR [edx-0x57],ah
  414256:	inc    eax
  414257:	pop    ecx
  414258:	xlat   BYTE PTR ds:[ebx]
  414259:	sub    ch,ah
  41425b:	scas   eax,DWORD PTR es:[edi]
  41425c:	retf   0x3b33
  41425f:	push   ecx
  414260:	push   0x32edd06d
  414265:	push   cs
  414266:	cdq    
  414267:	mov    dl,0xce
  414269:	add    al,0x9
  41426b:	jg     0x4142d5
  41426d:	retf   0x20c8
  414270:	jb     0x4142c0
  414272:	mov    ds:0x81cb1c25,al
  414277:	cmp    DWORD PTR [eax],ecx
  414279:	inc    ebx
  41427a:	jle    0x41422e
  41427c:	int    0x8f
  41427e:	xor    BYTE PTR [esi],cl
  414280:	xchg   edx,eax
  414281:	inc    ecx
  414282:	xchg   ebp,eax
  414283:	mov    ebp,0xcddd0518
  414288:	addr16 std 
  41428a:	sbb    eax,0x5e906ef4
  41428f:	mov    cl,0x94
  414291:	or     ebp,ebp
  414293:	rol    DWORD PTR [ecx+0x2c71c688],1
  414299:	xor    eax,DWORD PTR [edx-0x6cdd5e48]
  41429f:	inc    edi
  4142a0:	ds test al,0xe4
  4142a3:	stos   BYTE PTR es:[edi],al
  4142a4:	int    0xbc
  4142a6:	jae    0x4142d7
  4142a8:	in     al,dx
  4142a9:	(bad)  
  4142aa:	loope  0x414278
  4142ac:	mov    ds:0xf8baaff5,al
  4142b1:	pop    ds
  4142b2:	mov    bl,0x86
  4142b4:	and    al,0x5
  4142b6:	jp     0x4142f0
  4142b8:	or     BYTE PTR [edx-0x29],0x8d
  4142bc:	mov    esp,0xa2cd66b4
  4142c1:	mov    edi,DWORD PTR [edx]
  4142c3:	out    dx,al
  4142c4:	lods   al,BYTE PTR ds:[esi]
  4142c5:	and    al,0x68
  4142c7:	jbe    0x41428b
  4142c9:	retf   
  4142ca:	fld    st(0)
  4142cc:	out    0x36,al
  4142ce:	js     0x4142c9
  4142d0:	retf   0xbc2
  4142d3:	jmp    0xae65bd3f
  4142d8:	sub    DWORD PTR [edi-0x1de37cd],ebp
  4142de:	jne    0x41435e
  4142e0:	adc    eax,0x5fe6a3fc
  4142e5:	jmp    0xc065:0xb25952ac
  4142ec:	repnz inc eax
  4142ee:	add    eax,0x7d0ba2d8
  4142f3:	idiv   DWORD PTR [eax+0x632ea8f3]
  4142f9:	jne    0x414371
  4142fb:	or     BYTE PTR [ecx],ch
  4142fd:	addr16 jbe 0x4142c7
  414300:	outs   dx,DWORD PTR ds:[esi]
  414301:	sub    al,0x74
  414303:	jl     0x414310
  414305:	inc    edi
  414306:	mov    bh,0x21
  414308:	(bad)  
  414309:	mov    ebx,0x441ca901
  41430e:	dec    edi
  41430f:	imul   BYTE PTR [esi+0x1088cf34]
  414315:	fwait
  414316:	rcr    DWORD PTR [ebp-0x3d7e355d],0xdb
  41431d:	sbb    eax,edx
  41431f:	xor    al,0xba
  414321:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  414323:	mov    bh,BYTE PTR [ecx]
  414325:	jge    0x41438a
  414327:	sub    eax,0xcc145ce3
  41432c:	mov    eax,0xa4ced3a3
  414331:	xchg   esi,eax
  414332:	add    BYTE PTR [edi+0x6bad270f],bh
  414338:	mov    ds:0x37bc20e9,eax
  41433d:	scas   eax,DWORD PTR es:[edi]
  41433e:	mov    eax,ds:0x109762b
  414343:	ret    0x6c0e
  414346:	push   esp
  414347:	push   cs
  414348:	xchg   ebp,eax
  414349:	addr16 sbb ah,dl
  41434c:	add    DWORD PTR [edi+0x61],eax
  41434f:	mov    esi,0x97e0389
  414354:	clc    
  414355:	fcomp  st(7)
  414357:	xchg   ecx,eax
  414358:	ret    0x9fc1
  41435b:	cwde   
  41435c:	(bad)
  414360:	mov    cx,WORD PTR [edx-0x6]
  414364:	sbb    eax,DWORD PTR [ebp+0x2f]
  414367:	push   esp
  414368:	xor    eax,0x305b685a
  41436d:	cmp    edi,0x14
  414370:	pusha  
  414371:	shl    ecx,0x66
  414374:	pop    ss
  414375:	or     DWORD PTR [ebx],ebx
  414377:	sbb    al,0x6e
  414379:	scas   eax,DWORD PTR es:[edi]
  41437a:	lea    ecx,[eax-0x12cbbc78]
  414380:	(bad)  
  414381:	adc    edx,DWORD PTR [ecx]
  414383:	(bad)  
  414384:	sar    BYTE PTR [edx-0x54],1
  414387:	fsub   QWORD PTR ds:0xdef884eb
  41438d:	mov    eax,eax
  41438f:	pop    ebx
  414390:	(bad)  
  414391:	out    dx,al
  414392:	push   0x1f
  414394:	(bad)  
  414395:	aad    0xb5
  414397:	shl    BYTE PTR [edi+0x6eb1bd72],0x84
  41439e:	and    DWORD PTR [ecx+0x50],edi
  4143a1:	mov    dl,0x1d
  4143a3:	(bad)  
  4143a4:	dec    esi
  4143a5:	mov    cl,0xdc
  4143a7:	lods   al,BYTE PTR ds:[esi]
  4143a8:	pushf  
  4143a9:	inc    ebp
  4143aa:	jo     0x4143cf
  4143ac:	add    DWORD PTR [edi+0x5ccb9ef4],ebp
  4143b2:	js     0x4143d5
  4143b4:	sbb    DWORD PTR [edi-0x18],ebx
  4143b7:	das    
  4143b8:	pop    edi
  4143b9:	cmp    BYTE PTR [edi-0x4b8c194b],ch
  4143bf:	cmp    BYTE PTR ds:0xd7e793bc,cl
  4143c5:	dec    esp
  4143c6:	ret    0x9b3
  4143c9:	jne    0x4143d0
  4143cb:	cmp    al,0xb0
  4143cd:	fs jl  0x4143ca
  4143d0:	jmp    0x4143cb
  4143d2:	jmp    0xd6c4fcb0
  4143d7:	dec    ebp
  4143d8:	sbb    eax,0xfba1b68d
  4143dd:	xchg   ecx,eax
  4143de:	test   al,0xaa
  4143e0:	sub    BYTE PTR [eax-0xda12587],bl
  4143e6:	push   edx
  4143e7:	mov    bh,0x22
  4143e9:	xchg   DWORD PTR [ebx+eiz*2-0xc],ebx
  4143ed:	add    ecx,0xac8e84cc
  4143f3:	sbb    esp,edx
  4143f5:	fcmovb st,st(4)
  4143f7:	jecxz  0x414439
  4143f9:	mov    eax,ds:0xba423e13
  4143fe:	inc    edx
  4143ff:	das    
  414400:	dec    ebp
  414401:	mov    eax,0x97f299ec
  414406:	popa   
  414407:	jae    0x41438d
  414409:	jns    0x4143fa
  41440b:	sub    ecx,DWORD PTR [eax-0xaea3979]
  414411:	mov    al,0x86
  414413:	xor    esi,edx
  414415:	mov    ah,0xa6
  414417:	outs   dx,BYTE PTR ds:[esi]
  414418:	xchg   edi,eax
  414419:	shl    BYTE PTR [ebp-0x23477ecf],1
  41441f:	add    BYTE PTR [edi+ecx*8+0x6e],cl
  414423:	adc    eax,0xe71a8445
  414428:	stos   DWORD PTR es:[edi],eax
  414429:	push   esp
  41442a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41442b:	retf   0xe696
  41442e:	push   es
  41442f:	lods   al,BYTE PTR gs:[esi]
  414431:	in     al,0x6
  414433:	mov    ds:0xb342efcd,eax
  414438:	aam    0x8
  41443a:	in     eax,0x7f
  41443c:	sub    al,0xe1
  41443e:	sbb    al,0x9e
  414440:	pop    edx
  414441:	add    eax,0xb9e9eb1a
  414446:	add    dh,al
  414448:	sbb    dh,BYTE PTR [eax]
  41444a:	jnp    0x4143ff
  41444c:	xlat   BYTE PTR ds:[ebx]
  41444d:	adc    DWORD PTR [edx],esi
  41444f:	mov    al,ds:0x7aa4c06f
  414454:	mov    ch,0x4a
  414456:	cmp    eax,0xb890c585
  41445b:	xchg   esi,eax
  41445c:	repz pop ecx
  41445e:	mov    ds:0xd63e351f,al
  414463:	xlat   BYTE PTR ds:[ebx]
  414464:	mov    ebx,0x50eeab13
  414469:	pushf  
  41446a:	test   bh,al
  41446c:	jns    0x4144b0
  41446e:	shl    eax,0xb7
  414471:	popa   
  414472:	add    BYTE PTR [ecx+0x37],bl
  414475:	jo     0x414464
  414477:	jnp    0x41443c
  414479:	jae    0x414478
  41447b:	adc    BYTE PTR [edx+0x67f4bb52],0xf6
  414482:	shl    bl,0x94
  414485:	int    0xe5
  414487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414488:	dec    esp
  414489:	ret    
  41448a:	dec    ebp
  41448b:	lods   eax,DWORD PTR ds:[esi]
  41448c:	loopne 0x414466
  41448e:	cmp    eax,0x4a1af8f2
  414493:	dec    esi
  414494:	push   ss
  414495:	mov    WORD PTR [ebp+esi*1+0x120c7a14],ss
  41449c:	(bad)  
  41449e:	repz adc bh,bh
  4144a1:	pop    ecx
  4144a2:	mov    cl,0xc0
  4144a4:	or     BYTE PTR [eax-0x61790b16],al
  4144aa:	jns    0x414483
  4144ac:	sar    BYTE PTR [edi+0x0],cl
  4144af:	push   esp
  4144b0:	das    
  4144b1:	mov    eax,ebx
  4144b3:	fimul  DWORD PTR [ecx+eiz*8+0x62]
  4144b7:	mov    ds:0x6d3d11d0,eax
  4144bc:	mov    ds:0x47fd0425,eax
  4144c1:	adc    BYTE PTR [ecx],bl
  4144c3:	add    DWORD PTR [ebx],ebp
  4144c5:	inc    ebx
  4144c6:	imul   edi,DWORD PTR [eax+0x6c],0x2f
  4144ca:	fdivrp st(1),st
  4144cc:	into   
  4144cd:	stc    
  4144ce:	jle    0x414469
  4144d0:	nop
  4144d1:	rol    DWORD PTR [edi-0x29],0xdd
  4144d5:	and    bh,BYTE PTR [ebx+edi*1-0x76]
  4144d9:	arpl   WORD PTR [ecx+0x46],bx
  4144dc:	pop    ebp
  4144dd:	push   edi
  4144de:	mov    dl,0xf
  4144e0:	jge    0x41447c
  4144e2:	sahf   
  4144e3:	xor    al,0x2d
  4144e5:	hlt    
  4144e6:	xchg   edx,eax
  4144e7:	jne    0x414549
  4144e9:	repz sub BYTE PTR [ebx+0x46b508f8],bh
  4144f0:	retf   
  4144f1:	push   eax
  4144f2:	push   ebp
  4144f3:	add    eax,DWORD PTR [edx-0x562815f2]
  4144f9:	in     al,0xcc
  4144fb:	add    dh,bh
  4144fd:	aad    0x75
  4144ff:	push   0xffffffcb
  414501:	jecxz  0x41451e
  414503:	loope  0x414536
  414505:	mov    ds:0xa912a4f1,eax
  41450a:	out    dx,eax
  41450b:	dec    ebp
  41450c:	mov    edx,0x19896b85
  414511:	ficomp DWORD PTR [ebx-0x29a06fa2]
  414517:	mov    dh,0xe6
  414519:	xchg   edi,eax
  41451a:	cmp    al,0xd
  41451c:	popa   
  41451d:	adc    dl,BYTE PTR [eax+0x67]
  414520:	jbe    0x4144a6
  414522:	xlat   BYTE PTR ds:[ebx]
  414523:	mov    edx,0xb707616f
  414528:	sub    eax,0x51af8244
  41452d:	or     eax,0x2effc464
  414532:	push   DWORD PTR [esi]
  414534:	push   es
  414535:	xchg   esp,eax
  414536:	bound  ebp,QWORD PTR [esi-0x46]
  414539:	out    0x5e,al
  41453b:	clc    
  41453c:	adc    ebx,DWORD PTR ds:[ebp+0x7]
  414540:	gs xchg esp,eax
  414542:	cmp    edi,ebx
  414544:	lahf   
  414545:	lea    edx,[edx+0x6f051508]
  41454b:	dec    eax
  41454c:	dec    esp
  41454d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41454e:	mov    edx,0xb79ae4d3
  414553:	jne    0x414502
  414555:	mov    bl,0x26
  414557:	sub    eax,0x40ecbc8c
  41455c:	mov    ecx,0xa6cc603a
  414561:	mov    al,0x35
  414563:	outs   dx,BYTE PTR ds:[esi]
  414564:	push   ds
  414565:	aaa    
  414566:	pop    edi
  414567:	jg     0x414514
  414569:	jns    0x41456d
  41456b:	xchg   ecx,eax
  41456c:	and    eax,0xaf95cbe9
  414571:	push   ebp
  414572:	push   edx
  414573:	xor    esp,DWORD PTR [edx+0x12a259ec]
  414579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41457a:	mov    ch,BYTE PTR ds:0x5232ac49
  414580:	jge    0x414506
  414582:	(bad)  
  414583:	(bad)  
  414584:	das    
  414585:	mov    WORD PTR [ecx-0x3b],?
  414588:	push   eax
  414589:	dec    eax
  41458a:	or     eax,0x8b952999
  41458f:	inc    edx
  414590:	repz popa 
  414592:	push   ebx
  414593:	jl     0x4145aa
  414595:	adc    al,BYTE PTR [edx-0x2f61e4b5]
  41459b:	adc    BYTE PTR [edx+0x58],dl
  41459e:	jle    0x414558
  4145a0:	add    al,0xe1
  4145a2:	aaa    
  4145a3:	out    0x30,al
  4145a5:	and    eax,0x7c8db3b6
  4145aa:	jnp    0x4145e5
  4145ac:	pusha  
  4145ad:	les    ecx,FWORD PTR [esi-0x2b]
  4145b0:	enter  0x6e73,0x18
  4145b4:	nop
  4145b5:	(bad)  
  4145b6:	jns    0x4145d0
  4145b8:	pop    eax
  4145b9:	adc    esp,0x29
  4145bc:	popa   
  4145bd:	mov    BYTE PTR [edi+0x27878ba6],bl
  4145c3:	icebp  
  4145c4:	dec    edx
  4145c5:	and    BYTE PTR [edi],dh
  4145c7:	push   ds
  4145c8:	lahf   
  4145c9:	push   esi
  4145ca:	push   esi
  4145cb:	imul   edx,esi,0xffffffd0
  4145ce:	mov    ebx,ebp
  4145d0:	mov    ds:0xaa8087a7,al
  4145d5:	test   BYTE PTR [eax+ebp*2-0x2f],0x46
  4145da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145db:	int3   
  4145dc:	rcl    dl,cl
  4145de:	test   al,0xff
  4145e0:	in     eax,0xd6
  4145e2:	jnp    0x4145eb
  4145e4:	adc    edx,esp
  4145e6:	or     BYTE PTR [eax-0xb],bl
  4145e9:	push   esp
  4145ea:	jnp    0x4145c9
  4145ec:	sar    DWORD PTR [edi-0x121fdd72],1
  4145f2:	lods   al,BYTE PTR ds:[esi]
  4145f3:	jo     0x4145a1
  4145f5:	sub    ebp,DWORD PTR [eax-0x66]
  4145f8:	scas   al,BYTE PTR es:[edi]
  4145f9:	(bad)
  4145fc:	fbstp  TBYTE PTR [ecx+0x1c]
  4145ff:	stos   DWORD PTR es:[edi],eax
  414600:	pop    ebp
  414601:	sti    
  414602:	pushf  
  414603:	fbld   TBYTE PTR [eax]
  414605:	xchg   ebp,eax
  414606:	xor    bl,BYTE PTR [ebp-0x43]
  414609:	add    eax,0x387cc362
  41460e:	or     DWORD PTR [esi],ecx
  414610:	ja     0x414627
  414612:	daa    
  414613:	sar    BYTE PTR [esp+edi*1],cl
  414616:	jg     0x414656
  414618:	and    BYTE PTR [esi],0xc7
  41461b:	aad    0x32
  41461d:	push   eax
  41461e:	jl     0x414639
  414620:	pop    edi
  414621:	(bad)  
  414622:	mov    ah,0xe2
  414624:	or     esi,0x6c
  414627:	adc    esp,esp
  414629:	mov    ds,edx
  41462b:	pop    ds
  41462c:	rcl    BYTE PTR [ecx],1
  41462e:	je     0x4145ed
  414630:	push   0x8f3735d4
  414635:	and    al,0x9b
  414637:	mov    bh,0xa0
  414639:	(bad)  
  41463a:	pop    eax
  41463b:	in     eax,0xdb
  41463d:	les    esp,FWORD PTR [ebx-0x7b3b1ce]
  414643:	int    0x5f
  414645:	mov    ecx,0xda401eb6
  41464a:	xor    DWORD PTR [ecx-0x14],0x24079715
  414651:	cmp    ebp,DWORD PTR [esi]
  414653:	inc    ebp
  414654:	ins    DWORD PTR es:[edi],dx
  414655:	sub    eax,0x8d91cbbe
  41465a:	xchg   DWORD PTR [ecx],eax
  41465c:	jnp    0x4146c0
  41465e:	std    
  41465f:	dec    edi
  414660:	ror    BYTE PTR [ecx-0x238a1a9a],cl
  414666:	ss xor bl,BYTE PTR fs:[ebp+esi*2+0x4f]
  41466c:	mov    dl,0x7d
  41466e:	mov    eax,DWORD PTR [edx-0x600c02d9]
  414674:	xor    BYTE PTR [esi],bl
  414676:	push   ebx
  414677:	or     eax,0xc39a9bb5
  41467c:	mov    ?,esi
  41467e:	xchg   ecx,eax
  41467f:	inc    esi
  414680:	push   0xc
  414682:	xor    BYTE PTR [edi],al
  414684:	inc    esi
  414685:	sbb    ebp,DWORD PTR [edi]
  414687:	fcmovbe st,st(5)
  414689:	fdivr  st,st(1)
  41468b:	xchg   esp,eax
  41468c:	and    al,0x9f
  41468e:	pop    es
  41468f:	mov    WORD PTR [ecx+0x3c],?
  414692:	mov    ds:0x9e92a920,eax
  414697:	push   edx
  414698:	xor    ebx,DWORD PTR [eax+0x5f1c16aa]
  41469e:	jno    0x41471d
  4146a0:	je     0x41468b
  4146a2:	imul   ecx,ecx,0x616a55
  4146a8:	les    edi,FWORD PTR [edi]
  4146aa:	repnz repz sbb al,0x72
  4146ae:	adc    al,0x85
  4146b0:	inc    esp
  4146b1:	add    eax,0xfa7394eb
  4146b6:	inc    ebx
  4146b7:	addr16 dec ebx
  4146b9:	loope  0x41469a
  4146bb:	nop
  4146bc:	mov    eax,ds:0x9a49d554
  4146c1:	pop    es
  4146c2:	inc    esi
  4146c3:	add    ecx,DWORD PTR [ebx-0x6d772852]
  4146c9:	es pop ds
  4146cb:	push   0x75f5d333
  4146d0:	add    DWORD PTR [edi-0x498c4810],ebx
  4146d6:	xchg   edx,eax
  4146d7:	shl    DWORD PTR [ebx],1
  4146d9:	cwde   
  4146da:	data16 mov ds:0xec5615a8,al
  4146e0:	add    DWORD PTR [ecx+0x6866571e],edx
  4146e6:	out    dx,eax
  4146e7:	dec    ebx
  4146e8:	aaa    
  4146e9:	sti    
  4146ea:	cmp    esi,DWORD PTR [si+0xc]
  4146ee:	pushf  
  4146ef:	jmp    0x414703
  4146f1:	sbb    al,0xf9
  4146f3:	inc    eax
  4146f4:	repz test bl,dl
  4146f7:	in     al,0x3a
  4146f9:	and    BYTE PTR [esi+0x4cc25694],bh
  4146ff:	mov    edx,0xcfd47586
  414704:	sbb    al,0xb
  414706:	shr    BYTE PTR [ecx+esi*2-0x416a60f],0x84
  41470e:	cwde   
  41470f:	das    
  414710:	sahf   
  414711:	div    DWORD PTR [esp+edx*8-0x779e6f5b]
  414718:	retf   
  414719:	jo     0x4146d8
  41471b:	or     ah,BYTE PTR [edx-0x7582a431]
  414721:	add    DWORD PTR [ebx-0x30],edi
  414724:	shr    al,cl
  414726:	sub    BYTE PTR [esi],bh
  414728:	xchg   ebx,eax
  414729:	test   ecx,ebp
  41472b:	test   BYTE PTR [ebx-0xd],0xf6
  41472f:	or     DWORD PTR [eax+eax*2],ebx
  414732:	sahf   
  414733:	adc    DWORD PTR [edx],0x923b0118
  414739:	push   esp
  41473a:	mov    edx,0xcbcc72a0
  41473f:	or     eax,0xba7a271d
  414744:	aas    
  414745:	inc    edx
  414746:	inc    edx
  414747:	ror    DWORD PTR [edx-0x363361cb],cl
  41474d:	pop    es
  41474e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41474f:	ins    DWORD PTR es:[edi],dx
  414750:	(bad)  
  414751:	dec    eax
  414752:	xchg   esp,eax
  414753:	(bad)  
  414754:	ror    BYTE PTR [si-0x80],1
  414758:	dec    DWORD PTR [esi+eiz*8-0x6c]
  41475c:	add    al,0xa2
  41475e:	adc    BYTE PTR [edi],bh
  414760:	xchg   ebp,eax
  414761:	inc    ebx
  414762:	add    eax,0x26411c30
  414767:	imul   ecx,eax,0x94a09339
  41476d:	cld    
  41476e:	sbb    DWORD PTR [ebp-0x22],ebp
  414771:	and    al,0xea
  414773:	out    0x77,eax
  414775:	jecxz  0x4147d3
  414777:	test   ebx,esi
  414779:	inc    edi
  41477a:	push   edi
  41477c:	sbb    cl,BYTE PTR [edx-0x2b]
  41477f:	push   ss
  414780:	jg     0x41478f
  414782:	push   edx
  414783:	push   edx
  414784:	test   BYTE PTR [esi],bl
  414786:	and    al,0xb7
  414788:	xchg   ebx,eax
  414789:	int    0x77
  41478b:	pop    ds
  41478c:	aam    0x31
  41478e:	sbb    BYTE PTR [edx-0x13d3e140],dh
  414794:	arpl   WORD PTR fs:[ebp-0x74611e6b],si
  41479b:	mov    al,0xb2
  41479d:	popa   
  41479e:	mov    cl,0x86
  4147a0:	sub    BYTE PTR [edx+eax*1+0x2ebaef3c],dh
  4147a7:	nop
  4147a8:	test   DWORD PTR [ebx-0x895d6ed],ecx
  4147ae:	mov    cs,WORD PTR [edx+eiz*1+0x4ce19bd3]
  4147b5:	pop    ebp
  4147b6:	ja     0x414773
  4147b8:	jno    0x41474e
  4147ba:	inc    ecx
  4147bb:	sbb    DWORD PTR [edx],esp
  4147bd:	mov    cl,0x4b
  4147bf:	sar    dh,1
  4147c1:	test   eax,edx
  4147c3:	ret    
  4147c4:	mov    ?,ebp
  4147c6:	daa    
  4147c7:	jo     0x4147b0
  4147c9:	rcl    edx,0x3a
  4147cc:	and    edi,ecx
  4147ce:	fld    DWORD PTR [ebx-0x2a364f6b]
  4147d4:	pop    eax
  4147d5:	imul   edx,DWORD PTR [ecx-0x4342a22f],0x5c62d38d
  4147df:	outs   dx,BYTE PTR ds:[esi]
  4147e0:	outs   dx,BYTE PTR ds:[esi]
  4147e1:	add    ecx,DWORD PTR [edi+0x338ebaac]
  4147e7:	mov    cl,0x83
  4147e9:	stos   BYTE PTR es:[edi],al
  4147ea:	and    al,0x4f
  4147ec:	je     0x414794
  4147ee:	imul   ebp,edi,0xc
  4147f1:	jmp    0x414780
  4147f3:	call   0xa09d0251
  4147f8:	gs or  eax,0xdf24a2b4
  4147fe:	xchg   esp,ecx
  414800:	pop    ebx
  414801:	mov    bl,0x95
  414803:	daa    
  414804:	or     bl,BYTE PTR [edi+0x710c919]
  41480a:	xchg   edi,edx
  41480c:	add    BYTE PTR [ecx],dl
  41480e:	out    dx,eax
  41480f:	nop
  414810:	aaa    
  414811:	xor    ebx,0x26bdeb49
  414817:	aad    0xf5
  414819:	lods   eax,DWORD PTR ds:[esi]
  41481a:	push   edi
  41481b:	aaa    
  41481c:	xor    ecx,eax
  41481e:	pop    ebp
  41481f:	jp     0x4147c4
  414821:	dec    edx
  414822:	pop    edx
  414823:	push   edi
  414824:	in     eax,0xb9
  414826:	adc    al,cl
  414828:	mov    ds:0x8d5ff535,al
  41482d:	imul   edi,esi,0x287c1f78
  414833:	mov    ch,0xe8
  414835:	xor    al,0xfb
  414837:	sbb    DWORD PTR [eax+0x555171fb],0xf5fed230
  414841:	xchg   edx,eax
  414842:	mov    dl,0x93
  414844:	or     eax,0x9d6eec50
  414849:	xchg   BYTE PTR [eax+edi*4+0x8],al
  41484d:	idiv   BYTE PTR [ecx-0x1c]
  414850:	(bad)  
  414852:	xor    eax,edx
  414854:	out    dx,eax
  414855:	icebp  
  414856:	retf   0x9a4b
  414859:	push   ebp
  41485a:	xor    al,0x17
  41485c:	push   ecx
  41485d:	jne    0x414883
  41485f:	push   0xce51bb74
  414864:	pop    edi
  414865:	pop    ds
  414866:	xchg   ecx,eax
  414867:	(bad)
  41486a:	jp     0x4148e8
  41486c:	(bad)  
  41486d:	ins    DWORD PTR es:[edi],dx
  41486e:	jecxz  0x41484b
  414870:	mov    eax,0xb06c175c
  414875:	rcl    BYTE PTR [esi+0x40e3c91c],0xed
  41487c:	(bad)  
  41487d:	popf   
  41487e:	jo     0x414827
  414880:	and    BYTE PTR [ebp+0x4c5b7ee7],bh
  414886:	js     0x4148af
  414888:	add    eax,0x24b64355
  41488d:	or     DWORD PTR [ecx+edi*2+0x3619f6ae],ebx
  414894:	sub    al,0xb4
  414896:	xchg   BYTE PTR [eax+esi*1],bl
  414899:	aam    0x36
  41489b:	xor    al,0x9f
  41489d:	aad    0xdb
  41489f:	mov    ds:0xc220e330,al
  4148a4:	and    edx,esp
  4148a6:	fldenv [ebx]
  4148a8:	xchg   ecx,eax
  4148a9:	ins    DWORD PTR es:[edi],dx
  4148aa:	cwde   
  4148ab:	cmp    esi,edi
  4148ad:	pusha  
  4148ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148af:	test   al,0x69
  4148b1:	mov    dh,bh
  4148b3:	dec    ecx
  4148b4:	jmp    0x33499e44
  4148b9:	rol    BYTE PTR [ebx],1
  4148bb:	(bad)  
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0x4b42267
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx-0x58f8781c],0x12
  414952:	cmp    eax,DWORD PTR ds:0x3fee07e9
  414958:	out    dx,eax
  414959:	lods   eax,DWORD PTR ds:[esi]
  41495a:	aam    0x8f
  41495c:	hlt    
  41495d:	scas   eax,DWORD PTR es:[edi]
  41495e:	fucomi st,st(7)
  414960:	xchg   edi,eax
  414961:	aam    0xa2
  414963:	inc    edx
  414964:	jb     0x41490c
  414966:	push   esp
  414967:	aas    
  414968:	pop    ds
  414969:	inc    ebx
  41496a:	test   DWORD PTR [ecx+ebx*2],esp
  41496d:	ins    DWORD PTR es:[edi],dx
  41496e:	shl    BYTE PTR [ecx-0x57],cl
  414971:	push   esp
  414972:	adc    al,0x7d
  414974:	jns    0x41495d
  414976:	cs jb  0x414987
  414979:	aaa    
  41497a:	and    bl,dl
  41497c:	dec    eax
  41497d:	lods   al,BYTE PTR ds:[esi]
  41497e:	jo     0x4149b4
  414980:	(bad)  
  414981:	xor    ah,dl
  414983:	cmp    BYTE PTR [ebx+0x50],0x87
  414987:	cmc    
  414988:	scas   al,BYTE PTR es:[edi]
  414989:	addr16 pop esi
  41498b:	and    eax,0x8912f739
  414990:	mov    WORD PTR [ebx+0xc],gs
  414993:	loopne 0x41491b
  414995:	push   ebx
  414996:	psrld  mm5,QWORD PTR [edi]
  414999:	out    0x9a,eax
  41499b:	mov    ebp,0x5f15cff5
  4149a0:	jp     0x414948
  4149a2:	or     esp,ebx
  4149a4:	xchg   ebp,eax
  4149a5:	and    ebp,DWORD PTR [edi+0x669642f6]
  4149ab:	fisttp DWORD PTR [edx+0x47e74515]
  4149b1:	xchg   ebx,eax
  4149b2:	arpl   WORD PTR [ebx-0x607651f],di
  4149b8:	adc    DWORD PTR [edx],ebx
  4149ba:	lods   al,BYTE PTR ds:[esi]
  4149bb:	pop    DWORD PTR ds:0x7f23166a
  4149c1:	daa    
  4149c2:	adc    al,0x8a
  4149c4:	(bad)  
  4149c6:	loop   0x41497e
  4149c8:	and    cl,dh
  4149ca:	adc    al,0x84
  4149cc:	iret   
  4149cd:	addr16 mov esp,0xe7e755b9
  4149d3:	retf   
  4149d4:	jmp    0x9c89b45b
  4149d9:	cmp    esp,DWORD PTR [ebx-0x24bfc449]
  4149df:	push   0x6c
  4149e1:	ret    0x2db2
  4149e4:	dec    edx
  4149e5:	inc    ecx
  4149e6:	pop    ecx
  4149e7:	les    eax,FWORD PTR [eax+esi*8]
  4149ea:	gs jo  0x414a62
  4149ed:	fwait
  4149ee:	jne    0x414a46
  4149f0:	sub    al,0xc2
  4149f2:	inc    esp
  4149f3:	sbb    BYTE PTR [edx+0x3d],dl
  4149f6:	pop    ebx
  4149f7:	dec    edi
  4149f8:	stos   BYTE PTR es:[edi],al
  4149f9:	ss fwait
  4149fb:	inc    edi
  4149fc:	inc    ecx
  4149fd:	aas    
  4149fe:	or     edi,DWORD PTR [eax]
  414a00:	adc    eax,0xfe2ac225
  414a05:	cmp    esi,ebp
  414a07:	pop    ecx
  414a08:	aaa    
  414a09:	ins    BYTE PTR es:[edi],dx
  414a0a:	mov    bh,0x3a
  414a0c:	xchg   ebx,eax
  414a0d:	pop    ss
  414a0e:	jnp    0x414a4f
  414a10:	ret    
  414a11:	repz add edx,eax
  414a14:	push   0x7a
  414a16:	push   ds
  414a17:	pop    edx
  414a18:	outs   dx,BYTE PTR ds:[esi]
  414a19:	in     al,dx
  414a1a:	nop
  414a1b:	mov    dh,0x76
  414a1d:	cdq    
  414a1e:	(bad)  [ebp+0x1f]
  414a21:	imul   esp,DWORD PTR [ebx],0x23
  414a24:	out    dx,al
  414a25:	mov    dl,BYTE PTR [ecx-0x4c]
  414a28:	mov    edi,0x6547a925
  414a2d:	rol    DWORD PTR [ebx-0x65],cl
  414a30:	mov    ebx,0x6fccc6e
  414a35:	ins    DWORD PTR es:[edi],dx
  414a36:	pop    edi
  414a37:	cmp    BYTE PTR [ecx+eiz*1],cl
  414a3a:	jno    0x414a31
  414a3c:	xor    bh,BYTE PTR [esi+0x7]
  414a3f:	xchg   ebx,eax
  414a40:	push   0xbfa73b19
  414a45:	sahf   
  414a46:	push   0x531bb8c4
  414a4b:	pop    ds
  414a4c:	inc    edx
  414a4d:	outs   dx,DWORD PTR ds:[esi]
  414a4e:	sti    
  414a4f:	lea    ebp,[ebp+0x5317cc48]
  414a55:	sbb    BYTE PTR [ecx],cl
  414a57:	xor    edi,DWORD PTR [eax+0x52]
  414a5a:	jle    0x414a74
  414a5c:	sbb    DWORD PTR [edi+0x2be70fcc],ecx
  414a62:	nop
  414a63:	fild   QWORD PTR [esi+0x368b2faa]
  414a69:	inc    edi
  414a6a:	mov    edi,0x6b0e1f64
  414a6f:	sbb    eax,0x823e42e8
  414a74:	pop    ebx
  414a75:	adc    al,0x80
  414a77:	pop    ecx
  414a78:	add    al,0x84
  414a7b:	int    0x1b
  414a7d:	daa    
  414a7e:	lahf   
  414a7f:	or     BYTE PTR [eax],bl
  414a81:	sahf   
  414a82:	cmp    al,BYTE PTR [eax-0xb]
  414a85:	xchg   esp,eax
  414a86:	cwde   
  414a87:	push   ss
  414a88:	or     eax,0xa1becd86
  414a8d:	cmp    eax,0x79b3d5d9
  414a92:	push   eax
  414a93:	cdq    
  414a94:	pushf  
  414a95:	gs xchg edx,eax
  414a97:	fst    QWORD PTR [edx+0x58]
  414a9a:	shld   eax,ebx,cl
  414a9d:	sub    eax,0xb6be7be8
  414aa2:	xlat   BYTE PTR ds:[ebx]
  414aa3:	xchg   edx,eax
  414aa4:	(bad)
  414aa8:	lds    ebp,FWORD PTR [ebx+0x79e1c35d]
  414aae:	in     al,0x72
  414ab0:	shl    ecx,1
  414ab2:	push   esi
  414ab3:	mov    dl,0x1e
  414ab5:	xchg   edi,eax
  414ab6:	cmp    al,0x38
  414ab8:	sub    BYTE PTR ds:0xd4ff70a0,bh
  414abe:	lahf   
  414abf:	aam    0xb7
  414ac1:	stos   BYTE PTR es:[edi],al
  414ac2:	add    BYTE PTR [esi+ebx*2-0x2e],dl
  414ac6:	jb     0x414ac4
  414ac8:	or     eax,0xe2c466e8
  414acd:	mov    ah,0x12
  414acf:	mov    ds:0xe040c583,al
  414ad4:	add    DWORD PTR [edx-0x58c0ee82],ecx
  414ada:	shl    BYTE PTR [ebx+0xf],1
  414add:	nop
  414ade:	retf   0x3832
  414ae1:	stos   DWORD PTR es:[edi],eax
  414ae2:	sbb    edi,DWORD PTR [esi+ecx*2-0x26]
  414ae6:	popa   
  414ae7:	dec    ebp
  414ae8:	cdq    
  414ae9:	or     al,0x99
  414aeb:	ja     0x414b22
  414aed:	push   ebp
  414aee:	mov    ecx,0x94f23f05
  414af3:	and    DWORD PTR [ebx],esi
  414af5:	in     eax,0x46
  414af7:	xor    bh,BYTE PTR [eax+0x6a]
  414afa:	mov    edx,DWORD PTR [ebx-0x6372b0bf]
  414b00:	sti    
  414b01:	aam    0x10
  414b03:	pop    esi
  414b04:	mov    edx,0x4ec6673c
  414b09:	add    eax,0xe868668e
  414b0e:	mov    edx,0xe044871c
  414b13:	or     DWORD PTR [edx+ecx*2-0x7d],eax
  414b17:	xor    eax,0x9dd4158b
  414b1c:	shl    BYTE PTR [edi+eiz*1],1
  414b1f:	lds    eax,FWORD PTR [esi+0x74249141]
  414b25:	sbb    al,BYTE PTR [edx-0x1c48413c]
  414b2b:	sahf   
  414b2c:	jmp    0x1f74:0x63abedc1
  414b33:	rcl    DWORD PTR [ecx-0x6bdc051b],0xa6
  414b3a:	mov    ebx,0x19d78c06
  414b3f:	jmp    0x2c8eadbd
  414b44:	rol    BYTE PTR [edx],cl
  414b46:	ins    BYTE PTR es:[edi],dx
  414b47:	aas    
  414b48:	pushw  es
  414b4a:	xor    ebx,0x6a5f63b8
  414b50:	out    0x8f,eax
  414b52:	dec    ebp
  414b53:	inc    esp
  414b54:	dec    esi
  414b55:	aad    0xe9
  414b57:	sbb    BYTE PTR [ebp-0x127ed3c5],cl
  414b5d:	inc    edi
  414b5e:	sub    al,0x2c
  414b60:	aaa    
  414b61:	inc    ebx
  414b62:	mov    ch,ah
  414b64:	xor    DWORD PTR [ebp-0x5f7327fe],edx
  414b6a:	test   BYTE PTR cs:[ebx+0x21d18e43],bh
  414b71:	sub    eax,0xbadc4dc
  414b76:	inc    esp
  414b77:	sbb    eax,DWORD PTR [ecx+edx*1+0x68]
  414b7b:	in     al,0x44
  414b7d:	jno    0x414bf6
  414b7f:	push   cs
  414b80:	jl     0x414bf9
  414b82:	in     eax,dx
  414b83:	xor    cl,BYTE PTR [ecx-0x29eb4249]
  414b89:	xor    BYTE PTR [ebx+0x24],bh
  414b8c:	rcl    DWORD PTR [ebx+0x7d],0xac
  414b90:	lock fsubr DWORD PTR [ecx+0x36]
  414b94:	jp     0x414b87
  414b96:	push   0xffffffc9
  414b98:	push   ecx
  414b99:	inc    eax
  414b9a:	outs   dx,BYTE PTR ds:[esi]
  414b9b:	mov    dl,0x5b
  414b9d:	or     DWORD PTR [eax+ecx*1-0x4d616222],esp
  414ba4:	stos   DWORD PTR es:[edi],eax
  414ba5:	adc    ch,BYTE PTR [edi]
  414ba7:	sbb    DWORD PTR [esi-0x7e],edi
  414baa:	lods   eax,DWORD PTR ds:[esi]
  414bab:	cmp    eax,0x302d5193
  414bb0:	mov    dl,0x4d
  414bb2:	shl    ch,cl
  414bb4:	push   esp
  414bb5:	dec    ebp
  414bb6:	ficom  WORD PTR [esi+ebx*8+0x52]
  414bba:	mov    al,ds:0xde4584f9
  414bbf:	sti    
  414bc0:	stc    
  414bc1:	inc    edi
  414bc2:	mov    ds:0x3afd4d93,eax
  414bc7:	call   0x15bd:0xf51d562d
  414bce:	inc    esi
  414bcf:	mov    bh,0xd5
  414bd1:	ins    DWORD PTR es:[edi],dx
  414bd2:	cdq    
  414bd3:	pop    ebp
  414bd4:	scas   eax,DWORD PTR es:[edi]
  414bd5:	mov    BYTE PTR [ebx+0x19],al
  414bd8:	js     0x414c27
  414bda:	sar    BYTE PTR [edi+0x64ad677e],0x79
  414be1:	neg    BYTE PTR [edi-0x37]
  414be4:	stos   BYTE PTR es:[edi],al
  414be5:	daa    
  414be6:	inc    esi
  414be7:	jno    0x414bd8
  414be9:	cmc    
  414bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414beb:	cld    
  414bec:	pusha  
  414bed:	inc    ebx
  414bee:	outs   dx,DWORD PTR ds:[esi]
  414bef:	inc    eax
  414bf0:	push   esp
  414bf1:	jns    0x414c39
  414bf3:	pushf  
  414bf4:	stc    
  414bf5:	pop    ds
  414bf6:	dec    edx
  414bf7:	adc    eax,0x2a29b083
  414bfc:	jnp    0x414bdd
  414bfe:	stos   BYTE PTR es:[edi],al
  414bff:	cmp    esi,edi
  414c01:	push   ss
  414c02:	mov    bh,0xa6
  414c04:	fidivr WORD PTR [bx+di]
  414c07:	inc    esi
  414c08:	pop    ebp
  414c09:	xchg   edi,eax
  414c0a:	pop    esi
  414c0b:	aaa    
  414c0c:	ins    DWORD PTR es:[edi],dx
  414c0d:	and    BYTE PTR [esi+0x28d43538],bl
  414c13:	psrlw  mm5,mm0
  414c16:	and    DWORD PTR [ebx],ebp
  414c18:	xor    ebx,esp
  414c1a:	fs and al,0xe9
  414c1d:	sti    
  414c1e:	adc    al,ch
  414c20:	inc    edi
  414c21:	fwait
  414c22:	inc    edx
  414c23:	out    0x54,eax
  414c25:	push   esi
  414c26:	push   cs
  414c27:	ror    BYTE PTR [ebx+0x2a46dcac],cl
  414c2d:	inc    DWORD PTR [edi]
  414c2f:	add    DWORD PTR [edi+edx*1-0x7bab2b8b],eax
  414c36:	dec    ebx
  414c37:	mov    ecx,edx
  414c39:	shl    ebx,0x72
  414c3c:	stos   DWORD PTR es:[edi],eax
  414c3d:	loop   0x414c25
  414c3f:	ins    BYTE PTR es:[edi],dx
  414c40:	clc    
  414c41:	mov    ds:0xcd6d92bd,eax
  414c46:	pop    ds
  414c47:	push   0x1d3661f3
  414c4c:	adc    BYTE PTR [esi-0x4e781e19],0xd1
  414c53:	test   al,0x94
  414c55:	jb     0x414c7d
  414c57:	in     al,dx
  414c58:	cmp    esi,edi
  414c5a:	mov    ebx,0xa4d625e9
  414c5f:	push   edi
  414c60:	das    
  414c61:	fwait
  414c62:	xor    bh,BYTE PTR [esi+0x26f4925a]
  414c68:	xor    BYTE PTR [ecx+0x49db0916],bh
  414c6e:	mov    al,ds:0x5571d9f1
  414c73:	outs   dx,DWORD PTR ds:[esi]
  414c74:	push   ebx
  414c75:	sbb    esi,DWORD PTR [ebp+0x49f549d0]
  414c7b:	push   ebx
  414c7c:	and    ebp,DWORD PTR [ebx+0x71f7430]
  414c82:	push   ecx
  414c83:	sar    DWORD PTR [esi],1
  414c85:	adc    al,0xe9
  414c87:	dec    ecx
  414c88:	inc    ecx
  414c89:	fimul  DWORD PTR [edi+0x5b7d60dd]
  414c8f:	iret   
  414c90:	sub    al,BYTE PTR ds:[ebp-0x61]
  414c94:	mov    dl,0x45
  414c96:	pop    edi
  414c97:	mov    edi,0xb9514248
  414c9c:	push   es
  414c9d:	xor    esp,DWORD PTR [eax]
  414c9f:	fnsave [esi+0x51712341]
  414ca5:	mov    al,ds:0xebd04e6e
  414cab:	jp     0x414c53
  414cad:	lea    esp,[ebp+0x15d521c9]
  414cb3:	xor    ebp,0x50
  414cb6:	xchg   DWORD PTR [eax+ebx*1],ebx
  414cb9:	ficom  DWORD PTR [eax]
  414cbb:	push   edi
  414cbc:	mov    ah,0x49
  414cbe:	outs   dx,BYTE PTR ds:[esi]
  414cbf:	nop
  414cc0:	iret   
  414cc1:	cwde   
  414cc2:	(bad)  
  414cc4:	inc    ebp
  414cc5:	push   ds
  414cc6:	shl    BYTE PTR [edx+0x27],1
  414cc9:	aad    0x39
  414ccb:	dec    esp
  414ccc:	push   0x41ee9c47
  414cd1:	mov    dh,BYTE PTR [eax]
  414cd3:	in     al,0xbe
  414cd5:	xchg   esi,eax
  414cd6:	mov    ds:0x137e889e,eax
  414cdb:	shl    BYTE PTR [edi-0x402df581],1
  414ce1:	or     ebp,DWORD PTR [edi]
  414ce3:	aaa    
  414ce4:	push   ebp
  414ce5:	inc    ecx
  414ce6:	mov    bh,BYTE PTR ds:0x70061afa
  414cec:	pop    ebp
  414ced:	xor    BYTE PTR [esp+ebp*2-0x41],al
  414cf1:	pop    ecx
  414cf2:	adc    ah,0x42
  414cf5:	sub    al,0x9f
  414cf7:	mov    DWORD PTR [eax],esp
  414cf9:	lods   eax,DWORD PTR ds:[esi]
  414cfa:	addr16 ds inc esp
  414cfd:	push   edx
  414cfe:	pop    edx
  414cff:	sbb    al,0xd5
  414d01:	out    dx,al
  414d02:	stos   BYTE PTR es:[edi],al
  414d03:	inc    esp
  414d04:	xchg   esi,eax
  414d05:	aam    0x38
  414d07:	cmp    al,0xe3
  414d09:	out    0x5,al
  414d0b:	add    bh,BYTE PTR fs:[eax+0x14]
  414d0f:	xchg   ebx,eax
  414d10:	rcl    eax,cl
  414d12:	icebp  
  414d13:	and    al,0xb
  414d15:	test   BYTE PTR [esi-0x567f232d],dl
  414d1b:	add    BYTE PTR cs:[esi-0x36366023],ah
  414d22:	add    al,0xd5
  414d24:	jb     0x414d0d
  414d26:	sub    eax,0xc7114131
  414d2b:	or     esp,ebp
  414d2d:	ins    DWORD PTR es:[edi],dx
  414d2e:	and    DWORD PTR [ebp-0x513cf327],ebp
  414d34:	inc    esi
  414d35:	aam    0x27
  414d37:	add    eax,0x1983a207
  414d3c:	aaa    
  414d3d:	xchg   BYTE PTR ss:[edx-0x327fcd25],al
  414d44:	in     eax,dx
  414d45:	imul   edi,DWORD PTR [edx+0x35],0xffffffcc
  414d49:	mov    al,ds:0xff327f6c
  414d4e:	call   0x4dca:0x8473bba1
  414d55:	jecxz  0x414d8d
  414d57:	xor    BYTE PTR [ebp+0x1a7e67b],cl
  414d5d:	into   
  414d5e:	jbe    0x414d84
  414d60:	xchg   esp,eax
  414d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d62:	dec    edx
  414d63:	sbb    cl,BYTE PTR [ebx]
  414d65:	das    
  414d66:	adc    eax,0xb626276c
  414d6b:	dec    ebx
  414d6c:	sub    BYTE PTR [ebp-0x57e686e7],0xa8
  414d73:	inc    edi
  414d74:	addr16 sbb ebp,ebp
  414d77:	mov    ecx,0xaf780f68
  414d7c:	mov    edi,0x19404a0c
  414d81:	sbb    esi,ecx
  414d83:	aas    
  414d84:	jmp    0x414d59
  414d86:	push   esi
  414d87:	int3   
  414d88:	xchg   ebx,eax
  414d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8a:	xchg   ebp,eax
  414d8b:	mov    esi,0x354a0cd3
  414d90:	mov    cl,BYTE PTR [edx-0x1421b483]
  414d96:	mov    ah,0x8e
  414d98:	add    DWORD PTR [edi-0x6eb3097],0xffffff86
  414d9f:	sub    eax,0x941ebfc9
  414da4:	adc    eax,0x4b518b58
  414da9:	xchg   al,ah
  414dab:	inc    ebx
  414dac:	jae    0x414d96
  414dae:	adc    al,0x37
  414db0:	test   al,0xfe
  414db2:	adc    BYTE PTR [ecx-0x62],ch
  414db5:	popf   
  414db6:	cmp    al,0xf6
  414db8:	stc    
  414db9:	mov    dh,0x63
  414dbb:	dec    ebx
  414dbc:	xor    eax,0xe4ba19ab
  414dc1:	adc    edi,DWORD PTR [eax+0x5c1af08]
  414dc7:	or     ah,BYTE PTR [eax-0x13]
  414dca:	cmp    BYTE PTR [bp+si+0x42a3],dl
  414dcf:	outs   dx,BYTE PTR ds:[esi]
  414dd0:	jl     0x414dc5
  414dd2:	dec    ebp
  414dd3:	loopne 0x414e29
  414dd5:	sbb    ecx,DWORD PTR [edx-0x5c]
  414dd8:	add    BYTE PTR [edx+eax*2],al
  414ddb:	jge    0x414daa
  414ddd:	mov    es,eax
  414ddf:	dec    eax
  414de0:	shr    BYTE PTR [edi+ebp*1],0x0
  414de4:	mov    eax,ds:0x60de80b6
  414de9:	fxch   st(6)
  414deb:	cmp    al,0xf2
  414ded:	shl    DWORD PTR [esp+0x324f70c],cl
  414df4:	sti    
  414df5:	sub    BYTE PTR [esi-0x39],ah
  414df8:	shl    BYTE PTR [ebx],0xce
  414dfb:	sub    eax,0x561b014d
  414e00:	push   es
  414e01:	test   DWORD PTR [edx+0x7c],ecx
  414e04:	dec    edi
  414e05:	pushf  
  414e06:	daa    
  414e07:	xchg   ebx,eax
  414e08:	jb     0x414e10
  414e0a:	push   es
  414e0b:	or     al,0x7c
  414e0d:	mov    ah,0x6f
  414e0f:	mul    DWORD PTR [esi-0x44c132bc]
  414e15:	icebp  
  414e16:	inc    esp
  414e17:	mov    dl,0x61
  414e19:	in     eax,dx
  414e1a:	cmp    ebx,DWORD PTR [edi]
  414e1c:	sub    BYTE PTR [ecx+0x72aaa9ec],0xcb
  414e23:	jmp    0x4072d326
  414e28:	enter  0xd0fb,0x31
  414e2c:	imul   ebp,DWORD PTR [eax],0x33c755dc
  414e32:	mov    ebx,DWORD PTR [eax-0x11337d7c]
  414e38:	push   ecx
  414e39:	call   0x32196466
  414e3e:	fiadd  WORD PTR [ecx+0x6a]
  414e41:	adc    eax,0x8b012af3
  414e46:	mov    dh,0x2e
  414e48:	cmp    eax,0xe6aabc3d
  414e4d:	mov    ebx,0xa97880bd
  414e52:	inc    ecx
  414e53:	and    dh,dl
  414e55:	dec    ecx
  414e56:	adc    DWORD PTR [ebx+0x2059076a],0xffffffc4
  414e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e5e:	cdq    
  414e5f:	fstp   DWORD PTR [ebx]
  414e61:	and    al,0x4a
  414e63:	(bad)  
  414e64:	fcomp  DWORD PTR [ecx]
  414e66:	dec    esi
  414e67:	jmp    0x414ea0
  414e69:	jecxz  0x414e1a
  414e6b:	(bad)  [eax-0x69]
  414e6e:	pop    edx
  414e6f:	fdivr  QWORD PTR [edi-0x2919390e]
  414e75:	mov    bh,0xd7
  414e77:	pop    eax
  414e78:	test   al,0xb3
  414e7a:	call   FWORD PTR ds:0x7b0c4717
  414e80:	outs   dx,DWORD PTR ds:[esi]
  414e81:	push   eax
  414e82:	push   ds
  414e83:	push   esi
  414e84:	mov    cl,BYTE PTR [eax-0x13c1732]
  414e8a:	ins    DWORD PTR es:[edi],dx
  414e8b:	out    0x3d,al
  414e8d:	sar    BYTE PTR [esp+eiz*8+0x7f],cl
  414e91:	and    eax,0xc29f5e07
  414e96:	dec    ebx
  414e97:	push   ds
  414e98:	sub    BYTE PTR [esi+0x15120d91],dl
  414e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e9f:	test   eax,0x9f1d9030
  414ea4:	sbb    BYTE PTR [esi+eax*8-0x54],0xf5
  414ea9:	std    
  414eaa:	out    dx,eax
  414eab:	test   eax,0xacd04b2e
  414eb0:	xchg   ebx,eax
  414eb1:	test   eax,0x2c1adc64
  414eb6:	dec    esp
  414eb7:	loop   0x414ede
  414eb9:	jo     0x414f2c
  414ebb:	add    al,0xae
  414ebd:	popa   
  414ebe:	dec    esi
  414ebf:	test   eax,0x18d1a245
  414ec4:	sbb    dh,bl
  414ec6:	pop    esi
  414ec7:	add    eax,ebp
  414ec9:	shl    DWORD PTR [edx-0x4a],cl
  414ecc:	mov    dl,0xcf
  414ece:	cli    
  414ecf:	mov    eax,0x1e948fe5
  414ed4:	cmp    bh,BYTE PTR [edi+eax*8+0x69]
  414ed8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414eda:	fst    QWORD PTR [eax]
  414edc:	test   BYTE PTR [eax-0x6],dh
  414edf:	pop    esi
  414ee0:	cdq    
  414ee1:	inc    esi
  414ee2:	inc    eax
  414ee3:	xchg   esp,eax
  414ee4:	push   edx
  414ee5:	arpl   WORD PTR [edi-0x22],cx
  414ee8:	(bad)  
  414ee9:	nop
  414eea:	mov    eax,ds:0xa4a59329
  414eef:	(bad)  [ebx-0x62aa7177]
  414ef5:	enter  0x927,0xe5
  414ef9:	jl     0x414e9f
  414efb:	enter  0x3383,0x3e
  414eff:	call   eax
  414f01:	jne    0x414edf
  414f03:	add    eax,0x12da000
  414f08:	(bad)  
  414f09:	(bad)  
  414f0b:	add    al,0x35
  414f0d:	add    DWORD PTR [eax-0x32],ebx
  414f10:	pop    esi
  414f11:	mov    ds:0x6e0a8dc5,al
  414f16:	sub    ah,BYTE PTR [esi]
  414f18:	lods   al,BYTE PTR ds:[esi]
  414f19:	and    DWORD PTR [ebx+0x73cdd543],ebp
  414f1f:	sub    BYTE PTR [edx],bl
  414f21:	jne    0x414ebe
  414f23:	xchg   edi,eax
  414f24:	neg    BYTE PTR [edi-0x15]
  414f27:	add    eax,0x6c89ae1b
  414f2c:	push   esi
  414f2d:	adc    dl,BYTE PTR [esp+edi*8]
  414f30:	in     al,0x49
  414f32:	in     eax,0x8b
  414f34:	xor    bl,BYTE PTR [esi+0x4d7c2944]
  414f3a:	push   ebp
  414f3b:	mov    WORD PTR [eax+eax*4-0x5f44f19c],es
  414f42:	sbb    eax,0x921caeec
  414f47:	aad    0x2a
  414f49:	rcr    DWORD PTR [esi+0x4bcac5e],1
  414f4f:	loop   0x414f87
  414f51:	inc    esp
  414f52:	inc    eax
  414f53:	jo     0x414f21
  414f55:	in     eax,dx
  414f56:	and    eax,0xe9fdd953
  414f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f5c:	or     BYTE PTR [ecx],ah
  414f5e:	cli    
  414f5f:	das    
  414f60:	mov    al,ds:0x6596a4ac
  414f65:	xor    DWORD PTR [ebp+0xa],ebp
  414f68:	mov    esp,0x17a26e11
  414f6d:	hlt    
  414f6e:	push   esi
  414f6f:	dec    eax
  414f70:	xchg   BYTE PTR [ebp+0x3e],al
  414f73:	inc    ebx
  414f74:	mov    ebx,0x38c8995c
  414f79:	and    al,0xa5
  414f7b:	mov    BYTE PTR ds:0x4d2fedff,cl
  414f81:	jae    0x414f94
  414f83:	or     ah,BYTE PTR [ecx-0x4ffee790]
  414f89:	jp     0x414f57
  414f8b:	xchg   esi,eax
  414f8c:	mov    ebp,DWORD PTR [ecx+0x70]
  414f8f:	jne    0x414f77
  414f91:	push   ds
  414f92:	jl     0x414f1d
  414f94:	xor    cl,ah
  414f96:	xor    DWORD PTR [ebx],0xffffffd6
  414f99:	ret    
  414f9a:	push   es
  414f9b:	pop    ebx
  414f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f9d:	fstp   QWORD PTR [edi+0x3e127745]
  414fa3:	repnz pop ecx
  414fa5:	es push ebp
  414fa7:	ins    BYTE PTR es:[edi],dx
  414fa8:	xor    ebp,ebp
  414faa:	jns    0x414f3a
  414fac:	outs   dx,BYTE PTR ds:[esi]
  414fad:	inc    ecx
  414fae:	pop    es
  414faf:	nop
  414fb0:	mov    esp,0xec7b577c
  414fb5:	sti    
  414fb6:	mov    WORD PTR [esi],es
  414fb8:	je     0x415025
  414fba:	jbe    0x414ff3
  414fbc:	adc    al,0x4f
  414fbe:	xchg   ebp,eax
  414fbf:	loopne 0x414f5d
  414fc1:	dec    DWORD PTR [edi+0x44]
  414fc4:	and    eax,0xefb852b8
  414fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fca:	imul   eax,ebp,0xffffffca
  414fcd:	xchg   ecx,eax
  414fce:	pop    ebp
  414fcf:	jb     0x414fb3
  414fd1:	cdq    
  414fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fd3:	nop
  414fd4:	es stc 
  414fd6:	je     0x414fe6
  414fd8:	inc    edi
  414fd9:	push   ss
  414fda:	xchg   ebx,eax
  414fdb:	(bad)  
  414fdc:	ret    0xcdc5
  414fdf:	xlat   BYTE PTR ds:[ebx]
  414fe0:	pop    ebp
  414fe1:	js     0x414f8f
  414fe3:	mov    ds:0xcc69bd6,al
  414fe8:	fmul   st(0),st
  414fea:	(bad)  
  414feb:	aam    0x66
  414fed:	(bad)  
  414fee:	sti    
  414fef:	test   eax,0xa9a601c
  414ff4:	xchg   ebx,eax
  414ff5:	sub    DWORD PTR [edx],0xb13e2e5f
  414ffb:	adc    al,0x7e
  414ffd:	mov    ds:0x80b88d02,eax
  415002:	xchg   esp,eax
  415003:	xchg   al,dl
  415005:	lods   al,BYTE PTR ds:[esi]
  415006:	div    BYTE PTR [ebp+0x48]
  415009:	in     eax,dx
  41500a:	call   0xb0ef07bd
  41500f:	aaa    
  415010:	mov    ah,0x3
  415012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415013:	ror    esp,cl
  415015:	mul    esp
  415017:	dec    ebp
  415018:	mov    ds:0xe0684881,eax
  41501d:	jne    0x414fb7
  41501f:	sub    bh,bl
  415021:	sar    DWORD PTR [esi+0x6e],1
  415024:	(bad)  
  415025:	mov    eax,0xa5508757
  41502a:	sahf   
  41502b:	aaa    
  41502c:	mov    eax,ds:0x95ed266f
  415031:	and    ebx,DWORD PTR [esi-0x4283acc1]
  415037:	js     0x4150b2
  415039:	repz das 
  41503b:	mov    esi,0xa9de4a5b
  415040:	test   al,0x43
  415042:	mov    dh,0xe9
  415044:	jbe    0x415094
  415046:	in     eax,0x1b
  415048:	test   BYTE PTR [eax+0x30ae0753],dh
  41504e:	in     al,0x90
  415050:	mov    edi,0x2b96d60
  415055:	xchg   edi,eax
  415056:	pop    ebx
  415057:	push   es
  415058:	cld    
  415059:	dec    edi
  41505a:	rol    BYTE PTR [esi-0x24],1
  41505d:	jmp    0x628ca596
  415062:	jg     0x4150b9
  415064:	jno    0x415085
  415066:	xor    DWORD PTR [ecx+ecx*1-0x59],ecx
  41506a:	lds    esp,FWORD PTR ds:[ecx-0x3fae18cc]
  415071:	adc    eax,0x75610f29
  415076:	je     0x415051
  415078:	push   ecx
  415079:	pop    ds
  41507a:	sahf   
  41507b:	(bad)  
  41507c:	or     al,0xd9
  41507e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41507f:	loope  0x415057
  415081:	xchg   ebp,eax
  415082:	mov    BYTE PTR [eax+0x66b9c2b9],dl
  415088:	(bad)
  41508d:	mov    bh,0xb1
  41508f:	test   ebp,0xa35ae15c
  415095:	fcmovb st,st(1)
  415097:	push   esi
  415098:	gs ret 0xef37
  41509c:	or     DWORD PTR [ebx],ebp
  41509e:	xor    BYTE PTR [ebp-0x41],al
  4150a1:	inc    ebp
  4150a2:	cmc    
  4150a3:	ja     0x41507c
  4150a5:	inc    ebp
  4150a6:	fsubr  DWORD PTR [ebp+0x61ded6e7]
  4150ac:	test   eax,0x2b884bd7
  4150b1:	adc    esi,DWORD PTR [ebx]
  4150b3:	sbb    dh,BYTE PTR [ebx]
  4150b5:	iret   
  4150b6:	rol    DWORD PTR [edi+0x33b69844],1
  4150bc:	adc    BYTE PTR [edi+esi*4],dl
  4150bf:	mov    edx,DWORD PTR [eax-0x78]
  4150c2:	and    cl,BYTE PTR [edi+eax*8]
  4150c5:	lock lds ebx,FWORD PTR [edx+0x240a4ceb]
  4150cc:	retf   0x3e4e
  4150cf:	add    dl,cl
  4150d1:	pop    es
  4150d2:	xor    al,0x3f
  4150d4:	pop    edx
  4150d5:	out    dx,eax
  4150d6:	stos   BYTE PTR es:[edi],al
  4150d7:	push   es
  4150d8:	xor    dh,dh
  4150da:	mov    ah,0x6c
  4150dc:	fsubr  DWORD PTR [edx-0x3c]
  4150df:	data16 jns 0x415143
  4150e2:	(bad)  
  4150e3:	icebp  
  4150e4:	outs   dx,BYTE PTR ds:[esi]
  4150e5:	add    eax,0xc13c9bc0
  4150ea:	jnp    0x415155
  4150ec:	push   ebx
  4150ed:	or     BYTE PTR [eax+0x5bd4bf48],ch
  4150f3:	jns    0x41508b
  4150f5:	sbb    eax,0xaffa0c42
  4150fa:	jl     0x41513c
  4150fc:	pop    ebp
  4150fd:	or     eax,DWORD PTR [ebp+ebx*4+0x1]
  415101:	push   ss
  415102:	mov    bl,0xe
  415104:	add    bh,BYTE PTR ds:0x4b28b590
  41510a:	mov    ebp,0x1d69a63c
  41510f:	jo     0x4150ce
  415111:	ror    BYTE PTR [esi+edx*1-0x4303eda5],1
  415118:	mov    ds:0x8f824e08,al
  41511d:	add    bh,bl
  41511f:	dec    ebp
  415120:	std    
  415121:	push   ecx
  415122:	lea    ebx,[ecx-0x63]
  415125:	push   ecx
  415126:	fidiv  DWORD PTR [ebx-0x52]
  415129:	clc    
  41512a:	inc    ebx
  41512b:	lods   eax,DWORD PTR ds:[esi]
  41512c:	lahf   
  41512d:	icebp  
  41512e:	xlat   BYTE PTR ds:[ebx]
  41512f:	clc    
  415130:	xor    DWORD PTR [edx-0x45],eax
  415133:	push   edx
  415134:	sub    al,0x1c
  415136:	aam    0xdf
  415138:	fistp  WORD PTR [eax+0x40]
  41513b:	add    ebp,DWORD PTR [esp+eiz*8+0x25255bb9]
  415142:	push   cs
  415143:	repnz or al,0x57
  415146:	mov    esp,0xbb38cf5e
  41514b:	sbb    al,0x14
  41514d:	lods   eax,DWORD PTR ds:[esi]
  41514e:	dec    esp
  41514f:	fwait
  415150:	inc    eax
  415151:	stos   DWORD PTR es:[edi],eax
  415152:	sub    al,0x73
  415154:	jnp    0x4151cc
  415156:	lahf   
  415157:	jge    0x415184
  415159:	dec    ebx
  41515a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41515b:	ins    BYTE PTR es:[edi],dx
  41515c:	lods   eax,DWORD PTR ds:[esi]
  41515d:	mov    dh,BYTE PTR [esi-0x78]
  415160:	xchg   ebp,eax
  415161:	test   al,0x38
  415163:	dec    esi
  415164:	adc    DWORD PTR [eax-0x360d8f4a],ebp
  41516a:	bound  eax,QWORD PTR [ebx+0x1]
  41516d:	adc    ah,al
  41516f:	pop    ss
  415170:	(bad)  
  415171:	mov    ?,WORD PTR [edx+edi*2-0xb]
  415175:	ud0    esp,DWORD PTR [edi+ebx*4-0x569e0fad]
  41517d:	call   0xcef7:0x61c6d827
  415184:	or     esp,DWORD PTR [eax+0x24e821b9]
  41518a:	loope  0x4151fb
  41518c:	cmp    BYTE PTR [esi-0xf8127af],dl
  415192:	ds adc eax,0xebe3406
  415198:	add    ch,BYTE PTR [esi+0x23]
  41519b:	push   0x2f
  41519d:	retf   0x39a9
  4151a0:	retf   
  4151a1:	mov    ch,0x57
  4151a3:	mov    ebp,0x226174dc
  4151a8:	call   0x7515daaf
  4151ad:	cwde   
  4151ae:	(bad)  
  4151b0:	stos   BYTE PTR es:[edi],al
  4151b1:	dec    edx
  4151b2:	jle    0x4151fd
  4151b4:	and    ah,BYTE PTR [ecx-0x121c6851]
  4151ba:	(bad)  
  4151bb:	(bad)  
  4151bc:	mov    fs,WORD PTR [ecx-0x76]
  4151bf:	inc    ebp
  4151c0:	out    dx,eax
  4151c1:	js     0x415224
  4151c3:	popf   
  4151c4:	ror    DWORD PTR [edx+ecx*4-0x4cd63cf2],0x15
  4151cc:	scas   al,BYTE PTR es:[edi]
  4151cd:	xor    eax,0xda96d0c2
  4151d2:	pop    ss
  4151d3:	(bad)  [esi+0x5484b5b3]
  4151d9:	push   esp
  4151da:	mov    ds:0x8b7683a3,al
  4151df:	jge    0x415194
  4151e1:	lock xor BYTE PTR [eax-0x1292b29],0x28
  4151e9:	test   eax,0xcb834718
  4151ee:	fs stos BYTE PTR es:[edi],al
  4151f0:	pop    es
  4151f1:	add    edx,ecx
  4151f3:	das    
  4151f4:	div    DWORD PTR [ecx-0x47]
  4151f7:	jge    0x4151cb
  4151f9:	pop    edi
  4151fa:	jmp    0x6c0f:0xfaf19ded
  415201:	xchg   edx,eax
  415202:	mov    dh,0x5c
  415204:	sbb    al,0xbb
  415206:	mov    al,0x99
  415208:	sahf   
  415209:	cmp    DWORD PTR [ebp-0x3d71f3c1],edx
  41520f:	mov    ecx,0xcdafb50d
  415214:	pop    esi
  415215:	icebp  
  415216:	dec    edi
  415217:	pop    esp
  415218:	lds    edx,FWORD PTR [esi-0x6f991158]
  41521e:	das    
  41521f:	xchg   esp,eax
  415220:	and    dl,BYTE PTR [ebp-0x3e49a636]
  415226:	xor    cl,al
  415228:	cmp    BYTE PTR [edx-0x1d42192a],bh
  41522e:	iret   
  41522f:	das    
  415230:	(bad)  
  415231:	mov    ch,0xd7
  415233:	mov    fs,ecx
  415235:	cmp    esi,edi
  415237:	loopne 0x4151ea
  415239:	pop    ebp
  41523a:	fsubrp st(0),st
  41523c:	(bad)  
  41523d:	jp     0x415293
  41523f:	pushf  
  415240:	inc    edi
  415241:	rcr    BYTE PTR [ebp-0x4e],1
  415244:	ss inc eax
  415246:	popa   
  415247:	repz sbb al,0x66
  41524a:	into   
  41524b:	add    eax,0xeeb46b64
  415250:	mov    WORD PTR [edi-0x7d161cb1],?
  415256:	(bad)  
  415257:	mov    esp,0x56e6de04
  41525c:	xchg   ebp,eax
  41525d:	add    BYTE PTR [edx+0x20],cl
  415260:	pushf  
  415261:	in     eax,0xe9
  415263:	pop    ebp
  415264:	jp     0x41528a
  415266:	ret    
  415267:	jmp    0x4152b3
  415269:	loop   0x4152c3
  41526b:	xchg   esi,eax
  41526c:	lods   eax,DWORD PTR ds:[esi]
  41526d:	cli    
  41526e:	scas   al,BYTE PTR es:[edi]
  41526f:	mov    ah,BYTE PTR [ebp+ecx*2-0x568d405]
  415276:	or     dl,BYTE PTR ds:0xc029790
  41527c:	jl     0x41528a
  41527e:	xor    eax,0xe7772bb
  415283:	xchg   esp,eax
  415284:	add    BYTE PTR ds:0xda4c9d9f,0x3e
  41528b:	push   ebx
  41528c:	mov    ch,0x84
  41528e:	imul   eax,DWORD PTR [ecx],0x3a020674
  415294:	adc    ecx,esp
  415296:	mov    eax,ds:0x2bde7486
  41529b:	out    dx,eax
  41529c:	fwait
  41529d:	mov    cl,0xb3
  41529f:	push   esi
  4152a0:	dec    eax
  4152a1:	loop   0x4152d3
  4152a3:	jmp    0xdf02:0xd951cf5d
  4152aa:	ds mov ebx,0x351807b4
  4152b0:	ins    DWORD PTR es:[edi],dx
  4152b1:	ins    BYTE PTR es:[edi],dx
  4152b2:	fimul  WORD PTR [ebp+0x3c]
  4152b5:	icebp  
  4152b6:	ja     0x4152d6
  4152b8:	cld    
  4152b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ba:	iret   
  4152bb:	mov    al,0x35
  4152bd:	loopne 0x415260
  4152bf:	fdivr  st,st(1)
  4152c1:	sbb    BYTE PTR [edx+eax*4],0x7a
  4152c5:	cmc    
  4152c6:	test   al,0x87
  4152c8:	jb     0x41528c
  4152ca:	dec    ebp
  4152cb:	push   edx
  4152cc:	mov    cl,BYTE PTR [ecx+0x33]
  4152cf:	mov    ebp,0xae48c1b1
  4152d4:	inc    edi
  4152d5:	loop   0x415266
  4152d7:	inc    edi
  4152d8:	cmovnp edi,DWORD PTR [eax-0x7efe8c26]
  4152df:	fdiv   st(2),st
  4152e1:	inc    BYTE PTR [ebx-0x268e6a4c]
  4152e7:	mov    ah,0x39
  4152e9:	mov    esp,0x39c67bdd
  4152ee:	sub    al,0xe7
  4152f0:	pop    ss
  4152f1:	arpl   WORD PTR [edi+eax*1-0x2b],si
  4152f5:	mov    BYTE PTR [esi+edi*4],dh
  4152f8:	lds    ebx,FWORD PTR [esi-0x84c523c]
  4152fe:	ret    0xe910
  415301:	mov    ebx,0xb26ca936
  415306:	adc    BYTE PTR [eax-0x75],dl
  415309:	xchg   ebx,eax
  41530a:	xchg   BYTE PTR [ecx+0x17],dl
  41530d:	mov    edx,0xb2a9b6c5
  415312:	test   DWORD PTR [edx-0x3223596],esp
  415318:	icebp  
  415319:	bnd call 0xdb088228
  41531f:	ss aas 
  415321:	and    ebx,DWORD PTR [edx-0xa]
  415324:	neg    ebx
  415326:	xchg   ebp,eax
  415327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415328:	xor    eax,0x8675f21e
  41532d:	mov    al,ds:0x5c6fd76d
  415332:	and    BYTE PTR [edx-0x7aa38785],bl
  415338:	call   0xc351706e
  41533d:	add    al,0x44
  41533f:	push   0xffffffdd
  415341:	(bad)  
  415342:	int    0xb9
  415344:	jp     0x4152d8
  415346:	lds    edi,FWORD PTR ds:0x6dffdce2
  41534c:	not    BYTE PTR [ebx]
  41534e:	pop    eax
  41534f:	pop    ebp
  415350:	lahf   
  415351:	and    ebx,DWORD PTR ds:[ecx+0x5f43e074]
  415358:	jbe    0x4153bc
  41535a:	jg     0x41534b
  41535c:	stos   DWORD PTR es:[edi],eax
  41535d:	jg     0x415373
  41535f:	cmp    BYTE PTR [edi-0x21],ah
  415362:	arpl   WORD PTR [ebp+0x198e639d],dx
  415368:	jl     0x415378
  41536a:	mov    ecx,0x2a09d058
  41536f:	or     esp,DWORD PTR [ebx]
  415371:	xor    esp,ecx
  415373:	test   BYTE PTR [eax],0x60
  415376:	jge    0x4153ed
  415378:	mov    cl,0x18
  41537a:	rol    BYTE PTR [edx+0x734f5d50],1
  415380:	sahf   
  415381:	(bad)  
  415382:	mov    ah,0xef
  415384:	pop    eax
  415385:	pop    ss
  415386:	test   al,dh
  415388:	xor    eax,0x794df60a
  41538d:	jmp    0x4153af
  41538f:	cmp    DWORD PTR [edi+0x31],ecx
  415392:	sbb    dl,BYTE PTR [eax+0x32]
  415395:	clc    
  415396:	push   ss
  415397:	dec    ebp
  415398:	popf   
  415399:	mov    ecx,DWORD PTR [edi-0x7f]
  41539c:	dec    ecx
  41539d:	dec    ebx
  41539e:	loope  0x4153b7
  4153a0:	clc    
  4153a1:	retf   0xbe88
  4153a4:	jmp    0x4153c7
  4153a6:	or     BYTE PTR [ecx+0x31],0x5b
  4153aa:	fisttp DWORD PTR [edi+ebx*2]
  4153ad:	jmp    0x4153df
  4153af:	cld    
  4153b0:	mov    ds:0x91e605ab,al
  4153b5:	sbb    eax,0x7158dab4
  4153ba:	mul    BYTE PTR [ebx+edx*1-0x38]
  4153be:	inc    edi
  4153bf:	dec    ecx
  4153c0:	adc    DWORD PTR [edi-0x7a],eax
  4153c3:	clc    
  4153c4:	out    0x6,al
  4153c6:	div    DWORD PTR [esi]
  4153c8:	shr    DWORD PTR [ebx-0x1d],1
  4153cb:	cmc    
  4153cc:	in     eax,0xc3
  4153ce:	push   cs
  4153cf:	in     al,dx
  4153d0:	xchg   esp,eax
  4153d1:	mov    ebp,0x3a485b44
  4153d6:	push   eax
  4153d7:	mov    ah,BYTE PTR [eax-0x69]
  4153da:	and    DWORD PTR [esp+edx*8-0x54b84b14],edx
  4153e1:	add    al,0x6b
  4153e3:	pop    ebx
  4153e4:	ret    
  4153e5:	leave  
  4153e6:	mov    esp,0xf7a548bb
  4153eb:	out    dx,eax
  4153ec:	mov    esi,DWORD PTR [ecx]
  4153ee:	dec    eax
  4153ef:	nop
  4153f0:	inc    ebp
  4153f1:	mov    dl,cl
  4153f3:	sbb    ecx,ebp
  4153f5:	aam    0xa4
  4153f7:	sbb    DWORD PTR [eax],edx
  4153f9:	jmp    0x41544b
  4153fb:	mov    eax,ds:0x258c92
  415400:	jmp    0xa00:0xd4bcdd65
  415407:	pop    eax
  415408:	inc    edi
  415409:	(bad)  
  41540a:	test   BYTE PTR [esi-0x4d],al
  41540d:	(bad)  
  41540e:	int3   
  41540f:	aaa    
  415410:	jle    0x415479
  415412:	jp     0x4153f2
  415414:	mov    BYTE PTR [edx+ebx*2],bh
  415417:	pop    eax
  415418:	(bad)  
  415419:	xchg   ecx,eax
  41541a:	push   0xa8be41bb
  41541f:	(bad)  
  415420:	(bad)  
  415421:	test   cl,0x7
  415424:	enter  0x7323,0xb3
  415428:	mov    ah,0x0
  41542a:	lods   eax,DWORD PTR ds:[esi]
  41542b:	xchg   edi,eax
  41542c:	call   0xd396:0xd04b5c4
  415433:	pop    ebx
  415434:	add    DWORD PTR [edx],ebp
  415436:	fnstcw WORD PTR ds:0xcfd5d62d
  41543c:	fcom   QWORD PTR [esi+0x7a4bd93b]
  415442:	sub    esp,DWORD PTR [ebx-0x7a]
  415445:	test   BYTE PTR [edi+0x105d1639],ah
  41544b:	adc    DWORD PTR [ecx-0x430aa246],edi
  415451:	inc    eax
  415452:	mov    WORD PTR [eax+0x1b],?
  415455:	dec    edx
  415456:	inc    esp
  415457:	pop    ss
  415458:	sub    DWORD PTR [edx+0x14],esp
  41545b:	cmp    eax,DWORD PTR [ebx]
  41545d:	arpl   WORD PTR [eax],cx
  41545f:	test   edx,eax
  415461:	inc    edi
  415462:	jo     0x41543f
  415464:	and    al,0xeb
  415466:	xor    al,0x99
  415468:	and    edx,DWORD PTR [edi+0x218aa0d0]
  41546e:	jnp    0x41542e
  415470:	add    BYTE PTR [eax+0x4dad8637],dh
  415476:	addr16 xor eax,0xb52a4446
  41547c:	push   0x47
  41547e:	cwde   
  41547f:	or     DWORD PTR [ebx-0x43],edi
  415482:	pushf  
  415483:	fsub   st(1),st
  415485:	and    esp,edx
  415487:	js     0x4154db
  415489:	js     0x4154a3
  41548b:	inc    ebx
  41548c:	cwde   
  41548d:	test   eax,0xd4517fd0
  415492:	sti    
  415493:	fmul   st(2),st
  415495:	xchg   ebp,eax
  415496:	dec    ebx
  415497:	cli    
  415498:	sub    BYTE PTR [edx],cl
  41549a:	ror    BYTE PTR [eax+0x1bcb62d3],cl
  4154a0:	icebp  
  4154a1:	jmp    0x4154a1
  4154a3:	cs sbb al,0xee
  4154a6:	(bad)  
  4154a7:	pop    ds
  4154a8:	mov    dh,BYTE PTR [eax-0x35c86693]
  4154ae:	add    DWORD PTR [ebx-0x6a530949],ebp
  4154b4:	jp     0x4154d1
  4154b6:	mov    esp,0x70692c86
  4154bb:	and    BYTE PTR [esi-0x17577067],0x15
  4154c2:	cmp    al,BYTE PTR [ebp-0x53e65045]
  4154c8:	dec    ebx
  4154c9:	mov    al,BYTE PTR [eax+eiz*1-0x60]
  4154cd:	jge    0x4154a9
  4154cf:	sbb    al,0xf8
  4154d1:	sub    eax,0xf15dca40
  4154d6:	gs addr16 sti 
  4154d9:	fmul   DWORD PTR [eax+0x71c95f8b]
  4154df:	call   0x70f319b3
  4154e4:	repz scas eax,DWORD PTR es:[edi]
  4154e6:	pop    ecx
  4154e7:	jb     0x4154e2
  4154e9:	out    dx,eax
  4154ea:	xchg   edx,eax
  4154eb:	mov    esi,0x923fb068
  4154f0:	ins    BYTE PTR es:[edi],dx
  4154f1:	(bad)  
  4154f2:	xchg   esi,eax
  4154f3:	(bad)  
  4154f4:	out    0xe6,eax
  4154f6:	push   es
  4154f7:	jmp    0xcab77897
  4154fc:	push   ecx
  4154fd:	dec    eax
  4154fe:	test   eax,0xb69613a5
  415503:	adc    eax,0x93878e01
  415508:	add    dl,BYTE PTR [ebp+0x45]
  41550b:	sbb    BYTE PTR [ebx-0x76],dl
  41550e:	inc    esi
  41550f:	aaa    
  415510:	nop
  415511:	iret   
  415512:	sub    ecx,eax
  415514:	ror    BYTE PTR [ebp-0x3c5052f1],0x86
  41551b:	mov    dh,0xea
  41551d:	jo     0x4154cb
  41551f:	(bad)  
  415521:	mov    WORD PTR [ecx-0x6b9add3f],cs
  415527:	enter  0xdd50,0x8c
  41552b:	adc    BYTE PTR [ecx-0x2a],ah
  41552e:	adc    eax,0xe1bf2277
  415533:	xchg   ebp,eax
  415534:	mov    edx,0xa3d0d949
  415539:	jne    0x4154bd
  41553b:	fs mov ebx,0x35da2de3
  415542:	xor    bh,BYTE PTR [eax+0x7e]
  415545:	xchg   ebx,eax
  415546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415547:	enter  0xb74d,0xf9
  41554b:	out    dx,al
  41554c:	aad    0xaa
  41554e:	jle    0x4154da
  415550:	and    DWORD PTR [edi+ebp*4+0x3d],ebx
  415554:	shr    BYTE PTR [edi-0x25],0xe2
  415558:	pop    ecx
  415559:	inc    edi
  41555a:	mov    edx,0xc2f51c6f
  41555f:	xor    eax,0xeea6e58d
  415564:	test   DWORD PTR ds:0x37ae4f31,ebx
  41556a:	es add al,0xa7
  41556d:	cmp    eax,0xc9b3f65
  415572:	call   0xf76d8279
  415577:	call   FWORD PTR [eax-0x179ed12]
  41557d:	push   ebp
  41557e:	adc    dl,BYTE PTR [ecx+0x21c5759d]
  415584:	mov    DWORD PTR ds:0xade223a1,esp
  41558a:	cmp    al,0x78
  41558c:	add    ch,BYTE PTR [ebp-0x30]
  41558f:	inc    eax
  415590:	push   ebp
  415591:	push   ds
  415592:	cmc    
  415593:	fwait
  415594:	rol    BYTE PTR ds:0x64aed8ee,0x17
  41559b:	mov    bl,0x63
  41559d:	add    dh,BYTE PTR [ecx+edi*4-0x3ca1703a]
  4155a4:	sti    
  4155a5:	xchg   esp,eax
  4155a6:	sub    cl,bh
  4155a8:	mov    ecx,0xee8a659
  4155ad:	dec    esi
  4155ae:	popa   
  4155af:	cmp    BYTE PTR [edx-0x7c4eec05],bl
  4155b5:	jle    0x41554d
  4155b7:	(bad)  
  4155b8:	fs (bad) 
  4155ba:	loop   0x415610
  4155bc:	ret    
  4155bd:	in     al,0x82
  4155bf:	sahf   
  4155c0:	aam    0x31
  4155c2:	or     BYTE PTR [ebx],dh
  4155c4:	pop    esi
  4155c5:	adc    dh,dh
  4155c7:	mov    ecx,0x1ee9998f
  4155cc:	and    edx,DWORD PTR [edx]
  4155ce:	imul   esp,DWORD PTR [bx+di],0x9434d420
  4155d5:	or     BYTE PTR [ecx+0x4bcc96d1],bl
  4155db:	cmpxchg edi,ecx
  4155de:	mov    bh,0x3e
  4155e0:	in     eax,0x7c
  4155e2:	test   DWORD PTR [ecx+ebp*8-0x60],ebp
  4155e6:	fst    QWORD PTR [esi-0x2c]
  4155e9:	sub    al,0x87
  4155eb:	xchg   BYTE PTR [eax-0x4caff45],bl
  4155f1:	test   eax,0x83fab28c
  4155f6:	pusha  
  4155f7:	mov    bh,BYTE PTR [edx-0x40f4ae21]
  4155fd:	sbb    DWORD PTR [ecx],0x66
  415600:	xchg   ebp,eax
  415601:	sahf   
  415602:	mov    eax,ds:0xcc4ebb98
  415607:	stc    
  415608:	cmp    al,0xa6
  41560a:	jno    0x4155c7
  41560c:	jecxz  0x41565a
  41560e:	inc    ecx
  41560f:	xchg   edx,eax
  415610:	inc    edx
  415611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415612:	ss or  eax,0x3c33627
  415618:	ins    BYTE PTR es:[edi],dx
  415619:	inc    esp
  41561a:	and    bh,BYTE PTR [esi]
  41561c:	(bad)  
  41561d:	cmc    
  41561e:	(bad)  
  41561f:	dec    esp
  415620:	push   edi
  415621:	ins    BYTE PTR es:[edi],dx
  415622:	sar    BYTE PTR [esi],0x2f
  415625:	inc    ecx
  415626:	fild   QWORD PTR [edx+0x57]
  415629:	pop    es
  41562a:	xor    BYTE PTR [ebx+0x65],al
  41562d:	pop    ds
  41562e:	add    al,0x4e
  415630:	push   ecx
  415631:	in     eax,0xe2
  415633:	sbb    esp,DWORD PTR [esi]
  415635:	in     al,dx
  415636:	mov    edi,0x58fab3ef
  41563b:	in     eax,dx
  41563c:	pop    ebx
  41563d:	mov    dl,bl
  41563f:	test   ecx,0x5235c931
  415645:	test   edi,edx
  415647:	test   DWORD PTR [ecx],edi
  415649:	pop    DWORD PTR [ecx-0x52e57188]
  41564f:	jge    0x415657
  415651:	pop    ebx
  415652:	cli    
  415653:	cli    
  415654:	test   DWORD PTR [eax+0x4cce31c0],eax
  41565a:	pop    edx
  41565b:	jae    0x415692
  41565d:	int3   
  41565e:	ds xchg edx,eax
  415660:	or     al,0x58
  415662:	cwde   
  415663:	cmp    dl,cl
  415665:	inc    esi
  415666:	jnp    0x415679
  415668:	cmp    eax,0xc07fef31
  41566d:	cmp    BYTE PTR [esi],dh
  41566f:	inc    edx
  415670:	data16 xor al,bh
  415673:	mov    bh,0xd2
  415675:	repz scas eax,DWORD PTR es:[edi]
  415677:	adc    BYTE PTR [eax],bh
  415679:	pop    ebx
  41567a:	(bad)  
  41567b:	xlat   BYTE PTR ds:[ebx]
  41567c:	in     al,dx
  41567d:	ret    0x7bd4
  415680:	fmul   st(2),st
  415682:	shl    DWORD PTR [ecx+edx*2-0x5],1
  415686:	xor    eax,0xce8730b7
  41568b:	aas    
  41568c:	or     edi,ebp
  41568e:	imul   DWORD PTR ds:0x78ebffbc
  415694:	inc    ebp
  415695:	retf   0xea43
  415698:	xchg   ecx,eax
  415699:	imul   ebx,DWORD PTR [eax+edi*2],0x523ef506
  4156a0:	and    DWORD PTR [eax-0x6bbdcc5c],ecx
  4156a6:	call   0x1d8c430e
  4156ab:	sub    al,0x4e
  4156ad:	dec    esp
  4156ae:	fiadd  WORD PTR [esi-0x7e]
  4156b1:	pop    ebp
  4156b2:	retf   
  4156b3:	lds    ebp,FWORD PTR [edi+0xcc66ac3]
  4156b9:	add    ebp,ecx
  4156bb:	sti    
  4156bc:	pop    edx
  4156bd:	and    bh,ah
  4156bf:	mov    bp,0x6fb2
  4156c3:	stos   BYTE PTR es:[edi],al
  4156c4:	xor    BYTE PTR [esi-0xd],al
  4156c7:	je     0x415735
  4156c9:	mov    esi,0x363f934b
  4156ce:	test   ah,bh
  4156d0:	xchg   BYTE PTR [edx+0x6f],cl
  4156d3:	xchg   esp,eax
  4156d4:	jnp    0x4156f8
  4156d6:	mov    al,ds:0xb443b451
  4156db:	xor    esi,eax
  4156dd:	test   al,0x40
  4156df:	sbb    ebp,DWORD PTR [eax+edi*1]
  4156e2:	leave  
  4156e3:	rcl    bl,cl
  4156e5:	mov    bl,0x59
  4156e7:	adc    ch,al
  4156e9:	(bad)  
  4156ea:	mov    ebp,0x692ae089
  4156ef:	fwait
  4156f0:	fwait
  4156f1:	stos   DWORD PTR es:[edi],eax
  4156f2:	sar    cl,1
  4156f4:	ja     0x415740
  4156f6:	out    dx,eax
  4156f7:	inc    esi
  4156f8:	(bad)
  4156fb:	mov    edi,0xb0f20db5
  415700:	jnp    0x41571a
  415702:	das    
  415703:	cmp    al,0xa1
  415705:	ins    BYTE PTR es:[edi],dx
  415706:	fistp  DWORD PTR [edi+0x70133fd8]
  41570c:	(bad)  [edx]
  41570e:	call   0xf9895dde
  415713:	int3   
  415714:	mov    ah,0x78
  415716:	cmp    al,0xd0
  415718:	mov    edx,0x1056f030
  41571d:	xor    bh,BYTE PTR [edi]
  41571f:	fstp   DWORD PTR [ebp+0x5ac3624d]
  415725:	jnp    0x4156b0
  415727:	clc    
  415728:	sbb    cl,BYTE PTR [esi+0x7bb3196f]
  41572e:	pop    ss
  41572f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415730:	inc    esp
  415731:	inc    ebp
  415732:	mov    eax,0x70cef130
  415737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415738:	cmp    eax,DWORD PTR [ecx]
  41573a:	out    0xe4,al
  41573c:	lea    edi,[esi-0x39a5f474]
  415742:	das    
  415743:	pop    es
  415744:	(bad)  
  415745:	adc    dl,BYTE PTR [ecx+ebx*2-0x1790b0b4]
  41574c:	push   eax
  41574d:	in     eax,0x29
  41574f:	adc    ecx,ecx
  415751:	outs   dx,DWORD PTR ds:[esi]
  415752:	sar    dl,1
  415754:	jge    0x41570f
  415756:	pop    edx
  415757:	idiv   ebp
  415759:	add    eax,0xb3ccf56f
  41575e:	(bad)
  415761:	clc    
  415762:	dec    eax
  415763:	dec    ecx
  415764:	retf   
  415765:	mov    eax,ds:0xb0cfab64
  41576a:	dec    ebp
  41576b:	xor    edi,ebx
  41576d:	maxps  xmm5,XMMWORD PTR [ecx+0x764b31fa]
  415774:	aas    
  415775:	or     al,0xba
  415777:	nop
  415778:	mov    bl,0xa1
  41577a:	xor    dh,bh
  41577c:	idiv   BYTE PTR [ecx]
  41577e:	inc    ecx
  41577f:	dec    eax
  415780:	sbb    ebp,DWORD PTR [edx-0x5f0b040e]
  415786:	and    ah,cl
  415788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415789:	fcom   DWORD PTR [ecx]
  41578b:	push   ds
  41578c:	stos   BYTE PTR es:[edi],al
  41578d:	int3   
  41578e:	pop    ecx
  41578f:	mov    al,ds:0x7c653204
  415794:	gs mul ch
  415797:	pusha  
  415798:	cwde   
  415799:	sbb    al,0x95
  41579b:	or     al,BYTE PTR ds:[esi-0x7680f01]
  4157a2:	dec    edx
  4157a3:	addr16 sbb edi,ebp
  4157a6:	pop    edi
  4157a7:	aad    0xdc
  4157a9:	sub    eax,DWORD PTR [eax]
  4157ab:	stos   DWORD PTR es:[edi],eax
  4157ac:	mov    bl,0xea
  4157ae:	add    DWORD PTR [edi+eiz*8],ebp
  4157b1:	sbb    eax,0x88dbd93e
  4157b6:	pusha  
  4157b7:	cmp    BYTE PTR [edi],bl
  4157b9:	jg     0x41577a
  4157bb:	ror    DWORD PTR [ecx],0x5a
  4157be:	outs   dx,BYTE PTR ds:[esi]
  4157bf:	mov    edi,0xa0155c00
  4157c4:	arpl   WORD PTR [ecx-0x70],si
  4157c7:	outs   dx,DWORD PTR ds:[esi]
  4157c8:	xor    eax,DWORD PTR [ecx+0x67]
  4157cb:	mov    edi,0x91739cc7
  4157d0:	adc    DWORD PTR [ebx],ecx
  4157d2:	mov    ebx,0x65e0620b
  4157d7:	pop    es
  4157d8:	int3   
  4157d9:	test   BYTE PTR [ebx],bl
  4157db:	sub    eax,0x738712d1
  4157e0:	neg    BYTE PTR [ecx+0x6fdfaab4]
  4157e6:	ss sti 
  4157e8:	dec    ebx
  4157e9:	dec    esp
  4157ea:	dec    edx
  4157eb:	fs rcr edi,1
  4157ee:	or     ecx,DWORD PTR ds:0xf5f96d93
  4157f4:	sub    BYTE PTR [eax+0x47cd539],al
  4157fa:	and    al,0x9b
  4157fc:	inc    eax
  4157fd:	sub    dl,BYTE PTR [eax+0x36]
  415800:	jne    0x415828
  415802:	pop    ecx
  415803:	daa    
  415804:	cld    
  415805:	ss dec edx
  415807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415808:	or     al,0xc1
  41580a:	xchg   edi,eax
  41580b:	mov    ch,0x83
  41580d:	fs pop ss
  41580f:	retf   
  415810:	std    
  415811:	outs   dx,DWORD PTR ds:[esi]
  415812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415813:	clc    
  415814:	mov    cl,0x7b
  415816:	cmc    
  415817:	and    al,dh
  415819:	dec    esi
  41581a:	rol    DWORD PTR [ebp+0x19801411],1
  415820:	and    BYTE PTR [eax],bh
  415822:	outs   dx,DWORD PTR ds:[esi]
  415823:	push   ds
  415824:	dec    eax
  415825:	iret   
  415826:	lock jb 0x4157cd
  415829:	jmp    0xc69941a3
  41582e:	pop    es
  41582f:	pop    DWORD PTR [eax+0x7a]
  415832:	aas    
  415833:	jne    0x4157c4
  415835:	loope  0x4157bf
  415837:	xor    esp,DWORD PTR [edi]
  415839:	dec    ebx
  41583a:	sub    BYTE PTR [edx],bl
  41583c:	test   ecx,ebx
  41583e:	popw   ds
  415840:	inc    eax
  415841:	lods   eax,DWORD PTR ds:[esi]
  415842:	pop    ecx
  415843:	ffree  st(4)
  415845:	dec    edi
  415846:	es dec ebx
  415848:	push   ebp
  415849:	es pop edi
  41584b:	into   
  41584c:	inc    ebp
  41584d:	int    0xd1
  41584f:	div    BYTE PTR [esp+ebp*1-0x7883d8f]
  415856:	mov    ecx,0xc99d2df1
  41585b:	stos   DWORD PTR es:[edi],eax
  41585c:	add    dh,BYTE PTR [edx+eax*8+0x67472220]
  415863:	lds    ebx,FWORD PTR [eax+0x5f]
  415866:	inc    edi
  415867:	jno    0x4158cc
  415869:	div    BYTE PTR [edi]
  41586b:	loop   0x415831
  41586d:	or     DWORD PTR [esi-0x371ab620],edx
  415873:	inc    esi
  415874:	lahf   
  415875:	push   esp
  415876:	loopne 0x4158b6
  415878:	lahf   
  415879:	add    DWORD PTR [edx-0x5193477b],0xe5411dae
  415883:	ficomp WORD PTR [edi]
  415885:	cwde   
  415886:	mov    dl,0x50
  415888:	adc    al,0xa5
  41588a:	sub    edi,eax
  41588c:	mov    edx,0x93baf2f2
  415891:	pop    ecx
  415892:	ss es push cs
  415895:	pop    ecx
  415896:	xchg   edi,eax
  415897:	mov    eax,ds:0x7868e90d
  41589c:	(bad)  
  41589d:	out    0xe4,al
  41589f:	enter  0x156,0xb2
  4158a3:	fsqrt  
  4158a5:	jg     0x415900
  4158a7:	add    eax,0x958cccd6
  4158ac:	fsubr  DWORD PTR [edx+0x7f69ba8d]
  4158b2:	mov    ah,0xbf
  4158b4:	jl     0x41590a
  4158b6:	in     al,dx
  4158b7:	dec    esi
  4158b8:	call   FWORD PTR ss:[edx]
  4158bb:	pop    eax
  4158bc:	and    al,0xeb
  4158be:	fwait
  4158bf:	mov    esi,0xc2fcf42e
  4158c4:	repz mov ebx,0x655cd11b
  4158ca:	retf   
  4158cb:	push   ss
  4158cc:	lods   al,BYTE PTR ds:[esi]
  4158cd:	xchg   DWORD PTR [edx],ecx
  4158cf:	adc    DWORD PTR [esi-0x6d063bd],eax
  4158d5:	push   ebx
  4158d6:	fmul   DWORD PTR [edx+0x35e613f7]
  4158dc:	mov    WORD PTR [esi+0x2d21b53a],ss
  4158e2:	cmp    ah,ch
  4158e4:	adc    BYTE PTR [edi+0x76],bh
  4158e7:	sub    BYTE PTR [edi-0x545e7d24],ah
  4158ed:	lea    edi,[ebp-0x57423826]
  4158f3:	pop    eax
  4158f4:	std    
  4158f5:	retf   0xfb61
  4158f8:	xor    eax,0xf3b68536
  4158fd:	cld    
  4158fe:	sub    cl,BYTE PTR ds:0x38322cca
  415904:	and    al,0x73
  415906:	adc    al,0xd8
  415908:	stc    
  415909:	or     DWORD PTR [edi],ebx
  41590b:	mov    bh,0xa5
  41590d:	mov    ds:0x17b65911,eax
  415912:	pop    edi
  415913:	mov    edi,0x92f1d353
  415918:	in     al,0x5b
  41591a:	std    
  41591b:	sub    BYTE PTR [edi+0x7a78aaa6],0xfa
  415922:	or     cl,BYTE PTR [ebx]
  415924:	push   edi
  415925:	daa    
  415926:	sub    al,0x19
  415928:	add    BYTE PTR [di+0x65],ah
  41592c:	add    eax,0x393cd774
  415931:	outs   dx,BYTE PTR ds:[esi]
  415932:	pusha  
  415933:	push   ds
  415934:	retf   
  415935:	pop    ebp
  415936:	push   eax
  415937:	fcomp  QWORD PTR [ebp-0x25]
  41593a:	mov    dh,0xb5
  41593c:	out    dx,eax
  41593d:	or     eax,0xaff58761
  415942:	or     DWORD PTR ds:0x14bb9b4c,esp
  415948:	jecxz  0x4158f7
  41594a:	mov    esp,0x78a250e3
  41594f:	les    ecx,FWORD PTR [esi+ebp*1+0x31d500b3]
  415956:	(bad)  
  415957:	pop    edi
  415958:	xor    al,0x6d
  41595a:	out    0x97,al
  41595c:	push   es
  41595d:	(bad)  
  41595e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41595f:	aad    0xcf
  415961:	push   ebx
  415962:	jae    0x41593c
  415964:	fadd   st,st(3)
  415966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415967:	mov    ds:0x1cbd1853,eax
  41596c:	push   ecx
  41596d:	push   edi
  41596e:	jno    0x4159b6
  415970:	adc    eax,0x801b0cb0
  415975:	inc    edi
  415976:	jge    0x4159ac
  415978:	(bad)  
  415979:	pop    ecx
  41597a:	jbe    0x415940
  41597c:	jl     0x41593b
  41597e:	mov    al,0xbd
  415980:	neg    bl
  415982:	dec    esi
  415983:	dec    eax
  415984:	mov    bl,0x9a
  415986:	or     BYTE PTR [ebp-0x5d],cl
  415989:	ins    DWORD PTR es:[edi],dx
  41598a:	cld    
  41598b:	arpl   WORD PTR [edx],cx
  41598d:	jmp    FWORD PTR [esi+0x6f93f162]
  415993:	xor    BYTE PTR [ebx-0x74],dh
  415996:	inc    esp
  415997:	bound  ebp,QWORD PTR [ebx-0x4e4436a8]
  41599d:	sub    BYTE PTR [eax],ch
  41599f:	fwait
  4159a0:	out    dx,al
  4159a1:	jmp    0x5a3954c7
  4159a6:	cli    
  4159a7:	push   ds
  4159a8:	ret    
  4159a9:	sti    
  4159aa:	cs mov esi,0x57ddedaa
  4159b0:	mov    eax,0x27b99194
  4159b5:	fist   DWORD PTR [esi-0x3deac82b]
  4159bb:	out    dx,al
  4159bc:	mov    dh,0xd0
  4159be:	cmp    eax,0x34fc35ed
  4159c3:	cs sbb bl,dl
  4159c6:	sbb    bh,ch
  4159c8:	stc    
  4159c9:	inc    edi
  4159ca:	mov    ds:0xb575c89,al
  4159cf:	dec    edi
  4159d0:	jmp    0x34539fa1
  4159d5:	mov    edx,DWORD PTR [esp+ecx*2]
  4159d8:	cmp    al,0x17
  4159da:	jmp    0x3dceb07c
  4159df:	push   0xde88c597
  4159e4:	cmc    
  4159e5:	test   al,0x71
  4159e7:	sub    DWORD PTR [esi],ebp
  4159e9:	popf   
  4159ea:	out    0x40,al
  4159ec:	(bad)  
  4159ed:	(bad)  
  4159ee:	fld    TBYTE PTR [eax+0x3b525311]
  4159f4:	sub    eax,0x333752a8
  4159f9:	dec    ebp
  4159fa:	aad    0x79
  4159fc:	retf   0x70bc
  4159ff:	adc    BYTE PTR [ebx-0x52],0xb7
  415a03:	ret    
  415a04:	hlt    
  415a05:	dec    eax
  415a06:	pop    esp
  415a07:	int    0x2
  415a09:	adc    esi,edi
  415a0b:	xchg   esi,eax
  415a0c:	mov    eax,ds:0x768a6456
  415a11:	dec    esi
  415a12:	or     ebx,edi
  415a14:	sti    
  415a15:	push   eax
  415a16:	cmp    BYTE PTR [edi+eiz*4-0x73],0x30
  415a1b:	adc    cl,ah
  415a1d:	push   eax
  415a1e:	sub    DWORD PTR [ebx+0x7b74dfcf],eax
  415a24:	jns    0x415a79
  415a26:	in     al,0x9e
  415a28:	sub    al,0x76
  415a2a:	jb     0x4159bf
  415a2c:	sbb    al,0x2c
  415a2e:	test   DWORD PTR [ebx+ebx*1],eax
  415a31:	jmp    0x5e92:0xdff66c95
  415a38:	(bad)  
  415a39:	cld    
  415a3a:	dec    ebx
  415a3b:	bound  ecx,QWORD PTR [edi]
  415a3d:	push   edi
  415a3e:	ds data16 loope 0x415a14
  415a42:	push   gs
  415a44:	mov    bh,dl
  415a46:	aaa    
  415a47:	inc    edx
  415a48:	enter  0xd0c8,0x8c
  415a4c:	pushf  
  415a4d:	arpl   WORD PTR [eax+0x7b2b4e86],si
  415a53:	ret    
  415a54:	push   esi
  415a55:	rcl    BYTE PTR [ebx+0x14e7282d],0xf8
  415a5c:	(bad)  
  415a5d:	popf   
  415a5e:	fdivr  st,st(3)
  415a60:	dec    ebp
  415a61:	cld    
  415a62:	jne    0x415a63
  415a64:	mov    ds:0x45d3487e,al
  415a69:	push   esp
  415a6a:	outs   dx,BYTE PTR ds:[esi]
  415a6b:	jl     0x415ac9
  415a6d:	cwde   
  415a6e:	pop    ss
  415a6f:	imul   ebx,DWORD PTR [ecx-0x70],0x296c8c83
  415a76:	push   eax
  415a77:	push   edx
  415a78:	jg     0x415a5a
  415a7a:	inc    ebx
  415a7b:	in     al,dx
  415a7c:	xchg   esp,eax
  415a7d:	pop    es
  415a7e:	jb     0x415a57
  415a80:	mov    BYTE PTR [ecx+0x2d],al
  415a83:	push   ds
  415a84:	lods   al,BYTE PTR ds:[esi]
  415a85:	ins    BYTE PTR es:[edi],dx
  415a86:	xchg   edi,eax
  415a87:	lds    ebp,FWORD PTR [eax+0x5bd6a23f]
  415a8d:	popa   
  415a8e:	mov    eax,ds:0x49ad1c6
  415a93:	cs (bad) 
  415a95:	js     0x415a69
  415a97:	push   esp
  415a98:	movntps XMMWORD PTR [edx-0x4c],xmm2
  415a9c:	sub    ah,BYTE PTR [eax-0x6bf61bc9]
  415aa2:	sbb    eax,0x26f57bbe
  415aa7:	out    dx,al
  415aa8:	mov    ds:0x2bdcb118,eax
  415aad:	rcl    BYTE PTR [eax],1
  415aaf:	jmp    0x415ad0
  415ab1:	mov    dh,0x35
  415ab3:	das    
  415ab4:	add    DWORD PTR [ebx+ecx*8],esi
  415ab7:	ret    
  415ab8:	inc    edx
  415ab9:	ja     0x415a8e
  415abb:	fld    st(3)
  415abd:	mov    ebx,0x14c6648e
  415ac2:	cdq    
  415ac3:	int    0x42
  415ac5:	sbb    eax,0x76d7b978
  415aca:	loope  0x415a5a
  415acc:	int3   
  415acd:	xor    DWORD PTR [ebx-0x1b],edi
  415ad0:	pop    ecx
  415ad1:	mov    dl,0xdf
  415ad3:	add    BYTE PTR [eax+ecx*1+0x7b],0xa3
  415ad8:	iret   
  415ad9:	sbb    DWORD PTR [edx-0x1a],edx
  415adc:	xchg   DWORD PTR [eax+edi*1+0x3c],esi
  415ae0:	sub    eax,DWORD PTR [ebp-0x21]
  415ae3:	cmp    DWORD PTR [esi-0x2b],ecx
  415ae6:	nop/reserved BYTE PTR [eax+0x7e]
  415aea:	loop   0x415b20
  415aec:	in     eax,dx
  415aed:	add    edi,DWORD PTR [esi]
  415aef:	and    BYTE PTR [esi+0x15],bl
  415af2:	das    
  415af3:	inc    ecx
  415af4:	xchg   edi,eax
  415af5:	sbb    cl,BYTE PTR [ebx-0xf]
  415af8:	pusha  
  415af9:	jnp    0x415a89
  415afb:	mov    edi,0x20b256c2
  415b00:	cmp    eax,0x8572c9a1
  415b05:	push   ebx
  415b06:	lds    edi,FWORD PTR [esi+0x4fbf1714]
  415b0c:	lods   eax,DWORD PTR ds:[esi]
  415b0d:	adc    al,0xe9
  415b0f:	dec    edi
  415b10:	inc    ecx
  415b11:	mov    BYTE PTR [ebp+eax*2-0x15],dl
  415b15:	mov    ebx,0x4d7df9f1
  415b1a:	jp     0x415b5c
  415b1c:	rcl    esp,cl
  415b1e:	jecxz  0x415b38
  415b20:	adc    DWORD PTR [ecx+0x6b],eax
  415b23:	xchg   esp,eax
  415b24:	clc    
  415b25:	sub    DWORD PTR [ecx-0x5b],edx
  415b28:	cmp    DWORD PTR [ecx+0x613e00a4],ecx
  415b2e:	mov    ds:0x795a9526,al
  415b33:	mov    al,0x3a
  415b35:	shr    DWORD PTR [ebx],cl
  415b37:	jl     0x415b92
  415b39:	inc    esp
  415b3a:	leave  
  415b3b:	retf   0xb944
  415b3e:	xchg   ebp,ecx
  415b40:	mov    bh,0xd2
  415b42:	call   0xc1aa417d
  415b47:	inc    ebp
  415b48:	push   ebx
  415b49:	mov    ds:0x55c850f0,al
  415b4e:	cmp    DWORD PTR [eax-0x4e],edi
  415b51:	mov    ebp,DWORD PTR [ecx-0x7f]
  415b54:	inc    esp
  415b55:	adc    eax,0xc9d2beb1
  415b5a:	fst    DWORD PTR [ebp+eax*1-0x74ecc8a3]
  415b61:	jns    0x415b55
  415b63:	fdiv   DWORD PTR [ebx]
  415b65:	sbb    BYTE PTR [edi],ch
  415b67:	call   0xdae95ee3
  415b6c:	add    eax,0xbdcb333f
  415b71:	retf   
  415b72:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b74:	jns    0x415b6e
  415b76:	add    BYTE PTR [esi],cl
  415b78:	icebp  
  415b79:	das    
  415b7a:	(bad)  
  415b7b:	(bad)  
  415b7c:	mov    esp,0x75b1e34f
  415b81:	dec    ebx
  415b82:	in     al,0x15
  415b84:	jae    0x415c00
  415b86:	push   esp
  415b87:	mov    ah,0x71
  415b89:	call   0x146f:0x9ae4de83
  415b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b91:	and    bl,ah
  415b93:	jbe    0x415bb2
  415b95:	push   edi
  415b96:	dec    esp
  415b97:	jmp    0x1321:0x606a8750
  415b9e:	shl    eax,0xb2
  415ba1:	cmp    al,0xcb
  415ba3:	test   DWORD PTR [ecx-0x23],ecx
  415ba6:	sbb    eax,0xf5594295
  415bab:	fidiv  DWORD PTR [ecx]
  415bad:	loopne 0x415b57
  415baf:	mov    ds,esp
  415bb1:	jb     0x415c03
  415bb3:	add    eax,DWORD PTR [ecx-0x50]
  415bb6:	stc    
  415bb7:	popf   
  415bb8:	das    
  415bb9:	neg    BYTE PTR [ebx-0x73]
  415bbc:	cmp    al,0x4a
  415bbe:	cwde   
  415bbf:	inc    eax
  415bc0:	fdivrp st(0),st
  415bc2:	jb     0x415b67
  415bc4:	clc    
  415bc5:	enter  0x2be3,0x62
  415bc9:	xor    ebp,ebp
  415bcb:	out    dx,al
  415bcc:	mov    eax,ds:0x6231f1c3
  415bd1:	push   0xffffffd7
  415bd3:	add    al,0x48
  415bd5:	push   esi
  415bd6:	and    eax,0x88dc8088
  415bdb:	pusha  
  415bdc:	es ins BYTE PTR es:[edi],dx
  415bde:	adc    al,0xa6
  415be0:	mov    al,0x47
  415be2:	mov    dh,0x77
  415be4:	and    edx,DWORD PTR [ebp+edi*8+0x6aac0c96]
  415beb:	push   ds
  415bec:	mov    ecx,0xadc63296
  415bf1:	push   es
  415bf2:	or     al,0x48
  415bf4:	std    
  415bf5:	popa   
  415bf6:	inc    edx
  415bf7:	push   es
  415bf8:	cmp    esp,DWORD PTR [ebx+0x7d]
  415bfb:	pusha  
  415bfc:	das    
  415bfd:	cmp    ebp,DWORD PTR [edx]
  415bff:	popa   
  415c00:	loop   0x415b84
  415c02:	pop    esi
  415c03:	jmp    0x415bfe
  415c05:	in     eax,dx
  415c06:	gs enter 0xeaaf,0x9a
  415c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c0c:	outs   dx,BYTE PTR ds:[esi]
  415c0d:	cmp    ebx,DWORD PTR [esi-0x23e746d1]
  415c13:	hlt    
  415c14:	repnz vunpcklps xmm3,xmm2,xmm2
  415c19:	dec    eax
  415c1a:	mov    edx,0xe5bdc1ca
  415c1f:	lods   eax,DWORD PTR ds:[esi]
  415c20:	sub    DWORD PTR [ebp-0x2],esi
  415c23:	xor    cl,BYTE PTR [eax+eiz*4-0x63]
  415c27:	pushf  
  415c28:	jecxz  0x415baf
  415c2a:	push   0x2a
  415c2c:	aaa    
  415c2d:	push   es
  415c2e:	ficom  DWORD PTR [ebp+0x399758bc]
  415c34:	(bad)  
  415c35:	add    dl,BYTE PTR [ebx+0x6b]
  415c38:	sub    BYTE PTR [ebx+0x7a5db988],ah
  415c3e:	out    0x91,eax
  415c40:	adc    BYTE PTR [ecx+0x3f5de1eb],al
  415c46:	shl    BYTE PTR [ebx-0x71a17777],0xae
  415c4d:	or     DWORD PTR [ebx+0x75],edx
  415c50:	mov    bh,0x9f
  415c52:	sub    ebx,ebp
  415c54:	jne    0x415c36
  415c56:	adc    al,0xe0
  415c58:	and    DWORD PTR ds:0xbd04f6f3,0xffffff96
  415c5f:	adc    DWORD PTR [ebx+0x6a12b7d1],ebx
  415c65:	arpl   WORD PTR [eax+0x3f],cx
  415c68:	add    eax,0xf652e4dc
  415c6d:	push   cs
  415c6e:	pop    eax
  415c6f:	fld    DWORD PTR [esi-0x1a]
  415c72:	ins    BYTE PTR es:[edi],dx
  415c73:	js     0x415cf4
  415c75:	in     al,0x73
  415c77:	clc    
  415c78:	xlat   BYTE PTR ds:[ebx]
  415c79:	mov    ds:0x1dc83b9,al
  415c7e:	pusha  
  415c7f:	or     BYTE PTR [edi],al
  415c81:	mov    ah,0xdf
  415c83:	push   esi
  415c84:	mov    BYTE PTR [ecx-0x10],0x9d
  415c88:	dec    esi
  415c89:	popf   
  415c8a:	outs   dx,BYTE PTR ds:[esi]
  415c8b:	in     eax,0xc3
  415c8d:	int3   
  415c8e:	pop    eax
  415c8f:	aad    0x21
  415c91:	xchg   edx,eax
  415c92:	fmul   DWORD PTR [ebx+ecx*1-0x1e]
  415c96:	loope  0x415c88
  415c98:	sbb    DWORD PTR [esi+ebp*4+0x56f01d86],0xffffffcb
  415ca0:	not    bh
  415ca2:	test   BYTE PTR [esi],bl
  415ca4:	loope  0x415c6f
  415ca6:	xchg   esp,eax
  415ca7:	mov    bh,0x5b
  415ca9:	leave  
  415caa:	dec    edi
  415cab:	imul   ecx,DWORD PTR [eax+0x2a],0x54
  415caf:	outs   dx,DWORD PTR ds:[esi]
  415cb0:	push   edx
  415cb1:	retf   
  415cb2:	mov    eax,ds:0x7a45effe
  415cb7:	sbb    al,0x93
  415cb9:	and    DWORD PTR [ecx+0x18],esp
  415cbc:	or     al,0x96
  415cbe:	xchg   edx,eax
  415cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cc0:	mov    edx,0xb79c40a8
  415cc5:	sbb    al,0xad
  415cc7:	push   0xb8a9836f
  415ccc:	cld    
  415ccd:	or     eax,0x54cddf17
  415cd2:	mov    eax,ds:0x30d39b6f
  415cd7:	imul   edx,DWORD PTR [eax+edx*8-0x751875c4],0xffffffea
  415cdf:	pop    ss
  415ce0:	sar    BYTE PTR [edx],0x8e
  415ce3:	mov    dh,BYTE PTR [edx-0x691c1588]
  415ce9:	pop    ecx
  415cea:	adc    DWORD PTR [eax+0x6bdf274d],esi
  415cf0:	and    al,0x7
  415cf2:	mov    WORD PTR [esi],ds
  415cf4:	mov    DWORD PTR [eax],esi
  415cf6:	mov    ch,BYTE PTR [ecx+ebp*8]
  415cf9:	shr    DWORD PTR [edi-0x61],0xfb
  415cfd:	shl    DWORD PTR [edx],0x2d
  415d00:	in     eax,0xb6
  415d02:	jg     0x415cb6
  415d04:	mov    esi,0x6032bf12
  415d09:	ret    
  415d0a:	pop    esi
  415d0b:	into   
  415d0c:	call   0xf0f5:0x8d6a4387
  415d13:	clc    
  415d14:	sub    ebp,DWORD PTR [ebp-0x47]
  415d17:	into   
  415d18:	mov    DWORD PTR ds:0xfe3f68d6,edi
  415d1e:	fisttp DWORD PTR [ecx]
  415d20:	fs mov eax,0xb5835933
  415d26:	mov    dh,BYTE PTR [ebx]
  415d28:	inc    edi
  415d29:	jbe    0x415d6a
  415d2b:	mov    ch,0x6a
  415d2d:	test   BYTE PTR [ebx+0x35],al
  415d30:	mov    al,0xc8
  415d32:	mov    esi,0x5c8c8960
  415d37:	add    eax,0xd4b7ba8d
  415d3c:	pop    ds
  415d3d:	jb     0x415d4b
  415d3f:	push   0x3bbddd3d
  415d44:	cdq    
  415d45:	mov    ebx,0x96c92f68
  415d4a:	hlt    
  415d4b:	and    edx,DWORD PTR ds:0xf159c426
  415d51:	leave  
  415d52:	xchg   BYTE PTR [ecx+0x4a7c76c6],bh
  415d58:	scas   eax,DWORD PTR es:[edi]
  415d59:	ror    DWORD PTR [edi-0x78],cl
  415d5c:	out    0x49,eax
  415d5e:	add    DWORD PTR [ecx-0x6baa24f4],ecx
  415d64:	(bad)  [edx]
  415d66:	jmp    0x4bf4:0x8a2d961
  415d6d:	jnp    0x415cfd
  415d6f:	xchg   BYTE PTR [ebp+0x528858a6],ch
  415d75:	sub    DWORD PTR [ebx-0x57],esi
  415d78:	xor    al,0xd1
  415d7a:	fidiv  WORD PTR [esi+edi*8]
  415d7d:	pavgb  mm4,QWORD PTR [ebp+0xa9b1c92]
  415d84:	lea    edi,[ecx]
  415d86:	test   al,0xb0
  415d88:	sbb    DWORD PTR [esi+0x48],0xffffff9d
  415d8c:	push   eax
  415d8d:	pop    es
  415d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d8f:	or     edx,edx
  415d91:	aad    0xff
  415d93:	fisub  DWORD PTR [ebp+0x47067b66]
  415d99:	(bad)  
  415d9a:	adc    DWORD PTR [edx+esi*4+0x1466f0b],eax
  415da1:	fnstsw WORD PTR [eax+ecx*4]
  415da4:	ror    DWORD PTR [ecx+ebp*2-0x5c],0x5c
  415da9:	or     ebp,ebx
  415dab:	xor    ah,BYTE PTR [eax+ecx*1]
  415dae:	stc    
  415daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db0:	pop    ecx
  415db1:	sub    eax,0x283bcdf6
  415db6:	push   0xa
  415db8:	je     0x415d4a
  415dba:	push   ebx
  415dbb:	mov    ds:0x8abe90b,al
  415dc0:	inc    ebp
  415dc1:	add    edx,DWORD PTR [ebp-0x61e4752e]
  415dc7:	jl     0x415e08
  415dc9:	xor    esi,DWORD PTR [eax+0x77]
  415dcc:	xchg   DWORD PTR [ebp+0x23],esi
  415dcf:	dec    edi
  415dd0:	mov    ebp,0x936ebd2
  415dd5:	xor    ebp,edx
  415dd7:	pusha  
  415dd8:	ss push ebp
  415dda:	xor    BYTE PTR [ebp+0x2],cl
  415ddd:	fsub   st(3),st
  415ddf:	xchg   ebx,eax
  415de0:	lds    ebp,FWORD PTR [ebx+eax*1+0x3b]
  415de4:	pusha  
  415de5:	inc    ebx
  415de6:	(bad)
  415de9:	mov    eax,ds:0xc145a65c
  415dee:	popa   
  415def:	jb     0x415e2c
  415df1:	lods   eax,DWORD PTR ds:[esi]
  415df2:	out    0x3d,eax
  415df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df5:	test   eax,0x703469c
  415dfa:	xlat   BYTE PTR ds:[ebx]
  415dfb:	jmp    0x415ddb
  415dfd:	xchg   edx,eax
  415dfe:	(bad)  
  415dff:	int3   
  415e00:	fldl2t 
  415e02:	idiv   BYTE PTR [edi]
  415e04:	jmp    0xaa1b958
  415e09:	sbb    al,0x60
  415e0b:	clc    
  415e0c:	xor    DWORD PTR [ebx-0x31f6346c],0x16
  415e13:	dec    esp
  415e14:	cwde   
  415e15:	jmp    0xe43df3fc
  415e1a:	mov    eax,ds:0x819483f4
  415e1f:	or     al,0x7
  415e21:	addr16 cs pusha 
  415e24:	push   eax
  415e25:	sbb    eax,0x35fd133f
  415e2a:	imul   eax,ecx,0x3c7e756e
  415e30:	dec    ecx
  415e31:	sbb    ecx,DWORD PTR [ecx]
  415e33:	ins    DWORD PTR es:[edi],dx
  415e34:	xchg   edi,eax
  415e35:	fidivr DWORD PTR [eax-0x6c]
  415e38:	cmc    
  415e39:	push   ebx
  415e3a:	mov    bh,0x71
  415e3c:	(bad)  [edi]
  415e3e:	ret    
  415e3f:	add    BYTE PTR [ecx*4+0x3a3779de],ah
  415e46:	test   eax,0x15a42a27
  415e4b:	pop    ds
  415e4c:	sub    eax,eax
  415e4e:	xlat   BYTE PTR ds:[ebx]
  415e4f:	inc    eax
  415e50:	cmp    BYTE PTR [edi],ah
  415e52:	(bad)  
  415e53:	in     eax,0xc3
  415e55:	ins    DWORD PTR es:[edi],dx
  415e56:	push   es
  415e57:	rol    BYTE PTR [edi+0x28],cl
  415e5a:	scas   eax,DWORD PTR es:[edi]
  415e5b:	leave  
  415e5c:	int    0xa5
  415e5e:	xchg   ebx,eax
  415e5f:	push   ss
  415e60:	mov    bh,0x3d
  415e62:	ret    0x2331
  415e65:	(bad)  
  415e66:	push   cs
  415e67:	pop    ebp
  415e68:	pop    es
  415e69:	and    esi,DWORD PTR [edi-0x2581b344]
  415e6f:	ret    0x87f2
  415e72:	dec    edx
  415e73:	cmp    eax,esp
  415e75:	mov    eax,ds:0x23e0df0f
  415e7a:	les    edx,FWORD PTR [edx+0x59242003]
  415e80:	pop    edx
  415e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e82:	add    eax,0xe72bea09
  415e87:	jno    0x415e0a
  415e89:	cmp    eax,0x2a111a48
  415e8e:	sbb    eax,0xe639d829
  415e93:	jo     0x415f08
  415e95:	inc    ebx
  415e96:	and    ebp,DWORD PTR [edi-0x358d902e]
  415e9c:	pop    edi
  415e9d:	mov    DWORD PTR [eax],0x534b0f0c
  415ea3:	mov    ch,0x8d
  415ea5:	jb     0x415ead
  415ea7:	sbb    al,0x18
  415ea9:	test   BYTE PTR [edx-0x4b],dl
  415eac:	and    eax,0xa374b64c
  415eb1:	rol    ebp,cl
  415eb3:	jmp    0x415eaa
  415eb5:	mov    dh,0x30
  415eb7:	mov    bl,0xb6
  415eb9:	or     DWORD PTR [edi+eax*1],0xffffff83
  415ebd:	cdq    
  415ebe:	and    DWORD PTR [ebx+0x15fb88a2],ecx
  415ec4:	mov    esi,0xdd620a51
  415ec9:	in     al,dx
  415eca:	pop    eax
  415ecb:	data16 (bad) 
  415ecd:	out    0x23,eax
  415ecf:	enter  0x4e24,0x33
  415ed3:	imul   ebp,DWORD PTR [esi+eiz*2],0x7d430fb7
  415eda:	jecxz  0x415e80
  415edc:	add    bl,BYTE PTR [edi]
  415ede:	or     ebp,ecx
  415ee0:	jp     0x415f59
  415ee2:	mov    al,0x9f
  415ee4:	cld    
  415ee5:	test   BYTE PTR [bp+0x311],0xd7
  415eeb:	push   edx
  415eec:	push   ss
  415eed:	jle    0x415eff
  415eef:	cmc    
  415ef0:	inc    ebp
  415ef1:	and    DWORD PTR [edi],edi
  415ef3:	fild   QWORD PTR [ebp+0x7076e312]
  415efa:	xchg   esi,eax
  415efb:	aaa    
  415efc:	f2xm1  
  415efe:	adc    al,0x1d
  415f00:	inc    edi
  415f01:	repnz lea edx,[ebx-0x2b]
  415f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f06:	mov    WORD PTR [edx-0x4f],es
  415f09:	adc    bl,BYTE PTR [edi]
  415f0b:	or     eax,0x1814ff5c
  415f10:	push   esi
  415f11:	mov    ds:0xcc35bd9e,eax
  415f16:	cmp    eax,0xdd9213a6
  415f1b:	push   edx
  415f1c:	hlt    
  415f1d:	mov    dh,0xd5
  415f1f:	adc    esi,edx
  415f21:	aad    0xd8
  415f23:	jae    0x415fa4
  415f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f26:	xchg   ebp,eax
  415f27:	loop   0x415f2b
  415f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f2a:	imul   eax,DWORD PTR [ebx+0x5a240c4],0x7bb729c
  415f34:	dec    esi
  415f35:	shl    BYTE PTR [esi],cl
  415f37:	push   edi
  415f38:	jno    0x415f75
  415f3a:	xchg   ebx,eax
  415f3b:	inc    esp
  415f3c:	cs iret 
  415f3e:	push   edx
  415f3f:	jno    0x415edd
  415f41:	cmp    al,0xaf
  415f43:	mov    eax,0x992533
  415f48:	mov    edx,0x87ba0d1f
  415f4d:	pop    edx
  415f4e:	xchg   edi,eax
  415f4f:	rcl    BYTE PTR [edx+esi*8-0x16580abd],cl
  415f56:	or     BYTE PTR ds:0xb5284418,ch
  415f5c:	scas   al,BYTE PTR es:[edi]
  415f5d:	cdq    
  415f5e:	sub    dl,BYTE PTR [eax+0x6d]
  415f61:	int    0x86
  415f63:	adc    edi,DWORD PTR [edx]
  415f65:	out    dx,al
  415f66:	fcomip st,st(2)
  415f68:	mov    cl,0x83
  415f6a:	repz pop ss
  415f6c:	sahf   
  415f6d:	push   cs
  415f6e:	dec    ebx
  415f6f:	scas   eax,DWORD PTR es:[edi]
  415f70:	jns    0x415f3b
  415f72:	sbb    eax,DWORD PTR [ecx-0x443436dd]
  415f78:	mov    ds,WORD PTR [ebx]
  415f7a:	ins    BYTE PTR es:[edi],dx
  415f7b:	inc    edx
  415f7c:	(bad)  
  415f7d:	jo     0x415f66
  415f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f80:	daa    
  415f81:	loope  0x415fbe
  415f83:	inc    ebx
  415f84:	inc    DWORD PTR [ecx-0x503a738b]
  415f8a:	push   0x16
  415f8c:	inc    ecx
  415f8d:	adc    edx,DWORD PTR [ebp+0x773c4047]
  415f93:	pop    ecx
  415f94:	test   DWORD PTR ds:[edi+edi*8-0x39],0xe95be5c
  415f9d:	and    edi,eax
  415f9f:	ret    0x84bf
  415fa2:	rcl    DWORD PTR [ebp+0x4955b23c],0xe6
  415fa9:	jae    0x416008
  415fab:	sti    
  415fac:	les    edi,FWORD PTR [edi+0x2e]
  415faf:	stos   DWORD PTR es:[edi],eax
  415fb0:	inc    edi
  415fb1:	adc    ecx,edi
  415fb3:	xchg   DWORD PTR [esi+0x4714df51],esi
  415fb9:	adc    BYTE PTR [edx+0x22],al
  415fbc:	cmp    BYTE PTR [ebx+0x2a0e8aee],al
  415fc2:	sar    DWORD PTR [ebp*1-0x1ca04b3d],0xef
  415fca:	push   ecx
  415fcb:	out    dx,al
  415fcc:	daa    
  415fcd:	fiadd  WORD PTR ds:0x6d4e893f
  415fd3:	jnp    0x415fbf
  415fd5:	mov    ah,0xb0
  415fd7:	ins    DWORD PTR es:[edi],dx
  415fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd9:	fdivr  QWORD PTR [eax+0x0]
  415fdc:	mov    eax,0x4460ed09
  415fe1:	dec    esp
  415fe2:	nop
  415fe3:	std    
  415fe4:	icebp  
  415fe5:	aam    0x12
  415fe7:	sbb    BYTE PTR [esp+esi*2+0x5469b276],dh
  415fee:	aas    
  415fef:	add    al,BYTE PTR [esi-0x276e8072]
  415ff5:	sbb    ebp,DWORD PTR [ebx+0x6e84a470]
  415ffb:	stos   BYTE PTR es:[edi],al
  415ffc:	or     al,0x9c
  415ffe:	addr16 pop esp
  416000:	cs call 0xceeb814c
  416006:	inc    edi
  416007:	jnp    0x41602b
  416009:	adc    ecx,eax
  41600b:	sti    
  41600c:	outs   dx,DWORD PTR ds:[esi]
  41600d:	mov    ebp,0x9bb123f3
  416012:	test   DWORD PTR [edi+0x43],edx
  416015:	inc    esi
  416016:	(bad)
  41601b:	out    dx,eax
  41601c:	lods   al,BYTE PTR ds:[esi]
  41601d:	jg     0x416071
  41601f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416020:	aas    
  416021:	pop    es
  416022:	lock sar BYTE PTR ss:[eax-0x5],0x77
  416028:	add    eax,0xf24314a0
  41602d:	retf   0xd5c1
  416030:	mov    DWORD PTR [edi+ebx*1+0xd0742ee],0xd592c667
  41603b:	setns  cl
  41603e:	sbb    eax,0xfffad02e
  416043:	call   0xfdee1c73
  416048:	jns    0x4160c6
  41604a:	jne    0x416034
  41604c:	sub    edi,ebp
  41604e:	dec    ebx
  41604f:	jp     0x416061
  416051:	inc    edi
  416052:	stos   BYTE PTR es:[edi],al
  416053:	aaa    
  416054:	in     eax,dx
  416055:	inc    eax
  416056:	daa    
  416057:	sub    DWORD PTR [esi+0x58],0x23327e02
  41605e:	inc    ebp
  41605f:	push   es
  416060:	xchg   ecx,eax
  416061:	ds out 0x36,al
  416064:	aaa    
  416065:	aam    0xfa
  416067:	into   
  416068:	mov    edx,ebp
  41606a:	pop    ss
  41606b:	mov    BYTE PTR [edx],dl
  41606d:	aad    0x49
  41606f:	dec    esp
  416070:	sub    al,0xfd
  416072:	or     bh,BYTE PTR ds:0x8d78ecc2
  416078:	fnstsw WORD PTR [ecx]
  41607a:	add    DWORD PTR [edi+eax*8+0x235674cd],0x2a
  416082:	inc    esp
  416083:	inc    esi
  416084:	pop    esi
  416085:	fsub   st,st(1)
  416087:	je     0x4160da
  416089:	jecxz  0x416076
  41608b:	xchg   DWORD PTR [edi-0x55e58c4d],ebx
  416091:	sbb    esi,DWORD PTR [ebp+0x2ce34a73]
  416097:	fcmove st,st(7)
  416099:	mov    ds,WORD PTR [eax*2-0x6c6855c8]
  4160a0:	sbb    bl,BYTE PTR [eax]
  4160a2:	or     dh,BYTE PTR [edx+0x20]
  4160a5:	mov    edi,0x49fe6d38
  4160aa:	es lock mov ah,0x83
  4160ae:	cld    
  4160af:	sar    BYTE PTR [ebx+0x3c],1
  4160b2:	jl     0x416115
  4160b4:	and    eax,0x5503e627
  4160b9:	mov    bh,0x7b
  4160bb:	ds ret 0x1f82
  4160bf:	test   DWORD PTR [edi+0x20],edi
  4160c2:	iret   
  4160c3:	cmovns edi,DWORD PTR [esi+0x585b7110]
  4160ca:	mov    gs,WORD PTR [esi-0x39553888]
  4160d0:	xor    al,0xa9
  4160d2:	mov    eax,0x383c17ab
  4160d7:	bound  esi,QWORD PTR [ebp-0x7bb7a53c]
  4160dd:	pushf  
  4160de:	mov    edi,0xed9086f4
  4160e3:	push   ss
  4160e4:	aam    0xe4
  4160e6:	adc    al,0x4
  4160e8:	jle    0x41608c
  4160ea:	in     eax,dx
  4160eb:	cmp    eax,DWORD PTR [edi+ebp*4-0x660d67b]
  4160f2:	div    DWORD PTR [esi+edx*8]
  4160f5:	pop    ebx
  4160f6:	sbb    eax,DWORD PTR [eax+0x6ecbfe44]
  4160fc:	ja     0x41614f
  4160fe:	stos   BYTE PTR es:[edi],al
  4160ff:	retf   
  416100:	sbb    ebp,DWORD PTR [eax+eiz*1-0x69217891]
  416107:	push   edx
  416108:	int    0x81
  41610a:	cmp    esi,DWORD PTR ds:0xa2a3f081
  416110:	stc    
  416111:	pop    esi
  416112:	lods   eax,DWORD PTR ds:[esi]
  416113:	ins    BYTE PTR es:[edi],dx
  416114:	ins    BYTE PTR es:[edi],dx
  416115:	pop    esi
  416116:	adc    al,0x90
  416118:	adc    BYTE PTR [edi],dh
  41611a:	popf   
  41611b:	inc    esp
  41611c:	mov    ebp,0x9f47fab7
  416121:	icebp  
  416122:	les    edx,FWORD PTR [ecx-0x4a90a8af]
  416128:	aad    0x44
  41612a:	mov    cl,0x29
  41612c:	in     eax,dx
  41612d:	cwde   
  41612e:	adc    DWORD PTR [edi+0x5a96f41e],ecx
  416134:	stos   DWORD PTR es:[edi],eax
  416135:	push   es
  416136:	mov    esp,ebx
  416138:	jo     0x4160cf
  41613a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41613b:	mov    al,ds:0xb6da4215
  416140:	scas   al,BYTE PTR es:[edi]
  416141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416142:	pop    esp
  416143:	cdq    
  416144:	sbb    eax,0x2827d98e
  416149:	jo     0x4160fa
  41614b:	adc    eax,0x54e9e4d0
  416150:	(bad)  
  416151:	sar    DWORD PTR [ebp+0x12300075],cl
  416157:	test   BYTE PTR [ecx+0x65],bh
  41615a:	(bad)  
  41615b:	xor    ah,BYTE PTR [eax+0x4e82e14a]
  416161:	mov    ch,0x24
  416163:	nop
  416164:	mov    ebp,0x63a7d470
  416169:	inc    ecx
  41616a:	enter  0x2a33,0x4
  41616e:	out    0x2f,al
  416170:	scas   al,BYTE PTR es:[edi]
  416171:	push   ebx
  416172:	test   eax,0x2d82e7f0
  416177:	dec    esp
  416178:	jno    0x416124
  41617a:	int3   
  41617b:	retf   0x9cd3
  41617e:	jo     0x41612a
  416180:	xor    BYTE PTR [edx],0x52
  416183:	dec    esi
  416184:	push   esi
  416185:	or     al,0xb
  416187:	inc    edi
  416188:	arpl   WORD PTR [eax-0x74],dx
  41618b:	mov    ?,WORD PTR [edi-0x7f27cb87]
  416191:	sbb    al,ah
  416193:	fistp  QWORD PTR [edi+ebp*4]
  416196:	push   0xffffffef
  416198:	cmc    
  416199:	pushf  
  41619a:	pop    es
  41619b:	pop    ebp
  41619c:	dec    edi
  41619d:	pop    edx
  41619e:	leave  
  41619f:	cmp    BYTE PTR ds:0xdc35c2b,0x2b
  4161a6:	lods   eax,DWORD PTR ds:[esi]
  4161a7:	mov    DWORD PTR [ecx+ebp*1+0x6597040],esi
  4161ae:	mov    ebx,0x9ddc2b0c
  4161b3:	lds    edx,FWORD PTR [edx]
  4161b5:	xor    eax,0x3c8242de
  4161ba:	cld    
  4161bb:	xchg   edi,eax
  4161bc:	test   ecx,0x3b670f7f
  4161c2:	ficomp DWORD PTR [edx+edx*1]
  4161c5:	add    BYTE PTR [edx],dl
  4161c7:	cs adc esp,esp
  4161ca:	ffree  st(6)
  4161cc:	mov    BYTE PTR [ebx],bh
  4161ce:	sub    al,dl
  4161d0:	xchg   ebx,eax
  4161d1:	fwait
  4161d2:	and    esp,DWORD PTR [edi+0x29]
  4161d5:	sub    eax,0x339e1835
  4161da:	inc    edx
  4161db:	sub    DWORD PTR [ebx],ebp
  4161dd:	pop    esp
  4161de:	sub    ecx,DWORD PTR [esi+0x374bf77d]
  4161e4:	rcr    DWORD PTR [esi+0x73],0x99
  4161e8:	mov    eax,0x79362a51
  4161ed:	push   esp
  4161ee:	(bad)  
  4161ef:	in     al,0x6
  4161f1:	mov    ah,0x1a
  4161f3:	add    al,0x3f
  4161f5:	add    bl,dh
  4161f7:	fdiv   QWORD PTR [ebx+0x4b49402b]
  4161fd:	jmp    0xa0cf:0x98e2b6e1
  416204:	(bad)
  416207:	into   
  416208:	lds    esi,FWORD PTR [ebp+0x1e896508]
  41620e:	sub    al,0x30
  416210:	fstp   DWORD PTR [ebx-0x1229d31]
  416216:	sbb    eax,0xa22a0d05
  41621b:	adc    al,0x13
  41621d:	xlat   BYTE PTR ds:[ebx]
  41621e:	xor    cl,BYTE PTR ss:[esi+0x6]
  416222:	fist   DWORD PTR [eax+ecx*8+0x60]
  416226:	mov    cl,0x6f
  416228:	test   DWORD PTR [edi],edi
  41622a:	arpl   WORD PTR [ecx+0x6dd0c9e],si
  416230:	sbb    eax,0xa2afa995
  416235:	dec    esp
  416236:	jo     0x4161ca
  416238:	xchg   ebp,eax
  416239:	push   0xebb25a93
  41623e:	in     al,0xd3
  416240:	jno    0x4162aa
  416242:	push   es
  416243:	inc    ecx
  416244:	ins    BYTE PTR es:[edi],dx
  416245:	or     edi,esp
  416247:	aas    
  416248:	enter  0x9dd3,0x28
  41624c:	mov    gs,WORD PTR [ecx]
  41624e:	mov    WORD PTR [esi],?
  416250:	shr    eax,1
  416252:	dec    ebx
  416253:	sub    ebx,DWORD PTR [ecx]
  416255:	xchg   DWORD PTR [ecx-0x174ee1ea],edi
  41625b:	pop    ds
  41625c:	mov    cl,0x3a
  41625e:	cmp    eax,0xb074f59f
  416263:	div    esi
  416265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416266:	mov    bh,dh
  416268:	stos   BYTE PTR es:[edi],al
  416269:	nop
  41626a:	xchg   esi,eax
  41626b:	nop
  41626c:	out    0xd,eax
  41626e:	dec    edi
  41626f:	add    al,BYTE PTR [ebx]
  416271:	adc    al,0xf
  416273:	(bad)
  416276:	clc    
  416277:	xor    bh,bl
  416279:	stos   DWORD PTR es:[edi],eax
  41627a:	pop    ebx
  41627b:	lahf   
  41627c:	iretw  
  41627e:	jmp    FWORD PTR [ecx]
  416280:	int    0x24
  416282:	inc    edx
  416283:	popf   
  416284:	arpl   WORD PTR [eax+0xe],ax
  416287:	mov    al,ch
  416289:	repnz pop esp
  41628b:	push   es
  41628c:	xchg   edx,eax
  41628d:	fs fwait
  41628f:	mov    cl,BYTE PTR [edi]
  416291:	outs   dx,BYTE PTR ds:[esi]
  416292:	out    0xcd,eax
  416294:	fs cli 
  416296:	xchg   ebp,eax
  416297:	xchg   edx,eax
  416298:	out    dx,al
  416299:	inc    edi
  41629a:	and    BYTE PTR [ecx+0x4],0xff
  41629e:	in     eax,dx
  41629f:	sub    edi,DWORD PTR [ebx+eiz*4-0x29a6bac2]
  4162a6:	xchg   ebx,eax
  4162a7:	retf   0xb7e2
  4162aa:	aam    0x8a
  4162ac:	or     cl,BYTE PTR [ecx]
  4162ae:	(bad)  
  4162af:	or     DWORD PTR [ecx],edi
  4162b1:	push   es
  4162b2:	(bad)
  4162b6:	push   ecx
  4162b7:	daa    
  4162b8:	jae    0x41630b
  4162ba:	out    dx,al
  4162bb:	stos   DWORD PTR es:[edi],eax
  4162bc:	push   eax
  4162bd:	data16 mov al,0xd3
  4162c0:	lods   al,BYTE PTR ds:[esi]
  4162c1:	loope  0x4162f7
  4162c3:	jl     0x41633a
  4162c5:	int3   
  4162c6:	sub    DWORD PTR [eax+0x24],edx
  4162c9:	cmp    ah,dl
  4162cb:	adc    ch,BYTE PTR [edx]
  4162cd:	xor    al,0xe6
  4162cf:	xchg   esi,eax
  4162d0:	stos   DWORD PTR es:[edi],eax
  4162d1:	(bad)  [edx]
  4162d3:	dec    ecx
  4162d4:	sbb    BYTE PTR [eax+0x6292b2f6],cl
  4162da:	imul   esi,DWORD PTR [edi+0x5c],0x1f5f9ec4
  4162e1:	adc    al,0xeb
  4162e3:	iret   
  4162e4:	pslld  mm7,QWORD PTR [ebp+0x2d57702a]
  4162eb:	test   DWORD PTR [edi],esp
  4162ed:	cli    
  4162ee:	mov    esi,0x8c21d4f
  4162f3:	sub    DWORD PTR [ecx-0x381d958a],0xfffffff2
  4162fa:	lods   eax,DWORD PTR ds:[esi]
  4162fb:	inc    esi
  4162fc:	dec    esi
  4162fd:	aaa    
  4162fe:	cmp    al,0x24
  416300:	lods   eax,DWORD PTR ds:[esi]
  416301:	adc    cl,ch
  416303:	pop    es
  416304:	fucomi st,st(6)
  416306:	jo     0x4162f7
  416308:	stc    
  416309:	xor    ecx,eax
  41630b:	pop    ecx
  41630c:	rcr    BYTE PTR [ecx+0x5273f381],0x6e
  416313:	jge    0x41633c
  416315:	hlt    
  416316:	mov    ds:0xc216382,eax
  41631b:	hlt    
  41631c:	ret    0x333a
  41631f:	stos   BYTE PTR es:[edi],al
  416320:	es aas 
  416322:	mov    ecx,0xe9ec3ed7
  416327:	(bad)  [bx+di+0x6]
  41632b:	fidivr DWORD PTR [edi]
  41632e:	cmp    BYTE PTR [esi+0xa],cl
  416331:	mov    ds:0x5de0e7f3,al
  416336:	mov    edi,0x62ecc338
  41633b:	repz mov ds:0x51dd41e0,al
  416341:	sahf   
  416342:	dec    esp
  416343:	push   eax
  416344:	sub    DWORD PTR [ecx-0x37],esp
  416347:	out    dx,eax
  416348:	adc    DWORD PTR [esp+edi*1-0x67],eax
  41634c:	mov    al,0x21
  41634e:	cmp    al,0x57
  416350:	stos   BYTE PTR es:[edi],al
  416351:	shr    edi,cl
  416353:	mov    ebx,DWORD PTR gs:[esi]
  416356:	repz jb 0x4163af
  416359:	imul   eax,DWORD PTR [eax],0x6ba95c9d
  41635f:	enter  0x66bb,0xa8
  416363:	jmp    0x4163aa
  416365:	shl    DWORD PTR [ebp+0x47],1
  416368:	xchg   ebx,eax
  416369:	mov    DWORD PTR es:0x7704f9f7,esp
  416370:	fdiv   DWORD PTR ds:0x9fc2f4d4
  416376:	or     ah,BYTE PTR [edx-0xf]
  416379:	jbe    0x416345
  41637b:	cdq    
  41637c:	xchg   esp,eax
  41637d:	dec    esi
  41637e:	call   0x6393:0xf07a555d
  416385:	mov    BYTE PTR [edi],cl
  416387:	push   eax
  416388:	enter  0x6f0f,0xda
  41638c:	add    al,ah
  41638e:	(bad)  
  41638f:	pop    ss
  416390:	mov    esp,0x7cbf0aa3
  416395:	pop    edx
  416396:	bnd callw 0x513c
  41639b:	mov    esp,0x1ea626f5
  4163a0:	lods   eax,DWORD PTR ds:[esi]
  4163a1:	outs   dx,BYTE PTR ds:[esi]
  4163a2:	mov    eax,0x65031051
  4163a7:	pop    esp
  4163a8:	push   ebp
  4163a9:	popf   
  4163aa:	aam    0x9d
  4163ac:	xchg   ebp,eax
  4163ad:	sub    DWORD PTR [ecx+eax*4-0x24ac0065],0xffffffe1
  4163b5:	cmp    eax,0x39530959
  4163ba:	(bad)  
  4163bb:	sbb    DWORD PTR [edx-0x19],esp
  4163be:	push   ecx
  4163bf:	repnz outs dx,DWORD PTR ds:[esi]
  4163c1:	bnd call DWORD PTR [ecx]
  4163c4:	popa   
  4163c5:	or     DWORD PTR [eax-0x26],esp
  4163c8:	jp     0x41641f
  4163ca:	jnp    0x4163cd
  4163cc:	jp     0x41634f
  4163ce:	ds jne 0x416388
  4163d1:	retf   
  4163d2:	sub    BYTE PTR [ebp+0x14],0xe7
  4163d6:	cmp    dh,ch
  4163d8:	dec    edx
  4163d9:	add    eax,0xb74bd89f
  4163de:	sbb    al,0x25
  4163e0:	xor    eax,ebp
  4163e2:	cmp    eax,0x223911e5
  4163e7:	mov    ds:0x8e3f805,eax
  4163ec:	pop    ebx
  4163ed:	or     DWORD PTR [esi+0x25b5fe64],esp
  4163f3:	cmp    ch,dl
  4163f5:	test   al,0x6
  4163f7:	aas    
  4163f8:	push   esp
  4163f9:	and    ch,BYTE PTR [edi-0x11]
  4163fc:	stos   BYTE PTR es:[edi],al
  4163fd:	aaa    
  4163fe:	mov    eax,ds:0x20abd275
  416403:	pushf  
  416404:	cdq    
  416405:	cmp    al,0x97
  416407:	or     ebp,DWORD PTR [ebx+0x0]
  41640a:	adc    BYTE PTR [edx+0x4f08ee33],ch
  416410:	sbb    eax,0xa089ef07
  416415:	out    0xe6,al
  416417:	pop    ss
  416418:	cdq    
  416419:	push   esi
  41641a:	inc    ecx
  41641b:	repz retf 0x760f
  41641f:	pop    esi
  416420:	(bad)  
  416421:	add    eax,0x4a1dc1bc
  416426:	xor    bl,BYTE PTR [ebx]
  416428:	stos   DWORD PTR es:[edi],eax
  416429:	sbb    BYTE PTR [esi],ah
  41642b:	out    0x86,eax
  41642d:	inc    edi
  41642e:	clc    
  41642f:	ins    DWORD PTR es:[edi],dx
  416430:	inc    edi
  416431:	pop    ebx
  416432:	push   edi
  416433:	adc    eax,0x4f606925
  416438:	xchg   DWORD PTR [edx+0x28cd0470],edi
  41643e:	repnz stos BYTE PTR es:[edi],al
  416440:	repz mov dh,0x79
  416443:	lods   eax,DWORD PTR ds:[esi]
  416444:	add    BYTE PTR [esi],0xfb
  416447:	xlat   BYTE PTR ds:[ebx]
  416448:	repz and DWORD PTR [ecx],ebx
  41644b:	jns    0x4163f6
  41644d:	out    dx,al
  41644e:	sbb    eax,0x2126c4e3
  416453:	dec    ecx
  416454:	test   al,0xee
  416456:	adc    BYTE PTR [edx+edx*8+0x712160f2],0x1e
  41645e:	cmp    eax,0xb99b8d94
  416463:	retf   0xc0c7
  416466:	sub    al,0x8a
  416468:	imul   eax,DWORD PTR [edi+0x2854ab4d],0x61828575
  416472:	test   BYTE PTR [eax],ah
  416474:	sbb    ecx,DWORD PTR [ebx]
  416476:	jmp    0x373d5608
  41647b:	jecxz  0x416484
  41647d:	inc    edx
  41647e:	shl    DWORD PTR [edi-0xfe24b8d],0xf6
  416485:	mov    ds:0x3a392fbc,eax
  41648a:	(bad)  
  41648b:	jmp    0xb2d10437
  416490:	fs push esp
  416492:	add    dh,dl
  416494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416495:	test   al,0xce
  416497:	add    eax,0x769827da
  41649c:	and    ah,dl
  41649e:	inc    esi
  41649f:	lahf   
  4164a0:	in     al,dx
  4164a1:	adc    DWORD PTR [edi+0x4a],esi
  4164a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a5:	ss mov eax,0x2f4ee228
  4164ab:	xchg   edi,eax
  4164ac:	adc    ch,dh
  4164ae:	mov    cl,0x2b
  4164b0:	xchg   ebx,esp
  4164b2:	cli    
  4164b3:	imul   ebx,DWORD PTR [ebx+0x344eb117],0x6400d4e5
  4164bd:	push   eax
  4164be:	call   0x788bea0b
  4164c3:	call   0x4bc6:0x9f1508b4
  4164ca:	iret   
  4164cb:	ja     0x416532
  4164cd:	or     al,0xae
  4164cf:	inc    ebx
  4164d0:	pop    edx
  4164d1:	scas   al,BYTE PTR es:[edi]
  4164d2:	push   edi
  4164d3:	enter  0x7a08,0xa8
  4164d7:	iret   
  4164d8:	lahf   
  4164d9:	xor    eax,0xb5214055
  4164de:	das    
  4164df:	imul   edi,DWORD PTR [bp+si],0xdb5bf115
  4164e6:	in     al,0xdf
  4164e8:	pop    es
  4164e9:	jmp    0x41655e
  4164eb:	popf   
  4164ec:	and    edi,DWORD PTR [ebp-0x7b]
  4164ef:	dec    ecx
  4164f0:	jp     0x41655c
  4164f2:	inc    esp
  4164f3:	xchg   DWORD PTR [edx-0x7205329c],edx
  4164f9:	jne    0x416551
  4164fb:	aaa    
  4164fc:	cld    
  4164fd:	shl    DWORD PTR [ebp-0x1e],cl
  416500:	mov    ch,0x10
  416502:	and    ebp,DWORD PTR [edi]
  416504:	(bad)  
  416505:	aaa    
  416506:	mov    ds:0xe3327591,al
  41650b:	mov    BYTE PTR [ebp+0x1],ch
  41650e:	xchg   BYTE PTR [edi+0x5df40492],bh
  416514:	mov    esi,0x56188589
  416519:	xchg   ecx,eax
  41651a:	push   es
  41651b:	sbb    dh,al
  41651d:	fidiv  WORD PTR [ebx]
  41651f:	jl     0x4164ae
  416521:	dec    ebx
  416522:	push   ecx
  416523:	and    eax,0x4509dfb2
  416528:	jge    0x416506
  41652a:	rol    BYTE PTR [ebp-0x4d767044],cl
  416530:	add    esi,DWORD PTR [edi]
  416532:	mov    esp,0xc099b205
  416537:	adc    ch,ch
  416539:	sbb    al,0x55
  41653b:	js     0x416572
  41653d:	mov    ebx,0x3075d24e
  416542:	sbb    al,0x8
  416544:	and    ebp,edx
  416546:	push   edx
  416547:	inc    eax
  416548:	add    DWORD PTR ds:0x98def128,edx
  41654e:	cmp    ecx,esp
  416550:	mov    edi,0xe718809d
  416555:	ds inc esi
  416557:	pop    es
  416558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416559:	lods   al,BYTE PTR ds:[esi]
  41655a:	div    BYTE PTR ds:0x8e5ad0b3
  416560:	pop    edi
  416561:	sub    dl,bl
  416563:	sub    edi,DWORD PTR [esi-0x50]
  416566:	bound  esp,QWORD PTR [edx-0x3a]
  416569:	push   edx
  41656a:	out    dx,eax
  41656b:	mov    ebx,0x61385f7d
  416570:	cdq    
  416571:	into   
  416572:	ficomp WORD PTR [esi+0x5c006402]
  416578:	popa   
  416579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41657a:	aaa    
  41657b:	jo     0x4165ac
  41657d:	jb     0x416532
  41657f:	and    al,0xad
  416581:	sbb    BYTE PTR [ecx],dl
  416583:	mov    esp,0xef6964f6
  416588:	inc    ebx
  416589:	mov    bh,0x9f
  41658b:	mov    esi,0x5d0b7f26
  416590:	adc    BYTE PTR [esi],cl
  416592:	(bad)  
  416593:	fs xchg ecx,eax
  416595:	add    bh,BYTE PTR [esi-0x6c]
  416598:	mov    ch,0xfe
  41659a:	repz in al,dx
  41659c:	push   ebp
  41659d:	add    BYTE PTR [ecx+0x40],ch
  4165a0:	shl    DWORD PTR [eax+0x44],cl
  4165a3:	test   ah,0x6e
  4165a6:	data16 icebp 
  4165a8:	fiadd  DWORD PTR [edx+0x19]
  4165ab:	xor    esp,ebp
  4165ad:	sub    BYTE PTR [ebx-0x7d],ch
  4165b0:	sbb    ebx,DWORD PTR [esi+0x48]
  4165b3:	stos   BYTE PTR es:[edi],al
  4165b4:	mov    ebx,0x85e02a39
  4165b9:	push   esi
  4165ba:	test   al,0xca
  4165bc:	adc    DWORD PTR [ebp+0x3e],ebp
  4165bf:	daa    
  4165c0:	jle    0x41654e
  4165c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165c3:	lock dec ecx
  4165c5:	std    
  4165c6:	jmp    0x4165f8
  4165c8:	cmc    
  4165c9:	add    DWORD PTR [edx-0x5e],edi
  4165cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165cd:	sub    eax,0x73b32305
  4165d2:	out    0x12,eax
  4165d4:	mov    esi,0xb5e794e5
  4165d9:	out    0x69,al
  4165db:	mov    WORD PTR [edi],ss
  4165dd:	out    dx,al
  4165de:	mov    ecx,0xef812d5e
  4165e3:	dec    edi
  4165e4:	mov    ah,0x2d
  4165e6:	ficomp WORD PTR [edi]
  4165e8:	ss pop ecx
  4165ea:	add    esi,DWORD PTR [edi]
  4165ec:	(bad)  
  4165ed:	dec    eax
  4165ee:	mov    ds:0x9ee1bcb5,eax
  4165f3:	pop    edx
  4165f4:	rcr    cl,cl
  4165f6:	cmp    BYTE PTR [ecx+0x7b],bl
  4165f9:	pusha  
  4165fa:	push   cs
  4165fb:	cmp    DWORD PTR [ecx+0x33899a81],eax
  416601:	(bad)  
  416602:	pop    ecx
  416603:	mov    WORD PTR [ebx+eiz*8+0x5df2e7c0],?
  41660a:	push   eax
  41660b:	fsub   st,st(7)
  41660d:	mov    bl,0x60
  41660f:	out    0xdf,eax
  416611:	lea    esi,[edx+0x19827449]
  416617:	sub    cl,cl
  416619:	pop    edx
  41661a:	adc    eax,0x398a93d3
  41661f:	in     eax,0xe5
  416621:	adc    eax,0xd595a7a3
  416626:	ret    
  416627:	stos   DWORD PTR es:[edi],eax
  416628:	add    BYTE PTR [edx+eiz*1-0x38],0x58
  41662d:	(bad)  
  41662e:	cs push 0x45
  416631:	lea    ebp,[ebx]
  416633:	add    al,0x50
  416635:	cld    
  416636:	rcl    BYTE PTR [edx],cl
  416638:	outs   dx,BYTE PTR ds:[esi]
  416639:	and    BYTE PTR ds:0x7719de88,bl
  41663f:	imul   edx
  416641:	shr    BYTE PTR [ebx],cl
  416643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416644:	xor    al,0x3b
  416646:	adc    eax,0x18850147
  41664b:	leave  
  41664c:	sub    BYTE PTR [edi+0x23],ch
  41664f:	pop    esi
  416650:	enter  0xf18a,0x77
  416654:	push   0xe3f7a4f
  416659:	test   ecx,eax
  41665b:	mov    BYTE PTR [ecx+0x10d77de9],dh
  416661:	or     al,0xf9
  416663:	xlat   BYTE PTR ds:[ebx]
  416664:	int3   
  416665:	dec    esi
  416666:	xchg   edi,eax
  416667:	stos   BYTE PTR es:[edi],al
  416668:	mov    eax,ds:0x8a368290
  41666d:	jns    0x41668b
  41666f:	xor    ch,BYTE PTR [ebx-0x78]
  416672:	inc    eax
  416673:	xchg   esi,eax
  416674:	es sub al,0xec
  416677:	xchg   esp,eax
  416678:	pusha  
  416679:	mov    ds:0x6a1c535f,eax
  41667e:	sar    ebp,1
  416680:	xchg   edi,eax
  416681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416682:	inc    ebp
  416683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416684:	int3   
  416685:	ins    BYTE PTR es:[edi],dx
  416686:	aas    
  416687:	jb     0x49790cce
  41668d:	out    0x23,eax
  41668f:	and    BYTE PTR [eax-0xf],bh
  416692:	sbb    bl,ah
  416694:	shl    DWORD PTR [edx-0x24],0x7f
  416698:	jns    0x4166eb
  41669a:	call   0x1f45ef7e
  41669f:	pusha  
  4166a0:	xchg   ebx,eax
  4166a1:	icebp  
  4166a2:	pop    edi
  4166a3:	int    0xf
  4166a5:	jb     0x4166ee
  4166a7:	aaa    
  4166a8:	pop    ecx
  4166a9:	xchg   edx,eax
  4166aa:	loop   0x416658
  4166ac:	sti    
  4166ad:	cdq    
  4166ae:	rcl    DWORD PTR [ebp+0x336f047c],0xd8
  4166b5:	jae    0x416650
  4166b7:	enter  0xc7d2,0x27
  4166bb:	in     eax,0x72
  4166bd:	fild   WORD PTR [esp+esi*2+0x7c]
  4166c1:	outs   dx,BYTE PTR ds:[esi]
  4166c2:	scas   al,BYTE PTR es:[edi]
  4166c3:	add    BYTE PTR [ebp-0x9151d8],ch
  4166c9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4166cb:	daa    
  4166cc:	hlt    
  4166cd:	mov    edx,0x67a74ff2
  4166d2:	cmp    DWORD PTR [edx],eax
  4166d4:	fwait
  4166d5:	push   ebx
  4166d6:	(bad)  
  4166d7:	jle    0x4166df
  4166d9:	leave  
  4166da:	add    DWORD PTR [ecx],edi
  4166dc:	(bad)  
  4166dd:	gs test eax,0x748f1bfc
  4166e3:	xchg   edi,eax
  4166e4:	sub    eax,0xfcb98e38
  4166e9:	and    edx,DWORD PTR [ebx-0x2b431fc8]
  4166ef:	cmp    eax,edx
  4166f1:	dec    ebx
  4166f2:	subps  xmm1,xmm5
  4166f5:	dec    edx
  4166f6:	aad    0xe8
  4166f8:	sti    
  4166f9:	xor    eax,0x79281db2
  4166fe:	std    
  4166ff:	(bad)  
  416700:	push   edx
  416701:	cwde   
  416702:	scas   eax,DWORD PTR es:[edi]
  416703:	aaa    
  416704:	cli    
  416705:	popf   
  416706:	mul    DWORD PTR [ebx+0x2524bc38]
  41670c:	popf   
  41670d:	jp     0x4166e0
  41670f:	inc    eax
  416710:	cmp    al,0xb8
  416712:	mov    ss,WORD PTR [esi]
  416714:	fsubr  st(4),st
  416716:	xor    al,0x2
  416718:	(bad)  
  41671a:	jg     0x4166c7
  41671c:	or     al,0xf8
  41671e:	icebp  
  41671f:	push   0x69
  416721:	push   0xd8b7230
  416726:	mov    ds:0x31c0f1cd,al
  41672b:	cli    
  41672c:	pusha  
  41672d:	rcl    ebx,1
  41672f:	lock in eax,0x62
  416732:	jp     0x4166d3
  416734:	pushf  
  416735:	push   ds
  416736:	cwde   
  416737:	sar    BYTE PTR [eax+0x5e6cd859],0x5f
  41673e:	fmul   QWORD PTR [ebx]
  416740:	scas   al,BYTE PTR es:[edi]
  416741:	(bad)  
  416742:	(bad)  
  416743:	stos   DWORD PTR es:[edi],eax
  416744:	sbb    ecx,DWORD PTR [esi]
  416746:	jnp    0x4167af
  416748:	sub    al,0x19
  41674a:	lds    esp,FWORD PTR [eax-0x4e]
  41674d:	loop   0x416776
  41674f:	stos   BYTE PTR es:[edi],al
  416750:	or     eax,0xf1f70b6f
  416755:	repnz inc edi
  416757:	mov    edi,0x792a400c
  41675c:	out    dx,eax
  41675d:	add    dh,dl
  41675f:	mov    edi,0x724067df
  416764:	dec    edx
  416765:	js     0x4167de
  416767:	jno    0x4166f2
  416769:	imul   eax,ecx,0x4a837c95
  41676f:	jecxz  0x416792
  416771:	cwde   
  416772:	icebp  
  416773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416774:	pop    ebp
  416775:	aam    0x2a
  416777:	jmp    0x83c97e9f
  41677c:	push   ds
  41677d:	lea    ebx,[ecx+0x66]
  416780:	xor    DWORD PTR [esi-0x242a71c3],0x3d67820c
  41678a:	dec    ecx
  41678b:	mov    ecx,esp
  41678d:	push   ss
  41678e:	mov    dh,0x38
  416790:	hlt    
  416791:	mov    ch,ch
  416793:	sbb    DWORD PTR [edx+edi*2+0x62],ebx
  416797:	scas   eax,DWORD PTR es:[edi]
  416798:	pop    ebp
  416799:	mov    dl,0x49
  41679b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41679c:	xor    DWORD PTR ds:0xe722337b,ebx
  4167a2:	push   0xfffffff8
  4167a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a5:	xchg   esi,eax
  4167a6:	and    ebp,DWORD PTR [edi+ebx*8+0x44]
  4167aa:	xor    BYTE PTR [edi+0x6a],ah
  4167ad:	xchg   esp,eax
  4167ae:	mov    BYTE PTR [eax+ebp*1-0x712a905d],bl
  4167b5:	idiv   DWORD PTR [esi-0x1f499e0f]
  4167bb:	sbb    esi,ebp
  4167bd:	out    dx,eax
  4167be:	retf   
  4167bf:	or     ch,BYTE PTR [ebx+0x35]
  4167c2:	xchg   DWORD PTR [eax],ecx
  4167c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c5:	ja     0x416808
  4167c7:	lods   al,BYTE PTR ds:[esi]
  4167c8:	mov    ebx,0x46dacdb2
  4167cd:	jns    0x416811
  4167cf:	pop    es
  4167d0:	loope  0x4167d6
  4167d2:	pop    ebx
  4167d3:	test   al,0x2
  4167d5:	cmp    ebx,DWORD PTR [edx+0x1fb2ee90]
  4167db:	jmp    0x4167d9
  4167dd:	je     0x416789
  4167df:	cmp    al,0x8a
  4167e1:	scas   eax,DWORD PTR es:[edi]
  4167e2:	cmp    cl,BYTE PTR [edi+0x49]
  4167e5:	loop   0x416822
  4167e7:	iret   
  4167e8:	loop   0x41677f
  4167ea:	test   DWORD PTR [ebx+esi*8+0x52],eax
  4167ee:	int    0xa7
  4167f0:	call   0xbe4e:0xb52253f9
  4167f7:	sub    DWORD PTR [ecx-0x3da8f531],0xffffffda
  4167fe:	std    
  4167ff:	outs   dx,DWORD PTR ds:[esi]
  416800:	rcl    DWORD PTR [edi-0x6e],1
  416803:	pop    edi
  416804:	ins    BYTE PTR es:[edi],dx
  416805:	shl    DWORD PTR [esi-0x87694ce],0x66
  41680c:	or     edi,ecx
  41680e:	dec    edi
  41680f:	cld    
  416810:	int    0x35
  416812:	sbb    eax,0xb4b559c4
  416817:	pop    es
  416818:	mov    cl,0x9c
  41681a:	add    al,0x8
  41681c:	sbb    BYTE PTR [edi+0x10],bh
  41681f:	and    DWORD PTR [edi+0x4a],eax
  416822:	(bad)  
  416823:	mov    dh,0x2
  416825:	xchg   ebp,eax
  416826:	xchg   ebx,eax
  416827:	rol    BYTE PTR [edx],cl
  416829:	or     DWORD PTR [esi],esp
  41682b:	or     eax,0xf42ec8bd
  416830:	cmp    DWORD PTR [ebp+0x113faf44],ebx
  416836:	leave  
  416837:	test   al,dh
  416839:	out    0x24,eax
  41683b:	outs   dx,BYTE PTR ds:[esi]
  41683c:	loope  0x416801
  41683e:	pop    ecx
  41683f:	(bad)  
  416840:	jp     0x416856
  416842:	xor    BYTE PTR [ebx+edi*4-0x3e],al
  416846:	mov    al,ds:0x9b6838de
  41684b:	push   ds
  41684c:	in     al,0x2c
  41684e:	add    al,0xcc
  416850:	dec    ebx
  416851:	mov    ch,0x4a
  416853:	mov    eax,ds:0x5b5b8957
  416858:	jmp    0x4167e3
  41685a:	mov    dh,0xc3
  41685c:	in     eax,0x80
  41685e:	pop    ebp
  41685f:	dec    ecx
  416860:	inc    ecx
  416861:	mov    eax,0x15d8d0b2
  416866:	sub    ecx,0x26
  416869:	bound  ebx,QWORD PTR [eax]
  41686b:	adc    BYTE PTR [ecx],al
  41686d:	test   DWORD PTR [esi],ebp
  41686f:	std    
  416870:	lahf   
  416871:	jp     0x416866
  416873:	add    al,0xc0
  416875:	push   ss
  416876:	and    dh,ch
  416878:	rcr    DWORD PTR [ebx-0x5],cl
  41687b:	aad    0xbd
  41687d:	shl    bh,1
  41687f:	mov    ebp,0x7edf1eb2
  416884:	adc    ebp,DWORD PTR [ecx+0x69]
  416887:	jbe    0x4168df
  416889:	jb     0x416861
  41688b:	jns    0x416837
  41688d:	out    0xdc,al
  41688f:	pop    ecx
  416890:	xchg   ebx,eax
  416891:	xor    al,0xab
  416894:	mov    edi,0xd5f06b7d
  416899:	das    
  41689a:	inc    edx
  41689b:	inc    ebp
  41689c:	jmp    0x42f8:0xff2a4c9
  4168a3:	(bad)  
  4168a4:	mov    ebp,esp
  4168a6:	lds    ecx,FWORD PTR [eax]
  4168a8:	xchg   ebx,eax
  4168a9:	rcr    DWORD PTR [esp+ebx*1+0x76],1
  4168ad:	mov    eax,ds:0x26c91244
  4168b2:	push   ebp
  4168b3:	sbb    eax,ebp
  4168b5:	push   ebp
  4168b6:	retf   0xdc1f
  4168b9:	cli    
  4168ba:	push   ecx
  4168bb:	inc    ebp
  4168bc:	mov    ah,0x8a
  4168be:	pop    esi
  4168bf:	icebp  
  4168c0:	mov    ah,0x61
  4168c2:	out    0x67,eax
  4168c4:	xchg   esp,eax
  4168c5:	sbb    BYTE PTR [esi-0x3e7ce4d4],dl
  4168cb:	test   al,0x39
  4168cd:	sbb    al,BYTE PTR [ebp+0x2]
  4168d0:	in     al,dx
  4168d1:	and    ah,ch
  4168d3:	test   BYTE PTR [ecx-0x44],0x7c
  4168d7:	or     ebp,DWORD PTR [esi-0x4a]
  4168da:	jge    0x4168e1
  4168dc:	jnp    0x416946
  4168de:	adc    bh,ch
  4168e0:	test   eax,0xb1f9d8c
  4168e5:	sub    dl,BYTE PTR [ebx-0x44]
  4168e8:	add    al,0x3a
  4168ea:	dec    ecx
  4168eb:	pop    es
  4168ec:	dec    ebp
  4168ed:	scas   eax,DWORD PTR es:[edi]
  4168ee:	adc    DWORD PTR [edi-0x563eee1f],esp
  4168f4:	mov    bl,0x7e
  4168f6:	push   es
  4168f7:	push   ss
  4168f8:	mov    eax,ds:0x9eb390ec
  4168fd:	jbe    0x41692c
  4168ff:	pop    DWORD PTR [edi+0x49]
  416902:	stos   DWORD PTR es:[edi],eax
  416903:	iret   
  416904:	gs das 
  416906:	and    edi,DWORD PTR [ebx-0x6a]
  416909:	jg     0x4168fb
  41690b:	dec    esp
  41690c:	fwait
  41690d:	pop    edx
  41690e:	push   eax
  41690f:	shr    ebp,1
  416911:	push   esp
  416912:	pop    edi
  416913:	lahf   
  416914:	xchg   esp,eax
  416915:	mov    ah,0xb7
  416917:	lock add eax,0x67654bb1
  41691d:	and    DWORD PTR [ecx],0x55
  416920:	xchg   BYTE PTR [ecx+0x73313ba],dh
  416926:	pushf  
  416927:	scas   eax,DWORD PTR es:[edi]
  416928:	ins    DWORD PTR es:[edi],dx
  416929:	adc    edi,DWORD PTR [ecx+eiz*4+0x1e]
  41692d:	loope  0x4168cd
  41692f:	int3   
  416930:	sbb    eax,DWORD PTR [edx+0x2d]
  416933:	mov    dh,0xef
  416935:	dec    ecx
  416936:	aam    0x71
  416938:	pop    ds
  416939:	in     al,0xb
  41693b:	mov    bl,0x3b
  41693d:	pop    esi
  41693e:	rcr    DWORD PTR [esp+ecx*4-0x6c],1
  416942:	jno    0x4168d2
  416944:	cs scas al,BYTE PTR es:[edi]
  416946:	test   DWORD PTR [ecx+edx*2],0x4fb285f4
  41694d:	and    eax,DWORD PTR [esi]
  41694f:	pop    ds
  416950:	push   ecx
  416951:	add    al,0x75
  416953:	mov    edi,ebx
  416955:	shr    edx,0xda
  416958:	fadd   QWORD PTR [esp+esi*8]
  41695b:	push   ebp
  41695c:	mov    ebp,0x4fd759e4
  416961:	xchg   ebp,eax
  416962:	dec    eax
  416963:	bound  esp,QWORD PTR [ecx+0x45]
  416966:	lock xchg ecx,eax
  416968:	pop    eax
  416969:	or     dh,dh
  41696b:	aad    0x45
  41696d:	xor    DWORD PTR [esi+ebx*2+0x6b042f67],ebx
  416974:	mov    ebp,0x804a1bba
  416979:	ret    
  41697a:	mov    bl,BYTE PTR [edi]
  41697c:	cwde   
  41697d:	xor    ch,ah
  41697f:	sti    
  416980:	cld    
  416981:	mov    ah,BYTE PTR [ebp+0x3c]
  416984:	icebp  
  416985:	push   cs
  416986:	lods   al,BYTE PTR ds:[esi]
  416987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416988:	stc    
  416989:	repz mov ds:0x357fffd3,eax
  41698f:	fcomi  st,st(1)
  416991:	popf   
  416992:	ds inc esp
  416994:	mov    BYTE PTR [edi],0x18
  416997:	jp     0x4169fc
  416999:	jmp    0x3e1a:0xd0d4f366
  4169a0:	mov    gs,WORD PTR ds:0x44d9cd8
  4169a6:	ret    0x4031
  4169a9:	ins    BYTE PTR es:[edi],dx
  4169aa:	push   ecx
  4169ab:	fld    st(7)
  4169ad:	sub    bl,BYTE PTR [edx+eax*1]
  4169b0:	repnz mov ecx,0x6474af66
  4169b6:	pop    esi
  4169b7:	sbb    BYTE PTR [ebp-0x3f9b9feb],dl
  4169bd:	shr    DWORD PTR [ebp+0x4d],1
  4169c0:	cdq    
  4169c1:	cmp    eax,0x73e323d2
  4169c6:	mov    eax,0xb1b15a2e
  4169cb:	xchg   ebx,eax
  4169cc:	test   eax,0xfa2d8df3
  4169d1:	or     al,0x25
  4169d3:	and    ebx,DWORD PTR [esi-0x11a7e5d6]
  4169d9:	sub    al,0x91
  4169db:	(bad)  
  4169dc:	hlt    
  4169dd:	dec    esp
  4169de:	inc    esp
  4169df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169e0:	sti    
  4169e1:	cmp    eax,0xeddfc15d
  4169e6:	adc    ch,BYTE PTR [edx]
  4169e8:	mov    al,BYTE PTR [esi]
  4169ea:	ret    0x9919
  4169ed:	ss daa 
  4169ef:	cmc    
  4169f0:	push   ss
  4169f1:	rol    DWORD PTR [edi-0x16],1
  4169f4:	and    al,ch
  4169f6:	retf   0xf114
  4169f9:	sub    esi,DWORD PTR [eax]
  4169fb:	out    dx,eax
  4169fc:	pop    ecx
  4169fd:	aas    
  4169fe:	sub    al,0xd7
  416a00:	mov    edi,0x1905a2c7
  416a05:	pop    eax
  416a06:	inc    ecx
  416a07:	adc    BYTE PTR [ecx],dh
  416a09:	mov    bh,al
  416a0b:	xor    eax,0x2adf4af4
  416a10:	mov    ecx,DWORD PTR [ebx-0x62ccf5ab]
  416a16:	and    eax,0xa160d393
  416a1b:	ins    BYTE PTR es:[edi],dx
  416a1c:	ffree  st(0)
  416a1e:	aas    
  416a1f:	xchg   esi,eax
  416a20:	sbb    eax,0x473d0803
  416a25:	cld    
  416a26:	xor    esi,ebp
  416a28:	sbb    cl,BYTE PTR ds:0xd8744b87
  416a2e:	mov    eax,0x5621c82
  416a33:	sub    eax,0xd4703086
  416a38:	shr    edx,1
  416a3a:	popf   
  416a3b:	mov    al,ds:0x517487d3
  416a40:	jbe    0x4169e1
  416a42:	pop    ss
  416a43:	push   edx
  416a44:	(bad)  [eax+0x75]
  416a47:	std    
  416a48:	stos   BYTE PTR es:[edi],al
  416a49:	jge    0x416abf
  416a4b:	pop    ebx
  416a4c:	ret    
  416a4d:	push   esp
  416a4e:	cmp    al,0xf1
  416a50:	aaa    
  416a51:	cld    
  416a52:	dec    ebx
  416a53:	popf   
  416a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a55:	leave  
  416a56:	or     ah,dh
  416a58:	loopne 0x416a4f
  416a5a:	fs cs fyl2xp1 
  416a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a5f:	push   ss
  416a60:	clc    
  416a61:	xchg   ecx,eax
  416a62:	cmp    edi,DWORD PTR [edi-0x7]
  416a65:	sar    DWORD PTR [ebp-0xa],cl
  416a68:	xchg   ecx,eax
  416a69:	out    dx,eax
  416a6a:	rol    BYTE PTR [eax-0x31],1
  416a6d:	pop    ebx
  416a6e:	sub    BYTE PTR [ebx],ah
  416a70:	fst    st(0)
  416a72:	repz push ebx
  416a74:	fild   DWORD PTR [edi]
  416a76:	stc    
  416a77:	out    dx,eax
  416a78:	pop    edx
  416a79:	jp     0x416a3f
  416a7b:	sub    al,0xd9
  416a7d:	nop    ebx
  416a80:	push   esp
  416a81:	cs dec ecx
  416a83:	ins    BYTE PTR es:[edi],dx
  416a84:	mov    ch,0x7a
  416a86:	not    BYTE PTR [esi]
  416a88:	dec    ebx
  416a89:	fild   QWORD PTR [edi]
  416a8b:	int3   
  416a8c:	and    BYTE PTR [esi+0x2521b69e],dh
  416a92:	imul   eax,esp,0xffffffba
  416a95:	sub    al,0x95
  416a97:	pop    ecx
  416a98:	loope  0x416a9d
  416a9a:	adc    eax,0xcb564770
  416a9f:	jmp    0xec4d1444
  416aa4:	stc    
  416aa5:	ja     0x416a67
  416aa7:	add    esi,DWORD PTR ds:0x83a14a50
  416aad:	ss pop ebp
  416aaf:	and    cl,BYTE PTR ds:0xbf79508f
  416ab5:	int    0xb3
  416ab7:	xor    bh,0x80
  416aba:	sub    eax,0x5b1108a0
  416abf:	jge    0x416ad0
  416ac1:	and    BYTE PTR [ebp-0x3a],cl
  416ac4:	sbb    eax,0x6a5a4f0c
  416ac9:	shl    DWORD PTR [edx+edx*8],cl
  416acc:	push   edx
  416acd:	push   ss
  416ace:	clc    
  416acf:	adc    BYTE PTR fs:[edx-0x18],0xb6
  416ad4:	shl    BYTE PTR [esp+edx*1-0x7d365f2e],0xb4
  416adc:	inc    edx
  416add:	push   esp
  416ade:	sub    dl,BYTE PTR [esi]
  416ae0:	and    al,0xef
  416ae2:	ins    DWORD PTR es:[edi],dx
  416ae3:	push   ebp
  416ae4:	call   0xba71:0x5ba6ad31
  416aeb:	xor    BYTE PTR [ecx-0x66],ah
  416aee:	xchg   edx,eax
  416aef:	or     al,0xfd
  416af1:	dec    eax
  416af2:	pop    ds
  416af3:	(bad)  
  416af4:	leave  
  416af5:	loopne 0x416b5f
  416af7:	repz add cl,BYTE PTR ds:0x2a616dd8
  416afe:	sbb    al,0xd5
  416b00:	adc    eax,DWORD PTR [ebp+0x5d]
  416b03:	mov    esi,0xc45a8eb6
  416b08:	aaa    
  416b09:	xchg   esp,eax
  416b0a:	fwait
  416b0b:	jb     0x416b2d
  416b0d:	push   ebp
  416b0e:	pop    ds
  416b0f:	mov    ebp,0xcc421eb
  416b14:	test   al,0xc9
  416b16:	xor    DWORD PTR [esi-0x53],ebp
  416b19:	pop    ss
  416b1a:	mov    ebp,0xe7760cf9
  416b1f:	loopne 0x416af9
  416b21:	inc    esp
  416b22:	ins    DWORD PTR es:[edi],dx
  416b23:	mov    dh,0x57
  416b25:	xor    DWORD PTR ds:0x90794acf,0xadaeebe2
  416b2f:	push   ecx
  416b30:	cli    
  416b31:	(bad)  
  416b32:	stos   DWORD PTR es:[edi],eax
  416b33:	fs jbe 0x416b65
  416b36:	test   DWORD PTR [edx+ecx*1-0x73],0xf816aae0
  416b3e:	add    dh,cl
  416b40:	jle    0x416b55
  416b42:	mov    ch,0x2b
  416b44:	dec    edi
  416b45:	jne    0x416b98
  416b47:	and    ch,BYTE PTR ds:0xb713216d
  416b4d:	sub    BYTE PTR [edi-0x13],bl
  416b50:	cli    
  416b51:	dec    edi
  416b52:	sbb    ah,BYTE PTR [ebx-0x581431d0]
  416b58:	call   0xd8c63c4a
  416b5d:	ret    
  416b5e:	sbb    DWORD PTR [edi+0x76],esi
  416b61:	jmp    0x416baa
  416b63:	sub    edx,ecx
  416b65:	ror    DWORD PTR [eax-0x53],0x76
  416b69:	mov    edx,0xb215e70d
  416b6e:	dec    ecx
  416b6f:	mov    ecx,cs
  416b71:	mov    edx,0x694d075d
  416b76:	cs mov ebx,0x7788e508
  416b7c:	cmp    al,ah
  416b7e:	jg     0x416b55
  416b80:	nop
  416b81:	sub    eax,0xc62c934c
  416b86:	xchg   ecx,eax
  416b87:	push   edx
  416b88:	jae    0x416b2b
  416b8a:	jg     0x416b7c
  416b8c:	mov    edx,0x8750d50f
  416b91:	mov    ds:0xaf48a719,al
  416b96:	fisub  DWORD PTR [ecx]
  416b98:	pop    esp
  416b99:	test   al,0x16
  416b9b:	mov    edx,ebp
  416b9d:	comiss xmm5,DWORD PTR [eax]
  416ba0:	test   DWORD PTR [edi-0x76],eax
  416ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ba4:	iret   
  416ba5:	sub    eax,DWORD PTR [edi-0x25]
  416ba8:	pop    ebx
  416ba9:	ror    ebx,1
  416bab:	pop    esp
  416bac:	out    dx,eax
  416bad:	cli    
  416bae:	dec    ebx
  416baf:	xor    al,0xd
  416bb1:	mov    ah,0x75
  416bb3:	push   edx
  416bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb5:	sbb    BYTE PTR [eax*8-0x22793c69],ah
  416bbc:	jmp    0x17e:0x5e361cce
  416bc3:	pop    ds
  416bc4:	scas   eax,DWORD PTR es:[edi]
  416bc5:	and    edx,esp
  416bc7:	jns    0x416b71
  416bc9:	cmp    eax,0x88d35e25
  416bce:	inc    ebp
  416bcf:	fwait
  416bd0:	dec    edi
  416bd1:	retf   
  416bd2:	mov    ebp,DWORD PTR [esi+0x2b]
  416bd5:	int    0x8c
  416bd7:	pusha  
  416bd8:	pop    ebp
  416bd9:	in     eax,0x76
  416bdb:	sbb    al,0xb2
  416bdd:	pushf  
  416bde:	cdq    
  416bdf:	push   cs
  416be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416be1:	ins    BYTE PTR es:[edi],dx
  416be2:	mov    ?,WORD PTR [edx+0xf]
  416be5:	icebp  
  416be6:	or     esi,DWORD PTR [edx+eax*4]
  416be9:	jecxz  0x416c52
  416beb:	das    
  416bec:	shl    DWORD PTR [ecx-0x43],1
  416bef:	fld    TBYTE PTR [esi-0x5]
  416bf2:	pop    ecx
  416bf3:	add    BYTE PTR [ecx],ch
  416bf5:	imul   ebp,DWORD PTR [eax],0x2b2a439d
  416bfb:	sbb    cl,dl
  416bfd:	push   ss
  416bfe:	xor    al,0xe0
  416c00:	in     eax,0x36
  416c02:	mov    ds:0x6dff3dec,al
  416c07:	dec    DWORD PTR [ebp+0x738b6825]
  416c0d:	inc    ecx
  416c0e:	clc    
  416c0f:	rcl    BYTE PTR [esi-0x739f3a5a],1
  416c15:	lods   eax,DWORD PTR ds:[esi]
  416c16:	fisttp WORD PTR fs:[eax-0x3d9ccb6]
  416c1d:	jb     0x416bef
  416c1f:	icebp  
  416c20:	fdiv   QWORD PTR [edx]
  416c22:	outs   dx,BYTE PTR ds:[esi]
  416c23:	xchg   bh,ah
  416c25:	mov    eax,cs
  416c27:	outs   dx,BYTE PTR es:[esi]
  416c29:	fidivr DWORD PTR [edi]
  416c2b:	push   eax
  416c2c:	and    esp,esi
  416c2e:	pushf  
  416c2f:	fadd   QWORD PTR [ebx+0x286cc1b6]
  416c35:	jmp    0x416c7d
  416c37:	pop    ecx
  416c38:	jecxz  0x416c47
  416c3a:	or     al,0xea
  416c3c:	jmp    0x64b4eb67
  416c41:	mov    bh,BYTE PTR [ecx+ebx*1+0x673a75a9]
  416c48:	cmp    al,0x2a
  416c4a:	(bad)  
  416c4b:	cmp    eax,0x51c63b75
  416c50:	mov    cl,0xa
  416c52:	call   0xf846d743
  416c57:	data16 fwait
  416c59:	pop    esi
  416c5a:	scas   al,BYTE PTR es:[edi]
  416c5b:	push   ecx
  416c5c:	xchg   BYTE PTR [eax+0x39fc1473],bh
  416c62:	mov    edi,0xa3a5339e
  416c67:	fs cdq 
  416c69:	jne    0x416cd1
  416c6b:	cmp    BYTE PTR [ebp-0x24],ch
  416c6e:	jo     0x416c5b
  416c70:	loopne 0x416bff
  416c72:	int3   
  416c73:	in     al,0xfb
  416c75:	ror    DWORD PTR [edi+0x56faa85f],cl
  416c7b:	add    al,0xd7
  416c7d:	sbb    eax,0xaddd1550
  416c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c83:	call   0x8063:0x3a4ecb0d
  416c8a:	aas    
  416c8b:	js     0x416cfe
  416c8d:	mov    esp,0x5d8b60df
  416c92:	clc    
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    bh,ch
  416df4:	int    0xd6
  416df6:	jb     0x416e6c
  416df8:	inc    ebp
  416df9:	add    BYTE PTR [ebx-0x7c7ca1c2],0xf7
  416e00:	cmp    DWORD PTR [esi+0x2c],ecx
  416e03:	pushf  
  416e04:	clc    
  416e05:	cmp    al,0xa1
  416e07:	retf   0x813
  416e0a:	out    0xe0,eax
  416e0c:	mov    bh,0xbe
  416e0e:	mov    esp,esi
  416e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e11:	outs   dx,DWORD PTR ds:[esi]
  416e13:	mov    es,esp
  416e15:	dec    ebp
  416e16:	mov    al,0x59
  416e18:	ins    BYTE PTR es:[edi],dx
  416e19:	hlt    
  416e1a:	cmp    eax,0x4012126
  416e1f:	cmp    BYTE PTR [ebx+0x35],dl
  416e22:	pop    ecx
  416e23:	inc    ecx
  416e24:	hlt    
  416e25:	out    dx,eax
  416e26:	pop    ss
  416e27:	lds    eax,FWORD PTR [ecx-0x5ecce3a]
  416e2d:	xchg   edx,eax
  416e2e:	mov    ebx,0x1d213651
  416e33:	imul   esi,ebx,0x174be781
  416e39:	pop    ebp
  416e3a:	je     0x416e9a
  416e3c:	addr16 es mov eax,0x34f158b4
  416e43:	ss scas al,BYTE PTR es:[edi]
  416e45:	jns    0x416ebf
  416e47:	and    dl,dh
  416e49:	pop    ss
  416e4a:	mov    bh,BYTE PTR [ebx+0x7b307ad9]
  416e50:	shl    edx,0xfe
  416e53:	pusha  
  416e54:	inc    esp
  416e55:	fwait
  416e56:	fwait
  416e57:	outs   dx,BYTE PTR ds:[esi]
  416e58:	and    ebx,esi
  416e5a:	aad    0x45
  416e5c:	sbb    BYTE PTR [ecx],ah
  416e5e:	mov    ebx,0xa40b96fd
  416e63:	pop    esi
  416e64:	and    bl,ah
  416e66:	lods   eax,DWORD PTR ds:[esi]
  416e67:	add    al,0x7
  416e69:	mov    ecx,0xcf6229fd
  416e6e:	fiadd  WORD PTR [esi+0x518aa639]
  416e74:	pop    ds
  416e75:	jne    0x416eef
  416e77:	adc    eax,0x1ef58c66
  416e7c:	ja     0x416ef8
  416e7e:	mov    al,0xc2
  416e80:	jle    0x416e47
  416e82:	shl    BYTE PTR [ecx-0x44034262],cl
  416e88:	in     al,0x8e
  416e8a:	cmp    BYTE PTR [ebx],bl
  416e8c:	loop   0x416e7f
  416e8e:	jg     0x416ede
  416e90:	loope  0x416ef5
  416e92:	push   ebp
  416e93:	icebp  
  416e94:	clc    
  416e95:	cmp    DWORD PTR [esi],esp
  416e97:	ss pop ebx
  416e99:	call   0x2cff2b54
  416e9e:	outs   dx,DWORD PTR ds:[esi]
  416e9f:	mov    al,ds:0xdc7bbe6c
  416ea4:	xchg   ah,bl
  416ea6:	xchg   esi,eax
  416ea7:	aaa    
  416ea8:	(bad)  
  416ea9:	xchg   ebp,esi
  416eab:	jbe    0x416e8c
  416ead:	in     al,dx
  416eae:	cmp    DWORD PTR [esi],eax
  416eb0:	adc    al,0xed
  416eb2:	div    DWORD PTR [ebx]
  416eb4:	cmp    BYTE PTR [ebx-0x611a4163],dl
  416eba:	inc    eax
  416ebb:	lea    ebp,[eax+eax*1]
  416ebe:	or     bl,BYTE PTR [edx]
  416ec0:	mov    ch,0x17
  416ec2:	lahf   
  416ec3:	popf   
  416ec4:	imul   esp,ecx,0xffffffce
  416ec7:	sub    BYTE PTR [ecx-0xb1389aa],ch
  416ecd:	mov    WORD PTR [ecx-0x59],cs
  416ed0:	ret    
  416ed1:	cs ja  0x416ec2
  416ed4:	lock cmp BYTE PTR [ebx],dl
  416ed7:	inc    ecx
  416ed8:	xor    BYTE PTR [edx],bh
  416eda:	push   0x66
  416edc:	outs   dx,DWORD PTR ds:[esi]
  416edd:	adc    al,0x87
  416edf:	out    0xf1,eax
  416ee1:	jl     0x416f23
  416ee3:	int3   
  416ee4:	imul   edx,DWORD PTR [ecx+eiz*2],0x11
  416ee8:	or     BYTE PTR es:[edx+0xb27441d],bh
  416eef:	push   cs
  416ef0:	fst    DWORD PTR [ecx]
  416ef2:	arpl   dx,bp
  416ef4:	fisttp DWORD PTR [esi]
  416ef6:	xchg   ebp,eax
  416ef7:	hlt    
  416ef8:	lahf   
  416ef9:	loope  0x416f70
  416efb:	pop    eax
  416efc:	pop    ecx
  416efd:	push   0xffffffac
  416eff:	fs loope 0x416efb
  416f02:	add    eax,0x9704a03b
  416f07:	mov    esp,0xfc348876
  416f0c:	shl    DWORD PTR ds:0x85ae779c,0x99
  416f13:	imul   edi,DWORD PTR [esi-0x6e1851b7]
  416f1a:	and    BYTE PTR [edx],ah
  416f1c:	sub    al,0x42
  416f1e:	je     0x416eb5
  416f20:	push   DWORD PTR [ebx]
  416f22:	jmp    0x416f19
  416f24:	mov    edx,esi
  416f26:	stc    
  416f27:	jge    0xcd116ec3
  416f2d:	cli    
  416f2e:	dec    ebp
  416f2f:	fnstsw WORD PTR [ebp-0x33f8820d]
  416f35:	push   cs
  416f36:	pop    ss
  416f37:	dec    eax
  416f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f39:	mov    ecx,0x6c82002
  416f3e:	scas   eax,DWORD PTR es:[edi]
  416f3f:	pop    eax
  416f40:	shl    DWORD PTR [ebx+0x3a25cf4c],0xcb
  416f47:	dec    ecx
  416f48:	xor    DWORD PTR [edx-0x63acf906],edx
  416f4e:	push   ecx
  416f4f:	aaa    
  416f50:	dec    ebx
  416f51:	lea    edi,[eax-0x55a5254e]
  416f57:	xchg   esi,eax
  416f58:	cld    
  416f59:	enter  0x6c75,0xa1
  416f5d:	pop    edx
  416f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f5f:	ja     0x416f6f
  416f61:	test   eax,0x2d1b374c
  416f66:	int    0x1a
  416f68:	sub    bh,bl
  416f6a:	stos   DWORD PTR es:[edi],eax
  416f6b:	push   0xb8d86972
  416f70:	loop   0x416f82
  416f72:	xchg   esp,eax
  416f73:	push   ecx
  416f74:	xchg   ebx,eax
  416f75:	fadd   QWORD PTR ds:0x87dbe532
  416f7b:	ja     0x416f79
  416f7d:	mov    esi,0x2bf36cb7
  416f82:	adc    BYTE PTR [ebx],bh
  416f84:	inc    ebx
  416f85:	gs add al,0x85
  416f88:	jno    0x416f2a
  416f8a:	lods   al,BYTE PTR ds:[esi]
  416f8b:	or     DWORD PTR [edi-0x647493b1],esi
  416f91:	mov    DWORD PTR [ebp-0x6f],ebp
  416f94:	fcmovnb st,st(5)
  416f96:	in     eax,dx
  416f97:	loope  0x416fb6
  416f99:	add    edi,ebp
  416f9b:	(bad)  
  416f9c:	xchg   ebx,eax
  416f9d:	aam    0x25
  416f9f:	adc    eax,0x8c2d757a
  416fa4:	mov    ds:0x755fbca9,al
  416fa9:	sbb    al,0xff
  416fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fac:	gs scas eax,DWORD PTR es:[edi]
  416fae:	out    0x43,al
  416fb0:	ret    0x32f7
  416fb3:	inc    esp
  416fb4:	pop    ecx
  416fb5:	push   ecx
  416fb6:	(bad)  
  416fb7:	jmp    0xf352:0x621a1198
  416fbe:	xchg   eax,ebx
  416fc0:	jmp    0xd7f9:0xb5601e74
  416fc7:	jb     0x417001
  416fc9:	ja     0x41700c
  416fcb:	das    
  416fcc:	xchg   ebx,eax
  416fcd:	cli    
  416fce:	daa    
  416fcf:	ror    DWORD PTR [esp-0x4de26bcb],1
  416fd6:	pop    ds
  416fd7:	in     eax,0xf6
  416fd9:	or     DWORD PTR [ebx],edi
  416fdb:	pop    ds
  416fdc:	fstp   QWORD PTR [edi+0x2fbdc339]
  416fe2:	jg     0x416fa0
  416fe4:	rol    BYTE PTR [ebx-0x768af9cd],1
  416fea:	lods   eax,DWORD PTR ds:[esi]
  416feb:	out    dx,al
  416fec:	std    
  416fed:	in     al,0x93
  416fef:	adc    ebp,DWORD PTR ds:0x4dd2510
  416ff5:	mov    esp,0xd6d2cc65
  416ffa:	and    eax,0x278d7ecc
  416fff:	jne    0x416fd0
  417001:	addr16 js 0x416fe9
  417004:	add    bh,BYTE PTR [ebx+0x254b6a88]
  41700a:	fwait
  41700b:	jmp    0x416f8d
  41700d:	jb     0x417087
  41700f:	leave  
  417010:	and    al,0x2c
  417012:	scas   al,BYTE PTR es:[edi]
  417013:	xor    edi,DWORD PTR [eax]
  417015:	out    0x81,eax
  417017:	icebp  
  417018:	sub    eax,0x9518f635
  41701d:	es jb  0x416faa
  417020:	lds    esi,FWORD PTR [ecx-0x2b]
  417023:	aas    
  417024:	ins    BYTE PTR es:[edi],dx
  417025:	(bad)  
  417026:	xor    BYTE PTR [ecx-0x6f],dl
  417029:	sub    BYTE PTR [eax-0x3e],0xcd
  41702d:	fwait
  41702e:	sub    BYTE PTR [esi-0xf],ah
  417031:	and    DWORD PTR [eax+ebx*1+0x79],0xffffffdb
  417036:	aas    
  417037:	loope  0x416fec
  417039:	and    ebp,DWORD PTR [esi+eax*1-0x56]
  41703d:	mov    cl,BYTE PTR [esi]
  41703f:	xor    al,0xa9
  417041:	aad    0x3c
  417043:	mov    dl,0x5e
  417045:	imul   esi,DWORD PTR [esi],0xffffff9d
  417048:	sub    esi,DWORD PTR [eax-0x68100396]
  41704e:	aam    0x91
  417050:	or     BYTE PTR [ebp+0x3633f72e],cl
  417056:	fadd   st(7),st
  417058:	jge    0x41708e
  41705a:	hlt    
  41705b:	lock sbb ch,BYTE PTR [ecx]
  41705e:	test   eax,0x55aa92b1
  417063:	rcr    DWORD PTR [eax-0x2b24ae99],1
  417069:	popf   
  41706a:	arpl   WORD PTR [edi+0x70],dx
  41706d:	ja     0x4170cc
  41706f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417070:	sub    eax,esi
  417072:	(bad)  
  417073:	sbb    ah,bl
  417075:	mov    ecx,0xedb2236a
  41707b:	cmp    DWORD PTR [edx+0x68623789],esp
  417081:	leave  
  417082:	jl     0x417030
  417084:	outs   dx,BYTE PTR ds:[esi]
  417085:	inc    ebp
  417086:	lea    esp,[ebx]
  417088:	ss push ebx
  41708a:	push   esp
  41708b:	or     dh,BYTE PTR [ecx-0x26704129]
  417091:	and    ebx,DWORD PTR [ebx+eiz*8]
  417094:	sar    BYTE PTR [ebx-0x30a039d2],cl
  41709a:	in     eax,0x65
  41709c:	jl     0x417045
  41709e:	lods   eax,DWORD PTR ds:[esi]
  41709f:	ss mov esp,0x6901ba30
  4170a5:	dec    ebp
  4170a6:	mov    dh,0x4
  4170a8:	pop    ss
  4170a9:	loope  0x417068
  4170ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ac:	sub    WORD PTR ds:0x54863301,di
  4170b3:	dec    edx
  4170b4:	ss dec ebp
  4170b6:	ret    
  4170b7:	out    0x56,eax
  4170b9:	pop    esp
  4170ba:	int    0xa4
  4170bc:	pop    ss
  4170bd:	add    DWORD PTR [eax-0x7a],esp
  4170c0:	or     DWORD PTR [ebx-0x1f],0xc05ea993
  4170c7:	(bad)  
  4170c9:	daa    
  4170ca:	or     eax,0x29d70449
  4170cf:	shr    edx,cl
  4170d1:	clc    
  4170d2:	xor    al,0x7
  4170d4:	fwait
  4170d5:	shl    DWORD PTR [edx-0x4],0xdb
  4170d9:	mov    edi,0x576be543
  4170de:	shld   edi,ecx,cl
  4170e1:	inc    ecx
  4170e2:	push   edx
  4170e3:	iret   
  4170e4:	xor    bh,BYTE PTR [ebx+0x79]
  4170e7:	cwde   
  4170e8:	jnp    0x417086
  4170ea:	inc    ebx
  4170eb:	xor    BYTE PTR [ebx+eiz*8-0x71391e14],ah
  4170f2:	(bad)  
  4170f3:	sub    esp,DWORD PTR [eax+0x5992fa61]
  4170f9:	mov    edx,0xb28748bd
  4170fe:	sub    al,0x53
  417100:	mov    bl,0xde
  417102:	(bad)
  417105:	cmp    esi,edx
  417107:	add    DWORD PTR [ebx],0xfffffff2
  41710a:	stos   BYTE PTR es:[edi],al
  41710b:	adc    cl,BYTE PTR [ebp+0x6d1c3008]
  417111:	fnsave [ebp+0x73]
  417114:	inc    esi
  417115:	enter  0x7695,0xe3
  417119:	sbb    edx,edi
  41711b:	jo     0x4170f4
  41711d:	call   0x6fd5:0x23f887aa
  417124:	fdiv   DWORD PTR [edx+0x6c]
  417127:	or     esp,ebp
  417129:	or     DWORD PTR [ebx+0x321eaacb],eax
  41712f:	jo     0x4170e2
  417131:	sub    bh,BYTE PTR [ecx-0x25]
  417134:	xchg   esi,eax
  417135:	xchg   edx,eax
  417136:	ds loop 0x41711c
  417139:	pop    es
  41713a:	call   0x8e49:0xf562efb0
  417141:	and    al,0xd2
  417143:	add    cl,dh
  417145:	add    DWORD PTR [edi],ebp
  417147:	stos   DWORD PTR es:[edi],eax
  417148:	rol    BYTE PTR [ebx+0x3a],1
  41714b:	ds ret 
  41714d:	(bad)  
  41714e:	ds arpl ax,sp
  417151:	add    al,cl
  417153:	push   ecx
  417154:	jg     0x4170e2
  417156:	jp     0x4171cd
  417158:	adc    al,0xfb
  41715a:	or     al,0x23
  41715c:	cmp    al,BYTE PTR [edi+0x5]
  41715f:	aad    0x50
  417161:	push   ss
  417162:	add    BYTE PTR [eax+ebp*8],bl
  417165:	adc    eax,0x808a1b17
  41716a:	lods   eax,DWORD PTR ds:[esi]
  41716b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41716c:	in     al,0x20
  41716e:	add    ch,BYTE PTR [ebp+0x3b47986c]
  417174:	sbb    eax,0x63f0aa4
  417179:	mov    bl,0x20
  41717b:	lahf   
  41717c:	jp     0x4170ff
  41717e:	sahf   
  41717f:	or     edx,eax
  417181:	jnp    0x4171f2
  417183:	les    ecx,FWORD PTR [ebp+0x1d7d90be]
  417189:	jmp    0xcd33:0x3c214231
  417190:	or     DWORD PTR [eax],eax
  417192:	mov    ds,WORD PTR ds:0x42de83fb
  417198:	xchg   esi,eax
  417199:	jo     0x41720d
  41719b:	retf   0x9931
  41719e:	add    eax,0xb15fcfb4
  4171a3:	in     al,dx
  4171a4:	cmp    DWORD PTR [edx-0x4a],eax
  4171a7:	xchg   ecx,eax
  4171a8:	inc    esi
  4171a9:	cmc    
  4171aa:	clc    
  4171ab:	icebp  
  4171ac:	imul   ebp,ebx,0x1bf4599
  4171b2:	inc    ebp
  4171b3:	stc    
  4171b4:	xor    eax,0xbb240b84
  4171b9:	loopne 0x41718e
  4171bb:	pop    edx
  4171bc:	jb     0x417159
  4171be:	sbb    eax,0xe9659841
  4171c3:	mov    esi,0x4008cc82
  4171c8:	xor    esp,DWORD PTR ds:0x15bb80fa
  4171ce:	and    esi,DWORD PTR [edi+edi*1-0x7a]
  4171d2:	out    dx,al
  4171d3:	push   ds
  4171d4:	jg     0x4171a7
  4171d6:	sub    esi,DWORD PTR [esi-0x7fd743d0]
  4171dc:	shr    DWORD PTR [esi+edx*1-0x20f2c94f],cl
  4171e3:	inc    ebx
  4171e4:	aaa    
  4171e5:	popf   
  4171e6:	push   ebx
  4171e7:	fcmovbe st,st(7)
  4171e9:	or     eax,0xd2ab70f2
  4171ee:	jno    0x4171d7
  4171f0:	push   edi
  4171f1:	jae    0x417246
  4171f3:	xchg   DWORD PTR [ecx-0x14],edx
  4171f6:	and    BYTE PTR [edx+ecx*1+0x34dae84b],0xee
  4171fe:	xchg   esp,eax
  4171ff:	pop    esi
  417200:	pop    es
  417201:	pop    edx
  417202:	or     BYTE PTR [eax+0x78],dh
  417205:	fcom   DWORD PTR [bp+si-0x74]
  417209:	push   ecx
  41720a:	aam    0xca
  41720c:	mov    dh,0x6d
  41720e:	xor    cl,BYTE PTR [edx-0x63ba7ef8]
  417214:	inc    ecx
  417215:	xchg   edi,eax
  417216:	mov    ebp,ebp
  417218:	neg    ebp
  41721a:	(bad)  
  41721b:	adc    bl,ch
  41721d:	inc    ecx
  41721e:	xchg   ebp,eax
  41721f:	cwde   
  417220:	push   esi
  417221:	jmp    0x6d39:0x4b0606cb
  417228:	jns    0x4171f0
  41722a:	loope  0x41727e
  41722c:	mov    esp,0x78371d2e
  417231:	pusha  
  417232:	dec    edx
  417233:	arpl   WORD PTR [ebp-0x2543f7df],cx
  417239:	pop    ebp
  41723a:	imul   eax,DWORD PTR [edi+0x7e73ffcf],0x1d
  417241:	das    
  417242:	jnp    0x4171cf
  417244:	inc    ecx
  417245:	mov    bh,0x96
  417247:	push   ebp
  417248:	cmp    BYTE PTR [ebp-0x5a],dl
  41724b:	mov    ?,esp
  41724d:	out    dx,al
  41724e:	push   esp
  41724f:	inc    esp
  417250:	cmc    
  417251:	(bad)  
  417252:	aad    0xa6
  417254:	repnz mov edi,0xd9b04272
  41725a:	bound  edi,QWORD PTR [ebx+0x295a473b]
  417260:	clc    
  417261:	push   es
  417262:	xor    DWORD PTR [edi],ebx
  417264:	and    al,0xd7
  417266:	jmp    0x3fe3:0x3f572ede
  41726d:	mov    ecx,0x16079000
  417272:	jge    0x417275
  417274:	lods   eax,DWORD PTR ds:[esi]
  417275:	(bad)  
  417277:	mov    al,ds:0xdf184e9f
  41727c:	push   edx
  41727d:	sbb    al,0x52
  41727f:	mov    ah,0xb3
  417281:	out    dx,al
  417282:	mov    edx,0xe0e62ebb
  417287:	sbb    BYTE PTR [eax-0x79bba05d],0x46
  41728e:	jne    0x4172fd
  417290:	jbe    0x4172ba
  417292:	and    edi,DWORD PTR [ecx]
  417294:	inc    esi
  417295:	sti    
  417296:	iret   
  417297:	jnp    0x4172df
  417299:	add    BYTE PTR [ecx+0x12911300],dh
  41729f:	popf   
  4172a0:	stos   DWORD PTR es:[edi],eax
  4172a1:	fadd   QWORD PTR [eax]
  4172a3:	iret   
  4172a4:	add    ah,cl
  4172a6:	jmp    0x417310
  4172a8:	lds    ecx,FWORD PTR [esi]
  4172aa:	mov    ah,0xe4
  4172ac:	sbb    DWORD PTR [edi],edi
  4172ae:	pushw  0x43
  4172b1:	pop    esi
  4172b2:	ins    DWORD PTR es:[edi],dx
  4172b3:	inc    ebx
  4172b4:	adc    al,0xe7
  4172b6:	mov    ch,0x5
  4172b8:	pushf  
  4172b9:	xchg   ebx,eax
  4172ba:	sbb    cl,cl
  4172bc:	aad    0x7c
  4172be:	xor    al,0x1a
  4172c0:	fcmovnbe st,st(2)
  4172c2:	ins    DWORD PTR es:[edi],dx
  4172c3:	repz inc ebp
  4172c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172c6:	lds    ebp,FWORD PTR [edi+0x4]
  4172c9:	imul   ebp,DWORD PTR [ecx-0x2b],0x7b
  4172cd:	and    ebx,DWORD PTR [edx]
  4172cf:	push   ebx
  4172d0:	lods   al,BYTE PTR ds:[esi]
  4172d1:	outs   dx,BYTE PTR ds:[esi]
  4172d2:	iret   
  4172d3:	sub    eax,DWORD PTR [eax+0x2]
  4172d6:	add    ebx,DWORD PTR [ebx]
  4172d8:	pop    esi
  4172d9:	push   eax
  4172da:	test   eax,0x8513e1d5
  4172df:	dec    ebx
  4172e0:	jae    0x41729b
  4172e2:	sub    cl,0x2c
  4172e5:	clc    
  4172e6:	xrelease xchg BYTE PTR [ecx-0x34ea90ef],ch
  4172ed:	jo     0x417317
  4172ef:	mov    esi,0x9c9ae813
  4172f4:	rol    ebp,1
  4172f6:	jne    0x417303
  4172f8:	nop
  4172f9:	jl     0x41730c
  4172fb:	in     al,dx
  4172fc:	inc    ebx
  4172fd:	imul   edx,DWORD PTR [ebx-0x4b],0x5f
  417301:	xlat   BYTE PTR ds:[ebx]
  417302:	popf   
  417303:	mov    eax,0x731e2e17
  417308:	sti    
  417309:	dec    edx
  41730a:	sub    al,0xf5
  41730c:	adc    eax,0x434c5fa3
  417311:	adc    eax,DWORD PTR [edi+0x1d]
  417314:	mov    DWORD PTR [eax-0x21],esi
  417317:	pop    ss
  417318:	pop    ds
  417319:	add    DWORD PTR [edx-0x7b],0xffffff96
  41731d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41731e:	mov    DWORD PTR [eax-0x36],eax
  417321:	mov    edx,0xc5ab5dca
  417326:	add    DWORD PTR ds:0x41489e45,esp
  41732c:	fcom   QWORD PTR [ebx]
  41732e:	int    0x30
  417330:	inc    eax
  417331:	popf   
  417332:	add    bh,BYTE PTR [ebx-0x63d880fe]
  417338:	lds    ecx,FWORD PTR ds:0x652f872c
  41733e:	mov    edx,0x23195858
  417343:	cli    
  417344:	lods   al,BYTE PTR ds:[esi]
  417345:	lock dec eax
  417347:	jnp    0x41737c
  417349:	xor    eax,0x6b5a6240
  41734e:	outs   dx,BYTE PTR ds:[esi]
  41734f:	pop    ebx
  417350:	cdq    
  417351:	fild   DWORD PTR [ecx+0xad9f681]
  417357:	cwde   
  417358:	ror    DWORD PTR [ecx],cl
  41735a:	call   DWORD PTR [ebx]
  41735c:	lock std 
  41735e:	and    ch,0x78
  417361:	or     DWORD PTR [edx-0x4a],0x4f43e600
  417368:	sub    eax,0x65d30ce7
  41736d:	or     esi,DWORD PTR [ebp-0x38b06b2c]
  417373:	inc    esi
  417374:	sub    ebp,ecx
  417376:	add    DWORD PTR [esi],edi
  417378:	pop    esp
  417379:	xchg   edx,eax
  41737a:	add    DWORD PTR [edi-0x53],0x78
  41737e:	xor    ecx,edi
  417380:	sbb    eax,0xd5b0afcf
  417385:	xchg   ebx,eax
  417386:	sbb    al,cl
  417388:	xchg   ecx,eax
  417389:	in     eax,0xf7
  41738b:	retf   0xab99
  41738e:	(bad)  [ebx+0x55b266b2]
  417394:	pop    ecx
  417395:	dec    edi
  417396:	xchg   esi,eax
  417397:	and    esp,ebx
  417399:	push   ebp
  41739a:	adc    eax,0xae3ea536
  41739f:	out    0xba,al
  4173a1:	and    al,0x9d
  4173a3:	icebp  
  4173a4:	(bad)  
  4173a5:	cmp    eax,0x4329e29
  4173aa:	mov    dl,0x5a
  4173ac:	push   0x6808fc2e
  4173b1:	mov    eax,ds:0xea03b11a
  4173b6:	outs   dx,BYTE PTR ds:[esi]
  4173b7:	push   edi
  4173b8:	xchg   ebx,eax
  4173b9:	xor    dl,al
  4173bb:	enter  0xccf7,0x7f
  4173bf:	sub    esp,edi
  4173c1:	and    BYTE PTR [ebp+0x29df5f85],cl
  4173c7:	test   eax,ebp
  4173c9:	xchg   edx,eax
  4173ca:	jmp    0xcde8:0x3b5b263b
  4173d1:	or     eax,0xbc61fb31
  4173d6:	push   eax
  4173d7:	es jp  0x4173c3
  4173da:	bound  ecx,QWORD PTR [ebp-0x26]
  4173dd:	mov    ah,0xb6
  4173df:	cmp    dl,cl
  4173e1:	inc    eax
  4173e2:	inc    edi
  4173e3:	push   cs
  4173e4:	call   0x7da:0xae52fb5b
  4173eb:	jae    0x417415
  4173ed:	and    ebx,DWORD PTR [ebp+0x29da924e]
  4173f3:	out    0xae,eax
  4173f5:	pop    ebx
  4173f6:	lahf   
  4173f7:	lahf   
  4173f8:	mov    ebp,0x485c2507
  4173fd:	int3   
  4173fe:	jae    0x4173fa
  417400:	mov    ?,WORD PTR [esi]
  417402:	leave  
  417403:	adc    BYTE PTR [edx],bl
  417405:	add    al,0xca
  417407:	xor    al,0x5b
  417409:	xchg   ebx,eax
  41740a:	call   FWORD PTR [edi+0x7]
  41740d:	es mov dh,0x55
  417410:	fist   WORD PTR [esi]
  417412:	dec    esi
  417413:	jne    0x4173d4
  417415:	xor    al,0xbf
  417417:	mov    BYTE PTR [esi+0x4174ee05],cl
  41741d:	cmp    eax,0x9ac0ee8d
  417422:	jmp    0xa539b3cb
  417427:	outs   dx,DWORD PTR ds:[esi]
  417428:	xchg   ecx,eax
  417429:	push   ebx
  41742a:	or     al,dl
  41742c:	sbb    eax,0xbbe5cca4
  417431:	dec    ebx
  417432:	cli    
  417433:	xchg   DWORD PTR [ecx+0x7f],ecx
  417436:	stc    
  417437:	sbb    edi,DWORD PTR [ebx-0x60]
  41743a:	and    DWORD PTR fs:[ebp+0x3a715275],ebx
  417441:	repz or al,0xa7
  417444:	(bad)  
  417446:	mov    esp,0x9dec9709
  41744b:	ror    ebp,1
  41744d:	jb     0x41743b
  41744f:	imul   esp,ebx,0xe49bddbb
  417455:	repnz cdq 
  417457:	and    BYTE PTR [eax],dh
  417459:	cmp    DWORD PTR [edx],0x90bd2b80
  41745f:	jo     0x4174c4
  417461:	mov    dh,0x0
  417463:	dec    esi
  417464:	pusha  
  417465:	inc    edx
  417466:	dec    edx
  417467:	ja     0x417484
  417469:	(bad)  
  41746b:	jecxz  0x417407
  41746d:	addr16 mov ds:0x52cb,eax
  417471:	pop    ecx
  417472:	cld    
  417473:	(bad)  
  417475:	xchg   esi,eax
  417476:	xchg   esi,eax
  417477:	sub    BYTE PTR [edx],dh
  417479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41747a:	fbld   TBYTE PTR [edi]
  41747c:	inc    eax
  41747d:	mov    edi,0x86b611d2
  417482:	dec    ebx
  417483:	jae    0x41743f
  417485:	(bad)  
  417486:	retf   0x2a5f
  417489:	inc    esp
  41748a:	or     al,0x39
  41748c:	icebp  
  41748d:	enter  0xcb0c,0x36
  417491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417492:	push   ds
  417493:	(bad)  
  417496:	mov    WORD PTR [ebx],fs
  417498:	jne    0x417487
  41749a:	out    dx,eax
  41749b:	mov    bh,dh
  41749d:	mov    al,ds:0xfe70abd0
  4174a2:	loopne 0x4174c7
  4174a4:	std    
  4174a5:	add    esi,DWORD PTR [edx-0x64d123e4]
  4174ab:	sbb    BYTE PTR [ebp+0x27798b86],bl
  4174b1:	ds mov edx,fs
  4174b4:	ins    BYTE PTR es:[edi],dx
  4174b5:	sub    edx,edx
  4174b7:	push   es
  4174b8:	test   DWORD PTR [edi],ecx
  4174ba:	ss jb  0x41752b
  4174bd:	cmp    ah,BYTE PTR [eax+0x4f484034]
  4174c3:	sub    esi,eax
  4174c5:	xchg   DWORD PTR ds:0xe8a76b9f,ebp
  4174cb:	cli    
  4174cc:	add    al,BYTE PTR [eax+0x7db42896]
  4174d2:	fdiv   QWORD PTR [edx+0x26597304]
  4174d8:	sub    esp,DWORD PTR [eax+0x5b5789f5]
  4174de:	outs   dx,BYTE PTR ds:[esi]
  4174df:	nop
  4174e0:	ja     0x417511
  4174e2:	pop    edx
  4174e3:	(bad)  
  4174e4:	xor    al,0x2
  4174e6:	enter  0x11ee,0x25
  4174ea:	sar    DWORD PTR [ebp-0x6ca6a024],0x6f
  4174f1:	and    eax,0x3ff8831a
  4174f6:	xchg   ebx,eax
  4174f7:	movups XMMWORD PTR [edi+0x42],xmm7
  4174fb:	mov    esi,DWORD PTR [ebx+edx*4+0x51f6ee4d]
  417502:	xchg   dl,al
  417504:	bound  edx,QWORD PTR [eax-0x1e]
  417507:	or     BYTE PTR [esi-0x11624086],bh
  41750d:	scas   al,BYTE PTR es:[edi]
  41750e:	xchg   DWORD PTR [ecx],ecx
  417510:	dec    esp
  417511:	inc    ecx
  417512:	push   cs
  417513:	or     eax,0xfb6fafee
  417518:	fisub  WORD PTR [ebx]
  41751a:	(bad)  
  41751b:	jns    0x41751d
  41751d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41751e:	mov    dl,0xee
  417520:	shl    BYTE PTR [ecx-0x76],cl
  417523:	sub    ecx,DWORD PTR [edx+ebx*2+0x7d]
  417527:	nop
  417528:	into   
  417529:	outs   dx,DWORD PTR ds:[esi]
  41752a:	dec    eax
  41752b:	adc    ah,BYTE PTR [esi+0xb32dbbd]
  417531:	dec    edx
  417532:	loop   0x41758c
  417534:	cdq    
  417535:	inc    eax
  417536:	jbe    0x4175ab
  417538:	cmp    bl,BYTE PTR [ebx+eiz*2]
  41753b:	mul    DWORD PTR [esi]
  41753d:	mov    BYTE PTR [ecx-0x4b7c468],al
  417543:	sar    BYTE PTR [esi-0x7cc9e729],0x8d
  41754a:	pop    ebp
  41754b:	mov    esp,0xe7b96e78
  417550:	mov    edx,0x2f688044
  417555:	test   al,0x36
  417557:	mov    edx,ds
  417559:	(bad)  
  41755a:	scas   al,BYTE PTR es:[edi]
  41755b:	and    bl,bl
  41755d:	and    BYTE PTR [esi],cl
  41755f:	sti    
  417560:	push   edi
  417561:	out    0x83,al
  417563:	push   edi
  417564:	pop    es
  417565:	cdq    
  417566:	aas    
  417567:	int3   
  417568:	mov    ds:0x84f64449,al
  41756d:	data16 daa 
  41756f:	fld    TBYTE PTR [esi]
  417571:	test   BYTE PTR [esi+0x64],ch
  417574:	lods   eax,DWORD PTR ds:[esi]
  417575:	call   0x95b7:0xa4fef33d
  41757c:	pop    es
  41757d:	jo     0x417545
  41757f:	jp     0x4175a2
  417581:	cmp    eax,0x6187f9e
  417586:	pop    ebp
  417587:	xchg   edi,eax
  417588:	inc    esi
  417589:	sub    edi,edi
  41758b:	push   esp
  41758c:	(bad)  
  41758d:	sbb    BYTE PTR [ecx+0x43ad884],bl
  417593:	(bad)  
  417594:	out    0xc8,eax
  417596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417597:	xor    al,0x80
  417599:	mov    ds:0xf709e73f,eax
  41759e:	rcr    DWORD PTR [edi+0x7022d27e],0xa1
  4175a5:	pop    ecx
  4175a6:	aam    0xad
  4175a8:	mov    ebp,0x6d7f4dc8
  4175ad:	outs   dx,DWORD PTR ds:[esi]
  4175ae:	sbb    al,0x63
  4175b0:	push   edi
  4175b1:	mov    al,0xbd
  4175b3:	cmp    al,0x4a
  4175b5:	lahf   
  4175b6:	mov    al,ds:0xfde2535e
  4175bb:	mov    edi,0x530ce759
  4175c0:	inc    ecx
  4175c1:	dec    esi
  4175c2:	loope  0x4175eb
  4175c4:	int    0xc1
  4175c6:	jnp    0x417641
  4175c8:	xor    al,0xe
  4175ca:	xchg   ebx,eax
  4175cb:	sar    BYTE PTR [esi-0x4a],0x1c
  4175cf:	mov    al,0x2b
  4175d1:	cmp    al,0xb4
  4175d3:	popa   
  4175d4:	ud2    
  4175d6:	repnz sbb esp,DWORD PTR [esi]
  4175d9:	icebp  
  4175da:	sub    eax,0x5b5c3b89
  4175df:	out    0xce,al
  4175e1:	xchg   ecx,ecx
  4175e3:	xchg   ebx,eax
  4175e4:	xchg   ebx,eax
  4175e5:	ins    DWORD PTR es:[edi],dx
  4175e6:	cmp    ebx,DWORD PTR [edx]
  4175e8:	dec    eax
  4175e9:	icebp  
  4175ea:	das    
  4175eb:	xchg   ecx,eax
  4175ec:	std    
  4175ed:	fadd   DWORD PTR [ebx]
  4175ef:	dec    ecx
  4175f0:	call   0x51da:0x2b13e0b4
  4175f7:	xor    eax,0x33881784
  4175fc:	out    dx,al
  4175fd:	out    0xb9,eax
  4175ff:	xor    ebp,DWORD PTR [esi-0x4188b5e8]
  417605:	add    BYTE PTR [edx+0x22],al
  417608:	sbb    eax,0xedb21456
  41760d:	pusha  
  41760e:	xor    eax,0xeba6fc39
  417613:	ins    DWORD PTR es:[edi],dx
  417614:	lock pop edx
  417616:	add    eax,0x8699c0cd
  41761b:	leave  
  41761c:	xor    esp,DWORD PTR [ebx-0x6c]
  41761f:	cmp    DWORD PTR [edx],esp
  417621:	pop    esi
  417622:	fs into 
  417624:	mov    eax,ds:0xe08dc3cc
  417629:	cli    
  41762a:	rcl    BYTE PTR [eax+eiz*4-0x63020eda],cl
  417631:	iret   
  417632:	xchg   edi,eax
  417633:	aam    0x66
  417635:	xchg   BYTE PTR [ebp-0x6],bl
  417638:	aam    0xde
  41763a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41763b:	dec    edi
  41763c:	adc    al,dh
  41763e:	mov    ds:0xe2e35ee2,eax
  417643:	adc    esi,DWORD PTR [eax-0x4cc1b008]
  417649:	mov    esp,0xbf84f09a
  41764e:	jmp    0x3695:0x1500838d
  417655:	into   
  417656:	lock jbe 0x4175ed
  417659:	xor    ch,BYTE PTR [eax-0xd]
  41765c:	jle    0x41760e
  41765e:	cs xor al,0x9c
  417661:	test   eax,0x3b438cb5
  417666:	xchg   ebp,eax
  417667:	adc    BYTE PTR [ebp+0x4f9290c7],0x10
  41766e:	fsub   QWORD PTR [ebx]
  417670:	shl    BYTE PTR [edi],1
  417672:	cmc    
  417673:	mov    eax,ds:0x844da75c
  417678:	mov    edi,0x9de3c544
  41767d:	ins    BYTE PTR es:[edi],dx
  41767e:	gs int 0x2d
  417681:	rcr    esi,cl
  417683:	outs   dx,DWORD PTR ds:[esi]
  417684:	in     eax,dx
  417685:	mov    eax,0x6f9c727
  41768a:	bnd ret 
  41768c:	xchg   edx,eax
  41768d:	jle    0x417661
  41768f:	pop    ecx
  417690:	scas   al,BYTE PTR es:[edi]
  417691:	cmp    dl,BYTE PTR [edi]
  417693:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  417695:	aam    0x2a
  417697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417698:	mov    ch,0x92
  41769a:	xor    ecx,DWORD PTR [eax-0xbbf7b1d]
  4176a0:	scas   eax,DWORD PTR es:[edi]
  4176a1:	fcom   QWORD PTR [ebx-0x7af35b8]
  4176a7:	stc    
  4176a8:	inc    ecx
  4176a9:	sbb    eax,0x9d24578d
  4176ae:	loope  0x417697
  4176b0:	jb     0x417706
  4176b2:	lds    esp,FWORD PTR [eax+0x7844ba75]
  4176b8:	cli    
  4176b9:	loop   0x417710
  4176bb:	aaa    
  4176bc:	adc    eax,0x940ff82f
  4176c1:	es push es
  4176c3:	gs jg  0x417657
  4176c6:	xor    eax,0xe4a2b6e9
  4176cb:	into   
  4176cc:	xchg   ebp,eax
  4176cd:	jo     0x4176e9
  4176cf:	das    
  4176d0:	mov    DWORD PTR ds:0x765705ae,0x7cf0c090
  4176da:	outs   dx,BYTE PTR ds:[esi]
  4176db:	or     eax,0xe2005e42
  4176e0:	int3   
  4176e1:	mov    DWORD PTR [ebx-0x4e],esp
  4176e4:	sub    DWORD PTR [esi+esi*8+0x2322cb69],ebp
  4176eb:	xchg   dl,ch
  4176ed:	jecxz  0x417738
  4176ef:	sub    al,0x39
  4176f1:	bound  edi,QWORD PTR [ebx-0x78]
  4176f4:	imul   ebp,DWORD PTR [edi],0x39fd769d
  4176fa:	out    0x50,eax
  4176fc:	xlat   BYTE PTR ds:[ebx]
  4176fd:	iret   
  4176fe:	fdiv   DWORD PTR [ebx+0x1d]
  417701:	jne    0x4176e6
  417703:	xchg   esi,eax
  417704:	mov    ebp,0xfcaf7e3e
  417709:	and    edi,DWORD PTR [ecx-0x40190908]
  41770f:	xor    esp,DWORD PTR cs:[edi+ecx*1-0x2d]
  417714:	cwde   
  417715:	loopne 0x417765
  417717:	stos   BYTE PTR es:[edi],al
  417718:	jl     0x4176cc
  41771a:	mov    ecx,0x65887eb1
  41771f:	(bad)  
  417720:	out    0x1d,eax
  417722:	xchg   ebp,eax
  417723:	out    dx,al
  417724:	imul   ebp,DWORD PTR [eax],0x63
  417727:	push   ss
  417728:	cmp    edi,DWORD PTR [edx-0x2a]
  41772b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41772c:	sub    al,0x61
  41772e:	popa   
  41772f:	xchg   ebp,eax
  417730:	mov    eax,ds:0x2620ddc4
  417735:	test   DWORD PTR [edi+ebp*4+0x62f98297],ebx
  41773c:	and    esi,DWORD PTR [eax]
  41773e:	cmp    al,0x71
  417740:	ficomp WORD PTR [ecx-0x51]
  417743:	sbb    bl,BYTE PTR [esi+0xa476d43]
  417749:	enter  0x322e,0xa7
  41774d:	push   es
  41774e:	xor    BYTE PTR [esp+ebp*2-0x5f],bh
  417752:	test   al,0xa7
  417754:	je     0x417717
  417756:	fucom  st(5)
  417758:	ja     0x417739
  41775a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775b:	jle    0x4176f3
  41775d:	call   0x948c:0xe88c0824
  417764:	jle    0x41774b
  417766:	jo     0x41772e
  417768:	inc    ebp
  417769:	mov    dh,0x20
  41776b:	dec    edi
  41776c:	xchg   ebp,eax
  41776d:	mov    WORD PTR [eax-0xe],ss
  417770:	push   DWORD PTR [esp+ecx*4-0x1a]
  417774:	test   al,0x2e
  417776:	inc    esp
  417777:	add    BYTE PTR [ebx],dh
  417779:	mov    ebp,0x451919c1
  41777e:	add    eax,0xe1bde59
  417783:	jae    0x41779b
  417785:	adc    BYTE PTR [ebx+eiz*2-0x31bcc08],dl
  41778c:	adc    DWORD PTR es:[edi],ebx
  41778f:	aas    
  417790:	int    0x1e
  417792:	test   DWORD PTR [ecx+0x78545f97],esi
  417798:	mov    al,0xb4
  41779a:	sti    
  41779b:	xchg   DWORD PTR [ecx-0x4d],esi
  41779e:	stos   DWORD PTR es:[edi],eax
  41779f:	or     BYTE PTR [eax-0x16],dh
  4177a2:	aas    
  4177a3:	pop    ebp
  4177a4:	pop    ebx
  4177a5:	mov    ds:0x8a910152,al
  4177aa:	imul   edx,DWORD PTR [edi+esi*2-0x32],0xb655a4f9
  4177b2:	in     eax,0x2f
  4177b4:	adc    ecx,DWORD PTR [edi-0x248e477b]
  4177ba:	inc    eax
  4177bb:	ficomp DWORD PTR [ecx]
  4177bd:	fld    DWORD PTR [ebp+0x5f0dfdaf]
  4177c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c4:	inc    eax
  4177c5:	loope  0x4177f7
  4177c7:	mov    esp,0x4c347d81
  4177cc:	push   0xffffffc9
  4177ce:	in     al,0x94
  4177d0:	sub    BYTE PTR [edx],cl
  4177d2:	xor    al,0xfb
  4177d4:	in     al,0xfd
  4177d6:	mov    WORD PTR [eax-0x253408a6],ds
  4177dc:	lds    ecx,FWORD PTR ds:0x55069a62
  4177e2:	and    DWORD PTR [ecx-0x69],eax
  4177e5:	dec    ecx
  4177e6:	jbe    0x41778c
  4177e8:	out    dx,al
  4177e9:	daa    
  4177ea:	out    0xf3,eax
  4177ec:	mov    ebx,0x775a2f5c
  4177f1:	xchg   esi,eax
  4177f2:	mov    ebp,0x9ed6a7f3
  4177f7:	retf   
  4177f8:	jmp    0x42f2:0x23c18e88
  4177ff:	push   cs
  417800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417801:	mov    eax,0x74bc91c8
  417806:	mov    esp,0xd912f29c
  41780b:	clc    
  41780c:	cmc    
  41780d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41780e:	sbb    DWORD PTR [ecx+0x37],ebp
  417811:	iret   
  417812:	pushf  
  417813:	adc    al,0x3a
  417815:	fsubr  DWORD PTR cs:[ebp-0x73]
  417819:	shl    BYTE PTR [ecx],0x1c
  41781c:	inc    esi
  41781d:	xchg   ebp,eax
  41781e:	push   ss
  41781f:	dec    ecx
  417820:	or     BYTE PTR [ecx+0x79],al
  417823:	(bad)  
  417826:	xchg   ebp,eax
  417827:	stc    
  417828:	mov    edx,0x9f75978e
  41782d:	and    al,BYTE PTR [esi+esi*8]
  417830:	push   0xf685acae
  417835:	mov    ebx,0xba1edfdc
  41783a:	in     al,0x18
  41783c:	fld    QWORD PTR [ebx]
  41783e:	outs   dx,DWORD PTR ds:[esi]
  41783f:	retf   
  417840:	outs   dx,DWORD PTR ds:[esi]
  417841:	sbb    al,0x26
  417843:	and    eax,0xdd4e9fe4
  417848:	aad    0xb7
  41784a:	pop    esp
  41784b:	dec    edx
  41784c:	dec    ebp
  41784d:	scas   al,BYTE PTR es:[edi]
  41784e:	xchg   ebp,eax
  41784f:	mov    edi,0x405da8e8
  417854:	or     DWORD PTR [eax-0xea4b256],esp
  41785a:	in     eax,dx
  41785b:	sub    bh,dh
  41785d:	or     DWORD PTR [edi-0x6f49049c],ebp
  417863:	jmp    0x6ede:0x69eaa866
  41786a:	jb     0x417872
  41786c:	call   0x39e7ca51
  417871:	shl    ch,0xc6
  417874:	mov    DWORD PTR [ebx+0x67bbe374],ecx
  41787a:	mov    edi,0x80ce829e
  41787f:	jle    0x4178d8
  417881:	sub    al,0xae
  417883:	inc    esi
  417884:	in     al,0x43
  417886:	add    BYTE PTR [edi+0x50],dl
  417889:	mov    ds:0xadac2580,al
  41788e:	repz int3 
  417890:	xor    BYTE PTR fs:[ebp+0x6a],dh
  417894:	mov    DWORD PTR [eax],ecx
  417896:	ss shl BYTE PTR ss:[ecx-0x502a1b6],1
  41789e:	ret    
  41789f:	mov    ebx,0x24a38022
  4178a4:	lahf   
  4178a5:	pop    es
  4178a6:	cmp    ah,bl
  4178a8:	mov    ebp,0xf8465ffa
  4178ad:	or     cl,BYTE PTR [edx+esi*4]
  4178b0:	pushf  
  4178b1:	cwde   
  4178b2:	mov    eax,0x2c8714c9
  4178b7:	xor    BYTE PTR [ebp-0x57c31bc2],dh
  4178bd:	lods   eax,DWORD PTR ds:[esi]
  4178be:	call   0x627f:0x80e39fed
  4178c5:	dec    esp
  4178c6:	push   esi
  4178c7:	addr16 and bl,ah
  4178ca:	push   edi
  4178cb:	and    al,0x12
  4178cd:	cmp    edi,DWORD PTR [edx+0x7b]
  4178d0:	push   esp
  4178d1:	inc    ebp
  4178d2:	sbb    al,BYTE PTR [eax-0x32b2aba2]
  4178d8:	mov    eax,ds:0x123664e0
  4178dd:	xchg   edi,eax
  4178de:	dec    esi
  4178df:	jnp    0x4178f0
  4178e1:	xchg   edx,eax
  4178e2:	das    
  4178e3:	and    BYTE PTR [eax-0x60aa586],cl
  4178e9:	aam    0xbc
  4178eb:	and    eax,0xe1073dca
  4178f0:	dec    esp
  4178f1:	and    ah,BYTE PTR [ebp+eiz*1-0x4070b271]
  4178f8:	inc    esi
  4178f9:	sbb    edx,DWORD PTR [esi]
  4178fb:	mov    ah,0x20
  4178fd:	int    0xe2
  4178ff:	das    
  417900:	cmc    
  417901:	inc    ecx
  417902:	mov    BYTE PTR [edx-0x92d8ac6],ah
  417908:	jns    0x41788b
  41790a:	call   0x6be2:0xd8f4877e
  417911:	mov    DWORD PTR ds:0xacdc72fb,edi
  417917:	sub    dl,dh
  417919:	in     al,dx
  41791a:	xor    al,0x7a
  41791c:	push   ss
  41791d:	lahf   
  41791e:	pop    esp
  41791f:	arpl   WORD PTR [ecx+0x2d3b593c],sp
  417925:	fdivr  QWORD PTR [ecx+ebx*2]
  417928:	in     eax,dx
  417929:	js     0x4178f9
  41792b:	les    esp,FWORD PTR [esi+0x3d]
  41792e:	enter  0x2081,0xe6
  417932:	pop    esi
  417933:	fistp  QWORD PTR [edi]
  417935:	adc    DWORD PTR [edx-0x60],esp
  417938:	mov    WORD PTR [ecx-0x2ecf3c97],fs
  41793e:	and    ch,BYTE PTR [esi]
  417940:	mov    ds:0xa0456bd,al
  417945:	and    BYTE PTR [edx+0x6d],ah
  417948:	loopne 0x41790e
  41794a:	enter  0x89e,0x50
  41794e:	xchg   edi,eax
  41794f:	sub    BYTE PTR [edi+0x499d5a16],bh
  417955:	call   0x8d1a:0xc6c82e30
  41795c:	les    ecx,FWORD PTR [eax]
  41795e:	mov    ds:0xe9ef4afb,al
  417963:	jns    0x417914
  417965:	mov    edx,0x796464c9
  41796a:	(bad)  
  41796b:	push   ebp
  41796c:	bound  ecx,QWORD PTR [esi+ebx*1]
  41796f:	push   edx
  417970:	mov    edx,0xb0d9d221
  417975:	dec    edi
  417976:	repnz cli 
  417978:	fcmovnbe st,st(4)
  41797a:	inc    ebp
  41797b:	in     eax,dx
  41797c:	jne    0x41790c
  41797e:	imul   di,WORD PTR [edx+0x27b2dba6],0x759e
  417987:	(bad)  
  417988:	jb     0x4179f4
  41798a:	cli    
  41798b:	into   
  41798c:	pop    ebp
  41798d:	add    ebp,DWORD PTR [eax-0x39ae3cec]
  417993:	div    DWORD PTR [edi-0x3e50e768]
  417999:	aaa    
  41799a:	push   ebp
  41799b:	xchg   ebx,eax
  41799c:	in     al,0xa
  41799e:	std    
  41799f:	jmp    0x417955
  4179a1:	fcomp  QWORD PTR [eax-0x172b0641]
  4179a7:	mov    edx,0x3059ebe0
  4179ac:	adc    cl,BYTE PTR [edi]
  4179ae:	dec    ebx
  4179af:	out    dx,al
  4179b0:	sbb    al,0xb
  4179b2:	push   ss
  4179b3:	aas    
  4179b4:	pop    esi
  4179b5:	xchg   edx,eax
  4179b6:	pop    ds
  4179b7:	xchg   edi,eax
  4179b8:	repz adc esi,edx
  4179bb:	xchg   esi,eax
  4179bc:	jne    0x41796c
  4179be:	les    esp,FWORD PTR [ecx-0x71]
  4179c1:	dec    esp
  4179c2:	xchg   ebp,eax
  4179c3:	xor    cl,BYTE PTR [esi+0x2a7b531a]
  4179c9:	imul   edx,DWORD PTR gs:[edx+0x14845f5d],0xffffff93
  4179d1:	add    al,0x4d
  4179d3:	inc    edi
  4179d4:	sub    DWORD PTR es:[ecx+0x26393b2e],edx
  4179db:	mov    ebp,0xaa137b69
  4179e0:	dec    esi
  4179e1:	cmp    DWORD PTR [ebp+0x28fae133],ebp
  4179e7:	daa    
  4179e8:	mov    bh,0x87
  4179ea:	cs or  al,0x47
  4179ed:	and    al,0xcb
  4179ef:	lods   eax,DWORD PTR ds:[esi]
  4179f0:	add    al,0x26
  4179f2:	rol    al,0x57
  4179f5:	dec    eax
  4179f6:	out    0x59,al
  4179f8:	sahf   
  4179f9:	cmp    al,0x4
  4179fb:	pop    esp
  4179fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179fd:	int3   
  4179fe:	scas   eax,DWORD PTR es:[edi]
  4179ff:	lock add DWORD PTR [ebp-0xf],esi
  417a03:	dec    edx
  417a04:	mov    bl,0xd7
  417a06:	and    eax,0xdc0ae234
  417a0b:	or     ebp,0x1e11db47
  417a11:	sbb    ebp,ebp
  417a13:	call   0x5bbe:0x2f892f9
  417a1a:	jbe    0x417a78
  417a1c:	pop    edi
  417a1d:	push   esp
  417a1e:	dec    esp
  417a1f:	add    BYTE PTR [ebx],ch
  417a21:	imul   esi,DWORD PTR [edx+0x30],0xe9b4b764
  417a28:	jl     0x4179f5
  417a2a:	mov    ah,0xa1
  417a2c:	das    
  417a2d:	pushf  
  417a2e:	mov    al,ds:0x937d6d75
  417a33:	mov    BYTE PTR [ecx+0x1a2884f8],cl
  417a39:	mov    edi,0x2f469154
  417a3e:	popf   
  417a3f:	inc    eax
  417a40:	mov    ebp,0xd2ad399a
  417a45:	mov    bl,BYTE PTR [edx]
  417a47:	outs   dx,DWORD PTR ds:[esi]
  417a48:	out    0x1d,eax
  417a4a:	push   eax
  417a4b:	mov    ah,0xa4
  417a4d:	and    DWORD PTR [esi+ebp*2-0x9a2986],eax
  417a54:	into   
  417a55:	push   ebp
  417a56:	in     al,dx
  417a57:	retf   
  417a58:	cli    
  417a59:	cmp    DWORD PTR [edi-0x44],edx
  417a5c:	add    edi,DWORD PTR [edi-0x59]
  417a5f:	mov    DWORD PTR [ebx+ecx*8],ecx
  417a62:	out    0x86,al
  417a64:	jmp    0x417acd
  417a66:	xchg   ecx,eax
  417a67:	mov    dh,0x2b
  417a69:	or     eax,0x36357cc6
  417a6e:	ds aaa 
  417a70:	fld    DWORD PTR [edi-0x2b9ad8d4]
  417a76:	mov    eax,0xefeefb24
  417a7b:	pop    ebp
  417a7c:	cs and al,0x11
  417a7f:	xchg   ebx,eax
  417a80:	loope  0x417a6a
  417a82:	and    BYTE PTR [edi+0x55],ch
  417a85:	xor    DWORD PTR [ebp+0x79],esi
  417a88:	shr    BYTE PTR [eax],cl
  417a8a:	call   0x4171:0x42516739
  417a91:	xor    BYTE PTR [ebp-0x316d1ec4],0x2c
  417a98:	adc    DWORD PTR [edi-0x8],0xff0016b0
  417a9f:	out    0x8,al
  417aa1:	xchg   ebx,eax
  417aa2:	push   esp
  417aa3:	scas   eax,DWORD PTR es:[edi]
  417aa4:	pop    edx
  417aa5:	sub    bh,bh
  417aa7:	rol    BYTE PTR [edx+0x2fc19103],0x63
  417aae:	xchg   esp,eax
  417aaf:	sbb    al,0x7e
  417ab1:	fisub  WORD PTR [ebp+eiz*8+0x48]
  417ab5:	jle    0x417b18
  417ab7:	dec    ecx
  417ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ab9:	cwde   
  417aba:	shl    BYTE PTR [ecx],0x48
  417abd:	out    0x8,al
  417abf:	dec    esi
  417ac0:	adc    ecx,eax
  417ac2:	adc    DWORD PTR [ecx-0x3d2755bf],esi
  417ac8:	add    eax,0x7f3ec3ef
  417acd:	ret    0xd28b
  417ad0:	cdq    
  417ad1:	inc    esi
  417ad2:	xchg   esi,eax
  417ad3:	xor    BYTE PTR [eax+0x6b],0x8e
  417ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ad8:	rcl    BYTE PTR [edx+0xe752642],0x86
  417adf:	test   al,0x6c
  417ae1:	stc    
  417ae2:	push   es
  417ae3:	xchg   esi,eax
  417ae4:	dec    eax
  417ae5:	es pusha 
  417ae7:	inc    edi
  417ae8:	jp     0x417a82
  417aea:	pop    ebp
  417aeb:	and    eax,0x1fc258b0
  417af0:	popa   
  417af1:	or     ah,BYTE PTR [esi-0x678bbce9]
  417af7:	pop    es
  417af8:	loop   0x417b75
  417afa:	call   0x7a46:0xb6a99f91
  417b01:	das    
  417b02:	loop   0x417ae3
  417b04:	mov    esi,0xb4e7e367
  417b09:	cmp    eax,0xae5eabc2
  417b0e:	rcr    DWORD PTR [esi+0x13],1
  417b11:	sar    bh,0x6f
  417b14:	in     eax,dx
  417b15:	jno    0x417b31
  417b17:	(bad)  
  417b18:	pop    edx
  417b19:	mov    edi,0x234cd57f
  417b1e:	or     eax,0xe20afc4b
  417b23:	out    0xa9,eax
  417b25:	pop    ecx
  417b26:	adc    bl,dl
  417b28:	or     ch,BYTE PTR [edi+0x25]
  417b2b:	ret    
  417b2c:	out    0xc9,al
  417b2e:	int    0x25
  417b30:	mov    ds:0xc8bde610,eax
  417b35:	dec    edi
  417b36:	out    dx,al
  417b37:	jo     0x417b58
  417b39:	and    DWORD PTR [edx-0x29],ecx
  417b3c:	push   cs
  417b3d:	fcom   QWORD PTR [eax-0x233435e7]
  417b43:	dec    esi
  417b44:	fstp   QWORD PTR [esi-0x44d7f4cb]
  417b4a:	(bad)
  417b4d:	loopne 0x417b9d
  417b4f:	das    
  417b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b51:	sub    DWORD PTR [esi-0x945958f],eax
  417b57:	or     edx,0x40
  417b5a:	cs xor dh,dh
  417b5d:	mov    ds:0x92e5f178,al
  417b62:	pop    eax
  417b63:	mov    esp,0xc3182d08
  417b68:	push   ebx
  417b69:	sub    eax,0x7b16ea9
  417b6e:	inc    eax
  417b6f:	mov    DWORD PTR [ebx-0x39],esp
  417b72:	push   ebx
  417b73:	jmp    0x8a6f492b
  417b78:	daa    
  417b79:	std    
  417b7a:	shl    BYTE PTR [edx+0x4a],cl
  417b7d:	lods   al,BYTE PTR ds:[esi]
  417b7e:	test   BYTE PTR [ebp+0x65b37420],bl
  417b84:	sbb    BYTE PTR [ecx-0x64],0xdd
  417b88:	imul   dh
  417b8a:	pop    ds
  417b8b:	and    BYTE PTR es:[ebx],cl
  417b8e:	add    eax,0xbcb2ed78
  417b93:	inc    ebp
  417b94:	cmp    BYTE PTR [edx+0x61fdcf39],dh
  417b9a:	xor    eax,ecx
  417b9c:	mov    ebx,0xb7007cc7
  417ba1:	popa   
  417ba2:	data16 jnp 0x417b34
  417ba5:	out    dx,al
  417ba6:	scas   al,BYTE PTR es:[edi]
  417ba7:	dec    esi
  417ba8:	mov    dh,BYTE PTR [ebx-0x4e]
  417bab:	lahf   
  417bac:	jge    0x417bdf
  417bae:	cdq    
  417baf:	dec    eax
  417bb0:	adc    DWORD PTR [ecx+0x4e],esp
  417bb3:	ins    BYTE PTR es:[edi],dx
  417bb4:	shr    BYTE PTR [ecx-0x77637271],cl
  417bba:	xchg   esi,eax
  417bbb:	jbe    0x417b66
  417bbd:	cld    
  417bbe:	pushf  
  417bbf:	xchg   eax,esp
  417bc1:	out    0xfc,eax
  417bc3:	fs (bad) 
  417bc5:	sub    BYTE PTR [edi],ah
  417bc7:	push   ebp
  417bc8:	add    eax,0x1e8c94e6
  417bcd:	(bad)  
  417bce:	cmp    al,0x71
  417bd0:	add    al,0x9b
  417bd2:	arpl   WORD PTR [edi],si
  417bd4:	shr    BYTE PTR fs:[edi-0x73],1
  417bd8:	hlt    
  417bd9:	cs pop ds
  417bdb:	es pop es
  417bdd:	and    BYTE PTR [ecx-0x7eed1e9c],bl
  417be3:	fnsave [ebp-0x8]
  417be6:	pushf  
  417be7:	daa    
  417be8:	jne    0x417c4c
  417bea:	popa   
  417beb:	mov    dl,0x64
  417bed:	push   ds
  417bee:	jmp    0x7bd7bd53
  417bf3:	outs   dx,DWORD PTR ds:[esi]
  417bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bf5:	sar    DWORD PTR [eax],1
  417bf7:	test   al,0x82
  417bf9:	xor    BYTE PTR [edx-0x29119ca8],ch
  417bff:	(bad)  
  417c00:	outs   dx,DWORD PTR ds:[esi]
  417c01:	call   0xc2b9d7da
  417c06:	cmp    DWORD PTR [ebx],0x41035b9f
  417c0c:	xchg   esi,eax
  417c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c0e:	lahf   
  417c0f:	jne    0x417c05
  417c11:	xchg   edi,eax
  417c12:	es fs push es
  417c15:	inc    esp
  417c16:	mov    ebx,db2
  417c19:	dec    ebx
  417c1a:	ret    0xf30b
  417c1d:	rcr    BYTE PTR [ebp+0x5e],1
  417c20:	add    al,BYTE PTR [ebx-0x3f]
  417c23:	fs into 
  417c25:	inc    eax
  417c26:	cmp    bh,BYTE PTR [ecx-0x79874105]
  417c2c:	scas   eax,DWORD PTR es:[edi]
  417c2d:	out    0xd2,al
  417c2f:	shr    esp,1
  417c31:	pfsub  mm4,QWORD PTR [esi]
  417c35:	xor    esi,ecx
  417c37:	sub    eax,0xb0214de8
  417c3c:	mov    BYTE PTR [ebp-0xb7fba7],dh
  417c42:	mov    bl,0xe8
  417c44:	jns    0x417c6f
  417c46:	cmp    BYTE PTR [eax-0x2b],ch
  417c49:	push   esp
  417c4a:	xchg   ebx,eax
  417c4b:	fdiv   QWORD PTR [eax+0x5]
  417c4e:	leave  
  417c4f:	sub    esp,eax
  417c51:	jns    0x417c88
  417c53:	pop    es
  417c54:	int3   
  417c55:	test   BYTE PTR [ebx],0xf
  417c58:	jmp    0x417c8c
  417c5a:	(bad)  
  417c5b:	repz inc eax
  417c5d:	out    0x3a,eax
  417c5f:	cmp    eax,0x79b51a83
  417c64:	mov    WORD PTR [eax-0x5ef1ed7e],?
  417c6a:	outs   dx,BYTE PTR ds:[esi]
  417c6b:	inc    esi
  417c6c:	xchg   esp,eax
  417c6d:	sahf   
  417c6e:	jb     0x417ccf
  417c70:	or     edi,DWORD PTR [ebp-0x53023554]
  417c76:	int3   
  417c77:	mov    bl,0xe0
  417c79:	cdq    
  417c7a:	xor    bh,BYTE PTR [edi-0x2cc48449]
  417c80:	out    dx,eax
  417c81:	add    BYTE PTR [edi+0x37d461fd],cl
  417c87:	inc    eax
  417c88:	sub    dh,BYTE PTR [edx]
  417c8a:	cli    
  417c8b:	mov    dl,0xe8
  417c8d:	es mov ebp,0x15b388ed
  417c93:	rcl    ah,1
  417c95:	push   0x33
  417c97:	jle    0x417cff
  417c99:	fadd   DWORD PTR [ebx+0x37]
  417c9c:	call   0x1c697f66
  417ca1:	bound  ebx,QWORD PTR [eax+0x0]
  417ca4:	fwait
  417ca5:	std    
  417ca6:	retf   0x8fe7
  417ca9:	and    eax,0xd7eb37e2
  417cae:	push   es
  417caf:	popa   
  417cb0:	lock fbstp TBYTE PTR [ebx+ebp*1-0x4f]
  417cb5:	and    eax,0xcd59aca0
  417cba:	lahf   
  417cbb:	sub    ebx,ebp
  417cbd:	cmp    al,0xf2
  417cbf:	in     eax,dx
  417cc0:	pop    eax
  417cc1:	in     eax,dx
  417cc2:	ins    DWORD PTR es:[edi],dx
  417cc3:	aaa    
  417cc4:	daa    
  417cc5:	or     BYTE PTR [ebx+0x42],ah
  417cc8:	jg     0x417c88
  417cca:	mov    esi,0x5eeb5ad8
  417ccf:	mov    bl,0x29
  417cd1:	hlt    
  417cd2:	or     eax,0xf372ede2
  417cd7:	sbb    bl,BYTE PTR [ebp+0x2116b671]
  417cdd:	jne    0x417c78
  417cdf:	cmp    dh,BYTE PTR [ebx]
  417ce1:	xchg   DWORD PTR [eax+0xef7c192],esi
  417ce7:	repz repz stc 
  417cea:	mov    esp,0xb61e4a82
  417cef:	jmp    0x417d69
  417cf1:	pop    ecx
  417cf2:	ficomp DWORD PTR [edx+0x36f30dbc]
  417cf8:	xor    ch,BYTE PTR [edi-0x70870514]
  417cfe:	ret    
  417cff:	setb   BYTE PTR [ecx]
  417d02:	ins    BYTE PTR es:[di],dx
  417d04:	add    al,BYTE PTR [edi-0x7ccab950]
  417d0a:	es adc ebx,0xe800af6c
  417d11:	mov    ebx,0xf27995ac
  417d16:	xchg   esi,eax
  417d17:	shr    BYTE PTR [edi],1
  417d19:	fwait
  417d1a:	test   dl,0xd0
  417d1d:	xor    bh,BYTE PTR [ecx-0x5e]
  417d20:	push   ss
  417d21:	in     eax,0x3f
  417d23:	fst    DWORD PTR [ebx-0x5dfe4534]
  417d29:	or     DWORD PTR [edi-0x75],eax
  417d2c:	sub    DWORD PTR [eax],edi
  417d2e:	icebp  
  417d2f:	pushf  
  417d30:	sub    DWORD PTR ds:0xceb86e38,edx
  417d36:	in     al,0xe4
  417d38:	xchg   BYTE PTR [ebx-0x3a5190e4],cl
  417d3e:	loopne 0x417d44
  417d40:	dec    eax
  417d41:	(bad)  
  417d42:	outs   dx,DWORD PTR ds:[esi]
  417d43:	loop   0x417d79
  417d45:	fwait
  417d46:	and    dl,BYTE PTR [edi+0x44d6c384]
  417d4c:	sub    DWORD PTR [ebp+0x28121cbd],0x38a62120
  417d56:	jmp    0xdfe8:0xb045e900
  417d5d:	push   0x3222eed4
  417d62:	mov    ds:0x65e7ebbc,eax
  417d67:	aam    0xc8
  417d69:	mov    al,0x27
  417d6b:	dec    edx
  417d6c:	(bad)  
  417d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d6e:	adc    DWORD PTR [esi],eax
  417d70:	and    ebx,ebp
  417d72:	cli    
  417d73:	(bad)  
  417d74:	sub    DWORD PTR ds:0x573063c,edi
  417d7a:	and    DWORD PTR [edi-0x3a5d8cd0],ebp
  417d80:	data16 xor al,0x7b
  417d83:	xchg   edx,eax
  417d84:	sub    al,0xa1
  417d86:	into   
  417d87:	test   al,0x6f
  417d89:	dec    esp
  417d8a:	loope  0x417d9d
  417d8c:	push   ds
  417d8d:	cdq    
  417d8e:	mov    eax,0x15a183a0
  417d93:	mov    dl,0x57
  417d95:	(bad)  
  417d96:	pop    ecx
  417d97:	fist   WORD PTR [edi]
  417d99:	fwait
  417d9a:	inc    eax
  417d9b:	mov    esp,ebx
  417d9d:	ins    BYTE PTR es:[edi],dx
  417d9e:	fincstp 
  417da0:	and    BYTE PTR [esi-0x7b],bl
  417da3:	adc    edi,DWORD PTR [ebx+0x44e43cc7]
  417da9:	mov    bh,0x99
  417dab:	xor    al,BYTE PTR [eax]
  417dad:	inc    esi
  417dae:	stc    
  417daf:	jbe    0x417e03
  417db1:	sbb    eax,0xf7654211
  417db6:	hlt    
  417db7:	pop    esi
  417db8:	dec    esp
  417db9:	loop   0x417db6
  417dbb:	fistp  WORD PTR [edx]
  417dbd:	xchg   DWORD PTR ds:0x894219d2,ebx
  417dc3:	bswap  edi
  417dc5:	pusha  
  417dc6:	repz ja 0x417d63
  417dc9:	mov    esi,0xbd1022b9
  417dce:	or     al,0x63
  417dd0:	inc    ebp
  417dd1:	sub    DWORD PTR [edi+0x298e7f4a],edi
  417dd7:	jno    0x417d89
  417dd9:	pop    esi
  417dda:	rcl    ch,cl
  417ddc:	add    DWORD PTR [esi],edi
  417dde:	adc    ah,bl
  417de0:	(bad)  
  417de1:	scas   al,BYTE PTR es:[edi]
  417de2:	or     eax,0x503dc87b
  417de7:	cmp    eax,0x6a63acba
  417dec:	or     DWORD PTR [bx+di-0x6028],esi
  417df1:	pop    edx
  417df2:	or     al,0xf4
  417df4:	xor    dl,BYTE PTR [eax+ecx*2]
  417df7:	rcr    DWORD PTR [ecx-0x72],1
  417dfa:	into   
  417dfb:	add    al,0x13
  417dfd:	cmp    bh,BYTE PTR [edi+0x1ec2df4d]
  417e03:	mov    eax,0x1a84e1ba
  417e08:	pop    ebx
  417e09:	dec    ebp
  417e0a:	addr16 mov eax,ds:0xc032
  417e0e:	sar    esp,cl
  417e10:	addr16 jnp 0x417df3
  417e13:	inc    esp
  417e14:	push   esp
  417e15:	scas   al,BYTE PTR es:[edi]
  417e16:	adc    al,0xb2
  417e18:	xlat   BYTE PTR ds:[ebx]
  417e19:	and    DWORD PTR [eax],ecx
  417e1b:	sbb    eax,DWORD PTR [eax-0x20e2b49]
  417e21:	enter  0x9da1,0x71
  417e25:	mov    ax,0xfc7e
  417e29:	dec    esp
  417e2a:	es xor ebx,esp
  417e2d:	(bad)  
  417e2f:	cwde   
  417e30:	bound  esi,QWORD PTR [ecx-0x1465c31e]
  417e36:	add    ebx,DWORD PTR [esi+eiz*8+0x3e]
  417e3a:	xor    eax,0xb4e455ab
  417e3f:	jae    0x417e60
  417e41:	dec    edx
  417e42:	test   BYTE PTR [ebp+0x689d5739],dh
  417e48:	cmp    edi,edi
  417e4a:	loope  0x417e38
  417e4c:	push   ebp
  417e4d:	ror    DWORD PTR [eax+0x2dd9ddab],cl
  417e53:	or     dh,BYTE PTR [ecx+0xeac784e]
  417e59:	adc    DWORD PTR [ecx],esi
  417e5b:	ins    DWORD PTR es:[edi],dx
  417e5c:	push   edx
  417e5d:	cld    
  417e5e:	enter  0xf65e,0x14
  417e62:	je     0x417e1d
  417e64:	iret   
  417e65:	std    
  417e66:	xchg   edi,eax
  417e67:	mov    ?,WORD PTR [ebx+0x6]
  417e6a:	sbb    BYTE PTR [ebx-0x2f],ch
  417e6d:	push   0x19aed53e
  417e72:	mov    ebx,0x35c426d8
  417e77:	mov    dh,0x2d
  417e79:	jae    0x417e1b
  417e7b:	pushf  
  417e7c:	and    esi,DWORD PTR [edi+0x204033fb]
  417e82:	xor    al,0x5e
  417e84:	sbb    eax,DWORD PTR [esi-0x48]
  417e87:	int    0x46
  417e89:	or     DWORD PTR [esi-0x4d],0x2a
  417e8d:	sub    dl,BYTE PTR ds:0xf87ce736
  417e93:	add    BYTE PTR [ecx-0x19],0x28
  417e97:	loope  0x417e4f
  417e99:	fcom   QWORD PTR [edx+0x4afcd487]
  417e9f:	adc    BYTE PTR [ebx],ah
  417ea1:	mov    esp,0x6f9e56d2
  417ea6:	in     al,dx
  417ea7:	popf   
  417ea8:	(bad)  [esp+esi*4+0x78]
  417eac:	and    ecx,DWORD PTR [ecx-0x3a62e87e]
  417eb2:	or     bh,ch
  417eb4:	jne    0x417e92
  417eb6:	imul   esp,esp,0xb0a27485
  417ebc:	idiv   DWORD PTR [edi-0x15a649d5]
  417ec2:	ret    0x7edf
  417ec5:	cdq    
  417ec6:	pop    es
  417ec7:	push   cs
  417ec8:	arpl   ax,sp
  417eca:	mov    dh,BYTE PTR [edi-0xe]
  417ecd:	or     eax,0x1292b44
  417ed2:	arpl   WORD PTR [ebx],bx
  417ed4:	jge    0x417f36
  417ed6:	pop    esi
  417ed7:	adc    al,0x39
  417ed9:	cmp    dl,BYTE PTR [eax+0x23b6c6a2]
  417edf:	ins    DWORD PTR es:[edi],dx
  417ee0:	aaa    
  417ee1:	div    dh
  417ee3:	push   0xe4f6af97
  417ee8:	inc    ecx
  417ee9:	jle    0x417f5b
  417eeb:	mov    bl,0x6b
  417eed:	lods   al,BYTE PTR ds:[esi]
  417eee:	in     al,dx
  417eef:	push   ds
  417ef0:	rcl    ch,1
  417ef2:	and    eax,0x2bc16a3c
  417ef7:	inc    edi
  417ef8:	lea    ecx,[esi-0xce2317b]
  417efe:	mov    esi,0x13e58677
  417f03:	(bad)  [eax+0x767ab905]
  417f09:	xchg   edx,eax
  417f0a:	pop    ds
  417f0b:	fwait
  417f0c:	or     bh,BYTE PTR [edx]
  417f0e:	clc    
  417f0f:	fild   WORD PTR [eax]
  417f11:	and    DWORD PTR [edx-0x3d47331f],eax
  417f17:	loope  0x417efc
  417f19:	rcl    ebx,1
  417f1b:	pop    ecx
  417f1c:	pop    ebp
  417f1d:	push   edx
  417f1e:	pop    esp
  417f1f:	arpl   WORD PTR [edx*8+0x6482480a],dx
  417f26:	add    al,0x3e
  417f28:	hlt    
  417f29:	int3   
  417f2a:	add    al,0x67
  417f2c:	push   ds
  417f2d:	pop    ecx
  417f2e:	retf   
  417f2f:	jae    0x417f4b
  417f31:	pop    edx
  417f32:	rcl    DWORD PTR [eax],0x8b
  417f35:	repnz inc edx
  417f37:	dec    ebp
  417f38:	test   DWORD PTR [ecx],eax
  417f3a:	js     0x417ed7
  417f3c:	(bad)
  417f3f:	mov    eax,DWORD PTR [esi+0x3f]
  417f42:	out    dx,eax
  417f43:	inc    edi
  417f44:	lods   al,BYTE PTR ds:[esi]
  417f45:	icebp  
  417f46:	scas   eax,DWORD PTR es:[edi]
  417f47:	xchg   edx,eax
  417f48:	sbb    ecx,DWORD PTR [ebx+0x4ec4b4b5]
  417f4e:	jnp    0x417f6a
  417f50:	mov    dl,ch
  417f52:	push   ds
  417f53:	mov    dl,0x6f
  417f55:	fild   QWORD PTR [edx]
  417f57:	jae    0x417f4b
  417f59:	stos   BYTE PTR es:[edi],al
  417f5a:	add    ebx,DWORD PTR [edi]
  417f5c:	js     0x417f23
  417f5e:	jns    0x417fc3
  417f60:	xchg   ecx,eax
  417f61:	dec    esp
  417f62:	ss clc 
  417f64:	push   0xc286f140
  417f69:	pushf  
  417f6a:	push   cs
  417f6b:	pop    esp
  417f6c:	pop    esp
  417f6d:	xchg   esi,eax
  417f6e:	ss jecxz 0x417f18
  417f71:	leave  
  417f72:	sub    eax,eax
  417f74:	pop    es
  417f75:	and    dl,dh
  417f77:	and    ebx,esp
  417f79:	test   DWORD PTR ds:0x5df29698,esp
  417f7f:	push   ebx
  417f80:	push   es
  417f81:	push   0x1dbe1c08
  417f86:	ss or  edi,ebx
  417f89:	(bad)  
  417f8a:	lahf   
  417f8b:	mov    dl,0x54
  417f8d:	sbb    BYTE PTR [esi],ch
  417f8f:	push   cs
  417f90:	mov    esi,0x178246e0
  417f95:	cmp    bh,BYTE PTR [ebp+0x1c]
  417f98:	xchg   BYTE PTR [eax-0x76],ah
  417f9b:	out    dx,eax
  417f9c:	dec    edi
  417f9d:	xor    dh,BYTE PTR [eax-0x1023032d]
  417fa3:	imul   bh
  417fa5:	je     0x417ff0
  417fa7:	dec    esi
  417fa8:	sbb    ah,BYTE PTR [edx]
  417faa:	repnz (bad) 
  417fac:	in     al,dx
  417fad:	repz jae 0x417fa7
  417fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb1:	pop    ds
  417fb2:	ss xor al,0xda
  417fb5:	rcl    DWORD PTR [edx+edx*8+0x14],0x31
  417fba:	outs   dx,BYTE PTR ds:[esi]
  417fbb:	mov    BYTE PTR [ebp-0x6c52f664],ch
  417fc1:	in     al,dx
  417fc2:	jno    0x417f46
  417fc4:	xor    ebx,DWORD PTR [esi-0x4bdfbe66]
  417fca:	sub    ebx,DWORD PTR [ebp-0xd]
  417fcd:	shl    cl,cl
  417fcf:	mov    edi,0x1f69e0a2
  417fd4:	xchg   ebp,eax
  417fd5:	call   0xb7bfa7f4
  417fda:	fwait
  417fdb:	pop    ebp
  417fdc:	xchg   esp,eax
  417fdd:	mov    cl,0x6a
  417fdf:	imul   eax,DWORD PTR [eax],0xfd06e36d
  417fe5:	mov    ds:0x83b9ce03,eax
  417fea:	aaa    
  417feb:	inc    ebp
  417fec:	fimul  DWORD PTR [esi]
  417fee:	add    BYTE PTR [edx],dh
  417ff0:	ss xchg ecx,eax
  417ff2:	ins    BYTE PTR es:[edi],dx
  417ff3:	mov    eax,0x2e9cd3cf
  417ff8:	out    dx,al
  417ff9:	inc    ebx
  417ffa:	adc    DWORD PTR [eax],0xde040691
  418000:	pop    edx
  418001:	add    eax,0xb95ee8d2
  418006:	inc    esp
  418007:	dec    eax
  418008:	leave  
  418009:	cmp    al,BYTE PTR [edx+0x568ab98f]
  41800f:	inc    eax
  418010:	push   esi
  418011:	daa    
  418012:	mov    al,ds:0x98b80a1c
  418017:	push   edx
  418018:	add    edx,DWORD PTR [edx]
  41801a:	push   edi
  41801b:	cmp    esp,esi
  41801d:	fnstcw WORD PTR [edi+0x5e]
  418020:	(bad)  
  418021:	loope  0x417ffb
  418023:	push   ecx
  418024:	and    DWORD PTR [ebx-0x1b],eax
  418027:	push   esp
  418028:	(bad)  
  418029:	ffree  st(7)
  41802b:	adc    dl,bl
  41802d:	or     BYTE PTR [ecx+0x65],bh
  418030:	sbb    al,0xa7
  418032:	mov    bh,BYTE PTR [edx+0x29f699d2]
  418038:	and    DWORD PTR [edi],ebx
  41803a:	jnp    0x41800c
  41803c:	adc    DWORD PTR [edx],edx
  41803e:	sahf   
  41803f:	popf   
  418040:	sbb    bl,dh
  418042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418043:	mov    cs:0xe83cb325,eax
  418049:	loope  0x4180c7
  41804b:	fwait
  41804c:	jns    0x41802c
  41804e:	mov    cl,0x7a
  418050:	test   eax,0xcd919a1c
  418055:	dec    esi
  418056:	clc    
  418057:	(bad)  [edx]
  418059:	sbb    BYTE PTR [eax+0xb],bl
  41805c:	fwait
  41805d:	cmp    eax,0x398d5d67
  418062:	lds    ebp,FWORD PTR [edx+eax*8-0x72]
  418066:	xor    DWORD PTR [edi-0x4f7368a],eax
  41806c:	lock sbb ch,0x43
  418070:	fsub   QWORD PTR [ecx+0x604cc283]
  418076:	jb     0x418063
  418078:	push   esp
  418079:	lods   eax,DWORD PTR ds:[esi]
  41807a:	aad    0x73
  41807c:	mov    WORD PTR [ecx-0x4dc52ccb],?
  418082:	mov    al,0x8d
  418084:	fisttp WORD PTR [esp+ecx*1-0x43]
  418088:	cwde   
  418089:	scas   al,BYTE PTR es:[edi]
  41808a:	mov    ebp,0xac6f0590
  41808f:	push   esi
  418090:	xor    al,0xef
  418092:	cmp    dl,bh
  418094:	pop    eax
  418095:	jo     0x4180f7
  418097:	xchg   edx,eax
  418098:	aam    0xec
  41809a:	imul   eax,DWORD PTR ds:0x34f5e846,0x3d41f415
  4180a4:	fidiv  WORD PTR [ecx+0x24eb5135]
  4180ab:	imul   esp,DWORD PTR [eax+ebp*8],0x63625ada
  4180b2:	int3   
  4180b3:	adc    BYTE PTR [edi+0x2e],cl
  4180b6:	dec    ebp
  4180b7:	mov    esi,0x87f4f51c
  4180bc:	in     eax,dx
  4180bd:	mov    edx,0x7e66a9b0
  4180c2:	mov    DWORD PTR [ecx+0x81e6c95],ecx
  4180c8:	xor    al,0x30
  4180ca:	dec    eax
  4180cb:	and    DWORD PTR [esi],0xde669cee
  4180d1:	daa    
  4180d2:	out    0x86,eax
  4180d4:	lahf   
  4180d5:	mov    ch,0x5a
  4180d7:	outs   dx,BYTE PTR ds:[esi]
  4180d8:	sub    BYTE PTR ds:[ebx+0x20],bl
  4180dc:	inc    ebp
  4180dd:	rcl    DWORD PTR [esi],1
  4180df:	and    BYTE PTR [ebp-0x7],dh
  4180e2:	aad    0x51
  4180e4:	xchg   ebp,eax
  4180e5:	mul    BYTE PTR [esi-0x15]
  4180e8:	cdq    
  4180e9:	and    eax,esp
  4180eb:	imul   ecx,eax,0xa208c836
  4180f1:	and    eax,0x865fe098
  4180f6:	push   esp
  4180f7:	mov    ds:0xae09ffd5,al
  4180fc:	adc    eax,0x4bf1ff08
  418101:	and    DWORD PTR [ebp-0x2722b20e],edi
  418107:	enter  0xd917,0xb1
  41810b:	cmp    al,BYTE PTR [esi]
  41810d:	fld    QWORD PTR [ecx-0x12aa282f]
  418113:	ins    BYTE PTR es:[edi],dx
  418114:	sub    dl,bh
  418116:	out    0x29,eax
  418118:	and    BYTE PTR [edx+0x4d],0xa4
  41811c:	cmp    eax,DWORD PTR [eax-0x3e]
  41811f:	pop    edx
  418120:	aad    0x61
  418122:	mov    WORD PTR [esi-0x795d822b],?
  418128:	mov    ds:0x4ab38dfe,eax
  41812d:	pusha  
  41812e:	loop   0x4180cb
  418130:	(bad)  
  418132:	mov    bh,0xd9
  418134:	test   BYTE PTR [eax-0x7a],cl
  418137:	(bad)  
  418138:	mov    esi,0xc1f9b375
  41813d:	call   0x753251e3
  418142:	outs   dx,DWORD PTR ds:[esi]
  418143:	jl     0x418167
  418145:	pop    esp
  418146:	jge    0x418108
  418148:	imul   esp,DWORD PTR [edx-0x4fa47214],0x7ead4fea
  418152:	aaa    
  418153:	mov    eax,0xc2f335f
  418158:	div    BYTE PTR [edx]
  41815a:	inc    edi
  41815b:	push   ebp
  41815c:	mul    DWORD PTR [esi-0x30]
  41815f:	jnp    0x41813a
  418161:	inc    ebx
  418162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418163:	mov    cl,0x9f
  418165:	ins    DWORD PTR es:[edi],dx
  418166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418167:	les    edi,FWORD PTR [ecx-0x1f709c56]
  41816d:	sbb    ebp,DWORD PTR [eax-0x4cca1e59]
  418173:	loopne 0x41812e
  418175:	push   esi
  418176:	jle    0x418182
  418178:	sub    edi,DWORD PTR [ecx]
  41817a:	mov    ebp,0x7abedf3e
  41817f:	lahf   
  418180:	mov    ch,0x38
  418182:	in     al,0xbe
  418184:	cmc    
  418185:	jbe    0x41816e
  418187:	pop    ebx
  418188:	hlt    
  418189:	ret    
  41818a:	data16 mov bh,BYTE PTR [ecx]
  41818d:	loope  0x418125
  41818f:	ins    BYTE PTR es:[edi],dx
  418190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418191:	out    0x98,al
  418193:	stos   DWORD PTR es:[edi],eax
  418194:	in     eax,dx
  418195:	mov    bh,0x4b
  418197:	pop    edx
  418198:	mov    ebp,0x97642913
  41819d:	cmp    ecx,0xffffffa9
  4181a0:	or     cl,BYTE PTR [edx-0x207e9e57]
  4181a6:	push   eax
  4181a7:	xchg   edx,eax
  4181a8:	mov    esi,0x4fffd3ae
  4181ad:	adc    al,0x1
  4181af:	jae    0x41819d
  4181b1:	mov    ax,ds:0x5e69150
  4181b7:	mov    ecx,0x6b10ef2d
  4181bc:	iret   
  4181bd:	mov    bh,0x87
  4181bf:	scas   eax,DWORD PTR es:[edi]
  4181c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181c1:	pop    ss
  4181c2:	out    dx,eax
  4181c3:	clc    
  4181c4:	rcr    ebx,0xae
  4181c7:	inc    edi
  4181c8:	shl    ah,0x79
  4181cb:	mov    edi,0x570ce942
  4181d0:	enter  0xa070,0xb2
  4181d4:	loope  0x4181b1
  4181d6:	out    dx,al
  4181d7:	add    esp,DWORD PTR [ecx-0x77402b2c]
  4181dd:	dec    ebp
  4181de:	dec    cl
  4181e0:	inc    eax
  4181e1:	jnp    0x41825d
  4181e3:	xchg   ebp,edx
  4181e5:	pop    esi
  4181e6:	pop    ds
  4181e7:	stos   BYTE PTR es:[edi],al
  4181e8:	shl    BYTE PTR [ebx+0x153b8773],cl
  4181ee:	fcomp  QWORD PTR [ecx]
  4181f0:	add    al,0x61
  4181f2:	cli    
  4181f3:	adc    BYTE PTR [ebx-0x5d3203e9],ah
  4181f9:	and    edi,DWORD PTR ds:0x75c6f866
  4181ff:	lock ret 
  418201:	(bad)  
  418202:	aas    
  418203:	in     eax,dx
  418204:	mov    BYTE PTR [edx+eiz*8+0x3d],0xc7
  418209:	push   es
  41820a:	mov    eax,0xd3f4589b
  41820f:	outs   dx,BYTE PTR ds:[esi]
  418210:	sub    al,0x92
  418212:	xor    eax,0x83a5d777
  418217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418218:	rcl    DWORD PTR gs:[ebp+0x6fa970d7],1
  41821f:	xor    DWORD PTR [eax],edi
  418221:	mov    dh,0x94
  418223:	dec    esi
  418224:	aaa    
  418225:	mov    ebx,DWORD PTR [ebx]
  418227:	pop    ebx
  418228:	pop    edi
  418229:	and    ah,ch
  41822b:	and    ecx,DWORD PTR [ebx]
  41822d:	(bad)  
  41822e:	call   0x67282af4
  418233:	cli    
  418234:	and    bl,BYTE PTR [eax-0x1]
  418237:	call   0x6105:0x38b01541
  41823e:	fcmovnbe st,st(6)
  418240:	push   0xb
  418242:	sbb    al,cl
  418244:	xor    ebx,ebp
  418246:	dec    edi
  418248:	lods   eax,DWORD PTR ds:[esi]
  418249:	mov    dl,0x68
  41824b:	mov    ds:0xc691b305,al
  418250:	push   ebp
  418251:	sbb    eax,0x3b7c2d9d
  418256:	xlat   BYTE PTR ds:[ebx]
  418257:	mov    cl,0xd0
  418259:	mov    dl,0x8c
  41825b:	push   edi
  41825c:	shl    bl,0xca
  41825f:	sbb    eax,0xbc887df0
  418264:	mov    al,ds:0x326dcb9f
  418269:	rcl    BYTE PTR [edx-0x61],0xde
  41826d:	jne    0x418258
  41826f:	and    ecx,DWORD PTR [eax]
  418271:	arpl   WORD PTR [ebx-0xb886b3f],si
  418277:	clc    
  418278:	clc    
  418279:	adc    BYTE PTR [edx-0x3a12aa3],bl
  41827f:	shl    ebp,0x39
  418282:	cmc    
  418283:	inc    ebp
  418284:	loop   0x418220
  418286:	sub    esp,DWORD PTR [ebx+0x3673af40]
  41828c:	jb     0x418297
  41828e:	inc    edi
  41828f:	inc    edi
  418290:	stc    
  418291:	push   esp
  418292:	enter  0x791d,0x4b
  418296:	add    dl,BYTE PTR [ecx]
  418298:	jmp    0x3d49:0xeebf7da1
  41829f:	test   DWORD PTR [eax],edx
  4182a1:	mov    WORD PTR [edx-0x6e3227f2],?
  4182a7:	xchg   ebx,eax
  4182a8:	inc    ecx
  4182a9:	mov    DWORD PTR [ebx-0x4e],0x2ced7f32
  4182b0:	dec    ebx
  4182b1:	stos   DWORD PTR es:[edi],eax
  4182b2:	sub    ebp,edi
  4182b4:	out    dx,eax
  4182b5:	shr    ebp,cl
  4182b7:	mov    bl,BYTE PTR [edx+0x7c]
  4182ba:	pop    edx
  4182bb:	sbb    eax,DWORD PTR [ebx+0x52]
  4182be:	mov    dl,0x83
  4182c0:	aas    
  4182c1:	stos   BYTE PTR es:[edi],al
  4182c2:	ror    BYTE PTR [ebp-0x58],1
  4182c5:	enter  0xcb30,0x8f
  4182c9:	out    dx,eax
  4182ca:	test   BYTE PTR [ebx-0x7b99483b],0x77
  4182d1:	popf   
  4182d2:	das    
  4182d3:	(bad)  
  4182d5:	mov    ah,0x10
  4182d7:	hlt    
  4182d8:	shl    BYTE PTR [edi-0x5fd7c890],1
  4182de:	cmp    eax,DWORD PTR [eax]
  4182e0:	sub    bh,BYTE PTR [eax+0x60]
  4182e3:	inc    esp
  4182e4:	in     eax,dx
  4182e5:	and    dh,BYTE PTR [edi+0x11]
  4182e8:	push   ecx
  4182e9:	(bad)  [edi]
  4182eb:	add    al,0x95
  4182ed:	clc    
  4182ee:	cs (bad) 
  4182f0:	pushf  
  4182f1:	lock mov esp,0xe0397be3
  4182f7:	mov    bh,0x99
  4182f9:	outs   dx,DWORD PTR ds:[esi]
  4182fa:	out    dx,al
  4182fb:	in     al,dx
  4182fc:	lods   al,BYTE PTR ds:[esi]
  4182fd:	bound  edi,QWORD PTR [ebx]
  4182ff:	fadd   QWORD PTR [esi]
  418301:	jl     0x41830d
  418303:	mov    ebx,0x10c223d4
  418308:	lahf   
  418309:	mov    dl,0x3f
  41830b:	and    al,0x31
  41830d:	jmp    0xd0d40227
  418312:	or     bl,ah
  418314:	jns    0x418357
  418316:	sbb    bh,BYTE PTR [ebx]
  418318:	inc    esp
  418319:	jo     0x418325
  41831b:	jno    0x4182c7
  41831d:	push   cs
  41831e:	cmp    al,0xd9
  418320:	xor    al,0x26
  418322:	test   eax,0x15634cfa
  418327:	outs   dx,DWORD PTR ds:[esi]
  418328:	adc    dh,0x59
  41832b:	stos   BYTE PTR es:[edi],al
  41832c:	inc    ebx
  41832d:	fucomp st(3)
  41832f:	jg     0x418348
  418331:	jo     0x4182dc
  418333:	in     eax,dx
  418334:	mov    ebx,0x16d15c33
  418339:	fadd   QWORD PTR [edx]
  41833b:	or     al,0x4d
  41833d:	sti    
  41833e:	out    dx,eax
  41833f:	push   ebp
  418340:	sti    
  418341:	aad    0xe2
  418343:	retf   0x608b
  418346:	lods   al,BYTE PTR ds:[esi]
  418347:	sbb    BYTE PTR [esi-0x50bbea20],cl
  41834d:	aas    
  41834e:	mov    al,ds:0x9a07afe5
  418353:	aad    0xeb
  418355:	add    ah,BYTE PTR [edx]
  418357:	xchg   ecx,eax
  418358:	aam    0x9e
  41835a:	adc    esi,DWORD PTR [ecx+0x1f]
  41835d:	pusha  
  41835e:	xchg   ecx,eax
  41835f:	or     cl,bh
  418361:	pop    ss
  418362:	mov    esp,0x1fc3e3a3
  418367:	pop    es
  418368:	fldenv [esi-0x1d]
  41836b:	dec    ecx
  41836c:	mov    al,0x4a
  41836e:	and    BYTE PTR [ebp-0x6e],dl
  418371:	adc    BYTE PTR [edx-0x44679553],bh
  418377:	dec    esp
  418378:	out    dx,al
  418379:	iret   
  41837a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41837b:	and    eax,0x29b06697
  418380:	cmp    eax,0x84d494bb
  418385:	cmp    eax,0xc9f525cb
  41838a:	add    al,0xa1
  41838c:	out    dx,eax
  41838d:	sub    eax,0x7b040a66
  418392:	js     0x418369
  418394:	mov    al,gs:0x9ea03e7c
  41839a:	dec    BYTE PTR [esi]
  41839c:	(bad)  
  41839e:	sub    ebx,DWORD PTR [esi]
  4183a0:	repnz (bad) 
  4183a2:	test   eax,0x5bb1dcbe
  4183a7:	int3   
  4183a8:	ins    DWORD PTR es:[edi],dx
  4183a9:	in     al,dx
  4183aa:	add    eax,0xe9d1f26f
  4183af:	mov    dl,0x58
  4183b1:	pushf  
  4183b2:	mov    dl,0x38
  4183b4:	test   ah,bl
  4183b6:	or     dl,BYTE PTR [eax]
  4183b8:	mov    ebp,0xd6206087
  4183bd:	mov    BYTE PTR [ebx+0x7d],ah
  4183c0:	push   cs
  4183c1:	cmc    
  4183c2:	sti    
  4183c3:	(bad)  
  4183c4:	jl     0x418360
  4183c6:	xchg   esi,eax
  4183c7:	pop    esp
  4183c8:	jle    0x4183d0
  4183ca:	fstp   DWORD PTR ds:0x1e0d1949
  4183d0:	(bad)  
  4183d1:	jmp    0x91a9067
  4183d6:	fs call 0x987862f2
  4183dc:	mov    bl,0x41
  4183de:	bound  ebp,QWORD PTR [esi+0x8c260f7]
  4183e4:	data16 scas al,BYTE PTR es:[edi]
  4183e6:	fcom   DWORD PTR ds:0x590cfa27
  4183ec:	cs xchg edx,eax
  4183ee:	xor    BYTE PTR [eax+0x76f1e23b],cl
  4183f4:	outs   dx,BYTE PTR ds:[esi]
  4183f5:	inc    esi
  4183f6:	or     DWORD PTR [edx+0x58],ebp
  4183f9:	push   ds
  4183fa:	jne    0x418417
  4183fc:	mov    ds:0xca8d9be7,eax
  418401:	dec    edi
  418402:	imul   ecx,DWORD PTR [edi-0x2b],0x77214453
  418409:	xor    esp,DWORD PTR [edx+ebp*4-0x2ba6c9a3]
  418410:	sbb    eax,0x9e6e16e3
  418415:	jno    0x4183bc
  418417:	ja     0x418420
  418419:	push   cs
  41841a:	ins    DWORD PTR es:[edi],dx
  41841b:	or     DWORD PTR [ebx],ecx
  41841d:	in     al,dx
  41841e:	mov    edx,ebp
  418420:	mov    ds:0x65dc04f9,eax
  418425:	sbb    BYTE PTR [ebp-0x44],bh
  418428:	push   es
  418429:	pusha  
  41842a:	xchg   ecx,eax
  41842b:	jno    0x41847c
  41842d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41842e:	shr    BYTE PTR [ebx],0x89
  418431:	and    ebx,DWORD PTR [bx+si]
  418434:	inc    ebx
  418435:	leave  
  418436:	dec    ebp
  418437:	fwait
  418438:	xor    ebp,DWORD PTR [esi+0x5848629d]
  41843e:	xor    esi,edi
  418440:	push   ecx
  418441:	std    
  418442:	inc    esp
  418443:	leave  
  418444:	les    esp,FWORD PTR [eax]
  418446:	ret    
  418447:	ds xchg edi,eax
  418449:	aaa    
  41844a:	mov    edi,0x5108a6e4
  41844f:	retf   0x2c8c
  418452:	sub    edi,ecx
  418454:	mov    esp,0x635afd4c
  418459:	adc    esi,DWORD PTR [eax]
  41845b:	les    edi,FWORD PTR [edx-0x66]
  41845e:	shl    ah,cl
  418460:	stc    
  418461:	sub    eax,0x9df66ef0
  418466:	nop
  418467:	xor    DWORD PTR [ebp+0x8bdc95b],0x34c88b6c
  418471:	xchg   esi,eax
  418472:	sub    bh,ch
  418474:	mov    bh,bh
  418476:	inc    ebx
  418477:	or     al,0xcd
  418479:	or     dl,BYTE PTR [edi+esi*8+0x48c0fd01]
  418480:	sbb    DWORD PTR [ebp+0x420c1be9],ebx
  418486:	sbb    BYTE PTR [eax-0x55],0x77
  41848a:	xor    al,0x63
  41848c:	xchg   esi,eax
  41848d:	adc    eax,0x2b970a62
  418492:	ret    
  418493:	sub    DWORD PTR [esi-0x5a4184bc],edx
  418499:	add    eax,DWORD PTR [esi]
  41849b:	cld    
  41849c:	out    dx,eax
  41849d:	in     eax,dx
  41849e:	cmp    BYTE PTR [ebx-0x2cec81e],dl
  4184a4:	div    DWORD PTR [esi-0x2a4568f2]
  4184aa:	ret    
  4184ab:	in     eax,dx
  4184ac:	(bad)  
  4184ad:	arpl   WORD PTR [eax+0x38],sp
  4184b0:	push   0x18
  4184b2:	cmp    dh,BYTE PTR [eax+edx*2-0x6bffbcac]
  4184b9:	pusha  
  4184ba:	inc    esp
  4184bb:	pop    ebp
  4184bc:	aas    
  4184bd:	inc    ecx
  4184be:	mov    ?,WORD PTR [edx-0x53]
  4184c1:	aad    0xfa
  4184c3:	or     DWORD PTR [ebx+0x2a],esi
  4184c6:	outs   dx,BYTE PTR ds:[esi]
  4184c7:	or     al,0x38
  4184c9:	ret    0xdb03
  4184cc:	push   eax
  4184cd:	mov    ebx,0x28d0408b
  4184d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d3:	loop   0x418490
  4184d5:	adc    BYTE PTR [edi],dl
  4184d7:	sub    DWORD PTR [ebp+0x46af63ef],ebx
  4184dd:	jo     0x418500
  4184df:	mov    BYTE PTR [ebx-0x477c4e70],al
  4184e5:	das    
  4184e6:	jne    0x418497
  4184e8:	add    eax,0xb0e1e91
  4184ed:	(bad)  
  4184ee:	cmp    bh,BYTE PTR [edx*2+0x3b07567b]
  4184f5:	scas   al,BYTE PTR es:[edi]
  4184f6:	adc    cl,dh
  4184f8:	iret   
  4184f9:	call   0xf27b:0xdb0845e2
  418500:	stos   BYTE PTR es:[edi],al
  418501:	xchg   ebp,eax
  418502:	adc    ah,BYTE PTR [eax+0x3f34c3b1]
  418508:	clc    
  418509:	mov    ecx,0xf9a0bd15
  41850e:	mov    ah,0xa
  418510:	mov    bh,0x87
  418512:	in     eax,0xa2
  418514:	sbb    BYTE PTR [ecx-0x1b],cl
  418517:	out    0x91,eax
  418519:	aam    0x4f
  41851b:	push   edi
  41851c:	outs   dx,DWORD PTR ds:[esi]
  41851d:	out    0x1f,al
  41851f:	cmp    bl,BYTE PTR [ebp-0x469adfbe]
  418525:	(bad)  
  418526:	lock pushf 
  418528:	(bad)  
  418529:	stos   DWORD PTR es:[edi],eax
  41852a:	mov    eax,0x3cfd0110
  41852f:	xchg   esi,eax
  418530:	sub    BYTE PTR [ecx-0x3c903bb1],ah
  418536:	test   edi,ebx
  418538:	push   edx
  418539:	out    0xc4,eax
  41853b:	cs aam 0x74
  41853e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41853f:	ret    0x49e2
  418542:	mov    ecx,0xaf9a9ade
  418547:	rol    BYTE PTR [esi-0xef099d4],cl
  41854d:	int3   
  41854e:	int    0x1d
  418550:	lods   al,BYTE PTR ds:[esi]
  418551:	clc    
  418552:	xchg   ebp,eax
  418553:	pusha  
  418554:	and    bh,ch
  418556:	mov    ds:0xe32e6db2,eax
  41855b:	mov    al,ds:0xe374fb22
  418560:	and    esi,edx
  418562:	sub    ecx,DWORD PTR [esi-0x3]
  418565:	sar    DWORD PTR [ecx-0x40f747b9],cl
  41856b:	or     ch,BYTE PTR [eax]
  41856d:	fistp  QWORD PTR [ecx]
  41856f:	test   al,0x89
  418571:	or     al,0x70
  418573:	and    al,ch
  418575:	cmp    eax,0x66e75434
  41857a:	xchg   ebp,eax
  41857b:	gs (bad) 
  41857d:	push   0x9580c985
  418582:	mov    esi,0x517956ce
  418587:	or     al,0x60
  418589:	xchg   ecx,eax
  41858a:	cld    
  41858b:	sub    eax,0xe8b9fdce
  418590:	leave  
  418591:	push   esi
  418592:	js     0x418551
  418594:	cwde   
  418595:	ftst   
  418597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418599:	or     ah,cl
  41859b:	push   edx
  41859c:	rol    BYTE PTR [edi+0xddee103],0xf8
  4185a3:	jno    0x4185e3
  4185a5:	sub    eax,0x800fe53a
  4185aa:	repnz int3 
  4185ac:	or     DWORD PTR [ebx+0x796f3fcc],0xffffffad
  4185b3:	adc    esp,DWORD PTR [eax+ecx*2+0x7e238527]
  4185ba:	std    
  4185bb:	fs aam 0x7a
  4185be:	fidivr WORD PTR [edi+0x4486fd78]
  4185c4:	les    ebx,FWORD PTR [ecx+eiz*4+0x36]
  4185c8:	adc    dh,dh
  4185ca:	inc    ebp
  4185cb:	inc    ecx
  4185cc:	xlat   BYTE PTR ds:[ebx]
  4185ce:	xor    esi,eax
  4185d0:	sti    
  4185d1:	je     0x41861d
  4185d3:	xchg   edx,eax
  4185d4:	adc    BYTE PTR [edi],dl
  4185d6:	and    edi,DWORD PTR [esp+edx*2-0x72006d55]
  4185dd:	sub    eax,0x35b12d99
  4185e2:	jmp    0x41862b
  4185e4:	test   BYTE PTR [ebp-0x5b],cl
  4185e7:	push   0xffffff99
  4185e9:	sti    
  4185ea:	adc    DWORD PTR [ecx-0x7e6ede5f],edi
  4185f0:	pop    ds
  4185f1:	cmc    
  4185f2:	mov    ebx,0xf3c84d2
  4185f7:	repz (bad) 
  4185f9:	mov    esi,0xbdb5eca4
  4185fe:	mov    edx,0xc009984a
  418603:	lods   eax,DWORD PTR ds:[esi]
  418604:	repnz sbb al,0x2a
  418607:	sub    al,0x27
  418609:	(bad)  
  41860a:	out    dx,eax
  41860b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41860c:	(bad)  
  41860d:	in     al,dx
  41860e:	jle    0x41859b
  418610:	cmp    al,0xc7
  418612:	mov    cl,0x35
  418614:	ror    DWORD PTR [ecx-0x54e52adb],0x90
  41861b:	sahf   
  41861c:	sub    edx,esi
  41861e:	jb     0x418648
  418620:	or     eax,DWORD PTR [edx-0x42ad3bf4]
  418626:	popa   
  418627:	cmp    al,BYTE PTR [ecx-0x71]
  41862a:	fisubr DWORD PTR [ecx]
  41862c:	cmp    ch,al
  41862e:	test   al,0x21
  418630:	jo     0x418628
  418632:	data16 xor bl,BYTE PTR [ecx-0x5d608d15]
  418639:	cwde   
  41863a:	cmovns ebp,DWORD PTR [edi]
  41863d:	jecxz  0x418602
  41863f:	loope  0x418663
  418641:	fs push cs
  418643:	cmp    al,0xa
  418645:	mov    bh,0xe4
  418647:	faddp  st(1),st
  418649:	cmp    edi,DWORD PTR [ebp+0x116e07f7]
  41864f:	sub    eax,0xd843fc0f
  418654:	jg     0x4185ff
  418656:	adc    ah,BYTE PTR [ebx+0xb]
  418659:	lods   al,BYTE PTR ds:[esi]
  41865a:	icebp  
  41865b:	mov    edx,gs
  41865d:	sub    DWORD PTR [edx*2+0x46b20ee1],esp
  418664:	test   al,0x23
  418666:	iret   
  418667:	aaa    
  418668:	popf   
  418669:	mov    ebx,0x967fa511
  41866e:	add    edx,DWORD PTR [edx+eiz*2+0x73]
  418672:	fwait
  418673:	mov    DWORD PTR [ecx-0xf],0x6c576072
  41867a:	or     al,0x49
  41867c:	pop    eax
  41867d:	xchg   DWORD PTR [eax+0xff66fa2],eax
  418683:	jo     0x418666
  418685:	xor    dh,BYTE PTR [esi]
  418687:	push   esi
  418688:	inc    edx
  418689:	cmp    al,0x99
  41868b:	pop    eax
  41868c:	shl    BYTE PTR [ecx],cl
  41868e:	data16 mov cl,0x89
  418691:	ret    
  418692:	je     0x418677
  418694:	or     eax,0xca397699
  418699:	inc    ebp
  41869a:	mov    al,ds:0x328da151
  41869f:	sub    eax,0x4f6fd322
  4186a4:	lods   al,BYTE PTR ds:[esi]
  4186a5:	loopne 0x418700
  4186a7:	mov    al,0x78
  4186a9:	sbb    edi,esp
  4186ab:	lds    ecx,FWORD PTR ds:0x3e719f30
  4186b1:	mov    ?,WORD PTR [ecx]
  4186b3:	cmp    edi,DWORD PTR [esi-0x1cdff37c]
  4186b9:	daa    
  4186ba:	jae    0x4186ca
  4186bc:	jo     0x4186d9
  4186be:	stos   DWORD PTR es:[edi],eax
  4186bf:	mov    DWORD PTR [ecx],ebp
  4186c1:	test   ecx,edi
  4186c3:	sbb    al,0xf1
  4186c5:	loop   0x418650
  4186c7:	xor    ch,BYTE PTR [esi+0x11]
  4186ca:	outs   dx,DWORD PTR cs:[esi]
  4186cc:	dec    edi
  4186cd:	fsub   QWORD PTR [esp+ebx*1]
  4186d0:	pop    ss
  4186d1:	sbb    eax,0xa1821ace
  4186d6:	push   edx
  4186d7:	mov    cs,ebx
  4186d9:	mov    dl,0x71
  4186db:	cmp    al,0x2e
  4186dd:	adc    edi,ecx
  4186df:	lods   al,BYTE PTR ds:[esi]
  4186e0:	push   eax
  4186e1:	jge    0x418704
  4186e3:	popf   
  4186e4:	fisttp QWORD PTR [eax+0x6]
  4186e7:	imul   edx,ebp,0xffffffa8
  4186ea:	out    dx,eax
  4186eb:	adc    bl,ch
  4186ed:	nop
  4186ee:	cs cmc 
  4186f0:	mov    al,0xa9
  4186f2:	mov    ebx,0x88b54d39
  4186f7:	jl     0x41868f
  4186f9:	leave  
  4186fa:	rcr    dl,1
  4186fc:	aad    0xb9
  4186fe:	jecxz  0x418765
  418700:	or     DWORD PTR [esi],0xc811aa29
  418706:	mov    ebp,0x1be5690c
  41870b:	das    
  41870c:	push   ss
  41870d:	into   
  41870e:	jns    0x4186d3
  418710:	dec    edx
  418711:	les    ebx,FWORD PTR [edx]
  418713:	sbb    cl,BYTE PTR [edx-0x27bac66f]
  418719:	sub    BYTE PTR [eax+0x65],dl
  41871c:	inc    edx
  41871d:	jbe    0x4186ab
  41871f:	pop    esi
  418720:	xor    BYTE PTR ds:[ecx-0x35],cl
  418724:	xor    esp,DWORD PTR [eax]
  418726:	fimul  DWORD PTR [edx-0x50]
  418729:	mov    ebp,0x760f1bc1
  41872e:	loope  0x418712
  418730:	(bad)  
  418732:	aam    0x1c
  418734:	and    edi,DWORD PTR [esi]
  418736:	nop
  418737:	es xchg ebx,eax
  418739:	pop    eax
  41873a:	push   ss
  41873b:	fdivr  DWORD PTR [edi+ebx*1]
  41873e:	and    bl,BYTE PTR [edx+0x3a012a2c]
  418744:	jb     0x4187b9
  418746:	outs   dx,BYTE PTR ds:[esi]
  418747:	loop   0x41878a
  418749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41874a:	pop    edx
  41874b:	adc    al,0x25
  41874d:	dec    ebp
  41874e:	sub    al,0x72
  418750:	mov    ds:0x10c6de53,al
  418755:	xor    edi,DWORD PTR [edi+0x4b]
  418758:	leave  
  418759:	jg     0x418793
  41875b:	ret    0xfe2f
  41875e:	aam    0x21
  418760:	sub    BYTE PTR [ebp-0x57],dl
  418763:	scas   al,BYTE PTR es:[edi]
  418764:	jbe    0x41871f
  418766:	mov    bh,BYTE PTR [edx-0x40]
  418769:	sbb    eax,0x9150ce47
  41876e:	in     al,dx
  41876f:	and    BYTE PTR [ebx+0x7a],0x92
  418773:	inc    esi
  418774:	jl     0x41879a
  418776:	jg     0x418731
  418778:	xchg   ecx,eax
  418779:	xchg   edx,eax
  41877a:	frstor [edi-0x78]
  41877d:	sbb    DWORD PTR [ecx],esi
  41877f:	dec    eax
  418780:	dec    ebx
  418781:	push   esi
  418782:	pop    ss
  418783:	sub    BYTE PTR [eax+0x10],cl
  418786:	or     bl,BYTE PTR [edx-0x2e]
  418789:	adc    cl,ah
  41878b:	mov    ebp,0xfbec9814
  418790:	sbb    DWORD PTR [ebp-0x5a],ecx
  418793:	ss inc ecx
  418795:	popa   
  418796:	loope  0x41872d
  418798:	and    eax,0x34f84a01
  41879d:	jecxz  0x41873d
  41879f:	mov    dh,0x84
  4187a1:	ret    
  4187a2:	and    al,BYTE PTR fs:[ebx]
  4187a5:	repz inc edx
  4187a7:	shl    ch,1
  4187a9:	pop    ecx
  4187aa:	and    bh,ah
  4187ac:	popf   
  4187ad:	loop   0x418792
  4187af:	ret    
  4187b0:	jb     0x418810
  4187b2:	mov    ah,0x6e
  4187b4:	inc    ecx
  4187b5:	psrad  mm5,QWORD PTR [edi+0x3b]
  4187b9:	lahf   
  4187ba:	sub    dh,ch
  4187bc:	xor    ecx,DWORD PTR [esi-0x26]
  4187bf:	in     al,0x55
  4187c1:	daa    
  4187c2:	or     cl,dh
  4187c4:	adc    eax,0xc71779a4
  4187c9:	sbb    ch,0x87
  4187cc:	dec    edi
  4187cd:	popf   
  4187ce:	cld    
  4187cf:	adc    BYTE PTR [ecx],bl
  4187d1:	scas   al,BYTE PTR es:[edi]
  4187d2:	inc    edx
  4187d3:	jp     0x418790
  4187d5:	mov    edx,0x6b16f434
  4187da:	in     eax,dx
  4187db:	stos   DWORD PTR es:[edi],eax
  4187dc:	ins    BYTE PTR es:[edi],dx
  4187dd:	mov    cl,0xb6
  4187df:	sbb    esp,DWORD PTR [esi-0x21]
  4187e2:	sbb    bh,dh
  4187e4:	sahf   
  4187e5:	es das 
  4187e7:	jb     0x4187fb
  4187e9:	in     al,0xcc
  4187eb:	into   
  4187ec:	xchg   ch,dl
  4187ee:	fbld   TBYTE PTR [esp+ecx*1-0x69e07b19]
  4187f5:	add    DWORD PTR [ecx-0x6d],edx
  4187f8:	jg     0x4187d8
  4187fa:	xchg   edx,eax
  4187fb:	xchg   edi,eax
  4187fc:	lahf   
  4187fd:	loopne 0x41886b
  4187ff:	mov    ds:0x9b948b34,al
  418804:	xchg   ebx,eax
  418805:	loope  0x41886d
  418807:	sbb    esi,eax
  418809:	lods   al,BYTE PTR ds:[esi]
  41880a:	ins    BYTE PTR es:[edi],dx
  41880b:	ins    DWORD PTR es:[edi],dx
  41880c:	cli    
  41880d:	xchg   ebp,eax
  41880e:	aaa    
  41880f:	xor    ebx,DWORD PTR [esi-0x52]
  418812:	sbb    al,0x73
  418814:	lods   al,BYTE PTR ds:[esi]
  418815:	stos   BYTE PTR es:[edi],al
  418816:	hlt    
  418817:	icebp  
  418818:	dec    esi
  418819:	loopne 0x4187b6
  41881b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41881c:	sbb    BYTE PTR [ebx],ah
  41881e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41881f:	mov    gs,WORD PTR [ecx+0x46]
  418822:	xor    bl,BYTE PTR [ecx+0x269f4f65]
  418828:	mov    eax,ds:0x87ebaad8
  41882d:	cwde   
  41882e:	sahf   
  41882f:	add    eax,0x9cb2e4c2
  418834:	mov    bl,0x80
  418836:	pop    eax
  418837:	adc    ebx,DWORD PTR [edx-0x58]
  41883a:	cmp    ebx,DWORD PTR ds:0x6207f454
  418840:	mov    WORD PTR [ecx-0x5e41e84f],es
  418846:	sub    cl,BYTE PTR [ebx+0x3a]
  418849:	js     0x418811
  41884b:	stos   DWORD PTR es:[edi],eax
  41884c:	push   edi
  41884d:	test   BYTE PTR [edx-0x12],ch
  418850:	hlt    
  418851:	je     0x418823
  418853:	int3   
  418854:	fiadd  WORD PTR [ebp+0x3b36929f]
  41885a:	jle    0x41882f
  41885c:	cmp    esp,ecx
  41885e:	fwait
  41885f:	jmp    0x41884a
  418861:	and    al,0xda
  418863:	sub    edi,DWORD PTR [edx]
  418865:	cmp    ecx,DWORD PTR [edi+eax*1-0x70]
  418869:	lds    ebx,FWORD PTR [edi-0x258b14d5]
  41886f:	push   ss
  418870:	scas   al,BYTE PTR es:[edi]
  418871:	or     eax,0x630363ef
  418876:	sbb    al,cl
  418878:	loopne 0x4188c6
  41887a:	inc    edi
  41887b:	enter  0x5375,0x2
  41887f:	std    
  418880:	sub    cl,BYTE PTR [edi+0x59b6c52b]
  418886:	outs   dx,DWORD PTR ds:[esi]
  418887:	or     edx,DWORD PTR [edx-0x23b42659]
  41888d:	imul   ebx,edi,0x2e
  418890:	xchg   DWORD PTR [eax-0x59bb8749],edx
  418896:	or     ebx,edx
  418898:	jmp    0x26cd150e
  41889d:	jle    0x4188c8
  41889f:	imul   eax,DWORD PTR [ebx-0x36],0x4d
  4188a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a4:	xabort 0x77
  4188a7:	ins    DWORD PTR es:[edi],dx
  4188a8:	mov    al,0xe5
  4188aa:	shl    DWORD PTR [esi-0x25790fd1],1
  4188b0:	ins    DWORD PTR es:[edi],dx
  4188b1:	(bad)  
  4188b2:	ins    DWORD PTR es:[edi],dx
  4188b3:	jp     0x41888c
  4188b5:	mov    eax,ds:0xdd2f5b7
  4188ba:	int    0x6f
  4188bc:	aaa    
  4188bd:	inc    edx
  4188be:	add    bh,BYTE PTR [ebp+0x12]
  4188c1:	call   0x8c7e:0x3b8757f1
  4188c8:	adc    BYTE PTR [ebx],ah
  4188ca:	push   es
  4188cb:	les    esi,FWORD PTR [ebp-0x2e0a7b56]
  4188d1:	add    al,0xaf
  4188d3:	and    al,BYTE PTR [ebp+edx*4-0x52]
  4188d7:	cwde   
  4188d8:	add    edx,DWORD PTR ds:0x91631c73
  4188de:	repnz inc ebp
  4188e0:	mov    ch,0x56
  4188e2:	jmp    0x418869
  4188e4:	bound  esi,QWORD PTR [ecx+ecx*4]
  4188e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188e8:	retf   
  4188e9:	pop    esp
  4188ea:	sub    eax,0xcd2694f2
  4188ef:	cld    
  4188f0:	rcr    BYTE PTR [edx+0x38],cl
  4188f3:	outs   dx,DWORD PTR ds:[esi]
  4188f4:	jecxz  0x418881
  4188f6:	mov    ebp,DWORD PTR [eax+0x1978174a]
  4188fc:	cld    
  4188fd:	jno    0x4188af
  4188ff:	das    
  418900:	pushf  
  418901:	fsub   DWORD PTR [ecx+ecx*8+0x42]
  418905:	test   ebx,esi
  418907:	pop    ebp
  418908:	adc    al,0x26
  41890a:	mov    eax,0xc6abc5c7
  41890f:	and    BYTE PTR [edx],dh
  418911:	push   ds
  418912:	ficomp DWORD PTR [edx+0x6e]
  418915:	adc    edx,DWORD PTR [ebp+0x7e]
  418918:	sub    DWORD PTR [edx-0x5001be4d],esp
  41891e:	push   eax
  41891f:	cmp    eax,0x6313d868
  418924:	out    dx,eax
  418925:	in     eax,dx
  418926:	data16 lods al,BYTE PTR ds:[esi]
  418928:	cmc    
  418929:	comiss xmm2,xmm3
  41892c:	or     al,0xe6
  41892e:	outs   dx,DWORD PTR ds:[esi]
  41892f:	jae    0x418982
  418931:	xchg   esp,eax
  418932:	clc    
  418933:	leave  
  418934:	xchg   ebx,eax
  418935:	repz push es
  418937:	call   0x36beef1e
  41893c:	fst    QWORD PTR [ebx+0x3a6719da]
  418942:	dec    edi
  418943:	int    0x6c
  418945:	int3   
  418946:	mov    ds:0xe6fe6a4d,al
  41894b:	xchg   ebp,eax
  41894c:	jmp    0xf05b2a68
  418951:	in     al,dx
  418952:	push   edx
  418953:	std    
  418954:	lahf   
  418955:	mov    esi,0xaa7ef164
  41895a:	jmp    FWORD PTR [esi-0x42]
  41895d:	dec    eax
  41895e:	not    DWORD PTR [ecx]
  418960:	add    ebx,edi
  418962:	div    BYTE PTR [ebp-0x46]
  418965:	loope  0x4188e7
  418967:	in     al,0x10
  418969:	sub    DWORD PTR [edx+0x3187458d],edx
  41896f:	add    eax,0x74871fff
  418974:	in     al,0x8d
  418976:	ds and al,0xaf
  418979:	mov    ecx,ebp
  41897b:	std    
  41897c:	dec    edi
  41897d:	shl    DWORD PTR [edi+esi*1-0x5d],1
  418981:	out    dx,eax
  418982:	or     al,0x38
  418984:	mov    ebx,0xf072f369
  418989:	mov    eax,0x43951d71
  41898e:	cmc    
  41898f:	mov    al,0xc5
  418991:	fisttp QWORD PTR [edi]
  418993:	lock mov ecx,edx
  418996:	ret    0xab7b
  418999:	ins    BYTE PTR es:[edi],dx
  41899a:	sahf   
  41899b:	lods   al,BYTE PTR ds:[esi]
  41899c:	sti    
  41899d:	sub    BYTE PTR [ecx+0x79],cl
  4189a0:	fiadd  DWORD PTR [esi+0x35]
  4189a3:	loope  0x4189f1
  4189a5:	out    0xcc,al
  4189a7:	add    DWORD PTR [esi+0x9],ebx
  4189aa:	aad    0x49
  4189ac:	fwait
  4189ad:	lods   eax,DWORD PTR ds:[esi]
  4189ae:	sub    edi,DWORD PTR [esi+0x37bf57ec]
  4189b4:	cli    
  4189b5:	ss jo  0x4189cb
  4189b8:	sbb    edi,ebx
  4189ba:	or     bh,BYTE PTR [edx+0x10]
  4189bd:	jnp    0x4189b9
  4189bf:	ret    0x9e48
  4189c2:	sbb    BYTE PTR [edi],al
  4189c4:	mov    edi,0x101996c2
  4189c9:	xlat   BYTE PTR ds:[ebx]
  4189ca:	push   ecx
  4189cb:	cmp    bh,BYTE PTR [ebx-0x64]
  4189ce:	pop    ebx
  4189cf:	outs   dx,BYTE PTR ds:[esi]
  4189d0:	fst    QWORD PTR [ebx-0x46df6118]
  4189d6:	loop   0x418a2e
  4189d8:	jl     0x418a1f
  4189da:	sub    bl,dh
  4189dc:	mov    dh,0xae
  4189de:	mov    eax,ds:0xaaf76ad
  4189e3:	cmp    DWORD PTR [edi],ebp
  4189e5:	movd   DWORD PTR [eax+0x2a],mm5
  4189e9:	sahf   
  4189ea:	push   eax
  4189eb:	mov    ecx,0xaa13852d
  4189f0:	lahf   
  4189f1:	sub    ebp,ebx
  4189f3:	imul   esi,DWORD PTR [esi],0xbfd73073
  4189f9:	or     eax,0x59a394e5
  4189fe:	pop    eax
  4189ff:	cmp    esi,DWORD PTR [eax-0x2a37cbc1]
  418a05:	scas   eax,DWORD PTR es:[edi]
  418a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a07:	xchg   ebx,eax
  418a08:	aas    
  418a09:	mov    eax,0xb9fe52b2
  418a0e:	push   cs
  418a0f:	push   esi
  418a10:	test   eax,0xa0dcb57e
  418a15:	mov    bl,0x5b
  418a17:	xlat   BYTE PTR ds:[ebx]
  418a18:	and    BYTE PTR ss:[edi+ebx*1-0x55a4df84],0x16
  418a21:	lods   al,BYTE PTR ds:[esi]
  418a22:	push   ss
  418a23:	sub    eax,0x1f7643e3
  418a28:	xor    al,0xb4
  418a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a2b:	push   ds
  418a2c:	outs   dx,DWORD PTR ds:[esi]
  418a2d:	push   ebx
  418a2e:	xor    BYTE PTR [ebx],al
  418a30:	inc    esi
  418a31:	leave  
  418a32:	pop    edi
  418a33:	mov    ebx,0x2ec72f3e
  418a38:	nop
  418a39:	push   ebx
  418a3a:	ret    
  418a3b:	push   0x5b0eac91
  418a40:	push   es
  418a41:	lahf   
  418a42:	mov    edi,0x42b09d18
  418a47:	xchg   esp,eax
  418a48:	adc    BYTE PTR [eax+0x4768b731],dh
  418a4e:	adc    al,0xe7
  418a50:	jl     0x418a33
  418a52:	call   0xc301:0xc387ddd1
  418a59:	add    esi,edx
  418a5b:	dec    ecx
  418a5c:	popf   
  418a5d:	mov    dh,0x1c
  418a5f:	je     0x418a2d
  418a61:	cli    
  418a62:	mov    ?,WORD PTR [ebp+0x42]
  418a65:	cmp    edi,DWORD PTR [ecx+edi*4]
  418a68:	xchg   ecx,eax
  418a69:	dec    esi
  418a6a:	scas   eax,DWORD PTR es:[edi]
  418a6b:	cs mov cs,eax
  418a6e:	pop    esp
  418a6f:	retf   
  418a70:	(bad)  
  418a71:	ds xor eax,0x2084179b
  418a77:	sbb    al,0x4b
  418a79:	aas    
  418a7a:	scas   al,BYTE PTR es:[edi]
  418a7b:	stos   BYTE PTR es:[edi],al
  418a7c:	mov    ah,0x0
  418a7e:	mov    al,ds:0x1b913818
  418a83:	(bad)  
  418a84:	inc    edx
  418a85:	pop    edx
  418a86:	je     0x418ae5
  418a88:	pop    es
  418a89:	sbb    edx,DWORD PTR [ebx+0x2b]
  418a8c:	adc    esi,DWORD PTR [edi+esi*8]
  418a8f:	sbb    bl,BYTE PTR ds:0x1013d6cd
  418a95:	fs or  eax,0x3184ca4f
  418a9b:	or     BYTE PTR [ebp+0x7a5ee3da],bl
  418aa1:	xor    ebx,eax
  418aa3:	arpl   WORD PTR [ebx-0x6d],bp
  418aa6:	test   al,0x92
  418aa8:	das    
  418aa9:	jp     0x418ab9
  418aab:	mov    bl,0xe4
  418aad:	pop    ebp
  418aae:	call   0xa5c4:0x54dd036f
  418ab5:	xchg   edi,eax
  418ab6:	pop    edx
  418ab7:	sub    edx,DWORD PTR [edi+0x5a4071a5]
  418abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418abe:	(bad)  
  418abf:	sbb    bh,BYTE PTR [ecx+0x54d5cff9]
  418ac5:	push   ecx
  418ac6:	ins    DWORD PTR es:[edi],dx
  418ac7:	xchg   esi,eax
  418ac8:	add    al,BYTE PTR [ecx-0x69]
  418acb:	es push ebx
  418acd:	and    al,0x84
  418acf:	jl     0x418a86
  418ad1:	adc    ah,bl
  418ad3:	xchg   ebp,eax
  418ad4:	cmp    al,0x26
  418ad6:	and    DWORD PTR [ecx+edi*2-0x77],esp
  418ada:	add    al,BYTE PTR [ecx+0x2bc76ff3]
  418ae0:	pop    ds
  418ae1:	mov    ebx,0xf1170183
  418ae6:	add    ch,BYTE PTR [ebx+0x3c]
  418ae9:	push   ebp
  418aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aeb:	sub    BYTE PTR ds:0x47ec0f5d,0x5f
  418af2:	push   ecx
  418af3:	fcmovu st,st(1)
  418af5:	fwait
  418af6:	xchg   DWORD PTR ds:0xc534db7c,edi
  418afc:	loope  0x418add
  418afe:	mov    cl,0x3d
  418b00:	xchg   ecx,eax
  418b01:	iret   
  418b02:	or     esp,DWORD PTR [ecx]
  418b04:	pusha  
  418b05:	pop    es
  418b06:	add    BYTE PTR [edi-0x54],bl
  418b09:	das    
  418b0a:	lds    ebx,FWORD PTR [edx-0x6e]
  418b0d:	not    DWORD PTR [esi+0x300c246f]
  418b13:	cmp    cl,ch
  418b15:	lea    ebx,[edi+0x44]
  418b18:	jbe    0x418b90
  418b1a:	mov    edi,0xa4ce670b
  418b1f:	aaa    
  418b20:	jae    0x418b27
  418b22:	pop    esi
  418b23:	mov    dh,0xde
  418b25:	adc    BYTE PTR [ebx],bh
  418b27:	popf   
  418b28:	mov    ch,0xe9
  418b2a:	(bad)  
  418b2b:	hlt    
  418b2c:	mov    ecx,0xa9e12929
  418b31:	retf   0x82df
  418b34:	pop    ss
  418b35:	lahf   
  418b36:	shr    esi,cl
  418b38:	pop    edx
  418b39:	or     ecx,ecx
  418b3b:	fwait
  418b3c:	add    eax,0x9db10934
  418b41:	into   
  418b42:	lock mov ecx,0x489b5352
  418b48:	sub    al,0xcb
  418b4a:	jecxz  0x418b09
  418b4c:	add    bl,ah
  418b4e:	or     eax,edx
  418b50:	rol    bl,cl
  418b52:	mov    ds:0xcf3f463a,al
  418b57:	das    
  418b58:	retf   0xd5fe
  418b5b:	xchg   ebx,eax
  418b5c:	xor    bl,ah
  418b5e:	fdiv   DWORD PTR ds:0x37f98efa
  418b64:	rcl    BYTE PTR [eax+0x38],1
  418b67:	gs xchg ebx,eax
  418b69:	sub    ebx,ecx
  418b6b:	sub    BYTE PTR [ecx+esi*4],bl
  418b6e:	mov    eax,ds:0x10df9517
  418b73:	dec    ecx
  418b74:	shr    BYTE PTR [edx-0x7f],cl
  418b77:	mov    ?,esi
  418b79:	aaa    
  418b7a:	mov    edi,0xa622ba8b
  418b7f:	in     eax,dx
  418b80:	popa   
  418b81:	mov    edx,ebp
  418b83:	xchg   DWORD PTR [ebx],esp
  418b85:	adc    eax,0x2eb7556
  418b8a:	pop    edi
  418b8b:	out    0xca,al
  418b8d:	imul   edi
  418b8f:	add    al,ah
  418b91:	pop    ds
  418b92:	pop    edi
  418b93:	or     ebp,DWORD PTR [edx]
  418b95:	cmp    ah,BYTE PTR [eax-0xaee29c9]
  418b9b:	sbb    DWORD PTR [edx+eax*4+0x41],ecx
  418b9f:	out    0x7c,al
  418ba1:	dec    BYTE PTR [esi+0x5fc9dc9c]
  418ba7:	mov    ss,WORD PTR [eax]
  418ba9:	lahf   
  418baa:	and    esp,DWORD PTR [ebp+eax*4-0x4b88b32e]
  418bb1:	int3   
  418bb2:	pop    edi
  418bb3:	gs leave 
  418bb5:	xchg   ecx,eax
  418bb6:	dec    eax
  418bb7:	inc    ecx
  418bb8:	xchg   BYTE PTR [esi-0x3cd62f58],ah
  418bbe:	cwde   
  418bbf:	test   DWORD PTR [eax-0xc],edi
  418bc2:	jge    0x418b50
  418bc4:	imul   esi,DWORD PTR ds:0xfc9d619c,0xc
  418bcb:	jno    0x418c22
  418bcd:	dec    ecx
  418bce:	and    ecx,DWORD PTR [eax-0x66]
  418bd1:	mov    edi,esi
  418bd3:	cmp    edx,DWORD PTR [eax-0x33]
  418bd6:	lds    eax,FWORD PTR ss:[eax-0x8e5371b]
  418bdd:	outs   dx,DWORD PTR ds:[esi]
  418bde:	(bad)
  418be1:	or     edx,DWORD PTR [ecx+0x74]
  418be4:	sub    eax,0xec046d36
  418be9:	pop    ebp
  418bea:	arpl   bp,ax
  418bec:	das    
  418bed:	out    0x1f,al
  418bef:	(bad)  
  418bf0:	repz jbe 0x418c36
  418bf3:	imul   edi,edx,0x4d955b43
  418bf9:	mov    fs,esp
  418bfb:	sbb    DWORD PTR cs:[ebx+0x56289ec3],0x19
  418c03:	bound  edx,QWORD PTR [eax-0x179af04]
  418c09:	or     DWORD PTR [eax-0x7261285c],edx
  418c0f:	std    
  418c10:	scas   al,BYTE PTR es:[edi]
  418c11:	in     al,0xae
  418c13:	pop    edi
  418c14:	mov    BYTE PTR [esi],0x37
  418c17:	xor    ah,BYTE PTR ds:0x9f65ae2
  418c1d:	loope  0x418c72
  418c1f:	add    eax,0xb84d324d
  418c24:	jne    0x418c4d
  418c26:	(bad)  
  418c27:	jo     0x418c63
  418c29:	stc    
  418c2a:	push   edx
  418c2b:	mov    bh,0xa3
  418c2d:	inc    esi
  418c2e:	cmp    eax,0xb38438f6
  418c33:	lahf   
  418c34:	sbb    eax,0x57575d99
  418c39:	lock (bad) 
  418c3c:	pop    esp
  418c3d:	retf   0x3b54
  418c40:	arpl   ax,ax
  418c42:	dec    ebx
  418c43:	in     al,0xee
  418c45:	imul   ecx,DWORD PTR [ebx+0x5b],0x32
  418c49:	addr16 xor al,0xf0
  418c4c:	jnp    0x418be1
  418c4e:	sar    edx,cl
  418c50:	(bad)  
  418c51:	push   0x3d
  418c53:	mov    ds:0xf8744bd,eax
  418c58:	add    eax,0x11323af9
  418c5d:	(bad)
  418c60:	adc    al,al
  418c62:	inc    esi
  418c63:	popa   
  418c64:	das    
  418c65:	push   cs
  418c66:	retf   
  418c67:	push   edx
  418c68:	mov    dh,0xfc
  418c6a:	mov    ebp,DWORD PTR [ebx-0x44f291a8]
  418c70:	sub    dh,BYTE PTR [edi+0x68]
  418c73:	and    BYTE PTR [edi],bh
  418c75:	add    edi,DWORD PTR [ecx]
  418c77:	dec    ebx
  418c78:	add    esp,eax
  418c7a:	in     eax,dx
  418c7b:	rcl    ebx,1
  418c7d:	out    dx,eax
  418c7e:	mov    ecx,0xb0b031d5
  418c83:	mov    ah,0x45
  418c85:	jns    0x418cf7
  418c87:	mov    ch,0x1c
  418c89:	mov    ds:0x684ceea3,al
  418c8e:	pop    edi
  418c8f:	pop    edx
  418c90:	icebp  
  418c91:	pushf  
  418c92:	stc    
  418c93:	(bad)  
  418c94:	in     eax,0xeb
  418c96:	out    0x85,al
  418c98:	lock test eax,0x6600d542
  418c9e:	pop    esi
  418c9f:	(bad)  
  418ca0:	mov    edi,0x1dc6c87c
  418ca5:	not    DWORD PTR [eax+0x60ad61c4]
  418cab:	adc    edx,DWORD PTR [ecx-0xeeb9626]
  418cb1:	(bad)  
  418cb2:	or     esp,ebp
  418cb4:	add    ch,BYTE PTR [esi]
  418cb6:	add    ebp,ebx
  418cb8:	pusha  
  418cb9:	sbb    al,0x61
  418cbb:	adc    eax,DWORD PTR [edx-0x7df2f410]
  418cc1:	mov    eax,0xc33af087
  418cc6:	in     eax,dx
  418cc7:	sbb    DWORD PTR [edi+0x49b158c3],edi
  418ccd:	push   edi
  418cce:	int    0x4b
  418cd0:	ja     0x418cc8
  418cd2:	cmp    al,0x39
  418cd4:	dec    ecx
  418cd5:	add    BYTE PTR ds:0xaaacd9b2,al
  418cdb:	jge    0x418c90
  418cdd:	imul   ebx,DWORD PTR ds:0x20a869d0,0x5b
  418ce4:	mov    ebp,0xf95ad37f
  418ce9:	stos   DWORD PTR es:[edi],eax
  418cea:	mov    ah,0x9f
  418cec:	xor    ebx,DWORD PTR [edi]
  418cee:	aaa    
  418cef:	daa    
  418cf0:	hlt    
  418cf1:	cli    
  418cf2:	pushf  
  418cf3:	xchg   ecx,eax
  418cf4:	sub    al,BYTE PTR [eax-0x10576a3c]
  418cfa:	sub    al,0xcf
  418cfc:	enter  0x4a9c,0x67
  418d00:	test   BYTE PTR [edi+0x611d58e6],ah
  418d06:	and    eax,0x370140c3
  418d0b:	pop    esi
  418d0c:	fs push esi
  418d0e:	or     ecx,DWORD PTR [eax]
  418d10:	icebp  
  418d11:	stos   DWORD PTR es:[edi],eax
  418d12:	dec    edx
  418d13:	std    
  418d14:	dec    edi
  418d15:	mov    edi,edx
  418d17:	mov    ds:0x4d3d4853,eax
  418d1c:	ja     0x418cc7
  418d1e:	push   0x28
  418d20:	call   0x8632:0xc77dc863
  418d27:	sub    ecx,DWORD PTR [esi+0x750ea802]
  418d2d:	sbb    cl,BYTE PTR [ebp-0x27]
  418d30:	mov    BYTE PTR [edi-0x58],dl
  418d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d34:	loope  0x418ccf
  418d36:	bound  ecx,QWORD PTR [ecx]
  418d38:	add    DWORD PTR [esi],ecx
  418d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d3b:	cs jle 0x418d72
  418d3e:	fld    QWORD PTR [ebx-0x41e529f1]
  418d44:	lods   al,BYTE PTR ds:[esi]
  418d45:	scas   eax,DWORD PTR es:[edi]
  418d46:	adc    bl,BYTE PTR [ecx-0x80]
  418d49:	adc    BYTE PTR [esi-0x68d1428b],dh
  418d4f:	pusha  
  418d50:	jnp    0x418dc1
  418d52:	out    dx,eax
  418d53:	xchg   edx,eax
  418d54:	sub    DWORD PTR [ebx],0x52
  418d57:	xchg   edi,eax
  418d58:	xor    ch,BYTE PTR [edx+0x5a]
  418d5b:	dec    ecx
  418d5c:	(bad)  
  418d5d:	push   eax
  418d5e:	fs jle 0x418d60
  418d61:	xchg   ecx,eax
  418d62:	loop   0x418d6c
  418d64:	inc    eax
  418d65:	add    DWORD PTR [ecx-0x2f],0x48
  418d69:	sub    ch,al
  418d6b:	dec    esi
  418d6c:	mov    ch,0x85
  418d6e:	add    BYTE PTR [eax+0x19],ch
  418d71:	inc    ebx
  418d72:	xor    DWORD PTR ds:0xa355b477,0xd1f5af24
  418d7c:	add    bh,ah
  418d7e:	les    ebx,FWORD PTR [ebp+0x6d]
  418d81:	cmp    ebp,edx
  418d83:	rcr    DWORD PTR [eax-0x59b90b3b],1
  418d89:	iret   
  418d8a:	out    0xc,al
  418d8c:	pop    edx
  418d8d:	ja     0x418d4c
  418d8f:	stc    
  418d90:	or     bl,ch
  418d92:	push   cs
  418d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d94:	mov    BYTE PTR [ecx],dl
  418d96:	or     al,0xb0
  418d98:	dec    ecx
  418d99:	iret   
  418d9a:	inc    esi
  418d9b:	push   cs
  418d9c:	jle    0x418d9c
  418d9e:	jb     0x418dd0
  418da0:	sbb    bh,BYTE PTR [ebx+esi*8]
  418da3:	in     eax,dx
  418da4:	adc    BYTE PTR [edi],dl
  418da6:	xchg   esp,eax
  418da7:	xchg   edi,eax
  418da8:	pop    ecx
  418da9:	stos   DWORD PTR es:[edi],eax
  418daa:	retf   0x1477
  418dad:	daa    
  418dae:	je     0x418df6
  418db0:	xor    eax,0x472ddc6f
  418db5:	test   DWORD PTR [edi+0x48181775],edi
  418dbb:	out    dx,eax
  418dbc:	or     esp,eax
  418dbe:	sub    ah,BYTE PTR [ebp-0x69dca30b]
  418dc4:	fbld   TBYTE PTR [edx+0x572b5356]
  418dca:	push   ecx
  418dcb:	xor    eax,0x65ec0c29
  418dd0:	retf   
  418dd1:	aas    
  418dd2:	dec    ecx
  418dd3:	cdq    
  418dd4:	adc    ch,BYTE PTR [ebx]
  418dd6:	cmp    BYTE PTR [esi],dl
  418dd8:	push   ss
  418dd9:	and    DWORD PTR [eax-0x69bbddb2],0x3a32772d
  418de3:	lock out dx,al
  418de5:	cli    
  418de6:	repz cwde 
  418de8:	and    eax,0xe9cf66af
  418ded:	jle    0x418dac
  418def:	icebp  
  418df0:	or     DWORD PTR [eax+0x2c],0x12
  418df4:	(bad)  
  418df5:	xor    al,0x93
  418df7:	xchg   ecx,eax
  418df8:	lea    eax,[edx-0x26]
  418dfb:	push   ecx
  418dfc:	sete   BYTE PTR [esi+0x5482e49d]
  418e03:	xchg   esp,eax
  418e04:	fdivr  DWORD PTR ds:0xb10dd5b2
  418e0a:	pop    edx
  418e0b:	(bad)  
  418e0c:	xchg   BYTE PTR [edx-0x1b56cc41],dh
  418e12:	cmp    eax,0x752ce4d7
  418e17:	inc    esi
  418e18:	cmp    ebx,DWORD PTR [ecx+0x1c]
  418e1b:	into   
  418e1c:	push   edi
  418e1d:	fs adc eax,0x99845076
  418e23:	sub    al,0xc6
  418e25:	cwde   
  418e26:	out    dx,al
  418e27:	xor    DWORD PTR [ecx+0x1ca3c477],edi
  418e2d:	adc    al,0x24
  418e2f:	sti    
  418e30:	mov    ecx,0xb5dc165a
  418e36:	sahf   
  418e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e38:	(bad)  
  418e39:	int3   
  418e3a:	test   ebp,0x73835700
  418e40:	loopne 0x418e44
  418e42:	test   al,0x33
  418e44:	(bad)  
  418e45:	xchg   ebp,eax
  418e46:	in     al,0xa5
  418e48:	sahf   
  418e49:	call   0x3e07:0xd9d9db00
  418e50:	les    ecx,FWORD PTR [esi+0x7]
  418e53:	adc    esp,DWORD PTR [edi-0x64]
  418e56:	or     al,BYTE PTR [edi-0x12]
  418e59:	push   esp
  418e5a:	stos   DWORD PTR es:[edi],eax
  418e5b:	xchg   ecx,eax
  418e5c:	daa    
  418e5d:	mov    edi,0x716b3275
  418e62:	aam    0x7f
  418e64:	loopne 0x418e19
  418e66:	aaa    
  418e67:	sbb    esi,DWORD PTR [ecx+0x4be8b43f]
  418e6d:	dec    edx
  418e6e:	adc    al,BYTE PTR [ebp-0x4c5c093c]
  418e74:	icebp  
  418e75:	ds inc esi
  418e77:	icebp  
  418e78:	call   DWORD PTR [ebp-0x3010c8b8]
  418e7e:	jne    0x418e99
  418e80:	(bad)  
  418e81:	in     eax,dx
  418e82:	call   0xb15c:0x6bb97869
  418e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e8a:	mov    esi,DWORD PTR [edi-0x5b]
  418e8d:	outs   dx,DWORD PTR ds:[esi]
  418e8e:	retf   0x2625
  418e91:	ror    eax,1
  418e93:	idiv   DWORD PTR [eax-0x2c2bfad0]
  418e99:	loope  0x418e3c
  418e9b:	(bad)  
  418e9c:	cld    
  418e9d:	jnp    0x418f13
  418e9f:	je     0x418e98
  418ea1:	mov    ecx,0x74ff5f8f
  418ea6:	or     eax,0xb004bcca
  418eab:	cmp    ebp,DWORD PTR [esi]
  418ead:	jg     0x418f23
  418eaf:	fs (bad) 
  418eb1:	(bad)  
  418eb2:	mov    ds:0xcb385626,eax
  418eb7:	push   esp
  418eb8:	dec    dx
  418eba:	dec    ebp
  418ebb:	fidivr DWORD PTR [eax-0x25]
  418ebe:	jo     0x418ee8
  418ec0:	cwde   
  418ec1:	and    ebp,DWORD PTR [esi+0x5c]
  418ec4:	sub    ebp,DWORD PTR [ebx+0x2d]
  418ec7:	out    0x3d,eax
  418ec9:	xchg   esp,eax
  418eca:	frstor [esp+eax*1-0x17]
  418ece:	out    dx,al
  418ecf:	sbb    ebp,DWORD PTR [edi-0x9]
  418ed2:	maxps  xmm5,XMMWORD PTR [edi+ecx*4-0x63fe1390]
  418eda:	adc    eax,0xb160e54e
  418edf:	xchg   DWORD PTR [ebx],ebp
  418ee1:	jns    0x418eef
  418ee3:	adc    al,0x65
  418ee5:	sub    DWORD PTR [ebx+0x64],ecx
  418ee8:	cdq    
  418ee9:	and    eax,0x5faf734
  418eee:	dec    edx
  418eef:	and    ch,cl
  418ef1:	mov    DWORD PTR [eax+0x44],ebp
  418ef4:	int    0xa
  418ef6:	aad    0x5
  418ef8:	stos   BYTE PTR es:[edi],al
  418ef9:	retw   
  418efb:	dec    ecx
  418efc:	jecxz  0x418f63
  418efe:	pop    ebx
  418eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f00:	out    0x1c,eax
  418f02:	or     eax,0xc3d6e6dd
  418f07:	and    BYTE PTR [edi+0x17],0xb3
  418f0b:	add    al,ch
  418f0d:	sbb    BYTE PTR [esi+esi*4+0x7c2b9313],ch
  418f14:	imul   edi,DWORD PTR [ebp+0x1c],0x65
  418f18:	adc    esi,DWORD PTR [ebx-0x1a]
  418f1b:	dec    edi
  418f1c:	sahf   
  418f1d:	ds nop
  418f1f:	repz cmp al,0x47
  418f22:	add    ah,dh
  418f24:	jo     0x418f4b
  418f26:	in     eax,0xb6
  418f28:	push   es
  418f29:	(bad)  
  418f2a:	pop    esp
  418f2b:	loope  0x418ed6
  418f2d:	push   edx
  418f2e:	xor    ebp,DWORD PTR [ecx+0x57]
  418f31:	xor    DWORD PTR [ebx+0xf],ebp
  418f34:	mov    ds:0x4e647982,eax
  418f39:	in     eax,0x35
  418f3b:	xchg   ebp,eax
  418f3c:	or     ah,ch
  418f3e:	pop    edx
  418f3f:	cmc    
  418f40:	xlat   BYTE PTR ds:[ebx]
  418f41:	arpl   WORD PTR ds:0xf6e34426,si
  418f47:	and    ecx,DWORD PTR [esi]
  418f49:	es or  eax,0x799ac91c
  418f4f:	(bad)  
  418f50:	shl    BYTE PTR [edx+0x7e69d835],cl
  418f56:	mov    al,0x2f
  418f58:	push   ds
  418f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f5a:	popa   
  418f5b:	inc    edi
  418f5c:	mov    al,0x23
  418f5e:	out    0x24,al
  418f60:	nop
  418f61:	mov    WORD PTR [esi],ss
  418f63:	xor    bh,BYTE PTR [edx-0x2b]
  418f66:	std    
  418f67:	add    BYTE PTR [eax-0x54aeb031],dl
  418f6d:	das    
  418f6e:	adc    bl,BYTE PTR [edx-0x352afe85]
  418f74:	add    BYTE PTR [ebp-0x5d44f693],dl
  418f7a:	sbb    BYTE PTR [esi+0x2df84b41],ah
  418f80:	ret    
  418f81:	rcr    BYTE PTR [edi-0x4185f31a],1
  418f87:	push   0x1d
  418f89:	lods   al,BYTE PTR ds:[esi]
  418f8a:	popf   
  418f8b:	pop    ecx
  418f8c:	loopne 0x418ff8
  418f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f8f:	in     al,dx
  418f90:	and    al,0x84
  418f92:	(bad)  
  418f94:	mov    bl,0x99
  418f96:	xchg   esp,eax
  418f97:	sub    dl,BYTE PTR [eax-0xe05c9f5]
  418f9d:	rcr    BYTE PTR [edx-0x59e78f37],cl
  418fa3:	xchg   ebx,eax
  418fa4:	mov    dh,0xcc
  418fa6:	rcr    BYTE PTR [ebx],1
  418fa8:	in     eax,dx
  418fa9:	pop    eax
  418faa:	or     BYTE PTR [esi],ch
  418fac:	jmp    0x2d74:0xc58443f9
  418fb3:	lods   eax,DWORD PTR ds:[esi]
  418fb4:	dec    edx
  418fb6:	test   eax,0x53d032f2
  418fbb:	outs   dx,BYTE PTR ds:[esi]
  418fbc:	mov    ch,0xfd
  418fbe:	mov    ds,WORD PTR [eax]
  418fc0:	mov    ds:0x45df781c,eax
  418fc5:	mov    ah,0x65
  418fc7:	dec    edx
  418fc8:	ror    BYTE PTR [eax],0x22
  418fcb:	add    edx,eax
  418fcd:	out    dx,eax
  418fce:	xor    dl,BYTE PTR [ebx]
  418fd0:	lahf   
  418fd1:	inc    eax
  418fd2:	push   edi
  418fd3:	mov    al,ds:0x86c05cf1
  418fd8:	inc    ecx
  418fd9:	and    eax,0x65373880
  418fde:	sbb    eax,DWORD PTR [edi]
  418fe0:	jle    0x419003
  418fe2:	push   edx
  418fe3:	fiadd  DWORD PTR [ebx+edx*1-0x62]
  418fe7:	mov    esi,0x69489a89
  418fec:	add    eax,0xaf34d141
  418ff1:	mov    edx,0x4367a6b3
  418ff6:	sub    edx,DWORD PTR [ebp-0x67]
  418ff9:	jge    0x419026
  418ffb:	aas    
  418ffc:	pop    ebp
  418ffd:	cmp    DWORD PTR ds:0x34f168d0,esi
  419003:	rol    eax,1
  419005:	mov    ch,0x3
  419007:	das    
  419008:	aaa    
  419009:	imul   ebp,DWORD PTR [ecx],0xffffffe3
  41900c:	hlt    
  41900d:	std    
  41900e:	test   BYTE PTR gs:[eax-0x57c8b74b],dh
  419015:	jbe    0x419030
  419017:	test   ecx,edx
  419019:	mov    DWORD PTR [edi-0x58f177b5],edx
  41901f:	scas   eax,DWORD PTR es:[edi]
  419020:	leave  
  419021:	in     al,dx
  419022:	inc    edx
  419023:	add    ah,bh
  419025:	retf   
  419026:	jmp    0x41902f
  419028:	in     eax,dx
  419029:	push   ebx
  41902a:	jns    0x41907e
  41902c:	jmp    0x418fe0
  41902e:	pushf  
  41902f:	data16 (bad) 
  419031:	cld    
  419032:	xchg   esp,eax
  419033:	ret    0xb68c
  419036:	jmp    0xd1fc5e87
  41903b:	in     eax,dx
  41903c:	cwde   
  41903d:	inc    ebx
  41903e:	pop    eax
  41903f:	and    BYTE PTR ds:0x9c45b2a,ch
  419045:	xchg   ebx,eax
  419046:	adc    eax,0x5a40364e
  41904b:	(bad)  [esi-0x7d]
  41904e:	xchg   esi,eax
  41904f:	jno    0x419086
  419051:	cdq    
  419052:	jo     0x4190af
  419054:	mov    ecx,0x6aa38a17
  419059:	pop    edx
  41905a:	jmp    0x4190c1
  41905c:	add    al,BYTE PTR [edx+0x54]
  41905f:	imul   ecx,DWORD PTR es:[esi-0x16],0x21
  419064:	iret   
  419065:	xchg   BYTE PTR [ebp-0x6193b3dd],bh
  41906b:	push   cs
  41906c:	jecxz  0x419057
  41906e:	or     al,0x6b
  419070:	jmp    0xf647:0x861c4a40
  419077:	mov    ebx,DWORD PTR [esi+0x5f]
  41907a:	inc    eax
  41907b:	dec    edi
  41907c:	clc    
  41907d:	jge    0x419049
  41907f:	sbb    al,0xdd
  419081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419082:	popa   
  419083:	mov    ?,WORD PTR [eax-0x7b]
  419086:	ins    DWORD PTR es:[edi],dx
  419087:	jns    0x419038
  419089:	or     al,0x7b
  41908b:	jl     0x419018
  41908d:	sub    esp,edi
  41908f:	imul   edi,ebx,0xffffffae
  419092:	xor    al,0xc6
  419094:	and    cl,ah
  419096:	or     DWORD PTR [edx],edi
  419098:	jo     0x4190a3
  41909a:	ss mov edi,0x72e6359b
  4190a0:	dec    ebp
  4190a1:	mov    bh,0xda
  4190a3:	in     al,dx
  4190a4:	retf   0x64ee
  4190a7:	retf   
  4190a8:	mov    DWORD PTR [ebp+0x12d7e2c7],esi
  4190ae:	sub    esi,DWORD PTR [esi+edi*1]
  4190b1:	pop    esi
  4190b2:	retf   0x8fec
  4190b5:	or     DWORD PTR [esi+0x10],eax
  4190b8:	ret    
  4190b9:	inc    esi
  4190ba:	sub    ch,BYTE PTR [ebx+edx*2]
  4190bd:	add    BYTE PTR [ecx-0x2d590100],0xc5
  4190c4:	les    ecx,FWORD PTR [ecx-0xc]
  4190c7:	retf   
  4190c8:	fcom   QWORD PTR [edx]
  4190ca:	fidiv  DWORD PTR [ebp+0x5f]
  4190cd:	jbe    0x41909b
  4190cf:	popa   
  4190d0:	jge    0x41911b
  4190d2:	xor    BYTE PTR [ebx],0x8d
  4190d5:	inc    edx
  4190d6:	out    0x7f,al
  4190d8:	call   0x6ea8b74a
  4190dd:	adc    ecx,DWORD PTR [eax]
  4190df:	push   ecx
  4190e0:	xchg   esi,eax
  4190e1:	xchg   edx,eax
  4190e2:	xor    DWORD PTR [edi-0x29e7ce5a],0x38
  4190e9:	adc    eax,0x35ff8031
  4190ee:	or     eax,0xadd6eac6
  4190f3:	dec    edx
  4190f4:	aad    0x3
  4190f6:	inc    esp
  4190f7:	addr16 mov edx,0xe428b436
  4190fd:	mov    esi,0x2d9e063b
  419102:	out    0x88,eax
  419104:	add    DWORD PTR [edi+0x7b1803bf],0xfc952e65
  41910e:	lods   eax,DWORD PTR ds:[esi]
  41910f:	cmp    BYTE PTR [ecx+0x79],ah
  419112:	lea    edi,[ebx]
  419114:	xor    BYTE PTR [edi-0x6],ah
  419117:	xchg   edx,eax
  419118:	inc    ecx
  419119:	mov    ah,0x88
  41911b:	sub    bh,cl
  41911d:	in     eax,dx
  41911e:	or     BYTE PTR [ebx],bh
  419120:	pop    ebx
  419121:	push   esi
  419122:	stc    
  419123:	out    0xbc,eax
  419125:	leave  
  419126:	dec    esp
  419127:	(bad)  
  419128:	adc    ebx,DWORD PTR [eax+0x36]
  41912b:	pop    es
  41912c:	(bad)  
  41912d:	clc    
  41912e:	xlat   BYTE PTR ds:[ebx]
  41912f:	shl    BYTE PTR [eax],cl
  419131:	test   DWORD PTR [esi+0x7310c769],ecx
  419137:	mov    dh,0xf2
  419139:	cmp    eax,0x59f8edd4
  41913e:	or     BYTE PTR [eax+0x1d],dl
  419141:	mov    dl,0x89
  419143:	push   ebp
  419144:	mov    al,0x8b
  419146:	push   ebp
  419147:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx-0x4908d874]
  419207:	ret    0x1783
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0xa2
  419213:	xor    esi,DWORD PTR [eax+ebx*1-0x30967059]
  41921a:	xchg   ecx,eax
  41921b:	fwait
  41921c:	adc    eax,0x6d37f052
  419221:	inc    DWORD PTR [ebx+0x70c6a33]
  419227:	outs   dx,BYTE PTR ds:[esi]
  419228:	sahf   
  419229:	jae    0x41923d
  41922b:	rcl    DWORD PTR [ecx],1
  41922d:	dec    ebp
  41922e:	jmp    0xde1c:0x7608bedb
  419235:	imul   DWORD PTR [edi-0x41c8c027]
  41923b:	cmp    eax,0xf1127b98
  419240:	ficomp DWORD PTR [eax]
  419242:	lahf   
  419243:	loopne 0x41921d
  419245:	in     eax,dx
  419246:	adc    esi,esi
  419248:	test   DWORD PTR [edi],edi
  41924a:	out    0xdb,eax
  41924c:	das    
  41924d:	and    bh,ah
  41924f:	add    al,0x9d
  419251:	add    ah,BYTE PTR [ebx+0x6c]
  419254:	sbb    DWORD PTR [edx-0x2216052],esp
  41925a:	int3   
  41925b:	inc    esi
  41925c:	call   0xb361fe53
  419261:	jmp    0x4192e0
  419263:	in     eax,0x57
  419265:	pop    ebp
  419266:	push   ds
  419267:	pop    esi
  419268:	(bad)  
  419269:	pop    edi
  41926a:	sub    eax,0x7ed58b3f
  41926f:	xor    BYTE PTR [edx],ch
  419271:	and    al,BYTE PTR [edx-0x37]
  419274:	mov    esp,0xd45357bf
  419279:	dec    ebp
  41927a:	push   cs
  41927b:	(bad)  
  41927c:	xchg   ecx,eax
  41927d:	cmp    edi,DWORD PTR [ebx]
  41927f:	and    ah,BYTE PTR [ecx]
  419281:	sub    ebp,ecx
  419283:	xchg   esi,eax
  419284:	xor    eax,0x9baf6286
  419289:	or     cl,BYTE PTR [esi+0x37]
  41928c:	push   ecx
  41928d:	ss leave 
  41928f:	pusha  
  419290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419291:	mov    ebp,0x62fec5b9
  419296:	sti    
  419297:	sbb    BYTE PTR [eax+ebx*4-0x46a33eb2],bl
  41929e:	test   BYTE PTR cs:0xc95dade8,dh
  4192a5:	(bad)  
  4192a6:	mov    dl,0x29
  4192a8:	mov    ah,0x4f
  4192aa:	jne    0x41923c
  4192ac:	push   edi
  4192ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192ae:	in     eax,0xdf
  4192b0:	and    eax,0x26fe98cb
  4192b5:	sub    esi,DWORD PTR [ebp+0x37]
  4192b8:	jns    0x4192e3
  4192ba:	call   0xc036d29a
  4192bf:	push   edx
  4192c0:	int3   
  4192c1:	xor    eax,0xf5bde9a3
  4192c6:	lods   eax,DWORD PTR ds:[esi]
  4192c7:	jno    0x419306
  4192c9:	inc    esi
  4192ca:	mov    ah,0x7e
  4192cc:	add    eax,0xba661a6
  4192d1:	add    eax,0x23d70af5
  4192d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192d7:	push   0xffffffab
  4192d9:	mov    edx,0xe3f725d2
  4192de:	test   bh,cl
  4192e0:	mov    ch,0xca
  4192e2:	sub    al,0x8a
  4192e4:	jae    0x419309
  4192e6:	iret   
  4192e7:	bound  eax,QWORD PTR [esi+0x15]
  4192ea:	and    DWORD PTR [ebx+eiz*4],ebp
  4192ed:	xchg   edi,esi
  4192ef:	jp     0x419310
  4192f1:	and    eax,0x71f260d8
  4192f6:	test   DWORD PTR [eax-0x7f],esi
  4192f9:	call   0xbdbb:0xc2026097
  419300:	in     al,0xd9
  419302:	mov    bl,0xaf
  419304:	cdq    
  419305:	cmp    DWORD PTR [edx+0x77],0xe9d12d3a
  41930c:	dec    eax
  41930d:	ins    DWORD PTR es:[edi],dx
  41930e:	call   0x9ba3:0xaa300245
  419315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419316:	xor    BYTE PTR [ebx-0x75f15801],dh
  41931c:	outs   dx,DWORD PTR ds:[esi]
  41931d:	mov    ch,0x99
  41931f:	pop    esp
  419320:	mov    ebp,0xd6e55d90
  419325:	mov    edi,0xf6009496
  41932a:	pop    esp
  41932b:	fmulp  st(2),st
  41932d:	fnstsw WORD PTR [edi-0x36340d16]
  419333:	(bad)  
  419334:	adc    ch,ah
  419336:	mov    bh,0x8b
  419338:	xor    BYTE PTR [ebx],cl
  41933a:	cmp    ah,BYTE PTR [edx+0x3068e313]
  419340:	icebp  
  419341:	cmp    eax,0x34ef4871
  419346:	dec    ebx
  419347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419348:	iret   
  419349:	sub    ah,BYTE PTR [eax+edx*2-0x4b0ed8eb]
  419350:	jg     0x4192fd
  419352:	and    ebx,ebx
  419354:	sbb    eax,DWORD PTR [eax+0x6715ddde]
  41935a:	inc    esi
  41935b:	fld    TBYTE PTR [eax-0x31b109b9]
  419361:	sbb    BYTE PTR [ecx+0xf3f4e6f],cl
  419367:	fadd   DWORD PTR [ebp+0xc]
  41936a:	xchg   edi,eax
  41936b:	or     dl,BYTE PTR [ecx]
  41936d:	enter  0x8d39,0x9
  419371:	or     DWORD PTR [eax],0xfffffff8
  419374:	lahf   
  419375:	cmp    eax,0x7ff33c60
  41937a:	mov    ch,0x50
  41937c:	dec    ebx
  41937d:	(bad)
  419380:	stos   DWORD PTR es:[edi],eax
  419381:	or     BYTE PTR [ebx-0x70],ch
  419384:	loopne 0x4193d7
  419386:	aas    
  419387:	ss loopne 0x41938e
  41938a:	xor    eax,0x3f18c94c
  41938f:	jae    0x4193fc
  419391:	lods   eax,DWORD PTR ds:[esi]
  419392:	pminub mm7,mm3
  419395:	mov    esp,0xbaff9382
  41939a:	pop    edi
  41939b:	dec    esp
  41939c:	cmp    cl,cl
  41939e:	mov    DWORD PTR [ebx-0x3c],ebx
  4193a1:	sub    ah,ah
  4193a3:	cmp    BYTE PTR [ecx],dh
  4193a5:	test   BYTE PTR [esi],0x4e
  4193a8:	jmp    0x650b:0x925098bb
  4193af:	or     al,0x1
  4193b1:	shl    DWORD PTR [eax-0xd],cl
  4193b4:	out    0x51,al
  4193b6:	aam    0xac
  4193b8:	adc    eax,0xdc23d689
  4193bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193be:	and    al,al
  4193c0:	dec    eax
  4193c1:	gs (bad) 
  4193c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c4:	js     0x4193dc
  4193c6:	jb     0x41939a
  4193c8:	mov    esi,0xe75b87b0
  4193cd:	or     eax,0x72feb622
  4193d2:	cli    
  4193d3:	cmp    eax,0x648c8589
  4193d8:	in     al,0x38
  4193da:	aad    0xe0
  4193dc:	lea    eax,[ebp+0x305c9af9]
  4193e2:	cdq    
  4193e3:	inc    edx
  4193e4:	and    ch,BYTE PTR [ebx+0xfbed6cf]
  4193ea:	jp     0x4193c1
  4193ec:	jp     0x41938e
  4193ee:	xchg   cl,bl
  4193f0:	sbb    DWORD PTR [ebx+0x37],ebp
  4193f3:	loop   0x4193c8
  4193f5:	sbb    ebp,DWORD PTR [ebp+0x4f52c8ae]
  4193fb:	pusha  
  4193fc:	push   es
  4193fd:	and    esp,ebp
  4193ff:	cmp    edx,DWORD PTR [ebx]
  419401:	aam    0x81
  419403:	scas   al,BYTE PTR es:[edi]
  419404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419405:	outs   dx,DWORD PTR ds:[esi]
  419406:	int3   
  419407:	jmp    0xb56c:0x27e51b70
  41940e:	mov    cl,0x9
  419410:	jbe    0x419467
  419412:	sti    
  419413:	xchg   edi,eax
  419414:	sub    bh,al
  419416:	add    eax,0x63f5e3e
  41941b:	daa    
  41941c:	loop   0x419496
  41941e:	xchg   ebp,eax
  41941f:	push   ds
  419420:	inc    esp
  419421:	mov    ebp,0xab0fb7f9
  419426:	cli    
  419427:	call   0x9f1a:0x9cb17dfb
  41942e:	div    BYTE PTR gs:[edi+0x6592de27]
  419435:	add    al,0x24
  419437:	scas   al,BYTE PTR es:[edi]
  419438:	ret    0x234
  41943b:	or     ebp,edi
  41943d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41943e:	mov    ch,0x3b
  419440:	sub    DWORD PTR [ecx-0x2f],edi
  419443:	mov    esp,DWORD PTR [ebp-0x3e]
  419446:	cmp    ch,BYTE PTR [esi+eax*8]
  419449:	sahf   
  41944a:	ja     0x4194b2
  41944c:	fist   WORD PTR [ecx+0x5f8aa5ee]
  419452:	imul   ebp,ebp,0xffffff9a
  419455:	adc    BYTE PTR [ebx],ch
  419457:	cmp    DWORD PTR [edx+eiz*2-0x7f2ebd3a],esi
  41945e:	sub    al,0x40
  419460:	loope  0x4194bc
  419462:	ss push ss
  419464:	les    edi,FWORD PTR [eax+0x1e]
  419467:	mov    eax,0xc1fec43b
  41946c:	cld    
  41946d:	fnsave [esi+0x23dd425d]
  419473:	mov    eax,0xa905b178
  419478:	pop    ds
  419479:	test   DWORD PTR [edx],edx
  41947b:	cli    
  41947c:	cmp    DWORD PTR [ebx+0x218ab89e],esi
  419482:	mov    ds:0x336a9cce,al
  419487:	scas   al,BYTE PTR es:[edi]
  419488:	push   ebx
  419489:	cmp    bl,BYTE PTR [ebp+edx*2+0xf5347aa]
  419490:	jae    0x4194c3
  419492:	cmp    DWORD PTR [ebx],edi
  419494:	jmp    0x9ef4:0x3fa93be
  41949b:	idiv   BYTE PTR [eax+0x30cca848]
  4194a1:	push   es
  4194a2:	loope  0x4194f6
  4194a4:	cmovne edx,DWORD PTR [ebx]
  4194a7:	fld    QWORD PTR cs:[edi+0x78f68cac]
  4194ae:	test   al,0x88
  4194b0:	inc    BYTE PTR [eax+0x16fcec79]
  4194b6:	mov    cl,BYTE PTR [esi+0x9]
  4194b9:	jge    0x4194df
  4194bb:	aad    0x98
  4194bd:	(bad)  
  4194be:	stos   DWORD PTR es:[edi],eax
  4194bf:	aam    0xf6
  4194c1:	pop    ecx
  4194c2:	pop    esp
  4194c3:	sar    BYTE PTR [esi+0x15],0xf8
  4194c7:	nop
  4194c8:	hlt    
  4194c9:	mov    al,ds:0x9c8f26a
  4194ce:	jg     0x419536
  4194d0:	mov    dh,0xf8
  4194d2:	test   edx,eax
  4194d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194d5:	add    eax,0xd0bea690
  4194da:	mov    dl,0x8b
  4194dc:	test   BYTE PTR [ebx-0x15],ah
  4194df:	popa   
  4194e0:	imul   esi,ebx,0x1b
  4194e3:	jge    0x4194f1
  4194e5:	jl     0x4194ed
  4194e7:	mov    esp,0xa0beda1c
  4194ec:	test   eax,eax
  4194ee:	push   edx
  4194ef:	fcmove st,st(3)
  4194f1:	adc    DWORD PTR [edi+ebp*2],ebx
  4194f4:	clc    
  4194f5:	fild   DWORD PTR [ebp+0x42]
  4194f8:	sar    BYTE PTR [esi+0x1c],cl
  4194fb:	or     BYTE PTR [esi+0x684083ef],ch
  419501:	fs adc al,0xc7
  419504:	lock xchg edi,eax
  419506:	sub    DWORD PTR [ebx+0x16],ecx
  419509:	repnz mul DWORD PTR ds:0x4725c893
  419510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419511:	fnstcw WORD PTR [ebx]
  419513:	sbb    edi,DWORD PTR [ebx+ebx*8+0x65]
  419517:	and    BYTE PTR [esp+ebp*4],cl
  41951a:	cmp    cl,BYTE PTR [edx+eax*2]
  41951d:	add    al,0x3e
  41951f:	in     eax,dx
  419520:	jnp    0x4194d8
  419522:	in     al,0xce
  419524:	adc    edi,DWORD PTR [edx-0x1b927d58]
  41952a:	(bad)  
  41952c:	sub    eax,0x7fc1942c
  419531:	in     eax,dx
  419532:	lea    ebx,[ebp+0xe]
  419535:	enter  0xa78c,0x1e
  419539:	mov    dl,0xe9
  41953b:	xchg   esi,eax
  41953c:	add    BYTE PTR [eax],0x95
  41953f:	xor    ecx,ebp
  419541:	sbb    DWORD PTR [ebp-0x6d],ebx
  419544:	push   ds
  419545:	(bad)  
  419547:	or     BYTE PTR [eax+0x6a],ch
  41954a:	test   eax,0xf75fbe18
  41954f:	mov    ?,WORD PTR [ecx-0x6d]
  419552:	push   esi
  419553:	lds    ebx,FWORD PTR [ebx-0x549466e5]
  419559:	jmp    0x419562
  41955b:	mov    edx,0x14dbd2ec
  419560:	push   es
  419561:	in     eax,dx
  419562:	pop    esi
  419563:	or     eax,0xb5c7ae1f
  419568:	inc    esp
  419569:	(bad)
  41956c:	pop    ss
  41956d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41956e:	addr16 in al,dx
  419570:	sbb    edx,DWORD PTR [esi+esi*2-0x5f]
  419574:	inc    eax
  419575:	in     al,0x2d
  419577:	mov    edi,fs
  419579:	push   edi
  41957a:	std    
  41957b:	test   edx,0x9f923a0f
  419581:	xchg   edx,eax
  419582:	jmp    0x76ebb4ca
  419587:	pop    esi
  419588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419589:	out    0x63,al
  41958b:	sbb    BYTE PTR [ecx+edi*8+0x7d024b4],ah
  419592:	ss xor al,0x99
  419595:	(bad)  
  419596:	int3   
  419597:	mov    al,0x2f
  419599:	pop    ds
  41959a:	int3   
  41959b:	ins    DWORD PTR es:[edi],dx
  41959c:	imul   esi,DWORD PTR [edx*8+0x4d1edcee],0x32
  4195a4:	clts   
  4195a6:	(bad)  
  4195a7:	ret    
  4195a8:	inc    eax
  4195a9:	gs cli 
  4195ab:	aad    0xf0
  4195ad:	mov    ebx,0x7aedd524
  4195b2:	bound  eax,QWORD PTR [ebx+0x4fbbdb10]
  4195b8:	in     al,dx
  4195b9:	iret   
  4195ba:	nop
  4195bb:	hlt    
  4195bc:	(bad)  
  4195bd:	fidivr DWORD PTR [ecx-0x4e]
  4195c0:	rcr    BYTE PTR [ecx+0xd10a0eb],0x74
  4195c7:	jae    0x41957f
  4195c9:	push   0xbcbbc207
  4195ce:	add    DWORD PTR [edi-0x217fea37],esp
  4195d4:	mov    ebx,DWORD PTR [esi]
  4195d6:	fdiv   st,st(2)
  4195d8:	loop   0x419579
  4195da:	xchg   ecx,eax
  4195db:	nop
  4195dc:	les    edi,FWORD PTR [ecx-0x19]
  4195df:	(bad)  
  4195e0:	jmp    0x48b991cf
  4195e5:	clc    
  4195e6:	call   0x2e6eb2b2
  4195eb:	fld    st(2)
  4195ed:	jo     0x41956f
  4195ef:	jge    0x4195c2
  4195f1:	(bad)  
  4195f2:	sub    edx,ebx
  4195f4:	and    eax,0x6413240c
  4195f9:	shl    edx,1
  4195fb:	jnp    0x419616
  4195fd:	mov    esp,0x53b4032a
  419602:	scas   eax,DWORD PTR es:[edi]
  419603:	mov    cl,0xed
  419605:	rcr    BYTE PTR [edx+edx*8],0x45
  419609:	mov    al,0xde
  41960b:	xchg   BYTE PTR [ecx+ecx*4+0x74662965],ch
  419612:	cmp    esi,ebp
  419614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419615:	and    DWORD PTR [edi],edx
  419617:	cmc    
  419618:	jle    0x419628
  41961a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41961b:	(bad)  
  41961c:	test   BYTE PTR [ebp-0x5e],0x70
  419620:	ins    DWORD PTR es:[edi],dx
  419621:	sub    eax,0x49025ed1
  419626:	je     0x4195f3
  419628:	jmp    0x41965f
  41962a:	mov    bh,0x6c
  41962c:	leave  
  41962d:	sub    DWORD PTR [esi+0x44],0x4e
  419631:	inc    esi
  419632:	les    ecx,FWORD PTR [ebp+esi*4-0x18]
  419636:	sub    al,0x7f
  419638:	test   BYTE PTR [ecx-0x2d],al
  41963b:	add    eax,0xa70d09b3
  419640:	xchg   esi,eax
  419641:	inc    esp
  419642:	xchg   ecx,eax
  419643:	fst    DWORD PTR [ebx]
  419645:	in     eax,0x90
  419647:	call   0x5656:0xb795df03
  41964e:	test   eax,0x7f8e5af2
  419653:	fs repnz std 
  419656:	rcl    BYTE PTR [edx-0x2e],1
  419659:	pop    esi
  41965a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41965b:	pop    ss
  41965c:	test   BYTE PTR [ebp+0x1d19568c],ah
  419662:	push   es
  419663:	fld    DWORD PTR [esi]
  419665:	popf   
  419666:	mov    WORD PTR [ecx],ss
  419668:	jb     0x4196bb
  41966a:	fcomp  DWORD PTR [eax+0x24]
  41966d:	in     eax,dx
  41966e:	inc    ecx
  41966f:	mov    DWORD PTR [ecx-0x11],ebx
  419672:	out    0xaf,al
  419674:	or     edi,esi
  419676:	or     al,0x71
  419678:	xchg   edx,eax
  419679:	arpl   WORD PTR [edx+eax*1+0x4b],dx
  41967d:	loopne 0x419654
  41967f:	mov    ds:0xf724ca29,eax
  419684:	ins    DWORD PTR es:[edi],dx
  419685:	loope  0x41960e
  419687:	inc    esp
  419688:	outs   dx,DWORD PTR ds:[esi]
  419689:	add    al,0x3e
  41968b:	adc    cl,BYTE PTR ds:0x1f424515
  419691:	add    BYTE PTR [edx+0x7008d7a0],bl
  419697:	out    dx,al
  419698:	mov    ds:0x5af702bf,al
  41969d:	jge    0x419697
  41969f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196a0:	mov    bh,0xca
  4196a2:	imul   ebx,DWORD PTR [edx],0x94a3df91
  4196a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196a9:	cmp    eax,0xdd3beb5d
  4196ae:	push   ebx
  4196af:	sub    eax,0xbe048561
  4196b4:	pop    esi
  4196b5:	push   ebx
  4196b6:	cs sbb al,0xd5
  4196b9:	dec    ebx
  4196ba:	xor    eax,0xe779a448
  4196bf:	out    0x3b,eax
  4196c1:	mov    ebx,0x8b197ac5
  4196c6:	jnp    0x41966b
  4196c8:	cs pop eax
  4196ca:	(bad)  
  4196cb:	jge    0x419738
  4196cd:	mov    esp,0x2e5adcb3
  4196d2:	scas   al,BYTE PTR es:[edi]
  4196d3:	ret    0x9f75
  4196d6:	lods   al,BYTE PTR ds:[esi]
  4196d7:	and    BYTE PTR [ebp-0x7c3d6979],ch
  4196dd:	add    al,0x63
  4196df:	fdiv   DWORD PTR [edx-0x30b9de31]
  4196e5:	mov    cl,0xe4
  4196e7:	pop    edi
  4196e8:	loopne 0x419688
  4196ea:	mov    eax,ds:0x9c4d5a2c
  4196ef:	xor    DWORD PTR [eax+0x18],0x165cf7c3
  4196f6:	in     al,dx
  4196f7:	xor    BYTE PTR [ebx-0x7d],cl
  4196fa:	call   0x2937b5e0
  4196ff:	mov    BYTE PTR [edx-0x5c3e63e],ch
  419705:	loop   0x419765
  419707:	push   ds
  419708:	bound  eax,QWORD PTR [esp+ebx*8+0xa8d8892]
  41970f:	out    0xfd,al
  419711:	dec    ebx
  419712:	enter  0x12b8,0x63
  419716:	mov    edi,DWORD PTR [eax+0x3d70491e]
  41971c:	xor    BYTE PTR [edi+0x480086],bh
  419722:	(bad)  
  419723:	(bad)  
  419725:	or     eax,0xffbd66ad
  41972a:	push   es
  41972b:	and    DWORD PTR [ebx+0x360b7e36],0xffffff90
  419732:	push   esp
  419733:	mov    al,0xe4
  419735:	jb     0x4196f4
  419737:	mov    BYTE PTR [edi+0x13],0x69
  41973b:	or     DWORD PTR [esi+0x76],edx
  41973e:	mov    bh,0x45
  419740:	(bad)  
  419741:	(bad)  [edi-0x22]
  419744:	imul   ebp,ebp,0x40
  419747:	push   0x8891e592
  41974c:	cwde   
  41974d:	dec    edx
  41974e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41974f:	dec    ecx
  419750:	test   eax,0xc7d40def
  419755:	inc    ebp
  419756:	jge    0x41973f
  419758:	jbe    0x41970e
  41975a:	push   DWORD PTR [ebp+0x4e]
  41975d:	adc    al,0xe1
  41975f:	xlat   BYTE PTR ds:[ebx]
  419760:	or     al,dh
  419762:	data16 jmp 0x419727
  419765:	push   ss
  419766:	xchg   ecx,eax
  419767:	cmp    eax,0x43
  41976a:	fnstenv [ecx]
  41976c:	test   eax,0xf520871b
  419771:	loopne 0x419770
  419773:	pop    edi
  419774:	mov    ebx,0x79390b7f
  419779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41977a:	fcom   DWORD PTR [ebx-0x27619e19]
  419780:	iret   
  419781:	cmp    ebx,DWORD PTR [ebp-0x1e]
  419784:	js     0x41976d
  419786:	inc    ebp
  419787:	nop
  419788:	ret    0x2853
  41978b:	push   ss
  41978c:	je     0x419725
  41978e:	data16 (bad) 
  419790:	mov    edx,0x465f376c
  419795:	add    DWORD PTR [ebx],0x43cb1baf
  41979b:	jecxz  0x419742
  41979d:	sub    al,0x4f
  41979f:	or     al,0xad
  4197a1:	jmp    0x495a:0xc2696f20
  4197a8:	mov    eax,ds:0x68b88c63
  4197ad:	out    dx,al
  4197ae:	rol    eax,0x6d
  4197b1:	es mov eax,0xae327bd2
  4197b7:	sbb    edi,DWORD PTR ds:0xca0e5b25
  4197bd:	push   cs
  4197be:	retf   0xaae6
  4197c1:	inc    edx
  4197c2:	rol    BYTE PTR [ebx],0x77
  4197c5:	adc    edi,DWORD PTR [ecx+0x6f]
  4197c8:	xchg   ebx,eax
  4197c9:	rcl    ebp,1
  4197cb:	out    0xbb,al
  4197cd:	loopne 0x41981f
  4197cf:	cs stc 
  4197d1:	jl     0x419826
  4197d3:	icebp  
  4197d4:	mov    ebp,ebx
  4197d6:	dec    edx
  4197d7:	xchg   edx,eax
  4197d8:	jno    0x419789
  4197da:	lods   al,BYTE PTR ds:[esi]
  4197db:	call   0xb15f:0x23293389
  4197e2:	js     0x4197e4
  4197e4:	push   esi
  4197e5:	(bad)  
  4197e6:	xor    DWORD PTR [ebx],ebp
  4197e8:	jns    0x419819
  4197ea:	jno    0x419842
  4197ec:	sti    
  4197ed:	mov    ds:0x3e311628,eax
  4197f2:	ret    
  4197f3:	mov    edx,0xfaf9f74
  4197f8:	mov    esi,0x29e7ddc0
  4197fd:	jae    0x419814
  4197ff:	call   0x34e9:0xaeb0d009
  419806:	adc    DWORD PTR [edx-0x32],edi
  419809:	mov    WORD PTR [ebx+edi*4-0x14d49db4],?
  419810:	or     esp,DWORD PTR [edi]
  419812:	jb     0x419836
  419814:	push   esi
  419815:	ins    DWORD PTR es:[edi],dx
  419816:	jecxz  0x419836
  419818:	(bad)  
  41981a:	push   esi
  41981b:	dec    ebx
  41981c:	popa   
  41981d:	cmp    eax,0xb46046ef
  419822:	push   esi
  419823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419824:	jbe    0x419834
  419826:	push   ds
  419827:	stos   DWORD PTR es:[edi],eax
  419828:	stos   DWORD PTR es:[edi],eax
  419829:	mov    ds:0xf4c47549,eax
  41982e:	ficom  DWORD PTR [edx-0x57d71187]
  419834:	inc    ecx
  419835:	add    eax,0xef5105ed
  41983a:	std    
  41983b:	pop    ecx
  41983c:	out    dx,al
  41983d:	or     eax,0x59c8d566
  419842:	out    0x6d,eax
  419844:	and    DWORD PTR [ebp+0x6a842912],0xffffffbd
  41984b:	(bad)  
  41984c:	dec    esp
  41984d:	adc    DWORD PTR [eax+0x32],esp
  419850:	cdq    
  419851:	xchg   ebp,eax
  419852:	mov    cl,0x7b
  419854:	xor    BYTE PTR [edx+0x60],al
  419857:	jno    0x4198d2
  419859:	jne    0x4198b3
  41985b:	and    BYTE PTR [edx+edi*1+0x5d],0x95
  419860:	push   esi
  419861:	adc    BYTE PTR [esi],dh
  419863:	cdq    
  419864:	out    0x1a,al
  419866:	call   FWORD PTR [edi+0x55]
  419869:	jno    0x41988c
  41986b:	mov    edx,fs
  41986d:	shl    DWORD PTR [edi+0x76],0xd
  419871:	push   eax
  419872:	sahf   
  419873:	and    ah,0x24
  419876:	fimul  DWORD PTR [eax-0x58bce245]
  41987c:	dec    esi
  41987d:	xchg   si,ax
  41987f:	scas   al,BYTE PTR es:[edi]
  419880:	std    
  419881:	cmp    eax,0x8a4cab50
  419886:	mov    ds:0x52fc0dc1,eax
  41988b:	(bad)  
  41988c:	repnz push esp
  41988e:	fwait
  41988f:	iret   
  419890:	call   0xc0b4:0xf1e8f959
  419897:	adc    eax,0x46bd2aa8
  41989c:	je     0x4198fd
  41989e:	push   ebp
  41989f:	sub    BYTE PTR [edx],0x2b
  4198a2:	push   0xf646a7a
  4198a7:	inc    ecx
  4198a8:	mov    ah,0x56
  4198aa:	retf   0x6bae
  4198ad:	xor    dh,BYTE PTR [esp+ecx*4+0x44d6ecbc]
  4198b4:	sahf   
  4198b5:	(bad)  
  4198b6:	ret    
  4198b7:	nop
  4198b8:	in     eax,dx
  4198b9:	outs   dx,DWORD PTR ds:[esi]
  4198ba:	push   eax
  4198bb:	test   eax,0x186d5633
  4198c0:	jmp    0x56971af0
  4198c5:	add    bh,BYTE PTR fs:[ebx+esi*2-0x3e]
  4198ca:	sub    al,0x67
  4198cc:	push   esp
  4198cd:	xor    ecx,DWORD PTR [edx]
  4198cf:	xor    al,0x1
  4198d1:	ror    BYTE PTR [edx-0x311dfa9],1
  4198d7:	jno    0x4198fe
  4198d9:	jbe    0x419892
  4198db:	iret   
  4198dc:	fs inc ebp
  4198de:	(bad)
  4198e1:	enter  0xb503,0xa8
  4198e5:	cmp    eax,0xc3af8579
  4198ea:	cmp    al,0x85
  4198ec:	sbb    ah,0xa3
  4198ef:	push   es
  4198f0:	jbe    0x419938
  4198f2:	push   edi
  4198f3:	js     0x4198cd
  4198f5:	cmc    
  4198f6:	in     al,dx
  4198f7:	das    
  4198f8:	out    0x3a,al
  4198fa:	mov    WORD PTR [eax],gs
  4198fc:	fsubr  DWORD PTR [edi+0x68]
  4198ff:	jg     0x4198e5
  419901:	popf   
  419902:	sbb    eax,0x16581731
  419907:	dec    eax
  419908:	mov    bl,0xea
  41990a:	retf   
  41990b:	loop   0x4198f7
  41990d:	sbb    BYTE PTR [edi-0x68],dh
  419910:	or     BYTE PTR [edi],cl
  419912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419913:	mov    ds:0xa37d671c,al
  419918:	mov    eax,0x8f30a222
  41991d:	mov    eax,0xb66504ab
  419922:	mov    edx,edi
  419924:	out    dx,al
  419925:	ins    DWORD PTR es:[edi],dx
  419926:	mul    BYTE PTR [edi-0x598665e7]
  41992c:	sbb    ebp,DWORD PTR [edx+0xf0eb5e6]
  419932:	stc    
  419933:	add    BYTE PTR [ebx+0x3b3ee181],bl
  419939:	pop    ecx
  41993b:	jns    0x419920
  41993d:	int    0x9a
  41993f:	cwde   
  419940:	lods   al,BYTE PTR ds:[esi]
  419941:	outs   dx,DWORD PTR ds:[esi]
  419942:	sbb    al,0x17
  419944:	mov    ecx,0x73b1ef6b
  419949:	(bad)  
  41994a:	cmp    al,0x7b
  41994c:	adc    eax,esp
  41994e:	add    DWORD PTR fs:[eax],edi
  419951:	outs   dx,DWORD PTR ds:[esi]
  419952:	sub    eax,0xfe3e93bd
  419957:	push   ecx
  419958:	lds    eax,FWORD PTR [eax+0x1ed66a9d]
  41995e:	jl     0x419959
  419960:	repnz xchg edx,eax
  419962:	jbe    0x41992d
  419964:	jnp    0x41992e
  419966:	xchg   esp,eax
  419967:	ss jmp 0x4199af
  41996a:	dec    esp
  41996b:	imul   eax,DWORD PTR [ebp-0x62],0xeea766db
  419972:	aaa    
  419973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419974:	jmp    0x41993d
  419976:	pushf  
  419977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419978:	in     al,0xd0
  41997a:	or     dh,dh
  41997c:	push   es
  41997d:	xchg   ebp,eax
  41997e:	aam    0x85
  419980:	sbb    ebx,DWORD PTR [esi-0x7d]
  419983:	scas   eax,DWORD PTR es:[edi]
  419984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419985:	push   esp
  419986:	sub    esp,ecx
  419988:	pop    ebp
  419989:	cmp    edi,esi
  41998b:	cmp    DWORD PTR [eax-0xaf835ef],0xb8f9111f
  419995:	out    0xa0,al
  419997:	cmp    ebx,DWORD PTR [bp+di-0x25]
  41999b:	push   cs
  41999c:	daa    
  41999d:	mov    edi,0x3d92845a
  4199a2:	push   0xffffffdc
  4199a4:	pusha  
  4199a5:	in     eax,dx
  4199a6:	sbb    DWORD PTR [eax+0x1e344ad3],ebp
  4199ac:	push   cs
  4199ad:	pop    esp
  4199ae:	push   edi
  4199af:	call   0xcb922ed5
  4199b4:	mov    eax,ds:0x9104c855
  4199b9:	push   ss
  4199ba:	stc    
  4199bb:	popa   
  4199bc:	and    BYTE PTR [ecx+0x35f1f83d],dl
  4199c2:	out    0x1c,al
  4199c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199c5:	iret   
  4199c6:	cdq    
  4199c7:	pop    esi
  4199c8:	aaa    
  4199c9:	push   ebp
  4199ca:	cmp    edx,DWORD PTR [edi+0x518d9c94]
  4199d0:	int    0x4b
  4199d2:	nop    DWORD PTR [edi+0x2c]
  4199d6:	daa    
  4199d7:	stos   DWORD PTR es:[edi],eax
  4199d8:	jb     0x419a4a
  4199da:	repz jns 0x4199f9
  4199dd:	cmp    al,0x86
  4199df:	mov    dl,0x13
  4199e1:	pop    edx
  4199e2:	push   ebp
  4199e3:	ret    
  4199e4:	mov    ebp,0xb2d19a27
  4199e9:	rcl    BYTE PTR [esi],0x6c
  4199ec:	out    dx,eax
  4199ed:	or     DWORD PTR [esi+eiz*8-0x1bf1f56e],0x805b98cc
  4199f8:	cmp    eax,ecx
  4199fa:	(bad)  
  4199fb:	sbb    esi,DWORD PTR [ebp+0xa7b76c1]
  419a01:	fadd   st(4),st
  419a03:	inc    eax
  419a04:	push   edx
  419a05:	mov    ecx,0x93f0f54b
  419a0a:	pop    ebp
  419a0b:	mov    al,ds:0x90339150
  419a10:	addr16 pop eax
  419a12:	inc    edi
  419a13:	loop   0x419a92
  419a15:	pop    edx
  419a17:	int3   
  419a18:	out    dx,al
  419a19:	sub    eax,0xf5a4b41f
  419a1e:	and    DWORD PTR [ebp-0x1],eax
  419a21:	clc    
  419a22:	inc    eax
  419a23:	sbb    ebp,esi
  419a25:	sub    BYTE PTR [ebp-0x2e4b8417],al
  419a2b:	mov    al,0x1d
  419a2d:	xchg   ebx,eax
  419a2e:	and    al,0xa8
  419a30:	mov    BYTE PTR [ebp+ebp*8-0x5d4117ef],ah
  419a37:	retf   
  419a38:	jns    0x419a88
  419a3a:	dec    esi
  419a3b:	ins    BYTE PTR es:[edi],dx
  419a3c:	ret    0x1ef3
  419a3f:	iret   
  419a40:	dec    ebp
  419a41:	or     edx,edi
  419a43:	cmp    DWORD PTR ds:0x56f882e8,0x1408a85e
  419a4d:	sub    DWORD PTR [ecx-0x74],edi
  419a50:	pop    esi
  419a51:	retf   
  419a52:	mov    eax,fs:0x4ec9414c
  419a58:	inc    ebp
  419a59:	js     0x4199de
  419a5b:	fisub  DWORD PTR [edi]
  419a5d:	cmp    DWORD PTR [ecx],0xf00bd591
  419a63:	int    0xbe
  419a65:	cli    
  419a66:	sub    BYTE PTR [ecx],bh
  419a68:	cmp    esi,DWORD PTR [ebx+0x469ac464]
  419a6e:	icebp  
  419a6f:	stc    
  419a70:	test   DWORD PTR [edx+0x69f2eef8],eax
  419a76:	fdiv   DWORD PTR [eax]
  419a78:	pushf  
  419a79:	sbb    eax,DWORD PTR [edx+0x72]
  419a7c:	idiv   BYTE PTR [eax+0x2fb8176]
  419a82:	sub    edx,DWORD PTR [eax]
  419a84:	fmul   QWORD PTR [eax]
  419a86:	in     al,dx
  419a87:	cmovp  ebp,DWORD PTR [edi]
  419a8a:	inc    ecx
  419a8b:	int3   
  419a8c:	test   al,0xd7
  419a8e:	ficom  DWORD PTR [ecx-0x5659e8e3]
  419a94:	js     0x419ac4
  419a96:	test   esi,ebx
  419a98:	(bad)  
  419a99:	pop    ss
  419a9a:	fwait
  419a9b:	daa    
  419a9c:	jl     0x419a2b
  419a9e:	jl     0x419afb
  419aa0:	popa   
  419aa1:	es sub esi,edi
  419aa4:	div    BYTE PTR [esi]
  419aa6:	test   DWORD PTR [edi+esi*1],edi
  419aa9:	adc    ah,BYTE PTR [esi+0x13]
  419aac:	not    BYTE PTR [ebx-0x6ffa77b9]
  419ab2:	xor    DWORD PTR [ebp-0x48a898e6],esp
  419ab8:	jb     0x419acb
  419aba:	push   eax
  419abb:	(bad)  
  419abc:	sub    BYTE PTR [esi],cl
  419abe:	scas   al,BYTE PTR es:[edi]
  419abf:	jmp    0xb8a2:0x6deed536
  419ac6:	fcomp  DWORD PTR gs:[ebx+0x12]
  419aca:	retf   
  419acb:	and    DWORD PTR [edi],ebx
  419acd:	repnz stos BYTE PTR es:[edi],al
  419acf:	xor    BYTE PTR [ecx+0x168845f9],0xd5
  419ad6:	sbb    BYTE PTR [edi],dh
  419ad8:	add    BYTE PTR [esi-0x3d],ah
  419adb:	lds    esi,FWORD PTR [edi+0x31f0dcce]
  419ae1:	(bad)  
  419ae2:	push   es
  419ae3:	pop    edx
  419ae4:	ret    
  419ae5:	push   ss
  419ae6:	push   esi
  419ae7:	push   ebp
  419ae8:	icebp  
  419ae9:	and    DWORD PTR [edi-0x4e],0x6863fe
  419af0:	fs jl  0x419a83
  419af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419af5:	aaa    
  419af6:	pop    esi
  419af7:	stos   DWORD PTR es:[edi],eax
  419af8:	aad    0x4e
  419afa:	or     BYTE PTR [ebx+0xd],dh
  419afd:	int3   
  419afe:	imul   edi,DWORD PTR [edi-0x30c1a416],0xfffffff9
  419b05:	sbb    al,0x31
  419b07:	and    al,0x2e
  419b09:	dec    ecx
  419b0a:	fstp   st(6)
  419b0c:	adc    edx,ebp
  419b0e:	mov    ecx,0x4019ec38
  419b13:	test   DWORD PTR ds:0x6ee18d6b,esp
  419b19:	pop    esi
  419b1a:	and    BYTE PTR [eax+0x79b53c7b],al
  419b20:	test   al,0xac
  419b22:	retf   0x5413
  419b25:	das    
  419b26:	(bad)  
  419b27:	ins    BYTE PTR es:[edi],dx
  419b28:	pop    esp
  419b29:	mov    ah,0xd6
  419b2b:	popa   
  419b2c:	sbb    ecx,ecx
  419b2e:	call   0xdde0:0x352b7cb0
  419b35:	ficom  DWORD PTR [edi]
  419b37:	pop    esp
  419b38:	retf   
  419b39:	aad    0xc
  419b3b:	or     al,0x39
  419b3d:	jmp    0xf967:0x3e94904a
  419b44:	xchg   esp,eax
  419b45:	adc    BYTE PTR [esi+0x20],al
  419b48:	mov    ah,0x2a
  419b4a:	inc    esp
  419b4b:	push   ebp
  419b4c:	mov    bh,0x37
  419b4f:	or     DWORD PTR [esi],0x27d1d700
  419b55:	sub    BYTE PTR [esi+esi*4-0x9],ch
  419b59:	in     al,0x30
  419b5b:	ins    DWORD PTR es:[edi],dx
  419b5c:	push   es
  419b5d:	jmp    0xe3a3:0xf5b1f397
  419b64:	mov    esi,0xb9867afa
  419b69:	jbe    0x419b64
  419b6b:	mov    dh,0x77
  419b6d:	push   edx
  419b6e:	xchg   ecx,eax
  419b6f:	sbb    esp,DWORD PTR [edi]
  419b71:	scas   eax,DWORD PTR es:[edi]
  419b72:	scas   al,BYTE PTR es:[edi]
  419b73:	pop    ebp
  419b74:	or     eax,DWORD PTR [ecx]
  419b76:	adc    DWORD PTR [esi+ebx*4+0x1b],0xdbf9f585
  419b7e:	iret   
  419b7f:	jb     0x419b68
  419b81:	dec    edi
  419b82:	pop    eax
  419b83:	jbe    0x419bc1
  419b85:	adc    al,0xa7
  419b87:	test   DWORD PTR [edi-0x3b8c02da],esi
  419b8d:	add    eax,0xf5f11f1
  419b92:	push   esp
  419b93:	lahf   
  419b94:	mov    bh,0x3d
  419b96:	and    edx,DWORD PTR [edi]
  419b98:	jg     0x419b5a
  419b9a:	icebp  
  419b9b:	jg     0x419c02
  419b9d:	sub    cl,BYTE PTR [esi+esi*4+0x2d]
  419ba1:	je     0x419b7b
  419ba3:	outs   dx,DWORD PTR ds:[esi]
  419ba4:	es sbb edx,esp
  419ba7:	(bad)  
  419ba8:	aam    0xe5
  419baa:	sbb    DWORD PTR [edi+0x422d6ad7],ecx
  419bb0:	and    dh,BYTE PTR [edx+0x7e]
  419bb3:	and    BYTE PTR [ebp-0x67ce589a],0xa2
  419bba:	adc    ebp,DWORD PTR [eax-0x2665e3e7]
  419bc0:	ror    DWORD PTR [esi+0x13ea8115],cl
  419bc6:	pop    eax
  419bc7:	push   ss
  419bc8:	xchg   edx,eax
  419bc9:	mov    esi,0x3574cbd0
  419bce:	pop    ebp
  419bcf:	pop    ds
  419bd0:	das    
  419bd1:	sbb    eax,0xc93d1be0
  419bd6:	cmp    DWORD PTR [eax],0x6d71b35c
  419bdc:	emms   
  419bde:	popa   
  419bdf:	add    BYTE PTR [esi+ebp*4],dl
  419be2:	add    edi,0x1b
  419be5:	loop   0x419b6f
  419be7:	cmp    bh,BYTE PTR [edx-0x28]
  419bea:	rcl    BYTE PTR [ecx+0x23],1
  419bed:	cmp    dl,BYTE PTR [eax-0x33de4510]
  419bf3:	sbb    eax,0x3923223
  419bf8:	(bad)  
  419bf9:	cmovle ebp,DWORD PTR [edx]
  419bfc:	mov    dh,0x93
  419bfe:	sahf   
  419bff:	sub    DWORD PTR [edx-0x397d5ba2],ebx
  419c05:	enter  0xb7c6,0x33
  419c09:	hlt    
  419c0a:	pop    ebx
  419c0b:	pop    edx
  419c0c:	mov    esi,0xae683af6
  419c11:	test   eax,0xc3a8e723
  419c16:	sbb    al,0xdb
  419c18:	cmp    BYTE PTR [ebx+0x41],ah
  419c1b:	test   al,0xda
  419c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c1e:	and    al,0xf8
  419c20:	aad    0x1
  419c22:	or     dh,BYTE PTR [esi+0x5c09e4ab]
  419c28:	fs sub eax,esi
  419c2b:	in     eax,0xbd
  419c2d:	xor    al,0x6b
  419c2f:	jmp    0x419c21
  419c31:	ds push esp
  419c33:	imul   eax,DWORD PTR [ecx-0x50],0x67387c0b
  419c3a:	cmp    esp,esi
  419c3c:	add    eax,0xcbdfb72e
  419c41:	adc    dh,BYTE PTR [esi-0x7bc5eca7]
  419c47:	xor    al,0x82
  419c49:	and    eax,0xaa2bc90b
  419c4e:	stos   DWORD PTR es:[edi],eax
  419c4f:	imul   BYTE PTR [eax]
  419c51:	enter  0x9aa,0xc4
  419c55:	sub    al,0xa1
  419c57:	es sub eax,0xa7e1cb87
  419c5d:	int    0x1e
  419c5f:	addr16 mov ebx,0x920154b
  419c65:	mov    esp,DWORD PTR [esi+0x36]
  419c68:	jl     0x419bf3
  419c6a:	dec    edx
  419c6b:	sbb    al,0x48
  419c6d:	paddusb mm4,QWORD PTR [edi+esi*2]
  419c71:	xor    al,0xf4
  419c73:	dec    esp
  419c74:	js     0x419c30
  419c76:	mov    WORD PTR [esi+0x55],ds
  419c79:	sub    DWORD PTR [esi+0x77],eax
  419c7c:	and    ebx,ebp
  419c7e:	lds    ebp,FWORD PTR [edi+0xe4949fa]
  419c84:	inc    eax
  419c85:	inc    esp
  419c86:	icebp  
  419c87:	mov    ds:0x79d8012,eax
  419c8c:	cdq    
  419c8d:	loop   0x419c7c
  419c8f:	lea    esp,[ebp+0x4]
  419c92:	pop    esp
  419c93:	stos   BYTE PTR es:[edi],al
  419c94:	push   0x941f1166
  419c99:	bnd ret 0xabc6
  419c9d:	loop   0x419ca2
  419c9f:	test   eax,0x54b18201
  419ca4:	adc    ch,cl
  419ca6:	les    edx,FWORD PTR ds:0x81c6b31e
  419cac:	ins    BYTE PTR es:[edi],dx
  419cad:	outs   dx,DWORD PTR ds:[esi]
  419cae:	lea    eax,[edx]
  419cb0:	hlt    
  419cb1:	out    dx,al
  419cb2:	mov    cl,0xac
  419cb4:	xchg   ebp,eax
  419cb5:	add    eax,0x96ca0f74
  419cba:	lock data16 jecxz 0x419c86
  419cbe:	sbb    BYTE PTR [ebx],al
  419cc0:	cld    
  419cc1:	push   0xb42f35b2
  419cc6:	inc    ebp
  419cc7:	add    edx,edx
  419cc9:	or     ah,dh
  419ccb:	out    dx,eax
  419ccc:	sbb    esp,edi
  419cce:	aas    
  419ccf:	inc    ecx
  419cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd1:	mov    ebx,DWORD PTR [eax]
  419cd3:	(bad)  
  419cd6:	gs mov ah,0x4f
  419cd9:	nop
  419cda:	mov    cl,0x58
  419cdc:	sub    eax,ecx
  419cde:	je     0x419d31
  419ce0:	pop    esi
  419ce1:	pop    ebp
  419ce2:	xchg   ebp,eax
  419ce3:	loope  0x419c9b
  419ce5:	pxor   mm5,QWORD PTR [ebx+0x7f]
  419ce9:	cmp    dh,BYTE PTR [edi+edx*1+0x21]
  419ced:	adc    DWORD PTR [edx+eiz*4],esi
  419cf0:	push   eax
  419cf1:	push   edi
  419cf2:	scas   eax,DWORD PTR es:[edi]
  419cf3:	inc    edi
  419cf4:	popf   
  419cf5:	(bad)  
  419cf6:	mov    bl,0x7d
  419cf8:	and    al,0x1
  419cfa:	mov    bh,0x8
  419cfc:	sub    BYTE PTR [esi],ah
  419cfe:	mov    dh,0xe6
  419d00:	xchg   esp,eax
  419d01:	mov    ch,0x2d
  419d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d04:	inc    ebx
  419d05:	rcr    DWORD PTR [esi+esi*2+0xf],cl
  419d09:	sbb    al,0x3a
  419d0b:	and    cl,0x98
  419d0e:	stos   DWORD PTR es:[edi],eax
  419d0f:	sbb    BYTE PTR [eax-0x4c],cl
  419d12:	iret   
  419d13:	adc    ch,cl
  419d15:	sub    esp,DWORD PTR [esi-0x54841df7]
  419d1b:	push   ss
  419d1c:	mov    eax,0x83b55d44
  419d21:	jne    0x419ca6
  419d23:	je     0x419d40
  419d25:	jo     0x419da6
  419d27:	xor    DWORD PTR [ecx-0x1cd536d4],esp
  419d2d:	scas   eax,DWORD PTR es:[edi]
  419d2e:	sbb    edx,edx
  419d30:	outs   dx,BYTE PTR ds:[esi]
  419d31:	mov    DWORD PTR [edx+0x79da8577],ebx
  419d37:	push   ebx
  419d38:	jns    0x419cd1
  419d3a:	add    al,0x40
  419d3c:	sub    ecx,DWORD PTR [ebp-0x7eb5e8c1]
  419d42:	test   BYTE PTR gs:[esp+edi*4-0x50],ah
  419d47:	mov    ebx,DWORD PTR [esp+ecx*4+0x794fcd6c]
  419d4e:	mov    dh,0x12
  419d50:	xor    ch,BYTE PTR [esi+0x2c0db017]
  419d56:	push   ebx
  419d57:	pop    ebx
  419d58:	push   cs
  419d59:	xchg   ebx,eax
  419d5a:	add    BYTE PTR cs:[eax+0x4afe3267],dh
  419d61:	and    DWORD PTR [edx+ebp*2-0x2d],eax
  419d65:	jmp    0xa91d:0xb4f08a45
  419d6c:	sub    ebp,DWORD PTR [edi-0x31]
  419d6f:	mov    ebp,0xe9ffbab5
  419d74:	fs push esi
  419d76:	jbe    0x419d0a
  419d78:	push   ds
  419d79:	arpl   WORD PTR ds:0xb1b563a7,sp
  419d7f:	inc    ecx
  419d80:	iret   
  419d81:	xchg   edx,eax
  419d82:	ins    BYTE PTR es:[edi],dx
  419d83:	ret    
  419d84:	inc    edx
  419d85:	pop    eax
  419d86:	imul   DWORD PTR [edi]
  419d88:	jg     0x419deb
  419d8a:	jge    0x419d32
  419d8c:	lock xor al,0x9
  419d8f:	xor    DWORD PTR [ecx-0x46],esi
  419d92:	(bad)  
  419d94:	enter  0xbbe,0x6b
  419d98:	int    0x1f
  419d9a:	sub    eax,0x230d1531
  419d9f:	in     al,0xf3
  419da1:	sub    al,0xde
  419da3:	inc    eax
  419da4:	xchg   edi,eax
  419da5:	fwait
  419da6:	push   0xc5629cd2
  419dab:	repnz mov ds,WORD PTR [ecx+0x6748142b]
  419db2:	sbb    edx,DWORD PTR [edi+ebp*4]
  419db5:	rcl    BYTE PTR [edi],cl
  419db7:	int    0xcd
  419db9:	mov    al,0x7e
  419dbb:	sbb    BYTE PTR [ecx],dl
  419dbd:	dec    edi
  419dbe:	sti    
  419dbf:	ret    0x1253
  419dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc3:	jns    0x419d81
  419dc5:	add    esi,eax
  419dc7:	cmp    DWORD PTR [eax+ebx*4-0x7f],edi
  419dcb:	cmp    al,0xad
  419dcd:	data16 mov ch,BYTE PTR [eax-0x4c87bdbd]
  419dd4:	repz mov edx,ebx
  419dd7:	scas   al,BYTE PTR es:[edi]
  419dd8:	cmp    eax,0x18c76c64
  419ddd:	in     eax,0x9d
  419ddf:	inc    eax
  419de0:	mov    eax,0x7d36e016
  419de5:	mul    BYTE PTR [edx+0x9d8df90]
  419deb:	pusha  
  419dec:	call   0xc54801a3
  419df1:	add    ebx,DWORD PTR [ecx+0x52]
  419df4:	out    0xbf,eax
  419df6:	ss aas 
  419df8:	call   0xb78d:0x66c7a12
  419dff:	retf   0x2445
  419e02:	jg     0x419df0
  419e04:	lods   al,BYTE PTR ds:[esi]
  419e05:	push   edi
  419e06:	jecxz  0x419e5d
  419e08:	push   ecx
  419e09:	enter  0xa440,0xdf
  419e0d:	scas   eax,DWORD PTR es:[edi]
  419e0e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419e10:	icebp  
  419e11:	call   0x340b:0x6f287567
  419e18:	js     0x419dd7
  419e1a:	in     eax,0xce
  419e1c:	mov    ebx,0x8192b182
  419e21:	xchg   esp,eax
  419e22:	pop    es
  419e23:	popa   
  419e24:	add    al,0xc9
  419e26:	or     bp,WORD PTR [ebx+0x3d]
  419e2a:	cmc    
  419e2b:	push   0xffffff8c
  419e2d:	mov    eax,0xb7d06959
  419e32:	cli    
  419e33:	test   edx,ebx
  419e35:	in     al,0x5b
  419e37:	xchg   esp,edi
  419e39:	sub    BYTE PTR [ecx],cl
  419e3b:	mov    esp,0xd0b39cc2
  419e40:	xchg   edi,eax
  419e41:	push   edi
  419e42:	xchg   DWORD PTR [edi],esi
  419e44:	jno    0x419ddf
  419e46:	xchg   esp,eax
  419e47:	push   0x21
  419e49:	sbb    al,0x74
  419e4b:	jne    0x419e72
  419e4d:	loop   0x419ea5
  419e4f:	out    dx,al
  419e50:	pop    esi
  419e51:	sub    eax,0x90254cd4
  419e56:	adc    BYTE PTR [esp+esi*2],bl
  419e59:	xor    eax,0x4cf42d36
  419e5e:	das    
  419e5f:	jmp    0x746a:0xe900a954
  419e66:	nop
  419e67:	xchg   ebp,eax
  419e68:	gs fsub st,st(6)
  419e6b:	rcr    BYTE PTR [edx+0x60],1
  419e6e:	(bad)  
  419e6f:	nop
  419e70:	fs (bad) 
  419e72:	dec    ebx
  419e73:	inc    ebx
  419e74:	pop    ebp
  419e75:	and    DWORD PTR [esi+ebx*2+0x1b],ecx
  419e79:	and    DWORD PTR [ecx],ebp
  419e7b:	add    cl,BYTE PTR [eax+0x19]
  419e7e:	push   ds
  419e7f:	jne    0x419ea6
  419e81:	jge    0x419e2b
  419e83:	jl     0x419ed6
  419e85:	add    DWORD PTR [ecx],0xf9cf1e4c
  419e8b:	mov    esi,0x59f36f33
  419e90:	push   ss
  419e91:	and    DWORD PTR [ebx+0x49],ecx
  419e94:	xchg   BYTE PTR [esi-0x5f],dh
  419e97:	int    0x8f
  419e99:	outs   dx,DWORD PTR ds:[esi]
  419e9a:	jmp    0xb50a:0x7c2fd9e4
  419ea1:	into   
  419ea2:	xor    WORD PTR [ebp+0x5014425],0xffbc
  419eaa:	push   esp
  419eab:	push   ss
  419eac:	repnz addr16 cld 
  419eaf:	(bad)  
  419eb0:	loope  0x419edd
  419eb2:	out    0x16,eax
  419eb4:	push   0xb9f202a6
  419eb9:	inc    esi
  419eba:	int    0x7a
  419ebc:	xlat   BYTE PTR ds:[ebx]
  419ebd:	or     eax,0xdc8eaf1d
  419ec2:	cmp    eax,DWORD PTR [edx-0x32]
  419ec5:	ins    BYTE PTR es:[edi],dx
  419ec6:	sbb    BYTE PTR [eax-0x21],ch
  419ec9:	mov    edi,0xde9ec18e
  419ece:	pop    ss
  419ecf:	sti    
  419ed0:	les    esi,FWORD PTR [ecx]
  419ed2:	inc    edi
  419ed3:	jnp    0x419ee7
  419ed5:	jg     0x419e8a
  419ed7:	mov    edi,0x7cfa88fa
  419edc:	ins    BYTE PTR es:[edi],dx
  419edd:	repnz out 0xdf,al
  419ee0:	loope  0x419f50
  419ee2:	or     DWORD PTR [esi],ebx
  419ee4:	dec    ebx
  419ee5:	in     eax,0x9e
  419ee7:	mov    cl,0x3f
  419ee9:	cdq    
  419eea:	stc    
  419eeb:	fild   DWORD PTR [ecx+eax*2-0x70]
  419eef:	and    esp,DWORD PTR [esi-0xbfce031]
  419ef5:	cs xchg ebx,esp
  419ef8:	(bad)  
  419ef9:	xchg   ebp,eax
  419efa:	cmp    al,0xf5
  419efc:	(bad)  
  419efd:	in     al,0xb2
  419eff:	fist   DWORD PTR [ebx+0x1b]
  419f02:	jp     0x419eda
  419f04:	(bad)  
  419f05:	mov    eax,ds:0x77c3eded
  419f0a:	clc    
  419f0b:	adc    BYTE PTR [eax+0x2d],0xcc
  419f0f:	bound  ebx,QWORD PTR [ecx+0x4d02916e]
  419f15:	lahf   
  419f16:	jecxz  0x419f1d
  419f18:	or     al,0x5b
  419f1a:	loope  0x419f05
  419f1c:	dec    ebx
  419f1d:	inc    ebx
  419f1e:	jle    0x419f3c
  419f20:	(bad)  
  419f21:	xchg   ebx,eax
  419f22:	push   esp
  419f23:	adc    dh,BYTE PTR [eax]
  419f25:	push   ss
  419f26:	sbb    DWORD PTR [ebx],eax
  419f28:	mov    DWORD PTR [edx],esp
  419f2a:	jl     0x419f09
  419f2c:	mov    BYTE PTR [edi+0x58996436],0x9
  419f33:	push   edx
  419f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f35:	imul   edx,esp,0x3e3b60a3
  419f3b:	push   cs
  419f3c:	cwde   
  419f3d:	add    DWORD PTR [ecx+0x67],edi
  419f40:	xor    dh,BYTE PTR [ebp-0x6818fb04]
  419f46:	mov    edi,0x41c223c7
  419f4b:	fs adc eax,0xa2e91434
  419f51:	pop    ss
  419f52:	int    0x4f
  419f54:	or     al,BYTE PTR [edi-0x70]
  419f57:	fs xor eax,edi
  419f5a:	sub    al,0xb
  419f5c:	arpl   bp,ax
  419f5e:	mov    esp,0x5824dfb0
  419f63:	ret    
  419f64:	sub    esp,esp
  419f66:	cmp    ch,BYTE PTR [edi]
  419f68:	mov    ds:0x91bd4b59,al
  419f6d:	stos   BYTE PTR es:[edi],al
  419f6e:	sbb    bl,BYTE PTR [esi+0x23]
  419f71:	pop    esp
  419f72:	aaa    
  419f73:	pop    esp
  419f74:	mov    ecx,0x597fc44a
  419f79:	dec    ecx
  419f7a:	sahf   
  419f7b:	xchg   BYTE PTR [ecx+0xb],dl
  419f7e:	ret    0xe45b
  419f81:	dec    ecx
  419f82:	mov    ebx,0xb17c7490
  419f87:	inc    esi
  419f88:	jbe    0x419fa2
  419f8a:	cdq    
  419f8b:	lahf   
  419f8c:	jecxz  0x419f3b
  419f8e:	(bad)  
  419f8f:	mov    bh,0xfd
  419f91:	int    0x67
  419f93:	or     al,0x27
  419f95:	retf   
  419f96:	popf   
  419f97:	xchg   edi,eax
  419f98:	mov    ch,0x63
  419f9a:	loope  0x419ff4
  419f9c:	test   BYTE PTR [edx-0x553a4c94],bh
  419fa2:	jecxz  0x419fee
  419fa4:	aad    0xd
  419fa6:	inc    ebp
  419fa7:	test   al,0xfd
  419fa9:	stos   DWORD PTR es:[edi],eax
  419faa:	sub    esi,ecx
  419fac:	in     eax,dx
  419fad:	push   0xbc8f2a51
  419fb2:	sbb    eax,0x5102fe6c
  419fb7:	leave  
  419fb8:	mul    ebp
  419fba:	cmp    BYTE PTR [esi+0x47],dh
  419fbd:	sbb    al,0xb2
  419fbf:	cld    
  419fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc1:	ret    0x4b7c
  419fc4:	fadd   DWORD PTR [ebp+ebp*2+0x718a0d16]
  419fcb:	dec    edx
  419fcc:	data16 jnp 0x419f69
  419fcf:	cmp    al,0xf
  419fd1:	cdq    
  419fd2:	xchg   DWORD PTR [ecx],esp
  419fd4:	aad    0xc0
  419fd6:	add    DWORD PTR [ebx-0xa18a2ab],eax
  419fdc:	test   eax,0xbae0fbac
  419fe1:	scas   eax,DWORD PTR es:[edi]
  419fe2:	mov    ebx,0x29d063f0
  419fe7:	jnp    0x419fce
  419fe9:	aaa    
  419fea:	pop    esp
  419feb:	js     0x419fae
  419fed:	or     al,0x43
  419fef:	stc    
  419ff0:	(bad)  
  419ff1:	fwait
  419ff2:	test   al,0xef
  419ff4:	int    0x8f
  419ff6:	cli    
  419ff7:	cmp    dh,BYTE PTR [edi+0x5469617b]
  419ffd:	das    
  419ffe:	cmp    DWORD PTR [esi],ecx
  41a000:	jnp    0x419ffe
  41a002:	cmp    al,0x4c
  41a004:	inc    edx
  41a005:	sar    BYTE PTR [ebx+0x1976e43e],0x6a
  41a00c:	pop    ecx
  41a00d:	scas   al,BYTE PTR es:[edi]
  41a00e:	outs   dx,DWORD PTR ds:[esi]
  41a00f:	iret   
  41a010:	pop    eax
  41a011:	push   ecx
  41a012:	retf   
  41a013:	cwde   
  41a014:	mov    ebp,0x36082fc
  41a019:	dec    eax
  41a01a:	(bad)  
  41a01b:	mov    ebp,0x92dc4949
  41a020:	jle    0x41a00d
  41a022:	retf   0x8303
  41a025:	jge    0x41a00b
  41a027:	pop    ss
  41a028:	rcl    DWORD PTR [ecx],cl
  41a02a:	cmp    al,0x28
  41a02c:	xchg   esp,eax
  41a02d:	mov    eax,ds:0x287d341f
  41a032:	dec    eax
  41a033:	dec    esi
  41a034:	xor    al,0xdf
  41a036:	mov    eax,ds:0xad9f8c50
  41a03b:	sbb    eax,0x2a7ca12a
  41a040:	and    DWORD PTR [eax+0x46],eax
  41a043:	jmp    0x7df8:0xa79501a1
  41a04a:	test   eax,0x3b35ac0d
  41a04f:	and    ah,BYTE PTR [ecx]
  41a051:	jg     0x41a08b
  41a053:	mov    dh,0x9e
  41a055:	jb     0x419fe4
  41a057:	ret    
  41a058:	pushf  
  41a059:	adc    al,0xa7
  41a05b:	inc    eax
  41a05c:	cmp    al,0xce
  41a05e:	enter  0xffe,0x1
  41a062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a063:	(bad)  
  41a064:	sti    
  41a065:	mov    al,0x5a
  41a067:	mov    DWORD PTR [eax],ecx
  41a069:	push   edi
  41a06a:	jb     0x41a086
  41a06c:	(bad)  
  41a06d:	xlat   BYTE PTR ds:[ebx]
  41a06e:	stos   BYTE PTR es:[edi],al
  41a06f:	or     eax,0x71d4d94a
  41a074:	in     al,dx
  41a075:	imul   ebx,DWORD PTR [ecx-0x2d869827],0x2c669032
  41a07f:	je     0x41a0ec
  41a081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a082:	inc    ebp
  41a083:	fistp  DWORD PTR [ecx]
  41a085:	pop    ebp
  41a086:	adc    eax,0x3cb1b459
  41a08b:	inc    ebx
  41a08c:	xchg   edi,eax
  41a08d:	cmp    edx,DWORD PTR [ecx+0x5b]
  41a090:	dec    edi
  41a091:	lods   al,BYTE PTR ds:[esi]
  41a092:	lahf   
  41a093:	leave  
  41a094:	add    al,0x0
  41a097:	jmp    0x41a035
  41a099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a09a:	(bad)  
  41a09c:	(bad)  
  41a09d:	adc    eax,0xc492be03
  41a0a2:	jle    0x41a0eb
  41a0a4:	jg     0x41a0e7
  41a0a6:	mov    al,ds:0xacc4e91
  41a0ab:	xchg   ecx,eax
  41a0ac:	repnz repz push es
  41a0af:	cmp    eax,0x9312e986
  41a0b4:	adc    ebp,edi
  41a0b6:	adc    DWORD PTR [edi-0x64df5028],0xdd4379fc
  41a0c0:	jp     0x41a048
  41a0c2:	sti    
  41a0c3:	addr16 daa 
  41a0c5:	adc    DWORD PTR ds:0x58eb0e79,ebx
  41a0cb:	sbb    BYTE PTR [eax+ebx*1],0xf6
  41a0cf:	adc    BYTE PTR [esi+0x296a0900],dh
  41a0d5:	pop    ecx
  41a0d6:	das    
  41a0d7:	aas    
  41a0d8:	mov    ch,BYTE PTR [eax+0x22a92003]
  41a0de:	icebp  
  41a0df:	stos   DWORD PTR es:[edi],eax
  41a0e0:	add    DWORD PTR [ebx],ebx
  41a0e2:	out    dx,eax
  41a0e3:	push   ebp
  41a0e4:	ds sub eax,0x60724ac6
  41a0ea:	mov    eax,ds:0x86c22f08
  41a0ef:	push   ds
  41a0f0:	repz lock jecxz 0x41a15c
  41a0f4:	(bad)  
  41a0f5:	adc    ch,BYTE PTR [edx-0x7445a679]
  41a0fb:	loopne 0x41a0a7
  41a0fd:	jmp    0x96cd:0x32c33b5a
  41a104:	adc    ch,BYTE PTR [edx+0x521b8132]
  41a10a:	stos   BYTE PTR es:[edi],al
  41a10b:	scas   eax,DWORD PTR es:[edi]
  41a10c:	mov    ecx,0xc381e96e
  41a111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a112:	jecxz  0x41a12e
  41a114:	inc    esp
  41a115:	push   esi
  41a116:	cli    
  41a117:	jb     0x41a149
  41a119:	outs   dx,BYTE PTR ds:[esi]
  41a11a:	sub    edx,DWORD PTR [eax]
  41a11c:	or     eax,0x8bb7c427
  41a121:	out    0x63,eax
  41a123:	jge    0x41a0e8
  41a125:	idiv   ch
  41a127:	xchg   edx,eax
  41a128:	fs hlt 
  41a12a:	neg    DWORD PTR ds:0x8ef42d9e
  41a130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a131:	xor    BYTE PTR [esi-0x78f44aa7],dh
  41a137:	enter  0x3e71,0xcd
  41a13b:	pop    edi
  41a13c:	dec    edi
  41a13d:	test   eax,0xf9361804
  41a142:	jo     0x41a140
  41a144:	loopne 0x41a175
  41a146:	jb     0x41a0f3
  41a148:	jle    0x41a181
  41a14a:	in     al,dx
  41a14b:	iret   
  41a14c:	shr    edx,cl
  41a14e:	dec    ecx
  41a14f:	xor    BYTE PTR [ecx],0xb
  41a152:	cdq    
  41a153:	sub    ah,BYTE PTR [edx+0x11]
  41a156:	test   DWORD PTR [ecx],eax
  41a158:	dec    eax
  41a159:	sbb    eax,0x6437ad9a
  41a15e:	cli    
  41a15f:	jp     0x41a150
  41a161:	pop    esi
  41a162:	xchg   cl,ah
  41a164:	fs push 0xffffffdb
  41a167:	xor    eax,0xe3163d53
  41a16c:	imul   eax,DWORD PTR [eax-0x6149b],0x9
  41a173:	push   esp
  41a174:	sbb    bl,BYTE PTR [ebp+0x27]
  41a177:	xchg   edi,eax
  41a178:	dec    eax
  41a179:	mov    dh,0x8
  41a17b:	stos   BYTE PTR es:[edi],al
  41a17c:	add    edx,DWORD PTR [edi-0x67df924d]
  41a182:	mov    ecx,0x7e0ea905
  41a187:	gs sub al,0x53
  41a18a:	cmp    BYTE PTR [eax],dh
  41a18c:	push   ebp
  41a18d:	pusha  
  41a18e:	lods   al,BYTE PTR ds:[esi]
  41a18f:	lods   eax,DWORD PTR ds:[esi]
  41a190:	push   edx
  41a191:	ror    DWORD PTR [esi+ebp*4+0x61],cl
  41a195:	hlt    
  41a196:	jp     0x41a1a2
  41a198:	jl     0x41a156
  41a19a:	cmc    
  41a19b:	lahf   
  41a19c:	lahf   
  41a19d:	outs   dx,BYTE PTR ds:[esi]
  41a19e:	ret    
  41a19f:	icebp  
  41a1a0:	cmc    
  41a1a1:	xchg   ebx,eax
  41a1a2:	sub    BYTE PTR [eax+edi*8+0x456d12ba],bh
  41a1a9:	pop    ebx
  41a1aa:	scas   al,BYTE PTR es:[edi]
  41a1ab:	fwait
  41a1ac:	sbb    DWORD PTR [ebp-0x6f],edi
  41a1af:	(bad)  
  41a1b0:	jp     0x41a190
  41a1b2:	xlat   BYTE PTR ds:[ebx]
  41a1b3:	adc    esi,0xffffffac
  41a1b6:	data16 je 0x41a22d
  41a1b9:	mov    eax,0xaf3baf32
  41a1be:	popf   
  41a1bf:	loope  0x41a216
  41a1c1:	dec    ebx
  41a1c2:	mov    edx,esp
  41a1c4:	sub    al,0x3a
  41a1c6:	ja     0x41a195
  41a1c8:	pop    ds
  41a1c9:	or     BYTE PTR [esi+eiz*1+0x35cc4be0],ch
  41a1d0:	jnp    0x41a207
  41a1d2:	cmp    ebx,DWORD PTR [edx]
  41a1d4:	inc    ebx
  41a1d5:	mov    ah,0x74
  41a1d7:	sub    cl,bl
  41a1d9:	jbe    0x41a183
  41a1db:	add    eax,DWORD PTR [edi+ecx*1+0x21629da7]
  41a1e2:	cmp    BYTE PTR ss:[ecx],0xef
  41a1e6:	jmp    0xc4d8:0x538b401a
  41a1ed:	pop    edi
  41a1ee:	out    dx,al
  41a1ef:	jo     0x41a23b
  41a1f1:	inc    ebp
  41a1f2:	js     0x41a197
  41a1f4:	mov    edx,0xdbf0865
  41a1f9:	push   ecx
  41a1fa:	mov    ah,0x20
  41a1fc:	scas   al,BYTE PTR es:[edi]
  41a1fd:	xchg   esi,eax
  41a1fe:	mov    ds:0xb802c4c4,eax
  41a203:	or     edx,DWORD PTR [ebp+0x6]
  41a206:	nop
  41a207:	xor    eax,0xf989822
  41a20c:	retf   0x3006
  41a20f:	outs   dx,BYTE PTR ds:[esi]
  41a210:	hlt    
  41a211:	or     BYTE PTR [eax],ah
  41a213:	dec    esp
  41a214:	push   ss
  41a215:	(bad)  
  41a216:	adc    eax,0x76b7e5c2
  41a21b:	sub    bh,bl
  41a21d:	and    BYTE PTR [esi+eiz*2+0x607ca3ae],dl
  41a224:	pop    ecx
  41a225:	sub    BYTE PTR [ecx],dh
  41a227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a228:	daa    
  41a229:	inc    edx
  41a22a:	enter  0xe589,0xd0
  41a22e:	stos   BYTE PTR es:[edi],al
  41a22f:	add    DWORD PTR [ebx+0x52165234],ecx
  41a235:	mov    ecx,0x1c614890
  41a23a:	scas   al,BYTE PTR es:[edi]
  41a23b:	mov    eax,ds:0xbe8ca710
  41a240:	adc    bh,bh
  41a242:	lds    ebp,FWORD PTR [esi-0x3aad35f2]
  41a248:	fcomp  DWORD PTR [esp+esi*2-0x34]
  41a24c:	das    
  41a24d:	fbld   TBYTE PTR [ecx+ecx*1]
  41a250:	(bad)  
  41a251:	int    0x3c
  41a253:	or     DWORD PTR [esi+0x7fb0fff5],eax
  41a259:	rcr    DWORD PTR ds:0xe10a4cb4,1
  41a25f:	pop    es
  41a260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a261:	inc    edi
  41a262:	aad    0x54
  41a264:	mov    ebp,0xcd02d438
  41a269:	in     eax,dx
  41a26a:	test   BYTE PTR [edx],dh
  41a26c:	mov    al,0x73
  41a26e:	xor    edx,esp
  41a270:	icebp  
  41a271:	push   ss
  41a272:	test   DWORD PTR [eax+eax*2-0x74],0x4d889021
  41a27a:	clc    
  41a27b:	sbb    al,0x6b
  41a27d:	jmp    0x41a245
  41a27f:	push   eax
  41a280:	mov    bl,0xf6
  41a282:	cmp    DWORD PTR [esi-0x64f5dd60],0xa90515ec
  41a28c:	retf   0xbcb6
  41a28f:	stos   DWORD PTR es:[edi],eax
  41a290:	in     al,0xc6
  41a292:	push   ecx
  41a293:	test   DWORD PTR [ebp-0x12d098d],ebp
  41a299:	pop    ds
  41a29a:	in     al,0x50
  41a29c:	repnz icebp 
  41a29e:	jno    0x41a2e4
  41a2a0:	xchg   ebp,eax
  41a2a1:	sub    DWORD PTR [edx+ebp*1-0x588ddf51],ebp
  41a2a8:	stos   BYTE PTR es:[edi],al
  41a2a9:	popf   
  41a2aa:	(bad)  
  41a2ab:	mov    bh,0xbb
  41a2ad:	(bad)  
  41a2ae:	xchg   edx,eax
  41a2af:	enter  0x6124,0xed
  41a2b3:	push   ecx
  41a2b4:	and    ch,ah
  41a2b6:	loope  0x41a335
  41a2b8:	fiadd  WORD PTR [ebx-0x52]
  41a2bb:	pop    ss
  41a2bc:	scas   eax,DWORD PTR es:[edi]
  41a2bd:	ja     0x41a2a7
  41a2bf:	mov    eax,ds
  41a2c1:	push   es
  41a2c2:	dec    edx
  41a2c3:	cdq    
  41a2c4:	mov    eax,0x1127f340
  41a2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ca:	mov    WORD PTR [esi+0x75],gs
  41a2cd:	and    ch,BYTE PTR [edx]
  41a2cf:	mov    edx,0xd2a06b6a
  41a2d4:	popa   
  41a2d5:	xchg   BYTE PTR [ebx-0x56],bh
  41a2d8:	xchg   edx,eax
  41a2d9:	jno    0x41a307
  41a2db:	js     0x41a25e
  41a2dd:	test   eax,0xc04be235
  41a2e2:	push   ecx
  41a2e3:	pushf  
  41a2e4:	ins    DWORD PTR es:[edi],dx
  41a2e5:	adc    DWORD PTR [eax],ebx
  41a2e7:	or     eax,DWORD PTR [esi-0x24]
  41a2ea:	mov    ecx,0x1b52e50f
  41a2ef:	das    
  41a2f0:	and    BYTE PTR [ecx],dh
  41a2f2:	mov    bh,0xc7
  41a2f4:	push   cs
  41a2f5:	popf   
  41a2f6:	cs xchg esp,eax
  41a2f8:	fisttp WORD PTR [eax+0x56]
  41a2fb:	popa   
  41a2fc:	jnp    0x41a311
  41a2fe:	imul   eax,DWORD PTR [esp+ebx*2],0x38
  41a302:	mov    DWORD PTR [esi-0x78fdb792],0xfa22f17f
  41a30c:	inc    ebp
  41a30d:	xchg   edi,ebx
  41a30f:	cmp    BYTE PTR [eax+0xe],0xe4
  41a313:	in     eax,0xa4
  41a315:	loop   0x41a2ce
  41a317:	pop    edx
  41a318:	test   BYTE PTR es:[esi],dl
  41a31b:	aas    
  41a31c:	adc    cl,bh
  41a31e:	dec    ebp
  41a31f:	add    DWORD PTR [esi],0x1f6c989a
  41a325:	inc    ebp
  41a326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a327:	push   cs
  41a328:	pop    es
  41a329:	add    BYTE PTR [ecx],ah
  41a32b:	in     eax,dx
  41a32c:	ds xor al,0xac
  41a32f:	out    dx,al
  41a330:	mov    eax,ds:0x41bcd1a2
  41a335:	sti    
  41a336:	mov    DWORD PTR [ecx+0x8536b3a],0xb2496c15
  41a340:	fsubp  st(7),st
  41a342:	mov    ecx,0x89a7552f
  41a347:	xor    DWORD PTR [edi],esp
  41a349:	aad    0x55
  41a34b:	inc    ebx
  41a34c:	pop    ebx
  41a34d:	pushf  
  41a34e:	or     eax,0x9daeae89
  41a353:	and    eax,0x10beb7b
  41a358:	add    BYTE PTR [edx+0xebc2250],bl
  41a35e:	mov    BYTE PTR [eax],dl
  41a360:	push   eax
  41a361:	int3   
  41a362:	adc    eax,0xf5204d10
  41a367:	scas   eax,DWORD PTR es:[edi]
  41a368:	out    0xb5,eax
  41a36a:	push   es
  41a36b:	mov    ebp,0xff97de2c
  41a370:	mov    eax,0xb10d9844
  41a375:	mov    ebp,0xcd934bd6
  41a37a:	cdq    
  41a37b:	or     ebp,DWORD PTR [ecx]
  41a37d:	add    DWORD PTR [esi-0x46],esi
  41a380:	js     0x41a39d
  41a382:	out    0xd7,al
  41a384:	mov    cl,0x76
  41a386:	cmp    eax,0x847152ed
  41a38b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a38c:	mov    al,0xc4
  41a38e:	test   eax,0xce64469a
  41a393:	sbb    BYTE PTR [ebx],ah
  41a395:	xor    cl,dl
  41a397:	bound  ebp,QWORD PTR [ebx]
  41a399:	in     al,0xc0
  41a39b:	jge    0x41a343
  41a39d:	inc    edi
  41a39e:	loop   0x41a33a
  41a3a0:	imul   ecx,edx,0xe6403677
  41a3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3a7:	inc    ecx
  41a3a8:	pop    eax
  41a3a9:	ja     0x41a3d6
  41a3ab:	ss pop ds
  41a3ad:	sahf   
  41a3ae:	rol    DWORD PTR [ecx-0x51],1
  41a3b1:	les    edi,FWORD PTR [esi+0x20]
  41a3b4:	aad    0xfb
  41a3b6:	mov    al,0x29
  41a3b8:	jmp    0x41a358
  41a3ba:	ins    BYTE PTR es:[edi],dx
  41a3bb:	pushf  
  41a3bc:	mov    bh,0x96
  41a3be:	test   dh,0x11
  41a3c1:	retf   0x6d8f
  41a3c4:	jo     0x41a3a3
  41a3c6:	fwait
  41a3c7:	cmc    
  41a3c8:	imul   edx,edi,0x48
  41a3cb:	jo     0x41a3a1
  41a3cd:	stos   DWORD PTR es:[edi],eax
  41a3ce:	fidiv  DWORD PTR [edx-0x5134ad39]
  41a3d4:	lds    esi,FWORD PTR [edi]
  41a3d6:	pop    esp
  41a3d7:	xor    cl,BYTE PTR [esi-0x1b936e30]
  41a3dd:	cmp    dl,BYTE PTR [edx+0x3e6af089]
  41a3e3:	cmp    eax,0xd19a2254
  41a3e8:	or     eax,0x18fa26c5
  41a3ed:	fisttp WORD PTR [ecx-0x5afe2ead]
  41a3f3:	mov    ch,0x73
  41a3f5:	add    eax,0xbe75be54
  41a3fa:	test   al,0x3a
  41a3fc:	push   eax
  41a3fd:	dec    edx
  41a3fe:	mov    BYTE PTR [edx+edi*4-0x78],bh
  41a402:	fstp   QWORD PTR [esi]
  41a404:	test   al,0x67
  41a406:	ret    
  41a407:	fsub   QWORD PTR [edi+ecx*2-0x1973d583]
  41a40e:	inc    edx
  41a40f:	mov    ds:0xb5382450,eax
  41a414:	lods   al,BYTE PTR ds:[esi]
  41a415:	fldenv [edi+0x2d2f6111]
  41a41b:	aam    0xd0
  41a41d:	push   ebp
  41a41e:	add    ebx,esi
  41a420:	mov    BYTE PTR [edi+0x19],0x25
  41a424:	xchg   DWORD PTR [ecx-0x469bc],eax
  41a42a:	fptan  
  41a42c:	fimul  DWORD PTR [ecx-0x388c65b7]
  41a432:	fmul   QWORD PTR [eax+edi*4+0x6bb40928]
  41a439:	in     eax,0x4e
  41a43b:	adc    al,0x64
  41a43d:	mov    ch,0x2a
  41a43f:	pop    esp
  41a440:	stos   DWORD PTR es:[edi],eax
  41a441:	es iret 
  41a443:	in     eax,dx
  41a444:	mov    bl,0x5e
  41a446:	inc    esp
  41a447:	fldcw  WORD PTR [edi]
  41a449:	and    ah,0xe9
  41a44c:	fstp   st(3)
  41a44e:	mov    al,dl
  41a450:	stos   BYTE PTR es:[edi],al
  41a451:	out    0xdb,eax
  41a453:	test   DWORD PTR [esi],edx
  41a455:	cdq    
  41a456:	in     ax,dx
  41a458:	(bad)  
  41a459:	sahf   
  41a45a:	ss xor ah,ch
  41a45d:	jp     0x41a458
  41a45f:	xchg   BYTE PTR [ebx],dh
  41a461:	cdq    
  41a462:	inc    eax
  41a463:	pop    esp
  41a464:	clc    
  41a465:	push   ecx
  41a466:	dec    ecx
  41a467:	jno    0x41a499
  41a469:	div    BYTE PTR [ecx-0x40]
  41a46c:	mov    ds:0xb9990d53,al
  41a471:	xor    ch,bh
  41a473:	jo     0x41a481
  41a475:	fist   WORD PTR [ebx-0x2478de08]
  41a47b:	les    edi,FWORD PTR [edx]
  41a47d:	push   cs
  41a47e:	je     0x41a43b
  41a480:	xchg   ebp,eax
  41a481:	loope  0x41a4f8
  41a483:	dec    ebp
  41a484:	sbb    ah,ch
  41a486:	imul   ebp
  41a488:	cld    
  41a489:	sbb    BYTE PTR [edi],dh
  41a48b:	jnp    0x41a40e
  41a48d:	jbe    0x41a4d4
  41a48f:	stos   BYTE PTR es:[edi],al
  41a490:	inc    edx
  41a491:	popa   
  41a492:	mov    ecx,0x6187abfa
  41a497:	dec    DWORD PTR [ebx-0x29f03fd9]
  41a49d:	mov    al,ds:0x5e23eb53
  41a4a2:	(bad)  
  41a4a3:	mul    BYTE PTR [ebp+0x56]
  41a4a6:	adc    dl,BYTE PTR [ebx-0xd]
  41a4a9:	jb     0x41a42b
  41a4ab:	push   ss
  41a4ac:	gs add eax,0x4a240e59
  41a4b2:	sbb    edi,ecx
  41a4b4:	lea    esp,ds:0x846b591f
  41a4ba:	pop    ebp
  41a4bb:	out    dx,eax
  41a4bc:	fisub  DWORD PTR [ecx-0x7b0a6c97]
  41a4c2:	clc    
  41a4c3:	and    DWORD PTR [edi],esi
  41a4c5:	ss (bad) 
  41a4c7:	enter  0x1312,0x93
  41a4cb:	push   edi
  41a4cc:	iret   
  41a4cd:	mov    eax,0x11482588
  41a4d2:	test   DWORD PTR [ecx+ebp*1-0x4e],ebx
  41a4d6:	xchg   esi,eax
  41a4d7:	cmp    dl,cl
  41a4d9:	out    dx,al
  41a4da:	jl     0x41a545
  41a4dc:	imul   eax,DWORD PTR [ecx-0x45],0x6e
  41a4e0:	cmc    
  41a4e1:	or     bl,BYTE PTR [eax-0x70]
  41a4e4:	scas   eax,DWORD PTR es:[edi]
  41a4e5:	fincstp 
  41a4e7:	pop    ebp
  41a4e8:	mov    edx,0x335a60b7
  41a4ed:	mov    bl,0x58
  41a4ef:	ins    BYTE PTR es:[edi],dx
  41a4f0:	cmc    
  41a4f1:	mov    bl,ah
  41a4f3:	dec    eax
  41a4f4:	or     dl,ch
  41a4f6:	outs   dx,BYTE PTR ds:[esi]
  41a4f7:	adc    al,0x9a
  41a4f9:	xlat   BYTE PTR ds:[ebx]
  41a4fa:	pop    esp
  41a4fb:	enter  0x3152,0xbd
  41a4ff:	sbb    eax,0x6bab73aa
  41a504:	adc    DWORD PTR [edx],esp
  41a506:	dec    eax
  41a507:	fstp   TBYTE PTR [ebx+0x4]
  41a50a:	stos   BYTE PTR es:[edi],al
  41a50b:	call   0xc495:0x78f740f0
  41a512:	sub    eax,ebp
  41a514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a515:	dec    ebx
  41a516:	mov    eax,0xff5b0f4
  41a51b:	std    
  41a51c:	sbb    DWORD PTR [edx-0x5556c208],esi
  41a522:	int    0x58
  41a524:	inc    edx
  41a525:	ins    BYTE PTR es:[edi],dx
  41a526:	mov    ds:0x653eb2ff,eax
  41a52b:	add    ch,ch
  41a52d:	repnz push ecx
  41a52f:	mov    esi,0x5c24fd22
  41a534:	fwait
  41a535:	out    0x6f,al
  41a537:	inc    ebp
  41a538:	js     0x41a50a
  41a53a:	inc    ebp
  41a53b:	outs   dx,DWORD PTR ds:[esi]
  41a53c:	inc    edi
  41a53d:	or     al,0x6a
  41a53f:	das    
  41a540:	push   0xffffffbe
  41a542:	cmp    ah,BYTE PTR [edx-0x56]
  41a545:	dec    edx
  41a546:	mov    dl,0xd0
  41a548:	jg     0x41a500
  41a54a:	aam    0xbf
  41a54c:	mov    al,ds:0xaf365b50
  41a551:	sbb    eax,0x49c6a540
  41a556:	fsubr  QWORD PTR [ebp-0x5b0a9493]
  41a55c:	push   esp
  41a55d:	pop    ss
  41a55e:	scas   eax,DWORD PTR es:[edi]
  41a55f:	dec    ebp
  41a560:	loope  0x41a590
  41a562:	mov    al,ds:0x5b535b90
  41a567:	ins    BYTE PTR es:[edi],dx
  41a568:	jns    0x41a558
  41a56a:	stos   DWORD PTR es:[edi],eax
  41a56b:	popf   
  41a56c:	cmp    al,0xef
  41a56e:	fild   DWORD PTR es:[esi+edx*2-0x7566a130]
  41a576:	or     ah,dl
  41a578:	xchg   esp,eax
  41a579:	xor    DWORD PTR [ebx+0x2f],ebx
  41a57c:	sub    DWORD PTR [edx],ecx
  41a57e:	pop    ebx
  41a57f:	sub    eax,0xac60eb39
  41a584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a585:	add    al,0x6e
  41a587:	pop    DWORD PTR [ecx]
  41a589:	xchg   BYTE PTR [ebx-0x41],dh
  41a58c:	pop    ebx
  41a58d:	sahf   
  41a58e:	add    esi,ebp
  41a590:	(bad)  
  41a591:	jbe    0x41a5fa
  41a593:	aas    
  41a594:	in     al,dx
  41a595:	shr    DWORD PTR [eax],cl
  41a597:	test   eax,0x5fb3df33
  41a59c:	rcr    DWORD PTR fs:0x3908408d,0x6d
  41a5a4:	xor    edx,ecx
  41a5a6:	push   ss
  41a5a7:	mov    eax,ds:0xefbba2c6
  41a5ac:	mov    ecx,edi
  41a5ae:	mov    dx,WORD PTR [ecx]
  41a5b1:	sbb    eax,0x5a9d8cfe
  41a5b6:	xchg   edx,eax
  41a5b7:	ins    DWORD PTR es:[edi],dx
  41a5b8:	pop    esp
  41a5b9:	inc    edx
  41a5ba:	push   ds
  41a5bb:	scas   al,BYTE PTR es:[edi]
  41a5bc:	xchg   esi,eax
  41a5bd:	rol    BYTE PTR [ecx],0xdc
  41a5c0:	inc    edi
  41a5c1:	les    esi,FWORD PTR [ebp-0x62ca1854]
  41a5c7:	mov    al,0xf7
  41a5c9:	xor    edi,DWORD PTR [ebx]
  41a5cb:	pop    esi
  41a5cc:	leave  
  41a5cd:	jae    0x41a600
  41a5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5d0:	retf   0x4156
  41a5d3:	icebp  
  41a5d4:	loopne 0x41a584
  41a5d6:	push   0x10
  41a5d8:	in     eax,0xd
  41a5da:	daa    
  41a5db:	pmaddwd mm6,QWORD PTR [eax+0x71]
  41a5df:	xor    ecx,edi
  41a5e1:	test   BYTE PTR [ebx+0x54],al
  41a5e4:	les    esp,FWORD PTR [eax+0x65fe0256]
  41a5ea:	imul   edx,ebp,0x33695b24
  41a5f0:	repnz mul BYTE PTR [ebx-0xd1c2af8]
  41a5f7:	stos   DWORD PTR es:[edi],eax
  41a5f8:	adc    BYTE PTR [ebp-0x7ee3e68e],bh
  41a5fe:	call   0xd0ebed4a
  41a603:	inc    esi
  41a604:	sub    al,0x9e
  41a606:	enter  0xb296,0x69
  41a60a:	push   ebp
  41a60b:	mov    al,ds:0xe6d7633
  41a610:	clc    
  41a611:	pop    edx
  41a612:	or     al,0xca
  41a614:	and    eax,0x24759c39
  41a619:	pop    edi
  41a61a:	daa    
  41a61b:	xchg   ecx,eax
  41a61c:	adc    BYTE PTR [esi+0x2ddfd6d8],dh
  41a622:	mov    al,0xaa
  41a624:	ins    DWORD PTR es:[edi],dx
  41a625:	xor    ecx,DWORD PTR [edi-0x6c]
  41a628:	dec    ebx
  41a629:	jge    0x41a685
  41a62b:	fdivr  DWORD PTR ds:[edi]
  41a62e:	mov    al,0x54
  41a630:	sub    al,0x67
  41a632:	(bad)  
  41a633:	push   esi
  41a634:	mov    esp,0xbe39ef57
  41a639:	(bad)  
  41a63a:	enter  0x8749,0xd7
  41a63e:	sub    eax,0x8bb2853a
  41a643:	sbb    al,0x52
  41a645:	pop    ecx
  41a646:	and    ah,BYTE PTR [esi]
  41a648:	lock xor BYTE PTR [esp+edx*1-0x59],cl
  41a64d:	sub    al,0x19
  41a64f:	dec    ecx
  41a650:	jg     0x41a650
  41a652:	pop    ecx
  41a653:	and    al,0x8b
  41a655:	xlat   BYTE PTR ds:[ebx]
  41a656:	sub    DWORD PTR [ebp+0x6d],eax
  41a659:	ret    0x3208
  41a65c:	ins    BYTE PTR es:[edi],dx
  41a65d:	push   ebx
  41a65e:	xchg   edi,eax
  41a65f:	or     dl,BYTE PTR [esi]
  41a661:	shr    BYTE PTR [esi+0x5fca76b9],1
  41a667:	sti    
  41a668:	push   edi
  41a669:	mov    al,0x30
  41a66b:	jbe    0x41a6b9
  41a66d:	lods   al,BYTE PTR ds:[esi]
  41a66e:	pop    eax
  41a66f:	jmp    0xe70efc5
  41a674:	sahf   
  41a675:	in     al,0x1c
  41a677:	cwde   
  41a678:	xor    al,0xcc
  41a67a:	std    
  41a67b:	push   ebp
  41a67c:	dec    esi
  41a67d:	js     0x41a6c0
  41a67f:	and    edx,DWORD PTR [esi+esi*1+0x7c]
  41a683:	dec    edx
  41a684:	sbb    eax,0xf95230ef
  41a689:	push   es
  41a68a:	fisub  DWORD PTR [esi]
  41a68c:	test   eax,0xb8079a39
  41a691:	mov    BYTE PTR [ecx+0x4f],bl
  41a694:	int    0x97
  41a696:	cmp    DWORD PTR [edx+0x6e],edx
  41a699:	add    DWORD PTR [esi-0x12],eax
  41a69c:	xchg   esi,eax
  41a69d:	jmp    0xade585ac
  41a6a2:	rcr    BYTE PTR [ebp-0x8],cl
  41a6a5:	bound  edx,QWORD PTR [ebp-0xb5fb088]
  41a6ab:	or     eax,DWORD PTR [eax]
  41a6ad:	rcr    bh,0x48
  41a6b0:	inc    eax
  41a6b1:	aam    0xac
  41a6b3:	xchg   edx,eax
  41a6b4:	push   cs
  41a6b5:	clc    
  41a6b6:	push   edx
  41a6b7:	adc    ch,ah
  41a6b9:	adc    BYTE PTR [ebp+0x4d99260a],0xa5
  41a6c0:	cld    
  41a6c1:	into   
  41a6c2:	push   ebx
  41a6c3:	cdq    
  41a6c4:	rol    DWORD PTR [ebx],cl
  41a6c6:	or     ch,BYTE PTR [ebx]
  41a6c8:	dec    edx
  41a6c9:	adc    al,0xa6
  41a6cb:	sar    BYTE PTR [edx+0x387c3df7],cl
  41a6d1:	aam    0x33
  41a6d3:	and    eax,0x82d5c413
  41a6d8:	push   cs
  41a6d9:	jno    0x41a68b
  41a6db:	pop    esi
  41a6dc:	stc    
  41a6dd:	adc    eax,0x4a72e6a4
  41a6e2:	cmp    ch,BYTE PTR [esi]
  41a6e4:	cmp    eax,0xb7f399b0
  41a6e9:	addr16 mov ch,0xc9
  41a6ec:	pop    ds
  41a6ed:	clc    
  41a6ee:	mov    ch,BYTE PTR [ecx-0x55a36660]
  41a6f4:	pop    esp
  41a6f5:	or     BYTE PTR [ebp-0x5f7c1d66],ch
  41a6fb:	mov    dh,0x5c
  41a6fd:	cdq    
  41a6fe:	or     DWORD PTR [edi],eax
  41a700:	push   cs
  41a701:	inc    ecx
  41a702:	pop    ebp
  41a703:	xor    BYTE PTR [ecx+esi*2-0x15],dh
  41a707:	xchg   esi,eax
  41a708:	cmp    eax,0x2c298d92
  41a70d:	daa    
  41a70e:	lahf   
  41a70f:	or     cl,BYTE PTR [edi+0x69e5421a]
  41a715:	scas   eax,DWORD PTR es:[edi]
  41a716:	dec    ecx
  41a717:	cmc    
  41a718:	ss mov dl,0xb3
  41a71b:	and    bh,al
  41a71d:	xchg   dl,dh
  41a71f:	mov    edx,0xda2e69cd
  41a724:	stc    
  41a725:	out    0x47,al
  41a727:	sub    eax,0x25d883a4
  41a72c:	outs   dx,BYTE PTR ds:[esi]
  41a72d:	adc    al,0x68
  41a72f:	or     al,0x5e
  41a731:	sub    al,BYTE PTR [edx]
  41a733:	call   0xe48e:0xaeda7207
  41a73a:	cli    
  41a73b:	dec    esp
  41a73c:	push   0x74ed722d
  41a741:	dec    esi
  41a742:	imul   esp,DWORD PTR [esi-0x32],0xffffff94
  41a746:	xor    ebx,DWORD PTR [esi+0x3b]
  41a749:	pop    esp
  41a74a:	(bad)  [edx+0x1491f4e1]
  41a750:	xchg   BYTE PTR [edx-0x5f],ah
  41a753:	stos   BYTE PTR es:[edi],al
  41a754:	sub    BYTE PTR [ebx],bl
  41a756:	sbb    eax,0x12f5c0f3
  41a75b:	mov    bh,0x9
  41a75d:	mov    dh,0x24
  41a75f:	pop    edx
  41a760:	lods   eax,DWORD PTR ds:[esi]
  41a761:	xchg   ebx,eax
  41a762:	mov    bh,0xb2
  41a764:	add    DWORD PTR [edi],edx
  41a766:	adc    BYTE PTR [ecx],bl
  41a768:	std    
  41a769:	sub    DWORD PTR [eax+0x620a036f],edi
  41a76f:	rol    DWORD PTR [ecx],1
  41a771:	sbb    eax,0xf5a1e4f9
  41a776:	out    0x46,al
  41a778:	es cs sti 
  41a77b:	bnd jg 0x41a788
  41a77e:	(bad)  
  41a77f:	mov    al,ds:0x8b6d1493
  41a784:	inc    ebx
  41a785:	aad    0xef
  41a787:	sbb    dh,dh
  41a789:	push   ebx
  41a78a:	or     eax,0xaf2e82c3
  41a78f:	lahf   
  41a790:	push   ebp
  41a791:	dec    ecx
  41a792:	lds    ebp,FWORD PTR [ebx]
  41a794:	je     0x41a7d5
  41a796:	jmp    0xdc49:0x561b21fb
  41a79d:	bound  ecx,QWORD PTR [ecx+0x3a490950]
  41a7a3:	jmp    0x94bf:0x86288a59
  41a7aa:	mov    edx,0x45c73535
  41a7af:	bound  esp,QWORD PTR [edx-0x5e]
  41a7b2:	and    al,bl
  41a7b4:	sub    al,0xab
  41a7b6:	and    al,0xb7
  41a7b8:	sti    
  41a7b9:	or     eax,0xbd451006
  41a7be:	xchg   ebx,eax
  41a7bf:	in     al,0xd3
  41a7c1:	adc    ch,BYTE PTR [esi-0x1f]
  41a7c4:	push   es
  41a7c5:	pop    ebx
  41a7c6:	xor    esp,DWORD PTR [esi-0x63]
  41a7c9:	jle    0x41a773
  41a7cb:	retf   0x5694
  41a7ce:	in     eax,0xc5
  41a7d0:	int3   
  41a7d1:	mov    eax,ds:0xa14156f0
  41a7d6:	jns    0x41a785
  41a7d8:	cli    
  41a7d9:	add    ebx,ebx
  41a7db:	jmp    0xfc4e:0x3c3f2f83
  41a7e2:	mov    BYTE PTR [ebp-0x25],bl
  41a7e5:	sbb    DWORD PTR [ecx+0x3e5fd1d],esp
  41a7eb:	xchg   DWORD PTR [eax-0x22],esp
  41a7ee:	jle    0x41a774
  41a7f0:	mov    ebp,DWORD PTR [esi]
  41a7f2:	mov    ah,0xe3
  41a7f4:	and    esp,DWORD PTR [eax+edx*2+0x40]
  41a7f8:	cmp    ebx,DWORD PTR [edx+0x66]
  41a7fb:	popf   
  41a7fc:	xor    al,0x9c
  41a7fe:	mov    edi,0x9fea174a
  41a803:	cdq    
  41a804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a805:	jge    0x41a7e7
  41a807:	and    BYTE PTR ds:0xb3e5c0e1,cl
  41a80d:	sub    eax,0x2b2cb091
  41a812:	lds    esi,FWORD PTR [edx-0x51]
  41a815:	cli    
  41a816:	pop    ebp
  41a817:	sahf   
  41a818:	scas   eax,DWORD PTR es:[edi]
  41a819:	xchg   ebx,eax
  41a81a:	add    al,0xb7
  41a81c:	aas    
  41a81d:	outs   dx,BYTE PTR ds:[esi]
  41a81e:	push   ds
  41a81f:	popa   
  41a820:	pop    esi
  41a821:	push   esi
  41a822:	mov    DWORD PTR [esi],ebp
  41a824:	pushf  
  41a825:	mov    eax,eax
  41a827:	jle    0x41a867
  41a829:	imul   ebx,DWORD PTR [ecx+0x69919454],0xffffffd1
  41a830:	fadd   QWORD PTR [eax-0x5d]
  41a833:	xchg   edx,eax
  41a834:	inc    ebp
  41a835:	jp     0x41a7c5
  41a837:	pandn  mm5,mm0
  41a83a:	push   ecx
  41a83b:	cld    
  41a83c:	test   BYTE PTR [eax+0x6b7bf0c7],0xd8
  41a843:	js     0x41a820
  41a845:	test   eax,0x206e6461
  41a84a:	mov    esp,DWORD PTR [eax-0x55c06338]
  41a850:	dec    ebx
  41a852:	jle    0x41a8af
  41a854:	push   cs
  41a855:	aam    0x2
  41a857:	std    
  41a858:	dec    eax
  41a859:	cli    
  41a85a:	xor    dh,BYTE PTR [ecx-0x4b1249d1]
  41a860:	xchg   ah,cl
  41a862:	fld    TBYTE PTR [edx+eax*1-0x57030969]
  41a869:	pop    ebx
  41a86a:	adc    bh,bl
  41a86c:	mov    DWORD PTR [edx+0x41],edx
  41a86f:	inc    edx
  41a870:	cmp    bh,BYTE PTR [edx+edx*4+0x68b43ec4]
  41a877:	in     eax,0x87
  41a879:	out    dx,al
  41a87a:	gs jae 0x41a872
  41a87d:	aas    
  41a87e:	jge    0x41a823
  41a880:	ja     0x41a848
  41a882:	mov    BYTE PTR [eax+0x31],dh
  41a885:	leave  
  41a886:	or     DWORD PTR [esp+edx*1+0x20],0xffffffe4
  41a88b:	popa   
  41a88c:	call   0xb2f5:0xb8edf459
  41a893:	loop   0x41a89d
  41a895:	int    0x33
  41a897:	sbb    BYTE PTR [eax-0x23],ah
  41a89a:	add    al,0x8c
  41a89c:	stos   DWORD PTR es:[edi],eax
  41a89d:	sbb    al,0x2
  41a89f:	push   cs
  41a8a0:	sub    ebp,DWORD PTR [esi]
  41a8a2:	fistp  WORD PTR [edi-0x64]
  41a8a5:	sbb    DWORD PTR [edi+0x5a],ebx
  41a8a8:	into   
  41a8a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8aa:	(bad)  
  41a8ab:	push   esp
  41a8ac:	xor    dl,BYTE PTR [esi-0x6cb89435]
  41a8b2:	sbb    esp,esi
  41a8b4:	inc    edi
  41a8b5:	jbe    0x41a8ba
  41a8b7:	mov    BYTE PTR [esi+0x67700c62],ah
  41a8bd:	pop    ds
  41a8be:	ins    BYTE PTR es:[edi],dx
  41a8bf:	add    ah,BYTE PTR [edx-0x559cbe9c]
  41a8c5:	push   ecx
  41a8c6:	sub    DWORD PTR [esp+esi*8+0x6f],edx
  41a8ca:	push   esp
  41a8cb:	push   ebx
  41a8cc:	(bad)  
  41a8ce:	inc    ebp
  41a8cf:	rol    BYTE PTR [edx-0x3a1a3279],cl
  41a8d5:	dec    eax
  41a8d6:	(bad)  
  41a8d7:	jecxz  0x41a87a
  41a8d9:	and    DWORD PTR [ecx-0x46a2a15c],eax
  41a8df:	dec    esp
  41a8e0:	mov    dh,0x67
  41a8e2:	dec    edx
  41a8e3:	retf   
  41a8e4:	jle    0x41a94f
  41a8e6:	jae    0x41a8b8
  41a8e8:	(bad)  
  41a8ea:	add    DWORD PTR [ebx+edi*2+0x256c21f6],ecx
  41a8f1:	push   ebx
  41a8f2:	cdq    
  41a8f3:	bound  ecx,QWORD PTR [ecx-0x1]
  41a8f6:	cs cli 
  41a8f8:	push   es
  41a8f9:	jmp    0x33f5:0x23bfc503
  41a900:	jns    0x41a921
  41a902:	or     BYTE PTR [ecx+0x57],bh
  41a905:	in     eax,dx
  41a906:	loopne 0x41a895
  41a908:	or     eax,0xcde7bc8c
  41a90d:	icebp  
  41a90e:	icebp  
  41a90f:	test   BYTE PTR [eax+0x39ed6bcf],cl
  41a915:	ja     0x41a929
  41a917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a918:	inc    ebx
  41a919:	cdq    
  41a91a:	cmp    edx,DWORD PTR [eax]
  41a91c:	dec    eax
  41a91d:	push   edi
  41a91e:	popf   
  41a91f:	xor    DWORD PTR ds:0x42fe3a9,edi
  41a925:	jbe    0x41a9a1
  41a927:	jg     0x41a924
  41a929:	inc    ebp
  41a92a:	inc    esi
  41a92b:	bound  esp,QWORD PTR ds:0xc81babb8
  41a931:	lahf   
  41a932:	mov    WORD PTR [esi+esi*1-0x2c9050b6],?
  41a939:	and    BYTE PTR [ebx+0x6b4b6164],al
  41a93f:	inc    edx
  41a940:	int    0x42
  41a942:	sub    ecx,DWORD PTR [eax]
  41a944:	call   0xfe28:0xa7a86b05
  41a94b:	imul   esp,DWORD PTR [ebx+0x55],0x76e0d2ad
  41a952:	cmp    edx,ebp
  41a954:	pop    es
  41a955:	jae    0x41a8f8
  41a957:	mul    DWORD PTR [ecx+0x6]
  41a95a:	push   ds
  41a95b:	mov    edx,0xc26635c6
  41a960:	inc    ebx
  41a961:	adc    eax,0xdb2395c6
  41a966:	mov    ah,0x6e
  41a968:	fstp   TBYTE PTR ds:0xaa21ab86
  41a96e:	stc    
  41a96f:	test   al,0xd0
  41a971:	pop    ecx
  41a972:	pusha  
  41a973:	rol    BYTE PTR [edi-0x3],1
  41a976:	mov    ds:0x50322481,al
  41a97b:	call   0xcef39307
  41a980:	out    dx,al
  41a981:	cmp    DWORD PTR ds:0x1f8e6cbd,edi
  41a987:	jge    0x41a972
  41a989:	repz mov ch,0x66
  41a98c:	fiadd  DWORD PTR [ebx-0x41]
  41a98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a990:	adc    DWORD PTR [ecx-0x4dfea18c],edi
  41a996:	adc    al,0xd5
  41a998:	ret    0x3157
  41a99b:	hlt    
  41a99c:	xchg   DWORD PTR [ebp-0x25],eax
  41a99f:	jb     0x41a9cd
  41a9a1:	iret   
  41a9a2:	aam    0xb3
  41a9a4:	jp     0x41a99a
  41a9a6:	sbb    BYTE PTR [ebx+0x458dc51c],dl
  41a9ac:	imul   ebp,DWORD PTR [ebx],0xffffffa7
  41a9af:	cmp    bh,0x41
  41a9b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9b3:	sbb    edx,DWORD PTR [edx+0x23]
  41a9b6:	(bad)
  41a9b9:	push   esi
  41a9ba:	add    eax,0x9b0ec301
  41a9bf:	cdq    
  41a9c0:	jg     0x41a956
  41a9c2:	cmp    al,0xa1
  41a9c4:	mov    ah,0xc8
  41a9c6:	or     DWORD PTR ds:0xf5656e9,esp
  41a9cc:	sub    ebp,DWORD PTR [esi]
  41a9ce:	xor    al,BYTE PTR [eax-0x2866e29f]
  41a9d4:	mov    dl,BYTE PTR [esi-0x47faaa]
  41a9da:	shl    BYTE PTR [ebx+esi*1+0x50],1
  41a9de:	or     DWORD PTR [edi-0x5c],0x97c58233
  41a9e5:	pushf  
  41a9e6:	std    
  41a9e7:	mov    WORD PTR [edx+0x40],ss
  41a9ea:	loopne 0x41aa4f
  41a9ec:	xchg   BYTE PTR [eax+0xcb1f758],al
  41a9f2:	mov    al,0x9a
  41a9f4:	mov    eax,ds:0xd204e4d
  41a9f9:	and    BYTE PTR [edx+0x5e70a870],0xed
  41aa00:	dec    eax
  41aa01:	push   ebp
  41aa02:	cli    
  41aa03:	pop    ds
  41aa04:	das    
  41aa05:	fnstenv [edi-0x6f2bb5f5]
  41aa0b:	push   0xa
  41aa0d:	and    al,0x15
  41aa0f:	(bad)  
  41aa10:	sbb    cl,BYTE PTR [ebx-0x2f70c195]
  41aa16:	shr    esi,0x5e
  41aa19:	pop    ebp
  41aa1a:	jb     0x41a9b6
  41aa1c:	mov    esi,0x6232027
  41aa21:	inc    ecx
  41aa22:	pop    ecx
  41aa23:	mov    esi,0xcbe0646e
  41aa28:	iret   
  41aa29:	jno    0x41a9d2
  41aa2b:	jo     0x41aa7d
  41aa2d:	jmp    edx
  41aa2f:	xchg   edx,eax
  41aa30:	pusha  
  41aa31:	mov    esi,0x9c251a21
  41aa36:	sub    esi,DWORD PTR [esp+eax*2-0x42]
  41aa3a:	jmp    0x41aa98
  41aa3c:	push   ds
  41aa3d:	cmc    
  41aa3e:	dec    eax
  41aa3f:	daa    
  41aa40:	outs   dx,DWORD PTR ds:[esi]
  41aa41:	xor    ebp,DWORD PTR [ebp+0x31fb4a88]
  41aa47:	add    al,0x62
  41aa49:	adc    DWORD PTR ds:0x62e5d018,ebx
  41aa4f:	test   eax,0xb4e7426d
  41aa54:	push   es
  41aa55:	mov    eax,0xb967ad8f
  41aa5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa5b:	rcl    edi,0xc1
  41aa5e:	(bad)  [edi-0x3b]
  41aa61:	outs   dx,DWORD PTR ds:[esi]
  41aa62:	repz ficomp WORD PTR [edx+0x1986b8e]
  41aa69:	xor    ecx,esp
  41aa6b:	mov    esi,0xc01eb69a
  41aa70:	push   ds
  41aa71:	je     0x41aab9
  41aa73:	push   ebx
  41aa74:	aad    0x61
  41aa76:	div    DWORD PTR [eax]
  41aa78:	lds    eax,FWORD PTR [ebx]
  41aa7a:	out    0x57,eax
  41aa7c:	mov    ecx,0xd21cc46b
  41aa81:	inc    edx
  41aa82:	pushf  
  41aa83:	(bad)  
  41aa84:	jmp    0x12fa0e3a
  41aa89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa8a:	sub    ch,bh
  41aa8c:	std    
  41aa8d:	inc    eax
  41aa8e:	stc    
  41aa8f:	lods   eax,DWORD PTR ds:[esi]
  41aa90:	loop   0x41aa24
  41aa92:	dec    esi
  41aa93:	add    eax,esp
  41aa95:	idiv   ecx
  41aa97:	xchg   esi,eax
  41aa98:	and    ebx,DWORD PTR [edx-0x6c9e8dfe]
  41aa9e:	in     eax,dx
  41aa9f:	std    
  41aaa0:	pop    ecx
  41aaa1:	sbb    edx,edi
  41aaa3:	or     edi,DWORD PTR [ecx-0x66]
  41aaa6:	add    eax,0xdd14d350
  41aaab:	enter  0xb407,0x57
  41aaaf:	pop    ebx
  41aab0:	sbb    DWORD PTR [eax+ecx*2],0xffffff9f
  41aab4:	jne    0x41aaa6
  41aab6:	loop   0x41aad3
  41aab8:	mov    ebx,0x30af4aa8
  41aabd:	mov    eax,ds:0xaa89391d
  41aac2:	xor    esp,edx
  41aac4:	gs pop bp
  41aac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aac8:	and    ecx,eax
  41aaca:	or     bl,BYTE PTR [edx-0xc91e11a]
  41aad0:	cmp    DWORD PTR [esi+0x76],0xffffffab
  41aad4:	cwde   
  41aad5:	xor    eax,0x9935dfb5
  41aada:	in     al,0xda
  41aadc:	inc    ebx
  41aadd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aade:	pushf  
  41aadf:	scas   eax,DWORD PTR es:[edi]
  41aae0:	jmp    0x41ab45
  41aae2:	aam    0xa8
  41aae4:	imul   esi,DWORD PTR [edx],0x63
  41aae7:	aas    
  41aae8:	enter  0xe33a,0x80
  41aaec:	loop   0x41aaae
  41aaee:	arpl   WORD PTR [edx-0x579e1243],dx
  41aaf4:	push   cs
  41aaf5:	int3   
  41aaf6:	outs   dx,DWORD PTR ds:[esi]
  41aaf7:	sti    
  41aaf8:	gs dec edi
  41aafa:	nop
  41aafb:	jae    0x41ab1a
  41aafd:	pop    edi
  41aafe:	jmp    0x41ab1a
  41ab00:	dec    edx
  41ab01:	call   0xa6f3:0x36e3d92f
  41ab08:	mov    edx,0xa9373720
  41ab0d:	retf   
  41ab0e:	xchg   ebx,eax
  41ab0f:	fdiv   st,st(4)
  41ab11:	jmp    ecx
  41ab13:	push   ebp
  41ab14:	cli    
  41ab15:	mov    bl,cl
  41ab17:	clc    
  41ab18:	mov    edi,0xc2a3a114
  41ab1d:	mov    BYTE PTR [ebp+esi*1-0x4a939f1e],ah
  41ab24:	cmp    DWORD PTR [ecx-0x24],ebp
  41ab27:	je     0x41ab3a
  41ab29:	pop    ecx
  41ab2a:	ss es xchg esp,eax
  41ab2d:	aad    0x7d
  41ab2f:	mov    cs,WORD PTR [ebx-0x33]
  41ab32:	ins    DWORD PTR es:[edi],dx
  41ab33:	mov    al,0xa1
  41ab35:	aas    
  41ab36:	and    bh,BYTE PTR [esi+0x58a2ae5c]
  41ab3c:	out    dx,al
  41ab3d:	fild   DWORD PTR [ebx-0x4]
  41ab40:	push   es
  41ab41:	pop    esi
  41ab42:	dec    eax
  41ab43:	cs jnp 0x41ab3d
  41ab46:	adc    dh,ch
  41ab48:	retf   0xb8ef
  41ab4b:	aas    
  41ab4c:	pusha  
  41ab4d:	out    0x33,eax
  41ab4f:	mov    ebx,DWORD PTR [edi+eiz*2+0x1851f6e8]
  41ab56:	(bad)  
  41ab57:	ss mov dh,0xe3
  41ab5a:	push   ds
  41ab5b:	sub    edx,ecx
  41ab5d:	sbb    ebx,DWORD PTR [edi-0x38c2c88b]
  41ab63:	popf   
  41ab64:	mov    WORD PTR [ecx-0x2b],cs
  41ab67:	shl    DWORD PTR [eax+0x5d],0xfa
  41ab6b:	aad    0x3a
  41ab6d:	stc    
  41ab6e:	in     al,0x7a
  41ab70:	enter  0xbc1d,0x5c
  41ab74:	cmp    esi,DWORD PTR [ecx-0x73]
  41ab77:	sbb    ch,BYTE PTR [esi-0x51]
  41ab7a:	xchg   ebx,eax
  41ab7b:	out    0x5f,al
  41ab7d:	inc    ebp
  41ab7e:	outs   dx,BYTE PTR ds:[esi]
  41ab7f:	push   0xb901b244
  41ab84:	push   eax
  41ab85:	rol    BYTE PTR [ecx+0x3e],cl
  41ab88:	imul   edi,DWORD PTR [eax+0x6b058121],0x2f
  41ab8f:	call   0x1e1577d4
  41ab94:	xchg   esp,eax
  41ab95:	or     al,0x3c
  41ab97:	mov    cl,0x62
  41ab99:	pop    ebp
  41ab9a:	push   ebx
  41ab9b:	push   esp
  41ab9c:	clc    
  41ab9d:	jnp    0x41ab9e
  41ab9f:	test   BYTE PTR [ebx-0x14],dl
  41aba2:	ins    BYTE PTR es:[edi],dx
  41aba3:	pop    esi
  41aba4:	pop    esi
  41aba5:	cmp    edi,ebp
  41aba7:	xor    al,0x85
  41aba9:	sahf   
  41abaa:	xchg   edx,eax
  41abab:	ret    
  41abac:	mov    esp,0x2774109e
  41abb1:	lds    esi,FWORD PTR [ebp+0x21c1ebf1]
  41abb7:	mov    bh,0x47
  41abb9:	repz mov dl,0x38
  41abbc:	js     0x41ab42
  41abbe:	push   ecx
  41abbf:	jmp    0xc7a467f7
  41abc4:	dec    ecx
  41abc5:	mov    ebx,0x3c152fdc
  41abca:	jle    0x41ac26
  41abcc:	pop    edx
  41abcd:	xor    BYTE PTR [edx+0x2c],bl
  41abd0:	cmc    
  41abd1:	sub    BYTE PTR [eax],0xb5
  41abd4:	jno    0x41abf3
  41abd6:	push   esi
  41abd7:	(bad)  
  41abd8:	hlt    
  41abd9:	arpl   cx,dx
  41abdb:	xchg   edx,eax
  41abdc:	imul   esp,DWORD PTR [esi+0x12],0x16
  41abe0:	push   es
  41abe1:	test   BYTE PTR [edi+edi*8],bl
  41abe4:	shr    dl,0xe5
  41abe7:	push   edx
  41abe8:	out    dx,eax
  41abe9:	std    
  41abea:	ret    0xb9be
  41abed:	cmc    
  41abee:	lds    ebx,FWORD PTR ds:0xfc03aabb
  41abf4:	adc    bl,al
  41abf6:	push   ebp
  41abf7:	ds add al,0x6c
  41abfa:	(bad)  
  41abfb:	mul    BYTE PTR [edi-0x5a]
  41abfe:	ss xor dh,bh
  41ac01:	test   al,0xd3
  41ac03:	jo     0x41aba2
  41ac05:	or     DWORD PTR [ebx+0x37],esp
  41ac08:	push   edi
  41ac09:	std    
  41ac0a:	add    eax,0xc4ee12d8
  41ac0f:	test   al,0x30
  41ac11:	sub    bl,BYTE PTR [eax+0x6c61a787]
  41ac17:	and    edx,DWORD PTR [ecx-0xb0c97d4]
  41ac1d:	jle    0x41aba8
  41ac1f:	jno    0x41ac0e
  41ac21:	mov    ah,0xfb
  41ac23:	ss aas 
  41ac25:	and    BYTE PTR [eax+0x18dcda9a],bl
  41ac2b:	es mov ecx,0x9263e402
  41ac31:	(bad)  
  41ac32:	mov    eax,0xa6475423
  41ac37:	jb     0x41abc9
  41ac39:	xchg   DWORD PTR [edx+0xf],ebx
  41ac3c:	pop    ss
  41ac3d:	dec    esp
  41ac3e:	(bad)  
  41ac3f:	test   al,0x81
  41ac41:	out    dx,al
  41ac42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac43:	pop    ss
  41ac44:	cwde   
  41ac45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac46:	(bad)  [ebp+0x48]
  41ac49:	lea    ebp,[edi-0x6f]
  41ac4c:	call   0xf32f:0x3a28a5b
  41ac53:	jb     0x41abe8
  41ac55:	je     0x41ac62
  41ac57:	cli    
  41ac58:	mov    ebp,0x9ea7cde4
  41ac5d:	call   0xbefd:0xfebcd370
  41ac64:	mov    eax,ds:0x7744b173
  41ac69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac6a:	stos   DWORD PTR es:[edi],eax
  41ac6b:	push   ebx
  41ac6c:	js     0x41ac01
  41ac6e:	push   edi
  41ac6f:	push   es
  41ac70:	clc    
  41ac71:	fistp  QWORD PTR [ebx+esi*8+0x61]
  41ac75:	mov    eax,ds:0xea2b465e
  41ac7a:	inc    esi
  41ac7b:	pop    DWORD PTR [eax+0x25]
  41ac7e:	mov    ds:0xb4189365,eax
  41ac83:	fidiv  WORD PTR [ebp-0x6a7b416e]
  41ac89:	inc    edx
  41ac8a:	aad    0x24
  41ac8c:	mov    ?,WORD PTR [esi-0x13da6201]
  41ac92:	add    DWORD PTR [esi-0x1d3548cd],eax
  41ac98:	cs jle 0x41acbc
  41ac9b:	cmp    edi,DWORD PTR [edx-0x3bb8ad22]
  41aca1:	cmc    
  41aca2:	pop    es
  41aca3:	pop    eax
  41aca4:	test   BYTE PTR [edx+0x19c97fdb],al
  41acaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acab:	mov    esi,0x5037f68a
  41acb0:	cmp    al,0x5a
  41acb2:	gs jbe 0x41ac3d
  41acb5:	dec    esi
  41acb6:	mov    cl,BYTE PTR [esi-0x8]
  41acb9:	test   DWORD PTR [edx-0x7be9e493],esp
  41acbf:	test   dl,0x45
  41acc2:	or     al,0x1a
  41acc4:	cmp    DWORD PTR [edi-0x1945529c],0xffffffe7
  41accb:	xchg   edi,eax
  41accc:	pop    ds
  41accd:	mov    WORD PTR [esp+esi*1],ss
  41acd0:	sbb    ecx,DWORD PTR [edx+0x6e]
  41acd3:	mov    gs,WORD PTR [edx+0x23]
  41acd6:	or     edx,0xffffff90
  41acd9:	outs   dx,BYTE PTR ds:[esi]
  41acda:	dec    eax
  41acdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acdc:	mov    bh,0x21
  41acde:	outs   dx,DWORD PTR ds:[esi]
  41acdf:	cmp    ch,bl
  41ace1:	(bad)  
  41ace2:	sbb    BYTE PTR ds:0x4733c2c7,al
  41ace8:	xor    BYTE PTR [edi],al
  41acea:	push   ss
  41aceb:	arpl   WORD PTR [edi],di
  41aced:	sbb    eax,0xd8a43594
  41acf2:	in     eax,0x96
  41acf4:	dec    eax
  41acf5:	ror    DWORD PTR [esi-0x7436e9dd],cl
  41acfb:	mov    ebp,0x76665421
  41ad00:	add    ah,BYTE PTR [ebx]
  41ad02:	imul   esp,DWORD PTR [esi],0xa7586a59
  41ad08:	lods   al,BYTE PTR ds:[esi]
  41ad09:	clc    
  41ad0a:	push   cs
  41ad0b:	call   0xaef7:0xb5612706
  41ad12:	ret    0x9289
  41ad15:	push   ecx
  41ad16:	jnp    0x41ad84
  41ad18:	adc    eax,0x8299f049
  41ad1d:	cmp    eax,0x5c9f3344
  41ad22:	in     al,dx
  41ad23:	push   ecx
  41ad24:	jb     0x41acdb
  41ad26:	rcl    DWORD PTR [ebp+0x5f],cl
  41ad29:	repnz clc 
  41ad2b:	inc    esi
  41ad2c:	bnd jge 0x41ad37
  41ad2f:	mov    edi,0xbe7bb4ff
  41ad34:	jo     0x41acdd
  41ad36:	cs xchg edi,eax
  41ad38:	loopne 0x41ad5b
  41ad3a:	pop    esi
  41ad3b:	push   es
  41ad3c:	dec    ecx
  41ad3d:	mov    edi,0x8ebf1e1e
  41ad42:	push   0x53
  41ad44:	sub    eax,0xbe4e3446
  41ad49:	mov    WORD PTR [ecx+0x328f6df2],cs
  41ad4f:	lea    ecx,[ebx-0x3a]
  41ad52:	fs ins DWORD PTR es:[edi],dx
  41ad54:	mov    ds:0xa64cc2a,eax
  41ad59:	bound  ecx,QWORD PTR [eax-0x1781e81c]
  41ad5f:	and    ch,ah
  41ad61:	lods   al,BYTE PTR ds:[esi]
  41ad62:	iret   
  41ad63:	stos   BYTE PTR es:[edi],al
  41ad64:	jge    0x41ad37
  41ad66:	xor    eax,0x1b259725
  41ad6b:	daa    
  41ad6c:	mov    ecx,0x95821e37
  41ad71:	not    BYTE PTR [eax-0x4c448a77]
  41ad77:	add    ebp,DWORD PTR [edi+0x27]
  41ad7a:	shl    BYTE PTR [ecx+0x34550cd9],1
  41ad80:	lea    ebp,[edi]
  41ad82:	retf   0xb0be
  41ad85:	sub    eax,0x743739e
  41ad8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad8b:	ins    DWORD PTR es:[edi],dx
  41ad8c:	inc    esp
  41ad8d:	lea    esp,[ebx-0x30a867f9]
  41ad93:	dec    ebx
  41ad94:	outs   dx,BYTE PTR ds:[esi]
  41ad95:	sub    cl,ch
  41ad97:	and    DWORD PTR [esi+eiz*8+0x29eac0fd],esi
  41ad9e:	test   eax,0x565bf1c4
  41ada3:	fild   QWORD PTR [ecx-0x33da3cd1]
  41ada9:	pushf  
  41adaa:	ror    bh,cl
  41adac:	pop    ebp
  41adad:	loope  0x41adaf
  41adaf:	lds    ebp,FWORD PTR [eax]
  41adb1:	call   0x7f9758ce
  41adb6:	and    eax,0x19be4b7a
  41adbb:	call   0x8c51:0x3fa4591
  41adc2:	(bad)  
  41adc3:	fistp  WORD PTR [ecx+ebp*8-0x2457b845]
  41adca:	arpl   ax,cx
  41adcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adcd:	sbb    BYTE PTR [eax+ebx*2],bl
  41add0:	or     eax,0xb5e7bfa2
  41add5:	(bad)  
  41add6:	addr16 pop esi
  41add8:	mov    edi,0x96185717
  41addd:	ror    BYTE PTR ds:0x1374cdc6,cl
  41ade3:	jmp    0x156900d2
  41ade8:	daa    
  41ade9:	out    0xc0,eax
  41adeb:	inc    edx
  41adec:	pop    ecx
  41aded:	xor    dl,BYTE PTR [edx-0x62]
  41adf0:	cmp    al,0xa5
  41adf2:	xchg   ebx,eax
  41adf3:	stos   BYTE PTR es:[edi],al
  41adf4:	imul   esi,DWORD PTR [edi],0x30
  41adf7:	add    ecx,esi
  41adf9:	adc    BYTE PTR [esi],0x2
  41adfc:	fidivr WORD PTR [eax-0x7e]
  41adff:	push   edx
  41ae00:	push   es
  41ae01:	pusha  
  41ae02:	mov    ecx,DWORD PTR [ecx]
  41ae04:	pusha  
  41ae05:	sub    dl,BYTE PTR [ecx]
  41ae07:	pop    ss
  41ae08:	pop    edi
  41ae09:	pop    edx
  41ae0a:	daa    
  41ae0b:	pop    esi
  41ae0c:	cli    
  41ae0d:	(bad)  
  41ae0e:	pop    edi
  41ae0f:	or     esp,DWORD PTR [ebx+0x4e]
  41ae12:	out    dx,al
  41ae13:	lds    esi,FWORD PTR [ecx]
  41ae15:	cmp    BYTE PTR [esi-0x3e],0x9
  41ae19:	popa   
  41ae1a:	xchg   esp,eax
  41ae1b:	arpl   WORD PTR [ebx+esi*2],bp
  41ae1e:	and    dl,BYTE PTR [ecx]
  41ae20:	inc    ebx
  41ae21:	leave  
  41ae22:	mov    eax,0x7c97700
  41ae27:	push   edi
  41ae28:	rcr    BYTE PTR [ebp+0x2b],0x2c
  41ae2c:	les    edi,FWORD PTR [edx]
  41ae2e:	pop    ds
  41ae2f:	jb     0x41adfa
  41ae31:	aam    0x28
  41ae33:	outs   dx,DWORD PTR ds:[esi]
  41ae34:	inc    edx
  41ae35:	lods   eax,DWORD PTR ds:[esi]
  41ae36:	popa   
  41ae37:	xchg   ebx,eax
  41ae38:	in     al,dx
  41ae39:	cs inc edi
  41ae3b:	shr    al,cl
  41ae3d:	and    DWORD PTR [eax-0x50],ecx
  41ae40:	ins    DWORD PTR es:[edi],dx
  41ae41:	stos   BYTE PTR es:[edi],al
  41ae42:	pop    ecx
  41ae43:	sub    al,0xd
  41ae45:	adc    DWORD PTR [edx-0x56abe46d],ebp
  41ae4b:	jb     0x41ae81
  41ae4d:	es mov bh,0x77
  41ae50:	ja     0x41aea2
  41ae52:	xchg   DWORD PTR [edi-0x7f7fb5b],esi
  41ae58:	out    0x4b,al
  41ae5a:	push   cs
  41ae5b:	shl    BYTE PTR [ecx-0x2770615e],cl
  41ae61:	jne    0x41aeb3
  41ae63:	cli    
  41ae64:	pop    esp
  41ae65:	fmul   st(7),st
  41ae67:	cwde   
  41ae68:	loop   0x41ae0f
  41ae6a:	test   DWORD PTR [edi],edi
  41ae6c:	jbe    0x41adf7
  41ae6e:	aad    0x97
  41ae70:	neg    DWORD PTR [esi]
  41ae72:	xor    al,BYTE PTR [ebx+0x5b8700a2]
  41ae78:	rcl    DWORD PTR [ebx+0x25],cl
  41ae7b:	mov    edi,0x6a5a93f3
  41ae80:	pushf  
  41ae81:	push   eax
  41ae82:	enter  0x4d5f,0xe0
  41ae86:	ret    0xfb2f
  41ae89:	adc    BYTE PTR [esi-0xae42238],dl
  41ae8f:	inc    ebx
  41ae90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae91:	and    al,0xf4
  41ae93:	push   ecx
  41ae94:	in     al,0xc8
  41ae96:	sbb    BYTE PTR [ebp+0x5671077b],bl
  41ae9c:	mov    ebx,0xf3fd60be
  41aea1:	and    al,0x6b
  41aea3:	stc    
  41aea4:	or     al,0x22
  41aea6:	inc    esi
  41aea7:	mov    bh,0xa2
  41aea9:	adc    al,0xe2
  41aeab:	push   esp
  41aeac:	inc    eax
  41aead:	sahf   
  41aeae:	bound  ecx,QWORD PTR [eax+0x8]
  41aeb1:	jmp    0xfea2:0x8496aaf0
  41aeb8:	lock dec esp
  41aeba:	lock imul edi,DWORD PTR [esp+edi*2],0xffffffe1
  41aebf:	xchg   esi,eax
  41aec0:	shl    edi,1
  41aec2:	icebp  
  41aec3:	sub    dh,dl
  41aec5:	sub    DWORD PTR ds:0x489a8e35,eax
  41aecb:	sub    eax,0xf17be55d
  41aed0:	out    0x43,eax
  41aed2:	and    DWORD PTR [esi+ebx*2+0x5b4aff9f],edi
  41aed9:	pop    ecx
  41aeda:	mov    DWORD PTR [eax+0x49],0x87ca59ea
  41aee1:	lock mov dh,BYTE PTR [ecx]
  41aee4:	ret    
  41aee5:	hlt    
  41aee6:	idiv   DWORD PTR [esi]
  41aee8:	js     0x41af10
  41aeea:	xchg   edi,eax
  41aeeb:	js     0x41af0d
  41aeed:	or     DWORD PTR [ecx+0x1e40a1db],esp
  41aef3:	pop    ds
  41aef4:	mov    BYTE PTR [ecx+0x1],ah
  41aef7:	hlt    
  41aef8:	sbb    DWORD PTR [ecx+eax*1-0x69],esp
  41aefc:	loop   0x41af32
  41aefe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeff:	xchg   ebx,eax
  41af00:	sbb    eax,0xfc8051a0
  41af05:	dec    ecx
  41af06:	dec    ecx
  41af07:	push   es
  41af08:	sub    BYTE PTR ds:0xa3f3fa5,ah
  41af0e:	pusha  
  41af0f:	xor    eax,0xe80ff36c
  41af14:	in     eax,0xc
  41af16:	outs   dx,DWORD PTR ds:[esi]
  41af17:	mov    ebp,0x21e15efb
  41af1c:	mov    bh,0x39
  41af1e:	sti    
  41af1f:	aas    
  41af20:	iretw  
  41af22:	jecxz  0x41af0f
  41af24:	test   ebp,eax
  41af26:	jle    0x41af51
  41af28:	fnstcw WORD PTR [edx+0x53]
  41af2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2c:	fstp   TBYTE PTR [esi+0x3d9c6413]
  41af32:	push   ecx
  41af33:	ins    BYTE PTR es:[edi],dx
  41af34:	test   DWORD PTR [edx-0x6d49e489],eax
  41af3a:	fdivr  QWORD PTR [esi-0x75]
  41af3d:	and    BYTE PTR ds:0xd776ccee,ch
  41af43:	sbb    dl,BYTE PTR ss:[edx+0x25]
  41af47:	in     eax,0x7
  41af49:	in     al,dx
  41af4a:	pop    ebx
  41af4b:	add    BYTE PTR [edx-0x7787b98a],ah
  41af51:	mov    edi,DWORD PTR [edx]
  41af53:	cli    
  41af54:	scas   al,BYTE PTR es:[edi]
  41af55:	lock cmp dh,BYTE PTR [eax]
  41af58:	cmp    eax,0x72acf4aa
  41af5d:	jne    0x41af50
  41af5f:	ret    
  41af60:	cs mov ch,0x8b
  41af63:	mov    esi,0x62035d5f
  41af68:	shr    BYTE PTR [esi],1
  41af6a:	fwait
  41af6b:	lods   eax,DWORD PTR ds:[esi]
  41af6c:	sub    DWORD PTR [edi+ebx*2+0x64],ebp
  41af70:	cmp    al,ch
  41af72:	xchg   esi,eax
  41af73:	call   0x4cea0658
  41af78:	addr16 aas 
  41af7a:	mov    BYTE PTR [ebp+0x2c],bl
  41af7d:	shr    BYTE PTR [edi-0x7b3ab32a],1
  41af83:	lahf   
  41af84:	mov    al,0xea
  41af86:	sbb    DWORD PTR [eax-0x67],eax
  41af89:	out    dx,eax
  41af8a:	addr16 sahf 
  41af8c:	lods   al,BYTE PTR ds:[esi]
  41af8d:	jbe    0x41af62
  41af8f:	jb     0x41afc8
  41af91:	fcomp  QWORD PTR [eax-0x7d]
  41af94:	jmp    0xe43e:0x87fde4b3
  41af9b:	push   es
  41af9c:	imul   ebp,ebp,0x36
  41af9f:	sub    cl,dl
  41afa1:	xchg   ecx,eax
  41afa2:	aad    0x45
  41afa4:	xchg   ebp,eax
  41afa5:	jns    0x41af28
  41afa7:	std    
  41afa8:	(bad)  
  41afaa:	or     DWORD PTR [ebp+0x2affedf7],eax
  41afb0:	stc    
  41afb1:	retf   
  41afb2:	addr16 clc 
  41afb4:	add    ebx,DWORD PTR [esi-0x7b7f2f92]
  41afba:	cmp    ebx,0xffffffe3
  41afbd:	enter  0xdaee,0x71
  41afc1:	adc    al,0x65
  41afc3:	fs pop edi
  41afc5:	retf   
  41afc6:	pop    edi
  41afc7:	cmc    
  41afc8:	int3   
  41afc9:	xor    cl,BYTE PTR ss:[edx+0x71]
  41afcd:	push   ebp
  41afce:	arpl   WORD PTR [esi+ebx*4-0x21],cx
  41afd2:	mov    esi,0x63da2409
  41afd7:	mov    ah,0x59
  41afd9:	adc    al,0x4e
  41afdb:	cmc    
  41afdc:	dec    ecx
  41afdd:	(bad)  
  41afde:	mov    edx,0x51b4f272
  41afe3:	mov    bl,0x80
  41afe5:	mov    fs,WORD PTR [edx+0x2cb217c3]
  41afeb:	sbb    DWORD PTR [edi],0x67
  41afee:	inc    ebx
  41afef:	jns    0x41af78
  41aff1:	or     DWORD PTR [esi],ebp
  41aff3:	mov    eax,ds:0x19da3a94
  41aff8:	and    eax,0x58d0dbc5
  41affd:	push   eax
  41affe:	cmp    eax,0xb11fa86b
  41b003:	sbb    al,0x54
  41b005:	nop
  41b006:	jmp    0xa1510546
  41b00b:	sub    eax,0x5437189d
  41b010:	cdq    
  41b011:	or     dl,ch
  41b013:	and    ah,al
  41b015:	mov    ebp,0x6ad4ed93
  41b01a:	dec    BYTE PTR [edx]
  41b01c:	ins    DWORD PTR es:[edi],dx
  41b01d:	fwait
  41b01e:	mov    ecx,0x904c224f
  41b023:	jmp    0x6f0a06ed
  41b028:	cmp    bh,BYTE PTR [edi+0x571aca5e]
  41b02e:	xchg   DWORD PTR [esi],esp
  41b030:	(bad)  
  41b031:	sahf   
  41b032:	or     al,0x74
  41b034:	pop    esi
  41b035:	mov    fs,WORD PTR [edi+0x59]
  41b038:	push   edx
  41b039:	push   esp
  41b03a:	or     DWORD PTR [esi-0x1184f748],eax
  41b040:	ja     0x41b044
  41b042:	rcl    edx,0xaf
  41b045:	sub    ebp,eax
  41b047:	(bad)  
  41b048:	not    eax
  41b04a:	test   BYTE PTR ds:0x20567eb0,0x78
  41b051:	dec    edi
  41b052:	popf   
  41b053:	into   
  41b054:	es ins DWORD PTR es:[edi],dx
  41b056:	xchg   esi,eax
  41b057:	call   0xbc85:0x3369187a
  41b05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b05f:	mov    eax,ds:0xac69cdb9
  41b064:	(bad)  
  41b065:	test   al,0xe4
  41b067:	ss inc esi
  41b069:	aaa    
  41b06a:	xchg   ebp,eax
  41b06b:	pop    ecx
  41b06c:	arpl   si,di
  41b06e:	xchg   esp,eax
  41b06f:	push   esi
  41b070:	sbb    edx,DWORD PTR [ebx+0x629b9cab]
  41b076:	clc    
  41b077:	jge    0x41b0b3
  41b079:	xchg   esi,eax
  41b07a:	lea    edx,[edi-0x41]
  41b07d:	les    esp,FWORD PTR [edx+0x22]
  41b080:	xchg   ecx,eax
  41b081:	cs push ds
  41b083:	dec    esp
  41b084:	dec    BYTE PTR [ebp+0x6a]
  41b087:	retf   
  41b088:	rcr    DWORD PTR [edi],0x71
  41b08b:	xchg   edi,eax
  41b08c:	mov    cl,0xdd
  41b08e:	push   ecx
  41b08f:	rol    BYTE PTR [ebx-0x13ef11ab],0x46
  41b096:	add    edx,edx
  41b098:	loop   0x41b030
  41b09a:	ins    BYTE PTR es:[edi],dx
  41b09b:	pop    ebx
  41b09c:	mov    dh,0x47
  41b09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b09f:	daa    
  41b0a0:	cmp    edi,ebp
  41b0a2:	cmp    al,0x1e
  41b0a4:	adc    DWORD PTR [edi+0x69277aff],esp
  41b0aa:	shl    BYTE PTR [edx],cl
  41b0ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ad:	mov    ecx,0xfda4e5c9
  41b0b2:	push   0x22d27b4b
  41b0b7:	mov    cl,0xb7
  41b0b9:	and    eax,0xb14d610f
  41b0be:	or     BYTE PTR [eax+0x315863a1],dh
  41b0c4:	rcr    ebp,0xca
  41b0c7:	or     eax,0xb2e4c6ca
  41b0cc:	xor    ecx,ecx
  41b0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0cf:	je     0x41b073
  41b0d1:	call   DWORD PTR [edi+edi*4+0x1fd5a281]
  41b0d8:	ror    DWORD PTR [ebx],cl
  41b0da:	enter  0xfb26,0x4c
  41b0de:	sbb    al,BYTE PTR [ebp-0x7c647c2b]
  41b0e4:	mov    eax,ds:0x74907207
  41b0e9:	fisub  WORD PTR [eax]
  41b0eb:	in     eax,dx
  41b0ec:	int    0x9d
  41b0ee:	repz ja 0x41b0c9
  41b0f1:	or     ecx,DWORD PTR [ecx+esi*2]
  41b0f4:	clc    
  41b0f5:	pusha  
  41b0f6:	jbe    0x41b0d5
  41b0f8:	int3   
  41b0f9:	sahf   
  41b0fa:	inc    edi
  41b0fb:	imul   edi,DWORD PTR [edi+0x42],0xffffffd5
  41b0ff:	xchg   ebp,eax
  41b100:	fs mov al,0xcb
  41b103:	icebp  
  41b104:	fisub  WORD PTR [ebx+0x16ebbae1]
  41b10a:	mov    esp,0x7a3e32a
  41b10f:	mov    edx,0x7fe6456b
  41b114:	xchg   esi,eax
  41b115:	cmp    edx,DWORD PTR [esp+edx*2+0x211beb5]
  41b11c:	ror    ebp,0x71
  41b11f:	sbb    ecx,DWORD PTR [esi-0x60fb2539]
  41b125:	jno    0x41b0f5
  41b127:	jbe    0x41b0d1
  41b129:	push   ss
  41b12a:	arpl   WORD PTR [edx],cx
  41b12c:	mul    BYTE PTR [ebx-0x1b0c40ca]
  41b132:	in     eax,dx
  41b133:	push   ecx
  41b134:	mov    ebp,DWORD PTR [ebp-0x6d1ab6a8]
  41b13a:	fild   WORD PTR [edi+0x74]
  41b13d:	lea    eax,[eax]
  41b13f:	mov    ds:0xa2628255,eax
  41b144:	lock adc al,0xeb
  41b147:	push   ss
  41b148:	dec    ebp
  41b149:	mov    ebx,?
  41b14b:	scas   eax,DWORD PTR es:[edi]
  41b14c:	ins    BYTE PTR es:[edi],dx
  41b14d:	sar    DWORD PTR [edi-0x4f],cl
  41b150:	imul   esi,DWORD PTR [esp+ecx*1-0x734e61ed],0xf
  41b158:	in     eax,dx
  41b159:	lock (bad) 
  41b15b:	loopne 0x41b15d
  41b15d:	rol    BYTE PTR [esi],cl
  41b15f:	fidiv  DWORD PTR [ebx]
  41b161:	lods   al,BYTE PTR ds:[esi]
  41b162:	pop    esi
  41b163:	leave  
  41b164:	add    dh,cl
  41b166:	jo     0x41b107
  41b168:	or     dl,ah
  41b16a:	ss int 0xcd
  41b16d:	xchg   edx,eax
  41b16e:	mov    cl,0xd8
  41b170:	cmp    esp,DWORD PTR [ebp+0x50]
  41b173:	dec    edx
  41b174:	pop    esi
  41b175:	mov    dh,0x9
  41b177:	pop    esi
  41b178:	inc    eax
  41b179:	adc    DWORD PTR [esi-0xb43ba3d],esi
  41b17f:	enter  0xab06,0xfa
  41b183:	dec    ebp
  41b184:	in     al,dx
  41b185:	cmp    BYTE PTR [eax-0x3d],0x8e
  41b189:	sbb    al,0x30
  41b18b:	inc    ebx
  41b18c:	(bad)  
  41b18d:	loop   0x41b1df
  41b18f:	mov    DWORD PTR [ebx-0x68c169d5],0x81db16d8
  41b199:	mov    ebx,0x21f6bd8c
  41b19e:	jo     0x41b123
  41b1a0:	and    DWORD PTR [edi+ebp*8+0x14],eax
  41b1a4:	mov    eax,DWORD PTR [ebp+0x40]
  41b1a7:	scas   eax,DWORD PTR es:[edi]
  41b1a8:	mov    ecx,DWORD PTR [eax+0xa0b474c]
  41b1ae:	out    0x6c,eax
  41b1b0:	xor    al,0xcb
  41b1b2:	daa    
  41b1b3:	and    DWORD PTR [eax+0x78214700],esi
  41b1b9:	mov    ch,0xd9
  41b1bb:	aaa    
  41b1bc:	mov    eax,0xaf8c1c5e
  41b1c1:	inc    ebp
  41b1c2:	sub    edx,ecx
  41b1c4:	(bad)
  41b1c9:	retf   0x5d61
  41b1cc:	sbb    edx,edx
  41b1ce:	xor    ecx,ebp
  41b1d0:	das    
  41b1d1:	and    ch,ch
  41b1d3:	mov    eax,0x377f5aea
  41b1d8:	jno    0x41b234
  41b1da:	fisttp WORD PTR [eax-0x7c]
  41b1dd:	sti    
  41b1de:	inc    ebp
  41b1df:	test   bh,dh
  41b1e1:	dec    eax
  41b1e2:	sbb    DWORD PTR [edx+0x23c6c6bd],ebx
  41b1e8:	daa    
  41b1e9:	adc    DWORD PTR [eax-0x40b1c060],ecx
  41b1ef:	cmp    eax,0x727bd96
  41b1f4:	test   DWORD PTR [esi],esp
  41b1f6:	push   esp
  41b1f7:	dec    edi
  41b1f8:	call   0x85be400f
  41b1fd:	push   esi
  41b1fe:	ja     0x41b1e9
  41b200:	retf   
  41b201:	adc    al,BYTE PTR [ecx+0x33]
  41b204:	pop    edx
  41b205:	mov    dl,0xae
  41b207:	out    dx,al
  41b208:	sbb    DWORD PTR ds:0x86abed16,esp
  41b20e:	sub    cl,BYTE PTR [eax-0xa]
  41b211:	inc    ecx
  41b212:	sbb    BYTE PTR [eax+0x284f095e],cl
  41b218:	lock xchg edx,eax
  41b21a:	pop    eax
  41b21b:	or     al,0x49
  41b21d:	adc    DWORD PTR [edi+0x7b],esp
  41b220:	outs   dx,DWORD PTR ds:[esi]
  41b221:	clc    
  41b222:	xor    DWORD PTR cs:0xd7145453,ebp
  41b229:	inc    edi
  41b22b:	stos   DWORD PTR es:[edi],eax
  41b22c:	aam    0xb5
  41b22e:	xor    al,0x4f
  41b230:	xor    al,0xe1
  41b232:	fs xchg esi,eax
  41b234:	pop    ecx
  41b235:	ficomp WORD PTR [edx+0x2]
  41b238:	inc    edx
  41b239:	fst    st(1)
  41b23b:	sub    eax,0x339e6e8
  41b240:	lahf   
  41b241:	(bad)  
  41b242:	jne    0x41b1ce
  41b244:	adc    eax,0x5c8ea6d0
  41b249:	push   cs
  41b24a:	rcl    BYTE PTR ds:0x15ebe068,1
  41b250:	xchg   esp,eax
  41b251:	cld    
  41b252:	mov    dl,0xe7
  41b254:	mov    eax,ds:0xd0660e70
  41b259:	xchg   BYTE PTR [edi-0x51],bh
  41b25c:	add    BYTE PTR [eax+0x5e323f10],dh
  41b262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b263:	cmp    ebp,DWORD PTR [esi+0x44]
  41b266:	in     al,dx
  41b267:	sbb    ch,BYTE PTR [ecx]
  41b269:	sar    DWORD PTR [ebx],1
  41b26b:	imul   edi,DWORD PTR [eax],0x84f9a428
  41b271:	mov    ebp,DWORD PTR [ebp+0x6b]
  41b274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b275:	pop    esi
  41b276:	mov    bh,0x54
  41b278:	idiv   BYTE PTR [ecx-0x7e4178b3]
  41b27e:	mov    eax,0xe8c567c2
  41b283:	inc    edi
  41b284:	mov    bl,0x79
  41b286:	xor    esp,DWORD PTR [ebx-0x53]
  41b289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b28a:	fild   WORD PTR [esi]
  41b28c:	sub    bh,bh
  41b28e:	sub    al,0x50
  41b290:	pop    esp
  41b291:	or     eax,0x7cb7a37f
  41b296:	xchg   ecx,eax
  41b297:	mov    dl,0xe7
  41b299:	push   0x490c2633
  41b29e:	jnp    0x41b2f3
  41b2a0:	xor    ah,BYTE PTR [ecx+0x1abb7392]
  41b2a6:	jmp    0xe38f:0x62e05d21
  41b2ad:	xchg   edi,eax
  41b2ae:	push   0xcbd9f8a2
  41b2b3:	in     eax,0xc7
  41b2b5:	data16 xlat BYTE PTR ds:[ebx]
  41b2b7:	or     BYTE PTR [edi-0x6c],dl
  41b2ba:	mov    bh,dh
  41b2bc:	cli    
  41b2bd:	xor    BYTE PTR [esi-0x56efc50b],0x44
  41b2c4:	xchg   esi,eax
  41b2c5:	ret    
  41b2c6:	ds leave 
  41b2c8:	jp     0x41b308
  41b2ca:	sahf   
  41b2cb:	pusha  
  41b2cc:	add    DWORD PTR [ebp+0x52f346d5],eax
  41b2d2:	cmc    
  41b2d3:	loopne 0x41b26f
  41b2d5:	in     eax,dx
  41b2d6:	(bad)  
  41b2d7:	adc    dl,dl
  41b2d9:	test   al,0xd4
  41b2db:	and    BYTE PTR [eax+0x112deaff],bh
  41b2e1:	pop    edi
  41b2e2:	mov    esp,0x827b56bf
  41b2e7:	pop    edi
  41b2e8:	test   eax,0x3eefd434
  41b2ed:	call   0x4c0d:0x109de79e
  41b2f4:	(bad)  
  41b2f5:	mov    dh,0x40
  41b2f7:	ins    DWORD PTR es:[edi],dx
  41b2f8:	mov    ecx,cs
  41b2fa:	jg     0x41b36a
  41b2fc:	sub    al,al
  41b2fe:	jo     0x41b322
  41b300:	pop    ebp
  41b301:	jl     0x41b292
  41b303:	sahf   
  41b304:	pop    ss
  41b305:	adc    al,0x23
  41b307:	pop    edx
  41b308:	in     eax,0x18
  41b30a:	sbb    ecx,DWORD PTR [edx-0x5bcb587f]
  41b310:	(bad)  
  41b311:	push   0x5f64f97a
  41b316:	fdivr  DWORD PTR [esi-0xda2b9af]
  41b31c:	sbb    DWORD PTR ss:[eax+0x76],edi
  41b320:	shl    ah,1
  41b322:	lods   eax,DWORD PTR ds:[esi]
  41b323:	and    BYTE PTR [ebx],0x65
  41b326:	jne    0x41b365
  41b328:	sub    bl,0xab
  41b32b:	add    ecx,DWORD PTR [ecx]
  41b32d:	mov    edx,0xbfcd3f2a
  41b332:	(bad)  
  41b334:	ret    
  41b335:	mov    esp,0xfaf8252e
  41b33a:	mov    ebx,0xc081be49
  41b33f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b340:	fbld   TBYTE PTR cs:[esi-0x3c823e7a]
  41b347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b348:	cmp    dh,BYTE PTR [ecx]
  41b34a:	call   0xff5c:0x1083d115
  41b351:	retf   
  41b352:	int    0xc9
  41b354:	jo     0x41b34d
  41b356:	mov    DWORD PTR [edx],esi
  41b358:	stos   DWORD PTR es:[edi],eax
  41b359:	imul   esp,DWORD PTR [ebp-0x1],0xffffffa3
  41b35d:	loope  0x41b371
  41b35f:	cmp    DWORD PTR fs:[edx-0x76],ebx
  41b363:	loop   0x41b2f9
  41b365:	aaa    
  41b366:	dec    esp
  41b367:	inc    ecx
  41b368:	(bad)  
  41b369:	jle    0x41b3af
  41b36b:	pcmpgtw mm1,mm2
  41b36e:	test   DWORD PTR [ebx],edx
  41b370:	jmp    0x41b3cc
  41b372:	lahf   
  41b373:	les    edi,FWORD PTR [ecx]
  41b375:	cmp    al,0x9a
  41b377:	push   es
  41b378:	ins    DWORD PTR es:[edi],dx
  41b379:	loope  0x41b339
  41b37b:	jmp    0x41b397
  41b37d:	inc    edi
  41b37e:	inc    esp
  41b37f:	xchg   DWORD PTR [edx+ecx*2],edi
  41b382:	mov    esi,0x8a260047
  41b387:	je     0x41b389
  41b389:	xchg   ecx,edi
  41b38b:	pop    ebx
  41b38c:	sbb    eax,0x9394b85a
  41b391:	jle    0x41b3f2
  41b393:	push   ss
  41b394:	sbb    esp,ecx
  41b396:	js     0x41b34c
  41b398:	cmc    
  41b399:	rcr    BYTE PTR [edi-0x472c864c],cl
  41b39f:	arpl   bx,cx
  41b3a1:	dec    eax
  41b3a2:	and    ecx,DWORD PTR [edx-0x1c10b905]
  41b3a8:	adc    al,0xa9
  41b3aa:	mov    esp,0x6fd8a865
  41b3af:	sub    bl,BYTE PTR [eax]
  41b3b1:	popf   
  41b3b2:	cmp    ch,BYTE PTR [edx+0x3e9d6ee]
  41b3b8:	and    eax,0x708ad90d
  41b3bd:	aaa    
  41b3be:	hlt    
  41b3bf:	pop    ebp
  41b3c0:	mov    al,ds:0x4ae49f85
  41b3c5:	retf   0xfc0c
  41b3c8:	fild   WORD PTR ss:0x1074fbfd
  41b3cf:	iret   
  41b3d0:	ret    0x5f23
  41b3d3:	mov    edx,0x34b607e4
  41b3d8:	jle    0x41b3ed
  41b3da:	sbb    cl,cl
  41b3dc:	pusha  
  41b3dd:	imul   ebp,esi,0x595fe780
  41b3e3:	pop    esp
  41b3e4:	out    0x8b,eax
  41b3e6:	jae    0x41b3b4
  41b3e8:	push   ebx
  41b3e9:	dec    eax
  41b3ea:	cmp    DWORD PTR [ebx],ebp
  41b3ec:	iret   
  41b3ed:	jmp    0x41b462
  41b3ef:	sub    ebx,DWORD PTR ds:0x301778f6
  41b3f5:	outs   dx,DWORD PTR ds:[esi]
  41b3f6:	retf   
  41b3f7:	stos   DWORD PTR es:[edi],eax
  41b3f8:	or     esi,DWORD PTR [edi-0x6b]
  41b3fb:	xor    ah,BYTE PTR [eax+0x3f]
  41b3fe:	xchg   BYTE PTR [esi],dh
  41b400:	adc    edi,eax
  41b402:	test   DWORD PTR [ecx+0x1],ebx
  41b405:	jbe    0x41b3c8
  41b407:	sub    eax,0xc42db35
  41b40c:	inc    edx
  41b40d:	cmp    eax,0xf4806f77
  41b412:	sbb    bh,BYTE PTR [ecx+0x4ec3f368]
  41b418:	mov    ecx,0x2ce0e57b
  41b41d:	or     esi,DWORD PTR [edx+0x39]
  41b420:	xchg   ebp,eax
  41b421:	push   0x669810dd
  41b426:	xor    eax,0x3ca5b3dd
  41b42b:	or     al,0x6f
  41b42d:	pop    edx
  41b42e:	in     eax,0x69
  41b430:	adc    BYTE PTR [ebp-0x2df16e9a],ah
  41b436:	sbb    DWORD PTR [edi+0x71a6b94],0xfffffffa
  41b43d:	imul   edx,DWORD PTR [ebp-0x29a6b3b],0xee992497
  41b447:	rcr    BYTE PTR [eax],cl
  41b449:	and    BYTE PTR [esi+0x5eb616c7],dl
  41b44f:	es pop ecx
  41b451:	iret   
  41b452:	xchg   edi,eax
  41b453:	xchg   ebp,eax
  41b454:	push   ds
  41b455:	adc    edi,DWORD PTR [eax+0x75]
  41b458:	lock cmp al,0x65
  41b45b:	sub    DWORD PTR [esi],edi
  41b45d:	pop    esi
  41b45e:	ficom  WORD PTR [esi]
  41b460:	mov    ebx,0xf4a04a98
  41b465:	or     al,0x99
  41b467:	jl     0x41b436
  41b469:	test   al,0x7
  41b46b:	lds    esi,FWORD PTR [eax-0x83d5da7]
  41b471:	in     eax,0x27
  41b473:	pushf  
  41b474:	loop   0x41b47a
  41b476:	sub    BYTE PTR [ecx+0x5859303],bl
  41b47c:	mov    al,0x16
  41b47e:	dec    edx
  41b47f:	sub    eax,0x7ed4ab70
  41b484:	repnz pop esp
  41b486:	and    bl,bh
  41b488:	sub    eax,0xae217d9f
  41b48d:	or     al,0xd4
  41b48f:	popa   
  41b490:	ror    BYTE PTR [ebx],1
  41b492:	rcl    DWORD PTR [esi+ecx*1+0x15],cl
  41b496:	leave  
  41b497:	lock push esi
  41b499:	jae    0x41b4ba
  41b49b:	push   cs
  41b49c:	jmp    0x98b4:0x31205b8
  41b4a3:	pop    edi
  41b4a4:	pop    esp
  41b4a5:	loop   0x41b43d
  41b4a7:	stc    
  41b4a8:	ret    0x5bb0
  41b4ab:	data16 sub al,0x19
  41b4ae:	ds cdq 
  41b4b0:	mov    DWORD PTR [ecx+0x60],edx
  41b4b3:	outs   dx,BYTE PTR ds:[esi]
  41b4b4:	xor    BYTE PTR [eax-0x7e],bl
  41b4b7:	aam    0x94
  41b4b9:	adc    ah,BYTE PTR [eax-0x17]
  41b4bc:	out    dx,al
  41b4bd:	jmp    0x18b4:0x4be175dc
  41b4c4:	mov    dl,0xde
  41b4c6:	mov    si,0x2aba
  41b4ca:	add    esp,ecx
  41b4cc:	add    BYTE PTR [esi],bl
  41b4ce:	popa   
  41b4cf:	pushf  
  41b4d0:	xchg   edi,eax
  41b4d1:	mov    al,dl
  41b4d3:	mov    dl,BYTE PTR [ebx]
  41b4d5:	adc    DWORD PTR [ecx],esp
  41b4d7:	mov    ds:0x4f1452f2,eax
  41b4dc:	cld    
  41b4dd:	push   cs
  41b4de:	ror    BYTE PTR [edi-0xdd04e16],0xb4
  41b4e5:	inc    eax
  41b4e6:	stos   BYTE PTR es:[edi],al
  41b4e7:	pop    esi
  41b4e8:	add    dl,cl
  41b4ea:	xor    eax,eax
  41b4ec:	nop
  41b4ed:	cmp    eax,DWORD PTR [ecx]
  41b4ef:	jge    0x41b47a
  41b4f1:	jge    0x41b4b0
  41b4f3:	lock int 0x70
  41b4f6:	sub    BYTE PTR [edi],ch
  41b4f8:	in     eax,0xb1
  41b4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4fb:	test   DWORD PTR [ecx-0x7f],esi
  41b4fe:	mov    bl,0x0
  41b500:	push   esp
  41b501:	ret    0xd9b0
  41b504:	xchg   ecx,eax
  41b505:	xor    edi,DWORD PTR [ecx+0x27]
  41b508:	packsswb mm7,QWORD PTR [esi+0x737fdf3f]
  41b50f:	hlt    
  41b510:	cdq    
  41b511:	std    
  41b512:	add    al,0xd6
  41b514:	mov    dl,ch
  41b516:	sbb    eax,0x4da59243
  41b51b:	mov    ch,ch
  41b51d:	mov    esp,0xe252a354
  41b522:	mov    esp,0xba291dea
  41b527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b528:	xchg   esi,eax
  41b529:	jmp    0xffd4:0xc13493bf
  41b530:	(bad)  
  41b531:	in     al,dx
  41b532:	pop    ss
  41b533:	sub    al,0x4f
  41b536:	add    esi,DWORD PTR [edx]
  41b538:	js     0x41b577
  41b53a:	add    esi,DWORD PTR [edi-0x1c60b4d0]
  41b540:	cmc    
  41b541:	out    dx,eax
  41b542:	jbe    0x41b586
  41b544:	jle    0x41b59b
  41b546:	in     eax,0x57
  41b548:	lea    esp,[ecx-0x78]
  41b54b:	aad    0x99
  41b54d:	shl    DWORD PTR [edx+0x50552338],1
  41b553:	inc    ecx
  41b554:	mov    eax,0x8b084d8b
  41b559:	push   ebp
  41b55a:	mov    ah,0x3
  41b55c:	iret   
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	jo     0x41b8ec
  41b872:	gs xchg ecx,eax
  41b874:	out    dx,al
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	sub    DWORD PTR [ebx],0x3e
  41b87e:	sub    dl,dh
  41b880:	push   0x55
  41b882:	fwait
  41b883:	dec    DWORD PTR gs:[ebp+0xd]
  41b887:	shl    ebx,0x0
  41b88a:	sub    BYTE PTR [esi],bl
  41b88c:	das    
  41b88d:	ret    
  41b88e:	push   cs
  41b88f:	or     eax,0x8e41a091
  41b894:	xor    eax,0xbb9a2d97
  41b899:	sahf   
  41b89a:	call   0x30e5:0xe560a34d
  41b8a1:	cwde   
  41b8a2:	imul   esp,DWORD PTR [ecx-0x75fb429e],0xccd58d1e
  41b8ac:	jle    0x41b8f6
  41b8ae:	mov    dl,0xbe
  41b8b0:	xor    BYTE PTR [esi+edx*8-0x36],al
  41b8b4:	in     eax,dx
  41b8b5:	push   ebp
  41b8b6:	mov    al,0xb8
  41b8b8:	xchg   ebp,eax
  41b8b9:	inc    ebx
  41b8ba:	pop    ss
  41b8bb:	imul   ecx,DWORD PTR [ebp-0x415b5cfd],0x10
  41b8c2:	jmp    0x41b922
  41b8c4:	cmp    BYTE PTR [eax],dl
  41b8c6:	push   ss
  41b8c7:	in     eax,0x85
  41b8c9:	push   ebp
  41b8ca:	xchg   esp,eax
  41b8cb:	hlt    
  41b8cc:	inc    eax
  41b8cd:	or     eax,0x33f86351
  41b8d2:	xor    al,0x2c
  41b8d4:	adc    al,0x47
  41b8d6:	mov    BYTE PTR [ebp+0x46768313],bl
  41b8dc:	mov    al,ds:0x8da85bd0
  41b8e1:	in     al,0x12
  41b8e3:	div    cl
  41b8e5:	xchg   ecx,eax
  41b8e6:	push   ds
  41b8e7:	pop    ss
  41b8e8:	mov    ebp,0xca5cfaac
  41b8ed:	cs retf 
  41b8ef:	push   0xffffffe4
  41b8f1:	into   
  41b8f2:	dec    esi
  41b8f3:	das    
  41b8f4:	stos   BYTE PTR es:[edi],al
  41b8f5:	fidiv  WORD PTR [ecx]
  41b8f7:	stos   BYTE PTR es:[edi],al
  41b8f8:	mov    ebx,0x81c5bb8a
  41b8fd:	hlt    
  41b8fe:	pop    edi
  41b8ff:	or     al,BYTE PTR [ebp+edi*4-0x26]
  41b903:	int    0x4e
  41b905:	sub    eax,0xb4c65c76
  41b90a:	xor    ecx,DWORD PTR [edi+0x2e]
  41b90d:	xchg   esi,eax
  41b90e:	retf   0x1c95
  41b911:	mov    ecx,0xea5fb5bd
  41b916:	loope  0x41b8c4
  41b918:	ds (bad) 
  41b91a:	test   eax,0x4f30a598
  41b91f:	xchg   DWORD PTR [ebx],edi
  41b921:	lods   al,BYTE PTR ds:[esi]
  41b922:	popf   
  41b923:	test   eax,0x42e370bf
  41b928:	sti    
  41b929:	inc    ebp
  41b92a:	and    DWORD PTR [ecx-0x68],0x2693aba1
  41b931:	sbb    dl,BYTE PTR [edi]
  41b933:	add    eax,0x3722aa86
  41b938:	adc    ecx,DWORD PTR [eax+edx*8+0x70]
  41b93c:	sbb    bh,BYTE PTR [ecx-0x5f147a9a]
  41b942:	test   eax,0xc7b02afb
  41b947:	ret    
  41b948:	mov    al,ds:0xecc401a7
  41b94d:	cwde   
  41b94e:	jmp    0x41b933
  41b950:	retf   0xb52e
  41b953:	sub    bl,BYTE PTR [edi+edi*2+0x6]
  41b957:	and    bl,dh
  41b959:	dec    ebx
  41b95a:	jle    0x41b9b2
  41b95c:	xor    bh,BYTE PTR [edx+0x28c45267]
  41b962:	jmp    0xe51e:0xdb1687c9
  41b969:	imul   eax,ebx,0x7e
  41b96c:	and    DWORD PTR [ebx-0x5c51d24e],ecx
  41b972:	test   BYTE PTR [esi-0xbd36245],bl
  41b978:	or     cl,BYTE PTR ds:0xaefced48
  41b97e:	sub    al,BYTE PTR [ecx+ebx*2-0x144c085e]
  41b985:	mov    ds:0x753461,eax
  41b98a:	dec    ebp
  41b98b:	ror    esp,1
  41b98d:	fisubr DWORD PTR [esi]
  41b98f:	push   ss
  41b990:	popf   
  41b991:	and    BYTE PTR [edi+0x2a],ah
  41b994:	inc    edx
  41b995:	out    0xa9,eax
  41b997:	aas    
  41b998:	mov    al,BYTE PTR [ecx+0x7d076c4d]
  41b99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b99f:	dec    ebp
  41b9a0:	inc    edx
  41b9a1:	or     DWORD PTR [ecx],ebp
  41b9a3:	jno    0x41b9ee
  41b9a5:	or     DWORD PTR [esi],esi
  41b9a7:	imul   esp,DWORD PTR [ebp+0x21],0x38
  41b9ab:	pop    ebp
  41b9ac:	(bad)  [edx+0x50]
  41b9af:	(bad)  
  41b9b0:	gs xchg ebp,eax
  41b9b2:	mov    ah,0x65
  41b9b4:	push   0x1dd2c5c1
  41b9b9:	dec    ebp
  41b9ba:	push   edx
  41b9bb:	jp     0x41b93f
  41b9bd:	and    DWORD PTR [edx+0x6f72f834],eax
  41b9c3:	loope  0x41b95f
  41b9c5:	pop    eax
  41b9c6:	mov    cs,WORD PTR [edx]
  41b9c8:	popa   
  41b9c9:	adc    eax,0x7707dfc1
  41b9ce:	aam    0x26
  41b9d0:	aad    0x3a
  41b9d2:	add    DWORD PTR [edi+0x4752db35],eax
  41b9d8:	mov    dh,al
  41b9da:	shl    DWORD PTR [ecx-0x2821a536],1
  41b9e0:	test   edi,esp
  41b9e2:	lds    ebx,FWORD PTR [eax-0x45ef60ff]
  41b9e8:	test   eax,0xf6aadd15
  41b9ed:	aaa    
  41b9ee:	xlat   BYTE PTR ds:[ebx]
  41b9ef:	pop    ebp
  41b9f0:	lods   al,BYTE PTR ds:[esi]
  41b9f1:	mov    ds:0xa931fd6a,al
  41b9f6:	jae    0x41ba48
  41b9f8:	retf   
  41b9f9:	mov    edx,0x93bbe3dd
  41b9fe:	mov    esi,DWORD PTR [eax+esi*8]
  41ba01:	mov    edx,0x500a63d2
  41ba06:	out    0x50,al
  41ba08:	sti    
  41ba09:	gs and eax,0xe0c9f137
  41ba0f:	stos   BYTE PTR es:[edi],al
  41ba10:	cmp    cl,BYTE PTR [esi-0xe]
  41ba13:	hlt    
  41ba14:	imul   edi,DWORD PTR [edi+eiz*2-0x5c],0x9
  41ba19:	push   esi
  41ba1a:	mov    al,0x7d
  41ba1c:	xlat   BYTE PTR ds:[ebx]
  41ba1d:	pusha  
  41ba1e:	gs pop edx
  41ba20:	pop    ds
  41ba21:	cdq    
  41ba22:	popf   
  41ba23:	cs test al,0x25
  41ba26:	inc    eax
  41ba27:	repnz daa 
  41ba29:	dec    ebp
  41ba2a:	cs adc al,0x89
  41ba2d:	xchg   edi,eax
  41ba2e:	or     ch,BYTE PTR [edx-0x38]
  41ba31:	jae    0x41baa5
  41ba33:	out    dx,eax
  41ba34:	icebp  
  41ba35:	jo     0x41ba61
  41ba37:	ss jmp 0x41ba07
  41ba3a:	or     al,0x5c
  41ba3c:	dec    edi
  41ba3d:	add    al,0x76
  41ba3f:	aad    0xef
  41ba41:	jne    0x41ba6d
  41ba43:	adc    DWORD PTR [eax-0x55],edx
  41ba46:	rcr    dl,1
  41ba48:	push   ecx
  41ba49:	stc    
  41ba4a:	jp     0x41bab6
  41ba4c:	loope  0x41ba8e
  41ba4e:	inc    esp
  41ba4f:	jbe    0x41ba79
  41ba51:	pop    ss
  41ba52:	in     eax,dx
  41ba53:	mov    esi,0x80205b62
  41ba58:	push   ebx
  41ba59:	inc    esp
  41ba5a:	out    dx,al
  41ba5b:	jmp    0x847cb091
  41ba60:	mov    ah,0x43
  41ba62:	inc    esp
  41ba63:	dec    edx
  41ba64:	das    
  41ba65:	cmc    
  41ba66:	das    
  41ba67:	or     edx,DWORD PTR ds:0xfaa42c7f
  41ba6d:	xor    eax,0x41459955
  41ba72:	(bad)  
  41ba73:	jg     0x41ba2e
  41ba75:	enter  0x99d4,0xb4
  41ba79:	add    ah,BYTE PTR [ebp+0x26]
  41ba7c:	stos   DWORD PTR es:[edi],eax
  41ba7d:	sbb    ah,BYTE PTR [ecx]
  41ba7f:	xchg   esi,eax
  41ba80:	and    edi,DWORD PTR [edx]
  41ba82:	leave  
  41ba83:	dec    ecx
  41ba84:	adc    BYTE PTR [ebx+ebp*4],ch
  41ba87:	fsubr  DWORD PTR [esi-0x5a68053f]
  41ba8d:	pop    esi
  41ba8f:	mov    bp,0x7369
  41ba93:	std    
  41ba94:	lea    edi,[esi-0x2c]
  41ba97:	add    BYTE PTR [ecx],cl
  41ba99:	push   ebp
  41ba9a:	xor    bl,cl
  41ba9c:	mov    eax,0x22d9ac36
  41baa1:	and    dl,bl
  41baa3:	mov    ds:0x14fc3d3f,al
  41baa8:	int    0xb8
  41baaa:	iret   
  41baab:	jae    0x41bace
  41baad:	mov    ds:0x58d85260,eax
  41bab2:	sub    BYTE PTR [edx-0x7d53bea2],ch
  41bab8:	fnstsw WORD PTR [eax]
  41baba:	and    BYTE PTR [edi+edi*2],0x25
  41babe:	adc    al,0xc2
  41bac0:	aas    
  41bac1:	lahf   
  41bac2:	inc    eax
  41bac3:	int    0x97
  41bac5:	jb     0x41bb39
  41bac7:	mov    ds:0x998b5e7b,eax
  41bacc:	fdivr  QWORD PTR [ebx]
  41bace:	fwait
  41bacf:	mov    dl,BYTE PTR [eax+edx*1+0x7de22477]
  41bad6:	fimul  WORD PTR ds:0xbb6c5728
  41badc:	icebp  
  41badd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bade:	inc    edi
  41badf:	mov    ebp,0xd4882dba
  41bae4:	ds dec ebp
  41bae6:	mov    ds:0x7163cdb8,eax
  41baeb:	sbb    dl,BYTE PTR [edx+0x15]
  41baee:	aas    
  41baef:	push   ebp
  41baf0:	inc    edx
  41baf1:	pop    edi
  41baf2:	clc    
  41baf3:	pop    esp
  41baf4:	pop    ds
  41baf5:	sub    BYTE PTR [edx+0x18676feb],dl
  41bafb:	and    eax,0x3e8bb7b5
  41bb00:	push   esi
  41bb01:	fbstp  TBYTE PTR [edi]
  41bb03:	and    ebp,DWORD PTR [ecx+0x545266c9]
  41bb09:	or     DWORD PTR [eax-0x11],ecx
  41bb0c:	out    dx,eax
  41bb0d:	jbe    0x41bb1b
  41bb0f:	mov    ds:0xe18987fd,al
  41bb14:	loopne 0x41bae3
  41bb16:	cmc    
  41bb17:	ret    0xfa48
  41bb1a:	jecxz  0x41bae2
  41bb1c:	mov    edx,0x32abbd77
  41bb21:	and    al,BYTE PTR [ecx+0x9ff4194]
  41bb27:	retf   
  41bb28:	xor    ebp,ecx
  41bb2a:	js     0x41baf1
  41bb2c:	inc    esp
  41bb2d:	xor    eax,0xbe799fb
  41bb32:	sbb    DWORD PTR [ebp-0x2e],ecx
  41bb35:	stos   DWORD PTR es:[edi],eax
  41bb36:	retf   
  41bb37:	(bad)  
  41bb39:	clc    
  41bb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb3b:	loop   0x41bb88
  41bb3d:	(bad)  
  41bb3f:	jmp    0x41bb65
  41bb41:	nop
  41bb42:	cmp    BYTE PTR [ecx+0x16],dl
  41bb45:	dec    ebp
  41bb46:	ins    DWORD PTR es:[edi],dx
  41bb47:	push   esi
  41bb48:	adc    ebx,DWORD PTR [edx+0x47]
  41bb4b:	ret    0x9b9b
  41bb4e:	mov    ebp,0x3bb29fd3
  41bb53:	sub    DWORD PTR [edi],esp
  41bb55:	pop    ebx
  41bb56:	add    dh,BYTE PTR [eax]
  41bb58:	test   BYTE PTR [ecx+0x489e04b3],bl
  41bb5e:	imul   ebp,DWORD PTR [edi-0x18cad9af],0x7f
  41bb65:	pop    ebp
  41bb66:	daa    
  41bb67:	sbb    DWORD PTR [edi],eax
  41bb69:	rol    DWORD PTR [ecx-0x14439ed8],0xb9
  41bb70:	and    dl,dh
  41bb72:	sub    bl,dl
  41bb74:	sahf   
  41bb75:	cld    
  41bb76:	sbb    DWORD PTR [ebx-0x24],edi
  41bb79:	dec    ebp
  41bb7a:	dec    edi
  41bb7b:	fadd   st(1),st
  41bb7d:	scas   eax,DWORD PTR es:[edi]
  41bb7e:	sbb    dh,ah
  41bb80:	sbb    cl,BYTE PTR [esi+esi*8-0x51]
  41bb84:	mov    DWORD PTR cs:[ecx+0x58250d70],esp
  41bb8b:	(bad)  
  41bb8c:	fcom   QWORD PTR [edx-0x44]
  41bb8f:	push   ecx
  41bb90:	add    eax,0xf78bcccd
  41bb95:	repz imul edx,DWORD PTR [edx],0xe0e4f898
  41bb9c:	push   ds
  41bb9d:	or     DWORD PTR [ecx-0x54043ab3],eax
  41bba3:	mov    eax,0x6165e641
  41bba8:	xchg   DWORD PTR [ebx+eiz*4-0x601faa14],edi
  41bbaf:	add    al,0xcf
  41bbb1:	jae    0x41bb6d
  41bbb3:	xor    BYTE PTR [ecx-0x67],0x0
  41bbb7:	mov    edx,0xbbe23eb2
  41bbbc:	ret    
  41bbbd:	popa   
  41bbbe:	xor    eax,0x772a559c
  41bbc3:	cmp    edx,edi
  41bbc5:	xchg   ebp,eax
  41bbc6:	enter  0x9df7,0xfa
  41bbca:	ror    BYTE PTR [ebx+0x76f24af2],cl
  41bbd0:	mov    edi,0xfc94741a
  41bbd5:	retf   
  41bbd6:	jnp    0x41bc2e
  41bbd8:	sti    
  41bbd9:	jle    0x41bb6b
  41bbdb:	imul   esp,DWORD PTR ds:[esi-0x8947c5a],0xffffffca
  41bbe3:	loop   0x41bc21
  41bbe5:	xor    al,0x9d
  41bbe7:	fadd   st(3),st
  41bbe9:	xor    DWORD PTR [edx],0x66
  41bbec:	ins    DWORD PTR es:[edi],dx
  41bbed:	or     ch,BYTE PTR [eax]
  41bbef:	enter  0x17b2,0x1d
  41bbf3:	or     ecx,DWORD PTR [edi]
  41bbf5:	sbb    BYTE PTR [eax],bl
  41bbf7:	and    edx,DWORD PTR [edi+0xbd11cb3]
  41bbfd:	sub    esi,DWORD PTR [ebx]
  41bbff:	dec    ebx
  41bc00:	pop    eax
  41bc01:	addr16 cmp al,0x3f
  41bc04:	xchg   edx,eax
  41bc05:	pop    ss
  41bc06:	sbb    BYTE PTR [ebx+0x79321095],ch
  41bc0c:	mov    DWORD PTR [esi-0x6b],edi
  41bc0f:	cmp    al,0x5e
  41bc11:	add    al,0xc3
  41bc13:	or     DWORD PTR ss:[esi-0x76],ebp
  41bc17:	test   eax,0xa919c1ab
  41bc1c:	mov    al,0x26
  41bc1e:	out    dx,eax
  41bc1f:	fisttp WORD PTR [ecx]
  41bc21:	ds ret 
  41bc23:	push   0x34
  41bc25:	iret   
  41bc26:	arpl   bp,sp
  41bc28:	mov    esp,DWORD PTR [ebx]
  41bc2a:	push   ebx
  41bc2b:	cmp    al,0xd7
  41bc2d:	inc    edi
  41bc2e:	adc    eax,0xba356345
  41bc33:	xor    BYTE PTR [ebx+0x78],0x6e
  41bc37:	(bad)  
  41bc38:	jae    0x41bc4a
  41bc3a:	mov    ch,0x4b
  41bc3c:	cli    
  41bc3d:	and    dl,BYTE PTR [ebx-0x266a77ed]
  41bc43:	dec    eax
  41bc44:	add    bh,ah
  41bc46:	pop    edi
  41bc47:	lahf   
  41bc48:	gs push es
  41bc4a:	icebp  
  41bc4b:	scas   al,BYTE PTR es:[edi]
  41bc4c:	ret    
  41bc4d:	shl    edx,1
  41bc4f:	js     0x41bcb3
  41bc51:	add    bl,BYTE PTR [ebx]
  41bc53:	xor    DWORD PTR [ebx-0x4],eax
  41bc56:	mov    DWORD PTR es:[esp+ebx*2-0x2d],esp
  41bc5b:	bound  esi,QWORD PTR [ebp+0x0]
  41bc5e:	sbb    esp,0x55da6796
  41bc64:	cli    
  41bc65:	ret    0xbcb7
  41bc68:	repz out 0xca,eax
  41bc6b:	dec    esi
  41bc6c:	dec    edx
  41bc6d:	aam    0x2a
  41bc6f:	add    edx,0x953b7
  41bc75:	mov    ecx,0x2a7befb8
  41bc7a:	cmc    
  41bc7b:	js     0x41bca6
  41bc7d:	push   ds
  41bc7e:	or     al,0xb2
  41bc80:	or     al,0x5b
  41bc82:	dec    ebx
  41bc83:	sbb    eax,0xf44602a0
  41bc88:	mov    al,ds:0x9139a7ec
  41bc8d:	mov    DWORD PTR [eax],esp
  41bc8f:	jbe    0x41bc33
  41bc91:	int3   
  41bc92:	fild   DWORD PTR [ebp+0xb45c41e]
  41bc98:	les    esp,FWORD PTR [edx+0x77d7dc05]
  41bc9e:	push   ds
  41bc9f:	adc    eax,0xa0d33ca8
  41bca4:	fdiv   DWORD PTR [edx]
  41bca6:	fadd   QWORD PTR [eax+0x7e9a9272]
  41bcac:	fucomi st,st(1)
  41bcae:	cmp    BYTE PTR [ebp-0x3],bh
  41bcb1:	xchg   ebp,eax
  41bcb2:	add    al,ch
  41bcb4:	sahf   
  41bcb5:	cmp    ebp,edx
  41bcb7:	aaa    
  41bcb8:	push   es
  41bcb9:	cld    
  41bcba:	test   al,0xc2
  41bcbc:	rcr    DWORD PTR [ebp-0x68dcf4e7],cl
  41bcc2:	and    al,0xbb
  41bcc4:	sub    dh,BYTE PTR [ecx-0x5ce12e17]
  41bcca:	jo     0x41bc9e
  41bccc:	xchg   edi,eax
  41bccd:	enter  0x9acc,0x1f
  41bcd1:	or     al,0x51
  41bcd3:	mov    ds:0xd7f459de,eax
  41bcd8:	retf   0x4fbd
  41bcdb:	stc    
  41bcdc:	lea    eax,[edx-0x328d3d86]
  41bce2:	and    eax,0xa10a6856
  41bce7:	mov    cl,0x8c
  41bce9:	mov    ds:0x378d22da,al
  41bcee:	rol    al,cl
  41bcf0:	mov    eax,0x27bede3a
  41bcf5:	mov    ds:0xd0de2d5a,eax
  41bcfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcfb:	in     eax,0x13
  41bcfd:	jmp    0x1bc24dda
  41bd02:	aaa    
  41bd03:	(bad)  
  41bd04:	sahf   
  41bd05:	(bad)  
  41bd06:	pop    eax
  41bd07:	and    DWORD PTR [edx+0x7a],ecx
  41bd0a:	into   
  41bd0b:	xchg   esp,eax
  41bd0c:	bnd jp 0x41bcb6
  41bd0f:	push   esp
  41bd10:	jecxz  0x41bd3c
  41bd12:	fimul  WORD PTR [eax-0x52e313b3]
  41bd18:	mov    bh,0xb9
  41bd1a:	or     ebx,ecx
  41bd1c:	mov    bh,0xe6
  41bd1e:	mov    edi,esi
  41bd20:	sub    DWORD PTR ds:0xc8d15081,eax
  41bd26:	ret    
  41bd27:	(bad)  
  41bd28:	xchg   ebx,eax
  41bd29:	mov    ds:0xd40fcd44,eax
  41bd2e:	pop    esp
  41bd2f:	jo     0x41bd33
  41bd31:	mov    BYTE PTR [ecx],cl
  41bd33:	in     al,dx
  41bd34:	xor    al,cl
  41bd36:	nop
  41bd37:	(bad)  
  41bd38:	cmp    BYTE PTR [ecx+0xad2068f],ah
  41bd3e:	(bad)  
  41bd3f:	psubb  mm0,QWORD PTR [edi+0x39295694]
  41bd46:	mov    al,0x2a
  41bd48:	mov    ebx,0xee8275cf
  41bd4d:	(bad)  
  41bd4e:	and    edx,DWORD PTR [edx+ecx*1+0x35d7f523]
  41bd55:	out    dx,eax
  41bd56:	push   ebx
  41bd57:	push   ebp
  41bd58:	mov    ch,0x9b
  41bd5a:	cli    
  41bd5b:	repz out dx,eax
  41bd5d:	pop    ebp
  41bd5e:	int    0xd6
  41bd60:	scas   eax,DWORD PTR es:[edi]
  41bd61:	dec    esp
  41bd62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd63:	cld    
  41bd64:	or     al,0x49
  41bd66:	push   edx
  41bd67:	rcl    bl,0xb0
  41bd6a:	out    0x50,eax
  41bd6c:	fidiv  DWORD PTR [edx+0x6d4f3920]
  41bd72:	inc    ecx
  41bd73:	or     bl,bl
  41bd75:	leave  
  41bd76:	jno    0x41bdf5
  41bd78:	jnp    0x41bd85
  41bd7a:	push   cs
  41bd7b:	std    
  41bd7c:	fs inc eax
  41bd7e:	clc    
  41bd7f:	push   esi
  41bd80:	mov    ecx,0x66ec453b
  41bd85:	mov    ch,0xd6
  41bd87:	pushf  
  41bd88:	in     eax,0xb2
  41bd8a:	xor    BYTE PTR [edi+0x157152e8],cl
  41bd90:	sbb    ebp,eax
  41bd92:	cmp    edi,0x617a41dc
  41bd98:	or     BYTE PTR [ebp+0x1d],bh
  41bd9b:	sub    ah,dl
  41bd9d:	xchg   esi,edi
  41bd9f:	rcr    eax,1
  41bda1:	mov    ebx,0x8a39fe03
  41bda6:	xchg   ecx,eax
  41bda7:	jg     0x41bd33
  41bda9:	sbb    BYTE PTR [eax+0x60],ch
  41bdac:	xchg   DWORD PTR [ebp+0x642f498d],edx
  41bdb2:	and    al,0x7b
  41bdb4:	shr    DWORD PTR [edi],0x37
  41bdb7:	pop    edi
  41bdb8:	dec    esi
  41bdb9:	daa    
  41bdba:	add    al,0x62
  41bdbc:	nop
  41bdbd:	or     DWORD PTR [ecx],ebp
  41bdbf:	lods   eax,DWORD PTR ds:[esi]
  41bdc0:	mov    ds:0x8f24bc9a,eax
  41bdc5:	sahf   
  41bdc6:	xchg   DWORD PTR [ecx-0x37d60104],ecx
  41bdcc:	pop    ecx
  41bdcd:	and    esi,DWORD PTR [eax-0x1da895ef]
  41bdd3:	sub    eax,0x94db9efb
  41bdd8:	in     al,dx
  41bdd9:	(bad)  
  41bdda:	ds fs mov ecx,0xc2aa9dd6
  41bde1:	in     eax,dx
  41bde2:	lahf   
  41bde3:	shl    DWORD PTR [ebx+0x34],1
  41bde6:	mov    al,0x98
  41bde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde9:	pop    esp
  41bdea:	inc    edx
  41bdeb:	stos   BYTE PTR es:[edi],al
  41bdec:	mov    ch,0x4c
  41bdee:	push   ecx
  41bdef:	mov    BYTE PTR [edx+ecx*2],0x8f
  41bdf3:	xchg   esi,eax
  41bdf4:	imul   edi,edi,0x55d5f157
  41bdfa:	sub    BYTE PTR [edi-0x9ed15ab],al
  41be00:	lods   al,BYTE PTR ds:[esi]
  41be01:	sbb    BYTE PTR [eax],ch
  41be03:	das    
  41be04:	fist   WORD PTR [ebp+0x19]
  41be07:	xor    ch,BYTE PTR [ebx]
  41be09:	out    0x76,eax
  41be0b:	pop    edx
  41be0c:	in     al,dx
  41be0d:	icebp  
  41be0e:	cli    
  41be0f:	dec    bh
  41be11:	adc    ecx,DWORD PTR [esi]
  41be13:	pushf  
  41be14:	fdivr  QWORD PTR [edx-0x421578d3]
  41be1a:	repz inc edx
  41be1c:	mov    cl,BYTE PTR [ecx+0x6293fa30]
  41be22:	fist   DWORD PTR [esi-0xc]
  41be25:	sub    ecx,DWORD PTR [ebx-0x54]
  41be28:	dec    esi
  41be29:	adc    eax,0x2dfa7e9c
  41be2e:	and    esp,DWORD PTR [edi]
  41be30:	xchg   DWORD PTR [eax+0x5e],esp
  41be33:	jno    0x41be50
  41be35:	mov    WORD PTR [esi+0x2ee37857],cs
  41be3b:	jmp    0xeb874ea2
  41be40:	adc    esi,0x47f20366
  41be46:	fmul   DWORD PTR [ecx+edi*2-0x4b]
  41be4a:	jmp    0x41be87
  41be4c:	out    0xb7,al
  41be4e:	cmp    al,ah
  41be50:	jb     0x41be09
  41be52:	push   es
  41be53:	xor    dl,dh
  41be55:	call   0x4627940f
  41be5a:	xchg   DWORD PTR [edi+0x181bd82d],eax
  41be60:	neg    bh
  41be62:	push   ds
  41be63:	aam    0x8d
  41be65:	mov    al,ah
  41be67:	shl    BYTE PTR [esp+0x5],0x72
  41be6c:	js     0x41be3c
  41be6e:	mov    esi,0x138d0a30
  41be73:	neg    BYTE PTR [edx-0x72]
  41be76:	xchg   esp,eax
  41be77:	fcom   DWORD PTR [edi*8+0x7cd69326]
  41be7e:	jecxz  0x41bee3
  41be80:	rol    esi,cl
  41be82:	ret    
  41be83:	adc    al,0x4a
  41be85:	lahf   
  41be86:	or     eax,0x8ded6d81
  41be8b:	nop
  41be8c:	ss (bad) 
  41be8e:	icebp  
  41be8f:	fistp  WORD PTR [ebx+esi*4+0x5f93a914]
  41be96:	and    BYTE PTR [esi+0x73],ch
  41be99:	lods   eax,DWORD PTR ds:[esi]
  41be9a:	mov    ebp,0x8e3c5913
  41be9f:	das    
  41bea0:	rcl    BYTE PTR [edi],cl
  41bea2:	inc    esi
  41bea3:	sub    BYTE PTR [ebx-0x45],dl
  41bea6:	pusha  
  41bea7:	sub    eax,0x78610f22
  41beac:	cmp    al,0x91
  41beae:	mov    BYTE PTR [esi],cl
  41beb0:	xchg   esp,eax
  41beb1:	add    esp,edi
  41beb3:	or     ebp,DWORD PTR [ecx+0x6]
  41beb6:	pop    esi
  41beb7:	xor    ah,BYTE PTR fs:[edi]
  41beba:	xor    ebp,DWORD PTR [edx]
  41bebc:	inc    ecx
  41bebd:	test   al,0x24
  41bebf:	loopne 0x41bf2c
  41bec1:	push   esp
  41bec2:	daa    
  41bec3:	xor    eax,0x11a399ef
  41bec8:	mov    edx,0x455b16de
  41bece:	mov    WORD PTR [eax],?
  41bed0:	out    0x4d,eax
  41bed2:	out    0xc9,al
  41bed4:	adc    cl,BYTE PTR [edx]
  41bed6:	fcom   QWORD PTR [eax]
  41bed8:	xchg   ebx,eax
  41bed9:	adc    bl,bl
  41bedb:	xor    eax,ecx
  41bedd:	test   DWORD PTR [eax],ebp
  41bedf:	js     0x41bef6
  41bee1:	cmp    DWORD PTR [edx+0x271ddf1],ebp
  41bee7:	push   edx
  41bee8:	je     0x41bef4
  41beea:	cwde   
  41beeb:	mov    edi,0xc9643ef5
  41bef0:	xor    esi,DWORD PTR [esi+0x1d805f0b]
  41bef6:	add    BYTE PTR [edx],ah
  41bef8:	xor    bh,dl
  41befa:	mov    cl,0x1a
  41befc:	mov    ecx,0xff8fb19e
  41bf01:	and    cl,BYTE PTR [ebx+0x18]
  41bf04:	add    BYTE PTR [esi],dh
  41bf06:	imul   ebx,eax,0xd9e3bf14
  41bf0c:	(bad)  fs:[eax-0x1e]
  41bf10:	scas   eax,DWORD PTR es:[edi]
  41bf11:	xor    al,0x14
  41bf13:	dec    ebp
  41bf14:	adc    eax,0x1215d17e
  41bf19:	mov    ah,0xbc
  41bf1b:	and    eax,0x20a1592b
  41bf20:	lods   al,BYTE PTR ds:[esi]
  41bf21:	repz scas eax,DWORD PTR es:[edi]
  41bf23:	(bad)  
  41bf24:	pusha  
  41bf25:	js     0x41bf94
  41bf27:	dec    edx
  41bf28:	std    
  41bf29:	mov    al,0x86
  41bf2b:	jb     0x41befc
  41bf2d:	loopne 0x41bf60
  41bf2f:	test   al,0xd4
  41bf31:	mov    al,0xa7
  41bf33:	xor    DWORD PTR [eax-0x6fe9912c],edi
  41bf39:	and    al,0xbd
  41bf3b:	xchg   ecx,eax
  41bf3c:	je     0x1bbaf5d
  41bf42:	dec    ecx
  41bf43:	jo     0x41bf36
  41bf45:	push   cs
  41bf46:	mov    esi,0x9baebd51
  41bf4b:	dec    ecx
  41bf4c:	fstp   QWORD PTR [ecx+0xf]
  41bf4f:	hlt    
  41bf50:	in     eax,0x65
  41bf52:	mov    al,ds:0xff5a34af
  41bf57:	nop
  41bf58:	out    0x8f,al
  41bf5a:	mov    eax,0x9c1aad8a
  41bf5f:	scas   al,BYTE PTR es:[edi]
  41bf60:	pusha  
  41bf61:	and    al,0xd4
  41bf63:	pop    esi
  41bf64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf65:	pminsw mm7,mm7
  41bf68:	imul   esi,DWORD PTR [edx+esi*2+0x55],0xb43235f8
  41bf70:	into   
  41bf71:	imul   al
  41bf73:	push   edi
  41bf74:	xor    ecx,DWORD PTR [ecx-0x354c82c8]
  41bf7a:	mov    WORD PTR [ecx+0x1f],ds
  41bf7d:	ins    DWORD PTR es:[edi],dx
  41bf7e:	or     al,0xc9
  41bf80:	loop   0x41bfe2
  41bf82:	int3   
  41bf83:	mov    esi,0x56aaa1e9
  41bf88:	das    
  41bf89:	push   edi
  41bf8a:	sbb    dl,bl
  41bf8c:	pusha  
  41bf8d:	iret   
  41bf8e:	mov    al,0xe
  41bf90:	loop   0x41bf1c
  41bf92:	cdq    
  41bf93:	mov    WORD PTR [edi+0x4bb65399],ds
  41bf99:	cmp    eax,0x10dd3c35
  41bf9e:	mov    eax,ds:0x6a14c2cf
  41bfa3:	addr16 jmp 0x19d9:0x40741687
  41bfab:	retf   
  41bfac:	shl    BYTE PTR [esi-0x5dbcc2c6],0x94
  41bfb3:	(bad)  
  41bfb4:	in     eax,0x6b
  41bfb6:	sbb    eax,0x5bca3d3
  41bfbb:	into   
  41bfbc:	mov    eax,0xcc5809c
  41bfc1:	or     al,BYTE PTR [ebx+0x33584dce]
  41bfc7:	lds    eax,FWORD PTR [edx]
  41bfc9:	call   0x1e7f:0xa2c0712d
  41bfd0:	or     BYTE PTR [ecx-0x1318f529],dh
  41bfd6:	stos   BYTE PTR es:[edi],al
  41bfd7:	aaa    
  41bfd8:	cli    
  41bfd9:	enter  0x6d74,0xd8
  41bfdd:	enter  0x5b10,0xbb
  41bfe1:	cli    
  41bfe2:	adc    al,0xf8
  41bfe4:	out    0xab,al
  41bfe6:	icebp  
  41bfe7:	ds repnz outs dx,BYTE PTR cs:[esi]
  41bfeb:	outs   dx,DWORD PTR ds:[esi]
  41bfec:	mov    ah,0xee
  41bfee:	jl     0x41c001
  41bff0:	cmc    
  41bff1:	cmp    dl,BYTE PTR [esi-0x6a60c757]
  41bff7:	ins    BYTE PTR es:[edi],dx
  41bff8:	xor    DWORD PTR [esi+ebp*8+0x61],edi
  41bffc:	xor    ah,BYTE PTR [esi+0x76]
  41bfff:	shl    BYTE PTR [edi+0x69],1
  41c002:	loope  0x41c024
  41c004:	or     al,0xfd
  41c006:	adc    al,0x9a
  41c008:	add    ah,al
  41c00a:	sahf   
  41c00b:	in     eax,0x61
  41c00d:	fisttp DWORD PTR [edi-0x50]
  41c010:	adc    eax,0x432842ec
  41c015:	mov    ecx,DWORD PTR [eax+esi*4+0x3a0264ec]
  41c01c:	mov    dh,0xa
  41c01e:	rcr    BYTE PTR [ebx],0x76
  41c021:	or     bh,dl
  41c023:	push   eax
  41c024:	xor    BYTE PTR [edx+0x47cdbbbb],al
  41c02a:	mov    ds:0x773b5a01,al
  41c02f:	sbb    BYTE PTR [edi+0x79],bh
  41c032:	popf   
  41c033:	xor    eax,0xce84a6ed
  41c038:	inc    edi
  41c039:	enter  0x4a1,0x12
  41c03d:	sub    eax,0x36bf0b02
  41c042:	xchg   esp,eax
  41c043:	fs adc ebp,ebx
  41c046:	aas    
  41c047:	jg     0x41bfe2
  41c049:	sahf   
  41c04a:	adc    al,BYTE PTR [eax]
  41c04c:	imul   esi,DWORD PTR [ecx+ebp*2-0x21],0x304f1541
  41c054:	bound  edi,QWORD PTR [esi]
  41c056:	daa    
  41c057:	sub    DWORD PTR [edx],0x4c3be182
  41c05d:	or     BYTE PTR [eax+0x176dba5b],ah
  41c063:	mov    edi,0x718273ab
  41c068:	add    BYTE PTR [edi+0x338bd6ef],dl
  41c06e:	fs inc edx
  41c070:	hlt    
  41c071:	jp     0x41c0c9
  41c073:	ins    BYTE PTR es:[edi],dx
  41c074:	push   edi
  41c075:	pop    ebp
  41c076:	push   esi
  41c077:	hlt    
  41c078:	mov    dl,0x9f
  41c07a:	sbb    DWORD PTR [ebx-0x2b],esi
  41c07d:	dec    esi
  41c07e:	fs stos WORD PTR es:[edi],ax
  41c081:	adc    DWORD PTR [ebx+0x18],0xbd8a0549
  41c088:	xchg   BYTE PTR [eax+0x11],bl
  41c08b:	jne    0x41c09b
  41c08d:	mov    cl,0x85
  41c08f:	sub    ecx,ebx
  41c091:	int    0xe9
  41c093:	or     al,0xd5
  41c095:	out    dx,al
  41c096:	and    eax,0xe901c98e
  41c09b:	mov    ds:0x586291f1,eax
  41c0a0:	sbb    BYTE PTR [edx+edi*1-0x62b99dee],ch
  41c0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0a8:	sar    ah,0xf0
  41c0ab:	adc    eax,0x18f8cabc
  41c0b0:	xchg   ecx,eax
  41c0b1:	sbb    eax,0x6106426a
  41c0b6:	pop    edi
  41c0b7:	inc    ebx
  41c0b8:	inc    ebx
  41c0b9:	daa    
  41c0ba:	pop    ebp
  41c0bb:	hlt    
  41c0bc:	mov    dh,BYTE PTR [edi-0x189287a6]
  41c0c2:	jbe    0x41c098
  41c0c4:	xchg   esp,eax
  41c0c5:	es jo  0x41c0bb
  41c0c8:	ret    
  41c0c9:	sub    al,0x2c
  41c0cb:	fimul  WORD PTR [ebp-0x7fff1c4c]
  41c0d1:	mov    eax,ds:0x3f0f857e
  41c0d6:	aam    0x71
  41c0d8:	mul    DWORD PTR [edx-0x7aa98870]
  41c0de:	repz xor al,0x68
  41c0e1:	pop    ebx
  41c0e2:	add    al,BYTE PTR [ebx+0x9]
  41c0e5:	scas   eax,DWORD PTR es:[edi]
  41c0e6:	mov    al,bl
  41c0e8:	jb     0x41c0d3
  41c0ea:	mov    DWORD PTR [ebx],esi
  41c0ec:	fisttp QWORD PTR [ebp-0x3dfd53a5]
  41c0f2:	adc    BYTE PTR [eax-0x72],dl
  41c0f5:	mov    BYTE PTR [ecx],bh
  41c0f7:	fsub   DWORD PTR [ebp-0x7a]
  41c0fa:	std    
  41c0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0fc:	push   esp
  41c0fd:	dec    esp
  41c0fe:	ret    0xbf8b
  41c101:	mov    BYTE PTR [edi],cl
  41c103:	repnz dec edi
  41c105:	je     0x41c179
  41c107:	xchg   esi,eax
  41c108:	out    dx,eax
  41c109:	sub    BYTE PTR [edi-0x550d706b],ah
  41c10f:	call   0x82097970
  41c114:	sbb    DWORD PTR [esi-0x73],edi
  41c117:	je     0x41c16e
  41c119:	adc    cl,dh
  41c11b:	mov    bl,0x9
  41c11d:	out    0x3a,al
  41c11f:	mov    bh,0x22
  41c121:	mov    BYTE PTR [eax+0x13f2cd62],cl
  41c127:	or     ch,0x51
  41c12a:	jecxz  0x41c172
  41c12c:	cld    
  41c12d:	sbb    al,0x36
  41c12f:	ficomp WORD PTR [ecx]
  41c131:	sbb    bl,BYTE PTR [edx+0x2e]
  41c134:	iret   
  41c135:	fcomip st,st(5)
  41c137:	(bad)  
  41c138:	push   0xcfff6bce
  41c13d:	sbb    dl,dh
  41c13f:	xor    al,0x27
  41c141:	vmovdqa xmm7,XMMWORD PTR ds:0x7e353f3d
  41c149:	inc    esi
  41c14a:	ins    DWORD PTR es:[edi],dx
  41c14b:	xor    BYTE PTR [esi+0x49],ch
  41c14e:	jae    0x41c0d2
  41c150:	pop    ds
  41c151:	pop    edx
  41c152:	or     al,cl
  41c154:	sti    
  41c155:	int    0xe5
  41c157:	jae    0x41c153
  41c159:	or     DWORD PTR [edx],ebp
  41c15b:	xchg   esp,eax
  41c15c:	rcr    al,1
  41c15e:	pop    es
  41c15f:	stc    
  41c160:	push   edx
  41c161:	je     0x41c1d4
  41c163:	out    dx,al
  41c164:	or     al,0x37
  41c166:	mov    al,ds:0x8afdd18
  41c16b:	adc    al,0xa7
  41c16d:	xor    DWORD PTR [esi+0x34],esp
  41c170:	ficom  DWORD PTR [edx+0x33]
  41c173:	jmp    0x784d:0x8f5706d2
  41c17a:	mov    dl,0xa3
  41c17c:	int    0xc4
  41c17e:	mov    ds:0xa78fc18f,al
  41c183:	hlt    
  41c184:	mov    ebx,0x638b933b
  41c189:	adc    DWORD PTR [ecx],ecx
  41c18b:	aad    0x59
  41c18d:	add    eax,0x5414efc8
  41c192:	mov    DWORD PTR ds:0xf692aad8,edi
  41c198:	rcl    BYTE PTR [esi-0x7b],0x68
  41c19c:	data16 sti 
  41c19e:	push   0xffffffee
  41c1a0:	add    DWORD PTR [edx+eiz*2],ebp
  41c1a3:	jo     0x41c1aa
  41c1a5:	test   DWORD PTR [esi],eax
  41c1a7:	out    dx,eax
  41c1a8:	je     0x41c17b
  41c1aa:	jne    0x41c173
  41c1ac:	ror    BYTE PTR fs:[edi-0x32f556ea],1
  41c1b3:	aam    0xf1
  41c1b5:	in     al,0x56
  41c1b7:	push   eax
  41c1b8:	and    DWORD PTR [edx-0x56],edi
  41c1bb:	mov    ah,0x99
  41c1bd:	sbb    esi,DWORD PTR [edi-0x43a54ae6]
  41c1c3:	dec    ecx
  41c1c4:	je     0x41c15c
  41c1c6:	stc    
  41c1c7:	enter  0x59ab,0x7
  41c1cb:	add    al,0x5a
  41c1cd:	pop    ss
  41c1ce:	and    al,0x2c
  41c1d0:	lods   eax,DWORD PTR ds:[esi]
  41c1d1:	xchg   edx,eax
  41c1d2:	pop    edi
  41c1d3:	xchg   BYTE PTR [edx+0x2e],bh
  41c1d6:	jbe    0x41c23e
  41c1d8:	addr16 lock pop esp
  41c1db:	push   0x1ab612d5
  41c1e0:	rcr    DWORD PTR [edx-0x19],1
  41c1e3:	dec    ebp
  41c1e4:	xor    edx,DWORD PTR [ecx-0x5b]
  41c1e7:	adc    dh,BYTE PTR [edi]
  41c1e9:	mov    edi,0xfe92d7c1
  41c1ee:	add    DWORD PTR [ecx+0x3c60b107],edx
  41c1f4:	out    dx,al
  41c1f5:	outs   dx,BYTE PTR ds:[esi]
  41c1f6:	test   DWORD PTR [ebp+0x77],ecx
  41c1f9:	cs ins DWORD PTR es:[edi],dx
  41c1fb:	imul   esp,DWORD PTR [edi+0x26],0xbb407d6f
  41c202:	or     BYTE PTR [ebx-0x2344e312],dl
  41c208:	ror    BYTE PTR [eax],0x32
  41c20b:	lock in al,0xbf
  41c20e:	xor    ch,BYTE PTR gs:[ebx-0xc30b95b]
  41c215:	addr16 mov bl,0x2c
  41c218:	retf   
  41c219:	enter  0x114c,0x2c
  41c21d:	sbb    al,0x7b
  41c21f:	fimul  DWORD PTR [ecx+0x2d7f6929]
  41c225:	and    BYTE PTR [eax+edi*4-0x43abfec2],cl
  41c22c:	mov    ds:0x206179ef,al
  41c231:	dec    esi
  41c232:	sub    dl,BYTE PTR [ebp+esi*1-0x25de125c]
  41c239:	mov    bh,0x93
  41c23b:	push   ss
  41c23c:	mov    BYTE PTR [eax+0x60fc271f],al
  41c242:	cs xchg edi,ebp
  41c245:	cmc    
  41c246:	push   ebx
  41c247:	icebp  
  41c248:	pop    ebx
  41c249:	ins    BYTE PTR es:[edi],dx
  41c24a:	(bad)  
  41c24b:	push   edx
  41c24c:	(bad)  
  41c24d:	lea    edx,fs:[ebx+0x25]
  41c251:	mov    ebx,0x5c0d5879
  41c256:	xor    ebx,eax
  41c258:	int    0x5a
  41c25a:	out    0x1e,eax
  41c25c:	mov    bl,BYTE PTR [ecx-0x61]
  41c25f:	mov    ch,0x59
  41c261:	dec    ebp
  41c262:	inc    ebx
  41c263:	and    al,0xf4
  41c265:	xchg   DWORD PTR [ebx+0x7164f4fa],eax
  41c26b:	inc    ebp
  41c26c:	and    bh,BYTE PTR [eax-0x57]
  41c26f:	imul   edi,DWORD PTR [eax],0x905fe0ee
  41c275:	jle    0xa2496d54
  41c27b:	scas   al,BYTE PTR es:[edi]
  41c27c:	inc    edx
  41c27d:	std    
  41c27e:	ror    DWORD PTR [eax+0x7f],cl
  41c281:	or     eax,0x3bc3496a
  41c286:	pop    esp
  41c287:	xor    DWORD PTR [eax+0x593abe0c],ebp
  41c28d:	mov    esp,DWORD PTR [ecx+0x25375733]
  41c293:	pop    edi
  41c294:	adc    eax,0x18043ff3
  41c299:	sub    al,0x23
  41c29b:	push   cs
  41c29c:	stc    
  41c29d:	or     ah,BYTE PTR [esi+0x6e5932e3]
  41c2a3:	jo     0x41c2c6
  41c2a5:	int3   
  41c2a6:	das    
  41c2a7:	dec    esp
  41c2a8:	shl    DWORD PTR [ecx-0x15],1
  41c2ab:	xchg   BYTE PTR [ecx],cl
  41c2ad:	jecxz  0x41c296
  41c2af:	dec    ebx
  41c2b0:	sbb    al,0xd
  41c2b2:	pusha  
  41c2b3:	cld    
  41c2b4:	inc    edx
  41c2b5:	fcmovu st,st(6)
  41c2b7:	inc    edi
  41c2b8:	aaa    
  41c2b9:	xchg   ebx,eax
  41c2ba:	xchg   ecx,eax
  41c2bb:	adc    al,0x74
  41c2bd:	pop    esi
  41c2be:	in     eax,dx
  41c2bf:	outs   dx,DWORD PTR ds:[esi]
  41c2c0:	xchg   esi,eax
  41c2c1:	pop    ebx
  41c2c2:	ins    BYTE PTR es:[edi],dx
  41c2c3:	and    bh,0x4b
  41c2c6:	into   
  41c2c7:	push   0x22
  41c2c9:	inc    esp
  41c2ca:	push   esi
  41c2cb:	mov    cl,0xd6
  41c2cd:	ja     0x41c27a
  41c2cf:	inc    ebp
  41c2d0:	ss call 0x89cca421
  41c2d6:	das    
  41c2d7:	loope  0x41c2ad
  41c2d9:	inc    esp
  41c2da:	loope  0x41c26f
  41c2dc:	jecxz  0x41c327
  41c2de:	cmp    BYTE PTR ds:0x38d071da,0x33
  41c2e5:	dec    ebx
  41c2e6:	cwde   
  41c2e7:	fimul  DWORD PTR [eax]
  41c2e9:	outs   dx,BYTE PTR ds:[esi]
  41c2ea:	cmp    BYTE PTR [edx+edx*4],al
  41c2ed:	dec    ebx
  41c2ee:	ror    DWORD PTR [esi-0x559c75c0],0x8b
  41c2f5:	mov    edi,0x520c1607
  41c2fa:	nop
  41c2fb:	mov    edx,0xbc22b73f
  41c300:	mov    ds:0x1c7ed836,eax
  41c305:	add    al,0x59
  41c307:	xchg   ecx,eax
  41c308:	xor    edi,ebp
  41c30a:	in     eax,dx
  41c30b:	pop    esi
  41c30c:	into   
  41c30d:	int    0x1
  41c30f:	sar    DWORD PTR [ebx+eiz*4+0x46],cl
  41c313:	cmp    al,0xe9
  41c315:	scas   al,BYTE PTR es:[edi]
  41c316:	jge    0x41c2b5
  41c318:	add    al,0x3c
  41c31a:	jb     0x41c389
  41c31c:	out    dx,al
  41c31d:	push   0x661635b1
  41c322:	inc    esp
  41c323:	fimul  DWORD PTR [ebp+0x42527c19]
  41c329:	mov    ds:0x74840a95,eax
  41c32e:	call   0x3eaf:0x61fd05f8
  41c335:	rcr    DWORD PTR [ebx+0x13bc5547],0x91
  41c33c:	push   edi
  41c33d:	jmp    0x7e9003e1
  41c342:	retf   
  41c343:	fs inc ecx
  41c345:	fdivr  DWORD PTR [eax]
  41c347:	fimul  DWORD PTR es:[ebp-0x3fcd085d]
  41c34e:	xor    eax,0x2e24b61b
  41c353:	inc    ebx
  41c354:	rol    DWORD PTR [ecx+ebp*2+0x6f8b7b9f],cl
  41c35b:	cmp    bh,BYTE PTR [esi-0x11f4785a]
  41c361:	or     cl,dh
  41c363:	out    0xdc,al
  41c365:	jns    0x41c301
  41c367:	mov    esi,0x6b82604f
  41c36c:	(bad)  
  41c36d:	and    bh,al
  41c36f:	or     eax,0xdcaa2788
  41c374:	sub    DWORD PTR [esi+0x52],edi
  41c377:	sbb    eax,0xe22add7a
  41c37c:	ja     0x41c346
  41c37e:	(bad)  
  41c37f:	xor    DWORD PTR [ebp-0x5970457c],ebx
  41c385:	xor    eax,0x1b560eb6
  41c38a:	jecxz  0x41c361
  41c38c:	push   esp
  41c38d:	xchg   ebp,eax
  41c38e:	inc    ebx
  41c38f:	inc    edi
  41c390:	mov    WORD PTR [ebx],cs
  41c392:	out    0x19,eax
  41c394:	leave  
  41c395:	pop    ds
  41c396:	jne    0x41c409
  41c398:	push   0xfffffff2
  41c39a:	stos   BYTE PTR es:[edi],al
  41c39b:	loope  0x41c368
  41c39d:	rol    BYTE PTR [ebp-0x65],1
  41c3a0:	into   
  41c3a1:	stos   BYTE PTR es:[edi],al
  41c3a2:	sub    BYTE PTR [ecx+0x37],ah
  41c3a5:	inc    ebx
  41c3a6:	or     ebx,0xffffff96
  41c3a9:	jmp    0xbddf:0x788e990c
  41c3b0:	je     0x41c3b7
  41c3b2:	push   esi
  41c3b3:	dec    esi
  41c3b4:	mov    ebp,0x2ee4e9b1
  41c3b9:	lods   eax,DWORD PTR ds:[esi]
  41c3ba:	mov    bh,BYTE PTR [ebx]
  41c3bc:	mov    dh,BYTE PTR [ecx]
  41c3be:	jge    0x41c382
  41c3c0:	fsub   DWORD PTR [edi-0x2]
  41c3c3:	mov    ebx,0x32f14aec
  41c3c8:	jbe    0x41c440
  41c3ca:	mov    bh,0x9e
  41c3cc:	out    dx,al
  41c3cd:	stc    
  41c3ce:	aad    0x11
  41c3d0:	nop
  41c3d1:	out    dx,al
  41c3d2:	inc    ebp
  41c3d3:	pop    ebp
  41c3d4:	mov    al,0xb8
  41c3d6:	fucomp st(5)
  41c3d8:	xchg   bx,ax
  41c3da:	and    BYTE PTR [edx],bh
  41c3dc:	jmp    0x41c43b
  41c3de:	imul   ebp,DWORD PTR [ebx],0x6f
  41c3e1:	push   cs
  41c3e2:	imul   ebp,DWORD PTR [edx-0x3edf0bcd],0x7e3f4687
  41c3ec:	dec    edi
  41c3ed:	js     0x41c3c9
  41c3ef:	test   eax,0xfa0906f2
  41c3f4:	js     0x41c3e0
  41c3f6:	pop    es
  41c3f7:	mov    esi,0xe05b97c2
  41c3fc:	ret    0x8ead
  41c3ff:	sbb    eax,0x843867e1
  41c404:	jmp    0x551c5147
  41c409:	int3   
  41c40a:	pushf  
  41c40b:	mov    al,0x36
  41c40d:	frstor [ebx+0x446c69eb]
  41c413:	mov    edi,0x220ac476
  41c418:	jge    0x41c47c
  41c41a:	mov    edi,0x213a44e5
  41c41f:	sbb    al,BYTE PTR [ecx+0x32d6d83d]
  41c425:	(bad)  [ecx+0x26]
  41c428:	out    dx,eax
  41c429:	mov    WORD PTR [ecx+0x46],ss
  41c42c:	jnp    0x41c470
  41c42e:	cmp    DWORD PTR [ebx-0xa73e6d8],eax
  41c434:	xchg   ecx,eax
  41c435:	nop
  41c436:	sub    DWORD PTR [ebp+0x632e4fe9],0x33
  41c43d:	sub    ebp,DWORD PTR [esi-0x6c]
  41c440:	pop    ebp
  41c441:	xor    al,0x56
  41c443:	lea    ecx,[esi+0x535a6414]
  41c449:	dec    edx
  41c44a:	aam    0x7d
  41c44c:	mov    edi,DWORD PTR [eax]
  41c44e:	fisub  WORD PTR ds:0xe2a6db6d
  41c454:	cwde   
  41c455:	not    BYTE PTR [edi]
  41c457:	shl    DWORD PTR [edx+0x2e],1
  41c45a:	mov    edi,0x25eaa6c4
  41c45f:	scas   eax,DWORD PTR es:[edi]
  41c460:	loop   0x41c418
  41c462:	push   ds
  41c463:	and    al,0x35
  41c465:	test   DWORD PTR [ebx+0x7adf4079],edx
  41c46b:	stc    
  41c46c:	inc    esp
  41c46d:	inc    ebx
  41c46e:	sbb    BYTE PTR [edi-0x50],dl
  41c471:	dec    ebx
  41c472:	or     al,0xfc
  41c474:	jae    0x41c4cb
  41c476:	jne    0x41c4e8
  41c478:	data16 aas 
  41c47a:	outs   dx,BYTE PTR ds:[esi]
  41c47b:	pushf  
  41c47c:	pop    edx
  41c47d:	mov    eax,0x6ca1306d
  41c482:	xor    al,0xd1
  41c484:	mov    BYTE PTR [edi+0x2f],0x6d
  41c488:	(bad)  
  41c489:	push   0x9f2f7398
  41c48e:	retf   
  41c48f:	shl    DWORD PTR [edx+edx*2],cl
  41c492:	adc    al,0x25
  41c494:	push   ds
  41c495:	hlt    
  41c496:	pop    eax
  41c497:	push   ss
  41c498:	sub    BYTE PTR [eax+0x236f387a],ch
  41c49e:	call   0xcf5b0ad
  41c4a3:	adc    ecx,ebp
  41c4a5:	mov    ds,WORD PTR [esi]
  41c4a7:	xor    ah,ah
  41c4a9:	jmp    FWORD PTR [eax-0x770ba34c]
  41c4af:	(bad)  
  41c4b0:	push   edx
  41c4b1:	mov    ebx,0xee3a9bf9
  41c4b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4b7:	jmp    0xd72b:0xc17aa4b7
  41c4be:	add    DWORD PTR [edx-0x45bd6733],ebx
  41c4c4:	ds cmp al,0xe0
  41c4c7:	es pop es
  41c4c9:	loop   0x41c53f
  41c4cb:	dec    edi
  41c4cc:	lods   eax,DWORD PTR ds:[esi]
  41c4cd:	or     eax,0x5d040c3b
  41c4d2:	ins    DWORD PTR es:[edi],dx
  41c4d3:	and    al,0xa9
  41c4d5:	inc    ecx
  41c4d6:	ror    BYTE PTR [edi],cl
  41c4d8:	dec    esp
  41c4d9:	cmp    al,0x76
  41c4db:	mov    ds:0x6e19d4d0,eax
  41c4e0:	mov    WORD PTR [edi-0x79],cs
  41c4e3:	arpl   WORD PTR [ecx+eiz*2],ax
  41c4e6:	fiadd  WORD PTR [esi+0x28f178cf]
  41c4ec:	sub    esi,DWORD PTR [ebx-0x5a]
  41c4ef:	dec    eax
  41c4f0:	lock rcr DWORD PTR [esi],0x6c
  41c4f4:	ss cli 
  41c4f6:	aad    0x66
  41c4f8:	sbb    DWORD PTR [ecx-0x2b],esp
  41c4fb:	pop    eax
  41c4fc:	imul   edi,DWORD PTR [esi+esi*4-0x1dc2281e],0xe0f6841a
  41c507:	inc    edi
  41c508:	int3   
  41c509:	push   0xffffffa4
  41c50b:	leave  
  41c50c:	sti    
  41c50d:	mov    esi,0x99bb643c
  41c512:	mov    bh,BYTE PTR [ebp+0x36]
  41c515:	sub    edi,edi
  41c517:	sub    DWORD PTR [edx-0x1],esp
  41c51a:	cmp    bh,bh
  41c51c:	in     eax,dx
  41c51d:	ja     0x41c570
  41c51f:	ins    BYTE PTR es:[edi],dx
  41c520:	imul   ecx,DWORD PTR [edx-0x2b],0xfa7d922a
  41c527:	cmp    BYTE PTR [eax+0x3],dl
  41c52a:	inc    ebx
  41c52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c52c:	jmp    0x8435:0x25a11723
  41c533:	out    0x87,eax
  41c535:	int    0xd3
  41c537:	or     eax,0xe490c6e6
  41c53c:	sub    ah,BYTE PTR [edx-0x22]
  41c53f:	and    al,0xc5
  41c541:	sub    DWORD PTR [eax],ebp
  41c543:	inc    ebp
  41c544:	sbb    ch,ah
  41c546:	pusha  
  41c547:	mov    eax,ds:0xb6888771
  41c54c:	mov    dh,0xa0
  41c54e:	enter  0x6e7a,0x33
  41c552:	dec    esp
  41c553:	data16 mov dl,BYTE PTR ds:[esi+0x46]
  41c558:	jae    0x41c595
  41c55a:	(bad)  
  41c55b:	jge    0x41c4e5
  41c55d:	fiadd  WORD PTR [esi+0x3a31f8a7]
  41c563:	or     edi,DWORD PTR [esi-0x1d]
  41c566:	sbb    ecx,DWORD PTR [ebp+0xb4933e]
  41c56c:	jmp    0x41c5b0
  41c56e:	pop    ebp
  41c56f:	xchg   ebp,eax
  41c570:	test   al,0xd4
  41c572:	dec    esi
  41c573:	or     al,bl
  41c575:	out    0xd0,al
  41c577:	popw   ss
  41c579:	add    ah,BYTE PTR [esi]
  41c57b:	rol    BYTE PTR [eax+ebp*4-0x7fa27fa4],1
  41c582:	push   edi
  41c583:	enter  0xb652,0xdd
  41c587:	sub    BYTE PTR [eax-0x1e0b7355],0x45
  41c58e:	fucomp st(0)
  41c590:	rcl    BYTE PTR [esi-0x7419a238],cl
  41c596:	daa    
  41c597:	mov    esi,0xc05946c2
  41c59c:	or     BYTE PTR [ecx],bh
  41c59e:	mov    DWORD PTR ds:0xaf80c0d8,eax
  41c5a4:	stos   DWORD PTR es:[edi],eax
  41c5a5:	push   edi
  41c5a6:	xchg   esp,eax
  41c5a7:	jmp    0x41c5e0
  41c5a9:	add    esi,ebx
  41c5ab:	bound  ecx,QWORD PTR [ecx+0x35]
  41c5ae:	aad    0xde
  41c5b0:	and    eax,0xe59d6f0b
  41c5b5:	pop    ebx
  41c5b6:	jnp    0x41c606
  41c5b8:	or     cl,BYTE PTR [ecx+0x6b7276fc]
  41c5be:	jae    0x41c595
  41c5c0:	mov    eax,0x41a38d4b
  41c5c5:	enter  0xcf2e,0x2b
  41c5c9:	stos   DWORD PTR es:[edi],eax
  41c5ca:	mov    DWORD PTR [ebx-0x6f2e0924],0x5bf37476
  41c5d4:	cmp    ecx,ebp
  41c5d6:	test   cl,ch
  41c5d8:	sub    dh,BYTE PTR [edx+0x7189fd29]
  41c5de:	cdq    
  41c5df:	sub    DWORD PTR [edi+0x1],0xfffffffe
  41c5e3:	fcom   DWORD PTR [esi-0x7164ba63]
  41c5e9:	or     bl,0xd9
  41c5ec:	pop    es
  41c5ed:	ds retf 
  41c5ef:	in     eax,0x3b
  41c5f1:	sub    eax,DWORD PTR [eax]
  41c5f3:	xor    eax,0x3ab41f9a
  41c5f8:	or     eax,0x8f137052
  41c5fd:	sbb    esp,DWORD PTR [esi]
  41c5ff:	lea    edi,[eax+0x3b]
  41c602:	int    0x7
  41c604:	inc    edi
  41c605:	fsubr  st,st(4)
  41c607:	adc    al,0xfc
  41c609:	pop    es
  41c60a:	xchg   ecx,eax
  41c60b:	sub    BYTE PTR [ecx-0x1789ba1e],0x25
  41c612:	dec    ebp
  41c613:	scas   eax,DWORD PTR es:[edi]
  41c614:	pop    edi
  41c615:	out    dx,eax
  41c616:	loopne 0x41c5e4
  41c618:	xchg   esp,eax
  41c619:	pop    ebp
  41c61a:	sub    DWORD PTR ds:[edx+ebx*4],esi
  41c61e:	rol    DWORD PTR [esi+ecx*8-0x748c3a23],1
  41c625:	jg     0x41c5e1
  41c627:	addr16 push ds
  41c629:	les    ebx,FWORD PTR [eax]
  41c62b:	and    cl,ch
  41c62d:	jne    0x41c5fc
  41c62f:	inc    ebp
  41c630:	ins    BYTE PTR es:[edi],dx
  41c631:	cmp    BYTE PTR [ebx],0xde
  41c634:	mov    cl,0xdd
  41c636:	ss (bad) 
  41c638:	loopne 0x41c6a9
  41c63a:	test   BYTE PTR [ebx+0x1d],al
  41c63d:	mov    ds:0xbfa9fcb4,al
  41c642:	and    BYTE PTR [eax+0xd],cl
  41c645:	jb     0x41c652
  41c647:	repz and BYTE PTR [esi+0x1],0xfc
  41c64c:	int3   
  41c64d:	xor    DWORD PTR [edi],esi
  41c64f:	mov    esi,0xca25a067
  41c654:	pop    eax
  41c655:	mov    BYTE PTR [ebp-0x5054d45d],dh
  41c65b:	mov    bl,0x75
  41c65d:	mov    eax,ds:0xfb89f08f
  41c662:	clc    
  41c663:	out    0x49,al
  41c665:	adc    bh,bh
  41c667:	push   ss
  41c668:	out    0xa,eax
  41c66a:	push   ebx
  41c66b:	jmp    DWORD PTR [edi]
  41c66d:	js     0x41c640
  41c66f:	mov    edi,0xdb1c15c3
  41c674:	fisttp DWORD PTR [bp+si]
  41c677:	add    DWORD PTR cs:[esi-0x9f75c27],ecx
  41c67e:	out    0xe1,al
  41c680:	jb     0x41c629
  41c682:	xor    edi,0xd1a58eb8
  41c688:	scas   eax,DWORD PTR es:[edi]
  41c689:	push   ecx
  41c68a:	lods   eax,DWORD PTR ds:[esi]
  41c68b:	xchg   ebp,eax
  41c68c:	fcom   DWORD PTR [ecx+0x327e0ba0]
  41c692:	(bad)  
  41c693:	test   eax,0x1dac3830
  41c698:	jne    0x41c61c
  41c69a:	retf   0xb472
  41c69d:	mov    BYTE PTR [ebx],dl
  41c69f:	jmp    0x41c6f2
  41c6a1:	fdivr  DWORD PTR [edx+0x3b8ffa9d]
  41c6a7:	xchg   ebp,eax
  41c6a8:	add    BYTE PTR [ebx+ebx*1],bh
  41c6ab:	or     BYTE PTR [ecx-0x1428f7b],al
  41c6b1:	and    al,0x60
  41c6b3:	inc    edx
  41c6b4:	in     eax,dx
  41c6b5:	leave  
  41c6b6:	mov    DWORD PTR [edx+0x30],esp
  41c6b9:	iret   
  41c6ba:	pop    ecx
  41c6bb:	pop    esp
  41c6bc:	mov    edi,0xc1dcf428
  41c6c1:	xchg   ebp,eax
  41c6c2:	mov    ds:0x76031755,eax
  41c6c7:	lock pop DWORD PTR [ebp+0x26505209]
  41c6ce:	imul   esp,DWORD PTR [edx+0x35],0x34
  41c6d2:	enter  0xe80f,0xd6
  41c6d6:	adc    eax,0xeba91ade
  41c6db:	test   DWORD PTR [edi],0xa4ac8cb9
  41c6e1:	sbb    dh,BYTE PTR [ebx-0x5f]
  41c6e4:	jmp    0x41c69c
  41c6e6:	or     BYTE PTR [eax-0x77],0x6f
  41c6ea:	or     cl,BYTE PTR [edx+0x442374e7]
  41c6f0:	inc    ebx
  41c6f1:	jne    0x41c67d
  41c6f3:	call   0x59f99107
  41c6f8:	test   DWORD PTR [ebp+0xc],eax
  41c6fb:	adc    DWORD PTR [eax+0x2a0ffcbe],esp
  41c701:	mov    ebx,edx
  41c703:	adc    BYTE PTR [eax],ah
  41c705:	leave  
  41c706:	aaa    
  41c707:	mov    dh,ch
  41c709:	retf   
  41c70a:	adc    esp,DWORD PTR [ebp-0x1cddabb8]
  41c710:	shl    BYTE PTR [ebp*8+0x14845185],cl
  41c717:	sub    eax,0x67b46240
  41c71c:	mov    al,ds:0xcc06598a
  41c721:	xchg   edi,eax
  41c722:	dec    ebp
  41c723:	xchg   ecx,eax
  41c724:	cmp    ecx,ebp
  41c726:	mov    ch,0x3
  41c728:	xchg   edx,eax
  41c729:	jno    0x41c6ab
  41c72b:	inc    ebp
  41c72c:	sub    DWORD PTR [edx-0x22],edi
  41c72f:	fwait
  41c730:	mov    ebx,0x7c68b28c
  41c735:	sub    esi,DWORD PTR [ebp-0x6f6c9fc6]
  41c73b:	inc    cl
  41c73d:	mov    ecx,0x98c5899
  41c742:	xchg   esp,eax
  41c743:	test   BYTE PTR [edx],bh
  41c745:	push   ss
  41c746:	loope  0x41c74b
  41c748:	sbb    al,ah
  41c74a:	ret    
  41c74b:	push   cs
  41c74c:	addr16 sahf 
  41c74e:	test   ebx,ebx
  41c750:	xchg   edx,eax
  41c751:	add    al,0x6e
  41c753:	xchg   ecx,eax
  41c754:	imul   esi,edi,0x45b3c62c
  41c75a:	xor    eax,0xcabc8da2
  41c75f:	fsubr  st(0),st
  41c761:	push   ebx
  41c762:	and    bl,BYTE PTR [eax]
  41c764:	jmp    0x41c75b
  41c766:	xchg   DWORD PTR [edx+0x4d7fe790],esp
  41c76c:	add    dh,cl
  41c76e:	jnp    0x41c766
  41c770:	push   eax
  41c771:	sbb    eax,0xfc3a386c
  41c776:	stos   BYTE PTR es:[edi],al
  41c777:	sbb    cl,BYTE PTR [ebx]
  41c779:	fwait
  41c77a:	dec    ebx
  41c77b:	push   cs
  41c77c:	fcomp  QWORD PTR [esi]
  41c77e:	dec    ebx
  41c77f:	and    ch,dl
  41c781:	jmp    0x41c755
  41c783:	push   cs
  41c784:	xchg   DWORD PTR [ecx+0x6b],ebp
  41c787:	dec    ebp
  41c788:	pop    esp
  41c789:	fs xor al,0xf6
  41c78c:	adc    edi,DWORD PTR [esi+0xc]
  41c78f:	sub    edi,DWORD PTR [edx]
  41c791:	aas    
  41c792:	jb     0x41c7bb
  41c794:	leave  
  41c795:	or     DWORD PTR [ecx],ebp
  41c797:	and    al,0x61
  41c799:	data16 mov dh,0x9
  41c79c:	cmp    DWORD PTR [edi+eax*1-0x682f4745],esi
  41c7a3:	push   edi
  41c7a4:	adc    DWORD PTR [edx],esp
  41c7a6:	mov    dl,0x8b
  41c7a8:	inc    ebp
  41c7a9:	fsub   QWORD PTR [ecx+0x41]
  41c7ac:	jae    0x41c7bf
  41c7ae:	in     eax,0x6c
  41c7b0:	mov    bl,al
  41c7b2:	mov    edi,0x53ee7b66
  41c7b7:	or     eax,0xb69c8980
  41c7bc:	jb     0x41c75f
  41c7be:	out    0x5,al
  41c7c0:	inc    esi
  41c7c1:	sti    
  41c7c2:	xor    eax,0x4833237
  41c7c7:	jge    0x41c836
  41c7c9:	and    eax,esp
  41c7cb:	add    eax,0x81d7b031
  41c7d0:	pop    edi
  41c7d1:	dec    esi
  41c7d2:	sbb    al,0xb1
  41c7d4:	jo     0x41c804
  41c7d6:	push   eax
  41c7d7:	jno    0x41c855
  41c7d9:	pop    ebx
  41c7da:	or     ch,BYTE PTR [edx]
  41c7dc:	push   esi
  41c7dd:	pushf  
  41c7de:	xor    al,0x2d
  41c7e0:	mov    dl,0x99
  41c7e2:	stc    
  41c7e3:	adc    DWORD PTR [edx+0x1a],eax
  41c7e6:	mov    ds:0x6281330e,al
  41c7eb:	inc    eax
  41c7ec:	mov    esp,0xbe68520c
  41c7f1:	test   BYTE PTR [ecx-0x453252fa],bl
  41c7f7:	gs mov edi,0xe08f9b88
  41c7fd:	sahf   
  41c7fe:	sbb    esi,eax
  41c800:	sti    
  41c801:	mov    ebx,DWORD PTR [edi+0x3]
  41c804:	(bad)  
  41c805:	sbb    al,0x84
  41c807:	pop    edx
  41c808:	outs   dx,BYTE PTR ds:[esi]
  41c809:	and    BYTE PTR [edx],ah
  41c80b:	ss clc 
  41c80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c80e:	or     BYTE PTR [ebx+0x5f488d91],0x67
  41c815:	nop
  41c816:	fadd   DWORD PTR [eax]
  41c818:	jno    0x41c83d
  41c81a:	pop    esp
  41c81b:	hlt    
  41c81c:	retf   0x6d33
  41c81f:	cmp    edi,0xffffffcf
  41c822:	inc    eax
  41c823:	gs sti 
  41c825:	inc    ecx
  41c826:	sub    al,0x2e
  41c828:	popf   
  41c829:	fdivr  QWORD PTR [eax+0x261f6497]
  41c82f:	stos   BYTE PTR es:[edi],al
  41c830:	inc    eax
  41c831:	pushf  
  41c832:	(bad)  
  41c833:	or     al,0x62
  41c835:	pop    ds
  41c836:	adc    al,0x56
  41c838:	inc    ecx
  41c839:	out    0xc3,eax
  41c83b:	mov    ds:0x5821f342,al
  41c840:	sbb    eax,0xfe0d8c9a
  41c845:	or     al,0xbd
  41c847:	mov    edi,0x3da223ef
  41c84c:	lock loopne 0x41c84d
  41c84f:	jecxz  0x41c804
  41c851:	ds mov edx,0x272afbae
  41c857:	inc    esi
  41c858:	hlt    
  41c859:	jno    0x41c877
  41c85b:	inc    edi
  41c85c:	xor    bl,BYTE PTR [ecx]
  41c85e:	pop    edx
  41c85f:	dec    ecx
  41c860:	xor    DWORD PTR [edx],0x2a655f33
  41c866:	mov    bh,0x93
  41c868:	rcr    DWORD PTR [eax+ebx*4-0x8],0x3
  41c86d:	add    bh,BYTE PTR [edx+0x2f506c57]
  41c873:	jl     0x41c8a6
  41c875:	xchg   esp,eax
  41c876:	das    
  41c877:	pop    ss
  41c878:	mov    al,0xeb
  41c87a:	les    esi,FWORD PTR [ebp+0x5bab0d4b]
  41c880:	data16 sbb cl,0xaa
  41c884:	xchg   ecx,eax
  41c885:	mov    ebp,DWORD PTR [ecx]
  41c887:	mov    edi,0x416bb953
  41c88c:	adc    ah,bl
  41c88e:	jns    0x41c89e
  41c890:	dec    eax
  41c891:	fild   QWORD PTR [edi+0x52cb01d5]
  41c897:	cmp    esp,esi
  41c899:	clc    
  41c89a:	jno    0x41c852
  41c89c:	mov    ?,WORD PTR [edx]
  41c89e:	adc    ebp,DWORD PTR [edx+0x2]
  41c8a1:	mov    al,0xb
  41c8a3:	bound  ebp,QWORD PTR ds:0xbfc3db91
  41c8a9:	adc    ecx,DWORD PTR [eax+eax*2-0x60092cf4]
  41c8b0:	cmp    DWORD PTR [eax],ebp
  41c8b2:	sbb    ebx,edi
  41c8b4:	pop    esp
  41c8b5:	push   ds
  41c8b6:	sbb    ebx,DWORD PTR [edi+edi*2-0x211ef08d]
  41c8bd:	xchg   ebp,eax
  41c8be:	add    ebp,esi
  41c8c0:	loop   0x41c918
  41c8c2:	out    0x21,al
  41c8c4:	sar    BYTE PTR [esi+0x47a5be86],0x53
  41c8cb:	inc    eax
  41c8cc:	stos   BYTE PTR es:[edi],al
  41c8cd:	outs   dx,DWORD PTR ds:[esi]
  41c8ce:	inc    eax
  41c8cf:	xchg   DWORD PTR [ebp-0x28f48da9],ecx
  41c8d5:	cli    
  41c8d6:	push   eax
  41c8d7:	in     eax,0x8d
  41c8d9:	fwait
  41c8da:	xchg   ebp,eax
  41c8db:	push   ecx
  41c8dc:	add    ecx,DWORD PTR [ecx+eiz*2-0x41]
  41c8e0:	cmp    BYTE PTR [edi+0x4aadfbb8],cl
  41c8e6:	pop    es
  41c8e7:	imul   esi,DWORD PTR [ebp+0x13],0xee7e1fb1
  41c8ee:	test   eax,0xa91b4b8e
  41c8f3:	or     DWORD PTR [ebx+0xe5a6131],0xa9882afc
  41c8fd:	jge    0x41c96c
  41c8ff:	inc    edi
  41c900:	jnp    0x41c8b5
  41c902:	call   0x2fe2:0x584004f6
  41c909:	imul   esp,DWORD PTR [ebx],0x3c71e843
  41c90f:	sbb    al,0xb6
  41c911:	adc    al,0x14
  41c913:	fwait
  41c914:	rcl    edx,cl
  41c916:	aas    
  41c917:	sbb    DWORD PTR [ebp-0x196b372f],edx
  41c91d:	call   0xd1cb:0x98843ee0
  41c924:	ins    DWORD PTR es:[edi],dx
  41c925:	jp     0x41c8b4
  41c927:	and    cl,al
  41c929:	and    eax,0x7edbba12
  41c92e:	scas   al,BYTE PTR es:[edi]
  41c92f:	push   ds
  41c930:	cmp    eax,DWORD PTR [edx+0x2]
  41c933:	es push edx
  41c935:	bswap  edi
  41c937:	sti    
  41c938:	inc    eax
  41c939:	and    eax,0x6c6d8764
  41c93e:	or     eax,0x84e1c38a
  41c943:	jmp    0x41c9af
  41c945:	jae    0x41c8ee
  41c947:	ret    
  41c948:	test   DWORD PTR [eax+0x79],0xd2546132
  41c94f:	dec    ecx
  41c950:	ins    DWORD PTR es:[edi],dx
  41c951:	scas   al,BYTE PTR es:[edi]
  41c952:	cmp    eax,0x36037bcf
  41c957:	cwde   
  41c958:	js     0x41c9c1
  41c95a:	(bad)  
  41c95b:	rcl    BYTE PTR [edi],cl
  41c95d:	push   ebx
  41c95e:	xor    DWORD PTR [ecx-0x44007437],esp
  41c964:	mov    edx,ss
  41c966:	pop    esi
  41c967:	sbb    al,0x74
  41c969:	lods   al,BYTE PTR ds:[esi]
  41c96a:	mov    BYTE PTR [edi+0x47],dl
  41c96d:	lahf   
  41c96e:	dec    eax
  41c96f:	repnz pop eax
  41c971:	sbb    edi,DWORD PTR [ebx+ebx*4]
  41c974:	addr16 lahf 
  41c976:	les    eax,FWORD PTR [ebx+0x8]
  41c979:	sbb    eax,0xb885c3f
  41c97e:	(bad)  
  41c97f:	(bad)  
  41c980:	xchg   edi,eax
  41c981:	imul   ebx,ecx,0x85306891
  41c987:	je     0x41c9e7
  41c989:	mov    ah,0x31
  41c98b:	pop    ds
  41c98c:	mov    BYTE PTR [esi+ecx*8],bl
  41c98f:	pop    ecx
  41c990:	int    0xc4
  41c992:	sbb    cl,BYTE PTR [esi]
  41c994:	addr16 inc esi
  41c996:	call   0xf479:0x5fc79b14
  41c99d:	in     eax,dx
  41c99e:	sub    DWORD PTR [ecx+0x43],esi
  41c9a1:	xchg   DWORD PTR [edi],esp
  41c9a3:	fs push edx
  41c9a5:	xchg   edx,eax
  41c9a6:	pop    esp
  41c9a7:	ja     0x41ca0d
  41c9a9:	lods   eax,DWORD PTR ds:[esi]
  41c9aa:	sbb    BYTE PTR [esi+0x51d0b71a],dl
  41c9b0:	mov    cl,bl
  41c9b2:	adc    bl,ah
  41c9b4:	add    ebp,DWORD PTR [ebp+0x54b088b7]
  41c9ba:	sbb    BYTE PTR [ebp+0x4b4493d6],ch
  41c9c0:	sbb    esp,DWORD PTR [eax*4-0x6e727771]
  41c9c7:	inc    esi
  41c9c8:	pop    ebx
  41c9c9:	mov    bh,0xac
  41c9cb:	mov    bl,0x5e
  41c9cd:	pop    esi
  41c9ce:	js     0x41ca02
  41c9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9d1:	adc    al,BYTE PTR [edi+0x21]
  41c9d4:	rcr    DWORD PTR [edx+0xf],0xed
  41c9d8:	retf   
  41c9d9:	dec    edx
  41c9da:	dec    ecx
  41c9db:	push   ecx
  41c9dc:	rcl    edx,0x2a
  41c9df:	in     ax,0xc6
  41c9e2:	out    0xd6,al
  41c9e4:	mov    ch,0xe1
  41c9e6:	fisub  WORD PTR [edx]
  41c9e8:	and    DWORD PTR [eax-0x63ab7283],ebp
  41c9ee:	inc    edi
  41c9ef:	mov    dl,0x1
  41c9f1:	stos   BYTE PTR es:[edi],al
  41c9f2:	pop    ecx
  41c9f3:	inc    ebx
  41c9f4:	cli    
  41c9f5:	idiv   BYTE PTR [ebp-0x4158a0b7]
  41c9fb:	inc    ebp
  41c9fc:	mov    esi,0xc5d5dcdc
  41ca01:	mov    ch,0x2b
  41ca03:	pop    es
  41ca04:	cmp    BYTE PTR [edi+0x5f],ah
  41ca07:	mov    fs,edi
  41ca09:	xchg   ebp,eax
  41ca0a:	fist   DWORD PTR [ecx-0x3f42ae01]
  41ca10:	in     eax,dx
  41ca11:	push   es
  41ca12:	inc    esp
  41ca13:	mov    DWORD PTR [ebp-0x51],ebx
  41ca16:	pop    esi
  41ca17:	imul   ebx,DWORD PTR [ebx],0xffffffb7
  41ca1a:	lods   eax,DWORD PTR ds:[esi]
  41ca1b:	aas    
  41ca1c:	xchg   ebp,eax
  41ca1d:	rcl    bl,1
  41ca1f:	pop    ds
  41ca20:	test   al,0xba
  41ca22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca23:	dec    eax
  41ca24:	mov    eax,DWORD PTR [ecx-0xdc654de]
  41ca2a:	stos   BYTE PTR es:[edi],al
  41ca2b:	loope  0x41c9c9
  41ca2d:	test   eax,0xe5230374
  41ca32:	(bad)  
  41ca33:	test   al,0x9f
  41ca35:	mov    edi,0xf39418d2
  41ca3a:	pushf  
  41ca3b:	adc    DWORD PTR [esi-0x1e],edx
  41ca3e:	iret   
  41ca3f:	dec    esi
  41ca41:	and    al,0x8
  41ca43:	repz test al,0xb2
  41ca46:	lahf   
  41ca47:	fadd   DWORD PTR [ebp+ebp*8-0x657cd6b2]
  41ca4e:	call   0x2da0:0x7a1aa941
  41ca55:	retf   0x3dfe
  41ca58:	mov    ecx,0x8161982b
  41ca5d:	lock inc esi
  41ca5f:	repz or BYTE PTR [eax-0x2b],bh
  41ca63:	hlt    
  41ca64:	push   es
  41ca65:	out    dx,al
  41ca66:	xor    bh,BYTE PTR [edx-0x22f5684d]
  41ca6c:	jl     0x41ca9f
  41ca6e:	jmp    0x97d62bf2
  41ca73:	add    al,0xee
  41ca75:	daa    
  41ca76:	adc    cl,BYTE PTR [ebx+0x38]
  41ca79:	and    DWORD PTR [edx+esi*8+0x2f4ecff5],0x26
  41ca81:	into   
  41ca82:	ret    
  41ca83:	pop    esp
  41ca84:	dec    edx
  41ca85:	cs lock pop esp
  41ca88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca89:	fist   DWORD PTR [edi-0x50]
  41ca8c:	adc    dl,ch
  41ca8e:	sub    eax,0x5d8059a8
  41ca93:	cmc    
  41ca94:	sti    
  41ca95:	mov    ecx,0xce91b1a2
  41ca9a:	cmp    al,0x7c
  41ca9c:	das    
  41ca9d:	dec    eax
  41ca9e:	iret   
  41ca9f:	(bad)  
  41caa0:	cmp    bh,BYTE PTR [ebx+0x710b4be2]
  41caa6:	std    
  41caa7:	shl    BYTE PTR [eax+0x5d935204],0x93
  41caae:	lds    esp,FWORD PTR [edi+ecx*1+0x5e]
  41cab2:	xchg   esi,eax
  41cab3:	or     BYTE PTR [eax+0x1eb55856],al
  41cab9:	repnz fistp WORD PTR [eax+0x7d3a921d]
  41cac0:	nop
  41cac1:	xor    al,0xa9
  41cac3:	mov    ah,0x52
  41cac5:	aas    
  41cac6:	das    
  41cac7:	loopne 0x41cb33
  41cac9:	jmp    0x41cb03
  41cacb:	fldlg2 
  41cacd:	sub    ecx,DWORD PTR [edi+0x42eb0c51]
  41cad3:	pop    ds
  41cad4:	and    DWORD PTR [ebp-0x6f],edi
  41cad7:	jmp    0xb660e794
  41cadc:	popf   
  41cadd:	mov    cl,0xd8
  41cadf:	shl    BYTE PTR [ebx],0xb
  41cae2:	mov    al,ds:0x3a0191a1
  41cae7:	push   0xffffffbf
  41cae9:	dec    edx
  41caea:	pushf  
  41caeb:	jae    0x41ca9c
  41caed:	adc    eax,0x4249264b
  41caf2:	mov    al,0x18
  41caf4:	(bad)  
  41caf5:	sub    DWORD PTR [esi],edi
  41caf7:	xor    al,0x4d
  41caf9:	imul   ebx,edi,0xffffffe1
  41cafc:	shl    BYTE PTR [esi],0x34
  41caff:	xrelease xchg DWORD PTR [eax],eax
  41cb02:	std    
  41cb03:	test   eax,0x3b2ddf5
  41cb08:	out    dx,eax
  41cb09:	sub    BYTE PTR [edx-0x29374cd8],dl
  41cb0f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41cb11:	jmp    0x6da1:0xc1f1341f
  41cb18:	jns    0x41cb61
  41cb1a:	sub    al,0x39
  41cb1c:	das    
  41cb1d:	push   edi
  41cb1e:	dec    edi
  41cb1f:	lods   al,BYTE PTR ds:[esi]
  41cb20:	fisttp WORD PTR [ebp-0x16]
  41cb23:	inc    esi
  41cb24:	jmp    0x41caec
  41cb26:	push   esi
  41cb27:	push   ss
  41cb28:	dec    esp
  41cb29:	xchg   esi,eax
  41cb2a:	test   BYTE PTR [edx],ch
  41cb2c:	jmp    0x3ba36c44
  41cb31:	mov    ds:0x1f122872,eax
  41cb36:	outs   dx,BYTE PTR ds:[esi]
  41cb37:	dec    ebp
  41cb38:	and    BYTE PTR [ebx+0x5122a0e6],0xac
  41cb3f:	and    DWORD PTR [edi],ecx
  41cb41:	jno    0x41cb82
  41cb43:	dec    eax
  41cb44:	jae    0x41cafb
  41cb46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb47:	ret    
  41cb48:	dec    edi
  41cb49:	sub    ecx,DWORD PTR [esp+esi*8]
  41cb4c:	fiadd  WORD PTR [ecx+ecx*2]
  41cb4f:	out    0xab,al
  41cb51:	mov    ebp,0x450e4b9b
  41cb56:	push   ebp
  41cb57:	das    
  41cb58:	sub    ch,al
  41cb5a:	rcr    dl,0xd0
  41cb5d:	shl    dl,0xa4
  41cb60:	stos   DWORD PTR es:[edi],eax
  41cb61:	and    DWORD PTR [eax+eiz*2+0x2366b4de],ebp
  41cb68:	jmp    0x41cb17
  41cb6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb6b:	jge    0x41cb23
  41cb6d:	ins    DWORD PTR es:[edi],dx
  41cb6e:	push   0xffffffa4
  41cb70:	xchg   edx,eax
  41cb71:	out    0xf6,al
  41cb73:	stos   DWORD PTR es:[edi],eax
  41cb74:	or     esp,DWORD PTR [ecx]
  41cb76:	or     DWORD PTR [ebx+0x4ff84dba],0x5b39634e
  41cb80:	or     DWORD PTR [edx+0x1b],ebx
  41cb83:	or     edi,DWORD PTR [edi]
  41cb85:	push   0xffffff92
  41cb87:	out    0xb6,al
  41cb89:	shl    BYTE PTR [eax],0x11
  41cb8c:	data16 out 0x0,al
  41cb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb90:	aad    0x2d
  41cb92:	cmp    DWORD PTR [esi],0x6c6db563
  41cb98:	xor    BYTE PTR [eax-0x27b4b8d6],ch
  41cb9e:	stos   BYTE PTR es:[edi],al
  41cb9f:	xchg   ecx,eax
  41cba0:	(bad)  
  41cba1:	mov    ecx,0x676eb1e3
  41cba6:	sbb    ebp,ebx
  41cba8:	mov    WORD PTR [eax+edx*2-0x39],?
  41cbac:	cs inc ebx
  41cbae:	(bad)  [eax]
  41cbb0:	mul    BYTE PTR [edi-0x22]
  41cbb3:	and    eax,0xf458f7ed
  41cbb8:	mov    DWORD PTR [ecx],ebp
  41cbba:	test   DWORD PTR [eax-0x7a],eax
  41cbbd:	lahf   
  41cbbe:	pop    ebx
  41cbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbc0:	jle    0x41cc0d
  41cbc2:	repz dec esi
  41cbc4:	jecxz  0x41cc35
  41cbc6:	jl     0x41cb66
  41cbc8:	lods   al,BYTE PTR ds:[esi]
  41cbc9:	sti    
  41cbca:	mov    bl,0x2
  41cbcc:	(bad)  
  41cbcd:	jmp    0x6ad8eccb
  41cbd2:	push   esi
  41cbd3:	cmp    al,0x7f
  41cbd5:	add    al,0x87
  41cbd7:	or     ebx,ebx
  41cbd9:	dec    ecx
  41cbda:	clc    
  41cbdb:	and    ch,bl
  41cbdd:	leave  
  41cbde:	(bad)  
  41cbdf:	ds sub ecx,ebx
  41cbe2:	je     0x41cc39
  41cbe4:	(bad)
  41cbe8:	mov    DWORD PTR [ebp+0x2b],ebp
  41cbeb:	scas   eax,DWORD PTR es:[edi]
  41cbec:	cmovae ecx,DWORD PTR ds:0x2cfad13c
  41cbf3:	sti    
  41cbf4:	cmc    
  41cbf5:	jo     0x41cc32
  41cbf7:	dec    edi
  41cbf8:	fwait
  41cbf9:	push   edx
  41cbfa:	and    cl,0x15
  41cbfd:	pushf  
  41cbfe:	mov    bh,0x3b
  41cc00:	sub    cl,ah
  41cc02:	ins    DWORD PTR es:[edi],dx
  41cc03:	sub    esp,DWORD PTR [eax+0x22]
  41cc06:	call   FWORD PTR [edx]
  41cc08:	stc    
  41cc09:	call   0x173:0x629372dd
  41cc10:	(bad)  
  41cc11:	jp     0x41cc76
  41cc13:	int    0x36
  41cc15:	mov    gs,WORD PTR [eax]
  41cc17:	jbe    0x41cbfd
  41cc19:	popf   
  41cc1a:	in     eax,0xef
  41cc1c:	push   edx
  41cc1d:	(bad)  
  41cc1f:	js     0x41cc28
  41cc21:	or     cl,BYTE PTR [edx-0x2e9367d]
  41cc27:	push   esp
  41cc28:	mov    ebx,0xcf6d87f5
  41cc2d:	push   esp
  41cc2e:	in     al,0x8e
  41cc30:	fbld   TBYTE PTR [eax-0x42dd5fe1]
  41cc36:	jmp    0x41cc65
  41cc38:	xchg   esp,eax
  41cc39:	pop    edx
  41cc3a:	inc    esi
  41cc3b:	mov    bl,0xc0
  41cc3d:	inc    edi
  41cc3e:	ror    BYTE PTR [edi],1
  41cc40:	fnstcw WORD PTR [eax+0x37b3adaf]
  41cc46:	cld    
  41cc47:	dec    edi
  41cc48:	xchg   ebx,eax
  41cc49:	mov    WORD PTR [ecx],ds
  41cc4b:	adc    eax,0xd407ebf1
  41cc50:	loope  0x41cbe2
  41cc52:	jo     0x41ccb5
  41cc54:	sub    esp,eax
  41cc56:	pop    ds
  41cc57:	aad    0xc9
  41cc59:	call   DWORD PTR [esi-0x57]
  41cc5c:	mov    eax,ds:0x6514444f
  41cc61:	sbb    DWORD PTR [edx],eax
  41cc63:	iret   
  41cc64:	repnz cmp ecx,ebp
  41cc67:	push   ecx
  41cc68:	add    DWORD PTR [edx+0xa4e2468],0xa672c42a
  41cc72:	mov    WORD PTR [ebp+0x5522a92c],es
  41cc78:	shl    DWORD PTR [edi-0xb],0x46
  41cc7c:	je     0x41cccf
  41cc7e:	mov    al,0xd1
  41cc80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc81:	test   bh,ch
  41cc83:	into   
  41cc84:	lods   al,BYTE PTR ds:[esi]
  41cc85:	xor    edx,ebx
  41cc87:	and    al,0x68
  41cc89:	push   edi
  41cc8a:	xchg   ecx,eax
  41cc8b:	nop
  41cc8c:	or     DWORD PTR [esi-0x66],ebp
  41cc8f:	fidiv  WORD PTR [edi]
  41cc91:	shufps xmm4,XMMWORD PTR [eax-0x4322c127],0x20
  41cc99:	test   BYTE PTR [edi+0x50],bl
  41cc9c:	into   
  41cc9d:	cmp    eax,0xd3b84bdc
  41cca2:	std    
  41cca3:	test   eax,0xe11bde7
  41cca8:	iret   
  41cca9:	sub    esp,DWORD PTR [edi]
  41ccab:	retf   0x5a38
  41ccae:	push   ecx
  41ccaf:	pop    ss
  41ccb0:	cmp    DWORD PTR [ecx-0x64],eax
  41ccb3:	or     DWORD PTR [ecx-0x80],edx
  41ccb6:	call   0x5e79:0x38331070
  41ccbd:	(bad)  
  41ccbf:	jnp    0x41ccd3
  41ccc1:	add    BYTE PTR [ecx],0x3b
  41ccc4:	mov    dl,0xb0
  41ccc6:	pusha  
  41ccc7:	inc    esp
  41ccc8:	scas   eax,DWORD PTR es:[edi]
  41ccc9:	pop    ecx
  41ccca:	xchg   esp,eax
  41cccb:	adc    DWORD PTR [ebp-0x6ac75761],edx
  41ccd1:	dec    eax
  41ccd2:	jmp    0x2613:0x4bf96390
  41ccd9:	inc    esi
  41ccda:	cmp    BYTE PTR [esi],ch
  41ccdc:	fcmovbe st,st(0)
  41ccde:	jge    0x41cd4b
  41cce0:	sti    
  41cce1:	inc    esi
  41cce2:	mov    ds:0xc46327e7,al
  41cce7:	jbe    0x41cd59
  41cce9:	ror    BYTE PTR [ecx+0x45e65339],cl
  41ccef:	mov    esi,DWORD PTR [edi]
  41ccf1:	jg     0x41cd1e
  41ccf3:	cli    
  41ccf4:	imul   eax,DWORD PTR [eax],0xd40221c8
  41ccfa:	xor    ch,dh
  41ccfc:	mov    esi,0x612fb0fb
  41cd01:	pop    eax
  41cd02:	xor    eax,0xebbc7c76
  41cd07:	mov    esi,0xa5ed4f9
  41cd0c:	xchg   edi,eax
  41cd0d:	or     BYTE PTR [esi-0x6e],ch
  41cd10:	adc    dl,BYTE PTR [eax+0x2a]
  41cd13:	add    al,0x13
  41cd15:	inc    esi
  41cd16:	adc    ch,BYTE PTR [ecx]
  41cd18:	sbb    al,0x59
  41cd1a:	shl    DWORD PTR [edx-0x25211c89],1
  41cd20:	outs   dx,DWORD PTR ds:[esi]
  41cd21:	adc    DWORD PTR [edi-0x5f05c4f9],eax
  41cd27:	xchg   esi,eax
  41cd28:	sahf   
  41cd29:	js     0x41cd98
  41cd2b:	pusha  
  41cd2c:	out    dx,eax
  41cd2d:	out    0x93,al
  41cd2f:	loopne 0x41cd97
  41cd31:	sar    DWORD PTR [eax],0x28
  41cd34:	mov    bh,0xd7
  41cd36:	inc    esp
  41cd37:	lods   al,BYTE PTR ds:[esi]
  41cd38:	loope  0x41cd3d
  41cd3a:	mov    dl,0x3
  41cd3c:	pop    ss
  41cd3d:	aad    0xbc
  41cd3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd40:	mov    ds:0x4bf4e9c0,eax
  41cd45:	cld    
  41cd46:	sbb    dl,bh
  41cd48:	mov    ax,0x3afa
  41cd4c:	pop    ebp
  41cd4d:	push   0x280cbaf6
  41cd52:	xor    DWORD PTR [ebx-0x7b4b5e27],ebx
  41cd58:	popf   
  41cd59:	data16 outs dx,BYTE PTR ds:[esi]
  41cd5b:	push   0x323c98b5
  41cd60:	push   edx
  41cd61:	(bad)  
  41cd62:	xchg   esi,eax
  41cd63:	sub    DWORD PTR [edx],ebp
  41cd65:	mov    edi,0xffce836c
  41cd6a:	push   ebx
  41cd6b:	and    al,0xb7
  41cd6d:	or     BYTE PTR [ecx+0x40],0x2
  41cd71:	and    DWORD PTR [eax+0x15a47f0e],esi
  41cd77:	mov    al,0x6
  41cd79:	shl    DWORD PTR [ebx+esi*2+0x60],0x51
  41cd7e:	stc    
  41cd7f:	mov    dl,0x9e
  41cd81:	or     bh,ah
  41cd83:	adc    ecx,DWORD PTR [edx+0x73]
  41cd86:	xchg   dh,dl
  41cd88:	and    ah,BYTE PTR ds:0x9d3b0a2d
  41cd8e:	mov    cl,0x57
  41cd90:	or     eax,0xb738fb22
  41cd95:	pusha  
  41cd96:	aam    0xe1
  41cd98:	xchg   dl,cl
  41cd9a:	adc    eax,0xcbfcea9b
  41cd9f:	xchg   ah,dh
  41cda1:	jecxz  0x41cdd3
  41cda3:	iret   
  41cda4:	inc    ecx
  41cda5:	hlt    
  41cda6:	and    al,BYTE PTR [ecx]
  41cda8:	sbb    esi,DWORD PTR [ecx-0x4c]
  41cdab:	mov    ebx,0x21f193bb
  41cdb0:	mov    ecx,DWORD PTR [eax+eax*2+0x6903fd43]
  41cdb7:	pop    ss
  41cdb8:	jo     0x41cd87
  41cdba:	ret    
  41cdbb:	inc    edi
  41cdbc:	jmp    0x24486012
  41cdc1:	dec    eax
  41cdc2:	cdq    
  41cdc3:	xlat   BYTE PTR ds:[ebx]
  41cdc4:	fistp  WORD PTR [ecx+0x1a]
  41cdc7:	pop    eax
  41cdc8:	in     al,dx
  41cdc9:	mov    dl,0x7
  41cdcb:	(bad)  
  41cdcc:	retf   0xcd6f
  41cdcf:	mov    ds:0x628f3aac,al
  41cdd4:	js     0x41ce48
  41cdd6:	jle    0x41cded
  41cdd8:	xor    BYTE PTR [esi-0x53],0x95
  41cddc:	jp     0x41cda2
  41cdde:	pop    esi
  41cddf:	cld    
  41cde0:	(bad)  
  41cde2:	enter  0x67e4,0x84
  41cde6:	call   0x50ff:0xe799af7e
  41cded:	adc    ebx,DWORD PTR [edi*8-0x56ba4ad4]
  41cdf4:	outs   dx,BYTE PTR ds:[esi]
  41cdf5:	push   ebx
  41cdf6:	jae    0x41cd79
  41cdf8:	call   0xfa1:0xf16ec877
  41cdff:	sbb    eax,0xae1cc743
  41ce04:	dec    eax
  41ce05:	scas   al,BYTE PTR es:[edi]
  41ce06:	jmp    0x7fbcd27a
  41ce0b:	jecxz  0x41ce3e
  41ce0d:	(bad)  
  41ce0e:	mov    ecx,0xa0fe524d
  41ce13:	sbb    eax,0x589c11a9
  41ce18:	inc    eax
  41ce19:	test   bl,bh
  41ce1b:	ins    DWORD PTR es:[edi],dx
  41ce1c:	in     eax,dx
  41ce1d:	adc    dl,0xfb
  41ce20:	mov    ch,0x19
  41ce22:	dec    ebp
  41ce23:	xchg   ebp,eax
  41ce24:	retf   0xfce3
  41ce27:	add    DWORD PTR es:[edx],esp
  41ce2a:	or     ebx,ebx
  41ce2c:	pop    ebx
  41ce2d:	mov    BYTE PTR [edx],bh
  41ce2f:	sbb    ecx,DWORD PTR [edi+0xbb51c85]
  41ce35:	popf   
  41ce36:	adc    al,0x38
  41ce38:	aad    0x28
  41ce3a:	adc    BYTE PTR [ecx+0x2a],ch
  41ce3d:	pop    esp
  41ce3e:	ja     0x41cdfe
  41ce40:	daa    
  41ce41:	es or  dh,0x4c
  41ce45:	popa   
  41ce46:	mov    eax,0x5ab31653
  41ce4b:	loop   0x41ce27
  41ce4d:	lods   al,BYTE PTR ds:[esi]
  41ce4e:	or     al,0x7b
  41ce50:	or     ah,BYTE PTR [ebx-0x380b8009]
  41ce56:	or     BYTE PTR [ecx+ecx*1+0x41aff563],ch
  41ce5d:	push   esi
  41ce5e:	xchg   esi,ebp
  41ce60:	(bad)  
  41ce61:	ins    DWORD PTR es:[edi],dx
  41ce62:	dec    eax
  41ce63:	inc    esp
  41ce64:	or     BYTE PTR [ecx+0x15],dh
  41ce67:	push   eax
  41ce68:	cmp    bh,BYTE PTR [edi]
  41ce6a:	mov    al,0x44
  41ce6c:	mov    dh,0x1e
  41ce6e:	mov    dl,0xc6
  41ce70:	in     al,dx
  41ce71:	push   ecx
  41ce72:	ins    DWORD PTR es:[edi],dx
  41ce73:	ss repnz mov bl,ah
  41ce77:	lods   eax,DWORD PTR ds:[esi]
  41ce78:	retf   
  41ce79:	push   esi
  41ce7a:	jle    0x41ce4a
  41ce7c:	fadd   QWORD PTR [ebp-0xb]
  41ce7f:	add    DWORD PTR [edi],eax
  41ce81:	lock aam 0x1c
  41ce84:	lods   eax,DWORD PTR ds:[esi]
  41ce85:	inc    esi
  41ce86:	ficomp DWORD PTR [edx-0xb]
  41ce89:	mov    cl,0x9d
  41ce8b:	and    ch,BYTE PTR [edi+0x6ff6811f]
  41ce91:	add    ah,BYTE PTR [esi-0x369b0a09]
  41ce97:	cwde   
  41ce98:	call   0x2ff9:0xe2be4b19
  41ce9f:	loope  0x41ceeb
  41cea1:	push   eax
  41cea2:	push   ebp
  41cea3:	aad    0x3f
  41cea5:	cmc    
  41cea6:	retf   0x5373
  41cea9:	pushf  
  41ceaa:	push   ebp
  41ceab:	sbb    dh,BYTE PTR [ebp+0x52cb5fa5]
  41ceb1:	in     eax,dx
  41ceb2:	je     0x41cf0b
  41ceb4:	stos   DWORD PTR es:[edi],eax
  41ceb5:	dec    ebx
  41ceb6:	push   edx
  41ceb7:	push   cs
  41ceb8:	or     BYTE PTR [ebx+0x6e76e682],cl
  41cebe:	ret    
  41cebf:	dec    BYTE PTR [edx+0x48]
  41cec2:	xlat   BYTE PTR ds:[ebx]
  41cec3:	dec    ebp
  41cec4:	jno    0x41ceb1
  41cec6:	dec    edx
  41cec7:	mov    edx,0xe3c892aa
  41cecc:	cdq    
  41cecd:	cmp    esp,DWORD PTR [eax-0x279c7246]
  41ced3:	out    dx,al
  41ced4:	or     DWORD PTR [edx+0xf],0x91e252c2
  41cedb:	retf   
  41cedc:	(bad)  
  41cedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cede:	inc    edx
  41cedf:	add    eax,0xed38af75
  41cee4:	fwait
  41cee5:	mov    eax,0x24cbcac8
  41ceea:	ja     0x41cf52
  41ceec:	cmp    DWORD PTR [edx-0x3d],ebp
  41ceef:	js     0x41cf0c
  41cef1:	mov    ch,0x75
  41cef3:	int    0xa8
  41cef5:	pushf  
  41cef6:	outs   dx,BYTE PTR ds:[esi]
  41cef7:	jb     0x41cec7
  41cef9:	test   edi,esi
  41cefb:	test   eax,0x2301e166
  41cf00:	jl     0x41ceae
  41cf02:	hlt    
  41cf03:	ret    
  41cf04:	ror    bh,1
  41cf06:	sbb    BYTE PTR [ebx-0x5e0851c6],ah
  41cf0c:	add    dh,BYTE PTR [ebx-0x43]
  41cf0f:	(bad)  
  41cf11:	pop    ebx
  41cf12:	adc    al,0xa8
  41cf14:	xchg   esp,eax
  41cf15:	push   0xffffffe3
  41cf17:	retf   
  41cf18:	pop    eax
  41cf19:	pusha  
  41cf1a:	adc    eax,0xb2442018
  41cf1f:	xor    BYTE PTR [edi+0x17],cl
  41cf22:	push   ebp
  41cf23:	ja     0x41cecb
  41cf25:	push   edx
  41cf26:	add    DWORD PTR [esi+edx*8-0x3ca7297a],esp
  41cf2d:	sahf   
  41cf2e:	mov    BYTE PTR [ecx-0x7b37f553],cl
  41cf34:	js     0x41ceee
  41cf36:	mov    cl,0xed
  41cf38:	push   esp
  41cf39:	lods   eax,DWORD PTR ds:[esi]
  41cf3a:	sti    
  41cf3b:	cmp    ebp,ecx
  41cf3d:	adc    BYTE PTR [eax],ch
  41cf3f:	pop    eax
  41cf40:	lea    ebp,[ecx]
  41cf42:	(bad)
  41cf46:	je     0x41cf39
  41cf48:	sub    DWORD PTR [eax+0x3f],esi
  41cf4b:	fidiv  WORD PTR [ecx+0x4b]
  41cf4e:	pop    es
  41cf4f:	xchg   esp,eax
  41cf50:	push   ebx
  41cf51:	ins    BYTE PTR es:[edi],dx
  41cf52:	scas   eax,DWORD PTR es:[edi]
  41cf53:	adc    bl,BYTE PTR [edi-0x31979cc5]
  41cf59:	jge    0x41cef3
  41cf5b:	dec    ebx
  41cf5c:	lea    edi,[eax+0x50]
  41cf5f:	cmc    
  41cf60:	or     BYTE PTR [ebx+0x64],0x8b
  41cf64:	mov    al,ds:0x4e3ef7f3
  41cf69:	and    al,0x54
  41cf6b:	test   DWORD PTR [ecx],0x1f24dd47
  41cf71:	mov    eax,ds:0xd0f259b5
  41cf76:	fs mov dh,0xab
  41cf79:	jecxz  0x41cefd
  41cf7b:	shl    ah,cl
  41cf7d:	imul   esi,DWORD PTR [esi-0x73],0x32
  41cf81:	pop    esp
  41cf82:	sbb    edx,DWORD PTR [eax+ebx*4]
  41cf85:	std    
  41cf86:	push   edi
  41cf87:	aad    0x1
  41cf89:	sbb    al,0xed
  41cf8b:	dec    ebp
  41cf8c:	fcomp  st(2)
  41cf8e:	adc    BYTE PTR ds:0xd7bb0a11,bl
  41cf95:	pop    ebx
  41cf96:	out    0x4b,eax
  41cf98:	out    dx,eax
  41cf99:	sbb    esp,DWORD PTR [ecx+0x4e037a48]
  41cf9f:	popf   
  41cfa0:	ins    BYTE PTR es:[edi],dx
  41cfa1:	or     ebp,esp
  41cfa3:	cmp    eax,0xad8f4638
  41cfa8:	sahf   
  41cfa9:	repnz cmp edx,DWORD PTR [edi+0x6e]
  41cfad:	pop    ecx
  41cfae:	mov    eax,0xd20aa453
  41cfb3:	aam    0x4c
  41cfb5:	inc    esi
  41cfb6:	push   cs
  41cfb7:	or     al,0x21
  41cfb9:	jle    0x41cfe7
  41cfbb:	cli    
  41cfbc:	adc    DWORD PTR [edi],0x6f
  41cfbf:	mov    edx,0xdafa7721
  41cfc4:	pop    ss
  41cfc5:	xchg   esp,eax
  41cfc6:	ficomp DWORD PTR [esi]
  41cfc8:	call   0xfc2fb252
  41cfcd:	add    BYTE PTR [edi+0xf4efe9],al
  41cfd3:	push   esp
  41cfd4:	push   edx
  41cfd5:	dec    esp
  41cfd6:	cmc    
  41cfd7:	pop    ebx
  41cfd8:	mov    al,0xc2
  41cfda:	int    0x94
  41cfdc:	ins    BYTE PTR es:[edi],dx
  41cfdd:	enter  0xadd0,0x38
  41cfe1:	pusha  
  41cfe2:	jne    0x41cfec
  41cfe4:	rol    BYTE PTR [ecx+0x1a258154],cl
  41cfea:	adc    eax,0xd8767647
  41cfef:	push   ss
  41cff0:	call   0xb462:0xd01352e1
  41cff7:	scas   eax,DWORD PTR es:[edi]
  41cff8:	gs out dx,al
  41cffa:	popf   
  41cffb:	push   edi
  41cffc:	lods   eax,DWORD PTR ds:[esi]
  41cffd:	je     0x41cfbc
  41cfff:	cmp    DWORD PTR [esi],edx
  41d001:	mov    edi,0x4ea8f39
  41d006:	aas    
  41d007:	aaa    
  41d008:	mov    ebp,0xc7bbd570
  41d00d:	jne    0x41cfaf
  41d00f:	aad    0x4c
  41d011:	xchg   ecx,eax
  41d012:	str    WORD PTR [ebx]
  41d015:	push   eax
  41d016:	lds    ebx,FWORD PTR [esi]
  41d018:	xchg   esp,eax
  41d019:	sbb    eax,0x408c01e7
  41d01e:	dec    ebp
  41d01f:	das    
  41d020:	popa   
  41d021:	inc    esi
  41d022:	pop    ss
  41d023:	xor    al,0x64
  41d025:	div    BYTE PTR [edi]
  41d027:	or     eax,DWORD PTR [ebx]
  41d029:	add    edx,DWORD PTR [edx+0x203beebd]
  41d02f:	sub    BYTE PTR [eax+0x1e98829d],ah
  41d035:	push   esi
  41d036:	lahf   
  41d037:	sbb    eax,0x82548f7c
  41d03c:	or     bh,BYTE PTR [esi-0x20]
  41d03f:	ja     0x41cfe7
  41d041:	(bad)  
  41d042:	jne    0x41d028
  41d044:	bound  edx,QWORD PTR [ecx-0x6c]
  41d047:	inc    ebp
  41d048:	xchg   edx,eax
  41d049:	sahf   
  41d04a:	call   0x250b:0x8baac2d0
  41d051:	ins    DWORD PTR es:[edi],dx
  41d052:	mov    dl,0x19
  41d054:	mov    esp,0x45bdb6f3
  41d059:	cmp    DWORD PTR [ebp-0x1a35af65],esi
  41d05f:	xchg   edx,eax
  41d060:	js     0x41d006
  41d062:	xchg   DWORD PTR [edi+0x1fc6bfae],ecx
  41d068:	or     BYTE PTR [eax+eax*8],0x43
  41d06c:	mov    cl,0xca
  41d06e:	inc    eax
  41d06f:	in     al,dx
  41d070:	fisttp DWORD PTR [ebx-0x273212f6]
  41d076:	jns    0x41d073
  41d078:	pop    edx
  41d079:	mov    edx,0x46e7d796
  41d07e:	sar    bh,cl
  41d080:	imul   esi,edx,0xffffffb6
  41d083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d084:	add    eax,DWORD PTR [edi+ebx*8]
  41d087:	ins    BYTE PTR es:[edi],dx
  41d088:	mov    esp,0x58a2c48b
  41d08d:	add    al,BYTE PTR [edi+0x77]
  41d090:	in     al,0x31
  41d092:	pop    ss
  41d093:	sbb    ebx,0x2766e9a
  41d099:	xor    al,0xfb
  41d09b:	inc    dx
  41d09d:	leave  
  41d09e:	dec    esi
  41d09f:	add    edx,ebx
  41d0a1:	adc    DWORD PTR [ebx-0x4],ebx
  41d0a4:	and    DWORD PTR [esi+0x3b],ebp
  41d0a7:	pop    esp
  41d0a8:	call   0x11ea3f66
  41d0ad:	xchg   edi,eax
  41d0ae:	scas   al,BYTE PTR es:[edi]
  41d0af:	mov    al,ds:0x88955976
  41d0b4:	xor    eax,0x6501bd95
  41d0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0ba:	es cmp eax,0xc4c09a5c
  41d0c0:	mov    ecx,0x5b516977
  41d0c5:	std    
  41d0c6:	or     BYTE PTR [ebx-0x41],dh
  41d0c9:	fmul   st,st(4)
  41d0cb:	or     DWORD PTR [esi+eax*2+0x5ddfa28e],0x33
  41d0d3:	daa    
  41d0d4:	xor    esp,ebp
  41d0d6:	jo     0x41d0eb
  41d0d8:	in     al,0x68
  41d0da:	add    edi,DWORD PTR [ebp-0x6b6755a]
  41d0e0:	stos   DWORD PTR es:[edi],eax
  41d0e1:	cdq    
  41d0e2:	mov    fs,WORD PTR [ebx-0x58]
  41d0e5:	sbb    bh,BYTE PTR [ebp+edi*8-0x15]
  41d0e9:	mov    ch,0x36
  41d0eb:	loopne 0x41d11c
  41d0ed:	(bad)  
  41d0ee:	jnp    0x41d116
  41d0f0:	xchg   BYTE PTR [edi-0x3d],ah
  41d0f3:	rcl    BYTE PTR [eax],cl
  41d0f5:	cmp    eax,0x19f48903
  41d0fa:	(bad)  
  41d0fb:	push   DWORD PTR [ebx+0x67290feb]
  41d101:	jg     0x41d099
  41d103:	inc    ebx
  41d104:	xchg   DWORD PTR [ebx+0x4b521eda],eax
  41d10a:	jmp    0x117e:0xb5156a96
  41d111:	add    eax,0x665c719e
  41d116:	jnp    0x41d0b0
  41d118:	dec    BYTE PTR [ebp-0xf]
  41d11b:	mov    esi,0xebb401ed
  41d120:	xor    DWORD PTR [edi],0x60c2e7c7
  41d126:	ret    
  41d127:	(bad)  
  41d129:	inc    ecx
  41d12a:	add    eax,0x13be1df4
  41d12f:	leave  
  41d130:	dec    edx
  41d131:	aaa    
  41d132:	jb     0x41d156
  41d134:	mov    bh,0x5e
  41d136:	inc    ecx
  41d137:	jne    0x41d107
  41d139:	shl    BYTE PTR [eax+edx*4-0x1cfc43b6],0x6f
  41d141:	retf   0x6ad8
  41d144:	push   eax
  41d145:	lods   eax,DWORD PTR ds:[esi]
  41d146:	retf   
  41d147:	push   edi
  41d148:	sbb    cl,bh
  41d14a:	mov    bl,0xcf
  41d14c:	pop    ss
  41d14d:	add    BYTE PTR [edi+0x6c],dh
  41d150:	dec    edi
  41d151:	xchg   BYTE PTR [edi],cl
  41d153:	ja     0x41d1ce
  41d155:	nop
  41d156:	aad    0x8b
  41d158:	push   0xd8142f0b
  41d15d:	hlt    
  41d15e:	mov    ecx,0x67f70fe8
  41d163:	or     esi,DWORD PTR [ecx-0x65b3e8c1]
  41d169:	inc    ecx
  41d16a:	daa    
  41d16b:	popa   
  41d16c:	sub    BYTE PTR [ebx+eax*2-0x47],ch
  41d170:	stos   DWORD PTR es:[edi],eax
  41d171:	inc    ecx
  41d172:	ins    BYTE PTR es:[edi],dx
  41d173:	imul   ebx,DWORD PTR [esi-0x20],0x8eeac54f
  41d17a:	cwde   
  41d17b:	mov    cl,0x3d
  41d17d:	imul   esp,DWORD PTR [esi-0x5e],0x3
  41d181:	shl    DWORD PTR [ecx+0x4f4fe997],1
  41d187:	stc    
  41d188:	int    0xe7
  41d18a:	stc    
  41d18b:	retf   
  41d18c:	(bad)  
  41d18d:	sub    DWORD PTR [ecx],esi
  41d18f:	cmp    BYTE PTR [edi-0x13],dl
  41d192:	lock add BYTE PTR [ebx],cl
  41d195:	ror    BYTE PTR [ebx-0x74],cl
  41d198:	pop    ecx
  41d199:	ds push ds
  41d19b:	pop    ebp
  41d19c:	fisttp DWORD PTR [edx-0x10]
  41d19f:	fst    QWORD PTR [edx-0x7b]
  41d1a2:	pop    eax
  41d1a3:	js     0x41d1a4
  41d1a5:	sub    ebx,DWORD PTR [eax-0x6fca5728]
  41d1ab:	ficom  DWORD PTR [ebp+0x3e]
  41d1ae:	aaa    
  41d1af:	mov    esi,0x10a13fea
  41d1b4:	popa   
  41d1b5:	ins    BYTE PTR es:[edi],dx
  41d1b6:	sbb    al,BYTE PTR [edx]
  41d1b8:	and    eax,0x662d877d
  41d1bd:	loopne 0x41d1df
  41d1bf:	retf   
  41d1c0:	fwait
  41d1c1:	in     eax,dx
  41d1c2:	ret    
  41d1c3:	sbb    BYTE PTR [ebp-0x43],al
  41d1c6:	loope  0x41d241
  41d1c8:	iret   
  41d1c9:	jne    0x41d220
  41d1cb:	mov    ch,0xc0
  41d1cd:	sub    eax,0x58704840
  41d1d2:	hlt    
  41d1d3:	mov    fs,WORD PTR [ecx-0x4d]
  41d1d6:	pop    esp
  41d1d7:	xchg   ecx,eax
  41d1d8:	loopne 0x41d237
  41d1da:	jmp    0x41d17b
  41d1dc:	xchg   DWORD PTR [ebp+0x1a],ecx
  41d1df:	fstp   DWORD PTR [esi+0xc]
  41d1e2:	sbb    DWORD PTR [eax+eiz*8],ecx
  41d1e5:	add    edx,DWORD PTR [ebx]
  41d1e7:	ret    0x4c8
  41d1ea:	inc    esi
  41d1eb:	and    dl,BYTE PTR [eax+0x43]
  41d1ee:	sbb    edi,ebx
  41d1f0:	and    BYTE PTR [edi-0x58219011],bl
  41d1f6:	das    
  41d1f7:	jb     0x41d1de
  41d1f9:	mov    dl,0x97
  41d1fb:	arpl   WORD PTR [edx+0x41],cx
  41d1fe:	fsub   DWORD PTR [esi-0x3b]
  41d201:	mov    dl,bl
  41d203:	arpl   WORD PTR [ecx-0x2b],dx
  41d206:	and    DWORD PTR [eax],0x977fbeed
  41d20c:	dec    ebx
  41d20d:	push   edx
  41d20e:	xchg   ecx,eax
  41d20f:	mov    ch,0x46
  41d211:	mov    ss:0xc53e1b6c,al
  41d217:	and    ebp,DWORD PTR [edi]
  41d219:	cmp    DWORD PTR ds:0xd4639700,esi
  41d21f:	stc    
  41d220:	sar    BYTE PTR [esp+esi*1],1
  41d223:	aam    0x45
  41d225:	cmp    BYTE PTR [eax-0x6],dh
  41d228:	hlt    
  41d229:	nop
  41d22a:	xor    al,0x30
  41d22c:	pop    ss
  41d22d:	addr16 daa 
  41d22f:	inc    edx
  41d230:	xor    BYTE PTR [esp+esi*8+0x219a1a48],cl
  41d237:	mov    es,edi
  41d239:	push   ebx
  41d23a:	cmp    eax,0x108db64e
  41d23f:	inc    ebp
  41d240:	jmp    0x92e9:0xc2e6e124
  41d247:	mov    ebx,0xe0f96d2e
  41d24c:	mov    edx,0xc598c848
  41d251:	repz sub BYTE PTR [ebp+0x2d694e56],cl
  41d258:	cmp    edi,DWORD PTR [edi+0x4a79aa8d]
  41d25e:	les    esp,FWORD PTR [ebp-0x3d674645]
  41d264:	inc    edi
  41d265:	call   0xca05a29d
  41d26a:	(bad)  
  41d26b:	repnz sub ch,0xac
  41d26f:	mov    DWORD PTR [esi+0x41e7fb7b],eax
  41d275:	rcl    BYTE PTR [esp+esi*4+0x42965865],1
  41d27c:	mov    cl,0x41
  41d27e:	sbb    dl,BYTE PTR [esi+0x643f0137]
  41d284:	sbb    eax,0xffffffee
  41d287:	jmp    0x41d23c
  41d289:	repnz mov ah,0x7f
  41d28c:	fsubr  DWORD PTR [edi-0x246ddff8]
  41d292:	add    al,0x7d
  41d294:	xor    al,0xeb
  41d296:	mov    cs,WORD PTR [ebx]
  41d298:	jg     0x41d2bd
  41d29a:	pop    ds
  41d29b:	das    
  41d29c:	jp     0x41d2e4
  41d29e:	rol    DWORD PTR [edi+ebx*1-0x1e],1
  41d2a2:	ret    0x42d9
  41d2a5:	stos   BYTE PTR es:[edi],al
  41d2a6:	out    dx,al
  41d2a7:	daa    
  41d2a8:	adc    al,BYTE PTR [esi]
  41d2aa:	sbb    BYTE PTR [eax+eiz*4-0x64],dh
  41d2ae:	loope  0x41d2bd
  41d2b0:	mov    al,ds:0xaec835bd
  41d2b5:	pop    eax
  41d2b6:	xchg   ebx,eax
  41d2b7:	mov    bl,0x9d
  41d2b9:	xchg   esp,eax
  41d2ba:	push   esi
  41d2bb:	sub    al,0x28
  41d2bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2be:	pop    ss
  41d2bf:	push   ebp
  41d2c0:	mov    DWORD PTR [edx],edi
  41d2c2:	sub    BYTE PTR [ecx-0x30],al
  41d2c5:	int    0xba
  41d2c7:	or     ebp,DWORD PTR [esi]
  41d2c9:	test   BYTE PTR [ebp+ebp*1+0x9],dh
  41d2cd:	mov    esi,DWORD PTR ds:0x9668b22e
  41d2d3:	adc    DWORD PTR [edi+0x220b642a],0xb6e0a9d4
  41d2dd:	outs   dx,DWORD PTR ds:[esi]
  41d2de:	push   eax
  41d2df:	cmp    al,0x59
  41d2e1:	sbb    eax,0x76ec2680
  41d2e6:	xchg   esi,ecx
  41d2e8:	fsubr  DWORD PTR [edx]
  41d2ea:	push   edx
  41d2eb:	sub    ebx,eax
  41d2ed:	out    dx,eax
  41d2ee:	nop
  41d2ef:	cmp    ch,BYTE PTR [ecx-0x3a451537]
  41d2f5:	fist   WORD PTR [edi+ebp*8-0x4100f65f]
  41d2fc:	add    al,0x62
  41d2fe:	mov    WORD PTR [ebp-0x2bd1e0d6],gs
  41d304:	dec    esi
  41d305:	xchg   ebx,esp
  41d307:	push   ebp
  41d308:	stos   DWORD PTR es:[edi],eax
  41d309:	mov    bh,0xfd
  41d30b:	sbb    ebx,DWORD PTR [esi-0x55a875b4]
  41d311:	retf   0xda8f
  41d314:	das    
  41d315:	imul   edi,eax,0xffffffe4
  41d318:	inc    edi
  41d319:	xor    ebx,DWORD PTR [eax]
  41d31b:	xchg   ebx,eax
  41d31c:	clc    
  41d31d:	jge    0x41d2e3
  41d31f:	inc    esp
  41d320:	inc    ecx
  41d321:	shl    BYTE PTR [edi+ebp*4-0x43],1
  41d325:	mov    ebp,0x63cbf84e
  41d32a:	mov    esp,0x474d44eb
  41d32f:	dec    ebp
  41d330:	xchg   ebp,esp
  41d332:	push   esi
  41d333:	inc    edi
  41d334:	adc    edx,DWORD PTR [ecx+edi*1-0x7]
  41d338:	out    0x4d,al
  41d33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d33b:	(bad)  
  41d33c:	stos   BYTE PTR es:[edi],al
  41d33d:	add    eax,0x97d61db0
  41d342:	push   edx
  41d343:	test   esi,eax
  41d345:	sub    ah,BYTE PTR [esi+0x6f]
  41d348:	sub    BYTE PTR [edx],0xdf
  41d34b:	clc    
  41d34c:	add    BYTE PTR [esi],dl
  41d34e:	xor    cl,BYTE PTR [eax]
  41d350:	xlat   BYTE PTR ds:[ebx]
  41d351:	push   edi
  41d352:	loop   0x41d318
  41d354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d355:	jmp    0xdd41f79f
  41d35a:	xor    ch,BYTE PTR [edx]
  41d35c:	imul   esi,eax,0xd58c8385
  41d362:	mov    DWORD PTR [ebx+0x76],esp
  41d365:	pop    ds
  41d366:	sahf   
  41d367:	(bad)  
  41d368:	leave  
  41d369:	bnd data16 jge 0x41d2f1
  41d36d:	push   ss
  41d36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d36f:	jge    0x41d3e6
  41d371:	test   dh,dl
  41d373:	addr16 in eax,0x9e
  41d376:	push   cs
  41d377:	mov    cl,0xa2
  41d379:	cmp    BYTE PTR [eax],ah
  41d37b:	cmp    al,0xc9
  41d37d:	repz int 0xc5
  41d380:	ins    DWORD PTR es:[edi],dx
  41d381:	mov    dh,0xb0
  41d383:	adc    BYTE PTR ds:0x5bd5ce33,bh
  41d389:	jae    0x41d347
  41d38b:	xchg   esi,eax
  41d38c:	stos   BYTE PTR es:[edi],al
  41d38d:	sbb    edx,DWORD PTR [ecx-0x56879136]
  41d393:	inc    edx
  41d394:	or     BYTE PTR [edi+0x7],dh
  41d397:	(bad)  
  41d398:	adc    ch,BYTE PTR [eax]
  41d39a:	xor    al,0x16
  41d39c:	test   BYTE PTR [ebp-0x2f2283d3],0xca
  41d3a3:	push   cs
  41d3a4:	rcr    DWORD PTR [edi+0x78],0x84
  41d3a8:	push   ss
  41d3a9:	cmc    
  41d3aa:	fs sbb eax,edx
  41d3ad:	pop    eax
  41d3ae:	outs   dx,BYTE PTR ds:[esi]
  41d3af:	jecxz  0x41d412
  41d3b1:	add    bh,BYTE PTR [edi-0x53671deb]
  41d3b7:	push   edx
  41d3b8:	push   ss
  41d3b9:	cmp    esi,ebx
  41d3bb:	adc    edx,0x38a8f448
  41d3c1:	jbe    0x41d3ec
  41d3c3:	inc    edi
  41d3c4:	jle    0x41d39f
  41d3c6:	or     BYTE PTR [edx],dh
  41d3c8:	xchg   ecx,eax
  41d3c9:	shl    edi,0x88
  41d3cc:	repnz push cs
  41d3ce:	in     al,0xac
  41d3d0:	mov    ah,0xf6
  41d3d2:	test   al,0x7c
  41d3d4:	into   
  41d3d5:	xchg   edx,eax
  41d3d6:	mov    al,0xf5
  41d3d8:	lods   al,BYTE PTR ds:[esi]
  41d3d9:	jge    0x41d367
  41d3db:	out    0x59,eax
  41d3dd:	(bad)  
  41d3de:	jne    0x41d448
  41d3e0:	ret    
  41d3e1:	add    al,BYTE PTR [eax+edx*8+0xc]
  41d3e5:	xchg   ebp,eax
  41d3e6:	pop    edx
  41d3e7:	pop    esi
  41d3e8:	aas    
  41d3e9:	push   ds
  41d3ea:	xchg   edx,eax
  41d3eb:	lock leave 
  41d3ed:	stos   BYTE PTR es:[edi],al
  41d3ee:	dec    esp
  41d3ef:	mov    ss,WORD PTR [ebx-0x3]
  41d3f2:	inc    BYTE PTR [ebx-0x5f]
  41d3f5:	mov    al,ds:0x71de1f60
  41d3fa:	adc    ch,BYTE PTR [eax]
  41d3fc:	(bad)  
  41d3fd:	call   eax
  41d3ff:	sar    DWORD PTR [ebx+0x2a7a78d6],cl
  41d405:	adc    bl,BYTE PTR [esp+esi*4]
  41d408:	cmc    
  41d409:	sub    ecx,edx
  41d40b:	repz in eax,dx
  41d40d:	call   0xac091683
  41d412:	test   al,0x7b
  41d414:	cli    
  41d415:	stos   DWORD PTR es:[edi],eax
  41d416:	aaa    
  41d417:	xchg   edx,eax
  41d418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d419:	ror    BYTE PTR [ebx-0x7e38b9c4],0x4
  41d420:	push   0x86cf70f9
  41d425:	jb     0x41d460
  41d427:	sar    BYTE PTR [eax-0x7b9c6fbe],0xad
  41d42e:	dec    eax
  41d42f:	sahf   
  41d430:	fwait
  41d431:	xlat   BYTE PTR ds:[ebx]
  41d432:	jb     0x41d424
  41d434:	das    
  41d435:	add    BYTE PTR [ecx-0x3cd11ec4],ah
  41d43b:	in     eax,dx
  41d43c:	jg     0x41d41c
  41d43e:	(bad)  
  41d43f:	push   ebp
  41d440:	cmp    BYTE PTR [ebx],0xbf
  41d443:	mov    DWORD PTR [eax+0x52924ea7],esi
  41d449:	push   eax
  41d44a:	adc    edx,DWORD PTR [eax]
  41d44c:	pop    edx
  41d44d:	pop    ds
  41d44e:	mov    esp,0x845c386b
  41d453:	icebp  
  41d454:	pop    ecx
  41d455:	mov    ds:0x2a62d76c,al
  41d45a:	mov    ecx,0x5185d4c0
  41d45f:	jmp    0x41d420
  41d461:	popa   
  41d462:	or     DWORD PTR [ecx],esi
  41d464:	dec    ebp
  41d465:	fdivr  DWORD PTR [ecx-0x2903053]
  41d46b:	jns    0x41d448
  41d46d:	scas   al,BYTE PTR es:[edi]
  41d46e:	dec    esp
  41d46f:	stc    
  41d470:	and    dl,BYTE PTR [ebx-0x4c4facdd]
  41d476:	add    BYTE PTR [ebx],cl
  41d478:	hlt    
  41d479:	inc    ecx
  41d47a:	xor    eax,0x1d96cea3
  41d47f:	pop    es
  41d480:	imul   ebp,DWORD PTR [esi],0x4838930a
  41d486:	adc    BYTE PTR [ecx+0x402f30f0],bl
  41d48c:	add    DWORD PTR [esp+eax*4-0x6ca5106],edi
  41d493:	jbe    0x41d424
  41d495:	jae    0x41d43c
  41d497:	sbb    bh,BYTE PTR [edi+0x15]
  41d49a:	cmc    
  41d49b:	ret    0xc55d
  41d49e:	je     0x41d518
  41d4a0:	cmp    al,0x35
  41d4a2:	mov    eax,0xe7595542
  41d4a7:	sub    BYTE PTR [eax-0x1f],0x14
  41d4ab:	xor    BYTE PTR [ecx-0x49c7f072],dl
  41d4b1:	ds sbb dh,cl
  41d4b4:	and    DWORD PTR [ebx],edi
  41d4b6:	ss pop eax
  41d4b8:	ret    0x3015
  41d4bb:	xor    al,0xf
  41d4bd:	aad    0x5
  41d4bf:	imul   edx,esp,0xb80de134
  41d4c5:	xchg   edi,eax
  41d4c6:	xchg   ebx,eax
  41d4c7:	pop    esp
  41d4c8:	and    cl,dh
  41d4ca:	push   eax
  41d4cb:	outs   dx,DWORD PTR ds:[esi]
  41d4cc:	xchg   ecx,eax
  41d4cd:	inc    ebx
  41d4ce:	cmp    eax,0xec89d259
  41d4d3:	mov    edi,0x3dee5387
  41d4d8:	pop    edi
  41d4d9:	ds (bad) 
  41d4db:	pop    edi
  41d4dc:	mov    WORD PTR [eax+eiz*2],ds
  41d4df:	sahf   
  41d4e0:	hlt    
  41d4e1:	dec    esp
  41d4e2:	call   FWORD PTR [ebx-0x53]
  41d4e5:	push   ebp
  41d4e6:	dec    eax
  41d4e7:	and    al,0xa6
  41d4e9:	ror    BYTE PTR [ebx-0x4a84eb2a],0x93
  41d4f0:	mov    al,ds:0x8ee9972a
  41d4f5:	mov    al,ds:0x734926ed
  41d4fa:	mov    edx,DWORD PTR ds:0x6372e282
  41d500:	pop    ebp
  41d501:	inc    edi
  41d502:	fwait
  41d503:	adc    DWORD PTR [edx+esi*1],ecx
  41d506:	adc    DWORD PTR [edi],eax
  41d508:	popf   
  41d509:	cwde   
  41d50a:	pushf  
  41d50b:	shl    edi,1
  41d50d:	and    eax,edx
  41d50f:	retf   
  41d510:	xchg   ebx,eax
  41d511:	inc    edx
  41d512:	inc    ecx
  41d513:	call   0xdfeb:0x60c3810e
  41d51a:	out    0xe8,al
  41d51c:	sub    BYTE PTR [eax-0x7dd112ae],dl
  41d522:	in     al,0xd4
  41d524:	pop    ecx
  41d525:	jbe    0x41d56c
  41d527:	sub    edi,DWORD PTR [edi-0x5847ce22]
  41d52d:	pop    eax
  41d52e:	xor    al,BYTE PTR [eax+ecx*4-0x51f1bf34]
  41d535:	jbe    0x41d52e
  41d537:	xor    eax,0x37bae818
  41d53c:	push   edi
  41d53d:	cwde   
  41d53e:	add    ebp,DWORD PTR [edx]
  41d540:	hlt    
  41d541:	std    
  41d542:	popf   
  41d543:	pusha  
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	call   0xb8fd:0x952665cf
  41d54c:	xchg   edi,eax
  41d54d:	or     edx,DWORD PTR [eax+ecx*2-0x1d]
  41d551:	mov    al,ds:0x2ba9a068
  41d556:	lea    eax,[ebp-0x23ab262a]
  41d55c:	mov    eax,0xd92db5fa
  41d561:	out    dx,eax
  41d562:	and    edi,DWORD PTR [esi+0x1c3b5f67]
  41d568:	ret    
  41d569:	(bad)  
  41d56a:	mov    ebx,0x828611ec
  41d56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d570:	scas   eax,DWORD PTR es:[edi]
  41d571:	jge    0x41d57e
  41d573:	ja     0x41d50b
  41d575:	repnz repz bound eax,QWORD PTR [ecx]
  41d579:	xchg   esp,eax
  41d57a:	(bad)  
  41d57c:	(bad)  
  41d57d:	sub    eax,DWORD PTR ds:[ecx]
  41d580:	mov    ebx,0xa507a2f2
  41d585:	add    ch,bh
  41d587:	iret   
  41d588:	sub    DWORD PTR [esi+0x62],ebp
  41d58b:	daa    
  41d58c:	rol    dh,0x57
  41d58f:	fistp  WORD PTR [esp+esi*4+0x7b]
  41d593:	xchg   esp,eax
  41d594:	mov    edx,0x9df4b996
  41d599:	mov    cl,0x8
  41d59b:	mov    ds:0x20b8c5a4,eax
  41d5a0:	add    BYTE PTR [ebx+edx*2-0x7b],bl
  41d5a4:	call   0x5c012c85
  41d5a9:	jmp    0x41d5a4
  41d5ab:	fistp  DWORD PTR [ebx+edi*1+0x41]
  41d5af:	pop    esi
  41d5b0:	nop
  41d5b1:	imul   ecx,DWORD PTR [esi],0x35ff86a4
  41d5b7:	xchg   edi,eax
  41d5b8:	or     al,0xe9
  41d5ba:	pop    ecx
  41d5bb:	jle    0x41d58b
  41d5bd:	jo     0x41d60d
  41d5bf:	xchg   edi,eax
  41d5c0:	cmp    al,0x38
  41d5c2:	xchg   BYTE PTR [ecx+eiz*2-0x74],bl
  41d5c6:	(bad)
  41d5c9:	push   ebp
  41d5ca:	sub    bl,0x9f
  41d5cd:	cli    
  41d5ce:	dec    eax
  41d5cf:	jno    0x41d5cb
  41d5d1:	repnz shr DWORD PTR [eax+ebx*4+0x71828d4c],0xe5
  41d5da:	ror    BYTE PTR [edi-0x6deeff25],1
  41d5e0:	daa    
  41d5e1:	je     0x41d585
  41d5e3:	adc    eax,0x71b42ec1
  41d5e8:	mov    ebp,0x6f6cfc7c
  41d5ed:	gs jmp 0x4e17:0x1d84521b
  41d5f5:	jmp    0xb9a8:0xebf6a1a2
  41d5fc:	sbb    ebp,DWORD PTR [edx]
  41d5fe:	pop    es
  41d5ff:	push   eax
  41d600:	sbb    BYTE PTR ss:[edx-0x47],0xb4
  41d605:	das    
  41d606:	mov    eax,DWORD PTR [edx-0x51dfd5ad]
  41d60c:	sbb    dl,0x2d
  41d60f:	loope  0x41d606
  41d611:	mov    ebp,0xbd7ba9cd
  41d616:	sbb    DWORD PTR [ebx-0x406a3dd0],ebx
  41d61c:	sub    eax,DWORD PTR [ecx+edx*8]
  41d61f:	jnp    0x41d638
  41d621:	iret   
  41d622:	cld    
  41d623:	mov    al,0x55
  41d625:	fild   DWORD PTR [eax+0x2e]
  41d628:	sub    DWORD PTR [ebx+0x47a79e30],eax
  41d62e:	mov    al,0xce
  41d630:	test   al,0xa3
  41d632:	push   ecx
  41d633:	adc    ecx,DWORD PTR [ecx-0x56]
  41d636:	cmp    bl,BYTE PTR [edx+0x37]
  41d639:	pop    ebx
  41d63a:	loop   0x41d63b
  41d63c:	int3   
  41d63d:	aas    
  41d63e:	pop    edx
  41d63f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d640:	ret    0xf62b
  41d643:	stos   DWORD PTR es:[edi],eax
  41d644:	jl     0x41d61c
  41d646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d647:	repnz mov edx,0xfc4ec95b
  41d64d:	jnp    0x41d632
  41d64f:	xchg   ecx,eax
  41d650:	(bad)  
  41d651:	pop    edx
  41d652:	mov    WORD PTR [ebp-0x68],?
  41d655:	xchg   ebx,eax
  41d656:	repz popf 
  41d658:	jns    0x41d601
  41d65a:	(bad)  
  41d65b:	adc    BYTE PTR ds:[esi+0x4],cl
  41d65f:	push   esi
  41d660:	cmp    esi,eax
  41d662:	pop    esp
  41d663:	bound  ecx,QWORD PTR [ebx-0x35]
  41d666:	add    al,0x86
  41d668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d669:	ret    0xad80
  41d66c:	lahf   
  41d66d:	mov    ebp,0x400f8afe
  41d672:	test   eax,0xb7af16ee
  41d677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d678:	data16 loop 0x41d698
  41d67b:	inc    ecx
  41d67c:	je     0x41d674
  41d67e:	jne    0x41d639
  41d680:	adc    BYTE PTR [ebp-0x27],0x76
  41d684:	out    dx,eax
  41d685:	push   0x7f958471
  41d68a:	outs   dx,DWORD PTR ds:[esi]
  41d68b:	jno    0x41d696
  41d68d:	push   esi
  41d68e:	cmp    eax,0x98b389e0
  41d693:	jle    0x41d656
  41d695:	sub    esi,DWORD PTR [bx+si]
  41d698:	xor    dh,BYTE PTR [ebx]
  41d69a:	mov    cl,0xd5
  41d69c:	xor    DWORD PTR [ecx+ebp*2-0x68],ebp
  41d6a0:	and    al,0x67
  41d6a2:	and    BYTE PTR [edx-0x5102584a],al
  41d6a8:	cmp    al,0x46
  41d6aa:	scas   eax,DWORD PTR es:[edi]
  41d6ab:	and    DWORD PTR [ebp+0x2ded255a],ebx
  41d6b1:	test   eax,0xbab40be4
  41d6b6:	enter  0x3744,0x2c
  41d6ba:	add    eax,0x90fa1780
  41d6bf:	out    dx,al
  41d6c0:	sub    ecx,DWORD PTR [edi-0x3dd28457]
  41d6c6:	nop
  41d6c7:	and    BYTE PTR [edx-0x41],ah
  41d6ca:	pop    ecx
  41d6cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6cc:	rcr    DWORD PTR [ecx-0x4e],cl
  41d6cf:	mov    ch,0x1d
  41d6d1:	xchg   BYTE PTR [eax-0x38],bl
  41d6d4:	sar    BYTE PTR [eax-0x26],cl
  41d6d7:	cli    
  41d6d8:	xor    DWORD PTR [ecx+0x18],esp
  41d6db:	add    al,bh
  41d6dd:	push   esi
  41d6de:	sbb    eax,0xa3a53603
  41d6e3:	dec    eax
  41d6e4:	aaa    
  41d6e5:	ss iret 
  41d6e7:	imul   esi,DWORD PTR [edi],0xd22f1a3a
  41d6ed:	dec    ebx
  41d6ee:	xor    eax,0x1655869d
  41d6f3:	mov    WORD PTR [ecx+esi*1-0x43],?
  41d6f7:	ja     0x41d771
  41d6f9:	(bad)  
  41d6fb:	inc    edi
  41d6fc:	aas    
  41d6fd:	jne    0x41d69d
  41d6ff:	int3   
  41d700:	add    ecx,0xd29b52d2
  41d706:	add    bl,BYTE PTR [edx-0x29afd347]
  41d70c:	inc    edi
  41d70d:	daa    
  41d70e:	xor    BYTE PTR [ecx-0x5db7afc5],dl
  41d714:	sahf   
  41d715:	pop    esi
  41d716:	into   
  41d717:	pop    ebp
  41d718:	jg     0x41d763
  41d71a:	dec    eax
  41d71b:	xlat   BYTE PTR ds:[ebx]
  41d71c:	call   0x1c962500
  41d721:	add    al,0x6d
  41d723:	imul   DWORD PTR [ebp+0x5]
  41d726:	das    
  41d727:	shl    DWORD PTR [esp+esi*1],0xe1
  41d72b:	push   es
  41d72c:	fldcw  WORD PTR [ecx]
  41d72e:	mov    al,0x3f
  41d730:	test   eax,0x9c483bc0
  41d735:	ds or  eax,0x61820208
  41d73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d73c:	mov    bh,0x6e
  41d73e:	cwde   
  41d73f:	or     DWORD PTR [edi],edx
  41d741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d742:	sub    DWORD PTR [ecx+0x31],0xd
  41d746:	pop    edx
  41d747:	push   ebx
  41d748:	and    BYTE PTR [esi],ch
  41d74a:	jmp    0x19a06c87
  41d74f:	repnz sbb al,0x7a
  41d752:	ret    
  41d753:	or     DWORD PTR [ecx],ebp
  41d755:	and    al,0xf3
  41d757:	test   al,0xcb
  41d759:	dec    esp
  41d75a:	jp     0x41d75d
  41d75c:	adc    edx,DWORD PTR [ebx-0x2d]
  41d75f:	icebp  
  41d760:	arpl   WORD PTR [ebp-0x1c8a054d],ax
  41d766:	sub    eax,0xbe17c811
  41d76b:	sbb    al,0x67
  41d76d:	inc    edi
  41d76e:	fld    QWORD PTR [edx+ecx*8]
  41d771:	(bad)
  41d774:	cmp    BYTE PTR [ebp+0xb8a2a9b],al
  41d77a:	std    
  41d77b:	and    eax,0x69cdaf1f
  41d780:	cmp    eax,0x4f935094
  41d785:	inc    ebx
  41d786:	out    dx,eax
  41d787:	iret   
  41d788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d789:	dec    esi
  41d78a:	jg     0x41d762
  41d78c:	mov    edi,0x5b919550
  41d791:	dec    esi
  41d792:	adc    ebp,DWORD PTR [esi+0x104ced5c]
  41d798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d799:	push   ecx
  41d79a:	xchg   ebp,edx
  41d79c:	cmp    eax,0xcafa0980
  41d7a1:	mov    al,0x7
  41d7a3:	push   ds
  41d7a4:	in     eax,dx
  41d7a5:	leave  
  41d7a6:	shl    DWORD PTR [edx+edi*4-0x1482fa9c],0xab
  41d7ae:	(bad)  
  41d7af:	dec    DWORD PTR es:[ecx+0xe]
  41d7b3:	add    al,0x7d
  41d7b5:	mov    edi,0x4a40cb4
  41d7ba:	sbb    ecx,DWORD PTR [eax-0x7aa79e6a]
  41d7c0:	inc    esi
  41d7c1:	xlat   BYTE PTR ds:[ebx]
  41d7c2:	mov    edx,0x81a0e9e1
  41d7c7:	jp     0x41d7fa
  41d7c9:	out    dx,al
  41d7ca:	sbb    al,0x7e
  41d7cc:	lds    edi,FWORD PTR [eax+0x652134dd]
  41d7d2:	ss pop edx
  41d7d4:	bound  edi,QWORD PTR [eax+0x71]
  41d7d7:	xor    edx,DWORD PTR [edi-0x41]
  41d7da:	and    eax,0x1fd584d9
  41d7df:	sbb    BYTE PTR [ecx],bl
  41d7e1:	shl    esi,cl
  41d7e3:	cmp    esi,eax
  41d7e5:	daa    
  41d7e6:	adc    bl,BYTE PTR ds:0x6ed2d7d8
  41d7ec:	mov    ch,0x71
  41d7ee:	call   0xccab1127
  41d7f3:	clc    
  41d7f4:	retf   0xb7c5
  41d7f7:	cmp    al,0x4
  41d7f9:	jne    0x41d783
  41d7fb:	cmp    BYTE PTR [esi-0x27],bl
  41d7fe:	popf   
  41d7ff:	pop    eax
  41d800:	add    BYTE PTR [eax],bl
  41d802:	sar    BYTE PTR [eax-0x5a4b997],0xcd
  41d809:	push   0xf82546ed
  41d80e:	mov    dh,0x1
  41d810:	aad    0xbc
  41d812:	xchg   ecx,eax
  41d813:	and    al,0xac
  41d815:	cmp    esi,DWORD PTR [ebx+0x3e]
  41d818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d819:	mov    BYTE PTR [edi+ebp*8],dh
  41d81c:	sbb    al,0xb
  41d81e:	(bad)  
  41d81f:	ficom  WORD PTR [edx]
  41d821:	imul   ebp,DWORD PTR [ebp-0x3f302435],0x6b
  41d828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d829:	mov    eax,ds:0x4b072f98
  41d82e:	add    esp,DWORD PTR [ebx+0x4ae715ef]
  41d834:	pusha  
  41d835:	add    cl,BYTE PTR [ecx+0x5e]
  41d838:	pusha  
  41d839:	out    0xf4,al
  41d83b:	xchg   edi,eax
  41d83c:	fiadd  DWORD PTR [ebx-0x7ebe0d67]
  41d842:	inc    eax
  41d843:	pop    esi
  41d844:	cld    
  41d845:	push   es
  41d846:	loop   0x41d7ea
  41d848:	sbb    BYTE PTR [esi-0x61],ah
  41d84b:	and    DWORD PTR [eax],ebp
  41d84d:	pop    edi
  41d84e:	sub    ch,bl
  41d850:	cli    
  41d851:	lock add ebp,DWORD PTR [ecx-0xb3beadb]
  41d858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d859:	xchg   edi,eax
  41d85a:	or     al,0x11
  41d85c:	push   ebp
  41d85d:	call   0x1dc3e1f
  41d862:	ds xchg esi,eax
  41d864:	sbb    eax,DWORD PTR [edi]
  41d866:	dec    esp
  41d867:	cmp    ah,BYTE PTR [edi-0x71]
  41d86a:	pop    eax
  41d86b:	stc    
  41d86c:	dec    edx
  41d86d:	fwait
  41d86e:	sub    BYTE PTR [esi-0x7b],ch
  41d871:	mov    esi,0xa4408e19
  41d876:	inc    ecx
  41d877:	push   ss
  41d878:	cld    
  41d879:	jl     0x41d801
  41d87b:	mov    WORD PTR [edx+0x54bb6895],ss
  41d881:	pop    edx
  41d882:	ss pop edi
  41d884:	push   ebp
  41d885:	pop    ebp
  41d887:	bound  ebp,QWORD PTR [esi-0x36]
  41d88a:	adc    BYTE PTR [edi],cl
  41d88c:	fmul   st(2),st
  41d88e:	lea    edi,[eax]
  41d890:	sbb    BYTE PTR [esp+ebp*4-0x43f8b073],bh
  41d897:	bound  ecx,QWORD PTR [edi+ebx*2]
  41d89a:	ret    
  41d89b:	jmp    0x156f:0xe7c497ca
  41d8a2:	imul   ecx,DWORD PTR [edi-0x2c41d5c8],0xac4c64f2
  41d8ac:	nop
  41d8ad:	pop    ecx
  41d8ae:	test   BYTE PTR [edx+0x2c],ah
  41d8b1:	arpl   WORD PTR [edx-0x6678d041],di
  41d8b7:	mov    bh,BYTE PTR [eax]
  41d8b9:	and    al,ch
  41d8bb:	cli    
  41d8bc:	push   0xffffffc2
  41d8be:	jge    0x41d848
  41d8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8c1:	inc    edx
  41d8c2:	push   ss
  41d8c3:	mov    eax,0xd3b34a53
  41d8c8:	dec    BYTE PTR [ecx-0x72e20165]
  41d8ce:	ror    DWORD PTR [edi+0x187630da],1
  41d8d4:	jmp    0x41d93a
  41d8d6:	das    
  41d8d7:	xor    al,0x10
  41d8d9:	jo     0x41d933
  41d8db:	(bad)  
  41d8dc:	cmp    eax,0x90da59d8
  41d8e1:	mov    ah,0xd1
  41d8e3:	rsm    
  41d8e5:	xchg   edx,eax
  41d8e6:	std    
  41d8e7:	(bad)  
  41d8e9:	xchg   esp,eax
  41d8ea:	cmp    eax,0xe8b05d04
  41d8ef:	xor    al,0x55
  41d8f1:	pop    esp
  41d8f2:	aam    0x5d
  41d8f4:	mov    edx,0x4ba01e1d
  41d8f9:	rol    BYTE PTR [edi+eiz*8+0x1e9e6d5f],1
  41d900:	dec    ebx
  41d901:	mov    al,0xa2
  41d903:	inc    ebp
  41d904:	aad    0x86
  41d906:	pop    ebp
  41d907:	sbb    eax,0x153221b4
  41d90c:	test   DWORD PTR [edi+0x6e],esp
  41d90f:	adc    al,0x18
  41d911:	dec    edx
  41d912:	in     eax,0xd0
  41d914:	in     eax,0xde
  41d916:	dec    ebx
  41d917:	enter  0x88c3,0xdb
  41d91b:	out    dx,al
  41d91c:	stc    
  41d91d:	sub    esp,DWORD PTR [edi*8-0x31d7e763]
  41d924:	pop    ecx
  41d925:	jnp    0x41d978
  41d927:	and    BYTE PTR ds:0xbfc03e2b,al
  41d92d:	hlt    
  41d92e:	loopne 0x41d9a2
  41d930:	jne    0x41d8c9
  41d932:	data16 mov dh,BYTE PTR [ecx+0x198d833]
  41d939:	pop    ds
  41d93a:	cmp    DWORD PTR [eax],0xe360cd50
  41d940:	test   eax,0x79e07fc6
  41d945:	lea    ebp,[eax+0x73cd045]
  41d94b:	sbb    DWORD PTR [edi+0x45],ecx
  41d94e:	cmp    DWORD PTR [ebx-0x9227d41],0x35
  41d955:	and    al,0x7d
  41d957:	es pop ss
  41d959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d95a:	mov    cl,0xf6
  41d95c:	stos   DWORD PTR es:[edi],eax
  41d95d:	arpl   di,bp
  41d95f:	aas    
  41d960:	fmul   QWORD PTR [esi+esi*2]
  41d963:	lahf   
  41d964:	mov    eax,ds:0x7cfb56b9
  41d969:	fild   QWORD PTR [ebp+0x12811e8c]
  41d96f:	out    0x56,eax
  41d971:	and    edx,edi
  41d973:	and    esi,ecx
  41d975:	adc    BYTE PTR [ecx],dl
  41d977:	jp     0x41d93f
  41d979:	stc    
  41d97a:	mov    al,0x9e
  41d97c:	inc    edi
  41d97d:	push   cs
  41d97e:	fisubr WORD PTR [edi-0x211f70fc]
  41d984:	cmp    BYTE PTR [ebx+0x16],0x8f
  41d988:	sahf   
  41d989:	sar    DWORD PTR [ecx+0x74f7b4b9],cl
  41d98f:	or     DWORD PTR [ecx-0x27e2bdad],0xffffffc4
  41d996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d997:	ss (bad) 
  41d999:	xchg   edx,eax
  41d99a:	pusha  
  41d99b:	std    
  41d99c:	jae    0x41d9c1
  41d99e:	aas    
  41d99f:	mov    dh,0x3f
  41d9a1:	mov    esp,0x512a0c4c
  41d9a6:	push   ebx
  41d9a7:	out    dx,eax
  41d9a8:	sbb    bl,BYTE PTR [ebx-0x3]
  41d9ab:	xchg   ebx,eax
  41d9ac:	jnp    0x41d97f
  41d9ae:	adc    bh,BYTE PTR [edx+0x366d171c]
  41d9b4:	inc    ebx
  41d9b5:	push   ss
  41d9b6:	mov    eax,0xaf1cbce7
  41d9bb:	lea    esp,[esi-0x683e76af]
  41d9c1:	and    al,0x43
  41d9c3:	lods   al,BYTE PTR ds:[esi]
  41d9c4:	pop    es
  41d9c5:	jnp    0x41d9b0
  41d9c7:	in     al,0x80
  41d9c9:	and    eax,DWORD PTR [ebx]
  41d9cb:	jne    0x41da0c
  41d9cd:	fwait
  41d9ce:	pop    ecx
  41d9cf:	imul   BYTE PTR [edi]
  41d9d1:	mov    ecx,0xeb40a5df
  41d9d6:	div    bl
  41d9d8:	sub    ah,BYTE PTR [edi-0x63]
  41d9db:	mov    ebp,0xd6fd0ba6
  41d9e0:	sbb    ecx,ebx
  41d9e2:	int3   
  41d9e3:	ja     0x41d9ee
  41d9e5:	bound  esp,QWORD PTR [ebp-0x670dcd3a]
  41d9eb:	push   ebx
  41d9ec:	xor    DWORD PTR [ebx+0x64ed4e79],0x2d
  41d9f3:	xchg   edi,eax
  41d9f4:	and    DWORD PTR [ebp-0x6a],0xbcddb387
  41d9fb:	push   es
  41d9fc:	stos   DWORD PTR es:[edi],eax
  41d9fd:	fnstenv [ecx]
  41d9ff:	jnp    0x41da03
  41da01:	jg     0x41da41
  41da03:	into   
  41da04:	cli    
  41da05:	ins    BYTE PTR es:[edi],dx
  41da06:	ins    DWORD PTR es:[edi],dx
  41da07:	in     al,0x9b
  41da09:	inc    esi
  41da0a:	cmc    
  41da0b:	adc    ch,BYTE PTR [edx]
  41da0d:	jns    0x41da2b
  41da0f:	xchg   BYTE PTR [edx],bl
  41da11:	push   esi
  41da12:	and    eax,0xed4c6ebb
  41da17:	hlt    
  41da18:	gs jp  0x41d9dd
  41da1b:	int3   
  41da1c:	dec    eax
  41da1d:	inc    eax
  41da1e:	add    eax,ecx
  41da20:	push   ebp
  41da21:	out    dx,eax
  41da22:	add    DWORD PTR [ecx+0x7d44d0d],esi
  41da28:	enter  0x234f,0x9e
  41da2c:	dec    eax
  41da2d:	or     eax,0x23b14b6a
  41da32:	ret    
  41da33:	std    
  41da34:	dec    eax
  41da35:	mov    edi,0xac3ef255
  41da3a:	(bad)
  41da3d:	mov    eax,0xabc42e1a
  41da42:	icebp  
  41da43:	mov    dl,0x96
  41da45:	scas   eax,DWORD PTR es:[edi]
  41da46:	push   edi
  41da47:	bnd js 0x41daa4
  41da4a:	mov    bl,0x58
  41da4c:	xchg   esi,eax
  41da4d:	jno    0x41da5f
  41da4f:	test   al,0xe0
  41da51:	loop   0x41da4a
  41da53:	test   BYTE PTR [esi],0x4
  41da56:	mov    bh,0x92
  41da58:	mov    ss,WORD PTR [ebx-0x46497361]
  41da5e:	out    0x9e,al
  41da60:	mov    BYTE PTR [edx+0x1b989fea],dl
  41da66:	inc    esi
  41da67:	out    0xa,eax
  41da69:	inc    esp
  41da6a:	mov    esp,0xb4d873dd
  41da6f:	gs xchg ecx,eax
  41da71:	fst    DWORD PTR [ebx-0x57d24296]
  41da77:	mov    esi,0x4b0c3a17
  41da7c:	ret    
  41da7d:	(bad)
  41da80:	cwde   
  41da81:	sbb    al,BYTE PTR [edx]
  41da83:	outs   dx,BYTE PTR ds:[esi]
  41da84:	jecxz  0x41daef
  41da86:	int3   
  41da87:	fld    DWORD PTR [edx+0x40]
  41da8a:	and    DWORD PTR [edi],edi
  41da8c:	push   0xffffffa1
  41da8e:	lock je 0x41daee
  41da91:	cld    
  41da92:	mov    eax,0xd6b7c03e
  41da97:	dec    ebp
  41da98:	and    BYTE PTR [eax+ebp*2-0x1f6b88b8],bl
  41da9f:	icebp  
  41daa0:	sub    BYTE PTR [eax+0x28],ch
  41daa3:	dec    esp
  41daa4:	xchg   ebx,eax
  41daa5:	outs   dx,BYTE PTR ds:[esi]
  41daa6:	push   ss
  41daa7:	jmp    0x41da73
  41daa9:	aad    0xbb
  41daab:	rol    bh,cl
  41daad:	ins    DWORD PTR es:[edi],dx
  41daae:	mov    esi,0x75c230ba
  41dab3:	test   edx,ecx
  41dab5:	cmp    BYTE PTR [edi+0x32379078],ah
  41dabb:	mov    al,ds:0xcef3a730
  41dac1:	dec    ecx
  41dac2:	sbb    BYTE PTR [edi+0x7d],al
  41dac5:	addr16 test esp,esp
  41dac8:	add    eax,0xc135f4d
  41dacd:	and    DWORD PTR [edi],ebp
  41dacf:	inc    ebp
  41dad0:	dec    edx
  41dad1:	gs sbb al,0xb1
  41dad4:	inc    ebx
  41dad5:	in     al,0x8d
  41dad7:	push   eax
  41dad8:	(bad)
  41dadd:	stc    
  41dade:	aas    
  41dadf:	mov    ds:0x34d6f9f2,eax
  41dae4:	mov    DWORD PTR [eax+0x2b71b5b6],edi
  41daea:	adc    BYTE PTR [edi+esi*4-0x4],bl
  41daee:	dec    esi
  41daef:	xchg   edx,eax
  41daf0:	push   ecx
  41daf1:	mov    edi,DWORD PTR [ecx]
  41daf3:	pop    ebp
  41daf4:	sar    DWORD PTR [ecx],cl
  41daf6:	inc    eax
  41daf7:	pop    esp
  41daf8:	repz mov ah,0xe2
  41dafb:	fld    TBYTE PTR [ebp-0x12]
  41dafe:	or     DWORD PTR [ecx+edx*8],0x5d
  41db02:	rcl    BYTE PTR [ecx-0xf1a150c],cl
  41db08:	imul   edi,DWORD PTR [ecx+ebx*8-0x6d],0xffffffc8
  41db0d:	into   
  41db0e:	xor    dl,bl
  41db10:	and    eax,0xd4301d3a
  41db15:	sub    DWORD PTR [ebx-0x63],0xa8bb4e4f
  41db1c:	scas   eax,DWORD PTR es:[edi]
  41db1d:	push   ecx
  41db1e:	jnp    0x41db70
  41db20:	xor    ah,BYTE PTR [ebx-0x6fab84ca]
  41db26:	xor    eax,0x8e79f70b
  41db2b:	test   DWORD PTR [esi-0x3fb184bd],edi
  41db31:	sbb    bh,cl
  41db33:	sbb    al,0x74
  41db35:	ja     0x41dadf
  41db37:	lock rol bh,0xf0
  41db3b:	cmc    
  41db3c:	jp     0x41db57
  41db3e:	jb     0x41dae0
  41db40:	or     edi,DWORD PTR [eax]
  41db42:	add    DWORD PTR [esp+eax*4+0x1d],esi
  41db46:	jno    0x41dbc3
  41db48:	lods   al,BYTE PTR ds:[esi]
  41db49:	mov    ds:0xb0a2f226,eax
  41db4e:	call   0xc0b521aa
  41db53:	dec    esp
  41db54:	xchg   ebx,eax
  41db55:	out    dx,eax
  41db56:	jmp    0x4492:0x6a9be02f
  41db5d:	fnsave [edi+0x13ee0a10]
  41db63:	pop    edi
  41db64:	push   ds
  41db65:	jecxz  0x41db51
  41db67:	jo     0x41daef
  41db69:	retf   
  41db6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db6b:	int3   
  41db6c:	mov    bl,0x1
  41db6e:	push   edi
  41db6f:	jp     0x41dbbb
  41db71:	cmp    al,0x41
  41db73:	jno    0x41db7e
  41db75:	pop    ds
  41db76:	popa   
  41db77:	popf   
  41db78:	sbb    ah,BYTE PTR [edx-0x44]
  41db7b:	shl    BYTE PTR [ebx+0x3a],cl
  41db7e:	jnp    0x41db2f
  41db80:	adc    BYTE PTR [edx-0x7b7de3a8],bh
  41db86:	or     ebx,DWORD PTR [eax+0x6a]
  41db89:	fadd   QWORD PTR [ebp-0x22]
  41db8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db8d:	inc    ebx
  41db8e:	je     0x41dbc7
  41db90:	cmp    DWORD PTR [ecx-0x36],edx
  41db93:	sahf   
  41db94:	adc    al,0xeb
  41db96:	pop    esi
  41db97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db98:	sahf   
  41db99:	retf   
  41db9a:	pop    ebx
  41db9b:	inc    esi
  41db9c:	pop    es
  41db9d:	ss mov edx,0xf5e9a332
  41dba3:	arpl   WORD PTR [eax-0x25],dx
  41dba6:	out    0xe5,eax
  41dba8:	mov    al,0x65
  41dbaa:	rcr    BYTE PTR [eax+eiz*8-0x33],0xc0
  41dbaf:	rcl    BYTE PTR [ebp-0x70443deb],1
  41dbb5:	cwde   
  41dbb6:	cvtdq2ps xmm0,xmm2
  41dbb9:	push   ds
  41dbba:	in     al,dx
  41dbbb:	mov    esp,0x3f5a18c2
  41dbc0:	xor    BYTE PTR [edx],al
  41dbc2:	mov    ebx,?
  41dbc4:	aam    0x45
  41dbc6:	retf   0xc558
  41dbc9:	sbb    bl,BYTE PTR [ecx+0xc]
  41dbcc:	fcomip st,st(7)
  41dbce:	adc    al,0xe6
  41dbd0:	and    DWORD PTR [edi+0x20],ebp
  41dbd3:	dec    eax
  41dbd4:	sbb    BYTE PTR [eax+0x5b],dl
  41dbd7:	test   BYTE PTR [eax-0x29b3cd70],ah
  41dbdd:	push   es
  41dbde:	out    dx,eax
  41dbdf:	(bad)  
  41dbe1:	mov    bh,0x18
  41dbe3:	add    eax,0x5100f4a9
  41dbe8:	sbb    edx,DWORD PTR [edx-0x2e]
  41dbeb:	(bad)  [ebp-0x6f]
  41dbee:	pop    edi
  41dbef:	dec    edx
  41dbf0:	mov    DWORD PTR [ebp-0x10],eax
  41dbf3:	mov    ecx,DWORD PTR ds:0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	mov    eax,cs:0x7a5f5062
  41dc7f:	fild   DWORD PTR [eax-0x7ca1f07d]
  41dc85:	and    DWORD PTR ds:0x4a9f7849,0x5c
  41dc8c:	mov    DWORD PTR [edx-0x3869917d],esi
  41dc92:	xchg   cl,cl
  41dc94:	pusha  
  41dc95:	sahf   
  41dc96:	ja     0x41dcc5
  41dc98:	pop    esi
  41dc99:	and    DWORD PTR [ebx+0x40],esi
  41dc9c:	push   esp
  41dc9d:	mov    BYTE PTR [edi-0x37bcb650],cl
  41dca3:	sub    dh,BYTE PTR [ebx+ecx*2]
  41dca6:	iret   
  41dca7:	add    dh,dh
  41dca9:	call   0x44a2:0x6ac57234
  41dcb0:	and    ch,BYTE PTR [edx]
  41dcb2:	xor    BYTE PTR [ebp-0x36ee80ca],dl
  41dcb8:	mov    al,ds:0x8fd1106d
  41dcbd:	arpl   WORD PTR [ecx-0x59],cx
  41dcc0:	sub    bl,ch
  41dcc2:	sub    esp,esp
  41dcc4:	bound  edx,QWORD PTR [ecx]
  41dcc6:	loope  0x41dcb1
  41dcc8:	ficom  DWORD PTR [ebx+0x6901013]
  41dcce:	fnstsw WORD PTR [esi-0x5c]
  41dcd1:	int    0x1d
  41dcd3:	out    dx,eax
  41dcd4:	imul   esp
  41dcd6:	lds    ebp,FWORD PTR [edi]
  41dcd8:	dec    eax
  41dcd9:	dec    ecx
  41dcda:	xor    BYTE PTR [edx],0x48
  41dcdd:	adc    al,ah
  41dcdf:	inc    esi
  41dce0:	cwde   
  41dce1:	icebp  
  41dce2:	out    dx,eax
  41dce3:	lods   al,BYTE PTR ds:[esi]
  41dce4:	(bad)  
  41dce5:	(bad)  
  41dce6:	and    al,dh
  41dce8:	shl    BYTE PTR [ecx],0xe8
  41dceb:	test   esp,ebp
  41dced:	adc    eax,0x70b5f20f
  41dcf2:	btc    edx,ecx
  41dcf5:	push   ebx
  41dcf6:	mov    cl,0xc0
  41dcf8:	jmp    0x75d2:0x6518f88a
  41dcff:	mov    ds:0xda354a96,al
  41dd04:	sbb    eax,0x79de0a71
  41dd09:	in     al,0x8f
  41dd0b:	mov    bh,0xe5
  41dd0d:	sbb    al,0x49
  41dd0f:	mov    ecx,0x372b6990
  41dd14:	nop
  41dd15:	out    dx,al
  41dd16:	add    eax,0xc1cfea19
  41dd1b:	pop    ebp
  41dd1c:	aad    0xb3
  41dd1e:	out    dx,al
  41dd1f:	mov    BYTE PTR [ebp+ebx*8-0x32c81cf4],ch
  41dd26:	(bad)  
  41dd27:	(bad)  
  41dd28:	ins    BYTE PTR es:[edi],dx
  41dd29:	push   eax
  41dd2a:	test   DWORD PTR es:[edx],edx
  41dd2d:	rep ins DWORD PTR es:[edi],dx
  41dd2f:	out    0x64,al
  41dd31:	mov    bh,0x8b
  41dd33:	ror    ah,1
  41dd35:	(bad)  
  41dd36:	icebp  
  41dd37:	xor    DWORD PTR ds:0x1f979228,ecx
  41dd3d:	cmc    
  41dd3e:	test   BYTE PTR [edi-0x49],ah
  41dd41:	loope  0x41dd9c
  41dd43:	mov    al,ds:0x8f884418
  41dd48:	push   ecx
  41dd49:	fsubr  QWORD PTR [ecx+esi*8-0x2f284650]
  41dd50:	retf   0x3cc
  41dd53:	push   ebp
  41dd54:	rcr    ebx,1
  41dd56:	add    dl,dl
  41dd58:	ins    BYTE PTR es:[edi],dx
  41dd59:	(bad)  
  41dd5b:	jmp    0x41dd91
  41dd5d:	or     BYTE PTR [edx],al
  41dd5f:	add    DWORD PTR [eax+0x2c],esp
  41dd62:	pop    es
  41dd63:	dec    edx
  41dd64:	div    ebx
  41dd66:	cmp    al,0x57
  41dd68:	xchg   edi,eax
  41dd69:	or     edi,esp
  41dd6b:	test   al,0x33
  41dd6d:	ret    0x3ccc
  41dd70:	iret   
  41dd71:	mov    edx,ebx
  41dd73:	popa   
  41dd74:	retf   0xcbed
  41dd77:	retf   0x585a
  41dd7a:	test   al,0x2f
  41dd7c:	popa   
  41dd7d:	jmp    0xaeb5:0xc21d3d06
  41dd84:	mov    al,ds:0xf534b737
  41dd89:	mov    bh,0xcd
  41dd8b:	mov    esp,edx
  41dd8d:	push   ds
  41dd8e:	jne    0x41ddcd
  41dd90:	les    ebx,FWORD PTR [esi-0x57]
  41dd93:	jb     0x41ddbd
  41dd95:	xchg   esp,eax
  41dd96:	pop    edi
  41dd97:	fimul  DWORD PTR [ebp-0x3b]
  41dd9a:	sub    al,0x1b
  41dd9c:	jae    0x41ddd6
  41dd9e:	cmp    dl,BYTE PTR [ecx+0x43]
  41dda1:	loop   0x41ddb5
  41dda3:	mov    bh,0xd0
  41dda5:	jne    0x41ddf1
  41dda7:	push   cs
  41dda8:	and    eax,eax
  41ddaa:	mov    esp,0x100fcee9
  41ddaf:	and    ecx,DWORD PTR [ebx-0x44]
  41ddb2:	out    0x2a,eax
  41ddb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddb5:	lods   al,BYTE PTR ds:[esi]
  41ddb6:	out    dx,eax
  41ddb7:	aaa    
  41ddb8:	push   eax
  41ddb9:	mov    es,WORD PTR [eax+0x786c2025]
  41ddbf:	xor    BYTE PTR [ebx+0x4b31235d],ah
  41ddc5:	push   0xa6931270
  41ddca:	rcr    DWORD PTR [edx-0x7412c9a1],0x57
  41ddd1:	sub    ah,cl
  41ddd3:	out    dx,al
  41ddd4:	cld    
  41ddd5:	mov    edx,0x4ff0a2ad
  41ddda:	jg     0x41de32
  41dddc:	mov    al,ds:0x31085606
  41dde1:	mul    ebp
  41dde3:	pop    ebx
  41dde4:	mov    dh,0x19
  41dde6:	dec    ebp
  41dde7:	fidiv  DWORD PTR [edx]
  41dde9:	inc    edi
  41ddea:	inc    ebx
  41ddeb:	xchg   edx,eax
  41ddec:	aam    0xc1
  41ddee:	rol    DWORD PTR [esi],cl
  41ddf0:	ins    DWORD PTR es:[edi],dx
  41ddf1:	push   0x5b
  41ddf3:	sub    DWORD PTR [edx-0x26],0x800e9494
  41ddfa:	xchg   esp,eax
  41ddfb:	das    
  41ddfc:	mov    esi,0x4000b46c
  41de01:	jg     0x41de0d
  41de03:	adc    DWORD PTR [edi+0xc],0x52e7bbf1
  41de0a:	or     DWORD PTR [edx+0x169aa3ad],esp
  41de10:	mov    edi,0x7eb3bde4
  41de15:	mov    esp,0xf7588477
  41de1a:	rcr    DWORD PTR [ecx+0x4a11b338],0xd2
  41de21:	add    DWORD PTR [eax-0x7f78cf41],ebp
  41de27:	mov    al,0x1c
  41de29:	jbe    0x41de2f
  41de2b:	test   DWORD PTR [eax+0x52d279b9],edi
  41de31:	push   cs
  41de32:	int3   
  41de33:	popf   
  41de34:	push   edx
  41de35:	xchg   BYTE PTR [esi],bh
  41de37:	(bad)  
  41de38:	dec    ebp
  41de39:	ins    BYTE PTR es:[edi],dx
  41de3a:	outs   dx,BYTE PTR ds:[esi]
  41de3b:	push   0xef6b7f3c
  41de40:	jo     0x41de4f
  41de42:	xor    eax,DWORD PTR [ecx+0x44]
  41de45:	mov    BYTE PTR [ecx],dl
  41de47:	mov    bl,0x97
  41de49:	(bad)  
  41de4b:	pop    ds
  41de4c:	inc    BYTE PTR [edi-0x54]
  41de4f:	push   ebp
  41de50:	sub    DWORD PTR [ebp-0x42ad3cfd],0x3ee97b88
  41de5a:	xlat   BYTE PTR ds:[ebx]
  41de5b:	xchg   ebp,eax
  41de5c:	and    bl,dh
  41de5e:	data16 neg BYTE PTR [ebx]
  41de61:	xchg   DWORD PTR [edi+0xd],esp
  41de64:	bound  esi,QWORD PTR [edx+ecx*2-0x46]
  41de68:	fs stc 
  41de6a:	add    al,0x60
  41de6c:	adc    ah,dh
  41de6e:	xchg   ebp,eax
  41de6f:	mov    al,ds:0x316d61af
  41de74:	add    BYTE PTR [esi-0x20f99527],bl
  41de7a:	lods   al,BYTE PTR ds:[esi]
  41de7b:	pop    es
  41de7c:	(bad)  
  41de7e:	dec    esi
  41de7f:	leave  
  41de80:	fadd   DWORD PTR [eax+0x7]
  41de83:	dec    ecx
  41de84:	scas   eax,DWORD PTR es:[edi]
  41de85:	xor    dl,BYTE PTR [ebp+0x494e09e5]
  41de8b:	pop    edx
  41de8c:	jmp    0xbd0a:0x954585a2
  41de93:	or     al,0x26
  41de95:	jb     0x41deeb
  41de97:	(bad)  
  41de98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de99:	inc    eax
  41de9a:	adc    eax,DWORD PTR [esi]
  41de9c:	pop    es
  41de9d:	lsl    esp,cx
  41dea0:	dec    esp
  41dea1:	inc    ebp
  41dea2:	dec    esp
  41dea3:	inc    edx
  41dea4:	jne    0x41dee5
  41dea6:	pop    ebp
  41dea7:	add    BYTE PTR [edx],dh
  41dea9:	movzx  ebp,WORD PTR [edx]
  41deac:	xor    eax,0x521a8495
  41deb1:	adc    eax,0xa9fcbbca
  41deb6:	ret    0x17ff
  41deb9:	lods   eax,DWORD PTR ds:[esi]
  41deba:	or     DWORD PTR [edx+0x1a],esi
  41debd:	add    eax,DWORD PTR [ebx-0x7df6be5c]
  41dec3:	adc    al,0x75
  41dec5:	test   eax,0x7bfc09b5
  41deca:	or     cl,BYTE PTR [ecx]
  41decc:	stos   DWORD PTR es:[edi],eax
  41decd:	repz gs jo 0x41df42
  41ded1:	mov    al,ds:0x5e4a4140
  41ded6:	jae    0x41dea1
  41ded8:	add    eax,0x645e4d18
  41dedd:	jns    0x41defc
  41dedf:	dec    edx
  41dee1:	sbb    BYTE PTR [ebx-0x4c869dc7],bh
  41dee7:	hlt    
  41dee8:	pop    ss
  41dee9:	stos   BYTE PTR es:[edi],al
  41deea:	inc    edi
  41deeb:	mov    esi,?
  41deed:	adc    al,0x91
  41deef:	aas    
  41def0:	int    0x43
  41def2:	jl     0x41df52
  41def4:	retf   0x31ec
  41def7:	outs   dx,DWORD PTR ss:[esi]
  41def9:	jnp    0x41ded9
  41defb:	call   0x5947:0xee0bed45
  41df02:	and    ebp,DWORD PTR [edx+0x22]
  41df05:	jmp    0x2894a604
  41df0a:	ja     0x41def7
  41df0c:	mov    eax,ds:0xae9aad75
  41df11:	inc    ebp
  41df12:	dec    eax
  41df13:	or     ch,bl
  41df15:	(bad)
  41df19:	mov    ch,0x84
  41df1b:	and    eax,0xf49da81f
  41df20:	leave  
  41df21:	(bad)  
  41df22:	stc    
  41df23:	ret    0xe3ea
  41df26:	jge    0x41df0a
  41df28:	out    0x4e,eax
  41df2a:	inc    edx
  41df2b:	inc    eax
  41df2c:	mov    edx,0xfed396e0
  41df31:	lea    ebx,[ebp+eiz*1-0x37c65f7]
  41df38:	icebp  
  41df39:	add    eax,0x87e394f2
  41df3e:	xchg   esp,eax
  41df3f:	loop   0x41def0
  41df41:	jp     0x41dfc1
  41df43:	mov    ch,0xe0
  41df45:	rcl    ah,cl
  41df47:	(bad)  
  41df49:	cmp    eax,0xd2d13b1e
  41df4e:	fld    DWORD PTR [edx-0x75958b43]
  41df54:	cdq    
  41df55:	pop    ecx
  41df56:	mov    ecx,0xeb930ae4
  41df5b:	cmp    al,BYTE PTR [edi]
  41df5d:	stos   DWORD PTR es:[edi],eax
  41df5e:	jno    0x41dfb9
  41df60:	dec    esi
  41df61:	outs   dx,DWORD PTR ds:[esi]
  41df62:	xor    al,0xe5
  41df64:	jp     0x41dfc4
  41df66:	pop    esi
  41df67:	(bad)  
  41df68:	adc    dl,BYTE PTR [ecx]
  41df6a:	jbe    0x41dfcb
  41df6c:	shl    BYTE PTR [ecx-0x22],0xa3
  41df70:	jbe    0x41df9f
  41df72:	addr16 mov ebp,0xc66b6f48
  41df78:	je     0x41df7b
  41df7a:	ror    DWORD PTR [edx-0x34],1
  41df7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df7e:	mov    ecx,0xff520bab
  41df83:	xchg   ecx,eax
  41df84:	jns    0x41df73
  41df86:	(bad)  
  41df87:	lock adc DWORD PTR [eax+0x1912ceb4],0xffffff8b
  41df8f:	jmp    0x3570806c
  41df94:	xchg   edx,eax
  41df95:	mov    ch,BYTE PTR [esi+edi*1-0x208b6b7c]
  41df9c:	retf   0x27ce
  41df9f:	xchg   ecx,eax
  41dfa0:	fcom   QWORD PTR [eax+0x5a]
  41dfa3:	dec    ebx
  41dfa4:	push   0xffffff90
  41dfa6:	mov    fs,WORD PTR [ebp-0x1b]
  41dfa9:	mov    dl,0x9c
  41dfab:	inc    edi
  41dfac:	arpl   WORD PTR [eax],bp
  41dfae:	jb     0x41dff3
  41dfb0:	jle    0x41dfe4
  41dfb2:	dec    ebp
  41dfb3:	test   ebp,0x94cb183
  41dfb9:	(bad)  
  41dfba:	and    cl,dh
  41dfbc:	out    dx,eax
  41dfbd:	sub    al,0xff
  41dfbf:	jge    0x41dfcc
  41dfc1:	stc    
  41dfc2:	fsub   DWORD PTR [ebx]
  41dfc4:	jo     0x41dfa6
  41dfc6:	stos   DWORD PTR es:[edi],eax
  41dfc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfc8:	mov    esi,0x5b6fcd92
  41dfcd:	mov    ch,0xe5
  41dfcf:	clc    
  41dfd0:	js     0x41dfab
  41dfd2:	xchg   ebx,eax
  41dfd3:	outs   dx,DWORD PTR ds:[esi]
  41dfd4:	sub    cl,BYTE PTR [ebp-0x30]
  41dfd7:	mov    dh,0xe8
  41dfd9:	loop   0x41e02c
  41dfdb:	enter  0x77bc,0x7b
  41dfdf:	enter  0x8765,0x1c
  41dfe3:	clc    
  41dfe4:	loope  0x41dfb9
  41dfe6:	icebp  
  41dfe7:	(bad)
  41dfea:	push   eax
  41dfeb:	inc    ecx
  41dfec:	push   edx
  41dfed:	mov    ah,0xe4
  41dfef:	pushf  
  41dff0:	(bad)  
  41dff1:	fild   QWORD PTR [ebx+0x602530cc]
  41dff7:	push   ss
  41dff8:	push   esi
  41dff9:	jl     0x41e01f
  41dffb:	jl     0x41dfb7
  41dffd:	sti    
  41dffe:	or     DWORD PTR [eax],0xffffff8d
  41e001:	int3   
  41e002:	xchg   edi,eax
  41e003:	pop    ebp
  41e004:	xor    al,0x29
  41e006:	mov    ah,0x4f
  41e008:	xchg   esi,eax
  41e009:	fistp  WORD PTR [ebp+0x5e]
  41e00c:	or     esi,0x47
  41e00f:	cmp    DWORD PTR [eax],esp
  41e011:	sub    eax,0x7434a704
  41e016:	ins    DWORD PTR es:[edi],dx
  41e017:	pop    ss
  41e018:	inc    edi
  41e019:	or     BYTE PTR [edi],0xd3
  41e01c:	sub    eax,0x13955f2b
  41e021:	xor    al,0xdb
  41e023:	jnp    0x41dfb4
  41e025:	std    
  41e026:	mov    ebx,0x973ed93a
  41e02b:	jne    0x41dfc2
  41e02d:	xor    BYTE PTR ds:0xc9be26dc,bl
  41e033:	dec    edx
  41e034:	push   0x58f89db8
  41e039:	das    
  41e03a:	inc    ebx
  41e03b:	retf   
  41e03c:	mov    edi,0xba12356a
  41e041:	outs   dx,BYTE PTR ds:[esi]
  41e042:	cmp    DWORD PTR [esi],eax
  41e044:	ror    DWORD PTR [esi+0x2d],1
  41e047:	hlt    
  41e048:	addr16 push edi
  41e04a:	sbb    DWORD PTR [ebx],ecx
  41e04c:	imul   esi,DWORD PTR [ecx-0x31],0xfffffff9
  41e050:	add    BYTE PTR [ebx],0xf8
  41e053:	push   ebp
  41e054:	dec    eax
  41e055:	adc    al,0x9f
  41e057:	out    0xe1,al
  41e059:	sbb    ebx,DWORD PTR [edx+ecx*2+0x14]
  41e05d:	lds    esi,FWORD PTR [edx+0x4a9b39]
  41e063:	fnsave [ebx-0x1f]
  41e066:	out    0xfa,eax
  41e068:	lock jmp 0xe1cb:0xb1753ef7
  41e070:	pop    ds
  41e071:	arpl   WORD PTR cs:[ebx-0x2737e4cb],dx
  41e078:	scas   al,BYTE PTR es:[edi]
  41e079:	stos   DWORD PTR es:[edi],eax
  41e07a:	mov    ds:0x18457acd,al
  41e07f:	mov    bl,0x1a
  41e081:	xor    eax,0xddb5c9e3
  41e086:	dec    BYTE PTR [edx+0x311c0723]
  41e08c:	xchg   DWORD PTR [ebx-0xc8d544e],ebp
  41e092:	xchg   ecx,eax
  41e093:	sub    BYTE PTR [edi+0x574d1fa7],bh
  41e099:	out    dx,al
  41e09a:	dec    eax
  41e09b:	or     eax,0xd610a450
  41e0a0:	xor    al,0x90
  41e0a2:	jne    0x41e11b
  41e0a4:	aad    0x9c
  41e0a6:	mov    ebp,0xf44bc356
  41e0ab:	pop    es
  41e0ac:	in     al,0x59
  41e0ae:	dec    esp
  41e0af:	call   0xe835:0xce0aac16
  41e0b6:	es xchg edx,eax
  41e0b8:	ret    0xbf54
  41e0bb:	hlt    
  41e0bc:	ins    BYTE PTR es:[edi],dx
  41e0bd:	and    DWORD PTR [eax-0xbeacc5d],ecx
  41e0c3:	inc    ebx
  41e0c4:	mov    dh,0xa7
  41e0c6:	les    ebx,FWORD PTR [eax+0x4aa7c1c0]
  41e0cc:	retf   
  41e0cd:	xchg   esi,eax
  41e0ce:	loop   0x41e0af
  41e0d0:	xor    ecx,ebp
  41e0d2:	mov    ds:0xf4b9b46e,al
  41e0d7:	dec    esi
  41e0d8:	cld    
  41e0d9:	aas    
  41e0da:	xchg   ecx,eax
  41e0db:	mov    esp,0x311c4964
  41e0e0:	stos   DWORD PTR es:[edi],eax
  41e0e1:	pushf  
  41e0e2:	jmp    0x9e3f:0x22f2984a
  41e0e9:	mov    cl,bl
  41e0eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0ec:	add    DWORD PTR [edx+0x63f78046],ebp
  41e0f2:	dec    ebx
  41e0f3:	outs   dx,BYTE PTR ds:[esi]
  41e0f4:	fcom   QWORD PTR [ecx]
  41e0f6:	hlt    
  41e0f7:	xchg   BYTE PTR [ecx+0x42f23c24],ah
  41e0fd:	fld    TBYTE PTR [ebp+esi*1+0x72b7fcf1]
  41e104:	cmp    ebx,ecx
  41e106:	repnz add ah,BYTE PTR [edi-0x74]
  41e10a:	jg     0x41e0a8
  41e10c:	fiadd  DWORD PTR [edx-0x5a]
  41e10f:	aad    0xe0
  41e111:	dec    ebp
  41e112:	cmc    
  41e113:	int3   
  41e114:	sbb    eax,0xc6fb9a5b
  41e119:	push   0xe3f797ea
  41e11e:	pop    ebx
  41e11f:	cmp    DWORD PTR [esi-0x46],esi
  41e122:	and    eax,0x7df22102
  41e127:	mov    ebp,0xca612add
  41e12c:	pop    es
  41e12d:	aad    0xc0
  41e12f:	xchg   edx,eax
  41e130:	dec    esp
  41e131:	and    ch,bh
  41e133:	sbb    bh,BYTE PTR [edx-0x3a]
  41e136:	add    ecx,DWORD PTR [ebp+0xd]
  41e139:	pushf  
  41e13a:	out    dx,eax
  41e13b:	arpl   cx,ax
  41e13d:	push   0x7bc0b1f7
  41e142:	xchg   edx,eax
  41e143:	mov    ah,0xb3
  41e145:	mov    bh,0x0
  41e147:	popa   
  41e148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e149:	mov    al,0xb
  41e14b:	xor    esi,DWORD PTR ds:0x25d2bc3e
  41e151:	mov    al,ds:0x1c20ec6
  41e156:	sub    al,0x54
  41e158:	mov    dh,0xb8
  41e15a:	xchg   edx,eax
  41e15b:	pop    esi
  41e15c:	inc    edi
  41e15d:	adc    al,0xdc
  41e15f:	add    cl,dl
  41e161:	pushf  
  41e162:	adc    BYTE PTR [esi-0x4717894a],ah
  41e168:	xor    BYTE PTR [edi-0x7d29848f],0x2d
  41e16f:	or     edi,DWORD PTR [ebx]
  41e171:	sub    al,0x87
  41e173:	xchg   ebx,eax
  41e174:	sub    DWORD PTR [ebx+ebx*8-0x78],esp
  41e178:	mov    ah,0xd3
  41e17a:	sahf   
  41e17b:	mov    dh,0x65
  41e17d:	push   eax
  41e17e:	jle    0x41e11a
  41e180:	mov    eax,0x2ce8de02
  41e185:	addr16 xchg ecx,eax
  41e187:	mov    bl,0xa7
  41e189:	mov    esp,0x5a61c17d
  41e18e:	adc    al,0xfb
  41e190:	add    dh,BYTE PTR ss:[esi+0x422404ce]
  41e197:	add    eax,eax
  41e199:	pop    ecx
  41e19a:	popf   
  41e19b:	push   esp
  41e19c:	fld    TBYTE PTR [ebx]
  41e19e:	pop    eax
  41e19f:	loopne 0x41e202
  41e1a1:	and    DWORD PTR [eax],edx
  41e1a3:	mul    BYTE PTR ds:[edx+eax*4]
  41e1a7:	cli    
  41e1a8:	in     eax,dx
  41e1a9:	mov    al,0x7c
  41e1ab:	enter  0x181a,0x37
  41e1af:	dec    esi
  41e1b0:	sub    al,0x18
  41e1b2:	xchg   edi,eax
  41e1b3:	sub    esi,edx
  41e1b5:	jg     0x41e21a
  41e1b7:	popf   
  41e1b8:	cs int 0x27
  41e1bb:	sub    BYTE PTR [ecx+0x3],al
  41e1be:	add    DWORD PTR [ecx-0x54],edi
  41e1c1:	lock xchg edi,eax
  41e1c3:	(bad)  
  41e1c4:	xchg   edx,eax
  41e1c5:	xor    ebx,ecx
  41e1c7:	jns    0x41e1ad
  41e1c9:	dec    ebp
  41e1ca:	mov    ebp,0x6280d892
  41e1cf:	push   ds
  41e1d0:	loop   0x41e221
  41e1d2:	es repnz mov bh,0xba
  41e1d6:	add    BYTE PTR [edi+0x43c3636d],ah
  41e1dc:	loope  0x41e21c
  41e1de:	arpl   si,cx
  41e1e0:	loope  0x41e1b7
  41e1e2:	push   DWORD PTR [edi-0x57]
  41e1e5:	cli    
  41e1e6:	(bad)  
  41e1e7:	hlt    
  41e1e8:	jge    0x41e1e7
  41e1ea:	cmp    eax,0x37bce0ff
  41e1ef:	ficomp WORD PTR [edi+0x7f75b6da]
  41e1f5:	and    edx,DWORD PTR [esi-0x352a3ba9]
  41e1fb:	retf   
  41e1fc:	out    0xbb,al
  41e1fe:	bound  esp,QWORD PTR [esi]
  41e200:	aas    
  41e201:	xor    BYTE PTR [ebp+eax*2-0x2fc1383],bh
  41e208:	cli    
  41e209:	pop    ecx
  41e20a:	idiv   esi
  41e20c:	test   DWORD PTR [edx+ebp*8],edi
  41e20f:	push   edi
  41e210:	jns    0x41e1c4
  41e212:	push   cs
  41e213:	dec    BYTE PTR [esp+edx*8]
  41e216:	cwde   
  41e217:	inc    edi
  41e218:	inc    edi
  41e219:	mov    eax,ds:0xb8a382ea
  41e21e:	jmp    0x41e206
  41e220:	into   
  41e221:	adc    eax,0x78a75938
  41e226:	(bad)  
  41e227:	cmp    al,0x33
  41e229:	lods   eax,DWORD PTR ds:[esi]
  41e22a:	jns    0x41e1b1
  41e22c:	ret    
  41e22d:	xor    BYTE PTR [edi+0x29],0x58
  41e231:	jne    0x41e1e8
  41e233:	sbb    DWORD PTR [edi],esi
  41e235:	xor    esp,edx
  41e237:	daa    
  41e238:	popa   
  41e239:	push   esi
  41e23a:	loope  0x41e1fc
  41e23c:	ret    
  41e23d:	mov    al,0x93
  41e23f:	xchg   edx,eax
  41e240:	sbb    BYTE PTR [eax],al
  41e242:	inc    edx
  41e243:	ret    
  41e244:	mov    edi,0x43e4ba56
  41e249:	and    edx,DWORD PTR [ecx-0x5c7ce3dd]
  41e24f:	cwde   
  41e250:	sub    DWORD PTR [ebp-0xa164d1f],ebx
  41e256:	scas   eax,DWORD PTR es:[edi]
  41e257:	rcr    ebx,0xa7
  41e25a:	test   eax,0x6f92c360
  41e25f:	push   0x71
  41e261:	pop    esp
  41e262:	mov    ecx,0x8037f76b
  41e267:	cmc    
  41e268:	dec    BYTE PTR [ebp-0x50a7daa9]
  41e26e:	(bad)
  41e273:	cld    
  41e274:	daa    
  41e275:	fisttp DWORD PTR [edx+0x66]
  41e278:	adc    bh,al
  41e27a:	xchg   esp,eax
  41e27b:	or     eax,edi
  41e27d:	cs jno 0x41e222
  41e280:	add    esp,DWORD PTR [eax+0x6b]
  41e283:	push   ds
  41e284:	fsubp  st(3),st
  41e286:	cmp    ebp,DWORD PTR [edx]
  41e288:	dec    ecx
  41e289:	popf   
  41e28a:	pop    eax
  41e28b:	icebp  
  41e28c:	xor    edx,DWORD PTR [edx+0x41e83a79]
  41e292:	mov    ch,0xc8
  41e294:	rol    DWORD PTR [edx+0x40],0x85
  41e298:	lock and al,0xca
  41e29b:	sub    eax,0xb1ecfba7
  41e2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2a1:	pop    eax
  41e2a2:	int3   
  41e2a3:	push   es
  41e2a4:	shl    BYTE PTR [ebx],0x5d
  41e2a7:	lods   eax,DWORD PTR ds:[esi]
  41e2a8:	shl    BYTE PTR [ebx+0x6beedb9f],0x4d
  41e2af:	adc    eax,0x3f911fed
  41e2b4:	iret   
  41e2b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2b6:	jnp    0x41e2cf
  41e2b8:	retf   
  41e2b9:	mov    ebp,0xe9f56bc6
  41e2be:	ja     0x41e2b8
  41e2c0:	sbb    DWORD PTR [esp+edi*4-0x21],esi
  41e2c4:	push   ds
  41e2c5:	loopne 0x41e267
  41e2c7:	ja     0x41e275
  41e2c9:	xchg   ebp,eax
  41e2ca:	cmp    eax,0x218f9cea
  41e2cf:	aad    0x24
  41e2d1:	cli    
  41e2d2:	popf   
  41e2d3:	mov    ah,0x53
  41e2d5:	(bad)  
  41e2d6:	mov    edi,0x557303e6
  41e2db:	jnp    0x41e2ae
  41e2dd:	jo     0x41e2ac
  41e2df:	add    al,0x3c
  41e2e1:	ret    
  41e2e2:	or     esi,esi
  41e2e4:	mov    ds:0x942423c4,al
  41e2e9:	xchg   edx,eax
  41e2ea:	mov    dl,0xf0
  41e2ec:	cdq    
  41e2ed:	and    eax,0x4b24d2c9
  41e2f2:	jmp    0xd50f:0xf129f3fe
  41e2f9:	arpl   WORD PTR [ebp+0x4c2d5a88],di
  41e2ff:	pop    esi
  41e300:	sbb    edx,edi
  41e302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e303:	cld    
  41e304:	ins    DWORD PTR es:[edi],dx
  41e305:	mov    ecx,ecx
  41e307:	cld    
  41e308:	sbb    dh,bl
  41e30a:	jb     0x41e2b8
  41e30c:	cld    
  41e30d:	rol    BYTE PTR [ebp+0x3f76e72f],1
  41e313:	jle    0x41e307
  41e315:	and    eax,0xe775b132
  41e31a:	loop   0x41e332
  41e31c:	inc    eax
  41e31d:	es jns 0x41e37d
  41e320:	xor    BYTE PTR ds:0x26fe8f22,bh
  41e326:	dec    ebx
  41e327:	in     al,0xd0
  41e329:	push   0x5d
  41e32b:	cmp    BYTE PTR [eax+0x5e],ch
  41e32e:	sbb    al,0xda
  41e330:	sahf   
  41e331:	adc    ebx,ebx
  41e333:	or     eax,0x76eadfc4
  41e338:	loopne 0x41e338
  41e33a:	cmp    eax,0xcc49e37a
  41e33f:	mov    BYTE PTR [ecx-0x33],al
  41e342:	push   cs
  41e343:	das    
  41e344:	(bad)  
  41e345:	scas   al,BYTE PTR es:[edi]
  41e346:	jno    0x41e308
  41e348:	adc    al,0x46
  41e34a:	mov    ds:0x259edd1f,eax
  41e34f:	cmp    eax,0x8219c0d7
  41e354:	icebp  
  41e355:	mov    esp,0x19c526d
  41e35a:	lar    ecx,WORD PTR [esi+0xf]
  41e35e:	fimul  WORD PTR [esi-0x3d]
  41e361:	mov    ebp,0xabf21f5b
  41e366:	add    BYTE PTR [edi],ah
  41e368:	inc    edi
  41e369:	mov    edi,0x8087ce20
  41e36e:	push   0xe587f94f
  41e373:	stos   DWORD PTR es:[edi],eax
  41e374:	cmp    BYTE PTR [ebx-0x558776f9],bl
  41e37a:	pop    esp
  41e37b:	xor    eax,0xfebddf6c
  41e380:	pop    esi
  41e381:	xor    eax,edi
  41e383:	push   0x62
  41e385:	das    
  41e386:	loop   0x41e3cc
  41e388:	and    ch,dl
  41e38a:	pop    ecx
  41e38b:	mov    ebp,0xb490a2b3
  41e390:	dec    esp
  41e391:	mov    bl,0xcd
  41e393:	rcr    DWORD PTR [esp+edi*2+0x7d],cl
  41e397:	clc    
  41e398:	test   DWORD PTR [ebp+esi*2-0x2ca18d4e],edx
  41e39f:	into   
  41e3a0:	dec    eax
  41e3a1:	pushf  
  41e3a2:	gs iret 
  41e3a4:	add    cl,dl
  41e3a6:	ins    DWORD PTR es:[edi],dx
  41e3a7:	add    ah,BYTE PTR [esi-0x8e29104]
  41e3ad:	je     0x41e3ea
  41e3af:	test   BYTE PTR [edx],ch
  41e3b1:	fisubr DWORD PTR [esi-0x43]
  41e3b4:	fistp  DWORD PTR [esi-0x50]
  41e3b7:	(bad)  
  41e3b8:	sti    
  41e3b9:	shl    BYTE PTR [ebx+0x4e],0xc8
  41e3bd:	iret   
  41e3be:	div    BYTE PTR cs:[edi-0x5a]
  41e3c2:	les    edx,FWORD PTR [esp+ebp*1]
  41e3c5:	cmp    bh,BYTE PTR [edx-0x10a35fc2]
  41e3cb:	xchg   cx,ax
  41e3cd:	fwait
  41e3ce:	outs   dx,DWORD PTR ds:[esi]
  41e3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3d0:	sbb    edx,DWORD PTR [eax+0x72]
  41e3d3:	in     al,0xdc
  41e3d5:	clc    
  41e3d6:	or     bh,BYTE PTR [edi]
  41e3d8:	and    ebp,edi
  41e3da:	call   0x97c9ee19
  41e3df:	pop    ecx
  41e3e0:	(bad)  
  41e3e1:	push   ds
  41e3e2:	inc    esp
  41e3e3:	popa   
  41e3e4:	hlt    
  41e3e5:	aaa    
  41e3e6:	mov    ebx,0xb1aa0b8b
  41e3eb:	arpl   bx,si
  41e3ed:	(bad)  
  41e3ee:	js     0x41e450
  41e3f0:	(bad)  
  41e3f1:	pop    esp
  41e3f2:	sub    eax,0xa606dd9b
  41e3f7:	dec    ebp
  41e3f8:	xchg   ecx,eax
  41e3f9:	(bad)  
  41e3fa:	stos   DWORD PTR es:[edi],eax
  41e3fb:	popf   
  41e3fc:	pop    eax
  41e3fd:	lock sahf 
  41e3ff:	mov    bh,0x31
  41e401:	outs   dx,DWORD PTR ds:[esi]
  41e402:	repnz mov ebp,DWORD PTR [eax]
  41e405:	fwait
  41e406:	jo     0x41e3bf
  41e408:	in     eax,0xed
  41e40a:	and    ch,bl
  41e40c:	pop    ebx
  41e40d:	scas   eax,DWORD PTR es:[edi]
  41e40e:	je     0x41e3b5
  41e410:	inc    ebp
  41e411:	sbb    dh,bl
  41e413:	sub    al,0x89
  41e415:	mov    ?,ebx
  41e417:	aam    0x67
  41e419:	stos   DWORD PTR es:[edi],eax
  41e41a:	loop   0x41e44c
  41e41c:	retf   
  41e41d:	mov    cl,0xfc
  41e41f:	dec    ecx
  41e420:	mov    dl,0xe5
  41e422:	dec    edx
  41e423:	les    edi,FWORD PTR [edx-0x31]
  41e426:	mov    esp,0x527b0df3
  41e42b:	pusha  
  41e42c:	and    DWORD PTR [eax-0x2d],eax
  41e42f:	mov    edi,0x60153dcf
  41e434:	imul   ebp
  41e436:	jp     0x41e3d5
  41e438:	dec    ebx
  41e439:	push   cs
  41e43a:	xchg   esi,eax
  41e43b:	mov    ds:0xea335e29,eax
  41e440:	(bad)  
  41e441:	adc    cl,dh
  41e443:	repnz lods al,BYTE PTR ds:[esi]
  41e445:	sbb    DWORD PTR [ecx+0x40],ecx
  41e448:	push   ss
  41e449:	pop    esp
  41e44a:	sbb    BYTE PTR [ebp-0x77],ch
  41e44d:	pop    eax
  41e44e:	fisubr DWORD PTR [ecx-0x32ad4964]
  41e454:	xchg   DWORD PTR [ebx+ecx*2-0x6b],ecx
  41e458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e459:	gs or  al,0x27
  41e45c:	in     eax,dx
  41e45d:	inc    ebp
  41e45e:	push   ecx
  41e45f:	pop    edi
  41e460:	not    bh
  41e462:	mov    eax,DWORD PTR [edi-0x6d2a55f9]
  41e468:	(bad)  
  41e469:	mov    fs:0x946867cc,al
  41e46f:	fistp  WORD PTR [eax+0xe]
  41e472:	inc    ecx
  41e473:	xor    DWORD PTR [edi+0x22ac1403],ebx
  41e479:	mov    ebp,0x6639dce5
  41e47e:	and    DWORD PTR [edi+0x37c37842],ebp
  41e484:	xor    BYTE PTR [ecx-0x7e59f3e1],dl
  41e48a:	jo     0x41e4a4
  41e48c:	dec    ecx
  41e48d:	or     DWORD PTR [esi+0x6032e9cb],edi
  41e493:	add    eax,0xd4362f85
  41e498:	outs   dx,DWORD PTR ds:[esi]
  41e499:	cwde   
  41e49a:	pop    esi
  41e49b:	div    DWORD PTR [esp+ebp*2]
  41e49e:	mov    al,ds:0x57f9e017
  41e4a3:	and    ebp,DWORD PTR [esi-0x32f0dd54]
  41e4a9:	lea    eax,[ebp-0x52]
  41e4ac:	or     al,BYTE PTR [ebp+esi*1-0x58]
  41e4b0:	adc    edx,0x6e53bf6a
  41e4b6:	lds    ecx,FWORD PTR [ecx-0x67]
  41e4b9:	xchg   esp,eax
  41e4ba:	cmp    DWORD PTR [esi-0x2f1bf71d],0xffffff89
  41e4c1:	pop    edi
  41e4c2:	ret    
  41e4c3:	(bad)
  41e4c6:	mov    ds,ebp
  41e4c8:	sub    BYTE PTR [ecx+0x79],0xdc
  41e4cc:	mov    eax,0x34728764
  41e4d1:	mov    ebp,0x1f1b5af2
  41e4d6:	das    
  41e4d7:	jmp    edx
  41e4d9:	daa    
  41e4da:	jne    0x41e505
  41e4dc:	or     eax,0xa4bb296b
  41e4e1:	(bad)  
  41e4e2:	cli    
  41e4e3:	ficomp DWORD PTR [esi+0x67]
  41e4e6:	pop    ebx
  41e4e7:	rcl    BYTE PTR [edx],1
  41e4e9:	pushf  
  41e4ea:	int    0x58
  41e4ec:	fwait
  41e4ed:	iret   
  41e4ee:	xchg   edi,eax
  41e4ef:	nop
  41e4f0:	in     al,dx
  41e4f1:	xchg   al,dh
  41e4f3:	es (bad) 
  41e4f6:	jae    0x41e484
  41e4f8:	jp     0x41e4ce
  41e4fa:	add    ah,BYTE PTR [edx]
  41e4fc:	fidivr DWORD PTR [edi+0x70d9e92e]
  41e502:	int3   
  41e503:	mov    eax,ds:0xc331438c
  41e508:	sbb    eax,0x3ca4b525
  41e50d:	sbb    ah,0x7a
  41e510:	call   0x8bec9e0e
  41e515:	neg    BYTE PTR [edx]
  41e517:	les    edx,FWORD PTR [ebp-0x56a7140e]
  41e51d:	(bad)  
  41e51e:	rcl    DWORD PTR [esi+0x15],cl
  41e521:	mov    ecx,0x7470d32a
  41e526:	sbb    al,0x65
  41e528:	das    
  41e529:	jbe    0x41e58f
  41e52b:	push   ebx
  41e52c:	mov    ebp,?
  41e52e:	sub    al,0x24
  41e530:	mov    ebp,0x1dd5219f
  41e535:	sbb    DWORD PTR [ecx],edx
  41e537:	mov    dl,0xa9
  41e539:	arpl   WORD PTR [ecx+eax*1],si
  41e53c:	mov    WORD PTR [ecx-0x6d],es
  41e53f:	add    edx,DWORD PTR [ebx-0x1a]
  41e542:	std    
  41e543:	push   esp
  41e544:	dec    edi
  41e545:	loope  0x41e571
  41e547:	out    dx,eax
  41e548:	and    ebx,esp
  41e54a:	dec    esi
  41e54b:	sub    DWORD PTR [eax],0xf25a46fd
  41e551:	cld    
  41e552:	cli    
  41e553:	pop    edi
  41e554:	ds icebp 
  41e556:	ins    BYTE PTR es:[edi],dx
  41e557:	pop    eax
  41e558:	rcr    eax,cl
  41e55a:	jg     0x41e58c
  41e55c:	test   eax,0x7c182592
  41e561:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41e563:	sub    al,0xe2
  41e565:	jb     0x41e57b
  41e567:	cs in  eax,0x5a
  41e56a:	jge    0x41e513
  41e56c:	mov    ah,dh
  41e56e:	mov    ch,0x28
  41e570:	rcl    DWORD PTR [ebx+0x687ff64f],1
  41e576:	cmp    al,0xc2
  41e578:	or     DWORD PTR [eax+0x74155214],edx
  41e57e:	mov    al,BYTE PTR [edx]
  41e580:	fcmovu st,st(0)
  41e582:	and    al,0x8a
  41e584:	mov    ebx,0xd417e176
  41e589:	mov    esi,0xf2d72e26
  41e58e:	(bad)  
  41e58f:	in     al,0x11
  41e591:	idiv   BYTE PTR [ebp-0x11]
  41e594:	push   ebx
  41e595:	in     al,0xa2
  41e597:	and    esp,DWORD PTR [ecx]
  41e599:	cld    
  41e59a:	sub    DWORD PTR [ebx+ebx*8-0xb],0x5f
  41e59f:	xchg   esp,eax
  41e5a0:	bound  edi,QWORD PTR [edi+ecx*8+0x1f]
  41e5a4:	mov    DWORD PTR [ecx],0x435ecd8b
  41e5aa:	mov    esp,0x644c3c3a
  41e5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5b0:	inc    ebp
  41e5b1:	sub    al,0x39
  41e5b3:	stc    
  41e5b4:	cs int 0x1f
  41e5b7:	mov    bl,0x2
  41e5b9:	and    eax,0xe7220d4c
  41e5be:	iret   
  41e5bf:	retf   0x8ed
  41e5c2:	add    eax,0xa14075c4
  41e5c7:	jne    0x41e5d3
  41e5c9:	or     DWORD PTR [edi],0x2c0a3318
  41e5cf:	mov    ebx,0x4ccfab96
  41e5d4:	xor    eax,0xdf216372
  41e5d9:	cmc    
  41e5da:	mov    ds:0xdb9ae026,al
  41e5df:	popa   
  41e5e0:	xor    al,0x33
  41e5e2:	and    al,0x76
  41e5e4:	shl    BYTE PTR [ebp+0x54239484],1
  41e5ea:	in     al,0x5
  41e5ec:	push   cs
  41e5ed:	js     0x41e60b
  41e5ef:	sbb    eax,0xfbeebf6b
  41e5f4:	dec    ebp
  41e5f5:	(bad)  
  41e5f6:	jmp    0x6cd7:0xf29e1c36
  41e5fd:	mov    dh,0xff
  41e5ff:	add    DWORD PTR [ecx],eax
  41e601:	mov    bl,0x55
  41e603:	mov    al,ds:0x7cd9afb6
  41e608:	out    0x38,al
  41e60a:	out    0xcd,al
  41e60c:	add    al,al
  41e60e:	(bad)  
  41e60f:	push   es
  41e610:	push   cs
  41e611:	frstor [esi+0x47692782]
  41e617:	popa   
  41e618:	int    0xc9
  41e61a:	pop    esi
  41e61b:	sbb    DWORD PTR [esi+0x2b],ebp
  41e61e:	xchg   edx,eax
  41e61f:	adc    DWORD PTR [eax+0x54],0x13ac2dbf
  41e626:	jns    0x41e622
  41e628:	xor    ch,bh
  41e62a:	loope  0x41e619
  41e62c:	sub    bl,BYTE PTR [ebp-0x2fc6ebbb]
  41e632:	pop    ss
  41e633:	fisub  WORD PTR [ebx-0x51]
  41e636:	cli    
  41e637:	js     0x41e602
  41e639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e63a:	inc    ebp
  41e63b:	adc    ah,ah
  41e63d:	loope  0x41e6a3
  41e63f:	lea    esp,[ecx+0x57]
  41e642:	pop    ds
  41e643:	pop    edx
  41e644:	dec    edi
  41e645:	das    
  41e646:	repnz adc edx,DWORD PTR [ebp-0x5cd5f77f]
  41e64d:	sub    dl,BYTE PTR [edx]
  41e64f:	(bad)  
  41e650:	xchg   esi,eax
  41e651:	pop    ebp
  41e652:	dec    esp
  41e653:	xor    cl,0xc9
  41e656:	out    0xc5,eax
  41e658:	and    eax,0xde9a6382
  41e65d:	pop    esp
  41e65e:	pop    ebx
  41e65f:	mov    BYTE PTR [edi],dh
  41e661:	inc    ebx
  41e662:	pop    ss
  41e663:	test   eax,0x22ce5191
  41e668:	enter  0xc922,0x21
  41e66c:	pop    ecx
  41e66d:	jmp    0x8c9b:0xb6bb2873
  41e674:	cld    
  41e675:	(bad)  
  41e676:	out    0xad,al
  41e678:	cmp    eax,0x3c9c780a
  41e67d:	inc    esp
  41e67e:	fcom   DWORD PTR [edx]
  41e680:	push   esi
  41e681:	test   bh,ch
  41e683:	inc    ebx
  41e684:	jb     0x41e657
  41e686:	out    0xcb,eax
  41e688:	adc    al,0xf9
  41e68a:	pop    eax
  41e68b:	in     al,0x83
  41e68d:	dec    ecx
  41e68e:	pop    ds
  41e68f:	loop   0x41e701
  41e691:	cmp    ch,BYTE PTR [ebx]
  41e693:	push   0x4be53f46
  41e698:	push   edx
  41e699:	nop
  41e69a:	in     eax,0xaf
  41e69c:	int    0xec
  41e69e:	mov    BYTE PTR [ecx-0x57],ch
  41e6a1:	or     BYTE PTR [ebp+0x35],dl
  41e6a4:	xor    dh,BYTE PTR [ebx*1-0x2d53f90]
  41e6ab:	pop    ebp
  41e6ac:	sub    DWORD PTR [edi+0x239d874e],ebp
  41e6b2:	and    DWORD PTR [eax+0x3],ecx
  41e6b5:	(bad)  
  41e6b6:	(bad)  
  41e6b7:	push   0x2750b28f
  41e6bc:	call   0x7270:0xcc69b37a
  41e6c3:	imul   esp,esi,0xd1353064
  41e6c9:	add    esi,ebp
  41e6cb:	fwait
  41e6cc:	xlat   BYTE PTR ds:[ebx]
  41e6cd:	ja     0x41e665
  41e6cf:	lods   eax,DWORD PTR ds:[esi]
  41e6d0:	xchg   esp,eax
  41e6d1:	dec    BYTE PTR [edi+ebx*8-0x12]
  41e6d5:	scas   al,BYTE PTR es:[edi]
  41e6d6:	iret   
  41e6d7:	icebp  
  41e6d8:	xchg   DWORD PTR [ecx+0x20dfff74],edx
  41e6de:	cmp    eax,0x591c6a18
  41e6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e4:	fwait
  41e6e5:	push   cs
  41e6e6:	icebp  
  41e6e7:	aas    
  41e6e8:	jp     0x41e686
  41e6ea:	rcr    BYTE PTR [esi+0x11651539],cl
  41e6f0:	les    edi,FWORD PTR [ebp+0x66]
  41e6f3:	ds push edx
  41e6f5:	(bad)  
  41e6f6:	sub    al,0xaf
  41e6f8:	stos   DWORD PTR es:[edi],eax
  41e6f9:	cli    
  41e6fa:	cmp    esi,DWORD PTR [edi-0x71]
  41e6fd:	bound  eax,QWORD PTR [ebx]
  41e6ff:	jle    0x41e69d
  41e701:	xchg   ebp,eax
  41e702:	ss push esi
  41e704:	xor    dh,0x77
  41e707:	pop    esp
  41e708:	int    0x98
  41e70a:	out    dx,eax
  41e70b:	xchg   ebx,eax
  41e70c:	sbb    eax,0xb8931fa1
  41e711:	fwait
  41e712:	dec    eax
  41e713:	dec    ebx
  41e714:	clc    
  41e715:	repz push eax
  41e717:	inc    bl
  41e719:	add    al,0x4e
  41e71b:	jg     0x41e6fd
  41e71d:	pop    edx
  41e71e:	iret   
  41e71f:	adc    al,0xa6
  41e721:	(bad)  
  41e722:	js     0x41e70a
  41e724:	ret    
  41e725:	sbb    BYTE PTR [ecx-0x3db312ce],ah
  41e72b:	mov    eax,ds:0xf96af2c5
  41e730:	mov    ah,0x47
  41e732:	les    esp,FWORD PTR [ecx]
  41e734:	pop    ss
  41e735:	outs   dx,BYTE PTR ds:[esi]
  41e736:	inc    ebp
  41e737:	pop    eax
  41e738:	fs mov al,0xa6
  41e73b:	jne    0x41e750
  41e73d:	pop    edi
  41e73e:	imul   esp,DWORD PTR [ebp+0x76],0x9be1b1cc
  41e745:	loope  0x41e7a2
  41e747:	mov    dh,0xb5
  41e749:	stos   DWORD PTR es:[edi],eax
  41e74a:	dec    edx
  41e74b:	sub    ch,dh
  41e74d:	and    DWORD PTR [edi+0xabe800c],ebp
  41e753:	cs cmc 
  41e755:	adc    cl,BYTE PTR [edi+eiz*4-0x5a17b6a2]
  41e75c:	outs   dx,BYTE PTR ds:[esi]
  41e75d:	fiadd  WORD PTR ds:0x3a0d7188
  41e763:	outs   dx,DWORD PTR ds:[esi]
  41e764:	adc    esi,DWORD PTR ds:0xb6ecaaa5
  41e76a:	daa    
  41e76b:	inc    eax
  41e76c:	popa   
  41e76d:	push   0xdb93b2a1
  41e772:	mov    eax,0xc13ebc80
  41e777:	pop    edx
  41e778:	arpl   WORD PTR [ebx],si
  41e77a:	loopne 0x41e7b4
  41e77c:	lods   al,BYTE PTR ds:[esi]
  41e77d:	mov    ebx,0x831dab3e
  41e782:	mov    BYTE PTR [ecx+edi*4],al
  41e785:	out    dx,eax
  41e786:	(bad)  
  41e787:	clc    
  41e788:	mov    ?,ebp
  41e78a:	dec    eax
  41e78b:	xchg   ecx,eax
  41e78c:	hlt    
  41e78d:	aaa    
  41e78e:	pop    esi
  41e78f:	aad    0xf2
  41e791:	fmul   QWORD PTR [ecx]
  41e793:	jb     0x41e773
  41e795:	test   eax,0x7f77e431
  41e79a:	mov    bl,0x43
  41e79c:	sbb    BYTE PTR [eax-0x5da331c9],0xc5
  41e7a3:	fiadd  WORD PTR [eax]
  41e7a5:	xchg   DWORD PTR cs:[esi-0x45114645],esi
  41e7ac:	sub    dh,dh
  41e7ae:	mov    ah,0x44
  41e7b0:	aad    0xa5
  41e7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7b3:	cmp    cl,BYTE PTR [ecx-0x34bf5f92]
  41e7b9:	adc    al,0xa3
  41e7bb:	push   0x25f5db6c
  41e7c0:	aam    0x84
  41e7c2:	cmc    
  41e7c3:	cmp    BYTE PTR ds:0xfda7670b,0xa5
  41e7ca:	adc    eax,0x82fa83fa
  41e7cf:	sar    BYTE PTR [ebx+0x7cf74d94],0x23
  41e7d6:	add    dh,BYTE PTR [edi+0x4789286]
  41e7dc:	rcl    eax,1
  41e7de:	enter  0xe588,0x5d
  41e7e2:	dec    ebp
  41e7e3:	scas   eax,DWORD PTR es:[edi]
  41e7e4:	ins    BYTE PTR es:[edi],dx
  41e7e5:	imul   ebx,DWORD PTR [edx],0xfffffff1
  41e7e8:	(bad)  
  41e7ea:	or     al,0x3d
  41e7ec:	movnti DWORD PTR es:[edx-0x50],ebx
  41e7f1:	mov    eax,ds:0x6367a9a3
  41e7f6:	and    edx,edi
  41e7f8:	shr    DWORD PTR [ebp+0x4fc4c988],1
  41e7fe:	aas    
  41e7ff:	push   edi
  41e800:	xor    al,0xd2
  41e802:	or     BYTE PTR [ebx+0x1f],0x53
  41e806:	and    esi,DWORD PTR [edx]
  41e808:	iret   
  41e809:	call   FWORD PTR [eax+0x65]
  41e80c:	adc    eax,0x36798242
  41e811:	popf   
  41e812:	xor    dh,BYTE PTR [ecx+0x19d8a023]
  41e818:	jecxz  0x41e817
  41e81a:	xor    cl,al
  41e81c:	das    
  41e81d:	cmp    al,0x10
  41e81f:	lds    eax,FWORD PTR [edi]
  41e821:	mov    ebx,0x2d423d59
  41e826:	out    dx,eax
  41e827:	clc    
  41e828:	and    al,0xa8
  41e82a:	lahf   
  41e82b:	xor    dl,BYTE PTR [esp+edx*2-0x3b4c78f8]
  41e832:	js     0x41e7de
  41e834:	test   BYTE PTR [ebx-0x13],dh
  41e837:	jnp    0x41e828
  41e839:	push   0x49717624
  41e83e:	and    ecx,DWORD PTR [esp+edx*1+0x1b]
  41e842:	iret   
  41e843:	dec    eax
  41e844:	jecxz  0x41e8a8
  41e846:	outs   dx,BYTE PTR ds:[esi]
  41e847:	lds    ecx,FWORD PTR [eax+0x4aa1264b]
  41e84d:	push   ds
  41e84e:	popa   
  41e84f:	out    0x26,al
  41e851:	(bad)  
  41e852:	retf   
  41e853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e854:	cli    
  41e855:	sbb    BYTE PTR [esi-0x30],bl
  41e858:	jecxz  0x41e8be
  41e85a:	jle    0x41e8c8
  41e85c:	jns    0x41e814
  41e85e:	in     eax,dx
  41e85f:	icebp  
  41e860:	aas    
  41e861:	arpl   WORD PTR ss:[esi],bx
  41e864:	jg     0x41e81e
  41e866:	push   ds
  41e867:	xchg   ecx,eax
  41e868:	cmc    
  41e869:	mov    bh,0xb
  41e86b:	push   edi
  41e86c:	xor    al,0xb6
  41e86e:	test   DWORD PTR [esi-0x78],eax
  41e871:	cmp    BYTE PTR [edx],bh
  41e873:	daa    
  41e874:	push   0xffffffab
  41e876:	xor    bh,BYTE PTR [ebp*4-0x6029b9b2]
  41e87d:	dec    esi
  41e87e:	cdq    
  41e87f:	pop    ss
  41e880:	jns    0x41e873
  41e882:	neg    DWORD PTR [ecx]
  41e884:	jno    0x41e886
  41e886:	xor    ecx,esi
  41e888:	mov    ebx,0x6ec456a1
  41e88d:	enter  0x4922,0x59
  41e891:	std    
  41e892:	test   al,0x25
  41e894:	aas    
  41e895:	inc    esi
  41e896:	or     al,0x6e
  41e898:	nop
  41e899:	cwde   
  41e89a:	mov    eax,ds:0xaffd0370
  41e89f:	out    dx,al
  41e8a0:	retf   
  41e8a1:	xchg   BYTE PTR [ecx-0x66dc6f2],al
  41e8a7:	pop    es
  41e8a8:	dec    esp
  41e8a9:	jb     0x41e896
  41e8ab:	cli    
  41e8ac:	int3   
  41e8ad:	push   ecx
  41e8ae:	xchg   edi,eax
  41e8af:	call   0x81f1:0x4108d60b
  41e8b6:	cmp    al,0x65
  41e8b8:	mov    DWORD PTR [eax+0x65],ebp
  41e8bb:	(bad)
  41e8c0:	jbe    0x41e936
  41e8c2:	popa   
  41e8c3:	repz add BYTE PTR [edx+0x5e390d],dh
  41e8ca:	(bad)
  41e8cf:	mov    ah,0x3a
  41e8d1:	dec    edi
  41e8d2:	or     cl,bl
  41e8d4:	jbe    0x41e915
  41e8d6:	out    dx,eax
  41e8d7:	dec    esp
  41e8d8:	push   esi
  41e8d9:	jmp    0x41e931
  41e8db:	xor    ecx,DWORD PTR [ebp+0x544857e0]
  41e8e1:	pop    esp
  41e8e2:	sbb    DWORD PTR [eax-0x22439251],ecx
  41e8e8:	cmp    BYTE PTR [edi-0x59],bl
  41e8eb:	jmp    0x4378dd45
  41e8f0:	sub    eax,edx
  41e8f2:	jae    0x41e8b9
  41e8f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f5:	pusha  
  41e8f6:	(bad)  
  41e8f7:	out    0xbd,eax
  41e8f9:	mov    WORD PTR [edi],gs
  41e8fb:	iret   
  41e8fc:	mov    ch,0x2a
  41e8fe:	push   edi
  41e8ff:	pminsw mm0,QWORD PTR [ebx]
  41e902:	dec    esp
  41e903:	adc    DWORD PTR [esi-0x47a5f45c],eax
  41e909:	ret    0x9543
  41e90c:	mov    dl,0x1e
  41e90e:	mov    eax,ds:0x5f951b73
  41e913:	repz mov edi,0x97473cc9
  41e919:	test   al,0xe5
  41e91b:	sar    DWORD PTR [eax+ecx*2],0x25
  41e91f:	hlt    
  41e920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e921:	mov    dh,0x82
  41e923:	sahf   
  41e924:	mov    cs,WORD PTR [ecx]
  41e926:	jmp    0x41e945
  41e928:	popf   
  41e929:	data16 sbb al,BYTE PTR [ecx+0x29]
  41e92d:	dec    ebx
  41e92e:	sti    
  41e92f:	adc    BYTE PTR [edi-0x4e],al
  41e932:	adc    BYTE PTR [ebx],dh
  41e934:	cmc    
  41e935:	and    eax,0x2497291b
  41e93a:	inc    ebx
  41e93b:	jmp    0x41e9a5
  41e93d:	sub    eax,0xf5e67e74
  41e942:	fild   WORD PTR [ebx+edi*8+0x2c]
  41e946:	lods   eax,DWORD PTR ds:[esi]
  41e947:	iret   
  41e948:	fimul  WORD PTR [ecx]
  41e94a:	sahf   
  41e94b:	jmp    0x27ff309b
  41e950:	shl    BYTE PTR [edx+0x69],1
  41e953:	push   0x4a
  41e955:	(bad)  
  41e956:	dec    ecx
  41e957:	idiv   DWORD PTR [esi-0x25]
  41e95a:	add    al,0xff
  41e95c:	fidiv  DWORD PTR [eax-0x14474512]
  41e962:	inc    ebp
  41e963:	test   DWORD PTR [edi-0x65],ebx
  41e966:	retf   0x83e0
  41e969:	arpl   WORD PTR [ecx-0x58e7464e],si
  41e96f:	or     bl,ch
  41e971:	lods   eax,DWORD PTR ds:[esi]
  41e972:	outs   dx,DWORD PTR ds:[esi]
  41e973:	daa    
  41e974:	mov    esp,0xbf488c9e
  41e979:	cmp    ebp,0x95ad2905
  41e97f:	mov    DWORD PTR [ebx-0x28f5d477],eax
  41e985:	dec    edi
  41e986:	mov    esi,0xa94b9440
  41e98b:	xor    DWORD PTR [ebx+0x45872a62],edx
  41e991:	inc    eax
  41e992:	and    ebx,DWORD PTR [edx+0x1314dee6]
  41e998:	ror    BYTE PTR [eax],cl
  41e99a:	adc    DWORD PTR [ebx+0xf0ca12],esp
  41e9a0:	xchg   edx,eax
  41e9a1:	inc    esi
  41e9a2:	push   ebp
  41e9a3:	shr    ch,1
  41e9a5:	pop    eax
  41e9a6:	inc    edx
  41e9a7:	jmp    0xd01e:0x68e44db8
  41e9ae:	jge    0x41e95c
  41e9b0:	cmp    al,0xbf
  41e9b2:	cmp    ah,BYTE PTR [ecx]
  41e9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9b5:	pop    edx
  41e9b6:	pop    ds
  41e9b7:	stc    
  41e9b8:	push   edi
  41e9b9:	gs inc esp
  41e9bb:	push   ecx
  41e9bc:	je     0x41e995
  41e9be:	cmp    dh,cl
  41e9c0:	push   es
  41e9c1:	mov    eax,0xc48d2fab
  41e9c6:	das    
  41e9c7:	stos   BYTE PTR es:[edi],al
  41e9c8:	test   BYTE PTR [esi-0x46dcd5ba],ah
  41e9ce:	cdq    
  41e9cf:	pop    es
  41e9d0:	dec    esp
  41e9d1:	mov    DWORD PTR [ebx],eax
  41e9d3:	test   dh,bh
  41e9d5:	ja     0x41e9af
  41e9d7:	jbe    0x41e9cf
  41e9d9:	mov    bh,0x4b
  41e9db:	ins    BYTE PTR es:[edi],dx
  41e9dc:	xor    BYTE PTR [esi-0x5b583d41],ch
  41e9e2:	es jmp 0x9e2173fa
  41e9e8:	mov    ecx,0xab6255b6
  41e9ed:	jne    0x41e9d5
  41e9ef:	mov    bh,0xf3
  41e9f1:	pop    es
  41e9f2:	pop    esi
  41e9f3:	cmc    
  41e9f4:	(bad)  
  41e9f5:	jmp    0xdd261202
  41e9fa:	fcomp  QWORD PTR [ecx]
  41e9fc:	add    al,0x55
  41e9fe:	ret    
  41e9ff:	push   cs
  41ea00:	inc    ebx
  41ea01:	addps  xmm4,XMMWORD PTR [ecx+0x7a]
  41ea05:	cmp    esi,DWORD PTR [ebp-0xf5ffd8f]
  41ea0b:	(bad)  
  41ea0c:	add    ah,BYTE PTR [edi]
  41ea0e:	dec    esi
  41ea0f:	jecxz  0x41ea20
  41ea11:	dec    esi
  41ea12:	retf   0x64c0
  41ea15:	push   ebx
  41ea16:	xor    al,0xd3
  41ea18:	or     DWORD PTR [ecx+ecx*8+0xc],eax
  41ea1c:	or     DWORD PTR [esi],ecx
  41ea1e:	retf   
  41ea1f:	scas   eax,DWORD PTR es:[edi]
  41ea20:	ja     0x41ea47
  41ea22:	stos   BYTE PTR es:[edi],al
  41ea23:	div    dl
  41ea25:	lods   eax,DWORD PTR ds:[esi]
  41ea26:	shr    edx,1
  41ea28:	and    BYTE PTR [ebx-0x2f],0x31
  41ea2c:	fucomp st(1)
  41ea2e:	cld    
  41ea2f:	sbb    dl,BYTE PTR [edx]
  41ea31:	jecxz  0x41e9c7
  41ea33:	mov    eax,ds:0xa5d39dba
  41ea38:	add    ch,BYTE PTR [ebx-0x53]
  41ea3b:	cli    
  41ea3c:	inc    ebp
  41ea3d:	lods   al,BYTE PTR ds:[esi]
  41ea3e:	push   edi
  41ea3f:	jbe    0x41ea24
  41ea41:	mov    ah,0x85
  41ea43:	cmp    eax,0xad22888b
  41ea48:	xchg   ebx,eax
  41ea49:	cmp    DWORD PTR [ebp-0x50583a59],eax
  41ea4f:	push   ebp
  41ea50:	mov    edi,?
  41ea52:	ins    DWORD PTR es:[edi],dx
  41ea53:	jns    0x41ea84
  41ea55:	push   ds
  41ea56:	ins    DWORD PTR es:[edi],dx
  41ea57:	sub    al,0xd
  41ea59:	sub    bl,BYTE PTR [ebp+0x2]
  41ea5c:	repnz inc eax
  41ea5e:	sar    DWORD PTR [ebx],1
  41ea60:	and    eax,0xf030882a
  41ea65:	loop   0x41ea53
  41ea67:	and    edi,ebp
  41ea69:	daa    
  41ea6a:	ins    BYTE PTR es:[edi],dx
  41ea6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea6c:	dec    ecx
  41ea6d:	(bad)  
  41ea6e:	fnstcw WORD PTR [ecx+0x4fe252d3]
  41ea74:	mov    eax,0xf633efee
  41ea79:	add    dl,BYTE PTR [edi]
  41ea7b:	push   ecx
  41ea7c:	loopne 0x41ea05
  41ea7e:	pop    ebx
  41ea7f:	mov    dh,0xf7
  41ea81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea82:	jo     0x41ea3a
  41ea84:	pop    ecx
  41ea85:	ins    DWORD PTR es:[edi],dx
  41ea86:	fmul   st(7),st
  41ea88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea89:	jmp    0x474d216d
  41ea8e:	call   0x4a41:0xb3de5cf
  41ea95:	mov    cl,0xea
  41ea97:	mov    eax,ds:0xf2af4a68
  41ea9c:	int3   
  41ea9d:	jns    0x41ea9a
  41ea9f:	mov    al,0xe6
  41eaa1:	(bad)  
  41eaa2:	fbld   TBYTE PTR [ebp+0x4986e641]
  41eaa8:	mov    ecx,0x80e16be6
  41eaad:	dec    ebp
  41eaae:	pop    esp
  41eaaf:	fbstp  TBYTE PTR [ebp+0x54fd6d3]
  41eab5:	adc    edx,DWORD PTR [ecx+eiz*2]
  41eab8:	jae    0x41ea82
  41eaba:	fxam   
  41eabc:	cmp    al,0x73
  41eabe:	mov    WORD PTR [edi-0x8],fs
  41eac1:	or     bl,BYTE PTR [esi-0x630cc9f3]
  41eac7:	jb     0x41eab6
  41eac9:	or     eax,0x2bb1e3d5
  41eace:	mov    ds:0xd3d3e530,al
  41ead3:	scas   al,BYTE PTR es:[edi]
  41ead4:	xor    BYTE PTR [edi+0x36],al
  41ead7:	push   ecx
  41ead8:	or     dh,BYTE PTR [ebp+0x393e2e34]
  41eade:	pop    ss
  41eadf:	jne    0x41ea98
  41eae1:	scas   eax,DWORD PTR es:[edi]
  41eae2:	call   0xa9db:0xdf355a45
  41eae9:	push   ds
  41eaea:	dec    esp
  41eaeb:	xlat   BYTE PTR ds:[ebx]
  41eaec:	(bad)  
  41eaee:	fs jecxz 0x41eb38
  41eaf1:	mul    BYTE PTR [eax+0x2c]
  41eaf4:	jo     0x41eaef
  41eaf6:	sub    al,0xea
  41eaf8:	add    DWORD PTR [esi-0x6f],ebp
  41eafb:	popa   
  41eafc:	in     al,dx
  41eafd:	stos   BYTE PTR es:[edi],al
  41eafe:	ins    DWORD PTR es:[edi],dx
  41eaff:	arpl   di,sp
  41eb01:	jmp    0xe03e:0x62477d36
  41eb08:	rol    DWORD PTR [ebx],1
  41eb0a:	btc    eax,esi
  41eb0d:	(bad)
  41eb11:	pop    es
  41eb12:	cmp    ah,0xe
  41eb15:	scas   al,BYTE PTR es:[edi]
  41eb16:	test   eax,0xca07303b
  41eb1b:	clc    
  41eb1c:	inc    edi
  41eb1d:	(bad)  
  41eb1e:	out    dx,al
  41eb1f:	mov    ebp,0xe40b0366
  41eb24:	add    dh,BYTE PTR [edi+0x7d]
  41eb27:	pop    ds
  41eb28:	jb     0x41eb7e
  41eb2a:	retf   
  41eb2b:	pop    eax
  41eb2c:	mov    DWORD PTR [edi+0x6],edx
  41eb2f:	mov    ebx,0xea44ea80
  41eb34:	xlat   BYTE PTR gs:[ebx]
  41eb36:	aaa    
  41eb37:	or     esi,edi
  41eb39:	push   eax
  41eb3a:	adc    al,0x50
  41eb3c:	cld    
  41eb3d:	mov    edi,0xc59e8dc2
  41eb42:	jno    0x41eb68
  41eb44:	xchg   esp,eax
  41eb45:	std    
  41eb46:	add    DWORD PTR [ebx+0x3a0e84f],eax
  41eb4c:	hlt    
  41eb4d:	sti    
  41eb4e:	push   ecx
  41eb4f:	xlat   BYTE PTR ds:[ebx]
  41eb50:	sbb    BYTE PTR ds:0x5fa41fae,ah
  41eb56:	fbstp  TBYTE PTR [edx-0x1]
  41eb59:	out    0x5c,eax
  41eb5b:	out    dx,eax
  41eb5c:	fst    DWORD PTR [esi]
  41eb5e:	icebp  
  41eb5f:	lea    ebp,[ecx]
  41eb61:	xchg   edi,eax
  41eb62:	xor    dh,BYTE PTR [ebx]
  41eb64:	loopne 0x41eb0e
  41eb66:	jp     0x41eb35
  41eb68:	or     DWORD PTR [eax+ebp*4],edx
  41eb6b:	int    0xed
  41eb6d:	pusha  
  41eb6e:	dec    edx
  41eb6f:	arpl   WORD PTR [edx-0x74],si
  41eb72:	pop    eax
  41eb73:	add    eax,0x60533964
  41eb78:	or     edx,ecx
  41eb7a:	jae    0x41ebe8
  41eb7c:	shl    esi,0x6c
  41eb7f:	mov    dh,0xbe
  41eb81:	data16 fdiv QWORD PTR [eax+0x68]
  41eb85:	sub    edx,eax
  41eb87:	jnp    0x41eb74
  41eb89:	jle    0x41eb7b
  41eb8b:	cmp    al,0xae
  41eb8d:	mov    bh,0x69
  41eb8f:	ret    0xca89
  41eb92:	xor    BYTE PTR [eax+ebx*1],ch
  41eb95:	mov    dl,0x91
  41eb97:	inc    ebp
  41eb98:	sbb    DWORD PTR [ebp-0x1a],0xe3723c9
  41eb9f:	sub    DWORD PTR [ebx+ebp*1-0x448fcd30],esp
  41eba6:	sbb    DWORD PTR [ecx-0x1ac1c1ba],0x733e4a52
  41ebb0:	pop    ss
  41ebb1:	icebp  
  41ebb2:	sbb    esp,edx
  41ebb4:	out    0x6d,eax
  41ebb6:	sbb    BYTE PTR [edx],dl
  41ebb8:	push   esi
  41ebb9:	scas   eax,DWORD PTR es:[edi]
  41ebba:	ret    
  41ebbb:	push   es
  41ebbc:	lods   al,BYTE PTR ds:[esi]
  41ebbd:	(bad)  [eax+edx*8]
  41ebc0:	cmp    BYTE PTR [ebp+0x3e],0xe6
  41ebc4:	mov    ds:0xe0d749d,eax
  41ebc9:	mov    eax,ds:0xfd3c340f
  41ebce:	(bad)  
  41ebcf:	cmp    eax,0x9aba5149
  41ebd4:	test   DWORD PTR [ebx],eax
  41ebd6:	jmp    0x41eb8f
  41ebd8:	push   ss
  41ebd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebda:	addr16 adc ebp,ebp
  41ebdd:	popf   
  41ebde:	mul    DWORD PTR [ebp+0x6445bb6d]
  41ebe4:	xchg   esp,eax
  41ebe5:	retf   0x4f44
  41ebe8:	sub    bh,al
  41ebea:	pusha  
  41ebeb:	adc    BYTE PTR [esi+0x7],bl
  41ebee:	push   0xa0755568
  41ebf3:	fldcw  WORD PTR [ebx]
  41ebf5:	xchg   esp,eax
  41ebf6:	mov    ebx,0x361e963f
  41ebfb:	fstp   DWORD PTR [ecx-0x184f271e]
  41ec01:	fisttp QWORD PTR [edi+0x69]
  41ec04:	sti    
  41ec05:	xchg   ecx,eax
  41ec06:	xor    ch,BYTE PTR gs:[ebp+0xa92a1dc]
  41ec0d:	mov    dh,0x97
  41ec0f:	mov    edx,0x8d7930d2
  41ec14:	sbb    eax,0xda8ac04
  41ec19:	les    esi,FWORD PTR [ebp+0xf1ae84]
  41ec1f:	mov    dh,0x70
  41ec21:	rcr    BYTE PTR [ebp+0x7a],cl
  41ec24:	scas   al,BYTE PTR es:[edi]
  41ec25:	mov    bl,0x5
  41ec27:	and    cl,dh
  41ec29:	aas    
  41ec2a:	clc    
  41ec2b:	inc    edx
  41ec2c:	cdq    
  41ec2d:	push   ds
  41ec2e:	xchg   esp,eax
  41ec2f:	ret    0x639b
  41ec32:	aaa    
  41ec33:	xor    eax,0xf1054754
  41ec38:	sub    ebx,ebx
  41ec3a:	mov    ah,0xb5
  41ec3c:	loope  0x41ec6c
  41ec3e:	into   
  41ec3f:	mov    dl,0x3b
  41ec41:	pop    ecx
  41ec42:	ins    BYTE PTR es:[edi],dx
  41ec43:	pop    es
  41ec44:	xchg   ebx,eax
  41ec45:	sar    BYTE PTR [edx+0x5d49fc8d],cl
  41ec4b:	pop    esp
  41ec4c:	jecxz  0x41ec92
  41ec4e:	addr16 loope 0x41ec9d
  41ec51:	xor    edi,esp
  41ec53:	mov    eax,0xccd36d88
  41ec58:	aas    
  41ec59:	int    0x6
  41ec5b:	cli    
  41ec5c:	inc    ebx
  41ec5d:	inc    edx
  41ec5e:	in     al,dx
  41ec5f:	ret    0x590a
  41ec62:	jecxz  0x41ec6d
  41ec64:	test   al,0x5b
  41ec66:	push   0xe86fe9be
  41ec6b:	cwde   
  41ec6c:	imul   esi,DWORD PTR [eax+esi*8],0x8dd4444c
  41ec73:	sub    DWORD PTR ds:0x9c41be27,ecx
  41ec79:	retf   
  41ec7a:	outs   dx,BYTE PTR ds:[esi]
  41ec7b:	cmp    DWORD PTR [edi-0x50dcafde],0xbf78d0e
  41ec85:	mov    ah,0x17
  41ec87:	sbb    DWORD PTR [ebx+edx*1+0x2394ed4b],ecx
  41ec8e:	fistp  WORD PTR [edi+0x7e]
  41ec91:	add    BYTE PTR [ebx-0x31],bh
  41ec94:	not    DWORD PTR [ebx-0x441dfaec]
  41ec9a:	stos   BYTE PTR es:[edi],al
  41ec9b:	pop    es
  41ec9c:	in     eax,0x9
  41ec9e:	and    bh,ah
  41eca0:	jecxz  0x41ec40
  41eca2:	sbb    al,0xbe
  41eca4:	pop    ds
  41eca5:	inc    edx
  41eca6:	mov    esp,0x8f486310
  41ecab:	out    dx,al
  41ecac:	test   eax,0x36c2efb9
  41ecb1:	mov    BYTE PTR [ecx],bl
  41ecb3:	fidivr WORD PTR [edi-0x60]
  41ecb6:	into   
  41ecb7:	mov    ah,bh
  41ecb9:	push   ebx
  41ecba:	xor    DWORD PTR [ebx+esi*2],eax
  41ecbd:	ror    BYTE PTR [edx+0x4dc9110c],cl
  41ecc3:	mov    al,ds:0xa2d7dadb
  41ecc8:	mov    ebx,0x5f18dacd
  41eccd:	adc    eax,0xf74352ac
  41ecd2:	pushf  
  41ecd3:	retf   
  41ecd4:	jno    0x41ed37
  41ecd6:	rcr    BYTE PTR [eax],cl
  41ecd8:	ficomp WORD PTR [edx+0x11]
  41ecdb:	cmp    edx,ebx
  41ecdd:	dec    esp
  41ecde:	xchg   DWORD PTR [edx+0x43d208ba],edi
  41ece4:	mov    bh,BYTE PTR [ebx+0x41]
  41ece7:	xchg   dl,cl
  41ece9:	addr16 icebp 
  41eceb:	retf   0x621
  41ecee:	repz sub ch,dh
  41ecf1:	aaa    
  41ecf2:	shl    DWORD PTR [edx+0x228055fb],0x31
  41ecf9:	mov    edi,0xe8de5e2c
  41ecfe:	mov    dl,0xc6
  41ed00:	cmp    ebp,DWORD PTR [esi+0x2a]
  41ed03:	ss mov edi,0x121c919d
  41ed09:	call   0x28a1:0xe7eb033a
  41ed10:	or     esp,ecx
  41ed12:	int    0x37
  41ed14:	jp     0x41ed8d
  41ed16:	les    esi,FWORD PTR [edx-0x69]
  41ed19:	fidivr DWORD PTR [edi-0x7a]
  41ed1c:	cmp    eax,0x6018f419
  41ed21:	div    DWORD PTR ds:0xfbe41433
  41ed27:	call   0xe441:0x884618d1
  41ed2e:	(bad)  
  41ed2f:	cmc    
  41ed30:	ins    BYTE PTR es:[edi],dx
  41ed31:	dec    eax
  41ed32:	shl    DWORD PTR [edx+0x13f31f4d],0xbe
  41ed39:	in     al,dx
  41ed3a:	cmp    eax,DWORD PTR [eax]
  41ed3c:	or     bl,BYTE PTR [edx]
  41ed3e:	and    eax,0x4fc5e20e
  41ed43:	imul   edi,DWORD PTR [eax+edi*4+0x48d471af],0xc
  41ed4b:	xchg   al,bh
  41ed4d:	lock jnp 0x41ed1d
  41ed50:	cmp    al,0xc3
  41ed52:	clc    
  41ed53:	sub    al,0xfb
  41ed55:	in     al,dx
  41ed56:	(bad)  
  41ed57:	fdiv   DWORD PTR [edi-0xfafaa64]
  41ed5d:	or     al,0xcc
  41ed5f:	aas    
  41ed60:	std    
  41ed61:	adc    cl,al
  41ed63:	sti    
  41ed64:	test   BYTE PTR [ecx+0x2695bd33],bh
  41ed6a:	ds out dx,al
  41ed6c:	sbb    al,0xa8
  41ed6e:	pushf  
  41ed6f:	xchg   edi,eax
  41ed70:	pop    esp
  41ed71:	aam    0xb6
  41ed73:	dec    edx
  41ed74:	fimul  WORD PTR [ebx-0x17bc5e6f]
  41ed7a:	or     eax,0x85e30536
  41ed7f:	mov    bh,0xf3
  41ed81:	stos   BYTE PTR es:[edi],al
  41ed82:	sub    esp,DWORD PTR ds:0x8c3fdc31
  41ed88:	mov    edx,0x79eb1cd3
  41ed8d:	adc    dh,BYTE PTR [ecx+0x79]
  41ed90:	mov    ebx,0xe6c235
  41ed95:	cdq    
  41ed96:	(bad)  
  41ed97:	lods   al,BYTE PTR gs:[esi]
  41ed99:	mov    cl,0x9b
  41ed9b:	push   ss
  41ed9c:	push   esi
  41ed9d:	mov    ecx,0x84c2323d
  41eda2:	call   0xe2b1:0x6c6abc14
  41eda9:	fdiv   DWORD PTR [esp+ebx*4+0x73]
  41edad:	pop    ebp
  41edae:	mov    DWORD PTR [esi],esi
  41edb0:	mov    DWORD PTR [edx],eax
  41edb2:	inc    esp
  41edb3:	jmp    0x41ee0e
  41edb5:	pop    esp
  41edb6:	sub    eax,0xc0262601
  41edbb:	dec    edx
  41edbc:	aas    
  41edbd:	xchg   edi,eax
  41edbe:	lods   eax,DWORD PTR ds:[esi]
  41edbf:	(bad)  
  41edc0:	(bad)  
  41edc2:	in     eax,dx
  41edc3:	jno    0x41ed99
  41edc5:	and    DWORD PTR [eax],esi
  41edc7:	fisttp QWORD PTR [edi+0x4976cf63]
  41edcd:	jg     0x41ee09
  41edcf:	mov    ebx,0x401edd0f
  41edd4:	pop    eax
  41edd5:	out    0x95,al
  41edd7:	xor    BYTE PTR [ebx-0x240a97a2],dl
  41eddd:	sahf   
  41edde:	add    DWORD PTR [edx-0x5f054d58],ebp
  41ede4:	add    DWORD PTR [ebx-0x302cdbf0],ebx
  41edea:	xchg   esi,eax
  41edeb:	push   ebp
  41edec:	mov    DWORD PTR [esi],ecx
  41edee:	loop   0x41ed7c
  41edf0:	out    0x2f,eax
  41edf2:	add    DWORD PTR [edi+ebp*1+0x28ad4df4],eax
  41edf9:	mov    esi,0x2121191a
  41edfe:	add    eax,0x20482677
  41ee03:	cli    
  41ee04:	adc    al,0x5d
  41ee06:	mov    esp,0xdebc0dd8
  41ee0b:	cmp    dh,ch
  41ee0d:	mov    ecx,0x9e5263b
  41ee12:	jae    0x41edae
  41ee14:	xor    esp,ebx
  41ee16:	dec    ebx
  41ee17:	fisttp WORD PTR [ecx]
  41ee19:	ret    0x6dda
  41ee1c:	push   ecx
  41ee1d:	dec    ecx
  41ee1e:	in     al,0x4a
  41ee20:	and    ebx,DWORD PTR cs:[edi+0x1c]
  41ee24:	icebp  
  41ee25:	mov    ds:0x3da06ea6,al
  41ee2a:	cmp    al,BYTE PTR [ebx]
  41ee2c:	(bad)  
  41ee2e:	add    BYTE PTR [esi+edx*2-0x35],ch
  41ee32:	addr16 std 
  41ee34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee35:	xchg   BYTE PTR [eax-0x1357430e],cl
  41ee3b:	add    eax,0xad252d37
  41ee40:	xlat   BYTE PTR ds:[ebx]
  41ee41:	inc    ebp
  41ee42:	inc    ecx
  41ee43:	jne    0x41ee5c
  41ee45:	dec    ecx
  41ee46:	inc    edi
  41ee47:	mov    ds:0x4dc4dcb2,al
  41ee4c:	push   edx
  41ee4d:	xchg   edx,eax
  41ee4e:	cmp    eax,0x2df94e0b
  41ee53:	xchg   esp,eax
  41ee54:	sbb    al,0x5f
  41ee56:	in     eax,dx
  41ee57:	or     DWORD PTR [eax+0x3c],ebp
  41ee5a:	bound  eax,QWORD PTR [edi+edx*2-0x77]
  41ee5e:	push   edx
  41ee5f:	add    eax,DWORD PTR [ebp-0x67]
  41ee62:	xchg   esp,eax
  41ee63:	loop   0x41ee2d
  41ee65:	hlt    
  41ee66:	add    ebp,esp
  41ee68:	inc    esp
  41ee69:	dec    edx
  41ee6a:	cmp    BYTE PTR [esi],ah
  41ee6c:	cld    
  41ee6d:	(bad)  
  41ee6e:	mov    cl,0x32
  41ee70:	jne    0x41ee94
  41ee72:	jecxz  0x41ee60
  41ee74:	cld    
  41ee75:	add    BYTE PTR [esi-0x1b069f72],ch
  41ee7b:	pop    eax
  41ee7c:	sbb    cl,BYTE PTR [ecx]
  41ee7e:	and    edi,edx
  41ee80:	sub    ecx,ebp
  41ee82:	icebp  
  41ee83:	js     0x41ee93
  41ee85:	mov    eax,0xc20f4761
  41ee8a:	ja     0x41eeeb
  41ee8c:	into   
  41ee8d:	out    0xb4,eax
  41ee8f:	mov    ?,WORD PTR [ebx]
  41ee91:	add    DWORD PTR [ebp-0x66ceff89],0x899ae0fc
  41ee9b:	push   ss
  41ee9c:	or     dl,BYTE PTR [edi-0x2f]
  41ee9f:	lock aam 0xed
  41eea2:	add    dh,BYTE PTR ds:0x476661c3
  41eea8:	dec    ebx
  41eea9:	jnp    0x41ee5b
  41eeab:	sbb    al,0x18
  41eead:	pop    esp
  41eeae:	ss icebp 
  41eeb0:	out    dx,al
  41eeb1:	fild   WORD PTR [esi+0x1cbe762a]
  41eeb7:	mov    BYTE PTR [ebp+0x7c],ah
  41eeba:	sbb    DWORD PTR [ebx+0x49ecd5b2],edi
  41eec0:	bound  esp,QWORD PTR [edx+eax*8+0x36]
  41eec4:	repnz add DWORD PTR [ebx-0x21],esi
  41eec8:	sbb    eax,0xe9978f6b
  41eecd:	mov    DWORD PTR [ebp+0x28e32b88],esp
  41eed3:	std    
  41eed4:	mov    eax,0x99d704f6
  41eed9:	jmp    0x32af:0xf41d769d
  41eee0:	out    dx,eax
  41eee1:	adc    eax,0x35ee459c
  41eee6:	outs   dx,BYTE PTR ds:[esi]
  41eee7:	and    al,0x25
  41eee9:	cmp    ecx,edx
  41eeeb:	mov    BYTE PTR [ebx],al
  41eeed:	pop    esi
  41eeee:	lods   eax,DWORD PTR ds:[esi]
  41eeef:	stos   BYTE PTR es:[edi],al
  41eef0:	das    
  41eef1:	mov    ah,0x81
  41eef3:	pop    edx
  41eef4:	(bad)  
  41eef6:	mov    ah,BYTE PTR [esi+0x23]
  41eef9:	sub    BYTE PTR [ebp+0x6562b082],al
  41eeff:	(bad)  
  41ef00:	and    ebp,esi
  41ef02:	retf   0x4e5c
  41ef05:	mov    esi,0x7bd9b30f
  41ef0a:	add    al,0x64
  41ef0c:	iret   
  41ef0d:	(bad)  
  41ef0e:	popf   
  41ef0f:	lods   al,BYTE PTR ds:[esi]
  41ef10:	data16 fsubr st,st(6)
  41ef13:	or     bl,BYTE PTR [eax-0x48b27d2c]
  41ef19:	dec    ebp
  41ef1a:	xor    ah,BYTE PTR [esi+0x7ed0f0dc]
  41ef20:	sub    al,0xf8
  41ef22:	and    eax,0xe850ee9c
  41ef27:	jmp    0x41ef9b
  41ef29:	inc    ebx
  41ef2a:	lods   al,BYTE PTR ds:[esi]
  41ef2b:	pop    edi
  41ef2c:	inc    eax
  41ef2d:	aaa    
  41ef2e:	xor    eax,0x46e4740d
  41ef33:	push   esi
  41ef34:	leave  
  41ef35:	cmp    ch,BYTE PTR [esi+0x30542f8a]
  41ef3b:	and    al,0xcf
  41ef3d:	mov    ebp,0xd836f2e2
  41ef42:	sbb    DWORD PTR [ecx],ebx
  41ef44:	mov    eax,0x5cd9e23d
  41ef49:	(bad)  
  41ef4a:	hlt    
  41ef4b:	push   edi
  41ef4c:	jl     0x41ef1b
  41ef4e:	mov    ch,0xa
  41ef50:	push   edx
  41ef51:	or     eax,0xace98d4e
  41ef56:	ret    
  41ef57:	mov    ah,0x2c
  41ef59:	or     bh,BYTE PTR fs:[ebp-0x5ce853a3]
  41ef60:	into   
  41ef61:	(bad)  
  41ef62:	xchg   ebx,eax
  41ef63:	push   cs
  41ef64:	pusha  
  41ef65:	(bad)  
  41ef66:	sbb    eax,edi
  41ef68:	int3   
  41ef69:	in     al,0xef
  41ef6b:	out    0x97,eax
  41ef6d:	sbb    ch,BYTE PTR [eax+0x3d]
  41ef70:	mov    ecx,0x75fe896b
  41ef75:	push   0xffffff99
  41ef77:	and    al,dl
  41ef79:	or     bl,BYTE PTR ds:0x78bc8c80
  41ef7f:	sub    BYTE PTR [ebx+0x79],dh
  41ef82:	or     al,0x58
  41ef84:	out    0x74,al
  41ef86:	jbe    0x41f000
  41ef88:	mov    ebx,0x404a372d
  41ef8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef8e:	clc    
  41ef8f:	push   edx
  41ef90:	jae    0x41f00e
  41ef92:	jns    0x41efd7
  41ef94:	loop   0x41ef8a
  41ef96:	cmp    BYTE PTR [edi+0x74],bh
  41ef99:	(bad)
  41ef9c:	(bad)  
  41ef9d:	pop    esp
  41ef9e:	jge    0x41efd3
  41efa0:	cmc    
  41efa1:	(bad)  
  41efa2:	xor    DWORD PTR [ecx],edx
  41efa4:	xor    ebp,ecx
  41efa6:	mov    BYTE PTR ds:0x2ec069a9,al
  41efac:	outs   dx,DWORD PTR ds:[esi]
  41efad:	sub    al,0x3f
  41efaf:	cld    
  41efb0:	mov    bl,0x40
  41efb2:	xchg   ebx,eax
  41efb3:	int3   
  41efb4:	mov    ah,dl
  41efb6:	cs mov edi,0x9929fff6
  41efbc:	sub    eax,0x87d512df
  41efc1:	icebp  
  41efc2:	and    ah,BYTE PTR [ecx]
  41efc4:	mov    es,WORD PTR [ebx]
  41efc6:	push   es
  41efc7:	outs   dx,DWORD PTR ds:[esi]
  41efc8:	sbb    al,0x93
  41efca:	shr    bh,1
  41efcc:	and    edi,ecx
  41efce:	cmp    eax,0x1a9ab56e
  41efd3:	jae    0x41ef79
  41efd5:	sbb    cl,BYTE PTR [eax]
  41efd7:	push   es
  41efd8:	pop    eax
  41efd9:	or     al,0xc5
  41efdb:	lods   al,BYTE PTR gs:[esi]
  41efdd:	mov    dh,0xd3
  41efdf:	test   ebp,eax
  41efe1:	ja     0x41f01c
  41efe3:	jae    0x41efa4
  41efe5:	adc    eax,0xefbcfeb
  41efea:	push   ss
  41efeb:	not    BYTE PTR [ebp-0x144e5d51]
  41eff1:	call   0x2af0:0xea1fecf
  41eff8:	fadd   st,st(4)
  41effa:	fdivr  DWORD PTR [edi-0x25]
  41effd:	scas   al,BYTE PTR es:[edi]
  41effe:	jl     0x41ef82
  41f000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f001:	add    DWORD PTR [esi-0x66],ebx
  41f004:	mov    ss,WORD PTR [esi+0x3c23ade9]
  41f00a:	daa    
  41f00b:	add    BYTE PTR [edi],al
  41f00d:	xor    eax,0x9640643
  41f012:	das    
  41f013:	mov    sp,0xca53
  41f017:	sub    DWORD PTR [ebx-0x23],esp
  41f01a:	std    
  41f01b:	adc    esp,esi
  41f01d:	jl     0x41efc5
  41f01f:	gs icebp 
  41f021:	pop    ds
  41f022:	push   ebx
  41f023:	out    0x76,al
  41f025:	dec    ebp
  41f026:	adc    esi,DWORD PTR [eax+0x155aa9c6]
  41f02c:	imul   esp,DWORD PTR [esi+0x2ed1abe6],0x7f
  41f033:	and    cl,BYTE PTR [edi+eax*8]
  41f036:	sbb    eax,0x398a1bed
  41f03b:	mov    esp,0x5fbeb479
  41f040:	rol    BYTE PTR [edx],cl
  41f042:	js     0x41efdc
  41f044:	mov    edi,0x6a1a6629
  41f049:	dec    edx
  41f04a:	shl    DWORD PTR [edx+0x2edff097],1
  41f050:	jp     0x41f07c
  41f052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f053:	pop    ecx
  41f054:	xchg   edx,eax
  41f055:	mov    dh,0xf5
  41f057:	xor    al,0xdf
  41f059:	lahf   
  41f05a:	inc    ecx
  41f05b:	or     eax,0xde221658
  41f060:	add    ebx,DWORD PTR [edi+0x534203fe]
  41f066:	xchg   esi,ebx
  41f068:	jnp    0x41f0be
  41f06a:	in     al,0x27
  41f06c:	retf   0x74d1
  41f06f:	pop    DWORD PTR es:[ebx+0x508c4c95]
  41f076:	test   cl,ch
  41f078:	loope  0x41f009
  41f07a:	sbb    ebp,DWORD PTR [edx]
  41f07c:	xrelease mov DWORD PTR [esp+edi*1],edx
  41f080:	push   ecx
  41f081:	adc    DWORD PTR [eax-0x49],ebp
  41f084:	jg     0x41f0dc
  41f086:	xor    al,0x91
  41f088:	mov    eax,ds:0x678307a1
  41f08d:	js     0x41f025
  41f08f:	in     eax,0xf5
  41f091:	add    BYTE PTR [edi+0x4b],ah
  41f094:	and    eax,0xfc5d5104
  41f099:	jl     0x41f0e1
  41f09b:	adc    eax,DWORD PTR [edi]
  41f09d:	cld    
  41f09e:	popf   
  41f09f:	in     al,0x3f
  41f0a1:	pop    ebx
  41f0a2:	jbe    0x41f028
  41f0a4:	mov    esp,0xbfaa7cde
  41f0a9:	pop    edx
  41f0aa:	xlat   BYTE PTR ds:[ebx]
  41f0ab:	sub    eax,0xc6e40572
  41f0b0:	sub    BYTE PTR [edi+0x47],dh
  41f0b3:	jns    0x41f113
  41f0b5:	mov    bl,0xd8
  41f0b7:	and    bh,BYTE PTR [ebx+0x61]
  41f0ba:	push   0xffffffb8
  41f0bc:	test   BYTE PTR [edx-0x4a83e5ee],ah
  41f0c2:	sbb    BYTE PTR [eax-0x4875ba80],al
  41f0c8:	and    ebx,edx
  41f0ca:	(bad)  
  41f0cc:	sub    DWORD PTR [esi],0x6
  41f0cf:	test   eax,0x9edb109b
  41f0d4:	fdivrp st(6),st
  41f0d6:	jmp    edi
  41f0d8:	mov    ds:0xc1b30afa,eax
  41f0dd:	inc    esi
  41f0de:	mov    eax,0x1c2521c6
  41f0e3:	fist   DWORD PTR [ecx]
  41f0e5:	cs loope 0x41f113
  41f0e8:	pop    ds
  41f0e9:	jbe    0x41f0a3
  41f0eb:	mov    ebx,0x8a79902e
  41f0f0:	ins    DWORD PTR es:[edi],dx
  41f0f1:	sub    al,0xb4
  41f0f3:	ss xchg esi,eax
  41f0f5:	cmp    al,0x29
  41f0f7:	ins    BYTE PTR es:[edi],dx
  41f0f8:	xchg   esp,eax
  41f0f9:	lods   eax,DWORD PTR ds:[esi]
  41f0fa:	rcl    esi,1
  41f0fc:	pop    ebp
  41f0fd:	imul   ebx,ebx,0x7e1aa17
  41f103:	mov    eax,ds:0x4f881c8e
  41f108:	fistp  WORD PTR [ebp+0x5acc3b60]
  41f10e:	mov    bh,0x2
  41f110:	xlat   BYTE PTR ds:[ebx]
  41f111:	das    
  41f112:	test   BYTE PTR [esi+0x60690cf8],ch
  41f118:	retf   
  41f119:	mov    bh,0xc
  41f11b:	add    BYTE PTR [edi],bh
  41f11d:	mov    dl,bh
  41f11f:	scas   al,BYTE PTR es:[edi]
  41f120:	push   ds
  41f121:	loopne 0x41f115
  41f123:	add    BYTE PTR [ebp+0x7a],bl
  41f126:	sub    BYTE PTR [edi+0x496b8c12],cl
  41f12c:	shl    DWORD PTR [ecx],1
  41f12e:	(bad)  [esi+0x15c47925]
  41f134:	mov    dh,0x93
  41f136:	sub    edx,DWORD PTR [ebx+0x20919638]
  41f13c:	lahf   
  41f13d:	fsubr  QWORD PTR [edx]
  41f13f:	mov    bh,0x7e
  41f141:	sbb    ebx,ebp
  41f143:	mov    eax,0xda33dba6
  41f148:	xchg   esp,eax
  41f149:	cld    
  41f14a:	add    cl,BYTE PTR [edx+eax*2+0x7594fe2c]
  41f151:	ficomp DWORD PTR [ecx]
  41f153:	nop
  41f154:	inc    edi
  41f155:	fcom   DWORD PTR [ebx]
  41f157:	les    edi,FWORD PTR [esi+0xa]
  41f15a:	fild   WORD PTR [ecx]
  41f15c:	repz dec edx
  41f15e:	or     edx,esi
  41f160:	mov    ah,0xb8
  41f162:	pop    edx
  41f163:	xor    al,0x26
  41f165:	rcl    DWORD PTR [eax+0x4590b828],cl
  41f16b:	nop
  41f16c:	int    0x14
  41f16e:	(bad)  
  41f16f:	rcr    BYTE PTR gs:[esi],cl
  41f172:	adc    al,BYTE PTR [esi+0x716d1111]
  41f178:	add    BYTE PTR [ecx-0x47165b4c],0xd
  41f17f:	test   BYTE PTR [ebp+0x524ce1a2],bh
  41f185:	xchg   ebp,eax
  41f186:	add    esp,DWORD PTR [ecx+0x7e]
  41f189:	loopne 0x41f1c7
  41f18b:	gs push es
  41f18d:	adc    DWORD PTR [di+0x5d],esi
  41f191:	sub    DWORD PTR [ecx+edx*4-0x5d],edx
  41f195:	(bad)  
  41f197:	inc    edx
  41f198:	adc    DWORD PTR [eax-0xa2723],esp
  41f19e:	mov    bl,0x63
  41f1a0:	push   eax
  41f1a1:	push   es
  41f1a2:	mov    ds:0x9768455d,al
  41f1a7:	xchg   ecx,eax
  41f1a8:	jmp    0x41f166
  41f1aa:	scas   eax,DWORD PTR es:[edi]
  41f1ab:	ins    DWORD PTR es:[edi],dx
  41f1ac:	dec    edi
  41f1ad:	cmc    
  41f1ae:	add    al,0xeb
  41f1b0:	sub    eax,0x50
  41f1b3:	mov    WORD PTR [edx-0x6ff26e71],ss
  41f1b9:	sub    al,0x3e
  41f1bb:	jmp    0xef53:0x8ac9a431
  41f1c2:	pop    eax
  41f1c3:	dec    esi
  41f1c4:	ds retf 0x2321
  41f1c8:	add    al,0xbb
  41f1ca:	jl     0x41f163
  41f1cc:	cmp    al,0xb
  41f1ce:	fisub  DWORD PTR [ebx-0x4a98dfdf]
  41f1d4:	sahf   
  41f1d5:	push   0x7b
  41f1d7:	dec    ebp
  41f1d8:	jns    0x41f211
  41f1da:	fimul  DWORD PTR [eax+0x926f6c8]
  41f1e0:	fs dec edi
  41f1e2:	cmp    BYTE PTR [edx+0x1],ch
  41f1e5:	retf   
  41f1e6:	sub    eax,0xdf3947f
  41f1eb:	pop    esp
  41f1ec:	das    
  41f1ed:	xor    BYTE PTR [eax+0x1a6e6ec9],bl
  41f1f3:	lea    esp,[edx]
  41f1f5:	ret    
  41f1f6:	das    
  41f1f7:	add    ebx,DWORD PTR [ebx+0x4d]
  41f1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1fb:	and    bh,ah
  41f1fd:	dec    esi
  41f1fe:	loopne 0x41f21f
  41f200:	jmp    0x41f1ee
  41f202:	je     0x41f223
  41f204:	xor    DWORD PTR [ecx+0x5d],eax
  41f207:	popa   
  41f208:	sbb    BYTE PTR [edx-0x31],0xc7
  41f20c:	and    dh,BYTE PTR [edi-0x35]
  41f20f:	mov    ebx,0xcc97b02
  41f214:	sub    eax,0x244470af
  41f219:	in     al,0x5d
  41f21b:	mov    ebp,0xd1df2ff8
  41f220:	outs   dx,DWORD PTR ds:[esi]
  41f221:	fmul   QWORD PTR [ebx]
  41f223:	and    esi,DWORD PTR [esi]
  41f225:	call   0xb991:0x6ef1b148
  41f22c:	sub    al,0x3c
  41f22e:	sub    BYTE PTR [eax],dl
  41f230:	add    ch,al
  41f232:	fldcw  WORD PTR [ebx+0x7daf0765]
  41f238:	in     al,dx
  41f239:	push   ecx
  41f23a:	das    
  41f23b:	or     al,0x76
  41f23d:	std    
  41f23e:	mov    bl,0x5a
  41f240:	adc    edi,DWORD PTR [ecx]
  41f242:	jnp    0x41f262
  41f244:	popa   
  41f245:	iret   
  41f246:	dec    ebp
  41f247:	inc    edi
  41f248:	retf   0x9f14
  41f24b:	not    BYTE PTR [edi-0x2b]
  41f24e:	fwait
  41f24f:	mov    eax,ds:0x85bdba19
  41f254:	ja     0x41f24b
  41f256:	hlt    
  41f257:	adc    eax,0x39f3005b
  41f25c:	in     eax,dx
  41f25d:	inc    ebp
  41f25e:	out    0x5f,al
  41f260:	std    
  41f261:	out    0x98,al
  41f263:	jmp    0xd0fdb221
  41f268:	imul   esi,DWORD PTR [edx+0x283ba54e],0xa
  41f26f:	(bad)  
  41f270:	cmp    eax,0x2b3f9327
  41f275:	aam    0xd8
  41f277:	imul   edx,DWORD PTR [esi],0xca757a23
  41f27d:	mov    ecx,0xba3d44c1
  41f282:	jecxz  0x41f280
  41f284:	neg    DWORD PTR [edx-0x3b]
  41f287:	mov    ebx,DWORD PTR [eax+0x6ed02b6a]
  41f28d:	js     0x41f251
  41f28f:	(bad)  
  41f290:	out    0x77,al
  41f292:	test   ebx,ebx
  41f294:	mov    al,ds:0xc928dad6
  41f299:	jne    0x41f2aa
  41f29b:	xchg   esi,eax
  41f29c:	jne    0x41f21e
  41f29e:	mov    edi,0x3de59759
  41f2a3:	rcr    DWORD PTR [esi+0x6e],1
  41f2a6:	fidiv  WORD PTR [ecx-0x659d97d0]
  41f2ac:	sar    BYTE PTR [ecx-0x676a8fa1],0x9
  41f2b3:	retf   0x1f2
  41f2b6:	inc    ebp
  41f2b7:	ss pop ebx
  41f2b9:	lock mov ds:0x583d8401,al
  41f2bf:	test   al,0x83
  41f2c1:	pop    edx
  41f2c2:	pop    ds
  41f2c3:	out    dx,al
  41f2c4:	(bad)  
  41f2c5:	in     al,0x9f
  41f2c7:	mov    dh,0x7f
  41f2c9:	sti    
  41f2ca:	mov    ah,0x63
  41f2cc:	mov    cl,0x3a
  41f2ce:	dec    edi
  41f2cf:	shl    DWORD PTR [esi],1
  41f2d1:	jge    0x41f2a3
  41f2d3:	push   esp
  41f2d4:	xchg   ebp,eax
  41f2d5:	jne    0x41f2d4
  41f2d7:	lds    edi,FWORD PTR [ebx]
  41f2d9:	jge    0x41f269
  41f2db:	or     al,0x8c
  41f2dd:	cmc    
  41f2de:	pop    ss
  41f2df:	mov    BYTE PTR [edi],ch
  41f2e1:	xor    ch,BYTE PTR ds:[ecx-0x7af10afb]
  41f2e8:	sti    
  41f2e9:	pop    edx
  41f2ea:	add    eax,0xac057074
  41f2ef:	std    
  41f2f0:	and    esp,DWORD PTR [ecx-0x75056662]
  41f2f6:	int    0x5f
  41f2f8:	test   ch,dl
  41f2fa:	xchg   esp,eax
  41f2fb:	(bad)  
  41f2fc:	rcl    ah,cl
  41f2fe:	pushf  
  41f2ff:	push   edi
  41f300:	addr16 jb 0x41f319
  41f303:	add    al,0x8c
  41f305:	add    al,0x8f
  41f307:	push   ebp
  41f308:	xor    BYTE PTR [ecx],al
  41f30a:	mov    ds,WORD PTR [ecx]
  41f30c:	add    edi,DWORD PTR [ebx-0x73035511]
  41f312:	mov    ds:0xc7f626b9,al
  41f317:	xchg   BYTE PTR [esi+0x2b],al
  41f31a:	push   cs
  41f31b:	pop    edx
  41f31c:	jne    0x41f2b1
  41f31e:	js     0x41f2c3
  41f320:	std    
  41f321:	retf   0xe933
  41f324:	aad    0x43
  41f326:	xor    DWORD PTR [eax+0x30],esi
  41f329:	push   0x31d7862e
  41f32e:	sbb    edx,DWORD PTR [ebx*2+0xddb5c1b]
  41f335:	outs   dx,BYTE PTR ds:[esi]
  41f336:	and    al,0xca
  41f338:	mov    dl,0x43
  41f33a:	popa   
  41f33b:	lods   al,BYTE PTR ds:[esi]
  41f33c:	fmul   st(2),st
  41f33e:	in     eax,dx
  41f33f:	stos   BYTE PTR es:[edi],al
  41f340:	jno    0x41f343
  41f342:	push   0x74dc6b77
  41f347:	xchg   esi,eax
  41f348:	xlat   BYTE PTR ds:[ebx]
  41f349:	push   0xa
  41f34b:	pop    edx
  41f34c:	in     eax,dx
  41f34d:	ss mov bh,0x13
  41f350:	pushf  
  41f351:	test   al,0xe2
  41f353:	addr16 icebp 
  41f355:	push   esi
  41f356:	or     ebx,esi
  41f358:	mov    ch,0x71
  41f35a:	stos   BYTE PTR es:[edi],al
  41f35b:	sbb    BYTE PTR [ebp+0x2e],ch
  41f35e:	inc    ebp
  41f35f:	pop    ss
  41f360:	rol    cl,1
  41f362:	mov    ebx,0x73c3f35c
  41f367:	lds    ecx,FWORD PTR [eax+0x283477d3]
  41f36d:	lahf   
  41f36e:	push   0x68
  41f370:	fwait
  41f371:	and    DWORD PTR [edx-0x408e0c66],edx
  41f377:	adc    DWORD PTR [eax-0x6791bb77],esp
  41f37d:	cmc    
  41f37e:	inc    ecx
  41f37f:	or     edi,esi
  41f381:	fdivr  DWORD PTR [esi]
  41f383:	in     al,dx
  41f384:	and    eax,0x4ffef154
  41f389:	int    0x9b
  41f38b:	sub    al,0xb8
  41f38d:	seta   al
  41f390:	int    0xd6
  41f392:	inc    esi
  41f393:	std    
  41f394:	test   BYTE PTR [esi-0x7e],dl
  41f397:	(bad)  
  41f398:	push   ebx
  41f399:	xlat   BYTE PTR ds:[ebx]
  41f39a:	mov    al,ds:0x2b72a202
  41f39f:	lods   eax,DWORD PTR ds:[esi]
  41f3a0:	daa    
  41f3a1:	inc    ecx
  41f3a2:	or     al,0xf8
  41f3a4:	loopne 0x41f3df
  41f3a6:	push   ecx
  41f3a7:	xchg   BYTE PTR [ecx],al
  41f3a9:	jbe    0xe9b5b317
  41f3af:	popa   
  41f3b0:	inc    ecx
  41f3b1:	mov    DWORD PTR [ebp+edi*2+0x63],ebp
  41f3b5:	jge    0x41f401
  41f3b7:	jmp    0xa6bd1217
  41f3bc:	mov    eax,0x2c1d9a97
  41f3c1:	jmp    0x506b9ea3
  41f3c6:	mov    ds:0x1cd219ff,al
  41f3cb:	mov    ds:0xd04f052b,eax
  41f3d0:	inc    esp
  41f3d1:	mov    ecx,0x473e8fdf
  41f3d6:	inc    ecx
  41f3d7:	sbb    BYTE PTR [esi-0x17],cl
  41f3da:	mov    ds:0x24a36c80,al
  41f3df:	div    cl
  41f3e1:	arpl   WORD PTR [eax],bp
  41f3e3:	in     eax,0x8d
  41f3e5:	pop    esp
  41f3e6:	ins    DWORD PTR es:[edi],dx
  41f3e7:	scas   eax,DWORD PTR es:[edi]
  41f3e8:	fucomp st(3)
  41f3ea:	shl    BYTE PTR [ebp-0x4c6659ee],1
  41f3f0:	mov    ecx,0xc10c32d7
  41f3f5:	and    BYTE PTR [ebp-0x4a2f72d7],dl
  41f3fb:	ficom  DWORD PTR [ebx+edx*1-0x6da9ea8c]
  41f402:	js     0x41f483
  41f404:	stos   DWORD PTR es:[edi],eax
  41f405:	add    DWORD PTR [ecx+0x41],esp
  41f408:	imul   edx,DWORD PTR ds:0x98b40fe6,0xffffffff
  41f40f:	adc    DWORD PTR [ecx+0x1],ecx
  41f412:	sbb    al,0x3f
  41f414:	scas   eax,DWORD PTR es:[edi]
  41f415:	dec    ebx
  41f416:	mov    al,ds:0xa3519fb0
  41f41b:	adc    ebx,esp
  41f41d:	sub    BYTE PTR [edx+0x2830f550],0x3e
  41f424:	rcl    DWORD PTR [edx+0x15715593],1
  41f42a:	call   0xd02:0x4a413418
  41f431:	imul   edi,esi,0xffffffbf
  41f434:	adc    dh,BYTE PTR [ebx]
  41f436:	ror    BYTE PTR [ebp-0x2be4ed5d],1
  41f43c:	mov    gs,WORD PTR [esi-0x5e]
  41f43f:	sbb    eax,DWORD PTR [edx-0x11]
  41f442:	das    
  41f443:	aam    0x14
  41f445:	cs push ebp
  41f447:	cmp    edx,DWORD PTR [esi+esi*2+0x89716a1]
  41f44e:	adc    eax,0x4c8d8539
  41f453:	add    dh,BYTE PTR [ebx-0x3e]
  41f456:	retf   0xb9de
  41f459:	out    0x71,eax
  41f45b:	sar    DWORD PTR [ecx],cl
  41f45d:	mov    bl,0xae
  41f45f:	aam    0x58
  41f461:	mov    ds:0x74c4248d,al
  41f466:	jmp    0xdab64200
  41f46b:	cmp    DWORD PTR [eax-0x4866ee28],0xee0e2b11
  41f475:	retf   
  41f476:	mov    ebx,0x5e325cd7
  41f47b:	pop    eax
  41f47c:	push   ss
  41f47d:	das    
  41f47e:	jge    0x41f4ca
  41f480:	jns    0x41f4af
  41f482:	jg     0x41f42f
  41f484:	retf   
  41f485:	add    eax,0x31a4a0a2
  41f48a:	adc    DWORD PTR [ebp+0x173dce11],esi
  41f490:	sbb    edx,DWORD PTR [ecx-0xed65da5]
  41f496:	jmp    0x41f4d3
  41f498:	push   ds
  41f499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f49a:	push   ebp
  41f49b:	push   eax
  41f49c:	mov    bl,0xfa
  41f49e:	sbb    al,0xb9
  41f4a0:	push   ecx
  41f4a1:	rol    BYTE PTR [eax],cl
  41f4a3:	fucom  st(0)
  41f4a5:	pop    edi
  41f4a6:	lahf   
  41f4a7:	fs repnz push edi
  41f4aa:	push   ss
  41f4ab:	sbb    DWORD PTR [ebx-0x14],edx
  41f4ae:	fmul   QWORD PTR [edi+0x187928e4]
  41f4b4:	cli    
  41f4b5:	add    DWORD PTR [edi+ebp*4],0xa531c928
  41f4bc:	ror    DWORD PTR [esi+0x3640db93],cl
  41f4c2:	jg     0x41f519
  41f4c4:	lea    edi,[ecx+0x77]
  41f4c7:	inc    ecx
  41f4c8:	mov    ebp,0xbed04ede
  41f4cd:	ret    0x357b
  41f4d0:	sub    edi,DWORD PTR [edi+0x5798453d]
  41f4d6:	mov    edx,DWORD PTR [esi-0xe84cca1]
  41f4dc:	pop    edx
  41f4dd:	pushf  
  41f4de:	ret    
  41f4df:	and    ah,BYTE PTR [edi-0x69]
  41f4e2:	lds    eax,FWORD PTR [esi-0x18]
  41f4e5:	fwait
  41f4e6:	jae    0x41f4fa
  41f4e8:	mov    cl,0x40
  41f4ea:	test   BYTE PTR [edx-0x46a4ee42],ah
  41f4f0:	dec    ecx
  41f4f1:	cmp    DWORD PTR [ebp-0x69],esp
  41f4f4:	clc    
  41f4f5:	ret    
  41f4f6:	sti    
  41f4f7:	rcl    DWORD PTR [ecx+0x5a],1
  41f4fa:	out    dx,eax
  41f4fb:	xchg   edi,eax
  41f4fc:	inc    ecx
  41f4fd:	or     ebx,DWORD PTR [ebp+0x5a]
  41f500:	push   edx
  41f501:	xchg   esp,eax
  41f502:	nop
  41f503:	popf   
  41f504:	add    al,0x4d
  41f506:	std    
  41f507:	and    ah,BYTE PTR [ebx-0x6eb36244]
  41f50d:	shr    DWORD PTR [edx+0x1db049ca],1
  41f513:	sbb    edx,ebp
  41f515:	xlat   BYTE PTR ds:[ebx]
  41f516:	or     eax,0x23e28e2
  41f51b:	std    
  41f51c:	mov    bl,0x0
  41f51e:	inc    eax
  41f51f:	stc    
  41f520:	dec    ebp
  41f521:	dec    ebp
  41f522:	das    
  41f523:	out    0xe6,eax
  41f525:	or     edi,DWORD PTR [edi]
  41f527:	jl     0x41f4b3
  41f529:	xchg   esi,eax
  41f52a:	repnz push edx
  41f52c:	mov    ah,0x43
  41f52e:	rol    BYTE PTR [eax-0x3a4ba9b3],1
  41f534:	(bad)  
  41f535:	ror    ebx,1
  41f537:	mov    ecx,0x744f9f2f
  41f53c:	je     0x41f558
  41f53e:	or     ecx,DWORD PTR [edi]
  41f540:	popa   
  41f541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f542:	arpl   WORD PTR [edi],dx
  41f544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f545:	dec    edi
  41f546:	xor    bh,ah
  41f548:	mov    cl,0x8f
  41f54a:	fnstenv [ebp-0x1d]
  41f54d:	dec    esp
  41f54e:	and    BYTE PTR cs:[eax+0x3b],dh
  41f552:	ret    0xaad1
  41f555:	or     eax,0xac661483
  41f55a:	pop    edx
  41f55b:	and    ecx,DWORD PTR [ecx+0x28]
  41f55e:	mov    ch,0xc0
  41f560:	xor    eax,0x4874fe97
  41f565:	xchg   DWORD PTR [eax-0x5a],ebp
  41f568:	jae    0x41f584
  41f56a:	scas   eax,DWORD PTR es:[edi]
  41f56b:	and    BYTE PTR [edi+0x6c],dh
  41f56e:	call   DWORD PTR [edx+0x6c]
  41f571:	fistp  DWORD PTR [edi+0x2bb6a1a6]
  41f577:	sub    DWORD PTR [ebx],eax
  41f579:	hlt    
  41f57a:	int3   
  41f57b:	jl     0x41f576
  41f57d:	xlat   BYTE PTR ds:[ebx]
  41f57e:	push   ss
  41f57f:	pop    es
  41f580:	aas    
  41f581:	jae    0x41f5b7
  41f583:	pop    ds
  41f584:	repnz dec ecx
  41f586:	out    dx,eax
  41f587:	push   ds
  41f588:	fwait
  41f589:	cwde   
  41f58a:	push   eax
  41f58b:	cmp    ecx,DWORD PTR [ebx+0xe5ca254]
  41f591:	outs   dx,BYTE PTR ds:[esi]
  41f592:	jb     0x41f580
  41f594:	jnp    0x41f583
  41f596:	test   BYTE PTR [edi],al
  41f598:	cwde   
  41f599:	cmovae edi,DWORD PTR [edi]
  41f59c:	adc    eax,DWORD PTR [ecx+0x44]
  41f59f:	xor    ah,BYTE PTR [esi+0x2d]
  41f5a2:	push   0x5f
  41f5a4:	dec    edi
  41f5a5:	imul   edi,DWORD PTR [edx],0xc523cadb
  41f5ab:	dec    BYTE PTR [edx+0x23]
  41f5ae:	xchg   edx,eax
  41f5af:	mov    ecx,0x62c8ab6b
  41f5b4:	push   es
  41f5b5:	fisttp QWORD PTR [edi]
  41f5b7:	cmp    dh,ch
  41f5b9:	addr16 push edx
  41f5bb:	les    ebx,FWORD PTR [edi+eiz*4]
  41f5be:	pop    eax
  41f5bf:	frstor gs:[ecx]
  41f5c2:	xor    edx,esi
  41f5c4:	fcomp  QWORD PTR [edx+ebp*1]
  41f5c7:	jbe    0x41f625
  41f5c9:	lods   al,BYTE PTR ds:[esi]
  41f5ca:	push   ds
  41f5cb:	sub    esi,DWORD PTR [ebx]
  41f5cd:	out    0xeb,al
  41f5cf:	les    ecx,FWORD PTR [eax]
  41f5d1:	mov    bl,0x1a
  41f5d3:	dec    ebx
  41f5d4:	ins    DWORD PTR es:[edi],dx
  41f5d5:	pop    ds
  41f5d6:	and    DWORD PTR [edi-0x68e61c1b],ebx
  41f5dc:	jb     0x41f607
  41f5de:	adc    BYTE PTR [ecx+0x22],ah
  41f5e1:	sub    ch,BYTE PTR [ecx+0x4dc87e2d]
  41f5e7:	je     0x41f59b
  41f5e9:	sub    edi,edi
  41f5eb:	pusha  
  41f5ec:	cmp    eax,0x687157e8
  41f5f1:	sub    eax,0x19ab2bc8
  41f5f6:	adc    BYTE PTR [ebx-0x2c],dl
  41f5f9:	loop   0x41f621
  41f5fb:	pop    edx
  41f5fc:	scas   eax,DWORD PTR es:[edi]
  41f5fd:	lds    edi,FWORD PTR [edx-0x24c1901e]
  41f603:	(bad)  
  41f604:	out    dx,eax
  41f605:	ins    DWORD PTR es:[edi],dx
  41f606:	or     bl,BYTE PTR [ebx+0x593972f7]
  41f60c:	cmp    BYTE PTR [ebp-0x18],0x69
  41f610:	adc    bl,BYTE PTR [ebp+0x42a8633c]
  41f616:	cmp    BYTE PTR [ebx-0x50d62b59],bl
  41f61c:	sbb    BYTE PTR [ecx+edi*2+0x78],dh
  41f620:	sub    DWORD PTR [eax+eiz*2-0x7e],edx
  41f624:	dec    ecx
  41f625:	retf   
  41f626:	or     eax,0x9cabdf74
  41f62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f62c:	clc    
  41f62d:	cli    
  41f62e:	(bad)  
  41f630:	xchg   edx,eax
  41f631:	mov    fs,edx
  41f633:	fwait
  41f634:	mov    ebx,0xfa63127e
  41f639:	sbb    al,0x51
  41f63b:	push   ebx
  41f63c:	sub    ecx,DWORD PTR es:[edi]
  41f63f:	nop
  41f640:	xchg   ebx,eax
  41f641:	inc    esp
  41f642:	mov    ah,0xf4
  41f644:	sbb    BYTE PTR [ecx+0x45af2ced],bh
  41f64a:	sbb    DWORD PTR [esi+0x3b],edx
  41f64d:	add    eax,0x73d46ab0
  41f652:	inc    ebx
  41f653:	sub    ebp,esi
  41f655:	retf   0x8fcc
  41f658:	push   ss
  41f659:	jle    0x41f641
  41f65b:	adc    DWORD PTR [eax+0x253383dd],esi
  41f661:	jne    0x41f5fd
  41f663:	sub    al,0x5b
  41f665:	push   edx
  41f666:	pusha  
  41f667:	xlat   BYTE PTR ds:[ebx]
  41f668:	mov    dh,0xb3
  41f66a:	(bad)  
  41f66b:	sub    ah,ch
  41f66d:	aas    
  41f66e:	stos   DWORD PTR es:[edi],eax
  41f66f:	sbb    ecx,esp
  41f671:	test   al,0xd0
  41f673:	push   ebx
  41f674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f675:	loop   0x41f6e9
  41f677:	fs mov dh,0xfc
  41f67a:	add    eax,0xfc25d33b
  41f67f:	adc    edx,eax
  41f681:	mov    BYTE PTR [ecx+0x5e],dh
  41f684:	imul   edx,DWORD PTR [ebx-0x61],0x4edf5f5
  41f68b:	call   0xbdeb8039
  41f690:	jmp    0x41f6e3
  41f692:	and    bl,BYTE PTR [edi+ebx*8+0x2d]
  41f696:	jns    0x41f62a
  41f698:	bound  edi,QWORD PTR [esi]
  41f69a:	inc    ebp
  41f69b:	jb     0x41f6b4
  41f69d:	dec    esp
  41f69e:	mov    ch,0xe7
  41f6a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6a1:	xor    cl,dh
  41f6a3:	push   esp
  41f6a4:	es dec ebp
  41f6a6:	jbe    0x41f6a4
  41f6a8:	cmp    al,0xd2
  41f6aa:	imul   ecx,ecx,0x48be598f
  41f6b0:	add    ecx,ecx
  41f6b2:	ss mov edx,0x753fdfa8
  41f6b8:	and    ah,0xb3
  41f6bb:	popf   
  41f6bc:	inc    esi
  41f6bd:	outs   dx,BYTE PTR ds:[esi]
  41f6be:	rcr    bl,1
  41f6c0:	sub    esp,DWORD PTR [ecx-0x65d39d04]
  41f6c6:	popa   
  41f6c7:	adc    BYTE PTR [ebx+0xb],dl
  41f6ca:	imul   edi,ecx,0x636dd377
  41f6d0:	cwde   
  41f6d1:	test   al,0xa7
  41f6d3:	jns    0x41f6e5
  41f6d5:	stc    
  41f6d6:	retf   
  41f6d7:	dec    esi
  41f6d8:	cmp    BYTE PTR [esp+eiz*4+0xf],dl
  41f6dc:	test   BYTE PTR [ebx+eax*2+0xb],bl
  41f6e0:	pop    edx
  41f6e1:	(bad)  
  41f6e3:	dec    esi
  41f6e4:	pop    eax
  41f6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e6:	fistp  DWORD PTR [ebp+0x173b2bb8]
  41f6ec:	jge    0x41f723
  41f6ee:	xor    ebx,DWORD PTR [edi+0x2fe90e70]
  41f6f4:	jl     0x41f741
  41f6f6:	pop    es
  41f6f7:	out    dx,al
  41f6f8:	pop    eax
  41f6f9:	jmp    0x14bf9c57
  41f6fe:	sbb    esi,DWORD PTR [edi]
  41f700:	cdq    
  41f701:	sbb    bh,BYTE PTR [esp+ebp*8]
  41f704:	outs   dx,DWORD PTR ds:[esi]
  41f705:	test   BYTE PTR [esi],al
  41f707:	test   ebp,esi
  41f709:	imul   ebp
  41f70b:	pusha  
  41f70c:	aam    0x82
  41f70e:	retf   
  41f70f:	test   al,0xa4
  41f711:	pop    edx
  41f712:	ins    DWORD PTR es:[edi],dx
  41f713:	sub    BYTE PTR [esi],0x6d
  41f716:	pop    ecx
  41f717:	lahf   
  41f718:	sbb    bl,BYTE PTR [esi]
  41f71a:	mov    cl,0xa7
  41f71c:	jnp    0x41f712
  41f71e:	inc    ebx
  41f71f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f720:	mov    dl,0xe2
  41f722:	push   eax
  41f723:	sub    edi,DWORD PTR [edi-0x50]
  41f726:	xlat   BYTE PTR ds:[ebx]
  41f727:	or     eax,DWORD PTR [ecx]
  41f729:	jbe    0x41f6f9
  41f72b:	inc    ebx
  41f72c:	and    bh,dl
  41f72e:	data16 test al,0xbf
  41f731:	repnz mov bl,0x4e
  41f734:	and    DWORD PTR [ecx],ebp
  41f736:	retf   0x2f8c
  41f739:	sbb    al,0x1c
  41f73b:	out    dx,eax
  41f73c:	xchg   ebp,eax
  41f73d:	pop    esi
  41f73e:	jb     0x41f748
  41f740:	dec    esi
  41f741:	inc    esi
  41f742:	adc    DWORD PTR [eax-0x21a5f509],esp
  41f748:	or     ecx,DWORD PTR [esi-0x5129ecc2]
  41f74e:	rol    DWORD PTR [ebx+0xfc89242],1
  41f754:	fiadd  DWORD PTR [ecx+0x20601bfd]
  41f75a:	pop    esi
  41f75b:	mov    BYTE PTR [ebp-0x6f61048c],dh
  41f761:	call   0xef9a:0xe3850e39
  41f768:	push   ds
  41f769:	fsub   DWORD PTR [ecx]
  41f76b:	je     0x41f728
  41f76d:	(bad)  
  41f76e:	imul   edi,DWORD PTR [esi+0x2d],0xffffffba
  41f772:	int    0x7e
  41f774:	jbe    0x41f718
  41f776:	cld    
  41f777:	sub    eax,0x94e88a3a
  41f77c:	or     al,0x86
  41f77e:	gs (bad) 
  41f780:	aas    
  41f781:	cs fld st(4)
  41f784:	sbb    DWORD PTR [edi+0x67],eax
  41f787:	mov    eax,ds:0xd4d7095b
  41f78c:	xor    cl,0x1a
  41f78f:	sbb    bh,cl
  41f791:	push   cs
  41f792:	xor    eax,0x7dcba973
  41f797:	lds    esp,FWORD PTR [eax+0x4020a27d]
  41f79d:	cmp    bl,BYTE PTR [ecx+edi*4+0x48]
  41f7a1:	js     0x41f7eb
  41f7a3:	shl    BYTE PTR [ebp-0x14],cl
  41f7a6:	xchg   ebp,eax
  41f7a7:	mov    ecx,0xabc714c3
  41f7ac:	daa    
  41f7ad:	and    esp,esi
  41f7af:	add    al,0xef
  41f7b1:	in     eax,0xbd
  41f7b3:	fcom   QWORD PTR [ebx-0x76dd93c4]
  41f7b9:	push   esi
  41f7ba:	ret    0xb4a1
  41f7bd:	pop    ss
  41f7be:	scas   al,BYTE PTR es:[edi]
  41f7bf:	xchg   ebx,eax
  41f7c0:	dec    edi
  41f7c1:	push   eax
  41f7c2:	clc    
  41f7c3:	ret    
  41f7c4:	or     DWORD PTR [esi+0x2d],edi
  41f7c7:	fisubr DWORD PTR [ebp-0x3e]
  41f7ca:	daa    
  41f7cb:	mov    ch,0x7
  41f7cd:	or     ch,cl
  41f7cf:	repz mov al,ds:0xf30fd1ef
  41f7d5:	mov    esp,0xdb151f81
  41f7da:	pop    ds
  41f7db:	rol    edx,1
  41f7dd:	or     al,0x1f
  41f7df:	xor    edi,DWORD PTR [edi]
  41f7e1:	xchg   esp,eax
  41f7e2:	jl     0x41f799
  41f7e4:	sti    
  41f7e5:	pop    ecx
  41f7e6:	jge    0x41f77b
  41f7e8:	sub    cl,BYTE PTR [edi+eiz*2-0x10da11d3]
  41f7ef:	ret    
  41f7f0:	mov    eax,0x177f4af0
  41f7f5:	sub    DWORD PTR [edi-0x55],edi
  41f7f8:	rol    ebx,0x33
  41f7fb:	push   ebx
  41f7fc:	imul   esi,ebp,0xffffffb4
  41f7ff:	cli    
  41f800:	jnp    0x41f7b4
  41f802:	push   dx
  41f804:	sbb    DWORD PTR [eax],ebx
  41f806:	push   cs
  41f807:	shl    BYTE PTR [eax-0xe53e931],cl
  41f80d:	mov    eax,ds:0x99c4e023
  41f812:	or     edi,DWORD PTR [ebp-0x17c0af7b]
  41f818:	call   0x79b0f41f
  41f81d:	mov    cl,BYTE PTR [edx+ecx*2+0x100b445a]
  41f824:	popf   
  41f825:	lahf   
  41f826:	frstor [edx]
  41f828:	xor    DWORD PTR [edi+0x46],edi
  41f82b:	fst    DWORD PTR [edi+0x732db260]
  41f831:	gs push ecx
  41f833:	cmp    eax,0xd0ec3982
  41f838:	ja     0x41f8af
  41f83a:	(bad)  
  41f83b:	sbb    eax,DWORD PTR [ebx]
  41f83d:	lods   al,BYTE PTR ds:[esi]
  41f83e:	ss pushf 
  41f840:	not    BYTE PTR [edx+0x75]
  41f843:	sahf   
  41f844:	lock enter 0x25ba,0x1
  41f849:	mov    bh,0x5e
  41f84b:	sbb    ecx,DWORD PTR [esi+eax*2]
  41f84e:	mov    edi,0xd13ff207
  41f853:	mov    ds:0x642b94f6,eax
  41f858:	mov    ebp,0x56a99672
  41f85d:	test   BYTE PTR [ebx+0x69],bl
  41f860:	inc    esi
  41f861:	outs   dx,BYTE PTR ds:[esi]
  41f862:	mov    ch,0x82
  41f864:	loope  0x41f7f2
  41f866:	nop
  41f867:	xor    eax,0xffffffae
  41f86a:	lds    edi,FWORD PTR [edi]
  41f86c:	dec    ebp
  41f86d:	dec    esp
  41f86e:	sub    al,BYTE PTR [ebp+0x26abb3be]
  41f874:	sar    BYTE PTR [edx+0x32],0xda
  41f878:	push   es
  41f879:	xchg   esp,eax
  41f87a:	cmp    BYTE PTR [eax+0x19],al
  41f87d:	pop    esp
  41f87e:	icebp  
  41f87f:	ds imul esp,esi,0xbbcaa663
  41f886:	rcl    dl,0x94
  41f889:	imul   eax,DWORD PTR [esi],0xd3311384
  41f88f:	dec    esp
  41f890:	out    0x42,al
  41f892:	rcr    BYTE PTR [edx+0x45344f6f],0xd7
  41f899:	call   0x313:0xc8c5b770
  41f8a0:	(bad)  
  41f8a1:	xor    al,0x5d
  41f8a3:	mov    esi,0xcb7c6a1e
  41f8a8:	jmp    0x8b48:0xb718de1b
  41f8af:	data16 jnp 0x41f8a7
  41f8b2:	jb     0x41f87f
  41f8b4:	jmp    0x354c:0x90ebca95
  41f8bb:	sti    
  41f8bc:	fs cmp bl,0xd0
  41f8c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8c1:	xor    BYTE PTR [edi+0x7d8329ae],ch
  41f8c7:	fwait
  41f8c8:	(bad)  
  41f8c9:	daa    
  41f8ca:	mov    WORD PTR [edi+0x69],es
  41f8cd:	(bad)  
  41f8ce:	adc    ebp,edi
  41f8d0:	jo     0x41f927
  41f8d2:	jnp    0x41f8a8
  41f8d4:	inc    edx
  41f8d5:	pop    ss
  41f8d6:	out    dx,eax
  41f8d7:	push   es
  41f8d8:	jecxz  0x41f917
  41f8da:	sar    DWORD PTR [esi+eax*2-0x5d8a723],cl
  41f8e1:	or     edi,DWORD PTR [ebp+0x11]
  41f8e4:	jnp    0x41f93c
  41f8e6:	in     al,0x8d
  41f8e8:	cmp    ah,BYTE PTR [edx-0x6ac18c04]
  41f8ee:	imul   edi
  41f8f0:	adc    al,0x64
  41f8f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8f3:	out    0x6d,al
  41f8f5:	jle    0x41f8f7
  41f8f7:	and    eax,0x7cccc6a6
  41f8fc:	rcl    BYTE PTR [ebp-0x657dd031],0xa1
  41f903:	cmc    
  41f904:	mov    ebx,0x3113c048
  41f909:	iret   
  41f90a:	sbb    eax,0x462cef11
  41f90f:	mov    eax,ds:0xbf428005
  41f914:	mov    ebx,0xf8cc8e8e
  41f919:	div    dl
  41f91b:	call   0x7c75:0xc5d542d5
  41f922:	inc    ecx
  41f923:	push   eax
  41f924:	hlt    
  41f925:	movsx  esi,sp
  41f928:	(bad)  
  41f92a:	bound  ecx,QWORD PTR [esi]
  41f92c:	shl    BYTE PTR [ebp+0x32],1
  41f92f:	cmp    eax,edi
  41f931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f932:	xchg   ecx,eax
  41f933:	dec    esi
  41f934:	xor    DWORD PTR [edi-0x32],ebx
  41f937:	fwait
  41f938:	lea    ecx,[edi-0x679d0676]
  41f93e:	dec    ebp
  41f93f:	popf   
  41f940:	sub    ecx,DWORD PTR [esi]
  41f942:	rol    DWORD PTR [edx-0x5fe7ea87],0x38
  41f949:	jnp    0x41f9c7
  41f94b:	xchg   DWORD PTR [ebp+esi*2-0x71413a],edx
  41f952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f953:	jge    0x41f983
  41f955:	or     al,0x94
  41f957:	pusha  
  41f958:	clc    
  41f959:	pop    edx
  41f95a:	ret    
  41f95b:	scas   eax,DWORD PTR es:[edi]
  41f95c:	xor    edx,DWORD PTR [eax]
  41f95e:	sub    eax,0x7694ab0b
  41f963:	fsubr  st(4),st
  41f965:	bound  eax,QWORD PTR [ebx+0x482a77c6]
  41f96b:	add    DWORD PTR gs:[ecx+0x7f33f413],ebx
  41f972:	bound  esp,QWORD PTR es:0x2e8c8e0d
  41f979:	test   dh,ch
  41f97b:	inc    ecx
  41f97c:	gs mov ecx,0x6d69054b
  41f982:	dec    ecx
  41f983:	mov    dh,0x20
  41f985:	div    BYTE PTR [ecx]
  41f987:	mov    eax,ds:0x61545ecd
  41f98c:	cld    
  41f98d:	js     0x41f954
  41f98f:	pop    ebp
  41f990:	inc    ecx
  41f991:	jb     0x41f9aa
  41f993:	push   esi
  41f994:	lods   eax,DWORD PTR ds:[esi]
  41f995:	dec    esp
  41f996:	retf   
  41f997:	dec    esi
  41f998:	push   esi
  41f999:	call   FWORD PTR [edi-0x64]
  41f99c:	sbb    al,0x61
  41f99e:	out    0x29,al
  41f9a0:	jns    0x41f9d4
  41f9a2:	jae    0x41f99e
  41f9a4:	test   al,0xac
  41f9a6:	(bad)  
  41f9a7:	xor    BYTE PTR [bp+di+0x3],dl
  41f9ab:	or     eax,0xb63eef12
  41f9b0:	mov    ebx,0xf576aca1
  41f9b5:	sub    BYTE PTR [edi],al
  41f9b7:	mov    edi,0xf7606f5e
  41f9bc:	ds call 0x299a6bfd
  41f9c2:	jle    0x41f95a
  41f9c4:	(bad)  
  41f9c5:	in     eax,dx
  41f9c6:	cmp    eax,0x4fde3c74
  41f9cb:	call   0x9c5e71dc
  41f9d0:	call   0x93ed:0x83fd1825
  41f9d7:	sbb    BYTE PTR [esi-0x5f],dh
  41f9da:	stos   BYTE PTR es:[edi],al
  41f9db:	xlat   BYTE PTR ds:[ebx]
  41f9dc:	arpl   WORD PTR [ecx+edi*8],cx
  41f9df:	and    edi,DWORD PTR [esi+0x5c]
  41f9e2:	ds dec ecx
  41f9e4:	fnstenv [edx+0x2]
  41f9e7:	push   es
  41f9e8:	bound  ebx,QWORD PTR [edx+0x5b]
  41f9eb:	inc    ebx
  41f9ec:	jae    0x41fa6c
  41f9ee:	and    DWORD PTR [esi],esi
  41f9f0:	lods   al,BYTE PTR ds:[esi]
  41f9f1:	mov    ds:0xe1d93eca,al
  41f9f6:	icebp  
  41f9f7:	push   edx
  41f9f8:	cwde   
  41f9f9:	ret    0x7672
  41f9fc:	jno    0x41fa41
  41f9fe:	pop    esp
  41f9ff:	fisub  DWORD PTR [ebx-0x69f5cff8]
  41fa05:	lods   al,BYTE PTR ds:[esi]
  41fa06:	jbe    0x41fa21
  41fa08:	mov    esi,edx
  41fa0a:	push   0x118fc2c0
  41fa0f:	mov    al,0xfe
  41fa11:	ja     0x41f9c5
  41fa13:	popa   
  41fa14:	leave  
  41fa15:	sar    BYTE PTR [ecx],0xaa
  41fa18:	mov    ds:0x20f842ce,eax
  41fa1d:	and    BYTE PTR ds:0xed8ab8e2,ah
  41fa23:	int3   
  41fa24:	push   es
  41fa25:	fwait
  41fa26:	ins    BYTE PTR es:[edi],dx
  41fa27:	adc    eax,0x7051458
  41fa2c:	shl    BYTE PTR [edi+0x33],cl
  41fa2f:	add    bh,BYTE PTR [ebx]
  41fa31:	xor    bh,ch
  41fa33:	push   edi
  41fa34:	push   ebx
  41fa35:	xchg   esp,eax
  41fa36:	jo     0x41f9fa
  41fa38:	and    BYTE PTR [eax],bh
  41fa3a:	mov    BYTE PTR [edi],0xde
  41fa3d:	stos   DWORD PTR es:[edi],eax
  41fa3e:	std    
  41fa3f:	jne    0x41f9dd
  41fa41:	jmp    0xc6e4319b
  41fa46:	daa    
  41fa47:	aad    0xd1
  41fa49:	test   DWORD PTR [esi+0x5d3e6926],eax
  41fa4f:	pop    edx
  41fa50:	xchg   esi,eax
  41fa51:	retf   0x243f
  41fa54:	mov    esp,DWORD PTR [esi+0x60]
  41fa57:	xchg   ebx,eax
  41fa58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa59:	aas    
  41fa5a:	jecxz  0x41fa4e
  41fa5c:	sub    al,0xa1
  41fa5e:	add    al,0x7b
  41fa60:	mov    edx,0xc86aada5
  41fa65:	cmp    BYTE PTR [ecx],dl
  41fa67:	je     0x41fa5e
  41fa69:	fst    QWORD PTR [ecx-0x16]
  41fa6c:	or     eax,0xb6d367c4
  41fa71:	pushf  
  41fa72:	mov    ecx,0x19af9808
  41fa77:	pushf  
  41fa78:	int3   
  41fa79:	mov    esi,0xfc2168e6
  41fa7e:	mov    BYTE PTR [ecx+0x5d],bh
  41fa81:	jmp    0x41fa53
  41fa83:	inc    ebp
  41fa84:	shl    DWORD PTR [esi+0x229047cc],0x86
  41fa8b:	in     eax,0x39
  41fa8d:	cmp    eax,DWORD PTR [ebx+eax*2]
  41fa90:	add    DWORD PTR [ebx+0x69fe1670],0xffffff9e
  41fa97:	mov    al,ds:0xab273a7f
  41fa9c:	mov    edx,DWORD PTR [ebx-0x659ba732]
  41faa2:	(bad)
  41faa6:	sbb    eax,0xb9e06d69
  41faab:	pop    eax
  41faac:	out    0xf5,eax
  41faae:	sub    al,0xe7
  41fab0:	inc    edx
  41fab1:	es or  ah,bh
  41fab4:	or     ebp,eax
  41fab6:	loope  0x41fb2a
  41fab8:	sbb    esp,edi
  41faba:	ja     0x41facc
  41fabc:	jmp    0xc3564a04
  41fac1:	or     dl,bl
  41fac3:	ja     0x41fae4
  41fac5:	arpl   WORD PTR [edi],bx
  41fac7:	xor    eax,0x6715cf0c
  41facc:	or     al,0x37
  41face:	inc    ebx
  41facf:	xor    ah,BYTE PTR [eax-0x16e3c935]
  41fad5:	(bad)  
  41fad6:	fldcw  WORD PTR [ebx+0x1f1b8ed6]
  41fadc:	or     BYTE PTR [edx+0x6],0x4c
  41fae0:	mov    bl,0x22
  41fae2:	es jl  0x41faeb
  41fae5:	lods   al,BYTE PTR ds:[esi]
  41fae6:	enter  0x778d,0x48
  41faea:	ror    edx,0xd
  41faed:	lods   al,BYTE PTR ds:[esi]
  41faee:	popa   
  41faef:	push   ds
  41faf0:	bound  eax,QWORD PTR [ebx]
  41faf2:	mov    al,ds:0xb81487fc
  41faf7:	pop    ecx
  41faf8:	mov    ah,0xbc
  41fafa:	cli    
  41fafb:	bound  eax,QWORD PTR [ebp+edx*8+0x3d98192c]
  41fb02:	fcomp  QWORD PTR [edi]
  41fb04:	fbstp  TBYTE PTR [edi+0x3a0f2cc3]
  41fb0a:	(bad)  [eax+0x6cacc414]
  41fb10:	jecxz  0x41fb55
  41fb12:	jne    0x41fafb
  41fb14:	xlat   BYTE PTR ds:[ebx]
  41fb15:	sahf   
  41fb16:	push   es
  41fb17:	fiadd  DWORD PTR [eax]
  41fb19:	rol    BYTE PTR [edx],cl
  41fb1b:	setnp  ch
  41fb1e:	mov    ebx,0x84e283c6
  41fb23:	out    0xff,al
  41fb25:	jno    0x41fb2c
  41fb27:	adc    DWORD PTR [edx],0xffffffa7
  41fb2a:	neg    DWORD PTR [eax+0x5ab6da80]
  41fb30:	jo     0x41fb06
  41fb32:	mov    ds:0x6ecc9ec2,eax
  41fb37:	ret    0xc039
  41fb3a:	pop    eax
  41fb3b:	mov    cl,0x30
  41fb3d:	cmp    BYTE PTR [eax],ah
  41fb3f:	js     0x41faca
  41fb41:	add    ebp,DWORD PTR ss:[edi]
  41fb44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb45:	xor    eax,0x4b0c6b43
  41fb4a:	cmp    bl,dl
  41fb4c:	adc    ch,dh
  41fb4e:	lods   al,BYTE PTR ds:[esi]
  41fb4f:	xchg   DWORD PTR [edi+0x628f897c],ecx
  41fb55:	mov    cl,0x9
  41fb57:	(bad)  
  41fb58:	es loop 0x41fb09
  41fb5b:	iret   
  41fb5c:	and    esp,edi
  41fb5e:	je     0x41fb04
  41fb60:	mov    WORD PTR [esp+eiz*4+0x3c],ss
  41fb64:	out    dx,eax
  41fb65:	sub    ecx,edi
  41fb67:	xor    bl,ch
  41fb69:	mov    dh,0xbb
  41fb6b:	ja     0x41fbce
  41fb6d:	js     0x41fb8d
  41fb6f:	pop    ds
  41fb70:	mov    dh,0xbb
  41fb72:	mov    ah,0xf
  41fb74:	lea    ebp,[edi+0x59]
  41fb77:	sub    al,BYTE PTR [eax]
  41fb79:	sar    BYTE PTR [edx],1
  41fb7b:	pop    edi
  41fb7c:	jle    0x41fbc1
  41fb7e:	(bad)  
  41fb7f:	mov    ebp,0x9cb517a
  41fb84:	jb     0x41fb5a
  41fb86:	cdq    
  41fb87:	ins    DWORD PTR es:[edi],dx
  41fb88:	fwait
  41fb89:	outs   dx,DWORD PTR ds:[esi]
  41fb8a:	popf   
  41fb8b:	cdq    
  41fb8c:	dec    ebx
  41fb8d:	in     eax,dx
  41fb8e:	and    BYTE PTR [ecx],cl
  41fb90:	push   edx
  41fb91:	stos   BYTE PTR es:[edi],al
  41fb92:	mov    ebp,0xc0be7c12
  41fb97:	pop    ecx
  41fb98:	cmc    
  41fb99:	inc    ecx
  41fb9a:	jp     0x41fc03
  41fb9c:	mov    bl,0x1a
  41fb9e:	cmp    eax,0x134889e2
  41fba3:	mov    esi,0x661b4e56
  41fba8:	ror    DWORD PTR [esi+0x59dd7c23],0x32
  41fbaf:	test   bh,al
  41fbb1:	mov    ah,BYTE PTR [edx-0x11c7ffd7]
  41fbb7:	leave  
  41fbb8:	shl    DWORD PTR [eax+0x6c6b4750],0xca
  41fbbf:	in     eax,0xc5
  41fbc1:	jno    0x41fbe1
  41fbc3:	jecxz  0x41fc1e
  41fbc5:	adc    bl,0x21
  41fbc8:	mov    ss,WORD PTR [edi+0x6d33c080]
  41fbce:	aam    0x9b
  41fbd0:	sahf   
  41fbd1:	imul   ebp,DWORD PTR ds:0x23a73b07,0xffffff98
  41fbd8:	mov    ah,0x15
  41fbda:	out    0x7f,eax
  41fbdc:	sub    eax,0x3355a5b2
  41fbe1:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41fbe3:	or     eax,esi
  41fbe5:	adc    al,0x6d
  41fbe7:	(bad)  
  41fbe8:	push   edi
  41fbe9:	imul   ecx,DWORD PTR ds:0xfd618d80,0x21d3c659
  41fbf3:	mov    eax,0x44780409
  41fbf8:	mov    bh,0xcc
  41fbfa:	pop    edi
  41fbfb:	sub    al,0xee
  41fbfd:	mov    ah,0x2b
  41fbff:	and    dl,BYTE PTR [ebx]
  41fc01:	push   eax
  41fc02:	xor    eax,0xb4a7073b
  41fc07:	sub    DWORD PTR [ecx-0x27cdaf05],esp
  41fc0d:	push   ss
  41fc0e:	inc    esp
  41fc0f:	push   ebp
  41fc10:	jne    0x41fc27
  41fc12:	pop    edx
  41fc13:	mov    DWORD PTR [ecx+0x76d5d9eb],esi
  41fc19:	rol    DWORD PTR [eax-0x48c50e0e],cl
  41fc1f:	xlat   BYTE PTR ds:[ebx]
  41fc20:	das    
  41fc21:	std    
  41fc22:	lods   al,BYTE PTR ds:[esi]
  41fc23:	sub    ebx,DWORD PTR [eax-0x5cd0dc81]
  41fc29:	mov    ch,BYTE PTR [ebx+0x29dce2b3]
  41fc2f:	adc    DWORD PTR [esi],edx
  41fc31:	imul   esi,DWORD PTR [esi+0x15],0xffffffa4
  41fc35:	xor    al,0xe1
  41fc37:	push   eax
  41fc38:	mov    ah,0xe4
  41fc3a:	fiadd  DWORD PTR [esp+ecx*1+0x3c]
  41fc3e:	jmp    0x41fcbc
  41fc40:	out    dx,eax
  41fc41:	push   edx
  41fc42:	pop    edx
  41fc43:	push   eax
  41fc44:	scas   al,BYTE PTR es:[edi]
  41fc45:	pop    esp
  41fc46:	stos   BYTE PTR es:[edi],al
  41fc47:	mov    edi,DWORD PTR [edx*8-0x3d780249]
  41fc4e:	add    DWORD PTR [ebx+0x374a1b71],esi
  41fc54:	cmp    BYTE PTR [esi],bl
  41fc56:	outs   dx,BYTE PTR ds:[esi]
  41fc57:	rcl    DWORD PTR [ecx+0x37],0x56
  41fc5b:	addr16 stc 
  41fc5d:	in     eax,0x6a
  41fc5f:	popa   
  41fc60:	addr16 ret 0xc8a
  41fc64:	test   eax,0xc0e632af
  41fc69:	popf   
  41fc6a:	dec    eax
  41fc6b:	or     al,0x86
  41fc6d:	retf   0xc7bf
  41fc70:	ins    BYTE PTR es:[edi],dx
  41fc71:	mov    eax,ds:0xa853b129
  41fc76:	shr    DWORD PTR [eax+edx*1-0x6b],cl
  41fc7a:	push   ecx
  41fc7b:	(bad)  
  41fc7c:	mov    dh,0x81
  41fc7f:	ds in  eax,dx
  41fc81:	int    0xf5
  41fc83:	nop
  41fc84:	add    DWORD PTR [esi+ecx*4-0x5d],ecx
  41fc88:	jae    0x41fc31
  41fc8a:	or     DWORD PTR [edx-0x48],edi
  41fc8d:	outs   dx,BYTE PTR ds:[esi]
  41fc8e:	push   ds
  41fc8f:	cmp    eax,0xcbddbf64
  41fc94:	jns    0x41fc4b
  41fc96:	sub    DWORD PTR [edi-0x66],ebx
  41fc99:	arpl   WORD PTR ds:0x915e5fcc,di
  41fc9f:	mov    bl,0x7a
  41fca1:	pop    eax
  41fca2:	jbe    0x41fc74
  41fca4:	aaa    
  41fca5:	leave  
  41fca6:	int    0xe4
  41fca8:	xor    al,0xf2
  41fcaa:	pop    ebp
  41fcab:	in     eax,0x92
  41fcad:	xchg   ebp,eax
  41fcae:	mov    ds,WORD PTR [ebp+edi*1-0x3d]
  41fcb2:	popf   
  41fcb3:	ins    BYTE PTR es:[edi],dx
  41fcb4:	int    0x50
  41fcb6:	dec    eax
  41fcb7:	adc    eax,DWORD PTR [ebx]
  41fcb9:	inc    eax
  41fcba:	scas   eax,DWORD PTR es:[edi]
  41fcbb:	inc    eax
  41fcbc:	add    DWORD PTR [ebp+0x7e],0x4c
  41fcc0:	je     0x41fcdc
  41fcc2:	jge    0x41fd02
  41fcc4:	and    ecx,DWORD PTR [edi-0x1f97dd27]
  41fcca:	icebp  
  41fccb:	jl     0x41fc94
  41fccd:	sbb    eax,0x6d8273f9
  41fcd2:	ins    BYTE PTR es:[edi],dx
  41fcd3:	inc    edi
  41fcd4:	sbb    eax,0xc29b3f14
  41fcd9:	(bad)  
  41fcda:	xor    al,0x39
  41fcdc:	mov    BYTE PTR [edi],dh
  41fcde:	in     eax,dx
  41fcdf:	or     eax,0x22435a22
  41fce4:	push   es
  41fce5:	push   0xfcd025c6
  41fcea:	jg     0x41fcd9
  41fcec:	fild   QWORD PTR [esi]
  41fcee:	icebp  
  41fcef:	mov    WORD PTR [ecx+ecx*8],ds
  41fcf2:	dec    ebx
  41fcf3:	fadd   st(6),st
  41fcf5:	inc    eax
  41fcf6:	fs jmp 0x41fd61
  41fcf9:	(bad)  
  41fcfa:	adc    ah,BYTE PTR [esi]
  41fcfc:	aam    0xc1
  41fcfe:	(bad)  
  41fcff:	icebp  
  41fd00:	aad    0xbf
  41fd02:	(bad)  
  41fd03:	mov    al,ds:0x4650e28
  41fd08:	cmp    edx,DWORD PTR [edx]
  41fd0a:	push   esi
  41fd0b:	push   cs
  41fd0c:	iret   
  41fd0d:	lea    edx,[edi-0x15]
  41fd10:	or     eax,esi
  41fd12:	test   al,0x3
  41fd14:	mov    ecx,0x8d032b84
  41fd19:	sbb    BYTE PTR [edi+0x6b9877b5],bh
  41fd1f:	jl     0x41fd03
  41fd21:	int3   
  41fd22:	mov    ds:0x15c779e,al
  41fd27:	and    dl,BYTE PTR [ebx-0x4238099b]
  41fd2d:	or     ecx,ecx
  41fd2f:	in     eax,0xf3
  41fd31:	xor    bl,BYTE PTR [ebx]
  41fd33:	js     0x41fd4b
  41fd35:	fwait
  41fd36:	mov    dl,0xd7
  41fd38:	push   es
  41fd39:	mov    dl,0x98
  41fd3b:	cwde   
  41fd3c:	sub    bl,al
  41fd3e:	icebp  
  41fd3f:	pop    edx
  41fd40:	pop    ss
  41fd41:	out    0xaa,eax
  41fd43:	lds    eax,FWORD PTR [edx-0x2b]
  41fd46:	dec    esp
  41fd47:	push   ebp
  41fd48:	fnstenv [eax+0xb]
  41fd4b:	dec    ebx
  41fd4c:	sbb    DWORD PTR [esi-0x57],0xffffff8d
  41fd50:	push   0xb45104e3
  41fd55:	mov    esi,0x5cd7489a
  41fd5a:	push   eax
  41fd5b:	add    al,0xbc
  41fd5d:	es push ds
  41fd5f:	mov    ch,0x5c
  41fd61:	lods   eax,DWORD PTR ds:[esi]
  41fd62:	aam    0x6a
  41fd64:	hlt    
  41fd65:	push   edx
  41fd66:	dec    ebx
  41fd67:	fwait
  41fd68:	mov    eax,0x96a9e690
  41fd6d:	int3   
  41fd6e:	mov    edx,0xf79ca149
  41fd73:	pushf  
  41fd74:	test   edi,ebp
  41fd76:	mov    al,ds:0x95c72970
  41fd7b:	xor    al,0x22
  41fd7d:	arpl   bp,bx
  41fd7f:	push   ds
  41fd80:	dec    ebp
  41fd81:	daa    
  41fd82:	sbb    edx,DWORD PTR [edx]
  41fd84:	inc    ebp
  41fd85:	and    bl,dl
  41fd87:	rol    BYTE PTR [edx+eiz*2+0xaedb076],cl
  41fd8e:	push   edx
  41fd8f:	pop    edx
  41fd90:	popf   
  41fd91:	adc    DWORD PTR [edi],eax
  41fd93:	stc    
  41fd94:	pop    eax
  41fd95:	pop    ss
  41fd96:	fisub  DWORD PTR [edi]
  41fd98:	jbe    0x41fdab
  41fd9a:	and    BYTE PTR [esi+ecx*1-0x4d9b0c3f],0x10
  41fda2:	mov    dl,0x87
  41fda4:	mov    ebx,0xcf9fbc57
  41fda9:	mov    edx,0xd3519ccd
  41fdae:	call   0x20d7:0xd14cf716
  41fdb5:	xor    DWORD PTR [edi-0x4c60a90e],0xfffffff4
  41fdbc:	dec    edx
  41fdbd:	jmp    0x41fe31
  41fdbf:	pusha  
  41fdc0:	ror    DWORD PTR [edx-0x6f],1
  41fdc3:	pusha  
  41fdc4:	mov    edx,0x4804e0b5
  41fdc9:	cmp    eax,0x774268d3
  41fdce:	mov    cl,0x56
  41fdd0:	inc    ebp
  41fdd1:	mov    ds:0x523b8062,eax
  41fdd6:	and    ebp,DWORD PTR [ebx-0x5b]
  41fdd9:	push   esi
  41fdda:	pushf  
  41fddb:	(bad)  
  41fddc:	adc    DWORD PTR [eax+ebp*4],edi
  41fddf:	stos   BYTE PTR es:[edi],al
  41fde0:	adc    ebx,0x52cfdca5
  41fde6:	sub    eax,0x3fcf527b
  41fdeb:	pop    ds
  41fdec:	dec    ebx
  41fded:	jae    0x41fe1a
  41fdef:	scas   eax,DWORD PTR es:[edi]
  41fdf0:	jge    0x41fd8b
  41fdf2:	(bad)  
  41fdf4:	cs xchg edx,eax
  41fdf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdf7:	sbb    ah,BYTE PTR [ebx+0x81e5c3d]
  41fdfd:	sbb    DWORD PTR [edi-0x150b6da],eax
  41fe03:	pop    es
  41fe04:	mov    esp,0xa6445ec0
  41fe09:	inc    edi
  41fe0a:	adc    esi,ecx
  41fe0c:	sub    DWORD PTR [esp+ecx*4-0x1],edi
  41fe10:	test   eax,0xfc0cd8cc
  41fe15:	mov    bh,0xea
  41fe17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe18:	mov    eax,0xd067d065
  41fe1d:	sub    esi,esp
  41fe1f:	pop    ss
  41fe20:	cmp    eax,DWORD PTR [ebx-0x4e]
  41fe23:	pop    ebp
  41fe24:	dec    eax
  41fe25:	xchg   BYTE PTR [ebx+0x39],ah
  41fe28:	pop    ds
  41fe29:	(bad)  
  41fe2a:	jno    0x41fe0e
  41fe2c:	or     eax,0xcef69c2b
  41fe31:	retf   0xa5d1
  41fe34:	jnp    0x41feb0
  41fe36:	mov    ebx,0x37bf0a0
  41fe3b:	lods   eax,DWORD PTR ds:[esi]
  41fe3c:	xlat   BYTE PTR ds:[ebx]
  41fe3d:	(bad)  
  41fe3e:	mov    edi,0xdf4eb65c
  41fe43:	mov    ebp,0x13a66105
  41fe48:	dec    ecx
  41fe49:	ror    BYTE PTR [edx+0x15886b0b],cl
  41fe4f:	retf   0xbe92
  41fe52:	loope  0x41fdd7
  41fe54:	rol    DWORD PTR [edi-0xd],1
  41fe57:	jb     0x41fe36
  41fe59:	ror    DWORD PTR [esp+edi*1-0x3d],0xd0
  41fe5e:	retf   0xcef0
  41fe61:	jle    0x41fe3d
  41fe63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe64:	cmp    dl,BYTE PTR [bx]
  41fe67:	dec    edx
  41fe68:	aaa    
  41fe69:	or     eax,DWORD PTR [eax-0x1f]
  41fe6c:	push   ecx
  41fe6d:	jmp    0x2b468f89
  41fe72:	sbb    DWORD PTR [ebx-0x7048a6d2],esi
  41fe78:	jne    0x41fe7d
  41fe7a:	test   BYTE PTR [ecx],ch
  41fe7c:	mov    dh,BYTE PTR [edx*8-0x28696d52]
  41fe83:	mov    cl,0x73
  41fe85:	fist   DWORD PTR [eax]
  41fe87:	push   ebx
  41fe88:	mov    ds,WORD PTR [ebx-0x53313a3f]
  41fe8e:	mov    ds:0xb7682379,eax
  41fe93:	pop    ebp
  41fe94:	cdq    
  41fe95:	xchg   ebp,eax
  41fe96:	pop    es
  41fe97:	test   BYTE PTR [ebp-0x24],bl
  41fe9a:	pop    ebp
  41fe9b:	out    0x1f,eax
  41fe9d:	lods   eax,DWORD PTR ds:[esi]
  41fe9e:	pop    ss
  41fe9f:	inc    edi
  41fea0:	mov    al,ds:0x450ac96
  41fea5:	jmp    0xdb59:0xa1180138
  41feac:	mov    edi,0xfd42a7d
  41feb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb2:	mov    eax,0x17d17fe
  41feb7:	sbb    eax,0xc5d6763f
  41febc:	mov    edi,0x6aad2f55
  41fec1:	inc    ebp
  41fec2:	test   eax,0x88c0abad
  41fec7:	mov    dl,0xd5
  41fec9:	test   al,0xa5
  41fecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fecc:	jb     0x41ff20
  41fece:	push   cs
  41fecf:	pop    edx
  41fed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fed1:	sub    DWORD PTR [eax+0x9],ebp
  41fed4:	retf   
  41fed5:	scas   al,BYTE PTR es:[edi]
  41fed6:	imul   edx,DWORD PTR [ecx-0x6c],0x661280a5
  41fedd:	fs loop 0x41ff54
  41fee0:	lea    ecx,ds:0x37a5db3f
  41fee6:	ins    DWORD PTR es:[edi],dx
  41fee7:	ret    0x8318
  41feea:	mov    al,ds:0x6f8a7591
  41feef:	leave  
  41fef0:	xchg   edx,eax
  41fef1:	and    eax,0x83e4ca3e
  41fef6:	pop    esi
  41fef7:	mov    ebx,ebx
  41fef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fefa:	(bad)  
  41fefb:	les    esi,FWORD PTR [eax]
  41fefd:	mov    dh,0xb
  41feff:	jmp    0xb2bbaa88
  41ff04:	jo     0x41fee1
  41ff06:	stc    
  41ff07:	rol    BYTE PTR [ecx],cl
  41ff09:	or     esi,ebp
  41ff0b:	sahf   
  41ff0c:	scas   al,BYTE PTR es:[edi]
  41ff0d:	loopne 0x41ff35
  41ff0f:	daa    
  41ff10:	sub    edi,DWORD PTR [edi+0x7230f99]
  41ff16:	inc    ebx
  41ff17:	int3   
  41ff18:	pop    edx
  41ff19:	dec    edi
  41ff1a:	push   ds
  41ff1b:	nop
  41ff1c:	(bad)  
  41ff1d:	adc    cl,dh
  41ff1f:	call   0xac3b24dd
  41ff24:	fcomp  st(0)
  41ff26:	push   cs
  41ff27:	call   0x76233356
  41ff2c:	aam    0x5c
  41ff2e:	xchg   DWORD PTR [esi+eiz*8],edx
  41ff31:	inc    eax
  41ff32:	jo     0x41ff0a
  41ff34:	jl     0x41fee4
  41ff36:	xor    eax,0xad4c0a1b
  41ff3b:	test   al,0xf1
  41ff3d:	fadd   QWORD PTR [edx-0x7abcd46a]
  41ff43:	in     eax,dx
  41ff44:	ror    DWORD PTR [eax+0x52],cl
  41ff47:	sub    bh,BYTE PTR [edx+0x32a7b3d8]
  41ff4d:	add    cl,BYTE PTR [edx]
  41ff4f:	pop    bx
  41ff51:	pop    ds
  41ff52:	fs or  eax,0x16a18311
  41ff58:	lock test eax,0x19e3035e
  41ff5e:	leave  
  41ff5f:	fstp   QWORD PTR [edi+0x7b]
  41ff62:	sub    al,0x3e
  41ff64:	add    BYTE PTR [edx-0xc],dl
  41ff67:	jnp    0x41ff7c
  41ff69:	jb     0x41ffc3
  41ff6b:	mov    ch,0x68
  41ff6d:	(bad)  
  41ff6e:	adc    BYTE PTR [esi-0xe8177bb],dh
  41ff74:	push   ebp
  41ff75:	sbb    ecx,DWORD PTR [esi-0x38]
  41ff78:	or     edx,DWORD PTR es:[ebx]
  41ff7b:	ror    BYTE PTR [edi+0x50],cl
  41ff7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff7f:	jp     0x41ffc8
  41ff81:	out    dx,eax
  41ff82:	xor    esp,ecx
  41ff84:	pop    edi
  41ff85:	or     eax,0xe344bbc
  41ff8a:	data16 repnz mov ah,0x6a
  41ff8e:	mov    ch,al
  41ff90:	loop   0x41ff41
  41ff92:	mov    ch,0xd8
  41ff94:	push   es
  41ff95:	(bad)  
  41ff97:	imul   esi,DWORD PTR [edi],0x58
  41ff9a:	stos   BYTE PTR es:[edi],al
  41ff9b:	xchg   ebx,eax
  41ff9c:	mul    al
  41ff9e:	ret    0x889c
  41ffa1:	mov    ds:0xc9941036,eax
  41ffa6:	xchg   ebx,eax
  41ffa7:	pushf  
  41ffa8:	mov    BYTE PTR gs:[edx-0x77],ch
  41ffac:	pop    ecx
  41ffad:	(bad)  
  41ffae:	jo     0x41ff60
  41ffb0:	in     eax,0x70
  41ffb2:	dec    ecx
  41ffb3:	scas   eax,DWORD PTR es:[edi]
  41ffb4:	jmp    0x1aa6:0xeb646cf9
  41ffbb:	(bad)  
  41ffbd:	lahf   
  41ffbe:	xchg   edi,eax
  41ffbf:	pop    ebx
  41ffc0:	xchg   esp,eax
  41ffc1:	dec    eax
  41ffc2:	repz inc eax
  41ffc4:	add    al,0x5f
  41ffc6:	push   ebp
  41ffc7:	in     al,dx
  41ffc8:	pop    ebp
  41ffc9:	dec    ebx
  41ffca:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41ffcc:	sti    
  41ffcd:	loop   0x41ff9e
  41ffcf:	dec    edx
  41ffd0:	add    BYTE PTR [edx],dh
  41ffd2:	out    0x24,al
  41ffd4:	and    eax,0xc62b4c32
  41ffd9:	sahf   
  41ffda:	inc    edi
  41ffdb:	push   0x857fcc05
  41ffe0:	mov    ch,0xc0
  41ffe2:	fidiv  DWORD PTR ds:0xd2917eeb
  41ffe8:	push   0xdcd9d7ab
  41ffed:	or     DWORD PTR [ebp+ebp*1+0x107bd449],esi
  41fff4:	(bad)  
  41fff5:	jmp    0x41ffb3
  41fff7:	pop    es
  41fff8:	in     eax,0x93
  41fffa:	mov    ecx,DWORD PTR [ebp-0x18]
  41fffd:	sub    eax,ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0xa33a700a
  420121:	lds    eax,FWORD PTR [esi]
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx+0x1c705072],0x34
  42012f:	mov    dl,0xe0
  420131:	add    cl,BYTE PTR [eax-0x456448b8]
  420137:	data16 ins BYTE PTR es:[edi],dx
  420139:	arpl   WORD PTR [edi],bp
  42013b:	fwait
  42013c:	xchg   edi,eax
  42013d:	mov    BYTE PTR [esi-0x3e],0xc3
  420141:	cs mov eax,0xedcc05f3
  420147:	xlat   BYTE PTR ds:[ebx]
  420148:	push   ebp
  420149:	push   edx
  42014a:	jns    0x420188
  42014c:	xor    BYTE PTR [esi+0x73],ah
  42014f:	xor    ebx,DWORD PTR [ecx-0x71b0fc3]
  420155:	xchg   ebp,eax
  420156:	xchg   esi,eax
  420157:	cdq    
  420158:	out    0x50,al
  42015a:	mov    edi,0x6dbdbec4
  42015f:	pusha  
  420160:	or     DWORD PTR [edx-0x7a],0xffffffc0
  420164:	das    
  420165:	xchg   ecx,eax
  420166:	scas   eax,DWORD PTR es:[edi]
  420167:	push   ds
  420168:	xor    BYTE PTR [ebx+0x36],0x15
  42016c:	iret   
  42016d:	jno    0x420115
  42016f:	add    al,0xfc
  420171:	xor    eax,0x98439c35
  420176:	popf   
  420177:	adc    BYTE PTR [edx+0x1a86a9f9],ch
  42017d:	xchg   esp,eax
  42017e:	cmp    eax,0xf5b15f5d
  420183:	mov    ds:0xe4d1ff81,eax
  420188:	jno    0x4201c4
  42018a:	popf   
  42018b:	jns    0x420156
  42018d:	pushf  
  42018e:	(bad)  
  42018f:	or     BYTE PTR [ebx-0x667e751e],ch
  420195:	clc    
  420196:	daa    
  420197:	ins    DWORD PTR es:[edi],dx
  420198:	cmp    eax,0x7f17285d
  42019d:	nop
  42019e:	int    0x57
  4201a0:	iret   
  4201a1:	aaa    
  4201a2:	add    bl,ch
  4201a4:	clc    
  4201a5:	add    bh,al
  4201a7:	jne    0x4201ba
  4201a9:	mov    esi,ss
  4201ab:	add    al,0xa2
  4201ad:	add    esi,DWORD PTR [edx-0x4e]
  4201b0:	loopne 0x420221
  4201b2:	shl    DWORD PTR [esi+0x4a0d7b37],1
  4201b8:	lods   al,BYTE PTR ds:[esi]
  4201b9:	adc    ebx,DWORD PTR [eax-0x7c02d11]
  4201bf:	sbb    DWORD PTR [eax-0x51e0844f],eax
  4201c5:	add    al,0xbb
  4201c7:	sbb    BYTE PTR [ebp+ebp*2+0x68562f9d],0xf7
  4201cf:	enter  0x8e54,0xed
  4201d3:	ret    0x7593
  4201d6:	loop   0x420185
  4201d8:	outs   dx,DWORD PTR ds:[esi]
  4201d9:	in     eax,0xff
  4201db:	es lahf 
  4201dd:	call   0xcb96:0x3b8a74b6
  4201e4:	addr16 cmc 
  4201e6:	leave  
  4201e7:	inc    ecx
  4201e8:	sbb    DWORD PTR [edx],ebp
  4201ea:	jmp    0x420230
  4201ec:	ficom  DWORD PTR [edx+0x26]
  4201ef:	fimul  DWORD PTR [edi-0x41]
  4201f2:	adc    DWORD PTR [edi],esi
  4201f4:	(bad)  
  4201f6:	lods   al,BYTE PTR ds:[esi]
  4201f7:	and    BYTE PTR [edi-0x77],cl
  4201fa:	pop    ss
  4201fb:	cmp    edi,DWORD PTR [eax+0x5d3efeb5]
  420201:	daa    
  420202:	jmp    0x95c01e9
  420207:	adc    BYTE PTR [eax-0x69706dd8],bl
  42020d:	cdq    
  42020e:	pop    esp
  42020f:	mov    ah,0xdc
  420211:	(bad)  
  420212:	in     al,0xb0
  420214:	xchg   esp,eax
  420215:	sbb    edx,esp
  420217:	inc    esi
  420218:	sub    al,0x23
  42021a:	arpl   WORD PTR [ecx],ax
  42021c:	(bad)  
  42021d:	pop    ecx
  42021e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42021f:	dec    ecx
  420220:	pusha  
  420221:	in     al,dx
  420222:	or     al,0x68
  420224:	adc    esi,ecx
  420226:	dec    eax
  420227:	dec    eax
  420228:	stc    
  420229:	add    al,bl
  42022b:	lods   al,BYTE PTR ds:[esi]
  42022c:	cmp    DWORD PTR [edx],edi
  42022e:	and    eax,DWORD PTR [ebx-0x10]
  420231:	lock in eax,0x5b
  420234:	loopne 0x4201f3
  420236:	jl     0x4201bb
  420238:	mov    cl,BYTE PTR [ebx-0x237b5a66]
  42023e:	cmp    DWORD PTR [esi+0x48],ecx
  420241:	jnp    0x4202ab
  420243:	(bad)  
  420244:	push   ebx
  420245:	fst    DWORD PTR [ebx]
  420247:	sub    al,BYTE PTR [edx+0x1e]
  42024a:	jb     0x4201fa
  42024c:	ret    0x2c3d
  42024f:	mov    dh,0xf8
  420251:	pop    es
  420252:	inc    edx
  420253:	shl    DWORD PTR [eax],cl
  420255:	lea    edx,[edx-0x513d82b3]
  42025b:	ret    0xcbdc
  42025e:	pop    eax
  42025f:	xor    al,0x81
  420261:	mov    ch,0x31
  420263:	pop    ecx
  420264:	mov    ch,0x65
  420266:	mov    bh,0x3d
  420268:	jo     0x420232
  42026a:	push   esi
  42026b:	or     DWORD PTR [eax+0x728f6d32],0x173960d4
  420275:	push   ss
  420276:	and    al,0x4c
  420278:	(bad)  
  420279:	out    0x86,eax
  42027b:	sbb    BYTE PTR [ebp+ebp*8-0x5f8ebf45],al
  420282:	fnstcw WORD PTR [esi+0x5d4045cf]
  420288:	pop    esi
  420289:	lods   al,BYTE PTR ds:[esi]
  42028a:	leave  
  42028b:	mov    edi,0x3400c9d3
  420290:	push   ebx
  420291:	xor    al,0xb7
  420293:	shl    bh,0x68
  420296:	cmc    
  420297:	xchg   edi,eax
  420298:	push   esp
  420299:	cld    
  42029a:	jns    0x420268
  42029c:	xor    eax,0x952d4430
  4202a1:	bound  esp,QWORD PTR [esi+0x776580e0]
  4202a7:	les    ebp,FWORD PTR [bx+0x6114]
  4202ac:	inc    edx
  4202ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ae:	sbb    DWORD PTR [edi],ebx
  4202b0:	or     DWORD PTR [eax],esp
  4202b2:	jl     0x420313
  4202b4:	int3   
  4202b5:	or     al,0x74
  4202b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202b8:	jns    0x420303
  4202ba:	or     DWORD PTR [di+0x1a],0x6f5994ff
  4202c2:	icebp  
  4202c3:	inc    ebx
  4202c4:	scas   al,BYTE PTR es:[edi]
  4202c5:	(bad)  
  4202c6:	mov    ah,0xa3
  4202c8:	pop    edi
  4202c9:	or     eax,0x55da39c4
  4202ce:	stc    
  4202cf:	js     0x42031a
  4202d1:	fcom   QWORD PTR [edx-0xf]
  4202d4:	test   BYTE PTR [ecx-0x983f3e3],dl
  4202da:	outs   dx,DWORD PTR ds:[esi]
  4202db:	add    BYTE PTR [edx],al
  4202dd:	jae    0x420307
  4202df:	push   ecx
  4202e0:	mov    BYTE PTR [ecx],cl
  4202e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202e3:	inc    edx
  4202e4:	fadd   st(6),st
  4202e6:	scas   eax,DWORD PTR es:[edi]
  4202e7:	add    eax,0x1626835d
  4202ec:	das    
  4202ed:	inc    edi
  4202ee:	ret    
  4202ef:	in     al,0x7d
  4202f1:	sub    ecx,edi
  4202f3:	push   esi
  4202f4:	and    esi,ecx
  4202f6:	pop    ss
  4202f7:	mov    ah,0xd2
  4202f9:	out    0xb8,eax
  4202fb:	xlat   BYTE PTR ds:[ebx]
  4202fc:	outs   dx,DWORD PTR ds:[esi]
  4202fd:	ins    DWORD PTR es:[edi],dx
  4202fe:	ror    BYTE PTR [ebx+0x71e7c3bf],1
  420304:	jmp    0x42036d
  420306:	vpsubusw ymm5,ymm4,YMMWORD PTR [edx+0x61]
  42030b:	cmp    DWORD PTR [edx+ebx*2+0x41a1bef],ebp
  420312:	stos   DWORD PTR es:[edi],eax
  420313:	dec    edx
  420314:	dec    esi
  420315:	test   al,0xd2
  420317:	push   ebp
  420318:	xlat   BYTE PTR ds:[ebx]
  420319:	or     ah,BYTE PTR [ebx]
  42031b:	int    0xb1
  42031d:	imul   ecx,DWORD PTR [edi],0x41cff487
  420323:	fdiv   QWORD PTR [edx+0x5c]
  420326:	pop    ecx
  420327:	nop
  420328:	dec    edx
  420329:	pop    edi
  42032a:	into   
  42032b:	jns    0x420387
  42032d:	add    BYTE PTR [eax],ah
  42032f:	loop   0x420370
  420331:	stos   BYTE PTR es:[edi],al
  420332:	test   DWORD PTR [esi],0x99766e66
  420338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420339:	push   eax
  42033a:	retf   0x34bc
  42033d:	dec    ebx
  42033e:	jmp    0x12dd:0xc259449a
  420345:	addr16 lahf 
  420347:	rol    BYTE PTR [eax+0x2621f2b2],1
  42034d:	ror    ecx,0xf3
  420350:	in     al,0x49
  420352:	lods   eax,DWORD PTR ds:[esi]
  420353:	pop    ds
  420354:	push   DWORD PTR [edx+0x631b4760]
  42035a:	pop    ecx
  42035b:	les    edi,FWORD PTR [ecx]
  42035d:	xchg   edi,eax
  42035e:	inc    edx
  42035f:	sub    DWORD PTR [ebx],edi
  420361:	ror    edx,1
  420363:	xchg   DWORD PTR [esi+ebp*8-0x6d968807],edx
  42036a:	les    esp,FWORD PTR [edi-0xa]
  42036d:	inc    edx
  42036e:	mov    bl,0xd
  420370:	sub    eax,0xb0b9934f
  420375:	adc    DWORD PTR [edx+ebx*8-0x23],edx
  420379:	push   edi
  42037a:	test   eax,0xff72b121
  42037f:	pop    edx
  420380:	aas    
  420381:	mov    al,0xc
  420383:	popa   
  420384:	test   DWORD PTR [eax-0x23],ebp
  420387:	sub    eax,0x20fe7696
  42038c:	mov    cl,0x7e
  42038e:	(bad)  
  42038f:	cmp    edi,DWORD PTR [ebx+0x48c3259d]
  420395:	sar    bl,cl
  420397:	sub    BYTE PTR ds:0xa5681b2a,al
  42039d:	repnz add eax,0x60c4d628
  4203a3:	fs pushf 
  4203a5:	push   ss
  4203a6:	fsubr  DWORD PTR [ecx]
  4203a8:	push   ds
  4203a9:	sar    BYTE PTR [edi+edx*1-0x5a],1
  4203ad:	xor    BYTE PTR ds:0xb2c00bae,ch
  4203b3:	idiv   BYTE PTR [edx-0x29beb101]
  4203b9:	fild   DWORD PTR [eax+esi*8+0x22]
  4203bd:	(bad)  
  4203be:	sub    BYTE PTR [ecx+0x3b56eff1],dh
  4203c4:	mov    WORD PTR [ebp-0x6c],fs
  4203c7:	xor    BYTE PTR [edi+0x63dbc512],ch
  4203cd:	and    eax,0xf593ad6e
  4203d2:	lea    ecx,[ebp+0x433fd210]
  4203d8:	jl     0x420375
  4203da:	call   0xed15:0x272f5d1b
  4203e1:	xchg   edi,eax
  4203e2:	mov    ds:0x7e50d0f8,al
  4203e7:	mov    ?,ebp
  4203e9:	adc    DWORD PTR [ebp+0x71],esi
  4203ec:	sbb    al,0xf5
  4203ee:	in     eax,0xd8
  4203f0:	inc    esp
  4203f1:	pop    edx
  4203f2:	sub    ah,bl
  4203f4:	inc    esi
  4203f5:	adc    BYTE PTR ss:[edi],0xe2
  4203f9:	shl    BYTE PTR [esi-0x3b],1
  4203fc:	loop   0x42042d
  4203fe:	lods   al,BYTE PTR ds:[esi]
  4203ff:	retf   0x4c94
  420402:	sbb    dh,BYTE PTR [ecx]
  420404:	push   cs
  420405:	iret   
  420406:	arpl   WORD PTR [edi-0x14e737],ax
  42040c:	pop    es
  42040d:	scas   al,BYTE PTR es:[edi]
  42040e:	int    0x7c
  420410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420411:	mov    cl,0xcb
  420413:	dec    eax
  420414:	iret   
  420415:	mov    cl,0x1a
  420417:	mov    bh,0x3b
  420419:	or     al,0xf8
  42041b:	loope  0x420421
  42041d:	xor    al,0x12
  42041f:	push   edi
  420420:	dec    edi
  420421:	sub    eax,0xe49a752a
  420426:	jge    0x420457
  420428:	jl     0x420438
  42042a:	jnp    0x420419
  42042c:	daa    
  42042d:	pop    ecx
  42042e:	xchg   DWORD PTR [ebp+0x63],edx
  420431:	pop    edi
  420432:	mov    al,0x2f
  420434:	jbe    0x42047b
  420436:	(bad)  
  420437:	mov    ch,0xeb
  420439:	popf   
  42043a:	ret    
  42043b:	clc    
  42043c:	retf   0x3937
  42043f:	stos   BYTE PTR es:[edi],al
  420440:	in     eax,0x4a
  420442:	push   esp
  420443:	add    DWORD PTR [eax],edi
  420445:	push   ds
  420446:	out    dx,eax
  420447:	push   cs
  420448:	inc    ecx
  420449:	fsub   QWORD PTR [esi-0x7a335d95]
  42044f:	iret   
  420450:	add    al,0xe8
  420452:	mov    ecx,0x392ba761
  420457:	cmp    BYTE PTR [ebx-0x5a066153],bh
  42045d:	or     BYTE PTR [ebx-0x4a0e7664],al
  420463:	jo     0x420445
  420465:	ja     0x420432
  420467:	pop    esp
  420468:	jp     0x420469
  42046a:	inc    esp
  42046b:	add    DWORD PTR [edi+0x1e],ecx
  42046e:	mov    bl,BYTE PTR [eax+0x303da24b]
  420474:	xor    eax,0xcb8bef1
  420479:	repnz es dec edx
  42047c:	aaa    
  42047d:	push   ebp
  42047e:	das    
  42047f:	xchg   ebp,eax
  420480:	xor    ebp,ebp
  420482:	ds pushf 
  420484:	out    0xcb,al
  420486:	repnz mov DWORD PTR [edi],eax
  420489:	push   ebp
  42048a:	fstp   TBYTE PTR [eax+ebx*8+0x46]
  42048e:	mov    esp,0xc91a42a5
  420493:	outs   dx,BYTE PTR ds:[esi]
  420494:	xor    eax,0xead43a74
  420499:	std    
  42049a:	lea    eax,[ebp+0x6b]
  42049d:	out    0x26,eax
  42049f:	xor    BYTE PTR [esi-0x86dcfed],ah
  4204a5:	jne    0x4204e8
  4204a7:	inc    eax
  4204a8:	imul   dh
  4204aa:	inc    ebx
  4204ab:	es dec ecx
  4204ad:	stos   DWORD PTR es:[edi],eax
  4204ae:	lods   eax,DWORD PTR ds:[esi]
  4204af:	ror    BYTE PTR [bx+0x53],1
  4204b3:	sub    cl,ah
  4204b5:	sub    dh,ah
  4204b7:	or     edi,DWORD PTR [edx]
  4204b9:	xor    dh,BYTE PTR [eax-0x41]
  4204bc:	xor    BYTE PTR [edi+0x59],bl
  4204bf:	daa    
  4204c0:	retf   0x2021
  4204c3:	outs   dx,BYTE PTR ds:[esi]
  4204c4:	icebp  
  4204c5:	addr16 xchg esp,eax
  4204c7:	mov    edx,0x1c27ee23
  4204cc:	xchg   edi,eax
  4204cd:	cmp    esi,esp
  4204cf:	addr16 out 0xfe,al
  4204d2:	sub    DWORD PTR [eax-0x2daff0df],esi
  4204d8:	adc    al,0xb
  4204da:	adc    dl,0xb4
  4204dd:	(bad)  
  4204de:	cmp    esi,DWORD PTR [edx+0x7cc87818]
  4204e4:	mov    BYTE PTR [ecx],al
  4204e6:	or     BYTE PTR [esi+esi*8],dl
  4204e9:	mov    ds:0xdd61428b,eax
  4204ee:	mov    esi,0xe7fef04b
  4204f3:	hlt    
  4204f4:	ret    
  4204f5:	test   BYTE PTR ds:0x240c1e4e,al
  4204fb:	inc    ebx
  4204fc:	test   al,0xb1
  4204fe:	and    esp,ebp
  420500:	push   esi
  420501:	fnsave [edx+0x5c]
  420504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420505:	loopne 0x42054c
  420507:	in     eax,dx
  420508:	cmp    BYTE PTR [eax+edi*1-0x34e14978],0x66
  420510:	jmp    0x13b936e8
  420515:	fimul  DWORD PTR [edi+0x78]
  420518:	pushf  
  420519:	jp     0x42055f
  42051b:	push   ebx
  42051c:	(bad)  
  42051d:	cmp    BYTE PTR [edi],0x43
  420520:	fsubrp st(5),st
  420522:	mov    ecx,0xee7c4be1
  420527:	fcom   DWORD PTR [ebx+0x6c]
  42052a:	ror    esi,1
  42052c:	out    dx,eax
  42052d:	add    al,0x88
  42052f:	cld    
  420530:	mov    dh,0x5
  420532:	imul   ebp,DWORD PTR [edx],0xb157cb74
  420538:	inc    edi
  420539:	mul    ch
  42053b:	outs   dx,BYTE PTR ds:[si]
  42053d:	cmp    eax,0xf8626b66
  420542:	inc    ebx
  420543:	push   ebx
  420544:	in     al,0xd9
  420546:	xchg   DWORD PTR [edi],ebx
  420548:	or     BYTE PTR [eax],ch
  42054a:	push   es
  42054b:	cmc    
  42054c:	and    BYTE PTR [ecx+0x26],cl
  42054f:	fiadd  WORD PTR [edx-0x42]
  420552:	(bad)
  420555:	sbb    bh,BYTE PTR [eax+0x14]
  420558:	push   edx
  420559:	inc    eax
  42055a:	rcl    BYTE PTR ds:0x8be55b92,0x90
  420561:	push   ecx
  420562:	std    
  420563:	(bad)  
  420564:	retf   
  420565:	sahf   
  420566:	cmp    BYTE PTR [esi-0x60],dh
  420569:	js     0x420525
  42056b:	mov    ds:0x82e227c,eax
  420570:	fwait
  420571:	jge    0x420573
  420573:	std    
  420574:	xor    DWORD PTR [edx],0x75f3c477
  42057a:	xchg   edx,ecx
  42057c:	add    eax,0x7447cb57
  420581:	outs   dx,DWORD PTR ds:[esi]
  420582:	sti    
  420583:	in     eax,0x91
  420585:	lds    ecx,FWORD PTR [ebp-0x80]
  420588:	push   esp
  420589:	cmp    eax,0x76dde01e
  42058e:	outs   dx,BYTE PTR ds:[esi]
  42058f:	xor    BYTE PTR [ebp+0x592cd408],al
  420595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420596:	(bad)  
  420597:	mov    dl,0x38
  420599:	push   esi
  42059a:	lock sbb DWORD PTR [edi],0x4
  42059e:	ins    BYTE PTR es:[edi],dx
  42059f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205a0:	ins    DWORD PTR es:[edi],dx
  4205a1:	std    
  4205a2:	popa   
  4205a3:	lahf   
  4205a4:	mov    esi,0xc8eebe08
  4205a9:	dec    ebx
  4205aa:	in     al,dx
  4205ab:	test   edx,0xd5a71319
  4205b1:	pop    es
  4205b2:	inc    esp
  4205b3:	(bad)  
  4205b4:	mov    ch,0x3d
  4205b6:	mov    dh,0x73
  4205b8:	imul   ebp,ebx,0x486d2bb1
  4205be:	test   BYTE PTR [ecx],cl
  4205c0:	mov    esp,0xebab392e
  4205c5:	loope  0x420556
  4205c7:	xchg   esp,eax
  4205c8:	adc    ebx,DWORD PTR [edx-0x56]
  4205cb:	jno    0x4205ed
  4205cd:	ret    
  4205ce:	pop    ebx
  4205cf:	push   ebx
  4205d0:	xor    eax,0x469ede21
  4205d5:	mov    cl,0xfd
  4205d7:	aas    
  4205d8:	fisubr WORD PTR [ebx]
  4205da:	fadd   DWORD PTR [eax+0x16]
  4205dd:	jp     0x4205c8
  4205df:	add    esp,DWORD PTR [ebp+0x1c]
  4205e2:	int3   
  4205e3:	mov    ah,0x8d
  4205e5:	cdq    
  4205e6:	ss ja  0x4205f0
  4205e9:	mov    ch,0xd7
  4205eb:	aas    
  4205ec:	inc    esi
  4205ed:	ins    DWORD PTR es:[edi],dx
  4205ee:	jg     0x420613
  4205f0:	add    bl,BYTE PTR [ebx+edi*4-0x3dc8ac2d]
  4205f7:	arpl   dx,bp
  4205f9:	sub    eax,0x3b1af9c7
  4205fe:	xor    esp,ebp
  420600:	imul   BYTE PTR [edi-0x60fc16da]
  420606:	cmp    al,0x84
  420608:	sbb    al,0x1
  42060a:	dec    esp
  42060b:	push   edx
  42060c:	dec    ebp
  42060d:	lods   eax,DWORD PTR ds:[esi]
  42060e:	imul   ebx,DWORD PTR [ebx-0x3fd34e40],0xfffffff7
  420615:	popf   
  420616:	or     dh,BYTE PTR [ebx+edx*1]
  420619:	sub    al,0xda
  42061b:	retf   
  42061c:	pusha  
  42061d:	sbb    BYTE PTR [ebp+0x1e],bl
  420620:	hlt    
  420621:	xchg   dl,bh
  420623:	dec    ebp
  420624:	sub    eax,0x13f550c3
  420629:	test   eax,0x829ff349
  42062e:	mov    dh,BYTE PTR [ecx-0x68]
  420631:	jp     0x4206a7
  420633:	addr16 int3 
  420635:	mov    ds:0x3054de58,eax
  42063a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42063b:	pop    es
  42063c:	dec    eax
  42063d:	add    al,0xf7
  42063f:	push   esi
  420640:	mov    eax,ds:0x84cdd287
  420645:	jg     0x420681
  420647:	dec    edi
  420648:	xchg   BYTE PTR [ecx+esi*2+0x45a0c6da],ah
  42064f:	xor    bl,BYTE PTR [edx]
  420651:	jae    0x42060e
  420653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420654:	xor    bl,BYTE PTR [edx]
  420656:	jb     0x4206ae
  420658:	idiv   DWORD PTR [ebp-0x490cc657]
  42065e:	sbb    al,0x24
  420660:	pop    ds
  420661:	loop   0x420630
  420663:	pop    edx
  420664:	dec    ecx
  420665:	dec    ebp
  420666:	shl    DWORD PTR [eax+0xc451a0d],0x13
  42066d:	dec    ebp
  42066e:	add    ah,BYTE PTR [edi+0xfd04e4]
  420674:	xlat   BYTE PTR ds:[ebx]
  420675:	jmp    0x25a8:0x6f8f9a6c
  42067c:	pop    esp
  42067d:	push   ds
  42067e:	ss aad 0xa
  420681:	xlat   BYTE PTR ds:[ebx]
  420682:	in     eax,dx
  420683:	popf   
  420684:	or     eax,0xfbcb7819
  420689:	ds into 
  42068b:	add    DWORD PTR [ebp-0x6e],eax
  42068e:	sbb    ah,bl
  420690:	jle    0x4206c5
  420692:	sti    
  420693:	in     al,dx
  420694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420695:	pusha  
  420696:	dec    ebp
  420697:	and    BYTE PTR [edi],bh
  420699:	jmp    0x420639
  42069b:	inc    edi
  42069c:	pop    edi
  42069d:	test   al,0xb
  42069f:	mov    edx,0x821a7d36
  4206a4:	pop    edx
  4206a5:	adc    DWORD PTR ds:0xe62abce8,0x505d4b60
  4206af:	loope  0x4206dd
  4206b1:	xchg   DWORD PTR [edx],ecx
  4206b3:	(bad)  
  4206b4:	or     bl,BYTE PTR [edi+0x64]
  4206b7:	ins    DWORD PTR es:[edi],dx
  4206b8:	and    ch,al
  4206ba:	outs   dx,BYTE PTR ds:[esi]
  4206bb:	ja     0x42073a
  4206bd:	test   DWORD PTR [esi],ebx
  4206bf:	jp     0x420692
  4206c1:	inc    ecx
  4206c2:	cmc    
  4206c3:	adc    BYTE PTR [edi+0x4ddd2378],bl
  4206c9:	lods   eax,DWORD PTR ds:[esi]
  4206ca:	cmp    BYTE PTR [esi],0xfa
  4206cd:	pop    eax
  4206ce:	cmp    bl,BYTE PTR [eax]
  4206d0:	mov    cl,0xa
  4206d2:	pop    edi
  4206d3:	jne    0x4206f0
  4206d5:	rcr    dl,cl
  4206d7:	ds sti 
  4206d9:	cmp    al,0x10
  4206db:	loopne 0x4206de
  4206dd:	xor    al,BYTE PTR [edx-0x36]
  4206e0:	inc    esp
  4206e1:	popa   
  4206e2:	xchg   DWORD PTR [ecx-0x3],esp
  4206e5:	retf   
  4206e6:	out    0x68,eax
  4206e8:	pop    ss
  4206e9:	add    ebp,DWORD PTR [edi]
  4206eb:	push   ss
  4206ec:	sbb    eax,0xda11ead2
  4206f1:	aas    
  4206f2:	inc    ecx
  4206f3:	mov    ah,0x87
  4206f5:	bnd jb 0x4206c9
  4206f8:	jae    0x420774
  4206fa:	das    
  4206fb:	jo     0x4206f8
  4206fd:	mov    dh,0x5f
  4206ff:	scas   al,BYTE PTR es:[edi]
  420700:	sub    eax,0xb0c423e1
  420705:	sub    eax,0x3bc206e5
  42070a:	xchg   esi,eax
  42070b:	dec    eax
  42070c:	test   eax,0xd4f40f3e
  420711:	(bad)  
  420712:	adc    DWORD PTR [edi-0x56],ecx
  420715:	retf   
  420716:	in     al,0x9d
  420718:	xlat   BYTE PTR ds:[ebx]
  420719:	(bad)  
  42071a:	test   eax,0x3025b6d1
  42071f:	(bad)  
  420720:	xor    esi,DWORD PTR [ecx]
  420722:	fidiv  WORD PTR [ebx-0x18]
  420725:	pop    es
  420726:	scas   eax,DWORD PTR es:[edi]
  420727:	les    ebp,FWORD PTR [ecx+0x50]
  42072a:	in     eax,dx
  42072b:	shl    ecx,1
  42072d:	lea    eax,[edx+0x7c11f9f3]
  420733:	jmp    0xcb5a5afc
  420738:	mov    ebx,0x2c49e28f
  42073d:	sti    
  42073e:	mov    bh,0x15
  420740:	cld    
  420741:	loope  0x420759
  420743:	cmp    DWORD PTR [ebp+0x7d4440d9],eax
  420749:	push   edx
  42074a:	arpl   WORD PTR ds:0xa0df515f,si
  420750:	test   BYTE PTR [esi-0x60],cl
  420753:	ds call 0xe9d7:0x434b1e0
  42075b:	sub    al,0xf8
  42075d:	outs   dx,DWORD PTR ds:[esi]
  42075e:	add    al,0xd5
  420760:	mov    esi,0x98f966e0
  420765:	sub    cl,BYTE PTR [eax+eax*1]
  420768:	mov    edi,0x7d45c788
  42076d:	sahf   
  42076e:	pop    ebx
  42076f:	test   al,0xca
  420772:	ret    0x3891
  420775:	adc    bl,dl
  420777:	mov    bh,0x21
  420779:	test   al,0x21
  42077b:	outs   dx,BYTE PTR ds:[esi]
  42077c:	or     BYTE PTR [eiz*4-0x169fb7fa],0x11
  420784:	push   es
  420785:	fdivr  QWORD PTR [esi-0x3703eca7]
  42078b:	jecxz  0x420721
  42078d:	mov    edx,0x5ca6a0ca
  420792:	shr    cl,1
  420794:	xor    DWORD PTR [ebp-0x16a88111],eax
  42079a:	jns    0x347fb743
  4207a0:	inc    ecx
  4207a1:	pmaxsw mm1,mm4
  4207a4:	jnp    0x4207cf
  4207a6:	popa   
  4207a7:	iret   
  4207a8:	lahf   
  4207a9:	fsubr  DWORD PTR [ebx-0x6ecf11cb]
  4207af:	push   ds
  4207b0:	popa   
  4207b1:	arpl   WORD PTR [edx],dx
  4207b3:	jl     0x420784
  4207b5:	pusha  
  4207b6:	addr16 or al,0x76
  4207b9:	test   DWORD PTR [ebp+0x967d7ae],esp
  4207bf:	in     al,0xfb
  4207c1:	loopne 0x420826
  4207c3:	ror    DWORD PTR [ebp+0x74640cbf],1
  4207c9:	fnstcw WORD PTR ds:0x1a48ac31
  4207cf:	test   DWORD PTR [ebx-0x7c],edi
  4207d2:	xchg   edi,eax
  4207d3:	sbb    eax,0x9c4500b7
  4207d8:	mov    dh,0xba
  4207da:	out    0xae,eax
  4207dc:	push   eax
  4207dd:	(bad)  
  4207de:	mov    ecx,0xb861797f
  4207e3:	sub    dl,BYTE PTR [ebx+ebp*4]
  4207e6:	push   es
  4207e7:	cmp    DWORD PTR [esi-0x72bda164],ebp
  4207ed:	mov    fs,WORD PTR [ebx-0x3b]
  4207f0:	out    dx,al
  4207f1:	xchg   BYTE PTR [ebx+0x8],ch
  4207f4:	jnp    0x420838
  4207f6:	and    ebp,ebp
  4207f8:	jnp    0x420868
  4207fa:	shl    ebx,0x86
  4207fd:	pushf  
  4207fe:	hlt    
  4207ff:	add    eax,0xdb4dca14
  420804:	lea    esi,[edi+0x16]
  420807:	mov    BYTE PTR [esi+0x49a79031],dh
  42080d:	cmp    DWORD PTR [ecx-0x64],ecx
  420810:	xor    esi,DWORD PTR [esp+esi*4+0xa2350bc]
  420817:	xchg   DWORD PTR [edx+0x5f],esi
  42081a:	mov    dl,0x25
  42081c:	gs push es
  42081e:	call   FWORD PTR [esi]
  420820:	dec    esp
  420821:	stos   DWORD PTR es:[edi],eax
  420822:	xlat   BYTE PTR ds:[ebx]
  420823:	xor    eax,0xe4bcd9e7
  420828:	add    esi,DWORD PTR [ebx-0xa]
  42082b:	retf   0x2b54
  42082e:	lock or al,0x9a
  420831:	or     al,0xac
  420833:	xchg   esi,eax
  420834:	jbe    0x42082c
  420836:	jg     0x420806
  420838:	dec    esi
  420839:	cld    
  42083a:	mov    bh,0xb6
  42083c:	mov    al,BYTE PTR [ecx-0x4c]
  42083f:	(bad)  
  420840:	jmp    0x90fb:0xf36f6d89
  420847:	pop    ss
  420848:	mov    es,WORD PTR [edx+0x66a3f453]
  42084e:	das    
  42084f:	icebp  
  420850:	dec    esp
  420851:	sbb    eax,0xe2ac7af0
  420856:	out    0x5f,eax
  420858:	rcr    BYTE PTR [eax+0x9],cl
  42085b:	neg    bh
  42085d:	adc    BYTE PTR [edi],dh
  42085f:	pop    ecx
  420860:	in     eax,dx
  420861:	or     esp,edi
  420863:	ins    BYTE PTR es:[edi],dx
  420864:	xchg   BYTE PTR [esi],ch
  420866:	jmp    0x4207f7
  420868:	sub    bl,bh
  42086a:	pop    ecx
  42086b:	push   0x88689d36
  420870:	mov    eax,ds:0x7532d458
  420875:	xchg   BYTE PTR [esi],ch
  420877:	lea    eax,[eax]
  420879:	out    dx,eax
  42087a:	jno    0x42086f
  42087c:	loop   0x4208a6
  42087e:	bound  edx,QWORD PTR [ecx]
  420880:	call   0x4f44:0x6f0286ab
  420887:	sub    eax,0x83a920a1
  42088c:	popa   
  42088d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42088e:	dec    ecx
  42088f:	neg    DWORD PTR [ebp-0x4d]
  420892:	test   DWORD PTR [eax],eax
  420894:	(bad)  
  420895:	cmp    edx,DWORD PTR [esi]
  420897:	test   esp,edi
  420899:	ss push esi
  42089b:	test   al,0x8b
  42089d:	add    al,ch
  42089f:	stos   BYTE PTR es:[edi],al
  4208a0:	xchg   ebp,eax
  4208a1:	push   0x80c01b6c
  4208a6:	jmp    0x9aaf:0x675f1f59
  4208ad:	out    0x3c,eax
  4208af:	les    ecx,FWORD PTR [eax]
  4208b1:	or     DWORD PTR [esi+0x2e],ecx
  4208b4:	jge    0x4208a0
  4208b6:	mov    ecx,0x34043c38
  4208bb:	adc    al,0x41
  4208bd:	sub    ch,BYTE PTR [edi-0x278ec763]
  4208c3:	bound  edi,QWORD PTR [esi+0x7b]
  4208c6:	fstp   DWORD PTR ds:0x62e18d7
  4208cc:	jmp    0xbbd7:0xa627aaf7
  4208d3:	lahf   
  4208d4:	inc    esp
  4208d5:	popf   
  4208d6:	nop
  4208d7:	xor    al,0x46
  4208d9:	sbb    eax,0xbf3d1360
  4208de:	pop    ecx
  4208df:	call   eax
  4208e1:	ja     0x4208be
  4208e3:	sub    eax,0x940fd48e
  4208e8:	xor    esp,edx
  4208ea:	mov    edi,0xcfd6d6c9
  4208ef:	sbb    dh,dh
  4208f1:	aam    0x65
  4208f3:	add    al,0x7c
  4208f5:	sub    dh,BYTE PTR ds:0x343334f4
  4208fb:	mov    dh,0xcb
  4208fd:	sub    ah,BYTE PTR [edi+0x5e]
  420900:	(bad)  
  420901:	fdivr  st(6),st
  420903:	xchg   ecx,eax
  420904:	and    ah,dh
  420906:	popa   
  420907:	jp     0x4208fe
  420909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42090a:	mov    es,WORD PTR [edi-0x72]
  42090d:	fidiv  WORD PTR [ebx-0x52d8e933]
  420913:	cmp    ebx,DWORD PTR [esp+eax*4+0x941c8]
  42091a:	adc    DWORD PTR [esi+0x24],ebx
  42091d:	pop    ds
  42091e:	scas   eax,DWORD PTR es:[edi]
  42091f:	and    al,0xb2
  420921:	(bad)  
  420922:	sti    
  420923:	int    0x3c
  420925:	pop    eax
  420926:	mov    ecx,0x6398094
  42092b:	and    al,0x2c
  42092d:	shl    DWORD PTR [esp+eiz*8],1
  420930:	add    al,BYTE PTR [edx]
  420932:	outs   dx,DWORD PTR ds:[esi]
  420933:	fnstcw WORD PTR [ecx]
  420935:	retf   0x90be
  420938:	mov    bl,0xeb
  42093a:	add    bh,BYTE PTR [edx+0x7]
  42093d:	mov    al,0x76
  42093f:	or     ch,cl
  420941:	inc    ecx
  420942:	push   0xffffff91
  420944:	loop   0x420998
  420946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420947:	add    al,0xae
  420949:	jbe    0x420988
  42094b:	fsub   QWORD PTR [edi]
  42094d:	cmp    al,0x39
  42094f:	mov    di,0xbf01
  420953:	cmp    BYTE PTR [ecx-0x44],0x50
  420957:	icebp  
  420958:	sbb    BYTE PTR [edi+ecx*8],ah
  42095b:	mov    eax,ds:0xdf5ee5fd
  420960:	xor    BYTE PTR [eax+0x24],cl
  420963:	xchg   dh,bl
  420965:	ror    DWORD PTR [ecx-0x36d17b5c],1
  42096b:	sahf   
  42096c:	addr16 mov edx,0xe08e1b10
  420972:	sbb    eax,0x3f0d6bc2
  420977:	ds jl  0x4209e7
  42097a:	shl    DWORD PTR [ebx+0x7f],1
  42097d:	push   edx
  42097e:	sar    DWORD PTR ds:0x42d0eb26,0x1c
  420985:	xchg   DWORD PTR [edx],edi
  420987:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  420989:	push   cs
  42098a:	dec    eax
  42098b:	jnp    0x42093c
  42098d:	pusha  
  42098e:	and    al,0xea
  420990:	in     al,dx
  420991:	ret    
  420992:	jb     0x42094e
  420994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420995:	push   ebx
  420996:	mov    ah,0x10
  420998:	sub    edx,DWORD PTR [ecx+0x42]
  42099b:	scas   al,BYTE PTR es:[edi]
  42099c:	in     al,0xab
  42099e:	clc    
  42099f:	jp     0x4209f3
  4209a1:	add    cl,BYTE PTR ds:0x10b50014
  4209a7:	ds (bad) 
  4209a9:	or     dh,BYTE PTR [edx+0x67f46cfe]
  4209af:	popf   
  4209b0:	mov    ebx,0x63f534d7
  4209b5:	stos   BYTE PTR es:[edi],al
  4209b6:	nop
  4209b7:	pop    esp
  4209b8:	ins    BYTE PTR es:[edi],dx
  4209b9:	xchg   esp,eax
  4209ba:	in     al,dx
  4209bb:	stos   BYTE PTR es:[edi],al
  4209bc:	push   ecx
  4209bd:	mov    esp,0x45b23ec9
  4209c2:	(bad)  
  4209c3:	(bad)  
  4209c4:	jb     0x4209af
  4209c6:	adc    ch,0xd
  4209c9:	mov    bl,0xfc
  4209cb:	idiv   BYTE PTR [edi+0x46]
  4209ce:	xor    dh,BYTE PTR [ecx]
  4209d0:	jl     0x4209fa
  4209d2:	fnstcw WORD PTR fs:[edx]
  4209d5:	push   eax
  4209d6:	mov    edi,0xef52f736
  4209db:	add    eax,DWORD PTR [edx+0x32]
  4209de:	jne    0x4209f8
  4209e0:	inc    ebp
  4209e1:	mov    dh,dh
  4209e3:	push   ds
  4209e4:	mov    ebx,0x26c1227d
  4209e9:	jae    0x420a03
  4209eb:	push   edx
  4209ec:	imul   edi,edi,0xec4c2673
  4209f2:	cmp    bh,BYTE PTR [ecx+edi*2-0x2e421294]
  4209f9:	add    BYTE PTR [ebp-0xa],cl
  4209fc:	ficom  DWORD PTR [edx-0x65]
  4209ff:	push   ebp
  420a00:	sbb    ebx,DWORD PTR [ebp+0x2576618d]
  420a06:	nop
  420a07:	imul   ebp,DWORD PTR [edx+edx*2-0x91b911f],0x1deb21c8
  420a12:	jmp    0x39ae:0xb0817edb
  420a19:	mov    ah,0x3f
  420a1b:	daa    
  420a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a1d:	out    dx,eax
  420a1e:	and    edx,esi
  420a20:	xchg   ecx,eax
  420a21:	xlat   BYTE PTR ds:[ebx]
  420a22:	test   BYTE PTR [ecx+0x310e58e7],dh
  420a28:	aad    0xf6
  420a2a:	jmp    0xc740:0x3b996311
  420a31:	inc    esp
  420a32:	lods   al,BYTE PTR ds:[esi]
  420a33:	addr16 in al,0xe2
  420a36:	jns    0x4209cf
  420a38:	cdq    
  420a39:	mov    al,ds:0x45b149da
  420a3e:	sub    eax,0xe16fe71b
  420a43:	fs add al,0xe4
  420a46:	leave  
  420a47:	mov    DWORD PTR [edx+0x2afff0e1],eax
  420a4d:	and    DWORD PTR [edi-0x431cc156],ebp
  420a53:	mov    al,dl
  420a55:	mov    ds:0x3a20af2d,al
  420a5a:	push   ss
  420a5b:	or     DWORD PTR [ebp-0x2a1f9e59],0xffffffe2
  420a62:	ins    BYTE PTR es:[edi],dx
  420a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a64:	(bad)  
  420a66:	xchg   ebx,eax
  420a67:	and    al,0xdb
  420a69:	jae    0x420a68
  420a6b:	xchg   BYTE PTR [edx+0x721cbc08],dl
  420a71:	sar    esi,0x7e
  420a74:	inc    edi
  420a75:	into   
  420a76:	add    DWORD PTR ds:0x9e51384b,ebx
  420a7c:	scas   eax,DWORD PTR es:[edi]
  420a7d:	sbb    DWORD PTR [edi-0x45],eax
  420a80:	and    eax,0xc182620f
  420a85:	icebp  
  420a86:	push   0xb8e5da45
  420a8b:	fbld   TBYTE PTR [edi+0x36]
  420a8e:	mov    ecx,es
  420a90:	or     dh,BYTE PTR [esi+esi*2-0x1342291f]
  420a97:	(bad)  
  420a98:	hlt    
  420a99:	fiadd  WORD PTR [esi-0x2a]
  420a9c:	jl     0x420a37
  420a9e:	mov    eax,0x89449449
  420aa3:	inc    esi
  420aa4:	xchg   ebp,ebp
  420aa6:	mov    cl,dl
  420aa8:	sub    ecx,DWORD PTR [ecx-0x662cbb74]
  420aae:	nop
  420aaf:	fmul   DWORD PTR [esi+0x7815ce1d]
  420ab5:	into   
  420ab6:	fcom   DWORD PTR [edx]
  420ab8:	adc    BYTE PTR [ebx-0x7313cc87],bl
  420abe:	dec    ebx
  420abf:	jno    0x420ad4
  420ac1:	cmp    DWORD PTR [edi],ebx
  420ac3:	mov    ch,0xb3
  420ac5:	jae    0x420b45
  420ac7:	(bad)  
  420ac8:	xchg   edi,eax
  420ac9:	sub    ecx,DWORD PTR [esi+0x72]
  420acc:	pop    esi
  420acd:	jmp    DWORD PTR [edi+0x55a3ad2f]
  420ad3:	mov    BYTE PTR [ebx-0x572d8afb],dl
  420ad9:	inc    ebx
  420ada:	cmp    edx,DWORD PTR [eax+0x65]
  420add:	out    dx,eax
  420ade:	jno    0x420aef
  420ae0:	push   es
  420ae1:	nop
  420ae2:	int3   
  420ae3:	dec    ebx
  420ae4:	push   es
  420ae5:	jecxz  0x420a8e
  420ae7:	inc    ecx
  420ae8:	pop    ebx
  420ae9:	mov    ecx,DWORD PTR [edi+0x41bdda57]
  420aef:	mov    ds:0x8771f192,al
  420af4:	(bad)  
  420af5:	dec    edi
  420af6:	xchg   edi,eax
  420af7:	pop    ecx
  420af8:	mov    BYTE PTR [esi],dh
  420afa:	das    
  420afb:	rcl    DWORD PTR [edi+0x52],0x85
  420aff:	add    dl,ch
  420b01:	stos   BYTE PTR es:[edi],al
  420b02:	pop    ebp
  420b03:	lahf   
  420b04:	stc    
  420b05:	mov    eax,ds
  420b07:	cmp    eax,0x16a09707
  420b0c:	jmp    0x420b1d
  420b0e:	dec    esi
  420b0f:	pop    ss
  420b10:	fs jl  0x420b2d
  420b13:	xor    ebp,DWORD PTR ds:0x3f640c27
  420b19:	xor    al,0xa6
  420b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b1c:	mov    esi,0xa78e6e77
  420b21:	push   esi
  420b22:	pop    esp
  420b23:	jne    0x420b8f
  420b25:	aam    0xbe
  420b27:	mov    al,ds:0xe467bba1
  420b2c:	loope  0x420add
  420b2e:	mov    eax,ds:0x48dd4246
  420b33:	fsubr  QWORD PTR [ecx-0x24b50754]
  420b39:	jle    0x420b8b
  420b3b:	rcl    al,cl
  420b3d:	into   
  420b3e:	fsub   QWORD PTR [edx+esi*4-0x6c647e72]
  420b45:	xor    dl,BYTE PTR [edi+0x16]
  420b48:	es jo  0x420b07
  420b4b:	or     BYTE PTR [eax+0x6f],ah
  420b4e:	adc    dl,BYTE PTR [esi+edx*1]
  420b51:	jl     0x420ba6
  420b53:	out    dx,eax
  420b54:	pop    eax
  420b55:	dec    esi
  420b56:	mov    ebx,0x4331dab7
  420b5b:	imul   eax,DWORD PTR [eax+edi*2],0x7a0871f1
  420b62:	js     0x420bba
  420b64:	cs pushf 
  420b66:	xchg   esi,eax
  420b67:	arpl   WORD PTR [ecx+0x3c],bp
  420b6a:	cld    
  420b6b:	xor    BYTE PTR [ebx+0x11bc031e],0x2c
  420b72:	pop    esp
  420b73:	jmp    0x6d25:0x9e74aeae
  420b7a:	and    DWORD PTR fs:[edx+0x712b03c8],esp
  420b81:	mov    es,WORD PTR [esi+0x5db61da3]
  420b87:	jecxz  0x420bca
  420b89:	add    al,0xcd
  420b8b:	cmp    DWORD PTR [edi],ebp
  420b8d:	mov    bl,0xf4
  420b8f:	xchg   edi,eax
  420b90:	gs loop 0x420bab
  420b93:	jg     0x420bce
  420b95:	inc    eax
  420b96:	lahf   
  420b97:	cld    
  420b98:	sub    al,0x1c
  420b9a:	pop    edx
  420b9b:	fs and al,0x6
  420b9e:	adc    DWORD PTR [ecx-0x34636cd8],esp
  420ba4:	or     al,0x6a
  420ba6:	mov    ds:0x7bcac650,eax
  420bab:	xor    edx,DWORD PTR [ebp+0x79e08978]
  420bb1:	movd   DWORD PTR [eax],mm2
  420bb4:	jle    0x420bd6
  420bb6:	les    edx,FWORD PTR [edi+0x15631075]
  420bbc:	mov    BYTE PTR [ebx+0x63bf2c56],cl
  420bc2:	leave  
  420bc3:	retf   0x179f
  420bc6:	mov    al,BYTE PTR [ebx]
  420bc8:	push   esp
  420bc9:	jne    0x420bf0
  420bcb:	jbe    0x420bb3
  420bcd:	outs   dx,DWORD PTR ds:[esi]
  420bce:	repnz icebp 
  420bd0:	ud1    ebp,DWORD PTR [eax+ecx*1]
  420bd4:	popa   
  420bd5:	push   0x39841df1
  420bda:	ret    0xfa78
  420bdd:	(bad)  
  420bde:	(bad)  
  420bdf:	or     dh,cl
  420be1:	mov    esp,0xa4907372
  420be6:	outs   dx,BYTE PTR ds:[esi]
  420be7:	popf   
  420be8:	and    esp,DWORD PTR [edi+0x27]
  420beb:	jb     0x420ba8
  420bed:	pop    edi
  420bee:	push   es
  420bef:	pop    esp
  420bf0:	aad    0x1c
  420bf2:	ds mov ch,0xda
  420bf5:	and    ah,BYTE PTR ds:0x8f02dd02
  420bfb:	push   0xfffffffd
  420bfd:	cs dec edi
  420bff:	pop    edi
  420c00:	jl     0x420c1c
  420c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c04:	lods   al,BYTE PTR ds:[esi]
  420c05:	xor    cl,BYTE PTR [ebx+0x4a]
  420c08:	inc    ecx
  420c09:	mov    ebp,ecx
  420c0b:	sbb    al,0xb
  420c0d:	lods   eax,DWORD PTR ss:[esi]
  420c0f:	out    dx,al
  420c10:	dec    ecx
  420c11:	test   eax,0x5ccf78ab
  420c16:	or     eax,0x34a80c66
  420c1b:	ins    DWORD PTR es:[edi],dx
  420c1c:	inc    esi
  420c1d:	mov    al,ds:0x89ed58ff
  420c22:	mov    edx,0x527c0018
  420c27:	jmp    0x856a:0x18d8e1df
  420c2e:	scas   eax,DWORD PTR es:[edi]
  420c2f:	mov    dl,0x9a
  420c31:	nop
  420c32:	fincstp 
  420c34:	sbb    BYTE PTR [esi],cl
  420c36:	neg    BYTE PTR [ebx+0x76]
  420c39:	mov    ebp,0x62685323
  420c3e:	out    0x61,eax
  420c40:	push   es
  420c41:	mov    cl,BYTE PTR [eax+0x65]
  420c44:	xchg   ecx,eax
  420c45:	adc    DWORD PTR ds:0x7467970a,edi
  420c4b:	xchg   ebx,eax
  420c4c:	mov    esi,0xbf3c96e0
  420c51:	jnp    0x420c96
  420c53:	test   eax,0xa802774d
  420c58:	pop    ebx
  420c59:	jp     0x420bf9
  420c5b:	aaa    
  420c5c:	ret    0x3c41
  420c5f:	jbe    0x420c65
  420c61:	add    DWORD PTR [ecx-0x49],ebp
  420c64:	xchg   BYTE PTR [esp+edx*1-0x15],dl
  420c68:	push   ds
  420c69:	inc    eax
  420c6a:	push   esp
  420c6b:	xchg   edi,eax
  420c6c:	neg    BYTE PTR [edi]
  420c6e:	int    0xe3
  420c70:	iret   
  420c71:	fstp   st(7)
  420c73:	outs   dx,BYTE PTR ds:[esi]
  420c74:	mov    edi,0x2b241685
  420c79:	std    
  420c7a:	inc    eax
  420c7b:	mov    ebp,ebx
  420c7d:	push   ds
  420c7e:	xor    eax,0xb28eee4a
  420c83:	mov    al,0x1
  420c85:	cmp    dl,BYTE PTR [eax+0x698db7f0]
  420c8b:	jmp    0x78aabcf0
  420c90:	(bad)  [edi+0x4dc1d3ad]
  420c96:	adc    DWORD PTR [ebx],edx
  420c98:	xor    al,0xed
  420c9a:	gs pop esi
  420c9c:	lods   al,BYTE PTR ds:[esi]
  420c9d:	jg     0x420c2d
  420c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ca0:	sbb    esp,0x2d1cd80e
  420ca6:	adc    BYTE PTR [edi-0xe99a9b3],dh
  420cac:	cdq    
  420cad:	out    0x28,al
  420caf:	pop    esi
  420cb0:	mov    ch,BYTE PTR [edx]
  420cb2:	pop    ebx
  420cb3:	pop    edi
  420cb4:	jecxz  0x420cb4
  420cb6:	dec    edx
  420cb7:	call   0xfedd:0x968c793c
  420cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cbf:	xchg   esi,eax
  420cc0:	fdivp  st(1),st
  420cc2:	mov    ds:0x662d9f17,al
  420cc7:	fist   WORD PTR [eax]
  420cc9:	mov    esp,DWORD PTR [edx+0x6c]
  420ccc:	add    edx,DWORD PTR [ebx+0x7ca70109]
  420cd2:	fadd   DWORD PTR [edi+edx*2+0x18b481d8]
  420cd9:	repz (bad) [esi+0x12a48ab6]
  420ce0:	inc    esi
  420ce1:	out    dx,eax
  420ce2:	out    dx,eax
  420ce3:	jl     0x420d5b
  420ce5:	stos   BYTE PTR es:[edi],al
  420ce6:	bound  cx,DWORD PTR [ebx+eiz*1-0xc032353]
  420cee:	hlt    
  420cef:	loop   0x420cf4
  420cf1:	xchg   ebp,eax
  420cf2:	fbstp  TBYTE PTR [esi+0xe]
  420cf5:	out    0x18,al
  420cf7:	jmp    DWORD PTR [edx]
  420cf9:	bnd jmp 0x420d03
  420cfc:	jo     0x420d5c
  420cfe:	or     esi,esi
  420d00:	sbb    BYTE PTR [eax],0x0
  420d03:	inc    ebp
  420d04:	(bad)  
  420d05:	in     eax,dx
  420d06:	ins    BYTE PTR es:[edi],dx
  420d07:	std    
  420d08:	push   cs
  420d09:	cmp    DWORD PTR [edx+0x70],esp
  420d0c:	cmc    
  420d0d:	or     BYTE PTR [eax-0x2],bh
  420d10:	push   edx
  420d11:	xor    ebp,0x78
  420d14:	pop    esi
  420d15:	idiv   DWORD PTR es:[ecx-0xe]
  420d19:	retf   0x526d
  420d1c:	pop    es
  420d1d:	push   edx
  420d1e:	cld    
  420d1f:	push   0x9e83a2e4
  420d24:	pop    ecx
  420d25:	push   edi
  420d26:	rol    DWORD PTR [edi-0x7e],1
  420d29:	jb     0x420d6c
  420d2b:	mov    ah,0x67
  420d2d:	xchg   ebp,eax
  420d2e:	into   
  420d2f:	mov    esi,0x47c96ae
  420d34:	out    dx,eax
  420d35:	sbb    eax,0xd3c6b901
  420d3a:	pop    ds
  420d3b:	adc    edi,edx
  420d3d:	xor    esp,DWORD PTR [eax+0x48]
  420d40:	bswap  edi
  420d42:	pop    es
  420d43:	lods   al,BYTE PTR ds:[esi]
  420d44:	mov    dl,0x7b
  420d46:	aam    0x64
  420d48:	jo     0x420d54
  420d4a:	retf   
  420d4b:	or     dl,0x9d
  420d4e:	dec    edx
  420d4f:	inc    eax
  420d50:	lahf   
  420d51:	dec    ebp
  420d52:	cmp    BYTE PTR [edx-0x4b9c5296],0x59
  420d59:	loope  0x420d54
  420d5b:	call   0xc017:0x393fc0e3
  420d62:	in     al,0xcf
  420d64:	adc    DWORD PTR [ecx-0x21],0x55ddedd4
  420d6b:	mov    bl,0xb3
  420d6d:	std    
  420d6e:	fild   QWORD PTR [esi+0x60edd9c1]
  420d74:	out    dx,eax
  420d75:	or     bl,0x48
  420d78:	scas   eax,DWORD PTR es:[edi]
  420d79:	fisttp DWORD PTR [esi-0x6dba30b5]
  420d7f:	ins    BYTE PTR es:[edi],dx
  420d80:	cmp    DWORD PTR [esi+ebx*1-0x1f],esp
  420d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d85:	pop    es
  420d86:	sub    BYTE PTR [ebx],ah
  420d88:	push   ecx
  420d89:	push   ecx
  420d8a:	ror    DWORD PTR [esi+0x4a],cl
  420d8d:	adc    ebx,edx
  420d8f:	add    bl,BYTE PTR [ebp-0x80]
  420d92:	scas   eax,DWORD PTR es:[edi]
  420d93:	test   eax,0xb21836b9
  420d98:	mov    ch,0x56
  420d9a:	cmp    ch,0x8e
  420d9d:	test   BYTE PTR [edx-0x45f44fd0],cl
  420da3:	inc    edi
  420da4:	(bad)  
  420da5:	in     al,dx
  420da6:	(bad)
  420daa:	sti    
  420dab:	outs   dx,BYTE PTR ds:[esi]
  420dac:	inc    esp
  420dad:	inc    eax
  420dae:	or     DWORD PTR [eax],esp
  420db0:	xchg   BYTE PTR ds:0xfd18d6db,ch
  420db6:	mov    dh,0xfe
  420db8:	mov    ds:0x763822f4,eax
  420dbd:	sbb    al,bh
  420dbf:	adc    ebx,DWORD PTR [esi-0x39c8a8c]
  420dc5:	ins    DWORD PTR es:[edi],dx
  420dc6:	sub    BYTE PTR [edx-0x1639b75],dh
  420dcc:	mov    ebp,0x13c6124b
  420dd2:	in     al,dx
  420dd3:	pop    ss
  420dd4:	mov    ah,BYTE PTR [edi-0x66]
  420dd7:	es in  al,dx
  420dd9:	mov    cl,0x5a
  420ddb:	call   DWORD PTR [ecx+0x53]
  420dde:	inc    edi
  420ddf:	sub    DWORD PTR [ebx-0x4de80ab0],edi
  420de5:	push   ecx
  420de6:	imul   ebp,DWORD PTR [ecx],0xbe7ad45d
  420dec:	cmp    edx,DWORD PTR [edx+0x6aacf0bf]
  420df2:	int3   
  420df3:	(bad)  
  420df4:	push   esi
  420df5:	daa    
  420df6:	xor    DWORD PTR [edi+0x24],ebx
  420df9:	call   FWORD PTR [ebp-0x45]
  420dfc:	icebp  
  420dfd:	xchg   ecx,eax
  420dfe:	xchg   DWORD PTR [ecx-0x7d],edi
  420e01:	xchg   edi,eax
  420e02:	stc    
  420e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e04:	add    dl,BYTE PTR [ebx+ebp*2+0x4e]
  420e08:	cmp    ecx,0xfa7bcd70
  420e0e:	pop    eax
  420e0f:	aad    0xba
  420e11:	addr16 (bad) 
  420e13:	xchg   ebx,eax
  420e14:	aas    
  420e15:	push   edx
  420e16:	mov    eax,ds:0x832a5a45
  420e1b:	jle    0x420e96
  420e1d:	add    esi,ecx
  420e1f:	pop    ds
  420e20:	dec    edx
  420e21:	aad    0x2f
  420e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e24:	push   ds
  420e25:	xchg   ebx,eax
  420e26:	das    
  420e27:	ror    DWORD PTR [edx],1
  420e29:	mov    ds:0xf7d4527c,al
  420e2e:	add    eax,0xd961d810
  420e33:	mov    ch,0xcb
  420e35:	loopne 0x420e50
  420e37:	xor    eax,0xb651ab37
  420e3c:	mov    ch,0x48
  420e3e:	pop    esi
  420e3f:	and    DWORD PTR [edi+0x7b],0x996ad0a3
  420e46:	sbb    bl,BYTE PTR [ebx]
  420e48:	xchg   esi,eax
  420e49:	jae    0x420e45
  420e4b:	aas    
  420e4c:	in     al,dx
  420e4d:	and    al,BYTE PTR [edi-0xec7d68c]
  420e53:	adc    dl,dl
  420e55:	clc    
  420e56:	lahf   
  420e57:	stos   BYTE PTR es:[edi],al
  420e58:	cld    
  420e59:	add    eax,0x2dd095a8
  420e5e:	pop    DWORD PTR [ebx+0x2b]
  420e61:	xchg   edx,eax
  420e62:	cmp    BYTE PTR [ecx-0x6bb33401],cl
  420e68:	into   
  420e69:	out    0x9e,eax
  420e6b:	cmp    eax,0xb98bb515
  420e70:	bound  esp,QWORD PTR [esi+0x746641e5]
  420e76:	push   ds
  420e77:	or     eax,0x958f572e
  420e7c:	loopne 0x420e92
  420e7e:	mov    eax,0x54709e8
  420e83:	or     DWORD PTR [esi+0x75],0x7d
  420e87:	imul   ebp,DWORD PTR [edx-0x75],0x15
  420e8b:	push   es
  420e8c:	and    ah,dh
  420e8e:	cmp    BYTE PTR [esp+eiz*4-0x32],al
  420e92:	ins    DWORD PTR es:[edi],dx
  420e93:	sahf   
  420e94:	mov    eax,ds:0xd6e98d55
  420e99:	jl     0x420f0a
  420e9b:	sub    al,0x48
  420e9d:	sub    dh,BYTE PTR [ebp-0x1d1d8de6]
  420ea3:	sets   BYTE PTR [eax-0xc]
  420ea7:	call   0x1c5cc5ce
  420eac:	fs push eax
  420eae:	div    DWORD PTR [eax-0x238f582c]
  420eb4:	push   edi
  420eb5:	in     eax,dx
  420eb6:	out    0x5b,al
  420eb8:	dec    eax
  420eb9:	inc    edi
  420eba:	rol    BYTE PTR [edi-0x4a],0xcf
  420ebe:	push   ecx
  420ebf:	test   al,0xc1
  420ec1:	hlt    
  420ec2:	pop    eax
  420ec3:	xor    DWORD PTR [edi+eax*2],0xffffffae
  420ec7:	adc    al,0x34
  420ec9:	mov    dl,0x1c
  420ecb:	and    al,0x67
  420ecd:	jg     0x420e5a
  420ecf:	psllw  mm4,mm0
  420ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ed3:	fisttp QWORD PTR [edi-0x27c5fb3d]
  420ed9:	sub    DWORD PTR [edx],0xffffffe4
  420edc:	add    esp,DWORD PTR [ebx+ebp*1-0x4a4fd11]
  420ee3:	addr16 push edx
  420ee5:	cmp    al,BYTE PTR [esi+edi*1]
  420ee8:	fldenv [ebx+edx*4+0x35c105a0]
  420eef:	pop    es
  420ef0:	(bad)  
  420ef1:	xchg   ecx,ecx
  420ef3:	das    
  420ef4:	(bad)  
  420ef5:	pop    ds
  420ef6:	adc    ebx,DWORD PTR [ebp-0x4241c234]
  420efc:	inc    ecx
  420efd:	mov    al,ds:0x5803c02a
  420f02:	dec    edx
  420f03:	int    0x90
  420f05:	and    BYTE PTR [ebx],dl
  420f07:	js     0x420f6b
  420f09:	cmp    DWORD PTR [ecx-0x4c],ecx
  420f0c:	pop    ecx
  420f0d:	add    eax,DWORD PTR [esi+0xde7378]
  420f13:	pop    ebp
  420f14:	sub    DWORD PTR [edi],edi
  420f16:	jb     0x420f24
  420f18:	jnp    0x420ed9
  420f1a:	lahf   
  420f1b:	repnz test eax,0xbd3376fd
  420f21:	bound  edi,QWORD PTR [ecx-0x7]
  420f24:	xchg   DWORD PTR [ebx],edx
  420f26:	retf   
  420f27:	xor    al,0xd9
  420f29:	mov    al,ds:0xec014596
  420f2e:	adc    DWORD PTR [esi-0x14],0xfae5fe63
  420f35:	(bad)  
  420f36:	or     al,0xed
  420f38:	outs   dx,BYTE PTR ds:[esi]
  420f39:	sti    
  420f3a:	mov    bh,bh
  420f3c:	cdq    
  420f3d:	dec    edi
  420f3f:	xlat   BYTE PTR ds:[ebx]
  420f40:	xor    BYTE PTR [edx+0x72],bl
  420f43:	adc    DWORD PTR [esi],eax
  420f45:	(bad)  
  420f46:	push   ebx
  420f47:	pop    eax
  420f48:	rcr    BYTE PTR [ebp-0x29eadc3f],1
  420f4e:	jle    0x420f77
  420f50:	repnz in al,0xee
  420f53:	mov    eax,0xa6dbd951
  420f58:	cmp    edi,ebp
  420f5a:	mov    ds:0x6b21fd6e,al
  420f5f:	int    0xe1
  420f61:	mov    ds:0x2914bbda,al
  420f66:	loope  0x420faf
  420f68:	dec    edi
  420f69:	pop    ds
  420f6a:	xchg   ecx,eax
  420f6b:	cmp    al,0x5b
  420f6d:	pushf  
  420f6e:	cwde   
  420f6f:	in     eax,dx
  420f70:	aam    0x2e
  420f72:	aam    0xf
  420f74:	dec    edi
  420f75:	lock and eax,0x836859bf
  420f7b:	dec    esi
  420f7c:	lods   al,BYTE PTR ds:[esi]
  420f7d:	pop    ss
  420f7e:	mov    eax,ds:0x2b38cfd2
  420f83:	ja     0x420fbf
  420f85:	iret   
  420f86:	jae    0x420f51
  420f88:	dec    ebx
  420f89:	fidiv  WORD PTR ds:0xa1d2e1fb
  420f8f:	enter  0x8796,0x8
  420f93:	inc    eax
  420f94:	fsubrp st(7),st
  420f96:	sub    eax,0x106ca2d7
  420f9b:	push   ecx
  420f9d:	jl     0x420fb3
  420f9f:	(bad)  
  420fa0:	mov    ds:0x21ec479f,eax
  420fa5:	fild   DWORD PTR ds:0xd563eaeb
  420fab:	push   0x26
  420fad:	mov    ch,0x91
  420faf:	and    DWORD PTR [edx],ecx
  420fb1:	sbb    eax,0x64fde090
  420fb6:	cmp    ecx,DWORD PTR [edx+0x69]
  420fb9:	out    dx,al
  420fba:	push   esi
  420fbb:	jne    0x421001
  420fbd:	scas   al,BYTE PTR es:[edi]
  420fbe:	sub    BYTE PTR [esi+edx*1-0x48],ch
  420fc2:	pop    ecx
  420fc3:	outs   dx,BYTE PTR ds:[esi]
  420fc4:	sub    BYTE PTR [edi],ah
  420fc6:	out    dx,al
  420fc7:	aas    
  420fc8:	and    eax,DWORD PTR [ebx-0x4]
  420fcb:	(bad)  
  420fcc:	call   0x70d18f7
  420fd1:	cmp    dh,BYTE PTR [edx+0x3fe632bd]
  420fd7:	adc    al,0xa0
  420fd9:	jmp    0x4ae746d4
  420fde:	jmp    0xe2cf3bc2
  420fe3:	js     0x420f76
  420fe5:	push   edx
  420fe6:	daa    
  420fe7:	stc    
  420fe8:	test   DWORD PTR [esi+0x20410d7],0xb92806c7
  420ff2:	scas   al,BYTE PTR es:[edi]
  420ff3:	or     BYTE PTR [ecx],0xc4
  420ff6:	les    esi,FWORD PTR [esi-0xb3f640a]
  420ffc:	cmp    ecx,esi
  420ffe:	lock cmp BYTE PTR [ebx],0xd1
  421002:	jns    0x421001
  421004:	and    ebp,DWORD PTR ds:0x119668bf
  42100a:	int    0xec
  42100c:	(bad)  
  42100d:	jecxz  0x421001
  42100f:	cmp    dl,BYTE PTR [ebx-0x50]
  421012:	retf   0x4a57
  421015:	xchg   ecx,eax
  421016:	mov    edx,0x3303709
  42101b:	adc    bh,BYTE PTR [ecx+0x6e81fab3]
  421021:	loopne 0x421036
  421023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421024:	push   ss
  421025:	(bad)
  421029:	lds    ebp,FWORD PTR [eax+0x5e62ed9b]
  42102f:	add    bl,BYTE PTR [edx+edi*1-0x2aabaee3]
  421036:	fwait
  421037:	jp     0x421043
  421039:	jmp    0x4210aa
  42103b:	xlat   BYTE PTR ds:[ebx]
  42103c:	xchg   ebx,eax
  42103d:	pop    ebx
  42103e:	adc    eax,0x3e989b4b
  421043:	or     edi,DWORD PTR [eax]
  421045:	mov    bl,0x75
  421047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421048:	outs   dx,BYTE PTR ds:[esi]
  421049:	xchg   DWORD PTR [edx],edx
  42104b:	sub    BYTE PTR ds:0x1ba8ca74,dh
  421051:	pop    ds
  421052:	dec    edx
  421053:	rol    BYTE PTR [edx+0x6e79a634],1
  421059:	pop    edx
  42105a:	add    al,ah
  42105c:	enter  0xcc65,0xad
  421060:	inc    edi
  421061:	ds sub bh,bh
  421064:	xor    DWORD PTR [ecx-0x3bf26b6c],eax
  42106a:	cmc    
  42106b:	mov    ebp,DWORD PTR [ebx]
  42106d:	and    eax,0x2375b7d6
  421072:	mov    edx,0xfb592e0a
  421077:	and    ch,bh
  421079:	xchg   ch,bh
  42107b:	fwait
  42107c:	mov    bl,0x74
  42107e:	push   ebp
  42107f:	(bad)  
  421081:	ror    ecx,cl
  421083:	ret    
  421084:	bound  esi,QWORD PTR [ebx]
  421086:	and    DWORD PTR [ecx-0x73],edi
  421089:	dec    ebx
  42108a:	in     al,0xba
  42108c:	adc    eax,0x84af8eba
  421091:	cwde   
  421092:	sub    DWORD PTR [ecx-0x70112513],ebx
  421098:	mov    cs,WORD PTR [edi]
  42109a:	fcom   DWORD PTR [esi]
  42109c:	popa   
  42109d:	mov    ch,0xfa
  42109f:	lods   eax,DWORD PTR ds:[esi]
  4210a0:	mov    BYTE PTR [esi],ch
  4210a2:	jmp    0x60a:0xe693547e
  4210a9:	stos   DWORD PTR es:[edi],eax
  4210aa:	loope  0x4210f8
  4210ac:	fucomi st,st(5)
  4210ae:	rcr    DWORD PTR [edi+esi*1-0x613e5929],cl
  4210b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210b6:	adc    BYTE PTR [eax],bh
  4210b8:	mov    eax,ds:0xff4e485
  4210bd:	aaa    
  4210be:	mov    ch,0x3f
  4210c0:	pop    edx
  4210c1:	mov    ds:0x95f5c86a,al
  4210c6:	mov    al,0xfa
  4210c8:	je     0x4210b6
  4210ca:	jl     0x421133
  4210cc:	xor    ebx,DWORD PTR [esi-0x7086d802]
  4210d2:	(bad)  [edi]
  4210d4:	sbb    al,0x53
  4210d6:	cs jp  0x42114f
  4210d9:	dec    esi
  4210da:	jb     0x4210f6
  4210dc:	sub    al,BYTE PTR [edx+0x41]
  4210df:	push   cs
  4210e0:	imul   ecx,DWORD PTR [edi+eiz*4-0x3c5cd36c],0x15
  4210e8:	xchg   DWORD PTR [eax],esp
  4210ea:	pop    ebx
  4210eb:	pop    ds
  4210ec:	sbb    al,0x24
  4210ee:	(bad)
  4210f2:	cmp    eax,0x44fa9c82
  4210f7:	inc    ebx
  4210f8:	mov    ch,0x76
  4210fa:	adc    eax,0xdaf47eb2
  4210ff:	sub    esp,DWORD PTR [ebx+ebx*4+0x75]
  421103:	sub    edx,DWORD PTR [ebp-0x6f]
  421106:	in     eax,0x1b
  421108:	push   esp
  421109:	shr    cl,1
  42110b:	pop    edi
  42110c:	push   esp
  42110d:	fild   DWORD PTR [esi-0x28]
  421110:	lds    eax,FWORD PTR ds:0x2e62bc33
  421116:	sar    DWORD PTR [ecx+ebp*4+0x23],0x67
  42111b:	cmp    BYTE PTR [edx],dl
  42111d:	fs mov ebp,0x36c07977
  421123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421125:	ds in  al,dx
  421127:	adc    eax,0x94e7bcd5
  42112c:	xor    DWORD PTR [eax+0x2671c5cb],edx
  421132:	ret    0x84df
  421135:	or     esi,DWORD PTR ds:0xf3e00ecd
  42113b:	sub    eax,0xc04e32d3
  421140:	push   ebx
  421141:	jbe    0x421198
  421143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421144:	push   0x18
  421146:	lods   al,BYTE PTR ds:[esi]
  421147:	cli    
  421148:	fmul   QWORD PTR [edx+0x156c017a]
  42114e:	arpl   WORD PTR [eax-0x76],bp
  421151:	adc    BYTE PTR [esi-0x68],ah
  421154:	call   0x7119:0x4fc158bb
  42115b:	(bad)  
  42115d:	pop    ebp
  42115e:	push   esi
  42115f:	mov    ch,0xbf
  421161:	gs inc edi
  421163:	inc    eax
  421164:	jmp    0x21990299
  421169:	adc    DWORD PTR [ebx-0x5],ecx
  42116c:	push   ds
  42116d:	sub    eax,0x3c26ac3e
  421172:	gs aas 
  421174:	stos   BYTE PTR es:[edi],al
  421175:	add    eax,0xf6be279d
  42117a:	push   edi
  42117b:	fistp  WORD PTR [edi]
  42117d:	xchg   ebp,eax
  42117e:	lods   eax,DWORD PTR ds:[esi]
  42117f:	jb     0x421125
  421181:	jg     0x421185
  421183:	inc    edx
  421184:	scas   al,BYTE PTR es:[edi]
  421185:	mov    dh,0xbf
  421187:	jl     0x421196
  421189:	mov    ebp,DWORD PTR [eax+ebp*8]
  42118c:	jl     0x421114
  42118e:	ds sub edx,edx
  421191:	mov    eax,ds:0x286d8092
  421196:	sub    al,BYTE PTR [ecx+0x15]
  421199:	xchg   ebx,eax
  42119a:	hlt    
  42119b:	ins    BYTE PTR es:[edi],dx
  42119c:	retf   0x7944
  42119f:	xchg   ecx,eax
  4211a0:	pop    eax
  4211a1:	jg     0x4211ef
  4211a3:	mov    esp,0x12624be5
  4211a8:	pop    edi
  4211a9:	test   DWORD PTR [edi+0x72b5d12a],eax
  4211af:	outs   dx,DWORD PTR ds:[esi]
  4211b0:	adc    eax,esp
  4211b2:	dec    ebx
  4211b3:	inc    edx
  4211b4:	enter  0x4fe5,0x82
  4211b8:	(bad)  
  4211b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211ba:	test   al,0x31
  4211bc:	jl     0x421151
  4211be:	int3   
  4211bf:	daa    
  4211c0:	pop    esi
  4211c1:	inc    ebx
  4211c2:	daa    
  4211c3:	sbb    eax,0xe5a01fb
  4211c8:	jmp    0x39fe45af
  4211cd:	xchg   edi,eax
  4211ce:	stos   BYTE PTR es:[edi],al
  4211cf:	or     al,BYTE PTR [eax]
  4211d1:	push   ebx
  4211d2:	mov    ch,0xe2
  4211d4:	mov    edx,0x7dcdb0df
  4211d9:	sbb    DWORD PTR [edx],ebx
  4211db:	test   al,0xfa
  4211dd:	adc    bl,BYTE PTR [ecx+eax*2-0x49]
  4211e1:	aam    0xb0
  4211e3:	xchg   esp,eax
  4211e4:	push   ebx
  4211e5:	jne    0x421212
  4211e7:	hlt    
  4211e8:	push   edx
  4211e9:	sti    
  4211ea:	xor    al,0x63
  4211ec:	lods   eax,DWORD PTR ds:[esi]
  4211ed:	and    BYTE PTR [eax],0x19
  4211f0:	cmp    BYTE PTR [esp+ecx*1],ah
  4211f3:	xor    ah,BYTE PTR [esi-0x6d22d37c]
  4211f9:	xor    eax,0x7b283a51
  4211fe:	jno    0x42127c
  421200:	jno    0x4211d4
  421202:	adc    BYTE PTR [edi+0x2b3a7339],ah
  421208:	xor    BYTE PTR [ecx-0x58],bl
  42120b:	adc    eax,0xc7fa238d
  421210:	pusha  
  421211:	and    ebp,DWORD PTR [eax]
  421213:	lods   al,BYTE PTR ds:[esi]
  421214:	lods   eax,DWORD PTR ds:[esi]
  421215:	or     BYTE PTR [edx+edx*2-0x7729e3b0],al
  42121c:	push   edx
  42121d:	and    al,0x59
  42121f:	xor    al,0x98
  421221:	hlt    
  421222:	push   0x3c2ffed0
  421227:	sub    al,0x0
  421229:	push   edi
  42122a:	in     eax,dx
  42122b:	or     DWORD PTR [esi+0x6eda4029],ebx
  421231:	sahf   
  421232:	rcr    BYTE PTR [edx],1
  421234:	enter  0x2721,0xb4
  421238:	or     eax,0xca77d899
  42123d:	push   ds
  42123e:	std    
  42123f:	popf   
  421240:	pushf  
  421241:	das    
  421242:	ss adc al,0x4a
  421245:	mov    edi,0x80235f0f
  42124a:	inc    edi
  42124b:	sar    ecx,cl
  42124d:	mov    edx,0xa9e9a161
  421252:	push   cs
  421253:	push   0xf
  421255:	cdq    
  421256:	out    dx,al
  421257:	hlt    
  421258:	aam    0x92
  42125a:	sbb    ecx,DWORD PTR [eax-0x63286dfa]
  421260:	mov    edx,0xa0c3f77f
  421265:	dec    edi
  421266:	call   0xf7ccc76
  42126b:	mov    gs,WORD PTR [eax-0x68]
  42126e:	fld    QWORD PTR ss:[ebx]
  421271:	pop    ss
  421272:	inc    ebx
  421273:	fucomi st,st(6)
  421275:	ins    BYTE PTR es:[edi],dx
  421276:	std    
  421277:	imul   eax,DWORD PTR [esp+eax*8-0x29],0x6f3b7861
  42127f:	mov    edx,0xbe760579
  421284:	mov    ebx,DWORD PTR [ebp-0x80]
  421287:	jecxz  0x421220
  421289:	mov    edi,0xa11d76b2
  42128e:	lods   al,BYTE PTR ds:[esi]
  42128f:	outs   dx,BYTE PTR ds:[esi]
  421290:	sub    al,ch
  421292:	repnz xor al,0x31
  421295:	out    dx,eax
  421296:	xor    BYTE PTR [esi+0x61d98775],bh
  42129c:	mov    bh,0xba
  42129e:	cli    
  42129f:	inc    ebp
  4212a0:	fwait
  4212a1:	mov    BYTE PTR [ebp-0x6],ch
  4212a4:	in     al,dx
  4212a5:	(bad)
  4212a9:	out    0x6a,al
  4212ab:	bound  esi,QWORD PTR ds:0xf27abac7
  4212b1:	std    
  4212b2:	sub    DWORD PTR [ecx],esi
  4212b4:	je     0x42132d
  4212b6:	mov    cl,0xc
  4212b8:	add    eax,0xc5f87e52
  4212bd:	jnp    0x4212f4
  4212bf:	add    BYTE PTR [edi+0x58ca46a1],dl
  4212c5:	mov    esi,0x13d2d0f0
  4212ca:	mov    edx,0x42e14cca
  4212cf:	push   es
  4212d0:	pop    ds
  4212d1:	mov    al,0x52
  4212d3:	inc    esp
  4212d4:	cmp    esi,DWORD PTR [esi+0x5e]
  4212d7:	lods   eax,DWORD PTR ds:[esi]
  4212d8:	cld    
  4212d9:	retf   
  4212da:	lahf   
  4212db:	nop
  4212dc:	in     eax,0x50
  4212de:	dec    esi
  4212df:	ss ret 
  4212e1:	lds    edi,FWORD PTR es:0xa801a248
  4212e8:	sti    
  4212e9:	or     al,0x95
  4212eb:	(bad)  
  4212ed:	xor    DWORD PTR [ebx],0xffffffd3
  4212f0:	out    0x54,eax
  4212f2:	fisub  WORD PTR [esp+ebx*4+0x48]
  4212f6:	sbb    dh,al
  4212f8:	pop    edx
  4212f9:	jno    0x42135b
  4212fb:	fld    TBYTE PTR [ecx+0x670fefa1]
  421301:	jp     0x42134b
  421303:	and    eax,0x187981c0
  421308:	xchg   ecx,eax
  421309:	inc    eax
  42130a:	or     al,0xb7
  42130c:	mov    al,0xae
  42130e:	rcl    ah,0x49
  421311:	adc    ah,ch
  421313:	xor    cl,BYTE PTR [edx]
  421315:	rcl    DWORD PTR [ebx+0x70],1
  421318:	push   cs
  421319:	jno    0x4212fc
  42131b:	lds    esi,FWORD PTR [ecx-0x742d04a3]
  421321:	xor    ah,BYTE PTR [esi+0x3307ca94]
  421327:	ficomp WORD PTR [edx]
  421329:	xchg   ecx,eax
  42132a:	jns    0x4212da
  42132c:	mov    esi,0xe590d191
  421331:	cmc    
  421332:	jo     0x4212da
  421334:	nop    DWORD PTR [ebp-0x5]
  421338:	dec    esp
  421339:	icebp  
  42133a:	and    eax,0x201f5146
  42133f:	in     eax,0x3a
  421341:	mov    eax,ds:0x8053952b
  421346:	fidiv  DWORD PTR [esi+ebp*2]
  421349:	xchg   edx,eax
  42134a:	cmc    
  42134b:	dec    edx
  42134c:	jae    0x4212df
  42134e:	call   FWORD PTR [edx+0x63]
  421351:	cmp    DWORD PTR [esi-0x6d],edx
  421354:	icebp  
  421355:	ret    
  421356:	dec    esi
  421357:	ror    DWORD PTR [eax],1
  421359:	call   0xc8fa6f5f
  42135e:	mov    dl,0x5a
  421360:	adc    eax,0x80dc345a
  421365:	mov    esi,0x252f21b0
  42136a:	mov    DWORD PTR [esi],ebp
  42136c:	fiadd  DWORD PTR ds:0x249e04a5
  421372:	cmc    
  421373:	ret    
  421374:	idiv   DWORD PTR [ebx+0x23]
  421377:	mov    cs,WORD PTR [ecx+0x32]
  42137a:	repz push edx
  42137c:	gs or  ecx,esi
  42137f:	or     ecx,0x5cd11917
  421385:	mov    esp,?
  421387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421388:	fimul  DWORD PTR [ecx]
  42138a:	sub    al,0x6f
  42138c:	adc    esi,DWORD PTR [edi]
  42138e:	dec    esi
  42138f:	push   ebx
  421390:	popf   
  421391:	cs ret 
  421393:	add    dl,BYTE PTR [ebp+0x7a]
  421396:	test   eax,0x9d798d23
  42139b:	and    DWORD PTR [edx-0x62],eax
  42139e:	mov    WORD PTR [ebp-0x4dde0aa3],?
  4213a4:	out    dx,eax
  4213a5:	lds    esp,FWORD PTR [esp+edi*1+0x2e]
  4213a9:	gs (bad) 
  4213ab:	repz sub BYTE PTR [edi],ah
  4213ae:	je     0x421426
  4213b0:	push   ds
  4213b1:	inc    eax
  4213b2:	pop    ss
  4213b3:	dec    ecx
  4213b4:	and    al,0x1b
  4213b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213b7:	cmp    esi,edi
  4213b9:	cmp    al,0xf3
  4213bb:	cmp    DWORD PTR [ecx-0x6b596c55],esp
  4213c1:	sbb    al,0x25
  4213c3:	sub    DWORD PTR [edx],edi
  4213c5:	imul   ecx,edi,0xffffffe6
  4213c8:	stc    
  4213c9:	mov    ecx,0x92e71171
  4213ce:	dec    ecx
  4213cf:	xor    bl,BYTE PTR [ecx]
  4213d1:	dec    edi
  4213d2:	call   DWORD PTR [ebx+0x3987dc45]
  4213d8:	cmp    DWORD PTR [ecx],0x23080216
  4213de:	test   BYTE PTR ds:0xf2817fd3,dl
  4213e4:	mov    edi,0x58f81275
  4213e9:	sbb    eax,0x5ee9797a
  4213ee:	rol    BYTE PTR [ebx+0x7a],0xea
  4213f2:	rcl    BYTE PTR ds:0x15c2886f,0xb2
  4213f9:	inc    edx
  4213fa:	jno    0x42139f
  4213fc:	add    bl,cl
  4213fe:	mov    edx,0xf9974d93
  421403:	mov    al,0x4a
  421405:	adc    eax,0x56325d6
  42140a:	jb     0x42147f
  42140c:	xor    ebx,DWORD PTR [ebx+ebp*4+0x273bb09b]
  421413:	lock jp 0x4213d3
  421416:	jp     0x42141e
  421418:	xchg   ebx,eax
  421419:	fnstcw WORD PTR [esi]
  42141b:	mov    cl,0x36
  42141d:	loopne 0x42143d
  42141f:	(bad)  
  421420:	cmp    eax,0xb91226f6
  421425:	and    ch,bh
  421427:	cmp    ch,bl
  421429:	lods   al,BYTE PTR ds:[esi]
  42142a:	jb     0x4213de
  42142c:	push   ecx
  42142d:	and    esi,0xffffffb0
  421430:	nop
  421431:	fwait
  421432:	mov    WORD PTR [ebp-0x51ebdc1d],es
  421438:	mov    ah,0xf0
  42143a:	adc    al,0xe6
  42143c:	mov    esi,0xdf995772
  421441:	into   
  421442:	sub    ebx,esi
  421444:	cmp    al,0x3d
  421446:	retf   
  421447:	loop   0x421456
  421449:	call   0x3a063f46
  42144e:	push   ss
  42144f:	dec    ecx
  421450:	push   0x55
  421452:	sub    al,0x31
  421454:	mov    ds:0x975d02c8,al
  421459:	and    BYTE PTR [edi],dh
  42145b:	inc    bh
  42145d:	dec    edx
  42145e:	repnz adc al,0xac
  421461:	fs sub edx,DWORD PTR fs:[edi]
  421465:	jno    0x421426
  421467:	aas    
  421468:	sbb    al,0xd2
  42146a:	retf   
  42146b:	sub    DWORD PTR [ebx-0x14],edi
  42146e:	xlat   BYTE PTR ds:[ebx]
  42146f:	fucomip st,st(5)
  421471:	sub    eax,0x2c56f4a2
  421476:	sub    eax,0x16a19362
  42147b:	push   es
  42147c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42147d:	pop    ebp
  42147e:	mov    ds:0x850c36ee,eax
  421483:	mov    esi,0xc74379d3
  421488:	lock das 
  42148a:	sti    
  42148b:	mov    ecx,0x41482f81
  421490:	hlt    
  421491:	div    BYTE PTR [edx-0x4a]
  421494:	add    eax,0xca4a6aae
  421499:	inc    ebp
  42149a:	pop    ebx
  42149b:	mov    ecx,0xc933d17b
  4214a0:	jb     0x421513
  4214a2:	pop    ebp
  4214a3:	lods   al,BYTE PTR ds:[esi]
  4214a4:	sub    al,0xef
  4214a6:	in     al,dx
  4214a7:	mov    eax,0xb4e00d76
  4214ac:	stos   BYTE PTR es:[edi],al
  4214ad:	pop    esi
  4214ae:	jecxz  0x4214a7
  4214b0:	dec    esi
  4214b1:	push   es
  4214b2:	cmp    esp,edi
  4214b4:	xlat   BYTE PTR ds:[ebx]
  4214b5:	dec    esp
  4214b6:	imul   ebx,DWORD PTR [edi+0x5e],0xc0583d8c
  4214bd:	sbb    DWORD PTR [edi-0x2c],eax
  4214c0:	and    BYTE PTR [edi-0x5f547614],dl
  4214c6:	shr    BYTE PTR [ebx],0x5
  4214c9:	and    bl,BYTE PTR [edx]
  4214cb:	cmc    
  4214cc:	mov    eax,0x7b2c483c
  4214d1:	clc    
  4214d2:	inc    ebp
  4214d3:	mov    bh,0xbc
  4214d5:	mov    ds:0x3b5f14e,eax
  4214da:	inc    eax
  4214db:	mov    ah,bh
  4214dd:	pop    ebx
  4214de:	jae    0x421493
  4214e0:	mov    dl,bh
  4214e2:	inc    edi
  4214e3:	ss sub eax,0xe03de7b5
  4214e9:	ja     0x42146c
  4214eb:	not    esp
  4214ed:	or     eax,0xcc44b926
  4214f2:	jae    0x421568
  4214f4:	mov    ebp,0xe9dbe67b
  4214f9:	push   edx
  4214fa:	out    dx,al
  4214fb:	jns    0x4214b4
  4214fd:	hlt    
  4214fe:	cmp    eax,0x225f593e
  421503:	jb     0x421558
  421505:	pop    ss
  421506:	cdq    
  421507:	in     eax,dx
  421508:	inc    edi
  421509:	stc    
  42150a:	jns    0x42153c
  42150c:	popf   
  42150d:	and    eax,0xc7f15576
  421512:	fld    TBYTE PTR [edi-0x1af9fabd]
  421518:	sbb    BYTE PTR [ecx+eiz*2-0x3a2fc186],0xc
  421520:	shr    BYTE PTR [edi],1
  421522:	mov    dl,0x6a
  421524:	adc    al,0xbd
  421526:	gs (bad) 
  421528:	xor    al,0x2d
  42152a:	cs stos DWORD PTR es:[edi],eax
  42152c:	ins    BYTE PTR es:[edi],dx
  42152d:	dec    esp
  42152e:	jns    0x421593
  421530:	jg     0x42155a
  421532:	fistp  DWORD PTR [ebp+0x4968f4c6]
  421538:	shr    ecx,cl
  42153a:	mov    BYTE PTR [ebp+0x96b6791],dl
  421540:	dec    ebp
  421541:	das    
  421542:	(bad)  
  421543:	sub    cl,dh
  421545:	mov    esp,0xd1a1f1f3
  42154a:	in     eax,dx
  42154b:	jp     0x421529
  42154d:	jg     0x421589
  42154f:	fcmovbe st,st(7)
  421551:	sbb    ch,BYTE PTR [ecx-0x12cfb9e6]
  421557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421558:	mov    ds:0x2c388203,al
  42155d:	mov    ebx,0x49ed363
  421562:	push   eax
  421563:	jno    0x42156a
  421565:	jo     0x42157e
  421567:	and    eax,0x1fcfbe5a
  42156c:	or     WORD PTR [edx],bp
  42156f:	out    0xd5,al
  421571:	imul   eax,DWORD PTR [ecx+0x71],0x78
  421575:	push   esi
  421576:	sbb    esp,DWORD PTR [eax+0xc]
  421579:	fst    QWORD PTR [edx-0x4c]
  42157c:	mov    ecx,0x7414570a
  421581:	add    ah,BYTE PTR [eax-0x76f32f52]
  421587:	xor    eax,0x1462ec7c
  42158c:	inc    edi
  42158d:	lods   al,BYTE PTR ds:[esi]
  42158e:	loope  0x421582
  421590:	push   ebx
  421591:	or     esp,DWORD PTR [edi]
  421593:	inc    esi
  421594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421595:	rcr    cl,0xb7
  421598:	jp     0x4215af
  42159a:	inc    edx
  42159b:	sub    BYTE PTR [ecx-0x3aa3a8ba],bh
  4215a1:	xchg   edx,eax
  4215a2:	pop    es
  4215a3:	sbb    al,BYTE PTR [edx-0x64b662ed]
  4215a9:	xor    eax,0x564bec1b
  4215ae:	xchg   edx,eax
  4215af:	sub    BYTE PTR [esi+edx*1],bh
  4215b2:	popa   
  4215b3:	cmp    eax,0x65832896
  4215b8:	mov    ebx,0x7e97a1ef
  4215bd:	cmc    
  4215be:	ins    BYTE PTR es:[edi],dx
  4215bf:	repz in al,dx
  4215c1:	popf   
  4215c2:	fstp   st(4)
  4215c4:	pop    ds
  4215c5:	jp     0x4215d7
  4215c7:	les    ebx,FWORD PTR [ebx-0x1df174b0]
  4215cd:	imul   esi,DWORD PTR [ebx+0x7135fcb0],0x595cc607
  4215d7:	fldenv [edx-0x43]
  4215da:	fdivr  st,st(4)
  4215dc:	in     al,0x6b
  4215de:	(bad)
  4215e1:	out    dx,al
  4215e2:	cmp    DWORD PTR [eax],esp
  4215e4:	mov    eax,ds:0xb9d08d3
  4215e9:	jbe    0x42157f
  4215eb:	pop    edx
  4215ec:	(bad)  
  4215ed:	jb     0x4215c7
  4215ef:	in     al,0x59
  4215f1:	mov    BYTE PTR [edx+edi*1+0x24355f5f],bh
  4215f8:	inc    esi
  4215f9:	paddb  mm0,QWORD PTR [esi+0x2eff89ab]
  421600:	mov    esi,0x131542a1
  421605:	bound  ebp,QWORD PTR [edi]
  421607:	xor    al,0x14
  421609:	dec    esi
  42160a:	mov    esp,0x1eae9b2b
  42160f:	das    
  421610:	into   
  421611:	jae    0x421642
  421613:	lahf   
  421614:	mov    al,0xc2
  421616:	loop   0x4215d2
  421618:	inc    ecx
  421619:	add    eax,0xf7db0f43
  42161e:	imul   BYTE PTR [esp+ecx*8-0x40]
  421622:	lods   al,BYTE PTR ds:[esi]
  421623:	clc    
  421624:	sbb    ah,dh
  421626:	enter  0x3df,0x9e
  42162a:	sbb    al,0x6a
  42162c:	sub    esi,ebp
  42162e:	sub    al,0xba
  421630:	and    dl,BYTE PTR [eax-0x79c81bf5]
  421636:	sbb    ebx,eax
  421638:	fidivr WORD PTR [ebx+ecx*4+0x15]
  42163c:	frstor [edx]
  42163e:	fsub   DWORD PTR [ebp+edi*2-0x22210ff]
  421645:	sub    ebp,edx
  421647:	push   0xffffff88
  421649:	mov    al,ds:0xc484c231
  42164e:	add    DWORD PTR [ebp+0x51e61d8a],esi
  421654:	aam    0xef
  421656:	(bad)  
  421657:	sub    eax,0x2f0ea374
  42165c:	push   ds
  42165d:	out    0x2e,eax
  42165f:	test   DWORD PTR [ecx+0x5f3d4d15],0xa3041408
  421669:	xor    DWORD PTR ds:0xd76bb1c2,edx
  42166f:	jno    0x4216a7
  421671:	sbb    DWORD PTR [eax],esi
  421673:	(bad)  
  421674:	pop    edi
  421675:	sub    ah,dh
  421677:	js     0x4216d1
  421679:	(bad)  
  42167a:	sbb    DWORD PTR [ecx-0x55191734],esi
  421680:	dec    edi
  421681:	scas   al,BYTE PTR es:[edi]
  421682:	pop    ebx
  421683:	adc    ecx,esi
  421685:	dec    ecx
  421686:	pop    ecx
  421687:	mov    ebp,esi
  421689:	or     ebp,eax
  42168b:	out    0xad,al
  42168d:	sub    BYTE PTR ss:[ecx],ch
  421690:	(bad)  
  421691:	xlat   BYTE PTR ds:[ebx]
  421692:	inc    esp
  421693:	jb     0x421702
  421695:	mov    dl,0x4e
  421697:	cmp    BYTE PTR [ebp+0x15119bbb],0xe4
  42169e:	call   0xb81cbc17
  4216a3:	outs   dx,BYTE PTR ds:[esi]
  4216a4:	inc    esi
  4216a5:	ret    
  4216a6:	push   0x469b1615
  4216ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216ac:	ror    ch,cl
  4216ae:	inc    eax
  4216af:	inc    esi
  4216b0:	inc    ecx
  4216b1:	mov    esi,0x70f38164
  4216b6:	in     eax,0x53
  4216b8:	and    BYTE PTR [ebx+esi*2+0xa52e75d],ah
  4216bf:	scas   eax,DWORD PTR es:[edi]
  4216c0:	mov    BYTE PTR [ebp+0x51],bl
  4216c3:	cs push es
  4216c5:	nop
  4216c6:	aas    
  4216c7:	mov    esi,0xde18c64f
  4216cc:	adc    ecx,ebp
  4216ce:	jecxz  0x42172d
  4216d0:	or     edx,DWORD PTR [esi]
  4216d2:	in     al,dx
  4216d3:	cli    
  4216d4:	and    bh,cl
  4216d6:	sub    BYTE PTR [esp+ebp*1-0x3e0600a8],0xa7
  4216de:	add    al,0x9
  4216e0:	mov    ch,0x29
  4216e2:	les    eax,FWORD PTR [edx-0x4562629f]
  4216e8:	xor    bl,bh
  4216ea:	and    eax,ebp
  4216ec:	inc    edi
  4216ed:	test   ch,ah
  4216ef:	push   ebx
  4216f0:	dec    ecx
  4216f1:	dec    ecx
  4216f2:	inc    ecx
  4216f3:	xchg   esp,eax
  4216f4:	and    dh,BYTE PTR [eax]
  4216f6:	sub    esp,DWORD PTR cs:0xc307c7ad
  4216fd:	lahf   
  4216fe:	adc    edi,ebx
  421700:	add    bl,BYTE PTR [ecx+0x15]
  421703:	aad    0xcd
  421705:	dec    ebx
  421706:	adc    BYTE PTR [edi],ch
  421708:	mov    bh,BYTE PTR [edx]
  42170a:	ss jecxz 0x4216a4
  42170d:	leave  
  42170e:	adc    DWORD PTR [bx+di-0x6d0c],esp
  421713:	shl    BYTE PTR ds:0x58f44f59,0x8c
  42171a:	(bad)  
  42171c:	mov    eax,0x61c1b4e
  421721:	mov    ?,WORD PTR [bx+di-0x18]
  421725:	push   edx
  421726:	jp     0x421775
  421728:	jb     0x4216f3
  42172a:	inc    esi
  42172b:	push   ebx
  42172c:	push   esp
  42172d:	mov    ds:0x9ef82742,eax
  421732:	add    DWORD PTR [eax-0x19b3eb7f],edx
  421738:	stos   DWORD PTR es:[edi],eax
  421739:	sub    DWORD PTR [eax],ecx
  42173b:	mov    ecx,DWORD PTR [ecx]
  42173d:	xor    dl,bh
  42173f:	std    
  421740:	jmp    0x4216f6
  421742:	fdivr  QWORD PTR [esi-0x73de28e3]
  421748:	test   eax,0xe8c543e7
  42174d:	pop    esp
  42174e:	repnz inc edi
  421750:	dec    eax
  421751:	in     eax,dx
  421752:	pop    edx
  421753:	jae    0x421714
  421755:	cdq    
  421756:	mov    ebp,0xd4cbdac8
  42175b:	mov    al,ds:0x2f9cd866
  421760:	ja     0x4217d8
  421762:	or     DWORD PTR [esi],0x57
  421765:	popf   
  421766:	bnd jae 0x4216f0
  421769:	fcom   DWORD PTR [eax-0x4e60154d]
  42176f:	out    0xa4,eax
  421771:	inc    ebx
  421772:	pop    esi
  421773:	loopne 0x42170c
  421775:	loopne 0x4217ad
  421777:	cs dec esi
  421779:	je     0x421776
  42177b:	inc    ebp
  42177c:	test   eax,0xeacfa87
  421781:	icebp  
  421782:	push   0x2d
  421784:	add    DWORD PTR [edx+0x43],ebp
  421787:	sub    DWORD PTR [ebx*1+0x45993b94],edx
  42178e:	test   edi,esp
  421790:	xchg   ebp,eax
  421791:	les    ecx,FWORD PTR [ecx]
  421793:	push   ecx
  421794:	imul   eax,ecx,0x46c9adf7
  42179a:	cwde   
  42179b:	scas   eax,DWORD PTR es:[edi]
  42179c:	mov    bl,0x77
  42179e:	inc    ebx
  42179f:	inc    ecx
  4217a0:	pop    esi
  4217a1:	call   0x9aada886
  4217a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217a7:	aaa    
  4217a8:	test   eax,0xb7fe4cc8
  4217ad:	fdivr  DWORD PTR [ecx]
  4217af:	mov    bh,0x80
  4217b1:	push   0x649129f1
  4217b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217b7:	or     BYTE PTR [edi-0xd],ah
  4217ba:	retf   0x14f
  4217bd:	mov    esp,ecx
  4217bf:	jmp    0xaaf5cc5a
  4217c4:	es jne 0x421794
  4217c7:	xor    al,0xc0
  4217c9:	jo     0x421802
  4217cb:	mov    ds:0xa182065e,al
  4217d0:	xchg   ebp,eax
  4217d1:	cmp    bh,ah
  4217d3:	jb     0x4217cb
  4217d5:	cmc    
  4217d6:	mov    eax,0x61493d40
  4217db:	cmp    eax,0x6097fbe8
  4217e0:	xchg   ecx,eax
  4217e1:	ror    DWORD PTR [edi-0x80],cl
  4217e4:	leave  
  4217e5:	add    dh,dh
  4217e7:	xchg   esp,eax
  4217e8:	lea    edx,[edi+ebx*2+0x3a]
  4217ec:	popf   
  4217ed:	or     al,0xd9
  4217ef:	cmp    eax,0x11e6a285
  4217f4:	rcr    BYTE PTR [ebp+0x72],1
  4217f7:	clc    
  4217f8:	imul   ebx,DWORD PTR [ecx],0xc6e2b95f
  4217fe:	xlat   BYTE PTR ds:[ebx]
  4217ff:	les    edx,FWORD PTR [edi]
  421801:	ffreep st(5)
  421803:	xor    eax,0xac8ff632
  421808:	int3   
  421809:	(bad)  
  42180a:	sbb    ch,BYTE PTR [edx]
  42180c:	sbb    al,dh
  42180e:	std    
  42180f:	mov    ds:0xb971099e,al
  421814:	push   cs
  421815:	imul   esi,DWORD PTR [edx-0x80],0x7ef1b73e
  42181c:	sub    BYTE PTR [edi],0x22
  42181f:	mov    ah,0xd9
  421821:	arpl   WORD PTR [esi+0x10],cx
  421824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421825:	fdiv   st,st(5)
  421827:	ror    BYTE PTR [edx-0x2680e43b],0xe8
  42182e:	inc    eax
  42182f:	or     eax,0xa0b8dff0
  421834:	mov    ah,0xe6
  421836:	test   DWORD PTR [edx],esi
  421838:	popf   
  421839:	or     dl,bh
  42183b:	jg     0x4218b7
  42183d:	add    BYTE PTR [edx-0x275bc255],bh
  421843:	sar    BYTE PTR ds:0x5226a1c1,0xae
  42184a:	shl    BYTE PTR [edi+0x1f9141bf],0x52
  421851:	lea    ecx,[ebx+0x69c6e622]
  421857:	pop    esp
  421858:	push   ds
  421859:	adc    BYTE PTR [esi+0xc],dl
  42185c:	mov    al,0xa3
  42185e:	neg    DWORD PTR [ecx+0x1a4ce156]
  421864:	imul   esp,DWORD PTR [esi*4+0x48da54a0],0xee75fd36
  42186f:	lahf   
  421870:	into   
  421871:	fld    DWORD PTR [edx+edi*8]
  421874:	mov    edx,es
  421876:	stc    
  421877:	or     edi,ebx
  421879:	mov    bh,BYTE PTR [ebp-0x15]
  42187c:	mov    eax,ds:0xd1a4b640
  421881:	add    DWORD PTR [edx],ecx
  421883:	ss pushf 
  421885:	fwait
  421886:	sbb    esi,edx
  421888:	jl     0x4218e3
  42188a:	sbb    BYTE PTR [esi-0x19652e95],bh
  421890:	rol    DWORD PTR [ecx],1
  421892:	data16 add al,0x9c
  421895:	jmp    0xfb47:0xcd07d8c9
  42189c:	jno    0x42187e
  42189e:	ret    0x5897
  4218a1:	jmp    0x730968f1
  4218a6:	scas   eax,DWORD PTR es:[edi]
  4218a7:	inc    edi
  4218a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218a9:	sub    al,0x80
  4218ab:	fst    QWORD PTR [edx+0x44cd73aa]
  4218b1:	in     al,dx
  4218b2:	add    BYTE PTR [ebx+eax*2],bh
  4218b5:	push   esi
  4218b6:	mov    ecx,0xed91760b
  4218bb:	rol    bh,cl
  4218bd:	dec    esp
  4218be:	xchg   ebx,eax
  4218bf:	and    BYTE PTR [eax-0x62],dh
  4218c2:	jnp    0x421938
  4218c4:	es mov bh,0x67
  4218c7:	repz call 0x2944406
  4218cd:	xchg   ecx,eax
  4218ce:	outs   dx,DWORD PTR ds:[esi]
  4218cf:	jg     0x421949
  4218d1:	and    DWORD PTR [edx],esp
  4218d3:	fidiv  DWORD PTR [ebx]
  4218d5:	cli    
  4218d6:	(bad)  
  4218d7:	shl    DWORD PTR [edx+0x4cd614e1],cl
  4218dd:	retf   0xc738
  4218e0:	test   al,0x44
  4218e2:	jmp    0x48cbf764
  4218e7:	sbb    eax,0x5907d73a
  4218ec:	jb     0x4218ab
  4218ee:	ror    bl,0x63
  4218f1:	clc    
  4218f2:	mov    cl,0xf4
  4218f4:	imul   ebx,ebx,0x6d5171e2
  4218fa:	in     eax,0x8c
  4218fc:	mov    dh,0x4a
  4218fe:	or     DWORD PTR [esi-0x4],0x9d695be5
  421905:	retf   
  421906:	pop    ds
  421907:	loopne 0x42190f
  421909:	(bad)  [ebx-0x6d]
  42190c:	mov    ebp,0xe8eae497
  421911:	add    ah,BYTE PTR [eax]
  421913:	or     al,0x37
  421915:	rcr    DWORD PTR [esi+0x2a7c8bf6],cl
  42191b:	into   
  42191c:	aad    0xb8
  42191e:	sbb    eax,0x2152bb0
  421923:	pop    ss
  421924:	out    0x94,eax
  421926:	inc    ebx
  421927:	ins    BYTE PTR es:[edi],dx
  421928:	lds    ebx,FWORD PTR [eax-0x4ee35148]
  42192e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42192f:	stos   DWORD PTR es:[edi],eax
  421930:	or     eax,0x76a296e3
  421935:	sub    al,0x19
  421937:	aad    0xf2
  421939:	pop    es
  42193a:	dec    esp
  42193b:	cmp    al,0x28
  42193d:	dec    ebx
  42193e:	dec    esp
  42193f:	ficomp DWORD PTR [ebx]
  421941:	enter  0xd569,0xa2
  421945:	xor    esp,DWORD PTR [edi-0x28]
  421948:	jne    0x421972
  42194a:	cmp    eax,0x1cb2e426
  42194f:	lods   al,BYTE PTR ds:[esi]
  421950:	imul   edi,DWORD PTR [ebp-0x58],0x9d5bb883
  421957:	mov    dl,0x78
  421959:	or     ebx,DWORD PTR [edi+0x42]
  42195c:	je     0x421951
  42195e:	into   
  42195f:	mov    ebx,0xb29dca52
  421964:	fs test ch,dh
  421967:	not    DWORD PTR [ecx+0x1e]
  42196a:	push   ds
  42196b:	int3   
  42196c:	cmp    eax,0xbd4af561
  421971:	jo     0x421972
  421973:	jge    0x4219d5
  421975:	add    al,0xd7
  421977:	and    bl,BYTE PTR [edi+0x13]
  42197a:	mov    ds:0x70d6c064,al
  42197f:	jp     0x421970
  421981:	and    ebp,DWORD PTR [edx-0x109b4309]
  421987:	jbe    0x4219f3
  421989:	lahf   
  42198a:	stc    
  42198b:	aad    0x8b
  42198d:	outs   dx,DWORD PTR ds:[esi]
  42198e:	ins    DWORD PTR es:[edi],dx
  42198f:	lods   eax,DWORD PTR ds:[esi]
  421990:	cmc    
  421991:	push   cs
  421992:	sub    DWORD PTR ds:0x9916d2c1,ecx
  421998:	mov    dl,0x14
  42199a:	imul   eax,DWORD PTR [esi],0x582c3065
  4219a0:	pop    ecx
  4219a1:	dec    esp
  4219a2:	ret    0xfaae
  4219a5:	call   0xb107f735
  4219aa:	cmp    eax,0xc2071d32
  4219af:	xchg   ecx,eax
  4219b0:	sbb    al,0x23
  4219b2:	jmp    DWORD PTR [eax]
  4219b4:	out    dx,al
  4219b5:	stos   BYTE PTR es:[edi],al
  4219b6:	mov    ebx,0xf8783ca
  4219bb:	add    edi,DWORD PTR [ecx+0x3a]
  4219be:	iretw  
  4219c0:	fld    DWORD PTR [esi+0x51d3bfb2]
  4219c6:	iret   
  4219c7:	push   esi
  4219c8:	iret   
  4219c9:	pop    edx
  4219ca:	es xchg ebx,eax
  4219cc:	or     edx,ebx
  4219ce:	and    DWORD PTR [edi+0x72d66e46],eax
  4219d4:	pop    eax
  4219d5:	sbb    eax,0x49ef37e2
  4219da:	int    0xcc
  4219dc:	xchg   esp,eax
  4219dd:	sub    BYTE PTR [edx-0xc63e3dc],bl
  4219e3:	jmp    0x70ce0c24
  4219e8:	js     0x421977
  4219ea:	leave  
  4219eb:	xchg   BYTE PTR [ebx],bh
  4219ed:	inc    edx
  4219ee:	dec    ebp
  4219ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219f0:	leave  
  4219f1:	or     ecx,eax
  4219f3:	adc    eax,0xb08b38d9
  4219f8:	dec    eax
  4219f9:	repz push edx
  4219fb:	loope  0x421a04
  4219fd:	scas   al,BYTE PTR es:[edi]
  4219fe:	scas   al,BYTE PTR es:[edi]
  4219ff:	sub    ah,BYTE PTR [edi+0x27b4e3e6]
  421a05:	rol    DWORD PTR [edx+0x6d3ce65b],cl
  421a0b:	fdivr  QWORD PTR [esi-0x5121d275]
  421a11:	daa    
  421a12:	inc    esi
  421a13:	(bad)  
  421a16:	sub    dl,BYTE PTR [eax+0x14]
  421a19:	mov    dh,0xdc
  421a1b:	push   esp
  421a1c:	iret   
  421a1d:	adc    bh,BYTE PTR [edx]
  421a1f:	jmp    0x9356c191
  421a24:	callw  0x272d
  421a28:	mov    ah,0xd2
  421a2a:	adc    esi,DWORD PTR [edi+edi*2]
  421a2d:	mov    ds:0xc47e1b70,al
  421a32:	iret   
  421a33:	sbb    BYTE PTR [edi],dl
  421a35:	mov    ds:0x2224d36,eax
  421a3a:	lock cmp bl,bh
  421a3d:	aaa    
  421a3e:	lods   eax,DWORD PTR ds:[esi]
  421a3f:	(bad)  
  421a40:	dec    esp
  421a41:	(bad)  
  421a42:	cmc    
  421a43:	popf   
  421a44:	stos   BYTE PTR es:[edi],al
  421a45:	retf   0x39c
  421a48:	ds fwait
  421a4a:	jnp    0x421a71
  421a4c:	jecxz  0x4219eb
  421a4e:	jb     0x421abf
  421a50:	sti    
  421a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a52:	xchg   ebp,eax
  421a53:	sbb    ch,BYTE PTR [edx]
  421a55:	push   ecx
  421a56:	adc    DWORD PTR [edx],esp
  421a58:	retf   
  421a59:	outs   dx,BYTE PTR ds:[esi]
  421a5a:	push   esp
  421a5b:	test   eax,0x9b7104e6
  421a60:	adc    esp,DWORD PTR [ebp+0x6c20313b]
  421a66:	mov    ah,0x0
  421a68:	xchg   ecx,eax
  421a69:	outs   dx,DWORD PTR ds:[esi]
  421a6a:	cmp    eax,0xaf5e7ff9
  421a6f:	push   edi
  421a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a71:	stos   BYTE PTR es:[edi],al
  421a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a73:	ret    0xd86
  421a76:	call   0xbe590ee2
  421a7b:	mov    ah,BYTE PTR [edi+0x2d]
  421a7e:	icebp  
  421a7f:	mov    dl,BYTE PTR [edi]
  421a81:	sub    eax,0x808b013a
  421a86:	lds    edi,FWORD PTR [ebx+eiz*4+0x4]
  421a8a:	push   edi
  421a8b:	ret    
  421a8c:	lds    ebx,FWORD PTR [ebx]
  421a8e:	enter  0xe0c9,0x4e
  421a92:	addr16 mov bl,0x12
  421a95:	or     al,0x30
  421a97:	mov    eax,ds:0xe76c37ca
  421a9c:	loope  0x421adc
  421a9e:	cmc    
  421a9f:	and    eax,eax
  421aa1:	sub    eax,DWORD PTR [ebx+0x2c]
  421aa4:	addr16 ja 0x421b12
  421aa7:	addr16 pop ecx
  421aa9:	mov    bl,cl
  421aab:	ret    
  421aac:	xchg   edx,eax
  421aad:	rol    DWORD PTR [edx],cl
  421aaf:	popa   
  421ab0:	mov    edi,0xf1bfb5a8
  421ab5:	push   ebx
  421ab6:	jbe    0x421a4b
  421ab8:	sbb    eax,0x371f01c3
  421abd:	repz bound ebx,QWORD PTR [eax]
  421ac0:	and    DWORD PTR [edi+ecx*1+0x78],0x7
  421ac5:	sub    ecx,esi
  421ac7:	xor    DWORD PTR [ecx+0x31],esp
  421aca:	out    dx,al
  421acb:	mov    dh,BYTE PTR [esi]
  421acd:	mov    ds:0x34157016,al
  421ad2:	bound  esi,QWORD PTR [edi+0x35f1c562]
  421ad8:	sahf   
  421ad9:	outs   dx,DWORD PTR ds:[esi]
  421ada:	test   al,0xb3
  421adc:	stos   DWORD PTR es:[edi],eax
  421add:	fcomp  QWORD PTR [edx+0x47]
  421ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ae1:	inc    esp
  421ae2:	ins    BYTE PTR es:[edi],dx
  421ae3:	sbb    DWORD PTR [esi+ecx*2+0x1de9699e],0xd0c104b3
  421aee:	fnstenv [esi+0x6d]
  421af1:	sbb    BYTE PTR [edi-0x28],0xb8
  421af5:	mov    ds:0xf8bf74dc,eax
  421afa:	xchg   esp,eax
  421afb:	sar    dh,0x28
  421afe:	or     ebp,esp
  421b00:	mov    cl,0xa4
  421b02:	xchg   DWORD PTR [eax],ecx
  421b04:	test   eax,0xef24d2c8
  421b09:	(bad)  
  421b0a:	nop
  421b0b:	sbb    BYTE PTR [eiz*1-0x1ea218b7],0x3b
  421b13:	cli    
  421b14:	sub    DWORD PTR [esi],esp
  421b16:	mov    ?,eax
  421b18:	in     al,dx
  421b19:	pop    eax
  421b1a:	add    DWORD PTR [edi+0x60],ebp
  421b1d:	dec    ebp
  421b1e:	or     BYTE PTR [ebx],ch
  421b20:	xor    al,0x48
  421b22:	add    edi,0xffffffff
  421b25:	adc    esp,DWORD PTR [edi+0x22ec149b]
  421b2b:	xor    BYTE PTR [ecx+0x21],cl
  421b2e:	les    esi,FWORD PTR [esp+esi*1+0x546d19fc]
  421b35:	sbb    al,BYTE PTR fs:[eax]
  421b38:	sbb    BYTE PTR [edi],ah
  421b3a:	test   eax,0xedf6ee61
  421b3f:	add    edi,DWORD PTR [ecx]
  421b41:	imul   DWORD PTR [eax+0xc]
  421b44:	neg    DWORD PTR [esi-0x75dc2327]
  421b4a:	dec    esi
  421b4b:	popa   
  421b4c:	lods   eax,DWORD PTR ds:[esi]
  421b4d:	jo     0x421b4b
  421b4f:	mov    edi,0xa37340ca
  421b54:	ins    BYTE PTR es:[edi],dx
  421b55:	mov    BYTE PTR [eax],ch
  421b57:	push   ds
  421b58:	and    bl,al
  421b5a:	adc    ch,BYTE PTR [ebx+0xf5438c9]
  421b60:	jnp    0x421b69
  421b62:	repnz cmp al,0xe8
  421b65:	jno    0x421bd0
  421b67:	fistp  QWORD PTR [ebp+0x389b536c]
  421b6d:	adc    ah,BYTE PTR [ecx]
  421b6f:	out    dx,al
  421b70:	push   0x9
  421b72:	retf   0xbaba
  421b75:	add    eax,0x32cc3b1a
  421b7a:	push   edi
  421b7b:	and    BYTE PTR [esi-0x24],ah
  421b7e:	xchg   edx,eax
  421b7f:	add    DWORD PTR ds:0xa813d855,edx
  421b85:	dec    eax
  421b86:	out    0xb9,eax
  421b88:	loopne 0x421bf1
  421b8a:	std    
  421b8b:	in     eax,dx
  421b8c:	fmul   DWORD PTR [ebx]
  421b8e:	pop    ds
  421b8f:	retf   0x6f2e
  421b92:	jae    0x421b44
  421b94:	inc    esp
  421b95:	push   es
  421b96:	sahf   
  421b97:	mov    ebp,0x706e8fb
  421b9c:	mov    ds,WORD PTR [esi+esi*2]
  421b9f:	shr    BYTE PTR [edx-0xac3b947],cl
  421ba5:	push   ebx
  421ba6:	cmp    al,0x8f
  421ba8:	jbe    0x421b73
  421baa:	add    eax,0xd68e8073
  421baf:	mov    ch,0x22
  421bb1:	arpl   bx,bx
  421bb3:	jmp    0x28495dc3
  421bb8:	push   0x2f2ae2a5
  421bbd:	fisttp WORD PTR cs:[edx+0x3d988e71]
  421bc4:	xchg   DWORD PTR [eax+0x2cdffa11],edi
  421bca:	mov    edx,?
  421bcc:	dec    edx
  421bcd:	push   ebx
  421bce:	mov    ds:0xd0782900,eax
  421bd3:	es inc esi
  421bd5:	or     al,0xc7
  421bd7:	(bad)  
  421bd8:	mov    dh,0xb6
  421bda:	inc    ebp
  421bdb:	inc    ebx
  421bdc:	jg     0x421c4b
  421bde:	rcl    DWORD PTR [ebx-0x249e2520],1
  421be4:	dec    ecx
  421be5:	pop    ecx
  421be6:	jb     0x421c60
  421be8:	mov    ah,0x7f
  421bea:	mov    bl,0x7a
  421bec:	es sti 
  421bee:	fild   QWORD PTR [ecx-0x2ac664d7]
  421bf4:	gs pop es
  421bf6:	int3   
  421bf7:	fsubp  st(5),st
  421bf9:	mov    ds:0x2e8dc38c,al
  421bfe:	mov    esi,0x6a9aeb14
  421c03:	push   edi
  421c04:	xchg   DWORD PTR [ebp+0x6bf9bf6c],edx
  421c0a:	dec    esp
  421c0b:	sbb    DWORD PTR [edx-0x4],ecx
  421c0e:	int3   
  421c0f:	mov    ds:0x5c0d523c,al
  421c14:	call   0xa231:0x3aac1e36
  421c1b:	call   0x35ef0e5a
  421c20:	mov    eax,ds:0x1d2b6813
  421c25:	scas   eax,DWORD PTR es:[edi]
  421c26:	std    
  421c27:	mov    esp,0x1bf2c011
  421c2c:	loope  0x421be2
  421c2e:	pusha  
  421c2f:	scas   eax,DWORD PTR es:[edi]
  421c30:	pop    ss
  421c31:	push   es
  421c32:	xchg   ecx,eax
  421c33:	cmp    BYTE PTR [esi],0x73
  421c36:	sbb    dl,BYTE PTR [edx+ebp*8-0x17]
  421c3a:	cmp    BYTE PTR [esi+eiz*1-0x5d96384d],al
  421c41:	mov    eax,DWORD PTR [edx-0x1965a164]
  421c47:	scas   eax,DWORD PTR es:[edi]
  421c48:	and    eax,0xdf3ccc5a
  421c4d:	pop    ebx
  421c4e:	cwde   
  421c4f:	and    bl,BYTE PTR [esi-0x27b860cf]
  421c55:	and    ebx,ecx
  421c57:	and    bh,BYTE PTR [edx-0x5660150c]
  421c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c5e:	mov    cl,0x85
  421c60:	xchg   BYTE PTR ds:0xaca06fe7,ch
  421c66:	or     ecx,DWORD PTR [ebx]
  421c68:	jmp    0xb8fb:0x5652b7de
  421c6f:	cwde   
  421c70:	das    
  421c71:	cmp    eax,0x8a3e70e2
  421c76:	loope  0x421c18
  421c78:	cli    
  421c79:	xlat   BYTE PTR ds:[ebx]
  421c7a:	mov    gs,WORD PTR [eax-0x5699754]
  421c80:	fild   DWORD PTR [edi]
  421c82:	cmp    ebp,esi
  421c84:	mov    dl,0xa4
  421c86:	push   eax
  421c87:	pop    eax
  421c88:	out    0xc7,eax
  421c8a:	fnsave [edx+ebx*4]
  421c8d:	mov    edi,0xefdf849
  421c92:	jbe    0x421ced
  421c94:	pusha  
  421c95:	adc    BYTE PTR [ebx],0x2e
  421c98:	push   esi
  421c99:	lods   al,BYTE PTR ds:[esi]
  421c9a:	ss push es
  421c9c:	xchg   esp,eax
  421c9d:	jl     0x421c5d
  421c9f:	xor    eax,0x8f06b7ce
  421ca4:	call   0xc50a9ef9
  421ca9:	lods   al,BYTE PTR ds:[esi]
  421caa:	mov    eax,ds:0x93c55b8f
  421caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cb0:	sar    DWORD PTR [ebx],1
  421cb2:	sub    ecx,DWORD PTR ds:0xb8695b58
  421cb8:	shl    al,1
  421cba:	hlt    
  421cbb:	xchg   edx,eax
  421cbc:	mov    dl,0x2b
  421cbe:	addr16 push cs
  421cc0:	aam    0xc8
  421cc2:	jl     0x421ce9
  421cc4:	xor    esp,eax
  421cc6:	dec    edx
  421cc7:	sbb    DWORD PTR [ecx],edi
  421cc9:	mov    eax,ds:0xadc8a3ee
  421cce:	cmp    DWORD PTR [ecx+0x75],0xfffffffc
  421cd2:	mov    ecx,0xf10c66e6
  421cd7:	hlt    
  421cd8:	sbb    BYTE PTR [ecx],0xec
  421cdb:	add    cl,BYTE PTR ds:0xf03906ed
  421ce1:	inc    ebp
  421ce2:	mov    bl,0xea
  421ce4:	mov    edi,0x4d34e047
  421ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cea:	mov    cl,0x16
  421cec:	aam    0x6c
  421cee:	pop    ebp
  421cef:	sahf   
  421cf0:	jecxz  0x421cbc
  421cf2:	test   DWORD PTR [eax+0x68],ebp
  421cf5:	inc    ecx
  421cf6:	mov    esi,0x15016bdb
  421cfb:	call   0x881dfc8e
  421d00:	sub    BYTE PTR [edi-0x7],0x2a
  421d04:	das    
  421d05:	jp     0x421ceb
  421d07:	cs dec edx
  421d09:	(bad)  
  421d0a:	in     al,dx
  421d0b:	int3   
  421d0c:	pmaddwd mm7,QWORD PTR [eax]
  421d0f:	leave  
  421d10:	xor    BYTE PTR [ebp+0x24bfd8cb],dh
  421d16:	hlt    
  421d17:	lods   eax,DWORD PTR ds:[esi]
  421d18:	pop    ebx
  421d19:	dec    esp
  421d1a:	aas    
  421d1b:	adc    bl,BYTE PTR [edi-0x66432d2a]
  421d21:	jle    0x421d38
  421d23:	xchg   DWORD PTR [edx-0x33ba89c],esi
  421d29:	out    0xb,eax
  421d2b:	inc    edx
  421d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d2d:	(bad)  
  421d2e:	add    eax,0x8544fd43
  421d33:	and    bl,BYTE PTR [edi-0x4a9599cd]
  421d39:	or     BYTE PTR [edx+edi*1-0x6e90d400],0x98
  421d41:	dec    edi
  421d42:	push   cs
  421d43:	xlat   BYTE PTR ds:[ebx]
  421d44:	cmp    BYTE PTR [edx+ebp*2],bh
  421d47:	push   0xffffff8a
  421d49:	data16 fldcw WORD PTR [eax-0x67f8544c]
  421d50:	and    ebx,edx
  421d52:	dec    edx
  421d53:	cmp    al,ch
  421d55:	cmp    BYTE PTR [edi+esi*2+0x7e66af70],0xec
  421d5d:	inc    esp
  421d5e:	mov    ebp,0x3be6f089
  421d63:	mov    ds:0x6c79e8c9,eax
  421d68:	rol    DWORD PTR [ebx-0x22ff2dcd],1
  421d6e:	repnz cmp BYTE PTR [edx-0x37],ch
  421d72:	mov    al,ds:0xaad483b3
  421d77:	(bad)  
  421d78:	ss out dx,eax
  421d7a:	xchg   edx,eax
  421d7b:	and    BYTE PTR [edx+0x3bafafa7],bh
  421d81:	int    0x3a
  421d83:	mov    bl,0x9e
  421d85:	or     eax,0x98bd049e
  421d8a:	lds    ebx,FWORD PTR ds:0x8bc091bd
  421d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d91:	jne    0x421dd3
  421d93:	stos   DWORD PTR es:[edi],eax
  421d94:	rcr    DWORD PTR [edx-0x34],0xf1
  421d98:	add    al,BYTE PTR [ecx]
  421d9a:	in     al,dx
  421d9b:	and    edi,DWORD PTR [ebp+0x7e]
  421d9e:	out    0x98,eax
  421da0:	add    eax,0xc1ab2bde
  421da6:	mov    edx,0xfcb4cb07
  421dab:	jns    0x421e20
  421dad:	mov    dh,BYTE PTR [edi]
  421daf:	icebp  
  421db0:	repz adc al,0x21
  421db3:	shl    DWORD PTR [ecx+eax*8+0x68bc308a],0x56
  421dbb:	sti    
  421dbc:	icebp  
  421dbd:	rcl    DWORD PTR [eax],0xbe
  421dc0:	scas   al,BYTE PTR es:[edi]
  421dc1:	cmp    al,0x2b
  421dc3:	inc    esp
  421dc4:	jmp    0xb821:0xeda5fd52
  421dcb:	sbb    esi,esi
  421dcd:	out    dx,al
  421dce:	imul   ebx,edx,0x3c4a8c65
  421dd4:	mov    ebp,0x439ffba3
  421dd9:	mov    ecx,0xb5e3b25b
  421dde:	jno    0x421de4
  421de0:	popfw  
  421de2:	push   ebp
  421de3:	js     0x421de1
  421de5:	pop    ecx
  421de6:	or     BYTE PTR [eax+0x7f1b6b60],bh
  421dec:	xchg   DWORD PTR [edi+0x7f85c506],ebp
  421df2:	push   cs
  421df3:	or     BYTE PTR [ebx+0x72],bh
  421df6:	jmp    0x421e16
  421df8:	shr    BYTE PTR [esi+0x69],cl
  421dfb:	shl    BYTE PTR [esi+0x1a7fa358],0xb0
  421e02:	das    
  421e03:	sbb    eax,0xb0f52f4b
  421e08:	ror    DWORD PTR [ebp-0x229d2f46],cl
  421e0e:	xor    edi,0x4f
  421e11:	inc    ebx
  421e12:	push   es
  421e13:	inc    eax
  421e14:	loopne 0x421de3
  421e16:	add    ecx,ecx
  421e18:	sti    
  421e19:	push   edi
  421e1a:	cli    
  421e1b:	cmp    al,BYTE PTR [edx+0x64]
  421e1e:	inc    ebp
  421e1f:	xor    al,0x9d
  421e21:	icebp  
  421e22:	loope  0x421dec
  421e24:	sti    
  421e25:	mov    cl,BYTE PTR cs:[eax-0x25]
  421e29:	dec    ebp
  421e2a:	and    bl,al
  421e2c:	mov    al,ds:0xa5a244d6
  421e31:	sub    al,0x8c
  421e33:	addr16 push eax
  421e35:	(bad)  
  421e36:	js     0x421e8c
  421e38:	cmp    BYTE PTR [edi-0x40],0x7b
  421e3c:	adc    al,ch
  421e3e:	xchg   esp,eax
  421e3f:	clc    
  421e40:	push   ebp
  421e41:	test   BYTE PTR [esi+0x739858c3],0xdb
  421e48:	inc    esi
  421e49:	lahf   
  421e4a:	jmp    0x421e4e
  421e4c:	lahf   
  421e4d:	mov    ch,BYTE PTR [edx-0x45]
  421e50:	pop    esp
  421e51:	inc    ebx
  421e52:	in     eax,dx
  421e53:	push   es
  421e54:	arpl   ax,sp
  421e56:	int    0x5f
  421e58:	xor    ebp,ebx
  421e5a:	sahf   
  421e5b:	jmp    0x421e75
  421e5d:	xchg   esi,eax
  421e5e:	jbe    0x421e70
  421e60:	jmp    0x421dea
  421e62:	mov    al,0x1f
  421e64:	jmp    0xcd9c:0x35d2aaf1
  421e6b:	mov    ebx,0x3f30f5c8
  421e70:	rcl    BYTE PTR [edi-0x20],1
  421e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e74:	cmp    ch,BYTE PTR [esi]
  421e76:	mov    fs,WORD PTR [eax-0x68]
  421e79:	retf   
  421e7a:	push   eax
  421e7b:	dec    edi
  421e7c:	retf   
  421e7d:	fxch   st(3)
  421e7f:	or     esi,ebp
  421e81:	fisub  DWORD PTR [eax-0x60]
  421e84:	mov    BYTE PTR [esp+edi*1-0x4e],bl
  421e88:	fwait
  421e89:	scas   eax,DWORD PTR es:[edi]
  421e8a:	mov    ah,0xc2
  421e8c:	pop    ecx
  421e8d:	mov    al,0x25
  421e8f:	mov    esi,DWORD PTR ds:0x58ddf849
  421e95:	(bad)  
  421e96:	in     ax,0xd0
  421e99:	(bad)  
  421e9a:	mov    al,ds:0x6cadfb69
  421e9f:	jp     0x421e34
  421ea1:	rcr    DWORD PTR [edi+0x6c],cl
  421ea4:	ins    BYTE PTR es:[edi],dx
  421ea5:	retf   0x871
  421ea8:	bound  edx,QWORD PTR ds:0xff6a6833
  421eae:	inc    edi
  421eaf:	pop    esp
  421eb0:	mov    cl,0x22
  421eb2:	rcr    BYTE PTR [esi],1
  421eb4:	frstor [edx-0x25]
  421eb7:	inc    esi
  421eb8:	adc    BYTE PTR [esi-0x1630ff49],cl
  421ebe:	dec    ebx
  421ebf:	mov    ebp,0xf5ecc97e
  421ec4:	hlt    
  421ec5:	icebp  
  421ec6:	scas   eax,DWORD PTR es:[edi]
  421ec7:	sahf   
  421ec8:	mov    esp,0x733bc380
  421ecd:	int    0x93
  421ecf:	jmp    0x2d02:0x51197cc5
  421ed6:	jle    0x421edb
  421ed8:	in     eax,0xfc
  421eda:	push   ds
  421edb:	adc    ebx,DWORD PTR [edi]
  421edd:	jp     0x421f35
  421edf:	jb     0x421ebf
  421ee1:	loope  0x421ef6
  421ee3:	stos   BYTE PTR es:[edi],al
  421ee4:	into   
  421ee5:	cld    
  421ee6:	push   eax
  421ee7:	scas   eax,DWORD PTR es:[edi]
  421ee8:	cmp    BYTE PTR [eax+0x7],ah
  421eeb:	out    dx,al
  421eec:	popa   
  421eed:	mov    cl,0x66
  421eef:	cmp    DWORD PTR [ebp+ecx*8-0x18],0x57
  421ef4:	les    esi,FWORD PTR [ebx]
  421ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ef7:	or     edi,DWORD PTR [esi-0x6f]
  421efa:	adc    al,0x62
  421efc:	imul   edi,DWORD PTR [eax+esi*4],0xec1452d6
  421f03:	lea    ecx,[edx+edi*2+0x321e46e0]
  421f0a:	aas    
  421f0b:	loopne 0x421f4a
  421f0d:	(bad)  
  421f0e:	sbb    al,0x17
  421f10:	inc    ecx
  421f11:	xrelease xchg BYTE PTR [edx],dl
  421f14:	add    DWORD PTR [esi-0x4d9b481e],esi
  421f1a:	mov    eax,ds:0x78438a09
  421f1f:	push   es
  421f20:	fbld   TBYTE PTR [ecx+ecx*4-0x49]
  421f24:	jmp    0x7f1e32aa
  421f29:	(bad)  
  421f2a:	pop    esp
  421f2b:	add    al,0xb2
  421f2d:	jae    0x421ee0
  421f2f:	pop    edx
  421f30:	and    bl,BYTE PTR [edi+ecx*4+0x33228927]
  421f37:	popa   
  421f38:	or     al,0x8
  421f3a:	and    DWORD PTR [edi],esi
  421f3c:	neg    DWORD PTR [edx+0x3a0fc18f]
  421f42:	call   0x81ac86bc
  421f47:	dec    esi
  421f48:	sti    
  421f49:	pushf  
  421f4a:	dec    edi
  421f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f4c:	and    BYTE PTR gs:[eax-0x32d265cf],cl
  421f53:	xchg   ecx,eax
  421f54:	or     bh,BYTE PTR [ebx-0x77]
  421f57:	in     eax,0xb0
  421f59:	adc    dl,BYTE PTR [edi-0x24]
  421f5c:	retf   
  421f5d:	les    esp,FWORD PTR [edx-0x2ed0e9d]
  421f63:	inc    ebx
  421f64:	vpcmpgtb ymm0,ymm5,YMMWORD PTR [edi]
  421f68:	stos   BYTE PTR es:[edi],al
  421f69:	jbe    0x421efa
  421f6b:	add    eax,0x91756e21
  421f70:	div    BYTE PTR [ebx-0x40]
  421f73:	push   esi
  421f74:	xor    ebp,ebp
  421f76:	mov    cs,WORD PTR [eax]
  421f78:	add    edi,eax
  421f7a:	dec    eax
  421f7b:	dec    ebx
  421f7c:	fwait
  421f7d:	inc    ebx
  421f7e:	mov    edx,0xc07cf385
  421f83:	out    0x63,al
  421f85:	in     eax,dx
  421f86:	rol    DWORD PTR [esi+eiz*8],cl
  421f89:	nop
  421f8a:	mov    esi,0xef7e899a
  421f8f:	mov    eax,ds:0xe952facc
  421f94:	outs   dx,DWORD PTR ds:[esi]
  421f95:	fmul   QWORD PTR [ebp+0x56]
  421f98:	mov    ds:0x20fae3e6,al
  421f9d:	mov    edx,0x11a48e91
  421fa2:	int    0x71
  421fa4:	in     al,dx
  421fa5:	in     al,0x60
  421fa7:	in     eax,0xf6
  421fa9:	(bad)  
  421fab:	icebp  
  421fac:	inc    ebp
  421fad:	nop    DWORD PTR [ecx-0x22d7ab1]
  421fb4:	xchg   esi,eax
  421fb5:	sub    bl,BYTE PTR [ebp+0x7d]
  421fb8:	or     al,0xa1
  421fba:	or     DWORD PTR [esi+0x7a],esp
  421fbd:	add    ebp,DWORD PTR [ebp+0x8c207c0]
  421fc3:	and    DWORD PTR [eax],esp
  421fc5:	sbb    BYTE PTR [edx+0x72e054b5],al
  421fcb:	test   al,0x86
  421fcd:	mov    edx,0xe72fc2e
  421fd2:	push   es
  421fd3:	addr16 cmp ah,al
  421fd6:	adc    dl,al
  421fd8:	js     0x421f75
  421fda:	fdiv   st,st(1)
  421fdc:	mov    dl,0xf7
  421fde:	and    DWORD PTR [esi+0x68],esi
  421fe1:	iret   
  421fe2:	and    bl,BYTE PTR [esi]
  421fe4:	cmp    DWORD PTR [eax+0x10],edx
  421fe7:	inc    edx
  421fe8:	adc    al,0x98
  421fea:	rol    BYTE PTR [ebp+0x76],0x79
  421fee:	rcr    DWORD PTR [edi],cl
  421ff0:	jbe    0x422013
  421ff2:	std    
  421ff3:	sbb    BYTE PTR [edx],ah
  421ff5:	fcomp  QWORD PTR [edi+0x3f1552fb]
  421ffb:	fcomp  QWORD PTR [edi]
  421ffd:	sar    BYTE PTR [edx-0x42953682],cl
  422003:	in     eax,0xc1
  422005:	ficomp WORD PTR [eax]
  422007:	lea    ebx,[ebx+0x7e]
  42200a:	mov    gs,WORD PTR [esi-0xfda839c]
  422010:	pop    edi
  422011:	mov    ds:0xb06673a4,eax
  422016:	retf   
  422017:	pop    ds
  422018:	test   al,0xca
  42201a:	gs ret 
  42201c:	shl    BYTE PTR [esi],cl
  42201e:	dec    ecx
  42201f:	xor    bl,dh
  422021:	mov    eax,0x90d0196e
  422026:	push   edx
  422027:	push   ebp
  422028:	push   0x38b0495b
  42202d:	sti    
  42202e:	or     al,0xba
  422030:	loopne 0x422063
  422032:	lock (bad) 
  422034:	out    dx,al
  422035:	ss hlt 
  422037:	arpl   WORD PTR [edx-0x7285b7d7],cx
  42203d:	sbb    esi,DWORD PTR [ebp+0x26]
  422040:	pop    ecx
  422041:	pop    ecx
  422042:	xor    edx,DWORD PTR [eax+0x1de1e9e1]
  422048:	add    ebp,DWORD PTR [ecx-0x19]
  42204b:	ds int3 
  42204d:	or     eax,0xc19adac2
  422052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422053:	not    DWORD PTR [ebp+0x27]
  422056:	pop    ebp
  422057:	into   
  422058:	pop    edx
  422059:	enter  0xe13c,0xad
  42205d:	xchg   ebp,eax
  42205e:	stos   BYTE PTR es:[edi],al
  42205f:	mul    BYTE PTR [edx+0x7a]
  422062:	popf   
  422063:	test   BYTE PTR [esi-0x7066e229],bh
  422069:	xlat   BYTE PTR ds:[ebx]
  42206a:	push   0xfffffffc
  42206c:	dec    edx
  42206d:	inc    ebp
  42206e:	cmp    DWORD PTR [eax],0xffffff8e
  422071:	fild   DWORD PTR [edi-0x1b35b499]
  422077:	leave  
  422078:	sahf   
  422079:	aas    
  42207a:	jl     0x4220af
  42207c:	fs mov eax,0xd4121679
  422082:	push   eax
  422083:	ja     0x422007
  422085:	jnp    0x422016
  422087:	or     DWORD PTR [eax+0x56],edi
  42208a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42208b:	push   ebx
  42208c:	in     al,dx
  42208d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42208e:	into   
  42208f:	test   eax,0x4917a035
  422094:	aas    
  422095:	mov    ebp,0x5a77284e
  42209a:	out    dx,eax
  42209b:	push   ebp
  42209c:	dec    esp
  42209d:	(bad)  
  42209e:	push   0xfffffffd
  4220a0:	in     eax,dx
  4220a1:	out    dx,eax
  4220a2:	aaa    
  4220a3:	dec    ebx
  4220a4:	pop    es
  4220a5:	(bad)  
  4220a6:	idiv   BYTE PTR ds:[ebx]
  4220a9:	mov    eax,DWORD PTR ds:0xd1a376d0
  4220af:	cs std 
  4220b1:	xchg   ecx,eax
  4220b2:	push   0xfffffff8
  4220b4:	lahf   
  4220b5:	jg     0x4220f9
  4220b7:	xor    al,0x1a
  4220b9:	jb     0x422135
  4220bb:	inc    edx
  4220bc:	aas    
  4220bd:	push   ss
  4220be:	fisub  DWORD PTR [esi]
  4220c0:	push   ds
  4220c1:	add    al,0x97
  4220c3:	pop    esp
  4220c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220c5:	mov    eax,ds:0x9ca47adc
  4220ca:	and    ebx,DWORD PTR [esi+0x1cb205cf]
  4220d0:	push   edx
  4220d1:	add    al,0xc8
  4220d3:	inc    esi
  4220d4:	stos   BYTE PTR es:[edi],al
  4220d5:	out    0xa,al
  4220d7:	cwde   
  4220d8:	(bad)  
  4220d9:	std    
  4220da:	dec    esi
  4220db:	cdq    
  4220dc:	fs pop ds
  4220de:	pop    edx
  4220df:	(bad)  
  4220e1:	or     eax,0xb3491ace
  4220e6:	jg     0x42214b
  4220e8:	sti    
  4220e9:	adc    esp,esp
  4220eb:	push   0xffffff91
  4220ed:	imul   esi,ebx,0x4e
  4220f0:	pop    esp
  4220f1:	rol    BYTE PTR [esi],cl
  4220f3:	test   DWORD PTR [edi-0x44],eax
  4220f6:	jmp    0xccc7:0xa4187ebc
  4220fd:	(bad)  
  4220fe:	fisttp QWORD PTR ds:0x63ce2f
  422104:	xor    al,0xb7
  422106:	adc    BYTE PTR [ecx-0x36e54038],cl
  42210c:	lock jno 0x422090
  42210f:	lds    ecx,FWORD PTR [esi]
  422111:	xchg   ebx,eax
  422112:	mov    esi,0x790dc4ed
  422117:	jnp    0x4220dd
  422119:	push   0xffffffec
  42211b:	ja     0x422193
  42211d:	out    0xbf,al
  42211f:	mov    esp,0x7202a753
  422124:	aad    0x5b
  422126:	jmp    0x42219b
  422128:	fmulp  st(7),st
  42212a:	aam    0x22
  42212c:	cs scas al,BYTE PTR es:[edi]
  42212e:	or     DWORD PTR ds:0x27263ed0,esi
  422134:	ss addr16 (bad) 
  422137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422138:	(bad)  [edx+edi*8+0x3e]
  42213c:	shl    esp,cl
  42213e:	retf   
  42213f:	aas    
  422140:	and    bl,BYTE PTR [ebp+ebx*8-0x41fe1666]
  422147:	adc    BYTE PTR [edi-0x22],0x57
  42214b:	inc    esp
  42214c:	out    dx,al
  42214d:	(bad)  
  42214e:	mov    ds:0x1e7a317e,eax
  422153:	inc    ebp
  422154:	mov    ah,0xd2
  422156:	cmp    bl,cl
  422158:	cmc    
  422159:	cmp    BYTE PTR [ecx-0x38],dh
  42215c:	xchg   DWORD PTR [eax+0x5bf82bee],ebp
  422162:	cmp    eax,0xad64b6dd
  422167:	stos   BYTE PTR es:[edi],al
  422168:	outs   dx,BYTE PTR ds:[esi]
  422169:	into   
  42216a:	add    DWORD PTR [edx],0xffffffdd
  42216d:	add    dh,ch
  42216f:	or     DWORD PTR [ebx-0x6d],ecx
  422172:	sbb    al,0x6
  422174:	gs call 0x2692:0x4ff71b91
  42217c:	lods   eax,DWORD PTR ds:[esi]
  42217d:	cmp    eax,0x90319c5a
  422182:	fs call 0xc322:0xf8cae7b1
  42218a:	mov    ebx,0x9078a32c
  42218f:	xchg   esi,eax
  422190:	push   es
  422191:	mov    dl,0x52
  422193:	and    BYTE PTR [ebx+0x2e2dd63],cl
  422199:	push   esi
  42219a:	ins    DWORD PTR es:[edi],dx
  42219b:	mov    cl,0xe3
  42219d:	or     al,0x40
  42219f:	dec    esp
  4221a0:	dec    edx
  4221a1:	cmp    esi,eax
  4221a3:	mov    bh,0xd7
  4221a5:	inc    ecx
  4221a6:	bound  ebp,QWORD PTR [ecx+edx*1]
  4221a9:	push   esp
  4221aa:	es int3 
  4221ac:	jns    0x4221f3
  4221ae:	lods   al,BYTE PTR ds:[esi]
  4221af:	pop    esi
  4221b0:	xchg   edi,ebp
  4221b2:	xchg   DWORD PTR [edx-0x6541fcea],edi
  4221b8:	jmp    FWORD PTR [ebx-0x25636cd]
  4221be:	push   esp
  4221bf:	mov    ah,0x1f
  4221c1:	push   es
  4221c2:	inc    ebp
  4221c3:	inc    ebp
  4221c4:	cwde   
  4221c5:	les    ebx,FWORD PTR [ebx]
  4221c7:	and    al,0xde
  4221c9:	sbb    eax,0xfed9690a
  4221ce:	lods   al,BYTE PTR ds:[esi]
  4221cf:	popa   
  4221d0:	adc    al,0x37
  4221d2:	not    ah
  4221d4:	imul   esp,DWORD PTR ds:0x4d4301b0,0xee5711dd
  4221de:	in     al,0x7b
  4221e0:	les    ecx,FWORD PTR [edx+0x280652d9]
  4221e6:	push   esi
  4221e7:	imul   eax,ecx,0x43867fa1
  4221ed:	mov    BYTE PTR [edx-0x10],al
  4221f0:	outs   dx,BYTE PTR ds:[esi]
  4221f1:	stos   BYTE PTR es:[edi],al
  4221f2:	outs   dx,DWORD PTR ds:[esi]
  4221f3:	jb     0x422218
  4221f5:	gs or  eax,0x2f55d99
  4221fb:	js     0x42227a
  4221fd:	cmc    
  4221fe:	jno    0x4221f3
  422200:	lock xchg BYTE PTR [edx-0x5d],dh
  422204:	out    dx,al
  422205:	cmp    eax,0x96c90009
  42220a:	mov    BYTE PTR [esi],0x9e
  42220d:	retf   0xd598
  422210:	(bad)  
  422211:	mov    bh,0x29
  422213:	sub    DWORD PTR [edi+0x19],0xffffffe4
  422217:	pop    ebx
  422218:	cmc    
  422219:	pop    ebx
  42221a:	jne    0x422269
  42221c:	(bad)  
  42221d:	into   
  42221e:	cdq    
  42221f:	ret    
  422220:	fwait
  422221:	and    dl,BYTE PTR [ecx-0x1b]
  422224:	mov    dl,0xac
  422226:	mov    esi,0x12cb2df0
  42222b:	in     eax,dx
  42222c:	jmp    0x28cceb2e
  422231:	add    al,0xae
  422233:	jge    0x422224
  422235:	test   al,0x58
  422237:	mov    ah,0xef
  422239:	cmp    edi,DWORD PTR [ebx+0x6b]
  42223c:	adc    BYTE PTR [edi+0x4e24a860],bh
  422242:	inc    edx
  422243:	mov    edx,0xf736f613
  422248:	dec    ebx
  422249:	or     eax,0x5a77cf21
  42224e:	das    
  42224f:	push   edx
  422250:	xor    bl,BYTE PTR [esi+0x32]
  422253:	ror    edx,0x72
  422256:	lahf   
  422257:	cld    
  422258:	pop    edi
  422259:	sbb    edi,ecx
  42225b:	pop    eax
  42225c:	test   BYTE PTR [ebx],dh
  42225e:	test   eax,0x738123af
  422263:	xor    dh,BYTE PTR [ebx+0x7d3e8fe3]
  422269:	rol    DWORD PTR [eax],1
  42226b:	inc    esp
  42226c:	adc    ecx,DWORD PTR [eax+0x4659c792]
  422272:	inc    ecx
  422273:	mov    eax,0x606756bf
  422278:	scas   al,BYTE PTR es:[edi]
  422279:	push   ebx
  42227a:	push   es
  42227b:	inc    edi
  42227c:	inc    ebp
  42227d:	adc    ebx,eax
  42227f:	lods   al,BYTE PTR ds:[esi]
  422280:	adc    DWORD PTR [ecx+edx*4-0x2428aa9d],eax
  422287:	in     eax,dx
  422288:	jns    0x4222c8
  42228a:	xor    eax,DWORD PTR [ebx]
  42228c:	jae    0x4222fe
  42228e:	xor    al,0xbf
  422290:	outs   dx,DWORD PTR ds:[esi]
  422291:	adc    ebx,DWORD PTR [edi+0x1b]
  422294:	or     DWORD PTR [ebx-0x9],esp
  422297:	sub    DWORD PTR [eax-0x6d],edi
  42229a:	fwait
  42229b:	mov    dl,0xd1
  42229d:	in     al,dx
  42229e:	jge    0x4222e2
  4222a0:	pusha  
  4222a1:	mov    ds:0x86c16b22,eax
  4222a6:	sbb    BYTE PTR [esi-0xf],0xd0
  4222aa:	adc    al,0x34
  4222ac:	mov    dh,0xbe
  4222ae:	scas   eax,DWORD PTR es:[edi]
  4222af:	add    eax,DWORD PTR [esi]
  4222b1:	pusha  
  4222b2:	hlt    
  4222b3:	arpl   WORD PTR [ecx-0xb],sp
  4222b6:	je     0x42230c
  4222b8:	sbb    BYTE PTR [ebp-0x4b0c97],al
  4222be:	adc    BYTE PTR [ebx-0x323a91e3],ch
  4222c4:	in     al,dx
  4222c5:	das    
  4222c6:	jo     0x42228b
  4222c8:	in     al,dx
  4222c9:	adc    al,0x13
  4222cb:	adc    BYTE PTR [esi+ebx*2],al
  4222ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222cf:	mov    edi,0x1ae6bd62
  4222d4:	ins    DWORD PTR es:[edi],dx
  4222d5:	popa   
  4222d6:	adc    esi,DWORD PTR [esi+0x7de6311b]
  4222dc:	xchg   edi,eax
  4222dd:	stc    
  4222de:	adc    BYTE PTR [edx],al
  4222e0:	xor    DWORD PTR [esi+0x79f1b234],edx
  4222e6:	loope  0x42228e
  4222e8:	test   eax,0x743079ef
  4222ed:	xchg   esp,eax
  4222ee:	sub    ch,BYTE PTR [eax]
  4222f0:	arpl   WORD PTR [edi+0x7e],di
  4222f3:	in     al,0x77
  4222f5:	mov    bl,0x88
  4222f7:	jl     0x4222fe
  4222f9:	xchg   esi,eax
  4222fa:	mov    cl,0x2f
  4222fc:	inc    esi
  4222fd:	call   FWORD PTR [ecx]
  4222ff:	inc    edi
  422300:	mov    bh,0x9c
  422302:	dec    ebx
  422303:	aam    0xae
  422305:	mov    ecx,0xb732efa5
  42230a:	or     BYTE PTR [ecx+0x5b],0x2e
  42230e:	rcl    BYTE PTR [ecx],cl
  422310:	or     al,dl
  422312:	rcl    edx,1
  422314:	cmp    cl,BYTE PTR [esp+eiz*4+0x5f]
  422318:	daa    
  422319:	lds    esp,FWORD PTR [esi]
  42231b:	mov    DWORD PTR [eax],edi
  42231d:	fwait
  42231e:	(bad)  
  42231f:	cmc    
  422320:	in     eax,dx
  422321:	xor    dh,ch
  422323:	jecxz  0x4222e9
  422325:	data16 xchg dh,bl
  422328:	scas   eax,DWORD PTR es:[edi]
  422329:	fdiv   DWORD PTR [ebx]
  42232b:	shl    DWORD PTR [ecx+edx*8-0x2eafc480],cl
  422332:	pop    ebx
  422333:	pop    esi
  422334:	inc    esi
  422335:	shl    DWORD PTR [eax+0x6261e324],cl
  42233b:	out    dx,al
  42233c:	push   0x85a37491
  422341:	xor    al,cl
  422343:	and    al,0x48
  422345:	push   cs
  422346:	xor    BYTE PTR [ebx+0x36],al
  422349:	add    eax,0xc04fa7ea
  42234e:	add    bl,BYTE PTR [eax+0x64]
  422351:	sbb    BYTE PTR [eax],0x93
  422354:	and    eax,0xf80f13ee
  422359:	(bad)  
  42235a:	enter  0x5b88,0x89
  42235e:	cwde   
  42235f:	(bad)  
  422360:	fiadd  WORD PTR [ecx+0x26]
  422363:	ret    
  422364:	add    al,0xb
  422366:	xor    BYTE PTR [esp+edi*1],dh
  422369:	sub    edi,DWORD PTR ds:0xa5db4c02
  42236f:	fnsave [ebp-0x40]
  422372:	dec    esp
  422373:	test   DWORD PTR [eax+0x5a],edx
  422376:	or     edi,edx
  422378:	in     eax,dx
  422379:	pusha  
  42237a:	push   ss
  42237b:	retf   
  42237c:	cwde   
  42237d:	dec    edi
  42237e:	cdq    
  42237f:	xchg   edi,eax
  422380:	sbb    DWORD PTR [esp+ebp*8-0x13ec88d3],0x85464bed
  42238b:	inc    edx
  42238c:	inc    esi
  42238d:	xlat   BYTE PTR ds:[ebx]
  42238e:	data16 ror BYTE PTR [ebp+0x2b],1
  422392:	mov    dh,0x46
  422394:	sbb    esp,ecx
  422396:	mov    ecx,0xa2d1b93d
  42239b:	stc    
  42239c:	lahf   
  42239d:	jno    0x42238b
  42239f:	adc    al,0x42
  4223a1:	inc    edi
  4223a2:	ror    cl,0x9a
  4223a5:	sub    eax,esp
  4223a7:	in     al,0xc
  4223a9:	mov    cl,0x21
  4223ab:	rol    BYTE PTR [edx+0x4afb4add],1
  4223b1:	jle    0x4223b9
  4223b3:	pop    es
  4223b4:	cmp    BYTE PTR [ecx],bl
  4223b6:	nop
  4223b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b8:	mov    bh,0x15
  4223ba:	fist   WORD PTR [edi-0x556976e6]
  4223c0:	sub    BYTE PTR [edx+0x2e],al
  4223c3:	call   0x5bd8:0x5b98a20f
  4223ca:	mov    ecx,0x538e1e27
  4223cf:	jle    0x4223d7
  4223d1:	jge    0x422399
  4223d3:	push   cs
  4223d4:	inc    ebx
  4223d5:	lods   al,BYTE PTR ds:[esi]
  4223d6:	in     eax,0xd1
  4223d8:	fisub  DWORD PTR [ebx-0x5f]
  4223db:	adc    al,0xfa
  4223dd:	or     esi,DWORD PTR [eax-0x6f]
  4223e0:	jmp    0x4223f0
  4223e2:	ins    DWORD PTR es:[edi],dx
  4223e3:	sar    BYTE PTR [edx+eax*2+0x23dfbf5a],0x65
  4223eb:	outs   dx,BYTE PTR ds:[esi]
  4223ec:	loope  0x4223a6
  4223ee:	pop    ecx
  4223ef:	shl    DWORD PTR [ebx+ebx*4+0x5f],cl
  4223f3:	dec    ebp
  4223f4:	aas    
  4223f5:	nop    DWORD PTR [ebx]
  4223f8:	(bad)  
  4223f9:	pop    esp
  4223fa:	jle    0x42240e
  4223fc:	push   esi
  4223fd:	fwait
  4223fe:	inc    ecx
  4223ff:	sub    eax,DWORD PTR [edi+esi*8+0x36]
  422403:	pop    edi
  422404:	fdivp  st(6),st
  422406:	cli    
  422407:	add    ecx,DWORD PTR [edx]
  422409:	mov    cl,0xf
  42240b:	dec    esi
  42240c:	(bad)  
  42240d:	sub    DWORD PTR [eax+0x5d933ede],esi
  422413:	adc    al,0x8f
  422415:	into   
  422416:	ret    
  422417:	mov    eax,ds:0xfe4bcf8
  42241c:	rcl    BYTE PTR [edi],cl
  42241e:	addr16 jne 0x422458
  422421:	daa    
  422422:	dec    esi
  422423:	sub    dh,bl
  422425:	imul   eax,eax,0x42667769
  42242b:	and    BYTE PTR [esi+0x3711096],0xa3
  422432:	xchg   edi,eax
  422433:	fwait
  422434:	or     dl,0xd7
  422437:	imul   eax,ebp,0x57
  42243a:	sbb    ah,0x78
  42243d:	lahf   
  42243e:	and    eax,DWORD PTR [edx+0x41]
  422441:	push   0x1d
  422443:	jmp    0xcde2b5be
  422448:	enter  0xe77b,0x60
  42244c:	ds ja  0x4224b5
  42244f:	and    al,0xa6
  422451:	ror    BYTE PTR [esi-0x13],1
  422454:	ror    DWORD PTR [eax+ecx*4+0x7e6493aa],0xcc
  42245c:	mov    ds:0x5346b346,al
  422461:	imul   esp,DWORD PTR [esi],0x799fb220
  422467:	mov    ecx,DWORD PTR ds:[edi+0x1fa33c26]
  42246e:	sbb    DWORD PTR [eax+esi*2],0x7cf73efa
  422475:	imul   eax,DWORD PTR es:[esi],0x58
  422479:	mov    edi,DWORD PTR [ebx-0x20]
  42247c:	neg    ah
  42247e:	lods   al,BYTE PTR ds:[esi]
  42247f:	rcr    BYTE PTR [esi+0x234277ed],1
  422485:	jnp    0x4224e3
  422487:	clc    
  422488:	jno    0x422487
  42248a:	jmp    0xcb065281
  42248f:	arpl   WORD PTR [esi-0x3ab885d2],bx
  422495:	cmp    BYTE PTR [eax-0x14],ch
  422498:	mov    edi,0x1b5e3995
  42249d:	sub    edi,edi
  42249f:	jne    0x42247d
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x425802
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x372776ec
  4242c9:	pushf  
  4242ca:	mov    cl,0xcf
  4242cc:	xchg   edx,eax
  4242cd:	xchg   ebp,eax
  4242ce:	add    BYTE PTR [ebx-0x7c7c93ab],0xfb
  4242d5:	imul   ebx,DWORD PTR [eax],0x19b904b6
  4242db:	test   DWORD PTR [ebx-0x5a476d2b],ebp
  4242e1:	mov    al,ds:0x4007b51a
  4242e6:	into   
  4242e7:	add    al,0xf6
  4242e9:	cwde   
  4242ea:	(bad)  
  4242eb:	add    DWORD PTR [edi+0x2d],0xd528f2aa
  4242f2:	stos   BYTE PTR es:[edi],al
  4242f3:	pop    ss
  4242f4:	xchg   BYTE PTR [edi],bl
  4242f6:	in     al,dx
  4242f7:	and    DWORD PTR [edi],edi
  4242f9:	and    BYTE PTR [eax],0xde
  4242fc:	xchg   ebx,eax
  4242fd:	jne    0x424284
  4242ff:	sti    
  424300:	jle    0x4242f7
  424302:	adc    edx,DWORD PTR [eax+0x182299fc]
  424308:	ss inc esp
  42430a:	adc    dh,BYTE PTR [eax]
  42430c:	push   ebx
  42430d:	lea    esi,ss:[edx-0x14]
  424311:	scas   eax,DWORD PTR es:[edi]
  424312:	mov    dl,0xe5
  424314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424315:	xchg   ecx,eax
  424316:	xchg   esi,eax
  424317:	sub    DWORD PTR [edx],eax
  424319:	cmp    al,0x9f
  42431b:	cli    
  42431c:	dec    edx
  42431d:	imul   esp,DWORD PTR [eax+0x40],0xffffff91
  424321:	dec    ebp
  424322:	nop
  424323:	add    al,0x26
  424325:	(bad)  [ebx]
  424327:	inc    ebx
  424328:	push   ebp
  424329:	mov    ebx,0x5bd5b900
  42432e:	inc    ecx
  42432f:	fcos   
  424331:	lds    edi,FWORD PTR ss:[edx]
  424334:	imul   eax,DWORD PTR [eax],0x390c8856
  42433a:	addr16 std 
  42433c:	fwait
  42433d:	outs   dx,BYTE PTR ds:[esi]
  42433e:	and    BYTE PTR [ebx+0x6cf81e47],ah
  424344:	imul   BYTE PTR [esi+0x63]
  424347:	xor    al,0xd6
  424349:	pop    ss
  42434a:	addr16 add ch,dh
  42434d:	aas    
  42434e:	(bad)  
  42434f:	mov    ds:0x77d751d1,al
  424354:	and    DWORD PTR [ebp+edi*2+0x5f],0xffffffb1
  424359:	(bad)  
  42435a:	push   eax
  42435b:	imul   esi,DWORD PTR [edx],0x30
  42435e:	xchg   ebp,eax
  42435f:	test   DWORD PTR [edx-0x2a7bca54],0x9d7ab1e7
  424369:	fdiv   st,st(4)
  42436b:	push   cs
  42436c:	data16 fld TBYTE PTR [esi+0x76]
  424370:	pop    esi
  424371:	adc    bh,BYTE PTR [esi]
  424373:	fstsw  WORD PTR [eax]
  424376:	adc    esi,DWORD PTR [edi]
  424378:	fsub   DWORD PTR ds:0xcca55c3c
  42437e:	or     ecx,0x37
  424381:	jns    0x4243ca
  424383:	pop    edi
  424384:	leave  
  424385:	fistp  WORD PTR [ebx-0x66]
  424388:	lahf   
  424389:	xor    BYTE PTR [ebp-0x687e39a5],0xba
  424390:	adc    DWORD PTR [esi],ecx
  424392:	xchg   esp,eax
  424393:	lahf   
  424394:	sub    al,0x60
  424396:	mov    esp,0x2935344b
  42439b:	out    0x87,eax
  42439d:	cld    
  42439e:	sub    eax,0xd546857e
  4243a3:	lods   eax,DWORD PTR ds:[esi]
  4243a4:	xor    dl,al
  4243a6:	mov    WORD PTR [edi],ds
  4243a8:	push   ds
  4243a9:	popf   
  4243aa:	sbb    DWORD PTR [esi],eax
  4243ac:	test   al,0xb3
  4243ae:	cmp    DWORD PTR [esi],esi
  4243b0:	xor    eax,0xb92497c6
  4243b5:	in     al,0x2b
  4243b7:	xchg   DWORD PTR [esp+ebp*1-0x6b27a584],edx
  4243be:	jg     0x4243d9
  4243c0:	jbe    0x424359
  4243c2:	jge    0x4243cf
  4243c4:	cmp    DWORD PTR [ebx+ebp*1],ebp
  4243c7:	shl    ebp,1
  4243c9:	into   
  4243ca:	cs push es
  4243cc:	shr    DWORD PTR [eax+0x6dcb7053],0xd7
  4243d3:	repz jge 0x424427
  4243d6:	and    BYTE PTR [edi],ah
  4243d8:	inc    ebp
  4243d9:	add    BYTE PTR [ebx+0x55],dh
  4243dc:	jge    0x42437e
  4243de:	pop    es
  4243df:	mov    ds:0xbe98a967,al
  4243e4:	scas   al,BYTE PTR es:[edi]
  4243e5:	aad    0x2d
  4243e7:	add    eax,0xab178baf
  4243ec:	and    ecx,DWORD PTR [esi-0x34]
  4243ef:	cmp    BYTE PTR [eax+ebp*2-0xa40fb79],0x1b
  4243f7:	rcr    BYTE PTR [esi-0x631c9802],0xd0
  4243fe:	jno    0x4243d3
  424400:	adc    DWORD PTR [esi-0x51],ebx
  424403:	loop   0x42438e
  424405:	call   0xa727:0xda1ce315
  42440c:	rol    DWORD PTR [ecx+0x61],cl
  42440f:	dec    esi
  424410:	and    al,al
  424412:	push   ds
  424413:	fwait
  424414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424415:	mov    ch,0xd7
  424417:	xor    dh,BYTE PTR [edi+eax*8]
  42441a:	sub    BYTE PTR [edx-0x1f20cb90],dh
  424420:	push   DWORD PTR [edx]
  424422:	arpl   WORD PTR [edi],cx
  424424:	test   DWORD PTR [ecx+0x76],ebx
  424427:	cmp    al,0xb4
  424429:	sub    DWORD PTR [di+0x4],0x28
  42442e:	push   cs
  42442f:	sahf   
  424430:	add    eax,0xb0adc2d3
  424435:	(bad)  
  424436:	cmp    eax,0x13680adb
  42443b:	cli    
  42443c:	jbe    0x424498
  42443e:	fs pop ds
  424440:	mov    cl,0x88
  424442:	sahf   
  424443:	inc    eax
  424444:	xchg   BYTE PTR [esi-0x46b4aa43],al
  42444a:	ret    
  42444b:	shl    bl,0x38
  42444e:	(bad)
  424451:	ror    BYTE PTR [esi+edi*4],0xe1
  424455:	push   eax
  424456:	rol    DWORD PTR [ecx],1
  424458:	inc    ebx
  424459:	xchg   ebx,eax
  42445a:	cs ins DWORD PTR es:[edi],dx
  42445c:	and    al,0x8e
  42445e:	mov    al,0x27
  424460:	inc    edi
  424461:	into   
  424462:	xchg   ecx,eax
  424463:	loope  0x4243f8
  424465:	sub    eax,0xf4bede6c
  42446a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42446b:	mov    dh,0xe2
  42446d:	mov    bh,0x54
  42446f:	and    BYTE PTR [edi],bh
  424471:	adc    BYTE PTR [edx-0x2f],0x88
  424475:	rol    DWORD PTR [edx+0x770eeaab],cl
  42447b:	inc    ebp
  42447c:	sbb    DWORD PTR [esi+ebx*2+0x78],ebp
  424480:	sbb    DWORD PTR [ecx],ebp
  424482:	fwait
  424483:	xchg   ecx,eax
  424484:	add    DWORD PTR [ebp-0x3d],edx
  424487:	mov    bl,0xe3
  424489:	dec    edi
  42448a:	jo     0x424438
  42448c:	hlt    
  42448d:	push   ds
  42448e:	jbe    0x424469
  424490:	sbb    al,0xfa
  424492:	and    esp,ecx
  424494:	jecxz  0x424434
  424496:	stos   BYTE PTR es:[edi],al
  424497:	cmp    bl,cl
  424499:	repnz cs mov ecx,0x17b7081b
  4244a0:	push   ds
  4244a1:	or     BYTE PTR [edi],0xaf
  4244a4:	push   ebx
  4244a5:	jmp    0x56ff:0xddb9aabd
  4244ac:	jns    0x4244f8
  4244ae:	mov    ds:0xbcbb77a0,eax
  4244b3:	or     eax,0x413e9b21
  4244b8:	out    dx,eax
  4244b9:	inc    ecx
  4244ba:	sub    BYTE PTR [ecx+0x72],ah
  4244bd:	jnp    0x4244b7
  4244bf:	mov    al,ds:0xd92786b1
  4244c4:	jmp    0x88f1:0xbdec08c8
  4244cb:	mov    DWORD PTR ds:0x320c9b3a,eax
  4244d1:	cwde   
  4244d2:	fadd   DWORD PTR [ebx+eiz*1]
  4244d5:	and    ebp,DWORD PTR ds:0x73f56cb4
  4244db:	push   esp
  4244dc:	add    dl,BYTE PTR [ecx-0x68]
  4244df:	je     0x42453c
  4244e1:	or     dh,BYTE PTR ds:0xb5e80d4a
  4244e7:	adc    BYTE PTR gs:[edx+eax*2-0x316048fe],bl
  4244ef:	pop    esi
  4244f0:	sub    eax,0x92509764
  4244f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244f6:	xor    DWORD PTR [ecx],0x2e
  4244f9:	ins    DWORD PTR es:[edi],dx
  4244fa:	shr    BYTE PTR [edi+0x29],cl
  4244fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244fe:	sti    
  4244ff:	ret    
  424500:	fsubrp st(7),st
  424502:	mov    esi,0xa6b1dd28
  424507:	xlat   BYTE PTR ds:[ebx]
  424508:	cmc    
  424509:	(bad)  
  42450a:	popa   
  42450b:	das    
  42450c:	retf   0xc98f
  42450f:	cmp    DWORD PTR [ecx+eax*2],esp
  424512:	inc    ebx
  424513:	xchg   cl,al
  424515:	cmp    ah,bh
  424517:	and    DWORD PTR [ebp-0x67],eax
  42451a:	mov    eax,0xe92f2294
  42451f:	mov    ds:0x620b4f0a,al
  424524:	jge    0x424555
  424526:	popf   
  424527:	jno    0x424528
  424529:	iret   
  42452a:	inc    esi
  42452b:	data16 cld 
  42452d:	push   ds
  42452e:	inc    eax
  42452f:	sub    BYTE PTR [ecx],ah
  424531:	sbb    edx,DWORD PTR [ecx-0x33bbfb41]
  424537:	sbb    al,0x7a
  424539:	jns    0x42454e
  42453b:	aam    0x4c
  42453d:	mov    ds:0x79c2dc2d,eax
  424542:	and    DWORD PTR ss:[ecx],ebp
  424545:	inc    edi
  424546:	adc    DWORD PTR [edx],0xffffffbe
  424549:	ss jnp 0x4244de
  42454c:	ja     0x4245b5
  42454e:	les    ebx,FWORD PTR [ebp+0x4fe93d16]
  424554:	or     ebp,DWORD PTR [ebx+edi*8-0x18]
  424558:	mov    ecx,0x158cb4fb
  42455d:	movntq (bad),mm6
  42455e:	out    0xf3,eax
  424560:	push   ebp
  424561:	gs popa 
  424563:	push   ds
  424564:	test   bl,dh
  424566:	cdq    
  424567:	xchg   esp,eax
  424568:	mov    BYTE PTR [ebx+0x61],al
  42456b:	pop    ebp
  42456c:	sbb    ch,BYTE PTR [ebp+0x5378ba20]
  424572:	sbb    BYTE PTR [ebx-0x7a8f9097],0xb5
  424579:	mov    dl,0xcd
  42457b:	pop    es
  42457c:	push   esp
  42457d:	add    ch,dh
  42457f:	outs   dx,DWORD PTR ds:[esi]
  424580:	jno    0x4245ba
  424582:	fmul   DWORD PTR [ebx+0x33fca147]
  424588:	mov    ecx,esi
  42458a:	push   0xeb883450
  42458f:	sub    BYTE PTR [edi+0x34],0x2f
  424593:	outs   dx,DWORD PTR ds:[esi]
  424594:	aad    0xa4
  424596:	cwde   
  424597:	test   BYTE PTR [edi],bh
  424599:	and    edx,DWORD PTR [eax+ebp*1+0x40d22c72]
  4245a0:	fs jg  0x424598
  4245a3:	stos   BYTE PTR es:[edi],al
  4245a4:	fs popf 
  4245a6:	stos   DWORD PTR es:[edi],eax
  4245a7:	test   ebp,0x5f36010d
  4245ad:	rol    BYTE PTR [eax+0x35],cl
  4245b0:	dec    ecx
  4245b1:	cmc    
  4245b2:	std    
  4245b3:	sub    DWORD PTR [eax-0x9],0xea961a08
  4245ba:	push   edi
  4245bb:	mov    ch,0xec
  4245bd:	cmp    al,0xc7
  4245bf:	cmp    ebp,DWORD PTR [eax-0x46]
  4245c2:	aaa    
  4245c3:	jmp    0x4901:0xdf09a168
  4245ca:	push   ebp
  4245cb:	pop    ecx
  4245cc:	(bad)  
  4245cd:	in     al,0x7d
  4245cf:	mul    DWORD PTR [ebx]
  4245d1:	sbb    al,0xa8
  4245d3:	cmp    ebp,0xbf678bd3
  4245d9:	leave  
  4245da:	pop    ebx
  4245db:	pop    ss
  4245dc:	mov    cl,0xb7
  4245de:	test   eax,0x55bf3721
  4245e3:	dec    ecx
  4245e4:	dec    ebx
  4245e5:	jge    0x42465d
  4245e7:	gs mov bh,0x74
  4245ea:	int    0x94
  4245ec:	jae    0x424607
  4245ee:	jg     0x424603
  4245f0:	sahf   
  4245f1:	jp     0x4245c0
  4245f3:	mov    ds:0x3c01b34c,eax
  4245f8:	or     DWORD PTR [ebx-0x40],esi
  4245fb:	pop    esi
  4245fc:	pshufw mm0,QWORD PTR [esp+eax*1+0x35],0xdb
  424602:	arpl   WORD PTR [eax],bp
  424604:	dec    eax
  424605:	clc    
  424606:	fistp  WORD PTR [ecx-0x3d]
  424609:	push   ss
  42460a:	mov    esp,0x5aeaefca
  42460f:	fld    QWORD PTR [ebx+ebp*8+0x70]
  424613:	sbb    al,0x21
  424615:	test   eax,0x99386a06
  42461a:	cld    
  42461b:	and    ebp,ebx
  42461d:	loopne 0x4245eb
  42461f:	xchg   ebp,eax
  424620:	neg    edx
  424622:	mov    eax,0xff23b9f2
  424627:	or     BYTE PTR [eax-0x4220fd20],0x98
  42462e:	fdivr  DWORD PTR [ebx]
  424630:	xor    ch,BYTE PTR [ecx+0x52]
  424633:	adc    ah,al
  424635:	call   0x6db9:0x4827c8a4
  42463c:	dec    esi
  42463d:	aas    
  42463e:	xchg   DWORD PTR [edx+0x64],edi
  424641:	fs out 0xb2,eax
  424644:	mov    bl,0x3e
  424646:	jbe    0x4245ed
  424648:	jge    0x424676
  42464a:	jg     0x42467a
  42464c:	fst    QWORD PTR [ebp+0x43078cfc]
  424652:	or     eax,eax
  424654:	mov    ebp,0x5ffa5b9a
  424659:	mov    ah,BYTE PTR es:[esi+0x454648cc]
  424660:	xor    dl,BYTE PTR [edx]
  424662:	in     eax,0xd
  424664:	xchg   ebp,eax
  424665:	mov    dh,cl
  424667:	inc    ebx
  424668:	jb     0x42465c
  42466a:	mov    ds:0xbed0cf2b,eax
  42466f:	addr16 sahf 
  424671:	into   
  424672:	xor    ch,BYTE PTR [edi+edx*8-0x7d23aede]
  424679:	stos   DWORD PTR es:[edi],eax
  42467a:	adc    eax,DWORD PTR [edx-0x3c448f45]
  424680:	xor    DWORD PTR [edi+0x6919271c],esi
  424686:	fistp  DWORD PTR [ebx+0x25cbe743]
  42468c:	and    BYTE PTR [edx-0x4cef6c8],dl
  424692:	sar    BYTE PTR [edi-0x2],cl
  424695:	mov    ss:0xe6a70625,al
  42469b:	mov    es,ebp
  42469d:	stos   BYTE PTR es:[edi],al
  42469e:	xor    ebx,DWORD PTR [esi]
  4246a0:	clc    
  4246a1:	call   0xd2e0182d
  4246a6:	xor    dh,bl
  4246a8:	fdiv   st(7),st
  4246aa:	sahf   
  4246ab:	xchg   ebx,eax
  4246ac:	mov    bl,0xd6
  4246ae:	shr    edi,cl
  4246b0:	mov    ebp,0xb9cc2e7b
  4246b5:	mov    esp,0xc8596405
  4246ba:	and    esi,DWORD PTR [esp+eiz*2]
  4246bd:	call   0x9c11:0xb17b2095
  4246c4:	rcr    dh,0x30
  4246c7:	fisttp QWORD PTR [esi-0x4ab56c07]
  4246cd:	mov    edx,0xf6b1d03
  4246d2:	fist   WORD PTR [eax-0x3c]
  4246d5:	push   0x50
  4246d7:	aas    
  4246d8:	jle    0x424731
  4246da:	call   0xd49f4ded
  4246df:	lods   eax,DWORD PTR ds:[esi]
  4246e0:	in     al,dx
  4246e1:	sbb    eax,0xa9edcb12
  4246e6:	ret    
  4246e7:	aam    0xe2
  4246e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246ea:	mov    bh,0xf8
  4246ec:	mov    al,0x62
  4246ee:	add    DWORD PTR [eax-0x2f1928d7],ebp
  4246f4:	xor    BYTE PTR [ecx-0x790a4b3f],ah
  4246fa:	sbb    al,0xd5
  4246fc:	jae    0x42474d
  4246fe:	inc    eax
  4246ff:	sbb    dl,BYTE PTR [esi]
  424701:	inc    ecx
  424702:	xor    eax,0x18b0a4c9
  424707:	and    cl,ah
  424709:	lahf   
  42470a:	ins    BYTE PTR es:[edi],dx
  42470b:	sbb    al,0x42
  42470d:	leave  
  42470e:	xor    DWORD PTR [edi-0x47],ecx
  424711:	(bad)  
  424712:	iret   
  424713:	cmp    eax,eax
  424715:	leave  
  424716:	jle    0x424786
  424718:	call   0xb8b2:0x93dcf856
  42471f:	sub    eax,0x7a1b596a
  424724:	repnz adc edx,DWORD PTR [edx]
  424727:	adc    al,0x14
  424729:	daa    
  42472a:	push   eax
  42472b:	or     al,0x81
  42472d:	dec    edi
  42472e:	es mov ecx,0x381ac54f
  424734:	push   ds
  424735:	mov    dl,0x68
  424737:	nop
  424738:	cmp    ah,ah
  42473a:	(bad)  
  42473b:	mov    edx,fs
  42473d:	inc    edi
  42473e:	adc    eax,0x5d389d0d
  424743:	xchg   ecx,eax
  424744:	lock inc edi
  424746:	loop   0x4246d9
  424748:	xor    eax,0xbc23f7b2
  42474d:	imul   eax,DWORD PTR [ebx+0x61463f7f],0x52
  424754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424755:	(bad)
  424759:	icebp  
  42475a:	stc    
  42475b:	and    cl,cl
  42475d:	pop    ss
  42475e:	(bad)  
  42475f:	mov    DWORD PTR [ecx],0x47b10398
  424765:	add    BYTE PTR [eax-0x32cfa5db],0xd0
  42476c:	inc    edi
  42476d:	mov    BYTE PTR ds:[edi+0x757e8db1],bl
  424774:	nop
  424775:	nop
  424776:	std    
  424777:	cld    
  424778:	xchg   esi,eax
  424779:	inc    edi
  42477a:	dec    ebp
  42477b:	js     0x4247ec
  42477d:	mov    edx,0xbca08741
  424782:	out    dx,al
  424783:	imul   ebx,DWORD PTR [edi-0x48a329f8],0x5c
  42478a:	sbb    al,0xab
  42478c:	icebp  
  42478d:	aam    0x1a
  42478f:	adc    dl,BYTE PTR ds:0xf670455a
  424795:	sbb    DWORD PTR [ecx],ebx
  424797:	sub    eax,0xa65a46d8
  42479c:	push   es
  42479d:	loopne 0x424781
  42479f:	push   es
  4247a0:	in     al,0x57
  4247a2:	mov    cl,0x12
  4247a4:	and    BYTE PTR [ecx],0x5e
  4247a7:	in     eax,0xc9
  4247a9:	push   edi
  4247aa:	into   
  4247ab:	xchg   edi,eax
  4247ac:	dec    ebx
  4247ad:	(bad)  
  4247ae:	cmp    eax,0x2ce76ffd
  4247b3:	adc    dh,BYTE PTR [ebp+0x4b79f6c2]
  4247b9:	cli    
  4247ba:	pop    edx
  4247bb:	mul    ch
  4247bd:	mov    dh,0x5f
  4247bf:	pop    esp
  4247c0:	(bad)  
  4247c2:	push   ecx
  4247c3:	rol    DWORD PTR [ebp-0x54655e0],1
  4247c9:	add    DWORD PTR [edi-0x2b6726a4],0x72
  4247d0:	out    0x1e,al
  4247d2:	cli    
  4247d3:	shl    BYTE PTR [eax+0x5e59fc21],1
  4247d9:	and    ah,BYTE PTR [eax]
  4247db:	push   ds
  4247dc:	ss mov bl,0xe5
  4247df:	xchg   edx,eax
  4247e0:	and    al,0xf2
  4247e2:	mov    esp,0x51ca4b90
  4247e7:	test   DWORD PTR [edi+0x3e],ebp
  4247ea:	mov    edi,0x50bc9e0b
  4247ef:	call   0xda63:0x689fc199
  4247f6:	inc    esp
  4247f7:	(bad)  
  4247f8:	push   ds
  4247f9:	jmp    0xcc976087
  4247fe:	sbb    BYTE PTR ds:0xaf89088a,ch
  424804:	jbe    0x424827
  424806:	adc    eax,0xb14bd54d
  42480b:	jo     0x42484b
  42480d:	mov    al,0x4b
  42480f:	test   DWORD PTR [edx],ebp
  424811:	add    eax,0x86924a0a
  424816:	push   es
  424817:	cmp    DWORD PTR [ecx],ebp
  424819:	add    BYTE PTR [edx-0x44],cl
  42481c:	push   0xffffff84
  42481e:	ficom  DWORD PTR [ecx-0x2f8a2f43]
  424824:	dec    edi
  424825:	(bad)  
  424826:	out    dx,eax
  424827:	inc    edx
  424828:	mov    DWORD PTR [esi],esp
  42482a:	push   es
  42482b:	jmp    0x424845
  42482d:	and    DWORD PTR [ebx+eiz*2-0x64302b3a],esp
  424834:	xor    al,dl
  424836:	sbb    dh,BYTE PTR [edx]
  424838:	xor    DWORD PTR [esi+0x7e],ebx
  42483b:	das    
  42483c:	xchg   ebx,eax
  42483d:	xor    eax,0x217ebccf
  424842:	pusha  
  424843:	sub    bh,BYTE PTR [eax-0x48]
  424846:	add    DWORD PTR [esi+0x154a222a],0x81aa815
  424850:	rcl    ebx,cl
  424852:	out    0xeb,eax
  424854:	or     eax,0xdbd42a93
  424859:	loope  0x4248d2
  42485b:	nop
  42485c:	xchg   edi,eax
  42485d:	cdq    
  42485e:	push   ecx
  42485f:	das    
  424860:	mov    dh,0x1a
  424862:	into   
  424863:	ja     0x424867
  424865:	rcl    BYTE PTR [esp+eiz*2+0x5adbcd3a],1
  42486c:	inc    esi
  42486d:	ret    
  42486e:	popf   
  42486f:	stc    
  424870:	xchg   esi,eax
  424871:	and    cl,0xba
  424874:	mov    al,0xb0
  424876:	xchg   ecx,eax
  424877:	pop    esi
  424878:	(bad)  
  424879:	scas   eax,DWORD PTR es:[edi]
  42487a:	jne    0x4248f9
  42487c:	bound  esp,QWORD PTR [eax]
  42487e:	xor    BYTE PTR [ebp-0x5539a0f7],bl
  424884:	mov    esp,0x42939c10
  424889:	pop    ds
  42488a:	cmp    cl,BYTE PTR [ecx-0x54c02067]
  424890:	unpcklps xmm6,XMMWORD PTR [ebx]
  424893:	loope  0x4248eb
  424895:	jnp    0x424872
  424897:	pop    eax
  424898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424899:	dec    ecx
  42489a:	lds    edi,FWORD PTR [ecx+0x23ce8849]
  4248a0:	xor    ebp,DWORD PTR [ecx-0x2f]
  4248a3:	xor    eax,0xb732259
  4248a8:	push   0x732721fa
  4248ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248ae:	sar    DWORD PTR [ecx+0x4d],cl
  4248b1:	mov    bl,0x79
  4248b3:	fcom   QWORD PTR [edx]
  4248b5:	jmp    0x5144:0xd058ae9c
  4248bc:	sti    
  4248bd:	dec    esp
  4248be:	jb     0x4248ba
  4248c0:	out    dx,al
  4248c1:	or     bl,bl
  4248c3:	mov    bh,0x24
  4248c5:	sub    eax,0x93dfaa2d
  4248ca:	inc    edi
  4248cb:	xor    al,0x6d
  4248cd:	in     al,dx
  4248ce:	and    eax,0x3fd83693
  4248d3:	enter  0x26de,0xdf
  4248d7:	jmp    0x424863
  4248d9:	scas   al,BYTE PTR es:[edi]
  4248da:	cli    
  4248db:	out    dx,eax
  4248dc:	cmp    ah,BYTE PTR [esi-0x30]
  4248df:	pop    ebp
  4248e0:	xor    eax,0x966486e7
  4248e5:	lock push 0x43
  4248e8:	inc    eax
  4248e9:	std    
  4248ea:	inc    ebp
  4248eb:	repz out dx,al
  4248ed:	gs sti 
  4248ef:	jno    0x42495f
  4248f1:	cli    
  4248f2:	mov    esp,esp
  4248f4:	mov    ds:0xe1a4b983,eax
  4248f9:	fwait
  4248fa:	push   ds
  4248fb:	stc    
  4248fc:	test   DWORD PTR [ebx],edi
  4248fe:	inc    esp
  4248ff:	dec    ebp
  424900:	sti    
  424901:	push   0x19
  424903:	shrd   eax,esp,cl
  424906:	or     eax,0xd94e09e4
  42490b:	iret   
  42490c:	int    0x96
  42490e:	jl     0x42494f
  424910:	outs   dx,DWORD PTR ds:[esi]
  424911:	les    eax,FWORD PTR [eax+0x35]
  424914:	rol    BYTE PTR [edi-0x224b4ee4],cl
  42491a:	dec    ecx
  42491b:	shl    DWORD PTR [edi+0x4d],1
  42491e:	fidivr DWORD PTR [edi+0x46]
  424921:	fs ds xchg ebp,eax
  424924:	adc    eax,0x8484827b
  424929:	es jmp 0x2406:0x41cbc9a7
  424931:	lods   eax,DWORD PTR ds:[esi]
  424932:	aas    
  424933:	popf   
  424934:	jmp    0xa975:0x1458
  42493a:	int3   
  42493b:	icebp  
  42493c:	mov    bh,0xee
  42493e:	xchg   esp,eax
  42493f:	mov    dl,dh
  424941:	add    DWORD PTR [edx+0x477a7b62],0x4353cba7
  42494b:	stos   DWORD PTR es:[edi],eax
  42494c:	xchg   DWORD PTR [ecx+0x49],ecx
  42494f:	ja     0x424930
  424951:	push   eax
  424952:	xchg   edi,eax
  424953:	lods   al,BYTE PTR ds:[esi]
  424954:	or     BYTE PTR [edi-0x5c4c62f8],ch
  42495a:	popa   
  42495b:	xchg   ecx,eax
  42495c:	retf   
  42495d:	bound  ecx,QWORD PTR [edx-0x59958458]
  424963:	mov    ds:0x8a75b3d8,eax
  424968:	adc    al,0x7c
  42496a:	pop    esp
  42496b:	and    al,0x5a
  42496d:	ret    0xac91
  424970:	ins    BYTE PTR es:[edi],dx
  424971:	cs (bad) 
  424973:	adc    ah,BYTE PTR [ebp-0x6bb05aea]
  424979:	sub    al,0xdf
  42497b:	pop    esp
  42497c:	dec    edx
  42497d:	add    al,0x8f
  42497f:	pop    ebx
  424980:	ror    al,cl
  424982:	test   al,0xb6
  424984:	sti    
  424985:	sub    edx,DWORD PTR [edx-0x65]
  424988:	or     eax,0xd6dd1c69
  42498d:	add    dh,BYTE PTR [ecx]
  42498f:	hlt    
  424990:	mov    ch,0x2d
  424992:	scas   al,BYTE PTR es:[edi]
  424993:	test   DWORD PTR [esi+0x559b8881],esp
  424999:	fstp   TBYTE PTR [edi-0x34]
  42499c:	inc    ebp
  42499d:	scas   al,BYTE PTR es:[edi]
  42499e:	dec    edx
  42499f:	icebp  
  4249a0:	popa   
  4249a1:	ficomp DWORD PTR [esi+edx*1+0x1f]
  4249a5:	out    0xac,al
  4249a7:	mov    ebx,DWORD PTR [edi-0x64d1dfed]
  4249ad:	inc    ebp
  4249ae:	cli    
  4249af:	sbb    al,bh
  4249b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249b2:	and    cl,bh
  4249b4:	in     ax,0x6c
  4249b7:	add    DWORD PTR [edx-0x66dd9952],edx
  4249bd:	add    BYTE PTR [edx+0x6d],dl
  4249c0:	mov    ecx,0xc019bbd
  4249c5:	pop    ss
  4249c6:	xchg   edx,eax
  4249c7:	out    dx,eax
  4249c8:	mul    BYTE PTR [ecx+0x38aa28e4]
  4249ce:	arpl   si,bp
  4249d0:	into   
  4249d1:	dec    esi
  4249d2:	dec    ebx
  4249d3:	iret   
  4249d4:	add    eax,0xd6b0588e
  4249d9:	inc    BYTE PTR [ebx-0x261f66fc]
  4249df:	sub    al,0xfa
  4249e1:	mov    eax,ds:0xb3c42fe6
  4249e6:	xor    ebp,ecx
  4249e8:	cdq    
  4249e9:	out    0xae,eax
  4249eb:	enter  0xd32a,0x68
  4249ef:	xchg   ebp,eax
  4249f0:	adc    bl,BYTE PTR [ecx-0x790fdc8b]
  4249f6:	add    al,0x37
  4249f8:	sbb    bl,BYTE PTR [eax]
  4249fa:	jle    0x424a6e
  4249fc:	push   cs
  4249fd:	xchg   esp,eax
  4249fe:	sti    
  4249ff:	jae    0x4249cb
  424a01:	inc    ebx
  424a02:	add    al,0xc3
  424a04:	or     eax,0x46cf1c04
  424a09:	outs   dx,DWORD PTR ds:[esi]
  424a0a:	push   es
  424a0b:	in     al,dx
  424a0c:	jae    0x4249bd
  424a0e:	fwait
  424a0f:	xchg   ecx,eax
  424a10:	out    dx,eax
  424a11:	icebp  
  424a12:	jne    0x424a17
  424a14:	add    BYTE PTR [ebx+eax*2+0x67ec62f1],dl
  424a1b:	lods   al,BYTE PTR ds:[esi]
  424a1c:	lock fadd QWORD PTR [esi]
  424a1f:	push   ecx
  424a20:	cmp    DWORD PTR [esi+0x61ca79a4],edx
  424a26:	cmp    edi,DWORD PTR [ebp+0x62b29d48]
  424a2c:	(bad)  
  424a2e:	jg     0x424aa7
  424a30:	and    eax,0x7f809d37
  424a35:	xlat   BYTE PTR ds:[ebx]
  424a36:	retf   
  424a37:	mov    eax,ds:0x68d946d4
  424a3c:	mov    ebp,ebx
  424a3e:	fs dec esp
  424a40:	push   edx
  424a41:	cmp    BYTE PTR [ecx+0x17],bh
  424a44:	call   0xc7bc5859
  424a49:	int3   
  424a4a:	mov    ecx,0x9de35eb3
  424a4f:	stos   DWORD PTR es:[edi],eax
  424a50:	ins    DWORD PTR es:[edi],dx
  424a51:	push   edx
  424a52:	in     eax,0x9f
  424a54:	call   0x3de65ae8
  424a59:	xlat   BYTE PTR ds:[ebx]
  424a5a:	inc    esp
  424a5b:	je     0x424a34
  424a5d:	push   eax
  424a5e:	(bad)  
  424a5f:	daa    
  424a60:	dec    ebp
  424a61:	sbb    DWORD PTR ds:0xc4364e16,edx
  424a67:	sub    al,0x5d
  424a69:	out    0xe8,al
  424a6b:	mov    eax,ds:0x2f7e9dd1
  424a70:	adc    ah,BYTE PTR [eiz*8+0x67b2c637]
  424a77:	test   DWORD PTR [ecx],ebx
  424a79:	icebp  
  424a7a:	or     esp,DWORD PTR [edx+0x2febf508]
  424a80:	sub    al,0xfa
  424a82:	in     eax,0xd1
  424a84:	push   edi
  424a85:	test   DWORD PTR [edx],ebx
  424a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a88:	retf   
  424a89:	push   ds
  424a8a:	or     ebp,ecx
  424a8c:	into   
  424a8d:	ds mov dl,0xe6
  424a90:	jmp    0xf43b30f7
  424a95:	add    eax,0xf0afdef1
  424a9a:	loope  0x424acf
  424a9c:	out    0x7d,eax
  424a9e:	sub    al,0x1e
  424aa0:	jae    0x424a87
  424aa2:	xchg   esp,eax
  424aa3:	inc    ebp
  424aa4:	scas   al,BYTE PTR es:[edi]
  424aa5:	out    0x72,eax
  424aa7:	pop    ds
  424aa8:	and    al,0xa4
  424aaa:	ret    0x7c6e
  424aad:	es into 
  424aaf:	popa   
  424ab0:	ins    DWORD PTR es:[edi],dx
  424ab1:	aad    0xf
  424ab3:	ja     0x424a80
  424ab5:	test   BYTE PTR [eax],ch
  424ab7:	into   
  424ab8:	inc    ebp
  424ab9:	xor    esi,DWORD PTR [edi-0x35766434]
  424abf:	xlat   BYTE PTR ds:[ebx]
  424ac0:	push   0xffffffa4
  424ac2:	push   0x3509b0b5
  424ac7:	mov    dl,0xe7
  424ac9:	adc    al,0x12
  424acb:	or     al,0xfc
  424acd:	cmp    ecx,esi
  424acf:	(bad)  
  424ad0:	loop   0x424b2d
  424ad2:	jg     0x424b1f
  424ad4:	lock (bad) 
  424ad6:	out    dx,al
  424ad7:	sar    BYTE PTR [ecx+0x72],0x24
  424adb:	loope  0x424b38
  424add:	mov    al,ds:0x8e458f7f
  424ae2:	dec    ebx
  424ae3:	xchg   BYTE PTR [ebx-0x105467dd],dl
  424ae9:	icebp  
  424aea:	push   ebp
  424aeb:	imul   edx,DWORD PTR [ebx+0x2d],0x3f243bac
  424af2:	stos   DWORD PTR es:[edi],eax
  424af3:	outs   dx,DWORD PTR ds:[esi]
  424af4:	xchg   edx,eax
  424af5:	test   al,0xa3
  424af7:	mov    eax,0xc740d12c
  424afc:	pop    ebx
  424afd:	or     eax,0xa7fceb4a
  424b02:	sbb    al,0x29
  424b04:	rcl    ecx,1
  424b06:	pop    eax
  424b07:	stos   BYTE PTR es:[edi],al
  424b08:	aad    0xbd
  424b0a:	mov    ds:0x866f4b02,al
  424b0f:	nop
  424b10:	dec    esp
  424b11:	jmp    0x424b78
  424b13:	push   ebp
  424b14:	out    dx,al
  424b15:	arpl   WORD PTR [edx-0x195e9f3a],bp
  424b1b:	loop   0x424b7d
  424b1d:	rol    ecx,0x9b
  424b20:	sub    eax,DWORD PTR [edx-0x4b7becf0]
  424b26:	in     al,0x7a
  424b28:	aad    0x72
  424b2a:	fisubr WORD PTR [eax+ecx*4+0x65]
  424b2e:	xchg   edx,eax
  424b2f:	(bad)  
  424b30:	mov    bh,0xde
  424b32:	(bad)  
  424b33:	ficomp WORD PTR [edi-0x5a3a7e00]
  424b39:	xchg   edi,eax
  424b3a:	pop    ecx
  424b3b:	out    dx,eax
  424b3c:	mov    al,0x20
  424b3e:	adc    DWORD PTR [esi],ebp
  424b40:	push   0xffffffb2
  424b42:	sub    BYTE PTR [edx+0x7b420316],0xce
  424b49:	or     cl,BYTE PTR [edx]
  424b4b:	pop    esp
  424b4c:	xor    al,0xea
  424b4e:	jnp    0x424bac
  424b50:	pop    es
  424b51:	add    eax,0x6a2c7c1
  424b56:	jmp    0x292d4d07
  424b5b:	xor    BYTE PTR [ecx-0x54],ch
  424b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b5f:	inc    ebp
  424b60:	xchg   edi,eax
  424b61:	cmp    ebx,DWORD PTR [eax-0x4421d13c]
  424b67:	test   eax,0xdf533f3
  424b6c:	iret   
  424b6d:	cli    
  424b6e:	push   cs
  424b6f:	mov    bl,0x93
  424b71:	pop    esi
  424b72:	cmp    DWORD PTR [ebp+0x4],esi
  424b75:	fwait
  424b76:	aas    
  424b77:	mul    esi
  424b79:	xchg   ebp,eax
  424b7a:	jnp    0x424b7d
  424b7c:	jg     0x424b9b
  424b7e:	xor    DWORD PTR [ebx],0xe859af11
  424b84:	add    dh,BYTE PTR [ecx-0x5e]
  424b87:	icebp  
  424b88:	xchg   ecx,eax
  424b89:	popf   
  424b8a:	in     eax,0xca
  424b8c:	mov    ecx,0x10ea313a
  424b91:	fcomp  QWORD PTR [edi]
  424b93:	jae    0x424c12
  424b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b96:	push   ds
  424b97:	xchg   esp,eax
  424b98:	cmp    al,0xc9
  424b9a:	mov    edi,0x2d293e75
  424b9f:	mov    bh,0x0
  424ba1:	mov    ch,BYTE PTR [ebx-0x27249d62]
  424ba7:	push   esi
  424ba8:	and    esi,DWORD PTR [ebx-0x4e7ca408]
  424bae:	pop    ebp
  424baf:	outs   dx,BYTE PTR ds:[esi]
  424bb0:	int3   
  424bb1:	mov    bh,0x78
  424bb3:	jmp    0xefbc:0x84d3fb1
  424bba:	jl     0x424b69
  424bbc:	lock mul DWORD PTR [edi+0x4f]
  424bc0:	jb     0x424bd5
  424bc2:	ret    
  424bc3:	inc    ebp
  424bc4:	shr    BYTE PTR [ebp-0x18274c61],cl
  424bca:	or     BYTE PTR [ecx+0x29],bh
  424bcd:	or     eax,0xfa82c03c
  424bd2:	or     al,0xee
  424bd4:	ins    DWORD PTR es:[edi],dx
  424bd5:	ret    0x3532
  424bd8:	rcl    edx,cl
  424bda:	mov    ecx,DWORD PTR [edi+esi*2]
  424bdd:	sahf   
  424bde:	sbb    DWORD PTR ds:[esi-0x38b7d5c0],ebx
  424be5:	mov    ecx,0x3086afdb
  424bea:	frstor [ebx]
  424bec:	mov    esi,0x8e2b043a
  424bf1:	push   edx
  424bf2:	sbb    al,0xa8
  424bf4:	fs dec ecx
  424bf6:	cs mov fs,ebp
  424bf9:	fdivr  QWORD PTR [esi+0x2b]
  424bfc:	pop    es
  424bfd:	sbb    eax,0x73d21e06
  424c02:	cwde   
  424c03:	and    al,0x8a
  424c05:	mov    eax,ds:0xe5136c31
  424c0a:	iret   
  424c0b:	sti    
  424c0c:	pop    esp
  424c0d:	mov    ebp,0x86aa1166
  424c12:	mov    eax,0xb86cffc6
  424c17:	pop    esp
  424c18:	imul   ecx,DWORD PTR [edi+0x1e],0x6c
  424c1c:	pop    ds
  424c1d:	in     eax,0x28
  424c1f:	(bad)  
  424c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c21:	int    0xd9
  424c23:	call   0xafdd:0xfc1dcc78
  424c2a:	stos   BYTE PTR es:[edi],al
  424c2b:	sti    
  424c2c:	jo     0x424c08
  424c2e:	sub    DWORD PTR [ecx+0x67],ecx
  424c31:	pop    esp
  424c32:	outs   dx,BYTE PTR ds:[esi]
  424c33:	je     0x424c62
  424c35:	fwait
  424c36:	cwde   
  424c37:	push   cs
  424c38:	pop    ecx
  424c39:	jae    0x424bf7
  424c3b:	out    0xaa,eax
  424c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c3e:	test   BYTE PTR [ebx-0x284c3c46],dh
  424c44:	popa   
  424c45:	popf   
  424c46:	sti    
  424c47:	dec    edx
  424c48:	push   ebx
  424c49:	mov    gs,edx
  424c4b:	shl    DWORD PTR [ecx],0xfd
  424c4e:	loop   0x424c54
  424c50:	mov    ecx,0x4e21d3d1
  424c55:	mov    al,ds:0x960ba6bc
  424c5a:	add    al,0x95
  424c5c:	push   ss
  424c5d:	xchg   edi,eax
  424c5e:	repz xchg edx,eax
  424c60:	mov    ecx,DWORD PTR [esi-0x4d]
  424c63:	sbb    ch,0x46
  424c66:	inc    edx
  424c67:	or     BYTE PTR [ecx+esi*8],dl
  424c6a:	loope  0x424caa
  424c6c:	push   es
  424c6d:	sbb    dh,dh
  424c6f:	call   0x8368:0x61146657
  424c76:	(bad)  
  424c77:	mov    cs,WORD PTR [ebp+0x39]
  424c7a:	cmp    BYTE PTR [edi-0x4637cf66],ah
  424c80:	cli    
  424c81:	(bad)  
  424c82:	jg     0x424c89
  424c84:	sub    DWORD PTR [eax],edx
  424c86:	jbe    0x424cc7
  424c88:	xchg   ebp,eax
  424c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c8a:	adc    DWORD PTR [ebx],ebx
  424c8c:	push   eax
  424c8d:	lds    edi,FWORD PTR [edi]
  424c8f:	cld    
  424c90:	adc    BYTE PTR ds:0xdd7e5be7,cl
  424c96:	in     al,0x6c
  424c98:	push   ebp
  424c99:	mov    dh,0x28
  424c9b:	(bad)  
  424c9c:	pop    ds
  424c9d:	nop
  424c9e:	cmp    ebx,edi
  424ca0:	test   BYTE PTR gs:[ebp+0x2c],0xd
  424ca5:	cmp    eax,0x4917c0fd
  424caa:	xor    al,0x69
  424cac:	cmp    DWORD PTR [edx-0x7f],esi
  424caf:	mov    eax,0x54c7b583
  424cb4:	enter  0xf9a8,0x96
  424cb8:	jecxz  0x424cfb
  424cba:	call   0xa05527b3
  424cbf:	sbb    dh,dh
  424cc1:	inc    ebx
  424cc2:	mov    dh,0x37
  424cc4:	mov    edx,edi
  424cc6:	xchg   ecx,eax
  424cc7:	dec    edi
  424cc8:	cld    
  424cc9:	imul   ebx,DWORD PTR [ebx-0x1c4eaa0a],0xffffff80
  424cd0:	les    edi,FWORD PTR [ebx]
  424cd2:	cwde   
  424cd3:	sub    DWORD PTR [ecx-0xc],0xe5b7e0cc
  424cda:	(bad)  
  424cdb:	retf   
  424cdc:	js     0x424cfb
  424cde:	jmp    0x57c35283
  424ce3:	push   esi
  424ce4:	rcr    ebx,cl
  424ce6:	xrelease mov DWORD PTR [ebp+0x2f31999d],edi
  424ced:	xor    BYTE PTR [ebx],ah
  424cef:	ja     0x424ca4
  424cf1:	mov    edi,0x4825170c
  424cf6:	cmp    eax,0xd9aa8df1
  424cfb:	test   edi,ebx
  424cfd:	shr    dh,0x9b
  424d00:	xchg   ebp,eax
  424d01:	test   DWORD PTR [edi-0x60],eax
  424d04:	jmp    0x6724:0x9330164c
  424d0b:	xchg   ebx,eax
  424d0c:	(bad)  [esi+0x66]
  424d0f:	fild   QWORD PTR [eax]
  424d11:	jnp    0x424d63
  424d13:	ja     0x424d8b
  424d15:	adc    ebp,ecx
  424d17:	dec    ebx
  424d18:	xchg   ebx,eax
  424d19:	adc    al,BYTE PTR [eax-0x67]
  424d1c:	(bad)
  424d1f:	aam    0xbf
  424d21:	call   0x3b3d5ca3
  424d26:	xchg   esi,eax
  424d27:	clc    
  424d28:	(bad)  
  424d29:	js     0x424cf0
  424d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d2c:	fwait
  424d2d:	lods   al,BYTE PTR ds:[esi]
  424d2e:	shl    BYTE PTR [eax-0x59c9dd5e],1
  424d34:	jmp    0x3e4:0xdf5eda57
  424d3b:	sub    al,0x4c
  424d3d:	test   dh,0x5f
  424d40:	xchg   edi,eax
  424d41:	cmp    al,0x94
  424d43:	pop    ebx
  424d44:	mov    bh,0xdb
  424d46:	popf   
  424d47:	mov    edi,0xd7621496
  424d4c:	cs and ch,cl
  424d4f:	push   ecx
  424d50:	push   esi
  424d51:	adc    ch,BYTE PTR [ecx-0x80]
  424d54:	pop    ecx
  424d55:	pop    esi
  424d56:	sahf   
  424d57:	cmp    ah,dl
  424d59:	sbb    al,0x33
  424d5b:	sbb    DWORD PTR [ebx+0x68c00a86],0x56
  424d62:	mov    bl,0x80
  424d64:	lahf   
  424d65:	xchg   ecx,eax
  424d66:	cmp    eax,0xc9ae695d
  424d6b:	push   ebp
  424d6c:	mov    ah,BYTE PTR [ebx+0x7a64bebf]
  424d72:	ss xchg esp,eax
  424d74:	cld    
  424d75:	mov    esi,0x5fa17a99
  424d7a:	sub    DWORD PTR [ecx-0x65],edi
  424d7d:	dec    ecx
  424d7e:	ror    DWORD PTR [ebx-0x47dcb38d],1
  424d84:	pop    eax
  424d85:	mov    WORD PTR [ebp*8-0x4ea070e7],?
  424d8c:	fild   WORD PTR [esi]
  424d8e:	bound  edx,QWORD PTR [edx+0x8610818]
  424d94:	jp     0x424de9
  424d96:	sub    ecx,DWORD PTR [edi+0x48]
  424d99:	adc    eax,0x85d1ca36
  424d9e:	mov    eax,0x1ba1ce8b
  424da3:	ficomp WORD PTR [eax+0x73fe3384]
  424da9:	imul   DWORD PTR ds:0x12ce53df
  424daf:	ss inc edi
  424db1:	ret    
  424db2:	sub    dh,cl
  424db4:	out    dx,eax
  424db5:	neg    DWORD PTR [eax+0x50]
  424db8:	syscall 
  424dba:	pop    esi
  424dbb:	les    esi,FWORD PTR [ebx-0x2a6c26bd]
  424dc1:	pop    edi
  424dc2:	xor    BYTE PTR [eax-0x6a3f178c],dl
  424dc8:	ficomp WORD PTR [eax]
  424dca:	popa   
  424dcb:	cdq    
  424dcc:	inc    ecx
  424dcd:	out    dx,eax
  424dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dcf:	mov    ch,0x12
  424dd1:	mov    ebp,0x953e956
  424dd6:	sub    ah,ch
  424dd8:	fs jo  0x424de1
  424ddb:	fldcw  WORD PTR [edx]
  424ddd:	rol    cl,0xcc
  424de0:	fs jnp 0x424d7a
  424de3:	fdiv   QWORD PTR [esi+0x47]
  424de6:	jg     0x424e64
  424de8:	jge    0x424d81
  424dea:	aas    
  424deb:	js     0x424e12
  424ded:	sub    BYTE PTR [ebx+edi*8],dh
  424df0:	aas    
  424df1:	and    BYTE PTR [edx+0xc],ah
  424df4:	mov    ds:0x6d4aa19c,eax
  424df9:	out    dx,eax
  424dfa:	dec    esp
  424dfb:	cld    
  424dfc:	test   al,0xa7
  424dfe:	or     BYTE PTR [edx-0x6eac5a5d],ch
  424e04:	popf   
  424e05:	xchg   bl,bl
  424e07:	xor    DWORD PTR ds:[ecx],eax
  424e0a:	aad    0x56
  424e0c:	mov    WORD PTR [eax+0x285a4ca4],gs
  424e12:	inc    esi
  424e13:	neg    ah
  424e15:	stc    
  424e16:	fmul   QWORD PTR [edi]
  424e18:	inc    ecx
  424e19:	sar    BYTE PTR [esi],0x2
  424e1c:	cmp    al,BYTE PTR [eax+0x350bbbc3]
  424e22:	mov    ah,0xe
  424e24:	mov    ebp,0x2ac6439c
  424e29:	mov    eax,0xc93cc9a6
  424e2e:	repnz iret 
  424e30:	inc    ebp
  424e31:	dec    BYTE PTR ds:0xad7a4f4f
  424e37:	stos   DWORD PTR es:[edi],eax
  424e38:	jnp    0x424e28
  424e3a:	fs pop ss
  424e3c:	adc    eax,0x742cea
  424e41:	jg     0x424e0b
  424e43:	push   ds
  424e44:	fisubr WORD PTR [ebp-0x31]
  424e47:	imul   esp,DWORD PTR [esi],0x3d517267
  424e4d:	cmp    eax,0x122c041d
  424e52:	sbb    BYTE PTR [edx],dh
  424e54:	aas    
  424e55:	jmp    0x9def:0x4a21f6b2
  424e5c:	sti    
  424e5d:	shl    BYTE PTR [ebp+0x7a],0x52
  424e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e62:	out    dx,eax
  424e63:	pop    ebp
  424e64:	mov    al,0x64
  424e66:	push   ds
  424e67:	xor    eax,0x42f263f
  424e6c:	fmul   QWORD PTR [edx+0x462eaad3]
  424e72:	(bad)  [esi]
  424e74:	mov    ebx,0x687afc8e
  424e79:	adc    DWORD PTR [edi+0x39],eax
  424e7c:	sub    al,0x30
  424e7e:	fisub  DWORD PTR [ebp+0x26ecee2c]
  424e84:	add    al,BYTE PTR [edx+0x65]
  424e87:	fsubp  st(2),st
  424e89:	mov    esp,0x8fd11ae7
  424e8e:	fcmovne st,st(0)
  424e90:	adc    ah,bh
  424e92:	in     eax,0xf
  424e94:	and    al,ch
  424e96:	fcom   QWORD PTR [ecx-0x4b4358b1]
  424e9c:	push   0x8989b45b
  424ea1:	clc    
  424ea2:	adc    dh,BYTE PTR [ebx+0x71ec0e6]
  424ea8:	or     eax,0xe29445d2
  424ead:	aas    
  424eae:	gs adc al,0xa2
  424eb1:	jge    0xab687048
  424eb7:	add    BYTE PTR [ebx-0x4445bf1a],0x61
  424ebe:	xchg   esi,eax
  424ebf:	fimul  WORD PTR ds:0xe7016bf
  424ec5:	sub    al,0xd3
  424ec7:	loopne 0x424ee7
  424ec9:	push   cs
  424eca:	xchg   esp,eax
  424ecb:	cld    
  424ecc:	outs   dx,DWORD PTR ds:[esi]
  424ecd:	fnsave [edx-0x77]
  424ed0:	lahf   
  424ed1:	dec    edi
  424ed2:	ret    
  424ed3:	xchg   esi,eax
  424ed4:	xchg   ebp,eax
  424ed6:	add    al,BYTE PTR [ecx]
  424ed8:	mov    al,ds:0xdefbfec1
  424edd:	xor    al,0xbc
  424edf:	iret   
  424ee0:	mov    ds:0xbb434861,al
  424ee5:	sahf   
  424ee6:	jo     0x424f27
  424ee8:	mov    al,ds:0x6b66577e
  424eed:	jmp    0xcc20:0xa757a582
  424ef4:	jne    0x424e9b
  424ef6:	lock std 
  424ef8:	nop
  424ef9:	inc    eax
  424efa:	push   cs
  424efb:	inc    ecx
  424efc:	leave  
  424efd:	dec    ecx
  424efe:	add    eax,0x1c15012e
  424f03:	push   esi
  424f04:	xor    DWORD PTR [ebx],esi
  424f06:	cmp    eax,0x84be20ee
  424f0b:	pop    ds
  424f0c:	js     0x424f28
  424f0e:	and    eax,0x6c7cc9cb
  424f13:	push   eax
  424f14:	dec    esp
  424f15:	(bad)  
  424f16:	pop    esp
  424f17:	add    dl,dl
  424f19:	pop    ebp
  424f1a:	xor    eax,0x4d20717d
  424f1f:	add    ebx,DWORD PTR [esi+0x3c]
  424f22:	ret    0x2153
  424f25:	and    DWORD PTR ds:0x5a5c88c7,esi
  424f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f2c:	out    dx,eax
  424f2d:	and    BYTE PTR [ebx+0x4f36cdd1],0x89
  424f34:	add    al,0x8a
  424f36:	test   edi,eax
  424f38:	mov    ds:0x2fce766c,al
  424f3d:	and    al,0x12
  424f3f:	adc    al,0xf7
  424f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f42:	sbb    ebx,DWORD PTR [ecx-0x3b12e31]
  424f48:	xor    al,0x29
  424f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f4b:	cwde   
  424f4c:	std    
  424f4d:	jp     0x424f73
  424f4f:	sub    BYTE PTR [edx+0x18e1a4dc],0xb0
  424f56:	add    bl,bh
  424f58:	(bad)  
  424f59:	jnp    0x424f5e
  424f5b:	or     edx,esi
  424f5d:	je     0x424fdd
  424f5f:	(bad)
  424f62:	push   esi
  424f63:	mov    ch,0xc7
  424f65:	or     al,0xa9
  424f67:	xor    edi,DWORD PTR [edx]
  424f69:	dec    ecx
  424f6a:	lock out dx,al
  424f6c:	jnp    0x424feb
  424f6e:	push   ebp
  424f6f:	and    dl,cl
  424f71:	push   cs
  424f72:	add    al,0x60
  424f74:	ds pop edi
  424f76:	aad    0xd7
  424f78:	aad    0xcf
  424f7a:	xor    ecx,DWORD PTR [eax-0x5a8272b9]
  424f80:	lods   al,BYTE PTR ds:[esi]
  424f81:	dec    esi
  424f82:	xchg   edx,eax
  424f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f84:	daa    
  424f85:	popa   
  424f86:	fisub  DWORD PTR [ecx-0x7b33e0d2]
  424f8c:	mov    cl,0x5f
  424f8e:	sub    al,0x5b
  424f90:	pop    edx
  424f91:	adc    al,0x27
  424f93:	retf   
  424f94:	mov    al,ds:0xb39132c9
  424f99:	push   es
  424f9a:	mov    al,ds:0xed0587d
  424f9f:	vminpd ymm1,ymm6,YMMWORD PTR [esi+edi*8]
  424fa4:	ror    eax,1
  424fa6:	push   edx
  424fa7:	mov    dh,0x94
  424fa9:	add    eax,0x4b7898f8
  424fae:	(bad)  
  424faf:	stc    
  424fb0:	dec    ebx
  424fb1:	mov    al,0x21
  424fb3:	and    ecx,eax
  424fb5:	mov    edx,0xaef2a6b9
  424fba:	cmp    DWORD PTR ds:0x26f2ba50,ebx
  424fc0:	xor    DWORD PTR [edx*2-0xf31274a],edx
  424fc7:	xchg   esp,eax
  424fc8:	jb     0x424f5e
  424fca:	and    al,0x9c
  424fcc:	pop    eax
  424fcd:	rcr    DWORD PTR [edx+0x2],cl
  424fd0:	dec    esi
  424fd1:	adc    al,BYTE PTR [edx]
  424fd3:	mov    edx,ds
  424fd5:	data16 fdiv QWORD PTR [esi+0x2dc851b7]
  424fdc:	cld    
  424fdd:	arpl   WORD PTR [esi+0x10700a81],bx
  424fe3:	loopne 0x424f96
  424fe5:	iret   
  424fe6:	icebp  
  424fe7:	loop   0x424fc4
  424fe9:	sbb    al,0xfc
  424feb:	mov    esp,0x4f8fa779
  424ff0:	adc    BYTE PTR [eax+0x2f],dl
  424ff3:	sbb    edx,DWORD PTR [ebx-0x73]
  424ff6:	inc    ebp
  424ff7:	mov    dl,0xe6
  424ff9:	outs   dx,BYTE PTR ds:[esi]
  424ffa:	sub    BYTE PTR [ebx],ah
  424ffc:	inc    esp
  424ffd:	inc    ecx
  424ffe:	int3   
  424fff:	cmp    eax,0x9a38066d
  425004:	jmp    0x8c6fa732
  425009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42500a:	dec    edi
  42500b:	pusha  
  42500c:	test   eax,0xff2ab2b7
  425012:	push   edi
  425013:	lahf   
  425014:	je     0x424fdd
  425016:	mov    es,WORD PTR [esi]
  425018:	fild   QWORD PTR [ebx+0x50]
  42501b:	shr    BYTE PTR [ecx+0x13],cl
  42501e:	(bad)  
  425020:	sub    DWORD PTR [ebp+0x77],edx
  425023:	stos   DWORD PTR es:[edi],eax
  425024:	pop    ebx
  425025:	sub    BYTE PTR [esi+0x23],bl
  425028:	cmp    al,0xc3
  42502a:	push   0xffffff96
  42502c:	imul   esp,ebp,0x726d2085
  425032:	out    0xa,eax
  425034:	iret   
  425035:	mov    cs,WORD PTR ds:0x5cfe74f
  42503b:	in     eax,dx
  42503c:	jmp    0x425081
  42503e:	jg     0x4250a3
  425040:	or     eax,0x18dc22bb
  425045:	xchg   edi,eax
  425046:	and    dh,cl
  425048:	lahf   
  425049:	push   ebx
  42504a:	pop    eax
  42504b:	or     esp,DWORD PTR [ebx+0x45]
  42504e:	das    
  42504f:	mul    BYTE PTR [eax+0x13]
  425052:	sub    DWORD PTR [ebx-0x3e],esi
  425055:	add    BYTE PTR [edi-0x60],ah
  425058:	leave  
  425059:	sbb    BYTE PTR [edx+0x1e2c72],ch
  42505f:	jbe    0x42505f
  425061:	cmp    BYTE PTR [edi],dl
  425063:	jge    0x425023
  425065:	sbb    eax,0xea4cb452
  42506a:	lock dec edx
  42506c:	mov    ds,esp
  42506e:	mov    ecx,0xdcb06e78
  425073:	sub    dh,BYTE PTR [ebx-0x326c4f3e]
  425079:	jp     0x42506a
  42507b:	jge    0x42501f
  42507d:	jo     0x425045
  42507f:	push   ds
  425080:	cmc    
  425081:	frstor [ebx+esi*2-0x1d18b83d]
  425088:	nop
  425089:	dec    ebp
  42508a:	xor    ah,0x8
  42508d:	jmp    0x8b896b48
  425092:	and    ebp,DWORD PTR [ecx]
  425094:	clc    
  425095:	stos   DWORD PTR es:[edi],eax
  425096:	mov    ebp,0x9723e8e9
  42509b:	cmp    BYTE PTR [ecx],cl
  42509d:	and    dh,cl
  42509f:	xor    BYTE PTR [esi],ah
  4250a1:	mov    WORD PTR [ebx+0x1e1f55a8],fs
  4250a7:	sbb    cl,dl
  4250a9:	iret   
  4250aa:	shr    BYTE PTR [esi+ecx*2],0x1d
  4250ae:	xor    esi,ebp
  4250b0:	adc    eax,eax
  4250b2:	ja     0x4250df
  4250b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250b5:	push   ss
  4250b6:	xchg   BYTE PTR [edx],dl
  4250b8:	sbb    ecx,0xb004862b
  4250be:	fnstcw WORD PTR [ecx-0x6b]
  4250c1:	in     eax,dx
  4250c2:	adc    al,0xbd
  4250c4:	mov    eax,0xc60b7a38
  4250c9:	mov    ch,0x3a
  4250cb:	adc    eax,DWORD PTR [edx+edx*4]
  4250ce:	fbstp  TBYTE PTR [ebp+0x33]
  4250d1:	push   edx
  4250d2:	push   ecx
  4250d3:	mov    bh,0x72
  4250d5:	outs   dx,BYTE PTR ds:[esi]
  4250d6:	or     ch,dh
  4250d8:	out    0xd,al
  4250da:	mov    al,0x63
  4250dc:	add    BYTE PTR [ebp-0x44],0x3d
  4250e0:	iret   
  4250e1:	and    BYTE PTR [esi-0x215dc038],ah
  4250e7:	retf   
  4250e8:	mov    bl,0xa9
  4250ea:	loope  0x42507e
  4250ec:	aad    0x1f
  4250ee:	je     0x4250c5
  4250f0:	cmp    ah,BYTE PTR [edx-0x341eb3f6]
  4250f6:	aam    0xa7
  4250f8:	movlps xmm4,QWORD PTR [edi-0x346b0e63]
  4250ff:	xchg   edx,eax
  425100:	and    eax,0xe3cddfed
  425105:	jg     0x425108
  425107:	sbb    edx,esp
  425109:	push   0x98955946
  42510e:	das    
  42510f:	jl     0x425132
  425111:	inc    ebx
  425112:	adc    dh,al
  425114:	je     0x425186
  425116:	jmp    0x2900:0xf3ba6d48
  42511d:	test   eax,0x49f1e803
  425122:	imul   edi,DWORD PTR [eax+0x5e],0xffffffc3
  425126:	les    esi,FWORD PTR [edx+eiz*2-0x46015457]
  42512d:	adc    esp,DWORD PTR ds:0x83880e31
  425133:	xchg   BYTE PTR [ebp+edi*1-0x50270858],ch
  42513a:	inc    ebp
  42513b:	cmp    DWORD PTR [edi+esi*8],edx
  42513e:	add    eax,0xb48914f1
  425143:	push   0x21f2a520
  425148:	data16 (bad) 
  42514a:	mov    cl,0x19
  42514c:	add    eax,0xb520a14
  425151:	rcl    BYTE PTR [esi-0x76e0c49b],cl
  425157:	lock xlat BYTE PTR ds:[ebx]
  425159:	fild   DWORD PTR [esi+0x6f]
  42515c:	cmp    DWORD PTR [esp+edx*4+0x3f],esp
  425160:	loop   0x425133
  425162:	jae    0x42516c
  425164:	inc    edx
  425165:	adc    cl,BYTE PTR [eax-0x4121fa47]
  42516b:	adc    esp,ebp
  42516d:	mov    edi,0x8432202d
  425172:	mov    esp,0x90646d13
  425177:	out    dx,al
  425178:	push   0x1e
  42517a:	lods   eax,DWORD PTR ds:[esi]
  42517b:	jae    0x4251a6
  42517d:	retf   
  42517e:	std    
  42517f:	jmp    0xab40:0x8f5dc7c1
  425186:	xlat   BYTE PTR ds:[ebx]
  425187:	(bad)  
  425188:	scas   eax,DWORD PTR es:[edi]
  425189:	mov    ebp,0xaaaee7d2
  42518e:	pop    ss
  42518f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425190:	ror    ebx,1
  425192:	in     al,0x77
  425194:	mov    ebp,0xc8393e82
  425199:	mov    BYTE PTR [eax-0x620f736b],ah
  42519f:	and    ch,BYTE PTR [esi-0x2e]
  4251a2:	aad    0xbd
  4251a4:	clc    
  4251a5:	pop    ecx
  4251a6:	pusha  
  4251a7:	(bad)  
  4251a8:	xchg   DWORD PTR [edi+0x22],edi
  4251ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251ac:	lods   eax,DWORD PTR ds:[esi]
  4251ad:	xor    BYTE PTR [ebx],ch
  4251af:	std    
  4251b0:	sahf   
  4251b1:	or     BYTE PTR [ebp-0x63],cl
  4251b4:	fimul  DWORD PTR [eax+0x2b]
  4251b7:	mov    BYTE PTR [ebx+0x3c],bl
  4251ba:	je     0x4251a8
  4251bc:	cmc    
  4251bd:	iret   
  4251be:	test   DWORD PTR [ebp+0x71b569d3],esi
  4251c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251c5:	inc    ecx
  4251c6:	enter  0xb8a8,0xd0
  4251ca:	cs call 0x76f4edc0
  4251d0:	mov    ss,WORD PTR [ecx+0x18]
  4251d3:	mov    ecx,esp
  4251d5:	sti    
  4251d6:	sub    dh,BYTE PTR [ebp-0x79]
  4251d9:	push   ds
  4251da:	mov    al,ds:0x9d8617c
  4251df:	push   ebp
  4251e0:	push   esp
  4251e1:	int3   
  4251e2:	cmp    edi,eax
  4251e4:	lock mov ds,WORD PTR [ebp-0x25]
  4251e8:	cmc    
  4251e9:	aam    0x9e
  4251eb:	pop    ss
  4251ec:	push   ecx
  4251ed:	cdq    
  4251ee:	(bad)  
  4251ef:	adc    ah,BYTE PTR [edx]
  4251f1:	pop    edi
  4251f2:	cmp    dl,BYTE PTR [edi-0x2a30bdee]
  4251f8:	fucomp st(6)
  4251fa:	fimul  WORD PTR [eax]
  4251fc:	or     DWORD PTR [edx+0x4ff1e3a1],ecx
  425202:	jge    0x4251f8
  425204:	add    al,0x36
  425206:	nop
  425207:	lds    edx,FWORD PTR [esi]
  425209:	addr16 cmp eax,0xb4c50a90
  42520f:	cmp    DWORD PTR [edx+0x6c],edx
  425212:	not    DWORD PTR [ebx+0x2c]
  425215:	arpl   WORD PTR [ecx-0xe],sp
  425218:	inc    esi
  425219:	push   cs
  42521a:	mov    dh,0x71
  42521c:	mov    ds:0xfda9d6f7,al
  425221:	push   0xa4e3cc9f
  425226:	pop    eax
  425227:	es jne 0x425256
  42522a:	cmp    ebp,ecx
  42522c:	aaa    
  42522d:	jmp    0x73a8112d
  425232:	sub    eax,0xb6a5e296
  425237:	push   es
  425238:	add    ch,BYTE PTR [ebx-0x39]
  42523b:	inc    eax
  42523c:	inc    esp
  42523d:	dec    esp
  42523e:	xchg   DWORD PTR [eax],esp
  425240:	and    BYTE PTR [edi-0x3d43a136],ch
  425246:	loope  0x4252b9
  425248:	and    bh,BYTE PTR [eax-0x110616be]
  42524e:	pop    eax
  42524f:	and    esp,eax
  425251:	cmp    dh,BYTE PTR [ebx]
  425253:	pop    eax
  425254:	jae    0x4251e2
  425256:	and    BYTE PTR ds:0x1359290b,0xdd
  42525d:	xor    dl,BYTE PTR [eax]
  42525f:	ss (bad) 
  425261:	out    dx,al
  425262:	mov    edx,0xdb1adf39
  425267:	es ins BYTE PTR es:[edi],dx
  425269:	mov    edi,0xd4b67197
  42526e:	push   0xffffff8f
  425270:	fwait
  425271:	mov    eax,ds:0x65d911d3
  425276:	retf   
  425277:	and    edx,DWORD PTR [ebx]
  425279:	out    0xba,al
  42527b:	lds    edi,FWORD PTR [ecx]
  42527d:	jno    0x425250
  42527f:	and    ecx,edi
  425281:	pop    esi
  425282:	ins    DWORD PTR es:[edi],dx
  425283:	test   DWORD PTR [esi],eax
  425285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425286:	std    
  425287:	jno    0x4252d9
  425289:	xor    DWORD PTR [ecx],edx
  42528b:	xchg   ebp,eax
  42528c:	adc    bh,0xdc
  42528f:	adc    eax,0xc24ab611
  425294:	cli    
  425295:	xchg   esi,eax
  425296:	pop    ebx
  425297:	adc    cl,BYTE PTR [ebp-0x70]
  42529a:	and    bh,bh
  42529c:	mov    ch,0x1a
  42529e:	out    0x12,al
  4252a0:	cmp    edi,ebx
  4252a2:	push   cs
  4252a3:	dec    esi
  4252a4:	jmp    0x42523a
  4252a6:	fmul   st,st(7)
  4252a8:	mov    BYTE PTR [edi+esi*1-0x67],bl
  4252ac:	ins    BYTE PTR es:[edi],dx
  4252ad:	(bad)  
  4252ae:	cmp    dl,BYTE PTR [eax+0x1b]
  4252b1:	xor    bh,BYTE PTR ds:0x87c0b1e8
  4252b7:	pop    eax
  4252b8:	fisttp QWORD PTR [edx-0x6e]
  4252bb:	and    DWORD PTR [edi+0x20],esi
  4252be:	cmovbe ecx,DWORD PTR [esi+0x4b04b0d2]
  4252c5:	xor    BYTE PTR ds:0x4c212b87,bl
  4252cb:	fnstenv [ebx]
  4252cd:	inc    esi
  4252ce:	aam    0x2b
  4252d0:	inc    ebx
  4252d1:	xchg   ch,bh
  4252d3:	sbb    BYTE PTR [edi+0x2f],bl
  4252d6:	sahf   
  4252d7:	cmc    
  4252d8:	xchg   esp,eax
  4252d9:	mov    edi,0x138a944c
  4252de:	sub    BYTE PTR ds:0x2a116a10,dh
  4252e4:	sbb    edi,DWORD PTR [edi-0x50]
  4252e7:	int3   
  4252e8:	cmc    
  4252e9:	jge    0x42532a
  4252eb:	in     al,0xe8
  4252ed:	ret    
  4252ee:	int3   
  4252ef:	adc    BYTE PTR [ebx],ch
  4252f1:	cld    
  4252f2:	and    BYTE PTR [eax-0x25],ch
  4252f5:	xchg   esi,eax
  4252f6:	mul    DWORD PTR [ebx-0x35]
  4252f9:	cmp    bl,BYTE PTR [edx]
  4252fb:	fsub   st,st(0)
  4252fd:	das    
  4252fe:	adc    ebp,DWORD PTR [ebx+0x3fb5b0f9]
  425304:	or     ebx,DWORD PTR [ecx-0x55]
  425307:	inc    ebx
  425308:	shl    DWORD PTR ds:0xd1b5284c,cl
  42530e:	mov    esp,0x42591735
  425313:	popa   
  425314:	outs   dx,BYTE PTR ds:[esi]
  425315:	outs   dx,DWORD PTR ds:[esi]
  425316:	fscale 
  425318:	sbb    eax,DWORD PTR [esi+eax*8]
  42531b:	lock xor ebx,DWORD PTR cs:[esi+0xc5bfb16]
  425323:	sbb    al,0x36
  425325:	xchg   edx,eax
  425326:	sub    eax,0x163f6e45
  42532b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42532c:	xchg   BYTE PTR [ecx+0x1f],dh
  42532f:	leave  
  425330:	addr16 pop edi
  425332:	xchg   esi,eax
  425333:	jns    0x4253ab
  425335:	add    ebp,DWORD PTR [edi+0x4306bc7]
  42533b:	retf   0x4ee1
  42533e:	mov    bl,0xbe
  425340:	popf   
  425341:	outs   dx,BYTE PTR ds:[esi]
  425342:	hlt    
  425343:	pop    ecx
  425344:	in     al,0x8e
  425346:	sahf   
  425347:	popf   
  425348:	jp     0x4252dc
  42534a:	add    edi,ecx
  42534c:	fnsave [ebp+0x5d01bc43]
  425352:	sbb    bh,0xf9
  425355:	push   cs
  425356:	clc    
  425357:	ret    0x458
  42535a:	lock xchg edi,eax
  42535c:	sahf   
  42535d:	sar    BYTE PTR [ebp+0x7cae4881],1
  425363:	push   cs
  425364:	arpl   WORD PTR [edi],cx
  425366:	jg     0x42534e
  425368:	mov    esp,ebp
  42536a:	out    0x20,al
  42536c:	je     0x425355
  42536e:	dec    edi
  42536f:	pop    ss
  425370:	jg     0x4253e6
  425372:	xor    dh,BYTE PTR [edi]
  425374:	in     al,dx
  425375:	cmc    
  425376:	inc    eax
  425377:	ins    DWORD PTR es:[edi],dx
  425378:	je     0x4253e8
  42537a:	push   esp
  42537b:	dec    esp
  42537c:	out    dx,eax
  42537d:	add    DWORD PTR ds:0x2e6c044a,esp
  425383:	xor    eax,0x13cfc791
  425388:	nop
  425389:	fwait
  42538a:	xor    eax,0xa3a4397f
  42538f:	push   ebp
  425390:	test   DWORD PTR [ecx*4+0x2942d026],ecx
  425397:	add    al,0x16
  425399:	pusha  
  42539a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42539b:	xchg   ebx,ecx
  42539d:	test   BYTE PTR [edi-0x30d0b20a],ch
  4253a3:	pop    esi
  4253a4:	push   edx
  4253a5:	dec    edi
  4253a6:	ins    BYTE PTR es:[edi],dx
  4253a7:	and    BYTE PTR [ebx],ah
  4253a9:	push   edi
  4253aa:	repz fs jecxz 0x425342
  4253ae:	xor    DWORD PTR [ebx-0x6e3d689a],esi
  4253b4:	test   ch,cl
  4253b6:	pop    esp
  4253b7:	and    bl,BYTE PTR [eax]
  4253b9:	jle    0x42537f
  4253bb:	nop
  4253bc:	inc    esp
  4253bd:	inc    esi
  4253be:	fisub  DWORD PTR [edi+0x3]
  4253c1:	inc    eax
  4253c2:	dec    ecx
  4253c3:	or     al,BYTE PTR [esi-0x13a820a1]
  4253c9:	add    ecx,esi
  4253cb:	pop    edi
  4253cc:	sbb    edi,DWORD PTR [eax+0x4b7f560]
  4253d2:	call   0xf7ac:0xe74ac177
  4253d9:	jbe    0x425456
  4253db:	sbb    al,BYTE PTR [edi+0x4b]
  4253de:	jmp    0xe160:0x95afde37
  4253e5:	into   
  4253e6:	mov    bl,0x5e
  4253e8:	mov    ds:0xf439b339,eax
  4253ed:	les    ecx,FWORD PTR [edx]
  4253ef:	loope  0x425371
  4253f1:	in     eax,dx
  4253f2:	pop    ebp
  4253f3:	add    BYTE PTR [esi-0x35],ch
  4253f6:	das    
  4253f7:	ja     0x4253ba
  4253f9:	push   edi
  4253fa:	jbe    0x425415
  4253fc:	fldpi  
  4253fe:	repz shr eax,cl
  425401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425402:	mov    ds:0xa4f77984,al
  425407:	mov    bl,0xe4
  425409:	pop    ds
  42540a:	push   ds
  42540b:	dec    ecx
  42540c:	imul   edi,ecx,0x9a2e82db
  425412:	xor    eax,0x33e5e8b4
  425417:	fs loop 0x4253e0
  42541a:	aad    0x4c
  42541c:	loope  0x4253e7
  42541e:	sub    DWORD PTR [esi-0x4d],0x7f4c67b3
  425425:	cmp    eax,DWORD PTR [ebx+0x1c]
  425428:	sbb    DWORD PTR [eax+0x46a37923],edi
  42542e:	sub    eax,0x412d345
  425433:	sub    al,0x2d
  425435:	xor    bl,BYTE PTR [ecx]
  425437:	xor    al,0xb
  425439:	adc    cl,BYTE PTR [ebx]
  42543b:	imul   eax,esi,0x3521482a
  425441:	fs popa 
  425443:	push   ebp
  425444:	push   esi
  425445:	xchg   edx,eax
  425446:	or     BYTE PTR [ecx+0x7e],bl
  425449:	cmp    dh,0x98
  42544c:	pop    ebp
  42544d:	jmp    0x425400
  42544f:	pop    ebx
  425450:	adc    DWORD PTR [ebx],esi
  425452:	push   edi
  425453:	int3   
  425454:	in     al,0x33
  425456:	xchg   esp,eax
  425457:	mov    ch,BYTE PTR [ebp+0x12]
  42545a:	fcomp  DWORD PTR [edi]
  42545c:	dec    edi
  42545d:	cmp    eax,0x27
  425460:	mov    BYTE PTR [ebp+eax*4-0x50],al
  425464:	mov    ecx,0x49254d7
  425469:	xchg   ebx,eax
  42546a:	inc    esp
  42546b:	mov    al,0x66
  42546d:	icebp  
  42546e:	push   ds
  42546f:	call   0x5ceb9e3f
  425474:	add    ah,ah
  425476:	cmp    al,0xaa
  425478:	mov    BYTE PTR [ebp+edi*1-0x54],bh
  42547c:	cli    
  42547d:	enter  0xb726,0xa3
  425481:	sub    al,0xcc
  425483:	(bad)  
  425484:	jae    0x42543f
  425486:	xor    al,0x4c
  425488:	xchg   BYTE PTR [edi-0x35b2975e],cl
  42548e:	cli    
  42548f:	repnz mov esi,0xab6dd536
  425495:	in     eax,0x7e
  425497:	mov    bl,0x60
  425499:	inc    esp
  42549a:	pop    ds
  42549b:	mov    DWORD PTR [ecx-0x49],ecx
  42549e:	sar    DWORD PTR [edx],0x9
  4254a1:	xchg   esp,eax
  4254a2:	mov    ds:0x1569257b,al
  4254a7:	aaa    
  4254a8:	ss sbb eax,0x15f4031f
  4254ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254af:	ror    DWORD PTR [ebx],1
  4254b1:	lea    ebx,[ebx+0x3b]
  4254b4:	sahf   
  4254b5:	lods   al,BYTE PTR ds:[esi]
  4254b6:	imul   DWORD PTR [esi]
  4254b8:	inc    ebp
  4254b9:	jo     0x42547e
  4254bb:	fdiv   QWORD PTR [ebx]
  4254bd:	shr    BYTE PTR [esp+edi*8+0x7d],0x5c
  4254c2:	imul   edi,DWORD PTR [edi+0xd703d1c],0x0
  4254c9:	jnp    0x425472
  4254cb:	fcmovu st,st(6)
  4254cd:	repz gs mov bh,0x1f
  4254d1:	mov    ds:0x23f6bfc1,al
  4254d6:	cmp    al,0xa1
  4254d8:	in     eax,0xe0
  4254da:	sar    BYTE PTR [ecx+ecx*1-0x2f],cl
  4254de:	push   esp
  4254df:	aas    
  4254e0:	jg     0x425534
  4254e2:	lods   eax,DWORD PTR ds:[esi]
  4254e3:	call   0x30d834ed
  4254e8:	mov    WORD PTR [edx],ss
  4254ea:	inc    edi
  4254eb:	mov    ebp,0x22e6e57e
  4254f0:	icebp  
  4254f1:	or     bl,bl
  4254f3:	jp     0x425515
  4254f5:	mov    al,0x9f
  4254f7:	gs or  al,0x4a
  4254fa:	inc    esp
  4254fb:	mov    edi,ecx
  4254fd:	xchg   esp,eax
  4254fe:	fs pop ebp
  425500:	add    eax,0x2e9101fa
  425505:	loopne 0x4254ce
  425507:	mov    BYTE PTR [ebx],bh
  425509:	inc    ebp
  42550a:	or     ebp,DWORD PTR ds:0x9e6485b4
  425510:	adc    BYTE PTR [ecx-0x9],dh
  425513:	jne    0x425495
  425515:	lods   eax,DWORD PTR ds:[esi]
  425516:	jne    0x425580
  425518:	jg     0x4254cf
  42551a:	xor    DWORD PTR [edi-0x4ca11a9],ecx
  425520:	xor    eax,0x194a9ee5
  425525:	sub    ecx,esi
  425527:	sub    ch,BYTE PTR [esi-0x6a33094a]
  42552d:	and    al,0xec
  42552f:	adc    eax,DWORD PTR [eax]
  425531:	inc    ebx
  425532:	shl    DWORD PTR [ecx],0x8a
  425535:	adc    DWORD PTR [ecx],eax
  425537:	popf   
  425538:	xor    eax,0xd1161c47
  42553d:	add    dh,BYTE PTR [edi+0x5a392ec]
  425543:	sub    edx,esp
  425545:	ins    BYTE PTR es:[edi],dx
  425546:	or     DWORD PTR [esi],ebp
  425548:	xor    ebx,ebx
  42554a:	fiadd  DWORD PTR [ecx+eiz*8+0x6f2dcb54]
  425551:	cmp    bl,cl
  425553:	xor    ch,BYTE PTR [edi+eax*1]
  425556:	and    eax,0xa33f045e
  42555b:	pop    edx
  42555c:	arpl   WORD PTR [eax+eiz*8+0x3b],bx
  425560:	fwait
  425561:	adc    edx,esi
  425563:	mov    ah,0xb1
  425565:	or     eax,0xb4597216
  42556a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42556b:	inc    ebx
  42556c:	pushf  
  42556d:	(bad)  
  42556f:	pop    eax
  425570:	loopne 0x425570
  425572:	loopne 0x425586
  425574:	lods   al,BYTE PTR ds:[esi]
  425575:	aas    
  425576:	dec    edx
  425577:	cmp    al,0x4d
  425579:	mov    edi,DWORD PTR [eax-0x7662646b]
  42557f:	adc    al,BYTE PTR [edi-0x24b20442]
  425585:	(bad)  
  425587:	stos   BYTE PTR es:[edi],al
  425588:	jnp    0x4255a0
  42558a:	in     eax,0x5c
  42558c:	sti    
  42558d:	mov    es:0xe7db41d6,eax
  425593:	mov    edx,0xb2000108
  425598:	mov    dh,0x58
  42559a:	test   eax,0xb3763272
  42559f:	and    cl,BYTE PTR [esi+0x76afd293]
  4255a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255a6:	inc    ebx
  4255a7:	ret    
  4255a8:	stos   DWORD PTR es:[edi],eax
  4255a9:	push   eax
  4255aa:	dec    ebp
  4255ab:	mov    bl,0xd4
  4255ad:	pop    ebx
  4255ae:	icebp  
  4255af:	loope  0x4255cc
  4255b1:	add    eax,0xde21a2f9
  4255b6:	push   ebp
  4255b7:	push   edx
  4255b8:	dec    ecx
  4255b9:	hlt    
  4255ba:	and    ebx,eax
  4255bc:	loop   0x425612
  4255be:	rcl    BYTE PTR [edi-0x208ce3a7],cl
  4255c4:	(bad)  
  4255c6:	fld    DWORD PTR [edx]
  4255c8:	call   0x1f4de712
  4255cd:	inc    edx
  4255ce:	ss inc edi
  4255d0:	out    0xd0,eax
  4255d2:	outs   dx,BYTE PTR ds:[esi]
  4255d3:	pop    edx
  4255d4:	mov    ds:0xef2825d7,al
  4255d9:	ficom  WORD PTR [esi-0x5f]
  4255dc:	and    eax,0x79704238
  4255e1:	sar    DWORD PTR [eax-0x58],cl
  4255e4:	dec    ecx
  4255e5:	out    0x6b,al
  4255e7:	mov    al,0xa6
  4255e9:	imul   eax,DWORD PTR [eax+edi*1-0x7fb2068e],0xb1e1914e
  4255f4:	sbb    eax,0xebcef8f4
  4255f9:	pop    edx
  4255fa:	push   es
  4255fb:	pop    ecx
  4255fc:	xlat   BYTE PTR ds:[ebx]
  4255fd:	mov    ch,BYTE PTR [edi+0x23]
  425600:	mov    dl,0x49
  425602:	test   eax,0x6345640d
  425607:	add    BYTE PTR [ecx-0x4c34493e],bl
  42560d:	jmp    0x5162a72d
  425612:	pop    ebp
  425613:	push   0xffffffd7
  425615:	mov    edi,0xde5793dd
  42561a:	sahf   
  42561b:	add    edx,eax
  42561d:	int    0x7f
  42561f:	adc    DWORD PTR [ecx+0x7ed9cc5a],ebx
  425625:	out    0xef,al
  425627:	ret    0x675a
  42562a:	paddusw mm1,QWORD PTR [ebp-0x14]
  42562e:	dec    edi
  42562f:	and    cl,cl
  425631:	jb     0x425657
  425633:	cmc    
  425634:	sub    edx,DWORD PTR [esi-0x10]
  425637:	push   0xfffffff4
  425639:	arpl   WORD PTR [edi-0x177638ba],bx
  42563f:	ja     0x4256b0
  425641:	pop    esi
  425642:	jb     0x425637
  425644:	or     ah,dh
  425646:	mov    edi,0x225f237d
  42564b:	div    edx
  42564d:	push   esi
  42564e:	int    0xc
  425650:	scas   eax,DWORD PTR es:[edi]
  425651:	xchg   ebx,eax
  425652:	inc    ebp
  425653:	push   ss
  425654:	jb     0x4256c0
  425656:	retf   0x60ac
  425659:	push   ebx
  42565a:	or     dh,dl
  42565c:	fbld   TBYTE PTR [eax-0x1a]
  42565f:	out    dx,eax
  425660:	mov    eax,0x82883711
  425665:	aas    
  425666:	and    esp,DWORD PTR [ecx-0x350580b0]
  42566c:	push   ds
  42566d:	jnp    0x4256bb
  42566f:	mov    bl,0x89
  425671:	xchg   esp,eax
  425672:	cli    
  425673:	clc    
  425674:	test   ecx,esp
  425676:	js     0x4256ba
  425678:	dec    ebp
  425679:	js     0x425684
  42567b:	aaa    
  42567c:	pushf  
  42567d:	add    al,0x82
  42567f:	adc    eax,0x41d78193
  425684:	jae    0x425626
  425686:	mov    al,0xf9
  425688:	adc    BYTE PTR [esi-0x2e],ah
  42568b:	mov    ds:0xa591c1fc,al
  425690:	mov    BYTE PTR [esi+0x5c],al
  425693:	xchg   eax,edi
  425695:	or     ebx,DWORD PTR [ebx+esi*4]
  425698:	sbb    eax,0xeccdbe4c
  42569d:	or     BYTE PTR [edx+0x7c033e51],ah
  4256a3:	cmp    DWORD PTR [esi+0x6e],0xffffffab
  4256a7:	pop    ebx
  4256a8:	pusha  
  4256a9:	pop    ebp
  4256aa:	jmp    0xe9c1:0x175f0cd3
  4256b1:	fld    st(1)
  4256b3:	xor    al,0x4a
  4256b5:	cmp    BYTE PTR [edx+0x5d],0x9e
  4256b9:	loopne 0x42564e
  4256bb:	inc    eax
  4256bc:	je     0x42566a
  4256be:	mov    edi,edx
  4256c0:	retf   0xda3
  4256c3:	je     0x4256ed
  4256c5:	mov    ecx,0x403fc71
  4256ca:	sbb    BYTE PTR [ebx],bl
  4256cc:	mov    ah,0xd8
  4256ce:	fidiv  WORD PTR [eax]
  4256d0:	sub    BYTE PTR [ecx-0x34],dh
  4256d3:	push   es
  4256d4:	mov    BYTE PTR [esi-0x43c0d049],dh
  4256da:	in     al,0x4b
  4256dc:	adc    ebx,DWORD PTR [edx+0x3c]
  4256df:	push   cs
  4256e0:	(bad)  
  4256e1:	push   ss
  4256e2:	psubd  mm6,QWORD PTR [edi+0x20]
  4256e6:	lods   al,BYTE PTR ds:[esi]
  4256e7:	mov    ebp,0xf707749
  4256ec:	dec    edx
  4256ed:	pop    ds
  4256ee:	mov    dh,0xd9
  4256f0:	stos   BYTE PTR es:[edi],al
  4256f1:	ds xchg ax,ax
  4256f4:	div    DWORD PTR [edi+0x63cee1a8]
  4256fa:	adc    al,0x31
  4256fc:	pop    esp
  4256fd:	and    eax,0x827e937b
  425702:	inc    edx
  425703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425704:	sub    BYTE PTR [ecx],bh
  425706:	shr    BYTE PTR [ebx+0x48],0xf6
  42570a:	ret    
  42570b:	or     BYTE PTR [edx+ebp*1],dl
  42570e:	fimul  WORD PTR [eax+0x554bd87e]
  425714:	pop    esi
  425715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425716:	hlt    
  425717:	jecxz  0x425737
  425719:	scas   al,BYTE PTR es:[edi]
  42571a:	sub    ebx,DWORD PTR [edx-0x39229a7d]
  425720:	stc    
  425721:	(bad)  
  425722:	jecxz  0x4256fa
  425724:	loop   0x4256ed
  425726:	sar    BYTE PTR [eax+ebp*1],0x4c
  42572a:	mov    edx,0x1ebffc8c
  42572f:	inc    edx
  425730:	icebp  
  425731:	push   ebp
  425732:	cmp    DWORD PTR [ecx-0x3162302f],0x77c6c41c
  42573c:	mov    ebx,0x91a734f7
  425741:	or     DWORD PTR [ebx-0x7f443d1a],0xc3b9f47b
  42574b:	sar    DWORD PTR [ebx+0x56],cl
  42574e:	dec    esi
  42574f:	mov    ds:0xaf14111d,al
  425754:	(bad)  
  425755:	mov    esp,0x1aaf6840
  42575a:	out    0x21,al
  42575c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42575d:	xor    ecx,ebp
  42575f:	cmc    
  425760:	and    al,BYTE PTR [edx]
  425762:	mov    al,0xac
  425764:	push   cs
  425765:	push   0xebd0cf4b
  42576a:	retf   0x4a85
  42576d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42576e:	outs   dx,DWORD PTR ds:[esi]
  42576f:	cmp    al,0x74
  425771:	and    DWORD PTR [edx+0x6ae59654],0xffffff81
  425778:	rcl    DWORD PTR [ecx+0x5b],1
  42577b:	int3   
  42577c:	inc    ebp
  42577d:	xor    al,0xed
  42577f:	lock stos BYTE PTR es:[edi],al
  425781:	or     dh,BYTE PTR [ebx]
  425783:	and    al,0xba
  425785:	jl     0x425732
  425787:	push   esi
  425788:	inc    edx
  425789:	test   BYTE PTR [edx],bl
  42578b:	inc    esi
  42578c:	or     dl,BYTE PTR [eax+0x70]
  42578f:	sub    DWORD PTR [ebx],ebp
  425791:	pop    edi
  425792:	ins    DWORD PTR es:[edi],dx
  425793:	aam    0xb4
  425795:	fst    DWORD PTR [edi]
  425797:	mov    dh,cl
  425799:	cmc    
  42579a:	push   esp
  42579b:	push   eax
  42579c:	jns    0x4257a8
  42579e:	test   ebp,esi
  4257a0:	add    DWORD PTR [esi+0x57],esp
  4257a3:	jno    0x42579e
  4257a5:	lods   al,BYTE PTR ds:[esi]
  4257a6:	sub    DWORD PTR [ecx+eiz*8],edx
  4257a9:	adc    eax,0x99fc07da
  4257ae:	add    ebx,ebx
  4257b0:	ins    BYTE PTR es:[edi],dx
  4257b1:	dec    eax
  4257b2:	sub    al,0x67
  4257b4:	push   eax
  4257b5:	icebp  
  4257b6:	mov    es,WORD PTR [edi]
  4257b8:	push   esp
  4257b9:	jne    0x425764
  4257bb:	cmp    eax,0xeaa3c97e
  4257c0:	ficom  DWORD PTR [edi-0x73]
  4257c3:	cmovs  esp,esp
  4257c6:	icebp  
  4257c7:	inc    edi
  4257c8:	add    bh,BYTE PTR [edx-0x2a86dead]
  4257ce:	dec    edx
  4257cf:	mov    WORD PTR [edx-0x3d],gs
  4257d2:	xchg   DWORD PTR [ecx],edx
  4257d4:	(bad)  
  4257d5:	les    esp,FWORD PTR [ebx+0x59f9424a]
  4257db:	inc    esi
  4257dc:	jmp    0x671f:0x7fd4717c
  4257e3:	cmp    al,0x66
  4257e5:	xchg   ecx,eax
  4257e6:	lock xor eax,esp
  4257e9:	call   0xdbe9:0x483124a8
  4257f0:	(bad)  
  4257f1:	xlat   BYTE PTR ds:[ebx]
  4257f2:	sbb    BYTE PTR [esi-0xe],dl
  4257f5:	jb     0x4257ca
  4257f7:	sbb    eax,0x60d33a6d
  4257fc:	test   eax,0xc9296269
  425801:	fs cmp edi,eax
  425804:	je     0x425859
  42580a:	mov    DWORD PTR [ebp-0xc],esi
  42580d:	mov    eax,DWORD PTR [ebp-0xc]
  425810:	mov    esi,DWORD PTR [ebp+0xc]
  425813:	xor    eax,ecx
  425815:	lea    eax,[eax*8+0x1939820]
  42581c:	mov    eax,DWORD PTR [esi+eax*1]
  42581f:	mov    DWORD PTR [ebp+0xc],eax
  425822:	mov    eax,DWORD PTR [ebp-0x4]
  425825:	mov    esi,DWORD PTR [ebp-0x8]
  425828:	xor    eax,ecx
  42582a:	xor    esi,ecx
  42582c:	add    esi,edx
  42582e:	add    eax,edx
  425830:	imul   eax,esi
  425833:	mov    esi,DWORD PTR [ebp+0xc]
  425836:	cmp    esi,eax
  425838:	je     0x425859
  42583e:	mov    eax,DWORD PTR [ebp-0x4]
  425841:	xor    eax,ecx
  425843:	mov    ecx,DWORD PTR [ebp+0xc]
  425846:	add    eax,edx
  425848:	imul   eax,ecx
  42584b:	add    eax,DWORD PTR [ebp+0x8]
  42584e:	mov    DWORD PTR [ebp+0xc],eax
  425851:	mov    eax,DWORD PTR [ebp+0xc]
  425854:	jmp    0x42586a
  425859:	mov    eax,DWORD PTR [ebp-0x4]
  42585c:	mov    esi,DWORD PTR [ebp-0x8]
  42585f:	xor    esi,ecx
  425861:	xor    eax,ecx
  425863:	add    esi,edx
  425865:	add    eax,edx
  425867:	imul   eax,esi
  42586a:	pop    edi
  42586b:	pop    esi
  42586c:	leave  
  42586d:	ret    0x8
  425870:	add    BYTE PTR [eax],al
  425872:	add    BYTE PTR [eax],al
  425874:	int3   
  425875:	cmp    al,0xf3
  425877:	dec    ebp
  425878:	add    BYTE PTR [eax],al
  42587a:	add    BYTE PTR [eax],al
  42587c:	add    al,BYTE PTR [eax]
  42587e:	add    BYTE PTR [eax],al
  425880:	add    BYTE PTR ss:[eax],al
  425883:	add    BYTE PTR [eax-0x6ffffda8],dl
  425889:	dec    esp
  42588a:	add    al,BYTE PTR [eax]
  42588c:	add    BYTE PTR [eax],al
  42588e:	add    BYTE PTR [eax],al
  425890:	push   edx
  425891:	push   ebx
  425892:	inc    esp
  425893:	push   ebx
  425894:	jle    0x425837
  425896:	pop    ebp
  425897:	xchg   ebx,eax
  425898:	shl    DWORD PTR [ebx],cl
  42589a:	jl     0x4258e4
  42589c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42589d:	sbb    ecx,esi
  42589f:	jecxz  0x425866
  4258a1:	push   edx
  4258a2:	mov    edx,0x1
  4258a8:	inc    edi
  4258a9:	cmp    bl,BYTE PTR [ebx+edx*2+0x79]
  4258ad:	jae    0x4258cf
  4258af:	inc    esp
  4258b0:	imul   esi,DWORD PTR [edx+0x20],0x5c6e6957
  4258b7:	inc    esi
  4258b8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  4258c0:	outs   dx,BYTE PTR ds:[esi]
  4258c1:	jae    0x42592c
  4258c3:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  4258cb:	or     BYTE PTR [ecx],al
  4258cd:	add    BYTE PTR [eax],al
  4258cf:	push   ebx
  4258d0:	mov    eax,ebx
  4258d2:	xchg   ecx,eax
  4258d3:	mov    eax,DWORD PTR [ebp+0x8]
  4258d6:	cmp    eax,0xf89c85a5
  4258db:	jne    0x425d9c
  4258e1:	mov    eax,DWORD PTR [ebp+0xc]
  4258e4:	cmp    eax,0xf89c85a2
  4258e9:	jne    0x425d9c
  4258ef:	mov    eax,DWORD PTR [ebp+0x24]
  4258f2:	mov    DWORD PTR [ebp-0x4],eax
  4258f5:	mov    eax,DWORD PTR [ebp-0x4]
  4258f8:	mov    eax,DWORD PTR [eax+0x1d8]
  4258fe:	mov    eax,DWORD PTR [eax]
  425900:	mov    eax,DWORD PTR [eax]
  425902:	mov    DWORD PTR [ebp-0x8],eax
  425905:	mov    BYTE PTR [ebp-0x18],0x1a
  425909:	mov    BYTE PTR [ebp-0x17],0x1f
  42590d:	mov    BYTE PTR [ebp-0x16],0x18
  425911:	mov    BYTE PTR [ebp-0x15],0x4e
  425915:	mov    BYTE PTR [ebp-0x14],0x51
  425919:	mov    BYTE PTR [ebp-0x13],0x83
  42591d:	mov    BYTE PTR [ebp-0x20],0xc
  425921:	mov    BYTE PTR [ebp-0x1f],0xe
  425925:	mov    BYTE PTR [ebp-0x1e],0x1c
  425929:	mov    BYTE PTR [ebp-0x1d],0x11
  42592d:	mov    BYTE PTR [ebp-0x1c],0x4e
  425931:	mov    BYTE PTR [ebp-0x1b],0x51
  425935:	mov    BYTE PTR [ebp-0x1a],0x83
  425939:	mov    BYTE PTR [ebp-0x28],0xe
  42593d:	mov    BYTE PTR [ebp-0x27],0x1b
  425941:	mov    BYTE PTR [ebp-0x26],0x17
  425945:	mov    BYTE PTR [ebp-0x25],0xa
  425949:	mov    BYTE PTR [ebp-0x24],0x20
  42594d:	mov    BYTE PTR [ebp-0x23],0x13
  425951:	mov    BYTE PTR [ebp-0x22],0x18
  425955:	mov    BYTE PTR [ebp-0x21],0x83
  425959:	xor    ecx,ecx
  42595b:	lea    eax,[ebp+ecx*1-0x18]
  42595f:	movzx  edx,BYTE PTR [eax]
  425962:	xor    edx,0x7e
  425965:	add    edx,0x3
  425968:	inc    ecx
  425969:	mov    BYTE PTR [eax],dl
  42596b:	cmp    ecx,0x6
  42596e:	jb     0x42595b
  425970:	xor    ecx,ecx
  425972:	lea    eax,[ebp+ecx*1-0x20]
  425976:	movzx  edx,BYTE PTR [eax]
  425979:	xor    edx,0x7e
  42597c:	add    edx,0x3
  42597f:	inc    ecx
  425980:	mov    BYTE PTR [eax],dl
  425982:	cmp    ecx,0x7
  425985:	jb     0x425972
  425987:	xor    ecx,ecx
  425989:	lea    eax,[ebp+ecx*1-0x28]
  42598d:	movzx  edx,BYTE PTR [eax]
  425990:	xor    edx,0x7e
  425993:	add    edx,0x3
  425996:	inc    ecx
  425997:	mov    BYTE PTR [eax],dl
  425999:	cmp    ecx,0x8
  42599c:	jb     0x425989
  42599e:	lea    eax,[ebp-0x2c]
  4259a1:	mov    DWORD PTR [ebp-0x8],eax
  4259a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4259a7:	mov    eax,0x7113fccf
  4259ac:	mov    DWORD PTR [ecx],eax
  4259ae:	mov    ecx,DWORD PTR [ebp-0x2c]
  4259b1:	push   esi
  4259b2:	push   edi
  4259b3:	mov    esi,0x4e3e
  4259b8:	mov    ebx,0x3272f5
  4259bd:	cmp    ecx,eax
  4259bf:	jne    0x425a8a
  4259c5:	lea    eax,[esi+0x39]
  4259c8:	mov    WORD PTR [ebp-0x78],ax
  4259cc:	mov    eax,esi
  4259ce:	mov    WORD PTR [ebp-0x76],ax
  4259d2:	add    eax,0x3f
  4259d5:	mov    WORD PTR [ebp-0x74],ax
  4259d9:	lea    eax,[esi-0x2]
  4259dc:	mov    WORD PTR [ebp-0x72],ax
  4259e0:	add    eax,0x43
  4259e3:	mov    ecx,eax
  4259e5:	lea    eax,[esi-0x9]
  4259e8:	mov    WORD PTR [ebp-0x66],ax
  4259ec:	mov    eax,esi
  4259ee:	mov    WORD PTR [ebp-0x64],ax
  4259f2:	add    eax,0xffffffec
  4259f5:	mov    WORD PTR [ebp-0x62],ax
  4259f9:	mov    eax,0x443
  4259fe:	mov    WORD PTR [ebp-0x60],ax
  425a02:	mov    eax,0x5670
  425a07:	mov    WORD PTR [ebp-0x5e],ax
  425a0b:	mov    eax,0x6110
  425a10:	mov    WORD PTR [ebp-0x5c],ax
  425a14:	lea    eax,[ebp-0xe0]
  425a1a:	push   eax
  425a1b:	mov    eax,DWORD PTR [ebp+0xc]
  425a1e:	mov    edi,0x75108ae
  425a23:	xor    eax,edi
  425a25:	add    eax,ebx
  425a27:	push   eax
  425a28:	mov    WORD PTR [ebp-0x70],cx
  425a2c:	lea    ecx,[esi-0xe]
  425a2f:	mov    edx,ecx
  425a31:	lea    eax,[ebp-0x78]
  425a34:	push   eax
  425a35:	mov    eax,DWORD PTR [ebp-0x4]
  425a38:	mov    eax,DWORD PTR [eax+0x198]
  425a3e:	mov    WORD PTR [ebp-0x6e],dx
  425a42:	mov    edx,0x4f8a
  425a47:	mov    WORD PTR [ebp-0x6c],dx
  425a4b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425a52:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425a59:	mov    DWORD PTR [ebp-0xe0],0x1
  425a63:	mov    DWORD PTR [ebp-0xdc],0x255
  425a6d:	push   DWORD PTR [eax]
  425a6f:	mov    eax,DWORD PTR [ebp+0x10]
  425a72:	call   eax
  425a74:	mov    DWORD PTR [ebp-0x8],eax
  425a77:	mov    eax,DWORD PTR [ebp-0x8]
  425a7a:	test   eax,eax
  425a7c:	je     0x425a8f
  425a7e:	xor    DWORD PTR ds:0x76586876,0x87687666
  425a88:	jmp    0x425a8f
  425a8a:	mov    edi,0x75108ae
  425a8f:	mov    eax,DWORD PTR [ebp-0x4]
  425a92:	mov    ecx,DWORD PTR [eax+0x18c]
  425a98:	xor    eax,eax
  425a9a:	cmp    DWORD PTR [ecx],eax
  425a9c:	jne    0x425d0f
  425aa2:	mov    ecx,DWORD PTR [ebp-0x4]
  425aa5:	mov    ecx,DWORD PTR [ecx+0x17c]
  425aab:	mov    DWORD PTR [ecx],eax
  425aad:	mov    ecx,DWORD PTR [ebp-0x4]
  425ab0:	mov    ecx,DWORD PTR [ecx+0x180]
  425ab6:	mov    DWORD PTR [ecx],eax
  425ab8:	mov    eax,0x4e6d
  425abd:	mov    WORD PTR [ebp-0x9c],ax
  425ac4:	mov    eax,esi
  425ac6:	mov    WORD PTR [ebp-0x9a],ax
  425acd:	mov    eax,0x4e7d
  425ad2:	mov    WORD PTR [ebp-0x98],ax
  425ad9:	add    eax,0xffffffc0
  425adc:	mov    WORD PTR [ebp-0x96],ax
  425ae3:	mov    eax,0x4f8e
  425ae8:	mov    WORD PTR [ebp-0x94],ax
  425aef:	mov    eax,0x4e32
  425af4:	mov    WORD PTR [ebp-0x92],ax
  425afb:	add    eax,0x4d
  425afe:	mov    WORD PTR [ebp-0x90],ax
  425b05:	mov    eax,0x4e30
  425b0a:	mov    WORD PTR [ebp-0x8e],ax
  425b11:	mov    eax,esi
  425b13:	mov    WORD PTR [ebp-0x8c],ax
  425b1a:	mov    eax,0x4e31
  425b1f:	mov    WORD PTR [ebp-0x8a],ax
  425b26:	mov    eax,0x99fd
  425b2b:	mov    WORD PTR [ebp-0x88],ax
  425b32:	mov    eax,0x8d62
  425b37:	mov    WORD PTR [ebp-0x86],ax
  425b3e:	mov    eax,0xd66f
  425b43:	mov    WORD PTR [ebp-0x84],ax
  425b4a:	mov    eax,0xd783
  425b4f:	mov    WORD PTR [ebp-0x82],ax
  425b56:	mov    eax,0x2780
  425b5b:	mov    WORD PTR [ebp-0x80],ax
  425b5f:	mov    eax,0x4780
  425b64:	mov    WORD PTR [ebp-0x7e],ax
  425b68:	mov    eax,0x4e33
  425b6d:	push   0x8
  425b6f:	mov    WORD PTR [ebp-0x7c],ax
  425b73:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425b7a:	mov    DWORD PTR [ebp-0xc],0x83181320
  425b81:	lea    eax,[ebp-0x10]
  425b84:	pop    ecx
  425b85:	mov    dl,BYTE PTR [eax]
  425b87:	xor    dl,0x7e
  425b8a:	add    dl,0x3
  425b8d:	mov    BYTE PTR [eax],dl
  425b8f:	inc    eax
  425b90:	dec    ecx
  425b91:	jne    0x425b85
  425b93:	lea    eax,[ebp-0x10]
  425b96:	mov    DWORD PTR [ebp-0xdc],eax
  425b9c:	lea    eax,[ebp-0xe0]
  425ba2:	push   eax
  425ba3:	mov    eax,DWORD PTR [ebp+0xc]
  425ba6:	xor    eax,edi
  425ba8:	add    eax,ebx
  425baa:	push   eax
  425bab:	mov    eax,DWORD PTR [ebp-0x4]
  425bae:	add    eax,0x66
  425bb1:	push   eax
  425bb2:	mov    eax,DWORD PTR [ebp-0x4]
  425bb5:	mov    eax,DWORD PTR [eax+0x198]
  425bbb:	mov    DWORD PTR [ebp-0xe0],0x1
  425bc5:	push   DWORD PTR [eax]
  425bc7:	mov    eax,DWORD PTR [ebp+0x10]
  425bca:	call   eax
  425bcc:	mov    ecx,DWORD PTR [ebp+0x8]
  425bcf:	xor    ecx,edi
  425bd1:	add    ecx,ebx
  425bd3:	mov    DWORD PTR [ebp-0x8],eax
  425bd6:	cmp    eax,ecx
  425bd8:	jne    0x425bf3
  425bda:	mov    eax,ds:0x33730bcc
  425bdf:	or     eax,0x22150bcf
  425be4:	mov    ds:0x33730bcc,eax
  425be9:	add    eax,0x3372e92f
  425bee:	mov    ds:0x33730bcc,eax
  425bf3:	mov    ecx,0x4e66
  425bf8:	mov    eax,ecx
  425bfa:	mov    WORD PTR [ebp-0x40],ax
  425bfe:	add    eax,0x5
  425c01:	mov    edx,eax
  425c03:	mov    WORD PTR [ebp-0x3e],dx
  425c07:	mov    edx,0x4f93
  425c0c:	mov    WORD PTR [ebp-0x3c],dx
  425c10:	add    edx,0xfffffff8
  425c13:	mov    WORD PTR [ebp-0x3a],dx
  425c17:	mov    edx,0x4f89
  425c1c:	mov    WORD PTR [ebp-0x38],dx
  425c20:	add    edx,0x3
  425c23:	mov    WORD PTR [ebp-0x36],dx
  425c27:	mov    edx,0x4f87
  425c2c:	mov    WORD PTR [ebp-0x34],dx
  425c30:	mov    WORD PTR [ebp-0x32],cx
  425c34:	mov    ecx,esi
  425c36:	mov    WORD PTR [ebp-0x30],cx
  425c3a:	lea    ecx,[edx-0x1]
  425c3d:	mov    edx,ecx
  425c3f:	mov    WORD PTR [ebp-0x54],dx
  425c43:	mov    edx,eax
  425c45:	mov    WORD PTR [ebp-0x52],dx
  425c49:	mov    edx,0x4e73
  425c4e:	mov    WORD PTR [ebp-0x50],dx
  425c52:	mov    WORD PTR [ebp-0x4e],ax
  425c56:	lea    eax,[edx-0xa]
  425c59:	mov    WORD PTR [ebp-0x4c],ax
  425c5d:	add    eax,0x3
  425c60:	mov    WORD PTR [ebp-0x4a],ax
  425c64:	lea    eax,[edx-0xc]
  425c67:	mov    WORD PTR [ebp-0x48],ax
  425c6b:	mov    WORD PTR [ebp-0x46],cx
  425c6f:	mov    WORD PTR [ebp-0x44],si
  425c73:	mov    eax,DWORD PTR [ebp+0x8]
  425c76:	movzx  ecx,WORD PTR [ebp-0x54]
  425c7a:	xor    eax,edi
  425c7c:	add    eax,ebx
  425c7e:	xor    eax,ecx
  425c80:	mov    WORD PTR [ebp-0x54],ax
  425c84:	mov    eax,DWORD PTR [ebp+0x8]
  425c87:	movzx  ecx,WORD PTR [ebp-0x40]
  425c8b:	xor    eax,edi
  425c8d:	add    eax,ebx
  425c8f:	xor    eax,ecx
  425c91:	mov    WORD PTR [ebp-0x40],ax
  425c95:	xor    eax,eax
  425c97:	mov    WORD PTR [ebp-0xf4],ax
  425c9e:	mov    WORD PTR [ebp-0x108],ax
  425ca5:	mov    edi,DWORD PTR [ebp+0x24]
  425ca8:	lea    eax,[ebp-0xf4]
  425cae:	lea    edx,[ebp-0x54]
  425cb1:	mov    DWORD PTR [ebp-0xe0],0x2
  425cbb:	mov    DWORD PTR [ebp-0xdc],eax
  425cc1:	call   0x4286f9
  425cc6:	mov    DWORD PTR [ebp-0xd8],eax
  425ccc:	lea    eax,[ebp-0xe0]
  425cd2:	push   eax
  425cd3:	mov    eax,DWORD PTR [ebp+0xc]
  425cd6:	xor    eax,0x75108ae
  425cdb:	add    eax,ebx
  425cdd:	push   eax
  425cde:	lea    eax,[ebp-0x9c]
  425ce4:	push   eax
  425ce5:	push   DWORD PTR [ebp-0x8]
  425ce8:	mov    eax,DWORD PTR [ebp+0x10]
  425ceb:	call   eax
  425ced:	mov    edi,DWORD PTR [ebp+0x24]
  425cf0:	lea    eax,[ebp-0x108]
  425cf6:	lea    edx,[ebp-0x40]
  425cf9:	mov    DWORD PTR [ebp-0xdc],eax
  425cff:	call   0x4286f9
  425d04:	mov    DWORD PTR [ebp-0xd8],eax
  425d0a:	mov    edi,0x75108ae
  425d0f:	mov    eax,DWORD PTR [ebp+0x14]
  425d12:	push   DWORD PTR [ebp-0x4]
  425d15:	push   DWORD PTR [ebp+0x20]
  425d18:	push   DWORD PTR [ebp+0x1c]
  425d1b:	push   DWORD PTR [ebp+0x18]
  425d1e:	push   DWORD PTR [ebp+0x10]
  425d21:	push   DWORD PTR [ebp+0x8]
  425d24:	push   DWORD PTR [ebp+0xc]
  425d27:	call   0x426f9a
  425d2c:	test   eax,eax
  425d2e:	je     0x425d72
  425d30:	add    DWORD PTR [ebp-0x4],eax
  425d33:	push   DWORD PTR [ebp-0x4]
  425d36:	lea    esi,[ebp+0x4]
  425d39:	call   0x42618a
  425d3e:	mov    eax,DWORD PTR [ebp-0x4]
  425d41:	mov    eax,DWORD PTR [eax+0x1c8]
  425d47:	mov    eax,DWORD PTR [eax]
  425d49:	xor    eax,edi
  425d4b:	add    eax,ebx
  425d4d:	mov    eax,DWORD PTR [ebp-0x4]
  425d50:	jne    0x425d68
  425d52:	mov    ecx,DWORD PTR [ebp-0x4]
  425d55:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425d5b:	push   DWORD PTR [ecx]
  425d5d:	mov    eax,DWORD PTR [eax+0x1e0]
  425d63:	call   DWORD PTR [eax+0x28]
  425d66:	jmp    0x425d72
  425d68:	mov    eax,DWORD PTR [eax+0x17c]
  425d6e:	mov    eax,DWORD PTR [eax]
  425d70:	add    DWORD PTR [esi],eax
  425d72:	mov    eax,DWORD PTR [ebp-0x4]
  425d75:	mov    eax,DWORD PTR [eax+0x1dc]
  425d7b:	dec    DWORD PTR [eax]
  425d7d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d80:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425d86:	mov    eax,DWORD PTR [eax]
  425d88:	lea    eax,[ecx+eax*4]
  425d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  425d8e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425d94:	mov    eax,DWORD PTR [eax]
  425d96:	mov    ecx,DWORD PTR [ecx]
  425d98:	add    DWORD PTR [eax],ecx
  425d9a:	pop    edi
  425d9b:	pop    esi
  425d9c:	pop    ebx
  425d9d:	leave  
  425d9e:	ret    0x20
  425da1:	push   edi
  425da2:	push   esi
  425da3:	push   ebx
  425da4:	push   ebp
  425da5:	mov    ebp,esp
  425da7:	mov    eax,DWORD PTR [ebp+0x24]
  425daa:	add    DWORD PTR [ebp+0x28],eax
  425dad:	push   eax
  425dae:	cld    
  425daf:	mov    esi,DWORD PTR [ebp+0x18]
  425db2:	add    DWORD PTR [ebp+0x1c],esi
  425db5:	push   esi
  425db6:	mov    esi,DWORD PTR [ebp+0x14]
  425db9:	lods   eax,DWORD PTR ds:[esi]
  425dba:	xchg   edx,eax
  425dbb:	push   edx
  425dbc:	mov    cl,BYTE PTR [esi-0x2]
  425dbf:	or     eax,0xffffffff
  425dc2:	shl    eax,cl
  425dc4:	not    eax
  425dc6:	push   eax
  425dc7:	mov    cl,dh
  425dc9:	or     eax,0xffffffff
  425dcc:	shl    eax,cl
  425dce:	not    eax
  425dd0:	push   eax
  425dd1:	add    cl,dl
  425dd3:	mov    edi,esi
  425dd5:	sub    esp,0xc
  425dd8:	sub    eax,eax
  425dda:	inc    eax
  425ddb:	push   eax
  425ddc:	push   eax
  425ddd:	push   eax
  425dde:	push   eax
  425ddf:	push   eax
  425de0:	push   edi
  425de1:	sub    esi,esi
  425de3:	push   esi
  425de4:	or     ebx,0xffffffff
  425de7:	mov    eax,0x300
  425dec:	shl    eax,cl
  425dee:	lea    ecx,[eax+0x736]
  425df4:	mov    eax,0x4000400
  425df9:	shr    ecx,1
  425dfb:	rep stos DWORD PTR es:[edi],eax
  425dfd:	push   0x5
  425dff:	pop    ecx
  425e00:	call   0x4260eb
  425e05:	loop   0x425e00
  425e07:	lea    esi,[esi]
  425e09:	lea    edi,[edi]
  425e0b:	mov    edi,DWORD PTR [ebp-0x4]
  425e0e:	mov    eax,DWORD PTR [ebp-0x10]
  425e11:	sub    edi,DWORD PTR [ebp+0x24]
  425e14:	and    eax,edi
  425e16:	mov    DWORD PTR [ebp-0x18],eax
  425e19:	mov    al,0x0
  425e1b:	call   0x426103
  425e20:	jne    0x425ebb
  425e26:	mov    cl,BYTE PTR [ebp-0xc]
  425e29:	and    edi,DWORD PTR [ebp-0x14]
  425e2c:	shl    edi,cl
  425e2e:	sub    cl,0x8
  425e31:	neg    cl
  425e33:	shr    esi,cl
  425e35:	pop    eax
  425e36:	add    edi,esi
  425e38:	pop    esi
  425e39:	lea    edi,[edi+edi*2]
  425e3c:	shl    edi,0x8
  425e3f:	cmp    al,0x7
  425e41:	pop    edx
  425e42:	lea    ecx,[esi+edi*2+0xe6c]
  425e49:	push   ecx
  425e4a:	push   esi
  425e4b:	mov    esi,0x100
  425e50:	push   eax
  425e51:	mov    al,0x1
  425e53:	jb     0x425e89
  425e55:	mov    edi,DWORD PTR [ebp-0x4]
  425e58:	sub    edi,DWORD PTR [ebp-0x24]
  425e5b:	movzx  edi,BYTE PTR [edi]
  425e5e:	mov    ebp,DWORD PTR [ebp-0x34]
  425e61:	shl    edi,1
  425e63:	mov    ecx,esi
  425e65:	and    esi,edi
  425e67:	add    ecx,esi
  425e69:	lea    ebp,[ebp+ecx*2+0x0]
  425e6d:	call   0x426122
  425e72:	mov    ecx,eax
  425e74:	shr    esi,0x8
  425e77:	and    ecx,0x1
  425e7a:	cmp    esi,ecx
  425e7c:	mov    esi,0x100
  425e81:	jne    0x425e91
  425e83:	cmp    eax,esi
  425e85:	jb     0x425e5e
  425e87:	jmp    0x425e9d
  425e89:	mov    ebp,DWORD PTR [ebp-0x34]
  425e8c:	call   0x426122
  425e91:	inc    eax
  425e92:	inc    esi
  425e93:	sub    eax,0x1
  425e96:	sub    esi,0x1
  425e99:	cmp    eax,esi
  425e9b:	jb     0x425e89
  425e9d:	pop    edx
  425e9e:	inc    edx
  425e9f:	cmp    edx,0x5
  425ea2:	dec    edx
  425ea3:	mov    ecx,edx
  425ea5:	jb     0x425eb6
  425ea7:	inc    edx
  425ea8:	cmp    edx,0xb
  425eab:	dec    edx
  425eac:	mov    cl,0x4
  425eae:	dec    cl
  425eb0:	jb     0x425eb6
  425eb2:	mov    cl,0x7
  425eb4:	dec    cl
  425eb6:	sub    edx,ecx
  425eb8:	push   edx
  425eb9:	jmp    0x425f0a
  425ebb:	mov    al,0xc1
  425ebd:	dec    al
  425ebf:	call   0x426113
  425ec4:	jne    0x425eda
  425ec6:	pop    eax
  425ec7:	pop    edi
  425ec8:	pop    edx
  425ec9:	pop    ecx
  425eca:	pop    edx
  425ecb:	pop    ecx
  425ecc:	push   DWORD PTR [esp]
  425ecf:	push   ecx
  425ed0:	push   edx
  425ed1:	mov    edx,0x664
  425ed6:	mov    cl,0x0
  425ed8:	jmp    0x425f4d
  425eda:	mov    al,0xcd
  425edc:	dec    al
  425ede:	call   0x426113
  425ee3:	jne    0x425f13
  425ee5:	mov    al,0xf1
  425ee7:	dec    al
  425ee9:	call   0x426103
  425eee:	jne    0x425f43
  425ef0:	pop    eax
  425ef1:	cmp    al,0x7
  425ef3:	mov    al,0x9
  425ef5:	jb     0x425ef9
  425ef7:	mov    al,0xb
  425ef9:	push   eax
  425efa:	mov    esi,DWORD PTR [ebp-0x4]
  425efd:	sub    esi,DWORD PTR [ebp-0x24]
  425f00:	cmp    esi,DWORD PTR [ebp+0x24]
  425f03:	jb     0x4260da
  425f09:	lods   al,BYTE PTR ds:[esi]
  425f0a:	mov    edi,DWORD PTR [ebp-0x4]
  425f0d:	stos   BYTE PTR es:[edi],al
  425f0e:	jmp    0x4260a1
  425f13:	mov    al,0xd8
  425f15:	call   0x426113
  425f1a:	mov    esi,DWORD PTR [ebp-0x28]
  425f1d:	je     0x425f3a
  425f1f:	mov    al,0xe4
  425f21:	call   0x426113
  425f26:	mov    esi,DWORD PTR [ebp-0x2c]
  425f29:	je     0x425f34
  425f2b:	mov    esi,DWORD PTR [ebp-0x30]
  425f2e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f31:	mov    DWORD PTR [ebp-0x30],ecx
  425f34:	mov    ecx,DWORD PTR [ebp-0x28]
  425f37:	mov    DWORD PTR [ebp-0x2c],ecx
  425f3a:	mov    ecx,DWORD PTR [ebp-0x24]
  425f3d:	mov    DWORD PTR [ebp-0x28],ecx
  425f40:	mov    DWORD PTR [ebp-0x24],esi
  425f43:	pop    eax
  425f44:	pop    edi
  425f45:	pop    ecx
  425f46:	mov    edx,0xa68
  425f4b:	mov    cl,0x8
  425f4d:	add    edx,edi
  425f4f:	push   edx
  425f50:	push   edi
  425f51:	cmp    al,0x7
  425f53:	mov    al,cl
  425f55:	jb     0x425f59
  425f57:	add    al,0x3
  425f59:	push   eax
  425f5a:	mov    ebp,DWORD PTR [ebp-0x34]
  425f5d:	call   0x426120
  425f62:	jne    0x425f78
  425f64:	mov    eax,DWORD PTR [ebp-0x18]
  425f67:	mov    edi,DWORD PTR [ebp-0x34]
  425f6a:	shl    eax,0x3
  425f6d:	sub    ecx,ecx
  425f6f:	push   0x8
  425f71:	pop    esi
  425f72:	lea    edi,[edi+eax*2+0x4]
  425f76:	jmp    0x425fad
  425f78:	mov    ebp,DWORD PTR [ebp-0x34]
  425f7b:	add    ebp,0x2
  425f7e:	call   0x426120
  425f83:	jne    0x425f9d
  425f85:	mov    eax,DWORD PTR [ebp-0x18]
  425f88:	mov    edi,DWORD PTR [ebp-0x34]
  425f8b:	shl    eax,0x3
  425f8e:	push   0x8
  425f90:	pop    ecx
  425f91:	push   0x8
  425f93:	pop    esi
  425f94:	lea    edi,[edi+eax*2+0x104]
  425f9b:	jmp    0x425fad
  425f9d:	mov    edi,0x204
  425fa2:	add    edi,DWORD PTR [ebp-0x34]
  425fa5:	push   0x10
  425fa7:	pop    ecx
  425fa8:	mov    esi,0x100
  425fad:	mov    DWORD PTR [ebp-0x1c],ecx
  425fb0:	sub    eax,eax
  425fb2:	inc    eax
  425fb3:	mov    ebp,edi
  425fb5:	call   0x426122
  425fba:	mov    ecx,eax
  425fbc:	sub    ecx,esi
  425fbe:	jb     0x425fb3
  425fc0:	add    DWORD PTR [ebp-0x1c],ecx
  425fc3:	cmp    DWORD PTR [ebp-0x3c],0x4
  425fc7:	jae    0x42607d
  425fcd:	add    DWORD PTR [ebp-0x3c],0x7
  425fd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fd4:	cmp    ecx,0x4
  425fd7:	jb     0x425fdc
  425fd9:	push   0x3
  425fdb:	pop    ecx
  425fdc:	mov    edi,DWORD PTR [ebp-0x38]
  425fdf:	shl    ecx,0x6
  425fe2:	sub    eax,eax
  425fe4:	inc    eax
  425fe5:	push   0x40
  425fe7:	pop    esi
  425fe8:	lea    edi,[edi+ecx*2+0x360]
  425fef:	mov    ebp,edi
  425ff1:	call   0x426122
  425ff6:	mov    ecx,eax
  425ff8:	sub    ecx,esi
  425ffa:	jb     0x425fef
  425ffc:	mov    DWORD PTR [ebp-0x18],ecx
  425fff:	mov    DWORD PTR [ebp-0x24],ecx
  426002:	cmp    ecx,0x4
  426005:	jb     0x42607a
  426007:	mov    esi,ecx
  426009:	and    DWORD PTR [ebp-0x24],0x1
  42600d:	shr    esi,1
  42600f:	or     DWORD PTR [ebp-0x24],0x2
  426013:	dec    esi
  426014:	cmp    ecx,0xe
  426017:	jae    0x426032
  426019:	mov    eax,0x2af
  42601e:	sub    eax,ecx
  426020:	mov    ecx,esi
  426022:	shl    BYTE PTR [ebp-0x24],cl
  426025:	add    eax,DWORD PTR [ebp-0x24]
  426028:	shl    eax,1
  42602a:	add    eax,DWORD PTR [ebp-0x38]
  42602d:	mov    DWORD PTR [ebp-0x34],eax
  426030:	jmp    0x42605f
  426032:	sub    esi,0x4
  426035:	call   0x4260df
  42603a:	shr    ebx,1
  42603c:	shl    DWORD PTR [ebp-0x24],1
  42603f:	cmp    DWORD PTR [ebp-0x20],ebx
  426042:	jb     0x42604a
  426044:	inc    DWORD PTR [ebp-0x24]
  426047:	sub    DWORD PTR [ebp-0x20],ebx
  42604a:	dec    esi
  42604b:	jne    0x426035
  42604d:	mov    eax,0x644
  426052:	add    eax,DWORD PTR [ebp-0x38]
  426055:	mov    DWORD PTR [ebp-0x34],eax
  426058:	shl    DWORD PTR [ebp-0x24],0x4
  42605c:	push   0x4
  42605e:	pop    esi
  42605f:	sub    edi,edi
  426061:	inc    edi
  426062:	mov    eax,edi
  426064:	mov    ebp,DWORD PTR [ebp-0x34]
  426067:	call   0x426122
  42606c:	test   al,0x1
  42606e:	je     0x426073
  426070:	or     DWORD PTR [ebp-0x24],edi
  426073:	shl    edi,1
  426075:	dec    esi
  426076:	jne    0x426064
  426078:	jmp    0x42607a
  42607a:	inc    DWORD PTR [ebp-0x24]
  42607d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426080:	add    ecx,0x2
  426083:	mov    edi,DWORD PTR [ebp-0x4]
  426086:	mov    eax,edi
  426088:	sub    eax,DWORD PTR [ebp+0x24]
  42608b:	cmp    DWORD PTR [ebp-0x24],eax
  42608e:	ja     0x4260da
  426090:	mov    esi,edi
  426092:	sub    esi,DWORD PTR [ebp-0x24]
  426095:	mov    edx,DWORD PTR [ebp+0x28]
  426098:	lods   al,BYTE PTR ds:[esi]
  426099:	stos   BYTE PTR es:[edi],al
  42609a:	cmp    edi,edx
  42609c:	jae    0x4260a1
  42609e:	dec    ecx
  42609f:	jne    0x426098
  4260a1:	mov    DWORD PTR [ebp-0x4],edi
  4260a4:	movzx  esi,al
  4260a7:	cmp    edi,DWORD PTR [ebp+0x28]
  4260aa:	jb     0x425e0b
  4260b0:	call   0x4260df
  4260b5:	sub    eax,eax
  4260b7:	lea    ebp,[esp+0x3c]
  4260bb:	mov    edx,DWORD PTR [ebp+0x20]
  4260be:	mov    esi,DWORD PTR [ebp-0x8]
  4260c1:	sub    esi,DWORD PTR [ebp+0x18]
  4260c4:	mov    DWORD PTR [edx],esi
  4260c6:	mov    dh,0xdd
  4260c8:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  4260ce:	sbb    BYTE PTR [esi+0x1f5af70],ch
  4260d4:	add    eax,0x188f893
  4260d9:	jmp    0x37cbec12
  4260de:	jmp    0x42606e
  4260e0:	ja     0x42606a
  4260e2:	mov    BYTE PTR [eax-0x6873ae74],cl
  4260e8:	(bad)  
  4260e9:	pop    ss
  4260ea:	test   al,0xe1
  4260ec:	mov    dh,0x5d
  4260ee:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  4260f3:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  4260f9:	test   al,0x3a
  4260fb:	scas   al,BYTE PTR es:[edi]
  4260fc:	popf   
  4260fd:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  426103:	mov    dh,0xbd
  426105:	fwait
  426106:	les    esp,FWORD PTR [edx-0x75]
  426109:	(bad)  
  42610a:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  426112:	mov    al,ds:0x948b62c4
  426117:	popf   
  426118:	fwait
  426119:	mov    dh,0x3d
  42611b:	stos   DWORD PTR es:[edi],eax
  42611c:	mov    esi,0x34889d39
  426121:	mov    edi,DWORD PTR [esi-0x717762c7]
  426127:	ja     0x4260b1
  426129:	mov    BYTE PTR [eax-0x4907aa74],cl
  42612f:	mov    ecx,0x198f6818
  426134:	sbb    BYTE PTR [eax],cl
  426136:	test   al,0x74
  426138:	mov    ecx,0xfa55f918
  42613d:	mov    dl,0xcc
  42613f:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  426145:	test   al,0x88
  426147:	push   esp
  426148:	and    al,0x20
  42614a:	mov    ecx,ebx
  42614c:	movzx  edx,WORD PTR [ebp+0x0]
  426150:	shr    ecx,0xb
  426153:	imul   ecx,edx
  426156:	cmp    DWORD PTR [esp+0x20],ecx
  42615a:	jae    0x426173
  42615c:	mov    ebx,ecx
  42615e:	mov    ecx,0x800
  426163:	sub    ecx,edx
  426165:	shr    ecx,0x5
  426168:	add    WORD PTR [ebp+0x0],cx
  42616c:	add    eax,eax
  42616e:	lea    ebp,[esp+0x40]
  426172:	ret    
  426173:	shr    edx,0x5
  426176:	sub    DWORD PTR [esp+0x20],ecx
  42617a:	sub    ebx,ecx
  42617c:	sub    WORD PTR [ebp+0x0],dx
  426180:	add    eax,eax
  426182:	add    eax,0x1
  426185:	lea    ebp,[esp+0x40]
  426189:	ret    
  42618a:	push   ebp
  42618b:	mov    ebp,esp
  42618d:	sub    esp,0x12c
  426193:	push   ebx
  426194:	push   esi
  426195:	push   edi
  426196:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42619d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4261a4:	mov    eax,DWORD PTR [ebp+0x8]
  4261a7:	mov    DWORD PTR [ebp+0x8],eax
  4261aa:	mov    ecx,DWORD PTR [ebp-0x10]
  4261ad:	mov    ebx,0x75108ae
  4261b2:	xor    ecx,ebx
  4261b4:	mov    eax,0x3272f5
  4261b9:	add    ecx,eax
  4261bb:	mov    DWORD PTR [ebp-0x24],ecx
  4261be:	mov    ecx,DWORD PTR [ebp-0x10]
  4261c1:	xor    ecx,ebx
  4261c3:	add    ecx,eax
  4261c5:	mov    DWORD PTR [ebp-0x40],ecx
  4261c8:	mov    ecx,DWORD PTR [ebp-0x10]
  4261cb:	xor    ecx,ebx
  4261cd:	add    ecx,eax
  4261cf:	mov    DWORD PTR [ebp-0x3c],ecx
  4261d2:	mov    ecx,DWORD PTR [ebp-0x10]
  4261d5:	xor    ecx,ebx
  4261d7:	add    ecx,eax
  4261d9:	mov    DWORD PTR [ebp-0xd8],ecx
  4261df:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  4261e6:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  4261ed:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  4261f4:	push   0x25
  4261f6:	pop    ecx
  4261f7:	mov    DWORD PTR [ebp-0x30],ecx
  4261fa:	mov    DWORD PTR [ebp-0x30],ecx
  4261fd:	push   0x65
  4261ff:	pop    ecx
  426200:	mov    DWORD PTR [ebp-0x30],ecx
  426203:	mov    DWORD PTR [ebp-0x30],ecx
  426206:	mov    DWORD PTR [ebp-0x30],0x4d
  42620d:	mov    DWORD PTR [ebp-0x30],0x43
  426214:	mov    ecx,DWORD PTR [ebp-0x10]
  426217:	xor    ecx,ebx
  426219:	add    ecx,eax
  42621b:	mov    DWORD PTR [ebp-0x30],ecx
  42621e:	mov    ecx,DWORD PTR [ebp-0x10]
  426221:	xor    ecx,ebx
  426223:	add    ecx,eax
  426225:	mov    DWORD PTR [ebp-0x30],ecx
  426228:	mov    DWORD PTR [ebp-0x28],0x258
  42622f:	mov    DWORD PTR [ebp-0x34],0x36
  426236:	mov    DWORD PTR [ebp-0x14],0x7a
  42623d:	lea    edi,[ebp-0x10c]
  426243:	lea    esi,[ebp-0x12c]
  426249:	call   0x426f09
  42624e:	dec    DWORD PTR [ebp-0x14]
  426251:	jne    0x42623d
  426253:	dec    DWORD PTR [ebp-0x34]
  426256:	jne    0x426236
  426258:	dec    DWORD PTR [ebp-0x28]
  42625b:	jne    0x42622f
  42625d:	mov    DWORD PTR [ebp-0x28],0x400e
  426264:	mov    eax,DWORD PTR [ebp-0x10]
  426267:	xor    eax,ebx
  426269:	mov    esi,0x3272f5
  42626e:	add    eax,esi
  426270:	mov    DWORD PTR [ebp-0x1c],eax
  426273:	mov    eax,DWORD PTR [ebp-0x10]
  426276:	and    DWORD PTR [ebp-0x94],0x0
  42627d:	xor    eax,ebx
  42627f:	add    eax,esi
  426281:	mov    DWORD PTR [ebp-0x38],eax
  426284:	mov    eax,fs:0x18
  42628a:	mov    DWORD PTR [ebp-0x94],eax
  426290:	mov    eax,DWORD PTR [eax+0x30]
  426293:	mov    DWORD PTR [ebp-0xcc],eax
  426299:	mov    eax,DWORD PTR [eax+0xc]
  42629c:	mov    DWORD PTR [ebp-0xc0],eax
  4262a2:	mov    eax,DWORD PTR [ebp+0x8]
  4262a5:	lea    ecx,[ebp-0x94]
  4262ab:	mov    DWORD PTR [eax+0x1a0],ecx
  4262b1:	mov    eax,DWORD PTR [ebp+0x8]
  4262b4:	lea    ecx,[ebp-0xcc]
  4262ba:	mov    DWORD PTR [eax+0x1a4],ecx
  4262c0:	mov    eax,DWORD PTR [ebp+0x8]
  4262c3:	push   DWORD PTR [ebp+0x8]
  4262c6:	lea    ecx,[ebp-0xc0]
  4262cc:	mov    DWORD PTR [eax+0x1a8],ecx
  4262d2:	call   0x4286ca
  4262d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4262da:	xor    ecx,ebx
  4262dc:	add    ecx,esi
  4262de:	cmp    ecx,eax
  4262e0:	je     0x426663
  4262e6:	mov    eax,DWORD PTR [ebp+0x8]
  4262e9:	mov    eax,DWORD PTR [eax+0x194]
  4262ef:	mov    ecx,DWORD PTR [eax]
  4262f1:	mov    eax,DWORD PTR [ebp+0x8]
  4262f4:	mov    eax,DWORD PTR [eax+0x194]
  4262fa:	mov    eax,DWORD PTR [eax]
  4262fc:	add    eax,DWORD PTR [ecx+0x3c]
  4262ff:	mov    ecx,DWORD PTR [ebp+0x8]
  426302:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426308:	lea    edx,[ebp-0xec]
  42630e:	push   edx
  42630f:	mov    edx,DWORD PTR [ebp+0x8]
  426312:	mov    edx,DWORD PTR [edx+0x18c]
  426318:	mov    edx,DWORD PTR [edx]
  42631a:	add    edx,DWORD PTR [eax+0x88]
  426320:	push   0x4
  426322:	push   DWORD PTR [eax+0x8c]
  426328:	push   edx
  426329:	call   DWORD PTR [ecx+0x1c]
  42632c:	push   DWORD PTR [ebp+0x8]
  42632f:	xor    eax,eax
  426331:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  42633b:	mov    DWORD PTR [ebp-0xa4],0x12371120
  426345:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  42634f:	mov    BYTE PTR [ebp-0x9c],0x83
  426356:	lea    edi,[ebp-0x9b]
  42635c:	stos   DWORD PTR es:[edi],eax
  42635d:	stos   WORD PTR es:[edi],ax
  42635f:	stos   BYTE PTR es:[edi],al
  426360:	xor    eax,eax
  426362:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  42636c:	mov    DWORD PTR [ebp-0xb8],0x12371120
  426376:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426380:	mov    BYTE PTR [ebp-0xb0],0x83
  426387:	lea    edi,[ebp-0xaf]
  42638d:	stos   DWORD PTR es:[edi],eax
  42638e:	stos   WORD PTR es:[edi],ax
  426390:	stos   BYTE PTR es:[edi],al
  426391:	mov    edi,DWORD PTR [ebp+0x8]
  426394:	mov    eax,DWORD PTR [ebp+0x8]
  426397:	mov    edx,DWORD PTR [eax+0x1b8]
  42639d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  4263a4:	mov    DWORD PTR [ebp-0x64],0x1813141e
  4263ab:	mov    WORD PTR [ebp-0x60],0x8340
  4263b1:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  4263bb:	mov    DWORD PTR [ebp-0x8c],0x17401120
  4263c5:	mov    DWORD PTR [ebp-0x88],0x35201b13
  4263cf:	mov    DWORD PTR [ebp-0x84],0x111c140c
  4263d9:	mov    DWORD PTR [ebp-0x80],0x83401e18
  4263e0:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  4263e7:	mov    DWORD PTR [ebp-0x78],0x17401120
  4263ee:	mov    DWORD PTR [ebp-0x74],0x35201b13
  4263f5:	mov    DWORD PTR [ebp-0x70],0x111c140c
  4263fc:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  426403:	call   0x4286f9
  426408:	push   eax
  426409:	mov    eax,DWORD PTR [ebp+0x8]
  42640c:	mov    eax,DWORD PTR [eax+0x1a8]
  426412:	push   DWORD PTR [eax]
  426414:	call   0x42839a
  426419:	test   eax,eax
  42641b:	jne    0x42646d
  42641d:	mov    eax,DWORD PTR [ebp+0x8]
  426420:	mov    eax,DWORD PTR [eax+0x1e0]
  426426:	mov    edi,DWORD PTR [ebp+0x8]
  426429:	add    eax,0x4
  42642c:	mov    DWORD PTR [ebp-0x20],eax
  42642f:	mov    eax,DWORD PTR [ebp+0x8]
  426432:	mov    edx,DWORD PTR [eax+0x1b8]
  426438:	call   0x4286f9
  42643d:	push   eax
  42643e:	mov    eax,DWORD PTR [ebp-0x20]
  426441:	call   DWORD PTR [eax]
  426443:	test   eax,eax
  426445:	jne    0x42646d
  426447:	mov    eax,DWORD PTR [ebp+0x8]
  42644a:	mov    eax,DWORD PTR [eax+0x1e0]
  426450:	mov    edi,DWORD PTR [ebp+0x8]
  426453:	add    eax,0x10
  426456:	mov    DWORD PTR [ebp-0x20],eax
  426459:	mov    eax,DWORD PTR [ebp+0x8]
  42645c:	mov    edx,DWORD PTR [eax+0x1b8]
  426462:	call   0x4286f9
  426467:	push   eax
  426468:	mov    eax,DWORD PTR [ebp-0x20]
  42646b:	call   DWORD PTR [eax]
  42646d:	mov    eax,DWORD PTR [ebp-0x10]
  426470:	mov    ecx,DWORD PTR [ebp-0x28]
  426473:	xor    eax,ebx
  426475:	add    eax,esi
  426477:	cmp    eax,ecx
  426479:	je     0x42663c
  42647f:	mov    eax,DWORD PTR [ebp-0x18]
  426482:	xor    eax,ebx
  426484:	mov    ecx,0xffcd8d0b
  426489:	sub    ecx,eax
  42648b:	add    ecx,DWORD PTR [ebp-0x28]
  42648e:	mov    eax,DWORD PTR [ebp-0x1c]
  426491:	cmp    eax,ecx
  426493:	ja     0x42663c
  426499:	mov    DWORD PTR [ebp-0x34],0x0
  4264a0:	push   DWORD PTR [ebp+0x8]
  4264a3:	mov    edi,DWORD PTR [ebp+0x8]
  4264a6:	mov    eax,DWORD PTR [ebp+0x8]
  4264a9:	mov    edx,DWORD PTR [eax+0x1b4]
  4264af:	call   0x4286f9
  4264b4:	push   eax
  4264b5:	mov    eax,DWORD PTR [ebp+0x8]
  4264b8:	mov    eax,DWORD PTR [eax+0x1a8]
  4264be:	push   DWORD PTR [eax]
  4264c0:	call   0x42839a
  4264c5:	mov    ecx,DWORD PTR [ebp+0x8]
  4264c8:	mov    ecx,DWORD PTR [ecx+0x19c]
  4264ce:	mov    DWORD PTR [ecx],eax
  4264d0:	mov    eax,DWORD PTR [ebp+0x8]
  4264d3:	mov    edi,DWORD PTR [eax+0x1e0]
  4264d9:	mov    esi,DWORD PTR [ebp+0x8]
  4264dc:	xor    eax,eax
  4264de:	lea    edx,[ebp-0x7c]
  4264e1:	call   0x42872f
  4264e6:	push   eax
  4264e7:	mov    eax,DWORD PTR [ebp+0x8]
  4264ea:	mov    eax,DWORD PTR [eax+0x19c]
  4264f0:	push   DWORD PTR [eax]
  4264f2:	call   DWORD PTR [edi+0x8]
  4264f5:	mov    DWORD PTR [ebp-0x20],eax
  4264f8:	mov    eax,DWORD PTR [ebp+0x8]
  4264fb:	mov    edi,DWORD PTR [eax+0x1e0]
  426501:	mov    esi,DWORD PTR [ebp+0x8]
  426504:	xor    eax,eax
  426506:	lea    edx,[ebp-0x90]
  42650c:	call   0x42872f
  426511:	push   eax
  426512:	mov    eax,DWORD PTR [ebp+0x8]
  426515:	mov    eax,DWORD PTR [eax+0x19c]
  42651b:	push   DWORD PTR [eax]
  42651d:	call   DWORD PTR [edi+0x8]
  426520:	mov    eax,DWORD PTR [ebp+0x8]
  426523:	mov    edi,DWORD PTR [eax+0x1e0]
  426529:	mov    esi,DWORD PTR [ebp+0x8]
  42652c:	xor    eax,eax
  42652e:	lea    edx,[ebp-0xa8]
  426534:	call   0x42872f
  426539:	push   eax
  42653a:	mov    eax,DWORD PTR [ebp+0x8]
  42653d:	mov    eax,DWORD PTR [eax+0x19c]
  426543:	push   DWORD PTR [eax]
  426545:	call   DWORD PTR [edi+0x8]
  426548:	and    DWORD PTR [ebp-0x8],0x0
  42654c:	mov    DWORD PTR [ebp-0x48],eax
  42654f:	mov    eax,DWORD PTR [ebp-0x8]
  426552:	and    eax,0x7
  426555:	add    eax,0x31
  426558:	push   eax
  426559:	call   DWORD PTR [ebp-0x20]
  42655c:	test   eax,eax
  42655e:	je     0x4265a2
  426560:	mov    eax,DWORD PTR [ebp-0x8]
  426563:	push   0x19
  426565:	xor    edx,edx
  426567:	pop    ecx
  426568:	div    ecx
  42656a:	add    dl,0x41
  42656d:	movzx  eax,dl
  426570:	push   eax
  426571:	call   DWORD PTR [ebp-0x48]
  426574:	test   eax,eax
  426576:	jne    0x4265a2
  426578:	mov    eax,DWORD PTR [ebp+0x8]
  42657b:	mov    edi,DWORD PTR [eax+0x1e0]
  426581:	mov    esi,DWORD PTR [ebp+0x8]
  426584:	xor    eax,eax
  426586:	lea    edx,[ebp-0x68]
  426589:	call   0x42872f
  42658e:	push   eax
  42658f:	mov    eax,DWORD PTR [ebp+0x8]
  426592:	mov    eax,DWORD PTR [eax+0x198]
  426598:	push   DWORD PTR [eax]
  42659a:	call   DWORD PTR [edi+0x8]
  42659d:	mov    DWORD PTR [ebp-0x14],eax
  4265a0:	jmp    0x4265a6
  4265a2:	and    DWORD PTR [ebp-0x14],0x0
  4265a6:	inc    DWORD PTR [ebp-0x8]
  4265a9:	cmp    DWORD PTR [ebp-0x8],0x10
  4265ad:	jb     0x42654f
  4265af:	mov    eax,DWORD PTR [ebp-0x18]
  4265b2:	mov    esi,DWORD PTR [ebp+0x8]
  4265b5:	xor    eax,ebx
  4265b7:	mov    edi,0x3272f5
  4265bc:	add    eax,edi
  4265be:	lea    edx,[ebp-0x10c]
  4265c4:	call   0x42872f
  4265c9:	push   eax
  4265ca:	mov    eax,DWORD PTR [ebp-0x10]
  4265cd:	mov    esi,DWORD PTR [ebp+0x8]
  4265d0:	xor    eax,ebx
  4265d2:	add    eax,edi
  4265d4:	lea    edx,[ebp-0x12c]
  4265da:	call   0x42872f
  4265df:	push   eax
  4265e0:	call   DWORD PTR [ebp-0x14]
  4265e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4265e6:	xor    ecx,ebx
  4265e8:	add    ecx,edi
  4265ea:	cmp    ecx,eax
  4265ec:	jne    0x4265f5
  4265ee:	mov    DWORD PTR [ebp-0x34],0x1
  4265f5:	mov    eax,DWORD PTR [ebp-0x18]
  4265f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265fb:	xor    eax,ebx
  4265fd:	lea    eax,[eax+ecx*1+0x3272f5]
  426604:	mov    DWORD PTR [ebp-0x1c],eax
  426607:	mov    eax,DWORD PTR [ebp-0x34]
  42660a:	test   eax,eax
  42660c:	je     0x426620
  42660e:	mov    eax,DWORD PTR [ebp-0x18]
  426611:	mov    ecx,DWORD PTR [ebp-0x38]
  426614:	xor    eax,ebx
  426616:	lea    eax,[eax+ecx*1+0x3272f5]
  42661d:	mov    DWORD PTR [ebp-0x38],eax
  426620:	mov    eax,DWORD PTR [ebp-0x18]
  426623:	xor    eax,ebx
  426625:	mov    ecx,0xffcd8d0b
  42662a:	sub    ecx,eax
  42662c:	add    ecx,DWORD PTR [ebp-0x28]
  42662f:	mov    eax,DWORD PTR [ebp-0x1c]
  426632:	cmp    eax,ecx
  426634:	jbe    0x426499
  42663a:	mov    esi,edi
  42663c:	mov    eax,DWORD PTR [ebp-0x38]
  42663f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426642:	cmp    ecx,eax
  426644:	jne    0x426657
  426646:	push   DWORD PTR [ebp+0x8]
  426649:	lea    eax,[ebp-0x40]
  42664c:	push   eax
  42664d:	call   0x42919e
  426652:	mov    DWORD PTR [ebp-0x24],eax
  426655:	jmp    0x426663
  426657:	mov    eax,DWORD PTR [ebp-0x24]
  42665a:	mov    ecx,DWORD PTR [ebp-0x18]
  42665d:	xor    ecx,ebx
  42665f:	add    ecx,esi
  426661:	xor    DWORD PTR [eax],ecx
  426663:	mov    eax,DWORD PTR [ebp-0x10]
  426666:	mov    ecx,DWORD PTR [ebp-0x24]
  426669:	xor    eax,ebx
  42666b:	add    eax,esi
  42666d:	cmp    eax,ecx
  42666f:	je     0x426de7
  426675:	mov    eax,DWORD PTR [ebp-0x10]
  426678:	mov    ecx,DWORD PTR [ebp-0x40]
  42667b:	xor    eax,ebx
  42667d:	add    eax,esi
  42667f:	cmp    eax,ecx
  426681:	je     0x426de7
  426687:	mov    eax,DWORD PTR [ebp-0x10]
  42668a:	xor    eax,ebx
  42668c:	add    eax,esi
  42668e:	jmp    0x4266ac
  426690:	mov    edi,DWORD PTR [ebp-0x24]
  426693:	mov    cl,al
  426695:	and    cl,0x1f
  426698:	or     dl,0xff
  42669b:	sub    dl,cl
  42669d:	add    BYTE PTR [edi+eax*1],dl
  4266a0:	mov    ecx,DWORD PTR [ebp-0x18]
  4266a3:	xor    ecx,ebx
  4266a5:	lea    eax,[eax+ecx*1+0x3272f5]
  4266ac:	mov    ecx,DWORD PTR [ebp-0x40]
  4266af:	cmp    eax,ecx
  4266b1:	jb     0x426690
  4266b3:	mov    eax,DWORD PTR [ebp-0x40]
  4266b6:	mov    DWORD PTR [ebp-0x28],eax
  4266b9:	mov    eax,DWORD PTR [ebp-0x24]
  4266bc:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4266c3:	mov    DWORD PTR [ebp-0xd4],eax
  4266c9:	mov    edi,0xf89c85a2
  4266ce:	mov    DWORD PTR [ebp-0x2c],edi
  4266d1:	mov    eax,DWORD PTR [ebp-0x38]
  4266d4:	xor    eax,ebx
  4266d6:	add    eax,esi
  4266d8:	mov    DWORD PTR [ebp-0xc],eax
  4266db:	mov    eax,DWORD PTR [ebp-0x38]
  4266de:	xor    eax,ebx
  4266e0:	add    eax,esi
  4266e2:	mov    DWORD PTR [ebp-0x8],eax
  4266e5:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4266ec:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  4266f3:	mov    eax,DWORD PTR [ebp-0x38]
  4266f6:	mov    ecx,DWORD PTR [ebp-0x28]
  4266f9:	xor    eax,ebx
  4266fb:	add    eax,esi
  4266fd:	cmp    ecx,eax
  4266ff:	je     0x4268fe
  426705:	jmp    0x4268da
  42670a:	mov    ecx,DWORD PTR [ebp-0xc]
  42670d:	mov    eax,DWORD PTR [ebp-0x28]
  426710:	sub    eax,ecx
  426712:	mov    ecx,DWORD PTR [ebp-0x48]
  426715:	xor    ecx,ebx
  426717:	add    ecx,esi
  426719:	xor    edx,edx
  42671b:	div    ecx
  42671d:	mov    DWORD PTR [ebp-0x8],eax
  426720:	mov    eax,DWORD PTR [ebp-0x4c]
  426723:	mov    ecx,DWORD PTR [ebp-0x8]
  426726:	xor    eax,ebx
  426728:	add    eax,esi
  42672a:	cmp    ecx,eax
  42672c:	jbe    0x426738
  42672e:	mov    eax,DWORD PTR [ebp-0x4c]
  426731:	xor    eax,ebx
  426733:	add    eax,esi
  426735:	mov    DWORD PTR [ebp-0x8],eax
  426738:	mov    eax,DWORD PTR [ebp-0x48]
  42673b:	mov    ecx,DWORD PTR [ebp-0x8]
  42673e:	xor    eax,ebx
  426740:	add    eax,esi
  426742:	imul   eax,ecx
  426745:	mov    DWORD PTR [ebp-0x8],eax
  426748:	mov    eax,DWORD PTR [ebp-0x38]
  42674b:	mov    ecx,DWORD PTR [ebp-0x8]
  42674e:	xor    eax,ebx
  426750:	add    eax,esi
  426752:	cmp    ecx,eax
  426754:	je     0x4268c8
  42675a:	mov    eax,DWORD PTR [ebp-0x8]
  42675d:	mov    DWORD PTR [ebp-0x14],eax
  426760:	mov    eax,DWORD PTR [ebp-0xc]
  426763:	add    eax,DWORD PTR [ebp-0xd4]
  426769:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426770:	mov    DWORD PTR [ebp-0x34],edi
  426773:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  42677d:	mov    DWORD PTR [ebp-0x8],eax
  426780:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426787:	mov    DWORD PTR [ebp-0x1c],edi
  42678a:	mov    eax,DWORD PTR [ebp-0x20]
  42678d:	xor    eax,ebx
  42678f:	add    eax,esi
  426791:	jmp    0x426887
  426796:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  4267a0:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  4267aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4267ad:	mov    ecx,DWORD PTR [ebp-0x44]
  4267b0:	xor    eax,ebx
  4267b2:	add    eax,esi
  4267b4:	imul   eax,ecx
  4267b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ba:	mov    al,BYTE PTR [eax+ecx*1]
  4267bd:	mov    BYTE PTR [ebp-0x2],al
  4267c0:	mov    eax,DWORD PTR [ebp-0x1c]
  4267c3:	mov    ecx,DWORD PTR [ebp-0x44]
  4267c6:	xor    eax,ebx
  4267c8:	add    eax,esi
  4267ca:	imul   eax,ecx
  4267cd:	mov    ecx,DWORD PTR [ebp-0xe8]
  4267d3:	xor    ecx,ebx
  4267d5:	add    eax,ecx
  4267d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4267da:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4267e2:	mov    ecx,DWORD PTR [ebp-0xe0]
  4267e8:	xor    ecx,ebx
  4267ea:	lea    eax,[ecx+eax*1+0x3272f5]
  4267f1:	movzx  ecx,BYTE PTR [ebp-0x2]
  4267f5:	xor    ecx,eax
  4267f7:	mov    BYTE PTR [ebp-0x2],cl
  4267fa:	mov    al,BYTE PTR [ebp-0x2]
  4267fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  426800:	mov    edx,DWORD PTR [ebp-0x44]
  426803:	xor    ecx,ebx
  426805:	add    ecx,esi
  426807:	imul   ecx,edx
  42680a:	mov    edx,DWORD PTR [ebp-0x8]
  42680d:	mov    BYTE PTR [ecx+edx*1],al
  426810:	mov    eax,DWORD PTR [ebp-0x1c]
  426813:	mov    ecx,DWORD PTR [ebp-0x44]
  426816:	xor    eax,ebx
  426818:	add    eax,esi
  42681a:	imul   eax,ecx
  42681d:	mov    ecx,DWORD PTR [ebp-0x8]
  426820:	mov    al,BYTE PTR [eax+ecx*1]
  426823:	mov    BYTE PTR [ebp-0x2],al
  426826:	mov    eax,DWORD PTR [ebp-0x1c]
  426829:	mov    ecx,DWORD PTR [ebp-0x44]
  42682c:	xor    eax,ebx
  42682e:	add    eax,esi
  426830:	imul   eax,ecx
  426833:	mov    ecx,DWORD PTR [ebp-0x34]
  426836:	xor    ecx,ebx
  426838:	add    eax,ecx
  42683a:	mov    ecx,DWORD PTR [ebp-0x8]
  42683d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426845:	mov    ecx,DWORD PTR [ebp-0xc4]
  42684b:	xor    ecx,ebx
  42684d:	lea    eax,[ecx+eax*1+0x3272f5]
  426854:	movzx  ecx,BYTE PTR [ebp-0x2]
  426858:	xor    ecx,eax
  42685a:	mov    BYTE PTR [ebp-0x2],cl
  42685d:	mov    al,BYTE PTR [ebp-0x2]
  426860:	mov    ecx,DWORD PTR [ebp-0x1c]
  426863:	mov    edx,DWORD PTR [ebp-0x44]
  426866:	xor    ecx,ebx
  426868:	add    ecx,esi
  42686a:	imul   ecx,edx
  42686d:	mov    edx,DWORD PTR [ebp-0x8]
  426870:	mov    BYTE PTR [ecx+edx*1],al
  426873:	mov    eax,DWORD PTR [ebp-0x30]
  426876:	mov    ecx,DWORD PTR [ebp-0x34]
  426879:	xor    eax,ebx
  42687b:	xor    ecx,ebx
  42687d:	add    eax,esi
  42687f:	add    ecx,esi
  426881:	imul   eax,ecx
  426884:	add    eax,DWORD PTR [ebp-0x44]
  426887:	mov    DWORD PTR [ebp-0x44],eax
  42688a:	mov    eax,DWORD PTR [ebp-0x44]
  42688d:	mov    ecx,DWORD PTR [ebp-0x14]
  426890:	cmp    ecx,eax
  426892:	jb     0x426796
  426898:	mov    eax,DWORD PTR [ebp-0x34]
  42689b:	mov    ecx,DWORD PTR [ebp-0x14]
  42689e:	xor    eax,ebx
  4268a0:	add    eax,esi
  4268a2:	imul   eax,ecx
  4268a5:	mov    ecx,DWORD PTR [ebp-0x20]
  4268a8:	xor    ecx,ebx
  4268aa:	add    ecx,esi
  4268ac:	or     eax,ecx
  4268ae:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268b1:	xor    ecx,ebx
  4268b3:	add    eax,ecx
  4268b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268b8:	xor    ecx,ebx
  4268ba:	add    eax,ecx
  4268bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4268bf:	lea    eax,[eax+ecx*1+0x64e5ea]
  4268c6:	jmp    0x4268d7
  4268c8:	mov    eax,DWORD PTR [ebp-0x2c]
  4268cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4268ce:	xor    eax,ebx
  4268d0:	lea    eax,[eax+ecx*1+0x3272f5]
  4268d7:	mov    DWORD PTR [ebp-0xc],eax
  4268da:	mov    eax,DWORD PTR [ebp-0x2c]
  4268dd:	xor    eax,ebx
  4268df:	mov    ecx,0xffcd8d0b
  4268e4:	sub    ecx,eax
  4268e6:	add    ecx,DWORD PTR [ebp-0x28]
  4268e9:	mov    eax,DWORD PTR [ebp-0x2c]
  4268ec:	mov    edx,DWORD PTR [ebp-0xc]
  4268ef:	xor    eax,ebx
  4268f1:	add    eax,esi
  4268f3:	imul   eax,edx
  4268f6:	cmp    eax,ecx
  4268f8:	jbe    0x42670a
  4268fe:	mov    eax,DWORD PTR [ebp-0x10]
  426901:	mov    ecx,DWORD PTR [ebp-0x40]
  426904:	mov    eax,DWORD PTR [ebp+0x8]
  426907:	mov    edx,DWORD PTR [ebp-0x54]
  42690a:	mov    eax,DWORD PTR [eax+0x1e0]
  426910:	xor    edx,ebx
  426912:	add    edx,esi
  426914:	push   edx
  426915:	mov    edx,DWORD PTR [ebp-0x3c]
  426918:	xor    edx,ebx
  42691a:	add    edx,esi
  42691c:	push   edx
  42691d:	push   ecx
  42691e:	mov    DWORD PTR [ebp-0x30],ecx
  426921:	mov    ecx,DWORD PTR [ebp-0x10]
  426924:	xor    ecx,ebx
  426926:	add    ecx,esi
  426928:	push   ecx
  426929:	call   DWORD PTR [eax+0x14]
  42692c:	mov    edi,eax
  42692e:	mov    eax,DWORD PTR [ebp-0x10]
  426931:	xor    eax,ebx
  426933:	add    eax,esi
  426935:	cmp    eax,edi
  426937:	je     0x426992
  426939:	mov    eax,DWORD PTR [ebp-0x10]
  42693c:	jmp    0x42695f
  42693e:	mov    ecx,DWORD PTR [ebp-0x24]
  426941:	xor    eax,ebx
  426943:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  42694a:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  426951:	mov    ecx,DWORD PTR [ebp-0x18]
  426954:	xor    ecx,ebx
  426956:	lea    eax,[ecx+eax*1+0x3272f5]
  42695d:	xor    eax,ebx
  42695f:	mov    ecx,DWORD PTR [ebp-0x40]
  426962:	sub    ecx,esi
  426964:	xor    ecx,ebx
  426966:	cmp    eax,ecx
  426968:	jne    0x42693e
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	mov    ecx,DWORD PTR [ebp-0x50]
  426970:	mov    eax,DWORD PTR [eax+0x1e0]
  426976:	xor    ecx,ebx
  426978:	add    ecx,esi
  42697a:	push   ecx
  42697b:	mov    ecx,DWORD PTR [ebp-0x10]
  42697e:	xor    ecx,ebx
  426980:	add    ecx,esi
  426982:	push   ecx
  426983:	push   DWORD PTR [ebp-0x24]
  426986:	call   DWORD PTR [eax+0x18]
  426989:	mov    eax,DWORD PTR [ebp-0x30]
  42698c:	mov    DWORD PTR [ebp-0x24],edi
  42698f:	mov    DWORD PTR [ebp-0x40],eax
  426992:	mov    edi,DWORD PTR [ebp-0x24]
  426995:	mov    eax,DWORD PTR [ebp-0x18]
  426998:	mov    ecx,DWORD PTR [ebp-0x10]
  42699b:	xor    eax,ebx
  42699d:	mov    DWORD PTR [ebp-0x30],edi
  4269a0:	add    eax,esi
  4269a2:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  4269a9:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4269b0:	jmp    0x4269e4
  4269b2:	xor    ecx,ebx
  4269b4:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  4269bb:	xor    dl,0x7e
  4269be:	add    dl,0x3
  4269c1:	mov    DWORD PTR [ebp-0x3c],ecx
  4269c4:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  4269cc:	movzx  edx,dl
  4269cf:	cmp    ecx,edx
  4269d1:	jne    0x4269ee
  4269d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4269d6:	mov    edx,DWORD PTR [ebp-0x3c]
  4269d9:	xor    ecx,ebx
  4269db:	lea    ecx,[ecx+edx*1+0x3272f5]
  4269e2:	xor    ecx,ebx
  4269e4:	cmp    ecx,0xf89c85bd
  4269ea:	jne    0x4269b2
  4269ec:	jmp    0x4269f5
  4269ee:	mov    eax,DWORD PTR [ebp-0x10]
  4269f1:	xor    eax,ebx
  4269f3:	add    eax,esi
  4269f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269f8:	xor    ecx,ebx
  4269fa:	add    ecx,esi
  4269fc:	cmp    ecx,eax
  4269fe:	je     0x426b71
  426a04:	mov    eax,DWORD PTR [edi+0x8]
  426a07:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426a0e:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426a15:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426a1c:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426a23:	mov    DWORD PTR [ebp-0x14],eax
  426a26:	mov    eax,DWORD PTR [ebp+0x8]
  426a29:	mov    ecx,DWORD PTR [ebp-0x20]
  426a2c:	xor    ecx,ebx
  426a2e:	add    ecx,esi
  426a30:	push   ecx
  426a31:	mov    ecx,DWORD PTR [ebp-0x48]
  426a34:	mov    eax,DWORD PTR [eax+0x1e0]
  426a3a:	xor    ecx,ebx
  426a3c:	add    ecx,esi
  426a3e:	push   ecx
  426a3f:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a42:	xor    ecx,ebx
  426a44:	add    ecx,esi
  426a46:	push   ecx
  426a47:	mov    ecx,DWORD PTR [ebp-0xc]
  426a4a:	xor    ecx,ebx
  426a4c:	add    ecx,esi
  426a4e:	push   ecx
  426a4f:	call   DWORD PTR [eax+0x14]
  426a52:	mov    edi,eax
  426a54:	mov    eax,DWORD PTR [ebp+0x8]
  426a57:	mov    ecx,DWORD PTR [ebp-0x20]
  426a5a:	mov    eax,DWORD PTR [eax+0x1e0]
  426a60:	xor    ecx,ebx
  426a62:	add    ecx,esi
  426a64:	push   ecx
  426a65:	mov    ecx,DWORD PTR [ebp-0x48]
  426a68:	xor    ecx,ebx
  426a6a:	add    ecx,esi
  426a6c:	push   ecx
  426a6d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a70:	push   DWORD PTR [ebp-0x14]
  426a73:	xor    ecx,ebx
  426a75:	add    ecx,esi
  426a77:	push   ecx
  426a78:	call   DWORD PTR [eax+0x14]
  426a7b:	mov    ecx,DWORD PTR [ebp-0xc]
  426a7e:	xor    ecx,ebx
  426a80:	add    ecx,esi
  426a82:	mov    DWORD PTR [ebp-0x20],eax
  426a85:	cmp    ecx,edi
  426a87:	je     0x426e14
  426a8d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a90:	xor    ecx,ebx
  426a92:	add    ecx,esi
  426a94:	cmp    ecx,eax
  426a96:	je     0x426e14
  426a9c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426aa3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426aaa:	mov    ecx,DWORD PTR [ebp-0x3c]
  426aad:	xor    cl,0xae
  426ab0:	sub    cl,0xb
  426ab3:	mov    BYTE PTR [edi],cl
  426ab5:	mov    ecx,DWORD PTR [ebp-0xc]
  426ab8:	xor    cl,0xae
  426abb:	sub    cl,0xb
  426abe:	mov    BYTE PTR [edi+0x1],cl
  426ac1:	mov    ecx,DWORD PTR [ebp-0x54]
  426ac4:	xor    cl,0xae
  426ac7:	sub    cl,0xb
  426aca:	mov    BYTE PTR [edi+0x2],cl
  426acd:	and    DWORD PTR [ebp-0xc8],0x0
  426ad4:	and    DWORD PTR [ebp-0xdc],0x0
  426adb:	lea    ecx,[ebp-0xdc]
  426ae1:	push   ecx
  426ae2:	push   DWORD PTR [ebp-0x14]
  426ae5:	push   eax
  426ae6:	lea    eax,[ebp-0xc8]
  426aec:	push   eax
  426aed:	mov    eax,DWORD PTR [ebp-0x30]
  426af0:	push   DWORD PTR [eax+0xc]
  426af3:	mov    eax,DWORD PTR [ebp-0x24]
  426af6:	add    eax,0x10
  426af9:	push   eax
  426afa:	push   edi
  426afb:	call   0x425da1
  426b00:	mov    DWORD PTR [ebp-0x3c],eax
  426b03:	mov    eax,DWORD PTR [ebp+0x8]
  426b06:	mov    ecx,DWORD PTR [ebp-0x50]
  426b09:	mov    eax,DWORD PTR [eax+0x1e0]
  426b0f:	xor    ecx,ebx
  426b11:	add    ecx,esi
  426b13:	push   ecx
  426b14:	mov    ecx,DWORD PTR [ebp-0xc]
  426b17:	xor    ecx,ebx
  426b19:	add    ecx,esi
  426b1b:	push   ecx
  426b1c:	push   edi
  426b1d:	call   DWORD PTR [eax+0x18]
  426b20:	mov    eax,DWORD PTR [ebp-0x3c]
  426b23:	add    eax,0xffcd8d0b
  426b28:	xor    eax,ebx
  426b2a:	cmp    eax,0xf89c85a5
  426b2f:	mov    eax,DWORD PTR [ebp+0x8]
  426b32:	mov    eax,DWORD PTR [eax+0x1e0]
  426b38:	mov    ecx,DWORD PTR [ebp-0x50]
  426b3b:	jne    0x426b5e
  426b3d:	xor    ecx,ebx
  426b3f:	add    ecx,esi
  426b41:	push   ecx
  426b42:	mov    ecx,DWORD PTR [ebp-0xc]
  426b45:	xor    ecx,ebx
  426b47:	add    ecx,esi
  426b49:	push   ecx
  426b4a:	push   DWORD PTR [ebp-0x24]
  426b4d:	call   DWORD PTR [eax+0x18]
  426b50:	mov    eax,DWORD PTR [ebp-0x20]
  426b53:	mov    DWORD PTR [ebp-0x24],eax
  426b56:	mov    eax,DWORD PTR [ebp-0x14]
  426b59:	mov    DWORD PTR [ebp-0x40],eax
  426b5c:	jmp    0x426b71
  426b5e:	xor    ecx,ebx
  426b60:	add    ecx,esi
  426b62:	push   ecx
  426b63:	mov    ecx,DWORD PTR [ebp-0xc]
  426b66:	xor    ecx,ebx
  426b68:	add    ecx,esi
  426b6a:	push   ecx
  426b6b:	push   DWORD PTR [ebp-0x20]
  426b6e:	call   DWORD PTR [eax+0x18]
  426b71:	mov    eax,DWORD PTR [ebp-0x40]
  426b74:	mov    DWORD PTR [ebp-0x38],eax
  426b77:	mov    eax,DWORD PTR [ebp-0x24]
  426b7a:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426b81:	mov    DWORD PTR [ebp-0x3c],eax
  426b84:	mov    edi,0xf89c85a2
  426b89:	mov    DWORD PTR [ebp-0x2c],edi
  426b8c:	mov    eax,DWORD PTR [ebp-0x28]
  426b8f:	xor    eax,ebx
  426b91:	add    eax,esi
  426b93:	mov    DWORD PTR [ebp-0xc],eax
  426b96:	mov    eax,DWORD PTR [ebp-0x28]
  426b99:	xor    eax,ebx
  426b9b:	add    eax,esi
  426b9d:	mov    DWORD PTR [ebp-0x14],eax
  426ba0:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426ba7:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426bae:	mov    eax,DWORD PTR [ebp-0x28]
  426bb1:	mov    ecx,DWORD PTR [ebp-0x38]
  426bb4:	xor    eax,ebx
  426bb6:	add    eax,esi
  426bb8:	cmp    ecx,eax
  426bba:	je     0x426db0
  426bc0:	jmp    0x426d8c
  426bc5:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc8:	mov    eax,DWORD PTR [ebp-0x38]
  426bcb:	sub    eax,ecx
  426bcd:	mov    ecx,DWORD PTR [ebp-0x48]
  426bd0:	xor    ecx,ebx
  426bd2:	add    ecx,esi
  426bd4:	xor    edx,edx
  426bd6:	div    ecx
  426bd8:	mov    DWORD PTR [ebp-0x14],eax
  426bdb:	mov    eax,DWORD PTR [ebp-0x20]
  426bde:	mov    ecx,DWORD PTR [ebp-0x14]
  426be1:	xor    eax,ebx
  426be3:	add    eax,esi
  426be5:	cmp    ecx,eax
  426be7:	jbe    0x426bf3
  426be9:	mov    eax,DWORD PTR [ebp-0x20]
  426bec:	xor    eax,ebx
  426bee:	add    eax,esi
  426bf0:	mov    DWORD PTR [ebp-0x14],eax
  426bf3:	mov    eax,DWORD PTR [ebp-0x48]
  426bf6:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf9:	xor    eax,ebx
  426bfb:	add    eax,esi
  426bfd:	imul   eax,ecx
  426c00:	mov    DWORD PTR [ebp-0x14],eax
  426c03:	mov    eax,DWORD PTR [ebp-0x28]
  426c06:	mov    ecx,DWORD PTR [ebp-0x14]
  426c09:	xor    eax,ebx
  426c0b:	add    eax,esi
  426c0d:	cmp    ecx,eax
  426c0f:	je     0x426d7a
  426c15:	mov    eax,DWORD PTR [ebp-0x14]
  426c18:	mov    DWORD PTR [ebp-0x34],eax
  426c1b:	mov    eax,DWORD PTR [ebp-0xc]
  426c1e:	add    eax,DWORD PTR [ebp-0x3c]
  426c21:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426c28:	mov    DWORD PTR [ebp-0x14],edi
  426c2b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426c32:	mov    DWORD PTR [ebp-0x1c],eax
  426c35:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426c3c:	mov    DWORD PTR [ebp-0x8],edi
  426c3f:	mov    eax,DWORD PTR [ebp-0x4c]
  426c42:	xor    eax,ebx
  426c44:	add    eax,esi
  426c46:	jmp    0x426d39
  426c4b:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426c55:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426c5f:	mov    eax,DWORD PTR [ebp-0x8]
  426c62:	mov    ecx,DWORD PTR [ebp-0x18]
  426c65:	xor    eax,ebx
  426c67:	add    eax,esi
  426c69:	imul   eax,ecx
  426c6c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c6f:	mov    al,BYTE PTR [eax+ecx*1]
  426c72:	mov    BYTE PTR [ebp-0x1],al
  426c75:	mov    eax,DWORD PTR [ebp-0x8]
  426c78:	mov    ecx,DWORD PTR [ebp-0x18]
  426c7b:	xor    eax,ebx
  426c7d:	add    eax,esi
  426c7f:	imul   eax,ecx
  426c82:	mov    ecx,DWORD PTR [ebp-0x54]
  426c85:	xor    ecx,ebx
  426c87:	add    eax,ecx
  426c89:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c8c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426c94:	mov    ecx,DWORD PTR [ebp-0xe4]
  426c9a:	xor    ecx,ebx
  426c9c:	lea    eax,[ecx+eax*1+0x3272f5]
  426ca3:	movzx  ecx,BYTE PTR [ebp-0x1]
  426ca7:	xor    ecx,eax
  426ca9:	mov    BYTE PTR [ebp-0x1],cl
  426cac:	mov    al,BYTE PTR [ebp-0x1]
  426caf:	mov    ecx,DWORD PTR [ebp-0x8]
  426cb2:	mov    edx,DWORD PTR [ebp-0x18]
  426cb5:	xor    ecx,ebx
  426cb7:	add    ecx,esi
  426cb9:	imul   ecx,edx
  426cbc:	mov    edx,DWORD PTR [ebp-0x1c]
  426cbf:	mov    BYTE PTR [ecx+edx*1],al
  426cc2:	mov    eax,DWORD PTR [ebp-0x8]
  426cc5:	mov    ecx,DWORD PTR [ebp-0x18]
  426cc8:	xor    eax,ebx
  426cca:	add    eax,esi
  426ccc:	imul   eax,ecx
  426ccf:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cd2:	mov    al,BYTE PTR [eax+ecx*1]
  426cd5:	mov    BYTE PTR [ebp-0x1],al
  426cd8:	mov    eax,DWORD PTR [ebp-0x8]
  426cdb:	mov    ecx,DWORD PTR [ebp-0x18]
  426cde:	xor    eax,ebx
  426ce0:	add    eax,esi
  426ce2:	imul   eax,ecx
  426ce5:	mov    ecx,DWORD PTR [ebp-0x14]
  426ce8:	xor    ecx,ebx
  426cea:	add    eax,ecx
  426cec:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cef:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426cf7:	mov    ecx,DWORD PTR [ebp-0xd0]
  426cfd:	xor    ecx,ebx
  426cff:	lea    eax,[ecx+eax*1+0x3272f5]
  426d06:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d0a:	xor    ecx,eax
  426d0c:	mov    BYTE PTR [ebp-0x1],cl
  426d0f:	mov    al,BYTE PTR [ebp-0x1]
  426d12:	mov    ecx,DWORD PTR [ebp-0x8]
  426d15:	mov    edx,DWORD PTR [ebp-0x18]
  426d18:	xor    ecx,ebx
  426d1a:	add    ecx,esi
  426d1c:	imul   ecx,edx
  426d1f:	mov    edx,DWORD PTR [ebp-0x1c]
  426d22:	mov    BYTE PTR [ecx+edx*1],al
  426d25:	mov    eax,DWORD PTR [ebp-0x30]
  426d28:	mov    ecx,DWORD PTR [ebp-0x14]
  426d2b:	xor    eax,ebx
  426d2d:	xor    ecx,ebx
  426d2f:	add    eax,esi
  426d31:	add    ecx,esi
  426d33:	imul   eax,ecx
  426d36:	add    eax,DWORD PTR [ebp-0x18]
  426d39:	mov    DWORD PTR [ebp-0x18],eax
  426d3c:	mov    eax,DWORD PTR [ebp-0x18]
  426d3f:	mov    ecx,DWORD PTR [ebp-0x34]
  426d42:	cmp    ecx,eax
  426d44:	jb     0x426c4b
  426d4a:	mov    eax,DWORD PTR [ebp-0x14]
  426d4d:	mov    ecx,DWORD PTR [ebp-0x34]
  426d50:	xor    eax,ebx
  426d52:	add    eax,esi
  426d54:	imul   eax,ecx
  426d57:	mov    ecx,DWORD PTR [ebp-0x4c]
  426d5a:	xor    ecx,ebx
  426d5c:	add    ecx,esi
  426d5e:	or     eax,ecx
  426d60:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d63:	xor    ecx,ebx
  426d65:	add    eax,ecx
  426d67:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d6a:	xor    ecx,ebx
  426d6c:	add    eax,ecx
  426d6e:	mov    ecx,DWORD PTR [ebp-0xc]
  426d71:	lea    eax,[eax+ecx*1+0x64e5ea]
  426d78:	jmp    0x426d89
  426d7a:	mov    eax,DWORD PTR [ebp-0x2c]
  426d7d:	mov    ecx,DWORD PTR [ebp-0xc]
  426d80:	xor    eax,ebx
  426d82:	lea    eax,[eax+ecx*1+0x3272f5]
  426d89:	mov    DWORD PTR [ebp-0xc],eax
  426d8c:	mov    eax,DWORD PTR [ebp-0x2c]
  426d8f:	xor    eax,ebx
  426d91:	mov    ecx,0xffcd8d0b
  426d96:	sub    ecx,eax
  426d98:	add    ecx,DWORD PTR [ebp-0x38]
  426d9b:	mov    eax,DWORD PTR [ebp-0x2c]
  426d9e:	mov    edx,DWORD PTR [ebp-0xc]
  426da1:	xor    eax,ebx
  426da3:	add    eax,esi
  426da5:	imul   eax,edx
  426da8:	cmp    eax,ecx
  426daa:	jbe    0x426bc5
  426db0:	push   DWORD PTR [ebp+0x8]
  426db3:	mov    eax,DWORD PTR [ebp+0x8]
  426db6:	push   DWORD PTR [eax+0x1cc]
  426dbc:	lea    eax,[ebp-0xd8]
  426dc2:	push   eax
  426dc3:	mov    eax,DWORD PTR [ebp+0x8]
  426dc6:	mov    eax,DWORD PTR [eax+0x1c4]
  426dcc:	push   DWORD PTR [eax]
  426dce:	mov    eax,DWORD PTR [ebp+0x8]
  426dd1:	mov    eax,DWORD PTR [eax+0x1c0]
  426dd7:	push   DWORD PTR [eax]
  426dd9:	push   DWORD PTR [ebp-0x40]
  426ddc:	push   DWORD PTR [ebp-0x24]
  426ddf:	call   0x427876
  426de4:	mov    DWORD PTR [ebp-0x3c],eax
  426de7:	mov    eax,DWORD PTR [ebp-0x10]
  426dea:	mov    ecx,DWORD PTR [ebp-0x24]
  426ded:	xor    eax,ebx
  426def:	add    eax,esi
  426df1:	cmp    eax,ecx
  426df3:	je     0x426e14
  426df5:	mov    eax,DWORD PTR [ebp+0x8]
  426df8:	mov    ecx,DWORD PTR [ebp-0x50]
  426dfb:	mov    eax,DWORD PTR [eax+0x1e0]
  426e01:	xor    ecx,ebx
  426e03:	add    ecx,esi
  426e05:	push   ecx
  426e06:	mov    ecx,DWORD PTR [ebp-0x10]
  426e09:	xor    ecx,ebx
  426e0b:	add    ecx,esi
  426e0d:	push   ecx
  426e0e:	push   DWORD PTR [ebp-0x24]
  426e11:	call   DWORD PTR [eax+0x18]
  426e14:	pop    edi
  426e15:	pop    esi
  426e16:	pop    ebx
  426e17:	leave  
  426e18:	ret    0x4
  426e1b:	push   ebp
  426e1c:	mov    ebp,esp
  426e1e:	push   ecx
  426e1f:	push   ecx
  426e20:	lea    eax,[ebp-0x8]
  426e23:	mov    DWORD PTR [ebp-0x4],eax
  426e26:	push   esi
  426e27:	mov    esi,DWORD PTR [ebp-0x4]
  426e2a:	mov    eax,0xf881ba2f
  426e2f:	mov    DWORD PTR [esi],eax
  426e31:	mov    esi,DWORD PTR [ebp-0x8]
  426e34:	cmp    esi,eax
  426e36:	pop    esi
  426e37:	jne    0x426e41
  426e39:	mov    BYTE PTR [ecx+0xa],0x83
  426e3d:	mov    BYTE PTR [edx+0x8],0x2e
  426e41:	mov    BYTE PTR [edx+0xa],0x83
  426e45:	mov    BYTE PTR [ecx+0x2],0x15
  426e49:	leave  
  426e4a:	ret    
  426e4b:	push   ebp
  426e4c:	mov    ebp,esp
  426e4e:	push   ecx
  426e4f:	push   ecx
  426e50:	lea    eax,[ebp-0x8]
  426e53:	mov    DWORD PTR [ebp-0x4],eax
  426e56:	mov    edx,DWORD PTR [ebp-0x4]
  426e59:	mov    eax,0xf88b0bcb
  426e5e:	mov    DWORD PTR [edx],eax
  426e60:	mov    edx,DWORD PTR [ebp-0x8]
  426e63:	cmp    edx,eax
  426e65:	jne    0x426e76
  426e67:	mov    eax,DWORD PTR [ebp+0x8]
  426e6a:	mov    BYTE PTR [ecx+0x9],0xf
  426e6e:	mov    BYTE PTR [eax+0x7],0x56
  426e72:	mov    BYTE PTR [ecx+0x6],0xe
  426e76:	mov    BYTE PTR [ecx+0x3],0x1f
  426e7a:	leave  
  426e7b:	ret    0x4
  426e7e:	push   ebp
  426e7f:	mov    ebp,esp
  426e81:	push   ecx
  426e82:	push   ecx
  426e83:	lea    eax,[ebp-0x8]
  426e86:	mov    DWORD PTR [ebp-0x4],eax
  426e89:	mov    edx,DWORD PTR [ebp-0x4]
  426e8c:	mov    eax,0x7e0da2f
  426e91:	mov    DWORD PTR [edx],eax
  426e93:	mov    edx,DWORD PTR [ebp-0x8]
  426e96:	cmp    edx,eax
  426e98:	jne    0x426e9e
  426e9a:	mov    BYTE PTR [ecx+0x7],0x56
  426e9e:	mov    eax,DWORD PTR [ebp+0x8]
  426ea1:	mov    BYTE PTR [ecx+0x1],0x18
  426ea5:	mov    BYTE PTR [eax+0x9],0x2f
  426ea9:	leave  
  426eaa:	ret    0x4
  426ead:	push   ebp
  426eae:	mov    ebp,esp
  426eb0:	push   ecx
  426eb1:	push   ecx
  426eb2:	lea    eax,[ebp-0x8]
  426eb5:	mov    DWORD PTR [ebp-0x4],eax
  426eb8:	push   esi
  426eb9:	mov    esi,DWORD PTR [ebp-0x4]
  426ebc:	mov    eax,0x7060e3c
  426ec1:	mov    DWORD PTR [esi],eax
  426ec3:	mov    esi,DWORD PTR [ebp-0x8]
  426ec6:	cmp    esi,eax
  426ec8:	pop    esi
  426ec9:	jne    0x426ed5
  426ecb:	mov    BYTE PTR [edx+0x4],0x12
  426ecf:	mov    WORD PTR [ecx+0x3],0x121f
  426ed5:	mov    BYTE PTR [edx],0x3e
  426ed8:	leave  
  426ed9:	ret    
  426eda:	push   ebp
  426edb:	mov    ebp,esp
  426edd:	push   ecx
  426ede:	push   ecx
  426edf:	lea    eax,[ebp-0x8]
  426ee2:	mov    DWORD PTR [ebp-0x4],eax
  426ee5:	mov    edx,DWORD PTR [ebp-0x4]
  426ee8:	mov    eax,0xf8870b3f
  426eed:	mov    DWORD PTR [edx],eax
  426eef:	mov    edx,DWORD PTR [ebp-0x8]
  426ef2:	cmp    edx,eax
  426ef4:	jne    0x426f01
  426ef6:	mov    eax,DWORD PTR [ebp+0x8]
  426ef9:	mov    BYTE PTR [ecx+0x8],0xe
  426efd:	mov    BYTE PTR [eax+0x1],0x18
  426f01:	mov    BYTE PTR [ecx+0x5],0xa
  426f05:	leave  
  426f06:	ret    0x4
  426f09:	push   esi
  426f0a:	mov    ecx,edi
  426f0c:	call   0x426eda
  426f11:	mov    edx,edi
  426f13:	mov    ecx,esi
  426f15:	mov    BYTE PTR [esi],0x1e
  426f18:	call   0x426ead
  426f1d:	push   esi
  426f1e:	mov    ecx,edi
  426f20:	mov    BYTE PTR [esi+0x5],0xa
  426f24:	call   0x426e7e
  426f29:	push   esi
  426f2a:	mov    BYTE PTR [esi+0x6],0xe
  426f2e:	call   0x426e4b
  426f33:	mov    BYTE PTR [esi+0x2],0x15
  426f37:	mov    edx,esi
  426f39:	jmp    0x426e1b
  426f3e:	push   ebp
  426f3f:	mov    ebp,esp
  426f41:	push   ecx
  426f42:	mov    ecx,DWORD PTR [edx+0x194]
  426f48:	push   esi
  426f49:	mov    esi,DWORD PTR [ebp+0x8]
  426f4c:	mov    esi,DWORD PTR [esi]
  426f4e:	mov    DWORD PTR [ecx],esi
  426f50:	mov    ecx,DWORD PTR [edx+0x194]
  426f56:	mov    ecx,DWORD PTR [ecx]
  426f58:	mov    esi,DWORD PTR [edx+0x190]
  426f5e:	mov    DWORD PTR [esi],ecx
  426f60:	mov    eax,DWORD PTR [edx+0x194]
  426f66:	mov    ecx,DWORD PTR [eax]
  426f68:	mov    ecx,DWORD PTR [ecx+0x3c]
  426f6b:	add    ecx,DWORD PTR [eax]
  426f6d:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426f74:	mov    eax,DWORD PTR [ebp-0x4]
  426f77:	movzx  ecx,WORD PTR [ecx+0x16]
  426f7b:	xor    eax,0x75108ae
  426f80:	add    eax,0x3272f5
  426f85:	pop    esi
  426f86:	test   ecx,eax
  426f88:	je     0x426f96
  426f8a:	mov    eax,DWORD PTR [edx+0x1c8]
  426f90:	mov    DWORD PTR [eax],0xf89c85a2
  426f96:	leave  
  426f97:	ret    0x4
  426f9a:	push   ebp
  426f9b:	mov    ebp,esp
  426f9d:	sub    esp,0x70
  426fa0:	and    DWORD PTR [ebp-0x20],0x0
  426fa4:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  426fab:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426fb2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  426fb9:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426fc0:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  426fc7:	mov    eax,DWORD PTR [ebp+0x20]
  426fca:	mov    eax,DWORD PTR [eax+0x194]
  426fd0:	mov    DWORD PTR [ebp-0xc],eax
  426fd3:	mov    eax,DWORD PTR [ebp+0x20]
  426fd6:	push   ebx
  426fd7:	push   esi
  426fd8:	mov    esi,DWORD PTR [eax+0x190]
  426fde:	mov    eax,DWORD PTR [ebp+0x20]
  426fe1:	mov    eax,DWORD PTR [eax+0x18c]
  426fe7:	mov    DWORD PTR [ebp-0x8],eax
  426fea:	mov    eax,DWORD PTR [eax]
  426fec:	push   edi
  426fed:	mov    DWORD PTR [ebp-0x4],esi
  426ff0:	test   eax,eax
  426ff2:	jne    0x426fff
  426ff4:	push   DWORD PTR [ebp+0x1c]
  426ff7:	mov    edx,DWORD PTR [ebp+0x20]
  426ffa:	call   0x426f3e
  426fff:	mov    eax,DWORD PTR [esi]
  427001:	mov    ebx,DWORD PTR [esi]
  427003:	add    ebx,DWORD PTR [eax+0x3c]
  427006:	mov    eax,DWORD PTR [ebp+0xc]
  427009:	mov    ecx,DWORD PTR [ebp-0x8]
  42700c:	mov    ecx,DWORD PTR [ecx]
  42700e:	mov    esi,0x75108ae
  427013:	xor    eax,esi
  427015:	mov    edi,0x3272f5
  42701a:	add    eax,edi
  42701c:	cmp    eax,ecx
  42701e:	jne    0x427256
  427024:	mov    eax,DWORD PTR [ebp-0xc]
  427027:	mov    eax,DWORD PTR [eax]
  427029:	mov    DWORD PTR [ebp-0x10],eax
  42702c:	mov    eax,DWORD PTR [ebx+0x50]
  42702f:	mov    DWORD PTR [ebp-0x68],eax
  427032:	mov    eax,DWORD PTR [ebp-0x18]
  427035:	xor    eax,esi
  427037:	add    eax,edi
  427039:	mov    DWORD PTR [ebp-0x64],eax
  42703c:	mov    eax,DWORD PTR [ebp-0x14]
  42703f:	and    DWORD PTR [ebp-0x6c],0x0
  427043:	xor    eax,esi
  427045:	add    eax,edi
  427047:	mov    DWORD PTR [ebp-0x60],eax
  42704a:	lea    eax,[ebp-0x70]
  42704d:	push   eax
  42704e:	mov    eax,DWORD PTR [ebp+0x8]
  427051:	xor    eax,esi
  427053:	add    eax,edi
  427055:	push   eax
  427056:	mov    eax,DWORD PTR [ebp+0x20]
  427059:	add    eax,0xaa
  42705e:	push   eax
  42705f:	mov    eax,DWORD PTR [ebp+0x20]
  427062:	mov    eax,DWORD PTR [eax+0x198]
  427068:	mov    DWORD PTR [ebp-0x70],0x4
  42706f:	push   DWORD PTR [eax]
  427071:	mov    eax,DWORD PTR [ebp+0x10]
  427074:	call   eax
  427076:	mov    ecx,DWORD PTR [ebp-0xc]
  427079:	mov    ecx,DWORD PTR [ecx]
  42707b:	mov    edx,DWORD PTR [ebp-0x8]
  42707e:	mov    DWORD PTR [ebp-0x6c],eax
  427081:	mov    DWORD PTR [ebp+0x1c],eax
  427084:	mov    DWORD PTR [edx],ecx
  427086:	mov    ecx,DWORD PTR [ebp-0x4]
  427089:	mov    DWORD PTR [ecx],eax
  42708b:	mov    eax,DWORD PTR [ebx+0x50]
  42708e:	mov    DWORD PTR [ebp-0x68],eax
  427091:	mov    eax,DWORD PTR [ebp-0x1c]
  427094:	xor    eax,esi
  427096:	add    eax,edi
  427098:	mov    DWORD PTR [ebp-0x64],eax
  42709b:	lea    eax,[ebp-0x20]
  42709e:	mov    DWORD PTR [ebp-0x60],eax
  4270a1:	lea    eax,[ebp-0x70]
  4270a4:	push   eax
  4270a5:	mov    eax,DWORD PTR [ebp+0x8]
  4270a8:	xor    eax,esi
  4270aa:	add    eax,edi
  4270ac:	push   eax
  4270ad:	mov    eax,DWORD PTR [ebp+0x20]
  4270b0:	add    eax,0xee
  4270b5:	push   eax
  4270b6:	mov    eax,DWORD PTR [ebp+0x20]
  4270b9:	mov    eax,DWORD PTR [eax+0x198]
  4270bf:	mov    DWORD PTR [ebp-0x70],0x4
  4270c6:	push   DWORD PTR [eax]
  4270c8:	mov    eax,DWORD PTR [ebp+0x10]
  4270cb:	call   eax
  4270cd:	test   eax,eax
  4270cf:	je     0x4270f4
  4270d1:	and    DWORD PTR [ebp+0xc],0x0
  4270d5:	cmp    DWORD PTR [ebx+0x50],0x0
  4270d9:	jbe    0x4270f4
  4270db:	mov    eax,DWORD PTR [ebp+0x1c]
  4270de:	mov    ecx,DWORD PTR [ebp-0x10]
  4270e1:	sub    ecx,eax
  4270e3:	mov    dl,BYTE PTR [ecx+eax*1]
  4270e6:	inc    DWORD PTR [ebp+0xc]
  4270e9:	mov    BYTE PTR [eax],dl
  4270eb:	mov    edx,DWORD PTR [ebp+0xc]
  4270ee:	inc    eax
  4270ef:	cmp    edx,DWORD PTR [ebx+0x50]
  4270f2:	jb     0x4270e3
  4270f4:	mov    edx,DWORD PTR [ebp+0x1c]
  4270f7:	mov    ecx,DWORD PTR [edx+0x3c]
  4270fa:	add    ecx,edx
  4270fc:	mov    eax,DWORD PTR [ecx+0xa0]
  427102:	mov    ebx,DWORD PTR [ecx+0x28]
  427105:	add    eax,edx
  427107:	sub    edx,DWORD PTR [ebp-0x10]
  42710a:	add    ebx,DWORD PTR [ebp+0x1c]
  42710d:	mov    DWORD PTR [ebp+0xc],edx
  427110:	mov    DWORD PTR [ebp-0x2c],ecx
  427113:	mov    DWORD PTR [ebp-0x14],ebx
  427116:	mov    DWORD PTR [ebp-0x8],0x0
  42711d:	jmp    0x427199
  42711f:	add    edx,0xfffffff8
  427122:	shr    edx,1
  427124:	mov    DWORD PTR [ebp-0x18],edx
  427127:	je     0x427185
  427129:	lea    edx,[eax+0x8]
  42712c:	mov    DWORD PTR [ebp-0x4],edx
  42712f:	mov    edx,DWORD PTR [ebp-0x18]
  427132:	mov    DWORD PTR [ebp-0x18],edx
  427135:	mov    edx,DWORD PTR [ebp-0x4]
  427138:	movzx  edx,WORD PTR [edx]
  42713b:	mov    DWORD PTR [ebp-0x24],edx
  42713e:	and    edx,0xfff
  427144:	mov    DWORD PTR [ebp-0x28],edx
  427147:	mov    edx,DWORD PTR [ebp-0x24]
  42714a:	shr    edx,0xc
  42714d:	add    edx,0xffcd8d0b
  427153:	xor    edx,esi
  427155:	cmp    edx,0xf89c85a0
  42715b:	jne    0x42717c
  42715d:	mov    edx,DWORD PTR [ebp-0x28]
  427160:	add    edx,DWORD PTR [ebp+0x1c]
  427163:	mov    ebx,DWORD PTR [eax]
  427165:	cmp    DWORD PTR [ebx+edx*1],0x0
  427169:	je     0x427179
  42716b:	mov    ecx,DWORD PTR [ebp+0xc]
  42716e:	add    ecx,DWORD PTR [ebx+edx*1]
  427171:	mov    ebx,DWORD PTR [eax]
  427173:	mov    DWORD PTR [edx+ebx*1],ecx
  427176:	mov    ecx,DWORD PTR [ebp-0x2c]
  427179:	mov    ebx,DWORD PTR [ebp-0x14]
  42717c:	add    DWORD PTR [ebp-0x4],0x2
  427180:	dec    DWORD PTR [ebp-0x18]
  427183:	jne    0x427135
  427185:	mov    edx,DWORD PTR [ebp-0xc]
  427188:	add    DWORD PTR [ebp-0x8],edx
  42718b:	mov    edx,DWORD PTR [ebp-0x8]
  42718e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427194:	jae    0x4271a7
  427196:	add    eax,DWORD PTR [ebp-0xc]
  427199:	mov    edx,DWORD PTR [eax+0x4]
  42719c:	mov    DWORD PTR [ebp-0xc],edx
  42719f:	test   edx,edx
  4271a1:	jne    0x42711f
  4271a7:	mov    eax,DWORD PTR [ebp-0x10]
  4271aa:	mov    DWORD PTR [ebp-0x6c],eax
  4271ad:	mov    DWORD PTR [ebp-0x70],0x4
  4271b4:	mov    eax,DWORD PTR [ecx+0x50]
  4271b7:	mov    DWORD PTR [ebp-0x68],eax
  4271ba:	mov    eax,DWORD PTR [ebp-0x1c]
  4271bd:	xor    eax,esi
  4271bf:	add    eax,edi
  4271c1:	mov    DWORD PTR [ebp-0x64],eax
  4271c4:	lea    eax,[ebp-0x20]
  4271c7:	mov    DWORD PTR [ebp-0x60],eax
  4271ca:	lea    eax,[ebp-0x70]
  4271cd:	push   eax
  4271ce:	mov    eax,DWORD PTR [ebp+0x8]
  4271d1:	xor    eax,esi
  4271d3:	add    eax,edi
  4271d5:	push   eax
  4271d6:	mov    eax,DWORD PTR [ebp+0x20]
  4271d9:	add    eax,0xee
  4271de:	push   eax
  4271df:	mov    eax,DWORD PTR [ebp+0x20]
  4271e2:	mov    eax,DWORD PTR [eax+0x198]
  4271e8:	push   DWORD PTR [eax]
  4271ea:	mov    eax,DWORD PTR [ebp+0x10]
  4271ed:	call   eax
  4271ef:	mov    eax,DWORD PTR [ebp+0x20]
  4271f2:	mov    eax,DWORD PTR [eax+0x180]
  4271f8:	add    eax,DWORD PTR [ebp+0xc]
  4271fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271fe:	push   DWORD PTR [ebp+0x18]
  427201:	mov    DWORD PTR [eax],ecx
  427203:	push   DWORD PTR [ebp+0x14]
  427206:	push   DWORD PTR [ebp+0x1c]
  427209:	call   ebx
  42720b:	mov    ecx,DWORD PTR [ebp+0xc]
  42720e:	add    ecx,DWORD PTR [ebp+0x20]
  427211:	lea    eax,[ebp+0x4]
  427214:	mov    DWORD PTR [ebp+0x20],ecx
  427217:	mov    ecx,DWORD PTR [ebp+0x20]
  42721a:	mov    ecx,DWORD PTR [ebp+0x20]
  42721d:	mov    edx,DWORD PTR [ecx+0x190]
  427223:	mov    ecx,DWORD PTR [ebp+0x20]
  427226:	mov    ecx,DWORD PTR [ecx+0x18c]
  42722c:	mov    esi,DWORD PTR [ecx]
  42722e:	cmp    DWORD PTR [eax],esi
  427230:	jb     0x427251
  427232:	mov    esi,DWORD PTR [edx]
  427234:	mov    edi,DWORD PTR [edx]
  427236:	mov    esi,DWORD PTR [esi+0x3c]
  427239:	lea    esi,[edi+esi*1+0x50]
  42723d:	mov    edi,DWORD PTR [ecx]
  42723f:	add    edi,DWORD PTR [esi]
  427241:	cmp    DWORD PTR [eax],edi
  427243:	jae    0x427251
  427245:	mov    esi,DWORD PTR [ecx]
  427247:	mov    ecx,DWORD PTR [eax]
  427249:	mov    edx,DWORD PTR [edx]
  42724b:	sub    ecx,esi
  42724d:	add    edx,ecx
  42724f:	mov    DWORD PTR [eax],edx
  427251:	mov    eax,DWORD PTR [ebp+0xc]
  427254:	jmp    0x427258
  427256:	xor    eax,eax
  427258:	pop    edi
  427259:	pop    esi
  42725a:	pop    ebx
  42725b:	leave  
  42725c:	ret    0x1c
  42725f:	push   ebp
  427260:	mov    ebp,esp
  427262:	sub    esp,0x1c
  427265:	push   esi
  427266:	mov    esi,eax
  427268:	mov    eax,DWORD PTR [ecx+0x190]
  42726e:	cmp    DWORD PTR [eax],0x0
  427271:	je     0x427381
  427277:	test   edx,edx
  427279:	je     0x427381
  42727f:	test   esi,esi
  427281:	je     0x427381
  427287:	mov    eax,DWORD PTR [esi+0x88]
  42728d:	test   eax,eax
  42728f:	je     0x42737c
  427295:	cmp    DWORD PTR [esi+0x8c],0x10
  42729c:	je     0x42737c
  4272a2:	cmp    DWORD PTR [esi+0x34],edx
  4272a5:	je     0x42737c
  4272ab:	mov    esi,DWORD PTR [ecx+0x18c]
  4272b1:	and    DWORD PTR [ebp-0x10],0x0
  4272b5:	mov    ecx,edx
  4272b7:	sub    ecx,DWORD PTR [esi]
  4272b9:	add    eax,edx
  4272bb:	movzx  edx,WORD PTR [eax+0xc]
  4272bf:	mov    DWORD PTR [ebp-0x1c],ecx
  4272c2:	movzx  ecx,WORD PTR [eax+0xe]
  4272c6:	add    ecx,edx
  4272c8:	je     0x42737c
  4272ce:	lea    ecx,[eax+0x14]
  4272d1:	push   ebx
  4272d2:	mov    DWORD PTR [ebp-0x18],ecx
  4272d5:	mov    esi,0x7fffffff
  4272da:	push   edi
  4272db:	test   DWORD PTR [ecx],esi
  4272dd:	je     0x42735e
  4272df:	mov    edx,DWORD PTR [ecx]
  4272e1:	and    DWORD PTR [ebp-0xc],0x0
  4272e5:	and    edx,esi
  4272e7:	add    edx,eax
  4272e9:	movzx  edi,WORD PTR [edx+0xe]
  4272ed:	movzx  ebx,WORD PTR [edx+0xc]
  4272f1:	add    edi,ebx
  4272f3:	je     0x42735e
  4272f5:	lea    ecx,[edx+0x14]
  4272f8:	mov    DWORD PTR [ebp-0x14],ecx
  4272fb:	test   DWORD PTR [ecx],esi
  4272fd:	je     0x427340
  4272ff:	mov    ecx,DWORD PTR [ecx]
  427301:	and    DWORD PTR [ebp-0x8],0x0
  427305:	and    ecx,esi
  427307:	add    ecx,eax
  427309:	movzx  edi,WORD PTR [ecx+0xe]
  42730d:	movzx  ebx,WORD PTR [ecx+0xc]
  427311:	add    edi,ebx
  427313:	je     0x427340
  427315:	lea    edi,[ecx+0x14]
  427318:	mov    DWORD PTR [ebp-0x4],edi
  42731b:	mov    edi,DWORD PTR [ebp-0x4]
  42731e:	mov    edi,DWORD PTR [edi]
  427320:	test   edi,edi
  427322:	je     0x42732a
  427324:	mov    ebx,DWORD PTR [ebp-0x1c]
  427327:	add    DWORD PTR [edi+eax*1],ebx
  42732a:	movzx  edi,WORD PTR [ecx+0xe]
  42732e:	movzx  ebx,WORD PTR [ecx+0xc]
  427332:	inc    DWORD PTR [ebp-0x8]
  427335:	add    DWORD PTR [ebp-0x4],0x8
  427339:	add    edi,ebx
  42733b:	cmp    DWORD PTR [ebp-0x8],edi
  42733e:	jb     0x42731b
  427340:	movzx  edi,WORD PTR [edx+0xe]
  427344:	movzx  ebx,WORD PTR [edx+0xc]
  427348:	mov    ecx,DWORD PTR [ebp-0x14]
  42734b:	inc    DWORD PTR [ebp-0xc]
  42734e:	add    ecx,0x8
  427351:	add    edi,ebx
  427353:	mov    DWORD PTR [ebp-0x14],ecx
  427356:	cmp    DWORD PTR [ebp-0xc],edi
  427359:	jb     0x4272fb
  42735b:	mov    ecx,DWORD PTR [ebp-0x18]
  42735e:	movzx  edx,WORD PTR [eax+0xe]
  427362:	movzx  edi,WORD PTR [eax+0xc]
  427366:	inc    DWORD PTR [ebp-0x10]
  427369:	add    ecx,0x8
  42736c:	add    edx,edi
  42736e:	mov    DWORD PTR [ebp-0x18],ecx
  427371:	cmp    DWORD PTR [ebp-0x10],edx
  427374:	jb     0x4272db
  42737a:	pop    edi
  42737b:	pop    ebx
  42737c:	xor    eax,eax
  42737e:	inc    eax
  42737f:	jmp    0x427383
  427381:	xor    eax,eax
  427383:	pop    esi
  427384:	leave  
  427385:	ret    
  427386:	push   ebp
  427387:	mov    ebp,esp
  427389:	mov    ecx,DWORD PTR [ecx+0x190]
  42738f:	mov    eax,DWORD PTR [ebp+0xc]
  427392:	sub    esp,0x10
  427395:	push   ebx
  427396:	xor    ebx,ebx
  427398:	push   esi
  427399:	push   edi
  42739a:	cmp    DWORD PTR [ecx],ebx
  42739c:	je     0x427424
  4273a2:	cmp    eax,ebx
  4273a4:	je     0x427424
  4273a6:	cmp    DWORD PTR [eax+0x78],ebx
  4273a9:	jne    0x4273b0
  4273ab:	xor    eax,eax
  4273ad:	inc    eax
  4273ae:	jmp    0x427426
  4273b0:	mov    eax,DWORD PTR [eax+0x78]
  4273b3:	add    eax,DWORD PTR [ebp+0x8]
  4273b6:	mov    ecx,DWORD PTR [eax+0x1c]
  4273b9:	mov    edx,DWORD PTR [eax+0x24]
  4273bc:	mov    esi,DWORD PTR [eax+0x14]
  4273bf:	mov    edi,DWORD PTR [eax+0x18]
  4273c2:	add    ecx,DWORD PTR [ebp+0x8]
  4273c5:	add    edx,DWORD PTR [ebp+0x8]
  4273c8:	mov    DWORD PTR [ebp-0x4],esi
  4273cb:	cmp    esi,edi
  4273cd:	ja     0x4273d2
  4273cf:	mov    DWORD PTR [ebp-0x4],edi
  4273d2:	mov    DWORD PTR [ebp-0x8],ebx
  4273d5:	cmp    DWORD PTR [ebp-0x4],ebx
  4273d8:	jbe    0x4273ab
  4273da:	cmp    ebx,DWORD PTR [eax+0x14]
  4273dd:	jae    0x4273e5
  4273df:	movzx  esi,WORD PTR [edx+ebx*2]
  4273e3:	jmp    0x4273e7
  4273e5:	mov    esi,ebx
  4273e7:	lea    esi,[ecx+esi*4]
  4273ea:	mov    edi,DWORD PTR [esi]
  4273ec:	test   edi,edi
  4273ee:	je     0x427419
  4273f0:	add    edi,DWORD PTR [ebp+0x8]
  4273f3:	mov    DWORD PTR [ebp-0x10],edi
  4273f6:	cmp    edi,eax
  4273f8:	jbe    0x42740a
  4273fa:	mov    ebx,DWORD PTR [ebp+0xc]
  4273fd:	mov    ebx,DWORD PTR [ebx+0x7c]
  427400:	add    ebx,eax
  427402:	cmp    edi,ebx
  427404:	jae    0x42740a
  427406:	mov    esi,DWORD PTR [esi]
  427408:	jmp    0x427412
  42740a:	sub    edi,DWORD PTR [ebp+0x8]
  42740d:	mov    DWORD PTR [esi],edi
  42740f:	mov    esi,DWORD PTR [ebp-0x10]
  427412:	test   esi,esi
  427414:	je     0x427424
  427416:	mov    ebx,DWORD PTR [ebp-0x8]
  427419:	inc    ebx
  42741a:	mov    DWORD PTR [ebp-0x8],ebx
  42741d:	cmp    ebx,DWORD PTR [ebp-0x4]
  427420:	jb     0x4273da
  427422:	jmp    0x4273ab
  427424:	xor    eax,eax
  427426:	pop    edi
  427427:	pop    esi
  427428:	pop    ebx
  427429:	leave  
  42742a:	ret    0x8
  42742d:	push   ebp
  42742e:	mov    ebp,esp
  427430:	sub    esp,0x2c
  427433:	mov    edx,0xf89c85a5
  427438:	mov    DWORD PTR [ebp-0x4],edx
  42743b:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  427442:	mov    eax,DWORD PTR [ebp-0x4]
  427445:	mov    ecx,DWORD PTR [ebp-0x4]
  427448:	mov    ecx,DWORD PTR [ebp-0x4]
  42744b:	mov    ecx,DWORD PTR [ebp-0x4]
  42744e:	mov    ecx,DWORD PTR [ebp-0x4]
  427451:	mov    ecx,DWORD PTR [ebp-0x4]
  427454:	push   ebx
  427455:	mov    ebx,DWORD PTR [ebp+0x10]
  427458:	push   esi
  427459:	mov    esi,0x75108ae
  42745e:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  427465:	mov    ecx,DWORD PTR [ebp-0x4]
  427468:	mov    ebx,DWORD PTR [ebx+0x190]
  42746e:	push   edi
  42746f:	mov    edi,0x3272f5
  427474:	xor    ecx,esi
  427476:	xor    eax,esi
  427478:	add    eax,edi
  42747a:	add    ecx,edi
  42747c:	mov    DWORD PTR [ebp-0x18],eax
  42747f:	cmp    ecx,DWORD PTR [ebx]
  427481:	je     0x427702
  427487:	mov    ebx,DWORD PTR [ebp-0x4]
  42748a:	mov    ecx,DWORD PTR [ebp+0xc]
  42748d:	xor    ebx,esi
  42748f:	add    ebx,edi
  427491:	cmp    ebx,ecx
  427493:	je     0x427702
  427499:	mov    ebx,DWORD PTR [ebp-0x4]
  42749c:	mov    ecx,DWORD PTR [ecx+0x80]
  4274a2:	xor    ebx,esi
  4274a4:	add    ebx,edi
  4274a6:	cmp    ecx,ebx
  4274a8:	je     0x4276fd
  4274ae:	add    ecx,DWORD PTR [ebp+0x8]
  4274b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4274b4:	mov    ebx,edx
  4274b6:	xor    ebx,esi
  4274b8:	add    ebx,edi
  4274ba:	mov    DWORD PTR [ebp-0x10],ebx
  4274bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4274c0:	cmp    ebx,edx
  4274c2:	je     0x4274d6
  4274c4:	mov    edx,DWORD PTR [ebp-0x10]
  4274c7:	mov    ebx,DWORD PTR [ebp-0x4]
  4274ca:	imul   edx,edx,0x14
  4274cd:	xor    ebx,esi
  4274cf:	add    ebx,edi
  4274d1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4274d4:	jne    0x4274ed
  4274d6:	mov    edx,DWORD PTR [ebp-0x10]
  4274d9:	mov    ebx,DWORD PTR [ebp-0x4]
  4274dc:	imul   edx,edx,0x14
  4274df:	xor    ebx,esi
  4274e1:	add    ebx,edi
  4274e3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4274e7:	je     0x4276ef
  4274ed:	mov    eax,DWORD PTR [ebp-0x4]
  4274f0:	mov    ebx,DWORD PTR [ebp-0x4]
  4274f3:	mov    eax,DWORD PTR [ebp-0x10]
  4274f6:	imul   eax,eax,0x14
  4274f9:	add    eax,ecx
  4274fb:	mov    ecx,DWORD PTR [eax+0x10]
  4274fe:	add    ecx,DWORD PTR [ebp+0x8]
  427501:	xor    ebx,esi
  427503:	mov    DWORD PTR [ebp-0x1c],ecx
  427506:	mov    ecx,DWORD PTR [ebp-0x4]
  427509:	mov    edx,DWORD PTR [ebp-0x4]
  42750c:	xor    ecx,esi
  42750e:	add    ecx,edi
  427510:	xor    edx,esi
  427512:	mov    DWORD PTR [ebp-0x24],ecx
  427515:	mov    ecx,DWORD PTR [eax]
  427517:	add    edx,edi
  427519:	add    ebx,edi
  42751b:	cmp    ecx,edx
  42751d:	je     0x427525
  42751f:	add    ecx,DWORD PTR [ebp+0x8]
  427522:	mov    DWORD PTR [ebp-0x24],ecx
  427525:	mov    ecx,DWORD PTR [ebp-0x4]
  427528:	xor    ecx,esi
  42752a:	add    ecx,DWORD PTR [eax+0xc]
  42752d:	mov    eax,DWORD PTR [ebp+0x8]
  427530:	lea    eax,[ecx+eax*1+0x3272f5]
  427537:	mov    DWORD PTR [ebp+0xc],eax
  42753a:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  427541:	mov    eax,DWORD PTR [ebp+0x10]
  427544:	push   DWORD PTR [ebp+0xc]
  427547:	mov    eax,DWORD PTR [eax+0x1e0]
  42754d:	call   DWORD PTR [eax]
  42754f:	mov    ecx,DWORD PTR [ebp-0x4]
  427552:	xor    ecx,esi
  427554:	add    ecx,edi
  427556:	mov    DWORD PTR [ebp-0xc],eax
  427559:	cmp    ecx,eax
  42755b:	jne    0x42756f
  42755d:	mov    eax,DWORD PTR [ebp+0x10]
  427560:	push   DWORD PTR [ebp+0xc]
  427563:	mov    eax,DWORD PTR [eax+0x1e0]
  427569:	call   DWORD PTR [eax+0xc]
  42756c:	mov    DWORD PTR [ebp-0xc],eax
  42756f:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  427576:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  42757d:	mov    eax,DWORD PTR [ebp-0x4]
  427580:	xor    eax,esi
  427582:	add    eax,edi
  427584:	cmp    eax,DWORD PTR [ebp-0xc]
  427587:	jne    0x4275ac
  427589:	mov    eax,DWORD PTR [ebp-0x8]
  42758c:	mov    ecx,DWORD PTR [ebp-0x20]
  42758f:	xor    eax,esi
  427591:	xor    ecx,esi
  427593:	lea    ebx,[ebx+eax*1+0x3272f5]
  42759a:	mov    eax,DWORD PTR [ebp+0x10]
  42759d:	mov    eax,DWORD PTR [eax+0x1e0]
  4275a3:	add    ecx,edi
  4275a5:	imul   ecx,ebx
  4275a8:	push   ecx
  4275a9:	call   DWORD PTR [eax+0x24]
  4275ac:	mov    eax,DWORD PTR [ebp-0x4]
  4275af:	xor    eax,esi
  4275b1:	add    eax,edi
  4275b3:	cmp    eax,DWORD PTR [ebp-0xc]
  4275b6:	jne    0x4275c7
  4275b8:	mov    eax,DWORD PTR [ebp-0x28]
  4275bb:	xor    eax,esi
  4275bd:	add    eax,edi
  4275bf:	cmp    ebx,eax
  4275c1:	jbe    0x427541
  4275c7:	mov    eax,DWORD PTR [ebp-0x4]
  4275ca:	xor    eax,esi
  4275cc:	add    eax,edi
  4275ce:	cmp    eax,DWORD PTR [ebp-0xc]
  4275d1:	jne    0x4275ea
  4275d3:	mov    eax,DWORD PTR [ebp-0x8]
  4275d6:	mov    ecx,DWORD PTR [ebp-0x18]
  4275d9:	xor    eax,esi
  4275db:	lea    eax,[ecx+eax*1+0x3272f5]
  4275e2:	mov    DWORD PTR [ebp-0x18],eax
  4275e5:	jmp    0x4276d9
  4275ea:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  4275f1:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4275f8:	mov    ebx,DWORD PTR [ebp-0x4]
  4275fb:	xor    ebx,esi
  4275fd:	add    ebx,edi
  4275ff:	jmp    0x4276c6
  427604:	mov    eax,DWORD PTR [ebp-0x4]
  427607:	xor    eax,esi
  427609:	add    eax,edi
  42760b:	mov    DWORD PTR [ebp-0x14],eax
  42760e:	mov    eax,DWORD PTR [ebp-0x4]
  427611:	xor    eax,esi
  427613:	add    eax,edi
  427615:	mov    DWORD PTR [ebp+0xc],eax
  427618:	mov    ecx,DWORD PTR [ebp-0x4]
  42761b:	mov    eax,DWORD PTR [ebp-0x24]
  42761e:	xor    ecx,esi
  427620:	add    ecx,edi
  427622:	cmp    ecx,eax
  427624:	je     0x42762c
  427626:	mov    eax,DWORD PTR [eax+ebx*4]
  427629:	mov    DWORD PTR [ebp-0x14],eax
  42762c:	mov    eax,DWORD PTR [ebp-0x1c]
  42762f:	mov    eax,DWORD PTR [eax+ebx*4]
  427632:	mov    DWORD PTR [ebp+0xc],eax
  427635:	mov    eax,DWORD PTR [ebp-0x4]
  427638:	mov    ecx,DWORD PTR [ebp-0x14]
  42763b:	xor    eax,esi
  42763d:	add    eax,edi
  42763f:	cmp    eax,ecx
  427641:	je     0x42766c
  427643:	mov    eax,DWORD PTR [ebp-0x4]
  427646:	mov    ecx,DWORD PTR [ebp-0x14]
  427649:	xor    eax,esi
  42764b:	add    eax,edi
  42764d:	shr    ecx,0x1f
  427650:	cmp    eax,ecx
  427652:	je     0x42766c
  427654:	mov    ecx,DWORD PTR [ebp-0x14]
  427657:	mov    eax,DWORD PTR [ebp+0x10]
  42765a:	mov    eax,DWORD PTR [eax+0x1e0]
  427660:	movzx  ecx,cx
  427663:	push   ecx
  427664:	push   DWORD PTR [ebp-0xc]
  427667:	call   DWORD PTR [eax+0x8]
  42766a:	jmp    0x427685
  42766c:	mov    eax,DWORD PTR [ebp+0xc]
  42766f:	add    eax,DWORD PTR [ebp+0x8]
  427672:	mov    ecx,DWORD PTR [ebp+0x10]
  427675:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42767b:	add    eax,0x2
  42767e:	push   eax
  42767f:	push   DWORD PTR [ebp-0xc]
  427682:	call   DWORD PTR [ecx+0x8]
  427685:	mov    DWORD PTR [ebp+0xc],eax
  427688:	mov    eax,DWORD PTR [ebp-0x4]
  42768b:	mov    ecx,DWORD PTR [ebp+0xc]
  42768e:	xor    eax,esi
  427690:	add    eax,edi
  427692:	cmp    eax,ecx
  427694:	mov    eax,DWORD PTR [ebp-0x8]
  427697:	jne    0x4276aa
  427699:	mov    ecx,DWORD PTR [ebp-0x18]
  42769c:	xor    eax,esi
  42769e:	lea    eax,[ecx+eax*1+0x3272f5]
  4276a5:	mov    DWORD PTR [ebp-0x18],eax
  4276a8:	jmp    0x4276ba
  4276aa:	mov    ecx,DWORD PTR [ebp+0xc]
  4276ad:	xor    eax,esi
  4276af:	add    eax,edi
  4276b1:	imul   eax,ecx
  4276b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4276b7:	mov    DWORD PTR [ecx+ebx*4],eax
  4276ba:	mov    eax,DWORD PTR [ebp-0x8]
  4276bd:	xor    eax,esi
  4276bf:	lea    ebx,[ebx+eax*1+0x3272f5]
  4276c6:	mov    eax,DWORD PTR [ebp-0x4]
  4276c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4276cc:	xor    eax,esi
  4276ce:	add    eax,edi
  4276d0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4276d3:	jne    0x427604
  4276d9:	mov    edx,DWORD PTR [ebp-0x10]
  4276dc:	mov    eax,DWORD PTR [ebp-0x18]
  4276df:	mov    ecx,DWORD PTR [ebp-0x2c]
  4276e2:	sub    edx,0x3272f4
  4276e8:	xor    edx,esi
  4276ea:	jmp    0x4274b4
  4276ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4276f2:	xor    ecx,esi
  4276f4:	add    ecx,edi
  4276f6:	cmp    eax,ecx
  4276f8:	mov    eax,DWORD PTR [ebp-0x4]
  4276fb:	jne    0x427705
  4276fd:	mov    eax,DWORD PTR [ebp-0x8]
  427700:	jmp    0x427705
  427702:	mov    eax,DWORD PTR [ebp-0x4]
  427705:	xor    eax,esi
  427707:	add    eax,edi
  427709:	pop    edi
  42770a:	pop    esi
  42770b:	pop    ebx
  42770c:	leave  
  42770d:	ret    0xc
  427710:	push   ebp
  427711:	mov    ebp,esp
  427713:	sub    esp,0x28
  427716:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42771d:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  427724:	mov    eax,DWORD PTR [ebp+0xc]
  427727:	mov    DWORD PTR [ebp+0xc],eax
  42772a:	push   esi
  42772b:	mov    eax,eax
  42772d:	mov    eax,DWORD PTR [ebp-0x4]
  427730:	mov    esi,DWORD PTR [ebp+0x8]
  427733:	mov    ecx,0x75108ae
  427738:	xor    eax,ecx
  42773a:	mov    edx,0x3272f5
  42773f:	add    eax,edx
  427741:	cmp    esi,eax
  427743:	je     0x42786a
  427749:	mov    eax,DWORD PTR [ebp+0x8]
  42774c:	mov    esi,DWORD PTR [ebp+0x8]
  42774f:	add    esi,DWORD PTR [eax+0x3c]
  427752:	push   edi
  427753:	mov    DWORD PTR [ebp+0xc],esi
  427756:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42775d:	mov    eax,DWORD PTR [ebp-0x1c]
  427760:	mov    esi,DWORD PTR [ebp-0x4]
  427763:	mov    edi,DWORD PTR [ebp+0xc]
  427766:	xor    esi,ecx
  427768:	xor    eax,ecx
  42776a:	add    esi,edx
  42776c:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  427773:	je     0x427864
  427779:	mov    esi,DWORD PTR [ebp+0xc]
  42777c:	mov    eax,DWORD PTR [ebp+0x8]
  42777f:	add    eax,DWORD PTR [esi+0xa0]
  427785:	mov    esi,DWORD PTR [ebp+0x8]
  427788:	mov    edi,DWORD PTR [ebp+0xc]
  42778b:	sub    esi,DWORD PTR [edi+0x34]
  42778e:	mov    edi,DWORD PTR [ebp-0x4]
  427791:	xor    edi,ecx
  427793:	add    edi,edx
  427795:	mov    DWORD PTR [ebp-0x24],esi
  427798:	cmp    esi,edi
  42779a:	je     0x427864
  4277a0:	mov    esi,DWORD PTR [ebp-0x4]
  4277a3:	xor    esi,ecx
  4277a5:	add    esi,edx
  4277a7:	mov    DWORD PTR [ebp-0x8],esi
  4277aa:	push   ebx
  4277ab:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  4277b2:	jmp    0x42784e
  4277b7:	mov    esi,DWORD PTR [ebp-0x4]
  4277ba:	xor    esi,ecx
  4277bc:	lea    edi,[ebx-0x8]
  4277bf:	add    esi,edx
  4277c1:	shr    edi,1
  4277c3:	cmp    esi,edi
  4277c5:	jae    0x427834
  4277c7:	sub    edi,esi
  4277c9:	lea    ebx,[eax+esi*2+0x8]
  4277cd:	mov    DWORD PTR [ebp-0x18],edi
  4277d0:	movzx  esi,WORD PTR [ebx]
  4277d3:	and    esi,0xfff
  4277d9:	mov    DWORD PTR [ebp-0x14],esi
  4277dc:	mov    edi,DWORD PTR [ebp-0x14]
  4277df:	mov    esi,DWORD PTR [eax]
  4277e1:	sub    esi,edx
  4277e3:	add    edi,esi
  4277e5:	movzx  esi,WORD PTR [ebx]
  4277e8:	shr    esi,0xc
  4277eb:	xor    edi,ecx
  4277ed:	mov    DWORD PTR [ebp-0x20],edi
  4277f0:	mov    DWORD PTR [ebp-0x14],esi
  4277f3:	mov    esi,DWORD PTR [ebp-0x20]
  4277f6:	mov    edi,DWORD PTR [ebp+0x8]
  4277f9:	xor    esi,ecx
  4277fb:	lea    esi,[esi+edi*1+0x3272f5]
  427802:	mov    DWORD PTR [ebp-0x20],esi
  427805:	mov    esi,DWORD PTR [ebp-0x10]
  427808:	mov    edi,DWORD PTR [ebp-0x14]
  42780b:	xor    esi,ecx
  42780d:	add    esi,edx
  42780f:	cmp    edi,esi
  427811:	jne    0x427829
  427813:	mov    esi,DWORD PTR [ebp-0x10]
  427816:	mov    edi,DWORD PTR [ebp-0x14]
  427819:	xor    esi,ecx
  42781b:	add    esi,edx
  42781d:	cmp    edi,esi
  42781f:	jne    0x427829
  427821:	mov    esi,DWORD PTR [ebp-0x20]
  427824:	mov    edi,DWORD PTR [ebp-0x24]
  427827:	add    DWORD PTR [esi],edi
  427829:	add    ebx,0x2
  42782c:	dec    DWORD PTR [ebp-0x18]
  42782f:	jne    0x4277d0
  427831:	mov    ebx,DWORD PTR [ebp-0xc]
  427834:	add    DWORD PTR [ebp-0x8],ebx
  427837:	mov    esi,DWORD PTR [ebp-0x1c]
  42783a:	mov    edi,DWORD PTR [ebp-0x8]
  42783d:	mov    ebx,DWORD PTR [ebp+0xc]
  427840:	xor    esi,ecx
  427842:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  427849:	jae    0x427863
  42784b:	add    eax,DWORD PTR [ebp-0xc]
  42784e:	mov    esi,DWORD PTR [ebp-0x4]
  427851:	mov    ebx,DWORD PTR [eax+0x4]
  427854:	xor    esi,ecx
  427856:	add    esi,edx
  427858:	mov    DWORD PTR [ebp-0xc],ebx
  42785b:	cmp    ebx,esi
  42785d:	jne    0x4277b7
  427863:	pop    ebx
  427864:	mov    eax,DWORD PTR [ebp-0x28]
  427867:	pop    edi
  427868:	jmp    0x42786d
  42786a:	mov    eax,DWORD PTR [ebp-0x4]
  42786d:	xor    eax,ecx
  42786f:	add    eax,edx
  427871:	pop    esi
  427872:	leave  
  427873:	ret    0x8
  427876:	push   ebp
  427877:	mov    ebp,esp
  427879:	sub    esp,0xd8
  42787f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427886:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42788d:	mov    eax,DWORD PTR [ebp-0x4]
  427890:	push   ebx
  427891:	push   esi
  427892:	mov    esi,0x75108ae
  427897:	xor    eax,esi
  427899:	push   edi
  42789a:	mov    edi,0x3272f5
  42789f:	add    eax,edi
  4278a1:	mov    DWORD PTR [ebp-0x18],eax
  4278a4:	mov    eax,DWORD PTR [ebp-0x4]
  4278a7:	xor    eax,esi
  4278a9:	add    eax,edi
  4278ab:	mov    DWORD PTR [ebp-0x8],eax
  4278ae:	mov    ebx,DWORD PTR [ebp+0x20]
  4278b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4278b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4278b7:	xor    eax,ecx
  4278b9:	mov    DWORD PTR [ebp-0x1c],eax
  4278bc:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4278c3:	mov    eax,DWORD PTR [ebp-0xc]
  4278c6:	mov    ecx,DWORD PTR [ebp-0xc]
  4278c9:	xor    eax,ecx
  4278cb:	mov    DWORD PTR [ebp-0xc],eax
  4278ce:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4278d5:	mov    eax,DWORD PTR [ebp-0x10]
  4278d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4278db:	xor    eax,ecx
  4278dd:	mov    DWORD PTR [ebp-0x10],eax
  4278e0:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  4278e7:	mov    eax,DWORD PTR [ebp-0x28]
  4278ea:	mov    ecx,DWORD PTR [ebp-0x28]
  4278ed:	xor    eax,ecx
  4278ef:	mov    DWORD PTR [ebp-0x28],eax
  4278f2:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4278f9:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427900:	mov    eax,DWORD PTR [ebp+0x8]
  427903:	test   eax,eax
  427905:	je     0x427d8c
  42790b:	mov    eax,DWORD PTR [ebp+0xc]
  42790e:	test   eax,eax
  427910:	je     0x427d8c
  427916:	mov    eax,DWORD PTR [ebp+0x18]
  427919:	test   eax,eax
  42791b:	je     0x427d8c
  427921:	mov    eax,DWORD PTR [ebp+0x20]
  427924:	mov    ecx,DWORD PTR [ebp+0x8]
  427927:	xor    eax,0x8ae
  42792c:	add    eax,0x72f5
  427931:	cmp    WORD PTR [ecx],ax
  427934:	jne    0x427d8c
  42793a:	mov    eax,DWORD PTR [ebp-0x4]
  42793d:	xor    eax,esi
  42793f:	add    eax,edi
  427941:	mov    DWORD PTR [ebp-0x30],eax
  427944:	mov    eax,DWORD PTR [ebp-0x4]
  427947:	mov    ecx,DWORD PTR [ebp+0x8]
  42794a:	mov    eax,DWORD PTR [ebp+0x8]
  42794d:	add    eax,DWORD PTR [ecx+0x3c]
  427950:	mov    DWORD PTR [ebp+0xc],eax
  427953:	mov    eax,DWORD PTR [eax+0x50]
  427956:	test   eax,eax
  427958:	je     0x427d8c
  42795e:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427965:	mov    eax,DWORD PTR [ebp-0x2c]
  427968:	xor    eax,esi
  42796a:	add    eax,edi
  42796c:	mov    DWORD PTR [ebp-0x2c],eax
  42796f:	mov    eax,DWORD PTR [ebp-0x4]
  427972:	mov    eax,DWORD PTR [ebx+0x190]
  427978:	mov    ecx,DWORD PTR [eax]
  42797a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42797d:	add    ecx,DWORD PTR [eax]
  42797f:	mov    eax,DWORD PTR [ebp-0x4]
  427982:	mov    eax,DWORD PTR [ebx+0x18c]
  427988:	mov    edx,DWORD PTR [eax]
  42798a:	mov    DWORD PTR [ebp-0x20],ecx
  42798d:	mov    DWORD PTR [ebp+0x20],edx
  427990:	cmp    edx,edx
  427992:	jne    0x4279c6
  427994:	mov    eax,DWORD PTR [ebx+0x1e0]
  42799a:	lea    edx,[ebp-0x18]
  42799d:	push   edx
  42799e:	mov    edx,DWORD PTR [ebp-0xc]
  4279a1:	xor    edx,esi
  4279a3:	add    edx,edi
  4279a5:	push   edx
  4279a6:	push   DWORD PTR [ecx+0x50]
  4279a9:	push   DWORD PTR [ebp+0x20]
  4279ac:	call   DWORD PTR [eax+0x1c]
  4279af:	mov    eax,DWORD PTR [ebp-0x20]
  4279b2:	mov    ecx,DWORD PTR [eax+0x54]
  4279b5:	mov    eax,DWORD PTR [eax+0x50]
  4279b8:	sub    eax,ecx
  4279ba:	add    ecx,DWORD PTR [ebp+0x20]
  4279bd:	push   ecx
  4279be:	call   0x428329
  4279c3:	mov    edx,DWORD PTR [ebp+0x20]
  4279c6:	mov    eax,DWORD PTR [ebx+0x194]
  4279cc:	mov    DWORD PTR [eax],edx
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	push   DWORD PTR [eax+0x54]
  4279d4:	push   DWORD PTR [ebp+0x8]
  4279d7:	push   edx
  4279d8:	call   0x42821f
  4279dd:	mov    ecx,DWORD PTR [ebp+0x20]
  4279e0:	mov    eax,DWORD PTR [ecx+0x3c]
  4279e3:	add    eax,ecx
  4279e5:	movzx  ecx,WORD PTR [eax+0x14]
  4279e9:	lea    ecx,[ecx+eax*1+0x18]
  4279ed:	mov    DWORD PTR [ebp+0x18],ecx
  4279f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4279f3:	movzx  edx,WORD PTR [eax+0x6]
  4279f7:	xor    ecx,esi
  4279f9:	add    ecx,edi
  4279fb:	mov    DWORD PTR [ebp+0xc],eax
  4279fe:	cmp    edx,ecx
  427a00:	je     0x427aad
  427a06:	mov    ecx,DWORD PTR [ebp-0x4]
  427a09:	xor    ecx,esi
  427a0b:	add    ecx,edi
  427a0d:	mov    DWORD PTR [ebp-0x8],ecx
  427a10:	mov    ecx,DWORD PTR [ebp-0x24]
  427a13:	movzx  edx,WORD PTR [eax+0x6]
  427a17:	xor    ecx,esi
  427a19:	sub    edx,ecx
  427a1b:	sub    edx,edi
  427a1d:	cmp    DWORD PTR [ebp-0x8],edx
  427a20:	ja     0x427aad
  427a26:	mov    edx,DWORD PTR [ebp+0x18]
  427a29:	add    edx,0x8
  427a2c:	mov    DWORD PTR [ebp+0x18],edx
  427a2f:	jmp    0x427a34
  427a31:	mov    edx,DWORD PTR [ebp+0x18]
  427a34:	mov    eax,DWORD PTR [eax+0x38]
  427a37:	lea    ecx,[eax-0x1]
  427a3a:	mov    DWORD PTR [ebp-0x38],eax
  427a3d:	mov    eax,DWORD PTR [edx]
  427a3f:	test   eax,ecx
  427a41:	je     0x427a4a
  427a43:	not    ecx
  427a45:	and    eax,ecx
  427a47:	add    eax,DWORD PTR [ebp-0x38]
  427a4a:	mov    ecx,DWORD PTR [edx+0x4]
  427a4d:	add    ecx,DWORD PTR [ebp+0x20]
  427a50:	push   ecx
  427a51:	call   0x428329
  427a56:	mov    edx,DWORD PTR [ebp-0x4]
  427a59:	mov    eax,DWORD PTR [ebp+0x18]
  427a5c:	mov    ecx,DWORD PTR [eax+0x8]
  427a5f:	xor    edx,esi
  427a61:	add    edx,edi
  427a63:	cmp    ecx,edx
  427a65:	je     0x427a7e
  427a67:	push   ecx
  427a68:	mov    ecx,DWORD PTR [ebp+0x8]
  427a6b:	add    ecx,DWORD PTR [eax+0xc]
  427a6e:	mov    eax,DWORD PTR [eax+0x4]
  427a71:	add    eax,DWORD PTR [ebp+0x20]
  427a74:	push   ecx
  427a75:	push   eax
  427a76:	call   0x42821f
  427a7b:	mov    eax,DWORD PTR [ebp+0x18]
  427a7e:	mov    ecx,DWORD PTR [ebp-0x24]
  427a81:	mov    edx,DWORD PTR [ebp-0x8]
  427a84:	add    eax,0x28
  427a87:	xor    ecx,esi
  427a89:	lea    ecx,[edx+ecx*1+0x3272f5]
  427a90:	mov    edx,DWORD PTR [ebp+0xc]
  427a93:	mov    DWORD PTR [ebp+0x18],eax
  427a96:	mov    eax,DWORD PTR [ebp-0x24]
  427a99:	movzx  edx,WORD PTR [edx+0x6]
  427a9d:	xor    eax,esi
  427a9f:	sub    edx,eax
  427aa1:	mov    eax,DWORD PTR [ebp+0xc]
  427aa4:	sub    edx,edi
  427aa6:	mov    DWORD PTR [ebp-0x8],ecx
  427aa9:	cmp    ecx,edx
  427aab:	jbe    0x427a31
  427aad:	mov    edx,DWORD PTR [ebx+0x18c]
  427ab3:	mov    ecx,DWORD PTR [ebp+0x20]
  427ab6:	cmp    ecx,DWORD PTR [edx]
  427ab8:	jne    0x427ae1
  427aba:	mov    eax,DWORD PTR [ebx+0x1e0]
  427ac0:	lea    edx,[ebp-0x18]
  427ac3:	push   edx
  427ac4:	mov    edx,DWORD PTR [ebp-0x10]
  427ac7:	xor    edx,esi
  427ac9:	add    edx,edi
  427acb:	push   edx
  427acc:	mov    edx,DWORD PTR [ebp-0x20]
  427acf:	push   DWORD PTR [edx+0x54]
  427ad2:	push   ecx
  427ad3:	call   DWORD PTR [eax+0x1c]
  427ad6:	test   eax,eax
  427ad8:	je     0x427d7d
  427ade:	mov    eax,DWORD PTR [ebp+0xc]
  427ae1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427ae7:	mov    ecx,DWORD PTR [ecx]
  427ae9:	xor    ecx,esi
  427aeb:	add    ecx,edi
  427aed:	je     0x427ca8
  427af3:	mov    eax,DWORD PTR [ebp-0x4]
  427af6:	xor    eax,esi
  427af8:	add    eax,edi
  427afa:	and    DWORD PTR [ebp+0x8],0x0
  427afe:	mov    DWORD PTR [ebp-0x14],eax
  427b01:	mov    eax,0xf89c85c1
  427b06:	lea    ecx,[eax+0x18]
  427b09:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427b10:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427b17:	mov    DWORD PTR [ebp-0x50],eax
  427b1a:	mov    DWORD PTR [ebp-0x4c],ecx
  427b1d:	mov    DWORD PTR [ebp-0x48],ecx
  427b20:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427b27:	mov    edx,DWORD PTR [ebp+0x8]
  427b2a:	mov    ecx,0x8ae
  427b2f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427b34:	mov    edx,0x72f5
  427b39:	add    cx,dx
  427b3c:	mov    edx,DWORD PTR [ebp+0x8]
  427b3f:	inc    DWORD PTR [ebp+0x8]
  427b42:	cmp    DWORD PTR [ebp+0x8],0x6
  427b46:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427b4e:	jb     0x427b27
  427b50:	mov    ecx,0xf89c85d3
  427b55:	mov    DWORD PTR [ebp-0xb0],eax
  427b5b:	mov    DWORD PTR [ebp-0x9c],eax
  427b61:	mov    DWORD PTR [ebp-0x74],eax
  427b64:	mov    DWORD PTR [ebp-0x70],eax
  427b67:	lea    eax,[ecx-0x3]
  427b6a:	lea    edx,[ecx+0x2c]
  427b6d:	mov    DWORD PTR [ebp-0x64],eax
  427b70:	mov    DWORD PTR [ebp-0x60],eax
  427b73:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427b7d:	mov    DWORD PTR [ebp-0xac],ecx
  427b83:	mov    DWORD PTR [ebp-0xa8],edx
  427b89:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427b93:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427b9d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427ba7:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427bb1:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427bbb:	mov    DWORD PTR [ebp-0x8c],ecx
  427bc1:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427bcb:	mov    DWORD PTR [ebp-0x84],edx
  427bd1:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427bd8:	mov    DWORD PTR [ebp-0x7c],ecx
  427bdb:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427be2:	mov    DWORD PTR [ebp-0x6c],ecx
  427be5:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427bec:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427bf3:	xor    eax,eax
  427bf5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427bfc:	xor    cl,0xae
  427bff:	sub    cl,0xb
  427c02:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427c09:	inc    eax
  427c0a:	cmp    eax,0x17
  427c0d:	jb     0x427bf5
  427c0f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427c15:	lea    ecx,[ebp-0xc0]
  427c1b:	push   ecx
  427c1c:	call   DWORD PTR [eax+0x4]
  427c1f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427c25:	lea    edx,[ebp-0xd8]
  427c2b:	push   edx
  427c2c:	push   eax
  427c2d:	call   DWORD PTR [ecx+0x8]
  427c30:	mov    DWORD PTR [ebp-0x40],eax
  427c33:	lea    eax,[ebp-0x14]
  427c36:	push   eax
  427c37:	mov    eax,DWORD PTR [ebx+0x18c]
  427c3d:	push   DWORD PTR [eax]
  427c3f:	mov    eax,DWORD PTR [ebp-0x40]
  427c42:	call   eax
  427c44:	mov    eax,DWORD PTR [ebp-0x4]
  427c47:	xor    eax,esi
  427c49:	add    eax,edi
  427c4b:	mov    DWORD PTR [ebp-0x34],eax
  427c4e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c51:	mov    eax,DWORD PTR [ebp-0x14]
  427c54:	xor    ecx,esi
  427c56:	add    ecx,edi
  427c58:	cmp    eax,ecx
  427c5a:	je     0x427ca5
  427c5c:	mov    DWORD PTR [ebp-0x3c],eax
  427c5f:	jmp    0x427c70
  427c61:	mov    eax,DWORD PTR [eax]
  427c63:	mov    ecx,DWORD PTR [ebp-0x3c]
  427c66:	mov    DWORD PTR [ebp-0x14],eax
  427c69:	mov    eax,DWORD PTR [ebp-0x14]
  427c6c:	cmp    eax,ecx
  427c6e:	je     0x427c7d
  427c70:	mov    edx,DWORD PTR [eax+0x18]
  427c73:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c79:	cmp    edx,DWORD PTR [ecx]
  427c7b:	jne    0x427c61
  427c7d:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c83:	mov    edx,DWORD PTR [eax+0x18]
  427c86:	cmp    edx,DWORD PTR [ecx]
  427c88:	jne    0x427ca5
  427c8a:	mov    ecx,DWORD PTR [ebx+0x190]
  427c90:	mov    edx,DWORD PTR [ebp-0x20]
  427c93:	mov    edx,DWORD PTR [edx+0x28]
  427c96:	add    edx,DWORD PTR [ecx]
  427c98:	mov    DWORD PTR [eax+0x1c],edx
  427c9b:	mov    eax,DWORD PTR [ebp-0x24]
  427c9e:	xor    eax,esi
  427ca0:	add    eax,edi
  427ca2:	mov    DWORD PTR [ebp-0x34],eax
  427ca5:	mov    eax,DWORD PTR [ebp+0xc]
  427ca8:	push   ebx
  427ca9:	push   eax
  427caa:	push   DWORD PTR [ebp+0x20]
  427cad:	call   0x42742d
  427cb2:	test   eax,eax
  427cb4:	je     0x427d7d
  427cba:	push   DWORD PTR [ebp+0xc]
  427cbd:	mov    ecx,ebx
  427cbf:	push   DWORD PTR [ebp+0x20]
  427cc2:	call   0x427386
  427cc7:	test   eax,eax
  427cc9:	je     0x427d7d
  427ccf:	mov    eax,DWORD PTR [ebp+0xc]
  427cd2:	mov    edx,DWORD PTR [ebp+0x20]
  427cd5:	mov    ecx,ebx
  427cd7:	call   0x42725f
  427cdc:	test   eax,eax
  427cde:	je     0x427d7d
  427ce4:	push   ebx
  427ce5:	push   DWORD PTR [ebp+0x20]
  427ce8:	call   0x427710
  427ced:	test   eax,eax
  427cef:	je     0x427d7d
  427cf5:	mov    eax,DWORD PTR [ebx+0x18c]
  427cfb:	mov    edx,DWORD PTR [ebp+0x20]
  427cfe:	cmp    edx,DWORD PTR [eax]
  427d00:	jne    0x427d1c
  427d02:	mov    eax,DWORD PTR [ebx+0x1e0]
  427d08:	lea    ecx,[ebp-0x18]
  427d0b:	push   ecx
  427d0c:	push   DWORD PTR [ebp-0x18]
  427d0f:	mov    ecx,DWORD PTR [ebp-0x20]
  427d12:	push   DWORD PTR [ecx+0x54]
  427d15:	push   edx
  427d16:	call   DWORD PTR [eax+0x1c]
  427d19:	mov    edx,DWORD PTR [ebp+0x20]
  427d1c:	mov    eax,DWORD PTR [ebx+0x1c8]
  427d22:	mov    eax,DWORD PTR [eax]
  427d24:	xor    eax,esi
  427d26:	add    eax,edi
  427d28:	je     0x427d61
  427d2a:	mov    ecx,DWORD PTR [ebp+0xc]
  427d2d:	mov    eax,DWORD PTR [ecx+0x28]
  427d30:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427d37:	mov    esi,DWORD PTR [ebp+0x8]
  427d3a:	push   DWORD PTR [ebp+0x14]
  427d3d:	xor    esi,0x8ae
  427d43:	push   DWORD PTR [ebp+0x10]
  427d46:	add    esi,0x72f5
  427d4c:	or     WORD PTR [ecx+0x16],si
  427d50:	add    eax,edx
  427d52:	push   edx
  427d53:	call   eax
  427d55:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427d5f:	jmp    0x427d6b
  427d61:	mov    eax,DWORD PTR [ebp+0xc]
  427d64:	mov    eax,DWORD PTR [eax+0x28]
  427d67:	add    eax,edx
  427d69:	call   eax
  427d6b:	mov    DWORD PTR [ebp-0x8],eax
  427d6e:	mov    eax,DWORD PTR [ebp-0x8]
  427d71:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d74:	mov    DWORD PTR [ecx],eax
  427d76:	mov    DWORD PTR [ebp-0x30],0x1
  427d7d:	cmp    DWORD PTR [ebp-0x30],0x0
  427d81:	jne    0x427d87
  427d83:	and    DWORD PTR [ebp+0x20],0x0
  427d87:	mov    eax,DWORD PTR [ebp+0x20]
  427d8a:	jmp    0x427d8e
  427d8c:	xor    eax,eax
  427d8e:	pop    edi
  427d8f:	pop    esi
  427d90:	pop    ebx
  427d91:	leave  
  427d92:	ret    0x1c
  427d95:	push   ebp
  427d96:	mov    ebp,esp
  427d98:	movzx  edx,WORD PTR [ecx+0x6]
  427d9c:	movzx  eax,WORD PTR [ecx+0x14]
  427da0:	push   ebx
  427da1:	push   edi
  427da2:	xor    edi,edi
  427da4:	lea    eax,[eax+ecx*1+0x18]
  427da8:	test   edx,edx
  427daa:	je     0x427dcb
  427dac:	mov    ecx,DWORD PTR [eax+0xc]
  427daf:	lea    ebx,[ecx+esi*1]
  427db2:	cmp    DWORD PTR [ebp+0x8],ebx
  427db5:	jb     0x427dc3
  427db7:	mov    ebx,DWORD PTR [eax+0x8]
  427dba:	add    ebx,ecx
  427dbc:	add    ebx,esi
  427dbe:	cmp    DWORD PTR [ebp+0x8],ebx
  427dc1:	jb     0x427dcd
  427dc3:	add    eax,0x28
  427dc6:	inc    edi
  427dc7:	cmp    edi,edx
  427dc9:	jb     0x427dac
  427dcb:	xor    eax,eax
  427dcd:	pop    edi
  427dce:	pop    ebx
  427dcf:	pop    ebp
  427dd0:	ret    0x4
  427dd3:	push   ebp
  427dd4:	mov    ebp,esp
  427dd6:	sub    esp,0x34
  427dd9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427de0:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427de7:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427dee:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427df5:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427dfc:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427e03:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427e0a:	mov    DWORD PTR [ebp-0x10],eax
  427e0d:	mov    eax,DWORD PTR [ebp+0x8]
  427e10:	mov    DWORD PTR [ebp-0x14],eax
  427e13:	mov    eax,DWORD PTR [ebp-0xc]
  427e16:	push   ebx
  427e17:	mov    ecx,0x75108ae
  427e1c:	xor    eax,ecx
  427e1e:	push   esi
  427e1f:	mov    esi,DWORD PTR [ebp-0x10]
  427e22:	mov    edx,0x3272f5
  427e27:	add    eax,edx
  427e29:	push   edi
  427e2a:	cmp    esi,eax
  427e2c:	je     0x42800b
  427e32:	mov    eax,DWORD PTR [ebp-0xc]
  427e35:	mov    esi,DWORD PTR [ebp-0x14]
  427e38:	xor    eax,ecx
  427e3a:	add    eax,edx
  427e3c:	cmp    esi,eax
  427e3e:	je     0x42800b
  427e44:	mov    eax,DWORD PTR [ebp-0xc]
  427e47:	xor    eax,ecx
  427e49:	add    eax,edx
  427e4b:	mov    DWORD PTR [ebp-0x24],eax
  427e4e:	mov    eax,DWORD PTR [ebp-0xc]
  427e51:	xor    eax,ecx
  427e53:	add    eax,edx
  427e55:	mov    DWORD PTR [ebp-0x28],eax
  427e58:	mov    edi,DWORD PTR [ebp-0x20]
  427e5b:	mov    ebx,DWORD PTR [ebp-0x8]
  427e5e:	mov    esi,0x8ae
  427e63:	xor    edi,esi
  427e65:	mov    eax,0x72f5
  427e6a:	xor    ebx,esi
  427e6c:	add    edi,eax
  427e6e:	add    ebx,eax
  427e70:	sub    ebx,edi
  427e72:	mov    WORD PTR [ebp-0x8],bx
  427e76:	jmp    0x427f3b
  427e7b:	mov    edi,DWORD PTR [ebp-0xc]
  427e7e:	mov    bx,WORD PTR [ebp-0x4]
  427e82:	xor    edi,esi
  427e84:	add    edi,eax
  427e86:	cmp    bx,di
  427e89:	je     0x427f7d
  427e8f:	mov    edi,DWORD PTR [ebp-0xc]
  427e92:	mov    ebx,DWORD PTR [ebp+0xc]
  427e95:	xor    edi,ecx
  427e97:	add    edi,edx
  427e99:	cmp    ebx,edi
  427e9b:	mov    di,WORD PTR [ebp-0x4]
  427e9f:	mov    bx,WORD PTR [ebp+0x8]
  427ea3:	je     0x427f0e
  427ea5:	cmp    bx,di
  427ea8:	je     0x427f17
  427eaa:	mov    edi,DWORD PTR [ebp-0x20]
  427ead:	mov    bx,WORD PTR [ebp+0x8]
  427eb1:	xor    edi,esi
  427eb3:	add    edi,eax
  427eb5:	cmp    bx,di
  427eb8:	jb     0x427ed8
  427eba:	mov    edi,DWORD PTR [ebp-0x2c]
  427ebd:	mov    bx,WORD PTR [ebp+0x8]
  427ec1:	xor    edi,esi
  427ec3:	add    edi,eax
  427ec5:	cmp    bx,di
  427ec8:	ja     0x427ed8
  427eca:	movzx  edi,WORD PTR [ebp+0x8]
  427ece:	movzx  ebx,WORD PTR [ebp-0x8]
  427ed2:	add    edi,ebx
  427ed4:	mov    WORD PTR [ebp+0x8],di
  427ed8:	mov    edi,DWORD PTR [ebp-0x20]
  427edb:	mov    bx,WORD PTR [ebp-0x4]
  427edf:	xor    edi,esi
  427ee1:	add    edi,eax
  427ee3:	cmp    bx,di
  427ee6:	jb     0x427f06
  427ee8:	mov    edi,DWORD PTR [ebp-0x2c]
  427eeb:	mov    bx,WORD PTR [ebp-0x4]
  427eef:	xor    edi,esi
  427ef1:	add    edi,eax
  427ef3:	cmp    bx,di
  427ef6:	ja     0x427f06
  427ef8:	movzx  edi,WORD PTR [ebp-0x4]
  427efc:	movzx  ebx,WORD PTR [ebp-0x8]
  427f00:	add    edi,ebx
  427f02:	mov    WORD PTR [ebp-0x4],di
  427f06:	mov    di,WORD PTR [ebp-0x4]
  427f0a:	mov    bx,WORD PTR [ebp+0x8]
  427f0e:	cmp    bx,di
  427f11:	jne    0x42800b
  427f17:	mov    edi,DWORD PTR [ebp-0x1c]
  427f1a:	mov    ebx,DWORD PTR [ebp-0x10]
  427f1d:	xor    edi,ecx
  427f1f:	lea    edi,[edi+ebx*1+0x3272f5]
  427f26:	mov    DWORD PTR [ebp-0x10],edi
  427f29:	mov    edi,DWORD PTR [ebp-0x1c]
  427f2c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f2f:	xor    edi,ecx
  427f31:	lea    edi,[edi+ebx*1+0x3272f5]
  427f38:	mov    DWORD PTR [ebp-0x14],edi
  427f3b:	mov    edi,DWORD PTR [ebp-0x24]
  427f3e:	mov    ebx,DWORD PTR [ebp-0x10]
  427f41:	mov    di,WORD PTR [ebx+edi*2]
  427f45:	mov    WORD PTR [ebp+0x8],di
  427f49:	mov    edi,DWORD PTR [ebp-0x28]
  427f4c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f4f:	mov    di,WORD PTR [ebx+edi*2]
  427f53:	mov    WORD PTR [ebp-0x4],di
  427f57:	mov    edi,DWORD PTR [ebp-0xc]
  427f5a:	mov    bx,WORD PTR [ebp+0x8]
  427f5e:	xor    edi,esi
  427f60:	add    edi,eax
  427f62:	cmp    bx,di
  427f65:	jne    0x427e7b
  427f6b:	mov    eax,DWORD PTR [ebp-0x18]
  427f6e:	mov    esi,DWORD PTR [ebp-0xc]
  427f71:	xor    eax,ecx
  427f73:	add    eax,edx
  427f75:	imul   eax,esi
  427f78:	mov    DWORD PTR [ebp-0xc],eax
  427f7b:	jmp    0x427f8f
  427f7d:	mov    eax,DWORD PTR [ebp-0xc]
  427f80:	mov    esi,DWORD PTR [ebp-0x18]
  427f83:	xor    eax,ecx
  427f85:	lea    eax,[eax+esi*1+0x3272f5]
  427f8c:	mov    DWORD PTR [ebp-0x18],eax
  427f8f:	mov    eax,DWORD PTR [ebp-0x24]
  427f92:	sub    eax,edx
  427f94:	xor    eax,ecx
  427f96:	mov    DWORD PTR [ebp-0x30],eax
  427f99:	mov    eax,DWORD PTR [ebp-0x28]
  427f9c:	sub    eax,edx
  427f9e:	xor    eax,ecx
  427fa0:	mov    DWORD PTR [ebp-0x34],eax
  427fa3:	mov    eax,DWORD PTR [ebp-0x34]
  427fa6:	mov    esi,DWORD PTR [ebp-0x1c]
  427fa9:	xor    esi,ecx
  427fab:	add    esi,edx
  427fad:	xor    eax,ecx
  427faf:	add    eax,0x3272f5
  427fb4:	imul   esi,eax
  427fb7:	mov    eax,DWORD PTR [ebp-0x14]
  427fba:	movzx  eax,WORD PTR [esi+eax*1]
  427fbe:	mov    esi,DWORD PTR [ebp-0x30]
  427fc1:	mov    edi,DWORD PTR [ebp-0x1c]
  427fc4:	xor    esi,ecx
  427fc6:	add    esi,edx
  427fc8:	xor    edi,ecx
  427fca:	add    edi,edx
  427fcc:	imul   edi,esi
  427fcf:	mov    esi,DWORD PTR [ebp-0x10]
  427fd2:	movzx  esi,WORD PTR [edi+esi*1]
  427fd6:	sub    eax,edx
  427fd8:	sub    esi,edx
  427fda:	xor    eax,ecx
  427fdc:	xor    esi,ecx
  427fde:	cmp    esi,eax
  427fe0:	jne    0x42800b
  427fe2:	mov    eax,DWORD PTR [ebp-0x30]
  427fe5:	mov    esi,DWORD PTR [ebp-0x1c]
  427fe8:	xor    eax,ecx
  427fea:	add    eax,0x3272f5
  427fef:	xor    esi,ecx
  427ff1:	add    esi,edx
  427ff3:	imul   esi,eax
  427ff6:	mov    eax,DWORD PTR [ebp-0x10]
  427ff9:	movzx  eax,WORD PTR [esi+eax*1]
  427ffd:	mov    esi,DWORD PTR [ebp-0xc]
  428000:	sub    eax,edx
  428002:	xor    eax,ecx
  428004:	cmp    eax,esi
  428006:	mov    eax,DWORD PTR [ebp-0xc]
  428009:	je     0x42800e
  42800b:	mov    eax,DWORD PTR [ebp-0x18]
  42800e:	pop    edi
  42800f:	xor    eax,ecx
  428011:	pop    esi
  428012:	add    eax,edx
  428014:	pop    ebx
  428015:	leave  
  428016:	ret    0x8
  428019:	push   ebp
  42801a:	mov    ebp,esp
  42801c:	push   ecx
  42801d:	mov    cx,WORD PTR [eax]
  428020:	push   esi
  428021:	mov    esi,0x3b5c
  428026:	sub    cx,si
  428029:	mov    esi,0x8a9a
  42802e:	xor    cx,si
  428031:	mov    esi,0x4e3e
  428036:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42803d:	mov    edx,0xf89c85a5
  428042:	cmp    cx,si
  428045:	je     0x4280a4
  428047:	push   ebx
  428048:	push   edi
  428049:	movzx  ecx,cx
  42804c:	mov    edi,0xffcd8d0b
  428051:	mov    esi,0x75108ae
  428056:	mov    ebx,0x4f9a
  42805b:	cmp    cx,bx
  42805e:	jne    0x428063
  428060:	mov    DWORD PTR [ebp-0x4],edx
  428063:	lea    edx,[edi+0x1]
  428066:	xor    edx,esi
  428068:	mov    edi,edx
  42806a:	xor    edi,esi
  42806c:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  428074:	mov    ebx,0x3b5c
  428079:	sub    cx,bx
  42807c:	mov    ebx,0x8a9a
  428081:	xor    cx,bx
  428084:	mov    ebx,0x4e3e
  428089:	cmp    cx,bx
  42808c:	jne    0x428056
  42808e:	mov    ecx,DWORD PTR [ebp-0x4]
  428091:	pop    edi
  428092:	pop    ebx
  428093:	cmp    ecx,0xf89c85a4
  428099:	je     0x4280a4
  42809b:	xor    ecx,esi
  42809d:	lea    eax,[eax+ecx*2+0x64e5ec]
  4280a4:	pop    esi
  4280a5:	leave  
  4280a6:	ret    
  4280a7:	push   ebp
  4280a8:	mov    ebp,esp
  4280aa:	push   ecx
  4280ab:	push   esi
  4280ac:	push   edi
  4280ad:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280b4:	mov    esi,0xf89c85a5
  4280b9:	call   0x428019
  4280be:	mov    edi,eax
  4280c0:	mov    al,BYTE PTR [edi]
  4280c2:	sub    al,0x3
  4280c4:	xor    al,0x7e
  4280c6:	cmp    al,0x83
  4280c8:	je     0x42812b
  4280ca:	mov    eax,edi
  4280cc:	mov    edx,0xffcd8d0b
  4280d1:	mov    ecx,0x75108ae
  4280d6:	push   ebx
  4280d7:	mov    ax,WORD PTR [eax]
  4280da:	mov    ebx,0x3b5c
  4280df:	sub    ax,bx
  4280e2:	mov    ebx,0x8a9a
  4280e7:	xor    ax,bx
  4280ea:	mov    ebx,0x4e48
  4280ef:	cmp    ax,bx
  4280f2:	jne    0x4280f7
  4280f4:	mov    DWORD PTR [ebp-0x4],esi
  4280f7:	lea    esi,[edx+0x1]
  4280fa:	xor    esi,ecx
  4280fc:	mov    edx,esi
  4280fe:	xor    edx,ecx
  428100:	lea    eax,[edi+edx*2+0x64e5ea]
  428107:	mov    bl,BYTE PTR [eax]
  428109:	sub    bl,0x3
  42810c:	xor    bl,0x7e
  42810f:	cmp    bl,0x83
  428112:	jne    0x4280d7
  428114:	mov    eax,DWORD PTR [ebp-0x4]
  428117:	pop    ebx
  428118:	cmp    eax,0xf89c85a4
  42811d:	je     0x42812b
  42811f:	xor    eax,ecx
  428121:	xor    ecx,ecx
  428123:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  42812b:	mov    eax,edi
  42812d:	pop    edi
  42812e:	pop    esi
  42812f:	leave  
  428130:	ret    
  428131:	push   ebp
  428132:	mov    ebp,esp
  428134:	push   ecx
  428135:	push   esi
  428136:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42813d:	mov    esi,0xf89c85a5
  428142:	call   0x428019
  428147:	mov    cx,WORD PTR [eax]
  42814a:	mov    edx,0x3b5c
  42814f:	sub    cx,dx
  428152:	mov    edx,0x8a9a
  428157:	xor    cx,dx
  42815a:	mov    edx,0x4e3e
  42815f:	cmp    cx,dx
  428162:	je     0x4281bb
  428164:	push   ebx
  428165:	push   edi
  428166:	movzx  ecx,cx
  428169:	mov    edx,0xffcd8d0b
  42816e:	mov    edi,0x75108ae
  428173:	mov    ebx,0x4e48
  428178:	cmp    cx,bx
  42817b:	jne    0x428180
  42817d:	mov    DWORD PTR [ebp-0x4],esi
  428180:	lea    esi,[edx+0x1]
  428183:	xor    esi,edi
  428185:	mov    edx,esi
  428187:	xor    edx,edi
  428189:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428191:	mov    ebx,0x3b5c
  428196:	sub    cx,bx
  428199:	mov    ebx,0x8a9a
  42819e:	xor    cx,bx
  4281a1:	mov    ebx,0x4e3e
  4281a6:	cmp    cx,bx
  4281a9:	jne    0x428173
  4281ab:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  4281b2:	pop    edi
  4281b3:	pop    ebx
  4281b4:	je     0x4281bb
  4281b6:	xor    eax,eax
  4281b8:	inc    eax
  4281b9:	jmp    0x4281bd
  4281bb:	xor    eax,eax
  4281bd:	pop    esi
  4281be:	leave  
  4281bf:	ret    
  4281c0:	push   ebp
  4281c1:	mov    ebp,esp
  4281c3:	push   ecx
  4281c4:	mov    eax,DWORD PTR [ebp+0x8]
  4281c7:	movzx  ecx,WORD PTR [eax]
  4281ca:	push   esi
  4281cb:	lea    eax,[ecx-0x3b5c]
  4281d1:	mov    esi,0x8a9a
  4281d6:	push   edi
  4281d7:	xor    eax,esi
  4281d9:	mov    edi,0x4e3e
  4281de:	mov    DWORD PTR [ebp-0x4],edx
  4281e1:	cmp    ax,di
  4281e4:	je     0x428211
  4281e6:	mov    eax,DWORD PTR [ebp+0x8]
  4281e9:	sub    eax,edx
  4281eb:	mov    DWORD PTR [ebp+0x8],eax
  4281ee:	jmp    0x4281f3
  4281f0:	mov    eax,DWORD PTR [ebp+0x8]
  4281f3:	mov    WORD PTR [edx],cx
  4281f6:	add    edx,0x2
  4281f9:	movzx  edi,WORD PTR [eax+edx*1]
  4281fd:	mov    ecx,edi
  4281ff:	add    edi,0xffffc4a4
  428205:	xor    edi,esi
  428207:	mov    eax,0x4e3e
  42820c:	cmp    di,ax
  42820f:	jne    0x4281f0
  428211:	xor    eax,eax
  428213:	pop    edi
  428214:	mov    WORD PTR [edx],ax
  428217:	mov    eax,DWORD PTR [ebp-0x4]
  42821a:	pop    esi
  42821b:	leave  
  42821c:	ret    0x4
  42821f:	push   ebp
  428220:	mov    ebp,esp
  428222:	sub    esp,0x18
  428225:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  42822c:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  428233:	mov    ecx,DWORD PTR [ebp-0x8]
  428236:	push   esi
  428237:	mov    eax,0x75108ae
  42823c:	xor    ecx,eax
  42823e:	mov    esi,0x3272f5
  428243:	add    ecx,esi
  428245:	mov    DWORD PTR [ebp-0x4],ecx
  428248:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42824f:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  428256:	push   edi
  428257:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  42825e:	jmp    0x4282ff
  428263:	mov    ecx,DWORD PTR [ebp-0x4]
  428266:	mov    edx,DWORD PTR [ebp+0x10]
  428269:	sub    edx,ecx
  42826b:	mov    ecx,DWORD PTR [ebp-0xc]
  42826e:	xor    ecx,eax
  428270:	add    ecx,esi
  428272:	cmp    edx,ecx
  428274:	jbe    0x428291
  428276:	mov    edx,DWORD PTR [ebp-0x4]
  428279:	add    edx,DWORD PTR [ebp+0x8]
  42827c:	mov    ecx,DWORD PTR [ebp-0x4]
  42827f:	add    ecx,DWORD PTR [ebp+0xc]
  428282:	mov    edi,DWORD PTR [ecx]
  428284:	mov    DWORD PTR [edx],edi
  428286:	mov    ecx,DWORD PTR [ecx+0x4]
  428289:	mov    DWORD PTR [edx+0x4],ecx
  42828c:	mov    ecx,DWORD PTR [ebp-0xc]
  42828f:	jmp    0x4282de
  428291:	mov    ecx,DWORD PTR [ebp-0x4]
  428294:	mov    edx,DWORD PTR [ebp+0x10]
  428297:	sub    edx,ecx
  428299:	mov    ecx,DWORD PTR [ebp-0x10]
  42829c:	xor    ecx,eax
  42829e:	add    ecx,esi
  4282a0:	cmp    edx,ecx
  4282a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4282a5:	jbe    0x4282b9
  4282a7:	add    ecx,DWORD PTR [ebp+0x8]
  4282aa:	mov    edx,DWORD PTR [ebp-0x4]
  4282ad:	add    edx,DWORD PTR [ebp+0xc]
  4282b0:	mov    edx,DWORD PTR [edx]
  4282b2:	mov    DWORD PTR [ecx],edx
  4282b4:	mov    ecx,DWORD PTR [ebp-0x10]
  4282b7:	jmp    0x4282de
  4282b9:	mov    edx,DWORD PTR [ebp+0x10]
  4282bc:	sub    edx,ecx
  4282be:	mov    ecx,DWORD PTR [ebp-0x14]
  4282c1:	xor    ecx,eax
  4282c3:	add    ecx,esi
  4282c5:	cmp    edx,ecx
  4282c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4282ca:	jbe    0x4282ef
  4282cc:	add    ecx,DWORD PTR [ebp+0x8]
  4282cf:	mov    edx,DWORD PTR [ebp-0x4]
  4282d2:	add    edx,DWORD PTR [ebp+0xc]
  4282d5:	mov    dx,WORD PTR [edx]
  4282d8:	mov    WORD PTR [ecx],dx
  4282db:	mov    ecx,DWORD PTR [ebp-0x14]
  4282de:	mov    edx,DWORD PTR [ebp-0x4]
  4282e1:	xor    ecx,eax
  4282e3:	lea    ecx,[ecx+edx*1+0x3272f5]
  4282ea:	mov    DWORD PTR [ebp-0x4],ecx
  4282ed:	jmp    0x4282ff
  4282ef:	add    ecx,DWORD PTR [ebp+0x8]
  4282f2:	mov    edx,DWORD PTR [ebp-0x4]
  4282f5:	add    edx,DWORD PTR [ebp+0xc]
  4282f8:	mov    dl,BYTE PTR [edx]
  4282fa:	mov    BYTE PTR [ecx],dl
  4282fc:	inc    DWORD PTR [ebp-0x4]
  4282ff:	mov    ecx,DWORD PTR [ebp-0x18]
  428302:	mov    edx,DWORD PTR [ebp+0x10]
  428305:	xor    ecx,eax
  428307:	add    ecx,esi
  428309:	imul   ecx,edx
  42830c:	mov    edx,DWORD PTR [ebp-0x8]
  42830f:	mov    edi,DWORD PTR [ebp-0x4]
  428312:	xor    edx,eax
  428314:	lea    edx,[edx+edi*1+0x3272f5]
  42831b:	cmp    edx,ecx
  42831d:	jb     0x428263
  428323:	pop    edi
  428324:	pop    esi
  428325:	leave  
  428326:	ret    0xc
  428329:	push   ebp
  42832a:	mov    ebp,esp
  42832c:	sub    esp,0xc
  42832f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  428336:	push   esi
  428337:	mov    esi,eax
  428339:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  428340:	mov    edx,DWORD PTR [ebp-0x4]
  428343:	mov    eax,0x75108ae
  428348:	xor    edx,eax
  42834a:	mov    ecx,0x3272f5
  42834f:	add    edx,ecx
  428351:	cmp    esi,edx
  428353:	je     0x428395
  428355:	push   ebx
  428356:	push   edi
  428357:	mov    edx,DWORD PTR [ebp-0x8]
  42835a:	mov    ebx,DWORD PTR [ebp+0x8]
  42835d:	xor    edx,eax
  42835f:	mov    edi,0xffcd8d0b
  428364:	sub    edi,edx
  428366:	add    esi,edi
  428368:	lea    edx,[esi-0x3272f5]
  42836e:	xor    edx,eax
  428370:	mov    DWORD PTR [ebp-0xc],edx
  428373:	mov    edx,DWORD PTR [ebp-0x4]
  428376:	mov    edi,DWORD PTR [ebp-0xc]
  428379:	xor    dl,0xae
  42837c:	sub    dl,0xb
  42837f:	xor    edi,eax
  428381:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428388:	mov    edx,DWORD PTR [ebp-0x4]
  42838b:	xor    edx,eax
  42838d:	add    edx,ecx
  42838f:	cmp    esi,edx
  428391:	jne    0x428357
  428393:	pop    edi
  428394:	pop    ebx
  428395:	pop    esi
  428396:	leave  
  428397:	ret    0x4
  42839a:	push   ebp
  42839b:	mov    ebp,esp
  42839d:	sub    esp,0x21c
  4283a3:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4283aa:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  4283b1:	mov    eax,DWORD PTR [ebp+0x10]
  4283b4:	mov    eax,DWORD PTR [ebp-0x4]
  4283b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4283ba:	push   esi
  4283bb:	push   edi
  4283bc:	mov    edi,0x75108ae
  4283c1:	xor    eax,edi
  4283c3:	mov    esi,0x3272f5
  4283c8:	add    eax,esi
  4283ca:	cmp    eax,ecx
  4283cc:	mov    eax,DWORD PTR [ebp-0x4]
  4283cf:	jne    0x4283da
  4283d1:	xor    eax,edi
  4283d3:	add    eax,esi
  4283d5:	jmp    0x428486
  4283da:	mov    ecx,DWORD PTR [ebp+0xc]
  4283dd:	xor    eax,edi
  4283df:	add    eax,esi
  4283e1:	cmp    eax,ecx
  4283e3:	jne    0x4283ea
  4283e5:	mov    eax,DWORD PTR [ebp-0x4]
  4283e8:	jmp    0x4283d1
  4283ea:	lea    eax,[ebp-0x21c]
  4283f0:	mov    DWORD PTR [ebp-0x8],eax
  4283f3:	mov    eax,DWORD PTR [ebp+0xc]
  4283f6:	mov    DWORD PTR [ebp-0x10],eax
  4283f9:	mov    eax,DWORD PTR [ebp-0x4]
  4283fc:	xor    eax,edi
  4283fe:	add    eax,esi
  428400:	mov    DWORD PTR [ebp+0x10],eax
  428403:	mov    eax,DWORD PTR [ebp+0xc]
  428406:	push   ebx
  428407:	call   0x428131
  42840c:	mov    ebx,eax
  42840e:	mov    eax,DWORD PTR [ebp+0x8]
  428411:	mov    eax,DWORD PTR [eax+0x14]
  428414:	jmp    0x42846e
  428416:	mov    eax,DWORD PTR [ebp+0xc]
  428419:	sub    eax,0x8
  42841c:	mov    DWORD PTR [ebp-0xc],eax
  42841f:	mov    eax,DWORD PTR [ebp-0xc]
  428422:	mov    eax,DWORD PTR [eax+0x28]
  428425:	call   0x428019
  42842a:	mov    DWORD PTR [ebp+0x10],eax
  42842d:	push   DWORD PTR [ebp+0x10]
  428430:	mov    edx,DWORD PTR [ebp-0x8]
  428433:	call   0x4281c0
  428438:	mov    eax,DWORD PTR [ebp-0x4]
  42843b:	xor    eax,edi
  42843d:	add    eax,esi
  42843f:	cmp    eax,ebx
  428441:	jne    0x42844b
  428443:	mov    eax,DWORD PTR [ebp-0x8]
  428446:	call   0x4280a7
  42844b:	mov    eax,DWORD PTR [ebp-0x14]
  42844e:	xor    eax,edi
  428450:	add    eax,esi
  428452:	push   eax
  428453:	push   DWORD PTR [ebp-0x10]
  428456:	mov    eax,DWORD PTR [ebp-0x8]
  428459:	call   0x427dd3
  42845e:	mov    ecx,DWORD PTR [ebp-0x4]
  428461:	xor    ecx,edi
  428463:	add    ecx,esi
  428465:	cmp    eax,ecx
  428467:	je     0x42848c
  428469:	mov    eax,DWORD PTR [ebp+0xc]
  42846c:	mov    eax,DWORD PTR [eax]
  42846e:	mov    DWORD PTR [ebp+0xc],eax
  428471:	mov    eax,DWORD PTR [ebp+0x8]
  428474:	mov    ecx,DWORD PTR [ebp+0xc]
  428477:	add    eax,0x14
  42847a:	cmp    ecx,eax
  42847c:	jne    0x428416
  42847e:	mov    eax,DWORD PTR [ebp-0x4]
  428481:	xor    eax,edi
  428483:	add    eax,esi
  428485:	pop    ebx
  428486:	pop    edi
  428487:	pop    esi
  428488:	leave  
  428489:	ret    0xc
  42848c:	mov    eax,DWORD PTR [ebp-0xc]
  42848f:	mov    eax,DWORD PTR [eax+0x18]
  428492:	jmp    0x428485
  428494:	push   ebp
  428495:	mov    ebp,esp
  428497:	mov    eax,DWORD PTR [ebp+0xc]
  42849a:	sub    esp,0x10
  42849d:	cmp    DWORD PTR [ebp+0x8],0x0
  4284a1:	push   ebx
  4284a2:	push   esi
  4284a3:	push   edi
  4284a4:	je     0x428559
  4284aa:	test   eax,eax
  4284ac:	je     0x428559
  4284b2:	movzx  eax,WORD PTR [eax+0x20]
  4284b6:	mov    ecx,eax
  4284b8:	mov    DWORD PTR [ebp-0x10],eax
  4284bb:	xor    edx,edx
  4284bd:	and    DWORD PTR [ebp-0x8],edx
  4284c0:	mov    eax,0x8a9a
  4284c5:	xor    ecx,eax
  4284c7:	add    ecx,0x3b5c
  4284cd:	mov    DWORD PTR [ebp-0xc],ecx
  4284d0:	and    DWORD PTR [ebp-0x4],0x0
  4284d4:	xor    ecx,ecx
  4284d6:	push   0xffffff81
  4284d8:	pop    edi
  4284d9:	cmp    cx,WORD PTR [ebp-0xc]
  4284dd:	jae    0x428543
  4284df:	lea    esi,[edx-0x3b5c]
  4284e5:	xor    esi,eax
  4284e7:	movzx  ecx,WORD PTR [ebp-0x4]
  4284eb:	mov    ebx,DWORD PTR [ebp+0xc]
  4284ee:	lea    ecx,[ebx+ecx*4]
  4284f1:	cmp    WORD PTR [ecx+0x2],si
  4284f5:	jne    0x42852e
  4284f7:	movzx  ecx,WORD PTR [ecx]
  4284fa:	mov    edi,0x4e3e
  4284ff:	cmp    cx,di
  428502:	jne    0x428510
  428504:	mov    ebx,DWORD PTR [ebp+0x8]
  428507:	movzx  edi,dx
  42850a:	cmp    BYTE PTR [edi+ebx*1],0x0
  42850e:	je     0x42853d
  428510:	mov    ebx,DWORD PTR [ebp+0x8]
  428513:	movzx  edi,dx
  428516:	movsx  di,BYTE PTR [edi+ebx*1]
  42851b:	mov    ebx,0x3b5c
  428520:	sub    di,bx
  428523:	xor    di,ax
  428526:	cmp    cx,di
  428529:	je     0x42853d
  42852b:	push   0xffffff83
  42852d:	pop    edi
  42852e:	inc    DWORD PTR [ebp-0x4]
  428531:	mov    cx,WORD PTR [ebp-0xc]
  428535:	cmp    WORD PTR [ebp-0x4],cx
  428539:	jb     0x4284e7
  42853b:	jmp    0x428543
  42853d:	inc    DWORD PTR [ebp-0x8]
  428540:	push   0xffffff80
  428542:	pop    edi
  428543:	mov    esi,DWORD PTR [ebp+0x8]
  428546:	movzx  ecx,dx
  428549:	cmp    BYTE PTR [ecx+esi*1],0x0
  42854d:	je     0x428562
  42854f:	inc    edx
  428550:	cmp    edi,0xffffff83
  428553:	jne    0x4284d0
  428559:	xor    eax,eax
  42855b:	pop    edi
  42855c:	pop    esi
  42855d:	pop    ebx
  42855e:	leave  
  42855f:	ret    0x8
  428562:	mov    ecx,DWORD PTR [ebp-0x8]
  428565:	add    ecx,0xffffc4a4
  42856b:	xor    cx,ax
  42856e:	xor    eax,eax
  428570:	cmp    cx,WORD PTR [ebp-0x10]
  428574:	sete   al
  428577:	jmp    0x42855b
  428579:	push   ebp
  42857a:	mov    ebp,esp
  42857c:	sub    esp,0x50
  42857f:	push   edi
  428580:	mov    edi,eax
  428582:	mov    eax,DWORD PTR [edi+0x1a8]
  428588:	cmp    DWORD PTR [eax],0x0
  42858b:	jne    0x428594
  42858d:	xor    eax,eax
  42858f:	jmp    0x4286c5
  428594:	push   DWORD PTR [ebp+0x8]
  428597:	push   0x2c
  428599:	pop    eax
  42859a:	call   0x428329
  42859f:	mov    edx,DWORD PTR [edi+0x1ac]
  4285a5:	lea    eax,[edi+0x22]
  4285a8:	mov    DWORD PTR [ebp-0x4c],eax
  4285ab:	lea    eax,[edi+0x44]
  4285ae:	mov    DWORD PTR [ebp-0x48],eax
  4285b1:	lea    eax,[edi+0x66]
  4285b4:	mov    DWORD PTR [ebp-0x44],eax
  4285b7:	lea    eax,[edi+0x88]
  4285bd:	mov    DWORD PTR [ebp-0x40],eax
  4285c0:	lea    eax,[edi+0xaa]
  4285c6:	mov    DWORD PTR [ebp-0x3c],eax
  4285c9:	lea    eax,[edi+0xcc]
  4285cf:	mov    DWORD PTR [ebp-0x38],eax
  4285d2:	lea    eax,[edi+0xee]
  4285d8:	mov    DWORD PTR [ebp-0x34],eax
  4285db:	lea    eax,[edi+0x110]
  4285e1:	mov    DWORD PTR [ebp-0x30],eax
  4285e4:	lea    eax,[edi+0x132]
  4285ea:	mov    DWORD PTR [ebp-0x2c],eax
  4285ed:	lea    eax,[edi+0x154]
  4285f3:	push   edi
  4285f4:	mov    DWORD PTR [ebp-0x50],edi
  4285f7:	mov    DWORD PTR [ebp-0x28],eax
  4285fa:	call   0x4286f9
  4285ff:	push   eax
  428600:	mov    eax,DWORD PTR [edi+0x1a8]
  428606:	push   DWORD PTR [eax]
  428608:	call   0x42839a
  42860d:	mov    DWORD PTR [ebp-0x10],eax
  428610:	test   eax,eax
  428612:	je     0x4286c5
  428618:	mov    ecx,DWORD PTR [eax+0x3c]
  42861b:	push   ebx
  42861c:	push   esi
  42861d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428621:	add    esi,eax
  428623:	mov    edi,DWORD PTR [esi+0x24]
  428626:	mov    ecx,DWORD PTR [esi+0x1c]
  428629:	mov    edx,DWORD PTR [esi+0x20]
  42862c:	mov    ebx,DWORD PTR [esi+0x18]
  42862f:	add    edi,eax
  428631:	mov    DWORD PTR [ebp-0x20],edi
  428634:	mov    edi,DWORD PTR [esi+0x14]
  428637:	add    ecx,eax
  428639:	add    edx,eax
  42863b:	mov    DWORD PTR [ebp-0xc],ecx
  42863e:	mov    DWORD PTR [ebp-0x1c],edx
  428641:	mov    DWORD PTR [ebp-0x8],edi
  428644:	cmp    edi,ebx
  428646:	ja     0x42864b
  428648:	mov    DWORD PTR [ebp-0x8],ebx
  42864b:	xor    ebx,ebx
  42864d:	mov    DWORD PTR [ebp-0x18],ebx
  428650:	cmp    DWORD PTR [ebp-0x8],ebx
  428653:	jbe    0x4286c3
  428655:	jmp    0x42865a
  428657:	mov    edx,DWORD PTR [ebp-0x1c]
  42865a:	mov    edi,DWORD PTR [ebp-0x20]
  42865d:	movzx  edi,WORD PTR [edi+ebx*2]
  428661:	cmp    ebx,DWORD PTR [esi+0x18]
  428664:	jae    0x4286c3
  428666:	cmp    edi,DWORD PTR [esi+0x14]
  428669:	jae    0x4286c3
  42866b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42866e:	mov    edx,DWORD PTR [ebp+0x8]
  428671:	mov    edi,DWORD PTR [ecx+edi*4]
  428674:	mov    DWORD PTR [ebp-0x4],edx
  428677:	lea    edx,[ebp-0x50]
  42867a:	add    ebx,eax
  42867c:	add    edi,eax
  42867e:	sub    edx,DWORD PTR [ebp+0x8]
  428681:	mov    DWORD PTR [ebp-0x14],0xb
  428688:	mov    DWORD PTR [ebp-0x24],edx
  42868b:	mov    edx,DWORD PTR [ebp-0x4]
  42868e:	cmp    DWORD PTR [edx],0x0
  428691:	jne    0x4286ae
  428693:	mov    eax,DWORD PTR [ebp-0x24]
  428696:	push   DWORD PTR [eax+edx*1]
  428699:	push   ebx
  42869a:	call   0x428494
  42869f:	mov    ecx,DWORD PTR [ebp-0xc]
  4286a2:	test   eax,eax
  4286a4:	je     0x4286ab
  4286a6:	mov    eax,DWORD PTR [ebp-0x4]
  4286a9:	mov    DWORD PTR [eax],edi
  4286ab:	mov    eax,DWORD PTR [ebp-0x10]
  4286ae:	add    DWORD PTR [ebp-0x4],0x4
  4286b2:	dec    DWORD PTR [ebp-0x14]
  4286b5:	jne    0x42868b
  4286b7:	mov    ebx,DWORD PTR [ebp-0x18]
  4286ba:	inc    ebx
  4286bb:	mov    DWORD PTR [ebp-0x18],ebx
  4286be:	cmp    ebx,DWORD PTR [ebp-0x8]
  4286c1:	jb     0x428657
  4286c3:	pop    esi
  4286c4:	pop    ebx
  4286c5:	pop    edi
  4286c6:	leave  
  4286c7:	ret    0x4
  4286ca:	push   ebp
  4286cb:	mov    ebp,esp
  4286cd:	mov    eax,DWORD PTR [ebp+0x8]
  4286d0:	push   esi
  4286d1:	push   DWORD PTR [eax+0x1e0]
  4286d7:	lea    esi,[eax+0x198]
  4286dd:	mov    eax,DWORD PTR [ebp+0x8]
  4286e0:	call   0x428579
  4286e5:	mov    ecx,DWORD PTR [esi]
  4286e7:	mov    DWORD PTR [ecx],eax
  4286e9:	mov    eax,DWORD PTR [esi]
  4286eb:	xor    ecx,ecx
  4286ed:	cmp    DWORD PTR [eax],ecx
  4286ef:	pop    esi
  4286f0:	setne  cl
  4286f3:	mov    eax,ecx
  4286f5:	pop    ebp
  4286f6:	ret    0x4
  4286f9:	mov    ecx,DWORD PTR [edi+0x188]
  4286ff:	push   ebx
  428700:	jmp    0x428715
  428702:	xor    eax,0x8a9a
  428707:	add    eax,0x3b5c
  42870c:	mov    WORD PTR [ecx],ax
  42870f:	add    ecx,0x2
  428712:	add    edx,0x2
  428715:	movzx  eax,WORD PTR [edx]
  428718:	mov    ebx,0x4e3e
  42871d:	cmp    ax,bx
  428720:	jne    0x428702
  428722:	xor    eax,eax
  428724:	mov    WORD PTR [ecx],ax
  428727:	mov    eax,DWORD PTR [edi+0x188]
  42872d:	pop    ebx
  42872e:	ret    
  42872f:	push   edi
  428730:	mov    edi,eax
  428732:	mov    eax,DWORD PTR [esi+0x188]
  428738:	shl    edi,0x6
  42873b:	add    eax,edi
  42873d:	jmp    0x428749
  42873f:	xor    cl,0x7e
  428742:	add    cl,0x3
  428745:	mov    BYTE PTR [eax],cl
  428747:	inc    eax
  428748:	inc    edx
  428749:	mov    cl,BYTE PTR [edx]
  42874b:	cmp    cl,0x83
  42874e:	jne    0x42873f
  428750:	mov    BYTE PTR [eax],0x0
  428753:	mov    eax,DWORD PTR [esi+0x188]
  428759:	add    eax,edi
  42875b:	pop    edi
  42875c:	ret    
  42875d:	push   ebp
  42875e:	mov    ebp,esp
  428760:	sub    esp,0x14
  428763:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42876a:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  428771:	mov    eax,DWORD PTR [ebx]
  428773:	mov    DWORD PTR [ebp-0x8],eax
  428776:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42877d:	push   esi
  42877e:	push   edi
  42877f:	mov    DWORD PTR [ebp-0x14],0xead71885
  428786:	mov    edi,DWORD PTR [ebp-0x4]
  428789:	mov    ecx,DWORD PTR [ebp-0x10]
  42878c:	mov    eax,0x75108ae
  428791:	xor    edi,eax
  428793:	mov    edx,0x3272f5
  428798:	xor    ecx,eax
  42879a:	add    edi,edx
  42879c:	add    ecx,edx
  42879e:	imul   edi,ecx
  4287a1:	jmp    0x4287e9
  4287a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4287a6:	mov    esi,DWORD PTR [ebp-0x4]
  4287a9:	xor    ecx,eax
  4287ab:	xor    esi,eax
  4287ad:	add    ecx,edx
  4287af:	add    esi,edx
  4287b1:	test   esi,ecx
  4287b3:	mov    esi,DWORD PTR [ebp-0x8]
  4287b6:	mov    ecx,DWORD PTR [ebp-0x4]
  4287b9:	je     0x4287d0
  4287bb:	xor    ecx,eax
  4287bd:	xor    esi,eax
  4287bf:	add    ecx,edx
  4287c1:	add    esi,edx
  4287c3:	shr    esi,cl
  4287c5:	mov    ecx,DWORD PTR [ebp-0x14]
  4287c8:	xor    ecx,eax
  4287ca:	add    ecx,edx
  4287cc:	xor    esi,ecx
  4287ce:	jmp    0x4287da
  4287d0:	xor    esi,eax
  4287d2:	xor    ecx,eax
  4287d4:	add    esi,edx
  4287d6:	add    ecx,edx
  4287d8:	shr    esi,cl
  4287da:	mov    DWORD PTR [ebp-0x8],esi
  4287dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4287e0:	xor    ecx,eax
  4287e2:	lea    edi,[edi+ecx*1+0x3272f5]
  4287e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4287ec:	mov    esi,DWORD PTR [ebp-0x4]
  4287ef:	xor    esi,eax
  4287f1:	xor    ecx,eax
  4287f3:	sub    ecx,esi
  4287f5:	cmp    edi,ecx
  4287f7:	jbe    0x4287a3
  4287f9:	mov    eax,DWORD PTR [ebp-0x8]
  4287fc:	pop    edi
  4287fd:	mov    DWORD PTR [ebx],eax
  4287ff:	mov    eax,DWORD PTR [ebp-0x8]
  428802:	pop    esi
  428803:	leave  
  428804:	ret    
  428805:	push   ebp
  428806:	mov    ebp,esp
  428808:	sub    esp,0x38
  42880b:	push   ebx
  42880c:	mov    ebx,0xf89c85a5
  428811:	mov    DWORD PTR [ebp-0x4],ebx
  428814:	lea    ecx,[ebx-0x3]
  428817:	mov    DWORD PTR [ebp-0x24],ecx
  42881a:	mov    eax,DWORD PTR [ebp-0x4]
  42881d:	mov    edx,DWORD PTR [ebp+0x8]
  428820:	push   esi
  428821:	mov    esi,0x75108ae
  428826:	xor    eax,esi
  428828:	push   edi
  428829:	mov    edi,0x3272f5
  42882e:	add    eax,edi
  428830:	cmp    edx,eax
  428832:	mov    eax,DWORD PTR [ebp-0x4]
  428835:	je     0x42899a
  42883b:	mov    edx,DWORD PTR [ebp+0xc]
  42883e:	xor    eax,esi
  428840:	add    eax,edi
  428842:	cmp    edx,eax
  428844:	je     0x428997
  42884a:	mov    eax,DWORD PTR [ebp+0x10]
  42884d:	mov    edx,DWORD PTR [ebp+0xc]
  428850:	mov    DWORD PTR [ebp-0x14],eax
  428853:	mov    eax,DWORD PTR [ebp+0x8]
  428856:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  42885d:	mov    DWORD PTR [ebp-0xc],eax
  428860:	lea    eax,[ebx-0x2]
  428863:	mov    DWORD PTR [ebp-0x1c],eax
  428866:	mov    DWORD PTR [ebp-0x10],ebx
  428869:	mov    DWORD PTR [ebp+0xc],ecx
  42886c:	mov    DWORD PTR [ebp+0x10],eax
  42886f:	mov    eax,DWORD PTR [ebp+0xc]
  428872:	xor    eax,esi
  428874:	mov    DWORD PTR [ebp-0x20],edx
  428877:	sub    edx,eax
  428879:	sub    edx,edi
  42887b:	mov    DWORD PTR [ebp+0x8],edx
  42887e:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428885:	jmp    0x428987
  42888a:	mov    eax,DWORD PTR [ebp+0xc]
  42888d:	mov    ecx,DWORD PTR [ebp+0xc]
  428890:	xor    eax,esi
  428892:	xor    ecx,esi
  428894:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42889b:	mov    eax,DWORD PTR [ebp+0x8]
  42889e:	xor    edx,edx
  4288a0:	div    ecx
  4288a2:	mov    eax,DWORD PTR [ebp+0x10]
  4288a5:	mov    ecx,DWORD PTR [ebp+0xc]
  4288a8:	xor    eax,esi
  4288aa:	xor    ecx,esi
  4288ac:	sub    eax,ecx
  4288ae:	cmp    edx,eax
  4288b0:	jne    0x428946
  4288b6:	mov    eax,DWORD PTR [ebp+0x8]
  4288b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4288bc:	mov    dl,BYTE PTR [eax+ecx*1]
  4288bf:	mov    eax,DWORD PTR [ebp-0x10]
  4288c2:	mov    ecx,DWORD PTR [ebp-0x8]
  4288c5:	xor    eax,esi
  4288c7:	xor    ecx,esi
  4288c9:	add    eax,edi
  4288cb:	add    ecx,edi
  4288cd:	cmp    eax,ecx
  4288cf:	jae    0x428917
  4288d1:	lea    ecx,[eax-0x3272f5]
  4288d7:	mov    DWORD PTR [ebp-0x4],ecx
  4288da:	mov    ebx,DWORD PTR [ebp-0x4]
  4288dd:	xor    ebx,esi
  4288df:	add    ebx,0x7f55d8e3
  4288e5:	lea    ecx,[ebp+eax*4-0x38]
  4288e9:	mov    DWORD PTR [ecx],ebx
  4288eb:	mov    ebx,DWORD PTR [ecx]
  4288ed:	cmp    ebx,0x244ecb80
  4288f3:	jbe    0x4288fd
  4288f5:	add    DWORD PTR [ecx],0x405fcc1
  4288fb:	jmp    0x428903
  4288fd:	add    DWORD PTR [ecx],0xfdaf433f
  428903:	mov    ecx,DWORD PTR [ebp-0x8]
  428906:	xor    ecx,esi
  428908:	inc    eax
  428909:	inc    DWORD PTR [ebp-0x4]
  42890c:	add    ecx,edi
  42890e:	cmp    eax,ecx
  428910:	jb     0x4288da
  428912:	mov    ebx,0xf89c85a5
  428917:	cmp    DWORD PTR [ebp-0x14],0x0
  42891b:	jne    0x428925
  42891d:	xor    dl,0x7e
  428920:	add    dl,0x3
  428923:	jmp    0x42893b
  428925:	mov    eax,DWORD PTR [ebp-0x18]
  428928:	xor    al,0xae
  42892a:	mov    cl,0xb
  42892c:	sub    cl,al
  42892e:	add    dl,cl
  428930:	mov    ecx,DWORD PTR [ebp-0x1c]
  428933:	xor    cl,0xae
  428936:	sub    cl,0xb
  428939:	ror    dl,cl
  42893b:	xor    eax,eax
  42893d:	mov    eax,DWORD PTR [ebp+0x8]
  428940:	mov    ecx,DWORD PTR [ebp-0xc]
  428943:	mov    BYTE PTR [eax+ecx*1],dl
  428946:	mov    eax,DWORD PTR [ebp+0x8]
  428949:	mov    ecx,DWORD PTR [ebp-0x10]
  42894c:	sub    eax,edi
  42894e:	xor    eax,esi
  428950:	cmp    eax,ecx
  428952:	jne    0x428975
  428954:	mov    eax,DWORD PTR [ebp+0x10]
  428957:	mov    ecx,DWORD PTR [ebp+0xc]
  42895a:	xor    eax,esi
  42895c:	xor    ecx,esi
  42895e:	sub    eax,ecx
  428960:	mov    ecx,DWORD PTR [ebp-0x20]
  428963:	sub    eax,edi
  428965:	xor    eax,esi
  428967:	mov    DWORD PTR [ebp+0x10],eax
  42896a:	mov    eax,DWORD PTR [ebp+0xc]
  42896d:	xor    eax,esi
  42896f:	sub    ecx,eax
  428971:	sub    ecx,edi
  428973:	jmp    0x428984
  428975:	mov    eax,DWORD PTR [ebp+0xc]
  428978:	xor    eax,esi
  42897a:	mov    ecx,0xffcd8d0b
  42897f:	sub    ecx,eax
  428981:	add    ecx,DWORD PTR [ebp+0x8]
  428984:	mov    DWORD PTR [ebp+0x8],ecx
  428987:	mov    eax,DWORD PTR [ebp+0x10]
  42898a:	cmp    eax,ebx
  42898c:	jne    0x42888a
  428992:	mov    eax,DWORD PTR [ebp-0x24]
  428995:	jmp    0x42899a
  428997:	mov    eax,DWORD PTR [ebp-0x4]
  42899a:	xor    eax,esi
  42899c:	add    eax,edi
  42899e:	pop    edi
  42899f:	pop    esi
  4289a0:	pop    ebx
  4289a1:	leave  
  4289a2:	ret    0xc
  4289a5:	push   ebp
  4289a6:	mov    ebp,esp
  4289a8:	sub    esp,0x420
  4289ae:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4289b5:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  4289bc:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4289c3:	push   ebx
  4289c4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4289cb:	mov    eax,DWORD PTR [ebp-0x14]
  4289ce:	push   esi
  4289cf:	mov    esi,0x75108ae
  4289d4:	push   edi
  4289d5:	xor    eax,esi
  4289d7:	mov    edi,0x3272f5
  4289dc:	add    eax,edi
  4289de:	mov    DWORD PTR [ebp-0x8],eax
  4289e1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4289e8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4289ef:	mov    DWORD PTR [ebp-0x10],0x8
  4289f6:	mov    ecx,ecx
  4289f8:	mov    eax,DWORD PTR [ebp-0xc]
  4289fb:	mov    ecx,DWORD PTR [ebp-0x14]
  4289fe:	xor    eax,esi
  428a00:	xor    ecx,esi
  428a02:	add    eax,edi
  428a04:	add    ecx,edi
  428a06:	imul   eax,ecx
  428a09:	jmp    0x428a3c
  428a0b:	mov    eax,DWORD PTR [ebp-0x4]
  428a0e:	sub    eax,edi
  428a10:	xor    eax,esi
  428a12:	mov    DWORD PTR [ebp-0x8],eax
  428a15:	lea    ebx,[ebp-0x8]
  428a18:	call   0x42875d
  428a1d:	mov    DWORD PTR [ebp-0x8],eax
  428a20:	mov    eax,DWORD PTR [ebp-0x8]
  428a23:	mov    ecx,DWORD PTR [ebp-0x4]
  428a26:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428a2d:	mov    eax,DWORD PTR [ebp-0xc]
  428a30:	mov    ecx,DWORD PTR [ebp-0x4]
  428a33:	xor    eax,esi
  428a35:	lea    eax,[eax+ecx*1+0x3272f5]
  428a3c:	mov    DWORD PTR [ebp-0x4],eax
  428a3f:	mov    eax,DWORD PTR [ebp-0x18]
  428a42:	mov    ecx,DWORD PTR [ebp-0xc]
  428a45:	xor    ecx,esi
  428a47:	xor    eax,esi
  428a49:	sub    eax,ecx
  428a4b:	mov    ecx,DWORD PTR [ebp-0x4]
  428a4e:	cmp    ecx,eax
  428a50:	jbe    0x428a0b
  428a52:	mov    eax,DWORD PTR [ebp-0x1c]
  428a55:	xor    eax,esi
  428a57:	add    eax,edi
  428a59:	mov    DWORD PTR [ebp-0x8],eax
  428a5c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428a63:	mov    ebx,ebx
  428a65:	jmp    0x428ac8
  428a67:	mov    ecx,DWORD PTR [ebp-0x20]
  428a6a:	mov    eax,DWORD PTR [ebp-0x8]
  428a6d:	xor    ecx,esi
  428a6f:	add    ecx,edi
  428a71:	shr    eax,cl
  428a73:	mov    DWORD PTR [ebp-0x4],eax
  428a76:	mov    eax,DWORD PTR [ebp+0x8]
  428a79:	mov    cl,BYTE PTR [eax]
  428a7b:	mov    BYTE PTR [ebp+0xb],cl
  428a7e:	mov    cl,BYTE PTR [ebp+0xb]
  428a81:	mov    edx,DWORD PTR [ebp-0x8]
  428a84:	movzx  ecx,cl
  428a87:	xor    ecx,edx
  428a89:	mov    DWORD PTR [ebp+0x8],ecx
  428a8c:	mov    ecx,DWORD PTR [ebp-0x18]
  428a8f:	mov    edx,DWORD PTR [ebp+0x8]
  428a92:	xor    ecx,esi
  428a94:	add    ecx,edi
  428a96:	and    ecx,edx
  428a98:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428a9f:	mov    edx,DWORD PTR [ebp-0x4]
  428aa2:	xor    ecx,edx
  428aa4:	mov    DWORD PTR [ebp-0x8],ecx
  428aa7:	mov    ecx,DWORD PTR [ebp-0xc]
  428aaa:	xor    ecx,esi
  428aac:	lea    eax,[eax+ecx*1+0x3272f5]
  428ab3:	mov    DWORD PTR [ebp+0x8],eax
  428ab6:	mov    eax,DWORD PTR [ebp-0xc]
  428ab9:	xor    eax,esi
  428abb:	mov    ecx,0xffcd8d0b
  428ac0:	sub    ecx,eax
  428ac2:	add    ecx,DWORD PTR [ebp-0x10]
  428ac5:	mov    DWORD PTR [ebp-0x10],ecx
  428ac8:	mov    eax,DWORD PTR [ebp-0x14]
  428acb:	mov    ecx,DWORD PTR [ebp-0x10]
  428ace:	xor    eax,esi
  428ad0:	add    eax,edi
  428ad2:	cmp    ecx,eax
  428ad4:	jne    0x428a67
  428ad6:	mov    eax,DWORD PTR [ebp-0x1c]
  428ad9:	mov    ecx,DWORD PTR [ebp-0x8]
  428adc:	xor    eax,esi
  428ade:	add    eax,edi
  428ae0:	pop    edi
  428ae1:	pop    esi
  428ae2:	xor    eax,ecx
  428ae4:	pop    ebx
  428ae5:	leave  
  428ae6:	ret    0x4
  428ae9:	push   ebp
  428aea:	mov    ebp,esp
  428aec:	mov    eax,DWORD PTR [ebp+0x1c]
  428aef:	mov    ecx,DWORD PTR [ebp+0x8]
  428af2:	mov    edx,DWORD PTR [ebp+0x10]
  428af5:	mov    eax,DWORD PTR [eax+0x190]
  428afb:	mov    eax,DWORD PTR [eax]
  428afd:	sub    esp,0x64
  428b00:	push   ebx
  428b01:	push   esi
  428b02:	push   edi
  428b03:	mov    edi,0x75108ae
  428b08:	xor    ecx,edi
  428b0a:	mov    ebx,0x3272f5
  428b0f:	add    ecx,ebx
  428b11:	cmp    ecx,edx
  428b13:	jne    0x428b24
  428b15:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428b1f:	jmp    0x429020
  428b24:	mov    ecx,DWORD PTR [ebp+0x8]
  428b27:	mov    esi,DWORD PTR [ebp+0x14]
  428b2a:	mov    edx,DWORD PTR [esi]
  428b2c:	xor    ecx,edi
  428b2e:	add    ecx,ebx
  428b30:	cmp    edx,ecx
  428b32:	je     0x428fdb
  428b38:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b3b:	mov    DWORD PTR [ebp-0x1c],eax
  428b3e:	mov    DWORD PTR [ebp+0x1c],ecx
  428b41:	mov    ecx,DWORD PTR [ebp+0x18]
  428b44:	mov    eax,DWORD PTR [esi]
  428b46:	mov    DWORD PTR [ebp-0x20],eax
  428b49:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428b50:	mov    edx,0xf89c85a2
  428b55:	mov    DWORD PTR [ebp-0x8],edx
  428b58:	mov    eax,DWORD PTR [ebp+0x1c]
  428b5b:	mov    DWORD PTR [ebp+0x1c],eax
  428b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  428b61:	mov    eax,DWORD PTR [eax+0x190]
  428b67:	mov    eax,DWORD PTR [eax]
  428b69:	mov    DWORD PTR [ebp-0x24],ecx
  428b6c:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b6f:	mov    ecx,DWORD PTR [ecx+0x190]
  428b75:	mov    ecx,DWORD PTR [ecx]
  428b77:	add    ecx,DWORD PTR [eax+0x3c]
  428b7a:	mov    DWORD PTR [ebp+0x10],ecx
  428b7d:	mov    eax,DWORD PTR [ebp+0x8]
  428b80:	xor    eax,edi
  428b82:	add    eax,ebx
  428b84:	mov    DWORD PTR [ebp-0x4],eax
  428b87:	mov    eax,DWORD PTR [ebp+0x8]
  428b8a:	xor    eax,edi
  428b8c:	add    eax,ebx
  428b8e:	mov    DWORD PTR [ebp+0x18],eax
  428b91:	mov    eax,DWORD PTR [ebp+0x10]
  428b94:	mov    eax,DWORD PTR [eax+0x50]
  428b97:	sub    eax,0xc
  428b9a:	mov    DWORD PTR [ebp-0x28],eax
  428b9d:	mov    eax,DWORD PTR [ebp+0x10]
  428ba0:	mov    eax,DWORD PTR [eax+0x38]
  428ba3:	mov    ecx,DWORD PTR [ebp+0x10]
  428ba6:	dec    eax
  428ba7:	test   DWORD PTR [ecx+0x54],eax
  428baa:	mov    eax,DWORD PTR [ebp+0x10]
  428bad:	je     0x428bc7
  428baf:	mov    eax,DWORD PTR [eax+0x38]
  428bb2:	mov    ecx,DWORD PTR [ebp+0x10]
  428bb5:	mov    ecx,DWORD PTR [ecx+0x54]
  428bb8:	dec    eax
  428bb9:	not    eax
  428bbb:	and    ecx,eax
  428bbd:	mov    eax,DWORD PTR [ebp+0x10]
  428bc0:	mov    eax,DWORD PTR [eax+0x38]
  428bc3:	add    eax,ecx
  428bc5:	jmp    0x428bca
  428bc7:	mov    eax,DWORD PTR [eax+0x54]
  428bca:	mov    DWORD PTR [ebp+0x1c],eax
  428bcd:	mov    eax,DWORD PTR [ebp+0x8]
  428bd0:	xor    eax,edi
  428bd2:	add    eax,ebx
  428bd4:	mov    DWORD PTR [ebp+0x18],eax
  428bd7:	mov    eax,DWORD PTR [ebp+0x8]
  428bda:	xor    eax,edi
  428bdc:	add    eax,ebx
  428bde:	mov    DWORD PTR [ebp+0x18],eax
  428be1:	mov    eax,DWORD PTR [ebp+0x8]
  428be4:	mov    ecx,DWORD PTR [ebp-0x24]
  428be7:	xor    eax,edi
  428be9:	add    eax,ebx
  428beb:	mov    DWORD PTR [ecx],eax
  428bed:	mov    DWORD PTR [ebp+0x18],edx
  428bf0:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428bf7:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428bfe:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428c05:	mov    eax,DWORD PTR [ebp-0x8]
  428c08:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c0b:	xor    eax,edi
  428c0d:	add    eax,ebx
  428c0f:	imul   eax,ecx
  428c12:	mov    ecx,DWORD PTR [ebp+0x8]
  428c15:	mov    edx,DWORD PTR [ebp-0x28]
  428c18:	xor    ecx,edi
  428c1a:	lea    ecx,[ecx+edx*1+0x3272f5]
  428c21:	cmp    eax,ecx
  428c23:	jae    0x428fd4
  428c29:	mov    eax,DWORD PTR [ebp+0x8]
  428c2c:	xor    eax,edi
  428c2e:	add    eax,ebx
  428c30:	mov    DWORD PTR [ebp+0x18],eax
  428c33:	mov    eax,DWORD PTR [ebp+0x1c]
  428c36:	add    eax,DWORD PTR [ebp-0x1c]
  428c39:	mov    DWORD PTR [ebp-0x4],eax
  428c3c:	push   DWORD PTR [ebp-0x4]
  428c3f:	mov    esi,DWORD PTR [ebp-0x1c]
  428c42:	mov    ecx,DWORD PTR [ebp+0x10]
  428c45:	call   0x427d95
  428c4a:	mov    DWORD PTR [ebp+0xc],eax
  428c4d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428c54:	mov    eax,DWORD PTR [ebp-0x18]
  428c57:	xor    eax,edi
  428c59:	lea    ecx,[ebp-0x40]
  428c5c:	add    eax,ebx
  428c5e:	push   ecx
  428c5f:	call   0x428329
  428c64:	mov    eax,DWORD PTR [ebp+0xc]
  428c67:	test   eax,eax
  428c69:	je     0x428cb9
  428c6b:	mov    eax,DWORD PTR [ebp-0x18]
  428c6e:	xor    eax,edi
  428c70:	add    eax,ebx
  428c72:	push   eax
  428c73:	push   DWORD PTR [ebp+0xc]
  428c76:	lea    eax,[ebp-0x40]
  428c79:	push   eax
  428c7a:	call   0x42821f
  428c7f:	mov    eax,DWORD PTR [ebp-0x4]
  428c82:	mov    DWORD PTR [ebp-0x18],eax
  428c85:	mov    eax,DWORD PTR [ebp-0x18]
  428c88:	mov    ecx,DWORD PTR [ebp-0x1c]
  428c8b:	sub    eax,ecx
  428c8d:	mov    DWORD PTR [ebp-0x18],eax
  428c90:	mov    eax,DWORD PTR [ebp+0xc]
  428c93:	mov    ecx,DWORD PTR [ebp+0xc]
  428c96:	mov    eax,DWORD PTR [eax+0x10]
  428c99:	add    eax,DWORD PTR [ecx+0xc]
  428c9c:	mov    ecx,DWORD PTR [ebp-0x18]
  428c9f:	cmp    ecx,eax
  428ca1:	jb     0x428cb9
  428ca3:	mov    eax,DWORD PTR [ebp+0xc]
  428ca6:	mov    eax,DWORD PTR [eax+0xc]
  428ca9:	mov    ecx,DWORD PTR [ebp+0xc]
  428cac:	add    eax,DWORD PTR [ecx+0x8]
  428caf:	mov    ecx,DWORD PTR [ebp-0x18]
  428cb2:	sub    eax,ecx
  428cb4:	jmp    0x428fa7
  428cb9:	push   0xc
  428cbb:	push   DWORD PTR [ebp-0x4]
  428cbe:	lea    eax,[ebp-0x4c]
  428cc1:	push   eax
  428cc2:	call   0x42821f
  428cc7:	mov    eax,0xf89c85a5
  428ccc:	mov    DWORD PTR [ebp-0x2c],eax
  428ccf:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428cd6:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428cdd:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428ce4:	lea    ecx,[ebp-0x2c]
  428ce7:	mov    DWORD PTR [ebp-0xc],ecx
  428cea:	lea    ecx,[ebp-0x30]
  428ced:	mov    DWORD PTR [ebp-0x10],ecx
  428cf0:	lea    ecx,[ebp-0x34]
  428cf3:	mov    DWORD PTR [ebp+0xc],ecx
  428cf6:	lea    ecx,[ebp-0x38]
  428cf9:	mov    DWORD PTR [ebp-0x14],ecx
  428cfc:	mov    ecx,DWORD PTR [ebp+0x8]
  428cff:	xor    ecx,edi
  428d01:	add    ecx,ebx
  428d03:	mov    DWORD PTR [ebp-0x18],ecx
  428d06:	jmp    0x428f02
  428d0b:	cmp    eax,0xf89c85a3
  428d10:	je     0x428f14
  428d16:	mov    ecx,DWORD PTR [ebp-0x8]
  428d19:	xor    ecx,edi
  428d1b:	mov    esi,eax
  428d1d:	add    ecx,ebx
  428d1f:	mov    DWORD PTR [ebp+0x18],ecx
  428d22:	mov    eax,DWORD PTR [ebp-0x18]
  428d25:	xor    esi,edi
  428d27:	lea    eax,[eax+esi*1+0x3272f5]
  428d2e:	mov    DWORD PTR [ebp-0x18],eax
  428d31:	mov    eax,DWORD PTR [ebp-0x8]
  428d34:	mov    ecx,DWORD PTR [ebp-0x18]
  428d37:	xor    eax,edi
  428d39:	add    eax,ebx
  428d3b:	cmp    ecx,eax
  428d3d:	jne    0x428d52
  428d3f:	mov    eax,DWORD PTR [ebp+0x8]
  428d42:	xor    eax,edi
  428d44:	add    eax,ebx
  428d46:	push   eax
  428d47:	push   0xc
  428d49:	lea    eax,[ebp-0x4c]
  428d4c:	push   eax
  428d4d:	call   0x428805
  428d52:	mov    eax,DWORD PTR [ebp-0xc]
  428d55:	mov    eax,DWORD PTR [eax]
  428d57:	xor    eax,edi
  428d59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d60:	mov    ecx,DWORD PTR [ebp+0x8]
  428d63:	xor    ecx,edi
  428d65:	movzx  eax,al
  428d68:	add    ecx,ebx
  428d6a:	cmp    eax,ecx
  428d6c:	je     0x428eea
  428d72:	mov    eax,DWORD PTR [ebp-0x10]
  428d75:	mov    eax,DWORD PTR [eax]
  428d77:	xor    eax,edi
  428d79:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d80:	mov    ecx,DWORD PTR [ebp+0x8]
  428d83:	xor    ecx,edi
  428d85:	movzx  eax,al
  428d88:	add    ecx,ebx
  428d8a:	cmp    eax,ecx
  428d8c:	je     0x428eea
  428d92:	mov    eax,DWORD PTR [ebp+0xc]
  428d95:	mov    eax,DWORD PTR [eax]
  428d97:	xor    eax,edi
  428d99:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428da0:	mov    ecx,DWORD PTR [ebp+0x8]
  428da3:	xor    ecx,edi
  428da5:	movzx  eax,al
  428da8:	add    ecx,ebx
  428daa:	cmp    eax,ecx
  428dac:	je     0x428eea
  428db2:	mov    eax,DWORD PTR [ebp-0x14]
  428db5:	mov    eax,DWORD PTR [eax]
  428db7:	xor    eax,edi
  428db9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428dc0:	mov    ecx,DWORD PTR [ebp+0x8]
  428dc3:	xor    ecx,edi
  428dc5:	movzx  eax,al
  428dc8:	add    ecx,ebx
  428dca:	cmp    eax,ecx
  428dcc:	je     0x428eea
  428dd2:	mov    eax,DWORD PTR [ebp-0x10]
  428dd5:	mov    eax,DWORD PTR [eax]
  428dd7:	xor    eax,edi
  428dd9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428de0:	mov    ecx,DWORD PTR [ebp-0xc]
  428de3:	mov    ecx,DWORD PTR [ecx]
  428de5:	xor    ecx,edi
  428de7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dee:	xor    al,cl
  428df0:	mov    ecx,DWORD PTR [ebp+0xc]
  428df3:	mov    ecx,DWORD PTR [ecx]
  428df5:	xor    ecx,edi
  428df7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dfe:	or     al,cl
  428e00:	mov    ecx,DWORD PTR [ebp-0xc]
  428e03:	mov    ecx,DWORD PTR [ecx]
  428e05:	xor    ecx,edi
  428e07:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e0e:	cmp    cl,al
  428e10:	jne    0x428eea
  428e16:	mov    eax,DWORD PTR [ebp+0xc]
  428e19:	mov    eax,DWORD PTR [eax]
  428e1b:	xor    eax,edi
  428e1d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e24:	mov    ecx,DWORD PTR [ebp-0x10]
  428e27:	mov    ecx,DWORD PTR [ecx]
  428e29:	xor    ecx,edi
  428e2b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e32:	xor    al,cl
  428e34:	mov    ecx,DWORD PTR [ebp-0x14]
  428e37:	mov    ecx,DWORD PTR [ecx]
  428e39:	xor    ecx,edi
  428e3b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e42:	or     al,cl
  428e44:	mov    ecx,DWORD PTR [ebp-0x10]
  428e47:	mov    ecx,DWORD PTR [ecx]
  428e49:	xor    ecx,edi
  428e4b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e52:	cmp    cl,al
  428e54:	jne    0x428eea
  428e5a:	mov    eax,DWORD PTR [ebp-0x14]
  428e5d:	mov    eax,DWORD PTR [eax]
  428e5f:	xor    eax,edi
  428e61:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e68:	mov    ecx,DWORD PTR [ebp+0xc]
  428e6b:	mov    ecx,DWORD PTR [ecx]
  428e6d:	xor    ecx,edi
  428e6f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e76:	xor    al,cl
  428e78:	mov    ecx,DWORD PTR [ebp-0xc]
  428e7b:	mov    ecx,DWORD PTR [ecx]
  428e7d:	xor    ecx,edi
  428e7f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e86:	or     al,cl
  428e88:	mov    ecx,DWORD PTR [ebp+0xc]
  428e8b:	mov    ecx,DWORD PTR [ecx]
  428e8d:	xor    ecx,edi
  428e8f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e96:	cmp    cl,al
  428e98:	jne    0x428eea
  428e9a:	mov    eax,DWORD PTR [ebp-0x14]
  428e9d:	mov    eax,DWORD PTR [eax]
  428e9f:	xor    eax,edi
  428ea1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ea8:	mov    ecx,DWORD PTR [ebp-0xc]
  428eab:	mov    ecx,DWORD PTR [ecx]
  428ead:	xor    ecx,edi
  428eaf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428eb6:	xor    al,cl
  428eb8:	mov    ecx,DWORD PTR [ebp-0x10]
  428ebb:	mov    ecx,DWORD PTR [ecx]
  428ebd:	xor    ecx,edi
  428ebf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ec6:	or     al,cl
  428ec8:	mov    ecx,DWORD PTR [ebp-0x14]
  428ecb:	mov    ecx,DWORD PTR [ecx]
  428ecd:	xor    ecx,edi
  428ecf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ed6:	cmp    cl,al
  428ed8:	jne    0x428eea
  428eda:	lea    eax,[ebp-0x4c]
  428edd:	push   eax
  428ede:	call   0x4289a5
  428ee3:	mov    ecx,DWORD PTR [ebp-0x44]
  428ee6:	cmp    eax,ecx
  428ee8:	je     0x428ef4
  428eea:	mov    eax,DWORD PTR [ebp+0x8]
  428eed:	xor    eax,edi
  428eef:	add    eax,ebx
  428ef1:	mov    DWORD PTR [ebp+0x18],eax
  428ef4:	mov    eax,DWORD PTR [ebp-0x8]
  428ef7:	xor    eax,edi
  428ef9:	lea    eax,[eax+esi*1+0x3272f5]
  428f00:	xor    eax,edi
  428f02:	mov    ecx,DWORD PTR [ebp+0x8]
  428f05:	mov    edx,DWORD PTR [ebp+0x18]
  428f08:	xor    ecx,edi
  428f0a:	add    ecx,ebx
  428f0c:	cmp    edx,ecx
  428f0e:	je     0x428d0b
  428f14:	mov    eax,DWORD PTR [ebp+0x8]
  428f17:	mov    ecx,DWORD PTR [ebp+0x18]
  428f1a:	xor    eax,edi
  428f1c:	add    eax,ebx
  428f1e:	cmp    ecx,eax
  428f20:	jne    0x428f33
  428f22:	mov    eax,DWORD PTR [ebp-0x8]
  428f25:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f28:	xor    eax,edi
  428f2a:	lea    eax,[eax+ecx*1+0x3272f5]
  428f31:	jmp    0x428faa
  428f33:	push   0x18
  428f35:	push   DWORD PTR [ebp-0x4]
  428f38:	lea    eax,[ebp-0x64]
  428f3b:	push   eax
  428f3c:	call   0x42821f
  428f41:	mov    eax,DWORD PTR [ebp+0x8]
  428f44:	mov    ecx,DWORD PTR [ebp-0x18]
  428f47:	xor    eax,edi
  428f49:	add    eax,ebx
  428f4b:	cmp    eax,ecx
  428f4d:	je     0x428f62
  428f4f:	mov    eax,DWORD PTR [ebp+0x8]
  428f52:	xor    eax,edi
  428f54:	add    eax,ebx
  428f56:	push   eax
  428f57:	push   0x18
  428f59:	lea    eax,[ebp-0x64]
  428f5c:	push   eax
  428f5d:	call   0x428805
  428f62:	mov    eax,DWORD PTR [ebp-0x4]
  428f65:	add    eax,0x18
  428f68:	mov    DWORD PTR [ebp+0x18],eax
  428f6b:	push   DWORD PTR [ebp-0x50]
  428f6e:	push   DWORD PTR [ebp+0x18]
  428f71:	mov    eax,DWORD PTR [ebp-0x54]
  428f74:	add    eax,DWORD PTR [ebp-0x20]
  428f77:	push   eax
  428f78:	call   0x42821f
  428f7d:	mov    eax,DWORD PTR [ebp+0x8]
  428f80:	mov    ecx,DWORD PTR [ebp-0x18]
  428f83:	xor    eax,edi
  428f85:	add    eax,ebx
  428f87:	cmp    eax,ecx
  428f89:	je     0x428f9c
  428f8b:	push   0x0
  428f8d:	push   DWORD PTR [ebp-0x50]
  428f90:	mov    eax,DWORD PTR [ebp-0x54]
  428f93:	add    eax,DWORD PTR [ebp-0x20]
  428f96:	push   eax
  428f97:	call   0x428805
  428f9c:	mov    eax,DWORD PTR [ebp-0x24]
  428f9f:	mov    ecx,DWORD PTR [ebp-0x50]
  428fa2:	add    DWORD PTR [eax],ecx
  428fa4:	mov    eax,DWORD PTR [ebp-0x50]
  428fa7:	add    eax,DWORD PTR [ebp+0x1c]
  428faa:	mov    DWORD PTR [ebp+0x1c],eax
  428fad:	mov    eax,DWORD PTR [ebp-0x8]
  428fb0:	mov    ecx,DWORD PTR [ebp+0x1c]
  428fb3:	xor    eax,edi
  428fb5:	add    eax,ebx
  428fb7:	imul   eax,ecx
  428fba:	mov    ecx,DWORD PTR [ebp+0x8]
  428fbd:	mov    edx,DWORD PTR [ebp-0x28]
  428fc0:	xor    ecx,edi
  428fc2:	lea    ecx,[ecx+edx*1+0x3272f5]
  428fc9:	cmp    eax,ecx
  428fcb:	jb     0x428c29
  428fd1:	mov    esi,DWORD PTR [ebp+0x14]
  428fd4:	mov    eax,DWORD PTR [ebp-0x20]
  428fd7:	mov    DWORD PTR [esi],eax
  428fd9:	jmp    0x429020
  428fdb:	mov    ecx,DWORD PTR [ebp+0x8]
  428fde:	mov    edx,DWORD PTR [ebp+0xc]
  428fe1:	xor    ecx,edi
  428fe3:	xor    edx,edi
  428fe5:	add    ecx,ebx
  428fe7:	add    edx,ebx
  428fe9:	cmp    ecx,edx
  428feb:	jne    0x428fff
  428fed:	mov    eax,ds:0x7f642ddc
  428ff2:	imul   eax,eax,0x9f15fccf
  428ff8:	mov    ds:0x7f642ddc,eax
  428ffd:	jmp    0x429020
  428fff:	mov    ecx,DWORD PTR [ebp+0x8]
  429002:	xor    ecx,edi
  429004:	add    ecx,ebx
  429006:	cmp    eax,ecx
  429008:	je     0x429016
  42900a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  429014:	jmp    0x429020
  429016:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  429020:	pop    edi
  429021:	pop    esi
  429022:	pop    ebx
  429023:	leave  
  429024:	ret    0x18
  429027:	push   ebp
  429028:	mov    ebp,esp
  42902a:	and    esp,0xfffffff8
  42902d:	mov    eax,DWORD PTR [ebp+0x20]
  429030:	sub    esp,0x14
  429033:	push   ebx
  429034:	mov    ebx,DWORD PTR [ebp+0x14]
  429037:	push   esi
  429038:	push   edi
  429039:	cmp    eax,0xf89c85a5
  42903e:	jne    0x42904a
  429040:	push   0xf89c85a2
  429045:	jmp    0x42917c
  42904a:	mov    eax,DWORD PTR [ebp+0x20]
  42904d:	cmp    eax,0xf89c85a2
  429052:	jne    0x42905e
  429054:	push   0xf89c85a3
  429059:	jmp    0x42917c
  42905e:	mov    eax,DWORD PTR [ebp+0x20]
  429061:	cmp    eax,0xf89c85a3
  429066:	jne    0x429072
  429068:	push   0xf89c85a0
  42906d:	jmp    0x42917c
  429072:	mov    eax,DWORD PTR [ebp+0x20]
  429075:	cmp    eax,0xf89c85a0
  42907a:	jne    0x429086
  42907c:	push   0xf89c85a1
  429081:	jmp    0x42917c
  429086:	mov    ecx,DWORD PTR [ebp+0x20]
  429089:	mov    eax,0xf89c85bc
  42908e:	cmp    ecx,eax
  429090:	jne    0x42914c
  429096:	mov    eax,DWORD PTR [ebp+0x10]
  429099:	mov    DWORD PTR [esp+0xc],eax
  42909d:	mov    eax,DWORD PTR [ebp+0x18]
  4290a0:	mov    DWORD PTR [esp+0x14],eax
  4290a4:	mov    eax,DWORD PTR [ebp+0xc]
  4290a7:	mov    DWORD PTR [esp+0x18],eax
  4290ab:	mov    eax,DWORD PTR [ebp+0x8]
  4290ae:	mov    DWORD PTR [esp+0x10],eax
  4290b2:	mov    eax,DWORD PTR [esp+0x10]
  4290b6:	mov    ecx,DWORD PTR [esp+0x14]
  4290ba:	mov    edi,0x75108ae
  4290bf:	xor    eax,edi
  4290c1:	mov    esi,0x3272f5
  4290c6:	add    eax,esi
  4290c8:	mov    DWORD PTR [ecx],eax
  4290ca:	mov    eax,DWORD PTR [esp+0xc]
  4290ce:	mov    eax,DWORD PTR [eax+0x194]
  4290d4:	mov    ecx,DWORD PTR [eax]
  4290d6:	mov    eax,DWORD PTR [esp+0xc]
  4290da:	mov    eax,DWORD PTR [eax+0x194]
  4290e0:	mov    eax,DWORD PTR [eax]
  4290e2:	add    eax,DWORD PTR [ecx+0x3c]
  4290e5:	mov    ecx,DWORD PTR [esp+0xc]
  4290e9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4290ef:	mov    ecx,DWORD PTR [ecx+0x14]
  4290f2:	push   0x4
  4290f4:	push   0x3000
  4290f9:	push   DWORD PTR [eax+0x50]
  4290fc:	push   0x0
  4290fe:	call   ecx
  429100:	mov    DWORD PTR [ebx],eax
  429102:	mov    eax,DWORD PTR [esp+0x10]
  429106:	push   DWORD PTR [esp+0xc]
  42910a:	xor    eax,edi
  42910c:	add    eax,esi
  42910e:	mov    DWORD PTR [esp+0x20],eax
  429112:	lea    eax,[esp+0x20]
  429116:	push   eax
  429117:	push   ebx
  429118:	push   DWORD PTR [esp+0x20]
  42911c:	push   DWORD PTR [esp+0x28]
  429120:	push   DWORD PTR [esp+0x24]
  429124:	call   0x428ae9
  429129:	mov    eax,DWORD PTR [esp+0x10]
  42912d:	mov    ecx,DWORD PTR [ebx]
  42912f:	xor    eax,edi
  429131:	add    eax,esi
  429133:	cmp    ecx,eax
  429135:	je     0x429193
  429137:	mov    eax,DWORD PTR [esp+0x18]
  42913b:	mov    ecx,DWORD PTR [esp+0x14]
  42913f:	xor    eax,edi
  429141:	add    eax,esi
  429143:	imul   eax,DWORD PTR [esp+0x1c]
  429148:	mov    DWORD PTR [ecx],eax
  42914a:	jmp    0x429193
  42914c:	mov    ecx,DWORD PTR [ebp+0x20]
  42914f:	cmp    ecx,0xf89c85a1
  429155:	jne    0x42915e
  429157:	push   0xf89c85be
  42915c:	jmp    0x42917c
  42915e:	mov    ecx,DWORD PTR [ebp+0x20]
  429161:	cmp    ecx,0xf89c85be
  429167:	jne    0x429170
  429169:	push   0xf89c85bf
  42916e:	jmp    0x42917c
  429170:	mov    ecx,DWORD PTR [ebp+0x20]
  429173:	cmp    ecx,0xf89c85bf
  429179:	jne    0x429193
  42917b:	push   eax
  42917c:	push   DWORD PTR [ebp+0x1c]
  42917f:	push   DWORD PTR [ebp+0x18]
  429182:	push   ebx
  429183:	push   DWORD PTR [ebp+0x10]
  429186:	push   DWORD PTR [ebp+0xc]
  429189:	push   DWORD PTR [ebp+0x8]
  42918c:	call   0x429027
  429191:	mov    DWORD PTR [ebx],eax
  429193:	mov    eax,DWORD PTR [ebx]
  429195:	pop    edi
  429196:	pop    esi
  429197:	pop    ebx
  429198:	mov    esp,ebp
  42919a:	pop    ebp
  42919b:	ret    0x1c
  42919e:	push   ebp
  42919f:	mov    ebp,esp
  4291a1:	sub    esp,0xc
  4291a4:	mov    eax,0xf89c85a5
  4291a9:	mov    DWORD PTR [ebp-0x8],eax
  4291ac:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  4291b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4291b6:	xor    ecx,0x75108ae
  4291bc:	add    ecx,0x3272f5
  4291c2:	mov    DWORD PTR [ebp-0x4],ecx
  4291c5:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c8:	push   eax
  4291c9:	mov    DWORD PTR [ebp+0xc],ecx
  4291cc:	push   DWORD PTR [ebp+0xc]
  4291cf:	lea    eax,[ebp-0x4]
  4291d2:	push   DWORD PTR [ebp+0x8]
  4291d5:	push   eax
  4291d6:	push   DWORD PTR [ebp+0xc]
  4291d9:	push   DWORD PTR [ebp-0xc]
  4291dc:	push   DWORD PTR [ebp-0x8]
  4291df:	call   0x429027
  4291e4:	mov    DWORD PTR [ebp-0x4],eax
  4291e7:	mov    eax,DWORD PTR [ebp-0x4]
  4291ea:	leave  
  4291eb:	ret    0x8
