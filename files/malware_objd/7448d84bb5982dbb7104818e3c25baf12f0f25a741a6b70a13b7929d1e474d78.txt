
7448d84bb5982dbb7104818e3c25baf12f0f25a741a6b70a13b7929d1e474d78.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [esi+0x7c50ee3b],esp
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax+0x32],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	add    bl,bh
  402f43:	mov    fs,ebp
  402f45:	inc    esp
  402f46:	mov    bl,0xb9
  402f48:	and    al,ch
  402f4a:	cmp    DWORD PTR [edi+0x19],ebx
  402f4d:	mov    edi,0x49d1c68b
  402f52:	pusha  
  402f53:	nop
  402f54:	lods   eax,DWORD PTR ds:[esi]
  402f55:	(bad)  
  402f56:	mov    ch,0xf0
  402f58:	les    eax,FWORD PTR [esi-0x49b313bb]
  402f5e:	dec    ah
  402f60:	inc    edi
  402f61:	jns    0x402f19
  402f63:	dec    esp
  402f64:	pop    edi
  402f65:	pop    esp
  402f66:	xchg   ebp,eax
  402f67:	arpl   WORD PTR [ebp-0x7f82fde6],di
  402f6d:	loopne 0x402f9b
  402f6f:	jmp    0x823742bf
  402f74:	cli    
  402f75:	xor    bh,bh
  402f77:	push   eax
  402f78:	jg     0x402f16
  402f7a:	ins    BYTE PTR es:[edi],dx
  402f7b:	leave  
  402f7c:	mov    BYTE PTR [ebp-0x4566d1f5],0x24
  402f83:	pushf  
  402f84:	sub    DWORD PTR [ebx-0x3c],0xb9d6b420
  402f8b:	nop
  402f8c:	sub    edx,esp
  402f8e:	int3   
  402f8f:	dec    edi
  402f90:	pop    esp
  402f91:	push   0x2b
  402f93:	rcr    ch,1
  402f95:	ss mov ebp,0x8f8929e3
  402f9b:	xbegin 0x7e18a268
  402fa1:	(bad)  
  402fa2:	stc    
  402fa3:	mov    bl,BYTE PTR [eax+0x6fa8a36]
  402fa9:	(bad)  
  402faa:	pop    ss
  402fab:	mov    ebx,0x287c7cde
  402fb0:	stc    
  402fb1:	add    eax,0x4cfbcb5
  402fb6:	push   cs
  402fb7:	cli    
  402fb8:	rcl    BYTE PTR [ebx+0x6b],1
  402fbb:	cmp    eax,0xa631928f
  402fc0:	dec    edx
  402fc1:	ficomp WORD PTR [eax-0x2dfea95e]
  402fc7:	mov    ch,BYTE PTR [eax+0xd1daf6f]
  402fcd:	outs   dx,DWORD PTR ds:[esi]
  402fce:	mov    cl,0xae
  402fd0:	sub    al,0x69
  402fd2:	loopne 0x403018
  402fd4:	cwde   
  402fd5:	sub    eax,0x73655e50
  402fda:	nop
  402fdb:	xchg   DWORD PTR [ebp+0x64b4056b],esi
  402fe1:	cmp    edx,esi
  402fe3:	or     dh,BYTE PTR [edx-0x3f]
  402fe6:	sahf   
  402fe7:	std    
  402fe8:	(bad)
  402feb:	scas   al,BYTE PTR es:[edi]
  402fec:	mov    ebp,0x401eac07
  402ff1:	pop    esi
  402ff2:	xchg   ebx,eax
  402ff3:	and    eax,0x9f65cd3e
  402ff8:	mov    ch,0x49
  402ffa:	xchg   ebx,eax
  402ffb:	pop    ebp
  402ffc:	test   al,0xfa
  402ffe:	in     eax,0x4b
  403000:	sub    bl,al
  403002:	jmp    0x402fdc
  403004:	push   cs
  403005:	mov    dl,0xc0
  403007:	fbld   TBYTE PTR [ebx+0x7a09ec64]
  40300d:	call   DWORD PTR [ecx+0x79]
  403010:	mov    al,0xa
  403012:	enter  0xab96,0xb1
  403016:	mov    al,ds:0xed457c69
  40301b:	jno    0x40302f
  40301d:	xchg   ecx,eax
  40301e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40301f:	call   0x1397:0xa462192c
  403026:	scas   eax,DWORD PTR es:[edi]
  403027:	pop    es
  403028:	sbb    dh,BYTE PTR [eax-0x5627a615]
  40302e:	jge    0x4030a9
  403030:	inc    edx
  403031:	nop
  403032:	es aas 
  403034:	data16 jne 0x4030ab
  403037:	xor    bh,BYTE PTR [edx+esi*1-0x569d2242]
  40303e:	jecxz  0x4030a4
  403040:	retf   
  403041:	fsincos 
  403043:	push   edx
  403044:	test   BYTE PTR [esi],0xe0
  403047:	test   DWORD PTR [edi+0x2e68ef81],ebx
  40304d:	xor    edx,DWORD PTR [edx]
  40304f:	pop    ebx
  403050:	ret    0x7320
  403053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403054:	pop    ds
  403055:	xchg   ebp,eax
  403056:	jmp    0xe56edaca
  40305b:	mov    ah,0xdd
  40305d:	scas   eax,DWORD PTR es:[edi]
  40305e:	in     eax,dx
  40305f:	fs into 
  403061:	cmp    eax,0xc86b5ebe
  403066:	icebp  
  403067:	push   esi
  403068:	jns    0x403014
  40306a:	push   ebp
  40306b:	aam    0xb6
  40306d:	cwde   
  40306e:	test   DWORD PTR [ebp+0x682fa9b],0x1bf079b9
  403078:	xchg   esi,eax
  403079:	(bad)  
  40307a:	loopne 0x4030e2
  40307c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40307d:	adc    ah,0xa1
  403080:	ss mov eax,0x336cd442
  403086:	adc    BYTE PTR [edx],0x4b
  403089:	popf   
  40308a:	push   es
  40308b:	mov    edx,0xaeb40b9f
  403090:	std    
  403091:	aam    0xf0
  403093:	fstp   st(1)
  403095:	cmc    
  403096:	xchg   esp,eax
  403097:	jne    0x403020
  403099:	xchg   ebx,eax
  40309a:	xor    ch,BYTE PTR [ecx+ebp*1-0x2dcca184]
  4030a1:	mov    ch,0xc6
  4030a3:	or     al,0xb2
  4030a5:	push   ebx
  4030a6:	pop    esp
  4030a7:	sub    bl,bh
  4030a9:	fsubr  st,st(7)
  4030ab:	xchg   BYTE PTR [ecx+0x3efbbb1c],ch
  4030b1:	cmp    al,0xa5
  4030b4:	dec    eax
  4030b5:	or     ah,ah
  4030b7:	push   cs
  4030b8:	dec    esp
  4030b9:	jp     0x4030b6
  4030bb:	add    ebx,DWORD PTR [ecx-0x38]
  4030be:	sbb    eax,0xc70d123b
  4030c3:	push   es
  4030c4:	sub    eax,DWORD PTR [ebp-0x79]
  4030c7:	fadd   QWORD PTR [esi+0x2861b3c0]
  4030cd:	push   ecx
  4030ce:	inc    edi
  4030cf:	mov    WORD PTR [eax+0x16],es
  4030d2:	(bad)  
  4030d3:	loop   0x4030b6
  4030d5:	mov    ds:0xfdae39d0,al
  4030da:	addr16 fucom st(0)
  4030dd:	fld    st(1)
  4030df:	stos   DWORD PTR es:[edi],eax
  4030e0:	loope  0x403156
  4030e2:	(bad)  
  4030e3:	ffreep st(6)
  4030e5:	in     al,0x91
  4030e7:	retf   0xf2c
  4030ea:	push   esp
  4030eb:	mov    ds:0xd28a9fce,al
  4030f0:	std    
  4030f1:	dec    eax
  4030f2:	int    0x37
  4030f4:	cs jb  0x4030cd
  4030f7:	xor    eax,0xf8836764
  4030fc:	push   ss
  4030fd:	adc    dh,BYTE PTR [ecx]
  4030ff:	adc    ebx,DWORD PTR [eax+0x40]
  403102:	rcr    BYTE PTR ds:0x18193ba4,cl
  403108:	ret    0xb124
  40310b:	sar    edi,0x78
  40310e:	and    DWORD PTR [edi+ebx*4],edx
  403111:	mov    WORD PTR [esi+0x7a0f3d68],es
  403117:	dec    esi
  403118:	fldcw  WORD PTR [ebx]
  40311a:	cmp    DWORD PTR [ebx+0x6824fc84],ebp
  403120:	into   
  403121:	inc    ecx
  403122:	daa    
  403123:	fs ins BYTE PTR es:[edi],dx
  403125:	sbb    al,0xf0
  403127:	or     dh,al
  403129:	int3   
  40312a:	retf   0x2c59
  40312d:	mov    ebx,0x702ca374
  403132:	xchg   edi,eax
  403133:	pop    es
  403134:	mov    eax,ds:0x22939691
  403139:	int    0x79
  40313b:	daa    
  40313c:	repz add eax,0xf8a5a3ba
  403142:	in     al,dx
  403143:	test   DWORD PTR [eax],edx
  403145:	test   al,0x44
  403147:	inc    ebx
  403148:	jne    0x4031ba
  40314a:	mov    bl,0xef
  40314c:	lods   al,BYTE PTR ds:[esi]
  40314d:	jp     0x403123
  40314f:	mov    eax,0x1332b740
  403154:	int3   
  403155:	inc    edi
  403156:	loopne 0x403182
  403158:	fdivr  QWORD PTR [ebx+edx*8-0x52797501]
  40315f:	push   0x65
  403161:	inc    esi
  403162:	dec    edi
  403163:	jge    0x403153
  403165:	sbb    ecx,DWORD PTR [eax]
  403167:	(bad)  [ebx-0x6ac64f24]
  40316d:	test   BYTE PTR [edx+0x5ccea4ce],bl
  403173:	and    ebx,DWORD PTR [edi]
  403175:	jb     0x4031ec
  403177:	cs lahf 
  403179:	mov    dh,0x2
  40317b:	dec    esi
  40317c:	cmc    
  40317d:	mov    edx,0x82518680
  403182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403183:	and    al,0xd5
  403185:	jge    0x4031e5
  403187:	pop    ds
  403188:	lds    ebp,FWORD PTR [ecx]
  40318a:	les    edx,FWORD PTR [edi-0x52]
  40318d:	dec    eax
  40318e:	pop    edi
  40318f:	adc    al,0x83
  403191:	int3   
  403192:	clc    
  403193:	mov    edi,0xc0f42a2d
  403198:	push   ebx
  403199:	gs popf 
  40319b:	loop   0x403148
  40319d:	out    0x25,eax
  40319f:	shl    BYTE PTR [esp+edx*8-0x9ddf3e0],0x23
  4031a7:	mov    al,ds:0x58814547
  4031ac:	inc    ecx
  4031ad:	xchg   ebp,eax
  4031ae:	sahf   
  4031af:	fdivr  st,st(2)
  4031b1:	cdq    
  4031b2:	aam    0x42
  4031b4:	inc    ecx
  4031b5:	pop    es
  4031b6:	inc    edi
  4031b7:	sub    esi,esi
  4031b9:	popa   
  4031ba:	and    al,0x3e
  4031bc:	mov    ch,0x6
  4031be:	lea    esp,[edx]
  4031c0:	jp     0x40320c
  4031c2:	sbb    al,0x84
  4031c4:	jle    0x403180
  4031c6:	or     al,ah
  4031c8:	sti    
  4031c9:	imul   edx,edi,0x6a
  4031cc:	(bad)  
  4031cd:	mov    ch,0x8c
  4031cf:	adc    edi,DWORD PTR [ebp+0x5f]
  4031d2:	lahf   
  4031d3:	jg     0x40320c
  4031d5:	adc    BYTE PTR [ebx-0x6fd431b8],cl
  4031db:	inc    ebx
  4031dc:	push   cs
  4031dd:	jmp    0x134f:0x681342ad
  4031e4:	mov    esi,0x19c78de9
  4031e9:	push   ecx
  4031ea:	sub    DWORD PTR [ebx-0x74125bb9],esp
  4031f0:	pop    ebx
  4031f1:	sub    DWORD PTR [edi+0x5b],esp
  4031f4:	or     eax,ecx
  4031f6:	dec    ecx
  4031f7:	sbb    al,0xda
  4031f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031fa:	stc    
  4031fb:	push   0xffffffe2
  4031fd:	out    dx,eax
  4031fe:	popa   
  4031ff:	fiadd  DWORD PTR [ecx]
  403201:	push   0x60
  403203:	jbe    0x403247
  403205:	jne    0x403219
  403207:	jmp    0xb73:0xbdeb4332
  40320e:	xchg   edx,eax
  40320f:	add    al,0x31
  403211:	mov    dh,0xc7
  403213:	adc    BYTE PTR [esi+eiz*1],cl
  403216:	xchg   DWORD PTR [ecx],esp
  403218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40321a:	xchg   BYTE PTR ds:0xf9afcedf,bl
  403220:	mov    ds:0x967368f6,al
  403225:	and    eax,0xe7634fd9
  40322a:	push   0x4e
  40322c:	pushf  
  40322d:	test   DWORD PTR [ebx+0x72],ebx
  403230:	push   cs
  403231:	cli    
  403232:	outs   dx,BYTE PTR ds:[esi]
  403233:	xchg   DWORD PTR [esi],edi
  403235:	mov    bl,0x4e
  403237:	ins    BYTE PTR es:[edi],dx
  403238:	pop    edi
  403239:	pop    ebp
  40323a:	call   0x7c9b49f3
  40323f:	mov    ecx,0xafd1892e
  403244:	pop    ebx
  403245:	outs   dx,DWORD PTR ds:[esi]
  403246:	push   0xffffffe8
  403248:	test   eax,0x5b38adb6
  40324d:	adc    DWORD PTR [ebx-0x59],eax
  403250:	int    0xb8
  403252:	rcr    BYTE PTR [ecx-0x20],cl
  403255:	jp     0x4031ef
  403257:	mov    ecx,0x2cab3218
  40325c:	adc    BYTE PTR [eax],ch
  40325e:	mov    esp,0xdaea2d5
  403263:	xlat   BYTE PTR ds:[ebx]
  403264:	lahf   
  403265:	adc    eax,0x59deeb73
  40326a:	jmp    0x403250
  40326c:	mov    esi,0xe7c047dd
  403271:	push   0x58229b24
  403276:	(bad)  
  403277:	outs   dx,DWORD PTR ds:[esi]
  403278:	push   ebx
  403279:	sbb    al,0x5e
  40327b:	cmp    ecx,DWORD PTR [edi-0x73cc13a2]
  403281:	fwait
  403282:	sbb    bl,BYTE PTR [edx-0x2628aff9]
  403288:	aad    0x16
  40328a:	push   es
  40328b:	nop
  40328c:	xchg   esp,eax
  40328d:	nop
  40328e:	adc    BYTE PTR [ecx],ah
  403290:	data16 mov al,0x7b
  403293:	add    ah,BYTE PTR [edx-0xdd488d6]
  403299:	push   esp
  40329a:	(bad)  
  40329b:	bound  ebx,QWORD PTR [esi+0x60]
  40329e:	ins    BYTE PTR es:[edi],dx
  40329f:	add    al,0xec
  4032a1:	js     0x403322
  4032a3:	mov    dl,bl
  4032a5:	dec    ebx
  4032a6:	out    0x7d,eax
  4032a8:	ds add ebx,esi
  4032ab:	rcl    ebx,1
  4032ad:	sbb    DWORD PTR [edi-0x78],edi
  4032b0:	aam    0x18
  4032b2:	xlat   BYTE PTR ds:[ebx]
  4032b3:	sbb    ebx,DWORD PTR [ebx+eax*1+0x21]
  4032b7:	test   DWORD PTR [ecx],0x69ea519b
  4032bd:	clc    
  4032be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032bf:	cld    
  4032c0:	out    dx,eax
  4032c1:	rcr    BYTE PTR [ecx+0x49fe6444],cl
  4032c7:	pop    ecx
  4032c8:	sub    ebx,0x30
  4032cb:	(bad)  
  4032cc:	stc    
  4032cd:	push   edx
  4032ce:	jnp    0x403341
  4032d0:	mov    ecx,0x7074aab1
  4032d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032d6:	out    dx,eax
  4032d7:	fwait
  4032d8:	jbe    0x403283
  4032da:	mov    ah,0xa1
  4032dc:	inc    eax
  4032dd:	xor    al,0xb1
  4032df:	push   edi
  4032e0:	dec    edi
  4032e1:	jmp    0x40334f
  4032e3:	(bad)  
  4032e4:	lock ret 0xf983
  4032e8:	loope  0x4032a1
  4032ea:	nop
  4032eb:	sub    DWORD PTR [esi+0x43],0xffffff9c
  4032ef:	(bad)  [esi+eax*8]
  4032f2:	mov    eax,0xb8a5590a
  4032f7:	data16 cs fwait
  4032fa:	jle    0x403292
  4032fc:	sbb    bl,ah
  4032fe:	cmp    DWORD PTR [ecx],ecx
  403300:	aad    0xfe
  403302:	pop    ebp
  403303:	ja     0x4032dd
  403305:	mov    WORD PTR [esi],es
  403307:	mov    ebx,ebp
  403309:	mov    ?,esp
  40330b:	fiadd  WORD PTR [eax+0xc1034e9]
  403311:	in     al,0x5d
  403313:	mov    esi,0x9d66f3f8
  403318:	jnp    0x403393
  40331a:	ror    DWORD PTR [ebx+0x5],1
  40331d:	daa    
  40331e:	in     eax,dx
  40331f:	jmp    0x7ef51cd5
  403324:	or     al,0x23
  403326:	pop    edi
  403327:	jno    0x403361
  403329:	inc    edi
  40332a:	fisttp QWORD PTR [esi+0x4c510b12]
  403330:	cmp    eax,DWORD PTR [ecx+0x4e]
  403333:	xor    BYTE PTR [edi+0x5b],0x9e
  403337:	mov    esi,0xb5ebbdf3
  40333c:	mov    edi,0xf9e3dc50
  403341:	dec    ebx
  403342:	dec    edi
  403343:	rcl    DWORD PTR [ecx+0x180573bb],0xf6
  40334a:	arpl   WORD PTR [edx-0x3d],bx
  40334d:	cmp    ebp,DWORD PTR [esi]
  40334f:	sub    dh,0xe7
  403352:	dec    ebx
  403353:	ins    BYTE PTR es:[edi],dx
  403354:	jmp    0x1823e708
  403359:	aaa    
  40335a:	pop    edi
  40335b:	pop    edi
  40335c:	push   0x4bbac0c3
  403361:	adc    bh,BYTE PTR [edx-0x40a30bed]
  403367:	shr    DWORD PTR [edi-0x26eb3159],0xd8
  40336e:	arpl   WORD PTR [edi+0x56e00889],cx
  403374:	dec    esi
  403375:	jnp    0x403386
  403377:	and    al,0xac
  403379:	loopne 0x4033ad
  40337b:	inc    ebp
  40337c:	cmc    
  40337d:	cmc    
  40337e:	call   0xfebe8a58
  403383:	aam    0xcb
  403385:	cld    
  403386:	mov    ch,BYTE PTR [ecx+0x1a]
  403389:	push   0xe4605da4
  40338e:	je     0x403343
  403390:	mov    edi,0x2661147c
  403395:	leave  
  403396:	or     DWORD PTR [ecx],eax
  403398:	sbb    ecx,esp
  40339a:	or     esi,0xfffffff1
  40339d:	fild   DWORD PTR [esi]
  40339f:	in     al,0xa3
  4033a1:	lds    ebx,FWORD PTR [ebp-0x4d]
  4033a4:	mov    ebx,0x32822489
  4033a9:	cmc    
  4033aa:	cdq    
  4033ab:	stc    
  4033ac:	ins    DWORD PTR es:[edi],dx
  4033ad:	fwait
  4033ae:	ret    
  4033af:	jo     0x40333e
  4033b1:	imul   eax,DWORD PTR [edx-0x739f001e],0x2c
  4033b8:	aad    0xb9
  4033ba:	inc    esi
  4033bb:	dec    BYTE PTR ss:0x3681fc8a
  4033c2:	das    
  4033c3:	lock mov al,ds:0xe917bf57
  4033c9:	call   0x18f1:0x78ab1e38
  4033d0:	inc    ebx
  4033d1:	cmp    BYTE PTR [ebp+0x50],dh
  4033d4:	nop
  4033d5:	(bad)  [ebp-0x7e]
  4033d8:	gs mov edi,0xc8956c1f
  4033de:	scas   eax,DWORD PTR es:[edi]
  4033df:	sahf   
  4033e0:	jno    0x403391
  4033e2:	int    0x59
  4033e4:	mov    al,ds:0x5fd9c18b
  4033e9:	mov    al,ds:0x68a9ff0a
  4033ee:	pop    ss
  4033ef:	shl    BYTE PTR [ebx+edi*8-0x1f],1
  4033f3:	cmp    bl,ch
  4033f5:	xchg   edi,eax
  4033f6:	and    ebx,DWORD PTR [ecx+ebx*1+0x76]
  4033fa:	cmp    dh,BYTE PTR [edx-0x4d]
  4033fd:	daa    
  4033fe:	inc    esi
  4033ff:	mov    eax,ds:0x3db62680
  403404:	bound  edi,QWORD PTR [ecx+ebx*2]
  403407:	jecxz  0x403407
  403409:	jmp    0x498f:0x237cb893
  403410:	rcl    DWORD PTR [ebp-0x22],0x19
  403414:	sbb    DWORD PTR [edi+0x433254f2],esi
  40341a:	test   ecx,ebx
  40341c:	jle    0x403480
  40341e:	xchg   esi,eax
  40341f:	cmp    cl,BYTE PTR [edx+0x4b]
  403422:	xchg   DWORD PTR [ebx+eax*2+0x1e389a43],ecx
  403429:	(bad)  
  40342a:	(bad)  
  40342c:	icebp  
  40342d:	pop    ebx
  40342e:	ins    BYTE PTR es:[edi],dx
  40342f:	out    dx,eax
  403430:	out    0x5e,eax
  403432:	pop    ecx
  403433:	mov    edx,0xad5e8b8d
  403438:	inc    edx
  403439:	xchg   ecx,eax
  40343a:	pop    esp
  40343b:	leave  
  40343c:	outs   dx,BYTE PTR ds:[esi]
  40343d:	inc    ebx
  40343e:	loope  0x4034bb
  403440:	cdq    
  403441:	pop    ecx
  403442:	and    al,0xc7
  403444:	dec    eax
  403445:	xor    edi,DWORD PTR [esi+0x70a8ca49]
  40344b:	push   es
  40344c:	adc    esi,esi
  40344e:	add    al,0x42
  403450:	stos   DWORD PTR es:[edi],eax
  403451:	xchg   ebx,eax
  403452:	jg     0x403468
  403454:	and    DWORD PTR [edx-0x16],0xffffffb4
  403458:	mov    bl,0xd0
  40345a:	stc    
  40345b:	pushf  
  40345c:	dec    esi
  40345d:	push   ecx
  40345e:	fwait
  40345f:	nop
  403460:	jg     0x4034a6
  403462:	jo     0x40346e
  403464:	adc    DWORD PTR [ecx+0x53],esi
  403467:	les    esi,FWORD PTR [esi+0x75]
  40346a:	ror    BYTE PTR [ebp+0x3e],1
  40346d:	inc    eax
  40346e:	push   cs
  40346f:	or     DWORD PTR [ebp-0x2c],esi
  403472:	add    BYTE PTR [esi-0x5762b155],0xc2
  403479:	push   ecx
  40347a:	add    al,0x4b
  40347c:	or     al,0x6d
  40347e:	cdq    
  40347f:	data16 jbe 0x4034da
  403482:	pusha  
  403483:	pop    ebp
  403484:	pop    es
  403485:	shl    ch,0xbf
  403488:	adc    al,0xf1
  40348a:	fwait
  40348b:	or     BYTE PTR [edx-0x6e],bh
  40348e:	jno    0x403450
  403490:	mov    bl,0xf3
  403492:	pop    edx
  403493:	addr16 dec esi
  403495:	cmc    
  403496:	inc    edi
  403497:	xor    DWORD PTR [eax],edx
  403499:	test   BYTE PTR [ebp-0xd],ch
  40349c:	div    DWORD PTR [edx+0x5a4ce870]
  4034a2:	mov    ebx,0x9811b72
  4034a7:	js     0x403495
  4034a9:	(bad)  
  4034aa:	push   ebx
  4034ab:	pushf  
  4034ac:	add    DWORD PTR [edi-0x2c3b540e],esp
  4034b2:	or     ecx,esi
  4034b4:	out    dx,al
  4034b5:	pop    esp
  4034b6:	ss ja  0x403522
  4034b9:	movd   mm4,DWORD PTR [ebx+0x6fbc2cb0]
  4034c0:	push   ebp
  4034c1:	into   
  4034c2:	mov    edi,0x4c2e2296
  4034c7:	and    al,0xc
  4034c9:	lods   al,BYTE PTR ds:[esi]
  4034ca:	push   0x2c5a8d5d
  4034cf:	sub    ebp,DWORD PTR [edx+esi*1+0x4e]
  4034d3:	nop
  4034d4:	pop    edi
  4034d5:	cmp    ch,BYTE PTR [edi+0x47]
  4034d8:	stc    
  4034d9:	test   BYTE PTR [ebp+0x1280d5e2],al
  4034df:	mov    al,ds:0x487d6655
  4034e4:	inc    edx
  4034e5:	mov    dh,0x10
  4034e7:	inc    eax
  4034e8:	sbb    DWORD PTR [edi+0x5f],edi
  4034eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ec:	js     0x403537
  4034ee:	les    edi,FWORD PTR [ebx-0x39]
  4034f1:	iret   
  4034f2:	bound  eax,QWORD PTR [ecx+0x600df86c]
  4034f8:	dec    ecx
  4034f9:	inc    esp
  4034fa:	ins    BYTE PTR es:[edi],dx
  4034fb:	dec    esp
  4034fc:	loopne 0x4034e4
  4034fe:	std    
  4034ff:	sbb    eax,0xade94afd
  403504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403505:	iret   
  403506:	inc    eax
  403507:	sti    
  403508:	pop    ecx
  403509:	inc    esi
  40350a:	scas   eax,DWORD PTR es:[edi]
  40350b:	rcr    DWORD PTR [esi+0x11],cl
  40350e:	std    
  40350f:	sbb    eax,0x5f657346
  403514:	jecxz  0x403511
  403516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403517:	inc    esi
  403518:	icebp  
  403519:	dec    esp
  40351a:	xchg   esi,eax
  40351b:	cmp    esp,DWORD PTR [esi-0x4d]
  40351e:	mov    esp,0x8b2d4285
  403523:	fstp   QWORD PTR [eax-0x79]
  403526:	cs push es
  403528:	dec    ecx
  403529:	repnz rcr edx,1
  40352c:	mov    eax,0x2fc4f5c5
  403531:	ins    DWORD PTR es:[edi],dx
  403532:	xor    ah,BYTE PTR [edx-0x66]
  403535:	pop    ss
  403536:	dec    esi
  403537:	js     0x4035ad
  403539:	gs sub eax,0x1731d2fd
  40353f:	addr16 push ebx
  403541:	mov    esp,0x5aa7442
  403546:	add    eax,0x69a3be5d
  40354b:	sbb    DWORD PTR [edx-0x5e],edi
  40354e:	jo     0x40350e
  403550:	ins    BYTE PTR es:[edi],dx
  403551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403552:	popa   
  403553:	es jle 0x403532
  403556:	add    esi,edx
  403558:	add    eax,DWORD PTR [edi-0x1dc393d4]
  40355e:	and    al,0x62
  403560:	mov    dh,0x2d
  403562:	push   edi
  403563:	xchg   ebx,eax
  403564:	push   ecx
  403565:	lfs    esp,FWORD PTR [edx+0x2a]
  403569:	test   al,dl
  40356b:	in     al,dx
  40356c:	sahf   
  40356d:	add    eax,edi
  40356f:	fcom   QWORD PTR [esi+0x3cacf527]
  403575:	inc    ebp
  403576:	inc    ebp
  403577:	push   ecx
  403578:	cli    
  403579:	jmp    0xf53f250e
  40357e:	or     BYTE PTR [ecx+edi*1],bl
  403581:	xchg   ebp,eax
  403582:	dec    ebx
  403583:	arpl   WORD PTR [esi+0x34],bp
  403586:	sub    DWORD PTR [edx],edx
  403588:	pop    ebp
  403589:	push   eax
  40358a:	pop    ds
  40358b:	nop
  40358c:	(bad)  
  40358d:	xchg   esi,eax
  40358e:	dec    eax
  40358f:	sbb    eax,esp
  403591:	xchg   edi,eax
  403592:	test   ecx,edi
  403594:	sbb    eax,0x477dda95
  403599:	mov    esp,0x249f7173
  40359e:	je     0x40359c
  4035a0:	fld    TBYTE PTR [ebp+0x1e]
  4035a3:	fdiv   DWORD PTR [edx]
  4035a5:	sti    
  4035a6:	mov    cl,0xe
  4035a8:	mov    BYTE PTR ds:[ebx+0x371c30ff],ah
  4035af:	inc    esi
  4035b0:	mov    edi,0xf5c6539d
  4035b5:	in     eax,dx
  4035b6:	xor    BYTE PTR [eax+0x52],bh
  4035b9:	dec    eax
  4035ba:	pop    edx
  4035bb:	mov    ss,ecx
  4035bd:	repnz xor ebx,eax
  4035c0:	(bad)  
  4035c2:	push   ebp
  4035c3:	push   edx
  4035c4:	xor    al,0xb3
  4035c6:	push   eax
  4035c7:	dec    ecx
  4035c8:	xchg   edi,eax
  4035c9:	xchg   ebp,eax
  4035ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035cb:	mov    al,ds:0x843784e0
  4035d0:	xchg   ebp,eax
  4035d1:	dec    esi
  4035d2:	into   
  4035d3:	fs test eax,0xeb1d9ed2
  4035d9:	lock and esi,ebp
  4035dc:	std    
  4035dd:	lock stos BYTE PTR es:[edi],al
  4035df:	and    BYTE PTR [eax+0x49],0x44
  4035e3:	adc    BYTE PTR [edi+0xabf1886],0x4d
  4035ea:	mov    fs,WORD PTR [ecx-0x56]
  4035ed:	popa   
  4035ee:	sbb    eax,0x852a422f
  4035f3:	mov    dl,0xef
  4035f5:	popf   
  4035f6:	jmp    0x9f07cc95
  4035fb:	mov    WORD PTR [ecx+0x5d675e1],?
  403601:	xor    eax,0x6d0eec4f
  403606:	sub    ecx,DWORD PTR [ebx-0x7b06f94c]
  40360c:	jge    0x4035a0
  40360e:	adc    al,0x1b
  403610:	inc    eax
  403611:	jmp    0x2edb:0x71507f92
  403618:	psrlq  mm2,QWORD PTR [ecx+0x15]
  40361c:	out    dx,eax
  40361d:	push   es
  40361e:	test   edi,0x2a6e8c97
  403624:	repz adc ebp,DWORD PTR [ecx-0x567c6cad]
  40362b:	in     eax,0x60
  40362d:	sub    dh,al
  40362f:	xor    DWORD PTR ds:0xd9650d0a,ebp
  403635:	xlat   BYTE PTR ds:[ebx]
  403636:	jns    0x40363d
  403638:	push   edi
  403639:	xor    DWORD PTR [edx+0x68],eax
  40363c:	pop    edi
  40363d:	mov    ds:0x8d623f57,eax
  403642:	mov    esi,0xcbfd9da3
  403647:	xchg   edi,eax
  403648:	push   0x4e22a40d
  40364d:	call   0x32b1:0x92e78769
  403654:	push   cs
  403655:	test   eax,0xec5f3c59
  40365a:	and    DWORD PTR [esi],ebp
  40365c:	hlt    
  40365d:	mov    dh,0x67
  40365f:	push   eax
  403660:	xchg   ecx,eax
  403661:	mov    al,0xfd
  403663:	js     0x4035ee
  403665:	adc    eax,0x5f362de7
  40366a:	aas    
  40366b:	pop    ds
  40366c:	mov    bh,0xf7
  40366e:	stos   DWORD PTR es:[edi],eax
  40366f:	adc    eax,0x243817d5
  403674:	sub    DWORD PTR [ebp-0x7a53beec],ebp
  40367a:	fidivr WORD PTR [eax-0x7a]
  40367d:	(bad)  
  40367e:	jecxz  0x403602
  403680:	ins    BYTE PTR es:[edi],dx
  403681:	cmp    al,0x8f
  403683:	rcl    edx,1
  403685:	adc    DWORD PTR [edx-0x12],esp
  403688:	push   eax
  403689:	into   
  40368a:	xchg   DWORD PTR [edi+0x47],edx
  40368d:	lea    eax,[eax-0x319eda01]
  403693:	test   bl,0x59
  403696:	and    edx,esi
  403698:	adc    DWORD PTR [ebx],esp
  40369a:	inc    ecx
  40369b:	and    al,0xeb
  40369d:	mov    bh,bl
  40369f:	add    al,0x1a
  4036a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036a2:	and    BYTE PTR [ebx],dh
  4036a4:	inc    esi
  4036a5:	sub    DWORD PTR [ebp+0x54],ecx
  4036a8:	cmp    BYTE PTR [edx-0x7f5851ad],al
  4036ae:	jge    0x4036c2
  4036b0:	movups xmm7,XMMWORD PTR [esi]
  4036b3:	int3   
  4036b4:	(bad)  
  4036b5:	jp     0x40366f
  4036b7:	inc    edx
  4036b8:	dec    esi
  4036b9:	fld    TBYTE PTR [eax+eax*2+0x6d]
  4036bd:	sub    eax,eax
  4036bf:	cmp    al,0x4f
  4036c1:	pop    es
  4036c2:	xchg   ebp,eax
  4036c3:	iret   
  4036c4:	xor    eax,0x9b2ccd19
  4036c9:	cdq    
  4036ca:	pop    ss
  4036cb:	pop    es
  4036cc:	cmp    DWORD PTR [ebx+0x65],eax
  4036cf:	mov    ch,0x11
  4036d1:	xchg   esp,eax
  4036d2:	push   esi
  4036d3:	push   0x7d
  4036d5:	adc    ebp,DWORD PTR [ecx]
  4036d7:	mov    bl,ah
  4036d9:	and    BYTE PTR [esi+0x62],ah
  4036dc:	jecxz  0x403685
  4036de:	js     0x403716
  4036e0:	jns    0x403727
  4036e2:	or     eax,0xca38aca4
  4036e7:	jno    0x4036ed
  4036e9:	jg     0x40373f
  4036eb:	mov    dh,0x50
  4036ed:	inc    esi
  4036ee:	add    al,0x37
  4036f0:	cs cld 
  4036f2:	and    eax,0xb944836
  4036f7:	inc    edi
  4036f8:	jecxz  0x403772
  4036fa:	sub    eax,0x24c1157f
  4036ff:	push   ebp
  403700:	pop    ss
  403701:	jmp    0x2adc1276
  403706:	rol    DWORD PTR [eax-0x1b4870a7],cl
  40370c:	mov    ebx,0xf4bc97f3
  403711:	adc    al,0xc8
  403713:	mov    esi,0x89ce9868
  403718:	pop    eax
  403719:	xor    DWORD PTR [ebx-0x7a69160],edx
  40371f:	in     eax,0xce
  403721:	popf   
  403722:	adc    DWORD PTR [ebx+0x14],0xe5c79928
  403729:	fst    DWORD PTR [eax]
  40372b:	cmp    al,0x3c
  40372d:	ret    
  40372e:	lea    ebx,[ebx+eiz*8+0x6a]
  403732:	sub    al,0xbf
  403734:	mov    esp,0xa71b1a0e
  40373a:	inc    eax
  40373b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40373c:	pushf  
  40373d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373e:	adc    esi,DWORD PTR [eax]
  403740:	je     0x4036c5
  403742:	jb     0x403739
  403744:	pop    es
  403745:	or     edx,DWORD PTR [edx-0x3ef9bad8]
  40374b:	cmp    eax,0xea52efbc
  403750:	cmp    BYTE PTR [eax],0x44
  403753:	adc    edi,ebp
  403755:	rcr    BYTE PTR es:[esi],0x80
  403759:	xchg   esp,eax
  40375a:	xchg   ecx,eax
  40375b:	in     al,0x49
  40375d:	sub    al,0x4c
  40375f:	lahf   
  403760:	mov    ebx,0x68a57559
  403765:	sbb    al,0x84
  403767:	and    ch,0x52
  40376a:	mov    ebx,0x482b91c6
  40376f:	aad    0x50
  403771:	aaa    
  403772:	adc    al,0x78
  403774:	mov    cl,0x2f
  403776:	add    ebp,DWORD PTR [ebx+0x19c8ea2c]
  40377c:	int3   
  40377d:	sub    eax,0xac855370
  403782:	inc    edi
  403783:	xchg   DWORD PTR [ecx-0x34],edx
  403786:	mov    cl,0x9
  403788:	ror    DWORD PTR [esi],cl
  40378a:	shr    DWORD PTR [edx+0x6b],1
  40378d:	cwde   
  40378e:	sti    
  40378f:	shrd   DWORD PTR [esi+0x78],ebx,0x7d
  403794:	clc    
  403795:	outs   dx,DWORD PTR ds:[esi]
  403796:	loope  0x4037b8
  403798:	aam    0x33
  40379a:	xor    BYTE PTR [esi+0x24],0x75
  40379e:	and    ah,BYTE PTR ds:0xcb80faad
  4037a4:	add    BYTE PTR [ecx],0x93
  4037a7:	push   ecx
  4037a8:	inc    ebx
  4037a9:	cmp    ebp,DWORD PTR [ecx+0x54]
  4037ac:	jno    0x403737
  4037ae:	das    
  4037af:	in     al,dx
  4037b0:	mov    al,0xf0
  4037b2:	jg     0x403802
  4037b4:	int3   
  4037b5:	out    0x4a,al
  4037b7:	(bad)  
  4037b9:	mov    esp,0xcffd959c
  4037be:	mov    bh,0xc8
  4037c0:	cdq    
  4037c1:	leave  
  4037c2:	push   es
  4037c3:	sar    DWORD PTR [eax+0x1ee4d55a],1
  4037c9:	stos   BYTE PTR es:[edi],al
  4037ca:	push   ss
  4037cb:	mov    ebp,0xdf8f1c8c
  4037d0:	call   0x1477a782
  4037d5:	repnz sbb eax,0xed69186e
  4037db:	push   es
  4037dc:	pop    edx
  4037dd:	mov    ch,0x35
  4037df:	pusha  
  4037e0:	retf   
  4037e1:	lds    edx,FWORD PTR [esi+edi*8+0x46]
  4037e5:	inc    ebx
  4037e6:	clc    
  4037e7:	mov    eax,0xd2cd6c43
  4037ec:	adc    BYTE PTR [ecx+0x608903b3],bl
  4037f2:	ss dec ebp
  4037f4:	mov    ds:0x3ec579e4,al
  4037f9:	ret    
  4037fa:	jmp    0x488b:0x4d8f8b64
  403801:	addr16 (bad) 
  403803:	pop    edi
  403804:	pushf  
  403805:	jnp    0x4037ae
  403807:	jecxz  0x403836
  403809:	sti    
  40380a:	and    dh,0xff
  40380d:	test   BYTE PTR [ebx-0x6f],0xc2
  403811:	add    DWORD PTR [edi],edx
  403813:	gs enter 0x5b3c,0x7b
  403818:	pushf  
  403819:	inc    ebp
  40381a:	xchg   edx,eax
  40381b:	pop    edx
  40381c:	sahf   
  40381d:	jbe    0x403835
  40381f:	repz test dl,cl
  403822:	add    eax,0xb45efefc
  403827:	enter  0x7438,0xdc
  40382b:	pop    es
  40382c:	cmp    al,0x49
  40382e:	sbb    DWORD PTR [edi-0x324d4c4e],edx
  403834:	data16 stos BYTE PTR es:[edi],al
  403836:	inc    ecx
  403837:	imul   BYTE PTR [ebx]
  403839:	cmp    eax,0x30e79708
  40383e:	pusha  
  40383f:	ds mov bl,0xd0
  403842:	sbb    dh,BYTE PTR [ecx]
  403844:	xchg   esi,eax
  403845:	add    al,0x3f
  403847:	jae    0x403867
  403849:	je     0x4038c6
  40384b:	shr    bh,cl
  40384d:	cli    
  40384e:	push   cs
  40384f:	dec    edi
  403850:	retf   0x303c
  403853:	mov    bh,0xa9
  403855:	rcl    dh,1
  403857:	cli    
  403858:	cmc    
  403859:	ror    BYTE PTR [esi-0x1f],1
  40385c:	sbb    ah,BYTE PTR [edi-0xaa98e48]
  403862:	(bad)  
  403863:	test   eax,0x40ff2667
  403868:	mov    WORD PTR [ebp+edi*2+0x750064a8],ds
  40386f:	(bad)  
  403871:	js     0x4038bc
  403873:	(bad)  
  403874:	(bad)
  403878:	outs   dx,DWORD PTR ds:[esi]
  403879:	cdq    
  40387a:	sbb    BYTE PTR [ecx+edx*4-0x48275f9e],bl
  403881:	lahf   
  403882:	or     BYTE PTR [eax],0xc3
  403885:	push   ebp
  403887:	add    BYTE PTR [edx],ah
  403889:	inc    ecx
  40388a:	or     DWORD PTR ds:0xd9e11821,0x60d7d45
  403894:	fimul  WORD PTR [ecx*2-0x6f5d08d9]
  40389b:	pop    ebx
  40389c:	mov    al,0xc6
  40389e:	test   al,0x75
  4038a0:	iret   
  4038a1:	push   ebx
  4038a2:	test   eax,0xd51da9a9
  4038a7:	sub    ecx,ebx
  4038a9:	jmp    0xb71e7b91
  4038ae:	popa   
  4038af:	stos   DWORD PTR es:[edi],eax
  4038b0:	mov    ch,0x31
  4038b2:	push   ss
  4038b3:	inc    esp
  4038b4:	mov    eax,0x75b1753b
  4038b9:	pop    edx
  4038ba:	fcomp  QWORD PTR [edx-0x7e615929]
  4038c0:	add    eax,0xdfe78df6
  4038c5:	xor    dl,BYTE PTR [ebp-0x2f46b67]
  4038cb:	and    al,0xfa
  4038cd:	jnp    0x403949
  4038cf:	xor    DWORD PTR [ebx],ebp
  4038d1:	pop    ds
  4038d2:	cdq    
  4038d3:	or     al,0xb5
  4038d5:	mov    eax,ds:0x6e3bce10
  4038da:	push   esi
  4038db:	mov    bh,0x7d
  4038dd:	adc    DWORD PTR [eax-0x38cec044],ecx
  4038e3:	inc    edx
  4038e4:	in     al,0x6c
  4038e6:	jmp    0x4038e3
  4038e8:	nop
  4038e9:	ret    0x6058
  4038ec:	push   ebx
  4038ed:	scas   al,BYTE PTR es:[edi]
  4038ee:	iret   
  4038ef:	js     0x403967
  4038f1:	clc    
  4038f2:	cmp    ah,BYTE PTR [eax+0x2c89e212]
  4038f8:	ja     0x4038bb
  4038fa:	fcmove st,st(0)
  4038fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038fd:	int    0x6a
  4038ff:	add    DWORD PTR cs:[esi-0x1f],eax
  403903:	bound  ebp,QWORD PTR [eax]
  403905:	push   ecx
  403906:	inc    esi
  403907:	jg     0x40391b
  403909:	pop    ss
  40390a:	test   DWORD PTR [eax],0xbbb08911
  403910:	fld    DWORD PTR [ebx]
  403912:	popf   
  403913:	sub    edi,DWORD PTR [eax+0x766ce2d2]
  403919:	push   ebp
  40391a:	or     dh,bl
  40391c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40391d:	test   bh,al
  40391f:	lahf   
  403920:	pop    es
  403921:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403923:	fcmovu st,st(7)
  403925:	loop   0x40395e
  403927:	nop
  403928:	xchg   ebx,eax
  403929:	push   cs
  40392a:	(bad)  
  40392b:	xor    al,0xa4
  40392d:	shl    BYTE PTR [ecx+0x31],1
  403930:	cmp    eax,0x1b0be68d
  403935:	gs mov ebp,0xcc6b5611
  40393b:	popf   
  40393c:	dec    eax
  40393d:	and    DWORD PTR [eax+0x3bd42b51],ebx
  403943:	xchg   ebx,eax
  403944:	cmp    edx,ebp
  403946:	call   0xda9feabb
  40394b:	sub    dl,bh
  40394d:	adc    ecx,DWORD PTR [edx+0x39]
  403950:	int    0x97
  403952:	ss cmp eax,0x59238be2
  403958:	sar    DWORD PTR [esi],1
  40395a:	pop    ss
  40395b:	int    0xe1
  40395d:	adc    DWORD PTR [ebx-0xf],ebx
  403960:	outs   dx,BYTE PTR ds:[esi]
  403961:	popa   
  403962:	inc    esi
  403963:	sub    eax,0xffffffac
  403966:	cwde   
  403967:	xor    BYTE PTR [ecx+0x38],0xc
  40396b:	jne    0x4039c4
  40396d:	inc    ecx
  40396e:	jne    0x4039d0
  403970:	call   0xcb8857fa
  403975:	nop
  403976:	aam    0x92
  403978:	repnz dec ebp
  40397a:	lods   eax,DWORD PTR ds:[esi]
  40397b:	(bad)  
  40397c:	mov    eax,ds:0x7761f7a8
  403981:	or     al,0x89
  403983:	adc    al,BYTE PTR [eax]
  403985:	sbb    eax,0x5b70001
  40398a:	nop
  40398b:	and    eax,DWORD PTR [ebp-0x6624e95e]
  403991:	mov    ds:0xebeec6b4,eax
  403996:	ret    0xef49
  403999:	xchg   ebx,eax
  40399a:	rol    ebx,1
  40399c:	jo     0x403992
  40399e:	pop    edi
  40399f:	jae    0x403963
  4039a1:	into   
  4039a2:	dec    ebp
  4039a3:	inc    ebp
  4039a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039a5:	scas   al,BYTE PTR es:[edi]
  4039a6:	mov    al,ds:0xfd2daf7
  4039ab:	jae    0x403a0c
  4039ad:	fistp  DWORD PTR [edi]
  4039af:	sar    DWORD PTR [ecx+0x7e],1
  4039b2:	or     DWORD PTR [ebx],ecx
  4039b4:	and    BYTE PTR [edx-0x52ba5a6e],cl
  4039ba:	ret    0x8567
  4039bd:	imul   ecx,DWORD PTR [si+0x7608],0xffffffb8
  4039c3:	imul   esp
  4039c5:	ret    0xc78
  4039c8:	push   esp
  4039c9:	add    ebx,DWORD PTR [eax+0x21b50e73]
  4039cf:	mov    ebx,0x47c761b0
  4039d4:	ja     0x4039a5
  4039d6:	mov    bl,BYTE PTR [ebx+eiz*8-0x34bb5a95]
  4039dd:	repnz cdq 
  4039df:	fisttp DWORD PTR [esp+ecx*4+0x38]
  4039e3:	jle    0x403a06
  4039e5:	mov    bh,0x7d
  4039e7:	add    bl,BYTE PTR [edx+ebp*1]
  4039ea:	xor    eax,0x3bef8ee9
  4039ef:	mov    dh,0xdf
  4039f1:	lds    edx,FWORD PTR [eax+0x78]
  4039f4:	cmp    dh,BYTE PTR [ebp-0x65]
  4039f7:	and    edx,DWORD PTR [ecx+ebp*1-0xe]
  4039fb:	push   0x48c3664b
  403a00:	xchg   esi,eax
  403a01:	or     esi,esp
  403a03:	aad    0xdb
  403a05:	into   
  403a06:	loope  0x403a83
  403a08:	mov    eax,0x7fe89b2d
  403a0d:	loop   0x403a87
  403a0f:	fs sub al,0x2d
  403a12:	outs   dx,DWORD PTR ds:[esi]
  403a13:	inc    ebp
  403a14:	mov    dl,BYTE PTR [eax+esi*2]
  403a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a18:	clc    
  403a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a1a:	adc    ch,bl
  403a1c:	lods   eax,DWORD PTR ds:[esi]
  403a1d:	mov    ah,0x25
  403a1f:	popa   
  403a20:	push   edi
  403a21:	out    dx,al
  403a22:	cmp    al,0x19
  403a25:	ins    DWORD PTR es:[edi],dx
  403a26:	call   0xc05:0x52b60e18
  403a2d:	shl    cl,1
  403a2f:	adc    al,0xdd
  403a31:	push   esi
  403a32:	ret    
  403a33:	mov    eax,DWORD PTR [ebx]
  403a35:	loope  0x403a35
  403a37:	xchg   edi,eax
  403a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a39:	pop    esp
  403a3a:	jl     0x403a6b
  403a3c:	push   0x2a
  403a3e:	mov    ah,0xac
  403a40:	int3   
  403a41:	mov    bl,0xfb
  403a43:	pushf  
  403a44:	sbb    BYTE PTR [edx],cl
  403a46:	adc    dl,BYTE PTR [ebp-0x6a]
  403a49:	dec    edi
  403a4a:	ins    DWORD PTR es:[edi],dx
  403a4b:	adc    edi,ebp
  403a4d:	int    0x39
  403a4f:	mov    ch,0x2c
  403a51:	mov    esp,0x4757080a
  403a56:	fwait
  403a57:	pop    eax
  403a58:	jp     0x4039f6
  403a5a:	xchg   ebp,eax
  403a5b:	jg     0x403a2f
  403a5d:	xchg   edx,eax
  403a5e:	cmp    ch,dl
  403a60:	adc    BYTE PTR [edx+0x5ee12afe],dl
  403a66:	in     eax,dx
  403a67:	and    BYTE PTR [esi+0x4a],bl
  403a6a:	fmul   DWORD PTR fs:[edi-0x7562d7e4]
  403a71:	fchs   
  403a73:	stc    
  403a74:	lock (bad) [ebx-0x43]
  403a78:	fcom   DWORD PTR [edx]
  403a7a:	ds das 
  403a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a7d:	out    dx,al
  403a7e:	jno    0x403afc
  403a80:	sti    
  403a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a82:	mov    ss,WORD PTR [ebp+0x40]
  403a85:	repz dec ebp
  403a87:	jo     0x403a80
  403a89:	cdq    
  403a8a:	xchg   ebp,eax
  403a8b:	outs   dx,BYTE PTR ds:[esi]
  403a8c:	shr    BYTE PTR [eax-0x5],cl
  403a8f:	(bad)  
  403a90:	dec    edi
  403a91:	loopne 0x403a50
  403a93:	test   ch,bh
  403a95:	je     0x403b06
  403a97:	dec    ebx
  403a98:	sbb    DWORD PTR [edx-0x3a],esp
  403a9b:	ret    0x8e5
  403a9e:	(bad)  [esi]
  403aa0:	cwde   
  403aa1:	adc    DWORD PTR [edi],eax
  403aa3:	fisub  DWORD PTR [eax]
  403aa5:	mov    cs,WORD PTR ds:0xab0d723a
  403aab:	add    BYTE PTR [esi+0x3ecf328],cl
  403ab1:	pop    ds
  403ab2:	aaa    
  403ab3:	outs   dx,DWORD PTR ds:[esi]
  403ab4:	stc    
  403ab5:	(bad)  
  403ab6:	push   ebx
  403ab7:	js     0x403ad1
  403ab9:	(bad)
  403abd:	in     eax,0x94
  403abf:	cmp    DWORD PTR [esi],0xe3360fbf
  403ac5:	pop    esi
  403ac6:	xchg   ecx,edi
  403ac8:	push   ebp
  403ac9:	test   al,0x25
  403acb:	dec    eax
  403acc:	ret    
  403acd:	int    0x21
  403acf:	loope  0x403a51
  403ad1:	stc    
  403ad2:	jns    0x403aa8
  403ad4:	arpl   dx,bp
  403ad6:	push   ebx
  403ad7:	mov    eax,ds:0xa0525c67
  403adc:	add    al,dl
  403ade:	out    0x7a,al
  403ae0:	dec    edi
  403ae1:	mov    esp,0xfb8e5878
  403ae6:	push   0x6e980aea
  403aeb:	ins    BYTE PTR es:[edi],dx
  403aec:	adc    eax,DWORD PTR [eax-0x33]
  403aef:	in     al,0x2d
  403af1:	ficom  DWORD PTR [edx-0xdff8c17]
  403af7:	pusha  
  403af8:	mov    dl,0x19
  403afa:	cwde   
  403afb:	dec    eax
  403afc:	arpl   WORD PTR [eax+edx*8],bp
  403aff:	cdq    
  403b00:	aad    0xa
  403b02:	jnp    0x403aa0
  403b04:	imul   esi,DWORD PTR [esi],0x976ba922
  403b0a:	es loopne 0x403b16
  403b0d:	sbb    dl,dh
  403b0f:	cmc    
  403b10:	dec    esp
  403b11:	mov    ebx,DWORD PTR [ebx]
  403b13:	cmp    BYTE PTR [eax-0x7f],0x55
  403b17:	mov    bl,0x47
  403b19:	mov    edx,0x87cd0be5
  403b1e:	lea    ebp,[edx]
  403b20:	jle    0x403b51
  403b22:	cmp    esi,ebp
  403b24:	scas   al,BYTE PTR es:[edi]
  403b25:	mov    ch,0xb8
  403b27:	fmul   QWORD PTR [edi+ebx*1]
  403b2a:	inc    esp
  403b2b:	sbb    DWORD PTR [edx-0x47],eax
  403b2e:	pop    ecx
  403b2f:	aam    0x9d
  403b31:	in     eax,0xf4
  403b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b34:	repz fstp st(2)
  403b37:	lods   al,BYTE PTR ds:[esi]
  403b38:	stc    
  403b39:	nop
  403b3a:	iret   
  403b3b:	hlt    
  403b3c:	popf   
  403b3d:	lahf   
  403b3e:	das    
  403b3f:	jp     0x403b96
  403b41:	xlat   BYTE PTR ds:[ebx]
  403b42:	dec    ecx
  403b43:	cmp    BYTE PTR [ecx+edx*4],bl
  403b46:	xchg   edx,eax
  403b47:	jle    0x403b89
  403b49:	jmp    0x403bc2
  403b4b:	xrelease xchg DWORD PTR [edi+0x6fffc4f0],ebp
  403b52:	xchg   ecx,eax
  403b53:	fwait
  403b54:	ror    BYTE PTR [edx-0x70],0xc8
  403b58:	addr16 xchg ebp,eax
  403b5a:	dec    esp
  403b5b:	das    
  403b5c:	push   eax
  403b5d:	cmp    al,0xf0
  403b5f:	or     BYTE PTR [ebx],bl
  403b61:	test   eax,0x2a8296c7
  403b66:	rol    BYTE PTR [edx-0x3a],1
  403b69:	jb     0x403bb1
  403b6b:	shr    esp,0x17
  403b6e:	jl     0x403b30
  403b70:	lock jae 0x403b26
  403b73:	scas   al,BYTE PTR es:[edi]
  403b74:	stos   BYTE PTR es:[edi],al
  403b75:	mov    bl,0x9c
  403b77:	mov    bh,0x56
  403b79:	push   ds
  403b7a:	push   esi
  403b7b:	mov    edx,0x70bb7f15
  403b80:	push   0xffffffc8
  403b82:	test   eax,0xfa33c94a
  403b87:	xchg   ebx,eax
  403b88:	push   0x1f
  403b8a:	mov    bl,0xf9
  403b8c:	retf   
  403b8d:	cmp    DWORD PTR [ebp+ebx*4+0xb9f9c0a],esp
  403b94:	pop    eax
  403b95:	adc    DWORD PTR [ebp-0x6f],edx
  403b98:	xor    BYTE PTR ds:0x5be2c8cc,0x50
  403b9f:	pop    ds
  403ba0:	rol    ah,1
  403ba2:	into   
  403ba3:	or     eax,0x438dbb5d
  403ba8:	jmp    0x84a88873
  403bad:	inc    esp
  403bae:	cld    
  403baf:	ins    DWORD PTR es:[edi],dx
  403bb0:	in     eax,0xe8
  403bb2:	adc    edi,ebp
  403bb4:	nop
  403bb5:	int3   
  403bb6:	mov    eax,DWORD PTR [edx+eiz*2]
  403bb9:	push   ecx
  403bba:	dec    eax
  403bbb:	mov    ?,WORD PTR [ecx-0x32dbd860]
  403bc1:	xchg   ebx,eax
  403bc2:	mov    eax,ds:0x7abf564
  403bc7:	xor    ecx,DWORD PTR [ecx+eax*2]
  403bca:	sub    al,BYTE PTR [ebp+0x51]
  403bcd:	adc    bh,BYTE PTR [ecx+0x2752e841]
  403bd3:	fbld   TBYTE PTR [ecx]
  403bd5:	loop   0x403b8d
  403bd7:	mov    ds:0x6691a3a2,eax
  403bdc:	pop    ss
  403bdd:	scas   eax,DWORD PTR es:[edi]
  403bde:	gs inc edx
  403be0:	cs ds or ch,0xeb
  403be5:	dec    ebx
  403be6:	push   ebp
  403be7:	cmc    
  403be8:	jb     0x403bf7
  403bea:	and    DWORD PTR ds:0xd8052b06,0x5f2bf1d4
  403bf4:	sub    DWORD PTR [edx+eax*1],0x58
  403bf8:	into   
  403bf9:	pop    ebp
  403bfa:	fs inc ecx
  403bfc:	inc    eax
  403bfd:	cld    
  403bfe:	mov    edi,0x13fc00d5
  403c03:	adc    al,0x1b
  403c05:	loope  0x403c27
  403c07:	(bad)  [ecx]
  403c09:	push   esp
  403c0a:	push   0x5b
  403c0c:	xor    BYTE PTR [eax-0x70],0xcc
  403c10:	aas    
  403c11:	push   ss
  403c12:	ror    edx,cl
  403c14:	lock push cs
  403c16:	sub    eax,0x9fb9de1d
  403c1b:	daa    
  403c1c:	sti    
  403c1d:	mov    ch,BYTE PTR [ecx+0x42]
  403c20:	xchg   ebx,eax
  403c21:	dec    edx
  403c22:	jns    0x403c0c
  403c24:	cmp    bl,BYTE PTR [edx-0x5d]
  403c27:	push   ds
  403c28:	jle    0x403c85
  403c2a:	lock (bad) 
  403c2c:	loop   0x403c02
  403c2e:	jg     0x403c79
  403c30:	dec    edi
  403c31:	popa   
  403c32:	(bad)  
  403c33:	repz ror BYTE PTR [ecx+0x16],1
  403c37:	nop
  403c38:	scas   al,BYTE PTR es:[edi]
  403c39:	cmp    eax,0x84b434ef
  403c3e:	pushf  
  403c3f:	adc    al,BYTE PTR [ebx+0x1b]
  403c42:	push   ebx
  403c43:	mov    bl,BYTE PTR [ebx-0x5f]
  403c46:	lods   al,BYTE PTR ds:[esi]
  403c47:	repz fs ret 0xc674
  403c4c:	jmp    0x403ccc
  403c4e:	jmp    0xed2afe2f
  403c53:	call   0x45ad3c00
  403c58:	outs   dx,BYTE PTR ds:[esi]
  403c59:	bound  edx,QWORD PTR [edx]
  403c5b:	pop    esp
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	lahf   
  403c5e:	popa   
  403c5f:	add    al,BYTE PTR [eax+edi*1]
  403c62:	dec    edx
  403c63:	inc    esi
  403c64:	int3   
  403c65:	rol    ch,1
  403c67:	sbb    esp,DWORD PTR [ecx]
  403c69:	fisttp DWORD PTR [esi+ebp*1+0x5566afb3]
  403c70:	pusha  
  403c71:	sbb    dh,BYTE PTR [ebx]
  403c73:	call   0x8b05:0x151093ae
  403c7a:	shl    BYTE PTR [edi-0x59],cl
  403c7d:	mov    WORD PTR [eax+0x10],es
  403c80:	sbb    eax,0x86a3068b
  403c85:	push   edi
  403c86:	(bad)  
  403c87:	into   
  403c88:	add    eax,0xf2b868d
  403c8d:	cdq    
  403c8e:	sbb    edi,esp
  403c90:	mov    eax,ds:0xdd081c8d
  403c95:	mov    ds,WORD PTR [esi-0x1c0f003c]
  403c9b:	or     DWORD PTR [esi+0x1f],esi
  403c9e:	bound  bp,DWORD PTR [edi-0x373cf7e4]
  403ca5:	imul   edx,DWORD PTR [ebp-0x1409216b],0xfbc3f1cb
  403caf:	rep outs dx,DWORD PTR ds:[esi]
  403cb1:	jno    0x403cf3
  403cb3:	std    
  403cb4:	and    eax,0x9e8c858d
  403cb9:	mov    BYTE PTR [ebp+0x4e],dl
  403cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cbd:	cmp    DWORD PTR [edi+0x7f],0xb
  403cc1:	mov    al,BYTE PTR [eax+0x22]
  403cc4:	jbe    0x403c62
  403cc6:	xchg   DWORD PTR [ebx-0xf300031],esp
  403ccc:	sub    ah,bh
  403cce:	ins    BYTE PTR es:[edi],dx
  403ccf:	das    
  403cd0:	add    DWORD PTR [edi+0x3e],0x6b9e99a5
  403cd7:	call   FWORD PTR [ebp+0x6c]
  403cda:	adc    esp,esi
  403cdc:	push   ss
  403cdd:	jns    0x403d47
  403cdf:	out    0xdd,eax
  403ce1:	sub    al,0xea
  403ce3:	xor    esi,DWORD PTR [ebx+0x50a7e7ab]
  403ce9:	mov    al,0x3c
  403ceb:	pop    edx
  403cec:	arpl   dx,ax
  403cee:	bswap  eax
  403cf0:	shr    ecx,0x71
  403cf3:	shl    DWORD PTR [esi+0x3ce4def9],1
  403cf9:	or     al,0x3c
  403cfb:	xor    eax,0xf3c8d02
  403d00:	cmp    eax,0xb77083cb
  403d05:	mov    al,0x0
  403d07:	ror    DWORD PTR [edi-0x34],cl
  403d0a:	in     eax,dx
  403d0b:	call   0x9207eef9
  403d10:	inc    ebp
  403d11:	sbb    cl,BYTE PTR [esi-0x75ac812e]
  403d17:	sbb    eax,0x3c766d72
  403d1c:	mov    ch,0xe
  403d1e:	pop    ebp
  403d1f:	mov    edi,eax
  403d21:	shr    BYTE PTR [ebx+0x469bcaf9],0xf6
  403d28:	fs dec ebp
  403d2a:	shl    BYTE PTR [eax+0x31],cl
  403d2d:	and    edi,DWORD PTR [ebp+0x6a797989]
  403d33:	fnstenv ds:0x7824b2be
  403d39:	neg    DWORD PTR [esi+eiz*4]
  403d3c:	and    eax,0x391a424d
  403d41:	dec    ebx
  403d42:	das    
  403d43:	fisubr DWORD PTR [ebp+0x78]
  403d46:	cli    
  403d47:	sub    ch,BYTE PTR [edx+eiz*1]
  403d4a:	lea    ebx,[esi+0x6d]
  403d4d:	and    eax,esi
  403d4f:	daa    
  403d50:	mov    eax,DWORD PTR [esi-0x3a]
  403d53:	push   ebp
  403d54:	lds    edx,FWORD PTR [edi]
  403d56:	pop    ebx
  403d57:	mov    ebx,0xdf57b232
  403d5c:	mov    esi,0xa1ecea87
  403d61:	in     eax,dx
  403d62:	or     eax,0x5a5d0693
  403d67:	bound  ebx,QWORD PTR [esp+eax*1+0x14]
  403d6b:	cdq    
  403d6c:	mov    ebp,0x981dda99
  403d71:	sub    al,0x27
  403d73:	jp     0x403db6
  403d75:	xchg   edi,eax
  403d76:	fldcw  WORD PTR [eax+0x4d]
  403d79:	ins    BYTE PTR es:[edi],dx
  403d7a:	in     eax,dx
  403d7b:	icebp  
  403d7c:	xacquire xchg BYTE PTR [esi-0x415113d1],dl
  403d83:	mov    ch,ch
  403d85:	mov    esi,0xa41a170c
  403d8a:	jmp    0x9336:0x6788ab22
  403d91:	scas   eax,DWORD PTR es:[edi]
  403d92:	inc    edx
  403d93:	jbe    0x403d89
  403d95:	mov    ecx,0xe1ce7ecc
  403d9a:	jmp    0xc57e:0x52e2d0c9
  403da1:	mov    DWORD PTR [ebp+edi*1+0x3e43f02a],edx
  403da8:	mov    ebp,DWORD PTR [ecx-0x70]
  403dab:	dec    eax
  403dac:	outs   dx,BYTE PTR ds:[esi]
  403dad:	out    0xa3,al
  403daf:	mov    esi,0x841b1315
  403db4:	and    eax,0xe60280c2
  403db9:	imul   eax,DWORD PTR [ecx-0x67c5c08c],0x2c38be57
  403dc3:	xor    ebp,esi
  403dc5:	clc    
  403dc6:	cmc    
  403dc7:	dec    ecx
  403dc8:	addr16 call 0x85703a2c
  403dce:	push   0x4a
  403dd0:	out    dx,eax
  403dd1:	in     al,dx
  403dd2:	dec    esp
  403dd3:	sub    ah,BYTE PTR [edi]
  403dd5:	xchg   edi,eax
  403dd6:	mov    al,0xf9
  403dd8:	and    al,0xec
  403dda:	xchg   BYTE PTR [esi+0x35a1522f],dh
  403de0:	sub    dl,BYTE PTR [ecx]
  403de2:	out    0x3d,al
  403de4:	adc    dl,dh
  403de6:	xchg   esp,eax
  403de7:	pop    ebx
  403de8:	fwait
  403de9:	icebp  
  403dea:	dec    BYTE PTR ds:0x666ae5fb
  403df0:	std    
  403df1:	cdq    
  403df2:	in     eax,dx
  403df3:	imul   edx,ebp,0x766b4242
  403df9:	cld    
  403dfa:	fistp  DWORD PTR ds:0x740c1c72
  403e00:	outs   dx,DWORD PTR ds:[esi]
  403e01:	stc    
  403e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e03:	xchg   DWORD PTR [esi-0x62],esi
  403e06:	test   dh,dl
  403e08:	or     edi,DWORD PTR [eax-0x487c932d]
  403e0e:	test   cl,dl
  403e10:	jmp    DWORD PTR [edx]
  403e12:	jmp    DWORD PTR [esi]
  403e14:	sub    eax,0xd8aceb1a
  403e19:	lods   eax,DWORD PTR ds:[esi]
  403e1a:	fild   QWORD PTR [ebp-0x1e9eadd4]
  403e20:	outs   dx,BYTE PTR ds:[esi]
  403e21:	mov    cl,0x33
  403e23:	or     ecx,DWORD PTR [edx+0x2cfb8cb5]
  403e29:	mov    esp,ebx
  403e2b:	jecxz  0x403e6a
  403e2d:	push   ebx
  403e2e:	fsub   QWORD PTR [ebp+0x8d2b7e3]
  403e34:	xchg   DWORD PTR [ebp+0x21],ebx
  403e37:	enter  0x1654,0x19
  403e3b:	repz cmp BYTE PTR [eax],dl
  403e3e:	aad    0x86
  403e40:	inc    esi
  403e41:	add    BYTE PTR ds:0xeec7dbd8,ch
  403e47:	das    
  403e48:	(bad)  
  403e49:	xchg   DWORD PTR [eax],edx
  403e4b:	add    dl,BYTE PTR [edx]
  403e4d:	pop    ebx
  403e4e:	hlt    
  403e4f:	adc    esi,0xffffffa5
  403e52:	(bad)  
  403e54:	jbe    0x403dd6
  403e56:	jno    0x403e8a
  403e58:	xchg   DWORD PTR ds:0x7a09f73b,esi
  403e5e:	mov    dh,0x9c
  403e60:	pusha  
  403e61:	pop    es
  403e62:	call   0x9ea57f95
  403e67:	adc    edi,ecx
  403e69:	outs   dx,BYTE PTR ds:[esi]
  403e6a:	in     al,dx
  403e6b:	in     eax,dx
  403e6c:	pop    ecx
  403e6d:	xchg   ebp,eax
  403e6e:	sbb    eax,0x95e98371
  403e73:	cs cmp ebx,esi
  403e76:	cmc    
  403e77:	cli    
  403e78:	xor    al,0x81
  403e7a:	dec    edx
  403e7b:	jl     0x403ecd
  403e7d:	sub    al,BYTE PTR [ebx]
  403e7f:	mov    esi,0xd0701e5f
  403e84:	dec    ebx
  403e85:	jmp    0x63db:0xfcf16f95
  403e8c:	outs   dx,BYTE PTR ds:[esi]
  403e8d:	sub    al,0x94
  403e8f:	outs   dx,DWORD PTR gs:[esi]
  403e91:	inc    edx
  403e92:	pop    ebp
  403e93:	(bad)  
  403e95:	dec    ecx
  403e96:	mov    ebx,?
  403e98:	push   edx
  403e99:	(bad)  
  403e9a:	mov    dl,0xdf
  403e9c:	in     eax,0xed
  403e9e:	rcl    edx,1
  403ea0:	scas   al,BYTE PTR es:[edi]
  403ea1:	mov    ebx,0xeffa2582
  403ea6:	hlt    
  403ea7:	sub    bl,ah
  403ea9:	pop    ds
  403eaa:	lea    edx,[ebp-0x53]
  403ead:	les    edx,FWORD PTR gs:[edx+0x7b]
  403eb1:	ins    DWORD PTR es:[edi],dx
  403eb2:	out    0xb5,eax
  403eb4:	mov    BYTE PTR [eax-0xb16e301],cl
  403eba:	inc    ecx
  403ebb:	jnp    0x403e6d
  403ebd:	cmp    al,0x26
  403ebf:	mov    cl,BYTE PTR [esi]
  403ec1:	xchg   ecx,eax
  403ec2:	mov    esp,edx
  403ec4:	jb     0x403e81
  403ec6:	sti    
  403ec7:	jg     0x403e76
  403ec9:	mov    bh,0xbd
  403ecb:	cmp    eax,0x6015c289
  403ed0:	lods   eax,DWORD PTR ds:[esi]
  403ed1:	into   
  403ed2:	dec    BYTE PTR [edx]
  403ed4:	mov    DWORD PTR [ebp+0x7e79ed14],esp
  403eda:	adc    DWORD PTR [ecx-0x4a075988],esp
  403ee0:	and    dh,0xfa
  403ee3:	adc    BYTE PTR [esi+ebp*2+0x78],0x4f
  403ee8:	fwait
  403ee9:	xor    DWORD PTR [esi-0x2489eb52],edi
  403eef:	xchg   esp,eax
  403ef0:	out    dx,eax
  403ef1:	mov    ds,WORD PTR [edi-0x7d]
  403ef4:	xchg   edi,eax
  403ef5:	add    BYTE PTR ds:0xc39c12ea,0xc2
  403efc:	xchg   ebx,eax
  403efd:	xchg   ebp,eax
  403efe:	ja     0x403efb
  403f00:	sub    al,0x52
  403f02:	push   es
  403f03:	xchg   BYTE PTR [edx-0x725e218],dh
  403f09:	or     ebx,esi
  403f0b:	pop    edx
  403f0c:	push   esi
  403f0d:	out    dx,eax
  403f0e:	repnz xor eax,0x2e
  403f12:	pop    edx
  403f13:	inc    ebx
  403f14:	mov    ecx,0xd2bbb46c
  403f19:	out    0x2f,al
  403f1b:	test   al,0x60
  403f1d:	cwde   
  403f1e:	hlt    
  403f1f:	inc    eax
  403f20:	stos   BYTE PTR es:[edi],al
  403f21:	retf   0xc66f
  403f24:	pop    ss
  403f25:	(bad)  
  403f27:	repnz xor ebp,esi
  403f2a:	inc    edx
  403f2b:	xchg   ebp,eax
  403f2c:	push   es
  403f2d:	sbb    eax,0xbf05f265
  403f32:	sub    DWORD PTR [esi],edi
  403f34:	scas   eax,DWORD PTR es:[edi]
  403f35:	sar    DWORD PTR [eax-0x5f052eae],0x44
  403f3c:	mov    al,0xa1
  403f3e:	xor    BYTE PTR [ecx],0x4d
  403f41:	add    dh,BYTE PTR [edi+0x5d]
  403f44:	fmulp  st(1),st
  403f46:	sub    ecx,DWORD PTR [ecx]
  403f48:	fcom   st(1)
  403f4a:	imul   ecx,DWORD PTR [ecx+ecx*8+0x3bf4d298],0x1893e652
  403f55:	stos   BYTE PTR es:[edi],al
  403f56:	add    ebx,esi
  403f58:	loopne 0x403fa8
  403f5a:	add    DWORD PTR [edi+edx*1],esi
  403f5d:	jb     0x403f21
  403f5f:	and    BYTE PTR [ebx+0x1d52c49e],ah
  403f65:	call   0xc8ccf9bd
  403f6a:	ret    
  403f6b:	ror    DWORD PTR [eax-0x1095a90f],0xbc
  403f72:	dec    ebx
  403f73:	mov    ebx,0x31109d98
  403f78:	cdq    
  403f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f7a:	jns    0x403f4d
  403f7c:	xchg   esp,eax
  403f7d:	xor    eax,0x67cf935
  403f82:	enter  0x9300,0xe1
  403f86:	cmp    DWORD PTR [ebp-0x239e6db7],edi
  403f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f8d:	cs jp  0x403f9d
  403f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f91:	sub    dl,BYTE PTR ds:0xaa1a7fc0
  403f97:	or     DWORD PTR [ebx+0x62e9d2dc],esi
  403f9d:	and    BYTE PTR [esi-0x4032e995],0x7b
  403fa4:	sub    BYTE PTR [esi-0xb7f6e72],0x31
  403fab:	fstp   QWORD PTR [ebp-0x11]
  403fae:	fdiv   QWORD PTR [ebp+0x13b39a61]
  403fb4:	in     al,0x1d
  403fb6:	sbb    eax,0xc3bf696e
  403fbb:	jb     0x403ffe
  403fbd:	mov    DWORD PTR [eax],ecx
  403fbf:	jmp    0x1d9b:0xa44d0b21
  403fc6:	mov    edx,DWORD PTR [eax]
  403fc8:	inc    ebx
  403fc9:	loopne 0x403fdc
  403fcb:	aas    
  403fcc:	adc    ch,BYTE PTR [edi-0x240e44e4]
  403fd2:	mov    ah,0x69
  403fd4:	rol    ebp,1
  403fd6:	stc    
  403fd7:	mov    ds:0xb3f4581a,eax
  403fdc:	shl    BYTE PTR [ebx],0xfd
  403fdf:	jp     0x403f7b
  403fe1:	scas   eax,DWORD PTR es:[edi]
  403fe2:	push   ebx
  403fe3:	leave  
  403fe4:	push   0x34fbf002
  403fe9:	xor    DWORD PTR [ebp*1+0x2a05cd25],0xa8d19d9d
  403ff4:	sbb    eax,DWORD PTR [ebx-0x58e26c30]
  403ffa:	dec    esi
  403ffb:	addr16 pop esp
  403ffd:	dec    ebp
  403ffe:	pop    eax
  403fff:	mov    al,0xd0
  404001:	outs   dx,DWORD PTR ds:[esi]
  404002:	and    dh,BYTE PTR [ebx+0x27b12f09]
  404008:	sub    al,0x72
  40400a:	xchg   ecx,eax
  40400b:	add    al,0xa0
  40400d:	sbb    al,0x29
  40400f:	shl    BYTE PTR [esp+edi*1-0x6c],1
  404013:	mov    edi,0x23d7adb5
  404018:	dec    ecx
  404019:	scas   eax,DWORD PTR es:[edi]
  40401a:	or     dl,cl
  40401c:	out    dx,al
  40401d:	push   ss
  40401e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40401f:	and    eax,0x3f504e7e
  404024:	xor    BYTE PTR [edi],dl
  404026:	jb     0x404084
  404028:	inc    esi
  404029:	lock lods eax,DWORD PTR ds:[si]
  40402c:	jbe    0x404063
  40402e:	jbe    0x403fea
  404030:	iret   
  404031:	scas   al,BYTE PTR es:[edi]
  404032:	xchg   BYTE PTR cs:[esp+eiz*2],dh
  404036:	push   es
  404037:	push   ebx
  404038:	aam    0x6d
  40403a:	out    0x93,eax
  40403c:	sub    BYTE PTR [esi+0x78],cl
  40403f:	retf   0xa369
  404042:	add    eax,0x8bb32b41
  404047:	lock push ebp
  404049:	sub    esp,ebp
  40404b:	mov    eax,ds:0x606a62ae
  404050:	sub    BYTE PTR [ecx],ah
  404052:	cmp    DWORD PTR [ebx+edi*1-0x4f24e6bf],edx
  404059:	jo     0x4040b9
  40405b:	inc    ebp
  40405c:	mov    esp,0xc94928ca
  404061:	das    
  404062:	adc    DWORD PTR [ebp+edi*4+0x34],edx
  404066:	fst    DWORD PTR ds:0xa7916b16
  40406c:	add    eax,0xeb75bd97
  404071:	push   eax
  404072:	cmp    esi,DWORD PTR [ecx]
  404074:	jbe    0x4040b4
  404076:	xor    DWORD PTR [edx],ebp
  404078:	jl     0x40403f
  40407a:	fst    DWORD PTR [edi-0x31]
  40407d:	xor    al,0x22
  40407f:	wrmsr  
  404081:	adc    ecx,DWORD PTR [edi+0x4a]
  404084:	std    
  404085:	jecxz  0x404102
  404087:	mov    ecx,0x1b0eb206
  40408c:	cmp    DWORD PTR [ebx+eiz*1],edx
  40408f:	scas   eax,DWORD PTR es:[edi]
  404090:	sar    DWORD PTR [edx+0x6e],cl
  404093:	jmp    0x85c92845
  404098:	jnp    0x40407e
  40409a:	adc    al,0x6b
  40409c:	fisttp WORD PTR [edi-0x346c37a9]
  4040a2:	dec    ecx
  4040a3:	add    esi,DWORD PTR [eax]
  4040a5:	and    al,0x3e
  4040a7:	ss clc 
  4040a9:	cmp    ch,dl
  4040ab:	jecxz  0x40408d
  4040ad:	stos   BYTE PTR es:[edi],al
  4040ae:	push   eax
  4040af:	icebp  
  4040b0:	mov    bl,0x4a
  4040b2:	outs   dx,BYTE PTR ds:[esi]
  4040b3:	push   cs
  4040b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b5:	aas    
  4040b6:	cli    
  4040b7:	fst    DWORD PTR [edi]
  4040b9:	xchg   esi,eax
  4040ba:	xchg   ebx,eax
  4040bb:	psubusw mm2,QWORD PTR [esi+0x1560e557]
  4040c2:	mov    ebx,ecx
  4040c4:	mov    ah,0xd8
  4040c6:	sub    bh,BYTE PTR [edi-0x74d2f51a]
  4040cc:	data16 out 0xc6,al
  4040cf:	mov    dl,BYTE PTR [ebx]
  4040d1:	jb     0x404139
  4040d3:	addr16 xor al,0x8b
  4040d6:	dec    ecx
  4040d7:	fnsave [ebp+0xa09269c]
  4040dd:	sbb    al,0x36
  4040df:	or     eax,0xf4929af5
  4040e4:	pusha  
  4040e5:	dec    ecx
  4040e6:	inc    ebx
  4040e7:	add    ebp,DWORD PTR [eax]
  4040e9:	sub    al,0xca
  4040eb:	jae    0x40411e
  4040ed:	push   edx
  4040ee:	mov    fs,WORD PTR [eax+0x5e]
  4040f1:	bound  ebx,QWORD PTR [ebx-0x45c30015]
  4040f7:	ins    BYTE PTR es:[edi],dx
  4040f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f9:	mov    DWORD PTR [ecx+ebx*4+0x6f],edi
  4040fd:	add    al,0x6a
  4040ff:	pop    ebx
  404100:	mov    eax,0xd980328f
  404105:	cmp    eax,DWORD PTR ds:0x50aefa1b
  40410b:	cmp    DWORD PTR [edi],esp
  40410d:	mov    al,ds:0x4c7047e7
  404112:	xor    DWORD PTR [edx+0x5b],ebp
  404115:	into   
  404116:	outs   dx,DWORD PTR ds:[esi]
  404117:	and    BYTE PTR [ebp+ecx*2-0x27],0xeb
  40411c:	arpl   di,ax
  40411e:	(bad)  
  40411f:	shr    edx,cl
  404121:	movzx  esp,bx
  404124:	pop    ebp
  404125:	ror    BYTE PTR [edi-0x7f9b1ad4],1
  40412b:	lahf   
  40412c:	pop    edi
  40412d:	fst    QWORD PTR [ebx]
  40412f:	cmp    dh,BYTE PTR [ecx-0x6c48e1b3]
  404135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404136:	inc    ebp
  404137:	aam    0x7d
  404139:	pop    es
  40413a:	cli    
  40413b:	xor    BYTE PTR [ebx+0x46],cl
  40413e:	sub    al,0x78
  404140:	int    0xe1
  404142:	cld    
  404143:	dec    edx
  404144:	sti    
  404145:	jp     0x404115
  404147:	and    al,0xfb
  404149:	jmp    0x88ca:0xe3496ed
  404150:	mov    al,0xdf
  404152:	mov    ch,0x91
  404154:	cmp    bh,BYTE PTR [eax-0x42]
  404157:	addr16 pop edx
  404159:	sbb    al,0xe6
  40415b:	xchg   bh,bl
  40415d:	push   ds
  40415e:	mov    bl,BYTE PTR [eax+edi*2+0x309beae5]
  404165:	cmp    BYTE PTR [esi-0x16],0xcd
  404169:	mov    esi,gs
  40416b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416c:	xor    DWORD PTR [esi],esi
  40416e:	mov    gs,WORD PTR [ecx-0x4fdd1ca2]
  404174:	pop    es
  404175:	lods   al,BYTE PTR ds:[esi]
  404176:	adc    al,0x5a
  404178:	sub    ah,bl
  40417a:	xlat   BYTE PTR ds:[ebx]
  40417b:	push   esi
  40417c:	push   ds
  40417d:	pop    ecx
  40417e:	or     cl,BYTE PTR ds:0x64a103cf
  404184:	pop    esp
  404185:	xor    eax,0x58577b52
  40418a:	jne    0x40415e
  40418c:	retf   0xb8f5
  40418f:	inc    ecx
  404190:	lea    eax,[edi]
  404192:	pop    eax
  404193:	les    esi,FWORD PTR ds:0xdd57a020
  404199:	inc    eax
  40419a:	cmp    esp,ecx
  40419c:	addr16 pop ebp
  40419e:	in     eax,dx
  40419f:	push   ecx
  4041a0:	pop    ds
  4041a1:	into   
  4041a2:	adc    BYTE PTR [ecx+0x62066799],bh
  4041a8:	cmp    eax,0xe7fdba55
  4041ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ae:	cwde   
  4041af:	outs   dx,BYTE PTR ds:[esi]
  4041b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041b1:	out    0x4f,eax
  4041b3:	std    
  4041b4:	cmp    ebp,eax
  4041b6:	sbb    esp,DWORD PTR gs:[eax]
  4041b9:	cmp    bh,BYTE PTR [ecx]
  4041bb:	out    0x3d,eax
  4041bd:	test   DWORD PTR [eax+eiz*8+0x64],esi
  4041c1:	push   0xffffff91
  4041c3:	or     ch,BYTE PTR [ebx+0x3]
  4041c6:	das    
  4041c7:	push   es
  4041c8:	out    dx,al
  4041c9:	pop    es
  4041ca:	ins    BYTE PTR es:[edi],dx
  4041cb:	(bad)  
  4041cc:	jg     0x40417c
  4041ce:	jns    0x4041d1
  4041d0:	jmp    0x404203
  4041d2:	ja     0x404228
  4041d4:	test   al,0x1b
  4041d6:	pop    ss
  4041d7:	dec    eax
  4041d8:	mov    ch,0x5c
  4041da:	sub    dl,BYTE PTR [edx+edi*2]
  4041dd:	mov    bh,0x51
  4041df:	daa    
  4041e0:	adc    al,0x10
  4041e2:	sbb    bl,BYTE PTR [ebx]
  4041e4:	repnz neg DWORD PTR ds:[ebx+0x5a2c463b]
  4041ec:	jns    0x40417a
  4041ee:	test   DWORD PTR [esi-0x206670b9],edx
  4041f4:	inc    esp
  4041f5:	inc    esi
  4041f6:	xor    dh,bl
  4041f8:	push   eax
  4041f9:	ja     0x404262
  4041fb:	jne    0x404230
  4041fd:	(bad)  
  4041fe:	push   esi
  4041ff:	or     eax,0x3c8b2e9
  404204:	sti    
  404205:	mov    edx,edx
  404207:	ins    BYTE PTR es:[edi],dx
  404208:	jbe    0x4041aa
  40420a:	adc    eax,0x3f9956f2
  40420f:	pop    ecx
  404210:	sbb    al,0x82
  404213:	push   esi
  404214:	dec    ebx
  404215:	push   esi
  404216:	sbb    DWORD PTR [ebp+0x4d],ecx
  404219:	scas   eax,DWORD PTR es:[edi]
  40421a:	sub    cl,cl
  40421c:	add    al,0x2c
  40421e:	xlat   BYTE PTR ds:[ebx]
  40421f:	test   BYTE PTR [ecx+0xd],bh
  404222:	pop    edi
  404223:	push   cs
  404224:	lock adc DWORD PTR [eax+ebp*2-0x6069790e],ecx
  40422c:	je     0x40425c
  40422e:	mov    ebp,0xd2a0da81
  404233:	daa    
  404234:	inc    edi
  404235:	pushf  
  404236:	inc    DWORD PTR [esi+ebx*4]
  404239:	adc    DWORD PTR [ebp+0x1b9409a],edx
  40423f:	lahf   
  404240:	sub    ch,BYTE PTR [eax+0x4a]
  404243:	inc    edx
  404244:	inc    eax
  404245:	add    DWORD PTR [ecx-0x6473166f],esp
  40424b:	fs aaa 
  40424d:	mov    ebp,0xcc200cde
  404252:	scas   al,BYTE PTR es:[edi]
  404253:	pop    edi
  404254:	les    eax,FWORD PTR [ecx-0xdcd34c7]
  40425a:	sub    BYTE PTR [ecx-0x6fab5f58],0xae
  404261:	inc    esp
  404262:	adc    esp,edi
  404264:	push   ebx
  404265:	retf   
  404266:	xor    eax,0x291f873
  40426b:	repz jmp 0x404289
  40426e:	aad    0xca
  404270:	stos   BYTE PTR es:[edi],al
  404271:	arpl   WORD PTR [eax+ebx*8+0x446f0653],dx
  404278:	inc    ebp
  404279:	inc    esi
  40427a:	in     al,0xb3
  40427c:	(bad)
  40427f:	dec    ecx
  404280:	cs sbb al,0x24
  404283:	or     cl,BYTE PTR [edi]
  404285:	inc    ebx
  404286:	sar    dl,cl
  404288:	adc    BYTE PTR [ebx],0x70
  40428b:	clc    
  40428c:	pusha  
  40428d:	dec    edx
  40428e:	mov    DWORD PTR [edx+0x28],0x1d512cac
  404295:	cmp    eax,0xc16782f
  40429a:	push   ebp
  40429b:	ror    BYTE PTR [ebp+0x10],cl
  40429e:	or     cl,BYTE PTR ds:0x4ab76db9
  4042a4:	hlt    
  4042a5:	pop    ss
  4042a6:	push   edi
  4042a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042a8:	push   edi
  4042a9:	adc    bh,BYTE PTR [ecx]
  4042ab:	xchg   esi,eax
  4042ac:	ja     0x404315
  4042ae:	ss sti 
  4042b0:	seto   BYTE PTR [edx]
  4042b3:	dec    ebp
  4042b4:	repnz mov BYTE PTR [edi+0x6311b1f3],dh
  4042bb:	pop    edi
  4042bc:	jp     0x40429f
  4042be:	or     DWORD PTR [edx],0x4ef45191
  4042c4:	add    al,dh
  4042c6:	sahf   
  4042c7:	and    eax,0x840e2f8f
  4042cc:	mov    ebx,0xb34e2bcb
  4042d1:	sub    eax,0x778916d3
  4042d6:	in     al,dx
  4042d7:	scas   al,BYTE PTR es:[edi]
  4042d8:	loopne 0x40430e
  4042da:	inc    ebx
  4042db:	jle    0x404349
  4042dd:	sub    eax,0xd08d7156
  4042e2:	pop    esi
  4042e3:	imul   edi,ebx,0xffffffd1
  4042e6:	imul   esp,DWORD PTR [esi+ebx*4],0x7f298dab
  4042ed:	sbb    DWORD PTR [ecx-0x47f683b9],ebx
  4042f3:	loopne 0x404294
  4042f5:	fild   WORD PTR [edx+0x2eeec291]
  4042fb:	dec    esi
  4042fc:	mov    ?,edi
  4042fe:	mov    ch,BYTE PTR [ebp-0x9cc94b9]
  404304:	mov    eax,ds:0xba822082
  404309:	xchg   esi,eax
  40430a:	or     BYTE PTR [ebp+eax*2-0x717f7104],0x86
  404312:	mov    bh,0x8f
  404314:	inc    edi
  404315:	xchg   BYTE PTR [ecx],ch
  404317:	repz inc ebp
  404319:	fmulp  st(1),st
  40431b:	and    bl,BYTE PTR [eax]
  40431d:	cmp    eax,0x3ad310c4
  404322:	jg     0x4042e1
  404324:	(bad)  
  404325:	push   edi
  404326:	cli    
  404327:	arpl   sp,di
  404329:	inc    ebp
  40432a:	gs (bad) 
  40432c:	call   0xa006a37a
  404331:	mov    ecx,0xd896137b
  404336:	lock and esp,0x6e
  40433a:	inc    esi
  40433b:	sbb    BYTE PTR [ebp+0x22],dh
  40433e:	jnp    0x4043b4
  404340:	mov    ah,0x18
  404342:	das    
  404343:	gs call 0x2c449abf
  404349:	pop    DWORD PTR [esi+0x4eb7cb92]
  40434f:	xor    bh,BYTE PTR gs:[edi-0xf]
  404353:	es aas 
  404355:	xchg   BYTE PTR [esi],ch
  404357:	jmp    0x3bc7:0x62d81ddd
  40435e:	rcr    DWORD PTR [edx],0xe3
  404361:	ss and eax,0xabf55848
  404367:	mov    ebx,0xb600bb47
  40436c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40436e:	popa   
  40436f:	jnp    0x4043e0
  404371:	adc    DWORD PTR [esi-0x36],ebp
  404374:	sub    al,0xd1
  404376:	iret   
  404377:	jmp    0x7a2925a7
  40437c:	stc    
  40437d:	retf   
  40437e:	mov    ds:0x8d2ffd1a,al
  404383:	aam    0x37
  404385:	mul    al
  404387:	and    BYTE PTR [eax],bl
  404389:	ja     0x404404
  40438b:	(bad)  
  40438c:	dec    edi
  40438d:	xchg   esp,eax
  40438e:	push   edx
  40438f:	or     DWORD PTR [edi-0x56ca99d7],esi
  404395:	(bad)  
  404396:	push   0xffffffd8
  404398:	sub    eax,0xf772111f
  40439d:	cmc    
  40439e:	(bad)  
  40439f:	lahf   
  4043a0:	push   ebp
  4043a1:	(bad)  
  4043a2:	shl    DWORD PTR [ebx-0x470a3cfb],cl
  4043a8:	jg     0x404399
  4043aa:	mov    ch,0x9
  4043ac:	pop    eax
  4043ad:	retf   0xa804
  4043b0:	adc    eax,0x232b5b90
  4043b5:	pop    es
  4043b6:	dec    edi
  4043b7:	repnz push 0x70
  4043ba:	adc    ecx,eax
  4043bc:	jmp    0x46b96cc3
  4043c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c2:	ja     0x404361
  4043c4:	sub    dl,BYTE PTR [edx]
  4043c6:	inc    eax
  4043c7:	fld    DWORD PTR [esi+edi*2+0x88b384f]
  4043ce:	xchg   esp,eax
  4043cf:	sbb    BYTE PTR [ebx+0x2f],0x42
  4043d3:	pop    edx
  4043d4:	pop    ss
  4043d5:	outs   dx,BYTE PTR ds:[esi]
  4043d6:	dec    edx
  4043d7:	aad    0x25
  4043d9:	push   ebx
  4043da:	mov    edx,0x4da48ea0
  4043df:	sbb    BYTE PTR [edi+0x335d3465],0x91
  4043e6:	dec    esi
  4043e7:	sub    dh,BYTE PTR [edx]
  4043e9:	inc    ebp
  4043ea:	fisubr WORD PTR [esi+0x7e]
  4043ed:	inc    edx
  4043ef:	lahf   
  4043f0:	ficom  WORD PTR [ecx+eiz*1+0x5]
  4043f4:	out    dx,al
  4043f5:	push   esp
  4043f6:	iret   
  4043f7:	pushf  
  4043f8:	mov    dl,0xc4
  4043fa:	cs adc eax,0x3e26f625
  404400:	repz dec esi
  404402:	add    DWORD PTR ds:0xdf89b72b,0xf05d1854
  40440c:	xor    BYTE PTR [eax-0x29],al
  40440f:	mov    dl,0x1b
  404411:	dec    esp
  404412:	pop    ss
  404413:	or     cl,BYTE PTR ds:0xcbd146d8
  404419:	inc    ebx
  40441a:	ror    BYTE PTR [esp+esi*8],0xe
  40441e:	mov    dh,cl
  404420:	(bad)  
  404421:	mov    edi,0xa8f50e67
  404426:	scas   al,BYTE PTR es:[edi]
  404427:	mov    eax,ds:0x660b57ab
  40442c:	or     al,0x5d
  40442e:	sahf   
  40442f:	xchg   BYTE PTR [ecx+0x1e],bh
  404432:	push   ecx
  404433:	sub    eax,0xdae04b5e
  404438:	mov    esi,0xeeac6319
  40443d:	and    bl,cl
  40443f:	cld    
  404440:	ds clc 
  404442:	and    BYTE PTR [eax],dl
  404444:	jbe    0x4043ee
  404446:	lea    esp,[esi+0x5b13261a]
  40444c:	shr    BYTE PTR [ebx],1
  40444e:	mov    esp,ebp
  404450:	fdivrp st(7),st
  404452:	xchg   edx,eax
  404453:	fs popa 
  404455:	lahf   
  404456:	pop    esp
  404457:	test   DWORD PTR [edx-0x24334819],ebp
  40445d:	lahf   
  40445e:	mov    eax,ds:0x8131a8f0
  404463:	push   0xa6bbbdc1
  404468:	xchg   esp,eax
  404469:	rcl    DWORD PTR [esi-0x4c1a6927],0x3f
  404470:	repnz mov ds:0xda9901e7,eax
  404476:	jge    0x4044e7
  404478:	adc    BYTE PTR [edx+0x6b1e51e2],bl
  40447e:	(bad)  
  40447f:	call   0x3b7c:0xd671a216
  404486:	in     al,dx
  404487:	lahf   
  404488:	or     ebp,DWORD PTR [esi+0x67be66c]
  40448e:	adc    eax,0x7e0fcc99
  404493:	cmp    cl,BYTE PTR [eax]
  404495:	outs   dx,BYTE PTR ds:[esi]
  404496:	shr    DWORD PTR [eax],1
  404498:	push   ecx
  404499:	in     eax,0x8f
  40449b:	mov    ds:0xfefe59a1,al
  4044a0:	les    eax,FWORD PTR [esi+0x21]
  4044a3:	adc    al,0x2f
  4044a5:	lds    esp,FWORD PTR [ecx+0x576ce495]
  4044ab:	mov    cl,0x50
  4044ad:	lods   al,BYTE PTR ds:[esi]
  4044ae:	ins    DWORD PTR es:[edi],dx
  4044af:	add    ch,BYTE PTR [ecx]
  4044b1:	adc    eax,DWORD PTR [ebx+0x22]
  4044b4:	rcr    BYTE PTR [ecx],cl
  4044b6:	jbe    0x40446a
  4044b8:	dec    edx
  4044b9:	out    0x65,eax
  4044bb:	push   es
  4044bc:	add    DWORD PTR [edx],esp
  4044be:	ror    DWORD PTR [ecx-0x23],cl
  4044c1:	sbb    dh,BYTE PTR ds:0xd55ed608
  4044c7:	icebp  
  4044c8:	or     DWORD PTR [eax+0x7b],0x2c
  4044cc:	mov    ah,0x54
  4044ce:	inc    edi
  4044d0:	mov    ch,0x70
  4044d2:	adc    edx,DWORD PTR [ecx-0x591e36c9]
  4044d8:	jb     0x4044b1
  4044da:	cmc    
  4044db:	js     0x40447f
  4044dd:	repz stc 
  4044df:	popa   
  4044e0:	and    eax,0xa56561d9
  4044e5:	imul   ecx,DWORD PTR [esi-0xd33bdfc],0x14
  4044ec:	xchg   edi,eax
  4044ed:	daa    
  4044ee:	cmp    ebx,edx
  4044f0:	pop    es
  4044f1:	fiadd  WORD PTR [ebx]
  4044f3:	les    di,DWORD PTR [edi]
  4044f6:	scas   eax,DWORD PTR es:[edi]
  4044f7:	mov    dh,BYTE PTR [ebx]
  4044f9:	fisttp DWORD PTR [ecx+0x3b]
  4044fc:	test   al,0x72
  4044fe:	pop    edi
  4044ff:	jb     0x4044c0
  404501:	xchg   ebp,eax
  404502:	call   0xbaaceaed
  404507:	jne    0x404510
  404509:	dec    ebp
  40450a:	call   0x9fa50eb1
  40450f:	std    
  404510:	mov    ecx,0xa46f8299
  404515:	aaa    
  404516:	adc    ebp,ebx
  404518:	adc    DWORD PTR [ebp-0x175d5466],eax
  40451e:	inc    esi
  40451f:	popf   
  404520:	pop    ss
  404521:	pop    ss
  404522:	(bad)  [ebx+0x4100ba73]
  404528:	push   ebp
  404529:	(bad)  
  40452b:	loope  0x404556
  40452d:	adc    ebx,ebp
  40452f:	test   DWORD PTR [esi],ebx
  404531:	jnp    0x404519
  404533:	int3   
  404534:	jecxz  0x404507
  404536:	stos   DWORD PTR es:[edi],eax
  404537:	or     edx,ebx
  404539:	mov    ds:0x42b48ea2,al
  40453e:	sbb    DWORD PTR [esi+0xe74002e],esp
  404544:	jmp    0xebfe:0xc74f7ed5
  40454b:	jmp    0xb246:0x9c4cc926
  404552:	dec    ebx
  404553:	and    bl,BYTE PTR [esi+0x5c]
  404556:	pop    esi
  404557:	inc    edx
  404558:	mov    eax,0x49e2bc51
  40455d:	call   0xbf97e4d0
  404562:	mov    DWORD PTR [eax-0x7a0a4990],0x695fbe7b
  40456c:	jns    0x404527
  40456e:	cmc    
  40456f:	jae    0x4045d0
  404571:	stc    
  404572:	call   0x2389:0x482541d3
  404579:	mov    ebx,0xb22f874a
  40457e:	adc    ch,dh
  404580:	inc    edi
  404581:	shr    BYTE PTR [ebx],cl
  404583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404584:	in     al,0xd8
  404586:	test   eax,0xbdc16496
  40458b:	xchg   edi,eax
  40458c:	addr16 push eax
  40458e:	retf   
  40458f:	sub    ch,BYTE PTR [esi+ebp*4+0x4f067783]
  404596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404597:	daa    
  404598:	and    edi,DWORD PTR [esi-0x5ff4eeb3]
  40459e:	cs cs ins BYTE PTR es:[edi],dx
  4045a1:	or     DWORD PTR [eax],0x6145aaed
  4045a7:	pop    esp
  4045a8:	mov    DWORD PTR [eax],ecx
  4045aa:	jg     0x40458e
  4045ac:	sbb    ebx,edx
  4045ae:	jl     0x404579
  4045b0:	jns    0x4045b6
  4045b2:	mov    bh,0xe1
  4045b4:	mov    eax,0xa0f6b14
  4045b9:	add    DWORD PTR [edx],ecx
  4045bb:	dec    esp
  4045bc:	shr    esi,1
  4045be:	(bad)  
  4045bf:	in     eax,dx
  4045c0:	sub    al,0x90
  4045c2:	scas   eax,DWORD PTR es:[edi]
  4045c3:	icebp  
  4045c4:	push   ss
  4045c5:	jmp    0x9946:0xcca55cfe
  4045cc:	dec    BYTE PTR [eax+0x3804c416]
  4045d2:	dec    esi
  4045d3:	mov    ah,BYTE PTR [esi+0x14]
  4045d6:	and    esi,0xfffffff8
  4045d9:	push   eax
  4045da:	lods   al,BYTE PTR ds:[esi]
  4045db:	dec    ebx
  4045dc:	or     al,0xe0
  4045de:	aas    
  4045df:	cmp    bh,BYTE PTR [esi+0x2c]
  4045e2:	sub    eax,0x837bf610
  4045e7:	adc    DWORD PTR [esp+ebx*2],ecx
  4045ea:	fstp   TBYTE PTR [edi]
  4045ec:	cmp    esp,DWORD PTR [ebp-0x2bd31a67]
  4045f2:	dec    esi
  4045f3:	jo     0x4045d3
  4045f5:	test   DWORD PTR [edx],0x7134c263
  4045fb:	push   ecx
  4045fc:	xchg   edx,eax
  4045fd:	popa   
  4045fe:	dec    edx
  4045ff:	sbb    esp,edx
  404601:	xchg   DWORD PTR [edi-0x771e2b86],esp
  404607:	dec    edi
  404608:	int    0xa4
  40460a:	stos   BYTE PTR es:[edi],al
  40460b:	cmp    cl,BYTE PTR [ecx+0x61976adc]
  404611:	loope  0x404629
  404613:	pushf  
  404614:	test   eax,0xf142e27d
  404619:	adc    al,BYTE PTR [edx-0x70]
  40461c:	adc    ecx,DWORD PTR [ebx]
  40461e:	sub    edx,ecx
  404620:	or     eax,esp
  404622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404623:	inc    eax
  404624:	(bad)  
  404625:	inc    edx
  404626:	out    0xd4,eax
  404628:	add    DWORD PTR [edx],0x7c
  40462b:	jno    0x40466b
  40462d:	jl     0x40460d
  40462f:	(bad)  
  404630:	jp     0x404609
  404632:	push   esp
  404633:	(bad)  
  404634:	out    dx,al
  404635:	test   BYTE PTR [edx],0x40
  404638:	sbb    al,0x2d
  40463a:	push   cs
  40463b:	jbe    0x4046ba
  40463d:	mov    ah,0xa1
  40463f:	and    esp,DWORD PTR [esi+0x75837eba]
  404645:	mov    ch,0xe8
  404647:	(bad)  
  404648:	into   
  404649:	es mov dh,0x5c
  40464c:	cmp    ebp,DWORD PTR [eax+ecx*4+0x3a]
  404650:	pop    eax
  404651:	add    eax,0x26d3959d
  404656:	jae    0x404626
  404658:	jmp    0x4045ed
  40465a:	mov    eax,0x447eb123
  40465f:	std    
  404660:	in     eax,dx
  404661:	push   ebp
  404662:	cmp    cl,BYTE PTR [edx]
  404664:	push   eax
  404665:	(bad)  
  404666:	popf   
  404667:	cdq    
  404668:	ja     0x4045f3
  40466a:	or     dh,BYTE PTR [edx]
  40466c:	(bad)  
  40466d:	jmp    0x40469c
  40466f:	sub    edx,DWORD PTR [esi+0x8c1cfb0]
  404675:	jo     0x404663
  404677:	xchg   edi,eax
  404678:	or     BYTE PTR [ebx-0x7453c6c1],ah
  40467e:	in     eax,0xa0
  404680:	ds in  al,dx
  404682:	enter  0x46e4,0x67
  404686:	stos   BYTE PTR es:[edi],al
  404687:	call   0x7410cb10
  40468c:	mov    ds:0x634b3f26,al
  404691:	mov    eax,0xd262ccfd
  404696:	mov    eax,ds:0x87c36f6c
  40469b:	mov    dh,0x10
  40469d:	push   esp
  40469e:	sub    al,0x6a
  4046a0:	je     0x4046ee
  4046a2:	ret    0x3d97
  4046a5:	xor    eax,0xeab296e0
  4046aa:	dec    ebx
  4046ab:	mov    cs,WORD PTR [ebp-0x80]
  4046ae:	imul   ebx,DWORD PTR [edx-0x396ec0b4],0x25b93703
  4046b8:	clc    
  4046b9:	ins    BYTE PTR es:[edi],dx
  4046ba:	mov    edx,0x2d0b46cd
  4046bf:	mov    edx,0xb4df6252
  4046c4:	mov    edx,0x63bd482b
  4046c9:	jb     0x40473b
  4046cb:	mov    bl,0xf7
  4046cd:	and    DWORD PTR [edi-0x53dcc297],eax
  4046d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046d4:	xor    DWORD PTR [eax-0xf],edi
  4046d7:	mov    al,ds:0x70674ea5
  4046dc:	pop    ecx
  4046dd:	push   ebp
  4046de:	out    0x50,eax
  4046e0:	push   ds
  4046e1:	pop    ebp
  4046e2:	jmp    0x22c:0xb167544
  4046e9:	idiv   bl
  4046eb:	push   ebp
  4046ec:	sbb    al,0xf6
  4046ee:	cmp    al,0x63
  4046f0:	cmp    DWORD PTR [esi+0x5386d37b],0xffffffab
  4046f7:	add    eax,0x98e06e86
  4046fc:	mov    bh,0xc4
  4046fe:	ins    BYTE PTR es:[edi],dx
  4046ff:	push   ebx
  404700:	xchg   esi,eax
  404701:	jge    0x404686
  404703:	(bad)  
  404704:	test   BYTE PTR [ecx],ch
  404706:	push   esi
  404707:	rcr    BYTE PTR [ecx-0x39],0xf2
  40470b:	pop    ss
  40470c:	mov    edx,0xfe2b20f3
  404711:	pusha  
  404712:	inc    ebp
  404713:	dec    eax
  404714:	xchg   edx,eax
  404715:	and    ebx,ebp
  404717:	stos   DWORD PTR es:[edi],eax
  404718:	rcl    dh,cl
  40471a:	push   esi
  40471b:	or     DWORD PTR [ecx],eax
  40471d:	lock stos DWORD PTR es:[edi],eax
  40471f:	or     DWORD PTR [ebx+0x14],ecx
  404722:	xor    DWORD PTR [ecx],0x5a3ea0fe
  404728:	and    al,0x58
  40472a:	(bad)  [ebp-0xed18aa0]
  404730:	bnd jnp 0x40477c
  404733:	jge    0x4046f0
  404735:	ja     0x4047b0
  404737:	jmp    0xd985:0x1634cf64
  40473e:	rcr    BYTE PTR [ebp+0x5d],0x1
  404742:	jge    0x404767
  404744:	pop    edi
  404745:	pushf  
  404746:	or     dl,BYTE PTR [eax+0x62]
  404749:	enter  0x41b4,0x15
  40474d:	sbb    BYTE PTR [eax-0x4b],cl
  404750:	xchg   ecx,eax
  404751:	stc    
  404752:	shl    BYTE PTR ds:[bx+si],0xcc
  404757:	xchg   edi,eax
  404758:	xchg   ebx,eax
  404759:	sar    BYTE PTR [edx+0x44],cl
  40475c:	sbb    eax,DWORD PTR [edx-0x3f]
  40475f:	xchg   ecx,eax
  404760:	xor    bl,BYTE PTR [edx+edx*2]
  404763:	xor    DWORD PTR [edx+0x43],ebx
  404766:	ficomp WORD PTR [edi+0x571436b1]
  40476c:	push   ebp
  40476d:	or     BYTE PTR [ecx+ebp*1-0x37775d98],bh
  404774:	mov    ds:0xc90d5d76,eax
  404779:	frstor [ecx-0xe]
  40477c:	retf   
  40477d:	mov    DWORD PTR [edi+0x5cc14e6e],ebp
  404783:	and    bl,bh
  404785:	push   ebx
  404786:	inc    edx
  404787:	pop    es
  404788:	test   al,0x7c
  40478a:	or     DWORD PTR [ebx],ebp
  40478c:	pop    edi
  40478d:	and    al,0x12
  40478f:	mov    al,ds:0x2f6360fd
  404794:	mov    ebx,0x76f3681a
  40479a:	mov    bh,0x5d
  40479c:	cs pop ebp
  40479e:	push   ecx
  40479f:	xlat   BYTE PTR ds:[ebx]
  4047a0:	ja     0x404740
  4047a2:	xchg   esi,eax
  4047a3:	scas   al,BYTE PTR es:[edi]
  4047a4:	xchg   ebx,eax
  4047a5:	pop    esp
  4047a6:	iret   
  4047a7:	(bad)  
  4047a8:	adc    eax,0xa8246726
  4047ad:	mov    ss,WORD PTR [edi+0x222f9156]
  4047b3:	fsub   QWORD PTR [esi+0x3b98321b]
  4047b9:	scas   eax,DWORD PTR es:[edi]
  4047ba:	mov    ds:0x56afcd72,eax
  4047bf:	lods   eax,DWORD PTR ds:[esi]
  4047c0:	cmp    bh,BYTE PTR [ebx-0xe]
  4047c3:	ret    
  4047c4:	sahf   
  4047c5:	sub    BYTE PTR [ecx],cl
  4047c7:	pushf  
  4047c8:	ss sbb dh,dl
  4047cb:	sub    BYTE PTR [ecx-0x2a16b043],ah
  4047d1:	mov    WORD PTR [ebp+0x73c2da56],ds
  4047d7:	or     ah,al
  4047d9:	das    
  4047da:	jnp    0x4047a8
  4047dc:	(bad)  
  4047dd:	cmp    eax,0x1eefcd01
  4047e2:	mov    esp,0x69b32976
  4047e7:	jns    0x40476e
  4047e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ea:	dec    edx
  4047eb:	cli    
  4047ec:	add    eax,0x2a4262ec
  4047f1:	xor    BYTE PTR [edx-0x7e249b8b],dh
  4047f7:	(bad)  
  4047f8:	pop    esi
  4047f9:	inc    eax
  4047fa:	aaa    
  4047fb:	sahf   
  4047fc:	mov    edi,0x8e81bfad
  404801:	push   ds
  404802:	rcr    al,0xbf
  404805:	popa   
  404806:	xchg   edx,eax
  404807:	push   DWORD PTR [edx+eiz*2]
  40480a:	fnsave [ebx]
  40480c:	lahf   
  40480d:	ficom  DWORD PTR [ecx+0x6b1655fa]
  404813:	push   ebp
  404814:	aas    
  404815:	adc    ebx,esp
  404817:	inc    ebp
  404818:	adc    ah,BYTE PTR [ebp-0x7f0aa2ad]
  40481e:	call   0x9e01:0xd11ad444
  404825:	add    eax,0x5ad7ceb2
  40482a:	jno    0x4047e1
  40482c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40482d:	jno    0x404811
  40482f:	cdq    
  404830:	mov    ah,0xdc
  404832:	jg     0x40483a
  404834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404835:	ins    BYTE PTR es:[edi],dx
  404836:	xor    al,0xa4
  404838:	shl    DWORD PTR ds:0xd2ceba92,0x6f
  40483f:	push   esp
  404840:	mov    ?,WORD PTR [eax]
  404842:	jbe    0x40480f
  404844:	xchg   edi,eax
  404845:	adc    dh,BYTE PTR [esi-0x10]
  404848:	jae    0x40489d
  40484a:	cld    
  40484b:	test   eax,0xbe317180
  404850:	pop    esi
  404851:	add    cl,BYTE PTR [eax-0x453d6d23]
  404857:	pxor   mm5,QWORD PTR [edx+0x48]
  40485b:	lods   eax,DWORD PTR ds:[esi]
  40485c:	les    edx,FWORD PTR [ebp-0x64]
  40485f:	pop    ss
  404860:	jns    0x404859
  404862:	lods   al,BYTE PTR ds:[esi]
  404863:	lods   eax,DWORD PTR ds:[esi]
  404864:	call   0x47c8101
  404869:	stc    
  40486a:	rcr    BYTE PTR [edi-0x1f8396b9],1
  404870:	in     eax,0x50
  404872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404873:	mov    eax,0xf6bcc700
  404878:	xor    eax,0xaea96611
  40487d:	arpl   sp,dx
  40487f:	sbb    DWORD PTR [esi+0x2b],ecx
  404882:	addr16 sbb bh,bl
  404885:	push   edx
  404886:	xor    eax,0xb7a4d81
  40488b:	aad    0x7a
  40488d:	pop    ebx
  40488e:	aaa    
  40488f:	std    
  404890:	out    dx,al
  404891:	pop    edi
  404892:	xchg   ebx,eax
  404893:	adc    edi,DWORD PTR [edx-0x706e77bd]
  404899:	arpl   WORD PTR [edi-0x3c],di
  40489c:	cmc    
  40489d:	xchg   ebp,eax
  40489e:	mov    ebp,0x378beb5d
  4048a3:	xchg   DWORD PTR [edx],eax
  4048a5:	inc    DWORD PTR [ecx]
  4048a7:	inc    ecx
  4048a8:	test   al,0x8e
  4048aa:	aad    0x78
  4048ac:	xchg   esp,eax
  4048ad:	jmp    0xdb1f:0x54d4da2b
  4048b4:	cmp    al,BYTE PTR [esi-0x7fd33ac3]
  4048ba:	or     eax,0xbd514ac9
  4048bf:	mov    ss,WORD PTR [edi+0x5ee1fb75]
  4048c5:	add    ecx,DWORD PTR [esi-0x75766bb4]
  4048cb:	in     eax,0xd8
  4048cd:	add    eax,DWORD PTR [edx-0x32]
  4048d0:	jmp    0x16c3:0x4208652a
  4048d7:	scas   al,BYTE PTR es:[edi]
  4048d8:	mov    WORD PTR [esp+edi*8],ss
  4048db:	pop    ecx
  4048dc:	push   0x714472d4
  4048e1:	jbe    0x404883
  4048e3:	inc    ebp
  4048e4:	mov    bl,dh
  4048e6:	adc    esi,DWORD PTR [esi-0x15]
  4048e9:	retf   0x465a
  4048ec:	inc    esi
  4048ed:	daa    
  4048ee:	xor    eax,esi
  4048f0:	std    
  4048f1:	sahf   
  4048f2:	dec    edx
  4048f3:	fwait
  4048f4:	rol    esi,0x5d
  4048f7:	loopne 0x404899
  4048f9:	cmp    BYTE PTR [eax-0x2707d885],dh
  4048ff:	(bad)  
  404900:	fmul   QWORD PTR [ecx+0x19c964ca]
  404906:	retf   
  404907:	jp     0x4048b8
  404909:	cmp    al,0x22
  40490b:	mov    edi,0xe6a49410
  404910:	xchg   ebp,eax
  404911:	adc    bh,BYTE PTR [eax]
  404913:	ins    DWORD PTR es:[edi],dx
  404914:	in     eax,0x80
  404916:	mov    ah,0xc1
  404918:	xor    edx,ebx
  40491a:	aaa    
  40491b:	mov    cl,0xd7
  40491d:	jl     0x4048b0
  40491f:	sbb    BYTE PTR [eax+0x4a],0x8d
  404923:	clc    
  404924:	loop   0x4048d9
  404926:	pop    ecx
  404927:	pop    ds
  404928:	shl    DWORD PTR [ecx+eax*2+0x2a],cl
  40492c:	push   0xc
  40492e:	ss mov dh,0x11
  404931:	dec    ecx
  404932:	inc    edi
  404933:	xchg   ebp,eax
  404934:	in     eax,0x0
  404936:	stos   BYTE PTR es:[edi],al
  404937:	(bad)  
  404938:	sti    
  404939:	ret    0x14e6
  40493c:	jo     0x404931
  40493e:	mov    DWORD PTR [esi],edi
  404940:	aam    0x71
  404942:	jb     0x4049b8
  404944:	lods   eax,DWORD PTR ds:[esi]
  404945:	repnz or DWORD PTR ds:0xb202abdf,esp
  40494c:	mov    bh,0xcb
  40494e:	cwde   
  40494f:	pop    esp
  404950:	imul   edx,ebp,0xffffff8e
  404953:	jl     0x404991
  404955:	push   es
  404956:	and    eax,0x26de771c
  40495b:	or     al,0xc
  40495d:	push   0x2062c52a
  404962:	sub    esp,0xfffffff9
  404965:	sbb    al,0xc
  404967:	mov    bl,0xb2
  404969:	popa   
  40496a:	hlt    
  40496b:	ins    BYTE PTR es:[edi],dx
  40496c:	ins    BYTE PTR es:[edi],dx
  40496d:	retf   
  40496e:	bound  eax,QWORD PTR [ecx-0x7a]
  404971:	cmp    eax,0x43d47db6
  404976:	leave  
  404977:	retf   
  404978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404979:	inc    ebx
  40497a:	jne    0x404957
  40497c:	adc    al,0x59
  40497e:	pop    edi
  40497f:	inc    eax
  404980:	sbb    al,0x32
  404982:	fs call 0x84391347
  404988:	(bad)  
  404989:	mov    ds:0x3e7e7170,eax
  40498e:	mov    eax,ds:0xeb48a272
  404993:	inc    eax
  404994:	mov    ch,0x0
  404996:	out    dx,al
  404997:	jae    0x404997
  404999:	adc    edi,DWORD PTR [esp+eax*4]
  40499c:	mov    ah,0xbc
  40499e:	mov    ebx,0x57b787e8
  4049a3:	xor    eax,0x6952f334
  4049a8:	clc    
  4049a9:	xchg   edi,eax
  4049aa:	jmp    0xab24:0xceae45f5
  4049b1:	imul   edi,esi,0xffffffbb
  4049b4:	jno    0x404987
  4049b6:	outs   dx,BYTE PTR ds:[esi]
  4049b7:	sub    BYTE PTR [ecx-0x21],0x61
  4049bb:	cli    
  4049bc:	out    dx,al
  4049bd:	std    
  4049be:	in     eax,dx
  4049bf:	pop    edx
  4049c0:	sti    
  4049c1:	(bad)  
  4049c2:	sub    ebx,DWORD PTR [ecx]
  4049c4:	cli    
  4049c5:	add    al,0x82
  4049c7:	(bad)  
  4049c8:	mov    esp,0xb4cbbdba
  4049cd:	fdiv   QWORD PTR [ecx-0x1be47ba9]
  4049d3:	add    BYTE PTR [ecx+0xee1ee1],dh
  4049d9:	xor    edx,DWORD PTR [ebx-0x6799e272]
  4049df:	jae    0x4049c3
  4049e1:	inc    ebx
  4049e2:	test   ebp,edi
  4049e4:	xchg   esp,eax
  4049e5:	push   esp
  4049e6:	dec    DWORD PTR [edi]
  4049e8:	and    al,0x3d
  4049ea:	dec    edx
  4049eb:	mov    eax,DWORD PTR [ecx-0x71]
  4049ee:	xor    ah,BYTE PTR [ecx-0x4d]
  4049f1:	enter  0x8984,0x35
  4049f5:	push   ds
  4049f6:	arpl   sp,ax
  4049f8:	jmp    0x7958:0x94f1670c
  4049ff:	test   eax,0xffff5965
  404a04:	cmc    
  404a05:	jg     0x4049e1
  404a07:	mov    ds:0x43c5e240,al
  404a0c:	dec    ebp
  404a0d:	push   ecx
  404a0e:	jecxz  0x404a6b
  404a10:	dec    esp
  404a11:	pop    ecx
  404a12:	ret    0xe57a
  404a15:	mov    BYTE PTR [ebp+0x5e],bl
  404a18:	pushf  
  404a19:	xlat   BYTE PTR ds:[ebx]
  404a1a:	cmp    esp,edx
  404a1c:	sub    ah,al
  404a1e:	loopne 0x404a34
  404a20:	push   cs
  404a21:	xor    al,0x1e
  404a23:	mov    BYTE PTR [ebx],bh
  404a25:	xlat   BYTE PTR ds:[ebx]
  404a26:	inc    ecx
  404a27:	imul   ebx,DWORD PTR [ebx-0x613bc8fc],0x407f2f28
  404a31:	jns    0x404aa4
  404a33:	mov    dl,0x10
  404a35:	shl    DWORD PTR [ebx-0x77],0x91
  404a39:	mov    DWORD PTR ds:[ecx+edx*4+0x48],edi
  404a3e:	mov    ?,ebx
  404a40:	sar    DWORD PTR [edx],1
  404a42:	test   eax,0x9b6e09d3
  404a47:	cmp    DWORD PTR [ebx+ebx*1+0x37824065],eax
  404a4e:	js     0x404a58
  404a50:	or     dl,bl
  404a52:	lods   eax,DWORD PTR ds:[esi]
  404a53:	or     al,0x3
  404a55:	lea    esi,[esi-0x1fb07be9]
  404a5b:	scas   al,BYTE PTR es:[edi]
  404a5c:	pop    edi
  404a5d:	xor    BYTE PTR [ebp+ecx*8+0x46],0xff
  404a62:	fwait
  404a63:	dec    ebx
  404a64:	pop    ebp
  404a65:	sub    eax,0x44ef75e9
  404a6a:	in     eax,dx
  404a6b:	ror    esi,cl
  404a6d:	stc    
  404a6e:	xchg   BYTE PTR [ecx+0x7b],bh
  404a71:	ret    
  404a72:	xor    BYTE PTR [edx-0x2874ad9a],dl
  404a78:	dec    esp
  404a79:	popf   
  404a7a:	mov    al,ds:0xd2bac1fd
  404a7f:	adc    BYTE PTR [eax+0x30],dh
  404a82:	push   ecx
  404a83:	push   0x94c34ab8
  404a88:	jge    0x404a55
  404a8a:	jecxz  0x404ab8
  404a8c:	outs   dx,BYTE PTR ds:[esi]
  404a8d:	add    cl,BYTE PTR [ecx-0x1c]
  404a90:	push   esi
  404a91:	xacquire xchg DWORD PTR [eax],ebp
  404a94:	mov    ebp,0x565b0a94
  404a99:	fild   DWORD PTR [ecx+0x1d343773]
  404a9f:	and    al,BYTE PTR [edx+0x587d351c]
  404aa5:	mov    bl,0x2d
  404aa7:	pop    eax
  404aa8:	out    dx,al
  404aa9:	inc    edx
  404aaa:	aaa    
  404aab:	and    cl,dl
  404aad:	pop    edi
  404aae:	mov    ecx,0xb24773dd
  404ab3:	dec    esi
  404ab4:	dec    ebx
  404ab5:	pop    esp
  404ab6:	bound  esi,QWORD PTR [ecx+ecx*8+0x5f1b1d19]
  404abd:	xchg   ebx,eax
  404abe:	int    0x52
  404ac0:	out    dx,al
  404ac1:	cmp    BYTE PTR [eax],0x77
  404ac4:	retf   
  404ac5:	(bad)  
  404ac6:	popa   
  404ac7:	xchg   eax,edx
  404ac9:	mov    bl,0x1e
  404acb:	push   edx
  404acc:	add    DWORD PTR [ecx],esi
  404ace:	(bad)  
  404acf:	call   0xe23d:0x7770238
  404ad6:	(bad)  
  404ad7:	out    0x94,al
  404ad9:	adc    edx,DWORD PTR [esi]
  404adb:	into   
  404adc:	and    eax,0x3f1263e3
  404ae1:	xchg   ebp,eax
  404ae2:	je     0x404a94
  404ae4:	das    
  404ae5:	mov    eax,0xa82c907b
  404aea:	and    ecx,DWORD PTR [ebp-0x1d]
  404aed:	sbb    al,BYTE PTR [eax+0x13]
  404af0:	cmp    DWORD PTR [edi+0x3a],0x2c
  404af4:	inc    edx
  404af5:	cld    
  404af6:	scas   al,BYTE PTR es:[edi]
  404af7:	push   ecx
  404af8:	xchg   ecx,eax
  404af9:	inc    ecx
  404afa:	arpl   WORD PTR [eax],di
  404afc:	repz mov ebp,0x25e7c099
  404b02:	sbb    DWORD PTR [ebp+0x7c],esi
  404b05:	in     eax,0x38
  404b07:	(bad)  
  404b08:	fadd   DWORD PTR [ebp-0x56]
  404b0b:	sub    eax,0x18b55271
  404b10:	test   al,0xcd
  404b12:	int    0x3f
  404b14:	ss imul eax,ebx,0x5a3eec3b
  404b1b:	or     esp,DWORD PTR [edx]
  404b1d:	mov    ?,WORD PTR [esi-0x5d7ec858]
  404b23:	clc    
  404b24:	add    DWORD PTR [edi-0x4a28f544],ecx
  404b2a:	iret   
  404b2b:	and    eax,esi
  404b2d:	test   BYTE PTR [esi],dl
  404b2f:	sbb    DWORD PTR [eax+0x0],esp
  404b32:	icebp  
  404b33:	mov    edi,0x5fd0b7a0
  404b38:	aaa    
  404b39:	idiv   edi
  404b3b:	jno    0x404b26
  404b3d:	xchg   ecx,eax
  404b3e:	fistp  WORD PTR [edi+0x7862b0d0]
  404b44:	xchg   ebx,eax
  404b45:	icebp  
  404b46:	fstp   DWORD PTR [edx+0x9]
  404b49:	std    
  404b4a:	sbb    edx,DWORD PTR [edx]
  404b4c:	xlat   BYTE PTR ds:[ebx]
  404b4d:	shl    DWORD PTR [esi-0xed871fe],cl
  404b53:	imul   ebx,DWORD PTR [ebx-0xa],0x9
  404b57:	mov    esi,DWORD PTR [edi+0x77]
  404b5a:	push   0xa
  404b5c:	jl     0x404b5e
  404b5e:	aam    0xde
  404b60:	jb     0x404b88
  404b62:	dec    ebx
  404b63:	jp     0x404b73
  404b65:	jns    0x404b02
  404b67:	xchg   esi,eax
  404b68:	jl     0x404b62
  404b6a:	and    edx,DWORD PTR [ecx+0x2b227ac5]
  404b70:	jmp    0xa2d9:0x89c2e607
  404b77:	sbb    cl,ah
  404b79:	lea    esp,[edx]
  404b7b:	imul   edi,DWORD PTR [edi-0xe],0x18
  404b7f:	(bad)  
  404b80:	fisttp QWORD PTR ds:0xc9cacb85
  404b86:	loope  0x404c04
  404b88:	add    al,0x3e
  404b8a:	sbb    ebp,DWORD PTR [edi]
  404b8c:	or     DWORD PTR ds:0xe4a34d0d,ebx
  404b92:	out    dx,eax
  404b93:	imul   BYTE PTR [ecx]
  404b95:	ins    BYTE PTR es:[edi],dx
  404b96:	mov    ch,0xc3
  404b98:	stc    
  404b99:	rol    BYTE PTR [ebp+0x4e],cl
  404b9c:	jmp    0x404bb2
  404b9e:	loop   0x404b20
  404ba0:	imul   ebp,edx,0xffffffe7
  404ba3:	push   ebx
  404ba4:	faddp  st(6),st
  404ba6:	ret    0xb5c5
  404ba9:	sbb    DWORD PTR [ecx],edi
  404bab:	mov    edi,0xbc987a0f
  404bb0:	dec    edx
  404bb1:	shl    DWORD PTR [ecx+ecx*4+0x520ed502],0x9a
  404bb9:	mul    BYTE PTR [edx]
  404bbb:	push   esi
  404bbc:	je     0x404b66
  404bbe:	into   
  404bbf:	cmp    ebx,DWORD PTR [edi]
  404bc1:	inc    edi
  404bc2:	imul   eax,DWORD PTR [edi],0xffffffdd
  404bc5:	mov    bl,BYTE PTR [ebx]
  404bc7:	mov    al,0xef
  404bc9:	retf   0xca42
  404bcc:	ins    DWORD PTR es:[edi],dx
  404bcd:	jae    0x404c26
  404bcf:	inc    esi
  404bd0:	fwait
  404bd1:	lds    eax,FWORD PTR fs:[esi-0x310379e]
  404bd8:	test   DWORD PTR [esi+0x4a9c601c],eax
  404bde:	fmul   DWORD PTR [ebx-0x2c]
  404be1:	add    eax,0x4f6de10e
  404be6:	sbb    BYTE PTR [ebx],dl
  404be8:	and    DWORD PTR [ebx+0x27b181ec],ebp
  404bee:	pop    edx
  404bef:	push   es
  404bf0:	ds pop ecx
  404bf2:	shl    BYTE PTR [ecx],0x2d
  404bf5:	xor    al,0x78
  404bf7:	stos   DWORD PTR es:[edi],eax
  404bf8:	call   FWORD PTR [ebx]
  404bfa:	fist   WORD PTR [edi+0x661dd848]
  404c00:	int    0x31
  404c02:	aad    0x7d
  404c04:	addr16 retf 
  404c06:	out    0x67,eax
  404c08:	jns    0x404bc8
  404c0a:	fistp  WORD PTR [ebp+0x3618bfee]
  404c10:	(bad)  
  404c11:	pop    esp
  404c12:	mov    dh,0xe0
  404c14:	cmp    DWORD PTR ds:0x5db6bf71,esp
  404c1a:	dec    ebp
  404c1b:	cwde   
  404c1c:	daa    
  404c1d:	jo     0x404bfc
  404c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c20:	out    dx,eax
  404c21:	cli    
  404c22:	and    al,0x96
  404c24:	cmp    BYTE PTR ds:[esi],dl
  404c27:	ja     0x404c0c
  404c29:	push   0x354827c5
  404c2e:	sbb    ebx,DWORD PTR [esi]
  404c30:	(bad)  
  404c31:	push   ebx
  404c32:	cmc    
  404c33:	not    dl
  404c35:	mov    ebp,0xa5af1b5f
  404c3a:	hlt    
  404c3b:	dec    eax
  404c3c:	push   esp
  404c3d:	push   eax
  404c3f:	mov    esi,0x84c30027
  404c44:	data16 add al,0x9
  404c47:	mov    al,ds:0x59703134
  404c4c:	cs jmp 0x404ca3
  404c4f:	fimul  DWORD PTR [ebp+0x66]
  404c52:	inc    esi
  404c53:	scas   eax,DWORD PTR es:[edi]
  404c54:	sbb    bl,dl
  404c56:	or     DWORD PTR [eax+ecx*1+0x648c7e4b],0xd6285405
  404c61:	pop    ebx
  404c62:	ret    
  404c63:	pop    esp
  404c64:	or     al,0x5f
  404c66:	out    0x15,al
  404c68:	(bad)
  404c6b:	inc    ecx
  404c6c:	and    BYTE PTR [edi+0x42],ah
  404c6f:	aam    0xc6
  404c71:	mov    al,0x99
  404c73:	xchg   esp,eax
  404c74:	jmp    0x404c44
  404c76:	fmul   QWORD PTR [edx+0x21e46cc6]
  404c7c:	popa   
  404c7d:	dec    edx
  404c7e:	out    0x4f,eax
  404c80:	mov    edx,0x92bd0e8c
  404c85:	daa    
  404c86:	adc    BYTE PTR [ecx-0x3b],cl
  404c89:	and    al,0xaf
  404c8b:	dec    ecx
  404c8c:	push   esp
  404c8d:	daa    
  404c8e:	stc    
  404c8f:	fnstsw WORD PTR [ebx-0x3119a8cb]
  404c95:	psubusw mm7,QWORD PTR [ecx]
  404c98:	rcr    DWORD PTR [eax],1
  404c9a:	hlt    
  404c9b:	xchg   edx,eax
  404c9c:	mov    WORD PTR [ecx],cs
  404c9e:	pop    edi
  404c9f:	lahf   
  404ca0:	mov    dh,0x4c
  404ca2:	jae    0x404d06
  404ca4:	mov    esi,0x390d5260
  404ca9:	xchg   ebp,eax
  404caa:	scas   eax,DWORD PTR es:[edi]
  404cab:	cmc    
  404cac:	pop    ebp
  404cad:	int    0xc8
  404caf:	in     eax,0x43
  404cb1:	inc    edi
  404cb2:	sahf   
  404cb3:	cld    
  404cb4:	fbld   TBYTE PTR [edi]
  404cb6:	add    dh,bl
  404cb8:	xlat   BYTE PTR ds:[ebx]
  404cb9:	pop    eax
  404cba:	xchg   ebp,eax
  404cbb:	in     eax,0xa5
  404cbd:	call   0xdc17:0x53765d1f
  404cc4:	loopne 0x404c50
  404cc6:	adc    al,0xfc
  404cc8:	aas    
  404cc9:	inc    edx
  404cca:	loope  0x404d1b
  404ccc:	mov    dl,0x91
  404cce:	mov    ds:0xd06a0251,eax
  404cd3:	test   al,0xd3
  404cd5:	ss jmp 0x404d01
  404cd8:	(bad)  
  404cd9:	ds imul ebx,esp,0x1a
  404cdd:	add    al,0x67
  404cdf:	inc    edx
  404ce0:	imul   ecx,DWORD PTR [esi+0x3e4a56f7],0x46c9d3b6
  404cea:	cmp    ebp,DWORD PTR [eax+0x4669de3f]
  404cf0:	pop    ebx
  404cf1:	stos   DWORD PTR es:[edi],eax
  404cf2:	ins    BYTE PTR es:[edi],dx
  404cf3:	es imul eax,ebp,0xfffffff3
  404cf7:	out    dx,al
  404cf8:	ror    DWORD PTR [ebx-0xdbbf4b2],1
  404cfe:	cmc    
  404cff:	pop    esi
  404d00:	sar    BYTE PTR [edx+0x49],0x84
  404d04:	mov    ah,0xb1
  404d06:	cli    
  404d07:	mov    bh,0x61
  404d09:	or     ebp,ebx
  404d0b:	(bad)  
  404d0c:	cdq    
  404d0d:	lds    eax,FWORD PTR [ebx]
  404d0f:	dec    ebx
  404d10:	mov    BYTE PTR [ebp+0x49],0x91
  404d14:	test   al,0xe4
  404d16:	mov    es,ebp
  404d18:	cmp    BYTE PTR [eax+0x6f],0xc9
  404d1c:	mov    ah,0x76
  404d1e:	lea    esp,[esi]
  404d20:	mov    ebx,0x9f67a8a9
  404d25:	pop    eax
  404d26:	iret   
  404d27:	mov    ecx,0x9beb14cd
  404d2c:	adc    al,BYTE PTR [ebx]
  404d2e:	fistp  QWORD PTR [eax-0x80]
  404d31:	fwait
  404d32:	xlat   BYTE PTR ds:[ebx]
  404d33:	dec    ebx
  404d34:	adc    BYTE PTR [eax-0x66],cl
  404d37:	lods   eax,DWORD PTR ds:[esi]
  404d38:	or     ebp,DWORD PTR fs:[ecx-0x4a3f230b]
  404d3f:	mov    al,ds:0xc59e23df
  404d44:	push   ebx
  404d45:	in     eax,0xed
  404d47:	int    0xaf
  404d49:	mov    ah,0x48
  404d4b:	ja     0x404dc6
  404d4d:	stos   DWORD PTR es:[edi],eax
  404d4e:	pop    edx
  404d4f:	mul    esi
  404d51:	adc    dl,BYTE PTR [ecx]
  404d53:	fldcw  WORD PTR ds:[eax-0x5d]
  404d57:	inc    ebx
  404d58:	push   eax
  404d59:	jmp    0x88c:0x8a8cf2c6
  404d60:	(bad)  
  404d62:	xor    dl,cl
  404d64:	inc    edi
  404d65:	lock and edi,ebp
  404d68:	add    DWORD PTR [ecx+0x4],edi
  404d6b:	lds    edi,FWORD PTR [edi-0x6e]
  404d6e:	and    ebx,edx
  404d70:	sub    eax,0xcb553dce
  404d75:	jo     0x404d40
  404d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d78:	in     al,dx
  404d79:	mov    bh,0x72
  404d7b:	and    al,0xbb
  404d7d:	fs xchg ebx,eax
  404d7f:	retf   
  404d80:	dec    ebx
  404d81:	in     al,0x3f
  404d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d84:	cmp    DWORD PTR [ebp+0x5e5ef3ea],edi
  404d8a:	iret   
  404d8b:	sub    ah,bl
  404d8d:	iret   
  404d8e:	aam    0x60
  404d90:	add    BYTE PTR [esi+0x4f],ch
  404d93:	sub    ch,BYTE PTR [ebx]
  404d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d96:	inc    ebx
  404d97:	or     bl,bh
  404d99:	sbb    BYTE PTR [eax],ah
  404d9b:	sbb    DWORD PTR [ebx+0x69bb842d],eax
  404da1:	push   eax
  404da2:	(bad)  
  404da3:	aam    0xb1
  404da5:	or     BYTE PTR [edx+ebx*4],dl
  404da8:	xor    BYTE PTR [ebp-0x22],ch
  404dab:	xchg   ebx,eax
  404dac:	inc    edi
  404dad:	icebp  
  404dae:	das    
  404daf:	les    ebx,FWORD PTR ds:[esi-0x1c42d2e]
  404db6:	ins    BYTE PTR es:[edi],dx
  404db7:	mov    ebx,0xe3a0acec
  404dbc:	dec    esi
  404dbd:	pushf  
  404dbe:	xchg   esi,eax
  404dbf:	fld    TBYTE PTR [eax-0x4c]
  404dc2:	push   DWORD PTR [eax+0x208b4f89]
  404dc8:	test   DWORD PTR [edx],edx
  404dca:	pop    ebp
  404dcb:	cmp    cl,bh
  404dcd:	cdq    
  404dce:	inc    ebx
  404dcf:	fwait
  404dd0:	das    
  404dd1:	pop    es
  404dd2:	outs   dx,DWORD PTR ds:[esi]
  404dd3:	sub    al,0xb8
  404dd5:	sub    bl,bh
  404dd7:	and    BYTE PTR [ebx+0x1e24b648],dl
  404ddd:	cmp    BYTE PTR [eax-0x6dc2a310],0x75
  404de4:	loope  0x404d7e
  404de6:	xchg   esi,eax
  404de7:	mov    BYTE PTR [esi-0x63],al
  404dea:	cmc    
  404deb:	fwait
  404dec:	xchg   edi,eax
  404ded:	repnz and esi,edi
  404df0:	jmp    0x404dd2
  404df2:	test   al,bl
  404df4:	pop    esp
  404df5:	pop    esi
  404df6:	popa   
  404df7:	rcl    BYTE PTR [edi+edx*8+0x55],0xb2
  404dfc:	mov    edx,0x175a7cd9
  404e01:	pop    ebx
  404e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e03:	push   edx
  404e04:	cmp    DWORD PTR [ebx-0x76191d75],edi
  404e0a:	add    BYTE PTR ss:[ebx-0x1b],bl
  404e0e:	cld    
  404e0f:	mov    edi,0xf8ec2228
  404e14:	frstor [ebx]
  404e16:	stos   DWORD PTR es:[edi],eax
  404e17:	rol    BYTE PTR [ebp+0x36],cl
  404e1a:	rcl    BYTE PTR [eax],1
  404e1c:	scas   al,BYTE PTR es:[edi]
  404e1d:	and    DWORD PTR [ebp+0x7f],esp
  404e20:	pop    ecx
  404e21:	das    
  404e22:	stos   DWORD PTR es:[edi],eax
  404e23:	sahf   
  404e24:	and    dh,cl
  404e26:	push   ss
  404e27:	pop    ecx
  404e28:	adc    ah,dl
  404e2a:	das    
  404e2b:	aaa    
  404e2c:	mov    ah,0x84
  404e2e:	push   esi
  404e2f:	scas   al,BYTE PTR es:[edi]
  404e30:	cwde   
  404e31:	loope  0x404dfd
  404e33:	idiv   DWORD PTR [edx+0x7660a579]
  404e39:	loopne 0x404eb4
  404e3b:	nop
  404e3c:	leave  
  404e3d:	loopne 0x404dcc
  404e3f:	scas   eax,DWORD PTR es:[edi]
  404e40:	sahf   
  404e41:	sbb    BYTE PTR [eax],bh
  404e43:	rcr    BYTE PTR [edi-0x3fc20805],0x50
  404e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e4b:	cld    
  404e4c:	rol    DWORD PTR [edx-0x12],cl
  404e4f:	xor    BYTE PTR [ecx*4+0x7e2ee6ca],ah
  404e56:	sahf   
  404e57:	adc    dh,bh
  404e59:	into   
  404e5a:	out    dx,eax
  404e5b:	shl    eax,0x78
  404e5e:	sbb    eax,0x4bc7d84e
  404e63:	or     BYTE PTR [edi],dl
  404e65:	mov    esi,0xcb1ab66a
  404e6a:	imul   esi,DWORD PTR [edi],0x5e
  404e6d:	jmp    0x435f993a
  404e72:	push   eax
  404e73:	arpl   di,dx
  404e75:	retf   
  404e76:	adc    eax,0x9f9af045
  404e7b:	xlat   BYTE PTR ds:[ebx]
  404e7c:	mov    DWORD PTR gs:[edx+0x1b],ebp
  404e80:	mov    ebp,0x652884ef
  404e85:	mov    bh,0x39
  404e87:	inc    eax
  404e88:	(bad)  
  404e89:	cmp    bl,BYTE PTR [esi-0x2a]
  404e8c:	and    ah,bh
  404e8e:	xchg   ebp,eax
  404e8f:	lods   eax,DWORD PTR ds:[esi]
  404e90:	sbb    al,0x9b
  404e92:	pushf  
  404e93:	les    eax,FWORD PTR [edx]
  404e95:	and    eax,0xa3326095
  404e9a:	stc    
  404e9b:	push   ecx
  404e9c:	pop    ebx
  404e9d:	adc    esp,DWORD PTR [edi+ebx*4]
  404ea0:	sub    BYTE PTR [ecx-0x144f6bbd],dl
  404ea6:	sti    
  404ea7:	lods   eax,DWORD PTR fs:[esi]
  404ea9:	xchg   ecx,eax
  404eaa:	xchg   ecx,eax
  404eab:	dec    ecx
  404eac:	repz not DWORD PTR [edi+0xa]
  404eb0:	pushf  
  404eb1:	inc    ebx
  404eb2:	jbe    0x404e52
  404eb4:	enter  0x9ba0,0xea
  404eb8:	or     eax,0x2ddc944b
  404ebd:	xor    ebx,DWORD PTR gs:[esi]
  404ec0:	xor    BYTE PTR [edi-0x2b],dh
  404ec3:	cmp    DWORD PTR [ebx-0x6bb70658],edx
  404ec9:	mov    esp,esi
  404ecb:	ret    0x88aa
  404ece:	test   DWORD PTR [ebx-0x7],ebp
  404ed1:	jne    0x404ecb
  404ed3:	ja     0x404e6a
  404ed5:	mov    ecx,ebp
  404ed7:	mov    ebx,0xf1ed10e5
  404edc:	pop    esp
  404edd:	push   ds
  404ede:	or     DWORD PTR [ecx+0x2d],esp
  404ee1:	cmp    esi,DWORD PTR ds:0x60eb1ff8
  404ee7:	mov    ch,0xfa
  404ee9:	pop    eax
  404eea:	cmp    DWORD PTR [eax+ebp*2+0x21bf9166],esp
  404ef1:	sbb    DWORD PTR [ebx+ebx*2+0x190b3c65],edi
  404ef8:	mov    al,BYTE PTR [ebx-0x6b79c54b]
  404efe:	pop    eax
  404eff:	shl    BYTE PTR ds:0x8a2ba22a,1
  404f05:	ror    DWORD PTR [edx+0x26],1
  404f08:	dec    eax
  404f09:	cli    
  404f0a:	sub    BYTE PTR [edx],ch
  404f0c:	push   ecx
  404f0d:	add    BYTE PTR [ebx+ebx*8],0xf4
  404f11:	ds push eax
  404f13:	cmc    
  404f14:	fldcw  WORD PTR ds:0xaca1fc84
  404f1a:	xchg   al,al
  404f1c:	js     0x404f28
  404f1e:	sub    al,0x4d
  404f20:	bound  ecx,QWORD PTR [edi]
  404f22:	add    ebx,DWORD PTR [eax+0x59]
  404f25:	pop    es
  404f26:	push   edi
  404f27:	dec    ebp
  404f28:	pop    ds
  404f29:	adc    bl,BYTE PTR [ebp+0x14]
  404f2c:	and    BYTE PTR [ebx+0x518f84fa],0x9d
  404f33:	dec    ebp
  404f34:	jp     0x404f1b
  404f36:	mov    edx,0xa880d867
  404f3b:	inc    eax
  404f3c:	sahf   
  404f3d:	add    edx,ecx
  404f3f:	mov    dl,0xc7
  404f41:	mov    esp,ebx
  404f43:	pop    ss
  404f44:	pop    ebx
  404f45:	pop    ds
  404f46:	aas    
  404f47:	mov    ebp,0x453b7b9
  404f4c:	sub    eax,0x257a5b27
  404f51:	sub    ah,BYTE PTR [eax-0x742a5301]
  404f57:	pop    esi
  404f58:	sbb    BYTE PTR [ebx+ebx*4+0x15983bc9],0xa1
  404f60:	leave  
  404f61:	push   0xffffffe7
  404f63:	xlat   BYTE PTR ds:[ebx]
  404f64:	das    
  404f65:	xor    DWORD PTR [edx-0x3e8da3dd],edx
  404f6b:	imul   ebp,ebp,0xffffffef
  404f6e:	push   es
  404f6f:	loopne 0x404fe7
  404f71:	lahf   
  404f72:	jmp    0x9a48:0xe5f2a234
  404f79:	enter  0xbef1,0xb8
  404f7d:	fistp  QWORD PTR [edi]
  404f7f:	rcr    esi,cl
  404f81:	mov    DWORD PTR [ecx+0x625798df],edx
  404f87:	mov    cl,0x16
  404f89:	fiadd  WORD PTR [ebx+0x51]
  404f8c:	rcr    DWORD PTR [eax-0x7feccdbd],0xda
  404f93:	push   ss
  404f94:	retf   0x5bb7
  404f97:	mov    ch,0xd2
  404f99:	and    ebp,DWORD PTR [eax]
  404f9b:	cmp    ah,bl
  404f9d:	loopne 0x404f55
  404f9f:	loope  0x404f6e
  404fa1:	dec    eax
  404fa2:	vxorps ymm7,ymm2,YMMWORD PTR [esi]
  404fa6:	das    
  404fa7:	lods   eax,DWORD PTR ds:[esi]
  404fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa9:	das    
  404faa:	adc    BYTE PTR [edi],al
  404fac:	stc    
  404fad:	pop    ecx
  404fae:	mov    ah,0xbf
  404fb0:	jge    0x404fb4
  404fb2:	mov    BYTE PTR ds:0x8414839a,cl
  404fb8:	out    dx,al
  404fb9:	mov    edx,0x9909b8b8
  404fbe:	xchg   ah,dh
  404fc0:	fstp   TBYTE PTR ds:0xa16ec32f
  404fc6:	xor    DWORD PTR [esi+0x4f],ecx
  404fc9:	clc    
  404fca:	push   ebp
  404fcb:	mov    dx,fs
  404fce:	cmp    ecx,DWORD PTR [ecx+0xc]
  404fd1:	inc    eax
  404fd2:	xchg   esp,eax
  404fd3:	jge    0x405051
  404fd5:	push   eax
  404fd6:	dec    ecx
  404fd7:	shr    BYTE PTR [ebx],cl
  404fd9:	cmp    BYTE PTR es:[ecx-0x5ef219bc],0x8a
  404fe1:	dec    esi
  404fe2:	ds stos DWORD PTR es:[edi],eax
  404fe4:	inc    ecx
  404fe5:	push   0xffffffb7
  404fe7:	cli    
  404fe8:	mov    al,0x81
  404fea:	mov    eax,0x4568bb97
  404fef:	popf   
  404ff0:	iret   
  404ff1:	test   eax,0x3dc8cc15
  404ff6:	push   ss
  404ff7:	in     eax,0xd4
  404ff9:	adc    eax,0xa6337d7b
  404ffe:	push   cs
  404fff:	std    
  405000:	loop   0x404ffb
  405002:	xor    DWORD PTR [edi],ecx
  405004:	and    edx,DWORD PTR [eax]
  405006:	jg     0x404ff1
  405008:	sbb    ecx,DWORD PTR [eax-0x460ea893]
  40500e:	cmp    dh,ch
  405010:	pop    edx
  405011:	es mov esi,0x647055fc
  405017:	inc    ecx
  405018:	dec    esp
  405019:	or     ch,bl
  40501b:	and    eax,0xbf7f2c9f
  405020:	ret    0xb612
  405023:	inc    eax
  405024:	sub    BYTE PTR [ecx-0x78d6d8f3],bl
  40502a:	arpl   WORD PTR ds:0x2a2bed6b,di
  405030:	xor    ecx,DWORD PTR [esi+0x35]
  405033:	test   eax,0x47b041fb
  405038:	cmp    edx,ebx
  40503a:	pop    esp
  40503b:	cwde   
  40503c:	inc    ch
  40503e:	dec    ecx
  40503f:	imul   ecx,DWORD PTR [ebx],0x4cf24ca5
  405045:	push   cs
  405046:	jmp    0xbbad:0xad7d90fe
  40504d:	lock pushf 
  40504f:	inc    esi
  405050:	xor    dh,BYTE PTR [edx+ebp*1+0x21]
  405054:	daa    
  405055:	loope  0x40505e
  405057:	sub    ch,BYTE PTR [esi]
  405059:	pop    ebp
  40505a:	lods   al,BYTE PTR ds:[esi]
  40505b:	js     0x4050b1
  40505d:	xchg   ecx,eax
  40505e:	xchg   ebx,eax
  40505f:	inc    ebx
  405060:	jne    0x4050bf
  405062:	aad    0x52
  405064:	stos   DWORD PTR es:[edi],eax
  405065:	(bad)  
  405066:	scas   eax,DWORD PTR es:[edi]
  405067:	inc    ecx
  405068:	sub    eax,0x427a7dd5
  40506d:	add    eax,0x469ffb99
  405072:	and    ebx,DWORD PTR [eax+0x3]
  405075:	enter  0x335f,0xbe
  405079:	xchg   ebp,eax
  40507a:	into   
  40507b:	cwde   
  40507c:	mov    ch,0x74
  40507e:	and    dl,ah
  405080:	into   
  405081:	in     eax,0x26
  405083:	lods   al,BYTE PTR ds:[esi]
  405084:	mov    al,0x82
  405086:	call   0xc346:0xda99e244
  40508d:	mov    ch,0xf2
  40508f:	push   esp
  405090:	mov    esp,0xc8be48aa
  405095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405096:	loop   0x40503f
  405098:	repnz inc ebp
  40509a:	or     bh,cl
  40509c:	pop    edx
  40509d:	outs   dx,DWORD PTR ds:[esi]
  40509e:	repnz and DWORD PTR [ebp-0x5eb2a804],ecx
  4050a5:	xchg   edx,eax
  4050a6:	xchg   edi,eax
  4050a7:	adc    edi,DWORD PTR [eax]
  4050a9:	dec    ebp
  4050aa:	test   BYTE PTR [esi],dh
  4050ac:	mov    bh,0xcc
  4050ae:	iret   
  4050af:	jno    0x405095
  4050b1:	out    0x45,al
  4050b3:	push   ebp
  4050b4:	xor    DWORD PTR [eax-0x7f81cdf1],esp
  4050ba:	mov    cl,0x8f
  4050bc:	add    dl,dl
  4050be:	ficom  WORD PTR [edi-0x1c]
  4050c1:	cmp    BYTE PTR [eax-0x10],bh
  4050c4:	sbb    ebx,edx
  4050c6:	inc    esi
  4050c7:	xchg   esi,eax
  4050c8:	sub    bl,BYTE PTR [edi]
  4050ca:	push   0x68
  4050cc:	xor    BYTE PTR [esi+0x5f562cb4],al
  4050d2:	test   al,0xd5
  4050d4:	and    eax,esp
  4050d6:	inc    ecx
  4050d7:	push   0x2ac9dfff
  4050dc:	test   al,0xf2
  4050de:	and    al,BYTE PTR [ebx-0x46]
  4050e1:	stc    
  4050e2:	pop    edx
  4050e3:	or     bh,0x37
  4050e6:	pushf  
  4050e7:	(bad)  
  4050e8:	mov    ebp,0x71f251db
  4050ed:	xor    eax,0x58f91b3
  4050f2:	xchg   edx,eax
  4050f3:	ror    DWORD PTR [ecx],cl
  4050f5:	adc    BYTE PTR [ebx+0x67],al
  4050f8:	cmp    al,0x23
  4050fa:	jb     0x4050fa
  4050fc:	mov    al,ds:0xc909e7f9
  405101:	xchg   bl,bl
  405103:	das    
  405104:	stos   DWORD PTR es:[edi],eax
  405105:	push   es
  405106:	ret    0xae5f
  405109:	adc    eax,0x5f050c5f
  40510e:	ret    0x5939
  405111:	lock pop ebx
  405113:	bound  eax,QWORD PTR [ebx-0xa]
  405116:	int    0x8f
  405118:	sub    BYTE PTR [edi],al
  40511a:	shr    DWORD PTR [esi+eiz*1-0x7bf9bb5d],cl
  405121:	in     al,0x38
  405123:	jle    0x4050ce
  405125:	leave  
  405126:	iret   
  405127:	pop    edi
  405128:	icebp  
  405129:	std    
  40512a:	mov    ch,BYTE PTR [ecx]
  40512c:	xchg   esp,eax
  40512d:	push   cs
  40512e:	enter  0x436e,0xb0
  405132:	xchg   esp,eax
  405133:	jmp    0x405117
  405135:	fwait
  405136:	jmp    0x740e:0x7ca6d537
  40513d:	mov    ds:0xdcaa678f,eax
  405142:	pop    edx
  405143:	jp     0x40511a
  405145:	stos   DWORD PTR es:[edi],eax
  405146:	add    cl,0xb
  405149:	ret    
  40514a:	adc    BYTE PTR [esi-0xe],0xb1
  40514e:	lods   al,BYTE PTR ds:[esi]
  40514f:	xlat   BYTE PTR ds:[ebx]
  405150:	jmp    0xc15522fe
  405155:	(bad)  
  405156:	pop    eax
  405157:	adc    al,0xaa
  405159:	xchg   ecx,eax
  40515a:	cmp    ah,BYTE PTR [edx-0x2e991b41]
  405160:	jecxz  0x405184
  405162:	adc    BYTE PTR [ecx+0x7d],bh
  405165:	add    al,0x40
  405167:	repnz dec ebx
  405169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40516a:	inc    ebx
  40516b:	hlt    
  40516c:	adc    edx,DWORD PTR [edx+0x28]
  40516f:	xor    al,0xc0
  405171:	inc    edi
  405172:	std    
  405173:	sbb    eax,0x7c9080ff
  405178:	(bad)  
  405179:	cmc    
  40517a:	pop    ecx
  40517b:	xor    al,0x8c
  40517d:	or     cl,BYTE PTR [ecx+edx*2]
  405180:	pop    esi
  405181:	(bad)  
  405182:	in     al,dx
  405183:	das    
  405184:	shl    ecx,0xdf
  405187:	call   0xb8b8:0x4ba44370
  40518e:	in     eax,0x16
  405190:	mov    ds:0x352ace66,eax
  405195:	inc    edi
  405196:	call   0x2163:0xcb0228a5
  40519d:	pop    ss
  40519e:	add    DWORD PTR [edi],0x908e889e
  4051a4:	sub    al,BYTE PTR [eax+0x38]
  4051a7:	gs in  eax,0xbb
  4051aa:	xchg   DWORD PTR [esi-0xa],esp
  4051ad:	mov    eax,cs:0xe28d72fc
  4051b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b4:	into   
  4051b5:	rcr    DWORD PTR [ebp-0x75],1
  4051b8:	sub    al,0xf7
  4051ba:	dec    esi
  4051bb:	push   0xffffffea
  4051bd:	mov    ds:0xf2113123,al
  4051c2:	stos   BYTE PTR es:[edi],al
  4051c3:	jmp    0xf72d:0xaecdd1d1
  4051ca:	ins    BYTE PTR es:[edi],dx
  4051cb:	(bad)
  4051ce:	not    BYTE PTR [ecx]
  4051d0:	inc    esp
  4051d1:	out    0xea,al
  4051d3:	mov    al,0x7
  4051d5:	push   cs
  4051d6:	inc    eax
  4051d7:	clc    
  4051d8:	loop   0x4051a1
  4051da:	repnz pushf 
  4051dc:	out    0x2a,eax
  4051de:	inc    edx
  4051df:	sub    ch,al
  4051e1:	std    
  4051e2:	out    0xd,eax
  4051e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051e5:	add    DWORD PTR [edi],eax
  4051e7:	jmp    0x1831:0xd8fd9521
  4051ee:	loop   0x405192
  4051f0:	inc    ecx
  4051f1:	push   edx
  4051f2:	ins    DWORD PTR es:[edi],dx
  4051f3:	loop   0x405254
  4051f5:	pop    ebp
  4051f6:	xchg   DWORD PTR [esi*8-0x55f3e31a],esp
  4051fd:	retf   
  4051fe:	shr    BYTE PTR [edi+0xd],cl
  405201:	fdiv   DWORD PTR [ebx+eiz*1]
  405204:	test   DWORD PTR [edx+0x62],edx
  405207:	ror    ebx,cl
  405209:	push   ebp
  40520a:	mov    eax,0x2afd11d0
  40520f:	or     esi,DWORD PTR [eax]
  405211:	adc    ch,BYTE PTR [ecx-0x5f228bee]
  405217:	les    esp,FWORD PTR [ebp+ecx*2-0x59]
  40521b:	mov    ecx,0x9fa12e04
  405220:	mov    eax,DWORD PTR [esi]
  405222:	xor    eax,ebx
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x24094ee
  405804:	inc    ecx
  405805:	sbb    eax,esp
  405807:	pop    edi
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	jmp    0xa727:0x233607d8
  405815:	dec    eax
  405816:	cmp    al,0xec
  405818:	rol    esp,1
  40581a:	inc    esi
  40581b:	cmp    eax,0x6650678e
  405820:	jns    0x4057a3
  405822:	inc    edi
  405823:	(bad)  
  405824:	fdivr  DWORD PTR [eax+edx*2-0x1a]
  405828:	popa   
  405829:	pop    edi
  40582a:	pop    edi
  40582b:	push   es
  40582c:	inc    esi
  40582d:	in     eax,dx
  40582e:	jb     0x4057ec
  405830:	dec    edi
  405831:	data16 add al,BYTE PTR [ecx-0x393fae7d]
  405838:	mov    eax,ds:0xf8458cd
  40583d:	mov    ebx,DWORD PTR ds:0x95bc73df
  405843:	pusha  
  405844:	sbb    al,dh
  405846:	aas    
  405847:	mov    dh,0x7a
  405849:	sbb    al,dl
  40584b:	repnz arpl WORD PTR [esi+edi*8+0x3d],dx
  405850:	cmc    
  405851:	fsub   DWORD PTR [ecx+0x330a92ca]
  405857:	test   DWORD PTR [edi],esi
  405859:	cdq    
  40585a:	xchg   ebx,eax
  40585b:	clc    
  40585c:	retf   
  40585d:	ret    0xc2b7
  405860:	test   DWORD PTR fs:[ebx],edi
  405863:	xchg   ecx,eax
  405864:	inc    ecx
  405865:	fnstenv [edi-0x39d5510c]
  40586b:	add    cl,bh
  40586d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40586f:	mov    ch,0x66
  405871:	jl     0x40589b
  405873:	out    0x61,al
  405875:	mov    esp,0xdd3e220d
  40587a:	push   ebp
  40587b:	cmp    eax,0x7e912765
  405880:	ror    DWORD PTR [ebx+0xeabe2f3],cl
  405886:	shr    ah,cl
  405888:	push   esp
  405889:	xor    BYTE PTR [ecx+0x7e8a3a89],cl
  40588f:	sub    DWORD PTR [esi+eiz*8],ecx
  405892:	pushw  ss
  405894:	cmc    
  405895:	push   es
  405896:	nop
  405897:	pop    eax
  405898:	enter  0x1a7f,0xb5
  40589c:	mov    ds:0x9b775125,al
  4058a1:	pushf  
  4058a2:	push   cs
  4058a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a4:	sbb    BYTE PTR [esi+0x730cfc6c],bh
  4058aa:	cmp    ebx,edx
  4058ac:	lea    ecx,[ebx-0x4d]
  4058af:	in     al,0x52
  4058b1:	std    
  4058b2:	cmp    edi,DWORD PTR [ecx+0x2dc69329]
  4058b8:	mov    bh,0x84
  4058ba:	and    cl,ah
  4058bc:	xor    al,0x89
  4058be:	enter  0xa927,0x2c
  4058c2:	dec    edx
  4058c3:	sub    BYTE PTR [ecx+0x5eb86944],0x4c
  4058ca:	(bad)  
  4058cb:	dec    edi
  4058cc:	out    dx,al
  4058cd:	xor    al,BYTE PTR [eax-0x13]
  4058d0:	and    ebx,ebx
  4058d2:	and    al,0xa4
  4058d4:	sbb    al,0x9f
  4058d6:	mov    esp,0xa8eb8f2c
  4058db:	out    dx,eax
  4058dc:	not    ah
  4058de:	icebp  
  4058df:	or     ch,dh
  4058e1:	cld    
  4058e2:	sub    esi,DWORD PTR [esi-0x422a5539]
  4058e8:	enter  0x661d,0x22
  4058ec:	push   es
  4058ed:	xor    DWORD PTR [edi-0x692d63a7],0x4e
  4058f4:	imul   esp,DWORD PTR [ebx+0x5a505072],0xaccf583d
  4058fe:	in     eax,0x58
  405900:	pop    ebp
  405901:	out    0x4d,al
  405903:	mov    al,0xff
  405905:	mov    WORD PTR [ebx],?
  405907:	fcomp  DWORD PTR [ebx+0x72]
  40590a:	fsub   DWORD PTR [edx]
  40590c:	inc    edi
  40590d:	xor    eax,0x9a81705
  405912:	pop    edx
  405913:	jecxz  0x4058ef
  405915:	push   ebx
  405916:	loopne 0x40598b
  405918:	mov    ds:0xd0048f62,eax
  40591d:	imul   eax,ebx,0xfffffffa
  405920:	imul   esp,DWORD PTR [esi+0x29],0x7bd24018
  405927:	aad    0x64
  405929:	nop
  40592a:	ss add dh,dl
  40592d:	fs pop ebx
  40592f:	popa   
  405930:	mov    al,ds:0x81ab9bc0
  405935:	sahf   
  405936:	sbb    al,0xa4
  405938:	fwait
  405939:	cmp    BYTE PTR [ecx],ch
  40593b:	inc    ebp
  40593c:	add    ah,ch
  40593e:	pop    ds
  40593f:	mov    ecx,0x2a332dda
  405944:	std    
  405945:	adc    eax,0x18c9cc88
  40594a:	(bad)  
  40594b:	mov    esi,0x6c4b7968
  405950:	xchg   ecx,eax
  405951:	pusha  
  405952:	rol    BYTE PTR [edx],0x47
  405955:	clc    
  405956:	into   
  405957:	mov    ebx,DWORD PTR [ebx-0x5e]
  40595a:	shl    DWORD PTR es:[edx],0xf6
  40595e:	dec    ecx
  40595f:	jge    0x405967
  405961:	xchg   ecx,eax
  405962:	mov    bh,0xcb
  405964:	push   ebp
  405966:	repz pop esp
  405968:	jae    0x4059b8
  40596a:	jp     0x405941
  40596c:	xchg   BYTE PTR [ebp-0x216404a3],al
  405972:	jecxz  0x405917
  405974:	xchg   DWORD PTR [ebx-0x50],ebx
  405977:	cmp    dh,cl
  405979:	retf   0x5abb
  40597c:	int3   
  40597d:	inc    esp
  40597e:	mov    ebx,0x70fb91db
  405983:	jecxz  0x405962
  405985:	add    edi,0x8d683bf
  40598b:	sbb    al,0x20
  40598d:	repz xlat BYTE PTR ds:[ebx]
  40598f:	adc    dh,al
  405991:	call   0xf14e88ad
  405996:	push   ebx
  405997:	dec    DWORD PTR ds:0x8d80f89e
  40599d:	sub    eax,0xe69cc2f1
  4059a2:	mov    esp,0xed2be659
  4059a7:	and    DWORD PTR [eax+edi*8+0x48a0a24f],0x1214da49
  4059b2:	pusha  
  4059b3:	adc    edx,DWORD PTR [edx+0x4544388f]
  4059b9:	xchg   ebp,eax
  4059ba:	pushf  
  4059bb:	cmp    BYTE PTR [edx],bh
  4059bd:	ret    
  4059be:	jae    0x40597e
  4059c0:	dec    esp
  4059c1:	lods   al,BYTE PTR ds:[esi]
  4059c2:	xchg   esi,eax
  4059c3:	cwde   
  4059c4:	or     ch,BYTE PTR [ebp+edx*2+0x63]
  4059c8:	in     al,0x97
  4059ca:	sub    edi,esi
  4059cc:	sub    DWORD PTR [ecx],esi
  4059ce:	scas   eax,DWORD PTR es:[edi]
  4059cf:	mov    WORD PTR [ebx-0x5f281728],gs
  4059d5:	out    dx,al
  4059d6:	add    ecx,esp
  4059d8:	xchg   ebx,eax
  4059d9:	push   0xd7d07f8a
  4059de:	adc    BYTE PTR [ebp-0x5e],cl
  4059e1:	ficomp WORD PTR [ebx+0x7e84ca22]
  4059e7:	or     BYTE PTR [ebx+edx*1],dl
  4059ea:	sti    
  4059eb:	pop    eax
  4059ec:	xchg   esi,eax
  4059ed:	stc    
  4059ee:	jecxz  0x4059da
  4059f0:	or     BYTE PTR [esi-0x23],dh
  4059f3:	push   ecx
  4059f4:	inc    eax
  4059f5:	cmovne edx,DWORD PTR [ebx+0x7612c24a]
  4059fc:	test   al,0xd4
  4059fe:	cvtdq2ps xmm7,xmm3
  405a01:	scas   al,BYTE PTR es:[edi]
  405a02:	jno    0x4059bd
  405a04:	inc    ebp
  405a05:	or     edi,DWORD PTR [edi]
  405a07:	jle    0x405a3f
  405a09:	pop    ss
  405a0a:	inc    esp
  405a0b:	popa   
  405a0c:	sbb    eax,0x54cf3245
  405a11:	mov    esi,0xd31a5725
  405a16:	cmp    dh,bh
  405a18:	add    al,0x4
  405a1a:	pop    ds
  405a1b:	xchg   ebp,eax
  405a1c:	or     bl,dh
  405a1e:	adc    DWORD PTR [esi+0x239bef72],esp
  405a24:	mov    ebp,0x5e4390a6
  405a29:	and    BYTE PTR [edx+ebx*2+0x7b],dl
  405a2d:	inc    ecx
  405a2e:	ja     0x405a17
  405a30:	sbb    DWORD PTR [edx-0x4c],0xffffffc4
  405a34:	cmp    al,0xa6
  405a36:	cmp    BYTE PTR [ecx],bl
  405a38:	test   DWORD PTR [eax-0x6c5dc6b5],esp
  405a3e:	scas   al,BYTE PTR es:[edi]
  405a3f:	mov    ss,WORD PTR [edi]
  405a41:	outs   dx,DWORD PTR ds:[esi]
  405a42:	inc    eax
  405a43:	(bad)  
  405a45:	loop   0x405a12
  405a47:	dec    edi
  405a48:	data16 ja 0x405a33
  405a4b:	(bad)  
  405a4c:	call   0x890e0c83
  405a51:	(bad)  
  405a52:	mov    ebx,0xf69da25c
  405a57:	mov    cl,0x69
  405a59:	(bad)  
  405a5a:	cmp    DWORD PTR [eax-0x59f2453d],ecx
  405a60:	xchg   esp,eax
  405a61:	mov    ds:0x9c083ef6,eax
  405a66:	in     eax,dx
  405a67:	inc    ecx
  405a68:	cdq    
  405a69:	lahf   
  405a6a:	sbb    eax,edi
  405a6c:	cs shl bh,0x70
  405a70:	xor    DWORD PTR [eax+0x640535a4],esi
  405a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a77:	jmp    0xe85689e7
  405a7c:	je     0x405a93
  405a7e:	in     eax,dx
  405a7f:	inc    esi
  405a80:	pop    ds
  405a81:	data16 sar BYTE PTR [eax-0x66],0xa2
  405a86:	(bad)  
  405a87:	mov    bl,0x96
  405a89:	push   edx
  405a8a:	sar    BYTE PTR [edx-0x49958a1b],cl
  405a90:	and    edx,ebx
  405a92:	xor    al,0x60
  405a94:	ins    DWORD PTR es:[edi],dx
  405a95:	pop    esp
  405a96:	inc    edx
  405a97:	cwde   
  405a98:	dec    ebx
  405a99:	lahf   
  405a9a:	sbb    ch,0x2a
  405a9d:	adc    BYTE PTR [edi-0x3b],0xc
  405aa1:	fadd   DWORD PTR [edx-0x38d72c19]
  405aa7:	push   esp
  405aa8:	jb     0x405b13
  405aaa:	popf   
  405aab:	sub    ah,BYTE PTR [edx-0x33]
  405aae:	sbb    BYTE PTR [eax+0x6208a5ea],al
  405ab4:	test   BYTE PTR [ebp+0x36b10d08],bh
  405aba:	out    0x90,al
  405abc:	sub    cl,al
  405abe:	xchg   ebx,eax
  405abf:	adc    BYTE PTR fs:[esi+0x40],0x18
  405ac4:	cdq    
  405ac5:	cmp    DWORD PTR [ebx-0x260df29a],edx
  405acb:	mov    al,ds:0xef500c1a
  405ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad1:	lea    ebx,[ebx+0x77f7fac8]
  405ad7:	and    BYTE PTR [ebp-0x2a557edb],ch
  405add:	fdivr  DWORD PTR [edx+0x5d]
  405ae0:	adc    al,0xe9
  405ae2:	mov    WORD PTR [edx-0x168cbe9a],gs
  405ae8:	cmc    
  405ae9:	jecxz  0x405b26
  405aeb:	inc    esp
  405aec:	popf   
  405aed:	lock icebp 
  405aef:	popf   
  405af0:	push   ss
  405af1:	pop    ebp
  405af2:	mov    ah,0x6d
  405af4:	mov    DWORD PTR [esi+0x6e],0xa9858471
  405afb:	sahf   
  405afc:	fdiv   QWORD PTR [esi]
  405afe:	push   cs
  405aff:	sub    ch,0x40
  405b02:	pop    es
  405b03:	dec    ebp
  405b04:	ins    BYTE PTR es:[edi],dx
  405b05:	jle    0x405ade
  405b07:	inc    ecx
  405b08:	jne    0x405b43
  405b0a:	fwait
  405b0b:	sbb    eax,0xcdfa2609
  405b10:	bound  edi,QWORD PTR [edx+0x68cc80cc]
  405b16:	inc    ecx
  405b17:	xor    edx,0x75fbccae
  405b1d:	loope  0x405b0e
  405b1f:	mov    ch,0xea
  405b21:	adc    ch,ah
  405b23:	fdiv   st(7),st
  405b25:	jno    0x405b5e
  405b27:	or     cl,BYTE PTR gs:[ecx]
  405b2a:	mov    WORD PTR [edx],fs
  405b2c:	fidivr WORD PTR [edi+0x79]
  405b2f:	jmp    0xce06:0xa0dd419e
  405b36:	int    0x98
  405b38:	mov    esi,0x726215b
  405b3d:	xchg   edx,eax
  405b3e:	and    dh,BYTE PTR [esi]
  405b40:	and    BYTE PTR [ebx+ebx*4],0x22
  405b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b45:	aas    
  405b46:	or     edi,DWORD PTR [esi]
  405b48:	mov    bl,BYTE PTR [ebx+0x4b]
  405b4b:	ds pop edi
  405b4d:	shr    BYTE PTR [edi+0x243b4a93],0x8b
  405b54:	mov    ch,0xe4
  405b56:	sar    DWORD PTR [eax+0xd],1
  405b59:	stos   BYTE PTR es:[edi],al
  405b5a:	(bad)  
  405b5b:	mov    edx,0x79586106
  405b60:	bound  ebp,QWORD PTR [esi+ecx*8+0x1d]
  405b64:	mov    eax,ds:0x450c764
  405b69:	lods   al,BYTE PTR ds:[esi]
  405b6a:	or     bh,dh
  405b6c:	test   eax,0x7a72d5d9
  405b71:	jno    0x405bd5
  405b73:	dec    ebp
  405b74:	xchg   ebx,eax
  405b75:	aam    0x65
  405b77:	scas   eax,DWORD PTR es:[edi]
  405b78:	xor    esi,DWORD PTR [ebx+0x72a17a97]
  405b7e:	hlt    
  405b7f:	xor    eax,0x54b02bec
  405b84:	push   esp
  405b85:	(bad)  
  405b86:	icebp  
  405b87:	dec    ecx
  405b88:	sbb    esi,0xebdf5224
  405b8e:	inc    edi
  405b8f:	pop    ds
  405b90:	cmp    ebx,esp
  405b92:	rcr    BYTE PTR [eax],cl
  405b94:	xchg   ecx,eax
  405b95:	(bad)  
  405b97:	mov    ds:0x14965e71,al
  405b9c:	mov    ebp,0x1a191d70
  405ba1:	sar    edx,0x14
  405ba4:	or     eax,0x2f912385
  405ba9:	jno    0x405c17
  405bab:	mov    DWORD PTR [ebx],ebp
  405bad:	mov    dh,0xf7
  405baf:	jg     0x405b98
  405bb1:	push   esp
  405bb2:	inc    ecx
  405bb3:	int    0xb6
  405bb5:	loope  0x405b59
  405bb7:	or     eax,0xdcbc5efd
  405bbc:	stc    
  405bbd:	(bad)  
  405bbe:	cmp    al,0xad
  405bc0:	ins    DWORD PTR es:[edi],dx
  405bc1:	mov    bh,0xd
  405bc3:	aas    
  405bc4:	and    eax,ebx
  405bc6:	ja     0x405c10
  405bc8:	leave  
  405bc9:	xchg   cl,ch
  405bcb:	jns    0x405c32
  405bcd:	pusha  
  405bce:	jecxz  0x405c33
  405bd0:	test   ch,al
  405bd2:	jmp    0xe460:0x42844f28
  405bd9:	mov    eax,ds:0x78242684
  405bde:	loope  0x405c1f
  405be0:	xchg   ebp,eax
  405be1:	xchg   BYTE PTR [eax],ah
  405be3:	call   eax
  405be5:	push   ecx
  405be6:	push   esi
  405be7:	dec    edi
  405be8:	adc    DWORD PTR [ebp+0x73d526b6],ebp
  405bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bef:	inc    esi
  405bf0:	iret   
  405bf1:	ror    DWORD PTR [esp+eiz*4-0x8cde7ba],1
  405bf8:	mov    bl,dl
  405bfa:	jno    0x405b91
  405bfc:	cld    
  405bfd:	aam    0x49
  405bff:	mov    bh,0x63
  405c01:	add    eax,0x5211daf7
  405c06:	in     al,0xa6
  405c08:	or     BYTE PTR [ebx-0x78],dl
  405c0b:	cmp    bh,BYTE PTR [esi]
  405c0d:	adc    dl,0xa6
  405c10:	jmp    0x405c6c
  405c12:	sbb    edx,DWORD PTR [esi+0x4d29bfdc]
  405c18:	test   DWORD PTR [ebx-0x3b8796e6],edi
  405c1e:	push   edi
  405c1f:	adc    edx,ebp
  405c21:	pop    edx
  405c22:	pop    ss
  405c23:	cmp    al,0xf7
  405c25:	or     edx,DWORD PTR [ebp+0x23620287]
  405c2b:	lahf   
  405c2c:	xchg   BYTE PTR [esi+esi*2],bl
  405c2f:	mov    DWORD PTR [eax-0x3e],edx
  405c32:	inc    edx
  405c33:	retf   
  405c34:	jne    0x405ca0
  405c36:	sub    al,0x8c
  405c38:	stos   DWORD PTR es:[edi],eax
  405c39:	ins    DWORD PTR es:[edi],dx
  405c3a:	xchg   DWORD PTR [esi+0x12036be6],esp
  405c40:	mov    esp,0x4d46b63f
  405c45:	mov    cl,0xba
  405c47:	inc    edx
  405c48:	test   eax,0x3700398a
  405c4d:	pop    edi
  405c4e:	push   ebp
  405c4f:	arpl   WORD PTR [ebp-0x6fa78aef],cx
  405c55:	xor    esi,DWORD PTR [edi+eax*1-0x71]
  405c59:	mov    ebp,0x71fee634
  405c5e:	dec    edi
  405c5f:	adc    BYTE PTR [ebp+0x5f],dh
  405c62:	int    0x74
  405c64:	push   es
  405c65:	xor    cl,cl
  405c67:	jne    0x405ca4
  405c69:	and    ecx,ebx
  405c6b:	push   es
  405c6c:	add    bl,BYTE PTR [ebp-0x31c92804]
  405c72:	and    eax,0x3d122911
  405c77:	les    ebp,FWORD PTR ds:0xf2336d01
  405c7d:	xchg   edx,eax
  405c7e:	ds lahf 
  405c80:	sbb    al,dh
  405c82:	dec    ecx
  405c83:	rol    BYTE PTR [esi+0x6c],cl
  405c86:	jp     0x405cdb
  405c88:	xor    eax,0x43fafcde
  405c8d:	inc    ecx
  405c8e:	xchg   esi,eax
  405c8f:	push   0xc4a941d6
  405c94:	fldenv [edx]
  405c96:	fs out 0x25,eax
  405c99:	jge    0x405ce7
  405c9b:	rol    DWORD PTR [ecx+0x4c9843bc],cl
  405ca1:	sub    al,0x76
  405ca3:	cmc    
  405ca4:	in     al,0x6e
  405ca6:	or     DWORD PTR [esi],edx
  405ca8:	ins    DWORD PTR es:[edi],dx
  405ca9:	push   ebx
  405caa:	nop
  405cab:	jns    0x405d0c
  405cad:	iret   
  405cae:	jle    0x405c4e
  405cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cb1:	outs   dx,BYTE PTR ds:[esi]
  405cb2:	gs adc eax,0x5060edda
  405cb8:	pop    esp
  405cb9:	jl     0x405c8c
  405cbb:	mov    bh,BYTE PTR [edx]
  405cbd:	sar    edi,cl
  405cbf:	pop    es
  405cc0:	inc    ebp
  405cc1:	sub    ebp,DWORD PTR [edi-0x27]
  405cc4:	pop    edi
  405cc5:	mov    ah,0xeb
  405cc7:	sbb    ecx,esi
  405cc9:	div    ebx
  405ccb:	xchg   eax,edi
  405ccd:	les    edx,FWORD PTR [ebp+edx*4-0x35]
  405cd1:	or     eax,0x972bdc94
  405cd6:	movaps XMMWORD PTR [ebx],xmm1
  405cd9:	push   ss
  405cda:	mov    dh,0x80
  405cdc:	div    BYTE PTR [ebx+0x36]
  405cdf:	jmp    0x91a4:0x7ced4dc7
  405ce6:	and    al,0xc0
  405ce8:	fidivr DWORD PTR [edx+eax*8]
  405ceb:	sti    
  405cec:	jp     0x405d62
  405cee:	or     DWORD PTR [ecx-0x3c],eax
  405cf1:	scas   al,BYTE PTR es:[edi]
  405cf2:	sbb    bh,dl
  405cf4:	pop    ecx
  405cf5:	and    ecx,ebp
  405cf7:	cmp    eax,0x93c7b4da
  405cfc:	retf   0xf267
  405cff:	pusha  
  405d00:	clc    
  405d01:	icebp  
  405d02:	dec    ebp
  405d03:	mov    eax,0xde1bcd64
  405d08:	aaa    
  405d09:	inc    eax
  405d0a:	cwde   
  405d0b:	mov    eax,DWORD PTR [ebx]
  405d0d:	or     ebx,DWORD PTR [esi+0x6b3a14ba]
  405d13:	sub    BYTE PTR [ecx-0x1f],bl
  405d16:	mov    edx,0x7fb16d0e
  405d1b:	ror    BYTE PTR ds:0x1f5ce419,1
  405d21:	xchg   edi,eax
  405d22:	adc    BYTE PTR [edx-0x3e],dh
  405d25:	xor    dl,BYTE PTR [edx-0x7ae67d86]
  405d2b:	push   ebp
  405d2c:	mov    dh,0x26
  405d2e:	std    
  405d2f:	ins    DWORD PTR es:[edi],dx
  405d30:	sti    
  405d31:	or     eax,0x10c942ae
  405d36:	rol    DWORD PTR [ecx+0x23],0x4
  405d3a:	mov    eax,0x4041fa99
  405d3f:	daa    
  405d40:	fnstsw WORD PTR [esi+0x3a]
  405d43:	sbb    al,BYTE PTR [esp+esi*8-0xbc6d3ff]
  405d4a:	adc    al,0x1a
  405d4c:	mov    BYTE PTR [ebx+0x56d6ff43],dl
  405d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d53:	test   ch,cl
  405d55:	and    esi,ebp
  405d57:	pop    es
  405d58:	pop    ds
  405d59:	adc    eax,0x7a3a5854
  405d5e:	mov    WORD PTR [ecx-0x53c6a051],gs
  405d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d65:	call   0xd8456c63
  405d6a:	aad    0xef
  405d6c:	or     ebp,0xe8f689a9
  405d72:	clc    
  405d73:	bound  esp,QWORD PTR [ecx-0x10]
  405d76:	out    0x97,eax
  405d78:	cli    
  405d79:	loopne 0x405d10
  405d7b:	and    al,dl
  405d7d:	dec    ebx
  405d7e:	xchg   BYTE PTR es:0xdcdc1036,bl
  405d85:	xchg   esi,eax
  405d86:	pop    ds
  405d87:	arpl   WORD PTR [ebx],si
  405d89:	ss ret 
  405d8b:	push   esp
  405d8c:	ror    DWORD PTR [edi],cl
  405d8e:	cld    
  405d8f:	and    dl,BYTE PTR ds:[edi-0x1f437154]
  405d96:	pop    eax
  405d97:	xchg   esi,eax
  405d98:	iret   
  405d99:	sub    BYTE PTR [esi],ah
  405d9b:	jg     0x405e14
  405d9d:	jle    0x405dfb
  405d9f:	loopne 0x405d96
  405da1:	cdq    
  405da2:	pop    ecx
  405da3:	and    al,bl
  405da5:	and    al,0xc3
  405da7:	(bad)  
  405da8:	mov    esi,0x2a1264e7
  405dad:	jg     0x405dbf
  405daf:	cld    
  405db0:	out    dx,al
  405db1:	nop
  405db2:	mov    BYTE PTR [edx+0x60],ah
  405db5:	adc    al,0x3b
  405db7:	fptan  
  405db9:	adc    eax,DWORD PTR [eax+0x72e8700f]
  405dbf:	cmp    ecx,DWORD PTR [ebx]
  405dc1:	daa    
  405dc2:	inc    esi
  405dc3:	loop   0x405dba
  405dc5:	call   0xcdb1070f
  405dca:	sub    bh,BYTE PTR ss:[edx+ebx*8+0x1b]
  405dcf:	nop
  405dd0:	das    
  405dd1:	pop    ebx
  405dd2:	out    0x28,eax
  405dd4:	add    eax,DWORD PTR [ebp-0x1a4370]
  405dda:	div    DWORD PTR [esi+0x45]
  405ddd:	mov    ecx,0x3614d63c
  405de2:	inc    ebx
  405de3:	loop   0x405dab
  405de5:	aam    0x65
  405de7:	rol    ebx,1
  405de9:	jo     0x405dd8
  405deb:	and    eax,0x1c92e7d6
  405df0:	hlt    
  405df1:	je     0x405e59
  405df3:	sub    al,0x4
  405df5:	add    esp,DWORD PTR [ecx-0x5df2f6d8]
  405dfb:	dec    ebp
  405dfc:	fldpi  
  405dfe:	stc    
  405dff:	cld    
  405e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e01:	scas   al,BYTE PTR es:[edi]
  405e02:	mov    ebx,0x35c28168
  405e07:	shr    BYTE PTR [ebx+0x318503f],0xe7
  405e0e:	push   edi
  405e0f:	popa   
  405e10:	sub    al,ah
  405e12:	or     al,0x8a
  405e14:	pop    edi
  405e15:	push   eax
  405e16:	ss cli 
  405e18:	mov    ebx,0x5c773e07
  405e1d:	inc    esp
  405e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e1f:	rcl    BYTE PTR [ebx+0x79],1
  405e22:	adc    eax,0x6784ef5b
  405e27:	daa    
  405e28:	fadd   st(4),st
  405e2a:	push   esi
  405e2b:	pop    ds
  405e2c:	adc    eax,0x5e0d1532
  405e31:	sbb    edx,DWORD PTR [esi]
  405e33:	push   esp
  405e34:	mov    dl,0x9c
  405e36:	inc    edi
  405e37:	mov    edi,edx
  405e39:	xor    eax,DWORD PTR [ecx]
  405e3b:	mov    BYTE PTR [eax+0x9],ah
  405e3e:	lea    ecx,[edi-0x6a]
  405e41:	cld    
  405e42:	inc    edi
  405e43:	adc    DWORD PTR [ebp+0x77],ecx
  405e46:	sub    DWORD PTR [esi],0x833912a3
  405e4c:	cmp    BYTE PTR [eax+0x1c3baeb4],ah
  405e52:	clc    
  405e53:	xor    edx,DWORD PTR [ecx+0x58bb403b]
  405e59:	loopne 0x405ead
  405e5b:	push   ds
  405e5c:	(bad)  
  405e5d:	push   cs
  405e5e:	(bad)  
  405e5f:	adc    ah,BYTE PTR [esi+0x4a07608a]
  405e65:	(bad)  
  405e66:	sub    DWORD PTR [ebp-0x54],eax
  405e69:	mov    eax,0x9de2ee20
  405e6e:	jno    0x405e89
  405e70:	mov    ebx,0x833bdb9d
  405e75:	call   DWORD PTR [esi-0x1]
  405e78:	or     al,0x6b
  405e7a:	cmp    esp,DWORD PTR [edi]
  405e7c:	jo     0x405e3c
  405e7e:	daa    
  405e7f:	push   esi
  405e80:	retf   0x37ce
  405e83:	adc    dl,BYTE PTR [eax]
  405e85:	pop    edx
  405e86:	imul   dh
  405e88:	out    dx,al
  405e89:	sub    al,0xff
  405e8b:	popa   
  405e8c:	and    al,0x4
  405e8e:	or     esp,ebx
  405e90:	clc    
  405e91:	pop    esi
  405e92:	in     al,0x55
  405e94:	lea    edi,[edx-0x32]
  405e97:	fadd   DWORD PTR ds:0x5159a2bd
  405e9d:	stc    
  405e9e:	ins    DWORD PTR es:[edi],dx
  405e9f:	ins    BYTE PTR es:[edi],dx
  405ea0:	sub    BYTE PTR ds:0x33aa15e6,al
  405ea6:	add    DWORD PTR [edi],eax
  405ea8:	mov    ecx,0x5b709eac
  405ead:	fsubr  st,st(7)
  405eaf:	repnz daa 
  405eb1:	or     BYTE PTR [edi+eax*8-0x7273b9cd],0xfe
  405eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eba:	in     al,0x2
  405ebc:	js     0x405f00
  405ebe:	lock mov al,0x2e
  405ec1:	jmp    0xfa3d4a21
  405ec6:	sub    al,BYTE PTR [edi]
  405ec8:	xchg   edx,eax
  405ec9:	ja     0x405e83
  405ecb:	xchg   edx,eax
  405ecc:	mov    ch,0xba
  405ece:	ds mov ecx,0x36cfe1e
  405ed4:	loop   0x405e75
  405ed6:	or     dl,BYTE PTR [eax+0x11725077]
  405edc:	dec    esi
  405edd:	mov    eax,0x29169b87
  405ee2:	repz jnp 0x405ee7
  405ee5:	das    
  405ee6:	add    BYTE PTR [eax+eiz*1],ch
  405ee9:	and    ch,BYTE PTR [ebx+edx*2+0x70]
  405eed:	mov    esp,0x833c0474
  405ef2:	jne    0x405f1b
  405ef4:	out    dx,al
  405ef5:	ficom  DWORD PTR [eiz*8-0x7e611985]
  405efc:	or     BYTE PTR [eax+esi*8+0x9],bl
  405f00:	(bad)  
  405f01:	cld    
  405f02:	xor    edi,esi
  405f04:	fidiv  DWORD PTR [eax]
  405f06:	and    BYTE PTR [edx-0x44],cl
  405f09:	fiadd  WORD PTR [ebp-0xdb1e5ce]
  405f0f:	push   ss
  405f10:	jmp    0x55d2:0xe4bd7dce
  405f17:	in     al,0x79
  405f19:	cmp    ecx,DWORD PTR [ecx+0x69]
  405f1c:	into   
  405f1d:	sahf   
  405f1e:	xchg   ecx,eax
  405f1f:	xchg   ebp,eax
  405f20:	fnsave [esi]
  405f22:	mov    BYTE PTR [ebp-0x29],ch
  405f25:	mov    DWORD PTR [ecx+0x3f],0x45641dcd
  405f2c:	dec    edi
  405f2d:	loopne 0x405f32
  405f2f:	inc    edx
  405f30:	mov    DWORD PTR [edx-0x6eabe88f],edx
  405f36:	loopne 0x405ee3
  405f38:	popf   
  405f39:	fwait
  405f3a:	cmp    esp,DWORD PTR [esi]
  405f3c:	in     al,dx
  405f3d:	fidiv  WORD PTR [edi]
  405f3f:	dec    edi
  405f40:	mov    cs,WORD PTR [edx]
  405f42:	pop    esp
  405f43:	sub    BYTE PTR [ebx-0x20],al
  405f46:	sbb    BYTE PTR [esi-0x52e61b6e],al
  405f4c:	pop    ss
  405f4d:	push   ebp
  405f4e:	pop    ss
  405f4f:	pop    esi
  405f50:	(bad)  
  405f52:	aad    0xcb
  405f54:	xchg   ebx,eax
  405f55:	lods   eax,DWORD PTR ds:[esi]
  405f56:	mov    ebp,0x4da22ab0
  405f5b:	out    0x1b,eax
  405f5d:	pop    ebp
  405f5e:	in     al,dx
  405f5f:	mov    esi,0xb02de66d
  405f64:	sar    DWORD PTR [esi+ebx*1],1
  405f67:	out    dx,al
  405f68:	and    al,0xf6
  405f6a:	imul   edx,DWORD PTR [eax],0x55b32c6f
  405f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f71:	inc    ebp
  405f72:	jo     0x405f1c
  405f74:	mov    ds:0x5edb4dec,al
  405f79:	mov    edi,DWORD PTR [esi-0x466b1489]
  405f7f:	mov    ah,0x9b
  405f81:	(bad)
  405f85:	dec    edx
  405f86:	sbb    dh,BYTE PTR [edx+0x54934e17]
  405f8c:	test   BYTE PTR [ecx+0x6c3f6422],al
  405f92:	out    dx,al
  405f93:	or     ah,bl
  405f95:	(bad)  
  405f96:	jle    0x405f23
  405f98:	shl    BYTE PTR [eax-0x35e87ea5],cl
  405f9e:	adc    edi,DWORD PTR [eax+0x21]
  405fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa2:	add    al,0x5e
  405fa4:	xor    edi,DWORD PTR [eax]
  405fa6:	mov    DWORD PTR ds:0x1df61147,eax
  405fac:	mov    esi,0x8916a409
  405fb1:	fisubr WORD PTR [edi+0x3de3226f]
  405fb7:	jbe    0x405fc7
  405fb9:	test   eax,0x5864715b
  405fbe:	lahf   
  405fbf:	out    dx,eax
  405fc0:	je     0x405ff9
  405fc2:	mov    dl,0x75
  405fc4:	mov    WORD PTR [eax+0x417533b2],ds
  405fca:	sub    DWORD PTR [esi+0x4],ecx
  405fcd:	jb     0x406034
  405fcf:	mov    ds:0xb65c181b,al
  405fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd5:	shr    bh,cl
  405fd7:	ficomp WORD PTR [ecx+0x1599417e]
  405fdd:	iret   
  405fde:	xchg   BYTE PTR [eax],cl
  405fe0:	mov    bh,0x64
  405fe2:	retf   
  405fe3:	into   
  405fe4:	bound  ebp,QWORD PTR [ebx+0x2d]
  405fe7:	dec    ebx
  405fe8:	inc    ebx
  405fe9:	lods   eax,DWORD PTR ds:[esi]
  405fea:	ficomp WORD PTR [eax+0x244e3f89]
  405ff0:	jno    0x406029
  405ff2:	mov    ebx,0xa245b876
  405ff7:	mov    ds,WORD PTR cs:[edx+0x6054d64a]
  405ffe:	ret    
  405fff:	jl     0x406062
  406001:	cli    
  406002:	jae    0x405f9d
  406004:	out    0xa,eax
  406006:	pop    eax
  406007:	loopne 0x40602d
  406009:	jp     0x405fe6
  40600b:	sub    esi,esp
  40600d:	sbb    al,0xd2
  40600f:	or     DWORD PTR [esi],esp
  406011:	stc    
  406012:	pop    edi
  406013:	cmp    esi,ebp
  406015:	retf   
  406016:	hlt    
  406017:	pop    ebp
  406018:	xchg   BYTE PTR [eax+0x12862a0e],ch
  40601e:	outs   dx,BYTE PTR ds:[esi]
  40601f:	xchg   edi,eax
  406020:	dec    edi
  406021:	pop    ecx
  406022:	in     eax,dx
  406023:	xor    dh,ah
  406025:	xor    eax,0x281b031e
  40602a:	popa   
  40602b:	sbb    eax,edi
  40602d:	and    al,0x24
  40602f:	repz div ebx
  406032:	retfw  0xccd4
  406036:	into   
  406037:	fidiv  DWORD PTR [ecx]
  406039:	mov    bl,0xb4
  40603b:	xchg   ebx,eax
  40603c:	add    BYTE PTR [esi-0x51],bh
  40603f:	test   dh,dl
  406041:	push   ecx
  406042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406043:	imul   edx,DWORD PTR [ebp-0x24],0x13
  406047:	add    al,0x21
  406049:	adc    DWORD PTR [ebx-0x717e4eae],edx
  40604f:	xlat   BYTE PTR ds:[ebx]
  406050:	and    DWORD PTR [ebp+0x5b84203f],ecx
  406056:	push   0x9cea89a5
  40605b:	or     cl,BYTE PTR [ebx]
  40605d:	pusha  
  40605e:	jne    0x4060d3
  406060:	ds stc 
  406062:	and    eax,0x66f24a32
  406067:	or     cl,bl
  406069:	hlt    
  40606a:	stos   BYTE PTR es:[di],al
  40606c:	inc    edx
  40606d:	lock pop edi
  40606f:	sub    DWORD PTR [esi],edi
  406071:	add    BYTE PTR [edx],dh
  406073:	add    dl,BYTE PTR [ebx]
  406075:	imul   ebx,DWORD PTR [edx+0x254f6a1f],0x6b
  40607c:	dec    edx
  40607d:	dec    edx
  40607e:	and    DWORD PTR [eax-0x49],esi
  406081:	xor    al,0x1d
  406083:	pusha  
  406084:	das    
  406085:	inc    esi
  406086:	xchg   DWORD PTR [edx+0x46b9a186],eax
  40608c:	push   cs
  40608d:	retf   
  40608e:	push   cs
  40608f:	jmp    0x54c6d030
  406094:	aam    0x9b
  406096:	lock and cl,BYTE PTR [ecx]
  406099:	js     0x40601e
  40609b:	mov    bh,0xcc
  40609d:	shr    DWORD PTR [si-0x1563],0x59
  4060a3:	lds    edx,FWORD PTR [esi]
  4060a5:	push   edi
  4060a6:	lods   eax,DWORD PTR ds:[esi]
  4060a7:	and    BYTE PTR [eax-0x54968328],cl
  4060ad:	mov    ebx,0x1826b7a0
  4060b2:	in     eax,dx
  4060b3:	jo     0x406113
  4060b5:	jmp    0x4060b1
  4060b7:	inc    esi
  4060b8:	mov    bh,0x24
  4060ba:	mov    edx,0xdc847855
  4060bf:	in     eax,0x75
  4060c1:	mov    ecx,0xa9f3232
  4060c6:	xlat   BYTE PTR ds:[ebx]
  4060c7:	push   esp
  4060c8:	dec    ecx
  4060c9:	cs in  al,dx
  4060cb:	mov    BYTE PTR [ebp+0x50aa2666],dh
  4060d1:	add    DWORD PTR [ebx-0x73397102],esp
  4060d7:	xor    DWORD PTR [ecx-0x5da29e9b],esi
  4060dd:	cmp    eax,DWORD PTR [ecx]
  4060df:	icebp  
  4060e0:	stos   BYTE PTR es:[edi],al
  4060e1:	pop    ss
  4060e2:	sub    al,0x94
  4060e4:	xor    al,0x34
  4060e6:	cmc    
  4060e7:	jmp    0x406148
  4060e9:	add    esi,eax
  4060eb:	mov    al,0x93
  4060ed:	arpl   sp,bp
  4060ef:	(bad)  
  4060f0:	in     al,dx
  4060f1:	outs   dx,DWORD PTR ds:[esi]
  4060f2:	lods   eax,DWORD PTR ds:[esi]
  4060f3:	cmp    ecx,DWORD PTR [edx-0x8]
  4060f6:	inc    esi
  4060f7:	rcr    DWORD PTR [edi+ebx*8],1
  4060fa:	sub    BYTE PTR [eax],ah
  4060fc:	(bad)  
  4060fd:	aas    
  4060fe:	mov    ecx,0x237aed81
  406103:	dec    ebp
  406104:	lds    esi,FWORD PTR [edi]
  406106:	cmp    al,0x76
  406108:	fbld   TBYTE PTR [eax]
  40610a:	mov    al,ds:0x14506bee
  40610f:	add    ch,BYTE PTR [ecx+0x525a05a6]
  406115:	outs   dx,DWORD PTR ds:[esi]
  406116:	and    edx,DWORD PTR [edx+0x44e8fb1a]
  40611c:	xlat   BYTE PTR ds:[ebx]
  40611d:	sub    dh,0x3
  406120:	mov    ds:0x68d7fc7e,al
  406125:	or     bh,BYTE PTR [ebx-0x16]
  406128:	jnp    0x406198
  40612a:	xchg   ebx,eax
  40612b:	and    eax,0x6a5f63f5
  406130:	mov    ss,WORD PTR [esp+eiz*2+0x207533b4]
  406137:	xor    BYTE PTR [edi-0x1b],0x12
  40613b:	in     al,dx
  40613c:	dec    edi
  40613d:	cmc    
  40613e:	dec    edx
  40613f:	adc    al,0x41
  406141:	or     DWORD PTR [eax],ecx
  406143:	fisttp DWORD PTR [ecx]
  406145:	rol    DWORD PTR [edi],cl
  406147:	ror    BYTE PTR [ecx+eax*2-0x2382385d],cl
  40614e:	sub    eax,0x13f61c9e
  406153:	in     al,0xef
  406155:	fisubr WORD PTR [esi+0x4a1fa85e]
  40615b:	adc    DWORD PTR [esi],0x303f0edf
  406161:	adc    ch,BYTE PTR [ebx-0x5]
  406164:	dec    BYTE PTR [edx+eiz*2]
  406167:	mov    WORD PTR [ebx+0x28],cs
  40616a:	(bad)  
  40616b:	jl     0x406193
  40616d:	addr16 add esi,ebp
  406170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406171:	and    al,BYTE PTR [ebp+0x694e46c9]
  406177:	les    edx,FWORD PTR [eax+0x6f]
  40617a:	dec    ecx
  40617b:	pcmpgtw mm6,QWORD PTR [ecx]
  40617e:	cmp    cl,BYTE PTR [edx+0x4c]
  406181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406182:	out    dx,eax
  406183:	sub    eax,0x3a1bbe39
  406188:	mov    eax,ds:0xa1e6088f
  40618d:	(bad)  
  40618e:	cli    
  40618f:	push   es
  406190:	iret   
  406191:	push   es
  406192:	popw   ss
  406194:	mov    bl,0x95
  406196:	fstp   DWORD PTR [eax]
  406198:	adc    ecx,ecx
  40619a:	push   0xffffffc8
  40619c:	test   al,0xc5
  40619e:	add    BYTE PTR [ebp+0x2d],dh
  4061a1:	and    ch,dh
  4061a3:	ds icebp 
  4061a5:	dec    eax
  4061a6:	fistp  WORD PTR [eax]
  4061a8:	dec    ebp
  4061a9:	cwde   
  4061aa:	pop    esi
  4061ab:	jg     0x40614f
  4061ad:	jbe    0x40618d
  4061af:	push   ebp
  4061b0:	mov    edx,0xdaa96a68
  4061b5:	add    BYTE PTR [di+0x53],ah
  4061b9:	push   edx
  4061ba:	fimul  WORD PTR [edx]
  4061bc:	and    DWORD PTR [edx-0x62cb556e],esp
  4061c2:	xchg   BYTE PTR [ebx-0x18],dh
  4061c5:	xor    bh,dl
  4061c7:	pop    edx
  4061c8:	or     al,0x1d
  4061ca:	push   cs
  4061cb:	push   edi
  4061cc:	mov    ebp,0xf0929b3c
  4061d1:	imul   edx,DWORD PTR [edi-0x76],0x9f9f3fda
  4061d8:	or     al,0xfe
  4061da:	xchg   ebx,eax
  4061db:	ss inc ebp
  4061dd:	in     eax,dx
  4061de:	fcomp  DWORD PTR [eax-0x3e]
  4061e1:	out    0xb0,al
  4061e3:	push   eax
  4061e4:	mov    ah,0x58
  4061e6:	pop    ebp
  4061e7:	cmc    
  4061e8:	lahf   
  4061e9:	aas    
  4061ea:	or     al,bl
  4061ec:	jnp    0x406195
  4061ee:	cmc    
  4061ef:	cmp    BYTE PTR [edi],ah
  4061f1:	mov    WORD PTR [eax],cs
  4061f3:	pop    edi
  4061f4:	inc    eax
  4061f5:	(bad)  
  4061f6:	inc    ebp
  4061f7:	repz in eax,dx
  4061f9:	xor    ch,al
  4061fb:	and    al,0x76
  4061fd:	pop    edx
  4061fe:	jne    0x40622d
  406200:	addr16 pop es
  406202:	jl     0x40620b
  406204:	lahf   
  406205:	mov    edx,0x5abea1d6
  40620a:	jp     0x4061b3
  40620c:	aam    0xe0
  40620e:	call   0x5b896827
  406213:	pop    ds
  406214:	sbb    dh,BYTE PTR [ecx]
  406216:	xchg   edx,eax
  406217:	cwde   
  406218:	std    
  406219:	adc    al,0xb8
  40621b:	call   0xfffa:0x6a9505b9
  406222:	je     0x406211
  406224:	fs in  al,dx
  406226:	cmc    
  406227:	add    al,0xa1
  406229:	push   edx
  40622a:	mov    esi,0x1808fc8e
  40622f:	pop    ss
  406230:	push   esp
  406231:	pop    ecx
  406232:	ins    BYTE PTR es:[edi],dx
  406233:	mov    al,0x63
  406235:	(bad)  
  406236:	xor    eax,0x4b1abe7c
  40623b:	cmp    ebp,edi
  40623d:	fs and al,0x37
  406240:	pusha  
  406241:	pop    ss
  406242:	adc    dh,BYTE PTR [ebx+0x5d]
  406245:	xchg   ebp,eax
  406246:	mov    ebx,0xb33760d8
  40624b:	mov    al,0x82
  40624d:	stos   DWORD PTR es:[edi],eax
  40624e:	push   esi
  40624f:	sbb    al,0xd7
  406251:	mov    esi,0x9632e25
  406256:	and    BYTE PTR [ebx-0x35],0xb9
  40625a:	jae    0x406253
  40625c:	ja     0x406200
  40625e:	dec    ebp
  40625f:	and    DWORD PTR [esi+edx*1+0x26],0xb1e847a3
  406267:	adc    esi,ecx
  406269:	cmp    ebx,DWORD PTR [edi-0x198db2f]
  40626f:	mov    edx,0x144e4d93
  406274:	mov    al,ds:0xc813ac53
  406279:	inc    edi
  40627a:	adc    BYTE PTR [ecx-0x69],bl
  40627d:	jo     0x40628f
  40627f:	jmp    0x4c5a:0xa5b1b06
  406286:	nop
  406287:	adc    ebx,ecx
  406289:	leave  
  40628a:	imul   BYTE PTR [ecx-0x2c1b00c8]
  406290:	pop    ss
  406291:	push   0x48f6c136
  406296:	push   ebx
  406297:	or     dl,BYTE PTR [ebp-0xc51781f]
  40629d:	add    ebx,edi
  40629f:	jns    0x40622a
  4062a1:	test   al,0xfc
  4062a3:	call   0x63a6:0x65eb65ab
  4062aa:	push   ebx
  4062ab:	adc    BYTE PTR [edi],ch
  4062ad:	aaa    
  4062ae:	ins    BYTE PTR es:[edi],dx
  4062af:	aad    0xbc
  4062b1:	rol    BYTE PTR ds:0x53cddf49,0xa0
  4062b8:	shl    esp,0xf1
  4062bb:	in     al,dx
  4062bc:	and    DWORD PTR [edx+ebp*8+0x19],ebx
  4062c0:	add    BYTE PTR [ebx-0x50],dh
  4062c3:	jnp    0x406311
  4062c5:	sub    ecx,0x7e
  4062c8:	clc    
  4062c9:	mov    esp,0x7564417c
  4062ce:	push   ds
  4062cf:	xchg   esi,eax
  4062d0:	ins    BYTE PTR es:[edi],dx
  4062d1:	sub    al,0xa0
  4062d3:	lds    esp,FWORD PTR [ecx+0x14]
  4062d6:	ror    dl,cl
  4062d8:	ret    
  4062d9:	push   edx
  4062da:	xchg   esi,eax
  4062db:	inc    esp
  4062dc:	stos   DWORD PTR es:[edi],eax
  4062dd:	into   
  4062de:	xor    esp,DWORD PTR [ecx+0x184cd394]
  4062e4:	sub    BYTE PTR fs:[edi],cl
  4062e7:	mov    ecx,0xe0185873
  4062ec:	xchg   edx,eax
  4062ed:	or     esi,DWORD PTR [eax+0x34bb9f48]
  4062f3:	mov    ds:0x70748384,eax
  4062f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062f9:	jnp    0x4062ec
  4062fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062fc:	test   DWORD PTR [edx+0x61],ebx
  4062ff:	cmp    cl,BYTE PTR [ebx+edx*1+0x7882978b]
  406306:	pop    ecx
  406307:	dec    ebp
  406308:	cmp    al,0x8b
  40630a:	clc    
  40630b:	xchg   DWORD PTR [ecx+edx*1+0x2b],ecx
  40630f:	jmp    0x991c:0x5136b308
  406316:	test   al,0x70
  406318:	into   
  406319:	jae    0x406317
  40631b:	push   ebx
  40631c:	mov    ss,edx
  40631e:	cwde   
  40631f:	imul   esi,DWORD PTR [eax+0x54ef6225],0x3a
  406326:	jne    0x406361
  406328:	cld    
  406329:	jle    0x406309
  40632b:	mov    dh,0xdf
  40632d:	pop    ss
  40632e:	xor    al,0xef
  406331:	adc    BYTE PTR [esp+edx*4],ah
  406334:	push   edx
  406335:	jne    0x406312
  406337:	popf   
  406338:	cmp    DWORD PTR [edi-0x4a31a54e],ebp
  40633e:	cmp    ah,BYTE PTR [ebp-0x7d]
  406341:	jnp    0x4062c6
  406343:	idiv   edi
  406345:	(bad)  
  406346:	out    dx,eax
  406347:	inc    esp
  406348:	ins    BYTE PTR es:[edi],dx
  406349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40634a:	mov    cl,0xc8
  40634c:	push   0x3eaa7798
  406351:	and    ebp,eax
  406353:	mov    dh,0x68
  406355:	ja     0x4063b6
  406357:	mov    esi,0xaf5ce65d
  40635c:	and    BYTE PTR [edx+0x19f54631],al
  406362:	xor    esp,DWORD PTR [ecx+0x17]
  406365:	out    0xb7,al
  406367:	xchg   BYTE PTR [edx+0x1a],dh
  40636a:	dec    DWORD PTR [ebx+edx*4-0x3f]
  40636e:	inc    edi
  40636f:	mov    esp,0xc7d9abc7
  406374:	sub    ch,BYTE PTR [esi]
  406376:	push   ebp
  406377:	fsubr  QWORD PTR [ebp+0x104b7e37]
  40637d:	aad    0x3f
  40637f:	xor    DWORD PTR [ebx+0x664a34c5],0x7c
  406386:	sbb    edi,DWORD PTR [edx-0x6e6ecefb]
  40638c:	sbb    dl,BYTE PTR [eax-0x65c9ccbf]
  406392:	mov    esp,0xad162e3b
  406397:	or     BYTE PTR es:[edx-0x25],0xeb
  40639c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40639d:	sar    BYTE PTR [esi+ecx*4+0x2d],1
  4063a1:	push   edx
  4063a2:	pop    ebp
  4063a3:	mov    al,0x35
  4063a5:	je     0x40641c
  4063a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a8:	in     eax,0xbc
  4063aa:	push   0x580717c9
  4063af:	push   ss
  4063b0:	push   ecx
  4063b1:	xor    al,0x6a
  4063b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063b4:	mov    esi,0x518a64ef
  4063b9:	adc    ah,bl
  4063bb:	sar    DWORD PTR [edx],cl
  4063bd:	mov    eax,ds:0x9da300e8
  4063c2:	mov    dl,0x1
  4063c4:	cmp    DWORD PTR [edi],ebp
  4063c6:	xor    DWORD PTR [edi-0x507261],0x1e
  4063cd:	retf   
  4063ce:	jge    0x40644d
  4063d0:	push   ecx
  4063d1:	fistp  WORD PTR [ecx+0x1d968491]
  4063d7:	mov    dh,BYTE PTR [edi]
  4063d9:	popa   
  4063da:	das    
  4063db:	mov    ebx,0xdd11862b
  4063e0:	inc    ecx
  4063e1:	cli    
  4063e2:	mov    ds:0x41f5ae78,al
  4063e7:	push   es
  4063e8:	dec    edi
  4063e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ea:	mov    edx,0x3d62fe9f
  4063ef:	out    0x35,al
  4063f1:	cmp    esp,esi
  4063f3:	sbb    BYTE PTR [ebx],dh
  4063f5:	inc    eax
  4063f6:	mov    eax,ds:0xde3cc740
  4063fb:	mov    ah,0x41
  4063fd:	sbb    al,0x8f
  4063ff:	sti    
  406400:	push   ebx
  406401:	or     DWORD PTR [eax+0x42c915a3],edx
  406407:	pop    esi
  406408:	test   BYTE PTR [ebx+edx*2+0x1],bl
  40640c:	adc    bl,BYTE PTR [edi-0x73fa9c8b]
  406412:	adc    dl,al
  406414:	or     al,0xb0
  406416:	(bad)  
  406417:	retf   0x5f8d
  40641a:	fisub  WORD PTR [edi-0x2e0d32fa]
  406420:	jl     0x406404
  406422:	mov    dx,ds
  406425:	in     al,0xcf
  406427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406428:	push   cs
  406429:	xchg   esi,eax
  40642a:	sbb    eax,0xe388cbeb
  40642f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406430:	sar    BYTE PTR [esi-0x2e21f17b],cl
  406436:	lahf   
  406437:	dec    edi
  406438:	push   ebx
  406439:	(bad)  [eax+edi*4]
  40643c:	call   0x71d62053
  406441:	aad    0xa
  406443:	ins    DWORD PTR es:[edi],dx
  406444:	mov    bh,0x2
  406446:	inc    edi
  406447:	or     eax,0x3867cc15
  40644c:	scas   eax,DWORD PTR es:[edi]
  40644d:	fidivr DWORD PTR [esi]
  40644f:	cli    
  406450:	pop    ebx
  406451:	pop    ecx
  406452:	ins    DWORD PTR es:[edi],dx
  406453:	adc    eax,0x12721347
  406458:	sbb    DWORD PTR [ebx],ebp
  40645a:	out    0x6d,eax
  40645c:	stos   BYTE PTR es:[edi],al
  40645d:	lods   eax,DWORD PTR ds:[esi]
  40645e:	(bad)  
  40645f:	mov    eax,0x5e573c8c
  406464:	dec    ebx
  406465:	stos   DWORD PTR es:[edi],eax
  406466:	shr    BYTE PTR [ecx-0x402d1750],1
  40646c:	test   DWORD PTR [ecx+0x3ecd399a],eax
  406472:	cmp    al,0x30
  406474:	add    ch,BYTE PTR [edx-0x4a]
  406477:	lods   eax,DWORD PTR ds:[esi]
  406478:	add    BYTE PTR [ecx],bl
  40647a:	adc    DWORD PTR [edx-0x7],0x2331077f
  406481:	adc    bl,BYTE PTR [ebx+ebx*1-0x65]
  406485:	xor    BYTE PTR [edx],al
  406487:	fsubr  DWORD PTR [edi]
  406489:	call   0xc519:0x5ea9b2d0
  406490:	aas    
  406491:	std    
  406492:	jle    0x40642c
  406494:	adc    ebx,DWORD PTR [ebx-0x53]
  406497:	test   DWORD PTR [eax],esp
  406499:	mov    dl,0x92
  40649b:	mov    al,ds:0xe61c9c01
  4064a0:	mov    ah,0x26
  4064a2:	fmul   st(0),st
  4064a4:	cmc    
  4064a5:	add    BYTE PTR [edi+0x5e],bl
  4064a8:	les    esp,FWORD PTR [eax+0x7139015c]
  4064ae:	sub    al,0x98
  4064b0:	ret    
  4064b1:	mov    bh,0xfa
  4064b3:	jmp    0xce6fec2a
  4064b8:	loopne 0x4064f3
  4064ba:	mov    al,ds:0x32e90605
  4064bf:	sbb    eax,DWORD PTR [edi+0x46ee5bec]
  4064c5:	out    0x24,al
  4064c7:	dec    edx
  4064c8:	dec    ebp
  4064c9:	dec    edx
  4064ca:	(bad)  
  4064cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064cc:	cmp    DWORD PTR [esi],0x3c2cb7f
  4064d2:	js     0x406479
  4064d4:	jle    0x40652d
  4064d6:	xchg   ebx,eax
  4064d7:	shr    al,cl
  4064d9:	push   eax
  4064da:	in     eax,0xd3
  4064dc:	cmp    al,0xc2
  4064de:	cmp    dl,BYTE PTR [edi+0x50f49900]
  4064e4:	push   edi
  4064e5:	in     eax,dx
  4064e6:	xor    al,0x8e
  4064e8:	in     eax,dx
  4064e9:	jp     0x406524
  4064eb:	jno    0x406546
  4064ed:	mov    DWORD PTR [edi+0x537818e5],0xbbe5dbb2
  4064f7:	pop    esp
  4064f8:	mov    ah,0x55
  4064fa:	xor    DWORD PTR ds:0xc6fc34e2,ebx
  406500:	cmc    
  406501:	jbe    0x4064a3
  406503:	and    DWORD PTR [esi-0x34],edx
  406506:	dec    ebp
  406507:	jno    0x406514
  406509:	push   ebx
  40650a:	fst    QWORD PTR [edi-0x8]
  40650d:	adc    eax,0xb2c71616
  406512:	adc    ecx,DWORD PTR [edi]
  406514:	std    
  406515:	push   ecx
  406516:	dec    eax
  406517:	ret    0xdcee
  40651a:	jmp    0x40649e
  40651c:	test   BYTE PTR [eax-0x75],al
  40651f:	push   0x59
  406521:	sub    DWORD PTR es:[eax+0x11d2fc67],eax
  406528:	lock add bl,BYTE PTR [ecx+0x42d6c750]
  40652f:	push   ss
  406530:	push   edi
  406531:	inc    edi
  406532:	fnstenv [ecx+esi*8+0x6381743e]
  406539:	mov    BYTE PTR [eax-0x66],bh
  40653c:	test   DWORD PTR [ebp+0x5daa7275],edi
  406542:	test   WORD PTR [ecx],bx
  406545:	xor    al,0x3d
  406547:	loope  0x40655a
  406549:	retf   0x7dd6
  40654c:	mov    WORD PTR [edx-0x75],cs
  40654f:	mov    ah,BYTE PTR [ecx-0x54]
  406552:	cmp    BYTE PTR [ecx-0x3],bl
  406555:	cdq    
  406556:	ret    
  406557:	push   ebp
  406558:	mov    esp,ebx
  40655a:	and    dl,BYTE PTR [edi-0x71]
  40655d:	jo     0x4065c2
  40655f:	mov    WORD PTR [ebp-0x46fd5853],gs
  406565:	inc    ecx
  406566:	adc    eax,DWORD PTR [eax+ebp*8+0x55]
  40656a:	dec    eax
  40656b:	jle    0x4065e4
  40656d:	paddw  mm4,QWORD PTR es:[edi+eiz*4+0x3c7a25b1]
  406576:	xor    al,0xe5
  406578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406579:	mov    bl,0xa
  40657b:	loop   0x40654a
  40657d:	je     0x406503
  40657f:	adc    ch,BYTE PTR [eax-0x2a116e36]
  406585:	push   ebp
  406586:	or     edx,DWORD PTR [edx-0x1cc21989]
  40658c:	add    eax,0xf17adfa4
  406591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406592:	add    DWORD PTR [eax-0x1c],eax
  406595:	mov    ch,0xbd
  406597:	test   esp,edx
  406599:	je     0x40652b
  40659b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40659c:	or     dl,BYTE PTR [ebp-0x77]
  40659f:	in     eax,0x18
  4065a1:	pop    ecx
  4065a2:	icebp  
  4065a3:	mov    ch,0xa5
  4065a5:	dec    ebx
  4065a6:	and    DWORD PTR [edi],ebx
  4065a8:	mov    ds:0x8279952d,al
  4065ad:	push   edi
  4065ae:	add    edx,DWORD PTR [esi]
  4065b0:	pop    DWORD PTR [esp+ecx*1-0x2bd22fa5]
  4065b7:	push   ebx
  4065b8:	jecxz  0x4065aa
  4065ba:	adc    ebx,ebx
  4065bc:	cli    
  4065bd:	xchg   esi,eax
  4065be:	mov    esp,0x36d67898
  4065c3:	scas   al,BYTE PTR es:[edi]
  4065c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c5:	lahf   
  4065c6:	dec    edx
  4065c7:	popf   
  4065c8:	xchg   ecx,eax
  4065c9:	out    dx,al
  4065ca:	out    0x9c,eax
  4065cc:	daa    
  4065cd:	(bad)  [ebp+0x13]
  4065d0:	(bad)  
  4065d1:	lea    ecx,ds:0x3f8caebc
  4065d7:	inc    esp
  4065d8:	dec    edi
  4065d9:	in     al,0x64
  4065db:	xlat   BYTE PTR ds:[ebx]
  4065dc:	or     eax,0xb36730fe
  4065e1:	xor    BYTE PTR es:[esi-0x711f3763],dl
  4065e8:	(bad)  [eax-0x1143e1dc]
  4065ee:	and    ecx,DWORD PTR [ecx]
  4065f0:	(bad)  
  4065f1:	loopne 0x406643
  4065f3:	jmp    0x406618
  4065f5:	ficomp DWORD PTR [edx]
  4065f7:	mov    edx,0x96ab1c77
  4065fc:	jle    0x406587
  4065fe:	mov    ebx,0xaa504f19
  406603:	add    ecx,eax
  406605:	push   edi
  406606:	sub    dh,BYTE PTR cs:0x4d7bb5fb
  40660d:	adc    ebp,esi
  40660f:	sbb    eax,0x59bfe3fb
  406614:	mov    eax,ds:0x8100bbdf
  406619:	in     eax,0x12
  40661b:	adc    ch,dh
  40661d:	pop    esp
  40661e:	fbstp  TBYTE PTR [edx-0x5c21300e]
  406624:	outs   dx,DWORD PTR ds:[esi]
  406625:	retf   0x54e
  406628:	add    edx,DWORD PTR [ebp+eiz*2+0x2a]
  40662c:	fstp   TBYTE PTR [eax-0x5b403419]
  406632:	loope  0x406650
  406634:	outs   dx,DWORD PTR ds:[esi]
  406635:	sbb    DWORD PTR [edi-0x17],esi
  406638:	ret    0xe2bd
  40663b:	cwde   
  40663c:	push   ebp
  40663d:	dec    esp
  40663e:	(bad)  [edx+esi*1+0xb3d73c9]
  406645:	repz retf 
  406647:	pushf  
  406648:	cmp    ebp,DWORD PTR [eax+0x61]
  40664b:	mov    bl,0xf9
  40664d:	aas    
  40664e:	cmp    DWORD PTR [ebx+0x5f],esp
  406651:	mov    ds:0x658ba913,eax
  406656:	inc    ecx
  406657:	jno    0x40668b
  406659:	xchg   esp,eax
  40665b:	call   0x91bb9aea
  406660:	test   DWORD PTR [ecx],esi
  406662:	cmp    eax,0xc58fe710
  406667:	mov    ecx,0x51996f8
  40666c:	pop    ds
  40666d:	and    dl,BYTE PTR [edx-0x39092500]
  406673:	or     BYTE PTR [edi+0x7e],dh
  406676:	es pop bp
  406679:	jecxz  0x406619
  40667b:	push   esi
  40667c:	cmp    bh,BYTE PTR [esi]
  40667e:	pop    esp
  40667f:	loope  0x406619
  406681:	out    dx,al
  406682:	mov    bl,0x73
  406684:	aaa    
  406685:	and    eax,0x52ecfc4
  40668a:	dec    ebp
  40668b:	jno    0x406663
  40668d:	repz push cs
  40668f:	pop    esp
  406690:	push   0x14bf325b
  406695:	cmp    DWORD PTR [eax],0xb
  406698:	scas   al,BYTE PTR es:[edi]
  406699:	cld    
  40669a:	shl    DWORD PTR [eax+0x75c4efb3],1
  4066a0:	add    BYTE PTR [edx+0x21f55da7],dh
  4066a6:	fdivr  st(2),st
  4066a8:	imul   edi,ebx,0x71adfbe0
  4066ae:	lods   al,BYTE PTR ds:[esi]
  4066af:	dec    ebp
  4066b0:	cmc    
  4066b1:	shr    BYTE PTR [ebx+0x75127d4a],0x98
  4066b8:	push   ebp
  4066b9:	push   ds
  4066ba:	inc    edi
  4066bb:	xchg   ecx,eax
  4066bc:	xchg   ebx,eax
  4066bd:	addr16 sbb al,0x4
  4066c0:	inc    ebx
  4066c1:	(bad)  
  4066c2:	adc    bl,dh
  4066c4:	retf   
  4066c5:	lea    ecx,[ecx+edx*1-0x47]
  4066c9:	int3   
  4066ca:	jle    0x4066a2
  4066cc:	mov    dh,BYTE PTR [eax+0x226f41ef]
  4066d2:	xor    cl,ah
  4066d4:	jns    0x406692
  4066d6:	push   ds
  4066d7:	pop    edx
  4066d8:	or     esp,DWORD PTR [ecx]
  4066da:	(bad)  
  4066db:	jg     0x406687
  4066dd:	cmp    esp,DWORD PTR [ebp-0x4e]
  4066e0:	in     eax,0xf7
  4066e2:	or     edx,DWORD PTR [esi]
  4066e4:	sar    DWORD PTR [edx+0x63],1
  4066e7:	mov    eax,0xd0880279
  4066ec:	test   al,0x59
  4066ee:	pop    ebx
  4066ef:	fs call 0x3d340bda
  4066f5:	and    BYTE PTR [edi+0x3a93eca6],dh
  4066fb:	adc    dl,BYTE PTR [ecx-0x39beb25c]
  406701:	out    0xc7,al
  406703:	das    
  406704:	mov    ebp,esp
  406706:	ja     0x40674e
  406708:	mov    eax,ds:0xd95473ee
  40670d:	mov    WORD PTR [eax+edx*8],ds
  406710:	fcomp  st(7)
  406712:	or     al,0x4d
  406714:	adc    BYTE PTR [edx],bh
  406716:	aad    0x28
  406718:	in     eax,0x32
  40671a:	mov    bl,0xbf
  40671c:	iret   
  40671d:	cli    
  40671e:	repnz repnz int 0xb
  406722:	xchg   esi,eax
  406723:	repnz push ebx
  406725:	call   0x894eb862
  40672a:	ror    bh,0x94
  40672d:	or     eax,0xe8ce401c
  406732:	lods   eax,DWORD PTR ds:[esi]
  406733:	es dec esp
  406735:	add    DWORD PTR ds:0x584fc612,esp
  40673b:	pop    ds
  40673c:	fild   DWORD PTR [edi]
  40673e:	mov    bh,0x18
  406740:	xor    esi,DWORD PTR [edx-0x1c5358ba]
  406746:	ror    BYTE PTR [eiz*1+0x4bb69c22],1
  40674d:	mov    ecx,0x63c42ed5
  406752:	or     esp,DWORD PTR [edi+0x34]
  406755:	jp     0x406773
  406757:	mov    ecx,0x6cf70217
  40675c:	fstp   st(6)
  40675e:	scas   eax,DWORD PTR es:[edi]
  40675f:	mov    edi,0x7fedacfb
  406764:	push   ebx
  406765:	jp     0x406780
  406767:	cmove  ecx,DWORD PTR ss:0xcf32ede4
  40676f:	cli    
  406770:	retf   
  406771:	mov    dl,0x8d
  406773:	xor    ebp,eax
  406775:	fcom   DWORD PTR [ebx-0x4c]
  406778:	ret    0xcea5
  40677b:	clc    
  40677c:	dec    ecx
  40677d:	cmp    al,0x16
  40677f:	out    0x8d,eax
  406781:	je     0x406758
  406783:	dec    ebx
  406784:	dec    esi
  406785:	call   DWORD PTR [esi+0x696c46b7]
  40678b:	xor    DWORD PTR [esi-0x1792bfee],ecx
  406791:	ins    BYTE PTR es:[edi],dx
  406792:	xor    eax,0x4908fa38
  406797:	rol    edi,1
  406799:	mov    ebx,0x5025bac4
  40679e:	out    0x73,eax
  4067a0:	fs fcmovu st,st(4)
  4067a3:	(bad)  [edx+0x59]
  4067a6:	dec    ebx
  4067a7:	and    dh,BYTE PTR [esi-0x6f53a2c4]
  4067ad:	xchg   ecx,eax
  4067ae:	(bad)
  4067b1:	xchg   ebx,eax
  4067b2:	dec    edx
  4067b3:	std    
  4067b4:	mov    eax,0x3eff68a0
  4067b9:	inc    ebp
  4067ba:	pop    ss
  4067bb:	retf   
  4067bc:	inc    ebp
  4067bd:	into   
  4067be:	adc    BYTE PTR [eax-0xeb319fb],ah
  4067c4:	jne    0x40680f
  4067c6:	icebp  
  4067c7:	or     eax,ebp
  4067c9:	int    0x71
  4067cb:	dec    edi
  4067cc:	ficomp DWORD PTR [edi+eiz*4+0x1e]
  4067d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067d1:	jno    0x40682c
  4067d3:	cmp    esi,DWORD PTR [esi-0x65]
  4067d6:	out    dx,al
  4067d7:	pop    ebx
  4067d8:	xchg   esp,eax
  4067d9:	retf   
  4067da:	cmp    BYTE PTR [edi+0x7e],cl
  4067dd:	scas   al,BYTE PTR es:[edi]
  4067de:	sbb    edx,0xee7e7038
  4067e4:	shr    ecx,cl
  4067e6:	pop    ss
  4067e7:	sbb    esp,DWORD PTR [ecx-0x2c]
  4067ea:	sub    edi,DWORD PTR [eax+0xa]
  4067ed:	leave  
  4067ee:	pop    es
  4067ef:	clc    
  4067f0:	mov    ah,0xf8
  4067f2:	cmp    DWORD PTR [edx],eax
  4067f4:	or     al,0xd3
  4067f6:	out    0xa4,eax
  4067f8:	int    0xd0
  4067fa:	pop    eax
  4067fb:	mov    eax,0xec53ff31
  406800:	dec    edx
  406801:	push   ebp
  406802:	or     BYTE PTR [ebp-0x7b0f45fa],dh
  406808:	iret   
  406809:	(bad)  
  40680a:	imul   esp,DWORD PTR [esi+0x7],0x4b0d47db
  406811:	and    al,0xc3
  406813:	sti    
  406814:	inc    esi
  406815:	mov    esi,0xae914bb8
  40681a:	fist   WORD PTR [ebx+0x34]
  40681d:	in     eax,0x32
  40681f:	scas   al,BYTE PTR es:[edi]
  406820:	sub    DWORD PTR [esi+eax*1],eax
  406823:	retf   
  406824:	dec    eax
  406825:	jl     0x406868
  406827:	icebp  
  406828:	adc    ah,BYTE PTR [ebx+0x5dcfc0af]
  40682e:	adc    al,0xeb
  406830:	pop    ebp
  406831:	imul   DWORD PTR [ebp-0x30]
  406834:	jbe    0x406869
  406836:	jmp    0xfaed4fdc
  40683b:	push   ecx
  40683c:	(bad)  
  40683d:	jle    0x40686f
  40683f:	sahf   
  406840:	ret    0x977d
  406843:	aam    0x46
  406845:	mov    ebx,0xee19aa99
  40684a:	hlt    
  40684b:	push   ds
  40684c:	mov    esi,0x1af3bff0
  406851:	jp     0x406862
  406853:	push   edi
  406854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406855:	push   eax
  406856:	pop    ebx
  406857:	pop    ebp
  406858:	es cli 
  40685a:	or     dh,dh
  40685c:	loop   0x406887
  40685e:	sub    BYTE PTR [ecx+0x76],al
  406861:	daa    
  406862:	les    esp,FWORD PTR [ecx]
  406864:	xchg   esp,eax
  406865:	jbe    0x4067f4
  406867:	sub    al,0x7e
  406869:	xchg   esi,eax
  40686a:	sub    ebx,DWORD PTR [eax+0x13]
  40686d:	jecxz  0x4068a5
  40686f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406870:	enter  0xa391,0xa6
  406874:	aaa    
  406875:	add    ebp,eax
  406877:	adc    BYTE PTR [edi],ah
  406879:	inc    ebx
  40687a:	mov    dh,BYTE PTR [esi]
  40687c:	(bad)  [esi]
  40687e:	inc    eax
  40687f:	in     eax,dx
  406880:	inc    ebx
  406881:	push   esp
  406882:	and    eax,0xc5c732c4
  406887:	popf   
  406888:	inc    esi
  406889:	and    ebx,DWORD PTR [eax-0x1f]
  40688c:	pop    esi
  40688d:	mov    edi,0x54df92d1
  406892:	push   esp
  406893:	out    0x83,eax
  406895:	mov    ebx,0x975eedea
  40689a:	(bad)  
  40689b:	adc    ch,BYTE PTR [edx]
  40689d:	loope  0x406831
  40689f:	cmc    
  4068a0:	push   edi
  4068a1:	pusha  
  4068a2:	rol    DWORD PTR [edx+0x450c8d27],1
  4068a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068a9:	jle    0x406883
  4068ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068ac:	push   eax
  4068ad:	ins    DWORD PTR es:[edi],dx
  4068ae:	jl     0x4068ce
  4068b0:	and    eax,0x4616f10a
  4068b5:	jl     0x40685c
  4068b7:	addr16 ret 0x85c4
  4068bb:	ds repnz cmp dh,BYTE PTR es:[ebx+0x58]
  4068c1:	sub    BYTE PTR [ebx-0x8],0xf2
  4068c5:	cld    
  4068c6:	mov    eax,0x8276b31f
  4068cb:	push   ds
  4068cc:	sub    eax,0xee093bee
  4068d1:	xchg   BYTE PTR [esi+0x12],bl
  4068d4:	push   edx
  4068d5:	sub    DWORD PTR [edi],edx
  4068d7:	mov    ebp,0xafc8cb46
  4068dc:	inc    ebp
  4068dd:	mov    bh,0x70
  4068df:	test   dl,cl
  4068e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068e2:	mov    eax,ds:0xcfa49a87
  4068e7:	rcr    esp,1
  4068e9:	mov    eax,ds:0xf467cf61
  4068ee:	sti    
  4068ef:	cmp    esi,DWORD PTR [eax]
  4068f1:	ins    BYTE PTR es:[edi],dx
  4068f2:	mov    BYTE PTR [ebp+0x53],ah
  4068f5:	popa   
  4068f6:	pop    ebp
  4068f7:	and    BYTE PTR ss:[edi],0xf6
  4068fb:	inc    ebx
  4068fc:	xor    esp,edi
  4068fe:	mov    ch,0x1
  406900:	adc    BYTE PTR ds:0x8310978b,dl
  406906:	nop
  406907:	sub    dh,cl
  406909:	and    al,0x1f
  40690b:	xor    dl,BYTE PTR [esi]
  40690d:	inc    esi
  40690e:	(bad)  
  40690f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406910:	outs   dx,BYTE PTR ds:[esi]
  406911:	stos   BYTE PTR es:[edi],al
  406912:	sub    al,0x8
  406914:	mov    DWORD PTR [edi+0x55ddf92d],edi
  40691a:	test   eax,0x9617b0bb
  40691f:	js     0x406952
  406921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406922:	in     al,0x27
  406924:	aad    0xf2
  406926:	jl     0x40692f
  406928:	sti    
  406929:	jo     0x406991
  40692b:	cli    
  40692c:	jns    0x406994
  40692e:	sbb    al,ch
  406930:	sub    al,BYTE PTR [eax*8+0x723fcb35]
  406937:	jns    0x40698e
  406939:	dec    ebp
  40693a:	push   eax
  40693b:	ins    DWORD PTR es:[edi],dx
  40693c:	ror    DWORD PTR [esi-0x14b5bca2],cl
  406942:	and    bh,BYTE PTR [ebp*2+0x5b51a4aa]
  406949:	xor    al,0x4
  40694b:	jmp    0x31e5053d
  406950:	mov    WORD PTR [edx+0x2],gs
  406953:	call   0x56f6890
  406958:	sbb    bl,cl
  40695a:	jae    0x406910
  40695c:	jmp    DWORD PTR [ebp+0x31]
  40695f:	jp     0x4068e6
  406961:	mov    esp,0xa9fd3c48
  406966:	or     esp,DWORD PTR [ecx+eiz*1]
  406969:	pop    ebx
  40696a:	mov    al,0xf0
  40696c:	mov    dh,0x19
  40696e:	mov    DWORD PTR [ebx],eax
  406970:	pop    ebx
  406971:	lds    ebx,FWORD PTR [ecx]
  406973:	xor    ebp,DWORD PTR [esi-0x38]
  406976:	sub    al,0x1f
  406978:	scas   eax,DWORD PTR es:[edi]
  406979:	inc    esi
  40697a:	in     eax,0x79
  40697c:	push   ds
  40697d:	cmp    eax,DWORD PTR [ecx+0x18679e96]
  406983:	xchg   edi,eax
  406984:	adc    eax,DWORD PTR [eax]
  406986:	and    bl,bl
  406988:	aaa    
  406989:	fcmovnb st,st(7)
  40698b:	and    edx,DWORD PTR [ecx+0x2c603f4c]
  406991:	test   eax,0x3c82e437
  406996:	loope  0x406999
  406998:	add    DWORD PTR [esi+0xd],0x869c311c
  40699f:	rcl    BYTE PTR [ecx+eax*4-0x61],cl
  4069a3:	enter  0x7efb,0x92
  4069a7:	push   ss
  4069a8:	call   0xbc9f:0xe98be005
  4069af:	lods   al,BYTE PTR ds:[esi]
  4069b0:	dec    ecx
  4069b1:	in     al,0x4e
  4069b3:	div    BYTE PTR [edi]
  4069b5:	inc    ebx
  4069b6:	jg     0x40695c
  4069b8:	dec    ebp
  4069b9:	pop    ebp
  4069ba:	ror    DWORD PTR [edx-0x29d3f662],0xf8
  4069c1:	mov    ch,BYTE PTR [ebx-0x7e410df]
  4069c7:	xchg   esp,eax
  4069c8:	aas    
  4069c9:	pop    edx
  4069ca:	dec    ebp
  4069cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069cc:	enter  0xb277,0xa6
  4069d0:	shl    DWORD PTR [ebp-0x4fff05d0],0x85
  4069d7:	mov    ch,0xba
  4069d9:	jae    0x4069bd
  4069db:	stos   DWORD PTR es:[edi],eax
  4069dc:	rcl    DWORD PTR [ecx+eiz*1+0x4e],cl
  4069e0:	adc    eax,0xb541247b
  4069e5:	xchg   edx,eax
  4069e6:	add    dh,bl
  4069e8:	aaa    
  4069e9:	or     eax,0x4f63550f
  4069ee:	sets   BYTE PTR [ebx-0x235b9811]
  4069f5:	shl    DWORD PTR [esi-0x2d],0x74
  4069f9:	or     BYTE PTR [esi],0x11
  4069fc:	imul   ebp,DWORD PTR ds:0x2c9ddd8e,0x55177946
  406a06:	xchg   edi,eax
  406a07:	fs dec al
  406a0a:	fist   WORD PTR [ebx]
  406a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a0d:	std    
  406a0e:	repnz mov dh,0xb6
  406a11:	push   ecx
  406a12:	push   ebx
  406a13:	popf   
  406a14:	inc    ebp
  406a15:	pop    ss
  406a16:	add    edx,DWORD PTR [ebx-0x6d36d50f]
  406a1c:	sbb    al,0x86
  406a1e:	cmp    eax,0x38426a50
  406a23:	outs   dx,DWORD PTR ds:[esi]
  406a24:	pushf  
  406a25:	(bad)  
  406a26:	in     al,0x59
  406a28:	cmp    al,0x2a
  406a2a:	loope  0x406a19
  406a2c:	test   al,0xf9
  406a2e:	outs   dx,BYTE PTR ds:[esi]
  406a2f:	dec    ebp
  406a30:	(bad)  
  406a31:	cmp    eax,0x4d0139c7
  406a36:	add    BYTE PTR [ebx],dh
  406a38:	cli    
  406a39:	sub    bl,BYTE PTR [edx]
  406a3b:	lods   eax,DWORD PTR ds:[esi]
  406a3c:	add    al,BYTE PTR [eax+0x36]
  406a3f:	mov    eax,DWORD PTR [edi-0x12028ec6]
  406a45:	cmp    al,0xeb
  406a47:	push   edx
  406a48:	mov    dl,0xab
  406a4a:	pop    edi
  406a4b:	cld    
  406a4c:	add    cl,dl
  406a4e:	mov    ebx,0x3e983143
  406a53:	pop    ds
  406a54:	dec    esi
  406a55:	js     0x406a83
  406a57:	pushf  
  406a58:	mov    eax,DWORD PTR [ecx-0x7f]
  406a5b:	popa   
  406a5c:	mov    edx,0x991820ed
  406a61:	out    dx,eax
  406a62:	or     al,bl
  406a64:	push   ebp
  406a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a66:	push   esp
  406a67:	fiadd  DWORD PTR ds:[esi+0x57]
  406a6b:	mov    DWORD PTR [esp+eax*1+0xb],edx
  406a6f:	in     al,0x23
  406a71:	ret    
  406a72:	cmp    bl,BYTE PTR [ebx-0x40455522]
  406a78:	sub    esi,esp
  406a7a:	or     ecx,ebx
  406a7c:	pop    es
  406a7d:	gs out 0x91,al
  406a80:	fs (bad) 
  406a82:	sub    al,0x5d
  406a84:	lods   eax,DWORD PTR ds:[esi]
  406a85:	stc    
  406a86:	xchg   esp,eax
  406a87:	adc    eax,0x934add3
  406a8c:	sub    DWORD PTR [ecx+ecx*4],0x8a260392
  406a93:	mov    al,0xe
  406a95:	push   es
  406a96:	xor    edx,DWORD PTR [eax-0x21]
  406a99:	pop    ebp
  406a9a:	stos   BYTE PTR es:[edi],al
  406a9b:	or     DWORD PTR [edx-0x38],ebp
  406a9e:	add    bl,BYTE PTR es:[esi]
  406aa1:	inc    esp
  406aa2:	popf   
  406aa3:	rcl    BYTE PTR [ebx-0x10],1
  406aa6:	les    ebx,FWORD PTR [edi-0x696f7a64]
  406aac:	ficom  DWORD PTR [ecx+0x66]
  406aaf:	dec    esi
  406ab0:	ja     0x406a8d
  406ab2:	mov    dh,0xaf
  406ab4:	scas   eax,DWORD PTR es:[edi]
  406ab5:	xor    al,0xd
  406ab7:	div    DWORD PTR [ebp+0x33]
  406aba:	(bad)  
  406abc:	rol    BYTE PTR [edx+edx*2],0x8
  406ac0:	mov    esp,ebp
  406ac2:	sbb    BYTE PTR [edi-0x4c],bh
  406ac5:	dec    edi
  406ac6:	xor    DWORD PTR ds:0x7c586587,esi
  406acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406acd:	add    dl,cl
  406acf:	icebp  
  406ad0:	mov    esi,0x802c0fb0
  406ad5:	aam    0xff
  406ad7:	or     al,0x8b
  406ad9:	ins    BYTE PTR es:[edi],dx
  406ada:	sub    al,al
  406adc:	pop    ecx
  406add:	out    0xe5,al
  406adf:	js     0x406b55
  406ae1:	sub    ebx,DWORD PTR [esi]
  406ae3:	jle    0x406b44
  406ae5:	loop   0x406a9e
  406ae7:	inc    ecx
  406ae8:	pop    ss
  406ae9:	stc    
  406aea:	cwde   
  406aeb:	ss ret 0xd197
  406aef:	jmp    0x86010eef
  406af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406af5:	dec    edx
  406af6:	sub    BYTE PTR [esi],bl
  406af8:	jp     0x406ae8
  406afa:	push   eax
  406afb:	mov    edi,0x5e19a752
  406b00:	inc    edx
  406b01:	(bad)  
  406b02:	imul   esp,DWORD PTR [eax+0x153a0823],0xaaf8dd9b
  406b0c:	mov    ds:0xade026d4,al
  406b11:	mov    eax,ds:0x27baa2ac
  406b16:	dec    ebx
  406b17:	add    esp,DWORD PTR [eax-0x50]
  406b1a:	ins    DWORD PTR es:[edi],dx
  406b1b:	leave  
  406b1c:	in     eax,dx
  406b1d:	add    dh,dl
  406b1f:	pop    esi
  406b20:	pop    esp
  406b21:	retf   
  406b22:	mov    dh,0x9e
  406b24:	retf   
  406b25:	das    
  406b26:	imul   esi,eax,0x98f32422
  406b2c:	jmp    0x406af4
  406b2e:	sbb    eax,0xfca78e03
  406b33:	inc    esp
  406b34:	stc    
  406b35:	inc    esp
  406b36:	xchg   edx,eax
  406b37:	adc    DWORD PTR [edi+0x6047ed85],edx
  406b3d:	inc    ecx
  406b3e:	sar    bh,1
  406b40:	in     eax,0xce
  406b42:	je     0x406b53
  406b44:	or     eax,0x42954952
  406b49:	jl     0x406af0
  406b4b:	xor    ch,dl
  406b4d:	push   ss
  406b4e:	in     al,dx
  406b4f:	fst    DWORD PTR [ebx-0x80]
  406b52:	test   eax,0xa069c6a3
  406b57:	enter  0x3330,0x54
  406b5b:	xor    DWORD PTR [eax],esp
  406b5d:	adc    al,0x80
  406b5f:	push   0xffffff82
  406b61:	retf   
  406b62:	std    
  406b63:	adc    dh,ah
  406b65:	xchg   WORD PTR ds:0x7659a1d4,ax
  406b6c:	retf   
  406b6d:	or     al,0x1
  406b6f:	push   0x2966c439
  406b74:	sar    BYTE PTR [esi-0x48624cff],0xc1
  406b7b:	cs ss jb 0x406b06
  406b7f:	and    esi,DWORD PTR [esi]
  406b81:	pop    esp
  406b82:	cmc    
  406b83:	pop    edi
  406b84:	jb     0x406b19
  406b86:	lahf   
  406b87:	xor    edi,DWORD PTR [edi]
  406b89:	cmp    ch,BYTE PTR [edx]
  406b8b:	stc    
  406b8c:	jb     0x406c02
  406b8e:	adc    esi,DWORD PTR [edx-0x25]
  406b91:	push   0xac269262
  406b96:	outs   dx,BYTE PTR ds:[esi]
  406b97:	push   cs
  406b98:	sbb    eax,0x13f32bc5
  406b9d:	sub    ebx,edx
  406b9f:	jns    0x406b99
  406ba1:	sub    al,0xd0
  406ba3:	popf   
  406ba4:	mov    al,0xc7
  406ba6:	inc    ebp
  406ba7:	xchg   ebp,eax
  406ba8:	jge    0x406b6c
  406baa:	arpl   WORD PTR [edi-0x6b],cx
  406bad:	mov    cl,0x97
  406baf:	xor    ah,ch
  406bb1:	pop    eax
  406bb2:	sahf   
  406bb3:	sub    DWORD PTR [edx],esi
  406bb5:	adc    esi,DWORD PTR [ebx+0x72934199]
  406bbb:	iret   
  406bbc:	inc    eax
  406bbd:	out    0x5f,al
  406bbf:	push   esp
  406bc0:	jne    0x406b51
  406bc2:	fistp  QWORD PTR [ebp+0x7bcbaaff]
  406bc8:	or     DWORD PTR [edx],eax
  406bca:	xchg   ebx,eax
  406bcb:	shr    DWORD PTR [eax+0x10],0x3b
  406bcf:	xchg   ecx,eax
  406bd0:	cmp    ah,BYTE PTR [edi]
  406bd2:	and    DWORD PTR [ebx+edx*2],esi
  406bd5:	or     BYTE PTR [eax],cl
  406bd7:	cmp    al,0xec
  406bd9:	push   bp
  406bdb:	retf   
  406bdc:	adc    eax,0x31110f13
  406be1:	jmp    0x406bfd
  406be3:	xlat   BYTE PTR ds:[ebx]
  406be4:	rcr    DWORD PTR [eax+0x61],cl
  406be7:	push   ecx
  406be8:	ds in  al,0x40
  406beb:	aas    
  406bec:	pop    ss
  406bed:	xchg   ebx,eax
  406bee:	sub    al,0x7d
  406bf0:	sbb    BYTE PTR [ebp-0x30],cl
  406bf3:	cdq    
  406bf4:	pushf  
  406bf5:	pop    esp
  406bf6:	and    al,0x19
  406bf8:	or     BYTE PTR [ecx+0x2c],ch
  406bfb:	jle    0x406c55
  406bfd:	mov    al,ds:0x396b02d7
  406c02:	cmp    eax,0x9726ff53
  406c07:	repnz mov ecx,0xcee5716d
  406c0d:	or     BYTE PTR [esi],ah
  406c0f:	dec    eax
  406c10:	cmc    
  406c11:	xchg   esi,eax
  406c12:	stos   DWORD PTR es:[edi],eax
  406c13:	cld    
  406c14:	xchg   ebp,eax
  406c15:	mov    ebx,DWORD PTR [ebp+0x30830633]
  406c1b:	or     eax,DWORD PTR ds:0x1c2d88ac
  406c21:	je     0x406c37
  406c23:	dec    edx
  406c24:	push   esi
  406c25:	sub    eax,0x59c80421
  406c2a:	pop    ecx
  406c2b:	sbb    esp,0xfffffffd
  406c2e:	add    eax,0x3f1e7972
  406c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c34:	cld    
  406c35:	ja     0x406c0e
  406c37:	std    
  406c38:	in     eax,dx
  406c39:	inc    ecx
  406c3a:	push   edi
  406c3b:	and    eax,0x5036e520
  406c40:	xchg   ecx,eax
  406c41:	mov    edx,0x10a1a3d2
  406c46:	inc    eax
  406c47:	inc    ecx
  406c48:	mov    al,ds:0x29b261d5
  406c4d:	push   0x14db1c3f
  406c52:	clc    
  406c53:	push   edi
  406c54:	pop    ebx
  406c55:	imul   ecx,DWORD PTR [ecx+ecx*2],0x5b417c3b
  406c5c:	mov    edx,0x6da6dfaf
  406c61:	dec    ecx
  406c62:	pop    edx
  406c63:	mov    BYTE PTR [edi],dh
  406c65:	and    BYTE PTR ds:0x5f0de01e,al
  406c6b:	aam    0x1c
  406c6d:	mov    eax,ds:0x6bd24019
  406c72:	sbb    eax,0x4b294075
  406c77:	test   eax,0xd7ea3903
  406c7c:	sbb    ebx,esp
  406c7e:	es call 0x5164:0x22118fd5
  406c86:	and    eax,0xbd9f3eee
  406c8b:	sub    eax,0x81a919d1
  406c90:	std    
  406c91:	(bad)  
  406c92:	xor    ebp,esp
  406c94:	repnz xchg ebp,eax
  406c96:	in     eax,dx
  406c97:	adc    edi,DWORD PTR [ebx+0x67a295f0]
  406c9d:	fbld   TBYTE PTR [ecx]
  406c9f:	jne    0x406ca0
  406ca1:	stc    
  406ca2:	call   0xaeae917f
  406ca7:	outs   dx,BYTE PTR ds:[esi]
  406ca8:	int    0xb6
  406caa:	ret    0xea99
  406cad:	sahf   
  406cae:	adc    bh,BYTE PTR [ebx-0x4c1ee1ad]
  406cb4:	push   ds
  406cb5:	add    al,0xe9
  406cb7:	push   ss
  406cb8:	push   esp
  406cb9:	jecxz  0x406cd1
  406cbb:	sbb    ch,BYTE PTR [ecx+0x4e]
  406cbe:	jbe    0x406cf0
  406cc0:	test   ebx,ebx
  406cc2:	mov    cl,0xbd
  406cc4:	cmp    bl,BYTE PTR [edx-0x6b2a8d15]
  406cca:	pop    edx
  406ccb:	ss jge 0x406c67
  406cce:	fadd   QWORD PTR [edi]
  406cd0:	adc    eax,DWORD PTR [edi+ecx*2]
  406cd3:	dec    DWORD PTR [ebp+ecx*4+0x69]
  406cd7:	lea    ebp,[esp+esi*8+0x4e11dece]
  406cde:	push   esp
  406cdf:	sbb    ebp,ecx
  406ce1:	out    dx,al
  406ce2:	das    
  406ce3:	mov    ds:0xfa00a8c5,eax
  406ce8:	jo     0x406ca6
  406cea:	xchg   ecx,eax
  406ceb:	imul   edi,esi,0xe4e971be
  406cf1:	xor    bl,cl
  406cf3:	jmp    0x406cc8
  406cf5:	add    eax,0x614fb063
  406cfa:	mov    cl,0xb7
  406cfc:	dec    ecx
  406cfd:	icebp  
  406cfe:	loop   0x406ca0
  406d00:	sbb    eax,0x3916b16e
  406d05:	sub    BYTE PTR [esi-0x57db53c4],ah
  406d0b:	mov    al,ds:0x416b5a32
  406d10:	cmp    eax,0x8bafaedf
  406d15:	xchg   esp,eax
  406d16:	push   esi
  406d17:	adc    esi,eax
  406d19:	outs   dx,BYTE PTR ds:[esi]
  406d1a:	push   esp
  406d1b:	inc    esi
  406d1c:	call   0x89d6:0x2a94475a
  406d23:	sub    al,BYTE PTR [esi-0x7f]
  406d26:	aam    0x62
  406d28:	xchg   esi,eax
  406d29:	dec    DWORD PTR [edi-0x7de7632f]
  406d2f:	retf   
  406d30:	cmp    esp,ebx
  406d32:	xchg   esp,eax
  406d33:	mov    edx,DWORD PTR ds:0xc5b1d85a
  406d39:	mov    edx,DWORD PTR [ebx-0x3d145e33]
  406d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d40:	or     BYTE PTR [ebx-0x18],dh
  406d43:	or     al,0x1a
  406d45:	jl     0x406ce8
  406d47:	add    dh,BYTE PTR [bp+di]
  406d4a:	sbb    esi,DWORD PTR [ebx]
  406d4c:	cs scas eax,DWORD PTR es:[edi]
  406d4e:	jle    0x406da9
  406d50:	or     dl,BYTE PTR [eax]
  406d52:	lahf   
  406d53:	pop    edi
  406d54:	in     eax,dx
  406d55:	fisubr WORD PTR [edx-0xc]
  406d58:	imul   eax,DWORD PTR [ecx+0x6c873a65],0x83a186cb
  406d62:	jg     0x406d7c
  406d64:	int    0x6
  406d66:	lahf   
  406d67:	and    esp,eax
  406d69:	icebp  
  406d6a:	adc    ebx,DWORD PTR [ebp+eiz*4-0x6134b6af]
  406d71:	inc    ecx
  406d72:	cld    
  406d73:	pop    ecx
  406d74:	aam    0x8f
  406d76:	test   al,0x9c
  406d78:	stc    
  406d79:	inc    ecx
  406d7a:	shl    DWORD PTR [edx],cl
  406d7c:	aad    0xb5
  406d7e:	mov    eax,ds:0x9a74d6c2
  406d83:	jns    0x406d50
  406d85:	and    dl,BYTE PTR [esi]
  406d87:	sub    bh,BYTE PTR [ebx+edx*1+0x72]
  406d8b:	and    BYTE PTR [edx-0x4b9e97bb],bh
  406d91:	add    eax,0xf5ef2731
  406d96:	jge    0x406d8f
  406d98:	ret    
  406d99:	jns    0x406daf
  406d9b:	les    eax,FWORD PTR [eax-0x17be1248]
  406da1:	scas   eax,DWORD PTR es:[edi]
  406da2:	xor    esp,DWORD PTR [ebx]
  406da4:	adc    al,BYTE PTR [edi]
  406da6:	xor    DWORD PTR [esi+eiz*2+0x6c8dc076],ecx
  406dad:	popf   
  406dae:	mov    eax,0x9a229ec4
  406db3:	mov    ebx,0x32393e2
  406db8:	mov    al,0x63
  406dba:	push   ebp
  406dbb:	pop    edx
  406dbc:	mov    al,bh
  406dbe:	add    al,0x74
  406dc0:	icebp  
  406dc1:	pop    ebx
  406dc2:	jne    0x406d9f
  406dc4:	mov    DWORD PTR [edi-0x8b1cc59],eax
  406dca:	jmp    0xca19:0xdd675cd9
  406dd1:	int3   
  406dd2:	cs inc edi
  406dd4:	sbb    DWORD PTR [ebx],0x688c1427
  406dda:	xchg   esi,eax
  406ddb:	adc    eax,0x3be3022c
  406de0:	mov    ?,ebx
  406de2:	pop    ss
  406de3:	add    BYTE PTR [edx],cl
  406de5:	or     eax,DWORD PTR [ecx-0x3]
  406de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de9:	adc    al,BYTE PTR [eax]
  406deb:	les    ebx,FWORD PTR [edx]
  406ded:	mov    esp,0x99e53aa3
  406df2:	in     eax,0xb2
  406df4:	call   0x5ddd:0x287ea5f2
  406dfb:	sub    al,0xd6
  406dfd:	leave  
  406dfe:	int3   
  406dff:	mov    al,ds:0xb23d93d1
  406e04:	(bad)  
  406e05:	sbb    dh,BYTE PTR ds:0xb84af9d
  406e0b:	pop    edx
  406e0c:	mov    edx,0xfae9d1f8
  406e11:	mov    ch,BYTE PTR [ecx+0x7165bdc7]
  406e17:	ss stos DWORD PTR es:[edi],eax
  406e19:	pop    es
  406e1a:	(bad)  
  406e1b:	or     bl,BYTE PTR [eax]
  406e1d:	push   ebx
  406e1e:	je     0x406ddf
  406e20:	ins    DWORD PTR es:[edi],dx
  406e21:	sub    edi,DWORD PTR ds:[edx+0x786c37cc]
  406e28:	inc    esi
  406e29:	and    bl,BYTE PTR [edi]
  406e2b:	add    BYTE PTR [edi-0x64c2bb36],0x3d
  406e32:	(bad)  [edi]
  406e34:	(bad)  [edi-0x14]
  406e37:	outs   dx,BYTE PTR ds:[esi]
  406e38:	gs pop ss
  406e3a:	or     esp,DWORD PTR [ebp-0x305bb778]
  406e40:	cmp    cl,cl
  406e42:	in     al,dx
  406e43:	ret    0x1488
  406e46:	jns    0x406df6
  406e48:	xchg   ebx,eax
  406e49:	xchg   ebp,eax
  406e4a:	mov    WORD PTR [edx],ds
  406e4c:	xchg   ecx,eax
  406e4d:	out    0x8b,al
  406e4f:	mov    ebp,DWORD PTR [eax]
  406e51:	mov    eax,0x6f90edcf
  406e56:	push   ds
  406e57:	push   cs
  406e58:	mov    WORD PTR [ecx],?
  406e5a:	push   ebx
  406e5b:	mov    ah,0xd9
  406e5d:	clc    
  406e5e:	push   ebx
  406e5f:	jb     0x406ea7
  406e61:	mov    esp,0xcc4c50c4
  406e66:	int3   
  406e67:	sub    BYTE PTR [ecx+0x7a],bh
  406e6a:	dec    esp
  406e6b:	sar    DWORD PTR ds:[ebx],1
  406e6e:	ss pop ecx
  406e70:	xor    BYTE PTR [eax+0xbbc0362],al
  406e76:	popa   
  406e77:	xor    ebx,ecx
  406e79:	icebp  
  406e7a:	adc    BYTE PTR [esi+0x10],dh
  406e7d:	test   eax,0x5e3ec24d
  406e82:	and    BYTE PTR [edx],0x73
  406e85:	inc    eax
  406e86:	jp     0x406e22
  406e88:	stc    
  406e89:	and    esp,esp
  406e8b:	push   ss
  406e8c:	or     eax,0x9a24a09b
  406e91:	mov    bl,0x78
  406e93:	xchg   BYTE PTR [ecx-0x30922cf8],bh
  406e99:	add    BYTE PTR [ebp-0x653b10fe],bh
  406e9f:	and    ebx,DWORD PTR [edi+0x65eef54c]
  406ea5:	clc    
  406ea6:	je     0x406f04
  406ea8:	ror    DWORD PTR [ecx],1
  406eaa:	scas   eax,DWORD PTR es:[edi]
  406eab:	or     BYTE PTR [edx-0x13],dh
  406eae:	pusha  
  406eaf:	rcr    BYTE PTR [edi],cl
  406eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eb2:	jg     0x406e78
  406eb4:	push   esi
  406eb5:	inc    edx
  406eb6:	pop    edi
  406eb7:	(bad)  
  406eb8:	das    
  406eb9:	bound  eax,QWORD PTR [edi-0xc]
  406ebc:	mov    al,BYTE PTR [esi+0x2ecbc9f3]
  406ec2:	retf   0xbfd
  406ec5:	ins    BYTE PTR es:[edi],dx
  406ec6:	in     eax,dx
  406ec7:	or     al,0x1b
  406ec9:	push   esp
  406eca:	pusha  
  406ecb:	jns    0x406ecd
  406ecd:	in     eax,dx
  406ece:	test   eax,0x1e101cdd
  406ed3:	cmp    ebp,DWORD PTR [eax-0x3c20a9ec]
  406ed9:	(bad)  
  406eda:	xchg   esp,eax
  406edb:	retf   
  406edc:	popa   
  406edd:	dec    edi
  406ede:	inc    eax
  406edf:	imul   ebp,DWORD PTR [ebx],0x30e5354
  406ee5:	fwait
  406ee6:	xchg   esi,eax
  406ee7:	(bad)  
  406ee9:	(bad)  
  406eea:	fnstenv [ebp+0x4d7f2146]
  406ef0:	mov    cl,0xfe
  406ef2:	repnz add al,0x51
  406ef5:	mov    ebp,0x1cfb656a
  406efa:	push   ebp
  406efb:	xadd   DWORD PTR [edx+0x220285db],ebp
  406f02:	repz cmc 
  406f04:	pop    edx
  406f05:	xchg   ebp,eax
  406f06:	pop    es
  406f07:	add    ebx,DWORD PTR [ecx+edx*8]
  406f0a:	mov    al,0x8f
  406f0c:	iret   
  406f0d:	test   BYTE PTR [edx],0x19
  406f10:	pop    ebp
  406f11:	pop    ss
  406f12:	add    al,bl
  406f14:	mov    ebp,0xa160cfbb
  406f19:	mov    bl,0x4b
  406f1b:	int    0x95
  406f1d:	mov    ds:0xb21a4a08,al
  406f22:	mov    BYTE PTR [ecx+0x14],bl
  406f25:	mov    al,ds:0xed1857ea
  406f2a:	dec    edx
  406f2b:	inc    edx
  406f2c:	and    esi,DWORD PTR [edi]
  406f2e:	xchg   ebp,eax
  406f2f:	and    edx,DWORD PTR [ebx+0x28c5eefd]
  406f35:	sub    al,0x7c
  406f37:	das    
  406f38:	fcomip st,st(2)
  406f3a:	sub    al,0xb3
  406f3c:	cs aad 0x5a
  406f3f:	mov    ebx,DWORD PTR [ecx+0x28bdf30f]
  406f45:	lods   al,BYTE PTR ds:[esi]
  406f46:	jo     0x406f4d
  406f48:	std    
  406f49:	addps  xmm4,XMMWORD PTR [edx+edi*1+0x22]
  406f4e:	(bad)  
  406f50:	add    al,0xd0
  406f52:	retf   0xe765
  406f55:	and    al,0x14
  406f57:	jmp    0xa76:0x86f35b91
  406f5e:	(bad)  
  406f60:	hlt    
  406f61:	pminsw mm4,QWORD PTR [edi+eiz*8]
  406f65:	inc    edi
  406f66:	fstp   DWORD PTR [edi]
  406f68:	into   
  406f69:	xlat   BYTE PTR ds:[ebx]
  406f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6b:	pusha  
  406f6c:	push   esi
  406f6d:	cmp    al,0x8e
  406f6f:	mov    bh,0xe3
  406f71:	sub    DWORD PTR [ebp+0x34e90e6b],ebx
  406f77:	push   sp
  406f79:	push   ebx
  406f7a:	icebp  
  406f7b:	dec    esp
  406f7c:	clc    
  406f7d:	aam    0x11
  406f7f:	adc    dl,al
  406f81:	das    
  406f82:	jge    0x406f04
  406f84:	scas   eax,DWORD PTR es:[edi]
  406f85:	(bad)  
  406f86:	xor    bh,ch
  406f88:	out    dx,eax
  406f89:	out    dx,al
  406f8a:	lea    edi,[eax+0x45]
  406f8d:	bound  edi,QWORD PTR [ebp+0x2b]
  406f90:	push   ebp
  406f91:	retf   
  406f92:	sub    BYTE PTR ss:[esi],ah
  406f95:	jae    0x406fea
  406f97:	outs   dx,BYTE PTR ds:[esi]
  406f98:	add    al,0x85
  406f9a:	fcom   QWORD PTR [ecx]
  406f9c:	cmp    BYTE PTR [ebx],bl
  406f9e:	xchg   ebp,eax
  406f9f:	test   BYTE PTR [ebp-0x5d],ch
  406fa2:	push   edi
  406fa3:	xor    edi,DWORD PTR [edi+ebp*4-0x6f31f727]
  406faa:	pop    edi
  406fab:	mov    edx,0x3a00c370
  406fb0:	repnz pop edi
  406fb2:	stos   BYTE PTR es:[edi],al
  406fb3:	das    
  406fb4:	jmp    DWORD PTR [edx+0x64]
  406fb7:	adc    DWORD PTR [edi],ecx
  406fb9:	fs xchg ebx,eax
  406fbb:	mov    WORD PTR [edi],gs
  406fbd:	cwde   
  406fbe:	pushf  
  406fbf:	push   edx
  406fc0:	xchg   esi,eax
  406fc1:	and    ebx,eax
  406fc3:	pushf  
  406fc4:	adc    BYTE PTR [ebx],0xae
  406fc7:	mov    ds:0xd3b70a3a,al
  406fcc:	(bad)  
  406fcd:	push   edi
  406fce:	add    al,cl
  406fd0:	mov    ch,dl
  406fd2:	or     eax,0xb960d864
  406fd7:	push   0x75
  406fd9:	(bad)  
  406fda:	sbb    DWORD PTR es:[ecx],edx
  406fdd:	mov    edi,0x415f891e
  406fe2:	pop    ebx
  406fe3:	mov    ebp,0x724cbab2
  406fe8:	and    al,0x84
  406fea:	push   ds
  406feb:	cmp    al,0xab
  406fed:	add    ecx,DWORD PTR [edx]
  406fef:	loope  0x407011
  406ff1:	inc    esp
  406ff2:	(bad)  
  406ff3:	sti    
  406ff4:	idiv   BYTE PTR [ebx-0x559d7b4b]
  406ffa:	xor    ebp,edx
  406ffc:	ror    BYTE PTR [ebx+0x23845f2e],1
  407002:	mov    bl,0xf1
  407004:	outs   dx,DWORD PTR ds:[esi]
  407005:	aam    0xf7
  407007:	push   ds
  407008:	mov    eax,cs
  40700a:	cs pop esp
  40700c:	stos   BYTE PTR es:[edi],al
  40700d:	dec    eax
  40700e:	adc    DWORD PTR [esp+ebp*8+0x4],eax
  407012:	cmp    al,0x15
  407014:	xor    ah,ah
  407016:	retf   0x642d
  407019:	call   edi
  40701b:	adc    dh,BYTE PTR [ecx]
  40701d:	call   0xb9f4f17b
  407022:	pop    ebp
  407023:	cld    
  407024:	sub    esp,ecx
  407026:	(bad)  
  407027:	dec    ebx
  407028:	xchg   edi,eax
  407029:	rcr    DWORD PTR [esi+0x7da9119a],cl
  40702f:	aad    0x17
  407031:	imul   esi,DWORD PTR [edx-0x11],0xffffffc8
  407035:	shr    DWORD PTR ds:0xe0355c75,cl
  40703b:	push   ebp
  40703c:	dec    ebx
  40703d:	xchg   ecx,eax
  40703e:	mov    dl,0x8d
  407040:	test   BYTE PTR [esi],dl
  407042:	mov    eax,ds:0x977ac771
  407047:	cld    
  407048:	int    0x73
  40704a:	xor    eax,0x7736aee6
  40704f:	inc    ebx
  407050:	call   0x4d9a:0x60fc7377
  407057:	ins    BYTE PTR es:[edi],dx
  407058:	jp     0x406fe4
  40705a:	ds enter 0x6de5,0x29
  40705f:	mov    bh,0xb0
  407061:	(bad)  
  407062:	cmp    edi,DWORD PTR [ecx+0x4f]
  407065:	outs   dx,DWORD PTR ds:[esi]
  407066:	xor    al,0xaf
  407068:	mov    al,0x6e
  40706a:	xchg   esp,eax
  40706b:	inc    ecx
  40706c:	sahf   
  40706d:	loopne 0x407029
  40706f:	or     al,0xc2
  407071:	out    dx,al
  407072:	pop    ss
  407073:	fnstcw WORD PTR [eax]
  407075:	mov    cl,0xff
  407077:	in     al,dx
  407078:	jne    0x407059
  40707a:	and    BYTE PTR [eax+0x24804135],al
  407080:	call   0xcdee:0xba4eaa5d
  407087:	sub    al,0xf3
  407089:	add    al,0x14
  40708b:	aaa    
  40708c:	or     esi,edx
  40708e:	mov    ch,0xcc
  407090:	loop   0x407061
  407092:	pop    edi
  407093:	aaa    
  407094:	mov    esi,0xdaf5ef6a
  407099:	xchg   ebx,esi
  40709b:	outs   dx,DWORD PTR ds:[esi]
  40709c:	jae    0x40701e
  40709e:	jge    0x4070c0
  4070a0:	cmc    
  4070a1:	lods   al,BYTE PTR ds:[esi]
  4070a2:	pop    ecx
  4070a3:	test   eax,0xf61931b1
  4070a8:	lock push esi
  4070aa:	cmp    al,0x9d
  4070ac:	mov    ebx,esp
  4070ae:	cmp    al,0xc4
  4070b0:	lock dec esi
  4070b2:	push   ecx
  4070b3:	sbb    DWORD PTR [ebx],ecx
  4070b5:	fldenv [eax]
  4070b7:	push   esi
  4070b8:	aaa    
  4070b9:	loope  0x4070f7
  4070bb:	xchg   ebp,eax
  4070bc:	fnstcw WORD PTR [edi-0x45]
  4070bf:	sti    
  4070c0:	fldpi  
  4070c2:	in     al,dx
  4070c3:	shl    DWORD PTR [esi],0x2a
  4070c6:	mov    al,ds:0x28428b6f
  4070cb:	call   0x5ac06840
  4070d0:	adc    BYTE PTR [edi+ebx*1],bl
  4070d3:	into   
  4070d4:	xor    al,BYTE PTR [edi+0x19379b54]
  4070da:	mov    al,ds:0xe14f0837
  4070df:	xor    bl,BYTE PTR [edi]
  4070e1:	call   0x66:0xc7a4c4fa
  4070e8:	call   FWORD PTR [edx+0x7a]
  4070eb:	sbb    esp,eax
  4070ed:	push   0x34
  4070ef:	in     al,dx
  4070f0:	(bad)  
  4070f1:	ror    ebp,1
  4070f3:	fnstsw WORD PTR [esi*4+0x3ef392f4]
  4070fa:	popa   
  4070fb:	arpl   bp,di
  4070fd:	jecxz  0x407092
  4070ff:	and    eax,0x3cca671e
  407104:	hlt    
  407105:	out    dx,al
  407106:	mov    ebx,0x85ad2583
  40710b:	xchg   edx,eax
  40710c:	and    BYTE PTR [edx-0x33],ch
  40710f:	cmp    eax,0x855fc902
  407114:	jne    0x4070c5
  407116:	xchg   esi,eax
  407117:	imul   DWORD PTR [ebx+0x30c8da26]
  40711d:	jle    0x40716b
  40711f:	dec    edi
  407120:	(bad)  
  407121:	inc    ebx
  407122:	(bad)  
  407123:	push   0x17fab827
  407128:	fcmovne st,st(6)
  40712a:	in     eax,dx
  40712b:	icebp  
  40712c:	push   ecx
  40712d:	cmp    dl,ah
  40712f:	add    DWORD PTR [ecx+edx*1],edi
  407132:	push   eax
  407133:	fld    TBYTE PTR [eax+0x2e870681]
  407139:	push   ebp
  40713a:	xchg   ebp,eax
  40713b:	adc    DWORD PTR [eax+esi*2],edx
  40713e:	push   cs
  40713f:	sbb    DWORD PTR ds:0xfb860698,0x8ac22845
  407149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40714a:	clc    
  40714b:	sbb    DWORD PTR [edi],0xbea315e
  407151:	mov    ebx,0xc169ceb7
  407156:	sbb    BYTE PTR [eax-0x2769fbbf],ch
  40715c:	mov    ebx,DWORD PTR [edi-0x2b]
  40715f:	mov    edi,0xb5756ebc
  407164:	lods   al,BYTE PTR ds:[esi]
  407165:	test   bh,ch
  407167:	stos   BYTE PTR es:[edi],al
  407168:	ins    DWORD PTR es:[edi],dx
  407169:	sub    BYTE PTR [eax+0x58],0x2
  40716d:	mov    cl,0x50
  40716f:	ret    0x782e
  407172:	arpl   WORD PTR [ecx],ax
  407174:	jg     0x4071d7
  407176:	std    
  407177:	fsub   st(4),st
  407179:	iret   
  40717a:	ss daa 
  40717c:	pop    ss
  40717d:	cld    
  40717e:	add    eax,0x1bde922a
  407183:	sub    eax,0x3c11581b
  407188:	ss call 0x40af:0xd739dc3d
  407190:	int3   
  407191:	push   eax
  407192:	inc    esp
  407193:	stc    
  407194:	ja     0x40715e
  407196:	popf   
  407197:	add    esp,DWORD PTR [bp+0xf]
  40719b:	or     DWORD PTR [eax+0x795db3cd],0xebea96e5
  4071a5:	inc    ecx
  4071a6:	and    al,0x9f
  4071a8:	aad    0xb6
  4071aa:	fsub   DWORD PTR [edx-0x7b2e3ef2]
  4071b0:	das    
  4071b1:	push   eax
  4071b2:	popf   
  4071b3:	rcl    BYTE PTR [edi],1
  4071b5:	stos   DWORD PTR es:[edi],eax
  4071b6:	ficom  DWORD PTR [esi+0x7ee75cd9]
  4071bc:	(bad)  
  4071bd:	jecxz  0x4071d2
  4071bf:	leave  
  4071c0:	mov    ebx,0x601f8416
  4071c5:	fbld   TBYTE PTR [edi+0x5c]
  4071c8:	push   edi
  4071c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ca:	mov    bh,0x83
  4071cc:	ja     0x40715c
  4071ce:	xchg   edi,eax
  4071cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071d0:	aas    
  4071d1:	mov    DWORD PTR [esi+0xbb23e7c],ebp
  4071d7:	icebp  
  4071d8:	repz sub eax,0xf1d9ffb8
  4071de:	xchg   edi,eax
  4071df:	(bad)  
  4071e0:	sbb    esp,ecx
  4071e2:	test   eax,esi
  4071e4:	nop
  4071e5:	fisub  WORD PTR [ecx-0x36be1a9]
  4071eb:	push   0x70
  4071ed:	cs mov edx,0x33bff935
  4071f3:	mov    bl,0x9f
  4071f5:	mov    esp,0x1e042827
  4071fa:	adc    DWORD PTR [ebx+0x730644c0],eax
  407200:	xchg   ecx,eax
  407201:	cmp    bl,BYTE PTR [ebp+ebp*1+0x7b]
  407205:	mov    ebp,0x259a08a0
  40720a:	repz jl 0x4071ee
  40720d:	inc    ebp
  40720f:	lock lea edi,[esi]
  407212:	add    DWORD PTR [ebx+ecx*2-0xe],eax
  407216:	in     eax,dx
  407217:	pop    si
  407219:	mov    dl,BYTE PTR [ebx+0x78]
  40721c:	ja     0x4071bc
  40721e:	mov    ah,0x16
  407220:	push   cs
  407221:	es sahf 
  407223:	loop   0x40725c
  407225:	inc    ebp
  407226:	push   ebp
  407227:	or     bh,BYTE PTR [ebp-0x8102200]
  40722d:	pop    es
  40722e:	bound  esp,QWORD PTR [edi+0x2c]
  407231:	jg     0x4072b1
  407233:	shl    BYTE PTR [edx+0x6a],cl
  407236:	mov    ebp,0xd409597a
  40723b:	in     al,0xbd
  40723d:	adc    esi,DWORD PTR [edi*4+0x4d85a629]
  407244:	and    ebp,edx
  407246:	and    ebp,DWORD PTR [eax]
  407248:	push   esi
  407249:	mov    gs,esp
  40724b:	lock movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40724e:	into   
  40724f:	mov    ch,0xa9
  407251:	adc    bl,BYTE PTR [eax]
  407253:	dec    ebx
  407254:	mov    ebx,0x1fc84c80
  407259:	jp     0x407246
  40725b:	repz (bad) 
  40725d:	stos   BYTE PTR es:[edi],al
  40725e:	(bad)  
  40725f:	data16 mov ds:0xd9b8933b,al
  407265:	stc    
  407266:	pop    ds
  407267:	in     al,dx
  407268:	push   0xffffffe8
  40726a:	mov    ch,0xf8
  40726c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40726d:	xchg   ecx,eax
  40726e:	mov    bh,BYTE PTR [ebx+0x73]
  407271:	jmp    0x2de54255
  407276:	adc    eax,0x1bab8107
  40727b:	clc    
  40727c:	dec    esp
  40727d:	into   
  40727e:	push   0x598dd161
  407283:	cmp    eax,0xd3baecbf
  407289:	jmp    DWORD PTR [esp+edx*4-0x17]
  40728d:	jecxz  0x4072c7
  40728f:	ret    
  407290:	js     0x4072b1
  407292:	addr16 mov edx,0xd34b686c
  407298:	ins    DWORD PTR es:[edi],dx
  407299:	mov    ch,0x82
  40729b:	or     al,0xfe
  40729d:	sbb    esi,DWORD PTR [ebx+0x59d4e455]
  4072a3:	ret    
  4072a4:	ss push ss
  4072a6:	loopne 0x407246
  4072a8:	iret   
  4072a9:	xor    eax,0x1ed7b0dd
  4072ae:	jge    0x4072f8
  4072b0:	js     0x4072ad
  4072b2:	and    DWORD PTR [ebx],esp
  4072b4:	pop    es
  4072b5:	aas    
  4072b6:	xchg   edx,eax
  4072b7:	fwait
  4072b8:	icebp  
  4072b9:	add    esp,DWORD PTR [esi]
  4072bb:	mov    bl,0x19
  4072bd:	sub    eax,0x1c2a9414
  4072c2:	je     0x4072a3
  4072c4:	enter  0x35f0,0xc
  4072c8:	lods   eax,DWORD PTR ds:[esi]
  4072c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ca:	test   dl,0xf5
  4072cd:	mov    dh,0x46
  4072cf:	mov    al,ds:0xd6a57087
  4072d4:	pop    ebx
  4072d5:	out    0x57,al
  4072d7:	enter  0x1b21,0x1a
  4072db:	dec    ebp
  4072dc:	imul   ebx,ebx,0x7c846686
  4072e2:	jmp    0x8ddec2f8
  4072e7:	add    cl,dh
  4072e9:	dec    edi
  4072ea:	jne    0x407312
  4072ec:	push   0x24
  4072ee:	mov    edx,0x9f7fa61d
  4072f3:	mov    al,0xb0
  4072f5:	cdq    
  4072f6:	adc    BYTE PTR [esi],cl
  4072f8:	xchg   eax,edi
  4072fa:	cmp    eax,0xddd99bb8
  4072ff:	mov    bl,0xc0
  407301:	mov    ch,0x21
  407303:	cwde   
  407304:	loop   0x4072df
  407306:	mov    ch,ch
  407308:	xchg   ebx,eax
  407309:	add    eax,0x5e75539e
  40730e:	sub    ah,BYTE PTR [edi+ebp*2-0x517e3b93]
  407315:	cmp    BYTE PTR [ebx+0x55],bl
  407318:	cmp    ch,BYTE PTR [edi+ecx*2+0x30]
  40731c:	xor    esi,DWORD PTR [edi-0x75]
  40731f:	sub    BYTE PTR [ecx+ebp*2],ah
  407322:	mov    al,ds:0xfa3eccaf
  407327:	aad    0x88
  407329:	jge    0x407355
  40732b:	mov    ebx,0xd5cf404b
  407330:	icebp  
  407331:	addr16 cli 
  407333:	adc    al,0x28
  407335:	xchg   esi,eax
  407336:	(bad)  
  407337:	iret   
  407338:	(bad)  
  407339:	pop    DWORD PTR [edi+eax*1+0x1b870216]
  407340:	xor    eax,0xdc69684f
  407345:	ret    
  407346:	pop    ss
  407347:	imul   esp,esp,0xbaf59eb0
  40734d:	into   
  40734e:	jbe    0x407396
  407350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407351:	arpl   di,sp
  407353:	xchg   esi,eax
  407354:	sbb    BYTE PTR [edi],dh
  407356:	outs   dx,DWORD PTR ds:[esi]
  407357:	in     al,dx
  407358:	mov    ecx,0x46d475da
  40735d:	add    al,0xfb
  40735f:	aam    0xc7
  407361:	push   ebp
  407362:	loope  0x407349
  407364:	fldcw  WORD PTR [ecx+0x527104a7]
  40736a:	pop    eax
  40736b:	mov    BYTE PTR [eax],dh
  40736d:	(bad)  [edx+0xb00eae4]
  407373:	in     eax,dx
  407374:	in     al,0x88
  407376:	xor    esi,edx
  407378:	or     ebp,esp
  40737a:	xor    BYTE PTR [edx-0x4f],0xb2
  40737e:	jbe    0x4073d6
  407380:	aaa    
  407381:	or     al,0x9d
  407383:	(bad)
  407388:	leave  
  407389:	and    ebx,ebp
  40738b:	mov    BYTE PTR [ecx-0x4d],0x11
  40738f:	push   ebp
  407390:	inc    edx
  407391:	fsubr  QWORD PTR [edi-0x5d]
  407394:	into   
  407395:	push   esp
  407396:	lods   al,BYTE PTR ds:[esi]
  407397:	inc    edx
  407398:	sbb    DWORD PTR [ecx+0x5a],0xddde4b5a
  40739f:	push   esi
  4073a0:	call   0x9f3b:0xd0e6e65f
  4073a7:	sti    
  4073a8:	nop
  4073a9:	imul   edi,DWORD PTR [ebx-0x58688824],0xfffffff6
  4073b0:	and    ah,bh
  4073b2:	adc    DWORD PTR gs:[esi+0x2b],esp
  4073b6:	les    eax,FWORD PTR [ebx-0x7837f4a7]
  4073bc:	mov    al,ds:0x65e4747e
  4073c1:	mov    dh,0xbc
  4073c3:	xor    DWORD PTR [edx-0x75],0x99ee91b9
  4073ca:	test   BYTE PTR [edi+0x6ee8335c],al
  4073d0:	pushfw 
  4073d2:	jns    0x40738b
  4073d4:	out    dx,al
  4073d5:	nop
  4073d6:	dec    edi
  4073d7:	cmp    ebp,DWORD PTR ds:0x9edd745d
  4073dd:	adc    BYTE PTR [ebx],0x1b
  4073e0:	mov    fs,WORD PTR [ecx+0x3a]
  4073e3:	mov    al,BYTE PTR [ebx]
  4073e5:	mov    cl,ch
  4073e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e8:	mov    bh,0xbb
  4073ea:	dec    esp
  4073eb:	div    DWORD PTR [edi]
  4073ed:	cs mov edi,?
  4073f0:	jge    0x40743a
  4073f2:	gs mov ecx,0xbd450d4
  4073f8:	and    al,0x51
  4073fa:	xor    dh,BYTE PTR [esi-0x21523854]
  407400:	test   eax,0x777c13eb
  407405:	jne    0x40743a
  407407:	jbe    0x407415
  407409:	jp     0x4073c4
  40740b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40740c:	inc    ecx
  40740d:	jg     0x4073fc
  40740f:	xlat   BYTE PTR ds:[ebx]
  407410:	jp     0x407426
  407412:	lea    esp,[esi+ecx*8+0x668e1e12]
  407419:	xchg   ebx,ebp
  40741b:	cld    
  40741c:	mov    eax,ds:0x4e2c34d1
  407421:	sub    eax,0x66c1d5b5
  407426:	pminub mm5,QWORD PTR [edi-0x39123146]
  40742d:	cli    
  40742e:	add    al,0xe7
  407430:	shl    DWORD PTR [edi+0x6],cl
  407433:	dec    esp
  407434:	xlat   BYTE PTR ds:[ebx]
  407435:	sub    DWORD PTR [edx+0x60510bb8],ebp
  40743b:	sbb    al,0x3
  40743d:	xlat   BYTE PTR ds:[ebx]
  40743e:	call   0x4603:0xf7945cd2
  407445:	in     al,dx
  407446:	jne    0x407452
  407448:	push   ebp
  407449:	test   DWORD PTR [ebp+0x6319c26b],0x7d219628
  407453:	pop    ebx
  407454:	sbb    dl,BYTE PTR [ebx]
  407456:	ds aaa 
  407458:	lds    eax,FWORD PTR [ecx-0x2f1bd5e9]
  40745e:	jbe    0x40740a
  407460:	into   
  407461:	stc    
  407462:	lahf   
  407463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407464:	and    DWORD PTR [eax+0x31],edx
  407467:	jecxz  0x407449
  407469:	xchg   ebx,eax
  40746a:	sub    dl,BYTE PTR [ebx-0x7c]
  40746d:	cmp    eax,0xc6835bd8
  407472:	mov    ebx,0xd8b0a63e
  407477:	add    dh,BYTE PTR [edi-0x2]
  40747a:	xchg   BYTE PTR [edx-0x5c767642],bh
  407480:	inc    esi
  407481:	push   eax
  407482:	ds or  al,0x2e
  407485:	int3   
  407486:	ins    BYTE PTR es:[edi],dx
  407487:	test   BYTE PTR [edi+0x66fc7227],0xfa
  40748e:	jae    0x40747d
  407490:	or     ah,bh
  407492:	mov    dl,0x5f
  407494:	std    
  407495:	jmp    0xf2d18ab
  40749a:	pusha  
  40749b:	inc    ebp
  40749c:	add    al,0xb0
  40749e:	or     bl,BYTE PTR [edi-0x26919b31]
  4074a4:	aas    
  4074a5:	fadd   st(5),st
  4074a7:	int3   
  4074a8:	sub    eax,DWORD PTR [edx-0x504bb218]
  4074ae:	sbb    cl,al
  4074b0:	or     al,0x7b
  4074b2:	xchg   edx,eax
  4074b3:	retf   
  4074b4:	ffreep st(3)
  4074b6:	push   esp
  4074b7:	add    DWORD PTR [edx-0x614f96ff],eax
  4074bd:	push   ebp
  4074be:	xchg   ecx,eax
  4074bf:	test   eax,0x8248b23e
  4074c4:	nop    DWORD PTR [ebx]
  4074c7:	fadd   DWORD PTR [esi-0x6a]
  4074ca:	mov    al,0x6f
  4074cc:	lods   al,BYTE PTR ds:[esi]
  4074cd:	jmp    0x407467
  4074cf:	loope  0x40754e
  4074d1:	sbb    eax,0x7780c39d
  4074d6:	pop    edi
  4074d7:	ret    0xf45c
  4074da:	or     eax,0x9f4dd892
  4074df:	push   ds
  4074e0:	xlat   BYTE PTR ds:[ebx]
  4074e1:	push   edx
  4074e2:	mov    dh,BYTE PTR [edx+eiz*1+0x10]
  4074e6:	cmp    eax,0xef0280bf
  4074eb:	pop    esp
  4074ec:	or     dl,ch
  4074ee:	sub    eax,0x3180cb23
  4074f3:	jle    0x4074ca
  4074f5:	fdivr  st(3),st
  4074f7:	out    dx,eax
  4074f8:	sbb    cl,cl
  4074fa:	pop    eax
  4074fb:	xor    ebp,DWORD PTR [ebp-0x27]
  4074fe:	fdivr  st(0),st
  407500:	cwde   
  407501:	aas    
  407502:	xchg   eax,edx
  407504:	xchg   edx,eax
  407505:	js     0x40750a
  407507:	mov    al,0x57
  407509:	push   esi
  40750a:	cmc    
  40750b:	pop    ebx
  40750c:	mov    esp,0x7bafd33e
  407511:	xor    eax,0x5e2243b8
  407516:	daa    
  407517:	mov    edx,0xc43abc0e
  40751c:	jae    0x4074d2
  40751e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751f:	mov    eax,ds:0xfb60d557
  407524:	sbb    esi,DWORD PTR [ebx+0x162bbb0d]
  40752a:	lods   eax,DWORD PTR ds:[esi]
  40752b:	jno    0x407597
  40752d:	lods   al,BYTE PTR ds:[esi]
  40752e:	xchg   edi,eax
  40752f:	push   ebp
  407530:	cld    
  407531:	mov    ds:0xd5782426,al
  407536:	jno    0x407574
  407538:	test   al,0x30
  40753a:	push   ecx
  40753b:	rol    DWORD PTR [esi],0xa0
  40753e:	sub    al,0xe0
  407540:	test   eax,0xdef86697
  407545:	in     al,dx
  407546:	sub    DWORD PTR [ecx-0xcbf294d],edi
  40754c:	imul   ch
  40754e:	mov    ebp,DWORD PTR [ecx+0x63acafce]
  407554:	sahf   
  407555:	add    DWORD PTR [edi+0x6f247de1],edi
  40755b:	and    eax,0x5da904
  407560:	mov    ch,0xa6
  407562:	jmp    0x4832:0x6931cec9
  407569:	sbb    BYTE PTR [eax-0x27],0x41
  40756d:	shl    DWORD PTR [ecx],1
  40756f:	jb     0x407546
  407571:	or     eax,0x26fdcafc
  407576:	pushf  
  407577:	(bad)  
  407578:	popa   
  407579:	inc    esi
  40757a:	adc    BYTE PTR [eax],ah
  40757c:	adc    eax,0x98436811
  407582:	lods   eax,DWORD PTR ds:[esi]
  407583:	push   edi
  407584:	push   eax
  407585:	scas   al,BYTE PTR es:[edi]
  407586:	fild   WORD PTR [esi]
  407588:	(bad)  
  407589:	imul   ebp,DWORD PTR [ecx],0x3f
  40758c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40758d:	cli    
  40758e:	ret    0x8484
  407591:	mov    BYTE PTR [eax+edi*8],dh
  407594:	addr16 dec ebp
  407596:	xchg   edx,eax
  407597:	mov    al,ds:0x339ca4f
  40759c:	cwde   
  40759d:	sbb    DWORD PTR [ebx],ebp
  40759f:	lds    ecx,FWORD PTR [edi]
  4075a1:	xchg   esi,eax
  4075a2:	test   BYTE PTR [eax-0x23453abc],ah
  4075a8:	cwde   
  4075a9:	jp     0x4075e0
  4075ab:	jl     0x40752d
  4075ad:	js     0x4075f7
  4075af:	int3   
  4075b0:	fidivr DWORD PTR [ebx+0x6b5a983c]
  4075b6:	xor    eax,0x86c3acde
  4075bb:	sub    BYTE PTR [edx],al
  4075bd:	mov    esi,0x3b7719b1
  4075c2:	and    eax,0xa3cf2265
  4075c7:	loope  0x4075b2
  4075c9:	jb     0x407580
  4075cb:	cmp    cl,al
  4075cd:	jge    0x407554
  4075cf:	mov    es,WORD PTR [edx+ecx*1]
  4075d2:	ins    DWORD PTR es:[edi],dx
  4075d3:	sub    eax,0xc57b40ee
  4075d8:	inc    esi
  4075d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075da:	lea    edx,[esi+edx*2+0x37]
  4075de:	test   BYTE PTR [ebx+0x1f],bh
  4075e1:	lds    edi,FWORD PTR [ebp-0x72]
  4075e4:	add    ah,BYTE PTR [edi+0xecea443]
  4075ea:	ret    0x78e0
  4075ed:	ins    BYTE PTR es:[edi],dx
  4075ee:	or     al,0xc9
  4075f0:	cwde   
  4075f1:	sahf   
  4075f2:	fcom   st(2)
  4075f4:	dec    ebx
  4075f5:	(bad)  
  4075f6:	popa   
  4075f7:	jo     0x4075bf
  4075f9:	xor    BYTE PTR [edi-0x26],bh
  4075fc:	jno    0x4075e3
  4075fe:	je     0x40765c
  407600:	push   ebp
  407601:	in     eax,dx
  407602:	or     BYTE PTR [ecx+0x39],ch
  407605:	or     edx,edi
  407607:	sti    
  407608:	mov    es,WORD PTR [edi+0x4e]
  40760b:	or     ebp,DWORD PTR [esi+0x49a763e4]
  407611:	xchg   DWORD PTR [esp+edx*2+0x3c],edi
  407615:	pop    edi
  407616:	dec    BYTE PTR [esi]
  407618:	or     BYTE PTR [edx+0x37904f6b],bh
  40761e:	mov    ah,0x88
  407620:	stos   BYTE PTR es:[edi],al
  407621:	dec    eax
  407622:	pop    ebx
  407623:	jmp    0xd960:0x3a97da39
  40762a:	in     eax,0x63
  40762c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40762d:	push   es
  40762e:	adc    esi,ebx
  407630:	sub    eax,0xc3bf3ac3
  407635:	sub    BYTE PTR [ecx],al
  407637:	mov    ch,0xe
  407639:	(bad)  
  40763b:	cmp    edi,DWORD PTR [edx]
  40763d:	cdq    
  40763e:	push   ss
  40763f:	jno    0x407663
  407641:	(bad)  
  407642:	ins    BYTE PTR es:[edi],dx
  407643:	(bad)  
  407644:	js     0x4075cb
  407646:	out    0xdf,al
  407648:	sub    ecx,0xffffffad
  40764b:	bound  esp,QWORD PTR [ebp+0x5e]
  40764e:	fiadd  DWORD PTR [ebx+0x34]
  407651:	mov    ah,0xeb
  407653:	loope  0x40769d
  407655:	jg     0x40761a
  407657:	dec    ebx
  407658:	xor    bh,BYTE PTR [ecx+edi*1-0x380f55a9]
  40765f:	pop    esi
  407660:	and    edi,DWORD PTR [esp+ebx*8-0x23b3a69d]
  407667:	and    esi,DWORD PTR [edi-0x729f5a65]
  40766d:	hlt    
  40766e:	inc    eax
  40766f:	std    
  407670:	out    dx,al
  407671:	xchg   esi,eax
  407672:	imul   esp,eax,0x3f
  407675:	jns    0x407686
  407677:	ror    BYTE PTR [eax-0x78],0x2d
  40767b:	pop    es
  40767c:	and    DWORD PTR [edx+0x739e43fb],esp
  407682:	pop    ds
  407683:	ret    
  407684:	mov    al,ds:0x5c8acd2b
  407689:	or     eax,0xb68c9613
  40768e:	ret    
  40768f:	cmp    DWORD PTR [edx],edx
  407691:	out    dx,al
  407692:	push   ebp
  407693:	jns    0x407626
  407695:	addr16 push ds
  407697:	fbstp  TBYTE PTR [esi+0x2e]
  40769a:	idiv   BYTE PTR [esi]
  40769c:	pop    ss
  40769d:	int    0xa0
  40769f:	push   ecx
  4076a0:	jne    0x407703
  4076a2:	pusha  
  4076a3:	xor    al,0xd4
  4076a5:	arpl   WORD PTR [ebx+0x3c],dx
  4076a8:	ror    ebp,0x94
  4076ab:	sysexit 
  4076ad:	xchg   edx,eax
  4076ae:	call   0x8e6d7fc8
  4076b3:	xchg   esp,eax
  4076b4:	xchg   esi,eax
  4076b5:	popa   
  4076b6:	jo     0x4076a8
  4076b8:	sub    bl,BYTE PTR [ebx-0x7b488a4f]
  4076be:	fucomip st,st(3)
  4076c0:	sub    esp,edx
  4076c2:	sub    BYTE PTR ds:0x285460f1,ah
  4076c8:	push   cs
  4076c9:	xchg   ebx,eax
  4076ca:	mov    bl,0x98
  4076cc:	int3   
  4076cd:	loope  0x40769b
  4076cf:	sar    dl,cl
  4076d1:	add    al,0xd2
  4076d3:	(bad)  
  4076d4:	xor    eax,0xffeed9fe
  4076d9:	jbe    0x4076cd
  4076db:	mov    BYTE PTR [eax+ebp*1-0x75],dh
  4076df:	add    eax,DWORD PTR [edx-0x71]
  4076e2:	sub    ecx,ebx
  4076e4:	xchg   BYTE PTR es:[edi-0xfa3d41b],cl
  4076eb:	cmp    DWORD PTR [esi+edx*8],eax
  4076ee:	cld    
  4076ef:	imul   esp,DWORD PTR [ebx+ebx*8+0x6c],0x54
  4076f4:	mov    edx,0xf75c470
  4076f9:	pop    ss
  4076fa:	sti    
  4076fb:	mov    ebx,0xcf050e62
  407700:	fsub   DWORD PTR [eax]
  407702:	or     ch,bh
  407704:	jge    0x4076c7
  407706:	pop    ebp
  407707:	push   es
  407708:	lods   al,BYTE PTR ds:[esi]
  407709:	cld    
  40770a:	inc    eax
  40770b:	test   al,0x76
  40770d:	out    dx,eax
  40770e:	clc    
  40770f:	into   
  407710:	sbb    al,0x57
  407712:	inc    ebx
  407713:	push   ebp
  407714:	mov    WORD PTR [edx+0x4b],?
  407717:	call   0x395867a6
  40771c:	add    cl,bh
  40771e:	jge    0x4076ef
  407720:	cs into 
  407722:	fidiv  WORD PTR [edx]
  407724:	or     ch,BYTE PTR [edi]
  407726:	mov    edi,0x2e6b3885
  40772b:	and    BYTE PTR [edx+0x4de8f842],dl
  407731:	rol    BYTE PTR [ebp+0x7b],cl
  407734:	ret    0xe9b8
  407737:	mov    eax,ds:0x73562605
  40773c:	rcl    DWORD PTR [ebx-0x68],cl
  40773f:	jno    0x4076ce
  407741:	(bad)  
  407742:	popf   
  407743:	(bad)  
  407744:	or     al,0x74
  407746:	es int3 
  407748:	lock sbb ah,ah
  40774b:	retf   
  40774c:	jl     0x4077b7
  40774e:	std    
  40774f:	aam    0x46
  407751:	cmp    cl,BYTE PTR [ecx]
  407753:	dec    ebx
  407754:	mov    eax,ds:0xb44e2729
  407759:	leave  
  40775a:	pop    edi
  40775b:	scas   eax,DWORD PTR es:[edi]
  40775c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40775e:	ins    BYTE PTR es:[edi],dx
  40775f:	jg     0x4077c2
  407761:	jp     0x4077be
  407763:	sbb    ch,BYTE PTR [edx+eax*2-0x758f386a]
  40776a:	adc    DWORD PTR [ebp-0x28],ebx
  40776d:	pop    ebp
  40776e:	push   0x5a8ea583
  407773:	test   al,0xb8
  407775:	adc    eax,0x2f35183f
  40777a:	jmp    0x40774f
  40777c:	add    DWORD PTR [edx-0x4d7adf9c],ebx
  407782:	push   esp
  407783:	mov    DWORD PTR [ecx-0x5b],0xabd24cc8
  40778a:	mov    dh,0xd6
  40778c:	mov    edi,0x81b39912
  407791:	jnp    0x4077cb
  407793:	es cmp al,0x2b
  407796:	addr16 pop ebp
  407798:	adc    al,0xb7
  40779a:	je     0x4077c4
  40779c:	pop    eax
  40779d:	scas   eax,DWORD PTR es:[edi]
  40779e:	or     eax,0x3b027640
  4077a3:	ins    DWORD PTR es:[edi],dx
  4077a4:	add    DWORD PTR [ebp+0xc29038c],eax
  4077aa:	mov    edi,0x97ab88ae
  4077af:	push   ebx
  4077b0:	or     BYTE PTR [esi],al
  4077b2:	add    BYTE PTR [edi+0x31],cl
  4077b5:	aaa    
  4077b6:	aaa    
  4077b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077b8:	xchg   DWORD PTR [edi-0x441e2714],eax
  4077be:	je     0x407809
  4077c0:	mov    edx,0xadf8c675
  4077c5:	scas   eax,DWORD PTR es:[edi]
  4077c6:	sbb    edx,DWORD PTR [edi-0x1ec60670]
  4077cc:	and    DWORD PTR [eax+0x61],edi
  4077cf:	adc    BYTE PTR [edi+0x73dcb7c2],ah
  4077d5:	test   BYTE PTR [ecx],dh
  4077d7:	or     al,0x84
  4077d9:	jb     0x407794
  4077db:	lods   eax,DWORD PTR ds:[esi]
  4077dc:	xchg   ebp,eax
  4077dd:	xor    eax,0xc21bd91f
  4077e2:	into   
  4077e3:	out    0xc0,al
  4077e5:	mov    bh,dl
  4077e7:	mov    dl,0xf1
  4077e9:	test   esp,ebx
  4077eb:	mov    eax,ds:0xcb9ac20b
  4077f0:	pop    dx
  4077f2:	adc    BYTE PTR [esi-0x52],ah
  4077f5:	mov    ds:0x5cfbb099,al
  4077fa:	xor    eax,0x611bc319
  4077ff:	dec    eax
  407800:	cmc    
  407801:	ins    BYTE PTR es:[edi],dx
  407802:	std    
  407803:	add    dl,ch
  407805:	push   ds
  407806:	pusha  
  407807:	inc    ebp
  407808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407809:	inc    esi
  40780a:	imul   ebp,DWORD PTR ds:0xfffd1666,0xfdcb80a0
  407814:	pop    ss
  407815:	scas   al,BYTE PTR es:[edi]
  407816:	test   eax,eax
  407818:	ror    DWORD PTR [ebx-0x6aff2ae5],cl
  40781e:	(bad)  
  40781f:	fcom   DWORD PTR [ecx+eiz*4]
  407822:	or     eax,0xd72f3a4d
  407827:	mov    ds:0xd101c7fe,eax
  40782c:	push   esi
  40782d:	cmp    eax,0xc868e020
  407832:	out    dx,eax
  407833:	inc    edx
  407834:	inc    edx
  407835:	(bad)  
  407836:	fldenv [edi-0x59]
  407839:	or     al,0x6d
  40783b:	ins    DWORD PTR es:[edi],dx
  40783c:	xor    DWORD PTR [ecx],0xa17a1476
  407842:	lods   eax,DWORD PTR ds:[esi]
  407843:	imul   ebp,DWORD PTR [edx-0x19],0xfffffffd
  407847:	dec    eax
  407848:	jge    0x40781d
  40784a:	or     al,0xc4
  40784c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40784d:	push   0x927c831
  407852:	xchg   esp,eax
  407853:	cs mov edi,0x192774d9
  407859:	push   eax
  40785a:	pusha  
  40785b:	ja     0x40788d
  40785d:	mov    ecx,0xe42aa3fd
  407862:	jb     0x407870
  407864:	xor    al,0x10
  407866:	xor    eax,0xbf35f66b
  40786b:	lods   eax,DWORD PTR ds:[esi]
  40786c:	pushf  
  40786d:	int    0xb4
  40786f:	adc    esp,DWORD PTR [esp+ebx*8+0x1d]
  407873:	jle    0x4077f5
  407875:	repz lea esp,[edi]
  407878:	data16 mov cl,cl
  40787b:	cmp    eax,0xaed209f9
  407880:	dec    edx
  407881:	and    eax,0x4dbb4c0d
  407886:	(bad)  
  407887:	clc    
  407888:	jmp    0xb3be74de
  40788d:	add    eax,esp
  40788f:	or     BYTE PTR [ecx+esi*4],bh
  407892:	lahf   
  407893:	sub    ch,BYTE PTR [ebp-0x55b6d496]
  407899:	repz and esi,edi
  40789c:	jle    0x407858
  40789e:	mov    esp,0x670265b9
  4078a3:	and    eax,0x75b29f41
  4078a8:	sbb    edx,edx
  4078aa:	push   ebx
  4078ab:	add    bl,BYTE PTR ds:0x4e85798d
  4078b1:	rol    BYTE PTR [edi-0x40],cl
  4078b4:	pop    ecx
  4078b5:	jmp    0xc73:0xb18ecba4
  4078bc:	ret    
  4078bd:	ret    
  4078be:	add    eax,0x21d9b783
  4078c3:	shl    WORD PTR [ecx+0xc57cd],0x7b
  4078cb:	inc    ebp
  4078cc:	lock clc 
  4078ce:	fdivr  DWORD PTR [esi+eiz*8]
  4078d1:	and    al,0x1b
  4078d3:	sub    al,0xd6
  4078d5:	cmp    al,0xbf
  4078d7:	stos   BYTE PTR es:[edi],al
  4078d8:	xchg   edi,eax
  4078d9:	inc    esp
  4078da:	dec    ebx
  4078db:	xchg   ecx,eax
  4078dc:	pop    esi
  4078dd:	stos   DWORD PTR es:[edi],eax
  4078de:	in     eax,0x4d
  4078e0:	mov    esi,0x2eee535
  4078e5:	mov    bh,0xf0
  4078e7:	retf   0xc83c
  4078ea:	ja     0x407959
  4078ec:	xchg   ebp,ecx
  4078ee:	add    BYTE PTR [ecx-0x1af51cee],ah
  4078f4:	test   BYTE PTR [ebx-0x75337acd],al
  4078fa:	xchg   esi,eax
  4078fb:	ficomp DWORD PTR [esi-0x601fec35]
  407901:	scas   al,BYTE PTR es:[edi]
  407902:	push   esp
  407903:	loopne 0x407966
  407905:	jecxz  0x40789c
  407907:	in     al,dx
  407908:	xor    DWORD PTR [esi],edx
  40790a:	in     al,dx
  40790b:	sbb    BYTE PTR [eax+0x46],bl
  40790e:	sar    BYTE PTR [ecx],cl
  407910:	add    bh,dl
  407912:	push   ecx
  407913:	sub    DWORD PTR [eax+0x733b75cd],esi
  407919:	rol    DWORD PTR [eax+0x5b668787],0xe4
  407920:	xchg   ecx,eax
  407921:	sub    BYTE PTR [esi+0x329a69c0],dl
  407927:	pop    edx
  407928:	aaa    
  407929:	xchg   BYTE PTR [ecx+0x19a08774],cl
  40792f:	mov    bl,0xe
  407931:	in     eax,0x11
  407933:	and    al,0x13
  407936:	jo     0x407934
  407938:	imul   ecx,DWORD PTR [eax-0x2bac1a8e],0x65
  40793f:	dec    ecx
  407940:	lods   al,BYTE PTR ds:[esi]
  407942:	(bad)  
  407943:	repnz dec edi
  407945:	scas   al,BYTE PTR es:[edi]
  407946:	mov    al,0xf5
  407948:	test   BYTE PTR [esi+0x2c9c7e3e],0x4b
  40794f:	aad    0x8
  407951:	mov    al,0xa3
  407953:	rcr    WORD PTR [ecx],0x4e
  407957:	and    edx,DWORD PTR [edi+0x8]
  40795a:	in     al,0x25
  40795c:	push   ebp
  40795d:	mov    ds:0xd2193cbb,al
  407962:	lds    edx,FWORD PTR [ecx-0x46]
  407965:	scas   eax,DWORD PTR es:[edi]
  407966:	or     BYTE PTR [esi],0x89
  407969:	push   ds
  40796a:	mul    esp
  40796c:	xor    ecx,ecx
  40796e:	sbb    ebp,DWORD PTR ds:0x1d99eb06
  407974:	out    0xf3,eax
  407976:	call   FWORD PTR ds:0x3577bb30
  40797c:	pusha  
  40797d:	adc    al,0xa2
  40797f:	xor    al,0xc0
  407981:	(bad)  
  407982:	es ret 
  407984:	neg    BYTE PTR [esi]
  407986:	stos   BYTE PTR es:[edi],al
  407987:	stos   BYTE PTR es:[edi],al
  407988:	xchg   ebp,eax
  407989:	sbb    BYTE PTR [esi+ebx*4],0xc6
  40798d:	rcr    DWORD PTR [ebp+0x4ddf5027],0x64
  407994:	push   esp
  407995:	inc    ebp
  407996:	jmp    0xce3bf65c
  40799b:	ficom  WORD PTR [edx-0x77]
  40799e:	push   ebp
  40799f:	pusha  
  4079a0:	ret    
  4079a1:	and    ecx,DWORD PTR [eax]
  4079a3:	sub    al,0xef
  4079a5:	sub    eax,0xa5594629
  4079aa:	mov    dl,0x3a
  4079ac:	out    0xa6,al
  4079ae:	inc    eax
  4079af:	mov    al,ds:0xac32c504
  4079b4:	add    esi,DWORD PTR [ecx+0x6d]
  4079b7:	jle    0x4079f0
  4079b9:	popf   
  4079ba:	retf   0xad21
  4079bd:	arpl   WORD PTR [esi+0x61],sp
  4079c0:	jbe    0x407988
  4079c2:	mov    ds:0xc1c383b0,eax
  4079c7:	inc    edi
  4079c8:	pusha  
  4079c9:	jnp    0x407a0d
  4079cb:	sti    
  4079cc:	jnp    0x4079a1
  4079ce:	es in  al,0xa0
  4079d1:	push   esp
  4079d2:	mul    DWORD PTR [esi+ebx*8+0x33]
  4079d6:	jl     0x4079db
  4079d8:	cmp    BYTE PTR [edx+0x2f],bh
  4079db:	cmp    dh,ah
  4079dd:	and    al,0xc4
  4079df:	dec    esi
  4079e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e1:	mov    al,ds:0x9a98eb05
  4079e6:	adc    DWORD PTR [esi+ebp*8],ebp
  4079e9:	inc    edx
  4079ea:	cdq    
  4079eb:	in     eax,dx
  4079ec:	dec    edi
  4079ed:	mov    ds:0x23ede2e4,eax
  4079f2:	mov    ah,0x41
  4079f4:	mov    al,0xdc
  4079f6:	xor    al,ch
  4079f8:	out    0x1,al
  4079fa:	sub    al,0x2d
  4079fc:	mov    ch,0x4c
  4079fe:	adc    eax,0x3ae3c0b
  407a03:	jg     0x4079ca
  407a05:	das    
  407a06:	dec    esi
  407a07:	(bad)  
  407a08:	enter  0x6765,0x13
  407a0c:	and    eax,DWORD PTR [eax]
  407a0e:	in     al,dx
  407a0f:	stos   BYTE PTR es:[edi],al
  407a10:	cmp    esi,DWORD PTR [ebx]
  407a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a13:	fisubr WORD PTR [eax-0x2722fe27]
  407a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a1a:	iret   
  407a1b:	and    al,cl
  407a1d:	xchg   edx,eax
  407a1e:	bnd jp 0x4079ca
  407a21:	popa   
  407a22:	or     edx,DWORD PTR [ebx+0x6a]
  407a25:	sti    
  407a26:	cmc    
  407a27:	dec    esp
  407a28:	int3   
  407a29:	bound  eax,QWORD PTR [esi+0x421a76c3]
  407a2f:	mov    eax,ds:0xa83d1c46
  407a34:	iret   
  407a35:	fs xchg eax,ebp
  407a38:	outs   dx,BYTE PTR ds:[esi]
  407a39:	aaa    
  407a3a:	fnstenv [esi+eax*1]
  407a3d:	sbb    esi,eax
  407a3f:	ja     0x407ab6
  407a41:	lods   eax,DWORD PTR ds:[esi]
  407a42:	(bad)  
  407a43:	sub    al,0x9
  407a45:	pop    ebp
  407a46:	xchg   BYTE PTR [eax-0x61],dh
  407a49:	cli    
  407a4a:	pop    ebx
  407a4b:	cmp    edx,DWORD PTR [ebp+0x4ea492e2]
  407a51:	fdivrp st(1),st
  407a53:	aad    0x77
  407a55:	lods   al,BYTE PTR ds:[esi]
  407a56:	stc    
  407a57:	xor    DWORD PTR [esi+ebx*2],eax
  407a5a:	fisub  WORD PTR ds:0x9b2325fb
  407a60:	add    esi,edx
  407a62:	fstp   st(4)
  407a64:	(bad)  
  407a65:	pop    ebp
  407a66:	jge    0x407a0c
  407a68:	repz or ecx,ebx
  407a6b:	mov    es,WORD PTR [ebp+0x69]
  407a6e:	rol    ah,cl
  407a70:	cmp    al,BYTE PTR [ebp-0x14628f8f]
  407a76:	ror    BYTE PTR [edx-0x87ad374],cl
  407a7c:	fsubr  QWORD PTR [ecx]
  407a7e:	jmp    DWORD PTR [eax-0x8]
  407a81:	cmp    BYTE PTR [edi+ebx*4-0x3c83dfa9],cl
  407a88:	ffreep st(0)
  407a8a:	out    0x34,eax
  407a8c:	push   esp
  407a8d:	sbb    al,0x80
  407a8f:	fdivr  DWORD PTR [edi+0x7075f2af]
  407a95:	or     eax,0x3ea3af3
  407a9a:	cdq    
  407a9b:	or     eax,DWORD PTR [ebx-0x1f533ef6]
  407aa1:	push   ebp
  407aa2:	stos   DWORD PTR es:[edi],eax
  407aa3:	pushf  
  407aa4:	ret    0x9806
  407aa7:	int3   
  407aa8:	pop    es
  407aa9:	jl     0x407af5
  407aab:	sbb    eax,0xb0c15dfa
  407ab0:	jle    0x407a9f
  407ab2:	mov    esp,0x7eec0612
  407ab7:	sub    BYTE PTR [ecx-0x60a1986],al
  407abd:	xchg   DWORD PTR [eax-0x3b06c20e],ebx
  407ac3:	add    ecx,edx
  407ac5:	leave  
  407ac6:	add    al,0x6e
  407ac8:	ret    0x69a5
  407acb:	fwait
  407acc:	xchg   BYTE PTR [ebp+0x4],dl
  407acf:	sub    eax,0x65ebb14e
  407ad4:	push   esi
  407ad5:	mov    cl,BYTE PTR [esi+ebx*4]
  407ad8:	(bad)  
  407adc:	into   
  407add:	add    bh,bh
  407adf:	xor    al,0x2b
  407ae1:	adc    BYTE PTR [ebp+0x16],ah
  407ae4:	mov    bh,0xcb
  407ae6:	cmp    al,0x2a
  407ae8:	push   eax
  407ae9:	shl    dl,1
  407aeb:	dec    eax
  407aec:	scas   eax,DWORD PTR es:[edi]
  407aed:	retf   
  407aee:	xor    al,0x67
  407af0:	lock repz jge 0x407b56
  407af4:	test   al,0xb9
  407af6:	sbb    BYTE PTR [ecx],bh
  407af8:	fisub  WORD PTR [ebx-0x3295edd6]
  407afe:	jle    0x407b4b
  407b00:	jle    0x407a82
  407b02:	shr    BYTE PTR [ecx],0xa9
  407b05:	jle    0x407a9d
  407b07:	pop    ebp
  407b08:	test   eax,0xb64b1682
  407b0d:	and    dl,cl
  407b0f:	loop   0x407b46
  407b11:	mov    cl,0xbb
  407b13:	and    eax,DWORD PTR ds:0x1aac0864
  407b19:	stos   BYTE PTR es:[edi],al
  407b1a:	ret    
  407b1b:	stos   DWORD PTR es:[edi],eax
  407b1c:	enter  0xd751,0x67
  407b20:	mov    dh,0xfa
  407b22:	xchg   edi,eax
  407b23:	mov    cl,0x19
  407b25:	rcr    DWORD PTR [edx],cl
  407b27:	arpl   WORD PTR [edi],ax
  407b29:	ds and eax,0x749bf1a0
  407b2f:	mov    esp,gs
  407b31:	mov    ch,0x6c
  407b33:	or     BYTE PTR [ebx+0x3],bh
  407b36:	outs   dx,BYTE PTR ds:[esi]
  407b37:	pop    esp
  407b38:	sub    bl,BYTE PTR [eax+ecx*1]
  407b3b:	jmp    0x8239ae46
  407b40:	(bad)  
  407b41:	(bad)  [edx+0x32]
  407b44:	add    bh,dh
  407b46:	xlat   BYTE PTR ds:[ebx]
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0xe45170e0
  407e5b:	xchg   ecx,eax
  407e5c:	mov    ch,0xcf
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	pop    eax
  407e66:	mov    esp,0x5ea6b8d1
  407e6b:	or     ebx,DWORD PTR [edx+0x52]
  407e6e:	cwde   
  407e6f:	jl     0x407e38
  407e71:	jno    0x407e0c
  407e73:	leave  
  407e74:	fld    DWORD PTR [esi+edi*1-0x65e1cf97]
  407e7b:	push   0x6802b73a
  407e80:	icebp  
  407e81:	xchg   edx,eax
  407e82:	ret    0x55fd
  407e85:	lds    ebx,FWORD PTR [esi]
  407e87:	gs nop
  407e89:	mov    ah,0x2f
  407e8b:	xor    DWORD PTR [edi+0x75c3548d],0xffffff94
  407e92:	push   ebx
  407e93:	les    edi,FWORD PTR [ebx]
  407e95:	fmul   st,st(2)
  407e97:	inc    esi
  407e98:	nop
  407e99:	jle    0x407eaf
  407e9b:	mov    DWORD PTR [esp+ecx*1],esp
  407e9e:	jb     0x407ec7
  407ea0:	retf   
  407ea1:	sbb    eax,0xa43af3a5
  407ea6:	imul   edx,DWORD PTR [edi-0x5a],0x9a39b2db
  407ead:	stos   DWORD PTR es:[edi],eax
  407eae:	xchg   ebx,eax
  407eaf:	fld    QWORD PTR [ebx-0x52]
  407eb2:	inc    edx
  407eb3:	xor    eax,0x403205d6
  407eb8:	call   0xcb7d7db8
  407ebd:	add    al,al
  407ebf:	dec    ebp
  407ec0:	int    0x71
  407ec2:	rol    BYTE PTR [eax-0x4f33f2c0],0xd5
  407ec9:	or     al,0xf0
  407ecb:	out    dx,al
  407ecc:	xchg   ecx,eax
  407ecd:	sar    ah,0x7c
  407ed0:	add    edx,DWORD PTR [ebp+0x6b]
  407ed3:	mov    eax,ds:0x8a6a2cdf
  407ed8:	sar    DWORD PTR [ecx-0xa],cl
  407edb:	stc    
  407edc:	mov    ch,0x1d
  407ede:	stos   BYTE PTR es:[edi],al
  407edf:	mov    eax,0x5aa44e9e
  407ee4:	hlt    
  407ee5:	scas   eax,DWORD PTR es:[edi]
  407ee6:	jae    0x407ecb
  407ee8:	and    ah,BYTE PTR [eax]
  407eea:	or     BYTE PTR [esi],ch
  407eec:	inc    ebx
  407eed:	lahf   
  407eee:	sbb    edi,eax
  407ef0:	pushf  
  407ef1:	mov    dl,0xb0
  407ef3:	rol    BYTE PTR [edx],cl
  407ef5:	fist   WORD PTR [ecx+0x3fbf5c6e]
  407efb:	cmp    DWORD PTR ds:0x8982b956,ebx
  407f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f02:	mov    edi,0xe6849119
  407f07:	je     0x407f06
  407f09:	pushf  
  407f0a:	pop    ss
  407f0b:	stos   BYTE PTR es:[edi],al
  407f0c:	lods   al,BYTE PTR ds:[esi]
  407f0d:	fwait
  407f0e:	fs int3 
  407f10:	dec    ebx
  407f11:	xor    ebp,DWORD PTR [ebx-0xf7c169d]
  407f17:	or     DWORD PTR [esi+0x4dfdf1c8],0x60655c61
  407f21:	mov    eax,0x8a85a26
  407f26:	aam    0xe6
  407f28:	xor    eax,0x90e80142
  407f2d:	xor    ecx,DWORD PTR [edx+0x5f0646a1]
  407f33:	pop    ds
  407f34:	imul   edi,DWORD PTR [esi-0x43],0xc14371d2
  407f3b:	in     al,dx
  407f3c:	ret    
  407f3d:	and    eax,0xb72f822f
  407f42:	sub    BYTE PTR [edx-0x4d],0x96
  407f46:	hlt    
  407f47:	sbb    eax,0x80c3bd45
  407f4c:	sub    eax,0x58f754cd
  407f51:	and    BYTE PTR [eax+0x1d],al
  407f54:	mov    ch,0xb2
  407f56:	and    eax,0x3b15cc4b
  407f5b:	loop   0x407fc7
  407f5d:	cmp    eax,0x86b12b98
  407f62:	xor    edx,ebp
  407f64:	enter  0xfefe,0x5a
  407f68:	mov    dh,0xca
  407f6a:	jbe    0x407f12
  407f6c:	in     al,dx
  407f6d:	ret    
  407f6e:	(bad)  
  407f6f:	mov    edi,0xf0d8254b
  407f74:	and    eax,DWORD PTR [esi]
  407f76:	inc    esp
  407f77:	inc    esp
  407f78:	(bad)  
  407f79:	xor    DWORD PTR [ecx+0x762ed931],eax
  407f7f:	push   ss
  407f80:	sar    DWORD PTR [edi+ecx*2+0x76],cl
  407f84:	sbb    DWORD PTR [ebx-0x24],ebx
  407f87:	push   ss
  407f88:	cmp    edi,DWORD PTR [ebx]
  407f8a:	or     BYTE PTR [edx-0x1d99e47f],ah
  407f90:	nop
  407f91:	jbe    0x407fa9
  407f93:	rcl    DWORD PTR [edx-0x2c],0x4f
  407f97:	dec    ebx
  407f98:	dec    esp
  407f99:	clc    
  407f9a:	lds    edi,FWORD PTR [eax]
  407f9c:	aas    
  407f9d:	sbb    ebx,DWORD PTR gs:[eax]
  407fa0:	adc    BYTE PTR [eax+0x456c8674],al
  407fa6:	push   ebx
  407fa7:	xchg   edi,eax
  407fa8:	mov    ah,0x7a
  407faa:	jmp    DWORD PTR [ebp-0x1d]
  407fad:	mov    bh,0xc3
  407faf:	sub    ecx,ecx
  407fb1:	cs inc ebp
  407fb3:	lahf   
  407fb4:	xor    DWORD PTR [esi-0x5d],esi
  407fb7:	daa    
  407fb8:	fwait
  407fb9:	xchg   edi,eax
  407fba:	add    ebx,DWORD PTR [edi-0x42034167]
  407fc0:	cmp    eax,0x4cf20fb3
  407fc5:	sti    
  407fc6:	(bad)  
  407fc7:	sub    edi,DWORD PTR [edi+0x15ad1bbb]
  407fcd:	and    BYTE PTR [esi+0x3c078a15],dl
  407fd3:	pop    edx
  407fd4:	and    edx,DWORD PTR [edi+0x58e713c]
  407fda:	(bad)  [edi+0x25]
  407fdd:	or     eax,0x1229103a
  407fe2:	inc    ebx
  407fe3:	sti    
  407fe4:	shl    BYTE PTR [eax-0x55],1
  407fe7:	fnstenv [edx+0x55]
  407fea:	mov    dl,0x7
  407fec:	push   ss
  407fed:	loopne 0x407fd7
  407fef:	xchg   esi,eax
  407ff0:	mov    ebx,0x93b32419
  407ff5:	iret   
  407ff6:	jne    0x407fcd
  407ff8:	test   DWORD PTR [esi+0x70],0x78f7f747
  407fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408000:	cmp    DWORD PTR [edx],esp
  408002:	rcr    BYTE PTR [ecx-0x46cf5c40],1
  408008:	in     eax,dx
  408009:	in     eax,dx
  40800a:	xchg   esp,eax
  40800b:	iret   
  40800c:	jp     0x407faa
  40800e:	inc    edx
  40800f:	call   0xea88:0xde147bc5
  408016:	shr    DWORD PTR [esi],0xae
  408019:	jge    0x407fa8
  40801b:	cmp    eax,0x791821f8
  408020:	sbb    BYTE PTR [edx+0xefed8c2],0x7
  408027:	inc    edi
  408028:	pop    ecx
  408029:	mov    esp,0xc082c72a
  40802e:	(bad)  
  40802f:	loop   0x4080b0
  408031:	push   ebx
  408032:	in     eax,0x65
  408034:	xchg   esi,eax
  408035:	repnz mov eax,0xf7e89d74
  40803b:	dec    eax
  40803c:	jmp    0xdfc78de5
  408041:	push   esp
  408042:	mov    ds:0xdc875517,eax
  408047:	jae    0x4080ba
  408049:	std    
  40804a:	pop    ss
  40804b:	test   DWORD PTR [ebx],0xee9b8325
  408051:	mov    ch,0xb7
  408053:	scas   eax,DWORD PTR es:[edi]
  408054:	fwait
  408055:	mov    al,0xd9
  408057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408058:	aas    
  408059:	div    DWORD PTR [edx-0x79]
  40805c:	pop    esp
  40805d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40805e:	mov    ds:0x7fe212ac,al
  408063:	pop    esi
  408064:	test   DWORD PTR [esi],esi
  408066:	jb     0x4080b7
  408068:	daa    
  408069:	lock in eax,dx
  40806b:	stos   DWORD PTR es:[edi],eax
  40806c:	lock int 0xd3
  40806f:	mov    esp,0x976502f0
  408074:	(bad)  
  408075:	jnp    0x4080be
  408077:	test   al,0xe2
  408079:	sbb    BYTE PTR [ecx],dl
  40807b:	dec    esi
  40807c:	sub    eax,0x2af6932f
  408081:	dec    edx
  408082:	out    dx,al
  408083:	stc    
  408084:	mov    ds:0x63b053da,al
  408089:	retf   0x2580
  40808c:	and    DWORD PTR [ebx-0x62ad9af0],0xffffffa4
  408093:	rol    esi,1
  408095:	xchg   ebp,eax
  408096:	pop    es
  408097:	add    DWORD PTR [esi-0x49dde020],eax
  40809d:	jne    0x408051
  40809f:	and    ah,al
  4080a1:	out    0x6f,eax
  4080a3:	mov    al,0xf3
  4080a5:	jo     0x4080f5
  4080a7:	xchg   esp,eax
  4080a8:	ins    DWORD PTR es:[edi],dx
  4080a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080aa:	xchg   esi,eax
  4080ab:	xlat   BYTE PTR ds:[ebx]
  4080ac:	mov    cs,WORD PTR [ebp+0x44]
  4080af:	mov    al,ds:0xb1a89597
  4080b4:	(bad)  [ecx+0xf12f22f]
  4080ba:	mov    ecx,esi
  4080bc:	jns    0x408120
  4080be:	mov    DWORD PTR [edx-0x5e],edx
  4080c1:	repz cld 
  4080c3:	mov    esi,0x94db63db
  4080c8:	mov    esp,0x30de9775
  4080cd:	jne    0x4080e3
  4080cf:	xor    al,bh
  4080d1:	popa   
  4080d2:	sub    BYTE PTR [esi+0x61],dl
  4080d5:	xchg   esp,eax
  4080d6:	push   ebx
  4080d7:	sahf   
  4080d8:	sbb    DWORD PTR [eax-0x46],ebx
  4080db:	out    0x68,eax
  4080dd:	add    DWORD PTR [ebx+esi*8-0x7f031722],ecx
  4080e4:	pop    esi
  4080e5:	lea    eax,[ebx-0x6]
  4080e8:	arpl   WORD PTR [ebx],dx
  4080ea:	push   edi
  4080eb:	jl     0x408112
  4080ed:	cmp    cl,BYTE PTR [ebx]
  4080ef:	scas   eax,DWORD PTR es:[edi]
  4080f0:	jns    0x4080a3
  4080f2:	clc    
  4080f3:	aaa    
  4080f4:	sub    dh,BYTE PTR [ebx+0xb6acb53]
  4080fa:	push   0xffffff86
  4080fc:	jmp    0x4a5b5581
  408101:	sti    
  408102:	jbe    0x408102
  408104:	lds    ecx,FWORD PTR [ebp+0x18774142]
  40810a:	and    ecx,DWORD PTR [edi+0xaa60559]
  408110:	add    al,0x40
  408112:	and    bh,cl
  408114:	(bad)  
  408116:	inc    esi
  408117:	ins    BYTE PTR es:[edi],dx
  408118:	fcomp  DWORD PTR [edx-0x168d76ca]
  40811e:	add    DWORD PTR [edx-0x6f4c44b1],esp
  408124:	xor    eax,0x398106c4
  408129:	(bad)
  40812d:	sub    DWORD PTR [esi+0x1c],ebp
  408130:	jno    0x40812b
  408132:	test   eax,0x101efdc5
  408137:	(bad)  
  408138:	dec    edx
  408139:	jne    0x4080d6
  40813b:	aam    0xc3
  40813d:	lods   eax,DWORD PTR ds:[esi]
  40813e:	je     0x408114
  408140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408141:	push   ecx
  408142:	arpl   WORD PTR [bx+di+0x66],cx
  408146:	jg     0x408165
  408148:	sub    al,0x1a
  40814a:	cdq    
  40814b:	sbb    eax,DWORD PTR [ebx+0x72f14529]
  408151:	push   ds
  408152:	call   0x1c82722f
  408157:	lea    ebp,[eax]
  408159:	call   0xff7f:0x2712264d
  408160:	or     eax,0x1cb6a814
  408165:	or     BYTE PTR [ebx-0x47],bl
  408168:	icebp  
  408169:	mov    dh,0x4f
  40816b:	push   esi
  40816c:	test   DWORD PTR [ecx+edx*2+0x43],eax
  408170:	aam    0x14
  408172:	add    BYTE PTR [edi-0x1f7f1783],dh
  408178:	cwde   
  408179:	xchg   ebp,eax
  40817a:	mov    eax,ds:0xecd6b5dd
  40817f:	mov    ds:0xd5226824,eax
  408184:	das    
  408185:	push   eax
  408186:	jl     0x4081ef
  408188:	hlt    
  408189:	out    dx,al
  40818a:	sbb    al,0xe1
  40818c:	adc    DWORD PTR [eax],0x32
  40818f:	pusha  
  408190:	lods   eax,DWORD PTR ds:[esi]
  408191:	mov    al,BYTE PTR [eax+0x4c]
  408194:	xchg   BYTE PTR [edx+0x1819835e],al
  40819a:	mov    ah,0x51
  40819c:	pop    ebx
  40819d:	dec    edi
  40819e:	xor    al,0x92
  4081a0:	imul   esi,DWORD PTR [eax+ebp*1+0x54],0x16
  4081a5:	inc    ebp
  4081a6:	fisttp DWORD PTR [ebp-0x11d8e81a]
  4081ac:	sub    al,ah
  4081ae:	enter  0x8424,0x94
  4081b2:	loope  0x4081dd
  4081b4:	jne    0x408166
  4081b6:	xchg   dl,ah
  4081b8:	mov    es,WORD PTR [ebp+0x45]
  4081bb:	dec    edi
  4081bc:	je     0x408191
  4081be:	push   ds
  4081bf:	leave  
  4081c0:	loop   0x408238
  4081c2:	xlat   BYTE PTR ds:[ebx]
  4081c3:	sub    BYTE PTR [ebp+0x4d7080a8],ah
  4081c9:	adc    bh,dh
  4081cb:	xor    BYTE PTR [esi-0x74],ch
  4081ce:	xor    eax,0xbdd2af2b
  4081d3:	xor    eax,DWORD PTR [ebx-0x11]
  4081d6:	lods   eax,DWORD PTR ds:[esi]
  4081d7:	jle    0x4081cb
  4081d9:	jae    0x40818b
  4081db:	pop    ss
  4081dc:	pop    esi
  4081dd:	push   0x76
  4081df:	inc    ecx
  4081e0:	fcom   DWORD PTR [edx-0x65]
  4081e3:	sbb    eax,0xd1f3fd0b
  4081e8:	add    BYTE PTR [esi],ah
  4081ea:	inc    ebp
  4081eb:	pop    ecx
  4081ec:	repz iret 
  4081ee:	push   0xcd010f41
  4081f3:	arpl   WORD PTR [esi],di
  4081f5:	adc    dl,BYTE PTR [esi]
  4081f7:	dec    eax
  4081f8:	push   esi
  4081f9:	daa    
  4081fa:	xchg   esp,eax
  4081fb:	adc    esp,edx
  4081fd:	mov    ecx,0x12a7734e
  408202:	push   0xffffff9d
  408204:	mov    eax,ds:0x5c3d1257
  408209:	mov    al,ds:0x65cface0
  40820e:	mov    BYTE PTR [eax+0x67],bh
  408211:	jnp    0x4081ec
  408213:	pushf  
  408214:	mov    edi,0xcf95709a
  408219:	jmp    0xf4e00b9a
  40821e:	push   esi
  40821f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408220:	add    esp,DWORD PTR [esi+edi*2-0x7e5251b5]
  408227:	out    dx,al
  408228:	jne    0x4081f2
  40822a:	mov    bl,BYTE PTR [ebx-0x32]
  40822d:	pop    edi
  40822e:	scas   eax,DWORD PTR es:[edi]
  40822f:	test   BYTE PTR [ebp-0x73],bl
  408232:	div    edx
  408234:	mov    dl,0x91
  408236:	addr16 push eax
  408238:	push   ss
  408239:	loopne 0x40821e
  40823b:	mov    edi,0xe30eeb8b
  408240:	pusha  
  408241:	inc    edx
  408242:	push   0xeaed8e1d
  408247:	mov    cl,0x77
  408249:	sbb    al,0x37
  40824b:	mov    ch,BYTE PTR [edi-0x3ef020e7]
  408251:	adc    DWORD PTR [esi+edx*8],edi
  408254:	mov    BYTE PTR [ecx+0x19b46814],0x6c
  40825b:	dec    esi
  40825c:	in     eax,0xef
  40825e:	call   0x90173a12
  408263:	adc    cl,BYTE PTR [ecx]
  408265:	inc    eax
  408266:	push   ebx
  408267:	test   al,0xc
  408269:	call   0xe6c5e1a1
  40826e:	ror    ebx,1
  408270:	lods   eax,DWORD PTR ds:[esi]
  408271:	das    
  408272:	push   edx
  408273:	adc    BYTE PTR [edi-0x6b],0x18
  408277:	(bad)  
  408278:	fstp   QWORD PTR [ecx-0x55a2746c]
  40827e:	gs jl  0x408281
  408281:	or     edx,DWORD PTR [ecx+0x7481f2f4]
  408287:	stos   DWORD PTR es:[edi],eax
  408288:	pusha  
  408289:	or     al,BYTE PTR [ebp+ecx*4-0x34a6da3d]
  408290:	pop    ss
  408291:	sbb    ebx,ebp
  408293:	push   ecx
  408294:	test   eax,0x1b660230
  408299:	sti    
  40829a:	jnp    0x4082c7
  40829c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40829e:	fild   WORD PTR [ebx-0x14472e8d]
  4082a4:	xor    DWORD PTR [eax-0x8d03ec9],esp
  4082aa:	cmp    ebp,DWORD PTR [ebp+0x9]
  4082ad:	ja     0x4082c1
  4082af:	jmp    0x540b:0xdd50aeec
  4082b6:	popf   
  4082b7:	push   ebx
  4082b8:	cld    
  4082b9:	cdq    
  4082ba:	pop    esp
  4082bb:	dec    edx
  4082bc:	imul   esi,DWORD PTR [esi-0x6bda349c],0x3f6ff29b
  4082c6:	pop    es
  4082c7:	sub    ebx,0x2
  4082ca:	test   DWORD PTR [edx-0x1fd2e0ac],esp
  4082d0:	stos   BYTE PTR es:[edi],al
  4082d1:	sub    eax,0x9381d661
  4082d6:	inc    ecx
  4082d7:	and    al,0x77
  4082d9:	pushf  
  4082da:	adc    al,0xc5
  4082dc:	xor    ah,dh
  4082de:	cmp    dl,cl
  4082e0:	lods   eax,DWORD PTR ds:[esi]
  4082e1:	fs push 0xadb50dbb
  4082e7:	clc    
  4082e8:	scas   eax,DWORD PTR es:[edi]
  4082e9:	or     DWORD PTR [ebp+eax*8+0x35],eax
  4082ed:	repz hlt 
  4082ef:	xor    DWORD PTR ds:0x7711ce7,edx
  4082f5:	jge    0x408368
  4082f7:	fdivp  st(5),st
  4082f9:	or     ebx,DWORD PTR [ecx+0x3f26107b]
  4082ff:	cmp    bh,BYTE PTR [esi-0x77]
  408302:	dec    di
  408304:	dec    eax
  408305:	or     eax,0x2faaf2c2
  40830a:	push   0x4d
  40830c:	push   eax
  40830d:	and    DWORD PTR [eax+ecx*8],esi
  408310:	and    ebx,DWORD PTR [ebp+0x25ee7d53]
  408316:	loopne 0x40832b
  408318:	retf   
  408319:	push   0x271ceb0b
  40831e:	push   ecx
  40831f:	fwait
  408320:	ds xor eax,0x81cb8641
  408326:	jne    0x408336
  408328:	jge    0x4082c5
  40832a:	aas    
  40832b:	out    dx,eax
  40832c:	cmp    esi,DWORD PTR ds:0x20b1e99b
  408332:	cwde   
  408333:	out    0xe2,eax
  408335:	pop    ebp
  408336:	(bad)  
  408337:	jle    0x4083b5
  408339:	pop    esi
  40833a:	xchg   ebx,eax
  40833b:	ret    
  40833c:	mov    eax,0x24fb6e7e
  408341:	fcmovb st,st(1)
  408343:	mov    BYTE PTR [edx+0x39],dh
  408346:	lods   eax,DWORD PTR ds:[esi]
  408347:	stos   BYTE PTR es:[edi],al
  408348:	mov    DWORD PTR [ebx],ecx
  40834a:	cs add esp,eax
  40834d:	lock push ecx
  40834f:	pop    edi
  408350:	fadd   DWORD PTR [edx-0x4]
  408353:	loop   0x408313
  408355:	mov    ch,0x7
  408357:	retf   0xc1d4
  40835a:	js     0x408355
  40835c:	jmp    FWORD PTR [ebx+0x73]
  40835f:	mov    eax,0xa915ba3f
  408364:	mov    ch,cl
  408366:	push   ss
  408367:	arpl   si,bx
  408369:	mov    dh,0x34
  40836b:	addr16 jno 0x4082f7
  40836e:	rol    cl,0xdd
  408371:	push   esp
  408372:	push   esp
  408373:	stos   DWORD PTR es:[edi],eax
  408374:	push   esi
  408375:	sub    BYTE PTR ds:0x491db58f,dl
  40837b:	jae    0x4083b6
  40837d:	jne    0x408359
  40837f:	push   0xfffffff5
  408381:	nop
  408382:	mov    ecx,0xd8e16c5
  408387:	fist   DWORD PTR [edx]
  408389:	jne    0x408331
  40838b:	lods   eax,DWORD PTR ds:[esi]
  40838c:	jns    0x408336
  40838e:	loope  0x408322
  408390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408391:	in     eax,0xe3
  408393:	aam    0xf4
  408395:	mov    BYTE PTR [edx+edi*1+0x0],bl
  408399:	cmp    eax,0x2d834426
  40839e:	jo     0x4083e1
  4083a0:	repz mov ah,BYTE PTR [edx]
  4083a3:	and    DWORD PTR [ebp-0x67],ecx
  4083a6:	nop
  4083a7:	rcl    DWORD PTR [eax-0x6a],1
  4083aa:	mov    ecx,0x5cd5898f
  4083af:	jge    0x40835e
  4083b1:	mov    ah,0xc6
  4083b3:	pop    ecx
  4083b4:	(bad)  
  4083b6:	pop    ebp
  4083b7:	imul   ecx,ecx,0xfffffffb
  4083ba:	ins    BYTE PTR es:[edi],dx
  4083bb:	jg     0x4083ae
  4083bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083be:	pop    ebp
  4083bf:	int    0xef
  4083c1:	pop    eax
  4083c2:	cmp    eax,DWORD PTR ss:[eax+0x49]
  4083c6:	daa    
  4083c7:	repz mov dl,0x1f
  4083ca:	jb     0x40839c
  4083cc:	mov    eax,ds:0x4a8ed7d1
  4083d1:	adc    dh,BYTE PTR [ecx+0x57d03e71]
  4083d7:	lahf   
  4083d8:	add    bl,ch
  4083da:	outs   dx,DWORD PTR ds:[esi]
  4083db:	adc    DWORD PTR [ebp+edx*8-0x33c7b7da],eax
  4083e2:	jnp    0x408421
  4083e4:	adc    ecx,ecx
  4083e6:	lods   eax,DWORD PTR ds:[esi]
  4083e7:	mov    ds:0x3fb59338,al
  4083ec:	aam    0xea
  4083ee:	push   ebp
  4083ef:	mov    dl,0x58
  4083f1:	rcr    DWORD PTR [eax],cl
  4083f3:	adc    eax,0x85ec7f2a
  4083f8:	jb     0x408451
  4083fa:	retf   0x4efb
  4083fd:	pop    ecx
  4083fe:	fldcw  WORD PTR [edx+esi*1]
  408401:	pusha  
  408402:	rcl    BYTE PTR [ecx],cl
  408404:	shl    BYTE PTR [ebp+0xc8db841],0x63
  40840b:	sbb    cl,BYTE PTR [esi+ebx*8-0x7d]
  40840f:	mov    esp,0xb5b9d286
  408414:	dec    esi
  408415:	paddusw mm2,QWORD PTR [esi]
  408418:	addr16 adc eax,0x8723cc1
  40841e:	das    
  40841f:	ds push ss
  408421:	and    DWORD PTR [eax],edx
  408423:	mov    esi,0x9ff37531
  408428:	stos   BYTE PTR es:[edi],al
  408429:	push   eax
  40842a:	add    esp,ebp
  40842c:	mov    al,0x71
  40842e:	push   esi
  40842f:	adc    DWORD PTR [ebx],esp
  408431:	outs   dx,BYTE PTR ds:[esi]
  408432:	and    ch,al
  408434:	fist   WORD PTR [edi-0x157365f]
  40843a:	mov    ebx,DWORD PTR ds:0x53aa
  40843f:	mov    esi,0xb0fc7300
  408444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408445:	mov    ah,0xd2
  408447:	pop    ds
  408448:	jecxz  0x4083e3
  40844a:	(bad)  
  40844b:	les    ecx,FWORD PTR ds:[esi+0x3c59ff41]
  408452:	je     0x4084a1
  408454:	pop    esi
  408455:	std    
  408456:	(bad)  
  408458:	xchg   edi,eax
  408459:	lock add eax,0x42be8b68
  40845f:	(bad)  
  408460:	jmp    DWORD PTR [ecx+0x5b]
  408463:	xchg   ebp,eax
  408464:	ja     0x408430
  408466:	dec    ecx
  408467:	jmp    0x6dfb:0x9b834e60
  40846e:	ficomp DWORD PTR [ecx-0x1129ebbe]
  408474:	and    ebp,DWORD PTR [ecx+esi*1+0x4d4acd37]
  40847b:	(bad)  
  40847c:	ficomp WORD PTR [esi-0x4a751920]
  408482:	das    
  408483:	out    dx,eax
  408484:	adc    BYTE PTR [esi],ah
  408486:	out    dx,al
  408487:	fnstcw WORD PTR [ebp+0x27]
  40848a:	dec    edx
  40848b:	repz int3 
  40848d:	hlt    
  40848e:	xchg   ecx,eax
  40848f:	xchg   ecx,eax
  408490:	sbb    BYTE PTR [edx],ch
  408492:	jl     0x408432
  408494:	push   ebx
  408495:	sub    DWORD PTR [ecx+0x72fa2ca6],ebx
  40849b:	cmp    BYTE PTR [ecx+0x25dc860b],bl
  4084a1:	pop    ecx
  4084a2:	ror    DWORD PTR [ebx],0xd9
  4084a5:	jecxz  0x408483
  4084a7:	push   cs
  4084a8:	mov    dl,0x2a
  4084aa:	iret   
  4084ab:	out    dx,eax
  4084ac:	ja     0x408471
  4084ae:	sub    edi,DWORD PTR [ecx]
  4084b0:	and    dh,dl
  4084b2:	loop   0x4084fd
  4084b4:	(bad)  
  4084b5:	push   ebp
  4084b6:	aaa    
  4084b7:	inc    edx
  4084b8:	jge    0x408515
  4084ba:	xchg   ebp,eax
  4084bb:	dec    eax
  4084bc:	adc    BYTE PTR [ebx+0x1d8d2334],ah
  4084c2:	and    eax,0x4c3dcb78
  4084c7:	data16 sub BYTE PTR [esp+edi*2],bh
  4084cb:	add    al,0x33
  4084cd:	xor    DWORD PTR ds:0x6c1afc5a,ebp
  4084d3:	and    BYTE PTR [ecx+0x55],0x75
  4084d7:	fdivr  QWORD PTR [eax+eax*8+0x6f]
  4084db:	sub    eax,0x34fccaa7
  4084e0:	stos   BYTE PTR es:[edi],al
  4084e1:	add    BYTE PTR [edi+0x33b28130],dh
  4084e7:	dec    esi
  4084e8:	xor    al,cl
  4084ea:	sub    ecx,eax
  4084ec:	pop    esi
  4084ed:	scas   al,BYTE PTR es:[edi]
  4084ee:	pop    edx
  4084ef:	sti    
  4084f0:	scas   al,BYTE PTR es:[edi]
  4084f1:	xchg   esi,eax
  4084f2:	jmp    0x1105:0x8c5681e3
  4084f9:	ss sahf 
  4084fb:	outs   dx,BYTE PTR ds:[esi]
  4084fc:	inc    ecx
  4084fd:	int3   
  4084fe:	jne    0x4084ae
  408500:	xor    al,0x1
  408502:	dec    BYTE PTR [edx]
  408504:	dec    edi
  408505:	mov    al,ds:0xf0d869ab
  40850a:	shl    esi,cl
  40850c:	xchg   esp,eax
  40850d:	stc    
  40850e:	inc    ebx
  40850f:	and    al,0x2d
  408511:	cmp    bl,BYTE PTR fs:[edi-0x5a]
  408515:	repnz test eax,0xbd4baee
  40851b:	nop
  40851c:	les    edx,FWORD PTR [edx]
  40851e:	sub    BYTE PTR [esi],dh
  408520:	hlt    
  408521:	cmp    eax,0xe232c8d3
  408526:	jb     0x40858c
  408528:	mov    edx,ebp
  40852a:	mov    dl,dl
  40852c:	pop    edi
  40852d:	push   esp
  40852e:	xchg   edx,eax
  40852f:	or     DWORD PTR [ecx-0x2bc050fe],eax
  408535:	jl     0x4085a6
  408537:	push   0x9
  408539:	pop    esp
  40853a:	ror    ebx,1
  40853c:	pusha  
  40853d:	inc    ebx
  40853e:	or     BYTE PTR [edx-0x4c09ad3c],cl
  408544:	cmp    DWORD PTR [ebx-0x55],0x1a432616
  40854b:	les    ebx,FWORD PTR [ebx+0x5b393045]
  408551:	(bad)  
  408552:	or     eax,edx
  408554:	inc    ebp
  408555:	mov    eax,ds:0x12960806
  40855a:	jle    0x4085a9
  40855c:	mov    bl,0x42
  40855e:	in     al,0x75
  408560:	hlt    
  408561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408562:	cmp    ebx,DWORD PTR [esi+0x615c3b1c]
  408568:	mov    eax,0x8e609ae0
  40856d:	mov    dh,0xe
  40856f:	jb     0x4084f7
  408571:	pop    esi
  408572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408573:	fcmovnbe st,st(1)
  408575:	add    al,0xd
  408577:	xchg   ebp,eax
  408578:	dec    ebx
  408579:	dec    ebx
  40857a:	fidiv  DWORD PTR [ebx-0x74]
  40857d:	adc    ebp,ecx
  40857f:	inc    edi
  408580:	push   cs
  408581:	inc    ebx
  408582:	dec    ebp
  408583:	jge    0x40852c
  408585:	pop    esp
  408586:	xor    ecx,DWORD PTR [ebp+0x5b993d0c]
  40858c:	leave  
  40858d:	(bad)  
  40858e:	jecxz  0x408545
  408590:	jecxz  0x408585
  408592:	rcr    edx,0x96
  408595:	das    
  408596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408597:	mov    ds:0x7331e3ba,al
  40859c:	inc    esi
  40859d:	out    dx,eax
  40859e:	aas    
  40859f:	ds stos BYTE PTR es:[edi],al
  4085a1:	sub    al,BYTE PTR [ebx]
  4085a3:	sti    
  4085a4:	add    eax,0x609332f
  4085a9:	inc    edi
  4085aa:	aaa    
  4085ab:	inc    ecx
  4085ac:	xor    esi,DWORD PTR [esi-0x34f2fe81]
  4085b2:	sbb    cl,al
  4085b4:	mov    eax,DWORD PTR [esi+0x1e]
  4085b7:	mov    dl,0xef
  4085b9:	jae    0x408548
  4085bb:	push   edi
  4085bc:	pop    esi
  4085bd:	jge    0x4085cd
  4085bf:	outs   dx,BYTE PTR ds:[esi]
  4085c0:	jno    0x408550
  4085c2:	or     cl,BYTE PTR [edx-0x50]
  4085c5:	inc    BYTE PTR [edx+0x3e]
  4085c8:	or     eax,0xe7356df2
  4085cd:	bnd ss jns 0x408638
  4085d1:	sbb    ecx,DWORD PTR [ebx+ebp*4+0x15]
  4085d5:	rcl    BYTE PTR [esi],cl
  4085d7:	and    al,cl
  4085d9:	xlat   BYTE PTR ds:[ebx]
  4085da:	mov    al,ds:0xb9d76733
  4085df:	push   ss
  4085e0:	add    ch,BYTE PTR [eax]
  4085e2:	sub    eax,0xe82f59ef
  4085e7:	add    DWORD PTR [edx+0x32],eax
  4085ea:	cmc    
  4085eb:	bound  ebx,QWORD PTR ds:0x99032ba3
  4085f1:	mov    al,ds:0x8a059fc4
  4085f6:	cmp    eax,0xeba669a0
  4085fb:	and    BYTE PTR [edi],ah
  4085fd:	out    0x4a,eax
  4085ff:	pop    edi
  408600:	out    0x30,al
  408602:	js     0x40862a
  408604:	addr16 sbb al,0x70
  408607:	nop
  408608:	jmp    0x1f00:0xb30f4c1e
  40860f:	arpl   WORD PTR [edi],sp
  408611:	dec    esi
  408612:	loop   0x4085d2
  408614:	test   dh,0x6e
  408617:	retf   0xaf00
  40861a:	xchg   BYTE PTR [ebx+0x20c6dcc8],dl
  408620:	sbb    edx,ebp
  408622:	retf   
  408623:	enter  0x8e47,0x65
  408627:	push   esi
  408628:	mov    dh,0xf0
  40862a:	lds    esp,FWORD PTR [ebx+eiz*8+0x51]
  40862e:	inc    esi
  40862f:	lock sub BYTE PTR [edi-0x550921c9],ah
  408636:	sbb    al,0xaa
  408638:	jbe    0x408662
  40863a:	push   edx
  40863b:	loope  0x4086a8
  40863d:	das    
  40863e:	push   edi
  40863f:	lods   eax,DWORD PTR ds:[esi]
  408640:	xchg   BYTE PTR [edx],ch
  408642:	push   cs
  408643:	xchg   edx,eax
  408644:	inc    ebp
  408645:	sbb    al,0x61
  408647:	pop    esp
  408648:	sbb    eax,0x5f23cc05
  40864d:	loope  0x4086ce
  40864f:	leave  
  408650:	rcr    dh,1
  408652:	inc    esi
  408653:	push   eax
  408654:	aas    
  408655:	xlat   BYTE PTR ds:[ebx]
  408656:	mov    edi,DWORD PTR [eax+esi*4]
  408659:	dec    ebx
  40865a:	dec    DWORD PTR [esi]
  40865c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40865d:	hlt    
  40865e:	and    edi,DWORD PTR [ecx]
  408660:	sub    DWORD PTR [ecx-0x380571a],ebx
  408666:	xchg   ebx,eax
  408667:	mov    al,0xa0
  408669:	xcrypt-cfb (bad)
  40866a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866b:	out    0x16,al
  40866d:	or     dl,BYTE PTR [eax+0x40]
  408670:	stos   DWORD PTR es:[edi],eax
  408671:	and    DWORD PTR [edx],eax
  408673:	int3   
  408674:	xor    BYTE PTR [ebp-0xe5c7a96],al
  40867a:	inc    esp
  40867b:	jmp    0x4086fb
  40867d:	xor    bh,BYTE PTR ds:0xd19b65c0
  408683:	mov    dh,0xa
  408685:	ja     0x4086ed
  408687:	aad    0x8a
  408689:	pusha  
  40868a:	daa    
  40868b:	aad    0xb6
  40868d:	imul   edi,DWORD PTR [ebx],0xe3bd2395
  408693:	xor    cl,BYTE PTR [esi]
  408695:	inc    ecx
  408696:	mov    ds:0x5dc3ee6d,al
  40869b:	and    eax,0xf0e95800
  4086a0:	mov    al,0xe3
  4086a2:	dec    ebp
  4086a3:	add    eax,0xed227fa
  4086a8:	(bad)  
  4086a9:	dec    esp
  4086aa:	jecxz  0x408708
  4086ac:	jbe    0x408716
  4086ae:	sub    esi,DWORD PTR [edx-0x62]
  4086b1:	aad    0x76
  4086b3:	or     al,0xb2
  4086b5:	inc    esi
  4086b6:	ficomp WORD PTR [esi+0x6a9e4870]
  4086bc:	dec    esp
  4086bd:	xlat   BYTE PTR ds:[ebx]
  4086be:	scas   eax,DWORD PTR es:[edi]
  4086bf:	sub    DWORD PTR [edx-0x27],0xfb41315b
  4086c6:	sbb    DWORD PTR [edi-0x18922894],ecx
  4086cc:	lahf   
  4086cd:	mov    edi,0x26e5664e
  4086d2:	adc    DWORD PTR [edx-0x3f2d648c],0x3f
  4086d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086da:	inc    DWORD PTR [eax-0x3de904c4]
  4086e0:	mov    ecx,0x4d3dbd55
  4086e5:	mov    ds:0xe6cbafae,eax
  4086ea:	clc    
  4086eb:	cld    
  4086ec:	add    dh,dh
  4086ee:	rcr    BYTE PTR [ebx],1
  4086f0:	mov    cs:0xcf2f00a,al
  4086f6:	add    cl,ah
  4086f8:	cld    
  4086f9:	pop    ebx
  4086fa:	jmp    edx
  4086fc:	sar    al,cl
  4086fe:	xchg   ebp,eax
  4086ff:	(bad)  
  408700:	retf   
  408701:	ret    0x4049
  408704:	sub    dh,BYTE PTR [ebx+0x5aed7862]
  40870a:	in     al,0x79
  40870c:	jns    0x408732
  40870e:	out    dx,al
  40870f:	mov    eax,0x16968d59
  408714:	mov    BYTE PTR [eax-0x4799cd21],cl
  40871a:	sbb    edx,DWORD PTR [esi+0x2e]
  40871d:	ds aaa 
  40871f:	mov    ebx,0xde2a2fa
  408724:	xor    al,0x42
  408726:	loope  0x408702
  408728:	sub    eax,0x26242fa
  40872d:	lds    esp,FWORD PTR [edi+0x7c]
  408730:	adc    edi,DWORD PTR [ecx]
  408732:	shl    BYTE PTR [ebx*4-0x75df4689],cl
  408739:	sti    
  40873a:	mov    BYTE PTR [ebx+0x431097f],ch
  408740:	shl    BYTE PTR [edi+0x5278567],cl
  408746:	push   cs
  408747:	nop
  408748:	mov    eax,ds:0x4c4c4424
  40874d:	pusha  
  40874e:	iret   
  40874f:	push   edx
  408750:	inc    ecx
  408751:	adc    edi,esp
  408753:	aam    0x4f
  408755:	iret   
  408756:	in     eax,dx
  408757:	fdivr  QWORD PTR [ecx-0x11]
  40875a:	pop    edi
  40875b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40875c:	xchg   esp,eax
  40875d:	ror    BYTE PTR [ebp+0x19826cb5],cl
  408763:	cmp    BYTE PTR [esp+ebx*4+0x44c4bd68],bl
  40876a:	push   ebp
  40876b:	lods   al,BYTE PTR ds:[esi]
  40876c:	mov    dh,0x75
  40876e:	stc    
  40876f:	les    eax,FWORD PTR [ebx]
  408771:	dec    eax
  408772:	lds    esi,FWORD PTR [edx+0x6b]
  408775:	pusha  
  408776:	in     eax,0xd8
  408778:	les    edi,FWORD PTR [edi]
  40877a:	es dec ebx
  40877c:	fdiv   DWORD PTR [ebp-0x11cc8dd]
  408782:	es jbe 0x408736
  408785:	leave  
  408786:	lods   al,BYTE PTR ds:[esi]
  408787:	lahf   
  408788:	pop    es
  408789:	popf   
  40878a:	(bad)  
  40878b:	int3   
  40878c:	shr    ah,1
  40878e:	sbb    edi,DWORD PTR [edx+ebp*4-0x5a]
  408792:	xor    DWORD PTR ds:0x432031e6,0xffffffe8
  408799:	mov    ds:0x8595b428,al
  40879e:	frstor [edx]
  4087a0:	ja     0x408738
  4087a2:	jmp    0x90f5:0x51ce413a
  4087a9:	xor    ebp,DWORD PTR [esi+0x1e]
  4087ac:	adc    BYTE PTR [esi+0x49],0xbf
  4087b0:	scas   al,BYTE PTR es:[edi]
  4087b1:	add    BYTE PTR [ebx+esi*4+0x15],0xcf
  4087b6:	(bad)  
  4087b7:	enter  0xc1e9,0x47
  4087bb:	sbb    ebx,esi
  4087bd:	jbe    0x4087b4
  4087bf:	xchg   DWORD PTR [ecx+eax*2+0x4a],esp
  4087c3:	xchg   edi,eax
  4087c4:	jle    0x4087c2
  4087c6:	xchg   edx,eax
  4087c7:	cmp    eax,0xbad5ce51
  4087cc:	in     eax,0xfb
  4087ce:	fmul   DWORD PTR [ebp+eiz*8-0x2e]
  4087d2:	sub    al,0xdd
  4087d4:	inc    ebx
  4087d5:	je     0x4087d2
  4087d7:	(bad)  
  4087d8:	ror    BYTE PTR [edx],1
  4087da:	push   ss
  4087db:	pop    eax
  4087dc:	dec    edi
  4087dd:	push   ebp
  4087de:	xor    BYTE PTR [edx-0x7e6a8c77],dl
  4087e4:	inc    esi
  4087e5:	cdq    
  4087e6:	js     0x4087ec
  4087e8:	clc    
  4087e9:	push   ebx
  4087ea:	mov    eax,0x20ac11a4
  4087ef:	sub    eax,0xd64a2a64
  4087f4:	shl    DWORD PTR [ebx],0x2e
  4087f7:	dec    DWORD PTR [edx+0x291334d4]
  4087fd:	inc    edx
  4087fe:	inc    edx
  4087ff:	xchg   ecx,eax
  408800:	cmc    
  408801:	jns    0x4087ac
  408803:	mov    DWORD PTR [ecx-0x4a],ebp
  408806:	loope  0x408882
  408808:	mov    dh,0x7e
  40880a:	mov    ds:0x92726d72,al
  40880f:	mov    edx,0xe46262cb
  408814:	jmp    0x408835
  408816:	loop   0x4087f1
  408818:	dec    edx
  408819:	ja     0x40884a
  40881b:	mov    ax,ds:0x7a5cb146
  408821:	xchg   ecx,eax
  408822:	xor    esi,DWORD PTR [ebx]
  408824:	add    bl,BYTE PTR [ebx]
  408826:	sub    al,0x77
  408828:	ins    BYTE PTR es:[edi],dx
  408829:	cdq    
  40882a:	fstp   TBYTE PTR [eax+ebx*8-0x8]
  40882e:	push   cs
  40882f:	jl     0x4087d9
  408831:	jg     0x40886f
  408833:	add    eax,0x422bc6e5
  408838:	test   BYTE PTR [edi+0x69],0x6b
  40883c:	test   BYTE PTR [ebx],bl
  40883e:	and    ah,BYTE PTR [ebx-0x4e525be1]
  408844:	push   ebx
  408845:	into   
  408846:	jmp    0x4087df
  408848:	sbb    esp,DWORD PTR [ebx]
  40884a:	in     eax,0xa0
  40884c:	jp     0x408806
  40884e:	mov    ds,WORD PTR [eax+0x63c8ef79]
  408854:	jg     0x408852
  408856:	xchg   esi,eax
  408857:	(bad)  
  408858:	jne    0x4088a3
  40885a:	pop    esp
  40885b:	mov    ebp,DWORD PTR [edx]
  40885d:	xor    eax,0x16f159a
  408862:	test   al,0x4
  408864:	jle    0x4088cb
  408866:	add    DWORD PTR [eax+0x40],0x6d0615fe
  40886d:	pop    edi
  40886e:	shr    eax,0xd3
  408871:	imul   esp,DWORD PTR [esi+0x55177ef0],0x69d89785
  40887b:	mov    ch,0xd0
  40887d:	mov    ds:0x5c7780fc,eax
  408882:	sbb    al,0xfc
  408884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408885:	or     ebx,0x5a80b1f6
  40888b:	adc    BYTE PTR [edi],ah
  40888d:	mov    eax,ds:0x48066990
  408892:	jmp    0x408859
  408894:	xor    eax,0xdb17d6dc
  408899:	pop    ds
  40889a:	fld    QWORD PTR [ecx-0xf]
  40889d:	xchg   ebx,eax
  40889e:	mov    dh,ch
  4088a0:	jo     0x4088ac
  4088a2:	fld    QWORD PTR [ebx+eiz*2-0x47]
  4088a6:	mov    esi,0xeac358a8
  4088ab:	scas   al,BYTE PTR es:[edi]
  4088ac:	imul   edi,DWORD PTR [ebx],0xffffffc4
  4088af:	sbb    BYTE PTR [edx+0x2bd02a85],bh
  4088b5:	ret    0x17aa
  4088b8:	retf   
  4088b9:	jp     0x4088d1
  4088bb:	fwait
  4088bc:	leave  
  4088bd:	dec    esi
  4088be:	test   BYTE PTR [eax-0x6f694f28],dh
  4088c4:	jmp    0xe8:0x6358f7bc
  4088cb:	test   eax,0x225f77e
  4088d0:	xchg   BYTE PTR [edx],bh
  4088d2:	jl     0x40891c
  4088d4:	dec    edx
  4088d5:	imul   esi,esp,0x7bf3eb7a
  4088db:	out    0x83,al
  4088dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088de:	jmp    0xe34dbef1
  4088e3:	arpl   WORD PTR ds:0x6f332040,si
  4088e9:	in     al,0xdc
  4088eb:	dec    esp
  4088ec:	ret    0xb910
  4088ef:	cmc    
  4088f0:	sub    DWORD PTR [eax+0x5f],esp
  4088f3:	inc    esp
  4088f4:	push   esp
  4088f5:	sbb    ebx,DWORD PTR [ecx-0x79]
  4088f8:	push   ebx
  4088f9:	sbb    al,ch
  4088fb:	jmp    FWORD PTR [ecx]
  4088fd:	outs   dx,DWORD PTR ds:[esi]
  4088fe:	call   0x9d80:0xd668d70b
  408905:	dec    ebx
  408906:	adc    al,0x21
  408908:	mov    al,0xda
  40890a:	fcomp  QWORD PTR [esi+0x1afdc25]
  408910:	inc    ebx
  408911:	leave  
  408912:	aam    0x6c
  408914:	out    0x76,al
  408916:	jmp    0x7012e691
  40891b:	fs push 0x67bf82b3
  408921:	mov    ch,0x28
  408923:	pushf  
  408924:	xor    eax,DWORD PTR [ecx]
  408926:	aas    
  408927:	xor    ebx,DWORD PTR [edx+eiz*2+0x7c78c7c5]
  40892e:	mov    cl,0x2f
  408930:	pop    esi
  408931:	ret    
  408932:	mov    ah,0xea
  408934:	in     al,0x38
  408936:	push   esi
  408937:	mov    ah,0xb9
  408939:	nop
  40893a:	out    dx,eax
  40893b:	je     0x40893a
  40893d:	sub    dl,BYTE PTR [edi-0x2523af7f]
  408943:	aas    
  408944:	cld    
  408945:	ret    0xa6b1
  408948:	push   0x6c
  40894a:	jecxz  0x4088e7
  40894c:	jns    0x408939
  40894e:	loope  0x40894b
  408950:	or     DWORD PTR [ebp-0x8bea6c3],ebx
  408956:	jp     0x4088ec
  408958:	ins    BYTE PTR es:[edi],dx
  408959:	mov    ds:0xf1db732,eax
  40895e:	(bad)  
  40895f:	mov    ds,WORD PTR [eax+0x55a6f52e]
  408965:	jmp    0xf988:0xbdaec827
  40896c:	out    dx,eax
  40896d:	in     al,dx
  40896e:	xchg   edx,eax
  40896f:	(bad)  
  408971:	inc    ebp
  408973:	sbb    edi,DWORD PTR [ebx]
  408975:	push   ecx
  408976:	and    DWORD PTR [edx+0x3ce409f5],edi
  40897c:	pop    ecx
  40897d:	and    ebx,DWORD PTR [edi+0x7596b3c7]
  408983:	loop   0x4089f8
  408985:	(bad)  
  408986:	aad    0xa8
  408988:	adc    edi,ecx
  40898a:	mov    bl,0xf1
  40898c:	or     dl,BYTE PTR [bp-0x43b]
  408991:	ja     0x408a12
  408993:	in     al,dx
  408994:	shl    al,cl
  408996:	cld    
  408997:	cmp    BYTE PTR [edx],dh
  408999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40899a:	sub    DWORD PTR [ecx+0x504638da],esp
  4089a0:	cwde   
  4089a1:	jge    0x408979
  4089a3:	jl     0x4089a3
  4089a5:	xchg   ebx,eax
  4089a6:	retf   
  4089a7:	and    al,0x30
  4089a9:	or     bh,BYTE PTR [ebx+0x43161643]
  4089af:	mov    cl,0xdf
  4089b1:	xor    DWORD PTR [edx+0x3d],ecx
  4089b4:	jne    0x408a34
  4089b6:	add    DWORD PTR [edi+0x2],eax
  4089b9:	cmp    DWORD PTR [edi-0x1b3df174],ecx
  4089bf:	jg     0x408943
  4089c1:	jmp    0xa250:0x9b8a8628
  4089c8:	sahf   
  4089c9:	jg     0x408982
  4089cb:	jp     0x408a28
  4089cd:	cmp    eax,0xf1b752d8
  4089d2:	cmp    edx,edx
  4089d4:	cmp    DWORD PTR ds:0xb4609534,ebx
  4089da:	xchg   BYTE PTR [eax-0x72],cl
  4089dd:	out    0x7e,al
  4089df:	adc    eax,0xa88f4770
  4089e4:	push   edx
  4089e5:	fld    TBYTE PTR ss:[edx]
  4089e8:	outs   dx,DWORD PTR ds:[esi]
  4089e9:	xchg   DWORD PTR [ebp+ebp*2+0x17],ecx
  4089ed:	jmp    0xbfa2b9f9
  4089f2:	mov    DWORD PTR [edx],esi
  4089f4:	ret    0xcb5
  4089f7:	rol    BYTE PTR [edi],1
  4089f9:	mov    dh,0x8
  4089fb:	rsqrtps xmm4,XMMWORD PTR [esi]
  4089fe:	dec    edx
  4089ff:	pop    es
  408a00:	neg    BYTE PTR [edx-0x20]
  408a03:	retf   0xc305
  408a06:	sbb    edi,DWORD PTR [ebp+0xe00d8d2]
  408a0c:	mov    edi,0xa9c74cd
  408a11:	dec    edx
  408a12:	out    0x47,al
  408a14:	fnstsw WORD PTR [esp+edi*8]
  408a17:	mov    al,ds:0x1e07c759
  408a1c:	mov    es,ebp
  408a1e:	std    
  408a1f:	(bad)  
  408a20:	fs add al,0x33
  408a23:	rol    BYTE PTR [ecx],cl
  408a25:	mov    ah,0x1d
  408a27:	cmp    dh,BYTE PTR [ebp+ebx*8-0x26]
  408a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a2c:	jl     0x408a52
  408a2e:	daa    
  408a2f:	inc    ebp
  408a30:	push   esp
  408a31:	push   ebx
  408a32:	arpl   WORD PTR [eax-0x39],bx
  408a35:	les    ecx,FWORD PTR [edx+0x2719a810]
  408a3b:	les    eax,FWORD PTR [ebp+0x66]
  408a3e:	adc    al,0xe8
  408a40:	jp     0x408a34
  408a42:	outs   dx,BYTE PTR ds:[esi]
  408a43:	mov    esp,0x61d508d2
  408a48:	lock mov ah,0xfc
  408a4b:	mov    eax,ds:0xcedc2623
  408a50:	cmc    
  408a51:	in     eax,0xe6
  408a53:	xchg   ebx,eax
  408a54:	in     eax,dx
  408a55:	cwde   
  408a56:	into   
  408a57:	jo     0x408a30
  408a59:	jmp    0x14ee85f8
  408a5e:	imul   esi,edi,0x275f5e05
  408a64:	inc    edx
  408a65:	das    
  408a66:	dec    eax
  408a67:	fadd   st(0),st
  408a69:	ja     0x408abc
  408a6b:	shr    BYTE PTR [esi+0x49],0x14
  408a6f:	cmp    DWORD PTR [esi-0x3dc47918],ecx
  408a75:	ins    BYTE PTR es:[edi],dx
  408a76:	xlat   BYTE PTR ds:[ebx]
  408a77:	ins    BYTE PTR es:[edi],dx
  408a78:	dec    ebp
  408a79:	(bad)  
  408a7a:	mov    eax,0x2a31c7d4
  408a7f:	fwait
  408a80:	and    eax,0xe5548108
  408a85:	mov    esp,0xfe1712ae
  408a8a:	push   esp
  408a8b:	push   ebp
  408a8c:	xchg   DWORD PTR [edx+0x21b56f74],edi
  408a92:	inc    edi
  408a93:	dec    ecx
  408a94:	in     eax,0x7e
  408a96:	push   esi
  408a97:	and    dh,BYTE PTR [esi-0x76f2faf1]
  408a9d:	dec    ebx
  408a9e:	stc    
  408a9f:	add    DWORD PTR [ebx],edi
  408aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aa2:	adc    al,0xdd
  408aa4:	pop    ds
  408aa5:	ss popf 
  408aa7:	mov    esi,0xf63f3aa
  408aac:	jge    0x408b27
  408aae:	data16 xchg dl,al
  408ab1:	lock jge 0x408a62
  408ab4:	rcr    edi,1
  408ab6:	push   0x77c77917
  408abb:	or     ebp,DWORD PTR [ebp+0x39c1a6bf]
  408ac1:	loop   0x408a4d
  408ac3:	mov    esp,0x43a01d9c
  408ac8:	and    bl,BYTE PTR [eax]
  408aca:	xchg   BYTE PTR [ebx+0x4f],al
  408acd:	lods   al,BYTE PTR ds:[esi]
  408ace:	mov    bl,0x55
  408ad0:	out    0xe1,al
  408ad2:	push   ss
  408ad3:	icebp  
  408ad4:	push   eax
  408ad5:	nop
  408ad6:	mov    esi,0x4e493c64
  408adb:	add    ah,BYTE PTR [esi-0x22]
  408ade:	and    ch,bl
  408ae0:	push   ds
  408ae1:	add    eax,0x88685855
  408ae6:	shl    bh,0xf6
  408ae9:	aad    0xbb
  408aeb:	push   cs
  408aec:	stos   DWORD PTR es:[edi],eax
  408aed:	loop   0x408a7c
  408aef:	and    dh,ch
  408af1:	cmp    DWORD PTR [esi-0x6f7ba551],edi
  408af7:	inc    eax
  408af8:	call   0x3f2d:0x3bcabf56
  408aff:	loop   0x408a9f
  408b01:	pop    ebx
  408b02:	fistp  QWORD PTR [edx+0x15]
  408b05:	in     al,0x60
  408b07:	xabort 0x15
  408b0a:	push   edx
  408b0b:	xlat   BYTE PTR ds:[ebx]
  408b0c:	test   dl,dh
  408b0e:	outs   dx,DWORD PTR ds:[esi]
  408b0f:	int    0xf5
  408b11:	sub    eax,0x7ac8ac5
  408b16:	into   
  408b17:	cmp    ch,cl
  408b19:	lea    ebp,[ecx+0x8]
  408b1c:	sbb    ch,bl
  408b1e:	cmc    
  408b1f:	dec    esi
  408b20:	arpl   WORD PTR [eax+0x778e2deb],cx
  408b26:	ret    0x3459
  408b29:	and    ah,BYTE PTR [edx]
  408b2b:	jbe    0x408ae8
  408b2d:	jl     0x408b37
  408b2f:	mov    bl,0x99
  408b31:	sbb    ebx,edi
  408b33:	addr16 and al,0xd6
  408b36:	dec    edx
  408b37:	sbb    BYTE PTR [esi+0x2f],al
  408b3a:	xchg   ebp,eax
  408b3b:	test   eax,0x432dae2
  408b40:	retf   0x6b04
  408b43:	jp     0x408b28
  408b45:	push   ds
  408b46:	xor    al,0x21
  408b48:	bndstx [ecx-0x13f4927a],bnd3
  408b4f:	shr    BYTE PTR [ebx+esi*1],1
  408b52:	lahf   
  408b53:	xchg   ecx,eax
  408b54:	pop    ebx
  408b55:	mov    ebp,0x33330422
  408b5a:	dec    esp
  408b5b:	pop    ebx
  408b5c:	inc    ebp
  408b5d:	inc    edi
  408b5e:	mov    ebp,0x677d2ed8
  408b63:	aad    0x71
  408b65:	adc    BYTE PTR [ecx+0x5],dl
  408b68:	sbb    eax,0xad28535f
  408b6d:	inc    esi
  408b6e:	pminsw mm4,QWORD PTR [ecx]
  408b71:	loope  0x408b47
  408b73:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b75:	mov    ah,0x91
  408b77:	mov    esp,0x4a8d356
  408b7c:	dec    esp
  408b7d:	and    al,BYTE PTR [esi-0x791b4933]
  408b83:	into   
  408b84:	adc    ch,BYTE PTR [edi]
  408b86:	inc    edx
  408b87:	sbb    dl,BYTE PTR [ebx]
  408b89:	jbe    0x408b0d
  408b8b:	scas   eax,DWORD PTR es:[edi]
  408b8c:	iret   
  408b8d:	xchg   BYTE PTR [eax+0x1ae86fe5],dl
  408b93:	push   0xa
  408b95:	xchg   ebp,eax
  408b96:	sahf   
  408b97:	neg    DWORD PTR [edi]
  408b99:	xchg   BYTE PTR [ebp-0x508c6dff],al
  408b9f:	aaa    
  408ba0:	lea    eax,[ecx+0x1c]
  408ba3:	push   edi
  408ba4:	aad    0x4f
  408ba6:	icebp  
  408ba7:	cmp    DWORD PTR [eax+eiz*2],esp
  408baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bab:	push   ebp
  408bac:	fdivr  QWORD PTR [edi+0x4fa97793]
  408bb2:	dec    esp
  408bb3:	std    
  408bb4:	xor    bh,BYTE PTR [eax+0x4f40bb09]
  408bba:	cmp    al,0xa4
  408bbc:	dec    esi
  408bbd:	arpl   WORD PTR [esi],cx
  408bbf:	jae    0x408bb5
  408bc1:	adc    DWORD PTR [ecx],esp
  408bc3:	cmp    BYTE PTR [ebx],bl
  408bc5:	lea    ebp,[eax]
  408bc7:	shr    BYTE PTR [ebp+ebp*1+0x4c2d9b36],cl
  408bce:	hlt    
  408bcf:	push   ds
  408bd0:	add    al,0x68
  408bd3:	adc    eax,0x38797ab1
  408bd8:	std    
  408bd9:	mov    cl,0x19
  408bdb:	clc    
  408bdc:	ins    BYTE PTR es:[edi],dx
  408bdd:	std    
  408bde:	jno    0x408c0a
  408be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408be1:	in     al,dx
  408be2:	fimul  DWORD PTR [ecx]
  408be4:	inc    eax
  408be5:	mov    bl,0x13
  408be7:	mov    dl,0x77
  408be9:	pop    esi
  408bea:	sub    DWORD PTR [ebp+0x47],eax
  408bed:	scas   eax,DWORD PTR es:[edi]
  408bee:	repnz sbb al,0xf8
  408bf1:	push   ss
  408bf2:	retf   
  408bf3:	imul   ebx,DWORD PTR [edx],0xfffffff3
  408bf6:	lahf   
  408bf7:	in     al,0x94
  408bf9:	sub    al,0x5c
  408bfb:	mov    eax,DWORD PTR [ebx+0x5b]
  408bfe:	inc    ecx
  408bff:	inc    esp
  408c00:	imul   ebp,DWORD PTR [edi+0x2a],0x61b6cab5
  408c07:	aam    0x19
  408c09:	aam    0x30
  408c0b:	into   
  408c0c:	cs add al,0xd5
  408c0f:	shld   DWORD PTR [edi],esi,cl
  408c12:	pop    edx
  408c13:	sub    DWORD PTR ds:0xf2fc6750,ecx
  408c19:	ret    0x102e
  408c1c:	outs   dx,BYTE PTR ds:[esi]
  408c1d:	xor    ebx,DWORD PTR ds:0xd66b9d8c
  408c23:	add    ebx,esp
  408c25:	jno    0x408c93
  408c27:	mov    ebx,0xa5d58c72
  408c2c:	push   esp
  408c2d:	popf   
  408c2e:	adc    bh,BYTE PTR [ecx]
  408c30:	js     0x408bf8
  408c32:	pop    ds
  408c33:	pushf  
  408c34:	int    0xb6
  408c36:	mov    edi,0x844fb4a2
  408c3b:	cdq    
  408c3c:	mov    BYTE PTR [eax+0x53c505df],dh
  408c42:	das    
  408c43:	push   ecx
  408c44:	neg    BYTE PTR [ecx]
  408c46:	mov    cl,BYTE PTR [ebx+0x28]
  408c49:	sbb    esi,DWORD PTR [ebx-0x50]
  408c4c:	mov    edx,0xb706fef4
  408c51:	mov    esp,0x36c1fd6
  408c56:	cmp    DWORD PTR [esi-0x1b],0xaf56f911
  408c5d:	or     BYTE PTR [edi],ch
  408c5f:	popa   
  408c60:	cmp    DWORD PTR [edi+0x60ea211a],esp
  408c66:	pop    ecx
  408c67:	adc    al,0x5b
  408c69:	push   ds
  408c6a:	inc    ebp
  408c6b:	mov    eax,ds:0x65236d88
  408c70:	repnz out dx,al
  408c72:	xor    DWORD PTR ds:0x50bbd82c,esp
  408c78:	pop    esi
  408c79:	xchg   edi,eax
  408c7a:	rcl    ah,cl
  408c7c:	(bad)  
  408c7d:	bound  esp,QWORD PTR [ecx]
  408c7f:	push   ecx
  408c80:	jmp    0x408cde
  408c82:	lock in eax,dx
  408c84:	sbb    ebp,DWORD PTR [edx]
  408c86:	adc    ecx,DWORD PTR [ecx-0x19]
  408c89:	mov    ch,0x47
  408c8b:	xor    eax,0x4570c2ea
  408c90:	xlat   BYTE PTR ds:[ebx]
  408c91:	imul   esi,esp,0x983495a
  408c97:	mov    ebx,0x855655be
  408c9c:	lods   eax,DWORD PTR ds:[esi]
  408c9d:	iret   
  408c9e:	jecxz  0x408c2b
  408ca0:	in     eax,dx
  408ca1:	ss leave 
  408ca3:	and    DWORD PTR [ecx-0x5f34978a],eax
  408ca9:	inc    esi
  408caa:	jge    0x408c84
  408cac:	pusha  
  408cad:	inc    edx
  408cae:	dec    edi
  408caf:	in     eax,0x33
  408cb1:	sahf   
  408cb2:	push   esp
  408cb3:	cmp    al,BYTE PTR [ecx-0x758cc95c]
  408cb9:	clc    
  408cba:	xchg   eax,eax
  408cbc:	or     BYTE PTR [eax+0x702f8aa8],dl
  408cc2:	arpl   cx,bx
  408cc4:	xchg   DWORD PTR [eax-0x73],esi
  408cc7:	(bad)  
  408cc8:	pop    eax
  408cc9:	and    BYTE PTR fs:[ecx-0x61c6f23e],ah
  408cd0:	and    DWORD PTR ds:0x89f5cf65,0x10c873a4
  408cda:	inc    ecx
  408cdb:	mov    bh,0x25
  408cdd:	mov    edx,0xd52c5df9
  408ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce3:	pop    esp
  408ce4:	inc    ecx
  408ce5:	xor    ebp,DWORD PTR [ebx]
  408ce7:	sar    BYTE PTR [ebp+0x2f],1
  408cea:	push   si
  408cec:	and    eax,0xb7e06b4b
  408cf1:	add    eax,0xdb13c65e
  408cf6:	scas   al,BYTE PTR es:[edi]
  408cf7:	mov    bh,0xe9
  408cf9:	nop
  408cfa:	push   0xba03e163
  408cff:	ins    BYTE PTR es:[edi],dx
  408d00:	dec    ah
  408d02:	inc    esp
  408d03:	cdq    
  408d04:	or     eax,0x7c6e2f61
  408d09:	aas    
  408d0a:	mov    edx,0x8a03f52c
  408d0f:	(bad)  
  408d11:	outs   dx,DWORD PTR ds:[esi]
  408d12:	cs sbb eax,0x90179d26
  408d18:	pop    ebp
  408d19:	les    ebx,FWORD PTR cs:[ecx-0x3b]
  408d1d:	test   BYTE PTR [edi],bl
  408d1f:	aam    0xf5
  408d21:	nop
  408d22:	fdivr  QWORD PTR [eax+0xabff84c]
  408d28:	out    dx,eax
  408d29:	aaa    
  408d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d2b:	xchg   esi,eax
  408d2c:	adc    esp,DWORD PTR [esi]
  408d2e:	iret   
  408d2f:	xchg   ebx,eax
  408d30:	(bad)  
  408d31:	mov    ds:0x61763a9e,al
  408d36:	pop    esp
  408d37:	sbb    ecx,DWORD PTR [ecx]
  408d39:	ins    BYTE PTR es:[edi],dx
  408d3a:	mov    ebp,0xc82b5796
  408d3f:	xlat   BYTE PTR ds:[ebx]
  408d40:	in     eax,0x79
  408d42:	mov    ds:0x63182b30,al
  408d47:	outs   dx,DWORD PTR ds:[esi]
  408d48:	pop    edx
  408d49:	out    dx,eax
  408d4a:	pop    ecx
  408d4b:	stc    
  408d4c:	cmp    al,BYTE PTR [ebx]
  408d4e:	push   cs
  408d4f:	xor    BYTE PTR [ecx],bh
  408d51:	test   bh,ch
  408d53:	outs   dx,DWORD PTR ds:[esi]
  408d54:	jbe    0x408ce7
  408d56:	loopne 0x408d19
  408d58:	fbld   TBYTE PTR [ebx]
  408d5a:	push   es
  408d5b:	adc    DWORD PTR [ebx],edi
  408d5d:	and    BYTE PTR [ecx-0x7e],ch
  408d60:	cmp    esp,DWORD PTR [ebx+0x678d227f]
  408d66:	push   ds
  408d67:	mov    al,ds:0xf2ee51b3
  408d6c:	gs cli 
  408d6e:	cmp    eax,0x980c190c
  408d73:	scas   eax,DWORD PTR es:[edi]
  408d74:	call   0x350b:0xc69d0f65
  408d7b:	jnp    0x408db5
  408d7d:	pop    ss
  408d7e:	and    bh,al
  408d80:	sar    DWORD PTR [edx],1
  408d82:	sbb    eax,0xa2973aff
  408d87:	fs aaa 
  408d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d8a:	cmp    DWORD PTR [ebx],edi
  408d8c:	movlhps xmm7,xmm3
  408d8f:	xchg   BYTE PTR [ecx-0x3e],bh
  408d92:	sbb    ebx,esi
  408d94:	aas    
  408d95:	mov    ecx,0x1fc22925
  408d9a:	push   edi
  408d9b:	sub    al,0x2b
  408d9d:	and    eax,0x3e28d88d
  408da2:	sbb    esi,DWORD PTR [ecx]
  408da4:	and    ecx,eax
  408da6:	dec    ebp
  408da7:	adc    al,0x3e
  408da9:	lods   al,BYTE PTR ds:[esi]
  408daa:	iret   
  408dab:	dec    ebx
  408dac:	std    
  408dad:	mov    edi,0xed31cfb4
  408db2:	inc    edx
  408db3:	sub    al,bl
  408db5:	mov    ch,0xb8
  408db7:	adc    al,0x39
  408db9:	cld    
  408dba:	call   0x6e4a46f5
  408dbf:	jle    0x408e19
  408dc1:	fimul  WORD PTR [ecx]
  408dc3:	jecxz  0x408dbc
  408dc5:	or     BYTE PTR [edx],0xd3
  408dc8:	arpl   WORD PTR [edx],ax
  408dca:	cs adc eax,0x4e3fca4a
  408dd0:	push   esi
  408dd1:	adc    ebx,ecx
  408dd3:	gs sbb al,0x51
  408dd6:	cli    
  408dd7:	out    0x4c,eax
  408dd9:	enter  0xde2c,0x40
  408ddd:	cmp    ah,BYTE PTR [ebp-0x3ff7cd33]
  408de3:	mov    ebx,edi
  408de5:	dec    esi
  408de6:	shr    ch,1
  408de8:	js     0x408e43
  408dea:	inc    ecx
  408deb:	jmp    0xdbd94491
  408df0:	das    
  408df1:	sbb    BYTE PTR [edi],ch
  408df3:	jns    0x408da1
  408df5:	sbb    DWORD PTR [edx+0x52],ecx
  408df8:	aas    
  408df9:	ins    BYTE PTR es:[edi],dx
  408dfa:	dec    esi
  408dfb:	xchg   esp,eax
  408dfc:	ins    BYTE PTR es:[edi],dx
  408dfd:	jg     0x408e7b
  408dff:	bound  edx,QWORD PTR [ecx+0x917ccfa]
  408e05:	cmp    al,0xc1
  408e07:	sub    DWORD PTR gs:[edx],ebp
  408e0a:	lea    esi,[ecx-0x4f]
  408e0d:	pop    ss
  408e0e:	and    BYTE PTR [edi-0x12],ah
  408e11:	loope  0x408d95
  408e13:	inc    edi
  408e14:	sbb    al,0xd1
  408e16:	lock mov ecx,0xe08294dd
  408e1c:	in     al,0xf8
  408e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e1f:	dec    eax
  408e20:	jmp    0x408da2
  408e22:	and    DWORD PTR [ebx+0xf],ebx
  408e25:	jle    0x408ddc
  408e27:	aam    0xea
  408e29:	or     BYTE PTR [esp+eax*2-0x2c4e4f61],bh
  408e30:	inc    edx
  408e31:	inc    bl
  408e33:	test   BYTE PTR [ebx+0x5143d5e1],ch
  408e39:	sub    eax,0x9de12045
  408e3e:	ficom  WORD PTR [edx]
  408e40:	add    BYTE PTR [ebx-0x368b231e],ah
  408e46:	jecxz  0x408e16
  408e48:	mov    esi,edx
  408e4a:	push   es
  408e4b:	es sub esp,ecx
  408e4e:	loopne 0x408eca
  408e50:	cs addr16 push es
  408e53:	stc    
  408e54:	jmp    DWORD PTR [ebx-0x6b]
  408e57:	pop    eax
  408e58:	inc    ebp
  408e59:	sbb    BYTE PTR ds:0xddb4b733,ah
  408e5f:	inc    ebp
  408e60:	xor    BYTE PTR [ebx+0x5c],cl
  408e63:	leave  
  408e64:	adc    ebp,esi
  408e66:	mov    ds:0xa45dbaa6,al
  408e6b:	call   0x931e:0x246b599a
  408e72:	push   ecx
  408e73:	xor    eax,0x3b1cde99
  408e78:	xchg   esi,eax
  408e79:	pop    esp
  408e7a:	addr16 fwait
  408e7c:	stos   DWORD PTR es:[edi],eax
  408e7d:	add    esp,DWORD PTR [esp+esi*2+0x3186ad9f]
  408e84:	test   eax,0xbacb8403
  408e89:	scas   al,BYTE PTR es:[edi]
  408e8a:	daa    
  408e8b:	push   esp
  408e8c:	call   FWORD PTR [eax]
  408e8e:	ds rcr esi,0x61
  408e92:	adc    eax,0xb9474fe2
  408e97:	test   al,0xe0
  408e99:	pop    ds
  408e9a:	jg     0x408e41
  408e9c:	repnz (bad) 
  408e9e:	cmc    
  408e9f:	inc    edi
  408ea0:	xchg   edi,eax
  408ea1:	sub    ecx,eax
  408ea3:	out    dx,eax
  408ea4:	lock ds mov edi,0x8545f589
  408eab:	push   edi
  408eac:	inc    esp
  408ead:	outs   dx,DWORD PTR ds:[esi]
  408eae:	mov    esp,0xe25f5f29
  408eb3:	pusha  
  408eb4:	xor    eax,0x2f038289
  408eb9:	add    al,0x8
  408ebc:	push   0xffffffe4
  408ebe:	aad    0x82
  408ec0:	or     cl,al
  408ec2:	push   edi
  408ec3:	adc    eax,0x75f2255b
  408ec8:	test   DWORD PTR [ecx+ebp*2+0x5eab1533],ecx
  408ecf:	out    0xb2,al
  408ed1:	sub    ecx,esp
  408ed3:	push   esp
  408ed4:	inc    ecx
  408ed5:	push   edx
  408ed6:	jp     0x408e97
  408ed8:	aas    
  408ed9:	mov    dh,0x26
  408edb:	ins    DWORD PTR es:[edi],dx
  408edc:	test   al,0xe8
  408ede:	leave  
  408edf:	mov    ds:0x897938ce,eax
  408ee4:	stos   DWORD PTR es:[edi],eax
  408ee5:	sahf   
  408ee6:	hlt    
  408ee7:	sub    ebx,edx
  408ee9:	repz push ss
  408eeb:	and    esi,DWORD PTR [edi+edi*8-0x6c]
  408eef:	outs   dx,BYTE PTR ds:[esi]
  408ef0:	xor    al,0xec
  408ef2:	pop    ebx
  408ef3:	dec    esi
  408ef4:	push   esi
  408ef5:	aas    
  408ef6:	jnp    0x408f28
  408ef8:	pop    edi
  408ef9:	ds pop edi
  408efb:	pop    ss
  408efc:	inc    edx
  408efd:	mov    ds:0x8b256cfe,al
  408f02:	ins    DWORD PTR es:[edi],dx
  408f03:	bound  eax,QWORD PTR [ebp-0x7f]
  408f06:	in     al,0xd5
  408f08:	dec    eax
  408f09:	inc    ebx
  408f0a:	adc    BYTE PTR [esi-0x61],dl
  408f0d:	icebp  
  408f0e:	cli    
  408f0f:	sbb    BYTE PTR [edx-0x2d],bl
  408f12:	adc    eax,0x2652afcd
  408f17:	lock adc BYTE PTR [edi+edi*4],0xfc
  408f1c:	mov    ds:0x8aa16571,eax
  408f21:	out    dx,eax
  408f22:	iret   
  408f23:	mov    esp,0x287f7e08
  408f28:	fist   DWORD PTR [edi-0x1037498f]
  408f2e:	test   eax,0x724d715d
  408f33:	dec    ecx
  408f34:	es out 0xd1,al
  408f37:	mov    bh,0xbd
  408f39:	sbb    cl,0xe1
  408f3c:	idiv   DWORD PTR [ecx+0x42c6eea0]
  408f42:	jmp    0x1cbb:0xbcc5393d
  408f49:	shr    DWORD PTR fs:[ecx+0x2],cl
  408f4d:	clc    
  408f4e:	repz int3 
  408f50:	sar    DWORD PTR [edx+0x64],1
  408f53:	mov    eax,DWORD PTR [esp+esi*2+0x6b]
  408f57:	push   ebp
  408f58:	inc    ebp
  408f59:	imul   ebx,DWORD PTR [edx],0x8fddff23
  408f5f:	cmp    ebp,0x26
  408f62:	dec    esp
  408f63:	push   edi
  408f64:	les    edi,FWORD PTR [ecx+0x66]
  408f67:	fstp   QWORD PTR [eax+eax*2-0x3c]
  408f6b:	rcl    BYTE PTR [edi],0x94
  408f6e:	enter  0x5f40,0x17
  408f72:	mov    dl,0x32
  408f74:	enter  0x95b7,0x90
  408f78:	int3   
  408f79:	imul   eax,DWORD PTR [eax],0x5e
  408f7c:	jb     0x408f3d
  408f7e:	arpl   sp,di
  408f80:	std    
  408f81:	sub    BYTE PTR [eax+edi*8],cl
  408f84:	ret    
  408f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f86:	pop    edi
  408f87:	enter  0xac8e,0xa4
  408f8b:	mov    ?,edx
  408f8d:	or     esi,edx
  408f8f:	push   0x73ca7dc6
  408f94:	push   esp
  408f95:	test   DWORD PTR [ebx+eiz*2-0x37],0x1cec236
  408f9d:	mov    eax,0xcb39b7f8
  408fa3:	ja     0x409002
  408fa5:	cmp    BYTE PTR [ebx+eax*4],ch
  408fa8:	les    edx,FWORD PTR [edx]
  408faa:	dec    ebp
  408fab:	inc    eax
  408fac:	cli    
  408fad:	pop    es
  408fae:	push   edi
  408faf:	int3   
  408fb0:	adc    al,0xcd
  408fb2:	rcl    BYTE PTR [edi+ebp*4],1
  408fb5:	pop    esp
  408fb6:	and    bl,BYTE PTR [eax-0x6e58eb50]
  408fbc:	pop    edi
  408fbd:	pop    eax
  408fbe:	(bad)  
  408fbf:	sub    eax,0xa10a235b
  408fc4:	xor    eax,0x49fbe09d
  408fc9:	cmp    dl,ah
  408fcb:	gs mov bh,0x20
  408fce:	mov    al,0x4a
  408fd0:	shl    dl,cl
  408fd2:	cmp    BYTE PTR cs:[edx],al
  408fd5:	push   ebp
  408fd6:	xchg   edi,eax
  408fd7:	mov    ds:0xb33b7503,al
  408fdc:	add    BYTE PTR [edx-0x6298b4dd],0xe9
  408fe3:	pop    edi
  408fe4:	jle    0x40903b
  408fe6:	cs inc esi
  408fe8:	inc    esi
  408fe9:	fidivr WORD PTR [edi+0x1e3d6f58]
  408fef:	retf   0xaa
  408ff2:	repz les eax,FWORD PTR [esi-0xa89d813]
  408ff9:	push   esp
  408ffa:	arpl   WORD PTR ds:0x80dfe6d6,di
  409000:	loope  0x408ff6
  409002:	test   BYTE PTR [edi],0x1
  409005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409006:	pusha  
  409007:	dec    ebp
  409008:	push   edi
  409009:	sbb    esi,esi
  40900b:	retf   
  40900c:	sar    eax,cl
  40900e:	outs   dx,BYTE PTR ds:[esi]
  40900f:	jp     0x408ff2
  409011:	loop   0x408ff3
  409013:	jbe    0x409052
  409015:	popa   
  409016:	jno    0x40900e
  409018:	xor    ebx,ebp
  40901a:	push   cs
  40901b:	push   edi
  40901c:	test   eax,0x422232c5
  409021:	(bad)  
  409022:	push   ecx
  409023:	imul   ebx,DWORD PTR [ecx],0x9938527f
  409029:	inc    ebp
  40902a:	cmp    eax,0xc0004e6e
  40902f:	ror    DWORD PTR [ebp-0x643b40aa],1
  409035:	mov    edx,0xecf4391
  40903a:	xchg   ebp,eax
  40903b:	out    dx,eax
  40903c:	fs mov edi,0x6cade142
  409042:	sub    al,0x42
  409044:	les    edx,FWORD PTR [ecx-0xd]
  409047:	mov    WORD PTR [eax],?
  409049:	dec    ebx
  40904a:	or     al,0x8c
  40904c:	loopne 0x4090ac
  40904e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40904f:	adc    al,0xa6
  409051:	jl     0x4090ad
  409053:	ins    DWORD PTR es:[edi],dx
  409054:	add    BYTE PTR [eax-0x2c],dl
  409057:	pushf  
  409058:	mov    al,0xa6
  40905a:	retf   0xc760
  40905d:	mov    cl,0x63
  40905f:	dec    eax
  409060:	cmp    ebp,eax
  409062:	(bad)  
  409063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409064:	add    al,0xe9
  409066:	cld    
  409067:	xchg   BYTE PTR [eax-0x34e9689d],cl
  40906d:	jge    0x409096
  40906f:	hlt    
  409070:	ja     0x4090e6
  409072:	(bad)  
  409073:	scas   eax,DWORD PTR es:[edi]
  409074:	popf   
  409075:	sub    BYTE PTR ds:0xbccc340f,dh
  40907b:	or     DWORD PTR [eax+edx*8-0xd],esp
  40907f:	jge    0x409098
  409081:	outs   dx,BYTE PTR ds:[esi]
  409082:	aad    0x7f
  409084:	icebp  
  409085:	sar    edx,0xd5
  409088:	xchg   BYTE PTR [eax],bh
  40908a:	push   0x8677cb42
  40908f:	xchg   edx,eax
  409090:	push   esp
  409091:	mov    ebx,0xc2f6c5f9
  409096:	sahf   
  409097:	and    al,ch
  409099:	jmp    FWORD PTR [edi+0x76]
  40909c:	dec    edi
  40909d:	sub    esi,DWORD PTR [eax-0x5]
  4090a0:	popf   
  4090a1:	retf   0x6bcd
  4090a4:	std    
  4090a5:	adc    cl,ah
  4090a7:	idiv   bh
  4090a9:	or     al,0x44
  4090ab:	dec    eax
  4090ac:	mov    ds:0xec5f8d52,eax
  4090b1:	push   esi
  4090b2:	add    ch,0xdf
  4090b5:	cld    
  4090b6:	sub    bh,BYTE PTR [ebx]
  4090b8:	push   edx
  4090b9:	xchg   BYTE PTR [ebx-0x65],dh
  4090bc:	add    DWORD PTR [ecx],esp
  4090be:	xchg   DWORD PTR [ecx+0x350ce131],esi
  4090c4:	push   ss
  4090c5:	push   ss
  4090c6:	inc    esp
  4090c7:	rol    DWORD PTR [ebx-0x2b],1
  4090ca:	hlt    
  4090cb:	imul   edi,esi,0x92f28ad4
  4090d1:	xchg   ebx,eax
  4090d2:	iret   
  4090d3:	out    0xe7,eax
  4090d5:	and    al,0xdd
  4090d7:	out    0x1f,al
  4090d9:	cld    
  4090da:	lea    ebx,[ebx-0x60]
  4090dd:	pop    ebp
  4090de:	lds    edx,FWORD PTR [edi-0x65]
  4090e1:	mov    ds:0xccc0f5e4,al
  4090e6:	push   cs
  4090e7:	lahf   
  4090e8:	push   0xffffffca
  4090ea:	test   bl,bl
  4090ec:	push   edx
  4090ed:	xchg   BYTE PTR [ecx-0x742c0e1a],cl
  4090f3:	or     DWORD PTR [eax],0xffffffff
  4090f6:	xchg   edi,eax
  4090f7:	int    0x23
  4090f9:	test   DWORD PTR [ecx],ecx
  4090fb:	call   0x2253692d
  409100:	push   ebp
  409101:	call   0x988f81d5
  409106:	xchg   ecx,eax
  409107:	arpl   WORD PTR [ebx+0x7433558],sp
  40910d:	pop    edx
  40910e:	mov    ah,0x27
  409110:	or     bh,ch
  409112:	jb     0x409192
  409114:	or     DWORD PTR [eax+eiz*2+0x1587b1a9],esp
  40911b:	popa   
  40911c:	xchg   ecx,eax
  40911d:	xchg   esp,eax
  40911e:	jmp    0x1b822ce
  409123:	dec    eax
  409124:	shl    BYTE PTR [eax+eax*4-0x73434750],cl
  40912b:	pop    ecx
  40912c:	add    esp,esp
  40912e:	aas    
  40912f:	fsub   DWORD PTR [edx+0x34b3648f]
  409135:	sub    ebp,DWORD PTR [edx-0x2e9cb16a]
  40913b:	xchg   esp,eax
  40913c:	pop    ebp
  40913d:	dec    ebp
  40913e:	call   0x282231c7
  409143:	sub    al,0x65
  409145:	mov    cs,WORD PTR [ebx]
  409147:	ins    BYTE PTR es:[di],dx
  409149:	push   0x21
  40914b:	retf   0x4330
  40914e:	arpl   WORD PTR [eax-0x556f8634],cx
  409154:	mov    esi,0x61ab9f39
  409159:	daa    
  40915a:	enter  0x534c,0x95
  40915e:	mov    esp,0x16781a0d
  409163:	stc    
  409164:	mov    bh,0x34
  409166:	sub    DWORD PTR [ebx-0x538ffb35],edx
  40916c:	int3   
  40916d:	xor    BYTE PTR [ebp+0x2],ah
  409170:	(bad)  
  409171:	lock out dx,eax
  409173:	in     eax,0x29
  409175:	test   BYTE PTR [ebx-0xa],ah
  409178:	arpl   WORD PTR [edx-0x7acf1497],si
  40917e:	adc    al,0xd2
  409180:	add    bl,BYTE PTR [eax+0x4fd78c3]
  409186:	dec    ebp
  409187:	rcr    BYTE PTR [edi-0x670d81c1],cl
  40918d:	fld    DWORD PTR [ebx-0x6d]
  409190:	xchg   DWORD PTR [ecx-0x59416dff],ecx
  409196:	jbe    0x409137
  409198:	add    eax,0x6f4da19b
  40919d:	or     eax,eax
  40919f:	ret    
  4091a0:	iret   
  4091a1:	jp     0x40918a
  4091a3:	cmp    DWORD PTR [ebp-0x57b98ecf],edi
  4091a9:	ficomp DWORD PTR [ecx+0x4e]
  4091ac:	dec    ecx
  4091ad:	push   edi
  4091ae:	jnp    0x40916e
  4091b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091b1:	jle    0x409181
  4091b3:	pop    ss
  4091b4:	mov    bl,0x5
  4091b6:	(bad)  
  4091b7:	nop
  4091b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091b9:	mov    bh,0xf6
  4091bb:	push   ebp
  4091bc:	and    esi,ebx
  4091be:	aas    
  4091bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091c0:	outs   dx,BYTE PTR ds:[esi]
  4091c1:	jns    0x4091fd
  4091c3:	in     eax,0xd3
  4091c5:	xor    ebx,DWORD PTR [esi+0xd0a174e]
  4091cb:	xor    DWORD PTR [ebp+esi*4+0x3d],esi
  4091cf:	or     eax,0x48f94ad
  4091d4:	pop    edx
  4091d5:	adc    al,0xab
  4091d7:	sub    bh,BYTE PTR [ecx]
  4091d9:	mov    edi,0x28adeb68
  4091de:	add    ecx,DWORD PTR [ebx-0x2222342d]
  4091e4:	adc    al,0xa5
  4091e6:	js     0x409211
  4091e8:	xchg   ecx,eax
  4091e9:	cs jae 0x4091e1
  4091ec:	stos   BYTE PTR es:[edi],al
  4091ed:	imul   eax,ebp,0x41
  4091f0:	repnz add eax,0x8cb7a0da
  4091f6:	push   esi
  4091f7:	adc    al,0xd1
  4091f9:	xchg   ebx,eax
  4091fa:	cs jecxz 0x4091de
  4091fd:	lods   eax,DWORD PTR ds:[esi]
  4091fe:	sti    
  4091ff:	mov    esi,0x7faa94c7
  409204:	les    edi,FWORD PTR [edi+0x1c263f2b]
  40920a:	in     al,dx
  40920b:	lds    esp,FWORD PTR [edi]
  40920d:	outs   dx,DWORD PTR ds:[esi]
  40920e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40920f:	idiv   ebx
  409211:	ds mov esp,0x81b26c57
  409217:	and    DWORD PTR [ebx-0x1b],edi
  40921a:	jns    0x4091ac
  40921c:	inc    edx
  40921d:	test   al,0x6f
  40921f:	retf   
  409220:	in     eax,0x78
  409222:	adc    ecx,ecx
  409224:	sbb    BYTE PTR ds:0xc19656ec,ch
  40922a:	dec    ecx
  40922b:	nop
  40922c:	xor    DWORD PTR ds:0xf7d7bb82,edi
  409232:	addr16 icebp 
  409234:	fnstcw WORD PTR [esi+edi*8]
  409237:	aad    0x7
  409239:	pop    esi
  40923a:	into   
  40923b:	push   es
  40923c:	neg    BYTE PTR [ecx+0x6c2fcad6]
  409242:	sbb    eax,esp
  409244:	mov    esi,edx
  409246:	mov    esp,0xc1dbb848
  40924b:	mov    ch,0x99
  40924d:	jmp    0x486:0x9ad78772
  409254:	mov    edx,0x90fe1ef1
  409259:	dec    edi
  40925a:	clc    
  40925b:	bound  ecx,QWORD PTR [edx+ebx*2-0x43]
  40925f:	je     0x40921d
  409261:	out    0x55,al
  409263:	jbe    0x4092c5
  409265:	jmp    0x409244
  409267:	mov    bl,0x93
  409269:	pop    esi
  40926a:	outs   dx,BYTE PTR ds:[esi]
  40926b:	pop    ebx
  40926c:	in     eax,0x9
  40926e:	adc    eax,0xc2cd7bd
  409273:	mov    ah,0x81
  409275:	fs pushf 
  409277:	ins    BYTE PTR es:[edi],dx
  409278:	aaa    
  409279:	push   esp
  40927a:	pushf  
  40927b:	pop    ss
  40927c:	clc    
  40927d:	cdq    
  40927e:	arpl   WORD PTR ds:0x1863d7c9,di
  409284:	in     al,dx
  409285:	mov    cl,0x51
  409287:	inc    esi
  409288:	dec    ebx
  409289:	or     al,0x27
  40928b:	mov    bh,0x66
  40928d:	fwait
  40928e:	adc    BYTE PTR [ebx+0x5d06d594],cl
  409294:	jp     0x4092df
  409296:	adc    bh,BYTE PTR [ebx-0x63312ab0]
  40929c:	sahf   
  40929d:	xchg   edi,eax
  40929e:	xchg   esp,eax
  40929f:	retf   0xb664
  4092a2:	sbb    BYTE PTR [eax+0x3d427b85],dh
  4092a8:	ins    DWORD PTR es:[edi],dx
  4092a9:	ins    DWORD PTR es:[edi],dx
  4092aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092ab:	retf   0xcf00
  4092ae:	out    dx,al
  4092af:	inc    eax
  4092b0:	ja     0x4092c1
  4092b2:	jne    0x4092ac
  4092b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b5:	sub    al,0x8f
  4092b7:	sbb    al,BYTE PTR [esi-0x2c4cb7ce]
  4092bd:	outs   dx,BYTE PTR ds:[esi]
  4092be:	or     BYTE PTR [ebp-0x66],ch
  4092c1:	rcl    DWORD PTR [eax],cl
  4092c3:	push   es
  4092c4:	mov    ah,0x1b
  4092c6:	call   0x9f8e15e2
  4092cb:	xor    BYTE PTR [edi-0x4],ch
  4092ce:	pushf  
  4092cf:	rcl    DWORD PTR [edi+0x3d],1
  4092d2:	xchg   esp,eax
  4092d3:	or     ecx,edi
  4092d5:	mov    eax,0x88dc659
  4092da:	xchg   ecx,eax
  4092db:	pop    ebx
  4092dc:	mov    ss,WORD PTR [esi]
  4092de:	fs dec eax
  4092e0:	sub    eax,edi
  4092e2:	xchg   edi,eax
  4092e3:	lods   al,BYTE PTR ds:[esi]
  4092e4:	xchg   esp,eax
  4092e5:	jl     0x409362
  4092e7:	jmp    DWORD PTR [ebp-0x3468753d]
  4092ed:	jecxz  0x409328
  4092ef:	cmp    BYTE PTR [ebp+0x43b89ca3],bh
  4092f5:	shl    BYTE PTR [ebx+0x7ad89e38],cl
  4092fb:	das    
  4092fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092fd:	sub    DWORD PTR [ebx+0x17512d1],0xe457abb6
  409307:	xor    eax,0x52b349
  40930c:	jmp    0xad4be893
  409311:	retf   0x10ac
  409314:	jge    0x409392
  409316:	popa   
  409317:	xchg   esp,eax
  409318:	test   BYTE PTR [esi-0x577d2fe6],al
  40931e:	adc    eax,0x36b12f43
  409323:	out    0x23,al
  409325:	test   DWORD PTR [ecx],esi
  409327:	cmc    
  409328:	xchg   edx,eax
  409329:	or     dh,BYTE PTR [esi+0x74]
  40932c:	out    dx,eax
  40932d:	mov    dh,0x7c
  40932f:	js     0x409397
  409331:	fld    QWORD PTR [eax+0x1a]
  409334:	stos   BYTE PTR es:[edi],al
  409335:	enter  0xee79,0xd1
  409339:	push   esi
  40933a:	cmp    cl,bh
  40933c:	aas    
  40933d:	pop    eax
  40933e:	add    al,0x2a
  409340:	loopne 0x40934c
  409342:	retf   0x13c1
  409345:	aad    0xd7
  409347:	into   
  409348:	aas    
  409349:	dec    esi
  40934a:	stc    
  40934b:	sub    DWORD PTR [ebx+ecx*8],esi
  40934e:	imul   eax,DWORD PTR [edi-0x49],0x58
  409352:	jo     0x4093d0
  409354:	dec    ecx
  409355:	or     ch,BYTE PTR [ebx+ebp*4]
  409358:	cmp    al,ch
  40935a:	in     eax,dx
  40935b:	enter  0x6b5b,0xc6
  40935f:	lds    ebp,FWORD PTR [ecx-0x19fd17e1]
  409365:	mov    ah,0x20
  409367:	cs jns 0x409322
  40936a:	pop    esi
  40936b:	cmp    al,bl
  40936d:	jno    0x4093cf
  40936f:	and    DWORD PTR [ecx+0x29],eax
  409372:	inc    ecx
  409373:	sub    edx,DWORD PTR [eax+0x10]
  409376:	iret   
  409377:	fcmovu st,st(6)
  409379:	outs   dx,BYTE PTR ds:[esi]
  40937a:	sub    BYTE PTR [edx-0x4080bed7],cl
  409380:	retf   
  409381:	adc    BYTE PTR [edx],0x72
  409384:	push   cs
  409385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409386:	inc    ebp
  409387:	mov    ch,0x56
  409389:	into   
  40938a:	dec    edi
  40938b:	pop    es
  40938c:	cmp    al,0x7a
  40938e:	aam    0x4f
  409390:	and    ah,BYTE PTR [esi+0x38]
  409393:	shr    ebx,1
  409395:	data16 fcom QWORD PTR [eax-0x6d]
  409399:	and    ebp,esi
  40939b:	push   ss
  40939c:	aaa    
  40939d:	cwde   
  40939e:	(bad)  
  40939f:	xchg   edi,eax
  4093a0:	or     eax,0x2394ea13
  4093a5:	imul   ecx,DWORD PTR [ebx+edi*2-0x1e],0x1309a4c8
  4093ad:	mov    ds:0xb188a7e6,eax
  4093b2:	cld    
  4093b3:	ins    BYTE PTR es:[edi],dx
  4093b4:	jecxz  0x40939b
  4093b6:	(bad)  
  4093b7:	rcl    DWORD PTR [edx-0x239c9155],cl
  4093bd:	mov    eax,DWORD PTR [ebx]
  4093bf:	adc    eax,0xcb7e8c4c
  4093c4:	inc    esp
  4093c5:	pop    ecx
  4093c6:	out    0x5f,al
  4093c8:	cmp    al,0x49
  4093ca:	das    
  4093cb:	xchg   DWORD PTR [edi-0x747121b4],esp
  4093d1:	jb     0x40941b
  4093d3:	in     eax,0xd5
  4093d5:	push   edx
  4093d6:	das    
  4093d7:	mov    al,0x8d
  4093d9:	outs   dx,DWORD PTR ds:[esi]
  4093da:	or     eax,0x5267e1d0
  4093df:	sub    eax,0x628ff914
  4093e4:	inc    ebx
  4093e5:	sub    DWORD PTR [edx-0x56],0xffffff9f
  4093e9:	cmp    edi,DWORD PTR [esi-0x52]
  4093ec:	sub    al,0xa3
  4093ee:	adc    cl,BYTE PTR [ecx+edx*8]
  4093f1:	sbb    ch,ch
  4093f3:	sub    bh,bh
  4093f5:	test   BYTE PTR ds:0xbb7131ba,dl
  4093fb:	mov    ds:0xd521116b,eax
  409400:	xor    ah,BYTE PTR [ebp-0x32]
  409403:	ins    BYTE PTR es:[edi],dx
  409404:	les    edi,FWORD PTR [ecx-0x20d34ee7]
  40940a:	add    al,0xd5
  40940c:	ins    BYTE PTR es:[edi],dx
  40940d:	outs   dx,DWORD PTR ds:[esi]
  40940e:	setle  BYTE PTR [ecx]
  409411:	jbe    0x40947a
  409413:	jmp    0x4093c7
  409415:	jge    0x4093b2
  409417:	mov    ds:0x888ddada,al
  40941c:	rol    DWORD PTR [edx+0x7b],0x43
  409420:	popf   
  409421:	cli    
  409422:	pushw  0x4fa9
  409426:	lods   al,BYTE PTR ds:[esi]
  409427:	jno    0x4093d1
  409429:	jecxz  0x4093df
  40942b:	cmp    bl,BYTE PTR [eax+0x26970d79]
  409431:	(bad)  
  409433:	push   esp
  409434:	test   al,0xfb
  409436:	adc    ecx,DWORD PTR [edi+0x71dc33fb]
  40943c:	or     al,0xdf
  40943e:	push   edi
  40943f:	and    eax,ebp
  409441:	jne    0x40946a
  409443:	mov    dh,0x6d
  409445:	outs   dx,DWORD PTR ds:[esi]
  409446:	inc    ecx
  409447:	push   edi
  409448:	lahf   
  409449:	or     DWORD PTR ds:0xaa07357,0x41
  409450:	jno    0x4093d4
  409452:	push   es
  409453:	(bad)  
  409455:	aad    0x90
  409457:	cmp    DWORD PTR [ecx-0x7],edi
  40945a:	jp     0x40942b
  40945c:	int3   
  40945d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40945e:	rcr    dh,1
  409460:	arpl   di,si
  409462:	(bad)  
  409463:	shl    DWORD PTR [ebx],cl
  409465:	jle    0x4093ec
  409467:	xor    bh,cl
  409469:	sub    BYTE PTR [ecx-0x43],ch
  40946c:	lock or dl,dl
  40946f:	es push ebx
  409471:	push   ss
  409472:	imul   ecx,DWORD PTR [ebp-0xb6e2ab],0x7994fb4
  40947c:	cmp    ebx,DWORD PTR [ecx+ebx*1+0x6f06e132]
  409483:	xor    esi,esp
  409485:	inc    ebp
  409486:	test   eax,0x113c6ac3
  40948b:	and    cl,cl
  40948d:	xchg   esp,eax
  40948e:	mov    al,ds:0x91535cd8
  409493:	out    dx,eax
  409494:	ror    DWORD PTR [eax+0x49c63cf8],0xaf
  40949b:	int    0xcf
  40949d:	mov    ch,0x67
  40949f:	das    
  4094a0:	ret    
  4094a1:	xchg   esp,eax
  4094a2:	daa    
  4094a3:	jb     0x4094ae
  4094a5:	into   
  4094a6:	mov    WORD PTR [ebx+ecx*4+0x6a],?
  4094aa:	mov    ebx,DWORD PTR [edx+ecx*4-0x391aa998]
  4094b1:	sub    ebx,ebx
  4094b3:	xchg   ebx,eax
  4094b4:	mov    ebx,0xfb62b417
  4094b9:	jmp    0x2022de04
  4094be:	int3   
  4094bf:	xlat   BYTE PTR ds:[ebx]
  4094c0:	mov    ch,0x7d
  4094c2:	daa    
  4094c3:	aam    0x4e
  4094c5:	rol    BYTE PTR [ebp-0x2f77ba14],1
  4094cb:	mov    dh,0x9b
  4094cd:	or     DWORD PTR [ecx+eax*8+0xa],esi
  4094d1:	sub    eax,0x85e00d4e
  4094d6:	adc    ch,bh
  4094d8:	pop    ss
  4094d9:	iret   
  4094da:	test   esp,edi
  4094dc:	test   dh,ch
  4094de:	mov    edx,0x67616a24
  4094e3:	mov    ds:0x388ff411,eax
  4094e8:	bound  edi,QWORD PTR [ecx]
  4094ea:	(bad)  
  4094eb:	jecxz  0x4094f7
  4094ed:	leave  
  4094ee:	pop    es
  4094ef:	and    eax,0xf7c8eb90
  4094f4:	in     al,0xcb
  4094f6:	mov    al,0x94
  4094f8:	sbb    eax,0xa8c2eaef
  4094fd:	mov    ds:0x93525435,eax
  409502:	stc    
  409503:	hlt    
  409504:	push   ecx
  409505:	pop    eax
  409506:	shl    al,cl
  409508:	lock mov eax,0x2f7bc443
  40950e:	leave  
  40950f:	jecxz  0x4094ef
  409511:	dec    BYTE PTR [edx+0x7c18f2af]
  409517:	daa    
  409518:	test   DWORD PTR [esi],ebx
  40951a:	popa   
  40951b:	fidiv  DWORD PTR [ecx]
  40951d:	cdq    
  40951e:	push   ds
  40951f:	mov    bh,0x3
  409521:	xchg   DWORD PTR [eax+0x1c],esi
  409524:	leave  
  409525:	add    al,0xd9
  409527:	dec    esp
  409528:	mov    ebp,0xb8f3ea74
  40952d:	pop    edx
  40952e:	and    eax,0xf5b6bdc
  409533:	mov    ecx,0x517cc512
  409538:	push   edi
  409539:	mov    dh,BYTE PTR [ebp-0x51]
  40953c:	mov    al,ds:0x9e8712b4
  409541:	aaa    
  409542:	idiv   DWORD PTR [ebx-0x2d]
  409545:	cwde   
  409546:	mov    BYTE PTR [ebp-0x76],bh
  409549:	fimul  DWORD PTR [esi]
  40954b:	test   eax,0xd5d21e7f
  409550:	dec    edx
  409551:	mov    bh,0xbd
  409553:	xchg   ebp,eax
  409554:	sti    
  409555:	out    0xf,al
  409557:	mov    al,ds:0x75caa9d5
  40955c:	in     al,dx
  40955d:	add    edx,ecx
  40955f:	pop    eax
  409560:	outs   dx,DWORD PTR ds:[esi]
  409561:	add    al,0xb9
  409563:	bound  ebp,QWORD PTR [ebx-0x41]
  409566:	sbb    al,0xb2
  409568:	cld    
  409569:	xor    eax,edx
  40956b:	mov    dh,0x66
  40956d:	dec    ebp
  40956e:	ret    0x53d1
  409571:	in     eax,0xc4
  409573:	or     al,0x23
  409575:	fld    QWORD PTR [esi+0x4]
  409578:	mov    ecx,0x6ac676c8
  40957d:	(bad)  
  40957e:	loop   0x40953e
  409580:	xchg   ebp,eax
  409581:	inc    esp
  409582:	jmp    0x1452f034
  409587:	out    0x53,al
  409589:	repnz in eax,dx
  40958b:	in     eax,0x44
  40958d:	jmp    0xbe31:0xe2a5e8eb
  409594:	lods   eax,DWORD PTR ds:[esi]
  409595:	cld    
  409596:	pop    esi
  409597:	es ins BYTE PTR es:[edi],dx
  409599:	jg     0x409558
  40959b:	inc    ebx
  40959c:	xor    ebx,ebp
  40959e:	mov    edi,0xd9bace76
  4095a3:	mov    ah,0x7a
  4095a5:	pop    eax
  4095a6:	mov    ch,0x53
  4095a8:	and    BYTE PTR [edx-0x56e849c0],dl
  4095ae:	inc    esi
  4095af:	xlat   BYTE PTR ds:[ebx]
  4095b0:	pop    es
  4095b1:	add    ebp,DWORD PTR [edx]
  4095b3:	sti    
  4095b4:	and    eax,0x76d433e7
  4095b9:	push   ecx
  4095ba:	aas    
  4095bb:	pop    ebx
  4095bc:	cmp    al,0x79
  4095be:	out    dx,al
  4095bf:	loop   0x40958e
  4095c1:	add    BYTE PTR [edi+0x5a82eef8],al
  4095c7:	sete   BYTE PTR [eax+0x4f]
  4095cb:	aam    0x6e
  4095cd:	rol    DWORD PTR [edx-0x315aa022],0xe3
  4095d4:	lock fmul QWORD PTR [ebx]
  4095d7:	mov    dh,0x97
  4095d9:	or     ecx,DWORD PTR [edi-0x548c83f5]
  4095df:	cmp    eax,0xe037251d
  4095e4:	loopne 0x4095b0
  4095e6:	push   edx
  4095e7:	fimul  WORD PTR [eax-0x1a0a9338]
  4095ed:	dec    edx
  4095ee:	inc    esi
  4095ef:	mov    ds:0xe7248748,eax
  4095f4:	and    eax,0xd176fb53
  4095f9:	add    DWORD PTR [edi+0x7d3dce59],edx
  4095ff:	lahf   
  409600:	push   ds
  409601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409602:	inc    eax
  409603:	inc    ebx
  409604:	cdq    
  409605:	ss iret 
  409607:	xchg   esi,eax
  409608:	retf   0xd743
  40960b:	arpl   WORD PTR [eax],di
  40960d:	mov    ecx,0x48fab714
  409612:	pop    edi
  409613:	mov    eax,ds:0xc7e817b1
  409618:	sbb    dl,bh
  40961a:	mov    esp,0x154848b8
  40961f:	test   ebx,0x25c7f15
  409625:	aam    0x7e
  409627:	pmaxub mm2,QWORD PTR [eax+eax*2+0x0]
  40962c:	rol    DWORD PTR fs:[edx],1
  40962f:	(bad)  
  409630:	jae    0x409622
  409632:	in     al,0xf6
  409634:	cmp    BYTE PTR [edi-0x3ce8cd38],dh
  40963a:	imul   esi,DWORD PTR [edx+0x19],0xd4187fb7
  409641:	or     esp,edx
  409643:	das    
  409644:	jmp    0x2b2deb9e
  409649:	mov    dh,0x42
  40964b:	icebp  
  40964c:	lods   eax,DWORD PTR ds:[esi]
  40964d:	(bad)  
  40964e:	adc    eax,0x61627e17
  409653:	pop    esi
  409654:	jge    0x409664
  409656:	test   DWORD PTR [ebp*1+0x225db409],ebp
  40965d:	into   
  40965e:	out    dx,eax
  40965f:	leave  
  409660:	ss (bad) 
  409662:	dec    ebp
  409663:	push   edi
  409664:	outs   dx,DWORD PTR ds:[esi]
  409665:	push   ds
  409666:	fwait
  409667:	or     dl,bl
  409669:	jmp    0xe7427979
  40966e:	xlat   BYTE PTR ds:[ebx]
  40966f:	mov    ?,WORD PTR [edi+edx*8]
  409672:	dec    edi
  409673:	xor    ah,BYTE PTR ds:0x7519e5d7
  409679:	mov    edx,0x3f0fb248
  40967e:	out    0x31,al
  409680:	shr    dl,1
  409682:	mov    ebx,0x94c3ac80
  409687:	and    bl,BYTE PTR ss:[eax]
  40968a:	xor    ebp,0x5f
  40968d:	pop    ebp
  40968e:	arpl   WORD PTR [edx*2+0x70c4d638],bx
  409695:	test   DWORD PTR [ebx-0x53],eax
  409698:	cmp    al,0xcd
  40969a:	pop    ds
  40969b:	jl     0x40964f
  40969d:	xor    DWORD PTR [edx+0x21],ecx
  4096a0:	test   DWORD PTR [esi+0x74],0xe6e32924
  4096a7:	fimul  WORD PTR ss:[ebx+ebx*8+0x8e59251]
  4096af:	lods   eax,DWORD PTR ds:[esi]
  4096b0:	loopne 0x409721
  4096b2:	jg     0x409646
  4096b4:	mov    eax,0xbbc000e2
  4096b9:	je     0x40971c
  4096bb:	xchg   ecx,eax
  4096bc:	sbb    DWORD PTR [esp+eax*1+0x53],0xc0db254e
  4096c4:	adc    eax,DWORD PTR ds:0x6e14ca56
  4096ca:	cld    
  4096cb:	xor    ebx,DWORD PTR [edx+0x5b]
  4096ce:	mov    ebp,0x6c38caf6
  4096d3:	(bad)  
  4096d4:	es push esp
  4096d6:	dec    ebp
  4096d7:	cmp    BYTE PTR [ecx-0x5b],bl
  4096da:	mov    dl,0xa7
  4096dc:	lock jp 0x4096c9
  4096df:	dec    esp
  4096e0:	xchg   esi,eax
  4096e1:	sbb    esi,DWORD PTR [ecx+0x6d72bf56]
  4096e7:	sbb    eax,0x30438927
  4096ec:	jmp    0x8e53:0x79f47e0
  4096f3:	out    0xf1,eax
  4096f5:	xchg   edx,eax
  4096f6:	(bad)  
  4096f8:	ins    BYTE PTR es:[edi],dx
  4096f9:	ds es push es
  4096fc:	arpl   WORD PTR [esi+0x2b],dx
  4096ff:	daa    
  409700:	jnp    0x4096de
  409702:	pushf  
  409703:	aam    0x15
  409705:	dec    ebp
  409706:	add    al,0x13
  409708:	add    BYTE PTR [esi],0x9d
  40970b:	mov    dh,0x60
  40970d:	mov    bl,0xe7
  40970f:	ret    0xd9de
  409712:	pushf  
  409713:	rol    BYTE PTR [esi-0x1d6b2b11],cl
  409719:	fsub   DWORD PTR [ecx+0x5ff919bf]
  40971f:	xlat   BYTE PTR ds:[ebx]
  409720:	mov    es,ebp
  409722:	cli    
  409723:	jmp    0xb3d3:0x296281d1
  40972a:	add    al,0xc1
  40972c:	jo     0x40971b
  40972e:	push   DWORD PTR [edi-0x4]
  409731:	imul   ebx,DWORD PTR [edi+0x41],0xd
  409735:	xchg   ebx,eax
  409736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409737:	popa   
  409738:	add    al,0x60
  40973a:	addr16 push edi
  40973c:	mov    ch,0x14
  40973e:	cwde   
  40973f:	push   ds
  409740:	dec    ebp
  409741:	mov    bl,0x82
  409743:	pop    ecx
  409744:	push   esi
  409745:	dec    ebp
  409746:	mov    dh,0x83
  409748:	cdq    
  409749:	outs   dx,DWORD PTR ds:[esi]
  40974a:	adc    eax,edi
  40974c:	outs   dx,DWORD PTR ds:[esi]
  40974d:	mov    esi,0x8e15e905
  409752:	cli    
  409753:	xchg   esp,eax
  409754:	push   edx
  409755:	dec    edi
  409756:	adc    cl,al
  409758:	sub    eax,0xb87311a3
  40975d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40975e:	inc    eax
  40975f:	test   BYTE PTR [ebp-0xd46df51],ah
  409765:	pushf  
  409766:	jae    0x4097da
  409768:	bound  ebx,QWORD PTR [ebx]
  40976a:	data16 loope 0x409746
  40976d:	fwait
  40976e:	xlat   BYTE PTR ds:[ebx]
  40976f:	jg     0x40973a
  409771:	into   
  409772:	lea    ebx,[ecx+ebx*4+0xe5deed1]
  409779:	loop   0x4097f4
  40977b:	push   es
  40977c:	push   0xffffffe2
  40977e:	mul    BYTE PTR [ebp+0x6c12bb53]
  409784:	jo     0x4097d4
  409786:	lahf   
  409787:	pop    esp
  409788:	int3   
  409789:	dec    edi
  40978a:	and    esp,DWORD PTR [ebp-0x26]
  40978d:	das    
  40978e:	test   BYTE PTR [ecx-0x59d17e33],ch
  409794:	push   es
  409795:	mov    al,0xe4
  409797:	mov    ecx,0x3cf4e564
  40979c:	pop    ebx
  40979d:	jge    0x40976f
  40979f:	add    eax,ebx
  4097a1:	pop    esi
  4097a2:	sbb    BYTE PTR [esi-0x796dc7a2],al
  4097a8:	dec    edi
  4097a9:	lods   eax,DWORD PTR ds:[esi]
  4097aa:	stos   DWORD PTR es:[edi],eax
  4097ab:	jg     0x409773
  4097ad:	das    
  4097ae:	in     eax,dx
  4097af:	dec    eax
  4097b0:	xlat   BYTE PTR ds:[ebx]
  4097b1:	fmul   st(7),st
  4097b3:	pushf  
  4097b4:	inc    esp
  4097b5:	ret    
  4097b6:	sbb    ebp,DWORD PTR [eax-0x3b]
  4097b9:	mov    edx,0x7c751ae9
  4097be:	(bad)  
  4097bf:	mov    ds:0x9c652e62,eax
  4097c4:	push   edx
  4097c5:	ret    
  4097c6:	mov    dh,0x6
  4097c8:	outs   dx,BYTE PTR ds:[esi]
  4097c9:	mov    eax,0x44e2ffea
  4097ce:	push   edi
  4097cf:	mov    ?,edx
  4097d1:	mov    esi,0xab7786e4
  4097d6:	push   ecx
  4097d7:	pop    es
  4097d8:	sahf   
  4097d9:	pop    ebx
  4097da:	shl    BYTE PTR [ebp-0x5efedaba],1
  4097e0:	xchg   ecx,eax
  4097e1:	or     BYTE PTR [ebx+ebx*8],cl
  4097e4:	adc    BYTE PTR [edi],al
  4097e6:	mov    eax,ds:0xdecb0b2a
  4097eb:	mov    DWORD PTR [eax],esi
  4097ed:	jecxz  0x4097aa
  4097ef:	icebp  
  4097f0:	fwait
  4097f1:	jo     0x4097dd
  4097f3:	cmp    al,0xf2
  4097f5:	sti    
  4097f6:	nop
  4097f7:	sbb    BYTE PTR [ecx],dl
  4097f9:	neg    DWORD PTR [edx-0x5ed93393]
  4097ff:	cmp    ecx,esp
  409801:	push   es
  409802:	nop
  409803:	out    0x8b,al
  409805:	test   al,0xa8
  409807:	out    dx,al
  409808:	jnp    0x40982a
  40980a:	(bad)  
  40980b:	mov    eax,0xcb705b5b
  409810:	dec    eax
  409811:	repz out 0xfe,eax
  409814:	jns    0x40981e
  409816:	je     0x4097cf
  409818:	test   BYTE PTR [edx-0x65],dl
  40981b:	dec    ebx
  40981c:	in     al,dx
  40981d:	ret    0xbb5b
  409820:	mov    ecx,0xdcce4ba
  409825:	cwde   
  409826:	adc    al,0x8b
  409828:	adc    DWORD PTR [ebp+0x49],ebp
  40982b:	jo     0x40980e
  40982d:	sub    esi,0xffffffb5
  409830:	loope  0x409872
  409832:	mov    ebp,0xeda8bf9b
  409837:	xor    DWORD PTR [edi],0xffffffe1
  40983a:	dec    esi
  40983b:	inc    ebp
  40983c:	fimul  DWORD PTR [edx-0x51]
  40983f:	sbb    DWORD PTR [edi-0x57],ecx
  409842:	nop
  409843:	(bad)  
  409844:	jp     0x409843
  409846:	or     ebp,DWORD PTR [edx+0x79f86296]
  40984c:	pop    edx
  40984d:	sub    eax,0x8581336
  409852:	gs inc esp
  409854:	xchg   BYTE PTR [edx],cl
  409856:	shl    DWORD PTR [edx-0x167cc7ae],cl
  40985c:	mov    esi,DWORD PTR [ebp+0x68608a82]
  409862:	adc    DWORD PTR [ebp+0x10],ebx
  409865:	test   al,0x1
  409867:	ja     0x409877
  409869:	scas   al,BYTE PTR es:[edi]
  40986a:	jns    0x4098ad
  40986c:	scas   al,BYTE PTR es:[edi]
  40986d:	sahf   
  40986e:	xor    DWORD PTR [edi+0x5c],edi
  409871:	iret   
  409872:	cld    
  409873:	and    esi,DWORD PTR ds:0xc5b26bf9
  409879:	and    eax,0xc5841295
  40987e:	ins    DWORD PTR es:[edi],dx
  40987f:	lea    esp,[edi+ebx*8]
  409882:	enter  0xac25,0x61
  409886:	daa    
  409887:	jp     0x40984c
  409889:	and    edi,DWORD PTR [edi+ebx*4]
  40988c:	cli    
  40988d:	icebp  
  40988e:	push   ds
  40988f:	retf   0xe896
  409892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409893:	cs mov cl,0x7c
  409896:	cmp    BYTE PTR [esi],ah
  409898:	fisub  WORD PTR [ebx]
  40989a:	inc    ebp
  40989b:	ss mov al,0xbe
  40989e:	imul   ebp,edi,0xffffffc7
  4098a1:	xchg   BYTE PTR ds:0x4cf82159,ch
  4098a7:	push   ecx
  4098a8:	test   DWORD PTR [ebp+0x350fa751],edx
  4098ae:	pop    edx
  4098af:	retf   
  4098b0:	ins    DWORD PTR es:[edi],dx
  4098b1:	in     al,0xd3
  4098b3:	imul   edi,DWORD PTR [esi],0xa2735af8
  4098b9:	scas   eax,DWORD PTR es:[edi]
  4098ba:	jecxz  0x40986b
  4098bc:	repnz xchg ecx,eax
  4098be:	or     esi,DWORD PTR [edi-0x54b40db3]
  4098c4:	pop    esp
  4098c5:	loope  0x409864
  4098c7:	ret    
  4098c8:	cli    
  4098c9:	push   0xfffffff0
  4098cb:	scas   al,BYTE PTR es:[edi]
  4098cc:	adc    eax,0xb3187408
  4098d1:	ins    BYTE PTR es:[edi],dx
  4098d2:	icebp  
  4098d3:	sub    al,0x45
  4098d5:	push   eax
  4098d6:	and    BYTE PTR [ebp+0x8],cl
  4098d9:	cli    
  4098da:	jae    0x4098eb
  4098dc:	hlt    
  4098dd:	jge    0x40985f
  4098df:	iret   
  4098e0:	js     0x40994b
  4098e2:	cwde   
  4098e3:	mov    cl,BYTE PTR [edx+0x79]
  4098e6:	push   esp
  4098e7:	loope  0x40990d
  4098e9:	jle    0x409894
  4098eb:	sbb    eax,edi
  4098ed:	sbb    DWORD PTR [ecx],edx
  4098ef:	int    0xc
  4098f1:	arpl   WORD PTR [edx+0x52],di
  4098f4:	xchg   ebx,eax
  4098f5:	dec    edi
  4098f6:	popf   
  4098f7:	jp     0x4098c7
  4098f9:	adc    ch,BYTE PTR [eax-0x7d349dc2]
  4098ff:	jp     0x409893
  409901:	add    BYTE PTR [ebp+eiz*8-0x5e],0xaf
  409906:	retf   
  409907:	adc    al,0x80
  409909:	ss and al,0x5c
  40990c:	stos   BYTE PTR es:[edi],al
  40990d:	fsub   DWORD PTR [ebx+0x2d2d87cc]
  409913:	sub    eax,DWORD PTR [ecx-0x3a]
  409916:	stos   BYTE PTR es:[edi],al
  409917:	fidiv  WORD PTR [edx]
  409919:	xor    ecx,DWORD PTR [eax]
  40991b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40991c:	and    DWORD PTR [eax+0x58],edx
  40991f:	add    esi,DWORD PTR [ebp-0xc]
  409922:	sbb    eax,0xe3ebaf6
  409927:	mov    eax,0x37f835a5
  40992c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40992d:	loop   0x409908
  40992f:	ds jnp 0x4098da
  409932:	mov    esi,0x699e57ab
  409937:	fwait
  409938:	mov    ebx,0xdb1ce6b2
  40993d:	sub    eax,0x3916c28e
  409942:	fsubr  DWORD PTR [edi+0x1e]
  409945:	dec    esi
  409946:	push   ecx
  409947:	inc    edx
  409948:	cld    
  409949:	test   eax,0x130acb1
  40994e:	adc    BYTE PTR [esi-0x19047a4a],ah
  409954:	push   esp
  409955:	push   edi
  409956:	ds jne 0x409948
  409959:	xor    ah,BYTE PTR [ebx-0x1b]
  40995c:	gs sti 
  40995e:	add    BYTE PTR [eax],ch
  409960:	icebp  
  409961:	or     eax,0xd1b1232
  409966:	mov    eax,ds:0xbfaf7f63
  40996b:	inc    BYTE PTR [edx]
  40996d:	call   0x59d78ef8
  409972:	jecxz  0x409901
  409974:	test   cl,0x0
  409977:	jo     0x4099c0
  409979:	shl    BYTE PTR [edx],cl
  40997b:	fiadd  DWORD PTR [edx-0x27a90ee7]
  409981:	(bad)  
  409982:	mov    ecx,?
  409984:	fld    TBYTE PTR [ebx+0x3fe3b1e]
  40998a:	jno    0x4099d2
  40998c:	push   eax
  40998d:	aaa    
  40998e:	clc    
  40998f:	push   cs
  409990:	jp     0x40995c
  409992:	dec    edx
  409993:	push   ecx
  409994:	xchg   DWORD PTR [esi+edx*1+0x8883cb8],edx
  40999b:	or     eax,0x8388a22d
  4099a0:	sahf   
  4099a1:	dec    edi
  4099a2:	test   BYTE PTR [ecx],dl
  4099a4:	in     eax,dx
  4099a5:	dec    esp
  4099a6:	push   0x3586015f
  4099ab:	mov    al,ds:0x32fb66e0
  4099b0:	mov    bh,cl
  4099b2:	mov    esp,0xdd665900
  4099b7:	cmp    DWORD PTR [edi-0x1f],eax
  4099ba:	cmp    BYTE PTR [eax-0x3edde832],al
  4099c0:	pop    esp
  4099c1:	mov    al,es:0xb4269738
  4099c7:	mov    eax,0x7f022015
  4099cc:	in     eax,0x4f
  4099ce:	inc    eax
  4099cf:	retf   0x2570
  4099d2:	in     al,dx
  4099d3:	retf   0x4551
  4099d6:	ror    BYTE PTR [eax-0xf8fbe19],cl
  4099dc:	mov    esp,0xeb16c515
  4099e1:	sbb    DWORD PTR [edx],eax
  4099e3:	mov    edx,DWORD PTR [ecx]
  4099e5:	nop
  4099e6:	mov    eax,0x80645150
  4099eb:	cmp    al,ah
  4099ed:	dec    edi
  4099ee:	and    cl,cl
  4099f0:	test   al,0xd1
  4099f2:	mov    BYTE PTR [eax+0x501d6534],ch
  4099f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099f9:	cmp    al,0xcc
  4099fb:	inc    edx
  4099fc:	xor    ebp,ecx
  4099fe:	mov    esi,0xe3c9f8c5
  409a03:	test   DWORD PTR [ecx],0xfd77417e
  409a09:	jb     0x409a7f
  409a0b:	fiadd  DWORD PTR [eax]
  409a0d:	add    BYTE PTR [ebx+eax*1],dh
  409a10:	inc    ebx
  409a11:	fwait
  409a12:	push   ss
  409a13:	sub    DWORD PTR ds:0x326c7a7c,0x5b3c4cc2
  409a1d:	pop    ebx
  409a1e:	mov    DWORD PTR [ebp-0x2a6cf943],ebx
  409a24:	ficomp WORD PTR [ebx]
  409a26:	int3   
  409a27:	shl    BYTE PTR [edi+0x79],0x1
  409a2b:	xchg   ebp,eax
  409a2c:	aaa    
  409a2d:	nop
  409a2e:	retf   0xe9c2
  409a31:	pop    eax
  409a32:	repz cmp BYTE PTR [esi],dl
  409a35:	aam    0xc9
  409a37:	jmp    0xb3bb:0x90a12b62
  409a3e:	idiv   DWORD PTR [eax+0x67]
  409a41:	jno    0x409a91
  409a43:	xchg   ebx,eax
  409a44:	push   esp
  409a45:	addr16 mov ds:0x11cd,al
  409a49:	ds inc edx
  409a4b:	jp     0x4099da
  409a4d:	les    edi,FWORD PTR [edx+ecx*2-0x3bd4954b]
  409a54:	loopne 0x409a0d
  409a56:	mov    ch,0x30
  409a58:	push   ebx
  409a59:	pop    edx
  409a5a:	push   0x13
  409a5c:	inc    edi
  409a5d:	and    esp,DWORD PTR [eax-0x68]
  409a60:	jg     0x409a81
  409a62:	sbb    edx,DWORD PTR [esp+eax*8-0x47]
  409a66:	loopne 0x409a7f
  409a68:	dec    ecx
  409a69:	xchg   esp,eax
  409a6a:	out    0xa9,al
  409a6c:	dec    esi
  409a6d:	and    dl,ah
  409a6f:	jb     0x409abc
  409a71:	adc    cl,al
  409a73:	xor    DWORD PTR [esi],ebp
  409a75:	(bad)  
  409a76:	cmp    eax,0x5566f820
  409a7b:	jecxz  0x409a5d
  409a7d:	pop    eax
  409a7e:	pop    edi
  409a7f:	(bad)  
  409a80:	sti    
  409a81:	or     DWORD PTR [eax],esp
  409a83:	(bad)  
  409a84:	and    ebp,eax
  409a86:	dec    ebp
  409a87:	fnstsw WORD PTR [ebp+0x115c2b1e]
  409a8d:	loope  0x409a88
  409a8f:	ins    BYTE PTR es:[edi],dx
  409a90:	sbb    eax,DWORD PTR [edi+edi*1+0x36]
  409a94:	or     DWORD PTR [esi-0x4a3b51ee],edi
  409a9a:	das    
  409a9b:	dec    ecx
  409a9c:	or     bh,0xaa
  409a9f:	mov    eax,DWORD PTR [ebx]
  409aa1:	call   0x2a46:0x8558d94
  409aa8:	mov    ah,0xc3
  409aaa:	dec    edx
  409aab:	fdivr  QWORD PTR [ecx-0x6128f7b]
  409ab1:	ret    0xf5cd
  409ab4:	jge    0x409af7
  409ab6:	inc    edi
  409ab7:	xchg   BYTE PTR [ebx],bl
  409ab9:	sbb    ecx,edi
  409abb:	xchg   edx,eax
  409abc:	stos   DWORD PTR es:[edi],eax
  409abd:	and    al,0x57
  409abf:	xchg   dh,bl
  409ac1:	aad    0xcd
  409ac3:	adc    ah,BYTE PTR [edx+eiz*8]
  409ac6:	sahf   
  409ac7:	cs ss xchg esp,eax
  409aca:	sbb    DWORD PTR [ecx-0x53],0xe3ae9d4e
  409ad1:	mov    esp,ebp
  409ad3:	sub    eax,0x5ba8f5ac
  409ad8:	sahf   
  409ad9:	cli    
  409ada:	int3   
  409adb:	ins    BYTE PTR es:[edi],dx
  409adc:	inc    ecx
  409add:	or     BYTE PTR [ecx+0x22bb3b06],ch
  409ae3:	adc    DWORD PTR [esi-0x71881c56],ebx
  409ae9:	dec    eax
  409aea:	(bad)  
  409aeb:	(bad)  
  409aec:	cmp    ecx,esi
  409aee:	outs   dx,DWORD PTR ds:[esi]
  409aef:	mov    edi,0xf974d216
  409af4:	jo     0x409b5c
  409af6:	rol    edi,1
  409af8:	pop    esi
  409af9:	pop    ds
  409afa:	xor    eax,0x52f743a9
  409aff:	bound  esp,QWORD PTR [edi+0x1c]
  409b02:	(bad)  
  409b03:	cmp    ch,ah
  409b05:	test   al,0x73
  409b07:	mov    bl,0x9d
  409b09:	or     dh,ch
  409b0b:	mov    ebp,0x2c9796d7
  409b10:	retf   
  409b11:	xchg   esp,eax
  409b12:	sbb    DWORD PTR [eax-0x4ccbbf5a],edi
  409b18:	inc    ecx
  409b19:	xchg   ebx,eax
  409b1a:	pop    es
  409b1b:	mov    ebp,0xe7a9dbc3
  409b20:	jo     0x409b74
  409b22:	mov    eax,0xf6fa4246
  409b27:	or     eax,DWORD PTR [eax-0x10e351c7]
  409b2d:	or     esi,DWORD PTR [eax+0x5128ad0c]
  409b33:	int    0xda
  409b35:	in     al,0x26
  409b37:	inc    ecx
  409b38:	aad    0x66
  409b3a:	stos   DWORD PTR es:[edi],eax
  409b3b:	mov    ebx,DWORD PTR [ebp-0x303c5eff]
  409b41:	jbe    0x409b25
  409b43:	jb     0x409b64
  409b45:	pop    ecx
  409b46:	sbb    bh,BYTE PTR [ebp-0x50cd289]
  409b4c:	popa   
  409b4d:	cmp    al,0x79
  409b4f:	xor    edi,0x42
  409b52:	or     al,0x53
  409b54:	in     al,0x9c
  409b56:	dec    ebx
  409b57:	pushf  
  409b58:	(bad)
  409b5d:	push   cs
  409b5e:	repz cmp eax,0x257a31f2
  409b64:	dec    ebp
  409b65:	loop   0x409bc5
  409b67:	jmp    0x7f1d:0x9f7ddcd9
  409b6e:	or     ah,dh
  409b70:	xchg   ebp,eax
  409b71:	in     al,dx
  409b72:	shl    DWORD PTR [esi+edi*1+0x2ce1530b],0x95
  409b7a:	xchg   ebp,eax
  409b7b:	sbb    BYTE PTR [eax],bh
  409b7d:	es dec esi
  409b7f:	ins    BYTE PTR es:[edi],dx
  409b80:	xor    edi,ecx
  409b82:	xchg   edi,eax
  409b83:	mov    edx,eax
  409b85:	test   al,0xe7
  409b87:	mov    bl,0xb1
  409b89:	and    al,0x4e
  409b8b:	std    
  409b8c:	sub    bl,BYTE PTR [ebp+0x15eb4a07]
  409b92:	jg     0x409b23
  409b94:	(bad)  
  409b95:	mov    ds:0x2eb8a3ec,eax
  409b9a:	pop    ebp
  409b9b:	xor    dl,dh
  409b9d:	test   esi,edx
  409b9f:	arpl   WORD PTR [ecx+0x76526a1c],bp
  409ba5:	and    BYTE PTR [edi+esi*1-0x451d2b48],0xe5
  409bad:	add    ch,BYTE PTR [eax-0x64]
  409bb0:	daa    
  409bb1:	ss das 
  409bb3:	cwde   
  409bb4:	out    0x40,eax
  409bb6:	mov    WORD PTR [eax],ss
  409bb8:	sbb    bh,BYTE PTR [edi]
  409bba:	xchg   edx,eax
  409bbb:	rcr    DWORD PTR [ebp+ebx*8-0x40],1
  409bbf:	mov    edi,DWORD PTR [edx]
  409bc1:	ja     0x409b65
  409bc3:	xor    edx,ecx
  409bc5:	ror    BYTE PTR [eax+0x1],0xac
  409bc9:	sub    ch,bh
  409bcb:	push   ecx
  409bcc:	repnz cmp bl,BYTE PTR [edi+0x7db34953]
  409bd3:	push   cs
  409bd4:	fstp   st(5)
  409bd6:	lock stos BYTE PTR es:[edi],al
  409bd8:	sahf   
  409bd9:	(bad)  
  409bda:	out    0x57,eax
  409bdc:	mov    bh,0xd7
  409bde:	and    BYTE PTR [ecx-0x6f],cl
  409be1:	push   esp
  409be2:	xor    dl,BYTE PTR [ebp-0x275a1e05]
  409be8:	adc    bh,dl
  409bea:	into   
  409beb:	add    BYTE PTR [esi+0x2b12aed8],bl
  409bf1:	pop    ebx
  409bf2:	jle    0x409bd0
  409bf4:	(bad)  
  409bf5:	les    edx,FWORD PTR [edi-0x62]
  409bf8:	jae    0x409bc2
  409bfa:	lds    esp,FWORD PTR [ebp+0x27dd7579]
  409c00:	daa    
  409c01:	add    dh,BYTE PTR [ebx+eiz*8-0x17c8e991]
  409c08:	jae    0x409ba4
  409c0a:	adc    esi,0x67
  409c0d:	and    eax,0x1503a2c8
  409c12:	lods   eax,DWORD PTR ds:[esi]
  409c13:	xor    al,dh
  409c15:	sahf   
  409c16:	mov    al,0xbd
  409c18:	lds    ebp,FWORD PTR [ebx]
  409c1a:	inc    ebx
  409c1b:	push   esp
  409c1c:	std    
  409c1d:	aad    0x2f
  409c1f:	cld    
  409c20:	adc    eax,0xcdb5d810
  409c25:	adc    DWORD PTR [ebx-0x48],edx
  409c28:	mov    ebp,0x61436184
  409c2d:	mov    dl,0xd2
  409c2f:	jne    0x409c88
  409c31:	into   
  409c32:	out    0x4e,eax
  409c34:	fs int 0xaa
  409c37:	pop    ebp
  409c38:	into   
  409c39:	add    eax,0xb6208ad0
  409c3e:	shr    BYTE PTR [ebp-0x5e0a97b0],cl
  409c44:	and    BYTE PTR [edi+edi*2+0x2c1ff281],cl
  409c4b:	fsubr  QWORD PTR [edx]
  409c4d:	push   esp
  409c4e:	mov    bl,0x9c
  409c50:	das    
  409c51:	xchg   edi,eax
  409c52:	or     edx,DWORD PTR [edi+0x3c]
  409c55:	mov    ch,0xfc
  409c57:	dec    esp
  409c58:	pop    es
  409c59:	pusha  
  409c5a:	and    eax,0xa4e345e
  409c5f:	or     al,ah
  409c61:	xor    edx,DWORD PTR [edi-0x34593912]
  409c67:	jne    0x409c8c
  409c69:	popa   
  409c6a:	ins    BYTE PTR es:[edi],dx
  409c6b:	int3   
  409c6c:	stos   BYTE PTR es:[edi],al
  409c6d:	mul    DWORD PTR [edi+0x45]
  409c70:	sub    DWORD PTR [esi-0x56cae39b],0xffffffa2
  409c77:	cmc    
  409c78:	pushf  
  409c79:	lock loopne 0x409cd6
  409c7c:	scas   al,BYTE PTR es:[edi]
  409c7d:	mov    dl,BYTE PTR [edx]
  409c7f:	jmp    0x92b2:0x589b8173
  409c86:	mov    bl,0x44
  409c88:	ret    
  409c89:	push   0x9f6db5a
  409c8e:	out    0xe,al
  409c90:	cdq    
  409c91:	stc    
  409c92:	jle    0x409c1b
  409c94:	(bad)  
  409c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c96:	pop    ss
  409c97:	imul   esp,DWORD PTR [ebx+0x2f],0xffffffd7
  409c9b:	nop
  409c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c9d:	pop    es
  409c9e:	push   edi
  409c9f:	inc    ebx
  409ca0:	cmp    eax,0xd4cb515c
  409ca5:	mov    bl,0x30
  409ca7:	mov    al,ds:0xeccedf16
  409cac:	clc    
  409cad:	xchg   esp,eax
  409cae:	inc    edx
  409caf:	push   ds
  409cb0:	cmp    DWORD PTR gs:[ebx+0xd],ebp
  409cb4:	push   0x23
  409cb6:	outs   dx,DWORD PTR ds:[esi]
  409cb7:	mov    ebx,0xe002a75f
  409cbc:	call   0xafe9:0x236ebad8
  409cc3:	mov    BYTE PTR [ebp+0x26],0xd5
  409cc7:	fmul   DWORD PTR [edx+0x321be735]
  409ccd:	pop    es
  409cce:	stos   DWORD PTR es:[edi],eax
  409ccf:	jle    0x409c81
  409cd1:	or     eax,0x8ec68e01
  409cd6:	dec    edx
  409cd7:	and    eax,0x911d571c
  409cdc:	add    al,0x36
  409cde:	dec    esi
  409cdf:	jne    0x409c67
  409ce1:	ins    DWORD PTR es:[edi],dx
  409ce2:	in     eax,0x42
  409ce4:	mov    esi,0x45012868
  409ce9:	adc    edi,edi
  409ceb:	xchg   ebx,eax
  409cec:	xchg   edi,eax
  409ced:	push   ebx
  409cee:	(bad)  
  409cef:	out    0xc7,eax
  409cf1:	outs   dx,DWORD PTR ds:[esi]
  409cf2:	mov    ah,BYTE PTR [edi+eiz*2+0x3e4903a6]
  409cf9:	dec    ebx
  409cfa:	pop    edi
  409cfb:	cwde   
  409cfc:	test   al,0x35
  409cfe:	push   ss
  409cff:	ins    DWORD PTR es:[edi],dx
  409d00:	out    0xa3,al
  409d02:	repnz sbb BYTE PTR [esi+0x7e],al
  409d06:	(bad)  
  409d07:	fdiv   QWORD PTR [edi]
  409d09:	stos   BYTE PTR es:[edi],al
  409d0a:	mov    eax,0xe125ae9f
  409d0f:	cmp    bl,BYTE PTR [ebx+esi*2+0x3c]
  409d13:	inc    edi
  409d14:	push   edx
  409d15:	dec    ecx
  409d16:	mov    esi,0x8d9a938c
  409d1b:	jnp    0x409d49
  409d1d:	mov    dh,0x14
  409d1f:	mov    cl,0x9e
  409d21:	pop    ecx
  409d22:	test   eax,0xe5b9c711
  409d27:	loope  0x409cde
  409d29:	mov    fs,WORD PTR ds:0x33822a54
  409d2f:	ret    0xe68
  409d32:	inc    ebp
  409d33:	dec    eax
  409d34:	es xchg ebp,eax
  409d36:	and    BYTE PTR [edx+0x16edd382],bh
  409d3c:	sqrtps xmm3,XMMWORD PTR [eax-0x61]
  409d40:	mov    bl,0x7b
  409d42:	mov    dl,0x5a
  409d44:	je     0x409db5
  409d46:	addr16 dec ebx
  409d48:	repnz sbb DWORD PTR [edx],edx
  409d4b:	inc    edx
  409d4c:	cwde   
  409d4d:	xor    dl,BYTE PTR [eax]
  409d4f:	cmp    al,bl
  409d51:	stc    
  409d52:	jo     0x409d6a
  409d54:	lahf   
  409d55:	in     eax,0x28
  409d57:	cld    
  409d58:	jnp    0x409d20
  409d5a:	dec    eax
  409d5b:	fstp   QWORD PTR [eax-0x27fbaf08]
  409d61:	int3   
  409d62:	xchg   ebx,eax
  409d63:	sub    ah,BYTE PTR [ecx]
  409d65:	mov    cl,0xc8
  409d67:	repz mov eax,ds:0x83e61837
  409d6d:	sub    eax,0xa1b0764
  409d72:	jb     0x409d57
  409d74:	int    0xd9
  409d76:	(bad)  
  409d78:	xor    bl,BYTE PTR ds:0x3feee17f
  409d7e:	pop    ecx
  409d7f:	adc    ah,BYTE PTR [esi-0x802aa4f]
  409d85:	push   0x6af3ec9b
  409d8a:	out    0xe5,eax
  409d8c:	push   edx
  409d8d:	xor    ah,BYTE PTR [eax]
  409d8f:	sbb    ch,BYTE PTR [esi]
  409d91:	mov    ds:0xcc667a06,al
  409d96:	out    dx,eax
  409d97:	mov    edi,0x4ba70770
  409d9c:	xor    BYTE PTR [eax],bh
  409d9e:	pop    eax
  409d9f:	clc    
  409da0:	pop    esp
  409da1:	inc    edx
  409da2:	push   ebp
  409da3:	inc    eax
  409da4:	cmc    
  409da5:	sti    
  409da6:	mov    esi,0xa5dd349f
  409dab:	sub    DWORD PTR [ebx],edx
  409dad:	pop    edx
  409dae:	adc    DWORD PTR [ebp+0x7a],ebp
  409db1:	or     dh,ch
  409db3:	loop   0x409db8
  409db5:	adc    al,0xa8
  409db7:	or     DWORD PTR [eax+0x6633c3df],ebp
  409dbd:	cwde   
  409dbe:	imul   BYTE PTR [ebx+ecx*1]
  409dc1:	sub    ebp,eax
  409dc3:	jae    0x409dc0
  409dc5:	pop    es
  409dc6:	mov    ebx,0xea139943
  409dcb:	jne    0x409def
  409dcd:	fadd   DWORD PTR [ecx]
  409dcf:	mov    ds:0x8e911648,al
  409dd4:	pop    ebp
  409dd5:	test   al,0x60
  409dd7:	jnp    0x409da5
  409dd9:	push   cs
  409dda:	int3   
  409ddb:	lods   eax,DWORD PTR ds:[esi]
  409ddc:	js     0x409e35
  409dde:	mov    esp,es
  409de0:	xor    eax,edi
  409de2:	cmc    
  409de3:	mov    esp,DWORD PTR [edx+0x26c861bd]
  409de9:	sahf   
  409dea:	cmp    dh,BYTE PTR [edx-0x5b6e8b89]
  409df0:	dec    eax
  409df1:	sub    edx,DWORD PTR [eax+ebx*4-0x44]
  409df5:	and    bl,bl
  409df7:	fbld   TBYTE PTR [edi+0x10b39dc5]
  409dfd:	aad    0x23
  409dff:	cmp    ch,bh
  409e01:	xor    ecx,DWORD PTR [eax+eiz*2+0x66]
  409e05:	mov    ds:0x8701abb0,eax
  409e0a:	fs dec esi
  409e0c:	add    al,0xf7
  409e0e:	popa   
  409e0f:	and    DWORD PTR [edx],esi
  409e11:	pop    esp
  409e12:	push   0x732f359f
  409e17:	mov    ds:0xda2165e9,al
  409e1c:	retf   
  409e1d:	je     0x409daf
  409e1f:	push   edi
  409e20:	or     DWORD PTR [edi+0xa],edi
  409e23:	lods   al,BYTE PTR ds:[esi]
  409e24:	in     al,0xc1
  409e26:	inc    ebx
  409e27:	loope  0x409e9f
  409e29:	sbb    dh,ah
  409e2b:	mov    ds:0xee79e843,eax
  409e30:	paddw  mm6,mm1
  409e33:	sub    ebp,DWORD PTR [ebx-0x59]
  409e36:	(bad)  
  409e37:	pop    eax
  409e38:	dec    edi
  409e39:	sar    BYTE PTR [edx+0x5d13833f],0xe1
  409e40:	mov    edx,cs
  409e42:	jne    0x409deb
  409e44:	push   ebx
  409e45:	(bad)  
  409e46:	cli    
  409e47:	int3   
  409e48:	stos   DWORD PTR es:[edi],eax
  409e49:	inc    esi
  409e4a:	(bad)  
  409e4b:	jno    0x409e28
  409e4d:	sub    eax,0x9fdd34ff
  409e52:	jnp    0x409e04
  409e54:	std    
  409e55:	sbb    eax,0xa251fdb8
  409e5a:	mov    ebp,0xc4f3a15e
  409e5f:	call   0x9db7b4d0
  409e64:	repz mov dl,0x85
  409e67:	push   edx
  409e68:	arpl   ax,ax
  409e6a:	lea    esi,[eax-0x69]
  409e6d:	stos   DWORD PTR es:[edi],eax
  409e6e:	add    ebx,DWORD PTR [ecx+0x315dcf27]
  409e74:	cmp    dl,BYTE PTR [bx+di+0x5b]
  409e78:	inc    ebp
  409e79:	imul   esi,esp,0x2aec98b0
  409e7f:	or     ebp,DWORD PTR gs:[ebx+ebp*8+0x72]
  409e84:	and    dh,BYTE PTR [eax+0x7f0fd4f8]
  409e8a:	pop    ebx
  409e8b:	jecxz  0x409e59
  409e8d:	ret    
  409e8e:	and    edx,edx
  409e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e91:	dec    ebx
  409e92:	jg     0x409e2c
  409e94:	jno    0x409e57
  409e96:	les    ecx,FWORD PTR gs:[edx-0xe]
  409e9a:	sbb    eax,0x296154a8
  409e9f:	imul   esi,esi,0xfffffff0
  409ea2:	iret   
  409ea3:	and    DWORD PTR ds:0x7cb71201,ebp
  409ea9:	sbb    ch,dl
  409eab:	sub    DWORD PTR fs:[esi-0x77386fb4],edx
  409eb2:	mov    ecx,0xe6913ae3
  409eb7:	out    0xc2,eax
  409eb9:	psadbw mm0,QWORD PTR [ebp-0x39a943ee]
  409ec0:	fs jmp 0x409e5c
  409ec3:	repnz mov ah,0x4d
  409ec6:	loop   0x409ee3
  409ec8:	cs ret 
  409eca:	jl     0x409e55
  409ecc:	js     0x409eea
  409ece:	in     eax,0x2f
  409ed0:	sub    BYTE PTR [edx-0x27],dl
  409ed3:	cmp    edx,esp
  409ed5:	push   edx
  409ed6:	fld    DWORD PTR fs:[esi]
  409ed9:	inc    edx
  409eda:	mov    esi,0x8134a295
  409edf:	and    edx,DWORD PTR [ebp+0x7bb26c96]
  409ee5:	test   eax,0x43f8776c
  409eeb:	cmp    eax,0x9c84fb5d
  409ef0:	pop    es
  409ef1:	dec    edi
  409ef2:	mov    ecx,0x1e0b5a2b
  409ef7:	ja     0x409f11
  409ef9:	in     al,0x9c
  409efb:	clc    
  409efc:	push   DWORD PTR [esi]
  409efe:	or     edx,DWORD PTR [edx]
  409f00:	cli    
  409f01:	fwait
  409f02:	xchg   ecx,eax
  409f03:	jb     0x409f5e
  409f05:	jno    0x409ebc
  409f07:	add    eax,0xb05166c0
  409f0c:	sub    dl,al
  409f0e:	scas   al,BYTE PTR es:[edi]
  409f0f:	inc    edi
  409f10:	shr    BYTE PTR [ebp+0x61],cl
  409f13:	mov    esp,0x6cc84b22
  409f18:	xor    DWORD PTR [esi-0x7e],ecx
  409f1b:	loope  0x409ed3
  409f1d:	neg    DWORD PTR [ebp+0x6b]
  409f20:	xchg   BYTE PTR [edx-0x7c8bfda],bh
  409f26:	jns    0x409f78
  409f28:	xchg   esi,eax
  409f29:	shr    BYTE PTR [edx],0x54
  409f2c:	rcl    BYTE PTR [esi],cl
  409f2e:	mov    esp,0x6fe38ec2
  409f33:	fwait
  409f34:	test   eax,0xfbbec3ca
  409f39:	into   
  409f3a:	cmp    ebp,ebx
  409f3c:	jmp    0x409ec2
  409f3e:	push   edx
  409f3f:	add    dh,BYTE PTR [eax]
  409f41:	mov    bh,0x62
  409f43:	out    dx,al
  409f44:	jmp    0xdcba6c9d
  409f49:	cdq    
  409f4a:	jb     0x409fa3
  409f4c:	std    
  409f4d:	xchg   ecx,eax
  409f4e:	aad    0x71
  409f50:	and    BYTE PTR [edx+0x29],bh
  409f53:	mov    BYTE PTR [eax-0x6e],dh
  409f56:	push   edi
  409f57:	lea    ebp,[eax-0x2c]
  409f5a:	aaa    
  409f5b:	mov    WORD PTR [ebp+0x19df2582],es
  409f61:	js     0x409f3d
  409f63:	sbb    ecx,0x60ec18c1
  409f69:	mov    edx,0xbe5e8417
  409f6e:	dec    esp
  409f6f:	push   cs
  409f70:	iret   
  409f71:	mov    DWORD PTR [eax],esi
  409f73:	push   cs
  409f74:	scas   eax,DWORD PTR es:[edi]
  409f75:	test   eax,0x584da84
  409f7a:	cmp    ebx,0xffffffe3
  409f7d:	push   ebx
  409f7e:	mov    ds:0xe98b87ff,eax
  409f83:	imul   ebx,DWORD PTR [edi-0x603e52a1],0xffffffa0
  409f8a:	bound  eax,QWORD PTR [edx]
  409f8c:	stos   DWORD PTR es:[edi],eax
  409f8d:	dec    eax
  409f8e:	jg     0x409f30
  409f90:	fcom   DWORD PTR [ecx]
  409f92:	test   BYTE PTR [edi],ah
  409f94:	push   edx
  409f95:	add    DWORD PTR [ecx+0x8],esp
  409f98:	nop
  409f99:	pop    ds
  409f9a:	test   al,0xc6
  409f9c:	inc    ebx
  409f9d:	sub    esi,eax
  409f9f:	test   ecx,edi
  409fa1:	jns    0x409f6b
  409fa3:	into   
  409fa4:	xchg   esp,eax
  409fa5:	loop   0x409fb6
  409fa7:	mov    eax,0x8228301a
  409fac:	xchg   esi,eax
  409fad:	outs   dx,DWORD PTR ds:[esi]
  409fae:	mov    ah,0x68
  409fb0:	fwait
  409fb1:	adc    al,0xa0
  409fb3:	(bad)  
  409fb4:	in     eax,0x6f
  409fb6:	ss dec edi
  409fb8:	xor    BYTE PTR [eax],ch
  409fba:	mov    al,0x7f
  409fbc:	jp     0x40a035
  409fbe:	shr    BYTE PTR [eax+edi*8+0x77],0x25
  409fc3:	xchg   DWORD PTR [edx-0x296fc201],ecx
  409fc9:	xchg   ebx,eax
  409fca:	loop   0x409f84
  409fcc:	test   DWORD PTR [ecx+esi*4+0x65889016],ebx
  409fd3:	ins    BYTE PTR es:[edi],dx
  409fd4:	popa   
  409fd5:	(bad)  
  409fd6:	(bad)  
  409fd7:	jmp    0x38b4:0xb44d824c
  409fde:	sub    al,0x18
  409fe0:	(bad)  
  409fe2:	cdq    
  409fe3:	dec    edi
  409fe4:	jo     0x409fcd
  409fe6:	js     0x409fd4
  409fe8:	nop
  409fe9:	or     eax,0xd77671d4
  409fee:	push   edx
  409fef:	int3   
  409ff0:	xor    ah,BYTE PTR [edi]
  409ff2:	pushf  
  409ff3:	xor    eax,esp
  409ff5:	push   esi
  409ff6:	xchg   edx,eax
  409ff7:	push   edx
  409ff8:	add    ebx,DWORD PTR [eax]
  409ffa:	jmp    0x7d8c:0x8df6d770
  40a001:	retf   
  40a002:	xchg   BYTE PTR [edx],dl
  40a004:	push   edi
  40a005:	mov    fs,WORD PTR ds:0x350a6057
  40a00b:	movmskps edi,xmm0
  40a00e:	mov    BYTE PTR [esi],al
  40a010:	fidiv  DWORD PTR [ebp-0x910e292]
  40a016:	stos   BYTE PTR es:[edi],al
  40a017:	cld    
  40a018:	pop    esp
  40a019:	pop    edx
  40a01a:	push   edi
  40a01b:	sbb    eax,0xbcaf1c05
  40a020:	mov    BYTE PTR [ebx-0x72],0x1f
  40a024:	(bad)  
  40a025:	cmp    eax,0x8dd2e341
  40a02a:	dec    ecx
  40a02b:	dec    edi
  40a02c:	and    ch,cl
  40a02e:	enter  0x1eff,0xfb
  40a032:	and    eax,0xe6d267b
  40a037:	mov    edi,0xb806458c
  40a03c:	jb     0x409ff6
  40a03e:	inc    ebx
  40a03f:	mov    eax,0xdf313f10
  40a045:	lods   al,BYTE PTR ds:[esi]
  40a046:	dec    ecx
  40a047:	(bad)  
  40a048:	cmc    
  40a049:	repnz pop ecx
  40a04b:	and    al,0xd
  40a04d:	xor    DWORD PTR [esi+0xc],edx
  40a050:	mov    eax,ds:0x11eeb590
  40a055:	pop    edi
  40a056:	or     al,0x84
  40a058:	popf   
  40a059:	and    al,0xa3
  40a05b:	adc    al,0xbf
  40a05d:	add    eax,0x561a7511
  40a062:	dec    eax
  40a063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a064:	jle    0x40a08d
  40a066:	xor    cl,BYTE PTR [ebx-0x7e63cb25]
  40a06c:	or     eax,0x2210a9ea
  40a071:	retf   0x37f9
  40a074:	and    DWORD PTR ds:0x2945c251,ebp
  40a07a:	mov    cl,0xa6
  40a07c:	and    al,dh
  40a07e:	sbb    al,0x62
  40a080:	and    cl,BYTE PTR [eiz*1-0xeedbb2b]
  40a087:	rol    DWORD PTR [ecx-0x34bba450],cl
  40a08d:	jnp    0x40a0f2
  40a08f:	or     BYTE PTR [edx+eax*8-0x3d01be68],0x6b
  40a097:	xchg   edi,eax
  40a098:	in     al,dx
  40a099:	(bad)  
  40a09b:	mov    al,0x73
  40a09d:	sbb    esi,DWORD PTR [eax]
  40a09f:	pop    ss
  40a0a0:	xchg   ah,bh
  40a0a2:	das    
  40a0a3:	and    BYTE PTR [eax+0x64018688],al
  40a0a9:	jb     0x40a05a
  40a0ab:	adc    edx,ebp
  40a0ad:	ds cmp al,0x33
  40a0b0:	inc    ecx
  40a0b1:	popf   
  40a0b2:	or     ch,dl
  40a0b4:	inc    esp
  40a0b5:	popf   
  40a0b6:	fsubr  st,st(6)
  40a0b8:	mov    bh,0x8a
  40a0ba:	dec    edx
  40a0bb:	pushf  
  40a0bc:	mov    ecx,0xf99a9403
  40a0c1:	mov    bl,0x6a
  40a0c3:	or     BYTE PTR [edx+0x3c],bl
  40a0c6:	ret    
  40a0c7:	cmp    eax,0x4cef091b
  40a0cc:	test   edx,0xf8c4def
  40a0d2:	mov    al,ds:0x16c8a15
  40a0d7:	push   ebp
  40a0d8:	jp     0x40a082
  40a0da:	xchg   ebx,eax
  40a0db:	retf   0xa98
  40a0de:	push   ds
  40a0df:	jnp    0x40a14c
  40a0e1:	push   ebx
  40a0e2:	retf   0xa567
  40a0e5:	xor    bl,BYTE PTR [ebp-0x49064fc0]
  40a0eb:	in     al,0x79
  40a0ed:	data16 loope 0x40a144
  40a0f0:	mov    ah,0x67
  40a0f2:	pusha  
  40a0f3:	loope  0x40a079
  40a0f5:	out    0x79,eax
  40a0f7:	jmp    0x4f09:0xbea799e0
  40a0fe:	xchg   esi,eax
  40a0ff:	pop    ecx
  40a100:	fdivr  DWORD PTR [edi]
  40a102:	mov    BYTE PTR [edx-0x1f],bl
  40a105:	pop    ebx
  40a106:	jmp    0x40a176
  40a108:	fcmovnbe st,st(1)
  40a10a:	or     al,0x51
  40a10c:	cmp    al,0x75
  40a10e:	mov    ebp,0x7327c4c1
  40a113:	bound  edx,QWORD PTR [esi]
  40a115:	mov    al,ds:0x6e974790
  40a11a:	pop    ecx
  40a11b:	out    dx,eax
  40a11c:	mov    ch,dh
  40a11e:	test   esp,esi
  40a120:	inc    ecx
  40a121:	pop    edi
  40a122:	int3   
  40a123:	add    ch,BYTE PTR [ebp+esi*8+0x73a47832]
  40a12a:	paddd  mm0,QWORD PTR [edi]
  40a12d:	and    eax,0xe929758a
  40a132:	pusha  
  40a133:	sub    eax,0x29021868
  40a138:	cmp    eax,0xe3d9b9e5
  40a13d:	xchg   DWORD PTR [eax],ecx
  40a13f:	(bad)  
  40a140:	xor    bh,dh
  40a142:	repz clc 
  40a144:	ins    BYTE PTR es:[edi],dx
  40a145:	repnz add al,0x88
  40a148:	mov    bh,0x2b
  40a14a:	mov    BYTE PTR [esi-0x7f],ah
  40a14d:	ins    DWORD PTR es:[edi],dx
  40a14e:	xchg   BYTE PTR [ecx],al
  40a150:	stc    
  40a151:	cmp    eax,ebp
  40a153:	and    al,0xac
  40a155:	shl    BYTE PTR [edi],1
  40a157:	cmc    
  40a158:	push   0x623f473d
  40a15d:	out    dx,al
  40a15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a15f:	call   0x18b1a617
  40a164:	mov    esp,0x914d5605
  40a169:	mov    ch,0xba
  40a16b:	std    
  40a16c:	sub    eax,0x202e9c8b
  40a171:	push   esi
  40a172:	scas   eax,DWORD PTR es:[edi]
  40a173:	sbb    edi,DWORD PTR [ecx-0x79]
  40a176:	scas   al,BYTE PTR es:[edi]
  40a177:	cli    
  40a178:	jle    0x40a18a
  40a17a:	inc    esi
  40a17b:	call   0xe279e54a
  40a180:	cli    
  40a181:	and    ch,BYTE PTR [ebx-0x4b7fcdb9]
  40a187:	sub    al,0x2d
  40a189:	ret    
  40a18a:	mov    BYTE PTR [esi+ecx*1],0xae
  40a18e:	pop    esi
  40a18f:	sbb    eax,0xef339c96
  40a194:	pop    edx
  40a195:	gs (bad) 
  40a197:	fisttp DWORD PTR [ebp+0x74b77c48]
  40a19d:	shl    edi,0x3
  40a1a0:	adc    BYTE PTR [ecx+0x6d],0x82
  40a1a4:	jg     0x40a21a
  40a1a6:	cmp    ebx,DWORD PTR [ecx]
  40a1a8:	sub    al,0xc6
  40a1aa:	les    esi,FWORD PTR [ebx-0x20]
  40a1ad:	popf   
  40a1ae:	cmp    al,0xc8
  40a1b0:	pop    ecx
  40a1b1:	or     esi,eax
  40a1b3:	sbb    BYTE PTR fs:[eax+eax*1],ah
  40a1b7:	ror    DWORD PTR [ecx-0x7d],0x6e
  40a1bb:	or     bh,ah
  40a1bd:	lea    esi,[edi-0x34ee2c5b]
  40a1c3:	jne    0x40a183
  40a1c5:	loope  0x40a1bc
  40a1c7:	mov    edx,0xea1a5d87
  40a1cc:	nop
  40a1cd:	test   al,0x3c
  40a1cf:	jbe    0x40a1ee
  40a1d1:	(bad)  
  40a1d2:	fcom   QWORD PTR [ebp+0x14]
  40a1d5:	add    edx,DWORD PTR [edx]
  40a1d7:	mov    ah,0x2a
  40a1d9:	jmp    0xcc3d36f1
  40a1de:	pop    esp
  40a1df:	inc    ebp
  40a1e0:	repnz leave 
  40a1e2:	xchg   esp,eax
  40a1e3:	sub    BYTE PTR [ebp-0x53b39c7f],bh
  40a1e9:	shl    BYTE PTR [esi],0xbc
  40a1ec:	mov    DWORD PTR [esi],edi
  40a1ee:	clc    
  40a1ef:	sti    
  40a1f0:	lock call 0x3472f4a1
  40a1f6:	sbb    ah,BYTE PTR [edx]
  40a1f8:	adc    ebp,DWORD PTR [ecx+ecx*8-0x4d]
  40a1fc:	cmp    BYTE PTR [ebx],0xf0
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	mov    dh,0x58
  40a5ea:	in     al,dx
  40a5eb:	sti    
  40a5ec:	daa    
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	xchg   ebx,eax
  40a5f5:	fcom   QWORD PTR [edx-0x6cd8786e]
  40a5fb:	fcomp  DWORD PTR [esi]
  40a5fd:	inc    ebp
  40a5fe:	bound  esp,QWORD PTR [edi]
  40a600:	test   DWORD PTR [edx+0x44c1bc6e],eax
  40a606:	arpl   WORD PTR [ebp+0xe],ax
  40a609:	js     0x40a5aa
  40a60b:	test   ch,cl
  40a60d:	jge    0x40a5a4
  40a60f:	xchg   edx,eax
  40a610:	inc    edx
  40a611:	pop    esp
  40a612:	pop    esi
  40a613:	aaa    
  40a614:	fdivr  st(2),st
  40a616:	inc    ecx
  40a617:	mov    DWORD PTR [edi],ecx
  40a619:	pop    ds
  40a61a:	sbb    al,0xc5
  40a61c:	xchg   esp,eax
  40a61d:	stos   BYTE PTR es:[edi],al
  40a61e:	es add al,0xc2
  40a621:	retf   0x380
  40a624:	iret   
  40a625:	mov    gs,WORD PTR [ebx]
  40a627:	ss mov esi,0x922edbf
  40a62d:	imul   esi,DWORD PTR [edi+edi*4+0x4a],0x5f54ce60
  40a635:	push   eax
  40a636:	mov    al,0xa0
  40a638:	loope  0x40a63b
  40a63a:	sub    edi,eax
  40a63c:	xor    DWORD PTR [edx+ecx*1+0x7f],ecx
  40a640:	jg     0x40a5c3
  40a642:	and    esp,DWORD PTR [ecx]
  40a644:	push   ebx
  40a645:	ss push ebp
  40a647:	sbb    dh,ch
  40a649:	inc    esp
  40a64a:	movq   mm1,mm4
  40a64d:	sub    ebp,DWORD PTR [edi+0x73]
  40a650:	cld    
  40a651:	mov    dl,0x9b
  40a653:	test   eax,0x74d1037f
  40a658:	out    0xda,al
  40a65a:	es (bad) 
  40a65c:	lods   al,BYTE PTR ds:[esi]
  40a65d:	je     0x40a6d0
  40a65f:	or     cl,BYTE PTR [eax]
  40a661:	or     dl,0x43
  40a664:	sub    ch,al
  40a666:	dec    esi
  40a667:	cld    
  40a668:	pop    ecx
  40a669:	xchg   bl,cl
  40a66b:	mov    ebp,?
  40a66d:	mov    ebx,0x4e632f4a
  40a672:	retf   
  40a673:	js     0x40a69f
  40a675:	test   bh,al
  40a677:	stc    
  40a678:	pop    ebx
  40a679:	mov    al,0x6e
  40a67b:	shr    DWORD PTR [ecx-0x7b68a928],0x5a
  40a682:	sbb    DWORD PTR [edx],ecx
  40a684:	or     esi,esp
  40a686:	fbstp  TBYTE PTR [ecx+edx*2]
  40a689:	mov    ebx,DWORD PTR ds:0x4d73e802
  40a68f:	jmp    0x40a6a8
  40a691:	clc    
  40a692:	add    BYTE PTR [edi+0x6d320b91],ch
  40a698:	lods   eax,DWORD PTR ds:[esi]
  40a699:	dec    eax
  40a69a:	pop    es
  40a69b:	shl    ebp,cl
  40a69d:	ins    DWORD PTR es:[edi],dx
  40a69e:	pop    esp
  40a69f:	mov    edi,0x2c44e1aa
  40a6a4:	mov    bh,0xdd
  40a6a6:	mov    bl,0xaa
  40a6a8:	inc    esp
  40a6a9:	out    0xc2,eax
  40a6ab:	dec    esp
  40a6ac:	and    eax,DWORD PTR [ebp-0x29f7b03c]
  40a6b2:	jp     0x40a67f
  40a6b4:	and    eax,0xe091a02e
  40a6b9:	pop    esi
  40a6ba:	out    0x3a,al
  40a6bc:	std    
  40a6bd:	lds    esi,FWORD PTR [esi-0x3e]
  40a6c0:	mov    esp,0xeff6d1a0
  40a6c5:	jno    0x40a6ac
  40a6c7:	xlat   BYTE PTR ds:[ebx]
  40a6c8:	xchg   esp,eax
  40a6c9:	fsubr  DWORD PTR [ecx+0x15]
  40a6cc:	inc    eax
  40a6cd:	xchg   esp,eax
  40a6ce:	inc    ebp
  40a6cf:	lahf   
  40a6d0:	pusha  
  40a6d1:	xchg   edi,eax
  40a6d2:	sbb    al,0x93
  40a6d4:	dec    edi
  40a6d5:	push   ds
  40a6d6:	mov    ebx,0xe3be17e3
  40a6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6dc:	(bad)  
  40a6dd:	cmp    al,ah
  40a6df:	sbb    ecx,edi
  40a6e1:	and    al,0xe3
  40a6e3:	pop    eax
  40a6e4:	shr    BYTE PTR [edi-0x2b6af32b],cl
  40a6ea:	jmp    0xc7aa5b9d
  40a6ef:	xor    al,0xea
  40a6f1:	push   esi
  40a6f2:	mov    bh,0x3c
  40a6f4:	fisttp QWORD PTR [eax]
  40a6f6:	jp     0x40a6f2
  40a6f8:	mov    ah,0x9c
  40a6fa:	pop    esp
  40a6fb:	adc    BYTE PTR [edx-0x51],bh
  40a6fe:	xor    al,0x9d
  40a700:	std    
  40a701:	xchg   edi,eax
  40a702:	and    cl,BYTE PTR [edx]
  40a704:	out    dx,eax
  40a705:	nop
  40a706:	dec    esi
  40a707:	shl    esp,1
  40a709:	or     al,0xe
  40a70b:	sub    al,bl
  40a70d:	int    0x2d
  40a70f:	adc    al,0x5c
  40a711:	and    al,0x98
  40a713:	adc    eax,0xa3a83b83
  40a718:	dec    ecx
  40a719:	fdivr  QWORD PTR [ecx+0x55]
  40a71c:	mov    bh,0xf8
  40a71e:	ret    0xb22c
  40a721:	das    
  40a722:	add    al,0xdf
  40a724:	mov    ch,0xdb
  40a726:	cmp    esi,edx
  40a728:	cmp    BYTE PTR [edi],bh
  40a72a:	xchg   edi,eax
  40a72b:	and    BYTE PTR [edx+0x5461b361],al
  40a731:	daa    
  40a732:	pushf  
  40a733:	shl    DWORD PTR [ebx],1
  40a735:	dec    esi
  40a736:	push   edx
  40a737:	test   eax,0x1ec22f5f
  40a73c:	ficom  DWORD PTR [esi+0x2b]
  40a73f:	mov    esi,0x2fb2e21a
  40a744:	mov    al,ds:0x6675550e
  40a749:	into   
  40a74a:	jp     0x40a7c1
  40a74c:	jecxz  0x40a6ff
  40a74e:	daa    
  40a74f:	push   ebx
  40a750:	jp     0x40a729
  40a752:	nop
  40a753:	jmp    0x40a755
  40a755:	push   0xfffffffb
  40a757:	in     al,dx
  40a758:	or     BYTE PTR [ebx+0x2f],al
  40a75b:	in     eax,dx
  40a75c:	dec    ebp
  40a75d:	mov    edx,0x4a583872
  40a762:	shl    BYTE PTR [edx+0x23],1
  40a765:	lahf   
  40a766:	ins    DWORD PTR es:[edi],dx
  40a767:	or     al,0x1d
  40a769:	pop    es
  40a76a:	aaa    
  40a76b:	ins    BYTE PTR es:[edi],dx
  40a76c:	sub    eax,0x412afb32
  40a771:	das    
  40a772:	jmp    0x44326f29
  40a777:	loope  0x40a798
  40a779:	addr16 jbe 0x40a7d5
  40a77c:	loopne 0x40a715
  40a77e:	add    al,0xf5
  40a780:	stos   DWORD PTR es:[edi],eax
  40a781:	add    dh,bl
  40a783:	je     0x40a78d
  40a785:	mov    DWORD PTR [edi+eiz*4+0x38e56942],esi
  40a78c:	es jle 0x40a7df
  40a78f:	cld    
  40a790:	scas   al,BYTE PTR es:[edi]
  40a791:	repz sti 
  40a793:	pop    eax
  40a794:	mov    al,0xef
  40a796:	fcom   DWORD PTR [edx]
  40a798:	dec    eax
  40a799:	mov    ecx,0x2376e061
  40a79e:	cmp    ebp,esi
  40a7a0:	(bad)  
  40a7a1:	jp     0x40a7d4
  40a7a3:	pop    eax
  40a7a4:	dec    eax
  40a7a5:	aad    0x92
  40a7a7:	call   FWORD PTR [ebx]
  40a7a9:	nop
  40a7aa:	sub    BYTE PTR [edx-0x4c],al
  40a7ad:	push   ecx
  40a7ae:	loope  0x40a761
  40a7b0:	mov    cl,0x91
  40a7b2:	add    DWORD PTR [edi+0x1c],ecx
  40a7b5:	js     0x40a7be
  40a7b7:	add    bh,BYTE PTR [ecx]
  40a7b9:	xchg   edi,eax
  40a7ba:	xchg   DWORD PTR ds:0x12c01c8c,eax
  40a7c1:	mov    al,ds:0xc764459
  40a7c6:	xor    edx,ecx
  40a7c8:	mov    ch,0x92
  40a7ca:	push   edi
  40a7cb:	lods   al,BYTE PTR ds:[esi]
  40a7cc:	adc    dh,BYTE PTR [eax]
  40a7ce:	ds pop edi
  40a7d0:	jb     0x40a7ec
  40a7d2:	cmp    eax,DWORD PTR [edi+esi*2+0x55]
  40a7d6:	mov    ebp,0xbed2e658
  40a7db:	aas    
  40a7dc:	mov    ds:0xd3c42cfe,eax
  40a7e1:	(bad)  
  40a7e2:	std    
  40a7e3:	mov    bh,0x8
  40a7e5:	push   0xf080eea6
  40a7ea:	jp     0x40a782
  40a7ec:	xchg   edi,eax
  40a7ed:	adc    eax,0xbcb0ca96
  40a7f2:	dec    edi
  40a7f3:	in     eax,dx
  40a7f4:	add    DWORD PTR [ebx-0x1a],ecx
  40a7f7:	cld    
  40a7f8:	push   esi
  40a7f9:	mov    esi,0x451e7bd2
  40a7fe:	cmp    BYTE PTR [eax+0x65691b42],ch
  40a804:	or     ch,BYTE PTR [esi+0x68c22c6f]
  40a80a:	jmp    0xa4d1:0xaba0a7ec
  40a811:	xlat   BYTE PTR ds:[ebx]
  40a812:	push   edx
  40a813:	mov    ah,0x2e
  40a815:	pop    edx
  40a816:	cmc    
  40a817:	jno    0x40a7da
  40a819:	adc    al,0xe0
  40a81b:	mov    cl,0xa7
  40a81d:	dec    ebp
  40a81e:	aas    
  40a81f:	xlat   BYTE PTR ds:[ebx]
  40a820:	mov    ebp,0xf86d311c
  40a825:	in     eax,0x99
  40a827:	popf   
  40a828:	inc    di
  40a82a:	mov    dh,0x89
  40a82c:	cmp    DWORD PTR [edi-0x80],esp
  40a82f:	rol    BYTE PTR [edi*2+0x406b2f9e],1
  40a836:	ins    BYTE PTR es:[edi],dx
  40a837:	int    0xac
  40a839:	repnz test BYTE PTR [ecx-0x6bf98d5c],0x6
  40a841:	add    eax,ebx
  40a843:	mov    esp,0x94e7e1e1
  40a848:	enter  0x889b,0x9e
  40a84c:	jno    0x40a897
  40a84e:	dec    esi
  40a84f:	call   0xfa3b71dc
  40a854:	std    
  40a855:	xchg   esi,eax
  40a856:	push   eax
  40a857:	loopne 0x40a8d4
  40a859:	push   esp
  40a85a:	data16 and BYTE PTR [esi-0x146be4b0],bl
  40a861:	jmp    0x2bfa:0x821338a3
  40a868:	jecxz  0x40a85f
  40a86a:	fsub   st(7),st
  40a86c:	mov    BYTE PTR [eax-0x1266ae79],al
  40a872:	imul   ebp,DWORD PTR [esi+0x7b],0x634e06fb
  40a879:	dec    eax
  40a87a:	mov    BYTE PTR [ebx-0x18fe4726],bl
  40a880:	imul   eax,DWORD PTR [ebx+0x55daffff],0x76
  40a887:	mov    ebx,0xabd46850
  40a88c:	pop    esi
  40a88d:	scas   al,BYTE PTR es:[edi]
  40a88e:	sub    eax,0x692db7e5
  40a893:	into   
  40a894:	mov    al,0x32
  40a896:	ror    BYTE PTR [ebx-0x8],0x96
  40a89a:	in     al,dx
  40a89b:	jnp    0x40a8ea
  40a89d:	outs   dx,DWORD PTR ds:[esi]
  40a89e:	mov    ebp,0xe16ad2b
  40a8a3:	call   0x55fee1c0
  40a8a8:	inc    edx
  40a8a9:	icebp  
  40a8aa:	add    al,0x97
  40a8ac:	pushf  
  40a8ad:	adc    BYTE PTR [esi-0xa],ah
  40a8b0:	fimul  DWORD PTR gs:[edx]
  40a8b3:	iret   
  40a8b4:	test   BYTE PTR [esi-0x5f],0x9
  40a8b8:	jns    0x40a896
  40a8ba:	jg     0x40a934
  40a8bc:	and    cl,BYTE PTR ds:0xde6583d1
  40a8c2:	xchg   ebx,eax
  40a8c3:	inc    esi
  40a8c4:	cmp    dh,BYTE PTR [eax]
  40a8c6:	jmp    0xe71a:0xbdf2f722
  40a8cd:	inc    esi
  40a8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8cf:	imul   BYTE PTR [ebx+0x3f]
  40a8d2:	dec    esp
  40a8d3:	jae    0x40a8e3
  40a8d5:	pop    edx
  40a8d6:	test   eax,0x6b45c
  40a8db:	mov    ebp,0xf8e41c81
  40a8e0:	push   cs
  40a8e1:	sbb    eax,0x2dd4a7d3
  40a8e6:	rol    BYTE PTR [ebx],0x80
  40a8e9:	inc    edx
  40a8ea:	into   
  40a8eb:	mov    ds:0xd40b9029,al
  40a8f0:	mov    dl,0x5b
  40a8f2:	pusha  
  40a8f3:	jmp    0x40a875
  40a8f5:	inc    ebx
  40a8f6:	lods   eax,DWORD PTR ds:[esi]
  40a8f7:	jg     0x40a959
  40a8f9:	dec    edi
  40a8fa:	xchg   edi,eax
  40a8fb:	push   esp
  40a8fc:	dec    edx
  40a8fd:	aad    0x49
  40a8ff:	or     al,al
  40a901:	fcom   DWORD PTR [esi]
  40a903:	push   ecx
  40a904:	push   esp
  40a905:	sbb    al,0x1f
  40a907:	push   DWORD PTR [edx+0x68]
  40a90a:	es call 0x7fb2:0xa1f1f270
  40a912:	inc    esp
  40a913:	xchg   edx,eax
  40a914:	cmp    al,0x54
  40a916:	jmp    0x4524ec30
  40a91b:	sahf   
  40a91c:	xor    esi,esi
  40a91e:	shl    bh,1
  40a920:	adc    al,0x6
  40a922:	outs   dx,DWORD PTR ds:[esi]
  40a923:	mov    dh,0x99
  40a925:	xchg   edi,eax
  40a926:	retf   0xd30c
  40a929:	mov    dh,0xa
  40a92b:	xor    esp,DWORD PTR [edi+edi*1]
  40a92e:	(bad)  
  40a92f:	(bad)  
  40a930:	repnz (bad) 
  40a932:	pop    ebp
  40a933:	bound  eax,QWORD PTR [ebx-0x5b]
  40a936:	loope  0x40a919
  40a938:	push   esi
  40a939:	(bad)  
  40a93a:	cmp    dh,bh
  40a93c:	out    dx,eax
  40a93d:	int    0x44
  40a93f:	ja     0x40a91e
  40a941:	stc    
  40a942:	sar    bl,1
  40a944:	mov    ch,0x2d
  40a946:	imul   eax,ebp,0x38
  40a949:	dec    ebx
  40a94a:	inc    ebx
  40a94b:	inc    ebx
  40a94c:	loop   0x40a98d
  40a94e:	repnz popa 
  40a950:	fmul   QWORD PTR [eax+0x72]
  40a953:	inc    edi
  40a954:	jl     0x40a917
  40a956:	ja     0x40a8e3
  40a958:	es dec esp
  40a95a:	mov    BYTE PTR [esi],0xa6
  40a95d:	push   DWORD PTR [ecx-0x75]
  40a960:	jmp    0x40a928
  40a962:	arpl   WORD PTR [ebp+0x71b116ea],cx
  40a968:	xchg   ecx,eax
  40a969:	imul   esp,edx,0x92d0ca36
  40a96f:	adc    al,0x55
  40a971:	inc    esp
  40a972:	mov    bl,dh
  40a974:	pop    edx
  40a975:	adc    DWORD PTR [eax],ebx
  40a977:	outs   dx,BYTE PTR ds:[esi]
  40a978:	and    DWORD PTR [ecx],0xe74f4611
  40a97e:	clc    
  40a97f:	fcomp  QWORD PTR [edx+0x3ab3a05b]
  40a985:	in     al,dx
  40a986:	stos   BYTE PTR es:[edi],al
  40a987:	dec    esi
  40a988:	cs xchg esp,ecx
  40a98b:	mov    ds:0xc0f073d1,al
  40a990:	cmp    al,0x4b
  40a992:	fidiv  DWORD PTR [edx-0x2dbac68a]
  40a998:	dec    esi
  40a999:	fsubr  QWORD PTR [ebp-0x72]
  40a99c:	mov    esp,0x65e2afd3
  40a9a1:	cwde   
  40a9a2:	mov    ds:0xe59ae342,al
  40a9a7:	mov    esp,0xd2f86c7d
  40a9ac:	std    
  40a9ad:	in     eax,dx
  40a9ae:	pop    ds
  40a9af:	imul   eax,edi,0x54ea3c92
  40a9b5:	fcom   QWORD PTR [eax-0x47505bca]
  40a9bb:	in     al,dx
  40a9bc:	push   esp
  40a9bd:	adc    edi,esi
  40a9bf:	icebp  
  40a9c0:	jecxz  0x40a965
  40a9c2:	push   eax
  40a9c3:	data16 fdivp st(2),st
  40a9c6:	xchg   esi,eax
  40a9c7:	xor    bh,al
  40a9c9:	out    dx,al
  40a9ca:	imul   esp,edi,0xffffff98
  40a9cd:	dec    edi
  40a9ce:	jb     0x40a96a
  40a9d0:	inc    edx
  40a9d1:	and    DWORD PTR [ecx-0x76],edi
  40a9d4:	add    eax,0x6da63ee5
  40a9d9:	sub    al,0x1c
  40a9db:	cmp    BYTE PTR [edi-0x62da1588],al
  40a9e1:	jg     0x40a9c5
  40a9e3:	push   0xfc06faaa
  40a9e8:	icebp  
  40a9e9:	pushf  
  40a9ea:	xchg   ebx,eax
  40a9eb:	loopne 0x40aa1b
  40a9ed:	jmp    0x1208a4b4
  40a9f2:	cmp    BYTE PTR [edi],cl
  40a9f4:	push   es
  40a9f5:	cmc    
  40a9f6:	add    dh,BYTE PTR [edx-0xc8675ab]
  40a9fc:	(bad)  
  40a9fd:	mov    ebx,0xed74f504
  40aa02:	mov    bh,0xff
  40aa04:	ret    0x551c
  40aa07:	imul   esp,DWORD PTR [edx+0x39],0x7
  40aa0b:	je     0x40aa3c
  40aa0d:	push   ds
  40aa0e:	cmp    BYTE PTR [esi],0xd5
  40aa11:	lds    esi,FWORD PTR [ebx]
  40aa13:	and    BYTE PTR [eax],0x68
  40aa16:	xchg   ebp,eax
  40aa17:	data16 int 0x14
  40aa1a:	xchg   edx,eax
  40aa1b:	jne    0x40aa05
  40aa1d:	stos   BYTE PTR es:[edi],al
  40aa1e:	mov    ecx,0x870fb252
  40aa23:	rcr    DWORD PTR [esi],1
  40aa25:	mov    edi,0x12dd1937
  40aa2a:	sbb    DWORD PTR [ebx+0x26999a10],0x660efff6
  40aa34:	push   edi
  40aa35:	fcmovnb st,st(2)
  40aa37:	leave  
  40aa38:	dec    esi
  40aa39:	ror    DWORD PTR [edi-0x3d94bf93],cl
  40aa3f:	in     al,0xc2
  40aa41:	xchg   esp,eax
  40aa42:	mov    ecx,0x94793d26
  40aa47:	sbb    DWORD PTR [edx+edx*1+0x1a1056a2],eax
  40aa4e:	scas   al,BYTE PTR es:[edi]
  40aa4f:	push   0xffffffe1
  40aa51:	pop    ebx
  40aa52:	pop    edx
  40aa53:	or     ebx,esi
  40aa55:	imul   edi,DWORD PTR [ebx],0x61e3c13
  40aa5b:	lock cli 
  40aa5d:	push   ecx
  40aa5e:	lock hlt 
  40aa60:	fwait
  40aa61:	cs data16 cmc 
  40aa64:	in     eax,dx
  40aa65:	or     al,BYTE PTR [ebx+0x9]
  40aa68:	and    esi,edx
  40aa6a:	clc    
  40aa6b:	test   al,0xa1
  40aa6d:	fsub   QWORD PTR [ebp*8-0x664aeebe]
  40aa74:	dec    edi
  40aa75:	cmp    al,0x93
  40aa77:	add    eax,0xbb84c29
  40aa7c:	aam    0xd5
  40aa7e:	arpl   WORD PTR [ebx],bp
  40aa80:	sub    ch,BYTE PTR ds:0xd7faac68
  40aa86:	outs   dx,BYTE PTR ds:[esi]
  40aa87:	gs ss mov bl,0x37
  40aa8b:	clc    
  40aa8c:	clc    
  40aa8d:	scas   eax,DWORD PTR es:[edi]
  40aa8e:	add    esp,esi
  40aa90:	jnp    0x40aaad
  40aa92:	out    0x96,al
  40aa94:	repz sub DWORD PTR [ecx-0x4b777f0b],esp
  40aa9b:	sbb    DWORD PTR [edx+0x4b637264],ebp
  40aaa1:	(bad)  
  40aaa2:	xor    BYTE PTR [esi-0x2a],bl
  40aaa5:	(bad)  
  40aaa7:	ficomp DWORD PTR [eax]
  40aaa9:	jns    0x40aa4e
  40aaab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaac:	arpl   WORD PTR [ebx+edi*4-0x4a55165e],si
  40aab3:	sub    esi,DWORD PTR [edx-0x24]
  40aab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aab7:	out    0x45,al
  40aab9:	dec    esp
  40aaba:	or     BYTE PTR ds:0xeeb4b9a8,bl
  40aac0:	icebp  
  40aac1:	dec    ebx
  40aac2:	jecxz  0x40ab11
  40aac4:	cmp    cl,0x35
  40aac7:	pop    ds
  40aac8:	jo     0x40aaea
  40aaca:	mov    bl,0x9f
  40aacc:	bound  ecx,QWORD PTR [esi+edi*8-0x63d05b9]
  40aad3:	jecxz  0x40ab2d
  40aad5:	neg    DWORD PTR [ebx]
  40aad7:	push   edx
  40aad8:	push   ebp
  40aad9:	xchg   edx,eax
  40aada:	loop   0x40ab25
  40aadc:	pop    ds
  40aadd:	inc    ebp
  40aade:	fcomp  QWORD PTR [ebx-0xdaab49f]
  40aae4:	inc    ecx
  40aae5:	cdq    
  40aae6:	dec    esi
  40aae7:	inc    eax
  40aae8:	sbb    ebx,DWORD PTR [edi-0x4c]
  40aaeb:	fwait
  40aaec:	add    esi,DWORD PTR [ebp-0x1f9352db]
  40aaf2:	cmc    
  40aaf3:	imul   eax,ecx,0xf229df68
  40aaf9:	(bad)  
  40aafa:	js     0x40aaff
  40aafc:	and    DWORD PTR [esi+0x33],ecx
  40aaff:	mov    ds:0xbc15e592,al
  40ab04:	stos   BYTE PTR es:[edi],al
  40ab05:	mov    al,0xac
  40ab07:	call   0xb41cdc25
  40ab0c:	mov    eax,ds:0xae6d4f69
  40ab11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab12:	aam    0x2e
  40ab14:	lods   al,BYTE PTR ds:[esi]
  40ab15:	mov    ebx,0xd84c71d
  40ab1a:	arpl   WORD PTR [ebx+0x39],bp
  40ab1d:	cmp    al,0x94
  40ab1f:	dec    edi
  40ab20:	push   ebp
  40ab21:	mov    ah,BYTE PTR [edi+esi*4]
  40ab24:	ins    DWORD PTR es:[edi],dx
  40ab25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab26:	fcos   
  40ab28:	adc    BYTE PTR [esi+0x35],dl
  40ab2b:	cmp    esp,ecx
  40ab2d:	mov    esi,0xec4407fd
  40ab32:	out    0x86,al
  40ab34:	cdq    
  40ab35:	jg     0x40ab40
  40ab37:	mov    bh,0xe0
  40ab39:	in     al,0x51
  40ab3b:	shl    DWORD PTR [ebx],0x1d
  40ab3e:	ret    
  40ab3f:	scas   eax,DWORD PTR es:[di]
  40ab41:	mov    al,ds:0x99100731
  40ab46:	or     BYTE PTR [ebx],bh
  40ab48:	push   ds
  40ab49:	and    ebx,eax
  40ab4b:	xchg   ebp,eax
  40ab4c:	mov    ds:0xa6fb48be,eax
  40ab51:	jl     0x40aae5
  40ab53:	(bad)  
  40ab54:	mov    edi,0x6b24f2e2
  40ab59:	es jge 0x40ab60
  40ab5c:	sti    
  40ab5d:	fmul   QWORD PTR [ebp+0x251ee237]
  40ab63:	pop    edi
  40ab64:	mov    fs,WORD PTR [ebx-0x35a55f3e]
  40ab6a:	stos   DWORD PTR es:[edi],eax
  40ab6b:	les    ebp,FWORD PTR [edi+0x10]
  40ab6e:	repz push ebx
  40ab70:	mov    cl,0xf4
  40ab72:	iret   
  40ab73:	mov    ah,0x71
  40ab75:	aas    
  40ab76:	int3   
  40ab77:	mov    ecx,DWORD PTR [esi+0x69]
  40ab7a:	adc    bl,BYTE PTR [ecx-0x3d]
  40ab7d:	sti    
  40ab7e:	(bad)  
  40ab81:	sbb    BYTE PTR [edi*8-0x271d16db],ah
  40ab88:	jne    0x40ab8c
  40ab8a:	les    eax,FWORD PTR [ebx-0x4d5a9e96]
  40ab90:	cmc    
  40ab91:	pop    ebx
  40ab92:	sbb    DWORD PTR ds:0xa09ee74e,edi
  40ab98:	fs addr16 adc al,0x1
  40ab9c:	or     al,ch
  40ab9e:	adc    eax,0x51090a4f
  40aba3:	rcl    DWORD PTR [ebp+esi*2+0x4d2a2034],1
  40abaa:	inc    esp
  40abab:	push   ss
  40abac:	cld    
  40abad:	add    eax,0xe45d4748
  40abb2:	daa    
  40abb3:	mov    WORD PTR [ebx-0x8],?
  40abb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb8:	call   0xde92ddd
  40abbd:	push   edx
  40abbe:	pop    ds
  40abbf:	je     0x40ac09
  40abc1:	mov    ebx,0xfaea9e9c
  40abc6:	retf   
  40abc7:	mov    ebp,0x3a3c07b1
  40abcc:	push   ebx
  40abcd:	pop    ss
  40abce:	lss    eax,FWORD PTR gs:[edi+0x3a]
  40abd3:	ret    0x7ae9
  40abd6:	cdq    
  40abd7:	stos   BYTE PTR es:[edi],al
  40abd8:	cld    
  40abd9:	jo     0x40abed
  40abdb:	in     eax,0x8a
  40abdd:	in     al,0x3b
  40abdf:	out    dx,al
  40abe0:	leave  
  40abe1:	idiv   esi
  40abe3:	xchg   esi,eax
  40abe4:	ret    
  40abe5:	and    DWORD PTR ds:0x67b5f01e,esi
  40abeb:	fstp   DWORD PTR [esi+ebp*4+0x76]
  40abef:	lock not BYTE PTR [eax+ebx*2+0x7b]
  40abf4:	jmp    0x40abba
  40abf6:	xchg   esp,eax
  40abf7:	and    ebp,esi
  40abf9:	mov    eax,0x54fced25
  40abfe:	mov    WORD PTR [ebx+0x3f],es
  40ac01:	push   0xffffffba
  40ac03:	cmp    al,0x6b
  40ac05:	adc    esp,0x8
  40ac08:	cmc    
  40ac09:	mov    gs,WORD PTR [edi-0x3b]
  40ac0c:	dec    esp
  40ac0d:	cs (bad) 
  40ac10:	push   ds
  40ac11:	mov    bl,0x6d
  40ac13:	in     al,0x74
  40ac15:	enter  0xf35c,0xe1
  40ac19:	add    al,0x88
  40ac1b:	in     eax,dx
  40ac1c:	cmp    esp,DWORD PTR [ebx]
  40ac1e:	ss retf 0x72f5
  40ac22:	sub    BYTE PTR [eax],ch
  40ac24:	sbb    dh,bl
  40ac26:	retf   0x938b
  40ac29:	add    al,0xf
  40ac2b:	repz or al,0xb4
  40ac2e:	push   edx
  40ac2f:	add    bl,cl
  40ac31:	js     0x3b20a7b6
  40ac37:	or     BYTE PTR [esi+0x299cd10b],0xb8
  40ac3e:	mov    esi,0x8af6367b
  40ac43:	call   0x54ee:0xf326e822
  40ac4a:	cs xor al,0x76
  40ac4d:	cmp    bl,BYTE PTR [esi]
  40ac4f:	std    
  40ac50:	int3   
  40ac51:	loopne 0x40ac7b
  40ac53:	inc    ebx
  40ac54:	loope  0x40ac5e
  40ac56:	add    eax,0xbc0d7cc6
  40ac5b:	cli    
  40ac5c:	push   ebx
  40ac5d:	jecxz  0x40ac0d
  40ac5f:	jbe    0x40ac6f
  40ac61:	mov    es,WORD PTR [ecx]
  40ac63:	xchg   BYTE PTR [edx],ah
  40ac65:	push   cs
  40ac66:	in     eax,0xdd
  40ac68:	xchg   ecx,eax
  40ac69:	mov    cs,WORD PTR ds:0x192ed6c
  40ac6f:	mov    edx,0xfbeedff7
  40ac74:	test   al,0x65
  40ac76:	adc    ebp,edx
  40ac78:	inc    eax
  40ac79:	sbb    al,0x1a
  40ac7b:	dec    si
  40ac7d:	mov    eax,ds:0x40a630ae
  40ac82:	pop    ebx
  40ac83:	jbe    0x40ac54
  40ac85:	(bad)  
  40ac86:	fcmovu st,st(0)
  40ac88:	xor    cl,BYTE PTR [ecx+0x57]
  40ac8b:	fnsave [edx-0x23]
  40ac8e:	scas   al,BYTE PTR es:[edi]
  40ac8f:	and    DWORD PTR [edi+0x74],esp
  40ac92:	cmp    eax,DWORD PTR [edx-0x1e]
  40ac95:	and    eax,0xc11824a3
  40ac9a:	xchg   esp,eax
  40ac9b:	dec    eax
  40ac9c:	in     eax,dx
  40ac9d:	das    
  40ac9e:	jge    0x40ac64
  40aca0:	cli    
  40aca1:	cdq    
  40aca2:	sub    DWORD PTR [edi],0x62
  40aca5:	and    BYTE PTR ds:0x784f2885,ah
  40acab:	fcom   DWORD PTR [ebp+0x50a64f81]
  40acb1:	stos   DWORD PTR es:[edi],eax
  40acb2:	shl    BYTE PTR [edx+0x6fcb36ff],0xac
  40acb9:	xor    BYTE PTR [ebx+0x76f1dd16],dl
  40acbf:	add    BYTE PTR [eax],cl
  40acc1:	call   0x9075:0x2fb48479
  40acc8:	sub    eax,0x6650a10f
  40accd:	aas    
  40acce:	xchg   edi,eax
  40accf:	cdq    
  40acd0:	and    eax,0x8df3351
  40acd5:	std    
  40acd6:	scas   eax,DWORD PTR es:[edi]
  40acd7:	mov    eax,ds:0xf0357b20
  40acdc:	mov    eax,ds:0x29291701
  40ace1:	neg    DWORD PTR [edi+0x1e]
  40ace4:	adc    esi,DWORD PTR [edi+0x1fd67558]
  40acea:	jbe    0x40acdc
  40acec:	inc    ebx
  40aced:	sbb    al,0xbd
  40acf0:	sbb    cl,al
  40acf2:	aas    
  40acf3:	jo     0x40acdd
  40acf5:	mov    dl,0xdb
  40acf7:	mov    ecx,0xf7d1ded0
  40acfc:	ror    DWORD PTR [ebx+0x3c3fe2f9],cl
  40ad02:	mov    ah,BYTE PTR [ecx]
  40ad04:	icebp  
  40ad05:	pop    ebx
  40ad06:	add    DWORD PTR ds:0x1241ed54,0x16
  40ad0d:	mov    ebp,0x41c6a122
  40ad12:	and    ch,BYTE PTR [esi]
  40ad14:	dec    edi
  40ad15:	and    dh,BYTE PTR [edx]
  40ad17:	inc    ebp
  40ad18:	and    BYTE PTR [edi+0x15fe1a80],dl
  40ad1e:	out    0x22,al
  40ad20:	into   
  40ad21:	xchg   ebx,eax
  40ad22:	test   BYTE PTR [ebx],cl
  40ad24:	cs inc esi
  40ad26:	rol    BYTE PTR [esi-0x35],0xc2
  40ad2a:	retf   0x7474
  40ad2d:	add    al,0x37
  40ad2f:	pop    edx
  40ad30:	push   esp
  40ad31:	mov    esi,DWORD PTR [edi-0x18]
  40ad34:	or     DWORD PTR [eax+0x19b8b407],0xffffffc6
  40ad3b:	in     eax,dx
  40ad3c:	mov    DWORD PTR [ecx+0x737dc97c],edi
  40ad42:	jl     0x40ad20
  40ad44:	ds push ebp
  40ad46:	adc    BYTE PTR [esi+0x590dc9ad],ch
  40ad4c:	out    0x4e,al
  40ad4e:	sub    al,0xdc
  40ad50:	(bad)  
  40ad51:	adc    ch,BYTE PTR [ebp+0x18]
  40ad54:	leave  
  40ad55:	lds    edi,FWORD PTR [edi+ebx*1-0x4e11b7a9]
  40ad5c:	pop    ebp
  40ad5d:	xor    al,0x20
  40ad5f:	addr16 xchg ebx,eax
  40ad61:	add    bh,BYTE PTR [eax+0x1c]
  40ad64:	push   0x77
  40ad66:	rcl    BYTE PTR [esi+0xe],cl
  40ad69:	in     al,dx
  40ad6a:	retf   
  40ad6b:	leave  
  40ad6c:	or     eax,0x753168bd
  40ad71:	dec    edx
  40ad72:	xchg   esi,eax
  40ad73:	jl     0x40ad1f
  40ad75:	adc    eax,0xdc0edb8a
  40ad7a:	lock test DWORD PTR [eax+0x42a68985],ebp
  40ad81:	add    al,0x8c
  40ad83:	adc    ebp,DWORD PTR [ecx-0x15]
  40ad86:	cmp    eax,0xe7b67c1
  40ad8b:	push   ecx
  40ad8c:	xlat   BYTE PTR ds:[ebx]
  40ad8d:	sub    DWORD PTR [edi],ebp
  40ad8f:	mov    cl,0xdc
  40ad91:	sbb    ah,bh
  40ad93:	or     BYTE PTR [ebx-0x28],0xc4
  40ad97:	repz pop esi
  40ad99:	inc    ebx
  40ad9a:	cmp    DWORD PTR [ebp-0x34af2d47],ecx
  40ada0:	icebp  
  40ada1:	(bad)  
  40ada2:	push   esi
  40ada3:	push   ecx
  40ada4:	push   edi
  40ada5:	stos   BYTE PTR es:[edi],al
  40ada6:	sbb    eax,0x2bd30d3
  40adab:	scas   al,BYTE PTR es:[edi]
  40adac:	call   0x9bdb3ec0
  40adb1:	push   ebp
  40adb2:	push   ds
  40adb3:	lahf   
  40adb4:	xor    al,0xce
  40adb6:	pop    edx
  40adb7:	mov    bh,0x4c
  40adb9:	pop    ebp
  40adba:	and    eax,0xbc0ce509
  40adbf:	rol    esp,0x6
  40adc2:	out    0x28,al
  40adc4:	sbb    al,0xf3
  40adc6:	push   ebp
  40adc7:	push   0xfffffff1
  40adc9:	and    dh,BYTE PTR [ebx]
  40adcb:	shl    DWORD PTR [ecx+0x5],cl
  40adce:	addr16 mov al,0xe3
  40add1:	lock add al,0x94
  40add4:	out    0xdc,eax
  40add6:	mov    esi,0xe7ffe923
  40addb:	inc    ebp
  40addc:	dec    ecx
  40addd:	mov    eax,0xbbab4994
  40ade2:	loop   0x40ad97
  40ade4:	aas    
  40ade5:	fidiv  WORD PTR [edx-0x61]
  40ade8:	daa    
  40ade9:	push   es
  40adea:	sub    DWORD PTR [edx-0x2f],0x32
  40adee:	jns    0x40adb5
  40adf0:	mov    bl,0xaf
  40adf2:	dec    esi
  40adf3:	leave  
  40adf4:	add    bl,bh
  40adf6:	jno    0x40ae57
  40adf8:	xchg   ecx,eax
  40adf9:	fldenv [edx]
  40adfb:	inc    ecx
  40adfc:	and    eax,0xfc93b961
  40ae01:	mov    esp,0x9f53d081
  40ae06:	pop    edx
  40ae07:	cld    
  40ae08:	xchg   edx,eax
  40ae09:	sub    BYTE PTR [ebp+edx*1-0x5],cl
  40ae0d:	sbb    dh,BYTE PTR [eax+0x48af5fb]
  40ae13:	ja     0x40adb2
  40ae15:	clc    
  40ae16:	mov    ebp,0x8a771026
  40ae1b:	data16 sbb BYTE PTR [edx-0x53],bh
  40ae1f:	fnstenv [esi+eiz*4+0x70]
  40ae23:	jno    0x40ae91
  40ae25:	fwait
  40ae26:	cmp    BYTE PTR [edi+ebp*2+0x344cacbb],al
  40ae2d:	les    ecx,FWORD PTR [eax]
  40ae2f:	add    DWORD PTR [ebp+0x2852726e],edi
  40ae35:	or     esp,DWORD PTR [ecx+0x22]
  40ae38:	adc    DWORD PTR [eax-0x6c690803],edx
  40ae3e:	adc    BYTE PTR [eax+ecx*2+0x20197be0],dh
  40ae45:	push   ss
  40ae46:	mov    eax,0x98cf9e9b
  40ae4b:	xchg   esp,eax
  40ae4c:	fcom   DWORD PTR [ebp-0x4b]
  40ae4f:	and    BYTE PTR [eax-0x6f],cl
  40ae52:	int3   
  40ae53:	call   0x996f0df0
  40ae58:	push   ss
  40ae59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae5a:	pop    ebp
  40ae5b:	dec    edi
  40ae5c:	les    ebp,FWORD PTR [edx+0x35a81bc8]
  40ae62:	int    0x45
  40ae64:	xor    BYTE PTR [ecx-0x58],cl
  40ae67:	xchg   esi,eax
  40ae68:	fs sbb al,0xd9
  40ae6b:	xchg   edi,eax
  40ae6c:	push   ss
  40ae6d:	sbb    eax,0x389b5a82
  40ae72:	mov    eax,ds:0x4e4bfc5
  40ae77:	inc    edi
  40ae78:	or     ah,BYTE PTR [edi-0x25]
  40ae7b:	jg     0x40ae8a
  40ae7d:	in     eax,dx
  40ae7e:	mov    eax,ds:0x42d44409
  40ae83:	call   0x7cc7:0x71d9add8
  40ae8a:	mov    edx,DWORD PTR [ecx]
  40ae8c:	test   al,0x13
  40ae8e:	out    0xe0,eax
  40ae90:	jmp    0x40af08
  40ae92:	scas   al,BYTE PTR es:[edi]
  40ae93:	rcl    ch,0xe
  40ae96:	jne    0x40af02
  40ae98:	push   cs
  40ae99:	lea    ebx,[eax+0x45]
  40ae9c:	xchg   ebp,eax
  40ae9d:	adc    al,0x27
  40ae9f:	jmp    0xc947:0x6d33b59a
  40aea6:	test   BYTE PTR [edi-0x1c],dh
  40aea9:	jns    0x40ae35
  40aeab:	repz into 
  40aead:	push   edi
  40aeae:	shr    DWORD PTR ds:0x7de54a7e,cl
  40aeb4:	dec    ebp
  40aeb5:	scas   eax,DWORD PTR es:[edi]
  40aeb6:	inc    ebp
  40aeb7:	mov    al,ds:0x5f8cdee0
  40aebc:	cwde   
  40aebd:	ins    BYTE PTR es:[edi],dx
  40aebe:	lds    esp,FWORD PTR [esi-0x1a]
  40aec1:	push   eax
  40aec2:	leave  
  40aec3:	sbb    eax,DWORD PTR [ebx+0x388141ff]
  40aec9:	stc    
  40aeca:	jp     0x40aef6
  40aecc:	pushf  
  40aecd:	dec    ebp
  40aece:	mov    cl,0x99
  40aed0:	and    BYTE PTR [edx+eax*4+0x7e],ah
  40aed4:	push   ecx
  40aed5:	js     0x40af47
  40aed7:	mov    cl,0xa4
  40aed9:	imul   edx,DWORD PTR [ebx],0x3e
  40aedc:	and    dh,BYTE PTR [eax]
  40aede:	jne    0x40ae92
  40aee0:	daa    
  40aee1:	sub    edx,DWORD PTR [edx-0x59]
  40aee4:	mov    edi,0x5850f213
  40aee9:	sbb    eax,ebx
  40aeeb:	jle    0x40af25
  40aeed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeee:	or     DWORD PTR [ebp-0x3c62c7a6],ebx
  40aef4:	retf   0x97f3
  40aef7:	sti    
  40aef8:	push   edi
  40aef9:	loop   0x40aeaa
  40aefb:	lahf   
  40aefc:	xchg   DWORD PTR [eax+0x166681a2],esi
  40af02:	(bad)  
  40af03:	sub    ch,BYTE PTR [ebp+0x4bf34662]
  40af09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af0a:	loop   0x40af22
  40af0c:	mov    ah,0x1a
  40af0e:	aam    0x87
  40af10:	cli    
  40af11:	arpl   WORD PTR [edx+edx*2-0x7fb65730],dx
  40af18:	sahf   
  40af19:	leave  
  40af1a:	jne    0x40aee3
  40af1c:	mov    ds:0x10392f5d,al
  40af21:	rcl    edx,1
  40af23:	in     al,0x59
  40af25:	push   ecx
  40af26:	in     eax,0x7
  40af28:	test   eax,0xa54045e3
  40af2d:	push   esp
  40af2e:	xchg   edx,eax
  40af2f:	imul   ebp,DWORD PTR [ebp-0x5b],0x3b79bd78
  40af36:	mov    al,ds:0x18f6b1d
  40af3b:	in     eax,dx
  40af3c:	adc    eax,DWORD PTR [esp+ebp*1]
  40af3f:	dec    edx
  40af40:	push   eax
  40af41:	test   DWORD PTR [edx-0x5e69067c],ecx
  40af47:	dec    ebp
  40af48:	xor    edx,DWORD PTR [eax-0x3]
  40af4b:	lea    esp,[edx+0xf]
  40af4e:	add    edx,DWORD PTR [edx+0x70]
  40af51:	xor    al,0xf0
  40af53:	dec    edi
  40af54:	add    dl,al
  40af56:	fst    st(6)
  40af58:	sbb    esp,edi
  40af5a:	test   BYTE PTR [ebx],al
  40af5c:	xchg   esi,eax
  40af5d:	xor    BYTE PTR [ebx],ch
  40af5f:	adc    al,al
  40af61:	loopne 0x40af9c
  40af63:	test   eax,0xb7c4f2e2
  40af68:	cwde   
  40af69:	or     BYTE PTR [edi-0x276c467b],dh
  40af6f:	xlat   BYTE PTR ds:[ebx]
  40af70:	dec    ecx
  40af71:	pushf  
  40af72:	shl    BYTE PTR [eax-0x45],0x92
  40af76:	mov    ecx,0xa8c6381
  40af7b:	mov    eax,ds:0x165d224e
  40af80:	fstp   TBYTE PTR fs:[edi+0x5a929323]
  40af87:	pop    esp
  40af88:	sar    BYTE PTR [eax+0x1df656ad],cl
  40af8e:	sbb    bl,BYTE PTR [ebx+0x3a5e5f15]
  40af94:	add    ebp,esp
  40af96:	xchg   esi,eax
  40af97:	and    DWORD PTR [eax+edx*8],ecx
  40af9a:	sbb    ebx,esi
  40af9c:	push   esp
  40af9d:	jbe    0x40af88
  40af9f:	adc    al,0xc5
  40afa1:	mov    ah,0xd0
  40afa3:	sbb    BYTE PTR [edi],bl
  40afa5:	aad    0x81
  40afa7:	mov    esp,0x2fc57dab
  40afac:	shr    DWORD PTR [ebp+0x30],1
  40afaf:	loop   0x40afb0
  40afb1:	leave  
  40afb2:	je     0x40af9c
  40afb4:	lahf   
  40afb5:	outs   dx,DWORD PTR ds:[esi]
  40afb6:	clc    
  40afb7:	jae    0x40afc9
  40afb9:	mov    edx,0x68dabed
  40afbe:	sub    BYTE PTR [edx],ah
  40afc0:	inc    ebx
  40afc1:	or     BYTE PTR [ebx],0xac
  40afc4:	dec    ebp
  40afc5:	sbb    cl,bl
  40afc7:	loope  0x40af8d
  40afc9:	sbb    eax,0xedcf0b4d
  40afce:	into   
  40afcf:	mov    edi,0x9f7655bb
  40afd4:	imul   ebx,DWORD PTR [ebp+0x18b30f89],0xa8475396
  40afde:	fst    DWORD PTR [edx+ebx*2]
  40afe1:	mov    ds:0xebf4371c,eax
  40afe6:	inc    edi
  40afe7:	mov    ds,ecx
  40afe9:	das    
  40afea:	nop
  40afeb:	push   0xffffffd0
  40afed:	pusha  
  40afee:	outs   dx,DWORD PTR ds:[esi]
  40afef:	push   ds
  40aff0:	stc    
  40aff1:	or     eax,0x4dad8e73
  40aff6:	pop    ds
  40aff7:	dec    edx
  40aff8:	pushf  
  40aff9:	xchg   al,ah
  40affb:	or     dl,BYTE PTR ds:0xd8eee496
  40b001:	or     BYTE PTR [edi+0x19134bb9],ch
  40b007:	imul   ebp,DWORD PTR [eax-0x2b],0x8d2a58bd
  40b00e:	cld    
  40b00f:	sub    BYTE PTR [ebx+0x5b],bh
  40b012:	shl    BYTE PTR [edx],1
  40b014:	fidivr WORD PTR [edx+0x697cdd93]
  40b01a:	add    eax,0x21f8a1fc
  40b01f:	push   esi
  40b020:	sbb    BYTE PTR [edi+0x7ec871cb],0x7b
  40b027:	jg     0x40b085
  40b029:	dec    eax
  40b02a:	frstor [edi-0x55b761c9]
  40b030:	(bad)  
  40b031:	out    0xed,eax
  40b033:	cmc    
  40b034:	xchg   BYTE PTR [eax+0x7370f445],ah
  40b03a:	and    edx,ebp
  40b03c:	push   eax
  40b03d:	push   edi
  40b03e:	adc    al,0x1f
  40b040:	sub    DWORD PTR [edx-0x20d0034e],ecx
  40b046:	inc    cx
  40b048:	mov    ds:0xc6530375,al
  40b04d:	mov    bl,0x28
  40b04f:	pop    es
  40b050:	xchg   esi,eax
  40b051:	data16 and dl,BYTE PTR [esi+0x3da28984]
  40b058:	or     ecx,DWORD PTR [ebp+0xa648f9b]
  40b05e:	lods   eax,DWORD PTR ds:[esi]
  40b05f:	jnp    0x40b015
  40b061:	mov    ch,0xeb
  40b063:	add    ah,BYTE PTR [eax-0x64]
  40b066:	mov    al,ds:0xa7117738
  40b06b:	rcr    BYTE PTR [ecx],1
  40b06d:	cli    
  40b06e:	adc    al,0x3c
  40b070:	sub    BYTE PTR [eax-0x386554b0],bl
  40b076:	and    eax,0xa04fdef6
  40b07b:	fisttp QWORD PTR [edi+0x5bc7ad83]
  40b081:	popa   
  40b082:	lods   al,BYTE PTR ds:[esi]
  40b083:	popa   
  40b084:	stos   DWORD PTR es:[di],eax
  40b086:	and    cl,cl
  40b088:	mov    dh,0x13
  40b08a:	fs inc esi
  40b08c:	jne    0x40b078
  40b08e:	and    ebp,ebp
  40b090:	(bad)  ds:0x77636697
  40b096:	inc    edi
  40b097:	add    al,0xad
  40b099:	int    0x29
  40b09b:	or     edi,DWORD PTR [esi+eiz*2]
  40b09e:	(bad)  
  40b09f:	jg     0x40b035
  40b0a1:	fisttp DWORD PTR ds:0xaaef021a
  40b0a7:	push   edx
  40b0a8:	jle    0x40b124
  40b0aa:	xor    al,0x1c
  40b0ac:	sub    al,0x6a
  40b0ae:	cld    
  40b0af:	jp     0x40b0cc
  40b0b1:	mov    ds:0x6ff2a95e,al
  40b0b6:	aam    0xf4
  40b0b8:	mov    ah,BYTE PTR ds:0x5759c5d5
  40b0be:	sub    eax,0xd78d71d6
  40b0c3:	jno    0x40b0ca
  40b0c5:	pop    eax
  40b0c6:	(bad)
  40b0c9:	rcl    dh,cl
  40b0cb:	add    DWORD PTR [ebp-0x8a97a6],edi
  40b0d1:	mov    dh,0xbe
  40b0d3:	mov    ch,0x4e
  40b0d5:	sbb    DWORD PTR [ecx-0x3883cc],0xa85ebfb2
  40b0df:	jg     0x40b076
  40b0e1:	xor    dl,BYTE PTR [edx]
  40b0e3:	xchg   bl,bl
  40b0e5:	cdq    
  40b0e6:	cli    
  40b0e7:	fidiv  WORD PTR [ebx]
  40b0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0ea:	lods   eax,DWORD PTR ds:[esi]
  40b0eb:	mov    ebx,0x301709af
  40b0f0:	push   edi
  40b0f1:	jns    0x40b11f
  40b0f3:	in     al,0x2f
  40b0f5:	cmp    DWORD PTR [ecx-0x18de70a8],ecx
  40b0fb:	mov    bl,0xa8
  40b0fd:	(bad)  
  40b0fe:	mov    ebx,0xdf27aa1a
  40b103:	xchg   BYTE PTR [edx+0x29],bl
  40b106:	cmp    eax,0x66ea8622
  40b10b:	icebp  
  40b10c:	scas   al,BYTE PTR es:[edi]
  40b10d:	cld    
  40b10e:	fmul   DWORD PTR [edi]
  40b110:	stos   BYTE PTR es:[edi],al
  40b111:	jmp    0xa74f:0x87318e87
  40b118:	gs pop ebx
  40b11a:	je     0x40b177
  40b11c:	stos   BYTE PTR es:[edi],al
  40b11d:	inc    eax
  40b11e:	aad    0xdc
  40b120:	cli    
  40b121:	gs inc edi
  40b123:	mov    ebp,0xb3ed8a4a
  40b128:	sti    
  40b129:	add    ebp,esi
  40b12b:	mov    ch,0x25
  40b12d:	scas   eax,DWORD PTR es:[edi]
  40b12e:	aam    0x88
  40b130:	in     al,dx
  40b131:	test   al,0xe0
  40b133:	xor    edi,DWORD PTR [eax-0x21]
  40b136:	das    
  40b137:	in     eax,0x21
  40b139:	pushf  
  40b13a:	icebp  
  40b13b:	into   
  40b13c:	mov    esi,0xa1466030
  40b141:	pop    esp
  40b142:	and    dh,BYTE PTR [esi-0x40]
  40b145:	retf   
  40b146:	cdq    
  40b147:	sti    
  40b148:	xor    edx,ebx
  40b14a:	loope  0x40b118
  40b14c:	cmp    eax,0xcd2f6ddd
  40b151:	pop    es
  40b152:	jno    0x40b0df
  40b154:	dec    BYTE PTR [esi]
  40b156:	je     0x40b1ba
  40b158:	shl    BYTE PTR [ebp-0x24a47888],1
  40b15e:	popf   
  40b15f:	push   0xce894651
  40b164:	fisub  DWORD PTR [eax]
  40b166:	int3   
  40b167:	mov    eax,ds:0x7b2d13ef
  40b16c:	or     DWORD PTR [ebp+eax*1-0x51b2b9c5],edi
  40b173:	jbe    0x40b143
  40b175:	mov    ch,0xfa
  40b177:	call   0xfe8a:0x80055922
  40b17e:	dec    esi
  40b17f:	jge    0x40b1e3
  40b181:	imul   ebx,DWORD PTR [ebx-0x222ab603],0x4c
  40b188:	gs (bad) 
  40b18a:	inc    ecx
  40b18b:	jecxz  0x40b1e5
  40b18d:	jmp    0xafc9:0x86ded18f
  40b194:	(bad)  
  40b195:	in     eax,0xc4
  40b197:	xchg   BYTE PTR [esi-0x119fd94e],dl
  40b19d:	sbb    DWORD PTR [edi-0x512af2a4],0x568f0a9
  40b1a7:	inc    ecx
  40b1a8:	add    eax,0xda32e7be
  40b1ad:	ins    BYTE PTR es:[edi],dx
  40b1ae:	mov    ds:0x431b9e2,al
  40b1b3:	repnz mov ds:0x64ddb7c6,al
  40b1b9:	sbb    DWORD PTR [esi],edx
  40b1bb:	cld    
  40b1bc:	jl     0x40b16f
  40b1be:	sahf   
  40b1bf:	bound  edi,QWORD PTR [ebx]
  40b1c1:	sub    al,0x35
  40b1c3:	mov    ecx,0xf6b4e29c
  40b1c8:	loope  0x40b236
  40b1ca:	jmp    0xf0c7310e
  40b1cf:	shr    al,1
  40b1d1:	mov    WORD PTR [edi+0x75008771],es
  40b1d7:	scas   eax,DWORD PTR es:[edi]
  40b1d8:	jp     0x40b20e
  40b1da:	popa   
  40b1db:	xor    edi,0xffffff8e
  40b1de:	xchg   edx,eax
  40b1df:	out    0x63,eax
  40b1e1:	cmc    
  40b1e2:	ins    BYTE PTR es:[edi],dx
  40b1e3:	in     eax,dx
  40b1e4:	jle    0x40b1e1
  40b1e6:	pop    ecx
  40b1e7:	es scas eax,DWORD PTR es:[edi]
  40b1e9:	test   BYTE PTR [edx+0x5a],0xfc
  40b1ed:	cli    
  40b1ee:	mov    DWORD PTR [ebp+0x2f],edx
  40b1f1:	pop    ebx
  40b1f2:	mov    DWORD PTR [edi],ebp
  40b1f4:	jecxz  0x40b1df
  40b1f6:	rol    bl,1
  40b1f8:	jno    0x40b244
  40b1fa:	lods   eax,DWORD PTR ds:[esi]
  40b1fb:	add    DWORD PTR [ecx-0x100091be],ebp
  40b201:	stos   BYTE PTR es:[edi],al
  40b202:	xor    DWORD PTR [edx+0x3d],ecx
  40b205:	leave  
  40b206:	mov    ch,0xbf
  40b208:	xchg   edi,eax
  40b20a:	cmp    al,0xc0
  40b20c:	push   ebp
  40b20d:	rcr    BYTE PTR [eax-0x64],0xe3
  40b211:	mov    esi,0x9ecfc06b
  40b216:	mov    esp,0x11f68fb9
  40b21b:	test   dl,ch
  40b21d:	sub    BYTE PTR [esi+0x6c8a2aab],bl
  40b223:	cld    
  40b224:	jns    0x40b232
  40b226:	jmp    0xabdd:0x224344d0
  40b22d:	pop    edi
  40b22e:	in     al,dx
  40b22f:	or     edx,DWORD PTR ds:[edi]
  40b232:	stos   DWORD PTR es:[edi],eax
  40b233:	out    dx,al
  40b234:	pop    ds
  40b235:	jge    0x40b1d2
  40b237:	sbb    al,0x8d
  40b239:	jne    0x40b255
  40b23b:	push   ebp
  40b23c:	ins    DWORD PTR es:[edi],dx
  40b23d:	mov    bh,0x2c
  40b23f:	push   edi
  40b240:	pop    ebx
  40b241:	js     0x40b1da
  40b243:	shr    BYTE PTR ds:0xd251a3c4,cl
  40b249:	out    dx,eax
  40b24a:	mov    bh,0x6e
  40b24c:	mov    al,0x76
  40b24e:	push   ebp
  40b24f:	fst    st(1)
  40b251:	dec    esp
  40b252:	and    eax,DWORD PTR [ebx]
  40b254:	pop    es
  40b255:	into   
  40b256:	retf   
  40b257:	fcmove st,st(7)
  40b259:	nop
  40b25a:	mov    ah,0xd7
  40b25c:	stos   DWORD PTR es:[edi],eax
  40b25d:	mov    ecx,0x34d65cd3
  40b262:	pop    ebx
  40b263:	fadd   QWORD PTR [eax+0x66]
  40b266:	mov    edi,0x357912a4
  40b26b:	pop    bp
  40b26d:	xlat   BYTE PTR ds:[ebx]
  40b26e:	and    ebx,DWORD PTR [eax+edi*2]
  40b271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b272:	test   BYTE PTR [ecx-0x74],dl
  40b275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b276:	pop    ebx
  40b277:	arpl   WORD PTR [edi+0x27243aaf],di
  40b27d:	add    eax,0xe1fb57ff
  40b282:	inc    edx
  40b283:	repz sbb DWORD PTR [eax],esi
  40b286:	push   ebp
  40b287:	xchg   BYTE PTR [edx],ah
  40b289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b28a:	adc    edi,DWORD PTR [esi-0x42a3ca3f]
  40b290:	mov    bl,0xb8
  40b292:	and    eax,0x42244c7f
  40b297:	jp     0x40b282
  40b299:	cmp    al,BYTE PTR [eax]
  40b29b:	out    dx,eax
  40b29c:	sub    BYTE PTR [esp+eax*2-0x1de59b52],dh
  40b2a3:	test   eax,0x3190066e
  40b2a8:	jo     0x40b327
  40b2aa:	out    dx,al
  40b2ab:	xchg   ebx,eax
  40b2ac:	mov    bh,0x4e
  40b2ae:	dec    ebp
  40b2af:	adc    edx,DWORD PTR [edi+0x727d3f16]
  40b2b5:	xchg   ebx,eax
  40b2b6:	mov    ds:0x85e67089,eax
  40b2bb:	adc    DWORD PTR [edx],0x1f
  40b2be:	mov    ds:0x478fa6d7,eax
  40b2c3:	lock push 0xffffffe7
  40b2c6:	xor    eax,0x67cc4cdd
  40b2cb:	fld    DWORD PTR [ebx+eiz*2+0x1feb1c93]
  40b2d2:	sbb    bh,BYTE PTR [ebx+0x62]
  40b2d5:	cli    
  40b2d6:	call   0x44b7:0x4113e78a
  40b2dd:	dec    esp
  40b2de:	(bad)  
  40b2df:	pop    ebx
  40b2e0:	sbb    bl,al
  40b2e2:	or     al,BYTE PTR [ecx+ebp*1+0x309cb081]
  40b2e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ea:	test   eax,0x58ee8e79
  40b2ef:	dec    edx
  40b2f0:	push   cs
  40b2f1:	add    al,0x49
  40b2f3:	sub    cl,BYTE PTR [esp+eiz*4+0x17]
  40b2f7:	and    al,0xb
  40b2f9:	pop    ebp
  40b2fa:	shl    ch,0xbc
  40b2fd:	idiv   eax
  40b2ff:	inc    esi
  40b300:	je     0x40b2df
  40b302:	fs mov dh,0x7b
  40b305:	sar    ecx,0xfa
  40b308:	imul   ecx,DWORD PTR [eax-0x6a],0x5c
  40b30c:	ins    BYTE PTR es:[edi],dx
  40b30d:	push   0x74
  40b30f:	lods   al,BYTE PTR ds:[esi]
  40b310:	mov    ah,0x15
  40b312:	add    al,0x9e
  40b314:	loope  0x40b373
  40b316:	cmp    bl,BYTE PTR [ecx+0x68]
  40b319:	jecxz  0x40b2d8
  40b31b:	(bad)  
  40b31c:	push   ebx
  40b31d:	mov    eax,ds:0x36e3ca5f
  40b322:	push   esp
  40b323:	mov    dl,BYTE PTR [ecx+0xa]
  40b326:	sub    cl,BYTE PTR [edi+0x1d46f346]
  40b32c:	sub    al,0x53
  40b32e:	mov    cs,WORD PTR fs:[edx+0x732b2b2a]
  40b335:	xchg   ebx,eax
  40b336:	pop    edi
  40b337:	fwait
  40b338:	loope  0x40b358
  40b33a:	sti    
  40b33b:	punpckhdq mm1,QWORD PTR [ebx]
  40b33e:	clc    
  40b33f:	xchg   BYTE PTR [edx+eax*2-0x34],bh
  40b343:	push   ebx
  40b344:	xor    BYTE PTR [edi-0x30],bl
  40b347:	or     al,0x66
  40b349:	and    eax,0x23cde88c
  40b34e:	ja     0x40b2d5
  40b350:	bound  esi,QWORD PTR [ebx+0x52990f76]
  40b356:	inc    esi
  40b357:	xor    eax,0x29c28d3c
  40b35c:	inc    eax
  40b35d:	dec    esp
  40b35e:	jae    0x40b39f
  40b360:	cmp    BYTE PTR [edx-0x7e],bh
  40b363:	add    ecx,ecx
  40b365:	dec    edx
  40b366:	pop    esi
  40b367:	scas   al,BYTE PTR es:[edi]
  40b368:	ss psllq mm2,mm3
  40b36c:	pop    es
  40b36d:	iret   
  40b36e:	mov    ebx,0xc6ee5d19
  40b373:	stc    
  40b374:	add    BYTE PTR [ebp+0xce34c0d],bh
  40b37a:	push   ebx
  40b37b:	shl    al,cl
  40b37d:	lds    ebx,FWORD PTR [edx-0x4f046342]
  40b383:	dec    edx
  40b384:	fadd   DWORD PTR [eax-0x15]
  40b387:	iret   
  40b388:	mov    ah,BYTE PTR [ecx-0x7b]
  40b38b:	fsubr  QWORD PTR ds:0x4462a12a
  40b391:	(bad)  
  40b393:	shl    BYTE PTR [edx-0x3a90c068],0xc9
  40b39a:	test   DWORD PTR [edi+0x44],ebp
  40b39d:	es push ebp
  40b39f:	loope  0x40b334
  40b3a1:	rol    esi,cl
  40b3a3:	imul   eax,DWORD PTR [eax],0xfffffffd
  40b3a6:	iret   
  40b3a7:	push   0x8390aa9a
  40b3ac:	sbb    ah,BYTE PTR ds:0x9ba8ac4d
  40b3b2:	les    ebx,FWORD PTR [ebx-0x7188a2ed]
  40b3b8:	cli    
  40b3b9:	repz rol DWORD PTR [edi+esi*4-0x74],cl
  40b3be:	cmp    DWORD PTR [esi],eax
  40b3c0:	mov    edi,0x6398db2f
  40b3c5:	cmp    edi,esp
  40b3c7:	cmp    bl,BYTE PTR [edx+0x6d]
  40b3ca:	mov    fs,WORD PTR [esi+0x1f]
  40b3cd:	mov    edx,0xb91a4f82
  40b3d2:	sub    DWORD PTR [ecx+0x342a1e71],esp
  40b3d8:	mov    DWORD PTR gs:[edx+0x13168128],esi
  40b3df:	outs   dx,DWORD PTR ds:[esi]
  40b3e0:	sub    DWORD PTR [ecx],ebx
  40b3e2:	dec    esi
  40b3e3:	stc    
  40b3e4:	jo     0x40b386
  40b3e6:	adc    DWORD PTR [edx-0x3734a5a8],esp
  40b3ec:	push   esp
  40b3ed:	mov    esp,0x51047ad5
  40b3f2:	push   esi
  40b3f3:	popf   
  40b3f4:	sbb    dl,dh
  40b3f6:	dec    ebx
  40b3f7:	sbb    esi,DWORD PTR [ebx+ebp*1-0x3a]
  40b3fb:	add    bl,bl
  40b3fd:	call   0xecfc:0x8054603e
  40b404:	cld    
  40b405:	je     0x40b415
  40b407:	sub    BYTE PTR [edx+edi*4-0x21fad149],al
  40b40e:	or     al,BYTE PTR [ebx-0x1d77f7cc]
  40b414:	and    ebp,DWORD PTR ds:0xdd9d274a
  40b41a:	mov    dh,0x9c
  40b41c:	push   0x20
  40b41e:	jecxz  0x40b431
  40b420:	dec    esi
  40b421:	push   ebx
  40b422:	or     al,0xc9
  40b424:	inc    ecx
  40b425:	retf   
  40b426:	mov    ebp,0x8a07c097
  40b42b:	scas   eax,DWORD PTR es:[edi]
  40b42c:	(bad)  
  40b42d:	add    BYTE PTR [edi],bl
  40b42f:	pusha  
  40b430:	push   ds
  40b431:	jg     0x40b3c9
  40b433:	iret   
  40b434:	add    DWORD PTR [esp+eax*1+0x8c8a489],eax
  40b43b:	test   BYTE PTR [edx],ah
  40b43d:	pop    esi
  40b43e:	sub    al,0xcc
  40b440:	xchg   esi,eax
  40b441:	pop    es
  40b442:	xchg   BYTE PTR [edx-0x2f],dl
  40b445:	loop   0x40b4b8
  40b447:	xor    eax,0xdefc11f3
  40b44c:	ins    BYTE PTR es:[edi],dx
  40b44d:	add    esp,ebx
  40b44f:	cwde   
  40b450:	inc    ecx
  40b451:	cli    
  40b452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b453:	loopne 0x40b3f1
  40b455:	jge    0x40b441
  40b457:	mov    bl,0x23
  40b459:	inc    ecx
  40b45a:	sti    
  40b45b:	pmullw mm5,QWORD PTR [esi+ebx*8]
  40b45f:	retf   
  40b460:	ror    BYTE PTR [edx],0xe0
  40b463:	test   dh,bh
  40b465:	push   ds
  40b466:	mov    ecx,0xfbb15e20
  40b46b:	xlat   BYTE PTR ds:[ebx]
  40b46c:	xor    ebx,DWORD PTR [eax]
  40b46e:	popf   
  40b46f:	cli    
  40b470:	scas   al,BYTE PTR es:[edi]
  40b471:	mov    ebp,esp
  40b473:	mov    dh,0x96
  40b475:	sub    BYTE PTR [ecx+0x12],ah
  40b478:	ror    BYTE PTR [ebp+0x1103bc1c],1
  40b47e:	xchg   ebx,eax
  40b47f:	lds    edi,FWORD PTR [esi+0x62]
  40b482:	push   ecx
  40b483:	pusha  
  40b484:	push   esi
  40b485:	imul   edi,DWORD PTR [esi-0x44],0x48
  40b489:	fidivr WORD PTR [eax+0x67ade5f6]
  40b48f:	outs   dx,BYTE PTR ds:[esi]
  40b490:	les    ecx,FWORD PTR [edx]
  40b492:	inc    ebx
  40b493:	inc    esi
  40b494:	das    
  40b495:	pop    ss
  40b496:	sbb    edi,ebx
  40b498:	jb     0x40b4a3
  40b49a:	ins    DWORD PTR es:[edi],dx
  40b49b:	xor    DWORD PTR [eax-0x7],0x562cc083
  40b4a2:	imul   edx,DWORD PTR [ebx-0x6045ab1d],0xffffffa2
  40b4a9:	jb     0x40b47a
  40b4ab:	retf   0x5cd6
  40b4ae:	aad    0x98
  40b4b0:	and    bh,ch
  40b4b2:	dec    ebp
  40b4b3:	sahf   
  40b4b4:	pushf  
  40b4b5:	mov    ebx,0x664d0cf1
  40b4ba:	popa   
  40b4bb:	arpl   WORD PTR [ebp-0x34a16da1],di
  40b4c1:	arpl   bx,di
  40b4c3:	bound  ecx,QWORD PTR [ecx]
  40b4c5:	call   0x711bdd70
  40b4ca:	or     BYTE PTR gs:[edx-0x733bad4c],al
  40b4d1:	xor    eax,0xd74809ea
  40b4d6:	mov    DWORD PTR [esp-0x2cab33e9],ebp
  40b4dd:	shr    DWORD PTR [edx-0x14],1
  40b4e0:	pusha  
  40b4e1:	pop    DWORD PTR [edi+0x6c]
  40b4e4:	jecxz  0x40b472
  40b4e6:	gs aaa 
  40b4e8:	paddb  mm7,QWORD PTR [eax]
  40b4eb:	mov    al,ds:0x19c0299b
  40b4f0:	push   eax
  40b4f1:	xchg   edx,eax
  40b4f2:	inc    eax
  40b4f3:	mov    ds:0x5212e507,eax
  40b4f8:	inc    edi
  40b4f9:	or     DWORD PTR [edx-0x253fc798],edi
  40b4ff:	jb     0x40b4f7
  40b501:	out    0xb7,eax
  40b503:	ins    DWORD PTR es:[edi],dx
  40b504:	lock add ebx,DWORD PTR [ebx-0x7f67ca80]
  40b50b:	push   esp
  40b50c:	mov    ?,WORD PTR [ebx+0x1d]
  40b50f:	cwde   
  40b510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b511:	fcmovnbe st,st(6)
  40b513:	xlat   BYTE PTR ds:[ebx]
  40b514:	xchg   esi,eax
  40b515:	sub    esi,DWORD PTR [ecx+ecx*2-0x38]
  40b519:	scas   eax,DWORD PTR es:[edi]
  40b51a:	je     0x40b4ab
  40b51c:	sub    bl,al
  40b51e:	or     bl,BYTE PTR [edi+0x4a1596b9]
  40b524:	cmp    dh,BYTE PTR [ebx]
  40b526:	mov    ebx,0x4eaeb275
  40b52b:	xor    al,0x5f
  40b52d:	pop    ebp
  40b52e:	sbb    ebp,DWORD PTR [esi+0x45170799]
  40b534:	jns    0x40b4fe
  40b536:	mov    eax,ds:0x11a8235c
  40b53b:	sub    al,BYTE PTR [ebx+0x46]
  40b53e:	(bad)  
  40b53f:	inc    esp
  40b540:	sahf   
  40b541:	(bad)  [esi-0x80]
  40b544:	jl     0x40b590
  40b546:	cmp    al,0x3d
  40b548:	stos   BYTE PTR es:[edi],al
  40b549:	ret    0xe487
  40b54c:	pop    esp
  40b54d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b54e:	mov    esi,0xddc31da6
  40b553:	into   
  40b554:	je     0x40b56f
  40b556:	adc    al,0x50
  40b558:	fadd   QWORD PTR [ebx+0x26900ce4]
  40b55e:	add    BYTE PTR [eax],0x63
  40b561:	jo     0x40b4f9
  40b563:	fucomip st,st(0)
  40b565:	lods   al,BYTE PTR ds:[esi]
  40b566:	inc    esi
  40b567:	int    0xfa
  40b569:	call   0x9c06a4cf
  40b56e:	aaa    
  40b56f:	aaa    
  40b570:	fwait
  40b571:	test   eax,0x330dc6dc
  40b576:	shl    DWORD PTR [edx-0x9],1
  40b579:	jle    0x40b55b
  40b57b:	xchg   DWORD PTR [eax+eax*1],edx
  40b57e:	scas   eax,DWORD PTR es:[edi]
  40b57f:	push   esi
  40b580:	test   eax,0x89f0fab2
  40b585:	jne    0x40b5bd
  40b587:	adc    DWORD PTR [ebx+eiz*8+0x64],ecx
  40b58b:	or     al,0x8c
  40b58d:	shl    BYTE PTR [ebx-0x25],1
  40b590:	cmp    bl,dl
  40b592:	xchg   edx,eax
  40b593:	mov    ecx,0xd2ff3884
  40b598:	in     eax,0xec
  40b59a:	push   esi
  40b59b:	adc    al,0xed
  40b59d:	and    ecx,DWORD PTR [esi+0x55a2761]
  40b5a3:	fnstenv [esi+0x41232849]
  40b5a9:	jo     0x40b5cd
  40b5ab:	jno    0x40b5ca
  40b5ad:	inc    ebp
  40b5ae:	mov    eax,ds:0x41748963
  40b5b3:	retf   0xab6a
  40b5b6:	mov    cl,0xc7
  40b5b8:	ins    DWORD PTR es:[edi],dx
  40b5b9:	dec    esi
  40b5ba:	popa   
  40b5bb:	adc    dh,dh
  40b5bd:	sbb    DWORD PTR [edx],edx
  40b5bf:	or     ah,cl
  40b5c1:	jns    0x40b616
  40b5c3:	mov    edi,0xbaa877b3
  40b5c8:	loopne 0x40b646
  40b5ca:	dec    ebp
  40b5cb:	js     0x40b5e7
  40b5cd:	or     DWORD PTR [esi-0x63da94bb],esi
  40b5d3:	test   al,0xd
  40b5d5:	in     al,0xcd
  40b5d7:	bound  ecx,QWORD PTR [ebx]
  40b5d9:	xor    BYTE PTR [ecx+0x3069003d],bh
  40b5df:	adc    eax,0xac8469f
  40b5e4:	or     BYTE PTR [eax],0x4b
  40b5e7:	popf   
  40b5e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e9:	push   ecx
  40b5ea:	xor    BYTE PTR [esi-0x2f],dh
  40b5ed:	jp     0x40b5ec
  40b5ef:	jo     0x40b66e
  40b5f1:	sti    
  40b5f2:	jno    0x40b671
  40b5f4:	dec    ebp
  40b5f5:	int3   
  40b5f6:	cmp    esi,DWORD PTR [ecx]
  40b5f8:	cli    
  40b5f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5fa:	sbb    esi,DWORD PTR [ebx]
  40b5fc:	movaps xmm0,XMMWORD PTR [eax]
  40b5ff:	rcl    DWORD PTR [ebp-0x79],cl
  40b602:	jge    0x40b58c
  40b604:	mov    ds:0x97f75c5c,eax
  40b609:	loopne 0x40b5ba
  40b60b:	das    
  40b60c:	mov    bl,0x11
  40b60e:	imul   ebp,edi,0xde435eb6
  40b614:	fnsave [edi+0x23d37c80]
  40b61a:	xor    eax,DWORD PTR [ebx+0x6a]
  40b61d:	out    0x35,eax
  40b61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b620:	xlat   BYTE PTR ds:[ebx]
  40b621:	and    eax,0xc701167c
  40b626:	xchg   ebx,eax
  40b627:	jecxz  0x40b5f5
  40b629:	inc    ecx
  40b62a:	lods   eax,DWORD PTR ds:[esi]
  40b62b:	aad    0xfd
  40b62d:	popf   
  40b62e:	das    
  40b62f:	dec    edx
  40b630:	stc    
  40b631:	popf   
  40b632:	(bad)  
  40b633:	mov    ds:0x21cf10f7,al
  40b638:	sbb    esp,esi
  40b63a:	and    BYTE PTR [ebx-0x2f4ac0bb],bl
  40b640:	loopne 0x40b69f
  40b642:	dec    esi
  40b643:	in     al,0xe2
  40b645:	jp     0x40b69b
  40b647:	xor    BYTE PTR ds:0xb1e08e68,ah
  40b64d:	(bad)  
  40b64e:	push   esi
  40b64f:	stos   BYTE PTR es:[edi],al
  40b650:	add    BYTE PTR [eax+0x53c71fe6],ah
  40b656:	mov    ch,0x24
  40b658:	pop    esi
  40b659:	test   DWORD PTR [edx+0x7d],edi
  40b65c:	out    dx,al
  40b65d:	mov    ss,ebx
  40b65f:	scas   al,BYTE PTR es:[edi]
  40b660:	ret    
  40b661:	pop    esp
  40b662:	out    0x34,eax
  40b664:	xchg   DWORD PTR [edi+0x34848198],esi
  40b66a:	xor    edi,DWORD PTR [ebx]
  40b66c:	aas    
  40b66d:	not    BYTE PTR [ecx+0x199067ef]
  40b673:	mov    BYTE PTR ss:[bp+0x7ed5],dh
  40b679:	pop    edx
  40b67a:	js     0x40b615
  40b67c:	imul   ecx,DWORD PTR [eax-0x77cb0ab2],0xffffff8a
  40b683:	push   esp
  40b684:	inc    eax
  40b685:	mov    ds,WORD PTR [edi-0x2b]
  40b688:	pop    ebp
  40b689:	test   DWORD PTR [ebx-0x5a],esp
  40b68c:	xlat   BYTE PTR ds:[ebx]
  40b68d:	std    
  40b68e:	(bad)  
  40b68f:	in     eax,0x69
  40b691:	pusha  
  40b692:	ror    DWORD PTR [ecx],1
  40b694:	cld    
  40b695:	ret    
  40b696:	je     0x40b648
  40b698:	pop    ss
  40b699:	(bad)  
  40b69b:	or     DWORD PTR [ebp+0x5a871e56],ecx
  40b6a1:	push   ss
  40b6a2:	inc    ebp
  40b6a3:	test   eax,ebp
  40b6a5:	cmc    
  40b6a6:	adc    ecx,edi
  40b6a8:	mov    eax,0xd0a4464b
  40b6ad:	lock add dl,BYTE PTR [ebx]
  40b6b0:	push   0xffffffc5
  40b6b2:	stos   BYTE PTR es:[edi],al
  40b6b3:	les    ebx,FWORD PTR [ebx+0x12]
  40b6b6:	clc    
  40b6b7:	aaa    
  40b6b8:	dec    ebx
  40b6b9:	jmp    0xf3e7:0x8e57f233
  40b6c0:	xchg   bl,ah
  40b6c2:	mov    ah,0xdf
  40b6c4:	popa   
  40b6c5:	inc    ebp
  40b6c6:	pop    esi
  40b6c7:	adc    al,0xa8
  40b6c9:	xor    ebp,DWORD PTR [eax+0x75e6c9e0]
  40b6cf:	xor    BYTE PTR [edi-0x3aa654a],ah
  40b6d5:	rol    DWORD PTR [edi],1
  40b6d7:	mov    ss,WORD PTR [edi-0x34]
  40b6da:	cmc    
  40b6db:	push   esp
  40b6dc:	lahf   
  40b6dd:	and    BYTE PTR [eax+eax*4+0x3e6384de],bh
  40b6e4:	add    ecx,DWORD PTR [ecx+0x2f7356c1]
  40b6ea:	fidivr DWORD PTR [ebx+0x30a55cf4]
  40b6f0:	inc    eax
  40b6f1:	add    eax,0x81681345
  40b6f6:	bound  edx,QWORD PTR [esi+0x4d]
  40b6f9:	pushf  
  40b6fa:	mov    al,BYTE PTR [edi+0xc39d38e]
  40b700:	imul   eax,DWORD PTR ss:[ecx],0x32a5a85e
  40b707:	js     0x40b705
  40b709:	sbb    al,0xed
  40b70b:	out    dx,al
  40b70c:	jmp    eax
  40b70e:	leave  
  40b70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b710:	test   eax,0x240c4cdf
  40b715:	ins    BYTE PTR es:[edi],dx
  40b716:	cmp    eax,0x9a46d014
  40b71b:	cwde   
  40b71c:	je     0x40b718
  40b71e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b71f:	inc    edi
  40b720:	jns    0x40b6eb
  40b722:	jl     0x40b729
  40b724:	scas   eax,DWORD PTR es:[edi]
  40b725:	aad    0x82
  40b727:	mov    ebx,0x24bdd275
  40b72c:	aaa    
  40b72d:	(bad)  
  40b72e:	cmp    bl,al
  40b730:	mov    dh,BYTE PTR [ebx+0x690f7a77]
  40b736:	repnz in al,0x45
  40b739:	pusha  
  40b73a:	cwde   
  40b73b:	cld    
  40b73c:	dec    edx
  40b73d:	jb     0x40b726
  40b73f:	push   0xffffffa8
  40b741:	repz loope 0x40b6d9
  40b744:	inc    ebx
  40b745:	test   al,0xb1
  40b747:	and    ah,bl
  40b749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b74a:	mov    eax,ds:0xc6ae0bd1
  40b74f:	and    BYTE PTR [esi+0x17],ch
  40b752:	test   al,0xca
  40b754:	js     0x40b780
  40b756:	rcl    BYTE PTR ds:0xa6f13f3f,0xf3
  40b75d:	push   esp
  40b75e:	(bad)  
  40b75f:	cmp    al,0x2
  40b761:	pop    esi
  40b762:	mov    ebx,0x710b87ec
  40b767:	or     eax,0x3b818c31
  40b76c:	dec    DWORD PTR [ebx]
  40b76e:	push   0x55dcfdf1
  40b773:	cmp    al,0x5b
  40b775:	sbb    esp,DWORD PTR [ebx]
  40b777:	mov    BYTE PTR [ecx],bl
  40b779:	retf   0xf6ab
  40b77c:	xchg   ecx,eax
  40b77d:	inc    eax
  40b77e:	mov    bh,BYTE PTR [ebx+0x75]
  40b781:	ss pop ebx
  40b783:	pop    ax
  40b785:	outs   dx,BYTE PTR ds:[esi]
  40b786:	adc    ah,bh
  40b788:	sysenter 
  40b78a:	(bad)  
  40b78b:	mov    ebx,0x58ee18f0
  40b790:	test   BYTE PTR [edi],al
  40b792:	mov    edi,0x8c4fee5e
  40b797:	aam    0x2a
  40b799:	(bad)  
  40b79a:	push   esi
  40b79b:	pop    eax
  40b79c:	pop    ss
  40b79d:	mov    DWORD PTR [ecx+0xc],ebx
  40b7a0:	jbe    0x40b7ff
  40b7a2:	adc    dh,BYTE PTR [esi+0x7004a89a]
  40b7a8:	idiv   DWORD PTR [ecx-0x5a74c635]
  40b7ae:	push   esp
  40b7af:	jbe    0x40b7ae
  40b7b1:	pop    esp
  40b7b2:	jmp    0x1483:0xbe4c8710
  40b7b9:	xor    eax,0x27cb6eca
  40b7be:	rcl    ch,0xb0
  40b7c1:	lahf   
  40b7c2:	inc    ebx
  40b7c3:	popf   
  40b7c4:	and    DWORD PTR [ebp+0x6de9d54],edi
  40b7ca:	out    dx,al
  40b7cb:	(bad)  
  40b7cc:	jo     0x40b83f
  40b7ce:	retf   
  40b7cf:	out    dx,eax
  40b7d0:	mov    ebx,0x825cee85
  40b7d5:	mov    ch,0x60
  40b7d7:	test   al,0xa1
  40b7d9:	emms   
  40b7db:	add    esi,DWORD PTR [ecx+0x7d]
  40b7de:	loop   0x40b779
  40b7e0:	xor    DWORD PTR [edx],esp
  40b7e2:	adc    BYTE PTR [esi+0x6d],ch
  40b7e5:	push   ecx
  40b7e6:	fwait
  40b7e7:	ret    0x94f0
  40b7ea:	sar    BYTE PTR [ebp+0x15],0xa9
  40b7ee:	mov    ds:0x88d3d65d,al
  40b7f3:	jmp    0x19f6:0xdffa3e1f
  40b7fa:	idiv   DWORD PTR [edi-0x56]
  40b7fd:	sub    al,ah
  40b7ff:	loope  0x40b855
  40b801:	push   ecx
  40b802:	inc    edx
  40b803:	mov    bh,0x79
  40b805:	or     eax,0x7c060a6e
  40b80a:	sahf   
  40b80b:	mov    ah,0x9f
  40b80d:	cmc    
  40b80e:	out    dx,eax
  40b80f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b810:	lds    edx,FWORD PTR [ebx-0x402070c2]
  40b816:	xor    dh,BYTE PTR [ebx]
  40b818:	test   al,0x26
  40b81a:	and    al,0x69
  40b81c:	out    0x93,al
  40b81e:	mov    ah,BYTE PTR [edi+0x637eba9e]
  40b824:	mov    WORD PTR [edi+0x44df4a08],cs
  40b82a:	push   ss
  40b82b:	and    BYTE PTR [edx-0x53],dl
  40b82e:	xor    edi,DWORD PTR [ebx+0x52]
  40b831:	dec    ecx
  40b832:	cmp    al,0xc8
  40b834:	test   eax,0x44fa65a8
  40b839:	xchg   ebp,eax
  40b83a:	dec    BYTE PTR [ebx-0x3c]
  40b83d:	(bad)  
  40b83e:	and    edx,DWORD PTR [edi-0xf9d54a5]
  40b844:	mov    ch,0x27
  40b846:	mov    esi,0xe5988b2b
  40b84b:	test   BYTE PTR [edi],dh
  40b84d:	inc    edx
  40b84e:	fcom   QWORD PTR [esi-0x25]
  40b851:	retf   0x3dd0
  40b854:	push   ebx
  40b855:	div    BYTE PTR [ecx+edx*4+0xbdcc4b9]
  40b85c:	fsub   QWORD PTR [ecx+eiz*2-0xc]
  40b860:	mov    eax,0x30cf7e1a
  40b865:	ss xchg ebp,eax
  40b867:	test   BYTE PTR [edi+0x13],cl
  40b86a:	mov    edi,0xa2a7a8d7
  40b86f:	and    edx,0x85e707de
  40b875:	jmp    0xfe742c81
  40b87a:	ret    0xc625
  40b87d:	adc    eax,0xefb9c7ec
  40b882:	dec    eax
  40b883:	mov    al,BYTE PTR [esi]
  40b885:	add    ah,BYTE PTR [edx]
  40b887:	xor    eax,DWORD PTR [ebx+0x66]
  40b88a:	mov    cl,0x83
  40b88c:	cmp    BYTE PTR [edx+0x34],dh
  40b88f:	ja     0x40b892
  40b891:	aad    0x44
  40b893:	mov    eax,ds:0xfccbae41
  40b898:	aam    0xed
  40b89a:	jle    0x40b8e9
  40b89c:	imul   ebp,eax,0x24048683
  40b8a2:	dec    edx
  40b8a3:	adc    BYTE PTR [ecx-0x66],ch
  40b8a6:	mov    bh,0x8e
  40b8a8:	inc    edx
  40b8a9:	or     eax,0xb2ae591f
  40b8ae:	adc    DWORD PTR [eax],esi
  40b8b0:	push   esi
  40b8b1:	ret    
  40b8b2:	dec    esp
  40b8b3:	sti    
  40b8b4:	pop    es
  40b8b5:	cmc    
  40b8b6:	test   eax,0xfd207209
  40b8bb:	imul   ebx,DWORD PTR [esi+0x63cee9f8],0x2c42e885
  40b8c5:	loop   0x40b868
  40b8c7:	xlat   BYTE PTR ds:[ebx]
  40b8c8:	pop    edx
  40b8c9:	in     al,0xa0
  40b8cb:	add    eax,DWORD PTR [ebp-0x66a0cda1]
  40b8d1:	ins    DWORD PTR es:[edi],dx
  40b8d2:	ja     0x40b8ee
  40b8d4:	outs   dx,BYTE PTR ds:[esi]
  40b8d5:	fcomp  DWORD PTR [esi]
  40b8d7:	push   ss
  40b8d8:	add    BYTE PTR [edx+0x5c],0x23
  40b8dc:	adc    ecx,DWORD PTR [esi-0x1774a62b]
  40b8e2:	add    al,0x61
  40b8e4:	std    
  40b8e5:	pusha  
  40b8e6:	and    BYTE PTR [ebx-0x1b],0x79
  40b8ea:	push   ecx
  40b8eb:	or     cl,dl
  40b8ed:	mov    esi,0xf8d6dd90
  40b8f2:	dec    esi
  40b8f3:	popf   
  40b8f4:	aas    
  40b8f5:	mov    al,ds:0x48f61075
  40b8fa:	mov    ah,0x11
  40b8fc:	mov    edi,edi
  40b8fe:	lods   al,BYTE PTR ds:[esi]
  40b8ff:	inc    ecx
  40b900:	adc    dl,cl
  40b902:	lahf   
  40b903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b904:	push   0xad5d1d80
  40b909:	cmp    DWORD PTR [eax-0x2],ecx
  40b90c:	push   esi
  40b90d:	mov    ebx,0x1bb0a9fb
  40b912:	ins    BYTE PTR es:[edi],dx
  40b913:	ror    BYTE PTR [esi+0x1c711919],0x79
  40b91a:	xor    eax,0x8007aa1c
  40b91f:	fs xchg edi,eax
  40b921:	dec    esi
  40b922:	push   esi
  40b923:	xor    DWORD PTR [edi-0x4b],edi
  40b926:	in     al,dx
  40b927:	and    al,0xca
  40b929:	cld    
  40b92a:	cmp    al,0x10
  40b92c:	dec    edx
  40b92d:	jns    0x40b8af
  40b92f:	ja     0x40b8fc
  40b931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b932:	inc    ebx
  40b933:	push   eax
  40b934:	test   BYTE PTR [edi],cl
  40b936:	lahf   
  40b937:	jmp    0x65107185
  40b93c:	mov    esi,0xab413a28
  40b941:	pop    ebx
  40b942:	mov    cl,0x87
  40b944:	rcr    DWORD PTR [edi],0xd0
  40b947:	sub    al,0x5c
  40b949:	test   al,0x84
  40b94b:	sbb    edx,edx
  40b94d:	sbb    DWORD PTR [edi+eiz*1],edx
  40b950:	arpl   WORD PTR [esi-0x3a],sp
  40b953:	cli    
  40b954:	lods   eax,DWORD PTR ds:[esi]
  40b955:	lea    esp,[edx]
  40b957:	or     edi,DWORD PTR [esi]
  40b959:	xchg   ebx,ebx
  40b95b:	rcr    BYTE PTR ds:0x80633a05,1
  40b961:	out    dx,al
  40b962:	(bad)  
  40b963:	cmp    ebx,ecx
  40b965:	retf   
  40b966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b967:	repnz outs dx,DWORD PTR ds:[esi]
  40b969:	daa    
  40b96a:	fcmove st,st(7)
  40b96c:	pop    edx
  40b96d:	sub    dl,dl
  40b96f:	das    
  40b970:	sub    DWORD PTR [esi-0xb],edi
  40b973:	xchg   DWORD PTR [ecx-0x18],esp
  40b976:	mov    cs,WORD PTR ds:[ecx]
  40b979:	(bad)  
  40b97a:	mov    ds:0x2eabcbb0,eax
  40b97f:	adc    bl,al
  40b981:	push   eax
  40b982:	call   0xc04:0x120bf59a
  40b989:	ret    0xe39f
  40b98c:	jne    0x40b9d7
  40b98e:	pop    esp
  40b98f:	(bad)  
  40b990:	shl    BYTE PTR [ecx],1
  40b992:	ficomp WORD PTR [ecx+0xa8fd1c2]
  40b998:	or     esp,DWORD PTR [ecx+eax*2+0x23]
  40b99c:	popa   
  40b99d:	xor    DWORD PTR [ecx-0x8ec4d1e],edx
  40b9a3:	sub    esi,DWORD PTR [esi+0x1171f4ce]
  40b9a9:	mov    DWORD PTR [esi-0x65c5adb2],eax
  40b9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b0:	inc    edi
  40b9b1:	les    edi,FWORD PTR [ebx+0x1ebc9395]
  40b9b7:	mov    bl,0x92
  40b9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9ba:	or     al,0x13
  40b9bc:	and    BYTE PTR [ecx+esi*4],ah
  40b9bf:	dec    esi
  40b9c0:	and    al,0xd8
  40b9c2:	jno    0x40b99e
  40b9c4:	enter  0x2667,0x15
  40b9c8:	arpl   WORD PTR [edx+0xf],bx
  40b9cb:	jnp    0x40ba27
  40b9cd:	cdq    
  40b9ce:	jns    0x40ba0d
  40b9d0:	pop    ebp
  40b9d1:	sub    ebx,edx
  40b9d3:	or     al,0xd3
  40b9d5:	iret   
  40b9d6:	rol    DWORD PTR [edx-0x43b3160e],1
  40b9dc:	cs sub al,0x7c
  40b9df:	mov    ebx,0xd178e5b
  40b9e4:	pop    ebp
  40b9e5:	xchg   esi,eax
  40b9e6:	mov    es,esp
  40b9e8:	fldcw  WORD PTR [esp+ecx*2]
  40b9eb:	outs   dx,BYTE PTR ds:[esi]
  40b9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9ed:	xchg   bh,dh
  40b9ef:	clc    
  40b9f0:	mov    dl,BYTE PTR [ebx]
  40b9f2:	in     eax,dx
  40b9f3:	pop    ebx
  40b9f4:	lods   eax,DWORD PTR ds:[esi]
  40b9f5:	dec    edx
  40b9f6:	dec    eax
  40b9f7:	push   ebp
  40b9f8:	arpl   WORD PTR [edx],cx
  40b9fa:	test   eax,0xc1c205f5
  40b9ff:	lods   eax,DWORD PTR ds:[esi]
  40ba00:	mov    ds:0xb02739ea,al
  40ba05:	mov    eax,ds:0x963ab719
  40ba0a:	sub    bl,BYTE PTR [ebp-0x1fd81ec3]
  40ba10:	mov    dl,0xf1
  40ba12:	scas   eax,DWORD PTR es:[edi]
  40ba13:	std    
  40ba14:	and    DWORD PTR [eax-0x3c],esp
  40ba17:	mov    edi,0x17ce45a5
  40ba1c:	jp     0x40ba0c
  40ba1e:	je     0x40b9ae
  40ba20:	sbb    esi,DWORD PTR [edi]
  40ba22:	shr    BYTE PTR [ecx-0x3b5a5de],1
  40ba28:	mov    dh,0x3
  40ba2a:	retf   
  40ba2b:	stc    
  40ba2c:	sub    ch,BYTE PTR [edx+0x75f54a3c]
  40ba32:	popf   
  40ba33:	sub    al,0xc9
  40ba35:	push   0x73
  40ba37:	cld    
  40ba38:	test   al,0x80
  40ba3a:	ja     0x40ba23
  40ba3c:	push   ds
  40ba3d:	lock outs dx,BYTE PTR ds:[esi]
  40ba3f:	fs mov eax,0xb5ac6d0f
  40ba45:	inc    edx
  40ba46:	push   esi
  40ba47:	adc    BYTE PTR [ecx+0x56830ba5],bl
  40ba4d:	in     al,dx
  40ba4e:	addr16 in eax,dx
  40ba50:	cwde   
  40ba51:	adc    DWORD PTR [edx+eax*1],ebx
  40ba54:	fs loopne 0x40ba5c
  40ba57:	mov    ebp,0xf663bbc7
  40ba5c:	lds    ecx,FWORD PTR [ebp+0x77530147]
  40ba62:	mov    edx,0x7190aed
  40ba67:	es clc 
  40ba69:	jecxz  0x40bab8
  40ba6b:	push   es
  40ba6c:	(bad)  
  40ba6d:	fistp  WORD PTR ss:[eax-0x11578b51]
  40ba74:	jns    0x40ba81
  40ba76:	les    ebp,FWORD PTR [esi]
  40ba78:	mov    ebx,0x5450b356
  40ba7d:	repz sar esi,cl
  40ba80:	sbb    ebp,eax
  40ba82:	sbb    al,0x99
  40ba84:	dec    esi
  40ba85:	jle    0x40bb03
  40ba87:	cmp    bl,BYTE PTR [ebx]
  40ba89:	or     eax,0xa693bb6a
  40ba8e:	jnp    0x40ba64
  40ba90:	jno    0x40ba2d
  40ba92:	jg     0x40ba18
  40ba94:	cs je  0x40ba6b
  40ba97:	dec    esi
  40ba98:	and    dh,cl
  40ba9a:	in     al,0x70
  40ba9c:	xlat   BYTE PTR ds:[ebx]
  40ba9d:	jmp    ecx
  40ba9f:	or     eax,DWORD PTR [ecx+0x23]
  40baa2:	jmp    0x71e46b42
  40baa7:	xlat   BYTE PTR ds:[ebx]
  40baa8:	cmp    eax,0xe5159ce5
  40baad:	out    dx,eax
  40baae:	pop    edx
  40baaf:	inc    ecx
  40bab0:	and    bh,BYTE PTR [edi+eax*4-0x4a45dad7]
  40bab7:	xchg   ecx,eax
  40bab8:	jecxz  0x40ba41
  40baba:	cmp    ebp,DWORD PTR [edi-0x74d99628]
  40bac0:	or     BYTE PTR [edx-0x64fc0f9b],dl
  40bac6:	arpl   WORD PTR [ebp+0x21],si
  40bac9:	outs   dx,BYTE PTR ds:[esi]
  40baca:	cmp    ebp,DWORD PTR [eax-0x1d]
  40bacd:	sub    al,0x3a
  40bacf:	inc    esp
  40bad0:	cli    
  40bad1:	push   edi
  40bad2:	iret   
  40bad3:	mov    edx,0x2d6619fd
  40bad8:	jmp    0x6abc6617
  40badd:	test   DWORD PTR [eax+0x1422f772],ebx
  40bae3:	sahf   
  40bae4:	pop    eax
  40bae5:	aam    0xe1
  40bae7:	retf   0xcf58
  40baea:	mov    ebp,0x905bb02a
  40baef:	xor    BYTE PTR ds:0x89cd8c7a,al
  40baf5:	mov    dh,0xc5
  40baf7:	pop    edi
  40baf8:	push   cs
  40baf9:	out    0x2,al
  40bafb:	adc    DWORD PTR [ebp+0x71],eax
  40bafe:	and    BYTE PTR [ecx+0x56cf3220],bh
  40bb04:	pop    ds
  40bb05:	inc    ebx
  40bb06:	scas   al,BYTE PTR es:[edi]
  40bb07:	(bad)  
  40bb08:	repnz leave 
  40bb0a:	mov    bh,0x6b
  40bb0c:	stos   BYTE PTR es:[edi],al
  40bb0d:	jbe    0x40baba
  40bb0f:	mov    BYTE PTR [edx],0xeb
  40bb12:	add    al,0x4c
  40bb14:	bound  esi,QWORD PTR [ebx+0x265614ee]
  40bb1a:	push   esi
  40bb1b:	sbb    al,0x1a
  40bb1d:	ins    BYTE PTR es:[edi],dx
  40bb1e:	mov    dl,BYTE PTR [eax-0x11]
  40bb21:	xlat   BYTE PTR ds:[ebx]
  40bb22:	pushf  
  40bb23:	mov    eax,ds:0x94fa3b20
  40bb28:	xor    eax,0xc9d46d8d
  40bb2d:	mov    ebx,0xbcedb32d
  40bb32:	jbe    0x40bace
  40bb34:	mov    DWORD PTR [esi+ecx*2-0x65],ebx
  40bb38:	sub    bh,dh
  40bb3a:	mov    edx,0xfaca28a2
  40bb3f:	ret    0x2e0f
  40bb42:	test   DWORD PTR [ecx+ebp*1],ebx
  40bb45:	sbb    eax,0x2f26a7ea
  40bb4a:	fwait
  40bb4b:	pop    ecx
  40bb4c:	jle    0x40bbbc
  40bb4e:	push   ds
  40bb4f:	jmp    0xaa1c:0x895f6075
  40bb56:	or     esp,DWORD PTR [edi+0x7f]
  40bb59:	xor    BYTE PTR [edi+esi*1-0x3f],al
  40bb5d:	mov    edx,0xa22a89b1
  40bb62:	fcomp  DWORD PTR [eax+edi*8-0x4ca9cb89]
  40bb69:	mov    bh,0x7a
  40bb6b:	dec    edx
  40bb6c:	xlat   BYTE PTR ds:[ebx]
  40bb6d:	gs or  cl,ch
  40bb70:	pop    ecx
  40bb71:	sar    DWORD PTR [eax+0x4a],cl
  40bb74:	jne    0x40bb19
  40bb76:	pop    ds
  40bb77:	rcr    DWORD PTR [eax],cl
  40bb79:	test   DWORD PTR [esi-0x3],0x26186b0b
  40bb80:	les    esp,FWORD PTR [ebp+0x1352028d]
  40bb86:	mov    ebp,DWORD PTR [edi]
  40bb88:	sub    al,0x7
  40bb8a:	xchg   ecx,eax
  40bb8b:	and    al,0xc5
  40bb8d:	sub    al,0xb4
  40bb8f:	jb     0x40bb2a
  40bb91:	cmp    bl,cl
  40bb93:	push   edx
  40bb94:	mov    ch,0x46
  40bb96:	shl    BYTE PTR [ecx-0xd8049f],0xb6
  40bb9d:	mov    gs,WORD PTR [edi+0x5f]
  40bba0:	cwde   
  40bba1:	add    eax,0x40dd7d9d
  40bba6:	push   ebx
  40bba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba8:	in     eax,dx
  40bba9:	aad    0xbb
  40bbab:	mov    BYTE PTR [ebp+0x43],dl
  40bbae:	sbb    eax,0x560726e8
  40bbb3:	cmc    
  40bbb4:	mov    ecx,0xe590d5c8
  40bbb9:	jp     0x40bba3
  40bbbb:	or     eax,0x579b06f6
  40bbc0:	xchg   esi,eax
  40bbc1:	rcl    DWORD PTR [ecx-0x32144c40],1
  40bbc7:	and    eax,0xd797356e
  40bbcc:	daa    
  40bbcd:	mov    DWORD PTR [ebp+0x7e],ecx
  40bbd0:	dec    edx
  40bbd1:	lea    ecx,[edx]
  40bbd3:	xchg   ebp,eax
  40bbd4:	inc    ebp
  40bbd5:	xor    al,0xeb
  40bbd7:	mov    esp,0xa46d6627
  40bbdc:	leave  
  40bbdd:	mov    DWORD PTR [esi],0xf7cd989a
  40bbe3:	hlt    
  40bbe4:	xchg   edx,eax
  40bbe5:	mov    edx,eax
  40bbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbe8:	mov    al,ds:0x2c98ddb9
  40bbed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbee:	pop    ecx
  40bbef:	and    ebx,DWORD PTR [ebx]
  40bbf1:	fstp   DWORD PTR [edx+0x1c]
  40bbf4:	jmp    0x4c7d:0x171bd78c
  40bbfb:	pop    edi
  40bbfc:	call   0x8a84d07c
  40bc01:	hlt    
  40bc02:	inc    esp
  40bc03:	retf   
  40bc04:	jp     0x40bc6c
  40bc06:	or     eax,0x1a7bb668
  40bc0b:	in     al,dx
  40bc0c:	xor    dh,BYTE PTR ds:0x362285c3
  40bc12:	hlt    
  40bc13:	cmc    
  40bc14:	cld    
  40bc15:	(bad)  
  40bc16:	and    al,0xc7
  40bc18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc19:	stos   DWORD PTR es:[edi],eax
  40bc1a:	mov    ebp,0x6f94d20e
  40bc1f:	xchg   esp,esi
  40bc21:	lock adc eax,0x86ef765
  40bc27:	jle    0x40bc5c
  40bc29:	jne    0x40bc9f
  40bc2b:	sub    eax,0xbb0db0fb
  40bc30:	xor    al,0x6a
  40bc32:	test   eax,0x14f5ed04
  40bc37:	fisttp WORD PTR [ebx]
  40bc39:	jb     0x40bc22
  40bc3b:	push   edx
  40bc3c:	or     BYTE PTR [edx+0x377c1cfa],dl
  40bc42:	push   0xffffffe1
  40bc44:	popf   
  40bc45:	sbb    al,0x2
  40bc47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc48:	pop    ebp
  40bc49:	push   es
  40bc4a:	out    dx,eax
  40bc4b:	push   0xffffffb4
  40bc4d:	sbb    al,0x17
  40bc4f:	scas   al,BYTE PTR es:[edi]
  40bc50:	test   al,0x59
  40bc52:	adc    eax,0x1fb4e944
  40bc57:	push   ds
  40bc58:	pop    esp
  40bc59:	icebp  
  40bc5a:	mov    eax,0x38d00c88
  40bc5f:	fdiv   DWORD PTR [edi+eiz*4]
  40bc62:	mov    ds:0xf56008cf,eax
  40bc67:	lock out dx,eax
  40bc69:	rcr    BYTE PTR [ebx+edx*1-0x6c],0xc
  40bc6e:	sub    eax,0xc1b5b202
  40bc73:	jno    0x40bc3b
  40bc75:	stc    
  40bc76:	fisub  DWORD PTR [ebx-0x7385f288]
  40bc7c:	popa   
  40bc7d:	cmove  ebp,DWORD PTR [eax]
  40bc80:	out    dx,al
  40bc81:	adc    eax,edi
  40bc83:	or     cl,BYTE PTR [edx+esi*8]
  40bc86:	xchg   ebp,eax
  40bc87:	pop    ebx
  40bc88:	int3   
  40bc89:	mov    eax,0x3df06a19
  40bc8e:	dec    ebp
  40bc8f:	imul   esi,DWORD PTR [ecx-0x54],0xae4530fa
  40bc96:	cli    
  40bc97:	retf   
  40bc98:	inc    esp
  40bc99:	rol    DWORD PTR [edx-0x1552bf25],1
  40bc9f:	cld    
  40bca0:	clc    
  40bca1:	push   ss
  40bca2:	popf   
  40bca3:	in     al,dx
  40bca4:	fld    st(7)
  40bca6:	addr16 test eax,esi
  40bca9:	sub    eax,0xba79dc73
  40bcae:	lds    esp,FWORD PTR [esi]
  40bcb0:	and    al,0x11
  40bcb3:	test   DWORD PTR [esi],ecx
  40bcb5:	jl     0x40bd2c
  40bcb7:	mov    dl,0x6d
  40bcb9:	int3   
  40bcba:	jle    0x40bd0b
  40bcbc:	inc    esp
  40bcbd:	mov    ebp,0x861bf232
  40bcc2:	mov    dh,0x86
  40bcc4:	fmulp  st(1),st
  40bcc6:	es data16 test al,0xbf
  40bcca:	mov    ch,0x84
  40bccc:	test   BYTE PTR [edx],al
  40bcce:	xor    DWORD PTR [edi+0x4a],esi
  40bcd1:	ins    DWORD PTR es:[edi],dx
  40bcd2:	xchg   esi,eax
  40bcd3:	push   ds
  40bcd4:	jg     0x40bc6f
  40bcd6:	ss cmp al,0xa9
  40bcd9:	lods   al,BYTE PTR ds:[esi]
  40bcda:	push   edx
  40bcdb:	adc    ch,dh
  40bcdd:	sbb    bh,ah
  40bcdf:	inc    edi
  40bce0:	sub    ah,dh
  40bce2:	push   DWORD PTR [eax-0x5878598b]
  40bce8:	fstp   TBYTE PTR [edi+0x3a]
  40bceb:	in     eax,0x4f
  40bced:	adc    BYTE PTR [ebp-0x1efabbab],0x1
  40bcf4:	jne    0x40bd1e
  40bcf6:	outs   dx,DWORD PTR ds:[esi]
  40bcf7:	scas   al,BYTE PTR es:[edi]
  40bcf8:	and    DWORD PTR [ebx],ebp
  40bcfa:	or     eax,0xe51cb060
  40bcff:	mov    ebx,DWORD PTR [eax+edi*4+0x6c]
  40bd03:	stos   BYTE PTR es:[edi],al
  40bd04:	out    dx,eax
  40bd05:	popf   
  40bd06:	dec    ebx
  40bd07:	adc    eax,0x887303d7
  40bd0c:	sbb    bh,BYTE PTR [ebx]
  40bd0e:	mov    ebp,0xd0ebcc5
  40bd13:	push   es
  40bd14:	xor    dl,ah
  40bd16:	pop    esp
  40bd17:	xchg   ecx,eax
  40bd18:	dec    edx
  40bd19:	and    eax,0xd053c1d4
  40bd1e:	clc    
  40bd1f:	jnp    0x40bd1e
  40bd21:	pusha  
  40bd22:	out    dx,al
  40bd23:	jno    0x40bd77
  40bd25:	sbb    dh,BYTE PTR [eax-0x3f760dc8]
  40bd2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd2c:	adc    eax,0xf5e0266e
  40bd31:	xor    BYTE PTR [edi],dl
  40bd33:	inc    ecx
  40bd34:	adc    ebp,DWORD PTR [esi]
  40bd36:	jg     0x40bd1f
  40bd38:	adc    ecx,DWORD PTR [eax]
  40bd3a:	and    DWORD PTR [edx],esi
  40bd3c:	ja     0x40bd0a
  40bd3e:	dec    eax
  40bd3f:	xchg   ebx,ecx
  40bd41:	push   edi
  40bd42:	bound  ecx,QWORD PTR [edi-0x2f]
  40bd45:	imul   ebp,DWORD PTR [edx+eax*1+0xe8fc598],0x4a
  40bd4d:	test   al,0xd9
  40bd4f:	or     DWORD PTR [ebx+0x36281b02],ecx
  40bd55:	(bad)  
  40bd56:	or     BYTE PTR [edi],al
  40bd58:	inc    edx
  40bd59:	xor    DWORD PTR [esi+0x5d898733],esi
  40bd5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd60:	cwde   
  40bd61:	(bad)  
  40bd62:	cld    
  40bd63:	clc    
  40bd64:	addr16 aaa 
  40bd66:	mov    esi,DWORD PTR [ecx]
  40bd68:	repz pop edx
  40bd6a:	loope  0x40bd49
  40bd6c:	fisubr WORD PTR [edx-0x38d29c7b]
  40bd72:	xlat   BYTE PTR ds:[ebx]
  40bd73:	xor    ebp,0x4abc8c21
  40bd79:	rcr    dh,cl
  40bd7b:	nop
  40bd7c:	dec    esi
  40bd7d:	iret   
  40bd7e:	pop    ds
  40bd7f:	sbb    dh,BYTE PTR [edi]
  40bd81:	loopne 0x40bd3f
  40bd83:	jnp    0x40bdee
  40bd85:	imul   ebp,DWORD PTR [ebx+esi*1],0x4c
  40bd89:	das    
  40bd8a:	inc    edi
  40bd8b:	in     al,dx
  40bd8c:	sub    DWORD PTR [eax+0x44a43846],eax
  40bd92:	stos   DWORD PTR es:[edi],eax
  40bd93:	jle    0x40be00
  40bd95:	mov    ebx,0x12a48ae7
  40bd9a:	cmp    ecx,eax
  40bd9c:	xor    al,0x86
  40bd9e:	xchg   edi,eax
  40bd9f:	mov    ebx,0x3fc425be
  40bda4:	dec    edi
  40bda5:	retf   0x728d
  40bda8:	xor    bh,BYTE PTR [edx]
  40bdaa:	je     0x40bda1
  40bdac:	outs   dx,DWORD PTR ds:[esi]
  40bdad:	ins    BYTE PTR es:[edi],dx
  40bdae:	jg     0x40bdf6
  40bdb0:	jno    0x40be20
  40bdb2:	lods   al,BYTE PTR ds:[esi]
  40bdb3:	sbb    BYTE PTR [edi+0x49],bl
  40bdb6:	xor    ecx,edx
  40bdb8:	(bad)  
  40bdb9:	cdq    
  40bdba:	or     ebp,DWORD PTR [esi]
  40bdbc:	inc    ebp
  40bdbd:	neg    BYTE PTR [eax+ebp*1-0x51dc5192]
  40bdc4:	fisubr WORD PTR [ebx-0x1e611677]
  40bdca:	pop    edi
  40bdcb:	retf   
  40bdcc:	sbb    edx,ebp
  40bdce:	fcomp  QWORD PTR es:[ebx+ebx*2+0x67015733]
  40bdd6:	jge    0x40bda9
  40bdd8:	cmp    BYTE PTR [esi],cl
  40bdda:	adc    bl,ch
  40bddc:	sbb    BYTE PTR [ebp+0x3e404690],cl
  40bde2:	pop    eax
  40bde3:	cli    
  40bde4:	push   eax
  40bde5:	fwait
  40bde6:	mov    ebp,0x72346aff
  40bdeb:	cmp    esi,DWORD PTR [eax]
  40bded:	int    0xc
  40bdef:	(bad)  
  40bdf0:	xor    DWORD PTR [esi-0x59718c4],edx
  40bdf6:	leave  
  40bdf7:	xchg   ebp,eax
  40bdf8:	push   0x3eab3417
  40bdfd:	dec    esp
  40bdfe:	fcmovnu st,st(7)
  40be00:	and    BYTE PTR [ebp-0x2b564fb6],bl
  40be06:	dec    edi
  40be07:	mov    ebp,0x40a0d50f
  40be0c:	call   0x460:0x3465c47
  40be13:	in     eax,dx
  40be14:	mov    ch,0x49
  40be16:	jmp    0x40be51
  40be18:	mov    ds:0x6f711164,eax
  40be1d:	pop    ebp
  40be1e:	xor    BYTE PTR [edi-0x1f],ch
  40be21:	jo     0x40be67
  40be23:	jecxz  0x40be87
  40be25:	pop    ds
  40be26:	gs hlt 
  40be28:	loopne 0x40be2a
  40be2a:	loopne 0x40bdfd
  40be2c:	jg     0x40bded
  40be2e:	dec    esi
  40be2f:	push   es
  40be30:	push   ebp
  40be31:	jb     0x40be0b
  40be33:	mov    cl,BYTE PTR [esi]
  40be35:	lock push esp
  40be37:	mov    esi,0xfd47fd1e
  40be3c:	xor    BYTE PTR [ebx+0x9312696],al
  40be42:	push   0xd7a6550e
  40be47:	scas   al,BYTE PTR es:[edi]
  40be48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be49:	hlt    
  40be4a:	and    eax,0x44b0f6f
  40be4f:	ins    BYTE PTR es:[edi],dx
  40be50:	mov    ebx,0x6586d784
  40be55:	inc    eax
  40be56:	xor    esp,esi
  40be58:	mov    ah,0x87
  40be5a:	fild   WORD PTR [edx]
  40be5c:	and    DWORD PTR [edi],ebp
  40be5e:	(bad)  
  40be5f:	sub    al,BYTE PTR [esi-0x3e]
  40be62:	xor    al,0xcb
  40be64:	mov    dl,0xb4
  40be66:	mov    ds:0xf35f8e4a,al
  40be6b:	sub    bl,0xa8
  40be6e:	arpl   WORD PTR [esi],cx
  40be70:	sbb    dh,dl
  40be72:	add    edx,DWORD PTR [ebx+0x3]
  40be75:	mov    ah,BYTE PTR [edx+0x38]
  40be78:	cmc    
  40be79:	xor    eax,0xad8e5578
  40be7e:	(bad)  
  40be7f:	cwde   
  40be80:	add    al,0xaf
  40be82:	inc    esp
  40be83:	ret    
  40be84:	jo     0x40be98
  40be86:	out    0x0,al
  40be88:	retf   0x96b1
  40be8b:	and    BYTE PTR [edi],ch
  40be8d:	push   0xa6d184fb
  40be92:	loop   0x40beb3
  40be94:	or     al,BYTE PTR [esi+0x40]
  40be97:	push   0xfffffff9
  40be99:	(bad)  
  40be9a:	mov    ch,0x35
  40be9c:	mov    esi,0xb6c27bea
  40bea1:	stos   DWORD PTR es:[edi],eax
  40bea2:	imul   DWORD PTR [ebx-0x35]
  40bea5:	or     bl,BYTE PTR [eax-0x1a]
  40bea8:	rol    DWORD PTR [ebx+eiz*8],0x8c
  40beac:	pusha  
  40bead:	iret   
  40beae:	push   ds
  40beaf:	sub    DWORD PTR [ebp-0xadd5431],esi
  40beb5:	aaa    
  40beb6:	xor    edx,ebx
  40beb8:	pop    es
  40beb9:	sar    BYTE PTR [esi+0x32],cl
  40bebc:	adc    esi,esi
  40bebe:	ins    DWORD PTR es:[edi],dx
  40bebf:	fisttp DWORD PTR ds:0x98def835
  40bec5:	ss push 0xbc43ec05
  40becb:	mov    edi,0x4242b03f
  40bed0:	and    DWORD PTR [esi+ebp*2-0x7b],ebx
  40bed4:	mov    esi,DWORD PTR [ebx+ebx*4+0x16]
  40bed8:	dec    esp
  40bed9:	cmp    dl,cl
  40bedb:	inc    esp
  40bedc:	cwde   
  40bedd:	pop    edx
  40bede:	cmc    
  40bedf:	xor    al,0x2f
  40bee1:	jnp    0x40bf00
  40bee3:	rcr    BYTE PTR [ecx],1
  40bee5:	je     0x40be92
  40bee7:	test   al,0x39
  40bee9:	jbe    0x40bf13
  40beeb:	add    bh,BYTE PTR [edi+0x70]
  40beee:	(bad)  
  40beef:	int3   
  40bef0:	int3   
  40bef1:	rcr    dh,1
  40bef3:	rcr    BYTE PTR [esi-0x5f2255bc],0x7d
  40befa:	adc    BYTE PTR [esp+ebp*1],al
  40befd:	sar    BYTE PTR [edi-0x6a],1
  40bf00:	jl     0x40bf64
  40bf02:	mov    BYTE PTR ds:0xe694088c,ah
  40bf08:	aam    0x4e
  40bf0a:	ret    
  40bf0b:	mov    ch,BYTE PTR [edi]
  40bf0d:	fisubr WORD PTR [edi]
  40bf0f:	imul   DWORD PTR [ebp+0xe]
  40bf12:	cs mov ah,0x80
  40bf15:	call   0xd493:0xe3e0c4f5
  40bf1c:	push   edi
  40bf1d:	mov    esp,0x3fa2f7ce
  40bf22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf23:	out    0x66,al
  40bf25:	test   DWORD PTR [ebp+0x7923eb75],eax
  40bf2b:	mov    esp,0xbcb66e0
  40bf30:	(bad)  
  40bf31:	cwde   
  40bf32:	or     eax,DWORD PTR [edi-0x42636e37]
  40bf38:	div    BYTE PTR [ecx]
  40bf3a:	sbb    eax,0x1250a862
  40bf3f:	cli    
  40bf40:	mov    WORD PTR [esi],?
  40bf42:	inc    esi
  40bf43:	jl     0x40bf1b
  40bf45:	call   edi
  40bf47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf48:	jge    0x40bedd
  40bf4a:	pop    ds
  40bf4b:	in     eax,dx
  40bf4c:	out    dx,eax
  40bf4d:	iret   
  40bf4e:	sahf   
  40bf4f:	mov    ds:0xbc892ec5,al
  40bf54:	mov    ebx,0x7198cb25
  40bf59:	js     0x40bf0a
  40bf5b:	mov    edx,0xe2e8bc0b
  40bf60:	dec    ebx
  40bf61:	fnsave [eax+0x74]
  40bf64:	retf   
  40bf65:	cmp    eax,0x560b6981
  40bf6a:	jmp    0x2984:0xe4478717
  40bf71:	push   ecx
  40bf72:	daa    
  40bf73:	imul   dh
  40bf75:	sbb    BYTE PTR [ebp-0x1e],bl
  40bf78:	mov    esp,0xdaf9fa24
  40bf7d:	jmp    0x8694be1a
  40bf82:	lods   ax,WORD PTR ds:[esi]
  40bf84:	(bad)  
  40bf86:	inc    esp
  40bf87:	ins    DWORD PTR es:[edi],dx
  40bf88:	adc    DWORD PTR [ecx+0xc497a8],edx
  40bf8e:	or     BYTE PTR [esi+0xb],ch
  40bf91:	xor    bh,BYTE PTR [ebx]
  40bf93:	push   edx
  40bf94:	out    0x95,eax
  40bf96:	aas    
  40bf97:	ret    0xc2c4
  40bf9a:	inc    edi
  40bf9b:	scas   eax,DWORD PTR es:[edi]
  40bf9c:	into   
  40bf9d:	dec    eax
  40bf9e:	xchg   ecx,eax
  40bf9f:	jmp    0x1824:0x47dccafb
  40bfa6:	lock jne 0x40c00c
  40bfa9:	xchg   esp,eax
  40bfaa:	sub    al,0xa3
  40bfac:	sub    DWORD PTR [ebx],0x2
  40bfaf:	(bad)  
  40bfb0:	dec    esi
  40bfb1:	repnz imul esi,DWORD PTR [ebx+0x0],0xffffffb2
  40bfb6:	fst    DWORD PTR [eax]
  40bfb8:	pop    ebp
  40bfb9:	xchg   esi,eax
  40bfba:	popf   
  40bfbb:	inc    ecx
  40bfbc:	cs push 0xbc77c9c3
  40bfc2:	ret    0x5ac1
  40bfc5:	loop   0x40c007
  40bfc7:	sub    eax,0x832c4e39
  40bfcc:	push   ebp
  40bfcd:	mov    edi,0x815dc88f
  40bfd2:	stos   DWORD PTR es:[edi],eax
  40bfd3:	mov    ecx,0x95162570
  40bfd8:	adc    bl,dh
  40bfda:	sub    ch,0x31
  40bfdd:	loope  0x40c019
  40bfdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfe0:	imul   ebp,esi,0xc987cbf
  40bfe6:	mov    dl,0xec
  40bfe8:	enter  0x9993,0x3
  40bfec:	mov    ah,0x37
  40bfee:	clc    
  40bfef:	imul   BYTE PTR [edi-0x62]
  40bff2:	sbb    bl,BYTE PTR [ebx]
  40bff4:	sub    bl,BYTE PTR [edx+0x2d]
  40bff7:	addr16 inc eax
  40bff9:	aaa    
  40bffa:	fdiv   st,st(2)
  40bffc:	dec    edx
  40bffd:	add    esi,ecx
  40bfff:	jne    0x40bff3
  40c001:	mov    bl,0xf1
  40c003:	mov    eax,ds:0xd1c39511
  40c008:	or     ebx,ebp
  40c00a:	sbb    al,ch
  40c00c:	push   DWORD PTR [eax-0x1f]
  40c00f:	mov    DWORD PTR [edi],edi
  40c011:	sar    BYTE PTR [esi-0x1],1
  40c014:	xchg   esp,eax
  40c015:	das    
  40c016:	push   ds
  40c017:	inc    edi
  40c018:	sbb    al,0x22
  40c01a:	sbb    DWORD PTR [ebx-0x18354158],eax
  40c020:	adc    eax,0xd8f372b1
  40c025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c026:	ins    BYTE PTR es:[edi],dx
  40c027:	inc    ebx
  40c028:	push   edx
  40c029:	dec    ecx
  40c02a:	adc    eax,0x152562b0
  40c02f:	clc    
  40c030:	and    eax,0x4e16f01d
  40c035:	and    BYTE PTR [esi+0x8],bh
  40c038:	fsub   DWORD PTR [edi+edx*2]
  40c03b:	clc    
  40c03c:	pop    ebx
  40c03d:	mov    ds:0x7ec0ddf0,al
  40c042:	jp     0x40bfc5
  40c044:	lea    ebp,[edx-0x6314cd5e]
  40c04a:	ins    BYTE PTR es:[edi],dx
  40c04b:	pop    ecx
  40c04c:	or     edi,DWORD PTR [ebx+0x3e]
  40c04f:	imul   ecx,DWORD PTR [esi-0x21],0x7c652c3e
  40c056:	and    BYTE PTR [ebp+0x63],0xe8
  40c05a:	sti    
  40c05b:	mov    esi,DWORD PTR [esi+0x52f7926e]
  40c061:	jno    0x40bfef
  40c063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c064:	push   edx
  40c065:	int    0xe5
  40c067:	push   0x12
  40c069:	(bad)  
  40c06a:	and    eax,0x1506cdb2
  40c06f:	ins    BYTE PTR es:[edi],dx
  40c070:	adc    dl,BYTE PTR [ecx+0x29]
  40c073:	and    al,0x4c
  40c075:	fwait
  40c076:	push   ebp
  40c077:	retf   
  40c078:	jmp    0x40c043
  40c07a:	jne    0x40c025
  40c07c:	in     eax,0x7f
  40c07e:	add    esp,edi
  40c080:	js     0x40c045
  40c082:	adc    eax,DWORD PTR [edx+0x50267d25]
  40c088:	imul   edi,DWORD PTR [eax+eiz*2-0x78],0x3d170a0b
  40c090:	or     DWORD PTR [edi],esi
  40c092:	cmp    BYTE PTR [esi],cl
  40c094:	pop    ds
  40c095:	mov    ds:0x6c2d7d34,eax
  40c09a:	xor    edi,DWORD PTR [esi+0x26acb623]
  40c0a0:	fbstp  TBYTE PTR [ebx]
  40c0a2:	es aas 
  40c0a4:	or     al,0x16
  40c0a6:	mov    ebx,0x4cf4b6a7
  40c0ab:	mov    dh,0xcd
  40c0ad:	stos   BYTE PTR es:[edi],al
  40c0ae:	cli    
  40c0af:	cdq    
  40c0b0:	adc    edi,edx
  40c0b2:	ficomp WORD PTR [ecx]
  40c0b4:	sub    esp,DWORD PTR [edx]
  40c0b6:	add    al,0x94
  40c0b8:	inc    edx
  40c0b9:	loop   0x40c136
  40c0bb:	fistp  DWORD PTR [esp+ebp*1]
  40c0be:	and    DWORD PTR [eax-0x1b6f5b3],edi
  40c0c4:	and    DWORD PTR [ecx*2+0xc2cfb7c],esi
  40c0cb:	xchg   DWORD PTR [ebp-0x614e818f],esp
  40c0d1:	sbb    esp,0xffffff8e
  40c0d4:	inc    eax
  40c0d5:	je     0x40c0dc
  40c0d7:	outs   dx,DWORD PTR ds:[esi]
  40c0d8:	in     eax,dx
  40c0d9:	lods   al,BYTE PTR ds:[esi]
  40c0da:	dec    esp
  40c0db:	mov    esp,0x639960c7
  40c0e0:	cmp    ecx,edi
  40c0e2:	xchg   esp,eax
  40c0e3:	dec    esi
  40c0e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e5:	pusha  
  40c0e6:	rcr    BYTE PTR [edi],1
  40c0e8:	sub    BYTE PTR [eax+0x6e],0x6e
  40c0ec:	adc    BYTE PTR [edx-0x3],cl
  40c0ef:	xor    al,0xd0
  40c0f1:	pop    es
  40c0f2:	pop    esp
  40c0f3:	jp     0x40c08f
  40c0f5:	adc    eax,0x3ae26164
  40c0fa:	dec    edi
  40c0fb:	clc    
  40c0fc:	add    bl,0x24
  40c0ff:	mov    ds:0x1f2d4583,al
  40c104:	and    esi,0x41
  40c107:	mov    al,bl
  40c109:	out    0x3,eax
  40c10b:	add    al,0x22
  40c10d:	sub    ah,BYTE PTR [eax]
  40c10f:	push   edx
  40c110:	ret    0x7f01
  40c113:	neg    BYTE PTR [edx+0x43]
  40c116:	pop    edx
  40c117:	ret    0xd61b
  40c11a:	and    BYTE PTR ds:0xdfdf535c,bl
  40c120:	mov    ebp,0xb1c3227c
  40c125:	aas    
  40c126:	mov    es,eax
  40c128:	pushf  
  40c129:	inc    ebp
  40c12a:	fistp  WORD PTR [edi+ebx*2+0x43]
  40c12e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c130:	mov    edx,0xfbff1691
  40c135:	inc    eax
  40c136:	inc    esi
  40c137:	call   0x110d:0xd2b62a40
  40c13e:	jns    0x40c0df
  40c140:	add    BYTE PTR [esi-0x2a],bl
  40c143:	xchg   edx,eax
  40c144:	enter  0xcbf9,0xb0
  40c148:	ins    DWORD PTR es:[edi],dx
  40c149:	pop    ebp
  40c14a:	iret   
  40c14b:	call   0x4b7c26a7
  40c150:	push   eax
  40c151:	cmp    al,0x2b
  40c153:	vpsrld xmm4,xmm2,XMMWORD PTR [esi]
  40c157:	add    BYTE PTR [edi+0x1920702c],cl
  40c15d:	mov    dl,0x1f
  40c15f:	mov    dh,0x35
  40c161:	or     BYTE PTR ds:0x392c21f2,cl
  40c167:	sbb    eax,0xa08909fc
  40c16c:	inc    esi
  40c16d:	les    eax,FWORD PTR [esp+esi*2-0x3a337af2]
  40c174:	fsubr  QWORD PTR [ecx-0x7a68daf5]
  40c17a:	adc    DWORD PTR [ebx+0x6d],esi
  40c17d:	sbb    esi,DWORD PTR [ebp+0x2e76f848]
  40c183:	adc    esp,DWORD PTR [ebx]
  40c185:	out    0x91,al
  40c187:	inc    ebx
  40c188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c189:	idiv   BYTE PTR [esi+0x30ea1662]
  40c18f:	mov    ebp,0xd3942f07
  40c194:	adc    DWORD PTR [eax],0xffffff94
  40c197:	pop    ebx
  40c198:	and    al,dh
  40c19a:	mov    ebx,0x4bfeade8
  40c19f:	adc    eax,0x8e74d0a0
  40c1a4:	jge    0x40c1fd
  40c1a6:	sub    ebp,esi
  40c1a8:	cmc    
  40c1a9:	arpl   sp,si
  40c1ab:	enter  0x9f8d,0x55
  40c1af:	mov    al,ds:0xd812c89d
  40c1b4:	pop    esp
  40c1b5:	pop    ebx
  40c1b6:	pop    ebp
  40c1b7:	or     al,0xcf
  40c1b9:	enter  0xd32e,0x5d
  40c1bd:	jnp    0x40c1f4
  40c1bf:	in     eax,0x80
  40c1c1:	mov    ecx,0xb8d5db7f
  40c1c6:	(bad)  
  40c1c7:	pop    ebp
  40c1c8:	jg     0x40c246
  40c1ca:	call   0x5889:0x8d455354
  40c1d1:	arpl   WORD PTR [ecx],di
  40c1d3:	and    BYTE PTR [edx-0x2e],ch
  40c1d6:	push   cs
  40c1d7:	inc    esi
  40c1d8:	jbe    0x40c173
  40c1da:	bound  eax,QWORD PTR [ebx+0x7f]
  40c1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1de:	mov    eax,ds:0x2ac340a5
  40c1e3:	xchg   DWORD PTR es:[ecx+0x6b],esi
  40c1e7:	sub    BYTE PTR [ebx-0x58],cl
  40c1ea:	adc    al,0x88
  40c1ec:	les    edx,FWORD PTR [edi]
  40c1ee:	clc    
  40c1ef:	ja     0x40c24f
  40c1f1:	repz dec edx
  40c1f3:	(bad)  
  40c1f4:	xchg   ebx,eax
  40c1f5:	xor    eax,DWORD PTR [edx-0x30]
  40c1f8:	gs cwde 
  40c1fa:	in     al,0x7b
  40c1fc:	sub    ecx,DWORD PTR [edx-0x47]
  40c1ff:	xlat   BYTE PTR ds:[ebx]
  40c200:	cmc    
  40c201:	push   DWORD PTR gs:[edx+0x6a619952]
  40c208:	adc    edx,DWORD PTR [eax-0x1a]
  40c20b:	popaw  
  40c20d:	sar    DWORD PTR [ecx-0x70],cl
  40c210:	sub    esi,eax
  40c212:	xor    eax,0xb6f97bf5
  40c217:	mov    gs,WORD PTR [esi+0x62]
  40c21a:	mov    DWORD PTR [ebp+0x22],edi
  40c21d:	add    BYTE PTR [edx],al
  40c21f:	sbb    BYTE PTR [edx+0x4],cl
  40c222:	loop   0x40c241
  40c224:	sub    DWORD PTR [edi+0x61c7a75],esi
  40c22a:	and    bh,ah
  40c22c:	pop    esp
  40c22d:	cmp    BYTE PTR [ecx+0x3abdf782],0xc7
  40c234:	xor    ebp,DWORD PTR [edx+ebx*8]
  40c237:	mov    dl,al
  40c239:	test   al,0x15
  40c23b:	jl     0x40c291
  40c23d:	mov    dh,0xd6
  40c23f:	loop   0x40c1e9
  40c241:	jae    0x40c286
  40c243:	xchg   ebx,eax
  40c244:	mov    DWORD PTR [ecx],ebx
  40c246:	and    al,BYTE PTR [edx+eax*2]
  40c249:	jge    0x40c1eb
  40c24b:	mov    dh,0x33
  40c24d:	pop    eax
  40c24e:	jecxz  0x40c1e4
  40c250:	jo     0x40c259
  40c252:	or     eax,0x6ce42220
  40c257:	pop    edi
  40c258:	and    al,0x4f
  40c25a:	push   ebx
  40c25b:	test   DWORD PTR [edx],0x21e8dea4
  40c261:	mov    eax,0xae63632b
  40c266:	lahf   
  40c267:	popa   
  40c268:	stos   BYTE PTR es:[edi],al
  40c269:	test   DWORD PTR [ebx+0x43ac7571],eax
  40c26f:	or     al,0xd2
  40c271:	jns    0x40c23a
  40c273:	mov    eax,ds:0x29b9c4e1
  40c278:	or     bh,BYTE PTR [esi+0x25160f7]
  40c27e:	pop    esi
  40c27f:	pop    es
  40c280:	xchg   esp,eax
  40c281:	(bad)  
  40c282:	loope  0x40c2fb
  40c284:	cwde   
  40c285:	jl     0x40c295
  40c287:	push   ss
  40c288:	pop    ebx
  40c289:	ret    0x7c61
  40c28c:	idiv   BYTE PTR [esi]
  40c28e:	mov    dl,0xe1
  40c290:	shl    DWORD PTR [eax],cl
  40c292:	ins    BYTE PTR es:[edi],dx
  40c293:	cmp    dh,BYTE PTR ds:[ecx-0x55]
  40c297:	ins    BYTE PTR es:[edi],dx
  40c298:	lahf   
  40c299:	push   edi
  40c29a:	sbb    eax,0x14b40333
  40c29f:	pop    edx
  40c2a0:	mov    ah,0x64
  40c2a2:	loop   0x40c29b
  40c2a4:	in     al,0xce
  40c2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2a7:	mov    cs:0xbba020,eax
  40c2ad:	push   ss
  40c2ae:	data16 cli 
  40c2b0:	sbb    al,0xe2
  40c2b2:	fadd   st,st(5)
  40c2b4:	xchg   ebp,eax
  40c2b5:	sbb    al,ah
  40c2b7:	popa   
  40c2b8:	stos   DWORD PTR es:[edi],eax
  40c2b9:	das    
  40c2ba:	xor    BYTE PTR [edi+0x688bd364],ch
  40c2c0:	mov    ch,0x82
  40c2c2:	or     al,0x7e
  40c2c4:	dec    edx
  40c2c5:	push   es
  40c2c6:	xor    al,dl
  40c2c8:	enter  0xf723,0x6
  40c2cc:	ret    0x5b94
  40c2cf:	fwait
  40c2d0:	ret    0xa080
  40c2d3:	xchg   ecx,eax
  40c2d4:	push   eax
  40c2d5:	shld   DWORD PTR [ebx+0x32],ecx,cl
  40c2d9:	pop    esi
  40c2da:	retf   
  40c2db:	sub    ebx,edx
  40c2dd:	sti    
  40c2de:	inc    edx
  40c2df:	imul   ebx,ebx,0xffffff9d
  40c2e2:	add    cl,BYTE PTR [edx+0xd867eac]
  40c2e8:	push   0x9126cd83
  40c2ed:	pop    eax
  40c2ee:	mov    eax,ecx
  40c2f0:	sub    dl,BYTE PTR [edx+0x7e8298e8]
  40c2f6:	sub    al,ch
  40c2f8:	ret    
  40c2f9:	or     DWORD PTR [ecx-0x1a0d9003],esp
  40c2ff:	xchg   ecx,eax
  40c300:	(bad)  
  40c301:	fdiv   DWORD PTR [eax+0x20]
  40c304:	jno    0x40c2ea
  40c306:	xchg   ebx,eax
  40c307:	das    
  40c308:	pop    ebx
  40c309:	(bad)  ds:0xda3f8988
  40c30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c310:	outs   dx,BYTE PTR ds:[esi]
  40c311:	mov    ch,bl
  40c313:	stc    
  40c314:	add    ah,0x11
  40c317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c318:	popf   
  40c319:	add    ah,BYTE PTR [ecx+0x67]
  40c31c:	lea    eax,[ebp+0x61f0a9f]
  40c322:	cdq    
  40c323:	jmp    0x40c2af
  40c325:	jo     0x40c331
  40c327:	sti    
  40c328:	rol    eax,0xfd
  40c32b:	test   BYTE PTR [ebx*2+0x518457d1],dh
  40c332:	xor    ebx,ebp
  40c334:	ficomp WORD PTR ds:0x2b244b8d
  40c33a:	fdiv   DWORD PTR [esi]
  40c33c:	push   ecx
  40c33d:	xchg   ecx,eax
  40c33e:	mov    esi,0xe0177cf7
  40c343:	dec    ebx
  40c344:	pop    edi
  40c345:	sbb    ah,bh
  40c347:	cld    
  40c348:	xor    al,0x7e
  40c34a:	and    DWORD PTR [eax+0x21],edi
  40c34d:	cld    
  40c34e:	sub    eax,0x39ce5c27
  40c353:	jb     0x40c301
  40c355:	pop    ecx
  40c356:	je     0x40c335
  40c358:	jge    0x40c347
  40c35a:	ins    BYTE PTR es:[edi],dx
  40c35b:	dec    ebp
  40c35c:	cli    
  40c35d:	xchg   esi,eax
  40c35e:	ja     0x40c3d0
  40c360:	xor    esi,eax
  40c362:	clc    
  40c363:	push   es
  40c364:	mov    ah,BYTE PTR [esi+0xb3165dc]
  40c36a:	les    esp,FWORD PTR [edi]
  40c36c:	lods   al,BYTE PTR ds:[esi]
  40c36d:	dec    edi
  40c36e:	ins    DWORD PTR es:[edi],dx
  40c36f:	icebp  
  40c370:	adc    eax,0x81d0d327
  40c375:	aaa    
  40c376:	ficom  DWORD PTR [edi]
  40c378:	push   ss
  40c379:	sub    dl,BYTE PTR ds:0xd10d0874
  40c37f:	xchg   edi,eax
  40c380:	gs sbb dh,dh
  40c383:	mov    al,ds:0x89676788
  40c388:	fnstsw WORD PTR [edi+0x33]
  40c38b:	daa    
  40c38c:	shr    DWORD PTR ss:[eax-0x2ef0649],1
  40c393:	sub    esi,DWORD PTR [esi]
  40c395:	mov    eax,ds:0xf42ff10b
  40c39a:	pop    es
  40c39b:	mov    eax,ds:0x69bb85d0
  40c3a0:	pusha  
  40c3a1:	xchg   ecx,eax
  40c3a2:	dec    eax
  40c3a3:	int3   
  40c3a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3a5:	sti    
  40c3a6:	arpl   WORD PTR [edi],sp
  40c3a8:	cmp    eax,0xaf46b2e7
  40c3ad:	ins    DWORD PTR es:[edi],dx
  40c3ae:	out    0xbb,al
  40c3b0:	fcmovbe st,st(0)
  40c3b2:	dec    eax
  40c3b3:	adc    eax,0x1102c576
  40c3b8:	daa    
  40c3b9:	sti    
  40c3ba:	add    al,0x81
  40c3bc:	mov    ds:0x975b1f6e,eax
  40c3c1:	mov    BYTE PTR [eax],0x20
  40c3c4:	rcl    BYTE PTR [ebx+0x28],0x9b
  40c3c8:	sbb    eax,0xa0ab5b96
  40c3cd:	fs std 
  40c3cf:	jle    0x40c390
  40c3d1:	pop    esp
  40c3d2:	push   edi
  40c3d3:	dec    esi
  40c3d4:	test   al,0x37
  40c3d6:	div    DWORD PTR [ecx+0xa]
  40c3d9:	mov    esi,0x89c08907
  40c3de:	or     al,0x69
  40c3e0:	mov    al,ds:0x69b9110b
  40c3e5:	or     DWORD PTR ds:0x7afd7a7d,edi
  40c3eb:	cmp    al,0x6d
  40c3ed:	sti    
  40c3ee:	dec    esi
  40c3ef:	popf   
  40c3f0:	mov    dh,0x9c
  40c3f2:	loopne 0x40c3e5
  40c3f4:	mov    esp,0x16587a4f
  40c3f9:	dec    ebp
  40c3fa:	mov    ah,0x6a
  40c3fc:	es int3 
  40c3fe:	shl    BYTE PTR [edx-0x6f],0x3
  40c402:	dec    eax
  40c403:	repnz xchg edx,eax
  40c405:	mov    edx,0xfa97e5d0
  40c40a:	xor    al,0x41
  40c40c:	ins    BYTE PTR es:[edi],dx
  40c40d:	add    DWORD PTR [ebp+0x1a],edx
  40c410:	jo     0x40c48e
  40c412:	in     al,dx
  40c413:	mov    es:0xe37c2f90,al
  40c419:	bound  esi,QWORD PTR [esi-0x351ec259]
  40c41f:	pop    edx
  40c420:	imul   edx,edx,0x4690e25a
  40c426:	clc    
  40c427:	or     ch,bh
  40c429:	pop    esp
  40c42a:	shl    ecx,0x3
  40c42d:	mov    ds:0x7a5dc518,al
  40c432:	loope  0x40c3d2
  40c434:	adc    esp,DWORD PTR [ebp+0x1a]
  40c437:	les    edi,FWORD PTR [edi]
  40c439:	cld    
  40c43a:	push   eax
  40c43b:	loopne 0x40c419
  40c43d:	inc    esp
  40c43e:	add    eax,0xa8353aa1
  40c443:	fbstp  TBYTE PTR [edi+esi*2+0xa99d972]
  40c44a:	mov    eax,0x2234916
  40c44f:	rcl    BYTE PTR [esi],0x33
  40c452:	sub    DWORD PTR [edi],ebp
  40c454:	test   DWORD PTR [ebp-0x443d64f],ebx
  40c45a:	outs   dx,DWORD PTR ds:[esi]
  40c45b:	push   es
  40c45c:	jecxz  0x40c44a
  40c45e:	ds or  ebx,ebp
  40c461:	mov    al,ds:0x74bc05db
  40c466:	pop    edx
  40c467:	gs ja  0x40c3fb
  40c46a:	xor    al,0x2a
  40c46c:	jnp    0x40c41b
  40c46e:	adc    al,BYTE PTR [ecx]
  40c470:	leave  
  40c471:	scas   al,BYTE PTR es:[edi]
  40c472:	fs xchg esp,eax
  40c475:	dec    ebx
  40c476:	dec    esi
  40c477:	jae    0x40c48f
  40c479:	xchg   esi,eax
  40c47a:	fbstp  TBYTE PTR [eax-0x3e385236]
  40c480:	xchg   esp,eax
  40c481:	pop    es
  40c482:	push   eax
  40c483:	mov    edi,DWORD PTR [ebx]
  40c485:	(bad)  
  40c486:	jecxz  0x40c497
  40c488:	scas   al,BYTE PTR es:[edi]
  40c489:	and    al,0x88
  40c48b:	jne    0x40c497
  40c48d:	sbb    dh,BYTE PTR [esi]
  40c48f:	ja     0x40c503
  40c491:	jg     0x40c435
  40c493:	xor    edi,DWORD PTR [ebp+edx*2+0x4030aa96]
  40c49a:	xlat   BYTE PTR ds:[ebx]
  40c49b:	out    0x37,eax
  40c49d:	(bad)
  40c4a0:	jg     0x40c484
  40c4a2:	enter  0x661b,0xbb
  40c4a6:	or     al,0xab
  40c4a8:	sahf   
  40c4a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4aa:	pusha  
  40c4ab:	mov    dh,0x13
  40c4ad:	jp     0x40c49e
  40c4af:	push   edx
  40c4b0:	cmp    dl,dl
  40c4b2:	xchg   edi,eax
  40c4b3:	xor    esi,DWORD PTR [edx]
  40c4b5:	sub    ebx,ecx
  40c4b7:	jb     0x40c4d5
  40c4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ba:	cmp    ecx,esi
  40c4bc:	xor    ecx,DWORD PTR [ecx-0x43a855b]
  40c4c2:	mov    ds:0xf62ceb65,eax
  40c4c7:	jae    0x40c4e2
  40c4c9:	sub    al,0x6f
  40c4cb:	adc    al,0xe
  40c4cd:	loop   0x40c4e9
  40c4cf:	dec    ebx
  40c4d0:	or     ebp,DWORD PTR [esi+0x49]
  40c4d3:	nop
  40c4d4:	pop    edi
  40c4d5:	pop    es
  40c4d6:	loop   0x40c544
  40c4d8:	test   al,0x46
  40c4da:	les    ecx,FWORD PTR [ecx+ecx*4-0x7c]
  40c4de:	cmp    dl,BYTE PTR [edx+edx*1-0x3dc630ed]
  40c4e5:	imul   esi,DWORD PTR [ebx+0x747b7325],0xdb72e26b
  40c4ef:	(bad)  
  40c4f0:	cmp    BYTE PTR [ebx+ecx*1],bl
  40c4f3:	or     eax,edi
  40c4f5:	fbld   TBYTE PTR [edi]
  40c4f7:	inc    esi
  40c4f8:	xor    cl,BYTE PTR [edi+0x4ba502fb]
  40c4fe:	out    0xa6,eax
  40c500:	les    esp,FWORD PTR [edi+ecx*8]
  40c503:	cld    
  40c504:	adc    esp,DWORD PTR [eax+0x4c]
  40c507:	aad    0xdf
  40c509:	ds mov edx,0x670b61ce
  40c50f:	in     al,dx
  40c510:	cs pop ss
  40c512:	dec    edx
  40c513:	mov    ebp,DWORD PTR fs:[ebx+0x79]
  40c517:	adc    ch,dl
  40c519:	pop    esi
  40c51a:	mov    ecx,0x9abb0b87
  40c51f:	clc    
  40c520:	(bad)  
  40c521:	mov    esp,0x96a37ff8
  40c526:	mov    bh,0x1e
  40c528:	mov    ah,0x92
  40c52a:	xchg   ebx,eax
  40c52b:	sub    al,0x46
  40c52d:	neg    DWORD PTR [edx+0x36c3900f]
  40c533:	push   esi
  40c534:	das    
  40c535:	sub    DWORD PTR [esi+0xdae459e],eax
  40c53b:	scas   al,BYTE PTR es:[edi]
  40c53c:	mov    bl,0xfc
  40c53e:	pop    ebp
  40c53f:	sub    esp,DWORD PTR [ebp+0x4e]
  40c542:	adc    bh,BYTE PTR [edx]
  40c544:	imul   edi,DWORD PTR [eax-0x61bd922],0xa
  40c54b:	movaps xmm3,xmm6
  40c54e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c54f:	ror    DWORD PTR [edx-0x27d9dd88],cl
  40c555:	fwait
  40c556:	mov    edi,esp
  40c558:	push   0xffffffbd
  40c55a:	mov    ds:0x12d551c7,eax
  40c55f:	inc    edx
  40c561:	leave  
  40c562:	and    bl,BYTE PTR [esi-0x39]
  40c565:	sub    BYTE PTR [edx-0x38f77886],dl
  40c56b:	(bad)  
  40c56c:	cld    
  40c56d:	add    DWORD PTR [edi],0xd
  40c570:	or     BYTE PTR [edi+ebx*2],bl
  40c573:	sbb    al,0x30
  40c575:	mov    ch,0x11
  40c577:	push   0xa
  40c579:	add    al,0x98
  40c57b:	int    0x6
  40c57d:	cdq    
  40c57e:	jne    0x40c525
  40c580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c581:	dec    eax
  40c582:	test   al,0xb
  40c584:	stos   BYTE PTR es:[edi],al
  40c585:	mov    ss,WORD PTR [eax+0x7f]
  40c588:	mov    ch,0x6a
  40c58a:	push   eax
  40c58b:	inc    ebx
  40c58c:	clc    
  40c58d:	pop    ebx
  40c58e:	imul   edi,edi,0x66ee9edc
  40c594:	sub    al,0x75
  40c596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c597:	mov    ah,0xba
  40c599:	add    BYTE PTR [esi-0x2ff274e6],cl
  40c59f:	cmp    ebp,eax
  40c5a1:	outs   dx,DWORD PTR ds:[esi]
  40c5a2:	jl     0x40c566
  40c5a4:	iret   
  40c5a5:	dec    ebx
  40c5a6:	adc    eax,esi
  40c5a8:	xor    al,0x7
  40c5aa:	adc    esi,eax
  40c5ac:	cmp    al,0xaa
  40c5ae:	inc    esi
  40c5af:	test   eax,0x29a1a3a3
  40c5b4:	and    al,0xeb
  40c5b6:	jl     0x40c57a
  40c5b8:	pushf  
  40c5b9:	into   
  40c5ba:	adc    BYTE PTR [esi-0x7b],ah
  40c5bd:	inc    ebx
  40c5be:	pop    ebx
  40c5bf:	pop    ebx
  40c5c0:	adc    eax,0x25eb8748
  40c5c5:	cmc    
  40c5c6:	xor    eax,0x524ecdb
  40c5cb:	dec    eax
  40c5cc:	add    al,0x8a
  40c5ce:	ficom  WORD PTR [edi+ebp*4-0x7e721108]
  40c5d5:	iret   
  40c5d6:	sbb    DWORD PTR [esi+ecx*1+0x4b],edx
  40c5da:	(bad)  
  40c5db:	xchg   esi,eax
  40c5dc:	pusha  
  40c5dd:	outs   dx,BYTE PTR ds:[esi]
  40c5de:	test   BYTE PTR [ebx-0x31],cl
  40c5e1:	daa    
  40c5e2:	add    al,0x12
  40c5e4:	test   bl,dl
  40c5e6:	in     eax,dx
  40c5e7:	mov    eax,gs
  40c5e9:	out    0xc5,al
  40c5eb:	push   es
  40c5ec:	cdq    
  40c5ed:	stos   BYTE PTR es:[edi],al
  40c5ee:	dec    ebp
  40c5ef:	push   esp
  40c5f0:	xchg   esp,eax
  40c5f1:	jnp    0x40c5c0
  40c5f3:	es nop
  40c5f5:	test   DWORD PTR [edi+0x28],0xb62d4c9b
  40c5fc:	aaa    
  40c5fd:	ds add bh,dl
  40c600:	call   0xa914:0x57f8fb06
  40c607:	dec    esp
  40c608:	mov    dh,0x8a
  40c60a:	pop    edx
  40c60b:	xor    BYTE PTR [ecx+0x4755c214],bh
  40c611:	lahf   
  40c612:	fld    QWORD PTR [edx]
  40c614:	or     eax,0xf4e347fe
  40c619:	js     0x40c5e5
  40c61b:	mov    ds:0x1f456a41,al
  40c620:	jae    0xcb51f2e7
  40c626:	icebp  
  40c627:	pop    esp
  40c628:	or     BYTE PTR [edx+0x3fa805ca],bh
  40c62e:	es stos DWORD PTR es:[edi],eax
  40c630:	cli    
  40c631:	xchg   edx,edx
  40c633:	pop    ebp
  40c634:	repz pusha 
  40c636:	sub    esp,DWORD PTR [eax+0x58bf0dfe]
  40c63c:	dec    edx
  40c63d:	inc    ebx
  40c63e:	mul    BYTE PTR [edx-0x1287700d]
  40c644:	out    0xc9,eax
  40c646:	mov    dl,0x81
  40c648:	js     0x40c625
  40c64a:	xchg   esi,eax
  40c64b:	or     cl,BYTE PTR [eax]
  40c64d:	rcl    DWORD PTR [eax+eiz*2+0xfb1649a],cl
  40c654:	pushf  
  40c655:	dec    BYTE PTR ds:0x6a1edb08
  40c65b:	stc    
  40c65c:	(bad)  
  40c65d:	fdiv   QWORD PTR [edx+0x2]
  40c660:	jno    0x40c668
  40c662:	in     eax,0x83
  40c664:	xor    al,0x20
  40c666:	add    al,0x15
  40c668:	cmp    ebx,edx
  40c66a:	je     0x40c603
  40c66c:	ins    BYTE PTR es:[edi],dx
  40c66d:	loope  0x40c664
  40c66f:	hlt    
  40c670:	push   ebx
  40c671:	xor    eax,0xc8ed2f52
  40c676:	inc    ebx
  40c677:	retf   
  40c678:	push   es
  40c679:	cmp    eax,DWORD PTR [ebx+0x6a882005]
  40c67f:	push   esp
  40c680:	jg     0x40c66f
  40c682:	mov    ch,0xb9
  40c684:	cmp    eax,0x868b501e
  40c689:	int    0x84
  40c68b:	fnstsw WORD PTR [eax+0x7b]
  40c68e:	outs   dx,DWORD PTR ds:[esi]
  40c68f:	inc    ebp
  40c690:	push   0xf5347072
  40c695:	pop    ecx
  40c696:	dec    esp
  40c697:	add    bh,cl
  40c699:	js     0x40c6e5
  40c69b:	pop    ebp
  40c69c:	cmp    edx,eax
  40c69e:	xor    DWORD PTR [eax+0x38],ebx
  40c6a1:	mov    eax,ds:0x335fbef6
  40c6a6:	cs jae 0x40c6cf
  40c6a9:	not    BYTE PTR [edi+0x71]
  40c6ac:	xchg   esp,eax
  40c6ad:	jmp    0x1430546b
  40c6b2:	xor    BYTE PTR [ebp+0x74],cl
  40c6b5:	aad    0x9
  40c6b7:	test   eax,0x28515abd
  40c6bc:	xchg   ecx,eax
  40c6bd:	ins    DWORD PTR es:[edi],dx
  40c6be:	div    edx
  40c6c0:	lock fimul DWORD PTR gs:[esi+eiz*8]
  40c6c5:	dec    esi
  40c6c6:	and    esp,DWORD PTR [esi-0x1c552433]
  40c6cc:	jne    0x40c73d
  40c6ce:	adc    ah,BYTE PTR [ebp-0x7f]
  40c6d1:	jmp    FWORD PTR [eax+edi*8-0x72993ddc]
  40c6d8:	hlt    
  40c6d9:	in     eax,dx
  40c6da:	aad    0x97
  40c6dc:	pop    es
  40c6dd:	mov    ebp,0x8a39d3ea
  40c6e2:	jae    0x40c758
  40c6e4:	fistp  QWORD PTR [ecx-0x6c]
  40c6e7:	sub    DWORD PTR [ebp-0x281d2324],0xb02c03ff
  40c6f1:	mov    WORD PTR [ecx+0x85e9551],es
  40c6f7:	in     al,0x12
  40c6f9:	repnz mov edi,esi
  40c6fc:	pop    esi
  40c6fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6fe:	and    al,0x6
  40c700:	xchg   BYTE PTR [edx+0x72],bl
  40c703:	xor    ecx,DWORD PTR [edi]
  40c705:	or     BYTE PTR [eax+0x535e35f3],ch
  40c70b:	mov    ah,dl
  40c70d:	cmp    eax,eax
  40c70f:	jno    0x40c72f
  40c711:	das    
  40c712:	jp     0x40c6bc
  40c714:	scas   eax,DWORD PTR es:[edi]
  40c715:	ins    BYTE PTR es:[edi],dx
  40c716:	dec    ebp
  40c717:	loopne 0x40c710
  40c719:	ror    ebx,0x38
  40c71c:	test   eax,0xf621f8d1
  40c721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c722:	adc    eax,ecx
  40c724:	pop    ebx
  40c725:	mov    eax,0x269f3e5a
  40c72a:	in     eax,dx
  40c72b:	jmp    0x1a6999b5
  40c730:	add    eax,0xc64bf1e0
  40c735:	jns    0x40c782
  40c737:	jns    0x40c795
  40c739:	or     DWORD PTR [eax-0x6a6c166],edi
  40c73f:	das    
  40c740:	loop   0x40c7a4
  40c742:	out    0x6d,al
  40c744:	scas   al,BYTE PTR es:[edi]
  40c745:	(bad)  
  40c746:	stc    
  40c747:	inc    edx
  40c748:	dec    esi
  40c749:	mov    ch,0x79
  40c74b:	push   ecx
  40c74c:	jecxz  0x40c6f1
  40c74e:	xchg   edi,eax
  40c74f:	inc    edi
  40c750:	sub    BYTE PTR [edx+0x5c],al
  40c753:	xor    dl,BYTE PTR [eax]
  40c755:	fwait
  40c756:	mov    ecx,ebx
  40c758:	ret    0xf4e8
  40c75b:	arpl   WORD PTR [edi],di
  40c75d:	cld    
  40c75e:	or     al,0x57
  40c760:	faddp  st(5),st
  40c762:	jp     0x40c7b6
  40c764:	xchg   ecx,eax
  40c765:	ror    BYTE PTR [edi],1
  40c767:	pop    edx
  40c768:	sbb    BYTE PTR [edi-0x6e818a58],bh
  40c76e:	in     eax,dx
  40c76f:	test   al,0xe1
  40c771:	xor    ch,BYTE PTR [eax]
  40c773:	xor    al,0x42
  40c775:	jle    0x40c754
  40c777:	ds jmp 0xa72976ce
  40c77d:	mov    esi,0xa3aa561b
  40c782:	aas    
  40c783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c784:	sub    ebp,eax
  40c786:	test   edx,0x26d12e6c
  40c78c:	retf   
  40c78d:	push   ebp
  40c78e:	addr16 (bad) 
  40c790:	pop    edx
  40c791:	pushf  
  40c792:	cli    
  40c793:	inc    ecx
  40c794:	loop   0x40c7b5
  40c796:	pop    edi
  40c797:	mov    ebx,0x4982bc0c
  40c79c:	ins    BYTE PTR es:[edi],dx
  40c79d:	push   ebp
  40c79e:	pusha  
  40c79f:	jbe    0x40c7fc
  40c7a1:	jae    0x40c730
  40c7a3:	xor    eax,0xf7593fa
  40c7a8:	jmp    FWORD PTR [ecx+edi*2-0x630533bb]
  40c7af:	inc    ebx
  40c7b0:	inc    edi
  40c7b1:	inc    edi
  40c7b2:	jb     0x40c782
  40c7b4:	pop    eax
  40c7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b6:	popa   
  40c7b7:	sbb    eax,0xe7db6a46
  40c7bc:	mov    esp,0x8aae5a80
  40c7c1:	cmp    eax,0xeed34cd5
  40c7c6:	inc    ebx
  40c7c7:	and    ah,BYTE PTR [ecx+0x1bb41fb2]
  40c7cd:	popa   
  40c7ce:	popf   
  40c7cf:	or     bh,BYTE PTR ds:0x570c3b38
  40c7d5:	imul   eax,DWORD PTR [edx-0x9]
  40c7d9:	data16 loope 0x40c785
  40c7dc:	mov    esp,0xdaec43bc
  40c7e1:	adc    DWORD PTR [edi+0x3c],esp
  40c7e4:	pop    eax
  40c7e5:	in     al,dx
  40c7e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7e7:	inc    esi
  40c7e8:	popf   
  40c7e9:	jb     0x40c853
  40c7eb:	inc    edx
  40c7ec:	mov    esp,0x8ec796b4
  40c7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7f2:	jae    0x40c7f9
  40c7f4:	inc    eax
  40c7f5:	fist   WORD PTR [edi]
  40c7f7:	mov    edx,DWORD PTR [ecx]
  40c7f9:	xlat   BYTE PTR ds:[ebx]
  40c7fa:	jge    0x40c7f8
  40c7fc:	ja     0x40c878
  40c7fe:	and    ecx,DWORD PTR [ecx]
  40c800:	test   ebx,eax
  40c802:	and    esp,esp
  40c804:	loopne 0x40c851
  40c806:	inc    edi
  40c807:	pop    ds
  40c808:	push   ebp
  40c809:	call   0x8e:0x4ef57c08
  40c810:	test   DWORD PTR ds:0xca5cf02,esp
  40c816:	sbb    dh,ah
  40c818:	and    bl,al
  40c81a:	or     bl,BYTE PTR [ecx-0x1]
  40c81d:	scas   eax,DWORD PTR es:[edi]
  40c81e:	pop    ebp
  40c81f:	mov    edi,0x73a06a8d
  40c824:	shr    cl,1
  40c826:	mov    ebx,0xa3143ce8
  40c82b:	je     0x40c824
  40c82d:	repz leave 
  40c82f:	into   
  40c830:	push   ds
  40c831:	or     eax,0x95f8f3ce
  40c836:	and    BYTE PTR [ecx-0x14],dh
  40c839:	fist   DWORD PTR [ecx]
  40c83c:	in     al,dx
  40c83d:	mov    bh,0x3d
  40c83f:	mov    al,ds:0xb6d38f74
  40c844:	lods   eax,DWORD PTR ds:[esi]
  40c845:	mov    ds:0x973ffae1,eax
  40c84a:	jno    0x40c86d
  40c84c:	imul   esp,DWORD PTR [ecx+0x24],0x3e
  40c850:	mov    bl,0x11
  40c852:	xchg   edx,eax
  40c853:	pop    ss
  40c854:	jecxz  0x40c835
  40c856:	jp     0x40c8b7
  40c858:	aaa    
  40c859:	sahf   
  40c85a:	lods   eax,DWORD PTR ds:[esi]
  40c85b:	popf   
  40c85c:	adc    ah,cl
  40c85e:	add    al,bh
  40c860:	cmp    eax,0xef6edf9
  40c865:	sbb    bl,BYTE PTR [ebx-0x18]
  40c868:	lock xchg ebp,eax
  40c86a:	xchg   edi,eax
  40c86b:	daa    
  40c86c:	in     eax,dx
  40c86d:	rol    BYTE PTR [esi+0x40e258e8],cl
  40c873:	pop    ebp
  40c874:	andnps xmm0,XMMWORD PTR [ebx]
  40c877:	jecxz  0x40c8ca
  40c879:	les    edi,FWORD PTR [esi+0x157de253]
  40c87f:	add    BYTE PTR [esp+0x3b],bh
  40c883:	jbe    0x40c861
  40c885:	das    
  40c886:	jae    0x40c897
  40c888:	iret   
  40c889:	pop    ds
  40c88a:	pop    es
  40c88b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c88c:	pop    edi
  40c88d:	(bad)  
  40c88e:	retf   0xe8e0
  40c891:	mov    edi,0xd625589e
  40c896:	ja     0x40c834
  40c898:	(bad)  ds:0x476b36fe
  40c89e:	push   ds
  40c89f:	cld    
  40c8a0:	call   0x6970:0xf392d34a
  40c8a7:	xchg   edi,eax
  40c8a8:	jns    0x40c8b6
  40c8aa:	inc    eax
  40c8ab:	retf   0x4182
  40c8ae:	dec    eax
  40c8af:	(bad)  
  40c8b0:	xchg   edi,eax
  40c8b1:	ins    BYTE PTR es:[edi],dx
  40c8b2:	mul    al
  40c8b4:	jge    0x40c873
  40c8b6:	aaa    
  40c8b7:	neg    DWORD PTR [edx+eiz*2]
  40c8ba:	cmp    esi,DWORD PTR [ecx-0x20dc8f67]
  40c8c0:	jo     0x40c930
  40c8c2:	jne    0x40c892
  40c8c4:	mov    ebx,0xe4b17c46
  40c8c9:	xchg   BYTE PTR [eax+ebp*4-0x7],bl
  40c8cd:	or     BYTE PTR [esi-0x7b182014],dl
  40c8d3:	fistp  WORD PTR [edx]
  40c8d5:	or     eax,0x87add9e0
  40c8da:	push   esp
  40c8db:	pop    edx
  40c8dc:	push   0x9e3b168c
  40c8e1:	sub    ecx,esp
  40c8e3:	imul   edi,DWORD PTR [eax-0x50152247],0x73
  40c8ea:	es daa 
  40c8ec:	jp     0x40c8b8
  40c8ee:	retf   
  40c8ef:	jmp    0x40c91c
  40c8f1:	sbb    ebp,DWORD PTR [ebx+0x5e]
  40c8f4:	and    BYTE PTR [edi],dh
  40c8f6:	popa   
  40c8f7:	cli    
  40c8f8:	clc    
  40c8f9:	jbe    0x40c91a
  40c8fb:	pop    edx
  40c8fc:	xor    ch,BYTE PTR [edi]
  40c8fe:	repz js 0x40c967
  40c901:	out    dx,eax
  40c902:	jecxz  0x40c8ea
  40c904:	bts    DWORD PTR [esi+0x4d218c15],esp
  40c90b:	mov    cs,WORD PTR [ebx]
  40c90d:	test   eax,ecx
  40c90f:	jge    0x40c8ea
  40c911:	out    dx,al
  40c912:	push   ebp
  40c913:	mov    ch,0x48
  40c915:	lods   eax,DWORD PTR ds:[esi]
  40c916:	xchg   ebx,eax
  40c917:	icebp  
  40c918:	mov    eax,ds:0x1926f7bf
  40c91d:	pop    edi
  40c91e:	pop    eax
  40c91f:	mov    ebp,0xd93ef115
  40c924:	ja     0x40c9a5
  40c926:	mov    esp,0xdf5e1fd6
  40c92b:	imul   DWORD PTR [ebx+0x7d]
  40c92e:	or     DWORD PTR [ebx+edx*2],edx
  40c931:	fcomp  QWORD PTR [ebx]
  40c933:	test   ebx,0x551af7f9
  40c939:	sbb    BYTE PTR [edi+0xf],bl
  40c93c:	push   ss
  40c93d:	push   edx
  40c93e:	xlat   BYTE PTR ds:[ebx]
  40c93f:	stc    
  40c940:	add    eax,0x7e632ded
  40c945:	in     al,0x7e
  40c947:	adc    al,0xb5
  40c949:	cwde   
  40c94a:	ins    DWORD PTR es:[edi],dx
  40c94b:	test   BYTE PTR [edi+0x2b30adc0],al
  40c951:	imul   ecx,DWORD PTR ds:0x274fa2c7,0x2eb5ad5f
  40c95b:	or     BYTE PTR [ebx],al
  40c95d:	jo     0x40c94f
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0xb9e565d]
  40d00c:	mov    esi,0x7c7ce9b2
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	stc    
  40d016:	xchg   edx,eax
  40d017:	ret    
  40d018:	mov    esi,0x82230bf0
  40d01d:	sub    ecx,esi
  40d01f:	mov    ah,0x98
  40d021:	xor    eax,eax
  40d023:	icebp  
  40d024:	mov    al,0xc1
  40d026:	lds    esi,FWORD PTR [ebp-0xa]
  40d029:	jle    0x40d056
  40d02b:	dec    ebx
  40d02c:	out    0xb3,eax
  40d02e:	mov    bl,0x70
  40d030:	inc    eax
  40d031:	sub    edx,esp
  40d033:	mov    ch,0xdb
  40d035:	in     eax,0x1c
  40d037:	lods   al,BYTE PTR ds:[esi]
  40d038:	jbe    0x40cfc9
  40d03a:	js     0x40d08b
  40d03c:	punpckldq mm6,DWORD PTR [ecx-0x3a295602]
  40d043:	and    al,0x2d
  40d045:	mov    al,0x2e
  40d047:	xchg   esi,eax
  40d048:	iret   
  40d049:	mov    DWORD PTR ds:0x1127a3ad,edi
  40d04f:	stos   BYTE PTR es:[edi],al
  40d050:	and    BYTE PTR [esi+esi*4],dl
  40d053:	retf   0x8c25
  40d056:	aaa    
  40d057:	ins    BYTE PTR es:[edi],dx
  40d058:	cmp    ch,BYTE PTR [ecx-0x65]
  40d05b:	bound  esp,QWORD PTR es:[ebp*1+0x2ed247fa]
  40d063:	fimul  DWORD PTR [eax+0x372b5c47]
  40d069:	iret   
  40d06a:	xchg   ecx,eax
  40d06b:	pop    ebx
  40d06c:	push   ebp
  40d06d:	pop    edx
  40d06e:	repnz ins DWORD PTR es:[edi],dx
  40d070:	jge    0x40cffa
  40d072:	enter  0x6e77,0xd5
  40d076:	adc    BYTE PTR [esi-0x40],ah
  40d079:	out    dx,eax
  40d07a:	mov    ebp,0xaede650d
  40d07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d080:	mov    eax,0xfef0f90d
  40d085:	jb     0x40d020
  40d087:	push   es
  40d088:	jae    0x40d0cf
  40d08a:	xlat   BYTE PTR ds:[ebx]
  40d08b:	ins    DWORD PTR es:[edi],dx
  40d08c:	mov    WORD PTR [edx+0x5d],ds
  40d08f:	les    edx,FWORD PTR ds:0x9ed5efc7
  40d095:	nop
  40d096:	sbb    edi,ebx
  40d098:	in     al,0x3c
  40d09a:	xor    al,0x9d
  40d09c:	xchg   esi,eax
  40d09d:	jle    0x40d0c0
  40d09f:	hlt    
  40d0a0:	dec    ebx
  40d0a1:	dec    esp
  40d0a2:	dec    esi
  40d0a3:	xor    eax,0xd7a154be
  40d0a8:	fdiv   DWORD PTR [esi]
  40d0aa:	push   edx
  40d0ab:	xchg   BYTE PTR [edi],dl
  40d0ad:	jmp    0xa5e5:0xa7db9744
  40d0b4:	push   eax
  40d0b5:	cwde   
  40d0b6:	add    ch,ch
  40d0b8:	in     al,dx
  40d0b9:	pop    edx
  40d0ba:	call   0x6147:0x6f6b0f9
  40d0c1:	add    BYTE PTR [edi-0x31c1d35c],cl
  40d0c7:	adc    dh,BYTE PTR [ecx+0x39]
  40d0ca:	ss test eax,0x602cafc8
  40d0d0:	popf   
  40d0d1:	pop    ebx
  40d0d2:	dec    ebp
  40d0d3:	fwait
  40d0d4:	pop    edx
  40d0d5:	jmp    0xecbc:0xe628d708
  40d0dc:	out    dx,al
  40d0dd:	adc    DWORD PTR [ecx-0x5a844ff3],esp
  40d0e3:	xor    DWORD PTR [edi],edx
  40d0e5:	pop    DWORD PTR [eax]
  40d0e7:	aad    0xfe
  40d0e9:	shr    BYTE PTR [eax+esi*2+0x2f],0xa
  40d0ee:	xchg   edi,eax
  40d0ef:	or     DWORD PTR [esp+eax*4-0x1c9462ee],0x3d
  40d0f7:	pop    ds
  40d0f8:	mul    WORD PTR ss:[ebp+eax*1+0x55]
  40d0fe:	cmc    
  40d0ff:	pusha  
  40d100:	sbb    al,bl
  40d102:	aad    0x19
  40d104:	mov    edi,0x68c80b
  40d109:	xchg   esp,eax
  40d10a:	es xchg ebx,eax
  40d10c:	and    DWORD PTR [edx+edi*2+0x6a],ebx
  40d110:	pop    es
  40d111:	xchg   esp,eax
  40d112:	pop    ebx
  40d113:	inc    esi
  40d114:	adc    eax,0xc4429ce4
  40d119:	cmp    DWORD PTR [esi],esi
  40d11b:	xor    eax,0x1107eaba
  40d120:	mov    edx,0x9aaa648e
  40d125:	pop    ebp
  40d126:	or     eax,ecx
  40d128:	sub    BYTE PTR [ecx+0xa],bl
  40d12b:	sub    BYTE PTR [esi+0x5a],0xbe
  40d12f:	test   BYTE PTR [ecx],cl
  40d131:	pop    eax
  40d132:	add    DWORD PTR [edx+0x27],eax
  40d135:	shl    BYTE PTR [esi-0x74],cl
  40d138:	repnz lea ebx,[ecx+0x619de809]
  40d13f:	jo     0x40d14c
  40d141:	dec    ebp
  40d142:	push   ebp
  40d143:	gs adc eax,0xed924b81
  40d149:	inc    esi
  40d14a:	jecxz  0x40d156
  40d14c:	stos   BYTE PTR es:[edi],al
  40d14d:	sub    dl,BYTE PTR [edi-0x1576e00a]
  40d153:	pop    eax
  40d154:	pop    edx
  40d155:	push   ss
  40d156:	pop    ebp
  40d157:	(bad)  
  40d158:	aad    0xd
  40d15a:	jnp    0x40d17d
  40d15c:	pop    ds
  40d15d:	cmp    al,0xef
  40d15f:	ret    0xc41d
  40d162:	lock cmp BYTE PTR [edx-0x2],0x70
  40d167:	test   BYTE PTR [esi+0x56457103],ch
  40d16d:	in     al,0x1a
  40d16f:	sar    DWORD PTR [ebp+ebx*4-0xbd07dde],0x94
  40d177:	stos   BYTE PTR es:[edi],al
  40d178:	push   ebx
  40d179:	repz fs out dx,al
  40d17c:	nop
  40d17d:	sub    BYTE PTR [ebx+0x46305e72],0x58
  40d184:	push   esi
  40d185:	xlat   BYTE PTR ds:[ebx]
  40d186:	xor    ecx,DWORD PTR [edi+0x3f]
  40d189:	retf   0xe632
  40d18c:	cwde   
  40d18d:	jg     0x40d1d4
  40d18f:	mov    cl,0xf6
  40d191:	pop    ss
  40d192:	jns    0x40d121
  40d194:	jmp    0x40d12d
  40d196:	push   esp
  40d197:	xchg   ebp,eax
  40d198:	jge    0x40d140
  40d19a:	jnp    0x40d1bc
  40d19c:	push   ds
  40d19d:	xchg   edi,eax
  40d19e:	cdq    
  40d19f:	mov    dl,0xc1
  40d1a1:	add    DWORD PTR [edx-0x6d5f6f86],eax
  40d1a7:	pop    esi
  40d1a8:	add    BYTE PTR [ebx+0x5a],al
  40d1ab:	sbb    ch,BYTE PTR [ecx-0x4d]
  40d1ae:	xchg   esp,eax
  40d1af:	mov    esi,0x65f8e757
  40d1b4:	push   0xffffffd5
  40d1b6:	sbb    eax,0xf8ca8dd3
  40d1bb:	js     0x40d157
  40d1bd:	add    al,0xb0
  40d1bf:	out    0xfa,eax
  40d1c1:	shr    BYTE PTR [edx+0x57],1
  40d1c4:	dec    ebp
  40d1c5:	xor    bl,BYTE PTR [edx-0x42]
  40d1c8:	xchg   edi,eax
  40d1c9:	(bad)  
  40d1ca:	jbe    0x40d1fb
  40d1cc:	icebp  
  40d1cd:	fnsave [edi+ecx*2]
  40d1d0:	faddp  st(2),st
  40d1d2:	and    al,0xd9
  40d1d4:	mov    ds:0x4fef400f,eax
  40d1d9:	pop    es
  40d1da:	mov    ah,0x1c
  40d1dc:	pop    edx
  40d1dd:	xor    ch,BYTE PTR [ecx-0x6b6bf35d]
  40d1e3:	lods   al,BYTE PTR ds:[esi]
  40d1e4:	in     al,dx
  40d1e5:	fistp  QWORD PTR [esi]
  40d1e7:	aad    0xab
  40d1e9:	je     0x40d247
  40d1eb:	xchg   edx,eax
  40d1ec:	lods   eax,DWORD PTR ds:[esi]
  40d1ed:	sub    al,0xf3
  40d1ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1f0:	adc    DWORD PTR [edx+edx*4+0x69],0xfffffff7
  40d1f5:	dec    ebp
  40d1f6:	out    dx,eax
  40d1f7:	adc    ebp,edi
  40d1f9:	xchg   eax,esp
  40d1fb:	adc    ebp,DWORD PTR [ecx-0x5a]
  40d1fe:	ror    BYTE PTR [esp+eiz*4],1
  40d201:	mov    al,0xc2
  40d203:	mov    dl,BYTE PTR [ebp-0x463286cf]
  40d209:	jo     0x40d281
  40d20b:	dec    eax
  40d20c:	ins    DWORD PTR es:[edi],dx
  40d20d:	dec    edi
  40d20e:	and    edx,edx
  40d210:	mov    edx,0x3fc4b3cc
  40d215:	jg     0x40d225
  40d217:	mov    ds:0x521ed21f,al
  40d21c:	pop    ecx
  40d21d:	test   DWORD PTR [ebp+0x69],ecx
  40d220:	pop    esi
  40d221:	aad    0x53
  40d223:	sbb    bl,BYTE PTR [ebx+0x32]
  40d226:	test   DWORD PTR [esi-0x37353412],ebp
  40d22c:	mov    esp,0x9947bd6e
  40d231:	lods   al,BYTE PTR ds:[esi]
  40d232:	stc    
  40d233:	cli    
  40d234:	stos   BYTE PTR es:[edi],al
  40d235:	mov    ebx,DWORD PTR [esi+edi*8-0x59]
  40d239:	loope  0x40d262
  40d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d23c:	repz imul ebp,DWORD PTR [esi],0x52
  40d240:	repnz add BYTE PTR [edi+0x3d],cl
  40d244:	mov    eax,0x55d9452b
  40d249:	je     0x40d1ce
  40d24b:	popf   
  40d24c:	pusha  
  40d24d:	sbb    DWORD PTR [eax+0x27],ecx
  40d250:	and    eax,0x677c9e35
  40d255:	popa   
  40d256:	xor    BYTE PTR [eax-0x42],bl
  40d259:	and    eax,0x15571a54
  40d25e:	mov    esp,0xe33b2010
  40d263:	or     DWORD PTR [edx-0x1a],edx
  40d266:	mov    ds,WORD PTR [edx-0x21]
  40d269:	ja     0x40d28c
  40d26b:	dec    esp
  40d26c:	jae    0x40d25c
  40d26e:	sbb    esi,ebx
  40d270:	pop    ebp
  40d271:	stc    
  40d272:	ins    DWORD PTR es:[edi],dx
  40d273:	pop    ebx
  40d274:	in     al,0xd7
  40d276:	sub    eax,ebp
  40d278:	inc    ecx
  40d279:	jl     0x40d205
  40d27b:	stc    
  40d27c:	fidiv  DWORD PTR [ecx+eiz*2]
  40d27f:	icebp  
  40d280:	out    0x6c,eax
  40d282:	cmp    al,0x62
  40d284:	sbb    ebp,DWORD PTR [esi-0x2cd3e245]
  40d28a:	pop    esi
  40d28b:	mov    eax,0xec9aef08
  40d290:	jecxz  0x40d25f
  40d292:	sbb    DWORD PTR [esi+0x28],esp
  40d295:	or     eax,0x24fea61d
  40d29a:	push   ecx
  40d29b:	jge    0x40d262
  40d29d:	cmp    DWORD PTR ds:0xa8a9f32c,esp
  40d2a3:	loope  0x40d316
  40d2a5:	xchg   edi,eax
  40d2a6:	iret   
  40d2a7:	mov    ebx,0x21248355
  40d2ac:	(bad)  
  40d2ad:	mov    dh,0xd8
  40d2af:	push   cs
  40d2b0:	or     edi,DWORD PTR [edx-0x29465ac8]
  40d2b6:	push   0x6e
  40d2b8:	inc    ebp
  40d2b9:	jno    0x40d2fd
  40d2bb:	mov    bl,0x2a
  40d2bd:	nop
  40d2be:	pop    esp
  40d2bf:	cs pop edx
  40d2c1:	cs push es
  40d2c3:	repnz outs dx,BYTE PTR ds:[esi]
  40d2c5:	mov    ecx,0x976429ac
  40d2ca:	fisttp WORD PTR [eax+0x41]
  40d2cd:	je     0x40d2a7
  40d2cf:	fcomp  QWORD PTR [ebp+0x78]
  40d2d2:	retf   0x1ea
  40d2d5:	mov    bl,0xd3
  40d2d7:	sar    DWORD PTR [ebp-0x137e86a],1
  40d2dd:	aam    0x65
  40d2df:	outs   dx,DWORD PTR ds:[esi]
  40d2e0:	dec    esi
  40d2e1:	sbb    BYTE PTR [esi],0x4f
  40d2e4:	aas    
  40d2e5:	into   
  40d2e6:	pop    ds
  40d2e7:	fnstcw WORD PTR [ebp-0x24]
  40d2ea:	mov    ebx,0x28da129a
  40d2ef:	stos   BYTE PTR es:[edi],al
  40d2f0:	sbb    BYTE PTR [ebx-0xc2b9b2c],0x37
  40d2f7:	sbb    eax,0x74255c2e
  40d2fc:	loope  0x40d2ea
  40d2fe:	scas   eax,DWORD PTR es:[edi]
  40d2ff:	jecxz  0x40d37e
  40d301:	into   
  40d302:	push   0x6f26b8cc
  40d307:	mov    esi,0x342f9e63
  40d30c:	lds    esi,FWORD PTR [eax+0x28bc0e0c]
  40d312:	stc    
  40d313:	jl     0x40d334
  40d315:	sub    DWORD PTR [ebp-0x15758547],eax
  40d31b:	bound  esp,QWORD PTR [edx+0x4e3a538c]
  40d321:	inc    ecx
  40d322:	and    al,0x54
  40d324:	into   
  40d325:	sahf   
  40d326:	ds push ds
  40d328:	adc    al,0x12
  40d32a:	ins    DWORD PTR es:[edi],dx
  40d32b:	xlat   BYTE PTR ds:[ebx]
  40d32c:	ins    DWORD PTR es:[edi],dx
  40d32d:	pushf  
  40d32e:	adc    ecx,DWORD PTR [ecx]
  40d330:	mul    DWORD PTR [ebx-0x47]
  40d333:	loopne 0x40d373
  40d335:	mov    ebx,0xb58a2e01
  40d33a:	and    eax,0xa437811f
  40d33f:	es daa 
  40d341:	test   eax,0x8590ecc0
  40d346:	ss ss pop ss
  40d349:	aas    
  40d34a:	cwde   
  40d34b:	adc    eax,0x36eff816
  40d350:	and    BYTE PTR [ebx+0x45001e5e],bh
  40d356:	cli    
  40d357:	mov    eax,0xae4c320c
  40d35c:	cmp    edx,DWORD PTR [ecx+0x3b661957]
  40d362:	std    
  40d363:	sahf   
  40d364:	adc    ebx,DWORD PTR ds:0x46809384
  40d36a:	or     bl,0x98
  40d36d:	arpl   WORD PTR [ecx-0x5c2b287d],ax
  40d373:	ds jnp 0x40d37e
  40d376:	dec    BYTE PTR [ebx+eax*1]
  40d379:	pop    ss
  40d37a:	inc    ecx
  40d37b:	cli    
  40d37c:	(bad)  
  40d37d:	jmp    0xe8d45d02
  40d382:	push   edi
  40d383:	push   ebp
  40d384:	mov    dl,0xb5
  40d386:	pop    esp
  40d387:	jmp    0x40d314
  40d389:	fs push esi
  40d38b:	jnp    0x40d3e0
  40d38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d38e:	(bad)  
  40d38f:	pop    ebx
  40d390:	dec    eax
  40d391:	cmp    dl,BYTE PTR [edi]
  40d393:	fdivr  DWORD PTR [edi]
  40d395:	inc    esi
  40d396:	push   ebp
  40d397:	jecxz  0x40d326
  40d399:	mov    bh,0xfa
  40d39b:	scas   eax,DWORD PTR es:[edi]
  40d39c:	xor    edi,DWORD PTR [eax]
  40d39e:	dec    ecx
  40d39f:	addr16 jb 0x40d400
  40d3a2:	outs   dx,BYTE PTR ds:[esi]
  40d3a3:	xor    BYTE PTR [esi],dh
  40d3a5:	dec    ebx
  40d3a6:	call   0xbe11:0x33b368e6
  40d3ad:	pop    es
  40d3ae:	jg     0x40d3f7
  40d3b0:	push   es
  40d3b1:	and    BYTE PTR ds:0x30beb193,bl
  40d3b7:	(bad)  
  40d3b8:	enter  0x4c6c,0xab
  40d3bc:	retf   0x5991
  40d3bf:	push   es
  40d3c0:	mov    ebp,0x388862c5
  40d3c5:	cwde   
  40d3c6:	aas    
  40d3c7:	pop    ds
  40d3c8:	inc    edi
  40d3c9:	and    al,0xc
  40d3cb:	push   ebp
  40d3cc:	add    al,0xd6
  40d3ce:	je     0x40d3e7
  40d3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3d1:	into   
  40d3d2:	cmp    esp,eax
  40d3d4:	xchg   ebp,edx
  40d3d6:	aam    0xc5
  40d3d8:	mov    bl,0xe4
  40d3da:	jg     0x40d446
  40d3dc:	fcmovnbe st,st(0)
  40d3de:	int    0x1e
  40d3e0:	das    
  40d3e1:	js     0x40d40f
  40d3e3:	push   edx
  40d3e4:	mov    edx,0xc4043335
  40d3e9:	ffree  st(6)
  40d3eb:	sbb    BYTE PTR [eax+0x47],dl
  40d3ee:	pop    ss
  40d3ef:	dec    eax
  40d3f0:	lahf   
  40d3f1:	outs   dx,DWORD PTR ds:[esi]
  40d3f2:	xor    BYTE PTR [ecx+0x15b0b12f],ah
  40d3f8:	xor    eax,0x29256034
  40d3fd:	mov    cl,0x81
  40d3ff:	sub    ch,bh
  40d401:	add    al,0x3
  40d403:	add    al,0x5f
  40d405:	arpl   sp,si
  40d407:	dec    ecx
  40d408:	iret   
  40d409:	test   ah,ah
  40d40b:	mov    fs,WORD PTR [edx+0x74]
  40d40e:	jle    0x40d40c
  40d410:	or     ebp,esi
  40d412:	sub    al,0x2c
  40d414:	arpl   WORD PTR ds:[ebp+0x11b11244],bx
  40d41b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d41c:	clc    
  40d41d:	cwde   
  40d41e:	fcomp  QWORD PTR [ecx+0x30]
  40d421:	into   
  40d422:	push   eax
  40d423:	cwde   
  40d424:	call   0x7d41:0xac944328
  40d42b:	sbb    edx,edi
  40d42d:	cwde   
  40d42e:	into   
  40d42f:	pop    ebx
  40d430:	outs   dx,BYTE PTR ds:[esi]
  40d431:	cmp    DWORD PTR [edx+0x52e17474],esp
  40d437:	mov    eax,cs:0x916bdcc4
  40d43d:	push   ds
  40d43e:	popf   
  40d43f:	in     al,0xd6
  40d441:	fsubrp st(1),st
  40d443:	fisub  DWORD PTR [edx+0x3a]
  40d446:	out    dx,eax
  40d447:	pop    ebp
  40d448:	call   0xd30b:0xa8287d9c
  40d44f:	cld    
  40d450:	pop    ds
  40d451:	cdq    
  40d452:	aaa    
  40d453:	inc    ecx
  40d454:	(bad)  
  40d456:	lock jg 0x40d419
  40d459:	cdq    
  40d45a:	aad    0x8b
  40d45c:	jl     0x40d3de
  40d45e:	jne    0x40d40e
  40d460:	add    al,0x91
  40d462:	or     cl,bl
  40d464:	jne    0x40d434
  40d466:	add    DWORD PTR [ebx-0x701a7165],edx
  40d46c:	out    0x83,eax
  40d46e:	pushf  
  40d46f:	pop    esp
  40d470:	std    
  40d471:	mov    al,ds:0xac7f076f
  40d476:	ds pop edi
  40d478:	ja     0x40d4e8
  40d47a:	mov    DWORD PTR [eax+eax*2],ecx
  40d47d:	aaa    
  40d47e:	jnp    0x40d43a
  40d480:	lock pop edi
  40d482:	test   DWORD PTR [ecx-0x59],ecx
  40d485:	jns    0x40d472
  40d487:	sbb    ah,BYTE PTR [edx+esi*4-0x3442e06e]
  40d48e:	inc    ecx
  40d48f:	pusha  
  40d490:	popf   
  40d491:	int    0x58
  40d493:	in     al,0x79
  40d495:	data16 fstp DWORD PTR [eax+0x6cb30672]
  40d49c:	cmp    DWORD PTR [ebx-0x5697a974],ebx
  40d4a2:	cmp    bh,BYTE PTR [eax]
  40d4a4:	sbb    BYTE PTR [ecx+0x61ab46f8],cl
  40d4aa:	ja     0x40d434
  40d4ac:	pop    ds
  40d4ad:	mov    edx,0x44e64fd0
  40d4b2:	mov    cl,0xc0
  40d4b4:	adc    DWORD PTR [ebx-0x58],esp
  40d4b7:	adc    al,0x90
  40d4b9:	push   edi
  40d4ba:	fsub   DWORD PTR [edx]
  40d4bc:	sbb    BYTE PTR [ebp-0x75e31f67],ch
  40d4c2:	mov    esi,DWORD PTR [eax]
  40d4c4:	cwde   
  40d4c5:	pop    esp
  40d4c6:	dec    edx
  40d4c7:	inc    BYTE PTR [eax+0x6f]
  40d4ca:	outs   dx,BYTE PTR ds:[esi]
  40d4cb:	rcl    BYTE PTR [ebx+edx*8],cl
  40d4ce:	mov    ch,0x7a
  40d4d0:	mov    ds:0xa37d010d,al
  40d4d5:	xchg   esi,eax
  40d4d6:	cmp    al,0xcb
  40d4d8:	push   esp
  40d4d9:	inc    edx
  40d4da:	popa   
  40d4db:	jno    0x40d4f5
  40d4dd:	inc    eax
  40d4de:	es scas eax,DWORD PTR es:[edi]
  40d4e0:	jmp    0xc21815a
  40d4e5:	sar    dh,0x51
  40d4e8:	sbb    al,0xa1
  40d4ea:	cmp    ch,BYTE PTR gs:[esi-0x2bd45ddd]
  40d4f1:	xchg   ebx,eax
  40d4f2:	mov    ebp,0x37963e79
  40d4f7:	ret    0xcb6d
  40d4fa:	push   ebx
  40d4fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4fc:	jbe    0x40d493
  40d4fe:	ror    ecx,0x59
  40d501:	inc    ebp
  40d503:	sbb    esi,DWORD PTR [esp+esi*1]
  40d506:	xor    al,0x35
  40d508:	daa    
  40d509:	push   ecx
  40d50a:	mov    dl,0x91
  40d50c:	fptan  
  40d50e:	imul   BYTE PTR [edx-0x5b]
  40d511:	ja     0x40d56f
  40d513:	xchg   ebp,eax
  40d514:	imul   DWORD PTR [edx-0x1a7824a0]
  40d51a:	adc    dl,BYTE PTR [edi+0x30]
  40d51d:	cmc    
  40d51e:	dec    ebp
  40d51f:	pop    ebx
  40d520:	mov    esp,0xc4148598
  40d525:	mov    edi,0x842d7e62
  40d52a:	cmp    ebp,edx
  40d52c:	mov    edi,0x7f5ca32f
  40d531:	nop
  40d532:	jbe    0x40d532
  40d534:	fwait
  40d535:	mov    edi,esi
  40d537:	(bad)  
  40d538:	xchg   ecx,eax
  40d539:	inc    esi
  40d53a:	loopne 0x40d4d8
  40d53c:	stos   DWORD PTR es:[edi],eax
  40d53d:	sub    al,0x25
  40d53f:	popf   
  40d540:	test   al,0xb4
  40d542:	shl    BYTE PTR [edx+0x43],1
  40d545:	imul   edx,DWORD PTR [edx],0xaf23e6f1
  40d54b:	jae    0x40d4f0
  40d54d:	xchg   ebp,eax
  40d54e:	xlat   BYTE PTR ds:[ebx]
  40d54f:	mov    ds:0x8ad5fe61,eax
  40d554:	dec    esp
  40d555:	jmp    0x7248:0x3188da25
  40d55c:	loope  0x40d5c7
  40d55e:	les    esp,FWORD PTR [ebx-0x7a9a10e5]
  40d564:	jnp    0x40d4fa
  40d566:	pop    ebp
  40d567:	jae    0x40d4f9
  40d569:	pop    ss
  40d56a:	cmc    
  40d56b:	xor    edi,DWORD PTR [eax-0x27c512bb]
  40d571:	jmp    0x313ff57
  40d576:	stos   BYTE PTR es:[edi],al
  40d577:	xor    DWORD PTR gs:0xbd796890,esp
  40d57e:	call   0x7e1e:0x9aba658e
  40d585:	xor    al,0x20
  40d587:	inc    esi
  40d588:	int    0x2b
  40d58a:	cmc    
  40d58b:	in     al,dx
  40d58c:	pop    DWORD PTR [esi]
  40d58e:	mov    dh,0xeb
  40d590:	into   
  40d591:	mov    bh,0x29
  40d593:	rol    BYTE PTR [esi],cl
  40d595:	dec    esi
  40d596:	test   DWORD PTR [ecx+0x29906ae7],0xf1014d79
  40d5a0:	add    BYTE PTR [edi-0x30],ch
  40d5a3:	mov    dl,0x96
  40d5a5:	scas   eax,DWORD PTR es:[edi]
  40d5a6:	dec    esp
  40d5a7:	xor    ch,BYTE PTR cs:[ecx]
  40d5aa:	sbb    DWORD PTR [edi-0x6457ddc4],esp
  40d5b0:	adc    bl,dh
  40d5b2:	and    DWORD PTR ds:0xf6569c5d,esp
  40d5b8:	push   ebx
  40d5b9:	and    DWORD PTR [ebp+0x13bb1312],edi
  40d5bf:	inc    esp
  40d5c0:	jmp    0x40d55d
  40d5c2:	jbe    0x40d62c
  40d5c4:	xchg   ebp,eax
  40d5c5:	mov    ds:0xb2520bc4,eax
  40d5ca:	repz mov ebx,DWORD PTR [edx+0x5b7ddae9]
  40d5d1:	mov    dh,0x9a
  40d5d3:	inc    esi
  40d5d4:	gs test eax,0xbcb558c7
  40d5da:	and    ax,0x4aca
  40d5de:	sub    DWORD PTR [edi],0x58
  40d5e1:	mov    cl,0xe2
  40d5e3:	jae    0x40d5a2
  40d5e5:	inc    edx
  40d5e6:	fstp   QWORD PTR [esi+0x1df0841a]
  40d5ec:	jmp    0x64d22806
  40d5f1:	repz (bad) 
  40d5f4:	ror    DWORD PTR [ebx],cl
  40d5f6:	pusha  
  40d5f7:	fnsave [ebx-0x67521b62]
  40d5fd:	bound  ebx,QWORD PTR [edx+ebp*8+0x2e]
  40d601:	and    eax,0x7440e662
  40d606:	repz sbb al,0xdf
  40d609:	cdq    
  40d60a:	jle    0x40d640
  40d60c:	fidiv  DWORD PTR [ebx]
  40d60e:	sbb    esi,DWORD PTR [ecx-0x92aa521]
  40d614:	lds    eax,FWORD PTR [eax]
  40d616:	aas    
  40d617:	stos   BYTE PTR es:[edi],al
  40d618:	adc    esp,DWORD PTR [esi]
  40d61a:	aam    0xe
  40d61c:	mov    bh,0x28
  40d61e:	dec    edx
  40d61f:	out    dx,eax
  40d620:	pop    eax
  40d621:	(bad)  
  40d622:	fcmovnbe st,st(3)
  40d624:	push   es
  40d625:	loop   0x40d5f8
  40d627:	test   BYTE PTR [ecx+0x4f],cl
  40d62a:	and    dl,bh
  40d62c:	add    DWORD PTR [ebx],0x2ddd819
  40d632:	leave  
  40d633:	scas   al,BYTE PTR es:[edi]
  40d634:	push   cs
  40d635:	jecxz  0x40d608
  40d637:	push   esi
  40d638:	les    ebp,FWORD PTR [edi]
  40d63a:	sbb    DWORD PTR [esi+0xf6fd0f6],ecx
  40d640:	mov    esi,0x8284ffe0
  40d645:	bndstx [edi],(bad)
  40d648:	or     eax,0xa03af417
  40d64d:	cmp    eax,0x800c4a2c
  40d652:	popf   
  40d653:	mov    edi,0xdd26e2ec
  40d658:	jle    0x40d67c
  40d65a:	push   ds
  40d65b:	dec    esp
  40d65c:	fist   DWORD PTR [ecx-0xd]
  40d65f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d660:	jae    0x40d68e
  40d662:	sub    dh,dh
  40d664:	add    esi,DWORD PTR [eax+0x11d79eaa]
  40d66a:	retf   
  40d66b:	xchg   esp,eax
  40d66c:	mov    dh,0x43
  40d66e:	lods   eax,DWORD PTR ds:[esi]
  40d66f:	and    ch,BYTE PTR ds:0x6f279615
  40d675:	mov    bh,0xf5
  40d677:	mov    ch,dh
  40d679:	fnsave ds:0x30dcc7ef
  40d67f:	out    0x27,eax
  40d681:	mov    esp,0x815dfd0d
  40d686:	(bad)  
  40d688:	bound  edi,QWORD PTR ds:0x10591237
  40d68e:	xchg   esi,eax
  40d68f:	add    al,0x51
  40d691:	jl     0x40d6e7
  40d693:	pop    esp
  40d694:	in     al,dx
  40d695:	test   ebp,esp
  40d697:	push   eax
  40d698:	pusha  
  40d699:	xlat   BYTE PTR ds:[ebx]
  40d69a:	lods   al,BYTE PTR ds:[esi]
  40d69b:	or     BYTE PTR [edi+eiz*8],dh
  40d69e:	(bad)  
  40d69f:	push   esi
  40d6a0:	jge    0x40d678
  40d6a2:	retf   
  40d6a3:	sbb    eax,0xb83b5d08
  40d6a8:	aad    0xd1
  40d6aa:	push   ecx
  40d6ab:	dec    edi
  40d6ac:	sub    bh,BYTE PTR [eax]
  40d6ae:	icebp  
  40d6af:	ins    BYTE PTR es:[edi],dx
  40d6b0:	aas    
  40d6b1:	push   ebp
  40d6b2:	leave  
  40d6b3:	repnz loopne 0x40d72d
  40d6b6:	xchg   edi,ebp
  40d6b8:	mov    ebx,edx
  40d6ba:	daa    
  40d6bb:	stos   BYTE PTR es:[edi],al
  40d6bc:	inc    edx
  40d6bd:	add    eax,0x83ad2c47
  40d6c2:	sbb    cl,al
  40d6c4:	pop    edi
  40d6c5:	out    dx,eax
  40d6c6:	adc    edi,ebx
  40d6c8:	in     al,dx
  40d6c9:	add    bl,dl
  40d6cb:	adc    eax,0xbfe1566c
  40d6d0:	or     BYTE PTR [ebp+edi*4+0x11],bh
  40d6d4:	hlt    
  40d6d5:	push   ebx
  40d6d6:	xchg   edi,eax
  40d6d7:	mov    esp,0xb7eed958
  40d6dc:	(bad)  
  40d6dd:	adc    BYTE PTR [ebx+0x2b],al
  40d6e0:	loope  0x40d742
  40d6e2:	or     al,dh
  40d6e4:	cmp    al,0x23
  40d6e6:	xor    DWORD PTR [ecx+0x8],edi
  40d6e9:	push   ecx
  40d6ea:	xor    bh,bl
  40d6ec:	sbb    bl,BYTE PTR [edi]
  40d6ee:	add    eax,0x28820511
  40d6f3:	mov    bh,0x7
  40d6f5:	stos   DWORD PTR es:[edi],eax
  40d6f6:	dec    ebp
  40d6f7:	dec    eax
  40d6f8:	add    BYTE PTR [edi+0x7],bl
  40d6fb:	icebp  
  40d6fc:	fwait
  40d6fd:	inc    edx
  40d6fe:	call   0x1bcf:0xaaec3d50
  40d705:	shl    DWORD PTR [edi-0x1f],1
  40d708:	push   cs
  40d709:	push   ss
  40d70a:	popf   
  40d70b:	es je  0x40d77c
  40d70e:	xchg   DWORD PTR [ecx+0x1e0dbac3],ebx
  40d714:	sub    al,0xb1
  40d716:	xchg   ebx,eax
  40d717:	shl    DWORD PTR [ebp-0x7d],0x8e
  40d71b:	je     0x40d744
  40d71d:	dec    ecx
  40d71e:	lock sbb eax,0x94089d2a
  40d725:	inc    ecx
  40d726:	cmp    al,0x46
  40d728:	mov    ah,0x5c
  40d72a:	jnp    0x40d701
  40d72c:	pop    edx
  40d72d:	jp     0x40d725
  40d72f:	push   esp
  40d730:	jbe    0x40d738
  40d732:	sbb    al,0xec
  40d734:	repz int 0x8c
  40d737:	and    eax,0xbc30b32d
  40d73c:	scas   eax,DWORD PTR es:[edi]
  40d73d:	xchg   edi,eax
  40d73e:	fistp  QWORD PTR [eax+eiz*8]
  40d741:	dec    esi
  40d742:	pop    edi
  40d743:	neg    BYTE PTR ds:0x4579f697
  40d749:	and    BYTE PTR [ebx+0x78],0x38
  40d74d:	aaa    
  40d74e:	fist   DWORD PTR [edx]
  40d750:	xor    ebx,DWORD PTR [esi]
  40d752:	inc    ebp
  40d753:	loop   0x40d760
  40d755:	cmp    edx,DWORD PTR [edx]
  40d757:	or     DWORD PTR [eax-0x2a],ecx
  40d75a:	shl    DWORD PTR [eax],0x5b
  40d75d:	sub    BYTE PTR [ebp+0x454da06f],al
  40d763:	mov    dl,0x39
  40d765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d766:	enter  0x4635,0x60
  40d76a:	movmskps edx,xmm2
  40d76d:	and    al,0xf1
  40d76f:	or     bl,al
  40d771:	add    DWORD PTR ss:[esi+0x42],esi
  40d775:	call   0x20d6:0xae28b8bc
  40d77c:	imul   edi,DWORD PTR [esi-0x1bdc2c3f],0x76f35f2
  40d786:	imul   edi,esi,0xf575fa98
  40d78c:	loop   0x40d7e3
  40d78e:	cdq    
  40d78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d790:	outs   dx,DWORD PTR ds:[esi]
  40d791:	and    eax,DWORD PTR [esi]
  40d793:	mov    bh,0x65
  40d795:	push   esp
  40d796:	pop    ss
  40d797:	pop    edx
  40d798:	mov    BYTE PTR [esi],cl
  40d79a:	jno    0x40d795
  40d79c:	adc    DWORD PTR [edi+0x43],0xbfd77e18
  40d7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7a4:	pop    ecx
  40d7a5:	jbe    0x40d749
  40d7a7:	popf   
  40d7a8:	out    dx,eax
  40d7a9:	sbb    ebx,DWORD PTR [ebp-0x6874b67b]
  40d7af:	retf   0x2d23
  40d7b2:	lock hlt 
  40d7b4:	pop    es
  40d7b5:	loop   0x40d78e
  40d7b7:	xchg   edi,eax
  40d7b8:	clc    
  40d7b9:	ficom  WORD PTR [eax]
  40d7bb:	pop    ecx
  40d7bc:	pop    ds
  40d7bd:	test   al,0xe4
  40d7bf:	das    
  40d7c0:	sub    al,0x89
  40d7c2:	mov    ah,0xc9
  40d7c4:	arpl   bp,dx
  40d7c6:	jl     0x40d76c
  40d7c8:	jg     0x40d760
  40d7ca:	mov    esi,0x61eab09d
  40d7cf:	ja     0x40d819
  40d7d1:	adc    DWORD PTR [edx-0x59],ebp
  40d7d4:	fst    QWORD PTR [esi+ebp*1]
  40d7d7:	inc    esi
  40d7d8:	mov    ebx,0x18379c2f
  40d7dd:	mov    bh,0x83
  40d7df:	cmp    ah,BYTE PTR [edi-0x2e]
  40d7e2:	mov    edi,0x64140f54
  40d7e7:	xlat   BYTE PTR ds:[ebx]
  40d7e8:	(bad)
  40d7eb:	js     0x40d7a3
  40d7ed:	pop    edx
  40d7ee:	aaa    
  40d7ef:	repz stc 
  40d7f1:	adc    al,0x79
  40d7f3:	int    0xb
  40d7f5:	dec    esi
  40d7f6:	retf   
  40d7f7:	bound  edi,QWORD PTR [edi]
  40d7f9:	ror    dl,cl
  40d7fb:	cmp    esp,DWORD PTR [eax+0x35]
  40d7fe:	jle    0x40d782
  40d800:	call   0xd856:0x3e9dae5d
  40d807:	inc    esi
  40d808:	dec    esi
  40d809:	mov    dl,0xab
  40d80b:	int    0x27
  40d80d:	xchg   esp,eax
  40d80e:	push   edx
  40d80f:	jmp    0xeb11ee35
  40d814:	push   ds
  40d815:	pop    ecx
  40d816:	mov    al,0x22
  40d818:	pop    ds
  40d819:	ins    BYTE PTR es:[edi],dx
  40d81a:	mov    al,0xd5
  40d81c:	not    BYTE PTR [esi]
  40d81e:	bound  esi,QWORD PTR [edx+0x3f]
  40d821:	retf   
  40d822:	mul    BYTE PTR [ebx]
  40d824:	xchg   esp,eax
  40d825:	cmp    ch,bh
  40d827:	aad    0x61
  40d829:	in     al,dx
  40d82a:	scas   al,BYTE PTR es:[edi]
  40d82b:	mov    eax,0x83048df6
  40d830:	ja     0x40d7b4
  40d832:	xchg   esp,eax
  40d833:	lock (bad) 
  40d835:	leave  
  40d836:	cli    
  40d837:	je     0x40d8a5
  40d839:	pop    edx
  40d83a:	pop    eax
  40d83b:	not    cl
  40d83d:	nop
  40d83e:	loopne 0x40d811
  40d840:	rcl    edi,0xd6
  40d843:	es pop ss
  40d845:	mov    eax,0xbe4f663d
  40d84a:	(bad)  
  40d84b:	jp     0x40d8af
  40d84d:	add    bl,BYTE PTR [ecx+0x4e82fde]
  40d853:	add    eax,0x9bb4008
  40d858:	(bad)  
  40d859:	jb     0x40d8cf
  40d85b:	mov    edi,0xc568b774
  40d860:	retf   
  40d861:	loope  0x40d7ef
  40d863:	adc    DWORD PTR [edi],ebx
  40d865:	mov    ebx,0xcffc1f9
  40d86a:	icebp  
  40d86b:	push   ds
  40d86c:	sbb    bh,bh
  40d86e:	vmread DWORD PTR [edx*1+0x4b6eaff8],eax
  40d876:	jmp    0x36785997
  40d87b:	push   edx
  40d87c:	push   ds
  40d87d:	dec    edx
  40d87e:	push   ds
  40d87f:	push   edx
  40d880:	test   eax,0xa1f195ac
  40d885:	mov    eax,cs
  40d887:	sbb    DWORD PTR [edi-0x7d415535],0x28a20963
  40d891:	popa   
  40d892:	out    dx,al
  40d893:	pop    ds
  40d894:	inc    edx
  40d895:	push   esp
  40d896:	test   al,0xe5
  40d898:	and    al,0xc0
  40d89a:	pop    ss
  40d89b:	fcmovne st,st(6)
  40d89d:	sbb    al,0x41
  40d89f:	lahf   
  40d8a0:	repz int3 
  40d8a2:	mov    dl,0x8d
  40d8a4:	dec    esi
  40d8a5:	xchg   ecx,eax
  40d8a6:	push   ecx
  40d8a7:	sahf   
  40d8a8:	add    al,0xe9
  40d8aa:	arpl   WORD PTR [ebx+esi*1],cx
  40d8ad:	std    
  40d8ae:	inc    edx
  40d8af:	inc    ecx
  40d8b0:	adc    eax,0x36feea3f
  40d8b5:	jmp    0x40d924
  40d8b7:	mov    BYTE PTR [edi-0x4b],ah
  40d8ba:	pop    ss
  40d8bb:	ror    ebx,1
  40d8bd:	dec    ecx
  40d8be:	inc    edi
  40d8bf:	dec    ebx
  40d8c0:	push   0x1d
  40d8c2:	jge    0x40d923
  40d8c4:	stos   BYTE PTR es:[edi],al
  40d8c5:	popa   
  40d8c6:	mov    edx,DWORD PTR [esi]
  40d8c8:	push   esi
  40d8c9:	dec    esi
  40d8ca:	cmp    al,0x5
  40d8cc:	cmp    edx,eax
  40d8ce:	jnp    0x40d922
  40d8d0:	out    0xa9,eax
  40d8d2:	rcr    BYTE PTR [ebx],1
  40d8d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8d6:	ret    0x8273
  40d8d9:	imul   ecx,DWORD PTR [edi-0x71],0xffffffb0
  40d8dd:	cmp    al,0x1a
  40d8df:	jg     0x40d8cd
  40d8e1:	mov    esp,0x330c925c
  40d8e6:	push   esi
  40d8e7:	push   ds
  40d8e8:	sub    DWORD PTR [ebp+0x6e],0x42306f82
  40d8ef:	sbb    esp,DWORD PTR [eax+0x1]
  40d8f2:	fistp  QWORD PTR [edx-0x3]
  40d8f5:	pop    es
  40d8f6:	jo     0x40d955
  40d8f8:	dec    edx
  40d8f9:	push   edx
  40d8fa:	adc    dl,al
  40d8fc:	retf   
  40d8fd:	ins    DWORD PTR es:[edi],dx
  40d8fe:	xchg   esi,eax
  40d8ff:	leave  
  40d900:	gs sbb eax,0x2cef86e9
  40d906:	retf   
  40d907:	mov    esp,0x84302cc8
  40d90c:	mov    ds:0x602f5e7a,eax
  40d911:	xchg   edi,eax
  40d912:	fucomip st,st(1)
  40d914:	in     al,dx
  40d915:	or     dh,BYTE PTR [ebp-0x35760d06]
  40d91b:	jo     0x40d907
  40d91d:	jg     0x40d988
  40d91f:	push   edx
  40d920:	cdq    
  40d921:	(bad)  
  40d922:	cmp    ecx,DWORD PTR [ebx-0x41]
  40d925:	fadd   st(2),st
  40d927:	cli    
  40d928:	leave  
  40d929:	pushf  
  40d92a:	js     0x40d960
  40d92c:	pop    eax
  40d92d:	hlt    
  40d92e:	mov    DWORD PTR [ebx+0x26],ebp
  40d931:	dec    edx
  40d932:	daa    
  40d933:	data16 mov cl,BYTE PTR [ebx-0x3b]
  40d937:	sbb    al,0x35
  40d939:	fmul   st(0),st
  40d93b:	(bad)  
  40d93c:	in     eax,0x7c
  40d93e:	call   0xb303:0x97cf4d71
  40d945:	aaa    
  40d946:	(bad)  
  40d947:	sbb    edi,DWORD PTR [ecx]
  40d949:	in     eax,0x51
  40d94b:	and    dh,ch
  40d94d:	rol    DWORD PTR [ebx],cl
  40d94f:	dec    ecx
  40d950:	or     al,0x24
  40d952:	xchg   ebp,eax
  40d953:	fisttp WORD PTR [edx-0x625ebed8]
  40d959:	jg     0x40d996
  40d95b:	call   0x6f61:0xfdc30606
  40d962:	dec    edi
  40d963:	outs   dx,DWORD PTR ds:[esi]
  40d964:	dec    ecx
  40d965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d966:	push   esp
  40d967:	sahf   
  40d968:	lods   al,BYTE PTR ds:[esi]
  40d969:	xchg   edi,eax
  40d96a:	and    DWORD PTR [eax-0x18],ebx
  40d96d:	xlat   BYTE PTR ds:[ebx]
  40d96e:	ja     0x40d94a
  40d970:	mov    esi,0x39c3730c
  40d975:	xchg   esp,eax
  40d976:	stos   BYTE PTR es:[edi],al
  40d977:	sbb    ch,BYTE PTR [ecx-0x39a50030]
  40d97d:	mov    al,0xe7
  40d97f:	sbb    bl,BYTE PTR [ecx+0x12bb5779]
  40d985:	std    
  40d986:	jle    0x40d9ee
  40d988:	es ret 0xd7b2
  40d98c:	int3   
  40d98d:	adc    al,0x11
  40d98f:	xor    BYTE PTR [esp+edx*4-0x1a],bl
  40d993:	mov    DWORD PTR [ecx+0x5c9b8013],edx
  40d999:	cdq    
  40d99a:	or     ebx,ecx
  40d99c:	inc    edx
  40d99d:	cmp    eax,0x2c3def42
  40d9a2:	and    ebx,0xffffffd5
  40d9a5:	dec    ebp
  40d9a6:	test   BYTE PTR cs:[ebx+0x76a27b0],dl
  40d9ad:	sbb    DWORD PTR [edx+0x27],ecx
  40d9b0:	jp     0x40d9bd
  40d9b2:	test   al,0xfc
  40d9b4:	xchg   DWORD PTR [ebx],esi
  40d9b6:	sbb    eax,0x392f6fc0
  40d9bb:	lea    eax,[edi+0x1a]
  40d9be:	aaa    
  40d9bf:	popa   
  40d9c0:	dec    eax
  40d9c1:	inc    ebp
  40d9c2:	fisttp DWORD PTR [edi]
  40d9c4:	jl     0x40d94a
  40d9c6:	mov    ebx,0x40edaaa
  40d9cb:	lock and BYTE PTR [esi-0x47],bh
  40d9cf:	and    edx,DWORD PTR [ebx+0x41]
  40d9d2:	daa    
  40d9d3:	cs int 0x6c
  40d9d6:	sahf   
  40d9d7:	out    0x53,eax
  40d9d9:	out    dx,al
  40d9da:	(bad)  
  40d9db:	pop    esi
  40d9dc:	or     DWORD PTR [edi+0x161d16dc],edi
  40d9e2:	add    BYTE PTR [edx],cl
  40d9e4:	push   ds
  40d9e5:	aad    0x74
  40d9e7:	jnp    0x40d9cd
  40d9e9:	xchg   DWORD PTR [edx+0x78],ebp
  40d9ec:	xlat   BYTE PTR ds:[ebx]
  40d9ed:	pop    edx
  40d9ee:	stc    
  40d9ef:	dec    eax
  40d9f0:	jle    0x40d972
  40d9f2:	les    eax,FWORD PTR [eax*8+0x4f364a72]
  40d9f9:	rol    DWORD PTR [esi],cl
  40d9fb:	sbb    eax,0x63a36aa0
  40da00:	dec    ebp
  40da01:	jle    0x40da63
  40da03:	adc    edx,DWORD PTR [ebx+esi*1+0x3e23371a]
  40da0a:	adc    al,0x6f
  40da0c:	mov    bh,0xd6
  40da0e:	or     al,BYTE PTR [edx-0x5d]
  40da11:	ror    DWORD PTR [esi],1
  40da13:	inc    ebx
  40da14:	mov    DWORD PTR [esi],0x74d30eb1
  40da1a:	sbb    DWORD PTR [ebx-0x3a],ecx
  40da1d:	push   esi
  40da1e:	push   esi
  40da1f:	fldenv [ebp+0x59]
  40da22:	mov    BYTE PTR [edi-0x15979df7],ch
  40da28:	mov    dh,0x2b
  40da2a:	test   DWORD PTR [ecx+esi*2],ebp
  40da2d:	je     0x40da2d
  40da2f:	push   edx
  40da30:	xor    al,0xea
  40da32:	lock jl 0x40da8a
  40da35:	fdivrp st(7),st
  40da37:	pusha  
  40da38:	mov    fs,ecx
  40da3a:	xchg   edi,eax
  40da3b:	jg     0x40d9eb
  40da3d:	jmp    FWORD PTR [ebx-0x18]
  40da40:	cmp    bh,bl
  40da42:	sub    edi,ecx
  40da44:	cmp    BYTE PTR [esi+0x3cca9350],ch
  40da4a:	mov    edi,0x9ed30fb2
  40da4f:	ja     0x40da4b
  40da51:	cs iret 
  40da53:	dec    esi
  40da54:	add    ecx,DWORD PTR [esi-0x58]
  40da57:	xor    al,0xc6
  40da59:	les    eax,FWORD PTR [eax]
  40da5b:	adc    al,0xf9
  40da5d:	jb     0x40da9f
  40da5f:	in     eax,0xe1
  40da61:	adc    DWORD PTR [edi-0x5d3745d3],edi
  40da67:	loop   0x40da8b
  40da69:	cwde   
  40da6a:	mov    dl,0x8c
  40da6c:	ficom  DWORD PTR [esi-0x10dae426]
  40da72:	dec    esp
  40da73:	pop    ebp
  40da74:	sub    cl,0xbf
  40da77:	das    
  40da78:	aad    0x17
  40da7a:	cmp    dl,BYTE PTR [eax-0x28]
  40da7d:	cmp    al,0xbb
  40da7f:	fiadd  WORD PTR [eax+0x206b3376]
  40da85:	adc    eax,0x74ea1659
  40da8a:	(bad)  
  40da8b:	jmp    0x6b09a430
  40da90:	call   0x4e4b:0xca3f5d5b
  40da97:	pop    eax
  40da98:	xor    BYTE PTR [eax],cl
  40da9a:	(bad)  
  40da9b:	pusha  
  40da9c:	clc    
  40da9d:	jne    0x40da8c
  40da9f:	mov    al,0xd7
  40daa1:	and    eax,0xa531b411
  40daa6:	mov    ch,0x11
  40daa8:	sub    DWORD PTR ds:0xa952432,0xffffffdb
  40daaf:	ret    
  40dab0:	test   eax,0xd05c3584
  40dab5:	mov    esp,0x851ff6e1
  40daba:	cmp    eax,0x66805cbe
  40dabf:	mov    esi,0xc140b4d0
  40dac4:	mov    DWORD PTR ds:0x5ade6b52,esp
  40daca:	in     al,0x2b
  40dacc:	mov    edi,0x4509e0f8
  40dad1:	cli    
  40dad2:	popa   
  40dad3:	sar    edx,cl
  40dad5:	push   0xffffff98
  40dad7:	jns    0x40daec
  40dad9:	inc    edx
  40dada:	out    0x0,al
  40dadc:	jns    0x40dac1
  40dade:	mov    esi,0xbecad3c2
  40dae3:	push   es
  40dae4:	xchg   BYTE PTR [ebx+0x17],ch
  40dae7:	sub    dh,ch
  40dae9:	or     DWORD PTR [eax+0x11],esi
  40daec:	retf   0x4d24
  40daef:	mov    ecx,0xd2c06340
  40daf4:	xchg   DWORD PTR [esi+0x541f335c],eax
  40dafa:	shl    DWORD PTR [esi+0x1],1
  40dafd:	mov    bh,BYTE PTR [eax]
  40daff:	js     0x40db80
  40db01:	shl    BYTE PTR [eax+0x2],cl
  40db04:	xchg   esi,eax
  40db05:	dec    eax
  40db06:	mov    esp,0xdb9b03b5
  40db0b:	mov    BYTE PTR [edi],dh
  40db0d:	ror    BYTE PTR cs:[edi+eax*8-0x2ea86637],1
  40db15:	aas    
  40db16:	stos   BYTE PTR es:[edi],al
  40db17:	pushf  
  40db18:	jp     0x40db6b
  40db1a:	fs jno 0x40db74
  40db1d:	sub    esi,ebp
  40db1f:	add    eax,0x142cc0fd
  40db24:	push   es
  40db25:	rol    WORD PTR [edi],cl
  40db28:	mov    dl,cl
  40db2a:	cmp    edx,DWORD PTR [ebp-0x6298d8ae]
  40db30:	fldcw  WORD PTR [ecx+0x64]
  40db33:	arpl   WORD PTR [eiz*8+0x1d830b5c],bp
  40db3a:	add    ah,BYTE PTR [edx]
  40db3c:	push   edi
  40db3d:	adc    dh,BYTE PTR [ebx-0x3b37d8e8]
  40db43:	imul   ebp,DWORD PTR [eax-0x35],0x60
  40db47:	pop    ebx
  40db48:	fcomp  DWORD PTR [edi]
  40db4a:	adc    eax,0x2ac7e5e3
  40db4f:	push   es
  40db50:	icebp  
  40db51:	jbe    0x40dae3
  40db53:	pop    ebx
  40db54:	and    ch,BYTE PTR [esi]
  40db56:	fwait
  40db57:	scas   al,BYTE PTR es:[edi]
  40db58:	jns    0x40db3d
  40db5a:	add    al,dh
  40db5c:	sub    ecx,ebx
  40db5e:	lds    edi,FWORD PTR [ecx-0x6f81d5e2]
  40db64:	dec    edi
  40db65:	call   0x7653cb7
  40db6a:	je     0x40dbd9
  40db6c:	(bad)  [edi-0x7560b681]
  40db72:	sub    BYTE PTR [edi+0x12949ae4],bl
  40db78:	dec    eax
  40db79:	shl    eax,cl
  40db7b:	add    al,0x8
  40db7d:	ins    BYTE PTR es:[edi],dx
  40db7e:	rol    DWORD PTR [edi],cl
  40db80:	dec    edi
  40db81:	or     BYTE PTR [edx],0x2e
  40db84:	mov    BYTE PTR [edx+eax*1],0x6c
  40db88:	into   
  40db89:	xor    al,0xf1
  40db8b:	mov    ecx,0xb95d8097
  40db90:	(bad)  
  40db91:	inc    BYTE PTR [esi+0x1]
  40db94:	jp     0x40db74
  40db96:	sub    DWORD PTR [ebp-0x4d],ebx
  40db99:	mov    esp,0x241ca525
  40db9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db9f:	aad    0x3f
  40dba1:	mov    DWORD PTR [edx-0x32ca1e3c],edi
  40dba7:	call   0xb388:0xff59921d
  40dbae:	lahf   
  40dbaf:	lods   eax,DWORD PTR ds:[esi]
  40dbb0:	retf   0x659d
  40dbb3:	inc    esi
  40dbb4:	sar    DWORD PTR [eax+0x5a],1
  40dbb7:	mov    esp,0x169e7ab3
  40dbbc:	push   edx
  40dbbd:	test   al,0x34
  40dbbf:	mov    DWORD PTR [ebx],eax
  40dbc1:	retf   0x6df9
  40dbc4:	mov    ebx,0x369d602f
  40dbc9:	inc    eax
  40dbca:	adc    eax,0xd5d480ca
  40dbcf:	repz push ecx
  40dbd1:	in     eax,dx
  40dbd2:	or     al,0xd4
  40dbd4:	or     eax,0xb08797c0
  40dbd9:	mov    bl,0x77
  40dbdb:	aad    0xd2
  40dbdd:	sub    bh,BYTE PTR [ebx]
  40dbdf:	enter  0xb8a1,0x94
  40dbe3:	or     edi,DWORD PTR [ebx-0x719ccdd5]
  40dbe9:	mov    al,0x10
  40dbeb:	mov    esp,0xd5393c4d
  40dbf0:	in     al,dx
  40dbf1:	jge    0x40dbae
  40dbf3:	xchg   esp,edx
  40dbf5:	fistp  WORD PTR [eax-0x53bdc661]
  40dbfb:	jg     0x40dbfa
  40dbfd:	inc    ecx
  40dbfe:	enter  0xe98c,0xa2
  40dc02:	pop    ebp
  40dc03:	push   ds
  40dc04:	cmc    
  40dc05:	push   ss
  40dc06:	daa    
  40dc07:	sar    cl,cl
  40dc09:	xchg   ecx,eax
  40dc0a:	mov    ebx,0x339649a5
  40dc0f:	cmp    cl,BYTE PTR [ecx+0x3db52b1f]
  40dc15:	loope  0x40dc84
  40dc17:	jp     0x40dc3d
  40dc19:	fisubr WORD PTR [ecx]
  40dc1b:	inc    ebp
  40dc1c:	shr    BYTE PTR [ebx+ecx*2-0x74],0x46
  40dc21:	pop    ds
  40dc22:	cmc    
  40dc23:	pop    esi
  40dc24:	mov    DWORD PTR [edx+0x5ad5c731],ebp
  40dc2a:	jl     0x40dc50
  40dc2c:	cld    
  40dc2d:	mov    ds:0x2c5114c7,eax
  40dc32:	jnp    0x40dbec
  40dc34:	mov    edi,0x541b6e99
  40dc39:	neg    DWORD PTR [ecx+0x14]
  40dc3c:	cli    
  40dc3d:	add    BYTE PTR [eax],dl
  40dc3f:	push   0xffffffe1
  40dc41:	dec    eax
  40dc42:	popa   
  40dc43:	mov    edx,0x1199575d
  40dc48:	inc    edi
  40dc49:	add    al,0xaf
  40dc4b:	mov    bh,0xed
  40dc4d:	outs   dx,BYTE PTR ds:[esi]
  40dc4e:	push   ebp
  40dc4f:	mov    ds:0xc81db970,eax
  40dc54:	push   edx
  40dc55:	add    bh,BYTE PTR [esi-0x1719fcc3]
  40dc5b:	das    
  40dc5c:	aas    
  40dc5d:	mov    edx,DWORD PTR [edx+0x47]
  40dc60:	sub    eax,0x27666a2f
  40dc65:	sub    ebp,DWORD PTR [ebx+0x7b]
  40dc68:	sbb    eax,0x6c389333
  40dc6d:	jmp    0x67952406
  40dc72:	popf   
  40dc73:	pusha  
  40dc74:	inc    edi
  40dc75:	pop    esp
  40dc76:	jns    0x40dc38
  40dc78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc79:	jnp    0x40dccf
  40dc7b:	out    dx,al
  40dc7c:	pop    esi
  40dc7d:	mov    WORD PTR [ebx],ss
  40dc7f:	clc    
  40dc80:	int    0x34
  40dc82:	in     eax,dx
  40dc83:	mov    edi,0x80fea66d
  40dc88:	pop    ebx
  40dc89:	dec    eax
  40dc8a:	add    al,0x65
  40dc8c:	jo     0x40dc5b
  40dc8e:	jle    0x40dcca
  40dc90:	or     edx,ebx
  40dc92:	sbb    ch,BYTE PTR [esi+0x62]
  40dc95:	dec    edx
  40dc96:	adc    DWORD PTR [edi],ebp
  40dc98:	leave  
  40dc99:	cmp    cl,BYTE PTR [edx+0x4b]
  40dc9c:	mov    edi,0x16ac503
  40dca1:	ins    BYTE PTR es:[edi],dx
  40dca2:	aam    0x84
  40dca4:	call   0xe4ffab43
  40dca9:	jns    0x40dc3c
  40dcab:	jle    0x40dc64
  40dcad:	(bad)  
  40dcae:	xchg   edx,eax
  40dcaf:	loop   0x40dcf4
  40dcb1:	dec    edi
  40dcb2:	aaa    
  40dcb3:	or     DWORD PTR [ebp-0x7c],ebp
  40dcb6:	test   ebp,ebp
  40dcb8:	in     eax,dx
  40dcb9:	into   
  40dcba:	pop    ds
  40dcbb:	push   ebx
  40dcbc:	push   es
  40dcbd:	js     0x40dd14
  40dcbf:	mov    ebp,0x8370bd30
  40dcc4:	jge    0x40dd44
  40dcc6:	mov    ds:0x4f1731ea,eax
  40dccb:	add    BYTE PTR [esi+0x75],bh
  40dcce:	int3   
  40dccf:	mov    ds:0x2c38a09a,eax
  40dcd4:	mov    ebp,0xd6fcb88e
  40dcd9:	int3   
  40dcda:	jnp    0x40dd53
  40dcdc:	out    dx,al
  40dcdd:	iret   
  40dcde:	inc    ecx
  40dcdf:	adc    bh,BYTE PTR [ecx+0x795d51ab]
  40dce5:	and    BYTE PTR ds:0x6d023937,dl
  40dceb:	mov    bh,0xc8
  40dced:	int3   
  40dcee:	push   0xffffffc3
  40dcf0:	and    dh,BYTE PTR [ebx+0x73]
  40dcf3:	mov    ebx,0xfc93b6a
  40dcf8:	pop    es
  40dcf9:	shl    esp,0xce
  40dcfc:	gs xchg edi,eax
  40dcfe:	aam    0x89
  40dd00:	dec    ebx
  40dd01:	shr    BYTE PTR [ebp+0x75],0x7e
  40dd05:	jne    0x40dd2e
  40dd07:	loope  0x40dd6a
  40dd09:	in     eax,0x91
  40dd0b:	sub    DWORD PTR [esi],0x1c
  40dd0e:	js     0x40dcf2
  40dd10:	xor    BYTE PTR [ecx],dh
  40dd12:	mov    ch,0x1c
  40dd14:	pop    esi
  40dd15:	addr16 push ecx
  40dd17:	test   al,0x78
  40dd19:	mov    ds:0xef6586a7,al
  40dd1e:	jae    0x40dcb9
  40dd20:	mov    DWORD PTR [edi-0x75bb870b],esi
  40dd26:	popa   
  40dd27:	lock mov ebp,0x247d0779
  40dd2d:	inc    esp
  40dd2e:	adc    BYTE PTR [edx],0xaa
  40dd31:	cld    
  40dd32:	push   es
  40dd33:	enter  0xc649,0x3a
  40dd37:	sbb    eax,0x8dcfd793
  40dd3c:	and    ch,ah
  40dd3e:	mov    ds:0x60ff892e,al
  40dd43:	jne    0x40dd52
  40dd45:	and    al,0xed
  40dd47:	jecxz  0x40ddbe
  40dd49:	add    cl,BYTE PTR [ebx-0x53]
  40dd4c:	mov    ch,0xe1
  40dd4e:	push   ebp
  40dd4f:	lods   eax,DWORD PTR ds:[esi]
  40dd50:	scas   al,BYTE PTR es:[edi]
  40dd51:	sbb    eax,0xc7a6aebd
  40dd56:	sbb    DWORD PTR [ecx+0x6],0x4672b057
  40dd5d:	or     dl,BYTE PTR [ecx]
  40dd5f:	leave  
  40dd60:	shl    DWORD PTR [edi+0x17b18822],cl
  40dd66:	scas   al,BYTE PTR es:[edi]
  40dd67:	inc    ebx
  40dd68:	cmp    ch,dh
  40dd6a:	lea    edi,ds:0x54626bce
  40dd70:	cmp    eax,0x2ae6dabf
  40dd75:	xchg   BYTE PTR [edx+0x58f0e746],bl
  40dd7b:	repz mov bl,0xca
  40dd7e:	(bad)  
  40dd7f:	jge    0x40dd3a
  40dd81:	lea    edi,[eax]
  40dd83:	mov    WORD PTR [eax+0xd],gs
  40dd86:	xor    al,0x4e
  40dd88:	sub    DWORD PTR [ebp+0x1],0x6d
  40dd8c:	pop    edx
  40dd8d:	(bad)  
  40dd8f:	mov    ch,0x28
  40dd91:	push   ebx
  40dd92:	out    dx,al
  40dd93:	not    DWORD PTR [ebx+0x7f11ee76]
  40dd99:	loope  0x40dd26
  40dd9b:	mov    dl,0xa2
  40dd9d:	test   ebp,edx
  40dd9f:	aas    
  40dda0:	leave  
  40dda1:	jl     0x40dd2d
  40dda3:	jmp    0xd1fc89f0
  40dda8:	or     edx,DWORD PTR [eax-0xe]
  40ddab:	std    
  40ddac:	xor    eax,0x3217639c
  40ddb1:	loope  0x40ddf7
  40ddb3:	sbb    ch,BYTE PTR [esi-0x36]
  40ddb6:	ins    DWORD PTR es:[edi],dx
  40ddb7:	jmp    0x3994b2dd
  40ddbc:	pop    ecx
  40ddbd:	jp     0x40dd87
  40ddbf:	push   edx
  40ddc0:	aaa    
  40ddc1:	shr    BYTE PTR gs:[ecx],0x15
  40ddc5:	retf   
  40ddc6:	gs dec eax
  40ddc8:	pop    esp
  40ddc9:	jo     0x40ddcb
  40ddcb:	adc    DWORD PTR [ebp+0x23],0x5d
  40ddcf:	rcl    DWORD PTR [edx],0xa1
  40ddd2:	(bad)  
  40ddd3:	fwait
  40ddd4:	xchg   ecx,eax
  40ddd5:	fucomip st,st(6)
  40ddd7:	in     al,0x22
  40ddd9:	je     0x40ddf3
  40dddb:	lods   al,BYTE PTR ds:[esi]
  40dddc:	pop    ebx
  40dddd:	xchg   edi,eax
  40ddde:	dec    esp
  40dddf:	daa    
  40dde0:	mov    eax,ds:0x684d548e
  40dde5:	aam    0xd2
  40dde7:	in     al,0xd7
  40dde9:	mov    ds:0x1f2d5dce,eax
  40ddee:	mov    ecx,0x21381a99
  40ddf3:	sub    al,0xe8
  40ddf5:	enter  0x387f,0x3c
  40ddf9:	into   
  40ddfa:	or     BYTE PTR [ecx+0x19],0x13
  40ddfe:	test   BYTE PTR ds:0xfee7c536,dl
  40de04:	dec    esi
  40de05:	aaa    
  40de06:	pusha  
  40de07:	ret    
  40de08:	jp     0x40dd8e
  40de0a:	sbb    ecx,edi
  40de0c:	mov    bh,0x55
  40de0e:	jmp    0x40de60
  40de10:	icebp  
  40de11:	retf   
  40de12:	jnp    0x40dde5
  40de14:	or     al,dh
  40de16:	push   eax
  40de17:	mov    edx,0xabcfcb72
  40de1c:	dec    esp
  40de1d:	pusha  
  40de1e:	es sar ecx,cl
  40de21:	jle    0x40de6d
  40de23:	or     eax,0xfb5c32df
  40de28:	xchg   edi,eax
  40de29:	sbb    eax,0x1a0983ff
  40de2e:	call   0x92f2:0x523ee4fc
  40de35:	aas    
  40de36:	test   eax,0x2e43a791
  40de3b:	in     al,dx
  40de3c:	add    al,0x83
  40de3e:	loope  0x40ddde
  40de40:	cmp    BYTE PTR [ecx+edx*1+0x534dfac3],bh
  40de47:	cmp    bl,BYTE PTR [esi-0x74700845]
  40de4d:	iret   
  40de4e:	add    eax,DWORD PTR [ebp+0xabf6712]
  40de54:	mov    esi,0xaf840d4d
  40de59:	packuswb mm0,mm4
  40de5c:	jb     0x40de56
  40de5e:	add    al,0xa4
  40de60:	mov    esi,gs
  40de62:	stos   BYTE PTR es:[edi],al
  40de63:	jmp    0x8b5f779c
  40de68:	lds    ebp,FWORD PTR [ebx-0x4c572068]
  40de6e:	pop    ax
  40de70:	adc    cl,BYTE PTR [eax-0x59]
  40de73:	ja     0x40de06
  40de75:	ret    
  40de76:	lds    ecx,FWORD PTR [ebp+0x40]
  40de79:	(bad)  
  40de7a:	call   0x647fdf57
  40de7f:	mov    al,ds:0xf7aa594e
  40de84:	sub    eax,0x80dc2119
  40de89:	pop    ebx
  40de8a:	cwde   
  40de8b:	xor    esi,esi
  40de8d:	adc    ch,ch
  40de8f:	test   al,0xd7
  40de91:	dec    ebx
  40de92:	iret   
  40de93:	xlat   BYTE PTR ds:[ebx]
  40de94:	bound  edx,QWORD PTR [ebx]
  40de96:	add    edx,ecx
  40de98:	inc    ecx
  40de99:	int    0x6
  40de9b:	sbb    BYTE PTR [edi+esi*1],dl
  40de9e:	in     eax,dx
  40de9f:	pop    es
  40dea0:	sbb    al,0x70
  40dea2:	jl     0x40de79
  40dea4:	and    DWORD PTR [edi+0x28778fa5],0xdacc592
  40deae:	mov    cl,0x7e
  40deb0:	and    DWORD PTR [edx],esp
  40deb2:	aad    0xd3
  40deb4:	mov    DWORD PTR [ecx-0x4ce512a2],0x77128958
  40debe:	pop    ecx
  40debf:	rcr    DWORD PTR [edx-0x78],0xaa
  40dec3:	add    DWORD PTR [eax+0x21],0x3d943f
  40deca:	mov    al,ds:0x34bf2ab5
  40decf:	lds    esi,FWORD PTR [edi]
  40ded1:	int3   
  40ded2:	mov    edi,DWORD PTR ds:0x22972a75
  40ded8:	ss pop es
  40deda:	push   0x657382bf
  40dedf:	std    
  40dee0:	xchg   esi,eax
  40dee1:	outs   dx,DWORD PTR ds:[esi]
  40dee2:	loop   0x40df3e
  40dee4:	dec    esp
  40dee5:	fbld   TBYTE PTR [esi-0x677cb87e]
  40deeb:	mul    DWORD PTR [edi+eiz*8+0x2e3c6939]
  40def2:	pushf  
  40def3:	shl    BYTE PTR [eax-0x7a667f13],cl
  40def9:	int3   
  40defa:	mov    bh,0xbb
  40defc:	in     al,dx
  40defd:	adc    BYTE PTR [edx+0x3a],cl
  40df00:	je     0x40dee5
  40df02:	mov    DWORD PTR [edi],ebx
  40df04:	sbb    ebx,DWORD PTR [edx]
  40df06:	pop    edi
  40df07:	mov    ecx,0x465ff96a
  40df0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df0d:	ret    
  40df0e:	mov    bh,BYTE PTR ds:0x943f96f3
  40df14:	nop
  40df15:	test   ah,0x27
  40df18:	lea    ebx,[esp+ebx*4+0x74]
  40df1c:	jnp    0x40df4a
  40df1e:	cmp    DWORD PTR [ebp+0x3f3b571b],esi
  40df24:	mov    DWORD PTR [edi],esp
  40df26:	shr    al,cl
  40df28:	fadd   DWORD PTR [ecx]
  40df2a:	mov    al,ds:0x2616ce4d
  40df2f:	and    dh,BYTE PTR [ebx-0x17]
  40df32:	push   edx
  40df33:	mov    ecx,0xbaebf54b
  40df38:	adc    eax,0xca3e6a06
  40df3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df3e:	cmp    al,0xc8
  40df40:	jecxz  0x40df7d
  40df42:	repz inc ebp
  40df44:	add    bl,dl
  40df46:	xor    cl,BYTE PTR ds:0xfa09a2a9
  40df4c:	mov    edx,0xe4065656
  40df51:	add    BYTE PTR [ebx+esi*8],ch
  40df54:	call   FWORD PTR [edx+esi*4+0x3524dfa9]
  40df5b:	in     al,dx
  40df5c:	scas   eax,DWORD PTR es:[edi]
  40df5d:	sbb    eax,0x5ff37999
  40df62:	xor    al,ch
  40df64:	sub    DWORD PTR ds:0xd62f5b3,esp
  40df6a:	fsubr  DWORD PTR [esi]
  40df6c:	pop    es
  40df6d:	jnp    0x40dfb7
  40df6f:	cdq    
  40df70:	xor    BYTE PTR [edx-0x2d74f367],bh
  40df76:	pop    ebx
  40df77:	mov    ebp,0xd884d183
  40df7c:	cmp    BYTE PTR [eax-0x1c1fdc54],dh
  40df82:	fnsave [ecx-0x1b]
  40df85:	das    
  40df86:	jmp    0xa579:0x3faa9699
  40df8d:	pop    ebp
  40df8e:	loope  0x40df36
  40df90:	js     0x40df50
  40df92:	pop    eax
  40df93:	mov    cl,0x21
  40df95:	jno    0x40e007
  40df97:	cwde   
  40df98:	sub    DWORD PTR ds:0xa9e6312c,edi
  40df9e:	push   ebp
  40df9f:	mov    WORD PTR [ebx-0x23182594],?
  40dfa5:	pop    es
  40dfa6:	xchg   edx,eax
  40dfa7:	jns    0x40df73
  40dfa9:	aas    
  40dfaa:	xlat   BYTE PTR ds:[ebx]
  40dfab:	call   0x87fe:0xbdfcf529
  40dfb2:	das    
  40dfb3:	push   0xffffff91
  40dfb5:	(bad)  
  40dfb6:	stos   BYTE PTR es:[edi],al
  40dfb7:	out    dx,eax
  40dfb8:	mov    bh,0xe3
  40dfba:	pop    ss
  40dfbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfbc:	addr16 inc esp
  40dfbe:	hlt    
  40dfbf:	jbe    0x40df86
  40dfc1:	xchg   esp,eax
  40dfc2:	int    0xc9
  40dfc4:	and    DWORD PTR [ebx+0x62],edi
  40dfc7:	pop    esi
  40dfc8:	mov    bh,0x53
  40dfca:	out    0xb,al
  40dfcc:	mov    ch,0xe2
  40dfce:	iret   
  40dfcf:	out    dx,al
  40dfd0:	sub    eax,0x9794c733
  40dfd5:	sbb    ah,ah
  40dfd7:	jmp    0x37f0:0xb932f881
  40dfde:	ficomp DWORD PTR [esi-0x65f7666b]
  40dfe4:	imul   ecx,DWORD PTR [eax-0x993e10e],0x37
  40dfeb:	adc    BYTE PTR [edi],bl
  40dfed:	sahf   
  40dfee:	lock or BYTE PTR [ebx+0x7e],dl
  40dff2:	sbb    al,0x79
  40dff4:	mov    DWORD PTR [edx-0x73],ebx
  40dff7:	gs aaa 
  40dff9:	adc    eax,0x7cbbc543
  40dffe:	xor    esi,edx
  40e000:	jns    0x40dfe9
  40e002:	pop    edx
  40e003:	push   edx
  40e004:	sahf   
  40e005:	lahf   
  40e006:	imul   ecx,DWORD PTR [eax+edi*1+0x21],0x3
  40e00b:	in     eax,dx
  40e00c:	mov    al,ds:0x7d09d02f
  40e011:	push   es
  40e012:	int3   
  40e013:	test   DWORD PTR [edi+ebp*8],edx
  40e016:	fsub   QWORD PTR [esp+ecx*4]
  40e019:	aas    
  40e01a:	mov    edi,0x4eaab64f
  40e01f:	cmp    ecx,ebp
  40e021:	xchg   ebx,eax
  40e022:	fwait
  40e023:	jo     0x40dfd6
  40e025:	xchg   edi,eax
  40e026:	mov    ebx,0x52c98fd3
  40e02b:	test   eax,0x42c6ff14
  40e030:	retf   0x1461
  40e033:	or     BYTE PTR [ecx+0x1b],bh
  40e036:	leave  
  40e037:	popf   
  40e038:	imul   esi,esi,0x4a8044dd
  40e03e:	fistp  WORD PTR [edx]
  40e040:	dec    esi
  40e041:	sbb    BYTE PTR ds:0x522b8d2d,bh
  40e047:	sub    dh,cl
  40e049:	inc    edx
  40e04a:	jp     0x40e046
  40e04c:	mov    eax,ds:0x984a1df1
  40e051:	(bad)  
  40e052:	adc    eax,0x97d821b
  40e057:	stc    
  40e058:	rcl    BYTE PTR [edi-0x3a],0xd
  40e05c:	jb     0x40e013
  40e05e:	push   ebp
  40e05f:	inc    esi
  40e060:	dec    ebx
  40e061:	(bad)  
  40e062:	out    dx,eax
  40e063:	daa    
  40e064:	mov    DWORD PTR [edx+0x2e45409e],ecx
  40e06a:	mov    dh,0x55
  40e06c:	rcl    BYTE PTR [esi+0x3958cf44],0x63
  40e073:	stc    
  40e074:	lods   al,BYTE PTR ds:[esi]
  40e075:	scas   eax,DWORD PTR es:[edi]
  40e076:	popa   
  40e077:	jg     0x40e0df
  40e079:	pop    ecx
  40e07a:	out    0x46,al
  40e07c:	pop    ds
  40e07d:	inc    esp
  40e07e:	out    0xdd,al
  40e080:	xchg   ebp,eax
  40e081:	cmp    al,dl
  40e083:	call   0x845bb742
  40e088:	fcom   DWORD PTR [esi+0x24]
  40e08b:	mov    ebx,0xb27ad5cd
  40e090:	xor    al,0xff
  40e092:	sbb    esp,edx
  40e094:	outs   dx,BYTE PTR ds:[esi]
  40e095:	rol    DWORD PTR [edi-0x6099215e],0x67
  40e09c:	int3   
  40e09d:	arpl   WORD PTR [eax+eax*4],si
  40e0a0:	and    bh,bl
  40e0a2:	lock adc al,0x95
  40e0a5:	cmp    dh,ch
  40e0a7:	test   DWORD PTR [esi+0x2],ecx
  40e0aa:	inc    esi
  40e0ab:	cmp    DWORD PTR [edx-0x3414a3b6],0x5c
  40e0b2:	iret   
  40e0b3:	cmc    
  40e0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b5:	push   cs
  40e0b6:	out    dx,eax
  40e0b7:	sbb    DWORD PTR [ebx],edi
  40e0b9:	bound  edx,QWORD PTR [eax]
  40e0bb:	xor    eax,0xc57b39e0
  40e0c0:	rep outs dx,BYTE PTR ds:[esi]
  40e0c2:	loop   0x40e0c5
  40e0c4:	js     0x40e13e
  40e0c6:	pop    ecx
  40e0c7:	jp     0x40e04f
  40e0c9:	xor    ebx,DWORD PTR [ecx+0xdbf88d9]
  40e0cf:	push   esp
  40e0d0:	cdq    
  40e0d1:	adc    bh,BYTE PTR [ecx]
  40e0d3:	cmp    bh,ch
  40e0d5:	iret   
  40e0d6:	mov    esp,0x746cdf9d
  40e0db:	mov    esp,0xe8263a93
  40e0e0:	(bad)  
  40e0e1:	in     eax,0xe
  40e0e3:	cdq    
  40e0e4:	dec    edi
  40e0e5:	jne    0x40e133
  40e0e7:	mov    BYTE PTR [ecx],dl
  40e0e9:	push   esp
  40e0ea:	stos   DWORD PTR es:[edi],eax
  40e0eb:	loop   0x40e16a
  40e0ed:	test   BYTE PTR [ebx-0x6a91ffae],bl
  40e0f3:	and    al,0x54
  40e0f5:	sub    ecx,DWORD PTR [ecx]
  40e0f7:	dec    esi
  40e0f8:	dec    eax
  40e0f9:	mov    ecx,0xe822bb4f
  40e0fe:	popf   
  40e0ff:	pop    edx
  40e100:	rcl    DWORD PTR [ecx+0x1f6f7a3c],0xa0
  40e107:	sti    
  40e108:	add    eax,0x2b6e6521
  40e10d:	std    
  40e10e:	neg    al
  40e110:	jno    0x40e16a
  40e112:	retf   
  40e113:	js     0x40e0b7
  40e115:	enter  0xf590,0x5a
  40e119:	hlt    
  40e11a:	fmul   st(4),st
  40e11c:	mov    al,0xa3
  40e11e:	shl    DWORD PTR [eax],1
  40e120:	jge    0x40e192
  40e122:	pushf  
  40e123:	xchg   ecx,eax
  40e124:	(bad)  
  40e125:	push   edi
  40e126:	pop    ds
  40e127:	addr16 loope 0x40e167
  40e12a:	ficomp DWORD PTR [ebp-0x74]
  40e12d:	test   eax,0x3aaabdd9
  40e132:	stc    
  40e133:	stos   BYTE PTR es:[edi],al
  40e134:	dec    esi
  40e135:	(bad)  
  40e136:	sbb    eax,DWORD PTR [esi]
  40e138:	xchg   esp,eax
  40e139:	inc    ebx
  40e13a:	sbb    bh,cl
  40e13c:	sub    al,dl
  40e13e:	pushf  
  40e13f:	dec    ebx
  40e140:	cmp    eax,0x23db79bb
  40e145:	sbb    ah,dl
  40e147:	sub    DWORD PTR [edi-0x1b],edx
  40e14a:	sbb    ebp,esi
  40e14c:	int3   
  40e14d:	retf   0x1f7d
  40e150:	mov    edi,0x2825d5ba
  40e155:	pop    ecx
  40e156:	push   edx
  40e157:	int    0x84
  40e159:	jno    0x40e112
  40e15b:	pusha  
  40e15c:	dec    edx
  40e15d:	jno    0x40e1a1
  40e15f:	in     eax,0x88
  40e161:	lds    esi,FWORD PTR cs:[ebx]
  40e164:	dec    edi
  40e165:	ds pusha 
  40e167:	xor    eax,DWORD PTR [esi+0x48]
  40e16a:	inc    esp
  40e16b:	jbe    0x40e0fa
  40e16d:	pop    eax
  40e16e:	and    al,BYTE PTR [eiz*2+0x4297b210]
  40e175:	push   0x168bc75b
  40e17a:	leave  
  40e17b:	push   edx
  40e17c:	adc    dh,BYTE PTR [ebx]
  40e17e:	jp     0x40e1f2
  40e180:	mov    dl,0x3e
  40e182:	xchg   ebp,eax
  40e183:	clc    
  40e184:	or     BYTE PTR [eax-0x33062c],bl
  40e18a:	loopne 0x40e1c2
  40e18c:	nop
  40e18d:	aad    0x33
  40e18f:	loope  0x40e14e
  40e191:	fmul   DWORD PTR [ebx]
  40e193:	call   0x583f6945
  40e198:	fcomp  QWORD PTR [ecx]
  40e19a:	cli    
  40e19b:	jmp    0xd7c1cdea
  40e1a0:	sub    al,0x8f
  40e1a2:	lea    ebx,[edi-0x4e]
  40e1a5:	ss aas 
  40e1a7:	sbb    eax,DWORD PTR [ebp-0x4b]
  40e1aa:	out    dx,al
  40e1ab:	lods   al,BYTE PTR ds:[esi]
  40e1ac:	push   ebp
  40e1ad:	imul   esi,DWORD PTR [ebx+0x43380b8c],0x907932a
  40e1b7:	in     eax,0x9f
  40e1b9:	jp     0x40e14d
  40e1bb:	xchg   ecx,eax
  40e1bc:	div    DWORD PTR [ebp-0x6d]
  40e1bf:	inc    eax
  40e1c0:	mov    bh,0xc2
  40e1c2:	push   eax
  40e1c3:	and    eax,0xadc3f0f2
  40e1c8:	jns    0x40e1d7
  40e1ca:	push   ebp
  40e1cb:	xchg   DWORD PTR [edi+0x7bee9fc2],ebx
  40e1d1:	xchg   edx,eax
  40e1d2:	adc    ecx,esi
  40e1d4:	ror    DWORD PTR [ecx],1
  40e1d6:	inc    ecx
  40e1d7:	mov    fs,WORD PTR [esi+0x3f8f119e]
  40e1dd:	cmp    eax,0x6c520e49
  40e1e2:	dec    esi
  40e1e3:	xchg   ecx,esi
  40e1e5:	call   0xebf9:0xa01f209a
  40e1ec:	jecxz  0x40e17b
  40e1ee:	in     eax,dx
  40e1ef:	cmp    bh,BYTE PTR [eax+ebp*8+0x40]
  40e1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f4:	out    0xc4,eax
  40e1f6:	cwde   
  40e1f7:	das    
  40e1f8:	mov    esp,0x503b3809
  40e1fd:	add    BYTE PTR [eax],al
  40e1ff:	inc    esp
  40e200:	imul   ebp,DWORD PTR [eax],0x284ffe7f
  40e206:	dec    esp
  40e207:	or     bl,bl
  40e209:	sbb    BYTE PTR [ebx],bh
  40e20b:	fs mov ch,0x3b
  40e20e:	call   0xf2e0:0xa67445dd
  40e215:	jae    0x40e20e
  40e217:	adc    ebp,DWORD PTR [eax-0x5942254b]
  40e21d:	aam    0x1
  40e21f:	push   ebp
  40e220:	sbb    bl,cl
  40e222:	push   cs
  40e223:	and    ah,BYTE PTR [ebp-0x574a641f]
  40e229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e22a:	mov    eax,0x11a15373
  40e22f:	les    edi,FWORD PTR [ecx-0x60]
  40e232:	sar    DWORD PTR [edx+0x32],1
  40e235:	add    eax,DWORD PTR [ecx+0x462c2f59]
  40e23b:	(bad)
  40e240:	pop    edx
  40e241:	in     eax,0x18
  40e243:	lds    esp,FWORD PTR [si+0xb]
  40e247:	outs   dx,BYTE PTR ds:[esi]
  40e248:	icebp  
  40e249:	pop    esi
  40e24a:	sbb    ecx,DWORD PTR [ecx-0x16]
  40e24d:	xchg   esp,eax
  40e24e:	xchg   ebx,eax
  40e24f:	and    DWORD PTR [eax-0x2bab3693],eax
  40e255:	lds    ebx,FWORD PTR [edx-0x693b8893]
  40e25b:	hlt    
  40e25c:	in     al,0x57
  40e25e:	and    esp,edi
  40e260:	out    dx,eax
  40e261:	dec    ecx
  40e262:	mov    dh,0x3c
  40e264:	(bad)  
  40e265:	push   0x1462cb9
  40e26a:	hlt    
  40e26b:	mov    ds:0x9e2e96fe,eax
  40e270:	sar    DWORD PTR [ebx-0x2e],1
  40e273:	xchg   ebx,eax
  40e274:	mov    edx,0x39767339
  40e279:	mov    DWORD PTR [edx],edx
  40e27b:	cmp    BYTE PTR [ecx-0x10],ch
  40e27e:	cmp    esp,DWORD PTR [eax]
  40e280:	lahf   
  40e281:	stos   DWORD PTR es:[edi],eax
  40e282:	or     eax,DWORD PTR [esi+0x50]
  40e285:	xor    DWORD PTR [bx+di-0x4668],edi
  40e28a:	out    0x27,al
  40e28c:	cwde   
  40e28d:	push   0x105e319f
  40e292:	mov    edx,ebx
  40e294:	mov    fs:0x2cc54d09,al
  40e29a:	rol    bl,cl
  40e29c:	push   0xc7622091
  40e2a1:	cwde   
  40e2a2:	or     ebx,esi
  40e2a4:	mov    ebp,0xac61228d
  40e2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2aa:	pop    edi
  40e2ab:	loope  0x40e2a0
  40e2ad:	cwde   
  40e2ae:	pop    eax
  40e2af:	lahf   
  40e2b0:	test   al,0x5b
  40e2b2:	dec    edi
  40e2b3:	mov    ds:0xcfcd6e09,eax
  40e2b8:	adc    eax,0x68
  40e2bb:	outs   dx,DWORD PTR ds:[esi]
  40e2bc:	mov    eax,ds:0xb8048936
  40e2c1:	push   eax
  40e2c2:	sbb    bh,ch
  40e2c4:	mov    esp,0xcee914bc
  40e2c9:	inc    edx
  40e2ca:	xchg   DWORD PTR [edi+0x631c9589],eax
  40e2d0:	mov    eax,0x6ad1ca9e
  40e2d5:	inc    ebp
  40e2d6:	mov    al,ds:0xb3651d93
  40e2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2dc:	fsubr  DWORD PTR [edi-0x3098a9d6]
  40e2e2:	jmp    0x885f7bb0
  40e2e7:	sub    al,0xd7
  40e2e9:	das    
  40e2ea:	dec    esp
  40e2eb:	(bad)  
  40e2ec:	in     eax,0x79
  40e2ee:	jmp    0x40e35e
  40e2f0:	cvtdq2ps xmm7,xmm3
  40e2f3:	aad    0xa3
  40e2f5:	or     esi,DWORD PTR [edi-0x74]
  40e2f8:	adc    al,0xd7
  40e2fa:	test   ecx,ebp
  40e2fc:	xor    bl,dl
  40e2fe:	inc    edi
  40e2ff:	lahf   
  40e300:	ja     0x40e33d
  40e302:	shl    BYTE PTR [ebx+esi*8],0x9
  40e306:	mov    ds:0xf865d047,al
  40e30b:	cmp    al,0xd6
  40e30d:	aam    0xd5
  40e30f:	push   ebx
  40e310:	ja     0x40e2ba
  40e312:	cmp    BYTE PTR [ecx-0xe],bh
  40e315:	mov    WORD PTR [ebx+0x78],es
  40e318:	mov    eax,0x88281bb6
  40e31d:	dec    esp
  40e31e:	jnp    0x40e397
  40e320:	int3   
  40e321:	or     DWORD PTR [esi+ebp*2+0xf],0x9771231
  40e329:	out    0xf4,al
  40e32b:	pop    ebx
  40e32c:	jle    0x40e2be
  40e32e:	jge    0x40e34a
  40e330:	cmp    ebp,DWORD PTR [esi]
  40e332:	jmp    0xf3b85df5
  40e337:	and    esi,edx
  40e339:	ret    0x3701
  40e33c:	loop   0x40e364
  40e33e:	ficom  WORD PTR [ecx]
  40e340:	lds    edx,FWORD PTR [ebx]
  40e342:	sbb    DWORD PTR [eax+0x47],esp
  40e345:	mov    esp,0xa72863f8
  40e34a:	xlat   BYTE PTR ds:[ebx]
  40e34b:	pop    ebx
  40e34c:	mov    DWORD PTR [esi+0x3d],ebx
  40e34f:	push   0x32
  40e351:	mov    edx,0xca49a336
  40e356:	leave  
  40e357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e358:	and    edx,DWORD PTR [ecx+0x584442d0]
  40e35e:	imul   esp,DWORD PTR [edx],0x16
  40e361:	adc    ebx,esi
  40e363:	scas   eax,DWORD PTR es:[edi]
  40e364:	add    DWORD PTR ds:0x86225ffb,ebp
  40e36a:	sar    BYTE PTR [esi],0x2a
  40e36d:	inc    ecx
  40e36e:	(bad)  
  40e36f:	mov    ecx,0xa0bc1d4
  40e374:	xor    eax,0xad81f839
  40e379:	push   ss
  40e37a:	sbb    eax,0x5fa2a9b8
  40e37f:	adc    edx,DWORD PTR [esi+0x2e]
  40e382:	stos   DWORD PTR es:[edi],eax
  40e383:	int3   
  40e384:	mov    esi,0xc8f5263e
  40e389:	sti    
  40e38a:	das    
  40e38b:	pop    edi
  40e38c:	mov    ds:0xde55c6dd,al
  40e391:	adc    eax,0x58853b00
  40e396:	xor    BYTE PTR [esi-0x4b8457f4],bh
  40e39c:	shl    DWORD PTR [esi+ebx*2+0x5be7b694],1
  40e3a3:	sbb    esp,esi
  40e3a5:	xchg   ebp,eax
  40e3a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3a7:	inc    eax
  40e3a8:	pushf  
  40e3a9:	inc    eax
  40e3aa:	cmp    ebp,DWORD PTR [ecx+ecx*4]
  40e3ad:	xchg   esp,eax
  40e3ae:	out    dx,al
  40e3af:	lods   al,BYTE PTR ds:[esi]
  40e3b0:	test   ebx,ecx
  40e3b2:	out    0xbe,al
  40e3b4:	mov    gs,WORD PTR [edx]
  40e3b6:	or     eax,0xf5bd0e27
  40e3bb:	fwait
  40e3bc:	xchg   DWORD PTR [esi+eax*4+0x23e47e0],esi
  40e3c3:	dec    eax
  40e3c4:	mov    edi,es
  40e3c6:	mov    WORD PTR [esi+0x1f],gs
  40e3c9:	and    DWORD PTR [edx+edi*1-0x4a],0x7201f29c
  40e3d1:	pusha  
  40e3d2:	cmp    edi,esp
  40e3d4:	push   ecx
  40e3d5:	sub    DWORD PTR [ebx+0x7c],eax
  40e3d8:	inc    ecx
  40e3d9:	(bad)  
  40e3da:	mov    dl,0xf1
  40e3dc:	add    DWORD PTR [edi-0x4a],esp
  40e3df:	pop    edx
  40e3e0:	mov    ah,0xda
  40e3e2:	xor    BYTE PTR [edi+eax*1],al
  40e3e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3e6:	or     al,0xee
  40e3e8:	push   edx
  40e3e9:	pusha  
  40e3ea:	gs or  eax,0x5caea9ed
  40e3f0:	(bad)  
  40e3f1:	scas   al,BYTE PTR es:[edi]
  40e3f2:	outs   dx,DWORD PTR ds:[esi]
  40e3f3:	ins    BYTE PTR es:[edi],dx
  40e3f4:	shl    ah,cl
  40e3f6:	int    0x30
  40e3f8:	jp     0x40e3f3
  40e3fa:	lock jge 0x40e3d2
  40e3fd:	mov    ds:0x6763300f,al
  40e402:	mov    BYTE PTR [eax+0x7e],al
  40e405:	adc    bl,BYTE PTR [ecx+esi*4-0x4220e316]
  40e40c:	xchg   ecx,eax
  40e40d:	push   0x25b15cd5
  40e412:	fs jmp 0xb171:0x97cc06de
  40e41a:	pop    es
  40e41b:	cmp    BYTE PTR [esi-0x61e5b45a],0x14
  40e422:	cmp    bl,BYTE PTR [eax-0x6cff764a]
  40e428:	je     0x40e4a9
  40e42a:	mov    al,ds:0x2094b4a4
  40e42f:	ret    0xd0c5
  40e432:	das    
  40e433:	pop    ss
  40e434:	push   es
  40e435:	out    dx,eax
  40e436:	cmc    
  40e437:	inc    eax
  40e438:	daa    
  40e439:	mul    DWORD PTR [eax-0x26]
  40e43c:	xor    ebp,ecx
  40e43e:	stos   BYTE PTR es:[edi],al
  40e43f:	xor    eax,0x792e6419
  40e444:	stos   DWORD PTR es:[edi],eax
  40e445:	neg    DWORD PTR [esi-0x65]
  40e448:	out    dx,al
  40e449:	rol    DWORD PTR [esi-0x71],cl
  40e44c:	mov    ebp,0xec676c59
  40e451:	(bad)  
  40e452:	jp     0x40e3e4
  40e454:	popa   
  40e455:	pop    edi
  40e456:	retf   0x41f7
  40e459:	sbb    eax,0xc3650343
  40e45e:	and    dl,BYTE PTR [ebp+0x4687bc47]
  40e464:	aaa    
  40e465:	test   BYTE PTR [edx-0x3b0ac67f],bl
  40e46b:	jge    0x40e493
  40e46d:	inc    ecx
  40e46e:	dec    ebx
  40e46f:	aam    0xdb
  40e471:	bound  edi,QWORD PTR [ebx]
  40e473:	adc    BYTE PTR [ebx],dl
  40e475:	jnp    0x40e4ae
  40e477:	sub    al,0x44
  40e479:	loop   0x40e495
  40e47b:	xchg   DWORD PTR [eax-0x755f3f19],esp
  40e481:	fcom   DWORD PTR [esi+0x38]
  40e484:	or     al,0xc8
  40e486:	mov    ebx,0x2b9d39cf
  40e48b:	int    0x99
  40e48d:	ret    
  40e48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e48f:	call   0x7717:0x967b7e1a
  40e496:	lahf   
  40e497:	gs ret 0xd777
  40e49b:	fld    TBYTE PTR ds:0x56d6b25a
  40e4a1:	(bad)  
  40e4a2:	mov    cl,0x99
  40e4a4:	nop
  40e4a5:	pop    esi
  40e4a6:	fidiv  DWORD PTR [esi+0x7d]
  40e4a9:	dec    eax
  40e4aa:	pop    esp
  40e4ab:	popf   
  40e4ac:	mov    bh,0x5c
  40e4ae:	mov    WORD PTR [edx-0xf],?
  40e4b1:	sbb    eax,0x908f43ed
  40e4b6:	fstp   QWORD PTR [ecx]
  40e4b8:	pop    esi
  40e4b9:	test   BYTE PTR [ecx-0xc],dh
  40e4bc:	test   edi,edi
  40e4be:	add    esi,ebx
  40e4c0:	mov    DWORD PTR [edx+eiz*2+0x148a02ee],ecx
  40e4c7:	loop   0x40e449
  40e4c9:	push   esi
  40e4ca:	dec    eax
  40e4cb:	jne    0x40e48e
  40e4cd:	lods   eax,DWORD PTR ds:[esi]
  40e4ce:	ss aam 0xf8
  40e4d1:	jnp    0x40e464
  40e4d3:	test   DWORD PTR [esi],eax
  40e4d5:	jl     0x40e479
  40e4d7:	icebp  
  40e4d8:	or     al,0x49
  40e4da:	cwde   
  40e4db:	cmp    DWORD PTR [edx-0x52],edx
  40e4de:	fcomp  DWORD PTR [edx+0x18]
  40e4e1:	cmp    eax,0x4e6df70a
  40e4e6:	adc    ecx,ebx
  40e4e8:	ss push 0x5d217523
  40e4ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4ef:	mov    ch,0x5f
  40e4f1:	or     al,0x62
  40e4f3:	in     eax,0xaf
  40e4f5:	das    
  40e4f6:	cmp    DWORD PTR [ebx],esp
  40e4f8:	and    dl,bh
  40e4fa:	data16 (bad) 
  40e4fc:	push   ecx
  40e4fd:	loope  0x40e504
  40e4ff:	arpl   WORD PTR [ebx-0x1d],cx
  40e502:	fnstcw WORD PTR [esi-0x47145fc5]
  40e508:	adc    al,0xf7
  40e50a:	sub    BYTE PTR [edx],0x4a
  40e50d:	adc    al,0xea
  40e50f:	xchg   edx,eax
  40e510:	enter  0xe0de,0x24
  40e514:	test   eax,0xc19eedd7
  40e519:	xor    DWORD PTR [eax-0x6633b4b0],0xffffffc5
  40e520:	loop   0x40e58d
  40e522:	hlt    
  40e523:	or     esi,DWORD PTR gs:[ebx+edx*2+0x67bd63a7]
  40e52b:	mov    dl,ch
  40e52d:	mov    ds:0xf442a93b,al
  40e532:	pop    esi
  40e533:	aam    0xe2
  40e535:	xor    BYTE PTR [edx],bl
  40e537:	inc    esp
  40e538:	cmp    BYTE PTR ds:0x19e2b8c7,cl
  40e53e:	jno    0x40e59e
  40e540:	leave  
  40e541:	inc    ecx
  40e542:	sbb    al,0xe2
  40e544:	cdq    
  40e545:	dec    esp
  40e546:	cld    
  40e547:	aam    0x88
  40e549:	mov    ebx,0x37ff9a74
  40e54e:	imul   ecx,esp,0xffffff8d
  40e551:	mov    ch,0xf1
  40e553:	dec    edx
  40e554:	retf   
  40e555:	js     0x40e599
  40e557:	push   ss
  40e558:	adc    edx,DWORD PTR ds:0xf7ee0ee0
  40e55e:	xchg   ebp,eax
  40e55f:	shl    bh,cl
  40e561:	aad    0xe2
  40e563:	(bad)  
  40e564:	out    dx,al
  40e565:	pop    eax
  40e566:	or     cl,BYTE PTR [eax-0x71]
  40e569:	sbb    bh,BYTE PTR [edx]
  40e56b:	mov    bh,0x11
  40e56d:	mov    BYTE PTR ds:0x4643df5c,cl
  40e573:	jmp    0x40e50a
  40e575:	push   ebp
  40e576:	jmp    0x1688:0x302b72ca
  40e57d:	(bad)  
  40e57e:	stos   BYTE PTR es:[edi],al
  40e57f:	clc    
  40e580:	loope  0x40e5d0
  40e582:	pop    ss
  40e583:	fld    st(6)
  40e585:	bound  edi,QWORD PTR [ebx]
  40e587:	fisttp WORD PTR [edx+0x7a]
  40e58a:	push   cs
  40e58b:	int    0x70
  40e58d:	(bad)  
  40e58e:	cmp    edi,edx
  40e590:	mov    esp,0x99d42ba8
  40e595:	sbb    cl,cl
  40e597:	mov    ch,0xde
  40e599:	adc    bh,BYTE PTR [esi-0x6cfa3039]
  40e59f:	mov    ebx,0x4b13ff22
  40e5a4:	inc    ebx
  40e5a5:	push   0x27
  40e5a7:	adc    al,0xd7
  40e5a9:	dec    esi
  40e5aa:	bound  esi,QWORD PTR [ebx]
  40e5ac:	cld    
  40e5ad:	jae    0x40e58a
  40e5af:	mov    ds:0x7da11a47,eax
  40e5b4:	and    DWORD PTR [eax+0x59cb1c5e],0x3c
  40e5bb:	xchg   esp,eax
  40e5bc:	ret    
  40e5bd:	cmp    BYTE PTR [esi+0x42],dl
  40e5c0:	mov    edi,0xc046651f
  40e5c5:	pop    edi
  40e5c6:	popf   
  40e5c7:	retf   
  40e5c8:	ret    0x937e
  40e5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5cc:	les    edx,FWORD PTR [edi-0x7e]
  40e5cf:	mov    ss,WORD PTR [ebp*4-0x6271854]
  40e5d6:	sub    dh,BYTE PTR [eax]
  40e5d8:	adc    dl,BYTE PTR [ebx+ecx*1-0x17]
  40e5dc:	in     eax,0xa7
  40e5de:	jmp    0x79a574d0
  40e5e3:	or     bh,BYTE PTR [esi+0xabb152e]
  40e5e9:	cmp    cl,0xf1
  40e5ec:	and    ebp,DWORD PTR ds:0x98986ab0
  40e5f2:	lock outs dx,DWORD PTR ds:[esi]
  40e5f4:	fcomp  QWORD PTR [ecx]
  40e5f6:	mov    edx,0x1b8b0da3
  40e5fb:	(bad)  
  40e5fc:	std    
  40e5fd:	cmp    dl,dh
  40e5ff:	or     esi,ebx
  40e601:	fcomp  QWORD PTR [ebx]
  40e603:	xchg   edx,eax
  40e604:	ret    
  40e605:	inc    eax
  40e606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e607:	fmul   st(5),st
  40e609:	(bad)  
  40e60a:	push   ds
  40e60b:	loop   0x40e64c
  40e60d:	cmp    cl,BYTE PTR [eax-0xcde673d]
  40e613:	stos   DWORD PTR es:[edi],eax
  40e614:	jb     0x40e59e
  40e616:	dec    ebx
  40e617:	push   esi
  40e618:	mov    cs,esp
  40e61a:	repnz pop es
  40e61c:	sub    al,0x8a
  40e61e:	retf   
  40e61f:	(bad)  
  40e620:	jle    0x40e5dc
  40e622:	push   esp
  40e623:	and    al,0x57
  40e625:	ret    0xded7
  40e628:	jnp    0x40e678
  40e62a:	dec    esp
  40e62b:	sbb    eax,0x56330c17
  40e630:	xor    BYTE PTR ds:0xe3ccef1f,cl
  40e636:	ret    
  40e637:	jno    0x40e676
  40e639:	mov    ds:0xdcae368f,al
  40e63e:	fst    st(1)
  40e640:	xlat   BYTE PTR ds:[ebx]
  40e641:	xchg   esi,eax
  40e642:	sbb    ebx,DWORD PTR [ebx-0x1b5b7340]
  40e648:	jp     0x40e654
  40e64a:	cmp    eax,0x26ca7e3f
  40e64f:	mov    dh,0xf1
  40e651:	sti    
  40e652:	imul   esp,DWORD PTR [edx-0x6f],0xfffffffd
  40e656:	or     DWORD PTR [esi],ecx
  40e658:	sbb    ebx,DWORD PTR cs:[esi+0x6d867fb3]
  40e65f:	ins    DWORD PTR es:[edi],dx
  40e660:	ret    
  40e661:	sub    DWORD PTR ds:0x2e9b38eb,ebp
  40e667:	and    al,0xf9
  40e669:	inc    eax
  40e66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e66b:	jmp    0x2a6c:0x6bc71ee7
  40e672:	jle    0x40e672
  40e674:	jbe    0x40e6e3
  40e676:	(bad)  
  40e677:	cmp    BYTE PTR [edi+0x230f61e6],0xad
  40e67e:	repnz shl BYTE PTR [ecx+0x31],0x54
  40e683:	cmc    
  40e684:	(bad)  
  40e687:	in     eax,0xca
  40e689:	xor    edi,DWORD PTR [ecx]
  40e68b:	fwait
  40e68c:	inc    esi
  40e68d:	ret    0x1ce0
  40e690:	aam    0x6c
  40e692:	idiv   DWORD PTR [edx+0x5b2b65f]
  40e698:	inc    ebp
  40e699:	push   0xffffffbd
  40e69b:	push   0x89f781b7
  40e6a0:	or     eax,DWORD PTR [ebx-0x3c]
  40e6a3:	sbb    eax,0xdef7221
  40e6a8:	and    al,0xc8
  40e6aa:	sub    al,0x74
  40e6ac:	out    dx,eax
  40e6ad:	bound  esi,QWORD PTR [eax-0x2664649]
  40e6b3:	lock adc ch,BYTE PTR [edi+0x43]
  40e6b7:	sbb    eax,0x186a9650
  40e6bc:	jb     0x40e73d
  40e6be:	(bad)  
  40e6bf:	aam    0x7d
  40e6c1:	and    al,BYTE PTR [ebx]
  40e6c3:	xlat   BYTE PTR ds:[ebx]
  40e6c4:	push   eax
  40e6c5:	lock cmp dh,ch
  40e6c8:	retf   
  40e6c9:	pop    esi
  40e6ca:	lock idiv BYTE PTR [ecx]
  40e6cd:	lds    ebp,FWORD PTR [ebx+0x2a54b1e2]
  40e6d3:	repnz add dl,BYTE PTR [ecx+0x70d8589a]
  40e6da:	mov    al,gs:0x644c52dd
  40e6e0:	dec    ebp
  40e6e1:	sahf   
  40e6e2:	inc    edi
  40e6e3:	es or  al,0x13
  40e6e6:	inc    edx
  40e6e7:	je     0x40e6ae
  40e6e9:	es mov cl,0x83
  40e6ec:	aam    0xc8
  40e6ee:	push   esp
  40e6ef:	in     al,dx
  40e6f0:	bound  ebx,QWORD PTR [edx+ecx*1]
  40e6f3:	(bad)  
  40e6f4:	sbb    al,0x6b
  40e6f6:	ja     0x40e777
  40e6f8:	push   0xffffffbe
  40e6fa:	pop    ds
  40e6fb:	push   0x2e63e337
  40e700:	rcr    al,1
  40e702:	xor    edi,DWORD PTR [edi]
  40e704:	mov    ds:0x5b393f9e,eax
  40e709:	lock dec ebp
  40e70b:	jno    0x40e693
  40e70d:	sub    ch,BYTE PTR [ecx]
  40e70f:	cmp    DWORD PTR [eax+0x76],esp
  40e712:	mov    ds:0xa512ad3b,al
  40e717:	jbe    0x40e781
  40e719:	sub    ebx,eax
  40e71b:	inc    DWORD PTR [ebp-0x1f]
  40e71e:	xor    al,0xa3
  40e720:	push   0x4d7833cf
  40e725:	adc    al,0x61
  40e727:	dec    edx
  40e728:	push   ecx
  40e729:	fstp   st(5)
  40e72b:	lods   al,BYTE PTR ds:[esi]
  40e72c:	imul   ecx,edi,0x44d61e45
  40e732:	dec    edx
  40e733:	sub    ebp,DWORD PTR [ebx-0x18]
  40e736:	jne    0x40e724
  40e738:	mov    esp,0x7d3b914e
  40e73d:	retf   0x6080
  40e740:	sbb    ch,BYTE PTR [ebp+0x62]
  40e743:	xor    eax,0x1e25517b
  40e748:	or     eax,0x936a2fad
  40e74d:	or     esi,DWORD PTR [edi-0x31]
  40e750:	cmp    esp,DWORD PTR [edx-0x4f]
  40e753:	fs fcmovnb st,st(0)
  40e756:	cmp    al,BYTE PTR [eax-0x54]
  40e759:	ror    BYTE PTR [edx+0xc],1
  40e75c:	pop    edx
  40e75d:	and    DWORD PTR [eax+ebp*8+0x5f],ecx
  40e761:	pop    edx
  40e762:	inc    ecx
  40e763:	mov    al,ds:0xc2409005
  40e768:	scas   al,BYTE PTR es:[edi]
  40e769:	call   0x4546dc4c
  40e76e:	dec    ebp
  40e76f:	xor    al,0xd6
  40e771:	xor    edx,DWORD PTR [edx]
  40e773:	mov    bl,BYTE PTR [esi-0x460caa83]
  40e779:	mov    edx,0xe7d266f6
  40e77e:	mov    ch,0xfe
  40e780:	test   ebx,ebp
  40e782:	xchg   esi,eax
  40e783:	stos   DWORD PTR es:[edi],eax
  40e784:	sub    ah,BYTE PTR [ebx-0x243ee6c3]
  40e78a:	cmp    edx,esi
  40e78c:	pop    ds
  40e78d:	or     dl,BYTE PTR [ebx]
  40e78f:	jl     0x40e7ed
  40e791:	push   esi
  40e792:	mov    bl,0x61
  40e794:	xchg   BYTE PTR [edx-0x2cb435fa],bh
  40e79a:	jae    0x40e771
  40e79c:	mov    al,ds:0x7fc6bde2
  40e7a1:	test   edx,0xf01dce64
  40e7a7:	mov    eax,0x61ea475e
  40e7ac:	jne    0x40e77c
  40e7ae:	mov    dl,0xd9
  40e7b0:	xor    esi,DWORD PTR [ecx]
  40e7b2:	or     ebx,DWORD PTR [eax]
  40e7b4:	inc    esp
  40e7b5:	cmp    BYTE PTR ds:0x13d2bc4f,al
  40e7bb:	fwait
  40e7bc:	xchg   ebp,eax
  40e7bd:	and    ch,BYTE PTR [eax+0x3834b570]
  40e7c3:	lea    edi,[edi-0x16]
  40e7c6:	push   cs
  40e7c7:	push   ebp
  40e7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7c9:	(bad)  
  40e7ca:	pop    ss
  40e7cb:	xor    esp,0xffffff99
  40e7ce:	ret    0x9f00
  40e7d1:	adc    ah,BYTE PTR [eax-0x67]
  40e7d4:	and    dl,BYTE PTR [ebp-0x6a]
  40e7d7:	mov    esp,0xba078c50
  40e7dc:	cwde   
  40e7dd:	jecxz  0x40e79b
  40e7df:	ins    DWORD PTR es:[edi],dx
  40e7e0:	mov    edx,0x155759ad
  40e7e5:	iret   
  40e7e6:	or     eax,0x875bcc0d
  40e7eb:	setl   dl
  40e7ee:	dec    ebx
  40e7f0:	das    
  40e7f1:	or     al,0xd2
  40e7f3:	gs adc esp,eax
  40e7f6:	jge    0x40e7d9
  40e7f8:	iret   
  40e7f9:	aas    
  40e7fa:	out    0x81,eax
  40e7fc:	cmp    DWORD PTR [edx-0x11],0x74
  40e800:	pop    edi
  40e801:	xor    DWORD PTR [esi+0x30aa67cb],0xcf28027a
  40e80b:	sub    BYTE PTR [edi-0x5b610c6c],ch
  40e811:	aaa    
  40e812:	std    
  40e813:	xor    bl,BYTE PTR [ecx-0x2c]
  40e816:	inc    edx
  40e817:	int3   
  40e818:	scas   al,BYTE PTR es:[edi]
  40e819:	gs xchg esi,eax
  40e81b:	scas   al,BYTE PTR es:[edi]
  40e81c:	mov    esp,0xe47a16ea
  40e821:	push   ebx
  40e822:	jne    0x40e816
  40e824:	out    0x8a,al
  40e826:	pop    ecx
  40e827:	aam    0x8f
  40e829:	mov    es,WORD PTR [ebx+0x6bf2e7f5]
  40e82f:	test   al,0xe4
  40e831:	dec    edx
  40e832:	ret    
  40e833:	xchg   DWORD PTR [ebx-0x7f],ebx
  40e836:	mov    cl,BYTE PTR [ebp+0x7e]
  40e839:	sub    dl,al
  40e83b:	iret   
  40e83c:	mov    ds:0x40cc3ab5,al
  40e841:	test   BYTE PTR [eax-0x7d],ah
  40e844:	push   0xc43fb1ae
  40e849:	sub    BYTE PTR ds:0xe19f49c4,dh
  40e84f:	ins    BYTE PTR es:[edi],dx
  40e850:	sbb    al,0x6a
  40e852:	jmp    0x6c49:0xa9b6c680
  40e859:	pushf  
  40e85a:	pusha  
  40e85b:	int3   
  40e85c:	fwait
  40e85d:	sbb    esi,DWORD PTR [esi-0x5760da69]
  40e863:	shl    BYTE PTR [esi-0x3b],1
  40e866:	stos   BYTE PTR es:[edi],al
  40e867:	push   cs
  40e868:	or     al,0x5
  40e86a:	(bad)  
  40e86b:	xchg   ebp,eax
  40e86c:	ins    DWORD PTR es:[edi],dx
  40e86d:	mov    dl,cl
  40e86f:	pop    ebx
  40e870:	rcr    BYTE PTR [ebp+0x2f],cl
  40e873:	imul   ebx,DWORD PTR [ebx+0x57],0xffffffea
  40e877:	add    edx,DWORD PTR [esi-0xf]
  40e87a:	cmp    al,0x73
  40e87c:	out    dx,eax
  40e87d:	push   esp
  40e87e:	xor    al,0x32
  40e880:	xchg   edx,eax
  40e881:	inc    esp
  40e882:	pop    esp
  40e883:	ins    BYTE PTR es:[edi],dx
  40e884:	in     al,dx
  40e885:	ins    DWORD PTR es:[edi],dx
  40e886:	outs   dx,BYTE PTR ds:[si]
  40e888:	push   ebx
  40e889:	cmp    edx,esi
  40e88b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e88c:	or     eax,0x4f6ea8c6
  40e891:	lahf   
  40e892:	and    al,0x6d
  40e894:	rcr    BYTE PTR [ebp+0x5390ff5c],1
  40e89a:	out    dx,eax
  40e89b:	jo     0x40e826
  40e89d:	fcomp  QWORD PTR [edx-0x64]
  40e8a0:	xchg   edx,eax
  40e8a1:	out    dx,al
  40e8a2:	xchg   ecx,edx
  40e8a4:	mov    ebp,DWORD PTR [edx+ebp*4-0x34]
  40e8a8:	mov    edx,0x364ece94
  40e8ad:	aam    0x96
  40e8af:	jae    0x40e930
  40e8b1:	aas    
  40e8b2:	sahf   
  40e8b3:	arpl   di,ax
  40e8b5:	xor    al,0x2f
  40e8b7:	js     0x40e902
  40e8b9:	fst    st(6)
  40e8bb:	mov    eax,0x45c9a6ea
  40e8c0:	fmul   QWORD PTR [eax+edx*4-0x2e]
  40e8c4:	or     eax,0x43eb15a4
  40e8c9:	mov    eax,ds:0x2ccdf097
  40e8ce:	ror    BYTE PTR [ebp+eiz*8-0x7c],1
  40e8d2:	or     eax,0xc578152b
  40e8d7:	das    
  40e8d8:	xor    edx,edi
  40e8da:	pop    edx
  40e8db:	jns    0x40e898
  40e8dd:	or     DWORD PTR ss:[esp+ebp*2+0x3e],edi
  40e8e2:	mov    ds:0xb1749fb7,eax
  40e8e7:	push   ss
  40e8e8:	inc    esi
  40e8e9:	mov    ds:0xb5ebdc86,al
  40e8ee:	push   ebx
  40e8ef:	gs (bad) 
  40e8f2:	sub    ah,0x2f
  40e8f5:	dec    ebp
  40e8f6:	rcr    BYTE PTR [edx+edi*2],0x24
  40e8fa:	pop    esi
  40e8fb:	lock pusha 
  40e8fd:	jae    0x40e8e4
  40e8ff:	rol    DWORD PTR [edx-0xba61ceb],1
  40e905:	jnp    0x40e8eb
  40e907:	mov    edx,0xd6b9ff47
  40e90c:	mov    dh,0xb1
  40e90e:	popa   
  40e90f:	jge    0x40e8b7
  40e911:	cli    
  40e912:	cmc    
  40e913:	ror    DWORD PTR [eax],cl
  40e915:	data16 cmc 
  40e917:	sar    DWORD PTR [eax-0x476e095],1
  40e91d:	pop    edi
  40e91e:	cmp    BYTE PTR [esi],bl
  40e920:	and    al,0x1
  40e922:	dec    esi
  40e923:	lahf   
  40e924:	es sbb eax,0xa877a010
  40e92a:	mov    dh,0x60
  40e92c:	clc    
  40e92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e92e:	fisttp QWORD PTR [eax+0x12]
  40e931:	or     edx,ecx
  40e933:	add    al,0xcb
  40e935:	jge    0x40e97c
  40e937:	xchg   ebp,eax
  40e938:	sub    eax,0x396b1123
  40e93d:	xchg   ebx,eax
  40e93e:	xchg   BYTE PTR [eax+0xe0ef579],bh
  40e944:	dec    edx
  40e945:	fild   WORD PTR [ebx-0x60]
  40e948:	ud2    
  40e94a:	jnp    0x40e8f0
  40e94c:	jmp    0x5a413314
  40e951:	mov    BYTE PTR [eax+0x30caf188],bl
  40e957:	inc    ecx
  40e958:	mov    al,0x62
  40e95a:	ss test eax,0x844b2997
  40e960:	mov    edi,0xc32e661f
  40e965:	das    
  40e966:	add    DWORD PTR gs:[ebx+0x4b827026],ecx
  40e96d:	stos   DWORD PTR es:[edi],eax
  40e96e:	bound  esi,QWORD PTR [esi-0x66f142f2]
  40e974:	sub    esi,DWORD PTR [ecx]
  40e976:	arpl   WORD PTR [eax+0x55b3e528],bx
  40e97c:	xor    eax,0xda37a546
  40e981:	mov    bh,0xbd
  40e983:	jle    0x40e94c
  40e985:	loopne 0x40e9ab
  40e987:	ret    
  40e988:	dec    edx
  40e989:	mov    BYTE PTR [edi+0x2d50ff8b],ch
  40e98f:	je     0x40e983
  40e991:	and    BYTE PTR [edx+ebx*2-0x69cbcfac],dh
  40e998:	inc    esi
  40e999:	shr    dl,0x5c
  40e99c:	pop    ds
  40e99d:	inc    esi
  40e99e:	sbb    eax,0xa5639bea
  40e9a3:	inc    edx
  40e9a4:	sahf   
  40e9a5:	iret   
  40e9a6:	scas   al,BYTE PTR es:[edi]
  40e9a7:	inc    ebp
  40e9a8:	retf   0xbca8
  40e9ab:	pusha  
  40e9ac:	push   ecx
  40e9ad:	dec    esp
  40e9ae:	icebp  
  40e9af:	adc    al,0xdd
  40e9b1:	test   eax,0x871f1866
  40e9b6:	test   DWORD PTR [ebx+0x38544f14],0x2f913b1
  40e9c0:	int3   
  40e9c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9c2:	enter  0xb2b9,0x3f
  40e9c6:	jne    0x40ea20
  40e9c8:	enter  0xf34f,0x65
  40e9cc:	(bad)  
  40e9cd:	js     0x40e9f2
  40e9cf:	push   ebp
  40e9d0:	in     eax,dx
  40e9d1:	add    al,0xb0
  40e9d3:	xchg   ebx,eax
  40e9d4:	xchg   BYTE PTR [eax-0x69cc772c],bh
  40e9da:	das    
  40e9db:	out    dx,al
  40e9dc:	jl     0x40e9bb
  40e9de:	shl    DWORD PTR [esi-0x43],cl
  40e9e1:	into   
  40e9e2:	sub    ecx,edi
  40e9e4:	jp     0x40e9ba
  40e9e6:	jno    0x40ea1e
  40e9e8:	xchg   ecx,eax
  40e9e9:	bound  edx,QWORD PTR [ebx]
  40e9eb:	or     eax,0x6625a842
  40e9f0:	shl    DWORD PTR [ecx+0x438baa02],0x2a
  40e9f7:	mov    ebp,0x55e9930e
  40e9fc:	push   ss
  40e9fd:	repnz mov bh,0x18
  40ea00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea01:	xlat   BYTE PTR ds:[ebx]
  40ea02:	mov    ebp,0x9a4d7a52
  40ea07:	add    cl,BYTE PTR [esi+0x56]
  40ea0a:	mov    ecx,0xb66fa740
  40ea0f:	adc    edx,DWORD PTR [edi+0x33b62174]
  40ea15:	and    BYTE PTR [ebx+0x26],0xc0
  40ea19:	stos   BYTE PTR es:[edi],al
  40ea1a:	inc    ecx
  40ea1b:	xchg   esi,eax
  40ea1c:	jbe    0x40e9b9
  40ea1e:	in     eax,0x5e
  40ea20:	bound  eax,QWORD PTR [ecx]
  40ea22:	add    al,0xde
  40ea24:	(bad)  
  40ea25:	imul   edx,DWORD PTR [esi],0x17
  40ea28:	enter  0x584,0x63
  40ea2c:	and    BYTE PTR [edi],dl
  40ea2e:	outs   dx,BYTE PTR ds:[esi]
  40ea2f:	hlt    
  40ea30:	aaa    
  40ea31:	ror    cl,cl
  40ea33:	and    DWORD PTR [edx+0x643075ef],esp
  40ea39:	fcomp  DWORD PTR [eax-0x15]
  40ea3c:	mov    bh,0x75
  40ea3e:	inc    esp
  40ea3f:	in     al,dx
  40ea40:	cmp    esi,DWORD PTR [eax]
  40ea42:	jmp    0x44e89d55
  40ea47:	(bad)  
  40ea48:	(bad)  
  40ea49:	shl    BYTE PTR [edx-0x3e],cl
  40ea4c:	retf   0x9e88
  40ea4f:	outs   dx,DWORD PTR ds:[esi]
  40ea50:	mov    ah,0xc2
  40ea52:	mov    ds:0x2b27a91e,al
  40ea57:	pop    ebp
  40ea58:	addr16 lahf 
  40ea5a:	jb     0x40ea6e
  40ea5c:	add    DWORD PTR [ebp+edi*4-0x557dcdc6],edx
  40ea63:	dec    esi
  40ea64:	ret    
  40ea65:	scas   eax,DWORD PTR es:[edi]
  40ea66:	cli    
  40ea67:	fsub   QWORD PTR [esi+0x539ff00e]
  40ea6d:	pop    edx
  40ea6e:	xor    cl,0x60
  40ea71:	out    0xf8,eax
  40ea73:	pop    ebx
  40ea74:	pop    ss
  40ea75:	ror    esi,0x46
  40ea78:	int3   
  40ea79:	(bad)  
  40ea7a:	jbe    0x40eae4
  40ea7c:	daa    
  40ea7d:	or     BYTE PTR [edi-0x2e],bh
  40ea80:	add    esp,DWORD PTR [ebx]
  40ea82:	fnstsw WORD PTR [eax+eax*8+0x692c40f6]
  40ea89:	push   cs
  40ea8a:	fs daa 
  40ea8c:	mov    al,0xec
  40ea8e:	mov    cl,dh
  40ea90:	or     al,0xd3
  40ea92:	(bad)
  40ea95:	xchg   esp,eax
  40ea96:	push   ebx
  40ea97:	aad    0x6a
  40ea99:	std    
  40ea9a:	adc    edx,DWORD PTR [ebx-0x46]
  40ea9d:	enter  0x3ef,0x7e
  40eaa1:	out    dx,al
  40eaa2:	div    BYTE PTR [eax]
  40eaa4:	xchg   BYTE PTR ss:[ecx+0x49dd9fea],dh
  40eaab:	imul   dh
  40eaad:	push   0x17
  40eaaf:	add    DWORD PTR [edi-0x45],0x20b58b13
  40eab6:	in     eax,dx
  40eab7:	lea    ebp,[edx-0x60]
  40eaba:	jnp    0x40eb28
  40eabc:	dec    esp
  40eabd:	fisubr WORD PTR [edx+0x41]
  40eac0:	mov    al,0xd
  40eac2:	arpl   WORD PTR [eax-0x2ed6f55f],bx
  40eac8:	push   ebx
  40eac9:	aad    0xa9
  40eacb:	adc    ch,BYTE PTR [edx*1+0x7b99a3d1]
  40ead2:	mov    ebx,0x10eafa7f
  40ead7:	lahf   
  40ead8:	out    0x38,al
  40eada:	aam    0x36
  40eadc:	loopne 0x40eb1d
  40eade:	ret    
  40eadf:	inc    edi
  40eae0:	mov    dh,0xcb
  40eae2:	ror    BYTE PTR [ecx],1
  40eae4:	add    cl,BYTE PTR [ecx]
  40eae6:	aas    
  40eae7:	nop
  40eae8:	jge    0x40ea78
  40eaea:	jnp    0x40eaad
  40eaec:	and    esi,0x96fd49b7
  40eaf2:	pop    ds
  40eaf3:	stos   DWORD PTR es:[edi],eax
  40eaf4:	(bad)  
  40eaf5:	xor    al,0x6a
  40eaf7:	push   es
  40eaf8:	lds    ebx,FWORD PTR [edx-0x11]
  40eafb:	adc    BYTE PTR [ebx-0x3ae2342e],cl
  40eb01:	or     BYTE PTR [esi+ebx*1-0x7d14563e],dl
  40eb08:	xchg   ebx,eax
  40eb09:	jbe    0x40eb6f
  40eb0b:	add    BYTE PTR [esi+0x5ba058ee],dh
  40eb11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb12:	pop    esp
  40eb13:	aas    
  40eb14:	or     eax,0xc49384ab
  40eb19:	ror    ebp,1
  40eb1b:	and    al,0x7f
  40eb1d:	push   es
  40eb1e:	fist   WORD PTR [eax-0x474049dc]
  40eb24:	push   esp
  40eb25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb26:	jle    0x40eb37
  40eb28:	mov    fs,WORD PTR [ebx-0xe1f727e]
  40eb2e:	push   ds
  40eb2f:	mov    DWORD PTR [eax+0x190535a3],ebx
  40eb35:	(bad)  
  40eb36:	jge    0x40eb68
  40eb38:	pusha  
  40eb39:	sub    al,0xc3
  40eb3b:	daa    
  40eb3c:	mov    ebp,0x8b28e091
  40eb41:	dec    DWORD PTR [ebp+ebp*2-0x5478d2f4]
  40eb48:	aas    
  40eb49:	call   0xc7081022
  40eb4e:	scas   al,BYTE PTR es:[edi]
  40eb4f:	mov    BYTE PTR [esi*2+0x7dd22e8d],cl
  40eb56:	sub    eax,DWORD PTR [ebx+edx*8-0x199e950f]
  40eb5d:	lahf   
  40eb5e:	shl    DWORD PTR [ebp+0x34d8a0cb],1
  40eb64:	sub    DWORD PTR [ebx-0x338fcd28],0x3
  40eb6b:	add    BYTE PTR [edi-0xe],0xa5
  40eb6f:	inc    ebp
  40eb70:	xchg   edi,eax
  40eb71:	and    dh,0x45
  40eb74:	dec    esp
  40eb75:	and    ecx,esp
  40eb77:	in     al,0x8e
  40eb79:	mov    ah,0xf1
  40eb7b:	stos   BYTE PTR es:[edi],al
  40eb7c:	cld    
  40eb7d:	inc    edi
  40eb7e:	jnp    0x40ebe4
  40eb80:	adc    al,0x75
  40eb82:	bound  edi,QWORD PTR gs:[edx+0x58]
  40eb86:	dec    DWORD PTR fs:[edx+0x459964ee]
  40eb8d:	mov    dh,0x34
  40eb8f:	add    eax,0x5bd24590
  40eb94:	ins    BYTE PTR es:[edi],dx
  40eb95:	xrelease xchg BYTE PTR [edx+0x6c],dh
  40eb99:	and    BYTE PTR [edx],ch
  40eb9b:	fld    DWORD PTR [ecx]
  40eb9d:	loopne 0x40eb3f
  40eb9f:	xor    eax,0x229ef555
  40eba4:	cld    
  40eba5:	jmp    0x40ebb5
  40eba7:	retf   
  40eba8:	pop    edx
  40eba9:	loopne 0x40eb81
  40ebab:	ror    BYTE PTR [esi+0x515556bb],1
  40ebb1:	fiadd  WORD PTR [ebp-0x255dd0b4]
  40ebb7:	les    esp,FWORD PTR [ebp+0x36d5c7ac]
  40ebbd:	fisttp WORD PTR [eax]
  40ebbf:	jmp    0x9a333303
  40ebc4:	fwait
  40ebc5:	scas   eax,DWORD PTR es:[edi]
  40ebc6:	nop
  40ebc7:	sub    al,dh
  40ebc9:	les    ebp,FWORD PTR [ecx]
  40ebcb:	mov    ebp,0xdc0987f3
  40ebd0:	xor    dl,BYTE PTR [ebp+0xd3d2cc2]
  40ebd6:	into   
  40ebd7:	(bad)  
  40ebd8:	pop    edi
  40ebd9:	in     al,0xba
  40ebdb:	std    
  40ebdc:	inc    ebx
  40ebdd:	xchg   ebx,eax
  40ebde:	lods   al,BYTE PTR ds:[esi]
  40ebdf:	mov    al,0x80
  40ebe1:	xor    al,0xb6
  40ebe3:	aam    0xc
  40ebe5:	inc    eax
  40ebe6:	jb     0x40ebd2
  40ebe8:	cld    
  40ebe9:	xor    al,0xc0
  40ebeb:	std    
  40ebec:	xchg   BYTE PTR [ebp+0x7c],dl
  40ebef:	jge    0x40ec0d
  40ebf1:	es in  eax,0x36
  40ebf4:	push   ebx
  40ebf5:	movnti DWORD PTR [ecx],ecx
  40ebf8:	mov    ch,0x60
  40ebfa:	repnz outs dx,DWORD PTR ds:[esi]
  40ebfc:	adc    al,0x8
  40ebfe:	jg     0x40ec3a
  40ec00:	lods   eax,DWORD PTR ds:[esi]
  40ec01:	stos   DWORD PTR es:[edi],eax
  40ec02:	push   eax
  40ec03:	cmc    
  40ec04:	ret    
  40ec05:	push   0x3865812a
  40ec0a:	mov    ds:0xab477a9,eax
  40ec0f:	aam    0x80
  40ec11:	(bad)  
  40ec12:	aam    0x68
  40ec14:	jg     0x40eb96
  40ec16:	gs jle 0x40ebca
  40ec19:	call   0xf94309e8
  40ec1e:	mov    WORD PTR [edx],?
  40ec20:	jge    0x40ec3f
  40ec22:	lods   eax,DWORD PTR ds:[esi]
  40ec23:	imul   ebp,DWORD PTR [ebx],0xbfd03cab
  40ec29:	or     eax,0xdec1eab3
  40ec2e:	clc    
  40ec2f:	xor    al,0x58
  40ec31:	dec    ebp
  40ec32:	clc    
  40ec33:	mov    ah,BYTE PTR [esi+0x3e]
  40ec36:	jl     0x40ec43
  40ec38:	shl    DWORD PTR [eax-0x3],cl
  40ec3b:	repz scas al,BYTE PTR es:[edi]
  40ec3d:	mov    dh,0x34
  40ec3f:	sub    eax,0xb4c7a078
  40ec44:	cmp    eax,eax
  40ec46:	test   al,0xc4
  40ec48:	sub    edx,DWORD PTR [edx+0x18]
  40ec4b:	ins    BYTE PTR es:[edi],dx
  40ec4c:	daa    
  40ec4d:	nop
  40ec4e:	int3   
  40ec4f:	popa   
  40ec50:	cmp    edx,esp
  40ec52:	pop    ebx
  40ec53:	dec    edi
  40ec54:	ror    DWORD PTR [ecx-0x7965a0ca],1
  40ec5a:	adc    esp,DWORD PTR [eax]
  40ec5c:	mov    edx,0xafbd8b5a
  40ec61:	pop    edx
  40ec62:	mov    ebx,0x88e97e23
  40ec67:	sub    ah,BYTE PTR [ebp-0xa11563d]
  40ec6d:	xor    DWORD PTR [ecx+0x6a],0xe9e38335
  40ec74:	xchg   edx,eax
  40ec75:	pop    eax
  40ec76:	xchg   edi,eax
  40ec77:	enter  0x4256,0x66
  40ec7b:	push   0xffffff89
  40ec7d:	popa   
  40ec7e:	ss xchg esi,eax
  40ec80:	out    0x2e,eax
  40ec82:	sub    BYTE PTR [ebx+eiz*4+0x65],0xbf
  40ec87:	push   ebx
  40ec88:	inc    ebx
  40ec89:	adc    eax,0x4bd597ae
  40ec8e:	imul   edx,esp,0x3846c059
  40ec94:	aaa    
  40ec95:	jnp    0x40ec85
  40ec97:	call   0x2208b39
  40ec9c:	adc    al,0x7
  40ec9e:	sbb    al,0x54
  40eca0:	and    DWORD PTR [ecx],0xffffffc0
  40eca3:	hlt    
  40eca4:	pop    edx
  40eca5:	int    0x25
  40eca7:	addr16 icebp 
  40eca9:	rcr    BYTE PTR [edi+0x39],cl
  40ecac:	mov    edi,DWORD PTR [esi-0x749765b6]
  40ecb2:	xor    ecx,DWORD PTR [edi+0x55baf92e]
  40ecb8:	pusha  
  40ecb9:	gs push ss
  40ecbb:	ins    DWORD PTR es:[edi],dx
  40ecbc:	sub    eax,0x6a533863
  40ecc1:	in     eax,0xbe
  40ecc3:	enter  0xd77b,0x4a
  40ecc7:	xchg   DWORD PTR [edx],ebx
  40ecc9:	sti    
  40ecca:	fistp  WORD PTR [ecx]
  40eccc:	scas   al,BYTE PTR es:[edi]
  40eccd:	push   esi
  40ecce:	(bad)  [edi+0xd]
  40ecd1:	push   eax
  40ecd2:	rcl    DWORD PTR [esi-0x63],0x32
  40ecd6:	out    0xe2,eax
  40ecd8:	ror    DWORD PTR [ebx-0x12017caf],1
  40ecde:	dec    ebp
  40ecdf:	inc    ebx
  40ece0:	mov    esp,0xb9ea104a
  40ece5:	or     ecx,DWORD PTR [edi+0x70]
  40ece8:	ins    BYTE PTR es:[edi],dx
  40ece9:	nop
  40ecea:	mov    esi,0x7ad29c23
  40ecef:	push   ds
  40ecf0:	in     eax,dx
  40ecf1:	add    BYTE PTR [edx+edi*8],ch
  40ecf4:	pushf  
  40ecf5:	cwde   
  40ecf6:	mov    esp,0x6f9105f0
  40ecfb:	out    dx,eax
  40ecfc:	daa    
  40ecfd:	sar    BYTE PTR [ebp-0x44bd6964],1
  40ed03:	adc    esp,DWORD PTR [ebp+0x6269f57b]
  40ed09:	iret   
  40ed0a:	mov    edi,0x6ef5b0b3
  40ed0f:	xor    eax,0x1d4000fa
  40ed14:	scas   al,BYTE PTR es:[edi]
  40ed15:	ja     0x40ed36
  40ed17:	scas   eax,DWORD PTR es:[edi]
  40ed18:	xchg   edi,eax
  40ed19:	ret    
  40ed1a:	es cmc 
  40ed1c:	test   DWORD PTR [ecx+0x61],ebx
  40ed1f:	inc    esi
  40ed20:	mov    esp,0x1bf287b9
  40ed25:	adc    DWORD PTR [esi],ecx
  40ed27:	sbb    eax,0x74b65f05
  40ed2c:	popa   
  40ed2d:	mov    bh,0x31
  40ed2f:	sbb    eax,0x832ae395
  40ed34:	imul   ecx,DWORD PTR [eax-0x61022ac5],0xb0319232
  40ed3e:	jns    0x40ed26
  40ed40:	mov    eax,ds:0x60104e3d
  40ed45:	scas   eax,DWORD PTR es:[edi]
  40ed46:	icebp  
  40ed47:	jae    0x40ed0a
  40ed49:	out    dx,al
  40ed4a:	mov    al,0xff
  40ed4c:	pushw  cs
  40ed4e:	daa    
  40ed4f:	push   cs
  40ed50:	sub    al,BYTE PTR [esi+0x63]
  40ed53:	push   edx
  40ed54:	mov    ch,0x17
  40ed56:	jecxz  0x40edb5
  40ed58:	push   0xffffffab
  40ed5a:	pop    ds
  40ed5b:	jne    0x40ed30
  40ed5d:	xchg   edi,eax
  40ed5e:	sub    ebx,eax
  40ed60:	lahf   
  40ed61:	cmp    eax,0x2092ed1d
  40ed66:	xchg   ebx,eax
  40ed67:	and    BYTE PTR [ebx+ecx*1+0x24],bh
  40ed6b:	imul   ecx,eax,0xffffffb8
  40ed6e:	ja     0x40ed7e
  40ed70:	push   esi
  40ed71:	mov    DWORD PTR [ecx+ebx*1],esi
  40ed74:	cwde   
  40ed75:	fdiv   st(0),st
  40ed77:	xchg   BYTE PTR [ecx-0x5f],bh
  40ed7a:	aam    0xb7
  40ed7c:	inc    ebx
  40ed7d:	push   ebx
  40ed7e:	xor    BYTE PTR [ebx],bl
  40ed80:	scas   eax,DWORD PTR es:[edi]
  40ed81:	push   esp
  40ed82:	and    DWORD PTR [edx+0xaff031f],esi
  40ed88:	cmp    eax,0x8da22a7
  40ed8d:	(bad)  
  40ed8e:	cmp    al,0x2e
  40ed90:	gs sub ah,cl
  40ed93:	pop    eax
  40ed94:	sub    ecx,DWORD PTR [eax-0x28]
  40ed97:	dec    edi
  40ed98:	in     al,0x35
  40ed9a:	cmp    esi,edi
  40ed9c:	imul   ecx,DWORD PTR [ecx+0x2fbb7920],0xd2200ec2
  40eda6:	xlat   BYTE PTR ds:[ebx]
  40eda7:	(bad)  
  40eda8:	loope  0x40ee10
  40edaa:	mov    al,0xf0
  40edac:	add    esi,DWORD PTR [ebx+0x637b0f2f]
  40edb2:	push   0x5a4253ba
  40edb7:	mov    eax,ds:0x651a934f
  40edbc:	test   al,0xbb
  40edbe:	inc    eax
  40edbf:	pop    esi
  40edc0:	or     ecx,DWORD PTR [eax+0x5f]
  40edc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc4:	push   ecx
  40edc5:	xor    DWORD PTR [eax+edi*1-0x53],esp
  40edc9:	rcl    DWORD PTR [edi],cl
  40edcb:	push   esp
  40edcc:	shl    DWORD PTR [ebp+0x4f8ffbd0],cl
  40edd2:	cmp    DWORD PTR [eax-0x48],ebx
  40edd5:	jp     0x40ee28
  40edd7:	in     al,0xb3
  40edd9:	or     eax,0x21373293
  40edde:	jno    0x40ee46
  40ede0:	test   al,0xd0
  40ede2:	and    DWORD PTR [esi-0x169443b6],esi
  40ede8:	inc    edx
  40ede9:	sbb    eax,0xa9c1ab96
  40edee:	or     eax,0xe5287dab
  40edf3:	dec    ebp
  40edf4:	(bad)  
  40edf8:	mov    esi,0xfc5f7cc2
  40edfd:	test   BYTE PTR [ecx],ch
  40edff:	stos   DWORD PTR es:[edi],eax
  40ee00:	sub    DWORD PTR [ebx],esi
  40ee02:	pop    esi
  40ee03:	rol    DWORD PTR [eax+0x3374e5fe],0x22
  40ee0a:	out    dx,al
  40ee0b:	fmul   st(1),st
  40ee0d:	jl     0x40ee3d
  40ee0f:	xor    DWORD PTR [ecx+0x2c],ebp
  40ee12:	sbb    eax,0xbdf7752d
  40ee17:	les    eax,FWORD PTR [esi+0x5b5b93a9]
  40ee1d:	push   ebp
  40ee1e:	lods   al,BYTE PTR ds:[esi]
  40ee1f:	enter  0x66bb,0x84
  40ee23:	sub    al,0x47
  40ee25:	pop    ecx
  40ee26:	jle    0x40ee6b
  40ee28:	repnz in al,dx
  40ee2a:	push   ds
  40ee2b:	lock (bad) 
  40ee2d:	pusha  
  40ee2e:	sar    BYTE PTR [ebp-0x5135c4e2],cl
  40ee34:	ins    DWORD PTR es:[edi],dx
  40ee35:	(bad)  
  40ee36:	adc    al,0x89
  40ee38:	inc    edx
  40ee39:	stos   DWORD PTR es:[edi],eax
  40ee3a:	bnd jmp 0xf560e8fa
  40ee40:	or     dh,BYTE PTR [edx+0x57]
  40ee43:	popa   
  40ee44:	push   eax
  40ee45:	mov    ebp,0xa62db40a
  40ee4a:	pop    esi
  40ee4b:	and    BYTE PTR [eax+0x51d1f1b7],bh
  40ee51:	and    al,dl
  40ee53:	ss jg  0x40ee6c
  40ee56:	inc    esp
  40ee57:	push   ss
  40ee58:	(bad)  
  40ee59:	stos   DWORD PTR es:[edi],eax
  40ee5a:	jl     0x40eecf
  40ee5c:	rcl    BYTE PTR [ecx-0x1f6d8b42],1
  40ee62:	les    esp,FWORD PTR [edx+0x7fb49603]
  40ee68:	jbe    0x40eee2
  40ee6a:	popf   
  40ee6b:	xor    bh,dh
  40ee6d:	int    0xe9
  40ee6f:	xchg   esp,eax
  40ee70:	inc    esi
  40ee71:	fld    QWORD PTR gs:[ecx-0x3]
  40ee75:	fst    DWORD PTR cs:[edi]
  40ee78:	and    eax,DWORD PTR [edx+ebp*1]
  40ee7b:	inc    ecx
  40ee7c:	adc    edi,esp
  40ee7e:	out    0xc0,eax
  40ee80:	and    ah,BYTE PTR [eax]
  40ee82:	cmp    eax,0x105db479
  40ee87:	push   edx
  40ee88:	int3   
  40ee89:	sbb    BYTE PTR [edx+0x50],bh
  40ee8c:	sti    
  40ee8d:	hlt    
  40ee8e:	jno    0x40eefa
  40ee90:	call   0xda547e19
  40ee95:	loopne 0x40eed6
  40ee97:	ins    DWORD PTR es:[edi],dx
  40ee98:	inc    edi
  40ee99:	popf   
  40ee9a:	jmp    0x7784:0x24e446c6
  40eea1:	mov    cl,0x2a
  40eea3:	loopne 0x40eece
  40eea5:	mov    BYTE PTR [esi+esi*4],0x44
  40eea9:	(bad)  
  40eeaa:	mov    ecx,0x92c797b3
  40eeaf:	push   eax
  40eeb0:	inc    esi
  40eeb1:	arpl   WORD PTR ds:0x6d2e2207,bp
  40eeb7:	mov    al,0xde
  40eeb9:	mov    edi,0xc29fc915
  40eebe:	clc    
  40eebf:	loope  0x40eee6
  40eec1:	add    DWORD PTR [edi+0x3fed78d],edx
  40eec7:	dec    ebx
  40eec8:	loope  0x40ee52
  40eeca:	adc    edx,edi
  40eecc:	adc    DWORD PTR [eax+0x1c],edi
  40eecf:	(bad)  
  40eed0:	xchg   ebp,eax
  40eed1:	jbe    0x40eed0
  40eed3:	dec    esp
  40eed4:	pushf  
  40eed5:	or     BYTE PTR [ecx],dh
  40eed7:	dec    edx
  40eed8:	(bad)  
  40eed9:	aaa    
  40eeda:	ror    BYTE PTR [ecx+0x7e],0x23
  40eede:	lds    ebp,FWORD PTR [ecx-0x57a81df2]
  40eee4:	cwde   
  40eee5:	mov    esp,DWORD PTR cs:[ecx]
  40eee8:	rcr    DWORD PTR ds:0xbd72c016,0x6
  40eeef:	test   al,0x4d
  40eef1:	das    
  40eef2:	dec    eax
  40eef3:	xchg   esp,eax
  40eef4:	pop    ds
  40eef5:	call   0x696c:0x4ff1c5e8
  40eefc:	adc    BYTE PTR [esi+edi*8+0x243381aa],ch
  40ef03:	inc    ebp
  40ef04:	dec    ebx
  40ef05:	pusha  
  40ef06:	add    al,0xb6
  40ef08:	push   esp
  40ef09:	add    cl,bl
  40ef0b:	adc    edi,DWORD PTR [ebx]
  40ef0d:	inc    esi
  40ef0e:	gs adc esi,ebx
  40ef11:	fcmovnu st,st(7)
  40ef13:	fwait
  40ef14:	scas   eax,DWORD PTR es:[edi]
  40ef15:	out    0x62,al
  40ef17:	int3   
  40ef18:	std    
  40ef19:	retf   
  40ef1a:	pop    edi
  40ef1b:	mov    edx,0xd55f2b50
  40ef20:	mov    ah,0x80
  40ef22:	dec    esp
  40ef23:	fwait
  40ef24:	and    BYTE PTR [ebx],al
  40ef26:	adc    ebp,edx
  40ef28:	mov    ebx,0x9bd5372d
  40ef2d:	jo     0x40ef83
  40ef2f:	mov    ch,0x1d
  40ef31:	pop    ds
  40ef32:	jne    0x40ef23
  40ef34:	rcl    BYTE PTR ds:0x91540c57,1
  40ef3a:	mov    WORD PTR [edi],fs
  40ef3c:	mov    dh,0xe
  40ef3e:	(bad)  
  40ef3f:	cmp    ah,al
  40ef41:	pop    ss
  40ef42:	cmp    ebp,DWORD PTR [eax-0x640ad6f8]
  40ef48:	ror    al,1
  40ef4a:	retf   
  40ef4b:	jnp    0x40efa8
  40ef4d:	push   eax
  40ef4e:	mov    edx,0x55915cbc
  40ef53:	jnp    0x40efd2
  40ef55:	sub    DWORD PTR [edi-0x1f],0x4940ba29
  40ef5c:	rcl    BYTE PTR [esp+ebx*8+0x529e6fd6],1
  40ef63:	hlt    
  40ef64:	pop    es
  40ef65:	dec    ebp
  40ef66:	sub    bl,al
  40ef68:	les    edx,FWORD PTR [eax+0x601d4959]
  40ef6e:	lods   al,BYTE PTR ds:[esi]
  40ef6f:	or     al,0xf
  40ef71:	scas   al,BYTE PTR es:[edi]
  40ef72:	into   
  40ef73:	pop    edx
  40ef74:	ins    BYTE PTR es:[edi],dx
  40ef75:	gs push ebp
  40ef77:	mov    ebx,0xb66809c3
  40ef7c:	push   0x36
  40ef7e:	test   al,0xf1
  40ef80:	mov    dh,0xbe
  40ef82:	add    al,BYTE PTR [eax+edi*4-0x42]
  40ef86:	(bad)
  40ef89:	les    edx,FWORD PTR [eax+edi*4]
  40ef8c:	push   edx
  40ef8d:	rcr    BYTE PTR [esi+ebp*8],1
  40ef90:	repz jecxz 0x40ef75
  40ef93:	push   edi
  40ef94:	test   al,0xf0
  40ef96:	cmp    dl,BYTE PTR [ebp+0x111bdbb1]
  40ef9c:	or     al,0x2c
  40ef9e:	leave  
  40ef9f:	dec    edx
  40efa0:	jecxz  0x40efc3
  40efa2:	(bad)  
  40efa3:	retf   
  40efa4:	push   edx
  40efa5:	add    al,0x3d
  40efa7:	fbld   TBYTE PTR [ebx-0x12]
  40efaa:	push   es
  40efab:	mov    eax,ds:0x269a3d9f
  40efb0:	je     0x40ef68
  40efb2:	shl    DWORD PTR [eax+eax*1],cl
  40efb5:	cmp    eax,0x7dc3fd97
  40efba:	mov    BYTE PTR [edx-0x14],cl
  40efbd:	hlt    
  40efbe:	mov    ah,0xcc
  40efc0:	sbb    eax,0x848fce25
  40efc5:	dec    esp
  40efc6:	hlt    
  40efc7:	and    al,0x75
  40efc9:	daa    
  40efca:	fnstenv [ebx]
  40efcc:	fstp   DWORD PTR [edx+0x7bb02d75]
  40efd2:	mov    DWORD PTR [esi-0x13],0xc8e7f3d4
  40efd9:	xchg   esi,eax
  40efda:	sub    bh,BYTE PTR [edx+0x237843f3]
  40efe0:	inc    ecx
  40efe1:	ret    
  40efe2:	jnp    0x40efc4
  40efe4:	or     DWORD PTR [eax+0x63],0x7b
  40efe8:	popa   
  40efe9:	cli    
  40efea:	xor    al,0x1d
  40efec:	inc    esi
  40efed:	cli    
  40efee:	popf   
  40efef:	mov    edi,0x29f7032b
  40eff4:	(bad)  
  40eff5:	clc    
  40eff6:	adc    dl,BYTE PTR [esi+0x76faed25]
  40effc:	jns    0x40f03d
  40effe:	ja     0x40f00c
  40f000:	xchg   BYTE PTR [edx],bh
  40f002:	cmp    eax,0xf89400ab
  40f007:	pop    ss
  40f008:	push   edx
  40f009:	jg     0x40efb7
  40f00b:	addr16 daa 
  40f00d:	fidiv  DWORD PTR [ecx+0x2b]
  40f010:	jno    0x40efa0
  40f012:	xchg   edx,eax
  40f013:	inc    ecx
  40f014:	push   ebx
  40f015:	pop    ds
  40f016:	dec    edi
  40f017:	lea    edx,[ebx]
  40f019:	stos   BYTE PTR es:[edi],al
  40f01a:	dec    ebx
  40f01b:	daa    
  40f01c:	(bad)
  40f01f:	call   DWORD PTR [eax-0x6d]
  40f022:	cwde   
  40f023:	add    esi,0x25b79855
  40f029:	(bad)  
  40f02a:	push   0x68f6cd05
  40f02f:	jne    0x40f044
  40f031:	cld    
  40f032:	jle    0x40efe8
  40f034:	xchg   esp,eax
  40f035:	xor    edx,edx
  40f037:	mov    eax,0x9b643b7f
  40f03c:	jnp    0x40f023
  40f03e:	popf   
  40f03f:	dec    ebx
  40f040:	push   es
  40f041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f042:	out    dx,al
  40f043:	dec    esp
  40f044:	(bad)  
  40f045:	fist   DWORD PTR [edx-0x70fd8e21]
  40f04b:	pop    ebp
  40f04c:	sbb    eax,DWORD PTR [eax+0x6a408d02]
  40f052:	xchg   esp,eax
  40f053:	ss addr16 inc edx
  40f056:	and    ch,BYTE PTR [esi+0x6870fa53]
  40f05c:	(bad)  
  40f05d:	dec    edx
  40f05e:	sub    al,0xb
  40f060:	and    edi,DWORD PTR [ecx+edx*4-0x7f]
  40f064:	adc    eax,DWORD PTR [ecx]
  40f066:	sti    
  40f067:	push   cs
  40f068:	push   edi
  40f069:	xchg   eax,esp
  40f06b:	out    dx,al
  40f06c:	xchg   ebx,eax
  40f06d:	add    cl,BYTE PTR [esi+0x7769a8f3]
  40f073:	iret   
  40f074:	mov    ah,0xb2
  40f076:	fsubrp st(2),st
  40f078:	mov    eax,ds:0x757d49f6
  40f07d:	inc    ecx
  40f07e:	fdiv   DWORD PTR [edi+0x6b996e22]
  40f084:	and    al,ah
  40f086:	add    BYTE PTR [edx],cl
  40f088:	mov    cl,BYTE PTR [eax+0x222c4f68]
  40f08e:	test   BYTE PTR [esi+0x24],dh
  40f091:	lods   al,BYTE PTR ds:[esi]
  40f092:	pop    ecx
  40f093:	inc    edx
  40f094:	mov    ch,0x65
  40f096:	xor    dh,bh
  40f098:	add    ebp,ebp
  40f09a:	test   eax,0x7bbed470
  40f09f:	jbe    0x40f0d1
  40f0a1:	test   DWORD PTR cs:[ebx],esp
  40f0a4:	dec    eax
  40f0a5:	xchg   ecx,eax
  40f0a6:	and    BYTE PTR [edx-0x53],dh
  40f0a9:	add    DWORD PTR [eax+0x664510df],eax
  40f0af:	mov    eax,ds:0x1edd529c
  40f0b4:	clc    
  40f0b5:	cmp    DWORD PTR [edx+0x54],eax
  40f0b8:	jnp    0x40f108
  40f0ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0bb:	fsubr  st(2),st
  40f0bd:	mov    al,0xa5
  40f0bf:	jmp    0xdf4:0x4b6ff426
  40f0c6:	je     0x40f0ad
  40f0c8:	or     bh,0xd
  40f0cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0cc:	or     ecx,edx
  40f0ce:	sti    
  40f0cf:	clc    
  40f0d0:	xchg   edi,eax
  40f0d1:	push   ebx
  40f0d2:	sub    edi,DWORD PTR [ecx]
  40f0d4:	pop    es
  40f0d5:	rol    BYTE PTR [edi],cl
  40f0d7:	mov    edi,eax
  40f0d9:	pushf  
  40f0da:	jo     0x40f097
  40f0dc:	fisubr WORD PTR [esi-0x3bbb6be1]
  40f0e2:	nop
  40f0e3:	ins    BYTE PTR es:[edi],dx
  40f0e4:	and    BYTE PTR [eax],0x28
  40f0e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0e8:	sub    bh,BYTE PTR [edx+0x5f]
  40f0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0ec:	mov    DWORD PTR [eax+0x7787108b],ecx
  40f0f2:	loopne 0x40f126
  40f0f4:	fbstp  TBYTE PTR [ebx+0x3a147222]
  40f0fa:	jle    0x40f0db
  40f0fc:	test   DWORD PTR [edi-0x57cb9508],ebp
  40f102:	dec    ebx
  40f103:	bound  ecx,QWORD PTR [eax]
  40f105:	xchg   esp,eax
  40f106:	enter  0xe955,0xcc
  40f10a:	dec    ecx
  40f10b:	add    ecx,DWORD PTR [esi-0x3bc71420]
  40f111:	push   ds
  40f112:	mov    DWORD PTR [ecx],esp
  40f114:	pop    edi
  40f115:	cdq    
  40f116:	cmp    al,BYTE PTR [edx-0x50]
  40f119:	mov    esp,0xceb5ba5
  40f11e:	aas    
  40f11f:	inc    eax
  40f120:	pop    esi
  40f121:	adc    cl,0x38
  40f124:	or     edi,edx
  40f126:	imul   eax,DWORD PTR [ecx-0x79],0x2ed89c0f
  40f12d:	in     al,0x9f
  40f12f:	pop    ecx
  40f130:	jp     0x40f160
  40f132:	test   eax,0x3d01f14d
  40f137:	aad    0xd2
  40f139:	adc    eax,0xb8bf9b84
  40f13e:	cmp    eax,0x309dfa4a
  40f143:	mov    BYTE PTR [edi],ch
  40f145:	sbb    ch,bh
  40f147:	xchg   esp,eax
  40f148:	test   al,0x34
  40f14a:	sahf   
  40f14b:	dec    ecx
  40f14c:	jle    0x40f1c8
  40f14e:	mov    ch,0xb3
  40f150:	push   ss
  40f151:	fadd   QWORD PTR [ecx+0x7a]
  40f154:	cmp    al,0x71
  40f156:	adc    bh,BYTE PTR [ecx]
  40f158:	fcomp  DWORD PTR [eax]
  40f15a:	cmp    DWORD PTR [eax+esi*4],edi
  40f15d:	ja     0x40f18e
  40f15f:	pop    ecx
  40f160:	bound  esp,QWORD PTR [eax+0x388540cc]
  40f166:	dec    eax
  40f167:	xlat   BYTE PTR ds:[ebx]
  40f168:	je     0x40f101
  40f16a:	(bad)  
  40f16b:	pop    esp
  40f16c:	pop    edi
  40f16d:	addr16 mov ebx,0xebeb18f
  40f173:	hlt    
  40f174:	ins    BYTE PTR es:[edi],dx
  40f175:	fwait
  40f176:	stos   BYTE PTR es:[edi],al
  40f177:	fldcw  WORD PTR [edi]
  40f179:	inc    esp
  40f17a:	add    DWORD PTR [ebx+edx*4],0xcdbf5a00
  40f181:	xchg   edi,eax
  40f182:	scas   eax,DWORD PTR es:[edi]
  40f183:	femms  
  40f185:	add    eax,0xb828b89e
  40f18a:	es fs and eax,0xda995021
  40f191:	das    
  40f192:	jmp    0x40f1e5
  40f194:	xor    BYTE PTR [ecx+0x7df06d4e],dh
  40f19a:	xchg   edi,eax
  40f19b:	imul   ecx,esp,0x91ffbf48
  40f1a1:	rcl    BYTE PTR [edx+ebp*4],1
  40f1a4:	push   edi
  40f1a5:	jp     0x40f138
  40f1a7:	mov    edx,0xadd31b3e
  40f1ac:	pop    ecx
  40f1ad:	add    edi,DWORD PTR [ebx-0x5c]
  40f1b0:	test   al,0x7a
  40f1b2:	(bad)  
  40f1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b4:	jle    0x40f1f3
  40f1b6:	jmp    0x40f20d
  40f1b8:	jmp    0xf80f:0x4c3b95ef
  40f1bf:	clc    
  40f1c0:	outs   dx,DWORD PTR ds:[esi]
  40f1c1:	out    0x9a,al
  40f1c3:	pop    ecx
  40f1c4:	adc    dh,al
  40f1c6:	mov    ecx,0x54f83acc
  40f1cb:	arpl   WORD PTR [esi],cx
  40f1cd:	in     eax,dx
  40f1ce:	inc    esi
  40f1cf:	mov    ah,0x99
  40f1d1:	lods   eax,DWORD PTR ds:[esi]
  40f1d2:	mov    esi,0xbd629bba
  40f1d7:	mov    ch,0x1e
  40f1d9:	retf   0x4445
  40f1dc:	aad    0xe7
  40f1de:	push   ecx
  40f1df:	adc    DWORD PTR [edi+0x28],ebp
  40f1e2:	inc    ebp
  40f1e3:	sub    dl,BYTE PTR [edx]
  40f1e5:	or     ah,BYTE PTR [eax+edi*4-0x7b]
  40f1e9:	stos   DWORD PTR es:[edi],eax
  40f1ea:	ins    DWORD PTR es:[edi],dx
  40f1eb:	mov    edx,0x3d8fd101
  40f1f0:	adc    al,0x72
  40f1f2:	add    al,0xd9
  40f1f4:	push   esp
  40f1f5:	pop    ebx
  40f1f6:	pop    ecx
  40f1f7:	sahf   
  40f1f8:	push   ebp
  40f1f9:	bound  edx,QWORD PTR [edx+edx*1-0x56]
  40f1fd:	and    edi,ebx
  40f1ff:	loopne 0x40f1a4
  40f201:	lds    ecx,FWORD PTR [eax]
  40f203:	fist   WORD PTR ds:0x8a8358e
  40f209:	pushf  
  40f20a:	mov    ch,BYTE PTR [edi+0x2c7d2eef]
  40f210:	push   ebx
  40f211:	xchg   BYTE PTR [eax],al
  40f213:	enter  0x8e61,0x6c
  40f217:	test   BYTE PTR [ebx+0x65268236],ah
  40f21d:	push   edx
  40f21e:	sub    eax,0x644a3bcc
  40f223:	push   edi
  40f224:	jg     0x40f248
  40f226:	add    esp,ebp
  40f228:	mov    esi,DWORD PTR [ebp+0x2fed21d4]
  40f22e:	sbb    DWORD PTR [eax],esi
  40f230:	jmp    0x2e370f05
  40f235:	aam    0xb6
  40f237:	dec    ecx
  40f238:	ret    
  40f239:	aas    
  40f23a:	inc    edi
  40f23b:	jmp    DWORD PTR [ecx]
  40f23d:	stos   BYTE PTR es:[edi],al
  40f23e:	retf   0x812d
  40f241:	dec    ebp
  40f242:	xor    ah,BYTE PTR [edx+ebp*2+0x16]
  40f246:	mov    cs,WORD PTR [eax+0x45]
  40f249:	xchg   edx,eax
  40f24a:	fwait
  40f24b:	jecxz  0x40f2a1
  40f24d:	jmp    0x19fb:0x6e4643cb
  40f254:	mov    al,0xaf
  40f256:	pop    ebx
  40f257:	dec    esi
  40f258:	(bad)  
  40f259:	mov    al,ds:0x769d7ffa
  40f25e:	sahf   
  40f25f:	outs   dx,DWORD PTR ds:[esi]
  40f260:	jl     0x40f294
  40f262:	pop    ecx
  40f263:	loop   0x40f1e8
  40f265:	xor    cl,0x22
  40f268:	or     BYTE PTR [ebx+0x4f],0xba
  40f26c:	leave  
  40f26d:	pop    ds
  40f26e:	cli    
  40f26f:	cdq    
  40f270:	lods   eax,DWORD PTR ds:[esi]
  40f271:	push   edx
  40f272:	stos   BYTE PTR es:[edi],al
  40f273:	in     eax,dx
  40f274:	pop    ecx
  40f275:	mov    eax,ds:0xced1e902
  40f27a:	add    eax,0x22200cef
  40f27f:	dec    ecx
  40f280:	jno    0x40f2ff
  40f282:	mov    ss,ebp
  40f284:	jae    0x40f2a3
  40f286:	lock call 0xd6cd:0x1d903c9f
  40f28e:	xor    eax,0xa04e9735
  40f293:	mov    cl,0xa7
  40f295:	pop    edx
  40f296:	push   esp
  40f297:	and    DWORD PTR [edx+0x21e7b626],esi
  40f29d:	scas   eax,DWORD PTR es:[edi]
  40f29e:	cld    
  40f29f:	shl    BYTE PTR ds:0x936cfe67,1
  40f2a5:	addr16 (bad) 
  40f2a7:	adc    al,0x12
  40f2a9:	pop    ebx
  40f2aa:	inc    ebx
  40f2ab:	(bad)  
  40f2ac:	ret    
  40f2ad:	or     al,ah
  40f2af:	(bad)  
  40f2b1:	clc    
  40f2b2:	(bad)  
  40f2b3:	lahf   
  40f2b4:	fld    DWORD PTR [eax+0x3e]
  40f2b7:	and    al,BYTE PTR [edx+ebx*4-0x6b]
  40f2bb:	pushf  
  40f2bc:	inc    ecx
  40f2bd:	inc    ecx
  40f2be:	push   es
  40f2bf:	add    BYTE PTR [ecx],ch
  40f2c1:	or     edx,eax
  40f2c3:	mov    bl,0xf9
  40f2c5:	cli    
  40f2c6:	loop   0x40f308
  40f2c8:	add    BYTE PTR [edx-0x5e157b46],bl
  40f2ce:	sbb    BYTE PTR [esi],ch
  40f2d0:	aad    0xfd
  40f2d2:	pop    esp
  40f2d3:	sub    eax,0xafb10870
  40f2d8:	jp     0x40f355
  40f2da:	(bad)  
  40f2db:	adc    al,0x21
  40f2dd:	pusha  
  40f2de:	cmp    bh,BYTE PTR [eax+0x38e54844]
  40f2e4:	xchg   esp,eax
  40f2e5:	jo     0x40f322
  40f2e7:	mov    ecx,0x393eb3f7
  40f2ec:	add    WORD PTR [edi],dx
  40f2ef:	sbb    ch,BYTE PTR [eax]
  40f2f1:	dec    esp
  40f2f2:	xchg   edi,eax
  40f2f3:	mov    BYTE PTR [ebx],ch
  40f2f5:	in     al,dx
  40f2f6:	hlt    
  40f2f7:	xor    bl,dh
  40f2f9:	jo     0x40f2d5
  40f2fb:	or     ebx,DWORD PTR [ebx+0x35]
  40f2fe:	sub    al,BYTE PTR [eax+0x725cebf8]
  40f304:	jmp    0x40f338
  40f306:	mov    ds,WORD PTR [edi]
  40f308:	cmp    dh,BYTE PTR [ebp+0x7c]
  40f30b:	rcr    BYTE PTR [edx+ebp*2+0xe],1
  40f30f:	arpl   WORD PTR [ecx-0x64],dx
  40f312:	push   ebx
  40f313:	inc    ecx
  40f314:	dec    esp
  40f315:	hlt    
  40f316:	and    edi,DWORD PTR [ebp+0x1e8cbc28]
  40f31c:	leave  
  40f31d:	je     0x40f2af
  40f31f:	push   edx
  40f320:	mov    cl,0xf7
  40f322:	fnsave [ecx]
  40f324:	inc    eax
  40f325:	pop    ebp
  40f326:	push   edi
  40f327:	push   ebp
  40f328:	adc    eax,0xc4aa8be0
  40f32d:	stos   BYTE PTR es:[edi],al
  40f32e:	mov    dl,0xbe
  40f330:	dec    edx
  40f331:	pop    ds
  40f332:	jmp    0x9bdd:0xa107c786
  40f339:	stc    
  40f33a:	sbb    BYTE PTR [esi+0x54],0xbc
  40f33e:	push   ebp
  40f33f:	adc    esi,DWORD PTR [ecx]
  40f341:	lds    ecx,FWORD PTR [esi-0x61673d35]
  40f347:	mov    edx,0x31b3482e
  40f34c:	adc    dl,dl
  40f34e:	stc    
  40f34f:	and    ebx,edx
  40f351:	loop   0x40f39c
  40f353:	js     0x40f2f7
  40f355:	push   edx
  40f356:	popa   
  40f357:	add    DWORD PTR [edx],esi
  40f359:	sbb    ch,BYTE PTR [esi-0x81c9288]
  40f35f:	(bad)  
  40f360:	fdiv   DWORD PTR [esi+0x65]
  40f363:	jbe    0x40f366
  40f365:	sub    esi,edx
  40f367:	jno    0x40f354
  40f369:	rcl    DWORD PTR [edx],0x36
  40f36c:	or     BYTE PTR [ecx+0x3702a881],dh
  40f372:	aam    0x8c
  40f374:	inc    ebp
  40f375:	retf   0x73fe
  40f378:	stos   BYTE PTR es:[edi],al
  40f379:	jge    0x40f336
  40f37b:	or     eax,0x98e0ddff
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0xa71f723,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	daa    
  40f484:	adc    al,0xdb
  40f486:	pop    eax
  40f487:	ret    
  40f488:	adc    ch,BYTE PTR [eax+0xd]
  40f48b:	jo     0x40f4ad
  40f48d:	mov    ?,WORD PTR [edx-0x41967f8d]
  40f493:	jnp    0x40f44f
  40f495:	daa    
  40f496:	xlat   BYTE PTR cs:[ebx]
  40f498:	sub    eax,0x838d2435
  40f49d:	xchg   ecx,eax
  40f49e:	mov    ds,WORD PTR [esi]
  40f4a0:	hlt    
  40f4a1:	pop    ds
  40f4a2:	clc    
  40f4a3:	jne    0x40f50c
  40f4a5:	sub    eax,0xf26d3a57
  40f4aa:	sti    
  40f4ab:	and    ch,dh
  40f4ad:	scas   eax,DWORD PTR es:[edi]
  40f4ae:	dec    ebp
  40f4af:	xor    al,0xd7
  40f4b1:	sub    DWORD PTR ds:0xfcee90aa,esp
  40f4b7:	sbb    eax,0x58670359
  40f4bc:	lock loope 0x40f50d
  40f4bf:	nop
  40f4c0:	add    bl,BYTE PTR [edx]
  40f4c2:	mov    dl,0x2
  40f4c4:	pushf  
  40f4c5:	nop
  40f4c6:	and    eax,0xf63c9aff
  40f4cb:	or     esp,esp
  40f4cd:	jecxz  0x40f535
  40f4cf:	rcl    DWORD PTR ds:0x60750988,1
  40f4d5:	dec    ebp
  40f4d6:	mov    edi,0x5976c361
  40f4db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4dc:	in     eax,0xb4
  40f4de:	dec    ecx
  40f4df:	and    BYTE PTR [ebx+0x3f44920b],cl
  40f4e5:	push   ebp
  40f4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e7:	adc    BYTE PTR [ecx-0x64],al
  40f4ea:	in     eax,0xeb
  40f4ec:	and    al,bh
  40f4ee:	or     BYTE PTR [edi+edi*1-0x26],ah
  40f4f2:	fistp  WORD PTR [edx+0x75]
  40f4f5:	mov    esp,0xeac82520
  40f4fa:	fwait
  40f4fb:	arpl   WORD PTR [eax+ebp*8+0x103ec6fe],ax
  40f502:	mov    al,ds:0x50fb6264
  40f507:	lahf   
  40f508:	sub    DWORD PTR [esi],ecx
  40f50a:	jecxz  0x40f4e7
  40f50c:	fadd   st(4),st
  40f50e:	aaa    
  40f50f:	and    al,BYTE PTR [edi+0x9816a01]
  40f515:	lea    ebx,[eiz*4+0xc0fe542]
  40f51c:	out    0x2d,eax
  40f51e:	mov    ds:0x2d838446,eax
  40f523:	and    DWORD PTR [edi+0x36841a4c],edi
  40f529:	sub    edx,DWORD PTR [eax+0x1f]
  40f52c:	push   eax
  40f52d:	icebp  
  40f52e:	sub    eax,0xa399d365
  40f533:	adc    eax,0x45b17d4d
  40f538:	mov    dh,0x45
  40f53a:	adc    eax,DWORD PTR ds:0x9721a56d
  40f540:	jecxz  0x40f596
  40f542:	xchg   esi,eax
  40f543:	loopne 0x40f4f5
  40f545:	lods   eax,DWORD PTR ds:[esi]
  40f546:	mov    bh,0xa
  40f548:	push   esp
  40f549:	xchg   BYTE PTR [ecx],bl
  40f54b:	adc    BYTE PTR [ebp-0x47768af8],dl
  40f551:	mov    ch,0x6a
  40f553:	xchg   ecx,eax
  40f554:	dec    ecx
  40f555:	jae    0x40f5ae
  40f557:	xchg   DWORD PTR [edx-0x407ac465],edi
  40f55d:	mov    ds:0xd6ffe048,al
  40f562:	out    dx,al
  40f563:	mov    dl,0x4d
  40f565:	dec    ebx
  40f566:	ficomp DWORD PTR [ecx]
  40f568:	out    0xd0,eax
  40f56a:	dec    esp
  40f56b:	das    
  40f56c:	jmp    0x9ea7:0x9a8e9615
  40f573:	sub    eax,ebx
  40f575:	xlat   BYTE PTR ds:[ebx]
  40f576:	pop    es
  40f577:	nop
  40f578:	and    DWORD PTR [ebp+0x4a],0xc3a7ae72
  40f57f:	mov    fs,WORD PTR [edx]
  40f581:	pop    esp
  40f582:	jb     0x40f52a
  40f584:	pop    ebx
  40f585:	and    BYTE PTR [edi+0x46],0x93
  40f589:	hlt    
  40f58a:	out    0x43,al
  40f58c:	repnz arpl WORD PTR [edi+0xe99fc06],di
  40f593:	jo     0x40f60d
  40f595:	jmp    0x40f54b
  40f597:	ins    BYTE PTR es:[edi],dx
  40f598:	lds    esp,FWORD PTR [ebp+0x76fa6071]
  40f59e:	sbb    al,BYTE PTR [edx-0x76]
  40f5a1:	mov    edi,es
  40f5a3:	mov    ds:0x270db2bd,al
  40f5a8:	jle    0x40f52a
  40f5aa:	xor    eax,0x7663e178
  40f5af:	sub    al,0x97
  40f5b1:	inc    esp
  40f5b2:	cmp    edx,DWORD PTR [edi+edi*8+0x5d]
  40f5b6:	add    dl,BYTE PTR [esi+ecx*4-0x3c]
  40f5ba:	scas   al,BYTE PTR es:[edi]
  40f5bb:	es mov ch,0xa0
  40f5be:	xchg   BYTE PTR ds:0x41ab865,bh
  40f5c4:	in     eax,dx
  40f5c5:	mov    ds:0xb12c1286,al
  40f5ca:	and    BYTE PTR [esi+0x5047efa3],bh
  40f5d0:	popf   
  40f5d1:	adc    dl,BYTE PTR [ebp-0x2b]
  40f5d4:	sub    al,0xcb
  40f5d6:	mov    eax,0xf5ee86a7
  40f5db:	adc    BYTE PTR [eax+0x3b],dl
  40f5de:	ret    0x1b09
  40f5e1:	jl     0x40f5f8
  40f5e3:	sti    
  40f5e4:	sbb    cl,dh
  40f5e6:	add    DWORD PTR [ebx],ecx
  40f5e8:	aam    0xd7
  40f5ea:	fld    TBYTE PTR [esi+ebp*2+0x1f]
  40f5ee:	push   0xffffff9b
  40f5f0:	or     eax,0x590615ea
  40f5f5:	inc    ebp
  40f5f6:	xchg   edi,eax
  40f5f7:	cwde   
  40f5f8:	pop    ecx
  40f5f9:	sub    esp,DWORD PTR [ecx]
  40f5fb:	mov    esi,0xaf0460a
  40f600:	jp     0x40f613
  40f602:	das    
  40f603:	cld    
  40f604:	fist   WORD PTR [edi-0x31]
  40f607:	leave  
  40f608:	mov    bh,0x8a
  40f60a:	fs pusha 
  40f60c:	cmc    
  40f60d:	in     eax,0x7
  40f60f:	inc    edx
  40f610:	sar    DWORD PTR [edi+0x21a1e749],0xe2
  40f617:	test   al,0x71
  40f619:	int3   
  40f61a:	fstp   DWORD PTR [ebp+edx*8+0x6af675a8]
  40f621:	pushf  
  40f622:	adc    dl,BYTE PTR [ecx+0x20]
  40f625:	pmuludq mm4,mm4
  40f628:	dec    esi
  40f629:	lods   al,BYTE PTR ds:[esi]
  40f62a:	push   ds
  40f62b:	xchg   DWORD PTR [ecx],edx
  40f62d:	aad    0x88
  40f62f:	in     al,dx
  40f630:	xchg   edx,eax
  40f631:	xchg   eax,eax
  40f633:	mov    eax,0x7599b3db
  40f638:	push   0xffffff8b
  40f63a:	push   ecx
  40f63b:	mov    dh,BYTE PTR [esi+edx*1+0x7f777889]
  40f642:	pop    ebx
  40f643:	sti    
  40f644:	jecxz  0x40f633
  40f646:	mov    ebx,0x191cf5f4
  40f64b:	shl    BYTE PTR [edi-0x12],cl
  40f64e:	sbb    al,0xd0
  40f650:	jne    0x40f673
  40f652:	dec    ebx
  40f653:	stos   DWORD PTR es:[edi],eax
  40f654:	or     DWORD PTR [esi],ecx
  40f656:	jae    0x40f65a
  40f658:	mov    al,0xce
  40f65a:	ret    0x24a0
  40f65d:	xchg   esi,eax
  40f65e:	mov    esi,eax
  40f660:	sub    DWORD PTR [eax],ecx
  40f662:	push   edx
  40f663:	xlat   BYTE PTR ds:[ebx]
  40f664:	mov    eax,ds:0xe28e70fe
  40f669:	mov    ds:0x3cd20a36,al
  40f66e:	xchg   ebp,eax
  40f66f:	sti    
  40f670:	ret    
  40f671:	mov    dl,0xec
  40f673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f674:	or     ch,0xb5
  40f677:	inc    ebp
  40f678:	stos   BYTE PTR es:[edi],al
  40f679:	lods   eax,DWORD PTR ds:[esi]
  40f67a:	and    DWORD PTR [esi],esp
  40f67c:	js     0x40f616
  40f67e:	xor    edx,DWORD PTR [ebx]
  40f680:	pusha  
  40f681:	cmc    
  40f682:	mov    ah,0x70
  40f684:	and    eax,0x970259c9
  40f689:	cdq    
  40f68a:	jmp    0xabf6b0ae
  40f68f:	aam    0xf0
  40f691:	(bad)  
  40f692:	and    bl,dh
  40f694:	and    BYTE PTR [edx],bl
  40f696:	int3   
  40f697:	pop    ebx
  40f698:	lea    edi,[ecx+0x631f00a6]
  40f69e:	push   ebp
  40f69f:	cwde   
  40f6a0:	daa    
  40f6a1:	test   eax,ebx
  40f6a3:	pop    ss
  40f6a4:	(bad)
  40f6a7:	xor    al,0xf4
  40f6a9:	icebp  
  40f6aa:	push   es
  40f6ab:	retf   0x8c14
  40f6ae:	pop    edi
  40f6af:	enter  0x9bc8,0xa1
  40f6b3:	test   al,0x1f
  40f6b5:	sbb    eax,0xe00a81b9
  40f6ba:	push   0x3f56ae0
  40f6bf:	out    0xb9,al
  40f6c1:	push   es
  40f6c2:	test   esp,0x404806b
  40f6c8:	jl     0x40f719
  40f6ca:	clc    
  40f6cb:	ret    
  40f6cc:	adc    esp,DWORD PTR [eax]
  40f6ce:	jo     0x40f69e
  40f6d0:	pop    esp
  40f6d1:	nop
  40f6d2:	fld    DWORD PTR [ebx+eax*1-0x624c2d58]
  40f6d9:	jmp    0xc594:0x46f7564f
  40f6e0:	push   ebx
  40f6e1:	jae    0x40f73c
  40f6e3:	ins    BYTE PTR es:[edi],dx
  40f6e4:	fucom  st(2)
  40f6e6:	or     ch,ah
  40f6e8:	repz sti 
  40f6ea:	icebp  
  40f6eb:	mov    edi,0x1cb31203
  40f6f0:	mov    bl,0xe1
  40f6f2:	mov    DWORD PTR [eax+0x69],eax
  40f6f5:	scas   eax,DWORD PTR es:[edi]
  40f6f6:	inc    ecx
  40f6f7:	addr16 enter 0x37b5,0x6a
  40f6fc:	mov    dl,0x5f
  40f6fe:	push   eax
  40f6ff:	gs stos DWORD PTR es:[edi],eax
  40f701:	ins    BYTE PTR es:[edi],dx
  40f702:	mov    DWORD PTR [ebx],edx
  40f704:	mov    ds:0xca864a46,eax
  40f709:	dec    ebp
  40f70a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f70b:	mov    ebx,0xde3affd7
  40f710:	xchg   esp,eax
  40f711:	and    DWORD PTR [edx+edi*1],ebx
  40f714:	jge    0x40f779
  40f716:	mov    ds:0x8c1cc650,al
  40f71b:	enter  0x73dc,0x4f
  40f71f:	leave  
  40f720:	lods   al,BYTE PTR ds:[esi]
  40f721:	fist   WORD PTR [esi+eiz*8-0x1c]
  40f725:	adc    al,0xbc
  40f727:	retf   
  40f728:	push   0x98a2d1f7
  40f72d:	(bad)  
  40f72e:	sub    bh,BYTE PTR [edi+0x54]
  40f731:	xor    ecx,edi
  40f733:	inc    ebx
  40f734:	sti    
  40f735:	test   eax,0xbba58ed
  40f73a:	mov    ah,bh
  40f73c:	xchg   ebx,eax
  40f73d:	xchg   DWORD PTR [ebp+0x4f8a7c0d],eax
  40f743:	and    bl,BYTE PTR [edi+0x6ca587b3]
  40f749:	or     BYTE PTR fs:[esi],bh
  40f74c:	loop   0x40f754
  40f74e:	fwait
  40f74f:	daa    
  40f750:	ret    
  40f751:	dec    edi
  40f752:	sub    DWORD PTR [edi],edi
  40f754:	and    dh,BYTE PTR [edi+0x59995124]
  40f75a:	jle    0x40f772
  40f75c:	nop
  40f75d:	rol    DWORD PTR [edi-0x65],cl
  40f760:	push   eax
  40f761:	ds sbb al,0xc2
  40f764:	mov    ah,0xae
  40f766:	call   0x551d:0xfe87fa4a
  40f76d:	xor    BYTE PTR [ebx-0x4],ah
  40f770:	shr    BYTE PTR [ebx-0x4a],0x4d
  40f774:	arpl   WORD PTR [edx+esi*8-0x1c],di
  40f778:	dec    ecx
  40f779:	or     eax,0xd310d969
  40f77e:	fs in  al,0xc3
  40f781:	scas   eax,DWORD PTR es:[edi]
  40f782:	push   esi
  40f783:	push   ebx
  40f784:	dec    esp
  40f785:	call   0xbaf8ee52
  40f78a:	xchg   DWORD PTR [edx-0x7a5e956b],edi
  40f790:	inc    esp
  40f791:	stos   DWORD PTR es:[edi],eax
  40f792:	cmp    BYTE PTR [edi],0x44
  40f795:	dec    ecx
  40f796:	div    ah
  40f798:	cmp    al,0x23
  40f79a:	mov    bh,0x3b
  40f79c:	shl    dh,cl
  40f79e:	inc    esi
  40f79f:	dec    edi
  40f7a0:	loope  0x40f81f
  40f7a2:	shl    BYTE PTR [eax+0x2fe9d160],1
  40f7a8:	pop    ecx
  40f7a9:	xlat   BYTE PTR ds:[ebx]
  40f7aa:	adc    BYTE PTR ds:0x83aa3b7f,0x44
  40f7b1:	jle    0x40f75c
  40f7b3:	adc    esi,edx
  40f7b5:	add    al,0x53
  40f7b7:	cmp    DWORD PTR [ebx],ebp
  40f7b9:	enter  0x752,0x63
  40f7bd:	mov    al,0xa9
  40f7bf:	xlat   BYTE PTR ds:[ebx]
  40f7c0:	sahf   
  40f7c1:	push   ss
  40f7c2:	inc    eax
  40f7c3:	inc    eax
  40f7c4:	cld    
  40f7c5:	out    dx,eax
  40f7c6:	jmp    0x8613cf82
  40f7cb:	data16 sti 
  40f7cd:	mov    BYTE PTR [ebx+0x1b886a4b],bl
  40f7d3:	lods   al,BYTE PTR ds:[esi]
  40f7d4:	add    dh,0x18
  40f7d7:	pusha  
  40f7d8:	mov    bh,0x8d
  40f7da:	inc    esp
  40f7db:	adc    ebx,DWORD PTR [ecx-0x3eaa2c19]
  40f7e1:	sar    ebp,1
  40f7e3:	lods   eax,DWORD PTR ds:[esi]
  40f7e4:	sub    al,0x85
  40f7e6:	xor    al,0x68
  40f7e8:	es gs ret 0x4189
  40f7ed:	lods   eax,DWORD PTR ds:[esi]
  40f7ee:	cmc    
  40f7ef:	aaa    
  40f7f0:	cwde   
  40f7f1:	ror    DWORD PTR [edx-0x78],0x5c
  40f7f5:	ja     0x40f7cb
  40f7f7:	fnsave [ebp+0x25d0aef2]
  40f7fd:	iret   
  40f7fe:	in     eax,0xc
  40f800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f801:	and    ebx,edx
  40f803:	stos   DWORD PTR es:[edi],eax
  40f804:	pop    ss
  40f805:	mov    esp,0x26363ef1
  40f80a:	add    ah,ch
  40f80c:	xchg   esi,eax
  40f80e:	out    0x80,al
  40f810:	in     eax,0xa2
  40f812:	xlat   BYTE PTR ds:[ebx]
  40f813:	(bad)  
  40f814:	lock mov edi,0x3cb8c72b
  40f81a:	xchg   DWORD PTR [ecx],edi
  40f81c:	out    0x49,al
  40f81e:	cld    
  40f81f:	mov    gs,WORD PTR [ebx-0x1167c380]
  40f825:	sbb    BYTE PTR [ecx-0x7c],0xcd
  40f829:	arpl   WORD PTR [esi-0x75b171f5],di
  40f82f:	ins    DWORD PTR es:[edi],dx
  40f830:	cmp    eax,0x2a06a9b3
  40f835:	or     al,0xe6
  40f837:	inc    edx
  40f838:	nop
  40f839:	or     eax,0x8b6b3cfb
  40f83e:	mov    ecx,0xc611d57
  40f843:	xchg   DWORD PTR [esi-0x3c],ecx
  40f846:	mov    ecx,0x5bf87ab7
  40f84b:	mov    ah,0x5
  40f84d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f84e:	in     eax,dx
  40f84f:	call   0xeefe6a72
  40f854:	mov    eax,0x2ab5d88e
  40f859:	scas   eax,DWORD PTR es:[edi]
  40f85a:	ss pushf 
  40f85c:	shl    DWORD PTR ds:0xcc32e204,cl
  40f862:	inc    ecx
  40f863:	outs   dx,BYTE PTR ds:[esi]
  40f864:	jns    0x40f8ca
  40f866:	adc    al,0x27
  40f868:	outs   dx,DWORD PTR ds:[esi]
  40f869:	push   ss
  40f86a:	add    al,BYTE PTR [ebp+ebx*8+0x25432ae1]
  40f871:	je     0x40f7f7
  40f873:	push   0xc4945573
  40f878:	mov    edi,0x199d05c4
  40f87d:	and    BYTE PTR [ebx+0x5a8647fe],0xc2
  40f884:	jmp    0x6a4283ec
  40f889:	push   ecx
  40f88a:	dec    edx
  40f88b:	int    0x2c
  40f88d:	xchg   esi,eax
  40f88e:	mov    cl,0xe
  40f890:	xlat   BYTE PTR ds:[ebx]
  40f891:	addr16 cmp al,0xee
  40f894:	xlat   BYTE PTR ds:[ebx]
  40f895:	setge  BYTE PTR [edx]
  40f898:	push   ebx
  40f899:	inc    esi
  40f89a:	inc    ebx
  40f89b:	fs int 0xbd
  40f89e:	dec    eax
  40f89f:	icebp  
  40f8a0:	int    0x7b
  40f8a2:	les    edx,FWORD PTR [ebx]
  40f8a4:	call   0xf57f6f8a
  40f8a9:	in     al,0xa9
  40f8ab:	test   eax,0x1a058758
  40f8b0:	or     BYTE PTR [edx],ch
  40f8b2:	pop    esp
  40f8b3:	stos   BYTE PTR es:[edi],al
  40f8b4:	lock hlt 
  40f8b6:	cwde   
  40f8b7:	in     eax,0xd6
  40f8b9:	mov    ebx,0xbe3e23bd
  40f8be:	(bad)  
  40f8bf:	addr16 mov ds:0xbadf,eax
  40f8c3:	loop   0x40f85d
  40f8c5:	jmp    0xbba8762e
  40f8ca:	mov    al,0x3c
  40f8cc:	(bad)  
  40f8cd:	pop    eax
  40f8ce:	push   cs
  40f8cf:	hlt    
  40f8d0:	test   bl,dh
  40f8d2:	(bad)  
  40f8d3:	loopne 0x40f899
  40f8d5:	mov    ch,0xe6
  40f8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d8:	push   edi
  40f8d9:	jne    0x40f87c
  40f8db:	add    edx,DWORD PTR [edi-0x40ecb76b]
  40f8e1:	clc    
  40f8e2:	jmp    DWORD PTR [ebx-0x25df99e5]
  40f8e8:	(bad)  
  40f8e9:	add    al,0x35
  40f8eb:	scas   eax,DWORD PTR es:[edi]
  40f8ec:	xor    esp,edi
  40f8ee:	out    0xb2,eax
  40f8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f1:	inc    ecx
  40f8f2:	sbb    BYTE PTR [edx+0x7f43ba6e],ah
  40f8f8:	rol    bl,cl
  40f8fa:	daa    
  40f8fb:	cs popf 
  40f8fd:	mov    ds:0x747d1099,al
  40f902:	sbb    DWORD PTR [eax+0x67],ebp
  40f905:	jne    0x40f8fb
  40f907:	jne    0x40f922
  40f909:	push   edx
  40f90a:	cwde   
  40f90b:	add    BYTE PTR [ebx-0x32],bl
  40f90e:	mov    al,ds:0x63eacae8
  40f913:	cmp    eax,0x177bf7b3
  40f918:	jns    0x40f988
  40f91a:	rol    BYTE PTR [esi-0x50],cl
  40f91d:	xchg   ebp,eax
  40f91e:	pusha  
  40f91f:	pop    ds
  40f920:	enter  0xb502,0xc3
  40f924:	mov    dh,0xb3
  40f926:	hlt    
  40f927:	inc    esp
  40f928:	fsub   QWORD PTR ds:0x30bec974
  40f92e:	retf   
  40f92f:	mov    BYTE PTR [ebp+0xb],dh
  40f932:	je     0x40f8e4
  40f934:	add    al,BYTE PTR [eax-0x54]
  40f937:	stos   DWORD PTR es:[edi],eax
  40f938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f939:	out    dx,eax
  40f93a:	ja     0x40f8d9
  40f93c:	cld    
  40f93d:	(bad)  
  40f93e:	mul    DWORD PTR [ebx-0x5d]
  40f941:	test   al,0x5c
  40f943:	pushf  
  40f944:	(bad)  [esi+0x1f]
  40f947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f948:	jmp    0x4c86:0x5a20375f
  40f94f:	outs   dx,BYTE PTR ds:[esi]
  40f950:	add    ah,BYTE PTR [edi]
  40f952:	fcomp  QWORD PTR [edi+0x959124f]
  40f958:	xchg   esp,eax
  40f959:	push   0xf3a6f4e5
  40f95e:	push   ss
  40f95f:	adc    esp,DWORD PTR [eax-0x18]
  40f962:	mov    esp,0xb0c75bb8
  40f967:	mov    ch,0x51
  40f969:	xor    al,0x3d
  40f96b:	or     DWORD PTR [eax+0x390a44b],ecx
  40f971:	xor    al,0x9
  40f973:	fistp  QWORD PTR [ecx]
  40f975:	add    eax,0x3a4ee39b
  40f97a:	xchg   edi,eax
  40f97b:	ss mov dh,0x1f
  40f97e:	mov    ecx,0x5b5d6ed3
  40f983:	call   0xe1bd876d
  40f988:	and    eax,0x1b566c0f
  40f98d:	sub    esi,DWORD PTR gs:[ebx]
  40f990:	or     BYTE PTR [eax+0x41],al
  40f993:	xchg   BYTE PTR [ecx+edi*8+0x25],dh
  40f997:	or     esi,DWORD PTR [ebp+esi*2-0x44]
  40f99b:	repnz xor al,0x1f
  40f99e:	inc    eax
  40f99f:	mov    al,ds:0x7dcd2509
  40f9a4:	test   BYTE PTR [esi+esi*2+0x48112f5a],0x86
  40f9ac:	inc    ecx
  40f9ad:	xor    bl,BYTE PTR [esi-0x71c72147]
  40f9b3:	jge    0x40fa08
  40f9b5:	or     eax,DWORD PTR [edi+0x6fb1162b]
  40f9bb:	mov    edi,DWORD PTR [ebp+0x74]
  40f9be:	jp     0x40fa0e
  40f9c0:	icebp  
  40f9c1:	pop    edi
  40f9c2:	dec    edx
  40f9c3:	jo     0x40f9a2
  40f9c5:	rol    BYTE PTR [edi+0x7d],0x93
  40f9c9:	inc    eax
  40f9ca:	xor    ebx,eax
  40f9cc:	push   ebx
  40f9cd:	out    0x78,eax
  40f9cf:	test   al,0xa3
  40f9d1:	std    
  40f9d2:	mov    edi,DWORD PTR [eax+0x7e]
  40f9d5:	iret   
  40f9d6:	and    ebp,DWORD PTR [ecx-0x1e]
  40f9d9:	sbb    al,0x37
  40f9db:	test   eax,0x10449e05
  40f9e0:	call   0x4aa3982a
  40f9e5:	outs   dx,BYTE PTR ds:[esi]
  40f9e6:	clc    
  40f9e7:	add    edx,ecx
  40f9e9:	ins    DWORD PTR es:[edi],dx
  40f9ea:	jae    0x40fa4d
  40f9ec:	sub    BYTE PTR [ebp+0x52ab8275],dh
  40f9f2:	add    BYTE PTR [ecx+ebx*4+0x7ecb73e3],ch
  40f9f9:	sahf   
  40f9fa:	addr16 shl ch,1
  40f9fd:	push   edx
  40f9fe:	pop    ds
  40f9ff:	dec    edx
  40fa00:	dec    esp
  40fa01:	inc    esi
  40fa02:	xor    al,0x7e
  40fa04:	push   esp
  40fa05:	inc    ebx
  40fa06:	push   edi
  40fa07:	(bad)  
  40fa09:	push   esi
  40fa0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa0b:	cmc    
  40fa0c:	mov    DWORD PTR [eax-0x54],ecx
  40fa0f:	int3   
  40fa10:	jge    0x40fa0b
  40fa12:	mov    edx,0x2e74e1f1
  40fa17:	stos   DWORD PTR es:[edi],eax
  40fa18:	cmp    edi,DWORD PTR [ebp+0x4b8584d1]
  40fa1e:	sbb    DWORD PTR [ebp-0x68],0xffffffef
  40fa22:	inc    ebp
  40fa23:	out    0x92,eax
  40fa25:	(bad)  
  40fa26:	hlt    
  40fa27:	(bad)  
  40fa28:	push   ebp
  40fa29:	xor    ecx,DWORD PTR [edx-0x1a01c98a]
  40fa2f:	pop    edx
  40fa30:	mov    cl,0x83
  40fa32:	push   0x18
  40fa34:	fs into 
  40fa36:	inc    ecx
  40fa37:	lock pop esp
  40fa39:	cmp    edi,DWORD PTR [esi]
  40fa3b:	jge    0x40fa19
  40fa3d:	aaa    
  40fa3e:	jge    0x40f9c1
  40fa40:	into   
  40fa41:	mov    esi,edi
  40fa43:	loope  0x40fa33
  40fa45:	sub    al,0xb1
  40fa47:	dec    ecx
  40fa48:	and    esp,ebp
  40fa4a:	push   0x71221c52
  40fa4f:	clc    
  40fa50:	neg    ch
  40fa52:	out    dx,al
  40fa53:	cmc    
  40fa54:	xchg   esp,eax
  40fa55:	sbb    esi,DWORD PTR [esp+edx*2+0x1060807e]
  40fa5c:	add    cl,cl
  40fa5e:	jne    0x40fa08
  40fa60:	mov    gs:0x90b73b12,al
  40fa66:	lahf   
  40fa67:	sub    eax,0x47637e6d
  40fa6c:	call   0xeca2:0x53bb4dea
  40fa73:	sbb    eax,0x7075a1a0
  40fa78:	adc    edi,DWORD PTR [ebx]
  40fa7a:	mov    edx,0xb49e56ed
  40fa7f:	or     DWORD PTR [edi+0x9],ebx
  40fa82:	push   edx
  40fa83:	icebp  
  40fa84:	push   ds
  40fa85:	test   DWORD PTR [edi-0x73],edi
  40fa88:	and    bh,BYTE PTR [eax]
  40fa8a:	fadd   QWORD PTR [ebx+0x433402fc]
  40fa90:	(bad)  
  40fa91:	lock (bad) [esp+0x26]
  40fa96:	mov    ch,0x88
  40fa98:	jno    0x40fa2a
  40fa9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa9b:	scas   al,BYTE PTR es:[edi]
  40fa9c:	pop    edx
  40fa9d:	nop
  40fa9e:	sbb    ebp,DWORD PTR [esi]
  40faa0:	mov    cl,0xdb
  40faa2:	int    0x42
  40faa4:	dec    ecx
  40faa5:	xchg   ecx,eax
  40faa6:	cmp    DWORD PTR [esi-0x5f],esi
  40faa9:	xchg   esi,eax
  40faaa:	push   cs
  40faab:	gs pop ds
  40faad:	call   0x5b14cb2a
  40fab2:	mov    WORD PTR [esi-0x6e84c46f],?
  40fab8:	xor    al,0xf0
  40faba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fabb:	les    edi,FWORD PTR [eax+0x10]
  40fabe:	retf   0x398c
  40fac1:	and    al,0x1f
  40fac3:	cli    
  40fac4:	retf   
  40fac5:	clc    
  40fac6:	xor    BYTE PTR [ebx+ebp*8+0x31],bh
  40faca:	cmp    esi,DWORD PTR [esi-0x1e]
  40facd:	call   DWORD PTR [ebx+0x9]
  40fad0:	sub    eax,0x72f32981
  40fad5:	(bad)  
  40fad7:	iret   
  40fad8:	sub    BYTE PTR [ebx],cl
  40fada:	push   0xffffffed
  40fadc:	cmp    DWORD PTR cs:[eax-0x2adc2df],0xffffffe8
  40fae4:	inc    eax
  40fae5:	es jg  0x40fb53
  40fae8:	mov    dl,0x47
  40faea:	lods   al,BYTE PTR ds:[esi]
  40faeb:	fcomp  st(6)
  40faed:	cdq    
  40faee:	pop    ebp
  40faef:	jo     0x40fa87
  40faf1:	xchg   esp,eax
  40faf2:	in     al,0x7b
  40faf4:	jmp    0x3938:0x64ba2a9e
  40fafb:	fiadd  DWORD PTR [esi]
  40fafd:	pop    ecx
  40fafe:	add    al,0x11
  40fb00:	push   cs
  40fb01:	mov    ah,cl
  40fb03:	fs cdq 
  40fb05:	cdq    
  40fb06:	jne    0x40fb46
  40fb08:	pushf  
  40fb09:	jae    0x40fb33
  40fb0b:	out    dx,eax
  40fb0c:	sar    DWORD PTR [ebx+0x21],cl
  40fb0f:	sbb    eax,0x60f4a55d
  40fb14:	and    al,0xfd
  40fb16:	(bad)  
  40fb17:	xchg   esp,eax
  40fb18:	mov    ds:0x5cb891ee,al
  40fb1d:	dec    esp
  40fb1e:	mov    bh,0xd6
  40fb20:	popa   
  40fb21:	dec    eax
  40fb22:	js     0x40fb20
  40fb24:	icebp  
  40fb25:	test   dh,cl
  40fb27:	sub    al,al
  40fb29:	fcomp  QWORD PTR [ebx-0x51a19465]
  40fb2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb30:	mov    eax,ds:0xbf18767d
  40fb35:	sub    ebp,DWORD PTR [edx]
  40fb37:	addr16 pop esi
  40fb39:	lahf   
  40fb3a:	sbb    ebx,DWORD PTR [edx+0x26aa2ea2]
  40fb40:	stos   BYTE PTR es:[edi],al
  40fb41:	rcl    DWORD PTR [esi-0x22],1
  40fb44:	cwde   
  40fb45:	daa    
  40fb46:	enter  0x590f,0x3d
  40fb4a:	sar    dh,cl
  40fb4c:	mov    cx,0x90ed
  40fb50:	pop    ecx
  40fb51:	mov    ecx,0x99961f87
  40fb56:	xor    BYTE PTR [esi+0x5f],dl
  40fb59:	loope  0x40fbbe
  40fb5b:	ja     0x40fb0e
  40fb5d:	adc    DWORD PTR [ebp-0xe],ecx
  40fb60:	inc    esp
  40fb61:	(bad)  
  40fb62:	inc    ebp
  40fb63:	fdiv   st,st(1)
  40fb65:	das    
  40fb66:	xor    BYTE PTR [esi+0x29],ch
  40fb69:	sti    
  40fb6a:	jnp    0x40fb17
  40fb6c:	push   ebp
  40fb6d:	aas    
  40fb6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb6f:	shl    BYTE PTR [edx],cl
  40fb71:	inc    edi
  40fb72:	dec    eax
  40fb73:	lods   eax,DWORD PTR ds:[esi]
  40fb74:	add    bh,BYTE PTR [eax-0x4fdabaf2]
  40fb7a:	mov    esi,edi
  40fb7c:	fldcw  WORD PTR [edx]
  40fb7e:	or     edi,DWORD PTR [edi-0x5089d5fb]
  40fb84:	fild   WORD PTR [edi+0x684d3a6]
  40fb8a:	popa   
  40fb8b:	call   0x48736950
  40fb90:	or     dh,al
  40fb92:	add    dl,BYTE PTR [eax+0x6a]
  40fb95:	aaa    
  40fb96:	or     eax,0x2db1f9dd
  40fb9b:	call   0xd41f9ed3
  40fba0:	sub    DWORD PTR [eax+0x2],edx
  40fba3:	scas   al,BYTE PTR es:[edi]
  40fba4:	push   edx
  40fba5:	pop    es
  40fba6:	test   al,0x64
  40fba8:	mov    ds:0x220e1a54,eax
  40fbad:	stos   BYTE PTR es:[edi],al
  40fbae:	mov    cl,0x99
  40fbb0:	pop    ebx
  40fbb1:	out    0xf7,eax
  40fbb3:	mov    al,0xf7
  40fbb5:	mov    WORD PTR [edx],?
  40fbb7:	or     al,0xcf
  40fbb9:	jb     0x40fb94
  40fbbb:	lea    ebp,[edx+0x3]
  40fbbe:	jmp    0xa32b:0x9b456ac5
  40fbc5:	cmp    DWORD PTR [ecx+0x15c9370a],0x35
  40fbcc:	(bad)  
  40fbcd:	sbb    ch,BYTE PTR [edx]
  40fbcf:	cmp    cx,WORD PTR [bp+si]
  40fbd3:	sar    ah,1
  40fbd5:	push   ebp
  40fbd6:	arpl   WORD PTR [ebx-0xd],si
  40fbd9:	mov    DWORD PTR [eax-0x42],edx
  40fbdc:	rol    BYTE PTR [edi],cl
  40fbde:	push   0x50
  40fbe0:	dec    ebp
  40fbe1:	sub    edx,esp
  40fbe3:	fsubr  QWORD PTR [eax+0x22769895]
  40fbe9:	fdivr  DWORD PTR [ebp-0x77be9e83]
  40fbef:	pop    ecx
  40fbf0:	jo     0x40fba6
  40fbf2:	stc    
  40fbf3:	into   
  40fbf4:	call   0x16d7:0xd8ebf785
  40fbfb:	jecxz  0x40fbaa
  40fbfd:	and    eax,DWORD PTR [eax-0xf8d42b9]
  40fc03:	std    
  40fc04:	jnp    0x40fb94
  40fc06:	jno    0x40fbad
  40fc08:	retf   
  40fc09:	mov    ecx,DWORD PTR [edx+edx*8+0xa6f5258]
  40fc10:	clc    
  40fc11:	and    ebp,eax
  40fc13:	and    esi,esi
  40fc15:	repnz sbb BYTE PTR [ecx],cl
  40fc18:	or     BYTE PTR [edx-0x59],dl
  40fc1b:	out    dx,eax
  40fc1c:	fimul  WORD PTR [ebx+0x1093eecb]
  40fc22:	xor    ah,0x52
  40fc25:	dec    BYTE PTR [edx*4+0x601d173b]
  40fc2c:	pushf  
  40fc2d:	mov    ds:0xb0ac84c,al
  40fc32:	inc    eax
  40fc33:	inc    esi
  40fc34:	jbe    0x40fcb5
  40fc36:	inc    ebx
  40fc37:	sub    eax,0x847194f1
  40fc3c:	mov    al,BYTE PTR [edi+0x20]
  40fc3f:	mov    ebx,0x9c14c8ea
  40fc44:	call   0x414a25a7
  40fc49:	and    ch,dl
  40fc4b:	mov    ch,0xa6
  40fc4d:	push   0xe7e8d65a
  40fc52:	jge    0x40fbf0
  40fc54:	sub    ecx,0xffffffa3
  40fc57:	mov    eax,ds:0x9bec9249
  40fc5c:	arpl   WORD PTR ds:0xa39a9e67,dx
  40fc62:	mov    bl,0x65
  40fc64:	inc    esi
  40fc65:	adc    edi,esp
  40fc67:	jno    0x40fc38
  40fc69:	dec    esi
  40fc6a:	fwait
  40fc6b:	mov    dl,0xbe
  40fc6d:	pusha  
  40fc6e:	pop    eax
  40fc6f:	icebp  
  40fc70:	cmc    
  40fc71:	xlat   BYTE PTR ds:[ebx]
  40fc72:	ins    DWORD PTR es:[edi],dx
  40fc73:	imul   edi,DWORD PTR [esi-0x75f33892],0xffffffbf
  40fc7a:	mov    ds:0x6ffe0243,eax
  40fc7f:	adc    BYTE PTR [edi+eiz*8-0x22],bl
  40fc83:	mov    bl,0xcb
  40fc85:	sar    DWORD PTR [esi+0x673ea6d3],1
  40fc8b:	into   
  40fc8c:	pop    ebx
  40fc8d:	cli    
  40fc8e:	push   0x20
  40fc90:	sub    esi,DWORD PTR ds:0x75cb7263
  40fc96:	adc    eax,0xffffffdd
  40fc99:	push   cs
  40fc9a:	pushf  
  40fc9b:	dec    esp
  40fc9c:	xchg   edi,eax
  40fc9d:	mov    ds:0xdf0f4b22,eax
  40fca2:	push   esi
  40fca3:	xor    DWORD PTR [edi+0x778d0605],ebx
  40fca9:	(bad)  
  40fcaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcab:	mov    eax,0x87f7e119
  40fcb0:	adc    ecx,ebp
  40fcb2:	sbb    BYTE PTR ds:0xf5fd47c,ah
  40fcb8:	xor    edx,DWORD PTR [esp+edx*4]
  40fcbb:	push   ebx
  40fcbc:	bnd jo 0x40fcb3
  40fcbf:	or     dh,BYTE PTR [ecx]
  40fcc1:	mov    esi,0x5fbf7ed2
  40fcc6:	mov    bl,0xb3
  40fcc8:	retf   0xcb20
  40fccb:	mov    cl,0xda
  40fccd:	adc    ebx,ecx
  40fccf:	mov    al,al
  40fcd1:	cmp    eax,0x38682e79
  40fcd6:	add    al,0x1a
  40fcd9:	push   esi
  40fcda:	jmp    0x40fc7b
  40fcdc:	sar    edx,1
  40fcde:	jb     0x40fcae
  40fce0:	and    DWORD PTR cs:[edx+0xaeb816c],edi
  40fce7:	lahf   
  40fce8:	imul   ebx,DWORD PTR [ecx],0x4b
  40fceb:	fwait
  40fcec:	pop    es
  40fced:	mov    eax,DWORD PTR [ebx+0x4bd4e297]
  40fcf3:	mov    edx,DWORD PTR ds:[ecx+0x21]
  40fcf7:	mov    edi,0x5309393c
  40fcfc:	rcl    eax,1
  40fcfe:	cld    
  40fcff:	neg    BYTE PTR [edx]
  40fd01:	mov    eax,ds:0xdb999b0
  40fd06:	jp     0x40fc94
  40fd08:	clc    
  40fd09:	sti    
  40fd0a:	call   0x623e:0xb9c1fd64
  40fd11:	xchg   ebp,eax
  40fd12:	cmp    al,0xf4
  40fd14:	pop    esi
  40fd15:	js     0x40fd29
  40fd17:	jecxz  0x40fcd8
  40fd19:	aad    0x23
  40fd1b:	sub    BYTE PTR [edx-0x18a1c53d],bl
  40fd21:	adc    BYTE PTR [eax+0xb],ch
  40fd24:	mov    BYTE PTR [edi+eiz*4+0x68546e9c],dh
  40fd2b:	aas    
  40fd2c:	mov    bl,0x80
  40fd2e:	es in  al,dx
  40fd30:	nop
  40fd31:	mov    eax,0xca22653
  40fd36:	fdivr  QWORD PTR [esp+edi*2+0x708ec66d]
  40fd3d:	add    bl,0x69
  40fd40:	loopne 0x40fd77
  40fd42:	sub    ch,BYTE PTR [edi+0x524bdec8]
  40fd48:	icebp  
  40fd49:	in     al,0x62
  40fd4b:	xlat   BYTE PTR ds:[ebx]
  40fd4c:	push   ds
  40fd4d:	mov    cl,0x19
  40fd4f:	add    al,0x27
  40fd51:	mov    esi,0xa3cf18fd
  40fd56:	jns    0x40fd06
  40fd58:	aam    0x46
  40fd5a:	ins    DWORD PTR es:[edi],dx
  40fd5b:	mov    BYTE PTR [edx-0xe],dh
  40fd5e:	dec    edi
  40fd5f:	mov    edx,0x456486ac
  40fd64:	ins    DWORD PTR es:[edi],dx
  40fd65:	out    0x2f,al
  40fd67:	loopne 0x40fd87
  40fd69:	adc    BYTE PTR [esi],0x55
  40fd6c:	xchg   ecx,eax
  40fd6d:	mov    ds:0x4e53cda0,eax
  40fd72:	pop    eax
  40fd73:	test   eax,0xe2552826
  40fd78:	jo     0x40fd38
  40fd7a:	cmp    edx,DWORD PTR [edx+0x68]
  40fd7d:	leave  
  40fd7e:	shl    BYTE PTR [eax],1
  40fd80:	fldenv [edi+0x565e62c7]
  40fd86:	cmp    al,0x5f
  40fd88:	push   ds
  40fd89:	push   esi
  40fd8a:	lea    ebp,[edx]
  40fd8c:	inc    esp
  40fd8d:	sub    eax,0xb4ba7518
  40fd92:	iret   
  40fd93:	push   ebx
  40fd94:	out    dx,al
  40fd95:	push   ds
  40fd96:	add    al,BYTE PTR [ecx]
  40fd98:	dec    eax
  40fd99:	pusha  
  40fd9a:	cmc    
  40fd9b:	add    esp,ecx
  40fd9d:	cmp    bh,ch
  40fd9f:	push   ebx
  40fda0:	jo     0x40fd35
  40fda2:	push   ds
  40fda3:	and    dh,BYTE PTR ds:0x5c6b2630
  40fda9:	into   
  40fdaa:	and    ch,bl
  40fdac:	jo     0x40fdef
  40fdae:	push   esi
  40fdaf:	(bad)  
  40fdb0:	mov    ah,0x8d
  40fdb2:	or     cl,bl
  40fdb4:	xchg   ebx,eax
  40fdb5:	pop    ds
  40fdb6:	imul   ebp,DWORD PTR [eax],0xc11ed8fd
  40fdbc:	pop    ebx
  40fdbd:	rcpps  xmm2,XMMWORD PTR [eax+0x37eab798]
  40fdc4:	push   0xd5e048e4
  40fdc9:	fldenv [edx-0x64b89b60]
  40fdcf:	popf   
  40fdd0:	and    DWORD PTR [eax-0x46ef16ac],esp
  40fdd6:	dec    edx
  40fdd7:	push   edi
  40fdd8:	mov    bh,0x21
  40fdda:	or     edi,0x34d0d59
  40fde0:	rcl    DWORD PTR [edi+edi*4],0xf0
  40fde4:	ror    bl,1
  40fde6:	jmp    0x40fdca
  40fde8:	jmp    0x7589:0x36e19a7e
  40fdef:	das    
  40fdf0:	dec    eax
  40fdf1:	mov    ch,0x8f
  40fdf3:	xchg   ecx,eax
  40fdf4:	jb     0x40fde2
  40fdf6:	xor    eax,0xd200915
  40fdfb:	popf   
  40fdfc:	xchg   edi,eax
  40fdfd:	stos   BYTE PTR es:[edi],al
  40fdfe:	shl    BYTE PTR [ebx-0x4057af8d],cl
  40fe04:	inc    ebx
  40fe05:	stos   BYTE PTR es:[edi],al
  40fe06:	push   ebx
  40fe07:	rol    DWORD PTR [edi],1
  40fe09:	pop    ds
  40fe0a:	add    eax,0x95fdce9d
  40fe0f:	dec    edx
  40fe10:	bound  edi,QWORD PTR [edx]
  40fe12:	mov    dl,0xa9
  40fe14:	and    al,0x5
  40fe16:	cmp    cl,BYTE PTR [eax+eiz*2+0x24]
  40fe1a:	fnstcw WORD PTR [ebx]
  40fe1c:	mov    ebx,0x76c79ee2
  40fe21:	bnd jmp 0x40fe6b
  40fe24:	neg    DWORD PTR [esi+0x1d743885]
  40fe2a:	arpl   WORD PTR [esi],cx
  40fe2c:	xor    al,0x81
  40fe2e:	daa    
  40fe2f:	inc    eax
  40fe30:	jg     0x40fdc2
  40fe32:	out    dx,eax
  40fe33:	retf   
  40fe34:	xchg   ecx,eax
  40fe35:	push   eax
  40fe36:	(bad)  
  40fe37:	out    dx,al
  40fe38:	add    dh,bh
  40fe3a:	shl    DWORD PTR [eax+edx*2-0x239f52b9],cl
  40fe41:	xchg   ecx,eax
  40fe42:	lods   eax,DWORD PTR ds:[esi]
  40fe43:	enter  0xd59d,0x17
  40fe47:	shl    ebp,0xd8
  40fe4a:	mov    eax,0x5f31b041
  40fe4f:	fsub   QWORD PTR [ebx]
  40fe51:	mov    ch,0x7a
  40fe53:	adc    al,0x2e
  40fe55:	mov    edi,0xc970811c
  40fe5a:	bound  esp,QWORD PTR [esi+0xe]
  40fe5d:	push   ds
  40fe5e:	into   
  40fe5f:	daa    
  40fe60:	rcl    dl,0x61
  40fe63:	and    DWORD PTR ds:[ecx+0x4d50701],0x58
  40fe6b:	xchg   ecx,eax
  40fe6c:	xchg   ebp,eax
  40fe6d:	cmp    BYTE PTR [edi],0x6b
  40fe70:	fnsave [eax+0x77a022c8]
  40fe76:	and    ch,cl
  40fe78:	fbstp  TBYTE PTR [eax+0x32]
  40fe7b:	add    esi,esp
  40fe7d:	mov    edi,0x6543f530
  40fe82:	(bad)  
  40fe83:	mov    esp,cs
  40fe85:	retf   0x1195
  40fe88:	sbb    BYTE PTR [ebx],ch
  40fe8a:	xor    eax,0xad325c78
  40fe8f:	cmp    DWORD PTR [ecx+0x56933875],edx
  40fe95:	add    esi,0xf6d171eb
  40fe9b:	sbb    BYTE PTR [esi+ecx*2+0x4d],bl
  40fe9f:	call   0x557e:0x3d534f08
  40fea6:	cwde   
  40fea7:	hlt    
  40fea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fea9:	pop    edi
  40feaa:	xchg   esi,ecx
  40feac:	xchg   edx,eax
  40fead:	cwde   
  40feae:	xor    al,0xce
  40feb0:	sbb    esi,DWORD PTR [edi+0x4a3c7684]
  40feb6:	into   
  40feb7:	and    esp,DWORD PTR [edx-0x56cb60c1]
  40febd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40febe:	scas   al,BYTE PTR es:[edi]
  40febf:	jnp    0x40fedd
  40fec1:	lds    ebx,FWORD PTR [ebp-0x4c]
  40fec4:	sbb    BYTE PTR [eax],ch
  40fec6:	ret    
  40fec7:	daa    
  40fec8:	jno    0x40fef9
  40feca:	sub    DWORD PTR [edi+0x5],ecx
  40fecd:	jle    0x40fe84
  40fecf:	dec    esi
  40fed0:	or     eax,0xf7574c9b
  40fed5:	adc    DWORD PTR [ebx-0x6bfdae17],eax
  40fedb:	jp     0x40feee
  40fedd:	test   DWORD PTR [ebx+0x3c],edx
  40fee0:	xchg   ecx,eax
  40fee1:	mov    bl,0x70
  40fee3:	mov    dl,0x9c
  40fee5:	popf   
  40fee6:	mov    ds:0x79547b7d,eax
  40feeb:	dec    ebx
  40feec:	or     BYTE PTR [eax],cl
  40feee:	xchg   ebx,eax
  40feef:	or     eax,0xe764eda7
  40fef4:	sub    eax,0x1918df62
  40fef9:	mov    ah,0xd8
  40fefb:	jb     0x40ff2f
  40fefd:	add    al,0x8d
  40feff:	cld    
  40ff00:	es jae 0x40ff11
  40ff03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff04:	out    dx,al
  40ff05:	fbld   TBYTE PTR [ebx]
  40ff07:	shl    DWORD PTR [ebx+0x35036a47],1
  40ff0d:	gs cld 
  40ff0f:	mov    eax,0xf34247af
  40ff14:	mov    dl,0x71
  40ff16:	jmp    0x40feab
  40ff18:	xchg   ecx,eax
  40ff19:	pop    ss
  40ff1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff1b:	mov    ebp,0x56bb1507
  40ff20:	(bad)  
  40ff21:	cdq    
  40ff22:	les    ebp,FWORD PTR [ebp+ebp*8-0x663da150]
  40ff29:	and    DWORD PTR [edx+0x5e],0x3b
  40ff2d:	shl    BYTE PTR [ebx-0x72],cl
  40ff30:	pop    ebx
  40ff31:	push   DWORD PTR [edi-0x63]
  40ff34:	out    0xd8,eax
  40ff36:	inc    esp
  40ff37:	stos   BYTE PTR es:[edi],al
  40ff38:	cdq    
  40ff39:	std    
  40ff3a:	sbb    BYTE PTR [edx],dl
  40ff3c:	scas   eax,DWORD PTR es:[edi]
  40ff3d:	inc    eax
  40ff3e:	jmp    FWORD PTR [ebx+ecx*2+0x6e]
  40ff42:	arpl   ax,di
  40ff44:	pop    ebp
  40ff45:	out    0x60,eax
  40ff47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff48:	ret    0x5dd6
  40ff4b:	xor    DWORD PTR [edi+0xbbb7e4e],eax
  40ff51:	les    ebp,FWORD PTR [esi+0x684b1fd0]
  40ff57:	mov    bl,0x59
  40ff59:	mov    esi,0x20efb4ea
  40ff5e:	sub    al,0x6f
  40ff60:	sub    cl,BYTE PTR [esi]
  40ff62:	cmp    eax,0xc7f743d7
  40ff67:	cli    
  40ff68:	sbb    eax,0x3c7207dc
  40ff6d:	pusha  
  40ff6e:	dec    ebx
  40ff6f:	(bad)  
  40ff70:	jbe    0x40ff50
  40ff72:	test   eax,0x30606000
  40ff77:	into   
  40ff78:	mov    ah,0xf0
  40ff7a:	shr    BYTE PTR [ebp+0x3baf22bf],cl
  40ff80:	test   DWORD PTR [edx+0x14],ebp
  40ff83:	mov    ebp,0x211edc76
  40ff88:	mov    ss,edx
  40ff8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff8b:	pop    edx
  40ff8c:	popf   
  40ff8d:	mov    ds:0x360acfa,al
  40ff92:	xchg   ebp,eax
  40ff93:	loop   0x40fff3
  40ff95:	xchg   BYTE PTR [esi-0x7e],dl
  40ff98:	mov    cs,WORD PTR [edx+ecx*1+0x4f]
  40ff9c:	pusha  
  40ff9d:	xlat   BYTE PTR ds:[ebx]
  40ff9e:	sub    DWORD PTR [ebx+ecx*4],0x5a4aeaa8
  40ffa5:	pusha  
  40ffa6:	ss mov ch,0xf7
  40ffa9:	(bad)  
  40ffaa:	dec    eax
  40ffab:	sub    al,0x5c
  40ffad:	dec    ebx
  40ffae:	pusha  
  40ffaf:	leave  
  40ffb0:	out    0x76,eax
  40ffb2:	jno    0x40ff7b
  40ffb4:	pushf  
  40ffb5:	in     eax,dx
  40ffb6:	jbe    0x40ffdc
  40ffb8:	sub    esp,ecx
  40ffba:	rcl    BYTE PTR [esi+eax*1],1
  40ffbd:	mov    bh,0x85
  40ffbf:	dec    esp
  40ffc0:	repnz daa 
  40ffc2:	(bad)  
  40ffc3:	(bad)  
  40ffc4:	pop    eax
  40ffc5:	in     eax,0x68
  40ffc7:	clc    
  40ffc8:	mov    eax,ds:0xb84012dd
  40ffcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffce:	jnp    0x410034
  40ffd0:	fsubrp st(6),st
  40ffd2:	sub    ecx,DWORD PTR [esi-0x68]
  40ffd5:	cmp    esi,esp
  40ffd7:	xchg   ecx,eax
  40ffd8:	sbb    al,dl
  40ffda:	inc    esp
  40ffdb:	fbld   TBYTE PTR ds:0x5fa96ba3
  40ffe1:	arpl   WORD PTR [eax],dx
  40ffe3:	rcr    DWORD PTR [esi+edx*1+0xd40e7b9],0x71
  40ffeb:	call   0xfe72:0x7325932a
  40fff2:	cmp    BYTE PTR [esi],0xd5
  40fff5:	repz pop edx
  40fff7:	pop    ds
  40fff8:	outs   dx,DWORD PTR ds:[esi]
  40fffa:	jbe    0x41005c
  40fffc:	cmc    
  40fffd:	(bad)  
  40fffe:	cmp    DWORD PTR [ebx+edx*2+0x525eaefd],esi
  410005:	sar    BYTE PTR [si+0x3baf],cl
  41000a:	jb     0x40ffb4
  41000c:	cwde   
  41000d:	or     al,0xec
  41000f:	mov    ebx,0x797ec2a1
  410014:	push   es
  410015:	fst    DWORD PTR [edi+eax*1-0x16]
  410019:	dec    edi
  41001a:	push   0xff2eb80b
  41001f:	mov    BYTE PTR ds:0x9f4ee665,bh
  410025:	in     eax,0x60
  410027:	leave  
  410028:	cmp    BYTE PTR [ecx+0x3a],ah
  41002b:	cmp    DWORD PTR [ecx+edx*4-0x4473dad5],edi
  410032:	sub    eax,0xd01436e2
  410037:	and    DWORD PTR [ecx-0x6f6bc634],edi
  41003d:	cwde   
  41003e:	test   BYTE PTR [eax+0x3f],0x83
  410042:	mov    dl,0x71
  410044:	repnz in eax,dx
  410046:	jl     0x410088
  410048:	adc    dl,BYTE PTR [edx+0x4a]
  41004b:	fisubr DWORD PTR [edi-0x7a]
  41004e:	pop    esp
  41004f:	fild   QWORD PTR [eax-0x5da6248d]
  410055:	jo     0x410072
  410057:	push   ds
  410058:	nop
  410059:	xchg   edx,eax
  41005a:	(bad)  
  41005b:	inc    ecx
  41005c:	sbb    DWORD PTR [ebp+0x6d],edi
  41005f:	jecxz  0x410001
  410061:	mov    ebp,0xc825e857
  410066:	dec    ecx
  410067:	aas    
  410068:	xor    BYTE PTR ds:[eax-0x3243bbc1],0xfe
  410070:	xor    BYTE PTR [ecx+ecx*4+0x47],bh
  410074:	retf   
  410075:	jnp    0x4100f4
  410077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410078:	fchs   
  41007a:	gs xchg esp,eax
  41007c:	div    BYTE PTR [ecx-0x7bf4383f]
  410082:	or     DWORD PTR ds:0x9df81828,esi
  410088:	push   ebx
  410089:	popa   
  41008a:	pop    ss
  41008b:	mov    ch,BYTE PTR [ebx-0x22]
  41008e:	xlat   BYTE PTR ds:[ebx]
  41008f:	in     eax,0xd7
  410091:	mov    al,ds:0x9fdeb5fb
  410096:	pop    ss
  410097:	sub    DWORD PTR [edx+0x115bfe2d],ebp
  41009d:	gs cmp ebp,edx
  4100a0:	xor    al,0x1c
  4100a2:	loopne 0x4100f8
  4100a4:	lock es clc 
  4100a7:	mov    edi,0x4f694618
  4100ac:	sub    DWORD PTR [ebp-0x6d],edi
  4100af:	arpl   WORD PTR [ecx+0x3c],si
  4100b2:	sbb    ebp,edx
  4100b4:	push   edx
  4100b5:	cli    
  4100b6:	add    dh,dh
  4100b8:	mov    esi,ecx
  4100ba:	adc    al,0x34
  4100bc:	daa    
  4100bd:	sbb    al,0x57
  4100bf:	sar    DWORD PTR [ebx],0xd7
  4100c2:	call   0x9be4:0x8a22267e
  4100c9:	cs jmp 0x7989:0xc3e116aa
  4100d1:	cwde   
  4100d2:	idiv   DWORD PTR [edx]
  4100d4:	aaa    
  4100d5:	js     0x410077
  4100d7:	fst    QWORD PTR [ebx-0x3fa4db48]
  4100dd:	cmp    ebp,ecx
  4100df:	mov    esp,0xbb2be846
  4100e4:	or     esi,edx
  4100e6:	arpl   WORD PTR [edx-0xb],cx
  4100e9:	dec    esi
  4100ea:	pop    eax
  4100eb:	xor    esp,ecx
  4100ed:	adc    edx,0xfffffffb
  4100f0:	stc    
  4100f1:	cmp    BYTE PTR [ecx-0x1654c2d7],dh
  4100f7:	mov    bl,0xc6
  4100f9:	sub    dh,bh
  4100fb:	lock aaa 
  4100fd:	mov    al,ds:0xdecf09ac
  410102:	or     DWORD PTR [eax+eax*2],edx
  410105:	call   0x5ef01a3c
  41010a:	sahf   
  41010b:	fimul  WORD PTR [ecx]
  41010d:	inc    ecx
  41010e:	xchg   bl,ch
  410110:	add    al,0x24
  410112:	mov    ds:0x7f3690bc,al
  410117:	mov    ch,BYTE PTR [ebx]
  410119:	in     al,dx
  41011a:	hlt    
  41011b:	xor    edx,DWORD PTR [edi-0x28bcb867]
  410121:	adc    DWORD PTR [edx+0x10],ecx
  410124:	adc    DWORD PTR [esi-0xc716df4],edi
  41012a:	and    BYTE PTR [edi-0x4afd498b],0x4e
  410131:	mov    ebx,0x2f5a5563
  410136:	ficomp DWORD PTR [ebx+edi*8-0x5d9f8f25]
  41013d:	sti    
  41013e:	les    edx,FWORD PTR [ebx+edx*1-0x61947286]
  410145:	mov    ss,WORD PTR [ecx+0x7e]
  410148:	jns    0x410151
  41014a:	dec    eax
  41014b:	addr16 cld 
  41014d:	sub    eax,0x60abfaca
  410152:	add    al,0x10
  410154:	addr16 out 0xf0,eax
  410157:	mov    al,ds:0x1590ef09
  41015c:	out    dx,eax
  41015d:	ja     0x4101cb
  41015f:	cmp    edi,DWORD PTR cs:[esi+0x29]
  410163:	cmc    
  410164:	jge    0x4101e4
  410166:	sahf   
  410167:	jl     0x4101de
  410169:	scas   eax,DWORD PTR es:[edi]
  41016a:	rcr    esi,cl
  41016c:	dec    esi
  41016d:	lods   eax,DWORD PTR ds:[esi]
  41016e:	sub    DWORD PTR [esi+0x798a5227],ecx
  410174:	mov    ebp,0x91d3d3e
  410179:	add    al,0x61
  41017b:	pop    ss
  41017c:	adc    DWORD PTR [esi],ebp
  41017e:	fld    TBYTE PTR ds:0xb02e90b9
  410184:	ja     0x41011a
  410186:	or     DWORD PTR [edi+0x6a],edi
  410189:	fdivr  QWORD PTR [edx]
  41018b:	pop    eax
  41018c:	jecxz  0x41019c
  41018e:	in     eax,0x46
  410190:	enter  0x3266,0xb
  410194:	inc    ebx
  410195:	rol    al,cl
  410197:	jecxz  0x410169
  410199:	xchg   ecx,eax
  41019a:	cli    
  41019b:	cmp    al,0xc2
  41019d:	aas    
  41019e:	or     DWORD PTR [esi+0x63],esp
  4101a1:	sbb    eax,0xced596ed
  4101a6:	fsubr  QWORD PTR [edx+0x2ce10372]
  4101ac:	and    eax,0x44e38f52
  4101b1:	mov    ds:0x284b540a,eax
  4101b6:	jmp    0x886d5558
  4101bb:	xor    DWORD PTR [edx+0x53],0xd2243ab2
  4101c2:	pop    edx
  4101c3:	hlt    
  4101c4:	jl     0x410197
  4101c6:	add    al,0x49
  4101c8:	fld    DWORD PTR [ecx+esi*4+0x58]
  4101cc:	push   cs
  4101cd:	pop    esp
  4101ce:	pop    ds
  4101cf:	dec    esp
  4101d0:	jo     0x410205
  4101d2:	mov    al,0x92
  4101d4:	xchg   esi,eax
  4101d5:	push   ss
  4101d6:	adc    ah,cl
  4101d8:	add    dl,0xf3
  4101db:	inc    esi
  4101dc:	mov    ebx,0xb93c61e7
  4101e2:	ror    BYTE PTR [edi+0x1d],1
  4101e5:	(bad)  
  4101e7:	(bad)  
  4101e9:	test   al,al
  4101eb:	mov    eax,0x33714f99
  4101f0:	scas   al,BYTE PTR es:[edi]
  4101f1:	pop    edi
  4101f2:	popa   
  4101f3:	dec    eax
  4101f4:	ror    BYTE PTR [eax-0x21],0xd7
  4101f8:	sub    eax,0x280274fa
  4101fd:	jecxz  0x4101c7
  4101ff:	push   edx
  410200:	lods   eax,DWORD PTR ds:[esi]
  410201:	ins    BYTE PTR es:[edi],dx
  410202:	pop    esp
  410203:	push   cs
  410204:	imul   esp,DWORD PTR [esi],0x49
  410207:	es and bl,dh
  41020a:	fmul   QWORD PTR [edi-0x61]
  41020d:	out    dx,eax
  41020e:	hlt    
  41020f:	push   ebx
  410210:	sub    eax,0xe31aa772
  410215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410216:	into   
  410217:	mov    al,BYTE PTR [edx+0x2234dd32]
  41021d:	xor    edx,ebp
  41021f:	jecxz  0x410280
  410221:	push   ds
  410222:	sbb    ebx,DWORD PTR [edx+0x4d1191f2]
  410228:	cmp    DWORD PTR [di+0x49],ebp
  41022c:	fmul   DWORD PTR [edi+0x27]
  41022f:	pop    esi
  410230:	add    esp,0x7f4c0695
  410236:	(bad)  
  410237:	fst    st(7)
  410239:	ds scas eax,DWORD PTR es:[edi]
  41023b:	pop    ds
  41023c:	jo     0x41023d
  41023e:	test   al,0x4a
  410240:	stos   DWORD PTR es:[edi],eax
  410241:	push   edx
  410242:	inc    ebp
  410243:	jge    0x41028e
  410245:	push   esi
  410246:	retf   
  410247:	lods   eax,DWORD PTR ds:[esi]
  410248:	inc    ebp
  410249:	mov    ebp,0x4158baa1
  41024e:	or     esi,DWORD PTR [ebx-0x2e]
  410251:	dec    edi
  410252:	add    cl,bh
  410254:	push   ds
  410255:	pop    edi
  410256:	inc    ebp
  410257:	inc    eax
  410258:	push   esi
  410259:	push   es
  41025a:	sbb    al,BYTE PTR gs:[ebx+eiz*2-0x31fddc6b]
  410262:	out    0x3b,al
  410264:	arpl   WORD PTR [eax],bx
  410266:	lds    ebp,FWORD PTR [edx+0x5b]
  410269:	hlt    
  41026a:	xor    BYTE PTR [ebp-0x143b1c8c],dh
  410270:	xchg   edi,eax
  410271:	xchg   BYTE PTR [edi],ah
  410273:	push   esp
  410274:	out    dx,eax
  410275:	leave  
  410276:	pop    ds
  410277:	push   ebx
  410278:	in     eax,dx
  410279:	ja     0x41021d
  41027b:	mov    edi,0xa6a8c1d4
  410280:	test   al,0xdb
  410282:	mov    ah,0x5f
  410284:	mov    ah,0x91
  410286:	fnstcw WORD PTR [edi-0x758b7a4e]
  41028c:	mov    eax,ds:0xd5341cee
  410291:	fst    DWORD PTR [eax-0x49b16041]
  410297:	gs jl  0x41021f
  41029a:	cli    
  41029b:	or     ebp,edx
  41029d:	mov    al,ds:0x3eebe91b
  4102a2:	pop    ss
  4102a3:	pop    esi
  4102a4:	(bad)  [edi-0x4b]
  4102a7:	sub    dl,bl
  4102a9:	xor    eax,0xd6883170
  4102ae:	dec    edx
  4102af:	cmp    al,0x84
  4102b1:	xchg   DWORD PTR [ecx],ebx
  4102b3:	push   esp
  4102b4:	(bad)  
  4102b5:	mov    cl,0x4
  4102b7:	sbb    esi,DWORD PTR [ecx]
  4102b9:	or     ebp,ebx
  4102bb:	out    dx,eax
  4102bc:	xchg   esi,eax
  4102bd:	xchg   esi,eax
  4102be:	cwde   
  4102bf:	cli    
  4102c0:	shl    DWORD PTR [esp+edx*1],0x8f
  4102c4:	out    dx,al
  4102c5:	hlt    
  4102c6:	cmp    eax,0xbcb170ea
  4102cb:	cmp    ebp,eax
  4102cd:	aas    
  4102ce:	jne    0x41031d
  4102d0:	xor    DWORD PTR [esi-0x43b1fa9f],eax
  4102d6:	adc    DWORD PTR [edi-0x7deee8a5],edi
  4102dc:	xchg   esi,eax
  4102dd:	jmp    0x7e13369a
  4102e2:	mov    dh,0x2c
  4102e4:	shl    DWORD PTR ds:0x20d754b7,0xa2
  4102eb:	mov    WORD PTR [edi],fs
  4102ed:	retf   
  4102ee:	fsubrp st(4),st
  4102f0:	mov    esi,0x3d0fb8e7
  4102f5:	hlt    
  4102f6:	data16 sbb al,0x92
  4102f9:	lea    eax,[ebp+0x757584b8]
  4102ff:	inc    ecx
  410300:	pusha  
  410301:	retf   0xc8be
  410304:	xchg   dh,cl
  410306:	dec    edi
  410307:	xor    al,0x42
  410309:	inc    esp
  41030a:	fcmovbe st,st(2)
  41030c:	sub    BYTE PTR [eax+edx*1],0x13
  410310:	pop    ss
  410311:	cwde   
  410312:	adc    al,0x5b
  410314:	push   ds
  410315:	sub    dh,BYTE PTR [eax+0x7c]
  410318:	in     eax,dx
  410319:	idiv   cl
  41031b:	aam    0x80
  41031d:	cs ret 
  41031f:	xor    DWORD PTR [eax-0x6e],eax
  410322:	sub    BYTE PTR [ebx],0xc3
  410325:	cli    
  410326:	out    dx,eax
  410327:	ins    DWORD PTR es:[edi],dx
  410328:	inc    esi
  410329:	add    BYTE PTR [ebx+edx*2],0xef
  41032d:	cmp    DWORD PTR [eax],ecx
  41032f:	in     eax,0xa1
  410331:	lods   eax,DWORD PTR ds:[esi]
  410332:	arpl   si,cx
  410334:	pushf  
  410335:	xor    ebp,eax
  410337:	sub    DWORD PTR [esi-0x32],edx
  41033a:	or     al,0x64
  41033c:	aam    0xce
  41033e:	jecxz  0x41032a
  410340:	out    0x9a,al
  410342:	cld    
  410343:	inc    edi
  410344:	add    eax,0x1e81e326
  410349:	pop    edx
  41034a:	xor    dl,BYTE PTR [esi+0x3e]
  41034d:	pop    esp
  41034e:	mov    ds:0xbdf0611c,eax
  410353:	inc    edi
  410354:	in     al,dx
  410355:	and    ch,BYTE PTR [ecx+eax*4-0x1a]
  410359:	xor    dl,bl
  41035b:	adc    DWORD PTR [ebp+0x6d],ecx
  41035e:	dec    esi
  41035f:	dec    ebx
  410360:	xor    ebx,DWORD PTR ds:0x72bc7713
  410366:	fwait
  410367:	inc    esp
  410368:	sbb    ebp,esp
  41036a:	jl     0x41039f
  41036c:	dec    esp
  41036d:	jo     0x41038a
  41036f:	(bad)  
  410370:	std    
  410371:	push   es
  410372:	or     esi,DWORD PTR [edi]
  410374:	iret   
  410375:	sbb    al,ah
  410377:	loop   0x41034c
  410379:	fidivr WORD PTR [edx+edi*4]
  41037c:	call   0x28f0:0x5fe14822
  410383:	pop    esp
  410384:	mov    edx,0x841f0229
  410389:	and    dh,BYTE PTR [ebp+0x6437bbfa]
  41038f:	fdivr  DWORD PTR [esi-0x38]
  410392:	imul   esi,DWORD PTR [eax+0x751be8a0],0x4493226b
  41039c:	xchg   BYTE PTR [edx+esi*8],ch
  41039f:	pop    ebx
  4103a0:	pop    esp
  4103a1:	sub    DWORD PTR [edx],ecx
  4103a3:	sbb    ebx,DWORD PTR [ebp+0x64]
  4103a6:	mov    edi,0x47ae425b
  4103ab:	push   ebx
  4103ac:	rcr    DWORD PTR [ebx-0x8],1
  4103af:	mov    ebp,0x1d7d60bd
  4103b4:	sbb    DWORD PTR ds:0xa14b61f6,eax
  4103ba:	add    DWORD PTR ds:0xe817b286,esi
  4103c0:	leave  
  4103c1:	mov    ebp,0x89da28ea
  4103c6:	pusha  
  4103c7:	das    
  4103c8:	mov    esi,0x41fcbeff
  4103cd:	cdq    
  4103ce:	je     0x4103ae
  4103d0:	add    DWORD PTR [edx],esi
  4103d2:	ret    0xf916
  4103d5:	adc    esp,DWORD PTR [edx+eax*1+0x24]
  4103d9:	mov    ss,ebx
  4103db:	mov    ds:0xa5cefce2,al
  4103e0:	sub    al,0x8d
  4103e2:	test   DWORD PTR [eax-0x11],ebx
  4103e5:	stc    
  4103e6:	dec    ebx
  4103e7:	mov    al,ds:0xf01458f
  4103ec:	dec    ebp
  4103ed:	cmp    al,0x57
  4103ef:	hlt    
  4103f0:	enter  0x6ac0,0x38
  4103f4:	aam    0x66
  4103f6:	jno    0x4103d4
  4103f8:	cmp    eax,0x1d1de5e8
  4103fd:	add    eax,0xbc4ba203
  410402:	mov    eax,ds:0x944c3679
  410407:	sbb    BYTE PTR [eax],bl
  410409:	and    al,0xac
  41040b:	imul   ecx,DWORD PTR [esi-0x7f],0x51b9bff2
  410412:	inc    edx
  410413:	xchg   esp,eax
  410414:	outs   dx,BYTE PTR ds:[esi]
  410415:	stos   BYTE PTR es:[edi],al
  410416:	sbb    al,0x32
  410418:	shl    DWORD PTR [ebx],0x22
  41041b:	mov    ah,BYTE PTR [esi-0x6a1a5f20]
  410421:	mov    ds:0xeeebe132,al
  410426:	push   ebx
  410427:	aaa    
  410428:	fadd   QWORD PTR [ebx+0x77]
  41042b:	shl    DWORD PTR [ebp+0x5616caf6],1
  410431:	outs   dx,BYTE PTR ds:[esi]
  410432:	push   ebx
  410433:	test   al,0x68
  410435:	into   
  410436:	xchg   edi,eax
  410437:	jg     0x41045e
  410439:	lds    ecx,FWORD PTR [ecx]
  41043b:	jmp    0x2731d941
  410440:	int    0x72
  410442:	add    esp,0x30
  410445:	(bad)  
  410447:	mov    ds:0xe107d7f9,al
  41044c:	lock jge 0x4103f7
  41044f:	jp     0x410490
  410451:	mov    ebp,0xef395c80
  410456:	stos   DWORD PTR es:[edi],eax
  410457:	loop   0x410462
  410459:	icebp  
  41045a:	sub    ebx,DWORD PTR [ebp+edx*8+0x6b07c100]
  410461:	sbb    BYTE PTR [edi],0x79
  410464:	mov    ah,0x7
  410466:	cmp    BYTE PTR [eax+0x14],al
  410469:	sar    dh,1
  41046b:	adc    DWORD PTR [eax-0x49],ebp
  41046e:	retf   0xa423
  410471:	jle    0x4104d5
  410473:	and    DWORD PTR [esi-0x25],0x5
  410477:	cmp    al,0x98
  410479:	loopne 0x4104d1
  41047b:	leave  
  41047c:	pop    es
  41047d:	mov    DWORD PTR [edi-0x1234a48b],esp
  410483:	push   eax
  410484:	shl    DWORD PTR [ebp+ebp*1+0x4bff2a11],1
  41048b:	jl     0x5bb246dd
  410491:	imul   eax,DWORD PTR [eax+0x55],0x5cb639fd
  410498:	xor    eax,0xa4bf79c6
  41049d:	cld    
  41049e:	xlat   BYTE PTR ds:[ebx]
  41049f:	push   0xc96b395d
  4104a4:	push   ds
  4104a5:	stos   DWORD PTR es:[edi],eax
  4104a6:	and    dl,BYTE PTR [edx-0x1b]
  4104a9:	xlat   BYTE PTR ds:[ebx]
  4104aa:	fisttp WORD PTR [ebx]
  4104ac:	cmp    al,0x91
  4104ae:	sub    eax,0x21804eee
  4104b3:	xchg   esi,eax
  4104b4:	sub    BYTE PTR [edi-0x7e95c6bc],bl
  4104ba:	xchg   edi,eax
  4104bb:	mov    ch,0x2e
  4104bd:	test   eax,0x5ce83e5
  4104c2:	mov    ds:0x78d2176e,eax
  4104c7:	test   BYTE PTR [eax],ch
  4104c9:	test   ebp,ebx
  4104cb:	je     0x410536
  4104cd:	iret   
  4104ce:	js     0x41049f
  4104d0:	sub    BYTE PTR [edx-0x1dea04ca],dl
  4104d6:	call   0x84b0:0x6acab7fe
  4104dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104de:	jge    0x410492
  4104e0:	mov    BYTE PTR [ecx],ah
  4104e2:	cld    
  4104e3:	es mov bh,0x41
  4104e6:	dec    edx
  4104e7:	neg    bh
  4104e9:	adc    esp,esi
  4104eb:	stc    
  4104ec:	es imul ecx,eax,0x66187789
  4104f3:	jle    0x4104b8
  4104f5:	imul   ebp,DWORD PTR [ecx+0x2b4444d],0xffffff80
  4104fc:	bound  edx,QWORD PTR [ebx+ebx*4+0x21585269]
  410503:	lods   al,BYTE PTR ds:[esi]
  410504:	sbb    eax,DWORD PTR [ebx]
  410506:	pop    esi
  410507:	add    ecx,DWORD PTR [edx+0x7b]
  41050a:	leave  
  41050b:	jge    0x4104a2
  41050d:	xchg   ebp,eax
  41050e:	add    BYTE PTR [ecx+ebp*2],bl
  410511:	or     al,0xd7
  410513:	mov    BYTE PTR [ecx-0x3e],0x17
  410517:	adc    ecx,esi
  410519:	xor    eax,0x3ac416c2
  41051e:	or     esp,DWORD PTR [eax-0x20]
  410521:	pop    ds
  410522:	sub    DWORD PTR [esp+ecx*8],ecx
  410525:	lds    esp,FWORD PTR [eax]
  410527:	push   edx
  410528:	jno    0x4104aa
  41052a:	jbe    0x4104e6
  41052c:	icebp  
  41052d:	inc    edi
  41052e:	add    bl,BYTE PTR [ecx-0x2e34975a]
  410534:	mov    bl,0x79
  410536:	inc    BYTE PTR [ecx+0x56]
  410539:	cmp    eax,DWORD PTR [ebx]
  41053b:	mov    al,bh
  41053d:	pop    ds
  41053e:	sub    DWORD PTR [ecx+0x5b],eax
  410541:	cmp    eax,0xffffffcd
  410544:	jp     0x4104f0
  410546:	stc    
  410547:	adc    edi,DWORD PTR [edx-0x390dae01]
  41054d:	push   edi
  41054e:	push   edi
  41054f:	jle    0x41055e
  410551:	(bad)  
  410553:	mov    ebx,DWORD PTR [ecx]
  410555:	jmp    0x1c1b:0x4ffa1370
  41055c:	adc    esp,esp
  41055e:	sub    eax,0xeac8d147
  410563:	or     DWORD PTR [ebp+0x75],esp
  410566:	inc    ebp
  410567:	std    
  410568:	test   DWORD PTR [ecx],edi
  41056a:	add    al,0x5
  41056c:	cdq    
  41056d:	mov    ds:0x8a0d4d98,eax
  410572:	ret    
  410573:	dec    DWORD PTR [ecx-0x7062caa8]
  410579:	icebp  
  41057a:	shr    BYTE PTR [edx+0x9b428e0],1
  410580:	out    dx,eax
  410581:	xchg   esp,eax
  410582:	stc    
  410583:	add    cl,0x90
  410586:	or     BYTE PTR [eax],ch
  410588:	adc    edi,edi
  41058a:	sub    ch,BYTE PTR [esi-0x2b]
  41058d:	addr16 push esi
  41058f:	lods   al,BYTE PTR ds:[esi]
  410590:	push   edi
  410591:	push   ebp
  410592:	xor    ecx,0xffffff8c
  410595:	ficomp WORD PTR [esi]
  410597:	jno    0x410588
  410599:	popa   
  41059a:	lahf   
  41059b:	sub    al,0x3c
  41059d:	pop    ecx
  41059e:	not    ecx
  4105a0:	rcl    ah,1
  4105a2:	nop
  4105a3:	mov    dl,0x2
  4105a5:	(bad)  
  4105a6:	aad    0x3c
  4105a8:	add    eax,0xe12566a3
  4105ad:	dec    ebp
  4105ae:	pop    ds
  4105af:	push   edi
  4105b0:	aaa    
  4105b1:	lods   eax,DWORD PTR ds:[esi]
  4105b2:	sar    DWORD PTR [ecx+0x2cf3512],1
  4105b8:	pop    ecx
  4105b9:	jmp    0x745f:0x9bff6b29
  4105c0:	dec    eax
  4105c1:	retf   
  4105c2:	bnd jb 0x410556
  4105c5:	mov    bh,0x53
  4105c7:	fldenv [edi]
  4105c9:	push   edx
  4105ca:	sub    DWORD PTR [ebx+0x9ded9d7],esp
  4105d0:	cvtps2pi mm1,QWORD PTR [edi+0x54395f67]
  4105d7:	sar    edi,cl
  4105d9:	sbb    BYTE PTR [bx],al
  4105dc:	push   ebp
  4105dd:	push   ebx
  4105de:	xchg   edx,eax
  4105df:	cmp    ebx,DWORD PTR [esp+ebx*2+0x6082280f]
  4105e6:	cmp    ebx,DWORD PTR [edx+ebx*4]
  4105e9:	stc    
  4105ea:	mov    ecx,0x77654005
  4105ef:	ds mov ebp,0x1103aa7d
  4105f5:	ret    0x2af9
  4105f8:	adc    DWORD PTR [ebx-0x29],0x49
  4105fc:	test   al,0x34
  4105fe:	fldenv [ebx-0x36acc26f]
  410604:	std    
  410605:	mov    ebx,fs
  410607:	fwait
  410608:	xchg   edi,eax
  410609:	jp     0x410626
  41060b:	jmp    0xb8a8648a
  410610:	inc    ecx
  410611:	mov    ecx,0xec1c8ec0
  410616:	dec    esi
  410617:	push   0xed102cc7
  41061c:	(bad)  
  41061d:	sub    BYTE PTR ds:0xc6bf26dc,al
  410623:	div    BYTE PTR [ecx+0x2d073e2b]
  410629:	imul   edx,DWORD PTR [eax*1-0x58ae8930],0xa57678aa
  410634:	dec    edx
  410635:	pop    ds
  410636:	sub    BYTE PTR [eax+0x51e55a98],dh
  41063c:	xor    al,0x58
  41063e:	hlt    
  41063f:	mov    al,ds:0x469824f4
  410644:	aam    0x64
  410646:	push   0xfffffffe
  410648:	jnp    0x410699
  41064a:	adc    DWORD PTR [ebp-0x1d5e0c10],edx
  410650:	pop    esi
  410651:	dec    DWORD PTR [edi]
  410653:	mov    es,WORD PTR [ecx+0x349bc43e]
  410659:	and    al,0xf
  41065b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41065c:	fld    TBYTE PTR fs:[ebx-0x4b91f335]
  410663:	enter  0x1ab4,0xb7
  410667:	push   esi
  410668:	mov    eax,ds:0x869ac529
  41066d:	push   ecx
  41066e:	cmp    bl,BYTE PTR [eax-0x79]
  410671:	cmp    BYTE PTR [bx+si],ch
  410674:	lods   al,BYTE PTR ds:[esi]
  410675:	jb     0x410631
  410677:	stc    
  410678:	idiv   DWORD PTR [edx]
  41067a:	adc    eax,0xb537baf2
  41067f:	fisubr DWORD PTR [eax-0x1c801d34]
  410685:	ss stos DWORD PTR es:[edi],eax
  410687:	rcr    DWORD PTR [edx+0x5b5f262b],cl
  41068d:	xor    al,0x17
  41068f:	jno    0x410708
  410691:	dec    ebp
  410692:	in     al,0xd9
  410694:	add    BYTE PTR [eax],ah
  410696:	pop    ecx
  410697:	adc    dh,BYTE PTR [ebx]
  410699:	pop    eax
  41069a:	lods   al,BYTE PTR ds:[esi]
  41069b:	pop    eax
  41069c:	inc    ebp
  41069d:	xor    dh,BYTE PTR [ecx+edi*1]
  4106a0:	adc    DWORD PTR [esi+0xe],eax
  4106a3:	mov    ecx,0xe62a3a22
  4106a8:	xchg   ebp,eax
  4106a9:	xor    ecx,DWORD PTR [edi-0x117c77ac]
  4106af:	test   al,0x79
  4106b1:	lock lods eax,DWORD PTR ds:[esi]
  4106b3:	pop    ecx
  4106b4:	dec    eax
  4106b5:	std    
  4106b6:	mov    esi,0x7857f634
  4106bb:	mov    esp,0x809a4ea4
  4106c0:	(bad)  
  4106c1:	outs   dx,DWORD PTR ds:[esi]
  4106c2:	xor    bl,BYTE PTR [ebx+0x491b6ca8]
  4106c8:	mov    edi,0x3bb934b5
  4106cd:	sbb    eax,0xcc4d2ed3
  4106d2:	xor    BYTE PTR [ebx],bh
  4106d4:	cmc    
  4106d5:	es push 0xffffffde
  4106d8:	call   0x2f2c:0xfe27dd29
  4106df:	out    0x30,eax
  4106e1:	xor    eax,0x63b07d50
  4106e6:	jle    0x4106bb
  4106e8:	mov    bh,0xc8
  4106ea:	ins    BYTE PTR es:[edi],dx
  4106eb:	test   ch,ah
  4106ed:	mov    eax,ds:0x7561ea29
  4106f2:	out    0x19,al
  4106f4:	int3   
  4106f5:	mov    dh,dh
  4106f7:	xor    eax,0x19504cb7
  4106fc:	test   BYTE PTR [ebx+0x73436fcb],bh
  410702:	shr    cl,cl
  410704:	int    0xf6
  410706:	iret   
  410707:	mov    esi,0x339add8f
  41070c:	dec    esi
  41070d:	sub    ebp,edi
  41070f:	push   esp
  410710:	cmp    al,0x18
  410712:	imul   esp,DWORD PTR [edi+0x4f4d4ef8],0x26
  410719:	pop    ds
  41071a:	adc    eax,0x5594f3da
  41071f:	bound  esi,QWORD PTR [edi-0x62]
  410722:	popa   
  410723:	mov    al,ds:0xd917ba41
  410728:	shl    DWORD PTR [esi-0x11],cl
  41072b:	xchg   edx,eax
  41072c:	pop    esp
  41072d:	outs   dx,BYTE PTR ds:[esi]
  41072e:	es add esi,edi
  410731:	push   ebx
  410732:	(bad)  
  410733:	pop    DWORD PTR [edx]
  410735:	or     BYTE PTR ds:0x514ddc0,cl
  41073b:	dec    esp
  41073c:	(bad)  
  41073d:	pop    ebx
  41073e:	iret   
  41073f:	cmp    al,0x28
  410741:	cmp    DWORD PTR [esi],eax
  410743:	xor    eax,0x9ac77d2e
  410748:	sahf   
  410749:	add    DWORD PTR [edx],ebx
  41074b:	xchg   edx,eax
  41074c:	xor    ah,BYTE PTR [ecx]
  41074e:	dec    eax
  41074f:	or     ebp,DWORD PTR [esi]
  410751:	rcr    BYTE PTR [eax],1
  410753:	loope  0x410717
  410755:	and    edx,DWORD PTR [edi-0x2a]
  410758:	adc    ch,BYTE PTR [edx]
  41075a:	lods   eax,DWORD PTR ds:[esi]
  41075b:	shl    bl,0x99
  41075e:	pop    esi
  41075f:	xlat   BYTE PTR ds:[ebx]
  410760:	jnp    0x410788
  410762:	push   edi
  410763:	inc    ebp
  410764:	jns    0x41076f
  410766:	xor    eax,0x8363559
  41076b:	neg    bh
  41076d:	or     WORD PTR [edx+esi*4-0x13],di
  410772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410773:	ret    
  410774:	add    al,BYTE PTR [ebx-0x3]
  410777:	adc    al,0xdb
  410779:	push   cs
  41077a:	sahf   
  41077b:	inc    ecx
  41077c:	xchg   edx,eax
  41077d:	(bad)  
  41077e:	adc    eax,0x9a114967
  410783:	scas   eax,DWORD PTR es:[edi]
  410784:	or     edi,0x1391c16b
  41078a:	mov    ds:0xce0d9caa,eax
  41078f:	es mov edi,0xb4bd3031
  410795:	inc    eax
  410796:	or     BYTE PTR [edi-0x63],bl
  410799:	push   eax
  41079a:	ret    
  41079b:	and    BYTE PTR [edi-0x4aa61cb5],ah
  4107a1:	iret   
  4107a2:	jne    0x410737
  4107a4:	sub    eax,0x9a9f3c19
  4107a9:	pop    eax
  4107aa:	sub    eax,0x25bef03f
  4107af:	mov    dl,0x65
  4107b1:	cmp    al,0xc6
  4107b3:	adc    BYTE PTR [ebx+0x7d],bl
  4107b6:	inc    edi
  4107b7:	mov    ds:0xc36e82c8,eax
  4107bc:	cmp    eax,0x7f1e56e7
  4107c1:	imul   edx,DWORD PTR [edx],0x4d
  4107c4:	pop    ebx
  4107c5:	fs adc al,0xe7
  4107c8:	cdq    
  4107c9:	and    al,bl
  4107cb:	mov    ecx,0x16f6272e
  4107d0:	mov    edi,0x72edb141
  4107d5:	pop    eax
  4107d6:	mov    ebx,0xef34ff1d
  4107db:	test   BYTE PTR [edi],bl
  4107dd:	inc    eax
  4107de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107df:	rcl    DWORD PTR [ebx+eiz*4+0x40],cl
  4107e3:	and    DWORD PTR [edi],eax
  4107e5:	jle    0x4107bd
  4107e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e8:	scas   al,BYTE PTR es:[edi]
  4107e9:	or     edx,ebx
  4107eb:	leave  
  4107ec:	aas    
  4107ed:	mov    dl,0xbe
  4107ef:	jne    0x4107ce
  4107f1:	and    dh,bl
  4107f3:	dec    esi
  4107f4:	fist   DWORD PTR [edi+0x6b]
  4107f7:	pusha  
  4107f8:	not    DWORD PTR [eax+0x1f80f8ab]
  4107fe:	pop    ss
  4107ff:	mov    ecx,0x23a54098
  410804:	xor    eax,0x6acf02fa
  410809:	hlt    
  41080a:	xor    DWORD PTR [ebx-0x3b],edi
  41080d:	inc    ecx
  41080e:	mov    bl,0x51
  410810:	push   esi
  410811:	dec    edx
  410812:	(bad)  
  410813:	adc    eax,0xd559f41c
  410818:	mov    ds:0x1f37bd2a,al
  41081d:	mov    bl,0x40
  41081f:	mov    bh,0x21
  410821:	enter  0x19bd,0xd4
  410825:	jb     0x41083b
  410827:	mov    bl,0x4f
  410829:	mov    ebx,0x1dc8e9d5
  41082e:	or     al,0xfc
  410830:	pusha  
  410831:	mov    BYTE PTR [edi-0x21],ch
  410834:	dec    ecx
  410835:	push   ebp
  410836:	fnsave [edx]
  410838:	add    BYTE PTR [edi-0x37],al
  41083b:	mov    dh,0x8c
  41083d:	fidiv  DWORD PTR [edi+0x34]
  410840:	je     0x41082c
  410842:	and    ah,BYTE PTR [ebx+0xb]
  410845:	imul   ecx,DWORD PTR [edx+esi*2+0x5a],0x8338af8b
  41084d:	popa   
  41084e:	in     al,dx
  41084f:	jno    0x4108ce
  410851:	out    0x92,al
  410853:	rcl    BYTE PTR [eax+0x59],cl
  410856:	push   ecx
  410857:	pushf  
  410858:	in     eax,dx
  410859:	push   ebx
  41085a:	js     0x41083b
  41085c:	mov    eax,ds:0xba68ecc
  410861:	pop    edx
  410862:	loop   0x4108d6
  410864:	push   es
  410865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410867:	ss pushf 
  410869:	pusha  
  41086a:	ja     0x41088a
  41086c:	and    ebp,edi
  41086e:	adc    bl,BYTE PTR [ebp+ecx*1+0x33]
  410872:	adc    DWORD PTR [edx+0x519189bb],ebx
  410878:	cmp    DWORD PTR [edi-0x28a327ec],esi
  41087e:	iret   
  41087f:	and    BYTE PTR [eax-0x39a74f61],dl
  410885:	cmp    ecx,DWORD PTR [ebx+0x2e]
  410888:	pop    ds
  410889:	pop    es
  41088a:	push   ss
  41088b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41088c:	push   ecx
  41088d:	xchg   edx,eax
  41088e:	outs   dx,BYTE PTR ds:[esi]
  41088f:	loope  0x4108b0
  410891:	lea    esi,[esi]
  410893:	ret    0x2462
  410896:	inc    ebp
  410897:	js     0x410851
  410899:	push   ecx
  41089a:	xor    eax,0x24460a83
  41089f:	les    ebx,FWORD PTR [ecx+0x65]
  4108a2:	and    al,0x14
  4108a4:	xchg   esp,eax
  4108a5:	inc    esi
  4108a6:	aam    0xb9
  4108a8:	pop    es
  4108a9:	mov    al,ds:0x47cd1def
  4108ae:	sbb    BYTE PTR [eax+0x2f],al
  4108b1:	xchg   edx,eax
  4108b2:	shl    BYTE PTR [eax+esi*4-0x2d],0x36
  4108b7:	inc    esp
  4108b8:	and    BYTE PTR [eax-0x566b02c1],al
  4108be:	mov    BYTE PTR [edx+ebp*4],bl
  4108c1:	pop    ds
  4108c2:	test   DWORD PTR [eax-0x79],esp
  4108c5:	mov    ebx,0x9f6e0a3f
  4108ca:	inc    ebx
  4108cb:	pushf  
  4108cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108cd:	mov    bh,0xa2
  4108cf:	adc    edx,DWORD PTR [eax+0x30]
  4108d2:	stos   BYTE PTR es:[edi],al
  4108d3:	adc    DWORD PTR [ebx],esp
  4108d5:	sbb    BYTE PTR [edx+0x23],ah
  4108d8:	pusha  
  4108d9:	adc    al,0x74
  4108db:	sbb    eax,0x90de2683
  4108e0:	call   0x35fdf707
  4108e5:	(bad)  
  4108e6:	fptan  
  4108e8:	mov    ch,0x5f
  4108ea:	add    BYTE PTR [eax],0x46
  4108ed:	mov    edi,0x386d1b1b
  4108f2:	ins    BYTE PTR es:[edi],dx
  4108f3:	test   BYTE PTR ds:0x9ad2c9d9,ah
  4108f9:	in     eax,0x0
  4108fb:	add    eax,0x21abe7d6
  410900:	add    dh,ch
  410902:	rcl    DWORD PTR [ebp-0x6d],cl
  410905:	loope  0x4108ff
  410907:	cwde   
  410908:	cdq    
  410909:	mov    cl,0xf4
  41090b:	add    esp,DWORD PTR [esi+eiz*2-0x4c]
  41090f:	mov    ss,ebp
  410911:	adc    DWORD PTR [eax+0x4e],0xffffffdf
  410915:	(bad)  [edi]
  410917:	in     al,dx
  410918:	mov    bh,0x9b
  41091a:	pop    eax
  41091b:	jns    0x410912
  41091d:	shr    edx,1
  41091f:	xchg   ebp,eax
  410920:	xor    BYTE PTR [esp+eax*1-0x8bb7007],bh
  410927:	std    
  410928:	xor    bl,dh
  41092a:	jns    0x4108c8
  41092c:	cs imul ebp,ebp,0xffffffce
  410930:	es ins BYTE PTR es:[edi],dx
  410932:	and    ebx,DWORD PTR [eax+0x41]
  410935:	sub    al,0x41
  410937:	test   BYTE PTR [eax],al
  410939:	fdiv   QWORD PTR [ecx+0x69]
  41093c:	dec    ebx
  41093d:	or     DWORD PTR [eax+0x524f2feb],eax
  410943:	inc    eax
  410944:	call   0x22a3:0xf0c0e90
  41094b:	or     eax,0x9e240322
  410950:	pop    ecx
  410951:	xchg   ebp,eax
  410952:	jns    0x4108d7
  410954:	add    eax,0x43820f68
  410959:	pop    esp
  41095a:	and    cl,BYTE PTR [eax]
  41095c:	add    eax,0x3275e852
  410961:	loope  0x410988
  410963:	cdq    
  410964:	push   cs
  410965:	test   eax,0xdbaa5787
  41096a:	aad    0x6f
  41096c:	dec    esp
  41096d:	pop    eax
  41096e:	push   ebp
  41096f:	loopne 0x41090d
  410971:	cmp    eax,0x37784c6f
  410976:	mov    BYTE PTR [ecx],bh
  410978:	repz shr DWORD PTR [ebx],1
  41097b:	popf   
  41097c:	test   eax,0xd85283f7
  410981:	add    ch,dh
  410983:	push   ebp
  410984:	pop    ebx
  410985:	sub    al,0x3e
  410987:	inc    esp
  410988:	and    eax,0xb09bf6ce
  41098d:	test   edi,esp
  41098f:	mov    ah,0x57
  410991:	test   esp,edx
  410993:	adc    eax,0x317fff1a
  410998:	popf   
  410999:	mov    ah,0xa7
  41099b:	xchg   esp,eax
  41099c:	popa   
  41099d:	stos   BYTE PTR es:[edi],al
  41099e:	add    BYTE PTR [edi],cl
  4109a0:	mov    al,bl
  4109a2:	jnp    0x41092e
  4109a4:	les    edx,FWORD PTR [ebx-0x3387c885]
  4109aa:	retf   
  4109ab:	sar    cl,0x2e
  4109ae:	xchg   esi,eax
  4109af:	test   edi,edx
  4109b1:	mov    esp,0x9938bf76
  4109b6:	xor    dl,BYTE PTR [esi]
  4109b8:	mov    dh,0x21
  4109ba:	push   ebx
  4109bb:	cld    
  4109bc:	push   ecx
  4109bd:	adc    dh,BYTE PTR [esi-0x77]
  4109c0:	in     eax,0x3d
  4109c2:	fdivr  st(2),st
  4109c4:	inc    ebp
  4109c5:	lds    edx,FWORD PTR [edi+0x62]
  4109c8:	mov    dl,0xd0
  4109ca:	repnz push ss
  4109cc:	out    dx,al
  4109cd:	out    dx,eax
  4109ce:	aaa    
  4109cf:	mov    esi,0xa67f8f53
  4109d4:	inc    ebx
  4109d5:	cwde   
  4109d6:	fstp   DWORD PTR [ecx+edx*1-0x623fcfa4]
  4109dd:	mov    dh,0x1f
  4109df:	xor    ebx,DWORD PTR [edi+edi*8]
  4109e2:	ins    BYTE PTR es:[edi],dx
  4109e3:	in     eax,0x67
  4109e5:	pop    esp
  4109e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109e7:	cwde   
  4109e8:	(bad)  
  4109e9:	fisubr DWORD PTR [ecx+0x5aae4f77]
  4109ef:	pop    esi
  4109f0:	sub    esp,DWORD PTR [edx-0x68b6c5fb]
  4109f6:	sbb    al,0xa1
  4109f8:	cmp    dl,BYTE PTR [edi+0x56]
  4109fb:	call   0x613b34e2
  410a00:	adc    BYTE PTR [edx],bh
  410a02:	push   cs
  410a03:	inc    edi
  410a04:	mov    cl,0xef
  410a06:	cmp    ebx,edi
  410a08:	jmp    0xc3d4cad9
  410a0d:	out    0x94,al
  410a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a10:	pop    ecx
  410a11:	aas    
  410a12:	lahf   
  410a13:	cmova  esi,DWORD PTR [eax-0x1b374489]
  410a1a:	dec    edx
  410a1b:	daa    
  410a1c:	repnz sub BYTE PTR [edx+0x19503144],0xeb
  410a24:	or     ah,al
  410a26:	out    dx,al
  410a27:	cmp    eax,0x91506cfc
  410a2c:	dec    ebx
  410a2d:	iret   
  410a2e:	add    DWORD PTR [esi],ebp
  410a30:	xchg   ebp,eax
  410a31:	imul   edx,ebx,0x7174e5d2
  410a37:	enter  0xc61c,0xbc
  410a3b:	mov    esp,0xb090338e
  410a40:	dec    esi
  410a41:	pop    esp
  410a42:	leave  
  410a43:	sar    DWORD PTR [ebx+0x727a8698],0x4e
  410a4a:	sub    bl,dl
  410a4c:	and    ebx,DWORD PTR [esi]
  410a4e:	sub    bh,BYTE PTR [edx]
  410a50:	fsubr  QWORD PTR [edx]
  410a52:	xchg   BYTE PTR [edx-0x68],dh
  410a55:	(bad)  
  410a56:	pushw  ss
  410a58:	cli    
  410a59:	or     al,0xaf
  410a5b:	arpl   WORD PTR [edx],bp
  410a5d:	pop    edi
  410a5e:	inc    ebp
  410a5f:	gs and al,0x17
  410a62:	add    eax,0x3c2ae29a
  410a67:	ret    
  410a68:	xrelease mov DWORD PTR [edi+0x5b],ebx
  410a6c:	cli    
  410a6d:	add    ebp,ecx
  410a6f:	mov    esi,0x88b210c8
  410a74:	pop    esi
  410a75:	sahf   
  410a76:	sbb    al,0x44
  410a78:	inc    ecx
  410a79:	xlat   BYTE PTR gs:[ebx]
  410a7b:	call   0xb03b:0x62a0ee89
  410a82:	push   ds
  410a83:	mov    BYTE PTR [edi+0x5d781fdb],dh
  410a89:	sub    bh,BYTE PTR [edx-0x48355b]
  410a8f:	jl     0x410ad4
  410a91:	ins    DWORD PTR es:[edi],dx
  410a92:	inc    ebp
  410a93:	mov    cl,BYTE PTR [eax-0x21]
  410a96:	xchg   ecx,eax
  410a97:	or     edi,esp
  410a99:	xchg   edi,eax
  410a9a:	in     al,0x8
  410a9c:	out    dx,al
  410a9d:	sub    BYTE PTR [ebx-0x7ae0c846],al
  410aa3:	adc    DWORD PTR ds:[esi-0xaea1573],esp
  410aaa:	cs cdq 
  410aac:	scas   al,BYTE PTR es:[edi]
  410aad:	and    DWORD PTR [eax-0x30],0xffffffad
  410ab1:	mov    ds:0x88a10bd6,eax
  410ab6:	jmp    0x410ada
  410ab8:	xchg   BYTE PTR [ebx],al
  410aba:	(bad)  
  410abb:	adc    esp,DWORD PTR [ebx+0xd53c8cc]
  410ac1:	or     al,0xf6
  410ac3:	popa   
  410ac4:	inc    DWORD PTR [edx-0x63]
  410ac7:	dec    esp
  410ac8:	retf   
  410ac9:	cmp    DWORD PTR [eax+0x43],esp
  410acc:	repnz ss (bad) 
  410acf:	cmp    BYTE PTR [eax],al
  410ad1:	imul   edi,DWORD PTR [ecx+ebx*2-0x40],0x31
  410ad6:	or     al,0x37
  410ad8:	into   
  410ad9:	imul   esi,DWORD PTR [ebp+0x5f],0x9762345a
  410ae0:	jns    0x410b12
  410ae2:	jp     0x410abe
  410ae4:	jge    0x410a74
  410ae6:	sti    
  410ae7:	stc    
  410ae8:	repnz push 0xffffff9b
  410aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aec:	iret   
  410aed:	xor    esi,0xb42e21b8
  410af3:	push   ecx
  410af4:	jge    0x410b22
  410af6:	adc    DWORD PTR [eax],ebp
  410af8:	std    
  410af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410afa:	aas    
  410afb:	jmp    0x3678:0x53bbefab
  410b02:	sub    DWORD PTR [ecx+ebx*2+0x3eb80901],0xb32bf5a9
  410b0d:	mov    ebp,0x902f9db7
  410b12:	loope  0x410af4
  410b14:	xor    al,bh
  410b16:	fwait
  410b17:	rcl    DWORD PTR [esi+0x13],0x61
  410b1b:	std    
  410b1c:	sub    al,0x59
  410b1e:	xor    eax,0xe4578a41
  410b23:	push   esp
  410b24:	add    DWORD PTR [eax],eax
  410b26:	sbb    al,0x5e
  410b28:	jns    0x410b0d
  410b2a:	xchg   ecx,eax
  410b2b:	push   cs
  410b2c:	fldenv [eax]
  410b2e:	test   eax,0x732742de
  410b33:	or     edi,ecx
  410b35:	in     al,dx
  410b36:	fisub  DWORD PTR [edx-0x733c3de3]
  410b3c:	stos   BYTE PTR es:[edi],al
  410b3d:	mov    BYTE PTR [ecx-0x16],dl
  410b40:	xchg   edx,eax
  410b41:	inc    esi
  410b42:	mov    ebx,0x4074ceec
  410b47:	lahf   
  410b48:	das    
  410b49:	sub    bl,dh
  410b4b:	and    al,0x96
  410b4d:	pop    ecx
  410b4e:	jmp    0xf804b8c
  410b53:	mov    ecx,0x903a13e2
  410b58:	inc    ebp
  410b59:	ins    BYTE PTR es:[edi],dx
  410b5a:	pop    eax
  410b5b:	inc    esi
  410b5c:	mov    al,0x29
  410b5e:	jbe    0x410bdc
  410b60:	iret   
  410b61:	pop    ebx
  410b62:	scas   al,BYTE PTR es:[edi]
  410b63:	pop    ebx
  410b64:	ins    DWORD PTR es:[edi],dx
  410b65:	add    esp,DWORD PTR [ebx+0x78021ba2]
  410b6b:	fadd   DWORD PTR [ecx]
  410b6d:	inc    edi
  410b6e:	mov    edi,DWORD PTR [ebx+0x34061c9]
  410b74:	test   eax,0xf0cb007a
  410b79:	and    al,0x4b
  410b7b:	je     0x410bc6
  410b7d:	mov    al,0x2b
  410b7f:	(bad)  
  410b80:	out    dx,al
  410b81:	pop    ss
  410b82:	pop    esp
  410b83:	icebp  
  410b84:	cmp    ebp,eax
  410b86:	loopne 0x410b3f
  410b88:	aam    0x6d
  410b8a:	clc    
  410b8b:	jecxz  0x410b40
  410b8d:	loopne 0x410c0b
  410b8f:	sti    
  410b90:	(bad)  
  410b92:	stc    
  410b93:	fsub   QWORD PTR [ecx]
  410b95:	cmp    DWORD PTR [edi-0x6],edi
  410b98:	mov    al,0xc7
  410b9a:	sbb    DWORD PTR [ebp+ebx*1-0x15],eax
  410b9e:	add    DWORD PTR [edx],eax
  410ba0:	mov    eax,ds:0xa2f3f176
  410ba5:	sub    al,0x5d
  410ba7:	ret    
  410ba8:	xlat   BYTE PTR ds:[ebx]
  410ba9:	sbb    BYTE PTR [esi+eax*1+0x3f],ah
  410bad:	xchg   ecx,eax
  410bae:	outs   dx,DWORD PTR ds:[esi]
  410baf:	jp     0x410b41
  410bb1:	cli    
  410bb2:	xchg   ecx,eax
  410bb3:	xadd   ch,ch
  410bb6:	xor    al,0x6c
  410bb8:	mov    edx,db4
  410bbb:	jbe    0x410bcb
  410bbd:	jmp    0x410bd2
  410bbf:	es into 
  410bc1:	ror    esi,cl
  410bc3:	stos   BYTE PTR es:[edi],al
  410bc4:	rol    BYTE PTR [eax-0x2c28e239],1
  410bca:	(bad)  
  410bcb:	lds    ebx,FWORD PTR [ecx+edx*1-0x23]
  410bcf:	fnstcw WORD PTR [edi+0x375aaef1]
  410bd5:	ja     0x410b83
  410bd7:	jge    0x410c0b
  410bd9:	dec    edi
  410bda:	or     WORD PTR gs:[esi+eax*8-0x7e6385c2],bx
  410be3:	jg     0x410c32
  410be5:	mov    esi,0x667b61ec
  410bea:	push   eax
  410beb:	and    BYTE PTR [ecx],dh
  410bed:	jno    0x410bb1
  410bef:	push   es
  410bf0:	mov    eax,ds:0x5d5006d8
  410bf5:	pop    esp
  410bf6:	rcr    DWORD PTR [edx],cl
  410bf8:	nop
  410bf9:	js     0x410c2b
  410bfb:	mov    dh,0xe3
  410bfd:	sbb    al,0xf2
  410bff:	pop    edi
  410c00:	push   0x42
  410c02:	push   0xb14c13f2
  410c07:	loope  0x410bb1
  410c09:	pop    ebp
  410c0a:	pop    ebp
  410c0b:	jge    0x410bbe
  410c0d:	inc    esp
  410c0e:	out    dx,al
  410c0f:	mov    ch,0xf
  410c11:	std    
  410c12:	dec    ebx
  410c13:	mov    bl,0xaf
  410c15:	pop    es
  410c16:	popf   
  410c17:	div    dh
  410c19:	cmc    
  410c1a:	or     dl,BYTE PTR ds:0xa6fe6f10
  410c20:	cli    
  410c21:	scas   al,BYTE PTR es:[edi]
  410c22:	es aam 0xad
  410c25:	dec    ebp
  410c26:	cmp    al,0x0
  410c28:	fisub  WORD PTR [edx-0x27]
  410c2b:	pop    ss
  410c2c:	(bad)  
  410c2e:	xor    al,0x34
  410c30:	retf   
  410c31:	mov    al,0x6a
  410c33:	cmp    esp,DWORD PTR [ebx-0xd]
  410c36:	pop    ss
  410c37:	sbb    DWORD PTR [ebx],eax
  410c39:	push   es
  410c3a:	inc    ebp
  410c3b:	lods   eax,DWORD PTR ds:[esi]
  410c3c:	(bad)  
  410c3d:	lods   al,BYTE PTR ds:[esi]
  410c3e:	xchg   BYTE PTR [ecx],al
  410c40:	sbb    al,0x3b
  410c42:	dec    esi
  410c43:	and    ebx,ecx
  410c45:	fstp   DWORD PTR [eax+0x1c36e1d9]
  410c4b:	es inc edx
  410c4d:	mov    ds:0x62ac134,eax
  410c52:	inc    edx
  410c53:	sbb    al,0xa7
  410c55:	cs pop ebp
  410c57:	jb     0x410c27
  410c59:	fsubr  DWORD PTR [ebx+0x59233ec3]
  410c5f:	rol    DWORD PTR [ebp+0x602f5fa8],1
  410c65:	cmp    ch,BYTE PTR [edi-0x5e]
  410c68:	push   edx
  410c69:	lock and esp,eax
  410c6c:	pop    eax
  410c6d:	adc    eax,0xe1687baa
  410c72:	hlt    
  410c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c74:	fiadd  WORD PTR [ebx]
  410c76:	ret    
  410c77:	mov    al,ds:0xf73d724
  410c7c:	scas   al,BYTE PTR es:[edi]
  410c7d:	push   ss
  410c7e:	sub    al,0x49
  410c80:	cmp    BYTE PTR gs:[esp+ecx*4],ch
  410c84:	repnz scas eax,DWORD PTR es:[edi]
  410c86:	aaa    
  410c87:	dec    esp
  410c88:	xor    DWORD PTR [esi+0x4e],edi
  410c8b:	mov    dh,0xa9
  410c8d:	add    BYTE PTR [esi+0x31],dl
  410c90:	aas    
  410c91:	call   0x624a:0xde6700a
  410c98:	mov    cl,BYTE PTR [ebp+0x5c]
  410c9b:	mov    WORD PTR [eax-0x82a45dd],gs
  410ca1:	add    DWORD PTR ds:0xc25256af,edi
  410ca7:	scas   al,BYTE PTR es:[edi]
  410ca8:	popa   
  410ca9:	xchg   edx,eax
  410caa:	daa    
  410cab:	jmp    0x410c9c
  410cad:	jae    0x410c9c
  410caf:	adc    al,0x39
  410cb1:	adc    esi,esi
  410cb3:	mov    edi,0x4e85f673
  410cb8:	(bad)  
  410cb9:	pop    edx
  410cba:	inc    ecx
  410cbb:	adc    dh,BYTE PTR [esi]
  410cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cbe:	in     eax,0xbe
  410cc0:	out    0x91,al
  410cc2:	jns    0x410c47
  410cc4:	(bad)  
  410cc5:	sbb    esp,DWORD PTR [eax+0x74]
  410cc8:	dec    edx
  410cc9:	call   0x24f19fd4
  410cce:	leave  
  410ccf:	mov    edi,0x4c634f11
  410cd4:	pop    ebp
  410cd5:	daa    
  410cd6:	mov    bh,BYTE PTR [esi-0x67b7364b]
  410cdc:	xor    DWORD PTR [edx],0x43
  410cdf:	inc    eax
  410ce0:	xor    al,0x6
  410ce2:	sbb    ah,cl
  410ce4:	pop    es
  410ce5:	and    BYTE PTR [ebx],dl
  410ce7:	lods   al,BYTE PTR ds:[esi]
  410ce8:	mov    eax,0x528cafc1
  410ced:	fsub   QWORD PTR [esi-0xf40dc04]
  410cf3:	mov    ch,0x79
  410cf5:	iret   
  410cf6:	mov    edx,0xc0fb7272
  410cfb:	call   0x5f75a910
  410d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d01:	or     BYTE PTR [edi+0x0],bh
  410d04:	int    0xeb
  410d06:	iret   
  410d07:	repz pop ss
  410d09:	mov    edx,0x43dfa8aa
  410d0e:	jg     0x410c9b
  410d10:	add    DWORD PTR [eax+0x1942c83c],edi
  410d16:	int    0x2
  410d18:	popf   
  410d19:	lahf   
  410d1a:	push   esp
  410d1b:	jecxz  0x410d78
  410d1d:	fwait
  410d1e:	lods   eax,DWORD PTR ds:[esi]
  410d1f:	dec    ebx
  410d20:	sub    al,0x90
  410d22:	push   ss
  410d23:	push   ds
  410d24:	or     esp,ebp
  410d26:	psubusw mm5,QWORD PTR [ebp+0x2ace7e9d]
  410d2d:	mov    ds:0x70b07eea,eax
  410d32:	inc    edx
  410d33:	idiv   DWORD PTR [edx-0x1ac9e4cb]
  410d39:	jg     0x410d0c
  410d3b:	sbb    BYTE PTR [ecx-0x14],0xe2
  410d3f:	popa   
  410d40:	inc    edi
  410d41:	mov    al,ds:0x7799fb9b
  410d46:	mov    WORD PTR [esi-0x9],fs
  410d49:	cdq    
  410d4a:	fistp  DWORD PTR [esi-0x67273b1d]
  410d50:	scas   eax,DWORD PTR es:[edi]
  410d51:	bound  ecx,QWORD PTR ds:0x57df0705
  410d57:	mov    edx,0x306c77fb
  410d5c:	fild   WORD PTR [edx+0x5]
  410d5f:	repz xor eax,0x45069772
  410d65:	(bad)  
  410d67:	and    al,0x51
  410d69:	and    esi,DWORD PTR [edi-0x12728e84]
  410d6f:	ret    0x8209
  410d72:	push   es
  410d73:	jp     0x410d0a
  410d75:	std    
  410d76:	cmp    al,0x4c
  410d78:	or     al,0xec
  410d7a:	inc    BYTE PTR [esi-0x46]
  410d7d:	xchg   esi,eax
  410d7e:	(bad)  
  410d7f:	jne    0x410d2c
  410d81:	repnz fimul DWORD PTR [eax+0x77]
  410d85:	iret   
  410d86:	hlt    
  410d87:	clc    
  410d88:	and    eax,0x698970ee
  410d8d:	inc    edi
  410d8e:	sbb    eax,0x2d7b6c17
  410d93:	ror    DWORD PTR [eax+ebx*2+0x198a58fe],cl
  410d9a:	mov    al,0x4d
  410d9c:	inc    edi
  410d9d:	pop    ds
  410d9e:	adc    al,0xe4
  410da0:	aas    
  410da1:	out    dx,eax
  410da2:	mov    DWORD PTR [ebp-0x6b],edx
  410da5:	fiadd  DWORD PTR [eax]
  410da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410da8:	out    0xac,eax
  410daa:	add    BYTE PTR [ecx-0x8],dh
  410dad:	sub    al,0x6b
  410daf:	aad    0x37
  410db1:	jecxz  0x410e1b
  410db3:	xchg   ecx,eax
  410db4:	push   eax
  410db5:	gs call 0x87ab:0x7b66b638
  410dbd:	sub    DWORD PTR [ebp+0x71dc3754],esp
  410dc3:	ret    
  410dc4:	ret    
  410dc5:	ss xchg ecx,eax
  410dc7:	test   esi,ebx
  410dc9:	push   ebx
  410dca:	xchg   edi,eax
  410dcb:	popf   
  410dcc:	dec    edi
  410dcd:	mov    esp,ebp
  410dcf:	push   esi
  410dd0:	mov    dl,0xe2
  410dd2:	std    
  410dd3:	sbb    BYTE PTR [eax+0x72],bl
  410dd6:	pop    edx
  410dd7:	push   esp
  410dd8:	jl     0x410d7d
  410dda:	jmp    FWORD PTR [esp+ebx*4+0x7c39bd9d]
  410de1:	dec    edi
  410de2:	jle    0x410e3c
  410de4:	(bad)  
  410de5:	lock xor BYTE PTR [ebp-0x72],ch
  410de9:	mov    cl,0xf9
  410deb:	pushf  
  410dec:	popa   
  410ded:	xlat   BYTE PTR ds:[ebx]
  410dee:	and    eax,0x505d7984
  410df3:	jns    0x410e61
  410df5:	retf   
  410df6:	mov    ah,0xca
  410df8:	mov    ebx,0x96c6911a
  410dfd:	add    BYTE PTR [ebp+0x5f],bh
  410e00:	inc    eax
  410e01:	xor    esi,DWORD PTR [edi-0x48d3b427]
  410e07:	pop    es
  410e08:	(bad)  
  410e0a:	xchg   ebp,eax
  410e0b:	adc    eax,0xf81fa2fc
  410e10:	xchg   ecx,eax
  410e11:	push   es
  410e12:	xor    DWORD PTR [edi+ebp*1-0x75],esi
  410e16:	cmp    ebx,DWORD PTR [ecx+0x21]
  410e19:	out    dx,eax
  410e1a:	out    0x8b,eax
  410e1c:	out    0xfd,al
  410e1e:	pop    ds
  410e1f:	mov    ?,edx
  410e21:	cwde   
  410e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e23:	cmp    DWORD PTR [edx],edi
  410e25:	jmp    0x57bddad2
  410e2a:	adc    eax,0x9f26aa4d
  410e2f:	add    BYTE PTR [ecx-0x3efa90bf],ch
  410e35:	mov    ebp,0xdc476551
  410e3a:	xchg   esp,eax
  410e3b:	outs   dx,DWORD PTR ds:[esi]
  410e3c:	xor    dl,ah
  410e3e:	repnz in al,dx
  410e40:	cmp    ebp,ebp
  410e42:	pop    ebx
  410e43:	bound  esp,QWORD PTR [ecx+edi*1-0xd]
  410e47:	in     al,dx
  410e48:	lds    eax,FWORD PTR [ebp+0x5]
  410e4b:	sbb    cl,BYTE PTR [ecx+ecx*8-0x31c8dbb8]
  410e52:	ret    
  410e53:	hlt    
  410e54:	cmp    al,0xe5
  410e56:	pop    ss
  410e57:	mov    esi,0xec415397
  410e5c:	fcom   QWORD PTR [edx-0x4b]
  410e5f:	pop    ebx
  410e60:	ss pop ecx
  410e62:	call   0x55ac:0xf941000d
  410e69:	sbb    al,0xaa
  410e6b:	ja     0x410ec6
  410e6d:	jne    0x410dfe
  410e6f:	cmp    dh,dl
  410e71:	sar    DWORD PTR [esi+0x1f],0x2b
  410e75:	push   ecx
  410e76:	idiv   ah
  410e78:	jmp    DWORD PTR [eax+ebp*1+0x19c14617]
  410e7f:	or     eax,0xcad9605
  410e84:	das    
  410e85:	jmp    0xc626:0x9136064c
  410e8c:	rol    BYTE PTR [edx-0x380d108c],1
  410e92:	inc    ebx
  410e93:	jg     0x410e6d
  410e95:	ins    BYTE PTR es:[edi],dx
  410e96:	cmp    BYTE PTR ss:0xab51ad11,0xbf
  410e9e:	inc    edx
  410e9f:	sar    BYTE PTR [edi-0x52],1
  410ea2:	pop    es
  410ea3:	jp     0x410ea2
  410ea5:	addr16 repz cwde 
  410ea8:	inc    esi
  410ea9:	inc    ebx
  410eaa:	in     eax,0xf8
  410eac:	jp     0x410ea7
  410eae:	and    al,0x5d
  410eb0:	and    BYTE PTR [edx],dh
  410eb2:	mov    ss,WORD PTR [edi+0x146091a8]
  410eb8:	iret   
  410eb9:	daa    
  410eba:	jp     0x410e65
  410ebc:	sbb    BYTE PTR [ebx+0x6d],ch
  410ebf:	lds    eax,FWORD PTR ds:0x387f663e
  410ec5:	or     edi,DWORD PTR [eax-0x33]
  410ec8:	(bad)  
  410ec9:	(bad)  
  410eca:	cmp    eax,0x83ba7f20
  410ecf:	ds inc edi
  410ed1:	not    dl
  410ed3:	push   edx
  410ed4:	scas   eax,DWORD PTR es:[edi]
  410ed5:	arpl   di,dx
  410ed7:	enter  0xfc68,0x12
  410edb:	mov    esi,0x5e1b9fda
  410ee0:	jne    0x410ebd
  410ee2:	mov    cl,0x1a
  410ee4:	fdiv   st,st(6)
  410ee6:	xchg   ebx,eax
  410ee7:	ret    
  410ee8:	mov    gs,WORD PTR [eax]
  410eea:	sub    eax,0xe6e7dbd8
  410eef:	sbb    cl,dh
  410ef1:	push   cs
  410ef2:	fcom   QWORD PTR [edx]
  410ef4:	mov    bh,0x67
  410ef6:	jno    0x410eed
  410ef8:	jp     0x410f20
  410efa:	call   0x5ebb:0xc0d8473b
  410f01:	pop    edx
  410f02:	adc    al,0x48
  410f04:	(bad)  
  410f05:	xchg   edi,eax
  410f06:	ins    BYTE PTR es:[edi],dx
  410f07:	hlt    
  410f08:	imul   BYTE PTR ds:0x90932edf
  410f0e:	std    
  410f0f:	fild   WORD PTR [esi]
  410f11:	das    
  410f12:	lds    ecx,FWORD PTR [edx]
  410f14:	sar    al,0xe3
  410f17:	xor    BYTE PTR [edi-0x3e],0x9e
  410f1b:	and    DWORD PTR [ebp-0x11],0x74
  410f1f:	inc    ebp
  410f20:	cs sub al,0xaa
  410f23:	inc    esp
  410f24:	pop    ss
  410f25:	jns    0x410f92
  410f27:	in     al,dx
  410f28:	popa   
  410f29:	jl     0x410f97
  410f2b:	cmp    bl,BYTE PTR [edi+0x41c07694]
  410f31:	(bad)  
  410f32:	pop    edi
  410f33:	or     DWORD PTR [edx+0x77],ecx
  410f36:	pop    ds
  410f37:	cmp    eax,DWORD PTR [eax]
  410f39:	lock js 0x410fa2
  410f3c:	rol    BYTE PTR ds:0x8aaaef26,1
  410f42:	jne    0x410efc
  410f44:	or     DWORD PTR [eax],0x2a08892d
  410f4a:	dec    esp
  410f4b:	retf   0xd5
  410f4e:	pop    ebp
  410f4f:	or     ecx,ebp
  410f51:	mov    eax,ds:0xf1b48a35
  410f56:	push   0x2
  410f58:	mov    ah,0xb2
  410f5a:	xchg   BYTE PTR [ebp-0x2dd608e2],cl
  410f60:	push   eax
  410f61:	int3   
  410f62:	lahf   
  410f63:	ror    DWORD PTR [esi],cl
  410f65:	loopne 0x410f56
  410f67:	mov    BYTE PTR [eax],dh
  410f69:	icebp  
  410f6a:	xchg   ebp,eax
  410f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f6c:	adc    al,BYTE PTR [edi+ebp*8-0x40ac0005]
  410f73:	cmc    
  410f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f75:	lahf   
  410f76:	push   0xffffffcc
  410f78:	mov    bl,0x32
  410f7a:	lock push cs
  410f7c:	pop    ds
  410f7d:	mov    DWORD PTR [edx+0x378a182a],eax
  410f83:	mov    ch,0xfb
  410f85:	inc    ebx
  410f86:	stos   DWORD PTR es:[edi],eax
  410f87:	ds dec esp
  410f89:	mov    esi,0x983af7d7
  410f8e:	and    bh,BYTE PTR [eax]
  410f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f91:	xchg   esi,eax
  410f92:	inc    edi
  410f93:	jne    0x411010
  410f95:	lock in al,dx
  410f97:	jg     0x410f4a
  410f99:	loope  0x410fd6
  410f9b:	xor    eax,0xd69e0f67
  410fa0:	cmc    
  410fa1:	inc    ebx
  410fa2:	pop    ds
  410fa3:	mov    dh,BYTE PTR [eax]
  410fa5:	mov    dh,0xa1
  410fa7:	fnstenv [ecx+0x6f]
  410faa:	mov    al,BYTE PTR [edi]
  410fac:	xchg   ebp,eax
  410fad:	inc    ecx
  410fae:	dec    ebp
  410faf:	pop    esi
  410fb0:	test   al,0x9b
  410fb2:	push   ds
  410fb3:	pop    ebx
  410fb4:	dec    eax
  410fb5:	inc    esp
  410fb6:	int3   
  410fb7:	xchg   edi,eax
  410fb8:	mov    esi,0x175c4d3a
  410fbd:	push   eax
  410fbe:	mov    ecx,DWORD PTR [eax+0x7037e3b4]
  410fc4:	sub    al,0x7a
  410fc6:	mov    ch,0x24
  410fc8:	mov    al,0xa6
  410fca:	xor    al,0x3c
  410fcc:	nop
  410fcd:	stos   DWORD PTR es:[edi],eax
  410fce:	rol    BYTE PTR [esp+eax*2-0x19],cl
  410fd2:	ret    
  410fd3:	jmp    0x3e0e:0xa55c8d11
  410fda:	sar    DWORD PTR [ebp+0x1fda5cf5],1
  410fe0:	cwde   
  410fe1:	clc    
  410fe2:	mov    esi,0x25f25096
  410fe7:	and    ch,BYTE PTR ds:0xd6210d4a
  410fed:	outs   dx,BYTE PTR ds:[esi]
  410fee:	cmp    eax,DWORD PTR [eax-0x2445d595]
  410ff4:	xchg   DWORD PTR [esi+edi*4-0xe6ed38f],edx
  410ffb:	or     edi,edx
  410ffd:	out    dx,eax
  410ffe:	outs   dx,DWORD PTR ds:[esi]
  410fff:	out    dx,eax
  411000:	dec    eax
  411001:	adc    DWORD PTR [esi+0x817676d],0x6fc99b05
  41100b:	add    ebx,DWORD PTR [edx-0x1960e995]
  411011:	imul   edx,DWORD PTR [ebp+ebp*8+0x5c329da6],0xffffffa0
  411019:	gs inc ebp
  41101b:	add    cl,BYTE PTR [edx+edx*4]
  41101e:	lock mov ecx,0xbdf1e6cf
  411024:	popa   
  411025:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  411027:	(bad)  
  411028:	ret    0x2c7d
  41102b:	js     0x410fb9
  41102d:	mov    ecx,DWORD PTR [esi+0x5f471d8c]
  411033:	mov    eax,ds:0x44549b88
  411038:	jge    0x411070
  41103a:	aaa    
  41103b:	add    BYTE PTR [esi-0x6eeebff6],ah
  411041:	push   ebp
  411042:	push   ebx
  411043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411044:	xchg   ebx,eax
  411045:	ret    
  411046:	mov    ah,0x63
  411048:	cs mov cl,0x1b
  41104b:	jmp    0x1ade:0x28e6d718
  411052:	mov    ds:0xb3ac0237,eax
  411057:	mov    ds:0xd5e1a845,al
  41105c:	add    esp,DWORD PTR [ebx]
  41105e:	cmp    DWORD PTR [esi],ecx
  411060:	cld    
  411061:	xchg   esi,eax
  411062:	jae    0x410feb
  411064:	leave  
  411065:	shr    BYTE PTR [edx],0x95
  411068:	hlt    
  411069:	test   DWORD PTR [edi],ecx
  41106b:	or     eax,0xa2a64618
  411070:	stos   DWORD PTR es:[edi],eax
  411071:	daa    
  411072:	jae    0x410ff8
  411074:	jbe    0x4110b4
  411076:	mov    ebp,0x63644533
  41107b:	popa   
  41107c:	lods   al,BYTE PTR ds:[esi]
  41107d:	push   0x134453f2
  411082:	shl    BYTE PTR [esp+eax*8+0x66],1
  411086:	dec    esi
  411087:	gs xor bh,bl
  41108a:	(bad)  
  41108c:	inc    eax
  41108d:	sbb    eax,0xee39f18a
  411092:	pop    ebp
  411093:	ss mov bl,0x12
  411096:	mov    ch,0x41
  411098:	mov    dl,0xea
  41109a:	stos   DWORD PTR es:[edi],eax
  41109b:	test   al,0x51
  41109d:	retf   
  41109e:	rcr    DWORD PTR [edi+0x1d],cl
  4110a1:	add    DWORD PTR [ecx+0x74851fd8],ebx
  4110a7:	outs   dx,BYTE PTR ds:[esi]
  4110a8:	int    0x68
  4110aa:	(bad)  
  4110ab:	add    esp,eax
  4110ad:	jnp    0x41110e
  4110af:	imul   eax,DWORD PTR [ecx],0x3ce0481f
  4110b5:	sbb    al,0x72
  4110b7:	(bad)  
  4110b8:	push   edi
  4110b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ba:	inc    eax
  4110bb:	inc    edi
  4110bc:	add    al,0x35
  4110be:	adc    DWORD PTR [ebp+0x47],eax
  4110c1:	sbb    al,0x81
  4110c3:	shr    edx,0x1e
  4110c6:	stos   DWORD PTR es:[edi],eax
  4110c7:	pop    edi
  4110c8:	lahf   
  4110c9:	clc    
  4110ca:	into   
  4110cb:	push   cs
  4110cc:	and    DWORD PTR [esp+esi*4+0x67],esi
  4110d0:	fsubr  DWORD PTR [ecx]
  4110d2:	ins    BYTE PTR es:[edi],dx
  4110d3:	sub    eax,0xbad96c71
  4110d8:	sbb    esi,DWORD PTR [ebp+0x59]
  4110db:	mov    bl,0x60
  4110dd:	xchg   BYTE PTR [eax-0x7ce07869],dh
  4110e3:	adc    eax,0xa51a6f7a
  4110e8:	fadd   st(2),st
  4110ea:	ss pushf 
  4110ec:	popa   
  4110ed:	mov    edi,0x6f121304
  4110f2:	jmp    0x16b5:0xbe7b141d
  4110f9:	jl     0x4110a6
  4110fb:	inc    esi
  4110fc:	cmp    dh,bh
  4110fe:	stos   BYTE PTR es:[edi],al
  4110ff:	daa    
  411100:	loopne 0x411104
  411102:	adc    cl,BYTE PTR [edx]
  411104:	daa    
  411105:	pop    edx
  411106:	gs xchg esi,eax
  411108:	(bad)  
  411109:	mov    ecx,0xc099ee2e
  41110e:	int    0x1b
  411110:	hlt    
  411111:	jmp    0xa9375db9
  411116:	cmp    DWORD PTR [ecx+ebx*8],0x17
  41111a:	idiv   BYTE PTR [ebx-0x38]
  41111d:	das    
  41111e:	push   es
  41111f:	fcomp  QWORD PTR [eax-0x55]
  411122:	mov    edi,0xef21c978
  411127:	cmp    al,ah
  411129:	jl     0x411146
  41112b:	in     eax,dx
  41112c:	leave  
  41112d:	push   ds
  41112e:	lods   al,BYTE PTR ds:[esi]
  41112f:	mov    edi,DWORD PTR [esi]
  411131:	jnp    0x411122
  411133:	rcr    al,1
  411135:	and    dh,BYTE PTR [ebx-0x15]
  411138:	adc    al,0x1e
  41113a:	pop    ebx
  41113b:	adc    al,0x56
  41113d:	add    edx,DWORD PTR [edi]
  41113f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411140:	push   ss
  411141:	xchg   BYTE PTR [esi+edi*4],al
  411144:	pop    ebx
  411145:	popa   
  411146:	sbb    al,0x6
  411148:	aaa    
  411149:	or     BYTE PTR [edi-0x47caa15a],cl
  41114f:	sbb    edi,edx
  411151:	int3   
  411152:	mov    eax,ds:0x754ea3d
  411157:	xchg   ebp,eax
  411158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411159:	adc    BYTE PTR [edx],bl
  41115b:	or     BYTE PTR [esi-0x67],dl
  41115e:	mov    edi,0x8b7df7ca
  411163:	cmp    BYTE PTR [edx],0x10
  411166:	sti    
  411167:	out    0x1b,eax
  411169:	cmc    
  41116a:	cmp    eax,DWORD PTR ds:0x856b7497
  411170:	cmp    al,0x99
  411172:	dec    ecx
  411173:	xchg   ebx,eax
  411174:	mov    WORD PTR [edi-0x367010c3],fs
  41117a:	pop    es
  41117b:	pop    esi
  41117c:	ins    DWORD PTR es:[edi],dx
  41117d:	xor    eax,0xc4703f50
  411182:	xor    dh,BYTE PTR [ecx+0x44]
  411185:	inc    ecx
  411186:	mov    dl,0x5a
  411188:	or     ebp,ebp
  41118a:	cmp    esi,ebp
  41118c:	dec    edi
  41118d:	(bad)  
  41118e:	scas   eax,DWORD PTR es:[edi]
  41118f:	shl    BYTE PTR [esi],1
  411191:	add    BYTE PTR cs:[ebx+0x2c],bl
  411195:	(bad)  
  411196:	cdq    
  411197:	cld    
  411198:	js     0x41114b
  41119a:	mov    al,ds:0xd02c97bd
  41119f:	aad    0xa2
  4111a1:	push   eax
  4111a2:	push   eax
  4111a3:	bound  eax,QWORD PTR ds:0xee4222b8
  4111a9:	jecxz  0x41115a
  4111ab:	cs lock jle 0x4111c0
  4111af:	ror    DWORD PTR [edx+0x7c],cl
  4111b2:	(bad)  
  4111b3:	cmp    DWORD PTR [esi-0x42bc9639],ecx
  4111b9:	jnp    0x4111b5
  4111bb:	jnp    0x411226
  4111bd:	xor    ebx,DWORD PTR [ebx-0x2e]
  4111c0:	mov    bl,0x73
  4111c2:	lahf   
  4111c3:	enter  0xeb5d,0xa1
  4111c7:	mov    al,0xfe
  4111c9:	div    dl
  4111cb:	mov    edx,0x267e7f71
  4111d0:	das    
  4111d1:	inc    cl
  4111d3:	and    ecx,DWORD PTR [ebx-0x4e]
  4111d6:	push   esp
  4111d7:	push   0x44
  4111d9:	loopne 0x4111af
  4111db:	adc    DWORD PTR [eax],edx
  4111dd:	icebp  
  4111de:	ror    DWORD PTR [esi-0x1a],1
  4111e1:	mov    ds:0xd182e0f5,eax
  4111e6:	hlt    
  4111e7:	mov    ds:0x5b2f2ed6,eax
  4111ec:	inc    ecx
  4111ed:	cmc    
  4111ee:	and    esi,DWORD PTR [ebp+0x6d]
  4111f1:	xor    dl,BYTE PTR [edi]
  4111f3:	pop    ss
  4111f4:	mov    eax,0xd9cd2c47
  4111f9:	jg     0x4111fe
  4111fb:	sbb    BYTE PTR [eax-0x64],al
  4111fe:	loope  0x4111f6
  411200:	sbb    BYTE PTR [eax],0x69
  411203:	xlat   BYTE PTR ds:[ebx]
  411204:	test   DWORD PTR ds:0x44e90098,0xb20bb606
  41120e:	xchg   BYTE PTR [ebp+ebp*8-0x24],bh
  411212:	stos   DWORD PTR es:[edi],eax
  411213:	push   edx
  411214:	and    ebx,DWORD PTR [ebx]
  411216:	pop    ds
  411217:	aad    0xc0
  411219:	push   ds
  41121a:	in     eax,dx
  41121b:	ja     0x411236
  41121d:	add    dl,dl
  41121f:	or     BYTE PTR [edx+0x5c84ce4a],0xed
  411226:	in     al,dx
  411227:	and    esp,DWORD PTR ds:0x2ad2e608
  41122d:	imul   esp,DWORD PTR [ebx+0x1cd74680],0xc1b73031
  411237:	jle    0x411290
  411239:	mov    ah,0xc1
  41123b:	repnz in al,dx
  41123d:	jp     0x411200
  41123f:	dec    edx
  411240:	enter  0xfe46,0xfe
  411244:	scas   al,BYTE PTR es:[edi]
  411245:	adc    ebx,esp
  411247:	mov    edx,0x1c4cc11e
  41124c:	mov    esp,0x5761f7cf
  411251:	cmp    DWORD PTR [edi+0x1e],esp
  411254:	mov    cl,0x82
  411256:	xor    ah,BYTE PTR [ebx]
  411258:	cmp    ebx,ebx
  41125a:	fistp  QWORD PTR [edi+0x3eb8e27c]
  411260:	cmp    eax,0x82385ffd
  411265:	xchg   ebx,eax
  411266:	out    dx,al
  411267:	cmp    dl,BYTE PTR [esi+0x31]
  41126a:	and    DWORD PTR [ecx-0x78],ebp
  41126d:	jo     0x4112d5
  41126f:	or     dh,BYTE PTR [ecx+edx*8+0x47]
  411273:	and    al,0x23
  411275:	call   0x96b2:0x155fea94
  41127c:	(bad)  
  41127d:	pop    ebx
  41127e:	xchg   ebx,eax
  41127f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411280:	push   ebx
  411281:	test   BYTE PTR [ebx+0x27],cl
  411284:	retf   
  411285:	ror    DWORD PTR [ecx-0x7ea954c6],0xa8
  41128c:	bound  eax,QWORD PTR [ecx-0x63]
  41128f:	mov    dh,bh
  411291:	fcomp  DWORD PTR [edi-0x30]
  411294:	sbb    al,0x44
  411296:	jmp    0xa98121d7
  41129b:	mov    ds:0x59ad301b,al
  4112a0:	jmp    0x411320
  4112a2:	pop    ecx
  4112a3:	push   edx
  4112a4:	or     eax,0x6f7b4a3c
  4112a9:	lds    ecx,FWORD PTR [edx]
  4112ab:	scas   al,BYTE PTR es:[edi]
  4112ac:	idiv   DWORD PTR [ecx-0x5a]
  4112af:	test   BYTE PTR [ecx+0x72f8224f],ah
  4112b5:	sub    edi,ebx
  4112b7:	mov    esi,0xd762cd0d
  4112bc:	jmp    0x6df6:0x82cde593
  4112c3:	lods   eax,DWORD PTR ds:[esi]
  4112c4:	and    dl,BYTE PTR [edx+0x26]
  4112c7:	mov    BYTE PTR [edi-0x48],dl
  4112ca:	ins    BYTE PTR es:[edi],dx
  4112cb:	into   
  4112cc:	lods   eax,DWORD PTR ds:[esi]
  4112cd:	inc    esp
  4112ce:	(bad)  [ebx]
  4112d0:	pop    edi
  4112d1:	lds    ecx,FWORD PTR [ecx]
  4112d3:	(bad)  
  4112d4:	or     ebx,DWORD PTR [ebp-0x6c]
  4112d7:	test   DWORD PTR [eax+0x3e7ced36],edi
  4112dd:	and    eax,0x3fb9b890
  4112e2:	rcl    BYTE PTR [esi],1
  4112e4:	stc    
  4112e5:	xchg   ebx,eax
  4112e6:	push   ebx
  4112e7:	pushf  
  4112e8:	mov    edx,0x708ebbff
  4112ed:	xor    DWORD PTR [edi-0x30],0xc7e9b410
  4112f4:	xlat   BYTE PTR ds:[ebx]
  4112f5:	xchg   DWORD PTR [edi],edx
  4112f7:	sti    
  4112f8:	cmp    dh,ah
  4112fa:	nop
  4112fb:	adc    DWORD PTR [eax-0x2cddeb57],0x398cc5c2
  411305:	push   es
  411306:	mov    eax,0x6df62d26
  41130b:	mov    edi,0x8effcecf
  411310:	lds    ebx,FWORD PTR [ecx+0x405cbf27]
  411316:	mov    ds:0x1cfc4ab4,eax
  41131b:	cmp    al,0x43
  41131d:	pop    ebx
  41131e:	or     bh,ch
  411320:	js     0x411328
  411322:	xor    al,0x82
  411324:	test   al,0x86
  411326:	sti    
  411327:	jo     0x411319
  411329:	(bad)  
  41132a:	inc    ecx
  41132b:	fdivr  QWORD PTR [edi]
  41132d:	cdq    
  41132e:	fcmovb st,st(3)
  411330:	ret    
  411331:	push   0x28
  411333:	test   eax,0xa5f433d5
  411338:	pop    edx
  411339:	add    DWORD PTR [esi-0x5f67f566],eax
  41133f:	test   eax,0xa6fa150e
  411344:	xor    al,0xd6
  411346:	push   edx
  411347:	xor    eax,0xf403858f
  41134c:	mov    ch,0x3b
  41134e:	loope  0x4113be
  411350:	rcr    DWORD PTR [ecx+0x5716fdd5],1
  411356:	mov    edi,0xad7cd61
  41135b:	data16 xchg ah,ah
  41135e:	xchg   ebx,eax
  41135f:	out    dx,al
  411360:	mov    ds:0xbdb8163d,al
  411365:	xchg   ecx,eax
  411366:	push   esp
  411367:	xor    BYTE PTR [ecx],al
  411369:	leave  
  41136a:	enter  0x62a4,0x18
  41136e:	loop   0x411360
  411370:	cli    
  411371:	aad    0xb
  411373:	popf   
  411374:	add    BYTE PTR [ebx+esi*1+0x71],bl
  411378:	adc    ebp,edi
  41137a:	aaa    
  41137b:	repz retf 
  41137d:	pop    edx
  41137e:	sub    al,BYTE PTR [ecx]
  411380:	pop    ds
  411381:	dec    edx
  411382:	inc    ecx
  411383:	loopne 0x4113da
  411385:	push   ss
  411386:	jo     0x4113a8
  411388:	jge    0x411368
  41138a:	or     al,0x83
  41138c:	hlt    
  41138d:	inc    ebp
  41138e:	add    bl,BYTE PTR [ebp+0x40cc73e1]
  411394:	jl     0x411353
  411396:	jl     0x411404
  411398:	fld    QWORD PTR [edi+0x4d]
  41139b:	fscale 
  41139d:	and    eax,0x97615444
  4113a2:	dec    ebx
  4113a3:	sbb    al,0x62
  4113a5:	or     al,0x18
  4113a7:	(bad)  
  4113a8:	leave  
  4113a9:	add    DWORD PTR [ebp-0x6b54bd25],edi
  4113af:	sub    eax,0x975ce944
  4113b4:	push   ebp
  4113b5:	nop
  4113b6:	and    eax,0xdd2eaee8
  4113bb:	sub    al,bl
  4113bd:	adc    edi,DWORD PTR [esi]
  4113bf:	sub    BYTE PTR [edi+0x47],ch
  4113c2:	(bad)  
  4113c3:	pusha  
  4113c4:	and    cl,ch
  4113c6:	cmp    ebp,DWORD PTR [ebp-0x4c]
  4113c9:	push   0xffffffc2
  4113cb:	test   cl,dl
  4113cd:	adc    dl,cl
  4113cf:	add    DWORD PTR [ecx+0x5e],esi
  4113d2:	jle    0x411374
  4113d4:	fwait
  4113d5:	jmp    0xd7f7168b
  4113da:	ins    BYTE PTR es:[edi],dx
  4113db:	inc    edx
  4113dc:	pop    ebp
  4113dd:	(bad)  
  4113df:	xor    al,0xb
  4113e1:	xor    al,0x6d
  4113e3:	pusha  
  4113e4:	outs   dx,BYTE PTR ds:[esi]
  4113e5:	gs popa 
  4113e7:	data16 sub al,0x33
  4113ea:	pop    DWORD PTR [edx+0x3f]
  4113ed:	pop    ecx
  4113ee:	push   ebx
  4113ef:	(bad)  
  4113f0:	idiv   DWORD PTR [edx]
  4113f2:	push   edi
  4113f3:	into   
  4113f4:	pop    ebx
  4113f5:	fcmovu st,st(0)
  4113f7:	int3   
  4113f8:	iret   
  4113f9:	sti    
  4113fa:	and    eax,0x4c100ef9
  4113ff:	aam    0x11
  411401:	retf   
  411402:	cli    
  411403:	push   eax
  411404:	xchg   edi,eax
  411405:	inc    esp
  411406:	mov    bh,0x84
  411408:	sub    BYTE PTR [eax],0x4b
  41140b:	aad    0x7e
  41140d:	pop    esi
  41140e:	jno    0x4113b3
  411410:	jmp    0x40f3:0x64238005
  411417:	adc    bh,bl
  411419:	xor    DWORD PTR [eax],ebx
  41141b:	jecxz  0x411446
  41141d:	aam    0x43
  41141f:	nop
  411420:	cmc    
  411421:	imul   ebx,DWORD PTR [eax+0xc],0x98cff42a
  411428:	mov    ebp,0xa26a3847
  41142d:	gs adc esi,eax
  411430:	jns    0x41140e
  411432:	mov    cl,0xa9
  411434:	inc    eax
  411435:	pushf  
  411436:	xor    esi,DWORD PTR [esi+0x740fa58b]
  41143c:	adc    eax,0x6a1aa3c6
  411441:	xor    DWORD PTR [ecx-0x13e6bf2c],edi
  411447:	mov    WORD PTR [edi+0x7fdeee45],?
  41144d:	in     al,0xa3
  41144f:	sar    DWORD PTR [eax],1
  411451:	jns    0x411450
  411453:	es push ebx
  411455:	outs   dx,DWORD PTR ds:[esi]
  411456:	push   ebx
  411457:	out    0x3e,al
  411459:	bound  edx,QWORD PTR [eax+ebp*2]
  41145c:	push   edi
  41145d:	or     BYTE PTR [edx+0x5561f52d],0x33
  411464:	js     0x41144a
  411466:	(bad)  
  411467:	mov    edi,DWORD PTR [esi-0x4f]
  41146a:	jp     0x411452
  41146c:	cli    
  41146d:	arpl   WORD PTR [edx-0x2b],si
  411470:	test   DWORD PTR [ecx+0x4ca06f13],edi
  411476:	fld    QWORD PTR [edi-0x24]
  411479:	push   ebx
  41147a:	outs   dx,DWORD PTR ds:[esi]
  41147b:	adc    edx,DWORD PTR [ebp-0x3c]
  41147e:	pop    ecx
  41147f:	cli    
  411480:	push   ds
  411481:	xor    bh,BYTE PTR [edi]
  411483:	pop    ebp
  411484:	scas   al,BYTE PTR es:[edi]
  411485:	or     BYTE PTR [eax],cl
  411487:	mov    eax,0x91f3ce0e
  41148c:	add    DWORD PTR [esi],0x78885509
  411492:	mov    ebp,0x87b4a6c9
  411497:	nop
  411498:	mov    BYTE PTR [ecx],dh
  41149a:	inc    ecx
  41149b:	aaa    
  41149c:	imul   esp,DWORD PTR [ecx-0x8fe10d3],0xe51a2ac0
  4114a6:	rcl    DWORD PTR [ebx+eax*2+0x0],1
  4114aa:	inc    ebp
  4114ab:	sub    al,0x1a
  4114ad:	push   esp
  4114ae:	imul   esp,DWORD PTR [ebx],0xffffffa6
  4114b1:	jle    0x41144d
  4114b3:	fisttp WORD PTR [ecx-0x27]
  4114b6:	push   ss
  4114b7:	bound  edx,QWORD PTR [ecx+edi*4+0x48]
  4114bb:	(bad)  
  4114bd:	inc    esi
  4114be:	inc    ebp
  4114bf:	loopne 0x4114c8
  4114c1:	lods   al,BYTE PTR ds:[esi]
  4114c2:	jmp    0x4114c8
  4114c4:	xchg   edx,eax
  4114c5:	(bad)  
  4114c6:	fs popa 
  4114c8:	call   0xa9814e91
  4114cd:	mov    dh,0x24
  4114cf:	inc    esi
  4114d0:	xchg   BYTE PTR [edi],ch
  4114d2:	imul   esp,eax,0x6617ab25
  4114d8:	inc    edi
  4114d9:	pop    ebp
  4114da:	xor    DWORD PTR [edx+eiz*2-0x12],edx
  4114de:	cdq    
  4114df:	sbb    ebx,0x378b8c54
  4114e5:	cmp    al,0xcf
  4114e7:	inc    edx
  4114e8:	mov    es,WORD PTR [ebx-0x46]
  4114eb:	fisttp QWORD PTR [edi-0x131a8852]
  4114f1:	push   ebp
  4114f2:	lds    edi,FWORD PTR [edx]
  4114f4:	(bad)  [ecx]
  4114f6:	add    ebp,DWORD PTR [esi+0x7c]
  4114f9:	imul   eax,DWORD PTR [ecx-0x2078541d],0xcb373cd9
  411503:	pusha  
  411504:	in     al,0x99
  411506:	and    BYTE PTR [eax-0x2062b164],0x36
  41150d:	xchg   edi,eax
  41150e:	lea    edi,[ebx+0xf]
  411511:	xlat   BYTE PTR ds:[ebx]
  411512:	mov    ?,WORD PTR [ebx+0x6922c1f2]
  411518:	cli    
  411519:	dec    ebx
  41151a:	iret   
  41151b:	test   BYTE PTR [eax],bl
  41151d:	repz sub al,0x82
  411520:	dec    esp
  411521:	and    BYTE PTR [eax-0x4c21bce9],dl
  411527:	fbld   TBYTE PTR [ebp+0x36c1a702]
  41152d:	add    al,0xe0
  411530:	sqrtps xmm0,XMMWORD PTR [edi-0x56]
  411534:	mov    ds:0x2c6f0ef4,eax
  411539:	mov    cl,bl
  41153b:	(bad)  
  41153c:	push   eax
  41153d:	pop    ecx
  41153e:	xlat   BYTE PTR ds:[ebx]
  41153f:	mov    bh,dl
  411541:	rcl    BYTE PTR [ecx-0x32],1
  411544:	repnz cmp dl,BYTE PTR [eax+ecx*2+0x20]
  411549:	and    esi,edi
  41154b:	inc    ecx
  41154c:	xor    bl,BYTE PTR [ebx]
  41154e:	imul   ebx,ebx,0x2c08a2e6
  411554:	addr16 (bad) 
  411556:	fild   DWORD PTR [edx+0x5b]
  411559:	fxch   st(4)
  41155b:	ja     0x4114e9
  41155d:	push   es
  41155e:	or     eax,0x1368e429
  411563:	mov    ebp,0xff264dff
  411568:	dec    edi
  411569:	dec    edi
  41156a:	popa   
  41156b:	sub    al,0x3e
  41156d:	xor    DWORD PTR ds:0xbb18477c,ebp
  411573:	test   DWORD PTR [ebp-0x56094329],edi
  411579:	mov    WORD PTR [ebx-0x160f12c4],cs
  41157f:	scas   al,BYTE PTR es:[edi]
  411580:	jecxz  0x4115c0
  411582:	xor    bh,BYTE PTR [ebx+0x31]
  411585:	jg     0x4115ba
  411587:	cmc    
  411588:	sub    bh,BYTE PTR [edx-0x21]
  41158b:	(bad)  
  41158c:	or     al,0xae
  41158e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41158f:	push   eax
  411590:	jne    0x41158b
  411592:	sub    eax,0x3477b7d4
  411597:	mov    bh,0x9d
  411599:	retf   0xf40f
  41159c:	(bad)  
  41159d:	retf   0x2895
  4115a0:	pusha  
  4115a1:	adc    edi,DWORD PTR [esi+0x65c945ff]
  4115a7:	dec    edi
  4115a8:	sub    al,0xc8
  4115aa:	repz dec edi
  4115ac:	test   al,0x8c
  4115ae:	dec    esi
  4115af:	jbe    0x41157e
  4115b1:	shl    BYTE PTR [edi+0x5dd3b66f],cl
  4115b7:	sbb    al,0xd8
  4115b9:	mov    ebx,0x78338fde
  4115be:	mov    esi,0xcd71ad94
  4115c3:	repnz mov ebx,0x717a937c
  4115c9:	outs   dx,DWORD PTR ds:[esi]
  4115ca:	jp     0x41160e
  4115cc:	cmp    ch,BYTE PTR [ecx+0xc3a91cd]
  4115d2:	jbe    0x4115dd
  4115d4:	js     0x41160f
  4115d6:	inc    edx
  4115d7:	sbb    al,0xb8
  4115d9:	adc    eax,0xfa94fb31
  4115de:	nop
  4115df:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4115e1:	pop    ecx
  4115e2:	push   edi
  4115e3:	mov    ?,edi
  4115e5:	xchg   esi,eax
  4115e6:	addr16 sub eax,0x1dccf9f1
  4115ec:	pop    ds
  4115ed:	lea    ebp,[eax]
  4115ef:	repnz xchg esp,eax
  4115f1:	sbb    ebp,DWORD PTR [ebx]
  4115f3:	pop    ds
  4115f4:	mov    ebx,ecx
  4115f6:	repz xchg edi,eax
  4115f8:	nop
  4115f9:	mov    edx,ebp
  4115fb:	xor    al,ch
  4115fd:	cli    
  4115fe:	bound  esp,QWORD PTR [edx]
  411600:	mov    BYTE PTR [ecx-0x19],ah
  411603:	cld    
  411604:	test   al,0x50
  411606:	jl     0x411599
  411608:	mov    ebx,DWORD PTR [edi-0x1115d543]
  41160e:	nop
  41160f:	test   al,0x65
  411611:	(bad)  
  411612:	fsub   st,st(1)
  411614:	test   eax,edx
  411616:	pop    ss
  411617:	jge    0x411671
  411619:	jbe    0x411629
  41161b:	or     eax,0xadc7c805
  411620:	mov    ds:0xf1c1e360,al
  411625:	cmc    
  411626:	sar    BYTE PTR [edx+0xe],1
  411629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41162a:	inc    eax
  41162b:	cmp    BYTE PTR [eax-0x3e],cl
  41162e:	in     eax,0x6c
  411630:	sti    
  411631:	add    ch,BYTE PTR [ecx+ebx*4+0x4f]
  411635:	jecxz  0x411647
  411637:	daa    
  411638:	sub    dh,ah
  41163a:	addr16 pop ebp
  41163c:	add    eax,0xbb6d6c47
  411641:	mov    edi,0x2d165316
  411646:	sar    DWORD PTR ds:0x224c15bc,1
  41164c:	rcr    DWORD PTR [eax-0x1bf66f85],1
  411652:	pop    edi
  411653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411654:	add    eax,0x44b614f5
  411659:	dec    ebp
  41165a:	repz in al,dx
  41165c:	dec    esi
  41165d:	loopne 0x41164a
  41165f:	xchg   ecx,eax
  411661:	cld    
  411662:	jb     0x41162f
  411664:	punpckhwd mm4,QWORD PTR [esi-0x33e306a6]
  41166b:	and    esi,esp
  41166d:	push   ss
  41166e:	mov    dl,0xbb
  411670:	test   BYTE PTR [ecx],al
  411672:	jno    0x41163d
  411674:	ja     0x411602
  411676:	push   edx
  411677:	mov    edx,0x839888e
  41167c:	fisttp DWORD PTR [eax]
  41167e:	push   0x53
  411680:	(bad)  
  411681:	push   ebx
  411682:	xchg   ecx,eax
  411683:	mov    edi,0x1b3886a7
  411688:	sub    DWORD PTR [eax+edx*8-0x3c],esp
  41168c:	shl    edx,cl
  41168e:	hlt    
  41168f:	jecxz  0x41163a
  411691:	push   esp
  411692:	xchg   bh,bl
  411694:	test   BYTE PTR [esi],al
  411696:	nop
  411697:	iret   
  411698:	shl    DWORD PTR [edi-0x69],cl
  41169b:	mov    ah,0x4e
  41169d:	je     0x4116c1
  41169f:	leave  
  4116a0:	jb     0x41168a
  4116a2:	sbb    DWORD PTR [ecx+0x4c],0xffffffbe
  4116a6:	retf   
  4116a7:	jne    0x4116b7
  4116a9:	mov    ecx,0xe77a984d
  4116ae:	or     esp,esi
  4116b0:	in     al,0xc1
  4116b2:	sahf   
  4116b3:	xor    ebx,ebp
  4116b5:	call   0xecb710ee
  4116ba:	pop    ebp
  4116bb:	sub    esi,DWORD PTR [ecx-0x222a11aa]
  4116c1:	fcompp 
  4116c3:	mov    edx,0x200b6ba5
  4116c8:	fbld   TBYTE PTR [esp+ebx*2+0x33]
  4116cc:	imul   ebp,edi,0x63
  4116cf:	je     0x41169a
  4116d1:	mov    ch,0x68
  4116d3:	add    ebp,eax
  4116d5:	mov    eax,0xf486cad6
  4116da:	mov    al,BYTE PTR [ecx]
  4116dc:	push   edx
  4116dd:	loop   0x41168c
  4116df:	cld    
  4116e0:	fs pop edx
  4116e2:	dec    esi
  4116e3:	mov    ebx,edx
  4116e5:	inc    DWORD PTR cs:[edx+0x62]
  4116e9:	popa   
  4116ea:	and    al,0xf0
  4116ec:	cs mov al,0xb7
  4116ef:	sub    DWORD PTR [eax+0x5741e978],edi
  4116f5:	(bad)  
  4116f6:	cmp    al,0xe3
  4116f8:	outs   dx,DWORD PTR ds:[esi]
  4116f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116fa:	fisttp QWORD PTR ds:0xf9da4250
  411700:	repz es dec ecx
  411703:	daa    
  411704:	cmp    eax,0x8bad9c45
  411709:	outs   dx,DWORD PTR ds:[esi]
  41170a:	test   DWORD PTR [edx+0x4e7b6b64],esi
  411710:	sub    esp,edi
  411712:	frstor ds:0x6abf7106
  411718:	xchg   ebp,eax
  411719:	push   eax
  41171a:	pop    ss
  41171b:	in     al,0x75
  41171d:	push   ds
  41171e:	add    eax,0xdd37c25
  411723:	jp     0x411717
  411725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411726:	pop    ebx
  411727:	lock ja 0x4116e5
  41172a:	int3   
  41172b:	mov    edi,0xe34955a7
  411730:	push   esp
  411731:	inc    ecx
  411732:	ds push edx
  411734:	mov    al,ds:0x80563226
  411739:	shr    BYTE PTR [edi],0x57
  41173c:	ffree  st(6)
  41173e:	xchg   ebx,eax
  41173f:	xchg   edx,eax
  411740:	sar    DWORD PTR [esi],0x5d
  411743:	cdq    
  411744:	test   al,0x1a
  411746:	pop    esp
  411747:	retf   0x5426
  41174a:	xor    DWORD PTR [ebp+0x1b],edx
  41174d:	das    
  41174e:	jp     0x411707
  411750:	xchg   ebx,eax
  411751:	into   
  411752:	xlat   BYTE PTR ds:[ebx]
  411753:	cwde   
  411754:	mov    ebx,0xb89e1f54
  411759:	pop    esp
  41175a:	push   edi
  41175b:	rcl    cl,0x67
  41175e:	sub    ebx,eax
  411760:	cmp    al,0xeb
  411762:	and    cl,BYTE PTR [ebp+eiz*8+0x19]
  411766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411767:	mov    cl,0x28
  411769:	out    dx,al
  41176a:	and    bl,BYTE PTR [edi-0x6]
  41176d:	loope  0x411747
  41176f:	add    al,0x88
  411771:	sahf   
  411772:	into   
  411773:	adc    al,0xb
  411775:	push   es
  411776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411777:	mov    eax,ds:0xc3fe9ad4
  41177c:	shr    DWORD PTR [eax+esi*8+0x6d048cfe],1
  411783:	pushf  
  411784:	xchg   esi,eax
  411785:	jge    0x4117aa
  411787:	stos   BYTE PTR es:[edi],al
  411788:	inc    edx
  411789:	push   ecx
  41178a:	push   cs
  41178b:	and    bl,ch
  41178d:	cli    
  41178e:	cdq    
  41178f:	mov    al,0x56
  411791:	popf   
  411792:	mov    ds:0x52ca3fc,al
  411797:	outs   dx,BYTE PTR ds:[esi]
  411798:	mov    ecx,0x1d20f0eb
  41179d:	rol    BYTE PTR [eax],1
  41179f:	in     al,dx
  4117a0:	dec    edi
  4117a1:	ficomp DWORD PTR [esi-0x2c3e340a]
  4117a7:	test   BYTE PTR [eax+0x131a6b24],bl
  4117ad:	test   eax,0x923d9e54
  4117b2:	aas    
  4117b3:	mov    al,BYTE PTR [ebx-0x4f]
  4117b6:	inc    edi
  4117b7:	fst    QWORD PTR es:[ecx]
  4117ba:	dec    esp
  4117bb:	in     al,0x13
  4117bd:	xchg   BYTE PTR [esp+edi*1-0x18125594],ch
  4117c4:	iret   
  4117c5:	cli    
  4117c6:	sbb    DWORD PTR [edi+0x2eecec7f],ebx
  4117cc:	bound  edx,QWORD PTR [edx+0x3d]
  4117cf:	jge    0x411800
  4117d1:	scas   al,BYTE PTR es:[edi]
  4117d2:	retf   0xf859
  4117d5:	add    al,0xb
  4117d7:	jae    0x411809
  4117d9:	dec    eax
  4117da:	mov    edx,0x305dfa81
  4117df:	rol    BYTE PTR [ebx-0x64dc00c3],cl
  4117e5:	jmp    0xd50:0x3a6bc11f
  4117ec:	or     al,bl
  4117ee:	sub    ecx,esi
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	mov    edi,ebx
  41186e:	inc    ebx
  41186f:	shr    eax,0x90
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	cmp    al,0xe7
  41187a:	ds inc ebx
  41187c:	inc    eax
  41187d:	enter  0x4327,0xa
  411881:	mov    ds:0x8ebd755e,al
  411886:	inc    edi
  411887:	cs cmovg ebx,ebp
  41188b:	daa    
  41188c:	pause  
  41188e:	and    DWORD PTR [ebp-0x19],0xffffffef
  411892:	lahf   
  411893:	call   0xf37c2324
  411898:	mov    eax,ebx
  41189a:	call   0xae67:0x5c10329d
  4118a1:	imul   BYTE PTR [ecx]
  4118a3:	js     0x4118af
  4118a5:	mov    ds:0x68ee2759,al
  4118aa:	fnsave [edi-0x77442465]
  4118b0:	sbb    eax,0x12f80710
  4118b5:	mov    al,ds:0xb3460a0c
  4118ba:	xor    esp,ecx
  4118bc:	cmp    bl,BYTE PTR [ebx]
  4118be:	lds    esi,FWORD PTR [ecx+eiz*8-0xf57ef3e]
  4118c5:	mov    bh,0xe8
  4118c7:	loop   0x411925
  4118c9:	test   eax,0x3833477f
  4118ce:	out    0x10,al
  4118d0:	(bad)  [edi+0xc]
  4118d3:	sbb    bh,BYTE PTR [edx+0xb]
  4118d6:	sti    
  4118d7:	xor    DWORD PTR [ebx],ebp
  4118d9:	cdq    
  4118da:	fs jnp 0x411901
  4118dd:	xchg   ebx,eax
  4118de:	out    0xa3,eax
  4118e0:	pop    esp
  4118e1:	and    DWORD PTR [edx-0x29733a1d],ebx
  4118e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e8:	or     cl,bl
  4118ea:	xchg   BYTE PTR [ecx+0x1f],bl
  4118ed:	fdivr  DWORD PTR ds:0x7fcfa84b
  4118f3:	pop    ebp
  4118f4:	aam    0x84
  4118f6:	jl     0x411921
  4118f8:	dec    ecx
  4118f9:	xlat   BYTE PTR ds:[ebx]
  4118fa:	xchg   esi,eax
  4118fb:	adc    BYTE PTR [ebx],cl
  4118fd:	mov    es,ecx
  4118ff:	inc    ebx
  411900:	adc    BYTE PTR ds:0xd1d04d93,0x7f
  411907:	adc    esp,esp
  411909:	fdivrp st(0),st
  41190b:	mov    ebx,0x1caec992
  411910:	(bad)  
  411911:	(bad)  
  411912:	adc    ebx,DWORD PTR [ebx]
  411914:	shr    BYTE PTR [edi],cl
  411916:	ret    
  411917:	mov    bl,0xc4
  411919:	rcl    BYTE PTR [eax+esi*2],0xac
  41191d:	xor    DWORD PTR [eax+0x6a871736],edi
  411923:	jne    0x4118b8
  411925:	imul   esp,DWORD PTR ds:0x29879fab,0xc810e08b
  41192f:	jecxz  0x411909
  411931:	xchg   DWORD PTR [esi],ebp
  411933:	scas   al,BYTE PTR es:[edi]
  411934:	add    DWORD PTR [ebx+0x7c122ba9],edx
  41193a:	cmc    
  41193b:	push   ecx
  41193c:	jb     0x4118c8
  41193e:	scas   al,BYTE PTR es:[edi]
  41193f:	sti    
  411940:	ret    0xefbd
  411943:	aaa    
  411944:	test   DWORD PTR [eax+0x34],ebp
  411947:	dec    BYTE PTR [eax-0x6fe2ab8c]
  41194d:	out    dx,al
  41194e:	clc    
  41194f:	jo     0x4119ab
  411951:	mov    ah,0x82
  411953:	mov    dh,0x4b
  411955:	adc    eax,0xb533cb3c
  41195a:	pop    esp
  41195b:	sbb    al,0x97
  41195d:	shl    BYTE PTR [ebp-0x5087be44],cl
  411963:	(bad)  
  411965:	js     0x4118f5
  411967:	mov    cl,0xeb
  411969:	xchg   edi,eax
  41196a:	push   ebp
  41196b:	mov    dh,0x1b
  41196d:	jge    0x41190c
  41196f:	add    al,0x18
  411971:	sar    edi,0xd8
  411974:	call   0xf47:0x6eaf7ab5
  41197b:	sahf   
  41197c:	push   ds
  41197d:	outs   dx,BYTE PTR ds:[si]
  41197f:	loop   0x4119cd
  411981:	test   ebp,esp
  411983:	xchg   DWORD PTR [ebx+eax*2],eax
  411986:	pop    esi
  411987:	fild   DWORD PTR [ebp+0x5f]
  41198a:	mov    DWORD PTR cs:[ebp-0x6a5679a1],edx
  411991:	dec    ebx
  411992:	jecxz  0x4119a4
  411994:	xchg   ecx,eax
  411995:	gs add ch,ch
  411998:	add    BYTE PTR [edi+edx*2-0x7],bl
  41199c:	or     eax,0x20ed13d1
  4119a1:	sbb    al,0xc3
  4119a3:	cli    
  4119a4:	imul   ecx,DWORD PTR ds:0xb59853bf,0xffffffed
  4119ab:	xor    al,0xa8
  4119ad:	call   0x8c55:0x7950d285
  4119b4:	inc    esp
  4119b5:	push   ebx
  4119b6:	ins    BYTE PTR es:[edi],dx
  4119b7:	test   al,0xef
  4119b9:	cmp    al,0x85
  4119bb:	or     esp,0x3a
  4119be:	fcom   QWORD PTR [esi-0x2750e224]
  4119c4:	shr    BYTE PTR [ebp-0x738d7a5b],0x79
  4119cb:	mov    bh,0xa5
  4119cd:	in     al,dx
  4119ce:	lock retf 
  4119d0:	pop    eax
  4119d1:	dec    edi
  4119d2:	add    al,bl
  4119d4:	(bad)  
  4119d5:	mov    esi,0xb6615b14
  4119da:	and    esi,DWORD PTR [ebx-0x1f]
  4119dd:	fdivr  DWORD PTR [edi-0x3ad2fe03]
  4119e3:	test   eax,0x45a37e22
  4119e8:	inc    esp
  4119e9:	inc    eax
  4119ea:	and    al,0x14
  4119ec:	sahf   
  4119ed:	dec    ebp
  4119ee:	pop    esi
  4119ef:	and    ch,BYTE PTR [ebp+0x4a]
  4119f2:	push   ds
  4119f3:	pop    eax
  4119f4:	jle    0x4119d1
  4119f6:	add    edi,DWORD PTR [eax-0x40]
  4119f9:	and    ecx,DWORD PTR [ecx*8+0x7f68dd64]
  411a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a01:	jb     0x411a1b
  411a03:	push   edi
  411a04:	xor    al,0xc2
  411a06:	mov    esp,0xa3aa4480
  411a0b:	jmp    0x88edf7f8
  411a10:	sub    eax,0x2b3c9daa
  411a15:	call   ebp
  411a17:	xlat   BYTE PTR ds:[ebx]
  411a18:	jge    0x4119aa
  411a1a:	cmc    
  411a1b:	int3   
  411a1c:	fwait
  411a1d:	dec    ebp
  411a1e:	sar    eax,0xdb
  411a21:	mov    bh,0x8
  411a23:	add    edi,ebp
  411a25:	mov    edx,0xdbc0c7f5
  411a2a:	xor    eax,0x509ae461
  411a2f:	test   al,0x9d
  411a31:	in     al,dx
  411a32:	mov    DWORD PTR [edx+0x54],edi
  411a35:	push   ds
  411a36:	(bad)  
  411a37:	outs   dx,BYTE PTR ds:[esi]
  411a38:	adc    bh,ah
  411a3a:	pop    eax
  411a3b:	daa    
  411a3c:	push   esi
  411a3d:	call   0x4e4a31a3
  411a42:	xchg   ecx,eax
  411a43:	jo     0x411a2b
  411a45:	jle    0x411a15
  411a47:	imul   ecx,DWORD PTR [ebx-0xb],0x679fe0b
  411a4e:	(bad)  
  411a4f:	sahf   
  411a50:	push   ecx
  411a51:	push   esp
  411a52:	cmp    edi,DWORD PTR [edi-0x264c3e2b]
  411a58:	dec    ebx
  411a59:	mov    bl,0xa2
  411a5b:	stc    
  411a5c:	cdq    
  411a5d:	lods   al,BYTE PTR ds:[esi]
  411a5e:	imul   eax,DWORD PTR [ecx-0x5],0x6b
  411a62:	xlat   BYTE PTR ds:[ebx]
  411a63:	cmp    edx,ebp
  411a65:	mov    ebx,0x238a1f48
  411a6a:	adc    DWORD PTR [ebp-0x7618754d],esp
  411a70:	dec    edx
  411a71:	(bad)  
  411a72:	test   al,0x8c
  411a74:	fwait
  411a75:	stos   DWORD PTR es:[edi],eax
  411a76:	nop
  411a77:	push   edx
  411a78:	adc    dl,BYTE PTR [edi]
  411a7a:	in     eax,dx
  411a7b:	adc    bl,ah
  411a7d:	xor    eax,0xe685b169
  411a82:	lock pop ebp
  411a84:	fsub   st,st(2)
  411a86:	fdivr  QWORD PTR [ebx-0x3246647]
  411a8c:	mov    eax,ds:0x3ac58a27
  411a91:	cmp    cl,al
  411a93:	adc    BYTE PTR [ebp-0x658ca8d],bh
  411a99:	test   BYTE PTR [edx],dl
  411a9b:	and    eax,0x52531fb0
  411aa0:	or     ebp,DWORD PTR [edx]
  411aa2:	inc    ebx
  411aa3:	cdq    
  411aa4:	mov    ebp,0x963152aa
  411aa9:	mov    ds:0x94fd7208,al
  411aae:	imul   ebx,DWORD PTR [edi+0x40],0x7d715bb9
  411ab5:	test   DWORD PTR [edx],ecx
  411ab7:	add    DWORD PTR [edi],ebp
  411ab9:	sub    BYTE PTR [edi+0x16],ch
  411abc:	cmp    eax,0x2bea81df
  411ac1:	cmp    bh,BYTE PTR [esi]
  411ac3:	xor    BYTE PTR [eax-0x6e],dl
  411ac6:	dec    edi
  411ac7:	popa   
  411ac8:	stc    
  411ac9:	jns    0x411aea
  411acb:	enter  0x8707,0x22
  411acf:	inc    ebp
  411ad0:	xor    DWORD PTR [ecx],0xfffffff8
  411ad3:	pop    ebx
  411ad4:	adc    al,0x9f
  411ad6:	fwait
  411ad7:	cmp    BYTE PTR [ecx+0x650b737b],0x63
  411ade:	loopne 0x411b5f
  411ae0:	adc    ebx,DWORD PTR [ecx-0x59]
  411ae3:	jmp    0x411ac8
  411ae5:	hlt    
  411ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae7:	pop    ebp
  411ae8:	ds push ecx
  411aea:	bound  esi,QWORD PTR [ecx-0x44]
  411aed:	inc    edi
  411aee:	(bad)
  411af2:	(bad)  
  411af4:	push   es
  411af5:	aad    0x3
  411af7:	adc    al,0x8d
  411af9:	loopne 0x411ade
  411afb:	xchg   dh,al
  411afd:	mov    al,fs:0x98c2b546
  411b03:	jmp    FWORD PTR [eax+0x48]
  411b06:	dec    ecx
  411b07:	jne    0x411aa0
  411b09:	xchg   ecx,eax
  411b0a:	ja     0x411b67
  411b0c:	(bad)  
  411b0d:	pop    DWORD PTR [ebp-0x45]
  411b10:	pop    ds
  411b11:	dec    ecx
  411b12:	inc    edx
  411b13:	adc    eax,0x2d96fa94
  411b18:	mov    WORD PTR [esi],?
  411b1a:	out    0x93,al
  411b1c:	js     0x411ad0
  411b1e:	mov    esi,0x95f1594b
  411b23:	fild   QWORD PTR [ebx-0x5d]
  411b26:	xchg   al,ah
  411b28:	outs   dx,BYTE PTR ds:[esi]
  411b29:	xchg   ebp,eax
  411b2a:	adc    DWORD PTR [eax],ecx
  411b2c:	lahf   
  411b2d:	mov    eax,edx
  411b2f:	(bad)  
  411b30:	xchg   BYTE PTR [esi-0x21c50b8c],dl
  411b36:	mov    esp,0x155c7964
  411b3b:	arpl   cx,bp
  411b3d:	into   
  411b3e:	add    BYTE PTR [eax+0x15399aee],dl
  411b44:	shl    ebx,0x39
  411b47:	in     al,0x70
  411b49:	imul   edx,eax,0xffffffae
  411b4c:	push   edx
  411b4d:	jbe    0x411b98
  411b4f:	sub    eax,0x9508dfe9
  411b54:	(bad)  
  411b55:	icebp  
  411b56:	and    dh,BYTE PTR [eax-0x24fd131d]
  411b5c:	cmp    dl,cl
  411b5e:	add    BYTE PTR [edx-0x51d5ebbf],bl
  411b64:	cdq    
  411b65:	jl     0x411b76
  411b67:	pusha  
  411b68:	test   al,0x84
  411b6a:	or     DWORD PTR [ebp+0x14],ebx
  411b6d:	and    eax,0xa701e13b
  411b72:	sti    
  411b73:	xor    eax,0xf49577ee
  411b78:	out    0x6a,eax
  411b7a:	nop
  411b7b:	icebp  
  411b7c:	adc    DWORD PTR [esi],eax
  411b7e:	in     eax,0x5
  411b80:	add    BYTE PTR [eax+0x46],dh
  411b83:	dec    eax
  411b84:	das    
  411b85:	lock or DWORD PTR [ebx],esi
  411b88:	fistp  WORD PTR [ebx-0x3a731902]
  411b8e:	push   eax
  411b8f:	cld    
  411b90:	push   esi
  411b91:	out    dx,eax
  411b92:	neg    DWORD PTR ds:0xffb1d74c
  411b98:	push   0xf54c602e
  411b9d:	push   0x51
  411b9f:	dec    eax
  411ba0:	xor    BYTE PTR [ebp+0xc],ah
  411ba3:	dec    esp
  411ba4:	cdq    
  411ba5:	in     al,0xe9
  411ba7:	xor    DWORD PTR [eax+0xa],ecx
  411baa:	(bad)  
  411bab:	jno    0x411bb0
  411bad:	aaa    
  411bae:	in     eax,0xa3
  411bb0:	and    bl,dh
  411bb2:	rol    dh,0x5c
  411bb5:	push   0x9c556749
  411bba:	mov    BYTE PTR [ebx],cl
  411bbc:	fidiv  WORD PTR [ecx]
  411bbe:	jns    0x411be1
  411bc0:	push   edi
  411bc1:	jmp    0x411b91
  411bc3:	and    esp,edx
  411bc5:	sbb    DWORD PTR ds:0x90977259,esi
  411bcb:	pop    es
  411bcc:	sub    ecx,DWORD PTR [ebx]
  411bce:	cmp    al,0xbc
  411bd0:	adc    al,0xd5
  411bd2:	dec    esi
  411bd3:	push   esp
  411bd4:	inc    ecx
  411bd5:	lahf   
  411bd6:	shl    BYTE PTR [ecx-0x7324449c],1
  411bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bdd:	xor    al,0x6d
  411bdf:	cli    
  411be0:	add    BYTE PTR [ecx+0x7e],ah
  411be3:	loope  0x411c19
  411be5:	enter  0x13be,0x1b
  411be9:	mov    ds:0x5210a06f,eax
  411bee:	test   BYTE PTR [esi-0x2],bl
  411bf1:	jmp    0x411ba5
  411bf3:	fwait
  411bf4:	push   ss
  411bf5:	adc    BYTE PTR [ecx],dl
  411bf7:	aam    0x3a
  411bf9:	jp     0x411c34
  411bfb:	js     0x411c6b
  411bfd:	pop    ebx
  411bfe:	daa    
  411bff:	mov    ebx,0x4685fe21
  411c04:	and    al,0x64
  411c06:	cmp    DWORD PTR [edx-0x4fac1819],esp
  411c0c:	outs   dx,DWORD PTR ds:[esi]
  411c0d:	ret    
  411c0e:	shl    BYTE PTR ds:0xb26bab50,1
  411c14:	jno    0x411c4f
  411c16:	or     ebp,DWORD PTR [edi+eax*1]
  411c19:	(bad)  
  411c1a:	shr    DWORD PTR [edi+0x1c],cl
  411c1d:	pop    es
  411c1e:	rcr    BYTE PTR [edx+0x1b],1
  411c21:	or     DWORD PTR cs:[eax+0x5b],esi
  411c25:	mov    BYTE PTR [ebx-0x26],bh
  411c28:	jno    0x411c48
  411c2a:	imul   esp,DWORD PTR [esi-0x5577ffd0],0xffffffa6
  411c31:	sbb    DWORD PTR [ebp+0x6c558af8],ebp
  411c37:	or     al,0x5e
  411c39:	push   eax
  411c3a:	nop
  411c3b:	xchg   edi,eax
  411c3c:	push   edx
  411c3d:	ja     0x411c62
  411c3f:	push   ss
  411c40:	ja     0x411ca7
  411c42:	das    
  411c43:	and    eax,0xf4fbc973
  411c48:	xchg   esp,eax
  411c49:	lods   eax,DWORD PTR ds:[esi]
  411c4a:	test   BYTE PTR [ecx],dl
  411c4c:	adc    eax,0x63905ece
  411c51:	sub    BYTE PTR [eax+eax*4],bl
  411c54:	scas   al,BYTE PTR es:[edi]
  411c55:	sub    eax,DWORD PTR [edi]
  411c57:	mov    esi,0xae23ceca
  411c5c:	ret    0x3c9f
  411c5f:	test   DWORD PTR [ebx-0x64c6f724],ebp
  411c65:	icebp  
  411c66:	inc    ecx
  411c67:	psllq  mm2,QWORD PTR [edi]
  411c6a:	mov    dl,0xb5
  411c6c:	clc    
  411c6d:	push   ds
  411c6e:	test   al,0xb1
  411c70:	mov    esp,0x19e47911
  411c75:	jle    0x411c2e
  411c77:	sbb    al,0xdc
  411c79:	fadd   DWORD PTR [esi]
  411c7b:	push   edi
  411c7c:	add    DWORD PTR [ecx],0x1d
  411c7f:	jae    0x411cc0
  411c81:	push   ebp
  411c82:	rol    BYTE PTR [ecx],cl
  411c84:	neg    cl
  411c86:	cli    
  411c87:	xchg   BYTE PTR [edx],ch
  411c89:	dec    ebx
  411c8a:	int3   
  411c8b:	lock xchg edi,eax
  411c8d:	retf   0x722d
  411c90:	sub    edi,eax
  411c92:	push   0x5c
  411c94:	mov    esp,0x131bb278
  411c99:	inc    edi
  411c9a:	mov    BYTE PTR [esi+edi*2+0x0],dl
  411c9e:	or     ebp,DWORD PTR [ecx-0x31]
  411ca1:	stc    
  411ca2:	lock sbb DWORD PTR [edi],esi
  411ca5:	inc    esi
  411ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca7:	dec    ecx
  411ca8:	jmp    DWORD PTR [eax+0x52e09306]
  411cae:	inc    edi
  411caf:	jl     0x411cb8
  411cb1:	mov    ebx,0x49558afe
  411cb6:	mov    ebp,0x15715d81
  411cbb:	loopne 0x411c4d
  411cbd:	outs   dx,BYTE PTR ds:[esi]
  411cbe:	ins    BYTE PTR es:[edi],dx
  411cbf:	add    eax,0x534afb5
  411cc4:	pop    esi
  411cc5:	xchg   edx,eax
  411cc6:	push   ecx
  411cc7:	mov    eax,0x2c8d96b
  411ccc:	(bad)  
  411ccd:	pop    ecx
  411cce:	(bad)  
  411ccf:	mov    ebp,0xa6ce8f4d
  411cd4:	xor    eax,0xcedbefbc
  411cd9:	in     eax,0x21
  411cdb:	in     eax,dx
  411cdc:	ja     0x411ceb
  411cde:	jg     0x411cdb
  411ce0:	dec    eax
  411ce1:	(bad)  
  411ce2:	adc    dl,BYTE PTR [ecx]
  411ce4:	or     DWORD PTR [ecx],ebp
  411ce6:	jb     0x411c6c
  411ce8:	push   ebx
  411ce9:	xchg   ebx,eax
  411cea:	adc    DWORD PTR ds:0x30ff03a7,edi
  411cf0:	push   ss
  411cf1:	mov    al,ds:0x55ec0aef
  411cf6:	pop    edi
  411cf7:	loopne 0x411c8c
  411cf9:	daa    
  411cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cfb:	pushf  
  411cfc:	add    eax,0x11612548
  411d01:	es mov edi,0x387e043c
  411d07:	push   ebp
  411d08:	aam    0x6b
  411d0a:	sbb    eax,0x6a090a05
  411d0f:	add    al,0x82
  411d11:	cs and dh,cl
  411d14:	ret    0xc4dd
  411d17:	sbb    ecx,DWORD PTR [ecx-0x107eda97]
  411d1d:	imul   esi,ebx,0xffffffb4
  411d20:	cld    
  411d21:	dec    esi
  411d22:	inc    ecx
  411d23:	into   
  411d24:	mov    ch,0xab
  411d26:	mov    ecx,0x64c0cb4e
  411d2b:	xchg   ecx,eax
  411d2c:	clc    
  411d2d:	push   edi
  411d2e:	adc    ecx,DWORD PTR [esp+edi*8-0x31]
  411d32:	ins    BYTE PTR es:[edi],dx
  411d33:	int3   
  411d34:	mov    ebp,0x37e671f0
  411d39:	test   BYTE PTR [edx-0x27],al
  411d3c:	or     al,BYTE PTR [edx-0x69]
  411d3f:	and    cl,dl
  411d41:	cld    
  411d42:	sub    bl,0x9d
  411d45:	xchg   esi,eax
  411d46:	outs   dx,DWORD PTR ds:[esi]
  411d47:	dec    edi
  411d48:	cdq    
  411d49:	ins    DWORD PTR es:[edi],dx
  411d4a:	dec    edi
  411d4b:	push   ss
  411d4c:	sub    DWORD PTR [edx+eax*2+0x41],ecx
  411d50:	jecxz  0x411d95
  411d52:	add    ebp,DWORD PTR ds:[esi+0x34]
  411d56:	inc    esp
  411d57:	add    bh,BYTE PTR [ebx]
  411d59:	out    0x9b,al
  411d5b:	mov    eax,ds:0x201056c0
  411d60:	inc    esi
  411d61:	pop    esp
  411d62:	inc    ecx
  411d63:	jle    0x411d7b
  411d65:	jp     0x411d5c
  411d67:	or     BYTE PTR [ebx+0x6a229af5],0xdb
  411d6e:	nop
  411d6f:	jmp    0x411d4e
  411d71:	(bad)  
  411d72:	addr16 xor eax,0x5cea917c
  411d78:	rcr    ebx,0x58
  411d7b:	loope  0x411dd3
  411d7d:	lods   al,BYTE PTR ds:[esi]
  411d7e:	jae    0x411db0
  411d80:	pop    edi
  411d81:	and    DWORD PTR [ecx+0x48bc4b70],ecx
  411d87:	push   ds
  411d88:	jne    0x411e05
  411d8a:	add    bh,BYTE PTR [eax+0x404b7a8a]
  411d90:	je     0x411dd8
  411d92:	mov    eax,ds:0x520f0f8a
  411d97:	add    BYTE PTR [esi+0x5d29d004],bh
  411d9d:	push   ss
  411d9e:	inc    ebp
  411d9f:	ja     0x411dac
  411da1:	mov    esp,gs
  411da3:	dec    esp
  411da4:	sbb    DWORD PTR [ecx],ebp
  411da6:	mov    ss,edx
  411da8:	aad    0xca
  411daa:	jmp    0x411e1b
  411dac:	xchg   ebp,eax
  411dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dae:	arpl   WORD PTR [eax+0x4e0bb825],di
  411db4:	sub    DWORD PTR [esp+esi*8],0x1
  411db8:	ss aad 0x71
  411dbb:	(bad)  
  411dbc:	aaa    
  411dbd:	mov    eax,ds:0x26b468e7
  411dc2:	jmp    0x59fd28eb
  411dc7:	in     al,dx
  411dc8:	xchg   BYTE PTR ds:0x58469063,bl
  411dce:	lds    ebx,FWORD PTR [edx+0x77]
  411dd1:	pushf  
  411dd2:	push   ds
  411dd3:	aad    0x18
  411dd5:	aas    
  411dd6:	hlt    
  411dd7:	loop   0x411dd6
  411dd9:	loope  0x411d70
  411ddb:	pop    ecx
  411ddc:	dec    ebp
  411ddd:	xor    esi,ebx
  411ddf:	fimul  DWORD PTR [ecx+0x6]
  411de2:	std    
  411de3:	aam    0x9
  411de5:	fcomp  QWORD PTR [edi-0x520fb170]
  411deb:	mov    BYTE PTR [ecx],bl
  411ded:	and    eax,0x9fcd26d6
  411df2:	mov    ds:0xa20703d0,al
  411df7:	add    eax,0xbbbb3a5
  411dfc:	xor    edx,DWORD PTR [edx+0x15]
  411dff:	sub    cl,BYTE PTR [edx]
  411e01:	mov    ds:0x2ac4071f,eax
  411e06:	shl    DWORD PTR [edx],cl
  411e08:	jnp    0xd4c5a7de
  411e0e:	sub    ah,BYTE PTR [eax-0x267de9be]
  411e14:	shl    DWORD PTR [ecx+0x68a9a20a],cl
  411e1a:	push   ebx
  411e1b:	push   ebp
  411e1c:	not    DWORD PTR [eax]
  411e1e:	std    
  411e1f:	hlt    
  411e20:	push   edx
  411e21:	int3   
  411e22:	aaa    
  411e23:	fmul   st(2),st
  411e25:	pop    edx
  411e26:	push   eax
  411e27:	xor    BYTE PTR [edi+0x7a],ch
  411e2a:	sahf   
  411e2b:	inc    ebp
  411e2c:	inc    eax
  411e2d:	mov    al,0x3
  411e2f:	mov    edx,0x2e30f05
  411e34:	(bad)  
  411e35:	cli    
  411e36:	into   
  411e37:	sti    
  411e38:	mov    edx,0x57b7b170
  411e3d:	xor    al,0xa9
  411e3f:	pop    ss
  411e40:	xchg   edx,eax
  411e41:	cmp    eax,0x3043ccb8
  411e46:	fs in  al,dx
  411e48:	addr16 or ebp,esp
  411e4b:	retfw  
  411e4d:	mov    dh,0xc3
  411e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e50:	xor    edi,DWORD PTR [edi-0x62795ebd]
  411e56:	sbb    cl,BYTE PTR [edx]
  411e58:	fbstp  TBYTE PTR [eax-0x6778b508]
  411e5e:	das    
  411e5f:	repz sbb DWORD PTR [eax],esi
  411e62:	aad    0x39
  411e64:	lods   eax,DWORD PTR ds:[esi]
  411e65:	jae    0x411e3c
  411e67:	sub    BYTE PTR [eax+0x6f],ah
  411e6a:	sbb    al,0x98
  411e6c:	rol    eax,0xb0
  411e6f:	xchg   ebp,eax
  411e70:	fadd   st(7),st
  411e72:	add    DWORD PTR [ebp-0xc433bae],esi
  411e78:	mov    ebx,0xd2d33a02
  411e7d:	push   edi
  411e7e:	test   DWORD PTR [esi-0x758873bc],ebx
  411e84:	repz mov db3,eax
  411e88:	aad    0x55
  411e8a:	jno    0x411e5d
  411e8c:	push   esi
  411e8d:	je     0x411e6c
  411e8f:	xchg   DWORD PTR [ebp+0x2],esp
  411e92:	push   esi
  411e93:	push   ds
  411e94:	or     BYTE PTR [ecx],dh
  411e96:	add    cl,BYTE PTR [eax+0x22]
  411e99:	arpl   ax,ax
  411e9b:	jbe    0x411e6f
  411e9d:	sbb    eax,0x72147324
  411ea2:	aaa    
  411ea3:	(bad)  
  411ea4:	push   ecx
  411ea5:	jb     0x411e42
  411ea7:	cmp    ecx,ebp
  411ea9:	stos   BYTE PTR es:[edi],al
  411eaa:	or     eax,0xb3771c00
  411eaf:	xchg   ecx,eax
  411eb0:	inc    esp
  411eb1:	and    DWORD PTR [ebx+0xac9d039],edx
  411eb7:	or     eax,0x84c5cbc1
  411ebc:	push   esp
  411ebd:	inc    ecx
  411ebe:	mov    cl,0x4d
  411ec0:	push   ebx
  411ec1:	xchg   esi,eax
  411ec2:	nop
  411ec3:	or     bl,BYTE PTR [esi-0x29]
  411ec6:	pop    ebx
  411ec7:	stos   DWORD PTR es:[edi],eax
  411ec8:	pop    ss
  411ec9:	and    DWORD PTR [eax-0x3244bd83],esp
  411ecf:	dec    eax
  411ed0:	clc    
  411ed1:	loop   0x411ea1
  411ed3:	xor    dl,BYTE PTR [ecx]
  411ed5:	popa   
  411ed6:	scas   al,BYTE PTR es:[edi]
  411ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ed8:	sub    dh,ch
  411eda:	or     esp,DWORD PTR [esi]
  411edc:	call   0x35cd:0x374c2727
  411ee3:	jg     0x411f3e
  411ee5:	cmc    
  411ee6:	or     DWORD PTR [esi],esp
  411ee8:	cli    
  411ee9:	retf   0x207d
  411eec:	sbb    eax,0x7701c60b
  411ef1:	push   esp
  411ef2:	cmp    BYTE PTR [edx+0x2135c40b],dh
  411ef8:	loop   0x411ed9
  411efa:	scas   al,BYTE PTR es:[edi]
  411efb:	mov    ds:0xbb70cb50,eax
  411f00:	retf   
  411f01:	push   0xffffff9c
  411f03:	cmp    eax,0x55c0ab33
  411f08:	nop
  411f09:	sub    ch,BYTE PTR [edx]
  411f0b:	jle    0x411ef7
  411f0d:	aas    
  411f0e:	push   ebp
  411f0f:	test   al,0xcf
  411f11:	in     eax,0x5c
  411f13:	(bad)  
  411f14:	lods   al,BYTE PTR ds:[esi]
  411f15:	xchg   edx,eax
  411f16:	push   ds
  411f17:	mov    bl,dl
  411f19:	sub    BYTE PTR [esi+esi*4],al
  411f1c:	and    ch,BYTE PTR [ebx-0x90e209d]
  411f22:	sar    BYTE PTR [ebp-0x497a3466],1
  411f28:	mov    ebp,0x899a359
  411f2d:	cs inc esi
  411f2f:	and    eax,0x31f801df
  411f34:	mov    al,ds:0x8112ed96
  411f39:	or     al,0x53
  411f3b:	add    BYTE PTR [esi],cl
  411f3d:	or     DWORD PTR [edx+0x2226b6c],edx
  411f43:	add    BYTE PTR [ecx],dl
  411f45:	lea    ebp,[ebx-0x2c]
  411f48:	push   eax
  411f49:	fisubr WORD PTR [eax-0x4d]
  411f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f4d:	ror    BYTE PTR [edi],0xc
  411f50:	mov    gs,WORD PTR gs:[esp+edi*1+0x6f3bac7d]
  411f58:	jbe    0x411f20
  411f5a:	fs sbb dl,al
  411f5d:	ja     0x411f89
  411f5f:	fs xchg ebp,eax
  411f61:	sbb    eax,ebp
  411f63:	jmp    0x411eff
  411f65:	mov    bl,0x23
  411f67:	cld    
  411f68:	add    BYTE PTR [edx],bl
  411f6a:	sar    BYTE PTR [ecx+0x4756f9b7],cl
  411f70:	imul   DWORD PTR [ebx]
  411f72:	int    0xfc
  411f74:	xor    eax,0x96da0c51
  411f79:	xor    DWORD PTR [ecx+0x1],ebx
  411f7c:	push   edx
  411f7d:	outs   dx,DWORD PTR ds:[esi]
  411f7e:	sti    
  411f7f:	ret    0xb015
  411f82:	jns    0x411fa4
  411f84:	(bad)  
  411f85:	imul   edx,DWORD PTR [eax-0x35],0x69
  411f89:	xor    edx,DWORD PTR [esi-0x39]
  411f8c:	mov    ?,WORD PTR [ebx]
  411f8e:	jmp    0xdd24021f
  411f93:	sub    esi,0x3cc08922
  411f99:	dec    esi
  411f9a:	stos   DWORD PTR es:[edi],eax
  411f9b:	and    BYTE PTR [ebx+ebp*1-0x10],al
  411f9f:	xacquire xchg DWORD PTR [ecx-0x6df4fb25],ebp
  411fa6:	rdmsr  
  411fa8:	or     al,0xb4
  411faa:	inc    esp
  411fab:	jnp    0x41200c
  411fad:	add    ebx,DWORD PTR [edi+eiz*2]
  411fb0:	scas   eax,DWORD PTR es:[edi]
  411fb1:	mov    ch,0xf3
  411fb3:	inc    ebp
  411fb4:	jne    0x411fc6
  411fb6:	jp     0x411faf
  411fb8:	mov    esp,ebx
  411fba:	push   edi
  411fbb:	mov    cl,0xc4
  411fbd:	jbe    0x412022
  411fbf:	add    edi,DWORD PTR [eax+ebp*1+0x6d]
  411fc3:	call   0x12edd876
  411fc8:	scas   eax,DWORD PTR es:[edi]
  411fc9:	jnp    0x411f7b
  411fcb:	and    al,0x1e
  411fcd:	fcom   QWORD PTR [edi+0x55]
  411fd0:	jecxz  0x411f89
  411fd2:	or     al,0x2a
  411fd4:	sub    BYTE PTR [edi+0x6ff2ce32],0x3d
  411fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fdc:	mov    esp,0x97070954
  411fe1:	push   eax
  411fe2:	jne    0x412035
  411fe4:	mov    ebp,0xb24e57aa
  411fe9:	inc    ebp
  411fea:	sbb    al,0x10
  411fec:	repnz xor eax,0x252e951d
  411ff2:	(bad)  
  411ff3:	adc    DWORD PTR [eax],edi
  411ff5:	and    esi,DWORD PTR [ebx+0x57738d60]
  411ffb:	jmp    0x411fa4
  411ffd:	mov    ds:0xd29ba384,al
  412002:	lahf   
  412003:	out    0x99,eax
  412005:	sub    ah,BYTE PTR [esi-0x70]
  412008:	cmp    BYTE PTR [ecx+0x7561f45f],ah
  41200e:	push   cs
  41200f:	jns    0x411fe1
  412011:	dec    ebx
  412012:	xchg   edi,eax
  412013:	(bad)  
  412014:	dec    ecx
  412015:	jmp    0x826ab013
  41201a:	cmc    
  41201b:	(bad)  
  41201c:	(bad)  
  41201d:	xor    eax,0xd932afa9
  412022:	jmp    0x411fda
  412024:	xchg   DWORD PTR [ebp+0x21],esp
  412027:	inc    ecx
  412028:	rcl    ah,1
  41202a:	cmp    ch,al
  41202c:	fbstp  TBYTE PTR [eax]
  41202e:	lock in al,0x2c
  412031:	test   eax,0x871ee42c
  412036:	or     al,0xf4
  412038:	outs   dx,BYTE PTR ds:[esi]
  412039:	inc    ecx
  41203a:	aad    0xaa
  41203c:	xchg   esp,eax
  41203d:	mov    bl,0x51
  41203f:	sbb    al,0x14
  412041:	push   esp
  412042:	jp     0x412036
  412044:	test   ch,al
  412046:	sbb    DWORD PTR [ebx+0xb5dd930],ebp
  41204c:	mov    cl,0x6e
  41204e:	fbld   TBYTE PTR [edx]
  412050:	out    0xde,eax
  412052:	das    
  412053:	cmp    esi,DWORD PTR [edi+0x73]
  412056:	repnz push ebp
  412058:	xor    al,al
  41205a:	adc    dl,cl
  41205c:	retf   
  41205d:	in     al,dx
  41205e:	push   esi
  41205f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412060:	out    0x91,eax
  412062:	leave  
  412063:	stc    
  412064:	push   ebp
  412065:	iret   
  412066:	icebp  
  412067:	or     ch,BYTE PTR [eax-0x73e8a343]
  41206d:	sub    eax,0xffb16d0c
  412072:	leave  
  412073:	add    BYTE PTR [edx+0x6a],0x7
  412077:	test   DWORD PTR [di+0x7a],ebx
  41207b:	jbe    0x412034
  41207d:	(bad)
  412081:	xchg   al,bh
  412083:	or     dh,BYTE PTR [eax+eiz*4-0x59]
  412087:	mov    WORD PTR [edx-0x56],ss
  41208a:	push   cs
  41208b:	in     al,dx
  41208c:	add    ebp,edi
  41208e:	xchg   edi,eax
  41208f:	ins    BYTE PTR es:[edi],dx
  412090:	sub    esp,ecx
  412092:	mov    dh,BYTE PTR [eax-0x3a]
  412095:	pop    edi
  412096:	mov    ds:0x46a03754,eax
  41209b:	dec    esi
  41209c:	hlt    
  41209d:	retf   
  41209e:	jb     0x4120c2
  4120a0:	add    al,0xdd
  4120a2:	add    BYTE PTR [edi+0x21c76578],dh
  4120a8:	test   eax,0x961ce71e
  4120ad:	sar    al,cl
  4120af:	add    al,0x25
  4120b1:	cmp    eax,0x4dcbae35
  4120b6:	pop    ebp
  4120b7:	mov    ebx,0x750b00ca
  4120bc:	xchg   DWORD PTR [ebx-0x29],ecx
  4120bf:	mov    ebp,0xc360008b
  4120c4:	imul   ebp,ebx,0x48a8bb0a
  4120ca:	out    0x2b,eax
  4120cc:	ret    0x2fe3
  4120cf:	pop    es
  4120d0:	shl    BYTE PTR [ebx+0x4f],1
  4120d3:	sub    al,0xab
  4120d5:	sti    
  4120d6:	or     al,bh
  4120d8:	xchg   edx,eax
  4120d9:	xchg   DWORD PTR [edx],edx
  4120db:	jmp    0x127a:0xb89ee045
  4120e2:	hlt    
  4120e3:	scas   al,BYTE PTR es:[edi]
  4120e4:	xchg   ebp,eax
  4120e5:	lods   al,BYTE PTR ds:[esi]
  4120e6:	push   edx
  4120e7:	ret    0x69b6
  4120ea:	pop    eax
  4120eb:	ins    BYTE PTR es:[edi],dx
  4120ec:	lods   al,BYTE PTR ds:[esi]
  4120ed:	lock inc edx
  4120ef:	push   ecx
  4120f0:	dec    ebp
  4120f1:	inc    esi
  4120f2:	popa   
  4120f3:	or     DWORD PTR [ebp+0x1fd78601],ecx
  4120f9:	xor    bh,BYTE PTR [eax]
  4120fb:	push   es
  4120fc:	inc    ecx
  4120fd:	call   0x7826:0xd85a066f
  412104:	lock add al,0x9f
  412107:	loope  0x41213f
  412109:	out    dx,eax
  41210a:	sub    DWORD PTR [esi-0x59956175],edi
  412110:	jg     0x41217b
  412112:	inc    esp
  412113:	sbb    ebx,DWORD PTR [ecx+0xb769fb6]
  412119:	jmp    0x4120a6
  41211b:	test   DWORD PTR [esi+0x6a],esp
  41211e:	(bad)  
  41211f:	daa    
  412120:	or     cl,BYTE PTR [ecx+0x545d5e0d]
  412126:	sub    bl,BYTE PTR [ebx-0x43]
  412129:	je     0xb7c0470b
  41212f:	mov    al,0xdf
  412131:	push   esi
  412132:	lds    edx,FWORD PTR [eax-0x38]
  412135:	imul   esi,ebp,0xe0339001
  41213b:	or     ch,cl
  41213d:	xor    dh,dl
  41213f:	not    bh
  412141:	hlt    
  412142:	xor    ch,bl
  412144:	sbb    al,0xc8
  412146:	push   edi
  412147:	rcl    BYTE PTR ds:0x28d5add5,1
  41214d:	mov    eax,ds:0xaeb832c0
  412152:	test   al,0x4d
  412154:	ds dec eax
  412156:	xchg   edi,eax
  412157:	xchg   edx,eax
  412158:	shl    BYTE PTR [ebx+0x17],0xec
  41215c:	mov    cl,0x45
  41215e:	stos   BYTE PTR es:[edi],al
  41215f:	jle    0x412108
  412161:	dec    eax
  412162:	adc    BYTE PTR [ecx+0x30],ch
  412165:	xor    eax,0xf48320c2
  41216a:	stos   DWORD PTR es:[edi],eax
  41216b:	loop   0x412154
  41216d:	xchg   ebx,eax
  41216e:	aaa    
  41216f:	pop    eax
  412170:	les    esp,FWORD PTR [edi]
  412172:	push   0xffffffb5
  412174:	scas   eax,DWORD PTR es:[edi]
  412175:	xor    eax,0x151147e9
  41217a:	pop    es
  41217b:	add    BYTE PTR [ecx+0x60],bl
  41217e:	(bad)  
  41217f:	call   0xf3781812
  412184:	push   cs
  412185:	(bad)  
  412187:	sbb    edi,edx
  412189:	lds    ecx,FWORD PTR [ebx]
  41218b:	pop    ebp
  41218c:	ret    
  41218d:	mov    esi,0xb138f2a7
  412192:	leave  
  412193:	scas   eax,DWORD PTR es:[edi]
  412194:	mov    dl,0xee
  412196:	push   edx
  412197:	pop    ecx
  412198:	pop    ebp
  412199:	retf   0x4f30
  41219c:	dec    esp
  41219d:	jb     0x412164
  41219f:	sahf   
  4121a0:	rcl    DWORD PTR [esi-0x786ce84e],0xf5
  4121a7:	in     al,dx
  4121a8:	sub    cl,BYTE PTR [eax]
  4121aa:	xchg   ebx,eax
  4121ab:	inc    ebp
  4121ac:	dec    esi
  4121ad:	fist   DWORD PTR [eax+0x7c]
  4121b0:	xchg   edi,eax
  4121b1:	mov    dl,0x1b
  4121b3:	xchg   DWORD PTR [esi+0x7f],edi
  4121b6:	sahf   
  4121b7:	retf   0xe7b8
  4121ba:	mov    bh,0x58
  4121bc:	outs   dx,DWORD PTR ds:[esi]
  4121bd:	std    
  4121be:	pop    ebp
  4121bf:	adc    ebp,esi
  4121c1:	mov    eax,ds:0xeadca0ec
  4121c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121c7:	call   0xcd029a69
  4121cc:	ins    BYTE PTR es:[edi],dx
  4121cd:	repnz pushf 
  4121cf:	ds into 
  4121d1:	push   es
  4121d2:	sbb    esp,DWORD PTR [eax]
  4121d4:	fisubr WORD PTR [ecx+edi*2+0x21]
  4121d8:	fld    TBYTE PTR [edx+0x25]
  4121db:	inc    edi
  4121dc:	jp     0x4121ea
  4121de:	add    esi,DWORD PTR [esi]
  4121e0:	aam    0xad
  4121e2:	inc    edi
  4121e3:	in     eax,dx
  4121e4:	pop    ecx
  4121e5:	add    BYTE PTR [ebx-0x389b0926],dh
  4121eb:	sar    DWORD PTR [ebx+0x7f],cl
  4121ee:	and    BYTE PTR [eax-0x2adb0b67],dl
  4121f4:	daa    
  4121f5:	dec    eax
  4121f6:	(bad)  
  4121f7:	mov    ds:0xef8d6dca,al
  4121fc:	cwde   
  4121fd:	xor    eax,0x3e352372
  412202:	into   
  412203:	xor    eax,0xbc56f8a5
  412208:	jbe    0x4121bd
  41220a:	or     al,0xf3
  41220c:	ret    0x8d69
  41220f:	sbb    eax,0xeb339d42
  412214:	xchg   esi,eax
  412215:	cdq    
  412216:	mov    edi,0x50d9d57d
  41221b:	dec    esp
  41221c:	ss inc eax
  41221e:	inc    esi
  41221f:	jbe    0x4121f9
  412221:	bound  ecx,QWORD PTR [ebx+0x38a3ed98]
  412227:	xchg   edi,eax
  412228:	dec    ebx
  412229:	xchg   edx,eax
  41222a:	mov    ch,0x6a
  41222c:	nop
  41222d:	(bad)  
  41222e:	shl    BYTE PTR [ebp+ebx*8+0x56],cl
  412232:	aaa    
  412233:	sbb    eax,0x5cb4fe72
  412238:	mov    al,0x11
  41223a:	cmc    
  41223b:	pop    ebx
  41223c:	xchg   DWORD PTR [ebx],ebp
  41223e:	mov    ah,0x87
  412240:	lds    ebx,FWORD PTR [eax]
  412242:	cmp    esi,DWORD PTR [edi+0x493c1117]
  412248:	push   edi
  412249:	shl    BYTE PTR [esi-0x3b],cl
  41224c:	or     al,0xc
  41224e:	pop    ds
  41224f:	adc    eax,0xf077226f
  412254:	jle    0x412243
  412256:	in     eax,0xf0
  412258:	popa   
  412259:	mov    ds:0xf8f3efd,eax
  41225e:	pop    ecx
  41225f:	add    al,0x59
  412261:	gs dec esp
  412263:	shl    DWORD PTR [ebp+0x3b],1
  412266:	sub    al,0x3a
  412268:	inc    ebx
  412269:	ret    0xb090
  41226c:	mov    BYTE PTR [eax],bh
  41226e:	retf   0x11bf
  412271:	mul    BYTE PTR fs:[esp+eiz*4-0x30cfe0d6]
  412279:	jnp    0x4122cd
  41227b:	xor    BYTE PTR [edx],cl
  41227d:	test   BYTE PTR [esp+edx*2],bh
  412280:	jg     0x4122c4
  412282:	xor    DWORD PTR [edi-0x3c138580],ebp
  412288:	mov    ah,0x4d
  41228a:	sub    esi,0x211ba0f9
  412290:	jl     0x412287
  412292:	mov    edx,edx
  412294:	jge    0x4122a9
  412296:	call   0x9db1:0xb270d95a
  41229d:	sbb    dh,BYTE PTR [ecx-0x66cbb8ab]
  4122a3:	push   esi
  4122a4:	rcr    ebp,1
  4122a6:	fcmovbe st,st(7)
  4122a8:	cmc    
  4122a9:	in     eax,dx
  4122aa:	aam    0x4e
  4122ac:	jns    0x4122ad
  4122ae:	ret    
  4122af:	ret    0x4f60
  4122b2:	mov    ecx,0x5b339871
  4122b7:	jmp    0x8a9eb428
  4122bc:	xchg   BYTE PTR [edi-0x21],ah
  4122bf:	add    BYTE PTR [eax-0xc],bl
  4122c2:	jp     0x4122fa
  4122c4:	jecxz  0x412310
  4122c6:	mov    al,BYTE PTR [edi+ecx*2]
  4122c9:	adc    eax,0xd5a65b99
  4122ce:	pusha  
  4122cf:	mov    WORD PTR [eax-0x30],ss
  4122d2:	lods   eax,DWORD PTR ds:[esi]
  4122d3:	ret    
  4122d4:	in     al,0xaf
  4122d6:	les    ebp,FWORD PTR [ebx]
  4122d8:	sbb    ecx,DWORD PTR [edx]
  4122da:	int3   
  4122db:	out    0xa3,eax
  4122dd:	mov    al,ds:0xe24ec77f
  4122e2:	mov    eax,0x19022f9b
  4122e7:	mov    edi,0xbc863c2b
  4122ec:	sbb    BYTE PTR [ebp-0x4a],0x56
  4122f0:	or     ecx,ebx
  4122f2:	ret    
  4122f3:	inc    edi
  4122f4:	not    DWORD PTR [ebp+0x6874a1cf]
  4122fa:	(bad)  
  4122fb:	sbb    eax,0xa155c069
  412300:	in     eax,0x88
  412302:	sbb    esp,ebx
  412304:	dec    ecx
  412305:	push   ds
  412306:	out    dx,al
  412307:	cld    
  412308:	sbb    dl,BYTE PTR [edi]
  41230a:	mov    dh,0x33
  41230c:	inc    ebp
  41230d:	popf   
  41230e:	dec    edx
  41230f:	cdq    
  412310:	jecxz  0x41233e
  412312:	or     DWORD PTR [eax+0x5b],ebx
  412315:	int3   
  412316:	mul    BYTE PTR [esi-0x6b]
  412319:	push   edx
  41231a:	daa    
  41231b:	xor    al,0x72
  41231d:	inc    ebp
  41231e:	or     BYTE PTR [ebp+eax*2+0x5a62f428],dl
  412325:	data16 hlt 
  412327:	or     dh,BYTE PTR [ecx+0x50]
  41232a:	rol    ah,cl
  41232c:	(bad)  
  41232d:	sub    eax,0x43275377
  412332:	or     al,0x3b
  412334:	mov    esi,0x4f3b1e1c
  412339:	pop    esp
  41233a:	les    edx,FWORD PTR [esi-0xc]
  41233d:	rcr    edx,cl
  41233f:	inc    ebp
  412340:	sub    eax,0x1cf58f1
  412345:	stos   BYTE PTR es:[edi],al
  412346:	call   0xebe:0xbf5da0ac
  41234d:	imul   ebp,esi,0x9f1f09
  412353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412354:	mov    esi,0x7e497f14
  412359:	aas    
  41235a:	jl     0x4122e0
  41235c:	cmp    ch,bl
  41235e:	add    al,0x2e
  412360:	inc    esi
  412361:	mov    ds:0x19baada5,eax
  412366:	jb     0x412319
  412368:	(bad)  
  412369:	mov    cl,0xe2
  41236b:	or     DWORD PTR [esi-0x5c],eax
  41236e:	data16 mov fs,WORD PTR [edx+eiz*8]
  412372:	sub    eax,0x84f11283
  412377:	xchg   ecx,eax
  412378:	rdpmc  
  41237a:	mov    ds:0xe7ad5937,al
  41237f:	fstp   TBYTE PTR [edx+0x53]
  412382:	and    al,0x2f
  412384:	and    al,0x7
  412386:	push   ss
  412387:	cmc    
  412388:	jmp    0x41231a
  41238a:	fiadd  DWORD PTR [esi]
  41238c:	add    al,0x1
  41238e:	sub    DWORD PTR [eax-0x40],ebp
  412391:	xor    edx,DWORD PTR [ecx-0x1107534e]
  412397:	and    DWORD PTR [ecx],esi
  412399:	or     DWORD PTR [edx-0x7c],ecx
  41239c:	mov    ah,BYTE PTR [edi-0x7827203b]
  4123a2:	jmp    0x531:0x903f4f99
  4123a9:	mov    eax,0x14643084
  4123ae:	push   ss
  4123af:	in     al,dx
  4123b0:	pop    edx
  4123b1:	xchg   ebx,eax
  4123b2:	adc    BYTE PTR [eax],0x6d
  4123b5:	shr    DWORD PTR [edi],cl
  4123b7:	jbe    0x412428
  4123b9:	add    eax,0x13b588e
  4123be:	fcom   st(0)
  4123c0:	idiv   BYTE PTR [eax]
  4123c2:	cmp    al,0x51
  4123c4:	mov    ds:0x5f11dedb,eax
  4123c9:	push   edi
  4123ca:	leave  
  4123cb:	ret    0xa123
  4123ce:	outs   dx,BYTE PTR ds:[esi]
  4123cf:	sahf   
  4123d0:	dec    esp
  4123d1:	enter  0x862c,0xa1
  4123d5:	mov    BYTE PTR cs:[ecx],cl
  4123d8:	cli    
  4123d9:	imul   ebx,DWORD PTR [esi],0x7f9538a5
  4123df:	(bad)  
  4123e2:	popa   
  4123e3:	bound  eax,QWORD PTR [ebp-0x71]
  4123e6:	aas    
  4123e7:	lock das 
  4123e9:	ficom  WORD PTR [ebx+0x6b]
  4123ec:	je     0x4123fc
  4123ee:	pop    ebx
  4123ef:	ins    BYTE PTR es:[edi],dx
  4123f0:	ror    DWORD PTR [edx+0x670ffaa9],0x73
  4123f7:	mov    esp,0x8a0b992d
  4123fc:	pop    esi
  4123fd:	dec    esp
  4123fe:	sub    dh,BYTE PTR [edi+0x2e]
  412401:	mov    dl,0x9d
  412403:	jge    0x41247d
  412405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412406:	jns    0x4123d3
  412408:	aas    
  412409:	mov    dl,0x22
  41240b:	xor    al,0x17
  41240d:	iret   
  41240e:	popf   
  41240f:	xor    BYTE PTR [ecx-0x16],bl
  412412:	pusha  
  412413:	outs   dx,BYTE PTR ds:[esi]
  412414:	(bad)  
  412415:	sub    dh,ch
  412417:	jbe    0x4123aa
  412419:	cwde   
  41241a:	push   ecx
  41241b:	cmc    
  41241c:	jo     0x4123b0
  41241e:	add    edi,ecx
  412420:	cs mov ebp,0xa5ffd144
  412426:	fadd   QWORD PTR [ebx]
  412428:	cli    
  412429:	xor    esp,DWORD PTR ds:[edi]
  41242c:	mov    al,ds:0x92d3bbae
  412431:	sub    bl,BYTE PTR [ebx]
  412433:	pop    eax
  412434:	iret   
  412435:	push   esi
  412436:	pop    ds
  412437:	and    edi,esi
  412439:	imul   edi,DWORD PTR [ecx+ecx*1+0x3f],0x908a30e8
  412441:	std    
  412442:	xchg   BYTE PTR [eax],dh
  412444:	push   0x6bb7d1e8
  412449:	scas   eax,DWORD PTR es:[edi]
  41244a:	fistp  QWORD PTR [esi+eax*8]
  41244d:	and    dh,ah
  41244f:	cmp    al,0x5c
  412451:	mov    bh,0x8d
  412453:	mov    bh,BYTE PTR [ebx]
  412455:	call   0x75bd5cb2
  41245a:	rcr    BYTE PTR [edx-0x4a97e16d],cl
  412460:	shl    BYTE PTR [edi],0x0
  412463:	pop    esi
  412464:	ret    
  412465:	lock push edx
  412467:	mov    ebp,0x780312f7
  41246c:	aas    
  41246d:	jmp    0x41242a
  41246f:	or     DWORD PTR [ebx-0x48],edi
  412472:	ins    BYTE PTR es:[edi],dx
  412473:	out    dx,eax
  412474:	addr16 xor bl,BYTE PTR [bp+di-0x1]
  412479:	inc    ebp
  41247a:	pushf  
  41247b:	push   ecx
  41247c:	xchg   ebp,eax
  41247d:	mov    ebx,DWORD PTR [edx+edx*1-0x40]
  412481:	push   esi
  412482:	ds scas eax,DWORD PTR es:[edi]
  412484:	rcr    BYTE PTR [ebx],1
  412486:	push   ds
  412487:	adc    al,0x9d
  412489:	lods   al,BYTE PTR ds:[esi]
  41248a:	and    al,0xd9
  41248c:	mov    ah,0xc8
  41248e:	test   DWORD PTR [ecx],ecx
  412490:	loopne 0x412509
  412492:	in     eax,0xe1
  412494:	push   esp
  412495:	cmp    BYTE PTR [eax],bh
  412497:	adc    esp,DWORD PTR [edx+0x19]
  41249a:	sahf   
  41249b:	fadd   QWORD PTR [edx-0x8]
  41249e:	add    BYTE PTR ds:0x9049fd98,ah
  4124a4:	xchg   ebx,eax
  4124a5:	outs   dx,BYTE PTR ds:[esi]
  4124a6:	lock dec edx
  4124a8:	in     eax,0x94
  4124aa:	jbe    0x412506
  4124ac:	sar    DWORD PTR [esi],1
  4124ae:	xchg   esp,eax
  4124af:	in     al,0xe7
  4124b1:	mov    bl,0x51
  4124b3:	pop    ds
  4124b4:	cmp    DWORD PTR [esp+edi*2+0x7e],edi
  4124b8:	jmp    0x4124fc
  4124ba:	gs std 
  4124bc:	mov    dh,0xc6
  4124be:	(bad)  
  4124bf:	enter  0xd0c9,0x6f
  4124c3:	in     al,dx
  4124c4:	out    0x7b,al
  4124c6:	add    al,0xe4
  4124c8:	and    bl,BYTE PTR [edi+0x105234eb]
  4124ce:	imul   eax,DWORD PTR [edi-0x1c],0xffffffe6
  4124d2:	cmp    DWORD PTR [edx+0x58d26717],edi
  4124d8:	out    0x8e,eax
  4124da:	call   0x6b71f711
  4124df:	sub    ecx,eax
  4124e1:	add    al,0x65
  4124e3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4124e5:	push   0xf770baff
  4124ea:	mov    ?,ecx
  4124ec:	lea    esp,[edx]
  4124ee:	push   ebx
  4124ef:	test   eax,0xcb1b143f
  4124f4:	cwde   
  4124f5:	aam    0x3e
  4124f7:	jae    0x41252f
  4124f9:	sbb    edx,DWORD PTR [ebx-0x6e]
  4124fc:	les    edx,FWORD PTR [edi]
  4124fe:	dec    esi
  4124ff:	or     esi,DWORD PTR [esi]
  412501:	repz in al,dx
  412503:	lods   al,BYTE PTR ds:[esi]
  412504:	test   BYTE PTR [esi+ebx*2],ah
  412507:	adc    ebp,DWORD PTR es:[esi+0x1f4f908c]
  41250e:	dec    edi
  41250f:	rcl    BYTE PTR [edx+0x11],1
  412512:	sub    al,0xe2
  412514:	dec    ebx
  412515:	fdivr  QWORD PTR [edi]
  412517:	(bad)  
  412518:	nop
  412519:	or     eax,ebx
  41251b:	sub    eax,0x55dc7733
  412520:	pop    eax
  412521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412522:	aad    0x32
  412524:	and    DWORD PTR [edx-0xf],esi
  412527:	cmovp  ebx,DWORD PTR ds:0xf29e0773
  41252e:	imul   edx,ebp,0x3fb4e4a0
  412534:	push   ecx
  412535:	jecxz  0x4124f2
  412537:	cwde   
  412538:	fwait
  412539:	or     eax,0x442bf606
  41253f:	es fcmovne st,st(6)
  412542:	lds    edi,FWORD PTR [ecx]
  412544:	or     al,0xfb
  412546:	and    eax,0xc6db2c3b
  41254b:	sub    esi,esi
  41254d:	cmp    bh,dl
  41254f:	popa   
  412550:	inc    ecx
  412551:	add    al,0x9e
  412553:	add    BYTE PTR ds:0xc6866822,dh
  412559:	or     ebx,DWORD PTR [ebx]
  41255b:	cmp    eax,0xce5d48d8
  412560:	pusha  
  412561:	cld    
  412562:	xchg   ebp,eax
  412563:	jb     0x4125c0
  412565:	xchg   DWORD PTR [ecx-0x5a9cf47a],edx
  41256b:	dec    ebx
  41256c:	or     DWORD PTR [ecx],0x7132bc2f
  412572:	jp     0x412520
  412574:	xor    BYTE PTR [ebx+ebp*8+0x38273d22],0xc0
  41257c:	jb     0x4125b2
  41257e:	addr16 cdq 
  412580:	dec    ecx
  412581:	das    
  412582:	inc    esp
  412583:	sub    dl,BYTE PTR [eax]
  412585:	pushf  
  412586:	add    al,0x29
  412588:	adc    eax,0x3182e372
  41258d:	test   cl,0x6
  412590:	inc    edx
  412591:	and    DWORD PTR [edx],ecx
  412593:	idiv   DWORD PTR [edx]
  412595:	lods   eax,DWORD PTR ds:[esi]
  412596:	jl     0x4125fa
  412598:	pop    esi
  412599:	inc    edi
  41259a:	arpl   WORD PTR [esi-0x5fd16b92],di
  4125a0:	fadd   QWORD PTR ds:0x2cbc7b83
  4125a6:	shl    DWORD PTR [ecx-0x7ac76cf8],0xa9
  4125ad:	add    DWORD PTR [esi+eiz*4+0x0],edx
  4125b1:	out    dx,al
  4125b2:	rcl    bl,cl
  4125b4:	dec    esp
  4125b5:	mov    eax,edx
  4125b7:	addr16 call 0xfd3f:0x92183823
  4125bf:	repnz imul esi,DWORD PTR [edi+0x5940a07b],0x73f3eaee
  4125ca:	cld    
  4125cb:	(bad)  
  4125cc:	mov    dl,0xff
  4125ce:	test   DWORD PTR [bx+0x4ec6],esi
  4125d3:	jp     0x412627
  4125d5:	stos   BYTE PTR es:[edi],al
  4125d6:	ror    BYTE PTR [ecx+0xe],0xd8
  4125da:	adc    al,0x5a
  4125dc:	adc    DWORD PTR [edx],edi
  4125de:	xlat   BYTE PTR ds:[ebx]
  4125df:	adc    edx,DWORD PTR [eax+0x2e]
  4125e2:	add    al,0x23
  4125e4:	adc    DWORD PTR [esi+0x55],edi
  4125e7:	in     al,0x99
  4125e9:	add    ebx,DWORD PTR [ebx-0x2]
  4125ec:	inc    eax
  4125ed:	adc    al,0xb5
  4125ef:	jl     0x41258d
  4125f1:	sahf   
  4125f2:	repnz xlat BYTE PTR ds:[ebx]
  4125f4:	push   ecx
  4125f5:	xor    dh,BYTE PTR [edi-0x78]
  4125f8:	jb     0x4125a5
  4125fa:	pop    esi
  4125fb:	xor    BYTE PTR [ebx],dh
  4125fd:	cmp    DWORD PTR [ebp-0x7a],ecx
  412600:	or     BYTE PTR [ebp+esi*8+0x1ce8d35b],dh
  412607:	repnz daa 
  412609:	cmp    eax,0xda864440
  41260e:	dec    ebx
  41260f:	adc    ebp,DWORD PTR [eax+edi*1-0x46]
  412613:	cs jae 0x412667
  412616:	push   esp
  412617:	push   esi
  412618:	mov    ecx,0x227966e1
  41261d:	ficomp WORD PTR [esi]
  41261f:	cmp    eax,0x9c609a17
  412624:	jmp    0x851b4bc7
  412629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41262a:	xor    BYTE PTR [ebx*1+0x3026cf56],ah
  412631:	xor    eax,DWORD PTR [edx]
  412633:	imul   eax,DWORD PTR [ecx+0x14],0x3e
  412637:	(bad)  
  412638:	and    BYTE PTR [eax-0x60],bh
  41263b:	add    dh,al
  41263d:	imul   ecx,DWORD PTR [ebp-0x3dadc5fb],0x45
  412644:	test   BYTE PTR [ebx],ch
  412646:	ins    DWORD PTR es:[edi],dx
  412647:	mov    WORD PTR [edx-0x3bb3e23c],?
  41264d:	cmp    DWORD PTR [edx-0x705b4637],ecx
  412653:	add    bh,ch
  412655:	sbb    al,0x7a
  412657:	lock mov ds:0xd671bbd9,eax
  41265d:	jmp    0x96fa8511
  412662:	das    
  412663:	hlt    
  412664:	sub    ebp,DWORD PTR [ebp+0x3ea5b228]
  41266a:	pusha  
  41266b:	and    BYTE PTR [ecx],cl
  41266d:	dec    ebx
  41266e:	clc    
  41266f:	mov    esp,ecx
  412671:	sub    al,0x94
  412673:	enter  0x4a2a,0x40
  412677:	push   ebp
  412678:	rcl    ecx,0xd1
  41267b:	int3   
  41267c:	push   ecx
  41267d:	aas    
  41267e:	je     0x4126dd
  412680:	les    eax,FWORD PTR [edi+0x29]
  412683:	inc    edi
  412684:	sub    al,0xfe
  412686:	test   DWORD PTR [edi-0x4e],esi
  412689:	mov    esi,0xea5a980e
  41268e:	xor    esi,ecx
  412690:	aaa    
  412691:	dec    edi
  412692:	mov    ecx,0x23355153
  412697:	jne    0x4126a4
  412699:	dec    esi
  41269a:	push   esi
  41269b:	inc    esi
  41269c:	dec    esp
  41269d:	aam    0x4f
  41269f:	cmp    ah,ch
  4126a1:	into   
  4126a2:	lea    ebp,[esi+0x27]
  4126a5:	or     cl,al
  4126a7:	sub    eax,0xf4cfa555
  4126ac:	jmp    0x445a1f04
  4126b1:	add    al,al
  4126b3:	adc    DWORD PTR [esi+0x23],0x3ebd0f39
  4126ba:	push   ecx
  4126bb:	mov    DWORD PTR [ecx],ebx
  4126bd:	adc    eax,0x52fd538a
  4126c2:	and    DWORD PTR [eax+0x55],0x1b4f5fc2
  4126c9:	push   0xc7486377
  4126ce:	jmp    0x412734
  4126d0:	in     eax,dx
  4126d1:	cmp    al,0x1e
  4126d3:	mov    dl,0x58
  4126d5:	out    dx,eax
  4126d6:	popa   
  4126d7:	js     0x412743
  4126d9:	ss pusha 
  4126db:	push   cs
  4126dc:	test   edi,edi
  4126de:	hlt    
  4126df:	xor    BYTE PTR [edx],al
  4126e1:	hlt    
  4126e2:	test   eax,0x214e0089
  4126e7:	adc    eax,0x797d4f1e
  4126ec:	adc    ah,BYTE PTR [ebp+0x6e73024f]
  4126f2:	cmp    esp,edi
  4126f4:	imul   eax,edx,0xffffffa7
  4126f7:	cmc    
  4126f8:	inc    esp
  4126f9:	clc    
  4126fa:	test   DWORD PTR [esp+edi*4],edx
  4126fd:	mov    dh,0x2
  4126ff:	(bad)  
  412700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412701:	aas    
  412702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412703:	xrelease xchg DWORD PTR [ecx-0x38],edx
  412707:	mov    ah,0x32
  412709:	mov    eax,ds:0xc4fb2177
  41270e:	not    DWORD PTR [eax+0x18c3550]
  412714:	gs aas 
  412716:	(bad)  
  412717:	lea    edi,[esi]
  412719:	ss pop ebp
  41271b:	push   edx
  41271c:	mov    ebx,0xa15c72b2
  412721:	lock dec ecx
  412723:	retf   0xb7c6
  412726:	mov    eax,ds:0x1e090dfc
  41272b:	inc    ebx
  41272c:	inc    ebp
  41272d:	rol    DWORD PTR [ebx-0x42],cl
  412730:	and    ah,BYTE PTR [edi-0x8]
  412733:	inc    eax
  412734:	mov    al,BYTE PTR [ebp-0x26]
  412737:	shl    BYTE PTR [ebx-0x2],cl
  41273a:	jl     0x4126fa
  41273c:	mov    al,0x7e
  41273e:	adc    DWORD PTR [edi-0x26],ecx
  412741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412742:	xor    ch,BYTE PTR [eax]
  412744:	xlat   BYTE PTR ds:[ebx]
  412745:	loope  0x412722
  412747:	add    esi,DWORD PTR [edi+ecx*4]
  41274a:	xchg   esi,eax
  41274b:	je     0x41279d
  41274d:	push   edi
  41274e:	out    dx,al
  41274f:	cli    
  412750:	dec    ecx
  412751:	rol    bh,1
  412753:	inc    eax
  412754:	fistp  QWORD PTR [ebp+edi*2+0x1b9a02c9]
  41275b:	sbb    dl,ch
  41275d:	mov    bh,0xc5
  41275f:	push   edi
  412760:	std    
  412761:	lock loopne 0x412794
  412764:	dec    edx
  412765:	mov    ds:0xa2774199,al
  41276a:	push   edx
  41276b:	imul   DWORD PTR [edi+edx*8-0x78]
  41276f:	bound  edx,QWORD PTR [ebp+0x1d]
  412772:	adc    ch,al
  412774:	push   edx
  412775:	add    eax,DWORD PTR [esi]
  412777:	lods   al,BYTE PTR ds:[esi]
  412778:	(bad)  
  412779:	fcmove st,st(4)
  41277b:	inc    esi
  41277c:	jns    0x41278d
  41277e:	fstp   QWORD PTR [eax]
  412780:	and    eax,0xf7aee6b3
  412785:	ins    BYTE PTR es:[edi],dx
  412786:	mov    eax,DWORD PTR [ebp-0x69]
  412789:	idiv   ecx
  41278b:	push   esi
  41278c:	push   es
  41278d:	fucom  st(1)
  41278f:	or     DWORD PTR [eax],esi
  412791:	jae    0x4127ea
  412793:	ror    bl,cl
  412795:	xor    esp,edi
  412797:	mov    ah,BYTE PTR [ebx+0x721efdc]
  41279d:	add    esp,DWORD PTR [esi]
  41279f:	iret   
  4127a0:	pushf  
  4127a1:	ret    0xd7ed
  4127a4:	xor    eax,ebx
  4127a6:	mov    edi,0xb8046dd9
  4127ab:	mov    al,0xae
  4127ad:	shl    ebp,cl
  4127af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127b1:	inc    edi
  4127b2:	jnp    0x41280d
  4127b4:	push   ecx
  4127b5:	aam    0xb7
  4127b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127b8:	push   ecx
  4127b9:	scas   al,BYTE PTR es:[edi]
  4127ba:	out    dx,eax
  4127bb:	ja     0x4127e2
  4127bd:	lea    esi,[esi-0x30]
  4127c0:	xchg   ebp,esi
  4127c2:	sbb    DWORD PTR [edx-0x4a],eax
  4127c5:	dec    esi
  4127c6:	or     bl,BYTE PTR [eax-0x5b8485a6]
  4127cc:	fwait
  4127cd:	xchg   ecx,eax
  4127ce:	mov    ebp,0xd6f7a09a
  4127d3:	dec    edi
  4127d4:	cdq    
  4127d5:	mov    BYTE PTR ds:0x1c515700,dh
  4127db:	int3   
  4127dc:	inc    ebp
  4127dd:	clc    
  4127de:	mov    bl,0xfe
  4127e0:	add    DWORD PTR [eax],0xaa41c9fc
  4127e6:	lock retf 
  4127e8:	mov    ds,WORD PTR cs:[edx+esi*2]
  4127ec:	cmp    al,0x37
  4127ee:	mov    bl,0xae
  4127f0:	mov    ch,0xac
  4127f2:	pop    edx
  4127f3:	test   eax,0xe8d66593
  4127f8:	inc    edi
  4127f9:	inc    esi
  4127fa:	js     0x41286f
  4127fc:	adc    al,0x9b
  4127fe:	mov    eax,ds:0x97967a8f
  412803:	push   edx
  412804:	mov    esi,0xb7d51c08
  412809:	neg    BYTE PTR [esi+0x464af3ae]
  41280f:	push   ds
  412810:	js     0x412891
  412812:	adc    BYTE PTR [esp+edx*8],cl
  412815:	adc    al,0xd2
  412817:	std    
  412818:	mov    ch,0x3d
  41281a:	dec    esi
  41281b:	js     0x4127f1
  41281d:	or     al,0x78
  41281f:	push   0xfffffffc
  412821:	mov    edi,0xdebd299c
  412826:	addr16 js 0x412811
  412829:	and    al,0xe2
  41282b:	cli    
  41282c:	retf   
  41282d:	popf   
  41282e:	dec    ebp
  41282f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412830:	xchg   ah,ch
  412832:	jbe    0x412870
  412834:	mov    ds:0xc768c6f7,al
  412839:	pop    ss
  41283a:	jl     0x4127fb
  41283c:	fwait
  41283d:	inc    ecx
  41283e:	rcr    DWORD PTR [edx-0x537d3fdf],0x8b
  412845:	std    
  412846:	lea    ebp,[edx-0x72b3cf9a]
  41284c:	xor    cl,BYTE PTR [edi+0x40fb164c]
  412852:	lods   eax,DWORD PTR ds:[esi]
  412853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412854:	adc    al,0xd9
  412856:	test   BYTE PTR [eax+0x2c],0x66
  41285a:	mov    ch,0x5c
  41285c:	cmc    
  41285d:	fcom   QWORD PTR [ecx+0x3944b66e]
  412863:	adc    esi,DWORD PTR [esi-0x7f84ecd5]
  412869:	xchg   BYTE PTR [edx+0x6267f744],ch
  41286f:	or     BYTE PTR [edi],0x24
  412872:	add    DWORD PTR [edx],eax
  412874:	cmp    BYTE PTR [ebx+0x33939bad],dl
  41287a:	shl    BYTE PTR [eax],cl
  41287c:	pop    edi
  41287d:	lahf   
  41287e:	mov    al,0xa5
  412880:	call   0xed2b:0x3d222a1f
  412887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412888:	mov    dh,0x24
  41288a:	push   edx
  41288b:	out    0x13,eax
  41288d:	sbb    al,0x3
  41288f:	inc    ecx
  412890:	sbb    DWORD PTR [esi-0x3a83e4d1],0x4978e5c1
  41289a:	lods   al,BYTE PTR ds:[esi]
  41289b:	xchg   edx,eax
  41289c:	mov    al,0x96
  41289e:	call   0xf5cc:0x1a326cd8
  4128a5:	ds dec eax
  4128a7:	mov    ds:0x1ad4b11b,al
  4128ac:	mov    ds:0x3110361b,al
  4128b1:	ret    0xbe99
  4128b4:	aad    0x92
  4128b6:	adc    al,0xea
  4128b8:	(bad)  
  4128b9:	popf   
  4128ba:	arpl   WORD PTR [eax],si
  4128bc:	repnz iret 
  4128be:	stos   DWORD PTR es:[edi],eax
  4128bf:	xor    ebx,eax
  4128c1:	je     0x4128fc
  4128c3:	outs   dx,DWORD PTR ds:[esi]
  4128c4:	inc    edx
  4128c5:	aaa    
  4128c6:	clc    
  4128c7:	mov    dh,0xbb
  4128c9:	lods   al,BYTE PTR ds:[esi]
  4128ca:	(bad)  
  4128cb:	(bad)  
  4128cd:	add    DWORD PTR [edi-0x3a],edx
  4128d0:	jmp    0x78e13ee4
  4128d5:	mov    esp,0x24a54b17
  4128da:	cmp    eax,ebp
  4128dc:	jns    0x41294d
  4128de:	and    esi,DWORD PTR [ebp+ebx*2+0x4c]
  4128e2:	in     al,dx
  4128e3:	mov    edi,edi
  4128e5:	fwait
  4128e6:	dec    ebp
  4128e7:	mov    bh,0xc3
  4128e9:	dec    eax
  4128ea:	sti    
  4128eb:	lahf   
  4128ec:	sar    BYTE PTR [ecx-0x13],cl
  4128ef:	xchg   ebp,eax
  4128f0:	jp     0x951e97a1
  4128f6:	dec    ebx
  4128f7:	inc    ebp
  4128f8:	loope  0x412946
  4128fa:	or     edi,DWORD PTR [edx-0x2b]
  4128fd:	push   ebp
  4128fe:	mov    DWORD PTR [ebp+0x2e],edx
  412901:	mov    ebp,0x41f29e76
  412906:	fbld   TBYTE PTR [edx+0x713642d1]
  41290c:	fidivr WORD PTR [ebp-0x4e]
  41290f:	lahf   
  412910:	cmp    BYTE PTR [eax+0x25],0xb2
  412914:	push   esp
  412915:	xchg   ebx,eax
  412916:	in     eax,0x49
  412918:	mov    edx,0x2a5b992b
  41291d:	stos   BYTE PTR es:[edi],al
  41291e:	push   esi
  41291f:	loope  0x412962
  412921:	je     0x412991
  412923:	inc    dx
  412925:	mov    edx,0xf4e27388
  41292a:	inc    edi
  41292b:	mov    bh,0xc9
  41292d:	and    BYTE PTR [ebp+0x59ba5c92],ch
  412933:	cwde   
  412934:	cmp    DWORD PTR [edi-0x3f],edi
  412937:	mov    al,0x75
  412939:	push   ebx
  41293a:	inc    edi
  41293b:	dec    DWORD PTR [esi+0x1d]
  41293e:	mov    al,0xca
  412940:	mov    al,0xf1
  412942:	and    dh,0x3b
  412945:	add    BYTE PTR [si+0x62],al
  412949:	(bad)  
  41294a:	mov    ecx,ebp
  41294c:	ror    DWORD PTR [eax],cl
  41294e:	mov    dl,0x6b
  412950:	pop    ebp
  412951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412952:	jbe    0x4128f5
  412954:	jb     0x4129c1
  412956:	aam    0xd7
  412958:	pop    ecx
  412959:	sbb    eax,0xf758991c
  41295e:	jle    0x41299d
  412960:	push   0x45c2ec54
  412965:	fcom   QWORD PTR [edx+0x46939769]
  41296b:	adc    edx,DWORD PTR [edi-0x2765f0fd]
  412971:	mov    ebp,0x436c073e
  412976:	into   
  412977:	push   edx
  412978:	adc    al,0x9e
  41297a:	out    0xe6,al
  41297c:	or     BYTE PTR [ecx],bh
  41297e:	ja     0x4129bb
  412980:	call   0x5e591ba3
  412985:	out    dx,eax
  412986:	pop    ss
  412987:	out    0x49,al
  412989:	adc    ch,BYTE PTR [edi+0x2e64ea60]
  41298f:	aas    
  412990:	lds    ecx,FWORD PTR [edx-0x3c]
  412993:	mov    cs,WORD PTR [edi+0x17a35445]
  412999:	mov    al,ds:0x916c39f5
  41299e:	ins    DWORD PTR es:[edi],dx
  41299f:	sahf   
  4129a0:	rcr    bh,0x9e
  4129a3:	mov    edi,0x3f9b928a
  4129a8:	test   BYTE PTR [esi],0x3f
  4129ab:	mov    ch,0xe
  4129ad:	and    DWORD PTR [eax+0xd],ebp
  4129b0:	and    DWORD PTR [ebp+0x26],esi
  4129b3:	stos   BYTE PTR es:[edi],al
  4129b4:	dec    edx
  4129b5:	xchg   esi,eax
  4129b6:	lds    esp,FWORD PTR [esi]
  4129b8:	inc    edx
  4129b9:	adc    eax,0x94c73873
  4129be:	shl    ebx,0x6c
  4129c1:	pop    eax
  4129c2:	mov    ch,0x89
  4129c4:	cmp    ebp,DWORD PTR [esi]
  4129c6:	mov    al,ds:0xd88e8413
  4129cb:	clc    
  4129cc:	loop   0x4129ee
  4129ce:	adc    eax,0x1a1bd975
  4129d3:	outs   dx,BYTE PTR ds:[esi]
  4129d4:	(bad)  
  4129d5:	ss in  eax,0xb7
  4129d8:	sbb    dl,ah
  4129da:	daa    
  4129db:	imul   ebx,esi,0xffffffc0
  4129de:	call   0x4521f1f5
  4129e3:	xchg   BYTE PTR [edi+0x6c],cl
  4129e6:	repz or al,BYTE PTR [eax]
  4129e9:	pop    esp
  4129ea:	(bad)  
  4129ec:	lods   eax,DWORD PTR ds:[esi]
  4129ed:	stos   BYTE PTR es:[edi],al
  4129ee:	or     eax,0xb1c451cb
  4129f3:	pusha  
  4129f4:	xor    ch,al
  4129f6:	daa    
  4129f7:	in     eax,0x60
  4129f9:	xchg   esi,eax
  4129fa:	cld    
  4129fb:	ins    BYTE PTR es:[edi],dx
  4129fc:	jmp    0x4129f1
  4129fe:	sub    BYTE PTR [eax-0x15fed603],cl
  412a04:	aaa    
  412a05:	mov    ch,0x3
  412a07:	dec    esp
  412a08:	adc    BYTE PTR [ebx+0x644914af],cl
  412a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a0f:	fadd   DWORD PTR [ecx+0x7257f137]
  412a15:	hlt    
  412a16:	inc    eax
  412a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a18:	mov    DWORD PTR [esi-0x49a91ad0],0xbbc9db72
  412a22:	xchg   ebx,eax
  412a23:	popa   
  412a24:	jae    0x4129b1
  412a26:	stc    
  412a27:	add    cl,BYTE PTR [ecx]
  412a29:	(bad)  
  412a2a:	in     al,dx
  412a2b:	test   eax,0xd361a84b
  412a30:	rol    ch,1
  412a32:	aam    0x18
  412a34:	idiv   DWORD PTR [ecx+esi*4+0x76]
  412a38:	mov    bh,0x52
  412a3a:	js     0x412a89
  412a3c:	fcmovb st,st(3)
  412a3e:	outs   dx,BYTE PTR ds:[esi]
  412a3f:	dec    ebp
  412a40:	icebp  
  412a41:	not    BYTE PTR [esi]
  412a43:	jg     0x4129e3
  412a45:	xor    eax,0x572af98e
  412a4a:	lods   eax,DWORD PTR ds:[esi]
  412a4b:	or     al,0x6e
  412a4d:	inc    edx
  412a4e:	or     al,0x8e
  412a50:	cmp    BYTE PTR [edx],dh
  412a52:	mov    eax,ds:0xe4e124c5
  412a57:	dec    esi
  412a58:	sbb    eax,DWORD PTR ds:0xfb3f2cd
  412a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a5f:	pop    edi
  412a60:	push   0xffffff96
  412a62:	and    edx,edi
  412a64:	lahf   
  412a65:	fcom   DWORD PTR [edx+0x58baba90]
  412a6b:	sbb    edi,DWORD PTR [edi+edx*4]
  412a6e:	dec    esp
  412a6f:	and    BYTE PTR [ebx+ebx*2],dl
  412a72:	cmp    eax,0x3e9b399a
  412a77:	inc    edi
  412a78:	in     eax,dx
  412a79:	jne    0x412a5c
  412a7b:	push   es
  412a7c:	push   esi
  412a7d:	ficom  WORD PTR [esi-0x1d60514b]
  412a83:	stos   DWORD PTR es:[edi],eax
  412a84:	popf   
  412a85:	push   esi
  412a86:	or     DWORD PTR [ecx-0x75],eax
  412a89:	adc    ebx,DWORD PTR [ebp+0x77fc4c23]
  412a8f:	inc    eax
  412a90:	fisub  WORD PTR [edi-0x37]
  412a93:	(bad)  
  412a94:	out    0xa9,al
  412a96:	xor    bh,BYTE PTR [eax-0x329c0891]
  412a9c:	add    eax,0x8d8df62e
  412aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aa2:	inc    edx
  412aa3:	imul   ecx,DWORD PTR [ecx-0x62],0xffffffb3
  412aa7:	clc    
  412aa8:	clc    
  412aa9:	inc    edi
  412aaa:	dec    eax
  412aab:	cmp    ecx,edx
  412aad:	ins    DWORD PTR es:[edi],dx
  412aae:	and    ah,dh
  412ab0:	neg    DWORD PTR [ecx-0x12]
  412ab3:	adc    BYTE PTR [edx],bl
  412ab5:	xchg   bl,ch
  412ab7:	add    al,0xa8
  412ab9:	jg     0x412a42
  412abb:	rcl    BYTE PTR [ecx],0x38
  412abe:	stc    
  412abf:	ins    BYTE PTR es:[edi],dx
  412ac0:	pop    edx
  412ac1:	sub    al,BYTE PTR [edx]
  412ac3:	lea    esp,[ecx]
  412ac5:	out    dx,al
  412ac6:	xchg   esp,eax
  412ac7:	add    edx,esi
  412ac9:	cmc    
  412aca:	xor    ah,BYTE PTR [eax]
  412acc:	js     0x412a6d
  412ace:	popa   
  412acf:	jmp    0x10b9:0x63c34e4e
  412ad6:	cmp    DWORD PTR [ebx+eiz*4-0x29b56c61],0x7a
  412ade:	js     0x412b12
  412ae0:	lods   eax,DWORD PTR ds:[esi]
  412ae1:	jmp    0x318771b6
  412ae6:	push   edi
  412ae7:	xchg   esi,eax
  412ae8:	icebp  
  412ae9:	inc    ebx
  412aea:	lods   eax,DWORD PTR ds:[esi]
  412aeb:	(bad)  
  412aec:	js     0x412b0c
  412aee:	mov    edi,0xe291c8d9
  412af3:	psubw  mm5,mm2
  412af6:	loopne 0x412aea
  412af8:	loopne 0x412b0e
  412afa:	loopne 0x412b68
  412afc:	sub    DWORD PTR [ebx-0x77c5671a],0x1a1b5996
  412b06:	(bad)  
  412b08:	sbb    bh,ah
  412b0a:	scas   ax,WORD PTR es:[edi]
  412b0c:	lds    edi,FWORD PTR [esi+0xbdc86b1]
  412b12:	push   esp
  412b13:	xchg   esp,eax
  412b14:	xor    ecx,DWORD PTR [edx]
  412b16:	rcl    DWORD PTR ds:0xd125004a,cl
  412b1c:	dec    edi
  412b1d:	rcl    BYTE PTR [ecx],0x11
  412b20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b21:	addr16 mov ch,0x97
  412b24:	in     eax,dx
  412b25:	push   ecx
  412b26:	and    BYTE PTR [ecx+0x67],al
  412b29:	mov    ebx,?
  412b2b:	(bad)  
  412b2c:	dec    edi
  412b2d:	cmp    al,bh
  412b2f:	ins    BYTE PTR es:[edi],dx
  412b30:	rcr    BYTE PTR [ebp-0x77ee2f3f],0x5d
  412b37:	(bad)
  412b3a:	sti    
  412b3b:	inc    edx
  412b3c:	pop    ebx
  412b3d:	xlat   BYTE PTR ds:[ebx]
  412b3e:	mov    edi,0xcfb39873
  412b43:	pop    eax
  412b44:	push   0xf6b63c91
  412b49:	cmp    eax,0x3feb9624
  412b4e:	inc    ebx
  412b4f:	mov    al,0x10
  412b51:	cld    
  412b52:	arpl   WORD PTR [edi+ebp*2-0xd],ax
  412b56:	jns    0x412b90
  412b58:	add    al,0xff
  412b5a:	shl    DWORD PTR [ecx+0x2],1
  412b5d:	lods   al,BYTE PTR ds:[esi]
  412b5e:	bound  esi,QWORD PTR [eax]
  412b60:	lods   al,BYTE PTR ds:[esi]
  412b61:	sub    eax,0xfa1c6f44
  412b66:	jecxz  0x412bc9
  412b68:	lds    ebx,FWORD PTR [ecx]
  412b6a:	pop    ebx
  412b6b:	mov    edi,0xd5d617d9
  412b70:	call   0x599e:0x19630a2
  412b77:	cli    
  412b78:	bound  ecx,QWORD PTR ds:0x78b2dcdc
  412b7e:	xchg   ecx,eax
  412b7f:	inc    ecx
  412b80:	xchg   edi,eax
  412b81:	sbb    BYTE PTR [ebp+eax*2-0x12f07f96],bl
  412b88:	loop   0x412b52
  412b8a:	mov    ebx,0xc919879f
  412b8f:	cld    
  412b90:	fisubr WORD PTR [ebx+eax*4-0x76]
  412b94:	call   0x877a:0xfdc98e5b
  412b9b:	mov    ds:0xf1827cd9,al
  412ba0:	fwait
  412ba1:	xor    eax,0x498dcfde
  412ba6:	aaa    
  412ba7:	sub    al,0xfc
  412ba9:	jmp    0x412c0f
  412bab:	mov    al,ds:0xa3c480de
  412bb0:	repz ret 0x7a31
  412bb4:	sbb    BYTE PTR [ecx+eax*2+0x18],bl
  412bb8:	jns    0x412c2f
  412bba:	jp     0x412ba5
  412bbc:	in     al,0x1c
  412bbe:	mov    DWORD PTR [ecx*1+0x298180ba],ebp
  412bc5:	mov    edx,0xbe96a506
  412bca:	ss sub eax,0x21b5a41f
  412bd0:	lods   al,BYTE PTR ds:[esi]
  412bd1:	ror    BYTE PTR [eax-0x79],0x35
  412bd5:	(bad)  
  412bd6:	lahf   
  412bd7:	imul   edx,DWORD PTR [ecx-0x7],0x2050dc4c
  412bde:	mov    DWORD PTR [edi-0x6e],ebp
  412be1:	inc    ebx
  412be2:	inc    esi
  412be3:	xor    bh,BYTE PTR [edx-0x3d05cb1a]
  412be9:	cmp    al,0xeb
  412beb:	and    al,0x43
  412bed:	out    0xa,eax
  412bef:	in     eax,dx
  412bf0:	js     0x412bd9
  412bf2:	mov    ebx,0x65709fc1
  412bf7:	push   es
  412bf8:	inc    esp
  412bf9:	ins    BYTE PTR es:[edi],dx
  412bfa:	repz cmp DWORD PTR [ebp-0x18],0xffffff86
  412bff:	push   ebp
  412c00:	ret    
  412c01:	repz gs or al,0x33
  412c05:	ret    0x6872
  412c08:	sub    al,0x2f
  412c0a:	push   ds
  412c0b:	sub    dl,BYTE PTR [esi]
  412c0d:	sub    eax,0xeda7be4e
  412c12:	adc    esp,esi
  412c14:	loopne 0x412bf6
  412c16:	stos   DWORD PTR es:[edi],eax
  412c17:	iret   
  412c18:	cmc    
  412c19:	int    0x58
  412c1b:	data16 mov al,0x56
  412c1e:	ss test eax,0x77f1080b
  412c24:	push   sp
  412c26:	gs xchg ebp,eax
  412c28:	sbb    eax,0xaed05fff
  412c2d:	mov    WORD PTR cs:[ecx],es
  412c30:	push   ss
  412c31:	test   eax,0x81302ea1
  412c36:	and    al,bl
  412c38:	xor    al,0xca
  412c3a:	lods   al,BYTE PTR ds:[esi]
  412c3b:	xchg   edi,eax
  412c3c:	pop    eax
  412c3d:	inc    ebx
  412c3e:	push   edx
  412c3f:	hlt    
  412c40:	js     0x412be2
  412c42:	mov    WORD PTR [esi+0x43fdcfa1],fs
  412c48:	clc    
  412c49:	xchg   esi,eax
  412c4a:	repnz adc esp,ebp
  412c4d:	mov    ch,0x1e
  412c4f:	int3   
  412c50:	and    DWORD PTR [esi-0x158663e9],esi
  412c56:	xor    al,0xe3
  412c58:	push   edx
  412c59:	cmp    cl,BYTE PTR [ebx+0x367a2019]
  412c5f:	mov    dh,0xd6
  412c61:	and    dh,dh
  412c63:	ds daa 
  412c65:	dec    esi
  412c66:	and    DWORD PTR [ecx],esp
  412c68:	add    DWORD PTR [eax-0x7e],eax
  412c6b:	pop    esp
  412c6c:	nop
  412c6d:	in     eax,0x93
  412c6f:	mov    ch,0x87
  412c71:	sub    eax,0x67c1aca0
  412c76:	xchg   edi,eax
  412c77:	sub    bh,dh
  412c79:	push   ebx
  412c7a:	cdq    
  412c7b:	imul   esp,DWORD PTR [edi+0x9d546ac],0x77
  412c82:	in     eax,0x73
  412c84:	outs   dx,BYTE PTR ds:[esi]
  412c85:	sbb    bl,BYTE PTR [eax+ecx*4+0x347a3249]
  412c8c:	test   DWORD PTR [ebp+0x64f17d71],ebp
  412c92:	and    eax,0x8baf7093
  412c97:	out    dx,al
  412c98:	fbstp  TBYTE PTR [ebp+0x6f971012]
  412c9e:	les    edi,FWORD PTR [ebp+0x1c4cffb6]
  412ca4:	out    0x9e,eax
  412ca6:	ins    BYTE PTR es:[edi],dx
  412ca7:	bound  ebp,QWORD PTR [ecx]
  412ca9:	xchg   ebx,eax
  412caa:	push   ebx
  412cab:	aaa    
  412cac:	xor    DWORD PTR [edi-0x2ea913b0],ecx
  412cb2:	vmread DWORD PTR [ecx],esp
  412cb5:	arpl   WORD PTR [edx+0x1e],si
  412cb8:	cli    
  412cb9:	jmp    0xcdf7:0xbea1055
  412cc0:	daa    
  412cc1:	mov    ds:0xb9e11013,al
  412cc6:	sti    
  412cc7:	in     al,0xf5
  412cc9:	push   0xf82cd5d6
  412cce:	shl    DWORD PTR [ecx-0x24d68aee],cl
  412cd4:	mov    al,0x54
  412cd6:	rcr    ch,cl
  412cd8:	loopne 0x412cfe
  412cda:	rol    DWORD PTR [edi],cl
  412cdc:	(bad)  
  412cdd:	dec    ebx
  412cde:	push   cs
  412cdf:	jg     0x412d45
  412ce1:	dec    edx
  412ce2:	das    
  412ce3:	adc    ebx,DWORD PTR [eax-0x7433ed62]
  412ce9:	mov    cl,0x14
  412ceb:	cwde   
  412cec:	lea    ecx,[edi-0xb]
  412cef:	in     eax,dx
  412cf0:	xor    DWORD PTR [edi],ebp
  412cf2:	loop   0x412d03
  412cf4:	sbb    edx,DWORD PTR [ebp-0x78]
  412cf7:	cld    
  412cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cf9:	jle    0x412d5b
  412cfb:	loopne 0x412d6a
  412cfd:	test   BYTE PTR [esi],ah
  412cff:	lds    edx,FWORD PTR [eax+0x7b41aa83]
  412d05:	jl     0x412ccc
  412d07:	je     0x412cfc
  412d09:	push   esi
  412d0a:	jg     0x412d43
  412d0c:	sbb    BYTE PTR [esi+eax*1],dl
  412d0f:	xchg   edx,eax
  412d10:	sbb    ebp,DWORD PTR ds:0xc2a59090
  412d16:	aaa    
  412d17:	adc    BYTE PTR [ebx+0x28801d89],bh
  412d1d:	mov    bh,BYTE PTR [ebx]
  412d1f:	xchg   DWORD PTR [esi+edx*2-0x506b0c44],esi
  412d26:	dec    ebp
  412d27:	pop    es
  412d28:	daa    
  412d29:	cmc    
  412d2a:	jecxz  0x412d1e
  412d2c:	les    edi,FWORD PTR [edi-0xc]
  412d2f:	stos   DWORD PTR es:[edi],eax
  412d30:	imul   eax,DWORD PTR ds:0x85cbce22,0xf9ff7a5e
  412d3a:	pop    es
  412d3b:	and    edi,ebp
  412d3d:	xchg   ebx,eax
  412d3e:	jbe    0x412d78
  412d40:	pop    ebx
  412d41:	stc    
  412d42:	dec    edi
  412d43:	popa   
  412d44:	aaa    
  412d45:	sub    BYTE PTR [eax-0x922982e],0x95
  412d4c:	mov    eax,ds:0x41f1a34c
  412d51:	lods   eax,DWORD PTR ds:[esi]
  412d52:	push   eax
  412d53:	out    dx,al
  412d54:	fidiv  WORD PTR [ebx+edi*2-0x62ef6ca0]
  412d5b:	mov    es,WORD PTR ds:0x75282ac7
  412d61:	push   ebp
  412d62:	fwait
  412d63:	icebp  
  412d64:	sub    dh,BYTE PTR [eax]
  412d66:	test   BYTE PTR [ecx-0x2dd55d40],ch
  412d6c:	push   ss
  412d6d:	mov    bl,0x39
  412d6f:	and    BYTE PTR [edi],0x81
  412d72:	jb     0x412d8d
  412d74:	jbe    0x412d3f
  412d76:	cli    
  412d77:	pushf  
  412d78:	or     ecx,DWORD PTR [esi]
  412d7a:	xchg   ebx,eax
  412d7b:	mov    DWORD PTR [ecx],ebx
  412d7d:	push   es
  412d7e:	cmp    eax,0x711619e0
  412d83:	mov    ds:0xf0c725b8,al
  412d88:	xchg   esp,eax
  412d89:	sahf   
  412d8a:	mov    DWORD PTR [eax-0x10],ebp
  412d8d:	push   0x2d13963e
  412d92:	out    dx,eax
  412d93:	loop   0x412d67
  412d95:	pushf  
  412d96:	fistp  WORD PTR [ebx+0x3138b9c3]
  412d9c:	push   edi
  412d9d:	mov    eax,0xb3aeba2c
  412da2:	outs   dx,BYTE PTR ds:[esi]
  412da3:	pop    edx
  412da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412da5:	and    al,0xfd
  412da7:	ins    BYTE PTR es:[edi],dx
  412da8:	dec    eax
  412da9:	(bad)  
  412daa:	xor    eax,0x38d87ef
  412daf:	gs js  0x412e27
  412db2:	jg     0x412d95
  412db4:	(bad)  
  412db5:	shr    esi,cl
  412db7:	push   ebx
  412db8:	mov    bh,0xa3
  412dba:	pop    ss
  412dbb:	cmp    dh,BYTE PTR [ebx]
  412dbd:	jno    0x412dd7
  412dbf:	inc    ebp
  412dc0:	sbb    edi,DWORD PTR [edx]
  412dc2:	pop    ds
  412dc3:	daa    
  412dc4:	push   ebx
  412dc5:	pusha  
  412dc6:	add    dh,BYTE PTR ds:0xefdf085a
  412dcc:	or     esi,esi
  412dce:	sub    eax,DWORD PTR [edi]
  412dd0:	pushf  
  412dd1:	pop    es
  412dd2:	and    BYTE PTR [edx+0x72],0x99
  412dd6:	push   ebp
  412dd7:	fstp   TBYTE PTR [esi-0x6d]
  412dda:	push   es
  412ddb:	xlat   BYTE PTR ds:[ebx]
  412ddc:	mov    al,ds:0xf8a8850b
  412de1:	dec    esi
  412de2:	mov    al,ds:0x1069815b
  412de7:	push   ebp
  412de8:	push   ds
  412de9:	addr16 das 
  412deb:	inc    edx
  412dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ded:	sbb    edx,DWORD PTR [ecx+0x19]
  412df0:	(bad)  
  412df1:	nop
  412df2:	xchg   edx,eax
  412df3:	les    ecx,FWORD PTR [esi]
  412df5:	inc    ebx
  412df6:	outs   dx,BYTE PTR ds:[esi]
  412df7:	cwde   
  412df8:	xor    al,0x58
  412dfa:	(bad)
  412dfd:	lods   al,BYTE PTR ds:[esi]
  412dfe:	dec    ecx
  412dff:	push   0x8318de19
  412e04:	call   DWORD PTR [ecx-0x3191d3ce]
  412e0a:	mov    edi,0x3f8da789
  412e0f:	and    ah,BYTE PTR [edi-0x30]
  412e12:	aam    0x28
  412e14:	jge    0x412dbd
  412e16:	jne    0x412e5b
  412e18:	lods   eax,DWORD PTR ds:[esi]
  412e19:	sbb    DWORD PTR [ecx],esp
  412e1b:	leave  
  412e1c:	test   esp,ebx
  412e1e:	lds    esi,FWORD PTR [ebx]
  412e20:	push   cs
  412e21:	lods   eax,DWORD PTR ds:[esi]
  412e22:	mov    dl,0x3e
  412e24:	jnp    0x412e4d
  412e26:	add    BYTE PTR [esi+0x11b995e4],bh
  412e2c:	adc    edx,DWORD PTR [eax-0x4e]
  412e2f:	fild   QWORD PTR [edx]
  412e31:	pop    edx
  412e32:	(bad)  
  412e34:	in     eax,dx
  412e35:	in     al,dx
  412e36:	(bad)  
  412e37:	out    dx,eax
  412e38:	stos   BYTE PTR es:[edi],al
  412e39:	out    dx,al
  412e3a:	mov    ds:0x2d265d5f,eax
  412e3f:	and    al,0xf
  412e41:	mov    esp,0x1b477260
  412e46:	fidivr WORD PTR [edx+0x79]
  412e49:	push   edi
  412e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e4b:	jmp    esi
  412e4d:	fldenv [eax+ebx*4-0x193b8fed]
  412e54:	aam    0x4c
  412e56:	dec    ebx
  412e57:	dec    ebp
  412e58:	push   ecx
  412e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e5a:	jnp    0x412e6a
  412e5c:	jb     0x412e63
  412e5e:	dec    esp
  412e5f:	add    eax,0xb1e3b126
  412e64:	fdivr  DWORD PTR [ebx+0x2]
  412e67:	sbb    eax,0x7f776ac5
  412e6c:	imul   edx,DWORD PTR [esi-0x11b0e857],0xffffffc5
  412e73:	sahf   
  412e74:	xchg   BYTE PTR [ecx-0x72689ede],dl
  412e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e7b:	dec    esp
  412e7c:	pop    eax
  412e7d:	leave  
  412e7e:	(bad)  
  412e7f:	sub    DWORD PTR [ecx-0x59119347],ebp
  412e85:	push   ss
  412e86:	push   esp
  412e87:	pop    es
  412e88:	hlt    
  412e89:	and    cl,bh
  412e8b:	or     ecx,DWORD PTR [ebx-0x49fa96df]
  412e91:	sbb    ecx,DWORD PTR [ebp-0x36]
  412e94:	add    DWORD PTR [edx-0x4cd1adb4],esp
  412e9a:	add    eax,0x776640ea
  412e9f:	mov    edi,0xc4a17a89
  412ea4:	jo     0x412e58
  412ea6:	in     al,0x35
  412ea8:	jl     0x412e9f
  412eaa:	mov    bl,BYTE PTR [ebp+0x75d45db7]
  412eb0:	cld    
  412eb1:	jle    0x412f07
  412eb3:	aam    0xa6
  412eb5:	push   edx
  412eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb7:	sbb    bl,BYTE PTR [ecx]
  412eb9:	loopne 0x412eab
  412ebb:	stos   DWORD PTR es:[edi],eax
  412ebc:	popa   
  412ebd:	bound  eax,QWORD PTR [eax+eiz*8+0x7413e9f7]
  412ec4:	inc    edi
  412ec5:	push   ds
  412ec6:	ja     0x412e93
  412ec8:	js     0x412e50
  412eca:	mov    esp,0xa8ebe309
  412ecf:	das    
  412ed0:	mov    ecx,0xe4568d2a
  412ed5:	in     eax,0x7d
  412ed7:	in     eax,0x44
  412ed9:	adc    DWORD PTR [edi],ebp
  412edb:	or     BYTE PTR [ebp+0x75],dh
  412ede:	adc    dl,BYTE PTR [eax]
  412ee0:	push   ebx
  412ee1:	adc    eax,0x85a67704
  412ee6:	scas   eax,DWORD PTR es:[edi]
  412ee7:	sbb    ah,dl
  412ee9:	fldcw  WORD PTR [ebx+0x11]
  412eec:	dec    esi
  412eed:	push   cs
  412eee:	test   DWORD PTR [ecx+0x6a6a110f],ebx
  412ef4:	push   eax
  412ef5:	mov    cl,0x3a
  412ef7:	outs   dx,DWORD PTR ss:[esi]
  412ef9:	xchg   edi,eax
  412efa:	push   0x6b
  412efc:	jbe    0x412ed0
  412efe:	xchg   ebp,eax
  412eff:	jo     0x412f2d
  412f01:	adc    eax,esi
  412f03:	push   ebx
  412f04:	xchg   esi,eax
  412f05:	iret   
  412f06:	jl     0x412f6f
  412f08:	adc    al,BYTE PTR [eax-0x62]
  412f0b:	aad    0x88
  412f0d:	mov    BYTE PTR [edx-0x28],0x3d
  412f11:	adc    BYTE PTR [eax],ch
  412f13:	jl     0x412f58
  412f15:	enter  0x6fcb,0xb3
  412f19:	add    ah,0x11
  412f1c:	cmp    dl,dl
  412f1e:	or     eax,0x60d4f369
  412f23:	mov    esp,DWORD PTR [esi+0x6891ca7f]
  412f29:	pop    ebx
  412f2a:	push   0x10
  412f2c:	dec    esp
  412f2d:	sub    al,0x7
  412f2f:	dec    esi
  412f30:	fwait
  412f31:	sbb    esi,DWORD PTR [edi]
  412f33:	test   al,0xd9
  412f35:	fst    QWORD PTR [ecx]
  412f37:	sub    ch,BYTE PTR [eax+0x55e520b]
  412f3d:	retf   
  412f3e:	fs inc esi
  412f40:	pop    ds
  412f41:	cmp    al,0x58
  412f43:	gs jne 0x412f71
  412f46:	out    dx,eax
  412f47:	loop   0x412f02
  412f49:	xlat   BYTE PTR ds:[ebx]
  412f4a:	cdq    
  412f4b:	(bad)  
  412f4c:	xchg   esp,eax
  412f4d:	hlt    
  412f4e:	cwde   
  412f4f:	xor    ah,ch
  412f51:	arpl   di,si
  412f53:	into   
  412f54:	ret    0xef20
  412f57:	aad    0x58
  412f59:	repz call 0xe53531b1
  412f5f:	out    0x87,eax
  412f61:	sub    bl,BYTE PTR [ebx-0x22871aa2]
  412f67:	jmp    0x8f69:0x6a83abc4
  412f6e:	push   eax
  412f6f:	jge    0x412f36
  412f71:	fist   DWORD PTR [edx]
  412f73:	push   ecx
  412f74:	inc    eax
  412f75:	xchg   dl,cl
  412f77:	out    0xb5,al
  412f79:	cdq    
  412f7a:	pop    ds
  412f7b:	clc    
  412f7c:	daa    
  412f7d:	cwde   
  412f7e:	push   eax
  412f7f:	scas   eax,DWORD PTR es:[edi]
  412f80:	xchg   esi,eax
  412f81:	call   0x510d:0xf8f9b3de
  412f88:	sub    eax,0x798c473c
  412f8d:	mov    ebx,0xaaf4148
  412f92:	fisub  WORD PTR [edx-0x1303181d]
  412f98:	push   0xffffffd3
  412f9a:	call   0x9dc63cf
  412f9f:	ret    0xe5a0
  412fa2:	push   esp
  412fa3:	inc    esp
  412fa4:	or     BYTE PTR [eax+0x19dc76cc],cl
  412faa:	lock dec edx
  412fac:	dec    ecx
  412fad:	pop    ss
  412fae:	mov    ecx,0x4f040986
  412fb3:	mov    ebp,esi
  412fb5:	cmp    eax,0xd2a475bc
  412fba:	jb     0x412f97
  412fbc:	test   cl,0x5d
  412fbf:	pop    ebx
  412fc0:	scas   al,BYTE PTR es:[edi]
  412fc1:	xchg   esi,eax
  412fc2:	mov    eax,ds:0x2f62a055
  412fc7:	add    eax,0x7b49f4c1
  412fcc:	jbe    0x41303e
  412fce:	push   0x6b918999
  412fd3:	das    
  412fd4:	imul   esi
  412fd6:	push   esp
  412fd7:	or     ebp,esp
  412fd9:	fldcw  WORD PTR [edx]
  412fdb:	lds    esi,FWORD PTR [eax-0x3a55b2c2]
  412fe1:	fidivr DWORD PTR [edi-0x617d27bd]
  412fe7:	xor    eax,0x7bc03877
  412fec:	add    eax,0x418bcb7b
  412ff1:	dec    esp
  412ff2:	loope  0x41302e
  412ff4:	and    eax,0xe035df73
  412ff9:	dec    edx
  412ffa:	aam    0x14
  412ffc:	dec    eax
  412ffd:	popf   
  412ffe:	ja     0x412f85
  413000:	pop    ss
  413001:	dec    eax
  413002:	lahf   
  413003:	push   es
  413004:	leave  
  413005:	dec    ebp
  413006:	sbb    BYTE PTR [ebx-0x178c513e],bh
  41300c:	(bad)  
  41300d:	imul   edi,DWORD PTR [esi+0x33],0x70
  413011:	mov    ch,0xf5
  413013:	cmp    BYTE PTR [ecx+0x14f2c5d6],ah
  413019:	cmp    al,BYTE PTR [ebp+0x58a63b99]
  41301f:	xchg   esp,eax
  413020:	dec    edi
  413021:	adc    BYTE PTR [ebp+0x5e],bl
  413024:	sbb    ah,BYTE PTR [esi]
  413026:	in     al,0x8a
  413028:	outs   dx,DWORD PTR ds:[esi]
  413029:	jne    0x412fc7
  41302b:	pop    ecx
  41302c:	dec    ebp
  41302d:	call   0x97a64ac8
  413032:	jge    0x41308d
  413034:	imul   ebp,eax,0x3d
  413037:	xchg   esp,eax
  413038:	or     al,0xcc
  41303a:	and    BYTE PTR [edx],dh
  41303c:	dec    eax
  41303d:	inc    eax
  41303e:	mov    edi,0xdd5b7ee3
  413043:	cmp    DWORD PTR [ebx+0x2eee497a],edx
  413049:	pusha  
  41304a:	mov    ds:0x2581cb50,eax
  41304f:	inc    edx
  413050:	mov    eax,ds:0x8706eb81
  413055:	adc    esi,DWORD PTR [edi]
  413057:	push   cs
  413058:	and    edx,DWORD PTR [ebp+0x49]
  41305b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41305c:	add    ebp,ebx
  41305e:	xchg   DWORD PTR [edi],ebx
  413060:	ret    0x5ce0
  413063:	pop    ds
  413064:	mov    ds:0x5f75fff6,eax
  413069:	stos   BYTE PTR es:[edi],al
  41306a:	aam    0x85
  41306c:	push   0x1f27a9f2
  413071:	pop    ebp
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	add    al,0x2f
  413075:	xor    eax,0x75c413cd
  41307a:	sbb    DWORD PTR [esi],0xb04f273c
  413080:	or     DWORD PTR [ebx],esi
  413082:	fdiv   DWORD PTR [edi+0x62f98ee]
  413088:	jg     0x4130b9
  41308a:	inc    edi
  41308b:	jo     0x4130d1
  41308d:	rol    DWORD PTR [ebx-0x43],0xf0
  413091:	out    0x9f,al
  413093:	mov    edx,0xd3bba71
  413098:	xchg   ebp,eax
  413099:	cmp    al,0xed
  41309b:	lods   al,BYTE PTR ds:[esi]
  41309c:	xchg   BYTE PTR [ecx],ah
  41309e:	call   0xa68b:0x22dc085e
  4130a5:	icebp  
  4130a6:	inc    esi
  4130a7:	lds    esp,FWORD PTR [ecx-0x74d26c51]
  4130ad:	retf   0x8632
  4130b0:	jge    0x41311a
  4130b2:	or     DWORD PTR gs:[ecx+edx*8-0x2f2f998d],eax
  4130ba:	jns    0x41304e
  4130bc:	retf   
  4130bd:	outs   dx,DWORD PTR ds:[esi]
  4130be:	js     0x4130a6
  4130c0:	cs leave 
  4130c2:	and    DWORD PTR [ebx+0x1f7327ac],ebp
  4130c8:	jmp    0xe5281b38
  4130cd:	icebp  
  4130ce:	add    DWORD PTR [edx],0x9ca27e34
  4130d4:	xor    ch,cl
  4130d6:	push   eax
  4130d7:	enter  0xa5a1,0xf8
  4130db:	ins    BYTE PTR es:[edi],dx
  4130dc:	pop    esi
  4130dd:	fstp   st(7)
  4130df:	mov    ds:0x9453a19b,al
  4130e4:	fnsave [edx]
  4130e6:	pop    eax
  4130e7:	jo     0x413125
  4130e9:	test   al,0x4e
  4130eb:	push   esp
  4130ec:	sub    cl,BYTE PTR [ecx+0x25]
  4130ef:	inc    ebx
  4130f0:	sbb    eax,0xd5c89598
  4130f5:	enter  0x4188,0x21
  4130f9:	outs   dx,DWORD PTR ds:[esi]
  4130fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130fb:	lods   al,BYTE PTR ds:[esi]
  4130fc:	test   eax,0x29018cf8
  413101:	pop    eax
  413102:	clc    
  413103:	cmp    eax,0x816b1322
  413108:	and    al,BYTE PTR [edx-0x7ff82b3]
  41310e:	add    DWORD PTR [ecx+0x65],eax
  413111:	cmp    DWORD PTR [ebp-0x42d06c64],ecx
  413117:	dec    ecx
  413118:	cli    
  413119:	sbb    esi,DWORD PTR [ebp+0x31d68ac4]
  41311f:	sar    BYTE PTR [esp+edx*8],0xc8
  413123:	dec    ebp
  413124:	pop    ds
  413125:	int3   
  413126:	pop    ebp
  413127:	sti    
  413128:	add    al,0x24
  41312a:	aam    0x39
  41312c:	xor    al,BYTE PTR [edi]
  41312e:	sub    bh,BYTE PTR [edi+edi*1-0x2c]
  413132:	push   cs
  413133:	imul   ebp,DWORD PTR [esi+ecx*2],0x5f5bd242
  41313a:	pop    ss
  41313b:	lods   eax,DWORD PTR ds:[esi]
  41313c:	repnz dec ebp
  41313e:	inc    edx
  41313f:	or     BYTE PTR [esi-0x1a620573],dh
  413145:	lods   al,BYTE PTR fs:[esi]
  413147:	xor    BYTE PTR [eax],cl
  413149:	mov    bh,0x65
  41314b:	mov    esi,0x2611e2f2
  413150:	in     eax,0x40
  413152:	and    eax,0x403c4521
  413157:	mov    WORD PTR [ebx+0x7d],fs
  41315a:	rcl    DWORD PTR [eax+0x74],1
  41315d:	pop    esp
  41315e:	dec    esi
  41315f:	(bad)
  413163:	mov    al,ds:0x8e0b0627
  413168:	push   edi
  413169:	xchg   DWORD PTR [edx],esi
  41316b:	mov    ds:0xddcda145,al
  413170:	push   ecx
  413171:	ins    DWORD PTR es:[edi],dx
  413172:	push   eax
  413173:	cmc    
  413174:	ret    
  413175:	mov    esi,0x158fcae0
  41317a:	outs   dx,DWORD PTR ds:[esi]
  41317b:	imul   ecx,DWORD PTR [eax+ecx*4-0x25],0x77784769
  413183:	or     eax,0xd0460ecc
  413188:	loop   0x413191
  41318a:	xor    al,0x86
  41318c:	push   es
  41318d:	pop    edx
  41318e:	xchg   ecx,eax
  41318f:	sar    eax,0xa6
  413192:	mov    dh,0x78
  413194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413195:	sub    DWORD PTR [esi+0x6f],edi
  413198:	out    0xc8,al
  41319a:	sti    
  41319b:	push   ebp
  41319c:	xor    al,0x89
  41319e:	sub    al,0x21
  4131a0:	shl    ch,1
  4131a2:	add    cl,cl
  4131a4:	cs mov esi,0x7765ba86
  4131aa:	cmp    DWORD PTR [ecx],ecx
  4131ac:	rcr    dl,0x84
  4131af:	xor    ah,BYTE PTR [ecx+esi*8-0x54264973]
  4131b6:	jg     0x41316d
  4131b8:	jbe    0x4131d7
  4131ba:	je     0x413221
  4131bc:	jb     0x4131e2
  4131be:	mov    WORD PTR [ebp-0x297fa8c6],gs
  4131c4:	add    al,0x56
  4131c6:	cmp    al,0x2b
  4131c8:	jne    0x4131bd
  4131ca:	xor    BYTE PTR [edi-0x1b9cccec],cl
  4131d0:	add    al,0x3d
  4131d2:	dec    edx
  4131d3:	imul   ebx,DWORD PTR [esi-0x1edc00b3],0xffffff9b
  4131da:	pop    es
  4131db:	pop    ss
  4131dc:	push   eax
  4131dd:	stc    
  4131de:	mov    DWORD PTR ds:0xd41b5b88,ecx
  4131e4:	push   ds
  4131e5:	push   ecx
  4131e6:	bound  ecx,QWORD PTR [edx+edx*1-0x5ae18ca2]
  4131ed:	jg     0x413246
  4131ef:	repnz fild QWORD PTR [edx]
  4131f2:	pop    es
  4131f3:	push   edi
  4131f4:	dec    edx
  4131f5:	int    0xa1
  4131f7:	dec    eax
  4131f8:	cmp    esp,DWORD PTR [ecx]
  4131fa:	fcomp  DWORD PTR [ebx]
  4131fc:	xchg   esp,eax
  4131fd:	mov    ch,BYTE PTR [ebx]
  4131ff:	enter  0x1f31,0x56
  413203:	jp     0x41325a
  413205:	push   ecx
  413206:	dec    esp
  413207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413208:	mov    bl,0xcf
  41320a:	ja     0x41323b
  41320c:	mov    ebp,0xbd58e62
  413211:	mov    ds,ebp
  413213:	(bad)  
  413217:	js     0x41328d
  413219:	and    BYTE PTR [ebx-0x27],dh
  41321c:	mov    ebp,0x361cbcff
  413221:	sahf   
  413222:	pop    bp
  413224:	mov    al,0x5
  413226:	push   0x4b
  413228:	lods   al,BYTE PTR ds:[esi]
  413229:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41322b:	adc    eax,0x65f4c796
  413230:	sahf   
  413231:	mov    gs,edx
  413233:	sub    esp,DWORD PTR [ebp+esi*4-0x6f]
  413237:	pop    es
  413238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413239:	jg     0x41326d
  41323b:	inc    edx
  41323c:	pop    ebp
  41323d:	call   0x87fb:0xa3399731
  413244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413245:	(bad)  
  413246:	pushf  
  413247:	dec    ecx
  413248:	ret    
  413249:	inc    eax
  41324a:	jnp    0x41322e
  41324c:	push   0x61
  41324e:	gs (bad) 
  413250:	ja     0x4132a5
  413252:	fimul  WORD PTR [ecx+edi*4+0x4d]
  413256:	sbb    eax,0x815658f8
  41325b:	(bad)  
  41325c:	sbb    eax,DWORD PTR [ebx-0x13]
  41325f:	int3   
  413260:	sub    al,ch
  413262:	std    
  413263:	retf   0x58be
  413266:	and    eax,0xbda8bb27
  41326b:	jg     0x413257
  41326d:	jne    0x413203
  41326f:	ins    BYTE PTR es:[edi],dx
  413270:	sbb    bh,dh
  413272:	cdq    
  413273:	xchg   edi,eax
  413274:	xchg   ebp,eax
  413275:	and    BYTE PTR [ecx-0x3b],al
  413278:	imul   ecx,DWORD PTR [ebp-0x64],0x53
  41327c:	dec    ebp
  41327d:	push   esp
  41327e:	cli    
  41327f:	sub    ebp,esi
  413281:	dec    ecx
  413282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413283:	fisttp DWORD PTR gs:[edi]
  413286:	and    al,0xab
  413288:	jmp    0xcecb73f9
  41328d:	ret    0xa16e
  413290:	rcl    BYTE PTR [ebx-0x3f7ec80d],1
  413296:	push   0x99ea27e
  41329b:	inc    ebx
  41329c:	add    BYTE PTR [ebp-0x4b357822],al
  4132a2:	sbb    eax,0x54363429
  4132a7:	push   ebx
  4132a8:	add    eax,0xcf336d94
  4132ad:	sbb    al,ah
  4132af:	sbb    eax,0xace40fb4
  4132b4:	pop    edi
  4132b5:	mov    al,0xf9
  4132b7:	push   edx
  4132b8:	popa   
  4132b9:	push   0xffffffb5
  4132bb:	mov    ebp,0x56880c0f
  4132c0:	ja     0x4132cf
  4132c2:	mov    ch,0xf9
  4132c4:	fwait
  4132c5:	sbb    eax,DWORD PTR [ebx]
  4132c7:	outs   dx,BYTE PTR ds:[esi]
  4132c8:	lods   al,BYTE PTR ds:[esi]
  4132c9:	mov    WORD PTR [esi-0x4d],gs
  4132cc:	sbb    edx,DWORD PTR [eax+0x35]
  4132cf:	fst    st(6)
  4132d1:	mov    ds:0x7113bd6e,al
  4132d6:	jg     0x41332d
  4132d8:	mov    bh,0x8c
  4132da:	mov    bl,0x93
  4132dc:	sub    al,0x28
  4132de:	scas   al,BYTE PTR es:[edi]
  4132df:	fdivr  QWORD PTR [ecx+0x12c9aa9a]
  4132e5:	mov    edi,0xa12eaa2e
  4132ea:	pop    esi
  4132eb:	mov    ebp,0xc91becad
  4132f0:	lods   al,BYTE PTR ds:[esi]
  4132f1:	jecxz  0x413354
  4132f3:	xor    ebx,DWORD PTR fs:[ebx+0x4a505001]
  4132fa:	push   esi
  4132fb:	jbe    0x413365
  4132fd:	sahf   
  4132fe:	les    ecx,FWORD PTR [ebx-0x31]
  413301:	or     eax,0xbd699946
  413306:	nop
  413307:	dec    ebp
  413308:	mov    dl,0xe5
  41330a:	xchg   DWORD PTR [ecx],esi
  41330c:	mov    esp,0x3ff7d77c
  413311:	xor    ebx,DWORD PTR [ebx-0x67668529]
  413317:	adc    eax,0x6c1ac939
  41331c:	push   ecx
  41331d:	fisubr WORD PTR [ecx]
  41331f:	mov    eax,0x63d40391
  413324:	mov    dh,0x21
  413326:	mov    ebx,esi
  413328:	xchg   ecx,eax
  413329:	xchg   esi,eax
  41332a:	sub    edx,DWORD PTR [esi-0x66]
  41332d:	sbb    ch,BYTE PTR [eax+0x693cd2d6]
  413333:	data16 ror BYTE PTR [ecx],1
  413336:	add    DWORD PTR [esi+esi*8+0x3e],edi
  41333a:	mov    esp,0xa5f0f457
  41333f:	mov    al,0x4
  413341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413342:	sub    DWORD PTR [ebx-0x2e0ba110],ebp
  413348:	rcr    BYTE PTR [ecx-0x329f7101],0xad
  41334f:	dec    ebp
  413350:	aad    0x8d
  413352:	cld    
  413353:	je     0x41331e
  413355:	ins    BYTE PTR es:[edi],dx
  413356:	pop    ss
  413357:	cdq    
  413358:	test   DWORD PTR [esi+0x68370003],esp
  41335e:	or     BYTE PTR [ebx+esi*1-0x73],dh
  413362:	cmp    al,0xf9
  413364:	or     al,0x92
  413366:	lods   al,BYTE PTR ds:[esi]
  413367:	and    esi,eax
  413369:	pusha  
  41336a:	mov    esi,0x8511ff02
  41336f:	inc    esp
  413370:	sbb    bh,cl
  413372:	push   edx
  413373:	cmp    eax,0x5e4b17ac
  413378:	dec    edi
  413379:	push   es
  41337a:	(bad)  
  41337b:	out    dx,al
  41337c:	xchg   esi,eax
  41337d:	jnp    0x41331c
  41337f:	pop    esp
  413380:	jb     0x4133ee
  413382:	push   esp
  413383:	(bad)  
  413384:	in     al,dx
  413385:	ret    
  413386:	mov    ds:0x46b40c72,eax
  41338b:	dec    edi
  41338c:	xor    al,0x83
  41338e:	(bad)
  413393:	out    dx,eax
  413394:	xchg   dl,cl
  413396:	jmp    0xa72d:0x9f3f3955
  41339d:	ud1    edx,ecx
  4133a0:	adc    al,0xd7
  4133a2:	sub    DWORD PTR [ebx-0x60],0xbf56965c
  4133a9:	pop    edx
  4133aa:	jo     0x4133aa
  4133ac:	xchg   DWORD PTR [ebx],eax
  4133ae:	ins    BYTE PTR es:[edi],dx
  4133af:	dec    esi
  4133b0:	icebp  
  4133b1:	mov    edi,0x96235f91
  4133b6:	push   0x579bac76
  4133bb:	sbb    esp,DWORD PTR [esi]
  4133bd:	iret   
  4133be:	and    al,0x2b
  4133c0:	dec    ebx
  4133c1:	jae    0x4133d3
  4133c3:	pusha  
  4133c4:	aaa    
  4133c5:	cld    
  4133c6:	xlat   BYTE PTR ds:[ebx]
  4133c7:	les    esp,FWORD PTR [ebx+ebx*4-0x11078fe3]
  4133ce:	and    al,0xc1
  4133d0:	push   0xdb5ad5f3
  4133d5:	push   es
  4133d6:	and    eax,0x90866c04
  4133db:	jg     0x413373
  4133dd:	repz int 0xd8
  4133e0:	int3   
  4133e1:	jl     0x4133c1
  4133e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e4:	in     eax,dx
  4133e5:	pusha  
  4133e6:	loopne 0x413392
  4133e8:	data16 repnz and BYTE PTR [ecx-0x6b032e04],cl
  4133f0:	mov    eax,0xc802c5e6
  4133f5:	lock fcomp QWORD PTR [edi-0x1e]
  4133f9:	mov    ebx,DWORD PTR ds:0x7408ec29
  4133ff:	inc    edi
  413400:	mov    ds:0x983bcb79,eax
  413405:	inc    edx
  413406:	popa   
  413407:	and    BYTE PTR [bx+di],0x96
  41340b:	push   0x4feebfba
  413410:	or     BYTE PTR ds:0x195a1355,al
  413416:	dec    edx
  413417:	dec    edx
  413418:	leave  
  413419:	mov    dl,0x8d
  41341b:	ins    BYTE PTR es:[edi],dx
  41341c:	ficomp DWORD PTR [edx+eiz*4]
  41341f:	or     edi,edx
  413421:	or     eax,0x41b8c610
  413426:	lock test eax,0xdd669163
  41342c:	add    esp,ecx
  41342e:	and    DWORD PTR [esi+0x36],edx
  413431:	es mov esp,0xf244389a
  413437:	sar    BYTE PTR [ebx-0x5b],0xba
  41343b:	test   esp,eax
  41343d:	shl    bl,cl
  41343f:	ins    DWORD PTR es:[edi],dx
  413440:	pusha  
  413441:	hlt    
  413442:	lea    ebp,[edx+ebx*1+0x21]
  413446:	jne    0x413451
  413448:	cs cs mov ax,0xe573
  41344e:	or     esp,esp
  413450:	(bad)  
  413451:	mov    edi,DWORD PTR [eax-0x207118be]
  413457:	cwde   
  413458:	pop    ebp
  413459:	and    cl,bh
  41345b:	xor    bh,BYTE PTR [edx-0x2add7632]
  413461:	imul   edi,DWORD PTR [ecx],0xb5264c15
  413467:	imul   ecx,ebp,0xb06d52b6
  41346d:	pop    esi
  41346e:	sub    edi,DWORD PTR [ecx]
  413470:	jge    0x413434
  413472:	adc    esi,DWORD PTR [ecx+0x61]
  413475:	xor    eax,0xbede495
  41347a:	popf   
  41347b:	mov    eax,0x2e505a0d
  413480:	inc    ebx
  413481:	inc    edx
  413482:	xchg   esi,eax
  413483:	sbb    ecx,0xb9cc2192
  413489:	popf   
  41348a:	aad    0xcb
  41348c:	push   ebp
  41348d:	jno    0x4134e1
  41348f:	mov    edx,0xd408bce5
  413494:	test   cl,bh
  413496:	jl     0x413517
  413498:	(bad)  
  41349a:	fsubp  st(6),st
  41349c:	hlt    
  41349d:	cdq    
  41349e:	push   esi
  41349f:	pusha  
  4134a0:	jle    0x41346e
  4134a2:	loopne 0x4134b2
  4134a4:	in     eax,dx
  4134a5:	aas    
  4134a6:	jae    0x4134eb
  4134a8:	lods   al,BYTE PTR ds:[esi]
  4134a9:	or     eax,0xe744cab5
  4134ae:	scas   al,BYTE PTR es:[edi]
  4134af:	push   edx
  4134b0:	dec    esp
  4134b1:	mov    WORD PTR [eax],cs
  4134b3:	arpl   WORD PTR [eax],si
  4134b5:	mov    ds,WORD PTR [eax+0x1224cde]
  4134bb:	dec    esi
  4134bc:	pop    ss
  4134bd:	xchg   esi,eax
  4134be:	in     al,dx
  4134bf:	icebp  
  4134c0:	jg     0x41346c
  4134c2:	jbe    0x41345d
  4134c4:	int3   
  4134c5:	call   0x84af:0x450e9915
  4134cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134cd:	stos   DWORD PTR es:[edi],eax
  4134ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134cf:	and    eax,0x3404b30e
  4134d4:	fs adc ebx,ebp
  4134d7:	fadd   QWORD PTR [ebx+0x6335b7ef]
  4134dd:	xor    esp,DWORD PTR [eax]
  4134df:	cmp    ch,bh
  4134e1:	mov    ebp,0x8674d0d5
  4134e6:	mov    DWORD PTR [ebx-0x26],eax
  4134e9:	cmp    eax,0x97f6db27
  4134ee:	vdivss xmm7,xmm0,DWORD PTR [ebx]
  4134f2:	xchg   esp,eax
  4134f3:	loopne 0x413557
  4134f5:	pop    esi
  4134f6:	ret    0xc028
  4134f9:	mov    ah,0x1b
  4134fb:	mov    eax,0x69ab53bf
  413500:	adc    DWORD PTR cs:[eax-0x79b0f1cd],0xd7a0c1ba
  41350b:	test   BYTE PTR [ecx-0x75],ah
  41350e:	enter  0xe36b,0x8
  413512:	adc    dl,BYTE PTR [esi+0x514d3a52]
  413518:	fnstenv [edx]
  41351a:	lds    edi,FWORD PTR [edx]
  41351c:	shl    BYTE PTR [ebx],0x5e
  41351f:	and    al,0x30
  413521:	hlt    
  413522:	cmp    DWORD PTR [eax],eax
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	jnp    0x41355d
  413527:	mov    edx,0xf67c9cba
  41352c:	and    esp,DWORD PTR [ebp-0x67]
  41352f:	mov    eax,0xd3ea331f
  413534:	xchg   esi,eax
  413535:	xchg   edi,eax
  413536:	jle    0x41358a
  413538:	jb     0x4134f6
  41353a:	pop    ds
  41353b:	aad    0x67
  41353d:	pop    ds
  41353e:	ja     0x413543
  413540:	cmp    edi,ecx
  413542:	loope  0x4134eb
  413544:	call   0xcf15:0x5e459843
  41354b:	push   es
  41354c:	cmc    
  41354d:	sbb    eax,0x33401aa8
  413553:	and    ebp,ebp
  413555:	inc    ebp
  413556:	fwait
  413557:	add    al,0x38
  413559:	mov    esp,0x3d7e5bc9
  41355e:	lds    ebx,FWORD PTR [ebx+0x32]
  413561:	int    0x1b
  413563:	pop    esi
  413564:	jmp    FWORD PTR [ebx-0x3f4d427b]
  41356a:	cs mov cl,bh
  41356d:	mov    ebp,DWORD PTR [ebp+0x35a0b835]
  413573:	scas   al,BYTE PTR es:[edi]
  413574:	xchg   esp,esi
  413576:	adc    bl,BYTE PTR [ecx-0x18]
  413579:	out    dx,al
  41357a:	jno    0x41359e
  41357c:	dec    ebx
  41357d:	push   ebp
  41357e:	lods   al,BYTE PTR ds:[esi]
  41357f:	retf   0xceed
  413582:	das    
  413583:	sbb    ebp,0x3d
  413586:	cmp    eax,DWORD PTR [esi-0x55]
  413589:	pushf  
  41358a:	xor    BYTE PTR [ebx-0x3aacee9d],ah
  413590:	clc    
  413591:	shl    eax,1
  413593:	jmp    0xc28e8cbc
  413598:	(bad)  
  413599:	out    dx,al
  41359a:	mov    DWORD PTR [edi-0xd],edx
  41359d:	sub    eax,0x5e9be965
  4135a2:	into   
  4135a3:	daa    
  4135a4:	sub    al,0x8a
  4135a6:	pop    ds
  4135a7:	daa    
  4135a8:	cdq    
  4135a9:	jae    0x4135f9
  4135ab:	cmp    al,0xb1
  4135ad:	call   0x36b5:0x27c534e
  4135b4:	in     al,dx
  4135b5:	cwde   
  4135b6:	xor    BYTE PTR [ecx-0xa],dl
  4135b9:	mov    DWORD PTR [ebp-0x2f],eax
  4135bc:	stc    
  4135bd:	pop    ds
  4135be:	adc    ch,bl
  4135c0:	mov    edx,0xb05986aa
  4135c5:	mov    dl,0x83
  4135c7:	bound  ebx,QWORD PTR [bx-0x4f63]
  4135cc:	push   es
  4135cd:	jecxz  0x41359f
  4135cf:	adc    al,0x28
  4135d1:	dec    ebx
  4135d2:	sbb    al,0xf3
  4135d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135d5:	ins    BYTE PTR es:[edi],dx
  4135d6:	xor    BYTE PTR [esi],0xc9
  4135d9:	jo     0x413593
  4135db:	popa   
  4135dc:	push   ebx
  4135dd:	repnz dec esi
  4135df:	mov    ds:0x951b5a93,al
  4135e4:	mov    cs,WORD PTR [ecx+edi*4-0x4d4439c0]
  4135eb:	jl     0x41361a
  4135ed:	imul   edx,DWORD PTR [edx+0x7d],0x36763ad1
  4135f4:	dec    ebx
  4135f5:	nop
  4135f6:	push   edx
  4135f7:	bound  eax,QWORD PTR [edx-0x26531317]
  4135fd:	aaa    
  4135fe:	imul   DWORD PTR [esp+eax*2+0x18]
  413602:	inc    ecx
  413603:	aaa    
  413604:	xlat   BYTE PTR ds:[ebx]
  413605:	retf   
  413606:	push   ecx
  413607:	mov    edx,0xdd91755
  41360c:	jg     0x41363f
  41360e:	and    eax,0x1b452702
  413613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413614:	leave  
  413615:	adc    cl,BYTE PTR [esp+ebx*8]
  413618:	xchg   ecx,eax
  413619:	mov    BYTE PTR [ebx+0x7b],ch
  41361c:	scas   al,BYTE PTR es:[edi]
  41361d:	fwait
  41361e:	mov    ebx,0xe42350f6
  413623:	gs cld 
  413625:	mov    bh,0x56
  413627:	mov    WORD PTR [eax],gs
  413629:	jns    0x413657
  41362b:	mov    al,ds:0xe82a9536
  413630:	daa    
  413631:	fld    TBYTE PTR [edi+0x17]
  413634:	dec    ebp
  413635:	xchg   edx,eax
  413636:	hlt    
  413637:	push   edx
  413638:	ror    edi,0x5d
  41363b:	mov    ds:0x1270d92c,al
  413640:	scas   al,BYTE PTR es:[edi]
  413641:	adc    al,0xab
  413643:	mov    edx,0xb5b8deae
  413648:	sbb    BYTE PTR [edx+0x73],ch
  41364b:	out    dx,al
  41364c:	test   al,0x87
  41364e:	jno    0x413659
  413650:	daa    
  413651:	xchg   edx,eax
  413652:	inc    edx
  413653:	call   FWORD PTR [edx-0x55]
  413656:	out    0xfb,al
  413658:	sub    edx,DWORD PTR [eax+0x6b88ee1f]
  41365e:	sbb    edx,DWORD PTR [esi-0x48]
  413661:	or     BYTE PTR [eax+0x2b],dl
  413664:	imul   esi,DWORD PTR [esi+0x54],0xa779bcc7
  41366b:	pop    edx
  41366c:	jl     0x413654
  41366e:	pop    es
  41366f:	mov    ah,0xc3
  413671:	cdq    
  413672:	(bad)  
  413673:	jecxz  0x41366b
  413675:	mov    edi,0x938967bd
  41367a:	mov    BYTE PTR [ebx],bh
  41367c:	pop    ebp
  41367d:	aaa    
  41367e:	bnd jb 0x4136a1
  413681:	sub    DWORD PTR [ebp-0x6d],eax
  413684:	jge    0x413675
  413686:	(bad)  
  413687:	mov    ebx,0x8d3ba81c
  41368c:	jne    0x4136b9
  41368e:	in     eax,dx
  41368f:	mov    cl,0x47
  413691:	fstp   DWORD PTR [ebx-0xd85dc06]
  413697:	add    BYTE PTR [ecx+0x56],dl
  41369a:	or     esp,DWORD PTR [eax]
  41369c:	leave  
  41369d:	(bad)  
  41369e:	mov    edi,DWORD PTR [edi+0x65]
  4136a1:	push   ecx
  4136a2:	and    al,0x59
  4136a4:	inc    DWORD PTR [ecx]
  4136a6:	daa    
  4136a7:	dec    edx
  4136a8:	ins    BYTE PTR es:[edi],dx
  4136a9:	push   es
  4136aa:	seta   BYTE PTR [ebx-0x1b9866c5]
  4136b1:	inc    ebp
  4136b2:	push   es
  4136b3:	jo     0x413679
  4136b5:	out    0xa5,al
  4136b7:	shl    DWORD PTR [edx+0x7c0e097c],0x31
  4136be:	sahf   
  4136bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c0:	out    0x9f,al
  4136c2:	sbb    esi,DWORD PTR [edi+0x66fc6c77]
  4136c8:	sbb    BYTE PTR [eax],cl
  4136ca:	repz inc ebx
  4136cc:	mov    ?,WORD PTR [eax]
  4136ce:	push   ds
  4136cf:	and    BYTE PTR [edi-0x4ac56eb6],cl
  4136d5:	dec    edx
  4136d6:	fs ss cmc 
  4136d9:	pop    es
  4136da:	daa    
  4136db:	xor    BYTE PTR [esi-0x70fbae7f],0x9f
  4136e2:	call   DWORD PTR [eax+0x63780d0d]
  4136e8:	aam    0x14
  4136ea:	int3   
  4136eb:	pop    edi
  4136ec:	je     0x41371f
  4136ee:	dec    ebx
  4136ef:	xor    eax,0x40aac669
  4136f4:	xor    cl,BYTE PTR [ecx+0x4b8cef80]
  4136fa:	in     eax,0xea
  4136fc:	jnp    0x4136cf
  4136fe:	inc    ebx
  4136ff:	jl     0x413735
  413701:	xor    dl,BYTE PTR [ebp-0x33df946b]
  413707:	push   es
  413708:	cmp    al,0x1c
  41370a:	mov    ah,0x41
  41370c:	jg     0x4136cc
  41370e:	xchg   esi,eax
  41370f:	dec    ecx
  413710:	push   edi
  413711:	push   esi
  413712:	cmp    DWORD PTR [edi-0x54],edi
  413715:	int3   
  413716:	cmove  esi,DWORD PTR [esi+0x77]
  41371a:	mov    eax,ebp
  41371c:	out    0x74,al
  41371e:	push   ss
  41371f:	rcl    DWORD PTR ss:[ebp-0x66],1
  413723:	xchg   esi,eax
  413724:	je     0x413757
  413726:	retf   0x41cc
  413729:	mov    cl,0x3b
  41372b:	bound  ebx,QWORD PTR [edi+0xa]
  41372e:	dec    edi
  41372f:	outs   dx,BYTE PTR ds:[esi]
  413730:	sbb    DWORD PTR [eax],0xe3d4d100
  413736:	xor    BYTE PTR [edx-0x70fcecb4],ah
  41373c:	push   ss
  41373d:	jae    0x4136e5
  41373f:	ds jge 0x413730
  413742:	and    esp,edi
  413744:	mov    bh,0xb6
  413746:	and    al,0x92
  413748:	mov    edi,0x63183aca
  41374d:	inc    ebp
  41374e:	or     ebx,DWORD PTR ds:0x818b4b87
  413754:	or     cl,BYTE PTR [esi]
  413756:	mov    ds:0xece59a59,al
  41375b:	push   ds
  41375c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41375d:	pushf  
  41375e:	jecxz  0x4136ef
  413760:	mov    bh,0x52
  413762:	ja     0x413778
  413764:	imul   edx,DWORD PTR [eax+0x65],0xa46a3656
  41376b:	dec    esp
  41376c:	pusha  
  41376d:	mov    edi,0xba271a7f
  413772:	fucom  st(2)
  413774:	adc    eax,0x9a2c2abe
  413779:	lds    edx,FWORD PTR [ebx+0x2b]
  41377c:	dec    ecx
  41377d:	sbb    eax,0x55c52333
  413782:	pop    ds
  413783:	adc    al,0x1
  413785:	test   eax,0x8daf2f5d
  41378a:	jmp    0x4137dc
  41378c:	add    BYTE PTR [edx+edx*4+0x2b231b2d],dl
  413793:	fcmovbe st,st(0)
  413795:	in     eax,0xa6
  413797:	jae    0x41377a
  413799:	mov    al,ds:0x2783325f
  41379e:	call   0x4ccf74f8
  4137a3:	sub    ebp,DWORD PTR [ecx-0x6c]
  4137a6:	push   ds
  4137a7:	in     al,0xb0
  4137a9:	mov    al,0x2c
  4137ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ac:	lahf   
  4137ad:	cmp    al,bl
  4137af:	sbb    al,0xda
  4137b1:	ja     0x413826
  4137b3:	shr    BYTE PTR [edi],1
  4137b5:	fiadd  WORD PTR [edx+0x68]
  4137b8:	sub    BYTE PTR [ebx+ecx*1+0x67ecf0ef],bh
  4137bf:	or     ebp,ecx
  4137c1:	(bad)  
  4137c2:	cld    
  4137c3:	pop    esp
  4137c4:	out    dx,eax
  4137c5:	xchg   BYTE PTR [ebp+edx*2+0x4c],al
  4137c9:	stos   DWORD PTR es:[edi],eax
  4137ca:	fadd   DWORD PTR [ebp+0x48]
  4137cd:	xchg   DWORD PTR [edx-0x605f136e],edi
  4137d3:	loopne 0x413832
  4137d5:	jge    0x413798
  4137d7:	add    ecx,edx
  4137d9:	daa    
  4137da:	aaa    
  4137db:	xor    DWORD PTR [ebx+eiz*1],eax
  4137de:	push   0x31
  4137e0:	call   0xd9a9:0x75dabd48
  4137e7:	cmp    eax,DWORD PTR [edx+0x614d524a]
  4137ed:	xchg   esp,eax
  4137ee:	in     eax,0x84
  4137f0:	arpl   bx,dx
  4137f2:	dec    eax
  4137f3:	out    0x2e,eax
  4137f5:	test   DWORD PTR [ebx],ebp
  4137f7:	xchg   esi,eax
  4137f8:	pop    esi
  4137f9:	fmul   DWORD PTR [edi+0x6bcfac72]
  4137ff:	xchg   BYTE PTR ds:0x2c3f2923,bl
  413805:	xor    DWORD PTR [esi-0x54afc0e0],esp
  41380b:	loopne 0x4137f2
  41380d:	in     al,dx
  41380e:	daa    
  41380f:	fld    TBYTE PTR [edx+0x47777440]
  413815:	mov    al,0xaa
  413817:	in     al,dx
  413818:	sbb    bl,BYTE PTR [edx]
  41381a:	lds    ebp,FWORD PTR ds:[ecx+0x70]
  41381e:	mov    BYTE PTR [eax+esi*4+0x70],ah
  413822:	jo     0x41380f
  413824:	push   cs
  413825:	shl    ebp,1
  413827:	(bad)  
  413828:	scas   al,BYTE PTR es:[edi]
  413829:	mov    ds:0x54a344e8,al
  41382e:	stc    
  41382f:	daa    
  413830:	xchg   ebp,eax
  413831:	xor    eax,0x9a817479
  413836:	mov    esp,0x6c1ce021
  41383b:	mov    bh,0xd8
  41383d:	je     0x413814
  41383f:	shl    BYTE PTR [edi],cl
  413841:	jmp    edi
  413843:	dec    esp
  413844:	pop    ebp
  413845:	mov    ah,0x43
  413847:	mov    bh,0x94
  413849:	adc    eax,0x602ae8b5
  41384e:	retf   0xb7e7
  413851:	mov    esi,0x3c062a91
  413856:	sub    eax,0xbf1bb58e
  41385b:	(bad)  
  41385d:	sbb    al,bh
  41385f:	gs inc esi
  413861:	cld    
  413862:	loopne 0x413800
  413864:	aas    
  413865:	push   eax
  413866:	add    eax,0x9637a658
  41386b:	inc    eax
  41386c:	adc    ebx,edi
  41386e:	mov    ah,0x19
  413870:	cmp    bh,BYTE PTR [ebx]
  413872:	xchg   edi,eax
  413873:	(bad)  
  413874:	std    
  413875:	pop    ebx
  413876:	xor    dl,dh
  413878:	cdq    
  413879:	adc    eax,0x9ea9a1d4
  41387e:	cmp    cl,BYTE PTR [ebx+0x61b4f102]
  413884:	inc    esp
  413885:	sti    
  413886:	rcr    DWORD PTR [esi+0x54],1
  413889:	int    0x34
  41388b:	loopne 0x413819
  41388d:	aaa    
  41388e:	adc    BYTE PTR [ebp+0x6],ah
  413891:	dec    eax
  413892:	push   ebp
  413893:	daa    
  413894:	fs (bad) 
  413896:	(bad)  
  413897:	pop    esi
  413898:	(bad)  
  413899:	xor    esp,esi
  41389b:	sar    esi,0x2b
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	inc    ebx
  4138a0:	and    dh,BYTE PTR [ecx]
  4138a2:	mov    DWORD PTR [edx*8-0x5af6d2ba],esp
  4138a9:	push   0xf9368999
  4138ae:	jg     0x413911
  4138b0:	pop    ecx
  4138b1:	jl     0x4138c3
  4138b3:	call   0xcc468dc1
  4138b8:	arpl   WORD PTR [edx],si
  4138ba:	add    BYTE PTR [ebx-0x17],bh
  4138bd:	int    0x57
  4138bf:	mov    esi,0xd98669a9
  4138c4:	and    ecx,esi
  4138c6:	pop    ecx
  4138c7:	mov    edi,0xa4ac1510
  4138cc:	xchg   ebp,eax
  4138cd:	fnstsw WORD PTR ds:0x2ea42c8
  4138d3:	mov    edi,0xe859ca02
  4138d8:	fcmovnu st,st(7)
  4138da:	inc    ebx
  4138db:	je     0x4138a7
  4138dd:	into   
  4138de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138df:	and    eax,0x28d341ee
  4138e4:	icebp  
  4138e5:	gs ss dec edi
  4138e8:	ret    
  4138e9:	loopne 0x4138f8
  4138eb:	xchg   ebp,eax
  4138ec:	popf   
  4138ed:	repnz cmp eax,0xcacdcf7e
  4138f3:	imul   esp,DWORD PTR [ebx+edx*1],0x65
  4138f7:	mov    ecx,0xd028d88e
  4138fc:	sub    esp,edi
  4138fe:	cmp    eax,DWORD PTR [ecx]
  413900:	inc    ebx
  413901:	inc    ebp
  413902:	pushf  
  413903:	sub    eax,0xc9825d59
  413908:	repz (bad) 
  41390b:	je     0x413922
  41390d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41390e:	test   esp,ebx
  413910:	mov    ecx,0x38019bd5
  413915:	mov    ah,0x87
  413917:	adc    dh,BYTE PTR [esp+edi*4]
  41391a:	out    0x5,eax
  41391c:	jmp    0x344c:0xf4b21c7a
  413923:	or     eax,0xd4219256
  413928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413929:	inc    ecx
  41392a:	cmp    cl,BYTE PTR [ebp-0x74]
  41392d:	mov    ch,0x87
  41392f:	iret   
  413930:	loop   0x413969
  413932:	mov    eax,0xa5f50c88
  413937:	cmp    BYTE PTR [ebx+esi*1+0x36a7282c],cl
  41393e:	mov    ebx,0x3419a7ee
  413943:	(bad)  
  413944:	aaa    
  413945:	and    dh,BYTE PTR fs:[edx+0x4e3b882d]
  41394c:	inc    ebp
  41394d:	adc    DWORD PTR [edi],esi
  41394f:	xor    DWORD PTR [esi+ecx*2-0x6cc3a7da],esi
  413956:	xor    BYTE PTR [edi+0x56774e5f],dh
  41395c:	addr16 pop ebx
  41395e:	xor    BYTE PTR [eax],bl
  413960:	repz test eax,0xddc82cca
  413966:	in     al,0xf0
  413968:	test   al,0x8
  41396a:	(bad)  
  41396b:	sahf   
  41396c:	or     esi,DWORD PTR ds:0x56c07dba
  413972:	jae    0x413950
  413974:	imul   esi,DWORD PTR [edx],0xb544e3cd
  41397a:	pop    ss
  41397b:	int3   
  41397c:	adc    DWORD PTR [edi+0x27],ebp
  41397f:	stc    
  413980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413981:	dec    eax
  413982:	lods   eax,DWORD PTR ds:[esi]
  413983:	xchg   DWORD PTR [ebx+eax*8-0x641b5dde],edi
  41398a:	aas    
  41398b:	and    edx,DWORD PTR [esi]
  41398d:	mov    BYTE PTR [edx],dl
  41398f:	add    bh,BYTE PTR [edx-0x7a12e66a]
  413995:	inc    edx
  413996:	mov    ah,ah
  413998:	(bad)  [eax+0x7d]
  41399b:	ret    
  41399c:	jecxz  0x413943
  41399e:	xor    BYTE PTR [ecx+0x4d6730d1],dh
  4139a4:	rcl    BYTE PTR [edi],cl
  4139a6:	jbe    0x413a03
  4139a8:	icebp  
  4139a9:	pop    ds
  4139aa:	push   es
  4139ab:	mov    cl,BYTE PTR [eax-0x4c09791a]
  4139b1:	(bad)  
  4139b2:	fnsave [ecx-0x6e]
  4139b5:	test   BYTE PTR [ecx-0x54],bh
  4139b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b9:	xlat   BYTE PTR ds:[ebx]
  4139ba:	cwde   
  4139bb:	(bad)  
  4139bc:	ins    BYTE PTR es:[edi],dx
  4139bd:	xchg   ecx,eax
  4139be:	mov    bh,0x85
  4139c0:	push   ds
  4139c1:	lock fisttp QWORD PTR ds:0x7dad0988
  4139c8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4139ca:	(bad)  
  4139cc:	dec    edi
  4139cd:	mov    ah,0x33
  4139cf:	xor    DWORD PTR [edi],esi
  4139d1:	out    dx,al
  4139d2:	sub    ch,bl
  4139d4:	fist   DWORD PTR [edi-0x266647cd]
  4139da:	arpl   WORD PTR [edi-0x2f],dx
  4139dd:	xchg   dl,bl
  4139df:	es xor al,0x55
  4139e2:	cs out dx,eax
  4139e4:	rol    DWORD PTR [eax],cl
  4139e6:	adc    al,0x7d
  4139e8:	adc    al,0x69
  4139ea:	retf   
  4139eb:	je     0x413a3b
  4139ed:	and    DWORD PTR [ebp-0x61],ebx
  4139f0:	lods   al,BYTE PTR ds:[esi]
  4139f1:	std    
  4139f2:	leave  
  4139f3:	(bad)  
  4139f5:	inc    esi
  4139f6:	sub    al,BYTE PTR [ebp-0x3f63e3d8]
  4139fc:	lock add esi,DWORD PTR [esi+0xf908270]
  413a03:	rcl    DWORD PTR [edi+0x38],0xc2
  413a07:	xchg   ecx,eax
  413a08:	fmulp  st(3),st
  413a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a0b:	add    eax,0x458b1720
  413a10:	cs in  eax,0xaa
  413a13:	add    DWORD PTR [ecx],0xffffff92
  413a16:	add    ah,bh
  413a18:	adc    cl,BYTE PTR [ebp-0x16]
  413a1b:	push   ecx
  413a1c:	shl    DWORD PTR [ebx+0x74],cl
  413a1f:	mov    bl,al
  413a21:	les    ebx,FWORD PTR [ecx+0x33]
  413a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a25:	and    eax,ebp
  413a27:	int3   
  413a28:	cmp    bl,dl
  413a2a:	out    0x5,al
  413a2c:	lea    ebx,[eax]
  413a2e:	and    DWORD PTR [ebp-0x2cd3139a],ebx
  413a34:	scas   al,BYTE PTR es:[edi]
  413a35:	shl    BYTE PTR [ebp+0xac935e3],0x83
  413a3c:	mov    ebx,0x5180de9e
  413a41:	xor    bh,al
  413a43:	ret    0x1164
  413a46:	pop    ebp
  413a47:	push   ss
  413a48:	push   ss
  413a49:	xchg   esi,eax
  413a4a:	jge    0x413a34
  413a4c:	and    DWORD PTR [ecx],esp
  413a4e:	inc    esp
  413a4f:	rcl    DWORD PTR [ebx+0x40b4f667],0x2e
  413a56:	xchg   edi,eax
  413a57:	gs das 
  413a59:	sbb    al,0xe7
  413a5b:	fisttp QWORD PTR [esi]
  413a5d:	add    esi,ebp
  413a5f:	and    al,0x2
  413a61:	(bad)  
  413a62:	jmp    0xb26d328
  413a67:	pop    esp
  413a68:	dec    ebx
  413a69:	sbb    BYTE PTR [ebx+eax*4+0x59a5d49b],0xb6
  413a71:	add    eax,0x3eb4d7cd
  413a76:	int3   
  413a77:	jns    0x413a57
  413a79:	ins    DWORD PTR es:[edi],dx
  413a7a:	mov    BYTE PTR [ecx],cl
  413a7c:	jp     0x413a41
  413a7e:	out    dx,eax
  413a7f:	cvttps2pi mm6,QWORD PTR [eax]
  413a82:	clc    
  413a83:	fwait
  413a84:	jnp    0x413a1b
  413a86:	test   dl,dh
  413a88:	pop    ss
  413a89:	jbe    0x413a13
  413a8b:	mov    esi,0xb819a3d0
  413a90:	int3   
  413a91:	test   WORD PTR [ecx-0x2c4b9b2e],dx
  413a98:	test   eax,0xff6a31a8
  413a9d:	scas   al,BYTE PTR es:[edi]
  413a9e:	aam    0xc3
  413aa0:	jmp    0x256f50d9
  413aa5:	(bad)  
  413aa6:	cmp    eax,0x9bd12768
  413aab:	cmp    al,0x88
  413aad:	in     al,0x32
  413aaf:	dec    ecx
  413ab0:	hlt    
  413ab1:	ret    
  413ab2:	(bad)  
  413ab3:	in     al,0xc2
  413ab5:	add    eax,0xaa572c54
  413aba:	pop    esp
  413abb:	sbb    ebx,ebp
  413abd:	hlt    
  413abe:	xchg   ecx,eax
  413abf:	lods   eax,DWORD PTR ds:[esi]
  413ac0:	ret    
  413ac1:	ja     0x413b22
  413ac3:	push   ecx
  413ac4:	mov    ds:0xf05ecb0c,al
  413ac9:	arpl   WORD PTR [esi],ax
  413acb:	pop    ss
  413acc:	or     ecx,ecx
  413ace:	dec    ebx
  413acf:	iret   
  413ad0:	mov    ch,0x25
  413ad2:	lock in al,0x1a
  413ad5:	jnp    0x413b47
  413ad7:	and    DWORD PTR [esi-0x28],0x48
  413adb:	mov    dl,0xae
  413add:	xchg   ecx,eax
  413ade:	sub    eax,0x2752ab6f
  413ae3:	push   edx
  413ae4:	(bad)  
  413ae5:	xchg   edi,eax
  413ae6:	sti    
  413ae7:	(bad)  
  413ae8:	push   ebp
  413ae9:	out    dx,eax
  413aea:	pusha  
  413aeb:	into   
  413aec:	in     al,dx
  413aed:	cli    
  413aee:	mov    edi,0x74547ad3
  413af3:	mov    dl,0x87
  413af5:	mov    WORD PTR [edx-0x7b],ss
  413af8:	inc    eax
  413af9:	inc    eax
  413afa:	sub    eax,0xe08fc2ee
  413aff:	jle    0x413b2a
  413b01:	adc    eax,0xede48a2d
  413b06:	jg     0x413ae6
  413b08:	mov    ch,0x25
  413b0a:	les    ebp,FWORD PTR [esi+eax*8+0x4]
  413b0e:	or     DWORD PTR [ebp+0x77e1612d],ebx
  413b14:	lds    edx,FWORD PTR [ebx]
  413b16:	(bad)  
  413b17:	and    eax,0x237538fd
  413b1c:	gs retf 0x5108
  413b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b21:	fbld   TBYTE PTR ds:0x9d77a894
  413b27:	mov    esp,DWORD PTR [edx-0x33]
  413b2a:	ret    
  413b2b:	test   eax,0xa2cfcd7f
  413b30:	ins    DWORD PTR es:[edi],dx
  413b31:	dec    edi
  413b32:	push   edi
  413b33:	icebp  
  413b34:	sbb    eax,0x2c14e769
  413b39:	cs mov dl,0xcb
  413b3c:	fcom   DWORD PTR [edx+0x1f165ed1]
  413b42:	imul   esi,esp,0xf454a623
  413b48:	or     DWORD PTR [ebx+0x61a0f31d],eax
  413b4e:	xor    cl,ah
  413b50:	push   ds
  413b51:	inc    esp
  413b52:	cli    
  413b53:	div    DWORD PTR [edx+ebp*1]
  413b56:	and    ch,BYTE PTR [esi+ecx*4]
  413b59:	cwde   
  413b5a:	call   FWORD PTR [eax]
  413b5c:	or     cl,BYTE PTR ds:0xd822617d
  413b62:	test   BYTE PTR [esi+0x37b0fa5c],0xbf
  413b69:	lods   eax,DWORD PTR ds:[esi]
  413b6a:	(bad)  
  413b6b:	and    ebx,DWORD PTR [ecx-0x6d]
  413b6e:	jge    0x413be6
  413b70:	bound  edx,QWORD PTR [ebx+0x42]
  413b73:	adc    al,0x2a
  413b75:	int    0x7
  413b77:	pop    es
  413b78:	enter  0x587f,0x61
  413b7c:	cs jle 0x413b39
  413b7f:	in     al,dx
  413b80:	sbb    BYTE PTR [esi-0x46ac3a0e],bh
  413b86:	stos   BYTE PTR es:[edi],al
  413b87:	xor    al,0x45
  413b89:	div    BYTE PTR [eax+0x3c876d0]
  413b8f:	enter  0x1909,0x1
  413b93:	in     eax,dx
  413b94:	clc    
  413b95:	repnz repnz rcl ah,0xf9
  413b9a:	aam    0xf1
  413b9c:	pop    esi
  413b9d:	aad    0x81
  413b9f:	pop    esi
  413ba0:	xchg   ecx,eax
  413ba1:	push   esi
  413ba2:	mov    esi,0x2d30e876
  413ba7:	sbb    ebp,DWORD PTR [ebx]
  413ba9:	mov    ch,0x48
  413bab:	loopne 0x413b6d
  413bad:	and    ebx,DWORD PTR [edx-0x70b3fb94]
  413bb3:	and    DWORD PTR [ebp+0xc],ebp
  413bb6:	xor    DWORD PTR [ecx],ebx
  413bb8:	imul   edx,DWORD PTR [edi-0xb],0x5745a249
  413bbf:	add    ebx,edx
  413bc1:	or     BYTE PTR ds:0x1db740d9,ch
  413bc7:	pop    eax
  413bc8:	out    dx,al
  413bc9:	lea    ebx,[ebx+0x19]
  413bcc:	dec    ecx
  413bcd:	adc    ebp,ebp
  413bcf:	sbb    esi,DWORD PTR [esp+edi*1]
  413bd2:	lea    ebp,[edx+esi*2]
  413bd5:	out    0xc6,eax
  413bd7:	fucompp 
  413bd9:	and    bl,cl
  413bdb:	loop   0x413bcd
  413bdd:	or     BYTE PTR [edi+0x47591f60],0x8b
  413be4:	dec    ebp
  413be5:	clc    
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	dec    ebx
  413d45:	adc    eax,0x2b5f6db1
  413d4a:	and    eax,0x4f68242
  413d4f:	stos   DWORD PTR es:[edi],eax
  413d50:	inc    edi
  413d51:	cmp    bl,dl
  413d53:	pop    DWORD PTR [ecx]
  413d55:	add    BYTE PTR [eax],al
  413d57:	add    BYTE PTR [ebp+0x3a],al
  413d5a:	pop    esp
  413d5b:	dec    ecx
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
